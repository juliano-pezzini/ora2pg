-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebe_convenio ( nr_sequencia_p bigint, xml_p xml) AS $body$
DECLARE


_ora2pg_r RECORD;
ie_conversao_w					intpd_eventos_sistema.ie_conversao%type;
nr_seq_projeto_xml_w			intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_sistema_w				intpd_eventos_sistema.nr_seq_sistema%type;
ie_sistema_externo_w			varchar(15);
reg_integracao_w				gerar_int_padrao.reg_integracao_conv;
nr_seq_regra_w					conversao_meio_externo.nr_seq_regra%type;
ds_erro_w						varchar(4000);
ie_erro_w						varchar(1) := 'N';
ie_exception_w					varchar(1) := 'N';
qt_convenio_w					bigint;
qt_convenio_estab_w				bigint;
i								integer;
ie_fisrt_time_w					varchar(1) := 'S';
convenio_w						convenio%rowtype;
convenio_estabelecimento_w		convenio_estabelecimento%rowtype;
convenio_checklist_w			convenio_checklist%rowtype;
convenio_checklist_item_w		convenio_checklist_item%rowtype;
convenio_checklist_item_vl_w	convenio_checklist_item_vl%rowtype;
regra_agecons_convenio_w		regra_agecons_convenio%rowtype;
ie_ajustar_ins_upd_w		intpd_eventos_sistema.ie_ajustar_ins_upd%type;
ie_ajustar_upd_ins_w		intpd_eventos_sistema.ie_ajustar_upd_ins%type;

/*
Estrutura

open c01: INSURANCE
|	open C02: ESTABLISHMENT_INSURANCE
|	|
|	close c02
|	
|	open C03: CHECKLIST
|	|	open c04: CHECKLIST_ITEM
|	|	|	open c05: CHECKLIST_ITEM_VALUE
|	|	|	|
|	|	|	close c05
|	|	close c04
|	close c03	
close c01
*/
c01 CURSOR FOR
SELECT	*
from	xmltable('/STRUCTURE/INSURANCE' passing xml_p columns
	ie_action					varchar(40)		path		'IE_ACTION',
	cd_convenio					integer			path		'CD_INSURANCE',
	cd_interno					varchar(15)		path		'CD_INTERNAL',
	cd_cgc						varchar(14)		path		'CD_LEGAL_ENTITY',
	cd_condicao_pagamento		varchar(40)		path		'CD_PAYMENT_CONDITION',
	ds_convenio					varchar(255)		path		'DS_INSURANCE',
	ds_observacao				varchar(2000)		path		'DS_NOTE',
	dt_cancelamento				varchar(14)		path		'DT_CANCELLATION',
	dt_dia_vencimento			smallint			path		'DT_EXPIRATION_DAY',
	dt_inclusao					varchar(14)		path		'DT_INCLUSION',
	dt_atualizacao				varchar(14)		path		'DT_UPDATE',
	ie_tipo_acomodacao			smallint			path		'IE_ACCOMMODATION_TYPE',
	ie_titulo_receber			varchar(1)			path		'IE_ACCOUNTS_REC_GENERATION',
	ie_preco_medio_material		varchar(1)			path		'IE_AVERAGE_MATERIAL_PRICE',
	ie_agenda_consulta			varchar(1)			path		'IE_CONSULTATION_SCHEDULE',
	ie_doc_convenio				varchar(1)			path		'IE_DOCUMENT_ITEM',
	ie_agrup_item_interf		varchar(1)			path		'IE_GROUPING_INTERF_ITEM',
	ie_origem_preco				varchar(5)			path		'IE_PRICE_ORIGIN',
	ie_precedencia_preco		varchar(1)			path		'IE_PRICE_PRECEDENCE',
	ie_rep_cod_usuario			varchar(1)			path		'IE_REPEAT_ENCOUNTER_USER_CODE',
	ie_exige_senha_atend		varchar(1)			path		'IE_REQUIRES_CODE',
	ie_exige_orc_atend			varchar(1)			path		'IE_REQUIRES_ESTIMATE_ENCOUNTER',
	ie_exige_data_ult_pagto		varchar(1)			path		'IE_REQUIRES_LAST_PAYMENT_DATE',
	ie_exige_plano				varchar(1)			path		'IE_REQUIRES_PLAN_ENCOUNTER',
	ie_exige_carteira_atend		varchar(1)			path		'IE_REQUIRES_REG_CARD_ENCOUNTER',
	ie_exige_tipo_guia			varchar(1)			path		'IE_REQUIRES_TYPE_FORM',
	ie_exige_validade_atend		varchar(1)			path		'IE_REQUIRES_VALIDITY_ENCOUNTER',
	ie_calc_porte				varchar(1)			path		'IE_ROOM_FEE_CALCULATION',
	ie_conversao_mat			varchar(1)			path		'IE_RULE_MATERIAL_CODE_CONV',
	ie_situacao					varchar(1)			path		'IE_SITUATION',
	ie_solic_exame_tasymed		varchar(1)			path		'IE_TASYMED_EXAM',
	ie_tipo_convenio			smallint			path		'IE_TYPE_INSURANCE',
	ie_consiste_autor			varchar(1)			path		'IE_VALIDATE_ACCOUNT_AUTHORIZATION',
	nm_usuario					varchar(15)		path		'NM_USER',
	nr_doc_externo				varchar(80)		path		'NR_EXTERNAL_DOCUMENT',
	qt_conta_protocolo			integer			path		'NR_PROTOCOL_ACCOUNTS',
	nr_multiplo_envio			bigint		path		'NR_SENDING_MULTIPLE',
	/*Transforma um subnível da estrutura XML num xmltype, que será utilizado posteriormente na consulta, transformando-o num tipo de tabela*/

	xml_establishments_insurance	xml			path		'ESTABLISHMENTS_INSURANCE',
	xml_checklists					xml			path		'CHECKLISTS',
	xml_rules_consult_schedule		xml			path		'RULES_CONSULT_SCHEDULE');
c01_w	c01%rowtype;
	
c02 CURSOR FOR
SELECT	*
from	xmltable('/ESTABLISHMENTS_INSURANCE/ESTABLISHMENT_INSURANCE' passing c01_w.xml_establishments_insurance columns
	ie_action					varchar(40)		path		'IE_ACTION',
	cd_estabelecimento			varchar(40)		path		'CD_ESTABLISHMENT',
	dt_atualizacao				varchar(14)     	path		'DT_UPDATE',
	ie_titulo_receber			varchar(1)			path		'IE_ACCOUNT_RECEIVABLE_GENERATION',
	ie_separa_conta				varchar(1)			path		'IE_ACCOUNT_SEPARATE_FORM',
	ie_agenda_consulta			varchar(1)			path		'IE_ALLOWS_ENCOUNTER_SCHEDULING',
	ie_obter_preco_mat_autor	varchar(1)			path		'IE_AUTHOR_MATERIAL_PRICE',
	ie_preco_medio_material		varchar(1)			path		'IE_AVERAGE_MATERIAL_PRICE',
	ie_cancelar_conta			varchar(1)			path		'IE_CANCEL_ACCOUNT_WITHOUT_INV',
	ie_fechar_atend_adiant		varchar(1)			path		'IE_CLOSE_ACCOUNT_NONSETTLED_ADV',
	ie_doc_autorizacao			varchar(1)			path		'IE_DOC_AUTHOR_INSURANCE',
	ie_doc_convenio				varchar(3)			path		'IE_DOCUMENT_ITEM',
	ie_regra_prior_edicao		varchar(3)			path		'IE_EDITION_PRIORITY_RULE',
	ie_forma_proc_princ			varchar(3)			path		'IE_FORM_DISPLAY_MAIN_PROC',
	ie_conta_fim_mes			varchar(1)			path		'IE_GENER_ACCOUNT_END_MONTH',
	ie_gerar_nf					varchar(1)			path		'IE_GENER_INVOICE',
	ie_gerar_nf_titulo			varchar(1)			path		'IE_GENERATE_INV_WITHOUT_INV',
	ie_consiste_guia_atend		varchar(1)			path		'IE_INCLUDES_FORM_DUPLICATE_SERV',
	ie_forma_geracao_nf			varchar(15)		path		'IE_INVOICE_GENERATION',
	ie_titulo_sem_nf			varchar(1)			path		'IE_INVOICE_WITHOUT_INVOICE',
	ie_manter_zerado_edicao		varchar(1)			path		'IE_KEEP_PROCEDURE_ZERO_PRICE',
	ie_conversao_mat			varchar(1)			path		'IE_MATERIAL_INSURANCE_RULE',
	ie_doc_conv_part_func		varchar(1)			path		'IE_MEDICAL_FUNCTION_CODE',
	ie_trat_conta_rn			varchar(15)		path		'IE_NEWBORN_EXPENSE_DEST',
	ie_partic_resp_cred			varchar(1)			path		'IE_PARTIC_CREDIT_RESPONSIBLE',
	ie_rep_cod_usuario			varchar(1)			path		'IE_REPEAT_ENCOUNTER_USER_CODE',
	ie_exige_lib_bras			varchar(1)			path		'IE_REQUIRES_BRAS_SUBMISSION',
	ie_exige_senha_atend		varchar(1)			path		'IE_REQUIRES_CODE',
	ie_exige_fim_vigencia		varchar(1)			path		'IE_REQUIRES_END_DATE_VALIDITY',
	ie_exige_orc_atend			varchar(1)			path		'IE_REQUIRES_ESTIMATE_ENCOUNTER',
	ie_exige_data_ult_pagto		varchar(1)			path		'IE_REQUIRES_LAST_PAYMENT_DATE',
	ie_exige_plano				varchar(1)			path		'IE_REQUIRES_PLAN_ENCOUNTER',
	ie_exige_carteira_atend		varchar(1)			path		'IE_REQUIRES_REG_CARD_ENCOUNTER',
	ie_exige_validade_atend		varchar(1)			path		'IE_REQUIRES_VALIDITY_ENCOUNTER',
	ie_protocolo_conta			varchar(3)			path		'IE_RULE_ENTERING_PROT_ACCOUNTS',
	ie_cgc_cih					varchar(1)			path		'IE_SEND_EMPLOYER_FILE',
	ie_medico_cooperado			varchar(1)			path		'IE_VALID_PHYSICAN_COOP_MEMBER',
	nm_usuario					varchar(15)		path		'NM_USER',
	qt_conta_protocolo			integer			path		'QT_PROTOCOL_ACCOUNTS');
c02_w	c02%rowtype;

c03 CURSOR FOR
SELECT	*
from	xmltable('/CHECKLISTS/CHECKLIST' passing c01_w.xml_checklists columns	
	ie_action			varchar(40)			path		'IE_ACTION',
	nr_doc_externo		varchar(40)			path		'NR_CHECKLIST',
	ds_checklist		varchar(255)			path		'DS_CHECKLIST',
	dt_atualizacao		/*date*/
 varchar(14)	path		'DT_UPDATE',
	nm_usuario			varchar(15)			path		'NM_USER',
	ie_situacao			varchar(1)				path		'IE_SITUATION',
	/*Transforma um subnível da estrutura XML num xmltype, que será utilizado posteriormente na consulta, transformando-o num tipo de tabela*/

	xml_checklist_items		xml				path		'CHECKLIST_ITEMS');
c03_w	c03%rowtype;

c04 CURSOR FOR
SELECT	*
from	xmltable('/CHECKLIST_ITEMS/CHECKLIST_ITEM' passing c03_w.xml_checklist_items columns	
	ie_action			varchar(40)		path		'IE_ACTION',
	NR_DOC_EXTERNO		varchar(40)		path		'NR_SEQ_ITEM',
	DS_TITULO			varchar(255)		path		'DS_TITLE',
	IE_FORMATO			varchar(15)		path		'IE_FIELD_FORMAT',
	NR_SEQ_APRESENTACAO	bigint			path		'NR_DISPLAY_SEQ',
	DT_ATUALIZACAO		varchar(14)		path		'DT_UPDATE',
	NM_USUARIO			varchar(15)		path		'NM_USER',
	IE_SITUACAO			varchar(1)			path		'IE_SITUATION',
	/*Transforma um subnível da estrutura XML num xmltype, que será utilizado posteriormente na consulta, transformando-o num tipo de tabela*/

	xml_checklist_item_values	xml		path		'CHECKLIST_ITEM_VALUES');
c04_w	c04%rowtype;

c05 CURSOR FOR
SELECT	*
from	xmltable('/CHECKLIST_ITEM_VALUES/CHECKLIST_ITEM_VALUE' passing c04_w.xml_checklist_item_values columns
        ie_action			varchar(40)		path		'IE_ACTION',
  	ie_valor				varchar(15)		path		'IE_VALUE',	
	ds_valor				varchar(80)		path		'DS_VALUE',
	ie_ident_verdadeiro		varchar(15)		path		'IE_TRUE_IDENTIFY',
	qt_tamanho_campo		bigint			path		'QT_MAXIMUM_SIZE');
c05_w	c05%rowtype;

c06 CURSOR FOR
SELECT	*
from	xmltable('/RULES_CONSULT_SCHEDULE/RULE_CONSULT_SCHEDULE' passing c01_w.xml_rules_consult_schedule columns
	CD_MEDICO				varchar(40)		path		'CD_PHYSICIAN',
	CD_AGENDA				varchar(40)		path		'CD_SCHEDULE',
	CD_ESPECIALIDADE		varchar(40)		path		'CD_SPECIALTY',
	CD_CATEGORIA			varchar(40)		path		'CD_CATEGORY',
	CD_PLANO_CONVENIO		varchar(40)		path		'CD_PLAN',
	CD_ESTABELECIMENTO		varchar(40)		path		'CD_ESTABLISHMENT',
	CD_SETOR_ATENDIMENTO	varchar(40)		path		'CD_CARE_DEPARTMENT',	
	IE_FORMA_CONSISTE_SETOR	varchar(40)		path		'IE_RULE_DEPART_VALIDATION',
	IE_PERMITE				varchar(40)		path		'IE_RULE_SCHEDULING',
	NM_USUARIO				varchar(40)		path		'NM_USER',
	DT_ATUALIZACAO			varchar(14)		path		'DT_UPDATE');
c06_w	c06%rowtype;
	

BEGIN

/*Atualiza o status da fila para Em processamento*/

update	intpd_fila_transmissao
set		ie_status = 'R'
where	nr_sequencia = nr_sequencia_p;

commit;

begin

select	coalesce(b.ie_conversao,'I'),
		nr_seq_sistema,
		nr_seq_projeto_xml,
		nr_seq_regra_conv,
		ie_ajustar_ins_upd,
		ie_ajustar_upd_ins		
into STRICT	ie_conversao_w,
		nr_seq_sistema_w,
		nr_seq_projeto_xml_w,
		nr_seq_regra_w,
		ie_ajustar_ins_upd_w,
		ie_ajustar_upd_ins_w
from	intpd_fila_transmissao a,
		intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and		a.nr_sequencia = nr_sequencia_p;

ie_sistema_externo_w						:=	nr_seq_sistema_w;
reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
reg_integracao_w.ie_envio_recebe			:=	'R';
reg_integracao_w.ie_sistema_externo			:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao				:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml			:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao		:=	nr_seq_regra_w;
reg_integracao_w.intpd_log_receb.delete;
reg_integracao_w.qt_reg_log					:=	0;

open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	begin
	ie_erro_w						:= 	'N';
	reg_integracao_w.nm_tabela		:=	'CONVENIO';
	reg_integracao_w.nm_elemento	:=	'INSURANCE';
	reg_integracao_w.nr_seq_visao	:=	27576; /*HTML5 - Cadastro de Convênios*/
	
	if (coalesce(upper(c01_w.ie_action),'INSERT') = 'DELETE') THEN
				
		select 	count(*)
		into STRICT	qt_convenio_w
		from 	convenio
		where 	cd_convenio = c01_w.cd_convenio;
		
		if (qt_convenio_w > 0) then		
							
			begin
			delete	FROM convenio
			where	cd_convenio = c01_w.cd_convenio;
			exception
			when others then
				update	convenio
				set		ie_situacao = 'I'
				where	cd_convenio = c01_w.cd_convenio;
			end;
		else
			/*Código de convênio inválido ou inexistente no Tasy para exclusão ou alteração do registro*/

			intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1009381),'INTPDTASY','0004');
			ie_erro_w := 'S';
		end if;
		
	else /*INSERT ou UPDATE*/
	
		if (coalesce(upper(c01_w.ie_action),'INSERT') = 'UPDATE') then
		
			select 	count(*)
			into STRICT	qt_convenio_w
			from 	convenio
			where 	cd_convenio = c01_w.cd_convenio;
				
			if (qt_convenio_w = 0 and upper(ie_ajustar_upd_ins_w) = 'N') then			
				/*Se o sistema externo mandar um UPDATE e o registro não existir no Tasy, tem que retornar uma mensagem e abortar o processo.*/
					
				intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1050616),'INTPDTASY','0013');
				ie_erro_w := 'S';
				
			else
				begin
				select 	*
				into STRICT	convenio_w
				from 	convenio
				where 	cd_convenio = c01_w.cd_convenio;
				exception
				when others then
					null;
				end;
			end if;
			
		elsif (coalesce(upper(c01_w.ie_action),'INSERT') = 'INSERT') then
			begin
			
				select 	count(*)
				into STRICT	qt_convenio_w
				from 	convenio
				where 	cd_convenio = c01_w.cd_convenio;	
			
				if (qt_convenio_w > 0 and upper(ie_ajustar_ins_upd_w) = 'N') then
				/* Se o sistema externo mandar um INSERT e o registro já existir, tem que retornar uma mensagem e abortar o processo.*/

					intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1050615),'INTPDTASY','0014');
					ie_erro_w := 'S';
				end if;
			end;
		end if;
				
	
		if (ie_erro_w = 'N') then
		
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_INTERNO', c01_w.cd_interno, 'N', convenio_w.cd_interno) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.cd_interno := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CGC', c01_w.cd_cgc, 'S', convenio_w.cd_cgc) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.cd_cgc := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CONDICAO_PAGAMENTO', c01_w.cd_condicao_pagamento, 'S', convenio_w.cd_condicao_pagamento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.cd_condicao_pagamento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_CONVENIO', c01_w.ds_convenio, 'N', convenio_w.ds_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ds_convenio := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c01_w.ds_observacao, 'N', convenio_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_CANCELAMENTO', c01_w.dt_cancelamento, 'N', convenio_w.dt_cancelamento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.dt_cancelamento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_DIA_VENCIMENTO', c01_w.dt_dia_vencimento, 'N', convenio_w.dt_dia_vencimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.dt_dia_vencimento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_INCLUSAO', c01_w.dt_inclusao, 'N', convenio_w.dt_inclusao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.dt_inclusao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c01_w.dt_atualizacao, 'N', convenio_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_ACOMODACAO', c01_w.ie_tipo_acomodacao, 'N', convenio_w.ie_tipo_acomodacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_tipo_acomodacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TITULO_RECEBER', c01_w.ie_titulo_receber, 'N', convenio_w.ie_titulo_receber) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_titulo_receber := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PRECO_MEDIO_MATERIAL', c01_w.ie_preco_medio_material, 'N', convenio_w.ie_preco_medio_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_preco_medio_material := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_AGENDA_CONSULTA', c01_w.ie_agenda_consulta, 'N', convenio_w.ie_agenda_consulta) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_agenda_consulta := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_DOC_CONVENIO', c01_w.ie_doc_convenio, 'N', convenio_w.ie_doc_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_doc_convenio := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_AGRUP_ITEM_INTERF', c01_w.ie_agrup_item_interf, 'N', convenio_w.ie_agrup_item_interf) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_agrup_item_interf := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_ORIGEM_PRECO', c01_w.ie_origem_preco, 'N', convenio_w.ie_origem_preco) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_origem_preco := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PRECEDENCIA_PRECO', c01_w.ie_precedencia_preco, 'N', convenio_w.ie_precedencia_preco) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_precedencia_preco := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_REP_COD_USUARIO', c01_w.ie_rep_cod_usuario, 'N', convenio_w.ie_rep_cod_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_rep_cod_usuario := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_SENHA_ATEND', c01_w.ie_exige_senha_atend, 'N', convenio_w.ie_exige_senha_atend) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_exige_senha_atend := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_ORC_ATEND', c01_w.ie_exige_orc_atend, 'N', convenio_w.ie_exige_orc_atend) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_exige_orc_atend := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_DATA_ULT_PAGTO', c01_w.ie_exige_data_ult_pagto, 'N', convenio_w.ie_exige_data_ult_pagto) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_exige_data_ult_pagto := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_PLANO', c01_w.ie_exige_plano, 'N', convenio_w.ie_exige_plano) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_exige_plano := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_CARTEIRA_ATEND', c01_w.ie_exige_carteira_atend, 'N', convenio_w.ie_exige_carteira_atend) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_exige_carteira_atend := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_TIPO_GUIA', c01_w.ie_exige_tipo_guia, 'N', convenio_w.ie_exige_tipo_guia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_exige_tipo_guia := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_VALIDADE_ATEND', c01_w.ie_exige_validade_atend, 'N', convenio_w.ie_exige_validade_atend) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_exige_validade_atend := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CALC_PORTE', c01_w.ie_calc_porte, 'N', convenio_w.ie_calc_porte) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_calc_porte := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CONVERSAO_MAT', c01_w.ie_conversao_mat, 'N', convenio_w.ie_conversao_mat) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_conversao_mat := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SITUACAO', c01_w.ie_situacao, 'N', convenio_w.ie_situacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_situacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SOLIC_EXAME_TASYMED', c01_w.ie_solic_exame_tasymed, 'N', convenio_w.ie_solic_exame_tasymed) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_solic_exame_tasymed := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_CONVENIO', c01_w.ie_tipo_convenio, 'N', convenio_w.ie_tipo_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_tipo_convenio := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CONSISTE_AUTOR', c01_w.ie_consiste_autor, 'N', convenio_w.ie_consiste_autor) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.ie_consiste_autor := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c01_w.nm_usuario, 'N', convenio_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_DOC_EXTERNO', c01_w.nr_doc_externo, 'N', convenio_w.nr_doc_externo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.nr_doc_externo := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONTA_PROTOCOLO', c01_w.qt_conta_protocolo, 'N', convenio_w.qt_conta_protocolo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.qt_conta_protocolo := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_MULTIPLO_ENVIO', c01_w.nr_multiplo_envio, 'N', convenio_w.nr_multiplo_envio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_w.nr_multiplo_envio := _ora2pg_r.ds_valor_retorno_p;
			
			if (reg_integracao_w.qt_reg_log = 0) then
				
				select	max(cd_convenio)
				into STRICT	convenio_w.cd_convenio
				from	convenio
				where 	cd_convenio = c01_w.cd_convenio;
				
				if (coalesce(convenio_w.cd_convenio,0) > 0) then
					update	convenio
					set	row = convenio_w
					where	cd_convenio = convenio_w.cd_convenio;
				else
					select 	max(cd_convenio) + 1
					into STRICT	convenio_w.cd_convenio
					from 	convenio;
					
					convenio_w.nm_usuario_nrec	:= convenio_w.nm_usuario;
					convenio_w.dt_atualizacao_nrec	:= clock_timestamp();
					
					insert into convenio values (convenio_w.*);
					
					/*'Registra a conversão que poderá ser utilizada em outros pontos de integração e para somente atualizar (update) num recebimento futuro do mesmo registro.'*/

					if (nr_seq_regra_w > 0) then
						CALL gerar_conv_meio_externo(null, 'CONVENIO', 'CD_CONVENIO', convenio_w.cd_convenio, c01_w.nr_doc_externo, null, nr_seq_regra_w, 'A', convenio_w.nm_usuario);
					end if;
				end if;
				
				open c02;
				loop
				fetch c02 into	
					c02_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					begin		
					reg_integracao_w.nm_tabela		:=	'CONVENIO_ESTABELECIMENTO';
					reg_integracao_w.nm_elemento		:=      'ESTABLISHMENT_INSURANCE';
					reg_integracao_w.nr_seq_visao		:=	16166; /*Swing - CorPes_FC - Convênio estabelecimento*/
					if (coalesce(upper(c02_w.ie_action),'INSERT') <> 'DELETE') THEN		
						begin
						
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c02_w.cd_estabelecimento, 'S', convenio_estabelecimento_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;
						convenio_estabelecimento_w.cd_convenio		:= convenio_w.cd_convenio;

						select 	count(*)
						into STRICT	qt_convenio_estab_w
						from 	convenio_estabelecimento
						where	cd_estabelecimento	= convenio_estabelecimento_w.cd_estabelecimento
						and	cd_convenio		= convenio_estabelecimento_w.cd_convenio;						
						
						if (coalesce(upper(c02_w.ie_action),'INSERT') = 'UPDATE') then
							begin								
							if (qt_convenio_estab_w = 0 and upper(ie_ajustar_upd_ins_w) = 'N') then			
								/*Se o sistema externo mandar um UPDATE e o registro não existir no Tasy, tem que retornar uma mensagem e abortar o processo.*/
					
								intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1064066),'INTPDTASY','0013');
								ie_erro_w := 'S';								
							else
								begin
								select 	*
								into STRICT	convenio_estabelecimento_w
								from 	convenio_estabelecimento
								where	cd_estabelecimento	= convenio_estabelecimento_w.cd_estabelecimento
								and	cd_convenio		= convenio_estabelecimento_w.cd_convenio;
								exception
								when others then
									null;
								end;
							end if;
							end;
						elsif (coalesce(upper(c02_w.ie_action),'INSERT') = 'INSERT') then
							begin						
							if (qt_convenio_estab_w > 0 and upper(ie_ajustar_ins_upd_w) = 'N') then
								/* Se o sistema externo mandar um INSERT e o registro já existir, tem que retornar uma mensagem e abortar o processo.*/

								intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1064074),'INTPDTASY','0014');
								ie_erro_w := 'S';
							end if;	
							end;						
						end if;	
						
						if (ie_erro_w = 'N') then
							begin
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c02_w.dt_atualizacao, 'N', convenio_estabelecimento_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TITULO_RECEBER', c02_w.ie_titulo_receber, 'N', convenio_estabelecimento_w.ie_titulo_receber) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_titulo_receber := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SEPARA_CONTA', c02_w.ie_separa_conta, 'N', convenio_estabelecimento_w.ie_separa_conta) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_separa_conta := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_AGENDA_CONSULTA', c02_w.ie_agenda_consulta, 'N', convenio_estabelecimento_w.ie_agenda_consulta) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_agenda_consulta := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_OBTER_PRECO_MAT_AUTOR', c02_w.ie_obter_preco_mat_autor, 'N', convenio_estabelecimento_w.ie_obter_preco_mat_autor) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_obter_preco_mat_autor := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PRECO_MEDIO_MATERIAL', c02_w.ie_preco_medio_material, 'N', convenio_estabelecimento_w.ie_preco_medio_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_preco_medio_material := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CANCELAR_CONTA', c02_w.ie_cancelar_conta, 'N', convenio_estabelecimento_w.ie_cancelar_conta) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_cancelar_conta := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_FECHAR_ATEND_ADIANT', c02_w.ie_fechar_atend_adiant, 'N', convenio_estabelecimento_w.ie_fechar_atend_adiant) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_fechar_atend_adiant := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_DOC_AUTORIZACAO', c02_w.ie_doc_autorizacao, 'N', convenio_estabelecimento_w.ie_doc_autorizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_doc_autorizacao := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_DOC_CONVENIO', c02_w.ie_doc_convenio, 'N', convenio_estabelecimento_w.ie_doc_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_doc_convenio := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_REGRA_PRIOR_EDICAO', c02_w.ie_regra_prior_edicao, 'N', convenio_estabelecimento_w.ie_regra_prior_edicao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_regra_prior_edicao := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_FORMA_PROC_PRINC', c02_w.ie_forma_proc_princ, 'N', convenio_estabelecimento_w.ie_forma_proc_princ) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_forma_proc_princ := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CONTA_FIM_MES', c02_w.ie_conta_fim_mes, 'N', convenio_estabelecimento_w.ie_conta_fim_mes) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_conta_fim_mes := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_GERAR_NF', c02_w.ie_gerar_nf, 'N', convenio_estabelecimento_w.ie_gerar_nf) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_gerar_nf := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_GERAR_NF_TITULO', c02_w.ie_gerar_nf_titulo, 'N', convenio_estabelecimento_w.ie_gerar_nf_titulo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_gerar_nf_titulo := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CONSISTE_GUIA_ATEND', c02_w.ie_consiste_guia_atend, 'N', convenio_estabelecimento_w.ie_consiste_guia_atend) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_consiste_guia_atend := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_FORMA_GERACAO_NF', c02_w.ie_forma_geracao_nf, 'N', convenio_estabelecimento_w.ie_forma_geracao_nf) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_forma_geracao_nf := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TITULO_SEM_NF', c02_w.ie_titulo_sem_nf, 'N', convenio_estabelecimento_w.ie_titulo_sem_nf) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_titulo_sem_nf := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_MANTER_ZERADO_EDICAO', c02_w.ie_manter_zerado_edicao, 'N', convenio_estabelecimento_w.ie_manter_zerado_edicao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_manter_zerado_edicao := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CONVERSAO_MAT', c02_w.ie_conversao_mat, 'N', convenio_estabelecimento_w.ie_conversao_mat) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_conversao_mat := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_DOC_CONV_PART_FUNC', c02_w.ie_doc_conv_part_func, 'N', convenio_estabelecimento_w.ie_doc_conv_part_func) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_doc_conv_part_func := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TRAT_CONTA_RN', c02_w.ie_trat_conta_rn, 'N', convenio_estabelecimento_w.ie_trat_conta_rn) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_trat_conta_rn := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PARTIC_RESP_CRED', c02_w.ie_partic_resp_cred, 'N', convenio_estabelecimento_w.ie_partic_resp_cred) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_partic_resp_cred := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_REP_COD_USUARIO', c02_w.ie_rep_cod_usuario, 'N', convenio_estabelecimento_w.ie_rep_cod_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_rep_cod_usuario := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_LIB_BRAS', c02_w.ie_exige_lib_bras, 'N', convenio_estabelecimento_w.ie_exige_lib_bras) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_exige_lib_bras := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_SENHA_ATEND', c02_w.ie_exige_senha_atend, 'N', convenio_estabelecimento_w.ie_exige_senha_atend) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_exige_senha_atend := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_FIM_VIGENCIA', c02_w.ie_exige_fim_vigencia, 'N', convenio_estabelecimento_w.ie_exige_fim_vigencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_exige_fim_vigencia := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_ORC_ATEND', c02_w.ie_exige_orc_atend, 'N', convenio_estabelecimento_w.ie_exige_orc_atend) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_exige_orc_atend := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_DATA_ULT_PAGTO', c02_w.ie_exige_data_ult_pagto, 'N', convenio_estabelecimento_w.ie_exige_data_ult_pagto) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_exige_data_ult_pagto := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_PLANO', c02_w.ie_exige_plano, 'N', convenio_estabelecimento_w.ie_exige_plano) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_exige_plano := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_CARTEIRA_ATEND', c02_w.ie_exige_carteira_atend, 'N', convenio_estabelecimento_w.ie_exige_carteira_atend) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_exige_carteira_atend := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXIGE_VALIDADE_ATEND', c02_w.ie_exige_validade_atend, 'N', convenio_estabelecimento_w.ie_exige_validade_atend) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_exige_validade_atend := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PROTOCOLO_CONTA', c02_w.ie_protocolo_conta, 'N', convenio_estabelecimento_w.ie_protocolo_conta) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_protocolo_conta := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_CGC_CIH', c02_w.ie_cgc_cih, 'N', convenio_estabelecimento_w.ie_cgc_cih) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_cgc_cih := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_MEDICO_COOPERADO', c02_w.ie_medico_cooperado, 'N', convenio_estabelecimento_w.ie_medico_cooperado) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.ie_medico_cooperado := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c02_w.nm_usuario, 'N', convenio_estabelecimento_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONTA_PROTOCOLO', c02_w.qt_conta_protocolo, 'N', convenio_estabelecimento_w.qt_conta_protocolo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_estabelecimento_w.qt_conta_protocolo := _ora2pg_r.ds_valor_retorno_p;
							convenio_estabelecimento_w.ie_taxa_tempo_unidade := 'S';
							
							if (reg_integracao_w.qt_reg_log = 0) then
							
								select	max(nr_sequencia)
								into STRICT	convenio_estabelecimento_w.nr_sequencia
								from	convenio_estabelecimento
								where	cd_estabelecimento	= convenio_estabelecimento_w.cd_estabelecimento
								and		cd_convenio			= convenio_estabelecimento_w.cd_convenio;
								
								if (coalesce(convenio_estabelecimento_w.nr_sequencia, 0) > 0) then
									update	convenio_estabelecimento
									set	row		= convenio_estabelecimento_w
									where	nr_sequencia	= convenio_estabelecimento_w.nr_sequencia;
								else
									select	nextval('convenio_estabelecimento_seq')
									into STRICT	convenio_estabelecimento_w.nr_sequencia
									;
									
									convenio_estabelecimento_w.nm_usuario_nrec	:= convenio_estabelecimento_w.nm_usuario;
									convenio_estabelecimento_w.dt_atualizacao_nrec	:= clock_timestamp();				
								
									insert into convenio_estabelecimento values (convenio_estabelecimento_w.*);
								end if;
							end if;
							end;
						end if;
						end;	
					else
						begin
						select	max(nr_sequencia)
						into STRICT	convenio_estabelecimento_w.nr_sequencia
						from	convenio_estabelecimento
						where	cd_estabelecimento = c02_w.cd_estabelecimento
						and	cd_convenio = convenio_w.cd_convenio;
						
						if (coalesce(convenio_estabelecimento_w.nr_sequencia, 0) > 0) then
							delete	FROM convenio_estabelecimento
							where	nr_sequencia = convenio_estabelecimento_w.nr_sequencia;
						else
							/*Código do estabelecimento inválido ou inexistente no Tasy para exclusão do registro*/

							intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1012148),'INTPDTASY','0004');
							ie_erro_w := 'S';
						end if;
						end;
					end if;
					end;
				end loop;
				close c02;
				
				open c03;
				loop
				fetch c03 into	
					c03_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					begin
					reg_integracao_w.nm_tabela		:=	'CONVENIO_CHECKLIST';
					reg_integracao_w.nm_elemento		:=	'CHECKLIST';
					reg_integracao_w.nr_seq_visao		:=	97524; /*HTML5 - CorPes_FC - Checklist*/
					
					if (coalesce(upper(c03_w.ie_action),'INSERT') = 'DELETE' and ie_erro_w = 'N') THEN /*Se deletar checklist, nem abre c04 (item checklist) e c05 (vl item checklist)*/
					
						if (c03_w.nr_doc_externo IS NOT NULL AND c03_w.nr_doc_externo::text <> '') then
							
							select	max(nr_sequencia)
							into STRICT	convenio_checklist_w.nr_sequencia
							from	convenio_checklist
							where	upper(nr_doc_externo)	= upper(c03_w.nr_doc_externo)
							and	cd_convenio		= convenio_w.cd_convenio;
							
							if (coalesce(convenio_checklist_w.nr_sequencia,0) > 0) then
								
								begin
								delete	FROM convenio_checklist
								where	nr_sequencia	= convenio_checklist_w.nr_sequencia;
								exception
								when others then
									update	convenio_checklist
									set	ie_situacao = 'I'
									where	nr_sequencia = convenio_checklist_w.nr_sequencia;
								end;
							else
								/*Código do checklist inválido ou inexistente no Tasy para exclusão do registro*/

								intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1014155),'INTPDTASY','0004');
								ie_erro_w := 'S';
							end if;
						end if;
					
					elsif (coalesce(upper(c03_w.ie_action),'INSERT') <> 'DELETE' and ie_erro_w = 'N') THEN /*Inclusão ou alteração*/
						begin
						
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_DOC_EXTERNO', c03_w.nr_doc_externo, 'N', convenio_checklist_w.nr_doc_externo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_w.nr_doc_externo := _ora2pg_r.ds_valor_retorno_p;
						convenio_checklist_w.cd_convenio	 := convenio_w.cd_convenio;
						
						if (coalesce(upper(c03_w.ie_action),'INSERT') = 'UPDATE') then			
							begin
							select 	*
							into STRICT	convenio_checklist_w
							from 	convenio_checklist
							where	upper(nr_doc_externo)	= upper(convenio_checklist_w.nr_doc_externo)
							and	cd_convenio		= convenio_w.cd_convenio;
							exception
							when others then
								null;
							end;
						end if;			
						
						
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_CHECKLIST', c03_w.ds_checklist, 'N', convenio_checklist_w.ds_checklist) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_w.ds_checklist := _ora2pg_r.ds_valor_retorno_p;
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c03_w.dt_atualizacao, 'N', convenio_checklist_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c03_w.nm_usuario, 'S', convenio_checklist_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SITUACAO', c03_w.ie_situacao, 'N', convenio_checklist_w.ie_situacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_w.ie_situacao := _ora2pg_r.ds_valor_retorno_p;
											
						if (reg_integracao_w.qt_reg_log = 0) then
						
							select	max(nr_sequencia)
							into STRICT	convenio_checklist_w.nr_sequencia
							from	convenio_checklist
							where	upper(nr_doc_externo)	= upper(convenio_checklist_w.nr_doc_externo)
							and	cd_convenio		= convenio_w.cd_convenio;
							
							if (coalesce(convenio_checklist_w.nr_sequencia, 0) > 0) then
								update	convenio_checklist
								set	row			= convenio_checklist_w
								where	nr_sequencia 		= convenio_checklist_w.nr_sequencia;
							else
								select	nextval('convenio_checklist_seq')
								into STRICT	convenio_checklist_w.nr_sequencia
								;
								
								convenio_checklist_w.nm_usuario_nrec	 := convenio_checklist_w.nm_usuario;
								convenio_checklist_w.dt_atualizacao_nrec := clock_timestamp();	
								
								insert into convenio_checklist values (convenio_checklist_w.*);
							end if;
								
						
							open c04;
							loop
							fetch c04 into	
								c04_w;
							EXIT WHEN NOT FOUND; /* apply on c04 */
								begin
								reg_integracao_w.nm_tabela		:=	'CONVENIO_CHECKLIST_ITEM';
								reg_integracao_w.nm_elemento		:=	'CHECKLIST_ITEM';
								reg_integracao_w.nr_seq_visao		:=	97525; /*HTML5 - CorPes_FC - Itens do checklist*/
								
								if (coalesce(upper(c04_w.ie_action),'INSERT') = 'DELETE') THEN	/*Se deletar item do checklist, nem abre c05 (vl item checklist)*/
									if (c04_w.nr_doc_externo IS NOT NULL AND c04_w.nr_doc_externo::text <> '') then
										select	max(nr_sequencia)
										into STRICT	convenio_checklist_item_w.nr_sequencia
										from	convenio_checklist_item
										where	upper(nr_doc_externo)	= upper(c04_w.nr_doc_externo)
										and	nr_seq_checklist 	= convenio_checklist_w.nr_sequencia;
										
										if (coalesce(convenio_checklist_item_w.nr_sequencia,0) > 0) then
											
											begin
											delete	FROM convenio_checklist_item
											where	nr_sequencia = convenio_checklist_item_w.nr_sequencia;
											exception
											when others then
												update	convenio_checklist_item
												set	ie_situacao = 'I'
												where	nr_sequencia = convenio_checklist_item_w.nr_sequencia;
											end;
											
										else
											/*Código do item do checklist inválido ou inexistente no Tasy para exclusão do registro*/

											intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1014166),'INTPDTASY','0004');
											ie_erro_w := 'S';
										end if;
									end if;
								
								elsif (coalesce(upper(c04_w.ie_action),'INSERT') <> 'DELETE' and ie_erro_w = 'N') THEN /*Inclusão ou alteração*/
		
									begin
									
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_DOC_EXTERNO', c04_w.nr_doc_externo, 'N', convenio_checklist_item_w.nr_doc_externo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_w.nr_doc_externo := _ora2pg_r.ds_valor_retorno_p;
									convenio_checklist_item_w.nr_seq_checklist	:= convenio_checklist_w.nr_sequencia;
									
									if (coalesce(upper(c04_w.ie_action),'INSERT') = 'UPDATE') then			
										begin
										select 	*
										into STRICT	convenio_checklist_item_w
										from 	convenio_checklist_item
										where	upper(nr_doc_externo)	= upper(convenio_checklist_item_w.nr_doc_externo)
										and	nr_seq_checklist 	= convenio_checklist_w.nr_sequencia;
										exception
										when others then
											null;
										end;
									end if;									
									
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_TITULO', c04_w.ds_titulo, 'N', convenio_checklist_item_w.ds_titulo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_w.ds_titulo := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_FORMATO', c04_w.ie_formato, 'N', convenio_checklist_item_w.ie_formato) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_w.ie_formato := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_APRESENTACAO', c04_w.nr_seq_apresentacao, 'N', convenio_checklist_item_w.nr_seq_apresentacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_w.nr_seq_apresentacao := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c04_w.dt_atualizacao, 'N', convenio_checklist_item_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c04_w.nm_usuario, 'N', convenio_checklist_item_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SITUACAO', c04_w.ie_situacao, 'N', convenio_checklist_item_w.ie_situacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_w.ie_situacao := _ora2pg_r.ds_valor_retorno_p;
									
									convenio_checklist_item_w.ie_campo_arquivo		:= 'S';
									convenio_checklist_item_w.ie_arquivo_obrigatorio	:= 'N';
									
									if (reg_integracao_w.qt_reg_log = 0) then
									
										select	max(nr_sequencia)
										into STRICT	convenio_checklist_item_w.nr_sequencia
										from	convenio_checklist_item
										where	upper(nr_doc_externo)	= upper(convenio_checklist_item_w.nr_doc_externo)
										and	nr_seq_checklist 	= convenio_checklist_w.nr_sequencia;
										
										if (coalesce(convenio_checklist_item_w.nr_sequencia, 0) > 0) then
										
											update	convenio_checklist_item
											set	row		= convenio_checklist_item_w
											where	nr_sequencia 	= convenio_checklist_item_w.nr_sequencia;
										else
											select	nextval('convenio_checklist_item_seq')
											into STRICT	convenio_checklist_item_w.nr_sequencia
											;
											
											convenio_checklist_item_w.nm_usuario_nrec		:= convenio_checklist_item_w.nm_usuario;
											convenio_checklist_item_w.dt_atualizacao_nrec		:= clock_timestamp();
											
											insert into convenio_checklist_item values (convenio_checklist_item_w.*);
										end if;
										
										open c05;
										loop
										fetch c05 into	
											c05_w;
										EXIT WHEN NOT FOUND; /* apply on c05 */
											begin
											
											reg_integracao_w.nm_tabela		:=	'CONVENIO_CHECKLIST_ITEM_VL';
											reg_integracao_w.nm_elemento		:=	'CHECKLIST_ITEM_VALUE';
											reg_integracao_w.nr_seq_visao		:=	97526; /*HTML5 - CorPes_FC - Valores do item do checklist*/
											
											if (coalesce(upper(c05_w.ie_action),'INSERT') <> 'DELETE') THEN
												begin
												
												SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_VALOR', c05_w.ie_valor, 'N', convenio_checklist_item_vl_w.ie_valor) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_vl_w.ie_valor := _ora2pg_r.ds_valor_retorno_p;
												convenio_checklist_item_vl_w.nr_seq_item_checklist	:= convenio_checklist_item_w.nr_sequencia;
												
												if (coalesce(upper(c04_w.ie_action),'INSERT') = 'UPDATE') then			
													begin
													select 	*
													into STRICT	convenio_checklist_item_vl_w
													from 	convenio_checklist_item_vl
													where	nr_seq_item_checklist	= convenio_checklist_item_w.nr_sequencia
													and	ie_valor		= convenio_checklist_item_vl_w.ie_valor;
													exception
													when others then
														null;
													end;
												end if;
												
												SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_VALOR', c05_w.ds_valor, 'N', convenio_checklist_item_vl_w.ds_valor) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_vl_w.ds_valor := _ora2pg_r.ds_valor_retorno_p;
												SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_IDENT_VERDADEIRO', c05_w.ie_ident_verdadeiro, 'N', convenio_checklist_item_vl_w.ie_ident_verdadeiro) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_vl_w.ie_ident_verdadeiro := _ora2pg_r.ds_valor_retorno_p;
												SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_TAMANHO_CAMPO', c05_w.qt_tamanho_campo, 'N', convenio_checklist_item_vl_w.qt_tamanho_campo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; convenio_checklist_item_vl_w.qt_tamanho_campo := _ora2pg_r.ds_valor_retorno_p;
												
												convenio_checklist_item_vl_w.dt_atualizacao 		:= convenio_checklist_item_w.dt_atualizacao;
												convenio_checklist_item_vl_w.nm_usuario 		:= convenio_checklist_item_w.nm_usuario;
												
												
												if (reg_integracao_w.qt_reg_log = 0) then
												
													select	max(nr_sequencia)
													into STRICT	convenio_checklist_item_vl_w.nr_sequencia
													from	convenio_checklist_item_vl
													where	nr_seq_item_checklist	= convenio_checklist_item_w.nr_sequencia
													and		ie_valor				= convenio_checklist_item_vl_w.ie_valor;
													
													if (coalesce(convenio_checklist_item_vl_w.nr_sequencia,0) > 0) then
													
														update	convenio_checklist_item_vl
														set	row		= convenio_checklist_item_vl_w
														where	nr_sequencia	= convenio_checklist_item_vl_w.nr_sequencia;
													else
														select	nextval('convenio_checklist_item_vl_seq')
														into STRICT	convenio_checklist_item_vl_w.nr_sequencia
														;
														
														convenio_checklist_item_vl_w.dt_atualizacao_nrec	:= clock_timestamp();
														convenio_checklist_item_vl_w.nm_usuario_nrec		:= convenio_checklist_item_w.nm_usuario;
														
														insert into convenio_checklist_item_vl values (convenio_checklist_item_vl_w.*);
													end if;
												end if;
												end;
											else
												begin
												if (c05_w.ie_valor IS NOT NULL AND c05_w.ie_valor::text <> '') and (coalesce(convenio_checklist_item_w.nr_sequencia,0) > 0) then
													
													select	max(nr_sequencia)
													into STRICT	convenio_checklist_item_vl_w.nr_sequencia
													from	convenio_checklist_item_vl
													where	upper(ie_valor)		= upper(c05_w.ie_valor)
													and	nr_seq_item_checklist	= convenio_checklist_item_w.nr_sequencia;
												
													if (coalesce(convenio_checklist_item_vl_w.nr_sequencia,0) > 0) then
														delete	FROM convenio_checklist_item_vl
														where	nr_sequencia = convenio_checklist_item_vl_w.nr_sequencia;
													else
														/*Valor do item do checklist inválido ou inexistente no Tasy para exclusão do registro*/

														intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1014167),'INTPDTASY');
														ie_erro_w := 'S';
													end if;
												end if;
												end;
											end if;											
											end;
										end loop;
										close c05;
									end if;		
									end;
								end if;
								end;
							end loop;
							close c04;
						end if;
						end;
					end if;					
					end;
				end loop;
				close c03;
				
				ie_fisrt_time_w		:= 'S';
				open C06;
				loop
				fetch C06 into	
					c06_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
					begin
					
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c06_w.cd_estabelecimento, 'S', regra_agecons_convenio_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c06_w.nm_usuario, 'N', regra_agecons_convenio_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
					regra_agecons_convenio_w.cd_convenio			:= convenio_w.cd_convenio;
					regra_agecons_convenio_w.nm_usuario_nrec		:= regra_agecons_convenio_w.nm_usuario;
					regra_agecons_convenio_w.dt_atualizacao			:= clock_timestamp();					
					
					/*O sistema externo sempre vai mandar todas as regras do convenio. Entao deletamos as regras do convenio e criamos de novo.
					Sempre tem que criar uma regra GERAL com IE_PERMITE = N para depois criar as regras com IE_PERMITE = S*/
					if (reg_integracao_w.qt_reg_log = 0) and (ie_fisrt_time_w = 'S') then
						begin
						
						delete
						from	regra_agecons_conv_grupo
						where	nr_seq_regra_agecons in (
							SELECT	nr_sequencia
							from	regra_agecons_convenio
							where	cd_convenio = convenio_w.cd_convenio);
						
						delete
						from	regra_agecons_convenio
						where	cd_convenio = convenio_w.cd_convenio;
						
						regra_agecons_convenio_w.ie_forma_consiste_setor 	:= 'A';
						regra_agecons_convenio_w.ie_permite 			:= 'N';
						
						select	nextval('regra_agecons_convenio_seq')
						into STRICT	regra_agecons_convenio_w.nr_sequencia
						;
						
						regra_agecons_convenio_w.dt_atualizacao_nrec		:= clock_timestamp();
							
						insert into regra_agecons_convenio values (regra_agecons_convenio_w.*);
						
						ie_fisrt_time_w := 'N';
						end;
					end if;
										
					reg_integracao_w.nm_tabela		:=	'REGRA_AGECONS_CONVENIO';
					reg_integracao_w.nm_elemento		:=      'RULE_CONSULT_SCHEDULE';
					reg_integracao_w.nr_seq_visao		:=	27655;				
					
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MEDICO', c06_w.cd_medico, 'S', regra_agecons_convenio_w.cd_medico) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.cd_medico := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_AGENDA', c06_w.cd_agenda, 'S', regra_agecons_convenio_w.cd_agenda) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.cd_agenda := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESPECIALIDADE', c06_w.cd_especialidade, 'S', regra_agecons_convenio_w.cd_especialidade) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.cd_especialidade := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CATEGORIA', c06_w.cd_categoria, 'S', regra_agecons_convenio_w.cd_categoria) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.cd_categoria := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_PLANO_CONVENIO', c06_w.cd_plano_convenio, 'S', regra_agecons_convenio_w.cd_plano_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.cd_plano_convenio := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c06_w.cd_estabelecimento, 'S', regra_agecons_convenio_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_SETOR_ATENDIMENTO', c06_w.cd_setor_atendimento, 'S', regra_agecons_convenio_w.cd_setor_atendimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.cd_setor_atendimento := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_FORMA_CONSISTE_SETOR', c06_w.ie_forma_consiste_setor, 'N', regra_agecons_convenio_w.ie_forma_consiste_setor) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.ie_forma_consiste_setor := _ora2pg_r.ds_valor_retorno_p;
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PERMITE', c06_w.ie_permite, 'N', regra_agecons_convenio_w.ie_permite) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.ie_permite := _ora2pg_r.ds_valor_retorno_p;				
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c06_w.nm_usuario, 'N', regra_agecons_convenio_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; regra_agecons_convenio_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;					
					
					if (reg_integracao_w.qt_reg_log = 0) then
						begin
						select	nextval('regra_agecons_convenio_seq')
						into STRICT	regra_agecons_convenio_w.nr_sequencia
						;
							
						insert into regra_agecons_convenio values (regra_agecons_convenio_w.*);
						end;
					end if;
					end;
				end loop;
				close C06;
			end if;
		end if;
	end if;	
	end;
end loop;
close c01;

exception
when others then
	begin
	ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
	rollback;
	
	update	intpd_fila_transmissao
	set		ie_status 	 		= 'E',
			cd_default_message 	= CASE WHEN ds_erro_w = NULL THEN null  ELSE '0005' END ,
			ds_log 		 		= ds_erro_w,
			nr_doc_externo		= c01_w.nr_doc_externo
	where	nr_sequencia 	 	= nr_sequencia_p;
	
	ie_exception_w := 'S';
	
	end;
end;

if (ie_exception_w = 'N') then

	if	((reg_integracao_w.qt_reg_log > 0) or (coalesce(ie_erro_w,'N') = 'S')) then
		begin
		rollback;
		
		update	intpd_fila_transmissao
		set		ie_status 	 		= 'E',
				cd_default_message 	= CASE WHEN ds_erro_w = NULL THEN null  ELSE '0005' END ,
				ds_log 		 		= ds_erro_w,
				nr_doc_externo	 	= c01_w.nr_doc_externo
		where	nr_sequencia 	 	= nr_sequencia_p;
		
		for i in 0..reg_integracao_w.qt_reg_log-1 loop
			intpd_gravar_log_recebimento(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY',reg_integracao_w.intpd_log_receb[i].cd_default_message);
		end loop;
		end;
	else
		update	intpd_fila_transmissao
		set		ie_status 	 		= 'S',
				cd_default_message 	= '0000',
				nr_seq_documento 	= coalesce(convenio_w.cd_convenio,c01_w.cd_convenio),
				nr_doc_externo 	 	= c01_w.nr_doc_externo
		where	nr_sequencia		= nr_sequencia_p;
	end if;

end if;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebe_convenio ( nr_sequencia_p bigint, xml_p xml) FROM PUBLIC;

