-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_bordero_tit_pagar ( nr_bordero_p bigint, ie_out_desp_bordero_p text, nr_titulo_p bigint, vl_desconto_bordero_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_tit_pagar_w		bordero_tit_pagar.nr_sequencia%type;
cd_moeda_w				bordero_tit_pagar.cd_moeda%type;
vl_cotacao_w			bordero_tit_pagar.vl_cotacao%type;
nr_seq_conta_banco_w 	bordero_pagamento.nr_seq_conta_banco%type;
nr_seq_conta_bco_w		titulo_pagar.nr_seq_conta_bco%type;
qt_registros_w			smallint;
qt_titulos_w			smallint;
vl_titulo_w				double precision;
vl_titulo_estrang_w		double precision;
vl_complemento_w        double precision;
vl_cotacao_titulo_w     titulo_pagar.vl_cotacao%type;
vl_cotacao_dia_w     titulo_pagar.vl_cotacao%type;
DT_PREV_PAGAMENTO_W timestamp;
cd_moeda_titulo_w  bordero_tit_pagar.cd_moeda%type;
		

BEGIN
if (nr_bordero_p IS NOT NULL AND nr_bordero_p::text <> '') and (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then

	select 	cd_moeda,
			vl_cotacao,
			nr_seq_conta_banco,
			DT_PREV_PAGAMENTO
	into STRICT 	cd_moeda_w, 
			vl_cotacao_w,
			nr_seq_conta_banco_w,
			DT_PREV_PAGAMENTO_W
	from 	bordero_pagamento 
	where 	nr_bordero = nr_bordero_p;	
	
	select 	nextval('bordero_tit_pagar_seq')
	into STRICT 	nr_seq_tit_pagar_w
	;
	
	select	count(*)
	into STRICT 	qt_registros_w
	from   	titulo_pagar a
	where   a.nr_titulo = nr_titulo_p
	and     (a.nr_seq_proj_rec IS NOT NULL AND a.nr_seq_proj_rec::text <> '');
	
	if ((coalesce(obter_valor_param_usuario(855,35, Obter_Perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N') = 'A') and (qt_registros_w > 0)) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(525734,'MACRO01=' || nr_titulo_p);	
	end if;
		
	if ((coalesce(obter_valor_param_usuario(855,83, Obter_Perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N') = 'N') and (qt_registros_w > 0)) then

		select  max(nr_seq_conta_bco)
		into STRICT 	nr_seq_conta_bco_w
		from    titulo_pagar a 
		where   a.nr_titulo = nr_titulo_p;
		
		if (coalesce(nr_seq_conta_bco_w,0) <> coalesce(nr_seq_conta_banco_w,0)) then	
			CALL wheb_mensagem_pck.exibir_mensagem_abort(570333,'MACRO01=' || nr_titulo_p);
		end if;
	
	end if;

	select 	count(*)
	into STRICT 	qt_titulos_w
	from 	bordero_tit_pagar 
	where  	nr_bordero = nr_bordero_p
	and 	nr_titulo = nr_titulo_p;

	
	select  coalesce(VL_TITULO_ESTRANG,0),
			coalesce(vl_titulo,0),
			coalesce(vl_cotacao,0),
			CD_MOEDA
	into STRICT	vl_titulo_estrang_w,
			vl_titulo_w,
			vl_cotacao_titulo_w,
			cd_moeda_titulo_w
	from	TITULO_PAGAR
	where	nr_titulo	= nr_titulo_p;
	
	if (coalesce(vl_titulo_estrang_w,0) <> 0) then		
		if (coalesce(vl_cotacao_w,0) = 0) then
											
			vl_cotacao_dia_w	:= obter_cotacao_moeda_financ(cd_moeda_titulo_w, DT_PREV_PAGAMENTO_W);
		
			if (vl_cotacao_dia_w IS NOT NULL AND vl_cotacao_dia_w::text <> '') then
				vl_cotacao_w := vl_cotacao_dia_w;	
			else 	
				vl_cotacao_w := 0;	
			end if;
		end if;					
	end if;	
		
	if (coalesce(vl_titulo_estrang_w,0) <> 0) then		
		if (coalesce(vl_cotacao_w,0) = 0) then
			vl_complemento_w := vl_titulo_w - vl_titulo_estrang_w;
		else
			vl_complemento_w := (vl_titulo_w / vl_cotacao_titulo_w * vl_cotacao_w) - vl_titulo_estrang_w;
		end if;	
	else
		vl_complemento_w := null;
	end if;	
		
	if (qt_titulos_w = 0)	then
	
		-->>>> Insere o titulo a pagar no bordero <<<<--
		 insert into bordero_tit_pagar(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_bordero,
			nr_titulo,
			vl_bordero,
			vl_bordero_estrang,
			vl_juros_bordero,
			vl_desconto_bordero,
			vl_out_desp_bordero,
			vl_multa_bordero,
			cd_moeda,
			vl_cotacao,
			vl_complemento)
		 SELECT 	nr_seq_tit_pagar_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_bordero_p,
			nr_titulo,
			CASE WHEN coalesce(vl_cotacao_w,0)=0 THEN  vl_saldo_titulo  ELSE vl_saldo_titulo / vl_cotacao * vl_cotacao_w END ,
			CASE WHEN coalesce(vl_cotacao_w,0)=0 THEN  0  ELSE vl_saldo_titulo / vl_cotacao END ,
			vl_saldo_juros,
			coalesce(vl_desconto_bordero_p,0),			
			CASE WHEN ie_out_desp_bordero_p='O' THEN coalesce(vl_outros_acrescimos,0) WHEN ie_out_desp_bordero_p='B' THEN coalesce(vl_out_desp_bordero,0)  ELSE coalesce(VL_OUTRAS_DESPESAS,0) END ,
			coalesce(vl_saldo_multa,0),
			cd_moeda_w,
			vl_cotacao_w,
			vl_complemento_w
		 from   	titulo_pagar
		 where  	nr_titulo = nr_titulo_p;
		
		 commit;
		
	end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_bordero_tit_pagar ( nr_bordero_p bigint, ie_out_desp_bordero_p text, nr_titulo_p bigint, vl_desconto_bordero_p bigint, nm_usuario_p text) FROM PUBLIC;

