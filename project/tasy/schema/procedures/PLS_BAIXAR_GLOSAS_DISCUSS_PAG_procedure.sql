-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_baixar_glosas_discuss_pag (nr_seq_lote_discussao_p bigint, nr_seq_acao_interc_p bigint, ie_estorno_p text, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE

 
vl_negado_proc_w	double precision;
vl_negado_mat_w		double precision;
vl_total_negado_w	double precision;
nr_seq_lote_contest_w	bigint;
nr_titulo_w		bigint;
nr_seq_baixa_w		integer;
dt_baixa_w		timestamp;
cd_tipo_baixa_w		bigint;
nr_seq_trans_financ_w	bigint;	
cd_moeda_padrao_w	integer;
vl_aceito_proc_w	double precision;
vl_aceito_mat_w		double precision;
vl_total_aceito_w	double precision;
vl_glosa_w		double precision;
ie_ato_cooperado_w	varchar(1);
nr_seq_fatura_w		bigint;

C01 CURSOR FOR 
	SELECT	sum(coalesce(b.vl_negado,0)), 
		c.ie_ato_cooperado 
	from	pls_conta_proc 			c,	 
		pls_discussao_proc 		b, 
		pls_contestacao_discussao 	a 
	where	a.nr_sequencia	= b.nr_seq_discussao 
	and	c.nr_sequencia	= b.nr_seq_conta_proc 
	and	a.nr_seq_lote	= nr_seq_lote_discussao_p 
	group by c.ie_ato_cooperado 
	
union all
 
	SELECT	sum(coalesce(b.vl_negado,0)), 
		c.ie_ato_cooperado 
	from	pls_conta_mat			c, 
		pls_discussao_mat 		b, 
		pls_contestacao_discussao 	a 
	where	a.nr_sequencia	= b.nr_seq_discussao 
	and	c.nr_sequencia	= b.nr_seq_conta_mat 
	and	a.nr_seq_lote	= nr_seq_lote_discussao_p 
	group by c.ie_ato_cooperado;
	
C02 CURSOR FOR 
	SELECT	sum(coalesce(b.vl_aceito,0)), 
		c.ie_ato_cooperado 
	from	pls_conta_proc 			c,	 
		pls_discussao_proc 		b, 
		pls_contestacao_discussao 	a 
	where	a.nr_sequencia	= b.nr_seq_discussao 
	and	c.nr_sequencia	= b.nr_seq_conta_proc 
	and	a.nr_seq_lote	= nr_seq_lote_discussao_p 
	group by c.ie_ato_cooperado 
	
union all
 
	SELECT	sum(coalesce(b.vl_aceito,0)), 
		c.ie_ato_cooperado 
	from	pls_conta_mat			c, 
		pls_discussao_mat 		b, 
		pls_contestacao_discussao 	a 
	where	a.nr_sequencia	= b.nr_seq_discussao 
	and	c.nr_sequencia	= b.nr_seq_conta_mat 
	and	a.nr_seq_lote	= nr_seq_lote_discussao_p 
	group by c.ie_ato_cooperado;


BEGIN 
/* Obter o lote de contestação do lote da discussão */
 
select	max(a.nr_seq_lote_contest) 
into STRICT	nr_seq_lote_contest_w 
from	pls_lote_discussao a 
where	a.nr_sequencia = nr_seq_lote_discussao_p;
 
select	coalesce(sum(b.vl_negado),0) 
into STRICT	vl_negado_proc_w 
from	pls_discussao_proc b, 
	pls_contestacao_discussao a 
where	a.nr_sequencia	= b.nr_seq_discussao 
and	a.nr_seq_lote	= nr_seq_lote_discussao_p;
 
select	coalesce(sum(b.vl_negado),0) 
into STRICT	vl_negado_mat_w 
from	pls_discussao_mat b, 
	pls_contestacao_discussao a 
where	a.nr_sequencia	= b.nr_seq_discussao 
and	a.nr_seq_lote	= nr_seq_lote_discussao_p;
 
/* Baixa do valor negado */
 
if (vl_negado_proc_w + vl_negado_mat_w > 0) then 
	vl_total_negado_w	:= vl_negado_proc_w + vl_negado_mat_w;
 
	/*select	max(nr_titulo_pagar) 
	into	nr_titulo_w 
	from	pls_lote_discussao 
	where	nr_sequencia = nr_seq_lote_discussao_p;*/
 
	 
	select	max(nr_seq_ptu_fatura) 
	into STRICT	nr_seq_fatura_w 
	from	pls_lote_contestacao	b, 
		pls_lote_discussao	a 
	where	a.nr_seq_lote_contest	= b.nr_sequencia 
	and	a.nr_Sequencia		= nr_seq_lote_discussao_p;
	 
	select	max(nr_titulo) 
	into STRICT	nr_titulo_w 
	from	ptu_fatura 
	where	nr_sequencia = nr_seq_fatura_w;	
 
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then 
		/* Gerar baixa de glosa */
 
		select	coalesce(max(nr_sequencia),0) + 1 
		into STRICT	nr_seq_baixa_w 
		from	titulo_pagar_baixa a 
		where	a.nr_titulo	= nr_titulo_w;
		 
		dt_baixa_w	:= trunc(clock_timestamp(),'dd');
		 
		select	max(cd_tipo_baixa_cpa), 
			max(nr_seq_trans_fin_rejeicao) 
		into STRICT	cd_tipo_baixa_w, 
			nr_seq_trans_financ_w 
		from	pls_processo_interc_acao 
		where	nr_sequencia = nr_seq_acao_interc_p;		
		 
		if (coalesce(cd_tipo_baixa_w::text, '') = '') then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(156581);
		end if;
		 
		select	max(cd_moeda_padrao) 
		into STRICT	cd_moeda_padrao_w 
		from	parametros_contas_pagar 
		where	cd_estabelecimento = cd_estabelecimento_p;
		 
		-- Estorno 
		if (coalesce(ie_estorno_p,'N') = 'S') then 
			vl_total_negado_w := (vl_total_negado_w * -1);
		end if;
		 
		insert	into titulo_pagar_baixa(nr_titulo, 
			nr_sequencia, 
			dt_baixa, 
			cd_moeda, 
			dt_atualizacao, 
			nm_usuario, 
			cd_tipo_baixa, 
			ie_acao, 
			vl_baixa, 
			vl_glosa, 
			vl_descontos, 
			vl_outras_deducoes, 
			vl_juros, 
			vl_multa, 
			vl_outros_acrescimos, 
			vl_pago, 
			cd_banco, 
			nr_lote_contabil, 
			vl_devolucao, 
			nr_seq_devolucao, 
			nr_bordero, 
			nr_seq_trans_fin, 
			vl_ir, 
			nr_seq_conta_banco, 
			nr_seq_escrit, 
			cd_centro_custo, 
			cd_conta_contabil, 
			vl_cotacao_moeda, 
			ds_observacao, 
			vl_glosa_ato_coop_princ, 
			vl_glosa_ato_coop_aux, 
			vl_glosa_ato_nao_coop, 
			nr_seq_pls_lote_contest, 
			nr_seq_pls_lote_disc) 
		values (nr_titulo_w, 
			nr_seq_baixa_w, 
			dt_baixa_w, 
			cd_moeda_padrao_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_tipo_baixa_w, 
			'I', 
			vl_total_negado_w, 
			vl_total_negado_w, 
			0, 
			0, 
			0, 
			0, 
			0, 
			0, 
			null, 
			0, 
			0, 
			null, 
			null, 
			nr_seq_trans_financ_w, 
			null, 
			null, 
			null, 
			null, 
			null, 
			null, 
			'Baixa gerada pelo sistema no fechamento da discussão.', 
			0, 
			0, 
			0, 
			nr_seq_lote_contest_w, 
			nr_seq_lote_discussao_p);
	 
	open C01;
	loop 
	fetch C01 into	 
		vl_glosa_w, 
		ie_ato_cooperado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		if (ie_ato_cooperado_w = '1') then 
			update	titulo_pagar_baixa 
			set	vl_glosa_ato_coop_princ	= coalesce(vl_glosa_ato_coop_princ,0) + vl_glosa_w 
			where	nr_titulo 		= nr_titulo_w 
			and	nr_sequencia 		= nr_seq_baixa_w;
		elsif (ie_ato_cooperado_w = '2') then 
			update	titulo_pagar_baixa 
			set	vl_glosa_ato_coop_aux	= coalesce(vl_glosa_ato_coop_aux,0) + vl_glosa_w 
			where	nr_titulo 		= nr_titulo_w 
			and	nr_sequencia 		= nr_seq_baixa_w;
		else 
			update	titulo_pagar_baixa 
			set	vl_glosa_ato_nao_coop	= coalesce(vl_glosa_ato_nao_coop,0) + vl_glosa_w 
			where	nr_titulo 		= nr_titulo_w 
			and	nr_sequencia 		= nr_seq_baixa_w;
		end if;
		end;
	end loop;
	close C01;
	 
	CALL atualizar_saldo_tit_pagar(nr_titulo_w,nm_usuario_p);
	CALL Gerar_W_Tit_Pag_imposto(nr_titulo_w, nm_usuario_p);
	end if;
end if;
 
select	coalesce(sum(b.vl_aceito),0) 
into STRICT	vl_aceito_proc_w 
from	pls_discussao_proc b, 
	pls_contestacao_discussao a 
where	a.nr_sequencia	= b.nr_seq_discussao 
and	a.nr_seq_lote	= nr_seq_lote_discussao_p;
 
select	coalesce(sum(b.vl_aceito),0) 
into STRICT	vl_aceito_mat_w 
from	pls_discussao_mat b, 
	pls_contestacao_discussao a 
where	a.nr_sequencia	= b.nr_seq_discussao 
and	a.nr_seq_lote	= nr_seq_lote_discussao_p;
 
/* Baixa do valor aceito */
 
if (vl_aceito_proc_w + vl_aceito_mat_w > 0) then 
	vl_total_aceito_w	:= vl_aceito_proc_w + vl_aceito_mat_w;
 
	select	max(nr_titulo_pagar) 
	into STRICT	nr_titulo_w 
	from	pls_lote_discussao 
	where	nr_sequencia = nr_seq_lote_discussao_p;
	 
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then 
		/* Gerar baixa de glosa */
 
		select	coalesce(max(nr_sequencia),0) + 1 
		into STRICT	nr_seq_baixa_w 
		from	titulo_pagar_baixa a 
		where	a.nr_titulo	= nr_titulo_w;
		 
		dt_baixa_w	:= trunc(clock_timestamp(),'dd');
		 
		select	max(cd_tipo_baixa_cpa), 
			max(nr_seq_trans_fin_aceite) 
		into STRICT	cd_tipo_baixa_w, 
			nr_seq_trans_financ_w 
		from	pls_processo_interc_acao 
		where	nr_sequencia = nr_seq_acao_interc_p;		
		 
		if (coalesce(cd_tipo_baixa_w::text, '') = '') then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(156581);
		end if;
		 
		select	max(cd_moeda_padrao) 
		into STRICT	cd_moeda_padrao_w 
		from	parametros_contas_pagar 
		where	cd_estabelecimento = cd_estabelecimento_p;
		 
		-- Estorno 
		if (coalesce(ie_estorno_p,'N') = 'S') then 
			vl_total_aceito_w := (vl_total_aceito_w * -1);
		end if;
		 
		insert	into titulo_pagar_baixa(nr_titulo, 
			nr_sequencia, 
			dt_baixa, 
			cd_moeda, 
			dt_atualizacao, 
			nm_usuario, 
			cd_tipo_baixa, 
			ie_acao, 
			vl_baixa, 
			vl_glosa, 
			vl_descontos, 
			vl_outras_deducoes, 
			vl_juros, 
			vl_multa, 
			vl_outros_acrescimos, 
			vl_pago, 
			cd_banco, 
			nr_lote_contabil, 
			vl_devolucao, 
			nr_seq_devolucao, 
			nr_bordero, 
			nr_seq_trans_fin, 
			vl_ir, 
			nr_seq_conta_banco, 
			nr_seq_escrit, 
			cd_centro_custo, 
			cd_conta_contabil, 
			vl_cotacao_moeda, 
			ds_observacao, 
			vl_glosa_ato_coop_princ, 
			vl_glosa_ato_coop_aux, 
			vl_glosa_ato_nao_coop, 
			nr_seq_pls_lote_contest, 
			nr_seq_pls_lote_disc) 
		values (nr_titulo_w, 
			nr_seq_baixa_w, 
			dt_baixa_w, 
			cd_moeda_padrao_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_tipo_baixa_w, 
			'I', 
			vl_total_aceito_w, 
			0, 
			0, 
			0, 
			0, 
			0, 
			0, 
			vl_total_aceito_w, 
			null, 
			0, 
			0, 
			null, 
			null, 
			nr_seq_trans_financ_w, 
			null, 
			null, 
			null, 
			null, 
			null, 
			null, 
			'Baixa gerada pelo sistema no fechamento da discussão.', 
			0, 
			0, 
			0, 
			nr_seq_lote_contest_w, 
			nr_seq_lote_discussao_p);	
		 
		open C02;
		loop 
		fetch C02 into	 
			vl_glosa_w, 
			ie_ato_cooperado_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			if (ie_ato_cooperado_w = '1') then 
				update	titulo_pagar_baixa 
				set	vl_glosa_ato_coop_princ	= coalesce(vl_glosa_ato_coop_princ,0) + vl_glosa_w 
				where	nr_titulo 		= nr_titulo_w 
				and	nr_sequencia 		= nr_seq_baixa_w;
			elsif (ie_ato_cooperado_w = '2') then 
				update	titulo_pagar_baixa 
				set	vl_glosa_ato_coop_aux	= coalesce(vl_glosa_ato_coop_aux,0) + vl_glosa_w 
				where	nr_titulo 		= nr_titulo_w 
				and	nr_sequencia 		= nr_seq_baixa_w;
			else 
				update	titulo_pagar_baixa 
				set	vl_glosa_ato_nao_coop	= coalesce(vl_glosa_ato_nao_coop,0) + vl_glosa_w 
				where	nr_titulo 		= nr_titulo_w 
				and	nr_sequencia 		= nr_seq_baixa_w;
			end if;
			end;
		end loop;
		close C02;
		 
		CALL atualizar_saldo_tit_pagar(nr_titulo_w,nm_usuario_p);
		CALL Gerar_W_Tit_Pag_imposto(nr_titulo_w, nm_usuario_p);
	end if;
end if;
	 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_baixar_glosas_discuss_pag (nr_seq_lote_discussao_p bigint, nr_seq_acao_interc_p bigint, ie_estorno_p text, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

