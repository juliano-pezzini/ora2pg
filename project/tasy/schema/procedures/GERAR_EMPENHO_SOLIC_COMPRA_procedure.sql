-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_empenho_solic_compra ( nr_solic_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_estabelecimento_w			bigint;
dt_solicitacao_compra_w			timestamp;

c01 CURSOR FOR 
SELECT	coalesce(c.cd_centro_custo, b.cd_centro_custo) cd_centro_custo, 
	a.cd_conta_contabil, 
	coalesce(sum(coalesce(c.vl_rateio,a.vl_unit_previsto)),0) vl_empenho 
FROM ctb_grupo_conta e, conta_contabil d, solic_compra b, solic_compra_item a
LEFT OUTER JOIN solic_compra_item_rateio c ON (a.nr_solic_compra = c.nr_solic_compra AND a.nr_item_solic_compra = c.nr_item_solic_compra)
WHERE a.nr_solic_compra	= b.nr_solic_compra   and a.cd_conta_contabil = d.cd_conta_contabil and d.cd_grupo = e.cd_grupo and e.ie_tipo in ('R','D') and e.ie_debito_credito 	= 'D' and b.nr_solic_compra	= nr_solic_compra_p and (b.dt_autorizacao IS NOT NULL AND b.dt_autorizacao::text <> '') and coalesce(b.dt_baixa::text, '') = '' and coalesce(b.nr_seq_motivo_cancel::text, '') = '' and not exists (	SELECT	1 
			from	nota_fiscal_item y 
			where	y.nr_solic_compra	= b.nr_solic_compra 
			and	y.nr_item_solic_compra	= a.nr_item_solic_compra 
			and	y.nr_solic_compra	= nr_solic_compra_p) and (b.ie_tipo_servico IS NOT NULL AND b.ie_tipo_servico::text <> '') group by coalesce(c.cd_centro_custo, b.cd_centro_custo), 
	a.cd_conta_contabil;
					
Vet01	C01%RowType;

c02 CURSOR FOR 
SELECT	a.dt_referencia, 
	a.cd_estabelecimento, 
	a.cd_centro_custo, 
	a.cd_conta_contabil 
from	ctb_orc_doc_empenho a 
where	a.nr_solic_compra = nr_solic_compra_p;
	
vet02	C02%RowType;


BEGIN 
 
select	max(cd_estabelecimento), 
	max(dt_solicitacao_compra) 
into STRICT	cd_estabelecimento_w, 
	dt_solicitacao_compra_w 
from	solic_compra 
where	nr_solic_compra	= nr_solic_compra_p;
 
open C02;
loop 
fetch C02 into	 
	vet02;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	 
	delete from ctb_orc_doc_empenho 
	where	nr_solic_compra	= nr_solic_compra_p 
	and	cd_centro_custo		= vet02.cd_centro_custo 
	and	cd_conta_contabil	= vet02.cd_conta_contabil 
	and	dt_referencia		= vet02.dt_referencia 
	and	cd_estabelecimento	= vet02.cd_estabelecimento;
	 
	CALL ctb_atualizar_saldo_empenho(	vet02.cd_estabelecimento, 
					vet02.dt_referencia, 
					vet02.cd_centro_custo, 
					vet02.cd_conta_contabil, 
					nm_usuario_p);
 
	end;
end loop;
close C02;
 
 
 
open C01;
loop 
fetch C01 into	 
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	CALL ctb_registrar_doc_empenho(cd_estabelecimento_w, PKG_DATE_UTILS.start_of(dt_solicitacao_compra_w,'month',0), null, nr_solic_compra_p, 
				null,null,null, vet01.cd_centro_custo, vet01.cd_conta_contabil, vet01.vl_empenho,'N','I', nm_usuario_p);
	end;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_empenho_solic_compra ( nr_solic_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

