-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consiste_procedimento ( nr_seq_conta_p pls_conta.nr_sequencia%type, ie_tipo_consiste_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

/*
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**************************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************************
********* SE FOR ALTERAR ALGUMA COISA NESTA ROTINA, FAVOR VERIFICAR A pls_consiste_glosa_proc. ELA É UTILIZADA NO NOVO PROCESSO DE CONTAS MÉDICAS E  ************************
********* FOI CRIADA COM BASE NESTA ROTINA. HOUVE DUPLICAÇÃO DE CÓDIGO PARA MANTERMOS AS GLOSAS FUNCIONANDO NOS DOIS MODELOS ****************************************
**************************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************************
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*/
			

			
/* IE_TIPO_CONSISTE_P - domínio 1977
	IG 	|Importação do arquivo guia
	CC             	|Consistir Conta
	CG             	|Consistir Guia
	IA             	|Importação do arquivo conta
	CR             	|Consistir Reembolso
	DC	|Digitação da conta no portal
	I5	Importação do arquivo PTU A500
*/
nr_seq_conta_proc_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_prestador_w		bigint;
nr_seq_acao_regra_w		bigint;
ds_retorno_w			varchar(2000);
ie_tipo_guia_w			varchar(2);
ie_tipo_despesa_w		varchar(1);
ds_tipo_guia_w			varchar(255);
nr_seq_grupo_ans_w		bigint	:= null;
nr_seq_grupo_ans_atual_w	bigint	:= null;
ie_via_acesso_w			varchar(2);
ie_tipo_internacao_w		varchar(1);
nr_seq_conta_w			bigint;
nr_seq_clinica_w		bigint;
qt_procedimento_w		double precision;
cd_medico_executor_w		varchar(20);
ie_regime_internacao_w		varchar(1);
ie_tipo_conta_w			bigint;
nr_seq_conselho_w		bigint;
cd_procedimento_ant_w		bigint	:= 0;
ie_origem_proced_ant_w		bigint	:= 0;
ie_tipo_conta_ant_w		bigint	:= 0;
ie_origem_conta_w		pls_conta.ie_origem_conta%type;
qt_glosa_ativa_w		integer;
ie_gerar_grupo_ans_w		varchar(1);
ie_item_sem_grupos_ans_gerar_w  varchar(1);
cd_medico_partic_w		pls_proc_participante.cd_medico%type;

C01 CURSOR FOR
	SELECT	1,
		nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		ie_tipo_despesa,
		ie_via_acesso,
		qt_procedimento_imp,
		nr_seq_grupo_ans
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_p
	and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')
	and	(ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '')
	and	ie_tipo_consiste_p in ('CC','DC','I5')
	
union all

	SELECT	2,
		nr_sequencia,
		coalesce(cd_procedimento,cd_procedimento_imp),
		ie_origem_proced,
		ie_tipo_despesa,
		ie_via_acesso_imp,
		qt_procedimento_imp,
		nr_seq_grupo_ans
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_p
	and	ie_tipo_consiste_p = 'IA'
	order by
		1,
		cd_procedimento,
		ie_origem_proced;


BEGIN

select	coalesce(max(ie_consitencia_grupo_ans), 'S')
into STRICT	ie_gerar_grupo_ans_w
from	pls_parametro_contabil
where	cd_estabelecimento	= cd_estabelecimento_p;

select 	coalesce(max(ie_somente_sem_grupo_ans), 'N')
into STRICT	ie_item_sem_grupos_ans_gerar_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_tipo_consiste_p	in ('CC','DC','I5')) then
	/* Obter dados da conta */

	begin
		select	a.nr_sequencia,
			a.nr_seq_tipo_atendimento,
			a.ie_tipo_guia,
			a.cd_medico_executor,
			a.ie_regime_internacao,
			a.nr_seq_clinica,
			b.nr_seq_prestador,
			a.ie_origem_conta
		into STRICT	nr_seq_conta_w,
			nr_seq_tipo_atendimento_w,
			ie_tipo_guia_w,
			cd_medico_executor_w,
			ie_regime_internacao_w,
			nr_seq_clinica_w,
			nr_seq_prestador_w,
			ie_origem_conta_w
		from	pls_conta		a,
			pls_protocolo_conta 	b
		where	a.nr_seq_protocolo 	= b.nr_sequencia
		and	a.nr_sequencia		= nr_seq_conta_p;
	exception
	when others then
		nr_seq_conta_w		:= null;
		nr_seq_tipo_atendimento_w := null;
		ie_tipo_guia_w		:= null;
		ie_regime_internacao_w	:= null;
		cd_medico_executor_w	:= null;
		nr_seq_clinica_w	:= null;
		nr_seq_prestador_w	:= null;
	end;
elsif (ie_tipo_consiste_p	= 'IA') then
	begin
		select	a.nr_sequencia,
			pls_obter_tipo_atend_tiss(a.ie_tipo_atendimento_imp, cd_estabelecimento_p),
			a.ie_tipo_guia,
			a.ie_regime_internacao_imp,
			coalesce(a.cd_medico_executor, pls_obter_dados_gerar_conta(a.nr_sequencia,'M')),
			a.nr_seq_clinica,
			b.nr_seq_prestador,
			a.ie_origem_conta
		into STRICT	nr_seq_conta_w,
			nr_seq_tipo_atendimento_w,
			ie_tipo_guia_w,
			ie_regime_internacao_w,
			cd_medico_executor_w,
			nr_seq_clinica_w,
			nr_seq_prestador_w,
			ie_origem_conta_w
		from	pls_conta		a,
			pls_protocolo_conta 	b
		where	a.nr_seq_protocolo 	= b.nr_sequencia
		and	a.nr_sequencia		= nr_seq_conta_p;
	exception
	when others then
		nr_seq_conta_w		:= null;
		nr_seq_tipo_atendimento_w := null;
		ie_tipo_guia_w		:= null;
		ie_regime_internacao_w	:= null;
		cd_medico_executor_w	:= null;
		nr_seq_clinica_w	:= null;
		nr_seq_prestador_w	:= null;
	end;
end if;

-- Conselho do medico executor
select	max(nr_seq_conselho)
into STRICT	nr_seq_conselho_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_medico_executor_w;

open C01;
loop
fetch C01 into	
	ie_tipo_conta_w,
	nr_seq_conta_proc_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_tipo_despesa_w,
	ie_via_acesso_w,
	qt_procedimento_w,
	nr_seq_grupo_ans_atual_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (coalesce(cd_medico_executor_w::text, '') = '' or cd_medico_executor_w = 0) then
		nr_seq_conselho_w	:= null;
		
		select 	max(cd_medico)
		into STRICT	cd_medico_partic_w
		from	pls_proc_participante
		where	nr_seq_conta_proc	= nr_seq_conta_proc_w;
		
		select	max(nr_seq_conselho)
		into STRICT	nr_seq_conselho_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_medico_partic_w;
	end if;

	select	count(1)
	into STRICT	qt_glosa_ativa_w
	from	tiss_motivo_glosa	tiss
	where	cd_motivo_tiss	= '9910'
	and	pls_obter_se_evento_glosa(tiss.nr_sequencia, null, cd_estabelecimento_p) = 'S';
	
	if (qt_glosa_ativa_w > 0) then
		SELECT * FROM pls_obter_acao_regra_conta(	nr_seq_conta_proc_w, ie_tipo_consiste_p, nm_usuario_p, cd_estabelecimento_p, nr_seq_clinica_w, nr_seq_acao_regra_w, ds_retorno_w) INTO STRICT nr_seq_acao_regra_w, ds_retorno_w;
		if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then
			CALL pls_gravar_conta_glosa('9910', nr_seq_conta_p, null,
						null, 'N', ds_retorno_w || '(Regra: '||nr_seq_acao_regra_w||')',
						nm_usuario_p, 'A', ie_tipo_consiste_p,
						nr_seq_prestador_w, cd_estabelecimento_p, '',null);
		
		end if;
	end if;
	
	/* OS 101173 - Felipe */

	if (ie_tipo_despesa_w	= '3') and (ie_tipo_guia_w		!= '5') then
		CALL pls_gravar_conta_glosa('9913', nr_seq_conta_p, nr_seq_conta_proc_w,
					null, 'N', 'As diárias podem ser lançadas somente em contas de guia Resumo de internação (Guia conta: ' || ds_tipo_guia_w || ') ' ||
					nr_seq_tipo_atendimento_w, nm_usuario_p, 'A', 
					ie_tipo_consiste_p, nr_seq_prestador_w, cd_estabelecimento_p, '', null);
	end if;
	
	select	count(1)
	into STRICT	qt_glosa_ativa_w
	from	tiss_motivo_glosa	tiss
	where	cd_motivo_tiss	in ('9915','2603')
	and	pls_obter_se_evento_glosa(tiss.nr_sequencia, null, cd_estabelecimento_p) = 'S';
	
	if (qt_glosa_ativa_w > 0) then
		if (ie_tipo_despesa_w	= '1') then /* Felipe - 16/10/2008 - OS 113220 */
			CALL pls_consiste_participante(nr_seq_conta_proc_w, ie_tipo_consiste_p, nm_usuario_p, cd_estabelecimento_p);
		end if;
	end if;
	
	-- Parâmetro que verifica se o deve gerar o grupo ANS
	if ( ie_gerar_grupo_ans_w = 'S') and
		(( cd_procedimento_w 	!= cd_procedimento_ant_w ) or ( ie_origem_proced_w 	!= ie_origem_proced_ant_w) or ( ie_tipo_conta_w 	!= ie_tipo_conta_ant_w ) or
		(( coalesce(nr_seq_grupo_ans_atual_w::text, '') = '') and ( coalesce(nr_seq_grupo_ans_w::text, '') = ''))) then
	
		-- gera se este outro parâmetro estiver como N ou se estiver como S e o grupo atual for nulo
		if ( ie_item_sem_grupos_ans_gerar_w = 'N') or ( ie_item_sem_grupos_ans_gerar_w = 'S' and coalesce(nr_seq_grupo_ans_atual_w::text, '') = '') then

			nr_seq_grupo_ans_w	:= pls_obter_grupo_ans(	cd_procedimento_w, ie_origem_proced_w, nr_seq_conselho_w,
									nr_seq_tipo_atendimento_w, ie_tipo_guia_w, ie_regime_internacao_w,
									ie_tipo_conta_w, 'G',cd_estabelecimento_p, 
									nr_seq_conta_p);
		
		--Se por alguma razão não atualizar logo acima, então atribui o grupo atual á  nr_seq_grupo_ans_w para não gerar a 9908 indevidamente.
		else
		
			nr_seq_grupo_ans_w := nr_seq_grupo_ans_atual_w;
		
		end if;
	
	-- Se não atender as condições para atualização do grupo ANS porém ainda assim está marcado para gerar grupo e grupo atual já tem informação, então utiliza a mesma.
	elsif (ie_gerar_grupo_ans_w = 'S' and (nr_seq_grupo_ans_atual_w IS NOT NULL AND nr_seq_grupo_ans_atual_w::text <> '') and coalesce(nr_seq_grupo_ans_w::text, '') = '') then
			
			nr_seq_grupo_ans_w := nr_seq_grupo_ans_atual_w;
		
	end if;
		
	if (nr_seq_grupo_ans_w IS NOT NULL AND nr_seq_grupo_ans_w::text <> '') then
		update	pls_conta_proc
		set	nr_seq_grupo_ans	= nr_seq_grupo_ans_w
		where	nr_sequencia		= nr_seq_conta_proc_w;
	end if;
	
	if (coalesce(nr_seq_grupo_ans_w::text, '') = '') and ( ie_gerar_grupo_ans_w = 'S') then
		CALL pls_gravar_conta_glosa('9908','', nr_seq_conta_proc_w,null,'N',
					'Verificar as regras de procedimento X Grupo ANS',
					nm_usuario_p,'A',ie_tipo_consiste_p,nr_seq_prestador_w,
					cd_estabelecimento_p, '', null);
	end if;
	/* 1423 - Quantidade solicitada acima da quantidade permitida */

	select	count(1)
	into STRICT	qt_glosa_ativa_w
	from	tiss_motivo_glosa	tiss
	where	cd_motivo_tiss	= '1423'
	and	pls_obter_se_evento_glosa(tiss.nr_sequencia, null, cd_estabelecimento_p) = 'S';
	
	if (qt_glosa_ativa_w > 0) then
		ie_tipo_internacao_w	:= pls_obter_se_internado(nr_seq_conta_w,'');
		
		if (ie_tipo_internacao_w	= 'S') then
			ie_tipo_internacao_w	:= 'I';
		else
			ie_tipo_internacao_w	:= 'A';
		end if;

		CALL pls_consistir_qtde_proc(nr_seq_conta_p, cd_procedimento_w, ie_origem_proced_w,
					nr_seq_conta_proc_w, ie_tipo_consiste_p, ie_tipo_guia_w,
					ie_tipo_internacao_w, '', cd_estabelecimento_p,
					nm_usuario_p);
	end if;

	cd_procedimento_ant_w	:= cd_procedimento_w;
	ie_origem_proced_ant_w	:= ie_origem_proced_w;
	ie_tipo_conta_ant_w	:= ie_tipo_conta_w;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consiste_procedimento ( nr_seq_conta_p pls_conta.nr_sequencia%type, ie_tipo_consiste_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

