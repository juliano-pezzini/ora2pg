-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dmed_mensal_titular_plano ( nr_seq_dmed_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, ie_cpf_p text, ie_idade_p text, ie_estrangeiro_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
	GERAR_DMED_MENSAL_OPERADORA
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_benef_w		varchar(10);
conta_w				numeric(20);
dt_ano_calendario_w		varchar(5);
dt_liquidacao_w			timestamp;
ie_cpf_w			varchar(2)	:= ie_cpf_p;
ie_tipo_item_w			varchar(2);
nr_cpf_w			varchar(14);
nr_sequencia_w			bigint;
nr_sequencia_tit_w		bigint;
nr_seq_pagador_w		bigint;
nr_seq_titular_w		bigint;
nr_titulo_w			bigint;
vl_total_w			double precision;
vl_total_ww			double precision;
vl_total_www			double precision;
vl_diferenca_w	                double precision;
vl_total_mens_w			double precision;
vl_recebido_w			double precision;
vl_mensalidade_w		double precision;
vl_item_w			double precision;
contador_w			bigint	:= 0;
vl_aux_w			double precision;
nr_titulo_anterior_w		bigint	:= 0;
qt_tit_nota_cred_w		bigint;
nr_seq_nota_cred_w		bigint;
dt_nascimento_w			timestamp;
nr_titulo_ant_w			bigint	:= 0;
ie_estorno_w			varchar(1)	:= 'N';
nr_seq_mensalidade_seg_w	bigint;
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;
qt_classe_w			bigint;
vl_descontos_w			titulo_receber_liq.vl_descontos%type;
vl_juros_w			titulo_receber_liq.vl_juros%type;
vl_multa_w			titulo_receber_liq.vl_multa%type;
ie_juros_multa_w		dmed_regra_geral.ie_juros_multa%type;
ie_update_w			varchar(1) := 'S';
ie_tipo_contratacao_w		pls_plano.ie_tipo_contratacao%type;
vl_tributo_w			pls_mensalidade_trib.vl_tributo%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
cd_pessoa_fisica_pagador_w	pls_contrato_pagador.cd_pessoa_fisica%type;
ie_considerar_ca_pj_w		dmed_regra_geral.ie_considerar_ca_pj%type;
ie_permite_contrato_w		boolean;
nr_seq_item_w			pls_mensalidade_seg_item.nr_sequencia%type;
nr_seq_contrato_w		pls_contrato_pagador.nr_seq_contrato%type;
qt_cgc_administradora_w		bigint;
vl_devolucao_mens_w		double precision;
nr_seq_baixa_w			titulo_receber_liq.nr_sequencia%type;
cd_cgc_administradora_w    pls_contrato.cd_cgc_administradora%type;
cd_cgc_w      titulo_receber.cd_cgc%type;

C01 CURSOR FOR
	SELECT	coalesce(f.cd_pessoa_fisica, c.cd_pessoa_fisica) cd_pessoa_fisica,	-- busca o pagador ou o beneficiario (caso tenha cpf)
		f.cd_pessoa_fisica cd_pessoa_fisica_pagador,
		((coalesce(l.vl_recebido, 0) + coalesce(l.vl_rec_maior, 0)) -
			coalesce(dmed_obter_desc_tit_nc(l.nr_titulo, l.nr_sequencia, dt_referencia_p), 0)) vl_recebido,
		coalesce(l.vl_juros, 0) vl_juros,		
		coalesce(l.vl_multa, 0) vl_multa,
		m.vl_mensalidade,
		coalesce(r.dt_liquidacao, r.dt_emissao) dt_liquidacao,
		r.nr_titulo,	
		a.cd_pessoa_fisica cd_pessoa_benef,
		e.nr_sequencia,
		m.nr_sequencia nr_seq_mensalidade,
		a.nr_sequencia nr_seq_segurado,
		f.nr_seq_contrato,
		r.cd_cgc
	FROM pls_mensalidade m, pls_contrato_pagador f, pls_mensalidade_segurado e, pessoa_fisica c, pls_segurado a, titulo_receber r
LEFT OUTER JOIN titulo_receber_liq l ON (r.nr_titulo = l.nr_titulo)
WHERE m.nr_sequencia		= e.nr_seq_mensalidade and f.nr_sequencia		= m.nr_seq_pagador and m.nr_sequencia		= r.nr_seq_mensalidade  and a.nr_sequencia		= e.nr_seq_segurado and a.cd_pessoa_fisica 	= c.cd_pessoa_fisica and coalesce(a.nr_seq_titular::text, '') = '' and m.vl_mensalidade > 0 and ((l.vl_recebido <> 0) or (l.vl_rec_maior <> 0)) and ((coalesce(a.ie_tipo_segurado,'B') in ('B','A')) or (coalesce(a.ie_tipo_segurado,'B') = 'R' and (a.nr_seq_contrato IS NOT NULL AND a.nr_seq_contrato::text <> ''))) and l.dt_recebimento between dt_ref_inicial_w and dt_ref_final_w and ((a.cd_estabelecimento = coalesce(cd_estabelecimento_p ,a.cd_estabelecimento)) or
	   	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = ''))) and exists (SELECT	1
			from	dmed_regra_tipo_tit	w
			where	w.ie_tipo_receber = l.cd_tipo_recebimento
			and	coalesce(w.ie_prestadora_ops,'P')	= 'O') and exists (select	1
			from	dmed_regra_origem_tit	w
			where	w.ie_origem_titulo = r.ie_origem_titulo) and ((ie_cpf_p = 'AM') or
		((ie_cpf_p = 'SC') and (coalesce(c.nr_cpf::text, '') = '') 	and (pkg_date_utils.add_month(c.dt_nascimento, ie_idade_p * 12,0) <= Fim_Mes(dt_ref_inicial_w))) or
		((ie_cpf_p = 'CC') and (((c.nr_cpf IS NOT NULL AND c.nr_cpf::text <> '') and (pkg_date_utils.add_month(c.dt_nascimento, ie_idade_p * 12,0) <= Fim_Mes(dt_ref_inicial_w))) or (pkg_date_utils.add_month(c.dt_nascimento, ie_idade_p * 12,0) >= Fim_Mes(dt_ref_inicial_w))))) and (r.ie_situacao not in ('3','5') or (r.ie_situacao = '5' and 
		exists (select	1			
			from	titulo_receber_liq k
			where	k.nr_titulo = r.nr_titulo
			and 	vl_recebido > 0	
			and 	not exists (select 1 from titulo_receber_liq x where x.nr_titulo = k.nr_titulo and x.nr_seq_liq_origem = k.nr_sequencia  LIMIT 1)))) and ((coalesce(r.nr_seq_classe::text, '') = '') or (qt_classe_w = 0) or (exists (select 1 
			from 	 dmed_regra_classe_tit t
			where	 t.nr_seq_classe = r.nr_seq_classe))) and l.nr_sequencia in (	select  k.nr_sequencia
											from	titulo_receber_liq k
											where  k.nr_titulo = r.nr_titulo
											and 		coalesce(k.nr_seq_liq_origem::text, '') = ''
											and   	not exists (	select	1 
																			from 	titulo_receber_liq x 
																			where 	x.nr_titulo = k.nr_titulo 
																			and 		x.nr_seq_liq_origem = k.nr_sequencia  LIMIT 1)) order by r.nr_titulo;

C02 CURSOR FOR
	SELECT	d.vl_item, 
		d.ie_tipo_item ie_tipo_item,
		d.nr_Sequencia nr_Seq_item
	from 	pls_mensalidade_segurado	e,
		pls_mensalidade_seg_item	d,
		dmed_regra_tipo_item		t
	where 	e.nr_sequencia	= nr_seq_mensalidade_seg_w
	and	e.nr_sequencia	= d.nr_seq_mensalidade_seg
	and	d.ie_tipo_item	= t.ie_tipo_item
	and  	d.ie_tipo_item in (SELECT t.ie_tipo_item from dmed_regra_tipo_item t)
	and     ((d.nr_seq_tipo_lanc in (select	z.nr_tipo_lanc_adic
					from    dmed_regra_tipo_lanc z
					where   z.nr_seq_dmed_item = 	(select max(t.nr_sequencia)
									from   	dmed_regra_tipo_item t
									where  	t.ie_tipo_item = d.ie_tipo_item))) or
		((coalesce(d.nr_seq_tipo_lanc::text, '') = '') and (not exists (select  1
				from    dmed_regra_tipo_lanc z
				where   z.nr_seq_dmed_item in (select max(t.nr_sequencia) 
								from    dmed_regra_tipo_item t
								where   t.ie_tipo_item = d.ie_tipo_item)))));

C03 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type,
		dt_referencia_pc	timestamp) FOR
	SELECT	sum(vl_classificacao) * - 1 vl_devolucao_mens,
		a.nr_titulo nr_titulo,
		a.dt_baixa
	from	titulo_pagar_baixa a,
		titulo_pagar_baixa_cc_ops b
	where	trunc(a.dt_baixa, 'mm') = trunc(dt_referencia_pc, 'mm')
	and	a.nr_titulo = b.nr_titulo
	and	b.nr_seq_segurado = nr_seq_segurado_pc
	and	a.nr_sequencia = b.nr_seq_baixa
	and	 not exists (	SELECT	1
				from	dmed_titulos_mensal x
				where	x.nr_documento = a.nr_titulo)
	group by
		a.nr_titulo,
		dt_baixa;
								

BEGIN
dt_ref_inicial_w	:= pkg_date_utils.start_of(dt_referencia_p, 'MONTH',0);
dt_ref_final_w		:= fim_dia(fim_mes(dt_referencia_p));

select	count(1)
into STRICT	qt_classe_w
from	dmed_regra_classe_tit LIMIT 1;

select 	coalesce(max(ie_juros_multa), 'N'),
	coalesce(max(ie_considerar_ca_pj), 'N')
into STRICT	ie_juros_multa_w,
	ie_considerar_ca_pj_w
from	dmed_regra_geral;

open c01;
loop
fetch c01 into
	cd_pessoa_fisica_w,
	cd_pessoa_fisica_pagador_w,
	vl_recebido_w,
	vl_juros_w,
	vl_multa_w,
	vl_mensalidade_w,
	dt_liquidacao_w,
	nr_titulo_w,
	cd_pessoa_benef_w,
	nr_seq_mensalidade_seg_w,
	nr_seq_mensalidade_w,
	nr_seq_segurado_w,
	nr_seq_contrato_w,
	cd_cgc_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	select	coalesce(max(b.ie_tipo_contratacao), 'CE')
	into STRICT	ie_tipo_contratacao_w
	from	pls_plano b
	where	b.nr_sequencia = pls_obter_produto_benef(nr_seq_segurado_w,dt_liquidacao_w);
	
	if ie_considerar_ca_pj_w = 'S' then
		ie_permite_contrato_w := ((ie_tipo_contratacao_w in ('I','CA')) or (ie_tipo_contratacao_w in ('CE') and (cd_pessoa_fisica_pagador_w IS NOT NULL AND cd_pessoa_fisica_pagador_w::text <> '')));
		
    if  (ie_tipo_contratacao_w = 'CA' AND nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then

      select  max(a.cd_cgc_administradora)
      into STRICT  cd_cgc_administradora_w
      from  pls_contrato a
      where  a.nr_sequencia = nr_seq_contrato_w;

      if cd_cgc_w = cd_cgc_administradora_w then
        ie_permite_contrato_w := false;
      end if;
		end if;
	else
		ie_permite_contrato_w := ((ie_tipo_contratacao_w in ('I')) or (ie_tipo_contratacao_w in ('CE','CA') and (cd_pessoa_fisica_pagador_w IS NOT NULL AND cd_pessoa_fisica_pagador_w::text <> '')));
	end if;
	
  /* select  nvl(sum(b.vl_tributo),0)
  into  vl_tributo_w
  from     pls_mensalidade_trib b,
    pls_mensalidade_seg_item c,
    pls_mensalidade_Segurado a,
    pls_Mensalidade d
  where    c.nr_sequencia = b.nr_seq_item_mens
  and      d.nr_Sequencia = nr_seq_mensalidade_w
  and      b.ie_retencao = 'D'
  and      a.nr_Sequencia = c.nr_Seq_mensalidade_Seg
  and      d.nr_Sequencia = a.nr_Seq_mensalidade;
  
  vl_mensalidade_w := vl_mensalidade_w - vl_tributo_w;*/
	
	if (ie_permite_contrato_w) then
		begin
		
		select	nr_cpf,
			dt_nascimento
		into STRICT	nr_cpf_w,
			dt_nascimento_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		exception when others then
			nr_cpf_w := '';
			dt_nascimento_w := null;
		end;
		
		if 	ie_juros_multa_w = 'S' then
			vl_recebido_w := vl_recebido_w + vl_juros_w + vl_multa_w;
		end if;	

		if (vl_mensalidade_w > 0) then
			
			vl_total_ww := 0;

			/*for r_c03_w in c03 (nr_seq_segurado_w,dt_referencia_p) loop
				begin
				if	(r_c03_w.vl_devolucao_mens <> 0) then		
					select	dmed_titulos_mensal_Seq.nextval
					into 	nr_sequencia_w
					from 	dual;

					insert into dmed_titulos_mensal
						(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_dmed_mensal,
						nr_documento,
						ie_tipo_documento,
						cd_pessoa_titular,
						cd_pessoa_beneficiario,
						vl_pago,
						dt_liquidacao,
						ie_prestadora_ops)
					values	(nr_sequencia_w,
						sysdate,
						'Tasy1',
						sysdate,
						'Tasy1',
						nr_seq_dmed_p,
						r_c03_w.nr_titulo,
						'1',
						cd_pessoa_fisica_w,
						cd_pessoa_benef_w,
						r_c03_w.vl_devolucao_mens,
						r_c03_w.dt_baixa,
						'O');

				end if;
				end;
			end loop;*/
	
			open c02;
			loop
			fetch c02 into	
				vl_item_w,
				ie_tipo_item_w,
				nr_seq_item_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				
				vl_tributo_w := 0;
				
				if 	ie_tipo_contratacao_w = 'CA' then
					select	coalesce(sum(b.vl_tributo),0)
					into STRICT	vl_tributo_w
					from   	pls_mensalidade_trib b,
						pls_mensalidade_seg_item c,
						pls_mensalidade_Segurado a,
						pls_Mensalidade d,
						titulo_receber e
					where  	c.nr_sequencia = b.nr_seq_item_mens
					and    	d.nr_Sequencia = e.nr_seq_mensalidade
					and    	b.ie_retencao = 'D'
					and    	a.nr_Sequencia = c.nr_Seq_mensalidade_Seg
					and    	d.nr_Sequencia = a.nr_Seq_mensalidade
					and    	d.nr_Sequencia = nr_seq_mensalidade_w
					and 	c.nr_Sequencia = nr_seq_item_w;
					
					if vl_recebido_w < 0 then
						vl_tributo_w := vl_tributo_w * -1;
					else
						vl_tributo_w := 0;
					end if;	
				end if;			
				
				if 	((ie_cpf_w = 'CC' AND nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '') or
					((ie_cpf_w = 'SC') and (coalesce(nr_cpf_w::text, '') = '')) or (ie_cpf_w = 'AM')) then
					vl_total_w	:= round(((vl_recebido_w / vl_mensalidade_w) * vl_item_w), 2) + vl_tributo_w;
					vl_total_ww	:= vl_total_ww + vl_total_w;
					
					select 	nextval('dmed_titulos_mensal_seq')
					into STRICT	nr_sequencia_w
					;
					
					insert into dmed_titulos_mensal(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_dmed_mensal,
						nr_documento,
						ie_tipo_documento,
						cd_pessoa_titular,
						cd_pessoa_beneficiario,
						vl_pago,
						dt_liquidacao,
						ie_prestadora_ops)
					values (nr_sequencia_w,
						clock_timestamp(),
						'Tasy1',
						clock_timestamp(),
						'Tasy1',
						nr_seq_dmed_p,
						nr_titulo_w,
						ie_tipo_item_w,
						cd_pessoa_fisica_w,
						cd_pessoa_benef_w,
						vl_total_w,
						dt_liquidacao_w,
						'O');
					
					contador_w	:= contador_w + 1;
					
					if (contador_w mod 100 = 0) then
						commit;
					end if;
				
				end if;
				end;
			end loop;
			close c02;
			
			select 	sum(vl_pago)
			into STRICT	vl_total_www
			from	dmed_titulos_mensal
			where   nr_documento = nr_titulo_w	
			and	nr_seq_dmed_mensal = nr_seq_dmed_p;	
			
			if (vl_recebido_w <> vl_total_ww) or (vl_recebido_w <> vl_total_www) then
			
				vl_diferenca_w :=  (vl_recebido_w - vl_total_ww);

				ie_update_w := 'S';

				if (vl_diferenca_w >= -0.02) and (vl_diferenca_w <=  0.02) then

					update 	dmed_titulos_mensal
					set    	vl_pago = (vl_pago + vl_diferenca_w)
					where   nr_sequencia = nr_sequencia_w;

					ie_update_w := 'N';
				end if;

				vl_diferenca_w :=  (vl_recebido_w - vl_total_www);

				if (vl_diferenca_w >= -0.02) and (vl_diferenca_w <=  0.02) and (ie_update_w = 'S') then

					update 	dmed_titulos_mensal
					set    	vl_pago = (vl_pago + vl_diferenca_w)
					where   nr_sequencia = nr_sequencia_w;
				end if;
				
			end if;
			
		
		end if;
		
		nr_titulo_ant_w	:= nr_titulo_w;
	end if;
	end;
end loop;
close c01;

commit;

CALL dmed_mensal_titulos_negociados(	nr_seq_dmed_p,
				dt_referencia_p,
				cd_estabelecimento_p);

CALL dmed_mensal_dependente_titular(	nr_seq_dmed_p,
				dt_referencia_p,
				cd_estabelecimento_p,
				ie_cpf_p,
				ie_idade_p,
				ie_estrangeiro_p);
				
CALL dmed_mensal_reembolso(	nr_seq_dmed_p,
			dt_referencia_p, 
			cd_estabelecimento_p, 
			ie_cpf_p, 
			ie_idade_p, 
			ie_estrangeiro_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dmed_mensal_titular_plano ( nr_seq_dmed_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, ie_cpf_p text, ie_idade_p text, ie_estrangeiro_p text) FROM PUBLIC;

