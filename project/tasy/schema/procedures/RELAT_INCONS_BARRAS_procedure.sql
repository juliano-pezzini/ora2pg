-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE relat_incons_barras (nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w		banco_escrit_barras.nr_sequencia%type;
dt_lote_w			banco_escrit_lote.dt_lote%type;
dt_emissao_w		banco_escrit_barras.dt_emissao%type;
nr_titulo_w		banco_escrit_barras.nr_titulo%type;
cd_cgc_w		varchar(255);
cd_barras_w		banco_escrit_barras.cd_barras%type;
nm_pessoa_w		varchar(255);
ds_banco_w		banco.ds_banco%type;
nr_conta_w		varchar(255);
ie_digito_conta_w		varchar(255);
cd_agencia_w		varchar(255);
ie_digito_agencia_w	varchar(255);
vl_bloqueto_w		double precision;
dt_vencimento_w		timestamp;
ds_sacador_avalista_w	banco_escrit_barras.ds_sacador_avalista%type;
nr_documento_w		banco_escrit_barras.nr_documento%type;
nr_nosso_numero_w	banco_escrit_barras.nr_nosso_numero%type;
cd_banco_lote_w		banco_estabelecimento.cd_banco%type;
nr_titulo_ww		banco_escrit_barras.nr_titulo%type;
nr_sequencia_barras_w w_incons_barras.nr_sequencia%type;
nr_seq_lote_w			banco_escrit_barras.nr_seq_lote%type;

 
C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		b.dt_lote, 
		a.dt_emissao, 
		a.nr_titulo, 
		coalesce(a.cd_cgc,a.cd_pessoa_externo) cd_cgc, 
		a.cd_barras, 
		SUBSTR(coalesce(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc),wheb_mensagem_pck.get_texto(302527,NULL) || ' - ' || a.nm_pessoa_externo),1,255) nm_pessoa, -- Pessoa n√£o cadastrada 
		SUBSTR(obter_nome_banco(somente_numero(obter_dados_cod_barras(a.cd_barras,'B'))),1,254) ds_banco, 
		SUBSTR(obter_dados_cod_barras(a.cd_barras,'C'),1,254) nr_conta, 
		SUBSTR(obter_dados_cod_barras(a.cd_barras,'DC'),1,254) ie_digito_conta, 
		SUBSTR(obter_dados_cod_barras(a.cd_barras,'A'),1,254) cd_agencia, 
		SUBSTR(obter_dados_cod_barras(a.cd_barras,'DA'),1,254) ie_digito_agencia, 
		(obter_dados_cod_barras(a.cd_barras,'V'))::numeric  vl_bloqueto, 
		TO_DATE(obter_dados_cod_barras(a.cd_barras,'DT'),'dd/mm/yyyy') dt_vencimento, 
		a.ds_sacador_avalista, 
		a.nr_documento, 
		a.nr_nosso_numero, 
		coalesce((	SELECT	MAX(x.cd_banco) 
			FROM	banco_estabelecimento x 
			WHERE	x.nr_sequencia	= b.nr_seq_conta_banco),c.cd_banco) cd_banco_lote, 
		a.nr_seq_lote	 
	FROM banco_escrit_barras a
LEFT OUTER JOIN banco_escritural c ON (a.nr_seq_banco_escrit = c.nr_sequencia)
LEFT OUTER JOIN banco_escrit_lote b ON (a.nr_seq_lote = b.nr_sequencia)
WHERE (a.nr_titulo IS NOT NULL AND a.nr_titulo::text <> '') ORDER BY	a.nr_sequencia;


BEGIN 
 
delete FROM W_INCONS_BARRAS;
commit;
open C01;
loop 
fetch C01 into	 
	nr_sequencia_w, 
	dt_lote_w, 
	dt_emissao_w, 
	nr_titulo_w, 
	cd_cgc_w, 
	cd_barras_w, 
	nm_pessoa_w, 
	ds_banco_w, 
	nr_conta_w, 
	ie_digito_conta_w, 
	cd_agencia_w, 
	ie_digito_agencia_w, 
	vl_bloqueto_w, 
	dt_vencimento_w, 
	ds_sacador_avalista_w, 
	nr_documento_w, 
	nr_nosso_numero_w, 
	cd_banco_lote_w, 
	nr_seq_lote_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	nr_titulo_ww:= nr_titulo_w;	
	 
	nr_titulo_w := obter_titulo_regra_barras(cd_banco_lote_w, nr_documento_w, cd_cgc_w, cd_barras_w, nr_titulo_w, 'N', 0);
	 
	 
	if (nr_titulo_ww <> nr_titulo_w) then 
	 
	select count(*) + 1 
	into STRICT nr_sequencia_barras_w 
	from W_INCONS_BARRAS;
	 
 
 insert into W_INCONS_BARRAS(	NR_SEQUENCIA, 
 								NR_TITULO, 
								NR_TITULO_OK, 
								CD_BARRAS, 
								NR_LOTE, 
								NR_SEQ_BARRAS, 
								CD_CGC, 
								NM_PESSOA, 
								VL_BLOQUETO, 
								NR_DOCUMENTO, 
								CD_BANCO_BARRAS) 
								values (nr_sequencia_barras_w, 
								nr_titulo_ww, 
								nr_titulo_w, 
								cd_barras_w, 
								nr_seq_lote_w, 
								nr_sequencia_w, 
								substr(cd_cgc_w,1,14), 
								nm_pessoa_w, 
								vl_bloqueto_w, 
								nr_nosso_numero_w, 
								cd_banco_lote_w 
								);
	end if;
	 
	end;
end loop;
close C01;	
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE relat_incons_barras (nm_usuario_p text) FROM PUBLIC;

