-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_comunic_agend_int_opme (cd_estabelecimento_p bigint, nr_sequencia_p bigint, cd_evento_p bigint, nm_usuario_p text, ie_itens_nao_enviados_p text) AS $body$
DECLARE



nm_paciente_w			varchar(100);
nm_medico_w			varchar(100);
hr_inicio_w			timestamp;
ds_convenio_w			varchar(100);
ds_categoria_w			varchar(100);
ds_procedimento_w			varchar(255);
qt_existe_w			bigint;
nr_seq_regra_w			bigint;
cd_perfil_w			varchar(10);
nr_seq_classif_w			varchar(10);
nm_usuarios_adic_w		varchar(255);
ds_titulo_w			varchar(255);
ds_comunicacao_w			varchar(4000);
ie_ci_lida_w			varchar(1);
nr_seq_comunic_w			bigint;
nr_reserva_w			varchar(20);
ie_carater_cirurgia_w		varchar(80);	
ds_estabelecimento_w		varchar(255);
nr_sequencia_w			bigint;
ie_envio_comunic_w		varchar(1);

/*Cursor C02*/

cd_material_w			bigint;
qt_material_w			double precision;
cd_cgc_w			varchar(14);
ds_materiais_agenda_w		varchar(2000);

/*Cursor C03*/

ds_material_w			varchar(255);
qt_quantidade_w			double precision;
ds_fornecedor_w			varchar(255);
ds_materiais_sem_codigo_w		varchar(2000);

/* Se tiver setor na regra, envia CI para os setores */

ds_setor_adicional_w                    	varchar(2000) := '';
/* Campos da regra Usuario da Regra */

cd_setor_regra_usuario_w		integer;

c01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.cd_perfil,
		b.nm_usuarios_adic
	from	regra_envio_comunic_compra a,
		regra_envio_comunic_evento b
	where	a.nr_sequencia = b.nr_seq_regra
	and	a.cd_funcao = 871
	and	b.cd_evento = cd_evento_p
	and	b.ie_situacao = 'A'
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,0,'X',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

c02 CURSOR FOR
	SELECT	cd_material,
		qt_material,
		cd_cgc
	from 	agenda_pac_opme
	where	nr_seq_agenda = nr_sequencia_p;

c03 CURSOR FOR
	SELECT	ds_material,
		qt_quantidade,
		ds_fornecedor
	from 	agenda_pac_desc_material
	where	nr_seq_agenda = nr_sequencia_p;

c04 CURSOR FOR
	SELECT	ds_material,
		qt_quantidade,
		ds_fornecedor,
		nr_sequencia,
		CASE WHEN coalesce(ie_envio_comunic::text, '') = '' THEN 'N'  ELSE 'S' END  ie_envio_comunic
	from 	agenda_pac_desc_material
	where	nr_seq_agenda = nr_sequencia_p;

c05 CURSOR FOR
	SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento
	from	regra_envio_comunic_usu a
	where	a.nr_seq_evento = nr_seq_regra_w;


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	regra_envio_comunic_compra a,
	regra_envio_comunic_evento b
where	a.nr_sequencia = b.nr_seq_regra
and	a.cd_funcao = 871
and	b.cd_evento = cd_evento_p
and	b.ie_situacao = 'A'
and	a.cd_estabelecimento = cd_estabelecimento_p;

if (qt_existe_w > 0) then
	select	nr_reserva,				/*'Eletiva'*/
			/*'Urgencia'*/
		CASE WHEN a.ie_carater_cirurgia='E' THEN  wheb_mensagem_pck.get_Texto(312715)  ELSE wheb_mensagem_pck.get_Texto(312716) END  ie_carater_cirurgia,
		substr(obter_nome_pf(a.cd_pessoa_fisica),1,100) nm_paciente,
		substr(obter_nome_medico(a.cd_medico,'NC'),1,100) nm_medico,
		a.hr_inicio,
		substr(obter_nome_convenio(a.cd_convenio),1,100) ds_convenio,
		substr(obter_categoria_convenio(a.cd_convenio, cd_categoria),1,100) ds_categoria,
		substr(obter_proced_princ_adic_ag_pac(a.nr_sequencia, b.cd_estabelecimento),1,255) ds_procedimento 
	into STRICT	nr_reserva_w,
		ie_carater_cirurgia_w,
		nm_paciente_w,
		nm_medico_w,
		hr_inicio_w,
		ds_convenio_w,
		ds_categoria_w,
		ds_procedimento_w
	from	agenda_paciente a,
		agenda b
	where	a.cd_agenda = b.cd_agenda
	and	a.nr_sequencia = nr_sequencia_p;
	
	select	substr(obter_nome_estabelecimento(cd_estabelecimento),1,255)
	into STRICT	ds_estabelecimento_w
	from 	agenda a,
		agenda_paciente b
	where 	a.cd_agenda = b.cd_agenda
	and 	b.nr_sequencia = nr_sequencia_p;

	open C02;
	loop
	fetch C02 into	
		cd_material_w,
		qt_material_w,
		cd_cgc_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ds_materiais_agenda_w := substr(ds_materiais_agenda_w || cd_material_w || ' - ' || substr(obter_desc_material(cd_material_w),1,255) ||
					 ' ' || wheb_mensagem_pck.get_Texto(312718) || ' ' || qt_material_w || ' '|| wheb_mensagem_pck.get_Texto(312719) || ' ' || substr(obter_nome_pf_pj(null,cd_cgc_w),1,80) || chr(13) || chr(10),1,2000);
		end;
	end loop;
	close C02;

	if (coalesce(ie_itens_nao_enviados_p,'N') = 'S') then
		open C04;
		loop
		fetch C04 into	
			ds_material_w,
			qt_quantidade_w,
			ds_fornecedor_w,
			nr_sequencia_w,
			ie_envio_comunic_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			ds_materiais_sem_codigo_w := substr(ds_materiais_sem_codigo_w || substr(ds_material_w,1,255) || ' ' || wheb_mensagem_pck.get_Texto(312718) || '' || qt_quantidade_w || ' ' || wheb_mensagem_pck.get_Texto(312719) || ' ' || substr(ds_fornecedor_w,1,100) || ' CI.: ' || substr(ie_envio_comunic_w,1,10) || chr(13) || chr(10),1,2000);
			end;
		end loop;
		close C04;
	else
		open C03;
		loop
		fetch C03 into	
			ds_material_w,
			qt_quantidade_w,
			ds_fornecedor_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			ds_materiais_sem_codigo_w := substr(ds_materiais_sem_codigo_w || substr(ds_material_w,1,255) || ' ' || wheb_mensagem_pck.get_Texto(312718) || ' ' || qt_quantidade_w || ' ' || wheb_mensagem_pck.get_Texto(312719) || ' ' || substr(ds_fornecedor_w,1,100) || chr(13) || chr(10),1,2000);
			end;
		end loop;
		close C03;
	end if;

	open C01;
	loop
	fetch C01 into	
		nr_seq_regra_w,
		cd_perfil_w,
		nm_usuarios_adic_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		open C05;
		loop
		fetch C05 into	
			cd_setor_regra_usuario_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then
				ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
			end if;
			end;
		end loop;
		close C05;

		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
			cd_perfil_w := cd_perfil_w ||',';
		end if;
		
		if (nm_usuarios_adic_w IS NOT NULL AND nm_usuarios_adic_w::text <> '') or (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
		
			select	
			max(b.ds_titulo)ds_titulo,
			max(b.ds_comunicacao) ds_comunicacao
			into STRICT	ds_titulo_w,
				ds_comunicacao_w
			from	regra_envio_comunic_compra a,
				regra_envio_comunic_evento b
			where	a.nr_sequencia = b.nr_seq_regra
			and	b.nr_sequencia = nr_seq_regra_w;
		
	
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@agendamento', nr_sequencia_p),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@paciente', nm_paciente_w),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@cirurgiao', nm_medico_w),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@hr_inicio',
									PKG_DATE_FORMATERS_TZ.TO_VARCHAR(hr_inicio_w,'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.GETTIMEZONE)),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@convenio', ds_convenio_w),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@categoria', ds_categoria_w),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@estabelecimento', ds_estabelecimento_w),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@reserva', nr_reserva_w),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@carater', ie_carater_cirurgia_w),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@materiais_Agenda', ds_materiais_agenda_w),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@materiais_Sem_Codigo', ds_materiais_sem_codigo_w),1,255);
					ds_titulo_w := 	substr(replace_macro(ds_titulo_w, '@procedimento', ds_procedimento_w),1,255);

			
			
			
			
			
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@agendamento', nr_sequencia_p);
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@paciente', nm_paciente_w);
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@cirurgiao', nm_medico_w);
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@hr_inicio',
												PKG_DATE_FORMATERS_TZ.TO_VARCHAR(hr_inicio_w,'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.GETTIMEZONE));
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@convenio', ds_convenio_w);
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@categoria', ds_categoria_w);
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@estabelecimento', ds_estabelecimento_w);
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@reserva', nr_reserva_w);
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@carater', ie_carater_cirurgia_w);
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@materiais_Agenda', ds_materiais_agenda_w);
					ds_comunicacao_w := 		replace_macro(ds_comunicacao_w, '@materiais_Sem_Codigo', ds_materiais_sem_codigo_w);
					ds_comunicacao_w := substr(	replace_macro(ds_comunicacao_w, '@procedimento', ds_procedimento_w),1,4000);

			select	coalesce(ie_ci_lida,'N')
			into STRICT	ie_ci_lida_w
			from 	regra_envio_comunic_evento
			where 	nr_sequencia = nr_seq_regra_w;

			select	obter_classif_comunic('F')
			into STRICT	nr_seq_classif_w
			;
			
			select	nextval('comunic_interna_seq')
			into STRICT	nr_seq_comunic_w
			;
			insert	into comunic_interna(
				nr_sequencia,
				dt_comunicado,
				ds_titulo,
				ds_comunicado,
				nm_usuario,
				dt_atualizacao,
				ie_geral,
				nm_usuario_destino,
				ie_gerencial,
				nr_seq_classif,
				dt_liberacao,
				ds_perfil_adicional,
				ds_setor_adicional)
			values (	nr_seq_comunic_w,
				clock_timestamp(),
				ds_titulo_w,
				ds_comunicacao_w,
				nm_usuario_p,
				clock_timestamp(),
				'N',
				nm_usuarios_adic_w,
				'N',
				nr_seq_classif_w,
				clock_timestamp(),
				cd_perfil_w,
				ds_setor_adicional_w);

			/*Para que a comunicacao seja gerada como lida ao proprio usuario */

			if (ie_ci_lida_w = 'S') then
				insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
			end if;

			if (coalesce(cd_evento_p,0) = 46) then
				open C04;
				loop
				fetch C04 into	
					ds_material_w,
					qt_quantidade_w,
					ds_fornecedor_w,
					nr_sequencia_w,
					ie_envio_comunic_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					
					update	agenda_pac_desc_material
					set	ie_envio_comunic = 'S'
					where	nr_sequencia = nr_sequencia_w;
					
					end;
				end loop;
				close C04;
			end if;
		end if;
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_comunic_agend_int_opme (cd_estabelecimento_p bigint, nr_sequencia_p bigint, cd_evento_p bigint, nm_usuario_p text, ie_itens_nao_enviados_p text) FROM PUBLIC;

