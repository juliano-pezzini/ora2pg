-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_estrut_conta_proc ( cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_plano_p text, cd_medico_executor_p text, cd_regra_honorario_p text, nr_sequencia_p bigint, cd_setor_atendimento_p bigint, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, cd_especialidade_p bigint, cd_categoria_p text, dt_procedimento_p text, cd_cgc_prestador_p text, cd_estrutura_p INOUT bigint, cd_estrutura_honor_p INOUT bigint) AS $body$
DECLARE


cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
cd_estrutura_w			integer;
ie_estrutura_w			smallint;
ie_conveniado_w			varchar(1);
ie_honorario_pacote_w		varchar(1);
cd_regra_honorario_w		varchar(5);
ie_honorario_w			varchar(1);
cd_edicao_amb_w			integer;
ie_tipo_convenio_w			integer;
ie_prioridade_edicao_w		varchar(15);
vl_ch_honorarios_w			double precision := 1;
vl_ch_custo_oper_w		double precision := 1;
vl_m2_filme_w			double precision := 0;
dt_inicio_vigencia_w		timestamp;
tx_ajuste_geral_w			double precision;
nr_seq_forma_org_w		bigint := 0;
nr_seq_grupo_w			bigint := 0;
nr_seq_subgrupo_w		bigint := 0;
nr_seq_categ_medico_w		bigint	:= 0;
nr_seq_cbhpm_edicao_w		bigint;
nr_seq_exame_w			bigint;
nr_seq_grupo_lab_w		bigint;
cd_tipo_procedimento_w		smallint;

c01 CURSOR FOR
	SELECT 	a.cd_estrutura,
		a.ie_honorario
      	from 	conta_estrut_proc 	 a,
		conta_paciente_estrutura b
      	where 	a.cd_estrutura = b.cd_estrutura
	and 	coalesce(b.ie_situacao,'I') = 'A'
	and 	coalesce(a.cd_procedimento,cd_procedimento_p)	   	= cd_procedimento_p
	and	coalesce(a.ie_origem_proced,ie_origem_proced_p)   	= ie_origem_proced_p
	and	coalesce(a.cd_grupo_proced,cd_grupo_proc_w)	   	= cd_grupo_proc_w
	and	coalesce(a.cd_especial_proced,cd_especialidade_w) 	= cd_especialidade_w
	and	coalesce(a.cd_area_proced,cd_area_procedimento_w)	= cd_area_procedimento_w
	and	coalesce(a.nr_seq_grupo,nr_seq_grupo_w)		= nr_seq_grupo_w
	and	coalesce(a.nr_seq_subgrupo,nr_seq_subgrupo_w)		= nr_seq_subgrupo_w
	and	coalesce(a.nr_seq_forma_org,nr_seq_forma_org_w)	= nr_seq_forma_org_w
	and	coalesce(a.nr_seq_grupo_lab, nr_seq_grupo_lab_w)	= nr_seq_grupo_lab_w
	and	coalesce(a.cd_convenio,cd_convenio_p) 			= cd_convenio_p
	and	coalesce(a.cd_edicao_amb,cd_edicao_amb_w)		= cd_edicao_amb_w
	and	coalesce(a.ie_tipo_convenio, ie_tipo_convenio_w)	= ie_tipo_convenio_w
	and	((a.ie_credenciado	= 'T') or ((a.ie_credenciado <> 'T') and coalesce(a.ie_credenciado,ie_conveniado_w)	= ie_conveniado_w))
/*	and	decode(ie_credenciado,'T',ie_conveniado_w, nvl(ie_credenciado,ie_conveniado_w))	= ie_conveniado_w */

	and	CASE WHEN ie_honorario_pacote_w='N' THEN  'N'  ELSE a.ie_honorario END 	= a.ie_honorario
	and 	coalesce(a.ie_tipo_atendimento,ie_tipo_atendimento_p)	= ie_tipo_atendimento_p
	and	coalesce(a.cd_setor_atendimento,cd_setor_atendimento_p)= cd_setor_atendimento_p
	and	coalesce(a.cd_medico, coalesce(cd_medico_executor_p,0))	= coalesce(cd_medico_executor_p,0)
	and	coalesce(a.cd_especialidade, coalesce(cd_especialidade_p,0))= coalesce(cd_especialidade_p,0)
	and	coalesce(a.cd_edicao_amb, cd_edicao_amb_w)		= cd_edicao_amb_w
	and	coalesce(a.ie_responsavel_credito, coalesce(cd_regra_honorario_p,0))	= coalesce(cd_regra_honorario_p,0)
	and	coalesce(a.nr_seq_categoria,nr_seq_categ_medico_w)	= nr_seq_categ_medico_w
	and	coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
	and 	coalesce(a.cd_tipo_procedimento, coalesce(cd_tipo_procedimento_w,0)) = coalesce(cd_tipo_procedimento_w,0)
	order by
			coalesce(a.cd_especialidade,0),
			coalesce(a.cd_procedimento,0),
			coalesce(a.nr_seq_forma_org,0),
			coalesce(a.nr_seq_subgrupo,0),
			coalesce(a.nr_seq_grupo,0),
			coalesce(a.cd_grupo_proced,0),
			coalesce(a.cd_especial_proced,0),
			coalesce(a.cd_area_proced,0),
			coalesce(a.nr_seq_grupo_lab,0),
			coalesce(a.cd_setor_atendimento,0),
			coalesce(a.cd_convenio,0),
			coalesce(a.ie_tipo_convenio,0),
			coalesce(a.cd_tipo_procedimento,0),
			coalesce(a.cd_edicao_amb, cd_edicao_amb_w),
			coalesce(a.ie_credenciado,'T'),
			coalesce(a.cd_medico,0),
			coalesce(a.ie_responsavel_credito, coalesce(cd_regra_honorario_p,0)),
			coalesce(a.nr_seq_categoria,nr_seq_categ_medico_w),
			a.cd_estrutura;


BEGIN

cd_regra_honorario_w	:= cd_regra_honorario_p;

select	coalesce(max(ie_prioridade_edicao_amb), 'N')
into STRICT	ie_prioridade_edicao_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_p;

select	coalesce(max(ie_tipo_convenio),0)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio		= cd_convenio_p;

/*      obter ediçao da amb  */

if (ie_prioridade_edicao_w		= 'N') then

	begin
	select	cd_edicao_amb
	into STRICT		cd_edicao_amb_w
	from		convenio_amb
	where		cd_estabelecimento	= cd_estabelecimento_p
	and		cd_convenio			= cd_convenio_p
	and		cd_categoria		= cd_categoria_p
	and 		coalesce(ie_situacao,'A')	= 'A'
	and		dt_inicio_vigencia	=
			(SELECT max(dt_inicio_vigencia)
				from		convenio_amb a
				where		a.cd_estabelecimento	= cd_estabelecimento_p
				and		a.cd_convenio		= cd_convenio_p
				and		a.cd_categoria		= cd_categoria_p
			      and 		coalesce(ie_situacao,'A')	= 'A'
				and		a.dt_inicio_vigencia 	<= dt_procedimento_p);
	exception
			when others then
	     		cd_edicao_amb_w 	:= 0;
	end;
else
	begin
	SELECT * FROM obter_edicao_proc_conv(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_procedimento_p, cd_procedimento_p, cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
	exception
		when others then
		cd_edicao_amb_w		:= 0;
	end;
end if;

cd_edicao_amb_w		:= coalesce(cd_edicao_amb_w,0);


select 	coalesce(max(cd_tipo_procedimento),0)
into STRICT	cd_tipo_procedimento_w
from 	procedimento
where 	cd_procedimento = cd_procedimento_p
and 	ie_origem_proced = ie_origem_proced_p;


begin
select 	'N'
into STRICT	ie_honorario_w
from	procedimento_paciente a,
	atendimento_pacote b
where	a.nr_sequencia		= nr_sequencia_p
and	a.nr_atendimento	= b.nr_atendimento
and	a.nr_sequencia		= b.nr_seq_procedimento  LIMIT 1;
exception
	when others then
	ie_honorario_w	:= 'S';
end;

select	max(nr_seq_exame)
into STRICT	nr_seq_exame_w
from	procedimento_paciente
where	nr_sequencia = nr_sequencia_p;

nr_seq_grupo_lab_w := 0;
if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
	select	coalesce(max(nr_seq_grupo),0)
	into STRICT	nr_seq_grupo_lab_w
	from	exame_laboratorio
	where	nr_seq_exame = nr_seq_exame_w;
end if;

select
	max(cd_grupo_proc),
	max(cd_especialidade),
	max(cd_area_procedimento)
into STRICT	cd_grupo_proc_w,
	cd_especialidade_w,
	cd_area_procedimento_w
from 	estrutura_procedimento_v
where cd_procedimento	= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;


/*estrutura sus unificado*/

select	coalesce(max(nr_seq_grupo),0),
	coalesce(max(nr_seq_subgrupo),0),
	coalesce(max(nr_seq_forma_org),0)
into STRICT	nr_seq_grupo_w,
	nr_seq_subgrupo_w,
	nr_seq_forma_org_w
from	sus_estrutura_procedimento_v
where 	cd_procedimento	= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;

ie_conveniado_w	:= 'T';

if (cd_medico_executor_p <> '') 		or (cd_medico_executor_p IS NOT NULL AND cd_medico_executor_p::text <> '') 	then
	begin

     /* select		nvl(max(ie_conveniado), 'X')
	into		ie_conveniado_w
	from		medico_convenio
	where		cd_pessoa_fisica		= cd_medico_executor_p
	and		cd_convenio			= cd_convenio_p
	and		cd_prestador			= nvl(cd_cgc_prestador_p, '0');

	if	(ie_conveniado_w	= 'X') then
		begin
		select		ie_conveniado
		into		ie_conveniado_w
		from		medico_convenio
		where		cd_convenio		= cd_convenio_p
		and		cd_pessoa_fisica	= cd_medico_executor_p
		and		cd_prestador		is null;
		exception
     			when others then
			ie_conveniado_w	:= 'N';
		end;
	end if;  */
	/* substituída a rotina acima por essa abaixo os 86907 11/06/2008 fabrício */

	select 	obter_se_medico_credenciado(cd_estabelecimento_p, cd_medico_executor_p, cd_convenio_p,
		cd_cgc_prestador_p, cd_especialidade_p, cd_categoria_p,cd_setor_atendimento_p, cd_plano_p, dt_procedimento_p,
		ie_tipo_atendimento_p, null, null)
	into STRICT	ie_conveniado_w
	;


	/*matheus os 121656 03/03/2009*/

	select	coalesce(max(nr_seq_categoria),0)
	into STRICT	nr_seq_categ_medico_w
	from	medico
	where	cd_pessoa_fisica	= cd_medico_executor_p;

	end;
elsif (cd_cgc_prestador_p IS NOT NULL AND cd_cgc_prestador_p::text <> '') then
	select	CASE WHEN coalesce(max(cd_prestador_convenio)::text, '') = '' THEN 'N'  ELSE 'S' END
	into STRICT	ie_conveniado_w
	from	convenio_prestador
	where	cd_convenio	= cd_convenio_p
	and	cd_cgc		= cd_cgc_prestador_p;
end if;

open c01;
loop
	fetch c01 into
		cd_estrutura_w,
		ie_honorario_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		cd_estrutura_p		:= null;

		if (ie_honorario_w	= 'S') then
			cd_estrutura_honor_p	:= cd_estrutura_w;
		else
			cd_estrutura_p		:= cd_estrutura_w;
		end if;

		end;
end loop;
close c01;

if (coalesce(cd_estrutura_p::text, '') = '') and (cd_estrutura_honor_p IS NOT NULL AND cd_estrutura_honor_p::text <> '') then
	cd_estrutura_p		:= cd_estrutura_honor_p;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_estrut_conta_proc ( cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_plano_p text, cd_medico_executor_p text, cd_regra_honorario_p text, nr_sequencia_p bigint, cd_setor_atendimento_p bigint, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, cd_especialidade_p bigint, cd_categoria_p text, dt_procedimento_p text, cd_cgc_prestador_p text, cd_estrutura_p INOUT bigint, cd_estrutura_honor_p INOUT bigint) FROM PUBLIC;

