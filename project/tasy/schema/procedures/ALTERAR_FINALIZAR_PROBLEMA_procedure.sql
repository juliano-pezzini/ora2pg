-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_finalizar_problema ( nr_sequencia_p bigint, ie_intensidade_p text, ie_status_p text, ds_observacao_p text, nm_usuario_p text, dt_fim_p timestamp, ie_opcao_p text, ie_tipo_diagnostico_p bigint default null, ie_main_enc_probl_p text default null) AS $body$
DECLARE


qt_intervalo_status_w   double precision;
qt_diag_linked_w		integer;
nr_seq_apresen_esp_w	lista_problema_pac.nr_seq_apresen_esp%type;
cd_pessoa_fisica_w		lista_problema_pac.cd_pessoa_fisica%type;
ie_tipo_diagnostico_w 	lista_problema_pac.ie_tipo_diagnostico%type;

c01 CURSOR FOR
	SELECT nr_seq_registro, ie_tipo_registro, nm_tabela
	from lista_problema_pac a, lista_problema_pac_item b
	where a.nr_sequencia = b.nr_seq_problema
	and b.nr_seq_problema = nr_sequencia_p							
	and obter_se_item_prob_sem_dt_fim(nr_seq_registro, ie_tipo_registro, nm_tabela, cd_pessoa_fisica, 'N') = 'S';
	
c01_w c01%rowtype;

ds_sql_fim_w varchar(4000);
	

BEGIN

/*
AP - Alterar problema
FP - Finalizar problema
LB - Gerar log de liberacao do problema.
CT - Change type of diagnosis
CM - Change main reason Diagnosis
*/
select	max(round((clock_timestamp() - dt_atualizacao)::numeric, 4)),
		max(nr_seq_apresen_esp),
		max(cd_pessoa_fisica),
		max(ie_tipo_diagnostico)
into STRICT	qt_intervalo_status_w,
		nr_seq_apresen_esp_w,
		cd_pessoa_fisica_w,
		ie_tipo_diagnostico_w
from	lista_problema_pac
where	nr_sequencia = nr_sequencia_p;


if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and
	((ie_opcao_p = 'AP') or (ie_opcao_p = 'CT') or (ie_opcao_p = 'CM')) then

	update	lista_problema_pac
	set	ie_intensidade		= ie_intensidade_p,
		ie_status		= ie_status_p,
		ds_observacao	        = ds_observacao_p,
		dt_revisao 		= clock_timestamp(),
		dt_atualizacao		= clock_timestamp(),
		dt_fim		        = dt_fim_p,
		nm_usuario_status	= nm_usuario_p,		
		nm_usuario	        = nm_usuario_p,
                ie_main_enc_probl       = ie_main_enc_probl_p
	where	nr_sequencia		= nr_sequencia_p;
end if;

commit;

insert into lista_problema_status(		
					nr_sequencia,
					ie_status, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec,
					nm_usuario_nrec, 
					ie_intensidade, 
					ds_observacao, 
					qt_intervalo_status, 
					nr_seq_problema, 
					dt_revisao,
					ie_tipo_diagnostico
        ) SELECT
					nextval('lista_problema_status_seq'),
					CASE WHEN ie_opcao_p='FP' THEN  4  ELSE ie_status_p END , -- 4 = Status Resolvido
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					CASE WHEN ie_opcao_p='FP' THEN  null  ELSE ie_intensidade_p END ,
					ds_observacao_p,
					CASE WHEN ie_opcao_p='LB' THEN  0  ELSE qt_intervalo_status_w END ,
					nr_sequencia_p,
          case ie_opcao_p when 'LB' then null else clock_timestamp() end,
					CASE WHEN coalesce(ie_tipo_diagnostico_p::text, '') = '' THEN  ie_tipo_diagnostico_w  ELSE ie_tipo_diagnostico_p END 
				;
					
					
	CALL gerar_fatos_problema(nr_sequencia_p,nm_usuario_p);
	
	if (ie_opcao_p = 'AP')  then
		CALL gerar_especialidade_problema(nr_sequencia_p,cd_pessoa_fisica_w,nm_usuario_p,nr_seq_apresen_esp_w,'N');					
	end if;
					
					
if (ie_opcao_p = 'FP') then

	open C01;

	update	lista_problema_pac
	set	ds_motivo_finalizacao = ds_observacao_p,
		dt_fim = clock_timestamp(),
		ie_status = '5',
		dt_atualizacao = clock_timestamp(),
		nm_usuario_finalizacao = nm_usuario_p,		
		nm_usuario = nm_usuario_p
	where nr_sequencia = nr_sequencia_p;
		
	loop
	fetch C01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
			ds_sql_fim_w :=
				' update ' || c01_w.nm_tabela ||
				' set dt_fim = sysdate, ' ||  
				' dt_atualizacao = sysdate, ' ||
				' nm_usuario = ''' || nm_usuario_p || '''';
				
				if (c01_w.ie_tipo_registro = 'DM') then
					ds_sql_fim_w := ds_sql_fim_w ||
					' where nr_seq_interno = ' || c01_w.nr_seq_registro;
				else
					ds_sql_fim_w := ds_sql_fim_w ||
					' where nr_sequencia = ' || c01_w.nr_seq_registro;
				end if;
				
				commit;
			
				CALL Exec_sql_Dinamico('Finalizar Vinculados Problema',ds_sql_fim_w);	
		end;
	end loop;
	close C01;
	
	
end if;					
					
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_finalizar_problema ( nr_sequencia_p bigint, ie_intensidade_p text, ie_status_p text, ds_observacao_p text, nm_usuario_p text, dt_fim_p timestamp, ie_opcao_p text, ie_tipo_diagnostico_p bigint default null, ie_main_enc_probl_p text default null) FROM PUBLIC;

