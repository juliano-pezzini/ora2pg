-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_liberar_ata ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
qt_registro_w			bigint;
cd_estabelecimento_w		smallint;
ie_comunic_interna_w		varchar(1);
ie_email_w			varchar(1);
cd_participante_w			varchar(10);
cd_pessoa_origem_w		varchar(10);
nm_usuario_participante_w		varchar(15);
ds_ata_w				varchar(255);
ds_email_w			varchar(2000);
ds_email_origem_w			varchar(2000);

C01 CURSOR FOR 
SELECT	cd_pessoa_participante, 
	ds_email 
from	proj_ata_participante 
where	nr_seq_ata = nr_sequencia_p 
and	(cd_pessoa_participante IS NOT NULL AND cd_pessoa_participante::text <> '');


BEGIN 
select	max(cd_estabelecimento) 
into STRICT	cd_estabelecimento_w 
from	usuario 
where	nm_usuario = nm_usuario_p;
 
ie_comunic_interna_w := Obter_Param_Usuario(1351, 20, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_comunic_interna_w);
ie_email_w := Obter_Param_Usuario(1351, 27, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_email_w);
 
select	coalesce(a.ds_email,'X'), 
	a.cd_pessoa_fisica 
into STRICT	ds_email_origem_w, 
	cd_pessoa_origem_w 
from	usuario a 
where	a.nm_usuario = nm_usuario_p;
 
if (ds_email_origem_w = 'X') then 
	ds_email_origem_w := substr(obter_dados_pf_pj(cd_pessoa_origem_w,null,'M'),1,255);
end if;
 
select	count(*) 
into STRICT	qt_registro_w 
from	proj_ata_conteudo b, 
	proj_ata a 
where	a.nr_sequencia	= b.nr_seq_ata 
and	a.nr_sequencia	= nr_sequencia_p;
 
if (qt_registro_w = 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(210047);
end if;
 
select	count(*) 
into STRICT	qt_registro_w 
from	proj_ata_participante b, 
	proj_ata a 
where	a.nr_sequencia	= b.nr_seq_ata 
and	a.nr_sequencia	= nr_sequencia_p;		
 
if (qt_registro_w = 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(210048);
end if;
 
update	proj_ata 
set	dt_liberacao	= clock_timestamp(), 
	dt_atualizacao	= clock_timestamp(), 
	nm_usuario	= nm_usuario_p 
where	nr_sequencia	= nr_sequencia_p;
 
commit;
 
select	max(ds_ata) 
into STRICT	ds_ata_w 
from	proj_ata 
where	nr_sequencia = nr_sequencia_p;
 
if (ie_comunic_interna_w = 'S') then 
	begin 
	open C01;
	loop 
	fetch C01 into	 
		cd_participante_w, 
		ds_email_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		select	max(nm_usuario) 
		into STRICT	nm_usuario_participante_w 
		from	usuario 
		where	cd_pessoa_fisica = cd_participante_w 
		and	ie_situacao = 'A';
 
		if (nm_usuario_participante_w IS NOT NULL AND nm_usuario_participante_w::text <> '') then 
			begin 
			CALL gerar_comunic_padrao(	clock_timestamp(),'Liberação de ATA', 
						'Realizada a liberação da ATA '||nr_sequencia_p||' - '||ds_ata_w, 
						nm_usuario_p,'N',nm_usuario_participante_w,'N',null,'','','',clock_timestamp(),'','');
			end;
		end if;
 
		end;
	end loop;
	close C01;
	end;
end if;
if (ie_email_w = 'S') then 
	begin 
	open C01;
	loop 
	fetch C01 into	 
		cd_participante_w, 
		ds_email_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		CALL enviar_email(	'Liberação de ATA','Realizada a liberação da ATA '||nr_sequencia_p||' - '||ds_ata_w, 
					ds_email_origem_w,ds_email_w,nm_usuario_p,'M');
		end;
	end loop;
	close C01;
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_liberar_ata ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

