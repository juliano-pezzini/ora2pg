-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_movimentacao_cirurgia ( dt_inicial_p timestamp, dt_final_p timestamp, cd_setor_origem_p bigint default 0, cd_setor_destino_p bigint default 0) AS $body$
DECLARE

				 
nm_paciente_w			varchar(255);				
qt_perc_cirurgia_w		varchar(10) := 0;
nr_atendimento_w		bigint;
cd_setor_origem_w		bigint;
cd_setor_destino_w		bigint;
nr_seq_origem_w			bigint;		
nr_seq_dest_w			bigint;
qt_total_cirurgia_w		bigint;
nr_seq_interno_w		bigint;
dt_entrada_unidade_w		timestamp;
dt_saida_unidade_w		timestamp;
ie_validou_w			varchar(2) := 'N';
nr_sequencia_W			bigint;
nr_seq_interno_valida_W		bigint := 0;
nr_seq_interno_destino_w	bigint;
nr_seq_interno_origem_w		bigint;
cd_classif_W			bigint;
qt_existe_w			bigint;

 
	 
c03 CURSOR FOR	 
SELECT	distinct 
	b.nr_atendimento, 
	substr(obter_nome_pf(c.cd_pessoa_fisica),1,255) nm_pessoa_fisica, 
	a.dt_entrada_unidade, 
	a.dt_saida_unidade, 
	a.nr_seq_interno, 
	a.nr_sequencia 
from	atend_paciente_unidade a, 
	atendimento_paciente b, 
	pessoa_fisica c	 
where	b.cd_pessoa_fisica = c.cd_pessoa_fisica 
and	a.nr_atendimento = b.nr_atendimento 
and	trunc(a.dt_entrada_unidade) between trunc(dt_inicial_p) and fim_dia(trunc(dt_final_p)) 
order by nr_sequencia;	
 
 
 

BEGIN 
 
delete	FROM w_relat_movimentacao_pac;
commit;
 
SELECT	count(distinct a.nr_cirurgia) 
into STRICT	qt_total_cirurgia_w 
FROM medico m, estrutura_procedimento_v g, procedimento e, pessoa_fisica p
LEFT OUTER JOIN compl_pessoa_fisica f ON (p.cd_pessoa_fisica = f.cd_pessoa_fisica)
, cirurgia a
LEFT OUTER JOIN atendimento_paciente c ON (a.nr_atendimento = c.nr_atendimento)
LEFT OUTER JOIN atend_paciente_unidade b ON (a.nr_atendimento = b.nr_atendimento AND a.dt_entrada_unidade = b.dt_entrada_unidade)
LEFT OUTER JOIN agenda_paciente h ON (a.nr_cirurgia = h.nr_cirurgia)
LEFT OUTER JOIN medico an ON (a.cd_medico_anestesista = an.cd_pessoa_fisica)
LEFT OUTER JOIN procedencia q ON (h.cd_procedencia = q.cd_procedencia)
, obter_atecaco_atendimento(a
LEFT OUTER JOIN atend_categoria_convenio acc ON (obter_atecaco_atendimento(a.nr_atendimento) = acc.nr_seq_interno)
WHERE a.dt_inicio_real BETWEEN dt_inicial_p AND fim_dia(dt_final_p) AND a.cd_procedimento_princ = 	e.cd_procedimento AND a.ie_origem_proced     = 	e.ie_origem_proced     AND a.cd_pessoa_fisica	   = 	p.cd_pessoa_fisica AND g.cd_procedimento = e.cd_procedimento AND g.ie_origem_proced = e.ie_origem_proced AND m.cd_pessoa_fisica = a.cd_medico_cirurgiao     and ((a.dt_termino IS NOT NULL AND a.dt_termino::text <> '') or (a.ie_status_cirurgia = '3'));
 
 
 
open C03;
loop 
fetch C03 into	 
	nr_atendimento_w, 
	nm_paciente_w, 
	dt_entrada_unidade_w, 
	dt_saida_unidade_w, 
	nr_seq_interno_w, 
	nr_sequencia_W;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	 
	select	coalesce(max(nr_seq_interno),0) 
	into STRICT	nr_seq_interno_valida_w 
	from	atend_paciente_unidade a 
	where	a.nr_sequencia = nr_sequencia_w 
	and	a.nr_atendimento = nr_atendimento_w 
	and	obter_classif_setor(a.cd_setor_atendimento) in (2,4) 
	and	not exists ( 
			SELECT 1 
			from	w_relat_movimentacao_pac x 
			where	x.nr_atendimento = a.nr_atendimento 
			and	x.dt_entrada_unidade = a.dt_entrada_unidade);
			 
	select	max(obter_classif_setor(a.cd_setor_atendimento)) 
	into STRICT	cd_classif_W 
	from	atend_paciente_unidade a 
	where	a.nr_sequencia = nr_sequencia_w 
	and	a.nr_atendimento = nr_atendimento_w;
	 
	nr_seq_interno_origem_w	:=	nr_seq_interno_valida_w;
	 
	if (nr_seq_interno_valida_w > 0) then 
		begin 
		select	coalesce(max(nr_seq_interno),0) 
		into STRICT	nr_seq_interno_valida_w 
		from	atend_paciente_unidade a 
		where	a.nr_sequencia > nr_sequencia_w 
		and	a.nr_sequencia <> nr_sequencia_w 
		and	a.nr_atendimento = nr_atendimento_w 
		and	obter_classif_setor(a.cd_setor_atendimento) in (2,4) 
		and	obter_classif_setor(a.cd_setor_atendimento) <> cd_classif_W 
		and	not exists ( 
				SELECT 1 
				from	w_relat_movimentacao_pac x 
				where	x.nr_atendimento = a.nr_atendimento 
				and	x.dt_entrada_unidade = a.dt_saida_unidade);	
		 
		nr_seq_interno_destino_w	:=	nr_seq_interno_valida_w;
		 
		end;
	end if;
	 
	 
	if (nr_seq_interno_valida_w > 0) then 
		begin 
		 
		select	cd_setor_atendimento, 
			dt_entrada_unidade 
		into STRICT	cd_setor_destino_w, 
			dt_entrada_unidade_w 
		from	atend_paciente_unidade 
		where	nr_seq_interno = nr_seq_interno_destino_w;
 
		select	cd_setor_atendimento, 
			dt_saida_unidade 
		into STRICT	cd_setor_origem_w, 
			dt_saida_unidade_w 
		from	atend_paciente_unidade 
		where	nr_seq_interno = nr_seq_interno_origem_w;
			 
		insert into w_relat_movimentacao_pac(nr_atendimento, 
						nm_paciente, 
						cd_setor_origem, 
						cd_setor_destino, 
						qt_total_cirurgia, 
						qt_perc_cirurgia, 
						dt_entrada_unidade, 
						dt_saida_unidade, 
						nr_sequencia, 
						dt_atualizacao, 
						nm_usuario) 
				values (nr_atendimento_w, 
						nm_paciente_w, 
						cd_setor_origem_w, 
						cd_setor_destino_w, 
						qt_total_cirurgia_w, 
						qt_perc_cirurgia_w, 
						dt_entrada_unidade_w, 
						dt_saida_unidade_w, 
						nextval('w_relat_movimentacao_pac_seq'), 
						clock_timestamp(), 
						Obter_Usuario_Ativo);			
		 
		end;
	end if;	
	 
	end;
end loop;
close C03;
 
select 	count(*) 
into STRICT	qt_existe_w 
from	w_relat_movimentacao_pac;
		 
if (coalesce(qt_existe_w,0) > 0 ) then 
 
	CALL gerar_w_movimentacao_total(cd_setor_destino_p,cd_setor_origem_p);
 
end if;
		 
commit;
 
end 	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_movimentacao_cirurgia ( dt_inicial_p timestamp, dt_final_p timestamp, cd_setor_origem_p bigint default 0, cd_setor_destino_p bigint default 0) FROM PUBLIC;

