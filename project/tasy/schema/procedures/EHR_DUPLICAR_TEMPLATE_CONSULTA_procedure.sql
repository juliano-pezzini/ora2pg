-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ehr_duplicar_template_consulta (nr_seq_reg_template_origem_p bigint, nr_seq_reg_template_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_elemento_w		bigint;
ds_resultado_w			varchar(4000);
dt_resultado_w			timestamp;
vl_resultado_w			double precision;
nr_seq_elem_cluster_w		bigint;
nr_sequencia_w			bigint;
nr_sequencia_reg_w		bigint;
nr_seq_filho_w			bigint;
nr_seq_reg_w			bigint;
ie_copia_w			varchar(10);
ds_estatistica_w		varchar(255);

NR_SEQ_TEMP_CONTEUDO_w		bigint;
NR_REGISTRO_CLUSTER_w		bigint;
nr_seq_template_origem_w	bigint;
nr_seq_template_destino_w	bigint;
cd_pessoa_fisica_w		varchar(10);
ie_macro_w			varchar(50);
nr_atendimento_w		bigint;
NR_SEQ_TIPO_DADO_w		bigint;
DS_OPENEHR_w			varchar(255);
nr_seq_registro_ehr_w		bigint;
dt_liberacao_w			timestamp;
ds_call_stack_w			varchar(4000);
ds_module_log_w			varchar(255);
ds_log_w			varchar(2000);
nr_seq_elemento_cadastro_w	bigint;
ie_situacao_w		varchar(1);
ie_recarregar_w		varchar(1);
ds_aux_w			varchar(255);
NR_SEQ_TEMPLATE_CLUSTER_w	bigint;
nr_seq_reg_template_w		bigint;
qt_reg_cluster_grid_w		bigint;
ds_sql_w			varchar(255);
c001				integer;
retorno_w			integer;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_elemento,
		a.ds_resultado,
		a.dt_resultado,
		a.vl_resultado,
		a.ds_estatistica,
		a.NR_SEQ_TEMP_CONTEUDO,
		a.NR_REGISTRO_CLUSTER
	from	ehr_reg_elemento a,
			ehr_elemento b
	where	b.nr_sequencia = a.nr_seq_elemento
	and		a.nr_seq_reg_template	= nr_seq_reg_template_origem_p
	and	coalesce(a.nr_seq_elem_cluster::text, '') = ''
	and    (coalesce(a.ds_resultado::text, '') = '' or b.IE_COMPONENTE = 'lcb' or ((a.ds_resultado not like 'Regra=%') and (a.ds_resultado <> '1') and (a.ds_resultado <> '-1') and (a.ds_resultado <>'0' )))
	and   ((coalesce(a.ds_resultado::text, '') = '') or (coalesce(a.ds_estatistica::text, '') = '') or (a.ds_resultado <> a.ds_estatistica))
	
union

	SELECT	null,
		nr_seq_elemento,
		null,
		null,
		null,
		null,
		nr_sequencia,
		null
	from	ehr_template_conteudo a
	where	nr_seq_template	 = nr_seq_template_origem_w
	and		ie_situacao = 'A'
	and	not exists (	select	1
					from	ehr_reg_elemento x
					where	x.nr_seq_reg_template	= nr_seq_reg_template_origem_p
					and	x.nr_seq_temp_conteudo = a.nr_sequencia)
	and	(a.nr_seq_elemento IS NOT NULL AND a.nr_seq_elemento::text <> '');				

C02 CURSOR FOR
	SELECT	nr_seq_elemento,
		ds_resultado,
		dt_resultado,
		vl_resultado,
		ds_estatistica
	from	ehr_reg_elemento
	where	nr_seq_reg_template	= nr_seq_reg_template_origem_p
	and	nr_seq_elem_cluster	= nr_sequencia_reg_w;


BEGIN

select	max(nr_seq_template),
		max(nr_sequencia)
into STRICT	nr_seq_template_origem_w,
		nr_seq_reg_template_w
from	ehr_reg_template
where	nr_sequencia	= nr_seq_reg_template_origem_p;

select	max(nr_seq_template),
	max(NR_SEQ_REG)
into STRICT	nr_seq_template_destino_w,
	nr_seq_registro_ehr_w
from	ehr_reg_template
where	nr_sequencia	= nr_seq_reg_template_destino_p;

select	max(nr_atendimento),
	max(cd_paciente),
	max(dt_liberacao)
into STRICT	nr_atendimento_w,
	cd_pessoa_fisica_w,
	dt_liberacao_w
from	ehr_registro
where	nr_sequencia	= nr_seq_registro_ehr_w;

select	max(NR_SEQ_TEMPLATE_CLUSTER)
into STRICT	NR_SEQ_TEMPLATE_CLUSTER_w
from	ehr_template_conteudo
where	nr_seq_template	= nr_seq_template_destino_w
and		(NR_SEQ_TEMPLATE_CLUSTER IS NOT NULL AND NR_SEQ_TEMPLATE_CLUSTER::text <> '');


if (coalesce(dt_liberacao_w::text, '') = '') then
	open C01;
	loop
	fetch C01 into	
		nr_sequencia_reg_w,
		nr_seq_elemento_w,
		ds_resultado_w,
		dt_resultado_w,
		vl_resultado_w,
		ds_estatistica_w,
		NR_SEQ_TEMP_CONTEUDO_w,
		NR_REGISTRO_CLUSTER_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin


		if (nr_seq_template_destino_w	<> nr_seq_template_origem_w) and (coalesce(NR_REGISTRO_CLUSTER_w::text, '') = '' )then
			NR_SEQ_TEMP_CONTEUDO_w	:= null;
		end if;	

		if (NR_SEQ_TEMP_CONTEUDO_w IS NOT NULL AND NR_SEQ_TEMP_CONTEUDO_w::text <> '') then
			select	max(nr_seq_elemento),
					coalesce(max(ie_situacao),'A')
			into STRICT	nr_seq_elemento_cadastro_w,
					ie_situacao_w
			from	ehr_template_conteudo
			where	nr_sequencia = NR_SEQ_TEMP_CONTEUDO_w;

			if	((nr_seq_elemento_cadastro_w IS NOT NULL AND nr_seq_elemento_cadastro_w::text <> '') and (nr_seq_elemento_cadastro_w	<> nr_seq_elemento_w) or (ie_situacao_w = 'I')) then
				NR_SEQ_TEMP_CONTEUDO_w	:= null;
			end if;


		end if;



		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_reg_w
		from	ehr_reg_elemento
		where	nr_seq_reg_template	= nr_seq_reg_template_destino_p
		and	NR_SEQ_TEMP_CONTEUDO	= NR_SEQ_TEMP_CONTEUDO_w
		and	coalesce(NR_REGISTRO_CLUSTER,0)	= coalesce(NR_REGISTRO_CLUSTER_w,0);

		if (nr_seq_reg_w > 0) then
			begin

			select	coalesce(max(e.nr_sequencia),0)
			into STRICT	nr_seq_reg_w
			from	ehr_reg_elemento e,
				ehr_reg_template t,
				ehr_template_conteudo c
			where	e.nr_sequencia = nr_seq_reg_w
			and	t.nr_sequencia = e.nr_seq_reg_template
			and	c.nr_seq_elemento = e.nr_seq_elemento
			and	c.nr_seq_template = t.nr_seq_template
			and	c.nr_sequencia = NR_SEQ_TEMP_CONTEUDO_w
			and	coalesce(c.ie_situacao,'A') = 'A'
			and (not coalesce(c.ie_copia,'S') in ('N','T')  or (coalesce(ds_resultado::text, '') = '' and
					 coalesce(dt_resultado::text, '') = '' and
					 coalesce(vl_resultado::text, '') = ''));

			if (nr_seq_reg_w > 0) then
				update	ehr_reg_elemento
				set	ds_resultado		= ds_resultado_w,
					dt_resultado		= dt_resultado_w,
					vl_resultado		= vl_resultado_w,
					ds_estatistica		= ds_estatistica_w,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= nr_seq_reg_w
				and	coalesce(dt_liberacao::text, '') = '';
			end if;

			nr_sequencia_w	:= nr_seq_reg_w;
			end;
		else
			begin


			select	coalesce(max(ie_copia),'S'),
				max(ie_macro)
			into STRICT	ie_copia_w,
				ie_macro_w
			from	ehr_reg_template t,
				ehr_template_conteudo c
			where	t.nr_sequencia = nr_seq_reg_template_destino_p
			and	c.nr_seq_elemento = nr_seq_elemento_w
			and	coalesce(c.ie_situacao,'A') = 'A'
			and	c.nr_sequencia = coalesce(NR_SEQ_TEMP_CONTEUDO_w,c.nr_sequencia)
			and	c.nr_seq_template = t.nr_seq_template;

			if (ie_copia_w	<> 'N') then
				select	nextval('ehr_reg_elemento_seq')
				into STRICT	nr_sequencia_w
				;

				if (ie_copia_w	= 'M') then

					ds_resultado_w	:= null;
					dt_resultado_w	:= null;
					vl_resultado_w	:= null;
					ds_estatistica_w := null;


					select	max(nr_seq_tipo_dado)
					into STRICT	nr_seq_tipo_dado_w
					from	ehr_elemento
					where	nr_sequencia	= nr_seq_elemento_w;

					select	max(ds_openehr)
					into STRICT	ds_openehr_w
					from	ehr_tipo_dado
					where	nr_sequencia	= nr_seq_tipo_dado_w;





						if (ds_openehr_w	in ('DV_TASY','DV_TEXT','DV_BOOLEAN','DV_CODED_TEXT')) then
							ds_resultado_w	:= ehr_obter_valor_macro(cd_pessoa_fisica_w,nr_atendimento_w,ie_macro_w);
						elsif (ds_openehr_w	in ('DV_DATE_TIME','DV_DATE','DV_TIME')) then
							dt_resultado_w	:= to_date(ehr_obter_valor_macro(cd_pessoa_fisica_w,nr_atendimento_w,ie_macro_w),'dd/mm/yyyy hh24:mi:ss');
						elsif (ds_openehr_w	in ('DV_COUNT','DV_QUANTITY')) then
							vl_resultado_w	:= ehr_obter_valor_macro(cd_pessoa_fisica_w,nr_atendimento_w,ie_macro_w);
						end if;

				elsif (ie_copia_w	= 'E')then
					ds_resultado_w	:= EHR_Obter_Inf_Elem(nr_atendimento_w,cd_pessoa_fisica_w,NR_SEQ_TEMP_CONTEUDO_w);

				elsif (ie_copia_w	= 'T') then
						ie_recarregar_w := EHR_EXECUTA_SQL_EHR_ELEMENTO(	nr_seq_template_destino_w, nr_seq_reg_template_destino_p, 'Nr_Atendimento='||nr_atendimento_w||';PessoaFisica='''||cd_pessoa_fisica_w||''';cd_perfil_ativo='||obter_perfil_ativo||';', '', ie_recarregar_w, nr_sequencia_reg_w);

				end if;





				if (coalesce(NR_SEQ_TEMP_CONTEUDO_w::text, '') = '') then
					select	max(c.nr_sequencia)
					into STRICT	NR_SEQ_TEMP_CONTEUDO_w
					from	ehr_reg_template t,
						ehr_template_conteudo c
					where	t.nr_sequencia = nr_seq_reg_template_destino_p
					and	c.nr_seq_elemento = nr_seq_elemento_w
					and	coalesce(c.ie_situacao,'A') = 'A'
					and	c.nr_seq_template = t.nr_seq_template;
				end if;
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_reg_w
				from	ehr_reg_elemento
				where	nr_seq_reg_template	= nr_seq_reg_template_destino_p
				and	NR_SEQ_TEMP_CONTEUDO	= NR_SEQ_TEMP_CONTEUDO_w
				and	coalesce(NR_REGISTRO_CLUSTER,0)	= coalesce(NR_REGISTRO_CLUSTER_w,0);



				select	coalesce(max(e.nr_sequencia),0)
				into STRICT	nr_seq_reg_w
				from	ehr_reg_elemento e,
						ehr_reg_template t,
						ehr_template_conteudo c
				where	e.nr_sequencia = nr_seq_reg_w
				and		t.nr_sequencia = e.nr_seq_reg_template
				and		c.nr_seq_elemento = e.nr_seq_elemento
				and		c.nr_seq_template = t.nr_seq_template
				and		coalesce(c.ie_situacao,'A') = 'A'
				and (not coalesce(c.ie_copia,'S') in ('N','T')  or (coalesce(ds_resultado::text, '') = '' and
						 coalesce(dt_resultado::text, '') = '' and
						 coalesce(vl_resultado::text, '') = ''));

				if (nr_seq_reg_w > 0) and (ie_copia_w <> 'T') then
					update	ehr_reg_elemento
					set	ds_resultado		= ds_resultado_w,
						dt_resultado		= dt_resultado_w,
						vl_resultado		= vl_resultado_w,
						ds_estatistica		= ds_estatistica_w,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_sequencia		= nr_seq_reg_w
					and	coalesce(dt_liberacao::text, '') = '';

				else
					if (NR_SEQ_TEMP_CONTEUDO_w IS NOT NULL AND NR_SEQ_TEMP_CONTEUDO_w::text <> '') and (ie_copia_w <> 'T') then
							insert into ehr_reg_elemento(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_elemento,
								nr_seq_reg_template,
								ds_resultado,
								dt_resultado,
								vl_resultado,
								ds_estatistica,
								NR_SEQ_TEMP_CONTEUDO,
								NR_REGISTRO_CLUSTER)
							values (	nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_elemento_w,
								nr_seq_reg_template_destino_p,
								ds_resultado_w,
								dt_resultado_w,
								vl_resultado_w,
								ds_estatistica_w,
								NR_SEQ_TEMP_CONTEUDO_w,
								NR_REGISTRO_CLUSTER_w);
							insert into ehr_reg_elemen(nr_seq_reg_elemento, clob_resultado)
                            SELECT nr_sequencia_w, clob_resultado from ehr_reg_elemento_clob where nr_seq_reg_elemento = nr_sequencia_reg_w;
					end if;


				end if;
			end if;
			end;
		end if;
		end;
	end loop;
	close C01;

	commit;

	if (NR_REGISTRO_CLUSTER_w IS NOT NULL AND NR_REGISTRO_CLUSTER_w::text <> '') then
		ds_sql_w := 'select count(*) qt from EHR_CLUSTER_' || NR_SEQ_TEMPLATE_CLUSTER_w || ' where nr_seq_reg_template = ' || nr_seq_reg_template_w;

		C001 := DBMS_SQL.OPEN_CURSOR;

		DBMS_SQL.PARSE(C001, ds_sql_w, dbms_sql.native);

		DBMS_SQL.DEFINE_COLUMN(C001,1,qt_reg_cluster_grid_w);

		retorno_w := DBMS_SQL.execute(C001);

		retorno_w := DBMS_SQL.FETCH_ROWS(C001);

		DBMS_SQL.COLUMN_VALUE(C001, 1, QT_REG_CLUSTER_GRID_W);

		DBMS_SQL.CLOSE_CURSOR(C001);

		if (qt_reg_cluster_grid_w > 0) then
			SELECT * FROM ehr_gerar_tabela_cluster(NR_SEQ_TEMPLATE_CLUSTER_w, null, ds_aux_w, ds_aux_w, ds_aux_w, ds_aux_w, ds_aux_w) INTO STRICT ds_aux_w, ds_aux_w, ds_aux_w, ds_aux_w, ds_aux_w;
			CALL ehr_gerar_valores_grid_cluster(nr_seq_reg_template_destino_p, NR_SEQ_TEMPLATE_CLUSTER_w);
		end if;
	end if;
else
	select	substr(max(module||' - ' || machine||' - ' || program|| ' - ' || osuser|| ' - ' || terminal),1,255)
	into STRICT	ds_module_log_w
	from	v$session
	where	audsid = (SELECT userenv('sessionid') );

	ds_call_stack_w	:= substr(dbms_utility.format_call_stack,1,1800);

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ehr_duplicar_template_consulta (nr_seq_reg_template_origem_p bigint, nr_seq_reg_template_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

