-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_alta_paciente_pa ( nr_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_atend_gerado_p INOUT bigint ) AS $body$
DECLARE

 
ds_erro_w		varchar(255);
ds_erro2_w		varchar(255);
nr_atend_gerado_w	bigint;
item_posicionar_w	varchar(1);
ie_perm_alta_semdiag_w	varchar(1) := 'N';
ie_select_motivo_w		varchar(1) := 'N';
cd_motivo_alta_w	bigint;
qt_diagnostico_doenca_w	bigint;

BEGIN
 
cd_motivo_alta_w := obter_param_usuario(935, 2, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_motivo_alta_w);
ie_select_motivo_w := obter_param_usuario(935, 103, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_select_motivo_w);
ie_perm_alta_semdiag_w := obter_param_usuario(935, 149, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_perm_alta_semdiag_w);
 
if (ie_perm_alta_semdiag_w <> 'S') and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
	begin 
	 
	select	count(*) 
	into STRICT	qt_diagnostico_doenca_w 
	from	diagnostico_doenca 
	where	nr_atendimento = nr_atendimento_p;
	 
	if (qt_diagnostico_doenca_w = 0) then 
		begin 
		--(-20011, substr(obter_texto_tasy (81534, wheb_usuario_pck.get_nr_seq_idioma),1,255) || '#@#@'); 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(81534);
		end;
	end if;
	 
	end;
end if;
 
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin 
	 
	SELECT * FROM consistir_desfecho_pa(nr_atendimento_p, nm_usuario_p, ds_erro_w, item_posicionar_w, ds_erro2_w) INTO STRICT ds_erro_w, item_posicionar_w, ds_erro2_w;
	 
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
		begin 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(264442,'DS_ERRO_W=' || DS_ERRO_W);
		end;
	 
	elsif (coalesce(ds_erro_w::text, '') = '') then 
		begin 
 
		 
		ds_erro_w := obter_se_avaliacao_desfecho(nr_atendimento_p);
		 
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') and (ds_erro_w <> '') then 
			begin 
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(264442,'DS_ERRO_W=' || DS_ERRO_W);
			end;
		elsif (ie_select_motivo_w <> 'S') then 
			begin 
			ds_erro_w := gerar_estornar_alta(nr_atendimento_p, 'A', 0, cd_motivo_alta_w, clock_timestamp(), nm_usuario_p, ds_erro_w, 0, null, null);
	 
			select	max(nr_atendimento) 
			into STRICT	nr_atend_gerado_w 
			from	atendimento_paciente 
			where	nr_atend_alta = nr_atendimento_p;			
			end;
		end if;
		end;
	end if;	
	end;
end if;	
 
nr_atend_gerado_p 	:= coalesce(nr_atend_gerado_w,0);
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_alta_paciente_pa ( nr_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_atend_gerado_p INOUT bigint ) FROM PUBLIC;

