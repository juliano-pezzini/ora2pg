-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_provisionamento_aplic (nr_seq_aplicacao_p bigint, dt_provisionamento_p timestamp) AS $body$
DECLARE


dt_rendimento_w		timestamp;
tx_rendimento_w		double precision;
vl_rendimento_w		double precision;
vl_acumulado_w		double precision;
ie_tipo_aplic_w		varchar(1);
vl_aplicacao_w		double precision;
nr_dias_rend_w		bigint;
dt_aplicacao_w		timestamp;
dt_ult_rend_w		timestamp;
dt_provisionamento_w	timestamp;


BEGIN

select	max(b.ie_forma_rend),
	coalesce(max(b.vl_taxa_rend),0),
	max(obter_total_aplicacao(a.nr_sequencia)),
	max(a.dt_aplicacao),
	max(b.nr_dias_rend),
	max(pkg_date_utils.start_of(c.dt_rendimento, 'DD', 0))
into STRICT	ie_tipo_aplic_w,
	tx_rendimento_w,
	vl_aplicacao_w,
	dt_aplicacao_w,
	nr_dias_rend_w,
	dt_ult_rend_w
FROM conta_banco_tipo_aplic b, banco_aplicacao a
LEFT OUTER JOIN banco_rendimento c ON (a.nr_sequencia = c.nr_seq_aplicacao)
WHERE a.nr_seq_aplicacao = b.nr_sequencia  and a.nr_sequencia = nr_seq_aplicacao_p;

dt_rendimento_w := pkg_date_utils.start_of(clock_timestamp(),'DD',0);
vl_acumulado_w := vl_aplicacao_w;

delete	from w_provisionamento_aplic
where	nr_seq_aplicacao = nr_seq_aplicacao_p;

commit;

if (dt_provisionamento_p IS NOT NULL AND dt_provisionamento_p::text <> '') then
	dt_provisionamento_w := pkg_date_utils.start_of(dt_provisionamento_p,'DD',0);

	if ie_tipo_aplic_w = 'D' then

		while dt_rendimento_w <= dt_provisionamento_w loop
			vl_rendimento_w := (vl_acumulado_w * tx_rendimento_w)/100;
			vl_acumulado_w := vl_acumulado_w + vl_rendimento_w;

			insert into w_provisionamento_aplic(nr_seq_aplicacao,
				dt_rendimento,
				tx_rendimento,
				vl_rendimento,
				vl_acumulado)
			values (nr_seq_aplicacao_p,
				dt_rendimento_w,
				tx_rendimento_w,
				vl_rendimento_w,
				vl_acumulado_w);

			vl_rendimento_w := null;
			dt_rendimento_w := dt_rendimento_w + 1;
		end loop;

	elsif ie_tipo_aplic_w = 'Q' then

		if ((pkg_date_utils.extract_field('DAY',dt_rendimento_w,0))::numeric  > 15) then
			dt_rendimento_w := pkg_date_utils.get_date(15,dt_rendimento_w,0);
		else
			dt_rendimento_w := PKG_DATE_UTILS.GET_DATETIME(PKG_DATE_UTILS.END_OF(dt_rendimento_w, 'MONTH', 0),dt_rendimento_w);
		end if;

		while dt_rendimento_w <= dt_provisionamento_w loop
			vl_rendimento_w := (vl_acumulado_w * tx_rendimento_w)/100;
			vl_acumulado_w := vl_acumulado_w + vl_rendimento_w;

			insert into w_provisionamento_aplic(nr_seq_aplicacao,
				dt_rendimento,
				tx_rendimento,
				vl_rendimento,
				vl_acumulado)
			values (nr_seq_aplicacao_p,
				dt_rendimento_w,
				tx_rendimento_w,
				vl_rendimento_w,
				vl_acumulado_w);

			vl_rendimento_w := null;
			if ((pkg_date_utils.extract_field('DAY',dt_rendimento_w,0))::numeric  = 15) then
				dt_rendimento_w := PKG_DATE_UTILS.GET_DATETIME(PKG_DATE_UTILS.END_OF(dt_rendimento_w, 'MONTH', 0),dt_rendimento_w);
			else
				dt_rendimento_w := pkg_date_utils.get_date(15,(dt_rendimento_w + 1),0);
			end if;
		end loop;

	elsif ie_tipo_aplic_w = 'M' then

		dt_rendimento_w := pkg_date_utils.get_date(pkg_date_utils.extract_field('DAY',dt_aplicacao_w,0),clock_timestamp(),0);
		if ((pkg_date_utils.extract_field('DAY', dt_aplicacao_w, 0))::numeric  < (pkg_date_utils.extract_field('DAY', clock_timestamp(), 0))::numeric ) then
			dt_rendimento_w := PKG_DATE_UTILS.ADD_MONTH(dt_rendimento_w, 1,0);
		end if;

		while dt_rendimento_w <= dt_provisionamento_w loop
			vl_rendimento_w := (vl_acumulado_w * tx_rendimento_w)/100;
			vl_acumulado_w := vl_acumulado_w + vl_rendimento_w;

			insert into w_provisionamento_aplic(nr_seq_aplicacao,
				dt_rendimento,
				tx_rendimento,
				vl_rendimento,
				vl_acumulado)
			values (nr_seq_aplicacao_p,
				dt_rendimento_w,
				tx_rendimento_w,
				vl_rendimento_w,
				vl_acumulado_w);

			vl_rendimento_w := null;
			dt_rendimento_w := PKG_DATE_UTILS.ADD_MONTH(dt_rendimento_w, 1,0);
		end loop;

	elsif ie_tipo_aplic_w = 'F' then

		dt_rendimento_w := coalesce(dt_ult_rend_w,dt_aplicacao_w) + nr_dias_rend_w;

		while dt_rendimento_w <= dt_provisionamento_w loop

			if (dt_rendimento_w >= pkg_date_utils.start_of(clock_timestamp(),'DD',0)) then
				vl_rendimento_w := (vl_acumulado_w * tx_rendimento_w)/100;
				vl_acumulado_w := vl_acumulado_w + vl_rendimento_w;

				insert into w_provisionamento_aplic(nr_seq_aplicacao,
					dt_rendimento,
					tx_rendimento,
					vl_rendimento,
					vl_acumulado)
				values (nr_seq_aplicacao_p,
					dt_rendimento_w,
					tx_rendimento_w,
					vl_rendimento_w,
					vl_acumulado_w);
			end if;

			vl_rendimento_w := null;
			dt_rendimento_w := dt_rendimento_w + nr_dias_rend_w;
		end loop;

	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_provisionamento_aplic (nr_seq_aplicacao_p bigint, dt_provisionamento_p timestamp) FROM PUBLIC;

