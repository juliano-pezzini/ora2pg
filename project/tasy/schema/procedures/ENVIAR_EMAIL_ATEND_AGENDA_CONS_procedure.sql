-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_email_atend_agenda_cons (nr_seq_agenda_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


  ds_email_atend_cons_w      varchar(2000);
  ds_tit_email_atend_cons_w  varchar(255);
  ds_rem_email_atend_cons_w  varchar(255);
  nm_paciente_w              varchar(60);
  nm_medico_w                varchar(255);
  ds_espec_agenda_w          varchar(255);
  cd_pessoa_fisica_w         varchar(10);
  ds_convenio_w              varchar(40);
  ds_email_destino_w         varchar(255);
  ds_mensagem_w              varchar(4000);
  ie_erro_w                  varchar(1);
  cd_agenda_w                bigint;
  ie_enviar_email_atend_w    varchar(1);
  ie_perm_receb_sms_email_w  varchar(1);
  ie_cons_perm_env_sms_pac_w varchar(1);


BEGIN

  ie_cons_perm_env_sms_pac_w := Obter_Param_Usuario(821, 395, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_cons_perm_env_sms_pac_w);

  SELECT MAX(cd_agenda),
	MAX(cd_pessoa_fisica)
    INTO STRICT cd_agenda_w,
	cd_pessoa_fisica_w
    FROM agenda_consulta
   WHERE nr_sequencia = nr_seq_agenda_p;

  SELECT coalesce(MAX(ie_enviar_email_atend), 'S')
    INTO STRICT ie_enviar_email_atend_w
    FROM agenda
   WHERE cd_agenda = cd_agenda_w;

  IF (ie_cons_perm_env_sms_pac_w = 'E') AND (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') THEN

		SELECT	coalesce(MAX(ie_perm_sms_email),'N')
		INTO STRICT	ie_perm_receb_sms_email_w
		FROM	pessoa_fisica
		WHERE	cd_pessoa_fisica	= cd_pessoa_fisica_w;

  END IF;

  IF (ie_enviar_email_atend_w = 'S') AND (ie_perm_receb_sms_email_w <> 'N') THEN

    SELECT MAX(ds_email_atend_cons),
           MAX(ds_tit_email_atend_cons),
           MAX(ds_rem_email_atend_cons)
      INTO STRICT ds_email_atend_cons_w,
           ds_tit_email_atend_cons_w,
           ds_rem_email_atend_cons_w
      FROM parametro_agenda
     WHERE cd_estabelecimento = cd_estabelecimento_p;

    IF (ds_email_atend_cons_w IS NOT NULL AND ds_email_atend_cons_w::text <> '') AND (ds_tit_email_atend_cons_w IS NOT NULL AND ds_tit_email_atend_cons_w::text <> '') AND (ds_rem_email_atend_cons_w IS NOT NULL AND ds_rem_email_atend_cons_w::text <> '') THEN

      SELECT MAX(nm_paciente),
             MAX(cd_pessoa_fisica),
             MAX(substr(obter_nome_convenio(cd_convenio), 1, 40)),
             MAX(substr(obter_nome_medico(cd_medico, 'NCD'), 1, 100))
        INTO STRICT nm_paciente_w,
             cd_pessoa_fisica_w,
             ds_convenio_w,
             nm_medico_w
        FROM agenda_consulta
       WHERE nr_sequencia = nr_seq_agenda_p;

      IF (cd_agenda_w IS NOT NULL AND cd_agenda_w::text <> '') THEN
        SELECT MAX(substr(coalesce(obter_nome_medico_combo_agcons(cd_estabelecimento, cd_agenda_w, 3, 'N'), nm_medico_w), 1, 255)),
               MAX(substr(obter_nome_especialidade(obter_especialidade_agenda(cd_agenda_w)), 1, 255))
          INTO STRICT nm_medico_w,
               ds_espec_agenda_w
          FROM agenda
         WHERE cd_agenda = cd_agenda_w;
      END IF;

      SELECT MAX(b.ds_email)
        INTO STRICT ds_email_destino_w
        FROM pessoa_fisica       a,
             compl_pessoa_fisica b
       WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica
         AND b.ie_tipo_complemento = 1
         AND a.cd_pessoa_fisica = cd_pessoa_fisica_w;

      ds_mensagem_w := ds_email_atend_cons_w;
      ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@Paciente',      nm_paciente_w),     1, 4000);
      ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@Convenio',      ds_convenio_w),     1, 4000);
      ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@Medico',        nm_medico_w),       1, 4000);
      ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@Especialidade', ds_espec_agenda_w), 1, 4000);

      IF (position('@' in ds_email_destino_w) > 0) THEN
        BEGIN

          CALL enviar_email(ds_tit_email_atend_cons_w,
                       ds_mensagem_w,
                       ds_rem_email_atend_cons_w,
                       ds_email_destino_w,
                       'Tasy',
                       'A');
        EXCEPTION
          WHEN OTHERS THEN
            ie_erro_w := 'S';
        END;
      END IF;
    END IF;
  END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_email_atend_agenda_cons (nr_seq_agenda_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

