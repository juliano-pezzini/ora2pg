-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_fechar_conta_pos_estab ( nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_commit_p text, ie_final_analise_grupo_pos_p text default 'N') AS $body$
DECLARE


nr_seq_conta_w			pls_conta.nr_sequencia%type;
ie_controle_pos_estabelecido_w	pls_parametros.ie_controle_pos_estabelecido%type;
ie_cobrar_mensalidade_w		pls_conta_pos_estabelecido.ie_cobrar_mensalidade%type;
ds_mensagem_retorno_w		varchar(4000);
nr_seq_fatura_w			pls_conta.nr_seq_fatura%type;
ie_origem_analise_w		pls_analise_conta.ie_origem_analise%type;
ie_gerar_pos_remido_w		pls_parametro_faturamento.ie_gerar_pos_remido%type;

C01 CURSOR(	nr_seq_analise_pc	pls_analise_conta.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_pos_estab,
		a.nr_seq_conta,
		pls_obter_status_fat_pos_estab(	a.ie_status_faturamento, a.qt_original,
						a.qt_item, a.vl_calculado,
						a.vl_beneficiario) ie_status_faturamento
	from	pls_conta_pos_estabelecido a
	where	a.nr_seq_analise = nr_seq_analise_pc
	and	a.ie_situacao = 'A'
	and	not exists (	SELECT	1
				from	pls_conta_pos_estabelecido x
				where	x.nr_seq_conta = a.nr_seq_conta
				and	x.nr_seq_conta_pos_orig = a.nr_sequencia
				and	x.vl_beneficiario < 0)
        and     a.ie_status_faturamento <> 'A'
	
union all

	select	a.nr_sequencia nr_seq_pos_estab,
		a.nr_seq_conta,
		pls_obter_status_fat_pos_estab(	a.ie_status_faturamento, a.qt_original,
						a.qt_item, a.vl_calculado,
						a.vl_beneficiario) ie_status_faturamento
	from	pls_conta_pos_estabelecido a
	where	a.nr_seq_analise = nr_seq_analise_pc
	and	coalesce(a.ie_situacao::text, '') = ''
	and	not exists (	select	1
				from	pls_conta_pos_estabelecido x
				where	x.nr_seq_conta = a.nr_seq_conta
				and	x.nr_seq_conta_pos_orig = a.nr_sequencia
				and	x.vl_beneficiario < 0)
        and     a.ie_status_faturamento <> 'A';

BEGIN
select	coalesce(max(ie_controle_pos_estabelecido),'N')
into STRICT	ie_controle_pos_estabelecido_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_controle_pos_estabelecido_w = 'S') then
	ie_cobrar_mensalidade_w	:= 'P'; -- Pendente de liberacao
else
	ie_cobrar_mensalidade_w	:= 'S'; -- Liberado para a mensalidade
end if;

for r_c01_w in C01(nr_seq_analise_p) loop
	
	update	pls_conta_pos_estabelecido
	set	ie_status_faturamento = r_c01_w.ie_status_faturamento,
		ie_cobrar_mensalidade = CASE WHEN r_c01_w.ie_status_faturamento='L' THEN  ie_cobrar_mensalidade_w  ELSE 'N' END ,
		dt_atualizacao = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where	nr_sequencia = r_c01_w.nr_seq_pos_estab;
	
	update	pls_conta
	set	ie_status_fat = 'L'
	where	nr_sequencia = r_c01_w.nr_seq_conta;
	
	nr_seq_conta_w := r_c01_w.nr_seq_conta;
end loop;

if (ie_final_analise_grupo_pos_p = 'S') then

	ds_mensagem_retorno_w := pls_finaliza_analise_grupo_pos(	nr_seq_analise_p, nm_usuario_p, null, 'N', 'S', cd_estabelecimento_p, ds_mensagem_retorno_w);
end if;

update	pls_analise_conta
set	dt_liberacao_analise	= clock_timestamp(),
	dt_final_analise	= clock_timestamp()
where	nr_sequencia		= nr_seq_analise_p;	
	
CALL pls_alterar_status_analise_cta(	nr_seq_analise_p, 'T', 'PLS_FECHAR_CONTA_POS_ESTAB',
				nm_usuario_p, cd_estabelecimento_p);

for r_c01_w in C01(nr_seq_analise_p) loop
	
	update	pls_conta
	set	ie_status_fat = 'L'
	where	nr_sequencia = r_c01_w.nr_seq_conta;
end loop;

CALL pls_atualizar_grupo_penden(	nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p);

select	max(nr_seq_fatura)
into STRICT	nr_seq_fatura_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_w;

select	max(ie_origem_analise)
into STRICT	ie_origem_analise_w
from	pls_analise_conta
where	nr_sequencia = nr_seq_analise_p;

if (ie_origem_analise_w <> 7) then
	/* Atualizar valores PTU Fatura*/

	CALL pls_atualizar_valor_ptu_fatura(nr_seq_fatura_w, 'N');
end if;

select	coalesce(max(a.ie_gerar_pos_remido), 'N') ie_gerar_pos_remido
into STRICT	ie_gerar_pos_remido_w
from	pls_parametro_Faturamento	a
where	a.cd_estabelecimento		= cd_estabelecimento_p;

if (ie_gerar_pos_remido_w = 'S') then
	
	-- atualiza a cobranca de mensalidade
	CALL pls_cobrar_mens_remido(nr_seq_analise_p, null, null, null, cd_estabelecimento_p, nm_usuario_p);
	CALL pls_status_faturamento_remido(nr_seq_analise_p, null, null, null, cd_estabelecimento_p, nm_usuario_p);
end if;


if (coalesce(ie_commit_p, 'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_fechar_conta_pos_estab ( nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_commit_p text, ie_final_analise_grupo_pos_p text default 'N') FROM PUBLIC;

