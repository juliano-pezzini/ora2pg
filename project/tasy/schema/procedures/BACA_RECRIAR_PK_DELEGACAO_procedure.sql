-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_recriar_pk_delegacao () AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(10);
cd_pessoa_substituta_w		varchar(10);
qt_existe_coluna_w		bigint;
qt_existe_sequence_w		bigint;
qt_existe_w			bigint;
nr_sequencia_w			bigint;
qt_coluna_pk_w			bigint;
ie_nulo_w			varchar(1);
ie_ajustar_pk_w			varchar(1);
nm_coluna_pk_w			varchar(255);
qt_existe_const_w			bigint;
qt_existe_index_w			bigint;
nm_tablespace_w			varchar(255);

c01 CURSOR FOR
SELECT	cd_pessoa_fisica,
	cd_pessoa_substituta
from	pessoa_fisica_delegacao;


BEGIN

ie_ajustar_pk_w	:= 'N';

/* Verifica se existe e caso não, cria o campo NR_SEQUENCIA */

select	count(*)
into STRICT	qt_existe_coluna_w
from	user_tab_columns
where	table_name = 'PESSOA_FISICA_DELEGACAO'
and	column_name = 'NR_SEQUENCIA';

if (qt_existe_coluna_w = 0) then
	CALL Exec_Sql_Dinamico('RFOLIVEIRA','alter table PESSOA_FISICA_DELEGACAO add (NR_SEQUENCIA NUMBER(10))');
end if;

/* Verifica se existe e caso não, cria a Sequence da tabela */

select	count(*)
into STRICT	qt_existe_sequence_w
from	user_sequences
where	sequence_name = 'PESSOA_FISICA_DELEGACAO_SEQ';

if (qt_existe_sequence_w = 0) then
	begin

	CALL Exec_Sql_Dinamico('RFOLIVEIRA',
				' create sequence PESSOA_FISICA_DELEGACAO_seq ' ||
				' increment by 1 ' ||
				' start with 1 ' ||
				' maxvalue 9999999999 ' ||
				' cycle ' ||
				' nocache ');

	end;
end if;

/* Verifica se existe algum NR_SEQUENCIA nulo e caso existir, inicia processo para preencher e transformar campo em NOT NULL */

select	count(*)
into STRICT	qt_existe_coluna_w
from	user_tab_columns
where	table_name = 'PESSOA_FISICA_DELEGACAO'
and	column_name = 'NR_SEQUENCIA';

if (qt_existe_coluna_w <> 0) then
	begin

	select	count(*)
	into STRICT	qt_existe_w
	from	pessoa_fisica_delegacao
	where	coalesce(nr_sequencia::text, '') = '';

	if (qt_existe_w <> 0) then
		begin

		update	pessoa_fisica_delegacao
		set	nr_sequencia  = NULL
		where	(nr_sequencia IS NOT NULL AND nr_sequencia::text <> '');

		open c01;
		loop
		fetch c01 into
			cd_pessoa_fisica_w,
			cd_pessoa_substituta_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			select	nextval('pessoa_fisica_delegacao_seq')
			into STRICT	nr_sequencia_w
			;

			update	pessoa_fisica_delegacao
			set	nr_sequencia = nr_sequencia_w
			where	cd_pessoa_fisica = cd_pessoa_fisica_w
			and	cd_pessoa_substituta = cd_pessoa_substituta_w;

			end;
		end loop;
		close c01;

		end;
	end if;

	select	nullable
	into STRICT	ie_nulo_w
	from	user_tab_columns
	where	table_name = 'PESSOA_FISICA_DELEGACAO'
	and	column_name = 'NR_SEQUENCIA';

	if (ie_nulo_w = 'Y') then
		CALL Exec_Sql_Dinamico('RFOLIVEIRA',' alter table PESSOA_FISICA_DELEGACAO modify (NR_SEQUENCIA NUMBER(10) NOT NULL) ');
	end if;

	end;
end if;

/* Verifica se a PK está correta. Caso ainda não, dropa a antiga e cria a nova */

select	count(*)
into STRICT	qt_coluna_pk_w
from	user_cons_columns a,
	user_constraints b
where	b.table_name = 'PESSOA_FISICA_DELEGACAO'
and	a.constraint_name = b.constraint_name
and	b.constraint_type = 'P';

if (qt_coluna_pk_w > 1) then
	ie_ajustar_pk_w	:= 'S';
elsif (qt_coluna_pk_w = 0) then
	ie_ajustar_pk_w	:= 'S';
elsif (qt_coluna_pk_w = 1) then
	begin

	select	upper(a.column_name)
	into STRICT	nm_coluna_pk_w
	from	user_cons_columns a,
		user_constraints b
	where	b.table_name = 'PESSOA_FISICA_DELEGACAO'
	and	a.constraint_name = b.constraint_name
	and	b.constraint_type = 'P';

	if (nm_coluna_pk_w <> 'NR_SEQUENCIA') then
		ie_ajustar_pk_w	:= 'S';
	end if;

	end;
end if;

if (ie_ajustar_pk_w = 'S') then
	begin

	select	count(*)
	into STRICT	qt_existe_const_w
	from	user_constraints
	where	constraint_name = 'PESFIDE_PK';

	if (qt_existe_const_w > 0) then
		CALL Exec_Sql_Dinamico('RFOLIVEIRA',' Alter Table PESSOA_FISICA_DELEGACAO Drop Constraint PESFIDE_PK ');
	end if;

	select	count(*)
	into STRICT	qt_existe_index_w
	from	user_indexes
	where	index_name = 'PESFIDE_PK';

	if (qt_existe_index_w > 0) then
		CALL Exec_Sql_Dinamico('RFOLIVEIRA',' drop index PESFIDE_PK ');
	end if;

	select	Obter_Tablespace_Index(null)
	into STRICT	nm_tablespace_w
	;

	if (nm_tablespace_w IS NOT NULL AND nm_tablespace_w::text <> '') then
		begin

		CALL Exec_Sql_Dinamico('RFOLIVEIRA',' alter table PESSOA_FISICA_DELEGACAO add ( ' ||
						' Constraint PESFIDE_PK Primary Key (NR_SEQUENCIA) ' ||
						' Using Index Tablespace ' || nm_tablespace_w || ' ) ');

		end;
	else
		begin

		CALL Exec_Sql_Dinamico('RFOLIVEIRA',' alter table PESSOA_FISICA_DELEGACAO add ( ' ||
						' Constraint PESFIDE_PK Primary Key (NR_SEQUENCIA)) ');

		end;
	end if;

	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_recriar_pk_delegacao () FROM PUBLIC;

