-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_arquivo_ft025 ( cd_estabelecimento_p bigint, nm_usuario_p text, nr_sequencia_p bigint) AS $body$
DECLARE


nr_NIT_w                     varchar(16);
ds_razao_social_w            varchar(150);
cd_tipo_aseguramiento_w      varchar(1);
cd_tipo_contratacion_w       varchar(1);
ds_outro_tipo_w              varchar(50);
vl_ingresos                  bigint;
vl_facturacion_radicada_2    bigint;
ds_arquivo_ww                w_inss_direp_arquivo.DS_ARQUIVO_W%type;
dt_atual_s                   CONSTANT w_inss_direp_arquivo.DT_ATUALIZACAO%TYPE := clock_timestamp();

c01 CURSOR FOR
SELECT    substr(obter_dados_pf_pj(null,obter_cgc_convenio(a.cd_convenio),'RFC'),1,9) nr_NIT_w, --Numero de identificacion Tributaria NIT
          obter_dados_pf_pj(null,obter_cgc_convenio(a.cd_convenio),'N') ds_razao_social_w, --Razon Social
          b.cd_tipo_aseguramiento cd_tipo_aseguramiento_w, --Tipo de Aseguramiento
          a.cd_tipo_contratacion cd_tipo_contratacion_w,  --Facturacion por tipo de contratacion
          a.ds_outro_tipo ds_outro_tipo_w,  --Otro Tipo de Contratacion
          sum(f.vl_recebido) vl_ingresos, --Ingresos recaudados
          sum(obter_total_protocolo(d.nr_seq_protocolo)) vl_facturacion_radicada_2 -- Valor total facturacion Radicada
FROM      convenio a,
          convenio_plano b,
          nota_fiscal c,
          protocolo_convenio d,
          titulo_receber e,
          titulo_receber_liq f,
          accounting_files g
WHERE     d.cd_estabelecimento = g.cd_estabelecimento
AND       a.cd_convenio = b.cd_convenio	
AND       b.cd_convenio = d.cd_convenio
AND       b.cd_plano = d.cd_plano
AND       (c.nr_seq_protocolo IS NOT NULL AND c.nr_seq_protocolo::text <> '')
AND       d.nr_seq_protocolo = c.nr_seq_protocolo
AND       (d.dt_registro_fisico IS NOT NULL AND d.dt_registro_fisico::text <> '')
AND       d.dt_registro_fisico between inicio_dia(g.dt_start) and fim_dia(g.dt_end)
AND       e.nr_seq_nf_saida = c.nr_sequencia
AND       c.ie_situacao = '1'
AND       (c.dt_atualizacao_estoque IS NOT NULL AND c.dt_atualizacao_estoque::text <> '')
AND       e.nr_titulo = f.nr_titulo		
AND       f.dt_recebimento between inicio_dia(g.dt_start) and fim_dia(g.dt_end)
AND       g.nr_sequencia = nr_sequencia_p
GROUP BY  substr(obter_dados_pf_pj(null,obter_cgc_convenio(a.cd_convenio),'RFC'),1,9),
          obter_dados_pf_pj(null,obter_cgc_convenio(a.cd_convenio),'N'),
          b.cd_tipo_aseguramiento,
          a.cd_tipo_contratacion,
          a.ds_outro_tipo;	

PROCEDURE INSERT_INTO_TEMPORARY_TABLE IS;
BEGIN
	INSERT INTO w_inss_direp_arquivo(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_arquivo_w
	) VALUES (
		nextval('w_inss_direp_arquivo_seq'),
		cd_estabelecimento_p,
		dt_atual_s,
		nm_usuario_p,
		dt_atual_s,
		nm_usuario_p,
		ds_arquivo_ww
	);
END;

BEGIN
	DELETE FROM w_inss_direp_arquivo;
	COMMIT;

	FOR c01_w IN c01 LOOP
		BEGIN
			ds_arquivo_ww := rpad(substr(c01_w.nr_NIT_w,1,16),16,' ')   || rpad(substr(c01_w.ds_razao_social_w,1,150),150,' ') ||
				rpad(substr(c01_w.cd_tipo_aseguramiento_w,1,1),1,' ')   || rpad(substr(c01_w.cd_tipo_contratacion_w,1,1),1,' ') ||     
				rpad(substr(c01_w.ds_outro_tipo_w,1,50),50,' ')         || rpad(substr(c01_w.vl_ingresos,1,16),16,' ') ||            
				rpad(substr(c01_w.vl_facturacion_radicada_2,1,16),16,' ');

			INSERT_INTO_TEMPORARY_TABLE();
		END;
	END LOOP;

	IF coalesce(ds_arquivo_ww::text, '') = '' THEN
	    INSERT_INTO_TEMPORARY_TABLE();
	END IF;

	CALL UPDATE_DT_GERACAO_ACC_FILES(nr_sequencia_p);

	COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_arquivo_ft025 ( cd_estabelecimento_p bigint, nm_usuario_p text, nr_sequencia_p bigint) FROM PUBLIC;

