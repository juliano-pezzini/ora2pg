-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE val_dt_imposto_tit_pagar_baixa (nr_titulo_p bigint) AS $body$
DECLARE


cd_tributo_w          w_titulo_pagar_imposto.cd_tributo%type;
dt_imposto_w          w_titulo_pagar_imposto.dt_imposto%type;
ie_dt_contabil_w      parametros_contas_pagar.ie_dt_contab_tit_trib%type;
dt_liquidacao_w       titulo_pagar.dt_liquidacao%type;
dt_emissao_w          titulo_pagar.dt_emissao%type;
dt_contabil_w         titulo_pagar.dt_contabil%type;
ie_tipo_titulo_w      titulo_pagar.ie_tipo_titulo%type;
cd_estabelecimento_w  smallint;

c01 CURSOR FOR
  SELECT a.cd_tributo,
    a.dt_imposto,
    b.dt_liquidacao,
    b.dt_emissao,
    b.dt_contabil,
    b.ie_tipo_titulo
  from w_titulo_pagar_imposto a, titulo_pagar b
  where	a.nr_titulo = b.nr_titulo
  and coalesce(a.nr_seq_escrit::text, '') = ''
  and	coalesce(a.nr_bordero::text, '') = ''
  and	a.nr_titulo = nr_titulo_p;


BEGIN


if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then

  cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

  open c01;
  loop
  fetch c01 into
    cd_tributo_w,
    dt_imposto_w,
    dt_liquidacao_w,
    dt_emissao_w,
    dt_contabil_w,
    ie_tipo_titulo_w;
  EXIT WHEN NOT FOUND; /* apply on c01 */	

    select	max(ie_dt_contab_tit_trib)
    into STRICT	ie_dt_contabil_w
    from	tributo
    where	cd_tributo	= cd_tributo_w;

    if (coalesce(ie_dt_contabil_w::text, '') = '') then
      select	coalesce(max(ie_dt_contab_tit_trib),'E')
      into STRICT	ie_dt_contabil_w
      from	parametros_contas_pagar
      where 	cd_estabelecimento 	= cd_estabelecimento_w;
    end if;

    if (ie_dt_contabil_w = 'A')	then
      dt_emissao_w	:= trunc(clock_timestamp(),'dd');
      dt_contabil_w	:= trunc(clock_timestamp(),'dd');
    
    elsif (ie_dt_contabil_w = 'T')	then
      dt_emissao_w	:= trunc(dt_imposto_w,'dd');
      dt_contabil_w	:= trunc(dt_imposto_w,'dd');
    elsif (ie_dt_contabil_w = 'L') then
      dt_emissao_w	:= trunc(coalesce(dt_liquidacao_w,dt_contabil_w),'dd');
      dt_contabil_w	:= trunc(coalesce(dt_liquidacao_w,dt_contabil_w),'dd');
    elsif (ie_dt_contabil_w = 'V') then
      dt_emissao_w	:= trunc(coalesce(dt_liquidacao_w,dt_contabil_w),'dd');
      dt_contabil_w	:= trunc(coalesce(dt_liquidacao_w,dt_imposto_w),'dd');
    elsif (ie_dt_contabil_w = 'D')	then
      dt_emissao_w	:= trunc(dt_emissao_w,'dd');
      dt_contabil_w	:= trunc(dt_emissao_w,'dd');
    end if;

    if (fin_obter_se_mes_aberto(cd_estabelecimento_w, dt_emissao_w, 'CP', ie_tipo_titulo_w, null, null, null) = 'N') then
      CALL wheb_mensagem_pck.exibir_mensagem_abort(191637,	'DT_EMISSAO_W=' || PKG_DATE_FORMATERS.TO_VARCHAR(dt_emissao_w, 'shortDate', cd_estabelecimento_w, WHEB_USUARIO_PCK.get_nm_usuario));
    end if;

    if (fin_obter_se_mes_aberto(cd_estabelecimento_w, coalesce(dt_contabil_w, dt_emissao_w), 'CP', ie_tipo_titulo_w, null, null, null) = 'N') then
      CALL wheb_mensagem_pck.exibir_mensagem_abort(1156575, 'DT_CONTABIL=' || PKG_DATE_FORMATERS.TO_VARCHAR(coalesce(dt_contabil_w, dt_emissao_w), 'shortDate', cd_estabelecimento_w, WHEB_USUARIO_PCK.get_nm_usuario));
    end if;

  end loop;
  close c01;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE val_dt_imposto_tit_pagar_baixa (nr_titulo_p bigint) FROM PUBLIC;

