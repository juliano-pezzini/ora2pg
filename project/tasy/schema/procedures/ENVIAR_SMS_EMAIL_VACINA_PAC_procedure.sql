-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_sms_email_vacina_pac () AS $body$
DECLARE


ds_mensagem_w              varchar(4000);
ds_assunto_w               varchar(4000);
ds_remetente_w             varchar(4000);
ds_nome_paciente_w         varchar(4000);

ds_telefone_w             varchar(4000);

ds_email_origem_w                varchar(4000);
ds_email_destino_w               varchar(4000);

id_sms_w			bigint;

cd_pessoa_fisica_w varchar(50);

deve_enviar_w bigint;
diff_dates_w bigint;

data_alvo_w timestamp;


c01 CURSOR FOR
SELECT
          a.nr_sequencia,
          a.nr_seq_vacina,
          a.ie_dose,
          a.cd_pessoa_fisica,
          a.nr_atendimento,
          a.dt_vacina,
          a.dt_proxima_dose,
          a.nm_usuario,

          vmc.qt_idade_min_mes vmc_qt_idade_min_mes,
          vmc.qt_idade_max_mes vmc_qt_idade_max_mes,
          vmc.qt_idade_min_anos vmc_qt_idade_min_anos,
          vmc.qt_idade_max_anos vmc_qt_idade_max_anos,

          vc.qt_idade_minima_ano vc_qt_idade_minima_ano,
          vc.qt_idade_minima_mes vc_qt_idade_minima_mes,
          vc.qt_idade_minima vc_qt_idade_minima,
          vc.qt_idade_maxima_ano vc_qt_idade_maxima_ano,
          vc.qt_idade_maxima_mes vc_qt_idade_maxima_mes,
          vc.qt_idade_maxima vc_qt_idade_maxima,

          vmc.ie_sexo vmc_ie_sexo,
          vc.qt_prox_mes vc_qt_prox_mes,
          vc.nr_sequencia vc_nr_sequencia,

          v.ds_vacina

    from 
      paciente_vacina a,
      vacinas_modelo vm,
      vacina_modelo_calendario vmc,
      vacina_calendario vc,
      vacina v
where
coalesce(a.dt_cancelamento::text, '') = '' and
coalesce(a.dt_inativacao::text, '') = '' and
(a.dt_proxima_dose IS NOT NULL AND a.dt_proxima_dose::text <> '') and
(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and
(a.dt_vacina IS NOT NULL AND a.dt_vacina::text <> '') and

a.nr_seq_vacina = vm.nr_seq_vacina and
vm.nr_seq_modelo = vmc.nr_sequencia and
v.nr_sequencia = vm.nr_seq_vacina and
vc.nr_seq_vacina = a.nr_seq_vacina and vc.ie_dose = a.ie_dose;


c02 CURSOR FOR
SELECT * from MENSAGEM_VACINA;

BEGIN
  null;

    for doses in c01 loop
      cd_pessoa_fisica_w := coalesce(doses.cd_pessoa_fisica, obter_pessoa_atendimento(doses.nr_atendimento, 'C'));

      --restricao para pessoa fisica
      if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
          goto proximo;
      end if;

      --restricao idade na programacao da vacina, porque pode haver mais de um registro para idades diferentes.
      --essa verificacao eh feita para a proxima dose, de acordo com a dose de referencia.
      select count(1)
      into STRICT deve_enviar_w
      from vacina_calendario vc_prox_dose
      where nr_seq_vacina = doses.nr_seq_vacina and ie_dose_referencia = doses.ie_dose and (obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'DIA')
                  between obter_idade_min_max_vacina(vc_prox_dose.nr_sequencia, 'MIN', null) and obter_idade_min_max_vacina(vc_prox_dose.nr_sequencia, 'MAX', null));

      if (deve_enviar_w = 0) then
          goto proximo;
      end if;


      --obter data alvo para fazer comparacao
      if (doses.DT_PROXIMA_DOSE IS NOT NULL AND doses.DT_PROXIMA_DOSE::text <> '') then
          data_alvo_w := doses.DT_PROXIMA_DOSE;
      elsif (doses.VC_QT_PROX_MES IS NOT NULL AND doses.VC_QT_PROX_MES::text <> '') then
          data_alvo_w := add_months(doses.DT_VACINA, coalesce(doses.VC_QT_PROX_MES, 0));
      else
          --nao foi configurado DT_PROXIMA_DOSE no cadastro da execucao da vacina, nem QT_PROX_MES no cadastro da programacao da vacina
          goto proximo;
      end if;


      --fazendo calculo entre datas
      begin
          select
              trunc(abs(trunc(data_alvo_w) - trunc(clock_timestamp())))
          into STRICT
              diff_dates_w

          where trunc(data_alvo_w) > trunc(clock_timestamp()) or trunc(data_alvo_w) = trunc(clock_timestamp());
          -- so ira enviar mensagem para paciente caso a data ALVO seja maior que a data atual. 
          -- caso contrario, a data de vacinacao ja passou. entao eh apenas um historico.
      exception when others then
          diff_dates_w := null;
      end;

      --verificar se a quantidade de dias que falta para tomar vacina coincide com a data configurada para o envio de informacao
      if (diff_dates_w IS NOT NULL AND diff_dates_w::text <> '') then
          for config in c02 loop

              if (config.QT_DIAS = diff_dates_w) then

                  select coalesce(obter_dados_pf(cd_pessoa_fisica_w, 'NSOC'), obter_dados_pf(cd_pessoa_fisica_w, 'NA'))
                  into STRICT ds_nome_paciente_w
;


                  ds_mensagem_w	:= config.DS_MENSAGEM;
                  ds_mensagem_w	:= substr(replace(ds_mensagem_w, '@NR_SEQ_VACINA', to_char(doses.nr_seq_vacina)),1,2000);
                  ds_mensagem_w	:= substr(replace(ds_mensagem_w, '@DS_VACINA', to_char(doses.ds_vacina)),1,2000);
                  ds_mensagem_w	:= substr(replace(ds_mensagem_w, '@NR_ATENDIMENTO', to_char(doses.nr_atendimento)),1,2000);
                  ds_mensagem_w	:= substr(replace(ds_mensagem_w, '@CD_PESSOA_FISICA', to_char(doses.cd_pessoa_fisica)),1,2000);
                  ds_mensagem_w	:= substr(replace(ds_mensagem_w, '@IE_DOSE', to_char(doses.ie_dose)),1,2000);
                  ds_mensagem_w	:= substr(replace(ds_mensagem_w, '@PACIENTE', to_char(ds_nome_paciente_w)),1,2000);

                  ds_mensagem_w	:= substr(replace(ds_mensagem_w, '@DT_VACINA', to_char(doses.dt_vacina, 'dd/mm/yyyy')),1,2000);
                  ds_mensagem_w	:= substr(replace(ds_mensagem_w, '@DT_PREVISAO', to_char(data_alvo_w, 'dd/mm/yyyy')),1,2000);


                  if (config.IE_SMS = 'S') then
                      ds_remetente_w := ds_nome_paciente_w;

                      begin
                        select obter_dados_pf(cd_pessoa_fisica_w, 'TCD')
                        into STRICT ds_telefone_w
;


                        if (ds_telefone_w IS NOT NULL AND ds_telefone_w::text <> '') then
                            id_sms_w := wheb_sms.enviar_sms(ds_remetente_w, ds_telefone_w, ds_mensagem_w, doses.nm_usuario, id_sms_w);
                        end if;
                      exception when others then
                        null;
                      end;
                  end if;


                  if (config.IE_EMAIL = 'S') then
                      ds_email_destino_w := substr(obter_dados_pf_pj(cd_pessoa_fisica_w,'','M'),1,255);

                      if (position('@' in ds_email_destino_w) > 0) then
                        begin

                            select obter_desc_expressao(314861)
                            into STRICT ds_assunto_w
;

                            CALL enviar_email(ds_assunto_w, ds_mensagem_w, ds_email_origem_w, ds_email_destino_w, doses.nm_usuario, 'A', null);

                        exception
                        when others then
                            null;
                        end;
                      end if;
                  end if;

              end if;
          end loop;
      end if;


      <<proximo>>
      null;
    end loop;--c01 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_sms_email_vacina_pac () FROM PUBLIC;

