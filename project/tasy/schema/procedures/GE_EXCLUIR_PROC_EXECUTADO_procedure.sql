-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ge_excluir_proc_executado ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_manter_prescricao_p text, nm_usuario_p text ) AS $body$
DECLARE



nr_sequencia_w			bigint;
nr_conta_fechada_w		bigint;
ie_flag_ok_w			varchar(01);
nr_laudos_w			bigint;
ie_excluir_mat_med_w		varchar(1);
qt_mat_med_w			bigint;
nr_atendimento_w		bigint;
nr_seq_material_w		bigint;
qt_laudo_w				bigint;
nr_seq_proc_pacote_w	procedimento_paciente.nr_seq_proc_pacote%type;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	procedimento_paciente
	where 	nr_prescricao		= nr_prescricao_p
	and	nr_sequencia_prescricao	= nr_seq_prescr_p;

c02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	prescr_material b,
		material_atend_paciente a
	where	a.nr_prescricao			= b.nr_prescricao
	and	a.nr_sequencia_prescricao	= b.nr_sequencia
	and	b.nr_prescricao			= nr_prescricao_p
	and	b.NR_SEQUENCIA_PROC		= nr_seq_prescr_p;


BEGIN

select	obter_atendimento_prescr(nr_prescricao_p)
into STRICT	nr_atendimento_w
;

select	coalesce(obter_valor_param_usuario(916, 205, obter_perfil_ativo, nm_usuario_p, obter_estab_atend(nr_atendimento_w)),'N')
into STRICT	ie_excluir_mat_med_w
;

select	count(*)
into STRICT	qt_mat_med_w
from	material b,
	material_atend_paciente a
where	b.cd_material           = a.cd_material
and	a.nr_atendimento        = nr_atendimento_w
and	coalesce(a.cd_motivo_exc_conta::text, '') = '';


select 	count(*)
into STRICT	qt_laudo_w
from	procedimento_paciente a
where 	a.nr_prescricao			= nr_prescricao_p
and	a.nr_sequencia_prescricao	= nr_seq_prescr_p
and	(a.nr_laudo IS NOT NULL AND a.nr_laudo::text <> '');

if (qt_laudo_w = 0) then

	select	count(*)
	into STRICT	qt_laudo_w
	from	prescr_proc_ditado b,
		prescr_procedimento a
	where	a.nr_seq_interno	= b.nr_seq_prescr_proc
	and 	a.nr_prescricao		= nr_prescricao_p
	and	a.nr_sequencia		= nr_seq_prescr_p;

end if;

if (ie_excluir_mat_med_w = 'S') and (qt_mat_med_w > 0) then	
	CALL wheb_mensagem_pck.exibir_mensagem_abort(187451);

elsif (qt_laudo_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(187452);
else
	
	open	c01;
	loop
	fetch	c01 into
		nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
	
		select	count(*)
		into STRICT	nr_laudos_w
		from	laudo_paciente
		where	nr_seq_proc	= nr_sequencia_w;

		if (nr_laudos_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(187453);
		end if;

		begin

		select	count(*)
		into STRICT	nr_conta_fechada_w
		from	conta_paciente
			where	nr_interno_conta in (
				SELECT	nr_interno_conta
			from	procedimento_paciente
			where	nr_sequencia		= nr_sequencia_w
			
union

			SELECT	nr_interno_conta
			from	procedimento_paciente
			where	nr_seq_proc_princ	= nr_sequencia_w
			
union

			select	nr_interno_conta
			from	material_atend_paciente
			where	nr_seq_proc_princ	= nr_sequencia_w)
		and	ie_status_acerto = 2
		and	coalesce(ie_cancelamento::text, '') = '';

		if (nr_conta_fechada_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(187455);
		else	
			begin
			select 	max(nr_Seq_procedimento)
			into STRICT	nr_seq_proc_pacote_w
			from 	atendimento_pacote
			where 	nr_seq_proc_origem = nr_sequencia_w;
					
			if (coalesce(nr_seq_proc_pacote_w,0) > 0) then
				CALL desfazer_pacote(nr_seq_proc_pacote_w, 'S', nm_usuario_p);
			end if;

			delete	from material_atend_paciente a
			where	nr_seq_proc_princ	= nr_sequencia_w
			and	exists (SELECT	1
				from	conta_paciente x
				where 	x.nr_interno_conta	= a.nr_interno_conta
				and	coalesce(x.ie_cancelamento::text, '') = '');
				
			update	material_atend_paciente
			set	nm_usuario	= nm_usuario_p,
				nr_seq_proc_princ	 = NULL
			where	nr_seq_proc_princ	= nr_sequencia_w;

			delete	from procedimento_paciente a
			where	nr_seq_proc_princ	= nr_sequencia_w
			and	exists (SELECT	1
				from	conta_paciente x
				where 	x.nr_interno_conta	= a.nr_interno_conta
				and	coalesce(x.ie_cancelamento::text, '') = '');

			update	procedimento_paciente
			set	nr_seq_proc_princ  = NULL
			where	nr_seq_proc_princ	= nr_sequencia_w;
			
			delete	from procedimento_paciente a
			where	nr_sequencia		= nr_sequencia_w
			and	exists (SELECT	1
				from	conta_paciente x
				where 	x.nr_interno_conta	= a.nr_interno_conta
				and	coalesce(x.ie_cancelamento::text, '') = '');

		
		
			end;
		end if;
		end;
	end loop;
	close c01;

	update	procedimento_paciente a
	set	nr_prescricao		 = NULL,
		dt_prescricao		 = NULL,
		nr_sequencia_prescricao  = NULL,
		nm_usuario		= nm_usuario_p
	where 	nr_prescricao		= nr_prescricao_p
	and	nr_sequencia_prescricao	= nr_seq_prescr_p;

	delete	from procedimento_autorizado
	where	nr_prescricao		= nr_prescricao_p
	and	nr_seq_prescricao	= nr_seq_prescr_p;

	/* Ricardo 03/07/2008 - Deletar materiais associados */

	open	c02;
	loop
	fetch	c02 into
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		delete	from material_atend_paciente a
		where	nr_sequencia	= nr_seq_material_w
		and	exists (SELECT	1
			from	conta_paciente x
			where 	x.nr_interno_conta	= a.nr_interno_conta
			and	coalesce(x.ie_cancelamento::text, '') = '');


		end;
	end loop;
	close c02;
	
	
	if (coalesce(ie_manter_prescricao_p,'N') = 'S') then
		begin		
		update   prescr_procedimento
		set      ie_status_execucao   	= 10
		where    nr_prescricao        	= nr_prescricao_p
		and      nr_sequencia         	= nr_seq_prescr_p;
		
		CALL gravar_log_exclusao('PRESCR_PROCEDIMENTO', nm_usuario_p,
			  'NR_PRESCRICAO=' || nr_prescricao_p ||
			  ' NR_SEQUENCIA=' || nr_seq_prescr_p || ' Excluir_Procedimento_Executado - Alterado status 10 - Prescrito','N');
		end;
	else
		begin		
		delete	from prescr_procedimento
		where	nr_prescricao		= nr_prescricao_p
		and	nr_sequencia		= nr_seq_prescr_p;
		
		/*insert into log_exclusao (nm_tabela, dt_atualizacao, nm_usuario, ds_chave)
			  values ('PRESCR_PROCEDIMENTO', sysdate, nm_usuario_p, 
				  'NR_PRESCRICAO=' || nr_prescricao_p ||
				  ' NR_SEQUENCIA=' || nr_seq_prescr_p || ' Excluir_Procedimento_Executado');*/
		CALL gravar_log_exclusao('PRESCR_PROCEDIMENTO', nm_usuario_p,
			  'NR_PRESCRICAO=' || nr_prescricao_p ||
			  ' NR_SEQUENCIA=' || nr_seq_prescr_p || ' Excluir_Procedimento_Executado','N');
		end;
	end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ge_excluir_proc_executado ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_manter_prescricao_p text, nm_usuario_p text ) FROM PUBLIC;

