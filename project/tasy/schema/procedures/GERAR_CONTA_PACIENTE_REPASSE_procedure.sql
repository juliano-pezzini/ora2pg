-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_conta_paciente_repasse ( nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_repasse_mat_w		varchar(1);
ie_repasse_proc_w		varchar(1);
ie_repasse_mat_conv_w	varchar(1);
ie_repasse_proc_conv_w	varchar(1);
nr_seq_procedimento_w	bigint;
nr_seq_material_w		bigint;
vl_material_w		double precision;
cd_estabelecimento_w	smallint;
cd_medico_resp_w		varchar(10);
cd_convenio_w		integer;
cd_edicao_amb_w		integer;
ie_tipo_atendimento_w	smallint;
cd_categoria_w		varchar(10);
dt_entrada_w		timestamp;
ie_tipo_convenio_w	integer;
vl_repasse_mat_w		double precision;
vl_repasse_proc_w		double precision;
cont_w			bigint;
cont_rep_item_w		bigint;
nr_seq_item_repasse_w	bigint;
ds_observacao_w		varchar(4000);
nr_repasse_terceiro_w	bigint;
ie_status_w		varchar(1);
nr_lote_contabil_w	bigint;
ie_vincula_repasse_w	varchar(1) := 'S';
dt_aprovacao_w		timestamp;
nr_titulo_w		repasse_terceiro_venc.nr_titulo%type;

c01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	conta_paciente b,
		procedimento_paciente a
	where	a.nr_interno_conta	= nr_interno_conta_p
	and 	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_interno_conta	= b.nr_interno_conta
	and (ie_repasse_proc_w	= 'C' or (b.ie_cancelamento IS NOT NULL AND b.ie_cancelamento::text <> ''));	-- Edgar 27/07/2006 OS 36638, estornar repasse de conta cancel
c02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	conta_paciente b,
		material_atend_paciente a
	where	a.nr_interno_conta	= nr_interno_conta_p
	and 	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_interno_conta	= b.nr_interno_conta
	and (ie_repasse_mat_w	= 'C' or (b.ie_cancelamento IS NOT NULL AND b.ie_cancelamento::text <> ''));	-- Edgar 27/07/2006 OS 36638, estornar repasse de conta cancel
c03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_repasse_terceiro,
		a.nr_lote_contabil
	from	conta_paciente b,
		repasse_terceiro_item a
	where	a.nr_interno_conta	= nr_interno_conta_p
	and	a.nr_interno_conta	= b.nr_interno_conta
	and	(b.ie_cancelamento IS NOT NULL AND b.ie_cancelamento::text <> '')
	and	cont_w		= 0;


BEGIN

select 	coalesce(max(c.ie_repasse_mat),'N'),
	coalesce(max(c.ie_repasse_proc),'N'),
	max(a.cd_estabelecimento),
	max(b.cd_medico_resp),
	max(ie_tipo_atendimento),
	max(cd_convenio_parametro),
	max(cd_categoria_parametro),
	max(dt_entrada),
	max(OBTER_TIPO_CONVENIO(cd_convenio_parametro))
into STRICT	ie_repasse_mat_w,
	ie_repasse_proc_w,
	cd_estabelecimento_w,
	cd_medico_resp_w,
	ie_tipo_atendimento_w,
	cd_convenio_w,
	cd_categoria_w,
	dt_entrada_w,
	ie_tipo_convenio_w
from	parametro_faturamento c,
	atendimento_paciente b,
	conta_paciente a
where	a.nr_atendimento		= b.nr_atendimento
and	a.cd_estabelecimento	= c.cd_estabelecimento
and	a.nr_interno_conta		= nr_interno_conta_p;

select	count(*)
into STRICT	cont_w
from	REGRA_REPASSE_CONPACI
where	cd_estabelecimento	= cd_estabelecimento_w;

-- Edgar 16/11/2006 OS 42066, utilizar regra de repasse de procedimentos do SUS Andr√© 18/07/2008 OS101321
if (ie_tipo_convenio_w = 3) then
	select	coalesce(max(ie_repasse_proc), ie_repasse_proc_w)
	into STRICT	ie_repasse_proc_w
	from	sus_parametros_aih
	where	cd_estabelecimento	= cd_estabelecimento_w;
end if;


select   Obter_Valor_Conv_Estab(cd_convenio_w,cd_estabelecimento_w,'IE_REPASSE_PROC'),
	 Obter_Valor_Conv_Estab(cd_convenio_w,cd_estabelecimento_w,'IE_REPASSE_MAT')
into STRICT	 ie_repasse_proc_conv_w,
	 ie_repasse_mat_conv_w
;


if (ie_repasse_proc_conv_w IS NOT NULL AND ie_repasse_proc_conv_w::text <> '') then
	ie_repasse_proc_w := ie_repasse_proc_conv_w;
end if;

if (ie_repasse_mat_conv_w IS NOT NULL AND ie_repasse_mat_conv_w::text <> '') then
	ie_repasse_mat_w := ie_repasse_mat_conv_w;
end if;


/*      Obter a edicao do convenio  */

/* Ricardo 13/11/2006 -
select	max(cd_edicao_amb)
into	cd_edicao_amb_w
from	convenio_amb
where	cd_estabelecimento	= cd_estabelecimento_w
  and	cd_convenio		= cd_convenio_w
  and	cd_categoria		= cd_categoria_w
  and	(nvl(ie_situacao,'A')	= 'A')
  and	dt_inicio_vigencia	=
	(select	max(dt_inicio_vigencia)
	from	convenio_amb a
	where	a.cd_estabelecimento  = cd_estabelecimento_w
	and	a.cd_convenio         = cd_convenio_w
	and	a.cd_categoria        = cd_categoria_w
	and	(nvl(a.ie_situacao,'A')= 'A')
	and	a.dt_inicio_vigencia <=  dt_entrada_w);
*/
begin
select	obter_edicao(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_entrada_w, null)
into STRICT	cd_edicao_amb_w
;
exception
	when others then
		select	max(cd_edicao_amb)
		into STRICT	cd_edicao_amb_w
		from	convenio_amb
		where	cd_estabelecimento	= cd_estabelecimento_w
		  and	cd_convenio		= cd_convenio_w
		  and	cd_categoria		= cd_categoria_w
		  and (coalesce(ie_situacao,'A')	= 'A')
		  and	dt_inicio_vigencia	=
			(SELECT	max(dt_inicio_vigencia)
			from	convenio_amb a
			where	a.cd_estabelecimento  = cd_estabelecimento_w
			and	a.cd_convenio         = cd_convenio_w
			and	a.cd_categoria        = cd_categoria_w
			and (coalesce(a.ie_situacao,'A')= 'A')
			and	a.dt_inicio_vigencia <=  dt_entrada_w);
end;


OPEN C01;
LOOP
FETCH C01 into nr_seq_procedimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	CALL gerar_procedimento_repasse(
		nr_seq_procedimento_w,
		cd_estabelecimento_w,
		cd_medico_resp_w,
		nm_usuario_p,
		cd_edicao_amb_w,
		cd_convenio_w,
		ie_tipo_atendimento_w,
		null,
		null,
		null);

END LOOP;
Close C01;


OPEN C02;
LOOP
FETCH C02 into	nr_seq_material_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	CALL gerar_material_repasse(
		nr_seq_material_w,
		cd_estabelecimento_w,
		cd_medico_resp_w,
		nm_usuario_p,
		cd_edicao_amb_w,
		cd_convenio_w,
		ie_tipo_atendimento_w,
		null,
		null);

END LOOP;
Close C02;

OPEN C03;
LOOP
FETCH C03 into nr_seq_item_repasse_w, nr_repasse_terceiro_w, nr_lote_contabil_w;
EXIT WHEN NOT FOUND; /* apply on c03 */

	select	max(ie_status),
		max(dt_aprovacao_terceiro)
	into STRICT	ie_status_w,
		dt_aprovacao_w
	from	repasse_terceiro
	where	nr_repasse_terceiro	= nr_repasse_terceiro_w;

	select	max(nr_titulo)
	into STRICT	nr_titulo_w
	from	repasse_terceiro_venc
	where	nr_repasse_terceiro	= nr_repasse_terceiro_w;

	if (coalesce(ie_status_w,'A') = 'A') and (coalesce(nr_lote_contabil_w::text, '') = '') then
		begin
		delete	from	repasse_terceiro_item
		where	nr_interno_conta	= nr_interno_conta_p;
		end;
	else
		begin

		if (dt_aprovacao_w IS NOT NULL AND dt_aprovacao_w::text <> '') or (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
			ie_vincula_repasse_w := 'N';
		end if;

		ds_observacao_w	:= substr(wheb_mensagem_pck.get_texto(305915,'NR_SEQUENCIA=' || nr_seq_item_repasse_w),1,255);
		insert	into	repasse_terceiro_item(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				vl_repasse,
				nr_seq_terceiro,
				ds_observacao,
				dt_lancamento,
				nr_interno_conta,
				nr_atendimento,
				cd_centro_custo,
				cd_centro_custo_prov,
				cd_conta_contabil,
				cd_conta_contabil_prov,
				cd_conta_financ,
				cd_convenio,
				cd_material,
				cd_medico,
				cd_procedimento,
				dt_contabil,
				dt_liberacao,
				dt_plantao,
				ie_origem_proced,
				ie_partic_tributo,
				nr_adiant_pago,
				nr_lote_contabil,
				nr_lote_contabil_prov,
				nr_repasse_terceiro,
				nr_seq_med_plantao,
				nr_seq_proc_interno,
				nr_seq_regra,
				nr_seq_regra_esp,
				nr_seq_repasse_prod,
				nr_seq_ret_glosa,
				nr_seq_terc_regra_esp,
				nr_seq_terc_regra_item,
				nr_seq_terc_rep,
				nr_seq_tipo,
				nr_seq_tipo_valor,
				nr_seq_trans_fin,
				nr_seq_trans_fin_prov,
				qt_minuto)
			SELECT	nextval('repasse_terceiro_item_seq'),
				nm_usuario_p,
				a.dt_atualizacao,
				(a.vl_repasse * -1),
				a.nr_seq_terceiro,
				ds_observacao_w,
				a.dt_lancamento,
				a.nr_interno_conta,
				a.nr_atendimento,
				a.cd_centro_custo,
				a.cd_centro_custo_prov,
				a.cd_conta_contabil,
				a.cd_conta_contabil_prov,
				a.cd_conta_financ,
				a.cd_convenio,
				a.cd_material,
				a.cd_medico,
				a.cd_procedimento,
				a.dt_contabil,
				a.dt_liberacao,
				a.dt_plantao,
				a.ie_origem_proced,
				a.ie_partic_tributo,
				a.nr_adiant_pago,
				a.nr_lote_contabil,
				a.nr_lote_contabil_prov,
				CASE WHEN ie_vincula_repasse_w='S' THEN a.nr_repasse_terceiro  ELSE null END ,
				a.nr_seq_med_plantao,
				a.nr_seq_proc_interno,
				a.nr_seq_regra,
				a.nr_seq_regra_esp,
				a.nr_seq_repasse_prod,
				a.nr_seq_ret_glosa,
				a.nr_seq_terc_regra_esp,
				a.nr_seq_terc_regra_item,
				a.nr_seq_terc_rep,
				a.nr_seq_tipo,
				a.nr_seq_tipo_valor,
				a.nr_seq_trans_fin,
				a.nr_seq_trans_fin_prov,
				a.qt_minuto
			from	repasse_terceiro_item a
			where	nr_interno_conta	= nr_interno_conta_p;
		end;
	end if;
END LOOP;
CLOSE C03;


select	sum(vl_repasse)
into STRICT	vl_repasse_proc_w
from	procedimento_repasse a,
	procedimento_paciente b
where	a.nr_seq_procedimento	= b.nr_sequencia
and	b.nr_interno_conta		= nr_interno_conta_p;

select	sum(vl_repasse)
into STRICT	vl_repasse_mat_w
from	material_repasse a,
	material_atend_paciente b
where	a.nr_seq_material		= b.nr_sequencia
and	b.nr_interno_conta		= nr_interno_conta_p;


update	conta_paciente
set	vl_repasse_conta	= coalesce(vl_repasse_mat_w,0) + coalesce(vl_repasse_proc_w,0)
where	nr_interno_conta	= nr_interno_conta_p;


if (nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') then


	CALL gerar_procmat_repasse_nf(nr_interno_conta_p, nm_usuario_p, 'S');


end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_conta_paciente_repasse ( nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

