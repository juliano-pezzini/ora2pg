-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_equip_agenda_cirurgia ( nr_seq_agenda_p bigint, lista_equip_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
lista_equip_w		varchar(400);
ie_contador_w		bigint	:= 0;
tam_lista_w		bigint;
ie_pos_virgula_w	smallint;
nr_sequencia_w		bigint;
cd_equipamento_w	bigint;
nr_seq_classif_equip_w	bigint;
ie_tipo_w		varchar(1);
ie_consiste_w		varchar(15);
ie_consiste_grid_w	varchar(1);
ds_erro_w		varchar(4000):=null;
ie_carater_cirurgia_w	varchar(15);
qt_idade_w		bigint;
qt_idade_paciente_w	bigint;
cd_pessoa_fisica_w	varchar(10);
ie_sexo_w		varchar(15);
cd_convenio_w		integer;
nr_seq_proc_interno_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_agenda_w		bigint;
ie_status_agenda_w	varchar(3);
nr_seq_evento_w		bigint;
nr_atendimento_w	bigint;
hr_inicio_w		timestamp;
cd_medico_w		varchar(10);
dt_cancelamento_w	timestamp;
cd_motivo_cancelamento_w agenda_paciente.cd_motivo_cancelamento%type;
ds_observacao_w		varchar(255);	
 
 
C01 CURSOR FOR 
	SELECT	nr_seq_evento 
	from	regra_envio_sms 
	where	cd_estabelecimento		= cd_estabelecimento_p 
	and	ie_evento_disp			= 'REM' 
	and (obter_se_convenio_rec_alerta(cd_convenio_w,nr_sequencia) = 'S') 
	and (obter_se_proc_rec_alerta(nr_seq_proc_interno_w,nr_sequencia,cd_procedimento_w,ie_origem_proced_w) = 'S') 
	and (obter_classif_regra(nr_sequencia,coalesce(obter_classificacao_pf(cd_pessoa_fisica_w),0)) = 'S') 
	and (obter_regra_alerta_agenda(nr_sequencia,cd_agenda_w,ie_status_agenda_w) = 'S') 
	and (obter_se_equip_regra(nr_sequencia,nr_seq_agenda_p) = 'S') 
	and	coalesce(ie_situacao,'A') = 'A';	
 

BEGIN 
 
delete	from consistencia_agenda_cir where nr_seq_agenda = nr_seq_agenda_p;
commit;
 
select max(qt_idade_paciente), 
	max(cd_pessoa_fisica), 
	max(cd_convenio), 
	max(nr_seq_proc_interno), 
	max(cd_procedimento), 
	max(ie_origem_proced), 
	max(cd_agenda), 
	max(ie_status_agenda), 
	max(nr_atendimento), 
	max(hr_inicio), 
	max(cd_medico), 
	max(dt_cancelamento), 
	max(cd_motivo_cancelamento), 
	substr(max(ds_observacao),1,255) 
into STRICT	qt_idade_paciente_w, 
	cd_pessoa_fisica_w, 
	cd_convenio_w, 
	nr_seq_proc_interno_w, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	cd_agenda_w, 
	ie_status_agenda_w, 
	nr_atendimento_w, 
	hr_inicio_w, 
	cd_medico_w, 
	dt_cancelamento_w, 
	cd_motivo_cancelamento_w, 
	ds_observacao_w 
from 	agenda_paciente 
where 	nr_sequencia = nr_seq_agenda_p;
 
if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
	qt_idade_w 	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A'),coalesce(qt_idade_paciente_w,0));
	ie_sexo_w	:= obter_sexo_pf(cd_pessoa_fisica_w,'C');
end if;	
 
 
select	coalesce(max(obter_valor_param_usuario(871, 100, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)),'C') 
into STRICT	ie_tipo_w
;
 
ie_consiste_w := Obter_Param_Usuario(871, 81, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_w);
ie_consiste_grid_w := Obter_Param_Usuario(871, 368, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_grid_w);
 
cd_equipamento_w	:= null;
nr_seq_classif_equip_w	:= null;
 
lista_equip_w	:= lista_equip_p;
 
while	(lista_equip_w IS NOT NULL AND lista_equip_w::text <> '') or 
	ie_contador_w > 200 loop 
	begin 
	tam_lista_w		:= length(lista_equip_w);
	ie_pos_virgula_w		:= position(',' in lista_equip_w);
 
	if (ie_pos_virgula_w <> 0) then 
		begin 
		if (ie_tipo_w = 'E') then 
			cd_equipamento_w	:= substr(lista_equip_w,1,(ie_pos_virgula_w - 1));
		else 
			nr_seq_classif_equip_w	:= substr(lista_equip_w,1,(ie_pos_virgula_w - 1));
		end if;
		lista_equip_w		:= substr(lista_equip_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end;
	end if;
 
	if (ie_consiste_w <> 'N') then 
		if (ie_tipo_w = 'E') then 
			if (ie_consiste_grid_w = 'N') then 
				ds_erro_w := obter_se_equip_disp_cirur(nr_seq_agenda_p, cd_equipamento_w, ds_erro_w, nm_usuario_p, cd_estabelecimento_p, 0, 'S');
			else 
				CALL obter_se_equip_disp_cir(nr_seq_agenda_p, cd_equipamento_w,nm_usuario_p, cd_estabelecimento_p,0,'S');
			end if;	
		else 
			ds_erro_w := obter_se_classif_equip_disp(nr_seq_agenda_p, nr_seq_classif_equip_w, ds_erro_w, nm_usuario_p, cd_estabelecimento_p, 0, 'S');
		end if;
	end if;
	 
	if (ie_consiste_grid_w = 'S') and (ie_tipo_w = 'E') then 
		Select	max(ds_consistencia) 
		into STRICT 	ds_erro_w 
		from 	consistencia_agenda_cir 
		where 	nr_seq_agenda = nr_seq_agenda_p;
	end if;	
	 
	select	ie_carater_cirurgia 
	into STRICT	ie_carater_cirurgia_w 
	from	agenda_paciente 
	where	nr_sequencia = nr_seq_agenda_p;
	 
	if (coalesce(ds_erro_w::text, '') = '') or 
		((ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') and 
		 ((ie_consiste_w = 'A') or 
		 (ie_consiste_w = 'E' AND ie_carater_cirurgia_w = 'U'))) then 
		begin 
		select	nextval('agenda_pac_equip_seq') 
		into STRICT	nr_sequencia_w 
		;
 
		insert into agenda_pac_equip( 
			nr_sequencia, 
			nr_seq_agenda, 
			dt_atualizacao, 
			nm_usuario, 
			cd_equipamento, 
			nr_seq_classif_equip, 
			ie_origem_inf, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ie_obrigatorio, 
			ie_status_equipamento 
			) 
		values ( 
			nr_sequencia_w, 
			nr_seq_agenda_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_equipamento_w, 
			nr_seq_classif_equip_w, 
			'I', 
			clock_timestamp(), 
			nm_usuario_p, 
			'S', 
			obter_status_equipamento(nr_seq_agenda_p,cd_equipamento_w,'S'));
		end;
	end if;
	ie_contador_w	:= ie_contador_w + 1;
	end;
end loop;
 
open C01;
	loop 
	fetch C01 into 
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		CALL gerar_evento_agenda_trigger(	nr_seq_evento_w,nr_atendimento_w,cd_pessoa_fisica_w,null,nm_usuario_p, 
						cd_agenda_w, hr_inicio_w, cd_medico_w, cd_procedimento_w, 
						ie_origem_proced_w, dt_cancelamento_w,null,null,null,cd_convenio_w, 
						cd_motivo_cancelamento_w,'S',nr_seq_agenda_p,null,null,ie_status_agenda_w, 
						null,ds_observacao_w);
		end;
	end loop;
	close C01;
 
	 
ds_erro_p := substr(ds_erro_w,1,255);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_equip_agenda_cirurgia ( nr_seq_agenda_p bigint, lista_equip_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

