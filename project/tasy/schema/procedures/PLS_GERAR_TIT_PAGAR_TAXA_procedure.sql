-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tit_pagar_taxa ( nr_seq_taxa_p bigint, dt_vencimento_p timestamp, cd_condicao_pagamento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
dt_base_venc_w			timestamp;
dt_referencia_w			timestamp;
vl_liquido_w			double precision;
ie_forma_pagamento_w		smallint;
ie_acao_venc_nao_util_w		varchar(1)	:= 'M';
cd_moeda_w			integer;
ie_mes_fechado_w		varchar(1);
ie_origem_tit_reembolso_w	varchar(1);
cd_tipo_taxa_juros_w		bigint;
pr_juros_padrao_w		double precision;
cd_tipo_taxa_multa_w		bigint;
pr_multa_padrao_w		double precision;
nr_seq_trans_fin_baixa_taxa_w	bigint;
cd_conta_financ_w		bigint;
cd_cgc_ans_w			varchar(14);
tx_fracao_parcela_w		double precision	:= 0;
tx_acrescimo_w			double precision	:= 0;
dt_vencimento_w			timestamp;
vl_titulo_w			double precision;
nr_titulo_w			bigint;
nr_seq_classif_w		bigint;
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
ie_cursor_w			varchar(1)	:= 'N';
nr_seq_trans_fin_contab_w	bigint;

C01 CURSOR FOR 
	SELECT	tx_fracao_parcela,	/* A Prazo  */
 
		coalesce(tx_acrescimo,0), 
		Obter_data_vencimento(	dt_base_venc_w, 
					qt_dias_parcela, 
					cd_estabelecimento_p, 
					ie_corrido_util, 
					ie_acao_venc_nao_util_w) 
	from	parcela 
	where	cd_condicao_pagamento 	= cd_condicao_pagamento_p 
	and	ie_forma_pagamento_w	<> 1 
	
UNION
 
	SELECT	100, /* A Vista  */
 
		0,	 
		dt_base_venc_w 
	 
	where	ie_forma_pagamento_w	= 1 
	
UNION
 
	select	100, /*Conforme vencimentos  */
 
		0,	 
		dt_base_venc_w 
	 
	where	ie_forma_pagamento_w	= 10;


BEGIN 
 
dt_base_venc_w	:= dt_vencimento_p;
 
select 	trunc(coalesce(dt_sugerida_pagamento,dt_periodo_final),'dd'), 
	vl_liquido 
into STRICT	dt_referencia_w, 
	vl_liquido_w 
from 	pls_tps 
where	nr_sequencia = nr_seq_taxa_p;
 
select	pls_obter_se_mes_fechado(dt_referencia_w,'T',cd_estabelecimento_p) 
into STRICT	ie_mes_fechado_w
;
 
if (ie_mes_fechado_w = 'S') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(188958);
end if;
 
select	cd_moeda_padrao 
into STRICT	cd_moeda_w 
from	parametros_contas_pagar 
where	cd_estabelecimento = cd_estabelecimento_p;
 
select	coalesce(max(ie_forma_pagamento),3), 
	coalesce(max(ie_acao_nao_util),'M') 
into STRICT	ie_forma_pagamento_w, 
	ie_acao_venc_nao_util_w 
from	condicao_pagamento 
where	cd_condicao_pagamento = cd_condicao_pagamento_p 
and	ie_situacao      = 'A';
 
select	nr_seq_trans_fin_baixa_taxa, 
	cd_conta_financ_taxa, 
	cd_cgc_ans, 
	nr_seq_trans_fin_contab 
into STRICT	nr_seq_trans_fin_baixa_taxa_w, 
	cd_conta_financ_w, 
	cd_cgc_ans_w, 
	nr_seq_trans_fin_contab_w 
from	pls_parametros 
where	cd_estabelecimento = cd_estabelecimento_p;
 
if (coalesce(cd_cgc_ans_w::text, '') = '') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(188959);
end if;
 
select	cd_tipo_taxa_juro, 
	pr_juro_padrao, 
	cd_tipo_taxa_multa, 
	pr_multa_padrao 
into STRICT	cd_tipo_taxa_juros_w, 
	pr_juros_padrao_w, 
	cd_tipo_taxa_multa_w, 
	pr_multa_padrao_w 
from	parametros_contas_pagar a 
where	a.cd_estabelecimento	= cd_estabelecimento_p;
 
if (coalesce(cd_tipo_taxa_juros_w::text, '') = '') or (coalesce(pr_juros_padrao_w::text, '') = '') or (coalesce(cd_tipo_taxa_multa_w::text, '') = '') or (coalesce(pr_multa_padrao_w::text, '') = '') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(188960);
end if;
 
open c01;
loop 
fetch c01 into 
	tx_fracao_parcela_w, 
	tx_acrescimo_w, 
	dt_vencimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	if (coalesce(tx_fracao_parcela_w,0) > 0) then 
		vl_titulo_w 	:= ((vl_liquido_w * tx_fracao_parcela_w) / 100);
	end if;
		 
	if (tx_acrescimo_w <> 0) then 
		vl_titulo_w 	:= vl_titulo_w + ((vl_titulo_w * tx_acrescimo_w) / 100);
	end if;
		 
	select	nextval('titulo_pagar_seq') 
	into STRICT	nr_titulo_w 
	;
		 
	insert into titulo_pagar(nr_titulo, 
		cd_estabelecimento, 
		dt_atualizacao, 
		nm_usuario, 
		dt_emissao, 
		dt_vencimento_original, 
		dt_vencimento_atual, 
		vl_titulo, 
		vl_saldo_titulo, 
		vl_saldo_juros, 
		vl_saldo_multa, 
		cd_moeda, 
		tx_juros, 
		tx_multa, 
		cd_tipo_taxa_juro, 
		cd_tipo_taxa_multa, 
		ie_situacao, 
		ie_origem_titulo, 
		ie_tipo_titulo, 
		cd_cgc, 
		ie_pls, 
		nr_seq_trans_fin_baixa, 
		nr_seq_taxa_saude, 
		ie_status, 
		nr_seq_trans_fin_contab, 
		dt_contabil) 
	values (	nr_titulo_w, 
		cd_estabelecimento_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		dt_vencimento_w, 
		dt_vencimento_w, 
		vl_titulo_w, 
		vl_titulo_w, 
		0, 
		0, 
		cd_moeda_w, 
		pr_juros_padrao_w, 
		pr_multa_padrao_w, 
		cd_tipo_taxa_juros_w, 
		cd_tipo_taxa_multa_w, 
		'A', 
		'10', 
		'10', 
		cd_cgc_ans_w, 
		'S', 
		nr_seq_trans_fin_baixa_taxa_w, 
		nr_seq_taxa_p, 
		'D', 
		nr_seq_trans_fin_contab_w, 
		clock_timestamp());
					 
	CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w,nm_usuario_p);
					 
	update	pls_tps 
	set	dt_geracao_titulo = clock_timestamp() 
	where	nr_sequencia = nr_seq_taxa_p;
	 
	select	coalesce(max(nr_sequencia),0) + 1 
	into STRICT	nr_seq_classif_w 
	from	titulo_pagar_classif 
	where	nr_titulo	= nr_titulo_w;
	 
	insert into titulo_pagar_classif(dt_atualizacao, 
		nm_usuario, 
		nr_seq_conta_financ, 
		nr_sequencia, 
		nr_titulo, 
		vl_acrescimo, 
		vl_desconto, 
		vl_original, 
		vl_titulo, 
		nr_seq_trans_fin) 
	values (	clock_timestamp(), 
		nm_usuario_p, 
		cd_conta_financ_w, 
		nr_seq_classif_w, 
		nr_titulo_w, 
		0, 
		0, 
		vl_titulo_w, 
		vl_titulo_w, 
		nr_seq_trans_fin_contab_w);
		 
	ie_cursor_w	:= 'S';						
end loop;
close c01;
 
	if (ie_cursor_w = 'N') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(188961);
	end if;	
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tit_pagar_taxa ( nr_seq_taxa_p bigint, dt_vencimento_p timestamp, cd_condicao_pagamento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

