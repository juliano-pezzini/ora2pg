-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cot_compra_autor_mat_esp ( nr_sequencia_p bigint, nm_usuario_p text, nr_cot_compra_p INOUT bigint, ie_insere_mat_repetido_p text default 'N') AS $body$
DECLARE


				
c01 CURSOR FOR
SELECT	nr_sequencia,
	cd_material,
	qt_solicitada
from	material_autor_cirurgia
where	nr_seq_autorizacao = nr_sequencia_p
and	coalesce(nr_cot_compra::text, '') = '';


nr_sequencia_item_w	bigint;
nr_cot_compra_w		bigint;
nr_item_w		bigint := 0;
qt_existe_w		bigint;
nr_cot_item_entrega_w	bigint;
cd_material_w		integer;
qt_material_w		double precision;
cd_comprador_w		varchar(10);
cd_estabelecimento_w	smallint := wheb_usuario_pck.get_cd_estabelecimento;
cd_unidade_medida_w	varchar(30);
ie_permite_atua_cot_fornec_w	varchar(1);
ie_copia_anexo_autor_cot_w		varchar(1);
nr_atendimento_w	bigint;
ie_titulo_cotacao_w	varchar(15);
ds_titulo_w		cot_compra.ds_titulo%type;
nr_seq_agenda_w		autorizacao_cirurgia.nr_seq_agenda%type;
cd_pessoa_fisica_w	autorizacao_cirurgia.cd_pessoa_fisica%type;
nm_paciente_w		varchar(255);
nr_cirurgia_w		cirurgia.nr_cirurgia%type;
dt_inicio_prevista_w	timestamp;
qt_dias_w		bigint;
qt_horas_w		bigint;
dt_retorno_prev_w	timestamp;
ds_convenio_w		varchar(255);
ie_finalidade_cotacao_w	varchar(15);

ie_insere_mat_repetido_w varchar(1);


BEGIN
ie_insere_mat_repetido_w := coalesce(ie_insere_mat_repetido_p,'N');

ie_permite_atua_cot_fornec_w 	:= coalesce(Obter_Valor_Param_Usuario(3006,59, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w),'N');
ie_copia_anexo_autor_cot_w 	:= coalesce(Obter_Valor_Param_Usuario(3006,64, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w),'N');
ie_titulo_cotacao_w		:= coalesce(Obter_Valor_Param_Usuario(3006,66, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w),'N');
ie_finalidade_cotacao_w		:= coalesce(Obter_Valor_Param_Usuario(3006,70, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w),'C');
qt_dias_w			:= coalesce(Obter_Valor_Param_Usuario(915,2, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w),'N');
qt_horas_w			:= coalesce(Obter_Valor_Param_Usuario(915,167, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w),'N');

if (coalesce(nr_sequencia_p,0) > 0) then
	begin
	cd_comprador_w := substr(obter_pessoa_fisica_usuario(nm_usuario_p, 'C'),1,10);
	
	select	max(nr_atendimento),
		max(nr_seq_agenda),
		max(cd_pessoa_fisica)
	into STRICT	nr_atendimento_w,
		nr_seq_agenda_w,
		cd_pessoa_fisica_w
	from	autorizacao_cirurgia
	where	nr_sequencia	= nr_sequencia_p;
	
  select	substr(obter_desc_expressao(325811) || ' ' || max(nm_paciente),1,254),
		substr(' - ' || obter_desc_expressao(326148) || ' ' || max(ds_convenio),1,254)	
	into STRICT	nm_paciente_w,
		ds_convenio_w
	from	autorizacao_cirurgia_v
	where	nr_sequencia	= nr_sequencia_p;
	
	if (ie_titulo_cotacao_w IS NOT NULL AND ie_titulo_cotacao_w::text <> '') then
	
		if (ie_titulo_cotacao_w = 'NP') then
			
			ds_titulo_w	:= nm_paciente_w;
			
		elsif (ie_titulo_cotacao_w = 'DC') then
		
			select	coalesce(max(b.nr_cirurgia),0)
			into STRICT	nr_cirurgia_w
			from	agenda_paciente b,
				autorizacao_cirurgia a
			where	a.nr_seq_agenda = b.nr_sequencia
			and	a.nr_sequencia = nr_sequencia_p;
			
			if (nr_cirurgia_w > 0) then
			
				select	dt_inicio_prevista
				into STRICT	dt_inicio_prevista_w
				from	cirurgia
				where	nr_cirurgia = nr_cirurgia_w;
				
				ds_titulo_w := wheb_mensagem_pck.get_texto(301250,'DS_RETORNO='|| PKG_DATE_FORMATERS.to_varchar(dt_inicio_prevista_w, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p));
			end if;
			
		elsif (ie_titulo_cotacao_w = 'PD') then
			
			ds_titulo_w := nm_paciente_w;
			
			select	coalesce(max(b.nr_cirurgia),0)
			into STRICT	nr_cirurgia_w
			from	agenda_paciente b,
				autorizacao_cirurgia a
			where	a.nr_seq_agenda = b.nr_sequencia
			and	a.nr_sequencia = nr_sequencia_p;
			
			if (nr_cirurgia_w > 0) then
			
				select	dt_inicio_prevista
				into STRICT	dt_inicio_prevista_w
				from	cirurgia
				where	nr_cirurgia = nr_cirurgia_w;
				
				ds_titulo_w := substr(wheb_mensagem_pck.get_texto(301312,'DS_RETORNO1='||ds_titulo_w||';DS_RETORNO2='||PKG_DATE_FORMATERS.to_varchar(dt_inicio_prevista_w, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,255);
			end if;
	
		elsif (ie_titulo_cotacao_w = 'PDC') then

			ds_titulo_w := nm_paciente_w;
			
			select	coalesce(max(b.nr_cirurgia),0)
			into STRICT	nr_cirurgia_w
			from	agenda_paciente b,
				autorizacao_cirurgia a
			where	a.nr_seq_agenda = b.nr_sequencia
			and	a.nr_sequencia = nr_sequencia_p;
			
			if (nr_cirurgia_w > 0) then
			
				select	dt_inicio_prevista
				into STRICT	dt_inicio_prevista_w
				from	cirurgia
				where	nr_cirurgia = nr_cirurgia_w;
				
				ds_titulo_w := substr(wheb_mensagem_pck.get_texto(301312,'DS_RETORNO1='||ds_titulo_w||';DS_RETORNO2='||PKG_DATE_FORMATERS.to_varchar(dt_inicio_prevista_w, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,255);
			end if;
			
			ds_titulo_w	:= substr( ds_titulo_w || ds_convenio_w,1,255);
		end if;
	end if;	
	
	
	select	count(*)
	into STRICT	qt_existe_w
	from	material_autor_cirurgia
	where	nr_seq_autorizacao = nr_sequencia_p
	and	coalesce(qt_solicitada,0) > 0
	and	coalesce(nr_cot_compra::text, '') = '';

	if (qt_existe_w = 0) then
		/*R.aise_application_error(-20011,'Nao existem itens com quantidade solicitada, ou itens nao cotados para geracao da cotacao' || '#@#@');*/

		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(250485);
	end if;
	
	begin
	select	cd_comprador_w
	into STRICT	cd_comprador_w
	from	comprador
	where	ie_situacao 		= 'A'
	and	cd_pessoa_fisica		= cd_comprador_w
	and	cd_estabelecimento 	= cd_estabelecimento_w  LIMIT 1;
	exception
	when others then
		cd_comprador_w := '';
	end;
	
	if (coalesce(cd_comprador_w,'X') = 'X') then
		begin
		select	cd_comprador_padrao
		into STRICT	cd_comprador_w
		from	parametro_compras
		where	cd_estabelecimento = cd_estabelecimento_w  LIMIT 1;
		exception
		when others then
			cd_comprador_w	:= '';
		end;
	end if;

	
	if (coalesce(cd_comprador_w,'X') = 'X') then
		/*R.aise_application_error(-20011,'Usuario logado nao esta definido como comprador. Verifique cadastro do comprador ou parametros do compras' || '#@#@');*/

		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(250486);
	end if;
	
	select	obter_dia_hora_util_periodo(cd_estabelecimento_w,clock_timestamp() + dividir(qt_horas_w,24),qt_dias_w)
	into STRICT	dt_retorno_prev_w
	;
	
	select	nextval('cot_compra_seq')
	into STRICT	nr_cot_compra_w
	;
	
	insert into cot_compra(
		nr_cot_compra,
		dt_cot_compra,
		dt_atualizacao,
		cd_comprador,
		nm_usuario,
		cd_pessoa_solicitante,
		cd_estabelecimento,
		ie_finalidade_cotacao,
		nr_seq_autor_cir,
		nr_atendimento,
		ds_titulo,
		dt_retorno_prev)
	values (	nr_cot_compra_w,
		clock_timestamp(),
		clock_timestamp(),
		cd_comprador_w,
		nm_usuario_p,
		cd_comprador_w,
		cd_estabelecimento_w,
		ie_finalidade_cotacao_w,
		nr_sequencia_p,
		nr_atendimento_w,
		ds_titulo_w,
		dt_retorno_prev_w);
		
	if (ie_copia_anexo_autor_cot_w <> 'N') then
		begin
		
		insert into cot_compra_anexo(
			ds_arquivo,
			dt_atualizacao,
			ie_enviar,
			nm_usuario,
			nr_cot_compra,
			nr_sequencia,
			ie_origem)
		SELECT	a.ds_arquivo,
			clock_timestamp(),
			a.ie_anexar_email,
			nm_usuario_p,
			nr_cot_compra_w,
			nextval('cot_compra_anexo_seq'),
			'U'
		from	autorizacao_cirurgia_arq a
		where	a.nr_seq_autorizacao	 = nr_sequencia_p;
		
		end;
	end if;	
	
	open C01;
	loop
	fetch C01 into	
		nr_sequencia_item_w,
		cd_material_w,
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (qt_material_w > 0) then
			begin
			
			select	coalesce(max(nr_item_cot_compra),0)
			into STRICT	nr_item_w
			from	cot_compra_item
			where	nr_cot_compra = nr_cot_compra_w
			and	cd_material = cd_material_w
			and	qt_material = qt_material_w;
			
			if (nr_item_w = 0) or (ie_insere_mat_repetido_w = 'S') then
			
				nr_item_w := nr_item_w + 1;
				
				select	count(*)
				into STRICT	qt_existe_w
				from	cot_compra_item
				where	nr_cot_compra = nr_cot_compra_w
				and	nr_item_cot_compra = nr_item_w;
				
				if (qt_existe_w > 0) then
					
					select	coalesce(max(nr_item_cot_compra),0) + 1
					into STRICT	nr_item_w
					from	cot_compra_item
					where	nr_cot_compra = nr_cot_compra_w;
				end if;
			
				select	cd_unidade_medida_compra
				into STRICT	cd_unidade_medida_w
				from	material
				where	cd_material = cd_material_w;
			
				insert into cot_compra_item(
					nr_cot_compra,
					nr_item_cot_compra,
					cd_material,
					qt_material,
					cd_unidade_medida_compra,
					dt_atualizacao,
					dt_limite_entrega,
					nm_usuario,
					ie_situacao)
				values (	nr_cot_compra_w,
					nr_item_w,
					cd_material_w,
					qt_material_w,
					cd_unidade_medida_w,
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p,
					'A');
			
				select	nextval('cot_compra_item_entrega_seq')
				into STRICT	nr_cot_item_entrega_w
				;
					
				insert into cot_compra_item_entrega(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_cot_compra,
					nr_item_cot_compra,
					dt_entrega,
					qt_entrega,
					ds_observacao)
				values (nr_cot_item_entrega_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_cot_compra_w,
					nr_item_w,
					clock_timestamp(),
					qt_material_w,
					' ');
			end if;
			
			update	material_autor_cirurgia
			set	nr_cot_compra 		= nr_cot_compra_w,
				nr_item_cot_compra	= nr_item_w,
                nm_usuario = nm_usuario_p,
                dt_atualizacao = clock_timestamp()
			where	nr_sequencia		= nr_sequencia_item_w;
			
			end;			
		end if;
		end;
	end loop;
	close C01;
	
	if (ie_permite_atua_cot_fornec_w <> 'N') then
		begin
		CALL atualiza_cotacao_fornec(nr_cot_compra_w, nr_sequencia_p, nm_usuario_p, cd_estabelecimento_w);
		end;
	end if;

	CALL envia_email_cot_usuario_regra(nr_cot_compra_w,nm_usuario_p,cd_estabelecimento_w); -- Retirado de dentro da atualiza_cotacao_fornec, pois nao e obrigado a ter fornecedor OS732611 02/01/2015 11:43:14
	
	commit;
	end;

nr_cot_compra_p := nr_cot_compra_w;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cot_compra_autor_mat_esp ( nr_sequencia_p bigint, nm_usuario_p text, nr_cot_compra_p INOUT bigint, ie_insere_mat_repetido_p text default 'N') FROM PUBLIC;

