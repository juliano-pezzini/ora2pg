-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_definir_grupo_coop_seg ( nr_seq_segurado_p bigint, cd_usuario_plano_p text, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Definir o grupo de cooperativa do beneficiário, através de seu cartão de identificação.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_empresa_seg_w		varchar(4000);
cd_empresa_w			varchar(4000);
ie_segurado_pea_w		varchar(4000);
qt_posicao_inicial_w		bigint;
qt_posicao_final_w		bigint;
nr_seq_grupo_w			bigint;
nr_seq_coop_grupo_w		bigint;
nr_seq_grupo_pea_w		bigint;
nr_seq_congenere_w		pls_congenere.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.qt_posicao_inicial,
		a.qt_posicao_final,
		a.nr_seq_grupo,
		a.nr_sequencia
	from	pls_cooperativa_grupo a,
		pls_grupo_cooperativa b
	where	b.nr_sequencia 		= a.nr_seq_grupo
	and	a.nr_seq_congenere	= coalesce(nr_seq_congenere_w,a.nr_seq_congenere)
	and	b.ie_situacao		= 'A'
	and	(a.qt_posicao_inicial IS NOT NULL AND a.qt_posicao_inicial::text <> '')
	order by a.qt_posicao_inicial,
		a.qt_posicao_final;

C02 CURSOR FOR
	SELECT	a.cd_empresa
	from	pls_coop_grupo_event_faixa a
	where	a.nr_seq_coop_grupo 	= nr_seq_coop_grupo_w;


BEGIN
if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	begin
	select	coalesce(nr_seq_ops_congenere,nr_seq_congenere)
	into STRICT	nr_seq_congenere_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
	exception
	when others then
		nr_seq_congenere_w := null;
	end;

	open C01;
	loop
	fetch C01 into
		qt_posicao_inicial_w,
		qt_posicao_final_w,
		nr_seq_grupo_w,
		nr_seq_coop_grupo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (qt_posicao_inicial_w IS NOT NULL AND qt_posicao_inicial_w::text <> '') and (qt_posicao_final_w IS NOT NULL AND qt_posicao_final_w::text <> '') then
			cd_empresa_seg_w := substr(cd_usuario_plano_p,qt_posicao_inicial_w,(qt_posicao_final_w - qt_posicao_inicial_w) + 1);

			open C02;
			loop
			fetch C02 into
				cd_empresa_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				if (cd_empresa_w = cd_empresa_seg_w) then

					nr_seq_grupo_pea_w 	:= nr_seq_grupo_w;
					exit;
				end if;
				end;
			end loop;
			close C02;

			if (nr_seq_grupo_pea_w IS NOT NULL AND nr_seq_grupo_pea_w::text <> '') then
				exit;
			end if;
		end if;
		end;
	end loop;
	close C01;

	update	pls_segurado
	set	nr_seq_grupo_coop 	= nr_seq_grupo_pea_w,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia 		= nr_seq_segurado_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_definir_grupo_coop_seg ( nr_seq_segurado_p bigint, cd_usuario_plano_p text, nm_usuario_p text) FROM PUBLIC;

