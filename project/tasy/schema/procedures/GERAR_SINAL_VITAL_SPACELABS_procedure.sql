-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (		nm_sinal_vital	varchar(100), 
				vl_sinal_vital	varchar(100), 
				ds_unidade_medida	varchar(100), 
				ds_lista		varchar(255));


CREATE OR REPLACE PROCEDURE gerar_sinal_vital_spacelabs ( cd_pessoa_fisica_p text, dt_sinal_vital_p text, ds_lista_parametros_p text, ds_lista_parametros2_p text, nm_usuario_p text) AS $body$
DECLARE

type Vetor is table of campos index 	by integer;
Vetor_w			Vetor;

 
 
nr_atendimento_w	bigint;
dt_sinal_vital_w	timestamp;
nr_seq_sinal_vital_w	bigint	:= 0;
ds_sep_w		varchar(100)	:= ';';
nr_pos_separador_w	bigint;
qt_parametros_w		bigint;
qt_contador_w		bigint;
ds_parametros_w		varchar(32000);
i			integer;
ds_lista_aux_w		varchar(255);
ds_sep_bv_w		varchar(30)	:= obter_separador_bv;
nr_seq_monit_resp_w	bigint	:= 0;
nr_seq_monit_hemo_w	bigint	:= 0;
cd_modalidade_w		varchar(15);
ie_respiracao_w		varchar(7);
ds_erro_w		varchar(4000);

 
 
	procedure inserir_sv is 
	;
BEGIN
	if (nr_seq_sinal_vital_w	= 0) then 
 
		select	nextval('atendimento_sinal_vital_seq') 
		into STRICT	nr_seq_sinal_vital_w 
		;
 
		insert into atendimento_sinal_vital(	nr_sequencia, 
							nr_atendimento, 
							dt_sinal_vital, 
							dt_atualizacao, 
							nm_usuario, 
							CD_PESSOA_FISICA, 
							dt_liberacao, 
							ie_importado, 
							ie_integracao) 
				values (	nr_seq_sinal_vital_w, 
							nr_atendimento_w, 
							dt_sinal_vital_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							null, 
							clock_timestamp(), 
							'S', 
							'S');
	end if;
	end;
 
	procedure inserir_resp is 
	begin 
	if (nr_seq_monit_resp_w	= 0) then 
 
		select	nextval('atendimento_monit_resp_seq') 
		into STRICT	nr_seq_monit_resp_w 
		;
 
		insert into ATENDIMENTO_MONIT_RESP(	nr_sequencia, 
							nr_atendimento, 
							DT_MONITORIZACAO, 
							dt_atualizacao, 
							nm_usuario, 
							CD_PESSOA_FISICA, 
							dt_liberacao, 
							ie_importado) 
				values (	nr_seq_monit_resp_w, 
							nr_atendimento_w, 
							dt_sinal_vital_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							null, 
							clock_timestamp(), 
							'S');
	end if;
	end;
 
 
	procedure inserir_hemo is 
	begin 
	if (nr_seq_monit_hemo_w	= 0) then 
 
		select	nextval('atend_monit_hemod_seq') 
		into STRICT	nr_seq_monit_hemo_w 
		;
 
		insert into ATEND_MONIT_HEMOD(	nr_sequencia, 
							nr_atendimento, 
							DT_MONITORACAO, 
							dt_atualizacao, 
							nm_usuario, 
							CD_PESSOA_FISICA, 
							dt_liberacao, 
							ie_importado) 
				values (	nr_seq_monit_hemo_w, 
							nr_atendimento_w, 
							dt_sinal_vital_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							null, 
							clock_timestamp(), 
							'S');
	end if;
	end;
 
 
	procedure atualizar_valor_sv(	nm_tabela_p	varchar2, 
					nm_atributo_p	varchar2, 
					vl_parametro_p	varchar2) is 
	ds_comando_w	varchar2(2000);
	ds_parametros_w	varchar2(2000);
	vl_parametro_w	varchar2(2000);
	begin 
	ds_comando_w	:= 	'	update	'||nm_tabela_p	|| 
				'	set	'||nm_atributo_p||' = :vl_parametro'|| 
				'	where	nr_sequencia	= :nr_sequencia ';
	begin 
	vl_parametro_w	:= vl_parametro_p;
	if	((substr(nm_atributo_p,1,2)	= 'QT') or (substr(nm_atributo_p,1,2)	= 'PR') or (substr(nm_atributo_p,1,2)	= 'VL') or (substr(nm_atributo_p,1,2)	= 'TX')) then 
		vl_parametro_w	:= replace(vl_parametro_w,'.',',');
	end if;
 
	if (nm_tabela_p	= 'ATENDIMENTO_SINAL_VITAL') and (vl_parametro_p IS NOT NULL AND vl_parametro_p::text <> '') and (lower(vl_parametro_p)	<> 'null')then 
		inserir_sv;
		ds_parametros_w:=	'vl_parametro='||vl_parametro_w||ds_sep_bv_w|| 
					'nr_sequencia='||nr_seq_sinal_vital_w||ds_sep_bv_w;
 
		CALL Exec_sql_Dinamico_bv(nm_usuario_p,ds_comando_w,ds_parametros_w);
	elsif (nm_tabela_p	= 'ATENDIMENTO_MONIT_RESP') and (vl_parametro_p IS NOT NULL AND vl_parametro_p::text <> '') and (lower(vl_parametro_p)	<> 'null')then 
		inserir_resp;
		ds_parametros_w:=	'vl_parametro='||vl_parametro_w||ds_sep_bv_w|| 
					'nr_sequencia='||nr_seq_monit_resp_w||ds_sep_bv_w;
 
		CALL Exec_sql_Dinamico_bv(nm_usuario_p,ds_comando_w,ds_parametros_w);
	elsif (nm_tabela_p	= 'ATEND_MONIT_HEMOD') and (vl_parametro_p IS NOT NULL AND vl_parametro_p::text <> '') and (lower(vl_parametro_p)	<> 'null')then 
		inserir_hemo;
		ds_parametros_w:=	'vl_parametro='||vl_parametro_w||ds_sep_bv_w|| 
					'nr_sequencia='||nr_seq_monit_hemo_w||ds_sep_bv_w;
 
		CALL Exec_sql_Dinamico_bv(nm_usuario_p,ds_comando_w,ds_parametros_w);
	end if;
 
	exception 
		when others then 
		ds_erro_w		:= sqlerrm(SQLSTATE);
		 
	end;
 
	end;
begin 
 
begin 
dt_sinal_vital_w := to_date(dt_sinal_vital_p, 'yyyymmddhh24miss');
exception 
	when others then 
	dt_sinal_vital_w	:= clock_timestamp();
end;
select 	max(nr_atendimento) 
into STRICT 	nr_atendimento_w 
from 	atendimento_paciente 
where 	cd_pessoa_fisica = cd_pessoa_fisica_p;
 
 
ds_parametros_w  := ds_lista_parametros_p||ds_lista_parametros2_p;
ds_parametros_w	  := replace(ds_parametros_w,'null','');
i	:= 0;
 
while(length(ds_parametros_w) > 0) loop 
	begin 
	i	:= i+1;
	if (position(';' in ds_parametros_w)	>0) then 
		Vetor_w[i].ds_lista	:= substr(ds_parametros_w,1,position(';' in ds_parametros_w)-1 );
		ds_parametros_w	:= substr(ds_parametros_w,position(';' in ds_parametros_w)+1,40000);
 
	else 
		Vetor_w[i].ds_lista	:=substr(ds_parametros_w,1,length(ds_parametros_w) - 1);
		ds_parametros_w	:= null;
	end if;
 
	end;
end loop;
 
--dbms_output.put_line(Vetor_w.count); 
for j in 1..Vetor_w.count loop 
	begin 
 
	ds_lista_aux_w	:= Vetor_w[j].ds_lista;
 
	Vetor_w[j].nm_sinal_vital	:= substr(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)-1 );
	ds_lista_aux_w	:= substr(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);
	Vetor_w[j].ds_unidade_medida	:= substr(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)- 1 );
	ds_lista_aux_w	:= substr(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);
 
	Vetor_w[j].vl_sinal_vital	:= substr(ds_lista_aux_w,1,4000 );
 
	end;
end loop;
 
if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
 
	for i in 1..Vetor_w.count loop 
		begin 
 
		if (Vetor_w[i].nm_sinal_vital	= 'ART Sys') then 
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PA_SISTOLICA',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ART Dias') then 
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PA_DIASTOLICA',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ART Mean') then 
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_PAM',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ART Pulse') then 
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_FREQ_CARDIACA',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ART Pulse') then 
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_FREQ_CARDIACA',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'ART Pulse Rate') then 
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_FREQ_CARDIACA',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'RESP Rate') then 
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_FREQ_RESP',Vetor_w[i].vl_sinal_vital);
		elsif (Vetor_w[i].nm_sinal_vital	= 'Temp 1') then 
			atualizar_valor_sv('ATENDIMENTO_SINAL_VITAL','QT_TEMP',Vetor_w[i].vl_sinal_vital);
		end if;
		end;
	end loop;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_sinal_vital_spacelabs ( cd_pessoa_fisica_p text, dt_sinal_vital_p text, ds_lista_parametros_p text, ds_lista_parametros2_p text, nm_usuario_p text) FROM PUBLIC;

