-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_resumo_long ( nr_seq_ageint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) is ie_tipo_resumo_w varchar(15) RETURNS bigint AS $body$
DECLARE

  return_w bigint := NULL;
  i RECORD;
BEGIN
  SELECT coalesce(MAX(qt_tempo_jejum), 0)
    INTO STRICT return_w
    FROM (SELECT qt_tempo_jejum
            FROM ageint_exame_adic_item eai,
                 proc_interno           pi
           WHERE eai.nr_seq_item = nr_seq_item_p
             AND pi.nr_sequencia = eai.nr_seq_proc_interno

UNION ALL

          SELECT pi.qt_tempo_jejum
            FROM agenda_integrada_item aii,
                 proc_interno          pi
           WHERE aii.nr_sequencia = nr_seq_item_p
             AND aii.nr_seq_proc_interno = pi.nr_sequencia) alias2;
  RETURN return_w;
END;

FUNCTION obter_tempo_jejum_ageint(nr_seq_agenda_int_p IN NUMBER, dt_agenda_p DATE) RETURN NUMBER IS
  return_w NUMBER := NULL;
BEGIN
SELECT coalesce(MAX(qt_tempo_jejum),0) qt_tempo_jejum
  INTO STRICT return_w
  FROM (SELECT pi.qt_tempo_jejum
          FROM proc_interno pi, agenda_integrada_item aii
LEFT OUTER JOIN ageint_exame_adic_item eai ON (aii.nr_sequencia = eai.nr_seq_item)
WHERE aii.nr_seq_agenda_int = nr_seq_agenda_int_p  AND (pi.nr_sequencia = eai.nr_seq_proc_interno OR
               pi.nr_sequencia = aii.nr_seq_proc_interno) and coalesce(trunc(obter_horario_item_ageint(aii.nr_seq_agenda_cons,
                                     aii.nr_seq_agenda_exame,
                                     aii.nr_sequencia)),dt_agenda_p) = dt_agenda_p ) alias6;

  RETURN return_w;
END;

FUNCTION obter_orient_preparo_ageint(nr_seq_agenda_int_p  IN number,
                                     cd_estabelecimento_p IN number,
									 ds_separador_p  IN varchar2,
									 ie_tipo_orient_p IN varchar2) RETURN CLOB IS

  return_w       CLOB := '';
  nr_row         NUMBER := 0;
  lista_orient_w VARCHAR2(4000) := '';
  --ds_separador_w VARCHAR2(3) := chr(10);
BEGIN

  FOR i IN (SELECT  ds_orientacao_preparo,
                    nr_sequencia AS nr_row,
		    nr_seq_item
              FROM (SELECT aop.nr_sequencia,
                           aopr.nr_seq_orient_preparo,
                           aop.ds_orientacao_preparo,
			                     aii.nr_sequencia nr_seq_item,
                           aopr.nr_seq_apres
                      FROM ageint_orient_preparo    aop,
                           ageint_orient_prep_regra aopr,
                           agenda_integrada_item    aii,
                           agenda_integrada         ai
                     WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo
                       AND coalesce(aopr.nr_seq_proc_interno, aii.nr_seq_proc_interno) = aii.nr_seq_proc_interno
                       and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                       and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                       and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
                       AND coalesce(aopr.cd_estabelecimento, obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame)) =
                           coalesce(obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame),aopr.cd_estabelecimento)
                       AND aii.nr_seq_agenda_int = nr_seq_agenda_int_p
                       AND ai.nr_sequencia = aii.nr_seq_agenda_int
                       AND coalesce(aii.nr_seq_topografia,0) = coalesce(aopr.nr_seq_topografia,coalesce(aii.nr_seq_topografia,0))
                       AND coalesce(ai.ie_tipo_atendimento,0) = coalesce(aopr.ie_tipo_atendimento,coalesce(ai.ie_tipo_atendimento,0))
                       AND aop.ie_situacao = 'A'
                       AND ((aii.nr_seq_agenda_exame IS NOT NULL AND aii.nr_seq_agenda_exame::text <> '') OR (aii.nr_seq_agenda_cons IS NOT NULL AND aii.nr_seq_agenda_cons::text <> '') or aii.ie_tipo_agendamento = 'Q')
                       AND ((ie_tipo_orient_p = 'C' AND aop.ie_tipo_orient = 'C') OR ((ie_tipo_orient_p = 'P') AND ((aop.ie_tipo_orient = 'P') OR (coalesce(aop.ie_tipo_orient::text, '') = ''))))
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_consulta x
                                       WHERE x.nr_sequencia = aii.nr_seq_agenda_cons
                                       AND x.ie_status_agenda = 'C')
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_paciente y
                                       WHERE y.nr_sequencia = aii.nr_seq_agenda_exame
                                       AND y.ie_status_agenda = 'C')

UNION ALL

                    SELECT aop.nr_sequencia,
                           aopr.nr_seq_orient_preparo,
                           aop.ds_orientacao_preparo,
			   aii.nr_sequencia nr_seq_item,
                           aopr.nr_seq_apres
                      FROM ageint_orient_preparo    aop,
                           ageint_orient_prep_regra aopr,
                           agenda_integrada_item    aii,
                           agenda_integrada         ai,
                           ageint_exame_adic_item   aeai                           
                     WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo
                       AND coalesce(aopr.nr_seq_proc_interno, aeai.nr_seq_proc_interno) = aeai.nr_seq_proc_interno
                       and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                       and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                       and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
                       AND coalesce(aopr.cd_estabelecimento, obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame)) =
                           coalesce(obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame),aopr.cd_estabelecimento)
                       AND aii.nr_seq_agenda_int = nr_seq_agenda_int_p
                       AND ai.nr_sequencia = aii.nr_seq_agenda_int
                       AND aii.nr_sequencia = aeai.nr_seq_item
                       AND coalesce(aeai.nr_seq_topografia,0) = coalesce(aopr.nr_seq_topografia,coalesce(aeai.nr_seq_topografia,0))
                       AND coalesce(ai.ie_tipo_atendimento,0) = coalesce(aopr.ie_tipo_atendimento,coalesce(ai.ie_tipo_atendimento,0))
                       AND aop.ie_situacao = 'A'
                       AND ((aii.nr_seq_agenda_exame IS NOT NULL AND aii.nr_seq_agenda_exame::text <> '') OR (aii.nr_seq_agenda_cons IS NOT NULL AND aii.nr_seq_agenda_cons::text <> '') or aii.ie_tipo_agendamento = 'Q')
                       AND ((ie_tipo_orient_p = 'C' AND aop.ie_tipo_orient = 'C') OR ((ie_tipo_orient_p = 'P') AND ((aop.ie_tipo_orient = 'P') OR (coalesce(aop.ie_tipo_orient::text, '') = ''))))
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_consulta x
                                       WHERE x.nr_sequencia = aii.nr_seq_agenda_cons
                                       AND x.ie_status_agenda = 'C')
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_paciente y
                                       WHERE y.nr_sequencia = aii.nr_seq_agenda_exame
                                       AND y.ie_status_agenda = 'C')) alias72
                                       ORDER BY coalesce(nr_seq_apres,999), nr_sequencia) LOOP
    
	IF (obter_se_contido(i.nr_row, lista_orient_w) = 'N') THEN
        return_w := return_w || obter_texto_macro_prep_ageint(i.nr_row, i.nr_seq_item, i.ds_orientacao_preparo, 'N') || ds_separador_p;
        nr_row := i.nr_row;
		
		lista_orient_w := lista_orient_w || ',' || i.nr_row;
    END IF;
  END LOOP;
  return_w := REPLACE(return_w, chr(10), ds_separador_w);
  if (coalesce(return_w::text, '') = '') then
	--O(s) exame(s) nao possui(em) preparo.
	return_w := Wheb_mensagem_pck.get_texto(1051484);
  end if;
  RETURN return_w;
--  RETURN return_w||' nr_seq_agenda_int_p:'||nr_seq_agenda_int_p||' cd_estabelecimento_p:'||cd_estabelecimento_p   ;
END;

FUNCTION obter_ori_pre_ageint_dia(nr_seq_agenda_int_p  IN number,
                                     cd_estabelecimento_p IN number,
									 ds_separador_p  IN varchar2,
								     ie_tipo_orient_p IN varchar2) RETURN CLOB IS
  return_w			CLOB := '';
  nr_row			NUMBER := 0;
  dt_agenda_w		DATE := Trunc(clock_timestamp() - interval '99999 days');
  dt_atual_w		DATE := Trunc(clock_timestamp() - interval '99999 days');
  lista_orient_w	VARCHAR2(4000) := '';

BEGIN

  FOR i IN (SELECT  ds_orientacao_preparo,
                    nr_sequencia AS nr_row,
                    Trunc(horario) dt_agenda,
                    CASE
                      WHEN Length(CONVERT_LONG_TO_VARCHAR2('ds_orientacao_preparo','ageint_orient_preparo','nr_sequencia = '||nr_sequencia)) < 3
                        THEN ''
                      ELSE wheb_mensagem_pck.get_texto(1060338,
                                                'HR_INICIAL='||PKG_DATE_FORMATERS.to_varchar(horario,'shortDate',
                                                                                              wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario)||':') END ds_orientacao_preparo_dia,
		    nr_seq_item
              FROM (SELECT aop.nr_sequencia,
                           aopr.nr_seq_orient_preparo,
                           aop.ds_orientacao_preparo,
                           obter_horario_item_ageint(aii.nr_seq_agenda_cons,
                                     aii.nr_seq_agenda_exame,
                                     aii.nr_sequencia) AS horario,
             		   aii.nr_sequencia nr_seq_item,
                           aopr.nr_seq_apres
                      FROM ageint_orient_preparo    aop,
                           ageint_orient_prep_regra aopr,
                           agenda_integrada_item    aii,
			                     agenda_integrada ai
                       WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo
                       AND coalesce(aopr.nr_seq_proc_interno, aii.nr_seq_proc_interno) = aii.nr_seq_proc_interno
                       and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                       and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                       and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
					   AND coalesce(aopr.cd_estabelecimento, obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame)) =
                           coalesce(obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame),aopr.cd_estabelecimento)
                       AND aii.nr_seq_agenda_int = nr_seq_agenda_int_p
                       AND ai.nr_sequencia = aii.nr_seq_agenda_int
                       AND coalesce(aii.nr_seq_topografia,0) = coalesce(aopr.nr_seq_topografia,coalesce(aii.nr_seq_topografia,0))
                       AND coalesce(ai.ie_tipo_atendimento,0) = coalesce(aopr.ie_tipo_atendimento,coalesce(ai.ie_tipo_atendimento,0))
                       AND aop.ie_situacao = 'A'
                       AND ((aii.nr_seq_agenda_exame IS NOT NULL AND aii.nr_seq_agenda_exame::text <> '') OR (aii.nr_seq_agenda_cons IS NOT NULL AND aii.nr_seq_agenda_cons::text <> '') or aii.ie_tipo_agendamento = 'Q')
                       AND ((ie_tipo_orient_p = 'C' AND aop.ie_tipo_orient = 'C') OR ((ie_tipo_orient_p = 'P') AND ((aop.ie_tipo_orient = 'P') OR (coalesce(aop.ie_tipo_orient::text, '') = ''))))
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_consulta x
                                       WHERE x.nr_sequencia = aii.nr_seq_agenda_cons
                                       AND x.ie_status_agenda = 'C')
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_paciente y
                                       WHERE y.nr_sequencia = aii.nr_seq_agenda_exame
                                       AND y.ie_status_agenda = 'C')
                      
UNION ALL

                      SELECT aop.nr_sequencia,
                             aopr.nr_seq_orient_preparo,
                             aop.ds_orientacao_preparo,
                             obter_horario_item_ageint(aii.nr_seq_agenda_cons,
                                     aii.nr_seq_agenda_exame,
                                     aii.nr_sequencia) AS horario,
			     aii.nr_sequencia nr_seq_item,
                             aopr.nr_seq_apres
                      FROM ageint_orient_preparo    aop,
                           ageint_orient_prep_regra aopr,
                           agenda_integrada_item    aii,
                           agenda_integrada         ai,
                           ageint_exame_adic_item   aeai                           
                       WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo
                       AND coalesce(aopr.nr_seq_proc_interno, aeai.nr_seq_proc_interno) = aeai.nr_seq_proc_interno
                       and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                       and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                       and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
                       AND coalesce(aopr.cd_estabelecimento, obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame)) =
                           coalesce(obter_estab_item_ageint(aii.nr_seq_agenda_cons, aii.nr_seq_agenda_exame),aopr.cd_estabelecimento)
                       AND aii.nr_seq_agenda_int = nr_seq_agenda_int_p
                       AND ai.nr_sequencia = aii.nr_seq_agenda_int
                       AND aii.nr_sequencia = aeai.nr_seq_item
                       AND coalesce(aeai.nr_seq_topografia,0) = coalesce(aopr.nr_seq_topografia,coalesce(aeai.nr_seq_topografia,0))
                       AND coalesce(ai.ie_tipo_atendimento,0) = coalesce(aopr.ie_tipo_atendimento,coalesce(ai.ie_tipo_atendimento,0))
                       AND aop.ie_situacao = 'A'
                       AND ((aii.nr_seq_agenda_exame IS NOT NULL AND aii.nr_seq_agenda_exame::text <> '') OR (aii.nr_seq_agenda_cons IS NOT NULL AND aii.nr_seq_agenda_cons::text <> '') or aii.ie_tipo_agendamento = 'Q')
                       AND ((ie_tipo_orient_p = 'C' AND aop.ie_tipo_orient = 'C') OR ((ie_tipo_orient_p = 'P') AND ((aop.ie_tipo_orient = 'P') OR (coalesce(aop.ie_tipo_orient::text, '') = ''))))
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_consulta x
                                       WHERE x.nr_sequencia = aii.nr_seq_agenda_cons
                                       AND x.ie_status_agenda = 'C')
                       AND NOT EXISTS (SELECT 1
                                       FROM agenda_paciente y
                                       WHERE y.nr_sequencia = aii.nr_seq_agenda_exame
                                       AND y.ie_status_agenda = 'C')) alias79
                       ORDER BY horario, coalesce(nr_seq_apres,999), nr_sequencia) LOOP

	if (dt_atual_w <> i.dt_agenda) then
		dt_atual_w := i.dt_agenda;
		lista_orient_w := '';
	end if;

    IF (obter_se_contido(i.nr_row, lista_orient_w) = 'N') THEN
        IF i.dt_agenda <> dt_agenda_w THEN
          IF return_w <> '' THEN
            return_w := return_w || i.ds_orientacao_preparo_dia || ds_separador_w || ds_separador_w;
          ELSE
            return_w := return_w || ds_separador_w || i.ds_orientacao_preparo_dia || ds_separador_w;
          END IF;
          dt_agenda_w := i.dt_agenda;
        END IF;
        return_w := return_w || obter_texto_macro_prep_ageint(i.nr_row, i.nr_seq_item, i.ds_orientacao_preparo) || ds_separador_p;
        nr_row := i.nr_row;

		lista_orient_w := lista_orient_w || ',' || i.nr_row;
    END IF;
  END LOOP;
  return_w := REPLACE(return_w, chr(10), ds_separador_w);
  if (coalesce(return_w::text, '') = '') then
	--O(s) exame(s) nao possui(em) preparo.
	return_w := Wheb_mensagem_pck.get_texto(1051484);
  end if;
  RETURN return_w;

END;

FUNCTION obter_orient_preparo_item(nr_seq_proc_interno_p IN NUMBER,
                                   cd_estabelecimento_p  IN NUMBER,
                   ds_separador_p  in  varchar2,
		   nr_seq_topografia_p IN NUMBER ,
		   ie_tipo_atendimento_p IN NUMBER ,
		   nr_seq_item_p	in number ) RETURN CLOB IS

  return_w       CLOB := '';
  nr_row         NUMBER := 0;
  --ds_separador_w VARCHAR2(3) := chr(10);
BEGIN

  FOR i IN (SELECT  ds_orientacao_preparo,
                    nr_sequencia AS nr_row
              FROM (SELECT aop.nr_sequencia,
                           aopr.nr_seq_orient_preparo,
                           aop.ds_orientacao_preparo,
                           aopr.nr_seq_apres
                      FROM ageint_orient_preparo    aop,
                           ageint_orient_prep_regra aopr
                     WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo
                     AND coalesce(aopr.nr_seq_proc_interno, nr_seq_proc_interno_p) = nr_seq_proc_interno_p
                     and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                     and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                     and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
                     AND coalesce(aopr.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
		                 AND coalesce(aopr.nr_seq_topografia,coalesce(nr_seq_topografia_p,0)) = coalesce(nr_seq_topografia_p,0)
		                 AND coalesce(aopr.ie_tipo_atendimento,coalesce(ie_tipo_atendimento_p,0)) = coalesce(ie_tipo_atendimento_p,0)
                     AND aop.ie_situacao = 'A'

UNION ALL

                     SELECT aop.nr_sequencia,
                           aopr.nr_seq_orient_preparo,
                           aop.ds_orientacao_preparo,
                           aopr.nr_seq_apres
                     FROM ageint_orient_preparo    aop,
                          ageint_orient_prep_regra aopr,
                          agenda_integrada_item    aii,                          
                          ageint_exame_adic_item   aeai
                     WHERE aop.nr_sequencia = aopr.nr_seq_orient_preparo                      
                      AND aii.nr_sequencia = nr_seq_item_p                      
                      AND aii.nr_sequencia = aeai.nr_seq_item
                      AND coalesce(aopr.nr_seq_proc_interno, aeai.nr_seq_proc_interno) = aeai.nr_seq_proc_interno
                      and ((aopr.cd_categoria = cd_categoria_w) OR (coalesce(aopr.cd_categoria::text, '') = ''))
                      and ((aopr.cd_plano = cd_plano_w) OR (coalesce(aopr.cd_plano::text, '') = ''))
                      and ((aopr.cd_convenio = cd_convenio_w) OR (coalesce(aopr.cd_convenio::text, '') = ''))
                      AND coalesce(aopr.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p                      
                      AND coalesce(aeai.nr_seq_topografia,0) = coalesce(aopr.nr_seq_topografia,coalesce(aeai.nr_seq_topografia,0))
                      AND coalesce(aopr.ie_tipo_atendimento,coalesce(ie_tipo_atendimento_p,0)) = coalesce(ie_tipo_atendimento_p,0)
                      AND aop.ie_situacao = 'A'
                      AND ((aii.nr_seq_agenda_exame IS NOT NULL AND aii.nr_seq_agenda_exame::text <> '') OR (aii.nr_seq_agenda_cons IS NOT NULL AND aii.nr_seq_agenda_cons::text <> '') or aii.ie_tipo_agendamento = 'Q')
                     ) alias43 
                     ORDER BY coalesce(nr_seq_apres,999), nr_sequencia) LOOP
    IF nr_row  <> i.nr_row THEN
        return_w := return_w || obter_texto_macro_prep_ageint(i.nr_row, nr_seq_item_p, i.ds_orientacao_preparo) || ds_separador_p;
        nr_row := i.nr_row;
    END IF;

  END LOOP;

  if (coalesce(return_w::text, '') = '') then
	--O(s) exame(s) nao possui(em) preparo.
	return_w := Wheb_mensagem_pck.get_texto(1051484);
  end if;

  RETURN return_w;
END;

function substituir_macro_cab_rod(ds_texto_p in varchar2, ie_local_chamada_p in varchar2) return varchar2 is

ds_texto_replace_w varchar2(32000);

begin
  ds_texto_replace_w := ds_texto_p;

  if ie_local_chamada_p in ('C', 'T') then

    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@paciente', nm_paciente_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@inicioAgendamento',  dt_inicio_agendamento_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@convenio', ds_convenio_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@nascimento', pkg_date_formaters.to_varchar(date_p => dt_nascimento_w, ds_mask => 'shortDate', cd_estabelcimento_p => cd_estabelecimento_p, nm_usuario_p => nm_usuario_p));
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@categoria', ds_categoria_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@plano', ds_plano_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@telefone', nr_telefone_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@quebra', chr(10));
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@observacao', ds_observacao_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@checklist', ds_item_checklist_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@usuario', cd_pessoa_fisica_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@senha', ds_senha_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@protocoloagenda', nr_seq_ageint_p);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@menordtchegada', pkg_date_formaters.to_varchar(date_p => dt_menor_agendamento_w, ds_mask => 'short', cd_estabelcimento_p => cd_estabelecimento_p, nm_usuario_p => nm_usuario_p));
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@valorexamelab', vl_total_exames_w);

    if (dt_entrega_item_w IS NOT NULL AND dt_entrega_item_w::text <> '') then
      ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@dtentrega', Wheb_mensagem_pck.get_texto(307471)||': ' /*'Data de entrega do laudo: '*/||pkg_date_formaters.to_varchar(date_p => dt_entrega_item_w, ds_mask => 'short', cd_estabelcimento_p => cd_estabelecimento_p, nm_usuario_p => nm_usuario_p));
    else
      ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@dtentrega', null);
    end if;

    if (ds_forma_entrega_laudo_w IS NOT NULL AND ds_forma_entrega_laudo_w::text <> '') then
      ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@formaentrega' , Wheb_mensagem_pck.get_texto(307472)||': ' /*'Forma de entrega do laudo: '*/||ds_forma_entrega_laudo_w);
    else
      ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@formaentrega' , null);
    end if;

    ds_texto_replace_w    := replace_macro_clob(ds_texto_replace_w, '@maiorjejum', ds_tempo_max_jejum_w);
    ds_texto_replace_w    := replace_macro_clob(ds_texto_replace_w, '@ds_end_estab_logado', ds_end_estab_logado_w);
    ds_texto_replace_w    := replace_macro_clob(ds_texto_replace_w, '@ds_estab_logado', ds_estab_logado_w);

    if (ie_orientacao_ageint_item_w = 'S') then
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientacaoPreparoAgeintResumido', obter_orient_preparo_ageint(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'P'));
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', obter_orient_preparo_ageint(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'C'));
    else
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientacaoPreparoAgeintResumido', null);
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', null);
    end if;

    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientAgeIntResumoDia', obter_ori_pre_ageint_dia(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'P'));
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', obter_orient_preparo_ageint(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'C'));
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@prontuario', nr_prontuario_w);
    ds_texto_replace_w := (replace_macro_clob(ds_texto_replace_w, '@orientlab', substr(ds_orient_lab_macro_w,1, 32000 - length(ds_texto_replace_w))));
    ds_texto_replace_w := ds_texto_replace_w || chr(10);

  end if;

  if ie_local_chamada_p in ('R', 'T') then

    ds_texto_replace_w  := (replace_macro_clob(ds_texto_replace_w, '@orientlab', substr(ds_orient_lab_macro_w,1, 32000 - length(ds_texto_replace_w))));
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@paciente', nm_paciente_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@inicioAgendamento',  dt_inicio_agendamento_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@convenio', ds_convenio_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@nascimento', pkg_date_formaters.to_varchar(date_p => dt_nascimento_w, ds_mask => 'shortDate', cd_estabelcimento_p => cd_estabelecimento_p, nm_usuario_p => nm_usuario_p));
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@categoria', ds_categoria_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@plano', ds_plano_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@telefone', nr_telefone_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@quebra', chr(10));
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@observacao', ds_observacao_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@usuario', cd_pessoa_fisica_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@senha', ds_senha_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@protocoloagenda', nr_seq_ageint_p);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@maiorjejum', ds_tempo_max_jejum_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@ds_end_estab_logado', ds_end_estab_logado_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@ds_estab_logado', ds_estab_logado_w);
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@menordtchegada', pkg_date_formaters.to_varchar(date_p => dt_menor_agendamento_w, ds_mask => 'short', cd_estabelcimento_p => cd_estabelecimento_p, nm_usuario_p => nm_usuario_p));
    ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@valorexamelab', vl_total_exames_w);
    if (ie_orientacao_ageint_item_w = 'S') then
      ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@OrientacaoPreparoAgeintResumido', obter_orient_preparo_ageint(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'P'));
      ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', obter_orient_preparo_ageint(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'C'));
    end if;

    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientAgeIntResumoDia', obter_ori_pre_ageint_dia(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'P'));
    ds_texto_replace_w := replace_macro_clob(ds_texto_replace_w, '@OrientConvResumido', obter_orient_preparo_ageint(nr_seq_ageint_p, cd_estabelecimento_p, ds_separador_w, 'C'));

    if (dt_entrega_item_w IS NOT NULL AND dt_entrega_item_w::text <> '') then
      ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@dtentrega', Wheb_mensagem_pck.get_texto(307471)||': ' /*'Data de entrega do laudo: '*/||pkg_date_formaters.to_varchar(date_p => dt_entrega_item_w, ds_mask => 'short', cd_estabelcimento_p => cd_estabelecimento_p, nm_usuario_p => nm_usuario_p));
    else
      ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@dtentrega', null);
    end if;

    if (ds_forma_entrega_laudo_w IS NOT NULL AND ds_forma_entrega_laudo_w::text <> '') then
      ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@formaentrega' , Wheb_mensagem_pck.get_texto(307472)||': ' /*'Forma de entrega do laudo: '*/||ds_forma_entrega_laudo_w);
    else
      ds_texto_replace_w  := replace_macro_clob(ds_texto_replace_w, '@formaentrega' , null);
    end if;

  end if;

  return ds_texto_replace_w;

end;

procedure inserir_resumo_item(nr_seq_ageint_p in number, ds_item_p in varchar2, nm_usuario_p in varchar2) is

begin

  select  nextval('agenda_int_resumo_long_seq')
  into STRICT  nr_seq_resumo_long_w
;

  insert into agenda_int_Resumo_long(nr_sequencia,
    nr_seq_Ageint,
    nr_seq_apres,
    ds_texto,
    nm_usuario,
    dt_atualizacao,
    nm_usuario_nrec,
    dt_atualizacao_nrec)
  values (nr_seq_resumo_long_w,
    nr_seq_ageint_p,
    2,
    ds_item_p,
    nm_usuario_p,
    clock_timestamp(),
    nm_usuario_p,
    clock_timestamp());

end;

begin

select   obter_dados_pf_pj(null, cd_cgc, 'ECM'),
  obter_dados_pf_pj(null, cd_cgc, 'F')
into STRICT  ds_end_estab_logado_w,
  ds_estab_logado_w
from     estabelecimento
where    cd_estabelecimento = cd_estabelecimento_p;

ie_utiliza_formatacao_w := Obter_Param_Usuario(869, 91, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_formatacao_w);
cd_medico_externo_w := Obter_Param_Usuario(869, 84, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_medico_externo_w);
ds_msg_encaixe_w := Obter_Param_Usuario(869, 130, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ds_msg_encaixe_w);
ie_resumo_w := Obter_Param_Usuario(869, 277, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_resumo_w);
ie_utiliza_regra_texto_w := Obter_Param_Usuario(869, 383, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_regra_texto_w);

if (ie_utiliza_formatacao_w = 'S') then
  ds_separador_w  := '\par ';
else
  ds_separador_w  := chr(10);
end if;

if (nr_seq_ageint_p IS NOT NULL AND nr_seq_ageint_p::text <> '') then
  delete  FROM agenda_int_resumo_long
  where  nr_seq_Ageint  = nr_seq_ageint_p;

  begin
  select  a.nm_paciente,
    substr(obter_nome_convenio(a.cd_convenio),1,255),
    a.dt_nascimento,
    substr(obter_categoria_convenio(a.cd_convenio, a.cd_categoria),1,80),
    substr(obter_desc_plano(a.cd_convenio, a.cd_plano),1,80),
    a.nr_telefone,
    a.cd_convenio,
    Ageint_Obter_Data_Chegada(a.nr_sequencia),
    substr(a.ds_observacao,1,255),
    substr(Ageint_obter_checklist(a.nr_sequencia, ds_separador_w),1,32000),
    a.cd_categoria,
    a.cd_plano,
    b.cd_pessoa_fisica,
    b.ds_senha,
    substr(obter_ds_forma_entrega_ageint(nr_seq_ageint_p),1,255),
    ageint_obter_dt_entrega_item(nr_sequencia),
    a.ie_sexo,
    obter_idade(b.dt_nascimento,clock_timestamp(),'A'),
    pkg_date_formaters.to_varchar(a.dt_inicio_agendamento,'short', cd_estabelecimento_p, nm_usuario_p)
  into STRICT  nm_paciente_w,
    ds_convenio_w,
    dt_nascimento_w,
    ds_categoria_w,
    ds_plano_w,
    nr_telefone_w,
    cd_convenio_w,
    dt_chegada_w,
    ds_observacao_w,
    ds_item_checklist_w,
    cd_categoria_w,
    cd_plano_w,
    cd_pessoa_fisica_w,
    ds_senha_w,
    ds_forma_entrega_laudo_w,
    dt_entrega_item_w,
    ie_sexo_w,
    qt_idade_pac_w,
    dt_inicio_agendamento_w
  FROM agenda_integrada a
LEFT OUTER JOIN pessoa_fisica b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica)
WHERE nr_sequencia    = nr_seq_ageint_p;
  exception
    when others then
    --R1aise_a1pplication_e1rror(-20011,'Nao foi possivel gerar o resumo do agendamento. Sequencia do agendamento '||nr_seq_ageint_p||' #@#@');
    CALL Wheb_mensagem_pck.exibir_mensagem_abort(206696,'NR_AGENDAMENTO=' || to_char(nr_seq_ageint_p));
  end;

  for c_01 in C01 loop
    BEGIN

    ie_tipo_resumo_w := c_01.ie_tipo_resumo;
    ds_resumo_w := c_01.ds_resumo_long;
    ie_tipo_agendamento_regra_w := c_01.ie_tipo_agendamento;

    ie_primeiro_exame_w  := 'S';

    ds_tempo_max_jejum_w  := '';
    ds_titulo_orient_lab_w  := Wheb_mensagem_pck.get_texto(307458) /*'Exames Laboratoriais'*/
 || ds_separador_w || ds_separador_w;

    select  max(coalesce(Obter_tempo_padrao_Exame(nr_seq_exame),0))
    into STRICT  qt_tempo_max_jejum_w
    from  ageint_exame_lab
    where  nr_seq_ageint = nr_seq_ageint_p
    and    (dt_prevista IS NOT NULL AND dt_prevista::text <> '');

    if (qt_tempo_max_jejum_w > 0) then
      ds_tempo_max_jejum_w  := Wheb_mensagem_pck.get_texto(307460) || ': ' /*'Jejum necessario: '*/ || qt_tempo_max_jejum_w || ' ' || lower(Wheb_mensagem_pck.get_texto(307462)); -- ' horas';
    else
      ds_tempo_max_jejum_w  := '';
    end if;
	
	SELECT  Min(Obter_Horario_item_Ageint(a.nr_seq_agenda_cons, a.nr_Seq_Agenda_exame, a.nr_Sequencia) -  coalesce(p.qt_min_preparo,0)/1440)    AS dia
	into STRICT 	dt_menor_agendamento_w
	FROM agenda_integrada ai, agenda_integrada_item a
LEFT OUTER JOIN proc_interno p ON (a.nr_seq_proc_interno = p.nr_sequencia)
WHERE a.nr_seq_Agenda_int  = nr_seq_ageint_p and ai.nr_sequencia = a.nr_seq_agenda_int  and ((a.nr_seq_agenda_exame IS NOT NULL AND a.nr_seq_agenda_exame::text <> '') or (a.nr_seq_agenda_cons IS NOT NULL AND a.nr_seq_agenda_cons::text <> '') or a.ie_tipo_agendamento = 'Q') and not exists (	SELECT  1
						from    agenda_consulta x
						where  x.nr_sequencia     = a.nr_seq_agenda_cons
						and    x.ie_status_agenda = 'C') AND not exists (	select  1
						from    agenda_paciente y
						where  y.nr_sequencia     = a.nr_seq_agenda_exame
						and    y.ie_status_agenda = 'C');

    if (ie_tipo_resumo_w  = 'C') then

    	select CASE WHEN coalesce(max(nr_seq_proc_interno)::text, '') = '' THEN  'N'  ELSE 'S' END  
		into STRICT ie_orientacao_ageint_item_w
		from AGENDA_INTEGRADA_ITEM
		where nr_seq_agenda_int = nr_seq_ageint_p;
	
		if (ie_orientacao_ageint_item_w <> 'S') then
			select CASE WHEN coalesce(max(a.nr_seq_proc_interno)::text, '') = '' THEN  'N'  ELSE 'S' END
			into STRICT ie_orientacao_ageint_item_w
			from AGEINT_EXAME_ADIC_ITEM a,
			AGENDA_INTEGRADA_ITEM b
			where a.nr_seq_item = b.nr_sequencia
			and b.nr_seq_agenda_int = nr_seq_ageint_p;
		end if;
	
      ds_cabecalho_w  := ds_resumo_w;

      select   max(obter_prontuario_paciente(a.cd_pessoa_fisica))
      into STRICT     nr_prontuario_w
      from   agenda_integrada a
      where   a.nr_sequencia = nr_seq_ageint_p;

      ds_orient_lab_ww  := '';
      vl_total_exames_w := 0;
      open C07;
      loop
      fetch C07 into
        ds_orient_lab_w,
        nm_exame_w,
		vl_exame_w;
      EXIT WHEN NOT FOUND; /* apply on C07 */
      begin
		vl_total_exames_w := vl_total_exames_w + vl_exame_w;
	    ds_orient_lab_w  := replace(substr(ds_orient_lab_w,1,32000),'',ds_separador_w);
        if (ds_orient_lab_w IS NOT NULL AND ds_orient_lab_w::text <> '') then
          ds_orient_lab_ww := substr(ds_orient_lab_ww || nm_exame_w|| ds_separador_w || ds_orient_lab_w || ds_separador_w || ds_separador_w,1,32000);
        end if;
      end;
      end loop;
      close C07;
      if (ds_orient_lab_ww IS NOT NULL AND ds_orient_lab_ww::text <> '')then
        ds_orient_lab_macro_w  := substr(ds_titulo_orient_lab_w || ds_orient_lab_ww,1,32000);
      end if;


      ds_cabecalho_w := substituir_macro_cab_rod(ds_cabecalho_w, 'C');

    elsif (ie_tipo_resumo_w  = 'R') then
      ds_rodape_w  := ds_resumo_w;

      ds_orient_lab_ww    := '';
      ds_orient_lab_macro_w  := '';
      vl_total_exames_w := 0;
      open C07;
      loop
      fetch C07 into
        ds_orient_lab_w,
        nm_exame_w,
		vl_exame_w;
      EXIT WHEN NOT FOUND; /* apply on C07 */
      begin
	    vl_total_exames_w := vl_total_exames_w + vl_exame_w;
        ds_orient_lab_w  := replace(substr(ds_orient_lab_w,1,32000),'',ds_separador_w);
        if (ds_orient_lab_w IS NOT NULL AND ds_orient_lab_w::text <> '') then
          ds_orient_lab_ww := substr(ds_orient_lab_ww || nm_exame_w|| ds_separador_w || ds_orient_lab_w || ds_separador_w || ds_separador_w,1,32000);
        end if;
      end;
      end loop;
      close C07;
      if (ds_orient_lab_ww IS NOT NULL AND ds_orient_lab_ww::text <> '')then
        ds_orient_lab_macro_w  := substr(ds_titulo_orient_lab_w || ds_orient_lab_ww,1,32000);
      end if;

      ds_rodape_w := substituir_macro_cab_rod(ds_rodape_w, 'R');

    elsif (ie_tipo_resumo_w  = 'I') then
      open C02;
      loop
      fetch C02 into
        nr_seq_item_w,
        dt_agendamento_w,
        ds_item_ageint_w,
        --ds_orient_proc_w,
        ds_orient_pac_w,
        nr_seq_Agenda_cons_w,
        nr_seq_agenda_exame_w,
        vl_item_w,
        ds_regra_w,
        ds_glosa_w,
        dt_entrega_prevista_w,
        nr_min_chegada_prev_w,
        nr_seq_proc_interno_w,
        cd_procedimento_w,
        ie_origem_proced_w,
        ie_Tipo_Agendamento_W,
        ds_orient_anest_w,
        nr_seq_grupo_selec_w,
        ds_orient_prep_proc_w,
        nm_medico_requisitante_w,
        cd_medico_req_w,
        nm_medico_externo_w,
        nr_seq_pend_quimio_w,
        ie_lado_w,
        dt_agenda_w,
        cd_medico_w,
        ds_tipo_agenda_w,
        nr_seq_item_princ_w,
        dt_prevista_item_w,
        nr_seq_item_selec_w,
        ds_autorizacao_w,
        cd_grupo_proced_w,
        cd_espec_proced_w,
        cd_area_proced_w,
	      nr_seq_topografia_w,
	      ie_tipo_atendimento_w,
		    cd_estab_item_w;
      EXIT WHEN NOT FOUND; /* apply on C02 */
        begin

        ds_resumo_w := c_01.ds_resumo_long;
        ie_resumo_unico_w := null;
        qt_registros_area_w := null;

        select max(a.nr_sequencia),
               max(a.nr_seq_area)
        into STRICT nr_seq_resumo_w,
             nr_seq_area_w
        from ageint_regra_resumo a
        where coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
        and a.nr_seq_area = (SELECT b.nr_seq_area
                            from agenda_int_grupo b
                            where b.nr_sequencia = nr_seq_grupo_selec_w);

        if (nr_seq_resumo_w IS NOT NULL AND nr_seq_resumo_w::text <> '') then
        
          for c_08 in C08 loop
          
            ds_resumo_w := c_08.ds_resumo_long;
            ie_resumo_unico_w := c_08.ie_resumo_unico;

          end loop;

          if coalesce(ie_resumo_unico_w, 'N') = 'S' then
            
            select max(nr_seq_area)
            into STRICT qt_registros_area_w
            from (WITH RECURSIVE cte AS (
SELECT regexp_substr(ds_lista_areas_w,'[^,]+', 1, level) nr_seq_area  (regexp_substr(ds_lista_areas_w, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(ds_lista_areas_w, '[^,]+', 1, level))::text <> '')  UNION ALL
SELECT regexp_substr(ds_lista_areas_w,'[^,]+', 1, level) nr_seq_area  (regexp_substr(ds_lista_areas_w, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(ds_lista_areas_w, '[^,]+', 1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
) alias7
            where nr_seq_area = nr_seq_area_w;

            if coalesce(qt_registros_area_w::text, '') = '' then
              ds_resumo_w := substituir_macro_cab_rod(ds_resumo_w, 'T');
              ds_lista_areas_w := ds_lista_areas_w || nr_seq_area_w || ',';
              inserir_resumo_item(nr_seq_ageint_p, ds_resumo_w, nm_usuario_p);
              qt_registros_area_w := 1;
            end if;

          end if;
        ELSE
			ds_resumo_w := substituir_macro_cab_rod(ds_resumo_w, 'T');
        END IF;

        if (coalesce(cd_estab_item_w, 0) = 0) then
          cd_estab_item_w := obter_estabelecimento_ativo;
        end if;

        if coalesce(qt_registros_area_w::text, '') = '' and (coalesce(ie_tipo_agendamento_regra_w,ie_tipo_agendamento_w) = ie_tipo_agendamento_w) then


          select  max(dt_prevista_item)
          into STRICT  dt_recorrencia_w
          from  agenda_integrada_item
          where  nr_seq_item_princ = nr_seq_item_princ_w;


          dt_agenda_trunc_w  := trunc(dt_agenda_w);

          ie_dia_semana_w  := obter_cod_dia_semana(dt_agenda_trunc_w);

          select  max(ds_valor_dominio)
          into STRICT  ds_dia_semana_w
          from  valor_dominio_v
          where  cd_dominio = 35
          and  vl_dominio = ie_dia_semana_w;

          ds_item_w  := '';
          ds_exame_adic_ww := '';
          ds_texto_pri_exame_w  := '';
	  ds_orient_exame_adic_ww := '';
	  ds_orient_com_exame_ww := '';

          if (coalesce(nr_seq_pend_quimio_w::text, '') = '') then

            if (cd_medico_externo_w = cd_medico_req_w) then
              nm_medico_req_w  := nm_medico_externo_w;
            else
              nm_medico_req_w  := nm_medico_requisitante_w;
            end if;

            if (nr_seq_agenda_exame_w IS NOT NULL AND nr_seq_agenda_exame_w::text <> '') then
              select  a.ds_agenda,
                substr(obter_nome_pf(b.cd_medico_exec),1,100),
                a.ds_observacao,
                a.cd_Setor_exclusivo,
                b.nr_reserva,
                coalesce(b.ie_encaixe,'N'),
                b.cd_medico_exec,
                coalesce(Obter_Desc_Sala_Consulta(b.nr_seq_sala), Wheb_mensagem_pck.get_texto(307457) /*'Nao informada'*/
),
                a.cd_estabelecimento,
                a.ds_orientacao,
                a.ds_endereco_agenda
              into STRICT  ds_agenda_w,
                nm_medico_exec_w,
                ds_obs_agenda_w,
                cd_setor_exclusivo_w,
                nr_reserva_w,
                ie_encaixe_w,
                cd_medico_exec_w,
                ds_sala_consulta_w,
                cd_estabelecimento_w,
                ds_orientagenda_w,
                ds_endagenda_w
              from  agenda a,
                agenda_paciente b
              where  a.cd_agenda  = b.cd_agenda
              and  b.nr_sequencia  = nr_seq_agenda_exame_w;

              select   obter_dados_pf_pj(null, cd_cgc, 'ECM'),
                obter_dados_pf_pj(null, cd_cgc, 'F')
              into STRICT  ds_end_estab_agenda_w,
                ds_estab_agenda_w
              from     estabelecimento
              where    cd_estabelecimento = cd_estabelecimento_w;

            elsif (nr_seq_agenda_cons_w IS NOT NULL AND nr_seq_agenda_cons_w::text <> '') then
              select  substr(ageint_obter_desc_agenda(a.cd_agenda),1,255),
                a.ds_observacao,
                a.cd_Setor_exclusivo,
                a.cd_setor_agenda,
                b.nr_reserva,
                coalesce(b.ie_encaixe,'N'),
                b.cd_medico_req,
                substr(obter_nome_pf(b.cd_medico_req),1,100),
                coalesce(Obter_Desc_Sala_Consulta(b.nr_seq_sala), Wheb_mensagem_pck.get_texto(307457) /*'Nao informada'*/
),
                a.cd_estabelecimento,
                coalesce(obter_nome_pf(b.CD_MEDICO_REQ),obter_nome_pf(a.cd_pessoa_fisica)),
                a.ds_orientacao,
                a.ds_endereco_agenda
              into STRICT  ds_agenda_w,
                ds_obs_agenda_w,
                cd_setor_exclusivo_w,
                cd_setor_agenda_w,
                nr_reserva_w,
                ie_encaixe_w,
                cd_medico_exec_w,
                nm_medico_exec_w,
                ds_sala_consulta_w,
                cd_estabelecimento_w,
                nm_medico_exec_w,
                ds_orientagenda_w,
                ds_endagenda_w
              from  agenda a,
                agenda_consulta b
              where  a.cd_agenda  = b.cd_agenda
              and  b.nr_sequencia  = nr_seq_agenda_cons_w;
	
              select max(ds_url_telemedicina), max(ds_url_tele_terc)
              into STRICT ds_url_telemedicina_w, ds_url_tele_terc_w
              from agenda_consulta_adic
              where nr_seq_agenda = nr_seq_agenda_cons_w;

              select   obter_dados_pf_pj(null, cd_cgc, 'ECM'),
                obter_dados_pf_pj(null, cd_cgc, 'F')
              into STRICT  ds_end_estab_agenda_w,
                ds_estab_agenda_w
              from     estabelecimento
              where    cd_estabelecimento = cd_estabelecimento_w;

            end if;

            select  max(ds_texto),
              coalesce(max(ie_rodape),'N')
            into STRICT  ds_Texto_padrao_setor_w,
              ie_rodape_w
            from  ageint_texto_padrao_setor
            where  cd_setor_atendimento  = coalesce(cd_setor_exclusivo_w, cd_setor_agenda_w)
            and  coalesce(cd_estabelecimento, cd_estabelecimento_p)  = cd_estabelecimento_p;

            if (ie_rodape_w  = 'S') then
              ie_rodape_setor_w  := 'S';
              ds_texto_Setor_w  := ds_texto_padrao_setor_w;
              ds_texto_padrao_setor_w  := '';
            end if;

            if (ie_tipo_agendamento_w = 'C') then
              ds_texto_padrao_setor_w  := replace_macro(ds_texto_padrao_setor_w, '@telefone', nr_telefone_w);
            else
              ds_texto_padrao_setor_w  := replace_macro(ds_texto_padrao_setor_w, '@telefone', '');
            end if;

            if (ie_tipo_agendamento_w <> 'C') then
              if (dt_ant_w = dt_agenda_trunc_w) then
                ie_primeiro_exame_w  := 'N';
              end if;
              dt_ant_w := dt_agenda_trunc_w;
            end if;

            --if  (ie_tipo_agendamento_w <> 'C') then
              if (ie_primeiro_exame_w = 'S') then
                  ds_texto_retorno_w  := obter_texto_padrao_resumo(
                        nr_seq_proc_interno_w,
                        cd_procedimento_w,
                        ie_origem_proced_w,
                        cd_estab_item_w,
                        nm_usuario_p,
                        'S',
                        cd_convenio_w,
                        cd_categoria_w,
                        cd_plano_w,
                        nr_seq_grupo_selec_w,
                        nr_seq_item_selec_w,
                        'S',
                        'S',
                        nr_seq_ageint_p,
                        cd_medico_exec_w,
                        ie_tipo_agendamento_w);

                  ds_texto_pri_exame_w  := ds_texto_retorno_w;
              ---else
              ---  ds_texto_pri_exame_w    := '';
              end if;
                ds_texto_retorno_w  := obter_texto_padrao_resumo( nr_seq_proc_interno_w,
                          cd_procedimento_w,
                          ie_origem_proced_w,
                          cd_estab_item_w,
                          nm_usuario_p,
                          'N',
                          cd_convenio_w,
                          cd_categoria_w,
                          cd_plano_w,
                          nr_seq_grupo_selec_w,
                          nr_seq_item_selec_w,
                          'S',
                          'S',
                          nr_seq_ageint_p,
                          cd_medico_exec_w,
                          ie_tipo_agendamento_w);
                ds_texto_padrao_exame_w      :=  ds_texto_retorno_w;
            /*    else
                --ds_texto_pri_exame_w    := '';
                ds_texto_padrao_exame_w    := '';
            end if;*/
            if (ie_tipo_agendamento_w = 'Q') then

              open C05;
              loop
              fetch C05 into
                dt_agenda_quimio_item_w,
                nm_profissional_quimio_w;
              EXIT WHEN NOT FOUND; /* apply on C05 */
                begin
                ds_quimio_item_ww := ds_quimio_item_ww ||to_char(dt_agenda_quimio_item_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))) || ' - ' || Wheb_mensagem_pck.get_texto(307473) ||': ' /*' - Profissional: '*/|| nm_profissional_quimio_w || ds_separador_w;
                ds_quimio_sem_pro_ww := ds_quimio_sem_pro_ww ||to_char(dt_agenda_quimio_item_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))) || ds_separador_w;
                end;
              end loop;
              close C05;

            end if;
                begin
                  select  ds_orientacao
                  into STRICT  Format_obs_prescr_w
                  from  proc_interno_orientacao
                  where  cd_estabelecimento  = cd_estabelecimento_p
                  and  ie_tipo_orientacao  = 'R'
                  and  nr_seq_proc_interno = nr_seq_proc_interno_w;
                exception
                when others then
                  Format_obs_prescr_w := null;
                end;

                begin
                  select  ds_orientacao
                  into STRICT  Format_obs_prescr_estab_age_w
                  from  proc_interno_orientacao
                  where  cd_estabelecimento  = cd_estabelecimento_w
                  and  ie_tipo_orientacao  = 'R'
                  and  nr_seq_proc_interno = nr_seq_proc_interno_w;
                exception
                when others then
                  Format_obs_prescr_estab_age_w := null;
                end;

                begin
                  select  ds_orientacao
                  into STRICT  Format_obs_pac_w
                  from  proc_interno_orientacao
                  where  cd_estabelecimento = cd_estabelecimento_p
                  and  ie_tipo_orientacao = 'C'
                  and  nr_seq_proc_interno = nr_seq_proc_interno_w;
                exception
                when others then
                  Format_obs_pac_w := null;
                end;

                begin
                  select  ds_orientacao
                  into STRICT  Format_obs_pac_estab_age_w
                  from  proc_interno_orientacao
                  where  cd_estabelecimento = cd_estabelecimento_w
                  and  ie_tipo_orientacao = 'C'
                  and  nr_seq_proc_interno = nr_seq_proc_interno_w;
                exception
                when others then
                  Format_obs_pac_estab_age_w := null;
                end;

                begin
                  select  ds_orientacao
                  into STRICT  Format_orient_pre_w
                  from  proc_interno_orientacao
                  where  cd_estabelecimento = cd_estabelecimento_p
                  and  ie_tipo_orientacao = 'P'
                  and  nr_seq_proc_interno = nr_seq_proc_interno_w;
                exception
                when others then
                  Format_orient_pre_w := null;
                end;

                begin
                  select  ds_orientacao
                  into STRICT  Format_orient_pre_estab_age_w
                  from  proc_interno_orientacao
                  where  cd_estabelecimento = cd_estabelecimento_w
                  and  ie_tipo_orientacao = 'P'
                  and  nr_seq_proc_interno = nr_seq_proc_interno_w;
                exception
                when others then
                  Format_orient_pre_estab_age_w := null;
                end;

                begin
                  select  ds_orientacao
                  into STRICT  Format_orient_pac_Ext_w
                  from  proc_interno_orientacao
                  where  cd_estabelecimento = cd_estabelecimento_p
                  and  ie_tipo_orientacao = 'E'
                  and  nr_seq_proc_interno = nr_seq_proc_interno_w;
                exception
                when others then
                  Format_orient_pac_Ext_w := null;
                end;

                begin
                  select  ds_orientacao
                  into STRICT  Format_orient_pac_Ext_est_ag_w
                  from  proc_interno_orientacao
                  where  cd_estabelecimento = cd_estabelecimento_w
                  and  ie_tipo_orientacao = 'E'
                  and  nr_seq_proc_interno = nr_seq_proc_interno_w;
                exception
                when others then
                  Format_orient_pac_Ext_est_ag_w := null;
                end;

                select  coalesce(count(*), 0)
                into STRICT  qt_exames_adic_w
                from  ageint_exame_adic_item
                where  nr_seq_item  = nr_seq_item_w;

                if (qt_exames_adic_w > 0)then

                  open C06;
                  loop
                  fetch C06 into
                    nr_min_cheg_prev_adic_w;
                  EXIT WHEN NOT FOUND; /* apply on C06 */
                    begin
                    if (nr_min_cheg_prev_adic_w > 0)then

                      if (nr_min_cheg_prev_adic_w > nr_min_chegada_prev_w)then
                        nr_min_chegada_prev_w  := nr_min_cheg_prev_adic_w;
                      end if;

                    end if;

                    end;
                  end loop;
                  close C06;

                end if;
                /*Inicio da geracao da orientacao do procedimento*/

                CALL ageint_gerar_orient_proc(0,0,cd_convenio_w,nr_seq_proc_interno_w, null,0, cd_pessoa_fisica_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_item_w, ie_resumo_w);

                begin
                  select   ds_texto
                  into STRICT   ds_orient_proc_w
                  from   agenda_int_resumo_long
                  where  nr_seq_apres = 9
                  and   nr_seq_ageint = nr_seq_item_w;

                  delete   FROM agenda_int_resumo_long
                  where   nr_seq_apres = 9
                  and   nr_seq_ageint = nr_seq_item_w;

                  commit;
                exception
                  when others then
                    ds_orient_proc_w := null;
                end;
                /*Fim da geracao da orientacao do procedimento*/

                ds_item_w  := ds_resumo_w;
                ds_item_w  := replace_macro_clob(ds_item_w, '@agenda', ds_agenda_w);
                if (ie_tipo_agendamento_w = 'C') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@telefone', nr_telefone_w);
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@telefone', '');
                end if;
                ds_item_w  := replace_macro_clob(ds_item_w, '@horario', to_char(dt_agendamento_w, pkg_date_formaters.localize_mask('short', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))));
                ds_item_w  := replace_macro_clob(ds_item_w, '@respautor', ds_autorizacao_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@dtagenda', to_char(dt_agenda_w, pkg_date_formaters.localize_mask('shortDate', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))));
                ds_item_w  := replace_macro_clob(ds_item_w, '@horagenda', to_char(dt_agenda_w, pkg_date_formaters.localize_mask('shortTime', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))));
                ds_item_w  := replace_macro_clob(ds_item_w, '@diasemana', ds_dia_semana_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@medreq', nm_medico_req_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@medico', nm_medico_exec_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@procinterno', nr_seq_proc_interno_w);
            /* NAO ALTERAR  OS ESPACAMENTOS */

            ds_item_w  := replace_macro_clob(ds_item_w, '@orientpac', replace(ds_orient_pac_w,'
',ds_separador_w));--NAO ALTERAR ESSE ESPAcAMENTO
            ds_item_w  := replace_macro_clob(ds_item_w, '@orientexame', replace(coalesce(ds_orient_proc_w,''),'
',ds_separador_w)); --NAO ALTERAR ESSE ESPAcAMENTO
            ds_item_w  := replace_macro_clob(ds_item_w, '@orientanestesia', replace(ds_orient_anest_w,'
',ds_separador_w)); --NAO ALTERAR ESSE ESPAcAMENTO
                ds_item_w  := replace_macro_clob(ds_item_w, '@item', ds_item_Ageint_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@valor', vl_item_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@regra', ds_Regra_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@glosa', ds_glosa_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@dtprevista', dt_entrega_prevista_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@obsagenda', ds_obs_agenda_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@sala', ds_sala_consulta_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@tipoagenda', ds_tipo_agenda_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@textopadraosetor', replace(ds_texto_padrao_setor_w,'
',ds_separador_w));--NAO ALTERAR ESSE ESPAcAMENTO)
                ds_item_w  := replace_macro_clob(ds_item_w, '@textopadraoexame', replace(ds_texto_padrao_exame_w,'
',ds_separador_w));--NAO ALTERAR ESSE ESPAcAMENTO)
                ds_item_w  := replace_macro_clob(ds_item_w, '@dtchegada', to_char(dt_agendamento_w - nr_min_chegada_prev_w/1440, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))));
                ds_item_w  := replace_macro_clob(ds_item_w, '@reserva', nr_reserva_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@protocoloagenda', nr_seq_ageint_p);
                ds_item_w  := replace_macro_clob(ds_item_w, '@lado', ie_lado_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@inicioAgendamento',  dt_inicio_agendamento_w);

                ds_item_w := replace_macro_clob(ds_item_w, '@OrientAgenda',    ds_orientagenda_w);
                ds_item_w := replace_macro_clob(ds_item_w, '@EndAgenda',       ds_endagenda_w);

            ds_item_w  := replace_macro_clob(ds_item_w, '@orientpreparo', replace(ds_orient_prep_proc_w,'
',ds_separador_w)); --NAO ALTERAR ESSE ESPAcAMENTO
                if (ds_quimio_item_ww IS NOT NULL AND ds_quimio_item_ww::text <> '') then
                  ds_item_w    := replace_macro_clob(ds_item_w, '@quimio', ds_quimio_item_ww);
                  ds_quimio_item_ww   := '';
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@quimio', '');
                end if;

                if (ds_quimio_sem_pro_ww IS NOT NULL AND ds_quimio_sem_pro_ww::text <> '') then
                  ds_item_w    := replace_macro_clob(ds_item_w, '@onc_item', ds_quimio_sem_pro_ww);
                  ds_quimio_sem_pro_ww   := '';
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@onc_item', '');
                end if;

                if (ie_encaixe_w = 'S') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@msgencaixe', ds_msg_encaixe_w);
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@msgencaixe', '');
                end if;
                --ds_item_w  := replace(ds_item_w, '@textopriexame', ds_texto_pri_exame_w);
                if (nr_seq_item_princ_w IS NOT NULL AND nr_seq_item_princ_w::text <> '') and (trunc(dt_recorrencia_w) = trunc(dt_agenda_w)) then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@textopriexame', replace(ds_texto_pri_exame_w,'
',ds_separador_w));--NAO ALTERAR ESSE ESPAcAMENTO
                elsif (coalesce(nr_seq_item_princ_w::text, '') = '') and (coalesce(dt_prevista_item_w::text, '') = '') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@textopriexame', replace(ds_texto_pri_exame_w,'
',ds_separador_w));--NAO ALTERAR ESSE ESPAcAMENTO
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@textopriexame', '');
                end if;

                ---Richart---
                if (Format_obs_prescr_w IS NOT NULL AND Format_obs_prescr_w::text <> '') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatacaoObsPrescr', Format_obs_prescr_w);
                  Format_obs_prescr_w   := '';
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatacaoObsPrescr', '');
                end if;

                if (Format_obs_prescr_estab_age_w IS NOT NULL AND Format_obs_prescr_estab_age_w::text <> '') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatObsPrescrEstabAge', Format_obs_prescr_estab_age_w);
                  Format_obs_prescr_estab_age_w   := '';
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatObsPrescrEstabAge', '');
                end if;

                if (Format_obs_pac_w IS NOT NULL AND Format_obs_pac_w::text <> '') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatacaoOrientPac', Format_obs_pac_w);
                  Format_obs_pac_w   := '';
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatacaoOrientPac', '');
                end if;

                if (Format_obs_pac_estab_age_w IS NOT NULL AND Format_obs_pac_estab_age_w::text <> '') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatOrientPacEstabAge', Format_obs_pac_estab_age_w);
                  Format_obs_pac_estab_age_w   := '';
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatOrientPacEstabAge', '');
                end if;

                if (Format_orient_pre_w IS NOT NULL AND Format_orient_pre_w::text <> '') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatacaoOrientPre', Format_orient_pre_w);
                  Format_orient_pre_w   := '';
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatacaoOrientPre', '');
                end if;

                if (Format_orient_pre_estab_age_w IS NOT NULL AND Format_orient_pre_estab_age_w::text <> '') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatOrientPreEstabAge', Format_orient_pre_estab_age_w);
                  Format_orient_pre_estab_age_w   := '';
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatOrientPreEstabAge', '');
                end if;

                if (Format_orient_pac_Ext_w IS NOT NULL AND Format_orient_pac_Ext_w::text <> '') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatacaoOrientExtPre', Format_orient_pac_Ext_w);
                  Format_orient_pac_Ext_w  := '';
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatacaoOrientExtPre', '');
                end if;

                if (Format_orient_pac_Ext_est_ag_w IS NOT NULL AND Format_orient_pac_Ext_est_ag_w::text <> '') then
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatOrientExtPreEstabAg', Format_orient_pac_Ext_est_ag_w);
                  Format_orient_pac_Ext_est_ag_w  := '';
                else
                  ds_item_w  := replace_macro_clob(ds_item_w, '@FormatOrientExtPreEstabAg', '');
                end if;

                ds_item_w  := replace_macro_clob(ds_item_w, '@ds_estab_agenda', ds_estab_agenda_w);
                ds_item_w  := replace_macro_clob(ds_item_w, '@ds_end_estab_agenda', ds_end_estab_agenda_w);
                ds_item_w := replace_macro_clob(ds_item_w, '@OrientacaoPreparoAgeintItem',    obter_orient_preparo_item(nr_seq_proc_interno_w, cd_estabelecimento_w, ds_separador_w, nr_seq_topografia_w, ie_tipo_atendimento_w, nr_seq_item_w));
                ds_item_w := replace_macro_clob(ds_item_w, '@TempoJejumProc',   obter_tempo_jejum_item(nr_seq_item_w));
		ds_item_w := replace_macro_clob(ds_item_w, '@MaiorTempoJejumProc',    obter_tempo_jejum_ageint(nr_seq_ageint_p, trunc(dt_agenda_w)));

                select max(ds)
                into STRICT  ds_setor_executor_w
                from (  SELECT  obter_desc_setor_atend(cd_setor_atendimento) ds
                    from  proc_interno_setor
                    where  nr_seq_proc_interno  = nr_seq_proc_interno_w
					and 	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
                    order by   nr_prioridade,
                          nr_sequencia desc) alias3 LIMIT 1;
                ds_item_w := replace_macro_clob(ds_item_w, '@setor_executor',   ds_setor_executor_w);


                select   max(obter_prontuario_paciente(a.cd_pessoa_fisica))
                into STRICT     nr_prontuario_w
                from   agenda_integrada a
                where   a.nr_sequencia = nr_seq_ageint_p;
                ds_item_w := replace_macro_clob(ds_item_w, '@prontuario',   nr_prontuario_w);


                ---Richart---
          else
            ds_item_w  := ds_resumo_w;

            ds_item_w  := replace_macro_clob(ds_item_w, '@agenda', ds_agenda_w);
            ds_item_w  := replace_macro_clob(ds_item_w, '@horario', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@dtagenda', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@horagenda', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@telefone', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@medreq', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@medico', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@orientpac', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@orientexame', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@orientanestesia', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@item', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@valor', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@regra', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@glosa', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@dtprevista', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@obsagenda', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@textopadraosetor', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@textopadraoexame', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@dtchegada', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@reserva', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@protocoloagenda', nr_seq_ageint_p);
            ds_item_w  := replace_macro_clob(ds_item_w, '@orientpreparo', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@msgencaixe', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@lado', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@textopriexame', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@sala', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@tipoagenda', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@procinterno', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@ds_estab_agenda', '');
            ds_item_w  := replace_macro_clob(ds_item_w, '@ds_end_estab_agenda', '');
            ds_item_w   := replace_macro_clob(ds_item_w, '@setor_executor',   '');
            ds_item_w   := replace_macro_clob(ds_item_w, '@prontuario',   '');
            ds_item_w   := replace_macro_clob(ds_item_w, '@TempoJejumProc', '' );


            open C04;
            loop
            fetch C04 into
              dt_agenda_quimio_w,
              ds_dia_ciclo_w,
              nm_profissional_quimio_w;
            EXIT WHEN NOT FOUND; /* apply on C04 */
              begin
              ds_quimio_ww := ds_quimio_ww || ds_dia_ciclo_w||' '||to_char(dt_agenda_quimio_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))) || ' - ' || Wheb_mensagem_pck.get_texto(307473) ||': ' /*' - Profissional: '*/|| nm_profissional_quimio_w ||ds_separador_w;
              ds_quimio_sem_profis_ww := ds_quimio_sem_profis_ww || ds_dia_ciclo_w||' '||to_char(dt_agenda_quimio_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))) ||ds_separador_w;
              end;
            end loop;
            close C04;

            ds_item_w  := replace_macro_clob(ds_item_w, '@quimio', ds_quimio_ww);
            ds_item_w  := replace_macro_clob(ds_item_w, '@onc_item', ds_quimio_sem_profis_ww);

          end if;

          open C03;
          loop
          fetch C03 into
            ds_exame_adic_w,
            nr_seq_proc_exame_adic_w;
          EXIT WHEN NOT FOUND; /* apply on C03 */
          begin

            select   ds_orientacao_usuario
            into STRICT  ds_orient_exame_adic_w
            from  proc_interno
            where  nr_sequencia = nr_seq_proc_exame_adic_w;

            ds_orient_exame_adic_ww  := ds_orient_exame_adic_ww || ds_orient_exame_adic_w || ds_separador_w;
            ds_orient_com_exame_ww  := ds_orient_com_exame_ww || ds_exame_adic_w|| ds_separador_w || ds_orient_exame_adic_w || ds_separador_w;
            ds_exame_adic_ww := ds_exame_adic_ww || ds_exame_adic_w || ds_separador_w;

          end;
          end loop;
          close C03;

          ds_item_w  := replace_macro_clob(ds_item_w, '@orientacaoexameadic', Replace_Clob(ds_orient_exame_adic_ww,'
',ds_separador_w));--NAO ALTERAR ESSE ESPAcAMENTO
          ds_item_w  := replace_macro_clob(ds_item_w, '@orientacaocomexameadic', Replace_Clob(ds_orient_com_exame_ww,'
',ds_separador_w));--NAO ALTERAR ESSE ESPAcAMENTO
          ds_item_w  := replace_macro_clob(ds_item_w, '@exameadicional', ds_exame_adic_ww);
	        ds_item_w  := replace_macro_clob(ds_item_w, '@URL_TELEMEDICINA', ds_url_telemedicina_w);
          ds_item_w  := replace_macro_clob(ds_item_w, '@urlTelemedicinaExterno', ds_url_tele_terc_w);
          ds_item_w  := replace_macro_clob(ds_item_w, '@usuario', cd_pessoa_fisica_w);
          ds_item_w  := replace_macro_clob(ds_item_w, '@senha', ds_senha_w);
          ds_item_w  := replace_macro_clob(ds_item_w, '@ds_estab_agenda', ds_estab_agenda_w);
          ds_item_w  := replace_macro_clob(ds_item_w, '@ds_end_estab_agenda', ds_end_estab_agenda_w);

          /*Start - rotina maluca para poder inserir os registros*/

          pos_ini_w     := 1;
          indice_w    := 1;
          qt_posicoes_w := trunc(octet_length(ds_item_w)/qt_tamanho_cont_w)+1; --32767
          while indice_w <= qt_posicoes_w loop

            ds_texto_pos_w := substr(ds_item_w,qt_tamanho_cont_w,pos_ini_w);

            inserir_resumo_item(nr_seq_ageint_p, ds_texto_pos_w, nm_usuario_p);

            indice_w   := indice_w + 1;
            pos_ini_w   := pos_ini_w + qt_tamanho_cont_w;
          end loop;
          /*End - rotina maluca para poder inserir os registros*/

        end if;
        end;

      end loop;
      close C02;

    end if;
    end;
  end loop;

  select  nextval('agenda_int_resumo_long_seq')
  into STRICT  nr_seq_resumo_long_w
;

  insert into agenda_int_Resumo_long(nr_sequencia,
    nr_seq_Ageint,
    nr_seq_apres,
    ds_texto,
    nm_usuario,
    dt_atualizacao,
    nm_usuario_nrec,
    dt_atualizacao_nrec)
  values (nr_seq_resumo_long_w,
    nr_seq_ageint_p,
    1,
    ds_cabecalho_w,
    nm_usuario_p,
    clock_timestamp(),
    nm_usuario_p,
    clock_timestamp());


  if (ie_rodape_setor_w  = 'S') and (ds_rodape_w like '%@textopadraosetor%') then
    ds_rodape_w  := ds_Texto_setor_w;
    ds_rodape_w  := replace_macro_clob(ds_rodape_w, '@usuario', cd_pessoa_fisica_w);
    ds_rodape_w  := replace_macro_clob(ds_rodape_w, '@senha', ds_senha_w);
    ds_rodape_w  := replace_macro_clob(ds_rodape_w, '@telefone', nr_telefone_w);
    ds_rodape_w  := replace_macro_clob(ds_rodape_w, '@ds_end_estab_logado', ds_end_estab_logado_w);
    ds_rodape_w  := replace_macro_clob(ds_rodape_w, '@ds_estab_logado', ds_estab_logado_w);
  end if;

  ds_rodape_w  := replace_macro_clob(ds_rodape_w, '@textopadraosetor', '');


  if (ie_utiliza_regra_texto_w = 'S') then

    open C02;
    loop
    fetch C02 into
      c02_w;
    EXIT WHEN NOT FOUND; /* apply on C02 */
      begin
      nr_seq_grupo_selec_w  := c02_w.nr_seq_grupo_selec;

      select  max(cd_medico_exec)
      into STRICT  cd_medico_exec_w
      from  agenda_paciente a,
        agenda_integrada_item b
      where  a.nr_sequencia = b.nr_seq_agenda_exame
      and  b.nr_sequencia = c02_w.nr_sequencia;

      --Regra de texto para procedimentos
      select  max(nr_sequencia)
      into STRICT  nr_seq_regra_texto_proc_w
      from  ageint_regra_texto_proc
      where  ((cd_area_procedimento = c02_w.cd_area_proced) or (coalesce(cd_area_procedimento::text, '') = ''))
      and  ((cd_especialidade = c02_w.cd_espec_proced) or (coalesce(cd_especialidade::text, '') = ''))
      and  ((cd_grupo_proc = c02_w.cd_grupo_proced) or (coalesce(cd_grupo_proc::text, '') = ''))
      and  ((cd_procedimento = c02_w.cd_procedimento) or (coalesce(cd_procedimento::text, '') = ''))
      and  ((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = c02_w.ie_origem_proced) or (coalesce(ie_origem_proced::text, '') = '')))
      and  ((nr_seq_grupo_ageint = c02_w.nr_seq_grupo_selec) or (coalesce(nr_seq_grupo_ageint::text, '') = ''))
      and  ((nr_seq_proc_interno = c02_w.nr_seq_proc_interno) or (coalesce(nr_seq_proc_interno::text, '') = ''))
      and  ((cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = ''))
      and  qt_idade_pac_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999)
      and  ((cd_medico = cd_medico_exec_w) or (coalesce(cd_medico::text, '') = ''))
      and  ((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
      order by 1;

      if (nr_seq_regra_texto_proc_w IS NOT NULL AND nr_seq_regra_texto_proc_w::text <> '') then
        select  ds_texto,
            ageint_obter_resumo_texto_proc(nr_seq_regra_texto_proc_w)
        into STRICT  ds_texto_w,
            ds_titulo_w
        from  ageint_regra_texto_proc
        where  nr_sequencia = nr_seq_regra_texto_proc_w;

        ds_orient_regra_texto_proc_w  := wheb_rtf_pck.get_texto_rtf(ds_texto_w);

        ds_regra_texto_proc_w      := '@regratextoproced' || ds_separador_w;

        ds_regra_texto_proc_w  := replace_macro_clob(ds_regra_texto_proc_w, '@regratextoproced', ds_orient_regra_texto_proc_w);
        if (position('@titulo' in ds_regra_texto_proc_w) > 0) then
          ds_regra_texto_proc_w  := replace_macro_clob(ds_regra_texto_proc_w, '@titulo', ds_titulo_w);
        elsif (position('@Titulo' in ds_regra_texto_proc_w) > 0) then
          ds_regra_texto_proc_w  := replace_macro_clob(ds_regra_texto_proc_w, '@Titulo', ds_titulo_w);
        elsif (position('@TITULO' in ds_regra_texto_proc_w) > 0) then
          ds_regra_texto_proc_w  := replace_macro_clob(ds_regra_texto_proc_w, '@TITULO', ds_titulo_w);
        end if;

        ds_regra_texto_proc_w  := ds_regra_texto_proc_w;

      end if;

      if (nr_seq_grupo_selec_w <> c02_w.nr_seq_grupo_selec) or (coalesce(c02_w.nr_seq_grupo_selec::text, '') = '')then
        ie_inserido_w  := 'N';
      end if;

      if (ds_regra_texto_proc_w IS NOT NULL AND ds_regra_texto_proc_w::text <> '') and (coalesce(ie_inserido_w, 'N') = 'N')then

        select  nextval('agenda_int_resumo_long_seq')
        into STRICT  nr_seq_resumo_long_w
;

        insert into agenda_int_Resumo_long(nr_sequencia,
          nr_seq_Ageint,
          nr_seq_apres,
          ds_texto,
          nm_usuario,
          dt_atualizacao,
          nm_usuario_nrec,
          dt_atualizacao_nrec)
        values (nr_seq_resumo_long_w,
          nr_seq_ageint_p,
          3,
          ds_regra_texto_proc_w,
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp());

        ie_inserido_w  := 'S';

      end if;

      end;
    end loop;
    close C02;
  end if;

  select  nextval('agenda_int_resumo_long_seq')
  into STRICT  nr_seq_resumo_long_w
;

  insert into agenda_int_Resumo_long(nr_sequencia,
    nr_seq_Ageint,
    nr_seq_apres,
    ds_texto,
    nm_usuario,
    dt_atualizacao,
    nm_usuario_nrec,
    dt_atualizacao_nrec)
  values (nr_seq_resumo_long_w,
    nr_seq_ageint_p,
    4,
    ds_rodape_w,
    nm_usuario_p,
    clock_timestamp(),
    nm_usuario_p,
    clock_timestamp());

  ds_texto_pri_exame_w  := '';
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_resumo_long ( nr_seq_ageint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) is ie_tipo_resumo_w varchar(15) FROM PUBLIC;

