-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evolucao_conduta_escala (nr_seq_conduta_p bigint, ds_respostas_p text, nr_Atendimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


qt_reg_w            bigint;
ds_perguntas_w      varchar(32000);
ds_conteudo_w	    varchar(32000);
ds_cabecalho_w	    varchar(32000);
ds_rodape_w		    varchar(255);
nr_tam_fonte_w	    integer;
ds_fonte_w		    varchar(100);
qt_controle_chr_w	bigint;
ds_pos_inicio_rtf_w	bigint;
p_linha_w           varchar(10) := chr(13) || chr(10);

c01 is CURSOR
	with respostas as (WITH RECURSIVE cte AS (
SELECT distinct regexp_substr(ds_respostas_p,'[^;]+',1,level) resp, row_number() OVER () AS id
			
			 (regexp_substr(ds_respostas_p,'[^;]+',1,level) IS NOT NULL AND (regexp_substr(ds_respostas_p,'[^;]+',1,level))::text <> '')  UNION ALL
SELECT distinct regexp_substr(ds_respostas_p,'[^;]+',1,level) resp, row_number() OVER () AS id
			 
			 (regexp_substr(ds_respostas_p,'[^;]+',1,level) IS NOT NULL AND (regexp_substr(ds_respostas_p,'[^;]+',1,level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
),
		perguntas as (select a.ds_pergunta,
					a.ie_resposta,
					a.ie_resposta_ant,
					CASE WHEN coalesce(a.ie_mostrar_mensagem,'N')='S' THEN a.ds_orientacao  ELSE '' END  ds_orientacao,
					CASE WHEN coalesce(a.ie_mostrar_mensagem_negativa,'N')='S' THEN  a.ds_orientacao_negativa  ELSE '' END  ds_orientacao_negativa
			 from pep_conduta_condicao a
			 where a.nr_seq_conduta = nr_seq_conduta_p
			 order by a.nr_seq_ordem)
select p.ds_pergunta, p.ie_resposta,
      CASE WHEN p.ie_resposta='A' THEN  p.ds_orientacao  ELSE CASE WHEN r.resp='S' THEN  p.ds_orientacao  ELSE p.ds_orientacao_negativa END  END  ds_orientacao,
	  CASE WHEN r.resp='S' THEN obter_desc_expressao(719927,'Sim')  ELSE obter_desc_expressao(327114,'Não') END  ds_resposta
from (select row_number() OVER () AS id, p.* from perguntas p) p join respostas r on p.id = r.id;


BEGIN

select count(1)
into STRICT   qt_reg_w
from   TIPO_EVOLUCAO
where  cd_tipo_evolucao = 'CES';

if (qt_reg_w > 0) then

	select '\b '||Obter_Valor_Dominio(1799, a.IE_ESCALA) ||' \b0 : '
	into STRICT   ds_perguntas_w
	from   pep_conduta_escala a, pep_conduta b
	where  a.nr_sequencia = b.nr_seq_conduta_esc
	and    b.nr_sequencia = nr_seq_conduta_p;

	for perguntas in c01 loop
		ds_perguntas_w := ds_perguntas_w || p_linha_w || p_linha_w || obter_desc_expressao(295480,'Pergunta') ||': '|| perguntas.ds_pergunta
			|| p_linha_w || obter_desc_expressao(297781,'Resposta') ||': '|| perguntas.ds_resposta;

		if (perguntas.ds_orientacao <> ' ') then
			ds_perguntas_w := ds_perguntas_w || p_linha_w || obter_desc_expressao(294894,'Orientação') ||': '||perguntas.ds_orientacao;
		end if;
	end loop;

	/*Geração RTF*/

	/*inicio substituir os caracteres chr(13) e chr(10) pelo \par que que representa o enter no rtf*/

	qt_controle_chr_w :=0;

	while(position(chr(13) in ds_perguntas_w) > 0) and (qt_controle_chr_w < 100) loop
		ds_perguntas_w := replace(ds_perguntas_w, chr(13), '\par ');
		qt_controle_chr_w := qt_controle_chr_w + 1;
	end loop;
	qt_controle_chr_w := 0;

	while(position(chr(10) in ds_perguntas_w) > 0) and (qt_controle_chr_w < 100) loop
		ds_perguntas_w := replace(ds_perguntas_w, chr(10), '');
		qt_controle_chr_w := qt_controle_chr_w + 1;
	end loop;

	/*fim substituir os caracteres chr(13) e chr(10) pelo \par que que representa o enter no rtf*/

	/*pega o cabecalho do rtf*/

	ds_cabecalho_w := '{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 Arial;}{\f1\fnil Arial;}}' ||
						'{\colortbl ;\red0\green0\blue0;}' ||
						'\viewkind4\uc1\pard\cf1\lang1046\fs20  \fs16 \f1 ';
	ds_pos_inicio_rtf_w := position('lang' in ds_cabecalho_w) + 8;
	ds_conteudo_w := substr(ds_cabecalho_w, 1, ds_pos_inicio_rtf_w) || 'fs20 ';

	/*acrecenta conteudo texto livre*/

	ds_conteudo_w := ds_conteudo_w || ds_perguntas_w;

	/*acrecenta resto do conteudo do rtf*/

	ds_rodape_w   := '}';
	ds_conteudo_w := ds_conteudo_w || '\par ' || substr(ds_cabecalho_w, ds_pos_inicio_rtf_w, length(ds_cabecalho_w));
	ds_conteudo_w  := ds_conteudo_w || ' ' || ds_rodape_w;

	insert into evolucao_paciente(
		cd_evolucao,
		dt_evolucao,
		ie_tipo_evolucao,
		cd_pessoa_fisica,
		dt_atualizacao,
		nm_usuario,
		nr_atendimento,
		ds_evolucao,
		cd_medico,
		dt_liberacao,
		ie_evolucao_clinica,
		ie_situacao)
	values (nextval('evolucao_paciente_seq'),
		clock_timestamp(),
		OBTER_FUNCAO_USUARIO(nm_usuario_p),
		OBTER_PESSOA_ATENDIMENTO(nr_Atendimento_p,'C'),
		clock_timestamp(),
		nm_usuario_p,
		nr_Atendimento_p,
		ds_conteudo_w,
		Obter_Pessoa_Fisica_Usuario(nm_usuario_p,'C'),
		clock_timestamp(),
		'CES',
		'A');

	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evolucao_conduta_escala (nr_seq_conduta_p bigint, ds_respostas_p text, nr_Atendimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

