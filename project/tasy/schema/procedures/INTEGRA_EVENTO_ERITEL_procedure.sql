-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE integra_evento_eritel ( nr_ramal_p bigint, cd_usuario_p text, cd_evento_p bigint, cd_estabelecimento_p bigint, cd_unidade_basica_p text default null, cd_unidade_compl_p text default null) AS $body$
DECLARE


nm_usuario_w			varchar(15);
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
cd_setor_atendimento_w		integer;
nr_seq_gv_w			bigint;
evt_integ_w			bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_interno_w		bigint;
ie_aguarda_hig_w		varchar(1);
ie_verificar_pac_leito_w	varchar(1);
ie_pac_leito_w			varchar(1) := 'N';
qt_tempo_prev_higien_w	smallint;
ie_status_anterior_isol_w	varchar(1);
ie_status_anterior_hig_w	varchar(3);
nr_seq_unidade_w		bigint;
nr_atendimento_w		bigint;
ie_paciente_isolado_w	varchar(1);
ie_permite_aprov_antes_fim_w	varchar(1);
dt_aprovacao_w		timestamp;
dt_fim_w			timestamp;
ie_local_liberacao_leito_w	varchar(1);

C01 CURSOR FOR
	SELECT	qt_tempo_prev_higien
	from	regra_integracao_eritel
	where	ie_isolamento = ie_status_anterior_isol_w
	and		coalesce(ie_situacao,'A') = 'A'
	order by 1;


BEGIN

Select	max(a.cd_unidade_basica),
	max(a.CD_UNIDADE_COMPL),
	max(a.cd_setor_atendimento)
into STRICT	cd_unidade_basica_w,
	cd_unidade_compl_w,
	cd_setor_atendimento_w	
from	setor_Atendimento b,
	unidade_atendimento a
where	a.nr_ramal = nr_ramal_p
and    	a.ie_situacao = 'A'
and	a.cd_setor_atendimento = b.cd_setor_atendimento
and	b.cd_estabelecimento = cd_estabelecimento_p;

if (coalesce(cd_setor_atendimento_w::text, '') = '') and (cd_unidade_basica_p IS NOT NULL AND cd_unidade_basica_p::text <> '') and (cd_unidade_compl_p IS NOT NULL AND cd_unidade_compl_p::text <> '') then
	begin
		select 	a.nr_seq_interno
		into STRICT	nr_seq_interno_w
		from	setor_Atendimento b,
			unidade_atendimento a
		where 	cd_unidade_basica = cd_unidade_basica_p
		and 	cd_unidade_compl = cd_unidade_compl_p		
		and    	a.ie_situacao = 'A'
		and	a.cd_setor_atendimento = b.cd_setor_atendimento
		and	b.cd_estabelecimento = cd_estabelecimento_p;		
				
		Select	max(a.cd_unidade_basica),
			max(a.CD_UNIDADE_COMPL),
			max(a.cd_setor_atendimento)
		into STRICT	cd_unidade_basica_w,
			cd_unidade_compl_w,
			cd_setor_atendimento_w	
		from	setor_Atendimento b,
			unidade_atendimento a
		where	a.cd_setor_atendimento = b.cd_setor_atendimento
		and	a.nr_seq_interno = nr_seq_interno_w;	
	exception
	when others then
		nr_seq_interno_w := null;
	end;
end if;

Select	max(a.nm_usuario),
	max(b.cd_pessoa_fisica)
into STRICT	nm_usuario_w,
	cd_pessoa_fisica_w
from	usuario a,
	pessoa_fisica b
where 	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
and	b.cd_funcionario	= cd_usuario_p;

select 	coalesce(max(ie_evento_integracao),0)
into STRICT 	evt_integ_w
from 	regra_evento_integr_ramal
where 	ie_empresa_integ = 1
and    	cd_evento = cd_evento_p
and coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p;

/* Regras
	
	1	    Inicio de higienizacao       
	2           Fim de higienizacao           
	3           Inicio de limpeza concorrente  
	4           Fim de limpeza concorrente    
	5           Inicio de limpeza sala cirurig 
	6           Fim de limpeza sala cirurgica  
	7           Chamado manutencao           
	8           Inicio manutencao            
	9           Fim de manutencao            
	10          Aprovar Servico
	*/
ie_verificar_pac_leito_w := obter_param_usuario(3111, 266, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_verificar_pac_leito_w);	
ie_aguarda_hig_w := obter_param_usuario(45, 145, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_aguarda_hig_w);
ie_permite_aprov_antes_fim_w := Obter_param_Usuario(75, 111, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_permite_aprov_antes_fim_w);
ie_local_liberacao_leito_w := Obter_param_Usuario(75, 114, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_local_liberacao_leito_w);

if	((cd_evento_p in (13,14)) or (evt_integ_w > 0 AND evt_integ_w = 1)) then
	begin
	
	if (ie_verificar_pac_leito_w = 'N') then
	
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_pac_leito_w
		from	unidade_atendimento
		where	cd_unidade_basica	= cd_unidade_basica_w
		and	cd_unidade_compl	= cd_unidade_compl_w
		and	cd_setor_atendimento	= cd_setor_atendimento_w
		and	(nr_atendimento IS NOT NULL AND nr_atendimento::text <> '');
		
		if (ie_pac_leito_w = 'S') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(238384);
		end if;
	end if;
	
	SELECT	MAX(nr_seq_interno)
	INTO STRICT  	nr_seq_unidade_w
	FROM  	unidade_atendimento
	WHERE	cd_unidade_basica		= cd_unidade_basica_w
	AND		cd_unidade_compl		= cd_unidade_compl_w
	AND		cd_setor_atendimento	= cd_setor_atendimento_w;
	
	SELECT	MAX(nr_atendimento)
	INTO STRICT	nr_atendimento_w
	FROM	unidade_atend_hist a
	WHERE	a.nr_seq_unidade = nr_seq_unidade_w
	AND		a.dt_historico = (	SELECT 	MAX(x.dt_historico)
								FROM	unidade_atend_hist x
								WHERE	a.nr_seq_unidade = x.nr_seq_unidade
								AND		x.ie_status_unidade <> 'A'
							 );
							
	select	max(ie_paciente_isolado)
	into STRICT	ie_paciente_isolado_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w;
	
	if (ie_paciente_isolado_w = 'S') then
		ie_status_anterior_isol_w	:= 'S';
	else
		ie_status_anterior_isol_w	:= 'N';
	end if;	
	
	open C01;
	loop
	fetch C01 into	
		qt_tempo_prev_higien_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_tempo_prev_higien_w	:= qt_tempo_prev_higien_w;
		end;
	end loop;
	close C01;
		
	Update	Unidade_atendimento
	set	nm_usuario_higienizacao	= nm_usuario_w,
		dt_inicio_higienizacao	= clock_timestamp(),
		dt_higienizacao		 = NULL,
		ie_status_unidade	= 'H',
		nm_usuario		= coalesce(nm_usuario_w,nm_usuario),
		qt_tempo_prev_higien	= coalesce(qt_tempo_prev_higien_w,'')
	where	cd_unidade_basica	= cd_unidade_basica_w
	and	cd_unidade_compl	= cd_unidade_compl_w
	and	cd_setor_atendimento	= cd_setor_atendimento_w;
	
	commit;

	select 	max(b.nr_sequencia)
	into STRICT	nr_seq_gv_w
	from	unidade_atendimento a,
		sl_unid_atend b
	where	trunc(b.dt_prevista) = trunc(clock_timestamp())
	and 	a.cd_setor_atendimento = cd_setor_atendimento_w
	and	a.cd_unidade_basica = cd_unidade_basica_w
	and	a.cd_unidade_compl = cd_unidade_compl_w
	and	b.nr_seq_unidade = a.nr_seq_interno
	and	coalesce(b.dt_inicio::text, '') = '';
	
	if (nr_seq_gv_w > 0) then
	CALL gerar_dados_gestao_servico(nr_seq_gv_w, clock_timestamp(),clock_timestamp(),cd_pessoa_fisica_w,'I','',cd_pessoa_fisica_w,null,null,null,evt_integ_w);
	end if;
	end;
	
elsif	((cd_evento_p = 15) or (evt_integ_w > 0 AND evt_integ_w = 2)) then
	begin
	
	if (coalesce(ie_local_liberacao_leito_w,'A') = 'F') then
		if (ie_verificar_pac_leito_w = 'N') then
		
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_pac_leito_w
			from	unidade_atendimento
			where	cd_unidade_basica		= cd_unidade_basica_w
			and		cd_unidade_compl		= cd_unidade_compl_w
			and		cd_setor_atendimento	= cd_setor_atendimento_w
			and		(nr_atendimento IS NOT NULL AND nr_atendimento::text <> '');
			
			if (ie_pac_leito_w = 'S') then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(238384);
			end if;
		end if;	
			
						
		Update	Unidade_atendimento
		set		nm_usuario_fim_higienizacao	= nm_usuario_w,
				dt_higienizacao				= clock_timestamp(),
				ie_status_unidade			= CASE WHEN coalesce(cd_paciente_reserva,nm_pac_reserva) = NULL THEN  'L'  ELSE 'R' END ,
				nm_usuario					= coalesce(nm_usuario_w,nm_usuario)
		where	cd_unidade_basica			= cd_unidade_basica_w
		and		cd_unidade_compl			= cd_unidade_compl_w
		and		cd_setor_atendimento		= cd_setor_atendimento_w;
		
		commit;


	elsif (coalesce(ie_local_liberacao_leito_w,'A') = 'A') then
	
		Update	Unidade_atendimento
		set		nm_usuario_higienizacao	= nm_usuario_w,
				dt_inicio_higienizacao	= clock_timestamp(),
				dt_higienizacao			 = NULL,
				ie_status_unidade		= 'H',
				nm_usuario				= coalesce(nm_usuario_w,nm_usuario),
				qt_tempo_prev_higien	= coalesce(qt_tempo_prev_higien_w,'')
		where	cd_unidade_basica		= cd_unidade_basica_w
		and		cd_unidade_compl		= cd_unidade_compl_w
		and		cd_setor_atendimento	= cd_setor_atendimento_w
		and		ie_status_unidade		<> 'H';
		
		commit;
		
	end if;	
	
	select 	max(b.nr_sequencia)
	into STRICT	nr_seq_gv_w
	from	unidade_atendimento a,
			sl_unid_atend b
	where	trunc(b.dt_prevista) 	= trunc(clock_timestamp())
	and 	a.cd_setor_atendimento 	= cd_setor_atendimento_w
	and		a.cd_unidade_basica 	= cd_unidade_basica_w
	and		a.cd_unidade_compl 		= cd_unidade_compl_w
	and		b.nr_seq_unidade 		= a.nr_seq_interno
	and		(b.dt_inicio IS NOT NULL AND b.dt_inicio::text <> '')
	and 	coalesce(b.dt_fim::text, '') = '';
	
	if (nr_seq_gv_w > 0) then
		CALL gerar_dados_gestao_servico(nr_seq_gv_w, clock_timestamp(),clock_timestamp(),cd_pessoa_fisica_w,'F','',cd_pessoa_fisica_w,null,null,null,evt_integ_w);
	end if;	
	
	end;

elsif	(evt_integ_w > 0 AND evt_integ_w = 7) then
	Update	Unidade_atendimento
	set	ie_status_unidade	= 'C',
		nm_usuario		= coalesce(nm_usuario_w,nm_usuario)
	where	cd_unidade_basica	= cd_unidade_basica_w
	and	cd_unidade_compl	= cd_unidade_compl_w
	and	cd_setor_atendimento	= cd_setor_atendimento_w
	and	coalesce(nr_atendimento::text, '') = '';

elsif	(evt_integ_w > 0 AND evt_integ_w = 8) then
	Update	Unidade_atendimento
	set	ie_status_unidade	= 'E',
		nm_usuario		= coalesce(nm_usuario_w,nm_usuario)
	where	cd_unidade_basica	= cd_unidade_basica_w
	and	cd_unidade_compl	= cd_unidade_compl_w
	and	cd_setor_atendimento	= cd_setor_atendimento_w
	and	coalesce(nr_atendimento::text, '') = '';

elsif	(evt_integ_w > 0 AND evt_integ_w = 9) then
	

	if (ie_aguarda_hig_w = 'S') then
		Update	Unidade_atendimento
		set	ie_status_unidade	= 'G',
			nm_usuario		= coalesce(nm_usuario_w,nm_usuario)
		where	cd_unidade_basica	= cd_unidade_basica_w
		and	cd_unidade_compl	= cd_unidade_compl_w
		and	cd_setor_atendimento	= cd_setor_atendimento_w
		and	coalesce(nr_atendimento::text, '') = '';
	else
		Update	Unidade_atendimento
		set	ie_status_unidade	= CASE WHEN coalesce(cd_paciente_reserva,nm_pac_reserva) = NULL THEN  'L'  ELSE 'R' END ,
			nm_usuario		= coalesce(nm_usuario_w,nm_usuario)
		where	cd_unidade_basica	= cd_unidade_basica_w
		and	cd_unidade_compl	= cd_unidade_compl_w
		and	cd_setor_atendimento	= cd_setor_atendimento_w
		and	coalesce(nr_atendimento::text, '') = '';
	end if;
	
	commit;
	
	select nr_seq_interno
	into STRICT nr_seq_interno_w
	from unidade_atendimento
	where	cd_unidade_basica    = cd_unidade_basica_w
	and	cd_unidade_compl     = cd_unidade_compl_w
	and 	cd_setor_atendimento = cd_setor_atendimento_w;

	CALL gerar_higienizacao_leito_unid(clock_timestamp(), nm_usuario_w,cd_estabelecimento_p, 'FM', nr_seq_interno_w, null);		

elsif	((evt_integ_w > 0) and (evt_integ_w in (3,5))) then
	begin
	select max(b.nr_sequencia)
	into STRICT	nr_seq_gv_w
	from	unidade_atendimento a,
		sl_unid_atend b
	where	trunc(b.dt_prevista) = trunc(clock_timestamp())
	and 	a.cd_setor_atendimento = cd_setor_atendimento_w
	and	a.cd_unidade_basica = cd_unidade_basica_w
	and	a.cd_unidade_compl = cd_unidade_compl_w
	and	b.nr_seq_unidade = a.nr_seq_interno
	and	coalesce(b.dt_inicio::text, '') = ''
	and 	coalesce(b.dt_fim::text, '') = ''
	and dt_prevista =(
		SELECT 	min(b.dt_prevista)
		from	unidade_atendimento a,
			sl_unid_atend b
		where	trunc(b.dt_prevista) = trunc(clock_timestamp())
		and 	a.cd_setor_atendimento = cd_setor_atendimento_w
		and	a.cd_unidade_basica = cd_unidade_basica_w
		and	a.cd_unidade_compl = cd_unidade_compl_w
		and	b.nr_seq_unidade = a.nr_seq_interno
		and	coalesce(b.dt_inicio::text, '') = ''
		and 	coalesce(b.dt_fim::text, '') = '');
	
	if (nr_seq_gv_w > 0) then
	CALL gerar_dados_gestao_servico(nr_seq_gv_w, clock_timestamp(),clock_timestamp(),cd_pessoa_fisica_w,'I','',cd_pessoa_fisica_w,null,null,null,evt_integ_w);
	end if;
	end;

elsif	((evt_integ_w > 0) and (evt_integ_w in (4,6))) then
	begin
	select 	max(b.nr_sequencia)
	into STRICT	nr_seq_gv_w
	from	unidade_atendimento a,
		sl_unid_atend b
	where	trunc(b.dt_prevista) = trunc(clock_timestamp())
	and 	a.cd_setor_atendimento = cd_setor_atendimento_w
	and	a.cd_unidade_basica = cd_unidade_basica_w
	and	a.cd_unidade_compl = cd_unidade_compl_w
	and	b.nr_seq_unidade = a.nr_seq_interno
	and	(b.dt_inicio IS NOT NULL AND b.dt_inicio::text <> '')
	and 	coalesce(b.dt_fim::text, '') = '';
	
	if (nr_seq_gv_w > 0) then
	CALL gerar_dados_gestao_servico(nr_seq_gv_w, clock_timestamp(),clock_timestamp(),cd_pessoa_fisica_w,'F','',cd_pessoa_fisica_w,null,null,null,evt_integ_w);
	end if;
	end;	
	
elsif ((cd_evento_p = 16) or (evt_integ_w > 0 AND evt_integ_w = 10)) then

	select 	max(b.dt_fim),
			max(b.dt_aprovacao),
			max(nr_sequencia)
	into STRICT	dt_fim_w,
			dt_aprovacao_w,
			nr_seq_gv_w
	from	unidade_atendimento a,
			sl_unid_atend b
	where	trunc(b.dt_prevista) = trunc(clock_timestamp())
	and 	a.cd_setor_atendimento = cd_setor_atendimento_w
	and		a.cd_unidade_basica = cd_unidade_basica_w
	and		a.cd_unidade_compl = cd_unidade_compl_w
	and		b.nr_seq_unidade = a.nr_seq_interno
	and		(b.dt_inicio IS NOT NULL AND b.dt_inicio::text <> '');
	
	if 	((ie_permite_aprov_antes_fim_w = 'N') and (dt_aprovacao_w IS NOT NULL AND dt_aprovacao_w::text <> '') and (dt_aprovacao_w < dt_fim_w)) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(728462, 'DS_DATA_MENOR=' || obter_desc_expressao(286713) || 
								';DS_DATA_MAIOR=' || obter_desc_expressao(286879) || 
								';NR_PARAMETRO=111'); -- Data de aprovacao nao pode ser inferior a Data fim Parametro [111].
	end if;
	
	if (coalesce(ie_local_liberacao_leito_w,'A') = 'A') then
		if (ie_verificar_pac_leito_w = 'N') then
		
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_pac_leito_w
			from	unidade_atendimento
			where	cd_unidade_basica		= cd_unidade_basica_w
			and		cd_unidade_compl		= cd_unidade_compl_w
			and		cd_setor_atendimento	= cd_setor_atendimento_w
			and		(nr_atendimento IS NOT NULL AND nr_atendimento::text <> '');
			
			if (ie_pac_leito_w = 'S') then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(238384);
			end if;
		end if;	
			
		Update	Unidade_atendimento
		set		nm_usuario_fim_higienizacao	= nm_usuario_w,
				dt_higienizacao				= clock_timestamp(),
				ie_status_unidade			= CASE WHEN coalesce(cd_paciente_reserva,nm_pac_reserva) = NULL THEN  'L'  ELSE 'R' END ,
				nm_usuario					= coalesce(nm_usuario_w,nm_usuario)
		where	cd_unidade_basica			= cd_unidade_basica_w
		and		cd_unidade_compl			= cd_unidade_compl_w
		and		cd_setor_atendimento		= cd_setor_atendimento_w;
		
		commit;

		select 	max(b.nr_sequencia)
		into STRICT	nr_seq_gv_w
		from	unidade_atendimento a,
				sl_unid_atend b
		where	trunc(b.dt_prevista) 	= trunc(clock_timestamp())
		and 	a.cd_setor_atendimento 	= cd_setor_atendimento_w
		and		a.cd_unidade_basica 	= cd_unidade_basica_w
		and		a.cd_unidade_compl 		= cd_unidade_compl_w
		and		b.nr_seq_unidade 		= a.nr_seq_interno
		and		(b.dt_inicio IS NOT NULL AND b.dt_inicio::text <> '')
		and 	coalesce(b.dt_fim::text, '') = '';
		
		if (nr_seq_gv_w > 0) then
		CALL gerar_dados_gestao_servico(nr_seq_gv_w, clock_timestamp(),clock_timestamp(),cd_pessoa_fisica_w,'F','',cd_pessoa_fisica_w,null,null,null,evt_integ_w);
		end if;
	elsif (coalesce(ie_local_liberacao_leito_w,'A') = 'F') then
		if (nr_seq_gv_w > 0) then
			CALL gerar_dados_gestao_servico(nr_seq_gv_w, clock_timestamp(),clock_timestamp(),cd_pessoa_fisica_w,'V','',cd_pessoa_fisica_w,null,null,null,evt_integ_w);
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE integra_evento_eritel ( nr_ramal_p bigint, cd_usuario_p text, cd_evento_p bigint, cd_estabelecimento_p bigint, cd_unidade_basica_p text default null, cd_unidade_compl_p text default null) FROM PUBLIC;

