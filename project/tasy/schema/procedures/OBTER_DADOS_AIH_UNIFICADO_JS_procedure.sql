-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_aih_unificado_js ( nr_atendimento_p bigint, nm_usuario_p text, cd_orgao_emissor_aih_p INOUT text, cd_medico_autorizador_p INOUT text, cd_medico_solic_p INOUT text, cd_medico_responsavel_p INOUT text, cd_carater_internacao_p INOUT text, dt_entrada_p INOUT timestamp, cd_cid_principal_p INOUT text, cd_cid_secundario_p INOUT text, nr_anterior_aih_p INOUT bigint, cd_procedimento_solic_p INOUT bigint, cd_motivo_cobranca_p INOUT bigint) AS $body$
DECLARE

 
cd_medico_autorizador_w		varchar(10);
cd_estabelecimento_w		smallint;
cd_orgao_emissor_aih_w		varchar(10);
cd_medico_solic_w		varchar(10);
cd_medico_responsavel_w		varchar(10);
cd_carater_internacao_w		varchar(2);
dt_entrada_w			timestamp;
cd_cid_principal_w		varchar(10);
cd_cid_secundario_w		varchar(10);
nr_anterior_aih_w		bigint;
cd_procedimento_solic_w		bigint;
cd_motivo_cobranca_w		smallint;
ie_tipo_medico_solic_w		varchar(1);
ie_tipo_medico_resp_w		varchar(1);
ie_data_emissao_w		varchar(1);
ie_atualiza_cid_w		varchar(1);
ie_aih_anterior_w		varchar(1);
ie_proc_solic_w			varchar(1);
ie_motivo_alta_w		varchar(1);


BEGIN 
 
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
 
ie_tipo_medico_solic_w := obter_param_usuario(1123, 9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_medico_solic_w);
ie_tipo_medico_resp_w := obter_param_usuario(1123, 10, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_medico_resp_w);
ie_data_emissao_w := obter_param_usuario(1123, 15, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_data_emissao_w);
ie_atualiza_cid_w := obter_param_usuario(1123, 52, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_cid_w);
ie_aih_anterior_w := obter_param_usuario(1123, 69, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_aih_anterior_w);
ie_proc_solic_w := obter_param_usuario(1123, 70, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_proc_solic_w);
ie_motivo_alta_w := obter_param_usuario(1123, 116, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_motivo_alta_w);
 
 
if (coalesce(nr_atendimento_p,0) > 0)then 
	begin 
	 
	SELECT * FROM sus_atualiza_aih_dados(nr_atendimento_p, cd_medico_autorizador_w, cd_orgao_emissor_aih_w) INTO STRICT cd_medico_autorizador_w, cd_orgao_emissor_aih_w;
	cd_medico_solic_w	:= sus_obter_tipomedico_aih(nr_atendimento_p, ie_tipo_medico_solic_w);
	 
	if (ie_tipo_medico_resp_w <> 'S') then 
		cd_medico_responsavel_w := sus_obter_tipomedico_aih(nr_atendimento_p,ie_tipo_medico_resp_w);
	else 
		cd_medico_responsavel_w := cd_medico_solic_w;	
	end if;
	 
	select  max(ie_carater_inter_sus) 
	into STRICT	 cd_carater_internacao_w 
	from   atendimento_paciente 
	where  nr_atendimento = nr_atendimento_p;
		 
	 
	if (ie_data_emissao_w = 'S')then 
		 
		select 	dt_entrada 
		into STRICT	dt_entrada_w 
		from 	atendimento_paciente 
		where 	nr_atendimento = nr_atendimento_p;
	end if;
	 
	if (ie_atualiza_cid_w = 'S')then 
		begin 
		 
		select 	max(cd_doenca) 
		into STRICT	cd_cid_principal_w 
		from 	diagnostico_doenca 
		where 	nr_atendimento = nr_atendimento_p 
		and 	ie_classificacao_doenca = 'P';
		 
		select 	max(cd_doenca) 
		into STRICT	cd_cid_secundario_w 
		from 	diagnostico_doenca 
		where 	nr_atendimento = nr_atendimento_p 
		and 	ie_classificacao_doenca = 'S';
		 
		end;
	end if;
	 
	if (ie_aih_anterior_w = 'S')then 
		 
		select 	max(nr_aih) 
		into STRICT	nr_anterior_aih_w 
		from 	sus_aih_unif 
		where 	nr_atendimento = nr_atendimento_p;
	end if;
	 
	if (ie_proc_solic_w = 'S')then 
		 
		select 	max(cd_procedimento) 
		into STRICT	cd_procedimento_solic_w 
		from 	procedimento_paciente a 
		where 	nr_atendimento = nr_atendimento_p 
		and 	Sus_Obter_TipoReg_Proc(a.cd_procedimento, a.ie_origem_proced, 'C', 2) = 3 
		and 	not exists ( 	SELECT  1 
					from 	sus_aih_unif x 
					where x.nr_interno_conta = a.nr_interno_conta);
	end if;
	 
	if (ie_motivo_alta_w = 'S')then 
		 
		select	max(b.cd_motivo_alta_sus) 
		into STRICT	cd_motivo_cobranca_w 
		from	atendimento_paciente a, 
			motivo_alta b 
		where	a.nr_atendimento = nr_atendimento_p 
		and	a.cd_motivo_alta = b.cd_motivo_alta;
	end if;
	 
	end;
end if;
 
cd_medico_autorizador_p	:= cd_medico_autorizador_w;
cd_orgao_emissor_aih_p	:= cd_orgao_emissor_aih_w;
cd_medico_solic_p	:= cd_medico_solic_w;
cd_medico_responsavel_p	:= cd_medico_responsavel_w;
cd_carater_internacao_p	:= cd_carater_internacao_w;
dt_entrada_p		:= dt_entrada_w;
cd_cid_principal_p	:= cd_cid_principal_w;
cd_cid_secundario_p	:= cd_cid_secundario_w;
nr_anterior_aih_p	:= nr_anterior_aih_w;
cd_procedimento_solic_p	:= cd_procedimento_solic_w;
cd_motivo_cobranca_p	:= cd_motivo_cobranca_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_aih_unificado_js ( nr_atendimento_p bigint, nm_usuario_p text, cd_orgao_emissor_aih_p INOUT text, cd_medico_autorizador_p INOUT text, cd_medico_solic_p INOUT text, cd_medico_responsavel_p INOUT text, cd_carater_internacao_p INOUT text, dt_entrada_p INOUT timestamp, cd_cid_principal_p INOUT text, cd_cid_secundario_p INOUT text, nr_anterior_aih_p INOUT bigint, cd_procedimento_solic_p INOUT bigint, cd_motivo_cobranca_p INOUT bigint) FROM PUBLIC;

