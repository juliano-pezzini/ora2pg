-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_integrar_rec_glosa_prot (nr_seq_rec_glosa_lote_p pls_rec_glosa_lote.nr_sequencia%type, nr_seq_rec_glosa_prot_p pls_rec_glosa_protocolo.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_rec_glosa_conta_w		pls_rec_glosa_conta.nr_sequencia%type;
nr_seq_conta_w				pls_conta.nr_sequencia%type;
nr_seq_lote_w				pls_rec_glosa_lote.nr_sequencia%type;
nr_seq_proc_glosa_w			pls_rec_glosa_proc.nr_sequencia%type;
nr_seq_mat_glosa_w			pls_rec_glosa_mat.nr_sequencia%type;
vl_glosa_w				pls_rec_glosa_conta_imp.vl_total_recursado%type;
qt_rec_glosa_tiss_w			bigint;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;
ie_processo_analise_recurso_w		pls_parametros_rec_glosa.ie_processo_analise_recurso%type;

c01 CURSOR(	nr_seq_lote_cp			pls_rec_glosa_lote.nr_sequencia%type,
		nr_seq_rec_glosa_prot_cp	pls_rec_glosa_protocolo.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		dt_apresentacao_lote
	from	pls_rec_glosa_protocolo
	where	nr_seq_lote			= nr_seq_lote_cp
	
union

	SELECT	nr_sequencia,
		dt_apresentacao_lote
	from	pls_rec_glosa_protocolo
	where	nr_sequencia			= nr_seq_rec_glosa_prot_cp;

c02 CURSOR(nr_seq_protocolo_cp		pls_rec_glosa_protocolo.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	pls_rec_glosa_prot_cta_imp
	where	nr_seq_protocolo		= nr_seq_protocolo_cp;

c03 CURSOR(nr_seq_protocolo_cta_cp	pls_rec_glosa_prot_cta_imp.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_conta,
		a.ds_justificativa_prest,
		a.cd_guia,
		a.cd_guia_prestador,
		a.ds_senha
	from	pls_rec_glosa_conta_imp a
	where	a.nr_seq_protocolo_cta		= nr_seq_protocolo_cta_cp;

c04 CURSOR(nr_seq_conta_imp_cp		pls_rec_glosa_conta_imp.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_conta_proc,
		a.vl_recursado vl_glosa,
		a.cd_dente,
		a.cd_regiao_boca,
		a.cd_face_dente,
		a.ds_justificativa_prest,
		a.dt_realizacao,
		a.dt_fim,
		a.cd_procedimento,
		a.nr_seq_grau_partic,
		a.cd_glosa_recursada,
		a.nr_seq_item_tiss
	from	pls_rec_glosa_proc_imp a,
		pls_conta_proc b
	where	a.nr_seq_conta_proc	= b.nr_sequencia
	and	a.nr_seq_conta_imp	= nr_seq_conta_imp_cp;

c05 CURSOR(nr_seq_conta_imp_cp		pls_rec_glosa_conta_imp.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_material,
		a.vl_recursado vl_glosa,
		a.ds_justificativa_prest,
		a.dt_realizacao,
		a.cd_material,
		a.cd_glosa_recursada,
		a.nr_seq_item_tiss
	from	pls_rec_glosa_mat_imp a
	where	a.nr_seq_conta_imp	= nr_seq_conta_imp_cp;
	
	
c06 CURSOR(	nr_seq_conta_imp_cp_p		pls_rec_glosa_conta_imp.nr_sequencia%type,
		nr_seq_proc_imp_p		pls_rec_glosa_glosas_imp.nr_seq_proc_imp%type,
		nr_seq_mat_imp_p		pls_rec_glosa_glosas_imp.nr_seq_mat_imp%type) FOR
	SELECT	nr_sequencia,
		pls_obter_seq_motivo_glosa(cd_glosa) nr_seq_motivo_glosa
	from	pls_rec_glosa_glosas_imp
	where	nr_seq_conta_imp	= nr_seq_conta_imp_cp_p
	and	coalesce(nr_seq_mat_imp::text, '') = ''
	and	coalesce(nr_seq_proc_imp::text, '') = ''
	
union all

	SELECT	nr_sequencia,
		pls_obter_seq_motivo_glosa(cd_glosa) nr_seq_motivo_glosa
	from	pls_rec_glosa_glosas_imp
	where	nr_seq_conta_imp	= nr_seq_conta_imp_cp_p
	and	nr_seq_proc_imp 	= nr_seq_proc_imp_p
	
union all

	select	nr_sequencia,
		pls_obter_seq_motivo_glosa(cd_glosa) nr_seq_motivo_glosa
	from	pls_rec_glosa_glosas_imp
	where	nr_seq_conta_imp	= nr_seq_conta_imp_cp_p
	and	nr_seq_mat_imp 		= nr_seq_mat_imp_p;
	
C07 CURSOR(nr_seq_protocolo_cp		pls_rec_glosa_protocolo.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	pls_rec_glosa_conta
	where	nr_seq_protocolo = nr_seq_protocolo_cp;
	
procedure verifica_qtdes_itens( nr_seq_conta_p	pls_conta.nr_sequencia%type) is

ds_log_call_w	varchar(1500);
ds_log_w 	varchar(4000);

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(vl_glosa, 0) vl_glosa,
	       (	SELECT 	sum(coalesce(x.vl_recursado, 0))
			from	pls_rec_glosa_proc x
			where	x.nr_seq_conta_proc = a.nr_sequencia	
			and 	x.ie_status in ('1','2','3')
		) vl_recursado_integrado,
		(	select 	sum(coalesce(x.vl_acatado, 0))
			from	pls_rec_glosa_proc x
			where	x.nr_seq_conta_proc = a.nr_sequencia	
			and 	x.ie_status in ('1','2','3')
		) vl_acatado,
		(
			select	coalesce(sum(y.vl_recursado),0)
			from	pls_rec_glosa_proc_imp y
			where	y.nr_seq_conta_proc = a.nr_sequencia
			and	not exists (	select	1
						from	pls_rec_glosa_proc x
						where	x.nr_seq_conta_proc_imp = y.nr_sequencia)
		) vl_recursado_importacao	
	from	pls_conta_proc a
	where	a.nr_seq_conta = nr_seq_conta_p
	;
	
C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(vl_glosa, 0) vl_glosa,
	       (	SELECT 	sum(coalesce(x.vl_recursado, 0))
			from	pls_rec_glosa_mat x
			where	x.nr_seq_conta_mat = a.nr_sequencia	
			and 	x.ie_status in ('1','2','3')
		) vl_recursado_integrado,
		(	select 	sum(coalesce(x.vl_acatado, 0))
			from	pls_rec_glosa_mat x
			where	x.nr_seq_conta_mat = a.nr_sequencia	
			and 	x.ie_status in ('1','2','3')
		) vl_acatado,
		(
			select	coalesce(sum(y.vl_recursado),0)
			from	pls_rec_glosa_mat_imp y
			where	y.nr_seq_material = a.nr_sequencia
			and	not exists (	select	1
						from	pls_rec_glosa_mat x
						where	x.nr_seq_conta_mat_imp = y.nr_sequencia)
		) vl_recursado_importacao	
	from	pls_conta_mat a
	where	a.nr_seq_conta = nr_seq_conta_p;
	
BEGIN
		
	ds_log_call_w := substr(	' Funcao ativa : '|| obter_funcao_ativa || chr(13) ||chr(10)||
							' CallStack: '|| chr(13) || chr(10)|| dbms_utility.format_call_stack,1,1500);
	

	for r_c01_w in C01 loop
	
		ds_log_w := ' vl rec integrado = '||r_c01_w.vl_recursado_integrado||' vl acatado = '||r_c01_w.vl_acatado||
			' vl rec importacao= '||r_c01_w.vl_recursado_importacao||' vl glosa origem = '||r_c01_w.vl_glosa;
		ds_log_w := ds_log_w ||' -> '||ds_log_call_w;
		
		--nr_seq_conta, nr_seq_conta_proc, nr_seq_conta_mat referem-se aos registros da pls_conta, pls_conta_proc e pls_conta_mat
		insert into pls_rec_glosa_item_log(nr_sequencia, nr_seq_conta, nr_seq_conta_proc, nr_seq_conta_mat, ds_log,
			dt_atualizacao, dt_atualizacao_nrec, nm_usuario, nm_Usuario_nrec)
		values ( nextval('pls_rec_glosa_item_log_seq'), nr_seq_conta_p, r_c01_w.nr_sequencia, null, ds_log_w,
			clock_timestamp(), clock_timestamp(), nm_Usuario_p, nm_usuario_p);
	
	end loop;

	for r_c02_w in C02 loop
	
		ds_log_w := ' vl rec integrado = '||r_c02_w.vl_recursado_integrado||' vl acatado = '||r_c02_w.vl_acatado||
		' vl rec importacao= '||r_c02_w.vl_recursado_importacao||' vl glosa origem = '||r_c02_w.vl_glosa;
		ds_log_w := ds_log_w ||' -> '||ds_log_call_w;
	
		--nr_seq_conta, nr_seq_conta_proc, nr_seq_conta_mat referem-se aos registros da pls_conta, pls_conta_proc e pls_conta_mat
		insert into pls_rec_glosa_item_log(nr_sequencia, nr_seq_conta, nr_seq_conta_proc, nr_seq_conta_mat, ds_log,
						dt_atualizacao, dt_atualizacao_nrec, nm_usuario, nm_Usuario_nrec)
		values ( nextval('pls_rec_glosa_item_log_seq'), nr_seq_conta_p, null, r_c02_w.nr_sequencia, ds_log_w,
			clock_timestamp(), clock_timestamp(), nm_usuario_p,nm_usuario_p);
		
	end loop;
	
end;	

begin

if (nr_seq_rec_glosa_lote_p IS NOT NULL AND nr_seq_rec_glosa_lote_p::text <> '') then
	nr_seq_lote_w := nr_seq_rec_glosa_lote_p;
else
	select	max(nr_seq_lote)	
	into STRICT	nr_seq_lote_w
	from	pls_rec_glosa_protocolo
	where	nr_sequencia = nr_seq_rec_glosa_prot_p;
end if;

select	coalesce(max(ie_processo_analise_recurso),'PRG')
into STRICT	ie_processo_analise_recurso_w
from	pls_parametros_rec_glosa
where	cd_estabelecimento	= cd_estabelecimento_w;


for r_c01_w in c01(nr_seq_rec_glosa_lote_p, nr_seq_rec_glosa_prot_p) loop
	
	for r_c02_w in c02(r_c01_w.nr_sequencia) loop
		
		for r_c03_w in c03(r_c02_w.nr_sequencia) loop
				
			vl_glosa_w	:= 0;
			
			if (r_c03_w.nr_seq_conta IS NOT NULL AND r_c03_w.nr_seq_conta::text <> '') then
				insert	into	pls_rec_glosa_conta(	nr_sequencia, nr_seq_protocolo, nr_seq_conta,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec, 
						nm_usuario_nrec, nr_seq_conta_imp, vl_total_recursado,
						ie_status, ds_justificativa_prest, cd_guia_prestador_rec,
						cd_guia_rec, cd_senha_rec)
				values (	nextval('pls_rec_glosa_conta_seq'), r_c01_w.nr_sequencia, r_c03_w.nr_seq_conta, 
						clock_timestamp(), nm_usuario_p, clock_timestamp(), 
						nm_usuario_p, r_c03_w.nr_sequencia, 0, 
						'1', r_c03_w.ds_justificativa_prest, r_c03_w.cd_guia_prestador,
						r_c03_w.ds_senha, r_c03_w.cd_guia)
				returning nr_sequencia into nr_seq_rec_glosa_conta_w;
			else
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1105285);
			end if;
			
			for r_c06_w in c06(r_c03_w.nr_sequencia,null,null) loop
			
				insert into  pls_rec_glosa_glosas(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_proc_rec,
						nr_seq_mat_rec, nr_seq_proc_partic_rec, nr_seq_conta_rec, nr_seq_glosa_imp, nr_seq_motivo_glosa)
				values (	nextval('pls_rec_glosa_glosas_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, null,
						null, null, nr_seq_rec_glosa_conta_w, r_c06_w.nr_sequencia, r_c06_w.nr_seq_motivo_glosa);
			
			end loop;

			for r_c04_w in c04(r_c03_w.nr_sequencia) loop
						
				if (r_c04_w.nr_seq_conta_proc IS NOT NULL AND r_c04_w.nr_seq_conta_proc::text <> '') then
					insert	into	pls_rec_glosa_proc(	nr_sequencia, nr_seq_conta_rec, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
							nr_seq_conta_proc, nr_seq_conta_proc_imp, vl_recursado, 
							cd_dente, cd_regiao_boca, cd_face_dente, 
							ie_status, ds_justificativa_prest, dt_inicio_rec,
							dt_fim_rec, cd_item_recursado, nr_seq_grau_partic,
							cd_glosa_recursada, nr_seq_item_tiss)
					values (	nextval('pls_rec_glosa_proc_seq'), nr_seq_rec_glosa_conta_w, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p, 
							r_c04_w.nr_seq_conta_proc, r_c04_w.nr_sequencia, r_c04_w.vl_glosa, 
							r_c04_w.cd_dente, r_c04_w.cd_regiao_boca, r_c04_w.cd_face_dente, 
							'1', r_c04_w.ds_justificativa_prest, r_c04_w.dt_realizacao,
							r_c04_w.dt_fim, r_c04_w.cd_procedimento, r_c04_w.nr_seq_grau_partic, 
							r_c04_w.cd_glosa_recursada, r_c04_w.nr_seq_item_tiss)
					returning nr_sequencia into nr_seq_proc_glosa_w;
				else
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1105399);
				end if;
				
				vl_glosa_w	:= vl_glosa_w + r_c04_w.vl_glosa;
				
				for r_c06_w in c06(r_c03_w.nr_sequencia,r_c04_w.nr_sequencia,null) loop
				
					insert into  pls_rec_glosa_glosas(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_proc_rec,
							nr_seq_mat_rec, nr_seq_proc_partic_rec, nr_seq_conta_rec, nr_seq_glosa_imp, nr_seq_motivo_glosa)
					values (	nextval('pls_rec_glosa_glosas_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, nr_seq_proc_glosa_w,
							null, null, null, r_c06_w.nr_sequencia, r_c06_w.nr_seq_motivo_glosa);
				
				end loop;
				
			end loop;
			
			for r_c05_w in c05(r_c03_w.nr_sequencia) loop
				
				if (r_c05_w.nr_seq_material IS NOT NULL AND r_c05_w.nr_seq_material::text <> '') then
					insert	into	pls_rec_glosa_mat(	nr_sequencia, nr_seq_conta_rec, nr_seq_conta_mat,
							dt_atualizacao, nm_usuario, dt_atualizacao_nrec, 
							nm_usuario_nrec, nr_seq_conta_mat_imp, vl_recursado,
							ie_status, ds_justificativa_prest, dt_inicio_rec,
							cd_item_recursado, cd_glosa_recursada, nr_seq_item_tiss)
					values (	nextval('pls_rec_glosa_mat_seq'), nr_seq_rec_glosa_conta_w, r_c05_w.nr_seq_material, 
							clock_timestamp(), nm_usuario_p, clock_timestamp(), 
							nm_usuario_p, r_c05_w.nr_sequencia, r_c05_w.vl_glosa,
							'1', r_c05_w.ds_justificativa_prest, r_c05_w.dt_realizacao,
							r_c05_w.cd_material, r_c05_w.cd_glosa_recursada, r_c05_w.nr_seq_item_tiss)
					returning nr_sequencia into nr_seq_mat_glosa_w;
				else
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1105400);
				end if;
				
				vl_glosa_w	:= vl_glosa_w + r_c05_w.vl_glosa;
				
				for r_c06_w in c06(r_c03_w.nr_sequencia,null,r_c05_w.nr_sequencia) loop
				
					insert into  pls_rec_glosa_glosas(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_proc_rec,
							nr_seq_mat_rec, nr_seq_proc_partic_rec, nr_seq_conta_rec, nr_seq_glosa_imp, nr_seq_motivo_glosa)
					values (	nextval('pls_rec_glosa_glosas_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, null,
							nr_seq_mat_glosa_w, null, null, r_c06_w.nr_sequencia, r_c06_w.nr_seq_motivo_glosa);
				
				end loop;
				
			end loop;
			
			verifica_qtdes_itens( r_c03_w.nr_seq_conta);
			
			update	pls_rec_glosa_conta
			set	vl_total_recursado	= vl_glosa_w
			where	nr_sequencia		= nr_seq_rec_glosa_conta_w;
		
			select	count(1)
			into STRICT	qt_rec_glosa_tiss_w
			from	pls_monitor_tiss_alt
			where	nr_seq_conta_rec = nr_seq_rec_glosa_conta_w
			and	ie_tipo_evento = 'FR';
			
			if (coalesce(qt_rec_glosa_tiss_w,0) = 0) then
			
				CALL pls_tiss_gravar_log_monitor(	'FR', r_c03_w.nr_seq_conta, null,
								null, nr_seq_rec_glosa_conta_w, null,
								null, null, null,
								null, null, nm_usuario_p,
								coalesce(r_c01_w.dt_apresentacao_lote,clock_timestamp()));
			end if;	
		
		end loop;
				
	end loop;
	
	for r_C07_w in C07(r_c01_w.nr_sequencia) loop
		CALL pls_inserir_item_pag_rec_glosa(r_C07_w.nr_sequencia,nm_usuario_p);	
	end loop;
	
	if (ie_processo_analise_recurso_w = 'ARG') then
		CALL pls_gerar_lote_analise_rec( r_c01_w.nr_sequencia, null, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_integrar_rec_glosa_prot (nr_seq_rec_glosa_lote_p pls_rec_glosa_lote.nr_sequencia%type, nr_seq_rec_glosa_prot_p pls_rec_glosa_protocolo.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

