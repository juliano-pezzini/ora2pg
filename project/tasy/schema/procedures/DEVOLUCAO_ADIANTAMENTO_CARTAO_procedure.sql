-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE devolucao_adiantamento_cartao ( nr_seq_movto_cartao_p bigint, nr_adiantamento_p bigint, dt_transacao_p timestamp, vl_transacao_p bigint, nm_usuario_p text ) AS $body$
DECLARE


vl_liquido_movto_w		movto_cartao_cr.vl_transacao%type;
vl_saldo_movto_w		movto_cartao_cr.vl_transacao%type;
vl_despesa_w			movto_cartao_cr_parcela.vl_despesa%type;
vl_saldo_despesa_w		movto_cartao_cr_parcela.vl_despesa%type;
dt_liquidacao_w			movto_cartao_cr.dt_baixa%type;
dt_cancelamento_w		movto_cartao_cr.dt_cancelamento%type;
nr_sequencia_w			adiantamento_dev.nr_sequencia%type;
ds_observacao_w			varchar(200);
vl_adiantamento_w		adiantamento_v.vl_adiantamento%type;
vl_saldo_adiantamento_w		adiantamento_v.vl_saldo%type;
nr_adiantamento_w		movto_cartao_cr.nr_adiantamento%type;
cd_moeda_w			adiantamento.cd_moeda%type;
vl_devolucao_w			adiantamento_dev.vl_devolucao%type;


BEGIN

select	obter_vl_liquido_cartao(max(a.nr_sequencia)),
	obter_saldo_cartao_cr(max(a.nr_sequencia),null),
	obter_vl_despesa_cartao(max(a.nr_sequencia)),
	obter_saldo_despesa_cartao_cr(max(a.nr_sequencia),null,clock_timestamp()),
	max(a.dt_baixa),
	max(a.dt_cancelamento),
	max(a.nr_adiantamento)
into STRICT	vl_liquido_movto_w,
	vl_saldo_movto_w,
	vl_despesa_w,
	vl_saldo_despesa_w,
	dt_liquidacao_w,
	dt_cancelamento_w,
	nr_adiantamento_w
from	movto_cartao_cr a
where	a.nr_sequencia = nr_seq_movto_cartao_p;

select	max(a.vl_adiantamento),
	max(a.vl_saldo)
into STRICT	vl_adiantamento_w,
	vl_saldo_adiantamento_w
from	adiantamento_v a
where	a.nr_adiantamento = nr_adiantamento_p;

select	sum(a.vl_devolucao)
into STRICT	vl_devolucao_w
from	adiantamento_dev a
where	a.nr_adiantamento = nr_adiantamento_p;

if (nr_adiantamento_w <> nr_adiantamento_p) then
	--O adiantamento do movimento de cartao e diferente do adiantamento informado na transacao.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1117539);
end if;	

if (coalesce(vl_liquido_movto_w,0) <> coalesce(vl_saldo_movto_w,0)) or (coalesce(vl_despesa_w,0) <> coalesce(vl_saldo_despesa_w,0)) or (dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '') or (dt_cancelamento_w IS NOT NULL AND dt_cancelamento_w::text <> '') then
        --O movimento de cartao vinculado ao adiantamento possui baixas ou esta cancelado.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1117541);
end if;

if (coalesce(vl_transacao_p,0) > coalesce(vl_saldo_adiantamento_w,0)) or --Vl transacao pode ser menor q o saldo, pois pode ser um adtamento em 2 cartoes, e na primeira devolucao do cartao, o valor sera inferior ao saldo do adiantamento
   (coalesce(vl_adiantamento_w,0) <> (coalesce(vl_saldo_adiantamento_w,0) + coalesce(vl_devolucao_w,0)))then
	--Somente e permitido efetuar devolucao de adiantamento em cartao com seu valor integral.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1117542);
end if;

select 	max(cd_moeda)
into STRICT	cd_moeda_w
from	adiantamento
where	nr_adiantamento = nr_adiantamento_p;

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_sequencia_w
from	adiantamento_dev
where	nr_adiantamento	= nr_adiantamento_p;

insert into adiantamento_dev(	nr_adiantamento,
				nr_sequencia,
				dt_devolucao,
				vl_devolucao,
				vl_devolucao_estrang,
				cd_moeda,
				vl_cotacao,
				vl_complemento,
				dt_atualizacao,
				nm_usuario,
				ds_motivo_dev,
				nr_lote_contabil,
				nr_seq_trans_fin )
		values (	nr_adiantamento_p,
				nr_sequencia_w,
				coalesce(trunc(dt_transacao_p), clock_timestamp()),
				vl_transacao_p,
				null,
				cd_moeda_w,
				null,
				null,
				clock_timestamp(),
				nm_usuario_p,
				null,
				null,
				null);

--Atualizar o saldo do adiantamento
CALL Atualizar_Saldo_Adiantamento(nr_adiantamento_p, nm_usuario_p, null);

ds_observacao_w := substr(wheb_mensagem_pck.get_Texto(1117543, 'NR_ADIANTAMENTO_P='|| nr_adiantamento_p),1,254);

CALL cancelar_movto_cartao_cr_js(	coalesce(dt_transacao_p, clock_timestamp()),
				nr_seq_movto_cartao_p,
				ds_observacao_w,
				nm_usuario_p );

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE devolucao_adiantamento_cartao ( nr_seq_movto_cartao_p bigint, nr_adiantamento_p bigint, dt_transacao_p timestamp, vl_transacao_p bigint, nm_usuario_p text ) FROM PUBLIC;

