-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_nut_pac_adulto ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_peso_w					double precision;
qt_peso_ideal_w				double precision;
qt_peso_ajustado_w			double precision;
qt_idade_dia_w				bigint;
qt_idade_mes_w				bigint;
qt_idade_ano_w				bigint;
qt_altura_cm_w				bigint;
qt_kcal_total_w				double precision;
qt_kcal_kg_w				double precision;
qt_fase_npt_w				bigint;
qt_nec_hidrica_diaria_w		double precision;
qt_aporte_nec_kcal_dia_w	double precision;
qt_aporte_hidrico_diario_w	double precision;
qt_nec_kcal_kg_dia_w		double precision;
pr_conc_glic_solucao_w		double precision;
qt_grama_proteina_kg_dia_w	double precision;
qt_rel_cal_nit_w			double precision;
qt_equipo_w					double precision;
ie_correcao_w				varchar(01);
ie_calcula_vel_w			varchar(01);
VarCAlculaQuantidade_w		varchar(01);
varformulaosmnpt_w			varchar(01);
cd_unidade_medida_w			varchar(50);
nr_seq_protocolo_w			bigint;
qt_elemento_w				bigint;
nr_sequencia_teste_w		bigint;
cd_material_w				bigint;
cd_material_aux_w			bigint;
qt_formula_lipideo_w		smallint;
qt_hora_inf_w				smallint;
qt_formula_carb_w			double precision;
qt_vol_lip_ml_w				double precision;
qt_dose_w					double precision;
qt_vol_glicose_w			double precision;
qt_fosforo_w				double precision;
qt_vol_magnesio_w			double precision;
qt_vol_calcio_w				double precision;
qt_vol_sodio_w				double precision;
qt_grama_nitrogenio_2w		double precision;
qt_grama_nitrogenio_1w		double precision;
qt_diaria_aa_w				double precision;
qt_nitrogenio_w				double precision;
qt_potassio_w				double precision;
ie_ajustar_potassio_w		varchar(01);
ie_calcula_validade_w		varchar(01);
ie_alterou_vct_w			varchar(01);
nr_prescricao_w				bigint;
qt_elem_mat_w				bigint;
qt_vol_total_w				double precision;
nr_ocorrencia_w				bigint;
cd_intervalo_w				varchar(51);
pr_lipidio_w				real;
pr_proteina_w				real;
pr_carboidrato_w			real;
cd_pessoa_fisica_w			varchar(10);
ie_sexo_w					varchar(1);
ie_forma_w					varchar(1);
nr_seq_fator_ativ_w			bigint;
nr_seq_fator_stress_w		bigint;
qt_lipidio_w				double precision;
qt_proteina_w				double precision;
qt_carboidrato_w			double precision;
qt_fator_stress_w			double precision;
qt_fator_ativ_w				double precision;
qt_kcal_w					double precision;
ie_tipo_elemento_w			varchar(1);
nr_sequencia_w				bigint;
qt_conversao_ml_w			double precision;
qt_volume_w					double precision;
nr_seq_mat_w				bigint;
qt_kcal_lip_w				double precision;
qt_g_lip_dia_w				double precision;
qt_g_lip_kg_dia_w			double precision;
qt_vol_lip_w				double precision;
qt_vol_caboidrato_w			double precision;
qt_kcal_glic_w				double precision;
qt_g_prot_dia_w				double precision;
qt_g_prot_kg_dia_w			double precision;
qt_vol_prot_w				double precision;
qt_vol_prot_2w				double precision;
qt_nitrogenio_2w			double precision;
qt_diaria_prot_w			double precision;
qt_diaria_carbo_w			double precision;
qt_diaria_gli_w				double precision;
qt_diaria_lip_w				double precision;
qt_vol_eletro_w				double precision;
qt_g_glic_dia_w				double precision;
qt_g_glic_kg_dia_w			double precision;
qt_vel_inf_glicose_w		double precision;
qt_kcal_prot_w				double precision;
qt_grama_nitrogenio_w		double precision;
qt_kcal_proteico_w			double precision;
qt_kcal_nao_proteico_w		double precision;
qt_kcal_lipidio_w			double precision;
qt_kcal_carboidrato_w		double precision;
pr_conc_proteina_solucao_w	double precision;
pr_conc_lipidio_solucao_w	double precision;
nr_horas_validade_w			integer;
qt_gotejo_w					double precision;
qt_volume_total_w			double precision;
qt_volume_princ_w			double precision := 0;
qt_volume_princ_ww			double precision;
qt_volume_diario_w			double precision;
nr_seq_glicose_w			bigint;
qt_elem_kg_dia_w			double precision;
qt_diaria_w					double precision;
nr_seq_elemento_w			bigint;
qt_tmb_w					double precision;
qt_kcal_total_origem_w		double precision;
ie_calculo_auto_w			varchar(1);
VarAdicionaElemenCompl_w	varchar(1);
ie_editado_w				varchar(1);
qt_elem_lipidio_w			smallint;
qt_lipidio_prop_w			double precision;
qt_formula_lipideo_ww		smallint;
qt_conversao_kcal_w			nut_elem_material.qt_conversao_kcal%type;
cd_unid_med_elem_w			nut_pac_elemento.cd_unidade_medida%type;

C01 CURSOR FOR
	SELECT	b.ie_tipo_elemento,
			a.nr_sequencia,
			a.qt_diaria,
			a.nr_seq_elemento
	from 	nut_Elemento b,
			nut_pac_elemento a
	where	a.nr_seq_elemento	= b.nr_sequencia
	and		a.nr_seq_nut_pac	= nr_sequencia_p;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
			b.qt_conversao_ml
	from	nut_elem_material b,
			nut_pac_elem_mat a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.cd_material	= b.cd_material
	and		b.nr_seq_elemento	= nr_seq_elemento_w
	and		coalesce(b.ie_tipo,'NPT')	= 'NPT';

C03 CURSOR FOR
	SELECT	c.qt_conversao_ml,
			b.ie_tipo_elemento,
			a.nr_sequencia,
			coalesce(a.qt_volume,0),
			a.cd_unidade_medida,
			a.cd_material,
			coalesce(c.qt_conversao_kcal,0),
			d.cd_unidade_medida
	from	nut_pac_elemento d,
			nut_elem_material c,
			nut_Elemento b,
			nut_pac_elem_mat a
	where	a.cd_material		= c.cd_material
	and		c.nr_seq_elemento	= b.nr_sequencia
	and		d.nr_seq_nut_pac 	= a.nr_seq_nut_pac
	and		d.nr_seq_elemento	= b.nr_sequencia
	and		a.nr_seq_nut_pac	= nr_sequencia_p
	and		coalesce(c.ie_tipo,'NPT')	= 'NPT'
	order by a.cd_material;

C04 CURSOR FOR
	SELECT	distinct a.cd_material,
			coalesce(round((a.qt_volume)::numeric,2),0)
	from	nut_pac_elem_mat a,
			nut_elem_material b,
			nut_pac_elemento c,
			nut_elemento d
	where	a.cd_material 		= b.cd_material
	and		a.nr_seq_nut_pac 	= c.nr_seq_nut_pac
	and		b.nr_seq_elemento 	= c.nr_seq_elemento
	and		b.nr_seq_elemento 	= d.nr_sequencia
	and		c.nr_seq_elemento 	= d.nr_sequencia
	and		a.nr_seq_nut_pac 	= nr_sequencia_p
	and		coalesce(b.ie_tipo,'NPT')	= 'NPT'
	and		coalesce(d.ie_redistribuir,'S') = 'S';



BEGIN

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_glicose_w
from	nut_elemento
where	ie_tipo_elemento	= 'C'
and		ie_npt_adulto		= 'S'
and		ie_situacao			= 'A';

select 	qt_peso,
		qt_peso_ideal,
		qt_peso_ajustado,
		qt_idade_dia,
		qt_idade_mes,
		qt_idade_ano,
		qt_altura_cm,
		qt_kcal_total,
		qt_kcal_kg,
		qt_fase_npt,
		qt_nec_hidrica_diaria,
		qt_aporte_hidrico_diario,
		qt_vel_inf_glicose,
		qt_nec_kcal_kg_dia,
		pr_conc_glic_solucao,
		qt_rel_cal_nit,
		qt_equipo,
		coalesce(ie_correcao,'N'),
		coalesce(ie_ajustar_potassio,'S'),
		nr_prescricao,
		nr_seq_protocolo,
		ie_forma,
		nr_seq_fator_ativ,
		nr_seq_fator_stress,
		coalesce(pr_Lipidio,0),
		coalesce(pr_proteina,0),
		coalesce(pr_carboidrato,0),
		qt_volume_diario,
		cd_intervalo,
		coalesce(ie_calcula_vel,'S'),
		coalesce(ie_alterou_vct,'N'),
		coalesce(ie_calculo_auto,'S'),
		qt_gotejo_npt,
		qt_hora_inf,
		ie_alterada,
		coalesce(qt_kcal_lipidio,0),
		coalesce(qt_kcal_proteina,0),
		coalesce(qt_kcal_carboidrato,0)
into STRICT
		qt_peso_w,
		qt_peso_ideal_w,
		qt_peso_ajustado_w,
		qt_idade_dia_w,
		qt_idade_mes_w,
		qt_idade_ano_w,
		qt_altura_cm_w,
		qt_kcal_total_w,
		qt_kcal_kg_w,
		qt_fase_npt_w,
		qt_nec_hidrica_diaria_w,
		qt_aporte_hidrico_diario_w,
		qt_vel_inf_glicose_w,
		qt_nec_kcal_kg_dia_w,
		pr_conc_glic_solucao_w,
		qt_rel_cal_nit_w,
		qt_equipo_w,
		ie_correcao_w,
		ie_ajustar_potassio_w,
		nr_prescricao_w,
		nr_seq_protocolo_w,
		ie_forma_w,
		nr_seq_fator_ativ_w,
		nr_seq_fator_stress_w,
		pr_Lipidio_w,
		pr_proteina_w,
		pr_carboidrato_w,
		qt_volume_diario_w,
		cd_intervalo_w,
		ie_calcula_vel_w,
		ie_alterou_vct_w,
		ie_calculo_auto_w,
		qt_gotejo_w,
		qt_hora_inf_w,
		ie_editado_w,
		qt_Lipidio_w,
		qt_proteina_w,
		qt_carboidrato_w
from	Nut_pac
where	nr_sequencia		= nr_sequencia_p;

ie_calcula_validade_w := Obter_Param_Usuario(924, 856, obter_perfil_ativo, nm_usuario_p, 0, ie_calcula_validade_w);
qt_formula_lipideo_w := Obter_Param_Usuario(924, 1034, obter_perfil_ativo, nm_usuario_p, 0, qt_formula_lipideo_w);
qt_formula_carb_w := Obter_Param_Usuario(924, 1035, obter_perfil_ativo, nm_usuario_p, 0, qt_formula_carb_w);
VarCalculaQuantidade_w := Obter_Param_Usuario(924, 1072, obter_perfil_ativo, nm_usuario_p, 0, VarCalculaQuantidade_w);
VarFormulaOsmNPT_w := Obter_Param_Usuario(924, 1080, obter_perfil_ativo, nm_usuario_p, 0, VarFormulaOsmNPT_w);
VarAdicionaElemenCompl_w := Obter_Param_Usuario(924, 1144, obter_perfil_ativo, nm_usuario_p, 0, VarAdicionaElemenCompl_w);

if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
	nr_ocorrencia_w	:= Obter_Ocorrencia_intervalo(cd_intervalo_w,24,'O');
end if;

select	max(cd_pessoa_fisica),
		coalesce(max(nr_horas_validade),0)
into STRICT	cd_pessoa_fisica_w,
		nr_horas_validade_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_w;

if (ie_calcula_validade_w = 'N') then
	nr_horas_validade_w	:= 24;
end if;

select	ie_sexo
into STRICT	ie_sexo_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w;


select	count(*)
into STRICT	qt_elemento_w
from	nut_pac_elemento
where	nr_seq_nut_pac	= nr_sequencia_p;

select	count(*)
into STRICT	qt_elemento_w
from	nut_pac_elemento
where	nr_seq_nut_pac	= nr_sequencia_p;

select	count(*)
into STRICT	qt_elem_mat_w
from	nut_pac_elem_mat
where	nr_seq_nut_pac = nr_sequencia_p;

if (qt_elem_mat_w = 0) and (qt_elemento_w = 0) then
	CALL Gerar_Nut_Elem_Pac_Adulto_prot(nr_sequencia_p, nm_usuario_p);
end if;

commit;

if (qt_peso_ideal_w > 0) then
	if (ie_sexo_w = 'M') then
		qt_peso_ajustado_w	:= ((qt_peso_w - qt_peso_ideal_w) * 0.32) + qt_peso_ideal_w;
	elsif (ie_sexo_w = 'F') then
		qt_peso_ajustado_w	:= ((qt_peso_w - qt_peso_ideal_w) * 0.38) + qt_peso_ideal_w;
	end if;

	update	nut_pac
	set		qt_peso_ajustado = qt_peso_ajustado_w
	where	nr_sequencia = nr_sequencia_p;
	commit;
end if;

qt_tmb_w	:= calcular_tmb_hb(ie_sexo_w, coalesce(qt_peso_ajustado_w,qt_peso_w), qt_altura_cm_w, qt_idade_ano_w);

if (ie_forma_w = 'I') then
	if	((pr_proteina_w + pr_lipidio_w + pr_carboidrato_w) <> 100) then
		--'A Soma dos percentuais de proteína, lipídio e carboidrato deve ser igual a 100 !'
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176792);
	end if;

	select	coalesce(max(qt_fator),1)
	into STRICT	qt_fator_stress_w
	from	nut_fator_stress
	where	nr_sequencia	= nr_seq_fator_stress_w;

	select	coalesce(max(qt_fator),1)
	into STRICT	qt_fator_ativ_w
	from	nut_fator_ativ
	where	nr_sequencia	= nr_seq_fator_ativ_w;


	if (ie_sexo_w = 'F') then
		qt_kcal_w	:= (655.1 + (9.563 * coalesce(qt_peso_ajustado_w, qt_peso_w)) + (1.850 * qt_altura_cm_w) - (4.676 * qt_idade_ano_w));
	else
		qt_kcal_w	:= (66.5 + (13.75 * coalesce(qt_peso_ajustado_w, qt_peso_w)) + (5.003 * qt_altura_cm_w) - (6.775 * qt_idade_ano_w));
	end if;

	qt_kcal_w			:= 	coalesce(qt_kcal_w,0) * qt_fator_Ativ_w * qt_fator_stress_w;
	qt_kcal_total_w		:= qt_kcal_w;
	qt_Lipidio_w		:= dividir_sem_round((qt_kcal_w * pr_lipidio_w)::numeric, 100);
	qt_proteina_w		:= dividir_sem_round((qt_kcal_w * pr_proteina_w)::numeric, 100);
	qt_carboidrato_w	:= qt_kcal_w - qt_Lipidio_w - qt_proteina_w;
	qt_kcal_kg_w		:= dividir_sem_round(qt_kcal_w, coalesce(qt_peso_ajustado_w, qt_peso_w));


	select	count(*)
	into STRICT	qt_elem_lipidio_w
	from	nut_pac_elemento a,
			nut_elemento b
	where	a.nr_seq_nut_pac 	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento = 'L';

	pr_conc_lipidio_solucao_w	:= 0;

	open C03;
	loop
	fetch C03 into
		qt_conversao_ml_w,
		ie_tipo_elemento_w,
		nr_seq_mat_w,
		qt_volume_w,
		cd_unidade_medida_w,
		cd_material_w,
		qt_conversao_kcal_w,
		cd_unid_med_elem_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		if (ie_tipo_elemento_w in ('P','C')) then
			begin

				if (ie_tipo_elemento_w = 'P') then
					begin
					qt_diaria_w		:= dividir_sem_round((qt_proteina_w )::numeric, 4);
					end;
				elsif (ie_tipo_elemento_w = 'L') then
					begin
					qt_diaria_w		:= dividir_sem_round(qt_Lipidio_w, qt_formula_lipideo_w);
					end;
				elsif (ie_tipo_elemento_w = 'C') then
					begin
					qt_diaria_w		:= dividir_sem_round(qt_carboidrato_w, qt_formula_carb_w);
					end;



				end if;

				qt_volume_w	:= qt_diaria_w * qt_conversao_ml_w;

				if (upper(cd_unidade_medida_w) = upper(obter_unid_med_usua('ml'))) then
					qt_dose_w	:= qt_volume_w;
				elsif (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then
					qt_dose_w	:= Obter_dose_convertida(cd_material_w, qt_volume_w, obter_unid_med_usua('ml'), cd_unidade_medida_w);
				end if;

				update	nut_pac_elem_mat
				set		qt_volume		= qt_volume_w,
						qt_dose			= coalesce(qt_dose_w, qt_dose)
				where	nr_sequencia	= nr_seq_mat_w
				and		nr_seq_nut_pac	= nr_sequencia_p;

			end;
		elsif (ie_tipo_elemento_w = 'L') then
			begin

				if (qt_conversao_kcal_w	> 0) then
					qt_formula_lipideo_ww	:= qt_conversao_kcal_w;
				else
					qt_formula_lipideo_ww	:=	qt_formula_lipideo_w;
				end if;


				qt_lipidio_prop_w	:= dividir_sem_round(qt_Lipidio_w, qt_elem_lipidio_w);
				qt_diaria_w	:= dividir_sem_round(qt_lipidio_prop_w, qt_formula_lipideo_ww);

				qt_volume_w	:= qt_diaria_w * qt_conversao_ml_w;

				if (upper(cd_unidade_medida_w) = upper(obter_unid_med_usua('ml'))) then
					qt_dose_w	:= qt_volume_w;
				elsif (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then

					qt_dose_w	:= qt_diaria_w;
				end if;


				update	nut_pac_elem_mat
				set		qt_volume		= qt_volume_w,
						qt_dose			= coalesce(qt_dose_w, qt_dose)
				where	nr_sequencia	= nr_seq_mat_w
				and		nr_seq_nut_pac	= nr_sequencia_p;
						end;

				if (upper(cd_unid_med_elem_w) = upper(obter_unid_med_usua('g'))) then
					pr_conc_lipidio_solucao_w	:=	pr_conc_lipidio_solucao_w + qt_diaria_w;
				else
					pr_conc_lipidio_solucao_w	:= pr_conc_lipidio_solucao_w + Obter_dose_convertida(cd_material_w, qt_diaria_w, obter_unid_med_usua('g'), cd_unid_med_elem_w);
				end if;
			end if;

		end;
	end Loop;
	close C03;

	CALL Calcular_Nut_Elem_Adulto(nr_sequencia_p,nm_usuario_p);

	select	coalesce(sum(qt_elem_kg_dia),0),
			coalesce(sum(Obter_vol_elem_nut_pac_ad(a.nr_sequencia)),0),
			coalesce(sum(qt_diaria),0),
			coalesce(sum(qt_kcal),0),
			max(Obter_n2_elem_nut_pac(a.nr_sequencia))
	into STRICT	qt_g_prot_kg_dia_w,
			qt_vol_prot_w,
			qt_diaria_prot_w,
			qt_kcal_proteico_w,
			qt_nitrogenio_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'P';

	select	coalesce(sum(qt_kcal),0),
			coalesce(sum(Obter_vol_elem_nut_pac_ad(a.nr_sequencia)),0)
	into STRICT	qt_kcal_carboidrato_w,
			qt_vol_caboidrato_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'C';

	select	coalesce(sum(qt_kcal),0)
	into STRICT	qt_kcal_nao_proteico_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	<> 'P';

	select	coalesce(sum(qt_elem_kg_dia),0),
			coalesce(sum(Obter_vol_elem_nut_pac_ad(a.nr_sequencia)),0),
			coalesce(sum(qt_kcal),0)
	into STRICT	qt_g_lip_kg_dia_w,
			qt_vol_lip_w,
			qt_kcal_lipidio_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'L';

	select	coalesce(sum(round((c.qt_volume)::numeric,2)),0)
	into STRICT	qt_volume_total_w
	from	nut_pac_elem_mat c,
			nut_pac a
	where	a.nr_sequencia	= nr_sequencia_p
	and		a.nr_sequencia	= c.nr_seq_nut_pac
	and		Obter_Se_Soma_Volume(a.nr_sequencia,c.nr_sequencia) = 'S';


	open C04;
	loop
	fetch C04 into cd_material_aux_w,
				   qt_volume_princ_ww;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		qt_volume_princ_w := qt_volume_princ_w + qt_volume_princ_ww;
		end;
	end loop;
	close C04;

	if (ie_calculo_auto_w	<> 'N') then
		qt_gotejo_w			:= round(dividir_sem_round(qt_volume_total_w,coalesce(QT_HORA_INF_w, nr_horas_validade_w)));
	end if;

	select	max(qt_elem_kg_dia)
	into STRICT	qt_elem_kg_dia_w
	from	nut_pac_elemento
	where	nr_seq_nut_pac	= nr_sequencia_p
	and		nr_seq_elemento	= nr_seq_glicose_w;

	qt_vel_inf_glicose_w	:= dividir_sem_round(qt_elem_kg_dia_w,1.44);

	qt_g_Glic_kg_dia_w		:= round((qt_vel_inf_glicose_w * 1.44)::numeric,1);

	qt_g_lip_dia_w			:= qt_g_Lip_kg_dia_w * coalesce(qt_peso_ajustado_w, qt_peso_w);
	qt_g_prot_dia_w			:= qt_g_Prot_kg_dia_w * coalesce(qt_peso_ajustado_w, qt_peso_w);
	qt_g_glic_dia_w			:= qt_g_glic_kg_dia_w * coalesce(qt_peso_ajustado_w, qt_peso_w);


	if (VarCalculaQuantidade_w = 'N') then
		qt_grama_nitrogenio_w	:= dividir_sem_round((qt_diaria_prot_w * 16)::numeric,100);
		qt_kcal_prot_w			:= qt_g_Prot_dia_w * 4;
	else
		select	max(qt_grama_nitrogenio),
				max(a.nr_sequencia)
		into STRICT		qt_grama_nitrogenio_1w,
				nr_sequencia_teste_w
		from		nut_elemento b,
				nut_pac_elemento a
		where	a.nr_seq_nut_pac	= nr_sequencia_p
		and		a.nr_seq_elemento	= b.nr_sequencia
		and		b.ie_tipo_elemento	= 'P';

		select	max(qt_grama_nitrogenio)
		into STRICT		qt_grama_nitrogenio_2w
		from		nut_elemento b,
				nut_pac_elemento a
		where	a.nr_seq_nut_pac	= nr_sequencia_p
		and		a.nr_seq_elemento	= b.nr_sequencia
		and		a.nr_sequencia	<> nr_sequencia_teste_w
		and		b.ie_tipo_elemento	= 'P';

		qt_grama_nitrogenio_w	:= coalesce(qt_grama_nitrogenio_2w,0) + coalesce(qt_grama_nitrogenio_1w,0);
		qt_kcal_prot_w			:= qt_grama_nitrogenio_w * 6.25 * 4;
	end if;

	qt_kcal_lip_w			:= qt_g_Lip_dia_w * qt_formula_lipideo_w;
	qt_kcal_glic_w			:= qt_g_glic_dia_w * qt_formula_carb_w;
	qt_rel_cal_nit_w        := dividir_sem_round(qt_kcal_nao_proteico_w,round((qt_grama_nitrogenio_w)::numeric,2));



	pr_conc_proteina_solucao_w	:= dividir_sem_round((qt_proteina_w)::numeric, 4);
	pr_conc_glic_solucao_w		:= dividir_sem_round(qt_carboidrato_w, qt_formula_carb_w);
	qt_grama_proteina_kg_dia_w  := dividir_sem_round(pr_conc_proteina_solucao_w, coalesce(qt_peso_ajustado_w, qt_peso_w));

	update	Nut_pac
	set		qt_grama_nitrogenio			= qt_grama_nitrogenio_w,
			qt_kcal_total				= qt_kcal_total_w,
			qt_kcal_kg					= qt_kcal_kg_w,
			qt_rel_cal_nit				= qt_rel_cal_nit_w,
			qt_kcal_proteico			= qt_kcal_proteico_w,
			qt_kcal_nao_proteico		= qt_kcal_nao_proteico_w,
			qt_kcal_proteina			= qt_proteina_w,
			qt_kcal_lipidio				= qt_lipidio_w,
			qt_kcal_carboidrato			= qt_carboidrato_w,
			pr_proteina					= pr_proteina_w,
			pr_Lipidio					= pr_Lipidio_w,
			pr_carboidrato				= pr_carboidrato_w,
			pr_conc_proteina_solucao	= pr_conc_proteina_solucao_w,
			pr_conc_lipidio_solucao		= pr_conc_lipidio_solucao_w,
			pr_conc_glic_solucao		= pr_conc_glic_solucao_w,
			qt_gotejo_npt				= CASE WHEN ie_calcula_vel_w='S' THEN qt_gotejo_w  ELSE qt_gotejo_npt END ,
			qt_volume_diario			= qt_volume_total_w,
			qt_volume_princ				= round((qt_volume_princ_w)::numeric,2),
			qt_vel_inf_glicose			= qt_vel_inf_glicose_w,
			qt_peso_ajustado			= qt_peso_ajustado_w,
			qt_tmb						= qt_tmb_w,
			qt_grama_proteina_kg_dia	= qt_grama_proteina_kg_dia_w
	where	nr_sequencia				= nr_sequencia_p;
elsif (ie_forma_w = 'K') then
	if	((pr_proteina_w + pr_lipidio_w + pr_carboidrato_w) <> 100) then
		--'A Soma dos percentuais de proteína, lipídio e carboidrato deve ser igual a 100 !'
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176792);
	end if;

	if (ie_editado_w = 'S') or (coalesce(qt_kcal_total_w,0) = 0) then

		if (coalesce(qt_kcal_kg_w,0) = 0) then
			---É necessário informar o campo Kcal/kg/dia.
			CALL wheb_mensagem_pck.exibir_mensagem_abort(256334);
		end if;

		qt_kcal_w			:= coalesce(qt_kcal_kg_w,0) * coalesce(qt_peso_ajustado_w, qt_peso_w);
		qt_kcal_w			:= coalesce(qt_kcal_w,0);
		qt_kcal_total_w		:= qt_kcal_w;
		qt_Lipidio_w		:= dividir_sem_round((qt_kcal_w * pr_lipidio_w)::numeric, 100);
		qt_proteina_w		:= dividir_sem_round((qt_kcal_w * pr_proteina_w)::numeric, 100);
		qt_carboidrato_w	:= qt_kcal_w - qt_Lipidio_w - qt_proteina_w;
	else
		qt_kcal_w := qt_kcal_total_w;
	end if;

	select	count(*)
	into STRICT	qt_elem_lipidio_w
	from	nut_pac_elemento a,
			nut_elemento b
	where	a.nr_seq_nut_pac 	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento = 'L';

	pr_conc_lipidio_solucao_w	:= 0;

	open C03;
	loop
	fetch C03 into
		qt_conversao_ml_w,
		ie_tipo_elemento_w,
		nr_seq_mat_w,
		qt_volume_w,
		cd_unidade_medida_w,
		cd_material_w,
		qt_conversao_kcal_w,
		cd_unid_med_elem_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		if (ie_tipo_elemento_w in ('P','C')) then
			begin
				if (ie_tipo_elemento_w = 'P') then
					begin
					qt_diaria_w		:= dividir_sem_round((qt_proteina_w)::numeric, 4);
					end;
				elsif (ie_tipo_elemento_w = 'C') then
					begin
					qt_diaria_w		:= dividir_sem_round(qt_carboidrato_w, qt_formula_carb_w);
					end;
				end if;

				qt_volume_w	:= qt_diaria_w * qt_conversao_ml_w;

				if (upper(cd_unidade_medida_w) = upper(obter_unid_med_usua('ml'))) then
					qt_dose_w	:= qt_volume_w;
				elsif (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then
					qt_dose_w	:= Obter_dose_convertida(cd_material_w, qt_volume_w, obter_unid_med_usua('ml'), cd_unidade_medida_w);
				end if;

				update	nut_pac_elem_mat
				set		qt_volume		= qt_volume_w,
						qt_dose			= coalesce(qt_dose_w, qt_dose)
				where	nr_sequencia	= nr_seq_mat_w
				and		nr_seq_nut_pac	= nr_sequencia_p;

			end;
		elsif (ie_tipo_elemento_w = 'L') then
			begin

				if (qt_conversao_kcal_w	> 0) then
					qt_formula_lipideo_ww	:= qt_conversao_kcal_w;
				else
					qt_formula_lipideo_ww	:=	qt_formula_lipideo_w;
				end if;

				qt_lipidio_prop_w	:= dividir_sem_round(qt_Lipidio_w, qt_elem_lipidio_w);
				qt_diaria_w	:= dividir_sem_round(qt_lipidio_prop_w, qt_formula_lipideo_ww);

				qt_volume_w	:= qt_diaria_w * qt_conversao_ml_w;

				if (upper(cd_unidade_medida_w) = upper(obter_unid_med_usua('ml'))) then
					qt_dose_w	:= qt_volume_w;
				elsif (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then
					qt_dose_w	:= qt_diaria_w;
				end if;

				update	nut_pac_elem_mat
				set		qt_volume		= qt_volume_w,
						qt_dose			= coalesce(qt_dose_w, qt_dose)
				where	nr_sequencia	= nr_seq_mat_w
				and		nr_seq_nut_pac	= nr_sequencia_p;
						end;

				if (upper(cd_unid_med_elem_w) = upper(obter_unid_med_usua('g'))) then
					pr_conc_lipidio_solucao_w	:=	pr_conc_lipidio_solucao_w + qt_diaria_w;
				else
					pr_conc_lipidio_solucao_w	:= pr_conc_lipidio_solucao_w + Obter_dose_convertida(cd_material_w, qt_diaria_w, obter_unid_med_usua('g'), cd_unid_med_elem_w);
				end if;
			end if;
		end;
	end Loop;
	close C03;

	CALL Calcular_Nut_Elem_Adulto(nr_sequencia_p,nm_usuario_p);

	select	coalesce(sum(qt_elem_kg_dia),0),
			coalesce(sum(Obter_vol_elem_nut_pac_ad(a.nr_sequencia)),0),
			coalesce(sum(qt_diaria),0),
			coalesce(sum(qt_kcal),0),
			max(Obter_n2_elem_nut_pac(a.nr_sequencia))
	into STRICT	qt_g_prot_kg_dia_w,
			qt_vol_prot_w,
			qt_diaria_prot_w,
			qt_kcal_proteico_w,
			qt_nitrogenio_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'P';

	select	coalesce(sum(qt_kcal),0),
			coalesce(sum(Obter_vol_elem_nut_pac_ad(a.nr_sequencia)),0)
	into STRICT	qt_kcal_carboidrato_w,
			qt_vol_caboidrato_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'C';

	select	coalesce(sum(qt_kcal),0)
	into STRICT	qt_kcal_nao_proteico_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	<> 'P';

	select	coalesce(sum(qt_elem_kg_dia),0),
			coalesce(sum(Obter_vol_elem_nut_pac_ad(a.nr_sequencia)),0),
			coalesce(sum(qt_kcal),0)
	into STRICT	qt_g_lip_kg_dia_w,
			qt_vol_lip_w,
			qt_kcal_lipidio_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'L';

	select	coalesce(sum(round((c.qt_volume)::numeric,2)),0)
	into STRICT	qt_volume_total_w
	from	nut_pac_elem_mat c,
			nut_pac a
	where	a.nr_sequencia	= nr_sequencia_p
	and		a.nr_sequencia	= c.nr_seq_nut_pac
	and		Obter_Se_Soma_Volume(a.nr_sequencia,c.nr_sequencia) = 'S';

	open C04;
	loop
	fetch C04 into cd_material_aux_w,
				   qt_volume_princ_ww;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		qt_volume_princ_w := qt_volume_princ_w + qt_volume_princ_ww;
		end;
	end loop;
	close C04;

	if (ie_calculo_auto_w	<> 'N') then
		qt_gotejo_w			:= round(dividir_sem_round(qt_volume_total_w,coalesce(QT_HORA_INF_w, nr_horas_validade_w)));
	end if;

	select	max(qt_elem_kg_dia)
	into STRICT	qt_elem_kg_dia_w
	from	nut_pac_elemento
	where	nr_seq_nut_pac	= nr_sequencia_p
	and		nr_seq_elemento	= nr_seq_glicose_w;

	qt_vel_inf_glicose_w	:= dividir_sem_round(qt_elem_kg_dia_w,1.44);

	qt_g_Glic_kg_dia_w		:= round((qt_vel_inf_glicose_w * 1.44)::numeric,1);

	qt_g_lip_dia_w			:= qt_g_Lip_kg_dia_w * coalesce(qt_peso_ajustado_w, qt_peso_w);
	qt_g_prot_dia_w			:= qt_g_Prot_kg_dia_w * coalesce(qt_peso_ajustado_w, qt_peso_w);
	qt_g_glic_dia_w			:= qt_g_glic_kg_dia_w * coalesce(qt_peso_ajustado_w, qt_peso_w);


	if (VarCalculaQuantidade_w = 'N') then
		qt_grama_nitrogenio_w	:= dividir_sem_round((qt_diaria_prot_w * 16)::numeric,100);
		qt_kcal_prot_w			:= qt_g_Prot_dia_w * 4;
	else
		select	max(qt_grama_nitrogenio),
				max(a.nr_sequencia)
		into STRICT		qt_grama_nitrogenio_1w,
				nr_sequencia_teste_w
		from		nut_elemento b,
				nut_pac_elemento a
		where	a.nr_seq_nut_pac	= nr_sequencia_p
		and		a.nr_seq_elemento	= b.nr_sequencia
		and		b.ie_tipo_elemento	= 'P';

		select	max(qt_grama_nitrogenio)
		into STRICT		qt_grama_nitrogenio_2w
		from		nut_elemento b,
				nut_pac_elemento a
		where	a.nr_seq_nut_pac	= nr_sequencia_p
		and		a.nr_seq_elemento	= b.nr_sequencia
		and		a.nr_sequencia	<> nr_sequencia_teste_w
		and		b.ie_tipo_elemento	= 'P';

		qt_grama_nitrogenio_w	:= coalesce(qt_grama_nitrogenio_2w,0) + coalesce(qt_grama_nitrogenio_1w,0);
		qt_kcal_prot_w			:= qt_grama_nitrogenio_w * 6.25 * 4;
	end if;

	qt_kcal_lip_w			:= qt_g_Lip_dia_w * qt_formula_lipideo_w;
	qt_kcal_glic_w			:= qt_g_glic_dia_w * qt_formula_carb_w;
	qt_rel_cal_nit_w        := dividir_sem_round(qt_kcal_nao_proteico_w,round((qt_grama_nitrogenio_w)::numeric,2));



	pr_conc_proteina_solucao_w	:= dividir_sem_round((qt_proteina_w)::numeric, 4);
	pr_conc_glic_solucao_w		:= dividir_sem_round(qt_carboidrato_w, qt_formula_carb_w);
	qt_grama_proteina_kg_dia_w  := dividir_sem_round(pr_conc_proteina_solucao_w, coalesce(qt_peso_ajustado_w, qt_peso_w));

	update	Nut_pac
	set		qt_grama_nitrogenio			= qt_grama_nitrogenio_w,
			qt_kcal_total				= qt_kcal_total_w,
			qt_kcal_kg					= qt_kcal_kg_w,
			qt_rel_cal_nit				= qt_rel_cal_nit_w,
			qt_kcal_proteico			= qt_kcal_proteico_w,
			qt_kcal_nao_proteico		= qt_kcal_nao_proteico_w,
			qt_kcal_proteina			= qt_proteina_w,
			qt_kcal_lipidio				= qt_lipidio_w,
			qt_kcal_carboidrato			= qt_carboidrato_w,
			pr_proteina					= pr_proteina_w,
			pr_Lipidio					= pr_Lipidio_w,
			pr_carboidrato				= pr_carboidrato_w,
			pr_conc_proteina_solucao	= pr_conc_proteina_solucao_w,
			pr_conc_lipidio_solucao		= pr_conc_lipidio_solucao_w,
			pr_conc_glic_solucao		= pr_conc_glic_solucao_w,
			qt_gotejo_npt				= CASE WHEN ie_calcula_vel_w='S' THEN qt_gotejo_w  ELSE qt_gotejo_npt END ,
			qt_volume_diario			= qt_volume_total_w,
			qt_volume_princ				= qt_volume_princ_w,
			qt_vel_inf_glicose			= qt_vel_inf_glicose_w,
			qt_peso_ajustado			= qt_peso_ajustado_w,
			qt_tmb						= qt_tmb_w,
			qt_grama_proteina_kg_dia	= qt_grama_proteina_kg_dia_w
	where	nr_sequencia			= nr_sequencia_p;
elsif (ie_forma_w = 'P') then
	CALL Calcular_Nut_Elem_Adulto(nr_sequencia_p,nm_usuario_p);

	select	coalesce(sum(qt_elem_kg_dia),0),
			coalesce(sum(Obter_vol_elem_nut_pac_ad(a.nr_sequencia)),0),
			coalesce(sum(qt_diaria),0),
			coalesce(sum(qt_kcal),0),
			max(Obter_n2_elem_nut_pac(a.nr_sequencia))
	into STRICT	qt_g_prot_kg_dia_w,
			qt_vol_prot_w,
			qt_diaria_prot_w,
			qt_kcal_proteico_w,
			qt_nitrogenio_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'P'
	and 	coalesce(a.ie_prod_adicional,'N') = 'N';

	select	coalesce(sum(qt_kcal),0),
			coalesce(sum(Obter_vol_elem_nut_pac_ad(a.nr_sequencia)),0),
			coalesce(sum(qt_diaria),0)
	into STRICT	qt_kcal_carboidrato_w,
			qt_vol_caboidrato_w,
			qt_diaria_carbo_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'C'
	and 	coalesce(a.ie_prod_adicional,'N') = 'N';

	select	coalesce(sum(qt_kcal),0)
	into STRICT	qt_kcal_nao_proteico_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	<> 'P'
	and		coalesce(a.ie_prod_adicional,'N') = 'N';

	select	coalesce(sum(qt_elem_kg_dia),0),
			coalesce(sum(Obter_vol_elem_nut_pac_ad(a.nr_sequencia)),0),
			coalesce(sum(qt_kcal),0),
			coalesce(sum(qt_diaria),0)
	into STRICT	qt_g_lip_kg_dia_w,
			qt_vol_lip_w,
			qt_kcal_lipidio_w,
			qt_diaria_lip_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		b.ie_tipo_elemento	= 'L'
	and 	coalesce(a.ie_prod_adicional,'N') = 'N';

	select	coalesce(sum(qt_kcal),0)
	into STRICT	qt_kcal_total_w
	from	nut_elemento b,
			nut_pac_elemento a
	where	a.nr_seq_nut_pac	= nr_sequencia_p
	and		a.nr_seq_elemento	= b.nr_sequencia
	and		coalesce(a.ie_prod_adicional,'N') = 'N';

	select	coalesce(sum(c.qt_volume),0)
	into STRICT	qt_volume_total_w
	from	nut_pac_elem_mat c,
			nut_pac a
	where	a.nr_sequencia	= nr_sequencia_p
	and		a.nr_sequencia	= c.nr_seq_nut_pac
	and		Obter_Se_Soma_Volume(a.nr_sequencia,c.nr_sequencia) = 'S';

	open C04;
	loop
	fetch C04 into cd_material_aux_w,
				   qt_volume_princ_ww;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		qt_volume_princ_w := qt_volume_princ_w + qt_volume_princ_ww;
		end;
	end loop;
	close C04;

	if (ie_calculo_auto_w	<> 'N') then
		qt_gotejo_w			:= round(dividir_sem_round(qt_volume_total_w,coalesce(QT_HORA_INF_w, nr_horas_validade_w)));
	end if;

	select	max(qt_elem_kg_dia)
	into STRICT	qt_elem_kg_dia_w
	from	nut_pac_elemento
	where	nr_seq_nut_pac	= nr_sequencia_p
	and		nr_seq_elemento	= nr_seq_glicose_w;

	qt_vel_inf_glicose_w	:= dividir_sem_round(qt_elem_kg_dia_w,1.44);
	qt_g_Glic_kg_dia_w		:= round((qt_vel_inf_glicose_w * 1.44)::numeric,2);
	qt_g_lip_dia_w			:= qt_g_Lip_kg_dia_w * coalesce(qt_peso_ajustado_w, qt_peso_w);
	qt_g_prot_dia_w			:= qt_g_Prot_kg_dia_w * coalesce(qt_peso_ajustado_w, qt_peso_w);
	qt_g_glic_dia_w			:= qt_g_glic_kg_dia_w * coalesce(qt_peso_ajustado_w, qt_peso_w);

	if (VarCalculaQuantidade_w = 'N') then
		qt_grama_nitrogenio_w		:= dividir_sem_round((qt_diaria_prot_w * 16)::numeric,100);
		qt_kcal_prot_w			:= qt_g_Prot_dia_w * 4;
	else
		select	max(qt_grama_nitrogenio),
				max(a.nr_sequencia)
		into STRICT	qt_grama_nitrogenio_1w,
				nr_sequencia_teste_w
		from	nut_elemento b,
				nut_pac_elemento a
		where	a.nr_seq_nut_pac	= nr_sequencia_p
		and		a.nr_seq_elemento	= b.nr_sequencia
		and		b.ie_tipo_elemento	= 'P';

		qt_grama_nitrogenio_w	:= coalesce(qt_grama_nitrogenio_1w,0);
		qt_kcal_prot_w			:= qt_grama_nitrogenio_w * 6.25 * 4;
	end if;

	qt_kcal_lip_w					:= qt_g_Lip_dia_w * qt_formula_lipideo_w;
	qt_kcal_glic_w					:= qt_g_glic_dia_w * qt_formula_carb_w;
	qt_kcal_kg_w					:= dividir_sem_round(qt_kcal_total_w, coalesce(qt_peso_ajustado_w, qt_peso_w));
	qt_rel_cal_nit_w               	:= dividir_sem_round(qt_kcal_nao_proteico_w,round((qt_grama_nitrogenio_w)::numeric,2));
	pr_proteina_w					:= dividir_sem_round((qt_kcal_proteico_w * 100),qt_kcal_total_w);
	pr_Lipidio_w					:= dividir_sem_round((qt_kcal_lipidio_w * 100),qt_kcal_total_w);
	pr_carboidrato_w				:= dividir_sem_round((qt_kcal_carboidrato_w * 100),qt_kcal_total_w);
	pr_conc_proteina_solucao_w		:= dividir_sem_round((qt_kcal_proteico_w * 100), (qt_vol_caboidrato_w + qt_vol_lip_w));
	pr_conc_lipidio_solucao_w		:= dividir_sem_round((qt_kcal_lipidio_w * 100), (qt_vol_prot_w + qt_vol_caboidrato_w));
	pr_conc_glic_solucao_w			:= dividir_sem_round((qt_kcal_carboidrato_w * 100), (qt_vol_prot_w + qt_vol_lip_w));
	qt_grama_proteina_kg_dia_w  	:= dividir_sem_round(qt_diaria_prot_w, coalesce(qt_peso_ajustado_w,qt_peso_w));

	if ((pr_carboidrato_w + pr_Lipidio_w + pr_proteina_w) < 100) then
		pr_carboidrato_w := 100 - (pr_Lipidio_w + pr_proteina_w);
	end if;

	update	Nut_pac
	set		qt_grama_nitrogenio			= qt_grama_nitrogenio_w,
			qt_kcal_total				= qt_kcal_total_w,
			qt_kcal_kg					= qt_kcal_kg_w,
			qt_rel_cal_nit				= qt_rel_cal_nit_w,
			qt_kcal_proteico			= qt_kcal_proteico_w,
			qt_kcal_nao_proteico		= qt_kcal_nao_proteico_w,
			qt_kcal_proteina			= qt_kcal_proteico_w,
			qt_kcal_lipidio				= qt_kcal_lipidio_w,
			qt_kcal_carboidrato			= qt_kcal_carboidrato_w,
			pr_proteina					= pr_proteina_w,
			pr_Lipidio					= pr_Lipidio_w,
			pr_carboidrato				= pr_carboidrato_w,
			pr_conc_proteina_solucao	= qt_diaria_prot_w,
			pr_conc_lipidio_solucao		= qt_diaria_lip_w,
			pr_conc_glic_solucao		= qt_diaria_carbo_w,
			qt_gotejo_npt				= CASE WHEN ie_calcula_vel_w='S' THEN qt_gotejo_w  ELSE qt_gotejo_npt END ,
			qt_volume_diario			= qt_volume_total_w,
			qt_volume_princ				= round((qt_volume_princ_w)::numeric,2),
			qt_vel_inf_glicose			= qt_vel_inf_glicose_w,
			qt_peso_ajustado			= qt_peso_ajustado_w,
			qt_tmb						= qt_tmb_w,
			qt_grama_proteina_kg_dia	= qt_grama_proteina_kg_dia_w
	where	nr_sequencia			= nr_sequencia_p;
end if;

select	qt_kcal_total_origem
into STRICT	qt_kcal_total_origem_w
from	nut_pac
where	nr_sequencia = nr_sequencia_p;

if (coalesce(qt_kcal_total_origem_w::text, '') = '') then
	update	nut_pac
	set		qt_kcal_total_origem = qt_kcal_total_w
	where	nr_sequencia = nr_sequencia_p;
	commit;
end if;

CALL calcular_osmolaridade_nut_pac(nr_sequencia_p, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_nut_pac_adulto ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

