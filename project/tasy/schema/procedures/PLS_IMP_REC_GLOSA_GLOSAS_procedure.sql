-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_imp_rec_glosa_glosas ( nr_seq_conta_imp_p bigint, nr_seq_proc_imp_p bigint, nr_seq_mat_imp_p bigint, cd_glosa_p text, ds_justificativa_p text, nr_seq_protocolo_cta_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Importar as glosas apresentadas no Recurso de Glosa conforme padrao TISS
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  x] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


--Dados da glosa
nr_seq_glosa_conta_w	pls_conta_glosa.nr_sequencia%type;
nr_seq_motivo_glosa_w	tiss_motivo_glosa.nr_sequencia%type;
nr_seq_protocolo_cta_w	pls_rec_glosa_conta_imp.nr_seq_protocolo_cta%type;
nr_seq_protocolo_w	pls_rec_glosa_prot_cta_imp.nr_seq_protocolo%type;

--Dados da conta
nr_seq_conta_w		pls_conta.nr_sequencia%type;
nr_seq_conta_proc_w	pls_conta_proc.nr_sequencia%type;
nr_seq_conta_mat_w	pls_conta_mat.nr_sequencia%type;

--Dados da validacao da glosa
ie_tipo_glosa_w		pls_rec_glosa_glosas_imp.ie_tipo_glosa%type;

nr_seq_conta_imp_w	pls_rec_glosa_conta_imp.nr_sequencia%type;
cd_versao_tiss_w	pls_versao_tiss.cd_versao_tiss%type;


BEGIN

cd_versao_tiss_w := pls_obter_versao_tiss;

--Obter a sequencia da glosa lancada
select 	max(nr_sequencia)
into STRICT	nr_seq_motivo_glosa_w
from	tiss_motivo_glosa
where 	cd_motivo_tiss = cd_glosa_p;

--Obter a conta apresentada no recurso
select	max(nr_seq_conta),
	max(nr_seq_protocolo_cta)
into STRICT	nr_seq_conta_w,
	nr_seq_protocolo_cta_w
from	pls_rec_glosa_conta_imp
where	nr_sequencia = nr_seq_conta_imp_p;

nr_seq_conta_imp_w	:= nr_seq_conta_imp_p;

if (nr_seq_protocolo_cta_w IS NOT NULL AND nr_seq_protocolo_cta_w::text <> '') then
	select	max(nr_seq_protocolo)
	into STRICT	nr_seq_protocolo_w
	from	pls_rec_glosa_prot_cta_imp
	where	nr_sequencia = nr_seq_protocolo_cta_w;
end if;

if (nr_seq_proc_imp_p IS NOT NULL AND nr_seq_proc_imp_p::text <> '') then
	--Obter o procedimento apresentado no recurso
	select	max(nr_seq_conta_proc),
		max(nr_seq_conta_imp)
	into STRICT	nr_seq_conta_proc_w,
		nr_seq_conta_imp_w
	from	pls_rec_glosa_proc_imp
	where	nr_sequencia = nr_seq_proc_imp_p;
end if;

if (nr_seq_mat_imp_p IS NOT NULL AND nr_seq_mat_imp_p::text <> '') then
	--Obter o material apresentado no recurso
	select	max(nr_seq_material),
		max(nr_seq_conta_imp)
	into STRICT	nr_seq_conta_mat_w,
		nr_seq_conta_imp_w
	from	pls_rec_glosa_mat_imp
	where	nr_sequencia = nr_seq_mat_imp_p;
end if;

if (nr_seq_proc_imp_p IS NOT NULL AND nr_seq_proc_imp_p::text <> '') and (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_glosa_conta_w
	from	pls_conta_glosa
	where	nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w
	and	((nr_seq_conta		= nr_seq_conta_w) or (coalesce(nr_seq_conta::text, '') = ''))
	and	nr_seq_conta_proc	= nr_seq_conta_proc_w;
elsif (nr_seq_mat_imp_p IS NOT NULL AND nr_seq_mat_imp_p::text <> '') and (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_glosa_conta_w
	from	pls_conta_glosa
	where	nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w
	and	((nr_seq_conta		= nr_seq_conta_w) or (coalesce(nr_seq_conta::text, '') = ''))
	and	nr_seq_conta_mat	= nr_seq_conta_mat_w;
elsif (coalesce(nr_seq_proc_imp_p::text, '') = '') and (coalesce(nr_seq_mat_imp_p::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_glosa_conta_w
	from	pls_conta_glosa
	where	nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w
	and	nr_seq_conta		= nr_seq_conta_w
	and	coalesce(nr_seq_conta_proc::text, '') = ''
	and	coalesce(nr_seq_conta_mat::text, '') = '';
end if;

-- Falta verificar o processo para obter a sequencia do participante 


/* Verificar se a glosa foi apresentada para o procedimento ou para a Guia */

if (nr_seq_proc_imp_p IS NOT NULL AND nr_seq_proc_imp_p::text <> '') then
	ie_tipo_glosa_w := 'PC';
elsif (nr_seq_mat_imp_p IS NOT NULL AND nr_seq_mat_imp_p::text <> '') then
	ie_tipo_glosa_w := 'MT';
elsif (nr_seq_conta_imp_w IS NOT NULL AND nr_seq_conta_imp_w::text <> '') then
	ie_tipo_glosa_w	:= 'G';
end if;

if (cd_versao_tiss_w >= '4.00.01') then
	if (length(ds_justificativa_p) > 500) then
		update	pls_rec_glosa_protocolo
		set	ie_situacao	= 'RE'
		where	nr_sequencia	= nr_seq_protocolo_w;
		
		commit;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(357932);
	end if;
else
	if (length(ds_justificativa_p) > 150) then
		update	pls_rec_glosa_protocolo
		set	ie_situacao	= 'RE'
		where	nr_sequencia	= nr_seq_protocolo_w;
		
		commit;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(357932);
	end if;
end if;

insert into pls_rec_glosa_glosas_imp(
	nr_sequencia, nr_seq_conta_imp, dt_atualizacao,
	nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
	nr_seq_proc_imp, nr_seq_mat_imp, nr_seq_glosa_conta,
	nr_seq_proc_partic, cd_glosa, ds_justificativa,
	ie_tipo_glosa, nr_seq_protocolo_cta)
values ( nextval('pls_rec_glosa_glosas_imp_seq'), nr_seq_conta_imp_w, clock_timestamp(),
	nm_usuario_p, clock_timestamp(), nm_usuario_p,
	nr_seq_proc_imp_p, nr_seq_mat_imp_p, nr_seq_glosa_conta_w,
	null, cd_glosa_p, ds_justificativa_p,
	ie_tipo_glosa_w, nr_seq_protocolo_cta_p);
	
if (ie_tipo_glosa_w = 'G') then
	update	pls_rec_glosa_conta_imp
	set	ds_justificativa_prest	= ds_justificativa_p
	where	nr_sequencia		= nr_seq_conta_imp_w;
elsif (ie_tipo_glosa_w = 'PC') then
	update	pls_rec_glosa_proc_imp
	set	ds_justificativa_prest	= ds_justificativa_p
	where	nr_sequencia		= nr_seq_proc_imp_p;
elsif (ie_tipo_glosa_w = 'MT') then
	update	pls_rec_glosa_mat_imp
	set	ds_justificativa_prest	= ds_justificativa_p
	where	nr_sequencia		= nr_seq_mat_imp_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_rec_glosa_glosas ( nr_seq_conta_imp_p bigint, nr_seq_proc_imp_p bigint, nr_seq_mat_imp_p bigint, cd_glosa_p text, ds_justificativa_p text, nr_seq_protocolo_cta_p bigint, nm_usuario_p text) FROM PUBLIC;

