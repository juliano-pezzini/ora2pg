-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_limite_proced_agenda ( cd_procedimento_p bigint, cd_perfil_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_tipo_agenda_p bigint, dt_agenda_p timestamp, cd_convenio_p bigint default null, cd_medico_p text default null, ie_acao_regra_p INOUT text DEFAULT NULL) AS $body$
DECLARE

 
qt_regra_w		bigint;
cd_area_procedimento_w	bigint;
cd_especialidade_w	bigint;
cd_grupo_proc_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
cd_perfil_w		bigint;
dt_agenda_w		timestamp;
ie_acao_regra_w		varchar(1);
ie_periodo_w		varchar(1);
qt_proced_w		bigint;
qt_limite_w		bigint;
dt_agenda_fim_w 	timestamp;
cd_convenio_w		integer;
cd_medico_w		varchar(10);
ie_dia_semana_w		varchar(2);

 

BEGIN 
dt_agenda_w 	:= dt_agenda_p;
ie_dia_semana_w	:= pkg_date_utils.get_WeekDay(dt_agenda_p);
 
if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then 
 
	begin 
	select	coalesce(cd_area_procedimento,0), 
		coalesce(cd_especialidade,0), 
		coalesce(cd_grupo_proc,0) 
	into STRICT	cd_area_procedimento_W, 
		cd_especialidade_w, 
		cd_grupo_proc_w 
	from	estrutura_procedimento_v 
	where	cd_procedimento		= cd_procedimento_p 
	and	ie_origem_proced	= ie_origem_proced_p;
	exception 
		when others then 
			cd_area_procedimento_w	:= 0;
			cd_especialidade_w	:= 0;
			cd_grupo_proc_w		:= 0;
	end;
		 
	select	max(ie_periodo), 
		max(qt_limite),    
		max(ie_acao_regra), 
		max(coalesce(cd_area_procedimento,0)), 
		max(coalesce(cd_especialidade,0)), 
		max(coalesce(cd_grupo_proc,0)),	 
		max(coalesce(cd_procedimento,0)), 
		max(coalesce(ie_origem_proced,0)), 
		max(coalesce(nr_seq_proc_interno,0)), 
		max(coalesce(cd_convenio,0)), 
		max(coalesce(cd_medico,'X')) 
	into STRICT	ie_periodo_w, 
		qt_limite_w, 
		ie_acao_regra_w, 
		cd_area_procedimento_w, 
		cd_especialidade_w, 
		cd_grupo_proc_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_proc_interno_w, 
		cd_convenio_w, 
		cd_medico_w 
	from	regra_limite_proced_agenda 
	where	coalesce(cd_area_procedimento, cd_area_procedimento_w)	= cd_area_procedimento_w 
	and	coalesce(cd_especialidade, cd_especialidade_w)		= cd_especialidade_w 
	and	coalesce(cd_grupo_proc, cd_grupo_proc_w)			= cd_grupo_proc_w 
	and	coalesce(cd_procedimento, cd_procedimento_p)			= cd_procedimento_p 
	and	coalesce(ie_origem_proced, ie_origem_proced_p)		= ie_origem_proced_p 
	and	coalesce(nr_seq_proc_interno, coalesce(nr_seq_proc_interno_p,0))	= coalesce(nr_seq_proc_interno_p,0) 
	and	coalesce(cd_convenio, coalesce(cd_convenio_p,0))			= coalesce(cd_convenio_p,0) 
	and	coalesce(cd_medico, coalesce(cd_medico_p,'X'))			= coalesce(cd_medico_p,'X') 
	and	coalesce(cd_perfil, cd_perfil_p)				= cd_perfil_p 
	and	((coalesce(ie_dia_semana,ie_dia_semana_w) = ie_dia_semana_w) or ((coalesce(ie_dia_semana,ie_dia_semana_w) = 9) and (ie_dia_semana_w not in (7,1))));
 
	if (cd_tipo_agenda_p in (1,2)) then 
		if (cd_area_procedimento_w > 0) then 
			select	count(*) 
			into STRICT	qt_proced_w 
			from	agenda_paciente a, 
				estrutura_procedimento_v b 
			where	trunc(a.dt_agenda,'dd') between obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'I') and obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'F') 
			and	a.cd_procedimento					= b.cd_procedimento 
			and	a.ie_origem_proced					= b.ie_origem_proced 
			and	obter_tipo_agenda(a.cd_agenda) 				= cd_tipo_agenda_p 
			and	coalesce(b.cd_area_procedimento, cd_area_procedimento_w)	= cd_area_procedimento_w 
			and	((coalesce(a.cd_medico,cd_medico_w)				= cd_medico_w) or (cd_medico_w = 'X')) 
			and	((coalesce(a.cd_convenio,cd_convenio_w)			= cd_convenio_w) or (cd_convenio_w = 0));
		elsif (cd_especialidade_w > 0) then 
			select	count(*) 
			into STRICT	qt_proced_w 
			from	agenda_paciente a, 
				estrutura_procedimento_v b 
			where	trunc(a.dt_agenda,'dd') between obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'I') and obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'F') 
			and	a.cd_procedimento					= b.cd_procedimento 
			and	a.ie_origem_proced					= b.ie_origem_proced 
			and	obter_tipo_agenda(a.cd_agenda) 				= cd_tipo_agenda_p 
			and	coalesce(b.cd_especialidade, cd_especialidade_w)		= cd_especialidade_w 
			and	((coalesce(a.cd_medico,cd_medico_w)				= cd_medico_w) or (cd_medico_w = 'X')) 
			and	((coalesce(a.cd_convenio,cd_convenio_w)			= cd_convenio_w) or (cd_convenio_w = 0));
		elsif (cd_grupo_proc_w > 0) then 
			select	count(*) 
			into STRICT	qt_proced_w 
			from	agenda_paciente a, 
				estrutura_procedimento_v b 
			where	trunc(a.dt_agenda,'dd') between obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'I') and obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'F') 
			and	a.cd_procedimento					= b.cd_procedimento 
			and	a.ie_origem_proced					= b.ie_origem_proced 
			and	obter_tipo_agenda(a.cd_agenda) 				= cd_tipo_agenda_p 
			and	coalesce(b.cd_grupo_proc, cd_grupo_proc_w)			= cd_grupo_proc_w 
			and	((coalesce(a.cd_medico,cd_medico_w)				= cd_medico_w) or (cd_medico_w = 'X')) 
			and	((coalesce(a.cd_convenio,cd_convenio_w)			= cd_convenio_w) or (cd_convenio_w = 0));
		elsif (cd_procedimento_w > 0) and (ie_origem_proced_w > 0) then 
			select	count(*) 
			into STRICT	qt_proced_w 
			from	agenda_paciente a, 
				estrutura_procedimento_v b 
			where	trunc(a.dt_agenda,'dd') between obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'I') and obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'F') 
			and	a.cd_procedimento					= b.cd_procedimento 
			and	a.ie_origem_proced					= b.ie_origem_proced 
			and	coalesce(a.cd_procedimento, cd_procedimento_w)		= cd_procedimento_w 
			and	obter_tipo_agenda(a.cd_agenda) 				= cd_tipo_agenda_p 
			and	coalesce(a.ie_origem_proced, ie_origem_proced_w)		= ie_origem_proced_w 
			and	((coalesce(a.cd_medico,cd_medico_w)				= cd_medico_w) or (cd_medico_w = 'X')) 
			and	((coalesce(a.cd_convenio,cd_convenio_w)			= cd_convenio_w) or (cd_convenio_w = 0));
		elsif (nr_seq_proc_interno_w > 0) then 
			select	count(*) 
			into STRICT	qt_proced_w 
			from	agenda_paciente a, 
				estrutura_procedimento_v b 
			where	trunc(a.dt_agenda,'dd') between obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'I') and obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'F') 
			and	a.cd_procedimento					= b.cd_procedimento 
			and	a.ie_origem_proced					= b.ie_origem_proced 
			and	obter_tipo_agenda(a.cd_agenda) 				= cd_tipo_agenda_p 
			and	coalesce(a.nr_seq_proc_interno, nr_seq_proc_interno_w)	= nr_seq_proc_interno_w 
			and	((coalesce(a.cd_medico,cd_medico_w)				= cd_medico_w) or (cd_medico_w = 'X')) 
			and	((coalesce(a.cd_convenio,cd_convenio_w)			= cd_convenio_w) or (cd_convenio_w = 0));
		end if;		
 
	elsif (cd_tipo_agenda_p in (3,4,5)) then 
		if (cd_area_procedimento_w > 0) then 
			select	count(*) 
			into STRICT	qt_proced_w 
			from	agenda_consulta a, 
				estrutura_procedimento_v b 
			where	trunc(a.dt_agenda,'dd') between obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'I') and obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'F') 
			and	a.cd_procedimento					= b.cd_procedimento 
			and	a.ie_origem_proced					= b.ie_origem_proced 
			and	coalesce(b.cd_area_procedimento, cd_area_procedimento_w)	= cd_area_procedimento_w;
		 
		elsif (cd_especialidade_w > 0) then 
			select	count(*) 
			into STRICT	qt_proced_w 
			from	agenda_consulta a, 
				estrutura_procedimento_v b 
			where	trunc(a.dt_agenda,'dd') between obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'I') and obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'F') 
			and	a.cd_procedimento					= b.cd_procedimento 
			and	a.ie_origem_proced					= b.ie_origem_proced 
			and	coalesce(b.cd_especialidade, cd_especialidade_w)		= cd_especialidade_w;
 
		elsif (cd_grupo_proc_w > 0) then 
			select	count(*) 
			into STRICT	qt_proced_w 
			from	agenda_consulta a, 
				estrutura_procedimento_v b 
			where	trunc(a.dt_agenda,'dd') between obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'I') and obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'F') 
			and	a.cd_procedimento					= b.cd_procedimento 
			and	a.ie_origem_proced					= b.ie_origem_proced 
			and	coalesce(b.cd_grupo_proc, cd_grupo_proc_w)			= cd_grupo_proc_w;
				 
		elsif (cd_procedimento_w > 0) and (ie_origem_proced_w > 0) then 
			select	count(*) 
			into STRICT	qt_proced_w 
			from	agenda_consulta a, 
				estrutura_procedimento_v b 
			where	trunc(a.dt_agenda,'dd') between obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'I') and obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'F') 
			and	a.cd_procedimento					= b.cd_procedimento 
			and	a.ie_origem_proced					= b.ie_origem_proced 
			and	coalesce(a.cd_procedimento, cd_procedimento_w)		= cd_procedimento_w 
			and	coalesce(a.ie_origem_proced, ie_origem_proced_w)		= ie_origem_proced_w;
 
		elsif (nr_seq_proc_interno_w > 0) then 
			select	count(*) 
			into STRICT	qt_proced_w 
			from	agenda_consulta a, 
				estrutura_procedimento_v b 
			where	trunc(a.dt_agenda,'dd') between obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'I') and obter_limite_regra_proc_agenda(dt_agenda_w, ie_periodo_w, 'F') 
			and	a.cd_procedimento					= b.cd_procedimento 
			and	a.ie_origem_proced					= b.ie_origem_proced 
			and	coalesce(a.nr_seq_proc_interno, nr_seq_proc_interno_w)	= nr_seq_proc_interno_w;
			 
		end if;		
	end if;
	if (qt_proced_w >= qt_limite_w) then 
		ie_acao_regra_p := ie_acao_regra_w;
	end if;
 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_limite_proced_agenda ( cd_procedimento_p bigint, cd_perfil_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_tipo_agenda_p bigint, dt_agenda_p timestamp, cd_convenio_p bigint default null, cd_medico_p text default null, ie_acao_regra_p INOUT text DEFAULT NULL) FROM PUBLIC;

