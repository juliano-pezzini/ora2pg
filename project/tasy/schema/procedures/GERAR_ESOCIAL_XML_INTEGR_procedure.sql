-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_esocial_xml_integr ( nr_seq_lote_p bigint, nm_usuario_envio_p text, ds_autenticacao_p text, ds_codificacao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_existe_w		varchar(1);
jobno			bigint;
ds_comando_job_w	varchar(2000);

C01 CURSOR FOR
	-- falhas is not null, significa que já foi executado pelo menos uma vez, se já foi executado ao menos uma vez, apaga. durante a execução ele fica null
	SELECT	job
	from	job_v
	where	comando	like 'gerar_esocial_integr_pacote%'
	and	(falhas IS NOT NULL AND falhas::text <> '');

BEGIN

if (coalesce(nm_usuario_envio_p,'X') <> 'X') then
	select	coalesce(max('S'),'N') ie_existe
	into STRICT	ie_existe_w
	from	esocial_info_aux_envio;

	if (ie_existe_w = 'N') then
		insert into esocial_info_aux_envio(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nm_usuario_envio,
				ds_autenticacao,
				ds_codificacao)
			values (nextval('esocial_info_aux_envio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_envio_p,
				ds_autenticacao_p,
				ds_codificacao_p);
	else
		/* Existirá no máximo um registro na tabela */

		update	esocial_info_aux_envio
		set	nm_usuario_envio	= nm_usuario_envio_p,
			ds_autenticacao		= ds_autenticacao_p,
			ds_codificacao		= ds_codificacao_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp();
	end if;
end if;

-- Verificar se a job já existe, se existir remove
for r_C01_w in C01 loop
	dbms_job.remove(r_C01_w.job);
	commit;
end loop;

ds_comando_job_w	:= 'gerar_esocial_integr_pacote(' || nr_seq_lote_p || ','
							|| cd_estabelecimento_p || ','
							|| pls_util_pck.aspas_w || nm_usuario_p || pls_util_pck.aspas_w || ');';

-- Vai iniciar a procedure em 2.5 segundos após a conclusão desta e sempre joga a próxima execução para daqui a 30 segundos
dbms_job.submit(jobno, ds_comando_job_w, clock_timestamp() + interval '216000 seconds' * (1/24/60/60), 'sysdate + 30 * (1/24/60/60)');

update	esocial_lote
set	dt_geracao_xml	= clock_timestamp(),
	nm_usuario	= nm_usuario_p
where	nr_sequencia	= nr_seq_lote_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_esocial_xml_integr ( nr_seq_lote_p bigint, nm_usuario_envio_p text, ds_autenticacao_p text, ds_codificacao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

