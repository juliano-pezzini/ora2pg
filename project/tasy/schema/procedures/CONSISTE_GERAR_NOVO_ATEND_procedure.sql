-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_gerar_novo_atend (cd_pessoa_fisica_p text, nm_usuario_p text, ie_tipo_atend_p text, cd_estabelecimento_p bigint, cd_medico_resp_p text, ie_clinica_atual_p text, ds_erro_p INOUT text, nr_seq_classificacao_p bigint, ie_tipo_convenio_p text default null) AS $body$
DECLARE


ds_erro_w 		varchar(255)   := '';
qt_atend_w		integer;
qt_obito_w		integer;
qt_atend_inter_w	integer;
vl_parametro_w		varchar(2);
nr_atendimento_w	bigint;
cd_setoR_atendimento_w	bigint;
ie_tipo_atend_tiss_w	bigint;
nr_seq_classificacao_w	bigint;


BEGIN

vl_parametro_w  := obter_param_usuario(916, 16, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, vl_parametro_w );

IF (vl_parametro_w = 'N') THEN
	BEGIN
	SELECT	COUNT(*)
	INTO STRICT	qt_atend_w
	FROM	atendimento_paciente
	WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p
	AND	cd_estabelecimento = cd_estabelecimento_p
	AND 	coalesce(dt_cancelamento::text, '') = ''
	AND	coalesce(dt_alta::text, '') = '';
	IF (qt_atend_w > 0) THEN

		SELECT 	MAX(nr_atendimento)
		INTO STRICT	nr_atendimento_w
		FROM	atendimento_paciente
		WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p
		AND	cd_estabelecimento = cd_estabelecimento_p
		AND 	coalesce(dt_cancelamento::text, '') = ''
		AND	coalesce(dt_alta::text, '') = '';

		ds_erro_w       := WHEB_MENSAGEM_PCK.get_texto(277949,'NR_ATENDIMENTO='||nr_atendimento_w);
	END IF;
	END;
ELSIF (vl_parametro_w = 'A') THEN
	BEGIN
	SELECT	COUNT(*)
	INTO STRICT	qt_atend_w
	FROM	atendimento_paciente
	WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p
	AND	cd_estabelecimento = cd_estabelecimento_p
	AND 	coalesce(dt_cancelamento::text, '') = ''
	AND	coalesce(dt_alta::text, '') = '';
	IF (qt_atend_w > 0) THEN

		SELECT 	MAX(nr_atendimento)
		INTO STRICT	nr_atendimento_w
		FROM	atendimento_paciente
		WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p
		AND	cd_estabelecimento = cd_estabelecimento_p
		AND 	coalesce(dt_cancelamento::text, '') = ''
		AND	coalesce(dt_alta::text, '') = '';


		ds_erro_w       := WHEB_MENSAGEM_PCK.get_texto(89284,'DS_MENSAGEM='||WHEB_MENSAGEM_PCK.get_texto(277949,'NR_ATENDIMENTO='||nr_atendimento_w));
	END IF;
	END;
ELSIF (vl_parametro_w = 'T') AND (ie_tipo_atend_p = '1') THEN
	BEGIN
	SELECT	COUNT(*)
	INTO STRICT	qt_atend_inter_w
	FROM	atendimento_paciente
	WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p
	AND	cd_estabelecimento = cd_estabelecimento_p
	AND	coalesce(dt_alta::text, '') = ''
	AND 	coalesce(dt_cancelamento::text, '') = ''
	AND	ie_tipo_atendimento = 1;
	IF (qt_atend_inter_w > 0) THEN
		ds_erro_w       := WHEB_MENSAGEM_PCK.get_texto(277950,NULL);
	END IF;
	END;
ELSIF (vl_parametro_w = 'R') THEN

	SELECT	MAX(ie_tipo_atendimento)
	INTO STRICT	nr_atendimento_w
	FROM	atendimento_paciente_v a
	WHERE	a.cD_pessoA_fisica = cd_pessoa_fisica_p;

	ds_erro_w := consistir_atend_sem_alta(	0, ie_tipo_atend_p, cd_pessoa_fisica_p, cd_estabelecimento_p, NULL, NULL, ie_clinica_atual_p, ds_erro_w, ie_tipo_convenio_p);
ELSIF (vl_parametro_w = 'M') THEN
	BEGIN
	qt_atend_w := 0;

	SELECT	COUNT(*)
	INTO STRICT	qt_atend_w
	FROM	atendimento_paciente
	WHERE	cd_pessoa_fisica	= cd_pessoa_fisica_p
	AND	cd_estabelecimento	= cd_estabelecimento_p
	AND	cd_medico_resp		= cd_medico_resp_p
	AND 	coalesce(dt_cancelamento::text, '') = ''
	AND	coalesce(dt_alta::text, '') = '';

	IF (qt_atend_w > 0) THEN

		SELECT 	MAX(nr_atendimento)
		INTO STRICT	nr_atendimento_w
		FROM	atendimento_paciente
		WHERE	cd_pessoa_fisica	= cd_pessoa_fisica_p
		AND	cd_estabelecimento	= cd_estabelecimento_p
		AND	cd_medico_resp		= cd_medico_resp_p
		AND 	coalesce(dt_cancelamento::text, '') = ''
		AND	coalesce(dt_alta::text, '') = '';


		ds_erro_w       := WHEB_MENSAGEM_PCK.get_texto(277951,'NR_ATENDIMENTO='||nr_atendimento_w);
	END IF;
	END;
ELSIF (vl_parametro_w = 'E') THEN
BEGIN
	SELECT	COUNT(*)
	INTO STRICT	qt_atend_w
	FROM	atendimento_paciente
	WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p
	AND 	coalesce(dt_cancelamento::text, '') = ''
	AND	coalesce(dt_alta::text, '') = '';
	IF (qt_atend_w > 0) THEN

		SELECT 	MAX(nr_atendimento)
		INTO STRICT	nr_atendimento_w
		FROM	atendimento_paciente
		WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p
		AND 	coalesce(dt_cancelamento::text, '') = ''
		AND	coalesce(dt_alta::text, '') = '';


		ds_erro_w       := WHEB_MENSAGEM_PCK.get_texto(277949,'NR_ATENDIMENTO='||nr_atendimento_w);

	END IF;
	END;
ELSIF (vl_parametro_w = 'C') THEN
	BEGIN
	if (nr_seq_classificacao_p	= 0) then
		nr_seq_classificacao_w := null;
	else
	    nr_seq_classificacao_w := nr_seq_classificacao_p;
	end if;
	SELECT	COUNT(*)
	INTO STRICT	qt_atend_w
	FROM	atendimento_paciente
	WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p
	AND	cd_estabelecimento = cd_estabelecimento_p
	AND 	coalesce(dt_cancelamento::text, '') = ''
	AND (coalesce(nr_seq_classificacao,0) = coalesce(nr_seq_classificacao_w, 999))
	AND	coalesce(dt_alta::text, '') = '';
	IF (qt_atend_w > 0) THEN

		SELECT 	MAX(nr_atendimento)
		INTO STRICT	nr_atendimento_w
		FROM	atendimento_paciente
		WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p
		AND	cd_estabelecimento = cd_estabelecimento_p
		AND (coalesce(nr_seq_classificacao,0) = coalesce(nr_seq_classificacao_w, 999))
		AND 	coalesce(dt_cancelamento::text, '') = ''
		AND	coalesce(dt_alta::text, '') = '';

		ds_erro_w       := WHEB_MENSAGEM_PCK.get_texto(277949,'NR_ATENDIMENTO='||nr_atendimento_w);
		
	END IF;
	END;
ELSE
	BEGIN
	SELECT	COUNT(*)
	INTO STRICT	qt_obito_w
	FROM	motivo_alta b,
		atendimento_paciente a
	WHERE	a.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND	a.cd_estabelecimento = cd_estabelecimento_p
	AND	(a.dt_alta IS NOT NULL AND a.dt_alta::text <> '')
	AND 	coalesce(a.dt_cancelamento::text, '') = ''
	AND	a.cd_motivo_alta = b.cd_motivo_alta
	AND	b.ie_obito = 'S';
	IF (qt_obito_w > 0) THEN
		ds_erro_w       := WHEB_MENSAGEM_PCK.get_texto(277952,NULL);
	END IF;
	END;
END IF;

ds_erro_p	 := SUBSTR(ds_erro_w,1,255);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_gerar_novo_atend (cd_pessoa_fisica_p text, nm_usuario_p text, ie_tipo_atend_p text, cd_estabelecimento_p bigint, cd_medico_resp_p text, ie_clinica_atual_p text, ds_erro_p INOUT text, nr_seq_classificacao_p bigint, ie_tipo_convenio_p text default null) FROM PUBLIC;

