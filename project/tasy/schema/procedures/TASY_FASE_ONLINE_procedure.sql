-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_fase_online () AS $body$
DECLARE

nm_tabela_w				varchar(50):= null;
nm_indice_w				varchar(50):= null;
qt_tabela_w				bigint;
qt_processo_w			bigint:= 0;
ds_comando_w			varchar(2000);
ds_script_w				text;
retorno_w				integer;
c01						integer;
c02						integer;
C03						integer;
C04						integer;
c020					integer;
C050					integer;
ds_campo_copia_w		varchar(4000);
ds_campo_atualizacao_w	varchar(4000);
ds_campo_exclusao_w		varchar(4000);
ds_erro_w               varchar(4000);
ie_atualizar_w			varchar(1);
ie_copiar_w				varchar(1);
ie_exportar_w			varchar(1);
ie_excluir_w			varchar(1);
ie_online_w				varchar(1);
ie_enterprise_w			varchar(1);
nm_integridade_w		varchar(50):= null;
nm_fase_w           	cloud_upgrade_log.ds_mensagem%type := 'TASY_FASE_ONLINE';
nm_macro_fase_w     	cloud_upgrade_log.nm_fase_atualizacao%type := 'ONLINE';


C0100 CURSOR FOR
	SELECT	/*+parallel*/ ds_comando
	from	tabela_versao_offline_w
	where	nr_ordem < 100
	order by nr_ordem,nr_Sequencia;


BEGIN


delete from TABELA_VERSAO_OFFLINE_W;
commit;

begin
    -- Verifica se possui Enterprise
    select	count(1)
    into STRICT	ie_enterprise_w
    from	v$version
    where	upper(banner) like '%ENTERPRISE%'
    or 		upper(banner) like '%EE%EXTREME%PERF%';

    if (ie_enterprise_w = 1) then
        ie_enterprise_w := 'S';
        EXECUTE 'ALTER SESSION ENABLE PARALLEL DDL';
        EXECUTE 'ALTER SESSION ENABLE PARALLEL DML';
    else
        ie_enterprise_w := 'N';
        ie_online_w := 'N';
    end if;
exception
    when others then
    begin
        ds_erro_w := substr(sqlerrm,1,1000);
        CALL insert_log_cloud(null,null, 'atualizacao', 'Verificando Oracle Enterprise - '||ds_erro_w, null, nm_fase_w);
        ie_enterprise_w := 'N';
        ie_online_w := 'N';
    end;
end;

if (ie_enterprise_w = 'S') then
begin
    -- Verifica se possui Online OBS somente Enterprise
    select 	CASE WHEN value='TRUE' THEN 'S'  ELSE 'N' END
    into STRICT    ie_online_w
    from	gv$option 
    where	lower(parameter) = 'online index build'
    and	upper(value) = 'TRUE'  LIMIT 1;
exception
    when others then
    begin
        ds_erro_w := substr(sqlerrm,1,1000);
        CALL insert_log_cloud(null,null, 'atualizacao', 'Verificando Indices online - '||ds_erro_w, null, nm_fase_w);
        ie_enterprise_w := 'N';
        ie_online_w := 'N';
    end;
end;
end if;

--criacao da tabela de controle de constraints
begin
    select /*+parallel*/ (1) into STRICT retorno_w
    from    user_tables
    where   table_name = 'CONTROL_CONS_UPDATE_VERSION_W';

    if (retorno_w >= 1) then
        CALL exec_sql_dinamico('','truncate table CONTROL_CONS_UPDATE_VERSION_W');
    else
        ds_comando_w :=
        'create table CONTROL_CONS_UPDATE_VERSION_W ( '||
        ' CONST_NAME VARCHAR2(128) NOT NULL, CONST_ACTION VARCHAR2(10) NOT NULL, PRIMARY KEY (CONST_NAME, CONST_ACTION))';
        EXECUTE DS_COMANDO_W;
		ds_comando_w := 'alter procedure INSERT_CONTROL_CONST compile'
;
		EXECUTE DS_COMANDO_W;
		ds_comando_w := 'alter function CHK_EXIST_CMD_CONST_INSERT compile'
;
		EXECUTE DS_COMANDO_W;
    end if;
exception
    when others then
    begin
        ds_erro_w := substr(sqlerrm,1,1000);
        CALL insert_log_cloud(null,null, 'atualizacao', 'Verificando tabela de constrole de constraints - '||ds_erro_w, null, nm_fase_w);
    end;
end;

-- 1 consistencia
qt_processo_w := qt_processo_w + 1;
CALL gravar_processo_longo('Verificando consistencias',nm_fase_w,qt_processo_w);
CALL TASY_CONSISTIR_TASY_VERSAO();
-- 1 Fim consistencia
-- 2 Criacao de novas tabelas
ds_comando_w :=	' select	/*+parallel*/ a.nm_tabela ' ||
				' from		tasy_versao.tabela_sistema a ' ||
				' where	gerar_objeto_aplicacao(a.ds_aplicacao) = ''S'' ' ||
                ' and not exists (select	1 from	user_tables b where a.nm_tabela = b.table_name)';

C01 := dbms_sql.open_cursor;
dbms_sql.parse(C01, ds_comando_w, dbms_sql.native);
dbms_sql.define_column(C01, 1, nm_tabela_w, 50);		
retorno_w := dbms_sql.execute(C01);

while( dbms_sql.fetch_rows(C01) > 0 ) loop
	dbms_sql.column_value(C01, 1, nm_tabela_w);
	qt_processo_w := qt_processo_w + 1;
	CALL TASY_VERSAO_CRIA_ESTRUTURA(nm_tabela_w, 'C',ie_enterprise_w,20);
end loop;
dbms_sql.close_cursor(C01);
-- 2 Fim criacao de novas tabelas
-- 3 Criacao de novos indices
qt_processo_w := qt_processo_w + 1;
CALL gravar_processo_longo('Verificando indices a serem criadas',nm_fase_w,qt_processo_w);

ds_comando_w :=	' select /*+parallel*/ distinct b.nm_tabela, ' ||
				'			b.nm_indice ' ||
				' from	tasy_versao.indice b, ' ||
				'		tasy_versao.indice_atributo c, ' ||
				'		tasy_versao.tabela_sistema a ' ||
				' where	a.nm_tabela = b.nm_tabela ' ||
				' and   b.nm_tabela = c.nm_tabela ' ||
				' and   b.nm_indice = c.nm_indice ' ||
				' and	b.ie_tipo not in ('||chr(39)||'PK'||chr(39)||','||chr(39)||'IU'||chr(39)||','||chr(39)||'UK'||chr(39)||')'||
				' and	a.ie_temporaria not in ('||chr(39)||'G'||chr(39)||','||chr(39)||'GD'||chr(39)||')'||
				' and	not exists	( ' ||
				'		select 1 ' ||
				'		from	user_indexes c ' ||
				'		where	b.nm_tabela = c.table_name ' ||
				'		and		b.nm_indice = c.index_name) ' ||
				' order by 1 ';

C03 := dbms_sql.open_cursor;
dbms_sql.parse(C03, ds_comando_w, dbms_sql.native);
dbms_sql.define_column(C03, 1, nm_tabela_w, 50);		
dbms_sql.define_column(C03, 2, nm_indice_w, 50);
retorno_w := dbms_sql.execute(C03);

while( dbms_sql.fetch_rows(C03) > 0 ) loop
	dbms_sql.column_value(C03, 1, nm_tabela_w);
	dbms_sql.column_value(C03, 2, nm_indice_w);
	qt_processo_w := qt_processo_w + 1;
	CALL Tasy_versao_Criar_Indice(nm_tabela_w, nm_indice_w,ie_online_w,ie_enterprise_w,30);
end loop;
dbms_sql.close_cursor(C03);
-- 3 Fim criacao de novos indices
-- 4 Tentativa de migracao  de tabelas do TASY
qt_processo_w := qt_processo_w + 1;
CALL gravar_processo_longo('migracao de tabelas',nm_fase_w,qt_processo_w);

ds_comando_w :=	' 	select	/*+parallel*/ a.table_name, ' ||
				'			a.ie_copiar, ' ||
                '			a.ds_campo_copia, ' ||
				'			a.ie_atualizar, ' ||
                '			a.ds_campo_atualizacao, ' ||
                '			a.ie_excluir, ' ||
				'			a.ds_campo_exclusao, ' ||
                '           b.ie_exportar ' ||
				'	from tasy_versao.tasy_exptables a, ' ||
				'		 tasy_versao.tabela_sistema b ' || 
				'	where a.table_name = b.nm_tabela' ||
				'	and a.ie_tipo_tabela = ('||chr(39)||'T'||chr(39)||')'||
				'	order by a.ie_tipo_tabela, a.nr_ordem';

C050 := dbms_sql.open_cursor;
dbms_sql.parse(C050, ds_comando_w, dbms_sql.native);
dbms_sql.define_column(C050, 1, nm_tabela_w, 50);		
dbms_sql.define_column(C050, 2, ie_copiar_w, 1);
dbms_sql.define_column(C050, 3, ds_campo_copia_w, 4000);
dbms_sql.define_column(C050, 4, ie_atualizar_w, 1);
dbms_sql.define_column(C050, 5, ds_campo_atualizacao_w, 4000);
dbms_sql.define_column(C050, 6, ie_excluir_w, 1);
dbms_sql.define_column(C050, 7, ds_campo_exclusao_w, 4000);
dbms_sql.define_column(c050, 8, ie_exportar_w, 1);
retorno_w := dbms_sql.execute(C050);

while( dbms_sql.fetch_rows(C050) > 0 ) loop
	dbms_sql.column_value(C050, 1, nm_tabela_w);
	dbms_sql.column_value(C050, 2, ie_copiar_w);	
    dbms_sql.column_value(C050, 3, ds_campo_copia_w);
	dbms_sql.column_value(C050, 4, ie_atualizar_w);	
	dbms_sql.column_value(C050, 5, ds_campo_atualizacao_w);
	dbms_sql.column_value(C050, 6, ie_excluir_w);
    dbms_sql.column_value(C050, 7, ds_campo_exclusao_w);
    dbms_sql.column_value(c050, 8, ie_exportar_w);

	qt_processo_w := qt_processo_w + 1;
	CALL gravar_processo_longo('migracao de tabelas ',nm_fase_w,qt_processo_w);

	if ((ie_copiar_w = 'S') or (ie_atualizar_w = 'S') or (ie_excluir_w = 'S')) then

        CALL mudar_Integridade_versao(nm_tabela_w,'Disable',35,ds_campo_copia_w,ds_campo_atualizacao_w,ie_atualizar_w,ds_campo_exclusao_w,ie_excluir_w);

        if (ie_excluir_w = 'S' AND ie_exportar_w = 'S') then
            CALL tasy_versao_excluir_tabela(nm_tabela_w,ds_campo_exclusao_w,40);
        end if;

		if (ie_atualizar_w = 'S') then
			CALL TASY_VERSAO_ATUALIZAR_TABELA(nm_tabela_w,ds_campo_atualizacao_w,45);	
		end if;
		
		if (ie_copiar_w = 'S') then
            CALL TASY_VERSAO_COPIAR_TABELA(nm_tabela_w,ds_campo_copia_w,50);
        end if;

        if (nm_tabela_w = 'TASY_PADRAO_IMAGEM') then
            insert into TABELA_VERSAO_OFFLINE_W(nr_sequencia, nr_ordem, ds_comando, ds_log) values (nextval('tabela_versao_offline_w_seq'),55,'exec TASY_VERSAO_ATUALIZA_LONG_RAW('''||nm_tabela_w||''',''where exists (select 1 from tasy_versao.tasy_padrao_imagem b where a.nr_sequencia = b.nr_sequencia and a.ie_imagem is null and b.ie_imagem is not null)'')','D');
            commit;
        end if;

        CALL mudar_Integridade_versao(nm_tabela_w,'enable',60,ds_campo_copia_w,ds_campo_atualizacao_w,ie_atualizar_w,ds_campo_exclusao_w,ie_excluir_w);
	end if;

end loop;
dbms_sql.close_cursor(C050);

-- 5 execucao dos scripts ONLINE
open C0100;
loop
fetch C0100 into	
	ds_script_w;
EXIT WHEN NOT FOUND; /* apply on C0100 */
	begin	
		CALL tasy_versao_executa_comando('Atualizacao',ds_script_w, 'TASY_FASE_ONLINE');
	end;
end loop;
close C0100;
-- 5 Fim execucao dos scripts ONLINE
--limpar tabela de controle das constraints
CALL exec_sql_dinamico('','truncate table CONTROL_CONS_UPDATE_VERSION_W');

-- 10 Inicio migracao inicial
qt_processo_w := qt_processo_w + 1;
CALL gravar_processo_longo('Inicializando ',nm_fase_w,qt_processo_w);
CALL mudar_Integridade_versao('TABELA_SISTEMA','Disable',110,'where not exists (select 1 from TABELA_SISTEMA b where 1 = 1  and a.NM_TABELA = b.NM_TABELA)',
														'where a.dt_atualizacao > (select b.dt_atualizacao from TABELA_SISTEMA b where 1 = 1  and a.NM_TABELA = b.NM_TABELA)','S',
														'where not exists (select 1 from TASY_VERSAO.TABELA_SISTEMA b where a.nr_sequencia = b.nr_sequencia)','S');
CALL tasy_versao_cria_estrutura('TABELA_SISTEMA','A',ie_enterprise_w,111);
CALL tasy_versao_alterar_estrutura('TABELA_SISTEMA',ie_enterprise_w,112);
CALL mudar_Integridade_versao('TABELA_ATRIBUTO','Disable',113,'where not exists (select 1 from tabela_atributo b where a.nm_tabela = b.nm_tabela and a.nm_atributo = b.nm_atributo)',
														'where a.dt_atualizacao > (select b.dt_atualizacao from tabela_atributo b where a.nm_tabela = b.nm_tabela and a.nm_atributo = b.nm_atributo)','S',
														'where not exists (select 1 from TASY_VERSAO.TABELA_ATRIBUTO b where a.nr_sequencia = b.nr_sequencia)','S');
CALL tasy_versao_cria_estrutura('TABELA_ATRIBUTO','A',ie_enterprise_w,114);
CALL tasy_versao_alterar_estrutura('TABELA_ATRIBUTO',ie_enterprise_w,115);

CALL tasy_versao_copiar_tabela('TABELA_SISTEMA','where not exists (select 1 from TABELA_SISTEMA b where 1 = 1  and a.NM_TABELA = b.NM_TABELA)',116);
CALL tasy_versao_atualizar_tabela('TABELA_SISTEMA','where a.dt_atualizacao > (select b.dt_atualizacao from TABELA_SISTEMA b where 1 = 1  and a.NM_TABELA = b.NM_TABELA)',117);
CALL tasy_versao_copiar_tabela('TABELA_ATRIBUTO','where not exists (select 1 from tabela_atributo b where a.nm_tabela = b.nm_tabela and a.nm_atributo = b.nm_atributo)',118);
CALL tasy_versao_atualizar_tabela('TABELA_ATRIBUTO','where a.dt_atualizacao > (select b.dt_atualizacao from tabela_atributo b where a.nm_tabela = b.nm_tabela and a.nm_atributo = b.nm_atributo)',119);
-- 10 Fim migracao inicial
-- 20 Criacao de colunas em tabelas do Dicionario
qt_processo_w := qt_processo_w + 1;
CALL gravar_processo_longo('Alterando Tabelas Exp ',nm_fase_w,qt_processo_w);
ds_comando_w :=	' select	/*+parallel*/ distinct a.nm_tabela ' ||
				' from		tasy_versao.tabela_atributo a ' ||
				' where		not exists  (select	1 from	user_tab_columns b where a.nm_tabela = b.table_name and a.nm_atributo = b.column_name) ' ||
				' and		a.ie_tipo_atributo in ('||chr(39)||'LONG'||chr(39)||
												','||chr(39)||'LONG RAW'||chr(39)||
												','||chr(39)||'NUMBER'||chr(39)||
												','||chr(39)||'VARCHAR2'||chr(39)||
												','||chr(39)||'DATE'||chr(39)||
												','||chr(39)||'BLOB'||chr(39)||
												','||chr(39)||'CLOB'||chr(39)||')' ||
				' and	 exists (select	1 ' ||
								' from		tasy_versao.tasy_exptables x ' ||
								' where		x.table_name = a.nm_tabela ' ||
								' and		x.ie_tipo_tabela = '||chr(39)||'D'||chr(39)||') ';

c01 := dbms_sql.open_cursor;
dbms_sql.parse(C01, ds_comando_w, dbms_sql.native);
dbms_sql.define_column(C01, 1, nm_tabela_w, 50);		
retorno_w := dbms_sql.execute(C01);

while( dbms_sql.fetch_rows(C01) > 0 ) loop
	dbms_sql.column_value(C01, 1, nm_tabela_w);
	qt_processo_w := qt_processo_w + 1;
	CALL gravar_processo_longo('Alterando Tabelas Exp '|| nm_tabela_w,nm_fase_w,qt_processo_w);
	CALL tasy_versao_cria_estrutura(nm_tabela_w, 'A',ie_enterprise_w,120);
end loop;
dbms_sql.close_cursor(C01);
-- 20 Fim Criacao de colunas em tabelas do Dicionario
-- 30 Criacao de colunas em tabelas do Tasy
qt_processo_w := qt_processo_w + 1;
CALL gravar_processo_longo('Alterando tabelas',nm_fase_w,qt_processo_w);

ds_comando_w :=	' select	/*+parallel*/ distinct a.nm_tabela ' ||
				' from		tasy_versao.tabela_atributo a ' ||
				' where		not exists  (select	1 from	user_tab_columns b where a.nm_tabela = b.table_name and trim(a.nm_atributo) = trim(b.column_name)) ' ||
				' and		a.ie_tipo_atributo in ('||chr(39)||'LONG'||chr(39)||
												','||chr(39)||'LONG RAW'||chr(39)||
												','||chr(39)||'NUMBER'||chr(39)||
												','||chr(39)||'VARCHAR2'||chr(39)||
												','||chr(39)||'DATE'||chr(39)||
												','||chr(39)||'BLOB'||chr(39)||
												','||chr(39)||'CLOB'||chr(39)||')' ||
				' and		not exists (select	1 ' ||
									' from		tasy_versao.tasy_exptables x ' ||
									' where		x.table_name = a.nm_tabela ' ||
									' and		x.ie_tipo_tabela = '||chr(39)||'D'||chr(39)||') ';

C020 := dbms_sql.open_cursor;
dbms_sql.parse(C020, ds_comando_w, dbms_sql.native);
dbms_sql.define_column(C020, 1, nm_tabela_w, 50);		
retorno_w := dbms_sql.execute(C020);

while( dbms_sql.fetch_rows(C020) > 0 ) loop
	dbms_sql.column_value(C020, 1, nm_tabela_w);
	qt_processo_w := qt_processo_w + 1;
	CALL gravar_processo_longo('Alterando Tabelas '|| nm_tabela_w,nm_fase_w,qt_processo_w);
	CALL tasy_versao_cria_estrutura(nm_tabela_w, 'A',ie_enterprise_w,130);
end loop;
dbms_sql.close_cursor(C020);
-- 30 Fim criacao de colunas em tabelas do Tasy
-- 40 Alteracoes em colunas ja existentes
qt_processo_w := qt_processo_w + 1;
CALL gravar_processo_longo('Criando campos',nm_fase_w,qt_processo_w);

ds_comando_w := 'select /*+parallel*/ distinct a.nm_tabela  ' ||
                'from	tasy_versao.tabela_sistema a,  ' ||
                '    tasy_versao.tabela_atributo b, ' ||
                '    user_tab_columns c ' ||
                'where a.nm_tabela = b.nm_tabela ' ||
                'and	a.nm_tabela = c.table_name ' ||
                'and	c.table_name = b.nm_tabela ' ||
                'and	c.column_name = b.nm_atributo ' ||
                'and not exists (select 1 from tasy_versao.tasy_exptables t where t.table_name = a.nm_tabela and t.ie_tipo_tabela = ''D'') ' ||
                'and	b.ie_tipo_atributo not in (''VISUAL'',''TIMESTAMP'',''FUNCTION'') ' ||
                'and (c.DATA_TYPE <> b.IE_TIPO_ATRIBUTO ' ||
                'or (b.ie_tipo_atributo = ''VARCHAR2'' and c.char_length <> b.qt_tamanho) ' ||
                'or (b.ie_tipo_atributo = ''NUMBER'' and c.data_precision <> b.qt_tamanho or c.data_scale <> b.qt_decimais)) ';

C02 := dbms_sql.open_cursor;
dbms_sql.parse(C02, ds_comando_w, dbms_sql.native);
dbms_sql.define_column(C02, 1, nm_tabela_w, 50);		
retorno_w := dbms_sql.execute(C02);

while( dbms_sql.fetch_rows(C02) > 0 ) loop
	dbms_sql.column_value(C02, 1, nm_tabela_w);
	qt_processo_w := qt_processo_w + 1;
	CALL gravar_processo_longo('Criando campos '|| nm_tabela_w,nm_fase_w,qt_processo_w);
	CALL tasy_versao_alterar_estrutura(nm_tabela_w,ie_enterprise_w,140);
end loop;
dbms_sql.close_cursor(C02);
-- 40 Fim alteracoes em colunas ja existentes
-- 50 Criacao de indices
qt_processo_w := qt_processo_w + 1;
CALL gravar_processo_longo('Criando indices',nm_fase_w,qt_processo_w);

ds_comando_w :=	' select /*+parallel*/ distinct b.nm_tabela, ' ||
				'			b.nm_indice ' ||
				' from	tasy_versao.indice b, ' ||
				'		tasy_versao.tabela_sistema a ' ||
				' where	a.nm_tabela = b.nm_tabela ' ||
				' and	not exists	( ' ||
				'		select 1 ' ||
				'		from	user_indexes c ' ||
				'		where	b.nm_tabela = c.table_name ' ||
				'		and		b.nm_indice = c.index_name) ' ||
				' order by 1 ';

C03 := dbms_sql.open_cursor;
dbms_sql.parse(C03, ds_comando_w, dbms_sql.native);
dbms_sql.define_column(C03, 1, nm_tabela_w, 50);		
dbms_sql.define_column(C03, 2, nm_indice_w, 50);
retorno_w := dbms_sql.execute(C03);

while( dbms_sql.fetch_rows(C03) > 0 ) loop
	dbms_sql.column_value(C03, 1, nm_tabela_w);
	dbms_sql.column_value(C03, 2, nm_indice_w);
	qt_processo_w := qt_processo_w + 1;
	CALL gravar_processo_longo('Criando indices'|| nm_indice_w,nm_fase_w,qt_processo_w);
	CALL Tasy_versao_Criar_Indice(nm_tabela_w, nm_indice_w,ie_online_w,ie_enterprise_w,150);
end loop;
dbms_sql.close_cursor(C03);
-- 50 Fim criacao de indices
-- 60 Criacao de integridades
qt_processo_w := qt_processo_w + 1;
CALL gravar_processo_longo('Verificando constraints a serem criadas',nm_fase_w,qt_processo_w);

ds_comando_w :=	' select	/*+parallel*/ b.nm_tabela, ' ||
				'			b.nm_integridade_referencial ' ||
				' from	tasy_versao.integridade_referencial b, ' ||
				'		tasy_versao.tabela_sistema a ' ||
				' where	a.nm_tabela = b.nm_tabela ' ||
				' and	not exists	( ' ||
				'		select 1 ' ||
				'		from	user_constraints c ' ||
				'		where	b.nm_tabela = c.table_name ' ||
				'		and		b.nm_integridade_referencial = c.constraint_name) ' ||
				' order by 1 ';

C04 := dbms_sql.open_cursor;
dbms_sql.parse(C04, ds_comando_w, dbms_sql.native);
dbms_sql.define_column(C04, 1, nm_tabela_w, 50);		
dbms_sql.define_column(C04, 2, nm_integridade_w, 50);
retorno_w := dbms_sql.execute(C04);

while( dbms_sql.fetch_rows(C04) > 0 ) loop
	dbms_sql.column_value(C04, 1, nm_tabela_w);
	dbms_sql.column_value(C04, 2, nm_integridade_w);
	qt_processo_w := qt_processo_w + 1;
	CALL gravar_processo_longo('Criando Integridade '||nm_integridade_w,nm_fase_w,qt_processo_w);	
	CALL Tasy_versao_Criar_Integridade(nm_tabela_w, nm_integridade_w,ie_enterprise_w,160);
end loop;
dbms_sql.close_cursor(C04);
-- 60 Fim criacao de integridades
--70 Migracao das tabelas
qt_processo_w := qt_processo_w + 1;
CALL gravar_processo_longo('migracao de tabelas',nm_fase_w,qt_processo_w);

ds_comando_w :=	' 	select	/*+parallel*/ a.table_name, ' ||
				'			a.ie_copiar, ' ||
                '			a.ds_campo_copia, ' ||
				'			a.ie_atualizar, ' ||
                '			a.ds_campo_atualizacao, ' ||
                '			a.ie_excluir, ' ||
				'			a.ds_campo_exclusao, ' ||
                '           b.ie_exportar ' ||
				'	from tasy_versao.tasy_exptables a, ' ||
				'		 tasy_versao.tabela_sistema b ' || 
				'	where a.table_name = b.nm_tabela' ||
				'	and a.ie_tipo_tabela in ('||chr(39)||'T'||chr(39)||','||chr(39)||'D'||chr(39)||')'||
				'	order by a.ie_tipo_tabela, a.nr_ordem';

C050 := dbms_sql.open_cursor;
dbms_sql.parse(C050, ds_comando_w, dbms_sql.native);
dbms_sql.define_column(C050, 1, nm_tabela_w, 50);		
dbms_sql.define_column(C050, 2, ie_copiar_w, 1);
dbms_sql.define_column(C050, 3, ds_campo_copia_w, 4000);
dbms_sql.define_column(C050, 4, ie_atualizar_w, 1);
dbms_sql.define_column(C050, 5, ds_campo_atualizacao_w, 4000);
dbms_sql.define_column(C050, 6, ie_excluir_w, 1);
dbms_sql.define_column(C050, 7, ds_campo_exclusao_w, 4000);
dbms_sql.define_column(c050, 8, ie_exportar_w, 1);
retorno_w := dbms_sql.execute(C050);

while( dbms_sql.fetch_rows(C050) > 0 ) loop
	dbms_sql.column_value(C050, 1, nm_tabela_w);
	dbms_sql.column_value(C050, 2, ie_copiar_w);	
    dbms_sql.column_value(C050, 3, ds_campo_copia_w);
	dbms_sql.column_value(C050, 4, ie_atualizar_w);	
	dbms_sql.column_value(C050, 5, ds_campo_atualizacao_w);
	dbms_sql.column_value(C050, 6, ie_excluir_w);
    dbms_sql.column_value(C050, 7, ds_campo_exclusao_w);
    dbms_sql.column_value(c050, 8, ie_exportar_w);

	qt_processo_w := qt_processo_w + 1;
	CALL gravar_processo_longo('migracao de tabelas ',nm_fase_w,qt_processo_w);

	if ((ie_copiar_w = 'S') or (ie_atualizar_w = 'S') or (ie_excluir_w = 'S')) then
		
        --IF (nm_tabela_w not in ('TABELA_ATRIBUTO', 'TABELA_SISTEMA','WSUITE_PARAM_USUARIO',
		--							'WCP_REGRA_ATRIBUTO','XML_ATRIBUTO','DIC_PANEL_PAIS')) then
            CALL mudar_Integridade_versao(nm_tabela_w,'Disable',165,ds_campo_copia_w,ds_campo_atualizacao_w,ie_atualizar_w,ds_campo_exclusao_w,ie_excluir_w);

            if (ie_excluir_w = 'S' and ie_exportar_w = 'S') then
                CALL TASY_VERSAO_EXCLUIR_TABELA(nm_tabela_w,ds_campo_exclusao_w,170);
            end if;	

			if (ie_atualizar_w = 'S') then
				CALL tasy_versao_atualizar_tabela(nm_tabela_w,ds_campo_atualizacao_w,175);
			end if;

			if (ie_copiar_w = 'S') then
				if (nm_tabela_w = 'OBJETO_SISTEMA_PARAM') then
					CALL TASY_VERSAO_EXCLUIR_TABELA(nm_tabela_w,' where 1 = 1 ',179);
				end if;
                CALL Tasy_versao_Copiar_tabela(nm_tabela_w,ds_campo_copia_w,180);
				
            end if;

            if (nm_tabela_w = 'TASY_PADRAO_IMAGEM') then
                insert into TABELA_VERSAO_OFFLINE_W(nr_sequencia, nr_ordem, ds_comando, ds_log) values (nextval('tabela_versao_offline_w_seq'),185,'exec TASY_VERSAO_ATUALIZA_LONG_RAW('''||nm_tabela_w||''',''where exists (select 1 from tasy_versao.tasy_padrao_imagem b where a.nr_sequencia = b.nr_sequencia and a.ie_imagem is null and b.ie_imagem is not null)'')','D');
                commit;
            end if;

            CALL mudar_Integridade_versao(nm_tabela_w,'Enable',190,ds_campo_copia_w,ds_campo_atualizacao_w,ie_atualizar_w,ds_campo_exclusao_w,ie_excluir_w);

		--END IF;
	end if;	

end loop;
dbms_sql.close_cursor(C050);
--70 Fim migracao das tabelas
CALL gravar_processo_longo('','',0);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_fase_online () FROM PUBLIC;

