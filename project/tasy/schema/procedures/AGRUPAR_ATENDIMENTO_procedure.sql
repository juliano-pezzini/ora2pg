-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agrupar_atendimento ( nr_atend_origem_p bigint, nr_atend_destino_p bigint, ie_acao_p text, nm_usuario_p text, dt_acerto_p timestamp, dt_inicial_p timestamp, dt_final_p timestamp) AS $body$
DECLARE


/* Acao a Tomar
	R - Devolve o numero de Registros por Tabela
	T - Transfere de um atendimento para outro
*/
ds_comando_w			varchar(2000);
ds_res_w				varchar(4000);
qt_reg_w				bigint;
nm_tabela_w			varchar(50);
nm_atributo_w			varchar(50);
dt_entrada_w			timestamp;

nr_sequencia_w			bigint;
cd_setor_atendimento_w		integer;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
dt_entrada_unidade_w		timestamp;
dt_entrada_nova_w			timestamp;
dt_atualizacao_w			timestamp;
nm_usuario_w			varchar(15);
cd_tipo_acomodacao_w		smallint;
dt_saida_unidade_w		timestamp;
nr_atend_dia_w			integer;
ds_observacao_w			varchar(2000);
nm_usuario_original_w		varchar(15);
dt_saida_interno_w			timestamp;
ie_passagem_setor_w		varchar(1);
nr_acompanhante_w		smallint;
nr_seq_interno_w			bigint;
nr_seq_interno_old_w		bigint;
nr_laudo_w			bigint;
nr_seq_laudo_w			bigint;

cd_convenio_w			integer;
cd_categoria_w			varchar(10);
dt_inicio_vigencia_w		timestamp;
dt_final_vigencia_w			timestamp;
dt_atualizacao_ww			timestamp;
cd_usuario_convenio_w		varchar(30);
cd_empresa_w			bigint;
nm_usuario_ww			varchar(15);
nr_doc_convenio_w		varchar(200);
cd_tipo_acomodacao_ww		smallint;
cd_municipio_convenio_w		integer;
cd_convenio_glosa_w		integer;
cd_categoria_glosa_w		varchar(10);
dt_validade_carteira_w		timestamp;
nr_acompanhante_ww		smallint;
cd_plano_convenio_w		varchar(10);
cd_dependente_w			smallint;
nr_seq_origem_w			bigint;
cd_senha_w			varchar(20);
ie_tipo_guia_w			varchar(2);
ds_observacao_ww			varchar(2000);
qt_dia_internacao_w		smallint;
dt_ultimo_pagto_w			timestamp;
cd_complemento_w			varchar(30);
dt_aceite_dif_acomod_w		timestamp;
nm_usuario_aceite_w		varchar(15);
ds_observacao_aceite_w		varchar(2000);
qt_dieta_acomp_w			smallint;
ie_lib_dieta_w			varchar(15);
qt_ocorrencia_w			integer;
nr_prescricao_w			bigint;
varsql				varchar(1)   	:= chr(39);

nr_seq_autorizacao_w		bigint;
nr_seq_mat_autor_w		bigint;
nr_seq_proc_autor_w		bigint;

qt_reg_procedimento_paciente_w	bigint := 0;
qt_reg_mat_atend_paciente_w	bigint := 0;
qt_reg_prescr_medica_w 		bigint := 0;

var_permite_maior_alta_w		varchar(1);
cd_motivo_alta_w atendimento_paciente.cd_motivo_alta%type;
dt_alta_w				timestamp;
dt_alta_dest_w			timestamp;

cd_estabelecimento_w		smallint;
cd_conv_w			bigint;
cd_categ_w			varchar(10);
dt_alta_atend_w			timestamp;
nr_doc_conv_w			varchar(100);
dt_acerto_conta_w			timestamp;
nr_interno_conta_w			bigint;
cd_convenio_calculo_w		integer;
cd_categoria_calculo_w		varchar(10);
nr_atend_rec_sus_w		bigint;
ie_tipo_atendimento_w		bigint;
ie_ajusta_atend_dest_sus_w		varchar(10) := 'N';
dt_entrada_origem_w		timestamp;
nr_atendimento_c06_w		bigint;
dt_diagnostico_c06_w		timestamp;
ie_possui_diag_medico_w	bigint;
ie_possui_diag_doenca_w	bigint;
nr_diag_template_w	diagnostico_doenca.nr_seq_reg_elemento%type;
ie_possui_diag_template_w	varchar(10) := 'N';
nr_atendimento_rn_w		bigint;
nr_seq_ocorrencia_w		ocorrencias_transf_atend.nr_sequencia%type;
ie_rest_laudo_sus_w varchar(1);
nr_seq_laudo_sus_w bigint;
nr_laudo_sus_w smallint;
nr_seq_tipo_laudo_w smallint;
ie_conta_prov_w varchar(1);
nr_conta_w bigint;
ie_rest_diantamento_w	parametro_transf_atend.ie_rest_diantamento%type;
IE_REST_AUTORIZACAO_w	parametro_transf_atend.IE_REST_AUTORIZACAO%type;
nr_adiantamento_w	adiantamento.nr_adiantamento%type;
nr_seq_interno_nasc_w	nascimento.nr_seq_interno%type;
nr_sequencia_nasc_w		nascimento.nr_sequencia%type;

c01 CURSOR FOR
SELECT	a.nm_tabela,
	b.nm_atributo
from	integridade_atributo b,
	integridade_referencial a
where	a.nm_tabela 			= b.nm_tabela
and	a.nm_integridade_referencial 	= b.nm_integridade_referencial
and	a.nm_tabela_referencia 		= 'ATENDIMENTO_PACIENTE'
and not exists (
select c.nm_tabela from  TRANSF_ATEND_EXCESSAO c where a.nm_tabela = c.nm_tabela
and (coalesce(c.cd_perfil::text, '') = '' or c.cd_perfil = wheb_usuario_pck.get_cd_perfil)
)

union

select	nm_tabela,
	nm_atributo
from	tabela_atributo
where	nm_tabela in ('ATENDIMENTO_INDICACAO', 'CIRURGIA')
and	nm_atributo = 'NR_ATENDIMENTO'
and not exists (
select c.nm_tabela from  TRANSF_ATEND_EXCESSAO c where nm_tabela = c.nm_tabela 
and (coalesce(c.cd_perfil::text, '') = '' or c.cd_perfil = wheb_usuario_pck.get_cd_perfil)
);

c02 CURSOR FOR
SELECT	a.cd_setor_atendimento,
	a.cd_unidade_basica,
	a.cd_unidade_compl,
	a.dt_entrada_unidade,
	a.dt_atualizacao,
	a.nm_usuario,
	a.cd_tipo_acomodacao,
	a.dt_saida_unidade,
	a.nr_atend_dia,
	a.ds_observacao,
	a.nm_usuario_original,
	a.dt_saida_interno,
	a.ie_passagem_setor,
	a.nr_acompanhante,
	a.nr_seq_interno,
	b.dt_entrada
from	atend_paciente_unidade a,
	atendimento_paciente b
where	a.nr_atendimento = nr_atend_origem_p
and	a.nr_atendimento = b.nr_atendimento
and	((coalesce(dt_inicial_p::text, '') = '') or (a.dt_entrada_unidade >= dt_inicial_p))
and	((coalesce(dt_final_p::text, '') = '') or (a.dt_entrada_unidade <= dt_final_p));

c03 CURSOR FOR
SELECT	a.nr_sequencia
from	laudo_paciente a
where	nr_atendimento 	= nr_atend_origem_p;

c04 CURSOR FOR
SELECT	a.cd_convenio,
	a.cd_categoria,
	a.dt_inicio_vigencia,
	a.dt_final_vigencia,
	a.dt_atualizacao,
	a.cd_usuario_convenio,
	a.cd_empresa,
	a.nm_usuario,
	a.nr_doc_convenio,
	a.cd_tipo_acomodacao,
	a.cd_municipio_convenio,
	a.cd_convenio_glosa,
	a.cd_categoria_glosa,
	a.dt_validade_carteira,
	a.nr_acompanhante,
	a.cd_plano_convenio,
	a.cd_dependente,
	a.nr_seq_origem,
	a.cd_senha,
	a.ie_tipo_guia,
	a.ds_observacao,
	a.qt_dia_internacao,
	a.dt_ultimo_pagto,
	a.cd_complemento,
	a.dt_aceite_dif_acomod,
	a.nm_usuario_aceite,
	a.ds_observacao_aceite,
	a.qt_dieta_acomp,
	a.ie_lib_dieta
from	atend_categoria_convenio	a
where	a.nr_atendimento	= nr_atend_origem_p
and	a.nr_atendimento	<> nr_atend_rec_sus_w
and	not exists (select	1
			from	atend_categoria_convenio	b
			where	b.nr_atendimento	= (nr_atend_destino_p)::numeric
			and	a.cd_convenio		= b.cd_convenio
			and	a.cd_categoria		= b.cd_categoria
			and	a.dt_inicio_vigencia	= b.dt_inicio_vigencia);

c05 CURSOR FOR
	SELECT	nr_prescricao
	from	prescr_medica
	where	nr_atendimento	= nr_atend_origem_p
	and	((coalesce(dt_inicial_p::text, '') = '') or (dt_prescricao >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (dt_prescricao <= dt_final_p));

C06 CURSOR FOR
	SELECT	nr_atendimento,
		dt_diagnostico
	from	diagnostico_medico
	where	nr_atendimento	= nr_atend_origem_p;

c07 CURSOR FOR
	SELECT	a.NR_SEQ_INTERNO
	from	SUS_LAUDO_PACIENTE a
	where	nr_atendimento 	= nr_atend_origem_p
	and	ie_rest_laudo_sus_w = 'N'
	
union all

	SELECT	a.NR_SEQ_INTERNO
	from	SUS_LAUDO_PACIENTE a
	where	nr_atendimento 	= nr_atend_origem_p
	and	ie_rest_laudo_sus_w = 'S'
	and	((coalesce(dt_inicial_p::text, '') = '') or (dt_emissao  >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (dt_emissao  <= dt_final_p));


C08 CURSOR FOR
	SELECT	NR_INTERNO_CONTA
	from	conta_paciente
	where	nr_atendimento = nr_atend_origem_p
	and		((coalesce(dt_inicial_p::text, '') = '') or (dt_acerto_conta >= dt_inicial_p))
	and		((coalesce(dt_final_p::text, '') = '') or (dt_acerto_conta <= dt_final_p))
	and 	((ie_conta_prov_w = 'N') or (ie_status_acerto = 1));

C09 CURSOR FOR
	SELECT  nr_adiantamento
	from	ADIANTAMENTO a
	where	nr_atendimento = nr_atend_origem_p
	and 	coalesce(ie_rest_diantamento_w, 'N') = 'N'
	
union all

	SELECT  nr_adiantamento
	from	ADIANTAMENTO a
	where	nr_atendimento = nr_atend_origem_p
	and	((coalesce(dt_inicial_p::text, '') = '') or (dt_adiantamento >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (dt_adiantamento <= dt_final_p))
	and 	coalesce(ie_rest_diantamento_w, 'N') = 'S';

C10 CURSOR FOR
	SELECT  NR_SEQUENCIA
	from	autorizacao_convenio a
	where	nr_atendimento = nr_atend_origem_p
	and 	coalesce(IE_REST_AUTORIZACAO_w, 'N') = 'N'
	
union all

	SELECT  NR_SEQUENCIA
	from	autorizacao_convenio a
	where	nr_atendimento = nr_atend_origem_p
	and	((coalesce(dt_inicial_p::text, '') = '') or (coalesce(DT_INICIO_VIGENCIA::text, '') = '') or (DT_INICIO_VIGENCIA >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (coalesce(DT_FIM_VIGENCIA::text, '') = '') or (DT_FIM_VIGENCIA <= dt_final_p))
	and 	coalesce(IE_REST_AUTORIZACAO_w, 'N') = 'S';	

C11 CURSOR FOR
	SELECT 	nr_seq_interno
	from	nascimento
	where	nr_atendimento = nr_atend_origem_p;	


BEGIN

select	coalesce(max(ie_ajusta_atend_dest),'N')
into STRICT	ie_ajusta_atend_dest_sus_w
from	sus_parametros_aih
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

select  count(*)
into STRICT	qt_reg_procedimento_paciente_w
from	procedimento_paciente
where	nr_atendimento = nr_atend_origem_p
and		((coalesce(dt_inicial_p::text, '') = '') or (dt_procedimento >= dt_inicial_p))
and		((coalesce(dt_final_p::text, '') = '') or (dt_procedimento <= dt_final_p));

select  count(*)
into STRICT	qt_reg_mat_atend_paciente_w
from	material_atend_paciente
where	nr_atendimento = nr_atend_origem_p
and		((coalesce(dt_inicial_p::text, '') = '') or (dt_atendimento >= dt_inicial_p))
and		((coalesce(dt_final_p::text, '') = '') or (dt_atendimento <= dt_final_p));

select  count(*)
into STRICT	qt_reg_prescr_medica_w
from	prescr_medica
where	nr_atendimento = nr_atend_origem_p
and		((coalesce(dt_inicial_p::text, '') = '') or (dt_prescricao >= dt_inicial_p))
and		((coalesce(dt_final_p::text, '') = '') or (dt_prescricao <= dt_final_p));

select	coalesce(max(sus_obter_se_atend_recente(cd_pessoa_fisica,nr_atendimento)),0),
	max(ie_tipo_atendimento)
into STRICT	nr_atend_rec_sus_w,
	ie_tipo_atendimento_w
from	atendimento_paciente
where	nr_atendimento = nr_atend_destino_p;

SELECT max(coalesce(ie_rest_laudo_sus,'N')),
	max(coalesce(IE_CONTA_PROVISORIA,'N')),
	max(coalesce(IE_REST_DIANTAMENTO, 'N')),
	max(coalesce(IE_REST_AUTORIZACAO, 'N'))
into STRICT ie_rest_laudo_sus_w,
	ie_conta_prov_w,
	ie_rest_diantamento_w,
	IE_REST_AUTORIZACAO_W
FROM parametro_transf_atend
WHERE cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

open c01;
loop
	fetch c01 into
		nm_tabela_w,
		nm_atributo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

	if (ie_acao_p = 'R') and
		  ((nm_tabela_w = 'PROCEDIMENTO_PACIENTE') or (nm_tabela_w = 'MATERIAL_ATEND_PACIENTE') or (nm_tabela_w = 'PRESCR_MEDICA') or (nm_tabela_w =  'ATENDIMENTO_SINAL_VITAL') or (nm_tabela_w=	'ANAMNESE_PACIENTE') or (nm_tabela_w=	'DIAGNOSTICO_MEDICO') or (nm_tabela_w=	'EVOLUCAO_PACIENTE') or (nm_tabela_w=	'MED_AVALIACAO_PACIENTE') or (nm_tabela_w=	'ATENDIMENTO_PERDA_GANHO') or (nm_tabela_w=	'CIRURGIA') or (nm_tabela_w=  'SUS_LAUDO_PACIENTE') or (nm_tabela_w=  'CONTA_PACIENTE') or (nm_tabela_w=  'ADIANTAMENTO') or (nm_tabela_w=  'AUTORIZACAO_CONVENIO') or (nm_tabela_w=  'NASCIMENTO_AMAMENTACAO') or (nm_tabela_w=  'NASCIMENTO'))  then

		if (nm_tabela_w = 'PROCEDIMENTO_PACIENTE') then
			select  count(*)
			into STRICT	qt_reg_w
			from	procedimento_paciente a
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_procedimento >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_procedimento <= dt_final_p))
			and 	((ie_conta_prov_w = 'N') or (exists (SELECT 1 from conta_paciente b where ie_status_acerto = 1  and a.nr_interno_conta = b.nr_interno_conta )));	

			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p );
			end if;
		elsif (nm_tabela_w=  'CONTA_PACIENTE') then
			select  count(*)
			into STRICT	qt_reg_w
			from	CONTA_PACIENTE a
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_acerto_conta >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_acerto_conta <= dt_final_p))
			and 	((ie_conta_prov_w = 'N') or (ie_status_acerto = 1));	


			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p );
			end if;		
		elsif (nm_tabela_w = 'MATERIAL_ATEND_PACIENTE') then
			select  count(*)
			into STRICT	qt_reg_w
			from	material_atend_paciente a
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_atendimento >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_atendimento <= dt_final_p))
			and		((ie_conta_prov_w = 'N') or (exists (SELECT 1 from conta_paciente b where ie_status_acerto = 1 and a.nr_interno_conta = b.nr_interno_conta )));


			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;
		elsif (nm_tabela_w = 'ATEND_PACIENTE_UNIDADE') then
			select  count(*)
			into STRICT	qt_reg_w
			from	atend_paciente_unidade
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_entrada_unidade >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_entrada_unidade <= dt_final_p));
			if (qt_reg_w > 0) then
				ds_res_w:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;
		elsif (nm_tabela_w = 'NASCIMENTO_AMAMENTACAO') then
			select  count(*)
			into STRICT	qt_reg_w
			from	nascimento_amamentacao
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_registro >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_registro <= dt_final_p));
			if (qt_reg_w > 0) then
				ds_res_w:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;
		elsif (nm_tabela_w = 'NASCIMENTO') then
			select  count(*)
			into STRICT	qt_reg_w
			from	nascimento
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_nascimento >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_nascimento <= dt_final_p));
			if (qt_reg_w > 0) then
				ds_res_w:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;
		elsif (nm_tabela_w = 'PRESCR_MEDICA') then
			select  count(*)
			into STRICT	qt_reg_w
			from	prescr_medica
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_prescricao >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_prescricao <= dt_final_p));
			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;
		elsif (nm_tabela_w = 'ATENDIMENTO_SINAL_VITAL') then
			select  count(*)
			into STRICT	qt_reg_w
			from	atendimento_sinal_vital
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_sinal_vital >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_sinal_vital <= dt_final_p));
			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;
		elsif (nm_tabela_w = 'ANAMNESE_PACIENTE') then
			select  count(*)
			into STRICT	qt_reg_w
			from	anamnese_paciente
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_ananmese >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_ananmese <= dt_final_p));
			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;
		elsif (nm_tabela_w = 'DIAGNOSTICO_MEDICO') then
			select  count(*)
			into STRICT	qt_reg_w
			from	diagnostico_medico
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_diagnostico >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_diagnostico <= dt_final_p));
			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p );
			end if;
		elsif (nm_tabela_w = 'EVOLUCAO_PACIENTE') then
			select  count(*)
			into STRICT	qt_reg_w
			from	evolucao_paciente
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_evolucao >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_evolucao <= dt_final_p));
			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p );
			end if;
		elsif (nm_tabela_w = 'MED_AVALIACAO_PACIENTE') then
			select  count(*)
			into STRICT	qt_reg_w
			from	med_avaliacao_paciente
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_avaliacao >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_avaliacao <= dt_final_p));
			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;
		elsif (nm_tabela_w = 'ATENDIMENTO_PERDA_GANHO') then
			select  count(*)
			into STRICT	qt_reg_w
			from	atendimento_perda_ganho
			where	nr_atendimento = nr_atend_origem_p
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_medida >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_medida <= dt_final_p));
			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;
		elsif (nm_tabela_w = 'CIRURGIA') then
			select  count(*)
			into STRICT	qt_reg_w
			from	cirurgia
			where	nr_atendimento = nr_atend_origem_p
			and	((coalesce(dt_inicial_p::text, '') = '') or (dt_inicio_prevista  >= dt_inicial_p))
			and	((coalesce(dt_final_p::text, '') = '') or (dt_inicio_prevista  <= dt_final_p));

			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;	
		elsif (nm_tabela_w=  'SUS_LAUDO_PACIENTE') then
			if (ie_rest_laudo_sus_w = 'S')then				
				if (nm_atributo_w = 'NR_ATENDIMENTO') then
					select  count(*)
					into STRICT	qt_reg_w
					from	sus_laudo_paciente
					where	nr_atendimento = nr_atend_origem_p
					and		((coalesce(dt_inicial_p::text, '') = '') or (dt_emissao  >= dt_inicial_p))
					and		((coalesce(dt_final_p::text, '') = '') or (dt_emissao  <= dt_final_p));
				else
					select  count(*)
					into STRICT	qt_reg_w
					from	sus_laudo_paciente
					where	nr_atendimento_origem = nr_atend_origem_p
					and		((coalesce(dt_inicial_p::text, '') = '') or (dt_emissao  >= dt_inicial_p))
					and		((coalesce(dt_final_p::text, '') = '') or (dt_emissao  <= dt_final_p));				
				end if;
			else
				if (nm_atributo_w = 'NR_ATENDIMENTO') then
					select  count(*)
					into STRICT	qt_reg_w
					from	sus_laudo_paciente
					where	nr_atendimento = nr_atend_origem_p;
				else
					select  count(*)
					into STRICT	qt_reg_w
					from	sus_laudo_paciente
					where	nr_atendimento_origem = nr_atend_origem_p;				
				end if;
			end if;
			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
			end if;			
		elsif (nm_tabela_w = 'ADIANTAMENTO') then
			if (coalesce(ie_rest_diantamento_w, 'N') = 'S') then					
				select  count(*)
				into STRICT	qt_reg_w
				from	ADIANTAMENTO a
				where	nr_atendimento = nr_atend_origem_p
				and		((coalesce(dt_inicial_p::text, '') = '') or (dt_adiantamento >= dt_inicial_p))
				and		((coalesce(dt_final_p::text, '') = '') or (dt_adiantamento <= dt_final_p));
			else
				select  count(*)
				into STRICT	qt_reg_w
				from	ADIANTAMENTO a
				where	nr_atendimento = nr_atend_origem_p;
			end if;		
			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p );
			end if;
		elsif (nm_tabela_w = 'AUTORIZACAO_CONVENIO') then
			if (coalesce(ie_rest_diantamento_w, 'N') = 'S') then					
				select  count(*)
				into STRICT	qt_reg_w
				from	AUTORIZACAO_CONVENIO a
				where	nr_atendimento = nr_atend_origem_p
				and		((coalesce(dt_inicial_p::text, '') = '') or (DT_INICIO_VIGENCIA >= dt_inicial_p))
				and		((coalesce(dt_final_p::text, '') = '') or (DT_FIM_VIGENCIA <= dt_final_p));
			else
				select  count(*)
				into STRICT	qt_reg_w
				from	AUTORIZACAO_CONVENIO a
				where	nr_atendimento = nr_atend_origem_p;
			end if;		
			if (qt_reg_w > 0) then
				ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
				CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p );
			end if;
		end if;		
	elsif (ie_acao_p = 'R') and (nm_tabela_w <> 'PROCEDIMENTO_PACIENTE') and (nm_tabela_w <> 'MATERIAL_ATEND_PACIENTE') and (nm_tabela_w <> 'ATEND_PACIENTE_UNIDADE') and (nm_tabela_w <> 'PRESCR_MEDICA') and (nm_tabela_w <> 'SUS_LAUDO_PACIENTE') then

		ds_comando_w		:= 	'select count(*) from ' || nm_tabela_w ||
						' where ' || nm_atributo_w || ' = ' ||	nr_atend_origem_p;
		qt_reg_w := obter_valor_dinamico(ds_comando_w, qt_reg_w);
		if (qt_reg_w > 0) then
			ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
			CALL gravar_ocorrencias_transf(nm_usuario_p, nm_tabela_w, nr_atend_origem_p, qt_reg_w, dt_acerto_p);
		end if;

	elsif (ie_acao_p = 'T') and (nm_tabela_w <> 'ATEND_PACIENTE_UNIDADE') and (nm_tabela_w <> 'PROCEDIMENTO_PACIENTE') and (nm_tabela_w <> 'MATERIAL_ATEND_PACIENTE') and (nm_tabela_w <> 'PRESCR_MEDICA') and (nm_tabela_w <>  'ATENDIMENTO_SINAL_VITAL') and (nm_tabela_w<>	'ANAMNESE_PACIENTE') and (nm_tabela_w<>	'DIAGNOSTICO_MEDICO') and (nm_tabela_w<>	'EVOLUCAO_PACIENTE') and (nm_tabela_w<>	'MED_AVALIACAO_PACIENTE') and (nm_tabela_w<>	'ATENDIMENTO_PERDA_GANHO') and (nm_tabela_w <> 'ATEND_CATEGORIA_CONVENIO') and (nm_tabela_w <> 'SUS_LAUDO_PACIENTE') and (nm_tabela_w <> 'CONTA_PACIENTE') and (nm_tabela_w <> 'ADIANTAMENTO') and (nm_tabela_w <>  'AUTORIZACAO_CONVENIO') then

		if (qt_reg_procedimento_paciente_w > 0) or (qt_reg_mat_atend_paciente_w > 0) or (qt_reg_prescr_medica_w > 0) then

			if	((dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') and (nm_tabela_w = 'CONTA_PACIENTE')) then
				nr_interno_conta_w:= null;
			else
				CALL altera_valor_campo_tabela(nm_tabela_w, nm_atributo_w, nr_atend_origem_p, nr_atend_destino_p);
			end if;
		end if;
	end if;


end loop;
close c01;

if (ie_acao_p = 'R') then
	ds_comando_w		:= 'select count(*) from atend_paciente_unidade a, ' ||
					'atend_paciente_unidade b where a.nr_atendimento = ' || nr_atend_origem_p ||
					'and b.nr_atendimento = ' || nr_atend_destino_p ||
					'and a.dt_entrada_unidade = b.dt_entrada_unidade';
	qt_reg_w := obter_valor_dinamico(ds_comando_w, qt_reg_w);
	ds_res_w			:= ds_res_w || 'Atend_Paciente_Unidade Iguais=' || qt_reg_w || ',';
elsif (ie_acao_p = 'T') then
	open c02;
	loop
		fetch c02 into 	cd_setor_atendimento_w,
				cd_unidade_basica_w,
				cd_unidade_compl_w,
				dt_entrada_unidade_w,
				dt_atualizacao_w,
				nm_usuario_w,
				cd_tipo_acomodacao_w,
				dt_saida_unidade_w,
				nr_atend_dia_w,
				ds_observacao_w,
				nm_usuario_original_w,
				dt_saida_interno_w,
				ie_passagem_setor_w,
				nr_acompanhante_w,
				nr_seq_interno_old_w,
				dt_entrada_origem_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

		select	nextval('atend_paciente_unidade_seq')
		into STRICT	nr_seq_interno_w
		;

		select 	max(cd_convenio),
			max(cd_categoria),
			max(nr_doc_convenio)
		into STRICT	cd_conv_w,
			cd_categ_w,
			nr_doc_conv_w
		from	atend_categoria_convenio
		where	nr_seq_interno	= obter_atecaco_atendimento(nr_atend_destino_p);

		select 	coalesce(max(nr_sequencia),0) + 1
		into STRICT 	nr_sequencia_w
		from 	atend_paciente_unidade
		where 	nr_atendimento = nr_atend_destino_p;

		select	max(dt_entrada),
			max(dt_alta),
			max(cd_estabelecimento)
		into STRICT	dt_entrada_w,
			dt_alta_atend_w,
			cd_estabelecimento_w
		from	atendimento_paciente
		where	nr_atendimento		= nr_atend_destino_p;

		if (dt_entrada_w > dt_entrada_unidade_w) then
			dt_entrada_unidade_w	:= dt_entrada_w + 1/86400;
		end if;

		if (obter_tipo_convenio(cd_conv_w)	= 3) and (coalesce(ie_ajusta_atend_dest_sus_w,'N')	= 'S') then
			begin

			if (ie_tipo_atendimento_w = 1) and (nr_atend_origem_p = nr_atend_rec_sus_w) then
				begin

				update	atendimento_paciente
				set	dt_entrada	= dt_entrada_origem_w
				where	nr_atendimento	= nr_atend_destino_p;

				dt_entrada_unidade_w := dt_entrada_origem_w;

				end;
			end if;

			end;
		end if;

		select count(*)
		into STRICT	qt_ocorrencia_w
		from	atend_paciente_unidade
		where 	nr_atendimento		= nr_atend_destino_p
		and	dt_entrada_unidade 	= dt_entrada_unidade_w;

		if (qt_ocorrencia_w = 0) then

			insert into atend_paciente_unidade(	nr_atendimento, nr_sequencia, cd_setor_atendimento, cd_unidade_basica,
							cd_unidade_compl, dt_entrada_unidade, dt_atualizacao, nm_usuario,
							cd_tipo_acomodacao, dt_saida_unidade, nr_atend_dia, ds_observacao,
							nm_usuario_original, dt_saida_interno, ie_passagem_setor,
							nr_acompanhante, nr_seq_interno, ie_calcular_dif_diaria)
			values (	nr_atend_destino_p, nr_sequencia_w, cd_setor_atendimento_w, cd_unidade_basica_w,
				  	cd_unidade_compl_w, dt_entrada_unidade_w, dt_atualizacao_w, nm_usuario_w,
			  		cd_tipo_acomodacao_w, dt_saida_unidade_w, nr_atend_dia_w, ds_observacao_w,
				  	nm_usuario_original_w, dt_saida_interno_w, ie_passagem_setor_w,
				  	nr_acompanhante_w, nr_seq_interno_w, 'S');
		end if;

		select	max(dt_entrada_unidade)
		into STRICT	dt_entrada_nova_w
		from	atend_paciente_unidade
		where	nr_seq_interno	= nr_seq_interno_w;



		-- OS 167807 Tiago e Fabricio 22/09/2009
		-- Quando qt_ocorrencia_w > 0, ou seja existe uma pssagem com dt_entrada_unidade do atend origem igual no atendimento destino.
		if (coalesce(dt_entrada_nova_w::text, '') = '') then

			select 	max(nr_seq_interno)
			into STRICT	nr_seq_interno_w
			from	atend_paciente_unidade
			where 	nr_atendimento		= nr_atend_destino_p
			and		dt_entrada_unidade 	= dt_entrada_unidade_w;

			dt_entrada_nova_w:= dt_entrada_unidade_w;

		end if;

		if (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') then

			SELECT * FROM obter_conta_paciente(cd_estabelecimento_w, nr_atend_destino_p, cd_conv_w, cd_categ_w, nm_usuario_p, clock_timestamp(), dt_entrada_w, dt_alta_atend_w, nr_doc_conv_w, null, null, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;

			update	material_atend_paciente a
			set	nr_seq_atepacu = nr_seq_interno_w,
				nr_atendimento = nr_atend_destino_p,
				nr_interno_conta = nr_interno_conta_w,
				dt_entrada_unidade = dt_entrada_nova_w
			where	nr_seq_atepacu = nr_seq_interno_old_w
			and	((coalesce(dt_inicial_p::text, '') = '') or (dt_atendimento >= dt_inicial_p))
			and	((coalesce(dt_final_p::text, '') = '') or (dt_atendimento <= dt_final_p))
			and 	((ie_conta_prov_w = 'N') or (exists (SELECT 1 from conta_paciente b where ie_status_acerto = 1  and a.nr_interno_conta = b.nr_interno_conta )));

			update	procedimento_paciente a
			set	nr_seq_atepacu = nr_seq_interno_w,
				nr_atendimento = nr_atend_destino_p,
				nr_interno_conta = nr_interno_conta_w,
				dt_entrada_unidade = dt_entrada_nova_w
			where	nr_seq_atepacu = nr_seq_interno_old_w
			and	((coalesce(dt_inicial_p::text, '') = '') or (dt_procedimento >= dt_inicial_p))
			and	((coalesce(dt_final_p::text, '') = '') or (dt_procedimento <= dt_final_p))
			and 	((ie_conta_prov_w = 'N') or (exists (SELECT 1 from conta_paciente b where ie_status_acerto = 1  and a.nr_interno_conta = b.nr_interno_conta )));

			select	coalesce(max(nr_atendimento),0)
			into STRICT	nr_atendimento_rn_w
			from	atendimento_paciente
			where	nr_atendimento_mae = nr_atend_origem_p
			and	ie_trat_conta_rn = 'M' || chr(227) || 'e';

			if (nr_atendimento_rn_w > 0) then

				update	material_atend_paciente a
				set	nr_interno_conta = nr_interno_conta_w
				where	nr_atendimento = nr_atendimento_rn_w
				and	((coalesce(dt_inicial_p::text, '') = '') or (dt_atendimento >= dt_inicial_p))
				and	((coalesce(dt_final_p::text, '') = '') or (dt_atendimento <= dt_final_p))
				and 	((ie_conta_prov_w = 'N') or (exists (SELECT 1 from conta_paciente b where ie_status_acerto = 1  and a.nr_interno_conta = b.nr_interno_conta )));

				update	procedimento_paciente a
				set	nr_interno_conta = nr_interno_conta_w
				where	nr_atendimento = nr_atendimento_rn_w
				and	((coalesce(dt_inicial_p::text, '') = '') or (dt_procedimento >= dt_inicial_p))
				and	((coalesce(dt_final_p::text, '') = '') or (dt_procedimento <= dt_final_p))
				and 	((ie_conta_prov_w = 'N') or (exists (SELECT 1 from conta_paciente b where ie_status_acerto = 1  and a.nr_interno_conta = b.nr_interno_conta )));

			end if;

		else

			update	material_atend_paciente a
			set	nr_seq_atepacu = nr_seq_interno_w,
				nr_atendimento = nr_atend_destino_p,
				dt_entrada_unidade = dt_entrada_nova_w
			where	nr_seq_atepacu = nr_seq_interno_old_w
			and	((coalesce(dt_inicial_p::text, '') = '') or (dt_atendimento >= dt_inicial_p))
			and	((coalesce(dt_final_p::text, '') = '') or (dt_atendimento <= dt_final_p))
			and 	((ie_conta_prov_w = 'N') or (exists (SELECT 1 from conta_paciente b where ie_status_acerto = 1  and a.nr_interno_conta = b.nr_interno_conta )));

			update	procedimento_paciente a
			set	nr_seq_atepacu = nr_seq_interno_w,
				nr_atendimento = nr_atend_destino_p,
				dt_entrada_unidade = dt_entrada_nova_w
			where	nr_seq_atepacu = nr_seq_interno_old_w
			and	((coalesce(dt_inicial_p::text, '') = '') or (dt_procedimento >= dt_inicial_p))
			and	((coalesce(dt_final_p::text, '') = '') or (dt_procedimento <= dt_final_p))
			and 	((ie_conta_prov_w = 'N') or (exists (SELECT 1 from conta_paciente b where ie_status_acerto = 1  and a.nr_interno_conta = b.nr_interno_conta )));

		end if;

	end loop;
	close c02;

	open c03;
	loop
	fetch	c03 into nr_seq_laudo_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		begin


		select	coalesce(max(nr_laudo),0) + 1
		into STRICT	nr_laudo_w
		from	laudo_paciente
		where	nr_atendimento = nr_atend_destino_p;

		update	laudo_paciente
		set	nr_atendimento 	= nr_atend_destino_p,
			nr_laudo	= nr_laudo_w
		where	nr_sequencia	= nr_seq_laudo_w;

		end;

	end loop;
	close c03;

	open c04;
	loop
		fetch c04 into	cd_convenio_w,
				cd_categoria_w,
				dt_inicio_vigencia_w,
				dt_final_vigencia_w,
				dt_atualizacao_ww,
				cd_usuario_convenio_w,
				cd_empresa_w,
				nm_usuario_ww,
				nr_doc_convenio_w,
				cd_tipo_acomodacao_ww,
				cd_municipio_convenio_w,
				cd_convenio_glosa_w,
				cd_categoria_glosa_w,
				dt_validade_carteira_w,
				nr_acompanhante_ww,
				cd_plano_convenio_w,
				cd_dependente_w,
				nr_seq_origem_w,
				cd_senha_w,
				ie_tipo_guia_w,
				ds_observacao_ww,
				qt_dia_internacao_w,
				dt_ultimo_pagto_w,
				cd_complemento_w,
				dt_aceite_dif_acomod_w,
				nm_usuario_aceite_w,
				ds_observacao_aceite_w,
				qt_dieta_acomp_w,
				ie_lib_dieta_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */

		if (obter_tipo_convenio(cd_conv_w)	= 3) and (coalesce(ie_ajusta_atend_dest_sus_w,'N')	= 'S') then
			begin

			if (ie_tipo_atendimento_w = 1) and (nr_atend_origem_p = nr_atend_rec_sus_w) then								
				dt_inicio_vigencia_w := dt_entrada_origem_w;			
			end if;
			end;
		end if;

		select	nextval('atend_categoria_convenio_seq')
		into STRICT	nr_seq_interno_w
		;

		insert into atend_categoria_convenio(	nr_atendimento, cd_convenio, cd_categoria, dt_inicio_vigencia,
							dt_final_vigencia, dt_atualizacao, cd_usuario_convenio, cd_empresa,
							nm_usuario, nr_doc_convenio, cd_tipo_acomodacao, cd_municipio_convenio,
							cd_convenio_glosa, cd_categoria_glosa, dt_validade_carteira, nr_acompanhante,
							cd_plano_convenio, cd_dependente, nr_seq_interno, nr_seq_origem, cd_senha,
							ie_tipo_guia, ds_observacao, qt_dia_internacao, dt_ultimo_pagto, cd_complemento,
							dt_aceite_dif_acomod, nm_usuario_aceite, ds_observacao_aceite, qt_dieta_acomp,
							ie_lib_dieta)
		values (	nr_atend_destino_p, cd_convenio_w, cd_categoria_w, dt_inicio_vigencia_w, dt_final_vigencia_w,
				dt_atualizacao_ww, cd_usuario_convenio_w, cd_empresa_w, nm_usuario_ww, nr_doc_convenio_w,
				cd_tipo_acomodacao_ww, cd_municipio_convenio_w, cd_convenio_glosa_w, cd_categoria_glosa_w,
				dt_validade_carteira_w, nr_acompanhante_ww, cd_plano_convenio_w, cd_dependente_w, nr_seq_interno_w,
				nr_seq_origem_w, cd_senha_w, ie_tipo_guia_w, ds_observacao_ww, qt_dia_internacao_w, dt_ultimo_pagto_w,
				cd_complemento_w, dt_aceite_dif_acomod_w, nm_usuario_aceite_w, ds_observacao_aceite_w, qt_dieta_acomp_w,
				ie_lib_dieta_w );

	end loop;
	close c04;

	open c05;
	loop
	fetch c05 into
		nr_prescricao_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		begin

		ds_comando_w		:= ' update prescr_medica set nr_atendimento = ' || varsql || nr_atend_destino_p || varsql ||
							   ' where nr_atendimento  = ' || 	varsql || nr_atend_origem_p || varsql ||
							   ' and nr_prescricao  = ' || varsql || nr_prescricao_w || varsql;
		qt_reg_w := obter_valor_dinamico(ds_comando_w, qt_reg_w);
		end;
	end loop;
	close c05;

	open c07;
	loop
	fetch	c07 into nr_seq_laudo_sus_w;
		EXIT WHEN NOT FOUND; /* apply on c07 */
		begin

		select	coalesce(max(NR_LAUDO_SUS),0) + 1
		into STRICT	nr_laudo_sus_w
		from	SUS_LAUDO_PACIENTE
		where	nr_atendimento = nr_atend_destino_p;

		update	SUS_LAUDO_PACIENTE
		set	nr_atendimento 	= nr_atend_destino_p,
			NR_LAUDO_SUS	= nr_laudo_sus_w
		where	NR_SEQ_INTERNO	= nr_seq_laudo_sus_w;					

		end;

	end loop;
	close c07;	

	open C09;
	loop
	fetch C09 into	
		nr_adiantamento_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin
		update 	adiantamento
		set 	nr_atendimento 	= nr_atend_destino_p
		where 	nr_adiantamento = nr_adiantamento_w;
		end;
	end loop;
	close C09;

	open c08;
	loop
	fetch c08 into
		nr_conta_w;
	EXIT WHEN NOT FOUND; /* apply on c08 */
		begin

		ds_comando_w		:= ' update conta_paciente set nr_atendimento = ' || varsql || nr_atend_destino_p || varsql ||
							   ' where nr_atendimento  = ' || 	varsql || nr_atend_origem_p || varsql ||
							   ' and NR_INTERNO_CONTA  = ' || varsql || nr_conta_w || varsql;
		qt_reg_w := obter_valor_dinamico(ds_comando_w, qt_reg_w);
		end;
	end loop;
	close c08;

	open C10;
	loop
	fetch C10 into	
		nr_seq_autorizacao_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin
		update 	autorizacao_convenio
		set 	nr_atendimento 	= nr_atend_destino_p,
			dt_atualizacao 	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where 	nr_sequencia = nr_seq_autorizacao_w;		
		end;
	end loop;
	close C10;	



	update 	autorizacao_convenio
	set	nr_atendimento 	= nr_atend_destino_p,
		dt_atualizacao 	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where 	nr_atendimento = nr_atend_origem_p;


	update	material_autorizado
	set 	nr_atendimento 	= nr_atend_destino_p,
		dt_atualizacao 	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where 	nr_atendimento = nr_atend_origem_p;

	update	procedimento_autorizado
	set	nr_atendimento 	= nr_atend_destino_p,
		dt_atualizacao 	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where 	nr_atendimento = nr_atend_origem_p;

	update	nut_prescricao
	set	nr_atendimento = nr_atend_destino_p
	where 	nr_atendimento = nr_atend_origem_p;

	CALL wheb_usuario_pck.set_ie_executar_trigger('N');

	update	atendimento_sinal_vital
	set	nr_atendimento = nr_atend_destino_p
	where 	nr_atendimento = nr_atend_origem_p
	and	((coalesce(dt_inicial_p::text, '') = '') or (dt_sinal_vital >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (dt_sinal_vital <= dt_final_p));

	CALL wheb_usuario_pck.set_ie_executar_trigger('S');

	update	anamnese_paciente
	set	nr_atendimento = nr_atend_destino_p
	where 	nr_atendimento = nr_atend_origem_p
	and	((coalesce(dt_inicial_p::text, '') = '') or (dt_ananmese >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (dt_ananmese <= dt_final_p));

	CALL wheb_usuario_pck.set_ie_executar_trigger('N');

	update	evolucao_paciente
	set	nr_atendimento = nr_atend_destino_p
	where 	nr_atendimento = nr_atend_origem_p
	and	((coalesce(dt_inicial_p::text, '') = '') or (dt_evolucao >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (dt_evolucao <= dt_final_p));

	CALL wheb_usuario_pck.set_ie_executar_trigger('S');


	update	med_avaliacao_paciente
	set	nr_atendimento = nr_atend_destino_p
	where 	nr_atendimento = nr_atend_origem_p
	and	((coalesce(dt_inicial_p::text, '') = '') or (dt_avaliacao >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (dt_avaliacao <= dt_final_p));

	update	atendimento_perda_ganho
	set	nr_atendimento = nr_atend_destino_p
	where 	nr_atendimento = nr_atend_origem_p
	and	((coalesce(dt_inicial_p::text, '') = '') or (dt_medida >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (dt_medida <= dt_final_p));

	update	w_limites_sv_atend
	set	nr_atendimento = nr_atend_destino_p
	where 	nr_atendimento = nr_atend_origem_p;

	update	atendimento_paciente
	set	nr_atendimento_mae = nr_atend_destino_p
	where	nr_atendimento_mae = nr_atend_origem_p;

	open C06;
	loop
	fetch C06 into	
		nr_atendimento_c06_w,
		dt_diagnostico_c06_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin

		select	count(*)
		into STRICT	ie_possui_diag_medico_w
		from	diagnostico_medico
		where	nr_atendimento = nr_atend_destino_p
		and		dt_diagnostico = dt_diagnostico_c06_w
		and 	(cd_medico IS NOT NULL AND cd_medico::text <> '');

		if (ie_possui_diag_medico_w = 0) then

			insert into diagnostico_medico(
				nr_atendimento,
				dt_diagnostico, 
				ie_tipo_diagnostico,
				cd_medico, 
				dt_atualizacao,
				nm_usuario, 
				ds_diagnostico, 
				ie_tipo_doenca,
				ie_unidade_tempo, 
				qt_tempo,
				ie_tipo_atendimento)
			SELECT	nr_atend_destino_p, 
				a.dt_diagnostico, 
				a.ie_tipo_diagnostico,
				a.cd_medico, 
				a.dt_atualizacao,
				a.nm_usuario, 
				a.ds_diagnostico, 
				a.ie_tipo_doenca,
				a.ie_unidade_tempo, 
				a.qt_tempo,
				a.ie_tipo_atendimento
			from	diagnostico_medico a
			where	a.nr_atendimento = nr_atendimento_c06_w
			and	a.dt_diagnostico = dt_diagnostico_c06_w
			and 	(cd_medico IS NOT NULL AND cd_medico::text <> '');

			commit;
		end if;		

		select 	count(*)
		into STRICT	ie_possui_diag_doenca_w
		from	diagnostico_doenca
		where 	nr_atendimento = nr_atend_destino_p
		and		dt_diagnostico = dt_diagnostico_c06_w
		and		((coalesce(dt_inicial_p::text, '') = '') or (dt_diagnostico >= dt_inicial_p))
		and		((coalesce(dt_final_p::text, '') = '') or (dt_diagnostico <= dt_final_p));

		select 	max(nr_seq_reg_elemento)
		into STRICT	nr_diag_template_w
		from	diagnostico_doenca
		where 	nr_atendimento = nr_atendimento_c06_w
		and		dt_diagnostico = dt_diagnostico_c06_w
		and		((coalesce(dt_inicial_p::text, '') = '') or (dt_diagnostico >= dt_inicial_p))
		and		((coalesce(dt_final_p::text, '') = '') or (dt_diagnostico <= dt_final_p));

		if (nr_diag_template_w > 0) then

			select 	coalesce(max('S'),'N')
			into STRICT	ie_possui_diag_template_w
			from	ehr_reg_elemento_item
			where 	nr_seq_reg_elemento = nr_diag_template_w;

			if (ie_possui_diag_template_w = 'S') then

				delete 	FROM ehr_reg_elemento_item
				where 	nr_seq_reg_elemento = nr_diag_template_w
				and 	nr_atendimento = nr_atendimento_c06_w;

			end if;

		end if;

		if (ie_possui_diag_doenca_w = 0) then
			update	diagnostico_doenca
			set		nr_atendimento = nr_atend_destino_p
			where 	nr_atendimento = nr_atend_origem_p
			and		dt_diagnostico = dt_diagnostico_c06_w
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_diagnostico >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_diagnostico <= dt_final_p));
		else
			update	diagnostico_doenca
			set		nr_atendimento = nr_atend_destino_p
			where 	nr_atendimento = nr_atend_origem_p
			and		dt_diagnostico = dt_diagnostico_c06_w + 1/86400
			and		((coalesce(dt_inicial_p::text, '') = '') or (dt_diagnostico >= dt_inicial_p))
			and		((coalesce(dt_final_p::text, '') = '') or (dt_diagnostico <= dt_final_p));
		end if;	

		delete from	diagnostico_medico a
		where 		nr_atendimento = nr_atend_origem_p
		and		dt_diagnostico = dt_diagnostico_c06_w
		and		((coalesce(dt_inicial_p::text, '') = '') or (dt_diagnostico >= dt_inicial_p))
		and		((coalesce(dt_final_p::text, '') = '') or (dt_diagnostico <= dt_final_p));

		commit;		
		end;
	end loop;
	close C06;

	begin	
	update	ehr_registro
	set	nr_atendimento = nr_atend_destino_p
	where 	nr_atendimento = nr_atend_origem_p;	
	exception
		when others then
		null;
	end;

	if (obter_tipo_convenio(cd_conv_w)	<> 3)  or (ie_tipo_atendimento_w <> 1) or (nr_atend_origem_p <> nr_atend_rec_sus_w) then		
		begin
		CALL exec_sql_dinamico('Tasy', ' alter trigger PE_PRESCRICAO_PEND_ATUAL disable ');

		update	pe_prescricao
		set	nr_atendimento = nr_atend_destino_p
		where 	nr_atendimento = nr_atend_origem_p;

		CALL exec_sql_dinamico('Tasy', ' alter trigger PE_PRESCRICAO_PEND_ATUAL enable ');
		exception
			when others then
			CALL exec_sql_dinamico('Tasy', ' alter trigger PE_PRESCRICAO_PEND_ATUAL enable ');
		end;
	end if;

	update	cirurgia
	set	nr_atendimento = nr_atend_destino_p
	where 	nr_atendimento = nr_atend_origem_p
	and	((coalesce(dt_inicial_p::text, '') = '') or (dt_inicio_prevista  >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (dt_inicio_prevista  <= dt_final_p));

	update	nascimento_amamentacao
	set	nr_atendimento = nr_atend_destino_p
	where 	nr_atendimento = nr_atend_origem_p
	and	((coalesce(dt_inicial_p::text, '') = '') or (dt_registro  >= dt_inicial_p))
	and	((coalesce(dt_final_p::text, '') = '') or (dt_registro  <= dt_final_p));

	open C11;
	loop
	fetch C11 into	
		nr_seq_interno_nasc_w;
	EXIT WHEN NOT FOUND; /* apply on C11 */
		begin

		select max(nr_sequencia) +1
		into STRICT	nr_sequencia_nasc_w
		from	nascimento
		where	nr_atendimento = nr_atend_destino_p;

		update	nascimento
		set	nr_atendimento = nr_atend_destino_p,
			nr_sequencia = nr_sequencia_nasc_w
		where 	nr_seq_interno = nr_seq_interno_nasc_w
		and	((coalesce(dt_inicial_p::text, '') = '') or (dt_nascimento  >= dt_inicial_p))
		and	((coalesce(dt_final_p::text, '') = '') or (dt_nascimento  <= dt_final_p));	

		end;
	end loop;
	close C11;	

	var_permite_maior_alta_w	:= coalesce(obter_valor_param_usuario(48,4,obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento), 'N');

	if (var_permite_maior_alta_w = 'S') then

		select	max(dt_alta), max(cd_motivo_alta)
		into STRICT	dt_alta_w, cd_motivo_alta_w
		from	atendimento_paciente
		where	nr_atendimento		= nr_atend_origem_p;

		select	max(dt_alta)
		into STRICT	dt_alta_dest_w
		from	atendimento_paciente
		where	nr_atendimento		= nr_atend_destino_p;

		if ((dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and dt_alta_w >= dt_alta_dest_w) then
			update 	atendimento_paciente
			set	dt_alta = dt_alta_w,
				cd_motivo_alta = cd_motivo_alta_w
			where	nr_atendimento 	= nr_atend_destino_p;
		end if;
	end if;

	insert into log_atendimento(dt_atualizacao, nm_usuario, cd_log, ds_log, nr_atendimento)
			values (clock_timestamp(), nm_usuario_p, 850, wheb_mensagem_pck.get_texto(800245, 'NR_ATEND_DESTINO='||nr_atend_destino_p), nr_atend_origem_p);
	commit;

end if;

insert into log_mov(dt_atualizacao, nm_usuario, cd_log, ds_log)
		  values (dt_acerto_p, nm_usuario_p, 850, ds_res_w);

if (ie_acao_p = 'T') then
	update 	atend_categ_conv_hist
	set		dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			nr_atendimento = nr_atend_destino_p
	where	nr_atendimento = nr_atend_origem_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agrupar_atendimento ( nr_atend_origem_p bigint, nr_atend_destino_p bigint, ie_acao_p text, nm_usuario_p text, dt_acerto_p timestamp, dt_inicial_p timestamp, dt_final_p timestamp) FROM PUBLIC;

