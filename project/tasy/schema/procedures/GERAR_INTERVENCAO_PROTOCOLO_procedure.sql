-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_intervencao_protocolo ( nr_sequencia_p bigint, nr_seq_proc_p bigint, nr_seq_prot_proc_p bigint, nm_usuario_p text, ds_observacao_p text default null, cd_intervalo_p text default null, ds_horarios_padrao_p text default null, nr_seq_topografia_p text default null, ie_free_item_p text default null, ie_lado_p text default null, nr_seq_atend_disp_p text default null, nr_seq_cur_ferida_p text default null) AS $body$
DECLARE


nr_seq_diag_w		bigint;
nr_seq_proc_w		bigint;
nr_sequencia_w		bigint;
qt_existe_w		bigint;
nr_seq_result_w		bigint;
cd_intervalo_w		varchar(7);
ds_horario_padrao_w	varchar(2000);
nr_seq_probl_colab_w	bigint;
ds_observacao_padr_w	varchar(255);
ds_observacao_protoc_w	varchar(255);
ie_adep_w		varchar(1);
vl_prim_hor_w		varchar(15);
hr_prim_horario_w		timestamp;
vl_param_1303_usuario       varchar(15);
nr_intervalo_w		real;
ds_horarios_w		varchar(2000);
dt_prescricao_w		timestamp;
qt_horas_validade_w	bigint;
ds_prim_horario_w		varchar(255);
ie_se_necessario_w		varchar(1);
nr_prescricao_w			bigint;
cd_intevalo_ww			varchar(20);
ds_horario_padrao_ww		varchar(255);
dt_prim_horario_prescr_w	timestamp;
cd_setor_atendimento_w	bigint;
nr_atendimento_w		bigint;
ie_auxiliar_w       varchar(10);
ie_encaminhar_w     varchar(10);
ie_fazer_w          varchar(10);
ie_orientar_w       varchar(10);
ie_supervisionar_w   varchar(10);
ie_agora_w			varchar(10);
ie_interv_espec_agora_w	varchar(10)	:= 'N';
hr_horario_espec_w		varchar(10);
ie_interv_agora_w	varchar(10);
dt_primeiro_horario_w	timestamp;
ie_limpar_w		char(1) := 'N';

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(cd_intervalo_p,coalesce(cd_intevalo_ww,a.cd_intervalo)),
		coalesce(ds_horario_padrao_ww,coalesce(a.ds_horario_padrao,ds_horarios_padrao_p)),
		coalesce(ds_observacao_protoc_w,a.ds_observacao_padr),
		a.ie_adep,
		a.ie_auxiliar    ,
		a.ie_encaminhar  ,
		a.ie_fazer       ,
		a.ie_orientar    ,
		a.ie_supervisionar
	from	pe_procedimento a
	where	a.nr_sequencia	= nr_seq_proc_p
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	not exists (	SELECT	1
					from	pe_prescr_proc x
					where	x.nr_seq_prescr	= nr_sequencia_p
					and	x.nr_seq_proc	= a.nr_sequencia);

BEGIN

vl_prim_hor_w := obter_param_usuario(281, 325, obter_perfil_ativo, nm_usuario_p, 0, vl_prim_hor_w);
vl_param_1303_usuario := obter_param_usuario(281, 1303, obter_perfil_ativo, nm_usuario_p, 0, vl_param_1303_usuario);

select	max(qt_horas_validade),
	max(nr_prescricao),
	max(dt_prescricao),
	max(nr_atendimento),
	max(ie_agora),
	max(to_char(DT_PRIMEIRO_HORARIO,'hh24:mi')),
	max(DT_INICIO_PRESCR)
into STRICT	qt_horas_validade_w,
	nr_prescricao_w,
	dt_prescricao_w,
	nr_atendimento_w,
	ie_agora_w,
	hr_horario_espec_w,
	dt_primeiro_horario_w
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_p
and 	coalesce(ie_situacao,'A') = 'A';


if (ie_agora_w	= 'S' and vl_param_1303_usuario = 'S') then
	ie_interv_espec_agora_w	:= 'S';
else
	hr_horario_espec_w	:= null;
end if;

cd_setor_atendimento_w	:= obter_setor_atendimento(nr_atendimento_w);

select	max(cd_intervalo),
	max(ds_horario_padrao),
	max(ds_observacao_padr)
into STRICT	cd_intevalo_ww,
	ds_horario_padrao_ww,
	ds_observacao_protoc_w
from	pe_protocolo_proc
where	nr_sequencia	= nr_seq_prot_proc_p;

open C01;
loop
fetch C01 into
	nr_seq_proc_w,
	cd_intervalo_w,
	ds_horario_padrao_w,
	ds_observacao_padr_w,
	ie_adep_w,
	ie_auxiliar_w    ,
	ie_encaminhar_w  ,
	ie_fazer_w       ,
	ie_orientar_w    ,
	ie_supervisionar_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	nextval('pe_prescr_proc_seq')
	into STRICT	nr_sequencia_w
	;

	if (vl_prim_hor_w = '1') then
		hr_prim_horario_w	:= ESTABLISHMENT_TIMEZONE_UTILS.todayAtTime(obter_primeiro_horario_sae(coalesce(cd_intervalo_w, '00'), nr_sequencia_p));
	elsif (vl_prim_hor_w = '2') then
		hr_prim_horario_w 	:= trunc(dt_prescricao_w + (1/24),'hh24');
	elsif (vl_prim_hor_w = '5') then
		select	ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_w, Obter_Prim_Horario_Prescricao(nr_atendimento_w,cd_setor_atendimento_w,dt_prescricao_w,nm_usuario_p,'S'))
		into STRICT	dt_prim_horario_prescr_w
		from	pe_prescricao
		where	nr_sequencia	= nr_sequencia_p;

		if (dt_prim_horario_prescr_w IS NOT NULL AND dt_prim_horario_prescr_w::text <> '') then
			hr_prim_horario_w := dt_prim_horario_prescr_w;
		end if;
	end if;

	if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
		SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, coalesce(dt_primeiro_horario_w,hr_prim_horario_w), coalesce(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w, nr_sequencia_p) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w;
		if (coalesce(ds_horario_padrao_w::text, '') = '') then
			ds_horario_padrao_w	:= ds_horarios_w;
		end if;
	end if;

	select	coalesce(max(ie_agora),'N'), coalesce(max(IE_SE_NECESSARIO),'N')
	into STRICT	ie_interv_agora_w,
		ie_se_necessario_w
	from	intervalo_prescricao
	where	cd_intervalo	= cd_intervalo_w;
	
	if (ie_interv_agora_w	= 'S') then
		hr_prim_horario_w	:= clock_timestamp();
		ds_horario_padrao_w:= to_char(clock_timestamp(),'hh24:mi');
	end if;

	ie_limpar_w := obter_se_limpa_prim_hor(cd_intervalo_w, cd_setor_Atendimento_w);

	if	(((ie_interv_espec_agora_w	= 'S') and (coalesce(cd_intervalo_w::text, '') = '')) or (ie_limpar_w = 'S')) then
		hr_prim_horario_w	:= null;
	end if;	

	insert into pe_prescr_proc(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_proc,
		nr_seq_prescr,
		qt_pontuacao,
		ds_origem,
		nr_seq_apres,
		cd_intervalo,
		ds_horarios,
		qt_intervencao,
		ie_se_necessario,
		ds_observacao,
		ie_suspenso,
		ie_adep,
		hr_prim_horario,
		nr_seq_prot_proc,
		ie_auxiliar    ,
		ie_encaminhar  ,
		ie_fazer       ,
		ie_orientar    ,
		ie_supervisionar,
		ie_agora,
		ie_interv_espec_agora,
		hr_horario_espec,
		ie_free_item
		, nr_seq_atend_disp
		, nr_seq_topografia
		, ie_lado
		, nr_seq_cur_ferida)
	values (	nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_proc_w,
		nr_sequencia_p,
		1,
		'A',
		1,
		cd_intervalo_w,
		ds_horario_padrao_w,
		1,
		ie_se_necessario_w,
		coalesce(ds_observacao_p,ds_observacao_padr_w),
		'N',
		ie_adep_w,
		to_char(hr_prim_horario_w,'hh24:mi'),
		nr_seq_prot_proc_p,
		ie_auxiliar_w    ,
		ie_encaminhar_w  ,
		ie_fazer_w       ,
		ie_orientar_w    ,
		ie_supervisionar_w,
		ie_interv_agora_w,
		CASE WHEN coalesce(hr_horario_espec_w::text, '') = '' THEN 'N'  ELSE 'S' END ,
		hr_horario_espec_w,
		ie_free_item_p
		, nr_seq_atend_disp_p
		, CASE WHEN nr_seq_topografia_p=0 THEN null  ELSE nr_seq_topografia_p END
		, ie_lado_p
		, nr_seq_cur_ferida_p);
		
	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
		CALL gerar_prescr_item_sae(nr_sequencia_p,nr_sequencia_w,nm_usuario_p);
	end if;
	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_intervencao_protocolo ( nr_sequencia_p bigint, nr_seq_proc_p bigint, nr_seq_prot_proc_p bigint, nm_usuario_p text, ds_observacao_p text default null, cd_intervalo_p text default null, ds_horarios_padrao_p text default null, nr_seq_topografia_p text default null, ie_free_item_p text default null, ie_lado_p text default null, nr_seq_atend_disp_p text default null, nr_seq_cur_ferida_p text default null) FROM PUBLIC;

