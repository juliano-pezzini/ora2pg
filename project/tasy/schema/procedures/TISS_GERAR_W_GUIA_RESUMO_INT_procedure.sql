-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_w_guia_resumo_int (nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, ds_dir_padrao_p text, nm_usuario_p text) AS $body$
DECLARE


cd_ans_w		varchar(100);
nr_atendimento_w		bigint;
nr_interno_conta_w		bigint;
cd_autorizacao_w		varchar(100);
cd_procedimento_w	varchar(60);
qt_proc_guia_w		bigint;
cd_senha_w		varchar(100);
cd_medico_executor_w	varchar(10);
nr_cpf_relat_w		varchar(12);
dt_inicio_vigencia_w	timestamp;
dt_final_vigencia_w		timestamp;
nr_seq_guia_w		bigint;
nr_seq_conta_guia_w	bigint;
nm_medico_executor_w	varchar(255);
sg_conselho_w		varchar(15);
uf_crm_w		valor_dominio.vl_dominio%type;
cd_cbo_saude_w		varchar(20);
ie_tipo_atendimento_w	varchar(20);
ie_tipo_saida_w		varchar(20);
cd_edicao_amb_w		varchar(20);
cd_opm_gravado_w	varchar(20);
qt_procedimento_w		double precision;
vl_reducao_acrescimo_w	double precision;
vl_procedimento_w		double precision;
VL_TAXAS_w		double precision;
VL_DIARIAS_w		double precision;
VL_MEDICAMENTOS_w	double precision;
VL_MATERIAIS_w		double precision;
vl_opms_w		double precision;
VL_GASES_w		double precision;
vl_opm_w		double precision;
vl_total_opm_w		double precision;
vl_tot_opm_w		double precision;
cd_categoria_conv_w	varchar(20);
ie_tecnica_utilizada_W	varchar(20);
dt_entrada_w		timestamp;
dt_alta_w			timestamp;
ie_via_acesso_w		varchar(20);
ie_totalizar_opm_w		varchar(20);
vl_unitario_w		double precision;
ds_procedimento_w		varchar(255);
dt_procedimento_w		timestamp;
vl_total_w		double precision := 0;
cont_w			integer  := 0;
ds_razao_social_w		varchar(255);
cd_cnes_w		varchar(20);
cd_cgc_w		varchar(20);
qt_autorizada_w		double precision;
dt_autorizacao_w		timestamp;
cd_doenca_cid_w		varchar(20);
ds_observacao_w		varchar(255);
cd_opm_w		varchar(20);
ds_opm_w		varchar(255);

nm_pessoa_fisica_w	varchar(255);
nr_crm_w			varchar(20);

nr_seq_apresentacao_w	bigint;
nr_seq_apres_w		bigint;
nr_seq_apres_proc_anterior_w	bigint;/* rfcaldas. 10/01/2008. Serve para tratar quando a guia quebrar por nº de participantes */
nr_seq_procedimento_w	bigint;		/* senão a sequencia de referencia fica = 0. */
nr_seq_apres_partic_w	bigint;
nr_seq_apres_opm_w	bigint;

ds_funcao_medico_w	varchar(20);
nr_cpf_w			varchar(20);

cd_cid_obito_w		varchar(20);
nr_declaracao_w		varchar(20);
cd_cid_w			varchar(20);
cd_cid2_w		varchar(20);

ds_carater_internacao_w	varchar(10);
ds_tipo_saida_w		varchar(10);
ie_tipo_protocolo_w		varchar(10);
cd_tipo_acomodacao_w	varchar(10);
ie_regime_internacao_w	varchar(10);
ie_clinica_w		varchar(10);
ds_tipo_faturamento_w	varchar(10);
ds_arquivo_logo_w	varchar(140);
ie_tiss_tipo_guia_w	varchar(140);
cd_convenio_w		integer;
ie_obito_mulher_w	varchar(2);
nr_dnv_w		varchar(255);
CD_MEDICO_CONVENIO_w	varchar(140);
ie_parto_cesaria_W	varchar(10);
ie_parto_normal_W	varchar(10);
qt_nasc_vivos_W		smallint;
qt_nasc_mortos_w	smallint;
nr_seq_apresent_W	bigint;
dt_inicio_cirurgia_w	timestamp;
dt_fim_cirurgia_w	timestamp;
ie_gestacao_w		varchar(2);
ie_aborto_w		varchar(2);
ie_transtorno_w		varchar(2);
ie_complicacao_puerperio_w varchar(2);
ie_complicacao_neonatal_w varchar(2);
ie_baixo_peso_w		varchar(2);
ie_atend_rn_sala_parto_w varchar(2);

cd_autorizacao_princ_w	varchar(255);
cd_cgc_prestador_w	varchar(255);

vl_procedimento_total_w	double precision;
cd_estabelecimento_w	bigint;

nr_seq_guia_proc_w	bigint;
qt_total_opm_w		bigint := 0;
nr_seq_opm_inicial_w	bigint;
qt_proc_inicial_w	bigint;
nr_seq_opm_w		bigint;
ie_sair_w		varchar(3);
tx_hora_extra_w		double precision;
ds_arquivo_logo_comp_w	varchar(255);
ie_gerar_tiss_w		varchar(10);
nr_seq_classif_atend_w	bigint;
cd_setor_entrada_w	bigint;
ie_ordenacao_ri_w	varchar(10);
cd_barras_w		varchar(255);
ds_versao_w		varchar(20);
nr_seq_opme_w		bigint;
ie_agrupar_opme_w	varchar(1);
dt_mesano_referencia_w	timestamp;
ds_posicao_w		integer;
ds_dir_padrao_w		varchar(255);
im_logo_convenio_w	tiss_logo_convenio.im_logo_convenio%type;

c01 CURSOR FOR
SELECT	nr_sequencia,
	cd_autorizacao,
	ie_carater_internacao,
	ds_tipo_saida,
	nr_interno_conta,
	nr_atendimento,
	dt_entrada,
	ie_tipo_saida,
	ie_tipo_acomodacao,
	ie_regime_internacao,
	ie_tipo_internacao,
	ds_tipo_fatur,
	dt_alta,
	ie_tiss_tipo_guia,
	cd_autorizacao_princ,
	cd_cgc_prestador
from (SELECT	a.nr_sequencia,
		a.cd_autorizacao,
		b.ie_carater_internacao,
		'A' ds_tipo_saida,
		a.nr_interno_conta,
		b.nr_atendimento,
		b.dt_entrada,
		a.ie_tipo_saida,
		b.ie_tipo_acomodacao,
		b.ie_regime_internacao,
		b.ie_tipo_internacao,
		b.ds_tipo_fatur,
		b.dt_alta,
		a.ie_tiss_tipo_guia,
		a.cd_autorizacao_princ,
		a.cd_cgc_prestador
	from	tiss_conta_guia a,
		tiss_conta_atend b
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	a.nr_interno_conta	= nr_interno_conta_p
	and	a.ie_tiss_tipo_guia	= '5'
	
union

	select	a.nr_sequencia,
		a.cd_autorizacao,
		b.ie_carater_internacao,
		'A' ds_tipo_saida,
		a.nr_interno_conta,
		b.nr_atendimento,
		b.dt_entrada,
		a.ie_tipo_saida,
		b.ie_tipo_acomodacao,
		b.ie_regime_internacao,
		b.ie_tipo_internacao,
		b.ds_tipo_fatur,
		b.dt_alta,
		a.ie_tiss_tipo_guia,
		a.cd_autorizacao_princ,
		a.cd_cgc_prestador
	from	tiss_conta_guia a,
		TISS_PROTOCOLO_GUIA c,
		tiss_conta_atend b
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	c.nr_sequencia		= a.nr_seq_prot_guia
	and	c.nr_seq_protocolo	= nr_seq_protocolo_p
	and	a.ie_tiss_tipo_guia	= '5') alias0
order by cd_autorizacao,
	CASE WHEN ie_ordenacao_ri_w='1' THEN TISS_OBTER_DATA_PROC_GUIA(nr_sequencia)  ELSE null END;

c02 CURSOR FOR
SELECT	a.cd_procedimento,
	a.cd_edicao_amb,
	sum(a.qt_procedimento),
	sum(a.vl_reducao_acrescimo),
	sum(a.vl_procedimento),
	a.ie_via_acesso,
	(tiss_obter_regra_campo(5, 'VL_UNITARIO', CD_CONVENIO_W, a.vl_unitario, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null, a.cd_setor_execucao))::numeric ,
	a.ds_procedimento,
	a.dt_procedimento,
	CASE WHEN coalesce(a.nr_seq_proc,0)=0 THEN  (null)::numeric   ELSE a.nr_sequencia END  nr_sequencia,
	a.dt_inicio_cir,
	a.dt_fim_cir,
	a.ie_tecnica_utilizada,
	a.vl_reducao_acrescimo,
	CASE WHEN ie_ordenacao_ri_w='1' THEN  a.nr_seq_apresentacao  ELSE CASE WHEN ie_ordenacao_ri_w='3' THEN  a.nr_seq_apresentacao  ELSE CASE WHEN ie_ordenacao_ri_w='4' THEN  a.nr_seq_apresentacao  ELSE CASE WHEN ie_ordenacao_ri_w='7' THEN  a.nr_seq_apresentacao  ELSE 0 END  END  END  END  nr_seq_apresentacao
from	TISS_CONTA_PROC a
where	nr_seq_guia		= nr_seq_conta_guia_w
group by a.cd_procedimento,
	a.cd_edicao_amb,
	a.ie_via_acesso,
	a.vl_unitario,
	a.ds_procedimento,
	a.dt_procedimento,
	CASE WHEN coalesce(a.nr_seq_proc,0)=0 THEN  (null)::numeric   ELSE a.nr_sequencia END ,
	a.dt_inicio_cir,
	a.dt_fim_cir,
	a.ie_tecnica_utilizada,
	a.vl_reducao_acrescimo,
	a.cd_setor_execucao,
	CASE WHEN ie_ordenacao_ri_w='1' THEN  a.nr_seq_apresentacao  ELSE CASE WHEN ie_ordenacao_ri_w='3' THEN  a.nr_seq_apresentacao  ELSE CASE WHEN ie_ordenacao_ri_w='4' THEN  a.nr_seq_apresentacao  ELSE CASE WHEN ie_ordenacao_ri_w='7' THEN  a.nr_seq_apresentacao  ELSE 0 END  END  END  END

union

SELECT	null,
	null,
	(null)::numeric ,
	(null)::numeric ,
	(null)::numeric ,
	null,
	(null)::numeric ,
	null,
	to_date(null) dt_procedimento,
	(null)::numeric ,
	to_date(null),
	to_date(null),
	null,
	null,
	null nr_seq_apresentacao
from	tiss_conta_opm_exec a
where	a.nr_seq_guia	= nr_seq_conta_guia_w
and	not exists (	select	1
			from	tiss_conta_proc b
			where	a.nr_seq_guia	= b.nr_seq_guia)

union

select	null,			-- Edgar 22/08/2007, OS 65088, gerar guia mesmo que ela não tenha itens
	null,
	(null)::numeric ,
	(null)::numeric ,
	(null)::numeric ,
	null,
	(null)::numeric ,
	null,
	to_date(null) dt_procedimento,
	(null)::numeric ,
	to_date(null),
	to_date(null),
	null,
	null,
	null nr_seq_apresentacao
from	tiss_conta_guia a
where	a.ie_tiss_tipo_guia	= '5'
and	a.nr_sequencia		= nr_seq_conta_guia_w
and	not exists (	select	1
			from	tiss_conta_opm_exec x
			where	x.nr_seq_guia		= a.nr_sequencia
			
union

			select	1
			from	tiss_conta_proc x
			where	x.nr_seq_guia		= a.nr_sequencia)
and	not exists (	select	1			/* OS77813. Só gerar uma guia em branco se o prestador e a guia forem diferentes */
			from	tiss_conta_guia x	
			where	coalesce(x.cd_cgc_prestador,'X')	= coalesce(a.cd_cgc_prestador,'X')
			and	x.nr_sequencia			= a.nr_sequencia
			and	coalesce(x.cd_autorizacao,'X')	= coalesce(a.cd_autorizacao, 'X')
			and	x.ie_tiss_tipo_guia		= a.ie_tiss_tipo_guia
			and	exists (select	1
					from	tiss_conta_proc y
					where	y.nr_seq_guia		= x.nr_sequencia))
order by nr_seq_apresentacao,
	dt_procedimento;

c03 CURSOR FOR
SELECT	nr_cpf,
	ie_funcao_medico,
	nm_medico_executor,
	sg_conselho,
	nr_crm,
	substr(uf_crm,1,2),
	cd_medico_convenio,
	nr_cpf_relat,
	cd_cbos
from	tiss_conta_partic
where	nr_seq_proc	= nr_seq_procedimento_w
order by ie_funcao_medico;

c06 CURSOR FOR
SELECT	nr_interno_conta
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p

union

SELECT	nr_interno_conta
from	conta_paciente
where	nr_seq_protocolo	= nr_seq_protocolo_p;

c05 CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_conta_guia
from	w_tiss_guia
where	nm_usuario		= nm_usuario_p
and	ie_tiss_tipo_guia	= '5'
and	nr_interno_conta 	= nr_interno_conta_w
order	by obter_select_concatenado_bv('select count(*) from tiss_conta_opm_exec where nr_seq_guia = :nr_seq_guia','nr_seq_guia='||nr_seq_conta_guia||';',';'),
	nr_seq_conta_guia desc,
	nr_sequencia;

c04 CURSOR FOR
SELECT	nr_sequencia,
	cd_opm,
	cd_tabela,
	ds_opm,
	qt_opm,
	vl_unitario_opm,
	vl_opm,
	cd_barras	
from	tiss_conta_opm_exec
where	nr_seq_guia		= nr_seq_conta_guia_w
and	nr_sequencia		>= nr_seq_opm_inicial_w
and	nr_interno_conta	= nr_interno_conta_w
and	obter_se_projeto_versao(0,12,ds_versao_w,0) = 'N' /*OS 765492 Para a versão 3 não deverão ser gerados OPME na guia de RI. Estes serão gerados na guia de outras despesas*/
order by nr_sequencia;


BEGIN

delete	from w_tiss_guia
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_dados_atendimento
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_beneficiario
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_paciente
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_partic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_exec
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_totais
where	nm_usuario		= nm_usuario_p;

delete 	from w_tiss_internacao
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_relatorio
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_opm_exec
where	nm_usuario		= nm_usuario_p;

commit;

CALL tiss_convenio_pck.set_dt_referencia_tiss(null);

if (coalesce(nr_seq_protocolo_p,0) > 0) or (coalesce(nr_interno_conta_p,0) > 0) then
	
	if (coalesce(nr_seq_protocolo_p,0) > 0) then
		select	c.cd_ans,
			b.ds_arquivo_logo_tiss,
			b.cd_convenio,
			a.cd_estabelecimento,
			coalesce(a.dt_referencia_tiss,a.dt_mesano_referencia)
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_convenio_w,
			cd_estabelecimento_w,
			dt_mesano_referencia_w
		from	pessoa_juridica c,
			convenio b,
			protocolo_convenio a
		where	a.cd_convenio		= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	a.nr_seq_protocolo	= nr_seq_protocolo_p;
		
		CALL tiss_convenio_pck.set_dt_referencia_tiss(dt_mesano_referencia_w);
	
	elsif (coalesce(nr_interno_conta_p,0) > 0) then

		select	cd_ans,
			b.ds_arquivo_logo_tiss,
			b.cd_convenio,
			a.cd_estabelecimento,
			a.dt_mesano_referencia
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_convenio_w,
			cd_estabelecimento_w,
			dt_mesano_referencia_w
		from	pessoa_juridica c,
			convenio b,
			conta_paciente a
		where	a.cd_convenio_parametro	= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	a.nr_interno_conta	= nr_interno_conta_p;

	end if;

	select	max(ds_arquivo_logo_comp),
		coalesce(max(ie_gerar_tiss), 'S'),
		max(ie_ordenacao_ri),
		coalesce(max(ie_agrupar_opme),'S')
	into STRICT	ds_arquivo_logo_comp_w,
		ie_gerar_tiss_w,
		ie_ordenacao_ri_w,
		ie_agrupar_opme_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;
	
	select	coalesce(max(tiss_obter_versao(cd_convenio_w,cd_estabelecimento_w,dt_mesano_referencia_w)),'2.02.03')
	into STRICT	ds_versao_w
	;
	
	
	if (coalesce(ie_gerar_tiss_w,'S') = 'S') then
	
		begin
			select	im_logo_convenio
			into STRICT	im_logo_convenio_w
			from	tiss_logo_convenio
			where	cd_convenio	   = cd_convenio_w
			and 	coalesce(ie_situacao,'N') = 'A';
		exception
		when others then
			im_logo_convenio_w := null;
		end;
				
		if (coalesce(im_logo_convenio_w::text, '') = '') and (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
			ds_arquivo_logo_w := tiss_diretorio_logo(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || ds_arquivo_logo_w;
		end if;
	
		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') and (coalesce(im_logo_convenio_w::text, '') = '') then
		
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_arquivo_logo_w,
				null);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				im_logo_convenio_w);
		end if;

		open c01;
		loop
		fetch c01 into
			nr_seq_conta_guia_w,
			cd_autorizacao_w,
			ds_carater_internacao_w,
			ds_tipo_saida_w,
			nr_interno_conta_w,
			nr_atendimento_w,
			dt_entrada_w,
			ie_tipo_saida_w,
			cd_tipo_acomodacao_w,
			ie_regime_internacao_w,
			ie_clinica_w,
			ds_tipo_faturamento_w,
			dt_alta_w,
			ie_tiss_tipo_guia_w,
			cd_autorizacao_princ_w,
			cd_cgc_prestador_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			nr_seq_apres_partic_w	:= 0;
			nr_seq_apresentacao_w	:= 1;
			qt_proc_guia_w		:= 0;

			select	max(ie_tipo_atendimento)
			into STRICT	ie_tipo_atendimento_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_w;

			select	max(cd_categoria_parametro)
			into STRICT	cd_categoria_conv_w
			from	conta_paciente
			where	nr_interno_conta	= nr_interno_conta_w;

			select	max((Obter_Classificacao_Atend(nr_atendimento_w,'C'))::numeric ),
				max(obter_setor_atendimento(nr_atendimento_w))
			into STRICT	nr_seq_classif_atend_w,
				cd_setor_entrada_w
			;
			
			open c02;
			loop
			fetch c02 into
				cd_procedimento_w,
				cd_edicao_amb_w,
				qt_procedimento_w,
				vl_reducao_acrescimo_w,
				vl_procedimento_w,
				ie_via_acesso_w,
				vl_unitario_w,
				ds_procedimento_w,
				dt_procedimento_w,
				nr_seq_procedimento_w,
				dt_inicio_cirurgia_w,
				dt_fim_cirurgia_w,
				ie_tecnica_utilizada_w,
				tx_hora_extra_w,
				nr_seq_apres_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */

				qt_proc_guia_w		:= qt_proc_guia_w + 1;

				if (qt_proc_guia_w = 1) then
					nr_seq_guia_w := TISS_GERAR_CABECALHO_RI(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
				end if;

				if (nr_seq_apresentacao_w	<= 15 and (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'N')) or (nr_seq_apresentacao_w <= 24 and (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S')) then
					insert	into w_tiss_proc_paciente(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_procedimento,
						cd_edicao_amb,
						qt_procedimento,
						vl_reducao_acrescimo,
						vl_procedimento,
						dt_entrada,
						dt_alta,
						ie_via_acesso,
						vl_unitario,
						ds_procedimento,
						dt_procedimento,
						nr_seq_apresentacao,
						dt_inicio_cirurgia,
						dt_fim_cirurgia,
						ie_tecnica_utilizada)
					values (nextval('w_tiss_proc_paciente_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_procedimento_w,
						cd_edicao_amb_w,
						qt_procedimento_w,
						vl_reducao_acrescimo_w,
						vl_procedimento_w,
						dt_entrada_w,
						dt_alta_w,
						ie_via_acesso_w,
						vl_unitario_w,
						ds_procedimento_w,			
						dt_procedimento_w,
						nr_seq_apresentacao_w,
						dt_inicio_cirurgia_w,
						dt_fim_cirurgia_w,
						ie_tecnica_utilizada_w);
				end if;

				if (nr_seq_apresentacao_w	> 15 and (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'N')) or (nr_seq_apresentacao_w > 24 and (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S')) then
					nr_seq_apresentacao_w	:= 1;
					nr_seq_apres_partic_w	:= 0;

					nr_seq_guia_w := TISS_GERAR_CABECALHO_RI(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);

					insert	into w_tiss_proc_paciente(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_procedimento,
						cd_edicao_amb,
						qt_procedimento,
						vl_reducao_acrescimo,
						vl_procedimento,
						dt_entrada,
						dt_alta,
						ie_via_acesso,
						vl_unitario,
						ds_procedimento,
						dt_procedimento,
						nr_seq_apresentacao,
						dt_inicio_cirurgia,
						dt_fim_cirurgia,
						ie_tecnica_utilizada)
					values (nextval('w_tiss_proc_paciente_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_procedimento_w,
						cd_edicao_amb_w,
						qt_procedimento_w,
						vl_reducao_acrescimo_w,
						vl_procedimento_w,
						dt_entrada_w,
						dt_alta_w,
						ie_via_acesso_w,
						vl_unitario_w,
						ds_procedimento_w,			
						dt_procedimento_w,
						nr_seq_apresentacao_w,
						dt_inicio_cirurgia_w,
						dt_fim_cirurgia_w,
						ie_tecnica_utilizada_w);

				end if;

				nr_seq_apres_proc_anterior_w	:= (null)::numeric;

				open c03;
				loop
				fetch c03 into
					nr_cpf_w,
					ds_funcao_medico_w,
					nm_pessoa_fisica_w,
					sg_conselho_w,
					nr_crm_w,
					uf_crm_w,
					CD_MEDICO_CONVENIO_w,
					nr_cpf_relat_w,
					cd_cbo_saude_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */

					nr_seq_apres_partic_w	:= nr_seq_apres_partic_w + 1;

					insert	into w_tiss_proc_partic(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						nr_seq_procedimento,
						nr_seq_apresentacao,
						ie_funcao_medico,
						nr_cpf,
						nm_pessoa_fisica,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_interno,
						nr_cpf_relat,
						cd_cbos)
					values (nextval('w_tiss_proc_partic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						CASE WHEN nr_seq_apresentacao_w=0 THEN  nr_seq_apres_proc_anterior_w  ELSE nr_seq_apresentacao_w END ,
						nr_seq_apres_partic_w,
						ds_funcao_medico_w,
						nr_cpf_w,
						nm_pessoa_fisica_w,
						sg_conselho_w,
						nr_crm_w,
						uf_crm_w,
						CD_MEDICO_CONVENIO_w,
						nr_cpf_relat_w,
						cd_cbo_saude_w);

					if (nr_seq_apres_partic_w	= 20 and (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'N')) or (nr_seq_apres_partic_w = 26 and (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S'))  then
						nr_seq_guia_w := TISS_GERAR_CABECALHO_RI(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
						nr_seq_apres_partic_w		:= 1;
						nr_seq_apres_proc_anterior_w	:= nr_seq_apresentacao_w;
						nr_seq_apresentacao_w		:= 0;
					end if;

				end loop;
				close c03;

				nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

			end loop;
			close c02;

		end loop;
		close c01;

		open c06;
		loop
		fetch c06 into
			nr_interno_conta_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */

			nr_seq_apres_opm_w	:= 0;
			qt_proc_guia_w 		:= 0;
			ie_sair_w		:= 'N';

			open c05;
			loop
			fetch c05 into
				nr_seq_guia_w,
				nr_seq_conta_guia_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
			
				if (coalesce(nr_seq_opm_inicial_w::text, '') = '') then
					select	min(nr_sequencia)
					into STRICT	nr_seq_opm_inicial_w
					from	tiss_conta_opm_exec
					where	nr_seq_guia		= nr_seq_conta_guia_w;
				end if;

				qt_proc_guia_w 		:= 0;
				nr_seq_apres_opm_w	:= 0;
				ie_sair_w		:= 'N';
				
				open c04;
				loop
				fetch c04 into
					nr_seq_opm_w,
					cd_opm_w,
					cd_edicao_amb_w,
					ds_opm_w,
					qt_autorizada_w,
					vl_opm_w,
					vl_total_opm_w,
					cd_barras_w;
				EXIT WHEN NOT FOUND or ie_sair_w = 'S';  /* apply on c04 */
				
					qt_proc_guia_w 		:= qt_proc_guia_w + 1;
					nr_seq_apres_opm_w	:= nr_seq_apres_opm_w + 1;

					select	max(cd_opm)
					into STRICT	cd_opm_gravado_w
					from	w_tiss_opm_exec
					where	nm_usuario	= nm_usuario_p
					and	coalesce(vl_unitario,0)	= coalesce(vl_opm_w,0)
					and	nr_interno_conta 	= nr_interno_conta_w
					and	coalesce(ie_agrupar_opme_w,'S') = 'S'
					and	upper(ds_opm)	= upper(ds_opm_w)  /*OS76974.18/12/2007. Tive que incluir esta comparação pois pode haver */
					and	cd_opm		= cd_opm_w;	   /* OPM com o mesmo código de conversão para o convênio segundo o solicitante da OS.*/
					if (coalesce(cd_opm_gravado_w,'0') = '0') then

						if (qt_proc_guia_w <= 5) then

							insert into w_tiss_opm_exec(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								cd_opm,
								cd_edicao,
								ds_opm,
								qt_solicitada,
								qt_autorizada,
								vl_unitario,
								vl_opm,
								nr_seq_apresentacao,
								nr_interno_conta,
								cd_barras)
							values (nextval('w_tiss_opm_exec_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								cd_opm_w,
								cd_edicao_amb_w,
								ds_opm_w,
								qt_autorizada_w,
								qt_autorizada_w,
								vl_opm_w,
								vl_total_opm_w,
								nr_seq_apres_opm_w,
								nr_interno_conta_w,
								cd_barras_w);
						else
							ie_sair_w		:= 'S';
							CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);
							nr_seq_opm_inicial_w	:= nr_seq_opm_w;
						end if;
					end if;
				end loop;
				close c04;

				CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

			end loop;
			close c05;

			qt_proc_guia_w 		:= 0;
			nr_seq_apres_opm_w	:= 0;
			qt_proc_inicial_w	:= 0;

			open c04;
			loop
			fetch c04 into
				nr_seq_opm_w,
				cd_opm_w,
				cd_edicao_amb_w,
				ds_opm_w,
				qt_autorizada_w,
				vl_opm_w,
				vl_total_opm_w,
				cd_barras_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
			
				select	max(cd_opm)
				into STRICT	cd_opm_gravado_w
				from	w_tiss_opm_exec
				where	nm_usuario	= nm_usuario_p
				and	nr_interno_conta	= nr_interno_conta_w
				and	coalesce(vl_unitario,0)	= coalesce(vl_opm_w,0)
				and	upper(ds_opm)	= upper(ds_opm_w)  /*OS76974.18/12/2007. Tive que incluir esta comparação jaguara pois pode haver */
				and	cd_opm		= cd_opm_w;	   /* OPM com o mesmo código de conversão para o convênio segundo o solicitante da OS.*/
				if (coalesce(cd_opm_gravado_w,'0') = '0') then
					if (qt_proc_inicial_w = 0) then
						nr_seq_guia_w := TISS_GERAR_CABECALHO_RI(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
						qt_proc_inicial_w	:= qt_proc_inicial_w + 1;
					end if;

					qt_proc_guia_w 		:= qt_proc_guia_w + 1;
					nr_seq_apres_opm_w	:= nr_seq_apres_opm_w + 1;

					if (qt_proc_guia_w <= 5) then

						insert into w_tiss_opm_exec(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							cd_opm,
							cd_edicao,
							ds_opm,
							qt_solicitada,
							qt_autorizada,
							vl_unitario,
							vl_opm,
							nr_seq_apresentacao,
							nr_interno_conta,
							cd_barras)
						values (nextval('w_tiss_opm_exec_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							cd_opm_w,
							cd_edicao_amb_w,
							ds_opm_w,
							qt_autorizada_w,
							qt_autorizada_w,
							vl_opm_w,
							vl_total_opm_w,
							nr_seq_apres_opm_w,
							nr_interno_conta_w,
							cd_barras_w);
					end if;

					if (qt_proc_guia_w = 6) then

						CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);
						nr_seq_guia_w := TISS_GERAR_CABECALHO_RI(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
						qt_proc_guia_w 		:= 1;
						nr_seq_apres_opm_w	:= 1;

						insert into w_tiss_opm_exec(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							cd_opm,
							cd_edicao,
							ds_opm,
							qt_solicitada,
							qt_autorizada,
							vl_unitario,
							vl_opm,
							nr_seq_apresentacao,
							nr_interno_conta,
							cd_barras)
						values (nextval('w_tiss_opm_exec_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							cd_opm_w,
							cd_edicao_amb_w,
							ds_opm_w,
							qt_autorizada_w,
							qt_autorizada_w,
							vl_opm_w,
							vl_total_opm_w,
							nr_seq_apres_opm_w,
							nr_interno_conta_w,
							cd_barras_w);
					end if;

				end if;

			end loop;
			close c04;

			CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

		end loop;
		close c06;

		CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);
	
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_w_guia_resumo_int (nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, ds_dir_padrao_p text, nm_usuario_p text) FROM PUBLIC;

