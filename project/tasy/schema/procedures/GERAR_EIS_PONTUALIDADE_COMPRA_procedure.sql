-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_pontualidade_compra (dt_mesano_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


cd_fornecedor_w			varchar(14);
ds_quebra_w			varchar(255);
cd_material			integer;
nr_ordem_compra_w		bigint;
dt_ordem_compra_w		timestamp;
dt_entrega_limite_w			timestamp;
qt_material_w			double precision;
vl_unitario_material_w		double precision;
vl_item_liquido_w			double precision;
dt_real_entrega_w			timestamp;
qt_real_entrega_w			double precision;
qt_entrega_pontual_w		double precision;
qt_total_resumo_w			double precision;
qt_pontual_resumo_w		double precision;
ie_tipo_informacao_w		smallint;


dt_parametro_w			timestamp;
dt_parametro_fim_w			timestamp;
nr_sequencia_w			bigint;
cd_estabelecimento_w		smallint;
cd_operacao_nf_w			smallint;
cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w		classe_material.cd_classe_material%type;
cd_comprador_w			bigint;
ie_consignado_w			smallint;
ie_urgente_w			varchar(2);
ie_padronizado_w			varchar(2);
qt_pontual_item_w			double precision;
qt_pontual_w            		double precision;
qt_total_item_w			double precision;



c01 CURSOR FOR
SELECT	a.cd_cgc_fornecedor,
	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	b.cd_material,
	a.nr_ordem_compra,
	a.dt_ordem_compra,
	coalesce(c.dt_entrega_limite,c.dt_prevista_entrega),
	c.qt_prevista_entrega,
	b.vl_unitario_material,
	b.vl_item_liquido,
	coalesce(obter_dt_entrada_nf_item_oc(a.nr_ordem_compra, b.nr_item_oci, c.dt_prevista_entrega),c.dt_real_entrega),
	c.qt_real_entrega,
	a.cd_comprador,
	e.ie_consignado,
	a.ie_urgente,
	SUBSTR(obter_se_material_padronizado(a.cd_estabelecimento,e.cd_material),1,2) ie_padronizado,
	a.cd_estabelecimento
FROM	ordem_compra a,
	ordem_compra_item b,
	ordem_compra_item_entrega c,
	estrutura_material_v e
WHERE	b.cd_material 		= e.cd_material
AND	b.nr_item_oci 		= c.nr_item_oci
AND	b.nr_ordem_compra 	= c.nr_ordem_compra
AND	a.nr_ordem_compra 	= b.nr_ordem_compra
AND	coalesce(c.dt_entrega_limite,c.dt_prevista_entrega) BETWEEN dt_parametro_w AND dt_parametro_fim_w
AND	obter_se_ordem_possui_nota(a.nr_ordem_compra) > 0
and	coalesce(c.dt_cancelamento::text, '') = ''
and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
AND	(a.cd_cgc_fornecedor IS NOT NULL AND a.cd_cgc_fornecedor::text <> '');

c02 CURSOR FOR
SELECT	dt_referencia,
	cd_estabelecimento,
	cd_grupo_material,
	cd_subgrupo_material,
	cd_classe_material,
	cd_material,
	cd_fornecedor,
	cd_comprador,
	ie_consignado,
	ie_urgente,
	ie_padronizado,
	cd_operacao_nf,
	qt_total,
	qt_pontual,
	qt_total_item,
	qt_pontual_item
from	eis_pontualidade_compra
where	PKG_DATE_UTILS.start_of(dt_referencia, 'MONTH', 0) = PKG_DATE_UTILS.start_of(dt_parametro_w,'MONTH', 0)
and	ie_periodo = 'D';



BEGIN

dt_parametro_w             	:= PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'month', 0);
dt_parametro_fim_w 		:= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_p,1,0),'MONTH', 0) - 1/86400;


delete
from	eis_pontualidade_compra
where	PKG_DATE_UTILS.start_of(dt_referencia,'MONTH', 0) = dt_parametro_w;
commit;

delete
from	eis_pontualidade_compra
where	PKG_DATE_UTILS.start_of(dt_referencia,'year', 0) = PKG_DATE_UTILS.start_of(dt_parametro_w,'year', 0)
and	ie_periodo = 'A';
commit;

open C01;
loop
fetch C01 into
	cd_fornecedor_w,
	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	cd_material,
	nr_ordem_compra_w,
	dt_ordem_compra_w,
	dt_entrega_limite_w,
	qt_material_w,
	vl_unitario_material_w,
	vl_item_liquido_w,
	dt_real_entrega_w,
	qt_real_entrega_w,
	cd_comprador_w,
	ie_consignado_w,
	ie_urgente_w,
	ie_padronizado_w,
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	coalesce(max(cd_operacao_nf),0)
	into STRICT	cd_operacao_nf_w
	from	nota_fiscal
	where	nr_ordem_compra = nr_ordem_compra_w;

	if (PKG_DATE_UTILS.start_of(dt_real_entrega_w,'dd', 0) <= PKG_DATE_UTILS.start_of(dt_entrega_limite_w,'dd', 0)) then
		qt_entrega_pontual_w := coalesce(qt_real_entrega_w,0);
	else
		qt_entrega_pontual_w := 0;
	end if;


	if (qt_entrega_pontual_w <> 0) then
		qt_pontual_item_w := 1;
	else
		qt_pontual_item_w := 0;
	end if;

	insert into eis_pontualidade_compra(
			dt_referencia,
			nr_sequencia,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material,
			cd_material,
			cd_fornecedor,
			cd_comprador,
			ie_consignado,
			ie_urgente,
			ie_padronizado,
			cd_operacao_nf,
			qt_total,
			qt_pontual,
			qt_total_item,
			qt_pontual_item,
			ie_periodo)
	values (		dt_entrega_limite_w,
			nextval('eis_pontualidade_compra_seq'),
			cd_estabelecimento_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_grupo_material_w,
			cd_subgrupo_material_w,
			cd_classe_material_w,
			cd_material,
			cd_fornecedor_w,
			cd_comprador_w,
			ie_consignado_w,
			ie_urgente_w,
			ie_padronizado_w,
			cd_operacao_nf_w,
			qt_material_w,
			qt_entrega_pontual_w,
			1,
			coalesce(qt_pontual_item_w,0),
			'D');
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	dt_entrega_limite_w,
	cd_estabelecimento_w,
	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	cd_material,
	cd_fornecedor_w,
	cd_comprador_w,
	ie_consignado_w,
	ie_urgente_w,
	ie_padronizado_w,
	cd_operacao_nf_w,
	qt_material_w,
	qt_pontual_w,
	qt_total_item_w,
	qt_pontual_item_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin


	insert into eis_pontualidade_compra(
				dt_referencia,
				nr_sequencia,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				cd_grupo_material,
				cd_subgrupo_material,
				cd_classe_material,
				cd_material,
				cd_fornecedor,
				cd_comprador,
				ie_consignado,
				ie_urgente,
				ie_padronizado,
				cd_operacao_nf,
				qt_total,
				qt_pontual,
				qt_total_item,
				qt_pontual_item,
				ie_periodo)
		values (		PKG_DATE_UTILS.start_of(dt_entrega_limite_w,'MONTH', 0),
				nextval('eis_pontualidade_compra_seq'),
				cd_estabelecimento_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_grupo_material_w,
				cd_subgrupo_material_w,
				cd_classe_material_w,
				cd_material,
				cd_fornecedor_w,
				cd_comprador_w,
				ie_consignado_w,
				ie_urgente_w,
				ie_padronizado_w,
				cd_operacao_nf_w,
				qt_material_w,
				qt_pontual_w,
				qt_total_item_w,
				qt_pontual_item_w,
				'M');
	end;
end loop;
close C02;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_pontualidade_compra (dt_mesano_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

