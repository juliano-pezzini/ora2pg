-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inventario_barras ( nr_sequencia_p bigint, cd_material_p bigint, qt_material_p bigint, nr_seq_lote_p bigint, ie_tipo_inventario_p text, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE



cd_estabelecimento_w		bigint;
cd_material_estoque_w		bigint;
cd_local_estoque_w			bigint;
ie_consignado_w				varchar(1);
cd_fornecedor_w				varchar(14);
cd_fornecedor_ww			varchar(14);
cd_cgc_fornec_w				varchar(14);
nr_sequencia_w				bigint;
ds_erro_w					varchar(255);
ds_material_w				varchar(255);
qt_max_contagem_w			bigint;
ie_novo_item_barra_w		varchar(01);
ie_bloqueio_inventario_w	varchar(01);
ie_estoque_lote_w			varchar(01) := 'N';
qt_saldo_w					inventario_material.qt_saldo%type;
qt_existe_w					bigint;
qt_material_w				double precision;
ie_forma_gerar_contagem_w 	varchar(15);
ds_descricao_w				varchar(255);
ie_mat_consignado_w			smallint;
nr_seq_lote_w				bigint;
nr_sequencia_inv_lote_w		bigint;
qt_contagem_w				double precision;
qt_recontagem_w				double precision;
qt_seg_recontagem_w			double precision;
qt_terc_recontagem_w		double precision;
ie_gera_usuario_contagem_w	varchar(1);
ie_bloqueio_w				varchar(255);
qt_estoque_w				double precision;


BEGIN

ie_forma_gerar_contagem_w := obter_param_usuario(143, 96, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_forma_gerar_contagem_w);
ie_gera_usuario_contagem_w := obter_param_usuario(143, 275, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gera_usuario_contagem_w);

if (nr_seq_lote_p = 0) then
	nr_seq_lote_w := null;
else
	nr_seq_lote_w := nr_seq_lote_p;
end if;

select	coalesce(max(qt_max_contagem),4),
	coalesce(max(ie_novo_item_barra),'N'),
	coalesce(max(cd_estabelecimento),0),
	coalesce(max(cd_local_estoque),0),
	coalesce(max(ie_consignado),'N'),
	coalesce(max(cd_fornecedor),'X')
into STRICT	qt_max_contagem_w,
	ie_novo_item_barra_w,
	cd_estabelecimento_w,
	cd_local_estoque_w,
	ie_consignado_w,
	cd_fornecedor_w
from	inventario
where	nr_sequencia	= nr_sequencia_p;

ds_erro_w := null;
cd_fornecedor_ww := cd_fornecedor_w;

select	max(cd_material_estoque)
into STRICT	cd_material_estoque_w
from	material
where	cd_material = cd_material_p;

ie_estoque_lote_w := substr(obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material_estoque_w),1,1);

if (ie_estoque_lote_w = 'S') and (nr_seq_lote_p > 0) and (coalesce(ie_consignado_w,'N') = 'S') then

    select	cd_cgc_fornec
	into STRICT	cd_fornecedor_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_lote_p;

    if (cd_fornecedor_ww <> 'X') then
        select	count(*)
        into STRICT	qt_existe_w
        from	inventario_material
        where	nr_seq_inventario = nr_sequencia_p
        and	cd_material = cd_material_estoque_w
        and     cd_fornecedor = cd_fornecedor_w
        and	(qt_inventario IS NOT NULL AND qt_inventario::text <> '');
    else
        select	count(*)
        into STRICT	qt_existe_w
        from	inventario_material
        where	nr_seq_inventario = nr_sequencia_p
        and	cd_material = cd_material_estoque_w
        and	(qt_inventario IS NOT NULL AND qt_inventario::text <> '');
    end if;
else
	select	count(*)
	into STRICT	qt_existe_w
	from	inventario_material
	where	nr_seq_inventario = nr_sequencia_p
	and	cd_material = cd_material_estoque_w
	and	(qt_inventario IS NOT NULL AND qt_inventario::text <> '');
end if;

if (qt_existe_w = 0) then
	begin
	ie_estoque_lote_w := substr(obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material_estoque_w),1,1);

	if (ie_estoque_lote_w = 'S') then
		nr_seq_lote_w := null;
	end if;

	ie_mat_consignado_w := obter_se_mat_consignado(cd_material_estoque_w);

	if (ie_consignado_w = 'N') then
		begin
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_sequencia_w
		from	inventario_material
		where	nr_seq_inventario	= nr_sequencia_p
		and	cd_material		= cd_material_estoque_w
		and	coalesce(qt_inventario::text, '') = '';

		if (ie_mat_consignado_w = 1) then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281149) || ' ' || cd_material_estoque_w || ' ' || WHEB_MENSAGEM_PCK.get_texto(281150);
		end if;
		end;
	elsif (ie_consignado_w = 'S') then
		begin
		if (nr_seq_lote_p > 0) then
			select	cd_cgc_fornec
			into STRICT	cd_fornecedor_w
			from	material_lote_fornec
			where	nr_sequencia = nr_seq_lote_p;
		end if;

		if (ie_mat_consignado_w = 0) and (ie_consignado_w = 'S')	then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281149) || ' ' || cd_material_estoque_w || ' ' || WHEB_MENSAGEM_PCK.get_texto(281151);
		elsif (cd_fornecedor_w = 'X') then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281152);
		else
            if (cd_fornecedor_ww <> 'X') then
                select	coalesce(max(nr_sequencia),0)
                into STRICT	nr_sequencia_w
                from	inventario_material
                where	nr_seq_inventario	= nr_sequencia_p
                and	cd_material		= cd_material_estoque_w
                and	cd_fornecedor		= cd_fornecedor_w
                and	coalesce(qt_inventario::text, '') = '';
            else
                select	coalesce(max(nr_sequencia),0)
                into STRICT	nr_sequencia_w
                from	inventario_material
                where	nr_seq_inventario	= nr_sequencia_p
                and	cd_material		= cd_material_estoque_w
                and	coalesce(qt_inventario::text, '') = '';
            end if;
		end if;
		end;
	end if;

	if (nr_sequencia_w = 0) and (ie_novo_item_barra_w = 'S') and (coalesce(ds_erro_w::text, '') = '') then
		begin

		select	CASE WHEN cd_fornecedor_w='X' THEN  null  ELSE cd_fornecedor_w END
		into STRICT	cd_fornecedor_ww
		;

		ie_bloqueio_w := sup_verifica_bloqueio_mat_inv(
			cd_estabelecimento_w, trunc(clock_timestamp(),'mm'), cd_local_estoque_w, cd_material_estoque_w, cd_fornecedor_ww, ie_consignado_w, ie_bloqueio_w);

		if (ie_bloqueio_w = 'S') then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281149) || ' ' || cd_material_estoque_w || ' ' || WHEB_MENSAGEM_PCK.get_texto(281153);
		end if;

		if (coalesce(ds_erro_w::text, '') = '') then
			begin
			select	nextval('inventario_material_seq')
			into STRICT	nr_sequencia_w
			;

			insert into inventario_material(
				nr_sequencia,
				nr_seq_inventario,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_material,
				nr_seq_lote_fornec,
				cd_fornecedor)
			values (	nr_sequencia_w,
				nr_sequencia_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_material_estoque_w,
				nr_seq_lote_w,
				CASE WHEN cd_fornecedor_w='X' THEN  null  ELSE cd_fornecedor_w END );

			/*Se for tipo 3 nem vai verificar a forma de gerar a quantidade nos novos itens*/

			if (ie_forma_gerar_contagem_w = '0') or (ie_forma_gerar_contagem_w = '1') then
				begin
				qt_material_w		:= 0;		
				if (ie_forma_gerar_contagem_w = '0') then
					qt_material_w		:= qt_material_p;
				end if;

				if (ie_tipo_inventario_p = '2') then
					update	inventario_material
					set	qt_contagem	= qt_material_w
					where	nr_sequencia	= nr_sequencia_w;
				elsif (ie_tipo_inventario_p = '3') then
					update	inventario_material
					set	qt_recontagem	= qt_material_w,
						qt_contagem	= qt_material_w
					where	nr_sequencia	= nr_sequencia_w;
				elsif (ie_tipo_inventario_p = '4') then
					update	inventario_material
					set	qt_seg_recontagem	= qt_material_w,
						qt_recontagem		= qt_material_w,
						qt_contagem		= qt_material_w
					where	nr_sequencia		= nr_sequencia_w;
				end if;
				end;
			end if;

			if (ie_consignado_w = 'S') and (cd_fornecedor_w <> 'X') then
				begin
				update	fornecedor_mat_consignado
				set	ie_bloqueio_inventario	= 'S'
				where	cd_estabelecimento		= cd_estabelecimento_w
				and	cd_local_estoque		= cd_local_estoque_w
				and	cd_material		= cd_material_estoque_w
				and	dt_mesano_referencia	= trunc(clock_timestamp(), 'mm')
				and	cd_fornecedor		= cd_fornecedor_w;
				if (NOT FOUND) then
					insert into fornecedor_mat_consignado(
						cd_estabelecimento,
						cd_fornecedor,
						cd_local_estoque,
						cd_material,
						dt_atualizacao,
						dt_mesano_referencia,
						ie_bloqueio_inventario,
						nm_usuario,
						qt_estoque)
					values (	cd_estabelecimento_w,
						cd_fornecedor_w,
						cd_local_estoque_w,
						cd_material_estoque_w,
						clock_timestamp(),
						trunc(clock_timestamp(),'mm'),
						'S',
						nm_usuario_p,
						0);
				end if;

				qt_estoque_w := obter_saldo_estoque(cd_estabelecimento_w, cd_material_estoque_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm'), qt_estoque_w);

				qt_saldo_w := coalesce(obter_saldo_estoque_consig(
						cd_estabelecimento_w,
						cd_fornecedor_w,
						cd_material_estoque_w,
						cd_local_estoque_w),0);

				update	inventario_material
				set	qt_saldo	= qt_saldo_w,
					qt_estoque	= qt_estoque_w,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_sequencia_w;
				end;
			else
				begin
				update	saldo_estoque
				set	ie_bloqueio_inventario	= 'S'
				where	cd_estabelecimento		= cd_estabelecimento_w
				and	cd_local_estoque		= cd_local_estoque_w
				and	cd_material		= cd_material_estoque_w
				and	dt_mesano_referencia	= trunc(clock_timestamp(),'mm');
				if (NOT FOUND) then
					insert into saldo_estoque(
						cd_estabelecimento,
						cd_local_estoque,
						cd_material,
						dt_atualizacao,
						dt_mesano_referencia,
						ie_bloqueio_inventario,
						nm_usuario,
						qt_estoque,
						qt_reservada,
						qt_reservada_requisicao,
						vl_estoque)
					values (	cd_estabelecimento_w,
						cd_local_estoque_w,
						cd_material_estoque_w,
						clock_timestamp(),
						trunc(clock_timestamp(),'mm'),
						'S',
						nm_usuario_p,
						0,
						0,
						0,
						0);
				end if;

				qt_estoque_w := obter_saldo_estoque(cd_estabelecimento_w, cd_material_estoque_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm'), qt_estoque_w);

				qt_saldo_w := obter_saldo_disp_estoque(
						cd_estabelecimento_w,
						cd_material_estoque_w,
						cd_local_estoque_w,
						trunc(clock_timestamp(), 'mm'));

				update	inventario_material
				set	qt_saldo	= qt_saldo_w,
					qt_estoque	= qt_estoque_w,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_sequencia_w;
				end;
			end if;
			end;
		end if;
		end;
	end if;

	if (nr_sequencia_w > 0) then
		begin

		select	qt_saldo
		into STRICT	qt_saldo_w
		from	inventario_material
		where	nr_sequencia = nr_sequencia_w;

		if (coalesce(qt_saldo_w::text, '') = '') then
			if (ie_consignado_w = 'S') and (cd_fornecedor_w <> 'X') then
				qt_saldo_w := coalesce(obter_saldo_estoque_consig(
						cd_estabelecimento_w,
						cd_fornecedor_w,
						cd_material_estoque_w,
						cd_local_estoque_w),0);

				update	inventario_material
				set	qt_saldo	= qt_saldo_w,
					qt_estoque	= qt_estoque_w,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_sequencia_w;
			else
				qt_saldo_w := obter_saldo_disp_estoque(
						cd_estabelecimento_w,
						cd_material_estoque_w,
						cd_local_estoque_w,
						trunc(clock_timestamp(), 'mm'));

				update	inventario_material
				set	qt_saldo	= qt_saldo_w,
					qt_estoque	= qt_estoque_w,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_sequencia_w;
			end if;
		end if;

		if (nr_seq_lote_p > 0) then
			begin
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_sequencia_inv_lote_w
			from	inventario_material_lote
			where	nr_seq_item = nr_sequencia_w
			and	nr_seq_lote_fornec = nr_seq_lote_p;

			if (nr_sequencia_inv_lote_w = 0) then
				begin
				if (ie_estoque_lote_w = 'S') then
					begin
					CALL sup_ajustar_saldo_lote(cd_estabelecimento_w, trunc(clock_timestamp(),'month'), cd_material_estoque_w);

					if (ie_consignado_w = 'S') then
						select	coalesce(sum(qt_estoque),0)
						into STRICT	qt_saldo_w
						from	fornecedor_mat_consig_lote
						where	cd_estabelecimento	= cd_estabelecimento_w
						and	cd_local_estoque	= cd_local_estoque_w
						and	cd_material		= cd_material_estoque_w
						and	dt_mesano_referencia	= trunc(clock_timestamp(),'month')
						and	cd_fornecedor		= cd_fornecedor_w
						and	nr_seq_lote		= nr_seq_lote_p;
					else				
						select	coalesce(sum(qt_estoque),0)
						into STRICT	qt_saldo_w
						from	saldo_estoque_lote
						where	cd_estabelecimento	= cd_estabelecimento_w
						and	cd_local_estoque	= cd_local_estoque_w
						and	cd_material		= cd_material_estoque_w
						and	dt_mesano_referencia	= trunc(clock_timestamp(),'month')
						and	nr_seq_lote		= nr_seq_lote_p;
					end if;
					end;
				else
					qt_saldo_w := null;
				end if;

				select	nextval('inventario_material_lote_seq')
				into STRICT	nr_sequencia_inv_lote_w
				;

				insert into inventario_material_lote(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_inventario,
					nr_seq_item,
					nr_seq_lote_fornec,
					qt_material,
					qt_saldo)
				values (	nr_sequencia_inv_lote_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_p,
					nr_sequencia_w,
					nr_seq_lote_p,
					0,
					qt_saldo_w);

				/*Se for tipo 3 nem vai verificar a forma de gerar a quantidade nos novos itens*/

				if (ie_forma_gerar_contagem_w = '0') or (ie_forma_gerar_contagem_w = '1') then
					begin
					qt_material_w := 0;		
					if (ie_forma_gerar_contagem_w = '0') then
						qt_material_w		:= qt_material_p;
					end if;

					if (ie_tipo_inventario_p = '2') then
						update	inventario_material_lote
						set	qt_contagem	= qt_material_w
						where	nr_sequencia	= nr_sequencia_inv_lote_w
						and	coalesce(qt_inventario::text, '') = '';
					elsif (ie_tipo_inventario_p = '3') then
						update	inventario_material_lote
						set	qt_recontagem	= qt_material_w,
							qt_contagem	= qt_material_w
						where	nr_sequencia	= nr_sequencia_inv_lote_w
						and	coalesce(qt_inventario::text, '') = '';
					elsif (ie_tipo_inventario_p = '4') then
						update	inventario_material_lote
						set	qt_seg_recontagem	= qt_material_w,
							qt_recontagem		= qt_material_w,
							qt_contagem		= qt_material_w
						where	nr_sequencia		= nr_sequencia_inv_lote_w
						and	coalesce(qt_inventario::text, '') = '';
					end if;
					end;
				end if;
				end;
			end if;

			if (coalesce(ie_consignado_w,'N') = 'N') then				
				qt_estoque_w := obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_estoque_w, cd_local_estoque_w, trunc(clock_timestamp(),'month'),nr_seq_lote_p);
			else			
				qt_estoque_w := obter_saldo_disp_consig(cd_estabelecimento_w, cd_fornecedor_w, cd_material_estoque_w, cd_local_estoque_w, nr_seq_lote_p);
			end if;


			if (ie_tipo_inventario_p = '1') then				
				update	inventario_material_lote
				set	qt_contagem	= coalesce(qt_contagem,0) + qt_material_p,
				        qt_saldo      = coalesce(qt_estoque_w,0),
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_sequencia	= nr_sequencia_inv_lote_w
				and	coalesce(qt_inventario::text, '') = '';
			elsif (ie_tipo_inventario_p = '2') then
				update	inventario_material_lote
				set	qt_recontagem	= coalesce(qt_recontagem,0) + qt_material_p,
					qt_saldo      = coalesce(qt_estoque_w,0),
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_sequencia	= nr_sequencia_inv_lote_w
				and	coalesce(qt_inventario::text, '') = '';
			elsif (ie_tipo_inventario_p = '3') then
				update	inventario_material_lote
				set	qt_seg_recontagem	= coalesce(qt_seg_recontagem,0) + qt_material_p,
					qt_saldo      = coalesce(qt_estoque_w,0),
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_sequencia	= nr_sequencia_inv_lote_w
				and	coalesce(qt_inventario::text, '') = '';
			elsif (ie_tipo_inventario_p = '4') then
				update	inventario_material_lote
				set	qt_terc_recontagem	= coalesce(qt_terc_recontagem,0) + qt_material_p,
					qt_saldo      = coalesce(qt_estoque_w,0),
					nm_usuario	= nr_sequencia_inv_lote_w,
					dt_atualizacao	= clock_timestamp()
				where	nr_sequencia	= nr_sequencia_inv_lote_w
				and	coalesce(qt_inventario::text, '') = '';
			end if;
			end;
		end if;

		if (ie_estoque_lote_w = 'S') then
			begin		
			select 	sum(qt_contagem),
				sum(qt_recontagem),
				sum(qt_seg_recontagem),
				sum(qt_terc_recontagem)
			into STRICT	qt_contagem_w,
				qt_recontagem_w,
				qt_seg_recontagem_w,
				qt_terc_recontagem_w
			from 	inventario_material_lote
			where	nr_seq_item = nr_sequencia_w;

			update	inventario_material
			set	qt_contagem		= qt_contagem_w,
				qt_recontagem		= qt_recontagem_w,
				qt_seg_recontagem	= qt_seg_recontagem_w,
				qt_terc_recontagem	= qt_terc_recontagem_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_sequencia		= nr_sequencia_w;
			end;
		else
			begin
			if (ie_tipo_inventario_p = '1') then	
				update	inventario_material
				set	qt_contagem	= coalesce(qt_contagem,0) + qt_material_p,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp(),
					nr_seq_lote_fornec	= nr_seq_lote_w
				where	nr_sequencia	= nr_sequencia_w;
			elsif (ie_tipo_inventario_p = '2') then
				update	inventario_material
				set	qt_recontagem	= coalesce(qt_recontagem,0) + qt_material_p,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp(),
					nr_seq_lote_fornec	= nr_seq_lote_w
				where	nr_sequencia	= nr_sequencia_w;
			elsif (ie_tipo_inventario_p = '3') then
				update	inventario_material
				set	qt_seg_recontagem	= coalesce(qt_seg_recontagem,0) + qt_material_p,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp(),
					nr_seq_lote_fornec	= nr_seq_lote_w
				where	nr_sequencia	= nr_sequencia_w;
			elsif (ie_tipo_inventario_p = '4') then
				update	inventario_material
				set	qt_terc_recontagem	= coalesce(qt_terc_recontagem,0) + qt_material_p,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp(),
					nr_seq_lote_fornec	= nr_seq_lote_w
				where	nr_sequencia	= nr_sequencia_w;
			end if;
			end;
		end if;

		if (ie_gera_usuario_contagem_w = 'S') then
			begin
			if (ie_tipo_inventario_p = '1') then	
				update	inventario_material
				set	nm_usuario_contagem = nm_usuario_p,
					dt_contagem = clock_timestamp()
				where	nr_sequencia	= nr_sequencia_w;
			elsif (ie_tipo_inventario_p = '2') then
				update	inventario_material
				set	nm_usuario_recontagem = nm_usuario_p,
					dt_recontagem = clock_timestamp()
				where	nr_sequencia	= nr_sequencia_w;
			elsif (ie_tipo_inventario_p = '3') then
				update	inventario_material
				set	nm_usuario_seg_recontagem = nm_usuario_p,
					dt_seg_recontagem = clock_timestamp()
				where	nr_sequencia	= nr_sequencia_w;
			elsif (ie_tipo_inventario_p = '4') then
				update	inventario_material
				set	nm_usuario_terc_recontagem = nm_usuario_p,
					dt_terc_recontagem = clock_timestamp()
				where	nr_sequencia	= nr_sequencia_w;
			end if;
			end;
		end if;

		end;
	end if;
	end;
end if;

if	((nr_sequencia_w = 0) or (qt_existe_w > 0)) and (coalesce(ds_erro_w::text, '') = '') then
	begin
	select	coalesce(max(ds_material),WHEB_MENSAGEM_PCK.get_texto(281161))
	into STRICT	ds_material_w
	from	material
	where	cd_material	= cd_material_p;

	if (qt_existe_w > 0) then
		ds_descricao_w :=	substr(WHEB_MENSAGEM_PCK.get_texto(281155) || cd_material_p || ' - ' || ds_material_w  || chr(13) || chr(10) ||
					WHEB_MENSAGEM_PCK.get_texto(281157) || chr(13) || chr(10) || 
					WHEB_MENSAGEM_PCK.get_texto(281158)|| qt_material_p,1,255);
	else
		ds_descricao_w :=	substr(WHEB_MENSAGEM_PCK.get_texto(281155) || cd_material_p || ' - ' || ds_material_w  || chr(13) || chr(10) ||
					WHEB_MENSAGEM_PCK.get_texto(281159) || chr(13) || chr(10) || 
					WHEB_MENSAGEM_PCK.get_texto(281158)|| qt_material_p,1,255);
	end if;				

	insert into inventario_arq(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_inventario,
		ds_arquivo,
		ds_conteudo,
		ie_envio_retorno)
	values (	nextval('inventario_arq_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		WHEB_MENSAGEM_PCK.get_texto(818914), /*'Log de consistencias dos itens'*/
		ds_descricao_w,
		'R');

	ds_erro_w := substr(WHEB_MENSAGEM_PCK.get_texto(281149) || ds_material_w || ' ' || WHEB_MENSAGEM_PCK.get_texto(281160),1,255);
	end;
end if;

ds_erro_p := ds_erro_w;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inventario_barras ( nr_sequencia_p bigint, cd_material_p bigint, qt_material_p bigint, nr_seq_lote_p bigint, ie_tipo_inventario_p text, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

