-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_insert_red_dot_test ( nr_atendimento_p bigint, nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vOftRedDotTest strRecTypeFormOft) AS $body$
DECLARE

  ds_erro_w varchar(4000);
  ds_pont_verm_od_w exame_pontos_vermelhos.ds_pont_verm_od%type;
  ds_pont_verm_oe_w exame_pontos_vermelhos.ds_pont_verm_oe%type;
  nr_seq_red_dot_test_w exame_pontos_vermelhos.nr_sequencia%type;
  nm_usuario_w exame_pontos_vermelhos.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
  nr_sequencia_w exame_pontos_vermelhos.nr_sequencia%type;
BEGIN
  BEGIN
    FOR i IN 1..vOftRedDotTest.COUNT
    LOOP
      BEGIN
        IF vOftRedDotTest[i](.ds_valor IS NOT NULL AND .ds_valor::text <> '') THEN
          CASE UPPER(vOftRedDotTest[i].nm_campo)
          WHEN 'DS_PONT_VERM_OD' THEN
            ds_pont_verm_od_w := vOftRedDotTest[i].ds_valor;
          WHEN 'DS_PONT_VERM_OE' THEN
            ds_pont_verm_oe_w := vOftRedDotTest[i].ds_valor;
          ELSE
            NULL;
          END CASE;
        END IF;
      END;
    END LOOP;
    SELECT MAX(nr_sequencia)
    INTO STRICT nr_sequencia_w
    FROM exame_pontos_vermelhos
    WHERE nr_seq_consulta_form = nr_seq_consulta_form_p
    AND nr_seq_consulta        = nr_seq_consulta_p
    AND coalesce(dt_liberacao::text, '') = ''
    AND nm_usuario             = nm_usuario_w;
    IF (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') THEN
      UPDATE exame_pontos_vermelhos
      SET ds_pont_verm_od = ds_pont_verm_od_w,
        ds_pont_verm_oe   = ds_pont_verm_oe_w,
        dt_atualizacao    = clock_timestamp(),
        nm_usuario        = nm_usuario_w
      WHERE nr_sequencia  = nr_sequencia_w;
      CALL wheb_usuario_pck.set_ie_commit('S');
    ELSE
      SELECT nextval('exame_pontos_vermelhos_seq')
      INTO STRICT nr_seq_red_dot_test_w
;
      INSERT
      INTO exame_pontos_vermelhos(
          nr_sequencia,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ds_pont_verm_od,
          ds_pont_verm_oe,
          ie_situacao,
          nr_atendimento,
          nr_seq_consulta_form,
          cd_pessoa_fisica,
          nr_seq_consulta
        )
        VALUES (
          nr_seq_red_dot_test_w,
          clock_timestamp(),
          nm_usuario_w,
          clock_timestamp(),
          nm_usuario_w,
          ds_pont_verm_od_w,
          ds_pont_verm_oe_w,
          'A',
          nr_atendimento_p,
          nr_seq_consulta_form_p,
          obter_pf_usuario(nm_usuario_w,'C'),
          nr_seq_consulta_p
        );
      CALL wheb_usuario_pck.set_ie_commit('S');
    END IF;
  EXCEPTION
  WHEN invalid_cursor_state THEN
    NULL;
  WHEN OTHERS THEN
    ds_erro_w := SUBSTR(sqlerrm,1,4000);
    UPDATE OFT_CONSULTA_FORMULARIO
    SET ds_stack = SUBSTR(dbms_utility.format_call_stack
      ||ds_erro_w,1,4000)
    WHERE nr_sequencia = nr_seq_consulta_form_p;
  END;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_insert_red_dot_test ( nr_atendimento_p bigint, nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vOftRedDotTest strRecTypeFormOft) FROM PUBLIC;

