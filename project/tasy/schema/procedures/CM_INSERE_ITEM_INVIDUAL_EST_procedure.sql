-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cm_insere_item_invidual_est ( nr_seq_item_p bigint, nr_seq_ciclo_p bigint, nr_seq_lote_p bigint, cd_setor_atendimento_p bigint, nm_usuario_barras_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_ciclo_w		bigint;
nr_seq_lote_w		bigint;
nr_seq_embalagem_w	bigint;
qt_ponto_w			double precision;
nr_sequencia_w		bigint;
nr_seq_controle_w	bigint;
cd_fornecedor_w		varchar(14);
qt_existe_validade_w	bigint;
dt_validade_w			timestamp;


BEGIN

nr_seq_ciclo_w		:= coalesce(nr_seq_ciclo_p,0);
nr_seq_lote_w		:= coalesce(nr_seq_lote_p,0);

select	nr_seq_embalagem,
		coalesce(qt_ponto, 0),
		cd_cnpj
into STRICT	nr_seq_embalagem_w,
		qt_ponto_w,
		cd_fornecedor_w
from	cm_item
where	nr_sequencia = nr_seq_item_p;



select	max(nr_sequencia)
into STRICT	nr_sequencia_w
from	cm_conjunto_cont
where	ie_status_conjunto  in (8,1)
and	nr_seq_item = nr_seq_item_p;

if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then --Se o item ja foi limpo, deve apenas atualizar o registro, sem gerar novo item, caso contrario ira gerar erro na trigger.
	CALL cm_atualiza_ciclo_conj(	nr_sequencia_w,
				nr_seq_ciclo_p,
				nm_usuario_barras_p,
				null);
				
	CALL CME_ATUALIZA_VALIDADE(	nr_sequencia_w,
				nr_seq_ciclo_p,
				nm_usuario_barras_p);
else



	select	nextval('cm_conjunto_cont_seq')
	into STRICT	nr_sequencia_w
	;

	if (nr_seq_lote_w = 0) then
		begin
		select	coalesce(max(nr_seq_controle),0) + 1
		into STRICT	nr_seq_controle_w
		from	cm_conjunto_cont;
		end;
	else
		begin
		select	nr_seq_controle
		into STRICT	nr_seq_controle_w
		from	cm_lote_conjunto
		where	nr_sequencia = nr_seq_lote_w;
		end;
	end if;
	
	select	coalesce(max(qt_dia_validade),0)
	into STRICT	qt_existe_validade_w
	from 	cm_classif_embalagem
	where	nr_sequencia = nr_seq_embalagem_w;

	if (qt_existe_validade_w > 0) then
		select (clock_timestamp() + qt_dia_validade)
		into STRICT	dt_validade_w
		from	cm_classif_embalagem
		where	nr_sequencia = nr_seq_embalagem_w;

	end if;
		
	insert into cm_conjunto_cont(
		nr_sequencia,
		nr_seq_item,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		ie_status_conjunto,
		dt_origem,
		nm_usuario_origem,
		nr_seq_embalagem,
		dt_receb_ester,
		nm_usuario_ester,
		nr_seq_ciclo,
		vl_esterilizacao,
		qt_ponto,
		cd_setor_atendimento,
		nr_seq_lote,
		nr_seq_controle,
		ie_situacao,
		cd_cgc,
		dt_validade)
	values (nr_sequencia_w,
		nr_seq_item_p,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_barras_p,
		1,
		clock_timestamp(),
		nm_usuario_barras_p,
		nr_seq_embalagem_w,
		clock_timestamp(),
		nm_usuario_barras_p,
		CASE WHEN nr_seq_ciclo_w=0 THEN null  ELSE nr_seq_ciclo_w END ,
		0,
		qt_ponto_w,
		cd_setor_atendimento_p,
		CASE WHEN nr_seq_lote_w=0 THEN null  ELSE nr_seq_lote_w END ,
		nr_seq_controle_w,
		'A',
		CASE WHEN coalesce(cd_fornecedor_w,0)=0 THEN null  ELSE cd_fornecedor_w END ,
		CASE WHEN coalesce(dt_validade_w,'')='' THEN null  ELSE dt_validade_w END );
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cm_insere_item_invidual_est ( nr_seq_item_p bigint, nr_seq_ciclo_p bigint, nr_seq_lote_p bigint, cd_setor_atendimento_p bigint, nm_usuario_barras_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

