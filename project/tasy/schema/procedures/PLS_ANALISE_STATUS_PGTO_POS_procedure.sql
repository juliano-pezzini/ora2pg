-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_status_pgto_pos ( nr_seq_conta_p bigint, nr_seq_mat_p bigint, nr_seq_proc_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


nr_seq_proc_w			bigint;
nr_seq_mat_w			bigint;
ie_pagamento_w			varchar(1);
ie_origem_analise_w		varchar(1);
nr_seq_item_princ_w		bigint;
nr_seq_resumo_pos_w		bigint;
nr_seq_analise_pos_w		bigint;
nr_seq_partic_proc_w		bigint;
nr_seq_resumo_partic_proc_w	bigint;

C01 CURSOR FOR
	SELECT	nr_seq_conta_proc,
		nr_seq_conta_mat
	from	w_pls_resumo_conta
	where	nr_seq_conta	= nr_seq_conta_p
	and	nr_seq_analise	= nr_seq_analise_p;

C02 CURSOR FOR
	SELECT	nr_seq_item_princ,
		nr_sequencia
	from	w_pls_resumo_conta
	where	nr_seq_analise		= nr_seq_analise_pos_w
	and	nr_seq_item_ref		= nr_seq_proc_p
	and	ie_tipo_item		= 'R';


BEGIN

/*
Rotina quanto a status de pagamento do item pós.
Ira verificar a presença de ocorrências de Ambos ou Faturamento na análise de produção
(OS 420940)
*/
if (coalesce(nr_seq_mat_p,0) = 0) and (coalesce(nr_seq_proc_p,0) = 0) then

	open C01;
	loop
	fetch C01 into
		nr_seq_proc_w,
		nr_seq_mat_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if	((coalesce(nr_seq_proc_w,0) <> 0) or (coalesce(nr_seq_mat_w,0) <> 0)) then

			CALL pls_analise_status_pgto_pos(	nr_seq_conta_p,	nr_seq_mat_w, nr_seq_proc_w,
							nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p	);

		end if;

		end;
	end loop;
	close C01;

else

	select	max(ie_origem_analise)
	into STRICT	ie_origem_analise_w
	from	pls_analise_conta
	where	nr_sequencia = nr_seq_analise_p;

	if (ie_origem_analise_w = '2') then
		/*Se for uma análse de pós.*/

		nr_seq_analise_pos_w := nr_seq_analise_p;
	else
		/*Se for uma análise de pagto.*/

		select	max(nr_sequencia)
		into STRICT	nr_seq_analise_pos_w
		from	pls_analise_conta
		where	nr_seq_analise_ref = nr_seq_analise_p;
	end if;

	if (coalesce(nr_seq_analise_pos_w,0) > 0) then

		begin
		select	nr_seq_item_princ,
			nr_sequencia
		into STRICT	nr_seq_item_princ_w,
			nr_seq_resumo_pos_w
		from	w_pls_resumo_conta
		where	nr_seq_conta 		= nr_seq_conta_p
		and	((nr_seq_conta_proc  	= nr_seq_proc_p) or (nr_seq_conta_mat   	= nr_seq_mat_p))
		and	nr_seq_analise 		= nr_seq_analise_pos_w;
		exception
		when others then
			nr_seq_item_princ_w := null;
			nr_seq_resumo_pos_w := null;
		end;

		if (coalesce(nr_seq_item_princ_w,0) > 0) then

			select	max(ie_pagamento)
			into STRICT	ie_pagamento_w
			from	w_pls_resumo_conta
			where	nr_sequencia = nr_seq_item_princ_w;

			update	w_pls_resumo_conta
			set	ie_pagamento   	= coalesce(ie_pagamento_w,'G')
			where	nr_sequencia	= nr_seq_resumo_pos_w;

		end if;

		open C02;
		loop
		fetch C02 into
			nr_seq_item_princ_w,
			nr_seq_resumo_partic_proc_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			if (coalesce(nr_seq_item_princ_w,0) > 0) then

				select	max(ie_pagamento)
				into STRICT	ie_pagamento_w
				from	w_pls_resumo_conta
				where	nr_sequencia 	= nr_seq_item_princ_w;

				update	w_pls_resumo_conta
				set	ie_pagamento   	= coalesce(ie_pagamento_w,'G')
				where	nr_sequencia	= nr_seq_resumo_partic_proc_w;

			end if;

			end;
		end loop;
		close C02;

	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_status_pgto_pos ( nr_seq_conta_p bigint, nr_seq_mat_p bigint, nr_seq_proc_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

