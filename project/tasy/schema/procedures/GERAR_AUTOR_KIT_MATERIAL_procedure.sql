-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_autor_kit_material (cd_kit_material_p bigint, nr_atendimento_p bigint, nr_seq_agenda_p bigint, nr_seq_agenda_consulta_p bigint, cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_plano_p bigint, cd_setor_atendimento_p bigint, dt_atendimento_p timestamp, nm_usuario_p text, ie_gera_kit_partic_p text) AS $body$
DECLARE


cd_material_kit_w	integer;
qt_material_kit_w	double precision;
ds_retorno_w		varchar(255);
ie_bloqueio_agenda_w	varchar(10);
nr_seq_regra_retorno_w	bigint;
ie_regra_w		varchar(1);
nr_sequencia_autor_w	bigint;
nr_seq_estagio_w	bigint;

ie_tipo_guia_w		varchar(2);
cd_tipo_acomod_atend_w	bigint;
nr_doc_convenio_w	varchar(20);
cd_senha_w		varchar(20);
ie_carater_int_tiss_w	varchar(2);

ie_resp_autor_w		varchar(2);
nr_seq_mat_autor_w	bigint;
nr_seq_fabricante_w	bigint;
qt_autor_gerada_w	bigint;
cd_conv_particular_w	integer;
cd_categoria_w		varchar(10);
cd_pessoa_fisica_w	atendimento_paciente.cd_pessoa_fisica%type;

c02 CURSOR FOR
SELECT	cd_material,
	qt_material
from	componente_kit a
where	a.cd_kit_material	= cd_kit_material_p
and	a.ie_situacao		= 'A'
and	((coalesce(a.cd_estab_regra::text, '') = '') or (a.cd_estab_regra = cd_estabelecimento_p));


BEGIN

open c02;
loop
fetch c02 into
	cd_material_kit_w,
	qt_material_kit_w;
EXIT WHEN NOT FOUND; /* apply on c02 */

	SELECT * FROM consiste_mat_plano_convenio(cd_convenio_p, cd_plano_p, cd_material_kit_w, nr_atendimento_p, null, /*cd_setor_atendimento_p,*/
				ds_retorno_w, ie_bloqueio_agenda_w, ie_regra_w, nr_seq_regra_retorno_w, qt_material_kit_w, dt_atendimento_p, nr_seq_agenda_p, cd_estabelecimento_p, null, null) INTO STRICT 
				ds_retorno_w, ie_bloqueio_agenda_w, ie_regra_w, nr_seq_regra_retorno_w;				
				
	if (ie_regra_w in ('3','8')) then

		if (nr_seq_regra_retorno_w IS NOT NULL AND nr_seq_regra_retorno_w::text <> '') then
			select	max(ie_resp_autor)
			into STRICT	ie_resp_autor_w
			from	regra_convenio_plano
			where	nr_sequencia	= nr_seq_regra_retorno_w;
		end if;

		/* Verificar se já há uma autorização necessidade (materiais) */

		select	max(a.nr_sequencia)
		into STRICT	nr_sequencia_autor_w
		from	estagio_autorizacao b,
			autorizacao_convenio a
		where	a.nr_seq_estagio	= b.nr_sequencia
		and	b.ie_interno		= '1'
		and	a.ie_tipo_autorizacao	= '4'
		and (a.nr_seq_agenda = nr_seq_agenda_p or nr_atendimento = nr_atendimento_p);

		if (coalesce(nr_sequencia_autor_w::text, '') = '') then
			select	min(nr_sequencia)
			into STRICT	nr_seq_estagio_w
			from	estagio_autorizacao
			where	ie_interno	= '1'
			and	ie_situacao = 'A'
			and	cd_empresa	= obter_empresa_estab(cd_estabelecimento_p);

			select	nextval('autorizacao_convenio_seq')
			into STRICT	nr_sequencia_autor_w
			;

			if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
				select	CASE WHEN ie_carater_inter_sus='1' THEN 'E'  ELSE 'U' END ,
					cd_pessoa_fisica
				into STRICT	ie_carater_int_tiss_w,
					cd_pessoa_fisica_w
				from	atendimento_paciente
				where	nr_atendimento	= nr_atendimento_p;

				select	ie_tipo_guia,
					cd_tipo_acomodacao,
					coalesce(nr_doc_convenio_w,nr_doc_convenio),
					coalesce(cd_senha_w,cd_senha)
				into STRICT	ie_tipo_guia_w,
					cd_tipo_acomod_atend_w,
					nr_doc_convenio_w,
					cd_senha_w
				from	atend_categoria_convenio
				where	nr_atendimento	= nr_atendimento_p
				and	nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_p);
			end if;

			insert	into autorizacao_convenio(nr_atendimento,		nr_seq_autorizacao,	cd_convenio,		cd_autorizacao,
				dt_autorizacao,			dt_inicio_vigencia,	dt_atualizacao,		nm_usuario,
				dt_fim_vigencia,		nm_responsavel,		ds_observacao,		cd_senha,
				cd_procedimento_principal,	ie_origem_proced,	dt_pedido_medico,	cd_medico_solicitante,
				ie_tipo_guia,			qt_dia_autorizado,	nr_prescricao,		dt_envio,
				dt_retorno,			nr_seq_estagio,		ie_tipo_autorizacao,	ie_tipo_dia,
				cd_tipo_acomodacao,		nr_sequencia,		nr_seq_agenda,		ie_carater_int_tiss,
				ie_resp_autor,			nr_seq_agenda_consulta,				cd_estabelecimento, dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica)
			values (nr_atendimento_p,		null,			cd_convenio_p,		nr_doc_convenio_w,
				clock_timestamp(),			dt_atendimento_p,	clock_timestamp(),		nm_usuario_p,
				null,				null,			null,			cd_senha_w,
				null,				null,			null,			null,
				ie_tipo_guia_w,			null,			null,			null,
				null,				nr_seq_estagio_w,	'4',			'C',
				cd_tipo_acomod_atend_w,		nr_sequencia_autor_w,	nr_seq_agenda_p,	ie_carater_int_tiss_w,
				ie_resp_autor_w,		nr_seq_agenda_consulta_p, 			cd_estabelecimento_p, clock_timestamp(), nm_usuario_p, cd_pessoa_fisica_w);
		end if;

		if (nr_sequencia_autor_w IS NOT NULL AND nr_sequencia_autor_w::text <> '') then

			select	max(nr_sequencia)
			into STRICT	nr_seq_mat_autor_w
			from	material_autorizado
			where	nr_sequencia_autor	= nr_sequencia_autor_w
			and	cd_material		= cd_material_kit_w;

			/* Inserir material */

			if (coalesce(nr_seq_mat_autor_w::text, '') = '') then
				select	nextval('material_autorizado_seq')
				into STRICT	nr_seq_mat_autor_w
				;

				select	max(nr_seq_fabric)
				into STRICT	nr_seq_fabricante_w
				from	material
				where	cd_material	= cd_material_kit_w;

				insert	into	material_autorizado(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					cd_material,
					qt_solicitada,
					qt_autorizada,
					nr_seq_fabricante,
					nr_sequencia_autor)
				values (nr_seq_mat_autor_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					cd_material_kit_w,
					qt_material_kit_w,
					0,
					nr_seq_fabricante_w,
					nr_sequencia_autor_w);
			else
				/* Agendamento nao pode ir adicionando, porque chama a cada vez que salva */

				if (coalesce(nr_seq_agenda_p::text, '') = '') then
					update	material_autorizado
					set	qt_solicitada	= qt_solicitada + qt_material_kit_w,
						nm_usuario	= nm_usuario_p,
						dt_atualizacao	= clock_timestamp()
					where	nr_sequencia	= nr_seq_mat_autor_w;
				end if;
			end if;
		
		if (ie_gera_kit_partic_p = 'S') then
			begin
			
			SELECT * FROM Obter_Convenio_Particular(cd_estabelecimento_p, cd_conv_particular_w, cd_categoria_w) INTO STRICT cd_conv_particular_w, cd_categoria_w;
			
			if (coalesce(cd_conv_particular_w,0) <> 0) then
				begin
				update	autorizacao_convenio
				set	cd_convenio 	= cd_conv_particular_w,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_sequencia	= nr_sequencia_autor_w;
				end;
			end if;
			end;
		end if;	
			
		end if;	
	end if;
end loop;
close c02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_autor_kit_material (cd_kit_material_p bigint, nr_atendimento_p bigint, nr_seq_agenda_p bigint, nr_seq_agenda_consulta_p bigint, cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_plano_p bigint, cd_setor_atendimento_p bigint, dt_atendimento_p timestamp, nm_usuario_p text, ie_gera_kit_partic_p text) FROM PUBLIC;

