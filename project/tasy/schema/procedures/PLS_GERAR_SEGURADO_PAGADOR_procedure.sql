-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_segurado_pagador ( nr_seq_segurado_p bigint, ie_tipo_endereco_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_pessoa_comprovante_p text, ie_notificacao_p text, ie_taxa_emissao_boleto_p text, dt_inicio_vigencia_p timestamp, dt_fim_vigencia_p text, dt_dia_vencimento_p bigint, nr_seq_forma_cobranca_p text, cd_condicao_pagamento_p bigint, cd_tipo_portador_p bigint, cd_portador_p bigint, nr_seq_conta_banco_p bigint, cd_banco_p text, cd_agencia_p text, ie_digito_agencia_p text, cd_conta_p text, ie_digito_conta_p text, nr_seq_empresa_p text, cd_profissao_p text, nr_seq_vinculo_empresa_p bigint, cd_matricula_p text, nr_seq_carteira_cobr_p bigint, nr_seq_alteracao_motivo_p bigint, nr_seq_motivo_rescisao_pag_p bigint, nr_seq_causa_rescisao_p bigint, ie_gerar_carteira_p text, nr_seq_motivo_via_adic_p bigint, ie_mes_vencimento_p text, nr_seq_tipo_compl_adic_p bigint, nr_seq_classif_itens_p bigint, qt_contribuicao_p bigint, ie_tipo_pagador_p text, ie_envio_cobranca_p text, ie_manter_pagador_contas_p text, nr_seq_pagador_p INOUT bigint) AS $body$
DECLARE


qt_registros_w			bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_contrato_w		bigint;
nr_seq_pagador_w		bigint;
nr_seq_pagador_atual_w		bigint;
ds_erro_w			varchar(400);
nr_seq_segurado_dep_w		bigint;
nr_seq_carteira_w		bigint;
dt_validade_carteira_w		timestamp;
ie_geracao_nota_titulo_w	varchar(10);
nr_seq_pagador_ant_w		pls_segurado.nr_seq_pagador%type;
ie_calc_primeira_mens_w		pls_contrato_pagador.ie_calc_primeira_mens%type;
ie_calculo_proporcional_w	pls_contrato_pagador.ie_calculo_proporcional%type;
ie_situacao_trabalhista_w	pls_motivo_alt_pagador.ie_situacao_trabalhista%type;
qt_rescisao_w			smallint;
dt_inclusao_pce_w		timestamp;
nm_pagador_w			varchar(255);
nm_pagador_ant_w		varchar(255);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_pagador
	from	pls_segurado
	where	nr_seq_titular	= nr_seq_segurado_p
	and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao >= coalesce(trunc(dt_inicio_vigencia_p,'dd'), clock_timestamp())));


BEGIN

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	select	max(ie_situacao_trabalhista)
	into STRICT	ie_situacao_trabalhista_w
	from	pls_motivo_alt_pagador
	where	nr_sequencia	= nr_seq_alteracao_motivo_p;
	
	if (ie_situacao_trabalhista_w IS NOT NULL AND ie_situacao_trabalhista_w::text <> '') then
		dt_inclusao_pce_w	:= dt_inicio_vigencia_p;
		
		if (coalesce(qt_contribuicao_p,0) = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(348741);
			--Não é possível gerar pagador "Demitido/Aposentado/Exonerado" caso o beneficiário não tenha realizado nenhuma contribuição com a mensalidade
		end if;
	else
		dt_inclusao_pce_w	:= null;
	end if;
	
	select	max(ie_geracao_nota_titulo_pf)
	into STRICT	ie_geracao_nota_titulo_w
	from	pls_parametros
	where	cd_estabelecimento	= cd_estabelecimento_p;
	
	select	cd_pessoa_fisica,
		nr_seq_contrato,
		nr_seq_pagador
	into STRICT	cd_pessoa_fisica_w,
		nr_seq_contrato_w,
		nr_seq_pagador_ant_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
	
	begin
	select	ie_calc_primeira_mens,
		ie_calculo_proporcional,
		obter_nome_pf_pj(cd_pessoa_fisica,cd_cgc)
	into STRICT	ie_calc_primeira_mens_w,
		ie_calculo_proporcional_w,
		nm_pagador_ant_w
	from	pls_contrato_pagador
	where	nr_sequencia	= nr_seq_pagador_ant_w;
	exception
	when others then
		ie_calc_primeira_mens_w		:= 'I';
		ie_calculo_proporcional_w	:= null;
	end;
	/*
	select	count(1)
	into	qt_registros_w
	from	pls_contrato_pagador
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	nr_seq_contrato		= nr_seq_contrato_w;
	
	if	(qt_registros_w > 0) then
		wheb_mensagem_pck.exibir_mensagem_abort( 199270, null); --Pagador já cadastrado. Verifique!
	end if;
	*/
	select	nextval('pls_contrato_pagador_seq')
	into STRICT	nr_seq_pagador_w
	;
	
	nr_seq_pagador_p := nr_seq_pagador_w;
	
	insert into pls_contrato_pagador(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_contrato,
		cd_pessoa_fisica,
		ie_tipo_pagador,
		ie_envia_cobranca,
		ie_endereco_boleto,
		ie_pessoa_comprovante,
		ie_notificacao,
		ie_taxa_emissao_boleto,
		dt_dia_vencimento,
		nr_seq_forma_cobranca,
		cd_condicao_pagamento,
		ie_calc_primeira_mens,
		ie_calculo_proporcional,
		nr_seq_tipo_compl_adic,
		nr_seq_classif_itens,
		ie_receber_sms)
	values (nr_seq_pagador_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_contrato_w,
		cd_pessoa_fisica_w,
		ie_tipo_pagador_p,
		ie_envio_cobranca_p,
		ie_tipo_endereco_p,
		ie_pessoa_comprovante_p,
		ie_notificacao_p,
		ie_taxa_emissao_boleto_p,
		dt_dia_vencimento_p,
		coalesce(nr_seq_forma_cobranca_p,0),
		cd_condicao_pagamento_p,
		ie_calc_primeira_mens_w,
		ie_calculo_proporcional_w,
		nr_seq_tipo_compl_adic_p,
		nr_seq_classif_itens_p,
		'S');
	
	insert into pls_contrato_pagador_fin(	nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_pagador,
		dt_inicio_vigencia,
		dt_dia_vencimento,
		dt_fim_vigencia,
		nr_seq_forma_cobranca,
		cd_condicao_pagamento,
		cd_tipo_portador,
		cd_portador,
		nr_seq_conta_banco,
		cd_banco,
		cd_agencia_bancaria,
		ie_digito_agencia,
		cd_conta,
		ie_digito_conta,
		nr_seq_empresa,
		cd_profissao,
		nr_seq_vinculo_empresa,
		cd_matricula,
		nr_seq_carteira_cobr,
		nr_seq_dia_vencimento,
		ie_geracao_nota_titulo,
		ie_destacar_reajuste,
		ie_gerar_cobr_escrit,
		ie_mes_vencimento)
	values (	nextval('pls_contrato_pagador_fin_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_pagador_w,
		trunc(dt_inicio_vigencia_p,'month'),
		dt_dia_vencimento_p,
		null,
		coalesce(nr_seq_forma_cobranca_p,0),
		coalesce(cd_condicao_pagamento_p,0),
		coalesce(cd_tipo_portador_p,0),
		coalesce(cd_portador_p,0),
		coalesce(nr_seq_conta_banco_p,0),
		coalesce(cd_banco_p,''),
		coalesce(cd_agencia_p,''),
		coalesce(ie_digito_agencia_p,''),
		coalesce(cd_conta_p,''),
		coalesce(ie_digito_conta_p,''),
		coalesce(nr_seq_empresa_p,''),
		coalesce(cd_profissao_p,''),
		CASE WHEN nr_seq_vinculo_empresa_p=0 THEN null  ELSE nr_seq_vinculo_empresa_p END ,
		cd_matricula_p,
		nr_seq_carteira_cobr_p,
		dt_dia_vencimento_p,
		ie_geracao_nota_titulo_w,
		'N',
		'S',
		ie_mes_vencimento_p);
	
	if (coalesce(nr_seq_alteracao_motivo_p,0) <> 0) then
		ds_erro_w := pls_inserir_rescicao_pagador(nr_seq_alteracao_motivo_p, nr_seq_pagador_w, nr_seq_segurado_p, nr_seq_motivo_rescisao_pag_p, nr_seq_causa_rescisao_p, dt_inicio_vigencia_p, nm_usuario_p, qt_contribuicao_p, ds_erro_w);
	end if;
	
	select	substr(pls_obter_dados_pagador(nr_seq_pagador_w,'N'),1,255)
	into STRICT	nm_pagador_w
	;
	
	if (coalesce(ie_gerar_carteira_p,'N') = 'S') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_carteira_w
		from	pls_segurado_carteira
		where	nr_seq_segurado	= nr_seq_segurado_p;
		
		CALL pls_gerar_via_carteira(nr_seq_carteira_w,nr_seq_motivo_via_adic_p,nm_usuario_p,1202,'M','S');
		
		select	max(dt_limite_utilizacao)
		into STRICT	dt_validade_carteira_w
		from	pls_rescisao_contrato
		where	nr_seq_pagador	= nr_seq_pagador_w;
		
		update	pls_segurado_carteira
		set	dt_validade_carteira	= dt_validade_carteira_w
		where	nr_seq_segurado		= nr_seq_segurado_p;
	end if;
	
	update	pls_segurado
	set	nr_seq_pagador	= nr_seq_pagador_w,
		dt_inclusao_pce	= dt_inclusao_pce_w,
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_segurado_p;
	
	if (nr_seq_pagador_ant_w IS NOT NULL AND nr_seq_pagador_ant_w::text <> '') then
		CALL pls_alterar_pagador_segurado(	nr_seq_segurado_p, nr_seq_pagador_ant_w, nr_seq_pagador_w, trunc(dt_inicio_vigencia_p,'month'), 'N', nm_usuario_p);
		
		CALL pls_gerar_segurado_historico(	nr_seq_segurado_p, '6', clock_timestamp(),
						wheb_mensagem_pck.get_texto(280132, 'NR_SEQ_PAGADOR_P=' || to_char(nr_seq_pagador_ant_w) || ';NM_PAGAD0R_P=' || nm_pagador_ant_w), 'pls_gerar_segurado_pagador; Titular', null,
						null, null, null,
						dt_inicio_vigencia_p, null, null,
						null, null, null,
						null, nm_usuario_p, 'N');
	end if;
	
	if (ie_manter_pagador_contas_p = 'N') then
		CALL pls_alt_pagador_contas_benef(nr_seq_segurado_p, nr_seq_pagador_w, null, null, null, 'N', nm_usuario_p);
	end if;
	
	--Alterar o pagador para os dependentes também
	open C01;
	loop
	fetch C01 into
		nr_seq_segurado_dep_w,
		nr_seq_pagador_ant_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		update	pls_segurado
		set	nr_seq_pagador	= nr_seq_pagador_w,
			dt_inclusao_pce	= dt_inclusao_pce_w,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_segurado_dep_w;
		
		if (nr_seq_pagador_ant_w IS NOT NULL AND nr_seq_pagador_ant_w::text <> '') then
			CALL pls_alterar_pagador_segurado(	nr_seq_segurado_dep_w, nr_seq_pagador_ant_w, nr_seq_pagador_w, trunc(dt_inicio_vigencia_p,'month'), 'N', nm_usuario_p);
			
			CALL pls_gerar_segurado_historico(	nr_seq_segurado_dep_w, '6', clock_timestamp(),
							wheb_mensagem_pck.get_texto(280132, 'NR_SEQ_PAGADOR_P=' || to_char(nr_seq_pagador_ant_w) || ';NM_PAGAD0R_P=' || nm_pagador_ant_w), 'pls_gerar_segurado_pagador; Dependente', null,
							null, null, null,
							dt_inicio_vigencia_p, null, null,
							null, null, null,
							null, nm_usuario_p, 'N');
		end if;
		
		select	count(1)
		into STRICT	qt_rescisao_w
		from	pls_segurado
		where	nr_sequencia = nr_seq_segurado_dep_w
		and	(dt_rescisao IS NOT NULL AND dt_rescisao::text <> '')
		and	dt_rescisao < clock_timestamp();
		
		if	((coalesce(ie_gerar_carteira_p,'N') = 'S') and (qt_rescisao_w = 0)) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_carteira_w
			from	pls_segurado_carteira
			where	nr_seq_segurado	= nr_seq_segurado_dep_w;
			
			CALL pls_gerar_via_carteira(nr_seq_carteira_w,nr_seq_motivo_via_adic_p,nm_usuario_p,1202,'M','S');
			
			select	max(dt_limite_utilizacao)
			into STRICT	dt_validade_carteira_w
			from	pls_rescisao_contrato
			where	nr_seq_pagador	= nr_seq_pagador_w;
			
			update	pls_segurado_carteira
			set	dt_validade_carteira	= dt_validade_carteira_w
			where	nr_seq_segurado		= nr_seq_segurado_dep_w;
		end if;
		
		if (ie_manter_pagador_contas_p = 'N') then
			CALL pls_alt_pagador_contas_benef(nr_seq_segurado_dep_w, nr_seq_pagador_w, null, null, null, 'N', nm_usuario_p);
		end if;
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_segurado_pagador ( nr_seq_segurado_p bigint, ie_tipo_endereco_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_pessoa_comprovante_p text, ie_notificacao_p text, ie_taxa_emissao_boleto_p text, dt_inicio_vigencia_p timestamp, dt_fim_vigencia_p text, dt_dia_vencimento_p bigint, nr_seq_forma_cobranca_p text, cd_condicao_pagamento_p bigint, cd_tipo_portador_p bigint, cd_portador_p bigint, nr_seq_conta_banco_p bigint, cd_banco_p text, cd_agencia_p text, ie_digito_agencia_p text, cd_conta_p text, ie_digito_conta_p text, nr_seq_empresa_p text, cd_profissao_p text, nr_seq_vinculo_empresa_p bigint, cd_matricula_p text, nr_seq_carteira_cobr_p bigint, nr_seq_alteracao_motivo_p bigint, nr_seq_motivo_rescisao_pag_p bigint, nr_seq_causa_rescisao_p bigint, ie_gerar_carteira_p text, nr_seq_motivo_via_adic_p bigint, ie_mes_vencimento_p text, nr_seq_tipo_compl_adic_p bigint, nr_seq_classif_itens_p bigint, qt_contribuicao_p bigint, ie_tipo_pagador_p text, ie_envio_cobranca_p text, ie_manter_pagador_contas_p text, nr_seq_pagador_p INOUT bigint) FROM PUBLIC;

