-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_processar_arquivo_a900 ( nr_seq_lote_imp_p pls_lote_imp_mat_unimed.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Inserir os materiais na PLS_MATERIAL_UNIMED, atraves do do processo de importacao por lote
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Utilizado em:
	- Funcao OPS - Cadastro de Materiais, pasta Materiais Unimed >> A900 >> Materiais
	- Funcao Gestao do Cadastro de Materiais, pasta A900 >> Materiais
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */nr_sequencia_w			bigint;
cd_material_w			bigint;
cd_material_aux_w		bigint;
cd_material_tuss_w		bigint;
cd_unidade_medida_w		varchar(10);
ie_tipo_w			smallint;
ie_situacao_w			varchar(1);
dt_atualizacao_w		timestamp;
nm_usuario_w			varchar(15);
nm_material_w			varchar(255);
cd_cnpj_w			varchar(14);
nm_fabricante_w			varchar(255);
nm_importador_w			varchar(255);
nr_registro_anvisa_w		varchar(20);
dt_validade_anvisa_w		timestamp;
ds_motivo_ativo_inativo_w	varchar(255);
vl_fabrica_w			double precision;
vl_max_consumidor_w		double precision;
dt_inicio_obrigatorio_w		timestamp;
ds_material_w			varchar(2000);
ds_especialidade_w		varchar(255);
ds_classe_w			varchar(255);
ds_apresentacao_w		varchar(2000);
vl_fator_conversao_w		pls_material_unimed.vl_fator_conversao%type;
ie_generico_w			varchar(1);
ds_grupo_farmacologico_w	varchar(255);
ds_classe_farmacologico_w	varchar(255);
ds_forma_farmaceutico_w		varchar(255);
pr_icms_w			double precision;
vl_pmc_w			double precision;
ds_principio_ativo_w		varchar(255);
ie_origem_w			smallint;
nr_seq_material_a900_w		bigint;
nr_seq_mat_unimed_w		bigint;
qt_registros_w			bigint := 0;
ie_alteracao_w			varchar(1) := 'N';
ie_inclusao_w			varchar(1) := 'N';

cd_cnpj_ww			varchar(14);
cd_material_ww			bigint;
cd_material_tuss_ww		bigint;
cd_unidade_medida_ww		varchar(10);
ds_apresentacao_ww		varchar(2000);
ds_classe_ww			varchar(255);
ds_classe_farmacologico_ww	varchar(255);
ds_especialidade_ww		varchar(255);
ds_forma_farmaceutico_ww	varchar(255);

ds_grupo_farmacologico_ww	varchar(255);
ds_material_ww			varchar(2000);
ds_motivo_ativo_inativo_ww	varchar(255);
ds_principio_ativo_ww		varchar(255);
dt_inicio_obrigatorio_ww	timestamp;
dt_validade_anvisa_ww		timestamp;
ie_generico_ww			varchar(1);
ie_origem_ww			smallint;
ie_situacao_ww			varchar(1);
ie_tipo_ww			smallint;
nm_fabricante_ww		varchar(255);
nm_importador_ww		varchar(255);
nm_material_ww			varchar(255);
nr_registro_anvisa_ww		varchar(20);
pr_icms_ww			double precision;
vl_fabrica_ww			double precision;
vl_fator_conversao_ww		pls_material_unimed.vl_fator_conversao%type;
vl_max_consumidor_ww		double precision;
vl_pmc_ww			double precision;
nr_seq_lote_mat_w		bigint;
qt_registro_w			bigint;

cd_ref_material_fab_w		varchar(60);
cd_anterior_material_w		integer;
cd_anterior_medicamento_w	integer;
vl_tcl_w			smallint;
vl_tc_w				w_pls_material_unimed.vl_tc%type;
nm_tecnico_w			w_pls_material_unimed.nm_tecnico%type;
ds_equiv_tecnica_w		w_pls_material_unimed.ds_equiv_tecnica%type;

cd_ref_material_fab_ww		varchar(60);
cd_anterior_material_ww		integer;
cd_anterior_medicamento_ww	integer;
ie_mat_med_alterado_w		varchar(1) := 'N';
ds_versao_tiss_w		varchar(20);
ds_versao_tiss_ww		varchar(20);
dt_inicio_vigencia_icms_w	timestamp;
dt_inicio_vigencia_mat_w	pls_lote_imp_mat_unimed.dt_inicio_vigencia_mat%type;
dt_inicio_vigencia_val_w	pls_material_unimed.dt_inicio_vigencia_val%type;

ie_produto_w			pls_material_unimed.ie_produto%type;
ie_produto_ww			pls_material_unimed.ie_produto%type;
ie_codificacao_w		pls_material_unimed.ie_codificacao%type;
ie_codificacao_ww		pls_material_unimed.ie_codificacao%type;
dt_inicio_vigencia_w		pls_material_unimed.dt_inicio_vigencia%type;
dt_inicio_vigencia_ww		pls_material_unimed.dt_inicio_vigencia%type;
dt_fim_vigencia_w		pls_material_unimed.dt_fim_vigencia%type;
dt_fim_vigencia_ww		pls_material_unimed.dt_fim_vigencia%type;
dt_fim_implantacao_w		pls_material_unimed.dt_fim_implantacao%type;
dt_fim_implantacao_ww		pls_material_unimed.dt_fim_implantacao%type;
vl_preco_unico_w		pls_material_unimed.vl_preco_unico%type;
vl_preco_unico_ww		pls_material_unimed.vl_preco_unico%type;
ds_observacao_w			pls_material_unimed.ds_observacao%type;
ds_observacao_ww		pls_material_unimed.ds_observacao%type;
ds_unidade_medida_w		pls_material_unimed.ds_unidade_medida%type;
ds_unidade_medida_ww		pls_material_unimed.ds_unidade_medida%type;
id_alc_w			w_pls_mat_unimed_trib.id_alc%type;
vl_tc_ww			w_pls_material_unimed.vl_tc%type;
nm_tecnico_ww			w_pls_material_unimed.nm_tecnico%type;
ds_equiv_tecnica_ww		w_pls_material_unimed.ds_equiv_tecnica%type;
qt_commit_w			integer := 0;

ie_produto_med_w		pls_material_unimed.ie_produto_med%type;
ie_produto_med_ww		pls_material_unimed.ie_produto_med%type;

ie_confaz_w			pls_material_unimed.ie_confaz%type;
ie_confaz_ww			pls_material_unimed.ie_confaz%type;

tp_tabela_tiss_w		pls_material_unimed.tp_tabela_tiss%type;
tp_tabela_tiss_ww		pls_material_unimed.tp_tabela_tiss%type;

cd_material_tiss_w		pls_material_unimed.cd_material_tiss%type;
cd_material_tiss_ww		pls_material_unimed.cd_material_tiss%type;

cd_material_tiss_ant_w		pls_material_unimed.cd_material_tiss_ant%type;
cd_material_tiss_ant_ww		pls_material_unimed.cd_material_tiss_ant%type;

ds_erro_w			varchar(4000);
					
c01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_material,
		cd_unidade_medida,
		ie_tipo,
		ie_situacao,
		dt_atualizacao,
		nm_usuario,
		nm_material,
		cd_cnpj,
		nm_fabricante,
		nm_importador,
		nr_registro_anvisa,
		dt_validade_anvisa,
		ds_motivo_ativo_inativo,
		vl_fabrica,
		vl_max_consumidor,
		dt_inicio_obrigatorio,
		ds_material,
		ds_especialidade,
		ds_classe,
		ds_apresentacao,
		vl_fator_conversao,
		ie_generico,
		ds_grupo_farmacologico,
		ds_classe_farmacologico,
		ds_forma_farmaceutico,
		pr_icms,
		vl_pmc,
		ds_principio_ativo,
		ie_origem,
		dt_exclusao,
		cd_ref_material_fab,
		cd_anterior_material,
		cd_anterior_medicamento,
		cd_material_tuss,
		tp_produto,
		tp_codificacao,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		dt_fim_implantacao,
		preco_unico,
		ds_observacao,
		ds_unidade_medida,
		ie_produto_med,
		ie_confaz,
		vl_tc,
		nm_tecnico,
		ds_equiv_tecnica,
		tp_tabela_tiss,
		cd_material_tiss,
		cd_material_tiss_ant
	from	w_pls_material_unimed
	order by nr_sequencia;

-- Tributo
C02 CURSOR(nr_sequencia_pc	w_pls_mat_unimed_simpro.nr_seq_mat_unimed%type) FOR
	SELECT	vl_perc_icm,
		vl_pmc,
		vl_tcl,
		id_alc
	from	w_pls_mat_unimed_trib
	where	nr_seq_mat_unimed = nr_sequencia_pc
	order by nr_sequencia;
		
-- SIMPRO
C03 CURSOR(nr_sequencia_pc	w_pls_mat_unimed_simpro.nr_seq_mat_unimed%type) FOR
	SELECT	cd_simpro,
		desc_prod_simpro
	from	w_pls_mat_unimed_simpro
	where	nr_seq_mat_unimed = nr_sequencia_pc
	order by nr_sequencia;
		
-- BRASINDICE
C04 CURSOR(nr_sequencia_pc	w_pls_mat_unimed_simpro.nr_seq_mat_unimed%type) FOR
	SELECT	cd_brasindice,
		des_produto,
		des_apresentacao
	from	w_pls_mat_unimed_bras
	where	nr_seq_mat_unimed = nr_sequencia_pc
	order by nr_sequencia;

BEGIN
-- Atualizar o lote de importacao
update	pls_lote_imp_mat_unimed
set	dt_inicio_processamento	= clock_timestamp(),
	ie_status		= '5'
where 	nr_sequencia		= nr_seq_lote_imp_p;
commit;

select	max(ds_versao_tiss),
	max(dt_inicio_vigencia_icms),
	max(dt_inicio_vigencia_mat)
into STRICT	ds_versao_tiss_w,
	dt_inicio_vigencia_icms_w,
	dt_inicio_vigencia_mat_w
from	pls_lote_imp_mat_unimed
where	nr_sequencia = nr_seq_lote_imp_p;

for r01 in c01 loop
	begin
	ie_mat_med_alterado_w		:= 'N';
	qt_commit_w			:= qt_commit_w + 1;
	nr_sequencia_w			:= r01.nr_sequencia;
	cd_material_w			:= r01.cd_material;
	cd_unidade_medida_w		:= r01.cd_unidade_medida;
	ie_tipo_w			:= r01.ie_tipo;
	ie_situacao_w			:= r01.ie_situacao;
	dt_atualizacao_w		:= r01.dt_atualizacao;
	nm_usuario_w			:= r01.nm_usuario;
	nm_material_w			:= r01.nm_material;
	cd_cnpj_w			:= r01.cd_cnpj;
	nm_fabricante_w			:= r01.nm_fabricante;
	nm_importador_w			:= r01.nm_importador;
	nr_registro_anvisa_w		:= r01.nr_registro_anvisa;
	dt_validade_anvisa_w		:= r01.dt_validade_anvisa;
	ds_motivo_ativo_inativo_w	:= r01.ds_motivo_ativo_inativo;
	vl_fabrica_w			:= r01.vl_fabrica;
	vl_max_consumidor_w		:= r01.vl_max_consumidor;
	dt_inicio_obrigatorio_w		:= r01.dt_inicio_obrigatorio;
	ds_material_w			:= r01.ds_material;
	ds_especialidade_w		:= r01.ds_especialidade;
	ds_classe_w			:= r01.ds_classe;
	ds_apresentacao_w		:= r01.ds_apresentacao;
	vl_fator_conversao_w		:= r01.vl_fator_conversao;
	ie_generico_w			:= r01.ie_generico;
	ds_grupo_farmacologico_w	:= r01.ds_grupo_farmacologico;
	ds_classe_farmacologico_w	:= r01.ds_classe_farmacologico;
	ds_forma_farmaceutico_w		:= r01.ds_forma_farmaceutico;
	pr_icms_w			:= r01.pr_icms;
	vl_pmc_w			:= r01.vl_pmc;
	ds_principio_ativo_w		:= r01.ds_principio_ativo;
	ie_origem_w			:= r01.ie_origem;
	cd_ref_material_fab_w		:= r01.cd_ref_material_fab;
	cd_anterior_material_w		:= r01.cd_anterior_material;
	cd_anterior_medicamento_w	:= r01.cd_anterior_medicamento;
	cd_material_tuss_w		:= r01.cd_material_tuss;
	ie_produto_w			:= r01.tp_produto;
	ie_codificacao_w		:= r01.tp_codificacao;
	dt_inicio_vigencia_w		:= r01.dt_inicio_vigencia;
	dt_fim_vigencia_w		:= r01.dt_fim_vigencia;
	dt_fim_implantacao_w		:= r01.dt_fim_implantacao;
	vl_preco_unico_w		:= r01.preco_unico;
	ds_observacao_w			:= r01.ds_observacao;
	ds_unidade_medida_w		:= r01.ds_unidade_medida;
	ie_produto_med_w		:= r01.ie_produto_med;
	ie_confaz_w			:= r01.ie_confaz;
	vl_tc_w				:= r01.vl_tc;
	nm_tecnico_w			:= r01.nm_tecnico;
	ds_equiv_tecnica_w		:= r01.ds_equiv_tecnica;
	tp_tabela_tiss_w		:= r01.tp_tabela_tiss;
	cd_material_tiss_w		:= r01.cd_material_tiss;
	cd_material_tiss_ant_w		:= r01.cd_material_tiss_ant;
		
	CALL gravar_processo_longo(nm_material_w ,'PLS_PROCESSAR_ARQUIVO_A900', -1);
	
	if (ds_versao_tiss_w = '2.02.03') then	
		cd_material_aux_w	:= null;
		if (ie_tipo_w = '902') then -- Material
			cd_material_aux_w := coalesce(cd_anterior_material_w,cd_anterior_medicamento_w);
		
		elsif (ie_tipo_w = '905') then -- Medicamento
			cd_material_aux_w := coalesce(cd_anterior_medicamento_w,cd_anterior_material_w);
		end if;
		
		if (cd_material_aux_w IS NOT NULL AND cd_material_aux_w::text <> '') then
			cd_material_w	:= cd_material_aux_w;
		end if;
	end if;
	
	if (ds_versao_tiss_w IS NOT NULL AND ds_versao_tiss_w::text <> '') then		
		select	max(nr_sequencia)
		into STRICT	nr_seq_material_a900_w
		from	pls_material_unimed
		where	cd_material		= cd_material_w
		and	coalesce(ie_codificacao,1)	= ie_codificacao_w
		and (ds_versao_tiss		= ds_versao_tiss_w or coalesce(ds_versao_tiss::text, '') = '');
	else	
		select	max(nr_sequencia)
		into STRICT	nr_seq_material_a900_w
		from	pls_material_unimed
		where	cd_material		= cd_material_w
		and	coalesce(ie_codificacao,1)	= ie_codificacao_w;
	end if;
	
	-- Inclusao
	if (coalesce(nr_seq_material_a900_w::text, '') = '') then
		insert into pls_material_unimed(nr_sequencia,
			cd_material,
			cd_unidade_medida,
			ie_origem,
			nm_material,
			ie_tipo,
			ie_situacao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_cnpj,
			nm_fabricante,
			nm_importador,
			nr_registro_anvisa,
			dt_validade_anvisa,
			ds_motivo_ativo_inativo,
			vl_fabrica,
			vl_max_consumidor,
			dt_inicio_obrigatorio,
			ds_material,
			ds_especialidade,
			ds_classe,
			ds_apresentacao,
			vl_fator_conversao,
			ie_generico,
			ds_grupo_farmacologico,
			ds_classe_farmacologico,
			ds_forma_farmaceutico,
			pr_icms,
			vl_pmc,
			ds_principio_ativo,
			cd_ref_material_fab,
			cd_anterior_material,
			cd_anterior_medicamento,
			cd_material_tuss,
			ds_versao_tiss,
			ie_produto,
			ie_codificacao,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			dt_fim_implantacao,
			vl_preco_unico,
			ds_observacao,
			ds_unidade_medida,
			cd_estabelecimento,
			ie_produto_med,
			ie_confaz,
			dt_inicio_vigencia_val,
			vl_tc,
			nm_tecnico,
			ds_equiv_tecnica,
			tp_tabela_tiss,
			cd_material_tiss,		
			cd_material_tiss_ant)
		values (nextval('pls_material_unimed_seq'),
			cd_material_w,
			cd_unidade_medida_w,
			ie_origem_w,
			nm_material_w,
			ie_tipo_w,
			ie_situacao_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_cnpj_w,
			nm_fabricante_w,
			nm_importador_w,
			nr_registro_anvisa_w,
			dt_validade_anvisa_w,
			ds_motivo_ativo_inativo_w,
			vl_fabrica_w,
			vl_max_consumidor_w,
			dt_inicio_obrigatorio_w,
			ds_material_w,
			ds_especialidade_w,
			ds_classe_w,
			ds_apresentacao_w,
			vl_fator_conversao_w,
			ie_generico_w,
			ds_grupo_farmacologico_w,
			ds_classe_farmacologico_w,
			ds_forma_farmaceutico_w,
			pr_icms_w,
			vl_pmc_w,
			ds_principio_ativo_w,
			cd_ref_material_fab_w,
			cd_anterior_material_w,
			cd_anterior_medicamento_w,
			cd_material_tuss_w,
			ds_versao_tiss_w,
			ie_produto_w,
			ie_codificacao_w,
			dt_inicio_vigencia_w,
			dt_fim_vigencia_w,
			dt_fim_implantacao_w,
			vl_preco_unico_w,
			ds_observacao_w,
			ds_unidade_medida_w,
			cd_estabelecimento_p,
			ie_produto_med_w,
			ie_confaz_w,
			dt_inicio_vigencia_mat_w,
			vl_tc_w,
			nm_tecnico_w,
			ds_equiv_tecnica_w,
			tp_tabela_tiss_w,
			cd_material_tiss_w,		
			cd_material_tiss_ant_w) returning nr_sequencia into nr_seq_mat_unimed_w;
			
		insert into pls_material_uni_val(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_mat_unimed,
			vl_max_consumidor,
			dt_inicio_vigencia)
		values (nextval('pls_material_uni_val_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_mat_unimed_w,
			vl_max_consumidor_w,
			dt_inicio_vigencia_mat_w);
	
		insert into pls_lote_imp_mat_uni_reg(nr_sequencia,					dt_atualizacao,					nm_usuario,
			dt_atualizacao_nrec,				nm_usuario_nrec,				nr_seq_lote,
			nr_seq_mat_unimed,				ie_tipo_alteracao,				cd_unidade_medida,
			ds_unidade_medida,				dt_inicio_obrigatorio,				dt_validade_anvisa,
			dt_inicio_vigencia,				dt_fim_vigencia,				dt_fim_implantacao,
			vl_fabrica,					vl_max_consumidor,				vl_fator_conversao,
			pr_icms,					vl_pmc,						vl_preco_unico,
			vl_tc,						nr_registro_anvisa,				cd_material_tuss,
			ie_tipo,					ie_produto,					ie_produto_med,
			ie_generico,					ie_codificacao,					cd_ref_material_fab,
			cd_anterior_material,				cd_anterior_medicamento)
		values (nextval('pls_lote_imp_mat_uni_reg_seq'),		clock_timestamp(),					nm_usuario_p,
			clock_timestamp(),					nm_usuario_p,					nr_seq_lote_imp_p,
			nr_seq_mat_unimed_w,				'I',						cd_unidade_medida_w,
			ds_unidade_medida_w,				dt_inicio_obrigatorio_w,			dt_validade_anvisa_w,
			dt_inicio_vigencia_w,				dt_fim_vigencia_w,				dt_fim_implantacao_w,
			vl_fabrica_w,					vl_max_consumidor_w,				vl_fator_conversao_w,
			pr_icms_w,					vl_pmc_w,					vl_preco_unico_w,
			vl_tc_w,					nr_registro_anvisa_w,				cd_material_tuss_w,
			ie_tipo_w,					ie_produto_w,					ie_produto_med_w,
			ie_generico_w,					ie_codificacao_w,				cd_ref_material_fab_w,
			cd_anterior_material_w,				cd_anterior_medicamento_w)
		returning nr_sequencia into nr_seq_lote_mat_w;
			
		ie_mat_med_alterado_w := 'S';
			
		-- Material - TRIBUTO
		for r_C02_w in C02(nr_sequencia_w) loop
			pr_icms_w:= r_C02_w.vl_perc_icm;
			vl_pmc_w := r_C02_w.vl_pmc;
			vl_tcl_w := r_C02_w.vl_tcl;
			id_alc_w := r_C02_w.id_alc;
			
			insert into pls_lote_imp_mat_uni_trib(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_mat_unimed,
				vl_perc_icms,
				vl_pmc,
				vl_tcl,
				id_alc)
			values (	nextval('pls_lote_imp_mat_uni_trib_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_lote_mat_w,
				pr_icms_w,
				vl_pmc_w,
				vl_tcl_w,
				id_alc_w);
			
			insert into pls_mat_unimed_trib(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_mat_unimed,
				vl_perc_icms,
				vl_pmc,
				vl_tcl,
				dt_inicio_vigencia,
				id_alc)
			values (	nextval('pls_mat_unimed_trib_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_mat_unimed_w,
				pr_icms_w,
				vl_pmc_w,
				vl_tcl_w,
				dt_inicio_vigencia_icms_w,
				id_alc_w);
		end loop;
		
		-- Material - SIMPRO
		for r_C03_w in C03(nr_sequencia_w) loop
			insert into pls_lote_imp_mat_uni_simp(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_mat_unimed,
				cd_simpro,
				ds_produto_simpro)
			values (nextval('pls_lote_imp_mat_uni_simp_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_lote_mat_w,
				r_C03_w.cd_simpro,
				r_C03_w.desc_prod_simpro);
		
			insert into pls_material_unimed_simpro(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_mat_unimed,
				cd_simpro,
				ds_produto_simpro)
			values (nextval('pls_material_unimed_simpro_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_mat_unimed_w,
				r_C03_w.cd_simpro,
				r_C03_w.desc_prod_simpro);
		end loop;
		
		-- Medicamento - BRASINDICE
		for r_C04_w in C04(nr_sequencia_w) loop
			insert into pls_lote_imp_mat_uni_bras(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_mat_unimed,
				cd_brasindice,
				ds_produto,
				ds_apresentacao)
			values (nextval('pls_lote_imp_mat_uni_bras_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_lote_mat_w,
				r_C04_w.cd_brasindice,
				r_C04_w.des_produto,
				r_C04_w.des_apresentacao);
		
			insert into pls_material_unimed_bras(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_mat_unimed,
				cd_brasindice,
				ds_produto,
				ds_apresentacao)
			values (nextval('pls_material_unimed_bras_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_mat_unimed_w,
				r_C04_w.cd_brasindice,
				r_C04_w.des_produto,
				r_C04_w.des_apresentacao);	
		end loop;
	end if;

	if (nr_seq_material_a900_w IS NOT NULL AND nr_seq_material_a900_w::text <> '') then
		select	cd_cnpj,
			cd_material,
			cd_unidade_medida,
			ds_apresentacao,
			ds_classe,
			ds_classe_farmacologico,
			ds_especialidade,
			ds_forma_farmaceutico,
			ds_grupo_farmacologico,
			ds_material,
			ds_motivo_ativo_inativo,
			ds_principio_ativo,
			dt_inicio_obrigatorio,
			dt_validade_anvisa,
			ie_generico,
			ie_origem,
			ie_situacao,
			ie_tipo,
			nm_fabricante,
			nm_importador,
			nm_material,
			nr_registro_anvisa,
			pr_icms,
			vl_fabrica,
			vl_fator_conversao,
			vl_max_consumidor,
			vl_pmc,
			cd_ref_material_fab,
			cd_anterior_material,
			cd_anterior_medicamento,
			cd_material_tuss,
			ds_versao_tiss,
			ie_produto,
			ie_codificacao,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			dt_fim_implantacao,
			vl_preco_unico,
			ds_observacao,
			ds_unidade_medida,
			ie_produto_med,
			ie_confaz,
			dt_inicio_vigencia_val,
			vl_tc,
			nm_tecnico,
			ds_equiv_tecnica
		into STRICT	cd_cnpj_ww,
			cd_material_ww,
			cd_unidade_medida_ww,
			ds_apresentacao_ww,
			ds_classe_ww,
			ds_classe_farmacologico_ww,
			ds_especialidade_ww,
			ds_forma_farmaceutico_ww,			
			ds_grupo_farmacologico_ww,
			ds_material_ww,
			ds_motivo_ativo_inativo_ww,
			ds_principio_ativo_ww,
			dt_inicio_obrigatorio_ww,
			dt_validade_anvisa_ww,
			ie_generico_ww,
			ie_origem_ww,
			ie_situacao_ww,
			ie_tipo_ww,
			nm_fabricante_ww,
			nm_importador_ww,
			nm_material_ww,
			nr_registro_anvisa_ww,
			pr_icms_ww,
			vl_fabrica_ww,
			vl_fator_conversao_ww,
			vl_max_consumidor_ww,
			vl_pmc_ww,
			cd_ref_material_fab_ww,
			cd_anterior_material_ww,
			cd_anterior_medicamento_ww,
			cd_material_tuss_ww,
			ds_versao_tiss_ww,
			ie_produto_ww,
			ie_codificacao_ww,
			dt_inicio_vigencia_ww,
			dt_fim_vigencia_ww,
			dt_fim_implantacao_ww,
			vl_preco_unico_ww,
			ds_observacao_ww,
			ds_unidade_medida_ww,
			ie_produto_med_ww,
			ie_confaz_ww,
			dt_inicio_vigencia_val_w,
			vl_tc_ww,
			nm_tecnico_ww,
			ds_equiv_tecnica_ww
		from	pls_material_unimed
		where	nr_sequencia 	= nr_seq_material_a900_w;
		
		-- Comparacao. um por um, assim facilitando qualquer verificacao/revisao
		if (coalesce(cd_cnpj_ww, '') <> coalesce(cd_cnpj_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(cd_material_ww, 0) <> coalesce(cd_material_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(cd_unidade_medida_ww, '') <> coalesce(cd_unidade_medida_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_apresentacao_ww, '') <> coalesce(ds_apresentacao_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_classe_ww, '') <> coalesce(ds_classe_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_classe_farmacologico_ww, '') <> coalesce(ds_classe_farmacologico_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_especialidade_ww, '') <> coalesce(ds_especialidade_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_forma_farmaceutico_ww, '') <> coalesce(ds_forma_farmaceutico_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_grupo_farmacologico_ww, '') <> coalesce(ds_grupo_farmacologico_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_material_ww, '') <> coalesce(ds_material_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_motivo_ativo_inativo_ww, '') <> coalesce(ds_motivo_ativo_inativo_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_principio_ativo_ww, '') <> coalesce(ds_principio_ativo_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(to_char(dt_inicio_obrigatorio_ww), '') <> coalesce(to_char(dt_inicio_obrigatorio_w), '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(to_char(dt_validade_anvisa_ww), '') <> coalesce(to_char(dt_validade_anvisa_w), '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ie_generico_ww, '') <> coalesce(ie_generico_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ie_origem_ww, 0) <> coalesce(ie_origem_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ie_situacao_ww, '') <> coalesce(ie_situacao_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ie_tipo_ww, 0) <> coalesce(ie_tipo_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(nm_fabricante_ww, '') <> coalesce(nm_fabricante_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(nm_importador_ww, '') <> coalesce(nm_importador_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(nm_material_ww, '') <> coalesce(nm_material_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(nr_registro_anvisa_ww, '') <> coalesce(nr_registro_anvisa_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(pr_icms_ww, 0) <> coalesce(pr_icms_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(vl_fabrica_ww, 0) <> coalesce(vl_fabrica_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(vl_fator_conversao_ww, 0) <> coalesce(vl_fator_conversao_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(vl_max_consumidor_ww, 0) <> coalesce(vl_max_consumidor_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(vl_pmc_ww, 0) <> coalesce(vl_pmc_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(cd_ref_material_fab_ww, '') <> coalesce(cd_ref_material_fab_w, '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(cd_anterior_material_ww, 0) <> coalesce(cd_anterior_material_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(cd_anterior_medicamento_ww, 0) <> coalesce(cd_anterior_medicamento_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(cd_material_tuss_ww, 0) <> coalesce(cd_material_tuss_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_versao_tiss_ww, ' ') <> coalesce(ds_versao_tiss_w, ' ')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ie_produto_ww,' ') <> coalesce(ie_produto_w, ' ')) then
			ie_alteracao_w	:= 'S';
		
		elsif (coalesce(ie_codificacao_ww,' ') <>  coalesce(ie_codificacao_w, ' ')) then
			ie_alteracao_w	:= 'S';
		
		elsif (coalesce(to_char(dt_inicio_vigencia_ww),' ') <> coalesce(to_char(dt_inicio_vigencia_w), '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(to_char(dt_fim_vigencia_ww),' ') <> coalesce(to_char(dt_fim_vigencia_w), '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(to_char(dt_fim_implantacao_ww),' ') <> coalesce(to_char(dt_fim_implantacao_w), '')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(vl_preco_unico_ww,0) <> coalesce(vl_preco_unico_w,0)) then
			ie_alteracao_w	:= 'S';
		
		elsif (coalesce(ds_observacao_ww,' ') <> coalesce(ds_observacao_w,' ')) then
			ie_alteracao_w	:= 'S';	

		elsif (coalesce(ds_unidade_medida_ww, '') <> coalesce(ds_unidade_medida_w, '')) then
			ie_alteracao_w	:= 'S';

		elsif (coalesce(ie_produto_med_ww,' ') <> coalesce(ie_produto_med_w, ' ')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ie_confaz_ww,' ') <> coalesce(ie_confaz_w, ' ')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(to_char(dt_inicio_vigencia_val_w), clock_timestamp() + interval '1 days') <> coalesce(to_char(dt_inicio_vigencia_mat_w), clock_timestamp())) then -- tratamento para prever quando for null
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(vl_tc_ww,0) <> coalesce(vl_tc_w, 0)) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(nm_tecnico_ww,' ') <> coalesce(nm_tecnico_w, ' ')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(ds_equiv_tecnica_ww,' ') <> coalesce(ds_equiv_tecnica_w, ' ')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(tp_tabela_tiss_ww,' ') <> coalesce(tp_tabela_tiss_w, ' ')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(cd_material_tiss_ww,' ') <> coalesce(cd_material_tiss_w, ' ')) then
			ie_alteracao_w	:= 'S';
			
		elsif (coalesce(cd_material_tiss_ant_ww,' ') <> coalesce(cd_material_tiss_ant_w, ' ')) then
			ie_alteracao_w	:= 'S';			
		end if;
		
		-- Alteracao 
		if (ie_alteracao_w = 'S') then			
			insert into pls_lote_imp_mat_uni_reg(nr_sequencia,					dt_atualizacao,					nm_usuario,
				dt_atualizacao_nrec,				nm_usuario_nrec,				nr_seq_lote,
				nr_seq_mat_unimed,				ie_tipo_alteracao,				cd_unidade_medida,
				ds_unidade_medida,				dt_inicio_obrigatorio,				dt_validade_anvisa,
				dt_inicio_vigencia,				dt_fim_vigencia,				dt_fim_implantacao,
				vl_fabrica,					vl_max_consumidor,				vl_fator_conversao,
				pr_icms,					vl_pmc,						vl_preco_unico,
				vl_tc,						nr_registro_anvisa,				cd_material_tuss,
				ie_tipo,					ie_produto,					ie_produto_med,
				ie_generico,					ie_codificacao,					cd_ref_material_fab,
				cd_anterior_material,				cd_anterior_medicamento)
			values (nextval('pls_lote_imp_mat_uni_reg_seq'),		clock_timestamp(),					nm_usuario_p,
				clock_timestamp(),					nm_usuario_p,					nr_seq_lote_imp_p,
				nr_seq_material_a900_w,				'A',						cd_unidade_medida_w,
				ds_unidade_medida_w,				dt_inicio_obrigatorio_w,			dt_validade_anvisa_w,
				dt_inicio_vigencia_w,				dt_fim_vigencia_w,				dt_fim_implantacao_w,
				vl_fabrica_w,					vl_max_consumidor_w,				vl_fator_conversao_w,
				pr_icms_w,					vl_pmc_w,					vl_preco_unico_w,
				vl_tc_w,					nr_registro_anvisa_w,				cd_material_tuss_w,
				ie_tipo_w,					ie_produto_w,					ie_produto_med_w,
				ie_generico_w,					ie_codificacao_w,				cd_ref_material_fab_w,
				cd_anterior_material_w,				cd_anterior_medicamento_w)
			returning nr_sequencia into nr_seq_lote_mat_w;
			
			update	pls_material_unimed
			set	nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),				
				cd_cnpj			= cd_cnpj_w,
				cd_material		= cd_material_w,
				cd_unidade_medida	= cd_unidade_medida_w ,
				ds_apresentacao		= ds_apresentacao_w,
				ds_classe		= ds_classe_w,
				ds_classe_farmacologico	= ds_classe_farmacologico_w,
				ds_especialidade	= ds_especialidade_w,
				ds_forma_farmaceutico	= ds_forma_farmaceutico_w,
				ds_grupo_farmacologico	= ds_grupo_farmacologico_w,
				ds_material		= ds_material_w,
				ds_motivo_ativo_inativo	= ds_motivo_ativo_inativo_w,
				ds_principio_ativo	= ds_principio_ativo_w,
				dt_inicio_obrigatorio	= dt_inicio_obrigatorio_w,
				dt_validade_anvisa	= dt_validade_anvisa_w,
				ie_generico		= ie_generico_w,
				ie_origem		= ie_origem_w,
				ie_situacao		= ie_situacao_w,
				ie_tipo			= ie_tipo_w,
				nm_fabricante		= nm_fabricante_w,
				nm_importador		= nm_importador_w,
				nm_material		= nm_material_w,
				nr_registro_anvisa	= nr_registro_anvisa_w,
				pr_icms			= pr_icms_w,
				vl_fabrica		= vl_fabrica_w,
				vl_fator_conversao	= vl_fator_conversao_w,
				vl_max_consumidor	= vl_max_consumidor_w,
				vl_pmc			= vl_pmc_w,
				cd_ref_material_fab	= cd_ref_material_fab_w,
				cd_anterior_material	= cd_anterior_material_w,
				cd_anterior_medicamento = cd_anterior_medicamento_w,
				cd_material_tuss	= cd_material_tuss_w,
				ds_versao_tiss		= ds_versao_tiss_w,
				ie_produto		= ie_produto_w,
				ie_codificacao		= ie_codificacao_w,
				dt_inicio_vigencia	= dt_inicio_vigencia_w,
				dt_fim_vigencia		= dt_fim_vigencia_w,
				dt_fim_implantacao	= dt_fim_implantacao_w,
				vl_preco_unico		= vl_preco_unico_w,
				ds_observacao		= ds_observacao,
				ds_unidade_medida	= ds_unidade_medida_w,
				ie_produto_med		= ie_produto_med_w,
				ie_confaz		= ie_confaz_w,
				dt_inicio_vigencia_val	= dt_inicio_vigencia_mat_w,
				vl_tc			= vl_tc_w,
				nm_tecnico		= nm_tecnico_w,
				ds_equiv_tecnica	= ds_equiv_tecnica_w,
				tp_tabela_tiss	 	= tp_tabela_tiss_w,
				cd_material_tiss 	= cd_material_tiss_w,		
				cd_material_tiss_ant 	= cd_material_tiss_ant_w
			where	nr_sequencia		= nr_seq_material_a900_w;
			
			ie_mat_med_alterado_w := 'S';
			
			insert into pls_material_uni_val(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_mat_unimed,
				vl_max_consumidor,
				dt_inicio_vigencia)
			values (nextval('pls_material_uni_val_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_material_a900_w,
				vl_max_consumidor_w,
				dt_inicio_vigencia_mat_w);
			
			-- Material - TRIBUTO
			for r_C02_w in C02(nr_sequencia_w) loop
				pr_icms_w:= r_C02_w.vl_perc_icm;
				vl_pmc_w := r_C02_w.vl_pmc;
				vl_tcl_w := r_C02_w.vl_tcl;
				id_alc_w := r_C02_w.id_alc;
			
				insert into pls_lote_imp_mat_uni_trib(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_mat_unimed,
					vl_perc_icms,
					vl_pmc,
					id_alc)
				values (	nextval('pls_lote_imp_mat_uni_trib_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_lote_mat_w,
					pr_icms_w,
					vl_pmc_w,
					id_alc_w);
					
				select	count(1)
				into STRICT	qt_registro_w
				FROM pls_material_unimed x
LEFT OUTER JOIN pls_mat_unimed_trib c ON (x.nr_sequencia = c.nr_seq_mat_unimed)
WHERE x.nr_sequencia	= nr_seq_material_a900_w and (coalesce(c.vl_pmc,0)	<> vl_pmc_w
				or	coalesce(c.vl_perc_icms,0)	<> pr_icms_w
				or	coalesce(c.vl_tcl,0)		<> vl_tcl_w);
				
				if (qt_registro_w > 0) then
					insert into pls_mat_unimed_trib(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_mat_unimed,
						vl_perc_icms,
						vl_pmc,
						vl_tcl,
						dt_inicio_vigencia,
						id_alc)
					values (	nextval('pls_mat_unimed_trib_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_material_a900_w,
						pr_icms_w,
						vl_pmc_w,
						vl_tcl_w,
						dt_inicio_vigencia_icms_w,
						id_alc_w);
				end if;
			end loop;
			
			-- Material - SIMPRO
			for r_C03_w in C03(nr_sequencia_w) loop
				insert into pls_lote_imp_mat_uni_simp(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_mat_unimed,
					cd_simpro,
					ds_produto_simpro)
				values (nextval('pls_lote_imp_mat_uni_simp_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_lote_mat_w,
					r_C03_w.cd_simpro,
					r_C03_w.desc_prod_simpro);
			
				select	count(1)
				into STRICT	qt_registro_w
				FROM pls_material_unimed x
LEFT OUTER JOIN pls_material_unimed_simpro c ON (x.nr_sequencia = c.nr_seq_mat_unimed)
WHERE x.nr_sequencia	= nr_seq_material_a900_w and (coalesce(trim(both c.cd_simpro),' ')		<> r_C03_w.cd_simpro
				or	coalesce(trim(both c.ds_produto_simpro),' ')	<> r_C03_w.desc_prod_simpro);
			
				if (qt_registro_w > 0) then
					insert into pls_material_unimed_simpro(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_mat_unimed,
						cd_simpro,
						ds_produto_simpro)
					values (nextval('pls_material_unimed_simpro_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_material_a900_w,
						r_C03_w.cd_simpro,
						r_C03_w.desc_prod_simpro);
				end if;
			end loop;
			
			-- Medicamento - BRASINDICE
			for r_C04_w in C04(nr_sequencia_w) loop
				insert into pls_lote_imp_mat_uni_bras(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_mat_unimed,
					cd_brasindice,
					ds_produto,
					ds_apresentacao)
				values (nextval('pls_lote_imp_mat_uni_bras_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_lote_mat_w,
					r_C04_w.cd_brasindice,
					r_C04_w.des_produto,
					r_C04_w.des_apresentacao);
			
				select	count(1)
				into STRICT	qt_registro_w
				FROM pls_material_unimed x
LEFT OUTER JOIN pls_material_unimed_bras c ON (x.nr_sequencia = c.nr_seq_mat_unimed)
WHERE x.nr_sequencia	= nr_seq_material_a900_w and (coalesce(trim(both c.cd_brasindice),' ')		<> r_C04_w.cd_brasindice
				or	coalesce(trim(both c.ds_produto),' ')		<> r_C04_w.des_produto
				or	coalesce(trim(both c.ds_apresentacao),' ')	<> r_C04_w.des_apresentacao);
			
				if (qt_registro_w > 0) then
					insert into pls_material_unimed_bras(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_mat_unimed,
						cd_brasindice,
						ds_produto,
						ds_apresentacao)
					values (nextval('pls_material_unimed_bras_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_material_a900_w,
						r_C04_w.cd_brasindice,
						r_C04_w.des_produto,
						r_C04_w.des_apresentacao);
				end if;
			end loop;
		end if;
		
		-- Exclusao 
		if (ie_situacao_w = 'I') then				
			insert into pls_lote_imp_mat_uni_reg(nr_sequencia,					dt_atualizacao,					nm_usuario,
				dt_atualizacao_nrec,				nm_usuario_nrec,				nr_seq_lote,
				nr_seq_mat_unimed,				ie_tipo_alteracao,				cd_unidade_medida,
				ds_unidade_medida,				dt_inicio_obrigatorio,				dt_validade_anvisa,
				dt_inicio_vigencia,				dt_fim_vigencia,				dt_fim_implantacao,
				vl_fabrica,					vl_max_consumidor,				vl_fator_conversao,
				pr_icms,					vl_pmc,						vl_preco_unico,
				vl_tc,						nr_registro_anvisa,				cd_material_tuss,
				ie_tipo,					ie_produto,					ie_produto_med,
				ie_generico,					ie_codificacao,					cd_ref_material_fab,
				cd_anterior_material,				cd_anterior_medicamento)
			values (nextval('pls_lote_imp_mat_uni_reg_seq'),		clock_timestamp(),					nm_usuario_p,
				clock_timestamp(),					nm_usuario_p,					nr_seq_lote_imp_p,
				nr_seq_material_a900_w,				'E',						cd_unidade_medida_w,
				ds_unidade_medida_w,				dt_inicio_obrigatorio_w,			dt_validade_anvisa_w,
				dt_inicio_vigencia_w,				dt_fim_vigencia_w,				dt_fim_implantacao_w,
				vl_fabrica_w,					vl_max_consumidor_w,				vl_fator_conversao_w,
				pr_icms_w,					vl_pmc_w,					vl_preco_unico_w,
				vl_tc_w,					nr_registro_anvisa_w,				cd_material_tuss_w,
				ie_tipo_w,					ie_produto_w,					ie_produto_med_w,
				ie_generico_w,					ie_codificacao_w,				cd_ref_material_fab_w,
				cd_anterior_material_w,				cd_anterior_medicamento_w)
			returning nr_sequencia into nr_seq_lote_mat_w;
				
			update	pls_material_unimed
			set	dt_atualizacao	= clock_timestamp(),
				ie_situacao	= ie_situacao_w
			where	nr_sequencia	= nr_seq_material_a900_w;

			ie_mat_med_alterado_w := 'S';
			
			-- Material - TRIBUTO
			for r_C02_w in C02(nr_sequencia_w) loop
				pr_icms_w:= r_C02_w.vl_perc_icm;
				vl_pmc_w := r_C02_w.vl_pmc;
				vl_tcl_w := r_C02_w.vl_tcl;
				id_alc_w := r_C02_w.id_alc;
			
				insert into pls_lote_imp_mat_uni_trib(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_mat_unimed,
					vl_perc_icms,
					vl_pmc,
					id_alc)
				values (	nextval('pls_lote_imp_mat_uni_trib_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_lote_mat_w,
					pr_icms_w,
					vl_pmc_w,
					id_alc_w);
					
				select	count(1)
				into STRICT	qt_registro_w
				FROM pls_material_unimed x
LEFT OUTER JOIN pls_mat_unimed_trib c ON (x.nr_sequencia = c.nr_seq_mat_unimed)
WHERE x.nr_sequencia	= nr_seq_material_a900_w and (coalesce(c.vl_pmc,0)	<> vl_pmc_w
				or	coalesce(c.vl_perc_icms,0)	<> pr_icms_w
				or	coalesce(c.vl_tcl,0)		<> vl_tcl_w);
				
				if (qt_registro_w > 0) then
					insert into pls_mat_unimed_trib(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_mat_unimed,
						vl_perc_icms,
						vl_pmc,
						vl_tcl,
						dt_inicio_vigencia,
						id_alc)
					values (	nextval('pls_mat_unimed_trib_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_material_a900_w,
						pr_icms_w,
						vl_pmc_w,
						vl_tcl_w,
						dt_inicio_vigencia_icms_w,
						id_alc_w);
				end if;
			end loop;
			
			-- Material - SIMPRO
			for r_C03_w in C03(nr_sequencia_w) loop
				insert into pls_lote_imp_mat_uni_simp(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_mat_unimed,
					cd_simpro,
					ds_produto_simpro)
				values (nextval('pls_lote_imp_mat_uni_simp_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_lote_mat_w,
					r_C03_w.cd_simpro,
					r_C03_w.desc_prod_simpro);
			
				select	count(1)
				into STRICT	qt_registro_w
				FROM pls_material_unimed x
LEFT OUTER JOIN pls_material_unimed_simpro c ON (x.nr_sequencia = c.nr_seq_mat_unimed)
WHERE x.nr_sequencia	= nr_seq_material_a900_w and (coalesce(trim(both c.cd_simpro),' ')		<> r_C03_w.cd_simpro
				or	coalesce(trim(both c.ds_produto_simpro),' ')	<> r_C03_w.desc_prod_simpro);
			
				if (qt_registro_w > 0) then
					insert into pls_material_unimed_simpro(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_mat_unimed,
						cd_simpro,
						ds_produto_simpro)
					values (nextval('pls_material_unimed_simpro_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_material_a900_w,
						r_C03_w.cd_simpro,
						r_C03_w.desc_prod_simpro);
				end if;
			end loop;
			
			-- Medicamento - BRASINDICE
			for r_C04_w in C04(nr_sequencia_w) loop
				insert into pls_lote_imp_mat_uni_bras(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_mat_unimed,
					cd_brasindice,
					ds_produto,
					ds_apresentacao)
				values (nextval('pls_lote_imp_mat_uni_bras_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_lote_mat_w,
					r_C04_w.cd_brasindice,
					r_C04_w.des_produto,
					r_C04_w.des_apresentacao);
			
				select	count(1)
				into STRICT	qt_registro_w
				FROM pls_material_unimed x
LEFT OUTER JOIN pls_material_unimed_bras c ON (x.nr_sequencia = c.nr_seq_mat_unimed)
WHERE x.nr_sequencia	= nr_seq_material_a900_w and (coalesce(trim(both c.cd_brasindice),' ')		<> r_C04_w.cd_brasindice
				or	coalesce(trim(both c.ds_produto),' ')		<> r_C04_w.des_produto
				or	coalesce(trim(both c.ds_apresentacao),' ')	<> r_C04_w.des_apresentacao);
			
				if (qt_registro_w > 0) then
					insert into pls_material_unimed_bras(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_mat_unimed,
						cd_brasindice,
						ds_produto,
						ds_apresentacao)
					values (nextval('pls_material_unimed_bras_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_material_a900_w,
						r_C04_w.cd_brasindice,
						r_C04_w.des_produto,
						r_C04_w.des_apresentacao);
				end if;
			end loop;
		end if;
	
		ie_alteracao_w	:= 'N';
		
		-- Mesmo nao tendo alteracao do material (902) / medicamento (905), tem que verificar se o ICMS (906) esta OK
		if (ie_mat_med_alterado_w = 'N') and (nr_seq_material_a900_w IS NOT NULL AND nr_seq_material_a900_w::text <> '') then			
			insert into pls_lote_imp_mat_uni_reg(nr_sequencia,					dt_atualizacao,					nm_usuario,
				dt_atualizacao_nrec,				nm_usuario_nrec,				nr_seq_lote,
				nr_seq_mat_unimed,				ie_tipo_alteracao,				cd_unidade_medida,
				ds_unidade_medida,				dt_inicio_obrigatorio,				dt_validade_anvisa,
				dt_inicio_vigencia,				dt_fim_vigencia,				dt_fim_implantacao,
				vl_fabrica,					vl_max_consumidor,				vl_fator_conversao,
				pr_icms,					vl_pmc,						vl_preco_unico,
				vl_tc,						nr_registro_anvisa,				cd_material_tuss,
				ie_tipo,					ie_produto,					ie_produto_med,
				ie_generico,					ie_codificacao,					cd_ref_material_fab,
				cd_anterior_material,				cd_anterior_medicamento)
			values (nextval('pls_lote_imp_mat_uni_reg_seq'),		clock_timestamp(),					nm_usuario_p,
				clock_timestamp(),					nm_usuario_p,					nr_seq_lote_imp_p,
				nr_seq_material_a900_w,				'A',						cd_unidade_medida_w,
				ds_unidade_medida_w,				dt_inicio_obrigatorio_w,			dt_validade_anvisa_w,
				dt_inicio_vigencia_w,				dt_fim_vigencia_w,				dt_fim_implantacao_w,
				vl_fabrica_w,					vl_max_consumidor_w,				vl_fator_conversao_w,
				pr_icms_w,					vl_pmc_w,					vl_preco_unico_w,
				vl_tc_w,					nr_registro_anvisa_w,				cd_material_tuss_w,
				ie_tipo_w,					ie_produto_w,					ie_produto_med_w,
				ie_generico_w,					ie_codificacao_w,				cd_ref_material_fab_w,
				cd_anterior_material_w,				cd_anterior_medicamento_w)
			returning nr_sequencia into nr_seq_lote_mat_w;
				
			-- Material - TRIBUTO
			for r_C02_w in C02(nr_sequencia_w) loop
				pr_icms_w:= r_C02_w.vl_perc_icm;
				vl_pmc_w := r_C02_w.vl_pmc;
				vl_tcl_w := r_C02_w.vl_tcl;
				id_alc_w := r_C02_w.id_alc;
				
				insert into pls_lote_imp_mat_uni_trib(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_mat_unimed,
					vl_perc_icms,
					vl_pmc,
					id_alc)
				values (	nextval('pls_lote_imp_mat_uni_trib_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_lote_mat_w,
					pr_icms_w,
					vl_pmc_w,
					id_alc_w);
					
				select	count(1)
				into STRICT	qt_registro_w
				FROM pls_material_unimed x
LEFT OUTER JOIN pls_mat_unimed_trib c ON (x.nr_sequencia = c.nr_seq_mat_unimed)
WHERE x.nr_sequencia	= nr_seq_material_a900_w and (coalesce(c.vl_pmc,0)	<> vl_pmc_w
				or	coalesce(c.vl_perc_icms,0)	<> pr_icms_w
				or	coalesce(c.vl_tcl,0)		<> vl_tcl_w);
				
				if (qt_registro_w > 0) then
					insert into pls_mat_unimed_trib(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_mat_unimed,
						vl_perc_icms,
						vl_pmc,
						vl_tcl,
						dt_inicio_vigencia,
						id_alc)
					values (	nextval('pls_mat_unimed_trib_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_material_a900_w,
						pr_icms_w,
						vl_pmc_w,
						vl_tcl_w,
						dt_inicio_vigencia_icms_w,
						id_alc_w);
				end if;
			end loop;

			-- Material - SIMPRO
			for r_C03_w in C03(nr_sequencia_w) loop
				insert into pls_lote_imp_mat_uni_simp(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_mat_unimed,
					cd_simpro,
					ds_produto_simpro)
				values (nextval('pls_lote_imp_mat_uni_simp_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_lote_mat_w,
					r_C03_w.cd_simpro,
					r_C03_w.desc_prod_simpro);
			
				select	count(1)
				into STRICT	qt_registro_w
				FROM pls_material_unimed x
LEFT OUTER JOIN pls_material_unimed_simpro c ON (x.nr_sequencia = c.nr_seq_mat_unimed)
WHERE x.nr_sequencia	= nr_seq_material_a900_w and (coalesce(trim(both c.cd_simpro),' ')		<> r_C03_w.cd_simpro
				or	coalesce(trim(both c.ds_produto_simpro),' ')	<> r_C03_w.desc_prod_simpro);
			
				if (qt_registro_w > 0) then
					insert into pls_material_unimed_simpro(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_mat_unimed,
						cd_simpro,
						ds_produto_simpro)
					values (nextval('pls_material_unimed_simpro_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_material_a900_w,
						r_C03_w.cd_simpro,
						r_C03_w.desc_prod_simpro);
				end if;
			end loop;
			
			-- Medicamento - BRASINDICE
			for r_C04_w in C04(nr_sequencia_w) loop
				insert into pls_lote_imp_mat_uni_bras(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_mat_unimed,
					cd_brasindice,
					ds_produto,
					ds_apresentacao)
				values (nextval('pls_lote_imp_mat_uni_bras_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_lote_mat_w,
					r_C04_w.cd_brasindice,
					r_C04_w.des_produto,
					r_C04_w.des_apresentacao);
					
				select	count(1)
				into STRICT	qt_registro_w
				FROM pls_material_unimed x
LEFT OUTER JOIN pls_material_unimed_bras c ON (x.nr_sequencia = c.nr_seq_mat_unimed)
WHERE x.nr_sequencia	= nr_seq_material_a900_w and (coalesce(trim(both c.cd_brasindice),' ')		<> r_C04_w.cd_brasindice
				or	coalesce(trim(both c.ds_produto),' ')		<> r_C04_w.des_produto
				or	coalesce(trim(both c.ds_apresentacao),' ')	<> r_C04_w.des_apresentacao);
			
				if (qt_registro_w > 0) then
					insert into pls_material_unimed_bras(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_mat_unimed,
						cd_brasindice,
						ds_produto,
						ds_apresentacao)
					values (nextval('pls_material_unimed_bras_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_material_a900_w,
						r_C04_w.cd_brasindice,
						r_C04_w.des_produto,
						r_C04_w.des_apresentacao);
				end if;
			end loop;
		end if;
	end if;
	
	if (qt_commit_w = 10000) then
		commit;
		qt_commit_w := 0;
	end if;
	
	end;		
end loop;

update	pls_lote_imp_mat_unimed
set	dt_fim_processamento	= clock_timestamp(),
	nm_usuario_processo	= nm_usuario_p,
	ie_status		= '6'
where 	nr_sequencia		= nr_seq_lote_imp_p;

commit;

exception
when others then
ds_erro_w := sqlerrm;

update	pls_lote_imp_mat_unimed
set	dt_fim_processamento	= clock_timestamp(),
	nm_usuario_processo	= nm_usuario_p,
	ie_status		= '4',
	ds_log			= ds_erro_w
where 	nr_sequencia		= nr_seq_lote_imp_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_processar_arquivo_a900 ( nr_seq_lote_imp_p pls_lote_imp_mat_unimed.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

