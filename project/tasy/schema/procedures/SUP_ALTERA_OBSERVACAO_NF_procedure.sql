-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_altera_observacao_nf ( ie_origem_p text, nr_sequencia_p bigint, nr_nota_fiscal_p text, dt_entrada_saida_p timestamp, dt_emissao_p timestamp, dt_vencimento_p timestamp, ds_observacao_p text, cd_serie_nf_p text, cd_natureza_p text, nm_usuario_p text, nr_nfe_imp_p text, cd_operacao_nf_p bigint default 0, ie_entregue_bloqueto_p text DEFAULT NULL) AS $body$
DECLARE


dt_entrada_saida_w	timestamp;
dt_emissao_w		timestamp;
nr_nota_fiscal_w		varchar(255);
ds_observacao_w		varchar(4000);
ie_altera_data_contabil_w	varchar(1);
cd_estabelecimento_w	integer;
cd_serie_nf_w		nota_fiscal.cd_serie_nf%type;
cd_natureza_w		smallint;
nr_nfe_imp_w		varchar(15);
ie_entregue_bloqueto_w	varchar(1);
cd_cgc_emitente_w	varchar(14);
nr_sequencia_nf_w	bigint;
nr_sequencia_nf_ww	bigint;
nr_sequencia_w		bigint;
ie_dt_contab_tit_nota_w	parametros_contas_pagar.ie_dt_contab_tit_nota%type;	

cd_operacao_nf_w    nota_fiscal.cd_operacao_nf%type;


BEGIN

select	dt_entrada_saida,
	nr_nota_fiscal,
	ds_observacao,
	dt_emissao,
	cd_estabelecimento,
	cd_serie_nf,
	cd_natureza_operacao,
	nr_nfe_imp,
	ie_entregue_bloqueto,
	cd_cgc_emitente,
	nr_sequencia_nf,
	cd_operacao_nf
into STRICT	dt_entrada_saida_w,
	nr_nota_fiscal_w,
	ds_observacao_w,
	dt_emissao_w,
	cd_estabelecimento_w,
	cd_serie_nf_w,
	cd_natureza_w,
	nr_nfe_imp_w,
	ie_entregue_bloqueto_w,
	cd_cgc_emitente_w,
	nr_sequencia_nf_w,
	cd_operacao_nf_w
from	nota_fiscal
where	nr_sequencia		= nr_sequencia_p;

select	max(ie_dt_contab_tit_nota)
into STRICT	ie_dt_contab_tit_nota_w
from	parametros_contas_pagar
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_origem_p = 'V') and (coalesce(ds_observacao_w,'X') <> coalesce(ds_observacao_p,'X')) then
	begin
	
	update	nota_fiscal_venc
	set	ds_observacao		= substr(ds_observacao_p,1,4000)
	where	trunc(dt_vencimento)	= trunc(dt_vencimento_p,'dd')
	and	nr_sequencia		= nr_sequencia_p;
	
	insert into nota_fiscal_hist(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota,
		cd_evento,
		ds_historico)
	values (	nextval('nota_fiscal_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		'24',
		WHEB_MENSAGEM_PCK.get_texto(306753));	
	end;
	
elsif (ie_origem_p = 'N') and (coalesce(ds_observacao_w,'X') <> coalesce(ds_observacao_p,'X')) then
	begin
	
	update	nota_fiscal
	set	ds_observacao		= substr(ds_observacao_p,1,4000)
	where	nr_sequencia		= nr_sequencia_p;
	
	insert into nota_fiscal_hist(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota,
		cd_evento,
		ds_historico)
	values (	nextval('nota_fiscal_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		'24',
		WHEB_MENSAGEM_PCK.get_texto(306753));	
	end;
end if;

if (trunc(dt_entrada_saida_w,'dd') <> trunc(dt_entrada_saida_p,'dd')) then

	update	nota_fiscal
	set	dt_entrada_saida	= dt_entrada_saida_p
	where	nr_sequencia		= nr_sequencia_p;

	ie_altera_data_contabil_w := obter_param_usuario(40, 150, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_altera_data_contabil_w);

	if (coalesce(ie_altera_data_contabil_w,'N') = 'S') and ( coalesce(ie_dt_contab_tit_nota_w,'ES') = 'ES' ) then --somente alterar  se estiver parametrizado como ES no parametros do contas a pagar, esse if ? quando ? alterado de entrada e saida na NF.
		update	titulo_pagar
		set	dt_contabil		= dt_entrada_saida_p
		where	nr_seq_nota_fiscal	= nr_sequencia_p;
	end if;

	insert into nota_fiscal_hist(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota,
		cd_evento,
		ds_historico)
	values (	nextval('nota_fiscal_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		'26',
		WHEB_MENSAGEM_PCK.get_texto(306756,'DT_ENTRADA_SAIDA_W=' || dt_entrada_saida_w || ';' || 'DT_ENTRADA_SAIDA_P=' || dt_entrada_saida_p));
		
end if;

if (nr_nfe_imp_p <> coalesce(nr_nfe_imp_w,'X')) then

	update 	nota_fiscal
	set	nr_nfe_imp = nr_nfe_imp_p
	where	nr_sequencia = nr_sequencia_p;
	
	insert into nota_fiscal_hist(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota,
		cd_evento,
		ds_historico)
	values (	nextval('nota_fiscal_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		'38',
		WHEB_MENSAGEM_PCK.get_texto(306757,'NR_NFE_IMP_W=' || coalesce(nr_nfe_imp_w,'NULO') || ';' || 'NR_NFE_IMP_P=' || nr_nfe_imp_p));
		
end if;


if (coalesce(ie_entregue_bloqueto_p,'N') <> coalesce(ie_entregue_bloqueto_w,'N')) then
	
	update	nota_fiscal
	set	ie_entregue_bloqueto	= ie_entregue_bloqueto_p
	where	nr_sequencia		= nr_sequencia_p;

	insert into nota_fiscal_hist(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota,
		cd_evento,
		ds_historico)
	values (	nextval('nota_fiscal_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		'39',
		WHEB_MENSAGEM_PCK.get_texto(306758,'IE_ENTREGUE_BLOQUETO_W=' || coalesce(ie_entregue_bloqueto_w,'N') || ';' || 'IE_ENTREGUE_BLOQUETO_P=' || coalesce(ie_entregue_bloqueto_p,'N')));
end if;

if (trunc(dt_emissao_w,'dd') <> trunc(dt_emissao_p,'dd')) then

	update	nota_fiscal
	set	dt_emissao	= dt_emissao_p
	where	nr_sequencia	= nr_sequencia_p;
	
	if ( ie_dt_contab_tit_nota_w = 'EMI' ) then -- Somente alterar se estiver parametrizado como Emiss?o nos parametros do contas a pagar. Acima, o if entra somente se foi alterrado de emissao da NF.
		update	titulo_pagar
		set	dt_contabil		= dt_emissao_p
		where	nr_seq_nota_fiscal	= nr_sequencia_p;
	end if;

	insert into nota_fiscal_hist(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota,
		cd_evento,
		ds_historico)
	values (	nextval('nota_fiscal_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		'28',
		WHEB_MENSAGEM_PCK.get_texto(306759,'DT_EMISSAO_W=' || dt_emissao_w || ';' || 'DT_EMISSAO_P=' || dt_emissao_p));
		
end if;


if (coalesce(cd_serie_nf_p, 'X') <> 'X') and (cd_serie_nf_p <> cd_serie_nf_w) then

	nr_sequencia_nf_ww	:= 1;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_w
	from	nota_fiscal
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_cgc_emitente		= cd_cgc_emitente_w
	and	cd_serie_nf		= cd_serie_nf_p
	and	nr_nota_fiscal		= nr_nota_fiscal_w
	and	nr_sequencia_nf		= nr_sequencia_nf_ww
	and	ie_situacao		<> '1';

	if (nr_sequencia_w > 0) then
		select	coalesce(max(nr_sequencia_nf),0) +1
		into STRICT	nr_sequencia_nf_ww
		from	nota_fiscal
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_cgc_emitente		= cd_cgc_emitente_w
		and	cd_serie_nf		= cd_serie_nf_p
		and	nr_nota_fiscal		= nr_nota_fiscal_w;
	end if;
	
	begin
	
	update	nota_fiscal
	set	cd_serie_nf	= cd_serie_nf_p,
		nr_sequencia_nf	= nr_sequencia_nf_ww
	where	nr_sequencia	= nr_sequencia_p;

	cd_serie_nf_w	:= cd_serie_nf_p;

	insert into nota_fiscal_hist(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota,
		cd_evento,
		ds_historico)
	values (	nextval('nota_fiscal_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		'33',
		WHEB_MENSAGEM_PCK.get_texto(306762,'CD_SERIE_NF_W=' || cd_serie_nf_w || ';' || 'CD_SERIE_NF_P=' || cd_serie_nf_p));
	exception
	when others then
		/*'Erro ao alterar a s?rie da nota fiscal. ' ||
		'Verifique se j? existe uma nota fiscal com esse N?MERO, para a mesma S?RIE, para o mesmo ESTABELECIMENTO, ' ||
		'para o mesmo CNPJ e com o mesmo NR_SEQUENCIA_NF (N?mero que existe ao lado do campo S?rie).');*/
		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(201604);
	end;
end if;

if (coalesce(cd_natureza_p, 0) <> 0) and (cd_natureza_p <> cd_natureza_w) then
	
	update	nota_fiscal
	set	cd_natureza_operacao	= cd_natureza_p
	where	nr_sequencia		= nr_sequencia_p;

	insert into nota_fiscal_hist(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota,
		cd_evento,
		ds_historico)
	values (	nextval('nota_fiscal_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		'34',
		WHEB_MENSAGEM_PCK.get_texto(306778,'CD_NATUREZA_W=' || cd_natureza_w || ';' || 'CD_NATUREZA_P=' || cd_natureza_p));
end if;

if (coalesce(cd_operacao_nf_p, 0) > 0) and (cd_operacao_nf_p <> cd_operacao_nf_w) then
	update	nota_fiscal
	set	cd_operacao_nf	= cd_operacao_nf_p
	where	nr_sequencia		= nr_sequencia_p;
	
	insert into nota_fiscal_hist(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota,
		cd_evento,
		ds_historico)
	values (	nextval('nota_fiscal_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		'50',
		WHEB_MENSAGEM_PCK.get_texto(1126166,'CD_OPERACAO_NF_W=' || cd_operacao_nf_w || ';' || 'CD_OPERACAO_NF_P=' || cd_operacao_nf_p));
end if;

if (nr_nota_fiscal_w <> nr_nota_fiscal_p) then
	
	nr_sequencia_nf_ww		:= 1;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_w
	from	nota_fiscal
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_cgc_emitente		= cd_cgc_emitente_w
	and	cd_serie_nf		= cd_serie_nf_w
	and	nr_nota_fiscal		= nr_nota_fiscal_p
	and	nr_sequencia_nf		= nr_sequencia_nf_ww
	and	ie_situacao		<> '1';

	if (nr_sequencia_w > 0) then
		select	coalesce(max(nr_sequencia_nf),0) +1
		into STRICT	nr_sequencia_nf_ww
		from	nota_fiscal
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_cgc_emitente		= cd_cgc_emitente_w
		and	cd_serie_nf		= cd_serie_nf_w
		and	nr_nota_fiscal		= nr_nota_fiscal_p;
	end if;
	
	begin
	
	update	nota_fiscal
	set	nr_nota_fiscal		= nr_nota_fiscal_p,
		nr_sequencia_nf		= nr_sequencia_nf_ww
	where	nr_sequencia		= nr_sequencia_p;

	update	nota_fiscal_item
	set	nr_nota_fiscal		= nr_nota_fiscal_p
	where	nr_sequencia		= nr_sequencia_p;
	
	update	divergencia_ordem_compra_item
	set	nr_nota_fiscal		= nr_nota_fiscal_p
	where	nr_seq_nf			= nr_sequencia_p;
	
	update	inspecao_recebimento
	set	nr_nota_fiscal		= nr_nota_fiscal_p
	where	nr_seq_nota_fiscal		= nr_sequencia_p;
	
	update	pat_bem
	set	nr_nota_fiscal		= nr_nota_fiscal_p
	where	nr_seq_nota_fiscal		= nr_sequencia_p;	
	
	update	titulo_receber
	set	nr_nota_fiscal		= nr_nota_fiscal_p
	where	nr_seq_nf_saida		= nr_sequencia_p;
	
	update	material_lote_fornec
	set	nr_nota_fiscal		= nr_nota_fiscal_p
	where	nr_sequencia_nf		= nr_sequencia_p;
	
	update	nota_fiscal_item_trib
	set	nr_nota_fiscal		= nr_nota_fiscal_p
	where	nr_sequencia		= nr_sequencia_p;

	update	nota_fiscal_venc
	set	nr_nota_fiscal		= nr_nota_fiscal_p
	where	nr_sequencia		= nr_sequencia_p;
	
	update	ordem_compra_nota_fiscal
	set	nr_nota_fiscal		= nr_nota_fiscal_p
	where	nr_sequencia		= nr_sequencia_p;

	update	titulo_pagar
	set	nr_documento		= nr_nota_fiscal_p
	where	nr_seq_nota_fiscal		= nr_sequencia_p;

	update	movimento_estoque
	set	nr_documento		= nr_nota_fiscal_p
	where	ie_origem_documento	= '1'
	and	nr_seq_tab_orig		= nr_sequencia_p;

	insert into nota_fiscal_hist(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota,
		cd_evento,
		ds_historico)
	values (	nextval('nota_fiscal_hist_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		'25',
		WHEB_MENSAGEM_PCK.get_texto(306779,'NR_NOTA_FISCAL_W=' || nr_nota_fiscal_w || ';' || 'NR_NOTA_FISCAL_P=' || nr_nota_fiscal_p));
		
	exception
	when others then
		/*'Erro ao alterar o n?mero da nota fiscal. ' ||
		'Verifique se j? existe uma nota fiscal com esse N?MERO, para a mesma S?RIE, para o mesmo ESTABELECIMENTO, ' ||
		'para o mesmo CNPJ e com o mesmo NR_SEQUENCIA_NF (N?mero que existe ao lado do campo S?rie).');*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(201603);
	end;	
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_altera_observacao_nf ( ie_origem_p text, nr_sequencia_p bigint, nr_nota_fiscal_p text, dt_entrada_saida_p timestamp, dt_emissao_p timestamp, dt_vencimento_p timestamp, ds_observacao_p text, cd_serie_nf_p text, cd_natureza_p text, nm_usuario_p text, nr_nfe_imp_p text, cd_operacao_nf_p bigint default 0, ie_entregue_bloqueto_p text DEFAULT NULL) FROM PUBLIC;

