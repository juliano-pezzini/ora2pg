-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cirurgia_agenda (cd_estabelecimento_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint) AS $body$
DECLARE



cd_convenio_w			bigint;
cd_medico_w			varchar(10);
cd_medico_req_w			varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_tipo_anestesia_w		cirurgia.cd_tipo_anestesia%type;
cd_anestesista_w		varchar(10);
cd_pessoa_fisica_w		varchar(10);
ie_carater_cirurgia_w		varchar(10);
hr_inicio_w			timestamp;
nr_min_duracao_w		bigint;
nr_cirurgia_w			bigint;
nr_cirurgia_ww			bigint;
nr_prescricao_w			bigint;
nr_prescricao_ww		bigint:=0;
cd_setor_usuario_w		bigint;
cd_setor_w			bigint;
nr_seq_proc_interno_w		bigint;
ie_lado_w			varchar(1);
ie_porte_w			varchar(15);
ie_gera_atendimento_w		varchar(1);
nr_atendimento_w		bigint;
cd_tipo_cirurgia_w		bigint;
nr_cirurgia_agenda_w		bigint;
ie_Gera_setor_w			varchar(1);

nr_seq_evento_w			varchar(10);
nr_seq_evento_ww		bigint;
ie_Gera_Setor_exclusivo_w	varchar(1):='N';
cd_categoria_w			varchar(10);
ie_gera_equip_cirurgia_w	varchar(1);
ie_estado_fisico_asa_w		varchar(3);
dt_bloqueio_faturamento_w	timestamp;
nm_usuario_bloqueio_fat_w	varchar(15);
ie_gerar_prescr_prot_w		varchar(1);
nr_seq_protocolo_w		bigint;
cd_protocolo_w			bigint;
cd_prescritor_w			varchar(10);
nr_horas_validade_w		integer;
nr_seq_protocolo_sae_w		bigint;
nr_seq_subtipo_w		bigint;
ie_finalidade_w			varchar(15);
ds_erro_w			varchar(255):= null;
ds_origem_w			varchar(2000);
ds_log_w			varchar(2000);
ie_gerar_proc_adic_previstos_w  varchar(1):='N';
cd_perfil_w			integer;
ie_gerar_equip_agenda_w		varchar(1);
ds_sep_bv_w					varchar(100);
ds_param_integ_hl7_w		varchar(4000);
cd_setor_atendimento_w		integer;
nr_setor_departamento_w		bigint;
qt_existe_regra_setor_w		bigint;
ie_pyxis_cirurgia_w		parametros_farmacia.ie_pyxis_cirurgia%type;
cd_setor_cirurgia_w		setor_atendimento.cd_setor_atendimento%type;
ie_gerar_evolucao_cirurgia_w     varchar(1);
cd_evolucao_w                   bigint;

expressao1_w	varchar(255) := obter_desc_expressao_idioma(289370, null, wheb_usuario_pck.get_nr_seq_idioma);--Erro
expressao2_w	varchar(255) := obter_desc_expressao_idioma(314533, null, wheb_usuario_pck.get_nr_seq_idioma);--usuario
expressao3_w	varchar(255) := obter_desc_expressao_idioma(717491, null, wheb_usuario_pck.get_nr_seq_idioma);--perfil
expressao4_w	varchar(255) := obter_desc_expressao_idioma(298822, null, wheb_usuario_pck.get_nr_seq_idioma);--Stack
BEGIN

ds_sep_bv_w := obter_separador_bv;

cd_perfil_w	:= obter_perfil_ativo;

ie_gera_atendimento_w := Obter_Param_Usuario(871, 84, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_gera_atendimento_w);
ie_Gera_setor_w := Obter_Param_Usuario(900, 108, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_Gera_setor_w);
nr_seq_evento_w := obter_param_usuario(872, 178, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_evento_w);
ie_Gera_Setor_exclusivo_w := obter_param_usuario(871, 264, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_Gera_Setor_exclusivo_w);
ie_gera_equip_cirurgia_w := obter_param_usuario(871, 363, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_gera_equip_cirurgia_w);
ie_estado_fisico_asa_w := obter_param_usuario(871, 475, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_estado_fisico_asa_w);
ie_gerar_equip_agenda_w := obter_param_usuario(871, 786, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_gerar_equip_agenda_w);
ie_gerar_evolucao_cirurgia_w := obter_param_usuario(281, 1627, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_gerar_evolucao_cirurgia_w);

cd_setor_w := cd_setor_atendimento_p;

if (ie_Gera_Setor_exclusivo_w = 'S') then
	select 	coalesce(max(b.cd_setor_exclusivo),cd_setor_atendimento_p)
	into STRICT	cd_setor_w
	from 	agenda_paciente a,
		agenda b
	where	a.cd_agenda 	= b.cd_agenda
	and	a.nr_sequencia 	= nr_seq_agenda_p;
end if;

select	coalesce(max(coalesce(cd_setor_w,cd_setor_atendimento)), 0)
into STRICT	cd_setor_usuario_W
from	usuario
where	nm_usuario	= nm_usuario_p;

select max(cd_setor_atendimento)
into STRICT nr_setor_departamento_w
from setor_atendimento
where cd_setor_atendimento = cd_setor_usuario_W;

if (cd_setor_usuario_W = 0) or (coalesce(nr_setor_departamento_w::text, '') = '') then
    --Nao foi encontrado o setor do usuario
    CALL Wheb_mensagem_pck.exibir_mensagem_abort(195457);
end if;

select	cd_convenio,
	cd_categoria,
	cd_medico,
	cd_medico_req,
	cd_procedimento,
	ie_origem_proced,
	cd_tipo_anestesia,
	cd_anestesista,
	cd_pessoa_fisica,
	coalesce(ie_carater_cirurgia,'E'),
	hr_inicio,
	nr_minuto_duracao,
	nr_seq_proc_interno,
	ie_lado,
	nr_atendimento,
	CASE WHEN campo_numerico(obter_dados_proc_interno(nr_seq_proc_interno,'TC'))=0 THEN  null  ELSE campo_numerico(obter_dados_proc_interno(nr_seq_proc_interno,'TC')) END ,
	nr_cirurgia,
	dt_bloqueio_faturamento,
	nm_usuario_bloqueio_fat
into STRICT	cd_convenio_w,
	cd_categoria_w,
	cd_medico_w,
	cd_medico_req_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	cd_tipo_anestesia_w,
	cd_anestesista_w,
	cd_pessoa_fisica_w,
	ie_carater_cirurgia_w,
	hr_inicio_w,
	nr_min_duracao_w,
	nr_seq_proc_interno_w,
	ie_lado_w,
	nr_atendimento_w,
	cd_tipo_cirurgia_w,
	nr_cirurgia_agenda_w,
	dt_bloqueio_faturamento_w,
	nm_usuario_bloqueio_fat_w
from	agenda_paciente
where 	nr_sequencia		= nr_seq_agenda_p;

select	obter_porte_procedimento(cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w)
into STRICT	ie_porte_w
;

select	max(nr_cirurgia)
into STRICT	nr_cirurgia_ww
from	cirurgia
where	nr_seq_agenda = nr_seq_agenda_p
and	cd_pessoa_fisica = cd_pessoa_fisica_w;

if (coalesce(nr_cirurgia_agenda_w::text, '') = '') and (nr_cirurgia_ww IS NOT NULL AND nr_cirurgia_ww::text <> '') then
	update	agenda_paciente
	set	nr_cirurgia	=	nr_cirurgia_ww
	where	nr_sequencia	=	nr_seq_agenda_p;

	nr_cirurgia_agenda_w	:=	nr_cirurgia_ww;
end if;

select  max(ie_finalidade)
into STRICT 	ie_finalidade_w
from 	proc_interno
where 	nr_sequencia = nr_seq_proc_interno_w
and	ie_finalidade in ('D','T');


if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (coalesce(nr_cirurgia_agenda_w::text, '') = '') then
	begin

	if (ie_Gera_setor_w = 'S') then
		cd_setor_usuario_W	:= null;
	end if;

	select	nextval('cirurgia_seq')
	into STRICT	nr_cirurgia_w
	;

	insert	into cirurgia(nr_cirurgia,
		cd_pessoa_fisica,
		cd_medico_cirurgiao,
		cd_procedimento_princ,
		cd_tipo_anestesia,
		nm_usuario,
		dt_atualizacao,
		dt_inicio_prevista,
		dt_inicio_real,
		nr_min_duracao_prev,
		nr_min_duracao_real,
		dt_termino,
		nr_prescricao,
		nr_atendimento,
		dt_entrada_unidade,
		cd_medico_anestesista,
		cd_convenio,
		ds_observacao,
		ie_origem_proced,
		ie_status_cirurgia,
		ie_motivo_cancelamento,
		ie_carater_cirurgia,
		cd_tipo_cirurgia,
		ie_anat_patol,
		ie_trauma,
		ie_ortese_protese,
		ie_antibiotico,
		ie_sangue,
		ie_video,
		ie_reoperacao,
		ds_antibiotico,
		dt_termino_prevista,
		dt_entrada_recup,
		dt_saida_recup_prev,
		dt_saida_recup,
		nr_seq_status,
		ds_andamento,
		dt_chamada,
		dt_preparacao,
		dt_chegada_sala,
		dt_chegada_anestesista,
		dt_inicio_anestesia,
		dt_chegada_cirurgiao,
		dt_inicio_cirurgia,
		dt_fim_cirurgia,
		dt_fim_extubacao,
		dt_liberacao_sala,
		ie_asa_estado_paciente,
		cd_medico_req,
		ie_leito_uti,
		ie_peca_anat_patol,
		cd_setor_atendimento,
		cd_estabelecimento,
		nr_seq_proc_interno,
		ie_lado,
		ie_porte,
		nr_seq_agenda,
		cd_categoria,
		nm_usuario_bloqueio_fat,
		dt_bloqueio_faturamento,
		ie_finalidade)
	values (nr_cirurgia_w,
		cd_pessoa_fisica_w,
		cd_medico_w,
		cd_procedimento_w,
		cd_tipo_anestesia_w,
		nm_usuario_p,
		clock_timestamp(),
		hr_inicio_w,
		null,
		nr_min_duracao_w,
		null,
		null,
		null,
		CASE WHEN ie_gera_atendimento_w='S' THEN nr_atendimento_w  ELSE null END ,
		null,
		cd_anestesista_w,
		cd_convenio_w,
		null,
		ie_origem_proced_w,
		1,
		null,
		ie_carater_cirurgia_w,
		cd_tipo_cirurgia_w,
		'N',
		'N',
		'N',
		'N',
		'N',
		'N',
		'N',
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		ie_estado_fisico_asa_w,
		cd_medico_req_w,
		'N',
		'N',
		cd_setor_usuario_W,
		cd_estabelecimento_p,
		nr_seq_proc_interno_w,
		ie_lado_w,
		ie_porte_w,
		nr_seq_agenda_p,
		cd_categoria_w,
		nm_usuario_bloqueio_fat_w,
		dt_bloqueio_faturamento_w,
		ie_finalidade_w);


	nr_prescricao_w := Gerar_prescr_cirurgia(cd_estabelecimento_p, nr_cirurgia_w, nr_seq_agenda_p, nm_usuario_p, nr_prescricao_w);

	begin

		update	cirurgia
		set	nr_prescricao		= nr_prescricao_w
		where	nr_cirurgia		= nr_cirurgia_w;

		commit;


	exception
	when others then
	ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);

	ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
	ds_log_w := (clock_timestamp()||' '||
		     substr(';'||expressao1_w||'='|| ds_erro_w ||
			    ';funcao_ativa='	||to_char(wheb_usuario_pck.get_cd_funcao) ||
			    '; '||expressao2_w||'='	    ||to_char(wheb_usuario_pck.get_nm_usuario)||
			    '; '||expressao3_w||'='	    ||to_char(wheb_usuario_pck.get_cd_perfil) ||
			    '; '||expressao4_w||'='	    || ds_origem_w ,1,1800));

	CALL gerar_cirurgia_hist(nr_cirurgia_w,'GP',wheb_usuario_pck.get_nm_usuario,ds_log_w || ' - '||nr_prescricao_w,'S');
	end;

	update	agenda_paciente
	set	nr_cirurgia		= nr_cirurgia_w
	where	nr_sequencia		= nr_seq_agenda_p;

	commit;

	update	prescr_medica
	set	nr_cirurgia		= nr_cirurgia_w,
		cd_pessoa_fisica	= cd_pessoa_fisica_w,
		nr_atendimento		= nr_atendimento_w
	where	nr_seq_agenda		= nr_seq_agenda_p
	and	ie_tipo_prescr_cirur	= 1;

	commit;
	
    if ( ie_gerar_evolucao_cirurgia_w = 'S' and (nr_cirurgia_w IS NOT NULL AND nr_cirurgia_w::text <> '')) then

        cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_w, nr_cirurgia_w, 'SURGERY', NULL, 'P', 1, cd_evolucao_w, null, cd_pessoa_fisica_w);

        update cirurgia
        set cd_evolucao = cd_evolucao_w
        where nr_cirurgia = nr_cirurgia_w;

    end if;
	
	if (ie_gera_equip_cirurgia_w = 'S') and (coalesce(nr_prescricao_w,0) > 0) then
		CALL gerar_equip_agenda_cirurgia(nr_prescricao_w,nr_seq_agenda_p,nm_usuario_p,cd_estabelecimento_p);
	end if;

	if (nr_seq_evento_w IS NOT NULL AND nr_seq_evento_w::text <> '') then
		nr_seq_evento_ww := gerar_evento_cirurgia(Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'), hr_inicio_w, nr_cirurgia_w, campo_numerico(nr_seq_evento_w), null, null, nm_usuario_p, nr_seq_evento_ww, null);
	end if;

	SELECT * FROM obter_regra_presc_prot_cir(	nr_seq_proc_interno_w, cd_protocolo_w, nr_seq_protocolo_w, cd_prescritor_w, nr_horas_validade_w, nr_seq_protocolo_sae_w, nr_seq_subtipo_w) INTO STRICT cd_protocolo_w, nr_seq_protocolo_w, cd_prescritor_w, nr_horas_validade_w, nr_seq_protocolo_sae_w, nr_seq_subtipo_w;

	if (coalesce(cd_protocolo_w,0) > 0) and (coalesce(nr_seq_protocolo_w,0) > 0) then
		nr_prescricao_ww := gerar_prescricao_protocolo(	cd_pessoa_fisica_w, cd_medico_w, nr_atendimento_w, cd_protocolo_w, nr_seq_protocolo_w, 0, obter_sinal_vital(cd_pessoa_fisica_w,'Peso'), coalesce(nr_horas_validade_w,0), nr_prescricao_ww, null, null, null, hr_inicio_w, '', 1, 'N', obter_usuario_pf(cd_prescritor_w), '', null, 'S', null);

		if (coalesce(nr_prescricao_ww,0) > 0) then
			CALL define_local_disp_prescr(nr_prescricao_ww, 0, cd_perfil_w, nm_usuario_p);
		end if;
	end if;

	if (coalesce(nr_seq_protocolo_sae_w,0) > 0) then
		CALL gerar_protocolo_sae_cirurgia(	nr_seq_protocolo_sae_w,
						nr_seq_subtipo_w,
						cd_pessoa_fisica_w,
						nr_atendimento_w,
						nr_cirurgia_w,
						cd_prescritor_w,
						coalesce(nr_horas_validade_w,0),
						nm_usuario_p,
						cd_estabelecimento_p);
	end if;
	
	
	select	max(cd_setor_atendimento)
	into STRICT	cd_setor_cirurgia_w
	from	cirurgia
	where	nr_cirurgia = nr_cirurgia_w;

	begin
	select	1
	into STRICT	qt_existe_regra_setor_w
	from	dis_regra_setor
	where	cd_setor_atendimento = cd_setor_cirurgia_w  LIMIT 1;
	exception
	when others then
		qt_existe_regra_setor_w := 0;
	end;

	if (qt_existe_regra_setor_w > 0) then
		CALL intdisp_gerar_movimento(nr_atendimento_w, 'EPA', null, nr_cirurgia_w);
	end if;	
	end;
end if;

commit;

if (coalesce(nr_prescricao_w,0) > 0) then
	CALL define_local_disp_prescr(nr_prescricao_ww, 0, cd_perfil_w, nm_usuario_p);

	if (coalesce(cd_setor_atendimento_p,0) > 0) and (coalesce(nr_seq_agenda_p,0) > 0) then

		ie_gerar_proc_adic_previstos_w := obter_param_usuario(871, 773, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_gerar_proc_adic_previstos_w);

		if (ie_gerar_proc_adic_previstos_w = 'S') or (pkg_i18n.get_user_locale() = 'en_AU') then
			CALL gerar_proc_agenda_prescricao(nr_seq_agenda_p, nr_prescricao_w, cd_setor_w, nm_usuario_p);
		end if;
	end if;
end if;

if (ie_gerar_equip_agenda_w = 'S') then
	CALL gerar_equip_agenda_cirurgica(nr_cirurgia_w,cd_estabelecimento_p,nm_usuario_p);
end if;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (nr_cirurgia_w IS NOT NULL AND nr_cirurgia_w::text <> '') then

	select	max(cd_setor_atendimento)
	into STRICT	cd_setor_atendimento_w
	from	cirurgia
	where	nr_cirurgia = nr_cirurgia_w;

	ds_param_integ_hl7_w := 'cd_pessoa_fisica=' || cd_pessoa_fisica_w || ds_sep_bv_w ||
							'nr_sequencia=' || nr_seq_agenda_p || ds_sep_bv_w;
	CALL gravar_agend_integracao(462, ds_param_integ_hl7_w, cd_setor_atendimento_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cirurgia_agenda (cd_estabelecimento_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint) FROM PUBLIC;

