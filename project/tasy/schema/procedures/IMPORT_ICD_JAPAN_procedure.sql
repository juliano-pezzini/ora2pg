-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE import_icd_japan ( return_value INOUT text ) AS $body$
DECLARE


    is_modifier         bigint;
    is_index            bigint;
    is_code             bigint;
    icd_present         bigint;
    ds_default_desc_w   cid_especialidade.ds_especialidade_cid%TYPE := 'Other ICD Codes';
    cd_default_cid_w    cid_especialidade.cd_especialidade_cid%TYPE := '999';
    cd_default_cat_w    cid_categoria.cd_categoria_cid%TYPE := 'ZZZ999.999';
    chapter_exist       bigint;
    category_exist      bigint;
	nm_usuario_w 		icd_codes_main_jpn.NM_USUARIO%TYPE;
    c1 CURSOR FOR
    SELECT
        nr_chng_segm,
        nr_disease_number,
        ds_disease_name,
        ds_name_of_cana_disease,
        nr_adopted_category,
        nr_code_exchange,
        cd_icd_code,
        cd_multiclassif_code,
        ds_preliminary1,
        ds_preliminary2,
        nr_receipt_computer_code,
        nr_area_of_use,
        nr_change_history,
        dt_update,
        nr_dstn_disease_number,
        ie_prohibited_category,
        ie_out_of_insurance,
        ds_preliminary3,
        ds_preliminary4,
        ds_omited_disease_name
    FROM
        icd_main_jpn
    WHERE
        (cd_icd_code IS NOT NULL AND cd_icd_code::text <> '');

    c2 CURSOR FOR
    SELECT
        nr_chng_segm,
        nr_modifier_mgmt_num,
        ds_modifier_notation,
        ds_kana_notation,
        ds_exchange_code,
        nr_location_segment,
        cd_modifier,
        nr_group_codes,
        nr_receipt_computer_codes,
        ds_modifier
    FROM
        icd_modifier_jpn
    WHERE
        (nr_modifier_mgmt_num IS NOT NULL AND nr_modifier_mgmt_num::text <> '');

    c3 CURSOR FOR
    SELECT
        cd_index_term,
        cd_term_codes,
        nr_disease_modifier,
        nr_kana_kanji,
        nr_synonyms,
        nr_typography,
        nr_adopted_category,
        nr_lang_classif,
        nr_omitted_indicator
    FROM
        icd_index_jpn
    WHERE
        (cd_index_term IS NOT NULL AND cd_index_term::text <> '')
        AND (cd_term_codes IS NOT NULL AND cd_term_codes::text <> '');

    c4 CURSOR FOR
    SELECT
        cd_icd_code,
        ds_disease_name
    FROM
        icd_main_jpn
    WHERE
        (cd_icd_code IS NOT NULL AND cd_icd_code::text <> '');

    r1                  c1%rowtype;
    r2                  c2%rowtype;
    r3                  c3%rowtype;
    r4                  c4%rowtype;

BEGIN
	
	nm_usuario_w := coalesce(WHEB_USUARIO_PCK.get_nm_usuario(), 'TasyLoad');
	
    IF NOT c1%isopen THEN
        OPEN c1;
        LOOP
            FETCH c1 INTO r1;
            EXIT WHEN NOT FOUND; /* apply on c1 */
            BEGIN
                SELECT
                    COUNT(*)
                INTO STRICT is_code
                FROM
                    icd_codes_main_jpn
                WHERE
                    nr_disease_number = r1.nr_disease_number;

                IF ( is_code = 0 OR coalesce(is_code::text, '') = '' ) THEN
                    BEGIN
                        INSERT INTO icd_codes_main_jpn(
                            dt_atualizacao,
                            nm_usuario,
                            dt_atualizacao_nrec,
                            nm_usuario_nrec,
                            nr_chng_segm,
                            nr_disease_number,
                            ds_disease_name,
                            ds_name_of_cana_disease,
                            nr_adopted_category,
                            nr_code_exchange,
                            cd_icd_code,
                            cd_multiclassif_code,
                            ds_preliminary1,
                            ds_preliminary2,
                            nr_receipt_computer_code,
                            nr_area_of_use,
                            nr_change_history,
                            dt_update,
                            nr_dstn_disease_number,
                            ie_prohibited_category,
                            ie_out_of_insurance,
                            ds_preliminary3,
                            ds_preliminary4,
							IE_SITUACAO,
                            ds_omited_disease_name
                        ) VALUES (
                            clock_timestamp(),
                            nm_usuario_w,
                            clock_timestamp(),
                            nm_usuario_w,
                            r1.nr_chng_segm,
                            r1.nr_disease_number,
                            r1.ds_disease_name,
                            r1.ds_name_of_cana_disease,
                            r1.nr_adopted_category,
                            r1.nr_code_exchange,
                            r1.cd_icd_code,
                            r1.cd_multiclassif_code,
                            r1.ds_preliminary1,
                            r1.ds_preliminary2,
                            r1.nr_receipt_computer_code,
                            r1.nr_area_of_use,
                            r1.nr_change_history,
                            to_date(r1.dt_update, 'YYYYMMDD'),
                            r1.nr_dstn_disease_number,
                            r1.ie_prohibited_category,
                            r1.ie_out_of_insurance,
                            r1.ds_preliminary3,
                            r1.ds_preliminary4,
							CASE WHEN r1.nr_chng_segm=1 THEN 'I'  ELSE 'A' END ,
                            r1.ds_omited_disease_name
                        );

                    END;

                ELSE
                    BEGIN
                        UPDATE icd_codes_main_jpn
                        SET
                            dt_atualizacao_nrec = clock_timestamp(),
                            nm_usuario_nrec = nm_usuario_w,
                            nr_chng_segm = r1.nr_chng_segm,
                            ds_disease_name = r1.ds_disease_name,
                            ds_name_of_cana_disease = r1.ds_name_of_cana_disease,
                            nr_adopted_category = r1.nr_adopted_category,
                            nr_code_exchange = r1.nr_code_exchange,
                            cd_icd_code = r1.cd_icd_code,
                            cd_multiclassif_code = r1.cd_multiclassif_code,
                            ds_preliminary1 = r1.ds_preliminary1,
                            ds_preliminary2 = r1.ds_preliminary2,
                            nr_receipt_computer_code = r1.nr_receipt_computer_code,
                            nr_area_of_use = r1.nr_area_of_use,
                            nr_change_history = r1.nr_change_history,
                            dt_update = to_date(r1.dt_update, 'YYYYMMDD'),
                            nr_dstn_disease_number = r1.nr_dstn_disease_number,
                            ie_prohibited_category = r1.ie_prohibited_category,
                            ie_out_of_insurance = r1.ie_out_of_insurance,
                            ds_preliminary3 = r1.ds_preliminary3,
                            ds_preliminary4 = r1.ds_preliminary4,
							IE_SITUACAO = CASE WHEN r1.nr_chng_segm=1 THEN 'I'  ELSE 'A' END ,
                            ds_omited_disease_name = r1.ds_omited_disease_name
                        WHERE
                            nr_disease_number = r1.nr_disease_number;

                    END;
                END IF;

            END;

        END LOOP;

        CLOSE c1;
    END IF;

    IF NOT c2%isopen THEN
        OPEN c2;
        LOOP
            FETCH c2 INTO r2;
            EXIT WHEN NOT FOUND; /* apply on c2 */
            BEGIN
                SELECT
                    COUNT(*)
                INTO STRICT is_modifier
                FROM
                    icd_code_modifier_jpn
                WHERE
                    nr_modifier_mgmt_num = r2.nr_modifier_mgmt_num;

                IF ( is_modifier = 0 OR coalesce(is_modifier::text, '') = '' ) THEN
                    BEGIN
                        INSERT INTO icd_code_modifier_jpn(
                            nr_chng_segm,
                            ds_kana_notation,
                            ds_exchange_code,
                            cd_modifier,
                            ds_modifier,
                            dt_atualizacao,
                            nm_usuario,
                            dt_atualizacao_nrec,
                            nm_usuario_nrec,
                            nr_modifier_mgmt_num,
                            ds_modifier_notation,
                            nr_location_segment,
                            nr_group_codes,
                            IE_SITUACAO,
                            nr_receipt_computer_codes
                        ) VALUES (
                            r2.nr_chng_segm,
                            r2.ds_kana_notation,
                            r2.ds_exchange_code,
                            r2.cd_modifier,
                            r2.ds_modifier,
                            clock_timestamp(),
                            nm_usuario_w,
                            clock_timestamp(),
                            nm_usuario_w,
                            r2.nr_modifier_mgmt_num,
                            r2.ds_modifier_notation,
                            r2.nr_location_segment,
                            r2.nr_group_codes,
                            CASE WHEN r2.nr_chng_segm=1 THEN 'I'  ELSE 'A' END ,
                            r2.nr_receipt_computer_codes
                        );

                    END;

                ELSE
                    BEGIN
                        UPDATE icd_code_modifier_jpn
                        SET
                            nr_chng_segm = r2.nr_chng_segm,
                            ds_kana_notation = r2.ds_kana_notation,
                            ds_exchange_code = r2.ds_exchange_code,
                            cd_modifier = r2.cd_modifier,
                            ds_modifier = r2.ds_modifier,
                            dt_atualizacao = clock_timestamp(),
                            nm_usuario = nm_usuario_w,
                            dt_atualizacao_nrec = clock_timestamp(),
                            nm_usuario_nrec = nm_usuario_w,
                            ds_modifier_notation = r2.ds_modifier_notation,
                            nr_location_segment = r2.nr_location_segment,
                            nr_group_codes = r2.nr_group_codes,
							IE_SITUACAO = CASE WHEN r2.nr_chng_segm=1 THEN 'I'  ELSE 'A' END ,
                            nr_receipt_computer_codes = r2.nr_receipt_computer_codes
                        WHERE
                            nr_modifier_mgmt_num = r2.nr_modifier_mgmt_num;

                    END;
                END IF;

            END;

        END LOOP;

        CLOSE c2;
    END IF;

    IF NOT c3%isopen THEN
        OPEN c3;
        LOOP
            FETCH c3 INTO r3;
            EXIT WHEN NOT FOUND; /* apply on c3 */
            BEGIN
                SELECT
                    COUNT(*)
                INTO STRICT is_index
                FROM
                    icd_code_index_jpn
                WHERE
                    cd_index_term = r3.cd_index_term
                    AND cd_term_codes = r3.cd_term_codes;

                IF ( is_index = 0 OR coalesce(is_index::text, '') = '' ) THEN
                    BEGIN
                        INSERT INTO icd_code_index_jpn(
                            cd_index_term,
                            cd_term_codes,
                            nr_disease_modifier,
                            nr_kana_kanji,
                            nr_synonyms,
                            nr_typography,
                            nr_adopted_category,
                            nr_lang_classif,
                            nr_omitted_indicator,
                            dt_atualizacao,
                            nm_usuario,
                            dt_atualizacao_nrec,
							IE_SITUACAO,
                            nm_usuario_nrec
                        ) VALUES (
                            r3.cd_index_term,
                            r3.cd_term_codes,
                            r3.nr_disease_modifier,
                            r3.nr_kana_kanji,
                            r3.nr_synonyms,
                            r3.nr_typography,
                            r3.nr_adopted_category,
                            r3.nr_lang_classif,
                            r3.nr_omitted_indicator,
                            clock_timestamp(),
                            nm_usuario_w,
                            clock_timestamp(),
							'A',
                            nm_usuario_w
                        );

                    END;

                ELSE
                    BEGIN
                        UPDATE icd_code_index_jpn
                        SET
                            nr_disease_modifier = r3.nr_disease_modifier,
                            nr_kana_kanji = r3.nr_kana_kanji,
                            nr_synonyms = r3.nr_synonyms,
                            nr_typography = r3.nr_typography,
                            nr_adopted_category = r3.nr_adopted_category,
                            nr_lang_classif = r3.nr_lang_classif,
                            nr_omitted_indicator = r3.nr_omitted_indicator,
                            dt_atualizacao = clock_timestamp(),
                            nm_usuario = nm_usuario_w,
                            dt_atualizacao_nrec = clock_timestamp(),
							IE_SITUACAO = 'A',
                            nm_usuario_nrec = nm_usuario_w
                        WHERE
                            cd_index_term = r3.cd_index_term
                            AND cd_term_codes = r3.cd_term_codes;

                    END;
                END IF;

            END;

        END LOOP;

        CLOSE c3;
    END IF;


						-- CHECK AND INSERT A DEFAULT CHAPTER if it does not exist
    BEGIN
        SELECT
            COUNT(*)
        INTO STRICT chapter_exist
        FROM
            cid_especialidade
        WHERE
            cd_especialidade_cid = cd_default_cid_w;

        IF ( chapter_exist = 0 OR coalesce(chapter_exist::text, '') = '' ) THEN
            BEGIN
                INSERT INTO cid_especialidade(
                    cd_especialidade_cid,
                    ds_especialidade_cid,
                    dt_atualizacao,
                    nm_usuario,
                    cd_categ_inicial,
                    cd_categ_final,
                    ds_especialidade_compl,
                    ie_situacao
                ) VALUES (
                    cd_default_cid_w,    -- CD_ESPECIALIDADE_CID
                    ds_default_desc_w,    -- DS_ESPECIALIDADE_CID
                    clock_timestamp(),         -- DT_ATUALIZACAO
                    coalesce(wheb_usuario_pck.get_nm_usuario(), 'tasy'),      -- NM_USUARIO
                    NULL,            -- CD_CATEG_INICIAL
                    NULL,            -- CD_CATEG_FINAL
                    NULL,            -- DS_ESPECIALIDADE_COMPL
                    'A'              -- IE_SITUACAO
                );

            END;

        END IF;

	-- CHECK AND INSERT A DEFAULT CATEGORY if it does not exist
        SELECT
            COUNT(*)
        INTO STRICT category_exist
        FROM
            cid_categoria
        WHERE
            cd_categoria_cid = cd_default_cat_w;

        IF ( category_exist = 0 OR coalesce(category_exist::text, '') = '' ) THEN
            BEGIN
                INSERT INTO cid_categoria(
                    cd_categoria_cid,
                    ds_categoria_cid,
                    dt_atualizacao,
                    nm_usuario,
                    cd_especialidade,
                    ds_categoria_compl,
                    ds_referencia,
                    ds_excluidos,
                    ie_situacao
                ) VALUES (
                    cd_default_cat_w,-- CD_CATEGORIA_CID
                    ds_default_desc_w,    -- DS_CATEGORIA_CID
                    clock_timestamp(),      -- DT_ATUALIZACAO
                    coalesce(wheb_usuario_pck.get_nm_usuario(), 'tasy'),   -- NM_USUARIO
                    cd_default_cid_w, -- CD_ESPECIALIDADE
                    NULL,         -- DS_CATEGORIA_COMPL
                    NULL,         -- DS_REFERENCIA
                    NULL,         -- DS_EXCLUIDOS
                    'A'          -- IE_SITUACAO
                );

            END;
        END IF;

    END;

    IF NOT c4%isopen THEN
        OPEN c4;
        LOOP
            FETCH c4 INTO r4;
            EXIT WHEN NOT FOUND; /* apply on c4 */
            BEGIN
                SELECT
                    COUNT(*)
                INTO STRICT icd_present
                FROM
                    cid_doenca
                WHERE
                    cd_doenca_cid = r4.cd_icd_code;

                IF ( icd_present = 0 OR coalesce(icd_present::text, '') = '' ) THEN
                    BEGIN
                        INSERT INTO cid_doenca(
                            cd_doenca_cid,
                            ds_doenca_cid,
                            cd_categoria_cid,
                            dt_atualizacao,
                            nm_usuario,
                            ie_cad_interno,
                            ie_situacao,
                            cd_versao,
                            cd_doenca,
                            ds_descricao_original,
                            dt_atualizacao_nrec,
                            nm_usuario_nrec
                        ) VALUES (
                            r4.cd_icd_code,
                            r4.ds_disease_name,
                            cd_default_cat_w,
                            clock_timestamp(),
                            nm_usuario_w,
                            'N',
                            'A',
                            'ICD-10',
                            r4.cd_icd_code,
                            r4.ds_disease_name,
                            clock_timestamp(),
                            nm_usuario_w
                        );

                    END;
		ELSE
                    BEGIN
                      update cid_doenca
                      set ds_doenca_cid = r4.ds_disease_name,
                          dt_atualizacao = clock_timestamp(),
                          nm_usuario = nm_usuario_w,
                          ie_situacao = 'A',
                          ds_descricao_original = r4.ds_disease_name
                      where   cd_doenca_cid = r4.cd_icd_code;
                    END;
                END IF;

            END;

        END LOOP;

        CLOSE c4;
    END IF;

    COMMIT;
    return_value := 'S';
    EXECUTE 'truncate table TASY.icd_main_jpn';
    EXECUTE 'truncate table TASY.icd_modifier_jpn';
    EXECUTE 'truncate table TASY.icd_index_jpn';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE import_icd_japan ( return_value INOUT text ) FROM PUBLIC;

