-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pep_gerar_liberacao_ciclo ( nr_seq_paciente_p bigint, ie_todos_p text, cd_pessoa_fisica_p text, qt_ciclos_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_sequencia_w		bigint;
nr_ciclo_w		smallint;
nr_ciclo_final_w		smallint;
nr_ciclo_atual_w		smallint;
cd_pessoa_fisica_w	varchar(10);
ie_liberar_w		varchar(1);
nr_atendimento_w		bigint;
ie_tipo_convenio_w		smallint;
cd_material_w		integer;
qt_autorizado_w		bigint;
cd_convenio_w		integer;
ds_material_w		varchar(255);
ds_material_acum_w	varchar(4000);
ie_consiste_mat_aut_w	varchar(1);
qt_dose_w		bigint;
ie_exige_laudo_w	varchar(10);

C01 CURSOR FOR
	SELECT	b.cd_material,
		m.ds_material
	from	material_autorizado b,
		autorizacao_convenio a,
		estagio_autorizacao e,
		material m
	where	a.nr_sequencia		= b.nr_sequencia_autor
	and	e.nr_sequencia		= a.nr_seq_estagio
	and	b.cd_material		= m.cd_material
	and	a.nr_seq_paciente_setor = nr_seq_paciente_p
	and	a.cd_convenio 		= cd_convenio_w
	and	e.ie_interno		<> '10'
	and	((ie_todos_p = 'S') or (ie_todos_p = 'N' AND a.nr_ciclo = nr_ciclo_w));


BEGIN

select  count(*)
into STRICT	qt_dose_w
from    material b,
        paciente_protocolo_medic a
where   a.cd_material           	= b.cd_material
and     a.nr_seq_paciente       	= nr_seq_paciente_p
and     a.qt_dose 		= 0;

if (qt_dose_w > 0) then
	--Protocolo contêm medicamento(s) com dose(s) zerada(s). Não será possível liberar o ciclo. #@#@');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261442);
end if;

select	Obter_Valor_Param_Usuario(281,170, obter_perfil_ativo, nm_usuario_p,0)
into STRICT	ie_consiste_mat_aut_w
;

ie_exige_laudo_w	:= Obter_Valor_Param_Usuario(281,134, obter_perfil_ativo, nm_usuario_p,0);

select	coalesce(max(nr_ciclo),0) + 1
into STRICT	nr_ciclo_w
from	paciente_setor_lib
where	nr_seq_paciente	= nr_seq_paciente_p
and	coalesce(dt_cancelamento::text, '') = '';

select	coalesce(max(nr_ciclos),-1),
	max(cd_pessoa_fisica)
into STRICT	nr_ciclo_final_w,
	cd_pessoa_fisica_w
from	paciente_setor
where	nr_seq_paciente	= nr_seq_paciente_p;

select	max(nr_atendimento)
into STRICT	nr_atendimento_w
from	atendimento_paciente
where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

if (nr_atendimento_w > 0) then
	select	obter_tipo_convenio(obter_convenio_atendimento(nr_atendimento_w)),
		obter_convenio_atendimento(nr_atendimento_w)
	into STRICT	ie_tipo_convenio_w,
		cd_convenio_w
	;
end if;

if (ie_tipo_convenio_w 	= 3) and (ie_exige_laudo_w 	= 'S')then /*SUS*/
	select	substr(Obter_se_laudo_vigente(cd_pessoa_fisica_w,clock_timestamp(),1),1,1)
	into STRICT	ie_liberar_w
	;

	if (ie_liberar_w = 'N') then
		--Não é permitido liberar ciclos sem ter um laudo de quimio digitado.');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(261443);
	end if;
end if;

if (ie_tipo_convenio_w not in (1,3)) and (ie_consiste_mat_aut_w = 'S') then /*SUS e Particular*/
	open	c01;
	loop
	fetch	c01 into
		cd_material_w,
		ds_material_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	count(1)
		into STRICT	qt_autorizado_w
		from	paciente_protocolo_medic a
		where	a.cd_material		= cd_material_w
		and	a.nr_seq_paciente	= nr_seq_paciente_p;

		if (qt_autorizado_w > 0) then
			ds_material_acum_w	:= ds_material_acum_w ||ds_material_w ||chr(13) ||chr(10);
		end if;
		end;
	end loop;
	close c01;

	if (ds_material_acum_w IS NOT NULL AND ds_material_acum_w::text <> '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(277333, 'DS_MATERIAL_ACUM_P=' || ds_material_acum_w ||chr(13) ||chr(10) || obter_desc_expressao(619521) || nr_ciclo_w);
	end if;

	select	nextval('paciente_setor_lib_seq')
	into STRICT	nr_sequencia_w
	;

	insert into paciente_setor_lib(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_paciente,
		nr_ciclo,
		dt_liberacao,
		cd_pessoa_fisica)
	values (	nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_paciente_p,
		nr_ciclo_w,
		clock_timestamp(),
		cd_pessoa_fisica_p);

end if;

nr_ciclo_final_w	:= qt_ciclos_p;

if (nr_ciclo_final_w <> -1) and (nr_ciclo_w > nr_ciclo_final_w) then
	--Atenção! Foram prescritos '||to_char(nr_ciclo_final_w)||' ciclos. Você esta tentando liberar o ciclo '||to_char (nr_ciclo_w));
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261445,	'CICLO='|| to_char(nr_ciclo_final_w) || ';' ||
													'NR_CICLO=' || to_char(nr_ciclo_w));
end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pep_gerar_liberacao_ciclo ( nr_seq_paciente_p bigint, ie_todos_p text, cd_pessoa_fisica_p text, qt_ciclos_p bigint, nm_usuario_p text) FROM PUBLIC;

