-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adicionar_protocolo_cirurgia ( nr_sequencia_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_diagnostico_w			varchar(2000);
ds_resumo_cirurgia_w		varchar(2000);
ds_diagnostico_pos_w		varchar(2000);
ds_exame_rad_w				varchar(2000);
ds_exame_anatomo_w			varchar(2000);
ds_achados_operat_w			varchar(2000);
ds_po_imediato_w			varchar(2000);
cd_doenca_cid_w				varchar(2000);
ds_intercorrencia_w			varchar(2000);


ds_diagnostico_orig_w		varchar(2000);
ds_resumo_cirurgia_orig_w	varchar(2000);
ds_diagnostico_pos_orig_w	varchar(2000);
ds_exame_rad_orig_w			varchar(2000);
ds_exame_anatomo_orig_w		varchar(2000);
ds_achados_operat_orig_w	varchar(2000);
ds_po_imediato_orig_w		varchar(2000);
ds_intercorrencia_orig_w	varchar(2000);


ds_diagnostico_dest_w		varchar(2000);
ds_resumo_cirurgia_dest_w	varchar(2000);
ds_diagnostico_pos_dest_w	varchar(2000);
ds_exame_rad_dest_w			varchar(2000);
ds_exame_anatomo_dest_w		varchar(2000);
ds_achados_operat_dest_w	varchar(2000);
ds_po_imediato_dest_w		varchar(2000);
ds_intercorrencia_dest_w	varchar(2000);



BEGIN

select	ds_diagnostico,
	ds_resumo_cirurgia,
	ds_diagnostico_pos,
	ds_exame_rad,
	ds_exame_anatomo,
	ds_achados_operatorios,
	ds_po_imediato,
	cd_doenca_cid,
	ds_intercorrencia
into STRICT	ds_diagnostico_orig_w,
	ds_resumo_cirurgia_orig_w,
	ds_diagnostico_pos_orig_w,
	ds_exame_rad_orig_w,
	ds_exame_anatomo_orig_w,
	ds_achados_operat_orig_w,
	ds_po_imediato_orig_w,
	cd_doenca_cid_w,
	ds_intercorrencia_orig_w
from	cirurgia_protocolo
where	nr_sequencia = nr_seq_protocolo_p;

select	ds_diagnostico,
	ds_resumo_cirurgia,
	ds_diagnostico_pos,
	ds_exame_rad,
	ds_exame_anatomo,
	ds_achados_operatorios,
	ds_po_imediato,
	ds_intercorrencia
into STRICT	ds_diagnostico_dest_w,
	ds_resumo_cirurgia_dest_w,
	ds_diagnostico_pos_dest_w,
	ds_exame_rad_dest_w,
	ds_exame_anatomo_dest_w,
	ds_achados_operat_dest_w,
	ds_po_imediato_dest_w,
	ds_intercorrencia_dest_w
from	cirurgia_descricao
where	nr_sequencia	= nr_sequencia_p;

if (ds_diagnostico_dest_w IS NOT NULL AND ds_diagnostico_dest_w::text <> '') then
	ds_diagnostico_w	:= substr(ds_diagnostico_dest_w || chr(10)||substr(ds_diagnostico_orig_w,1,2000-coalesce(length(ds_diagnostico_dest_w),0)),1,2000);
else
	ds_diagnostico_w	:= substr(ds_diagnostico_orig_w,1,2000-coalesce(length(ds_diagnostico_dest_w),0));
end if;	

if (ds_resumo_cirurgia_dest_w IS NOT NULL AND ds_resumo_cirurgia_dest_w::text <> '') then
	ds_resumo_cirurgia_w	:= substr(ds_resumo_cirurgia_dest_w || chr(10)||substr(ds_resumo_cirurgia_orig_w,1,2000-coalesce(length(ds_diagnostico_dest_w),0)),1,2000);
else
	ds_resumo_cirurgia_w	:= substr(ds_resumo_cirurgia_orig_w,1,2000-coalesce(length(ds_diagnostico_dest_w),0));
end if;

if (ds_diagnostico_pos_dest_w IS NOT NULL AND ds_diagnostico_pos_dest_w::text <> '') then
	ds_diagnostico_pos_w	:= substr(ds_diagnostico_pos_dest_w || chr(10)||substr(ds_diagnostico_pos_orig_w,1,2000-coalesce(length(ds_diagnostico_pos_dest_w),0)),1,2000);
else
	ds_diagnostico_pos_w	:= substr(ds_diagnostico_pos_orig_w,1,2000-coalesce(length(ds_diagnostico_pos_dest_w),0));
end if;	

if (ds_exame_rad_dest_w IS NOT NULL AND ds_exame_rad_dest_w::text <> '') then
	ds_exame_rad_w		:= substr(ds_exame_rad_dest_w || chr(10)||substr(ds_exame_rad_orig_w,1,2000-coalesce(length(ds_exame_rad_dest_w),0)),1,2000);
else
	ds_exame_rad_w		:= substr(ds_exame_rad_orig_w,1,2000-coalesce(length(ds_exame_rad_dest_w),0));	
end if;	

if (ds_exame_anatomo_dest_w IS NOT NULL AND ds_exame_anatomo_dest_w::text <> '') then
	ds_exame_anatomo_w	:= substr(ds_exame_anatomo_dest_w || chr(10)||substr(ds_exame_anatomo_orig_w,1,2000-coalesce(length(ds_exame_anatomo_dest_w),0)),1,2000);
else
	ds_exame_anatomo_w	:= substr(ds_exame_anatomo_orig_w,1,2000-coalesce(length(ds_exame_anatomo_dest_w),0));	
end if;	

if (ds_achados_operat_dest_w IS NOT NULL AND ds_achados_operat_dest_w::text <> '') then
	ds_achados_operat_w	:= substr(ds_achados_operat_dest_w || chr(10)||substr(ds_achados_operat_orig_w,1,2000-coalesce(length(ds_achados_operat_dest_w),0)),1,2000);
else
	ds_achados_operat_w	:= substr(ds_achados_operat_orig_w,1,2000-coalesce(length(ds_achados_operat_dest_w),0));	
end if;	

if (ds_po_imediato_dest_w IS NOT NULL AND ds_po_imediato_dest_w::text <> '') then
	ds_po_imediato_w	:= substr(ds_po_imediato_dest_w || chr(10)||substr(ds_po_imediato_orig_w,1,2000-coalesce(length(ds_po_imediato_dest_w),0)),1,2000);
else
	ds_po_imediato_w	:= substr(ds_po_imediato_orig_w,1,2000-coalesce(length(ds_po_imediato_dest_w),0));	
end if;	

if (ds_intercorrencia_dest_w IS NOT NULL AND ds_intercorrencia_dest_w::text <> '') then
	ds_intercorrencia_w	:= substr(ds_intercorrencia_dest_w || chr(10)||substr(ds_intercorrencia_orig_w,1,2000-coalesce(length(ds_intercorrencia_dest_w),0)),1,2000);
else
	ds_intercorrencia_w	:= substr(ds_intercorrencia_orig_w,1,2000-coalesce(length(ds_intercorrencia_dest_w),0));	
end if;		


update	Cirurgia_Descricao
set	ds_diagnostico			= ds_diagnostico_w,
	ds_resumo_cirurgia		= ds_resumo_cirurgia_w,
	ds_diagnostico_pos		= ds_diagnostico_pos_w,
	ds_exame_rad			= ds_exame_rad_w,
	ds_exame_anatomo		= ds_exame_anatomo_w,	
	ds_achados_operatorios  = ds_achados_operat_w,
	ds_po_imediato			= ds_po_imediato_w,
	cd_doenca_cid			= cd_doenca_cid_w,
	ds_intercorrencia		= ds_intercorrencia_w,
	nm_usuario				= nm_usuario_p,
	dt_atualizacao			= clock_timestamp()
where	nr_sequencia 		= nr_sequencia_p;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adicionar_protocolo_cirurgia ( nr_sequencia_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

