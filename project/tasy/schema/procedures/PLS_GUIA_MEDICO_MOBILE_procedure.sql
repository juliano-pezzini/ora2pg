-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_guia_medico_mobile ( nr_seq_prestador_p bigint, cd_medico_p text, cd_item_p bigint, ie_origem_proced_p bigint, cd_municipio_ibge_p text, cd_especialidade_p bigint, ie_proc_especialidade_p text, nr_seq_tipo_prestador_p bigint, ie_tipo_p bigint, ie_origem_p text, -- W - Portal, T - Tasy
 nr_seq_tipo_guia_p text, nr_seq_plano_p bigint, sg_estado_p text, nr_seq_bairro_p bigint, ie_filtro_portal_p text, -- No portal é sempre 'N' e no Tasy depende do filtro
 nr_seq_regiao_p text, ie_sem_tipo_guia_p text, -- Apenas no Tasy
 ie_instituicao_acred_p text, ie_nivel_acreditacao_p bigint, cd_prestador_p text, ie_cd_prestador_p text, nm_prestador_p text, nm_medico_p text, nm_usuario_p text, ie_carater_internacao_p text, cd_estabelecimento_p bigint, ie_endereco_espec_p text, nr_seq_area_atuacao_p bigint, ie_odontologico_p text, ie_ausentes_p w_pls_guia_medico.ie_ausente%type, ie_tipo_relacao_p text, nr_seq_grupo_servico_p pls_prest_grupo_serv_gm.nr_seq_grupo_servico%type, nm_medico_ou_prestador_p text ) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar as informações de Guia Médico no Tasy (Desktop), no Portal e em relatórios
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [X] Tasy (Delphi/Java) [X] Portal [X]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

	QUANDO FOR COLOCAR ALGUMA RESTRIÇÃO CONVERSAR COM
	PESSOAL DA OPS - REDE CREDENCIADA

	SEMPRE RESTRINGIR SE VAI SER UTILIZADO NO TASY OU NO PORTAL
	ATRAVÉS DO IE_ORIGEM_P - W - Portal, T - Tasy (se for apenas utilizado em uma aplicação)

Se for validar informação de COOPERADO:	PLS_VAL_GUIA_MED_COOPERADO
Se for validar informação de PRESTADOR:	PLS_VAL_GUIA_MED_PRESTADOR
Se for validar informação de ESPECIALIDADE:	PLS_OBTER_ESPEC_PREST_MEDICO

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_especialidades_w		varchar(4000) := '';
ds_especialidades_med_w		varchar(4000);
ds_espec_medico_w		varchar(4000);
cd_especialidades_w		varchar(4000);
ds_tipo_prestador_w		varchar(4000);
ds_area_atuacao_med_w		varchar(4000) := '';
ds_endereco_w			varchar(255);
ds_complemento_w		varchar(255);
ds_bairro_w			varchar(255);
cd_cep_w			varchar(255);
ds_email_w			varchar(255);
ds_website_w			varchar(255);
nm_prestador_w			varchar(255);
ie_odontologico_w		varchar(255);
ie_filtro_portal_w		varchar(255);
ie_entra_portal_w		varchar(255);
ie_sem_tipo_guia_w		varchar(255);
ie_filtro_ausentes_w		varchar(255);
ie_filtro_carater_int_w		varchar(255);
ds_fone_adic_w			varchar(255);
ds_fax_w			varchar(80);
ds_municipio_w			varchar(40);
nr_telefone_w			varchar(30);
nr_tel_simples_w		varchar(30);
cd_prestador_w			varchar(30);
cd_prestador_ww			varchar(30);
nr_crm_w			varchar(20);
cd_municipio_ibge_w		varchar(20);
cd_municipio_ibge_prest_w	varchar(20);
cd_cep_ww			varchar(15)	:= null;
cd_cgc_prestador_w		varchar(14);
cd_pf_prestador_w		varchar(10);
cd_medico_w			varchar(10);
ie_acreditacao_w		varchar(10);
ie_filtro_produto_w		varchar(10);
nr_ddi_telefone_w		varchar(6);
nr_ddd_telefone_w		varchar(6);
nr_endereco_w			varchar(5);
ie_tipo_endereco_w		varchar(4);
ie_tipo_endereco_ww		varchar(4);
ie_tipo_prestador_w		varchar(3);
ie_tipo_compl_prest_w		varchar(3);
nr_ddd_simples_w		varchar(3);
nr_ddd_fax_w			varchar(3);
ie_cd_prestador_w		varchar(2);
ie_insere_w			varchar(1);
ie_insere_c03_w			varchar(1);
ie_prestador_w			varchar(1);
ie_notivisa_w			varchar(1);
ie_pos_grad_360_w		varchar(1);
ie_residencia_saude_w		varchar(1);
ie_particip_qualiss_ans_w	varchar(1);
ie_apalc_w			varchar(1);
ie_adicq_w			varchar(1);
ie_aona_w			varchar(1);
ie_acba_w			varchar(1);
ie_aiqg_w			varchar(1);
ie_especialista_w		varchar(1);
ie_agrupar_especialidade_w	varchar(1)	:= 'S';
ie_estrutura_w			varchar(1)	:= 'N';
ie_gera_apenas_espec_prest_w	varchar(1)	:= 'N';
cd_area_w			bigint;
cd_especialidade_guia_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_end_guia_medico_w	bigint;
nr_seq_compl_pf_tel_adic_ww	bigint;
nr_seq_compl_pj_w		bigint;
qt_vinculo_w			bigint;
cd_especialidades_med_w		bigint;
nr_seq_guia_medico_w		bigint;
qt_registros_w			bigint	:= 0;
qt_registro_w			bigint	:= 0;
nr_seq_compl_pf_tel_adic_w	bigint	:= null;
nr_ramal_w			integer;
ie_tipo_complemento_w		smallint	:= 0;
ie_tipo_prest_c01_w		smallint;
ie_tem_grupo_servico_w		smallint	:= 0;
qt_especialidade_w		integer;
qt_tipo_guia_med_w		integer;
contador_w			integer;
dt_referencia_w			timestamp;
sg_estado_w			pessoa_juridica.sg_estado%type;
nr_seq_tipo_compl_adic_w	pls_prestador.nr_seq_tipo_compl_adic%type;
nr_seq_tipo_compl_adic_guia_w	pls_endereco_guia_medico.nr_seq_tipo_compl_adic%type;
ie_ausente_w			w_pls_guia_medico.ie_ausente%type := 'N';
nm_medico_ou_prestador_w	varchar(2000);
ie_historico_guia_medico_w	w_pls_guia_medico.ie_historico_guia_medico%type;

C01 CURSOR FOR
	SELECT	1 ie_tipo_prest_c01,				-- PRESTADOR ATIVO, ORIGEM FÍSICO, ESPECIALIDADE AGRUPADA
		'PF' ie_tipo_prestador,
		a.nr_sequencia,
		'' cd_cgc_prestador,
		cd_pessoa_fisica,
		ie_tipo_endereco,
		nr_seq_compl_pf_tel_adic,
		cd_prestador,
		null nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360 ie_pos_grad_360,
		coalesce(a.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		null ds_especialidade,
		null cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when c.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico
	FROM pls_prestador a
LEFT OUTER JOIN pls_prestador_historico b ON (a.nr_sequencia = b.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador c ON (b.nr_seq_tipo_hist = c.nr_sequencia)
WHERE a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w 	= 'S'   and (cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '') and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and ((cd_pessoa_fisica	= cd_medico_p) 		or (coalesce(cd_medico_p::text, '') = '')) and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_ww)	or coalesce(cd_prestador_ww,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) and ((a.nm_busca_guia_medico like nm_medico_ou_prestador_w) or coalesce(nm_medico_ou_prestador_p::text, '') = '') group by	a.nr_sequencia, cd_pessoa_fisica, ie_tipo_endereco, nr_seq_compl_pf_tel_adic, cd_prestador,
			coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(a.ie_residencia_saude, 'N'), coalesce(a.ie_particip_qualiss_ans, 'N'),
			a.nr_seq_tipo_compl_adic

	
union

	SELECT	2 ie_tipo_prest_c01,				-- PRESTADOR ATIVO, ORIGEM FÍSICO, ESPECIALIDADE NÃO AGRUPADA
		'PF' ie_tipo_prestador,
		a.nr_sequencia,
		'' cd_cgc_prestador,
		a.cd_pessoa_fisica,
		a.ie_tipo_endereco,
		a.nr_seq_compl_pf_tel_adic,
		a.cd_prestador,
		null nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360 ie_pos_grad_360,
		coalesce(a.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		coalesce(b.ds_espec_guia_medico, b.ds_especialidade) ds_especialidade,
		b.cd_especialidade cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when e.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico
	FROM pls_prestador a
LEFT OUTER JOIN pls_prestador_historico d ON (a.nr_sequencia = d.nr_seq_prestador)
LEFT OUTER JOIN pls_prestador_med_espec c ON (a.nr_sequencia = c.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador e ON (d.nr_seq_tipo_hist = e.nr_sequencia)
LEFT OUTER JOIN especialidade_medica b ON (c.cd_especialidade = b.cd_especialidade)
WHERE a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w 	= 'N'   and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and ((a.cd_pessoa_fisica	= cd_medico_p) 		or (coalesce(cd_medico_p::text, '') = '')) and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_ww)	or coalesce(cd_prestador_ww,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) and coalesce(c.ie_guia_medico,'S')	= 'S'   -- NÃO É NECESSÁRIO O '(+)' POIS NÃO PODE EXISTIR ESPECIALIDADE  EM PRESTADOR QUE NÃO ESTÁ CADASTRADO NA ESPECIALIDADE MÉDICA
  and (c.cd_especialidade = cd_especialidade_p or coalesce(cd_especialidade_p::text, '') = '') and clock_timestamp() between trunc(coalesce(c.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(c.dt_fim_vigencia, clock_timestamp())) and ((a.nm_busca_guia_medico like nm_medico_ou_prestador_w) or coalesce(nm_medico_ou_prestador_p::text, '') = '') group by	a.nr_sequencia, a.cd_pessoa_fisica, a.ie_tipo_endereco, a.nr_seq_compl_pf_tel_adic,
			a.cd_prestador,	coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(a.ie_residencia_saude, 'N'),
			coalesce(a.ie_particip_qualiss_ans, 'N'), coalesce(b.ds_espec_guia_medico, b.ds_especialidade),
			b.cd_especialidade, a.nr_seq_tipo_compl_adic
	
union

	select	3 ie_tipo_prest_c01,				-- PRESTADOR ATIVO, ORIGEM JURÍDICO, ESPECIALIDADE AGRUPADA
		'PJ1' ie_tipo_prestador,
		a.nr_sequencia,
		cd_cgc cd_cgc_prestador,
		null,
		ie_tipo_endereco,
		nr_seq_compl_pf_tel_adic,
		cd_prestador,
		nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360 ie_pos_grad_360,
		coalesce(a.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		null ds_especialidade,
		null cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when c.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico
	FROM pls_prestador a
LEFT OUTER JOIN pls_prestador_historico b ON (a.nr_sequencia = b.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador c ON (b.nr_seq_tipo_hist = c.nr_sequencia)
WHERE a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w	= 'S' and ie_tipo_p			<> 2   and coalesce(cd_pessoa_fisica::text, '') = '' and coalesce(cd_medico_p::text, '') = '' and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_ww)	or coalesce(cd_prestador_ww,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) and ((a.nm_busca_guia_medico like nm_medico_ou_prestador_w) or coalesce(nm_medico_ou_prestador_p::text, '') = '') group by	a.nr_sequencia, cd_cgc, ie_tipo_endereco, nr_seq_compl_pf_tel_adic, cd_prestador,
			nr_seq_compl_pj, coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(a.ie_residencia_saude, 'N'),
			coalesce(a.ie_particip_qualiss_ans, 'N'), a.nr_seq_tipo_compl_adic
	
union

	select	4 ie_tipo_prest_c01,				-- PRESTADOR ATIVO, ORIGEM JURÍDICO, ESPECIALIDADE NÃO AGRUPADA
		'PJ1' ie_tipo_prestador,
		a.nr_sequencia,
		a.cd_cgc cd_cgc_prestador,
		null,
		a.ie_tipo_endereco,
		a.nr_seq_compl_pf_tel_adic,
		a.cd_prestador,
		a.nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360 ie_pos_grad_360,
		coalesce(a.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		coalesce(b.ds_espec_guia_medico, b.ds_especialidade) ds_especialidade,
		b.cd_especialidade cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when e.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico
	FROM pls_prestador_med_espec c, especialidade_medica b, pls_prestador a
LEFT OUTER JOIN pls_prestador_historico d ON (a.nr_sequencia = d.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador e ON (d.nr_seq_tipo_hist = e.nr_sequencia)
WHERE a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w 	= 'N' and ie_tipo_p			<> 2   and coalesce(a.cd_pessoa_fisica::text, '') = '' and coalesce(cd_medico_p::text, '') = '' and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_ww)	or coalesce(cd_prestador_ww,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) and coalesce(c.ie_guia_medico,'S')	= 'S' and c.cd_especialidade		= b.cd_especialidade and c.nr_seq_prestador		= a.nr_sequencia and coalesce(c.cd_pessoa_fisica::text, '') = '' and (c.cd_especialidade = cd_especialidade_p or coalesce(cd_especialidade_p::text, '') = '') and clock_timestamp() between trunc(coalesce(c.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(c.dt_fim_vigencia, clock_timestamp())) and ((a.nm_busca_guia_medico like nm_medico_ou_prestador_w) or coalesce(nm_medico_ou_prestador_p::text, '') = '') group by	a.nr_sequencia,	a.cd_cgc, a.ie_tipo_endereco, a.nr_seq_compl_pf_tel_adic, a.cd_prestador,
			a.nr_seq_compl_pj, coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(a.ie_residencia_saude, 'N'),
			coalesce(a.ie_particip_qualiss_ans, 'N'), coalesce(b.ds_espec_guia_medico, b.ds_especialidade),
			b.cd_especialidade, a.nr_seq_tipo_compl_adic
	
union

	select	5 ie_tipo_prest_c01,				-- PROFISSIONAL DO PRESTADOR ATIVO, ORIGEM JURÍDICO, ESPECIALIDADE AGRUPADA
		'PJ2' ie_tipo_prestador,
		a.nr_sequencia,
		a.cd_cgc cd_cgc_prestador,
		b.cd_medico,
		coalesce(b.ie_tipo_endereco, a.ie_tipo_endereco),
		null nr_seq_compl_pf_tel_adic,
		cd_prestador,
		null nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360 ie_pos_grad_360,
		coalesce(a.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		null ds_especialidade,
		null cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when d.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico
	FROM pls_prestador_medico b, pls_prestador a
LEFT OUTER JOIN pls_prestador_historico c ON (a.nr_sequencia = c.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador d ON (c.nr_seq_tipo_hist = d.nr_sequencia)
WHERE a.nr_sequencia			= b.nr_seq_prestador and a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w	= 'S'   and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and ((b.cd_medico		= cd_medico_p) 		or (coalesce(cd_medico_p::text, '') = '')) and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_ww)	or coalesce(cd_prestador_ww,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) and b.ie_guia_medico		= 'S' and b.ie_situacao			= 'A' and dt_referencia_w between trunc(coalesce(b.dt_inclusao,clock_timestamp()),'dd') and trunc(coalesce(b.dt_exclusao,clock_timestamp()),'dd') and ((b.nm_busca_guia_medico like nm_medico_ou_prestador_w) or coalesce(nm_medico_ou_prestador_p::text, '') = '') group by	a.nr_sequencia, a.cd_cgc, b.cd_medico, coalesce(b.ie_tipo_endereco, a.ie_tipo_endereco),
			cd_prestador, coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(a.ie_residencia_saude, 'N'),
			coalesce(a.ie_particip_qualiss_ans, 'N'), a.nr_seq_tipo_compl_adic
	
union

	select	6 ie_tipo_prest_c01,				-- PROFISSIONAL DO PRESTADOR ATIVO, ORIGEM JURÍDICO, ESPECIALIDADE NÃO AGRUPADA
		'PJ2' ie_tipo_prestador,
		a.nr_sequencia,
		a.cd_cgc cd_cgc_prestador,
		b.cd_medico,
		coalesce(b.ie_tipo_endereco, a.ie_tipo_endereco),
		null nr_seq_compl_pf_tel_adic,
		cd_prestador,
		null nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360 ie_pos_grad_360,
		coalesce(a.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		coalesce(c.ds_espec_guia_medico,c.ds_especialidade) ds_especialidade,
		c.cd_especialidade cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when f.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico
	FROM pls_prestador_med_espec d, especialidade_medica c, pls_prestador_medico b, pls_prestador a
LEFT OUTER JOIN pls_prestador_historico e ON (a.nr_sequencia = e.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador f ON (e.nr_seq_tipo_hist = f.nr_sequencia)
WHERE a.nr_sequencia			= b.nr_seq_prestador and a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w 	= 'N'   and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and ((b.cd_medico		= cd_medico_p)		or (coalesce(cd_medico_p::text, '') = '')) and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_ww)	or coalesce(cd_prestador_ww,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) and a.nr_sequencia			= d.nr_seq_prestador and d.cd_pessoa_fisica		= b.cd_medico and d.cd_especialidade		= c.cd_especialidade and b.ie_guia_medico		= 'S' and b.ie_situacao			= 'A' and d.ie_guia_medico 		= 'S' and dt_referencia_w between trunc(coalesce(b.dt_inclusao,clock_timestamp()),'dd') and trunc(coalesce(b.dt_exclusao,clock_timestamp()),'dd') and clock_timestamp() between trunc(coalesce(d.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(d.dt_fim_vigencia, clock_timestamp())) and ((b.nm_busca_guia_medico like nm_medico_ou_prestador_w) or coalesce(nm_medico_ou_prestador_p::text, '') = '') group by 	a.nr_sequencia, a.cd_cgc, b.cd_medico, coalesce(b.ie_tipo_endereco, a.ie_tipo_endereco),
			cd_prestador, coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(a.ie_residencia_saude, 'N'),
			coalesce(a.ie_particip_qualiss_ans, 'N'), c.ds_especialidade, c.cd_especialidade, a.nr_seq_tipo_compl_adic, c.ds_espec_guia_medico;

C02 CURSOR FOR
	SELECT	a.ie_estrutura
	from	pls_proced_especialidade	a
	where	((coalesce(a.cd_procedimento::text, '') = '') or (coalesce(cd_item_p::text, '') = '') or (a.cd_procedimento = cd_item_p))
	and	((coalesce(a.ie_origem_proced::text, '') = '') or (coalesce(ie_origem_proced_p::text, '') = '') or (a.ie_origem_proced = ie_origem_proced_p))
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (coalesce(cd_grupo_w::text, '') = '') or (a.cd_grupo_proc = cd_grupo_w))
	and	((coalesce(a.cd_especialidade_proc::text, '') = '') or (coalesce(cd_especialidade_w::text, '') = '') or (a.cd_especialidade_proc = cd_especialidade_w))
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (coalesce(cd_area_w::text, '') = '') or (a.cd_area_procedimento = cd_area_w))
	and	((exists (SELECT	1
				from	pls_prestador_med_espec	x
				where	x.cd_especialidade	= a.cd_especialidade
				and	x.nr_seq_prestador	= nr_seq_prestador_w
				and	x.cd_pessoa_fisica	= cd_medico_w
				and	clock_timestamp() between coalesce(x.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(x.dt_fim_vigencia, clock_timestamp())))) or (exists (select	1
				from	pls_prestador_med_espec x
				where	x.cd_especialidade	= a.cd_especialidade
				and	x.nr_seq_prestador	= nr_seq_prestador_w
				and	coalesce(x.cd_pessoa_fisica::text, '') = ''
				and	clock_timestamp() between coalesce(x.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(x.dt_fim_vigencia, clock_timestamp())))))
	order by a.cd_area_procedimento,
		a.cd_especialidade_proc,
		a.cd_grupo_proc,
		a.cd_procedimento;

-- Cursor para buscar os endereços adicionais dos profissionais PF ou o endereço do prestador
C03 CURSOR FOR
	SELECT	ie_tipo_endereco,
		nr_sequencia
	from	pls_endereco_guia_medico
	where	nr_seq_prestador	= nr_seq_prestador_w
	and	cd_pessoa_fisica	= cd_medico_w
	and	((coalesce(cd_municipio_ibge_p::text, '') = '') or (cd_municipio_ibge = cd_municipio_ibge_p));

C04 CURSOR FOR
	SELECT	ie_tipo_endereco,
		CASE WHEN nr_seq_compl_pj=0 THEN  null  ELSE nr_seq_compl_pj END
	from	pls_endereco_guia_medico
	where	nr_seq_prestador	= nr_seq_prestador_w
	and	((coalesce(cd_municipio_ibge_p::text, '') = '') or (cd_municipio_ibge = cd_municipio_ibge_p))
	and	coalesce(cd_pessoa_fisica::text, '') = '';

/* CURSORES 'C05' E 'C06' FORAM RETIRADOS, POIS EXISTE UMA PROCEDURE QUE REALIZA A JUNÇÃO DE TODAS AS ESPECIALIDADES */

	/*Cursor C05 is
		select	distinct
			nvl(d.ds_espec_guia_medico,d.ds_especialidade) ds_espec
		from	especialidade_medica 	d,
			pls_end_guia_med_espec	c,
			pls_prestador_med_espec a
		where	a.cd_especialidade	= d.cd_especialidade
		and	c.cd_especialidade	= a.cd_especialidade
		and	c.nr_seq_endereco	= nr_seq_end_guia_medico_w
		and	a.cd_pessoa_fisica	= cd_medico_w
		and	a.nr_seq_prestador	= nr_seq_prestador_w
		and	((cd_especialidade_p is null) or (a.cd_especialidade = cd_especialidade_p))
		and	(a.nr_seq_area_atuacao = nr_seq_area_atuacao_p or nr_seq_area_atuacao_p is null)
		and	nvl(a.ie_guia_medico,'S')	= 'S'
		and	sysdate between nvl(a.dt_inicio_vigencia, sysdate - 1) and fim_dia(nvl(a.dt_fim_vigencia, sysdate))
		and	ie_agrupar_especialidade_w = 'S'
		order by
			ds_espec;

	Cursor C06 is
		select	distinct
			nvl(b.ds_espec_guia_medico,b.ds_especialidade) ds_espec
		from	especialidade_medica 	b,
			pls_prestador_med_espec	a
		where	a.cd_especialidade 	= b.cd_especialidade
		and	a.nr_seq_prestador	= nr_seq_prestador_w
		and	a.cd_pessoa_fisica	= cd_medico_w
		and	((cd_especialidade_p is null) or (a.cd_especialidade = cd_especialidade_p))
		and	(a.nr_seq_area_atuacao = nr_seq_area_atuacao_p or nr_seq_area_atuacao_p is null)
		and	nvl(a.ie_endereco_principal,'N') = 'S'
		and	nvl(a.ie_guia_medico,'S')	= 'S'
		and	(nvl(ie_gera_apenas_espec_prest_w,'N') = 'N' or ie_tipo_prestador_w not in ('PJ1','PJ2')) -- Parâmetro 17 - Apresentar apenas especialidade do prestador PJ
		and	sysdate between nvl(a.dt_inicio_vigencia, sysdate - 1) and fim_dia(nvl(a.dt_fim_vigencia, sysdate))
		and	ie_agrupar_especialidade_w = 'S';*/
/* CURSORES 'C05' E 'C06' FORAM RETIRADOS, POIS EXISTE UMA PROCEDURE QUE REALIZA A JUNÇÃO DE TODAS AS ESPECIALIDADES */

C07 CURSOR FOR
	SELECT	distinct d.cd_especialidade cd_espec
	from	especialidade_medica 	d,
		pls_end_guia_med_espec	c,
		pls_prestador_med_espec a
	where	a.cd_especialidade	= d.cd_especialidade
	and	c.cd_especialidade = a.cd_especialidade
	and	c.nr_seq_endereco	= nr_seq_end_guia_medico_w
	and	a.cd_pessoa_fisica	= cd_medico_w
	and	a.nr_seq_prestador	= nr_seq_prestador_w
	and	((coalesce(cd_especialidade_p::text, '') = '') or (a.cd_especialidade = cd_especialidade_p))
	and (a.nr_seq_area_atuacao = nr_seq_area_atuacao_p or coalesce(nr_seq_area_atuacao_p::text, '') = '')
	and	coalesce(a.ie_guia_medico,'S')	= 'S'
	and	ie_agrupar_especialidade_w = 'S'
	order by
		cd_espec;

C08 CURSOR FOR
	SELECT	distinct b.cd_especialidade cd_espec
	from	especialidade_medica 	b,
		pls_prestador_med_espec	a
	where	a.cd_especialidade 	= b.cd_especialidade
	and	a.nr_seq_prestador	= nr_seq_prestador_w
	and	((coalesce(cd_especialidade_p::text, '') = '') or (a.cd_especialidade = cd_especialidade_p))
	and (a.nr_seq_area_atuacao = nr_seq_area_atuacao_p or coalesce(nr_seq_area_atuacao_p::text, '') = '')
	and	coalesce(a.ie_endereco_principal,'N') = 'S'
	and	coalesce(a.ie_guia_medico,'S')	= 'S'
	and	not exists (	SELECT	1
				from	w_pls_guia_med_espec x
				where	x.cd_especialidade = b.cd_especialidade
				and	nr_seq_guia_medico = nr_seq_guia_medico_w)
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
	and	ie_agrupar_especialidade_w = 'S';

C09 CURSOR FOR
	SELECT	distinct
		b.cd_especialidade
	from	especialidade_medica	b,
		pls_prestador_med_espec	a
	where	a.cd_especialidade	= b.cd_especialidade
	and	coalesce(a.cd_pessoa_fisica::text, '') = ''
	and	coalesce(trim(both cd_medico_w)::text, '') = ''
	and	a.nr_seq_prestador	= nr_seq_prestador_w
	and	coalesce(a.ie_guia_medico,'S') = 'S'
	and	not exists (	SELECT	1
				from	w_pls_guia_med_espec x
				where	x.cd_especialidade = b.cd_especialidade
				and	nr_seq_guia_medico = nr_seq_guia_medico_w)
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
	and	ie_agrupar_especialidade_w = 'S'
	
union all

	select	distinct
		b.cd_especialidade
	from	especialidade_medica b,
		pls_prestador_med_espec a
	where	a.cd_especialidade	= b.cd_especialidade
	and	a.cd_pessoa_fisica	= coalesce(trim(both cd_medico_w), a.cd_pessoa_fisica)
	and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
	and	a.nr_seq_prestador	= nr_seq_prestador_w
	and	coalesce(a.ie_guia_medico,'S')	= 'S'
	and	not exists (	select	1
				from	w_pls_guia_med_espec x
				where	x.cd_especialidade = b.cd_especialidade
				and	nr_seq_guia_medico = nr_seq_guia_medico_w)
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
	and	ie_agrupar_especialidade_w = 'S'
	order by
		cd_especialidade;

certificacoes_c CURSOR FOR
	SELECT	a.ie_acreditacao
	from	pls_prestador_qualif	a
	where	a.nr_seq_prestador	= nr_seq_prestador_w
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and coalesce(dt_fim_vigencia, clock_timestamp() + interval '1 days');


BEGIN
delete FROM w_pls_guia_med_espec where dt_atualizacao < clock_timestamp() - interval '1 days';
delete FROM w_pls_guia_medico where dt_atualizacao < clock_timestamp() - interval '1 days';
commit;

delete FROM w_pls_guia_med_espec where nm_usuario = nm_usuario_p;
delete FROM w_pls_guia_medico where nm_usuario = nm_usuario_p;
commit;

dt_referencia_w			:= trunc(clock_timestamp(),'dd');
cd_prestador_ww			:= cd_prestador_p;
ie_cd_prestador_w		:= ie_cd_prestador_p;
ie_odontologico_w		:= coalesce(ie_odontologico_p,'T');
ie_filtro_portal_w		:= coalesce(ie_filtro_portal_p,'A');
ie_sem_tipo_guia_w		:= coalesce(ie_sem_tipo_guia_p,'A');
ie_filtro_ausentes_w		:= coalesce(ie_ausentes_p,'N');
ie_filtro_carater_int_w		:= coalesce(ie_carater_internacao_p,'0');
nm_medico_ou_prestador_w	:= elimina_acentuacao(elimina_caracteres_especiais(replace('%'||upper(nm_medico_ou_prestador_p)||'%',' ','%')));

begin
select	cd_area_procedimento,
	cd_especialidade,
	cd_grupo_proc
into STRICT	cd_area_w,
	cd_especialidade_w,
	cd_grupo_w
from	estrutura_procedimento_v
where	cd_procedimento		= cd_item_p
and	ie_origem_proced	= ie_origem_proced_p;
exception
	when others then
	cd_area_w		:= '';
	cd_especialidade_w	:= '';
	cd_grupo_w		:= '';
end;

--  Obter o valor do parâmetro "Gerar apenas especialidades do prestador no guia médico"
ie_gera_apenas_espec_prest_w	:= coalesce(obter_valor_param_usuario(1230, 17, Obter_Perfil_Ativo, nm_usuario_p, 0), 'N');

select	coalesce(max(ie_agrupar_especialidade),'S')
into STRICT	ie_agrupar_especialidade_w
from	pls_web_param_guia_medico;

-- Obter o valor do parâmetro para identificar se é mostrado o prestador quando for feita uma consulta por profissional
if (ie_origem_p = 'T') then
	ie_prestador_w		:= coalesce(obter_valor_param_usuario(1230, 3, Obter_Perfil_Ativo, nm_usuario_p, 0), 'N');
	ie_filtro_produto_w	:= coalesce(obter_valor_param_usuario(1230, 16, Obter_Perfil_Ativo, OBTER_USUARIO_ATIVO, 0), 'PP');

elsif (ie_origem_p = 'W') then
	ie_prestador_w		:= coalesce(pls_obter_param_padrao_funcao(4, 1256), 'N');
	ie_cd_prestador_w	:= coalesce(pls_obter_param_padrao_funcao(12, 1256), 'N');
	ie_filtro_produto_w	:= pls_parametro_operadora_web('FPGM');

	if (coalesce(cd_prestador_ww::text, '') = '' and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '')) then
		begin
		select	cd_prestador
		into STRICT	cd_prestador_ww
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_p;
		exception
		when others then
			cd_prestador_ww := null;
		end;
	end if;
end if;

open C01;
loop
fetch C01 into
	ie_tipo_prest_c01_w,
	ie_tipo_prestador_w,
	nr_seq_prestador_w,
	cd_cgc_prestador_w,
	cd_medico_w,
	ie_tipo_endereco_ww,
	nr_seq_compl_pf_tel_adic_ww,
	cd_prestador_w,
	nr_seq_compl_pj_w,
	ie_notivisa_w,
	ie_pos_grad_360_w,
	ie_residencia_saude_w,
	ie_particip_qualiss_ans_w,
	ds_especialidades_w,
	cd_especialidades_med_w,
	nr_seq_tipo_compl_adic_w,
	ie_historico_guia_medico_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	--ds_especialidades_w := '';
	if (nr_seq_grupo_servico_p IS NOT NULL AND nr_seq_grupo_servico_p::text <> '') then
		select	count(1)
		into STRICT	ie_tem_grupo_servico_w
		
		where	(exists	(	SELECT	1
					from	pls_prest_grupo_serv_gm	a
					where	a.nr_seq_prestador	= nr_seq_prestador_w
					and	a.nr_seq_grupo_servico	= nr_seq_grupo_servico_p
					and	exists(	select 1
							from	pls_preco_grupo_servico	b
							where	b.nr_sequencia 		= a.nr_seq_grupo_servico
							and	((b.ie_guia_medico	= 'S') or (coalesce(b.ie_guia_medico::text, '') = ''))
							and	((b.ie_cad_prestador	= 'S') or (coalesce(b.ie_cad_prestador::text, '') = '')))));

		if (ie_tem_grupo_servico_w = 0) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	-- Validar AUSENCIA do COOPERADO
	SELECT * FROM pls_val_guia_med_cooperado( ie_insere_w, ie_ausente_w, 'A', ie_filtro_ausentes_w, cd_cgc_prestador_w, cd_medico_w, null) INTO STRICT  ie_insere_w, ie_ausente_w;

	if (ie_insere_w = 'N') then
		goto final;
	end if;

	-- Filtro utilizado pelo TASY
	if (ie_origem_p = 'T') then
		-- Validar INSTITUIÇÃO DE ACREDITAÇÃO do PRESTADOR
		 ie_insere_w := pls_val_guia_med_prestador( ie_insere_w, 'IA', nr_seq_prestador_w, ie_instituicao_acred_p, null, null, null);

		if (ie_insere_w = 'N') then
			goto final;
		end if;

		-- Validar NÍVEL DE ACREDITAÇÃO do PRESTADOR
		 ie_insere_w := pls_val_guia_med_prestador( ie_insere_w, 'NA', nr_seq_prestador_w, null, ie_nivel_acreditacao_p, null, null);

		if (ie_insere_w = 'N') then
			goto final;
		end if;
	end if;

	-- Validar TIPO ODONTOLOGICO do PRESTADOR
	 ie_insere_w := pls_val_guia_med_prestador( ie_insere_w, 'TO', nr_seq_prestador_w, null, null, ie_odontologico_w, null);

	if (ie_insere_w = 'N') then
		goto final;
	end if;

	-- Validar CARATER DE INTERNAÇÃO (ATENDIMENTO) do PRESTADOR
	 ie_insere_w := pls_val_guia_med_prestador( ie_insere_w, 'CI', nr_seq_prestador_w, null, null, null, ie_filtro_carater_int_w);

	if (ie_insere_w = 'N') then
		goto final;
	end if;

	ie_insere_w		:= 'S';

	if (ie_tipo_prestador_w = 'PF') then

		if (ie_agrupar_especialidade_w = 'S') then
				ds_especialidades_w := pls_obter_espec_prest_medico(	ds_especialidades_w, 3, nr_seq_prestador_w, cd_medico_w, cd_especialidade_p, null, nr_seq_area_atuacao_p, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);

		elsif (pls_obter_se_espec_tipo_guia( nr_seq_tipo_guia_p, nr_seq_prestador_w, cd_especialidades_med_w, ie_origem_p) = 'N') then
			ie_insere_w	:= 'N';
			goto final;
		end if;

	elsif (ie_tipo_prestador_w = 'PJ1') then
		if (ie_agrupar_especialidade_w = 'S') then
			if (ie_gera_apenas_espec_prest_w = 'S') then
					ds_especialidades_w := pls_obter_espec_prest_medico(	ds_especialidades_w, 5, nr_seq_prestador_w, null, null, null, null, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
			else
					ds_especialidades_w := pls_obter_espec_prest_medico(	ds_especialidades_w, 6, nr_seq_prestador_w, null, null, null, null, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
			end if;
		elsif (pls_obter_se_espec_tipo_guia( nr_seq_tipo_guia_p, nr_seq_prestador_w, cd_especialidades_med_w, ie_origem_p) = 'N') then
			ie_insere_w	:= 'N';
			goto final;
		end if;

	elsif (ie_tipo_prestador_w = 'PJ2') then
		if (ie_agrupar_especialidade_w = 'S') then
			if (ie_gera_apenas_espec_prest_w = 'S') then
				ds_especialidades_w	:= null;
			else
				-- OS 779930 - pitdelling - 02/10/2014 - O comando a baixo foi criado para saber se o prestador naquela especialidade é Pós-Doutorado.
				ie_pos_grad_360_w	:= coalesce(pls_obter_dados_medico_prest(cd_medico_w, cd_especialidades_med_w, 'PG'), ie_pos_grad_360_w);
					ds_especialidades_w := pls_obter_espec_prest_medico(	ds_especialidades_w, 3, nr_seq_prestador_w, cd_medico_w, cd_especialidade_p, null, nr_seq_area_atuacao_p, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
			end if;
		elsif (pls_obter_se_espec_tipo_guia( nr_seq_tipo_guia_p, nr_seq_prestador_w, cd_especialidades_med_w, ie_origem_p) = 'N') then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (cd_especialidades_med_w IS NOT NULL AND cd_especialidades_med_w::text <> '') and (ie_agrupar_especialidade_w = 'N') and (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
		select	max(coalesce(ie_pos_grad_360, ie_pos_grad_360_w)),
			max(coalesce(ie_residencia_saude, ie_residencia_saude_w))
		into STRICT	ie_pos_grad_360_w,
			ie_residencia_saude_w
		from	medico_especialidade
		where	cd_pessoa_fisica	= cd_medico_w
		and	cd_especialidade	= cd_especialidades_med_w;
	end if;

	-- OS 694884 - jtonon - 21/05/2014 - Criado tratamento para que se utilizado o filtro pelo produto o sistema deve trazer os tipos cadastrados em OPS - Prestador > Prestadores > Produtos/SCA
	if (coalesce(nr_seq_plano_p::text, '') = '') then
		begin
			ds_tipo_prestador_w := pls_obter_tipo_prest_gm(	ds_tipo_prestador_w, 1, nr_seq_prestador_w, nr_seq_tipo_guia_p, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
		exception
		when others then
			ds_tipo_prestador_w	:= null;
		end;

	else
		begin
			ds_tipo_prestador_w := pls_obter_tipo_prest_gm(	ds_tipo_prestador_w, 2, nr_seq_prestador_w, nr_seq_tipo_guia_p, nr_seq_plano_p, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
		exception
		when others then
			ds_tipo_prestador_w	:= null;
		end;
	end if;

	begin
	nm_prestador_w		:= substr(pls_obter_dados_prestador(nr_seq_prestador_w, 'NGM'),1,255);
	exception
	when others then
		nm_prestador_w	:= null;
	end;

	begin
	cd_especialidades_w	:= substr(pls_obter_cod_espec_prest(nr_seq_prestador_w, cd_medico_w),1,4000);
	exception
	when others then
		cd_especialidades_w	:= null;
	end;

	if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') and (pls_obter_se_item_lista(cd_especialidades_w,to_char(cd_especialidade_p)) = 'N') then
		--(ds_especialidades_w is null)) then -- OS 754372 - wcbernardino - Quando esta sendo filtrado o Prestador (PJ2), Médico e Especialdiade não estava gerando no guia médico
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (nr_crm_w IS NOT NULL AND nr_crm_w::text <> '') and (nm_medico_p IS NOT NULL AND nm_medico_p::text <> '') and (nm_prestador_w not like('%' || nm_medico_p || '%')) then
		ie_insere_w	:= 'N';
		goto final;

	elsif (nm_prestador_p IS NOT NULL AND nm_prestador_p::text <> '') and (upper(nm_prestador_w) not like('%' || upper(nm_prestador_p) || '%')) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (sg_estado_p IS NOT NULL AND sg_estado_p::text <> '') or (cd_municipio_ibge_p IS NOT NULL AND cd_municipio_ibge_p::text <> '') or (nr_seq_bairro_p IS NOT NULL AND nr_seq_bairro_p::text <> '') or (nr_seq_regiao_p IS NOT NULL AND nr_seq_regiao_p::text <> '') then
		ie_insere_w	:=	pls_obter_se_prest_endereco(	cd_medico_w,
									cd_cgc_prestador_w,
									ie_tipo_endereco_ww,
									coalesce(nr_seq_compl_pf_tel_adic_ww,nr_seq_tipo_compl_adic_w),
									cd_municipio_ibge_p,
									sg_estado_p,
									cd_cep_ww,
									nr_seq_regiao_p,
									null);
	end if;

	if (ie_insere_w = 'N') then
		-- CD_MUNICIPIO_IBGE_P
		if (cd_municipio_ibge_p IS NOT NULL AND cd_municipio_ibge_p::text <> '') and (coalesce(sg_estado_p::text, '') = '') and (coalesce(nr_seq_bairro_p::text, '') = '') then
			select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S')--nvl(max('S' END ,'N')
			into STRICT	ie_insere_w
			from	pls_prestador_area a
			where	nr_seq_prestador	= nr_seq_prestador_w
			and	((cd_municipio_ibge	= cd_municipio_ibge_p) or
				((coalesce(cd_municipio_ibge::text, '') = '') and (sg_estado = obter_uf_ibge(cd_municipio_ibge_p))) or
				(exists	(SELECT	1
					from	pls_regiao_local x
					where	x.nr_seq_regiao	= a.nr_seq_regiao
					and	((x.cd_municipio_ibge = cd_municipio_ibge_p) or
						((coalesce(x.cd_municipio_ibge::text, '') = '') and (x.sg_uf_municipio = obter_uf_ibge(cd_municipio_ibge_p)))
						)
					)
				))  LIMIT 1;

			if (ie_insere_w = 'N') then
				goto final;
			end if;
		else
			goto final;
		end if;
	end if;

	-- O filtro IE_FILTRO_PORTAL é só utilizado no Tasy (Desktop)
	if (ie_origem_p = 'T') and (ie_filtro_portal_w <> 'A') then
		if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
			select	coalesce(max(a.ie_entra_portal), 'S')
			into STRICT	ie_entra_portal_w
			from	pls_tipo_guia_med_partic	a
			where	a.nr_seq_tipo_guia	= nr_seq_tipo_guia_p
			and	a.nr_seq_prestador	= nr_seq_prestador_w;

		else
			select	coalesce(max(a.ie_entra_portal), 'S')
			into STRICT	ie_entra_portal_w
			from	pls_tipo_guia_med_partic	a
			where	a.nr_seq_prestador	= nr_seq_prestador_w;
		end if;

		-- Verifica se o filtro corresponde com o cadastro
		if (ie_filtro_portal_w <> ie_entra_portal_w) then
			ie_insere_w := 'N';
			goto final;
		end if;
	end if;

	if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') then
		ie_insere_w := pls_obter_se_plano_prest_gm( nr_seq_prestador_w, nr_seq_plano_p, nr_seq_tipo_guia_p, ie_filtro_produto_w, nm_usuario_p );

		if (ie_insere_w = 'N') then
			goto final;
		end if;
	end if;

	if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
		select	pls_obter_se_prest_tipo_guia(nr_seq_prestador_w, nr_seq_tipo_guia_p, nr_seq_plano_p, CASE WHEN ie_origem_p='W' THEN  'S'  ELSE 'N' END , cd_especialidades_med_w)
		into STRICT	ie_insere_w
		;

		if (ie_insere_w = 'N') then
			goto final;
		end if;
	end if;

	-- ESTA PARTE A BAIXO FOI COMENTADA POIS O 'IF' QUE ESTÁ A CIMA SUPRE  A NECESSIDADE
	/*if	(ie_filtro_produto_w = 'RA') and
		(nr_seq_tipo_guia_p is null) and
		(nr_seq_plano_p is not null) then
		ie_insere_w	:= pls_obter_se_prest_produto(nr_seq_plano_p,nr_seq_prestador_w,nvl(cd_especialidade_p, cd_especialidades_med_w));

		if	(ie_insere_w = 'N') then
			goto final;
		end if;

	-- Verifica se o plano (produto) está vinculado ao prestador/profissional (medico) em questão
	elsif	(nr_seq_tipo_guia_p is not null) or
		(nr_seq_plano_p is not null) then

		select	count(*)
		into	qt_tipo_guia_med_w
		from	pls_tipo_guia_medico;

		if	(qt_tipo_guia_med_w > 0) or (nr_seq_tipo_guia_p is not null) then
			select	pls_obter_se_prest_tipo_guia(nr_seq_prestador_w, nr_seq_tipo_guia_p, nr_seq_plano_p, decode(ie_origem_p, 'W', 'S', 'N'), cd_especialidades_med_w)
			into	ie_insere_w
			from	dual;

		else
			select	count(1)
			into	contador_w
			from	pls_plano_rede_atend;

			if(contador_w > 0)then
				ie_insere_w	:= pls_obter_se_prest_produto(nr_seq_plano_p,nr_seq_prestador_w,nvl(cd_especialidade_p, cd_especialidades_med_w));

			else
				ie_insere_w	:= pls_obter_se_prest_plano(nr_seq_prestador_w, nr_seq_plano_p, sysdate);
			end if;
		end if;

		if	(ie_insere_w = 'N') then
			goto final;
		end if;

	end if;*/
	-- CD_ITEM_P
	if (cd_item_p IS NOT NULL AND cd_item_p::text <> '') then
		ie_insere_w	:= pls_obter_se_proc_prestador( nr_seq_prestador_w,
								null,
								cd_item_p,
								ie_origem_proced_p,
								null,
								clock_timestamp(),
								null,
								null,
								null,
								null,
								null);

		if (ie_proc_especialidade_p	= 'S') then
			open C02;
			loop
			fetch C02 into
				ie_estrutura_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
			end loop;
			close C02;

			if (ie_estrutura_w	= 'N') then
				ie_insere_w	:= 'N';
				goto final;
			end if;
		end if;

		if (ie_insere_w = 'N') and (ie_proc_especialidade_p = 'N') then
			goto final;
		end if;
	end if;

	-- CD_ESPECIALIDADE_P
	if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		from	pls_prestador_med_espec a
		where	a.cd_pessoa_fisica	= cd_medico_w
		and	a.cd_especialidade	= cd_especialidade_p
		and	a.nr_seq_prestador	= nr_seq_prestador_w
		and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
		and	coalesce(a.ie_guia_medico,'S') = 'S' LIMIT 1;
		exception
			when others then
			ie_insere_w	:= 'N';
		end;

		if (ie_insere_w = 'N') then
			begin
			select	'S'
			into STRICT	ie_insere_w
			from	pls_prestador_med_espec a
			where	coalesce(a.cd_pessoa_fisica::text, '') = ''
			and	a.cd_especialidade	= cd_especialidade_p
			and	a.nr_seq_prestador	= nr_seq_prestador_w
			and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
			and	coalesce(a.ie_guia_medico,'S') = 'S' LIMIT 1;
			exception
				when others then
				ie_insere_w	:= 'N';
				goto final;
			end;
		end if;
	end if;

	-- aaschlote 29/10/2013 OS 620041
	if (nr_seq_area_atuacao_p IS NOT NULL AND nr_seq_area_atuacao_p::text <> '') then
		select	count(1)
		into STRICT	qt_registros_w
		from	PLS_PRESTADOR_MED_ESPEC
		where	nr_seq_prestador	= nr_seq_prestador_w
		and	NR_SEQ_AREA_ATUACAO	= nr_seq_area_atuacao_p
		and	clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(dt_fim_vigencia, clock_timestamp()))  LIMIT 1;

		if (qt_registros_w = 0) then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_prestador_med_espec		b,
				pls_prest_med_espec_adic	a
			where	a.nr_seq_prest_med_espec	= b.nr_sequencia
			and	b.nr_seq_prestador		= nr_seq_prestador_w
			and	a.NR_SEQ_AREA_ATUACAO		= nr_seq_area_atuacao_p
			and	clock_timestamp() between coalesce(b.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(b.dt_fim_vigencia, clock_timestamp()))  LIMIT 1;

		else
			ie_insere_w	:= 'S';
		end if;

		if (qt_registros_w	= 0) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	qt_registros_w	:= 0;

	-- NR_SEQ_TIPO_PRESTADOR
	if (coalesce(nr_seq_tipo_prestador_p,0) > 0) then
		begin
		select	'S'
		into STRICT	ie_insere_w
		from	pls_prestador
		where	nr_sequencia		= nr_seq_prestador_w
		and	nr_seq_tipo_prestador	= nr_seq_tipo_prestador_p;
		exception
			when others then
			ie_insere_w	:= 'N';
		end;

		if (ie_insere_w = 'N') then
			begin
			select	'S'
			into STRICT	ie_insere_w
			from	pls_prestador_tipo
			where	clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp() - interval '1 days') and coalesce(dt_fim_vigencia, clock_timestamp() + interval '1 days')
			and	nr_seq_prestador	= nr_seq_prestador_w
			and	nr_seq_tipo		= nr_seq_tipo_prestador_p;
			exception
				when others then
				ie_insere_w	:= 'N';
				goto final;
			end;
		end if;
	end if;

	-- Verifica se o prestador corresponde com o tipo de guia médico vinculado
	if (ie_sem_tipo_guia_w <> 'A') then
		select	count(1)
		into STRICT	qt_vinculo_w
		from	pls_tipo_guia_med_partic	b
		where	b.nr_seq_prestador	= nr_seq_prestador_w
		and	b.ie_entra_portal	= 'S'
		and	b.ie_entra_guia_medico	= 'S'  LIMIT 1;

		if	(qt_vinculo_w > 0 AND ie_sem_tipo_guia_w = 'S') or
			(qt_vinculo_w = 0 AND ie_sem_tipo_guia_w = 'N') then
			ie_insere_w := 'N';
			goto final;
		end if;
	end if;

	if (ie_tipo_p = 1) and (ie_tipo_prestador_w = 'PJ2') then
		ie_insere_w	:= 'N';
		goto final;

	elsif (ie_tipo_p = 2) then
		if (ie_tipo_prestador_w = 'PJ1') then
			ie_insere_w	:= 'N';
			goto final;
		end if;

		if (ie_prestador_w	= 'N') then
			nr_seq_prestador_w	:= '';
		end if;
	end if;

	if (ie_tipo_prestador_w	= 'PF') and (ie_agrupar_especialidade_w = 'S') then
		select	count(1)
		into STRICT	qt_registros_w
		from	w_pls_guia_medico
		where	nr_seq_prestador = nr_seq_prestador_w
		and	((nm_usuario	= nm_usuario_p) or (dt_atualizacao < clock_timestamp() - interval '7 days'))  LIMIT 1;

	elsif	((ie_tipo_prestador_w	= 'PJ1') or (ie_tipo_prestador_w	= 'PJ2')) and (ie_agrupar_especialidade_w = 'S') then
		select	count(1)
		into STRICT	qt_registros_w
		from	w_pls_guia_medico
		where	nr_seq_prestador	= nr_seq_prestador_w
		and	((nm_usuario = nm_usuario_p) or (dt_atualizacao	< clock_timestamp() - interval '7 days'))
		and	cd_medico	= cd_medico_w  LIMIT 1;
	end if;

	cd_cep_w	:= null;

	if (qt_registros_w	= 0) then
		if (ie_tipo_prestador_w = 'PJ1') then
			open C04;
			loop
			fetch C04 into
				ie_tipo_compl_prest_w,
				nr_seq_end_guia_medico_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				ie_insere_w := 'S';
				SELECT * FROM pls_obter_dados_end_prest_gm(	null, cd_cgc_prestador_w, ie_tipo_compl_prest_w, 'N', nr_seq_end_guia_medico_w, null, ie_origem_p, ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w) INTO STRICT ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w;

				if (((ie_tipo_prestador_w = 'PJ1') or (ie_tipo_prestador_w = 'PJ2')) and (coalesce(ds_website_w::text, '') = '')) then
					select	max(a.ds_site_internet)
					into STRICT	ds_website_w
					from	pessoa_juridica a
					where	a.cd_cgc = (SELECT b.cd_cgc from pls_prestador b where b.nr_sequencia = nr_seq_prestador_w);
				end if;

				if (nr_seq_bairro_p IS NOT NULL AND nr_seq_bairro_p::text <> '') and (ie_insere_w = 'S')then
					ie_insere_w	:= pls_obter_se_cep_bairro(	nr_seq_bairro_p,
											cd_cep_w);
				end if;

				if (coalesce(cd_municipio_ibge_p, cd_municipio_ibge_w) <> cd_municipio_ibge_w) then
					ie_insere_w := 'N';
				end if;

				ds_area_atuacao_med_w := pls_obter_area_atuac_guia_med(nr_seq_prestador_w, null, nr_seq_area_atuacao_p, nm_usuario_p, cd_estabelecimento_p, cd_especialidades_med_w, ie_agrupar_especialidade_w);

				if (nr_seq_area_atuacao_p IS NOT NULL AND nr_seq_area_atuacao_p::text <> '') and (coalesce(ds_area_atuacao_med_w::text, '') = '') then
					ie_insere_w := 'N';
				end if;

				if (ie_insere_w = 'S') then
					ie_apalc_w	:= 'N';
					ie_adicq_w	:= 'N';
					ie_aona_w	:= 'N';
					ie_acba_w	:= 'N';
					ie_aiqg_w	:= 'N';

					open certificacoes_c;
					loop
					fetch certificacoes_c into
						ie_acreditacao_w;
					EXIT WHEN NOT FOUND; /* apply on certificacoes_c */
						begin
						if (ie_acreditacao_w = 'ACBA') then
							ie_acba_w	:= 'S';

						elsif (ie_acreditacao_w = 'ADICQ') then
							ie_adicq_w	:= 'S';

						elsif (ie_acreditacao_w = 'AIQG') then
							ie_aiqg_w	:= 'S';

						elsif (ie_acreditacao_w = 'AONA') then
							ie_aona_w	:= 'S';

						elsif (ie_acreditacao_w = 'APALC') then
							ie_apalc_w	:= 'S';
						end if;
						end;
					end loop;
					close certificacoes_c;

					select	nextval('w_pls_guia_medico_seq')
					into STRICT	nr_seq_guia_medico_w
					;

					insert into w_pls_guia_medico(nr_sequencia, nr_seq_prestador, cd_medico,
						cd_municipio_ibge, dt_atualizacao, nm_usuario,
						cd_cgc_prestador, cd_pf_prestador, nr_crm,
						ds_endereco, nr_endereco, ds_complemento,
						ds_bairro, cd_cep, nr_telefone_prest,
						ds_especialidades_med, ds_email, ds_website,
						nr_ramal, sg_estado, nr_ddd, nr_telefone,nr_ddd_fax,ds_fax,ds_fone_adic,
						cd_prestador, ds_tipo_prestador,cd_estabelecimento,
						ie_notivisa, ie_pos_grad_360, ie_residencia, ie_qualiss,
						ie_apalc, ie_adicq, ie_aona, ie_acba, ie_aiqg,
						ie_especialista, ie_ausente, ds_area_atuacao_med, ie_historico_guia_medico)
					values (nr_seq_guia_medico_w, nr_seq_prestador_w, null,
						cd_municipio_ibge_w, clock_timestamp(), nm_usuario_p,
						cd_cgc_prestador_w, null, null,
						ds_endereco_w, obter_somente_numero(nr_endereco_w), ds_complemento_w,
						ds_bairro_w, cd_cep_w, nr_telefone_w,
						ds_especialidades_w, ds_email_w, ds_website_w,
						nr_ramal_w, sg_estado_w, substr(nr_ddd_telefone_w, 2, 2), nr_tel_simples_w,nr_ddd_fax_w,ds_fax_w,ds_fone_adic_w,
						cd_prestador_w, ds_tipo_prestador_w,cd_estabelecimento_p,
						ie_notivisa_w, ie_pos_grad_360_w, ie_residencia_saude_w, ie_particip_qualiss_ans_w,
						ie_apalc_w, ie_adicq_w, ie_aona_w, ie_acba_w, ie_aiqg_w,
						'N', ie_ausente_w, ds_area_atuacao_med_w, ie_historico_guia_medico_w);

					if (ie_agrupar_especialidade_w = 'N') and (cd_especialidades_med_w IS NOT NULL AND cd_especialidades_med_w::text <> '') then
						insert into w_pls_guia_med_espec(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_guia_medico,
							cd_especialidade)
						values (nextval('w_pls_guia_med_espec_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_medico_w,
							cd_especialidades_med_w);
					end if;

					if (ds_especialidades_w IS NOT NULL AND ds_especialidades_w::text <> '') then
						open C09;
						loop
						fetch C09 into
							cd_especialidade_guia_w;
						EXIT WHEN NOT FOUND; /* apply on C09 */
							begin
							insert into w_pls_guia_med_espec(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_guia_medico,
								cd_especialidade)
							values (nextval('w_pls_guia_med_espec_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_medico_w,
								cd_especialidade_guia_w);
							end;
						end loop;
						close C09;
					end if;
				end if;
				end;
			end loop;
			close C04;
		end if;

		cd_cep_w	:= null;

		open C03;
		loop
		fetch C03 into
			ie_tipo_endereco_w,
			nr_seq_end_guia_medico_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			ie_insere_c03_w	 := 'S';
			select	max(nr_seq_compl_pf_tel_adic),
				max(nr_seq_tipo_compl_adic)
			into STRICT	nr_seq_compl_pf_tel_adic_w,
				nr_seq_tipo_compl_adic_guia_w
			from	pls_endereco_guia_medico
			where	nr_sequencia	 = nr_seq_end_guia_medico_w;

			SELECT * FROM pls_obter_dados_end_prest_gm(	cd_medico_w, cd_cgc_prestador_w, ie_tipo_endereco_w, 'N', nr_seq_compl_pf_tel_adic_w, nr_seq_tipo_compl_adic_guia_w, ie_origem_p, ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w) INTO STRICT ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w;

			if (((ie_tipo_prestador_w = 'PJ1') or (ie_tipo_prestador_w = 'PJ2')) and (coalesce(ds_website_w::text, '') = '')) then
				select	max(a.ds_site_internet)
				into STRICT	ds_website_w
				from	pessoa_juridica a
				where	a.cd_cgc = (SELECT b.cd_cgc from pls_prestador b where b.nr_sequencia = nr_seq_prestador_w);
			end if;

			if (nr_seq_bairro_p IS NOT NULL AND nr_seq_bairro_p::text <> '') and (ie_insere_c03_w	 = 'S') then
				ie_insere_c03_w		:= pls_obter_se_cep_bairro( nr_seq_bairro_p, cd_cep_w);
			end if;

			if (ie_tipo_prestador_w = 'PF') then
				ds_especialidades_med_w	:= '';

					ds_especialidades_med_w := pls_obter_espec_prest_medico(	ds_especialidades_med_w, 1, nr_seq_prestador_w, cd_medico_w, cd_especialidade_p, nr_seq_end_guia_medico_w, nr_seq_area_atuacao_p, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
				if (ie_agrupar_especialidade_w = 'S') then

					select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_especialista_w
					from	medico_especialidade	a
					where	a.cd_pessoa_fisica	= cd_medico_w
					and	(nr_rqe IS NOT NULL AND nr_rqe::text <> '');

				-- aaschlote 11/04/2014 - OS - 725593 - Verificar a RQE do médico por especialidade
				elsif (ie_agrupar_especialidade_w = 'N') then
					begin
					select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_especialista_w
					from	medico_especialidade	a
					where	a.cd_pessoa_fisica	= cd_medico_w
					and	a.cd_especialidade	= cd_especialidades_med_w
					and	(a.nr_rqe IS NOT NULL AND a.nr_rqe::text <> '');
					exception
					when others then
						ie_especialista_w	:= 'N';
					end;
				end if;

			else
				if (ie_tipo_prestador_w = 'PJ2') then
						ds_especialidades_w := pls_obter_espec_prest_medico(	ds_especialidades_w, 3, nr_seq_prestador_w, cd_medico_w, cd_especialidade_p, nr_seq_end_guia_medico_w, nr_seq_area_atuacao_p, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
					if (coalesce(ds_especialidades_w::text, '') = '') and (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') then
						ie_insere_c03_w	 := 'N';
					end if;
				end if;

				ds_especialidades_med_w	:= ds_especialidades_w;
				ie_especialista_w	:= 'N';
			end if;

			if (coalesce(cd_municipio_ibge_p,cd_municipio_ibge_w) <> cd_municipio_ibge_w) then
				ie_insere_c03_w	 := 'N';
			end if;

			if (coalesce(ie_endereco_espec_p, 'N') = 'S') and (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') and (ie_tipo_prestador_w = 'PF') then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_endereco_guia_medico a,
					pls_end_guia_med_espec b
				where	a.nr_sequencia		= b.nr_seq_endereco
				and	a.nr_seq_prestador	= nr_seq_prestador_w
				and	a.ie_tipo_endereco	= ie_tipo_endereco_ww
				and	((coalesce(cd_especialidade_p::text, '') = '') or (b.cd_especialidade = cd_especialidade_p));

				if (qt_registro_w = 0) then
					ie_insere_c03_w		:= 'N';
				end if;

				if (qt_registro_w = 0) then
					select	count(1)
					into STRICT	qt_registro_w
					from	especialidade_medica 	d,
						pls_end_guia_med_espec	c,
						pls_prestador_med_espec a
					where	a.cd_especialidade	= d.cd_especialidade
					and	c.cd_especialidade 	= a.cd_especialidade
					and	c.nr_seq_endereco	= nr_seq_end_guia_medico_w
					and	a.cd_pessoa_fisica	= cd_medico_w
					and	a.nr_seq_prestador	= nr_seq_prestador_w
					and	((coalesce(cd_especialidade_p::text, '') = '') or (a.cd_especialidade = cd_especialidade_p))
					and	coalesce(a.ie_guia_medico,'S')	= 'S'
					and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()));

					if (qt_registro_w > 0) then
						ie_insere_c03_w		:= 'S';
					end if;
				end if;
			end if;

			ds_area_atuacao_med_w := pls_obter_area_atuac_guia_med(nr_seq_prestador_w, null, nr_seq_area_atuacao_p, nm_usuario_p, cd_estabelecimento_p, cd_especialidades_med_w, ie_agrupar_especialidade_w);

			if (nr_seq_area_atuacao_p IS NOT NULL AND nr_seq_area_atuacao_p::text <> '') and (coalesce(ds_area_atuacao_med_w::text, '') = '') then
				ie_insere_c03_w := 'N';
			end if;

			if (ie_insere_c03_w = 'S') then
				ie_apalc_w	:= 'N';
				ie_adicq_w	:= 'N';
				ie_aona_w	:= 'N';
				ie_acba_w	:= 'N';
				ie_aiqg_w	:= 'N';

				open certificacoes_c;
				loop
				fetch certificacoes_c into
					ie_acreditacao_w;
				EXIT WHEN NOT FOUND; /* apply on certificacoes_c */
					begin
					if (ie_acreditacao_w = 'ACBA') then
						ie_acba_w	:= 'S';

					elsif (ie_acreditacao_w = 'ADICQ') then
						ie_adicq_w	:= 'S';

					elsif (ie_acreditacao_w = 'AIQG') then
						ie_aiqg_w	:= 'S';

					elsif (ie_acreditacao_w = 'AONA') then
						ie_aona_w	:= 'S';

					elsif (ie_acreditacao_w = 'APALC') then
						ie_apalc_w	:= 'S';
					end if;
					end;
				end loop;
				close certificacoes_c;

				nr_crm_w	:= null;
				if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
					begin
					nr_crm_w	:= substr(obter_crm_medico(cd_medico_w),1,20);
					exception
					when others then
						nr_crm_w	:= null;
					end;
				end if;

				select	nextval('w_pls_guia_medico_seq')
				into STRICT	nr_seq_guia_medico_w
				;

				insert into w_pls_guia_medico(nr_sequencia, nr_seq_prestador, cd_medico,
					cd_municipio_ibge, dt_atualizacao, nm_usuario,
					cd_cgc_prestador, cd_pf_prestador, nr_crm,
					ds_endereco, nr_endereco, ds_complemento,
					ds_bairro, cd_cep, nr_telefone_prest,
					ds_especialidades_med, ds_email, ds_website,
					nr_ramal, sg_estado, nr_ddd, nr_telefone,nr_ddd_fax,ds_fax,ds_fone_adic,
					cd_prestador, ds_tipo_prestador,cd_estabelecimento,
					ie_notivisa, ie_pos_grad_360, ie_residencia, ie_qualiss,
					ie_apalc, ie_adicq, ie_aona, ie_acba, ie_aiqg,
					ie_especialista, ie_ausente, ds_area_atuacao_med, ie_historico_guia_medico)
				values (nr_seq_guia_medico_w, nr_seq_prestador_w, cd_medico_w,
					coalesce(cd_municipio_ibge_w,cd_municipio_ibge_p), clock_timestamp(), nm_usuario_p,
					cd_cgc_prestador_w, cd_pf_prestador_w, nr_crm_w,
					ds_endereco_w, obter_somente_numero(nr_endereco_w), ds_complemento_w,
					ds_bairro_w, cd_cep_w, nr_telefone_w,
					ds_especialidades_med_w, ds_email_w, ds_website_w,
					nr_ramal_w, sg_estado_w, substr(nr_ddd_telefone_w, 2, 2), nr_tel_simples_w,nr_ddd_fax_w,ds_fax_w,ds_fone_adic_w,
					cd_prestador_w, ds_tipo_prestador_w,cd_estabelecimento_p,
					ie_notivisa_w, ie_pos_grad_360_w, ie_residencia_saude_w, ie_particip_qualiss_ans_w,
					ie_apalc_w, ie_adicq_w, ie_aona_w, ie_acba_w, ie_aiqg_w,
					ie_especialista_w, ie_ausente_w, ds_area_atuacao_med_w, ie_historico_guia_medico_w);

				if (ie_agrupar_especialidade_w = 'N') and (cd_especialidades_med_w IS NOT NULL AND cd_especialidades_med_w::text <> '') then
					insert into w_pls_guia_med_espec(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_guia_medico,
						cd_especialidade)
					values (nextval('w_pls_guia_med_espec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_medico_w,
						cd_especialidades_med_w);
				end if;

				if (ds_especialidades_med_w IS NOT NULL AND ds_especialidades_med_w::text <> '') then
					if (ie_tipo_prestador_w = 'PF') then
						open C07;
						loop
						fetch C07 into
							cd_especialidades_med_w;
						EXIT WHEN NOT FOUND; /* apply on C07 */
							begin
							insert into w_pls_guia_med_espec(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_guia_medico,
								cd_especialidade)
							values (nextval('w_pls_guia_med_espec_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_medico_w,
								cd_especialidades_med_w);
							end;
						end loop;
						close C07;
					else
						open C09;
						loop
						fetch C09 into
							cd_especialidade_guia_w;
						EXIT WHEN NOT FOUND; /* apply on C09 */
							begin
							insert into w_pls_guia_med_espec(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_guia_medico,
								cd_especialidade)
							values (nextval('w_pls_guia_med_espec_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_medico_w,
								cd_especialidade_guia_w);
							end;
						end loop;
						close C09;
					end if;
				end if;

			end if;

			nr_seq_compl_pf_tel_adic_w	:= null;

			if (ie_insere_c03_w = 'S') then
				ie_insere_c03_w := null;
				ie_insere_w := null;
			end if;

			end;
		end loop;
		close C03;

		cd_cep_w	:= null;

		SELECT * FROM pls_obter_dados_end_prest_gm(	cd_medico_w, cd_cgc_prestador_w, ie_tipo_endereco_ww, 'S', coalesce(nr_seq_compl_pf_tel_adic_ww, nr_seq_compl_pj_w), nr_seq_tipo_compl_adic_w, ie_origem_p, ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w) INTO STRICT ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w;

		if (((ie_tipo_prestador_w = 'PJ1') or (ie_tipo_prestador_w = 'PJ2')) and (coalesce(ds_website_w::text, '') = '')) then
			select	max(a.ds_site_internet)
			into STRICT	ds_website_w
			from	pessoa_juridica a
			where	a.cd_cgc = (SELECT b.cd_cgc from pls_prestador b where b.nr_sequencia = nr_seq_prestador_w);
		end if;

		if (nr_seq_bairro_p IS NOT NULL AND nr_seq_bairro_p::text <> '') and (ie_insere_w = 'S') then
			ie_insere_w	:= pls_obter_se_cep_bairro(	nr_seq_bairro_p,
									cd_cep_w);
		end if;

		if (ie_agrupar_especialidade_w = 'S') then
			ds_especialidades_med_w	:= '';
				ds_especialidades_med_w := pls_obter_espec_prest_medico(	ds_especialidades_med_w, 2, nr_seq_prestador_w, cd_medico_w, cd_especialidade_p, null, nr_seq_area_atuacao_p, nr_seq_tipo_guia_p, ie_tipo_prestador_w, ie_gera_apenas_espec_prest_w, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);

			if (ds_especialidades_med_w <> ' ') then
				ds_especialidades_w	:= ds_especialidades_med_w;
			end if;
		end if;

		if (coalesce(cd_municipio_ibge_p,cd_municipio_ibge_w) <> cd_municipio_ibge_w) then
			ie_insere_w	:= 'N';
		end if;

		if (coalesce(ie_endereco_espec_p, 'N') = 'S') and (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') and (ie_tipo_prestador_w = 'PF') then
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_endereco_guia_medico a,
				pls_end_guia_med_espec b
			where	a.nr_sequencia		= b.nr_seq_endereco
			and	a.nr_seq_prestador	= nr_seq_prestador_w
			and	a.ie_tipo_endereco	= ie_tipo_endereco_ww
			and	((coalesce(cd_especialidade_p::text, '') = '') or (b.cd_especialidade = cd_especialidade_p));

			if (qt_registro_w = 0) then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_prestador_med_espec a
				where	a.nr_seq_prestador	= nr_seq_prestador_w
				and	coalesce(a.ie_endereco_principal,' N') = 'S'
				and	((coalesce(cd_especialidade_p::text, '') = '') or (a.cd_especialidade = cd_especialidade_p))
				and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()));

				if (qt_registro_w = 0) then
					ie_insere_w	:= 'N';
				else
					ie_insere_w	:= 'S';
				end if;
			end if;
		end if;

		ds_area_atuacao_med_w := pls_obter_area_atuac_guia_med(nr_seq_prestador_w, null, nr_seq_area_atuacao_p, nm_usuario_p, cd_estabelecimento_p, cd_especialidades_med_w, ie_agrupar_especialidade_w);

		if (nr_seq_area_atuacao_p IS NOT NULL AND nr_seq_area_atuacao_p::text <> '') and (coalesce(ds_area_atuacao_med_w::text, '') = '') then
			ie_insere_w := 'N';
		end if;

		if (ie_insere_w = 'S') then
			ie_apalc_w	:= 'N';
			ie_adicq_w	:= 'N';
			ie_aona_w	:= 'N';
			ie_acba_w	:= 'N';
			ie_aiqg_w	:= 'N';

			open certificacoes_c;
			loop
			fetch certificacoes_c into
				ie_acreditacao_w;
			EXIT WHEN NOT FOUND; /* apply on certificacoes_c */
				begin
				if (ie_acreditacao_w = 'ACBA') then
					ie_acba_w	:= 'S';
				elsif (ie_acreditacao_w = 'ADICQ') then
					ie_adicq_w	:= 'S';
				elsif (ie_acreditacao_w = 'AIQG') then
					ie_aiqg_w	:= 'S';
				elsif (ie_acreditacao_w = 'AONA') then
					ie_aona_w	:= 'S';
				elsif (ie_acreditacao_w = 'APALC') then
					ie_apalc_w	:= 'S';
				end if;
				end;
			end loop;
			close certificacoes_c;

			if (ie_tipo_prestador_w = 'PF') then
				if (ie_agrupar_especialidade_w = 'S') then
					select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_especialista_w
					from	medico_especialidade	a
					where	a.cd_pessoa_fisica	= cd_medico_w
					and	(nr_rqe IS NOT NULL AND nr_rqe::text <> '');
				elsif (ie_agrupar_especialidade_w = 'N') then
					-- aaschlote 11/04/2014 - OS - 725593 - Verificar a RQE do médico por especialidade
					begin
					select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_especialista_w
					from	medico_especialidade	a
					where	a.cd_pessoa_fisica	= cd_medico_w
					and	a.cd_especialidade	= cd_especialidades_med_w
					and	(a.nr_rqe IS NOT NULL AND a.nr_rqe::text <> '');
					exception
					when others then
						ie_especialista_w	:= 'N';
					end;
				end if;
			else

				select	count(1)
				into STRICT	qt_especialidade_w
				from	especialidade_medica	a,
					medico_especialidade	b,
					pessoa_fisica		c
				where	a.cd_especialidade = b.cd_especialidade
				and	b.cd_pessoa_fisica = c.cd_pessoa_fisica
				and	c.cd_pessoa_fisica = cd_medico_w
				and	(b.nr_rqe IS NOT NULL AND b.nr_rqe::text <> '');

				if (coalesce(qt_especialidade_w, 0) > 0) then
					ie_especialista_w	:= 'S';
				else
					ie_especialista_w	:= 'N';
				end if;

			end if;

			nr_crm_w	:= null;
			if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
				begin
				nr_crm_w	:= substr(obter_crm_medico(cd_medico_w),1,20);
				exception
				when others then
					nr_crm_w	:= null;
				end;
			end if;

			select	nextval('w_pls_guia_medico_seq')
			into STRICT	nr_seq_guia_medico_w
			;

			insert into w_pls_guia_medico(nr_sequencia, nr_seq_prestador, cd_medico,
				cd_municipio_ibge, dt_atualizacao, nm_usuario,
				cd_cgc_prestador, cd_pf_prestador, nr_crm,
				ds_endereco, nr_endereco, ds_complemento,
				ds_bairro, cd_cep, nr_telefone_prest,
				ds_especialidades_med, ds_email, ds_website,
				nr_ramal, sg_estado, nr_ddd, nr_telefone,nr_ddd_fax,ds_fax,ds_fone_adic,
				cd_prestador, ds_tipo_prestador,cd_estabelecimento,
				ie_notivisa, ie_pos_grad_360, ie_residencia, ie_qualiss,
				ie_apalc, ie_adicq, ie_aona, ie_acba, ie_aiqg,
				ie_especialista, ie_ausente, ds_area_atuacao_med, ie_historico_guia_medico)
			values (nr_seq_guia_medico_w, nr_seq_prestador_w, cd_medico_w,
				coalesce(cd_municipio_ibge_w,cd_municipio_ibge_p), clock_timestamp(), nm_usuario_p,
				cd_cgc_prestador_w, cd_pf_prestador_w, nr_crm_w,
				ds_endereco_w, obter_somente_numero(nr_endereco_w), ds_complemento_w,
				ds_bairro_w, cd_cep_w, nr_telefone_w,
				ds_especialidades_w, ds_email_w, ds_website_w,
				nr_ramal_w, sg_estado_w, substr(nr_ddd_telefone_w, 2, 2), nr_tel_simples_w,nr_ddd_fax_w,substr(ds_fax_w, 1, 20),ds_fone_adic_w,
				cd_prestador_w, ds_tipo_prestador_w,cd_estabelecimento_p,
				ie_notivisa_w, ie_pos_grad_360_w, ie_residencia_saude_w, ie_particip_qualiss_ans_w,
				ie_apalc_w, ie_adicq_w, ie_aona_w, ie_acba_w, ie_aiqg_w,
				ie_especialista_w, ie_ausente_w, ds_area_atuacao_med_w, ie_historico_guia_medico_w);

			if (ie_agrupar_especialidade_w = 'N') and (cd_especialidades_med_w IS NOT NULL AND cd_especialidades_med_w::text <> '') then
				insert into w_pls_guia_med_espec(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_guia_medico,
					cd_especialidade)
				values (nextval('w_pls_guia_med_espec_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_medico_w,
					cd_especialidades_med_w);
			end if;

			if (ds_especialidades_w IS NOT NULL AND ds_especialidades_w::text <> '') then
				cd_especialidades_med_w := null;
				open C08;
				loop
				fetch C08 into
					cd_especialidades_med_w;
				EXIT WHEN NOT FOUND; /* apply on C08 */
					begin
					insert into w_pls_guia_med_espec(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_guia_medico,
						cd_especialidade)
					values (nextval('w_pls_guia_med_espec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_medico_w,
						cd_especialidades_med_w);
					end;
				end loop;
				close C08;

				if (coalesce(cd_especialidades_med_w::text, '') = '') then
					open C09;
					loop
					fetch C09 into
						cd_especialidade_guia_w;
					EXIT WHEN NOT FOUND; /* apply on C09 */
						begin
						insert into w_pls_guia_med_espec(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_guia_medico,
							cd_especialidade)
						values (nextval('w_pls_guia_med_espec_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_medico_w,
							cd_especialidade_guia_w);
						end;
					end loop;
					close C09;
				end if;
			end if;
		end if;
	end if;

	<<final>>
	ie_insere_w	:= ie_insere_w; -- Deve existir uma linha após o <<Final>>
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_guia_medico_mobile ( nr_seq_prestador_p bigint, cd_medico_p text, cd_item_p bigint, ie_origem_proced_p bigint, cd_municipio_ibge_p text, cd_especialidade_p bigint, ie_proc_especialidade_p text, nr_seq_tipo_prestador_p bigint, ie_tipo_p bigint, ie_origem_p text, nr_seq_tipo_guia_p text, nr_seq_plano_p bigint, sg_estado_p text, nr_seq_bairro_p bigint, ie_filtro_portal_p text, nr_seq_regiao_p text, ie_sem_tipo_guia_p text, ie_instituicao_acred_p text, ie_nivel_acreditacao_p bigint, cd_prestador_p text, ie_cd_prestador_p text, nm_prestador_p text, nm_medico_p text, nm_usuario_p text, ie_carater_internacao_p text, cd_estabelecimento_p bigint, ie_endereco_espec_p text, nr_seq_area_atuacao_p bigint, ie_odontologico_p text, ie_ausentes_p w_pls_guia_medico.ie_ausente%type, ie_tipo_relacao_p text, nr_seq_grupo_servico_p pls_prest_grupo_serv_gm.nr_seq_grupo_servico%type, nm_medico_ou_prestador_p text ) FROM PUBLIC;

