-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recalcular_horario_prescricao ( cd_intervalo_p text, dt_Hora_Inicio_p timestamp, nr_hora_validade_p bigint, cd_material_p bigint, nr_intervalo_p INOUT bigint, ds_horarios_p INOUT text, ie_Solucao_p text, cd_procedimento_p bigint, nr_prescricao_p bigint, nr_sequencia_p bigint) AS $body$
DECLARE


ds_hora_w					varchar(07);
ds_horarios_w				varchar(2000);
ds_horarios_ww				varchar(2000);
ds_horario_mat_set_w			varchar(2000);
ds_horarios_fixo_w			varchar(2000);
nr_Horas_intervalo_w		smallint;
hr_prescricao_w				timestamp;
mascara_data_w				varchar(10);
dt_prescricao_w				timestamp;
dt_medic_w					timestamp;
ds_dt_prescr_w				varchar(10);
nr_hora_validade_w			bigint;
dt_prim_horario_presc_w		timestamp;
dt_validade_prescr_w		timestamp;
dt_horario_w				timestamp;
ie_se_necessario_w			varchar(1);
ie_acm_w					varchar(1);
k							integer;
qt_dia_adic_w				bigint := 0;
qt_pertence_w				bigint;
nr_seq_proc_int_w			bigint;
ie_ctrl_glic_w				varchar(3);
qt_caracter_espaco_w		bigint;
ds_caracter_espaco_w		varchar(10);
cd_funcao_origem_w			prescr_medica.cd_funcao_origem%type;
ie_operacao_w 				intervalo_prescricao.ie_operacao%type;
qt_operacao_w				intervalo_prescricao.qt_operacao%type;
ds_prescricao_w				intervalo_prescricao.ds_prescricao%type;



BEGIN
ie_ctrl_glic_w := '';

select	coalesce(max(ie_se_necessario),'N'),
		coalesce(max(ie_acm),'N'),
		coalesce(max(nr_seq_proc_interno), 0)
into STRICT	ie_se_necessario_w,
		ie_acm_w,
		nr_seq_proc_int_w
from	prescr_procedimento
where	nr_prescricao	= nr_prescricao_p
and		nr_sequencia	= nr_sequencia_p;

select	dt_prescricao,
		to_char(coalesce(dt_inicio_prescr,dt_prescricao),'dd/mm/yyyy'),
		coalesce(dt_validade_prescr,dt_prescricao + nr_horas_validade/24),
		coalesce(dt_primeiro_horario,dt_prescricao),
		coalesce(qt_caracter_espaco,1),
		nr_horas_validade,
		cd_funcao_origem
into STRICT	dt_prescricao_w,
		ds_dt_prescr_w,
		dt_validade_prescr_w,
		dt_prim_horario_presc_w,
		qt_caracter_espaco_w,
		nr_hora_validade_w,
		cd_funcao_origem_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

ds_caracter_espaco_w	:= ' ';
if (qt_caracter_espaco_w = 2) then
	ds_caracter_espaco_w	:= '  ';
elsif (qt_caracter_espaco_w = 3) then
	ds_caracter_espaco_w	:= '   ';
elsif (qt_caracter_espaco_w = 4) then
	ds_caracter_espaco_w	:= '    ';
elsif (qt_caracter_espaco_w > 4) then
	ds_caracter_espaco_w	:= '     ';
end if;


dt_medic_w		:= to_date(ds_dt_prescr_w ||' '||to_char(dt_Hora_Inicio_p,'hh24:mi'),'dd/mm/yyyy hh24:mi');


if (to_char(dt_prim_horario_presc_w,'hh24:mi') > to_char(dt_Hora_Inicio_p,'hh24:mi')) then
	dt_medic_w	:= dt_medic_w + 1;
end if;

if (length(cd_material_p) < 8) then  /*Edilson em 17/12/08 OS 121327 Para que nÃ£o seja feito para procedimentos*/
	nr_hora_validade_w	:= (dt_validade_prescr_w - dt_medic_w) * 24;
end if;

if (cd_funcao_origem_w = 2314) and (nr_hora_validade_w > 24) then
	nr_hora_validade_w := 24;
end if;

if (to_char(dt_Hora_Inicio_p, 'mi') <> '00') then
	Mascara_data_w 			:= 'hh24:mi';
else
	Mascara_data_w 			:= 'hh24';
end if;

select	max(ds_horarios)
into STRICT	ds_horario_mat_set_w
from	intervalo_material
where	cd_intervalo	= cd_intervalo_p
and		cd_material		= cd_material_p;

if (coalesce(ds_horario_mat_set_w::text, '') = '') then

	select	max(ds_horarios)
	into STRICT	ds_horario_mat_set_w
	from	intervalo_setor
	where	cd_intervalo	= cd_intervalo_p
	and		cd_material	= cd_material_p;

end if;

select  coalesce(max(coalesce(ds_horario_mat_set_w, ds_horarios)),''),
		coalesce(max(ie_operacao),''),
		coalesce(max(qt_operacao),1),
		coalesce(max(ds_prescricao),'')
into STRICT	ds_horarios_w,
		ie_operacao_w,
		qt_operacao_w,
		ds_prescricao_w
from	intervalo_prescricao
where	cd_intervalo = cd_intervalo_p;


if (ie_operacao_w = 'F') and (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
	begin
    	nr_Intervalo_p		   	:= qt_operacao_w;
	end;
elsif (ie_operacao_w = 'V') and (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
	begin
	ds_horarios_ww := replace(replace(replace(ds_horarios_w,'  ',' '),'  ',' '),'  ',' ');
	select	padroniza_horario(ds_horarios_ww) || ' '
	into STRICT	ds_horarios_w
	;

	nr_Intervalo_p	:= 0;

	while	(ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') LOOP
		begin
		select	position(' ' in ds_horarios_w)
		into STRICT	k
		;

		if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
			begin
			ds_hora_w		:= substr(ds_horarios_w, 1, k-1);
			ds_hora_w		:= replace(ds_hora_w, ' ','');
			ds_horarios_w		:= substr(ds_horarios_w, k + 1, 2000);

			if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
				qt_dia_adic_w	:= 1;
			elsif (position('AA' in ds_hora_w) > 0) then
				qt_dia_adic_w	:= qt_dia_adic_w + 1;
			end if;

			ds_hora_w	:= replace(ds_hora_w,'A','');
			ds_hora_w	:= replace(ds_hora_w,'A','');

			dt_horario_w	:= to_date(to_char(dt_prescricao_w + qt_dia_adic_w,'dd/mm/yyyy')||' '||replace(ds_hora_w,'A','')||':00','dd/mm/yyyy hh24:mi:ss');

			select	count(*)
			into STRICT	qt_pertence_w
			
			where	dt_horario_w between dt_medic_w and dt_validade_prescr_w;

			if (qt_pertence_w > 0) then
				begin
				ds_horarios_fixo_w	:= ds_horarios_fixo_w || ds_hora_w ||' ';
				nr_Intervalo_p		:= nr_Intervalo_p + 1;
				end;
			end if;

			end;
		elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
			begin
			ds_horarios_w		:= '';
			end;
		end if;

		end;
	END LOOP;
	ds_horarios_w	:= ds_horarios_fixo_w;
	end;
else
    	begin
    	if (nr_intervalo_p > 0) then
        	nr_Horas_intervalo_w 	:= Trunc(nr_Hora_validade_w / nr_intervalo_p);
    	elsif (ie_operacao_w = 'H') then
        	begin
        	nr_Horas_intervalo_w    := qt_operacao_w;
        	nr_Intervalo_p          := Ceil(nr_Hora_validade_w / nr_Horas_intervalo_w);
        	end;
    	elsif (ie_operacao_w = 'X') then
        	begin
        	nr_Intervalo_p         	:= qt_operacao_w;
        	nr_Horas_intervalo_w   	:= floor(nr_Hora_validade_w / nr_Intervalo_p);
        	end;
    	else
        	begin
        	nr_Intervalo_p         	:= 1;
        	nr_Horas_intervalo_w   	:= 0;
        	end;
	end if;

	ds_horarios_w			:= '';
	hr_prescricao_w            	:= dt_hora_inicio_p;

	for i in 1.. nr_intervalo_p LOOP
	    	begin
	    	ds_hora_w		:= to_char(hr_prescricao_w, Mascara_data_w);
		if (substr(ds_hora_w,1,2) = '00') then
			select replace(ds_hora_w, '00','24') into STRICT ds_hora_w;
		end if;
		ds_horarios_w		:= ds_horarios_w || ds_hora_w || ' ';
		hr_prescricao_w      	:= hr_prescricao_w + (nr_horas_intervalo_w / 24);
		end;
	end loop;
	end;
end if;

if (nr_Intervalo_p = 0)  then
    	nr_Intervalo_p			:= 1;
end if;

if (ie_se_necessario_w = 'S') then
	ds_prescricao_w	:= 'SN';
elsif (ie_acm_w = 'S') then
	ds_prescricao_w	:= 'ACM';
end if;

if (nr_intervalo_p = 1) and (ds_prescricao_w in ('ACM', 'SN')) then
     	ds_horarios_p 			:= replace(substr(ds_prescricao_w,1,255),' ',ds_caracter_espaco_w);
else
	ds_horarios_p			:= replace(substr(ds_horarios_w,1,255),' ',ds_caracter_espaco_w);
end if;

if (nr_intervalo_p < 0) then
	nr_intervalo_p	:= 0;
end if;

ie_ctrl_glic_w := obter_ctrl_glic_proc(nr_seq_proc_int_w);


if (ie_ctrl_glic_w <> 'CIG') then
	update	prescr_procedimento
	set	ds_horarios	= ds_horarios_p,
		nr_ocorrencia	= nr_intervalo_p,
		cd_intervalo	= cd_intervalo_p,
		dt_prev_execucao= dt_hora_inicio_p
	where	nr_prescricao	= nr_prescricao_p
	and	cd_procedimento	= cd_procedimento_p
	and	nr_sequencia	= nr_sequencia_p;
else
	update	prescr_procedimento
	set	ds_horarios	= to_char(dt_hora_inicio_p,'hh24:mi'),
		nr_ocorrencia	= nr_intervalo_p,
		cd_intervalo	= cd_intervalo_p,
		dt_prev_execucao= dt_hora_inicio_p
	where	nr_prescricao	= nr_prescricao_p
	and	cd_procedimento	= cd_procedimento_p
	and	nr_sequencia	= nr_sequencia_p;
end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recalcular_horario_prescricao ( cd_intervalo_p text, dt_Hora_Inicio_p timestamp, nr_hora_validade_p bigint, cd_material_p bigint, nr_intervalo_p INOUT bigint, ds_horarios_p INOUT text, ie_Solucao_p text, cd_procedimento_p bigint, nr_prescricao_p bigint, nr_sequencia_p bigint) FROM PUBLIC;

