-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincula_autor_agenda_cir ( nr_seq_autorizacao_p bigint, nr_seq_agenda_p bigint, ie_modo_vinc_p text default 'N', nr_seq_procedimento_p bigint default 0) AS $body$
DECLARE

					
cd_procedimento_w	bigint;
cd_material_w		bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
qt_autorizada_w		bigint;
qt_solicitada_w		double precision;
cd_procedimento_tuss_w	bigint;

cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
cd_medico_w		varchar(10);
nr_sequencia_proc_w	bigint;
nr_seq_opme_w		bigint;
nm_usuario_w		varchar(15) := wheb_usuario_pck.Get_nm_usuario;
qt_existe_w		integer;
cd_cgc_fabricante_w	varchar(14);
nr_seq_marca_w		bigint;
nr_seq_mat_autor_w	bigint;
ie_proc_mat_autor_w	varchar(1) := 'N';					

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		coalesce(qt_autorizada,1),
		coalesce(qt_solicitada,1),
		cd_procedimento_tuss
	from	procedimento_autorizado
	where	nr_sequencia_autor = nr_seq_autorizacao_p
	and	((coalesce(ie_proc_mat_autor_w,'N') = 'N')
	or (coalesce(qt_autorizada,0) > 0))
	and	((coalesce(ie_modo_vinc_p,'N') = 'N')
	or (nr_sequencia = nr_seq_procedimento_p));

C02 CURSOR FOR
	SELECT 	cd_material,
		qt_autorizada,
		qt_solicitada,
		cd_cgc_fabricante,
		nr_seq_marca,
		nr_sequencia
	from	material_autorizado
	where	nr_sequencia_autor = nr_seq_autorizacao_p
	and	((coalesce(ie_proc_mat_autor_w,'N') = 'N')
	or (coalesce(qt_autorizada,0) > 0));



BEGIN

ie_proc_mat_autor_w := obter_param_usuario(3004, 233, obter_perfil_Ativo, nm_usuario_w, wheb_usuario_pck.get_cd_estabelecimento, ie_proc_mat_autor_w);

if (coalesce(nr_seq_autorizacao_p,0) > 0) and (coalesce(nr_seq_agenda_p,0) > 0) then

	update	autorizacao_convenio
	set	nr_seq_agenda		= nr_seq_agenda_p,
		nm_usuario 		= nm_usuario_w,
		dt_atualizacao		= clock_timestamp()		
	where	nr_sequencia		= nr_seq_autorizacao_p
	and	coalesce(nr_seq_agenda::text, '') = '';
	commit;

	select	max(a.cd_convenio),
		max(a.cd_categoria),
		max(a.cd_medico),
		max(a.cd_plano)
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_medico_w,
		cd_plano_w
	from	agenda_paciente a
	where	a.nr_sequencia =  nr_seq_agenda_p;
		
	open C01;
	loop
	fetch C01 into	
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		qt_autorizada_w,
	    	qt_solicitada_w,
		cd_procedimento_tuss_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		select	coalesce(max(nr_seq_agenda),0) + 1
		into STRICT	nr_sequencia_proc_w
		from	agenda_paciente_proc
		where	nr_sequencia = nr_seq_agenda_p;
	
	    	if (qt_autorizada_w = 0) then
	    		qt_autorizada_w := qt_solicitada_w;
	    	end if;
		
		
		insert	into agenda_paciente_proc(
			cd_categoria,               
			cd_convenio,                
			cd_medico,                  			
			cd_plano,                   
			cd_procedimento,
			ds_observacao,              
			dt_atualizacao,                   
			ie_origem_proced,           
			nm_usuario,                 
			nr_seq_agenda,                    
			nr_seq_proc_interno,        
			nr_sequencia,                          
			qt_procedimento ) 
		values (
			cd_categoria_w,               
			cd_convenio_w,                
			cd_medico_w,                  			
			cd_plano_w,                   
			cd_procedimento_w,
			Wheb_mensagem_pck.get_texto(799372),
			clock_timestamp(),                   
			ie_origem_proced_w,           
			nm_usuario_w,                 
			nr_sequencia_proc_w,                    
			nr_seq_proc_interno_w,        
			nr_seq_agenda_p,                          
			qt_autorizada_w);
		
		end;
	end loop;
	close C01;
	
	open C02;
	loop
	fetch C02 into
		cd_material_w,
		qt_autorizada_w,
		qt_solicitada_w,
		cd_cgc_fabricante_w,
		nr_seq_marca_w,
		nr_seq_mat_autor_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		insert into agenda_pac_opme(
			cd_material,
			dt_atualizacao,
			ie_autorizado,
			ie_origem_inf,
			ie_padrao,
			nm_usuario,
			nr_seq_apres,
			nr_sequencia,
			nr_Seq_agenda,
			ie_gerar_autor,
			qt_material)
		values (	cd_material_w,
			clock_timestamp(),
			'A',
			'I',
			'S',
			nm_usuario_w,
			500,
			nextval('agenda_pac_opme_seq'),
			nr_seq_agenda_p,
			'N',
			qt_autorizada_w);
		
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_opme_w
		from	agenda_pac_opme
		where	nr_Seq_agenda = nr_seq_agenda_p;
		
		
		update	material_autorizado
		set	nr_seq_opme 		= nr_seq_opme_w,
			nm_usuario 		= nm_usuario_w,
			dt_atualizacao 		= clock_timestamp()
		where	nr_sequencia_autor	                = nr_seq_autorizacao_p
		and          nr_sequencia                           = nr_seq_mat_autor_w;
		
		
		begin		
		insert into agenda_pac_consignado(nr_sequencia,
	   					   dt_atualizacao, 
						   nm_usuario, 
						   cd_material,
						   ds_material, 
						   ie_tipo_item, 
						   ie_situacao,
						   nr_seq_agenda,
						   qt_quantidade,
						   cd_cgc,
						   ds_fornecedor,
						   nr_seq_marca,
						   qt_autorizada,
						   ie_permanente,
						   nr_seq_mat_autor)
			values (nextval('agenda_pac_consignado_seq'),
						  clock_timestamp(),
						  nm_usuario_w,
						  cd_material_w,
						  substr(obter_desc_material(cd_material_w),1,255),
						  2,
						 'A',
						 nr_seq_agenda_p,
						 qt_solicitada_w,
						 cd_cgc_fabricante_w,
					         substr(obter_nome_pf_pj(null,cd_cgc_fabricante_w),1,255),
						 nr_seq_marca_w,
						 qt_autorizada_w,
						 'N',
						 nr_seq_mat_autor_w);
		
		
		exception
		when others then
			null;
		end;
		end;
	end loop;
	close C02;
	
	select	count(*)
	into STRICT	qt_existe_w
	from	autorizacao_cirurgia
	where	nr_seq_autor_conv = nr_seq_autorizacao_p;
	
	if (qt_existe_w > 0) then
		
		update	autorizacao_cirurgia
		set	nr_seq_agenda = nr_seq_agenda_p,
			nm_usuario = nm_usuario_w,
			dt_atualizacao = clock_timestamp()
		where	nr_seq_autor_conv = nr_seq_autorizacao_p;
	
	end if;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincula_autor_agenda_cir ( nr_seq_autorizacao_p bigint, nr_seq_agenda_p bigint, ie_modo_vinc_p text default 'N', nr_seq_procedimento_p bigint default 0) FROM PUBLIC;

