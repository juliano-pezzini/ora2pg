-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_consulta_res ( nr_atendimento_p text, cd_profissional_p text, nm_usuario_p text, cd_perfil_ativo_p text ) AS $body$
DECLARE




ie_registro_w				varchar(1);
nr_sequencia_w				bigint;
cd_pessoa_fisica_w  			varchar(255);
nm_pessoa_fisica_w			varchar(255);
cd_estabelecimento_w		bigint;
qt_requisicao_w				bigint;
qt_requisicao_atual_w		bigint;
ie_gerar_macros_w			varchar(1);



BEGIN

SELECT  MAX(cd_pessoa_fisica),
		MAX(obter_nome_pf(cd_pessoa_fisica)),
		MAX(cd_estabelecimento)
INTO STRICT	cd_pessoa_fisica_w,
		nm_pessoa_fisica_w,
		cd_estabelecimento_w
FROM 	atendimento_paciente
WHERE   nr_atendimento = nr_atendimento_p;


SELECT 	coalesce(MAX('S'),'N')
INTO STRICT 	ie_registro_w
FROM	IMP_SUMARIO_PACIENTE
WHERE 	cd_pessoa_fisica = cd_pessoa_fisica_w
AND 	cd_prof_destino = cd_profissional_p
AND		nm_usuario = nm_usuario_p;


IF ( ie_registro_w = 'N') THEN


		SELECT  nextval('imp_sumario_paciente_seq')
		INTO STRICT	nr_sequencia_w
		;


		INSERT INTO IMP_SUMARIO_PACIENTE(
					nr_sequencia,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_tipo_sumario,
					cd_pessoa_fisica,
					dt_sumario,
					cd_hosp_origem,
					nm_hosp_origem,
					cd_prof_solic,
					nm_prof_solic,
					cd_hosp_destino,
					cd_prof_destino,
					nm_prof_destino,
					ds_oid_identificador,
					ds_identificador)
				VALUES (
					nr_sequencia_w,
					cd_estabelecimento_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					'RESU',
					cd_pessoa_fisica_w,
					clock_timestamp(),
					NULL,
					NULL,
					cd_profissional_p,
					obter_nome_pf(cd_profissional_p),
					NULL,
					cd_profissional_p,
					obter_nome_pf(cd_profissional_p),
					NULL,
					NULL);



	COMMIT;


	INSERT INTO IMP_SUMARIO_PAC_LOG_ACESSO(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_sumario,
					cd_perfil_acesso)
					VALUES (nextval('imp_sumario_pac_log_acesso_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					cd_perfil_ativo_p);


END IF;



SELECT 	MAX(qt_requisicao),
		MAX(qt_requisicao_atual)
INTO STRICT	qt_requisicao_w,
		qt_requisicao_atual_w
FROM 	res_paciente_resultado
WHERE	cd_pessoa_fisica = cd_pessoa_fisica_w
AND		cd_profissional_dest = cd_profissional_p
AND		nm_usuario = nm_usuario_p
AND		(qt_requisicao IS NOT NULL AND qt_requisicao::text <> '');


IF ( coalesce(qt_requisicao_w,0) <> coalesce(qt_requisicao_atual_w,0)) THEN

	UPDATE	res_paciente_resultado
	SET		qt_requisicao_atual = qt_requisicao_atual + 1
	WHERE	cd_pessoa_fisica = cd_pessoa_fisica_w
	AND		cd_profissional_dest = cd_profissional_p
	AND		nm_usuario = nm_usuario_p
	AND		(qt_requisicao IS NOT NULL AND qt_requisicao::text <> '');

	COMMIT;

	IF (qt_requisicao_w = qt_requisicao_atual_w + 1) THEN
		ie_gerar_macros_w := 'S';
	END IF;

end if;


if ( ie_gerar_macros_w = 'S' ) then


		SELECT 	MAX(nr_sequencia)
		INTO STRICT 	nr_sequencia_w
		FROM 	IMP_SUMARIO_PACIENTE
		WHERE 	cd_pessoa_fisica = cd_pessoa_fisica_w
		AND 	cd_prof_destino = cd_profissional_p;



		INSERT INTO IMP_SUMARIO_PAC_LOG_ACESSO(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_sumario,
						cd_perfil_acesso)
						VALUES (nextval('imp_sumario_pac_log_acesso_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_w,
						cd_perfil_ativo_p);

		UPDATE 	imp_sumario_paciente
		SET 	dt_atualizacao = clock_timestamp(),
				dt_atualizacao_nrec = clock_timestamp(),
				dt_sumario = clock_timestamp()
		WHERE 	nr_sequencia = nr_sequencia_w;



		COMMIT;

	IF ( nr_sequencia_w > 0) THEN
		CALL Gerar_dados_insercao_RES(cd_pessoa_fisica_w, cd_profissional_p,nm_usuario_p);
		CALL substituir_macro_res_tasy( nm_usuario_p, cd_pessoa_fisica_w, cd_profissional_p, nr_sequencia_w);

	END IF;


END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_consulta_res ( nr_atendimento_p text, cd_profissional_p text, nm_usuario_p text, cd_perfil_ativo_p text ) FROM PUBLIC;

