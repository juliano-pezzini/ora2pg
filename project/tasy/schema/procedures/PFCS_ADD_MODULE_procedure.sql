-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_add_module (nr_seq_dynamic_module_p pfcs_dynamic_module.nr_seq_dynamic_module%type, nm_module_p pfcs_dynamic_module.ds_dynamic_module%type, ds_dashboard_1_p pfcs_dashboard.ds_dashboard%type, qt_region_1_p pfcs_dashboard.qt_region%type, cd_type_1_p pfcs_dashboard.cd_type%type, ds_first_region_1_p pfcs_dashboard.ds_region_1%type, ds_second_region_1_p pfcs_dashboard.ds_region_2%type, ds_third_region_1_p pfcs_dashboard.ds_region_3%type, ds_dashboard_2_p pfcs_dashboard.ds_dashboard%type, qt_region_2_p pfcs_dashboard.qt_region%type, cd_type_2_p pfcs_dashboard.cd_type%type, ds_first_region_2_p pfcs_dashboard.ds_region_1%type, ds_second_region_2_p pfcs_dashboard.ds_region_2%type, ds_third_region_2_p pfcs_dashboard.ds_region_3%type, ds_dashboard_3_p pfcs_dashboard.ds_dashboard%type, qt_region_3_p pfcs_dashboard.qt_region%type, cd_type_3_p pfcs_dashboard.cd_type%type, ds_first_region_3_p pfcs_dashboard.ds_region_1%type, ds_second_region_3_p pfcs_dashboard.ds_region_2%type, ds_third_region_3_p pfcs_dashboard.ds_region_3%type, ds_dashboard_4_p pfcs_dashboard.ds_dashboard%type, qt_region_4_p pfcs_dashboard.qt_region%type, cd_type_4_p pfcs_dashboard.cd_type%type, ds_first_region_4_p pfcs_dashboard.ds_region_1%type, ds_second_region_4_p pfcs_dashboard.ds_region_2%type, ds_third_region_4_p pfcs_dashboard.ds_region_3%type, ds_classif_list_p pfcs_dashboard.ds_dashboard%type) AS $body$
DECLARE


nm_user_w               usuario.nm_usuario%type;
nr_seq_dynamic_module_w pfcs_dynamic_module.nr_sequencia%type;
nr_seq_dashboard_w      pfcs_dashboard.nr_sequencia%type;


BEGIN
    nm_user_w := coalesce(obter_usuario_ativo,PFCS_PCK_CONSTANTS.NM_USER_PFCS);

    if ((nm_module_p IS NOT NULL AND nm_module_p::text <> '') and coalesce(nr_seq_dynamic_module_p::text, '') = '') then
        insert into pfcs_dynamic_module(
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                ie_situacao,
                ds_dynamic_module,
                ie_export
            ) values (
                clock_timestamp(),
                nm_user_w,
                clock_timestamp(),
                nm_user_w,
                PFCS_PCK_CONSTANTS.IE_ACTIVE,
                nm_module_p,
                PFCS_PCK_CONSTANTS.IE_NO);
        commit;

        select	max(nr_sequencia)
        into STRICT	nr_seq_dynamic_module_w
        from (SELECT	dyn.nr_sequencia
                from pfcs_dynamic_module dyn
                order by dyn.dt_atualizacao_nrec desc) alias1 LIMIT 1;
    elsif (nr_seq_dynamic_module_p IS NOT NULL AND nr_seq_dynamic_module_p::text <> '') THEN
        update  pfcs_dynamic_module
        set     dt_atualizacao = clock_timestamp(),
                nm_usuario = nm_user_w,
                ds_dynamic_module = nm_module_p
        where   nr_sequencia = nr_seq_dynamic_module_p;
        commit;
    end if;

    if (coalesce(ds_dashboard_1_p::text, '') = '' or coalesce(ds_dashboard_2_p::text, '') = '' or coalesce(ds_dashboard_3_p::text, '') = '' or coalesce(ds_dashboard_4_p::text, '') = '') then
        delete FROM pfcs_card c
        where exists (
            SELECT 1 from pfcs_dashboard d
            where d.nr_seq_dynamic_module = nr_seq_dynamic_module_p
                and d.nr_sequencia = c.nr_seq_dashboard
                and ((d.nr_seq_display = 10 and coalesce(ds_dashboard_1_p::text, '') = '')
                    or (d.nr_seq_display = 20 and coalesce(ds_dashboard_2_p::text, '') = '')
                    or (d.nr_seq_display = 30 and coalesce(ds_dashboard_3_p::text, '') = '')
                    or (d.nr_seq_display = 40 and coalesce(ds_dashboard_4_p::text, '') = ''))
        ) and nr_seq_dynamic_module_p = c.nr_seq_dynamic_module;

        delete FROM pfcs_dashboard
        where nr_seq_dynamic_module = nr_seq_dynamic_module_p
            and ((nr_seq_display = 10 and coalesce(ds_dashboard_1_p::text, '') = '')
                or (nr_seq_display = 20 and coalesce(ds_dashboard_2_p::text, '') = '')
                or (nr_seq_display = 30 and coalesce(ds_dashboard_3_p::text, '') = '')
                or (nr_seq_display = 40 and coalesce(ds_dashboard_4_p::text, '') = ''));
        commit;
    end if;

    if (ds_dashboard_1_p IS NOT NULL AND ds_dashboard_1_p::text <> '') then
        select  max(nr_sequencia)
        into STRICT    nr_seq_dashboard_w
        from    pfcs_dashboard
        where   nr_seq_dynamic_module = nr_seq_dynamic_module_p
        and     nr_seq_display = 10;

        if (coalesce(nr_seq_dashboard_w::text, '') = '') then
            insert into pfcs_dashboard(
                    nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_dynamic_module,
                    ds_dashboard,
                    cd_type,
                    qt_region,
                    ie_situacao,
                    ds_region_1,
                    ds_region_2,
                    ds_region_3,
                    nr_seq_display)
                values (
                    nextval('pfcs_dashboard_seq'),
                    clock_timestamp(),
                    nm_user_w,
                    clock_timestamp(),
                    nm_user_w,
                    coalesce(nr_seq_dynamic_module_w,nr_seq_dynamic_module_p),
                    ds_dashboard_1_p,
                    cd_type_1_p,
                    qt_region_1_p,
                    PFCS_PCK_CONSTANTS.IE_ACTIVE,
                    ds_first_region_1_p,
                    ds_second_region_1_p,
                    ds_third_region_1_p,
                    10);
            commit;
        else
            update  pfcs_dashboard
            set     dt_atualizacao = clock_timestamp(),
                    nm_usuario = nm_user_w,
                    ds_dashboard = ds_dashboard_1_p,
                    cd_type = cd_type_1_p,
                    qt_region = qt_region_1_p,
                    ds_region_1 = ds_first_region_1_p,
                    ds_region_2 = ds_second_region_1_p,
                    ds_region_3 = ds_third_region_1_p
            where   nr_sequencia = nr_seq_dashboard_w;

            commit;
        end if;
    end if;

    if (ds_dashboard_2_p IS NOT NULL AND ds_dashboard_2_p::text <> '') then
        select  max(nr_sequencia)
        into STRICT    nr_seq_dashboard_w
        from    pfcs_dashboard
        where   nr_seq_dynamic_module = nr_seq_dynamic_module_p
        and     nr_seq_display = 20;

        if (coalesce(nr_seq_dashboard_w::text, '') = '') then
            insert into pfcs_dashboard(
                    nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_dynamic_module,
                    ds_dashboard,
                    cd_type,
                    qt_region,
                    ie_situacao,
                    ds_region_1,
                    ds_region_2,
                    ds_region_3,
                    nr_seq_display)
                values (
                    nextval('pfcs_dashboard_seq'),
                    clock_timestamp(),
                    nm_user_w,
                    clock_timestamp(),
                    nm_user_w,
                    coalesce(nr_seq_dynamic_module_w,nr_seq_dynamic_module_p),
                    ds_dashboard_2_p,
                    cd_type_2_p,
                    qt_region_2_p,
                    PFCS_PCK_CONSTANTS.IE_ACTIVE,
                    ds_first_region_2_p,
                    ds_second_region_2_p,
                    ds_third_region_2_p,
                    20);
            commit;
        else
            update  pfcs_dashboard
            set     dt_atualizacao = clock_timestamp(),
                    nm_usuario = nm_user_w,
                    ds_dashboard = ds_dashboard_2_p,
                    cd_type = cd_type_2_p,
                    qt_region = qt_region_2_p,
                    ds_region_1 = ds_first_region_2_p,
                    ds_region_2 = ds_second_region_2_p,
                    ds_region_3 = ds_third_region_2_p
            where   nr_sequencia = nr_seq_dashboard_w;

            commit;
        end if;
    end if;

    if (ds_dashboard_3_p IS NOT NULL AND ds_dashboard_3_p::text <> '') then
        select  max(nr_sequencia)
        into STRICT    nr_seq_dashboard_w
        from    pfcs_dashboard
        where   nr_seq_dynamic_module = nr_seq_dynamic_module_p
        and     nr_seq_display = 30;

        if (coalesce(nr_seq_dashboard_w::text, '') = '') then
            insert into pfcs_dashboard(
                    nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_dynamic_module,
                    ds_dashboard,
                    cd_type,
                    qt_region,
                    ie_situacao,
                    ds_region_1,
                    ds_region_2,
                    ds_region_3,
                    nr_seq_display)
                values (
                    nextval('pfcs_dashboard_seq'),
                    clock_timestamp(),
                    nm_user_w,
                    clock_timestamp(),
                    nm_user_w,
                    coalesce(nr_seq_dynamic_module_w,nr_seq_dynamic_module_p),
                    ds_dashboard_3_p,
                    cd_type_3_p,
                    qt_region_3_p,
                    PFCS_PCK_CONSTANTS.IE_ACTIVE,
                    ds_first_region_3_p,
                    ds_second_region_3_p,
                    ds_third_region_3_p,
                    30);
            commit;
        else
            update  pfcs_dashboard
            set     dt_atualizacao = clock_timestamp(),
                    nm_usuario = nm_user_w,
                    ds_dashboard = ds_dashboard_3_p,
                    cd_type = cd_type_3_p,
                    qt_region = qt_region_3_p,
                    ds_region_1 = ds_first_region_3_p,
                    ds_region_2 = ds_second_region_3_p,
                    ds_region_3 = ds_third_region_3_p
            where   nr_sequencia = nr_seq_dashboard_w;

            commit;
        end if;
    end if;

    if (ds_dashboard_4_p IS NOT NULL AND ds_dashboard_4_p::text <> '') THEN
        select  max(nr_sequencia)
        into STRICT    nr_seq_dashboard_w
        from    pfcs_dashboard
        where   nr_seq_dynamic_module = nr_seq_dynamic_module_p
        and     nr_seq_display = 40;

        if (coalesce(nr_seq_dashboard_w::text, '') = '') then
            insert into pfcs_dashboard(
                    nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_dynamic_module,
                    ds_dashboard,
                    cd_type,
                    qt_region,
                    ie_situacao,
                    ds_region_1,
                    ds_region_2,
                    ds_region_3,
                    nr_seq_display)
                values (
                    nextval('pfcs_dashboard_seq'),
                    clock_timestamp(),
                    nm_user_w,
                    clock_timestamp(),
                    nm_user_w,
                    coalesce(nr_seq_dynamic_module_w,nr_seq_dynamic_module_p),
                    ds_dashboard_4_p,
                    cd_type_4_p,
                    qt_region_4_p,
                    PFCS_PCK_CONSTANTS.IE_ACTIVE,
                    ds_first_region_4_p,
                    ds_second_region_4_p,
                    ds_third_region_4_p,
                    40);
            commit;
        else
            update  pfcs_dashboard
            set     dt_atualizacao = clock_timestamp(),
                    nm_usuario = nm_user_w,
                    ds_dashboard = ds_dashboard_4_p,
                    cd_type = cd_type_4_p,
                    qt_region = qt_region_4_p,
                    ds_region_1 = ds_first_region_4_p,
                    ds_region_2 = ds_second_region_4_p,
                    ds_region_3 = ds_third_region_4_p
            where   nr_sequencia = nr_seq_dashboard_w;

            commit;
        end if;
    end if;

    delete FROM pfcs_module_occupancy where nr_seq_dynamic_module = coalesce(nr_seq_dynamic_module_w,nr_seq_dynamic_module_p);
    insert into pfcs_module_occupancy(
        nr_sequencia,
        nr_seq_dynamic_module,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        cd_unit_classification
    ) SELECT nextval('pfcs_module_occupancy_seq'),
        coalesce(nr_seq_dynamic_module_w,nr_seq_dynamic_module_p),
        nm_user_w,
        clock_timestamp(),
        nm_user_w,
        clock_timestamp(),
        vl_dominio
    from valor_dominio
    where cd_dominio = PFCS_PCK_CONSTANTS.CD_DOMAIN_PFCS_UNIT_TYPES
        and ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
        and obter_se_contido_entre_virgula(ds_classif_list_p,vl_dominio) = PFCS_PCK_CONSTANTS.IE_YES_BR;
    commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_add_module (nr_seq_dynamic_module_p pfcs_dynamic_module.nr_seq_dynamic_module%type, nm_module_p pfcs_dynamic_module.ds_dynamic_module%type, ds_dashboard_1_p pfcs_dashboard.ds_dashboard%type, qt_region_1_p pfcs_dashboard.qt_region%type, cd_type_1_p pfcs_dashboard.cd_type%type, ds_first_region_1_p pfcs_dashboard.ds_region_1%type, ds_second_region_1_p pfcs_dashboard.ds_region_2%type, ds_third_region_1_p pfcs_dashboard.ds_region_3%type, ds_dashboard_2_p pfcs_dashboard.ds_dashboard%type, qt_region_2_p pfcs_dashboard.qt_region%type, cd_type_2_p pfcs_dashboard.cd_type%type, ds_first_region_2_p pfcs_dashboard.ds_region_1%type, ds_second_region_2_p pfcs_dashboard.ds_region_2%type, ds_third_region_2_p pfcs_dashboard.ds_region_3%type, ds_dashboard_3_p pfcs_dashboard.ds_dashboard%type, qt_region_3_p pfcs_dashboard.qt_region%type, cd_type_3_p pfcs_dashboard.cd_type%type, ds_first_region_3_p pfcs_dashboard.ds_region_1%type, ds_second_region_3_p pfcs_dashboard.ds_region_2%type, ds_third_region_3_p pfcs_dashboard.ds_region_3%type, ds_dashboard_4_p pfcs_dashboard.ds_dashboard%type, qt_region_4_p pfcs_dashboard.qt_region%type, cd_type_4_p pfcs_dashboard.cd_type%type, ds_first_region_4_p pfcs_dashboard.ds_region_1%type, ds_second_region_4_p pfcs_dashboard.ds_region_2%type, ds_third_region_4_p pfcs_dashboard.ds_region_3%type, ds_classif_list_p pfcs_dashboard.ds_dashboard%type) FROM PUBLIC;

