-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_reincluir_beneficiario ( nr_seq_reinclusao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Rotina chamada na confirmacao da reinclusao do beneficiario, no Tasy
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ x] Tasy (Delphi/Java) [   ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 

nr_seq_segurado_w			pls_segurado.nr_sequencia%type;
nr_seq_contrato_w			pls_contrato.nr_sequencia%type;
dt_rescisao_w				pls_rescisao_contrato.dt_rescisao%type;
nm_pessoa_fisica_w			pls_reinclusao_benef.nm_pessoa_fisica%type;
cd_cep_w				pls_reinclusao_benef.cd_cep%type;
ds_endereco_w				pls_reinclusao_benef.ds_endereco%type;
nr_endereco_w				pls_reinclusao_benef.nr_endereco_varchar%type;
cd_tipo_logradouro_w			pls_reinclusao_benef.cd_tipo_logradouro%type;
ds_complemento_w			pls_reinclusao_benef.ds_complemento%type;
ds_bairro_w				pls_reinclusao_benef.ds_bairro%type;	
cd_municipio_ibge_w			pls_reinclusao_benef.cd_municipio_ibge%type;
ds_municipio_w				pls_reinclusao_benef.ds_municipio%type;
sg_estado_w				pls_reinclusao_benef.sg_estado%type;		
nr_ddi_telefone_w			pls_reinclusao_benef.nr_ddi_telefone%type;
nr_ddd_telefone_w			pls_reinclusao_benef.nr_ddd_telefone%type;	
nr_telefone_w				pls_reinclusao_benef.nr_telefone%type;
nr_ddi_celular_w			pls_reinclusao_benef.nr_ddi_celular%type;	
nr_ddd_celular_w			pls_reinclusao_benef.nr_ddd_celular%type;	
nr_telefone_celular_w			pls_reinclusao_benef.nr_telefone_celular%type;
ie_criar_pagador_w			pls_reinclusao_benef.ie_criar_pagador%type;
cd_pessoa_fisica_w			pessoa_fisica.cd_pessoa_fisica%type;
qt_endereco_resid_pf_w			integer;
nr_seq_pagador_w			pls_contrato_pagador.nr_sequencia%type;
nr_seq_segurado_depend_w		pls_segurado.nr_sequencia%type;
cd_pessoa_fisica_pag_w			pessoa_fisica.cd_pessoa_fisica%type;
/* dados pls_regra_pag_reinclusao*/

nr_seq_regra_pag_reinc_w		pls_regra_pag_reinclusao.nr_sequencia%type;
cd_agencia_bancaria_w			pls_regra_pag_reinclusao.cd_agencia_bancaria%type;
cd_banco_w 				pls_regra_pag_reinclusao.cd_banco%type;
cd_condicao_pagamento_w			pls_regra_pag_reinclusao.cd_condicao_pagamento%type;
cd_conta_w				pls_regra_pag_reinclusao.cd_conta%type;
cd_matricula_w				pls_regra_pag_reinclusao.cd_matricula%type;
cd_portador_w				pls_regra_pag_reinclusao.cd_portador%type;
cd_profissao_w				pls_regra_pag_reinclusao.cd_profissao%type;
cd_tipo_portador_w			pls_regra_pag_reinclusao.cd_tipo_portador%type;
dt_dia_vencimento_w			pls_regra_pag_reinclusao.dt_dia_vencimento%type;
ie_calc_primeira_mens_w			pls_regra_pag_reinclusao.ie_calc_primeira_mens%type;	
ie_digito_agencia_w			pls_regra_pag_reinclusao.ie_digito_agencia%type;
ie_digito_conta_w			pls_regra_pag_reinclusao.ie_digito_conta%type;
ie_endereco_boleto_w			pls_regra_pag_reinclusao.ie_endereco_boleto%type;
ie_envia_cobranca_w			pls_regra_pag_reinclusao.ie_envia_cobranca%type;
ie_mes_vencimento_w			pls_regra_pag_reinclusao.ie_mes_vencimento%type;
ie_notificacao_w			pls_regra_pag_reinclusao.ie_notificacao%type;
ie_pessoa_comprovante_w			pls_regra_pag_reinclusao.ie_pessoa_comprovante%type;
ie_taxa_emissao_boleto_w		pls_regra_pag_reinclusao.ie_taxa_emissao_boleto%type;
ie_tipo_pagador_w			pls_regra_pag_reinclusao.ie_tipo_pagador%type;
nr_seq_carteira_cobr_w			pls_regra_pag_reinclusao.nr_seq_carteira_cobr%type;
nr_seq_conta_banco_w			pls_regra_pag_reinclusao.nr_seq_conta_banco%type;
nr_seq_empresa_w			pls_regra_pag_reinclusao.nr_seq_empresa%type;
nr_seq_forma_cobranca_w			pls_regra_pag_reinclusao.nr_seq_forma_cobranca%type;
nr_seq_vinculo_empresa_w		pls_regra_pag_reinclusao.nr_seq_vinculo_empresa%type;
nr_seq_classif_itens_w			pls_regra_pag_reinclusao.nr_seq_classif_itens%type;
ie_calculo_proporcional_w		pls_regra_pag_reinclusao.ie_calculo_proporcional%type;
ie_geracao_nota_titulo_w		pls_regra_pag_reinclusao.ie_geracao_nota_titulo%type;
ie_gerar_cobr_escrit_w			pls_regra_pag_reinclusao.ie_gerar_cobr_escrit%type;
ie_sit_trabalhista_w			pls_segurado.ie_situacao_trabalhista%type;
nr_seq_rescisao_prog_w			pls_rescisao_contrato.nr_sequencia%type;
nm_pagador_w				varchar(255);
dt_reinclusao_w				timestamp;

c01 CURSOR FOR
	SELECT	nr_seq_segurado
	from	pls_reinc_dependentes
	where	nr_seq_reinc_benef = nr_seq_reinclusao_p;


BEGIN

begin
select	nr_seq_segurado,
	nm_pessoa_fisica,
	cd_cep,
	ds_endereco,
	nr_endereco_varchar,
	cd_tipo_logradouro,
	ds_complemento,
	ds_bairro,
	cd_municipio_ibge,
	ds_municipio,
	sg_estado,
	nr_ddi_telefone,
	nr_ddd_telefone,
	nr_telefone,
	nr_ddi_celular,
	nr_ddd_celular,
	nr_telefone_celular,
	coalesce(ie_criar_pagador, 'S'),
	coalesce(dt_reinclusao, clock_timestamp())
into STRICT	nr_seq_segurado_w,
	nm_pessoa_fisica_w,
	cd_cep_w,
	ds_endereco_w,
	nr_endereco_w,
	cd_tipo_logradouro_w,
	ds_complemento_w,
	ds_bairro_w,
	cd_municipio_ibge_w,
	ds_municipio_w,
	sg_estado_w,
	nr_ddi_telefone_w,
	nr_ddd_telefone_w,
	nr_telefone_w,
	nr_ddi_celular_w,
	nr_ddd_celular_w,
	nr_telefone_celular_w,
	ie_criar_pagador_w,
	dt_reinclusao_w
from	pls_reinclusao_benef
where	nr_sequencia	= nr_seq_reinclusao_p
and	coalesce(dt_confirmacao::text, '') = ''
and	coalesce(dt_rejeicao::text, '') = '';
exception
when others then
	nr_seq_segurado_w	:= null;
end;

if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
	select	a.cd_pessoa_fisica,
		a.dt_rescisao,
		a.nr_seq_contrato,
		(select	max(x.cd_pessoa_fisica)
		from	pls_contrato_pagador x
		where	x.nr_sequencia = a.nr_seq_pagador)
	into STRICT	cd_pessoa_fisica_w,
		dt_rescisao_w,
		nr_seq_contrato_w,
		cd_pessoa_fisica_pag_w
	from	pls_segurado a
	where	a.nr_sequencia	= nr_seq_segurado_w;
	
	if (cd_pessoa_fisica_w = cd_pessoa_fisica_pag_w) then
		ie_criar_pagador_w := 'N';
	end if;
	
	if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
		CALL pls_reativar_segurado(	nr_seq_segurado_w, dt_reinclusao_w, wheb_mensagem_pck.get_texto(1174000,'NR_SEQ_REINCLUSAO='||nr_seq_reinclusao_p),
					'S', nm_usuario_p);
			
		if 	((nr_ddi_celular_w IS NOT NULL AND nr_ddi_celular_w::text <> '') or (nr_ddd_celular_w IS NOT NULL AND nr_ddd_celular_w::text <> '') or (nr_telefone_celular_w IS NOT NULL AND nr_telefone_celular_w::text <> '')) then
			update	pessoa_fisica
			set	nr_ddi_celular		= nr_ddi_celular_w,
				nr_ddd_celular		= nr_ddd_celular_w,
				nr_telefone_celular	= nr_telefone_celular_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		
		if 	((cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') or (ds_endereco_w IS NOT NULL AND ds_endereco_w::text <> '') or (nr_endereco_w IS NOT NULL AND nr_endereco_w::text <> '') or (cd_tipo_logradouro_w IS NOT NULL AND cd_tipo_logradouro_w::text <> '') or (ds_complemento_w IS NOT NULL AND ds_complemento_w::text <> '') or (ds_bairro_w IS NOT NULL AND ds_bairro_w::text <> '') or (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') or (sg_estado_w IS NOT NULL AND sg_estado_w::text <> '') or (nr_ddi_telefone_w IS NOT NULL AND nr_ddi_telefone_w::text <> '') or (nr_ddi_telefone_w IS NOT NULL AND nr_ddi_telefone_w::text <> '') or (nr_ddd_telefone_w IS NOT NULL AND nr_ddd_telefone_w::text <> '') or (nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '')) then
			select	count(1)
			into STRICT	qt_endereco_resid_pf_w
			from	compl_pessoa_fisica	
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	ie_tipo_complemento = 1;
		
			if (qt_endereco_resid_pf_w > 0)	then
				update	compl_pessoa_fisica
				set	cd_cep			= cd_cep_w,
					ds_endereco		= ds_endereco_w,
					nr_endereco		= nr_endereco_w,
					cd_tipo_logradouro	= cd_tipo_logradouro_w,
					ds_complemento		= ds_complemento_w,
					ds_bairro		= ds_bairro_w,
					cd_municipio_ibge	= cd_municipio_ibge_w,
					ds_municipio		= ds_municipio_w,
					sg_estado		= sg_estado_w,
					nr_ddi_telefone		= nr_ddi_telefone_w,
					nr_ddd_telefone		= nr_ddd_telefone_w,
					nr_telefone		= nr_telefone_w,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w
				and	ie_tipo_complemento = 1;	
			elsif (qt_endereco_resid_pf_w = 0) then
				insert into compl_pessoa_fisica(	cd_pessoa_fisica, nr_sequencia, ie_tipo_complemento,
									dt_atualizacao, nm_usuario, cd_cep,
									ds_endereco, nr_endereco, cd_tipo_logradouro,
									ds_complemento, ds_bairro, cd_municipio_ibge,
									ds_municipio, sg_estado, nr_ddi_telefone,
									nr_ddd_telefone, nr_telefone, dt_atualizacao_nrec,
									nm_usuario_nrec, ds_observacao)
							values (	cd_pessoa_fisica_w, 1, 1,
									clock_timestamp(), nm_usuario_p, cd_cep_w,
									ds_endereco_w, nr_endereco_w, cd_tipo_logradouro_w,
									ds_complemento_w, ds_bairro_w, cd_municipio_ibge_w,
									ds_municipio_w, sg_estado_w, nr_ddi_telefone_w,
									nr_ddd_telefone_w, nr_telefone_w, clock_timestamp(),
									nm_usuario_p, wheb_mensagem_pck.get_texto(1174003,'NR_SEQ_REINCLUSAO='||nr_seq_reinclusao_p));
			end if;
		end if;
		
		begin
		select	a.nr_sequencia,
			b.ie_situacao_trabalhista
		into STRICT	nr_seq_rescisao_prog_w,
			ie_sit_trabalhista_w
		from	pls_rescisao_contrato a,
			pls_motivo_cancelamento b
		where  	a.nr_seq_motivo_rescisao = b.nr_sequencia
		and  	a.nr_seq_segurado = nr_seq_segurado_w
		and 	coalesce(a.nr_seq_motivo_rejeicao::text, '') = ''
		and 	a.ie_processo = 'W'
		and 	a.ie_situacao = 'A';
		exception
		when others then
			nr_seq_rescisao_prog_w := null;
			ie_sit_trabalhista_w := null;
		end;
		
		if (nr_seq_rescisao_prog_w IS NOT NULL AND nr_seq_rescisao_prog_w::text <> '')then
			CALL pls_rejeitar_rescisao_program(nr_seq_rescisao_prog_w,null,wheb_mensagem_pck.get_texto(1173998),'N',nm_usuario_p);
		end if;	
		
		if (ie_criar_pagador_w = 'S') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_regra_pag_reinc_w
			from	pls_regra_pag_reinclusao
			where	dt_reinclusao_w between dt_inicio_vigencia_ref and dt_fim_vigencia_ref;
			
			if (coalesce(nr_seq_regra_pag_reinc_w::text, '') = '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(389263);
				--Nao e possivel gerar a reinclusao sem 'Regra pagador e informacoes financeiras reinclusao' cadastrada. Verifique!
			else
				select 	cd_agencia_bancaria,
					cd_banco,
					cd_condicao_pagamento,
					cd_conta,
					cd_matricula,
					cd_portador,
					cd_profissao,
					cd_tipo_portador,
					dt_dia_vencimento,	
					ie_calc_primeira_mens,
					ie_digito_agencia,
					ie_digito_conta,
					ie_endereco_boleto,
					ie_envia_cobranca,
					ie_mes_vencimento,
					ie_notificacao,
					ie_pessoa_comprovante,
					ie_taxa_emissao_boleto,
					ie_tipo_pagador,
					nr_seq_carteira_cobr,
					nr_seq_conta_banco,
					nr_seq_empresa,
					nr_seq_forma_cobranca,
					nr_seq_vinculo_empresa,
					nr_seq_classif_itens,
					ie_calculo_proporcional,
					ie_geracao_nota_titulo,
					ie_gerar_cobr_escrit
				into STRICT	cd_agencia_bancaria_w,
					cd_banco_w, 
					cd_condicao_pagamento_w,
					cd_conta_w,
					cd_matricula_w,
					cd_portador_w,
					cd_profissao_w,
					cd_tipo_portador_w,
					dt_dia_vencimento_w,	
					ie_calc_primeira_mens_w,
					ie_digito_agencia_w,
					ie_digito_conta_w,
					ie_endereco_boleto_w,
					ie_envia_cobranca_w,
					ie_mes_vencimento_w,
					ie_notificacao_w,
					ie_pessoa_comprovante_w,
					ie_taxa_emissao_boleto_w,
					ie_tipo_pagador_w,
					nr_seq_carteira_cobr_w,
					nr_seq_conta_banco_w,
					nr_seq_empresa_w,
					nr_seq_forma_cobranca_w,
					nr_seq_vinculo_empresa_w,
					nr_seq_classif_itens_w,
					ie_calculo_proporcional_w,
					ie_geracao_nota_titulo_w,
					ie_gerar_cobr_escrit_w
				from	pls_regra_pag_reinclusao
				where	nr_sequencia	= nr_seq_regra_pag_reinc_w;
			end if;	
				
			select	nextval('pls_contrato_pagador_seq')
			into STRICT	nr_seq_pagador_w
			;
					
			insert into pls_contrato_pagador(	nr_sequencia, nr_seq_contrato, cd_pessoa_fisica,
								dt_atualizacao_nrec, nm_usuario_nrec, dt_atualizacao,
								nm_usuario, ie_endereco_boleto, ie_tipo_pagador,
								ie_envia_cobranca, ie_pessoa_comprovante, ie_notificacao,
								ie_taxa_emissao_boleto, ie_calc_primeira_mens,nr_seq_classif_itens,
								ie_calculo_proporcional, ie_receber_sms)
						values (	nr_seq_pagador_w, nr_seq_contrato_w, cd_pessoa_fisica_w, 
								clock_timestamp(), nm_usuario_p, clock_timestamp(),
								nm_usuario_p, ie_endereco_boleto_w, ie_tipo_pagador_w,
								ie_envia_cobranca_w, ie_pessoa_comprovante_w, ie_notificacao_w,
								ie_taxa_emissao_boleto_w, ie_calc_primeira_mens_w,nr_seq_classif_itens_w,
								ie_calculo_proporcional_w, 'S');

			insert into pls_contrato_pagador_fin(	nr_sequencia, dt_atualizacao, nm_usuario,
								dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_pagador,
								dt_inicio_vigencia, dt_dia_vencimento, nr_seq_forma_cobranca,
								ie_mes_vencimento, cd_tipo_portador, cd_agencia_bancaria,
								ie_digito_agencia, cd_conta, ie_digito_conta,
								nr_seq_empresa, cd_profissao, nr_seq_vinculo_empresa,
								cd_matricula, cd_banco, nr_seq_carteira_cobr,
								nr_seq_conta_banco, cd_condicao_pagamento, cd_portador,
								ie_geracao_nota_titulo,ie_gerar_cobr_escrit)
						values (		nextval('pls_contrato_pagador_fin_seq'), clock_timestamp(), nm_usuario_p,
								clock_timestamp(), nm_usuario_p, nr_seq_pagador_w,
								dt_reinclusao_w, dt_dia_vencimento_w, nr_seq_forma_cobranca_w,
								ie_mes_vencimento_w, cd_tipo_portador_w, cd_agencia_bancaria_w,
								ie_digito_agencia_w, cd_conta_w, ie_digito_conta_w,
								nr_seq_empresa_w, cd_profissao_w, nr_seq_vinculo_empresa_w,
								cd_matricula_w, cd_banco_w, nr_seq_carteira_cobr_w,
								nr_seq_conta_banco_w, cd_condicao_pagamento_w, cd_portador_w,
								ie_geracao_nota_titulo_w, ie_gerar_cobr_escrit_w);
		
			select	substr(pls_obter_dados_pagador(nr_seq_pagador_w,'N'),1,255)
			into STRICT	nm_pagador_w
			;	
			
			if (coalesce(ie_sit_trabalhista_w::text, '') = '') then
				update	pls_segurado
				set	nr_seq_pagador	= nr_seq_pagador_w
				where	nr_sequencia	= nr_seq_segurado_w;
			else
				update	pls_segurado
				set	nr_seq_pagador	= nr_seq_pagador_w,
					ie_situacao_trabalhista = ie_sit_trabalhista_w,
					dt_inclusao_pce = dt_reinclusao_w
				where	nr_sequencia	= nr_seq_segurado_w;
			end if;	
			
			CALL pls_alterar_pagador_segurado(	nr_seq_segurado_w, null, nr_seq_pagador_w, dt_reinclusao_w, 'N', nm_usuario_p);
			
			CALL pls_gerar_segurado_historico(	nr_seq_segurado_w, '6', clock_timestamp(),
							wheb_mensagem_pck.get_texto(280132, 'NR_SEQ_PAGADOR_P=' || to_char(nr_seq_pagador_w) || ';NM_PAGAD0R_P=' || nm_pagador_w),'pls_reincluir_beneficiario; Titular', null,
							null, null, null,
							clock_timestamp(), null, null,
							null, null, null,
							null, nm_usuario_p, 'N');
		end if;
			
		open c01;
		loop
		fetch c01 into
			nr_seq_segurado_depend_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			CALL pls_reativar_segurado(	nr_seq_segurado_depend_w, dt_reinclusao_w, wheb_mensagem_pck.get_texto(1174000,'NR_SEQ_REINCLUSAO='||nr_seq_reinclusao_p),
						'S', nm_usuario_p);
					
			if (ie_criar_pagador_w = 'S') then
				update	pls_segurado
				set	nr_seq_pagador	= nr_seq_pagador_w
				where	nr_sequencia	= nr_seq_segurado_depend_w;
				
				CALL pls_alterar_pagador_segurado(	nr_seq_segurado_depend_w, null, nr_seq_pagador_w, dt_reinclusao_w, 'N', nm_usuario_p);
				
				CALL pls_gerar_segurado_historico(	nr_seq_segurado_depend_w, '6', clock_timestamp(),
								wheb_mensagem_pck.get_texto(280132, 'NR_SEQ_PAGADOR_P=' || to_char(nr_seq_pagador_w) || ';NM_PAGAD0R_P=' || nm_pagador_w),'pls_reincluir_beneficiario; Dependente', null,
								null, null, null,
								clock_timestamp(), null, null,
								null, null, null,
								null, nm_usuario_p, 'N');
			end if;
			end;
		end loop;
		close c01;	
		
		update	pls_reinclusao_benef
		set	ie_status		= '3',
			dt_confirmacao	= clock_timestamp(),
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_reinclusao_p;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1174558, 'NM_BENEFICIARIO='||pls_obter_nome_beneficiario(nr_seq_segurado_w));
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_reincluir_beneficiario ( nr_seq_reinclusao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

