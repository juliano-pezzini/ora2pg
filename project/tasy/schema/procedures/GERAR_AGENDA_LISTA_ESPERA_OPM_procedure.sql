-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_agenda_lista_espera_opm ( nm_usuario_p text, nr_seq_opm_p bigint, cd_pessoa_fisica_p text, nm_pessoa_lista_p text, ds_observacao_p text, nr_sequencia_p bigint) AS $body$
DECLARE

 
nr_seq_proc_interno_w	bigint;
cd_agenda_w		bigint;
nm_pessoa_lista_w	agenda_lista_espera.nm_pessoa_lista%Type;
cd_convenio_w agenda_lista_espera.cd_convenio%Type;
cd_categoria_w  agenda_lista_espera.cd_categoria%Type;
cd_plano_convenio_w  agenda_lista_espera.cd_plano%Type;

c01 CURSOR FOR 
	SELECT	b.nr_seq_proc_interno, 
		b.cd_agenda 
	from	regra_agenda_op a, 
		regra_agenda_op_item b 
	where	a.nr_sequencia	= b.nr_seq_regra_agenda_op 
	and	a.ie_situacao	= 'A' 
	and	a.nr_sequencia	= nr_sequencia_p;


BEGIN 
nm_pessoa_lista_w	:= nm_pessoa_lista_p;
 
if ((cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and 
		coalesce(nm_pessoa_lista_w::text, '') = '') then 
	 
	select	substr(obter_nome_pf(cd_pessoa_fisica_p),1,255) 
	into STRICT	nm_pessoa_lista_w 
	;
	 
end if;
 
open c01;
loop 
fetch c01 
into	nr_seq_proc_interno_w, 
	cd_agenda_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	select max(ac.CD_CONVENIO), 
    max(ac.CD_CATEGORIA), 
    max(ac.CD_PLANO_CONVENIO) 
	 into STRICT cd_convenio_w, 
	  cd_categoria_w, 
	  cd_plano_convenio_w 
 from ordem_producao_opm op, 
    PRESCR_OPM po, 
    PRESCR_MEDICA pm, 
    atendimento_paciente ap, 
    ATEND_CATEGORIA_CONVENIO ac 
 where op.NR_SEQUENCIA = NR_SEQ_OPM_P 
  and op.nr_seq_opm = po.nr_sequencia 
  and po.NR_PRESCRICAO = pm.nr_prescricao 
  and ap.nr_atendimento = pm.nr_atendimento 
  and ac.NR_ATENDIMENTO = ap.NR_ATENDIMENTO;
	 
	insert into agenda_lista_espera( 
		nr_sequencia, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		dt_atualizacao, 
		nm_usuario, 
		dt_agendamento, 
		nm_usuario_agenda, 
		ds_observacao, 
		ie_status_espera, 
		cd_pessoa_fisica, 
		nm_pessoa_lista, 
		nr_seq_opm, 
		cd_agenda, 
		nr_seq_proc_interno, 
		cd_convenio, 
		cd_categoria, 
		cd_plano, 
		dt_desejada 
	) values ( 
		nextval('agenda_lista_espera_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_observacao_p, 
		'A', 
		cd_pessoa_fisica_p, 
		nm_pessoa_lista_w, 
		nr_seq_opm_p, 
		cd_agenda_w, 
		nr_seq_proc_interno_w, 
		cd_convenio_w, 
		cd_categoria_w, 
		cd_plano_convenio_w, 
		clock_timestamp() 
	);
 
	if (nr_seq_opm_p > 0) then 
		CALL gravar_status_op_opm(nr_seq_opm_p,'APSA',cd_agenda_w,nm_usuario_p,wheb_usuario_pck.get_cd_estabelecimento);
	end if;
	end;
end loop;
close c01;
  
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_agenda_lista_espera_opm ( nm_usuario_p text, nr_seq_opm_p bigint, cd_pessoa_fisica_p text, nm_pessoa_lista_p text, ds_observacao_p text, nr_sequencia_p bigint) FROM PUBLIC;

