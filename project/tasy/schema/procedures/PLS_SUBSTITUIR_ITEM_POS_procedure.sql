-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_substituir_item_pos ( cd_item_p bigint, ie_tipo_p text, ie_origem_proced_p bigint, qt_item_p bigint, vl_uni_apres_p bigint, vl_total_apres_p bigint, nr_seq_conta_p bigint, nr_seq_item_subs_p bigint, nr_seq_analise_p pls_conta.nr_seq_analise%type, nr_seq_pos_estab_p pls_conta_pos_estabelecido.nr_sequencia%type, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_item_criado_p INOUT bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
/*Realizar testes na função OPS - Análise de produção médica e OPS - Gestão de contas médicas, verificar se ao alterar para umas das funções mencionadas continua a atender para a outra 
verificar principalmente em relação a função OPS - Gestão de contas médicas, devido a maioria dos clientes utilizar estas 
/* 
No NR_SEQ_OCOR_BENEF_P e no NR_SEQ_CONTA_GLOSA_P 
iremos passar a sequência da ocorrência/glosa que foi lançada na análise, para não inativar a mesma 
*/
 
 
nr_nota_fiscal_w			varchar(255);
ie_status_proc_w			varchar(3);
ie_via_acesso_w				varchar(1);
ie_tecnica_utilizada_w			varchar(1);
tx_medico_w				double precision;
tx_co_w					double precision;
tx_material_w				double precision;
nr_seq_conta_proc_w			bigint;
nr_seq_conta_mat_w			bigint;
nr_seq_proc_participante_w		bigint;
nr_seq_setor_atend_w			bigint;
nr_seq_prest_fornec_w			bigint;
nr_seq_regra_canc_item_orig_w		bigint;
nr_seq_proc_honor_w			bigint;
tx_item_w				double precision;
dt_item_w				timestamp;
dt_inicio_w				timestamp;
dt_fim_w				timestamp;
nr_seq_tipo_taxa_w			bigint;
nr_seq_item_insert_w			bigint;
nr_seq_segurado_w			pls_conta.nr_seq_segurado%type;
nr_seq_item_gerado_w			pls_conta.nr_sequencia%type;

BEGIN
 
select	max(nr_seq_segurado) 
into STRICT	nr_seq_segurado_w 
from	PLS_CONTA_POS_CABECALHO 
where	nr_seq_conta	= nr_seq_conta_p;
 
if (ie_tipo_p = 'P') then 
	begin 
	 
	select	a.dt_procedimento, 
		a.dt_inicio_proc, 
		a.dt_fim_proc, 
		a.ie_via_acesso, 
		a.ie_tecnica_utilizada, 
		a.nr_seq_setor_atend, 
		a.tx_item, 
		a.tx_medico, 
		a.tx_custo_operacional, 
		a.tx_material, 
		a.ie_status, 
		nr_seq_regra_canc_item_orig 
	into STRICT	dt_item_w, 
		dt_inicio_w, 
		dt_fim_w, 
		ie_via_acesso_w, 
		ie_tecnica_utilizada_w, 
		nr_seq_setor_atend_w, 
		tx_item_w, 
		tx_medico_w, 
		tx_co_w, 
		tx_material_w, 
		ie_status_proc_w, 
		nr_seq_regra_canc_item_orig_w 
	from	pls_conta_proc	a 
	where	a.nr_sequencia	= nr_seq_item_subs_p;
	exception 
	when others then 
		dt_item_w		:= null;
		dt_inicio_w		:= null;
		dt_fim_w		:= null;
		ie_via_acesso_w		:= null;
		ie_tecnica_utilizada_w	:= null;
		nr_seq_setor_atend_w	:= null;
		tx_item_w		:= null;
		tx_medico_w		:= null;
		tx_co_w			:= null;
		tx_material_w		:= null;
	end;
 
	select 	max(nr_sequencia) 
	into STRICT 	nr_seq_tipo_taxa_w 
	from 	pls_taxa_item 
	where 	tx_item = tx_item_w;
 
	select	nextval('w_pls_conta_proc_seq') 
	into STRICT	nr_seq_item_insert_w 
	;
	 
	insert	into	w_pls_conta_proc( 	nr_seq_tipo_taxa, cd_procedimento, ie_origem_proced, 
						dt_inicio_proc,	dt_fim_proc, vl_uni_apres, 
						vl_apresentado, ie_via_acesso,	dt_procedimento, 
						qt_apresentada, nr_sequencia, dt_atualizacao, 
						nm_usuario) 
			values (	nr_seq_tipo_taxa_w, cd_item_p, ie_origem_proced_p, 
						dt_inicio_w, dt_fim_w,vl_uni_apres_p, 
						vl_total_apres_p, ie_via_acesso_w, dt_item_w, 
						coalesce(qt_item_p,1),nr_seq_item_insert_w, clock_timestamp(), 
						nm_usuario_p);
						 
	nr_seq_item_gerado_w := pls_incluir_proc_analise_pos(	nr_seq_analise_p, nr_seq_segurado_w, null, nr_seq_conta_p, nr_seq_item_insert_w, null, null, 'N', nm_usuario_p, cd_estabelecimento_p, nr_seq_item_gerado_w);
					 
	/* Francisco - 24/12/2012 - OS 531926 - Se o item que está sendo substituído tinha sido 
	cancelado para geração dos honorários, cancelar os honorários primeiro, senão vai ficar 
	duplicado */
 
	 
	nr_seq_conta_proc_w	:= nr_seq_item_gerado_w;
 
	nr_seq_item_criado_p	:= nr_seq_conta_proc_w;
 
	update	pls_ocorrencia_benef a 
	set	ie_situacao		= 'I', 
		ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END  
	where	nr_seq_conta_pos_estab = nr_seq_pos_estab_p;
else 
	begin 
	select	a.dt_atendimento, 
		a.dt_inicio_atend, 
		a.dt_fim_atend, 
		a.nr_nota_fiscal, 
		a.nr_seq_prest_fornec 
	into STRICT	dt_item_w, 
		dt_inicio_w, 
		dt_fim_w, 
		nr_nota_fiscal_w, 
		nr_seq_prest_fornec_w 
	from	pls_conta_mat	a 
	where	a.nr_sequencia	= nr_seq_item_subs_p;
	exception 
		when others then 
		dt_item_w	:= null;
		dt_inicio_w	:= null;
		dt_fim_w	:= null;
		nr_nota_fiscal_w	:= null;
		nr_seq_prest_fornec_w	:= null;
	end;
	 
	select	nextval('w_pls_conta_proc_seq') 
	into STRICT	nr_seq_item_insert_w 
	;
	 
	insert	into	w_pls_conta_mat(dt_atendimento,vl_material_imp, vl_unitario_imp, 
					nr_nota_fiscal,nr_seq_prest_fornec, nr_seq_material, 
					qt_material_imp,dt_inicio_atend, nr_sequencia, dt_atualizacao, 
					nm_usuario) 
			values (dt_item_w,vl_total_apres_p, vl_uni_apres_p, 
					nr_nota_fiscal_w,nr_seq_prest_fornec_w,cd_item_p, 
					qt_item_p, dt_inicio_w,nr_seq_item_insert_w,clock_timestamp(), 
					nm_usuario_p );
	 
	nr_seq_item_gerado_w := pls_incluir_mat_analise_pos(  nr_seq_analise_p, nr_seq_item_insert_w, null, nr_seq_conta_p, null, nm_usuario_p, cd_estabelecimento_p, nr_seq_item_gerado_w);
	nr_seq_item_criado_p	:= nr_seq_item_gerado_w;
 
	update	pls_ocorrencia_benef a 
	set	ie_situacao		= 'I', 
		ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END  
	where	nr_seq_conta_pos_estab = nr_seq_pos_estab_p;
end if;
 
CALL pls_cancelar_item_pos(nr_seq_pos_estab_p,cd_estabelecimento_p, nm_usuario_p);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_substituir_item_pos ( cd_item_p bigint, ie_tipo_p text, ie_origem_proced_p bigint, qt_item_p bigint, vl_uni_apres_p bigint, vl_total_apres_p bigint, nr_seq_conta_p bigint, nr_seq_item_subs_p bigint, nr_seq_analise_p pls_conta.nr_seq_analise%type, nr_seq_pos_estab_p pls_conta_pos_estabelecido.nr_sequencia%type, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_item_criado_p INOUT bigint) FROM PUBLIC;

