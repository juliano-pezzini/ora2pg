-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_item_projeto_solic ( nr_solic_compra_p bigint, nr_seq_item_orc_p bigint, nr_seq_proj_gpi_p bigint, nr_seq_orcamento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


cd_material_w			bigint;
cd_unidade_medida_compra_w	varchar(30);
qt_item_w			double precision;
dt_mes_referencia_w		timestamp;
vl_orcado_w			double precision;
nr_item_w			integer;
nr_item_solic_compra_entr_w	integer;
nr_tipo_valor_prev_w		varchar(1);
vl_ultima_compra_w		double precision;
qt_dias_obter_compra_w		bigint;
cd_perfil_w			bigint;
qt_conv_compra_estoque_w	double precision;
vl_unit_previsto_w		double precision;


BEGIN

cd_perfil_w	:= obter_perfil_ativo;

select	substr(coalesce((obter_valor_param_usuario(913, 165, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p))::numeric ,90),1,1),
	substr(coalesce((obter_valor_param_usuario(913, 11, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p))::numeric ,90),1,1)
into STRICT	nr_tipo_valor_prev_w,
	qt_dias_obter_compra_w
;

if (nr_solic_compra_p > 0) and (nr_seq_item_orc_p > 0) and (nr_seq_proj_gpi_p > 0) and (nr_seq_orcamento_p > 0) then

	select	a.cd_material,
		coalesce(a.qt_item,1),
		a.dt_mes_referencia,
		a.vl_orcado
	into STRICT	cd_material_w,
		qt_item_w,
		dt_mes_referencia_w,
		vl_orcado_w
	from	gpi_orc_item a,
		gpi_orcamento b,
		gpi_projeto c
	where	a.nr_seq_orcamento = b.nr_sequencia
	and	b.nr_seq_projeto = c.nr_sequencia
	and	a.nr_sequencia = nr_seq_item_orc_p
	and	c.nr_sequencia = nr_seq_proj_gpi_p
	and	b.nr_sequencia = nr_seq_orcamento_p;

	select	coalesce(max(nr_item_solic_compra),0) + 1
	into STRICT	nr_item_w
	from	solic_compra_item
	where	nr_solic_compra = nr_solic_compra_p;

	select	substr(obter_dados_material_estab(cd_material_w,cd_estabelecimento_p,'UMC'),1,30) cd_unidade_medida_compra
	into STRICT	cd_unidade_medida_compra_w
	;

	if (nr_tipo_valor_prev_w = 0) or (nr_tipo_valor_prev_w = 1) then
		select	coalesce((obter_dados_ult_compra_data(cd_estabelecimento_p,cd_material_w,null,clock_timestamp(),0,'VU'))::numeric ,0)
		into STRICT	vl_ultima_compra_w
		;
	elsif (nr_tipo_valor_prev_w = 2) then
		select	coalesce((obter_maior_vl_compra_mat(cd_estabelecimento_p,365, cd_material_w, null,'N'))::numeric ,0)
		into STRICT	vl_ultima_compra_w
		;
	elsif (nr_tipo_valor_prev_w = 3) then
		select	coalesce((obter_maior_vl_compra_12_mes(cd_estabelecimento_p,365, cd_material_w, null,'N'))::numeric ,0)
		into STRICT	vl_ultima_compra_w
		;
	elsif (nr_tipo_valor_prev_w = 4) then
		select	coalesce((obter_maior_valor_compra_geral(cd_material_w, null,'N',cd_unidade_medida_compra_w))::numeric ,0)
		into STRICT	vl_ultima_compra_w
		;
	elsif (nr_tipo_valor_prev_w = 5) then
		select	coalesce((obter_maior_valor_compra_geral(cd_material_w, null,'S',cd_unidade_medida_compra_w))::numeric ,0)
		into STRICT	vl_ultima_compra_w
		;
	end if;

	select	CASE WHEN vl_ultima_compra_w=0 THEN coalesce(obter_dados_ult_compra_data(cd_estabelecimento_p, cd_material_w, null, clock_timestamp(), 0, 'VU'),0)  ELSE vl_ultima_compra_w END ,
		coalesce((obter_dados_material(cd_material_w,'QCE'))::numeric ,0)
	into STRICT	vl_ultima_compra_w,
		qt_conv_compra_estoque_w
	;

	if (vl_ultima_compra_w > 0) then
		vl_unit_previsto_w := trunc((coalesce(vl_ultima_compra_w,0)/coalesce(qt_conv_compra_estoque_w,0)),4);
	end if;

        insert into solic_compra_item(
		nr_solic_compra,
		nr_item_solic_compra,
		cd_material,
		cd_unidade_medida_compra,
		qt_material,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		ie_geracao,
		vl_orcado_gpi,
		vl_unit_previsto,
		nr_seq_orc_item_gpi,
		dt_solic_item)
	values (	nr_solic_compra_p,
		nr_item_w,
		cd_material_w,
		cd_unidade_medida_compra_w,
		qt_item_w,
		clock_timestamp(),
		nm_usuario_p,
		'A',
		'S',
		vl_orcado_w,
		coalesce(vl_unit_previsto_w,0),
		nr_seq_item_orc_p,
		dt_mes_referencia_w);

	if (dt_mes_referencia_w IS NOT NULL AND dt_mes_referencia_w::text <> '') then

		select	coalesce(max(nr_item_solic_compra_entr),0) + 1
		into STRICT	nr_item_solic_compra_entr_w
		from	solic_compra_item_entrega
		where	nr_solic_compra = nr_solic_compra_p
		and	nr_item_solic_compra = nr_item_w;

		insert into solic_compra_item_entrega(
			nr_solic_compra,
			nr_item_solic_compra,
			nr_item_solic_compra_entr,
			qt_entrega_solicitada,
			dt_entrega_solicitada,
			dt_atualizacao,
			nm_usuario)
		values (	nr_solic_compra_p,
			nr_item_w,
			nr_item_solic_compra_entr_w,
			qt_item_w,
			dt_mes_referencia_w,
			clock_timestamp(),
			nm_usuario_p);
	end if;
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_item_projeto_solic ( nr_solic_compra_p bigint, nr_seq_item_orc_p bigint, nr_seq_proj_gpi_p bigint, nr_seq_orcamento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

