-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_justific_automatica ( nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar automaticamente uma solicitação de justificativa para o prestador, conforme regra cadastrada na função OPS - Cadastro de Regras item Regra de justificativa automática. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [X] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: Avisar ao Eder sempre que for alterado ou incluido algum parâmetro. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
cd_doenca_w			varchar(10);
ie_tipo_segurado_w		varchar(255);
ie_preco_w			varchar(255);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
ie_origem_proced_ww		bigint;
nr_seq_regra_just_aut_w		bigint;
nr_seq_ocorrencia_w		bigint;
ie_ocorrencia_w			varchar(1)	:= 'X';
nr_seq_exce_just_aut_w		bigint;
ie_excessao_w			varchar(1)	:= 'N';
cd_proc_regra_w			bigint;
nr_seq_auditoria_w		bigint;
ie_orig_proc_regra_w		bigint;
cd_grupo_proc_regra_w		bigint;
cd_espec_regra_w		bigint;
cd_area_proc_regra_w		bigint;
cd_area_aud_w			bigint;
cd_especialidade_aud_w		bigint;
cd_grupo_aud_w			bigint;
ie_origem_proced_2_w		bigint;
cd_proc_aud_w			bigint;
ie_orig_proc_aud_w		bigint;
ds_mensagem_w			varchar(255);
qt_ocorrencia_w			bigint;
qt_excessao_w			bigint;
nr_seq_item_aud_w		bigint;
ds_indicacao_clinica_w		varchar(255);
ie_estagio_w			smallint;
ie_liminar_w			varchar(1) := 'N';
ie_tipo_guia_w			varchar(2);
qt_ocorr_regra_w		bigint;
ie_anexo_w			varchar(1) := 'N';
qt_anexo_w			varchar(5);
nr_seq_material_w		bigint;
nr_seq_grupo_contrato_w		bigint;
qt_existe_grupo_w		integer;
nr_seq_contrato_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_grupo_servico_w		bigint;
ie_grupo_servico_w		varchar(1) := 'N';
nr_seq_prestador_w		bigint;
nr_seq_tipo_prestador_w		bigint;
nr_seq_prestador_regra_w	bigint;
nr_seq_tipo_prestador_regra_w	bigint;

C01 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		b.cd_procedimento, 
		b.ie_origem_proced, 
		b.nr_seq_material 
	from	pls_auditoria_item	b, 
		pls_auditoria		a 
	where (a.nr_seq_requisicao	= nr_seq_requisicao_p 
	or	a.nr_seq_guia		= nr_seq_guia_p) 
	and	a.nr_sequencia		= b.nr_seq_auditoria 
	and	b.ie_status = 'P';

C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_grupo_contrato, 
		nr_seq_grupo_servico, 
		nr_seq_prestador, 
		nr_seq_tipo_prestador 
	from	pls_regra_just_automatica 
	where (coalesce(cd_procedimento::text, '') = ''	or cd_procedimento	 = cd_procedimento_w) 
	and (coalesce(ie_origem_proced::text, '') = ''	or ie_origem_proced	 = ie_origem_proced_ww) 
	and (coalesce(cd_grupo_proc::text, '') = ''	or cd_grupo_proc   	 = cd_grupo_w) 
	and (coalesce(cd_especialidade::text, '') = ''	or cd_especialidade 	 = cd_especialidade_w) 
	and (coalesce(cd_area_procedimento::text, '') = ''	or cd_area_procedimento	 = cd_area_w) 
	and (coalesce(nr_seq_material::text, '') = '' or nr_seq_material 	 = nr_seq_material_w) 
	and (coalesce(ie_tipo_segurado::text, '') = ''	or ie_tipo_segurado	 = ie_tipo_segurado_w) 
	and (coalesce(ie_preco::text, '') = ''	or ie_preco		 = ie_preco_w) 
	and (coalesce(ie_tipo_guia::text, '') = '' or ie_tipo_guia 	 = ie_tipo_guia_w) 
	and (coalesce(cd_doenca::text, '') = ''	or cd_doenca		 = cd_doenca_w) 
	and (coalesce(nr_seq_prestador::text, '') = ''	or nr_seq_prestador	 = nr_seq_prestador_w) 
	and (coalesce(nr_seq_tipo_prestador::text, '') = ''	or nr_seq_tipo_prestador = nr_seq_tipo_prestador_w) 
	and	clock_timestamp()			between(dt_inicio_vigencia) 	and fim_dia(coalesce(dt_fim_vigencia,clock_timestamp())) 
	and (coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento and pls_obter_se_controle_estab('RE') = 'S') 
	
union all
 
	SELECT	nr_sequencia, 
		nr_seq_grupo_contrato, 
		nr_seq_grupo_servico, 
		nr_seq_prestador, 
		nr_seq_tipo_prestador 
	from	pls_regra_just_automatica 
	where (coalesce(cd_procedimento::text, '') = ''	or cd_procedimento	 = cd_procedimento_w) 
	and (coalesce(ie_origem_proced::text, '') = ''	or ie_origem_proced	 = ie_origem_proced_ww) 
	and (coalesce(cd_grupo_proc::text, '') = ''	or cd_grupo_proc   	 = cd_grupo_w) 
	and (coalesce(cd_especialidade::text, '') = ''	or cd_especialidade 	 = cd_especialidade_w) 
	and (coalesce(cd_area_procedimento::text, '') = ''	or cd_area_procedimento	 = cd_area_w) 
	and (coalesce(nr_seq_material::text, '') = '' or nr_seq_material 	 = nr_seq_material_w) 
	and (coalesce(ie_tipo_segurado::text, '') = ''	or ie_tipo_segurado	 = ie_tipo_segurado_w) 
	and (coalesce(ie_preco::text, '') = ''	or ie_preco		 = ie_preco_w) 
	and (coalesce(ie_tipo_guia::text, '') = '' or ie_tipo_guia 	 = ie_tipo_guia_w) 
	and (coalesce(cd_doenca::text, '') = ''	or cd_doenca		 = cd_doenca_w) 
	and (coalesce(nr_seq_prestador::text, '') = ''	or nr_seq_prestador	 = nr_seq_prestador_w) 
	and (coalesce(nr_seq_tipo_prestador::text, '') = ''	or nr_seq_tipo_prestador = nr_seq_tipo_prestador_w) 
	and	clock_timestamp()			between(dt_inicio_vigencia) 	and fim_dia(coalesce(dt_fim_vigencia,clock_timestamp())) 
	and 	pls_obter_se_controle_estab('RE') = 'N';
	
C03 CURSOR FOR 
	SELECT	nr_seq_ocorrencia 
	from	pls_ocorrencia_just_aut 
	where	nr_seq_regra_just_aut	= nr_seq_regra_just_aut_w;


BEGIN 
 
if (coalesce(nr_seq_requisicao_p,0)	<> 0) and (pls_obter_permite_solic_justif(nr_seq_requisicao_p)	= 'S') then 
	begin 
		select	nr_seq_segurado, 
			nr_seq_plano, 
			substr(coalesce(ds_indicacao_clinica,'X'),1,255), 
			ie_estagio, 
			ie_tipo_guia, 
			nr_seq_prestador 
		into STRICT	nr_seq_segurado_w, 
			nr_seq_plano_w, 
			ds_indicacao_clinica_w, 
			ie_estagio_w, 
			ie_tipo_guia_w, 
			nr_seq_prestador_w 
		from	pls_requisicao 
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception 
	when others then 
		nr_seq_segurado_w	:= 0;
		nr_seq_plano_w	:= 0;
		ie_tipo_guia_w := '';
	end;
 
	begin 
		select	cd_doenca 
		into STRICT	cd_doenca_w 
		from	pls_requisicao_diagnostico 
		where	nr_seq_requisicao	= nr_seq_requisicao_p;
	exception 
	when others then 
		cd_doenca_w	:= 'X';
	end;
	 
	select	count(1) 
	into STRICT	qt_anexo_w 
	from	pls_requisicao_anexo 
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
 
	if (qt_anexo_w > 0) then 
		ie_anexo_w := 'S';
	end if;
elsif (coalesce(nr_seq_guia_p,0)	<> 0) then 
	begin 
		select	nr_seq_segurado, 
			nr_seq_plano, 
			substr(coalesce(ds_indicacao_clinica,'X'),1,255), 
			ie_estagio, 
			ie_tipo_guia, 
			nr_seq_prestador 
		into STRICT	nr_seq_segurado_w, 
			nr_seq_plano_w, 
			ds_indicacao_clinica_w, 
			ie_estagio_w, 
			ie_tipo_guia_w, 
			nr_seq_prestador_w 
		from	pls_guia_plano 
		where	nr_sequencia	= nr_seq_guia_p;
	exception 
	when others then 
		nr_seq_segurado_w	:= 0;
		nr_seq_plano_w		:= 0;
		ie_tipo_guia_w 		:= '';
	end;
 
	begin 
		select	cd_doenca 
		into STRICT	cd_doenca_w 
		from	pls_diagnostico 
		where	nr_seq_guia	= nr_seq_guia_p;
	exception 
	when others then 
		cd_doenca_w	:= 'X';
	end;
	 
	select	count(1) 
	into STRICT	qt_anexo_w 
	from	pls_guia_plano_anexo 
	where	nr_seq_guia	= nr_seq_guia_p;
 
	if (qt_anexo_w > 0) then 
		ie_anexo_w := 'S';
	end if;
end if;
 
 
if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then --Verifica a existência de prestador na guia ou requisição, existindo então busca o tipo do prestador. 
	begin 
	select	nr_seq_tipo_prestador 
	into STRICT	nr_seq_tipo_prestador_w 
	from	pls_prestador 
	where	nr_sequencia = nr_seq_prestador_w;
	exception 
		when others then 
			null;
	end;		
end if;
 
if (nr_seq_segurado_w	> 0) then 
	select	coalesce(ie_tipo_segurado,'X'), 
		nr_seq_contrato, 
		nr_seq_intercambio 
	into STRICT	ie_tipo_segurado_w, 
		nr_seq_contrato_w, 
		nr_seq_intercambio_w 
	from	pls_segurado 
	where	nr_sequencia	= nr_seq_segurado_w;
	 
	nr_seq_contrato_w := coalesce(nr_seq_contrato_w,0);
	nr_seq_intercambio_w := coalesce(nr_seq_intercambio_w,0);
end if;
 
if (nr_seq_plano_w	> 0) then 
	select	coalesce(ie_preco,'X') 
	into STRICT	ie_preco_w 
	from	pls_plano 
	where	nr_sequencia	= nr_seq_plano_w;
end if;
 
if (ie_estagio_w	in (1,4)) then 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_item_aud_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin	 
 
		if (coalesce(cd_procedimento_w,0) > 0) then 
			SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww;
 
		end if;
	 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_regra_just_aut_w, 
			nr_seq_grupo_contrato_w, 
			nr_seq_grupo_servico_w, 
			nr_seq_prestador_regra_w, 
			nr_seq_tipo_prestador_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin		 
			ie_liminar_w := 'N';
			 
			if (coalesce(nr_seq_grupo_contrato_w,0) <> 0) then 
				select	count(1) 
				into STRICT	qt_existe_grupo_w 
				from	pls_preco_contrato 
				where	nr_seq_grupo	= nr_seq_grupo_contrato_w 
				and (nr_seq_contrato	= nr_seq_contrato_w 
				or	nr_seq_intercambio	= nr_seq_intercambio_w);
				if (qt_existe_grupo_w = 0) then 
					goto final;
				end if;
			end if;	
 
			/*Grupo serviço*/
 
			if (coalesce(nr_seq_grupo_servico_w,0) > 0) then 
				ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_w, cd_procedimento_w, ie_origem_proced_w);
				if (ie_grupo_servico_w	= 'N') then 
					goto final;
				end if;
			end if;			
			 
			select	count(1) 
			into STRICT	qt_ocorr_regra_w 
			from	pls_ocorrencia_just_aut 
			where	nr_seq_regra_just_aut	= nr_seq_regra_just_aut_w;
 
			if (qt_ocorr_regra_w	> 0) then 
				open C03;
				loop 
				fetch C03 into	 
					nr_seq_ocorrencia_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin					 
					if (coalesce(nr_seq_requisicao_p,0)	<> 0) then 
						select	count(1) 
						into STRICT	qt_ocorrencia_w 
						from	pls_ocorrencia_benef 
						where	nr_seq_requisicao	= nr_seq_requisicao_p 
						and	nr_seq_ocorrencia	= nr_seq_ocorrencia_w;
					elsif (coalesce(nr_seq_guia_p,0)	<> 0) then 
						select	count(1) 
						into STRICT	qt_ocorrencia_w 
						from	pls_ocorrencia_benef 
						where	nr_seq_guia_plano	= nr_seq_guia_p 
						and	nr_seq_ocorrencia	= nr_seq_ocorrencia_w;
					end if;
 
					if (qt_ocorrencia_w	> 0) then 
						if (coalesce(nr_seq_requisicao_p,0)	<> 0) then 
							ie_liminar_w	:= pls_obter_se_benef_liminar(nr_seq_requisicao_p);
						elsif (coalesce(nr_seq_guia_p,0)	<> 0) then 
							ie_liminar_w	:= pls_obter_se_bene_guia_liminar(nr_seq_guia_p);
						end if;
 
						select	count(1) 
						into STRICT	qt_excessao_w 
						from	pls_excecao_just_aut 
						where	nr_seq_regra_just_aut		= nr_seq_regra_just_aut_w 
						and	((coalesce(cd_procedimento::text, '') = '')	or (cd_procedimento		= cd_procedimento_w)) 
						and   ((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced 		= ie_origem_proced_ww) 
						or (coalesce(cd_procedimento::text, '') = '')) 
						and   ((coalesce(cd_grupo_proc::text, '') = '')	or (cd_grupo_proc		= cd_grupo_w)) 
						and   ((coalesce(cd_especialidade::text, '') = '')	or (cd_especialidade		= cd_especialidade_w)) 
						and   ((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento	= cd_area_w)) 
						and	((coalesce(nr_seq_grupo_contrato::text, '') = '') or (nr_seq_grupo_contrato	= nr_seq_grupo_contrato_w)) 
						and	((coalesce(ie_indicacao_clinica,'N')	= 'N') 
						or (ie_indicacao_clinica	= 'S')	and (ds_indicacao_clinica_w	<> 'X')) 
						and	((ie_liminar_judicial	= 'N') or (coalesce(ie_liminar_judicial::text, '') = '') or (ie_liminar_judicial = ie_liminar_w)) 
						and	((ie_anexo = 'N') or (coalesce(ie_anexo::text, '') = '') or (ie_anexo = ie_anexo_w)) 
						and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_regra_w)) 
						and	((coalesce(nr_seq_tipo_prestador::text, '') = '') or (nr_seq_tipo_prestador = nr_seq_tipo_prestador_regra_w)) 
						and	clock_timestamp()	between(dt_inicio_vigencia) and (fim_dia(coalesce(dt_fim_vigencia,clock_timestamp())));
 
						if (qt_excessao_w	= 0) then 
							CALL pls_inserir_just_automatica(nr_seq_requisicao_p, nr_seq_guia_p, nr_seq_regra_just_aut_w, nr_seq_item_aud_w, nm_usuario_p);
						end if;
					end if;
					end;
				end loop;
				close C03;
			else 
				if (coalesce(nr_seq_requisicao_p,0)	<> 0) then 
					ie_liminar_w	:= pls_obter_se_benef_liminar(nr_seq_requisicao_p);
				elsif (coalesce(nr_seq_guia_p,0)	<> 0) then 
					ie_liminar_w	:= pls_obter_se_bene_guia_liminar(nr_seq_guia_p);
				end if;
 
				select	count(1) 
				into STRICT	qt_excessao_w 
				from	pls_excecao_just_aut 
				where	nr_seq_regra_just_aut		= nr_seq_regra_just_aut_w 
				and	((coalesce(cd_procedimento::text, '') = '')	or (cd_procedimento		= cd_procedimento_w)) 
				and   ((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced 		= ie_origem_proced_ww) 
				or (coalesce(cd_procedimento::text, '') = '')) 
				and   ((coalesce(cd_grupo_proc::text, '') = '')	 or (cd_grupo_proc		= cd_grupo_w)) 
				and   ((coalesce(cd_especialidade::text, '') = '')	or (cd_especialidade		= cd_especialidade_w)) 
				and   ((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento	= cd_area_w)) 
				and	((coalesce(nr_seq_grupo_contrato::text, '') = '') or (nr_seq_grupo_contrato	= nr_seq_grupo_contrato_w)) 
				and	((coalesce(ie_indicacao_clinica,'N')	= 'N') 
				or (ie_indicacao_clinica	= 'S')	and (ds_indicacao_clinica_w	<> 'X')) 
				and (coalesce(ie_liminar_judicial,'N') 	= ie_liminar_w) 
				and	((ie_liminar_judicial	= 'N') or (coalesce(ie_liminar_judicial::text, '') = '') or (ie_liminar_judicial = ie_liminar_w)) 
				and	((ie_anexo = 'N') or (coalesce(ie_anexo::text, '') = '') or (ie_anexo = ie_anexo_w))				 
				and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_regra_w)) 
				and	((coalesce(nr_seq_tipo_prestador::text, '') = '') or (nr_seq_tipo_prestador = nr_seq_tipo_prestador_regra_w)) 
				and	clock_timestamp()	between(dt_inicio_vigencia) and (fim_dia(coalesce(dt_fim_vigencia,clock_timestamp())));
 
				if (qt_excessao_w	= 0) then 
					CALL pls_inserir_just_automatica(nr_seq_requisicao_p, nr_seq_guia_p, nr_seq_regra_just_aut_w, nr_seq_item_aud_w, nm_usuario_p);
				end if;
			end if;
			<<final>> 
			qt_existe_grupo_w := 0;
			end;			
		end loop;
		close C02;
		end;
	end loop;
	close C01;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_justific_automatica ( nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, nm_usuario_p text) FROM PUBLIC;

