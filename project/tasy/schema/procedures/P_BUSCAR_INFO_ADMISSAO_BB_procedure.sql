-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function p_buscar_info_admissao_bb as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE p_buscar_info_admissao_bb ( nr_atendimento_p atend_paciente_unidade.nr_atendimento%type, cd_setor_atendimento_p atend_paciente_unidade.cd_setor_atendimento%type, bb_count_icu INOUT bigint, bb_count_stepdown INOUT bigint, bb_count_acute INOUT bigint, bb_type INOUT text, bb_new_type INOUT text, bb_ie_readmitido INOUT text, bb_nr_seq_interno_anterior INOUT unidade_atendimento.nr_seq_interno%type ) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'SELECT * FROM p_buscar_info_admissao_bb_atx ( ' || quote_nullable(nr_atendimento_p) || ',' || quote_nullable(cd_setor_atendimento_p) || ',' || quote_nullable(bb_count_icu) || ',' || quote_nullable(bb_count_stepdown) || ',' || quote_nullable(bb_count_acute) || ',' || quote_nullable(bb_type) || ',' || quote_nullable(bb_new_type) || ',' || quote_nullable(bb_ie_readmitido) || ',' || quote_nullable(bb_nr_seq_interno_anterior) || ' )';
	SELECT * FROM dblink(v_conn_str, v_query) AS p (v_ret0 bigint, v_ret1 bigint, v_ret2 bigint, v_ret3 text, v_ret4 text, v_ret5 text, v_ret6 unidade_atendimento.nr_seq_interno%type) INTO bb_count_icu, bb_count_stepdown, bb_count_acute, bb_type, bb_new_type, bb_ie_readmitido, bb_nr_seq_interno_anterior;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE p_buscar_info_admissao_bb_atx ( nr_atendimento_p atend_paciente_unidade.nr_atendimento%type, cd_setor_atendimento_p atend_paciente_unidade.cd_setor_atendimento%type, bb_count_icu INOUT bigint, bb_count_stepdown INOUT bigint, bb_count_acute INOUT bigint, bb_type INOUT text, bb_new_type INOUT text, bb_ie_readmitido INOUT text, bb_nr_seq_interno_anterior INOUT unidade_atendimento.nr_seq_interno%type ) AS $body$
DECLARE
bb_count_readmissao bigint := 0;
  cd_setor_atendimento_anterior atend_paciente_unidade.cd_setor_atendimento%type;


BEGIN

  SELECT  MAX(nr_seq_interno)
  INTO STRICT    bb_nr_seq_interno_anterior
  FROM    atend_paciente_unidade
  WHERE   nr_atendimento = nr_atendimento_p;

  SELECT  count(*)
  INTO STRICT    bb_count_acute
  FROM    atend_paciente_unidade apu, setor_atendimento sa
  WHERE   apu.CD_SETOR_ATENDIMENTO = sa.CD_SETOR_ATENDIMENTO
  AND (cd_classif_setor = 1 OR cd_classif_setor = 3)
  AND     apu.NR_ATENDIMENTO = nr_atendimento_p;

  SELECT  count(*)
  INTO STRICT    bb_count_icu
  FROM    atend_paciente_unidade apu, setor_atendimento sa
  WHERE   apu.CD_SETOR_ATENDIMENTO = sa.CD_SETOR_ATENDIMENTO
  AND     cd_classif_setor = 4
  AND     coalesce(ie_semi_intensiva, 'N') = 'N'
  AND     apu.NR_ATENDIMENTO = nr_atendimento_p;

  SELECT  count(*)
  INTO STRICT    bb_count_stepdown
  FROM    atend_paciente_unidade apu, setor_atendimento sa
  WHERE   apu.CD_SETOR_ATENDIMENTO = sa.CD_SETOR_ATENDIMENTO
  AND     cd_classif_setor = 4
  AND     coalesce(ie_semi_intensiva, 'N') = 'S'
  AND     apu.NR_ATENDIMENTO = nr_atendimento_p;

  cd_setor_atendimento_anterior := obter_setor_atendimento(nr_atendimento_p);

  IF (cd_setor_atendimento_anterior IS NOT NULL AND cd_setor_atendimento_anterior::text <> '') THEN
    SELECT
      CASE
        WHEN cd_classif_setor = 4 AND coalesce(ie_semi_intensiva, 'N') = 'N'
        THEN 'ICU'
        WHEN cd_classif_setor = 4 AND coalesce(ie_semi_intensiva, 'N') = 'S'
        THEN 'Stepdown'
        WHEN cd_classif_setor = 1 OR cd_classif_setor = 3
        THEN 'Acute'
        ELSE NULL
      END as bb_type
    INTO STRICT  bb_type
    FROM  setor_atendimento
    WHERE CD_SETOR_ATENDIMENTO = cd_setor_atendimento_anterior;
  ELSE
    bb_type := NULL;
  END IF;

  SELECT
    CASE
      WHEN cd_classif_setor = 4 AND coalesce(ie_semi_intensiva, 'N') = 'N'
      THEN 'ICU'
      WHEN cd_classif_setor = 4 AND coalesce(ie_semi_intensiva, 'N') = 'S'
      THEN 'Stepdown'
      WHEN cd_classif_setor = 1 OR cd_classif_setor = 3
      THEN 'Acute'
      ELSE ''
    END as bb_new_type
  INTO STRICT  bb_new_type
  FROM  setor_atendimento
  WHERE CD_SETOR_ATENDIMENTO = cd_setor_atendimento_p;

  IF (bb_count_icu > 0 AND bb_new_type = 'ICU') THEN

    SELECT  count(*)
    INTO STRICT    bb_count_readmissao
    FROM    atend_paciente_unidade apu, setor_atendimento sa
    WHERE   apu.CD_SETOR_ATENDIMENTO = sa.CD_SETOR_ATENDIMENTO
    AND     cd_classif_setor = 4
    AND     coalesce(ie_semi_intensiva, 'N') = 'N'
    AND     apu.dt_entrada_unidade > clock_timestamp() - interval '1440 days'/(24*60)
    AND     apu.NR_ATENDIMENTO = nr_atendimento_p;

  ELSIF (bb_count_stepdown > 0 AND bb_new_type = 'Stepdown') THEN

    SELECT  count(*)
    INTO STRICT    bb_count_readmissao
    FROM    atend_paciente_unidade apu, setor_atendimento sa
    WHERE   apu.CD_SETOR_ATENDIMENTO = sa.CD_SETOR_ATENDIMENTO
    AND     cd_classif_setor = 4
    AND     coalesce(ie_semi_intensiva, 'N') = 'S'
    AND     apu.dt_entrada_unidade > clock_timestamp() - interval '1440 days'/(24*60)
    AND     apu.NR_ATENDIMENTO = nr_atendimento_p;

  ELSIF (bb_count_acute > 0 AND bb_new_type = 'Acute') THEN

    SELECT  count(*)
    INTO STRICT    bb_count_readmissao
    FROM    atend_paciente_unidade apu, setor_atendimento sa
    WHERE   apu.CD_SETOR_ATENDIMENTO = sa.CD_SETOR_ATENDIMENTO
    AND (cd_classif_setor = 1 OR cd_classif_setor = 3)
    AND     apu.dt_entrada_unidade > clock_timestamp() - interval '1440 days'/(24*60)
    AND     apu.NR_ATENDIMENTO = nr_atendimento_p;

  END IF;

  IF (bb_count_readmissao > 0) THEN
    bb_ie_readmitido := 'S';
  ELSE
    bb_ie_readmitido := 'N';
  END IF;
  commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE p_buscar_info_admissao_bb ( nr_atendimento_p atend_paciente_unidade.nr_atendimento%type, cd_setor_atendimento_p atend_paciente_unidade.cd_setor_atendimento%type, bb_count_icu INOUT bigint, bb_count_stepdown INOUT bigint, bb_count_acute INOUT bigint, bb_type INOUT text, bb_new_type INOUT text, bb_ie_readmitido INOUT text, bb_nr_seq_interno_anterior INOUT unidade_atendimento.nr_seq_interno%type ) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE p_buscar_info_admissao_bb_atx ( nr_atendimento_p atend_paciente_unidade.nr_atendimento%type, cd_setor_atendimento_p atend_paciente_unidade.cd_setor_atendimento%type, bb_count_icu INOUT bigint, bb_count_stepdown INOUT bigint, bb_count_acute INOUT bigint, bb_type INOUT text, bb_new_type INOUT text, bb_ie_readmitido INOUT text, bb_nr_seq_interno_anterior INOUT unidade_atendimento.nr_seq_interno%type ) FROM PUBLIC;

