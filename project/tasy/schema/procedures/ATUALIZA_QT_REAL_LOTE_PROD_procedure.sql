-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_qt_real_lote_prod ( nm_usuario_p text, nr_lote_producao_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE


qt_real_w				double precision;
qt_prevista_w			double precision;

nr_sequencia_w			integer;
cd_material_w			integer;
qt_conv_estoque_consumo_w	double precision;
qt_prevista_comp_w		double precision;
qt_real_comp_w			double precision;
qt_estoque_comp_w		double precision;

/* Serviços  */

ie_permite_vincular_servico_w	varchar(1) := 'N';
nr_seq_proc_interno_w		bigint;
qt_item_w			double precision;
vl_item_w				double precision;

C01 CURSOR FOR
SELECT	nr_sequencia,
	cd_material,
	(obter_dados_material_estab(cd_material, cd_estabelecimento_p, 'QEC'))::numeric  qt_conv_estoque_consumo,
	qt_prevista
from	lote_producao_comp
where	nr_lote_producao = nr_lote_producao_p;

C02 CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_proc_interno,
	qt_item
from	lote_producao_serv
where	nr_lote_producao = nr_lote_producao_p;


BEGIN

/*Pega o tempo para controle do item do inventário conforme parâmetro [199] do PalmWeb ( Usuário que está realizando a contagem )*/

ie_permite_vincular_servico_w := obter_param_usuario(143, 307, null, nm_usuario_p, cd_estabelecimento_p, ie_permite_vincular_servico_w);

select	qt_real,
	qt_prevista
into STRICT	qt_real_w,
	qt_prevista_w
from	lote_producao
where	nr_lote_producao = nr_lote_producao_p;

if (coalesce(qt_real_w::text, '') = '') then
	update	lote_producao
	set	qt_real = qt_prevista
	where	nr_lote_producao = nr_lote_producao_p;

	qt_real_w := qt_prevista_w;
end if;

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	cd_material_w,
	qt_conv_estoque_consumo_w,
	qt_prevista_comp_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	qt_real_comp_w 		:= dividir(qt_real_w * qt_prevista_comp_w, qt_prevista_w);
	qt_estoque_comp_w 	:= dividir(qt_real_comp_w, qt_conv_estoque_consumo_w);

	update	lote_producao_comp
	set	qt_real = qt_real_comp_w,
		qt_estoque = qt_estoque_comp_w
	where 	nr_lote_producao = nr_lote_producao_p
	and	nr_sequencia = nr_sequencia_w
	and	cd_material = cd_material_w;

	end;
end loop;
close C01;

if (coalesce(ie_permite_vincular_servico_w, 'N') = 'S') then
	begin

	open C02;
	loop
	fetch C02 into
		nr_sequencia_w,
		nr_seq_proc_interno_w,
		qt_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		vl_item_w := (qt_item_w * cus_obter_preco_padrao_proc(cd_estabelecimento_p, clock_timestamp(), nr_seq_proc_interno_w));

		update	lote_producao_serv
		set	vl_item = vl_item_w,
			vl_original = vl_item_w /* Aqui é gerado o valor original, pois na valorização este valor pode ser alterado  */
		where 	nr_lote_producao = nr_lote_producao_p
		and	nr_sequencia = nr_sequencia_w
		and	nr_seq_proc_interno = nr_seq_proc_interno_w;

		end;
	end loop;
	close C02;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_qt_real_lote_prod ( nm_usuario_p text, nr_lote_producao_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

