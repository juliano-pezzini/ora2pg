-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tx_permanecia_sus_nsus ( dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
cd_estabelecimento_w	bigint;
dt_final_w		timestamp;
dt_ref_prev_w		timestamp;
dt_referencia_w		timestamp;
ie_prev_real_w		varchar(2);
ie_tipo_dado_w		varchar(15);
nr_sequencia_w		bigint;
qt_mes_w		bigint;
vl_indicador_w		double precision;
cd_estabelecimento_ww	bigint;

C01 CURSOR FOR 
SELECT	a.cd_estabelecimento, 
	'SUS', 
	dividir(sum(a.nr_pac_dia), sum(a.nr_altas + a.nr_obitos)) 
from	convenio b, 
	EIS_CENSO_DIARIO_V2 a 
where	a.cd_convenio		= b.cd_convenio 
and	a.dt_referencia		= dt_referencia_w 
and 	b.ie_tipo_convenio	= 2 
and	a.ie_periodo		= 'M' 
group by a.cd_estabelecimento 

union all
 
SELECT	a.cd_estabelecimento, 
	'NSUS', 
	dividir(sum(a.nr_pac_dia), sum(a.nr_altas + a.nr_obitos)) 
from	convenio b, 
	EIS_CENSO_DIARIO_V2 a 
where	a.cd_convenio		= b.cd_convenio 
and	a.dt_referencia		= dt_referencia_w 
and 	b.ie_tipo_convenio	<> 2 
and	a.ie_periodo		= 'M' 
group by a.cd_estabelecimento;

C02 CURSOR FOR 
SELECT	cd_estabelecimento, 
	ie_tipo_convenio, 
	avg(vl_indicador), 
	'R' 
from	w_media_permanencia 
where	dt_referencia	between dt_referencia_w and add_months(dt_referencia_w,11) 
and	ie_periodo	= 'M' 
group by 
	cd_estabelecimento, 
	ie_tipo_convenio 

union all
	 
SELECT	cd_estabelecimento, 
	ie_tipo_convenio, 
	sum(vl_indicador), 
	'P' 
from	w_media_permanencia 
where	dt_referencia	between dt_referencia_w and dt_ref_prev_w 
and	ie_periodo		= 'M' 
and	qt_mes_w		< 12 
group by 
	cd_estabelecimento, 
	ie_tipo_convenio;

BEGIN
 
dt_referencia_w		:= trunc(dt_parametro_p,'month');
if (dt_referencia_w = trunc(clock_timestamp(),'month')) then 
	dt_final_w	:= trunc(clock_timestamp(),'dd') -1;
else 
	dt_final_w	:= last_day(dt_referencia_w);
end if;
 
delete	from	w_media_permanencia 
where	dt_referencia		between dt_referencia_w and last_day(dt_referencia_w) + 86399/86400;
commit;
 
open C01;
loop 
fetch C01 into 
	cd_estabelecimento_w, 
	ie_tipo_dado_w, 
	vl_indicador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	select	nextval('w_media_permanencia_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	select	coalesce(max(cd_estabelecimento),0) 
	into STRICT	cd_estabelecimento_ww 
	from	estabelecimento 
	where	cd_estabelecimento = cd_estabelecimento_w;
 
	if (cd_estabelecimento_ww > 0) then 
		begin 
 
		insert into w_media_permanencia( 
			nr_sequencia, 
			cd_estabelecimento, 
			dt_atualizacao, 
			nm_usuario, 
			dt_referencia, 
			ie_tipo_convenio, 
			ie_periodo, 
			vl_indicador, 
			ie_prev_real) 
		values ( 
			nr_sequencia_w, 
			cd_estabelecimento_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			dt_referencia_w, 
			ie_tipo_dado_w, 
			'M', 
			vl_indicador_w, 
			'R');
 
		end;
	end if;
end loop;
close C01;
 
commit;
 
 
dt_referencia_w		:= trunc(dt_parametro_p,'year');
if (dt_parametro_p < trunc(clock_timestamp(),'year')) then 
	qt_mes_w			:= 99;
elsif (dt_parametro_p > last_day(trunc(clock_timestamp(),'month'))) then 
	dt_ref_prev_w			:= trunc(dt_parametro_p,'month');
	qt_mes_w			:= campo_numerico(to_char(dt_ref_prev_w,'mm'));
else 
	dt_ref_prev_w			:= add_months(trunc(dt_parametro_p,'month'), -1);
	qt_mes_w			:= campo_numerico(to_char(dt_ref_prev_w,'mm'));
end if;
 
delete from	w_media_permanencia 
where	dt_referencia		= dt_referencia_w 
and	ie_periodo		= 'A';
commit;
 
OPEN C02;
LOOP 
FETCH C02 into	 
		cd_estabelecimento_w,	 
		ie_tipo_dado_w, 
		vl_indicador_w, 
		ie_prev_real_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	select	nextval('w_media_permanencia_seq') 
	into STRICT	nr_sequencia_w 
	;
	if (ie_prev_real_w = 'P') then 
		vl_indicador_w	:= vl_indicador_w / qt_mes_w * 12;
	end if;
	insert into w_media_permanencia( 
		nr_sequencia, 
		cd_estabelecimento, 
		dt_atualizacao, 
		nm_usuario, 
		dt_referencia, 
		ie_prev_real, 
		ie_tipo_convenio, 
		ie_periodo, 
		vl_indicador) 
	values ( 
		nr_sequencia_w, 
		cd_estabelecimento_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		dt_referencia_w, 
		ie_prev_real_w, 
		ie_tipo_dado_w, 
		'A', 
		vl_indicador_w);
END LOOP;	
CLOSE C02;
 
if (qt_mes_w < 12) then 
	insert into w_media_permanencia( 
		nr_sequencia, 
		cd_estabelecimento, 
		dt_atualizacao, 
		nm_usuario, 
		dt_referencia, 
		ie_prev_real, 
		ie_periodo, 
		vl_indicador, 
		ie_tipo_convenio) 
	SELECT	nextval('w_media_permanencia_seq'), 
		cd_estabelecimento, 
		clock_timestamp(), 
		nm_usuario_p, 
		dt_referencia_w, 
		'P', 
		'A', 
		vl_indicador, 
		ie_tipo_convenio 
	from	w_media_permanencia 
	where	ie_periodo	= 'A' 
	and	dt_referencia	= dt_referencia_w;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tx_permanecia_sus_nsus ( dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

