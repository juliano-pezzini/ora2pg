-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_calc_sol_concent_final (cd_material_p cpoe_material.cd_material%type, qt_dose_p cpoe_material.qt_dose%type, cd_unidade_medida_p cpoe_material.cd_unidade_medida%type, cd_mat_dil_p cpoe_material.cd_material%type, qt_dose_dil_p cpoe_material.qt_dose%type, cd_unidade_medida_dil_p cpoe_material.cd_unidade_medida%type, qt_volume_total_p bigint, qt_concent_final_out_p INOUT cpoe_material.qt_dose%type, cd_unidade_med_concent_out_p INOUT cpoe_material.cd_unidade_medida%type) AS $body$
DECLARE


cd_unidade_medida_ml_w	cpoe_material.cd_unidade_medida%type;
qt_conversao_w	cpoe_material.qt_dose%type;
qt_conversao_ml_w	cpoe_material.qt_dose%type;
qt_conversao_dil_ml_w	cpoe_material.qt_dose%type;


BEGIN

cd_unidade_medida_ml_w := obter_unid_med_usua('ml');

select	min(a.cd_unidade_medida)
into STRICT	cd_unidade_med_concent_out_p
from	material_conversao_unidade a,
	unidade_medida b,
	valor_dominio c
where	a.cd_material = cd_material_p
and	a.cd_unidade_medida = cd_unidade_medida_p
and	a.cd_unidade_medida = b.cd_unidade_medida
and	c.cd_dominio = 7978
and	c.vl_dominio in ('mg', 'MCG', 'UI')
and	b.ie_unidade_med_inter = c.vl_dominio
order by a.ie_prioridade;

if (coalesce(cd_unidade_med_concent_out_p::text, '') = '') then
	select	min(a.cd_unidade_medida)
	into STRICT	cd_unidade_med_concent_out_p
	from	material_conversao_unidade a,
		unidade_medida b,
		valor_dominio c
	where	a.cd_material = cd_material_p
	and	a.cd_unidade_medida = b.cd_unidade_medida
	and	c.cd_dominio = 7978
	and	c.vl_dominio in ('mg', 'MCG', 'UI')
	and	b.ie_unidade_med_inter = c.vl_dominio
	order by a.ie_prioridade;
end if;

if (cd_unidade_med_concent_out_p IS NOT NULL AND cd_unidade_med_concent_out_p::text <> '') then
	qt_conversao_w	:= Obter_dose_convertida(cd_material_p, qt_dose_p, cd_unidade_medida_p, cd_unidade_med_concent_out_p);

	if (coalesce(qt_conversao_w, 0) > 0) then
		if (coalesce(qt_volume_total_p, 0) > 0) then
			qt_concent_final_out_p := qt_conversao_w / qt_volume_total_p;
		else
			qt_conversao_ml_w := Obter_dose_convertida(cd_material_p, qt_dose_p, cd_unidade_medida_p, cd_unidade_medida_ml_w);
			qt_conversao_dil_ml_w := Obter_dose_convertida(cd_mat_dil_p, qt_dose_dil_p, cd_unidade_medida_dil_p, cd_unidade_medida_ml_w);
		
			if (coalesce(qt_conversao_ml_w, 0) > 0 and coalesce(qt_conversao_dil_ml_w, 0 ) > 0) then
				qt_concent_final_out_p := qt_conversao_w / (qt_conversao_ml_w + qt_conversao_dil_ml_w);
			end if;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_calc_sol_concent_final (cd_material_p cpoe_material.cd_material%type, qt_dose_p cpoe_material.qt_dose%type, cd_unidade_medida_p cpoe_material.cd_unidade_medida%type, cd_mat_dil_p cpoe_material.cd_material%type, qt_dose_dil_p cpoe_material.qt_dose%type, cd_unidade_medida_dil_p cpoe_material.cd_unidade_medida%type, qt_volume_total_p bigint, qt_concent_final_out_p INOUT cpoe_material.qt_dose%type, cd_unidade_med_concent_out_p INOUT cpoe_material.cd_unidade_medida%type) FROM PUBLIC;

