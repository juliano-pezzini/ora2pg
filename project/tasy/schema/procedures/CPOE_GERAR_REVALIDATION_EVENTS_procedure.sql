-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_gerar_revalidation_events (nr_atendimento_p bigint, nr_seq_cpoe_p bigint, ie_tipo_item_p text, nr_seq_revalidation_rule_p bigint, ie_liberacao_p text, nm_usuario_p text, nr_seq_reval_events_p INOUT cpoe_revalidation_events.nr_sequencia%type) AS $body$
DECLARE


dt_validacao_w				timestamp;
dt_validacao_ww				timestamp;
dt_validacao_non_medic_w    timestamp;
dt_lib_suspensao_w			timestamp;
qt_count_eventos_w			bigint;
dt_hora_fim_revalidacao_w	cpoe_revalidation_rule.dt_hora_fim_revalidacao%type;
qt_dias_revalidacao_w		cpoe_revalidation_rule.qt_dias_revalidacao%type;
cd_medico_ant_w				cpoe_revalidation_events.cd_medico%type;
nm_usuario_nrec_w			usuario.nm_usuario%type;
nr_seq_reval_events_w		cpoe_revalidation_events.nr_sequencia%type;


BEGIN

if ((nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and  (nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '') and (ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '') and (nr_seq_revalidation_rule_p IS NOT NULL AND nr_seq_revalidation_rule_p::text <> '')) then
	
	
	if (ie_tipo_item_p = 'N') then
		
		select	max(dt_inicio),
				max(nm_usuario_nrec)
		into STRICT	dt_validacao_w,
				nm_usuario_nrec_w
		from	cpoe_dieta
		where	nr_sequencia = nr_seq_cpoe_p;
		
		if (ie_liberacao_p = 'N') then
			update	cpoe_dieta
			set	nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia = nr_seq_cpoe_p;
			
			commit;
		end if;
		
	elsif (ie_tipo_item_p = 'H') then
		
		select	max(coalesce(dt_inicio, dt_programada)),
				max(nm_usuario_nrec)
		into STRICT	dt_validacao_w,
				nm_usuario_nrec_w
		from 	cpoe_hemoterapia
		where	nr_sequencia = nr_seq_cpoe_p;
	
		if (ie_liberacao_p = 'N') then
			update	cpoe_hemoterapia
			set	nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia = nr_seq_cpoe_p;
			
			commit;
		end if;
	
	elsif (ie_tipo_item_p = 'D' or ie_tipo_item_p = 'DI' or ie_tipo_item_p = 'DP') then
	
		select	max(dt_inicio),
				max(nm_usuario_nrec)
		into STRICT	dt_validacao_w,
				nm_usuario_nrec_w
		from	cpoe_dialise
		where	nr_sequencia	= nr_seq_cpoe_p;
		
		if (ie_liberacao_p = 'N') then
			update	cpoe_dialise
			set	nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia = nr_seq_cpoe_p;
			
			commit;
		end if;

	elsif (ie_tipo_item_p = 'G') then
	
		select	max(dt_inicio),
				max(nm_usuario_nrec)
		into STRICT	dt_validacao_w,
				nm_usuario_nrec_w
		from	cpoe_gasoterapia
		where	nr_sequencia	= nr_seq_cpoe_p;
		
		if (ie_liberacao_p = 'N') then
			update	cpoe_gasoterapia
			set	nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia = nr_seq_cpoe_p;
			
			commit;
		end if;
		
	elsif (ie_tipo_item_p = 'M') then
	
		select	max(dt_inicio),
				max(nm_usuario_nrec)
		into STRICT	dt_validacao_w,
				nm_usuario_nrec_w
		from	cpoe_material
		where	nr_sequencia	= nr_seq_cpoe_p;
		
		if (ie_liberacao_p = 'N') then
			update	cpoe_material
			set	nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia = nr_seq_cpoe_p;
			
			commit;
		end if;

	elsif (ie_tipo_item_p = 'R') then
		
		select	max(dt_inicio),
				max(nm_usuario_nrec)
		into STRICT	dt_validacao_w,
				nm_usuario_nrec_w
		from	cpoe_recomendacao
		where	nr_sequencia	= nr_seq_cpoe_p;
		
		if (ie_liberacao_p = 'N') then
			update	cpoe_recomendacao
			set	nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia = nr_seq_cpoe_p;
			
			commit;
		end if;
		
	elsif (ie_tipo_item_p = 'P') then
		
		select	max(dt_inicio),
				max(nm_usuario_nrec)
		into STRICT	dt_validacao_w,
				nm_usuario_nrec_w
		from	cpoe_procedimento
		where	nr_sequencia	= nr_seq_cpoe_p;
		
		if (ie_liberacao_p = 'N') then
			update	cpoe_procedimento
			set	nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia = nr_seq_cpoe_p;
			
			commit;
		end if;
	end if;
	
	if (coalesce(dt_validacao_w::text, '') = '' or dt_validacao_w > PKG_DATE_UTILS.get_DateTime(clock_timestamp(), PKG_DATE_UTILS.get_Time('23:59:59'))) then
		dt_validacao_w := clock_timestamp();
	end if;
	
	select	max(dt_hora_fim_revalidacao),
			max(qt_dias_revalidacao)
	into STRICT	dt_hora_fim_revalidacao_w,
			qt_dias_revalidacao_w
	from	cpoe_revalidation_rule
	where	nr_sequencia = nr_seq_revalidation_rule_p
	and 	coalesce(ie_situacao, 'A') = 'A';
	
	select 	count(1),
			max(dt_validacao)
	into STRICT	qt_count_eventos_w,
			dt_validacao_ww
	from	cpoe_revalidation_events
	where	(((ie_tipo_item_p = 'DI' or ie_tipo_item_p = 'DP' or ie_tipo_item_p = 'D') AND nr_seq_dialysis = nr_seq_cpoe_p) or
			 (ie_tipo_item_p = 'N' AND nr_seq_diet = nr_seq_cpoe_p) or
			 (ie_tipo_item_p = 'H' AND nr_seq_hemotherapy = nr_seq_cpoe_p) or
			 ((ie_tipo_item_p = 'M' or ie_tipo_item_p = 'MA') AND nr_seq_material = nr_seq_cpoe_p) or
			 (ie_tipo_item_p = 'P' AND nr_seq_exam = nr_seq_cpoe_p) or
			 (ie_tipo_item_p = 'R' AND nr_seq_recomendation = nr_seq_cpoe_p) or
			 (ie_tipo_item_p = 'G' AND nr_seq_gasotherapy = nr_seq_cpoe_p));
			
	if (qt_count_eventos_w > 0) then
		dt_validacao_w := ((to_date((to_char(dt_validacao_ww, 'dd/mm/yyyy ') || to_char(dt_hora_fim_revalidacao_w, 'hh24:mi:ss')), 'dd/mm/yyyy hh24:mi:ss') + (qt_dias_revalidacao_w)));
		
		begin
			cd_medico_ant_w := cpoe_obter_medico_reval_events(nr_seq_cpoe_p, ie_tipo_item_p);
		exception when others then
			cd_medico_ant_w := null;
		end;
	else
		dt_validacao_w := ((to_date((to_char(dt_validacao_w, 'dd/mm/yyyy ') || to_char(dt_hora_fim_revalidacao_w, 'hh24:mi:ss')), 'dd/mm/yyyy hh24:mi:ss') + (qt_dias_revalidacao_w)));
		
		cd_medico_ant_w := obter_pf_usuario(nm_usuario_nrec_w, 'C');
	end if;
	
	dt_validacao_non_medic_w := ((to_date((to_char(clock_timestamp(), 'dd/mm/yyyy ') || to_char(dt_hora_fim_revalidacao_w, 'hh24:mi:ss')), 'dd/mm/yyyy hh24:mi:ss') + (qt_dias_revalidacao_w)));
	
	if ((dt_validacao_w < clock_timestamp()) or
	   (dt_validacao_w < dt_validacao_non_medic_w AND qt_count_eventos_w = 0)) then
		dt_validacao_w := dt_validacao_non_medic_w;
	end if;

    select nextval('cpoe_revalidation_events_seq')
          into STRICT nr_seq_reval_events_w
;

	nr_seq_reval_events_p := nr_seq_reval_events_w;
	
	insert into cpoe_revalidation_events(
				nr_sequencia,
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				cd_medico, 
				nr_atendimento, 
				cd_medico_anterior, 
				nr_seq_dialysis, 
				nr_seq_diet, 
				nr_seq_hemotherapy, 
				nr_seq_material, 
				nr_seq_exam, 
				nr_seq_recomendation, 
				nr_seq_gasotherapy, 
				nr_seq_revalidation_rule,
				dt_validacao)
				values (
				nr_seq_reval_events_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				obter_pf_usuario(nm_usuario_p,'C'),
				nr_atendimento_p,
				coalesce(cd_medico_ant_w,obter_pf_usuario(nm_usuario_p, 'C')),
				(case when ie_tipo_item_p = 'DI' or ie_tipo_item_p = 'DP' or ie_tipo_item_p = 'D' then nr_seq_cpoe_p else null end),
				(case when ie_tipo_item_p = 'N' then nr_seq_cpoe_p else null end),
				(case when ie_tipo_item_p = 'H' then nr_seq_cpoe_p else null end),
				(case when ie_tipo_item_p = 'M' or ie_tipo_item_p = 'MA' then nr_seq_cpoe_p else null end),
				(case when ie_tipo_item_p = 'P' then nr_seq_cpoe_p else null end),
				(case when ie_tipo_item_p = 'R' then nr_seq_cpoe_p else null end),
				(case when ie_tipo_item_p = 'G' then nr_seq_cpoe_p else null end),
				nr_seq_revalidation_rule_p,
				dt_validacao_w);
				
	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_gerar_revalidation_events (nr_atendimento_p bigint, nr_seq_cpoe_p bigint, ie_tipo_item_p text, nr_seq_revalidation_rule_p bigint, ie_liberacao_p text, nm_usuario_p text, nr_seq_reval_events_p INOUT cpoe_revalidation_events.nr_sequencia%type) FROM PUBLIC;

