-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_fluxo_caixa ( cd_estabelecimento_p bigint, vl_saldo_anterior_p bigint, dt_inicio_p timestamp, dt_final_p timestamp, ie_periodo_p text, ie_classif_p text, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, ie_passado_real_p text, ie_somente_ativa_p text, nr_seq_regra_p bigint default null, cd_moeda_p bigint default null) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENCAO ----------------------------------------------------------------*/


/* Cuidado ao realizar alteracoes no fluxo de caixa. Toda e qualquer alteracao realizada em qualquer uma das       */


/* procedures do fluxo de caixa deve ser cuidadosamente verificada e realizada no fluxo de caixa em lote.           */


/* Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando assim que           */


/* existam diferencas entre os fluxos de caixa.                                                                                                                */


/*--------------- AO ALTERAR O FLUXO DE CAIXA ALTERAR TAMBEM O FLUXO DE CAIXA EM LOTE ---------------*/



/*
ie_passado_real_p (Edgar 05/12/2007, OS 74953)
* Parametro para identificar o fluxo a ser calculado e passado/realizar
Neste caso, o saldo inicial do fluxo a realizar devera ser o saldo final do fluxo passado calculado anteriormente
*/
vl_fluxo_w			double precision;
vl_saldo_w			double precision;
nr_seq_saldo_w			bigint;
nr_seq_caixa_w			bigint;
vl_saldo_anterior_w		double precision;
vl_saldo_caixa_w		double precision;
vl_saldo_banco_w		double precision;
vl_regra_saldo_banco_w		double precision;
cd_conta_financ_w		bigint;
cd_conta_saldo_ant_w		bigint;
cd_conta_saldo_w		bigint;
cd_conta_diaria_w		bigint;
dt_referencia_w			timestamp;
cd_conta_superior_w		bigint;
ie_origem_w			varchar(01)	:= 'C';
vl_saldo_fluxo_w		double precision	:= 0;
dt_saldo_atual_w		timestamp;
dt_saldo_anterior_w		timestamp;
dt_inicio_calculo_w		timestamp;
dt_saldo_w			timestamp;
dt_atual_w			timestamp;
ie_saldo_anterior_w		varchar(100);
ie_saldo_passado_w		varchar(100);
ie_passado_real_param_w		varchar(100);
vl_saldo_avista_w		double precision;
vl_saldo_fechamento_w		double precision;
vl_saldo_ant_w			double precision;
dt_inicio_w			timestamp;
dt_final_w	       		timestamp;
ie_saldo_realizar_zerado_w	varchar(1)	:= 'n';
ie_fluxo_diario_w		varchar(255);
vl_inicio_projeto_w		double precision;
vl_cheque_w			double precision;
ie_fechamento_diario_w		varchar(10);
ds_erro_w			varchar(255);
qt_reg_w			bigint;
cd_conta_financ_acum_w		conta_financeira.cd_conta_financ%type;
cd_conta_financ_ant_w		conta_financeira.cd_conta_financ%type;
vl_saldo_fluxo_acum_w		fluxo_caixa.vl_fluxo%type	:= 0;

dt_inicio_dia_w			timestamp;
dt_inicio_fim_dia_w		timestamp;
dt_inicio_fim_mes_w		timestamp;
dt_inicio_fim_dia_ant_w		timestamp;
dt_fechamento_w			timestamp;
dt_fechamento_mes_w		timestamp;
dt_saldo_dia_w			timestamp;
dt_inicio_mes_w			timestamp;
dt_final_mes_w			timestamp;
dt_referencia_ini_w		timestamp;
dt_referencia_fim_w		timestamp;

nr_ordem_apres_comp_w		bigint;
ie_integracao_w			fluxo_caixa.ie_integracao%type;
cd_conta_financ_cre_w		bigint;
ie_adiant_receb_w		varchar(255);
ie_tit_rec_canc_w		varchar(255);
ie_movto_bco_pend_w		varchar(2);
ie_data_tit_adiant_rec_w	varchar(1);
ie_titulo_caixa_w		parametro_fluxo_caixa.ie_titulo_caixa%type;
ie_tit_pagar_transf_w		varchar(255);
ie_trans_fin_conta_w		varchar(1);
vl_rec_baixado_w		fluxo_caixa.vl_fluxo%type;
/* Projeto Multimoeda - Variaveis */

cd_moeda_empresa_w		integer;
cd_moeda_estrang_w		integer;
vl_saldo_estrang_w		double precision;
vl_saldo_ant_estrang_w		double precision;
vl_saldo_banco_estrang_w	double precision;
vl_saldo_caixa_estrang_w	double precision;
vl_saldo_vista_estrang_w	double precision;
vl_cheque_estrang_w		double precision;
vl_saldo_fecha_estrang_w	double precision;


c01 CURSOR FOR
SELECT	max(b.nr_sequencia)
from	estabelecimento c,
	banco_saldo b,
	banco_estabelecimento a
where (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
and	c.cd_empresa		= cd_empresa_p
and	a.cd_estabelecimento	= c.cd_estabelecimento
and	b.nr_seq_conta		= a.nr_sequencia
and	a.ie_tipo_relacao	in ('C', 'ECC')
and	a.ie_fluxo_caixa	= 'S'
and	a.ie_situacao 		= 'A'
group by	b.nr_seq_conta;

c03 CURSOR FOR
SELECT	max(a.dt_saldo),
	a.nr_seq_caixa
from	estabelecimento c,
	caixa b,
	caixa_saldo_diario a
where (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(b.cd_estabelecimento) = cd_estabelecimento_p)))
and	c.cd_empresa		= cd_empresa_p
and	b.cd_estabelecimento	= c.cd_estabelecimento
and	a.dt_saldo		<= dt_inicio_fim_dia_w
and	b.nr_sequencia		= a.nr_seq_caixa
and	b.ie_situacao		= 'A'
group by	a.nr_seq_caixa;

C020 CURSOR FOR
SELECT 	a.dt_referencia,
	sum(coalesce(a.vl_fluxo,0))
from 	Conta_Financeira b,
	fluxo_caixa a
where	a.dt_referencia		between dt_inicio_calculo_w and dt_final_w
and	a.ie_classif_fluxo	= ie_classif_p
and	ie_periodo		= ie_periodo_p
and	a.cd_conta_financ	= b.cd_conta_financ
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
and	a.cd_empresa		= cd_empresa_p
and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
and	b.cd_conta_financ	<> cd_conta_saldo_ant_w    /* Edgar 17/02/2004 - o saldo anterior nao pode entrar no calculo (OS 6152) */
and	b.cd_empresa		= cd_empresa_p        -- Nao pode entrar conta financeira de outra empresa
and	coalesce(b.cd_conta_superior::text, '') = ''
and	b.ie_oper_fluxo		<> 'I'				-- Conta financeira informativa nao acumula saldo e conta superior
and	CASE WHEN ie_somente_ativa_p='S' THEN b.ie_situacao  ELSE 'A' END 	= 'A'
group by	a.dt_referencia
order by	a.dt_referencia;

C030 CURSOR FOR
SELECT 	distinct
	b.cd_conta_financ,
	ie_integracao
from 	Conta_Financeira b,
	fluxo_caixa a
where	coalesce(b.ie_acumular,'N')	= 'S'
and	a.dt_referencia		between dt_inicio_w and dt_final_w
and	a.ie_classif_fluxo	= ie_classif_p
and	ie_periodo		= ie_periodo_p
and	a.cd_conta_financ	= b.cd_conta_financ
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
and	a.cd_empresa		= cd_empresa_p
and	b.cd_empresa		= cd_empresa_p        -- Nao pode entrar conta financeira de outra empresa
and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
and	CASE WHEN ie_somente_ativa_p='S' THEN b.ie_situacao  ELSE 'A' END 	= 'A'
order by	b.cd_conta_financ;


BEGIN

dt_inicio_w		:= dt_inicio_p;
dt_final_w	       	:= dt_final_p;

if (ie_periodo_p = 'M') then
	dt_inicio_w		:= trunc(dt_inicio_p, 'month');
	dt_final_w	       	:= fim_mes(dt_final_p);
end if;

dt_inicio_dia_w		:= trunc(dt_inicio_w,'dd');
dt_inicio_fim_dia_w	:= fim_dia(dt_inicio_w);
dt_inicio_fim_mes_w	:= fim_dia(fim_mes(dt_inicio_w));
dt_inicio_mes_w		:= trunc(dt_inicio_p,'month');
dt_final_mes_w		:= trunc(dt_final_p,'month');

ie_fechamento_diario_w := Obter_Param_Usuario(830, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_fechamento_diario_w);

/* Projeto Multimoeda - Busca a moeda padrao da empresa e verifica o parametro cd_moeda passado na procedure. Ele sera a base da busca dos dados
		em moeda estrangeira. Caso o parametro seja nulo, devera ser considerada a moeda padrao da empresa nas consultas,
		caso contrario ira buscar somente os dados na moeda selecionada.*/
select obter_moeda_padrao_empresa(cd_estabelecimento_p,'E')
into STRICT cd_moeda_empresa_w
;
if (coalesce(cd_moeda_p::text, '') = '') then
	cd_moeda_estrang_w := cd_moeda_empresa_w;
else
	cd_moeda_estrang_w := cd_moeda_p;
end if;

/* Obter a conta de Saldo */

begin
	select	cd_conta_financ_saldo,
		cd_conta_financ_sant,
		IE_SALDO_ANTERIOR,
		IE_SALDO_PASSADO,
		ie_passado_real,
		coalesce(ie_saldo_realizar_zerado,'N'),
		coalesce(ie_fluxo_diario,'S'),
		coalesce(cd_conta_financ_cre,1),
		coalesce(ie_adiant_receb,'A'),
		coalesce(ie_tit_rec_canc, 'N'),
		coalesce(ie_movto_bco_pend,'N'),
		coalesce(ie_data_tit_adiant_rec,'N'),
		coalesce(ie_titulo_caixa,'S'),
		coalesce(ie_tit_pagar_transf,'S'),
		coalesce(ie_trans_fin_conta,'M')
	into STRICT 	cd_conta_saldo_w,
		cd_conta_saldo_ant_w,
		IE_SALDO_ANTERIOR_w,
		IE_SALDO_PASSADO_w,
		ie_passado_real_param_w,
		ie_saldo_realizar_zerado_w,
		ie_fluxo_diario_w,
		cd_conta_financ_cre_w,
		ie_adiant_receb_w,
		ie_tit_rec_canc_w,
		ie_movto_bco_pend_w,
		ie_data_tit_adiant_rec_w,
		ie_titulo_caixa_w,
		ie_tit_pagar_transf_w,
		ie_trans_fin_conta_w
	from 	Parametro_Fluxo_caixa
	where	cd_estabelecimento	= cd_estabelecimento_p;
exception when no_data_found then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(190200);
end;

if (coalesce(cd_conta_saldo_w::text, '') = '') or (coalesce(cd_conta_saldo_ant_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(176725,null);
end if;

/* Obter a data do ultimo saldo atual do fluxo */

begin

select	max(dt_referencia)
into STRICT 	dt_saldo_atual_w
from	fluxo_caixa
where	dt_referencia		< dt_inicio_dia_w
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
and	cd_empresa		= cd_empresa_p
and	ie_classif_fluxo	= ie_classif_p
and	ie_periodo		= ie_periodo_p
and	cd_conta_financ		= cd_conta_saldo_w
and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada;
exception
when	others then
	dt_saldo_atual_w	:= dt_inicio_w;
end;


/* Obter a data do ultimo saldo anterior do fluxo */

begin

select	max(dt_referencia)
into STRICT	dt_saldo_anterior_w
from	fluxo_caixa
where	dt_referencia		<= dt_inicio_fim_dia_w
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
and	cd_empresa		= cd_empresa_p
and	ie_classif_fluxo	= ie_classif_p
and	ie_periodo		= ie_periodo_p
and	cd_conta_financ		= cd_conta_saldo_ant_w
and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada;
exception
when	others then
	dt_saldo_Anterior_w	:= dt_inicio_w;
end;

/* Obter o saldo anterior do fluxo */

vl_saldo_w		:= 0;
vl_saldo_estrang_w	:= 0;

if (ie_saldo_anterior_w	= 'R') then

	CALL gerar_composicao_fluxo_caixa(	nr_seq_regra_p,
					dt_inicio_fim_dia_w,
					cd_estabelecimento_p,
					ie_restringe_estab_p,
					nm_usuario_p,
					ie_periodo_p,
					coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w));

	select	max(a.nr_ordem_apres)
	into STRICT	nr_ordem_apres_comp_w
	from	composicao_fluxo_caixa a
	where	a.nm_usuario		= nm_usuario_p
	and	a.nr_seq_regra		= nr_seq_regra_p;

	select	coalesce(max(a.vl_composicao),0)
	into STRICT	vl_saldo_anterior_w
	from	composicao_fluxo_caixa a
	where	a.nm_usuario		= nm_usuario_p
	and	a.nr_ordem_apres	= nr_ordem_apres_comp_w
	and	a.nr_seq_regra		= nr_seq_regra_p
	and	coalesce(a.cd_moeda,cd_moeda_empresa_w) 	= coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	
	if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
		vl_saldo_ant_estrang_w := vl_saldo_anterior_w;
	end if;


else

	if (coalesce(ie_passado_real_p,'N') = 'S') and (coalesce(ie_passado_real_param_w,'N') = 'S') then
		begin

		select	max(dt_referencia)
		into STRICT	dt_saldo_w
		from	fluxo_caixa
		where	dt_referencia	 	<= CASE WHEN ie_periodo_p='M' THEN dt_inicio_fim_mes_w  ELSE dt_inicio_fim_dia_w END
		and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
		and	cd_empresa		= cd_empresa_p
		and	ie_classif_fluxo	= 'P' 
		and	ie_periodo		= ie_periodo_p
		and	cd_conta_financ		= cd_conta_saldo_w
		and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
		dt_saldo_dia_w	:= trunc(dt_saldo_w,'dd');

		/* se a data selecionada for no inicio do dia */

		if (dt_saldo_w	= dt_saldo_dia_w) then

			select	vl_fluxo
			into STRICT 	vl_saldo_ant_w
			from	fluxo_caixa
			where	dt_referencia		= dt_saldo_w
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
			and	cd_empresa		= cd_empresa_p
			and	ie_classif_fluxo	= 'P'
			and	ie_periodo		= ie_periodo_p
			and	cd_conta_financ		= cd_conta_saldo_w;

		end if;

		exception
		when	others then
			dt_saldo_atual_w	:= dt_inicio_w;
		end;

		vl_saldo_anterior_w	:= coalesce(vl_saldo_ant_w,0);
		if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
			vl_saldo_ant_estrang_w	:= coalesce(vl_saldo_ant_w,0);
		end if;

	elsif (IE_SALDO_ANTERIOR_w <> 'VI') then

		vl_saldo_banco_w	:= 0;
		dt_inicio_fim_dia_ant_w	:= fim_dia(dt_inicio_w - 1);

		/* considerar apenas os saldos positivos */

		select	coalesce(sum(vl_saldo_banco),0),
			coalesce(sum(vl_saldo_banco_estrang),0)
		into STRICT	vl_saldo_banco_w,
			vl_saldo_banco_estrang_w
		from	(SELECT	coalesce(obter_saldo_banco_diario(b.nr_sequencia, dt_inicio_fim_dia_ant_w),0) vl_saldo_banco,
				coalesce(obter_saldo_banco_diario_estr(b.nr_sequencia, dt_inicio_fim_dia_ant_w),0) vl_saldo_banco_estrang
			from	estabelecimento c,
				banco_saldo b,
				banco_estabelecimento a
			where	substr(obter_se_filtro_fluxo(a.nr_sequencia,null,null,nm_usuario_p,null),1,255) = 'S'
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
			and	c.cd_empresa		= cd_empresa_p
			and	a.cd_estabelecimento	= c.cd_estabelecimento
			and	coalesce(b.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
			and	b.nr_seq_conta		= a.nr_sequencia
			and	a.ie_tipo_relacao	in ('C', 'ECC')
			and	a.ie_fluxo_caixa	= 'S'
			and	a.ie_situacao		= 'A'
			and	b.dt_referencia		=
				(select	max(dt_referencia)
				from	banco_saldo x
				where	x.nr_seq_conta	= b.nr_seq_conta
				and	x.dt_referencia	<= dt_inicio_fim_dia_w)) alias20
		where (coalesce(ie_saldo_anterior_w,'X') <> 'CBC' or vl_saldo_banco > 0);
		
		select	count(*)
		into STRICT	qt_reg_w
		from	transacao_financeira a,
			movto_trans_financ b
		where	a.nr_sequencia		= b.nr_seq_trans_financ
		and	(b.nr_seq_saldo_banco IS NOT NULL AND b.nr_seq_saldo_banco::text <> '')
		and	a.ie_saldo_fluxo	= 'S';
			
		vl_saldo_caixa_w	:= 0;

		/* considerar apenas os saldos positivos */

		select	coalesce(sum(vl_saldo_inicial),0),
			coalesce(sum(vl_saldo_avista),0),
			coalesce(sum(vl_saldo_inicial_estr),0),
			coalesce(sum(vl_saldo_vista_estr),0)
		into STRICT	vl_saldo_caixa_w,
			vl_saldo_avista_w,
			vl_saldo_caixa_estrang_w,
			vl_saldo_vista_estrang_w
		from	(SELECT	a.vl_saldo_inicial,
				coalesce(a.vl_saldo_avista,a.vl_saldo) vl_saldo_avista,
				0 vl_saldo_inicial_estr,
				0 vl_saldo_vista_estr
			from	estabelecimento c,
				caixa b,
				caixa_saldo_diario a
			where	substr(obter_se_filtro_fluxo(null,null,null,nm_usuario_p,b.nr_sequencia),1,255) = 'S'
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(b.cd_estabelecimento) = cd_estabelecimento_p)))
			and	c.cd_empresa		= cd_empresa_p
			and	b.cd_estabelecimento	= c.cd_estabelecimento
			and	a.nr_seq_caixa		= b.nr_sequencia
			and	b.ie_situacao		= 'A'
			and	b.ie_fluxo 		= 'S'
			and	a.dt_saldo		=
				(select	max(dt_saldo)
				from	caixa_saldo_diario x
				where	x.nr_seq_caixa	= a.nr_seq_caixa
				and	x.dt_saldo	<= dt_inicio_fim_dia_w)
			and	a.dt_saldo		between dt_inicio_dia_w and dt_inicio_fim_dia_w
			and	cd_moeda_empresa_w = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)
			
union all

			SELECT	a.vl_saldo vl_saldo_inicial,
				coalesce(a.vl_saldo_avista,a.vl_saldo) vl_saldo_avista,
				0 vl_saldo_inicial_estr,
				0 vl_saldo_vista_estr
			from	estabelecimento c,
				caixa b,
				caixa_saldo_diario a
			where	substr(obter_se_filtro_fluxo(null,null,null,nm_usuario_p,b.nr_sequencia),1,255) = 'S'
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(b.cd_estabelecimento) = cd_estabelecimento_p)))
			and	c.cd_empresa		= cd_empresa_p
			and	b.cd_estabelecimento	= c.cd_estabelecimento
			and	a.nr_seq_caixa		= b.nr_sequencia
			and	b.ie_situacao		= 'A'
			and	b.ie_fluxo 		= 'S'
			and	a.dt_saldo		=
				(select	max(dt_saldo)
				from	caixa_saldo_diario x
				where	x.nr_seq_caixa	= a.nr_seq_caixa
				and	x.dt_saldo	<= dt_inicio_fim_dia_w)
			and (a.dt_saldo < dt_inicio_dia_w or a.dt_saldo > dt_inicio_fim_dia_w)
			and	cd_moeda_empresa_w = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)
			
union all

			select	0 vl_saldo_inicial,
				0 vl_saldo_avista,
				e.vl_saldo_inicial vl_saldo_inicial_estr,
				coalesce(e.vl_saldo_avista,e.vl_saldo) vl_saldo_vista_estr
			from	estabelecimento c,
				caixa b,
				caixa_saldo_diario a,
				caixa_saldo_estrang e
			where	substr(obter_se_filtro_fluxo(null,null,null,nm_usuario_p,b.nr_sequencia),1,255) = 'S'
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(b.cd_estabelecimento) = cd_estabelecimento_p)))
			and	c.cd_empresa		= cd_empresa_p
			and	b.cd_estabelecimento	= c.cd_estabelecimento
			and	a.nr_seq_caixa		= b.nr_sequencia
			and	e.nr_seq_caixa_saldo	= a.nr_sequencia
			and	b.ie_situacao		= 'A'
			and	b.ie_fluxo 		= 'S'
			and	a.dt_saldo		=
				(select	max(dt_saldo)
				from	caixa_saldo_diario x
				where	x.nr_seq_caixa	= a.nr_seq_caixa
				and	x.dt_saldo	<= dt_inicio_fim_dia_w)
			and	a.dt_saldo		between dt_inicio_dia_w and dt_inicio_fim_dia_w
			and	coalesce(e.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)
			
union all

			select	0 vl_saldo_inicial,
				0 vl_saldo_avista,
				e.vl_saldo_inicial vl_saldo_inicial_estr,
				coalesce(e.vl_saldo_avista,e.vl_saldo) vl_saldo_vista_estr
			from	estabelecimento c,
				caixa b,
				caixa_saldo_diario a,
				caixa_saldo_estrang e
			where	substr(obter_se_filtro_fluxo(null,null,null,nm_usuario_p,b.nr_sequencia),1,255) = 'S'
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (b.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(b.cd_estabelecimento) = cd_estabelecimento_p)))
			and	c.cd_empresa		= cd_empresa_p
			and	b.cd_estabelecimento	= c.cd_estabelecimento
			and	a.nr_seq_caixa		= b.nr_sequencia
			and	e.nr_seq_caixa_saldo	= a.nr_sequencia
			and	b.ie_situacao		= 'A'
			and	b.ie_fluxo 		= 'S'
			and	a.dt_saldo		=
				(select	max(dt_saldo)
				from	caixa_saldo_diario x
				where	x.nr_seq_caixa	= a.nr_seq_caixa
				and	x.dt_saldo	<= dt_inicio_fim_dia_w)
			and (a.dt_saldo < dt_inicio_dia_w or a.dt_saldo > dt_inicio_fim_dia_w)
			and	coalesce(e.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)) alias56
		where (coalesce(ie_saldo_anterior_w,'X') <> 'CBC' or vl_saldo_inicial > 0 or vl_saldo_inicial_estr > 0);

		select	max(x.dt_referencia)
		into STRICT	dt_fechamento_w
		from	fluxo_caixa_fechamento x
		where	x.dt_referencia	< dt_inicio_w
		and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and coalesce(x.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (coalesce(x.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p or obter_estab_financeiro(coalesce(x.cd_estabelecimento, cd_estabelecimento_p)) = cd_estabelecimento_p)));

		/* Francisco - OS 72999 - 10/11/2007 - Saldo do fechamento anterior */


		/* Douglas - OS 355261 - 31/08/2011 - Saldo diario. */

		if (ie_fechamento_diario_w = 'S') then

			select	coalesce(max(a.vl_saldo_final),0),
				coalesce(max(a.vl_saldo_final_estrang),0)
			into STRICT	vl_saldo_fechamento_w,
				vl_saldo_fecha_estrang_w
			from	fluxo_caixa_fechamento a
			where	a.cd_empresa	= cd_empresa_p
			and	a.dt_referencia	= dt_fechamento_w
			and	coalesce(ie_tipo_fluxo, 'G')		= 'G'
			and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p or obter_estab_financeiro(coalesce(a.cd_estabelecimento, cd_estabelecimento_p)) = cd_estabelecimento_p)));
		
		else

			dt_fechamento_mes_w	:= trunc(dt_fechamento_w,'month');

			if (dt_fechamento_w	= dt_fechamento_mes_w) then
		
				select	coalesce(max(a.vl_saldo_final),0),
					coalesce(max(a.vl_saldo_final_estrang),0)
				into STRICT	vl_saldo_fechamento_w,
					vl_saldo_fecha_estrang_w
				from	fluxo_caixa_fechamento a
				where	a.cd_empresa		= cd_empresa_p
				and	a.dt_referencia		= dt_fechamento_w
				and	coalesce(ie_tipo_fluxo, 'G')	= 'G'
				and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
				and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p or obter_estab_financeiro(coalesce(a.cd_estabelecimento, cd_estabelecimento_p)) = cd_estabelecimento_p)));

			end if;
		
		end if;

		select	sum(coalesce(a.vl_saldo,0))
		into STRICT	vl_inicio_projeto_w
		from	projeto_recurso_saldo a
		where	a.nr_seq_projeto in (SELECT	b.nr_seq_proj_rec
			from	w_filtro_fluxo b
			where	b.nm_usuario	= nm_usuario_p)
		and	a.dt_mesano_referencia	between dt_inicio_mes_w and dt_final_mes_w;
		
		if (ie_saldo_anterior_w = 'TC') then
			vl_saldo_anterior_w		:= vl_saldo_caixa_w + vl_saldo_banco_w;
			if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
				vl_saldo_ant_estrang_w	:= coalesce(vl_saldo_caixa_estrang_w,0) + vl_saldo_banco_estrang_w;
			end if;
		elsif (ie_saldo_anterior_w = 'T') then
			vl_saldo_anterior_w		:= vl_saldo_caixa_w;
			if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
				vl_saldo_ant_estrang_w	:= coalesce(vl_saldo_caixa_estrang_w,0);
			end if;
		elsif (ie_saldo_anterior_w = 'C') then
			vl_saldo_anterior_w		:= vl_saldo_banco_w;
			if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
				vl_saldo_ant_estrang_w	:= vl_saldo_banco_estrang_w;
			end if;
		elsif (ie_saldo_anterior_w = 'VC') then
			vl_saldo_anterior_w		:= vl_saldo_avista_w + vl_saldo_banco_w;
			if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
				vl_saldo_ant_estrang_w	:= coalesce(vl_saldo_vista_estrang_w,0) + vl_saldo_banco_estrang_w;
			end if;
		elsif (ie_saldo_anterior_w = 'V') then
			vl_saldo_anterior_w		:= vl_saldo_avista_w;
			if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
				vl_saldo_ant_estrang_w	:= coalesce(vl_saldo_vista_estrang_w,0);
			end if;
		elsif (ie_saldo_anterior_w = 'SF') then
			vl_saldo_anterior_w 		:= vl_saldo_fechamento_w;
			if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
				vl_saldo_ant_estrang_w	:= vl_saldo_fecha_estrang_w;
			end if;
		elsif (ie_saldo_anterior_w = 'PR') then
			vl_saldo_anterior_w 		:= vl_inicio_projeto_w;
			if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
				vl_saldo_ant_estrang_w	:= 0;
			end if;
		elsif (ie_saldo_anterior_w = 'TCC') then

			select	sum(a.vl_cheque),
				sum(a.vl_cheque_estrang)
			into STRICT	vl_cheque_w,
				vl_cheque_estrang_w
			from	cheque a
			where	coalesce(a.dt_cancelamento::text, '') = ''
			and (coalesce(a.dt_compensacao::text, '') = '' or a.dt_compensacao >= dt_inicio_dia_w)
			and	a.dt_emissao		< dt_inicio_dia_w
			and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p or obter_estab_financeiro(coalesce(a.cd_estabelecimento, cd_estabelecimento_p)) = cd_estabelecimento_p)))
			and	substr(obter_empresa_estab(a.cd_estabelecimento),1,15) = cd_empresa_p;

			vl_saldo_anterior_w		:= coalesce(vl_saldo_caixa_w,0) + coalesce(vl_saldo_banco_w,0) - coalesce(vl_cheque_w,0);
			if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
				vl_saldo_ant_estrang_w	:= coalesce(vl_saldo_caixa_estrang_w,0) + coalesce(vl_saldo_banco_estrang_w,0) - coalesce(vl_cheque_estrang_w,0);
			end if;

		elsif (ie_saldo_anterior_w = 'CBC') then
	
			/* descontar os cheques em transito */


			/*select	nvl(sum(a.vl_cheque),0)
			into	vl_cheque_w
			from	cheque a
			where	exists
				(select	1
				from	titulo_pagar_baixa z,
					titulo_pagar y,
					cheque_bordero_titulo x
				where	y.nr_titulo	= z.nr_titulo
				and	x.nr_titulo	= y.nr_titulo
				and	x.nr_seq_cheque	= a.nr_sequencia
				union
				select	1
				from	titulo_pagar_baixa w,
					titulo_pagar z,
					titulo_pagar_adiant y,
					adiantamento_pago_cheque x
				where	z.nr_titulo		= w.nr_titulo
				and	y.nr_titulo		= z.nr_titulo
				and	x.nr_adiantamento	= y.nr_adiantamento
				and	x.nr_seq_cheque		= a.nr_sequencia
				union
				select	1
				from	titulo_pagar_baixa z,
					titulo_pagar y,
					adiantamento_pago_cheque x
				where	y.nr_titulo		= z.nr_titulo
				and	x.nr_adiantamento	= y.nr_adiant_pago
				and	x.nr_seq_cheque		= a.nr_sequencia)
			and	substr(obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco,null,null,nm_usuario_p,null,a.cd_estabelecimento),1,255) = 'S'
			and	a.dt_cancelamento	is null
			and	(a.dt_compensacao is null or a.dt_compensacao >= dt_inicio_dia_w)
			and	( (a.dt_pagamento is null and not exists (	select 1 
															from 	cheque_bordero_titulo u 
															where 	u.nr_seq_cheque = a.nr_sequencia
															and		u.nr_bordero is not null) ) or (a.dt_pagamento <= fim_dia(dt_inicio_dia_w) ))
			and	a.dt_emissao		< dt_inicio_dia_w
			and	(ie_restringe_estab_p = 'N' or
				(ie_restringe_estab_p = 'E' and nvl(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p) or
				(ie_restringe_estab_p = 'S' and (nvl(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p or obter_estab_financeiro(nvl(a.cd_estabelecimento, cd_estabelecimento_p)) = cd_estabelecimento_p)))
			and	substr(obter_empresa_estab(a.cd_estabelecimento),1,15) = cd_empresa_p;*/
			
			
			select	coalesce(sum(a.vl_cheque),0), /*Coloquei esse select no lugar do de cima, conforme rotina GERAR_COMPOSICAO_FLUXO_CAIXA  - aamfirmo OS 717388*/
				coalesce(sum(a.vl_cheque_estrang),0)
			into STRICT	vl_cheque_w,
				vl_cheque_estrang_w
			from	cheque a
			where	exists (SELECT	1
				from	titulo_pagar_baixa w,
					titulo_pagar z,
					titulo_pagar_adiant y,
					adiantamento_pago_cheque x
				where	z.nr_titulo		= w.nr_titulo
				and	y.nr_titulo		= z.nr_titulo
				and	x.nr_adiantamento	= y.nr_adiantamento
				and	x.nr_seq_cheque		= a.nr_sequencia
				
union

				SELECT	1
				from	titulo_pagar_baixa z,
					titulo_pagar y,
					adiantamento_pago_cheque x
				where	y.nr_titulo		= z.nr_titulo
				and	x.nr_adiantamento	= y.nr_adiant_pago
				and	x.nr_seq_cheque		= a.nr_sequencia
				
union

				select	1
				from	cheque_bordero_titulo x
				where ((x.nr_titulo IS NOT NULL AND x.nr_titulo::text <> '') or (x.nr_bordero IS NOT NULL AND x.nr_bordero::text <> ''))
				and	x.nr_seq_cheque		= a.nr_sequencia)
			and	substr(obter_se_filtro_fluxo_estab(a.nr_seq_conta_banco,null,null,nm_usuario_p,null,a.cd_estabelecimento),1,255) = 'S'
			and	coalesce(a.dt_cancelamento::text, '') = ''
			and (coalesce(a.dt_compensacao::text, '') = '' or a.dt_compensacao > dt_inicio_dia_w)
			and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
			and	( (coalesce(a.dt_pagamento::text, '') = '' and not exists (	select 1
															from 	cheque_bordero_titulo u 
															where 	u.nr_seq_cheque = a.nr_sequencia
															and		(u.nr_bordero IS NOT NULL AND u.nr_bordero::text <> '')) ) or (a.dt_pagamento <= dt_inicio_dia_w ))
			and	a.dt_emissao		<= dt_inicio_dia_w
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p or obter_estab_financeiro(coalesce(a.cd_estabelecimento, cd_estabelecimento_p)) = cd_estabelecimento_p)))
			and	substr(obter_empresa_estab(a.cd_estabelecimento),1,15) = cd_empresa_p;

			vl_saldo_anterior_w		:= coalesce(vl_saldo_caixa_w,0) + coalesce(vl_saldo_banco_w,0) - coalesce(vl_cheque_w,0);
			if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
				vl_saldo_ant_estrang_w	:= coalesce(vl_saldo_caixa_estrang_w,0) + coalesce(vl_saldo_banco_estrang_w,0) - coalesce(vl_cheque_estrang_w,0);
			end if;

		end if;
	else
		vl_saldo_anterior_w		:= coalesce(vl_saldo_anterior_p,0);
		if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
			vl_saldo_ant_estrang_w	:= coalesce(vl_saldo_anterior_p,0);
		end if;
		
	end if;

end if;

if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then
	vl_saldo_fluxo_w	:= vl_saldo_anterior_w;
else
	vl_saldo_fluxo_w	:= vl_saldo_ant_estrang_w;
end if;

if (ie_saldo_realizar_zerado_w = 'S') and (ie_classif_p = 'R') and (dt_inicio_w < trunc(clock_timestamp(),'dd')) then

	dt_inicio_calculo_w	:= dt_inicio_w;
	vl_saldo_fluxo_w	:= 0;

elsif (ie_classif_p = 'R') or (coalesce(vl_saldo_anterior_w,0) <> 0) or (coalesce(vl_saldo_ant_estrang_w,0) <> 0) then /*Edgar 09/03/2004 OS6810 antes so gerava se o saldo anterior > 0*/
	dt_inicio_calculo_w	:= dt_inicio_w;
	vl_saldo_fluxo_w	:= coalesce(vl_saldo_anterior_w,0);
	if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
		vl_saldo_fluxo_w := coalesce(vl_saldo_ant_estrang_w,0);
	end if;

elsif (dt_saldo_atual_w <> dt_inicio_w) and (IE_SALDO_ANTERIOR_w <> 'VI') and (IE_SALDO_ANTERIOR_w <> 'SF') and (IE_SALDO_ANTERIOR_w <> 'PR') and (IE_SALDO_ANTERIOR_w <> 'C')  and (IE_SALDO_ANTERIOR_w <> 'TC') then /*aamfirmo OS 886756. Conversei com Edgar. Se a origem eh tesouraria e banco TC, nao faz sentido entrar aqui de novo para buscar o saldo*/
	begin

	dt_inicio_calculo_w	:= dt_saldo_atual_w + 1;

	select	coalesce(max(vl_fluxo), 0)
	into STRICT 	vl_saldo_fluxo_w
	from	fluxo_caixa
	where	dt_referencia		= dt_saldo_atual_w
	and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
	and	cd_empresa		= cd_empresa_p
	and	ie_classif_fluxo	= ie_classif_p
	and	ie_periodo		= ie_periodo_p
	and	cd_conta_financ		= cd_conta_saldo_w
	and	cd_empresa		= cd_empresa_p
	and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	end;

elsif (dt_saldo_anterior_w <> dt_inicio_w) and (IE_SALDO_ANTERIOR_w <> 'VI') and (IE_SALDO_ANTERIOR_w <> 'SF') and (IE_SALDO_ANTERIOR_w <> 'PR') and (IE_SALDO_ANTERIOR_w <> 'C') then
	begin

	dt_inicio_calculo_w	:= dt_saldo_anterior_w;

	select	coalesce(max(vl_fluxo), 0)
	into STRICT 	vl_saldo_fluxo_w
	from	fluxo_caixa
	where	dt_referencia		= dt_saldo_anterior_w
	and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
	and	cd_empresa		= cd_empresa_p
	and	ie_classif_fluxo	= ie_classif_p
  	and	ie_periodo		= ie_periodo_p
	and	cd_conta_financ		= cd_conta_saldo_ant_w
	and	cd_empresa		= cd_empresa_p
	and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
	end;
else
	dt_inicio_calculo_w	:= dt_inicio_w;
end if;


/* Exluir as contas calculadas no Periodo */

delete	from fluxo_Caixa
where	dt_referencia		between dt_inicio_w and dt_final_w
and	ie_classif_fluxo 	= ie_classif_p
and	ie_periodo		= ie_periodo_p
and	ie_origem 		in ('C')
and	cd_empresa		= cd_empresa_p
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)));

/* Exluir as contas de saldo atual no Periodo de calculo */

delete	from fluxo_Caixa
where	dt_referencia		between dt_inicio_calculo_w and dt_final_w
and	ie_classif_fluxo 	= ie_classif_p
and	ie_periodo		= ie_periodo_p
and	ie_origem 		in ('S')
and	cd_empresa		= cd_empresa_p
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)));

/* Exluir as contas de saldo atual no Periodo de calculo */

delete	from fluxo_Caixa a
where	dt_referencia		between dt_inicio_calculo_w and dt_final_w
and	ie_classif_fluxo 	= ie_classif_p
and	ie_periodo		= ie_periodo_p
and	cd_empresa		= cd_empresa_p
and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
and	exists (SELECT	1
	from	conta_financeira b
	where	a.cd_conta_financ	= b.cd_conta_financ
        and	b.ie_oper_fluxo		= 'F');

commit;

CALL Acumular_Fluxo_Caixa_Nivel(
			cd_estabelecimento_p,
			dt_inicio_w,
			dt_final_w,
			ie_periodo_p,
			ie_classif_p,
			nm_usuario_p,
			cd_empresa_p,
			coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w),
			ie_restringe_estab_p);

if (IE_SALDO_PASSADO_w = 'S') or (ie_classif_p <> 'P') then

	if (ie_fluxo_diario_w	= 'S') then

		-- Edgar 11/12/2009, OS 184559, tratar saldo para todos os dias, faz um insert com  zero para uma CF aleatoria
		select	max(a.cd_conta_financ)
		into STRICT	cd_conta_diaria_w
		from 	Conta_Financeira b,
			fluxo_caixa a
		where	a.dt_referencia		between dt_inicio_calculo_w and dt_final_w
		and	a.ie_classif_fluxo	= ie_classif_p
		and	ie_periodo		= ie_periodo_p
		and	a.cd_conta_financ	= b.cd_conta_financ
		and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
		and	a.cd_empresa		= cd_empresa_p
		and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
		and	b.cd_empresa		= cd_empresa_p       -- Nao pode entrar conta financeira de outra empresa
		and	b.cd_conta_financ	<> cd_conta_saldo_ant_w
		and	coalesce(b.cd_conta_superior::text, '') = ''
		and	b.ie_oper_fluxo		<> 'I'
		and	coalesce(b.ie_acumular,'N')	= 'N';

		dt_atual_w		:= dt_inicio_w;
		while(dt_atual_w <= dt_final_w) and (coalesce(cd_conta_diaria_w,0) > 0) loop
			select 	max(a.cd_conta_financ)
			into STRICT	cd_conta_financ_w
			from 	Conta_Financeira b,
				fluxo_caixa a
			where	a.dt_referencia		= dt_atual_w
			and	a.ie_classif_fluxo	= ie_classif_p
			and	ie_periodo		= ie_periodo_p
			and	a.cd_conta_financ	= b.cd_conta_financ
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
			and	a.cd_empresa		= cd_empresa_p
			and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
			and	b.cd_empresa		= cd_empresa_p       -- Nao pode entrar conta financeira de outra empresa
			and	b.cd_conta_financ	<> cd_conta_saldo_ant_w
			and	coalesce(b.cd_conta_superior::text, '') = ''
			and	b.ie_oper_fluxo		<> 'I'
			and	CASE WHEN ie_somente_ativa_p='S' THEN b.ie_situacao  ELSE 'A' END  = 'A';

			if (coalesce(cd_conta_financ_w, 0) 	= 0) then
				begin
				insert	into fluxo_caixa(cd_estabelecimento,
					dt_referencia, 
					cd_conta_financ, 
					ie_classif_fluxo, 
					dt_atualizacao, 
					nm_usuario, 
					vl_fluxo, 
					ie_origem, 
					ie_periodo,
					IE_INTEGRACAO,
					cd_empresa,
					cd_moeda)
				Values (cd_estabelecimento_p, 
					dt_atual_w,
					cd_conta_diaria_w,
					ie_classif_p,
					clock_timestamp(),
					nm_usuario_p, 
					0, 
					'F', 
					ie_periodo_p,
					'D',
					cd_empresa_p,
					coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w));
				exception
					when unique_violation then
						update	fluxo_caixa
						set	vl_fluxo		= coalesce(vl_saldo_fluxo_w, 0),
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p
						where (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
						and	dt_referencia		= dt_referencia_w
						and 	cd_conta_financ		= cd_conta_saldo_ant_w
						and	ie_classif_fluxo	= ie_classif_p
						and	ie_periodo		= ie_periodo_p
						and	IE_INTEGRACAO		= 'S'
						and	cd_empresa		= cd_empresa_p
						and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
					when others then
						ds_erro_w	:= substr(sqlerrm(SQLSTATE),1,255);
						CALL wheb_mensagem_pck.exibir_mensagem_abort(176728,'DS_ERRO='||ds_erro_w,-20012);
				end;
			end if;	
			dt_atual_w	:= dt_atual_w + 1;
		end loop;
	end if;

	OPEN	C020;
	LOOP
	FETCH	C020 into
		dt_referencia_w,
		vl_fluxo_w;
	EXIT WHEN NOT FOUND; /* apply on c020 */
       	begin

		dt_referencia_ini_w	:= trunc(dt_referencia_w,'dd');
		dt_referencia_fim_w	:= fim_dia(dt_referencia_w);

		if (qt_reg_w > 0) then
			/* Projeto Multimoeda - Quando moeda estrangeira busca os valores em moeda estrangeira*/

			if (coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w) = cd_moeda_empresa_w) then

				select	coalesce(sum(CASE WHEN coalesce(e.ie_emprestimo,'N')='D' THEN coalesce(d.vl_transacao,0) * -1  ELSE coalesce(d.vl_transacao,0) END ),0)
				into STRICT	vl_regra_saldo_banco_w
				from	transacao_financeira e,
					movto_trans_financ d,
					estabelecimento c,
					banco_saldo b,
					banco_estabelecimento a
				where	substr(obter_se_filtro_fluxo(a.nr_sequencia,null,null,nm_usuario_p,null),1,255) = 'S'
				and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
				and	c.cd_empresa		= cd_empresa_p
				and	a.cd_estabelecimento	= c.cd_estabelecimento
				and	b.nr_seq_conta		= a.nr_sequencia
				and	d.nr_seq_saldo_banco	= b.nr_sequencia
				and	d.nr_seq_trans_financ	= e.nr_sequencia
				and	a.ie_tipo_relacao	in ('C', 'ECC')
				and	a.ie_fluxo_caixa	= 'S'
				and	a.ie_situacao		= 'A'
				and	e.ie_saldo_fluxo	= 'S'
				and	d.dt_transacao		<= dt_referencia_ini_w;
			else
				select	coalesce(sum(CASE WHEN coalesce(e.ie_emprestimo,'N')='D' THEN coalesce(d.vl_transacao_estrang,0) * -1  ELSE coalesce(d.vl_transacao_estrang,0) END ),0)
				into STRICT	vl_regra_saldo_banco_w
				from	transacao_financeira e,
					movto_trans_financ d,
					estabelecimento c,
					banco_saldo b,
					banco_estabelecimento a
				where	substr(obter_se_filtro_fluxo(a.nr_sequencia,null,null,nm_usuario_p,null),1,255) = 'S'
				and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
				and	c.cd_empresa		= cd_empresa_p
				and	a.cd_estabelecimento	= c.cd_estabelecimento
				and	b.nr_seq_conta		= a.nr_sequencia
				and	d.nr_seq_saldo_banco	= b.nr_sequencia
				and	d.nr_seq_trans_financ	= e.nr_sequencia
				and	a.ie_tipo_relacao	in ('C', 'ECC')
				and	a.ie_fluxo_caixa	= 'S'
				and	a.ie_situacao		= 'A'
				and	e.ie_saldo_fluxo	= 'S'
				and	coalesce(d.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)
				and	d.dt_transacao		<= dt_referencia_ini_w;
			end if;

		end if;

		/* Saldo Anterior */

		begin
		insert into fluxo_caixa(cd_estabelecimento,
				dt_referencia, 
				cd_conta_financ, 
				ie_classif_fluxo, 
				dt_atualizacao, 
				nm_usuario, 
				vl_fluxo, 
				ie_origem, 
				ie_periodo,
				IE_INTEGRACAO,
				cd_empresa,
				cd_moeda)
			Values (cd_estabelecimento_p, 
				dt_referencia_w,
				cd_conta_saldo_ant_w, 
				ie_classif_p, 
				clock_timestamp(),
				nm_usuario_p, 
				coalesce(vl_saldo_fluxo_w, 0) + coalesce(vl_regra_saldo_banco_w,0), 
				'S', 
				ie_periodo_p,
				'S',
				cd_empresa_p,
				coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w));
		exception
			when unique_violation then
				update	fluxo_caixa
				set	vl_fluxo		= coalesce(vl_saldo_fluxo_w,0) + coalesce(vl_regra_saldo_banco_w,0),
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
				and	dt_referencia		= dt_referencia_w
				and 	cd_conta_financ		= cd_conta_saldo_ant_w
				and	ie_classif_fluxo	= ie_classif_p
				and	ie_periodo		= ie_periodo_p
				and	IE_INTEGRACAO		= 'S'
				and	cd_empresa		= cd_empresa_p
				and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
			when others then
				ds_erro_w	:= substr(sqlerrm(SQLSTATE),1,255);
				CALL wheb_mensagem_pck.exibir_mensagem_abort(176728,'DS_ERRO='||ds_erro_w,-20012);
		end;

		vl_saldo_fluxo_w := vl_saldo_fluxo_w + vl_fluxo_w;

		/* Saldo Atual */

		begin
		insert into fluxo_caixa(cd_estabelecimento,
				dt_referencia, 
				cd_conta_financ, 
				ie_classif_fluxo, 
				dt_atualizacao, 
				nm_usuario, 
				vl_fluxo, 
				ie_origem, 
				ie_periodo,
				IE_INTEGRACAO,
				cd_empresa,
				cd_moeda)
			Values (cd_estabelecimento_p, 
				dt_referencia_w,
				cd_conta_saldo_w, 
				ie_classif_p, 
				clock_timestamp(),
				nm_usuario_p, 
				coalesce(vl_saldo_fluxo_w, 0), 
				'S', 
				ie_periodo_p,
				'S',
				cd_empresa_p,
				coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w));
		exception
			when unique_violation then
				update	fluxo_caixa
				set 	vl_fluxo		= coalesce(vl_saldo_fluxo_w,0),
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
				and	dt_referencia		= dt_referencia_w
				and 	cd_conta_financ		= cd_conta_saldo_w
				and	ie_classif_fluxo	= ie_classif_p
				and	ie_periodo		= ie_periodo_p
				and	IE_INTEGRACAO		= 'S'
				and	cd_empresa		= cd_empresa_p
				and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(176730,null);
		end;
	end;
	END LOOP;
	CLOSE C020;
		
	OPEN	C030;
	LOOP
	FETCH	C030 into
		cd_conta_financ_acum_w,
		ie_integracao_w;
	EXIT WHEN NOT FOUND; /* apply on C030 */
		Begin
		vl_saldo_fluxo_acum_w	:= 0;
		dt_referencia_w	:= dt_inicio_w;
		
		while(dt_referencia_w	<= dt_final_w) loop

			begin

			dt_referencia_ini_w	:= trunc(dt_referencia_w,'dd');
			dt_referencia_fim_w	:= fim_dia(dt_referencia_w);

			select 	sum(coalesce(a.vl_fluxo,0))
			into STRICT	vl_fluxo_w
			from 	Conta_Financeira b,
				fluxo_caixa a
			where	coalesce(b.ie_acumular,'N')	= 'S'
			and	a.dt_referencia		between dt_referencia_ini_w and dt_referencia_fim_w
			and	b.cd_conta_financ	= cd_conta_financ_acum_w
			and	a.ie_classif_fluxo	= ie_classif_p
			and	ie_periodo		= ie_periodo_p
			and	a.cd_conta_financ	= b.cd_conta_financ
			and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p)))
			and	a.cd_empresa		= cd_empresa_p
			and	b.cd_empresa		= cd_empresa_p       -- Nao pode entrar conta financeira de outra empresa
			and	CASE WHEN ie_somente_ativa_p='S' THEN b.ie_situacao  ELSE 'A' END 	= 'A'
			and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
			if (cd_conta_financ_acum_w <> cd_conta_financ_ant_w) then
				vl_saldo_fluxo_acum_w	:= 0;
			end if;
			
			if (ie_integracao_w = 'CR') then
				select	obter_vl_recurso_baixado(nm_usuario_p,cd_estabelecimento_p,cd_empresa_p,ie_restringe_estab_p,cd_conta_financ_cre_w,ie_tit_rec_canc_w,
						ie_data_tit_adiant_rec_w,dt_referencia_w,ie_movto_bco_pend_w,ie_adiant_receb_w,ie_titulo_caixa_w,ie_trans_fin_conta_w,ie_tit_pagar_transf_w,
						cd_conta_financ_acum_w)
				into STRICT	vl_rec_baixado_w
				
				where	cd_moeda_empresa_w = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);
			end if;
			
			vl_saldo_fluxo_acum_w	:= vl_saldo_fluxo_acum_w + coalesce(vl_fluxo_w,0) - coalesce(vl_rec_baixado_w,0);
			
			insert into fluxo_caixa(cd_estabelecimento,
					dt_referencia,
					cd_conta_financ, 
					ie_classif_fluxo, 
					dt_atualizacao, 
					nm_usuario, 
					vl_fluxo, 
					ie_origem, 
					ie_periodo,
					IE_INTEGRACAO,
					cd_empresa,
					cd_moeda)
				Values (cd_estabelecimento_p, 
					dt_referencia_w,
					cd_conta_financ_acum_w, 
					ie_classif_p, 
					clock_timestamp(),
					nm_usuario_p, 
					coalesce(vl_saldo_fluxo_acum_w, 0), 
					'S', 
					ie_periodo_p,
					ie_integracao_w,
					cd_empresa_p,
					coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w));

			exception
				when unique_violation then
					update	fluxo_caixa
					set 	vl_fluxo		= coalesce(vl_saldo_fluxo_acum_w,0),
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p)))
					and	dt_referencia		= dt_referencia_w
					and 	cd_conta_financ		= cd_conta_financ_acum_w
					and	ie_classif_fluxo	= ie_classif_p
					and	ie_periodo		= ie_periodo_p
					and	IE_INTEGRACAO		= ie_integracao_w
					and	cd_empresa		= cd_empresa_p
					and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);    --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
				when others then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(176728,'DS_ERRO='||null);

			cd_conta_financ_ant_w	:= cd_conta_financ_acum_w;
			end;

		dt_referencia_w	:= dt_referencia_w + 1;
		end loop;
		end;
	END LOOP;
	CLOSE C030;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_fluxo_caixa ( cd_estabelecimento_p bigint, vl_saldo_anterior_p bigint, dt_inicio_p timestamp, dt_final_p timestamp, ie_periodo_p text, ie_classif_p text, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, ie_passado_real_p text, ie_somente_ativa_p text, nr_seq_regra_p bigint default null, cd_moeda_p bigint default null) FROM PUBLIC;

