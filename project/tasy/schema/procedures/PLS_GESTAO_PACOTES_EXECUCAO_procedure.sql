-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gestao_pacotes_execucao ( nr_seq_exec_lote_p bigint, nr_seq_prestador_p bigint, nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gestao de pacotes na execucao da requisicao.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ x]    Objetos do dicionario [ x] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
				
nr_seq_ret_abert_w			varchar(255);
nr_seq_ret_conver_w		varchar(255);
qt_conversao_w			bigint;
qt_req_pacote_req_w		bigint;
nr_seq_exec_itens_w		bigint;
cd_procedimento_w		numeric(20);
ie_origem_proced_w		bigint;
nr_seq_requisicao_w		bigint;
nr_seq_pacote_w			bigint;
ie_regra_preco_w			varchar(3);
nr_seq_regra_pacote_out_w		bigint;
cd_proc_pacote_out_w		bigint	:= null;
ie_origem_pacote_out_w		bigint	:= null;
vl_pacote_out_w			double precision	:= 0;
vl_medico_out_w			double precision	:= 0;
vl_anestesista_out_w		double precision	:= 0;
vl_auxiliares_out_w			double precision	:= 0;
vl_custo_operacional_out_w		double precision	:= 0;
vl_materiais_out_w			double precision	:= 0;
nr_seq_intercambio_w		bigint;
nr_seq_classificacao_prest_w		bigint;
nr_seq_protocolo_w		bigint;
dt_conta_guia_w			timestamp;
cd_guia_w			varchar(30);
sg_estado_w			pessoa_juridica.sg_estado%type;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
nr_seq_prestador_prot_w		bigint;
cd_estabelecimento_w		smallint;
nr_seq_tipo_acomod_w		bigint;
dt_pacote_w			timestamp;
ie_internado_w			varchar(3);
nr_seq_plano_w			bigint;
nr_contrato_w			bigint;
nr_seq_congenere_w		bigint;
ie_tipo_intercambio_w		varchar(5);
ie_abrir_exec_req_w		varchar(2);
nr_seq_execucao_w		bigint;
nr_seq_preco_pacote_w		bigint;
dt_execucao_w			timestamp;
cd_prestador_w			pls_prestador.cd_prestador%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_requisicao,
		a.cd_procedimento,
		a.ie_origem_proced
	from	pls_execucao_req_item a
	where	exists (SELECT 	1
			from 	w_pls_itens_benef_exec w
			where	w.nr_seq_segurado 	=  nr_seq_segurado_p
			and	w.nr_seq_prestador	= nr_seq_prestador_p
			and	w.nr_seq_item_exec	= a.nr_sequencia
			and	w.ie_tipo_consulta 	= 'LE');
			

C02 CURSOR FOR			
	SELECT	b.nr_sequencia,
		b.dt_execucao
	from	pls_execucao_requisicao b
	where	b.nr_seq_lote_exec = nr_seq_exec_lote_p;
	
c03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_requisicao,
		a.cd_procedimento,
		a.ie_origem_proced
	from	pls_execucao_req_item a
	where	a.nr_seq_execucao	= nr_seq_execucao_w;


BEGIN

select	max(cd_prestador)
into STRICT	cd_prestador_w
from	pls_prestador
where	nr_sequencia	= nr_seq_prestador_p;

open C02;
loop
fetch C02 into	
	nr_seq_execucao_w,
	dt_execucao_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	open C03;
	loop
	fetch C03 into	
		nr_seq_exec_itens_w,
		nr_seq_requisicao_w,
		cd_procedimento_w,
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		select	max(nr_seq_preco_pacote)
		into STRICT	nr_seq_preco_pacote_w
		from	pls_execucao_req_item a
		where	a.nr_sequencia = nr_seq_exec_itens_w;
		
		if (nr_seq_preco_pacote_w IS NOT NULL AND nr_seq_preco_pacote_w::text <> '') then
			begin
				select	ie_abrir_exec_requisicao
				into STRICT	ie_abrir_exec_req_w
				from	pls_pacote_tipo_acomodacao
				where	nr_sequencia	= nr_seq_preco_pacote_w
				and	(((coalesce(nr_seq_prestador::text, '') = '') or nr_seq_prestador = coalesce(nr_seq_prestador_p,0)))
				and	((cd_prestador = coalesce(cd_prestador_w,'0')) or (coalesce(cd_prestador::text, '') = ''))
				and	ie_situacao = 'A';
			exception
			when others then
				ie_abrir_exec_req_w	:= 'N';
			end;
		else	
			ie_abrir_exec_req_w	:= 'N';
		end if;
			
		select	count(1)
		into STRICT	qt_req_pacote_req_w
		from	pls_execucao_req_item a
		where	a.nr_sequencia		= nr_seq_exec_itens_w
		and	coalesce(a.nr_seq_preco_pacote::text, '') = ''
		and	coalesce(a.nr_seq_pacote::text, '') = ''
		and	coalesce(a.cd_pacote_item::text, '') = '';
			
		if (qt_req_pacote_req_w	<> 0) or (ie_abrir_exec_req_w	= 'N') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_pacote_w
			from	pls_pacote
			where	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w
			and	ie_situacao		= 'A';

			if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then
				select	coalesce(ie_regra_preco,'N')
				into STRICT	ie_regra_preco_w
				from	pls_pacote a
				where	a.nr_sequencia = nr_seq_pacote_w;
							
				if (ie_regra_preco_w = 'S') then				
					/*Obter dados da requisicao*/

					begin
						select	cd_estabelecimento,
							dt_requisicao,
							nr_seq_tipo_acomodacao,
							nr_seq_plano,
							pls_obter_internado_guia(nr_sequencia,'R')
						into STRICT	cd_estabelecimento_w,
							dt_pacote_w,
							nr_seq_tipo_acomod_w,
							nr_seq_plano_w,
							ie_internado_w
						from	pls_requisicao
						where	nr_sequencia	= nr_seq_requisicao_w;
					exception
					when others then
						cd_estabelecimento_w	:= null;
						dt_pacote_w		:= null;
						nr_seq_tipo_acomod_w	:= null;
						nr_seq_plano_w		:= null;
						ie_internado_w		:= null;
					end;

					if (coalesce(nr_seq_tipo_acomod_w::text, '') = '') then
						nr_seq_tipo_acomod_w := pls_obter_dados_produto(nr_seq_plano_w,'AP');
					end if;
					
					if (coalesce(nr_seq_plano_w,0) = 0) then		
						begin
							--select	a.nr_seq_plano
							select	pls_obter_produto_benef(a.nr_sequencia,dt_execucao_w)
							into STRICT	nr_seq_plano_w
							from	pls_segurado			a	
							where	a.nr_sequencia = nr_seq_segurado_p;	
						exception
						when others then
							nr_seq_plano_w := null;
						end;
					end if;
					
					begin
						select	coalesce(a.nr_contrato,0),
							b.nr_seq_congenere
						into STRICT	nr_contrato_w,
							nr_seq_congenere_w
						from	pls_contrato	a,
							pls_segurado	b
						where	a.nr_sequencia	= b.nr_seq_contrato
						and	b.nr_sequencia	= nr_seq_segurado_p;
					exception
					when others then
						nr_contrato_w	:= 0;
					end;
					
					if (coalesce(nr_seq_congenere_w::text, '') = '') then
						select	b.nr_seq_congenere
						into STRICT	nr_seq_congenere_w
						from	pls_segurado	b
						where	b.nr_sequencia	= nr_seq_segurado_p;
					end if;
					
					select	max(nr_seq_intercambio)
					into STRICT	nr_seq_intercambio_w
					from	pls_segurado
					where	nr_sequencia	= nr_seq_segurado_p;
					
					select	max(nr_seq_classificacao)
					into STRICT	nr_seq_classificacao_prest_w
					from	pls_prestador
					where	nr_sequencia = nr_seq_prestador_p;
					
					select	coalesce(max(sg_estado),'X')
					into STRICT	sg_estado_w
					from	pessoa_juridica
					where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
								from	pls_outorgante
								where	cd_estabelecimento	= cd_estabelecimento_w);
					select	coalesce(max(a.sg_estado),'X')
					into STRICT	sg_estado_int_w
					from	pessoa_juridica	a,
						pls_congenere	b
					where	a.cd_cgc	= b.cd_cgc
					and	b.nr_sequencia	= nr_seq_congenere_w;

					if (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
						if (sg_estado_w	= sg_estado_int_w) then
							ie_tipo_intercambio_w	:= 'E';
						else	
							ie_tipo_intercambio_w	:= 'N';
						end if;
					else
						ie_tipo_intercambio_w	:= 'A';
					end if;
				
					SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_w, nr_seq_prestador_p, nr_seq_tipo_acomod_w, dt_pacote_w, cd_procedimento_w, ie_origem_proced_w, ie_internado_w, nr_seq_plano_w, nr_contrato_w, nr_seq_congenere_w, nm_usuario_p, null, ie_tipo_intercambio_w, nr_seq_pacote_w, nr_seq_regra_pacote_out_w, cd_proc_pacote_out_w, ie_origem_pacote_out_w, vl_pacote_out_w, vl_medico_out_w, vl_anestesista_out_w, vl_auxiliares_out_w, vl_custo_operacional_out_w, vl_materiais_out_w, nr_seq_intercambio_w, nr_seq_classificacao_prest_w, null, nr_seq_segurado_p, null, 'N', null, 1) INTO STRICT nr_seq_pacote_w, nr_seq_regra_pacote_out_w, cd_proc_pacote_out_w, ie_origem_pacote_out_w, vl_pacote_out_w, vl_medico_out_w, vl_anestesista_out_w, vl_auxiliares_out_w, vl_custo_operacional_out_w, vl_materiais_out_w;
				end if;

				if (coalesce(nr_seq_pacote_w,0)	<> 0) and (coalesce(nr_seq_regra_pacote_out_w,0)	<> 0) then
					update	pls_execucao_req_item
					set	nr_seq_pacote		= nr_seq_pacote_w,
						nr_seq_preco_pacote	= nr_seq_regra_pacote_out_w
					where	nr_sequencia		= nr_seq_exec_itens_w;
					
					begin
						select	ie_abrir_exec_requisicao
						into STRICT	ie_abrir_exec_req_w
						from	pls_pacote_tipo_acomodacao
						where	nr_sequencia	= nr_seq_regra_pacote_out_w;
					exception
					when others then
						ie_abrir_exec_req_w	:= 'N';
					end;
				end if;
			end if;
		end if;

		if (coalesce(ie_abrir_exec_req_w,'N')	= 'S') then
			nr_seq_ret_abert_w := pls_abrir_pacote_execucao_req(nr_seq_exec_itens_w, nr_seq_prestador_p, dt_execucao_w, nm_usuario_p, nr_seq_ret_abert_w);
		end if;

		select	count(1)
		into STRICT	qt_conversao_w
		from	pls_execucao_req_item
		where	nr_sequencia		= nr_seq_exec_itens_w
		and	(nr_seq_conversao_pacote IS NOT NULL AND nr_seq_conversao_pacote::text <> '')
		and	coalesce(nr_seq_preco_pacote::text, '') = '';

		if (qt_conversao_w	= 0) then
			nr_seq_ret_conver_w := pls_conversao_pacote_exec_req(nr_seq_exec_itens_w, nr_seq_prestador_p, cd_estabelecimento_p, dt_execucao_w, nm_usuario_p, nr_seq_ret_conver_w);
		end if;

		nr_seq_retorno_p	:= substr(nr_seq_retorno_p||' '||nr_seq_ret_abert_w||' '||nr_seq_ret_conver_w||' ', 1, 255);
		end;
	end loop;
	close C03;
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gestao_pacotes_execucao ( nr_seq_exec_lote_p bigint, nr_seq_prestador_p bigint, nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_retorno_p INOUT text) FROM PUBLIC;

