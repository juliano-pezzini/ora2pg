-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_carencia_proc ( nr_seq_segurado_p bigint, nr_seq_guia_proc_p bigint, nr_seq_guia_p bigint, nr_seq_conta_proc_p bigint, nr_seq_requisicao_proc_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_solicitacao_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, ie_importacao_p text, ie_carencia_abrangencia_ant_p text) AS $body$
DECLARE


nr_seq_plano_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_segurado_w		bigint;
cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
ie_origem_proced_w		bigint;
qt_dias_w			integer;
dt_inicio_vigencia_w		timestamp;
dt_carencia_w			timestamp;
dt_inclusao_operadora_w		timestamp;
ie_origem_w			varchar(1);
nr_seq_carencia_proc_w		bigint;
ie_liberado_w			varchar(10);
ie_tipo_guia_solic_w		varchar(10);
nr_seq_tipo_acomod_w		bigint;
ie_tipo_guia_w			varchar(10);
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_carencia_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_guia_w			bigint;
ie_tipo_consistencia_w		varchar(1);
nr_seq_conta_w			bigint;
nr_seq_tipo_carencia_w		bigint;
ie_mes_posterior_w		varchar(1);
ie_tipo_cobertura_w		varchar(1);
ie_tp_guia_w			varchar(10);
nr_sq_tp_acomod_w		bigint;
nr_seq_requisicao_w		bigint;
ie_evento_w			varchar(3);
ie_gerar_glosa_w		varchar(1);
cd_procedimento_ww		bigint;
cd_grupo_proc_ww		bigint;
cd_especialidade_ww		bigint;
cd_area_procedimento_ww		bigint;
ie_lib_w			smallint;
qt_carencias_benef_w		bigint := 0;
qt_carencias_contrato_w		bigint := 0;
qt_carencias_produto_w		bigint := 0;
ie_localizacao_w		varchar(255);
ds_carencia_w			varchar(255);
nr_seq_grupo_servico_w		bigint;
ie_serv_lib_w			varchar(10);
ie_lib_ant_w			varchar(10);
nr_seq_segurado_conta_w		bigint;
cd_procedimento_conta_w		pls_conta_proc.cd_procedimento%type;
ie_origem_proced_conta_w	bigint;
qt_procedimento_imp_w		pls_conta_proc.qt_procedimento%type;
cd_guia_w			varchar(20);
qt_autorizada_w				pls_guia_plano_proc.qt_autorizada%type;
qt_carencia_util_w			pls_conta_proc.qt_procedimento%type;
dt_contratacao_w		timestamp;
nr_seq_segurado_ant_w		bigint;
nr_seq_uni_exec_w		bigint;
ie_consistir_caren_prod_ant_w	varchar(10);
ds_observacao_abrang_ant_w	varchar(255);
qt_regra_carencia_w		bigint;
ie_carater_solic_w		varchar(1);
nr_seq_regra_carencia_w		bigint;
qt_glosa_carencia_w		bigint;
nr_seq_plano_contrato_w		bigint;
nr_seq_plano_aux_w		bigint;
qt_dias_fora_abrang_ant_w	bigint;
ie_tipo_protocolo_w		pls_protocolo_conta.ie_tipo_protocolo%type;
nr_seq_rede_w			pls_carencia.nr_seq_rede%type;

C00 CURSOR FOR
	SELECT	x.nr_sequencia,
		'N' ie_mes_posterior,
		wheb_mensagem_pck.get_texto(1108818) ie_localizacao,
		null nr_seq_plano_contrato,
		x.nr_seq_rede
	from	pls_carencia x
	where	x.nr_seq_segurado	= nr_seq_segurado_p
	and	x.ie_cpt		= 'N'
	and	qt_carencias_benef_w	> 0
	
union all

	SELECT	x.nr_sequencia,
		x.ie_mes_posterior ie_mes_posterior,
		'Contrato' ie_localizacao,
		x.nr_seq_plano_contrato,
		x.nr_seq_rede
	from	pls_carencia x
	where	x.nr_seq_contrato	= nr_seq_contrato_w
	and	x.ie_cpt		= 'N'
	and	qt_carencias_contrato_w	> 0
	
union all

	select	x.nr_sequencia,
		'N' ie_mes_posterior,
		'Produto' ie_localizacao,
		null nr_seq_plano_contrato,
		x.nr_seq_rede
	from	pls_carencia x
	where	nr_seq_plano		= nr_seq_plano_w
	and	x.ie_cpt		= 'N'
	and	qt_carencias_produto_w	> 0
	and	((coalesce(x.dt_inicio_vig_plano::text, '') = '') or (dt_contratacao_w >= x.dt_inicio_vig_plano))
	and	((coalesce(x.dt_fim_vig_plano::text, '') = '') or (dt_contratacao_w <= x.dt_fim_vig_plano));

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_liberado,
		c.qt_dias,
		c.dt_inicio_vigencia,
		nr_seq_segurado,
		c.nr_seq_contrato,
		c.nr_seq_plano,
		a.nr_seq_tipo_carencia,
		a.cd_procedimento cd_proc,
		a.cd_grupo_proc cd_grupo,
		a.cd_especialidade cd_espec,
		a.cd_area_procedimento cd_area,
		CASE WHEN a.ie_liberado='S' THEN  0  ELSE 1 END  ie_lib,
		b.ds_carencia,
		a.nr_seq_grupo_servico,
		c.qt_dias_fora_abrang_ant,
		a.ie_origem_proced
	from	pls_carencia 		c,
		pls_tipo_carencia	b,
		pls_carencia_proc 	a
	where	c.nr_sequencia = nr_seq_carencia_w
	and	c.ie_cpt = 'N'
	and 	b.nr_sequencia = c.nr_seq_tipo_carencia
	and	a.nr_seq_tipo_carencia = b.nr_sequencia
	and  	coalesce(a.nr_seq_tipo_acomodacao, 1) = 1
	and  	coalesce(a.ie_tipo_guia, '-1') = '-1'
	
union all

	SELECT	a.nr_sequencia,
		a.ie_liberado,
		d.qt_dias,
		d.dt_inicio_vigencia,
		nr_seq_segurado,
		d.nr_seq_contrato,
		d.nr_seq_plano,
		a.nr_seq_tipo_carencia,
		a.cd_procedimento cd_proc,
		a.cd_grupo_proc cd_grupo,
		a.cd_especialidade cd_espec,
		a.cd_area_procedimento cd_area,
		CASE WHEN a.ie_liberado='S' THEN  0  ELSE 1 END  ie_lib,
		b.ds_carencia,
		a.nr_seq_grupo_servico,
		d.qt_dias_fora_abrang_ant,
		a.ie_origem_proced
	from	pls_carencia 		d,
		pls_grupo_carencia	c,
		pls_tipo_carencia	b,
		pls_carencia_proc	a
	where	d.nr_sequencia = nr_seq_carencia_w
	and	d.ie_cpt = 'N'
	and	d.nr_seq_grupo_carencia > 0
	and	c.nr_sequencia = d.nr_seq_grupo_carencia
	and	b.nr_seq_grupo = c.nr_sequencia
	and	a.nr_seq_tipo_carencia = b.nr_sequencia
	and  	coalesce(a.nr_seq_tipo_acomodacao, 1) = 1
	and	coalesce(a.ie_tipo_guia, '-1') = '-1'
	order by nr_seq_grupo_servico,
		cd_area,
		cd_espec,
		cd_grupo,
		cd_proc,
		ie_lib;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_guia,
		a.nr_seq_tipo_acomodacao,
		c.dt_inicio_vigencia,
		c.qt_dias,
		c.nr_seq_segurado,
		c.nr_seq_contrato,
		a.nr_seq_tipo_carencia,
		c.qt_dias_fora_abrang_ant
	from	pls_carencia_proc a,
		pls_carencia c
	where	c.nr_sequencia			= nr_seq_carencia_w
	and	c.nr_seq_tipo_carencia		= a.nr_seq_tipo_carencia
	and	coalesce(a.cd_procedimento::text, '') = ''
	and	coalesce(a.cd_grupo_proc::text, '') = ''
	and	coalesce(a.cd_especialidade::text, '') = ''
	and	coalesce(a.cd_area_procedimento::text, '') = ''
	and	c.ie_cpt			= 'N'
	and	a.ie_liberado			= 'S';

BEGIN
if (coalesce(nr_seq_guia_proc_p,0) > 0) then
	ie_tipo_consistencia_w	:= 'G';
elsif (coalesce(nr_seq_conta_proc_p,0) > 0) then
	ie_tipo_consistencia_w	:= 'C';
elsif (coalesce(nr_seq_requisicao_proc_p,0) > 0) then
	ie_tipo_consistencia_w	:= 'R';
end if;

begin
--select	nr_seq_plano,
select	pls_obter_produto_benef(nr_sequencia,dt_solicitacao_p),
	nr_seq_contrato,
	dt_inclusao_operadora,
	dt_contratacao,
	nr_seq_segurado_ant
into STRICT	nr_seq_plano_w,
	nr_seq_contrato_w,
	dt_inclusao_operadora_w,
	dt_contratacao_w,
	nr_seq_segurado_ant_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;
exception
when others then
	nr_seq_plano_w		:= '';
	nr_seq_contrato_w	:= '';
	dt_inclusao_operadora_w	:= '';
end;

if (ie_tipo_consistencia_w = 'G') then
	select	nr_seq_guia,
		ie_tipo_cobertura
	into STRICT	nr_seq_guia_w,
		ie_tipo_cobertura_w
	from	pls_guia_plano_proc
	where	nr_sequencia	= nr_seq_guia_proc_p;

	begin
	select	ie_tipo_guia,
		nr_seq_tipo_acomodacao,
		nr_seq_uni_exec,
		ie_carater_internacao,
		nr_seq_prestador,
		nr_seq_plano
	into STRICT	ie_tp_guia_w,
		nr_sq_tp_acomod_w,
		nr_seq_uni_exec_w,
		ie_carater_solic_w,
		nr_seq_prestador_w,
		nr_seq_plano_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_w;
	exception
	when others then
		nr_seq_prestador_w	:= null;
		nr_seq_plano_w		:= null;
	end;

elsif (ie_tipo_consistencia_w = 'C') then
	select	nr_seq_conta,
		ie_tipo_cobertura,
		cd_procedimento,
		ie_origem_proced,
		qt_procedimento_imp
	into STRICT	nr_seq_conta_w,
		ie_tipo_cobertura_w,
		cd_procedimento_conta_w,
		ie_origem_proced_conta_w,
		qt_procedimento_imp_w
	from	pls_conta_proc
	where	nr_sequencia	= nr_seq_conta_proc_p;
	
	begin
	select	a.nr_seq_prestador,
		b.cd_guia_ok,
		b.nr_seq_segurado,
		a.nr_seq_congenere,
		b.ie_carater_internacao,
		a.ie_tipo_protocolo
	into STRICT	nr_seq_prestador_w,
		cd_guia_w,
		nr_seq_segurado_conta_w,
		nr_seq_uni_exec_w,
		ie_carater_solic_w,
		ie_tipo_protocolo_w
	from	pls_protocolo_conta a,
		pls_conta b
	where	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_sequencia	= nr_seq_conta_w;
	exception
	when others then
		nr_seq_prestador_w	:= null;
		cd_guia_w		:= null;
	end;
	
	if (coalesce(cd_guia_w,'X') <> 'X') then
		select	coalesce(sum(qt_procedimento_imp),0)
		into STRICT	qt_carencia_util_w
		from	pls_conta_proc
		where	nr_seq_conta = nr_seq_conta_w
		and	coalesce(ie_status,'U') <> 'U'
		and	cd_procedimento = cd_procedimento_conta_w
		and	ie_origem_proced = ie_origem_proced_conta_w
		and	nr_sequencia <> nr_seq_conta_proc_p;
		
		select	sum(a.qt_autorizada)
		into STRICT	qt_autorizada_w
		from	pls_guia_plano_proc a,
			pls_guia_plano b
		where	a.nr_seq_guia = b.nr_sequencia
		and (b.cd_guia = cd_guia_w or b.cd_guia_principal = cd_guia_w)
		and	b.ie_status = '1'
		and	b.nr_seq_segurado = nr_seq_segurado_conta_w
		and	a.cd_procedimento = cd_procedimento_conta_w
		and	a.ie_origem_proced = ie_origem_proced_conta_w;
			
		if (coalesce(qt_autorizada_w,0) >= qt_procedimento_imp_w + coalesce(qt_carencia_util_w,0)) then
			goto final;
		end if;
	end if;
elsif (ie_tipo_consistencia_w = 'R') then
	select	nr_seq_requisicao,
		ie_tipo_cobertura
	into STRICT	nr_seq_requisicao_w,
		ie_tipo_cobertura_w
	from	pls_requisicao_proc
	where	nr_sequencia	= nr_seq_requisicao_proc_p;

	begin
	select	ie_tipo_guia,
		nr_seq_prestador,
		nr_seq_uni_exec,
		ie_carater_atendimento,
		nr_seq_plano
	into STRICT	ie_tp_guia_w,
		nr_seq_prestador_w,
		nr_seq_uni_exec_w,
		ie_carater_solic_w,
		nr_seq_plano_w
	from	pls_requisicao
	where	nr_sequencia		= nr_seq_requisicao_w
	and	cd_estabelecimento	= cd_estabelecimento_p;
	exception
	when others then
		nr_seq_prestador_w	:= null;
		nr_seq_plano_w		:= null;
	end;
end if;

if (ie_tipo_consistencia_w in ('G','C','R')) then
	SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;
end if;

select	count(1)
into STRICT	qt_carencias_benef_w
from	pls_carencia		b,
	pls_segurado		a
where	b.nr_seq_segurado	= a.nr_sequencia
and	a.nr_sequencia		= nr_seq_segurado_p
and	b.ie_cpt		= 'N'  LIMIT 1;

if (qt_carencias_benef_w = 0) then
	select	/*+ INDEX (C PLSCAREN_PLSCONT_FK_I)*/ count(1)
	into STRICT	qt_carencias_contrato_w
	from	pls_contrato		a,
		pls_carencia		c,
		pls_segurado		b
	where	c.nr_seq_contrato	= a.nr_sequencia
	and	b.nr_seq_contrato	= a.nr_sequencia
	and	b.nr_sequencia		= nr_seq_segurado_p
	and	c.ie_cpt		= 'N'  LIMIT 1;
	
	if (qt_carencias_contrato_w = 0) then
		select	count(1)
		into STRICT	qt_carencias_produto_w
		from	pls_plano		a,
			pls_carencia		c,
			pls_segurado		b
		where	a.nr_sequencia	= c.nr_seq_plano
		and	b.nr_seq_plano	= a.nr_sequencia
		and	b.nr_sequencia	= nr_seq_segurado_p
		and	c.ie_cpt	= 'N'
		and	((coalesce(c.dt_inicio_vig_plano::text, '') = '') or (dt_contratacao_w >= c.dt_inicio_vig_plano))
		and	((coalesce(c.dt_fim_vig_plano::text, '') = '') or (dt_contratacao_w <= c.dt_fim_vig_plano))  LIMIT 1;
	end if;
end if;

ie_consistir_caren_prod_ant_w	:= 'S';

if (ie_carencia_abrangencia_ant_p = 'S') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
	ie_consistir_caren_prod_ant_w := pls_obter_se_caren_plano_ant(nr_seq_segurado_p, nr_seq_plano_w, nr_seq_segurado_ant_w, nr_seq_prestador_w, nr_seq_uni_exec_w, ie_consistir_caren_prod_ant_w);
end if;

if (qt_carencias_benef_w > 0) or (qt_carencias_contrato_w > 0) or (qt_carencias_produto_w > 0) then
	open C00;
	loop
	fetch C00 into
		nr_seq_carencia_w,
		ie_mes_posterior_w,
		ie_localizacao_w,
		nr_seq_plano_contrato_w,
		nr_seq_rede_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
	
		if (nr_seq_rede_w IS NOT NULL AND nr_seq_rede_w::text <> '') then
			if (pls_obter_se_prest_rede_atend(nr_seq_prestador_w,nr_seq_rede_w) = 'N') then
				goto fim_cursor_C00;
			end if;
		end if;
		
		if (nr_seq_plano_contrato_w IS NOT NULL AND nr_seq_plano_contrato_w::text <> '') then
			if (nr_seq_plano_contrato_w <> nr_seq_plano_w) then
				goto fim_cursor_C00;
			end if;
		end if;
		
		if (coalesce(ie_mes_posterior_w::text, '') = '') then
			ie_mes_posterior_w	:= 'N';
		end if;
		
		if (ie_mes_posterior_w	= 'S') then
			dt_inclusao_operadora_w	:= add_months(trunc(dt_inclusao_operadora_w,'month'),1);
		end if;
		
		if (ie_tipo_consistencia_w in ('G','C','R')) then
			ie_liberado_w	:= 'N';
			ie_lib_ant_w	:= 'N';
			
			for r_C01_w in C01 loop
				-- retirado do select do cursor para otimizar a performance
				if	(((coalesce(r_C01_w.cd_proc::text, '') = '') or (r_C01_w.cd_proc = cd_procedimento_p)) and
					((coalesce(r_C01_w.ie_origem_proced::text, '') = '') or (r_C01_w.ie_origem_proced = ie_origem_proced_w)) and
					((coalesce(r_C01_w.cd_grupo::text, '') = '') or (r_C01_w.cd_grupo = cd_grupo_w)) and
					((coalesce(r_C01_w.cd_espec::text, '') = '') or (r_C01_w.cd_espec = cd_especialidade_w)) and
					((coalesce(r_C01_w.cd_area::text, '') = '') or (r_C01_w.cd_area = cd_area_w))) then
			
					nr_seq_carencia_proc_w := r_C01_w.nr_sequencia;
					ie_liberado_w := r_C01_w.ie_liberado;
					qt_dias_w := r_C01_w.qt_dias;
					dt_inicio_vigencia_w := r_C01_w.dt_inicio_vigencia;
					nr_seq_segurado_w := r_C01_w.nr_seq_segurado;
					nr_seq_contrato_w := r_C01_w.nr_seq_contrato;
					nr_seq_plano_aux_w := r_C01_w.nr_seq_plano;
					nr_seq_tipo_carencia_w := r_C01_w.nr_seq_tipo_carencia;
					cd_procedimento_ww := r_C01_w.cd_proc;
					cd_grupo_proc_ww := r_C01_w.cd_grupo;
					cd_especialidade_ww := r_C01_w.cd_espec;
					cd_area_procedimento_ww := r_C01_w.cd_area;
					ie_lib_w := r_C01_w.ie_lib;
					ds_carencia_w := r_C01_w.ds_carencia;
					nr_seq_grupo_servico_w := r_C01_w.nr_seq_grupo_servico;
					qt_dias_fora_abrang_ant_w := r_C01_w.qt_dias_fora_abrang_ant;
					
					if (nr_seq_grupo_servico_w IS NOT NULL AND nr_seq_grupo_servico_w::text <> '') then
						ie_serv_lib_w	:= pls_se_grupo_preco_servico_lib(nr_seq_grupo_servico_w,cd_procedimento_p,ie_origem_proced_p);
						if (ie_serv_lib_w = 'S') then
							ie_liberado_w	:= ie_liberado_w;
						else
							ie_liberado_w	:= ie_lib_ant_w;
						end if;
					end if;
					ie_lib_ant_w	:= ie_liberado_w;
				end if;			
			end loop;
			
			if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
				ie_origem_w	:= 'B';
			elsif (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
				ie_origem_w	:= 'C';
			else
				ie_origem_w	:= 'P';
			end if;
			
			if (ie_liberado_w	= 'S') then
				ds_observacao_abrang_ant_w	:= '';
				/*Caso a abrangencia anterior nao tinha abrangencia no prestador atual, entao o sistema consiste a data pela migracao do produto novo*/

				if (ie_consistir_caren_prod_ant_w = 'N') then
					ds_observacao_abrang_ant_w	:= ' ' || wheb_mensagem_pck.get_texto(1108841);
					
					if (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '') then
						select (dt_contratacao_w + coalesce(qt_dias_fora_abrang_ant_w,qt_dias_w))
						into STRICT	dt_carencia_w
						;
					else
						select	max(dt_alteracao)
						into STRICT	dt_carencia_w
						from	pls_segurado_alt_plano a
						where	nr_seq_segurado	= nr_seq_segurado_p
						and	ie_situacao 		= 'A'
						and	nr_seq_plano_atual	= nr_seq_plano_w;
						
						select (dt_carencia_w + coalesce(qt_dias_fora_abrang_ant_w,qt_dias_w))
						into STRICT	dt_carencia_w
						;
					end if;
				else
					select (coalesce(dt_inicio_vigencia_w,dt_inclusao_operadora_w) + qt_dias_w)
					into STRICT	dt_carencia_w
					;
				end if;
				
				dt_carencia_w := trunc(dt_carencia_w);
				
				
				if (coalesce(dt_solicitacao_p,clock_timestamp()) < dt_carencia_w) then
					if (ie_tipo_consistencia_w = 'G') then
						if (ie_tipo_cobertura_w	= 'S') then /* so pode consistir SCA, se a cobertura do procedimeto e de SCA */
							CALL pls_consistir_caren_proc_sca(nr_seq_segurado_p, nr_seq_guia_proc_p, null,
										null, cd_procedimento_p,ie_origem_proced_p,
										dt_solicitacao_p, null, '',
										dt_carencia_w, cd_estabelecimento_p, nm_usuario_p);
						else
							select	count(1)
							into STRICT	qt_regra_carencia_w
							from	pls_regra_lanc_carencia
							where	1 = 1  LIMIT 1;
							
							if (qt_regra_carencia_w > 0) then
								nr_seq_regra_carencia_w := pls_obter_regra_carencia(ie_carater_solic_w, nr_seq_plano_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_regra_carencia_w);
								
								if (nr_seq_regra_carencia_w	> 0) then
									CALL pls_guia_gravar_historico(	nr_seq_guia_w, 2, wheb_mensagem_pck.get_texto(1108815, 'NR_SEQ_REGRA_CARENCIA='||nr_seq_regra_carencia_w),
													'', nm_usuario_p);
								else
									ie_gerar_glosa_w	:= 'S';
								end if;
							else
								ie_gerar_glosa_w	:= 'S';
							end if;
							
							if (ie_gerar_glosa_w	= 'S') then
								update	pls_guia_plano_proc
								set	nr_seq_tipo_carencia	= nr_seq_tipo_carencia_w
								where	nr_sequencia		= nr_seq_guia_proc_p;
								
								CALL pls_gravar_motivo_glosa('1410', null, nr_seq_guia_proc_p,
											null, wheb_mensagem_pck.get_texto(1108799, 'NR_SEQ_TIPO_CARENCIA='||nr_seq_tipo_carencia_w||';DS_CARENCIA='||ds_carencia_w||';NR_SEQ_CARENCIA_MAT='||
											nr_seq_carencia_proc_w||';IE_LOCALIZACAO='||ie_localizacao_w||';DT_CARENCIA='||to_char(dt_carencia_w,'dd/mm/yyyy')||';QT_DIAS='||qt_dias_w||';DS_OBSERVACAO_ABRANG_ANT='||ds_observacao_abrang_ant_w), nm_usuario_p,
											ie_origem_w, 'CG', nr_seq_prestador_w,
											'(Regra ' || nr_seq_tipo_carencia_w || ' -> ' || nr_seq_carencia_proc_w || ')',null);
							end if;
						end if;
					elsif (ie_tipo_consistencia_w = 'C') then
						if (ie_tipo_cobertura_w	= 'S') then /*so pode consistir SCA, se a cobertura do procedimeto e de SCA */
							CALL pls_consistir_caren_proc_sca(nr_seq_segurado_p, null, nr_seq_conta_proc_p,
										null, cd_procedimento_p, ie_origem_proced_p,
										dt_solicitacao_p, null, '',
										dt_carencia_w, cd_estabelecimento_p, nm_usuario_p);
						else
							if (coalesce(ie_importacao_p,'N') = 'S') then
								ie_evento_w := 'IA';
							elsif (coalesce(ie_importacao_p, 'N') = 'DC') then
								ie_evento_w := 'DC';
							elsif (ie_tipo_protocolo_w = 'R') then
								ie_evento_w := 'CR';
							else
								ie_evento_w := 'CC';
							end if;
							
							select	count(1)
							into STRICT	qt_regra_carencia_w
							from	pls_regra_lanc_carencia
							where	1 = 1  LIMIT 1;
														
							if ( qt_regra_carencia_w > 0) then
								nr_seq_regra_carencia_w := pls_obter_regra_carencia(ie_carater_solic_w, nr_seq_plano_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_regra_carencia_w);
								
								if (nr_seq_regra_carencia_w	> 0) then
									ie_gerar_glosa_w := 'N';
								else
									ie_gerar_glosa_w	:= 'S';
								end if;
							else
								ie_gerar_glosa_w	:= 'S';
							end if;
								
							if (ie_gerar_glosa_w	= 'S') then
								CALL pls_gravar_conta_glosa('1410', null, nr_seq_conta_proc_p,
											null, 'N', wheb_mensagem_pck.get_texto(1108799, 'NR_SEQ_TIPO_CARENCIA='||nr_seq_tipo_carencia_w||';DS_CARENCIA='||ds_carencia_w||';NR_SEQ_CARENCIA_MAT='||
											nr_seq_carencia_proc_w||';IE_LOCALIZACAO='||ie_localizacao_w||';DT_CARENCIA='||to_char(dt_carencia_w,'dd/mm/yyyy')||';QT_DIAS='||qt_dias_w||';DS_OBSERVACAO_ABRANG_ANT='||ds_observacao_abrang_ant_w), nm_usuario_p,
											'A', ie_evento_w, nr_seq_prestador_w,
											cd_estabelecimento_p, '', null);
											
							end if;
						end if;
					elsif (ie_tipo_consistencia_w = 'R') then
						if (ie_tipo_cobertura_w	= 'S') then
							CALL pls_consistir_caren_proc_sca(nr_seq_segurado_p, null, null,
										nr_seq_requisicao_proc_p, cd_procedimento_p, ie_origem_proced_p,
										dt_solicitacao_p, null, '',
										dt_carencia_w, cd_estabelecimento_p, nm_usuario_p);
						else
							select	count(1)
							into STRICT	qt_regra_carencia_w
							from	pls_regra_lanc_carencia
							where	1 = 1  LIMIT 1;
							
							if (qt_regra_carencia_w > 0) then
								nr_seq_regra_carencia_w := pls_obter_regra_carencia(ie_carater_solic_w, nr_seq_plano_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_regra_carencia_w);
								
								if (nr_seq_regra_carencia_w	> 0) then
									CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w, 'L', wheb_mensagem_pck.get_texto(1108815, 'NR_SEQ_REGRA_CARENCIA='||nr_seq_regra_carencia_w),
													null, nm_usuario_p);
								else
									ie_gerar_glosa_w	:= 'S';
								end if;
							else
								ie_gerar_glosa_w	:= 'S';
							end if;
							
							if (ie_gerar_glosa_w	= 'S') then
								update	pls_requisicao_proc
								set	nr_seq_tipo_carencia	= nr_seq_tipo_carencia_w
								where	nr_sequencia		= nr_seq_requisicao_proc_p;
								
								CALL pls_gravar_requisicao_glosa('1410', null, nr_seq_requisicao_proc_p,
											null, wheb_mensagem_pck.get_texto(1108799, 'NR_SEQ_TIPO_CARENCIA='||nr_seq_tipo_carencia_w||';DS_CARENCIA='||ds_carencia_w||';NR_SEQ_CARENCIA_MAT='||
											nr_seq_carencia_proc_w||';IE_LOCALIZACAO='||ie_localizacao_w||';DT_CARENCIA='||to_char(dt_carencia_w,'dd/mm/yyyy')||';QT_DIAS='||qt_dias_w||';DS_OBSERVACAO_ABRANG_ANT='||ds_observacao_abrang_ant_w), nm_usuario_p,
											nr_seq_prestador_w, cd_estabelecimento_p, null,
											'');
							end if;
						end if;
					end if;
				end if;
			end if;
		end if;
		
		nr_seq_tipo_acomod_w		:= coalesce(nr_sq_tp_acomod_w,0);
		ie_tipo_guia_solic_w		:= coalesce(ie_tp_guia_w,'X');
		
		if (coalesce(nr_seq_guia_p,0) > 0) then
			begin
			select	nr_seq_prestador,
				ie_tipo_guia,
				nr_seq_tipo_acomodacao
			into STRICT	nr_seq_prestador_w,
				ie_tipo_guia_solic_w,
				nr_seq_tipo_acomod_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_p;
			exception
			when others then
				nr_seq_prestador_w	:= null;
				ie_tipo_guia_solic_w	:= 'X';
				nr_seq_tipo_acomod_w	:= 0;
			end;
			
			if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
				ie_origem_w	:= 'B';
			elsif (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
				ie_origem_w	:= 'C';
			else
				ie_origem_w	:= 'P';
			end if;
			
			ie_liberado_w	:= 'N';
			open C02;
			loop
			fetch C02 into	
				nr_seq_carencia_proc_w,
				ie_tipo_guia_w,
				nr_seq_tipo_acomodacao_w,
				dt_inicio_vigencia_w,
				qt_dias_w,
				nr_seq_segurado_w,
				nr_seq_contrato_w,
				nr_seq_tipo_carencia_w,
				qt_dias_fora_abrang_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				ds_observacao_abrang_ant_w	:= '';
				/*Caso a abrangencia anterior nao tinha abrangencia no prestador atual, entao o sistema consiste a data pela migracao do produto novo*/

				if (ie_consistir_caren_prod_ant_w = 'N') then
					ds_observacao_abrang_ant_w	:= ' ' || wheb_mensagem_pck.get_texto(1108841);
					
					select (dt_contratacao_w + coalesce(qt_dias_fora_abrang_ant_w,qt_dias_w))
					into STRICT	dt_carencia_w
					;
				else
					select (coalesce(dt_inicio_vigencia_w, dt_inclusao_operadora_w) + qt_dias_w)
					into STRICT	dt_carencia_w
					;
				end if;
				
				if (coalesce(dt_solicitacao_p,clock_timestamp()) < dt_carencia_w) then
					if (ie_tipo_guia_w = ie_tipo_guia_solic_w) then
						CALL pls_gravar_motivo_glosa('1410',nr_seq_guia_p,null,null,wheb_mensagem_pck.get_texto(1108879, 'DS_OBSERVACAO_BRANG_ANT='||ds_observacao_abrang_ant_w),
									nm_usuario_p,ie_origem_w,'CG',nr_seq_prestador_w,'(Regra ' || nr_seq_tipo_carencia_w || ' -> ' || nr_seq_carencia_proc_w || ')',null);
					end if;
					
					if (nr_seq_tipo_acomodacao_w = nr_seq_tipo_acomod_w) then
						CALL pls_gravar_motivo_glosa('1401',nr_seq_guia_p,null,null,wheb_mensagem_pck.get_texto(1108880, 'DT_CARENCIA='||to_char(dt_carencia_w,'dd/mm/yyyy')||';DS_OBSERVACAO_ABRANG_ANT='||ds_observacao_abrang_ant_w),
									nm_usuario_p,ie_origem_w,'CG',nr_seq_prestador_w,'(Regra ' || nr_seq_tipo_carencia_w || ' -> ' || nr_seq_carencia_proc_w || ')',null);
					end if;
				end if;
				end;
			end loop;
			close C02;
		elsif (coalesce(nr_seq_requisicao_w,0) > 0) then
			begin
			select	nr_seq_prestador,
				ie_tipo_guia,
				nr_seq_tipo_acomodacao
			into STRICT	nr_seq_prestador_w,
				ie_tipo_guia_solic_w,
				nr_seq_tipo_acomod_w
			from	pls_requisicao
			where	nr_sequencia = nr_seq_requisicao_w;
			exception
			when others then
				nr_seq_prestador_w	:= null;
				ie_tipo_guia_solic_w	:= 'X';
				nr_seq_tipo_acomod_w	:= 0;
			end;
			
			if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
				ie_origem_w	:= 'B';
			elsif (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
				ie_origem_w	:= 'C';
			else
				ie_origem_w	:= 'P';
			end if;
			
			ie_liberado_w	:= 'N';
			open C02;
			loop
			fetch C02 into	
				nr_seq_carencia_proc_w,
				ie_tipo_guia_w,
				nr_seq_tipo_acomodacao_w,
				dt_inicio_vigencia_w,
				qt_dias_w,
				nr_seq_segurado_w,
				nr_seq_contrato_w,
				nr_seq_tipo_carencia_w,
				qt_dias_fora_abrang_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				ds_observacao_abrang_ant_w	:= '';
				/*Caso a abrangencia anterior nao tinha abrangencia no prestador atual, entao o sistema consiste a data pela migracao do produto novo*/

				if (ie_consistir_caren_prod_ant_w = 'N') then
					ds_observacao_abrang_ant_w	:= ' ' || wheb_mensagem_pck.get_texto(1108841);
					
					select (dt_contratacao_w + coalesce(qt_dias_fora_abrang_ant_w,qt_dias_w))
					into STRICT	dt_carencia_w
					;
				else
					select (coalesce(dt_inicio_vigencia_w, dt_inclusao_operadora_w) + qt_dias_w)
					into STRICT	dt_carencia_w
					;
				end if;
				
				if (coalesce(dt_solicitacao_p,clock_timestamp()) < dt_carencia_w) then
					if (ie_tipo_guia_w = ie_tipo_guia_solic_w) then
						CALL pls_gravar_requisicao_glosa('1410',nr_seq_requisicao_w,null,null,wheb_mensagem_pck.get_texto(1108879, 'DS_OBSERVACAO_BRANG_ANT='||ds_observacao_abrang_ant_w),
									nm_usuario_p,nr_seq_prestador_w,cd_estabelecimento_p,null,null,'CG');
					end if;
					
					if (nr_seq_tipo_acomodacao_w = nr_seq_tipo_acomod_w) then
						CALL pls_gravar_requisicao_glosa('1401',nr_seq_requisicao_w,null,null,wheb_mensagem_pck.get_texto(1108880, 'DT_CARENCIA='||to_char(dt_carencia_w,'dd/mm/yyyy')||';DS_OBSERVACAO_ABRANG_ANT='||ds_observacao_abrang_ant_w),
									nm_usuario_p,nr_seq_prestador_w,cd_estabelecimento_p,null,null,'CG');
					end if;
				end if;
				end;
			end loop;
			close C02;
		end if;
		<<fim_cursor_C00>>
		nr_seq_carencia_w	:= nr_seq_carencia_w;
	end loop;
	close C00;
end if;

<<final>>
null;

select	count(1)
into STRICT	qt_regra_carencia_w
from	pls_regra_lanc_carencia
where	1 = 1  LIMIT 1;

if (qt_regra_carencia_w > 0) then
	if (ie_tipo_consistencia_w = 'C') then
		select	count(1)
		into STRICT	qt_glosa_carencia_w
		from	pls_conta_glosa		a,
			tiss_motivo_glosa	b
		where	a.nr_seq_motivo_glosa	= b.nr_sequencia
		and	b.cd_motivo_tiss	= '1410'
		and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p  LIMIT 1;
		
		if (qt_glosa_carencia_w > 0) then
			nr_seq_regra_carencia_w := pls_obter_regra_carencia(ie_carater_solic_w, nr_seq_plano_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_regra_carencia_w);
			
			if (nr_seq_regra_carencia_w > 0) then
				update	pls_conta_glosa x
				set	x.ie_situacao 	= 'I',
					x.ds_observacao = wheb_mensagem_pck.get_texto(1108798, 'NR_SEQ_REGRA_CARENCIA='||nr_seq_regra_carencia_w)
				where	x.nr_sequencia in (	SELECT	a.nr_sequencia
								from	pls_conta_glosa		a,
									tiss_motivo_glosa	b
								where	a.nr_seq_motivo_glosa	= b.nr_sequencia
								and	b.cd_motivo_tiss	= '1410'
								and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p   LIMIT 1);
				
				update	pls_ocorrencia_benef x
				set	x.ie_situacao	= 'I',
					x.ds_observacao	= wheb_mensagem_pck.get_texto(1108797, 'NR_SEQ_REGRA_CARENCIA='||nr_seq_regra_carencia_w)
				where	x.nr_seq_glosa in (	SELECT	a.nr_sequencia
								from	pls_conta_glosa		a,
									tiss_motivo_glosa	b
								where	a.nr_seq_motivo_glosa	= b.nr_sequencia
								and	b.cd_motivo_tiss	= '1410'
								and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p   LIMIT 1);
			end if;
		end if;
	end if;
end if;
/*
commit;
*/
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_carencia_proc ( nr_seq_segurado_p bigint, nr_seq_guia_proc_p bigint, nr_seq_guia_p bigint, nr_seq_conta_proc_p bigint, nr_seq_requisicao_proc_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_solicitacao_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, ie_importacao_p text, ie_carencia_abrangencia_ant_p text) FROM PUBLIC;

