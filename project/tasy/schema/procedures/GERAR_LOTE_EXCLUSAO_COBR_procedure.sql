-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_exclusao_cobr ( nr_seq_regra_p text, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


dt_inicio_vigencia_w	regra_aprovacao_orgao_cobr.dt_inicio_vigencia%type;
dt_final_vigencia_w		regra_aprovacao_orgao_cobr.dt_final_vigencia%type;
nr_seq_lote_w			lote_orgao_cobranca.nr_sequencia%type;
nr_seq_interface_w		orgao_cobranca_integr.nr_seq_interface%type;
nr_seq_interface_ret_w	orgao_cobranca_integr.nr_seq_interface%type;
ds_historico_w			varchar(255);
qtd_w					bigint;
nr_seq_orgao_cobr_w		bigint;
qtd_2_w					bigint;
cheque_cr_orgao_cobr	bigint;
qtd_liberacao_exclusao	bigint;
qtd_exclusao			bigint;
qtd_lote_exc			bigint;

cheque CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_cheque
	from	cheque_cr_orgao_cobr a
	where 	a.ie_selecionado = 'S'
	and 	coalesce(a.nr_seq_lote_exc::text, '') = ''
	and	(a.dt_liberacao_exclusao IS NOT NULL AND a.dt_liberacao_exclusao::text <> '');

titulo CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_titulo
	from 	titulo_receber_orgao_cobr a
	where 	a.ie_selecionado = 'S'
	and 	coalesce(a.nr_seq_lote_exc::text, '') = ''
	and	(a.dt_liberacao_exclusao IS NOT NULL AND a.dt_liberacao_exclusao::text <> '');

outros CURSOR FOR
	SELECT	a.nr_sequencia
	from	outros_orgao_cobr a
	where 	a.ie_selecionado = 'S'
	and 	coalesce(a.nr_seq_lote_exc::text, '') = ''
	and	(a.dt_liberacao_exclusao IS NOT NULL AND a.dt_liberacao_exclusao::text <> '');

aprovacao CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_regra,
		a.nm_usuario_lib,
		a.dt_atualizacao,
		a.nm_usuario,
		a.dt_atualizacao_nrec,
		a.nm_usuario_nrec,
		a.qt_nivel_liberacao
	from	regra_aprov_cobr_usuario a
	where	a.nr_seq_regra = nr_seq_regra_p
	order by
		a.qt_nivel_liberacao;

vet01	cheque%RowType;
vet02	titulo%RowType;
vet03	outros%RowType;
vet04	aprovacao%RowType;


BEGIN

select	max(a.dt_inicio_vigencia),
	max(a.dt_final_vigencia)
into STRICT 	dt_inicio_vigencia_w,
 	dt_final_vigencia_w
from	regra_aprovacao_orgao_cobr a
where	a.nr_sequencia = nr_seq_regra_p;

if (coalesce(nr_seq_regra_p::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(335679);
end if;

if	((dt_inicio_vigencia_w IS NOT NULL AND dt_inicio_vigencia_w::text <> '')
	and (to_date(to_char(clock_timestamp(),'dd/MM/yyyy')) < to_date(to_char(dt_inicio_vigencia_w,'dd/MM/yyyy')))) or
	((dt_final_vigencia_w IS NOT NULL AND dt_final_vigencia_w::text <> '')
	and (to_date(to_char(clock_timestamp(),'dd/MM/yyyy')) > to_date(to_char(dt_final_vigencia_w,'dd/MM/yyyy')))) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(335686);
end if;

if (ie_opcao_p = 'C')then

	select	count(*),
		max(nr_seq_orgao_cobr)
	into STRICT	qtd_w,
		nr_seq_orgao_cobr_w
	from 	cheque_cr_orgao_cobr
	where	ie_selecionado = 'S';

	select	count(*)
	into STRICT	qtd_2_w
	from 	cheque_cr_orgao_cobr
	where	ie_selecionado = 'S'
	and 	nr_seq_orgao_cobr = nr_seq_orgao_cobr_w;

	select	count(*)
	into STRICT	qtd_liberacao_exclusao
	from 	cheque_cr_orgao_cobr
	where	ie_selecionado = 'S'
	and 	coalesce(dt_liberacao_exclusao::text, '') = '';

	select	count(*)
	into STRICT	qtd_exclusao
	from 	cheque_cr_orgao_cobr
	where	ie_selecionado = 'S'
	and 	(dt_exclusao IS NOT NULL AND dt_exclusao::text <> '');

	select	count(*)
	into STRICT	qtd_lote_exc
	from 	cheque_cr_orgao_cobr
	where	ie_selecionado = 'S'
	and 	(nr_seq_lote_exc IS NOT NULL AND nr_seq_lote_exc::text <> '');

elsif (ie_opcao_p = 'T')then

	select	count(*),
		max(nr_seq_orgao_cobr)
	into STRICT	qtd_w,
		nr_seq_orgao_cobr_w
	from 	titulo_receber_orgao_cobr
	where	ie_selecionado = 'S';

	select	count(*)
	into STRICT	qtd_2_w
	from 	titulo_receber_orgao_cobr
	where	ie_selecionado = 'S'
	and 	nr_seq_orgao_cobr = nr_seq_orgao_cobr_w;

	select	count(*)
	into STRICT	qtd_liberacao_exclusao
	from 	titulo_receber_orgao_cobr
	where	ie_selecionado = 'S'
	and 	coalesce(dt_liberacao_exclusao::text, '') = '';

	select	count(*)
	into STRICT	qtd_exclusao
	from 	titulo_receber_orgao_cobr
	where	ie_selecionado = 'S'
	and 	(dt_exclusao IS NOT NULL AND dt_exclusao::text <> '');

	select	count(*)
	into STRICT	qtd_lote_exc
	from 	titulo_receber_orgao_cobr
	where	ie_selecionado = 'S'
	and 	(nr_seq_lote_exc IS NOT NULL AND nr_seq_lote_exc::text <> '');

elsif (ie_opcao_p = 'O')then
	select	count(*),
		max(nr_seq_orgao_cobr)
	into STRICT	qtd_w,
		nr_seq_orgao_cobr_w
	from 	outros_orgao_cobr
	where	ie_selecionado = 'S';

	select	count(*)
	into STRICT	qtd_2_w
	from 	outros_orgao_cobr
	where	ie_selecionado = 'S'
	and 	nr_seq_orgao_cobr = nr_seq_orgao_cobr_w;

	select	count(*)
	into STRICT	qtd_liberacao_exclusao
	from 	outros_orgao_cobr
	where	ie_selecionado = 'S'
	and 	coalesce(dt_liberacao_exclusao::text, '') = '';

	select	count(*)
	into STRICT	qtd_exclusao
	from 	outros_orgao_cobr
	where	ie_selecionado = 'S'
	and 	(dt_exclusao IS NOT NULL AND dt_exclusao::text <> '');

	select	count(*)
	into STRICT	qtd_lote_exc
	from 	outros_orgao_cobr
	where	ie_selecionado = 'S'
	and 	(nr_seq_lote_exc IS NOT NULL AND nr_seq_lote_exc::text <> '');

end if;

if (qtd_w <> qtd_2_w) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(338234);
end if;

if (qtd_liberacao_exclusao > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(673911);
end if;

if (qtd_exclusao > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(673912);
end if;

if (qtd_lote_exc > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(674354);
end if;

select	max(a.nr_seq_interface)
into STRICT	nr_seq_interface_w
from	orgao_cobranca_integr a,
		interface_integracao b
where	a.nr_seq_interface = b.nr_sequencia
and		a.nr_seq_orgao_cobr = nr_seq_orgao_cobr_w
and		b.ie_situacao = 'A'
and		a.ie_utilizacao = 'E';

select	max(a.nr_seq_interface)
into STRICT	nr_seq_interface_ret_w
from	orgao_cobranca_integr a,
		interface_integracao b
where	a.nr_seq_interface = b.nr_sequencia
and		a.nr_seq_orgao_cobr = nr_seq_orgao_cobr_w
and		b.ie_situacao = 'A'
and		a.ie_utilizacao = 'R';

if (coalesce(nr_seq_interface_w::text, '') = '') or (coalesce(nr_seq_interface_ret_w::text, '') = '') then
	ds_historico_w := wheb_mensagem_pck.get_texto(338333, 'NR_ORGAO=' || nr_seq_orgao_cobr_w);
	CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_historico_w);
end if;

insert into lote_orgao_cobranca(nr_sequencia,
				dt_lote,
				ie_envio_retorno,
				ie_tipo_lote,
				ie_origem,
				dt_aprovacao,
				dt_remessa_retorno,
				dt_fechamento,
				nm_usuario,
				nr_seq_interface,
				nr_seq_interface_ret,
				nr_seq_orgao_cobr,
				ie_situacao_lote,
				dt_atualizacao,
				nr_seq_remessa,
				cd_estabelecimento)
			values (nextval('lote_orgao_cobranca_seq'),
				clock_timestamp(),
				'E',
				'E',
				ie_opcao_p,
				null,
				null,
				null,
				nm_usuario_p,
				nr_seq_interface_w,
				nr_seq_interface_ret_w,
				nr_seq_orgao_cobr_w,
				'P',
				clock_timestamp(),
				0,
				obter_estabelecimento_ativo); -- o numero da remesse é gravado na geração do arquivo
select	max(a.nr_sequencia)
into STRICT 	nr_seq_lote_w
from	lote_orgao_cobranca a;

ds_historico_w := wheb_mensagem_pck.get_texto(339103, 'NM_USUARIO=' || nm_usuario_p || ';NR_SEQ_LOTE=' || nr_seq_lote_w || ';DT_ATUALIZACAO=' || to_char(clock_timestamp(),'dd/MM/yyyy hh24:mi:ss'));

if (ie_opcao_p = 'C')then

	open cheque;
	loop
	fetch cheque into
		vet01;
	EXIT WHEN NOT FOUND; /* apply on cheque */
		begin

		update	cheque_cr_orgao_cobr a
		set	a.nr_seq_lote_exc	= nr_seq_lote_w,
			a.ie_selecionado	= 'N',
			a.nr_seq_regra		= nr_seq_regra_p
		where 	a.nr_sequencia		= vet01.nr_sequencia;


		CALL gerar_historico_cobr_orgao(null,vet01.nr_seq_cheque,null,ds_historico_w,nm_usuario_p,'P');

		end;
	end loop;
	close cheque;

elsif (ie_opcao_p = 'T') then

	open titulo;
	loop
	fetch titulo into
		vet02;
	EXIT WHEN NOT FOUND; /* apply on titulo */
		begin

		update	titulo_receber_orgao_cobr a
		set	a.nr_seq_lote_exc	= nr_seq_lote_w,
			a.ie_selecionado	= 'N',
			a.nr_seq_regra		= nr_seq_regra_p
		where 	a.nr_sequencia		= vet02.nr_sequencia;

		CALL gerar_historico_cobr_orgao(vet02.nr_titulo,null,null,ds_historico_w,nm_usuario_p,'P');

		end;
	end loop;
	close titulo;

elsif (ie_opcao_p = 'O') then

	open outros;
	loop
	fetch outros into
		vet03;
	EXIT WHEN NOT FOUND; /* apply on outros */
		begin

		update	outros_orgao_cobr a
		set	a.nr_seq_lote_exc	= nr_seq_lote_w,
			a.ie_selecionado	= 'N',
			a.nr_seq_regra		= nr_seq_regra_p
		where 	a.nr_sequencia		= vet03.nr_sequencia;

		CALL gerar_historico_cobr_orgao(null,null,null,ds_historico_w,nm_usuario_p,'P');

		end;
	end loop;
	close outros;

end if;

open aprovacao;
loop
fetch aprovacao into
	vet04;
EXIT WHEN NOT FOUND; /* apply on aprovacao */
	begin
	insert into lote_orgao_cobr_aprovacao(nr_sequencia,
						nr_seq_lote,
						nm_usuario_aprov,
						dt_atualizacao,
						dt_aprovacao,
						qt_nivel_liberacao,
						nm_usuario)
					values	(nextval('lote_orgao_cobr_aprovacao_seq'),
						(SELECT max(a.nr_sequencia) from lote_orgao_cobranca a),
						vet04.nm_usuario_lib,
						clock_timestamp(),
						null,
						vet04.qt_nivel_liberacao,
						vet04.nm_usuario);
	end;
end loop;
close aprovacao;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_exclusao_cobr ( nr_seq_regra_p text, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

