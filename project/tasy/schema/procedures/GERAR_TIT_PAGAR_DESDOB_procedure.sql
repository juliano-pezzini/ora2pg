-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tit_pagar_desdob ( nr_titulo_p bigint, nr_parcelas_p bigint, dt_vencimento_p timestamp, nm_usuario_p text, qt_dias_intervalo_p bigint) AS $body$
DECLARE


vl_saldo_titulo_w		double precision;
vl_parcela_w			double precision;
vl_parcela_original_w		double precision;
nr_sequencia_w			bigint;
vl_resto_w			double precision;
dt_parcela_w			timestamp;
vl_parcela_juros_orig_w		double precision;
vl_parcela_multa_orig_w		double precision;
vl_parcela_juros_w		double precision;
vl_parcela_multa_w		double precision;
vl_resto_juros_w		double precision;
vl_resto_multa_w		double precision;
vl_saldo_juros_w		double precision;
vl_saldo_multa_w		double precision;
nr_dia_parcela_w		bigint;
nr_dia_venc_w			bigint;

BEGIN

select	vl_saldo_titulo,
	vl_saldo_juros,
	vl_saldo_multa
into STRICT	vl_saldo_titulo_w,
	vl_saldo_juros_w,
	vl_saldo_multa_w
from	titulo_pagar
where	nr_titulo = nr_titulo_p;

dt_parcela_w 		:= dt_vencimento_p;
vl_parcela_w		:= dividir(trunc(dividir(vl_saldo_titulo_w * 100,nr_parcelas_p)), 100);
vl_parcela_juros_w	:= dividir(trunc(dividir(vl_saldo_juros_w * 100,nr_parcelas_p)), 100);
vl_parcela_multa_w	:= dividir(trunc(dividir(vl_saldo_multa_w * 100,nr_parcelas_p)), 100);
vl_resto_w		:= vl_saldo_titulo_w - (vl_parcela_w * nr_parcelas_p);
vl_resto_juros_w	:= vl_saldo_juros_w - (vl_parcela_juros_w * nr_parcelas_p);
vl_resto_multa_w	:= vl_saldo_multa_w - (vl_parcela_multa_w * nr_parcelas_p);
vl_parcela_original_w	:= vl_parcela_w;
vl_parcela_juros_orig_w	:= vl_parcela_juros_w;
vl_parcela_multa_orig_w	:= vl_parcela_multa_w;

nr_dia_venc_w		:= PKG_DATE_UTILS.extract_field('DAY', dt_vencimento_p);

FOR i in 1..nr_parcelas_p LOOP

	IF (i = 1) THEN
		vl_parcela_w 		:= vl_parcela_w + vl_resto_w;
		vl_parcela_juros_w	:= vl_parcela_juros_w + vl_resto_juros_w;
		vl_parcela_multa_w	:= vl_parcela_multa_w + vl_resto_multa_w;
	END IF;

	select	nextval('titulo_pagar_desdob_seq')
	into STRICT	nr_sequencia_w
	;

	insert into titulo_pagar_desdob(NR_SEQUENCIA,
		 NR_TITULO,
		 DT_VENCIMENTO,
		 VL_TITULO,
		 DT_ATUALIZACAO,
		 NM_USUARIO,
		 NR_TITULO_DEST,
		 vl_saldo_juros,
		 vl_saldo_multa)
	values (nr_sequencia_w,
		 nr_titulo_p,
		 dt_parcela_w,
		 vl_parcela_w,
		 clock_timestamp(),
		 nm_usuario_p,
		 Null,
		 vl_parcela_juros_w,
		 vl_parcela_multa_w);

	vl_parcela_w 		:= vl_parcela_original_w;
	vl_parcela_juros_w	:= vl_parcela_juros_orig_w;
	vl_parcela_multa_w	:= vl_parcela_multa_orig_w;

	if (qt_dias_intervalo_p > 0) then
		dt_parcela_w	:= dt_parcela_w + qt_dias_intervalo_p;
	else
		/* esse tratamento é para o caso de as parcelas passarem pelo mês de fevereiro */

		nr_dia_parcela_w	:= PKG_DATE_UTILS.extract_field('DAY', PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_parcela_w, 1, 0), 'MONTH', 0));

		if (nr_dia_venc_w	> nr_dia_parcela_w) then

			dt_parcela_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_parcela_w,1,0);

		else
			if (nr_dia_venc_w > PKG_DATE_UTILS.EXTRACT_FIELD('DAY', PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.add_month(dt_parcela_w,1),'MONTH') )) then
				nr_dia_venc_w := PKG_DATE_UTILS.EXTRACT_FIELD('DAY', PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.add_month(dt_parcela_w,1),'MONTH'));
			end if;
			dt_parcela_w	:= PKG_DATE_UTILS.get_date(nr_dia_venc_w, PKG_DATE_UTILS.add_month(dt_parcela_w,1,0));

		end if;
	end if;

end loop;
COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tit_pagar_desdob ( nr_titulo_p bigint, nr_parcelas_p bigint, dt_vencimento_p timestamp, nm_usuario_p text, qt_dias_intervalo_p bigint) FROM PUBLIC;

