-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dsb_gerar_estrutura_ind ( nr_seq_indicador_p ind_base.nr_sequencia%type, nm_usuario_p text) AS $body$
DECLARE



ds_comando_sql_w			dsb_regra_calc_indicador.ds_comando_sql%type;
nm_objeto_w				dsb_regra_calc_indicador.nm_objeto%type;
col_cnt     				integer;
campos_w        			dbms_sql.desc_tab;
cursor_w 				integer;
nm_atributo_w				ind_dimensao.ds_atributo%type;
ie_tipo_campo_w				smallint;
ie_tipo_dado_w				bigint;
qt_decimais_w				bigint;
qt_precisao_w				bigint;
qt_tamanho_ww				double precision;
ds_erro_w				varchar(2000);
ds_label_w				varchar(255);
qt_registro_w				bigint;
BEGIN

select	ds_comando_sql,
	nm_objeto
into STRICT	ds_comando_sql_w,
	nm_objeto_w
from	dsb_regra_calc_indicador a
where	a.nr_seq_indicador	= nr_seq_indicador_p;


if (ds_comando_sql_w IS NOT NULL AND ds_comando_sql_w::text <> '') then
	begin
	cursor_w := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_w, ds_comando_sql_w, dbms_sql.native);
	dbms_sql.describe_columns(cursor_w,col_cnt,campos_w);
	exception when others then
		ds_erro_w	:= SQLERRM(SQLSTATE);
		CALL exibir_erro_abortar(Wheb_mensagem_pck.get_texto(308527) /*'Erro ao analisar a instrução SQL!'*/
 || chr(13) || chr(10) || ds_erro_w,null);
	end;
elsif (nm_objeto_w IS NOT NULL AND nm_objeto_w::text <> '') then
	begin
	cursor_w := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_w, 'SELECT * FROM ' || nm_objeto_w, dbms_sql.native);
	dbms_sql.describe_columns(cursor_w,col_cnt,campos_w);
	exception when others then
		ds_erro_w	:= SQLERRM(SQLSTATE);
		CALL exibir_erro_abortar(Wheb_mensagem_pck.get_texto(308527) /*'Erro ao analisar a instrução SQL!'*/
 || chr(13) || chr(10) || ds_erro_w,null);
	end;
end if;

/*Registra as colunas*/

for i in 1..campos_w.count loop
	begin
	nm_atributo_w		:= upper(campos_w[i].col_name);
	ie_tipo_dado_w		:= campos_w[i].col_type; /*1 varchar2, 2 number, 12 date*/
	qt_tamanho_ww	   	:= campos_w[i].col_max_len;
	qt_precisao_w		:= campos_w[i].col_precision;
	qt_decimais_w		:= campos_w[i].col_scale;
	ds_label_w		:= substr(nm_atributo_w,1,1) || substr(replace(lower(nm_atributo_w),'_',' '),2,length(nm_atributo_w));

	if (substr(nm_atributo_w,1,2) in ('VL','PR','QT')) then
		begin

		select	coalesce(max(1),0)
		into STRICT	qt_registro_w
		
		where	exists (	SELECT	1
				from	ind_informacao y
				where	y.nr_seq_indicador	= nr_seq_indicador_p
				and	y.ds_atributo		= nm_atributo_w);

		if (qt_registro_w = 0) then

			insert into ind_informacao(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_informacao,
				nr_seq_indicador,
				ds_atributo,
				ds_sql_where,
				cd_exp_informacao,
				ds_objetivo)
			values (	nextval('ind_informacao_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_label_w,
				nr_seq_indicador_p,
				nm_atributo_w,
				null,
				null,
				null);
		end if;
		end;
	elsif (substr(nm_atributo_w,1,2) = 'DT') and (ie_tipo_dado_w = 12) then
		begin

		select	coalesce(max(1),0)
		into STRICT	qt_registro_w
		
		where	exists (	SELECT	1
				from	ind_data y
				where	y.nr_seq_indicador	= nr_seq_indicador_p
				and	y.ds_atributo		= nm_atributo_w);

		if (qt_registro_w = 0) then

			insert into ind_data(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_data,
				nr_seq_indicador,
				ds_atributo,
				ie_tipo_data)
			values (	nextval('ind_data_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_label_w,
				nr_seq_indicador_p,
				nm_atributo_w,
				'M');
		end if;

		end;
	elsif (substr(nm_atributo_w,1,2) in ('CD','DS')) then
		begin
		select	coalesce(max(1),0)
		into STRICT	qt_registro_w
		
		where	exists (	SELECT	1
				from	ind_dimensao y
				where	y.nr_seq_indicador	= nr_seq_indicador_p
				and	y.ds_atributo		= nm_atributo_w);

		if (qt_registro_w = 0) then
			insert into ind_dimensao(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_dimensao,
				nr_seq_indicador,
				ds_atributo)
			values (	nextval('ind_dimensao_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_label_w,
				nr_seq_indicador_p,
				nm_atributo_w);
		end if;

		end;
	end if;



	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dsb_gerar_estrutura_ind ( nr_seq_indicador_p ind_base.nr_sequencia%type, nm_usuario_p text) FROM PUBLIC;

