-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_plantoes_escala ( dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_escala_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
	Gerar os plantões conforme as escalas do dia
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
	Parâmetros:
		1008 - [20] - Permite informar os campos 'Especialidade', 'Tipo plantão' e 'Regra' automaticamente
		1008 - [23] - Ao utilizar a opção 'Gerar plantões apartir das escalas', considerar apenas as escalas do usuário logado.
		1008 - [24] - Gerar pessoa adicional da escala na opção 'Gerar plantões a partir das escalas'
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_inicio_w				timestamp;
dt_fim_w				timestamp;
cd_pessoa_fisica_w			varchar(10);
ds_observacao_w				varchar(4000);
nr_sequencia_w				bigint;
nr_seq_escala_diaria_w			bigint;
ie_restringe_w				varchar(1);
ie_inf_campo_auto_w			varchar(1)	:= 'N';
nr_seq_regra_esp_w			bigint 	:= null;
nr_seq_tipo_plantao_w			bigint 	:= null;
cd_especialidade_w			integer  	:= null;
ie_plantao_partic_escala_w		varchar(255);
nr_seq_escala_w				bigint;

c_escala CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_pessoa_fisica,
		a.dt_inicio,
		a.dt_fim,
		a.ds_observacao,
		c.nr_sequencia
	from	escala		c,
		medico		b,
		escala_diaria	a
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.nr_seq_escala		= c.nr_sequencia
	and	a.dt_inicio between trunc(dt_inicial_p,'dd') and fim_dia(dt_final_p)
	and	c.ie_tipo		= coalesce(ie_tipo_escala_p,c.ie_tipo)
	and (ie_restringe_w = 'N' or
			exists (SELECT	1
				from	escala_estab e
				where	c.nr_sequencia		= e.nr_seq_escala
				and	e.cd_estabelecimento	= cd_estabelecimento_p));

c_medico CURSOR FOR
	SELECT	a.cd_pessoa_fisica
	from	escala_diaria	a
	where	a.nr_sequencia	= nr_seq_escala_diaria_w
	and	not exists (	SELECT	1
				from	medico_plantao x
				where	x.nr_seq_escala_diaria	= a.nr_sequencia
				and	x.cd_medico = a.cd_pessoa_fisica)
	
union

	select	b.cd_pessoa_fisica
	from	medico			c,
		escala_diaria_adic	b,
		escala_diaria		a
	where	a.nr_sequencia		= b.nr_seq_escala_diaria
	and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	a.nr_sequencia		= nr_seq_escala_diaria_w
	and	coalesce(ie_plantao_partic_escala_w,'N') = 'S'
	and	not exists (	select	1
				from	medico_plantao x
				where	x.nr_seq_escala_diaria	= a.nr_sequencia
				and	x.cd_medico = b.cd_pessoa_fisica);

c_regra_esp CURSOR(	cd_pessoa_fisica_pc	pessoa_fisica.cd_pessoa_fisica%type,
			nr_seq_escala_pc	escala.nr_sequencia%type,
			cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT	a.nr_sequencia
	from	regra_esp_repasse a
	where	coalesce(a.cd_pessoa_fisica, coalesce(cd_pessoa_fisica_pc,'0'))	= coalesce(cd_pessoa_fisica_pc,'0')
	and	coalesce(a.nr_seq_escala, coalesce(nr_seq_escala_pc,0))		= coalesce(nr_seq_escala_pc,0)
	and	a.ie_situacao						= 'A'
	and	a.cd_estabelecimento					= cd_estabelecimento_pc
	and (not exists (	SELECT	1
				from	regra_esp_repasse_terc x
				where	x.nr_seq_regra_esp	= a.nr_sequencia)
		or	exists (	select	1
				from	regra_esp_repasse_terc y,
					terceiro x
				where	x.nr_sequencia		= y.nr_seq_terceiro
				and	x.cd_pessoa_fisica	= cd_pessoa_fisica_pc
				and	y.nr_seq_regra_esp	= a.nr_sequencia
				
union

				select	1
				from	regra_esp_repasse_terc w,
					terceiro y,
					terceiro_pessoa_fisica x
				where	x.nr_seq_terceiro	= y.nr_sequencia
				and	y.nr_sequencia		= w.nr_seq_terceiro
				and	x.cd_pessoa_fisica	= cd_pessoa_fisica_pc
				and	w.nr_seq_regra_esp	= a.nr_sequencia))
	order by a.nr_sequencia desc,
		coalesce(a.cd_pessoa_fisica,'0'),
		coalesce(a.nr_seq_escala,0);

BEGIN
ie_restringe_w := obter_param_usuario(1008, 23, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_restringe_w);
ie_inf_campo_auto_w := obter_param_usuario(1008, 20, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_inf_campo_auto_w);
ie_plantao_partic_escala_w := obter_param_usuario(1008, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_plantao_partic_escala_w);

open c_escala;
loop
fetch c_escala into
	nr_seq_escala_diaria_w,
	cd_pessoa_fisica_w,
	dt_inicio_w,
	dt_fim_w,
	ds_observacao_w,
	nr_seq_escala_w;
EXIT WHEN NOT FOUND; /* apply on c_escala */
	open c_medico;
	loop
	fetch c_medico into
		cd_pessoa_fisica_w;
	EXIT WHEN NOT FOUND; /* apply on c_medico */
		begin
		select	nextval('medico_plantao_seq')
		into STRICT	nr_sequencia_w
		;

		if (coalesce(ie_inf_campo_auto_w,'N') = 'S') then
			begin

			for	r_c_regra_esp in c_regra_esp(cd_pessoa_fisica_w, nr_seq_escala_w, cd_estabelecimento_p) loop
				nr_seq_regra_esp_w	:= r_c_regra_esp.nr_sequencia;
			end loop;

			if (coalesce(nr_seq_regra_esp_w,0) <> 0) then
				begin
				select	coalesce(nr_seq_tipo_plantao,null)
				into STRICT	nr_seq_tipo_plantao_w
				from	regra_esp_repasse
				where	nr_sequencia	= nr_seq_regra_esp_w;
				end;
			end if;

			select	coalesce(max(cd_especialidade),null)
			into STRICT	cd_especialidade_w
			from	medico_especialidade
			where	dt_atualizacao	= (	SELECT   min(me.dt_atualizacao)
										from     medico_especialidade me
										join     especialidade_medica e ON (me.cd_especialidade = e.cd_especialidade)
										where    me.cd_pessoa_fisica = cd_pessoa_fisica_w
			and      e.ie_situacao = 'A')
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w;

			end;
		end if;

		insert into medico_plantao(	nr_sequencia,
				cd_estabelecimento,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				cd_medico,
				dt_inicial_prev,
				dt_final_prev,
				qt_minuto,
				ds_observacao,
				dt_chamado,
				nr_seq_escala_diaria,
				nr_seq_regra_esp,
				nr_seq_tipo_plantao,
				cd_especialidade)
		values	(	nr_sequencia_w,
				cd_estabelecimento_p,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				cd_pessoa_fisica_w,
				dt_inicio_w,
				dt_fim_w,
				(dt_fim_w - dt_inicio_w)*1440,
				ds_observacao_w,
				dt_inicio_w,
				nr_seq_escala_diaria_w,
				nr_seq_regra_esp_w,
				nr_seq_tipo_plantao_w,
				cd_especialidade_w);
		end;
	end loop;
	close c_medico;
end loop;
close c_escala;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_plantoes_escala ( dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_escala_p text) FROM PUBLIC;

