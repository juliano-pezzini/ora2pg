-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_inserir_lab_prescr ( nr_prescricao_p bigint, nr_seq_ageint_p bigint, cd_setor_atendimento_p bigint, nr_seq_ageint_ex_lab_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

			 
nr_seq_proc_interno_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_exame_w			bigint;
dt_prevista_w			timestamp;
nr_seq_ageint_exame_lab_w		bigint;

nr_sequencia_w			bigint;
nr_seq_interno_w			bigint;
cd_setor_proc_interno_w		bigint;
cd_setor_proc_w			bigint;
dt_resultado_w			timestamp;
ie_tipo_atendimento_w		smallint;
ie_situacao_w			varchar(1);
cd_material_exame_w		varchar(20);

ie_urgencia_w			varchar(10);
ie_atualizar_recoleta_w 		varchar(255);
qt_dia_entrega_w			numeric(20);
qt_min_entrega_w			bigint;
ie_amostra_w			varchar(1);
cd_setor_atendimento_w		bigint;
ds_hora_fixa_w			varchar(255);
ie_data_resultado_w		varchar(255);
cd_setor_atend_w			varchar(255);
cd_setor_coleta_w			varchar(255);
cd_setor_entrega_w		varchar(255):= null;
ie_emite_mapa_w			varchar(255);
ie_dia_semana_final_w 		bigint;
nr_atendimento_w			bigint;
cd_setor_prescr_w			integer;
ie_atualizar_result_w		varchar(1);
ie_atualizar_entrega_w		varchar(1);
ie_medico_executor_w		varchar(1);
cd_cgc_w			varchar(14);
cd_medico_executor_w		varchar(10);
cd_setor_atend_usuario_w		integer;
cd_pessoa_fisica_w		varchar(10);
ie_autorizacao_w			varchar(3);
ds_erro_w			bigint;
nr_seq_autor_w			bigint;
cd_setor_prescricao_w		integer;
ie_urgente_w			varchar(1);
cd_medico_w			varchar(10);
cd_setor_atend_prescr_medica_w	bigint;
qt_min_atraso_w			bigint;

cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_plano_w			varchar(10);
ds_erro_conv_w			varchar(255);
cd_paciente_w			varchar(10);
ie_regra_w			smallint;
nr_seq_regra_w			bigint;
ie_forma_atual_dt_result_w	exame_lab_regra_setor.ie_atul_data_result%type;
ie_glosa_w			regra_ajuste_proc.ie_glosa%type;
nr_seq_regra_preco_w		regra_ajuste_proc.nr_sequencia%type;		

BEGIN 
 
select	cd_procedimento, 
	ie_origem_proced, 
	nr_seq_proc_interno, 
	nr_seq_exame, 
	ie_autorizacao 
into STRICT	cd_procedimento_w, 
	ie_origem_proced_w, 
	nr_seq_proc_interno_w, 
	nr_seq_exame_w, 
	ie_autorizacao_w	 
from	ageint_exame_lab 
where	nr_sequencia = nr_seq_ageint_ex_lab_p 
and	nr_seq_ageint = nr_seq_ageint_p 
and	(dt_prevista IS NOT NULL AND dt_prevista::text <> '') 
and	coalesce(dt_cancelamento::text, '') = '';
 
ie_atualizar_result_w := obter_param_usuario(916, 931, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualizar_result_w);
ie_atualizar_entrega_w := obter_param_usuario(916, 932, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualizar_entrega_w);
 
select	max(nr_atendimento), 
	max(cd_setor_entrega), 
	max(cd_setor_atendimento), 
	max(cd_medico), 
	max(cd_setor_atendimento), 
	max(dt_prescricao) 
into STRICT	nr_atendimento_w, 
	cd_setor_prescr_w, 
	cd_setor_prescricao_w, 
	cd_medico_w, 
	cd_setor_atend_prescr_medica_w, 
	dt_prevista_w 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_p;
 
select	max(ie_tipo_atendimento), 
	max(cd_pessoa_fisica) 
into STRICT	ie_tipo_atendimento_w, 
	cd_paciente_w 
from	atendimento_paciente 
where	nr_atendimento = nr_atendimento_w;
 
nr_seq_ageint_exame_lab_w := nr_seq_ageint_ex_lab_p;
 
if (nr_seq_ageint_exame_lab_w IS NOT NULL AND nr_seq_ageint_exame_lab_w::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
  
	update	ageint_exame_lab 
	set	nr_prescricao = nr_prescricao_p 
	where	nr_sequencia = nr_seq_ageint_exame_lab_w;	
  
end if;
	 
if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
	select coalesce(max(cd_material_exame),'') 
	into STRICT	cd_material_exame_w 
	from (		SELECT 	b.cd_material_exame 
			from	material_exame_lab b, 
				exame_lab_material a 
			where 	a.nr_seq_material	= b.nr_sequencia 
			and 	a.nr_seq_exame	= nr_seq_exame_w 
			and 	a.ie_situacao	= 'A' 
			and 	lab_obter_se_mat_lib_conv(a.nr_seq_exame,b.nr_sequencia,cd_estabelecimento_p) = 'S' 
			order by 	a.ie_prioridade) alias4 LIMIT 1;
end if;
	 
select	max(cd_setor_exclusivo) 
into STRICT	cd_setor_atendimento_w 
from	procedimento 
where	cd_procedimento	= cd_procedimento_w 
and	ie_origem_proced	= ie_origem_proced_w;
	 
If (ie_atualizar_entrega_w = 'S') then 
	cd_setor_atendimento_w := cd_setor_prescr_w;
end if;
 
if (coalesce(cd_setor_atendimento_w::text, '') = '') then 
	cd_setor_atendimento_w := obter_setor_atend_proc(	cd_estabelecimento_p, 
								cd_procedimento_w, 
								ie_origem_proced_w, 
								null, 
								null, 
								null, 
								nr_seq_proc_interno_w, 
								nr_atendimento_w);
end if;
 
if (coalesce(cd_setor_atendimento_w::text, '') = '') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
 
	cd_setor_atendimento_w := obter_setor_atend_proc_lab(	cd_estabelecimento_p, 
								cd_procedimento_w, 
								ie_origem_proced_w, 
								null, 
								null, 
								null, 
								nr_seq_exame_w);
end if;
	 
SELECT * FROM consiste_medico_executor(cd_estabelecimento_p, obter_convenio_atendimento(nr_atendimento_w), cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, Obter_Tipo_Atendimento(nr_atendimento_w), nr_seq_exame_w, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, '', coalesce(dt_prevista_w,clock_timestamp()), Obter_Classificacao_Atend(nr_atendimento_w,'C'), 'N', null, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;
	 
select	max(vl_default) 
into STRICT	ie_amostra_w 
from	tabela_atrib_regra 
where	nm_tabela = 'PRESCR_PROCEDIMENTO' 
and	nm_atributo = 'IE_AMOSTRA' 
and	coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p 
and	coalesce(cd_perfil, obter_perfil_ativo) = obter_perfil_ativo 
and	coalesce(nm_usuario_param, nm_usuario_p) = nm_usuario_p;
 
select 	coalesce(max(nr_sequencia),0) + 1 
into STRICT 	nr_sequencia_w 
from 	prescr_procedimento 
where 	nr_prescricao	= nr_prescricao_p;
	 
select	nextval('prescr_procedimento_seq') 
into STRICT	nr_seq_interno_w
;	
 
select	obter_se_proc_urgente(coalesce(cd_setor_atend_prescr_medica_w,0), coalesce(cd_procedimento_w,0), coalesce(ie_origem_proced_w,0), coalesce(nr_seq_proc_interno_w,0), coalesce(nr_seq_exame_w,0), coalesce(ie_tipo_atendimento_w,0), 'N', obter_perfil_ativo, coalesce(cd_medico_w,0)) 
into STRICT	ie_urgente_w
;
	 
	 
cd_convenio_w	:= obter_convenio_atendimento(nr_atendimento_w);	
 
select	max(cd_convenio), 
	max(cd_categoria), 
	max(cd_plano_convenio) 
into STRICT 	cd_convenio_w, 
	cd_categoria_w, 
	cd_plano_w 
from 	Atend_categoria_convenio a 
where 	a.nr_atendimento	= nr_atendimento_w 
and 	a.dt_inicio_vigencia	= (	SELECT 	max(dt_inicio_vigencia) 
				from 	atend_categoria_convenio b 
				where 	nr_atendimento	= nr_atendimento_w);
	 
SELECT * FROM consiste_plano_convenio(nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, clock_timestamp(), 1, ie_tipo_atendimento_w, cd_plano_w, '', ds_erro_conv_w, cd_setor_atendimento_w, nr_seq_exame_w, ie_regra_w, null, nr_seq_regra_w, nr_seq_proc_interno_w, cd_categoria_w, cd_estabelecimento_p, cd_setor_atendimento_w, cd_medico_executor_w, cd_paciente_w, ie_glosa_w, nr_seq_regra_preco_w) INTO STRICT ds_erro_conv_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, nr_seq_regra_preco_w;
			 
if (ie_regra_w in (1,2)) then 
	ie_autorizacao_w := 'B';
elsif (ie_regra_w in (3,6,7)) then 
	ie_autorizacao_w := 'PA';
end if;
	 
insert into Prescr_Procedimento( 
		nr_prescricao, 
		nr_sequencia, 
		cd_procedimento, 
		qt_procedimento, 
		dt_atualizacao, 
		nm_usuario, 
		cd_motivo_baixa, 
		ie_origem_proced, 
		ie_urgencia, 
		cd_setor_atendimento, 
		dt_prev_execucao, 
		ie_suspenso, 
		ie_status_atend, 
		ie_origem_inf, 
		cd_medico_exec, 
		nr_seq_interno, 
		ie_avisar_result, 
		nr_seq_proc_interno, 
		nr_seq_exame, 
		cd_material_exame, 
		cd_setor_coleta, 
		cd_setor_entrega, 
		dt_resultado, 
		nr_seq_ageint_exame_lab, 
		ie_autorizacao) 
	values ( 
		nr_prescricao_p, 
		nr_sequencia_w, 
		cd_procedimento_w, 
		1, 
		clock_timestamp(), 
		nm_usuario_p, 
		0, 
		ie_origem_proced_w, 
		ie_urgente_w, 
		cd_setor_atendimento_w, 
		dt_prevista_w, 
		'N', 
		5, 
		'1', 
		cd_medico_executor_w, 
		nr_seq_interno_w, 
		'N', 
		nr_seq_proc_interno_w, 
		nr_seq_exame_w, 
		cd_material_exame_w, 
		cd_setor_prescr_w, 
		cd_setor_prescr_w, 
		dt_resultado_w, 
		nr_seq_ageint_exame_lab_w, 
		ie_autorizacao_w);
			 
if (ie_atualizar_result_w = 'S') then 
	begin 
		dt_resultado_w := Obter_data_resultado_exame(nr_sequencia_w, nr_prescricao_p);
	exception 
		when 	no_data_found then 
			dt_resultado_w := null;
	end;
	 
	if (dt_resultado_w IS NOT NULL AND dt_resultado_w::text <> '') then 
		update	prescr_procedimento 
		set	dt_resultado = dt_resultado_w 
		where	nr_prescricao = nr_prescricao_p 
		and	nr_sequencia = nr_sequencia_w;
	end if;		
End if;
	 
cd_setor_coleta_w := null;
cd_setor_entrega_w := null;
cd_setor_atend_w := null;
 
if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
 
	cd_setor_atend_usuario_w := cd_setor_prescr_w;
 
	SELECT * FROM obter_setor_exame_lab(	nr_prescricao_p, nr_seq_exame_w, cd_setor_atend_usuario_w, cd_material_exame_w, null, 'S', cd_setor_atend_w, cd_setor_coleta_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, 'N', ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w) INTO STRICT cd_setor_atend_w, cd_setor_coleta_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w;
	 
	if (cd_setor_coleta_w IS NOT NULL AND cd_setor_coleta_w::text <> '') or (cd_setor_entrega_w IS NOT NULL AND cd_setor_entrega_w::text <> '') or (cd_setor_atend_w IS NOT NULL AND cd_setor_atend_w::text <> '') then 
		update	prescr_procedimento 
		set	cd_setor_coleta = coalesce((replace(replace(cd_setor_coleta_w,'(',''), ')',''))::numeric , cd_setor_coleta), 
			cd_setor_entrega = coalesce((replace(replace(cd_setor_entrega_w,'(',''), ')',''))::numeric , cd_setor_entrega) 
		where	nr_prescricao = nr_prescricao_p 
		and	nr_sequencia = nr_sequencia_w;
	end if;
end if;
	 
if (coalesce(nr_seq_ageint_exame_lab_w,0) > 0) and (nr_atendimento_w > 0) then 
	begin 
	 
	select	max(nr_sequencia_autor) 
	into STRICT	nr_seq_autor_w 
	from	procedimento_autorizado 
	where	nr_seq_ageint_exame_lab = nr_seq_ageint_exame_lab_w;
	 
	update	autorizacao_convenio 
	set	nr_atendimento = nr_atendimento_w, 
		dt_atualizacao = clock_timestamp(), 
		nm_usuario   = nm_usuario_p 
	where	coalesce(nr_atendimento::text, '') = '' 
	and	nr_sequencia  = nr_seq_autor_w;
	 
	end;
end if;
 
ds_erro_w := Consistir_Prescr_Procedimento(nr_prescricao_p, nr_sequencia_w, nm_usuario_p, obter_perfil_ativo, ds_erro_w);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_inserir_lab_prescr ( nr_prescricao_p bigint, nr_seq_ageint_p bigint, cd_setor_atendimento_p bigint, nr_seq_ageint_ex_lab_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

