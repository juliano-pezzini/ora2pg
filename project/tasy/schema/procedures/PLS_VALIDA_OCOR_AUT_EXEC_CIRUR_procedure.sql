-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_exec_cirur (nr_seq_ocor_combinada_p pls_ocor_aut_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_motivo_glosa_p tiss_motivo_glosa.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, ie_utiliza_filtro_p pls_ocor_aut_combinada.ie_utiliza_filtro%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:Validar as regras de check in na execucao cirurgica de guias
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_gerar_ocorrencia_w		varchar(2);
ie_gerar_ocor_exec_w		varchar(2);
dt_validacao_w			timestamp;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;	
ie_tipo_ocorrencia_w		varchar(2);
ie_regra_w			varchar(2);	
nr_seq_oc_benef_w		pls_ocorrencia_benef.nr_sequencia%type;	
ie_gerou_ocor_cabecalho_w	varchar(2);
cd_medico_solic_w		pls_requisicao.cd_medico_solicitante%type;
qt_check_in_w			integer;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;	

cRegra CURSOR FOR
	SELECT	nr_sequencia
	from	pls_valida_aut_exec_cirur
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p
	and	ie_situacao			= 'A'
	and	ie_valida_check_in		= 'S';

C04 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

C05 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

C06 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		cd_medico_executor
	from	pls_execucao_req_item
	where	nr_seq_execucao		= nr_seq_execucao_p
	and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')
	and	(ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '');

C07 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		cd_medico_executor
	from	pls_execucao_req_item
	where	nr_seq_execucao		= nr_seq_execucao_p
	and	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');
BEGIN

for r_cRegra_w in cRegra loop
	begin
		if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
			ie_gerar_ocor_exec_w := 'S';

			select	nr_seq_prestador,
				dt_requisicao,
				cd_medico_solicitante,
				nr_seq_segurado
			into STRICT	nr_seq_prestador_w,
				dt_validacao_w,
				cd_medico_solic_w,
				nr_seq_segurado_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_p;

			select	count(1)
			into STRICT	qt_check_in_w
			from	pls_exec_cirurg_biometria
			where	cd_medico	= cd_medico_solic_w
			and	dt_validacao_w	between dt_check_in and coalesce(dt_check_out, clock_timestamp());	

			if (qt_check_in_w > 0) then
				ie_gerar_ocor_exec_w := 'S';
			else
				ie_gerar_ocor_exec_w := 'N';
			end if;

			for r_C04_w in C04 loop
				begin
					ie_gerar_ocorrencia_w	:= 'S';

					if (ie_utiliza_filtro_p	= 'S') then
						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, r_C04_w.nr_sequencia, null, null, r_C04_w.cd_procedimento, r_C04_w.ie_origem_proced, null, null, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

						if (ie_regra_w	= 'S') then
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then
							ie_gerar_ocorrencia_w	:= 'N';
						end if;
					end if;

					if (ie_gerar_ocorrencia_w	= 'S') then

						ie_gerar_ocorrencia_w	:= ie_gerar_ocor_exec_w;

						if (ie_gerar_ocorrencia_w	= 'S') then
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 9, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);

							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											null, nr_seq_requisicao_p, null,
											null, null, r_C04_w.nr_sequencia,
											null, null, null,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;
				end;
			end loop;

			for r_C05_w in C05 loop
				begin
					ie_gerar_ocorrencia_w	:= 'S';

					if (ie_utiliza_filtro_p	= 'S') then
						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, r_C05_w.nr_sequencia, null, null, null, r_C05_w.nr_seq_material, null, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

						if (ie_regra_w	= 'S') then
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then
							ie_gerar_ocorrencia_w	:= 'N';
						end if;
					end if;

					if (ie_gerar_ocorrencia_w	= 'S') then

						ie_gerar_ocorrencia_w	:= ie_gerar_ocor_exec_w;

						if (ie_gerar_ocorrencia_w	= 'S') then
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 9, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);

							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											null, nr_seq_requisicao_p, null,
											null, r_C05_w.nr_sequencia, null,
											null, null, null,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;
				end;
			end loop;
		elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
			ie_gerar_ocor_exec_w	:= 'S';

			select	nr_seq_prestador,
				nr_seq_requisicao,
				dt_execucao
			into STRICT	nr_seq_prestador_w,
				nr_seq_requisicao_w,
				dt_validacao_w
			from	pls_execucao_requisicao
			where	nr_sequencia	= nr_seq_execucao_p;

			select	nr_seq_segurado
			into STRICT	nr_seq_segurado_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_w;

			for r_C06_w in C06 loop
				begin
					ie_gerar_ocorrencia_w	:= 'S';

					if (ie_utiliza_filtro_p	= 'S') then
						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, r_C06_w.nr_sequencia, r_C06_w.cd_procedimento, r_C06_w.ie_origem_proced, null, null, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

						if (ie_regra_w	= 'S') then
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then
							ie_gerar_ocorrencia_w	:= 'N';
						end if;
					end if;

					if (ie_gerar_ocorrencia_w	= 'S') then

						if (coalesce(r_C06_w.cd_medico_executor::text, '') = '') then
							select	cd_pessoa_fisica
							into STRICT	cd_medico_solic_w
							from	pls_prestador
							where	nr_sequencia	= nr_seq_prestador_w;
						else
							cd_medico_solic_w := r_C06_w.cd_medico_executor;
						end if;

						select	count(1)
						into STRICT	qt_check_in_w
						from	pls_exec_cirurg_biometria
						where	cd_medico	= cd_medico_solic_w
						and	dt_validacao_w	between dt_check_in and coalesce(dt_check_out, clock_timestamp());	

						if (qt_check_in_w > 0) then
							ie_gerar_ocor_exec_w := 'S';
						else
							ie_gerar_ocor_exec_w := 'N';
						end if;

						ie_gerar_ocorrencia_w	:= ie_gerar_ocor_exec_w;

						if (ie_gerar_ocorrencia_w	= 'S') then
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 10, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);

							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											null, null, nr_seq_execucao_p,
											null, null, null,
											null, r_C06_w.nr_sequencia, null,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;
				end;
			end loop;

			for r_C07_w in C07 loop
				begin
					ie_gerar_ocorrencia_w	:= 'S';

					if (ie_utiliza_filtro_p	= 'S') then
						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, r_C07_w.nr_sequencia, null, null, r_C07_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

						if (ie_regra_w	= 'S') then
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then
							ie_gerar_ocorrencia_w	:= 'N';
						end if;
					end if;

					if (ie_gerar_ocorrencia_w	= 'S') then

						if (coalesce(r_C07_w.cd_medico_executor::text, '') = '') then
							select	cd_pessoa_fisica
							into STRICT	cd_medico_solic_w
							from	pls_prestador
							where	nr_sequencia	= nr_seq_prestador_w;
						else
							cd_medico_solic_w := r_C07_w.cd_medico_executor;
						end if;

						select	count(1)
						into STRICT	qt_check_in_w
						from	pls_exec_cirurg_biometria
						where	cd_medico	= cd_medico_solic_w
						and	dt_validacao_w	between dt_check_in and coalesce(dt_check_out, clock_timestamp());	

						if (qt_check_in_w > 0) then
							ie_gerar_ocor_exec_w := 'S';
						else
							ie_gerar_ocor_exec_w := 'N';
						end if;

						ie_gerar_ocorrencia_w	:= ie_gerar_ocor_exec_w;

						if (ie_gerar_ocorrencia_w	= 'S') then
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 11, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);

							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											null, null, nr_seq_execucao_p,
											null, null, null,
											null, null, r_C07_w.nr_sequencia,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;
				end;
			end loop;
		end if;
	end;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_exec_cirur (nr_seq_ocor_combinada_p pls_ocor_aut_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_motivo_glosa_p tiss_motivo_glosa.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, ie_utiliza_filtro_p pls_ocor_aut_combinada.ie_utiliza_filtro%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

