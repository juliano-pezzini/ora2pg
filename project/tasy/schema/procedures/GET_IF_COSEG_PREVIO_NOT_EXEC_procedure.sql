-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_if_coseg_previo_not_exec ( nr_interno_conta_p bigint) AS $body$
DECLARE


ds_return_w 			varchar(1) := 'N';
nm_usuario_w			usuario.nm_usuario%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_estabelecimento_cp_w		estabelecimento.cd_estabelecimento%type;
cd_convenio_cp_w		conta_paciente.cd_convenio_calculo%type;
cd_perfil_w			perfil.cd_perfil%type;
ie_recalcular_w			varchar(1);
ie_regra_convenio_w		varchar(1);
ie_conta_destino_w		varchar(1);
ie_regra_coseguro_mat_w		varchar(1);
ie_regra_coseguro_proc_w	varchar(1);
ie_status_conta_w		smallint;


BEGIN

nm_usuario_w		:= wheb_usuario_pck.get_nm_usuario;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
cd_perfil_w		:= wheb_usuario_pck.get_cd_perfil;

ie_recalcular_w := Obter_Param_Usuario(67, 327, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_recalcular_w);

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_conta_destino_w
from	conta_pac_deducao_conv 
where	nr_seq_conta_orig = nr_interno_conta_p
and	(nr_seq_conta_des IS NOT NULL AND nr_seq_conta_des::text <> '')
and     ie_copago = 'S';

begin
select	cd_estabelecimento,
	coalesce(cd_convenio_calculo,cd_convenio_parametro),
	ie_status_acerto
into STRICT	cd_estabelecimento_cp_w,
	cd_convenio_cp_w,
	ie_status_conta_w
from	conta_paciente
where	nr_interno_conta = nr_interno_conta_p;
exception when no_data_found or too_many_rows then
	cd_estabelecimento_cp_w := null;
	cd_convenio_cp_w := null;
	ie_status_conta_w := null;
end;

select	coalesce(max(ie_recalcular_conta), 'N')
into STRICT	ie_regra_convenio_w
from	convenio_estabelecimento
where	cd_convenio = cd_convenio_cp_w
and	cd_estabelecimento = cd_estabelecimento_cp_w;

select	case count(a.nr_sequencia)
		when 0 then 'N'
		else 'S'
	end
into STRICT	ie_regra_coseguro_mat_w
from	material_atend_paciente a
join	copayment_rules b on b.cd_convenio = a.cd_convenio
join	estrutura_material_v c on c.cd_material = a.cd_material
join	conta_paciente d on d.nr_interno_conta = a.nr_interno_conta
where	a.nr_interno_conta = nr_interno_conta_p
and	b.cd_estabelecimento = d.cd_estabelecimento
and	b.ie_situacao = 'A'
and	clock_timestamp() > PKG_DATE_UTILS.get_Time(b.dt_inicio_vigencia, 0)
and	((coalesce(b.dt_final_vigencia::text, '') = '') or (PKG_DATE_UTILS.get_Time(coalesce(b.dt_final_vigencia,clock_timestamp()) ,0) + 86399/86400 > clock_timestamp()))
and	((coalesce(b.cd_material::text, '') = '') or (b.cd_material = a.cd_material))
and	((coalesce(b.cd_categoria::text, '') = '') or (b.cd_categoria = a.cd_categoria))
and	((coalesce(b.cd_grupo_material::text, '') = '') or (b.cd_grupo_material = c.cd_grupo_material))
and	((coalesce(b.cd_subgrupo_material::text, '') = '') or (b.cd_subgrupo_material = c.cd_subgrupo_material))
and	((coalesce(b.cd_classe_material::text, '') = '') or (b.cd_classe_material = c.cd_classe_material))
and	((coalesce(b.nr_seq_familia::text, '') = '') or (b.nr_seq_familia = c.nr_seq_familia))
and ((b.cd_material IS NOT NULL AND b.cd_material::text <> '') OR (b.nr_seq_familia IS NOT NULL AND b.nr_seq_familia::text <> '') OR (b.cd_grupo_material IS NOT NULL AND b.cd_grupo_material::text <> '') OR (b.cd_subgrupo_material IS NOT NULL AND b.cd_subgrupo_material::text <> '') OR (b.cd_classe_material IS NOT NULL AND b.cd_classe_material::text <> ''));

select	case count(a.nr_sequencia)
		when 0 then 'N'
		else 'S'
	end
into STRICT	ie_regra_coseguro_proc_w
from	procedimento_paciente a
join	copayment_rules b on b.cd_convenio = a.cd_convenio
join	estrutura_procedimento_v c on c.cd_procedimento = a.cd_procedimento
join	conta_paciente d on d.nr_interno_conta = a.nr_interno_conta
where	a.nr_interno_conta = nr_interno_conta_p
and	c.ie_origem_proced = a.ie_origem_proced
and	b.cd_estabelecimento = d.cd_estabelecimento
and	b.ie_situacao = 'A'
and	clock_timestamp() > PKG_DATE_UTILS.get_Time(b.dt_inicio_vigencia, 0)
and	((coalesce(b.dt_final_vigencia::text, '') = '') or (PKG_DATE_UTILS.get_Time(coalesce(b.dt_final_vigencia,clock_timestamp()) ,0) + 86399/86400 > clock_timestamp()))
and	((coalesce(b.cd_procedimento::text, '') = '') or (b.cd_procedimento = a.cd_procedimento))
and	((coalesce(b.nr_seq_proc_interno::text, '') = '') or (b.nr_seq_proc_interno = a.nr_seq_proc_interno))
and	((coalesce(b.cd_especialidade::text, '') = '') or (b.cd_especialidade = a.cd_especialidade))
and	((coalesce(b.cd_categoria::text, '') = '') or (b.cd_categoria = a.cd_categoria))
and	((coalesce(b.cd_area_procedimento::text, '') = '') or (b.cd_area_procedimento = c.cd_area_procedimento))
and	((coalesce(b.cd_grupo_proc::text, '') = '') or (b.cd_grupo_proc = c.cd_grupo_proc))
and	((coalesce(b.ie_origem_proced::text, '') = '') or (b.ie_origem_proced = c.ie_origem_proced))
and ((b.ie_origem_proced IS NOT NULL AND b.ie_origem_proced::text <> '') OR (b.cd_area_procedimento IS NOT NULL AND b.cd_area_procedimento::text <> '') OR (b.cd_especialidade IS NOT NULL AND b.cd_especialidade::text <> '') OR (b.cd_grupo_proc IS NOT NULL AND b.cd_grupo_proc::text <> '') OR (b.cd_procedimento IS NOT NULL AND b.cd_procedimento::text <> '') OR (b.nr_seq_proc_interno IS NOT NULL AND b.nr_seq_proc_interno::text <> ''));

if (ie_status_conta_w = 1) then
	if ((ie_recalcular_w = 'N' AND ie_conta_destino_w = 'N' AND (ie_regra_coseguro_mat_w = 'S' OR ie_regra_coseguro_proc_w = 'S'))
		OR (ie_recalcular_w = 'R' AND ie_regra_convenio_w = 'N' AND ie_conta_destino_w = 'N' AND (ie_regra_coseguro_mat_w = 'S' OR ie_regra_coseguro_proc_w = 'S'))) then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(1174305);

	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_if_coseg_previo_not_exec ( nr_interno_conta_p bigint) FROM PUBLIC;

