-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_autor_atendimento (( nr_atendimento_p bigint, nr_seq_material_p bigint, nr_seq_proced_p bigint, nr_prescricao_p bigint, nr_seq_mat_prescr_p bigint, nr_seq_proc_prescr_p bigint, nr_seq_regra_p bigint, dt_inicio_vigencia_p timestamp, nm_usuario_p text, nr_seq_agenda_p bigint, nr_seq_proc_interno_p bigint, nr_seq_autor_gerada_p out bigint, ie_nova_autorizacao_p text, nr_seq_agenda_consulta_p bigint, nr_seq_agenda_pac_opme_p bigint, ie_resp_autor_p text, ie_autor_particular_p text, nr_seq_agenda_proc_p bigint, ie_gerar_mat_esp_p text, nr_seq_regra_plano_proc_p bigint, ds_observacao_regra_item_p text, nr_seq_regra_plano_mat_p bigint, nr_seq_proc_orcamento_p text default '', nr_seq_mat_orcamento_p text default '', nr_seq_parametro3_p text default '', nr_seq_gestao_p bigint default null) is cd_convenio_w bigint) AS $body$
DECLARE

        ie_gerar_w       varchar(1) := 'N';
        ie_result_w      bigint;
        dt_autorizacao_z timestamp;

BEGIN
        -- Para o evendo GIR valida as novas regras

        /*Verifica se Existe autorizacao valida */



        /*
              dbms_output.put_line(' ******************************* ie_evento_w = GIR');
              dbms_output.put_line(' --- Parametros ------');
              dbms_output.put_line('   dt_agenda_consulta_w :' || dt_agenda_consulta_w);
              dbms_output.put_line('   cd_pessoa_fisica_w :' || cd_pessoa_fisica_w);
        */
        BEGIN

            SELECT cd_pessoa_fisica
              INTO STRICT cd_pessoa_fisica_w
              FROM agenda_consulta
             WHERE nr_sequencia = nr_seq_agenda_consulta_p;

            SELECT resultado,
                   nr_sequencia_autor,
                   nr_seq_agenda_consulta,
                   dt_autorizacao
              INTO STRICT ie_result_w,
                   nr_sequencia_autor_p,
                   nr_seq_agenda_orig_p,
                   dt_autorizacao_z
              FROM (SELECT CASE
                               WHEN ie_gerar_autor_gir_w = 'Q' THEN (SELECT COUNT(*)
                                   FROM agenda_consulta ac
                                  WHERE ac.nr_seq_agenda_sessao = b.nr_seq_agenda_consulta
                                    AND ac.nr_sequencia <> nr_seq_agenda_consulta_p
                                    AND ac.ie_status_agenda = 'N')
                               WHEN ie_gerar_autor_gir_w = 'S' THEN
                                ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_consulta_w) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_autorizacao) -- Por semana na mesma semana retorna 0
                           --                                  sign(to_number(to_char(dt_agenda_consulta_w, 'IW')) - to_number(to_char(b.dt_autorizacao, 'IW')))
                               WHEN ie_gerar_autor_gir_w = 'D' THEN
                                ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_consulta_w) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_autorizacao)
                               WHEN ie_gerar_autor_gir_w = 'P' THEN
                                ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_consulta_w) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_autorizacao)
                               ELSE
                                999
                           END AS resultado,
                           b.nr_sequencia nr_sequencia_autor,
                           b.nr_seq_agenda_consulta,
                           b.dt_autorizacao
                      FROM autorizacao_convenio b
                     WHERE b.cd_pessoa_fisica = cd_pessoa_fisica_w
                       AND ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_autorizacao) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_consulta_w)
                       AND (b.nr_seq_agenda_consulta IS NOT NULL AND b.nr_seq_agenda_consulta::text <> '')
                     ORDER BY b.dt_atualizacao DESC) alias11 LIMIT 1;

            -------------
        EXCEPTION
            WHEN no_data_found THEN
                -- dbms_output.put_line(' **** Nao Achou *****');
                ie_gerar_w           := 'S';
                ie_result_w          := NULL;
                nr_sequencia_autor_p := NULL;
                nr_seq_agenda_orig_p := nr_seq_agenda_consulta_p;
        END;

        /*
        dbms_output.put_line(' -------- RESULTADO ----------------');
         dbms_output.put_line('    nr_sequencia_autor_p:' || nr_sequencia_autor_p);
         dbms_output.put_line('    nr_seq_agenda_orig_p:' || nr_seq_agenda_orig_p);
         dbms_output.put_line('    dt_autorizacao_z    :' || dt_autorizacao_z);
         dbms_output.put_line('    ie_gerar_autor_gir_w:' || ie_gerar_autor_gir_w);
         dbms_output.put_line('    ie_result_w         :' || ie_result_w);

         dbms_output.put_line('    nr_dias_autor_w     :' || nr_dias_autor_w);
         dbms_output.put_line('    qt_autor_sessao_w   :' || qt_autor_sessao_w);
         */
        IF (ie_gerar_autor_gir_w = 'Q' AND ie_result_w  = qt_autor_sessao_w) OR (ie_gerar_autor_gir_w = 'P' AND ie_result_w >= nr_dias_autor_w) OR (ie_gerar_autor_gir_w = 'S' AND ie_result_w > 6) OR (ie_gerar_autor_gir_w = 'D' AND ie_result_w > 1) OR (ie_gerar_w = 'S') THEN
            -- dbms_output.put_line(' **** GERAR NOVO *****');
            ie_gerar_w := 'S';

        END IF;
        -- dbms_output.put_line(' *******************************');
        RETURN;

    END;

BEGIN
ie_nova_autorizacao_w		:= ie_nova_autorizacao_p;
nr_atendimento_w			:= nr_atendimento_p;
ds_observacao_regra_w		:= ds_observacao_regra_item_p;
nr_seq_autor_gerada_p		:= null;
nr_prescricao_w			:= nr_prescricao_p;

if (coalesce(nr_atendimento_p,0) > 0) then
        begin
        select	max(a.ie_tipo_atendimento)
        into STRICT	ie_tipo_atendimento_atend_w
        from	atend_categoria_convenio b,
        	atendimento_paciente a
        where	a.nr_atendimento		= b.nr_atendimento
        and	b.nr_seq_interno		= obter_atecaco_atendimento(a.nr_atendimento)
        and	a.nr_atendimento		= nr_atendimento_p;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182266,'NR_ATENDIMENTO='||nr_atendimento_p);
	end;

    elsif (coalesce(nr_seq_agenda_p,0) > 0) and (coalesce(nr_seq_agenda_proc_p,0) = 0) then

        select	a.ie_tipo_atendimento
        into STRICT	ie_tipo_atendimento_atend_w
        from	agenda b,
        	agenda_paciente a
        where	a.nr_sequencia		= nr_seq_agenda_p
        and	a.cd_agenda		= b.cd_agenda;

    elsif (coalesce(nr_seq_agenda_consulta_p,0) > 0) then

        select	a.ie_tipo_atendimento
        into STRICT	ie_tipo_atendimento_atend_w
        from	agenda b,
        	agenda_consulta a
        where	a.cd_agenda	= b.cd_agenda
        and	a.nr_sequencia	= nr_seq_agenda_consulta_p;

    elsif (coalesce(nr_seq_agenda_proc_p,0) > 0) then

        if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
        	select	b.ie_tipo_atendimento
        	into STRICT	ie_tipo_atendimento_atend_w
        	from	agenda c,
        		agenda_paciente b,
        		agenda_paciente_proc a
        	where	b.cd_agenda	= c.cd_agenda
        	and	a.nr_sequencia	= b.nr_sequencia
        	and	a.nr_sequencia	= nr_seq_agenda_p
        	and	a.nr_seq_agenda	= nr_seq_agenda_proc_p;

   end if;
end if;


select	ie_tipo_autorizacao,
	cd_convenio,
	cd_categoria,
	cd_plano,
	cd_setor_atendimento,
	cd_tipo_acomodacao,
	cd_estabelecimento,
	cd_proc_internacao,
	nr_seq_proc_interno_int,
	ie_origem_proc_int,
	nr_seq_estagio,
	qt_dias_prazo,
	ie_evento,
	coalesce(ie_proc_diaria_acomod,'N'),
	coalesce(ie_equip_agenda,'N'),
	coalesce(ie_gerar_proc_princ_agenda,'N'),
	coalesce(ie_tipo_acomod_atual,'N'),
	coalesce(ie_carater_int_tiss_regra,'N'),
	nr_seq_classif,
	coalesce(qt_dias_geracao_vigencia,0),
	coalesce(ie_autor_exame_adic_integ,'N'),
	coalesce(ie_gerar_observacao,'C'),
	coalesce(ie_gerar_indic_clinica, 'I'),
	coalesce(qt_sessao_agenda, 'N'),
	cd_procedimento,
	ie_origem_proced,
	coalesce(ie_agrupa_tipo_proc,'N'),
	coalesce(ie_agrup_medico_dia, 'N'),
	ie_gerar_autor_gir,
	qt_autor_sessao,
	nr_dias_autor
INTO STRICT 	ie_tipo_autorizacao_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w,
	cd_setor_atendimento_w,
	cd_tipo_acomodacao_w,
	cd_estabelecimento_w,
	cd_proc_internacao_w,
	nr_seq_proc_interno_int_w,
	ie_origem_proc_int_w,
	nr_seq_estagio_regra_w,
	qt_dias_prazo_w,
	ie_evento_w,
	ie_proc_diaria_acomod_w,
	ie_equip_agenda_w,
	ie_gerar_proc_princ_agenda_w,
	ie_tipo_acomod_atual_w,
	ie_carater_int_tiss_regra_w,
	nr_seq_classif_regra_w,
	qt_dias_geracao_vigencia_w,
	ie_autor_exame_adic_integ_w,
	ie_gerar_observacao_w,
	ie_gerar_indic_clinica_w,
	qt_sessao_agenda_w,
	cd_proc_regra_consulta_w,
	ie_origem_regra_consulta_w,
	ie_agrupa_tipo_proc_w,
	ie_agrup_medico_dia_w,
	ie_gerar_autor_gir_w,
	qt_autor_sessao_w,
	nr_dias_autor_w
FROM regra_gerar_autorizacao
WHERE nr_sequencia = nr_seq_regra_p;

    IF ((coalesce(nr_seq_gestao_p, 0) > 0) AND (coalesce(nr_atendimento_p, 0) > 0) AND (ie_evento_w = 'GVE')) THEN

        select count(*) into STRICT count_aut_w
          from autorizacao_convenio a
         where a.nr_atendimento = nr_atendimento_p;

        if count_aut_w > 0 then
           nr_atendimento_w := NULL;
        end if;

    END IF;

    IF (qt_sessao_agenda_w = 'N') THEN
	ie_autor_ind_sessao_w := obter_param_usuario(866, 302, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_autor_ind_sessao_w);
end if;

if (coalesce(nr_seq_proc_interno_int_w,0) > 0 ) then

 SELECT * FROM Obter_Proc_Tab_Interno_Conv(	nr_seq_proc_interno_int_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, cd_setor_atendimento_w, cd_proc_internacao_w, ie_origem_proc_int_w, null, clock_timestamp(), cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_proc_internacao_w, ie_origem_proc_int_w;
end if;


if (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then
	select	coalesce(max(ie_gerar_saldo_itens_autor),'N'),
		coalesce(max(ie_conv_autor_exec),'N'),
		coalesce(max(ie_cons_qt_proc_autor_cir),'N'),
		coalesce(max(ie_gerar_autor_guia_prescr),'N'),
		coalesce(max(ie_gerar_vl_cotado_opme_autor),'N'),
		coalesce(max(ie_regra_acresc_mat_autor),'N'),
		coalesce(max(ie_autor_mat_prescr_agrup),'N')
	into STRICT	ie_gerar_saldo_itens_autor_w,
		ie_conv_autor_exec_w,
		ie_cons_qtd_proc_autor_w,
		ie_gerar_autor_guia_prescr_w,
		ie_gerar_vl_cotado_opme_w,
		ie_regra_acresc_mat_autor_w,
		ie_autor_mat_prescr_agrup_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;
end if;

select	coalesce(max(cd_empresa),0)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_w;

if (coalesce(cd_empresa_w::text, '') = '') then
	select	coalesce(max(cd_empresa),0)
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
end if;

/*lhalves OS 271551 em 24/01/2011*/

if (ie_conv_autor_exec_w = 'S') and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') then
	select	coalesce(max(cd_convenio),cd_convenio_w),
		coalesce(max(cd_categoria),cd_categoria_w),
                  coalesce(max(ie_carater_cirurgia), ie_carater_cirurgia_w)
	into STRICT	cd_convenio_w,
		cd_categoria_w,
                  ie_carater_cirurgia_w
	from 	procedimento_paciente
	where	nr_sequencia		= nr_seq_proced_p
	and	nr_atendimento		= nr_atendimento_p;
end if;

cd_tipo_acomod_regra_w		:= cd_tipo_acomodacao_w;
ie_obter_preco_mat_autor_w		:= coalesce(obter_valor_conv_estab(cd_convenio_w,cd_estabelecimento_w,'IE_OBTER_PRECO_MAT_AUTOR'),'N');
ie_obter_fornec_mat_autor_w	:= coalesce(obter_valor_conv_estab(cd_convenio_w,cd_estabelecimento_w,'IE_OBTER_FORNEC_MAT_AUTOR'),'N');

/*Obter cobertura especial do TISS (Tabela 75) da regra plano aplicada para o item - OS 2705349 Adequacao TISS 4.00.00 */

begin
select
    ie_tiss_cobertura_especial
into STRICT 
    ie_cobertura_especial_tiss_w
from 	
    regra_convenio_plano
where	
    nr_sequencia = nr_seq_regra_plano_proc_p;
exception
when no_data_found then
	ie_cobertura_especial_tiss_w := null;
end;

/*Obter a qt. mim e max da regra plano aplicada para o item*/

select	coalesce(max(qt_minimo),0),
	coalesce(max(qt_maximo),999),
	coalesce(max(ie_qt_total_autor),'N'),
	max(nr_seq_classif),
	coalesce(max(ie_somente_item),'N'),
	max(ie_exige_just_medica),
	max(nr_seq_estagio),
	max(ie_tiss_tipo_etapa_autor),
    coalesce(max(qt_bonus), 0)
into STRICT 	qt_min_regra_w,
	qt_max_regra_w,
	ie_somar_todos_w,
	nr_seq_classif_autor_w,
	ie_somente_item_w,
	ie_exige_just_medica_plano_w,
	nr_seq_estagio_plano_w,
	ie_tipo_etapa_autor_proc_w,
    qt_bonus_w
from 	regra_convenio_plano
where	nr_sequencia = nr_seq_regra_plano_proc_p;

select	coalesce(max(ie_autor_generico),'N'),
	coalesce(max(ie_atual_qt_solic_autor),'N'),
	coalesce(max(ie_vl_conta_autor),'N'),
	coalesce(max(ie_autor_mat_conta),'N'),
	coalesce(max(ie_consid_proc_bilat_autor),'N'),
	coalesce(max(ie_nova_autor_item_fim_vig),'N'),
	coalesce(max(ie_qt_mat_autor),'N')
into STRICT	ie_autor_generico_w,
	ie_atual_qt_solic_autor_w,
	ie_valor_conta_w,
	ie_autor_mat_conta_w,
	ie_consid_proc_bilat_autor_w,
	ie_nova_autor_item_fim_vig_w,
	ie_qt_mat_autor_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento	= cd_estabelecimento_w;

if (nr_seq_estagio_plano_w IS NOT NULL AND nr_seq_estagio_plano_w::text <> '') then
	nr_seq_estagio_w	:= nr_seq_estagio_plano_w;
	nr_seq_estagio_lido_w	:= nr_seq_estagio_plano_w;
elsif (nr_seq_estagio_regra_w IS NOT NULL AND nr_seq_estagio_regra_w::text <> '') then
	nr_seq_estagio_w	:= nr_seq_estagio_regra_w;
	nr_seq_estagio_lido_w	:= nr_seq_estagio_regra_w;
else
	begin
	select	min(nr_sequencia)
	into STRICT	nr_seq_estagio_w
	from	estagio_autorizacao
	where	ie_situacao	= 'A'
	and	ie_interno	= '1'
	and	coalesce(cd_empresa,cd_empresa_w) = cd_empresa_w;
	exception
	when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182274);
	end;

end if;

if (coalesce(nr_seq_regra_plano_mat_p,0) <> 0) then
begin

	select	max(nr_seq_classif),
		coalesce(max(ie_regra_quantidade_solic),'N'),
		max(ie_tiss_tipo_anexo),
		coalesce(max(ie_final_vig_dose_dia_prescr),'N'),
		max(ie_exige_just_medica),
		max(ie_tiss_tipo_etapa_autor)
	into STRICT	nr_seq_classif_autor_w,
		ie_regra_quantidade_solic_w,
		ie_tiss_tipo_anexo_w,
		ie_final_vig_dose_dia_prescr_w,
		ie_exige_just_medica_plano_w,
		ie_tipo_etapa_autor_mat_w
	from	regra_convenio_plano_mat
	where	nr_sequencia = nr_seq_regra_plano_mat_p;

end;
end if;



select	coalesce(ie_exige_just_medica,'N') --francisco - os 41975 - 18/10/06 quando exige justificativa ja altera estagio
into STRICT	ie_exige_just_medica_w
from	regra_gerar_autorizacao
where	nr_sequencia	= nr_seq_regra_p;

if (ie_exige_just_medica_plano_w IS NOT NULL AND ie_exige_just_medica_plano_w::text <> '') then
	ie_exige_just_medica_w := ie_exige_just_medica_plano_w;
end if;

if (ie_exige_just_medica_w = 'S') then --francisco - os 41975 - 18/10/06 quando exige justificativa ja altera estagio
	begin
	select	min(nr_sequencia)
	into STRICT	nr_seq_estagio_w
	from	estagio_autorizacao
	where	ie_situacao = 'A'
	and	ie_interno  = '2'
	and	coalesce(cd_empresa,cd_empresa_w) = cd_empresa_w;
	exception
	when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182271);
	end;
end if;

if (nr_seq_estagio_w IS NOT NULL AND nr_seq_estagio_w::text <> '') then
	select	max(nr_seq_classif)
	into STRICT 	nr_seq_classif_w
	from 	estagio_autorizacao
	where	nr_sequencia	= nr_seq_estagio_w
	and		OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;
end if;


if (coalesce(nr_seq_classif_regra_w,0) > 0 and coalesce(nr_seq_classif_autor_w,0) = 0) then
	nr_seq_classif_autor_w := nr_seq_classif_regra_w;
end if;


if (ie_autor_particular_p = 'S') then
	SELECT * FROM obter_convenio_particular(cd_estabelecimento_w, cd_convenio_partic_w, cd_categoria_partic_w) INTO STRICT cd_convenio_partic_w, cd_categoria_partic_w;
	cd_convenio_w	:= cd_convenio_partic_w;
end if;


if (coalesce(nr_seq_agenda_p,0) > 0) then
	select	cd_medico,
		cd_medico_exec,
		nr_atendimento,
		cd_procedimento,
		ie_origem_proced,
		ie_lado,
		cd_agenda,
		nr_atendimento,
		cd_doenca_cid,
		coalesce(nr_seq_proc_interno_p,nr_seq_proc_interno),
		dt_agenda
	into STRICT	cd_medico_solicitante_w,
		cd_medico_exec_agenda_w,
		nr_atendimento_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_lado_w,
		cd_agenda_w,
		nr_atend_agenda_w,
		cd_cid_doenca_w,
		nr_seq_proc_interno_assoc_w,
		dt_age_integ_item_w
	from	agenda_paciente
	where	nr_sequencia		= nr_seq_agenda_p;

	select	max(cd_estabelecimento),
		max(cd_tipo_agenda)
	into STRICT	cd_estab_paciente_w,
		cd_tipo_agenda_w
	from	agenda
	where	cd_agenda = cd_agenda_w;

	if (ie_tipo_autorizacao_w = '1') then
		select	max(qt_diaria_prev)
		into STRICT 	qt_dia_solicitado_w
		from 	agenda_paciente
		where	nr_sequencia		= nr_seq_agenda_p;
	end if;

	select	max(nr_seq_agenda_int),
		max(cd_doenca_cid)
	into STRICT	nr_seq_agenda_int_w,
		cd_cid_doenca_age_int_w
	from	agenda_integrada_item
	where	nr_seq_agenda_exame	= nr_seq_agenda_p;

	if (nr_seq_agenda_int_w IS NOT NULL AND nr_seq_agenda_int_w::text <> '') then
		select	max(cd_medico_solicitante),
			max(ds_indicacao),
			substr(max(ds_obs_final),1,1999),
			substr(max(ds_observacao),1,1999),
			max(dt_inicio_agendamento)
		into STRICT	cd_medico_solic_ageint_w,
			ds_indicacao_ageint_w,
			ds_obs_final_w,
			ds_observacao_w,
			dt_age_integ_w
		from 	agenda_integrada
		where 	nr_sequencia = nr_seq_agenda_int_w;

		if (ie_gerar_indic_clinica_w <> 'I') then
			ds_indicacao_ageint_w := null;
		end if;

		begin
		select	substr(ds_observacao,1,1999)
		into STRICT	ds_observacao_autor_w
		from	autorizacao_convenio
		where	((ie_utiliza_agfa_w <> 'N') or (ie_agrupa_autor_age_int_w = 'S') or (ie_agrupa_data_age_int_w = 'S'))
		and	nr_sequencia = (SELECT	max(x.nr_sequencia)
					from	autorizacao_convenio x
					where	x.nr_seq_age_integ = nr_seq_agenda_int_w);
		exception
		when others then
			ds_observacao_autor_w := null;
		end;

		if (coalesce(ie_gerar_observacao_w,'N') = 'F') then /* F - Observacao final da agenda integrada*/
				ds_observacao_autor_w	:= ds_obs_final_w;
		elsif (coalesce(ie_gerar_observacao_w,'N') = 'I') then /* I - Observacao da agenda integrada*/
				ds_observacao_autor_w	:= ds_observacao_w;
		elsif (coalesce(ie_gerar_observacao_w,'N') = 'C') and (coalesce(ds_observacao_autor_w::text, '') = '') then /*C - Observacao final da agenda integrada + Cid Doenca*/
				ds_observacao_autor_w	:= wheb_mensagem_pck.get_texto(300456, 'DS_OBS_FINAL_W=' || ds_obs_final_w || ' ;CD_CID=' ||
										cd_cid_doenca_age_int_w || ';DS_CID=' || substr(Obter_Desc_CID_Doenca(cd_cid_doenca_age_int_w), 1, 230));
		end if;
	end if;


	if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
		select  coalesce(max(c.nr_seq_agenda_sessao),0)
		into STRICT    nr_agenda_sessao_presc_w
		from    prescr_medica p, agenda_consulta c
		where   p.nr_prescricao = nr_prescricao_p
		and     c.nr_sequencia = p.nr_seq_agecons;
	end if;

	if (ie_agrupa_tipo_proc_w = 'S') and (coalesce(cd_procedimento_w,0) > 0 ) then
		select 	coalesce(obter_tipo_procedimento(cd_procedimento_w,ie_origem_proced_w,'C'),0)
		into STRICT 	cd_tipo_procedimento_w
		;
	end if;

	if (coalesce(nr_seq_agenda_proc_p,0) > 0) then		
		select	max(a.cd_procedimento),
			max(a.ie_origem_proced),
			coalesce(nr_seq_proc_interno_p, max(a.nr_seq_proc_interno))
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_assoc_w
		from	agenda_paciente_proc a		
		where	a.nr_sequencia	= nr_seq_agenda_proc_p;
	end if;

    	begin
    	select	cd_procedimento,
    		ie_origem_proced
    	into STRICT 	cd_proc_regra_plano_item_w,
    		ie_orgm_proc_regra_plano_i_w
    	from	regra_conv_plano_item
    	where	nr_seq_regra	= nr_seq_regra_plano_proc_p
    	and	coalesce(ie_situacao,'A') = 'A'  LIMIT 1;
	exception
	when no_data_found or too_many_rows then
		cd_proc_regra_plano_item_w := null;
		ie_orgm_proc_regra_plano_i_w := null;	
	end;

	begin
	select	'S'
	into STRICT	ie_autor_agenda_gerada_w
	from	autorizacao_convenio a, estagio_autorizacao b
	where	a.nr_seq_estagio 	= b.nr_sequencia
	and	b.ie_interno <> '70'
	and (a.nr_seq_agenda		= nr_seq_agenda_p
	or    	coalesce(a.nr_seq_agenda_consulta,0) = coalesce(nr_agenda_sessao_presc_w,1))
	and	a.ie_tipo_autorizacao	= ie_tipo_autorizacao_w
	and 	((ie_agrupa_tipo_proc_w = 'N') or (coalesce(a.cd_tipo_procedimento,0) = cd_tipo_procedimento_w))
	and	exists (SELECT	1
			from	procedimento_autorizado x
			where	x.nr_sequencia_autor	= a.nr_sequencia
			and	x.cd_procedimento	= coalesce(cd_proc_regra_plano_item_w, cd_procedimento_w)
			and	x.ie_origem_proced	= coalesce(ie_orgm_proc_regra_plano_i_w, ie_origem_proced_w)
			and	coalesce(x.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_assoc_w,0))	= coalesce(nr_seq_proc_interno_assoc_w,0))	
	and	a.cd_convenio	= cd_convenio_w  LIMIT 1;
	exception
	when no_data_found then
		ie_autor_agenda_gerada_w := 'N';
	end;	

	if (ie_autor_agenda_gerada_w = 'N') and (coalesce(nr_seq_agenda_int_w,0) <> 0) then
		begin

		select	'S'
		into STRICT	ie_autor_agenda_gerada_w
		from	autorizacao_convenio a, estagio_autorizacao b
		where	a.nr_seq_estagio 	= b.nr_sequencia
		and	b.ie_interno <> '70'
		and	a.nr_seq_age_integ	= nr_seq_agenda_int_w
		and	a.ie_tipo_autorizacao	= ie_tipo_autorizacao_w
		and 	((ie_agrupa_tipo_proc_w = 'N') or (coalesce(a.cd_tipo_procedimento,0) = cd_tipo_procedimento_w))
		and 	((ie_agrup_medico_dia_w = 'N') or ((a.cd_medico_exec_agenda = cd_medico_exec_agenda_w) and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_agenda) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_age_integ_item_w))))
		and	exists (SELECT	1
				from	procedimento_autorizado x
				where	x.nr_sequencia_autor	= a.nr_sequencia
                and	x.cd_procedimento	= coalesce(cd_proc_regra_plano_item_w, cd_procedimento_w)
				and	coalesce(x.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_assoc_w,0))	= coalesce(nr_seq_proc_interno_assoc_w,0)
                and	x.ie_origem_proced	= coalesce(ie_orgm_proc_regra_plano_i_w, ie_origem_proced_w)
				and	x.nr_seq_agenda	        = nr_seq_agenda_p
				)
		and	a.cd_convenio	= cd_convenio_w  LIMIT 1;
		exception
		when no_data_found then
			ie_autor_agenda_gerada_w := 'N';
		end;

	end if;
elsif (coalesce(nr_seq_agenda_consulta_p,0) > 0) then
	select	max(nr_seq_agenda_int)
	into STRICT	nr_seq_agenda_int_w
	from	agenda_integrada_item
	where	nr_seq_agenda_cons	= nr_seq_agenda_consulta_p;

	if (nr_seq_agenda_int_w IS NOT NULL AND nr_seq_agenda_int_w::text <> '') then
		select	max(cd_medico_solicitante),
			max(ds_indicacao),
			max(dt_inicio_agendamento)
		into STRICT	cd_medico_solic_ageint_w,
			ds_indicacao_ageint_w,
			dt_age_integ_w
		from 	agenda_integrada
		where 	nr_sequencia = nr_seq_agenda_int_w;

		if (ie_gerar_indic_clinica_w <> 'I') then
			ds_indicacao_ageint_w := null;
		end if;
	end if;

	if (coalesce(nr_seq_agenda_proc_p,0) > 0) then
		begin
		select	cd_procedimento,
			ie_origem_proced,
			coalesce(nr_seq_proc_interno,0)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_int_w
		from	agenda_consulta_proc a
		where	a.nr_seq_agenda	= nr_seq_agenda_consulta_p
		and	a.nr_sequencia	= nr_seq_agenda_proc_p;
		exception
		when others then
			cd_procedimento_w := null;
			ie_origem_proced_w := null;
		end;
	else
		begin
		select	coalesce(cd_procedimento,cd_proc_regra_consulta_w),
			coalesce(ie_origem_proced,ie_origem_regra_consulta_w),
			coalesce(nr_seq_proc_interno,0),
			CASE WHEN ie_autor_ind_sessao_w='N' THEN nr_seq_agenda_sessao  ELSE null END
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_int_w,
			nr_seq_agenda_sessao_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_consulta_p;
		exception
		when others then
			cd_procedimento_w := null;
			ie_origem_proced_w := null;
		end;

	end if;

	if (ie_agrupa_tipo_proc_w = 'S') and (coalesce(cd_procedimento_w,0) > 0 ) then
		select 	coalesce(obter_tipo_procedimento(cd_procedimento_w,ie_origem_proced_w,'C'),0)
		into STRICT 	cd_tipo_procedimento_w
		;
	end if;

	begin
	    select	cd_procedimento,
		ie_origem_proced
	    into STRICT 	cd_proc_regra_plano_item_w,
		ie_orgm_proc_regra_plano_i_w
	    from	regra_conv_plano_item
	    where	nr_seq_regra	= nr_seq_regra_plano_proc_p
	    and	coalesce(ie_situacao,'A') = 'A'  LIMIT 1;
	    exception
	    when no_data_found or too_many_rows then
		cd_proc_regra_plano_item_w := null;
		ie_orgm_proc_regra_plano_i_w := null;
	end;

	begin
	select	'S'
	into STRICT	ie_autor_consulta_gerada_w
	from	autorizacao_convenio a, estagio_autorizacao b
	where	a.nr_seq_estagio 	= b.nr_sequencia
	and (a.nr_seq_agenda_consulta	= nr_seq_agenda_consulta_p
         or    	coalesce(a.nr_seq_agenda_consulta,0) = coalesce(nr_seq_agenda_sessao_w,1))
	and	b.ie_interno <> '70'
	and	a.ie_tipo_autorizacao	= ie_tipo_autorizacao_w
	and 	((ie_agrupa_tipo_proc_w = 'N') or (coalesce(a.cd_tipo_procedimento,0) = cd_tipo_procedimento_w))
	and	exists	(SELECT	1
			from	procedimento_autorizado x
			where	x.nr_sequencia_autor	= a.nr_sequencia
			and	x.cd_procedimento	= coalesce(cd_proc_regra_plano_item_w, cd_procedimento_w)
			and	coalesce(x.nr_seq_proc_interno,nr_seq_proc_int_w) = nr_seq_proc_int_w
			and	x.ie_origem_proced	= coalesce(ie_orgm_proc_regra_plano_i_w, ie_origem_proced_w)
			and	((x.nr_seq_agenda_consulta	= nr_seq_agenda_consulta_p) or
				coalesce(x.nr_seq_agenda_consulta,0) = coalesce(nr_seq_agenda_sessao_w,1))
			and	coalesce(x.nr_seq_agenda_proc,coalesce(nr_seq_agenda_proc_p,0)) = coalesce(nr_seq_agenda_proc_p,0))
	and	a.cd_convenio	= cd_convenio_w  LIMIT 1;
	exception
	when others then
		ie_autor_consulta_gerada_w := 'N';
	end;

	if (ie_autor_consulta_gerada_w = 'N') and (coalesce(nr_seq_agenda_int_w,0) <> 0) then
		begin
		select	'S'
		into STRICT	ie_autor_consulta_gerada_w
		from	autorizacao_convenio a, estagio_autorizacao b
		where	a.nr_seq_estagio 	= b.nr_sequencia
		and	a.nr_seq_age_integ	= nr_seq_agenda_int_w
		and	b.ie_interno <> '70'
		and	a.ie_tipo_autorizacao	= ie_tipo_autorizacao_w
		and 	((ie_agrupa_tipo_proc_w = 'N') or (coalesce(a.cd_tipo_procedimento,0) = cd_tipo_procedimento_w))
		and	exists (SELECT	1
				from	procedimento_autorizado x
				where	x.nr_sequencia_autor	= a.nr_sequencia
				and	x.cd_procedimento	= coalesce(cd_proc_regra_plano_item_w, cd_procedimento_w)
				and	coalesce(x.nr_seq_proc_interno,nr_seq_proc_int_w) = nr_seq_proc_int_w
				and	x.ie_origem_proced	= coalesce(ie_orgm_proc_regra_plano_i_w, ie_origem_proced_w)
				and	x.nr_seq_agenda_consulta = nr_seq_agenda_consulta_p)
		and	a.cd_convenio	= cd_convenio_w  LIMIT 1;
		exception
		when others then
			ie_autor_consulta_gerada_w := 'N';
		end;
	end if;

	select	coalesce(coalesce(cd_medico_solic,cd_medico),cd_medico_req),
		cd_agenda,
		cd_pessoa_fisica,
		substr(ds_observacao,1,2000)
	into STRICT	cd_medico_solicitante_w,
		cd_agenda_w,
		cd_pessoa_fisica_w,
		obs_ag_consulta_w
	from	agenda_consulta
	where	nr_sequencia		= nr_seq_agenda_consulta_p;

	select	max(cd_pessoa_fisica),
		max(cd_estabelecimento)
	into STRICT	cd_medico_agenda_w,
		cd_estab_paciente_w
	from	agenda
	where	cd_agenda	= cd_agenda_w;

	select max(cd_pessoa_fisica)
    	into STRICT    ie_existe_medic_agenda_w
    	from	medico
	where	cd_pessoa_fisica = cd_medico_agenda_w;

	if (cd_medico_agenda_w IS NOT NULL AND cd_medico_agenda_w::text <> '' AND ie_existe_medic_agenda_w IS NOT NULL AND ie_existe_medic_agenda_w::text <> '') then
		cd_medico_solicitante_w	:= cd_medico_agenda_w;
	end if;
end if;

if (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') then

	select	max(cd_procedimento),
		max(ie_origem_proced),
		max(qt_procedimento),
		max(cd_setor_atendimento),
		max(dt_procedimento),
		max(ie_lado),
		max(nr_seq_proc_interno)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		cd_setor_atendimento_w,
		dt_vigencia_item_w,
		ie_lado_w,
		nr_seq_proc_int_princ_w
	from	procedimento_paciente
	where	nr_sequencia	= nr_seq_proced_p;
elsif (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_proc_prescr_p IS NOT NULL AND nr_seq_proc_prescr_p::text <> '') then

	select	max(cd_procedimento),
		max(ie_origem_proced),
		max(qt_procedimento),
		max(cd_setor_atendimento),
		max(dt_prev_execucao),
		substr(max(ds_observacao),1,2000),
		max(ie_lado),
		max(nr_seq_exame),
		max(cd_procedimento) || '-' || max(ds_resumo_clinico),
        	max(cd_setor_atendimento)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		cd_setor_atendimento_w,
		dt_vigencia_item_w,
		ds_observacao_proc_w,
		ie_lado_w,
		nr_seq_exame_w,
		ds_resumo_clinico_w,
        	nr_seq_setor_proc_prescr_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_proc_prescr_p;

elsif (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then

	select	max(cd_procedimento),
		max(ie_origem_proced),
		1,
		max(cd_procedimento),
		max(ie_origem_proced),
		max(nr_doc_convenio),
		substr(max(ds_observacao),1,2000),
		max(dt_agenda),
		max(ie_lado)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		cd_procedimento_principal_w,
		ie_origem_proc_princ_w,
		nr_doc_convenio_w,
		ds_observacao_proc_w,
		dt_vigencia_item_w,
		ie_lado_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_p;

	dt_agenda_w := dt_vigencia_item_w;
elsif (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') then
	select	max(cd_procedimento),
		max(ie_origem_proced),
		coalesce(max(qt_procedimento),1),
		max(dt_agenda),
		max(qt_total_secao),
		max(coalesce(nr_seq_agenda_sessao,0)),
		max(cd_tipo_acomodacao),
		max(nr_seq_exame)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		dt_vigencia_item_w,
		qt_total_secao_w,
		nr_seq_agenda_sessao_w,
		cd_tipo_acomod_agenda_cons_w,
		nr_seq_exame_w
	from	agenda_consulta
	where	nr_sequencia	= nr_seq_agenda_consulta_p;

	dt_agenda_consulta_w := dt_vigencia_item_w;

	if (qt_sessao_agenda_w = 'S'
         and coalesce(qt_total_secao_w,0) > 0
         and nr_seq_agenda_sessao_w = 0 ) then
		qt_procedimento_w := qt_total_secao_w;
	end if;

	if (coalesce(cd_procedimento_w::text, '') = '') then

		select	max(cd_procedimento),
			max(ie_origem_proced),
			1
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			qt_procedimento_w
		from	regra_gerar_autorizacao
		where	nr_sequencia	= nr_seq_regra_p;

	end if;
	cd_procedimento_principal_w 	:= cd_procedimento_w;
	ie_origem_proc_princ_w		:= ie_origem_proced_w;
elsif (nr_seq_proc_orcamento_p IS NOT NULL AND nr_seq_proc_orcamento_p::text <> '') then
	select	max(a.cd_procedimento),
		max(a.ie_origem_proced),
		max(a.qt_procedimento),
		max(b.cd_setor_atendimento),
		max(b.dt_orcamento)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		cd_setor_atendimento_w,
		dt_vigencia_item_w
	from	orcamento_paciente_proc a,
		orcamento_paciente b
	where	a.nr_sequencia	= nr_seq_proc_orcamento_p
	and	a.nr_sequencia_orcamento = b.nr_sequencia_orcamento;
end if;


if (coalesce(nr_seq_agenda_proc_p,0) > 0) then
	if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
		select	max(cd_procedimento),
			max(ie_origem_proced),
			coalesce(max(qt_procedimento), 1),
			max(cd_autorizacao),
			max(nr_seq_proc_interno),
			clock_timestamp(),
			max(ie_lado)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			qt_procedimento_w,
			nr_doc_convenio_w,
			nr_seq_proc_interno_assoc_w,
			dt_vigencia_item_w,
			ie_lado_agenda_proc_w
		from	agenda_paciente_proc
		where	nr_sequencia	= nr_seq_agenda_p
		and	nr_seq_agenda	= nr_seq_agenda_proc_p;
	elsif (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') then
		select	max(cd_procedimento),
			max(ie_origem_proced),
			max(coalesce(qt_procedimento,1)),
			max(nr_seq_proc_interno),
			clock_timestamp(),
			max(a.nr_seq_exame)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			qt_procedimento_w,
			nr_seq_proc_interno_assoc_w,
			dt_vigencia_item_w,
			nr_seq_exame_w
		from	agenda_consulta_proc a
		where	a.nr_seq_agenda	= nr_seq_agenda_consulta_p
		and	a.nr_sequencia	= nr_seq_agenda_proc_p;
	end if;
end if;

if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then

	select	max(qt_material),
		max(cd_material),
		max(cd_cgc_fornecedor),
		max(cd_setor_atendimento),
		max(cd_local_estoque)
	into STRICT	qt_material_w,
		cd_material_w,
		cd_cgc_fornec_opme_w,
		cd_setor_atendimento_w,
		cd_local_estoque_w
	from	material_atend_paciente
	where	nr_sequencia	= nr_seq_material_p;

	if (nr_prescricao_p > 0) and (nr_seq_mat_prescr_p > 0) then

		select	max(nr_seq_marca)
		into STRICT	nr_seq_marca_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia  = nr_seq_mat_prescr_p;

	end if;


elsif (nr_seq_mat_prescr_p IS NOT NULL AND nr_seq_mat_prescr_p::text <> '') then

	select	max(CASE WHEN coalesce(ie_regra_quantidade_solic_w,'N')='S' THEN (coalesce(a.qt_material,0) - coalesce(CEIL(a.qt_dose_especial),0)) * coalesce(a.qt_dias_solicitado,1) + coalesce(CEIL(a.qt_dose_especial),0)  ELSE qt_material END ),
		max(clock_timestamp()),
		max(a.qt_dias_solicitado),
		max(a.cd_material),
		substr(wheb_mensagem_pck.get_texto(300454, 'DS_JUSTIFICATIVA=' || max(a.ds_justificativa) || ';DS_OBSERVACAO=' || max(a.ds_observacao)), 1, 2000),
		max(a.nr_seq_marca),
		max(b.cd_setor_Atendimento),
		max(b.cd_local_estoque)
	into STRICT	qt_material_w,
		dt_vigencia_item_w,
		qt_dias_solicitado_w,
		cd_material_w,
		ds_observacao_w,
		nr_seq_marca_w,
		cd_setor_atendimento_w,
		cd_local_estoque_w
	from	prescr_material a,
		prescr_medica b
	where	a.nr_prescricao = b.nr_prescricao
	and	a.nr_prescricao	= nr_prescricao_p
	and	a.nr_sequencia	= nr_seq_mat_prescr_p;



elsif (nr_seq_agenda_pac_opme_p IS NOT NULL AND nr_seq_agenda_pac_opme_p::text <> '') then

	if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then

		select	max(cd_material),
			max(qt_material),
			max(ds_observacao),
			max(cd_cgc),
			max(nr_orcamento),
			coalesce(max(vl_unitario_atualizado),0),
			max(nr_seq_agrup),
			max(nr_seq_marca),
			clock_timestamp()
		into STRICT	cd_material_w,
			qt_material_w,
			ds_observacao_w,
			cd_cgc_fornec_opme_w,
			nr_orcamento_w,
			vl_cotado_w,
			nr_seq_agrup_w,
			nr_seq_marca_w,
			dt_vigencia_item_w
		from	agenda_pac_opme
		where	nr_sequencia	= nr_seq_agenda_pac_opme_p;

	elsif (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') then

		select	max(cd_material),
			max(qt_material),
			max(ds_observacao),
			clock_timestamp()
		into STRICT	cd_material_w,
			qt_material_w,
			ds_observacao_w,
			dt_vigencia_item_w
		from	agenda_cons_opme
		where	nr_sequencia	= nr_seq_agenda_pac_opme_p;
	end if;

elsif (nr_seq_mat_orcamento_p IS NOT NULL AND nr_seq_mat_orcamento_p::text <> '') then

	select	max(a.qt_material),
		max(b.cd_setor_atendimento),
		clock_timestamp(),
		max(a.cd_material)
	into STRICT	qt_material_w,
		cd_setor_atendimento_w,
		dt_vigencia_item_w,
		cd_material_w
	from	orcamento_paciente_mat a,
		orcamento_paciente  b
	where	a.nr_sequencia	= nr_seq_mat_orcamento_p
	and	a.nr_sequencia_orcamento = b.nr_sequencia_orcamento;

end if;


--lhalves OS240751 em 26/08/2010
if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (ie_atual_qt_solic_autor_w = 'S') then
	if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
		select	cd_material
		into STRICT	cd_mat_autor_w
		from	material_atend_paciente
		where	nr_sequencia	= nr_seq_material_p;
	elsif (nr_seq_mat_prescr_p IS NOT NULL AND nr_seq_mat_prescr_p::text <> '') then

		select	cd_material
		into STRICT	cd_mat_autor_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_mat_prescr_p;
	elsif (nr_seq_mat_orcamento_p IS NOT NULL AND nr_seq_mat_orcamento_p::text <> '') then

		select	 cd_material
		into STRICT	cd_mat_autor_w
		from 	orcamento_paciente_mat
		where	nr_sequencia = nr_seq_mat_orcamento_p;

	end if;

	--busca a autorizacao
	select 	max(a.nr_sequencia)
	into STRICT	nr_seq_autor_w
	from 	material_autorizado b,
		autorizacao_convenio a,
		estagio_autorizacao c
	where 	b.nr_sequencia_autor	= a.nr_sequencia
	and	a.nr_seq_estagio	= c.nr_sequencia
	and 	b.cd_material		= cd_mat_autor_w
	and 	(((coalesce(b.qt_autorizada,0) > coalesce(b.qt_solicitada,0) and (c.ie_interno = '10')) or (obter_qtde_util_real(b.nr_sequencia) > 0) and (c.ie_interno		= '1')) or (b.nr_prescricao IS NOT NULL AND b.nr_prescricao::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '')and (coalesce(b.nr_prescricao,0) <> coalesce(nr_prescricao_p,0))and
		coalesce(b.qt_solicitada,0) < b.qt_autorizada)
	and 	a.nr_atendimento		= nr_atendimento_w;

	-- busca a quantidade autorizada e solic do material
	select 	sum(b.qt_autorizada),
		sum(b.qt_solicitada)
	into STRICT 	qt_mat_autorizada_w,
		qt_mat_solicitada_w
	from 	material_autorizado b,
		autorizacao_convenio a
	where 	b.nr_sequencia_autor	= a.nr_sequencia
	and 	b.cd_material		= cd_mat_autor_w
	and 	a.nr_sequencia		= nr_seq_autor_w;
end if;

/*lhalves OS233832 em 28/10/2010 - Para evento 'CD' deve gerar mais uma autorizacao de internacao, apenas se ja existir uma autorizada
					senao deve atualizar a quantidade*/
if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (ie_tipo_autorizacao_w	in ('1','2')) and (ie_evento_w = 'CD') then
	select 	coalesce(max(a.nr_sequencia),0),
		count(*)
	into STRICT	nr_seq_autor_int_w,
		qt_autor_internacao_w
	from 	autorizacao_convenio a,
		estagio_autorizacao b
	where	a.nr_atendimento		= nr_atendimento_w
	and 	a.ie_tipo_autorizacao		= ie_tipo_autorizacao_w
	and 	a.nr_seq_estagio 		= b.nr_sequencia
--	and	nvl(a.cd_tipo_acomodacao,nvl(cd_tipo_acomodacao_w,0)) 	= nvl(cd_tipo_acomodacao_w,0)
	and	coalesce(a.cd_tipo_acomodacao,0) 	= coalesce(coalesce(cd_tipo_acomodacao_w,a.cd_tipo_acomodacao),0)
	and	((b.ie_interno		= '1' and ie_exige_just_medica_w = 'N') or (b.ie_interno		= '2' and ie_exige_just_medica_w = 'S'));
end if;

ie_utiliza_agfa_w := obter_param_usuario(869, 31, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_utiliza_agfa_w);
ie_agrupa_autor_age_int_w := obter_param_usuario(869, 214, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_agrupa_autor_age_int_w);
ie_agrupa_data_age_int_w := obter_param_usuario(869, 453, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_agrupa_data_age_int_w);
ie_gerar_diagnostico_atend_w := obter_param_usuario(3004, 138, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_diagnostico_atend_w);
ie_gerar_guia_senha_autor_w := obter_param_usuario(3004, 151, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_guia_senha_autor_w);
ie_autor_prest_w := obter_param_usuario(3004, 231, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_autor_prest_w);


if (ie_gerar_autor_guia_prescr_w = 'S') and (nr_seq_proc_prescr_p IS NOT NULL AND nr_seq_proc_prescr_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	begin
	select	nr_doc_convenio,
		cd_senha,
        	cd_setor_atendimento
	into STRICT	nr_doc_convenio_prescr_w,
		cd_senha_prescr_w,
       		nr_seq_setor_proc_prescr_w
	from	prescr_procedimento
	where	nr_sequencia = nr_seq_proc_prescr_p
	and	nr_prescricao = nr_prescricao_p;
	exception
	when others then
		nr_doc_convenio_prescr_w := null;
		cd_senha_prescr_w := null;
	end;
end if;


if (coalesce(cd_setor_atendimento_w,0) = 0) and (nr_atendimento_w > 0) then
	begin
	select	max(Obter_Setor_Atendimento(nr_atendimento))
	into STRICT	cd_setor_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w;
	exception
	when others then
		cd_setor_atendimento_w := null;
	end;
end if;
dt_inicio_vigencia_w	:= dt_inicio_vigencia_p;


if (ie_tipo_autorizacao_w = '4') then

	begin
	select	'S'
	into STRICT	ie_autor_agenda_gerada_w
	from	autorizacao_convenio a, estagio_autorizacao b
	where	a.nr_seq_estagio 	= b.nr_sequencia
	and	b.ie_interno <> '70'
	and	a.nr_seq_agenda		= nr_seq_agenda_p
	and	a.ie_tipo_autorizacao	= ie_tipo_autorizacao_w
	and	exists	(SELECT	1
			from	material_autorizado x
			where	x.nr_sequencia_autor	= a.nr_sequencia
			and	x.cd_material		= cd_material_w
			and	((x.nr_seq_opme		= nr_seq_agenda_pac_opme_p) or (coalesce(x.cd_cgc_fabricante, coalesce(cd_cgc_fornec_opme_w,'X'))	= coalesce(cd_cgc_fornec_opme_w,'X'))))
	and	a.cd_convenio	= cd_convenio_w  LIMIT 1;
	exception
	when no_data_found then
		ie_autor_agenda_gerada_w := 'N';
	end;

end if;



--Adiciona os dias da regra com base no inicio de vigencia da autorizacao
if (coalesce(qt_dias_geracao_vigencia_w,0) > 0) then
	select	coalesce(dt_inicio_vigencia_w,clock_timestamp()) + qt_dias_geracao_vigencia_w
	into STRICT	dt_final_vigencia_w
	;
end if;


if (ie_final_vig_dose_dia_prescr_w = 'S') and (coalesce(nr_prescricao_p,0) > 0) and (coalesce(nr_seq_mat_prescr_p,0) > 0) then
	select	coalesce(max(qt_dose_diaria),0),
		coalesce(max(qt_dias_tratamento),0)
	into STRICT	qt_dose_diaria_w,
		qt_dose_tratamento_w
	from	lib_material_paciente
	where	nr_prescricao  	=  nr_prescricao_p
	and	nr_seq_material = nr_seq_mat_prescr_p
	and	coalesce(DT_SUSPENSO::text, '') = '';

	dt_inicio_vigencia_w	:= clock_timestamp();

	if (qt_dose_diaria_w > 0) and (qt_dose_tratamento_w > 0) then

		dt_final_vigencia_w	:= (trunc(clock_timestamp(),'hh24') + (qt_dose_diaria_w * qt_dose_tratamento_w));

	end if;
end if;

/*lhalves OS 599212 em 23/08/2013 - Gerar uma autorizacao separada para cada item adicional da agenda integrada*/

if (coalesce(ie_autor_exame_adic_integ_w,'N') = 'S') and (nr_seq_agenda_proc_p IS NOT NULL AND nr_seq_agenda_proc_p::text <> '') and (nr_seq_agenda_int_w IS NOT NULL AND nr_seq_agenda_int_w::text <> '') then
	ie_nova_autorizacao_w	:= 'S';
end if;
ie_atualiza_autor_convenio_w	:= 'N';

if (ie_agrupa_tipo_proc_w = 'S') and (coalesce(cd_procedimento_w,0) > 0 ) then
	select 	coalesce(obter_tipo_procedimento(cd_procedimento_w,ie_origem_proced_w,'C'),0)
	into STRICT 	cd_tipo_procedimento_w
	;
end if;

if (coalesce(ie_agrupa_data_age_int_w, 'N') = 'S') then
	begin
		ie_agrupa_autor_age_int_w	:= 'N';
	end;
end if;

select	count(*),
	coalesce(max(a.nr_sequencia),0)
into STRICT	cont_w,
	nr_sequencia_autor_w
from	estagio_autorizacao b,
	autorizacao_convenio a
where	(a.nr_atendimento			= nr_atendimento_p or
	a.nr_seq_agenda 			= nr_seq_agenda_p or
	a.nr_seq_agenda_consulta 		= nr_seq_agenda_consulta_p or
	((ie_utiliza_agfa_w <> 'N') 	and (a.nr_seq_age_integ = nr_seq_agenda_int_w) and (pkg_date_utils.get_time(coalesce(a.dt_agenda,coalesce(a.dt_agenda_cons,clock_timestamp())),0,0,0) = pkg_date_utils.get_time(coalesce(dt_agenda_w,coalesce(dt_agenda_consulta_w,clock_timestamp())),0,0,0))) or
	((ie_utiliza_agfa_w = 'N') and (coalesce(ie_agrupa_data_age_int_w,'N') = 'S') and (a.nr_seq_age_integ = nr_seq_agenda_int_w) and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_agenda) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_age_integ_item_w))) or
	((ie_utiliza_agfa_w = 'N') and (coalesce(ie_agrupa_autor_age_int_w,'N') = 'S') and (ie_agrup_medico_dia_w = 'N') and (a.nr_seq_age_integ = nr_seq_agenda_int_w)) or
	((ie_utiliza_agfa_w = 'N') and (coalesce(ie_agrupa_autor_age_int_w,'N') = 'N') and (ie_agrup_medico_dia_w = 'S')	and (a.nr_seq_age_integ = nr_seq_agenda_int_w)
	and (a.cd_medico_exec_agenda = cd_medico_exec_agenda_w) and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_agenda) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_age_integ_item_w))))
and	a.ie_tipo_autorizacao			= ie_tipo_autorizacao_w
and	a.nr_seq_estagio			= b.nr_sequencia
and	a.cd_convenio				= cd_convenio_w
and	(((a.nr_prescricao 			= nr_prescricao_p) or (coalesce(nr_prescricao_p::text, '') = '' 		and coalesce(a.nr_prescricao::text, '') = '') or (ie_atual_qt_solic_autor_w = 'S' 	and coalesce(nr_seq_autor_w,0) > 0)) or (coalesce(ie_autor_mat_prescr_agrup_w,'N')	= 'S' and coalesce(nr_seq_mat_prescr_p,0) > 0))
and	((b.ie_interno = '1' 			and ie_exige_just_medica_w = 'N') or (b.ie_interno = '2' 			and ie_exige_just_medica_w = 'S') or (a.nr_seq_estagio = nr_seq_estagio_plano_w) or
	 ((ie_atual_qt_solic_autor_w 	= 'S') 	and (b.ie_interno	= '10')
	 and exists (	SELECT	1
			from	material_autorizado x
			where ( x.cd_material = cd_material_w
				  or (ie_autor_generico_w = 'S') and x.cd_material = obter_material_generico(cd_material_w))
			and	x.nr_sequencia_autor = a.nr_sequencia
			and	( (coalesce(x.qt_autorizada,0) > coalesce(x.qt_solicitada,0)) or
				((coalesce(obter_qtde_util_real(x.nr_sequencia),0) <= x.qt_solicitada)and (x.qt_solicitada	> x.qt_autorizada)and (x.qt_autorizada >= coalesce(obter_qtde_util_real(x.nr_sequencia),0))) ) )))
and (coalesce(a.ie_resp_autor,'X')		= coalesce(ie_resp_autor_p,'X'))
and	((coalesce(a.nr_seq_classif,0)		= coalesce(nr_seq_classif_autor_w,0)) or (coalesce(nr_seq_classif_autor_w::text, '') = ''))
and	((coalesce(a.ie_tiss_tipo_anexo_autor,'0')	= coalesce(ie_tiss_tipo_anexo_w,'0')) or (coalesce(ie_tiss_tipo_anexo_w,'0') = '0'))
and	((ie_gerar_autor_guia_prescr_w = 'N') or (coalesce(nr_prescricao_p,0) = 0) or
	 ((ie_gerar_autor_guia_prescr_w = 'S') and (coalesce(a.cd_autorizacao,'X') = coalesce(nr_doc_convenio_prescr_w,coalesce(a.cd_autorizacao,'X')))))
and	((coalesce(ie_nova_autor_item_fim_vig_w,'N') = 'N') or (coalesce(dt_vigencia_item_w,clock_timestamp()) < coalesce(a.dt_fim_vigencia,clock_timestamp() + interval '2000 days')))
and	((ie_final_vig_dose_dia_prescr_w = 'N') or (dt_final_vigencia_w = trunc(a.dt_fim_vigencia,'hh24')))
and 	((ie_agrupa_tipo_proc_w = 'N') or (coalesce(a.cd_tipo_procedimento,0) = cd_tipo_procedimento_w))
and	(((coalesce(ie_tiss_tipo_etapa_autor::text, '') = '') and (coalesce(coalesce(ie_tipo_etapa_autor_proc_w, ie_tipo_etapa_autor_mat_w)::text, '') = '')) or (ie_tiss_tipo_etapa_autor = coalesce(ie_tipo_etapa_autor_proc_w, ie_tipo_etapa_autor_mat_w)));

    ----------------------------------------
    IF ie_evento_w = 'GIR' THEN
        ie_gerar_proc_w := ie_gerar_gir(nr_sequencia_autor_p => nr_sequencia_autor_w,
                                        nr_seq_agenda_orig_p => nr_seq_agenda_orig_w);
        -- dbms_output.put_line('===> GIR :' || ie_gerar_proc_w);
    END IF;

    ----------------------------------------
    IF (ie_evento_w = 'GIR' AND ie_gerar_proc_w = 'S') OR
       ((ie_evento_w <> 'GIR') AND
       ((((cont_w = 0 OR ie_tipo_autorizacao_w IN ('1', '2')) AND (coalesce(qt_autor_internacao_w, 0) = 0) AND
       ((coalesce(nr_seq_agenda_p, 0) > 0 AND (ie_autor_agenda_gerada_w = 'N' OR coalesce(nr_seq_agenda_proc_p, 0) > 0)) OR
       coalesce(nr_seq_agenda_p, 0) = 0) AND
       ((coalesce(nr_seq_agenda_consulta_p, 0) > 0 AND (ie_autor_consulta_gerada_w = 'N')) OR
       coalesce(nr_seq_agenda_consulta_p, 0) = 0)) OR
       (ie_nova_autorizacao_w = 'S' AND ie_autor_agenda_gerada_w = 'N') OR
       (((ie_atual_qt_solic_autor_w = 'S') AND (ie_tipo_autorizacao_w NOT IN ('1', '2', '3'))) AND (coalesce(nr_seq_autor_w::text, '') = '' AND nr_sequencia_autor_w = 0 AND (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') AND ((nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') OR (nr_seq_mat_prescr_p IS NOT NULL AND nr_seq_mat_prescr_p::text <> ''))))) AND (coalesce(qt_procedimento_w, 0) >= 0) AND (coalesce(qt_material_w, 0) >= 0))) THEN
	/* Francisco - 26/03/08 - OS86232 - Tratei acima para nao lancar nova aut com proc/mat negativo */


	--<<nova_autor>>
	if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
		select	max(cd_medico),
			max(nr_doc_conv),
			max(cd_senha),
			max(substr(ds_observacao,1,2000)),
			max(substr(ds_justificativa,1,2000))
		into STRICT	cd_medico_solicitante_w,
			nr_doc_convenio_w,
			cd_senha_w,
			obs_prescricao_w,
			jus_prescricao_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;

		if (nr_seq_proc_prescr_p IS NOT NULL AND nr_seq_proc_prescr_p::text <> '') and (ie_nova_autorizacao_w = 'S')then
			select	max(substr(coalesce(obs_prescricao_w,ds_observacao),1,2000)),
				max(substr(coalesce(jus_prescricao_w,ds_justificativa),1,2000)),
                		max(cd_setor_atendimento)
			into STRICT	obs_prescricao_w,
				jus_prescricao_w,
                		nr_seq_setor_proc_prescr_w
			from	prescr_procedimento
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_proc_prescr_p;
		end if;


		if (nr_seq_mat_prescr_p IS NOT NULL AND nr_seq_mat_prescr_p::text <> '') and (ie_nova_autorizacao_w = 'S')then
			select	max(substr(coalesce(jus_prescricao_w,ds_justificativa),1,2000))
			into STRICT	jus_prescricao_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_mat_prescr_p;
		end if;
	end if;

	if (coalesce(nr_atendimento_p,0) > 0) then
		select	coalesce(max(nr_seq_autorizacao), 0) + 1
		into STRICT	nr_seq_autorizacao_w
		from	autorizacao_convenio
		where	nr_atendimento	= nr_atendimento_p;

		select	coalesce(tiss_obter_carater_intern(ie_carater_inter_sus),CASE WHEN ie_carater_inter_sus='1' THEN 'E'  ELSE 'U' END ),
			cd_pessoa_fisica,
			cd_estabelecimento,
			substr(TISS_OBTER_CLINICA_AUTOR(ie_clinica, nr_seq_classificacao),1,2),
			CASE WHEN ie_tipo_atendimento=1 THEN substr(TISS_OBTER_REGIME_INTERNACAO(cd_procedencia),1,15)  ELSE null END ,
			substr(obter_tipo_acidente_tiss(nr_seq_tipo_acidente),1,15),
			substr(ds_observacao,1,255),
			nr_seq_classificacao
		into STRICT	ie_carater_int_tiss_w,
			cd_pessoa_fisica_w,
			cd_estab_paciente_w,
			ie_tipo_internacao_tiss_w,
			ie_regime_internacao_w,
			ie_tiss_tipo_acidente_w,
			obs_atendimento_w,
			nr_seq_classificacao_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_p;

		select	ie_tipo_guia,
			cd_tipo_acomodacao,
			coalesce(nr_doc_convenio_w,nr_doc_convenio),
			coalesce(cd_senha_w,cd_senha),
			cd_categoria,
			nr_doc_convenio nr_doc_eup
		into STRICT	ie_tipo_guia_w,
			cd_tipo_acomod_atend_w,
			nr_doc_convenio_w,
			cd_senha_w,
			cd_categoria_w,
			nr_doc_conv_eup_w
		from	atend_categoria_convenio
		where	nr_atendimento	= nr_atendimento_p
		and	nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_p);

		if (coalesce(cd_tipo_acomodacao_w::text, '') = '') then
			cd_tipo_acomodacao_w	:= cd_tipo_acomod_atend_w;
		end if;

		if (ie_tipo_acomod_atual_w = 'S') then
			begin
			select	(obter_tipo_acomodacao_atend(nr_atendimento_p,'C'))::numeric
			into STRICT	cd_tipo_acomod_atual_w
			;
			exception
			when others then
				cd_tipo_acomod_atual_w	:= null;
			end;

			if (cd_tipo_acomod_atual_w IS NOT NULL AND cd_tipo_acomod_atual_w::text <> '') then
				cd_tipo_acomodacao_w := cd_tipo_acomod_atual_w;
			end if;


		end if;
	end if;

	if (coalesce(nr_seq_agenda_p,0) > 0) then
		begin
		select	cd_categoria,
			PKG_DATE_UTILS.get_datetime(dt_agenda, coalesce(hr_inicio, PKG_DATE_UTILS.GET_TIME('00:00:00'))),--OS366018
			coalesce(ie_tipo_guia,ie_tipo_guia_w),
			cd_pessoa_fisica,
			ie_carater_cirurgia,
			cd_tipo_acomodacao,
			substr(TISS_OBTER_CLINICA_AUTOR(ie_clinica, nr_seq_classificacao_w),1,2),
			CASE WHEN ie_tipo_atendimento=1 THEN substr(TISS_OBTER_REGIME_INTERNACAO(cd_procedencia),1,15)  ELSE null END ,
			substr(ds_observacao,1,4000)
		into STRICT	cd_categoria_w,
			dt_entrada_prevista_w,
			ie_tipo_guia_w,
			cd_pessoa_fisica_w,
			ie_carater_cirurgia_w,
			cd_tipo_acomod_atend_w,
			ie_tipo_internacao_tiss_w,
			ie_regime_internacao_w,
			obs_ag_paciente_w
		from	agenda_paciente
		where	nr_sequencia	= nr_seq_agenda_p;
		exception
		when others then
			cd_categoria_w		:= 	null;
			dt_entrada_prevista_w	:=	null;
			ie_tipo_guia_w		:=	null;
			ie_carater_cirurgia_w	:= 	null;
		end;


		if (coalesce(ie_carater_cirurgia_w,'X') in ('U','M')) then
			ie_carater_int_tiss_w := 'U';
		elsif (coalesce(ie_carater_cirurgia_w,'X') = 'E') then
			ie_carater_int_tiss_w := ie_carater_cirurgia_w;
		end if;


		if (coalesce(cd_tipo_acomodacao_w::text, '') = '') and (cd_tipo_acomod_atend_w IS NOT NULL AND cd_tipo_acomod_atend_w::text <> '') then
			cd_tipo_acomodacao_w	:= cd_tipo_acomod_atend_w;
		end if;


	end if;
	if (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') and (coalesce(cd_tipo_acomodacao_w::text, '') = '') and (cd_tipo_acomod_agenda_cons_w IS NOT NULL AND cd_tipo_acomod_agenda_cons_w::text <> '') then
		cd_tipo_acomodacao_w	:= cd_tipo_acomod_agenda_cons_w;
	end if;
	if (coalesce(nr_seq_proc_orcamento_p,'0') <> '0') then

		begin
		select	a.cd_categoria,
			a.cd_convenio,
			a.cd_pessoa_fisica
		into STRICT	cd_categoria_w,
			cd_convenio_w,
			cd_pessoa_fisica_w
		from	orcamento_paciente a,
			orcamento_paciente_proc b
		where	a.nr_sequencia_orcamento = b.nr_sequencia_orcamento
		and	b.nr_sequencia 		 = nr_seq_proc_orcamento_p
		and	coalesce(nr_seq_mat_orcamento_p,'0') = '0';
		exception
		when others then
			cd_categoria_w	 	:= null;
			cd_convenio_w	 	:= null;
			cd_pessoa_fisica_w	:= null;
		end;

	elsif (coalesce(nr_seq_mat_orcamento_p,'0') <> '0') then

		begin
		select	a.cd_categoria,
			a.cd_convenio,
			a.cd_pessoa_fisica
		into STRICT	cd_categoria_w,
			cd_convenio_w,
			cd_pessoa_fisica_w
		from	orcamento_paciente a,
			orcamento_paciente_mat b
		where	a.nr_sequencia_orcamento = b.nr_sequencia_orcamento
		and	b.nr_sequencia 		 = nr_seq_mat_orcamento_p;
		exception
		when others then
			cd_categoria_w	 	:= null;
			cd_convenio_w	 	:= null;
			cd_pessoa_fisica_w	:= null;
		end;

	end if;

	if (coalesce(cd_medico_solicitante_w::text, '') = '') and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		select	max(cd_medico_resp)
		into STRICT	cd_medico_solicitante_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_p;
	end if;

	/*lhalves OS 659246 em 12/02/2014
	Quando regra de LA deve sempre buscar o mesmo medico que gerou o item na conta, pois na RLA e possivel definir o medico que ira gerar no proc da conta.*/
	if (ie_evento_w = 'LA') and (coalesce(nr_seq_proced_p,0) > 0) then

		select	coalesce(max(cd_medico_executor),cd_medico_solicitante_w)
		into STRICT	cd_medico_solicitante_w
		from	procedimento_paciente
		where	nr_sequencia	= nr_seq_proced_p;
	end if;

	/* Gerar autorizacao particular quando nao tiver cobertura */

	if (ie_autor_particular_p = 'S') then
		SELECT * FROM obter_convenio_particular(cd_estabelecimento_w, cd_convenio_partic_w, cd_categoria_partic_w) INTO STRICT cd_convenio_partic_w, cd_categoria_partic_w;

		cd_convenio_w	:= cd_convenio_partic_w;
	end if;

	select	nextval('autorizacao_convenio_seq')
	into STRICT	nr_sequencia_autor_w
	;

	if (ie_gerar_proc_princ_agenda_w = 'N') then
		-- Edgar 27/11/2007, OS 74433
		cd_procedimento_principal_w	:= null;
		ie_origem_proc_princ_w		:= null;
	elsif (ie_gerar_proc_princ_agenda_w = 'S') and (coalesce(nr_seq_agenda_p::text, '') = '') and (nr_seq_mat_prescr_p IS NOT NULL AND nr_seq_mat_prescr_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (coalesce(cd_procedimento_w::text, '') = '') then

		begin
		select	a.cd_procedimento,
			a.ie_origem_proced,
			a.nr_seq_proc_interno,
			PKG_DATE_UTILS.get_datetime(a.dt_agenda, coalesce(a.hr_inicio, PKG_DATE_UTILS.GET_TIME('00:00:00')))
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			dt_entrada_prevista_w
		from	prescr_medica m,
			cirurgia c,
			prescr_material pm,
			agenda_paciente a
		where	c.nr_cirurgia = m.nr_cirurgia
		and	a.nr_cirurgia = c.nr_cirurgia
		and	m.nr_prescricao = pm.nr_prescricao
		and	pm.nr_prescricao = nr_prescricao_p
		and	pm.nr_sequencia  = nr_seq_mat_prescr_p;
		exception
		when others then
			cd_procedimento_w := null;
			ie_origem_proced_w := null;
			dt_entrada_prevista_w := null;
		end;

		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then

			cd_procedimento_principal_w	:= cd_procedimento_w;
			ie_origem_proc_princ_w		:= ie_origem_proced_w;

		end if;

	end if;

	if (ie_nova_autorizacao_w	= 'S') then
		cd_procedimento_principal_w	:= cd_procedimento_w;
		ie_origem_proc_princ_w		:= ie_origem_proced_w;
		nr_seq_proc_interno_w       := nr_seq_proc_int_princ_w;
	end if;

	/*  OS */

	if (ie_gerar_autor_guia_prescr_w = 'S') then
		if (coalesce(nr_doc_convenio_prescr_w,'X') <> 'X') then
			nr_doc_convenio_w := nr_doc_convenio_prescr_w;
		end if;
		if (coalesce(cd_senha_prescr_w,'X') <> 'X') then
			cd_senha_w := cd_senha_prescr_w;
		end if;
	end if;

	/*  Gravar tipo guia do parametro da EUP */

	ie_tipo_guia_prescr_w := obter_param_usuario(916, 841, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_guia_prescr_w);

	if (coalesce(ie_tipo_guia_prescr_w,'X') <> 'X')and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_proc_prescr_p IS NOT NULL AND nr_seq_proc_prescr_p::text <> '') then
		ie_tipo_guia_w	:= ie_tipo_guia_prescr_w;
	end if;

	--buscar senha de autorizacao anterior - agenda integrada
	ie_senha_ageint_w := obter_param_usuario(869, 33, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_senha_ageint_w);

	if (coalesce(cd_senha_w::text, '') = '') and (ie_senha_ageint_w = 'S') then
		select 	obter_dados_autor_agenda(nr_seq_agenda_p,nr_seq_agenda_consulta_p,'S')
		into STRICT	cd_senha_w
		;

		if (coalesce(cd_senha_w::text, '') = '') then
			if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
				select 	max(cd_senha)
				into STRICT	cd_senha_w
				from  	autorizacao_convenio
				where 	nr_seq_age_integ = (SELECT 	max(a.nr_sequencia)
							    from	agenda_integrada a, agenda_integrada_item b
							    where 	a.nr_sequencia = b.nr_seq_agenda_int
							    and   	b.nr_seq_agenda_exame = nr_seq_agenda_p);
			elsif (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') then
				select 	max(cd_senha)
				into STRICT	cd_senha_w
				from  	autorizacao_convenio
				where 	nr_seq_age_integ = (SELECT 	max(a.nr_sequencia)
							    from 	agenda_integrada a, agenda_integrada_item b
							    where 	a.nr_sequencia = b.nr_seq_agenda_int
							    and   	b.nr_seq_agenda_cons = nr_seq_agenda_consulta_p);
			end if;
		end if;

	end if;

	if (coalesce(ie_gerar_guia_senha_autor_w,'N') = 'S') then
		nr_doc_convenio_w := null;
		cd_senha_w	:= null;
        ie_criou_nova_autor_w := 'S';

	end if;

	if (coalesce(ie_carater_int_tiss_regra_w,'N') <> 'N') then
		ie_carater_int_tiss_w := ie_carater_int_tiss_regra_w;
	end if;

	if (coalesce(ie_autor_mat_prescr_agrup_w,'N') = 'S' and coalesce(nr_seq_mat_prescr_p,0) > 0) then
		nr_prescricao_w	:= null;
	end if;

	if (coalesce(cd_tipo_procedimento_w,0) = 0) then
		cd_tipo_procedimento_w	:= null;
	end if;

	if (coalesce(nr_seq_gestao_p,0) > 0) then


		select	max(ie_opme),
			max(ie_quimioterapia)
		into STRICT	ie_opme_w,
			ie_quimio_w
		from	gestao_vaga
		where	nr_sequencia = nr_seq_gestao_p;

		if 	(((cd_pessoa_fisica_w = 0 or coalesce(cd_pessoa_fisica_w::text, '') = '') or (coalesce(cd_setor_atendimento_w,cd_setor_atend_usuario_w)) is null) and (nr_seq_gestao_p IS NOT NULL AND nr_seq_gestao_p::text <> '')) then

			select	max(cd_pessoa_fisica),
				max(cd_setor_atual)
			into STRICT	cd_pessoa_fisica_w,
				cd_setor_atendimento_w
			from	gestao_vaga
			where	nr_sequencia = nr_seq_gestao_p;
		end if;

	end if;



	-- OS 761677
	if (coalesce(nr_seq_agenda_p,0) > 0) then

		if	((ie_gerar_indic_clinica_w = 'L') or /*CIRURGICO ou EXAMES*/
			(cd_tipo_agenda_w = 2 AND ie_gerar_indic_clinica_w = 'C') or /*EXAMES*/
			(cd_tipo_agenda_w = 1 AND ie_gerar_indic_clinica_w = 'D')) then /*CIRURGICO*/
			select	max(ds_cirurgia)
			into STRICT	ds_indicacao_ageint_w
			from	agenda_paciente
			where	nr_sequencia = nr_seq_agenda_p;

			if (ie_gerar_indic_clinica_w in ('D','L') and (ie_lado_w IS NOT NULL AND ie_lado_w::text <> '')) then
				ds_indicacao_ageint_w := ds_indicacao_ageint_w || chr(13) || chr(10) || obter_desc_expressao(292416) || ': ' || obter_valor_dominio(1372, ie_lado_w);
			end if;
		end if;
	end if;
	-- Fim OS 761677
	if (coalesce(ie_autor_prest_w,'N') = 'AT') and (nr_doc_conv_eup_w IS NOT NULL AND nr_doc_conv_eup_w::text <> '') then
		cd_autorizacao_prest_w := nr_doc_conv_eup_w;
	end if;

	if (ie_gerar_observacao_w = 'A') then
		ds_observacao_autor_w := obs_atendimento_w;
	elsif (ie_gerar_observacao_w = 'P') then
		ds_observacao_autor_w := obs_prescricao_w;
	elsif (ie_gerar_observacao_w = 'J') then
		ds_observacao_autor_w := jus_prescricao_w;
	elsif (ie_gerar_observacao_w = 'G') then
		ds_observacao_autor_w := coalesce(obs_ag_paciente_w,obs_ag_consulta_w);
	elsif (ie_gerar_observacao_w = 'N') then
		ds_observacao_autor_w := '';
	end if;

	if (ie_gerar_indic_clinica_w <> 'P') then
		ds_resumo_clinico_w := null;
	end if;
        dt_autorizacao_w := clock_timestamp();
        IF (ie_evento_w = 'GIR') THEN
            dt_autorizacao_w := coalesce(dt_agenda_consulta_w, clock_timestamp());
        END IF;

        INSERT INTO autorizacao_convenio(nr_atendimento,
             nr_seq_autorizacao,
             cd_convenio,
             cd_autorizacao,
             dt_autorizacao,
             dt_inicio_vigencia,
             dt_atualizacao,
             nm_usuario,
             dt_fim_vigencia,
             nm_responsavel,
             ds_observacao,
             cd_senha,
             cd_procedimento_principal,
             ie_origem_proced,
             dt_pedido_medico,
             cd_medico_solicitante,
             ie_tipo_guia,
             qt_dia_autorizado,
             nr_prescricao,
             dt_envio,
             dt_retorno,
             nr_seq_estagio,
             ie_tipo_autorizacao,
             ie_tipo_dia,
             cd_tipo_acomodacao,
             nr_sequencia,
             nr_seq_agenda,
             ie_carater_int_tiss,
             ie_resp_autor,
             nr_seq_agenda_consulta,
             nr_seq_agenda_proc,
             nr_seq_age_integ,
             qt_dias_prazo,
             ds_indicacao,
             qt_dia_solicitado,
             cd_setor_origem,
             nr_seq_classif,
             dt_entrada_prevista,
             nr_seq_regra_autor,
             cd_pessoa_fisica,
             cd_estabelecimento,
             dt_agenda,
             dt_agenda_cons,
             dt_agenda_integ,
             ie_tiss_tipo_anexo_autor,
             nr_seq_proc_interno,
             ie_tipo_internacao_tiss,
             ie_regime_internacao,
             ie_tiss_tipo_acidente,
             ie_previsao_uso_opme,
             ie_previsao_uso_quimio,
             cd_autorizacao_prest,
             dt_atualizacao_nrec,
             nm_usuario_nrec,
             cd_tipo_procedimento,
             ie_tiss_tipo_etapa_autor,
		cd_medico_exec_agenda,
	     ie_tiss_cobertura_especial)
        VALUES (coalesce(nr_atendimento_w, nr_atend_agenda_w),
             nr_seq_autorizacao_w,
             cd_convenio_w,
             nr_doc_convenio_w,
             dt_autorizacao_w,
             dt_inicio_vigencia_w,
             clock_timestamp(),
             nm_usuario_p,
             dt_final_vigencia_w,
             NULL,
             ds_observacao_autor_w,
             cd_senha_w,
             cd_procedimento_principal_w,
             ie_origem_proc_princ_w,
             NULL,
             coalesce(cd_medico_solic_ageint_w, cd_medico_solicitante_w),
             ie_tipo_guia_w,
             NULL,
             nr_prescricao_w,
             NULL,
             NULL,
             nr_seq_estagio_w,
             ie_tipo_autorizacao_w,
             'C',
             cd_tipo_acomodacao_w,
             nr_sequencia_autor_w,
             nr_seq_agenda_p,
             ie_carater_int_tiss_w,
             ie_resp_autor_p,
             nr_seq_agenda_consulta_p,
             nr_seq_agenda_proc_p,
             nr_seq_agenda_int_w,
             qt_dias_prazo_w,
             coalesce(ds_resumo_clinico_w, ds_indicacao_ageint_w),
             qt_dia_solicitado_w,
             coalesce(cd_setor_atendimento_w, CASE WHEN cd_setor_atend_usuario_w=0 THEN  NULL  ELSE cd_setor_atend_usuario_w END ),
             nr_seq_classif_autor_w,
             dt_entrada_prevista_w,
             nr_seq_regra_p,
             cd_pessoa_fisica_w,
             cd_estab_paciente_w,
             dt_agenda_w,
             dt_agenda_consulta_w,
             dt_age_integ_w,
             ie_tiss_tipo_anexo_w,
             nr_seq_proc_interno_w,
             ie_tipo_internacao_tiss_w,
             ie_regime_internacao_w,
             ie_tiss_tipo_acidente_w,
             ie_opme_w,
             ie_quimio_w,
             cd_autorizacao_prest_w,
             clock_timestamp(),
             nm_usuario_p,
             cd_tipo_procedimento_w,
             coalesce(ie_tipo_etapa_autor_proc_w, ie_tipo_etapa_autor_mat_w),
		cd_medico_exec_agenda_w,
	     ie_cobertura_especial_tiss_w);

	if (coalesce(nr_atendimento_w,nr_atend_agenda_w) > 0) and (coalesce(Obter_setor_atendimento(coalesce(nr_atendimento_w,nr_atend_agenda_w)),0) > 0)then
		CALL gerar_evento_pendencia_conta(coalesce(nr_atendimento_w,nr_atend_agenda_w), 'G', cd_estab_paciente_w,  nm_usuario_p,  null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 'N');
	end if;



	select	nr_seq_tipo_avaliacao
	into STRICT	nr_seq_tipo_aval_w
	from	regra_gerar_autorizacao
	where	nr_sequencia = nr_seq_regra_p;

	if (nr_seq_tipo_aval_w IS NOT NULL AND nr_seq_tipo_aval_w::text <> '') then
		insert into autorizacao_convenio_aval(
				nr_sequencia,
				nr_seq_autorizacao_conv,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_avaliacao,
				nr_seq_tipo_avaliacao)
			values (	nextval('autorizacao_convenio_aval_seq'),
				nr_sequencia_autor_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_tipo_aval_w);
	end if;

	if (nr_seq_estagio_w IS NOT NULL AND nr_seq_estagio_w::text <> '') then
		ie_atualiza_autor_convenio_w	:= 'S';
		--atualizar_autorizacao_convenio(nr_sequencia_autor_w,nm_usuario_p,nr_seq_estagio_w,'N','N','S');
	end if;

	nr_seq_autor_gerada_p	:= nr_sequencia_autor_w;

	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (nr_sequencia_autor_w IS NOT NULL AND nr_sequencia_autor_w::text <> '') then

		if (ie_gerar_diagnostico_atend_w = 'S') then

			open C01;
			loop
			fetch C01 into
				dt_diagnostico_w,
				cd_medico_diag_w,
				ie_tipo_diagnostico_w,
				ds_diagnostico_w,
				dt_atualizacao_w,
				nm_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				if (dt_diagnostico_w IS NOT NULL AND dt_diagnostico_w::text <> '') and (cd_medico_diag_w IS NOT NULL AND cd_medico_diag_w::text <> '') and (ie_tipo_diagnostico_w IS NOT NULL AND ie_tipo_diagnostico_w::text <> '') then
					begin

					select	nextval('autor_diag_medico_seq')
					into STRICT	nr_seq_autor_diag_w
					;

					insert into autor_diag_medico(
						nr_sequencia,
						dt_atualizacao,
						dt_atualizacao_nrec,
						dt_diagnostico,
						nm_usuario,
						nm_usuario_nrec,
						ds_diagnostico,
						cd_medico,
						ie_tipo_diagnostico,
						nr_sequencia_autor)
					values (
						nr_seq_autor_diag_w,
						dt_atualizacao_w,
						clock_timestamp(),
						dt_diagnostico_w,
						nm_usuario_w,
						nm_usuario_p,
						ds_diagnostico_w,
						cd_medico_diag_w,
						ie_tipo_diagnostico_w,
						nr_sequencia_autor_w);

					open C02;
					loop
					fetch C02 into
						cd_doenca_w,
						ds_diagnostico_w,
						dt_atualizacao_w,
						ie_classificacao_doenca_w,
						ie_tipo_doenca_w,
						ie_unidade_tempo_w,
						nm_usuario_w,
						qt_tempo_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin
						if (cd_doenca_w IS NOT NULL AND cd_doenca_w::text <> '') and (nr_seq_autor_diag_w IS NOT NULL AND nr_seq_autor_diag_w::text <> '')then
							begin
							insert	into autor_diag_doenca(
								cd_doenca,
								ds_diagnostico,
								dt_atualizacao,
								dt_atualizacao_nrec,
								ie_classificacao_doenca,
								ie_tipo_doenca,
								ie_unidade_tempo,
								nm_usuario,
								nm_usuario_nrec,
								nr_seq_autor_diag,
								nr_sequencia,
								qt_tempo)
							values (
								cd_doenca_w,
								ds_diagnostico_w,
								dt_atualizacao_w,
								clock_timestamp(),
								ie_classificacao_doenca_w,
								ie_tipo_doenca_w,
								ie_unidade_tempo_w,
								nm_usuario_w,
								nm_usuario_p,
								nr_seq_autor_diag_w,
								nextval('autor_diag_doenca_seq'),
								qt_tempo_w);
							end;
						end if;
						end;
					end loop;
					close C02;

					end;
				end if;
				end;
			end loop;
			close C01;

		elsif (ie_gerar_diagnostico_atend_w = 'U')then

			begin
			select	a.dt_diagnostico,
				a.cd_medico,
				a.ie_tipo_diagnostico,
				a.ds_diagnostico
			into STRICT	dt_diagnostico_w,
				cd_medico_diag_w,
				ie_tipo_diagnostico_w,
				ds_diagnostico_w
			from	diagnostico_medico a
			where	a.nr_atendimento = nr_atendimento_w
			and	a.dt_diagnostico = (	SELECT max(x.dt_diagnostico)
							from	diagnostico_medico x
							where	x.nr_atendimento = a.nr_atendimento);
			exception
			when others then
				ds_diagnostico_w := null;
				cd_medico_diag_w := null;
				ie_tipo_diagnostico_w := null;
			end;

			if (dt_diagnostico_w IS NOT NULL AND dt_diagnostico_w::text <> '') and (cd_medico_diag_w IS NOT NULL AND cd_medico_diag_w::text <> '') and (ie_tipo_diagnostico_w IS NOT NULL AND ie_tipo_diagnostico_w::text <> '') then

				select	nextval('autor_diag_medico_seq')
				into STRICT	nr_seq_autor_diag_w
				;

				insert into autor_diag_medico(
						nr_sequencia,
						dt_atualizacao,
						dt_atualizacao_nrec,
						dt_diagnostico,
						nm_usuario,
						nm_usuario_nrec,
						ds_diagnostico,
						cd_medico,
						ie_tipo_diagnostico,
						nr_sequencia_autor)
					values (
						nr_seq_autor_diag_w,
						clock_timestamp(),
						clock_timestamp(),
						dt_diagnostico_w,
						nm_usuario_p,
						nm_usuario_p,
						ds_diagnostico_w,
						cd_medico_diag_w,
						ie_tipo_diagnostico_w,
						nr_sequencia_autor_w);

				open C02;
					loop
					fetch C02 into
						cd_doenca_w,
						ds_diagnostico_w,
						dt_atualizacao_w,
						ie_classificacao_doenca_w,
						ie_tipo_doenca_w,
						ie_unidade_tempo_w,
						nm_usuario_w,
						qt_tempo_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin
						if (cd_doenca_w IS NOT NULL AND cd_doenca_w::text <> '') and (nr_seq_autor_diag_w IS NOT NULL AND nr_seq_autor_diag_w::text <> '')then
							begin
							insert	into autor_diag_doenca(
								cd_doenca,
								ds_diagnostico,
								dt_atualizacao,
								dt_atualizacao_nrec,
								ie_classificacao_doenca,
								ie_tipo_doenca,
								ie_unidade_tempo,
								nm_usuario,
								nm_usuario_nrec,
								nr_seq_autor_diag,
								nr_sequencia,
								qt_tempo)
							values (
								cd_doenca_w,
								ds_diagnostico_w,
								dt_atualizacao_w,
								clock_timestamp(),
								ie_classificacao_doenca_w,
								ie_tipo_doenca_w,
								ie_unidade_tempo_w,
								nm_usuario_w,
								nm_usuario_p,
								nr_seq_autor_diag_w,
								nextval('autor_diag_doenca_seq'),
								qt_tempo_w);
							end;
						end if;
						end;
					end loop;
					close C02;
			end if;
		end if;
	elsif (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') and (cd_cid_doenca_w IS NOT NULL AND cd_cid_doenca_w::text <> '') then

		select	nextval('autor_diag_medico_seq')
		into STRICT	nr_seq_autor_diag_w
		;

		insert into autor_diag_medico(
			nr_sequencia,
			dt_atualizacao,
			dt_atualizacao_nrec,
			dt_diagnostico,
			nm_usuario,
			nm_usuario_nrec,
			ds_diagnostico,
			cd_medico,
			ie_tipo_diagnostico,
			nr_sequencia_autor)
		values (
			nr_seq_autor_diag_w,
			clock_timestamp(),
			clock_timestamp(),
			coalesce(dt_entrada_prevista_w,clock_timestamp()),
			nm_usuario_p,
			nm_usuario_p,
			null,
			cd_medico_solicitante_w,
			2,
			nr_sequencia_autor_w);


		insert	into autor_diag_doenca(
			cd_doenca,
			ds_diagnostico,
			dt_atualizacao,
			dt_atualizacao_nrec,
			ie_classificacao_doenca,
			ie_tipo_doenca,
			ie_unidade_tempo,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_autor_diag,
			nr_sequencia,
			qt_tempo)
		values (
			cd_cid_doenca_w,
			null,
			clock_timestamp(),
			clock_timestamp(),
			'P',
			null,
			null,
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_autor_diag_w,
			nextval('autor_diag_doenca_seq'),
			null);

	end if;
end if;


/*lhalves OS280238 em 28/01/2011*/

if (ie_tipo_autorizacao_w in ('3','5')) and (nr_sequencia_autor_w IS NOT NULL AND nr_sequencia_autor_w::text <> '') and (cont_w = 0) and (nr_sequencia_autor_w > 0) then
	CALL gerar_regra_convenio_item(nr_sequencia_autor_w,nr_seq_regra_plano_proc_p,nr_prescricao_p, nr_seq_agenda_p,
    nr_atendimento_p,nm_usuario_p, nr_seq_agenda_consulta_p, nr_seq_agenda_proc_p);
end if;

if (coalesce(nr_atendimento_p,0) > 0) and (coalesce(nr_seq_autorizacao_w::text, '') = '') then
	select	max(nr_seq_autorizacao)
	into STRICT	nr_seq_autorizacao_w
	from	autorizacao_convenio
	where	nr_sequencia	= nr_sequencia_autor_w;
end if;

/*lhalves OS233832 em 21/09/2010*/

if (ie_evento_w = 'CD') and (coalesce(cd_proc_internacao_w::text, '') = '') then
	cd_proc_internacao_w	:= cd_procedimento_w;
	ie_origem_proc_int_w	:= ie_origem_proced_w;
end if;

/*lhalves OS251651 em 24/09/2010 - Gerar procedimento da internacao/prorrog com o procedimento diaria do tipo de acomodacao*/

if (ie_proc_diaria_acomod_w = 'S') and (ie_tipo_autorizacao_w in ('1','2')) then
	SELECT * FROM obter_proc_diaria_acomod(cd_estabelecimento_w, nr_seq_agenda_p, nr_atendimento_w, cd_proc_internacao_w, ie_origem_proc_int_w, nr_seq_proc_inter_w, cd_tipo_acomod_atual_w) INTO STRICT cd_proc_internacao_w, ie_origem_proc_int_w, nr_seq_proc_inter_w;
end if;			

if (obter_param_usuario_logado(3004, 242) = 'S') then

    if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
            select  max(coalesce(cd_area_procedimento,0)), max(coalesce(cd_grupo_proc,0))
            into STRICT	cd_area_proc_dut_w, cd_grupo_proc_dut_w
            from	estrutura_procedimento_v
            where	cd_procedimento	    = cd_procedimento_w
            and	    ie_origem_proced	= ie_origem_proced_w;
    end if;

    SELECT * FROM get_info_rule_days_dut(cd_convenio_w, ie_tipo_atendimento_atend_w, dt_vigencia_item_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_p, ie_tipo_autorizacao_dut_w, nm_usuario_resp_dut_w, qt_dias_autorizacao_dut_w, nr_sequencia_dut_w, ds_informacao_dut_dut_w) INTO STRICT ie_tipo_autorizacao_dut_w, nm_usuario_resp_dut_w, qt_dias_autorizacao_dut_w, nr_sequencia_dut_w, ds_informacao_dut_dut_w;

    if (nr_sequencia_dut_w IS NOT NULL AND nr_sequencia_dut_w::text <> '') then

        if (nr_sequencia_dut_w IS NOT NULL AND nr_sequencia_dut_w::text <> '') then
            ds_obs_dut_w := chr(10)|| obter_desc_expressao(298311) || obter_desc_expressao(709240) || nr_sequencia_dut_w;
        end if;

        if (ie_tipo_autorizacao_dut_w IS NOT NULL AND ie_tipo_autorizacao_dut_w::text <> '') then
            ds_obs_dut_w := ds_obs_dut_w || chr(10)|| obter_desc_expressao(299440) || obter_desc_expressao(709240) || ie_tipo_autorizacao_dut_w;
        end if;

        if (nm_usuario_resp_dut_w IS NOT NULL AND nm_usuario_resp_dut_w::text <> '') then
            ds_obs_dut_w := ds_obs_dut_w || chr(10) || obter_desc_expressao(301056) || obter_desc_expressao(709240)  || nm_usuario_resp_dut_w;
        end if;

        if (qt_dias_autorizacao_dut_w IS NOT NULL AND qt_dias_autorizacao_dut_w::text <> '') then
            ds_obs_dut_w := ds_obs_dut_w || chr(10) || obter_desc_expressao(287753) || obter_desc_expressao(709240) || qt_dias_autorizacao_dut_w;
        end if;

        if (ds_informacao_dut_dut_w IS NOT NULL AND ds_informacao_dut_dut_w::text <> '') then
            ds_obs_dut_w := ds_obs_dut_w || chr(10) || obter_desc_expressao(291934) || obter_desc_expressao(709240) || ds_informacao_dut_dut_w;
        end if;
    end if;	

end if;

    IF ie_evento_w = 'GIR' THEN
        -- dbms_output.put_line(' ----------ie_evento_w = ''GIR''--------');

        -- dbms_output.put_line(' cd_procedimento_w :' || cd_procedimento_w);

        -- dbms_output.put_line(' ie_origem_proced_w:' || ie_origem_proced_w);

        -- dbms_output.put_line(' nr_seq_agenda_orig_w :' || nr_seq_agenda_orig_w);

        -- dbms_output.put_line('      ie_gerar_proc_w :' ||   ie_gerar_proc_w);
        SELECT CASE WHEN COUNT(1)=0 THEN  'S'  ELSE 'N' END ,
               MAX(nr_sequencia)
          INTO STRICT ie_gerar_proc_w,
               nr_seq_proc_autor_w
          FROM procedimento_autorizado a
         WHERE a.ie_origem_proced = ie_origem_proced_w
           AND a.cd_procedimento = cd_procedimento_w
           AND a.nr_seq_agenda_consulta = nr_seq_agenda_orig_w;

        -- dbms_output.put_line('      ie_gerar_proc_w :' ||   ie_gerar_proc_w);
        IF ie_gerar_proc_w = 'S' THEN

            SELECT nextval('procedimento_autorizado_seq') INTO STRICT nr_seq_proc_autor_w;
            IF ie_gerar_autor_gir_w <> 'Q' THEN
	            qt_autor_sessao_w := 1;
            END IF;
            -- dbms_output.put_line(' **** INSERT  procedimento_autorizado *****');

            -- dbms_output.put_line(' Seq: ' || nr_seq_proc_autor_w);

            -- dbms_output.put_line(' nr_sequencia_autor_w :'||nr_sequencia_autor_w);
            INSERT INTO procedimento_autorizado(nr_atendimento,
                 nr_seq_autorizacao,
                 cd_procedimento,
                 ie_origem_proced,
                 qt_solicitada,
                 qt_autorizada,
                 nr_prescricao,
                 nr_seq_prescricao,
                 dt_atualizacao,
                 nm_usuario,
                 nr_sequencia_autor,
                 nr_sequencia,
                 nr_seq_proc_interno,
                 ds_observacao,
                 nr_seq_regra_plano,
                 nr_seq_agenda_proc,
                 nr_seq_agenda,
                 nr_seq_agenda_consulta,
                 ie_lado,
                 nr_seq_exame,
                 qt_bonus)
            VALUES (nr_atendimento_p,
                 nr_seq_autorizacao_w,
                 cd_procedimento_w,
                 ie_origem_proced_w,
                 qt_autor_sessao_w,
                 qt_autor_estagio_w,
                 nr_prescricao_p,
                 nr_seq_proc_prescr_p,
                 clock_timestamp(),
                 nm_usuario_p,
                 nr_sequencia_autor_w,
                 nr_seq_proc_autor_w,
                 coalesce(nr_seq_proc_interno_p, nr_seq_proc_interno_assoc_w),
                 substr(ds_observacao_proc_w || ds_obs_dut_w, 1, 2000),
                 nr_seq_regra_plano_proc_p,
                 NULL,
                 NULL,
                 nr_seq_agenda_consulta_p,
                 CASE WHEN coalesce(nr_seq_agenda_proc_p, 0)=0 THEN  ie_lado_w  ELSE ie_lado_agenda_proc_w END ,
                 nr_seq_exame_w,
                 qt_bonus_w);
        ELSE
            -- dbms_output.put_line(' _+_+ UPDATE  procedimento_autorizado -+-+-+-');

            -- dbms_output.put_line(' Seq: ' || nr_seq_proc_autor_w);
            UPDATE procedimento_autorizado
               SET qt_solicitada  =  CASE WHEN ie_gerar_autor_gir_w='Q' THEN  qt_solicitada  ELSE coalesce(qt_solicitada, 0) + 1 END ,
                   dt_atualizacao = clock_timestamp(),
                   nm_usuario     = nm_usuario_p
             WHERE nr_sequencia = nr_seq_proc_autor_w;
        END IF;

        UPDATE autorizacao_convenio
           SET ds_indicacao   = coalesce(ds_indicacao || chr(13), '') || ds_resumo_clinico_w,
               dt_atualizacao = clock_timestamp(),
               nm_usuario     = nm_usuario_p
         WHERE nr_sequencia = nr_sequencia_autor_w
           AND coalesce(position(ds_resumo_clinico_w in ds_indicacao), 0) = 0
           AND ie_gerar_indic_clinica_w = 'P';

        IF (coalesce(nr_seq_agenda_consulta_p, 0) > 0) AND (obter_estagio_autor(nr_seq_estagio_w, 'C') = '1') THEN

            BEGIN
                SELECT ie_autor_agenda
                  INTO STRICT ie_autor_agenda_w
                  FROM estagio_autorizacao
                 WHERE nr_sequencia = nr_seq_estagio_w
                   AND obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;
            EXCEPTION
                WHEN OTHERS THEN
                    NULL;
            END;
        END IF;

        -- dbms_output.put_line('  ----   agenda_consulta:' || nr_seq_agenda_consulta_p);
        UPDATE agenda_consulta
           SET ie_autorizacao       = coalesce(ie_autor_agenda_w, ie_autorizacao),
               dt_atualizacao       = clock_timestamp(),
               nm_usuario           = nm_usuario_p,
               nr_seq_agenda_sessao = nr_seq_agenda_orig_w
         WHERE nr_sequencia = nr_seq_agenda_consulta_p;

        --------------------------------------------------------------------------------------------

/* Francisco - 04/12/07 - Gerar procedimento para as guias de internacao/prorrogacao */

    ELSIF (ie_tipo_autorizacao_w IN ('1', '2')) AND (coalesce(cd_proc_internacao_w, 0) > 0) AND (coalesce(ie_origem_proc_int_w,0) > 0) and (ie_evento_w <> 'CD') and (nr_sequencia_autor_w > 0) then

	select	nextval('procedimento_autorizado_seq')
	into STRICT 	nr_seq_proc_autor_w
	;

	insert	into procedimento_autorizado(nr_atendimento,
		nr_seq_autorizacao,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitada,
		qt_autorizada,
		dt_atualizacao,
		nm_usuario,
		nr_sequencia_autor,
		nr_sequencia,
		nr_seq_proc_interno,
		nr_seq_regra_plano,
		ie_lado,
		ds_observacao,
        qt_bonus)
	values (nr_atendimento_p,
		nr_seq_autorizacao_w,
		cd_proc_internacao_w,
		ie_origem_proc_int_w,
		1,
		0,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_autor_w,
		nr_seq_proc_autor_w,
		coalesce(nr_seq_proc_inter_w,nr_seq_proc_interno_int_w),
		nr_seq_regra_plano_proc_p,
		ie_lado_w,
		ds_observacao_regra_w || ds_obs_dut_w,
        qt_bonus_w);

elsif (ie_tipo_autorizacao_w in ('1','2')) and (coalesce(cd_proc_internacao_w,0) > 0) and (coalesce(ie_origem_proc_int_w,0) > 0) and (ie_evento_w = 'CD') and (nr_sequencia_autor_w > 0) then

	if (coalesce(qt_autor_internacao_w,0) > 0) then

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_proc_autor_w
		from	procedimento_autorizado a,
			autorizacao_convenio b,
			estagio_autorizacao c
		where	a.nr_sequencia_autor	= b.nr_sequencia
		and 	b.nr_seq_estagio		= c.nr_sequencia
		and 	a.nr_sequencia_autor	= nr_seq_autor_int_w
		and	a.cd_procedimento		= cd_proc_internacao_w
		and	a.ie_origem_proced	= ie_origem_proc_int_w
		and 	b.ie_tipo_autorizacao	= ie_tipo_autorizacao_w;

		if (coalesce(nr_seq_proc_autor_w::text, '') = '') then
			qt_autor_internacao_w :=	0;
		end if;
	end if;

	if (coalesce(qt_autor_internacao_w,0) = 0) then

		select	nextval('procedimento_autorizado_seq')
		into STRICT 	nr_seq_proc_autor_w
		;

		insert	into procedimento_autorizado(nr_atendimento,
			nr_seq_autorizacao,
			cd_procedimento,
			ie_origem_proced,
			qt_solicitada,
			qt_autorizada,
			dt_atualizacao,
			nm_usuario,
			nr_sequencia_autor,
			nr_sequencia,
			nr_seq_proc_interno,
			nr_seq_regra_plano,
			nr_seq_agenda,
			ie_lado,
			ds_observacao,
            qt_bonus)
		values (nr_atendimento_p,
			nr_seq_autorizacao_w,
			cd_proc_internacao_w,
			ie_origem_proc_int_w,
			1,
			0,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_autor_w,
			nr_seq_proc_autor_w,
			coalesce(nr_seq_proc_inter_w,nr_seq_proc_interno_int_w),
			nr_seq_regra_plano_proc_p,
			nr_seq_agenda_p,
			ie_lado_w,
			ds_observacao_regra_w || ds_obs_dut_w,
            qt_bonus_w);


		if (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') then
			update	procedimento_paciente
			set	nr_seq_proc_autor	= nr_seq_proc_autor_w,
				dt_atualizacao 	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia		= nr_seq_proced_p;
		end if;
	else	/* Se ja tem autorizacao, apenas atualiza a quantidade*/
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_proc_autor_w
		from	procedimento_autorizado a,
			autorizacao_convenio b,
			estagio_autorizacao c
		where	a.nr_sequencia_autor	= b.nr_sequencia
		and 	b.nr_seq_estagio	= c.nr_sequencia
		and 	c.ie_interno		<> '70'
		and 	a.nr_sequencia_autor	= nr_seq_autor_int_w
		and	a.cd_procedimento	= cd_proc_internacao_w
		and	a.ie_origem_proced	= ie_origem_proc_int_w
		and 	b.ie_tipo_autorizacao	= ie_tipo_autorizacao_w;

		if (nr_seq_proc_autor_w IS NOT NULL AND nr_seq_proc_autor_w::text <> '') then
			update	procedimento_autorizado
			set	qt_solicitada	= qt_solicitada + qt_procedimento_w,
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where	nr_sequencia	= nr_seq_proc_autor_w;

			if (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') then
				update	procedimento_paciente
				set	nr_seq_proc_autor	= nr_seq_proc_autor_w,
					dt_atualizacao 	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia		= nr_seq_proced_p;
			end if;
		end if;
	end if;

elsif (nr_sequencia_autor_w > 0) and
	((ie_tipo_autorizacao_w = '3') or (ie_tipo_autorizacao_w = '5') or (ie_tipo_autorizacao_w = '6'))then

	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then

		select	count(*)
		into STRICT	cont_w
		from	procedimento_autorizado a, autorizacao_convenio b, estagio_autorizacao c
		where	a.nr_sequencia_autor	= b.nr_sequencia
		and	b.nr_seq_estagio 		= c.nr_sequencia
		and	c.ie_interno <> '70'
		and	a.nr_sequencia_autor	= nr_sequencia_autor_w
		and	a.cd_procedimento		= cd_procedimento_w
		and	coalesce(a.nr_seq_proc_interno,coalesce(coalesce(nr_seq_proc_interno_p,nr_seq_proc_interno_assoc_w),0)) = coalesce(coalesce(nr_seq_proc_interno_p,nr_seq_proc_interno_assoc_w),0)
		and	a.ie_origem_proced	= ie_origem_proced_w
		and (coalesce(a.nr_prescricao,nr_prescricao_p) 		= nr_prescricao_p or coalesce(nr_prescricao_p::text, '') = '')
		and (a.nr_seq_prescricao 	= nr_seq_proc_prescr_p or coalesce(nr_seq_proc_prescr_p::text, '') = '')
		and	((a.ie_lado = coalesce(ie_lado_agenda_proc_w,a.ie_lado)) or coalesce(a.ie_lado::text, '') = '')
		and	((coalesce(nr_seq_exame_w::text, '') = '') or (a.nr_seq_exame = nr_seq_exame_w))
		and	not exists (	SELECT 	1
					from 	procedimento_autorizado x,
						agenda_paciente z,
						autorizacao_convenio y
					where 	x.cd_procedimento  = a.cd_procedimento
					and 	y.nr_sequencia  = x.nr_sequencia_autor
					and 	x.nr_seq_proc_interno  = a.nr_seq_proc_interno
					and 	x.ie_origem_proced     = a.ie_origem_proced
					and 	x.nr_seq_agenda        = z.nr_sequencia
					and 	x.nr_seq_agenda  	<> nr_seq_agenda_p
					and 	y.nr_seq_age_integ      = nr_seq_agenda_int_w
					and (coalesce(z.ie_lado,'X')  	<> coalesce(ie_lado_w,'X')));

	end if;

	if (ie_somente_item_w = 'N') and
		((nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') or (nr_seq_proc_prescr_p IS NOT NULL AND nr_seq_proc_prescr_p::text <> '') or (coalesce(nr_seq_agenda_p,0) > 0 and (ie_autor_agenda_gerada_w = 'N' or coalesce(nr_seq_agenda_proc_p,0) > 0)) or (coalesce(nr_seq_agenda_consulta_p,0) > 0 and (ie_autor_consulta_gerada_w = 'N' or coalesce(nr_seq_agenda_proc_p,0) > 0)) or (nr_seq_proc_orcamento_p IS NOT NULL AND nr_seq_proc_orcamento_p::text <> '')
		)  then

		if (cont_w = 0) and (coalesce(qt_procedimento_w,0) >= 0) then
			/* Francisco - 26/03/08 - OS86232 - Tratei acima para nao lancar nova aut com proc negativo */



			/*Inicio lhalves OS224696 - 16/07/2010 - Gerar a autorizacao com a quantidade total de procedimentos ja existentes na procedimento_paciente*/

			if (coalesce(ie_somar_todos_w,'N') = 'S') and
				((qt_min_regra_w > 0) or (qt_max_regra_w < 999)) and
				((nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')) then

				/*Obter a quantidade de procedimentos existentes*/

				select 	coalesce(sum(qt_procedimento),0)
				into STRICT	count_proc_w
				from 	procedimento_paciente
				where	nr_atendimento 		= nr_atendimento_w
				and	cd_convenio		= cd_convenio_w
				and	cd_procedimento		= cd_procedimento_w
				and 	ie_origem_proced	= ie_origem_proced_w
				and	coalesce(cd_motivo_exc_conta::text, '') = '';

				/*Obter a quantidade de procedimentos ja autorizados.*/

				select	coalesce(sum(a.qt_solicitada),0)
				into STRICT 	count_proc_autor_w
				from	procedimento_autorizado a, autorizacao_convenio b, estagio_autorizacao c
				where	a.nr_sequencia_autor	= b.nr_sequencia
				and	b.nr_seq_estagio	 	= c.nr_sequencia
				and	c.ie_interno 		= '10'
				and	a.nr_sequencia_autor	= b.nr_sequencia
				and	a.cd_procedimento	= cd_procedimento_w
				and	a.ie_origem_proced	= ie_origem_proced_w
				and 	b.nr_atendimento	= nr_atendimento_w;

				if (count_proc_w > qt_min_regra_w) and (count_proc_w < qt_max_regra_w) then

					/*Se ja existir procedimento autorizado nao soma na quantidade*/

					if (count_proc_autor_w > 0) then
						qt_procedimento_w := count_proc_w - count_proc_autor_w;
					else
						qt_procedimento_w := count_proc_w;
					end if;
				end if;
			end if;
			/*Fim lhaves*/

			if (nr_seq_agenda_int_w IS NOT NULL AND nr_seq_agenda_int_w::text <> '') then

				begin
				select	substr(a.ds_observacao,1,1999)
				into STRICT	ds_observacao_autor_w
				from	autorizacao_convenio a
				where	a.nr_seq_agenda <> nr_seq_agenda_p
				and	a.nr_seq_age_integ = nr_seq_agenda_int_w
				and	a.nr_sequencia = (	SELECT	max(x.nr_sequencia)
								from	autorizacao_convenio x
								where	x.nr_seq_age_integ = a.nr_seq_age_integ);
				exception
				when others then
					ds_observacao_autor_w := null;
				end;


				if (ds_observacao_autor_w IS NOT NULL AND ds_observacao_autor_w::text <> '') and (cd_cid_doenca_age_int_w IS NOT NULL AND cd_cid_doenca_age_int_w::text <> '')and
					((ie_utiliza_agfa_w <> 'N') or (ie_agrupa_autor_age_int_w = 'S') or (ie_agrupa_data_age_int_w = 'S')) and (position(ds_obs_final_w in ds_observacao_autor_w) = 1) and (coalesce(ie_gerar_observacao_w,'C') = 'C') then

					ds_observacao_autor_w	:= substr(wheb_mensagem_pck.get_texto(300456, 'DS_OBS_FINAL_W=' || ds_observacao_autor_w || ';CD_CID=' ||
													cd_cid_doenca_age_int_w || ';DS_CID=' || substr(Obter_Desc_CID_Doenca(cd_cid_doenca_age_int_w), 1, 230)), 1, 2000);

					update	autorizacao_convenio
					set	dt_atualizacao = clock_timestamp(),
						nm_usuario     = nm_usuario_p,
						ds_observacao  = substr(ds_observacao_autor_w,1,2000)
					where	nr_sequencia   = nr_sequencia_autor_w;
				end if;
			end if;

			if (ie_cons_qtd_proc_autor_w = 'S') and/*Geliard 26/07/2011 OS 340843*/
				((nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')) then

				begin
				/*Obter a quantidade de procedimentos existentes*/

				select 	coalesce(sum(qt_procedimento),0)
				into STRICT	count_proc_w
				from 	procedimento_paciente
				where	nr_atendimento 		= nr_atendimento_w
				and	cd_convenio		= cd_convenio_w
				and	cd_procedimento		= cd_procedimento_w
				and 	ie_origem_proced		= ie_origem_proced_w
				and	coalesce(cd_motivo_exc_conta::text, '') = '';

				/*Obter a quantidade de procedimentos ja autorizados.*/

				select	coalesce(sum(a.qt_solicitada),0)
				into STRICT 	count_proc_autor_w
				from	procedimento_autorizado a,
					autorizacao_convenio b,
					estagio_autorizacao c
				where	a.nr_sequencia_autor	= b.nr_sequencia
				and	b.nr_seq_estagio 		= c.nr_sequencia
				and	c.ie_interno 		<> '70'
				and	a.nr_sequencia_autor	= b.nr_sequencia
				and	a.cd_procedimento	= cd_procedimento_w
				and	a.ie_origem_proced	= ie_origem_proced_w
				and 	((b.nr_atendimento	= nr_atendimento_w) or
					(b.nr_seq_agenda 	= (	SELECT 	max(x.nr_seq_agenda)
									from	cirurgia x,
										procedimento_paciente y
									where	x.nr_cirurgia = y.nr_cirurgia
									and	y.nr_sequencia = nr_seq_proced_p)));

				if (count_proc_autor_w < count_proc_w) then
					qt_procedimento_w := count_proc_w - count_proc_autor_w;
				end if;
				end;
			end if;

			if (ie_lado_w = 'A') and (coalesce(ie_consid_proc_bilat_autor_w,'N') = 'S') then
				qt_procedimento_w := qt_procedimento_w + 1;
			end if;

			if (obter_estagio_autor(nr_seq_estagio_w,'C') = '10') then
				qt_autor_estagio_w := qt_procedimento_w;
			end if;

			select	nextval('procedimento_autorizado_seq')
			into STRICT	nr_seq_proc_autor_w
			;

			if (ds_observacao_regra_w IS NOT NULL AND ds_observacao_regra_w::text <> '') then
				if coalesce(ds_observacao_proc_w::text, '') = '' then
					ds_observacao_proc_w := ds_observacao_regra_w;
				else
					ds_observacao_proc_w := ds_observacao_proc_w || chr(13) || ds_observacao_regra_w;
				end if;
			end if;

			insert	into procedimento_autorizado(nr_atendimento,
				nr_seq_autorizacao,
				cd_procedimento,
				ie_origem_proced,
				qt_solicitada,
				qt_autorizada,
				nr_prescricao,
				nr_seq_prescricao,
				dt_atualizacao,
				nm_usuario,
				nr_sequencia_autor,
				nr_sequencia,
				nr_seq_proc_interno,
				ds_observacao,
				nr_seq_regra_plano,
				nr_seq_agenda_proc,
				nr_seq_agenda,
				nr_seq_agenda_consulta,
				ie_lado,
				nr_seq_exame,
				qt_bonus)
			values (	nr_atendimento_p,
				nr_seq_autorizacao_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				qt_procedimento_w,
				qt_autor_estagio_w,
				nr_prescricao_p,
				nr_seq_proc_prescr_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_autor_w,
				nr_seq_proc_autor_w,
				coalesce(nr_seq_proc_interno_p,nr_seq_proc_interno_assoc_w),
				substr(ds_observacao_proc_w || ds_obs_dut_w,1,2000),
				nr_seq_regra_plano_proc_p,
				nr_seq_agenda_proc_p,
				nr_seq_agenda_p,
				nr_seq_agenda_consulta_p,
				CASE WHEN coalesce(nr_seq_agenda_proc_p,0)=0 THEN ie_lado_w  ELSE ie_lado_agenda_proc_w END ,
				nr_seq_exame_w,
				qt_bonus_w);

			update 	autorizacao_convenio set
				ds_indicacao = coalesce(ds_indicacao || chr(13),'') || ds_resumo_clinico_w,
				dt_atualizacao 	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia = nr_sequencia_autor_w
			and	coalesce(position(ds_resumo_clinico_w in ds_indicacao),0) = 0
			and	ie_gerar_indic_clinica_w = 'P';

			if (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') then
				update	procedimento_paciente
				set	nr_seq_proc_autor	= nr_seq_proc_autor_w,
					dt_atualizacao 	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia		= nr_seq_proced_p;
			end if;

			if (coalesce(nr_seq_agenda_p,0) > 0) and (obter_estagio_autor(nr_seq_estagio_w,'C') = '1') then

				begin
					select	ie_autor_agenda
					into STRICT	ie_autor_agenda_w
					from	estagio_autorizacao
					where	nr_sequencia	= nr_seq_estagio_w
					and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;

					update	agenda_paciente
					set	ie_autorizacao	= coalesce(ie_autor_agenda_w,ie_autorizacao),
						dt_atualizacao 	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_agenda_p;

				exception
				when others then
					null;
				end;
			end if;

		else
			select	max(nr_sequencia)
			into STRICT	nr_seq_proc_autor_w
			from	procedimento_autorizado
			where	nr_sequencia_autor	= nr_sequencia_autor_w
			and	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w;

			if (ie_lado_w = 'A') and (coalesce(ie_consid_proc_bilat_autor_w,'N') = 'S') then
				qt_procedimento_w := qt_procedimento_w + 1;
			end if;

			if (nr_seq_proc_autor_w IS NOT NULL AND nr_seq_proc_autor_w::text <> '') and
				(
				 (coalesce(nr_seq_agenda_p,0) = 0 or coalesce(nr_seq_agenda_proc_p,0) > 0) or (coalesce(nr_seq_agenda_consulta_p,0) = 0 or coalesce(nr_seq_agenda_proc_p,0) > 0) or (nr_seq_proc_orcamento_p IS NOT NULL AND nr_seq_proc_orcamento_p::text <> '')) then
				--substituida a linha: qt_solicitada	= qt_solicitada + qt_procedimento_w, por  qt_solicitada	= qt_procedimento_w OS 369100
				update	procedimento_autorizado
				set	qt_solicitada	= qt_procedimento_w,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_sequencia	= nr_seq_proc_autor_w;

				if (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') then
					update	procedimento_paciente
					set	nr_seq_proc_autor	= nr_seq_proc_autor_w,
						dt_atualizacao 	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia		= nr_seq_proced_p;
				end if;
			end if;
		end if;
	end if;

elsif (ie_tipo_autorizacao_w = '4') then

	if (ie_atual_qt_solic_autor_w = 'S') then
		nr_sequencia_autor_w	:= coalesce(nr_seq_autor_w,nr_sequencia_autor_w);
	end if;


	if (ie_gerar_saldo_itens_autor_w = 'S') and (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '')then
		qt_saldo_mat_autor_w	:= coalesce(obter_saldo_mat_autor(nr_atendimento_w,
								cd_material_w,
								cd_convenio_w,
								dt_inicio_vigencia_p,
								qt_material_w,
								nr_seq_material_p),0);

		begin


		if (ie_autor_generico_w = 'S') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
			cd_material_validacao_w	:= obter_material_generico(cd_material_w);

		end if;

		select	coalesce(sum(qt_material),0)
		into STRICT	qt_utilizada_w
		from	material_atend_paciente
		where	nr_atendimento 		= nr_atendimento_w
		and	cd_convenio		= cd_convenio_w
	         and (cd_material = cd_material_w or (ie_autor_generico_w = 'S' and obter_material_generico(cd_material) = coalesce(cd_material_validacao_w,cd_material_w)))
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '');
		exception
		when others then
			qt_utilizada_w := 0;
		end;

		select 	coalesce(sum(coalesce(a.qt_autorizada,0)),0),
			coalesce(sum(coalesce(a.qt_solicitada,0)),0),
			max(b.nr_sequencia)
		into STRICT	qt_autorizada_w,
			qt_solicitada_w,
			nr_seq_autorizada_w
		FROM material_autorizado a, autorizacao_convenio b
LEFT OUTER JOIN estagio_autorizacao c ON (b.nr_seq_estagio = c.nr_sequencia)
WHERE b.nr_atendimento 		= nr_atendimento_w and b.cd_convenio		= cd_convenio_w and coalesce(dt_inicio_vigencia_p,clock_timestamp()) between coalesce(b.dt_inicio_vigencia, coalesce(dt_inicio_vigencia_p,clock_timestamp())) and coalesce(b.dt_fim_vigencia,clock_timestamp()) and a.nr_sequencia_autor	= b.nr_sequencia  and (a.cd_material = cd_material_w or (ie_autor_generico_w = 'S' and obter_material_generico(a.cd_material) = coalesce(cd_material_validacao_w,cd_material_w))) and (((a.qt_autorizada		> coalesce(a.qt_solicitada,0)) or
			 ((coalesce(a.qt_solicitada,0)	> a.qt_autorizada) and (qt_utilizada_w		<= coalesce(a.qt_solicitada,0)))) or (ie_qt_mat_autor_w = 'S')) and coalesce(c.ie_interno,'10') = '10';

		if (ie_atual_qt_solic_autor_w = 'S')and (nr_seq_autorizada_w = nr_sequencia_autor_w) then

			if (qt_saldo_mat_autor_w >= qt_material_w) then

				if (qt_solicitada_w > qt_autorizada_w)and (qt_utilizada_w <= qt_solicitada_w)then
					qt_material_w	:= qt_solicitada_w;

				elsif (qt_solicitada_w > 0) then
					qt_material_w := qt_material_w + qt_solicitada_w;
				end if;

			elsif (qt_saldo_mat_autor_w < qt_material_w) and (qt_autorizada_w > 0) then

				if (qt_solicitada_w > qt_autorizada_w)and (qt_utilizada_w <= qt_solicitada_w)and (qt_utilizada_w <= qt_autorizada_w)then
					qt_material_w := qt_solicitada_w;
				end if;
				qt_sobra_nova_autor_w := qt_utilizada_w - qt_autorizada_w;

				if (coalesce(qt_sobra_nova_autor_w,0) >= 0)and (coalesce(qt_autorizada_w,0) > 0)then
					if (qt_autorizada_w > qt_solicitada_w) then
						qt_material_w := qt_autorizada_w;
					elsif (qt_solicitada_w > qt_autorizada_w) then
						qt_material_w := qt_solicitada_w;
					end if;
				end if;
			elsif (qt_material_w - qt_saldo_mat_autor_w > 0)and (coalesce(qt_autorizada_w,0) = 0)then
				qt_material_w := qt_material_w - qt_saldo_mat_autor_w;
			end if;
		elsif (ie_qt_mat_autor_w = 'S') then
			select	sum(qt_solicitada)
			into STRICT	qt_solicitada_ww
			FROM material_autorizado a, autorizacao_convenio b
LEFT OUTER JOIN estagio_autorizacao c ON (b.nr_seq_estagio = c.nr_sequencia)
WHERE b.nr_atendimento 	= nr_atendimento_w and b.cd_convenio		= cd_convenio_w and coalesce(dt_inicio_vigencia_p,clock_timestamp()) between coalesce(b.dt_inicio_vigencia, coalesce(dt_inicio_vigencia_p,clock_timestamp())) and coalesce(b.dt_fim_vigencia,clock_timestamp()) and a.nr_sequencia_autor	= b.nr_sequencia  and (a.cd_material = cd_material_w or (ie_autor_generico_w = 'S' and obter_material_generico(a.cd_material) = coalesce(cd_material_validacao_w,cd_material_w))) and coalesce(c.ie_interno,'1')	= '1';

			if (qt_utilizada_w >= qt_autorizada_w) then
				qt_material_w	:= qt_utilizada_w - qt_autorizada_w;
			elsif (qt_utilizada_w <= qt_solicitada_ww) then
				qt_material_w	:= qt_solicitada_ww - qt_utilizada_w;
			end if;

		elsif (qt_material_w - qt_saldo_mat_autor_w > 0) then

			if (qt_saldo_mat_autor_w >= 0) then
				qt_material_w := qt_material_w - qt_saldo_mat_autor_w;
			end if;

		end if;

	end if;

	if (nr_seq_autor_w IS NOT NULL AND nr_seq_autor_w::text <> '')and (ie_evento_w = 'LP') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '')and (coalesce(qt_mat_autorizada_w,0) > 0) and
		((qt_material_w + coalesce(qt_mat_solicitada_w,0)) > coalesce(qt_mat_autorizada_w,0))then
		begin
		qt_sobra_nova_autor_w := (qt_material_w + qt_mat_solicitada_w) - coalesce(qt_mat_autorizada_w,0);
		qt_material_w	:= qt_material_w - qt_sobra_nova_autor_w;
		end;
	end if;


	if (ie_autor_generico_w = 'S') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
		cd_material_validacao_w	:= obter_material_generico(cd_material_w);

	end if;

	if (ie_autor_mat_conta_w = 'S') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
		cd_material_w	:= obter_material_conta(cd_estabelecimento_w, cd_convenio_w,cd_categoria_w, cd_material_w, cd_material_w, cd_material_w, null,
							cd_setor_atendimento_w, clock_timestamp(), cd_local_estoque_w, nr_prescricao_p);
	end if;

	select	count(*)
	into STRICT	cont_w
	from	material_autorizado a
	where	a.nr_sequencia_autor	= nr_sequencia_autor_w
	and (cd_material = cd_material_w or (ie_autor_generico_w = 'S' and obter_material_generico(cd_material) = cd_material_validacao_w))
	and 	(((coalesce(a.nr_prescricao,nr_prescricao_p) = nr_prescricao_p or coalesce(nr_prescricao_p::text, '') = '') and (coalesce(a.nr_seq_prescricao,nr_seq_mat_prescr_p) = nr_seq_mat_prescr_p or coalesce(nr_seq_mat_prescr_p::text, '') = '')) or
		((ie_atual_qt_solic_autor_w = 'S') and
		(coalesce((	SELECT	max(nr_sequencia)
			from	material_autorizado
			where	nr_sequencia_autor	= nr_sequencia_autor_w
			and (cd_material = cd_material_w or (ie_autor_generico_w = 'S' and obter_material_generico(cd_material) = cd_material_validacao_w))),0) > 0)))
	and	((coalesce(cd_cgc_fornec_opme_w::text, '') = '') or
		 ((coalesce(a.cd_cgc_fabricante, coalesce(cd_cgc_fornec_opme_w,'X'))	= coalesce(cd_cgc_fornec_opme_w,'X')) or (a.nr_seq_opme = nr_seq_agenda_pac_opme_p)))
	and	((coalesce(nr_orcamento_w::text, '') = '') or (coalesce(a.nr_orcamento,'X') = coalesce(nr_orcamento_w,'X')))
	and	((coalesce(a.nr_seq_opme::text, '') = '') or (coalesce(nr_seq_agrup_w::text, '') = '') or
		(nr_seq_agrup_w = (	select max(x.nr_seq_agrup)
					from	agenda_pac_opme x
					where	x.nr_sequencia = a.nr_seq_opme)));

	if (ds_observacao_regra_w IS NOT NULL AND ds_observacao_regra_w::text <> '') then
		ds_observacao_w	:= ds_observacao_w ||' - '||ds_observacao_regra_w;
	end if;

	if (nr_sequencia_autor_w > 0) and
		((nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') or (nr_seq_mat_prescr_p IS NOT NULL AND nr_seq_mat_prescr_p::text <> '') or (nr_seq_agenda_pac_opme_p IS NOT NULL AND nr_seq_agenda_pac_opme_p::text <> '')or (nr_seq_mat_orcamento_p IS NOT NULL AND nr_seq_mat_orcamento_p::text <> '')) then

		if (cont_w = 0) and
			(((coalesce(qt_material_w,0) >= 0) and (ie_qt_mat_autor_w = 'N')) or
			((coalesce(qt_material_w,0) > 0) and (ie_qt_mat_autor_w = 'S')))then
			/* Francisco - 26/03/08 - OS86232 - Tratei acima para nao lancar nova aut com mat negativo */



			--pr_adicional_w	 :=  obter_tx_comercializacao_conv(cd_convenio_w,cd_estabelecimento_w,sysdate,cd_material_w);
			SELECT * FROM obter_tx_reducao_acresc_conv(cd_convenio_w, cd_estabelecimento_w, clock_timestamp(), cd_material_w, null, null, null, pr_adicional_w, ie_reducao_acrescimo_w) INTO STRICT pr_adicional_w, ie_reducao_acrescimo_w;

			if (ie_final_vig_dose_dia_prescr_w = 'S') and (qt_dose_diaria_w > 0) and (qt_dose_tratamento_w > 0) then

				qt_material_w := (qt_dose_diaria_w * qt_dose_tratamento_w);

			end if;

			select	nextval('material_autorizado_seq')
			into STRICT	nr_seq_mat_autor_w
			;

			select	max(nr_seq_fabric)
			into STRICT	nr_seq_fabricante_w
			from	material
			where	cd_material	= cd_material_w;

			insert	into material_autorizado(nr_atendimento,
				nr_seq_autorizacao,
				cd_material,
				qt_solicitada,
				qt_autorizada,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_sequencia_autor,
				nr_sequencia,
				nr_prescricao,
				nr_seq_prescricao,
				ds_observacao,
				nr_seq_fabricante,
				ie_valor_conta,
				cd_cgc_fabricante,
				nr_orcamento,
				vl_cotado,
				nr_seq_regra_plano,
				nr_seq_opme,
				pr_adicional,
				ie_reducao_acrescimo,
				vl_unitario,
				nr_seq_marca)
			values (nr_atendimento_p,
				nr_seq_autorizacao_w,
				cd_material_w,
				qt_material_w,
				0,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_autor_w,
				nr_seq_mat_autor_w,
				nr_prescricao_p,
				nr_seq_mat_prescr_p,
				substr(ds_observacao_w || chr(13) || chr(10) || CASE WHEN coalesce(nr_seq_agenda_pac_opme_p, 0)=0 THEN  ''  ELSE wheb_mensagem_pck.get_texto(300455) END , 1, 2000),
				nr_seq_fabricante_w,
				ie_valor_conta_w,
				cd_cgc_fornec_opme_w,
				nr_orcamento_w,
				vl_cotado_w,
				nr_seq_regra_plano_mat_p,
				nr_seq_agenda_pac_opme_p,
				pr_adicional_w,
				ie_reducao_acrescimo_w,
				0,
				nr_seq_marca_w);

			if (ie_obter_fornec_mat_autor_w = 'S') then
				select	obter_fornecedor_ultima_compra(cd_material_w,cd_estabelecimento_w)
				into STRICT	cd_cgc_fornec_w
				;

				if (cd_cgc_fornec_w IS NOT NULL AND cd_cgc_fornec_w::text <> '') then
					update	material_autorizado
					set	cd_cgc_fabricante	= cd_cgc_fornec_w,
						dt_atualizacao 	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia		= nr_seq_mat_autor_w;
				end if;
			end if;

			if (ie_obter_preco_mat_autor_w = 'C') then
				ds_retorno_w := atualizar_preco_mat_aut_conv(null, nr_seq_mat_autor_w, cd_estabelecimento_w, nm_usuario_p, ds_retorno_w);
			elsif (ie_obter_preco_mat_autor_w = 'U') then
				vl_preco_unitario_w	:= obter_valor_ultima_compra(cd_estabelecimento_w,null,cd_material_w,null,'N');

				if (vl_preco_unitario_w > 0) then
					update	material_autorizado
					set	vl_unitario	= vl_preco_unitario_w,
						ie_origem_preco 	= 7,
						dt_atualizacao 	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_mat_autor_w;
				end if;
			end if;

			if (nr_seq_agenda_pac_opme_p IS NOT NULL AND nr_seq_agenda_pac_opme_p::text <> '') then
				update	autorizacao_convenio
				set	cd_procedimento_principal	=	cd_procedimento_w,
					ie_origem_proced		=	ie_origem_proced_w,
					dt_atualizacao 		= 	clock_timestamp(),
					nm_usuario		= 	nm_usuario_p
				where	nr_sequencia			=	nr_sequencia_autor_w
				and	coalesce(cd_procedimento_principal::text, '') = '';
			end if;

			if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
				update	material_atend_paciente
				set	nr_seq_mat_autor	= nr_seq_mat_autor_w,
					dt_atualizacao 	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia		= nr_seq_material_p;
			end if;

			if (ie_gerar_mat_esp_p = 'S') then
				gerar_autor_mat_esp(nr_atendimento_p,
						nr_seq_agenda_p,
						nr_seq_agenda_consulta_p,
						nr_prescricao_p,
						nr_seq_mat_prescr_p,
						nr_seq_mat_autor_w,
						nm_usuario_p,
						nr_seq_autor_mat_esp_w);

				if (nr_seq_autor_mat_esp_w IS NOT NULL AND nr_seq_autor_mat_esp_w::text <> '') then
					update	autorizacao_convenio
					set	nr_seq_autor_cirurgia 	= nr_seq_autor_mat_esp_w,
						dt_atualizacao 		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_sequencia		= nr_sequencia_autor_w;
				end if;
			end if;

			if (ie_gerar_vl_cotado_opme_w = 'S') and (vl_cotado_w > 0) then

				if (coalesce(ie_regra_acresc_mat_autor_w,'N') = 'S') then

					update	material_autorizado
					set	vl_unitario	= CASE WHEN coalesce(ie_origem_preco,6)=6 THEN CASE WHEN ie_reducao_acrescimo='R' THEN									(coalesce(vl_cotado_w,0) - (coalesce(vl_cotado_w,0)  * coalesce(pr_adicional/100,0)))  ELSE (coalesce(vl_cotado_w,0)  + (coalesce(vl_cotado_w,0)  * coalesce(pr_adicional/100,0))) END   ELSE coalesce(vl_cotado_w,0) END ,
						dt_atualizacao 	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_mat_autor_w
					and	((ie_origem_preco = 6) or (coalesce(ie_origem_preco,0) = 0));
				else
					update	material_autorizado
					set	vl_unitario	= coalesce(vl_cotado_w,0),
						ie_origem_preco	= 8,
						dt_atualizacao 	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_mat_autor_w;
				end if;

			end if;
		elsif (nr_sequencia_autor_w > 0) then

			/*if Ronaldo 30/11/2011 comentario
				(nr_seq_agenda_pac_opme_p is not null) then
				begin
				select	max(nr_sequencia)
				into	nr_seq_mat_autor_w
				from	material_autorizado
				where	nr_sequencia_autor	= nr_sequencia_autor_w
				and	cd_material		= cd_material_w
				and	nvl(nr_seq_opme,0) 		<> nvl(nr_seq_agenda_pac_opme_p,0);
				end;
			/*else*/

				select	max(nr_sequencia)
				into STRICT	nr_seq_mat_autor_w
				from	material_autorizado
				where	nr_sequencia_autor	= nr_sequencia_autor_w
				and	cd_material		= cd_material_w;
			/*end if; */

			if (nr_seq_mat_autor_w IS NOT NULL AND nr_seq_mat_autor_w::text <> '') then

				if	((nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') and (ie_gerar_saldo_itens_autor_w = 'N') or (nr_seq_mat_prescr_p IS NOT NULL AND nr_seq_mat_prescr_p::text <> '') and (ie_atual_qt_solic_autor_w = 'S') and (nr_seq_autor_w > 0))then

					update	material_autorizado
					set	qt_solicitada		= coalesce(qt_solicitada,0) + qt_material_w,
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp()
					where	nr_sequencia		= nr_seq_mat_autor_w;
				else
					update	material_autorizado
					set	qt_solicitada		= qt_material_w,
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp()
					where	nr_sequencia		= nr_seq_mat_autor_w;
				end if;

				if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
					update	material_atend_paciente
					set	nr_seq_mat_autor  = nr_seq_mat_autor_w,
						dt_atualizacao 	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_material_p
					and	coalesce(nr_seq_mat_autor::text, '') = '';
				end if;


				if (ie_gerar_mat_esp_p = 'S') then
					gerar_autor_mat_esp(nr_atendimento_p,
							nr_seq_agenda_p,
							nr_seq_agenda_consulta_p,
							nr_prescricao_p,
							nr_seq_mat_prescr_p,
							nr_seq_mat_autor_w,
							nm_usuario_p,
							nr_seq_autor_mat_esp_w);

					if (nr_seq_autor_mat_esp_w IS NOT NULL AND nr_seq_autor_mat_esp_w::text <> '') then
						update	autorizacao_convenio
						set	nr_seq_autor_cirurgia 	= nr_seq_autor_mat_esp_w,
							dt_atualizacao 		= clock_timestamp(),
							nm_usuario		= nm_usuario_p
						where	nr_sequencia		= nr_sequencia_autor_w;
					end if;
				end if;

				if (cd_cgc_fornec_opme_w IS NOT NULL AND cd_cgc_fornec_opme_w::text <> '') then
					update	material_autorizado
					set	nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp(),
						cd_cgc_fabricante 	= cd_cgc_fornec_opme_w
					where	nr_sequencia		= nr_seq_mat_autor_w;
				end if;

				if (ie_obter_fornec_mat_autor_w = 'S') then
					select	obter_fornecedor_ultima_compra(cd_material_w,cd_estabelecimento_w)
					into STRICT	cd_cgc_fornec_w
					;

					if (cd_cgc_fornec_w IS NOT NULL AND cd_cgc_fornec_w::text <> '') then
						update	material_autorizado
						set	cd_cgc_fabricante	= cd_cgc_fornec_w,
							nm_usuario		= nm_usuario_p,
							dt_atualizacao		= clock_timestamp()
						where	nr_sequencia		= nr_seq_mat_autor_w;
					end if;
				end if;

				/* Ronaldo 30/11/2011 Inseri para calcular o preco quando trocar de fornecedor e somente atualizar a quantidade quando tratar do mesmo item (sequencia) */

				if (ie_obter_preco_mat_autor_w = 'C') then
					ds_retorno_w := atualizar_preco_mat_aut_conv(null, nr_seq_mat_autor_w, cd_estabelecimento_w, nm_usuario_p, ds_retorno_w);
				elsif (ie_obter_preco_mat_autor_w = 'U') then
					vl_preco_unitario_w	:= obter_valor_ultima_compra(cd_estabelecimento_w,null,cd_material_w,null,'N');

					if (vl_preco_unitario_w > 0) then
						update	material_autorizado
						set	vl_unitario	= vl_preco_unitario_w,
							dt_atualizacao 	= clock_timestamp(),
							nm_usuario	= nm_usuario_p
						where	nr_sequencia	= nr_seq_mat_autor_w;
					end if;
				end if;

				if (ie_gerar_vl_cotado_opme_w = 'S') and (vl_cotado_w > 0) then

					if (coalesce(ie_regra_acresc_mat_autor_w,'N') = 'S') then

						update	material_autorizado
						set	vl_unitario	= CASE WHEN coalesce(ie_origem_preco,6)=6 THEN CASE WHEN ie_reducao_acrescimo='R' THEN										(coalesce(vl_cotado_w,0) - (coalesce(vl_cotado_w,0)  * coalesce(pr_adicional/100,0)))  ELSE (coalesce(vl_cotado_w,0)  + (coalesce(vl_cotado_w,0)  * coalesce(pr_adicional/100,0))) END   ELSE coalesce(vl_cotado_w,0) END ,
							dt_atualizacao 	= clock_timestamp(),
							nm_usuario	= nm_usuario_p
						where	nr_sequencia	= nr_seq_mat_autor_w
						and	((ie_origem_preco = 6) or (coalesce(ie_origem_preco,0) = 0));
					else
						update	material_autorizado
						set	vl_unitario	= coalesce(vl_cotado_w,0),
							ie_origem_preco   = 8,
							dt_atualizacao 	= clock_timestamp(),
							nm_usuario	= nm_usuario_p
						where	nr_sequencia	= nr_seq_mat_autor_w;
					end if;

				end if;

				if (qt_sobra_nova_autor_w > 0)and (ie_atual_qt_solic_autor_w = 'S')then
					Duplicar_Autorizacao_conv_mat(nr_sequencia_autor_w, cd_material_w, qt_sobra_nova_autor_w,nr_prescricao_p,nr_seq_mat_prescr_p,nm_usuario_p);
				end if;
			end if;

		end if;
 	end if;
end if;

if	((ie_atualiza_autor_convenio_w = 'S') or (nr_seq_proc_prescr_p IS NOT NULL AND nr_seq_proc_prescr_p::text <> '')) and (nr_seq_estagio_w IS NOT NULL AND nr_seq_estagio_w::text <> '') and (nr_sequencia_autor_w > 0) then
	CALL atualizar_autorizacao_convenio(nr_sequencia_autor_w,nm_usuario_p,nr_seq_estagio_w,'N','N','S');
end if;

/*lhalves OS288817 em 15/02/2011*/

if (coalesce(ie_equip_agenda_w,'N') = 'S') and (coalesce(nr_seq_agenda_p,0) > 0) then

	CALL gerar_autor_equipamento_agenda(nr_seq_agenda_p,nr_atendimento_p,nr_seq_regra_p,nm_usuario_p);
end if;

--if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
select	count(a.nr_sequencia)
into STRICT  qt_autor_total_w
from  autorizacao_convenio a
where a.nr_prescricao 			= nr_prescricao_p;

select count(b.nr_sequencia)
into STRICT  qt_proc_autor_total_w
from  procedimento_autorizado b
where b.nr_prescricao = nr_prescricao_p;

--so consideramos se for prescricao e se eh uma nova autorizacao desdobrada desconsideramos a regra de quantidade.
if (ie_evento_w = 'LP'  and (ie_criou_nova_autor_w = 'N' or qt_autor_total_w = 1 and qt_proc_autor_total_w = 1)) then
	 CALL gerar_autor_quantidade(nm_usuario_p, nr_atendimento_p, nr_sequencia_autor_w, nr_seq_proc_autor_w, cd_convenio_w, cd_estabelecimento_w, nr_seq_setor_proc_prescr_w, nr_prescricao_p, qt_autor_total_w, qt_proc_autor_total_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_autor_atendimento (( nr_atendimento_p bigint, nr_seq_material_p bigint, nr_seq_proced_p bigint, nr_prescricao_p bigint, nr_seq_mat_prescr_p bigint, nr_seq_proc_prescr_p bigint, nr_seq_regra_p bigint, dt_inicio_vigencia_p timestamp, nm_usuario_p text, nr_seq_agenda_p bigint, nr_seq_proc_interno_p bigint, nr_seq_autor_gerada_p out bigint, ie_nova_autorizacao_p text, nr_seq_agenda_consulta_p bigint, nr_seq_agenda_pac_opme_p bigint, ie_resp_autor_p text, ie_autor_particular_p text, nr_seq_agenda_proc_p bigint, ie_gerar_mat_esp_p text, nr_seq_regra_plano_proc_p bigint, ds_observacao_regra_item_p text, nr_seq_regra_plano_mat_p bigint, nr_seq_proc_orcamento_p text default '', nr_seq_mat_orcamento_p text default '', nr_seq_parametro3_p text default '', nr_seq_gestao_p bigint default null) is cd_convenio_w bigint) FROM PUBLIC;

