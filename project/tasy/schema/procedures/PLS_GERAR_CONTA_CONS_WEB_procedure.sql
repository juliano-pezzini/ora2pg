-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_conta_cons_web ( nr_sequencia_p pls_conta.nr_sequencia%type, ie_tipo_guia_p pls_conta.ie_tipo_guia%type, nr_seq_clinica_p pls_conta.nr_seq_clinica%type, ie_regime_internacao_p pls_conta.ie_regime_internacao%type, ie_carater_internacao_p pls_conta.ie_carater_internacao%type, nr_seq_tipo_acomodacao_p pls_conta.nr_seq_tipo_acomodacao%type, ie_indicacao_acidente_p pls_conta.ie_indicacao_acidente%type, nr_seq_saida_int_p pls_conta.nr_seq_saida_int%type, dt_entrada_p pls_conta.dt_entrada%type, dt_alta_p pls_conta.dt_alta%type, nr_seq_prestador_atend_p pls_protocolo_conta.nr_seq_prestador%type, nr_seq_prestador_exec_p pls_conta.nr_seq_prestador_exec%type, nr_seq_segurado_p pls_conta.nr_seq_segurado%type, nr_seq_medico_solic_p pls_conta.cd_medico_solicitante%type, nr_seq_medico_exec_p pls_conta.cd_medico_executor%type, nr_seq_cbo_saude_p pls_conta.nr_seq_cbo_saude%type, ie_tipo_consulta_p pls_conta.ie_tipo_consulta%type, nr_seq_saida_consulta_p pls_conta.nr_seq_saida_consulta%type, dt_emissao_p pls_conta.dt_emissao%type, cd_guia_p pls_conta.cd_guia%type, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, cd_doenca_p pls_diagnostico_conta.cd_doenca%type, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_tipo_atendimento_p pls_conta.nr_seq_tipo_atendimento%type, nr_seq_saida_spsadt_p pls_conta.nr_seq_saida_spsadt%type, ie_tipo_doenca_p pls_diagnostico_conta.ie_tipo_doenca%type, ds_indicacao_clinica_p pls_conta.ds_indicacao_clinica%type, nr_seq_prestador_p pls_conta.nr_seq_prestador%type, qt_max_contas_p bigint, nr_seq_conselho_exec_p pls_conta.nr_seq_conselho_exec%type, uf_crm_exec_p pls_conta.uf_crm_exec%type, nr_crm_exec_p pls_conta.nr_crm_exec%type, nr_seq_grau_partic_p pls_conta.nr_seq_grau_partic%type, qt_obito_tardio_p pls_conta.qt_obito_tardio%type, qt_obito_precoce_p pls_conta.qt_obito_precoce%type, qt_nasc_mortos_p pls_conta.qt_nasc_mortos%type, qt_nasc_vivos_prematuros_p pls_conta.qt_nasc_vivos_prematuros%type, nr_decl_nasc_vivo_p pls_diagnostico_nasc_vivo.nr_decl_nasc_vivo%type, nr_declaracao_obito_p pls_diagnost_conta_obito.nr_declaracao_obito%type, cd_doenca_obito_p pls_diagnost_conta_obito.cd_doenca%type, nr_seq_conta_ref_p pls_conta.nr_sequencia%type, nr_seq_prot_ref_p pls_protocolo_conta.nr_sequencia%type, qt_nasc_vivos_termo_p pls_conta.qt_nasc_vivos_termo%type, ie_obito_mulher_p pls_conta.ie_obito_mulher%type, ie_parto_cesaria_p pls_conta.ie_parto_cesaria%type, ie_complicacao_neonatal_p pls_conta.ie_complicacao_neonatal%type, ie_complicacao_puerperio_p pls_conta.ie_complicacao_puerperio%type, ie_parto_normal_p pls_conta.ie_parto_normal%type, ie_aborto_p pls_conta.ie_aborto%type, ie_gestacao_p pls_conta.ie_gestacao%type, ie_transtorno_p pls_conta.ie_transtorno%type, ie_atend_rn_sala_parto_p pls_conta.ie_atend_rn_sala_parto%type, ie_baixo_peso_p pls_conta.ie_baixo_peso%type, ie_importar_dados_guia_p text, nr_seq_guia_p pls_conta.nr_seq_guia%type, nm_recem_nasc_p pls_conta.nm_recem_nascido%type, dt_recem_nasc_p pls_conta.dt_nascimento%type, ie_recem_nascido_p pls_conta.ie_recem_nascido%type, nr_seq_usu_prestador_p bigint, nr_seq_protocolo_p INOUT pls_protocolo_conta.nr_sequencia%type, nr_seq_conta_p INOUT pls_conta.nr_sequencia%type, ie_importa_data_item_p text, cd_guia_prestador_p pls_conta.cd_guia%type, cd_cnes_p pls_conta.cd_cnes%type, nr_cartao_nac_sus_imp_p text, ds_observacao_p text, ie_tipo_faturamento_p pls_conta.ie_tipo_faturamento%type, nr_seq_conselho_solic_p pls_conta.nr_seq_conselho_solic%type, uf_crm_solic_imp_p pls_conta.uf_crm_solic_imp%type, dt_atendimento_p pls_conta.dt_atendimento_referencia%type, cd_medico_filtro_p text, nr_seq_grau_partic_filtro_p bigint, ie_gerar_partic_aut_p text, ie_existe_guia_ref_p INOUT text, nr_seq_cbo_saude_solic_p pls_conta.nr_seq_cbo_saude_solic%type default null, nr_crm_solic_imp_p pls_conta.nr_crm_solic_imp%type DEFAULT NULL, dt_fim_tratamento_p pls_conta.dt_fim_tratamento%type DEFAULT NULL, cd_tipo_atend_odont_p pls_conta.cd_tipo_atend_odont%type DEFAULT NULL, ie_cobertura_especial_p pls_conta.ie_cobertura_especial%type default null, ie_regime_atendimento_p pls_conta.ie_regime_atendimento%type default null, ie_saude_ocupacional_p pls_conta.ie_saude_ocupacional%type default null) AS $body$
DECLARE
				

/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Gerar a conta na digitacao de contas medicas no portal
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relat?rios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de aten??o:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Os parametros NR_DECL_NASC_VIVO_P, NR_DECLARACAO_OBITO_P e CD_DOENCA_OBITO_P nao sao mais utilizados.
Os mesmos apenas permanecem na Procedure para evitar conflito em caso do uso da mesma em outro local.
*/nr_seq_conta_w			bigint;
qt_diagnostico_conta_w		bigint;
cd_proc_mat_w			bigint;
qt_solicitada_w			pls_guia_plano_proc.qt_solicitada%type;
qt_autorizada_w			pls_guia_plano_proc.qt_autorizada%type;
ie_origem_proced_w		bigint;
ie_tipo_proc_w			varchar(2);
dt_liberacao_w			timestamp;
dt_realizacao_item_w		timestamp;
ie_status_w			varchar(1);
nm_usuario_liberacao_w		varchar(15);
ie_classificacao_proc_w		varchar(1);
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_guia_ww			pls_conta.nr_seq_guia%type;
cd_guia_w			varchar(20);
cd_guia_pesquisa_w		varchar(20);
cd_guia_ref_pesquisa_w		varchar(20);
cd_senha_w			pls_guia_plano.cd_senha%type;
dt_validade_senha_w		pls_guia_plano.dt_validade_senha%type;
dt_autorizacao_w		pls_guia_plano.dt_autorizacao%type;
dt_entrada_w			pls_conta.dt_entrada%type;
dt_alta_w			pls_conta.dt_alta%type;
ie_motivo_encerramento_w	pls_conta.ie_motivo_encerramento%type;
dt_entrada_ww			pls_conta.dt_entrada%type;
dt_alta_ww			pls_conta.dt_alta%type;
nr_seq_saida_int_w		pls_conta.nr_seq_saida_int%type;
nr_seq_item_tiss_w		pls_guia_plano_proc.nr_seq_item_tiss%type;


c01 CURSOR FOR
	SELECT	cd_procedimento cd_proc_mat,
		qt_solicitada,
		qt_autorizada,
		ie_origem_proced,
		'P'	ie_tipo_proc,
		dt_liberacao,
		ie_status ,
		nm_usuario_liberacao,
		nr_seq_item_tiss
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_w
	and	ie_status in ('L','S','P')
	and (SELECT ie_estagio from pls_guia_plano where nr_sequencia = nr_seq_guia_w)  in (5,6,10)
	
union

	select	nr_seq_material cd_proc_mat,
		qt_solicitada,
		qt_autorizada,
		null,
		'M'	ie_tipo_proc,
		dt_liberacao,
		ie_status ,
		nm_usuario_liberacao,
		nr_seq_item_tiss
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_w
	and	ie_status in ('L','S','P')
	and (select ie_estagio from pls_guia_plano where nr_sequencia = nr_seq_guia_w)  in (5,6,10)
	order by	2,1;


BEGIN

cd_guia_w := cd_guia_p;


nr_seq_protocolo_p := pls_gerar_protocolo_web(nr_seq_prestador_p, null, ie_tipo_guia_p, qt_max_contas_p, cd_estabelecimento_p, nm_usuario_p, 'S', nr_seq_prot_ref_p, nr_seq_usu_prestador_p, nr_seq_protocolo_p);


-- tratamento para data
if (coalesce(dt_entrada_p::text, '') = '') then

	dt_entrada_w := null;
else

	dt_entrada_w := to_date(to_char(dt_entrada_p, 'dd/mm/yyyy')|| ' ' || coalesce(to_char(dt_entrada_p, 'hh24:mi:ss'), '00:00:00'), 'dd/mm/yyyy hh24:mi:ss');
end if;

if (coalesce(dt_alta_p::text, '') = '') then

	dt_alta_w := null;
else

	dt_alta_w := to_date(to_char(dt_alta_p, 'dd/mm/yyyy')|| ' ' || coalesce(to_char(dt_alta_p, 'hh24:mi:ss'), '00:00:00'), 'dd/mm/yyyy hh24:mi:ss');
end if;

if (coalesce(nr_sequencia_p::text, '') = '') then

	select	nextval('pls_conta_seq')
	into STRICT	nr_seq_conta_w
	;

	cd_guia_pesquisa_w := elimina_caracteres_especiais(cd_guia_p);
	cd_guia_ref_pesquisa_w := elimina_caracteres_especiais(cd_guia_referencia_p);

	nr_seq_conta_p := nr_seq_conta_w;

	select	max(nr_sequencia)
	into STRICT	nr_seq_guia_w
	from	pls_guia_plano
	where	nr_sequencia = nr_seq_guia_p
	and 	ie_tipo_guia = CASE WHEN ie_tipo_guia_p='4' THEN '2' WHEN ie_tipo_guia_p='5' THEN '1'  ELSE '3' END
        and	ie_estagio in (5,6,10);

	if ((cd_guia_w IS NOT NULL AND cd_guia_w::text <> '') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') and ie_importar_dados_guia_p = 'S') then
		begin
			select	cd_senha,
				dt_validade_senha,
				dt_autorizacao
			into STRICT	cd_senha_w,
				dt_validade_senha_w,
				dt_autorizacao_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_w;
		exception
		when others then
			cd_senha_w := null;
			dt_validade_senha_w := null;
			dt_autorizacao_w := null;
		end;
	end if;



	insert into pls_conta(nr_sequencia, nr_seq_protocolo, nr_seq_prestador,
		nr_seq_segurado, cd_medico_solicitante, cd_medico_executor,
		nr_seq_prestador_exec, nr_seq_cbo_saude, ie_tipo_consulta,
		nr_seq_saida_consulta, nm_usuario, dt_atualizacao,
		nm_usuario_nrec, dt_atualizacao_nrec, dt_emissao,
		ie_tipo_guia, cd_guia, cd_guia_referencia,
		cd_estabelecimento,nr_seq_clinica, ie_regime_internacao,
		ie_carater_internacao, nr_seq_tipo_acomodacao, ie_indicacao_acidente,
		nr_seq_saida_int, dt_entrada, dt_alta,
		nr_seq_tipo_atendimento, nr_seq_saida_spsadt, ie_tipo_doenca,
		ds_indicacao_clinica, ie_status, nr_seq_conselho_exec,
		uf_crm_exec, nr_crm_exec ,nr_seq_grau_partic,
		qt_obito_tardio, qt_obito_precoce, qt_nasc_mortos,
		qt_nasc_vivos_prematuros, ie_origem_conta, nr_seq_conta_referencia,
		qt_nasc_vivos_termo, ie_obito_mulher, ie_parto_cesaria,
		ie_complicacao_neonatal, ie_complicacao_puerperio, ie_parto_normal,
		ie_aborto, ie_gestacao, ie_transtorno,
		ie_atend_rn_sala_parto, ie_baixo_peso, nr_seq_guia,
		nm_recem_nascido, dt_nascimento, ie_recem_nascido,
		cd_guia_pesquisa, cd_guia_ref_pesquisa, cd_guia_prestador,
		cd_cnes, nr_cartao_nac_sus_imp, ds_observacao,
		ie_tipo_faturamento, nr_seq_conselho_solic, uf_crm_solic_imp,
		cd_senha, dt_validade_senha, dt_autorizacao, dt_atendimento,
		nr_seq_cbo_saude_solic, nr_crm_solic_imp, dt_fim_tratamento,
		cd_tipo_atend_odont, ie_cobertura_especial, ie_regime_atendimento,
		ie_saude_ocupacional)
	values (nr_seq_conta_w, nr_seq_protocolo_p, nr_seq_prestador_atend_p,
		nr_seq_segurado_p, nr_seq_medico_solic_p, nr_seq_medico_exec_p,
		nr_seq_prestador_exec_p, nr_seq_cbo_saude_p, ie_tipo_consulta_p,
		nr_seq_saida_consulta_p, nm_usuario_p, clock_timestamp(),
		nm_usuario_p, clock_timestamp(), dt_emissao_p,
		ie_tipo_guia_p, cd_guia_p, cd_guia_referencia_p,
		cd_estabelecimento_p, nr_seq_clinica_p, ie_regime_internacao_p,
		ie_carater_internacao_p, nr_seq_tipo_acomodacao_p, ie_indicacao_acidente_p,
		nr_seq_saida_int_p,
		dt_entrada_w,
		dt_alta_w,
		nr_seq_tipo_atendimento_p, nr_seq_saida_spsadt_p, ie_tipo_doenca_p,
		ds_indicacao_clinica_p, 'U', nr_seq_conselho_exec_p,
		uf_crm_exec_p, nr_crm_exec_p, nr_seq_grau_partic_p,
		qt_obito_tardio_p, qt_obito_precoce_p, qt_nasc_mortos_p,
		qt_nasc_vivos_prematuros_p, 'P', nr_seq_conta_ref_p,
		qt_nasc_vivos_termo_p, ie_obito_mulher_p, ie_parto_cesaria_p,
		ie_complicacao_neonatal_p, ie_complicacao_puerperio_p, ie_parto_normal_p,
		ie_aborto_p, ie_gestacao_p, ie_transtorno_p,
		ie_atend_rn_sala_parto_p, ie_baixo_peso_p, nr_seq_guia_p,
		nm_recem_nasc_p, dt_recem_nasc_p, ie_recem_nascido_p,
		cd_guia_pesquisa_w, cd_guia_ref_pesquisa_w, cd_guia_prestador_p,
		cd_cnes_p, nr_cartao_nac_sus_imp_p, ds_observacao_p,
		ie_tipo_faturamento_p, nr_seq_conselho_solic_p, uf_crm_solic_imp_p,
		cd_senha_w, dt_validade_senha_w, dt_autorizacao_w, dt_atendimento_p,
		nr_seq_cbo_saude_solic_p, nr_crm_solic_imp_p, dt_fim_tratamento_p,
		cd_tipo_atend_odont_p, ie_cobertura_especial_p, ie_regime_atendimento_p, 
		ie_saude_ocupacional_p);


	if (cd_doenca_p IS NOT NULL AND cd_doenca_p::text <> '') then
		insert into pls_diagnostico_conta(nr_sequencia, nr_seq_conta, nm_usuario,
			dt_atualizacao,	nm_usuario_nrec, dt_atualizacao_nrec,
			cd_doenca, ie_classificacao)
		values (nextval('pls_diagnostico_conta_seq'), nr_seq_conta_w, nm_usuario_p,
			clock_timestamp(), nm_usuario_p, clock_timestamp(),
			upper(cd_doenca_p), 'P');
	end if;

	if (ie_tipo_guia_p = '5') then
		cd_guia_w := cd_guia_referencia_p;
	end if;

	-- Importa os itens da autorizacao
	if ((cd_guia_w IS NOT NULL AND cd_guia_w::text <> '') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') and ie_importar_dados_guia_p = 'S') then

		open c01;
		loop
		fetch c01 into
			cd_proc_mat_w,
			qt_solicitada_w,
			qt_autorizada_w,
			ie_origem_proced_w,
			ie_tipo_proc_w,
			dt_liberacao_w,
			ie_status_w,
			nm_usuario_liberacao_w,
			nr_seq_item_tiss_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			if (ie_importa_data_item_p = 'S') then
				dt_realizacao_item_w := dt_liberacao_w;
			else
				dt_realizacao_item_w := null;
			end if;

			if (ie_tipo_proc_w = 'P') then
				begin

				select	ie_classificacao
				into STRICT	ie_classificacao_proc_w
				from	procedimento
				where	cd_procedimento	= cd_proc_mat_w
				and	ie_origem_proced	= ie_origem_proced_w;
				exception
				when others then
					ie_classificacao_proc_w	:= '1';

				end;

				select	nextval('pls_conta_proc_seq')
				into STRICT	nr_seq_conta_proc_w
				;

				insert into pls_conta_proc(nr_sequencia, cd_procedimento, qt_procedimento_imp,
					 qt_procedimento,ie_status, dt_atualizacao,
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					 nr_seq_conta, ie_situacao, tx_item,
					 ie_origem_proced, ie_tipo_despesa, ie_estagio_complemento,
					 vl_adic_co, vl_adic_materiais,	vl_adic_procedimento,
					 vl_anestesista,vl_auxiliares,vl_beneficiario,
					 vl_coparticipacao,vl_co_ptu,vl_custo_operacional,
					 vl_exame_coleta,vl_glosa,vl_intercambio,
					 vl_liberado,vl_liberado_regra,vl_liquido,
					 vl_materiais,vl_material_ptu,vl_medico,
					 vl_pag_medico_conta,vl_participacao,vl_pcmso,
					 vl_prestador,vl_proc_copartic,vl_procedimento,
					 vl_procedimento_imp,vl_procedimento_ptu,vl_proc_unitario,
					 vl_saldo,vl_total_procedimento,vl_unitario,
					 vl_unitario_imp,dt_liberacao, nm_usuario_liberacao,
					 dt_procedimento)
				values (nr_seq_conta_proc_w, cd_proc_mat_w, qt_autorizada_w,
					qt_autorizada_w,'U', clock_timestamp(),
					nm_usuario_p, clock_timestamp(), nm_usuario_p,
					nr_seq_conta_w, 'D', 100,
					ie_origem_proced_w, ie_classificacao_proc_w, 3,
					0,0,0,
					0,0,0,
					0,0,0,
					0,0,0,
					0,0,0,
					0,0,0,
					0,0,0,
					0,0,0,
					0,0,0,
					0,0,0,
					0,dt_liberacao_w , nm_usuario_liberacao_w,
					dt_realizacao_item_w);

				CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_conta_proc_w, nm_usuario_p);
				CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_proc(nr_seq_conta_proc_w, nr_seq_item_tiss_w, null, nm_usuario_p);

				/* ie_gerar_partic_aut_p - Se refere ao parametro [22] - Permitir lancar o participante informado no filtro automaticamente ao lancar os itens*/

				if (ie_gerar_partic_aut_p = 'S' and ie_classificacao_proc_w = '1') then
					CALL pls_gerar_proc_partic_aut_web(nr_seq_conta_proc_w, cd_medico_filtro_p , nr_seq_grau_partic_filtro_p, nm_usuario_p);
				end if;
			end if;
			if (ie_tipo_proc_w = 'M') then

				select	nextval('pls_conta_mat_seq')
				into STRICT	nr_seq_conta_mat_w
				;

				insert into pls_conta_mat(nr_sequencia, nr_seq_material, qt_material_imp,
					qt_material, ie_status, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_conta, ie_situacao, ie_estagio_complemento,
					vl_adic_material,vl_beneficiario,vl_gerado,
					vl_glosa,vl_intercambio,vl_liberado,
					vl_liberado_regra,vl_mat_copartic,vl_material,
					vl_material_imp,vl_material_ptu,vl_participacao,
					vl_pcmso,vl_saldo,vl_unitario,
					vl_unitario_imp,dt_liberacao, nm_usuario_liberacao,
					dt_atendimento)
				values (nr_seq_conta_mat_w, cd_proc_mat_w, qt_autorizada_w,
					qt_autorizada_w,'U', clock_timestamp(),
					nm_usuario_p,clock_timestamp(), nm_usuario_p,
					nr_seq_conta_w,'D', 3,
					0,0,0,
					0,0,0,
					0,0,0,
					0,0,0,
					0,0,0,
					0,dt_liberacao_w , nm_usuario_liberacao_w,
					dt_realizacao_item_w);
				CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_mat(nr_seq_conta_mat_w, nm_usuario_p);
				CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_mat(nr_seq_conta_mat_w, nr_seq_item_tiss_w, null, nm_usuario_p);

			end if;

			end;
		end loop;
		close c01;

	end if;

	CALL pls_consistir_elegib_web(nr_seq_conta_w	, nm_usuario_p, cd_estabelecimento_p);
else
	nr_seq_conta_p := nr_sequencia_p;

	CALL pls_desfazer_consistir_conta(nr_sequencia_p, cd_estabelecimento_p, nm_usuario_p);

	update  pls_conta
	set     nr_seq_prestador  	= nr_seq_prestador_atend_p,
		nr_seq_segurado   	= nr_seq_segurado_p,
		cd_medico_solicitante   = nr_seq_medico_solic_p,
		cd_medico_executor	= nr_seq_medico_exec_p,
		nr_seq_prestador_exec   = nr_seq_prestador_exec_p,
		nr_seq_cbo_saude	= nr_seq_cbo_saude_p,
		ie_tipo_consulta	= ie_tipo_consulta_p,
		nr_seq_saida_consulta	= nr_seq_saida_consulta_p,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		ie_tipo_guia		= ie_tipo_guia_p,
		cd_guia			= cd_guia_p,
		cd_guia_referencia	= cd_guia_referencia_p,
		cd_estabelecimento	= cd_estabelecimento_p,
		nr_seq_clinica		= nr_seq_clinica_p,
		ie_regime_internacao	= ie_regime_internacao_p,
		ie_carater_internacao	= ie_carater_internacao_p,
		nr_seq_tipo_acomodacao  = nr_seq_tipo_acomodacao_p,
		ie_indicacao_acidente   = ie_indicacao_acidente_p,
		nr_seq_saida_int	= nr_seq_saida_int_p,
		dt_entrada		= dt_entrada_w,
		dt_alta			= dt_alta_w,
		nr_seq_tipo_atendimento = nr_seq_tipo_atendimento_p,
		nr_seq_saida_spsadt	= nr_seq_saida_spsadt_p,
		ie_tipo_doenca		= ie_tipo_doenca_p,
		ds_indicacao_clinica    = ds_indicacao_clinica_p,
		nr_seq_conselho_exec	= nr_seq_conselho_exec_p,
		uf_crm_exec		= uf_crm_exec_p,
		nr_crm_exec		= nr_crm_exec_p,
		dt_emissao		= dt_emissao_p,
		nr_seq_protocolo	= nr_seq_protocolo_p,
		nr_seq_grau_partic	= nr_seq_grau_partic_p,
		qt_obito_tardio		= qt_obito_tardio_p,
		qt_obito_precoce	= qt_obito_precoce_p,
		qt_nasc_mortos		= qt_nasc_mortos_p,
		qt_nasc_vivos_prematuros = qt_nasc_vivos_prematuros_p,
		qt_nasc_vivos_termo	= qt_nasc_vivos_termo_p,
		ie_obito_mulher		= ie_obito_mulher_p,
		ie_parto_cesaria	= ie_parto_cesaria_p,
		ie_complicacao_neonatal = ie_complicacao_neonatal_p,
		ie_complicacao_puerperio = ie_complicacao_puerperio_p,
		ie_parto_normal		= ie_parto_normal_p,
		ie_aborto		= ie_aborto_p,
		ie_gestacao		= ie_gestacao_p,
		ie_transtorno		= ie_transtorno_p,
		ie_atend_rn_sala_parto  = ie_atend_rn_sala_parto_p,
		ie_baixo_peso		= ie_baixo_peso_p,
		nm_recem_nascido	= nm_recem_nasc_p,
		dt_nascimento		= dt_recem_nasc_p,
		ie_recem_nascido	= ie_recem_nascido_p,
		cd_guia_prestador       = cd_guia_prestador_p,
		cd_cnes 		= cd_cnes_p,
		nr_cartao_nac_sus_imp 	= nr_cartao_nac_sus_imp_p,
		ds_observacao 		= ds_observacao_p,
		ie_tipo_faturamento 	= ie_tipo_faturamento_p,
		nr_seq_conselho_solic 	= nr_seq_conselho_solic_p,
		uf_crm_solic_imp 	= uf_crm_solic_imp_p,
		dt_atendimento 		= dt_atendimento_p,
		nr_seq_cbo_saude_solic 	= nr_seq_cbo_saude_solic_p,
		nr_crm_solic_imp	= nr_crm_solic_imp_p,
		dt_fim_tratamento	= dt_fim_tratamento_p,
		cd_tipo_atend_odont	= cd_tipo_atend_odont_p,
		ie_cobertura_especial = ie_cobertura_especial_p,
		ie_regime_atendimento = ie_regime_atendimento_p, 
		ie_saude_ocupacional = ie_saude_ocupacional_p
	where 	nr_sequencia     	= nr_sequencia_p;

	if (cd_doenca_p IS NOT NULL AND cd_doenca_p::text <> '') then
		select	count(1)
		into STRICT	qt_diagnostico_conta_w
		from	pls_diagnostico_conta
		where	nr_seq_conta	    = nr_sequencia_p;

		if (qt_diagnostico_conta_w = 0) then
			insert into pls_diagnostico_conta(nr_sequencia, nr_seq_conta, nm_usuario,
				dt_atualizacao,	nm_usuario_nrec, dt_atualizacao_nrec,
				cd_doenca, ie_classificacao)
			values (nextval('pls_diagnostico_conta_seq'), nr_sequencia_p, nm_usuario_p,
				clock_timestamp(), nm_usuario_p, clock_timestamp(),
				upper(cd_doenca_p), 'P');
		else
			update	pls_diagnostico_conta
			set	nr_seq_conta	    = nr_sequencia_p,
				nm_usuario	    = nm_usuario_p,
				dt_atualizacao	    = clock_timestamp(),
				cd_doenca	    = upper(cd_doenca_p)
			where	nr_seq_conta	    = nr_sequencia_p;
		end if;

	else
		delete  from pls_diagnostico_conta
		where	nr_seq_conta = nr_sequencia_p;
	end if;
end if;


-- se existe alguma conta com o mesmo nr_seq_guia, tenta pegar as inf de encerramento e faturamento

-- e importante fazer nesta parte, pois o nr_seq_guia pode ser alterado via trigger

-- levanta o nr_seq_guia final
select	max(a.nr_seq_guia),
	max(ie_motivo_encerramento),
	max(dt_entrada),
	max(dt_alta),
	max(nr_seq_saida_int)
into STRICT	nr_seq_guia_ww,
	ie_motivo_encerramento_w,
	dt_entrada_ww,
	dt_alta_ww,
	nr_seq_saida_int_w
from	pls_conta	a
where	a.nr_sequencia	= coalesce(nr_sequencia_p, nr_seq_conta_w); -- para os casos onde vem informado via parametro, ou e gerado conta nova

-- se encontrou um nr_seq_guia, e nao tem nenhum dos registros previamente informado, segue o processamento
if (nr_seq_guia_ww IS NOT NULL AND nr_seq_guia_ww::text <> '') and (coalesce(ie_motivo_encerramento_w::text, '') = '') and (coalesce(dt_entrada_ww::text, '') = '') and (coalesce(dt_alta_ww::text, '') = '') and (coalesce(nr_seq_saida_int_w::text, '') = '') then


	-- prioriza o resumo de internacao
	select	max(a.ie_motivo_encerramento),
		max(a.dt_entrada),
		max(a.dt_alta),
		max(a.nr_seq_saida_int)
	into STRICT	ie_motivo_encerramento_w,
		dt_entrada_ww,
		dt_alta_ww,
		nr_seq_saida_int_w
	from	pls_conta	a
	where	a.nr_sequencia	= (	SELECT	max(x.nr_sequencia)
					from	pls_conta		x,
						pls_protocolo_conta	y
					where	y.nr_sequencia		= x.nr_seq_protocolo
					and	x.nr_seq_guia		= nr_seq_guia_ww
					and	x.ie_tipo_guia		= 5
					and	y.ie_situacao		in ('D', 'T')
					and	x.nr_sequencia		!= coalesce(nr_sequencia_p, nr_seq_conta_w)
					and	x.ie_status		!= 'C'
					and	((x.ie_motivo_encerramento IS NOT NULL AND x.ie_motivo_encerramento::text <> '') or (x.dt_inicio_faturamento IS NOT NULL AND x.dt_inicio_faturamento::text <> '') or (x.dt_fim_faturamento IS NOT NULL AND x.dt_fim_faturamento::text <> '')));

	-- se nao encontrou, tenta ainda em SP/SADT
	if (coalesce(ie_motivo_encerramento_w::text, '') = '') and (coalesce(dt_entrada_ww::text, '') = '') and (coalesce(dt_alta_ww::text, '') = '') and (coalesce(nr_seq_saida_int_w::text, '') = '') then

		-- prioriza o resumo de internacao
		select	max(a.ie_motivo_encerramento),
			max(a.dt_entrada),
			max(a.dt_alta),
			max(a.nr_seq_saida_int)
		into STRICT	ie_motivo_encerramento_w,
			dt_entrada_ww,
			dt_alta_ww,
			nr_seq_saida_int_w
		from	pls_conta	a
		where	a.nr_sequencia	= (	SELECT	max(x.nr_sequencia)
						from	pls_conta		x,
							pls_protocolo_conta	y
						where	y.nr_sequencia		= x.nr_seq_protocolo
						and	x.nr_seq_guia		= nr_seq_guia_ww
						and	x.ie_tipo_guia		= 4
						and	y.ie_situacao		in ('D', 'T')
						and	x.nr_sequencia		!= coalesce(nr_sequencia_p, nr_seq_conta_w)
						and	x.ie_status		!= 'C'
						and	((x.ie_motivo_encerramento IS NOT NULL AND x.ie_motivo_encerramento::text <> '') or (x.dt_inicio_faturamento IS NOT NULL AND x.dt_inicio_faturamento::text <> '') or (x.dt_fim_faturamento IS NOT NULL AND x.dt_fim_faturamento::text <> '')));

	end if;


	-- se obteve algum registro, atualiza. Feito NVL para priorizar os registros ja existente, por seguranca
	update	pls_conta
	set	ie_motivo_encerramento	= coalesce(ie_motivo_encerramento, ie_motivo_encerramento_w),
		dt_entrada		= coalesce(dt_entrada, dt_entrada_ww),
		dt_alta			= coalesce(dt_alta, dt_alta_ww),
		nr_seq_saida_int	= coalesce(nr_seq_saida_int, nr_seq_saida_int_w)
	where	nr_sequencia		= coalesce(nr_sequencia_p, nr_seq_conta_w);

end if;

-- se a guia for de SP/SADT e necessario verificar se o cd_guia_referencia e valido. Esta validacao e utilizada para deixar, ou nao, o campo readonly no Portal
if (ie_tipo_guia_p = '4') then
	ie_existe_guia_ref_p	:= pls_obter_existe_guia_ref_web(cd_guia_referencia_p, nr_seq_segurado_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_conta_cons_web ( nr_sequencia_p pls_conta.nr_sequencia%type, ie_tipo_guia_p pls_conta.ie_tipo_guia%type, nr_seq_clinica_p pls_conta.nr_seq_clinica%type, ie_regime_internacao_p pls_conta.ie_regime_internacao%type, ie_carater_internacao_p pls_conta.ie_carater_internacao%type, nr_seq_tipo_acomodacao_p pls_conta.nr_seq_tipo_acomodacao%type, ie_indicacao_acidente_p pls_conta.ie_indicacao_acidente%type, nr_seq_saida_int_p pls_conta.nr_seq_saida_int%type, dt_entrada_p pls_conta.dt_entrada%type, dt_alta_p pls_conta.dt_alta%type, nr_seq_prestador_atend_p pls_protocolo_conta.nr_seq_prestador%type, nr_seq_prestador_exec_p pls_conta.nr_seq_prestador_exec%type, nr_seq_segurado_p pls_conta.nr_seq_segurado%type, nr_seq_medico_solic_p pls_conta.cd_medico_solicitante%type, nr_seq_medico_exec_p pls_conta.cd_medico_executor%type, nr_seq_cbo_saude_p pls_conta.nr_seq_cbo_saude%type, ie_tipo_consulta_p pls_conta.ie_tipo_consulta%type, nr_seq_saida_consulta_p pls_conta.nr_seq_saida_consulta%type, dt_emissao_p pls_conta.dt_emissao%type, cd_guia_p pls_conta.cd_guia%type, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, cd_doenca_p pls_diagnostico_conta.cd_doenca%type, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_tipo_atendimento_p pls_conta.nr_seq_tipo_atendimento%type, nr_seq_saida_spsadt_p pls_conta.nr_seq_saida_spsadt%type, ie_tipo_doenca_p pls_diagnostico_conta.ie_tipo_doenca%type, ds_indicacao_clinica_p pls_conta.ds_indicacao_clinica%type, nr_seq_prestador_p pls_conta.nr_seq_prestador%type, qt_max_contas_p bigint, nr_seq_conselho_exec_p pls_conta.nr_seq_conselho_exec%type, uf_crm_exec_p pls_conta.uf_crm_exec%type, nr_crm_exec_p pls_conta.nr_crm_exec%type, nr_seq_grau_partic_p pls_conta.nr_seq_grau_partic%type, qt_obito_tardio_p pls_conta.qt_obito_tardio%type, qt_obito_precoce_p pls_conta.qt_obito_precoce%type, qt_nasc_mortos_p pls_conta.qt_nasc_mortos%type, qt_nasc_vivos_prematuros_p pls_conta.qt_nasc_vivos_prematuros%type, nr_decl_nasc_vivo_p pls_diagnostico_nasc_vivo.nr_decl_nasc_vivo%type, nr_declaracao_obito_p pls_diagnost_conta_obito.nr_declaracao_obito%type, cd_doenca_obito_p pls_diagnost_conta_obito.cd_doenca%type, nr_seq_conta_ref_p pls_conta.nr_sequencia%type, nr_seq_prot_ref_p pls_protocolo_conta.nr_sequencia%type, qt_nasc_vivos_termo_p pls_conta.qt_nasc_vivos_termo%type, ie_obito_mulher_p pls_conta.ie_obito_mulher%type, ie_parto_cesaria_p pls_conta.ie_parto_cesaria%type, ie_complicacao_neonatal_p pls_conta.ie_complicacao_neonatal%type, ie_complicacao_puerperio_p pls_conta.ie_complicacao_puerperio%type, ie_parto_normal_p pls_conta.ie_parto_normal%type, ie_aborto_p pls_conta.ie_aborto%type, ie_gestacao_p pls_conta.ie_gestacao%type, ie_transtorno_p pls_conta.ie_transtorno%type, ie_atend_rn_sala_parto_p pls_conta.ie_atend_rn_sala_parto%type, ie_baixo_peso_p pls_conta.ie_baixo_peso%type, ie_importar_dados_guia_p text, nr_seq_guia_p pls_conta.nr_seq_guia%type, nm_recem_nasc_p pls_conta.nm_recem_nascido%type, dt_recem_nasc_p pls_conta.dt_nascimento%type, ie_recem_nascido_p pls_conta.ie_recem_nascido%type, nr_seq_usu_prestador_p bigint, nr_seq_protocolo_p INOUT pls_protocolo_conta.nr_sequencia%type, nr_seq_conta_p INOUT pls_conta.nr_sequencia%type, ie_importa_data_item_p text, cd_guia_prestador_p pls_conta.cd_guia%type, cd_cnes_p pls_conta.cd_cnes%type, nr_cartao_nac_sus_imp_p text, ds_observacao_p text, ie_tipo_faturamento_p pls_conta.ie_tipo_faturamento%type, nr_seq_conselho_solic_p pls_conta.nr_seq_conselho_solic%type, uf_crm_solic_imp_p pls_conta.uf_crm_solic_imp%type, dt_atendimento_p pls_conta.dt_atendimento_referencia%type, cd_medico_filtro_p text, nr_seq_grau_partic_filtro_p bigint, ie_gerar_partic_aut_p text, ie_existe_guia_ref_p INOUT text, nr_seq_cbo_saude_solic_p pls_conta.nr_seq_cbo_saude_solic%type default null, nr_crm_solic_imp_p pls_conta.nr_crm_solic_imp%type DEFAULT NULL, dt_fim_tratamento_p pls_conta.dt_fim_tratamento%type DEFAULT NULL, cd_tipo_atend_odont_p pls_conta.cd_tipo_atend_odont%type DEFAULT NULL, ie_cobertura_especial_p pls_conta.ie_cobertura_especial%type default null, ie_regime_atendimento_p pls_conta.ie_regime_atendimento%type default null, ie_saude_ocupacional_p pls_conta.ie_saude_ocupacional%type default null) FROM PUBLIC;

