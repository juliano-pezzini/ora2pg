-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_devolucao_lote ( nr_lote_p bigint, cd_setor_usuario_p bigint, ie_opcao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

 
/* 
ie_opcao_p 
G = Gerar 
B = Baixar 
*/
 
 
qt_itens_lote_w			integer;
qt_itens_lote_ww		integer;
nr_prescricao_w			bigint;
nr_atendimento_w		bigint;
ie_setor_usuario_w		varchar(1);
ie_mat_setor_dif_dev_w		varchar(1);
qt_dias_dev_w			integer;
qt_minutos_dev_w		integer;
qt_minutos_dev_ww		timestamp;
ie_baixa_pac_alta_w		varchar(1);
ie_pac_alta_w			varchar(1);
cd_material_w			bigint;
qt_material_w			double precision;
nr_devolucao_w			bigint;
cd_tipo_baixa_w			varchar(5);
ie_periodo_auditoria_w		varchar(1);
nr_seq_atendimento_w		bigint;
dt_atend_farmacia_w		timestamp;
ie_status_lote_w		varchar(2);
dt_liberacao_baixa_w		timestamp;
ie_permite_baixa_w		varchar(1);
cd_perfil_ativo_w		integer;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;

ds_retorno_w			varchar(255) := '';
ds_erro_w			varchar(255) := '0';

C01 CURSOR FOR 
	SELECT	a.cd_material 
	FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and a.nr_atendimento = nr_atendimento_w and a.nr_prescricao	= nr_prescricao_w and a.nr_seq_lote_ap = nr_lote_p   group by a.cd_material, 
		b.ds_material, 
		b.ie_consignado, 
		nr_atendimento 
	having sum(a.qt_material) > 0 
	order by ds_material;

C02 CURSOR FOR 
	SELECT	a.nr_devolucao, 
		a.nr_seq_atendimento 
	from	item_devolucao_material_pac a, 
		devolucao_material_pac b 
	where	a.nr_seq_lote = nr_lote_p 
	and	coalesce(a.dt_recebimento::text, '') = '' 
	and	(b.dt_liberacao_baixa IS NOT NULL AND b.dt_liberacao_baixa::text <> '') 
	and	a.nr_prescricao = nr_prescricao_w 
	and	b.nr_devolucao = a.nr_devolucao;

BEGIN
cd_perfil_ativo_w := obter_perfil_ativo;
 
ie_baixa_pac_alta_w := Obter_Param_Usuario(42, 5, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, ie_baixa_pac_alta_w);
qt_dias_dev_w := Obter_Param_Usuario(42, 16, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, qt_dias_dev_w);
cd_tipo_baixa_w := obter_param_usuario(42, 22, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, cd_tipo_baixa_w);
ie_periodo_auditoria_w := obter_param_usuario(42, 25, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, ie_periodo_auditoria_w);
ie_mat_setor_dif_dev_w := Obter_Param_Usuario(42, 26, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, ie_mat_setor_dif_dev_w);
qt_minutos_dev_w := Obter_Param_Usuario(42, 50, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, qt_minutos_dev_w);
ie_setor_usuario_w := Obter_Param_Usuario(42, 64, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, ie_setor_usuario_w);
ie_permite_baixa_w := obter_param_usuario(42, 99, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, ie_permite_baixa_w);
 
begin 
select	nr_prescricao, 
	obter_atendimento_prescr(nr_prescricao) 
into STRICT	nr_prescricao_w, 
	nr_atendimento_w 
from	ap_lote 
where	nr_sequencia = nr_lote_p;
 
select	cd_estabelecimento 
into STRICT	cd_estabelecimento_w 
from	prescr_medica 
where	nr_prescricao = nr_prescricao_w;
exception 
	when others then 
	nr_prescricao_w := 0;
	nr_atendimento_w := 0;
	cd_estabelecimento_w := 0;
end;
 
if (cd_estabelecimento_p <> cd_estabelecimento_w) then 
	ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(312511);
end if;
 
if (ie_opcao_p = 'G') then 
 
	if (nr_prescricao_w > 0) and (nr_atendimento_w > 0) then 
		 
		if (ds_erro_w = '0') and (ie_setor_usuario_w = 'S') and (ie_mat_setor_dif_dev_w = 'N') then 
		 
			select	count(count(*)) 
			into STRICT	qt_itens_lote_ww 
			FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and a.nr_atendimento = nr_atendimento_w and a.nr_prescricao	= nr_prescricao_w and a.nr_seq_lote_ap = nr_lote_p   and not exists ( SELECT 1 from item_devolucao_material_pac where nr_seq_lote = nr_lote_p) and a.cd_setor_atendimento = cd_setor_usuario_p GROUP BY a.cd_material, 
				a.dt_atendimento, 
				a.cd_unidade_medida, 
				a.nr_sequencia_prescricao, 
				a.dt_entrada_unidade, 
				a.nr_sequencia, 
				a.cd_local_estoque, 
				a.nr_seq_lote_ap, 
				a.cd_setor_atendimento;
		 
			if (qt_itens_lote_ww = 0 HAVING	sum(a.qt_material) > 0 
			) then 
				ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278046);
			end if;
		 
		end if;
 
		if (ds_erro_w = '0') then 
		 
			select	coalesce(max(ie_status_lote),'A'), 
				max(dt_atend_farmacia) 
			into STRICT	ie_status_lote_w, 
				dt_atend_farmacia_w 
			from	ap_lote 
			where	nr_sequencia = nr_lote_p;
			 
			select	count(*) 
			into STRICT	qt_itens_lote_w 
			from	item_devolucao_material_pac 
			where	nr_seq_lote = nr_lote_p;
			 
			if (ie_status_lote_w in ('C','CA','G','S')) then 
				ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278047) || obter_valor_dominio(2116,ie_status_lote_w);
			end if;
			 
			if (coalesce(dt_atend_farmacia_w::text, '') = '') then 
				ds_erro_w := ds_erro_w || chr(13) || WHEB_MENSAGEM_PCK.get_texto(278048);
			end if;
			 
			if (qt_itens_lote_w > 0) then 
				ds_erro_w := ds_erro_w || chr(13) || WHEB_MENSAGEM_PCK.get_texto(278049);
			end if;
			 
		end if;
		 
		if (ds_erro_w = '0') and (qt_dias_dev_w > 0) then 
		 
			open C01;
			loop 
			fetch C01 into	 
				cd_material_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin 
		 
				select	count(count(*)) 
				into STRICT	qt_material_w 
				FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and a.nr_atendimento = nr_atendimento_w   and ((qt_material < 0) or (a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '') or (c.ie_atualiza_estoque = 'N' AND c.ie_conta_paciente = 'S')) and trunc(a.dt_atendimento + qt_dias_dev_w,'dd') >= trunc(clock_timestamp(),'dd') and a.cd_material = cd_material_w group by a.cd_material, 
					b.ds_material, 
					b.ie_consignado, 
					nr_atendimento 
				having sum(a.qt_material) > 0 
				order by ds_material;
				 
				if (qt_material_w = 0) then 
					ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278050);
					exit;
				end if;
		 
				end;
			end loop;
			close C01;
			 
		end if;
		 
		if (ds_erro_w = '0') then 
			 
			select	count(*) 
			into STRICT	qt_itens_lote_w 
			from (SELECT	c.nr_seq_material 
				from	ap_lote_item a, 
					ap_lote b, 
					prescr_mat_hor c 
				where	b.nr_sequencia = a.nr_seq_lote 
				and	b.nr_prescricao = c.nr_prescricao 
				and	a.nr_seq_mat_hor = c.nr_sequencia 
				and	a.nr_seq_lote = nr_lote_p 
				and	b.ie_status_lote not in ('G','CA','C','S') 
				and	a.qt_dispensar > 0 
				and	(b.dt_atend_farmacia IS NOT NULL AND b.dt_atend_farmacia::text <> '') 
				group by c.nr_seq_material) alias4;
 
			select	count(count(*)) 
			into STRICT	qt_itens_lote_ww 
			FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and a.nr_atendimento = nr_atendimento_w and a.nr_prescricao	= nr_prescricao_w and a.nr_seq_lote_ap = nr_lote_p   and not exists ( SELECT 1 from item_devolucao_material_pac where nr_seq_lote = nr_lote_p) GROUP BY a.cd_material, 
				a.cd_unidade_medida, 
				a.nr_sequencia_prescricao, 
				a.dt_entrada_unidade, 
				a.cd_local_estoque, 
				a.nr_seq_lote_ap, 
				a.cd_setor_atendimento;
 
			if (qt_itens_lote_w <> qt_itens_lote_ww HAVING	sum(a.qt_material) > 0 
			) or (qt_itens_lote_w = 0) or (qt_itens_lote_ww = 0) then 
				ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278051);
			end if;
		 
		end if;
 
	else 
 
		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278052);
 
	end if;
 
elsif (ie_opcao_p = 'B') then 
 
	if (ie_baixa_pac_alta_w = 'N') then 
	 
		select	obter_se_atendimento_alta(nr_atendimento_w) 
		into STRICT	ie_pac_alta_w 
		;
	 
		if (ie_pac_alta_w = 'S') then 
			ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278053);
		end if;
	end if;
 
	if (ds_erro_w = '0') and (coalesce(qt_minutos_dev_w,0) > 0) then 
	 
		select	count(*) 
		into STRICT	qt_itens_lote_w 
		from	atendimento_paciente 
		where	nr_atendimento = nr_atendimento_w 
		and	(dt_alta IS NOT NULL AND dt_alta::text <> '');
		 
		if (qt_itens_lote_w > 0) then 
 
			select (coalesce(dt_alta, clock_timestamp()) + qt_minutos_dev_w /1440) 
			into STRICT	qt_minutos_dev_ww 
			from	atendimento_paciente 
			where	nr_atendimento = nr_atendimento_w;
		 
			if (qt_minutos_dev_ww < clock_timestamp()) then 
				ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278054);
			end if;
		end if;
	 
	end if;
	 
	if (ds_erro_w = '0') and (ie_periodo_auditoria_w <> 'N') then 
		 
		open C02;
		loop 
		fetch C02 into	 
			nr_devolucao_w, 
			nr_seq_atendimento_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
		 
			ds_retorno_w := consistir_item_auditado(nr_devolucao_w, cd_tipo_baixa_w, nm_usuario_p, nr_seq_atendimento_w, ds_retorno_w);
			 
			if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then 
				ds_erro_w := ds_retorno_w;
				exit;
			end if;
			end;
		end loop;
		close C02;
	 
	end if;
	 
	if (ds_erro_w = '0') then 
	 
		open C02;
		loop 
		fetch C02 into	 
			nr_devolucao_w, 
			nr_seq_atendimento_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
		 
			select	dt_liberacao_baixa 
			into STRICT	dt_liberacao_baixa_w 
			from	devolucao_material_pac 
			where	nr_devolucao = nr_devolucao_w;
			 
			if (coalesce(dt_liberacao_baixa_w::text, '') = '') then 
				ds_retorno_w := WHEB_MENSAGEM_PCK.get_texto(278055);
			end if;
			 
			if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then 
				ds_erro_w := ds_retorno_w;
				exit;
			end if;
			 
			end;
		end loop;
		close C02;
	 
	end if;
	 
	if (ds_erro_w = '0') then 
	 
		select	count(*) 
		into STRICT	qt_itens_lote_w 
		from	item_devolucao_material_pac a, 
			devolucao_material_pac b 
		where	a.nr_seq_lote = nr_lote_p 
		and	(a.dt_recebimento IS NOT NULL AND a.dt_recebimento::text <> '') 
		and	a.nr_prescricao = nr_prescricao_w 
		and	b.nr_devolucao = a.nr_devolucao;
 
		if (qt_itens_lote_w > 0) then 
			ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278056);
		end if;
	 
	end if;
	 
	/* Buscar parametro da devolução e consistir se deve verificar se já existe devolução para o lote */
 
	if (ds_erro_w = '0') and (ie_permite_baixa_w = 'N') then 
	 
		select	count(*) 
		into STRICT	qt_itens_lote_w 
		from	item_devolucao_material_pac a, 
			devolucao_material_pac b 
		where	a.nr_seq_lote = nr_lote_p 
		and	b.nr_devolucao = a.nr_devolucao;
		 
		if (qt_itens_lote_w = 0) then 
			ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278057);
		end if;
	 
	end if;
	 
end if;
 
ds_erro_p := ds_erro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_devolucao_lote ( nr_lote_p bigint, cd_setor_usuario_p bigint, ie_opcao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

