-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE valida_qnt_agenda_emp ( cd_convenio_p bigint, cd_empresa_ref_p bigint, cd_pessoa_fisica_p text, dt_prevista_p timestamp, ds_retorno_p INOUT text , ie_encaixe_p text default 'N', cd_estabelecimento_p bigint default null) AS $body$
DECLARE


qtd_total_regra_w     	bigint;
ie_tipo_regra_w		varchar(5);
ie_funcionario_liberado_w	varchar(1);
ie_dentro_periodo_w	varchar(1);
qtd_sexo_masculino_w    bigint;
qt_checkup_lib_w	bigint;
qt_agenda_checkup_w	bigint;
qt_agendamento_w	bigint;
qt_funcionarios_liberados_w	bigint;
qt_cad_executivo_w	bigint;

qtd_total_em_w     	bigint;
qtd_total_en_w     	bigint;
qtd_total_fe_w     	bigint;
qtd_total_ma_w     	bigint;
qtd_total_tt_w     	bigint;
qt_reg_w		bigint;
cd_estabelecimento_w	bigint;
ie_encaixe_w		varchar(10);
ie_dia_semana_w		smallint;
nr_seq_tipo_checkup_w	bigint;
dt_inicial_w		timestamp;
dt_final_w		timestamp;

C01 CURSOR FOR
	SELECT 	coalesce(qt_maxima_dia,0),
		ie_regra,
		nr_seq_tipo_checkup
	from   	checkup_regra_agenda a
	where	coalesce(cd_estabelecimento,cd_estabelecimento_w)	= cd_estabelecimento_w
	and	    ((coalesce(ie_dia_semana,ie_dia_semana_w)	= ie_dia_semana_w) or
		 	 ((ie_dia_semana	= 9) and (pkg_date_utils.IS_BUSINESS_DAY(dt_prevista_p) = 1)))
	and	not exists (	SELECT	1
					from	CHECKUP_REGRA_AGENDA_EXECE x
					where	x.nr_seq_regra	= a.nr_sequencia
					and	x.cd_empresa_ref	= cd_empresa_ref_p)
	order by 2;


BEGIN
ds_retorno_p	:= null;
ie_encaixe_w	:= coalesce(ie_encaixe_p,'N');
ie_dia_semana_w	:= pkg_date_utils.get_WeekDay(dt_prevista_p);
dt_inicial_w	:= inicio_dia(trunc(dt_prevista_p));
dt_final_w	:= fim_dia(trunc(dt_prevista_p));



if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') and (cd_empresa_ref_p IS NOT NULL AND cd_empresa_ref_p::text <> '') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (dt_prevista_p IS NOT NULL AND dt_prevista_p::text <> '') then
	begin
	cd_estabelecimento_w	:= coalesce(cd_estabelecimento_p,wheb_usuario_pck.get_cd_estabelecimento);
	select  CASE WHEN coalesce(max(a.nr_sequencia),0)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_dentro_periodo_w
	from   	empresa_contrato_checkup a
	where   a.cd_empresa	= cd_empresa_ref_p
	and     a.cd_convenio	= cd_convenio_p
	and     dt_inicial_w between trunc(a.dt_inicial) and fim_dia(coalesce(a.dt_final,clock_timestamp()));
	
	
	if (ie_encaixe_w	= 'N') then
		select	count(*)
		into STRICT	qt_reg_w
		from	checkup
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	cd_estabelecimento = cd_estabelecimento_w
		and	dt_previsto	between dt_inicial_w and dt_final_w
		and	ie_encaixe = 'S';

		if (qt_reg_w	> 0) then
			ie_encaixe_w	:= 'S';
		end if;
	end if;
			
	select	count(*)
	into STRICT	qt_reg_w
	from	empresa_contrato_checkup a
	where   a.cd_empresa	= cd_empresa_ref_p
	and     a.cd_convenio	= cd_convenio_p;

	if (ie_dentro_periodo_w = 'N') and (qt_reg_w	> 0) then
		ds_retorno_p	:= substr(Wheb_mensagem_pck.get_texto(455994, 'EMPRESA=' || obter_nome_empresa_ref(cd_empresa_ref_p)),1,255);
	end if;
	
	open C01;
	loop
	fetch C01 into
		qtd_total_regra_w,
		ie_tipo_regra_w,
		nr_seq_tipo_checkup_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		if (ie_tipo_regra_w = 'EM') and (coalesce(ie_encaixe_w,'N')	= 'N') then /*empresa*/
			begin
			select 	count(*)
			into STRICT   	qtd_total_em_w
			from   	checkup c
			where  	c.cd_convenio          	= cd_convenio_p
			and    	c.cd_empresa_ref       	= cd_empresa_ref_p
			and    	c.dt_previsto between dt_inicial_w and dt_final_w
			and	(c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '')
			and	c.cd_estabelecimento	= cd_estabelecimento_w
			and coalesce(c.ie_exclusivo,'N') = 'N'
			and  	coalesce(c.dt_cancelamento::text, '') = '';

			if (qtd_total_regra_w <= qtd_total_em_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(249849);
				end if;
			end;
		end if;
	
		if (ie_tipo_regra_w = 'EN') and (ie_encaixe_w	= 'S') then /*encaixe*/
			begin
			select 	count(*)
			into STRICT   	qtd_total_en_w
			from   	checkup c
			where  	c.ie_encaixe       	= 'S'
			and    	c.dt_previsto between dt_inicial_w and dt_final_w
			and	(c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '')
			and	c.cd_estabelecimento	= cd_estabelecimento_w
			and coalesce(c.ie_exclusivo,'N') = 'N'
			and  	coalesce(c.dt_cancelamento::text, '') = '';

			if (qtd_total_regra_w <= qtd_total_en_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(249850);
				end if;
			end;
		end if;
	
		if (ie_tipo_regra_w = 'FE') and (Obter_Sexo_PF(cd_pessoa_fisica_p,'C') = 'F') and (coalesce(ie_encaixe_w,'N')	= 'N')	then /*feminino*/
			begin
			select 	count(*)
			into STRICT   	qtd_total_fe_w
			from   	pessoa_fisica p,
				checkup c
			where 	c.dt_previsto between dt_inicial_w and dt_final_w
			and	c.cd_pessoa_fisica	= p.cd_pessoa_fisica
			and    	p.ie_sexo		= 'F'
			and	(c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '')
			and	c.cd_estabelecimento	= cd_estabelecimento_w
			and coalesce(c.ie_exclusivo,'N') = 'N'
			and  	coalesce(c.dt_cancelamento::text, '') = '';

			if (qtd_total_regra_w <= qtd_total_fe_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(249837);
				end if;
			end;
		end if;	
		
		if (ie_tipo_regra_w = 'MA') and (Obter_Sexo_PF(cd_pessoa_fisica_p,'C') = 'M') and (coalesce(ie_encaixe_w,'N')	= 'N')	then /*Masculino*/
			begin
			select 	count(*)
			into STRICT   	qtd_total_fe_w
			from   	pessoa_fisica p,
				checkup c
			where 	c.dt_previsto between dt_inicial_w and dt_final_w
			and	c.cd_pessoa_fisica	= p.cd_pessoa_fisica
			and    	p.ie_sexo		= 'M'
			and	(c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '')
			and	c.cd_estabelecimento	= cd_estabelecimento_w
			and coalesce(c.ie_exclusivo,'N') = 'N'
			and  	coalesce(c.dt_cancelamento::text, '') = '';

			if (qtd_total_regra_w <= qtd_total_fe_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(249835);
				end if;
			end;
		end if;	
		
		if (ie_tipo_regra_w = 'TT') and (coalesce(ie_encaixe_w,'N')	= 'N') then /*total de agendas do dia*/
			begin
			select 	count(*)
			into STRICT   	qtd_total_tt_w
			from   	checkup c
			where 	c.dt_previsto between dt_inicial_w and dt_final_w
			and	(c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '')
			and	c.cd_estabelecimento	= cd_estabelecimento_w
			and coalesce(c.ie_exclusivo,'N') = 'N'
			and  	coalesce(c.dt_cancelamento::text, '') = '';

			if (qtd_total_regra_w <= qtd_total_tt_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(249839);
				end if;
			end;
		end if;	
		
		if (ie_tipo_regra_w = 'TC') and (coalesce(ie_encaixe_w,'N')	= 'N') then /*tipo de check-up*/
			begin
			select 	count(*)
			into STRICT   	qtd_total_tt_w
			from   	checkup c
			where 	c.dt_previsto between dt_inicial_w and dt_final_w
			and	(c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '')
			and	c.cd_estabelecimento	= cd_estabelecimento_w
			and	nr_seq_tipo_checkup	= nr_seq_tipo_checkup_w
			and coalesce(c.ie_exclusivo,'N') = 'N'
			and  	coalesce(c.dt_cancelamento::text, '') = '';

			if (qtd_total_regra_w <= qtd_total_tt_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(270207);
				end if;
			end;
		end if;	
		end;
	end loop;
	close C01;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE valida_qnt_agenda_emp ( cd_convenio_p bigint, cd_empresa_ref_p bigint, cd_pessoa_fisica_p text, dt_prevista_p timestamp, ds_retorno_p INOUT text , ie_encaixe_p text default 'N', cd_estabelecimento_p bigint default null) FROM PUBLIC;

