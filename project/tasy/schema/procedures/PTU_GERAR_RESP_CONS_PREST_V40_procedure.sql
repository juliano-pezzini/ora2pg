-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_resp_cons_prest_v40 ( nr_seq_consulta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_retorno_p INOUT bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar a transação PTU de resposta a uma consulta de dados de prestador, via SCS 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_alto_custo_w			varchar(255);
nm_prestador_w			varchar(40);
nm_prestador_ww			varchar(40);
sg_cons_prof_w			varchar(12);
ie_tipo_cliente_w		varchar(2);
uf_cons_prof_w			medico.uf_crm%type;
ie_inseriu_w			varchar(1)	:= 'N';
cd_cgc_cpf_w			bigint;
nr_cons_prof_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_requisicao_w		bigint;
nr_seq_execucao_w		bigint;
cd_prestador_w			integer;
cd_unimed_executora_w		smallint;
cd_unimed_beneficiario_w	smallint;
cd_unimed_prestador_w		smallint;
cd_especialidade_w		smallint;

C01 CURSOR FOR 
	SELECT	a.cd_pessoa_fisica, 
		SubStr(a.nm_pessoa_fisica,1,40), 
		d.nr_sequencia 
	FROM conselho_profissional c, medico b, pessoa_fisica a, pls_prestador d
LEFT OUTER JOIN pls_prestador_medico e ON (d.nr_sequencia = e.nr_seq_prestador)
WHERE a.cd_pessoa_fisica	= b.cd_pessoa_fisica and a.nr_seq_conselho	= c.nr_sequencia and d.cd_pessoa_fisica	= a.cd_pessoa_fisica  and (b.nr_crm		= nr_cons_prof_w	or coalesce(nr_cons_prof_w::text, '') = '') and (b.uf_crm		= uf_cons_prof_w 	or coalesce(uf_cons_prof_w::text, '') = '') and (c.sg_conselho		= sg_cons_prof_w	or coalesce(sg_cons_prof_w::text, '') = '') and (a.nr_cpf		= cd_cgc_cpf_w		or coalesce(cd_cgc_cpf_w::text, '') = '') and b.ie_situacao		= 'A' and d.ie_situacao		= 'A' and (e.ie_situacao		= 'A' or coalesce(e.ie_situacao::text, '') = '') and trunc(clock_timestamp(),'dd') between trunc(coalesce(e.dt_inclusao,clock_timestamp()),'dd') and fim_dia(coalesce(e.dt_exclusao,clock_timestamp())) and (upper(ELIMINA_ACENTOS(substr(a.nm_pessoa_fisica,1,255))) like upper(ELIMINA_ACENTOS('%'||nm_prestador_w||'%')) or coalesce(nm_prestador_w::text, '') = '') 
	 
union
 
	SELECT	cd_prestador, 
		substr(obter_dados_pf_pj(null, cd_cgc,'N'),1,40), 
		nr_sequencia 
	from	pls_prestador 
	where	ie_situacao		= 'A' 
	and (upper(elimina_acentos(substr(obter_dados_pf_pj(null, cd_cgc,'N'),1,255))) like upper(elimina_acentos('%'||nm_prestador_w||'%')) or coalesce(nm_prestador_w::text, '') = '') 
	and (cd_cgc			= cd_cgc_cpf_w		or coalesce(cd_cgc_cpf_w::text, '') = '') 
	order by 1;


BEGIN 
select	ie_tipo_cliente, 
	cd_unimed_executora, 
	cd_unimed_beneficiario, 
	nm_prestador, 
	cd_cgc_cpf, 
	sg_cons_profissional, 
	nr_cons_profissional, 
	uf_cons_profissional, 
	nr_seq_execucao 
into STRICT	ie_tipo_cliente_w, 
	cd_unimed_executora_w, 
	cd_unimed_beneficiario_w, 
	nm_prestador_w, 
	cd_cgc_cpf_w, 
	sg_cons_prof_w, 
	nr_cons_prof_w, 
	uf_cons_prof_w, 
	nr_seq_execucao_w 
from	ptu_consulta_prestador 
where	nr_sequencia	= nr_seq_consulta_p;
 
select	nextval('ptu_resp_consulta_prest_seq') 
into STRICT	nr_seq_retorno_p
;
 
insert	into ptu_resp_consulta_prest(nr_sequencia, 
	cd_transacao, 
	ie_tipo_cliente, 
	cd_unimed_executora, 
	nr_seq_execucao, 
	cd_unimed_beneficiario, 
	ie_confirmacao, 
	nr_seq_origem, 
	dt_atualizacao, 
	nm_usuario, 
	nr_seq_guia, 
	nr_seq_requisicao, 
	nm_usuario_nrec, 
	dt_atualizacao_nrec) 
values (nr_seq_retorno_p, 
	'00419', 
	ie_tipo_cliente_w, 
	cd_unimed_executora_w, 
	nr_seq_execucao_w, 
	cd_unimed_beneficiario_w, 
	'S', 
	nr_seq_retorno_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	nr_seq_retorno_p, 
	nr_seq_requisicao_w, 
	nm_usuario_p, 
	clock_timestamp());
 
begin 
	open C01;
	loop 
	fetch C01 into	 
		cd_prestador_w, 
		nm_prestador_ww, 
		nr_seq_prestador_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin	 
		select	max(a.cd_ptu) 
		into STRICT	cd_especialidade_w 
		from	pls_prestador_med_espec	b, 
			especialidade_medica	a 
		where	b.nr_seq_prestador	= nr_seq_prestador_w 
		and	a.cd_especialidade	= b.cd_especialidade 
		and	trunc(clock_timestamp(),'dd') between trunc(coalesce(b.dt_inicio_vigencia, clock_timestamp()), 'dd') and fim_dia(coalesce(b.dt_fim_vigencia, clock_timestamp()));
		 
		select	CASE WHEN ie_tipo_rede_min_ptu=1 THEN  3 WHEN ie_tipo_rede_min_ptu=3 THEN  1  ELSE 2 END  
		into STRICT	ie_alto_custo_w 
		from	pls_prestador 
		where	nr_sequencia	= nr_seq_prestador_w;
		 
		cd_unimed_prestador_w	:= cd_unimed_beneficiario_w;
 
		ie_inseriu_w	:= 'S';
		 
		insert	into ptu_resp_nomes_prest(nr_sequencia, 
			cd_unimed_prestador, 
			ie_alto_custo, 
			nm_prestador, 
			cd_prestador, 
			nr_seq_resp_prest, 
			dt_atualizacao, 
			nm_usuario, 
			cd_especialidade, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec) 
		values (nextval('ptu_resp_nomes_prest_seq'), 
			cd_unimed_prestador_w, 
			ie_alto_custo_w, 
			substr(nm_prestador_ww, 1, 40), 
			cd_prestador_w, 
			nr_seq_retorno_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_especialidade_w, 
			nm_usuario_p, 
			clock_timestamp());
		end;
	end loop;
	close C01;
exception 
when others then 
	update	ptu_resp_consulta_prest 
	set	ie_confirmacao	= 'N' 
	where	nr_sequencia	= nr_seq_retorno_p;
	 
	CALL ptu_inserir_inconsistencia(	null, 
					null, 
					5001, 
					'', 
					cd_estabelecimento_p, 
					nr_seq_retorno_p, 
					'CP', 
					'00419', 
					null, 
					null, 
					null, 
					nm_usuario_p);
	ie_inseriu_w	:= 'S';
end;
 
if (coalesce(ie_inseriu_w, 'N') = 'N') then 
	update	ptu_resp_consulta_prest 
	set	ie_confirmacao	= 'N' 
	where	nr_sequencia	= nr_seq_retorno_p;
	 
	CALL ptu_inserir_inconsistencia(	null, 
					null, 
					5001, 
					'', 
					cd_estabelecimento_p, 
					nr_seq_retorno_p, 
					'CP', 
					'00419', 
					null, 
					null, 
					null, 
					nm_usuario_p);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_resp_cons_prest_v40 ( nr_seq_consulta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_retorno_p INOUT bigint) FROM PUBLIC;

