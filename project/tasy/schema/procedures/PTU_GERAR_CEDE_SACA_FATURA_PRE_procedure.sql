-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_cede_saca_fatura_pre ( nr_seq_fatura_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_unimed_destino_w		varchar(4);
cd_unimed_origem_w		varchar(4);

--Variaveis do Cedente
cd_cnpj_cpf_cedente_w		varchar(14);
nm_cedente_w			pessoa_juridica.ds_razao_social%type;
cd_cep_cendente_w		varchar(15);
ds_endereco_cedente_w		varchar(40);
ds_endereco_compl_cedente_w	varchar(20);
ds_bairro_cedente_w		varchar(30);
ds_cidade_cedente_w		varchar(60);
sg_uf_cedente_w			pessoa_juridica.sg_estado%type;
cd_operadora_ans_cedente_w	varchar(20);
cd_inscricao_estadual_cedent_w	varchar(20);
nr_ddd_cedente_w		smallint;
nr_telefone_cedente_w		integer;
nr_fax_cedente_w		integer;
nr_endereco_cedente_w		varchar(6);

--variaveis do Sacado
cd_cnpj_cpf_sacado_w		varchar(14);
nm_sacado_w			pessoa_juridica.ds_razao_social%type;
cd_cep_sacado_w			varchar(8);
ds_endereco_sacado_w		varchar(40);
ds_endereco_compl_sacado_w	varchar(20);
ds_bairro_sacado_w		varchar(30);
ds_cidade_sacado_w		varchar(30);
sg_uf_sacado_w			pessoa_juridica.sg_estado%type;
cd_operadora_ans_sacado_w	varchar(10);
cd_inscricao_estadual_sacado_w	varchar(20);
nr_ddd_sacado_w			smallint;
nr_telefone_sacado_w		integer;
nr_fax_sacado_w			integer;
nr_endereco_sacado_w		varchar(6);


BEGIN

select	cd_unimed_destino,
	cd_unimed_origem
into STRICT	cd_unimed_destino_w,
	cd_unimed_origem_w
from	ptu_fatura_pre
where	nr_sequencia	= nr_seq_fatura_p;

/*Obter informacoes do cedente (unimed origem)*/
	
select	max(cd_cgc)
into STRICT	cd_cnpj_cpf_cedente_w
from	pls_congenere
where	cd_cooperativa	= cd_unimed_origem_w;

if (cd_cnpj_cpf_cedente_w IS NOT NULL AND cd_cnpj_cpf_cedente_w::text <> '') then
	select	substr(ds_razao_social,1,255),
		substr(cd_cep,1,8),
		substr(ds_endereco,1,40),
		substr(ds_complemento,1,20),
		substr(ds_bairro,1,30),
		substr(ds_municipio,1,30),
		sg_estado,
		substr(cd_ans,1,20),
		nr_inscricao_estadual,
		nr_ddd_telefone,
		somente_numero(substr(nr_telefone,1,8)),
		somente_numero(substr(nr_fax,1,8)),
		substr(nr_endereco,1,6)
	into STRICT	nm_cedente_w,
		cd_cep_cendente_w,
		ds_endereco_cedente_w,
		ds_endereco_compl_cedente_w,
		ds_bairro_cedente_w,
		ds_cidade_cedente_w,
		sg_uf_cedente_w,
		cd_operadora_ans_cedente_w,
		cd_inscricao_estadual_cedent_w,
		nr_ddd_cedente_w,
		nr_telefone_cedente_w,
		nr_fax_cedente_w,
		nr_endereco_cedente_w
	from	pessoa_juridica
	where	cd_cgc	= cd_cnpj_cpf_cedente_w;
	
	if (obter_se_somente_numero(cd_inscricao_estadual_cedent_w)= 'S') then
		cd_inscricao_estadual_cedent_w	:= ADICIONA_ZEROS_ESQUERDA(cd_inscricao_estadual_cedent_w,20);
	end if;
	
	if (coalesce(trim(both cd_inscricao_estadual_cedent_w)::text, '') = '') OR (upper(cd_inscricao_estadual_cedent_w) = 'ISENTO') then
		cd_inscricao_estadual_cedent_w	:= '00000000000000000000';
	end if;
	
	if (coalesce(nr_endereco_cedente_w::text, '') = '') then
		nr_endereco_cedente_w	:= 'S/N';
	end if;
	
	ds_endereco_cedente_w		:= elimina_acentos(ds_endereco_cedente_w);
	ds_endereco_cedente_w		:= replace(replace(replace(replace(ds_endereco_cedente_w,'/',' '),'c','c'),'C','C'),'-','');
	
	ds_endereco_compl_cedente_w	:= elimina_acentos(ds_endereco_compl_cedente_w);
	
	ds_bairro_cedente_w		:= elimina_acentos(ds_bairro_cedente_w);
	ds_bairro_cedente_w		:= replace(replace(replace(replace(ds_bairro_cedente_w,'/',' '),'c','c'),'C','C'),'-','');
	
	ds_cidade_cedente_w		:= elimina_acentos(ds_cidade_cedente_w);
	
	nm_cedente_w			:= elimina_acentos(nm_cedente_w);
	nm_cedente_w			:= Elimina_aspas(nm_cedente_w);
	nm_cedente_w			:= replace(replace(replace(replace(nm_cedente_w,'/',' '),'c','c'),'C','C'),'-','');
	cd_cep_cendente_w		:= replace(replace(cd_cep_cendente_w,'/',' '),'-','');
	
	insert into ptu_fatura_pre_sacado(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			nr_seq_fatura,ie_cedente_sacado,cd_cnpj_cpf,nm_cedente_sacado,cd_cep,
			ds_endereco,ds_endereco_compl,ds_bairro,ds_cidade,sg_uf,
			cd_operadora_ans,cd_inscricao_estadual,nr_ddd,nr_telefone,nr_fax,
			nr_endereco, tp_registro)
	values (	nextval('ptu_fatura_pre_sacado_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			nr_seq_fatura_p,1,cd_cnpj_cpf_cedente_w,nm_cedente_w,cd_cep_cendente_w,
			ds_endereco_cedente_w,ds_endereco_compl_cedente_w,ds_bairro_cedente_w,ds_cidade_cedente_w,sg_uf_cedente_w,
			cd_operadora_ans_cedente_w,cd_inscricao_estadual_cedent_w,nr_ddd_cedente_w,nr_telefone_cedente_w,nr_fax_cedente_w,
			nr_endereco_cedente_w, 10);
end if;

/*Obter informacoes do sacado (unimed destino)*/
	
select	max(cd_cgc)
into STRICT	cd_cnpj_cpf_sacado_w
from	pls_congenere
where	cd_cooperativa	= cd_unimed_destino_w;

if (cd_cnpj_cpf_sacado_w IS NOT NULL AND cd_cnpj_cpf_sacado_w::text <> '') then
	select	substr(ds_razao_social,1,255),
		substr(cd_cep,1,8),
		substr(ds_endereco,1,40),
		substr(ds_complemento,1,20),
		substr(ds_bairro,1,30),
		substr(ds_municipio,1,30),
		sg_estado,
		substr(cd_ans,1,20),
		nr_inscricao_estadual,
		nr_ddd_telefone,
		somente_numero(substr(nr_telefone,1,8)),
		somente_numero(substr(nr_fax,1,8)),
		substr(nr_endereco,1,6)
	into STRICT	nm_sacado_w,
		cd_cep_sacado_w,
		ds_endereco_sacado_w,
		ds_endereco_compl_sacado_w,
		ds_bairro_sacado_w,
		ds_cidade_sacado_w,
		sg_uf_sacado_w,
		cd_operadora_ans_sacado_w,
		cd_inscricao_estadual_sacado_w,
		nr_ddd_sacado_w,
		nr_telefone_sacado_w,
		nr_fax_sacado_w,
		nr_endereco_sacado_w
	from	pessoa_juridica
	where	cd_cgc	= cd_cnpj_cpf_sacado_w;
	
	if (obter_se_somente_numero(cd_inscricao_estadual_sacado_w)= 'S') then
		cd_inscricao_estadual_sacado_w	:= adiciona_zeros_esquerda(cd_inscricao_estadual_sacado_w,20);
	end if;
	
	if (coalesce(trim(both cd_inscricao_estadual_sacado_w)::text, '') = '') or (upper(cd_inscricao_estadual_sacado_w) = 'ISENTO') then
		cd_inscricao_estadual_sacado_w	:= '00000000000000000000';
	end if;
	
	if (coalesce(nr_endereco_sacado_w::text, '') = '') then
		nr_endereco_sacado_w	:= 'S/N';
	end if;
	
	ds_endereco_sacado_w		:= elimina_acentos(ds_endereco_sacado_w);
	ds_endereco_sacado_w		:= replace(replace(replace(replace(ds_endereco_sacado_w,'/',' '),'c','c'),'C','C'),'-','');
	
	ds_bairro_sacado_w		:= elimina_acentos(ds_bairro_sacado_w);
	ds_bairro_sacado_w		:= replace(replace(replace(replace(ds_bairro_sacado_w,'/',' '),'c','c'),'C','C'),'-','');
	
	ds_cidade_sacado_w		:= elimina_acentos(ds_cidade_sacado_w);
	ds_endereco_compl_sacado_w	:= elimina_acentos(ds_endereco_compl_sacado_w);
	
	nm_sacado_w			:= elimina_acentos(nm_sacado_w);
	nm_sacado_w			:= Elimina_aspas(nm_sacado_w);
	nm_sacado_w			:= replace(replace(replace(replace(nm_sacado_w,'/',' '),'c','c'),'C','C'),'-','');
	cd_cep_sacado_w			:= replace(replace(cd_cep_sacado_w,'/',' '),'-','');
	
	insert into ptu_fatura_pre_sacado(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			nr_seq_fatura,ie_cedente_sacado,cd_cnpj_cpf,nm_cedente_sacado,cd_cep,
			ds_endereco,ds_endereco_compl,ds_bairro,ds_cidade,sg_uf,
			cd_operadora_ans,cd_inscricao_estadual,nr_ddd,nr_telefone,nr_fax,
			nr_endereco, tp_registro)
	values (	nextval('ptu_fatura_pre_sacado_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			nr_seq_fatura_p,2,cd_cnpj_cpf_sacado_w,nm_sacado_w,cd_cep_sacado_w,
			ds_endereco_sacado_w,ds_endereco_compl_sacado_w,ds_bairro_sacado_w,ds_cidade_sacado_w,sg_uf_sacado_w,
			cd_operadora_ans_sacado_w,cd_inscricao_estadual_sacado_w,nr_ddd_sacado_w,nr_telefone_sacado_w,nr_fax_sacado_w,
			nr_endereco_sacado_w, 10);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_cede_saca_fatura_pre ( nr_seq_fatura_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

