-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_resumo_agente ( nr_cirurgia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_pepo_p bigint default 0) AS $body$
DECLARE


qt_velocidade_www		double precision;

qt_peso_paciente_w		double precision;
cd_material_w			integer;
ie_tipo_dosagem_w			varchar(10);
ie_tipo_dosagem_ww		varchar(10);
ie_modo_adm_w			varchar(5);
qt_velocidade_inf_w		double precision;
qt_velocidade_inf_ww		double precision;
dt_inicio_adm_w			timestamp;
dt_final_adm_w			timestamp;
nr_sequencia_w			bigint;
qt_dose_w			double precision;
cd_material_disp_w			integer;
cd_material_disp_ww		integer;
cd_unidade_disp_w			varchar(30);
cd_unidade_medida_w		varchar(30);
cd_unid_medida_adm_w		varchar(30);
ie_operacao_w			varchar(1);
cd_unidade_medida_consumo_w	varchar(30);
cd_unid_med_consumo_w		varchar(30);
qt_dose_total_w			double precision;
qt_dose_consumo_w		double precision;
cd_material_reconst_w		integer;
cd_unid_med_reconst_w		varchar(30);
qt_dose_reconst_w			double precision;
cd_material_diluicao_w		integer;
cd_unid_med_diluicao_w		varchar(30);
qt_dose_diluicao_w			double precision;
cd_material_rediluicao_w		integer;
cd_unid_med_rediluicao_w		varchar(30);
qt_dose_rediluicao_w		double precision;
qt_rediluir_w			double precision;
qt_dose_ml_medic_w		double precision;
qt_dose_ml_diluente_w		double precision;
qt_dose_ml_rediluente_w		double precision;
qt_volume_total_w			double precision;
qt_dose_medic_w			double precision;
qt_dose_medic_ml_w		double precision;
qt_volume_medic_w		double precision;
qt_volume_diluente_w		double precision;
cd_unid_med_cons_reconst_w	varchar(30);
cd_unid_med_cons_diluente_w	varchar(30);
cd_unid_med_cons_rediluente_w	varchar(30);
qt_temp_dose_w			double precision;
qt_dose_diluente_total_w		double precision;
qt_dose_medic_orig_w		double precision;
qt_temp_dose_medic_w		double precision;
ie_gerar_dilui_w			varchar(15);
qt_dose_disp_w			double precision;
qt_dose_ml_w			double precision;
qt_temp_red_dose_w		double precision;
qt_conversao_w			double precision;
cd_unid_med_adm_cont_w		varchar(30);
nr_seq_agente_w			bigint;
nr_seq_agente_ww			bigint;
nr_atendimento_w			bigint;
ie_consolidacao_generico_w		varchar(1);
qt_dose_mg_w			double precision;
ie_possui_conversao_ml_w		varchar(1);
ie_continuo_sem_ml_w		varchar(1);
cd_material_generico_w		integer;
cd_material_compo_w		integer;
cd_unid_med_compo_w		varchar(30);
qt_dose_compo_w			double precision;
cd_unid_med_cons_compo_w	varchar(30);
qt_dose_ml_compo_w		double precision;
ie_consumo_tempo_real_w		varchar(1);
nr_sequencia_ww			bigint;
qt_registro_w			bigint;
qt_material_disp_cons_w		double precision;
cd_material_estoque_w		integer;


qt_halog_ins_w				double precision;
nr_seq_ordem_w				smallint;
dt_inicio_adm_gas_w			timestamp;
dt_final_adm_gas_w			timestamp;
qt_velocidade_inf_gas_w		double precision;
ie_tipo_dosagem_gas_w		varchar(10);
qt_fluxo_gas_ml_w			double precision;
dt_final_adm_gas_quebra_w	timestamp;
dt_final_intervalo_w		timestamp;
dt_inicio_w					timestamp;
qt_ml_vapor_w_halog_w				real;
dt_inicio_intervalo_w		timestamp;
dt_fim_w					timestamp;
qt_tempo_w					double precision;
qt_consumo_ml_w				double precision;
dt_inicio_adm_halog_w	timestamp;
dt_final_adm_halog_w	timestamp;
qt_halog_ins_halog_w	double precision;
nr_seq_agente_halog_w	bigint;
ie_calc_halogenado_w	varchar(1);
ie_grafico_w			varchar(1);
cd_material_halog_w		bigint;
nr_seq_item_halog_w		bigint := 0;
qt_minutos_w		double precision;
qt_conv_unid_mil_item_w		double precision;
qt_conv_unid_int_item_w		double precision;
qt_utilizada_w				cirurgia_agente_anest_ocor.qt_utilizada%type;
nr_seq_agente_ocor_w		bigint;


c01 CURSOR FOR
SELECT	a.nr_sequencia,
	CASE WHEN ie_consolidacao_generico_w='S' THEN coalesce(b.cd_material_generico,b.cd_material)  ELSE a.cd_material END  cd_material,
	a.ie_tipo_dosagem,
	a.ie_modo_adm,
	a.cd_unidade_medida,
	a.cd_unid_medida_adm,
	SUBSTR(obter_dados_material_estab(b.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
	a.qt_dose,
	a.nr_seq_agente
FROM	material b,
	cirurgia_agente_anestesico a
WHERE	a.cd_material		= b.cd_material
AND	((a.nr_cirurgia 	= nr_cirurgia_p) OR (a.nr_seq_pepo = nr_seq_pepo_p))
AND	a.ie_tipo		IN (1,2,3)
AND	(((obter_se_agente_gas(nr_seq_agente) NOT IN ('G','LG')) or (obter_dados_agente(a.nr_seq_agente,'QVML') <> 0)) or (a.ie_terapia_atual = 'S'))
AND	coalesce(a.ie_situacao,'A') = 'A'
ORDER	BY a.nr_sequencia;

c02 CURSOR FOR
SELECT	coalesce(a.qt_velocidade_inf,0),
		a.dt_inicio_adm,
		a.dt_final_adm,
		coalesce(a.qt_dose,0),
		a.nr_sequencia
FROM	cirurgia_agente_anest_ocor a
WHERE	a.nr_seq_cirur_agente	= nr_sequencia_w
AND	coalesce(a.ie_situacao,'A') = 'A';

c03 CURSOR FOR
	SELECT	DISTINCT
			a.nr_seq_agente,
			a.nr_sequencia,
			CASE WHEN ie_consolidacao_generico_w='S' THEN coalesce(b.cd_material_generico,b.cd_material)  ELSE a.cd_material END  cd_material,
			SUBSTR(obter_dados_material_estab(b.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
			ie_operacao,
			coalesce(a.qt_dispensacao,1),
			b.cd_material_generico,
			0 nr_sequencia
	FROM material b, cirurgia_agente_disp a
LEFT OUTER JOIN cirurgia_agente_anestesico c ON (a.cd_material = c.cd_material AND a.nr_cirurgia = c.nr_cirurgia)
WHERE a.cd_material		= b.cd_material AND coalesce(ie_sem_disp,'N') <> 'S'   AND coalesce(a.nr_seq_agente::text, '') = '' AND (a.nr_cirurgia		= nr_cirurgia_p) AND ie_origem_gasto		= 0 AND coalesce(c.ie_situacao,'A') = 'A' AND ((coalesce(obter_se_agente_gas(c.nr_seq_agente)::text, '') = '') OR (obter_se_agente_gas(c.nr_seq_agente) NOT IN ('G','LG')) or (obter_dados_agente(c.nr_seq_agente,'QVML') <> 0))
	
UNION ALL

	SELECT	DISTINCT
			a.nr_seq_agente,
			a.nr_sequencia,
			CASE WHEN ie_consolidacao_generico_w='S' THEN coalesce(b.cd_material_generico,b.cd_material)  ELSE a.cd_material END  cd_material,
			SUBSTR(obter_dados_material_estab(b.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
			ie_operacao,
			coalesce(a.qt_dispensacao,1),
			b.cd_material_generico,
			0 nr_sequencia
	FROM material b, cirurgia_agente_disp a
LEFT OUTER JOIN cirurgia_agente_anestesico c ON (a.cd_material = c.cd_material AND a.nr_cirurgia = c.nr_cirurgia)
WHERE a.cd_material		= b.cd_material AND coalesce(ie_sem_disp,'N') <> 'S'   AND (a.nr_cirurgia		= nr_cirurgia_p) AND ie_origem_gasto		= 0 AND (a.nr_seq_agente IS NOT NULL AND a.nr_seq_agente::text <> '') AND coalesce(c.ie_situacao,'A') = 'A' AND ((coalesce(obter_se_agente_gas(c.nr_seq_agente)::text, '') = '') OR (obter_se_agente_gas(c.nr_seq_agente) NOT IN ('G','LG')) or (obter_dados_agente(c.nr_seq_agente,'QVML') <> 0))
	 
UNION ALL

		SELECT	DISTINCT
			a.nr_seq_agente,
			a.nr_sequencia,
			CASE WHEN ie_consolidacao_generico_w='S' THEN coalesce(b.cd_material_generico,b.cd_material)  ELSE a.cd_material END  cd_material,
			SUBSTR(obter_dados_material_estab(b.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
			ie_operacao,
			coalesce(a.qt_dispensacao,1),
			b.cd_material_generico,
			0 nr_sequencia
	FROM material b, cirurgia_agente_disp a
LEFT OUTER JOIN cirurgia_agente_anestesico c ON (a.cd_material = c.cd_material AND a.nr_cirurgia = c.nr_cirurgia)
WHERE a.cd_material		= b.cd_material AND coalesce(ie_sem_disp,'N') <> 'S'   AND coalesce(a.nr_seq_agente::text, '') = '' AND nr_seq_pepo_p > 0 AND (a.nr_cirurgia IN (SELECT x.nr_cirurgia FROM cirurgia x WHERE x.nr_seq_pepo = nr_seq_pepo_p)) AND ie_origem_gasto		= 0 AND coalesce(c.ie_situacao,'A') = 'A' AND ((coalesce(obter_se_agente_gas(c.nr_seq_agente)::text, '') = '') OR (obter_se_agente_gas(c.nr_seq_agente) NOT IN ('G','LG')) or (obter_dados_agente(c.nr_seq_agente,'QVML') <> 0))
	 
UNION ALL

	SELECT	DISTINCT
			a.nr_seq_agente,
			a.nr_sequencia,
			CASE WHEN ie_consolidacao_generico_w='S' THEN coalesce(b.cd_material_generico,b.cd_material)  ELSE a.cd_material END  cd_material,
			SUBSTR(obter_dados_material_estab(b.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
			ie_operacao,
			coalesce(a.qt_dispensacao,1),
			b.cd_material_generico,
			0 nr_sequencia
	FROM material b, cirurgia_agente_disp a
LEFT OUTER JOIN cirurgia_agente_anestesico c ON (a.cd_material = c.cd_material AND a.nr_cirurgia = c.nr_cirurgia)
WHERE a.cd_material		= b.cd_material AND coalesce(ie_sem_disp,'N') <> 'S'   AND nr_seq_pepo_p > 0 AND (a.nr_cirurgia IN (SELECT x.nr_cirurgia FROM cirurgia x WHERE x.nr_seq_pepo = nr_seq_pepo_p)) AND ie_origem_gasto		= 0 AND (a.nr_seq_agente IS NOT NULL AND a.nr_seq_agente::text <> '') AND coalesce(c.ie_situacao,'A') = 'A' AND ((coalesce(obter_se_agente_gas(c.nr_seq_agente)::text, '') = '') OR (obter_se_agente_gas(c.nr_seq_agente) NOT IN ('G','LG')) or (obter_dados_agente(c.nr_seq_agente,'QVML') <> 0));

c04 CURSOR FOR
SELECT	cd_material,
	SUM(coalesce(qt_dose,0)),
	cd_unidade_medida,
	cd_unid_med_consumo,
	ie_modo_adm,
	nr_seq_agente
FROM	w_agente_adm
WHERE	((nr_cirurgia		= nr_cirurgia_p) OR (nr_seq_pepo = nr_seq_pepo_p))
GROUP BY cd_unidade_medida,
	cd_material,
	cd_unid_med_consumo,
	ie_modo_adm,
	nr_seq_agente;

c05 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_material,
	a.qt_dose,
	a.nr_seq_agente
FROM	cirurgia_agente_anestesico a
WHERE	((a.nr_cirurgia 		= nr_cirurgia_p) OR (a.nr_seq_pepo = nr_seq_pepo_p))
AND	a.ie_tipo		= 4
AND	coalesce(a.ie_situacao,'A') = 'A'
ORDER	BY a.nr_sequencia;

C06 CURSOR FOR
	SELECT	DISTINCT
			a.nr_seq_agente,
			CASE WHEN ie_consolidacao_generico_w='S' THEN coalesce(b.cd_material_generico,b.cd_material)  ELSE a.cd_material END  cd_material
	FROM material b, cirurgia_agente_disp a
LEFT OUTER JOIN cirurgia_agente_anestesico c ON (a.cd_material = c.cd_material AND a.nr_cirurgia = c.nr_cirurgia)
WHERE a.cd_material		= b.cd_material AND coalesce(ie_sem_disp,'N') <> 'S'   AND coalesce(a.nr_seq_agente::text, '') = '' AND (a.nr_cirurgia		= nr_cirurgia_p) AND ie_origem_gasto		= 0 AND coalesce(c.ie_situacao,'A') = 'A' AND ((coalesce(obter_se_agente_gas(c.nr_seq_agente)::text, '') = '') OR (obter_se_agente_gas(c.nr_seq_agente) NOT IN ('G','LG')) or (obter_dados_agente(c.nr_seq_agente,'QVML') <> 0))
	
UNION ALL

	SELECT	DISTINCT
			a.nr_seq_agente,
			CASE WHEN ie_consolidacao_generico_w='S' THEN coalesce(b.cd_material_generico,b.cd_material)  ELSE a.cd_material END  cd_material
	FROM material b, cirurgia_agente_disp a
LEFT OUTER JOIN cirurgia_agente_anestesico c ON (a.cd_material = c.cd_material AND a.nr_cirurgia = c.nr_cirurgia)
WHERE a.cd_material		= b.cd_material AND coalesce(ie_sem_disp,'N') <> 'S'   AND (a.nr_cirurgia		= nr_cirurgia_p) AND ie_origem_gasto		= 0 AND (a.nr_seq_agente IS NOT NULL AND a.nr_seq_agente::text <> '') AND coalesce(c.ie_situacao,'A') = 'A' AND ((coalesce(obter_se_agente_gas(c.nr_seq_agente)::text, '') = '') OR (obter_se_agente_gas(c.nr_seq_agente) NOT IN ('G','LG')) or (obter_dados_agente(c.nr_seq_agente,'QVML') <> 0))
	 
UNION ALL

		SELECT	DISTINCT
			a.nr_seq_agente,
			CASE WHEN ie_consolidacao_generico_w='S' THEN coalesce(b.cd_material_generico,b.cd_material)  ELSE a.cd_material END  cd_material
	FROM material b, cirurgia_agente_disp a
LEFT OUTER JOIN cirurgia_agente_anestesico c ON (a.cd_material = c.cd_material AND a.nr_cirurgia = c.nr_cirurgia)
WHERE a.cd_material		= b.cd_material AND coalesce(ie_sem_disp,'N') <> 'S'   AND coalesce(a.nr_seq_agente::text, '') = '' AND nr_seq_pepo_p > 0 AND (a.nr_cirurgia IN (SELECT x.nr_cirurgia FROM cirurgia x WHERE x.nr_seq_pepo = nr_seq_pepo_p)) AND ie_origem_gasto		= 0 AND coalesce(c.ie_situacao,'A') = 'A' AND ((coalesce(obter_se_agente_gas(c.nr_seq_agente)::text, '') = '') OR (obter_se_agente_gas(c.nr_seq_agente) NOT IN ('G','LG')) or (obter_dados_agente(c.nr_seq_agente,'QVML') <> 0))
	 
UNION ALL

	SELECT	DISTINCT
			a.nr_seq_agente,
			CASE WHEN ie_consolidacao_generico_w='S' THEN coalesce(b.cd_material_generico,b.cd_material)  ELSE a.cd_material END  cd_material
	FROM material b, cirurgia_agente_disp a
LEFT OUTER JOIN cirurgia_agente_anestesico c ON (a.cd_material = c.cd_material AND a.nr_cirurgia = c.nr_cirurgia)
WHERE a.cd_material		= b.cd_material AND coalesce(ie_sem_disp,'N') <> 'S'   AND nr_seq_pepo_p > 0 AND (a.nr_cirurgia IN (SELECT x.nr_cirurgia FROM cirurgia x WHERE x.nr_seq_pepo = nr_seq_pepo_p)) AND ie_origem_gasto		= 0 AND (a.nr_seq_agente IS NOT NULL AND a.nr_seq_agente::text <> '') AND coalesce(c.ie_situacao,'A') = 'A' AND ((coalesce(obter_se_agente_gas(c.nr_seq_agente)::text, '') = '') OR (obter_se_agente_gas(c.nr_seq_agente) NOT IN ('G','LG')) or (obter_dados_agente(c.nr_seq_agente,'QVML') <> 0));



c07 CURSOR FOR
	SELECT	a.dt_inicio_adm,
		a.dt_final_adm,
		a.qt_halog_ins,
		b.nr_seq_agente,
		b.cd_material
	FROM	cirurgia_agente_anest_ocor a,
		cirurgia_agente_anestesico b,
		agente_anestesico c
	WHERE	a.nr_seq_cirur_agente	= b.nr_sequencia
	AND	b.nr_seq_agente			= c.nr_sequencia
	AND	coalesce(a.ie_situacao,'A') 	= 'A'
	AND	coalesce(b.ie_situacao,'A')  = 'A'
	AND	coalesce(c.ie_situacao,'A')  = 'A'
	AND	coalesce(a.ie_situacao,'A')  = 'A'
	AND	b.ie_tipo		IN (1)
	AND	((b.nr_cirurgia = nr_cirurgia_p) OR (b.nr_seq_pepo = nr_seq_pepo_p))
	AND	coalesce(c.ie_forma_farmaceutica,'NI') = 'LG'
	and (a.qt_halog_ins IS NOT NULL AND a.qt_halog_ins::text <> '')
	ORDER BY dt_inicio_adm,dt_final_adm;

C08 CURSOR FOR
	SELECT	coalesce(a.qt_velocidade_inf,0) qt_velocidade_inf,
		a.dt_inicio_adm,
		a.dt_final_adm,
		b.ie_tipo_dosagem ie_tipo_dosagem
	FROM	cirurgia_agente_anest_ocor a,
		cirurgia_agente_anestesico b,
		agente_anestesico c
	WHERE	a.nr_seq_cirur_agente	= b.nr_sequencia
	AND	b.nr_seq_agente		= c.nr_sequencia
	AND	coalesce(a.ie_situacao,'A') 	= 'A'
	AND	coalesce(b.ie_situacao,'A')  = 'A'
	AND	coalesce(c.ie_situacao,'A')  = 'A'
	AND	coalesce(a.ie_situacao,'A')  = 'A'

	AND	((b.nr_cirurgia = nr_cirurgia_p) OR (b.nr_seq_pepo = nr_seq_pepo_p))
	AND	coalesce(c.ie_forma_farmaceutica,'NI') <> 'LG'
	AND	coalesce(c.IE_CONSIDERA_CALC_HALOG,'N') = 'S'
	ORDER BY dt_inicio_adm,dt_final_adm;

c09 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(obter_dados_agente(nr_seq_agente,'QVML'),0),
		dt_inicio,
		dt_fim,
		qt_halog_ins,
		ie_tipo_dosagem,
		qt_velocidade_inf,
		nr_seq_agente,
		cd_material
	FROM	w_consumo_halogenado
	WHERE	((nr_cirurgia = nr_cirurgia_p) OR (nr_seq_pepo = nr_seq_pepo_p));

c10 CURSOR FOR
    SELECT 	sum(qt_consumo_ml),
	   		nr_seq_agente,
			cd_material
	from   	w_consumo_halogenado
	where	((nr_cirurgia = nr_cirurgia_p) or (nr_seq_pepo = nr_seq_pepo_p))
	group by cd_material, nr_seq_agente;

BEGIN

ie_gerar_dilui_w := Obter_Param_Usuario(872, 27, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_dilui_w);
ie_consolidacao_generico_w := Obter_Param_Usuario(872, 152, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consolidacao_generico_w);
ie_consumo_tempo_real_w := Obter_Param_Usuario(872, 330, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consumo_tempo_real_w);
ie_grafico_w := Obter_Param_Usuario(872, 431, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_grafico_w);
ie_calc_halogenado_w := Obter_Param_Usuario(872, 487, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_calc_halogenado_w);


SELECT	coalesce(MAX(qt_peso),0)
INTO STRICT	qt_peso_paciente_w
FROM	cirurgia
WHERE	((nr_cirurgia	=	nr_cirurgia_p) OR (nr_seq_pepo = nr_seq_pepo_p));

IF (qt_peso_paciente_w = 0) THEN
	SELECT	coalesce(MAX(nr_atendimento),0)
	INTO STRICT	nr_atendimento_w
	FROM 	cirurgia
	WHERE	((nr_cirurgia	=	nr_cirurgia_p) OR (nr_seq_pepo = nr_seq_pepo_p));

	if (nr_atendimento_w = 0) then
		SELECT	coalesce(MAX(nr_atendimento),0)
		INTO STRICT	nr_atendimento_w
		FROM 	pepo_cirurgia
		WHERE	nr_sequencia = nr_seq_pepo_p;
	end if;

	qt_peso_paciente_w := coalesce(obter_sinal_vital(nr_atendimento_w, 'Peso'),0);
END IF;

IF (nr_seq_pepo_p > 0 )THEN
	DELETE FROM w_resumo_agente WHERE nr_seq_pepo = nr_seq_pepo_p;
	DELETE FROM w_agente_adm WHERE nr_seq_pepo = nr_seq_pepo_p;

ELSE
	DELETE FROM w_resumo_agente WHERE nr_cirurgia = nr_cirurgia_p;
	DELETE FROM w_agente_adm WHERE nr_cirurgia = nr_cirurgia_p;
END IF;

COMMIT;

OPEN c01;
LOOP
FETCH c01 INTO
	nr_sequencia_w,
	cd_material_w,
	ie_tipo_dosagem_w,
	ie_modo_adm_w,
	cd_unidade_medida_w,
	cd_unid_medida_adm_w,
	cd_unidade_medida_consumo_w,
	qt_dose_medic_w,
	nr_seq_agente_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	qt_dose_total_w		:= 0;
	qt_velocidade_inf_w	:= 0;
	qt_velocidade_inf_ww	:= 0;
	qt_dose_w		:= 0;
	cd_material_disp_w	:= NULL;
	cd_unidade_disp_w	:= NULL;
	ie_continuo_sem_ml_w	:= 'N';

	SELECT	coalesce(obter_conversao_ml(cd_material_w, qt_dose_medic_w, coalesce(cd_unidade_medida_w, cd_unidade_medida_consumo_w)),0)
	INTO STRICT	qt_dose_medic_ml_w
	;

	BEGIN
	SELECT	a.cd_material,
		a.cd_unidade_medida,
		coalesce(a.qt_dose,0),
		SUBSTR(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo
	INTO STRICT	cd_material_reconst_w,
		cd_unid_med_reconst_w,
		qt_dose_reconst_w,
		cd_unid_med_cons_reconst_w
	FROM	material b,
		agente_anest_diluicao a
	WHERE	a.cd_material		= b.cd_material
	AND	ie_origem_inf		IN (1)
	AND	nr_seq_agente_cir	= nr_sequencia_w;
	EXCEPTION
	WHEN OTHERS THEN
		cd_material_reconst_w	:= 0;
	END;

	SELECT	coalesce(obter_conversao_ml(cd_material_reconst_w, qt_dose_reconst_w, cd_unid_med_reconst_w),0)
	INTO STRICT	qt_dose_ml_medic_w
	;

	IF (qt_dose_ml_medic_w = 0) AND (ie_modo_adm_w = 'CO') THEN
		qt_dose_ml_medic_w	:= qt_dose_medic_ml_w;
	END IF;

	BEGIN
	SELECT	a.cd_material,
			a.cd_unidade_medida,
			coalesce(a.qt_dose,0),
			SUBSTR(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo
	INTO STRICT	cd_material_diluicao_w,
			cd_unid_med_diluicao_w,
			qt_dose_diluicao_w,
			cd_unid_med_cons_diluente_w
	FROM	material b,
			agente_anest_diluicao a
	WHERE	a.cd_material		= b.cd_material
	AND		ie_origem_inf		= 2
	AND		nr_seq_agente_cir	= nr_sequencia_w;
	EXCEPTION
	WHEN OTHERS THEN
		cd_material_diluicao_w	:= 0;
	END;

	SELECT	coalesce(obter_conversao_ml(cd_material_diluicao_w, qt_dose_diluicao_w, cd_unid_med_diluicao_w),0)
	INTO STRICT	qt_dose_ml_diluente_w
	;

	BEGIN
	SELECT	a.cd_material,
			a.cd_unidade_medida,
			coalesce(a.qt_dose,0),
			coalesce(a.qt_rediluir,0),
			SUBSTR(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo
	INTO STRICT	cd_material_rediluicao_w,
		cd_unid_med_rediluicao_w,
		qt_dose_rediluicao_w,
		qt_rediluir_w,
		cd_unid_med_cons_rediluente_w
	FROM	material b,
		agente_anest_diluicao a
	WHERE	a.cd_material		= b.cd_material
	AND	ie_origem_inf		= 3
	AND	nr_seq_agente_cir	= nr_sequencia_w;
	EXCEPTION
	WHEN OTHERS THEN
		cd_material_rediluicao_w	:= 0;
		qt_rediluir_w			:= 0;
	END;

	BEGIN
	SELECT	a.cd_material,
		a.cd_unidade_medida,
		coalesce(a.qt_dose,0),
		SUBSTR(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo
	INTO STRICT	cd_material_compo_w,
		cd_unid_med_compo_w,
		qt_dose_compo_w,
		cd_unid_med_cons_compo_w
	FROM	material b,
		agente_anest_diluicao a
	WHERE	a.cd_material		= b.cd_material
	AND	ie_origem_inf		= 4
	AND	nr_seq_agente_cir	= nr_sequencia_w;
	EXCEPTION
	WHEN OTHERS THEN
		cd_material_compo_w	:= 0;
	END;

	SELECT	coalesce(obter_conversao_ml(cd_material_compo_w, qt_dose_compo_w, cd_unid_med_compo_w),0)
	INTO STRICT	qt_dose_ml_compo_w
	;


	qt_dose_diluente_total_w	:= qt_dose_ml_diluente_w;
	qt_dose_medic_orig_w		:= qt_dose_ml_medic_w;

	IF (qt_rediluir_w > 0) AND (ie_modo_adm_w = 'CO') THEN
		qt_dose_ml_diluente_w	:= qt_rediluir_w;
		qt_dose_ml_medic_w	:= 0;
	END IF;

	SELECT	coalesce(obter_conversao_ml(cd_material_rediluicao_w, qt_dose_rediluicao_w, cd_unid_med_rediluicao_w),0)
	INTO STRICT	qt_dose_ml_rediluente_w
	;

	qt_volume_total_w	:= qt_dose_ml_rediluente_w + qt_dose_ml_diluente_w + qt_dose_ml_medic_w;
	qt_volume_medic_w	:= qt_dose_ml_medic_w;
	qt_volume_diluente_w	:= qt_dose_ml_diluente_w;

	IF (qt_rediluir_w > 0) THEN
	 	qt_volume_diluente_w	:= dividir((qt_rediluir_w * qt_dose_diluente_total_w), (qt_dose_medic_orig_w  + qt_dose_diluente_total_w));
		qt_volume_medic_w	:= dividir((qt_rediluir_w * qt_dose_medic_orig_w), (qt_dose_medic_orig_w  + qt_dose_diluente_total_w));
	END IF;

	OPEN c02;
	LOOP
	FETCH c02 INTO
		qt_velocidade_inf_w,
		dt_inicio_adm_w,
		dt_final_adm_w,
		qt_dose_w,
		nr_seq_agente_ocor_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		BEGIN
		qt_temp_dose_medic_w:=0;
		IF (ie_modo_adm_w = 'IN') AND (qt_dose_w IS NOT NULL AND qt_dose_w::text <> '') THEN

			SELECT	coalesce(obter_conversao_ml(cd_material_w, qt_dose_w, cd_unid_medida_adm_w),0)
			INTO STRICT	qt_dose_ml_w
			;


			IF (qt_volume_medic_w = 0) AND (qt_volume_diluente_w = 0) AND (qt_dose_ml_rediluente_w = 0) THEN
				qt_temp_dose_medic_w	:= qt_dose_w;

			ELSIF (qt_dose_ml_medic_w >= 0) AND (qt_dose_ml_diluente_w >= 0) AND (qt_dose_ml_rediluente_w = 0) THEN
				IF (qt_dose_ml_medic_w > 0) THEN
					qt_temp_dose_medic_w	:= dividir((qt_dose_ml_medic_w * qt_dose_ml_w),qt_dose_medic_ml_w);
				END IF;

				IF (qt_dose_ml_diluente_w > 0) THEN
					qt_temp_dose_w		:= dividir((qt_dose_ml_diluente_w * qt_dose_ml_w),qt_dose_medic_ml_w);
				END IF;

			ELSIF (qt_dose_ml_medic_w >= 0) AND (qt_dose_ml_diluente_w > 0) AND (qt_dose_ml_rediluente_w > 0) THEN
				IF (qt_dose_ml_medic_w > 0) THEN
					qt_temp_dose_medic_w	:= dividir((qt_dose_ml_medic_w * qt_dose_ml_w),qt_dose_medic_ml_w);
				END IF;

				IF (qt_rediluir_w = 0) THEN
					qt_rediluir_w	:= qt_dose_ml_diluente_w;
				END IF;

				qt_temp_dose_w		:= qt_rediluir_w;

				qt_temp_red_dose_w	:= qt_dose_ml_rediluente_w;
			END IF;


			-- Medicamento
			INSERT INTO w_agente_adm(
					nr_cirurgia,
					cd_material,
					qt_dose,
					cd_unidade_medida,
					cd_unid_med_consumo,
					ie_modo_adm,
					nr_seq_agente,
					nr_seq_pepo,
					nr_seq_cir_agente_anest,
					nr_seq_cir_agente_ocor)
			VALUES (
					nr_cirurgia_p,
					cd_material_w,
					qt_dose_w,
					cd_unid_medida_adm_w,
					cd_unidade_medida_consumo_w,
					ie_modo_adm_w,
					nr_seq_agente_w,
					CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
					nr_sequencia_w,
					nr_seq_agente_ocor_w);
			COMMIT;


			-- Reconstituinte
			IF	(cd_material_reconst_w > 0 AND ie_gerar_dilui_w = 'S') THEN
				INSERT INTO w_agente_adm(
						nr_cirurgia,
						cd_material,
						qt_dose,
						cd_unidade_medida,
						cd_unid_med_consumo,
						nr_seq_agente,
						nr_seq_pepo,
						nr_seq_cir_agente_anest,
						nr_seq_cir_agente_ocor)
				VALUES (
						nr_cirurgia_p,
						cd_material_reconst_w,
						qt_temp_dose_medic_w,

						OBTER_UNID_MED_USUA('ml'),
						cd_unid_med_cons_reconst_w,
						nr_seq_agente_w,
						CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
						nr_sequencia_w,
						nr_seq_agente_ocor_w);
				COMMIT;
			END IF;

			-- Diluente
			IF	(cd_material_diluicao_w > 0 AND ie_gerar_dilui_w = 'S') THEN
				INSERT INTO w_agente_adm(
						nr_cirurgia,
						cd_material,
						qt_dose,
						cd_unidade_medida,
						cd_unid_med_consumo,
						nr_seq_agente,
						nr_seq_pepo,
						nr_seq_cir_agente_anest,
						nr_seq_cir_agente_ocor)
				VALUES (
						nr_cirurgia_p,
						cd_material_diluicao_w,
						qt_temp_dose_w,

						OBTER_UNID_MED_USUA('ml'),
						cd_unid_med_cons_diluente_w,
						nr_seq_agente_w,
						CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
						nr_sequencia_w,
						nr_seq_agente_ocor_w);
				COMMIT;
			END IF;

			-- Rediluente
			IF	(cd_material_rediluicao_w > 0 AND ie_gerar_dilui_w = 'S') THEN
				qt_temp_dose_w		:= dividir((qt_dose_w * qt_dose_ml_rediluente_w),qt_volume_total_w);
				INSERT INTO w_agente_adm(
						nr_cirurgia,
						cd_material,
						qt_dose,
						cd_unidade_medida,
						cd_unid_med_consumo,
						nr_seq_agente,
						nr_seq_pepo,
						nr_seq_cir_agente_anest,
						nr_seq_cir_agente_ocor)
				VALUES (
						nr_cirurgia_p,
						cd_material_rediluicao_w,
						qt_temp_red_dose_w,

						OBTER_UNID_MED_USUA('ml'),
						cd_unid_med_cons_rediluente_w,
						nr_seq_agente_w,
						CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
						nr_sequencia_w,
						nr_seq_agente_ocor_w);
				COMMIT;
			END IF;

			-- Componente
			IF (cd_material_compo_w > 0) THEN
				INSERT INTO w_agente_adm(
						nr_cirurgia,
						cd_material,
						qt_dose,
						cd_unidade_medida,
						cd_unid_med_consumo,
						nr_seq_agente,
						nr_seq_pepo,
						nr_seq_cir_agente_anest,
						nr_seq_cir_agente_ocor)
				VALUES (
						nr_cirurgia_p,
						cd_material_compo_w,
						qt_dose_ml_compo_w,

						OBTER_UNID_MED_USUA('ml'),
						cd_unid_med_cons_compo_w,
						nr_seq_agente_w,
						CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
						nr_sequencia_w,
						nr_seq_agente_ocor_w);
				COMMIT;
			END IF;


		ELSIF (ie_modo_adm_w = 'CO') THEN

			SELECT	coalesce(MAX('S'),'N')
			INTO STRICT	ie_possui_conversao_ml_w
			FROM	material_conversao_unidade
			WHERE	cd_material = cd_material_w
			AND	UPPER(cd_unidade_medida) = UPPER(OBTER_UNID_MED_USUA('ML'));

			ie_tipo_dosagem_ww	:= ie_tipo_dosagem_w;
			qt_velocidade_inf_ww	:= qt_velocidade_inf_w;


			IF (UPPER(ie_tipo_dosagem_w) IN ('MCG/H','MCG/MIN','MG/H','MG/KG/H','MCG/KG/H','MCG/KG/MIN','MG/KG/MIN')) THEN
				SELECT * FROM Calcular_Dosagem_Med(	cd_material_w, qt_dose_medic_w, cd_unidade_medida_consumo_w, qt_dose_ml_diluente_w, qt_peso_paciente_w, qt_velocidade_inf_w, ie_tipo_dosagem_w, qt_velocidade_www, 'mlh') INTO STRICT qt_dose_medic_w, qt_velocidade_inf_w, qt_velocidade_www;
				qt_velocidade_inf_w	:= qt_velocidade_www;
				ie_tipo_dosagem_w	:= 'mlh';
			END IF;

			IF (ie_consumo_tempo_real_w = 'S') AND (coalesce(dt_final_adm_w::text, '') = '') THEN
				dt_final_adm_w := clock_timestamp();
			END IF;

			SELECT	obter_consumo_continuo(qt_peso_paciente_w, qt_velocidade_inf_w, ie_tipo_dosagem_w, dt_inicio_adm_w,dt_final_adm_w)
			INTO STRICT	qt_dose_w
			;

			-- Criado para buscar itens especificos com unidade por minuto, exemplo da Vasopressina
			if (ie_tipo_dosagem_w = 'U/MIN') then
   
				select (abs(dt_inicio_adm_w - dt_final_adm_w) * 1440)
				into STRICT	qt_minutos_w
				;

				select 	max(QT_CONVERSAO)
				into STRICT   	qt_conv_unid_mil_item_w
				from   	MATERIAL_CONVERSAO_UNIDADE
				WHERE	cd_material = cd_material_w
				and  	UPPER(cd_unidade_medida) = UPPER(OBTER_UNID_MED_USUA('ML'));

				select max(a.QT_CONVERSAO)
				into STRICT   qt_conv_unid_int_item_w
				from   MATERIAL_CONVERSAO_UNIDADE a,
					   UNIDADE_MEDIDA b
				WHERE  a.cd_unidade_medida = b.cd_unidade_medida
				and    a.cd_material = cd_material_w
				and	   b.IE_UNIDADE_MED_INTER = 'UNI';
   
				qt_dose_w := ((qt_velocidade_inf_w * qt_minutos_w) / qt_conv_unid_int_item_w) * qt_conv_unid_mil_item_w;

			END IF;

			IF (qt_dose_ml_rediluente_w >= 0) AND (qt_volume_medic_w >= 0) AND (qt_volume_diluente_w > 0) THEN
				qt_temp_dose_w		:= dividir((qt_dose_w * qt_volume_diluente_w), qt_volume_total_w);
				qt_temp_dose_medic_w	:= dividir((qt_dose_w * qt_volume_medic_w), qt_volume_total_w);
			ELSIF (qt_dose_ml_rediluente_w = 0) AND (qt_volume_medic_w > 0) AND (qt_volume_diluente_w = 0) THEN
				qt_temp_dose_medic_w	:= qt_dose_w;
			END IF;


			IF (ie_possui_conversao_ml_w = 'N') AND (UPPER(ie_tipo_dosagem_ww) IN ('MCG/H','MCG/MIN','MG/H','MG/KG/H','MCG/KG/H','MCG/KG/MIN','MG/KG/MIN')) THEN

				IF (position('MCG' in ie_tipo_dosagem_ww) > 0) THEN
					qt_dose_mg_w := (qt_velocidade_inf_ww/1000);
				ELSIF (position('MG' in ie_tipo_dosagem_ww) > 0) THEN
					qt_dose_mg_w	:= qt_velocidade_inf_ww;
				END IF;

				IF (position('KG' in ie_tipo_dosagem_ww) > 0) THEN
					qt_dose_mg_w	:= qt_peso_paciente_w * qt_dose_mg_w;
				END IF;

				IF (position('/MIN' in ie_tipo_dosagem_ww) > 0) THEN
					qt_dose_mg_w := qt_dose_mg_w * ((dt_final_adm_w - dt_inicio_adm_w) * 1440);
				ELSIF (position('/H' in ie_tipo_dosagem_ww) > 0) THEN
					qt_dose_mg_w := qt_dose_mg_w * ((dt_final_adm_w - dt_inicio_adm_w) * 24);
				END IF;

				SELECT	MAX(cd_unidade_medida)
				INTO STRICT	cd_unid_med_adm_cont_w
				FROM	agente_anest_material
				WHERE	cd_material	=	cd_material_w;

				qt_velocidade_inf_w	:= NULL;
				qt_dose_w		:= NULL;
				qt_temp_dose_w		:= NULL;
				qt_temp_dose_medic_w	:= NULL;
				ie_tipo_dosagem_w	:= ie_tipo_dosagem_ww;
				qt_temp_dose_medic_w	:= qt_dose_mg_w;
				ie_continuo_sem_ml_w 	:= 'S';
			END IF;

			-- Medicamento
			INSERT INTO w_agente_adm(
					nr_cirurgia,
					cd_material,
					qt_dose,
					cd_unidade_medida,
					cd_unid_med_consumo,
					ie_modo_adm,
					nr_seq_agente,
					nr_seq_pepo,
					nr_seq_cir_agente_anest,
					nr_seq_cir_agente_ocor)
			VALUES (
					nr_cirurgia_p,
					cd_material_w,
					qt_temp_dose_medic_w,
					CASE WHEN ie_continuo_sem_ml_w='S' THEN cd_unid_med_adm_cont_w  ELSE OBTER_UNID_MED_USUA('ml') END ,
					cd_unidade_medida_consumo_w,
					ie_modo_adm_w,
					nr_seq_agente_w,
					CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
					nr_sequencia_w,
					nr_seq_agente_ocor_w);
			COMMIT;

			-- Reconstituinte
			IF	(cd_material_reconst_w > 0 AND ie_gerar_dilui_w = 'S') THEN
				INSERT INTO w_agente_adm(
						nr_cirurgia,
						cd_material,
						qt_dose,
						cd_unidade_medida,
						cd_unid_med_consumo,
						nr_seq_agente,
						nr_seq_pepo,
						nr_seq_cir_agente_anest,
						nr_seq_cir_agente_ocor)
				VALUES (
						nr_cirurgia_p,
						cd_material_reconst_w,
						qt_temp_dose_medic_w,

						OBTER_UNID_MED_USUA('ml'),
						cd_unid_med_cons_reconst_w,
						nr_seq_agente_w,
						CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
						nr_sequencia_w,
						nr_seq_agente_ocor_w);
				COMMIT;
			END IF;

			-- Diluente
			IF	(cd_material_diluicao_w > 0 AND ie_gerar_dilui_w = 'S') THEN
				INSERT INTO w_agente_adm(
						nr_cirurgia,
						cd_material,
						qt_dose,
						cd_unidade_medida,
						cd_unid_med_consumo,
						nr_seq_agente,
						nr_seq_pepo,
						nr_seq_cir_agente_anest,
						nr_seq_cir_agente_ocor)
				VALUES (
						nr_cirurgia_p,
						cd_material_diluicao_w,
						qt_temp_dose_w,

						OBTER_UNID_MED_USUA('ml'),
						cd_unid_med_cons_diluente_w,
						nr_seq_agente_w,
						CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
						nr_sequencia_w,
						nr_seq_agente_ocor_w);
				COMMIT;
			END IF;

			-- Rediluente
			IF	(cd_material_rediluicao_w > 0 AND ie_gerar_dilui_w = 'S') THEN
				qt_temp_dose_w		:= dividir((qt_dose_w * qt_dose_ml_rediluente_w),qt_volume_total_w);
				INSERT INTO w_agente_adm(
						nr_cirurgia,
						cd_material,
						qt_dose,
						cd_unidade_medida,
						cd_unid_med_consumo,
						nr_seq_agente,
						nr_seq_pepo,
						nr_seq_cir_agente_anest,
						nr_seq_cir_agente_ocor)
				VALUES (
						nr_cirurgia_p,
						cd_material_rediluicao_w,
						qt_temp_dose_w,

						OBTER_UNID_MED_USUA('ml'),
						cd_unid_med_cons_rediluente_w,
						nr_seq_agente_w,
						CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
						nr_sequencia_w,
						nr_seq_agente_ocor_w);
				COMMIT;
			END IF;

			-- Componente
			IF (cd_material_compo_w > 0) THEN
				INSERT INTO w_agente_adm(
						nr_cirurgia,
						cd_material,
						qt_dose,
						cd_unidade_medida,
						cd_unid_med_consumo,
						nr_seq_agente,
						nr_seq_pepo,
						nr_seq_cir_agente_anest,
						nr_seq_cir_agente_ocor)
				VALUES (
						nr_cirurgia_p,
						cd_material_compo_w,
						qt_dose_ml_compo_w,

						OBTER_UNID_MED_USUA('ml'),
						cd_unid_med_cons_compo_w,
						nr_seq_agente_w,
						CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
						nr_sequencia_w,
						nr_seq_agente_ocor_w);
				COMMIT;
			END IF;

		END IF;
		END;
	END LOOP;
	CLOSE c02;
	END;
END LOOP;
CLOSE c01;

OPEN c04;
LOOP
FETCH c04 INTO
	cd_material_w,
	qt_dose_w,
	cd_unidade_medida_w,
	cd_unid_med_consumo_w,
	ie_modo_adm_w,
	nr_seq_agente_w;
EXIT WHEN NOT FOUND; /* apply on c04 */
	BEGIN
	qt_dose_consumo_w	:= qt_dose_w;
	IF (cd_unidade_medida_w <> cd_unid_med_consumo_w) THEN
		SELECT	obter_conversao_unid_med_cons(cd_material_w, cd_unidade_medida_w, qt_dose_w)
		INTO STRICT	qt_dose_consumo_w
		;
	END IF;

	IF (ie_modo_adm_w = 'CO') THEN
		BEGIN
		SELECT	MAX(cd_unidade_medida)
		INTO STRICT	cd_unid_med_adm_cont_w
		FROM	agente_anest_material
		WHERE	cd_material	=	cd_material_w;
		EXCEPTION
			WHEN OTHERS THEN
			qt_conversao_w		:= 1;
			cd_unid_med_adm_cont_w	:= cd_unid_med_consumo_w;
		END;

		BEGIN
		SELECT	qt_conversao
		INTO STRICT	qt_conversao_w
		FROM	material_conversao_unidade
		WHERE	cd_material		= cd_material_w
		AND	cd_unidade_medida	= cd_unid_med_adm_cont_w;
		EXCEPTION
			WHEN OTHERS THEN
			qt_conversao_w		:= 1;
			cd_unid_med_adm_cont_w	:= cd_unid_med_consumo_w;
		END;

		cd_unidade_medida_w		:= cd_unid_med_adm_cont_w;
	END IF;

	INSERT INTO w_resumo_agente(
		nr_sequencia,
		dt_atualizacao,
			nm_usuario,
		nr_cirurgia,
		cd_material,
		qt_dose_total,
		cd_unidade_medida,
		qt_dose_consumo,
		cd_unidade_consumo,
		nr_seq_agente,
		nr_seq_pepo)
	VALUES (
		nextval('w_resumo_agente_seq'),
		clock_timestamp(),
		nm_usuario_p,
		nr_cirurgia_p,
		cd_material_w,
		CASE WHEN ie_modo_adm_w='CO' THEN (qt_dose_consumo_w * qt_conversao_w)  ELSE qt_dose_w END ,
		cd_unidade_medida_w,
		qt_dose_consumo_w,
		cd_unid_med_consumo_w,
		nr_seq_agente_w,
		CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END );
	COMMIT;
	END;
END LOOP;
CLOSE c04;

OPEN c03;
LOOP
FETCH c03 INTO
	nr_seq_agente_w,
	nr_sequencia_w,
	cd_material_disp_w,
	cd_unidade_disp_w,
	ie_operacao_w,
	qt_dose_disp_w,
	cd_material_generico_w,
	nr_sequencia_ww;
EXIT WHEN NOT FOUND; /* apply on c03 */
	BEGIN
	UPDATE	w_resumo_agente
	SET	qt_dispensacao		= coalesce(qt_dispensacao,0) + CASE WHEN ie_operacao_w='D' THEN qt_dose_disp_w  ELSE -1 END ,
		cd_unidade_dispensacao	= cd_unidade_disp_w
	WHERE	((nr_cirurgia		= nr_cirurgia_p) OR (nr_seq_pepo = nr_seq_pepo_P))
	AND	cd_material		= cd_material_disp_w
	AND	((coalesce(nr_seq_agente_w::text, '') = '') OR (nr_seq_agente = nr_seq_agente_w));
	IF	NOT FOUND THEN
		UPDATE	w_resumo_agente
		SET	qt_dispensacao		= coalesce(qt_dispensacao,0) + CASE WHEN ie_operacao_w='D' THEN qt_dose_disp_w  ELSE -1 END ,
			cd_unidade_dispensacao	= cd_unidade_disp_w
		WHERE	((nr_cirurgia		= nr_cirurgia_p) OR (nr_seq_pepo = nr_seq_pepo_p))
		AND	cd_material		= cd_material_generico_w
		AND	((coalesce(nr_seq_agente_w::text, '') = '') OR (nr_seq_agente = nr_seq_agente_w));
		IF	NOT FOUND THEN
			qt_registro_w := 0;
			IF (qt_registro_w = 0) THEN
				INSERT INTO w_resumo_agente(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_cirurgia,
					cd_material,
					qt_dispensacao,
					cd_unidade_dispensacao,
					nr_seq_agente,
					nr_seq_pepo)
				VALUES (
					nextval('w_resumo_agente_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_cirurgia_p,
					cd_material_disp_w,
					CASE WHEN ie_operacao_w='D' THEN qt_dose_disp_w  ELSE -1 END ,
					cd_unidade_disp_w,
					nr_seq_agente_w,
					CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END );
			END IF;
		END IF;
	END IF;
	END;
END LOOP;
CLOSE c03;

OPEN C05;
LOOP
FETCH C05 INTO
	nr_sequencia_w,
	cd_material_w,
	qt_dose_medic_w,
	nr_seq_agente_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	BEGIN
	UPDATE	w_resumo_agente
	SET	qt_dose_total		= coalesce(qt_dose_total,0) + qt_dose_medic_w
	WHERE	((nr_cirurgia		= nr_cirurgia_p) OR (nr_seq_pepo = nr_seq_pepo_p))
	AND	cd_material		= cd_material_w;
	IF	NOT FOUND THEN
		INSERT INTO w_resumo_agente(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_cirurgia,
			cd_material,
			qt_dose_total,
			cd_unidade_dispensacao,
			nr_seq_agente,
			nr_seq_pepo)
		VALUES (
			nextval('w_resumo_agente_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_cirurgia_p,
			cd_material_w,
			qt_dose_medic_w,
			NULL,
			nr_seq_agente_w,
			CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END );
	END IF;
	END;
END LOOP;
CLOSE C05;

OPEN C06;
LOOP
FETCH C06 INTO
	nr_seq_agente_ww,
	cd_material_disp_ww;
EXIT WHEN NOT FOUND; /* apply on C06 */
	BEGIN
	SELECT	MAX(cd_material_estoque)
	INTO STRICT	cd_material_estoque_w
	FROM	material
	WHERE	cd_material = cd_material_disp_ww;

	SELECT 	COUNT(*)
	INTO STRICT    qt_material_disp_cons_w
	FROM 	w_resumo_agente
	WHERE	((nr_cirurgia		= nr_cirurgia_p) OR (nr_seq_pepo = nr_seq_pepo_P))
	AND		((cd_material		= cd_material_disp_ww) OR (cd_material = cd_material_estoque_w))
	AND		((coalesce(nr_seq_agente_ww::text, '') = '') OR (nr_seq_agente = nr_seq_agente_ww));

	IF (qt_material_disp_cons_w > 1) THEN
		UPDATE	w_resumo_agente
		SET		qt_dispensacao		= (coalesce(qt_dispensacao,0) / qt_material_disp_cons_w)
		WHERE	((nr_cirurgia		= nr_cirurgia_p) OR (nr_seq_pepo = nr_seq_pepo_P))
		AND		((cd_material		= cd_material_disp_ww) OR (cd_material = cd_material_estoque_w))
		AND		((coalesce(nr_seq_agente_ww::text, '') = '') OR (nr_seq_agente = nr_seq_agente_ww));
	END IF;

	END;
END LOOP;
CLOSE C06;

if (ie_calc_halogenado_w = 'S') then

    IF (nr_seq_pepo_p > 0 )THEN
    	DELETE FROM w_consumo_halogenado WHERE nr_seq_pepo = nr_seq_pepo_p;
    ELSE
    	DELETE FROM w_consumo_halogenado WHERE nr_cirurgia = nr_cirurgia_p;
    END IF;

    OPEN C07;
    LOOP
    FETCH C07 INTO
    	dt_inicio_adm_halog_w,
    	dt_final_adm_halog_w,
    	qt_halog_ins_halog_w,
    	nr_seq_agente_halog_w,
		cd_material_halog_w;
    EXIT WHEN NOT FOUND; /* apply on C07 */
    	BEGIN
    	open C08;
    	loop
    	fetch C08 into
    		qt_velocidade_inf_gas_w,
    		dt_inicio_adm_gas_w,
    		dt_final_adm_gas_w,
    		ie_tipo_dosagem_gas_w;
    	EXIT WHEN NOT FOUND; /* apply on C08 */
    		begin

    		/*	Verifica se a data de inicio esta dentro do intervalo de um gas.
    		----------|---------------------------------------------------------------------------------------|-----------

    		---------------------|----------------------------------------------------------------------------------------

    		 */
    		if (dt_inicio_adm_halog_w >= dt_inicio_adm_gas_w) and (dt_inicio_adm_halog_w <= dt_final_adm_gas_w) then
    			/*	Verifica se a data de fim esta dentro do intervalo do gas.
    			----------|---------------------------------------------------------------------------------------|-----------

    			----------------------------------------------------------------------------------------|----------------------

    			*/
    			if (dt_final_adm_halog_w <= dt_final_adm_gas_w) then
    				INSERT	INTO w_consumo_halogenado(	nr_sequencia,
    									dt_atualizacao,
    									nm_usuario,
    									nr_cirurgia,
    									nr_seq_pepo,
    									nr_seq_agente,
    									dt_inicio,
    									dt_fim,
    									qt_halog_ins,
    									qt_fluxo_gas_ml,
    									qt_consumo_ml,
    									ie_tipo_dosagem,
    									qt_velocidade_inf,
										cd_material)
    				VALUES (	nextval('w_consumo_halogenado_seq'),
    									clock_timestamp(),
    									nm_usuario_p,
    									nr_cirurgia_p,
										CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
    									nr_seq_agente_halog_w,
    									dt_inicio_adm_halog_w,
    									dt_final_adm_halog_w,
    									qt_halog_ins_halog_w,
    									0,
    									0,
    									ie_tipo_dosagem_gas_w,
    									qt_velocidade_inf_gas_w,
										cd_material_halog_w);
    				commit;
    			else
    				/*	Verifica se a data de fim esta fora do intervalo do gas.
    					Neste caso, subtende-se que a data fim sera a data final do gas
    				----------|---------------------------------------------------------------------------------------|-----------

    				-----------------|----------------------------------------------------------------------------------------|----

    				*/
    				INSERT	INTO w_consumo_halogenado(	nr_sequencia,
    									dt_atualizacao,
    									nm_usuario,
    									nr_cirurgia,
    									nr_seq_pepo,
    									nr_seq_agente,
    									dt_inicio,
    									dt_fim,
    									qt_halog_ins,
    									qt_fluxo_gas_ml,
    									qt_consumo_ml,
    									ie_tipo_dosagem,
    									qt_velocidade_inf,
										cd_material)
    				VALUES (	nextval('w_consumo_halogenado_seq'),
    									clock_timestamp(),
    									nm_usuario_p,
    									nr_cirurgia_p,
										CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
    									nr_seq_agente_halog_w,
    									dt_inicio_adm_halog_w,
    									dt_final_adm_gas_w,
    									qt_halog_ins_halog_w,
    									0,
    									0,
    									ie_tipo_dosagem_gas_w,
    									qt_velocidade_inf_gas_w,
										cd_material_halog_w);
    				commit;
    			end if;
    		elsif (dt_final_adm_halog_w > dt_inicio_adm_gas_w) and (dt_final_adm_halog_w <= dt_final_adm_gas_w) then
    			/*	Verifica se a data de inicio esta fora do intervalo do gas, porem a data fim esta dentro
    				Neste caso, subtende-se que a data de inicio sera a data inicial do gas,.
    			----------|---------------------------------------------------------------------------------------|-----------

    			----|------------------------------|--------------------------------------------------------------------------

    			*/
    			INSERT	INTO w_consumo_halogenado(	nr_sequencia,
    								dt_atualizacao,
    								nm_usuario,
    								nr_cirurgia,
    								nr_seq_pepo,
    								nr_seq_agente,
    								dt_inicio,
    								dt_fim,
    								qt_halog_ins,
    								qt_fluxo_gas_ml,
    								qt_consumo_ml,
    								ie_tipo_dosagem,
    								qt_velocidade_inf,
									cd_material)
    			VALUES (	nextval('w_consumo_halogenado_seq'),
    								clock_timestamp(),
    								nm_usuario_p,
    								nr_cirurgia_p,
									CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END ,
    								nr_seq_agente_halog_w,
    								dt_inicio_adm_gas_w,
    								dt_final_adm_halog_w,
    								qt_halog_ins_halog_w,
    								0,
    								0,
    								ie_tipo_dosagem_gas_w,
    								qt_velocidade_inf_gas_w,
									cd_material_halog_w);
    			commit;
    		end if;
    		end;
    	end loop;
    	close C08;
    	END;
    END LOOP;
    CLOSE C07;

    OPEN C09;
    LOOP
    FETCH C09 INTO
    	nr_sequencia_w,
    	qt_ml_vapor_w_halog_w,
    	dt_inicio_w,
    	dt_fim_w,
    	qt_halog_ins_w ,
    	ie_tipo_dosagem_gas_w,
    	qt_velocidade_inf_gas_w,
		nr_seq_agente_halog_w,
		cd_material_halog_w;
    EXIT WHEN NOT FOUND; /* apply on C09 */
    	BEGIN
    	IF (qt_ml_vapor_w_halog_w > 0) THEN
    		qt_tempo_w 		:= Obter_Min_Entre_Datas(dt_inicio_w,dt_fim_w,1);
			qt_fluxo_gas_ml_w := 0; /*tratamento para quando o ie_tipo_dosagem_gas_w estiver diferente de 'LPM'ou 'MLH' e que o calculo ja venha pronto da integracao*/
    		IF (UPPER(ie_tipo_dosagem_gas_w) = 'MLH') AND (coalesce(qt_velocidade_inf_gas_w,0) > 0)THEN
    			qt_fluxo_gas_ml_w	:= qt_velocidade_inf_gas_w;
    		ELSIF (UPPER(ie_tipo_dosagem_gas_w) = 'LPM') AND (coalesce(qt_velocidade_inf_gas_w,0) > 0) THEN
    			qt_fluxo_gas_ml_w	:= (qt_velocidade_inf_gas_w * 1000);
    		END IF;
    		qt_consumo_ml_w		:= ((qt_halog_ins_w / 100) * qt_fluxo_gas_ml_w * qt_tempo_w ) / qt_ml_vapor_w_halog_w;




    		UPDATE	w_consumo_halogenado
    		SET	qt_consumo_ml	= qt_consumo_ml_w,
    			qt_fluxo_gas_ml = qt_fluxo_gas_ml_w
    		WHERE	nr_sequencia	= nr_sequencia_w;
    		COMMIT;
    	END IF;
    	END;
    END LOOP;
    CLOSE C09;

	open C10;
	loop
	fetch C10 into
		qt_consumo_ml_w,
		nr_seq_agente_halog_w,
		cd_material_halog_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin
			select max(nr_sequencia)
			into STRICT   nr_seq_item_halog_w
			FROM   w_resumo_agente
			WHERE  cd_material = cd_material_halog_w
			AND    cd_unidade_medida = OBTER_UNID_MED_USUA('ml')
			AND	   cd_unidade_consumo = OBTER_UNID_MED_USUA('ml')
			AND    nr_seq_agente = nr_seq_agente_halog_w
			AND   ((nr_cirurgia	 = nr_cirurgia_p) OR (nr_seq_pepo = nr_seq_pepo_p));

			select	max(a.qt_utilizada)
			into STRICT	qt_utilizada_w
			FROM	cirurgia_agente_anest_ocor a,
					cirurgia_agente_anestesico b
			WHERE	a.nr_seq_cirur_agente	= b.nr_sequencia
			and		((b.nr_cirurgia	 = nr_cirurgia_p) OR (b.nr_seq_pepo = nr_seq_pepo_p))
			and		b.cd_material = cd_material_halog_w
			and		b.nr_seq_agente = nr_seq_agente_halog_w;

			if (coalesce(nr_seq_item_halog_w,0) > 0) then
  
					update w_resumo_agente
					set    qt_dose_consumo = CASE WHEN coalesce(ie_grafico_w,'N')='S' THEN  coalesce(qt_utilizada_w, qt_consumo_ml_w)  ELSE qt_consumo_ml_w END ,
						   qt_dose_total  =  CASE WHEN coalesce(ie_grafico_w,'N')='S' THEN  coalesce(qt_utilizada_w, qt_consumo_ml_w)  ELSE qt_consumo_ml_w END  
					where  nr_sequencia = nr_seq_item_halog_w;
					commit;

			else
					INSERT INTO w_resumo_agente(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_cirurgia,
						cd_material,
						qt_dose_total,
						cd_unidade_medida,
						qt_dose_consumo,
						cd_unidade_consumo,
						nr_seq_agente,
						nr_seq_pepo)

			VALUES (
						nextval('w_resumo_agente_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_cirurgia_p,
						cd_material_halog_w,
						CASE WHEN coalesce(ie_grafico_w,'N')='S' THEN  coalesce(qt_utilizada_w, qt_consumo_ml_w)  ELSE qt_consumo_ml_w END ,
						OBTER_UNID_MED_USUA('ml'),
						CASE WHEN coalesce(ie_grafico_w,'N')='S' THEN  coalesce(qt_utilizada_w, qt_consumo_ml_w)  ELSE qt_consumo_ml_w END ,
						OBTER_UNID_MED_USUA('ml'),
						nr_seq_agente_halog_w,
						CASE WHEN nr_seq_pepo_p=0 THEN NULL  ELSE nr_seq_pepo_p END );
			end if;

		end;
	end loop;
	close C10;

end if;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_resumo_agente ( nr_cirurgia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_pepo_p bigint default 0) FROM PUBLIC;

