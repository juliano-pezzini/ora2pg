-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_grupo_ans_conta ( nr_seq_protocolo_p bigint, ie_somente_nulo_p text, dt_inicio_p timestamp, dt_fim_p timestamp, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_atualizacao_p pls_atualizacao_contabil.nr_sequencia%type default null) AS $body$
DECLARE


ie_proc_mat_w			varchar(1);
nr_seq_item_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
ie_tipo_guia_w			varchar(10);
nr_seq_tipo_atendimento_w	bigint;
cd_medico_executor_w		varchar(10);
ie_regime_internacao_w		varchar(10);
nr_seq_conselho_w		bigint;
ie_tipo_desp_mat_w		varchar(10);
nr_seq_grupo_ans_w		bigint;
nr_seq_grupo_superior_w		bigint;
dt_mes_competencia_w		timestamp;	
ds_tipo_lote_contabil_w		varchar(40);
cd_medico_partic_w		pls_proc_participante.cd_medico%type;
cd_tipo_lote_contabil_w		pls_atualizacao_contabil.cd_tipo_lote_contabil%type := -1;
nr_ind_mat_w			integer := 0;
nr_ind_proc_w			integer :=0;
tb_grupo_ans_mat_w		pls_util_cta_pck.t_number_table;
tb_grupo_sup_mat_w		pls_util_cta_pck.t_number_table;
tb_seq_conta_mat_w		pls_util_cta_pck.t_number_table;
tb_grupo_ans_proc_w		pls_util_cta_pck.t_number_table;
tb_grupo_sup_proc_w		pls_util_cta_pck.t_number_table;
tb_seq_conta_proc_w		pls_util_cta_pck.t_number_table;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_item_resumo_w		pls_conta_medica_resumo.nr_sequencia%type;
nr_lote_contab_pag_w		pls_conta_proc.nr_lote_contab_pag%type;
nr_lote_contabil_prov_w		pls_conta_proc.nr_lote_contabil_prov%type;

tb_seq_rec_resumo_w		pls_util_cta_pck.t_number_table;
tb_grupo_ans_w			pls_util_cta_pck.t_number_table;
nr_ind_rec_w			integer;


ie_atualiza_rec_w		boolean;


C01 CURSOR FOR
	SELECT	dt_mes_competencia
	from	pls_competencia
	where	dt_mes_competencia between trunc(dt_inicio_p,'month') and trunc(dt_fim_p,'month')
	order by dt_mes_competencia;
				
C02 CURSOR FOR
	SELECT	'P',
		a.nr_sequencia,
		a.cd_procedimento,
		a.ie_origem_proced,
		null nr_seq_material,
		b.ie_tipo_guia,
		b.nr_seq_tipo_atendimento,
		b.cd_medico_executor,
		b.ie_regime_internacao,
		null,
		b.nr_sequencia nr_seq_conta,
		a.nr_lote_contab_pag,
		a.nr_lote_contabil_prov
	from	pls_conta_proc		a,
		pls_conta		b,
		pls_protocolo_conta	c
	where	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_protocolo_p
	and	((ie_somente_nulo_p = 'N') or (ie_somente_nulo_p = 'S' and coalesce(a.nr_seq_grupo_ans,0) = 0))
	and	c.dt_mes_competencia between coalesce(to_date(dt_inicio_p,'dd/mm/yy'), c.dt_mes_competencia) and coalesce(to_date(dt_fim_p,'dd/mm/yy'),c.dt_mes_competencia)
	
union all

	SELECT	'M',
		a.nr_sequencia,
		null cd_procedimento,
		null ie_origem_proced,
		a.nr_seq_material,
		b.ie_tipo_guia,
		b.nr_seq_tipo_atendimento,
		b.cd_medico_executor,
		b.ie_regime_internacao,
		a.ie_tipo_despesa,
		b.nr_sequencia nr_seq_conta,
		a.nr_lote_contab_pag,
		a.nr_lote_contabil_prov
	from	pls_conta_mat		a,
		pls_conta		b,
		pls_protocolo_conta	c
	where	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_protocolo_p
	and	((ie_somente_nulo_p = 'N') or (ie_somente_nulo_p = 'S' and coalesce(a.nr_seq_grupo_ans,0) = 0))
	and	c.dt_mes_competencia between coalesce(to_date(dt_inicio_p,'dd/mm/yy'),c.dt_mes_competencia) and coalesce(to_date(dt_fim_p,'dd/mm/yy'),c.dt_mes_competencia)
	
union all

	select	'P',
		a.nr_sequencia,
		a.cd_procedimento,
		a.ie_origem_proced,
		null nr_seq_material,
		b.ie_tipo_guia,
		b.nr_seq_tipo_atendimento,
		b.cd_medico_executor,
		b.ie_regime_internacao,
		null,
		b.nr_sequencia nr_seq_conta,
		a.nr_lote_contab_pag,
		a.nr_lote_contabil_prov
	from	pls_conta_proc		a,
		pls_conta		b,
		pls_protocolo_conta	c
	where	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= c.nr_sequencia
	and	coalesce(nr_seq_protocolo_p,0) = 0
	and	((ie_somente_nulo_p = 'N') or (ie_somente_nulo_p = 'S' and coalesce(a.nr_seq_grupo_ans,0) = 0))
	and	c.dt_mes_competencia between coalesce(to_date(dt_inicio_p,'dd/mm/yy'), c.dt_mes_competencia) and coalesce(to_date(dt_fim_p,'dd/mm/yy'),c.dt_mes_competencia)
	
union all

	select	'M',
		a.nr_sequencia,
		null cd_procedimento,
		null ie_origem_proced,
		a.nr_seq_material,
		b.ie_tipo_guia,
		b.nr_seq_tipo_atendimento,
		b.cd_medico_executor,
		b.ie_regime_internacao,
		a.ie_tipo_despesa,
		b.nr_sequencia nr_seq_conta,
		a.nr_lote_contab_pag,
		a.nr_lote_contabil_prov
	from	pls_conta_mat		a,
		pls_conta		b,
		pls_protocolo_conta	c
	where	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= c.nr_sequencia
	and	coalesce(nr_seq_protocolo_p,0) = 0
	and	((ie_somente_nulo_p = 'N') or (ie_somente_nulo_p = 'S' and coalesce(a.nr_seq_grupo_ans,0) = 0))
	and	c.dt_mes_competencia between coalesce(to_date(dt_inicio_p,'dd/mm/yy'),c.dt_mes_competencia) and coalesce(to_date(dt_fim_p,'dd/mm/yy'),c.dt_mes_competencia);
	
C03 CURSOR FOR
	SELECT	'P' ie_proc_mat,
		a.nr_sequencia nr_seq_item,
		a.cd_procedimento,
		a.ie_origem_proced,
		null nr_seq_material,
		b.ie_tipo_guia,
		b.nr_seq_tipo_atendimento,
		b.cd_medico_executor,
		b.ie_regime_internacao,
		null,
		b.nr_sequencia nr_seq_conta
	from	pls_conta_proc		a,
		pls_conta		b,
		pls_conta_medica_resumo	c
	where	a.nr_seq_conta		= b.nr_sequencia
	and	a.nr_seq_conta		= c.nr_seq_conta
	and	a.nr_sequencia		= c.nr_seq_conta_proc
	and	c.dt_competencia_pgto between dt_inicio_p and dt_fim_p
	
union all

	SELECT	'M' ie_proc_mat,
		a.nr_sequencia nr_seq_item,
		null cd_procedimento,
		null ie_origem_proced,
		a.nr_seq_material,
		b.ie_tipo_guia,
		b.nr_seq_tipo_atendimento,
		b.cd_medico_executor,
		b.ie_regime_internacao,
		a.ie_tipo_despesa,
		b.nr_sequencia nr_seq_conta
	from	pls_conta_mat		a,
		pls_conta		b,
		pls_conta_medica_resumo	c
	where	a.nr_seq_conta		= b.nr_sequencia
	and	a.nr_seq_conta		= c.nr_seq_conta
	and	a.nr_sequencia		= c.nr_seq_conta_mat
	and	c.dt_competencia_pgto between dt_inicio_p and dt_fim_p;
	
-- resumo do recurso de glosa
c04 CURSOR FOR
	SELECT	a.nr_sequencia,
		(	SELECT	max(coalesce(z.nr_seq_grupo_ans, x.nr_seq_grupo_ans)) nr_seq_grupo_ans
			from	pls_conta_proc		x,
				pls_conta_medica_resumo	z
			where	z.nr_seq_conta		= x.nr_seq_conta
			and	z.nr_seq_conta_proc	= x.nr_sequencia
			and	x.nr_sequencia		= b.nr_seq_conta_proc) nr_seq_grupo_ans,
		coalesce(a.nr_lote_contabil_pag, 0) nr_lote_contabil_pag,
		coalesce(a.nr_lote_contabil_apres, 0) nr_lote_contabil_apres,
		coalesce(a.nr_lote_contabil, 0) nr_lote_contabil
	from	pls_conta_rec_resumo_item	a,
		pls_rec_glosa_proc		b
	where	b.nr_seq_conta_rec		= a.nr_seq_conta_rec
	and	b.nr_sequencia			= a.nr_seq_proc_rec
	and	a.dt_competencia_pgto between dt_inicio_p and dt_fim_p
	
union all

	select	a.nr_sequencia,
		(	select	max(coalesce(z.nr_seq_grupo_ans, x.nr_seq_grupo_ans)) nr_seq_grupo_ans
			from	pls_conta_mat		x,
				pls_conta_medica_resumo	z
			where	z.nr_seq_conta		= x.nr_seq_conta
			and	z.nr_seq_conta_mat	= x.nr_sequencia
			and	x.nr_sequencia		= b.nr_seq_conta_mat) nr_seq_grupo_ans,
		coalesce(a.nr_lote_contabil_pag, 0) nr_lote_contabil_pag,
		coalesce(a.nr_lote_contabil_apres, 0) nr_lote_contabil_apres,
		coalesce(a.nr_lote_contabil, 0) nr_lote_contabil
	from	pls_conta_rec_resumo_item	a,
		pls_rec_glosa_mat		b
	where	b.nr_seq_conta_rec		= a.nr_seq_conta_rec
	and	b.nr_sequencia			= a.nr_seq_mat_rec
	and	a.dt_competencia_pgto between dt_inicio_p and dt_fim_p;
	
	

procedure atualiza_itens( tb_grupo_ans_proc_p	pls_util_cta_pck.t_number_table,
			  tb_grupo_sup_proc_p	pls_util_cta_pck.t_number_table,
			  tb_seq_conta_proc_p	pls_util_cta_pck.t_number_table,
			  tb_grupo_ans_mat_p	pls_util_cta_pck.t_number_table,
			  tb_grupo_sup_mat_p	pls_util_cta_pck.t_number_table,
			  tb_seq_conta_mat_p	pls_util_cta_pck.t_number_table) is
				
			;
BEGIN

	if (tb_grupo_ans_proc_p.count > 0) then

		forall i in tb_grupo_ans_proc_p.first..tb_grupo_ans_proc_p.last
			update	pls_conta_proc
			set	nr_seq_grupo_ans	= tb_grupo_ans_proc_p(i),
				nr_seq_grupo_ans_sup	= tb_grupo_sup_proc_p(i)
			where	nr_sequencia		= tb_seq_conta_proc_p(i)			
			and	coalesce(nr_lote_contab_pag,0) = 0
			and	coalesce(nr_lote_contabil_prov,0) = 0;
		commit;
		
	end if;
	
	if (tb_grupo_ans_mat_p.count > 0) then
	
		forall i in tb_grupo_ans_mat_p.first..tb_grupo_ans_mat_p.last
			update	pls_conta_mat
			set	nr_seq_grupo_ans	= tb_grupo_ans_mat_p(i),
				nr_seq_grupo_ans_sup	= tb_grupo_sup_mat_p(i)
			where	nr_sequencia		= tb_seq_conta_mat_p(i)		
			and	coalesce(nr_lote_contab_pag,0) = 0
			and	coalesce(nr_lote_contabil_prov,0) = 0;
		commit;
	end if;

end;


procedure atualiza_recurso_glosa(	tb_seq_rec_resumo_p	in pls_util_cta_pck.t_number_table,
					tb_grupo_ans_p		in pls_util_cta_pck.t_number_table,
					nm_usuario_p		in usuario.nm_usuario%type) is
begin

if (tb_seq_rec_resumo_p.count > 0) then

	forall i in tb_seq_rec_resumo_p.first..tb_seq_rec_resumo_p.last
		update	pls_conta_rec_resumo_item
		set	nr_seq_grupo_ans	= tb_grupo_ans_p(i),
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= tb_seq_rec_resumo_p(i);
	commit;
end if;


end;

	
begin

tb_grupo_ans_mat_w.delete;
tb_grupo_sup_mat_w.delete;
tb_seq_conta_mat_w.delete;
tb_grupo_ans_proc_w.delete;
tb_grupo_sup_proc_w.delete;
tb_seq_conta_proc_w.delete;

if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
	select 	cd_tipo_lote_contabil
	into STRICT	cd_tipo_lote_contabil_w
	from	pls_atualizacao_contabil a
	where 	a.nr_sequencia = nr_seq_atualizacao_p;
end if;


open C01;
loop
fetch C01 into	
	dt_mes_competencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	max(b.ds_tipo_lote_contabil)
	into STRICT	ds_tipo_lote_contabil_w
	from	lote_contabil		a,
		tipo_lote_contabil	b
	where	a.cd_tipo_lote_contabil	= b.cd_tipo_lote_contabil
	and	b.cd_tipo_lote_contabil	in (22,40,41,42,43) /* HPMS Expenses - Medical Accounts / HPMS Expenses - Medical production provision / HPMS Expenses - Medical production payment / HPMS - Co-participation Provision / HPMS - Billing provision */
	and	trunc(a.dt_referencia,'month') = dt_mes_competencia_w
	and	coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
	and	(a.dt_geracao_lote IS NOT NULL AND a.dt_geracao_lote::text <> '');
	
	end;
end loop;
close C01;

-- If it is processing the ANS group for an accounting batch of medical production payment, then search for procedures linked to payments

-- of the respective competency, otherwise, will keep the same behaviour that it had, where ir searched for the items using the protocol competency
if (cd_tipo_lote_contabil_w = 41) then
	for r_C03_w in C03 loop
	
		select	max(nr_seq_conselho)
		into STRICT	nr_seq_conselho_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= r_C03_w.cd_medico_executor;
			
		if	((coalesce(r_C03_w.cd_medico_executor::text, '') = '') and (r_c03_w.ie_proc_mat = 'P')) then
			nr_seq_conselho_w	:= null;
			
			select 	max(cd_medico)
			into STRICT	cd_medico_partic_w
			from	pls_proc_participante
			where	nr_seq_conta_proc	= r_c03_w.nr_seq_item;
			
			select	max(nr_seq_conselho)
			into STRICT	nr_seq_conselho_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_medico_partic_w;
		end if;
			
		if (coalesce(r_c03_w.nr_seq_material,0) > 0) then
			select	coalesce(max(ie_tipo_despesa),'')
			into STRICT	ie_tipo_desp_mat_w
			from	pls_material
			where	nr_sequencia	= r_c03_w.nr_seq_material;
		
		end if;
		if (r_c03_w.ie_proc_mat	= 'P') then
			ie_tipo_desp_mat_w := null;
		elsif (r_c03_w.ie_proc_mat	= 'M') then
			cd_procedimento_w := null;
			ie_origem_proced_w := null;
			if (coalesce(ie_tipo_desp_mat_w::text, '') = '') then
				ie_tipo_desp_mat_w := 'X';	
			end if;		
		end if;	
		
		nr_seq_grupo_ans_w	:= pls_obter_grupo_ans(r_c03_w.cd_procedimento, r_c03_w.ie_origem_proced, nr_seq_conselho_w,
						r_C03_w.nr_seq_tipo_atendimento, r_C03_w.ie_tipo_guia, r_C03_w.ie_regime_internacao, 
						ie_tipo_desp_mat_w, 'G', coalesce(cd_estabelecimento_p,0), r_C03_w.nr_seq_conta);
						
		select	max(nr_seq_grupo_superior)
		into STRICT	nr_seq_grupo_superior_w
		from	ans_grupo_despesa
		where	nr_sequencia	= nr_seq_grupo_ans_w;
		
		if (r_c03_w.ie_proc_mat	= 'P') then
			nr_ind_proc_w := nr_ind_proc_w + 1;
			tb_grupo_ans_proc_w(nr_ind_proc_w) := nr_seq_grupo_ans_w;
			tb_grupo_sup_proc_w(nr_ind_proc_w) := nr_seq_grupo_superior_w;
			tb_seq_conta_proc_w(nr_ind_proc_w) := r_c03_w.nr_seq_item;
			
		elsif (r_c03_w.ie_proc_mat	= 'M') then
			nr_ind_mat_w := nr_ind_mat_w + 1;
			tb_grupo_ans_mat_w(nr_ind_mat_w) := nr_seq_grupo_ans_w;
			tb_grupo_sup_mat_w(nr_ind_mat_w) := nr_seq_grupo_superior_w;
			tb_seq_conta_mat_w(nr_ind_mat_w) := r_c03_w.nr_seq_item;
				
		end if;
			
		-- Store distinctly the materials and procedures, then adds the records in memory to find if the amount of records for each transaction was met
		if ( nr_ind_mat_w + nr_ind_proc_w > pls_util_pck.qt_registro_transacao_w) then
		
			atualiza_itens( tb_grupo_ans_proc_w , tb_grupo_sup_proc_w, tb_seq_conta_proc_w,
					tb_grupo_ans_mat_w, tb_grupo_sup_mat_w, tb_seq_conta_mat_w);
				
			tb_grupo_ans_mat_w.delete;
			tb_grupo_sup_mat_w.delete;
			tb_seq_conta_mat_w.delete;
			tb_grupo_ans_proc_w.delete;
			tb_grupo_sup_proc_w.delete;
			tb_seq_conta_proc_w.delete;
			nr_ind_mat_w	:= 0;
			nr_ind_proc_w 	:= 0;
				
		end if;	
	end loop;
	
	-- If there are leftover records, then send them to the database after the cursor is done with processing.
	atualiza_itens( tb_grupo_ans_proc_w, tb_grupo_sup_proc_w, tb_seq_conta_proc_w,
			tb_grupo_ans_mat_w, tb_grupo_sup_mat_w, tb_seq_conta_mat_w);
	
else
	open C02;
	loop
	fetch C02 into	
		ie_proc_mat_w,
		nr_seq_item_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_material_w,
		ie_tipo_guia_w,
		nr_seq_tipo_atendimento_w,
		cd_medico_executor_w,	
		ie_regime_internacao_w,
		ie_tipo_desp_mat_w,
		nr_seq_conta_w,
		nr_lote_contab_pag_w,
		nr_lote_contabil_prov_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin	
			

		
		select	max(nr_seq_conselho)
		into STRICT	nr_seq_conselho_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_medico_executor_w;
			
		select 	coalesce(max(nr_sequencia),0)
		into STRICT 	nr_seq_item_resumo_w
		from 	pls_conta_medica_resumo
		where 	nr_seq_conta = nr_seq_conta_w
		and (nr_seq_conta_proc = nr_seq_item_w or nr_seq_conta_mat = nr_seq_item_w)
		and 	coalesce(nr_lote_contabil_pag,0) = 0
		and 	coalesce(nr_lote_contabil_prov,0) =0;
					
		if	((coalesce(cd_medico_executor_w::text, '') = '') and (ie_proc_mat_w = 'P')) then
			nr_seq_conselho_w	:= null;
			
			select 	max(cd_medico)
			into STRICT	cd_medico_partic_w
			from	pls_proc_participante
			where	nr_seq_conta_proc	= nr_seq_item_w;
			
			select	max(nr_seq_conselho)
			into STRICT	nr_seq_conselho_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_medico_partic_w;
		end if;
			
		if (coalesce(nr_seq_material_w,0) > 0) then
			select	coalesce(max(ie_tipo_despesa),'')
			into STRICT	ie_tipo_desp_mat_w
			from	pls_material
			where	nr_sequencia	= nr_seq_material_w;
		
		end if;
		if (ie_proc_mat_w	= 'P') then
			ie_tipo_desp_mat_w := null;
		elsif (ie_proc_mat_w	= 'M') then
			cd_procedimento_w := null;
			ie_origem_proced_w := null;
			if (coalesce(ie_tipo_desp_mat_w::text, '') = '') then
				ie_tipo_desp_mat_w := 'X';	
			end if;		
		end if;	

		nr_seq_grupo_ans_w	:= pls_obter_grupo_ans(cd_procedimento_w, ie_origem_proced_w, nr_seq_conselho_w,
						nr_seq_tipo_atendimento_w, ie_tipo_guia_w, ie_regime_internacao_w, 
						ie_tipo_desp_mat_w, 'G', coalesce(cd_estabelecimento_p,0), nr_seq_conta_w);
						
		select	max(nr_seq_grupo_superior)
		into STRICT	nr_seq_grupo_superior_w
		from	ans_grupo_despesa
		where	nr_sequencia	= nr_seq_grupo_ans_w;
		
		if (ie_proc_mat_w	= 'P') then

			update	pls_conta_proc
			set	nr_seq_grupo_ans	= nr_seq_grupo_ans_w,
				nr_seq_grupo_ans_sup	= nr_seq_grupo_superior_w
			where	nr_sequencia		= nr_seq_item_w	
			and	coalesce(nr_lote_contab_pag,0) = 0
			and	coalesce(nr_lote_contabil_prov,0) = 0;
				--atualizacao do resumo inserida em cada if caso ocorra algum caso raro da sequencia da pls_conta_proc ser igual a sequencia da pls_conta_mat
				if (nr_seq_item_resumo_w > 0) then
				update	pls_conta_medica_resumo
				set	nr_seq_grupo_ans	= nr_seq_grupo_ans_w
				where	nr_seq_conta 		= nr_seq_conta_w
				and 	nr_seq_conta_proc 	= nr_seq_item_w;
				end if;
				
		elsif (ie_proc_mat_w	= 'M') then
		
			update	pls_conta_mat
			set	nr_seq_grupo_ans	= nr_seq_grupo_ans_w,
				nr_seq_grupo_ans_sup	= nr_seq_grupo_superior_w
			where	nr_sequencia		= nr_seq_item_w	
			and	coalesce(nr_lote_contab_pag,0) = 0
			and	coalesce(nr_lote_contabil_prov,0) = 0;
			
				if (nr_seq_item_resumo_w > 0) then
				update	pls_conta_medica_resumo
				set	nr_seq_grupo_ans	= nr_seq_grupo_ans_w
				where	nr_seq_conta 		= nr_seq_conta_w
				and 	nr_seq_conta_mat 	= nr_seq_item_w;
				end if;
		end if;
		
		-- Commit at item level, to solve the session locks reported on OS 1125737
		if (coalesce(ie_commit_p,'S') = 'S') then
			commit;
		end if;	
		
		end;
	end loop;
	close C02;

end if;

-- varre agora os recursos de glosas
nr_ind_rec_w := 0;

for r_c04_w in c04 loop

	-- Parte do principio que vai ser inserido, depois testa se nao pode
	ie_atualiza_rec_w := true;
	
	-- nao pode estar incluido em nenhum tipo de lote contabil
	if	((r_c04_w.nr_lote_contabil_pag != 0) or (r_c04_w.nr_lote_contabil_apres != 0) or (r_c04_w.nr_lote_contabil != 0)) then
		
		ie_atualiza_rec_w := false;
	end if;
	
	
	-- se esta tudo ok, entao adiciona no vetor para jogar par ao banco no momento apropriado
	if (ie_atualiza_rec_w) then
	
		tb_seq_rec_resumo_w(nr_ind_rec_w)	:= r_c04_w.nr_sequencia;
		tb_grupo_ans_w(nr_ind_rec_w)		:= r_c04_w.nr_seq_grupo_ans;
		
		nr_ind_rec_w := nr_ind_rec_w +1;
	end if;
	
	-- se ja atingiu o limite, joga para o banco
	if (nr_ind_rec_w <= pls_util_pck.qt_registro_transacao_w) then
	
		atualiza_recurso_glosa(tb_seq_rec_resumo_w, tb_grupo_ans_w, nm_usuario_p);
		
		nr_ind_rec_w := 0;
		tb_seq_rec_resumo_w.delete;
		tb_grupo_ans_w.delete;
	end if;

end loop;

-- se "sobrou" alguma coisa, manda para o banco
atualiza_recurso_glosa(tb_seq_rec_resumo_w, tb_grupo_ans_w, nm_usuario_p);

/* William - OS 405855 - Added ie_commit_p */

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_grupo_ans_conta ( nr_seq_protocolo_p bigint, ie_somente_nulo_p text, dt_inicio_p timestamp, dt_fim_p timestamp, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_atualizacao_p pls_atualizacao_contabil.nr_sequencia%type default null) FROM PUBLIC;

