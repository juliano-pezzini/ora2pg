-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_deletar_mensalidade ( nr_seq_mensalidade_p bigint, ie_deletar_mensalidade_p text, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


tb_nota_credito_w		pls_util_cta_pck.t_number_table;
indice_nc_w			integer;

tb_lancamento_programado_w	pls_util_cta_pck.t_number_table;
indice_lanc_prog_w		integer;

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_repasse_mens
	from	pls_repasse_mens a,
		pls_mensalidade_segurado b
	where	b.nr_sequencia		= a.nr_seq_mens_seg
	and	b.nr_seq_mensalidade	= nr_seq_mensalidade_p
	and	coalesce(a.nr_seq_repasse::text, '') = '';
	
C02 CURSOR FOR
	SELECT	a.nr_seq_nota_credito
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_mensalidade			c
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia  = b.nr_seq_mensalidade
	and	c.nr_sequencia	= nr_seq_mensalidade_p
	and	(a.nr_seq_nota_credito IS NOT NULL AND a.nr_seq_nota_credito::text <> '')
	order by
		coalesce(c.ie_cancelamento,' ') desc;

C03 CURSOR FOR
	SELECT	a.nr_seq_pos_proc,
		a.nr_seq_pos_mat
	from	pls_mensalidade_item_conta a,
		pls_mensalidade_seg_item b,
		pls_mensalidade_segurado c,
		pls_mensalidade d
	where	b.nr_sequencia = a.nr_seq_item
	and	c.nr_sequencia = b.nr_seq_mensalidade_seg
	and	d.nr_sequencia = c.nr_seq_mensalidade
	and	d.nr_sequencia = nr_seq_mensalidade_p
	and	((a.nr_seq_pos_mat IS NOT NULL AND a.nr_seq_pos_mat::text <> '') or (a.nr_seq_pos_proc IS NOT NULL AND a.nr_seq_pos_proc::text <> ''))
	order by
		coalesce(d.ie_cancelamento,' ') desc;
	
C04 CURSOR FOR
	SELECT	a.nr_seq_lancamento_mens
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_mensalidade			c
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia  = b.nr_seq_mensalidade
	and	c.nr_sequencia	= nr_seq_mensalidade_p
	and	(a.nr_seq_lancamento_mens IS NOT NULL AND a.nr_seq_lancamento_mens::text <> '');
	
BEGIN

for r_c01_w in C01 loop
	begin
	delete	from	pls_repasse_mens_item
	where	nr_seq_repasse	= r_c01_w.nr_seq_repasse_mens;
	
	delete	from	pls_repasse_mens
	where	nr_sequencia	= r_c01_w.nr_seq_repasse_mens;
	end;
end loop;

tb_nota_credito_w.delete;
indice_nc_w	:= 0;

for r_c02_w in C02 loop
	begin
	tb_nota_credito_w(indice_nc_w)	:= r_c02_w.nr_seq_nota_credito;
	indice_nc_w	:= indice_nc_w + 1;
	end;
end loop;

tb_lancamento_programado_w.delete;
indice_lanc_prog_w	:= 0;

for r_c04_w in c04 loop
	begin
	tb_lancamento_programado_w(indice_lanc_prog_w) := r_c04_w.nr_seq_lancamento_mens;
	indice_lanc_prog_w	:= indice_lanc_prog_w + 1;
	end;
end loop;

update	pls_pagador_quitacao_anual
set	nr_seq_mensalidade	 = NULL	
where	nr_seq_mensalidade	= nr_seq_mensalidade_p;

update	pls_segurado_mensalidade a
set	a.nr_seq_item_mensalidade  = NULL,
	a.dt_atualizacao	= clock_timestamp(),
	a.nm_usuario		= nm_usuario_p,
	ie_situacao		= CASE WHEN ie_acao_desfazer='I' THEN  ie_acao_desfazer  ELSE 'A' END
where	a.nr_seq_item_mensalidade in (SELECT	z.nr_sequencia
					from	pls_mensalidade_seg_item z,
						pls_mensalidade_segurado x
					where	x.nr_sequencia		= z.nr_seq_mensalidade_seg
					and	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

delete 	from 	pls_segurado_mensalidade a
where	a.nr_seq_mens_seg_gerado in (SELECT	x.nr_sequencia
					from	pls_mensalidade_segurado x
					where	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

update	pls_lancamento_mensalidade
set	nr_seq_mensalidade_item	 = NULL,
	nr_seq_mensalidade	 = NULL,
	dt_cobranca_mens	 = NULL
where	nr_seq_mensalidade	= nr_seq_mensalidade_p;

					
for r_c03_w in c03 loop
	begin
	if (r_c03_w.nr_seq_pos_proc IS NOT NULL AND r_c03_w.nr_seq_pos_proc::text <> '') then
		update	pls_conta_pos_proc
		set	ie_status_faturamento = 'L',
			nr_seq_regra_limite_mens 	 = NULL,
			nm_usuario			= nm_usuario_p,
			dt_atualizacao 			= clock_timestamp()
		where	nr_sequencia 			= r_c03_w.nr_seq_pos_proc;	
	elsif (r_c03_w.nr_seq_pos_mat IS NOT NULL AND r_c03_w.nr_seq_pos_mat::text <> '') then
		update	pls_conta_pos_mat
		set	ie_status_faturamento = 'L',
			nr_seq_regra_limite_mens 	 = NULL,
			nm_usuario			= nm_usuario_p,
			dt_atualizacao 			= clock_timestamp()
		where	nr_sequencia 			= r_c03_w.nr_seq_pos_mat;
	end if;
	end;
end loop;

delete	from	pls_mensalidade_sca
where	nr_seq_item_mens in (SELECT	z.nr_sequencia
					from	pls_mensalidade_seg_item z,
						pls_mensalidade_segurado x
					where	x.nr_sequencia		= z.nr_seq_mensalidade_seg
					and	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

delete	from	pls_mensalidade_trib
where	nr_seq_item_mens in (SELECT	z.nr_sequencia
					from	pls_mensalidade_seg_item z,
						pls_mensalidade_segurado x
					where	x.nr_sequencia		= z.nr_seq_mensalidade_seg
					and	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

delete	FROM pls_segurado_agravo_parc
where	nr_seq_mensalidade_item	in (SELECT	z.nr_sequencia
					from	pls_mensalidade_seg_item z,
						pls_mensalidade_segurado x
					where	x.nr_sequencia		= z.nr_seq_mensalidade_seg
					and	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

delete	FROM pls_mens_seg_item_aprop
where	nr_seq_item in (SELECT	z.nr_sequencia
			from	pls_mensalidade_seg_item z,
				pls_mensalidade_segurado x
			where	x.nr_sequencia		= z.nr_seq_mensalidade_seg
			and	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

delete	from	pls_mensalidade_seg_item
where	nr_seq_mensalidade_seg	in (SELECT	x.nr_sequencia
					from	pls_mensalidade_segurado x
					where	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

delete	from	pls_mensalidade_critica
where	nr_seq_mensalidade_seg	in (SELECT	x.nr_sequencia
					from	pls_mensalidade_segurado x
					where	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

update	pls_conta_coparticipacao
set	nr_seq_mensalidade_seg		 = NULL,
	ie_status_mensalidade 		= 'L',
	nr_seq_regra_limite_copartic 	 = NULL,
	vl_copartic_mens		 = NULL
where	nr_seq_mensalidade_seg in (SELECT	x.nr_sequencia
					from	pls_mensalidade_segurado x
					where	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);
					
update	pls_conta_pos_estabelecido
set	nr_seq_mensalidade_seg		 = NULL,
	nr_seq_regra_limite_mens 	 = NULL,
	dt_atualizacao			= clock_timestamp(),
	nm_usuario			= nm_usuario_p
where	nr_seq_mensalidade_seg in (SELECT	x.nr_sequencia
					from	pls_mensalidade_segurado x
					where	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

update	pls_conta_co
set	nr_seq_mensalidade_seg		 = NULL,
	nr_seq_regra_limite_mens	 = NULL,
	dt_atualizacao			= clock_timestamp(),
	nm_usuario			= nm_usuario_p
where	nr_seq_mensalidade_seg in (SELECT	x.nr_sequencia
					from	pls_mensalidade_segurado x
					where	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

update	pls_segurado_carteira
set	nr_seq_mensalidade_seg	 = NULL
where	nr_seq_mensalidade_seg	in (SELECT	x.nr_sequencia
					from	pls_mensalidade_segurado x
					where	x.nr_seq_mensalidade	= nr_seq_mensalidade_p);

update	pls_segurado_cart_ant
set	nr_seq_mensalidade_seg	 = NULL
where	nr_seq_mensalidade_seg	in (SELECT	x.nr_sequencia
					from	pls_mensalidade_segurado x
					where	x.nr_seq_mensalidade 	= nr_seq_mensalidade_p);
					
delete	from	pls_mensalidade_trib
where	nr_seq_mensalidade = nr_seq_mensalidade_p;

delete	from	pls_mensalidade_seg_item
where	nr_seq_mensalidade	= nr_seq_mensalidade_p;

delete	from	pls_mensalidade_segurado a
where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p;

delete	from	pls_mensalidade_ato_coop
where	nr_seq_mensalidade	= nr_seq_mensalidade_p;

delete	from	pls_mensalidade_historico
where	nr_seq_mensalidade	= nr_seq_mensalidade_p;

update	pls_pagador_amortizacao
set	nr_seq_mensalidade	 = NULL
where	nr_seq_mensalidade	= nr_seq_mensalidade_p;

update	pls_mensalidade_log
set	nr_seq_mensalidade	 = NULL
where	nr_seq_mensalidade	= nr_seq_mensalidade_p;

if (tb_nota_credito_w.count > 0) then
	for i in tb_nota_credito_w.first..tb_nota_credito_w.last loop
		CALL atualizar_saldo_nota_credito(tb_nota_credito_w(i),nm_usuario_p);
	end loop;
end if;

if (tb_lancamento_programado_w.count > 0) then
	for i in tb_lancamento_programado_w.first..tb_lancamento_programado_w.last loop
		CALL pls_atualizar_saldo_lanc_prog(tb_lancamento_programado_w(i), 'N');
	end loop;
end if;

if (ie_deletar_mensalidade_p = 'S') then
	delete 	from	pls_mensalidade a
	where 	a.nr_sequencia	= nr_seq_mensalidade_p;
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_deletar_mensalidade ( nr_seq_mensalidade_p bigint, ie_deletar_mensalidade_p text, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

