-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_cheque_cr_comp ( nr_seq_cheque_p bigint, nr_seq_conta_banco_p bigint, nr_seq_trans_financ_p bigint, nm_usuario_p text, dt_desf_comp_p timestamp default null) AS $body$
DECLARE


vl_cheque_w		double precision;
vl_adiant_banco_w	double precision;
cd_estabelecimento_w	bigint;
nr_seq_movto_w		bigint;
dt_cheque_w		timestamp;
dt_compensacao_w	timestamp;
nr_seq_conta_banco_w	bigint;
nr_seq_trans_financ_w	bigint;
nr_seq_movto_trans_w	bigint;
ie_acao_w		varchar(1);
dt_transacao_w		timestamp;
ie_dt_transacao_w	varchar(1);
/* Projeto Multimoeda - Variáveis */

vl_cheque_estrang_w	double precision;
vl_complemento_w	double precision;
vl_cotacao_w		cotacao_moeda.vl_cotacao%type;
cd_moeda_cheque_w	integer;
cd_moeda_banco_w	integer;
cd_moeda_empresa_w	integer;


BEGIN

if (nr_seq_cheque_p IS NOT NULL AND nr_seq_cheque_p::text <> '') then

	select	coalesce(max(vl_cheque),0),
		max(cd_estabelecimento),
		max(coalesce(DT_COMPENSACAO, dt_contabil)),
		max(dt_compensacao),
		max(vl_cheque_estrang),  -- Projeto Multimoeda - Busca os dados do cheque em moeda estrangeira.
		max(vl_cotacao),
		max(cd_moeda)
	into STRICT	vl_cheque_w,
		cd_estabelecimento_w,
		dt_cheque_w,
		dt_compensacao_w,
		vl_cheque_estrang_w,
		vl_cotacao_w,
		cd_moeda_cheque_w
	from	cheque_cr
	where	nr_seq_cheque	= nr_seq_cheque_p;

	/* Projeto Multimoeda - Busca a moeda padrão da empresa. */

	select	obter_moeda_padrao_empresa(cd_estabelecimento_w,'E')
	into STRICT	cd_moeda_empresa_w
	;

	ie_dt_transacao_w := obter_param_usuario(810, 73, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_dt_transacao_w);

	/* se não tiver data de compensação, está desfazendo a compensação */

	if (coalesce(dt_compensacao_w::text, '') = '') then

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_movto_trans_w
		from	transacao_financeira b,
			movto_trans_financ a
		where	b.ie_acao		in (0,25)
		and	a.nr_seq_trans_financ	= b.nr_sequencia
		and	a.nr_seq_cheque		= nr_seq_cheque_p;

		if (nr_seq_movto_trans_w IS NOT NULL AND nr_seq_movto_trans_w::text <> '') then

			select	max(a.nr_seq_trans_financ),
				max(a.nr_seq_banco),
				max(a.dt_transacao)
			into STRICT	nr_seq_trans_financ_w,
				nr_seq_conta_banco_w,
				dt_transacao_w
			from	movto_trans_financ a
			where	a.nr_sequencia	= nr_seq_movto_trans_w;

		end if;

		if (dt_desf_comp_p IS NOT NULL AND dt_desf_comp_p::text <> '') then
			dt_cheque_w := dt_desf_comp_p;
		end if;

		if (coalesce(ie_dt_transacao_w,'S ') = 'N') then
			dt_cheque_w	:= dt_transacao_w;
		end if;
		vl_cheque_w	:= coalesce(vl_cheque_w,0) * -1;
		ie_acao_w	:= 'E';
		/* Projeto Multimoeda - Verifica se o cheque é em moeda estrangeira, caso positivo inverte o valor para o estorno.*/

		if (coalesce(vl_cheque_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
			vl_cheque_estrang_w := vl_cheque_estrang_w * -1;
		end if;

	else

		nr_seq_trans_financ_w	:= nr_seq_trans_financ_p;
		nr_seq_conta_banco_w	:= nr_seq_conta_banco_p;
		ie_acao_w		:= 'I';

	end if;

	if (coalesce(nr_seq_conta_banco_w, 0) <> 0) and (nr_seq_trans_financ_w IS NOT NULL AND nr_seq_trans_financ_w::text <> '') then

		/* Projeto Multimoeda - Busca a moeda do banco para realizar a consistência com a moeda do cheque.
				Quando a moeda do cheque for diferente da moeda do banco a compensação não pode ser realizada,
				pois poderá ocasionar diferenças no banco, por existirem transações com moedas diferentes. A conta
				tem uma moeda definida e as transações devem ocorrer sempre na mesma moeda. Caso não exista moeda
				para o cheque ou para o banco será considerada a moeda padrão da empresa.
				Consistência deve ser realizada apenas na inclusão da compensação. */
		if (ie_acao_w = 'I') then
			select	obter_moeda_padrao_empresa(nr_seq_conta_banco_w,'B')
			into STRICT	cd_moeda_banco_w
			;
			if (coalesce(cd_moeda_cheque_w,cd_moeda_empresa_w) <> coalesce(cd_moeda_banco_w,cd_moeda_empresa_w)) then
				/* Desfaz a compensação do cheque pois as moedas são diferentes.*/

				CALL atualizar_dt_compe_cheque(null, -- Data da compensação
							nr_seq_cheque_p,
							'D', -- Desfazer compensação
							nm_usuario_p);
				-- O moeda do cheque é diferente da moeda da conta bancária selecionada.
				CALL wheb_mensagem_pck.exibir_mensagem_abort(346805);
			end if;
		end if;

		select	nextval('movto_trans_financ_seq')
		into STRICT	nr_seq_movto_w
		;

		/* Projeto Multimoeda - Verifica se o cheque é em moeda estrangeira, caso positivo calcula o complemento, caso contrário limpa as variáveis.*/

		if (coalesce(vl_cheque_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
			vl_complemento_w := vl_cheque_w - vl_cheque_estrang_w;
		else
			vl_cheque_estrang_w := null;
			vl_complemento_w := null;
			vl_cotacao_w := null;
			cd_moeda_cheque_w := null;
		end if;

		insert into movto_trans_financ(nr_sequencia,
			dt_transacao,
			nr_seq_trans_financ,
			vl_transacao,
			dt_atualizacao,
			nm_usuario,
			nr_seq_cheque,
			nr_seq_banco,
			nr_lote_contabil,
			ie_conciliacao,
			vl_transacao_estrang,
			vl_complemento,
			vl_cotacao,
			cd_moeda)
		values (nr_seq_movto_w,
			dt_cheque_w,
			nr_seq_trans_financ_w,
			vl_cheque_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_cheque_p,
			nr_seq_conta_banco_w,
			0,
			'N',
			vl_cheque_estrang_w,
			vl_complemento_w,
			vl_cotacao_w,
			cd_moeda_cheque_w);

		CALL atualizar_transacao_financeira(cd_estabelecimento_w, nr_seq_movto_w, nm_usuario_p, ie_acao_w);

	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_cheque_cr_comp ( nr_seq_cheque_p bigint, nr_seq_conta_banco_p bigint, nr_seq_trans_financ_p bigint, nm_usuario_p text, dt_desf_comp_p timestamp default null) FROM PUBLIC;

