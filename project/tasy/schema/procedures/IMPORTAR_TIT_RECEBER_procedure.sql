-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_tit_receber ( cd_estabelecimento_p bigint, nm_usuario_p text, dt_emissao_p timestamp, dt_vencimento_p timestamp, dt_pagamento_previsto_p timestamp, vl_titulo_p bigint, vl_saldo_titulo_p bigint, vl_saldo_juros_p bigint, vl_saldo_multa_p bigint, cd_moeda_p bigint, cd_portador_p bigint, cd_tipo_portador_p bigint, tx_juros_p bigint, tx_multa_p bigint, cd_tipo_taxa_juro_p bigint, cd_tipo_taxa_multa_p bigint, tx_desc_antecipacao_p bigint, ie_situacao_p text, ie_tipo_emissao_titulo_p bigint, ie_origem_titulo_p text, ie_tipo_titulo_p text, ie_tipo_inclusao_p text, cd_pessoa_fisica_p text, nr_interno_conta_p bigint, cd_cgc_p text, cd_serie_p text, nr_documento_p bigint, nr_sequencia_doc_p bigint, cd_banco_p bigint, cd_agencia_bancaria_p text, nr_bloqueto_p text, dt_liquidacao_p timestamp, nr_lote_contabil_p bigint, ds_observacao_titulo_p text, nr_atendimento_p bigint, nr_seq_protocolo_p bigint, dt_contabil_p timestamp, nr_seq_conta_banco_p bigint, dt_emissao_bloqueto_p timestamp, nr_seq_classe_p bigint, nr_guia_p text, nr_nota_fiscal_p bigint, nr_nosso_numero_p text, dt_ref_conta_p timestamp, cd_convenio_conta_p bigint, nr_seq_terc_conta_p bigint, nr_seq_nf_saida_p bigint, nr_processo_aih_p bigint, cd_tipo_recebimento_p bigint, nr_seq_controle_pessoa_p bigint, nr_seq_trans_fin_contab_p bigint, nr_seq_contrato_p bigint, vl_desc_previsto_p bigint, nr_seq_carteira_cobr_p bigint, dt_integracao_externa_p timestamp, cd_estab_financeiro_p bigint, nr_titulo_externo_p text, nr_seq_mensalidade_p bigint, nr_seq_mens_segurado_p bigint, ie_pls_p text, ie_gerar_classif_p text) AS $body$
DECLARE

/*

IE_TIPO_EMISSAO_TITULO			1 - Sem emissão Bloqueto
					2 - Emissão Bloqueto  Origem
					3 - Emissão Bloqueto Banco
					4 - Nota Promissória
					5 - Duplicata

CD_TIPO_PORTADOR			0 - Carteira
					1 - Banco
					2 - Empresa de Cobrança
					3 - Advogado/Jurídico
					4 - Cartório
					5 - Cartão de Crédito
					6 - Adm financeira

IE_ORIGEM_TITULO			1 - Nota Fiscal
					2 - Conta Paciente
					3 - Plano de Saúde
					9 - Outros

ie_situacao_p
					1 - Aberto
					2 - Liquidado
					3 - Cancelado
					4 - Liquidado com Cheque
					5 - Titulo Transferido
					6 - Liquidado como perda

ie_tipo_titulo_p
					1 - Bloqueto
					2 - Duplicata
					3 - Nota Promissória
					4 - Cheque
					5 - Guia
					6 - Nota Fiscal
					7 - Depósito bancário
					8 - Contas de terceiros

ie_tipo_inclusao_p
					1 - Manual
					2 - Automática


*/
qt_tipo_emissao_titulo_w	bigint;
qt_cd_tipo_portador_w		bigint;
qt_ie_origem_titulo_w		bigint;
qt_ie_situacao_w		bigint;
qt_ie_tipo_titulo_w		bigint;
qt_ie_tipo_inclusao_w		bigint;
nr_titulo_w			bigint;
nr_seq_classif_w		bigint;
nr_seq_conta_financ_w		bigint;
ds_erro_w			varchar(255);
ie_origem_titulo_w		varchar(10);
nr_seq_classe_tit_rec_w		bigint;
ie_tipo_titulo_rec_w		titulo_receber.ie_tipo_titulo%type;


BEGIN


select	count(b.vl_dominio)
into STRICT	qt_tipo_emissao_titulo_w
from	dominio a,
	valor_dominio b
where	a.cd_dominio	= b.cd_dominio
and	a.cd_dominio	= 702
and	b.vl_dominio	= ie_tipo_emissao_titulo_p;

select	count(b.vl_dominio)
into STRICT	qt_cd_tipo_portador_w
from	dominio a,
	valor_dominio b
where	a.cd_dominio	= b.cd_dominio
and	a.cd_dominio	= 703
and	b.vl_dominio	= cd_tipo_portador_p;

select	count(b.vl_dominio)
into STRICT	qt_ie_origem_titulo_w
from	dominio a,
	valor_dominio b
where	a.cd_dominio	= b.cd_dominio
and	a.cd_dominio	= 709
and	b.vl_dominio	= ie_origem_titulo_p;

select	count(b.vl_dominio)
into STRICT	qt_ie_situacao_w
from	dominio a,
	valor_dominio b
where	a.cd_dominio	= b.cd_dominio
and	a.cd_dominio	= 710
and	b.vl_dominio	= ie_situacao_p;

select	count(b.vl_dominio)
into STRICT	qt_ie_tipo_titulo_w
from	dominio a,
	valor_dominio b
where	a.cd_dominio	= b.cd_dominio
and	a.cd_dominio	= 712
and	b.vl_dominio	= ie_tipo_titulo_p;

select	count(b.vl_dominio)
into STRICT	qt_ie_tipo_inclusao_w
from	dominio a,
	valor_dominio b
where	a.cd_dominio	= b.cd_dominio
and	a.cd_dominio	= 713
and	b.vl_dominio	= ie_tipo_inclusao_p;

select	max(nr_titulo),
	max(ie_origem_titulo),
	max(nr_seq_classe),
	max(ie_tipo_titulo)
into STRICT	nr_titulo_w,
	ie_origem_titulo_w,
	nr_seq_classe_tit_rec_w,
	ie_tipo_titulo_rec_w
from	titulo_receber
where	nr_titulo_externo	= nr_titulo_externo_p;


if (coalesce(nr_titulo_w::text, '') = '')	then
	if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (dt_emissao_p IS NOT NULL AND dt_emissao_p::text <> '') and (dt_vencimento_p IS NOT NULL AND dt_vencimento_p::text <> '') and (dt_pagamento_previsto_p IS NOT NULL AND dt_pagamento_previsto_p::text <> '') and (vl_titulo_p IS NOT NULL AND vl_titulo_p::text <> '') and (vl_saldo_titulo_p IS NOT NULL AND vl_saldo_titulo_p::text <> '') and (vl_saldo_juros_p IS NOT NULL AND vl_saldo_juros_p::text <> '') and (vl_saldo_multa_p IS NOT NULL AND vl_saldo_multa_p::text <> '') and (cd_moeda_p IS NOT NULL AND cd_moeda_p::text <> '') and (cd_portador_p IS NOT NULL AND cd_portador_p::text <> '') and (tx_juros_p IS NOT NULL AND tx_juros_p::text <> '') and (tx_multa_p IS NOT NULL AND tx_multa_p::text <> '') and (cd_tipo_taxa_juro_p IS NOT NULL AND cd_tipo_taxa_juro_p::text <> '') and (cd_tipo_taxa_multa_p IS NOT NULL AND cd_tipo_taxa_multa_p::text <> '') and (tx_desc_antecipacao_p IS NOT NULL AND tx_desc_antecipacao_p::text <> '') then
		if (qt_tipo_emissao_titulo_w IS NOT NULL AND qt_tipo_emissao_titulo_w::text <> '') and (qt_cd_tipo_portador_w IS NOT NULL AND qt_cd_tipo_portador_w::text <> '') and (qt_ie_origem_titulo_w IS NOT NULL AND qt_ie_origem_titulo_w::text <> '') and (qt_ie_situacao_w IS NOT NULL AND qt_ie_situacao_w::text <> '') and (qt_ie_tipo_titulo_w IS NOT NULL AND qt_ie_tipo_titulo_w::text <> '') and (qt_ie_tipo_inclusao_w IS NOT NULL AND qt_ie_tipo_inclusao_w::text <> '') then
			if	((cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') and (coalesce(cd_pessoa_fisica_p::text, '') = ''))
			or ((cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (coalesce(cd_cgc_p::text, '') = ''))	then

				select	nextval('titulo_seq')
				into STRICT	nr_titulo_w
				;

				begin
				insert into titulo_receber(
					nr_titulo,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					dt_emissao,
					dt_vencimento,
					dt_pagamento_previsto,
					vl_titulo,
					vl_saldo_titulo,
					vl_saldo_juros,
					vl_saldo_multa,
					cd_moeda,
					cd_portador,
					cd_tipo_portador,
					tx_juros,
					tx_multa,
					cd_tipo_taxa_juro,
					cd_tipo_taxa_multa,
					tx_desc_antecipacao,
					ie_situacao,
					ie_tipo_emissao_titulo,
					ie_origem_titulo,
					ie_tipo_titulo,
					ie_tipo_inclusao,
					cd_pessoa_fisica,
					nr_interno_conta,
					cd_cgc,
					cd_serie,
					nr_documento,
					nr_sequencia_doc,
					cd_banco,
					cd_agencia_bancaria,
					nr_bloqueto,
					dt_liquidacao,
					nr_lote_contabil,
					ds_observacao_titulo,
					nr_atendimento,
					nr_seq_protocolo,
					dt_contabil,
					nr_seq_conta_banco,
					dt_emissao_bloqueto,
					nr_seq_classe,
					nr_guia,
					nr_nota_fiscal,
					nr_nosso_numero,
					dt_ref_conta,
					cd_convenio_conta,
					nr_seq_terc_conta,
					nr_seq_nf_saida,
					nr_processo_aih,
					cd_tipo_recebimento,
					nr_seq_controle_pessoa,
					nr_seq_trans_fin_contab,
					nr_seq_contrato,
					vl_desc_previsto,
					nr_seq_carteira_cobr,
					dt_integracao_externa,
					cd_estab_financeiro,
					nr_titulo_externo,
					nr_seq_mensalidade,
					nr_seq_mens_segurado,
					ie_pls,
					nm_usuario_orig,
					dt_inclusao)
				values (	nr_titulo_w,
					cd_estabelecimento_p,
					clock_timestamp(),
					nm_usuario_p,
					trunc(dt_emissao_p,'dd'),
					trunc(dt_vencimento_p,'dd'),
					trunc(dt_pagamento_previsto_p,'dd'),
					vl_titulo_p,
					vl_saldo_titulo_p,
					vl_saldo_juros_p,
					vl_saldo_multa_p,
					cd_moeda_p,
					cd_portador_p,
					cd_tipo_portador_p,
					tx_juros_p,
					tx_multa_p,
					cd_tipo_taxa_juro_p,
					cd_tipo_taxa_multa_p,
					tx_desc_antecipacao_p,
					ie_situacao_p,
					ie_tipo_emissao_titulo_p,
					ie_origem_titulo_p,
					ie_tipo_titulo_p,
					ie_tipo_inclusao_p,
					cd_pessoa_fisica_p,
					nr_interno_conta_p,
					cd_cgc_p,
					cd_serie_p,
					nr_documento_p,
					nr_sequencia_doc_p,
					cd_banco_p,
					cd_agencia_bancaria_p,
					nr_bloqueto_p,
					trunc(dt_liquidacao_p,'dd'),
					nr_lote_contabil_p,
					ds_observacao_titulo_p,
					nr_atendimento_p,
					nr_seq_protocolo_p,
					trunc(dt_contabil_p,'dd'),
					nr_seq_conta_banco_p,
					trunc(dt_emissao_bloqueto_p,'dd'),
					nr_seq_classe_p,
					nr_guia_p,
					nr_nota_fiscal_p,
					nr_nosso_numero_p,
					trunc(dt_ref_conta_p,'dd'),
					cd_convenio_conta_p,
					nr_seq_terc_conta_p,
					nr_seq_nf_saida_p,
					nr_processo_aih_p,
					cd_tipo_recebimento_p,
					nr_seq_controle_pessoa_p,
					nr_seq_trans_fin_contab_p,
					nr_seq_contrato_p,
					vl_desc_previsto_p,
					nr_seq_carteira_cobr_p,
					trunc(dt_integracao_externa_p,'dd'),
					cd_estab_financeiro_p,
					nr_titulo_externo_p,
					nr_seq_mensalidade_p,
					nr_seq_mens_segurado_p,
					ie_pls_p,
					nm_usuario_p,
					clock_timestamp());

				if (coalesce(ie_gerar_classif_p,'N') = 'S') then
					if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

						select	coalesce(max(nr_sequencia),0) + 1
						into STRICT	nr_seq_classif_w
						from	titulo_receber_classif
						where	nr_titulo = nr_titulo_w;

						insert into titulo_receber_classif(nr_titulo,
							nr_sequencia,
							vl_classificacao,
							dt_atualizacao,
							nm_usuario,
							cd_conta_financ)
						values (nr_titulo_w,
							nr_seq_classif_w,
							vl_titulo_p,
							clock_timestamp(),
							nm_usuario_p,
							243);
					end if;

					if (coalesce(cd_cgc_p,'X') <> 'X') then

						select	coalesce(max(nr_sequencia),0) + 1
						into STRICT	nr_seq_classif_w
						from	titulo_receber_classif
						where	nr_titulo = nr_titulo_w;

						nr_seq_conta_financ_w := obter_conta_financeira( 'E', cd_estabelecimento_p, null, null, null, null, null, cd_cgc_p, null, nr_seq_conta_financ_w, null, null, null, null, null, null, null, null, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, null, null, null, null, null, null, ie_tipo_titulo_rec_w, null);

						if (nr_seq_conta_financ_w IS NOT NULL AND nr_seq_conta_financ_w::text <> '') then
							insert into titulo_receber_classif(nr_titulo,
								nr_sequencia,
								vl_classificacao,
								dt_atualizacao,
								nm_usuario,
								cd_conta_financ)
							values (nr_titulo_w,
								nr_seq_classif_w,
								vl_titulo_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_conta_financ_w);
						end if;
					end if;
				end if;

				exception
				when others then
					null;
					/*ds_erro_w := SQLERRM(sqlcode);

					insert into log_tasy(
						dt_atualizacao,
						nm_usuario,
						cd_log,
						ds_log)
					values(
						sysdate,
						nm_usuario_p,
						55708,
						'nr_titulo = ' || nr_titulo_w ||
						'DS_ERRO = ' || ds_erro_w);*/
				end;
			end if;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_tit_receber ( cd_estabelecimento_p bigint, nm_usuario_p text, dt_emissao_p timestamp, dt_vencimento_p timestamp, dt_pagamento_previsto_p timestamp, vl_titulo_p bigint, vl_saldo_titulo_p bigint, vl_saldo_juros_p bigint, vl_saldo_multa_p bigint, cd_moeda_p bigint, cd_portador_p bigint, cd_tipo_portador_p bigint, tx_juros_p bigint, tx_multa_p bigint, cd_tipo_taxa_juro_p bigint, cd_tipo_taxa_multa_p bigint, tx_desc_antecipacao_p bigint, ie_situacao_p text, ie_tipo_emissao_titulo_p bigint, ie_origem_titulo_p text, ie_tipo_titulo_p text, ie_tipo_inclusao_p text, cd_pessoa_fisica_p text, nr_interno_conta_p bigint, cd_cgc_p text, cd_serie_p text, nr_documento_p bigint, nr_sequencia_doc_p bigint, cd_banco_p bigint, cd_agencia_bancaria_p text, nr_bloqueto_p text, dt_liquidacao_p timestamp, nr_lote_contabil_p bigint, ds_observacao_titulo_p text, nr_atendimento_p bigint, nr_seq_protocolo_p bigint, dt_contabil_p timestamp, nr_seq_conta_banco_p bigint, dt_emissao_bloqueto_p timestamp, nr_seq_classe_p bigint, nr_guia_p text, nr_nota_fiscal_p bigint, nr_nosso_numero_p text, dt_ref_conta_p timestamp, cd_convenio_conta_p bigint, nr_seq_terc_conta_p bigint, nr_seq_nf_saida_p bigint, nr_processo_aih_p bigint, cd_tipo_recebimento_p bigint, nr_seq_controle_pessoa_p bigint, nr_seq_trans_fin_contab_p bigint, nr_seq_contrato_p bigint, vl_desc_previsto_p bigint, nr_seq_carteira_cobr_p bigint, dt_integracao_externa_p timestamp, cd_estab_financeiro_p bigint, nr_titulo_externo_p text, nr_seq_mensalidade_p bigint, nr_seq_mens_segurado_p bigint, ie_pls_p text, ie_gerar_classif_p text) FROM PUBLIC;

