-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_requisito_gap (nr_seq_requisito_p bigint, nr_seq_modulo_p bigint, nr_seq_gap_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_responsavel_w		latam_modulo.cd_responsavel%type;
cd_base_requisito_w		latam_modulo.cd_base%type;
cd_requisito_w			bigint;
ie_gap_aprovado_w		varchar(1);


BEGIN

	if ((nr_seq_requisito_p IS NOT NULL AND nr_seq_requisito_p::text <> '')
		and (nr_seq_gap_p IS NOT NULL AND nr_seq_gap_p::text <> '')
		and (nr_seq_modulo_p IS NOT NULL AND nr_seq_modulo_p::text <> '')) then

		select	CASE WHEN coalesce(dt_aprovacao::text, '') = '' THEN 'N'  ELSE 'S' END
		into STRICT	ie_gap_aprovado_w
		from	latam_gap
		where	nr_sequencia = nr_seq_gap_p;

		if (ie_gap_aprovado_w = 'S') then

			CALL wheb_mensagem_pck.exibir_mensagem_abort(1036332);
		else

			begin
			select	max(cd_base),
				max(cd_responsavel)
			into STRICT	cd_base_requisito_w,
				cd_responsavel_w
			from	latam_modulo
			where	nr_sequencia = nr_seq_modulo_p;

			select	max(coalesce(somente_numero(cd_requisito),0)) + 1
			into STRICT	cd_requisito_w
			from	latam_requisito
			where	nr_seq_modulo = nr_seq_modulo_p
			and	nr_seq_gap = nr_seq_gap_p;

			insert into latam_requisito(nr_sequencia,
						cd_requisito,
						nr_seq_modulo,
						nr_seq_gap,
						ds_requisito_breve,
						ds_requisito,
						ie_situacao,
						ie_tipo_requisito,
						ie_esforco_desenv,
						ie_complexidade,
						pr_confianca,
						ie_necessita_design,
						ie_necessita_tecnologia,
						ie_classificacao,
						cd_responsavel,
						ds_observacao,
						ds_processo,
						nm_usuario,
						dt_atualizacao)
			SELECT	nextval('latam_requisito_seq'),
				substr(cd_base_requisito_w||'.'||cd_requisito_w , 0, 15),
				nr_seq_modulo_p,
				nr_seq_gap_p,
				a.ds_requisito_breve,
				coalesce(a.ds_requisito,a.ds_requisito_breve),
				a.ie_situacao,
				a.ie_tipo_requisito,
				a.ie_esforco_desenv,
				a.ie_complexidade,
				a.pr_confianca,
				a.ie_necessita_design,
				a.ie_necessita_tecnologia,
				a.ie_classificacao,
				cd_responsavel_w,
				a.ds_observacao,
				a.ds_processo,
				nm_usuario_p,
				clock_timestamp()
			from	latam_requisito a
			where	a.nr_sequencia = nr_seq_requisito_p;

			commit;

			end;
		end if;

	elsif (coalesce(nr_seq_gap_p::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1036393);
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_requisito_gap (nr_seq_requisito_p bigint, nr_seq_modulo_p bigint, nr_seq_gap_p bigint, nm_usuario_p text) FROM PUBLIC;

