-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_reprovacao_compras ( nr_seq_aprovacao_p bigint, nr_seq_processo_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
cd_estabelecimento_w							smallint;
ie_aprov_regra_minimo_w							varchar(1) 	:= 'N';
ie_tipo_w									varchar(20);
nr_documento_w								bigint;

c01 CURSOR FOR 
SELECT	distinct 
	'O', 
	nr_ordem_compra 
from	ordem_compra_item 
where	nr_seq_aprovacao	= nr_seq_aprovacao_p 

union
 
SELECT	distinct 
	'S', 
	nr_solic_compra 
from	Solic_compra_item 
where	nr_seq_aprovacao	= nr_seq_aprovacao_p 

union
 
select	distinct 
	'R', 
	nr_requisicao 
from	item_requisicao_material 
where	nr_seq_aprovacao	= nr_seq_aprovacao_p 

union
 
select	distinct 
	'N', 
	nr_sequencia 
from	nota_fiscal_item 
where	nr_seq_aprovacao	= nr_seq_aprovacao_p 

union
 
select	distinct 
	'L', 
	nr_Seq_licitacao 
from	reg_lic_item 
where	nr_seq_aprovacao	= nr_seq_aprovacao_p 

union
 
select	distinct 
	'C', 
	nr_cot_compra 
from	cot_compra_item 
where	nr_seq_aprovacao	= nr_seq_aprovacao_p 

union
 
select	distinct 
	'A', 
	nr_sequencia 
from	Processo_aprov_Compra 
where	nr_sequencia		= nr_seq_aprovacao_p 
and	nr_seq_proc_aprov	= nr_seq_processo_p 
order by 2, 1;

 

BEGIN 
 
select	coalesce(max(obter_estab_processo_aprov(nr_seq_aprovacao_p)),0) 
into STRICT	cd_estabelecimento_w
;
 
if (cd_estabelecimento_w > 0) then 
	select	coalesce(ie_aprov_regra_minimo, 'N') 
	into STRICT	ie_aprov_regra_minimo_w 
	from	parametro_compras 
	where	cd_estabelecimento	= cd_estabelecimento_w;
end if;
 
if (ie_aprov_regra_minimo_w in ('N','A')) then 
	update	processo_aprov_compra 
	set	dt_definicao 		 = NULL, 
		ie_aprov_reprov 		= 'P', 
		nm_usuario		= nm_usuario_p, 
		nm_usuario_aprov		= '', 
		dt_atualizacao		= clock_timestamp(), 
		ie_motivo_reprovacao	= '', 
		ds_observacao		= '' 
	where	nr_sequencia		= nr_seq_aprovacao_p 
	and	ie_aprov_reprov		= 'R';
elsif (ie_aprov_regra_minimo_w = 'S') then 
	update	processo_aprov_compra 
	set	dt_definicao 		 = NULL, 
		ie_aprov_reprov 		= 'P', 
		nm_usuario		= nm_usuario_p, 
		nm_usuario_aprov		 = NULL, 
		dt_atualizacao		= clock_timestamp(), 
		ie_motivo_reprovacao	= '', 
		ds_observacao		= '' 
	where	nr_sequencia		= nr_seq_aprovacao_p 
	and	nr_seq_proc_aprov	= nr_seq_processo_p;
end if;
 
open C01;
loop 
fetch C01 into	 
	ie_tipo_w, 
	nr_documento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	if (ie_tipo_w = 'R') then 
		begin		 
		update	item_requisicao_material 
		set 	dt_reprovacao		 = NULL, 
			cd_motivo_baixa		= 0 
		where	nr_seq_aprovacao		= nr_seq_aprovacao_p;
		 
		update	requisicao_material 
		set	dt_aprovacao 		 = NULL, 
			nm_usuario_aprov 		= '', 
			dt_baixa			 = NULL, 
			ds_observacao 		= substr(ds_observacao || CASE WHEN coalesce(ds_observacao,'0')='0' THEN  ''  ELSE chr(10) END  || Wheb_mensagem_pck.get_Texto(300844),1,255) 
		where	nr_requisicao in ( 
			SELECT	distinct nr_requisicao 
			from	item_requisicao_material 
			where	nr_seq_aprovacao = nr_seq_aprovacao_p);
		end;
		 
		if (nr_documento_w > 0) then 
			CALL gerar_historico_requisicao( 
				nr_documento_w, 
				Wheb_mensagem_pck.get_Texto(300845), 
				Wheb_mensagem_pck.get_Texto(300846), 
				'ER', 
				nm_usuario_p);
		end if;	
	elsif (ie_tipo_w = 'S') then 
		begin 
		 
		update	solic_compra_item 
		set 	dt_baixa			 = NULL, 
			dt_reprovacao		 = NULL 
		where	nr_seq_aprovacao		= nr_seq_aprovacao_p;	
 
		update	solic_compra 
		set	dt_autorizacao		 = NULL, 
			dt_baixa			 = NULL, 
			ds_observacao		= substr(ds_observacao || CASE WHEN coalesce(ds_observacao,'0')='0' THEN  ''  ELSE chr(10) END  || Wheb_mensagem_pck.get_Texto(300844),1,255) 
		where	nr_solic_compra	in ( 
			SELECT	distinct nr_solic_compra 
			from	Solic_compra_item 
			where	nr_seq_aprovacao = nr_seq_aprovacao_p);		
		 
		if (nr_documento_w > 0) then 
			 
			CALL gerar_historico_solic_compra( 
				nr_documento_w, 
				Wheb_mensagem_pck.get_Texto(300845), 
				Wheb_mensagem_pck.get_Texto(300847), 
				'S', 
				nm_usuario_p);
		end if;
		end;	
	elsif (ie_tipo_w = 'C') then 
		begin 
		 
		update	cot_compra_item 
		set 	dt_reprovacao		 = NULL 
		where	nr_seq_aprovacao		= nr_seq_aprovacao_p;
		 
		update	cot_compra 
		set	dt_aprovacao 		 = NULL, 
			nm_usuario_aprov		 = NULL 
		where	nr_cot_compra	in ( 
			SELECT	distinct nr_cot_compra 
			from	cot_compra_item 
			where	nr_seq_aprovacao = nr_seq_aprovacao_p);
 
		if (nr_documento_w > 0) then 
			CALL gerar_hist_cotacao_sem_commit( 
				nr_documento_w, 
				Wheb_mensagem_pck.get_Texto(300845), 
				Wheb_mensagem_pck.get_Texto(300848), 
				'S', 
				nm_usuario_p);			
		end if;
		end;
	elsif (ie_tipo_w = 'N') then 
		begin 
		 
		update	nota_fiscal_item 
		set	dt_reprovacao		 = NULL 
		where	nr_seq_aprovacao		= nr_seq_aprovacao_p;
		 
		update	nota_fiscal 
		set	dt_aprovacao 		 = NULL, 
			nm_usuario_aprov	= nm_usuario_p, 
			ds_observacao 		= substr(ds_observacao || CASE WHEN coalesce(ds_observacao,'0')='0' THEN  ''  ELSE chr(10) END  || Wheb_mensagem_pck.get_Texto(300844),1,4000) 
		where	nr_sequencia in ( 
			SELECT	distinct nr_sequencia 
			from	nota_fiscal_item 
			where	nr_seq_aprovacao = nr_seq_aprovacao_p);	
 
		if (nr_documento_w > 0) then 
			 
			 CALL gerar_historico_nota_fiscal( 
				nr_documento_w, 
				nm_usuario_p, 
				'46', 
				Wheb_mensagem_pck.get_Texto(300849));
			 
		end if;
		end;
		 
	elsif (ie_tipo_w = 'L') then 
		begin 
		 
		update	reg_lic_item 
		set	dt_reprovacao		 = NULL, 
			ie_motivo_reprovacao	 = NULL, 
			ds_justificativa_reprov	= '' 
		where	nr_seq_aprovacao	= nr_seq_aprovacao_p;
		 
		update	reg_licitacao 
		set	dt_aprovacao 		 = NULL, 
			nm_usuario_aprov	= nm_usuario_p 
		where	nr_sequencia in ( 
			SELECT	distinct nr_Seq_licitacao 
			from	reg_lic_item 
			where	nr_seq_aprovacao = nr_seq_aprovacao_p);	
 
		if (nr_documento_w > 0) then 
			 
			insert into reg_lic_historico( 
				nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				ie_tipo_historico, 
				ds_observacao, 
				nr_seq_licitacao) 
			values (	nextval('reg_lic_historico_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				'ERE', 
				Wheb_mensagem_pck.get_Texto(300850), 
				nr_documento_w);
			 
			 
		end if;
		end;
		 
	elsif (ie_tipo_w = 'O') then 
		begin 
		 
		update	ordem_compra_item 
		set	dt_reprovacao		 = NULL, 
			dt_reprovacao_orig		 = NULL 
		where	nr_seq_aprovacao		= nr_seq_aprovacao_p;
		 
		update	ordem_compra 
		set	dt_aprovacao 		 = NULL, 
			nm_usuario 		= nm_usuario_p, 
			dt_baixa			 = NULL, 
			ds_observacao 		= substr(ds_observacao || CASE WHEN coalesce(ds_observacao,'0')='0' THEN  ''  ELSE chr(10) END  || Wheb_mensagem_pck.get_Texto(300844),1,4000) 
		where	nr_ordem_compra in ( 
			SELECT	distinct nr_ordem_compra 
			from	ordem_compra_item 
			where	nr_seq_aprovacao = nr_seq_aprovacao_p);
 
		if (nr_documento_w > 0) then 
			CALL inserir_historico_ordem_compra( 
				nr_documento_w, 
				'S', 
				Wheb_mensagem_pck.get_Texto(300845), 
				Wheb_mensagem_pck.get_Texto(300852), 
				nm_usuario_p);
		end if;
		end;
	end if;
	end;
end loop;
close C01;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_reprovacao_compras ( nr_seq_aprovacao_p bigint, nr_seq_processo_p bigint, nm_usuario_p text) FROM PUBLIC;

