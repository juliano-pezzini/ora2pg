-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_desfazer_abi ( nr_seq_processo_p pls_processo.nr_sequencia%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Desfaz e exclui a ABI do ressarcimento ao SUS.


-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

			No inicio da rotina é feito a validação do processo de ressarcimento, se ele pode ou não ser desfeito
Alterações:
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_status_w			pls_processo.ie_status%type;
nr_lote_contabil_w		pls_processo.nr_lote_contabil%type;
nr_seq_lote_ar_w		pls_ar_lote.nr_sequencia%type;
nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;
nr_seq_lote_mensalidade_w	pls_lote_mensalidade.nr_sequencia%type;
nr_titulo_w			titulo_pagar.nr_titulo%type;

BEGIN


-- so executa se foi passado um processo
if (nr_seq_processo_p IS NOT NULL AND nr_seq_processo_p::text <> '') then

	-- busca as inf iniciais do processo
	select	coalesce(max(a.ie_status),'R'),
		coalesce(max(nr_lote_contabil),0),
		max((	select	max(x.nr_seq_lote)
			from	pls_ar_ress_sus		x,
				pls_processo_conta	y
			where	x.nr_seq_conta_sus	= y.nr_sequencia
			and	y.nr_seq_processo	= a.nr_sequencia)) nr_seq_lote_ar,
		max((	select	max(z.nr_sequencia)
			from	pls_processo_conta		x,
				pls_segurado_mensalidade	y,
				pls_mensalidade_seg_item	z
			where	x.nr_sequencia			= y.nr_seq_processo_conta
			and	z.nr_sequencia			= y.nr_seq_item_mensalidade
			and	x.nr_seq_processo		= a.nr_sequencia)) nr_seq_item_mensalidade,
		max((	select	max(z.nr_seq_lote)
			from	pls_processo_conta		x,
				pls_segurado_mensalidade	y,
				pls_mensalidade_seg_item	z
			where	x.nr_sequencia			= y.nr_seq_processo_conta
			and	z.nr_sequencia			= y.nr_seq_item_mensalidade
			and	x.nr_seq_processo		= a.nr_sequencia)) nr_seq_lote_mensalidade,
		max((	select	max(x.nr_titulo)
			from	titulo_pagar		x
			where	x.nr_seq_processo	= a.nr_sequencia)) nr_titulo
	into STRICT	ie_status_w,
		nr_lote_contabil_w,
		nr_seq_lote_ar_w,
		nr_seq_mensalidade_w,
		nr_seq_lote_mensalidade_w,
		nr_titulo_w
	from	pls_processo	a
	where	a.nr_sequencia	=  nr_seq_processo_p;

	-- se o status nao for "Recebido (R)", nao permite desfazer
	if (ie_status_w != 'R') then

		-- Só é possível desfazer um processo de ressarcimento ao SUS com status "Recebido".
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1041370);
	end if;

	-- Se o processo nao estiver em lote contábil
	if (nr_lote_contabil_w != 0) then

		-- O processo de ressarcimento ao SUS está no lote contábil: #@NR_LOTE_CONTABIL_P#@ e não pode ser desfeito.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1041373, 'NR_LOTE_CONTABIL_P='||to_char(nr_lote_contabil_w));
	end if;

	-- se alguma conta do processo estiver em analise de resultado, será necessário desfazer a analise de resultado (se possivel) para seguir com o processo
	if (nr_seq_lote_ar_w IS NOT NULL AND nr_seq_lote_ar_w::text <> '') then

		-- O processo de ressarcimento ao SUS está no lote de analise de resultado: #@NR_ANALISE_AR_P#@ e não pode ser desfeito.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1041375, 'NR_ANALISE_AR_P='||to_char(nr_seq_lote_ar_w));
	end if;

	-- valida se existe mensalidade
	if (nr_seq_lote_mensalidade_w IS NOT NULL AND nr_seq_lote_mensalidade_w::text <> '') then

		-- O processo de ressarcimento ao SUS está no lote de mensalidade: #@NR_LOTE_MENSALIDADE_P#@, mensalidade: #@NR_ITEM_MENSALIDADE_P#@ e não pode ser desfeito.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1041378, 'NR_LOTE_MENSALIDADE_P='||to_char(nr_seq_lote_mensalidade_w)||';NR_ITEM_MENSALIDADE_P='||to_char(nr_seq_mensalidade_w));
	end if;

	-- inicia a exclusão dos dados
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then

		-- O processo de ressarcimento ao SUS possui o título a pagar #@NR_TITULO_AP_P#@ e não pode ser desfeito.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1041378, 'NR_TITULO_AP_P='||to_char(nr_titulo_w));
	end if;


	---- Filhos da pls_processo_procedimento
	delete	FROM pls_impugnacao_proc	x
	where	x.nr_seq_processo_proc	in (	SELECT	b.nr_sequencia
						from	pls_processo_conta		a,
							pls_processo_procedimento	b
						where	b.nr_seq_conta			= a.nr_sequencia
						and	a.nr_seq_processo		= nr_seq_processo_p);

	----
	---- Filhos da pls_impugnacao_defesa
	delete	FROM pls_texto_defesa	x
	where	x.nr_seq_defesa		in (	SELECT	c.nr_sequencia
						from	pls_processo_conta	a,
							pls_impugnacao		b,
							pls_impugnacao_defesa	c
						where	b.nr_seq_conta		= a.nr_sequencia
						and	c.nr_seq_impugnacao	= b.nr_sequencia
						and	a.nr_seq_processo	= nr_seq_processo_p);

	----
	---- Filhos da pls_impugnacao
	delete	FROM pls_impugnacao_auditoria	x
	where	x.nr_seq_impugnacao		in (	SELECT	b.nr_sequencia
							from	pls_processo_conta	a,
								pls_impugnacao		b
							where	b.nr_seq_conta		= a.nr_sequencia
							and	a.nr_seq_processo	= nr_seq_processo_p);

	delete	FROM pls_impugnacao_defesa	x
	where	x.nr_seq_impugnacao	in (	SELECT	b.nr_sequencia
						from	pls_processo_conta	a,
							pls_impugnacao		b
						where	b.nr_seq_conta		= a.nr_sequencia
						and	a.nr_seq_processo	= nr_seq_processo_p);

	delete	FROM pls_impugnacao_proc	x
	where	x.nr_seq_impugnacao	in (	SELECT	b.nr_sequencia
						from	pls_processo_conta	a,
							pls_impugnacao		b
						where	b.nr_seq_conta		= a.nr_sequencia
						and	a.nr_seq_processo	= nr_seq_processo_p);
	----
	---- Filhos da pls_formulario
	delete	FROM pls_formulario_defesa	x
	where	x.nr_seq_formulario	in (	SELECT	b.nr_sequencia
						from	pls_processo_conta	a,
							pls_formulario		b
						where	b.nr_seq_conta		= a.nr_sequencia
						and	a.nr_seq_processo	= nr_seq_processo_p);

	delete	FROM pls_formulario_motivo	x
	where	x.nr_seq_formulario	in (	SELECT	b.nr_sequencia
						from	pls_processo_conta	a,
							pls_formulario		b
						where	b.nr_seq_conta		= a.nr_sequencia
						and	a.nr_seq_processo	= nr_seq_processo_p);

	delete	FROM pls_impugnacao_auditoria	x
	where	x.nr_seq_formulario		in (	SELECT	b.nr_sequencia
							from	pls_processo_conta	a,
								pls_formulario		b
							where	b.nr_seq_conta		= a.nr_sequencia
							and	a.nr_seq_processo	= nr_seq_processo_p);
	----
	---- Filhos da pls_processo_conta ( o PLS_AR_RESS_SUS e PLS_SEGURADO_MENSALIDADE nao é considerado, pois ele ja é validado acima
	delete	FROM pls_formulario	x
	where	x.nr_seq_conta	in (	SELECT	a.nr_sequencia
					from	pls_processo_conta	a
					where	a.nr_seq_processo	= nr_seq_processo_p);

	delete	FROM pls_impugnacao	x
	where	x.nr_seq_conta	in (	SELECT	a.nr_sequencia
					from	pls_processo_conta	a
					where	a.nr_seq_processo	= nr_seq_processo_p);

	delete	FROM pls_proc_conta_inconsist	x
	where	x.nr_seq_proc_conta		in (	SELECT	a.nr_sequencia
							from	pls_processo_conta	a
							where	a.nr_seq_processo	= nr_seq_processo_p);

	delete	FROM pls_proc_conta_pedido	x
	where	x.nr_seq_proc_conta	in (	SELECT	a.nr_sequencia
						from	pls_processo_conta	a
						where	a.nr_seq_processo	= nr_seq_processo_p);

	delete	FROM pls_processo_conta_anexo	x
	where	x.nr_seq_conta			in (	SELECT	a.nr_sequencia
							from	pls_processo_conta	a
							where	a.nr_seq_processo	= nr_seq_processo_p);

	delete	FROM pls_processo_conta_hist	x
	where	x.nr_seq_conta		in (	SELECT	a.nr_sequencia
						from	pls_processo_conta	a
						where	a.nr_seq_processo	= nr_seq_processo_p);

	delete	FROM pls_processo_procedimento	x
	where	x.nr_seq_conta			in (	SELECT	a.nr_sequencia
							from	pls_processo_conta	a
							where	a.nr_seq_processo	= nr_seq_processo_p);

	----
	---- Filhos pls_processo_gru
	delete	FROM pls_processo_conta	x
	where	x.nr_seq_processo	= nr_seq_processo_p;
	----
	---- Filhos pls_processo
	delete	FROM pls_processo_gru	x
	where	x.nr_seq_processo	= nr_seq_processo_p;

	delete	FROM pls_decisao_processual	x
	where	x.nr_seq_processo	= nr_seq_processo_p;

	delete	FROM pls_processo_anexo	x
	where	x.nr_seq_processo	= nr_seq_processo_p;

	delete	FROM pls_processo_historico	x
	where	x.nr_seq_processo	= nr_seq_processo_p;
	----
	delete	FROM pls_processo	x
	where	x.nr_sequencia	= nr_seq_processo_p;


commit;

end if; -- fim se foi passado um processo na chamada da rotina
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_desfazer_abi ( nr_seq_processo_p pls_processo.nr_sequencia%type) FROM PUBLIC;

