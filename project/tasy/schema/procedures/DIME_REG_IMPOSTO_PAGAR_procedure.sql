-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dime_reg_imposto_pagar ( nr_seq_controle_p bigint, cd_estabelecimento_p text, nm_usuario_p text, dt_referencia_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar as informações referenteaos impostos á pagar 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
ds_quadro_w			varchar(2);
nr_linha_w			bigint	:= qt_linha_p;
nr_seq_registro_w		bigint 	:= nr_sequencia_p;
separador_w			varchar(1)	:= ds_separador_p;
tp_registro_w			varchar(2);

cd_cfop_w			bigint;
nr_item_resumo_w		varchar(4);
ds_item_resumo_w		varchar(255);
vl_resumo_w			double precision;
vl_contabil_entrada_w		double precision;
vl_base_calculo_entrada_w	double precision;
vl_imposto_cred_entrada_w	double precision;
vl_isenta_entrada_w		double precision;
vl_outras_entrada_w		double precision;
vl_contabil_saida_w		double precision;
vl_base_calculo_saida_w		double precision;
vl_imposto_cred_saida_w		double precision;
vl_isenta_saida_w		double precision;
vl_outras_saida_w		double precision;
vl_saidas_w			double precision;
vl_entradas_w			double precision	:= 0;
vl_saldo_credito_w		double precision;
vl_9010_w			double precision	:= 0;
vl_9030_w			double precision	:= 0;
vl_9040_w			double precision	:= 0;
vl_9050_w			double precision	:= 0;
vl_9060_w			double precision	:= 0;
vl_9070_w			double precision	:= 0;
vl_9080_w			double precision	:= 0;
vl_9075_w			double precision	:= 0;
vl_9120_w			double precision	:= 0;
vl_9140_w			double precision	:= 0;
vl_9998_w			double precision	:= 0;

vl_saldo_debito_w		double precision;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
cd_conta_desc_icms_w		fis_dime.cd_conta_desc_icms%type;
cd_empresa_w			estabelecimento.cd_empresa%type;
nr_seq_data_w			ctb_mes_ref.nr_sequencia%type;
vl_movimento_w			ctb_saldo.vl_movimento%type;
nr_seq_regra_dime_w		fis_dime.nr_sequencia%type;

 
c_tipo_calculo CURSOR FOR 
	SELECT	vl_dominio 
	from	valor_dominio 
	where	cd_dominio = 4730 
	and	(vl_dominio)::numeric  not in (9060, 9130, 9020, 9150) 
	order by 
		nr_seq_apresent;


BEGIN 
ds_quadro_w	:= '09';
tp_registro_w	:= '30';
 
dt_inicial_w	:= trunc(trunc(dt_referencia_p,'yyyy'),'dd');
dt_final_w	:= fim_dia(fim_mes(dt_inicial_w));
 
cd_empresa_w	:= obter_empresa_estab(cd_estabelecimento_p);
 
select	nr_seq_regra_dime 
into STRICT	nr_seq_regra_dime_w 
from	fis_dime_controle 
where 	nr_sequencia	= nr_seq_controle_p;
 
select 	cd_conta_desc_icms 
into STRICT	cd_conta_desc_icms_w 
from 	fis_dime 
where	cd_estabelecimento	= cd_estabelecimento_p 
and	nr_sequencia		= nr_seq_regra_dime_w;
 
select	coalesce(max(nr_sequencia),0) 
into STRICT	nr_seq_data_w 
from 	ctb_mes_ref 
where 	trunc(dt_referencia,'mm')	= trunc(dt_referencia_p,'mm') 
and	cd_empresa			= cd_empresa_w;	
 
open c_tipo_calculo;
loop 
fetch c_tipo_calculo into	 
	nr_item_resumo_w;
EXIT WHEN NOT FOUND; /* apply on c_tipo_calculo */
	begin 
	ds_linha_w	:= null;
	vl_resumo_w	:= 0;
	 
	if (nr_item_resumo_w = 9010) then 
		select	coalesce(sum(obter_dados_trib_item_nf(a.nr_sequencia,'ICMS','TR')),0) vl_tributo 
		into STRICT	vl_imposto_cred_saida_w 
		FROM natureza_operacao o, nota_fiscal a
LEFT OUTER JOIN modelo_nota_fiscal m ON (a.nr_seq_modelo = m.nr_sequencia)
WHERE a.cd_natureza_operacao	= o.cd_natureza_operacao  and exists (SELECT	1 
				from	fis_lote_livro_fiscal f, 
					fis_lote_nota_fiscal n, 
					fis_lote l 
				where	n.nr_seq_lote		= f.nr_seq_lote 
				and	n.nr_seq_nota_fiscal 	= a.nr_sequencia 
				and	f.nr_seq_lote  = l.nr_sequencia 
				and	dt_referencia_p between l.dt_inicial and l.dt_final 
				and	l.ie_tipo_lote = 'S') and substr(o.cd_cfop,1,1) in (5,6,7);
 
		vl_resumo_w	:= vl_imposto_cred_saida_w;
		vl_9010_w	:= vl_resumo_w;
	elsif (nr_item_resumo_w = 9030) then 
		select	coalesce(sum(obter_dados_trib_item_nf(a.nr_sequencia,'ICMS','BC')),0) vl_base_calculo 
		into STRICT	vl_base_calculo_saida_w 
		FROM natureza_operacao o, nota_fiscal a
LEFT OUTER JOIN modelo_nota_fiscal m ON (a.nr_seq_modelo = m.nr_sequencia)
WHERE a.cd_natureza_operacao	= o.cd_natureza_operacao  and exists (SELECT	1 
				from	fis_lote_livro_fiscal f, 
					fis_lote_nota_fiscal n, 
					fis_lote l 
				where	n.nr_seq_lote		= f.nr_seq_lote 
				and	n.nr_seq_nota_fiscal 	= a.nr_sequencia 
				and	f.nr_seq_lote  = l.nr_sequencia 
				and	dt_referencia_p between l.dt_inicial and l.dt_final 
				and	l.ie_tipo_lote = 'E') and substr(o.cd_cfop,1,1) in (5,6,7);
		 
		vl_resumo_w	:= vl_base_calculo_saida_w;
		vl_9030_w	:= vl_resumo_w;
	elsif (nr_item_resumo_w = 9040) then 
		vl_resumo_w	:= vl_9010_w + vl_9030_w;
		vl_9040_w	:= vl_resumo_w;
	elsif (nr_item_resumo_w = 9050) then 
		select	coalesce(sum(obter_dados_trib_item_nf(a.nr_sequencia,'ICMS','TR')),0) vl_tributo 
		into STRICT	vl_imposto_cred_saida_w 
		FROM natureza_operacao o, nota_fiscal a
LEFT OUTER JOIN modelo_nota_fiscal m ON (a.nr_seq_modelo = m.nr_sequencia)
WHERE a.cd_natureza_operacao	= o.cd_natureza_operacao  and exists (SELECT	1 
				from	fis_lote_livro_fiscal f, 
					fis_lote_nota_fiscal n, 
					fis_lote l 
				where	n.nr_seq_lote		= f.nr_seq_lote 
				and	n.nr_seq_nota_fiscal 	= a.nr_sequencia 
				and	f.nr_seq_lote  = l.nr_sequencia 
				and	dt_referencia_p between l.dt_inicial and l.dt_final 
				and	l.ie_tipo_lote = 'E') and substr(o.cd_cfop,1,1) in (1,2,3);
		 
		vl_resumo_w	:= vl_imposto_cred_saida_w;
		vl_9050_w 	:= vl_resumo_w;
	elsif (nr_item_resumo_w = 9070) then 
		vl_resumo_w	:= 0;
		vl_9070_w	:= vl_resumo_w;
	elsif (nr_item_resumo_w = 9075) then 
	 
		if (coalesce(cd_conta_desc_icms_w,'0') <> '0') then 
			select	coalesce(sum(a.vl_movimento),0) 
			into STRICT 	vl_movimento_w 
			from 	ctb_balancete_v		a 
			where 	a.nr_seq_mes_ref	= nr_seq_data_w 
			and	a.cd_estabelecimento	= coalesce(cd_estabelecimento_p,a.cd_estabelecimento) 
			and	a.ie_normal_encerramento = 'N' 
			and	a.cd_conta_contabil	= cd_conta_desc_icms_w;
		else 
			 
			select	sum(a.vl_icms_devolucao) 
			into STRICT	vl_movimento_w 
			from	fis_livro_fiscal a 
			where	a.ie_tipo_livro_fiscal	= 'I' 
			and	dt_referencia_p between a.dt_inicial and a.dt_final;
			 
		end if;
		 
		vl_resumo_w	:= vl_movimento_w;
		vl_9075_w	:= vl_resumo_w;	
	elsif (nr_item_resumo_w = 9080) then 
		vl_resumo_w	:= vl_9050_w + vl_9060_w + vl_9070_w + vl_9075_w;
		vl_9080_w	:= vl_resumo_w;			
	elsif (nr_item_resumo_w = 9120) then 
		if (vl_9040_w > vl_9080_w) then 
			vl_resumo_w	:= vl_9040_w - vl_9080_w;
			vl_9120_w	:= vl_resumo_w;
		else 
			vl_resumo_w	:= 0;
			vl_9120_w	:= vl_resumo_w;
		end if;
	elsif (nr_item_resumo_w = 9140) then 
		if (vl_9040_w < vl_9080_w) then 
			vl_resumo_w	:= vl_9080_w - vl_9040_w;
			vl_9140_w	:= vl_resumo_w;
		else 
			vl_resumo_w	:= 0;
			vl_9140_w	:= vl_resumo_w;
		end if;
	elsif (nr_item_resumo_w = 9190) then 
		vl_resumo_w	:= vl_9140_w;
	elsif (nr_item_resumo_w = 9998) then 
		vl_resumo_w	:= vl_9140_w;
	elsif (nr_item_resumo_w = 9999) then 
		vl_resumo_w	:= vl_9120_w;
	end if;
	 
	/* Montar o arquivo */
 
	ds_linha_w	:= 	tp_registro_w							|| separador_w || 
				ds_quadro_w							|| separador_w || 
				substr(nr_item_resumo_w,2,4)					|| separador_w || 
				lpad(replace(campo_mascara( vl_resumo_w,2),'.',''),17,'0')	|| separador_w;
 
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;			
 
	-- insert na tabela do DIME 
	insert into w_dime_arquivo(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_seq_controle_dime, 
		nr_linha, 
		cd_registro, 
		ds_arquivo) 
	values (nextval('w_dime_arquivo_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_controle_p, 
		nr_linha_w, 
		tp_registro_w, 
		ds_arquivo_w);
 
	commit;
	 
	end;
end loop;
close c_tipo_calculo;
 
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;	
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dime_reg_imposto_pagar ( nr_seq_controle_p bigint, cd_estabelecimento_p text, nm_usuario_p text, dt_referencia_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

