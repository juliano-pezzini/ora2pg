-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_tit_rec_juros_multa (cd_estabelecimento_p bigint, cd_tipo_recebimento_p bigint, nr_titulo_p bigint, nr_seq_trans_financ_p bigint, vl_baixa_p bigint, dt_recebimento_p timestamp, nm_usuario_p text, nr_seq_conta_banco_p bigint, vl_juros_p bigint, vl_multa_p bigint, vl_baixa_pend_estrang_p bigint default null, vl_cotacao_pend_p bigint default null, cd_moeda_pend_p bigint default null, vl_desconto_p bigint default null, nr_seq_movto_bco_pend_p bigint default null) AS $body$
DECLARE


/* Projeto Multimoeda - 	Parâmetros vl_baixa_pend_estrang_p, vl_cotacao_pend_p e cd_moeda_pend_p vem do controle de crédito
	não identificado, utilizados para realizar a baixa do título em moeda estrangeira quando o crédito pendente
	estiver em moeda estrangeira. Parâmetros foram criados pois existe a possibilidade de realizar a baixa do
	título antes de salvar o registro na baixa do crédito, através do parâmetro 9 da função CorFin_CC.
*/
cd_moeda_padrao_w		integer	:= 0;
nr_seq_baixa_w			integer	:= 0;
nr_seq_conta_banco_w		bigint;
nr_seq_regra_w			bigint;
ie_acao_w			varchar(5);
ie_acao_baixa_w			varchar(5);
ie_apropriar_w			varchar(1);
nr_titulo_contab_w		bigint;
/* Projeto Multimoeda - Variáveis */

vl_baixa_estrang_w		double precision;
cd_moeda_w			integer;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
vl_complemento_w		double precision;
vl_cotacao_tit_w		cotacao_moeda.vl_cotacao%type;
cd_moeda_tit_w			integer;
vl_var_cambial_w		double precision;
vl_cambial_ativo_w		double precision := 0;
vl_cambial_passivo_w		double precision := 0;
dt_real_recebimento_w		titulo_receber_liq.dt_real_recebimento%type;
dt_credito_banco_w		titulo_receber_liq.dt_credito_banco%type;



BEGIN

select	cd_moeda_padrao
into STRICT	cd_moeda_padrao_w
from	parametro_contas_receber
where	cd_estabelecimento	= cd_estabelecimento_p;

/* Projeto Multimoeda - Verifica os parâmetros do crédito não identificado, se forem diferentes de 0 o crédito é em moeda estrangeira.
		Passa os valores do parâmetro para a variável que será gravada na baixa do título. */
if (coalesce(vl_baixa_pend_estrang_p,0) <> 0 and coalesce(vl_cotacao_pend_p,0) <> 0 and coalesce(cd_moeda_pend_p,0) <> 0) then
	vl_baixa_estrang_w	:= vl_baixa_pend_estrang_p;
	vl_cotacao_w		:= vl_cotacao_pend_p;
	cd_moeda_w		:= cd_moeda_pend_p;
end if;

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_seq_baixa_w
from	titulo_receber_liq
where	nr_titulo	= nr_titulo_p;

-- Quando a baixa ocorrer por crédito não identificado, gravar a data real de recebimento e a data de crédito no banco com a data do crédito não identificado
if (coalesce(nr_seq_movto_bco_pend_p,0) <> 0) then
	select 	max(dt_credito)
	into STRICT	dt_credito_banco_w
	from	movto_banco_pend
	where 	nr_sequencia = nr_seq_movto_bco_pend_p;

	dt_real_recebimento_w := dt_credito_banco_w;
end if;

/* Francisco - OS 87707 - 02/04/2008 */

if (coalesce(nr_seq_conta_banco_w::text, '') = '') then
	nr_seq_conta_banco_w	:= nr_seq_conta_banco_p;
end if;

/* Projeto Multimoeda - verifica a existência de valor em moeda estrangeira, caso não exista limpa os campos correspondentes */

if (coalesce(vl_baixa_estrang_w,0) <> 0) then
	vl_complemento_w := vl_baixa_p - vl_baixa_estrang_w;
else
	vl_baixa_estrang_w	:= null;
	vl_cotacao_w		:= null;
	vl_complemento_w	:= null;
	cd_moeda_w		:= null;
end if;

/* Projeto Multimoeda - Busca os dados do título para verificar a existência de variação cambial para títulos em moeda estrangeira quando a baixa for realizada na mesma moeda do título.
	Caso seja a mesma moeda e exista cotação no título e na baixa, calcula a variação entre a emissão do título e a baixa a ser realizada para gravar a variação passiva caso o
	valor seja negativo ou a variação passiva caso seja positivo. */
select	max(cd_moeda),
	max(vl_cotacao)
into STRICT	cd_moeda_tit_w,
	vl_cotacao_tit_w
from 	titulo_receber
where	nr_titulo = nr_titulo_p;
if (coalesce(cd_moeda_tit_w,0) <> 0 and coalesce(vl_cotacao_tit_w,0) <> 0
	and coalesce(cd_moeda_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
	if (cd_moeda_tit_w = cd_moeda_w) then
		vl_var_cambial_w := (coalesce(vl_baixa_estrang_w,0) * vl_cotacao_tit_w) - (coalesce(vl_baixa_estrang_w,0) * vl_cotacao_w);
		if (vl_var_cambial_w < 0) then
			vl_cambial_passivo_w := vl_var_cambial_w * -1;
			vl_cambial_ativo_w := 0;
		else
			vl_cambial_passivo_w := 0;
			vl_cambial_ativo_w := vl_var_cambial_w;
		end if;
	end if;
end if;

insert	into titulo_receber_liq(nr_titulo,
	nr_sequencia,
	dt_recebimento,
	vl_recebido,
	vl_descontos,
	vl_juros,
	vl_multa,
	vl_rec_maior,
	cd_moeda,
	dt_atualizacao,
	nm_usuario,
	cd_tipo_recebimento,
	ie_acao,
	cd_serie_nf_devol,
	nr_nota_fiscal_devol,
	cd_banco,
	cd_agencia_bancaria,
	nr_documento,
	nr_lote_banco,
	cd_cgc_emp_cred,
	nr_cartao_cred,
	nr_adiantamento,
	nr_lote_contabil,
	nr_seq_trans_fin,
	vl_glosa,
	ie_lib_caixa,
	nr_bordero,
	nr_seq_conta_banco,
	cd_centro_custo_desc,
	nr_seq_motivo_desc,
	vl_perdas,
	ds_observacao,
	vl_nota_credito,
	nr_lote_contab_antecip,
	nr_lote_contab_pro_rata,
	vl_recebido_estrang,
	vl_complemento,
	vl_cotacao,
	vl_cambial_passivo,
	vl_cambial_ativo,
	dt_real_recebimento,
	dt_credito_banco)
values (nr_titulo_p,
	nr_seq_baixa_w,
	coalesce(dt_recebimento_p, trunc(clock_timestamp(),'dd')),
	vl_baixa_p,
	coalesce(vl_desconto_p,0),
	coalesce(vl_juros_p,0),
	coalesce(vl_multa_p,0),
	0,
	coalesce(cd_moeda_w,cd_moeda_padrao_w),  -- Projeto Multimoeda - grava a moeda da transação, se não existir grava a moeda padrão
	clock_timestamp(),
	nm_usuario_p,
	cd_tipo_recebimento_p,
	'I',
	null,
	null,
	null,
	null,
	null,
	null,
	null,
	null,
	null,
	0,
	nr_seq_trans_financ_p,
	0,
	'S',
	null,
	nr_seq_conta_banco_w,
	null,
	null,
	null,
	null,
	null,
	0,
	0,
	vl_baixa_estrang_w,
	vl_complemento_w,
	vl_cotacao_w,
	vl_cambial_passivo_w,
	vl_cambial_ativo_w,
	dt_real_recebimento_w,
	dt_credito_banco_w);

/* Edgar 19/03/2008, OS 86492, alterei para chamar esta procedure sempre que lançada a baixa */

CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_p,null,nm_usuario_p,nr_titulo_p,nr_seq_baixa_w);


nr_titulo_contab_w := pls_gerar_tit_rec_liq_mens(nr_titulo_p, nr_seq_baixa_w, nm_usuario_p, nr_titulo_contab_w);

/* Francisco - OS194892 - 10/02/2010 */

if (vl_baixa_p > 0) then
	CALL pls_gerar_amortizacao_regra(nr_titulo_p,
				    nr_seq_baixa_w,
				    nm_usuario_p,
				    'N');
end if;



SELECT * FROM obter_regra_acao_pag_duplic(dt_recebimento_p, cd_estabelecimento_p, nm_usuario_p, nr_seq_regra_w, ie_acao_w) INTO STRICT nr_seq_regra_w, ie_acao_w;

--Deixar este IF fora do IF(ie_acao_w in ('NC','NCM')), pois a variável ie_acao_baixa_w é utilizada na procedure PLS_APROPRIAR_JUROS_MULTA_MENS
if (vl_baixa_p > 0) then
	ie_acao_baixa_w	:= 'I';
else
	ie_acao_baixa_w	:= 'E';
end if;

if (ie_acao_w in ('NC','NCM')) then
	ie_apropriar_w := tratar_baixa_duplicidade_tit(null, nr_titulo_p, nr_seq_baixa_w, ie_acao_baixa_w, dt_recebimento_p, nm_usuario_p, ie_apropriar_w);
end if;

/* Francisco - 28/09/2010 */

if (coalesce(ie_apropriar_w,'S') = 'S') then
	CALL pls_apropriar_juros_multa_mens(nr_titulo_p,nr_seq_baixa_w,nm_usuario_p,cd_estabelecimento_p,'N',ie_acao_baixa_w);
end if;

	if (nr_titulo_contab_w IS NOT NULL AND nr_titulo_contab_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236517, 'NR_TITULO=' || nr_titulo_contab_w);
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_tit_rec_juros_multa (cd_estabelecimento_p bigint, cd_tipo_recebimento_p bigint, nr_titulo_p bigint, nr_seq_trans_financ_p bigint, vl_baixa_p bigint, dt_recebimento_p timestamp, nm_usuario_p text, nr_seq_conta_banco_p bigint, vl_juros_p bigint, vl_multa_p bigint, vl_baixa_pend_estrang_p bigint default null, vl_cotacao_pend_p bigint default null, cd_moeda_pend_p bigint default null, vl_desconto_p bigint default null, nr_seq_movto_bco_pend_p bigint default null) FROM PUBLIC;

