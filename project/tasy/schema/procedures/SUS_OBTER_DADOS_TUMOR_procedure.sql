-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_obter_dados_tumor ( nr_atendimento_p bigint, nm_usuario_p text, cd_doenca_cid_p INOUT text, cd_topografia_p INOUT text, cd_morfologia_p INOUT text, cd_grau_histo_p INOUT text, cd_estadiamento_p INOUT text, cd_medico_p INOUT text, ie_lifonodos_reg_inval_p INOUT text, dt_diag_histopatologico_p INOUT timestamp, ds_localizacao_metastase_p INOUT text, cd_procedimento_p INOUT bigint, ie_finalidade_p INOUT text, cd_medico_resp_p INOUT text) AS $body$
DECLARE


qt_cid_doenca_w			bigint := 0;
ie_cid_topog_diag_w		varchar(10) := 'N';
cd_grau_histo_w			bigint;
ie_lifonodos_reg_inval_w		varchar(10);
cd_estadiamento_w			varchar(15) := '0';
qt_estadio_w			bigint := 0;
cd_procedimento_w		bigint;
nr_seq_paciente_w		bigint;
ie_finalidade_w			varchar(3);
cd_medico_resp_w		varchar(10) := '';
ie_origem_medico_w		varchar(10);

c01 CURSOR FOR
	SELECT	a.cd_doenca_cid,
		a.cd_topografia,
		a.cd_morfologia,
		a.cd_grau_histo,
		a.cd_estadiamento,
		a.cd_medico,
		a.cd_linfonodo_regional,
		a.dt_diag_histopatologico,
		a.ds_metastase,
		a.nr_sequencia
	from	can_loco_regional a
	where	a.cd_pessoa_fisica	= obter_pessoa_atendimento(nr_atendimento_p,'C')
	order by a.dt_avaliacao;

c01_w c01%rowtype;


BEGIN

ie_cid_topog_diag_w := Obter_Param_Usuario(281, 730, obter_perfil_ativo, nm_usuario_p, 0, ie_cid_topog_diag_w);

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

begin
select	max(vl_dominio)
into STRICT	cd_grau_histo_w
from	valor_dominio_v
where	cd_dominio		= 1251
and	upper(ds_valor_dominio)	= upper(c01_w.cd_grau_histo);
exception
	when others then
	cd_grau_histo_w := null;
end;


if (upper(c01_w.cd_linfonodo_regional)	like '%NX%') then
	ie_lifonodos_reg_inval_w	:='O';
elsif (somente_numero(c01_w.cd_linfonodo_regional)	<=0) then
	ie_lifonodos_reg_inval_w	:= 'N';
elsif (somente_numero(c01_w.cd_linfonodo_regional)	> 0 ) then
	ie_lifonodos_reg_inval_w	:= 'S';
end if;

select 	count(*)
into STRICT	qt_cid_doenca_w
from	cid_doenca
where	cd_doenca_cid = c01_w.cd_topografia;

cd_doenca_cid_p		:= c01_w.cd_doenca_cid;
if (qt_cid_doenca_w > 0) then
	begin
	cd_topografia_p		:= c01_w.cd_topografia;
	if (coalesce(ie_cid_topog_diag_w,'N') = 'S') then
		cd_doenca_cid_p := c01_w.cd_topografia;
	end if;
	end;
else
	cd_topografia_p		:= null;
end if;

begin
select	count(*)
into STRICT	qt_estadio_w
from	valor_dominio_v
where	cd_dominio = 2502
and	vl_dominio = c01_w.cd_estadiamento;
exception
when others then
	qt_estadio_w := 0;
end;

if (qt_estadio_w = 0) then
	begin

	begin
	select	coalesce(vl_dominio,'0')
	into STRICT	cd_estadiamento_w
	from	valor_dominio_v
	where	cd_dominio = 2502
	and	ds_valor_dominio = c01_w.cd_estadiamento;
	exception
	when others then
		cd_estadiamento_w := '0';
	end;

	end;
else
	cd_estadiamento_w := c01_w.cd_estadiamento;
end if;

begin
select	max(x.nr_seq_paciente),
	max(ie_finalidade),
	max(cd_medico_resp)
into STRICT	nr_seq_paciente_w,
	ie_finalidade_w,
	cd_medico_resp_w
from	paciente_setor x
where	x.cd_pessoa_fisica = obter_pessoa_atendimento(nr_atendimento_p,'C')
and	x.nr_seq_loco_regional = c01_w.nr_sequencia;
exception
when others then
	nr_seq_paciente_w := 0;
end;

begin
select	max(cd_procedimento)
into STRICT	cd_procedimento_w
from	paciente_protocolo_proc
where	ie_origem_proced = 7
and	nr_seq_paciente = nr_seq_paciente_w;
exception
when others then
	cd_procedimento_w := 0;
end;

ie_origem_medico_w :=  Obter_Valor_Param_Usuario(1124,146,obter_perfil_ativo,nm_usuario_p,obter_estabelecimento_ativo);

cd_morfologia_p		:= c01_w.cd_morfologia;
cd_grau_histo_p		:= cd_grau_histo_w;
if (ie_origem_medico_w = 'LR') then
	cd_medico_p		:= c01_w.cd_medico;
elsif (ie_origem_medico_w = 'AC') then
	cd_medico_p 		:= obter_dados_agenda_consulta(nr_atendimento_p, 'M');
end if;
cd_estadiamento_p		:= cd_estadiamento_w;

ie_lifonodos_reg_inval_p	:= ie_lifonodos_reg_inval_w;
dt_diag_histopatologico_p	:= c01_w.dt_diag_histopatologico;
ds_localizacao_metastase_p	:= substr(c01_w.ds_metastase,1,80);
cd_procedimento_p		:= cd_procedimento_w;
ie_finalidade_p		:= ie_finalidade_w;
cd_medico_resp_p		:= cd_medico_resp_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_obter_dados_tumor ( nr_atendimento_p bigint, nm_usuario_p text, cd_doenca_cid_p INOUT text, cd_topografia_p INOUT text, cd_morfologia_p INOUT text, cd_grau_histo_p INOUT text, cd_estadiamento_p INOUT text, cd_medico_p INOUT text, ie_lifonodos_reg_inval_p INOUT text, dt_diag_histopatologico_p INOUT timestamp, ds_localizacao_metastase_p INOUT text, cd_procedimento_p INOUT bigint, ie_finalidade_p INOUT text, cd_medico_resp_p INOUT text) FROM PUBLIC;

