-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE libera_descricao_cirurgia ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nr_cirurgia_p bigint, NR_SEQ_PEPO_P bigint, nm_usuario_p text, ds_cirurgia_p text) AS $body$
DECLARE


gerar_evo_cirurgia_w		varchar(1)	:= 'N';
ds_retorno_w				varchar(500);
ie_consiste_ds_cirurgia_w	varchar(2);
ie_relat_cirur_completa_w	varchar(2);
ie_liberar_sem_inicio_w		varchar(2);
dt_inicio_real_w				timestamp;
ie_gerar_aprovacao_w smallint;


BEGIN
if (coalesce(nr_sequencia_p,0) > 0) and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and
	((coalesce(nr_cirurgia_p,0) > 0) or (coalesce(nr_seq_pepo_p,0) > 0)) then
	begin
	
	ie_liberar_sem_inicio_w := obter_param_usuario(872, 404, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_liberar_sem_inicio_w);
	
	if (ie_liberar_sem_inicio_w = 'N') then
		select	max(dt_inicio_real)
		into STRICT		dt_inicio_real_w
		from   	cirurgia
		where  	(((nr_cirurgia = nr_cirurgia_p) and (coalesce(nr_cirurgia_p,0) > 0)) or	
					 ((nr_seq_pepo = nr_seq_pepo_p) and (coalesce(nr_seq_pepo_p,0) > 0)));
		if (coalesce(dt_inicio_real_w::text, '') = '') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(117234);
		end if;
	end if;	
	
	if (coalesce(nr_cirurgia_p,0) > 0) then	
		ds_retorno_w := consiste_liberacao_desc_cirur(nr_sequencia_p, nr_cirurgia_p, ds_retorno_w, cd_estabelecimento_p, nm_usuario_p);
		if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then
			begin
			--ds_retorno_w || '#@#@');
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(264502,'DS_RETORNO_W=' || DS_RETORNO_W);
			end;
		end if;
	end if;	
	
	Update 	cirurgia_descricao
	set 	dt_liberacao 	= clock_timestamp(),
			nm_usuario 		= nm_usuario_p
	where 	nr_sequencia 	= nr_sequencia_p;

	select count(1)
	  into STRICT ie_gerar_aprovacao_w 
	  from mult_aprov_funcao
	 where ie_situacao = 'A'
	 and cd_funcao = wheb_usuario_pck.get_cd_funcao;

	if (ie_gerar_aprovacao_w > 0) then
		CALL gerar_aprovacao_documento('CIRURGIA_DESCRICAO', 'NR_SEQUENCIA', nr_sequencia_p, nm_usuario_p);
	end if;

	--parametro 50 -> Gerar evolucao ao liberar descricao da cirurgia
	if	((coalesce(nr_cirurgia_p,0) > 0) or (coalesce(nr_seq_pepo_p,0) > 0)) then	
		gerar_evo_cirurgia_w := obter_param_usuario(872, 50, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, gerar_evo_cirurgia_w);
		if (gerar_evo_cirurgia_w = 'S') then
			begin
			CALL gerar_evolucao_cirurgia(nr_cirurgia_p, nr_sequencia_p, nm_usuario_p,nr_seq_pepo_p);
			end;
		end if;
	end if;	
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE libera_descricao_cirurgia ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nr_cirurgia_p bigint, NR_SEQ_PEPO_P bigint, nm_usuario_p text, ds_cirurgia_p text) FROM PUBLIC;

