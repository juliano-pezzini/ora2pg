-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_segurado_repasse_web ( nr_seq_repasse_p INOUT pls_segurado_repasse.nr_sequencia%type, dt_repasse_p pls_segurado_repasse.dt_repasse%type, nr_seq_congenere_p pls_congenere.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


ie_preco_w			pls_plano.ie_preco%type;
ie_tipo_repasse_w		pls_segurado_repasse.ie_tipo_repasse%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;
nr_seq_congenere_atend_w	pls_congenere.nr_sequencia%type;
nr_seq_congenere_cobr_w		pls_congenere.nr_sequencia%type;
dt_contratacao_w		pls_segurado.dt_contratacao%type;
qt_repasse_w			integer;
dt_repasse_w			pls_segurado_repasse.dt_repasse%type;
ie_validar_repasse_contrato_w	pls_param_estipulante_tws.ie_validar_repasse_contrato%type;
ie_data_repasse_w		pls_param_estipulante_tws.ie_data_repasse%type;

C01 CURSOR FOR
	SELECT	nr_seq_congenere_cobr,
		ie_tipo_repasse
	from (	SELECT	nr_seq_congenere_cobr,
				coalesce(nr_seq_congenere,0) nr_seq_congenere,
				ie_titularidade,
				ie_tipo_parentesco,
				ie_tipo_repasse,
				ie_tipo_intercambio
			from	pls_contrato_regra_repasse
			where	nr_seq_contrato = nr_seq_contrato_w
			and (nr_seq_congenere = nr_seq_congenere_atend_w or coalesce(nr_seq_congenere::text, '') = '')
			and	pls_obter_se_depend_repasse(nr_sequencia,nr_seq_segurado_p) = 'S'
			and	pls_restring_loc_atend_repasee(nr_sequencia,nr_seq_congenere_atend_w,cd_estabelecimento_p) = 'S'
			
union all

			select	nr_seq_congenere_cobr,
				coalesce(nr_seq_congenere,0) nr_seq_congenere,
				ie_titularidade,
				ie_tipo_parentesco,
				ie_tipo_repasse,
				ie_tipo_intercambio
			from	pls_contrato_regra_repasse
			where	nr_seq_intercambio = nr_seq_intercambio_w
			and (nr_seq_congenere = nr_seq_congenere_atend_w or coalesce(nr_seq_congenere::text, '') = '')
			and	pls_obter_se_depend_repasse(nr_sequencia,nr_seq_segurado_p) = 'S'
			and	pls_restring_loc_atend_repasee(nr_sequencia,nr_seq_congenere_atend_w,cd_estabelecimento_p) = 'S'
			
union all

			select	nr_seq_congenere_cobr,
				coalesce(nr_seq_congenere,0),
				ie_titularidade,
				ie_tipo_parentesco,
				ie_tipo_repasse,
				ie_tipo_intercambio
			from	pls_contrato_regra_repasse
			where	coalesce(nr_seq_contrato::text, '') = ''
			and	coalesce(nr_seq_intercambio::text, '') = ''
			and	cd_estabelecimento = cd_estabelecimento_p
			and (nr_seq_congenere = nr_seq_congenere_atend_w or coalesce(nr_seq_congenere::text, '') = '')
			and	pls_obter_se_depend_repasse(nr_sequencia,nr_seq_segurado_p) = 'S'
			and	not exists (	select	1
						from	pls_contrato_regra_repasse
						where	nr_seq_intercambio = nr_seq_intercambio_w
						
union

						select	1
						from	pls_contrato_regra_repasse
						where	nr_seq_contrato = nr_seq_contrato_w)) alias17
	order by nr_seq_congenere,
		CASE WHEN coalesce(ie_titularidade,'A')='A' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(ie_tipo_parentesco::text, '') = '' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(ie_tipo_intercambio,'A')='A' THEN -1  ELSE 1 END;


BEGIN
nr_seq_congenere_atend_w	:= nr_seq_congenere_p;

begin
select	coalesce(ie_validar_repasse_contrato,'N'),
	coalesce(ie_data_repasse,'0')
into STRICT	ie_validar_repasse_contrato_w,
	ie_data_repasse_w
from	pls_param_estipulante_tws
where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	ie_validar_repasse_contrato_w	:= 'N';
	ie_data_repasse_w		:= '0';
end;

select	b.ie_preco,
	a.nr_seq_contrato,
	a.nr_seq_intercambio,
	a.dt_contratacao
into STRICT	ie_preco_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	dt_contratacao_w
from	pls_segurado	a,
	pls_plano	b
where	a.nr_seq_plano	= b.nr_sequencia
and	a.nr_sequencia	= nr_seq_segurado_p;

if (ie_validar_repasse_contrato_w = 'S') and ((nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') or (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '')) then
	open C01;
	loop
	fetch C01 into
		nr_seq_congenere_cobr_w,
		ie_tipo_repasse_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
else
	nr_seq_congenere_cobr_w	:= nr_seq_congenere_atend_w;
end if;

if (coalesce(nr_seq_congenere_cobr_w,0) = 0) then
	nr_seq_congenere_cobr_w	:= nr_seq_congenere_atend_w;
end if;

if (coalesce(ie_tipo_repasse_w::text, '') = '') then
	if (ie_preco_w = '1') then
		ie_tipo_repasse_w	:= 'P';
	else
		ie_tipo_repasse_w	:= 'C';
	end if;
end if;	

if (nr_seq_repasse_p IS NOT NULL AND nr_seq_repasse_p::text <> '') then
	update	pls_segurado_repasse
	set	dt_repasse		= coalesce(dt_repasse_p,dt_contratacao_w),
		nr_seq_congenere	= nr_seq_congenere_p,
		nm_usuario		= nm_usuario_p,
		ie_origem_solicitacao	= 'P', 
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_repasse_p;
else
	select	count(*)
	into STRICT	qt_repasse_w
	from	pls_segurado_repasse
	where	nr_seq_segurado	= nr_seq_segurado_p
	and	coalesce(dt_fim_repasse::text, '') = '';
	
	if (ie_data_repasse_w = '0') then --Data da solicitacao
		dt_repasse_w	:= dt_repasse_p;
	elsif (ie_data_repasse_w = '1') then --Primeiro dia do mes seguinte
		dt_repasse_w	:= add_months(trunc(dt_repasse_p,'month'),1);
	end if;
	
	if	(dt_repasse_w IS NOT NULL AND dt_repasse_w::text <> '' AND dt_repasse_w < dt_contratacao_w) then
		dt_repasse_w := dt_contratacao_w;
	end if;
	
	-- Finalizar repasse existente ao inserir um novo
	if (qt_repasse_w > 0) then
		update	pls_segurado_repasse
		set	dt_fim_repasse	= fim_dia(dt_repasse_w-1),
			dt_fim_real	= clock_timestamp()
		where	nr_seq_segurado	= nr_seq_segurado_p
		and	(dt_repasse IS NOT NULL AND dt_repasse::text <> '')
		and	coalesce(dt_fim_repasse::text, '') = '';
	end if;
	
	insert	into	pls_segurado_repasse(	nr_sequencia, dt_repasse, nr_seq_congenere,
			nm_usuario, dt_atualizacao, cd_estabelecimento,
			nr_seq_segurado, dt_atualizacao_nrec, ie_origem_solicitacao,
			nr_seq_congenere_atend, ie_tipo_repasse, ie_tipo_compartilhamento)
		values (	nextval('pls_segurado_repasse_seq'), coalesce(dt_repasse_w,dt_contratacao_w), nr_seq_congenere_cobr_w,
			nm_usuario_p, clock_timestamp(), cd_estabelecimento_p,
			nr_seq_segurado_p, clock_timestamp(), 'P',
			nr_seq_congenere_atend_w, ie_tipo_repasse_w, 1)
		returning nr_sequencia into nr_seq_repasse_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_segurado_repasse_web ( nr_seq_repasse_p INOUT pls_segurado_repasse.nr_sequencia%type, dt_repasse_p pls_segurado_repasse.dt_repasse%type, nr_seq_congenere_p pls_congenere.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

