-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancelar_negociacao_cr_html5 ( nr_seq_negociacao_p bigint, dt_cancelamento_p timestamp, nm_usuario_p text, nr_seq_motivo_canc_p bigint, ds_observacao_p text) AS $body$
DECLARE

				 
vl_saldo_titulo_w		double precision;
vl_titulo_w			double precision;
nr_titulo_w			bigint;
qt_itens_vinc_w			bigint;
nr_seq_baixa_w			bigint;
nr_seq_seg_mens_w		bigint;
nr_seq_dep_ident_w		bigint;
dt_baixa_w				timestamp;
dt_negociacao_w			timestamp;
ie_limpar_obs_titulo_neg_w	varchar(1) := 'N';
ie_data_estorno_neg_w 	varchar(255);

c01 CURSOR FOR 
	SELECT	b.nr_titulo, 
		b.vl_titulo, 
		b.vl_saldo_titulo 
	from	titulo_receber b, 
		negociacao_cr_boleto a 
	where	a.nr_titulo		= b.nr_titulo 
	and	a.nr_seq_negociacao	= nr_seq_negociacao_p 
	
union all
 
	SELECT	b.nr_titulo, 
		b.vl_titulo, 
		b.vl_saldo_titulo 
	from	titulo_receber b, 
		negociacao_cr_deb_cc a 
	where	a.nr_titulo		= b.nr_titulo 
	and	a.nr_seq_negociacao	= nr_seq_negociacao_p 
	
union all
 
	select	a.nr_titulo, 
		a.vl_titulo, 
		a.vl_saldo_titulo 
	from	titulo_receber a 
	where	a.nr_seq_negociacao_origem	= nr_seq_negociacao_p 
	
union all
 
	select 	d.nr_titulo, 
		d.vl_titulo, 
		d.vl_saldo_titulo 
	from  titulo_receber		d, 
		deposito_ident_titulo 	c, 
		deposito_identificado  b, 
		negociacao_cr_dep_ident a 
	where  b.nr_sequencia 			= a.nr_seq_deposito_ident 
	and	b.nr_sequencia				= c.nr_seq_deposito 
	and	c.nr_titulo				= d.nr_titulo 
	and	a.nr_seq_negociacao 			= nr_seq_negociacao_p;
	
C03 CURSOR FOR 
	SELECT	a.nr_titulo, 
		b.nr_sequencia, 
		CASE WHEN  coalesce(ie_data_estorno_neg_w,'N')='S' THEN  coalesce(dt_cancelamento_p,b.dt_recebimento)  ELSE b.dt_recebimento END  
	from	titulo_rec_negociado c, 
		titulo_receber_liq b, 
		titulo_receber a 
	where	a.nr_titulo		= b.nr_titulo 
	and	c.nr_titulo		= a.nr_titulo 
	and	c.nr_seq_negociacao	= nr_seq_negociacao_p 
	and	b.nr_seq_negociacao_cr	= nr_seq_negociacao_p;

C04 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	negociacao_cr_pls_mens		b, 
		pls_segurado_mensalidade	a 
	where	a.nr_seq_negociacao_mens	= b.nr_sequencia 
	and	b.nr_seq_negociacao		= nr_seq_negociacao_p;
	
C05 CURSOR FOR 
	SELECT 	b.nr_sequencia 
	from  deposito_identificado  b, 
		negociacao_cr_dep_ident a 
	where  b.nr_sequencia 	= a.nr_seq_deposito_ident 
	and	a.nr_seq_negociacao 	= nr_seq_negociacao_p;	
 
C06 CURSOR FOR	 
	SELECT 	obter_tit_tesouraria_neg_cr(a.nr_seq_negociacao, a.nr_sequencia) 
	from	negociacao_cr_parcela a 
	where 	nr_seq_negociacao = nr_seq_negociacao_p;	
	 

BEGIN 
 
if (nr_seq_negociacao_p IS NOT NULL AND nr_seq_negociacao_p::text <> '') then 
	 
	select	count(*) 
	into STRICT	qt_itens_vinc_w 
	from	pls_mensalidade_seg_item	c, 
		negociacao_cr_pls_mens		b, 
		pls_segurado_mensalidade	a 
	where	a.nr_seq_negociacao_mens	= b.nr_sequencia 
	and	c.nr_sequencia			= a.nr_seq_item_mensalidade 
	and	b.nr_seq_negociacao		= nr_seq_negociacao_p;
	 
	if (qt_itens_vinc_w > 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(192894);
	end if;
	 
	select	a.dt_negociacao 
	into STRICT	dt_negociacao_w 
	from	negociacao_cr a 
	where	nr_sequencia = nr_seq_negociacao_p;
	 
	if (trunc(dt_negociacao_w) > coalesce(dt_cancelamento_p,clock_timestamp())) then 
		--A data de cancelamento não pode ser menor que a data de negociação! 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(219866);
	end if;
	 
	/* Cancelar títulos */
 
	open c01;
	loop 
	fetch c01 into	 
		nr_titulo_w, 
		vl_titulo_w, 
		vl_saldo_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		if (vl_titulo_w <> vl_saldo_titulo_w) then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(192895);
		end if;
		 
		CALL cancelar_titulo_receber(nr_titulo_w,nm_usuario_p,'N');
		 
		update	titulo_receber 
		set	dt_liquidacao 	= coalesce(dt_cancelamento_p,clock_timestamp()) 
		where	nr_titulo	= nr_titulo_w;
		end;
	end loop;
	close c01;
	 
	/*aamfirmo OS 900857 Limpar observacao do título*/
 
	ie_limpar_obs_titulo_neg_w := Obter_Param_Usuario(5514, 24, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_limpar_obs_titulo_neg_w);
	ie_data_estorno_neg_w := Obter_Param_Usuario(5514, 27, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_data_estorno_neg_w);
 
	open C03;
	loop 
	fetch C03 into	 
		nr_titulo_w, 
		nr_seq_baixa_w, 
		dt_baixa_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
 
		CALL estornar_tit_receber_liq(nr_titulo_w, nr_seq_baixa_w, dt_baixa_w, nm_usuario_p, 'N', wheb_mensagem_pck.get_texto(302765) || nr_seq_negociacao_p,'S');
		 
		if ( coalesce(ie_limpar_obs_titulo_neg_w,'N') = 'S') then 
			 
			update	titulo_receber a 
			set	a.ds_observacao_titulo 	 = NULL 
			where	a.nr_titulo			= nr_titulo_w;
			 
		end if;
		 
		end;
	end loop;
	close C03;
	 
	open C04;
	loop 
	fetch C04 into	 
		nr_seq_seg_mens_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		update	pls_segurado_mensalidade 
		set	ie_situacao	= 'I' 
		where	nr_sequencia	= nr_seq_seg_mens_w;
		end;
	end loop;
	close C04;
	 
	open C05;
	loop 
	fetch C05 into	 
		nr_seq_dep_ident_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		CALL cancelar_deposito_identificado(nr_seq_dep_ident_w,nm_usuario_p);
		end;
	end loop;
	close C05;
	update	negociacao_cr 
	set	dt_cancelamento		= coalesce(dt_cancelamento_p,clock_timestamp()), 
		nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp(), 
		ie_status		= 'CA', 
		nr_seq_motivo_canc	= nr_seq_motivo_canc_p, 
		ds_observacao		= ds_observacao_p 
	where	nr_sequencia	= nr_seq_negociacao_p;
	 
	if ( coalesce(ie_limpar_obs_titulo_neg_w,'N') = 'S') then 
		open C06;
		loop 
		fetch C06 into	 
			nr_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin 
				update	titulo_receber a 
				set	a.ds_observacao_titulo 	 = NULL 
				where	a.nr_titulo			= nr_titulo_w;
			end;
		end loop;
		close C06;	
	end if;
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_negociacao_cr_html5 ( nr_seq_negociacao_p bigint, dt_cancelamento_p timestamp, nm_usuario_p text, nr_seq_motivo_canc_p bigint, ds_observacao_p text) FROM PUBLIC;

