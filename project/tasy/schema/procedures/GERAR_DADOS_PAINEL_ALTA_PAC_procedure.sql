-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_dados_painel_alta_pac ( ie_informacao_p text, nr_cirurgia_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
ie_informacao_p:
DT_PACIENTE_AGUARDO	- DPA
DT_CHEGADA		- DC
DT_CHEGADA_FIM		- DCF
DT_SALA_RECUPERACAO	- DSR
DT_ALTA_CC		- DAC
DT_SAIDA_PACIENTE_CC - DS
DT_ANALISE		- IN
DT_CHAMADA_PRE_INDUCAO	- DCP
DT_PACIENTE_AGUARDO	- PA

*/
dt_chegada_w			timestamp;
dt_chegada_fim_w		timestamp;
dt_sala_recuperacao_w		timestamp;
dt_alta_cc_w			timestamp;
dt_saida_paciente_cc_w		timestamp;
dt_analise_w			timestamp;
dt_chamada_pre_inducao_w	timestamp;
nr_cirurgia_w			bigint;
cd_agenda_w			bigint;
dt_agenda_w			timestamp;
hr_inicio_w			timestamp;
qt_agenda_w			bigint;
dt_paciente_aguardo_w		timestamp;
nr_seq_agenda_w			agenda_paciente.nr_cirurgia%type;


BEGIN

if (nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') then
	select max(nr_sequencia)
	into STRICT   nr_seq_agenda_w
	from   agenda_paciente
	where  nr_cirurgia = nr_cirurgia_p;
end if;



IF (ie_informacao_p = 'DPA') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		UPDATE	agenda_paciente
		SET 	dt_paciente_aguardo = clock_timestamp()
		WHERE 	nr_sequencia = nr_seq_agenda_w;

ELSIF (ie_informacao_p = 'DC') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		UPDATE	agenda_paciente
		SET 	dt_chegada = clock_timestamp()
		WHERE 	nr_sequencia = nr_seq_agenda_w;

ELSIF (ie_informacao_p = 'DCF') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		UPDATE 	agenda_paciente
		SET 	dt_chegada_fim = clock_timestamp()
		WHERE 	nr_sequencia = nr_seq_agenda_w;
	
ELSIF (ie_informacao_p = 'DSR') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		UPDATE 	agenda_paciente
		SET 	dt_sala_recuperacao = clock_timestamp()
		WHERE 	nr_sequencia = nr_seq_agenda_w;

ELSIF (ie_informacao_p = 'DAC') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		UPDATE 	agenda_paciente
		SET 	dt_alta_cc = clock_timestamp()
		WHERE 	nr_sequencia = nr_seq_agenda_w;
	
ELSIF (ie_informacao_p = 'DS') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
	
		UPDATE	agenda_paciente
		SET 	dt_saida_paciente_cc 	= clock_timestamp()
		WHERE 	nr_sequencia 			= nr_seq_agenda_w;

ELSIF (ie_informacao_p = 'IN') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
	
		UPDATE	agenda_paciente
		SET 	dt_analise = clock_timestamp()
		WHERE 	nr_sequencia = nr_seq_agenda_w;
	

ELSIF (ie_informacao_p = 'PA') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		UPDATE	agenda_paciente
		SET 	dt_paciente_aguardo = clock_timestamp()
		WHERE 	nr_sequencia = nr_seq_agenda_w;

ELSIF (ie_informacao_p = 'E') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
	BEGIN

	SELECT	COUNT(*)
	INTO STRICT	qt_agenda_w
	FROM	agenda_paciente
	WHERE	cd_agenda		= cd_agenda_w
	AND	dt_agenda		= dt_agenda_w
	AND	hr_inicio		= hr_inicio_w
	AND	ie_status_agenda	= 'E'
	AND	nr_sequencia		<> nr_seq_agenda_w;

	IF (qt_agenda_w <> 0) THEN
		-- Existe outra agenda com status executado.#@#@
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(264443);
	END IF;

	UPDATE	agenda_paciente
	SET 	ie_status_agenda = 'E'
	WHERE 	nr_sequencia = 	nr_seq_agenda_w;


	END;

ELSIF (ie_informacao_p = 'DCP') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		
		UPDATE	agenda_paciente
		SET 	dt_chamada_pre_inducao = clock_timestamp()
		WHERE 	nr_sequencia = nr_seq_agenda_w;

END IF;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_dados_painel_alta_pac ( ie_informacao_p text, nr_cirurgia_p bigint, nm_usuario_p text) FROM PUBLIC;

