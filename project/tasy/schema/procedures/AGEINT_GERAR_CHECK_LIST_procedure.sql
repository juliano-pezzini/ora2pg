-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_check_list ( nr_seq_check_list_p bigint, nr_seq_proc_interno_p bigint, nr_seq_ageint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_especialidade_p bigint default null) AS $body$
DECLARE


nr_seq_item_w		bigint;	
cd_procedimento_w 	bigint;
ie_origem_proced_w	bigint;	
cd_convenio_w		integer;	
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
cd_estabelecimento_w	smallint;
ds_grupo_chec_w	ageint_grupo_check_list.ds_grupo%type;
		
				
C01 CURSOR FOR
	SELECT	b.nr_sequencia
	from	ageint_grupo_check_list a,
		ageint_item_check_list b
	where	a.ie_situacao = 'A'
	and	b.ie_situacao = 'A'
	and	b.nr_seq_grupo_check_list = a.nr_sequencia
	and	a.nr_sequencia in (SELECT	nr_seq_grupo_check_list
				   from		ageint_regra_checklist
				   where	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = '')) and
							((ie_tipo_convenio = Obter_Tipo_Convenio(cd_convenio_w)) or (coalesce(ie_tipo_convenio::text, '') = '')) and
							((cd_plano_convenio = cd_plano_w) or (coalesce(cd_plano_convenio::text, '') = '')) and
							((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = '')) and							
							((cd_area_procedimento = obter_area_procedimento(cd_procedimento_w, ie_origem_proced_w)) or (coalesce(cd_area_procedimento::text, '') = '')) and
							((cd_especialidade = obter_especialidade_proced(cd_procedimento_w, ie_origem_proced_w)) or (coalesce(cd_especialidade::text, '') = '')) and 
							((cd_grupo_proc = obter_grupo_procedimento(cd_procedimento_w, ie_origem_proced_w,'C')) or (coalesce(cd_grupo_proc::text, '') = '')) and 
							((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = '')) and 
							((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = ''))) and 
							((nr_seq_proc_interno = nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = '')) and
							((cd_especialidade_item = cd_especialidade_p) or (coalesce(cd_especialidade_item::text, '') = ''))
				   and		coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p)
	and	not exists (select	1
			    from	ageint_check_list_pac_item_v x
			    where	x.nr_seq_ageint = nr_seq_ageint_p
			    and		x.nr_seq_grupo = a.nr_sequencia);
				

BEGIN

select	cd_estabelecimento,
	cd_convenio,
	cd_categoria,
	cd_plano
into STRICT	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w
from	agenda_integrada
where	nr_sequencia = nr_seq_ageint_p;

SELECT * FROM obter_proc_tab_interno_conv(
				nr_seq_proc_interno_p, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;

open C01;
loop
fetch C01 into	
	nr_seq_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	substr(max(a.ds_grupo),1,255)
	into STRICT	ds_grupo_chec_w
	from	ageint_grupo_check_list a,
			ageint_item_check_list b
	where	b.nr_seq_grupo_check_list = a.nr_sequencia
	and		b.nr_sequencia = nr_seq_item_w;				
	
	
	insert into ageint_check_list_pac_item(	NR_SEQUENCIA,
						DT_ATUALIZACAO,
						NM_USUARIO,
						DT_ATUALIZACAO_NREC,
						NM_USUARIO_NREC,
						NR_SEQ_CHECK_LIST,						
						NR_SEQ_ITEM_CHECK_LIST,
						ds_RESULTADO)
	values (nextval('ageint_check_list_pac_item_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_check_list_p,
					nr_seq_item_w,
					'N');
	
	end;
end loop;
close C01;

update	ageint_check_list_paciente
set		ds_grupo = ds_grupo_chec_w
where	nr_sequencia = nr_seq_check_list_p;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_check_list ( nr_seq_check_list_p bigint, nr_seq_proc_interno_p bigint, nr_seq_ageint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_especialidade_p bigint default null) FROM PUBLIC;

