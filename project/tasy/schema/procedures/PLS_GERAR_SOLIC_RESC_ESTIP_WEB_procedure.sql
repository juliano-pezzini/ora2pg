-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_solic_resc_estip_web ( nr_seq_segurado_p bigint, nr_seq_motivo_rescisao_p bigint, nr_seq_causa_rescisao_p bigint, ds_observacao_p text, nm_usuario_p text, ds_email_p text, cd_cep_p text, ds_endereco_p text, nr_endereco_p bigint, ds_complemento_p text, ds_bairro_p text, cd_municipio_ibge_p text, sg_estado_p text, nr_ddi_celular_p text, nr_ddd_celular_p text, nr_telefone_celular_p text, nr_ddi_telefone_p text, nr_ddd_telefone_p text, nr_telefone_p text, ie_forma_envio_p text, nr_seq_mov_benef_p bigint, dt_solicitacao_rescisao_p timestamp, dt_obito_p timestamp, nr_certidao_obito_p text, qt_meses_contribuicao_p bigint, dt_concessao_aposentadoria_p timestamp, ie_devolucao_carteira_p text, nr_protocolo_atend_p INOUT bigint, nr_seq_solicitacao_p INOUT bigint, ie_commit_p text default 'S', ie_liberar_rescisao_p text DEFAULT NULL) AS $body$
DECLARE


--Procedure utilizada no portal do plano de saude
ie_exige_lib_web_w		pls_web_param_geral.ie_exige_liberacao_resc%type;

nr_seq_solicitacao_w		pls_solicitacao_rescisao.nr_sequencia%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_pf_contato_w			pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_titular_w		pls_segurado.nr_sequencia%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_contrato_w			pls_contrato.nr_contrato%type;
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_seq_protocolo_atend_w	pls_protocolo_atendimento.nr_sequencia%type;
nr_protocolo_atend_w		pls_protocolo_atendimento.nr_protocolo%type;
nr_seq_tipo_contato_w		pls_tp_contato_solic_resc.nr_sequencia%type;
dt_solicitacao_rescisao_w	pls_solicitacao_rescisao.dt_solicitacao%type;
dt_obito_w			pls_solic_rescisao_benef.dt_obito%type;
nr_certidao_obito_w		pls_solic_rescisao_benef.nr_certidao_obito%type;
qt_meses_contribuicao_w		pls_solic_rescisao_benef.qt_meses_contribuicao%type;
dt_concessao_aposentadoria_w	pls_solic_rescisao_benef.dt_concessao_aposentadoria%type;
nr_seq_motivo_rescisao_w	pls_solic_rescisao_benef.nr_seq_motivo_rescisao%type;
ie_obito_titular_w		pls_motivo_cancelamento.ie_obito%type;
ie_seguro_obito_w		varchar(1);
qt_dependente_ativo_w		integer;
ie_lancar_beneficio_obito_w	varchar(1);
qt_rescisao_liberada_benef_w	bigint;

C01 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type,
		nr_seq_titular_pc	pls_segurado.nr_sequencia%type,
		dt_rescisao_pc		timestamp) FOR
	SELECT	nr_sequencia nr_seq_segurado,
		nr_seq_titular
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_pc
	and	coalesce(nr_seq_titular_pc::text, '') = ''  --Beneficiario titular
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and (coalesce(dt_rescisao::text, '') = '' or dt_rescisao >= dt_rescisao_pc)
	
union all

	SELECT	a.nr_sequencia nr_seq_segurado,
		a.nr_seq_titular
	from	pls_segurado a
	where	((a.nr_seq_titular = nr_seq_segurado_pc and ie_lancar_beneficio_obito_w = 'N') or (a.nr_sequencia = nr_seq_segurado_pc and (nr_seq_titular_pc IS NOT NULL AND nr_seq_titular_pc::text <> ''))) --Beneficiario dependente
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and (coalesce(a.dt_rescisao::text, '') = '' or a.dt_rescisao >= dt_rescisao_pc);

BEGIN
select	count(1)
into STRICT	qt_rescisao_liberada_benef_w
from	pls_solic_rescisao_benef a,
	pls_solicitacao_rescisao b
where	b.nr_sequencia = a.nr_seq_solicitacao
and	a.nr_seq_segurado = nr_seq_segurado_p
and	b.ie_status = 2;

if (qt_rescisao_liberada_benef_w = 0) then
	dt_solicitacao_rescisao_w	:= coalesce(dt_solicitacao_rescisao_p, clock_timestamp());
	ie_lancar_beneficio_obito_w	:= 'N';

	select	a.cd_pessoa_fisica,
		a.nr_seq_titular,
		a.nr_seq_contrato,
		(	select	max(x.nr_contrato)
			from	pls_contrato x
			where	x.nr_sequencia = a.nr_seq_contrato) nr_contrato,
		a.nr_seq_intercambio,
		a.cd_estabelecimento,
		coalesce(pls_obter_se_titular_obito(a.nr_sequencia,'M','P'),'N') ie_seguro_obito
	into STRICT	cd_pessoa_fisica_w,
		nr_seq_titular_w,
		nr_seq_contrato_w,
		nr_contrato_w,
		nr_seq_intercambio_w,
		cd_estabelecimento_w,
		ie_seguro_obito_w
	from	pls_segurado a
	where	a.nr_sequencia	= nr_seq_segurado_p;

	if (nr_seq_mov_benef_p IS NOT NULL AND nr_seq_mov_benef_p::text <> '') then
		ie_exige_lib_web_w	:= 'N'; --Se for exclusao via movimentacao por lote do portal, deve gerar a solicitacao liberada
	else
		if (ie_liberar_rescisao_p IS NOT NULL AND ie_liberar_rescisao_p::text <> '') then --Parametro para liberar rescisao automaticamente novo portal estipulante
			select	CASE WHEN ie_liberar_rescisao_p='S' THEN 'N'  ELSE 'S' END
			into STRICT	ie_exige_lib_web_w
			;
		else
			select	coalesce(max(ie_exige_liberacao_resc),'N')
			into STRICT	ie_exige_lib_web_w
			from	pls_web_param_geral
			where	cd_estabelecimento	= cd_estabelecimento_w;
		end if;
	end if;

	if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then --Dependente
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pf_contato_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_titular_w;
		
		ie_obito_titular_w	:= 'N';
	else --Titular
		cd_pf_contato_w	:= cd_pessoa_fisica_w;
		
		select	coalesce(max(ie_obito),'N')
		into STRICT	ie_obito_titular_w
		from	pls_motivo_cancelamento
		where	nr_sequencia	= nr_seq_motivo_rescisao_p;
		
		if (ie_obito_titular_w = 'S') and (ie_seguro_obito_w = 'S') and (dt_obito_p IS NOT NULL AND dt_obito_p::text <> '') then
			
			select	count(*)
			into STRICT	qt_dependente_ativo_w
			from	pls_segurado
			where	nr_seq_titular	= nr_seq_segurado_p
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and (coalesce(dt_rescisao::text, '') = '' or dt_rescisao >= dt_obito_p);
			
			if (qt_dependente_ativo_w > 0) then
				ie_lancar_beneficio_obito_w	:= 'S';
			end if;
		end if;
	end if;

	insert	into pls_solicitacao_rescisao(nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		dt_solicitacao,
		ie_status,
		ie_origem_solicitacao,
		ie_forma_pedido,
		nr_contrato,
		nr_seq_contrato,
		nr_seq_intercambio,
		ie_rescindir_contrato,
		ds_observacao,
		nr_seq_mov_benef
		)
	values (nextval('pls_solicitacao_rescisao_seq'),
		cd_estabelecimento_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		dt_solicitacao_rescisao_w,
		1, --Pendente de liberacao
		'P', --Portal web
		5, --Portal
		nr_contrato_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w,
		'P',
		ds_observacao_p,
		nr_seq_mov_benef_p)
	returning nr_sequencia into nr_seq_solicitacao_w;

	--Gerar o protocolo de atendimento
	if (ie_exige_lib_web_w = 'N') then --Se nao exige liberacao, entao gera o protocolo e ja libera a solicitacao
		SELECT * FROM pls_gravar_protocolo_atend('7', nr_seq_segurado_p, null, null, null, null, nr_seq_solicitacao_w, null, null, null, cd_estabelecimento_w, nm_usuario_p, nr_seq_protocolo_atend_w, nr_protocolo_atend_w, 'N') INTO STRICT nr_seq_protocolo_atend_w, nr_protocolo_atend_w;
		
		update	pls_solicitacao_rescisao
		set	nr_seq_protocolo_atend	= nr_seq_protocolo_atend_w
		where	nr_sequencia		= nr_seq_solicitacao_w;
	else --Se exige liberacao, o protocolo somente podera ser gerado na liberacao da solicitacao
		nr_seq_protocolo_atend_w	:= null;
		nr_protocolo_atend_w		:= 0;
	end if;

	for r_c01_w in C01(nr_seq_segurado_p,nr_seq_titular_w,clock_timestamp()) loop
		begin
		if (r_c01_w.nr_seq_segurado = nr_seq_segurado_p) then --Os campos so podem ser preenchidos para o beneficiario que esta sendo rescindido - Titular
			dt_obito_w		:= dt_obito_p;
			nr_certidao_obito_w	:= nr_certidao_obito_p;
			qt_meses_contribuicao_w		:= qt_meses_contribuicao_p;
			dt_concessao_aposentadoria_w	:= dt_concessao_aposentadoria_p;
			nr_seq_motivo_rescisao_w	:= nr_seq_motivo_rescisao_p;
		else --Dependentes
			dt_obito_w		:= null;
			nr_certidao_obito_w	:= null;
			qt_meses_contribuicao_w		:= null;
			dt_concessao_aposentadoria_w	:= null;
			
			nr_seq_motivo_rescisao_w := pls_converter_motivo_can_tit(nr_seq_motivo_rescisao_p, nr_seq_motivo_rescisao_w, nm_usuario_p);
			nr_seq_motivo_rescisao_w	:= coalesce(nr_seq_motivo_rescisao_w,nr_seq_motivo_rescisao_p);
		end if;
		
		insert	into	pls_solic_rescisao_benef(	nr_sequencia, nr_seq_solicitacao, nr_seq_segurado,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_causa_rescisao, nr_seq_motivo_rescisao, ie_titularidade,
				dt_obito, nr_certidao_obito, qt_meses_contribuicao, dt_concessao_aposentadoria,
				ie_devolucao_carteira)
			values (	nextval('pls_solic_rescisao_benef_seq'), nr_seq_solicitacao_w, r_c01_w.nr_seq_segurado,
				clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_causa_rescisao_p, nr_seq_motivo_rescisao_w, CASE WHEN coalesce(r_c01_w.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
				dt_obito_w, nr_certidao_obito_w, qt_meses_contribuicao_w, dt_concessao_aposentadoria_w,
				coalesce(ie_devolucao_carteira_p,'N') );
		end;
	end loop;

	select	max(nr_sequencia)
	into STRICT	nr_seq_tipo_contato_w
	from	pls_tp_contato_solic_resc
	where	ie_padrao = 'S'
	and	ie_situacao = 'A';

	insert	into	pls_solic_resc_contato(	nr_sequencia, nr_seq_solicitacao, cd_pessoa_fisica, nr_seq_tipo_contato,
			dt_atualizacao, dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
			ds_email, cd_cep, ds_endereco, nr_endereco,
			ds_complemento, ds_bairro, cd_municipio_ibge, sg_estado,
			nr_ddi_celular, nr_ddd_celular, nr_telefone_celular,
			nr_ddi_telefone, nr_ddd_telefone, nr_telefone,
			ie_forma_envio)
		values (nextval('pls_solic_resc_contato_seq'), nr_seq_solicitacao_w, cd_pf_contato_w, nr_seq_tipo_contato_w,
			clock_timestamp(), clock_timestamp(), nm_usuario_p, nm_usuario_p,
			ds_email_p, cd_cep_p, ds_endereco_p, nr_endereco_p,
			ds_complemento_p, ds_bairro_p, cd_municipio_ibge_p, sg_estado_p,
			nr_ddi_celular_p, nr_ddd_celular_p, nr_telefone_celular_p,
			nr_ddi_telefone_p, nr_ddd_telefone_p, nr_telefone_p,
			ie_forma_envio_p);

	--Gerar o contato da empresa
	CALL pls_gerar_contato_resc_estip(nr_seq_solicitacao_w,'N',nm_usuario_p);

	if (ie_exige_lib_web_w = 'N') then
		CALL pls_liberar_solic_rescisao(nr_seq_solicitacao_w,'L',nm_usuario_p,cd_estabelecimento_w,'N');
	end if;

	CALL pls_gerar_ci_solic_portal_web(	3, null, null,
					nr_seq_segurado_p, null, 'N',
					nm_usuario_p);

	nr_protocolo_atend_p := nr_protocolo_atend_w;
	nr_seq_solicitacao_p := nr_seq_solicitacao_w;

	if (coalesce(ie_commit_p, 'S') = 'S') then
		commit;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_solic_resc_estip_web ( nr_seq_segurado_p bigint, nr_seq_motivo_rescisao_p bigint, nr_seq_causa_rescisao_p bigint, ds_observacao_p text, nm_usuario_p text, ds_email_p text, cd_cep_p text, ds_endereco_p text, nr_endereco_p bigint, ds_complemento_p text, ds_bairro_p text, cd_municipio_ibge_p text, sg_estado_p text, nr_ddi_celular_p text, nr_ddd_celular_p text, nr_telefone_celular_p text, nr_ddi_telefone_p text, nr_ddd_telefone_p text, nr_telefone_p text, ie_forma_envio_p text, nr_seq_mov_benef_p bigint, dt_solicitacao_rescisao_p timestamp, dt_obito_p timestamp, nr_certidao_obito_p text, qt_meses_contribuicao_p bigint, dt_concessao_aposentadoria_p timestamp, ie_devolucao_carteira_p text, nr_protocolo_atend_p INOUT bigint, nr_seq_solicitacao_p INOUT bigint, ie_commit_p text default 'S', ie_liberar_rescisao_p text DEFAULT NULL) FROM PUBLIC;

