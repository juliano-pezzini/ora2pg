-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_rec_protocolo_atual_status ( nr_titulo_p bigint, nm_usuario_p text) AS $body$
DECLARE

						
nr_seq_protocolo_w		pls_rec_glosa_conta.nr_seq_protocolo%type;
nr_seq_pag_prestador_w		bigint;
vl_saldo_titulos_w		double precision;
qt_conta_sem_pagto_w		integer;
qt_contas_fechadas_w		integer;
ie_origem_titulo_w		titulo_pagar.ie_origem_titulo%type;

C01 CURSOR FOR
	SELECT	/*+ RULE */ distinct(d.nr_seq_protocolo)
	from	pls_rec_glosa_conta		d,
		pls_conta_rec_resumo_item	c,
		pls_pagamento_prestador		b,
		pls_pag_prest_vencimento	a
	where	c.nr_seq_prestador_pgto		= b.nr_seq_prestador
	and	b.nr_seq_lote           	= c.nr_seq_lote_pgto
	and	c.nr_seq_conta_rec		= d.nr_sequencia
	and	a.nr_seq_pag_prestador		= b.nr_sequencia
	and	a.nr_titulo			= nr_titulo_p;
	
C02 CURSOR FOR	
	SELECT	/*+ RULE */ distinct(a.nr_seq_protocolo)
	from	pls_pp_prestador		c,
		pls_conta_rec_resumo_item	b,
		pls_rec_glosa_conta		a
	where	a.nr_sequencia			= b.nr_seq_conta_rec
	and	b.nr_seq_prestador_pgto		= c.nr_seq_prestador
	and	b.nr_seq_pp_lote		= c.nr_seq_lote
	and	b.ie_situacao 			= 'A'
	and	c.nr_titulo_pagar		= nr_titulo_p;
	
BEGIN

if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then
	select	max(nr_seq_pls_pag_prest),
		max(ie_origem_titulo)
	into STRICT	nr_seq_pag_prestador_w,
		ie_origem_titulo_w
	from	titulo_pagar
	where	nr_titulo = nr_titulo_p;
	
	if (ie_origem_titulo_w = '20') and (nr_seq_pag_prestador_w IS NOT NULL AND nr_seq_pag_prestador_w::text <> '') then
		for r_c01_w in C01 loop
		
			select	count(1)
			into STRICT	qt_conta_sem_pagto_w
			from	pls_conta_rec_resumo_item	a,
				pls_rec_glosa_conta		b
			where	a.nr_seq_conta_rec		= b.nr_sequencia
			and	b.nr_seq_protocolo		= r_c01_w.nr_seq_protocolo
			and	coalesce(a.nr_seq_lote_pgto::text, '') = ''
			and	a.ie_situacao != 'I';
			
			select	count(1)
			into STRICT	qt_contas_fechadas_w
			from	pls_rec_glosa_conta
			where	nr_seq_protocolo = r_c01_w.nr_seq_protocolo
			and	ie_status <> '2'; -- Fechado
			
			if (qt_conta_sem_pagto_w = 0) and (qt_contas_fechadas_w = 0) then
			
				vl_saldo_titulos_w := 0;
				select	/*+ RULE */ coalesce(sum(d.vl_saldo_titulo),0)
				into STRICT	vl_saldo_titulos_w
				from	titulo_pagar			d,
					pls_pag_prest_vencimento	a,
					pls_pagamento_prestador		b,
					pls_conta_rec_resumo_item	c,
					pls_rec_glosa_conta		e
				where	a.nr_seq_pag_prestador		= b.nr_sequencia
				and	c.nr_seq_prestador_pgto		= b.nr_seq_prestador
				and	a.nr_titulo			= d.nr_titulo
				and	c.nr_seq_conta_rec		= e.nr_sequencia
				and	b.nr_seq_lote         	 	= c.nr_seq_lote_pgto
				and	e.nr_seq_protocolo		= r_c01_w.nr_seq_protocolo;
				
				if (vl_saldo_titulos_w = 0) then
					update	pls_rec_glosa_protocolo
					set	ie_status = '6' -- Pagamento efetuado
					where	nr_sequencia = r_c01_w.nr_seq_protocolo
					and	ie_status <> '4'; -- Encerrado sem pagamento
				else
					update	pls_rec_glosa_protocolo
					set	ie_status = '3' -- Liberado para pagamento
					where	nr_sequencia = r_c01_w.nr_seq_protocolo
					and	ie_status <> '4'; -- Encerrado sem pagamento
				end if;
			end if;
		end loop;
		
	elsif (ie_origem_titulo_w = '25') then
		for r_c02_w in c02 loop
		
			select	count(1)
			into STRICT	qt_conta_sem_pagto_w
			from	pls_conta_rec_resumo_item	a,
				pls_rec_glosa_conta		b
			where	a.nr_seq_conta_rec		= b.nr_sequencia
			and	b.nr_seq_protocolo		= r_c02_w.nr_seq_protocolo
			and	coalesce(a.nr_seq_pp_lote::text, '') = ''
			and	a.ie_situacao != 'I';
			
			select	count(1)
			into STRICT	qt_contas_fechadas_w
			from	pls_rec_glosa_conta
			where	nr_seq_protocolo = r_c02_w.nr_seq_protocolo
			and	ie_status <> '2'; -- Fechado
			
			if (qt_conta_sem_pagto_w = 0) and (qt_contas_fechadas_w = 0) then
			
				vl_saldo_titulos_w := 0;
				select	/*+ RULE */ coalesce(sum(d.vl_saldo_titulo),0)
				into STRICT	vl_saldo_titulos_w
				from	titulo_pagar			d,
					pls_pp_prestador		c,
					pls_conta_rec_resumo_item	b,
					pls_rec_glosa_conta		a
				where	a.nr_sequencia			= b.nr_seq_conta_rec
				and	b.nr_seq_prestador_pgto		= c.nr_seq_prestador
				and	b.nr_seq_pp_lote		= c.nr_seq_lote
				and	b.ie_situacao 			= 'A'
				and	c.nr_titulo_pagar		= d.nr_titulo
				and	a.nr_seq_protocolo		= r_c02_w.nr_seq_protocolo;
				
				if (vl_saldo_titulos_w = 0) then
					update	pls_rec_glosa_protocolo
					set	ie_status = '6' -- Pagamento efetuado
					where	nr_sequencia = r_c02_w.nr_seq_protocolo
					and	ie_status <> '4'; -- Encerrado sem pagamento
				else
					update	pls_rec_glosa_protocolo
					set	ie_status = '3' -- Liberado para pagamento
					where	nr_sequencia = r_c02_w.nr_seq_protocolo
					and	ie_status <> '4'; -- Encerrado sem pagamento
				end if;
			end if;
		end loop;
	end if;
end if;

/* NÃ£o pode ter commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rec_protocolo_atual_status ( nr_titulo_p bigint, nm_usuario_p text) FROM PUBLIC;

