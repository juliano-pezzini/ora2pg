-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_dados_agenda_vaga (nr_seq_agenda_p bigint, nr_seq_interno_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


cd_tipo_acomodacao_w		smallint;
cd_convenio_w			integer;
nr_sequencia_w			bigint;
cd_pessoa_fisica_w		varchar(10);
cd_medico_resp_w			varchar(10);
cd_estabelecimento_w		smallint;
ie_existe_w			varchar(1);
dt_agenda_w			timestamp;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_atendimento_w			bigint;
cd_doenca_cid_w			varchar(10);
cd_categoria_w			varchar(10);
nr_seq_agenda_w			bigint;
ie_consiste_internado_w		varchar(1);
ie_status_agenda_w		varchar(3);
cd_plano_w			varchar(10);
nm_paciente_w			varchar(80);
ie_permite_nm_paciente_w		varchar(1);
cd_tipo_agenda_w			varchar(10);
nr_telefone_w			varchar(255);
ds_observacao_w			varchar(255);
ie_consiste_sem_pf_dup_w    		varchar(1);
nr_seq_gestao_vaga_w		bigint;
ie_internado_w			varchar(1);
ie_considera_todos_w		varchar(1);
dt_chegada_prev_w		timestamp;
cd_setor_desej_w			integer;
cd_unidade_basica_desej_w 		varchar(10);
cd_unidade_compl_desej_w 		varchar(10);
qt_diaria_prev_w			smallint;
hr_inicio_w			timestamp;
ie_consistencia_w	varchar(255);
ie_espec_valid_w	varchar(255);
ie_cid_valid_w	varchar(255);
cd_especialidade_medica_w	paciente_espera.cd_especialidade_medica%type;
ie_tipo_atend_w atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_classif_atend_w atendimento_paciente.nr_seq_classificacao%type;


C01 CURSOR FOR
	SELECT	b.cd_pessoa_fisica,
		b.dt_agenda,
		b.cd_medico,
		b.cd_procedimento,
		b.ie_origem_proced,
		b.cd_convenio,
		b.cd_categoria,
		b.nr_atendimento,
		b.cd_tipo_acomodacao,
		b.cd_doenca_cid,
		a.cd_estabelecimento,
		b.nr_sequencia,
		b.ie_status_agenda,
		b.cd_plano,
		b.nm_paciente,
		1,
		b.nr_telefone,
		substr(b.ds_observacao,1,255) ds_observacao,
		b.dt_chegada_prev,
		c.cd_setor_atendimento,
		c.cd_unidade_basica,
		c.cd_unidade_compl,
		b.qt_diaria_prev,
		b.hr_inicio,
    b.ie_tipo_atendimento,
    (SELECT c.nr_seq_classif_atend from agenda_paciente_auxiliar c where c.nr_seq_agenda = b.nr_sequencia) NR_SEQ_CLASSIF_ATEND
	from	agenda_paciente b,
		agenda a,
		unidade_atendimento c
	where	a.cd_agenda	= b.cd_agenda
	and	b.nr_sequencia 	= nr_seq_agenda_p
	and	b.nr_seq_interno 	= c.nr_seq_interno
	and	((b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> '') or (nm_paciente IS NOT NULL AND nm_paciente::text <> ''))
	and	b.ie_status_agenda	<> 'C'
	and (not exists (	select	1
				from	unidade_atendimento c
				where	c.nr_atendimento = b.nr_atendimento));



BEGIN

update	agenda_paciente
set	nr_seq_interno 	= nr_seq_interno_p
where	nr_sequencia 	= nr_seq_agenda_p;

open C01;
loop
	fetch C01 into
		cd_pessoa_fisica_w,
		dt_agenda_w,
		cd_medico_resp_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		cd_convenio_w,
		cd_categoria_w,
		nr_atendimento_w,
		cd_tipo_acomodacao_w,
		cd_doenca_cid_w,
		cd_estabelecimento_w,
		nr_seq_agenda_w,
		ie_status_agenda_w,
		cd_plano_w,
		nm_paciente_w,
		cd_tipo_agenda_w,
		nr_telefone_w,
		ds_observacao_w,
		dt_chegada_prev_w,
		cd_setor_desej_w,
		cd_unidade_basica_desej_w,
		cd_unidade_compl_desej_w,
		qt_diaria_prev_w,
		hr_inicio_w,
    ie_tipo_atend_w,
    nr_seq_classif_atend_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	nr_seq_gestao_vaga_w  := 0;
	if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
		select 	obter_seq_gestao_vaga_tipo(nr_seq_agenda_w, cd_tipo_agenda_w)
		into STRICT		nr_seq_gestao_vaga_w
		;
	end if;

	if (nr_seq_gestao_vaga_w = 0) then
		cd_especialidade_medica_w := obter_especialidade_medica(nr_seq_agenda_p);

		select	consistir_solicitacao_vaga(cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p, 0)
		into STRICT	ie_existe_w
		;

		select	consistir_atend_internado(cd_pessoa_fisica_w, cd_estabelecimento_p, nm_usuario_p)
		into STRICT	ie_consiste_internado_w
		;

		if (ie_existe_w = 'N') and (ie_consiste_internado_w = 'S') and (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then

			select	nextval('gestao_vaga_seq')
			into STRICT	nr_sequencia_w
			;

			insert into gestao_vaga(
				nr_sequencia,
				cd_estabelecimento,
				cd_pessoa_fisica,
				dt_atualizacao,
				nm_usuario,
				dt_solicitacao,
				dt_prevista,
				ie_solicitacao,
				cd_convenio,
				cd_categoria,
				ie_status,
				ie_tipo_vaga,
				nr_atendimento,
				cd_tipo_acomod_desej,
				cd_medico,
				ie_clinica,
				cd_procedimento,
				ie_origem_proced,
				cd_cid_principal,
				nr_seq_agenda,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				cd_plano_convenio,
				nm_paciente,
				cd_tipo_agenda,
				nr_telefone,
				ds_observacao,
				cd_setor_desejado,
				cd_unidade_basica,
				cd_unidade_compl,
				qt_dia,
				cd_especialidade,
        ie_tipo_atendimento,
        nr_seq_classif_atend
				)
			values (
				nr_sequencia_w,
				cd_estabelecimento_w,
				cd_pessoa_fisica_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				coalesce(dt_chegada_prev_w, ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_agenda_w, hr_inicio_w)),
				'I',
				cd_convenio_w,
				cd_categoria_w,
				'A',
				'CG',
				nr_atendimento_w,
				cd_tipo_acomodacao_w,
				cd_medico_resp_w,
				2,
				cd_procedimento_w,
				ie_origem_proced_w,
				cd_doenca_cid_w,
				nr_seq_agenda_w,
				nm_usuario_p,
				clock_timestamp(),
				cd_plano_w,
				nm_paciente_w,
				cd_tipo_agenda_w,
				nr_telefone_w,
				ds_observacao_w,
				cd_setor_desej_w,
				cd_unidade_basica_desej_w,
				cd_unidade_compl_desej_w,
				qt_diaria_prev_w,
				cd_especialidade_medica_w,
        ie_tipo_atend_w,
        nr_seq_classif_atend_w);
			commit;
			
			SELECT * FROM obter_reg_regulacao_gest_vagas('I', 'CG', ie_espec_valid_w, ie_cid_valid_w) INTO STRICT ie_espec_valid_w, ie_cid_valid_w;

			if ((coalesce(ie_espec_valid_w, 'N') = 'N') or ((coalesce(ie_espec_valid_w, 'N') = 'S') and (coalesce(cd_especialidade_medica_w, 0) > 0)))
				and ((coalesce(ie_cid_valid_w, 'N') = 'N') or ((coalesce(ie_cid_valid_w, 'N') = 'S') and (cd_doenca_cid_w IS NOT NULL AND cd_doenca_cid_w::text <> ''))) then
				ie_consistencia_w := CONSISTIR_REGULACAO(nr_atendimento_w, nr_sequencia_w, 'GESTAO_VAGA', ie_consistencia_w);
			end if;
		end if;
	end if;
end loop;
close C01;

if (ie_existe_w = 'S') then
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278614,null);
end if;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_dados_agenda_vaga (nr_seq_agenda_p bigint, nr_seq_interno_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

