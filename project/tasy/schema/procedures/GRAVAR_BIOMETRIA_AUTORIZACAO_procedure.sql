-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_biometria_autorizacao (ds_biometria_p text, nr_seq_autorizacao_p bigint, nm_usuario_p text, nr_atendimento_p bigint, ie_bio_valida_p text, ie_gera_bio_guias_p text) AS $body$
DECLARE

 
qt_biometria_w		bigint;
cd_pessoa_fisica_w	varchar(10);
cd_sistema_ant_w	varchar(20);
qt_biometria_pf_w	bigint;	
nr_seq_autorizacao_w	bigint;
cd_usuario_conv_w	varchar(255);			
				 
 
c01 CURSOR FOR 
SELECT 	nr_sequencia 
from	autorizacao_convenio 
where	nr_atendimento = nr_atendimento_p;
				

BEGIN 
 
select	max(cd_usuario_convenio) 
into STRICT	cd_usuario_conv_w 
from	atend_categoria_convenio 
where	nr_atendimento = nr_atendimento_p;
 
select	cd_pessoa_fisica 
into STRICT	cd_pessoa_fisica_w 
from	atendimento_paciente 
where	nr_atendimento = nr_atendimento_p;
 
select 	cd_sistema_ant 
into STRICT	cd_sistema_ant_w 
from	pessoa_fisica 
where	cd_pessoa_fisica = cd_pessoa_fisica_w;
 
select	count(*) 
into STRICT	qt_biometria_w 
from	biometria_usuario_conv 
where	cd_pessoa_fisica = cd_pessoa_fisica_w;
 
if (ie_gera_bio_guias_p = 'S') then 
	begin 
	open c01;
	loop 
	fetch c01 into	nr_seq_autorizacao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	 
	insert 	into	autorizacao_convenio_bio(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_autorizacao, 
						dt_leitura, 
						ds_biometria, 
						ie_biometria) 
					values (nextval('autorizacao_convenio_bio_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_autorizacao_w, 
						clock_timestamp(), 
						ds_biometria_p, 
						'2');
	end loop;
	close c01;
	end;
 
else 
	insert 	into	autorizacao_convenio_bio(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_autorizacao, 
						dt_leitura, 
						ds_biometria, 
						ie_biometria) 
					values (nextval('autorizacao_convenio_bio_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_autorizacao_p, 
						clock_timestamp(), 
						ds_biometria_p, 
						'2');
											 
end if;
						 
				 
if (ie_bio_valida_p = 'N') then 
 
	if (qt_biometria_w = 0) then 
		insert into 	biometria_usuario_conv(	nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							cd_usuario_convenio, 
							ds_biometria, 
							cd_pessoa_fisica) 
						values (nextval('biometria_usuario_conv_seq'), 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							cd_usuario_conv_w, 
							ds_biometria_p, 
							cd_pessoa_fisica_w);
	end if;
	 
	select	count(*) 
	into STRICT	qt_biometria_pf_w 
	from	pessoa_fisica_biometria 
	where	cd_pessoa_fisica 	= cd_pessoa_fisica_w 
	and	ie_dedo 		= 1;
	 
	if (qt_biometria_pf_w = 0) then 
		insert into 	pessoa_fisica_biometria(nr_sequencia, 
							cd_pessoa_fisica, 
							ds_biometria, 
							cd_empresa_biometria, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							ie_dedo) 
						values (nextval('pessoa_fisica_biometria_seq'), 
							cd_pessoa_fisica_w, 
							ds_biometria_p, 
							1, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							1);
	else 
		update	pessoa_fisica_biometria 
		set	ds_biometria = ds_biometria_p 
		where	cd_pessoa_fisica = cd_pessoa_fisica_w 
		and	ie_dedo = 1;
	end if;
end if;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_biometria_autorizacao (ds_biometria_p text, nr_seq_autorizacao_p bigint, nm_usuario_p text, nr_atendimento_p bigint, ie_bio_valida_p text, ie_gera_bio_guias_p text) FROM PUBLIC;

