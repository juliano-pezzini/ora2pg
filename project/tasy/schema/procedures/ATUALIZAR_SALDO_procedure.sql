-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_saldo ( cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, dt_mesano_referencia_p timestamp, cd_operacao_estoque_p bigint, qt_estoque_p bigint, cd_acao_p text, nm_usuario_p text, ie_erro_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE




ie_grava_saldo_w			varchar(1)	:= 'N';
ie_atualiza_estoque_w		varchar(1)	:= '0';
ie_entrada_saida_w			varchar(1)	:= '0';
qt_estoque_saldo_w		double precision	:= 0;
vl_estoque_w			double precision	:= 0;
vl_custo_medio_w			double precision	:= 0;
qt_estoque_w		                double precision	:= 0;
dt_atualizacao_w        		timestamp		:= clock_timestamp();
ie_permite_estoque_negativo_w	varchar(05);
qt_saldo_w			double precision;
qt_emprestimo_entrada_w		double precision;
ds_local_estoque_w		varchar(100);
ds_material_w			varchar(255);
ds_lock_w			varchar(4000);
ie_disp_nf_emprestimo_w		varchar(1);
ie_disp_emprestimo_lib_w	varchar(1);


BEGIN

ie_erro_p				:= 'N';

/*obter os indicadores se atualiza estoque, e se a operacao é de entrada ou saida*/

begin
select	ie_entrada_saida,
	ie_atualiza_estoque
into STRICT	ie_entrada_saida_w,
	ie_atualiza_estoque_w
from	operacao_estoque
where	cd_operacao_estoque  = cd_operacao_estoque_p;
exception
	when others then
		ie_entrada_saida_w := 'N';
end;


/*controla a atualizacao do saldo de estoque*/

qt_estoque_w		:= qt_estoque_p;
if (cd_acao_p = 2) then
	qt_estoque_w	:= qt_estoque_w * -1;
end if;

if (ie_entrada_saida_w = 'S') then
	qt_estoque_w	:= qt_estoque_w * -1;
end if;


/*Rotina para testar se existe estoque para o local e material especificado*/

/*Criada por marcus em 04/03/2004 */

if (qt_estoque_w < 0) then
	select	coalesce(max(ie_permite_estoque_negativo),'S'),
		coalesce(max(ie_disp_nf_emprestimo),'N'),
		coalesce(max(ie_disp_emprestimo_lib),'N')
	into STRICT	ie_permite_estoque_negativo_w,
		ie_disp_nf_emprestimo_w,
		ie_disp_emprestimo_lib_w
	from	parametro_estoque
	where	cd_estabelecimento	= cd_estabelecimento_p;

	if (ie_permite_estoque_negativo_w = 'L') then
		select	coalesce(max(ie_permite_estoque_negativo),'S')
		into STRICT	ie_permite_estoque_negativo_w
		from	local_estoque
		where	cd_local_estoque = cd_local_estoque_p;
	end if;

	if (ie_permite_estoque_negativo_w = 'N') then
		select	coalesce(max(qt_estoque),0)
		into STRICT	qt_saldo_w
		from	saldo_estoque
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	cd_local_estoque	= cd_local_estoque_p
		and	cd_material	= cd_material_p
		and	dt_mesano_referencia	= dt_mesano_referencia_p;
		if (ie_atualiza_estoque_w 	= 'S') and (qt_saldo_w < abs(qt_estoque_w)) then
			ds_material_w		:= substr(obter_desc_material(cd_material_p),1,255);
			ds_local_estoque_w	:= substr(obter_desc_local_estoque(cd_local_estoque_p),1,100);

			CALL wheb_mensagem_pck.exibir_mensagem_abort(182536,
				'CD_MATERIAL='||cd_material_p||';'||
				'DS_MATERIAL='||ds_material_w||';'||
				'CD_LOCAL_ESTOQUE='||cd_local_estoque_p||';'||
				'DS_LOCAL_ESTOQUE='||ds_local_estoque_w||';'||
				'QT_SALDO='||qt_saldo_w||';'||
				'QT_ESTOQUE='||qt_estoque_w);

			/*r.aise_application_error(-20011,'Não existe saldo para o material: ' || chr(10) ||
				cd_material_p || ' - ' || ds_material_w || chr(10) ||
				'    Local de estoque: ' || cd_local_estoque_p || ' ' || ds_local_estoque_w || chr(10) ||
				'    Saldo  estoque  : ' || qt_saldo_w || '  ' || chr(10) ||
				'    Quantidade baixa: ' || abs(qt_estoque_w) || chr(10) || '  ' || chr(10));*/
		end if;
	elsif (ie_permite_estoque_negativo_w = 'EE') then
		begin
		select	coalesce(max(qt_estoque),0)
		into STRICT	qt_saldo_w
		from	saldo_estoque
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	cd_local_estoque	= cd_local_estoque_p
		and	cd_material	= cd_material_p
		and	dt_mesano_referencia	= dt_mesano_referencia_p;


		if (ie_disp_nf_emprestimo_w = 'S') then
			begin
			if (ie_disp_emprestimo_lib_w = 'S') then
				select	/*+ index(b empmate_i1) index (c emprest_pk) */					coalesce(sum(b.qt_material - coalesce(b.qt_nota_fiscal,0)),0)
				into STRICT	qt_emprestimo_entrada_w
				from	emprestimo c,
					emprestimo_material b
				where	b.nr_emprestimo		= c.nr_emprestimo
				and	b.qt_material		> 0
				and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
				and	c.ie_situacao		<> 'I'
				and	c.ie_tipo		= 'E'
				and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
				and	c.cd_estabelecimento	= cd_estabelecimento_p
				and	c.cd_local_estoque	= cd_local_estoque_p
				and	exists (SELECT	1
						from 	material a
						where	a.cd_material = b.cd_material
						and	a.cd_material_estoque	= cd_material_p);
			else
				select	/*+ index(b empmate_i1) index (c emprest_pk) */					coalesce(sum(b.qt_material - coalesce(b.qt_nota_fiscal,0)),0)
				into STRICT	qt_emprestimo_entrada_w
				from	emprestimo c,
					emprestimo_material b
				where	b.nr_emprestimo		= c.nr_emprestimo
				and	b.qt_material		> 0
				and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
				and	c.ie_situacao		<> 'I'
				and	c.ie_tipo		= 'E'
				and	c.cd_estabelecimento	= cd_estabelecimento_p
				and	c.cd_local_estoque	= cd_local_estoque_p
				and	exists (SELECT	1
						from 	material a
						where	a.cd_material = b.cd_material
						and	a.cd_material_estoque	= cd_material_p);
			end if;



			end;
		else
			begin
			if (ie_disp_emprestimo_lib_w = 'S') then
				select	/*+ index(b empmate_i1) index (c emprest_pk) */					coalesce(sum(b.qt_material),0)
				into STRICT	qt_emprestimo_entrada_w
				from	emprestimo c,
					emprestimo_material b
				where	b.nr_emprestimo		= c.nr_emprestimo
				and	b.qt_material		> 0
				and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
				and	c.ie_situacao		<> 'I'
				and	c.ie_tipo		= 'E'
				and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
				and	c.cd_estabelecimento	= cd_estabelecimento_p
				and	c.cd_local_estoque	= cd_local_estoque_p
				and	exists (SELECT	1
						from 	material a
						where	a.cd_material = b.cd_material
						and	a.cd_material_estoque	= cd_material_p);
			else
				select	/*+ index(b empmate_i1) index (c emprest_pk) */					coalesce(sum(b.qt_material),0)
				into STRICT	qt_emprestimo_entrada_w
				from	emprestimo c,
					emprestimo_material b
				where	b.nr_emprestimo		= c.nr_emprestimo
				and	b.qt_material		> 0
				and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
				and	c.ie_situacao		<> 'I'
				and	c.ie_tipo		= 'E'
				and	c.cd_estabelecimento	= cd_estabelecimento_p
				and	c.cd_local_estoque	= cd_local_estoque_p
				and	exists (SELECT	1
						from 	material a
						where	a.cd_material = b.cd_material
						and	a.cd_material_estoque	= cd_material_p);
			end if;
			end;
		end if;

		if (ie_atualiza_estoque_w = 'S') and
			((qt_saldo_w + qt_emprestimo_entrada_w) < abs(qt_estoque_w)) then
			ds_material_w		:= substr(obter_desc_material(cd_material_p),1,255);
			ds_local_estoque_w	:= substr(obter_desc_local_estoque(cd_local_estoque_p),1,100);

			CALL wheb_mensagem_pck.exibir_mensagem_abort(182539,
				'CD_MATERIAL='||cd_material_p||';'||
				'DS_MATERIAL='||ds_material_w||';'||
				'CD_LOCAL_ESTOQUE='||cd_local_estoque_p||';'||
				'DS_LOCAL_ESTOQUE='||ds_local_estoque_w||';'||
				'QT_SALDO='||qt_saldo_w||';'||
				'QT_EMPRESTIMO='||qt_emprestimo_entrada_w||';'||
				'QT_ESTOQUE='||qt_estoque_w);

			/*r.aise_application_error(-20011,'Não existe saldo para o material: ' || chr(10) ||
				cd_material_p || ' - ' || ds_material_w || chr(10) ||
				'    Local de estoque: ' || cd_local_estoque_p || ' ' || ds_local_estoque_w || chr(10) ||
				'    Saldo  estoque  : ' || qt_saldo_w || '  ' || chr(10) ||
				'    Empréstimos     : ' || qt_emprestimo_entrada_w || '  ' || chr(10) ||
				'    Quantidade baixa: ' || abs(qt_estoque_w) || chr(10) || '  ' || chr(10) || '#@#@');*/
		end if;
		end;
	end if;
end if;

/*atualizacao do saldo de estoque*/

if (ie_atualiza_estoque_w = 'S') then
	begin
	update	saldo_estoque
	set	qt_estoque	= (qt_estoque + qt_estoque_w),
		vl_estoque	= coalesce((vl_custo_medio * (qt_estoque + qt_estoque_w)), 0),
		dt_atualizacao	= dt_atualizacao_w,
		nm_usuario	= nm_usuario_p
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	cd_local_estoque	= cd_local_estoque_p
	and	cd_material	=  cd_material_p
	and	dt_mesano_referencia	= dt_mesano_referencia_p;
	if (NOT FOUND) then
		ie_grava_saldo_w	:= 'S';
	end if;
	exception
	when others then
		begin
		/*begin
		select 	substr(
			'sid='||b.session_id ||
			'#oracle_username='|| substr(b.oracle_username,1,15) ||
			'#locked_mode='|| substr(decode (b.locked_mode,
				    0, 'NONE',
				    1, 'NULL (NULL)',
				    2, 'ROW-S (SS)',
				    3, 'ROW-X (SX)',
				    4, 'SHARE (S)',
				    5, 'S/ROW-X (SSX)',
				    6, 'EXCLUSIVE (X)',
				    b.locked_mode),1,15)||
			'#user_name='||substr(b.os_user_name,1,15)||
			'#status='||substr(c.status,1,15)||
			'#program='||substr(c.program,1,15)||
			'#machine='||substr(c.machine,1,15)||
			'#module='||substr(c.module,1,15)||
			'#plsql='||substr((	select	object_name
					from	user_objects d
					where	d.object_id = c.plsql_object_id),1,15),1,255) ds_lock
		into	ds_lock_w
		from	user_objects a,
			gv$locked_object b,
			gv$session c
		where	a.object_id = b.object_id
		and 	b.session_id = c.sid
		and	rownum = 1
		and	a.object_name = 'SALDO_ESTOQUE';
		exception
		when others then
			ds_lock_w := null;
		end;	*/
		-- 799647 - Erro no update - #@DS_ERRO_W#@
		ds_erro_p := (substr(wheb_mensagem_pck.get_texto(799647,'DS_ERRO_W=' || substr(sqlerrm, 1, 90)) ||
									' CD_ESTAB='||cd_estabelecimento_p||';'||
									'CD_MATERIAL='||cd_material_p||';'||
									'CD_LOCAL_ESTOQUE='||cd_local_estoque_p||';'||
									'DT_MESANO='||dt_mesano_referencia_p||';'||
									'CD_OPERACAO='||cd_operacao_estoque_p||';'||
									'QT_ESTOQUE='||qt_estoque_p||';'||
									'CD_ACAO='||cd_acao_p||';',1,255));
		ie_erro_p := 'S';
		end;
	end;
end if;

/*buscar saldo anterior*/

if (ie_grava_saldo_w = 'S') then
	begin
	select	coalesce(qt_estoque, 0),
		coalesce(vl_estoque, 0),
		coalesce(vl_custo_medio, 0)
	into STRICT	qt_estoque_saldo_w,
		vl_estoque_w,
		vl_custo_medio_w
	from	saldo_estoque
	where	cd_estabelecimento		= cd_estabelecimento_p
	and	cd_local_estoque		= cd_local_estoque_p
	and	cd_material		= cd_material_p
	and	dt_mesano_referencia 	= (
	    	SELECT	max(dt_mesano_referencia)
		from	saldo_estoque
		where	cd_estabelecimento		= cd_estabelecimento_p
		and	cd_local_estoque		= cd_local_estoque_p
		and	cd_material		= cd_material_p
		and	dt_mesano_referencia	< dt_mesano_referencia_p);
	exception
	when no_data_found then
		begin
		qt_estoque_saldo_w	:= 0;
		vl_estoque_w		:= 0;
		vl_custo_medio_w		:= 0;
		end;
	end;
end if;

/*gravar saldo atual*/

if (ie_grava_saldo_w = 'S') then
	begin
	insert into saldo_estoque(
		cd_estabelecimento,
		cd_local_estoque,
		cd_material,
		dt_mesano_referencia,
		qt_estoque,
		vl_estoque,
		qt_reservada_requisicao,
		qt_reservada,
		dt_atualizacao,
		nm_usuario,
		vl_custo_medio,
		ie_bloqueio_inventario)
	values(	cd_estabelecimento_p,
		cd_local_estoque_p,
		cd_material_p,
		dt_mesano_referencia_p,
		qt_estoque_saldo_w + qt_estoque_w,
		(vl_custo_medio_w * (qt_estoque_saldo_w + qt_estoque_w)),
		0,
		0,
		dt_atualizacao_w,
		nm_usuario_p,
		vl_custo_medio_w,
		'N');
		exception
		when unique_violation then
			begin
			-- caso a pk ja exista faz nova tentativa de update, sendo necessaria devido a execução de várias chamadas simultaneas a essa procedure
			-- vai ocorrer se alguma execução concorrente tiver feito o insert no intervalo de tempo entre a ultima tentativa de update realizada nesta mesma procedure (ln 230)
			update	saldo_estoque
			set	qt_estoque	= (qt_estoque + qt_estoque_w),
				vl_estoque	= coalesce((vl_custo_medio * (qt_estoque + qt_estoque_w)), 0),
				dt_atualizacao	= dt_atualizacao_w,
				nm_usuario	= nm_usuario_p
			where	cd_estabelecimento	= cd_estabelecimento_p
			and	cd_local_estoque	= cd_local_estoque_p
			and	cd_material	=  cd_material_p
			and	dt_mesano_referencia	= dt_mesano_referencia_p;
			exception
				when others then
				-- 799570 - Erro no insert - #@DS_ERRO_W#@
				ds_erro_p := (substr(wheb_mensagem_pck.get_texto(799570,'DS_ERRO_W=' || substr(sqlerrm, 1, 90)) ||
											' CD_ESTAB='||cd_estabelecimento_p||';'||
											'CD_MATERIAL='||cd_material_p||';'||
											'CD_LOCAL_ESTOQUE='||cd_local_estoque_p||';'||
											'DT_MESANO='||dt_mesano_referencia_p||';'||
											'CD_OPERACAO='||cd_operacao_estoque_p||';'||
											'QT_ESTOQUE='||qt_estoque_p||';'||
											'CD_ACAO='||cd_acao_p||';',1,255));
				ie_erro_p := 'S';
			end;
		when others then
			-- 799570 - Erro no insert - #@DS_ERRO_W#@
			ds_erro_p := (substr(wheb_mensagem_pck.get_texto(799570,'DS_ERRO_W=' || substr(sqlerrm, 1, 90)) ||
										' CD_ESTAB='||cd_estabelecimento_p||';'||
										'CD_MATERIAL='||cd_material_p||';'||
										'CD_LOCAL_ESTOQUE='||cd_local_estoque_p||';'||
										'DT_MESANO='||dt_mesano_referencia_p||';'||
										'CD_OPERACAO='||cd_operacao_estoque_p||';'||
										'QT_ESTOQUE='||qt_estoque_p||';'||
										'CD_ACAO='||cd_acao_p||';',1,255));
			ie_erro_p := 'S';
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_saldo ( cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, dt_mesano_referencia_p timestamp, cd_operacao_estoque_p bigint, qt_estoque_p bigint, cd_acao_p text, nm_usuario_p text, ie_erro_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

