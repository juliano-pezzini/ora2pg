-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_boletim_ocorrencia ( nr_sequencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_bo_p INOUT bigint, ie_copiar_resposta_p text default 'N', ie_copiar_historico_p text default 'N', ie_data_ocor_orig_p text default 'N') AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(10);
ie_origem_w			varchar(1);
nm_pessoa_registro_w		varchar(40);
ds_ocorrencia_w			varchar(4000);
ds_ocorrencia_longa_w		text;
cd_estabelecimento_w		smallint;
nr_seq_forma_reg_w		bigint;
cd_cgc_w			varchar(14);
dt_envio_w			timestamp;
nm_usuario_envio_w		varchar(15);
ie_forma_envio_w			varchar(5);
cd_interno_w			varchar(40);
cd_pf_referencia_w			varchar(10);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_usuario_convenio_w		varchar(30);
nr_atendimento_w			bigint;
nr_atend_pls_w			bigint;
nm_usuario_nrec_w			varchar(15);
nr_seq_bo_w			bigint;
ie_usuario_logado_w		varchar(1);

ie_status_resp_w		varchar(1);
nr_seq_responsavel_resp_w	bigint;
nr_seq_classif_resp_w		bigint;
nr_seq_gravidade_resp_w		bigint;
nr_seq_tipo_resp_w		bigint;
ds_observacao_resp_w		varchar(255);
cd_setor_resposta_resp_w	integer;
ie_tipo_atendimento_resp_w	smallint;
cd_especialidade_resp_w		integer;
ds_responsavel_resp_w		text;
nr_seq_classif_tecnica_resp_w	bigint;
nr_seq_nivel_fidel_resp_w	bigint;
nr_seq_tipo_ocor_resp_w		bigint;
ie_aguarda_retorno_resp_w	varchar(15);
nr_seq_resp_bo_w		bigint;
nr_sequencia_resp_w		bigint;
dt_ocorrencia_w			timestamp;

dt_historico_w			timestamp;			--SAC_HIST_BOL_OCOR
ds_historico_w			varchar(4000);
ds_historico_longo_w		text;
nr_seq_classif_w		bigint;
cd_pf_ouvidor_w			varchar(10);
cd_pessoa_referencia_w		varchar(15);


c01 CURSOR FOR
	SELECT	cd_pessoa_fisica,
		ie_origem,
		nm_pessoa_registro,
		ds_ocorrencia,
		cd_estabelecimento,
		nr_seq_forma_reg,
		cd_cgc,
		dt_envio,
		nm_usuario_envio,
		ie_forma_envio,
		cd_interno,
		cd_pf_referencia,
		cd_convenio,
		cd_categoria,
		cd_usuario_convenio,
		nr_atendimento,
		nr_atend_pls,
		nm_usuario_nrec,
		dt_ocorrencia
	from	sac_boletim_ocorrencia
	where	nr_sequencia = nr_sequencia_p;

C02 CURSOR FOR
	SELECT	ie_status,
		nr_seq_responsavel,
		nr_seq_classif,
		nr_seq_gravidade,
		nr_seq_tipo,
		ds_observacao,
		cd_setor_resposta,
		ie_tipo_atendimento,
		cd_especialidade,
		ds_responsavel,
		nr_seq_classif_tecnica,
		nr_seq_nivel_fidelizacao,
		nr_seq_tipo_ocor,
		ie_aguarda_retorno,
		nr_sequencia
	from	sac_resp_bol_ocor
	where	nr_seq_bo = nr_sequencia_p;

C03 CURSOR FOR
	SELECT	dt_historico,
		ds_historico,
		ds_historico_longo,
		nr_seq_classif,
		cd_pf_ouvidor,
		cd_pessoa_referencia
	from	sac_hist_bol_ocor
	where	nr_seq_resp_bo = nr_sequencia_resp_w;


BEGIN

open c01;
loop
fetch c01 into
	cd_pessoa_fisica_w,
	ie_origem_w,
	nm_pessoa_registro_w,
	ds_ocorrencia_w,
	cd_estabelecimento_w,
	nr_seq_forma_reg_w,
	cd_cgc_w,
	dt_envio_w,
	nm_usuario_envio_w,
	ie_forma_envio_w,
	cd_interno_w,
	cd_pf_referencia_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_usuario_convenio_w,
	nr_atendimento_w,
	nr_atend_pls_w,
	nm_usuario_nrec_w,
	dt_ocorrencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	ie_usuario_logado_w := obter_param_usuario(2000, 152, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_usuario_logado_w);

	if ( ie_usuario_logado_w = 'S') then
		nm_usuario_nrec_w := nm_usuario_p;
	end if;

	if ( ie_data_ocor_orig_p = 'N') then
		dt_ocorrencia_w := clock_timestamp();
	end if;

	select	nextval('sac_boletim_ocorrencia_seq')
	into STRICT	nr_seq_bo_w
	;
	insert into sac_boletim_ocorrencia(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_ocorrencia,
			cd_pessoa_fisica,
			ie_origem,
			nm_pessoa_registro,
			ds_ocorrencia,
			ds_ocorrencia_longa,
			cd_estabelecimento,
			nr_seq_forma_reg,
			cd_cgc,
			dt_envio,
			nm_usuario_envio,
			ie_forma_envio,
			cd_interno,
			cd_pf_referencia,
			cd_convenio,
			cd_categoria,
			cd_usuario_convenio,
			nr_atendimento,
			nr_atend_pls,
			nm_usuario_nrec,
			dt_atualizacao_nrec)
		values (	nr_seq_bo_w,
			clock_timestamp(),
			nm_usuario_p,
			dt_ocorrencia_w,
			cd_pessoa_fisica_w,
			ie_origem_w,
			nm_pessoa_registro_w,
			ds_ocorrencia_w,
			null,
			cd_estabelecimento_w,
			nr_seq_forma_reg_w,
			cd_cgc_w,
			dt_envio_w,
			nm_usuario_envio_w,
			ie_forma_envio_w,
			cd_interno_w,
			cd_pf_referencia_w,
			cd_convenio_w,
			cd_categoria_w,
			cd_usuario_convenio_w,
			nr_atendimento_w,
			nr_atend_pls_w,
			nm_usuario_nrec_w,
			clock_timestamp());

	insert into sac_bol_ocor_adic(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_bol_ocor,
			cd_setor_atendimento,
			cd_pf_referencia,
			nr_telefone_pf_registro,
			ds_email_pf_registro,
			ds_endereco_pf_registro,
			ds_observacao)
		SELECT	nextval('sac_bol_ocor_adic_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_bo_w,
			cd_setor_atendimento,
			cd_pf_referencia,
			nr_telefone_pf_registro,
			ds_email_pf_registro,
			ds_endereco_pf_registro,
			ds_observacao
		from	sac_bol_ocor_adic
		where	nr_seq_bol_ocor = nr_sequencia_p;

	if (ie_copiar_resposta_p = 'S') then
		open C02;
		loop
		fetch C02 into
			ie_status_resp_w,
			nr_seq_responsavel_resp_w,
			nr_seq_classif_resp_w,
			nr_seq_gravidade_resp_w,
			nr_seq_tipo_resp_w,
			ds_observacao_resp_w,
			cd_setor_resposta_resp_w,
			ie_tipo_atendimento_resp_w,
			cd_especialidade_resp_w,
			ds_responsavel_resp_w,
			nr_seq_classif_tecnica_resp_w,
			nr_seq_nivel_fidel_resp_w,
			nr_seq_tipo_ocor_resp_w,
			ie_aguarda_retorno_resp_w,
			nr_sequencia_resp_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			select	nextval('sac_resp_bol_ocor_seq')
			into STRICT	nr_seq_resp_bo_w
			;

			insert	into	sac_resp_bol_ocor(
					nr_sequencia,
					nr_seq_bo,
					ie_status,
					dt_atualizacao,
					nm_usuario,
					nr_seq_responsavel,
					nr_seq_classif,
					nr_seq_gravidade,
					nr_seq_tipo,
					ds_observacao,
					dt_resposta,
					dt_usuario_ciente,
					cd_setor_resposta,
					dt_encerramento,
					ie_tipo_atendimento,
					cd_especialidade,
					ds_responsavel,
					nr_seq_classif_tecnica,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_nivel_fidelizacao,
					nr_seq_tipo_ocor,
					ie_aguarda_retorno)
				values (	nr_seq_resp_bo_w,
					nr_seq_bo_w,
					ie_status_resp_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_responsavel_resp_w,
					nr_seq_classif_resp_w,
					nr_seq_gravidade_resp_w,
					nr_seq_tipo_resp_w,
					ds_observacao_resp_w,
					clock_timestamp(),
					null,
					cd_setor_resposta_resp_w,
					null,
					ie_tipo_atendimento_resp_w,
					cd_especialidade_resp_w,
					ds_responsavel_resp_w,
					nr_seq_classif_tecnica_resp_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_nivel_fidel_resp_w,
					nr_seq_tipo_ocor_resp_w,
					ie_aguarda_retorno_resp_w);

			if (ie_copiar_historico_p = 'S') then
				open C03;
				loop
				fetch C03 into
					dt_historico_w,
					ds_historico_w,
					ds_historico_longo_w,
					nr_seq_classif_w,
					cd_pf_ouvidor_w,
					cd_pessoa_referencia_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */

					begin
					insert 	into 	sac_hist_bol_ocor(
							nr_sequencia,
							nr_seq_resp_bo,
							dt_historico,
							dt_atualizacao,
							nm_usuario,
							ds_historico,
							ds_historico_longo,
							nr_seq_classif,
							cd_pf_ouvidor,
							cd_pessoa_referencia,
							dt_atualizacao_nrec,
							nm_usuario_nrec)
						values (	nextval('sac_hist_bol_ocor_seq'),
							nr_seq_resp_bo_w,
							dt_historico_w,
							clock_timestamp(),
							nm_usuario_p,
							ds_historico_w,
							ds_historico_longo_w,
							nr_seq_classif_w,
							cd_pf_ouvidor_w,
							cd_pessoa_referencia_w,
							clock_timestamp(),
							nm_usuario_p);
					end;
				end loop;
				close C03;
			end if;


			end;
		end loop;
		close C02;

	end if;

	commit;
	end;
end loop;
close c01;

nr_seq_bo_p :=  nr_seq_bo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_boletim_ocorrencia ( nr_sequencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_bo_p INOUT bigint, ie_copiar_resposta_p text default 'N', ie_copiar_historico_p text default 'N', ie_data_ocor_orig_p text default 'N') FROM PUBLIC;

