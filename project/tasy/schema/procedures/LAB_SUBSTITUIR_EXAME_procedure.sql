-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_substituir_exame ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, nr_seq_material_p bigint, nm_usuario_p text, cd_perfil_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE

 
nr_seq_exame_w			bigint;
nr_seq_grupo_imp_w		bigint;
nr_seq_lab_w			varchar(20);
cd_material_exame_w		varchar(20);
cd_estab_w			integer;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
ie_tipo_atendimento_w		smallint;
ie_tipo_convenio_w		smallint;
cd_setor_atend_w		integer;
nr_atendimento_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
dt_prescricao_w			timestamp;
ds_erro_w			varchar(2000);
nr_seq_exame_ant_w		bigint;
nr_Seq_proc_interno_w		bigint;
qt_procedimento_w		double precision;
ie_erro_autorizacao_w		varchar(255);
ie_regra_plano_w		smallint;
nr_seq_regra_plano_w		bigint;
ie_nova_autorizacao_w		varchar(1);
ie_consiste_autorizacao_w	varchar(1)	:= 'N';
ie_gerou_autorizacao_w		varchar(1);
cd_plano_convenio_w		varchar(10);
nr_seq_proc_interno_aux_w	bigint;
ie_gerar_sequencia_w		varchar(1);
ie_gera_amostra_coleta_w 	varchar(1);
ie_status_atend_w		smallint;
qt_regra_conv_w			bigint;
cd_pessoa_fisica_w		varchar(10);
ie_glosa_plano_w		regra_ajuste_proc.ie_glosa%type;
nr_seq_regra_preco_w		regra_ajuste_proc.nr_sequencia%type;
nr_seq_ficha_w			lote_ent_sec_ficha.nr_sequencia%type;

BEGIN
 
select	coalesce(max(nr_seq_exame),null) 
into STRICT	nr_seq_exame_w 
from	exame_laboratorio 
where	upper(cd_exame)	= upper(cd_exame_p);
 
if (nr_seq_exame_w > 0) then 
	 
	select max(cd_estabelecimento), 
			coalesce(max(nr_atendimento), 0), 
			coalesce(max(dt_prescricao), clock_timestamp()), 
			max(cd_pessoa_fisica) 
	into STRICT	cd_estab_w, 
			nr_atendimento_w, 
			dt_prescricao_w, 
			cd_pessoa_fisica_w 
	from	prescr_medica 
	where	nr_prescricao = nr_prescricao_p;
 
	select max(cd_material_exame), 
			max(nr_seq_exame), 
			max(nr_seq_proc_interno), 
			max(ie_status_atend), 
			max(qt_procedimento) 
	into STRICT	cd_material_exame_w, 
			nr_seq_exame_ant_w, 
			nr_seq_proc_interno_w, 
			ie_status_atend_w, 
			qt_procedimento_w 
	from	prescr_procedimento 
	where  nr_prescricao = nr_prescricao_p 
	and   nr_sequencia = 	nr_seq_prescr_p;
	 
	if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then	 
 
		select 	max(cd_material_exame) 
		into STRICT	cd_material_exame_w 
		from	material_exame_lab 
		where	nr_sequencia = nr_seq_material_p;
	end if;
 
	select coalesce(max(ie_gerar_sequencia),'P'), 
		coalesce(MAX(ie_gera_amostra_coleta),'N') 
	into STRICT 	ie_gerar_sequencia_w, 
		ie_gera_amostra_coleta_w	 
	from 	lab_parametro 
	where 	cd_estabelecimento = cd_estab_w;
	 
	if (coalesce(nr_atendimento_w, 0) > 0) then 
		begin 
		select	a.ie_tipo_convenio, 
			a.ie_tipo_atendimento, 
			b.cd_convenio, 
			b.cd_categoria, 
			a.cd_estabelecimento, 
			b.cd_plano_convenio 
		into STRICT	ie_tipo_convenio_w, 
			ie_tipo_atendimento_w, 
			cd_convenio_w, 
			cd_categoria_w, 
			cd_estab_w, 
			cd_plano_convenio_w 
		from	atend_categoria_convenio b, 
			atendimento_paciente a 
		where	a.nr_atendimento	= nr_atendimento_w 
		and	b.nr_atendimento	= a.nr_atendimento 
		and	b.nr_seq_interno	= (SELECT	coalesce(max(t.nr_seq_interno),0) 
								  from 	atend_categoria_convenio t 
									where	t.nr_atendimento  = a.nr_atendimento 
									 and 	t.dt_inicio_vigencia = (select max(u.dt_inicio_vigencia) 
																	from atend_categoria_convenio u 
																	 where u.nr_atendimento = a.nr_atendimento));
		 
		exception	 
			when no_data_found then 
			--rai_application_error(-20011,'Faltam informações do convênio na Entrada Única.'); 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(192526);
		end;
		ie_consiste_autorizacao_w := Obter_Param_Usuario(722, 164, cd_perfil_p, nm_usuario_p, cd_estab_w, ie_consiste_autorizacao_w);
		 
		select	count(*) 
		into STRICT	qt_regra_conv_w 
		from	exame_lab_convenio 
		where 	nr_seq_exame = nr_seq_exame_w;
		 
		if (qt_regra_conv_w > 0) then 
			SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estab_w, ie_tipo_convenio_w, nr_Seq_proc_interno_w, cd_material_exame_w, cd_plano_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
		end if;
		 
	end if;
	 
	select 	max(coalesce((select max(nr_seq_grupo_imp) 
					from 	exame_lab_grupo_imp 
					where	nr_seq_exame = a.nr_seq_exame 
					and	coalesce(cd_estabelecimento, coalesce(cd_estab_w, 0 )) = coalesce(cd_estab_w,0) 
					and	coalesce(cd_convenio, coalesce(cd_convenio_w, 0)) = coalesce(cd_convenio_w, 0)),a.nr_seq_grupo_imp)) 
	into STRICT	nr_seq_grupo_imp_w 
	from	exame_laboratorio a 
	where	a.nr_seq_exame = nr_seq_exame_w;		
 
	/*select 	min(nr_seq_lab) 
	into	nr_seq_lab_w 
	from	exame_laboratorio a, 
			prescr_procedimento b 
	where	a.nr_seq_exame = b.nr_seq_exame 
	and		cd_material_exame = cd_material_exame_w 
	and		nvl(lab_obter_grupo_imp_estab(cd_estab_w,a.nr_seq_exame),a.nr_seq_grupo_imp) = nr_seq_grupo_imp_w;*/
 
	 
	/*OS603904 - Incluida restrição de pessoa para indexação, conforme padrão de geração de seq lab na Gerar_Prescr_Proc_Seq_Lab*/
 
	select 	coalesce(min(b.nr_seq_lab),'0') 
	into STRICT	nr_seq_lab_w 
	from	exame_laboratorio a, 
			prescr_procedimento b, 
			prescr_medica d 
	where	d.nr_prescricao = b.nr_prescricao 
	and		a.nr_seq_exame = b.nr_seq_exame 
	and		b.cd_material_exame = cd_material_exame_w 
	and		d.cd_pessoa_fisica = cd_pessoa_fisica_w 
	and		coalesce((SELECT max(c.nr_seq_grupo_imp) 
				from 	exame_lab_grupo_imp c 
				where	c.nr_seq_exame = a.nr_seq_exame 
				and	coalesce(c.cd_estabelecimento, coalesce(cd_estab_w, 0 )) = coalesce(cd_estab_w,0) 
				and	coalesce(c.cd_convenio, coalesce(cd_convenio_w, 0)) = coalesce(cd_convenio_w, 0)),a.nr_seq_grupo_imp) = nr_seq_grupo_imp_w 
	and 	(b.nr_seq_lab IS NOT NULL AND b.nr_seq_lab::text <> '') 
	and 	d.nr_prescricao <= nr_prescricao_p;
 
	--Rai_application_error(-20011,cd_material_exame_w || '#@#@'); 
	 
	update	prescr_procedimento 
	set	nm_usuario 	= nm_usuario_p, 
	    	cd_procedimento	= cd_procedimento_w, 
	    	ie_origem_proced	= ie_origem_proced_w, 
	    	nr_seq_exame 	= nr_seq_exame_w, 
	    	nr_seq_lab 	= nr_seq_lab_w, 
	    	cd_material_exame = cd_material_exame_w, 
	    	ds_observacao 	= ds_observacao || ' ' || wheb_mensagem_pck.get_texto(307896,	'NM_USUARIO_P=' || nm_usuario_p || ';' || 
																							'DT_ATUAL='|| to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')), 
							-- Procedimento adicional incluído por #@NM_USUARIO_P#@ em #@DT_ATUAL#@ via Exames Pendentes 
	    	nr_seq_exame_anterior = nr_seq_exame_ant_w, 
	    	nm_usuario_substituicao = nm_usuario_p, 
	    	dt_substituicao = clock_timestamp()	 
	where 	nr_prescricao 	= nr_prescricao_p 
	and	nr_sequencia 	= nr_seq_prescr_p;
	 
	select 	MAX(nr_sequencia) 
	into STRICT	nr_seq_ficha_w 
	from	lote_ent_sec_ficha 
	where	nr_prescricao = nr_prescricao_p;
	 
	if (nr_seq_ficha_w IS NOT NULL AND nr_seq_ficha_w::text <> '') then 
		 
		update lote_ent_sec_ficha_exam 
		set		nm_usuario 		 = nm_usuario_p, 
				dt_atualizacao 	 = clock_timestamp(), 
				nr_seq_exame 	 = nr_seq_exame_w, 
				cd_material_exame = cd_material_exame_w 
		where  nr_seq_ficha 	 = nr_seq_ficha_w 
		and		nr_seq_exame	 = nr_seq_exame_ant_w;		
	 
	end if;
	 
	 
	delete	FROM prescr_proc_mat_item	 
	where 	nr_prescricao 	= nr_prescricao_p 
	and	nr_seq_prescr	= nr_seq_prescr_p;
 
	if 	((ie_gerar_sequencia_w <> 'C') or (ie_gera_amostra_coleta_w <> 'S')) or 
		((ie_gerar_sequencia_w = 'C') and (ie_gera_amostra_coleta_w = 'S') and (ie_status_atend_w >= 20)) then 
		CALL gerar_prescr_proc_mat_item(nr_prescricao_p, nm_usuario_p, cd_estab_w);
	end if;
	 
	if (ie_consiste_autorizacao_w	= 'S') then 
 
		SELECT * FROM consiste_plano_convenio(	nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, dt_prescricao_w, qt_procedimento_w, ie_tipo_atendimento_w, cd_plano_convenio_w, null, ie_erro_autorizacao_w, cd_setor_atend_w, nr_seq_exame_w, ie_regra_plano_w, null, nr_seq_regra_plano_w, null, cd_categoria_w, cd_estab_w, null, null, '', ie_glosa_plano_w, nr_seq_regra_preco_w) INTO STRICT ie_erro_autorizacao_w, ie_regra_plano_w, nr_seq_regra_plano_w, ie_glosa_plano_w, nr_seq_regra_preco_w;
 
		update	prescr_procedimento 
		set	nr_seq_regra_plano	= nr_seq_regra_plano_w 
		where	nr_prescricao		= nr_prescricao_p 
		and	nr_sequencia		= nr_seq_prescr_p;
 
		if (ie_regra_plano_w in (3,6,7)) then 
				 
			select	max(ie_nova_autorizacao) 
			into STRICT	ie_nova_autorizacao_w 
			from	regra_convenio_plano 
			where	nr_sequencia	= nr_seq_regra_plano_w;
 
			if (ie_nova_autorizacao_w	= 'S') then 
				CALL gerar_autor_regra(nr_atendimento_w, null, null, nr_prescricao_p, null, nr_seq_prescr_p, 'LP', nm_usuario_p, null, null, null, null, null, null,'','','');
				CALL Atualizar_autoriz_proced(nr_prescricao_p,nr_atendimento_w);
				select	CASE WHEN count(nr_sequencia)=0 THEN 'N'  ELSE 'S' END  
				into STRICT	ie_gerou_autorizacao_w 
				from	procedimento_autorizado 
				where	nr_prescricao		= nr_prescricao_p 
				and	nr_seq_prescricao	= nr_seq_prescr_p;
				 
				if (ie_gerou_autorizacao_w	= 'S') then 
					ds_retorno_p	:= wheb_mensagem_pck.get_texto(307894); -- Exame necessita de autorização, a mesma foi gerada! 
				else
					ds_retorno_p	:= wheb_mensagem_pck.get_texto(307892); -- Exame necessita de autorização! 
				end if;	
			else 
				ds_retorno_p	:= wheb_mensagem_pck.get_texto(307892); -- Exame necessita de autorização! 
			end if;
			 
		end if;		
		 
	end if;	
 
end if;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_substituir_exame ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, nr_seq_material_p bigint, nm_usuario_p text, cd_perfil_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

