-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_controle_notif_atraso_sbc (nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE

					
nm_arquivo_w		varchar(255) := to_char(clock_timestamp(),'dd-mm-yyyy') ||' LOTE '|| nr_seq_lote_p || '.csv';
ds_local_w		varchar(255) := null;
ds_local_windows_w	varchar(255) := null;
ds_erro_w		varchar(255);
arq_texto_w		utl_file.file_type;
cd_carteira_w		pls_segurado_carteira.cd_usuario_plano%type;
nm_pagador_w		pessoa_juridica.ds_razao_social%type;
ds_endereco_w		varchar(255);
ds_numero_w		varchar(10);
ds_complemento_w	varchar(255);
ds_bairro_w		varchar(255);
ds_estado_w		varchar(10);
ds_cep_w		varchar(100);
dt_atraso_w		timestamp;
vl_titulo_w		titulo_receber.vl_titulo%type;
ds_plano_w		pls_plano.ds_plano%type;
ds_conteudo_w		varchar(1000);	

C01 CURSOR FOR
	SELECT (SELECT max(z.cd_usuario_plano)
		from    pls_mensalidade_segurado y,
			pls_segurado_carteira z
		where   y.nr_seq_mensalidade = b.nr_seq_mensalidade
		and     z.nr_seq_Segurado    = y.nr_seq_segurado) cd_carteira,
		substr(c.nm_pessoa_fisica,1,255) nm_pagador,
		substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'SNR'),1,255) ds_endereco,
		substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'NR'),1,10) ds_numero,
		substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'CO'),1,255) ds_complemento,
		substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'B'),1,255) ds_bairro,
		substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'UF'),1,10) ds_estado,
		substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'CEP'),1,100) ds_cep,
		substr(pls_obter_dados_item_notif(b.nr_sequencia,'DM'),1,20) dt_atraso,
		b.vl_titulo vl_titulo,
		(select max(y.ds_plano)
		from    pls_mensalidade_segurado x,
			pls_plano y
		where   x.nr_seq_mensalidade = b.nr_seq_mensalidade
		and     x.nr_seq_plano = y.nr_sequencia) ds_plano
	from    pls_notificacao_pagador a,
		pls_notificacao_item b,
		pessoa_fisica c,
		titulo_receber d,
		pls_contrato_pagador e
	where   a.nr_sequencia       = b.nr_seq_notific_pagador
	and     b.nr_titulo          = d.nr_titulo
	and     c.cd_pessoa_fisica   = d.cd_pessoa_fisica
	and     a.nr_seq_pagador     = e.nr_sequencia
	and     a.nr_seq_lote        = nr_seq_lote_p
	and     (d.cd_pessoa_fisica IS NOT NULL AND d.cd_pessoa_fisica::text <> '')
	
union

	select (select max(z.cd_usuario_plano)
		from    pls_mensalidade_segurado y,
			pls_segurado_carteira z
		where   y.nr_seq_mensalidade = b.nr_seq_mensalidade
		and     z.nr_seq_Segurado    = y.nr_seq_segurado) cd_carteira,
		substr(c.ds_razao_social,1,255) nm_pagador,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'SNR'),1,255) ds_endereco,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'NR'),1,10) ds_numero,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'CO'),1,255) ds_complemento,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'B'),1,255) ds_bairro,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'UF'),1,10) ds_estado,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'CEP'),1,100) ds_cep,
		substr(pls_obter_dados_item_notif(b.nr_sequencia,'DM'),1,20) dt_atraso,
		b.vl_titulo vl_titulo,
		(select max(y.ds_plano)
		from    pls_mensalidade_segurado x,
			pls_plano y
		where   x.nr_seq_mensalidade = b.nr_seq_mensalidade
		and     x.nr_seq_plano = y.nr_sequencia) ds_plano
	from    pls_notificacao_pagador a,
		pls_notificacao_item b,
		pessoa_juridica c,
		titulo_receber d,
		pls_contrato_pagador e
	where   a.nr_sequencia       = b.nr_seq_notific_pagador
	and     b.nr_titulo          = d.nr_titulo
	and     d.cd_cgc             = c.cd_cgc
	and     a.nr_seq_pagador     = e.nr_sequencia
	and     a.nr_seq_lote        = nr_seq_lote_p
	and     (d.cd_cgc IS NOT NULL AND d.cd_cgc::text <> '');


BEGIN

begin
SELECT * FROM obter_evento_utl_file(18, null, ds_local_w, ds_erro_w) INTO STRICT ds_local_w, ds_erro_w;
SELECT * FROM pls_obter_dir_rede_utl_file(18, null, ds_local_windows_w, ds_erro_w) INTO STRICT ds_local_windows_w, ds_erro_w;
exception
when others then
	ds_local_w := null;
	ds_local_windows_w	:= '';
end;

begin
arq_texto_w := utl_file.fopen(ds_local_w,nm_arquivo_w,'W');
exception
when others then
	if (SQLSTATE = -29289) then
		ds_erro_w  := 'O acesso ao arquivo foi negado pelo sistema operacional (access_denied).';
	elsif (SQLSTATE = -29298) then
		ds_erro_w  := 'O arquivo foi aberto usando FOPEN_NCHAR,  mas efetuaram-se operacoes de I/O usando funcoes nonchar comos PUTF ou GET_LINE (charsetmismatch).';
	elsif (SQLSTATE = -29291) then
		ds_erro_w  := 'Nao foi possivel apagar o arquivo (delete_failed).';
	elsif (SQLSTATE = -29286) then
		ds_erro_w  := 'Erro interno desconhecido no package UTL_FILE (internal_error).';
	elsif (SQLSTATE = -29282) then
		ds_erro_w  := 'O handle do arquivo nao existe (invalid_filehandle).';
	elsif (SQLSTATE = -29288) then
		ds_erro_w  := 'O arquivo com o nome especificado nao foi encontrado neste local (invalid_filename).';
	elsif (SQLSTATE = -29287) then
		ds_erro_w  := 'O valor de MAX_LINESIZE para FOPEN() e invalido; deveria estar na faixa de 1 a 32767 (invalid_maxlinesize).';
	elsif (SQLSTATE = -29281) then
		ds_erro_w  := 'O parametro open_mode na chamda FOPEN e invalido (invalid_mode).';
	elsif (SQLSTATE = -29290) then
		ds_erro_w  := 'O parametro ABSOLUTE_OFFSET para a chamada FSEEK() e invalido; deveria ser maior do que 0 e menor do que o numero total de bytes do arquivo (invalid_offset).';
	elsif (SQLSTATE = -29283) then
		ds_erro_w  := 'O arquivo nao pode ser aberto ou operado da forma desejada - ou o caminho nao foi encontrado (invalid_operation).';
	elsif (SQLSTATE = -29280) then
		ds_erro_w  := 'O caminho especificado nao existe ou nao esta visivel ao Oracle (invalid_path).';
	elsif (SQLSTATE = -29284) then
		ds_erro_w  := 'Nao e possivel efetuar a leitura do arquivo (read_error).';
	elsif (SQLSTATE = -29292) then
		ds_erro_w  := 'Nao e possivel renomear o arquivo.';
	elsif (SQLSTATE = -29285) then
		ds_erro_w  := 'Nao foi possivel gravar no arquivo (write_error).';
	else
		ds_erro_w  := 'Erro desconhecido no package UTL_FILE.';
	end if;
end;

open C01;
loop
fetch C01 into	
	cd_carteira_w,
	nm_pagador_w,
	ds_endereco_w,
	ds_numero_w,
	ds_complemento_w,
	ds_bairro_w,
	ds_estado_w,
	ds_cep_w,
	dt_atraso_w,
	vl_titulo_w,
	ds_plano_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	ds_conteudo_w	:=	cd_carteira_w 	|| ';' || nm_pagador_w 	|| ';' || ds_endereco_w || ';' || ds_numero_w 	|| ';' || ds_complemento_w 	|| ';' ||
				ds_bairro_w	|| ';' || ds_estado_w 	|| ';' || ds_cep_w	|| ';' || dt_atraso_w	|| ';' || vl_titulo_w		|| ';' ||
				ds_plano_w;
	
	utl_file.put_line(arq_texto_w,substr(ds_conteudo_w,1,1024) || chr(13));
	utl_file.fflush(arq_texto_w);
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_controle_notif_atraso_sbc (nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

