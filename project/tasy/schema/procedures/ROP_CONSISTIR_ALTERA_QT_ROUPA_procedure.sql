-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rop_consistir_altera_qt_roupa ( nr_seq_rop_roupa_p bigint, qt_altera_p bigint, cd_operacao_p bigint, cd_local_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_altera_p bigint, ds_erro INOUT text) AS $body$
DECLARE


/*
criada a partir das consistencias das procedures
rop_baixar_qt_roupa,
rop_adicionar_qt_roupa
Rop_Consiste_item_Movto_Roupa
*/
/*
ie_tipo_altera_P
1 -> Adicionar quantidade
2 -> Diminui quantidade
*/
qt_roupa_ww				double precision;
ds_historico_w			varchar(4000);
ds_motivo_w				varchar(255);
nr_seq_lote_movto_w		bigint;
cd_estabelecimento_w	bigint;
cd_operacao_w			bigint;
ds_erro_w				varchar(255):= '';

cd_material_w			material.cd_material%type;
cd_barra_roupa_w		rop_roupa.cd_barra_roupa%type;
ie_situacao_w			rop_roupa.ie_situacao%type;
dt_baixa_w				rop_roupa.dt_baixa%type;
nr_seq_local_atual_w	rop_roupa.nr_seq_local%type;
ds_local_atual_w		rop_local.ds_local%type;
nr_seq_lote_roupa_w		rop_roupa.nr_seq_lote_roupa%type;
dt_liberacao_w			rop_lote_roupa.dt_liberacao%type;
qt_roupa_w				rop_movto_roupa.qt_roupa%type;
ie_operacao_w			rop_operacao.ie_operacao%type;
ie_entrada_saida_w			rop_operacao.ie_entrada_saida%type;
qt_saldo_w			rop_saldo_roupa.qt_saldo%type;
qt_existe_w			bigint;
ds_local_baixa_w			rop_local.ds_local%type;

ie_local_dif_lote_w			funcao_param_usuario.vl_parametro%type;
ie_consiste_qtde_w			funcao_param_usuario.vl_parametro%type;

nr_seq_roupa_w			rop_movto_roupa.nr_seq_roupa%type;


BEGIN

cd_operacao_w		:= coalesce(cd_operacao_p,0);
ie_operacao_w		:= substr(rop_obter_dados_operacao(cd_operacao_w, 'T'),1,15);
nr_seq_roupa_w 		:= nr_seq_rop_roupa_p;


select	a.cd_estabelecimento,
	coalesce(b.qt_roupa,0)
into STRICT	cd_estabelecimento_w,
	qt_roupa_w
from	rop_lote_roupa a,
	rop_roupa b
where	a.nr_sequencia = b.nr_seq_lote_roupa
and	b.nr_sequencia = nr_seq_rop_roupa_p;

if (ie_tipo_altera_p = 2) then
	if (qt_altera_p > qt_roupa_w) then
		ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(265533) || chr(13) || chr(10),1,255);
		--'A quantidade à ser baixada é maior que a quantidade atual da roupa.'
	end if;
end if;

if (coalesce(ds_erro_w,'X') = 'X') then
	select	b.cd_material,
		a.cd_barra_roupa,
		a.ie_situacao,
		a.dt_baixa,
		a.nr_seq_local,
		substr(rop_obter_dados_local(a.nr_seq_local, 'D'),1,80) ds_local_atual,
		a.nr_seq_lote_roupa,
		b.dt_liberacao
	into STRICT	cd_material_w,
		cd_barra_roupa_w,
		ie_situacao_w,
		dt_baixa_w,
		nr_seq_local_atual_w,
		ds_local_atual_w,
		nr_seq_lote_roupa_w,
		dt_liberacao_w
	from	rop_roupa a,
		rop_lote_roupa b
	where	a.nr_seq_lote_roupa	= b.nr_sequencia
	and	a.nr_sequencia	= nr_seq_rop_roupa_p;

	select	coalesce(max(obter_valor_param_usuario(1301, 1, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'),
		coalesce(max(obter_valor_param_usuario(1301, 86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N')
	into STRICT	ie_local_dif_lote_w,
		ie_consiste_qtde_w
	;


	if (coalesce(dt_liberacao_w::text, '') = '') then
		--ds_erro_w := substr(ds_erro_w || '* Esta peça ' || cd_material_w || ' não pode ser utilizada pois o lote da roupa não está liberada - Cód.Barras: ' || cd_barra_roupa_w || chr(13) || chr(10),1,255);
		ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(312273, 'CD_MATERIAL=' || cd_material_w || ';' || 'CD_BARRAS_ROUPA=' || cd_barra_roupa_w) || chr(13) || chr(10),1,255);
	end if;

	if (ie_situacao_w = 'I') then
		--ds_erro_w := substr(ds_erro_w || '* Esta peça ' || cd_material_w || ' não pode ser utilizada pois está inativa - Cód.Barras: ' || cd_barra_roupa_w || chr(13) || chr(10),1,255);
		ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(312277, 'CD_MATERIAL=' || cd_material_w || ';' || 'CD_BARRAS_ROUPA=' || cd_barra_roupa_w) || chr(13) || chr(10),1,255);
	end if;

	if (dt_baixa_w IS NOT NULL AND dt_baixa_w::text <> '') then
		--ds_erro_w := substr(ds_erro_w || '* Esta peça ' || cd_material_w || ' não pode ser utilizada pois está baixada - Cód.Barras: ' || cd_barra_roupa_w || chr(13) || chr(10),1,255);
		ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(312279, 'CD_MATERIAL=' || cd_material_w || ';' || 'CD_BARRAS_ROUPA=' || cd_barra_roupa_w) || chr(13) || chr(10),1,255);
	end if;

	if (ie_consiste_qtde_w = 'N') and (qt_roupa_w > 0) and (ie_operacao_w <> 'Reg') and (ie_operacao_w <> 'NF') and (ie_operacao_w <> 'AI') and (ie_operacao_w <> 'AM') then

		-- somado qt_altera_p para simular a criação do movimento da alteracao de quantidade roupa
		if (qt_altera_p > 0) and (qt_altera_p > qt_roupa_w) then
			--ds_erro_w := substr(ds_erro_w || '* A quantidade movimentada da peça ' || cd_material_w || ' é maior que a quantidade definida no cadastro - Cód.Barras: ' || cd_barra_roupa_w || chr(13) || chr(10),1,255);
			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(312281, 'CD_MATERIAL=' || cd_material_w || ';' || 'CD_BARRAS_ROUPA=' || cd_barra_roupa_w) || chr(13) || chr(10),1,255);
		end if;
	end if;

	if (nr_seq_local_atual_w IS NOT NULL AND nr_seq_local_atual_w::text <> '') then
		if (ie_local_dif_lote_w = 'N') and (cd_local_p <> nr_seq_local_atual_w) and (ie_operacao_w <> 'NF') and (ie_operacao_w <> 'AI') and (ie_operacao_w <> 'AM') then
			--ds_erro_w := substr(ds_erro_w || '* O local atual: ' || ds_local_atual_w || ' da peça ' || cd_material_w || ' é diferente do local da movimentação - Cód.Barras: ' || cd_barra_roupa_w || chr(13) || chr(10),1,255);
			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(312282, 'DS_LOCAL_ATUAL=' || ds_local_atual_w || ';' || 'CD_MATERIAL=' || cd_material_w || ';' || 'CD_BARRA_ROUPA=' || cd_barra_roupa_w) || chr(13) || chr(10),1,255);
		end if;

	elsif (coalesce(nr_seq_local_atual_w::text, '') = '') and (ie_operacao_w <> 'Reg') and (ie_operacao_w <> 'NF') and (ie_operacao_w <> 'AI') and (ie_operacao_w <> 'AM') then
		--ds_erro_w := substr(ds_erro_w || '* A peça ' || cd_material_w || ' não possui local atual, deve-se registrar a movimentação - Cód.Barras: ' || cd_barra_roupa_w || chr(13) || chr(10),1,255);
		ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(312283, 'CD_MATERIAL=' || cd_material_w || ';' || 'CD_BARRAS_ROUPA=' || cd_barra_roupa_w) || chr(13) || chr(10),1,255);

	end if;

	if (ie_operacao_w = 'Reg') then
		select	count(*)
		into STRICT	qt_existe_w
		from	rop_lote_movto a,
			rop_movto_roupa b
		where	a.nr_sequencia = b.nr_seq_lote
		and	a.cd_Estabelecimento = cd_estabelecimento_p
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and	substr(rop_obter_dados_operacao(a.nr_seq_operacao, 'T'),1,15) = 'Reg'
		and	a.nr_seq_local = cd_local_p
		and	b.nr_seq_roupa = nr_seq_roupa_w;

		if (qt_existe_w > 0) then
			--ds_erro_w := substr(ds_erro_w || '* A peça ' || cd_material_w || ' já foi registrada neste local - Cód.Barras: ' || cd_barra_roupa_w || chr(13) || chr(10),1,255);
			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(312285, 'CD_MATERIAL=' || cd_material_w || ';' || 'CD_BARRAS_ROUPA=' || cd_barra_roupa_w) || chr(13) || chr(10),1,255);
		end if;

	end if;

	if (cd_operacao_w > 0) then

		select	coalesce(ie_entrada_saida,'N')
		into STRICT	ie_entrada_saida_w
		from	rop_operacao
		where	nr_sequencia = cd_operacao_w;

		if (ie_entrada_saida_w = 'S') then

			select	rop_obter_saldo_roupa(nr_seq_rop_roupa_p, cd_local_p, trunc(clock_timestamp(),'mm'))
			into STRICT	qt_saldo_w
			;

			if (qt_altera_p > qt_saldo_w) then
				ds_local_baixa_w := substr(rop_obter_dados_local(cd_local_p, 'D'),1,80);
				--ds_erro_w = substr(ds_erro_w || '* A peça ' || cd_material_w || ' - ' || cd_barra_roupa_w || ' - ' || nr_seq_roupa || ' não tem saldo suficiente no local ' || ds_local_baixa_w || ' para atender essa operação.' || chr(13) || chr(10),1,255)
				ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(334721, 'CD_MATERIAL_P='|| cd_material_w || ' - ' || cd_barra_roupa_w || ' - ' || nr_seq_rop_roupa_p || ';DS_LOCAL_P='|| ds_local_baixa_w) || chr(13) || chr(10),1,255);

			end if;

		end if;

	end if;

end if;

ds_erro := ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rop_consistir_altera_qt_roupa ( nr_seq_rop_roupa_p bigint, qt_altera_p bigint, cd_operacao_p bigint, cd_local_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_altera_p bigint, ds_erro INOUT text) FROM PUBLIC;

