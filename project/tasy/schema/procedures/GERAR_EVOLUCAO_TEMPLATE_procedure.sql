-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evolucao_template (( nr_seq_reg_p bigint, nr_seq_reg_template_p bigint, nm_usuario_p text) is nr_seq_template_w bigint) RETURNS text AS $body$
BEGIN
	return replace(replace(replace(ds_text_p,chr(13)||chr(10),'\par '),chr(10),' \par '),chr(13),' \par ');
	end;

  function get_valor_campo_ehr(nr_seq_reg_template_p in	number,
  nr_seq_temp_conteudo_p in	number,
  ds_mascara_p in	varchar2 ,
  ie_juntar_localizador_p in varchar2 ,
  ie_clob_w in varchar2) return clob is
  ds_retorno_campo_ehr_w clob;
  begin

    if (ie_clob_w = 'S') then
      ds_retorno_campo_ehr_w := EHR_VLR_CLOB(nr_seq_reg_template_p, nr_seq_temp_conteudo_p);
    else
      ds_retorno_campo_ehr_w := ehr_vlr(nr_seq_reg_template_p, nr_seq_temp_conteudo_p, ds_mascara_p, ie_juntar_localizador_p);
    end if;
    return ds_retorno_campo_ehr_w;
  end;
begin

select	max(nr_seq_template)
into STRICT	nr_seq_template_w
from	ehr_reg_template
where	NR_SEQ_REG	= nr_seq_reg_p;

select	max(IE_CAMPOS_PREENCH_EVOL_TEMP),
	max(coalesce(ie_todos_evol_temp,'N'))
into STRICT	ie_campos_preench_evol_temp_w,
	ie_todos_registros_cluster_w
from	PARAMETRO_MEDICO
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;


select 	max(nr_atendimento),
	max(cd_paciente),
	max(cd_profissional),
	max(dt_registro)
into STRICT	nr_atendimento_w,
	cd_pessoa_fisica_w,
	cd_medico_w,
	dt_avaliacao_w
from	ehr_registro
where	nr_sequencia	= nr_seq_reg_p;



if (nr_seq_template_w IS NOT NULL AND nr_seq_template_w::text <> '') then
	select	max(ie_gerar_evolucao),
		max(ie_evolucao_clinica)
	into STRICT	ie_gerar_evolucao_w,
		ie_evolucao_clinica_w
	from	ehr_template
	where	nr_sequencia	= nr_seq_template_w;


	if (ie_gerar_evolucao_w	= 'S') and (ie_evolucao_clinica_w IS NOT NULL AND ie_evolucao_clinica_w::text <> '') then

		select max(ie_relev_resumo_alta)
		into STRICT ie_relev_resumo_alta_w
		from tipo_evolucao
		where cd_tipo_evolucao = ie_evolucao_clinica_w;

		ds_fonte_w := Obter_Param_Usuario(281, 5, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ds_fonte_w);
		ds_tam_fonte_w := Obter_Param_Usuario(281, 6, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ds_tam_fonte_w);
		nr_tam_fonte_w	:= somente_numero(ds_tam_fonte_w)*2;




		open C01;
		loop
		fetch C01 into
			ds_label_w,
			nr_seq_elemento_w,
			nr_seq_elem_visual_w,
			nr_seq_temp_conteudo_w,
			ds_mascara_w,
			nr_seq_temp_cluster_w,
			ds_unid_medida_w,
			nr_seq_elem_sup_w,
			qt_desloc_dir_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
        select coalesce(max('S'), 'N')
        into STRICT ie_campo_clob_w
        from EHR_ELEMENTO
        where nr_Sequencia = nr_seq_elemento_w
          and NR_SEQ_TIPO_DADO = 15;

			if (nr_seq_elemento_w = 308) then
				begin
				if (ie_todos_registros_cluster_w = 'S') then
					begin
					ds_comando_C03_w := 'select distinct nr_registro_cluster from EHR_REG_ELEMENTO where nr_seq_reg_template = ' || nr_seq_reg_template_p || ' and nr_registro_cluster is not null order by nr_registro_cluster ';

					C03_w := DBMS_SQL.OPEN_CURSOR;
					DBMS_SQL.PARSE(C03_w, ds_comando_C03_w, DBMS_SQL.NATIVE);
					DBMS_SQL.DEFINE_COLUMN(C03_w,1,nr_registro_cluster_w);
					retorno_w := DBMS_SQL.execute(C03_w);

					while(DBMS_SQL.FETCH_ROWS(C03_w) > 0) loop
						begin
						DBMS_SQL.COLUMN_VALUE(C03_w,1,nr_registro_cluster_w);

						open C02;
						loop
						fetch C02 into
							ds_label_w,
							nr_seq_elemento_w,
							nr_seq_elem_visual_w,
							nr_seq_temp_conteudo_w,
							ds_mascara_w;
						EXIT WHEN NOT FOUND; /* apply on C02 */
							begin
							if (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '') then
								ds_resultado_w := cluster_vlr(nr_seq_reg_template_p,nr_seq_temp_conteudo_w,nr_seq_temp_cluster_w,nr_registro_cluster_w,ds_mascara_w) || ' ' || ds_unid_medida_w;
								ds_resultado_w := replaceEnter(ds_resultado_w);

								if (ie_campos_preench_evol_temp_w = 'S') then
									if ((trim(both ds_resultado_w) IS NOT NULL AND (trim(both ds_resultado_w))::text <> '')) then
										ds_conteudo_w := ds_conteudo_w || ' ' || wheb_rtf_pck.get_negrito(true) || ds_label_w || ' : ' || wheb_rtf_pck.get_negrito(false) || ds_resultado_w || ' ' || ds_unid_medida_w || ' \par';
									end if;
								else
									ds_conteudo_w := ds_conteudo_w || ' ' || wheb_rtf_pck.get_negrito(true) || ds_label_w || ' : ' || wheb_rtf_pck.get_negrito(false) || ds_resultado_w || ' ' || ds_unid_medida_w || ' \par';
								end if;
							elsif (nr_seq_elem_visual_w = 4) then
								ds_conteudo_w := ds_conteudo_w || ' ' || wheb_rtf_pck.get_negrito(true) || ds_label_w || wheb_rtf_pck.get_negrito(false) || ' \par';
							end if;
							end;
						end loop;
						close C02;
						end;
					end loop;
					DBMS_SQL.CLOSE_CURSOR(C03_w);
					end;
				else
					open C02;
					loop
					fetch C02 into
						ds_label_w,
						nr_seq_elemento_w,
						nr_seq_elem_visual_w,
						nr_seq_temp_conteudo_w,
						ds_mascara_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin

						if (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '') then
							ds_resultado_w := get_valor_campo_ehr(nr_seq_reg_template_p,nr_seq_temp_conteudo_w,ds_mascara_w, 'S', ie_campo_clob_w) || ' ' || ds_unid_medida_w;
							ds_resultado_w := replaceEnter(ds_resultado_w);
							if (ie_campos_preench_evol_temp_w = 'S') then
								if ((trim(both ds_resultado_w) IS NOT NULL AND (trim(both ds_resultado_w))::text <> '')) then
									ds_conteudo_w := ds_conteudo_w ||' '||wheb_rtf_pck.get_negrito(true)||ds_label_w||' : '||wheb_rtf_pck.get_negrito(false)||ds_resultado_w || ' ' || ds_unid_medida_w ||' \par';
								end if;
							else
								ds_conteudo_w := ds_conteudo_w ||' '||wheb_rtf_pck.get_negrito(true)||ds_label_w||' : '||wheb_rtf_pck.get_negrito(false)||ds_resultado_w || ' ' || ds_unid_medida_w ||' \par';
							end if;
						elsif (nr_seq_elem_visual_w = 4 ) then
								ds_conteudo_w	:= ds_conteudo_w||' '||wheb_rtf_pck.get_negrito(true)||ds_label_w||wheb_rtf_pck.get_negrito(false)||' \par';
						end if;
						end;
					end loop;
					close C02;
				end if;
				end;
			elsif (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '') then
				ds_resultado_w := get_valor_campo_ehr(nr_seq_reg_template_p,nr_seq_temp_conteudo_w,ds_mascara_w, 'S', ie_campo_clob_w);
				ds_resultado_w := replaceEnter(ds_resultado_w);

				if (ie_campos_preench_evol_temp_w = 'S') then
					if (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then
						if (nr_seq_elem_sup_w > 0) then
							ds_result_w := get_valor_campo_ehr(nr_seq_reg_template_p,nr_seq_elem_sup_w,ds_mascara_w, 'S', ie_campo_clob_w);



							if (ds_result_w IS NOT NULL AND ds_result_w::text <> '') and (coalesce(qt_desloc_dir_w,0) <> 0) then
								ds_conteudo_w := substr(ds_conteudo_w,1,length(ds_conteudo_w)-5) ||' '||wheb_rtf_pck.get_negrito(true)||ds_label_w||' : '||wheb_rtf_pck.get_negrito(false)||ds_resultado_w || ' ' || ds_unid_medida_w ||' \par';
							else
								ds_conteudo_w := ds_conteudo_w ||' '||wheb_rtf_pck.get_negrito(true)||ds_label_w||' : '||wheb_rtf_pck.get_negrito(false)||ds_resultado_w || ' ' || ds_unid_medida_w ||' \par';
							end if;
						else
							ds_conteudo_w := ds_conteudo_w ||' '||wheb_rtf_pck.get_negrito(true)||ds_label_w||' : '||wheb_rtf_pck.get_negrito(false)||ds_resultado_w || ' ' || ds_unid_medida_w ||' \par';
						end if;
					end if;
				else
					ds_conteudo_w := ds_conteudo_w ||' '||wheb_rtf_pck.get_negrito(true)||ds_label_w||' : '||wheb_rtf_pck.get_negrito(false)||ds_resultado_w || ' ' || ds_unid_medida_w ||' \par';
				end if;
			elsif (nr_seq_elem_visual_w = 4 ) then

				if (nr_seq_elem_sup_w > 0) then
					ds_result_w := get_valor_campo_ehr(nr_seq_reg_template_p,nr_seq_elem_sup_w,ds_mascara_w, 'S', ie_campo_clob_w);



					if (ie_campos_preench_evol_temp_w = 'S') and (ds_result_w IS NOT NULL AND ds_result_w::text <> '') then
						if (coalesce(qt_desloc_dir_w,0) <> 0) then
							ds_conteudo_w	:= substr(ds_conteudo_w,1,length(ds_conteudo_w)-5)||' '||wheb_rtf_pck.get_negrito(true)||ds_label_w||wheb_rtf_pck.get_negrito(false)||' \par';
						else
							ds_conteudo_w	:= ds_conteudo_w||' '||wheb_rtf_pck.get_negrito(true)||ds_label_w||wheb_rtf_pck.get_negrito(false)||' \par';
						end if;
					end if;
				else
					ds_conteudo_w	:= ds_conteudo_w||' '||wheb_rtf_pck.get_negrito(true)||ds_label_w||wheb_rtf_pck.get_negrito(false)||' \par';
				end if;

			end if;
			end;
		end loop;
		close C01;

		ds_conteudo_w := REPLACE(ds_conteudo_w, '{', '\{');
		ds_conteudo_w := REPLACE(ds_conteudo_w, '}', '\}');

		ds_cabecalho_w	:= '{\rtf1\ansi\ansicpg1252\deff0\deflang1046{\fonttbl{\f0\fswiss\fcharset0 '||ds_fonte_w||';}}'||
			   '{\*\generator Msftedit 5.41.15.1507;}\viewkind4\uc1\pard\f0\fs'||nr_tam_fonte_w||' ';

		ds_rodape_w	:= '}';

        qt_char_maximo := 32000-(length(ds_cabecalho_w)+length(ds_rodape_w));

		ds_evolucao_w	:= substr(ds_cabecalho_w || substr(ds_conteudo_w, 1, qt_char_maximo) || ds_rodape_w,32000,1);

		select	coalesce(max(ie_tipo_evolucao),'1')
		into STRICT	ie_tipo_evolucao_w
		from	usuario
		where	nm_usuario = nm_usuario_p;

		select	nextval('evolucao_paciente_seq')
		into STRICT	cd_evolucao_w
		;

		insert into evolucao_paciente(	cd_evolucao,
											dt_evolucao,
											ie_tipo_evolucao,
											cd_pessoa_fisica,
											dt_atualizacao,
											nm_usuario,
											nm_usuario_nrec,
											nr_atendimento,
											ds_evolucao,
											cd_medico,
											IE_EVOLUCAO_CLINICA,
											ie_situacao,
											NR_SEQ_EHR_REG,
											IE_RELEV_RESUMO_ALTA)
				values (					cd_evolucao_w,
											dt_avaliacao_w,
											ie_tipo_evolucao_w,
											cd_pessoa_fisica_w,
											clock_timestamp(),
											nm_usuario_p,
											nm_usuario_p,
											nr_atendimento_w,
											ds_evolucao_w,
											cd_medico_w,
											IE_EVOLUCAO_CLINICA_w,
											'A',
											nr_seq_reg_p,
											ie_relev_resumo_alta_w);

		CALL Liberar_Evolucao(cd_evolucao_w,nm_usuario_p);

		if (nr_seq_reg_p > -1) then
			CALL gerar_evolucao_vinculo(nr_seq_reg_p,cd_evolucao_w,'EHR');
		end if;


	end if;
end if;

commit;

end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evolucao_template (( nr_seq_reg_p bigint, nr_seq_reg_template_p bigint, nm_usuario_p text) is nr_seq_template_w bigint) FROM PUBLIC;

