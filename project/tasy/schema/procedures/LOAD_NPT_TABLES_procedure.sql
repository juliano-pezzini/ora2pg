-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE load_npt_tables (nr_seq_npt_cpoe_p bigint, nm_usuario_p text, ds_json_p INOUT text ) AS $body$
DECLARE


ie_tipo_dieta_w						cpoe_dieta.ie_tipo_dieta%type;

-- CPOE_NPT_ELEMENTO **/
nr_seq_npt_elem_prescr_w			cpoe_npt_elemento.nr_sequencia%type;
nr_seq_elemento_w					cpoe_npt_elemento.nr_seq_elemento%type;
cd_unidade_medida_elem_w			cpoe_npt_elemento.cd_unidade_medida%type;
qt_diaria_w							cpoe_npt_elemento.qt_diaria%type;
qt_kcal_w							cpoe_npt_elemento.qt_kcal%type;
qt_protocolo_w						cpoe_npt_elemento.qt_protocolo%type;
qt_elem_kg_dia_w					cpoe_npt_elemento.qt_elem_kg_dia%type;
ie_prod_adicional_elem_w			cpoe_npt_elemento.ie_prod_adicional%type;
ie_prim_fase_w						cpoe_npt_elemento.ie_prim_fase%type;
ie_seg_fase_w						cpoe_npt_elemento.ie_seg_fase%type;
ie_terc_fase_w						cpoe_npt_elemento.ie_terc_fase%type;
ie_quar_fase_w						cpoe_npt_elemento.ie_quar_fase%type;
ie_unid_med_w						cpoe_npt_elemento.ie_unid_med%type;
ie_npt_w							cpoe_npt_elemento.ie_npt%type;
qt_grama_nitrogenio_w				cpoe_npt_elemento.qt_grama_nitrogenio%type;
ie_tipo_elemento_w					cpoe_npt_elemento.ie_tipo_elemento%type;
ie_glutamina_w						cpoe_npt_elemento.ie_glutamina%type;
pr_total_w							cpoe_npt_elemento.pr_total%type;
pr_concentracao_w					cpoe_npt_elemento.pr_concentracao%type;
qt_volume_final_w					cpoe_npt_elemento.qt_volume_final%type;
nr_seq_nut_elem_mat_ww				cpoe_npt_elemento.nr_seq_elem_mat%type;
qt_volume_ww						cpoe_npt_elemento.qt_volume%type;

-- CPOE_NPT_PRODUTO
nr_seq_npt_prod_w					cpoe_npt_produto.nr_sequencia%type;
nr_seq_nut_elem_mat_w				cpoe_npt_produto.nr_seq_elem_mat%type;
nr_seq_npt_elem_w					cpoe_npt_produto.nr_seq_elemento%type;
cd_material_prod_w					cpoe_npt_produto.cd_material%type;
qt_volume_w							cpoe_npt_produto.qt_volume%type;
qt_vol_1_fase_w						cpoe_npt_produto.qt_vol_1_fase%type;
qt_vol_2_fase_w						cpoe_npt_produto.qt_vol_2_fase%type;
qt_vol_3_fase_w						cpoe_npt_produto.qt_vol_3_fase%type;
qt_vol_4_fase_w						cpoe_npt_produto.qt_vol_4_fase%type;
qt_vol_cor_w						cpoe_npt_produto.qt_vol_cor%type;
qt_protocolo_prod_w					cpoe_npt_produto.qt_protocolo%type;
qt_dose_w							cpoe_npt_produto.qt_dose%type;
cd_unidade_medida_prod_w			cpoe_npt_produto.cd_unidade_medida%type;
ie_prod_adicional_prod_w			cpoe_npt_produto.ie_prod_adicional%type;
ie_somar_volume_w					cpoe_npt_produto.ie_somar_volume%type;
ie_modificado_w						cpoe_npt_produto.ie_modificado%type;
ds_material_w						varchar(254);

-- JSON values
ds_json_elem_w                    	text;
ds_json_prod_w                    	text;
ds_padrao_w							varchar(400);

/** CPOE_NPT_ELEMENTO **/

c01 CURSOR FOR
SELECT nr_sequencia,
	nr_seq_elemento,
	cd_unidade_medida,
	qt_diaria,
	qt_kcal,
	qt_protocolo,
	qt_elem_kg_dia,
	ie_prod_adicional,
	ie_prim_fase,
	ie_seg_fase,
	ie_terc_fase,
	ie_quar_fase,
	ie_unid_med,
	ie_npt,
	qt_grama_nitrogenio,
	ie_tipo_elemento,
	ie_glutamina,
	pr_total,
	pr_concentracao,
	qt_volume_final,
	nr_seq_elem_mat,
	qt_volume
from	cpoe_npt_elemento
where	nr_seq_npt_cpoe = nr_seq_npt_cpoe_p
order by	1;

/** CPOE_NPT_PRODUTO **/

c02 CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_elem_mat,
	nr_seq_elemento,
	cd_material,
	qt_volume,
	qt_vol_1_fase,
	qt_vol_2_fase,
	qt_vol_3_fase,
	qt_vol_4_fase,
	qt_vol_cor,
	qt_protocolo,
	qt_dose,
	cd_unidade_medida,
	ie_prod_adicional,
	ie_somar_volume,
	coalesce(ie_modificado,'N')
from	cpoe_npt_produto
where	nr_seq_npt_cpoe = nr_seq_npt_cpoe_p
order by	1;


BEGIN

	select	max(ie_tipo_dieta)
	into STRICT	ie_tipo_dieta_w
	from	cpoe_dieta
	where	nr_sequencia = nr_seq_npt_cpoe_p;

	ds_json_elem_w := null;
	ds_json_prod_w := null;

	OPEN c01;
	LOOP
	FETCH c01 INTO
		nr_seq_npt_elem_prescr_w,
		nr_seq_elemento_w,
		cd_unidade_medida_elem_w,
		qt_diaria_w,
		qt_kcal_w,
		qt_protocolo_w,
		qt_elem_kg_dia_w,
		ie_prod_adicional_elem_w,
		ie_prim_fase_w,
		ie_seg_fase_w,
		ie_terc_fase_w,
		ie_quar_fase_w,
		ie_unid_med_w,
		ie_npt_w,
		qt_grama_nitrogenio_w,
		ie_tipo_elemento_w,
		ie_glutamina_w,
		pr_total_w,
		pr_concentracao_w,
		qt_volume_final_w,
		nr_seq_nut_elem_mat_ww,
		qt_volume_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */

	if (ie_tipo_dieta_w = 'P') then
		ds_padrao_w := substr(obter_padrao_elem_nut_pac(nr_seq_elemento_w),1,40);
	else
		ds_padrao_w := substr(obter_padrao_elem_nut_pac_ped(nr_seq_elemento_w),1,40);
	end if;

	ds_json_elem_w := ds_json_elem_w || '{'
		|| format_array_json('NR_SEQUENCIA', nr_seq_npt_elem_prescr_w, 1)
		|| format_array_json('DS_ELEMENTO', substr(obter_descricao_padrao('NUT_ELEMENTO','DS_ELEMENTO',nr_seq_elemento_w),1,40), 1)
		|| format_array_json('DS_UNIDADE_MEDIDA', substr(obter_desc_unid_med(cd_unidade_medida_elem_w),1,40), 1)
		|| format_array_json('DS_PADRAO', ds_padrao_w, 1)
		|| format_array_json('NM_USUARIO', nm_usuario_p, 1)
		|| format_array_json('NR_SEQ_NPT_CPOE', nr_seq_npt_cpoe_p, 1)
		|| format_array_json('CD_UNIDADE_MEDIDA', cd_unidade_medida_elem_w, 1)
		|| format_array_json('NR_SEQ_ELEMENTO', nr_seq_elemento_w, 1)
		|| format_array_json_number('QT_DIARIA', qt_diaria_w)
		|| format_array_json_number('QT_KCAL', qt_kcal_w)
		|| format_array_json_number('QT_PROTOCOLO', qt_protocolo_w)
		|| format_array_json_number('QT_ELEM_KG_DIA', qt_elem_kg_dia_w)
		|| format_array_json('IE_PROD_ADICIONAL', ie_prod_adicional_elem_w, 1)
		|| format_array_json('IE_PRIM_FASE', ie_prim_fase_w, 1)
		|| format_array_json('IE_SEG_FASE', ie_seg_fase_w, 1)
		|| format_array_json('IE_TERC_FASE', ie_terc_fase_w, 1)
		|| format_array_json('IE_QUAR_FASE', ie_quar_fase_w, 1)
		|| format_array_json('IE_UNID_MED', ie_unid_med_w, 1)
		|| format_array_json('IE_NPT', ie_npt_w, 1)
		|| format_array_json_number('QT_GRAMA_NITROGENIO', qt_grama_nitrogenio_w)
		|| format_array_json('IE_TIPO_ELEMENTO', ie_tipo_elemento_w, 1)
		|| format_array_json('IE_GLUTAMINA', ie_glutamina_w, 1)
		|| format_array_json_number('QT_VOLUME_FINAL', qt_volume_final_w)
		|| format_array_json_number('QT_VOLUME_CORRIGIDO', cpoe_obter_vol_cor_elem(nr_seq_npt_elem_prescr_w))
		|| format_array_json_number('PR_TOTAL', pr_total_w)
		|| format_array_json_number('PR_CONCENTRACAO', pr_concentracao_w)
		|| format_array_json_number('NR_SEQ_ELEM_MAT', nr_seq_nut_elem_mat_ww)
		|| format_array_json_number('QT_VOLUME', qt_volume_ww)
		|| format_array_json('DS_MATERIAL', substr(Obter_desc_mat_npt(nr_seq_nut_elem_mat_ww),1,40), 1)
		|| format_array_json('DS_VOL_1_FASE', substr(cpoe_obter_vol_fase_npt(nr_seq_npt_elem_prescr_w,1),1,20), 1)
		|| format_array_json('DS_VOL_2_FASE', substr(cpoe_obter_vol_fase_npt(nr_seq_npt_elem_prescr_w,2),1,20), 1)
		|| format_array_json('DS_VOL_3_FASE', substr(cpoe_obter_vol_fase_npt(nr_seq_npt_elem_prescr_w,3),1,20), 1)
		|| format_array_json('DS_VOL_4_FASE', substr(cpoe_obter_vol_fase_npt(nr_seq_npt_elem_prescr_w,4),1,20), 1);

	ds_json_elem_w := substr(ds_json_elem_w, 1, length(ds_json_elem_w) -2) || '}, ';
	END LOOP;
CLOSE c01;


OPEN c02;
	LOOP
	FETCH c02 INTO
		nr_seq_npt_prod_w,
		nr_seq_nut_elem_mat_w,
		nr_seq_npt_elem_w,
		cd_material_prod_w,
		qt_volume_w,
		qt_vol_1_fase_w,
		qt_vol_2_fase_w,
		qt_vol_3_fase_w,
		qt_vol_4_fase_w,
		qt_vol_cor_w,
		qt_protocolo_prod_w,
		qt_dose_w,
		cd_unidade_medida_prod_w,
		ie_prod_adicional_prod_w,
		ie_somar_volume_w,
		ie_modificado_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

	ds_json_prod_w := ds_json_prod_w || '{'
		|| format_array_json('NR_SEQUENCIA', nr_seq_npt_prod_w, 1)
		|| format_array_json('NM_USUARIO', nm_usuario_p, 1)
		|| format_array_json('NR_SEQ_ELEM_MAT', nr_seq_nut_elem_mat_w, 1)
		|| format_array_json('NR_SEQ_ELEMENTO', nr_seq_npt_elem_w, 1)
		|| format_array_json('NR_SEQ_NPT_CPOE', nr_seq_npt_cpoe_p, 1)
		|| format_array_json('CD_MATERIAL', cd_material_prod_w, 1)
		|| format_array_json_number('QT_VOLUME', qt_volume_w)
		|| format_array_json_number('QT_VOL_1_FASE', qt_vol_1_fase_w)
		|| format_array_json_number('QT_VOL_2_FASE', qt_vol_2_fase_w)
		|| format_array_json_number('QT_VOL_3_FASE', qt_vol_3_fase_w)
		|| format_array_json_number('QT_VOL_4_FASE', qt_vol_4_fase_w)
		|| format_array_json_number('QT_VOL_COR', qt_vol_cor_w)
		|| format_array_json_number('QT_PROTOCOLO', qt_protocolo_prod_w)
		|| format_array_json_number('QT_DOSE', qt_dose_w)
		|| format_array_json('CD_UNIDADE_MEDIDA', cd_unidade_medida_prod_w, 1)
		|| format_array_json('IE_PROD_ADICIONAL', ie_prod_adicional_prod_w, 1)
		|| format_array_json('IE_SOMAR_VOLUME', ie_somar_volume_w, 1)
		|| format_array_json('DS_MATERIAL', substr(obter_desc_material(cd_material_prod_w),1,60), 1)
		|| format_array_json('DS_UNIDADE_MEDIDA', substr(obter_desc_unid_med(cd_unidade_medida_prod_w),1,40), 1)
		|| format_array_json('IE_TIPO_ELEMENTO', substr(cpoe_obter_npt_tipo_elemento(nr_seq_npt_elem_w),1,1), 1)
		|| format_array_json('IE_MODIFICADO', ie_modificado_w, 1);

	ds_json_prod_w := substr(ds_json_prod_w, 1, length(ds_json_prod_w) -2) || '}, ';
	END LOOP;
CLOSE c02;

	if (ds_json_elem_w IS NOT NULL AND ds_json_elem_w::text <> '' AND ds_json_prod_w IS NOT NULL AND ds_json_prod_w::text <> '') then
		ds_json_elem_w := '"CPOE_NPT_ELEMENTO": [' || substr(ds_json_elem_w, 1, length(ds_json_elem_w) -2) || ']';
		ds_json_prod_w := '"CPOE_NPT_PRODUTO": [' || substr(ds_json_prod_w, 1, length(ds_json_prod_w) -2) || ']';

		ds_json_p := '{' || ds_json_elem_w || ', ' || ds_json_prod_w ||'}';
	end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE load_npt_tables (nr_seq_npt_cpoe_p bigint, nm_usuario_p text, ds_json_p INOUT text ) FROM PUBLIC;

