-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE des_calcular_escore_he (dt_referencia_p timestamp, nm_usuario_p text, qt_pontos_p INOUT bigint, ds_historico_p INOUT text) AS $body$
DECLARE


qt_pontos_w						double precision;
qt_min_jan_extra_w              double precision;
qt_min_fev_extra_w              double precision;
qt_min_mar_extra_w              double precision;
qt_min_abr_extra_w              double precision;
qt_min_mai_extra_w              double precision;
qt_min_jun_extra_w              double precision;
qt_min_jul_extra_w              double precision;
qt_min_ago_extra_w              double precision;
qt_min_set_extra_w              double precision;
qt_min_out_extra_w              double precision;
qt_min_nov_extra_w              double precision;
qt_min_dez_extra_w				double precision;
qt_hora_extra_w					double precision;
qt_mes_refer_w					bigint;
dt_ano_referencia_w				timestamp;

c010  			integer;
retorno_w		integer;
ds_comando_cursor_w	varchar(2000);


BEGIN
qt_pontos_w						:= 0;
dt_ano_referencia_w				:= trunc(dt_referencia_p, 'year');
qt_mes_refer_w					:= somente_numero(to_char(dt_referencia_p, 'mm'));

ds_comando_cursor_w := ''||
' select	max(qt_min_jan_extra),'||
'		max(qt_min_fev_extra),'||
'		max(qt_min_mar_extra),'||
'		max(qt_min_abr_extra),'||
'		max(qt_min_mai_extra),'||
'		max(qt_min_jun_extra),'||
'		max(qt_min_jul_extra),'||
'		max(qt_min_ago_extra),'||
'		max(qt_min_set_extra),'||
'		max(qt_min_out_extra),'||
'		max(qt_min_nov_extra),'||
'		max(qt_min_dez_extra)'||
' from		w_horas_extra'||
' where		dt_ano_ref		= :dt_ano_referencia'||
' and		nm_usuario		= :nm_usuario';


C010 := DBMS_SQL.OPEN_CURSOR;
DBMS_SQL.PARSE(C010, ds_comando_cursor_w, dbms_sql.Native);
DBMS_SQL.DEFINE_COLUMN(C010, 1, qt_min_jan_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 2, qt_min_fev_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 3, qt_min_mar_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 4, qt_min_abr_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 5, qt_min_mai_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 6, qt_min_jun_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 7, qt_min_jul_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 8, qt_min_ago_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 9, qt_min_set_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 10, qt_min_out_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 11, qt_min_nov_extra_w);
DBMS_SQL.DEFINE_COLUMN(C010, 12, qt_min_dez_extra_w);
DBMS_SQL.BIND_VARIABLE(C010, 'DT_ANO_REFERENCIA', dt_ano_referencia_w);
DBMS_SQL.BIND_VARIABLE(C010, 'NM_USUARIO', nm_usuario_p,255);

retorno_w := DBMS_SQL.execute(c010);
retorno_w := DBMS_SQL.fetch_rows(c010);

DBMS_SQL.COLUMN_VALUE(C010, 1, qt_min_jan_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 2, qt_min_fev_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 3, qt_min_mar_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 4, qt_min_abr_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 5, qt_min_mai_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 6, qt_min_jun_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 7, qt_min_jul_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 8, qt_min_ago_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 9, qt_min_set_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 10, qt_min_out_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 11, qt_min_nov_extra_w);
DBMS_SQL.COLUMN_VALUE(C010, 12, qt_min_dez_extra_w);

DBMS_SQL.CLOSE_CURSOR(C010);

if (qt_mes_refer_w	= 1) then
	qt_hora_extra_w		:= qt_min_jan_extra_w;
elsif (qt_mes_refer_w	= 2) then
	qt_hora_extra_w		:= qt_min_fev_extra_w;
elsif (qt_mes_refer_w	= 3) then
	qt_hora_extra_w		:= qt_min_mar_extra_w;
elsif (qt_mes_refer_w	= 4) then
	qt_hora_extra_w		:= qt_min_abr_extra_w;
elsif (qt_mes_refer_w	= 5) then
	qt_hora_extra_w		:= qt_min_mai_extra_w;
elsif (qt_mes_refer_w	= 6) then
	qt_hora_extra_w		:= qt_min_jun_extra_w;
elsif (qt_mes_refer_w	= 7) then
	qt_hora_extra_w		:= qt_min_jul_extra_w;
elsif (qt_mes_refer_w	= 8) then
	qt_hora_extra_w		:= qt_min_ago_extra_w;
elsif (qt_mes_refer_w	= 9) then
	qt_hora_extra_w		:= qt_min_set_extra_w;
elsif (qt_mes_refer_w	= 10) then
	qt_hora_extra_w		:= qt_min_out_extra_w;
elsif (qt_mes_refer_w	= 11) then
	qt_hora_extra_w		:= qt_min_nov_extra_w;
elsif (qt_mes_refer_w	= 12) then
	qt_hora_extra_w		:= qt_min_dez_extra_w;
end if;

if		((qt_hora_extra_w > 20) or (qt_hora_extra_w < 0)) then
		qt_pontos_w	:= 10;
end if;

qt_pontos_p		:= qt_pontos_w;
ds_historico_p	:= 	'Escore de horas extras ' || chr(13) || chr(10) ||
					'		Horas extras no mÃªs: ' || coalesce(qt_hora_extra_w,0) || chr(13) || chr(10) ||
					'		Esperado : < 20'  || chr(13) || chr(10) ||
					'		Perde: ' || qt_pontos_w || ' pontos' || chr(13) || chr(13);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE des_calcular_escore_he (dt_referencia_p timestamp, nm_usuario_p text, qt_pontos_p INOUT bigint, ds_historico_p INOUT text) FROM PUBLIC;

