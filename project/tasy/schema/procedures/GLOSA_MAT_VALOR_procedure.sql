-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE glosa_mat_valor ( nr_sequencia_p bigint, vl_glosa_p bigint) AS $body$
DECLARE


cd_convenio_glosa_w	integer := null;
cd_categoria_glosa_w	varchar(10) := null;
nr_sequencia_w		bigint;

cd_convenio_w		material_atend_paciente.cd_convenio%type;
cd_categoria_w		material_atend_paciente.cd_categoria%type;
nr_atendimento_w		material_atend_paciente.nr_atendimento%type;
vl_material_w		material_atend_paciente.vl_material%type;
nm_usuario_w		material_atend_paciente.nm_usuario%type;
vl_unitario_w		material_atend_paciente.vl_unitario%type;
qt_material_w		material_atend_paciente.qt_material%type;
dt_entrada_w		timestamp;
dt_alta_w			timestamp;
dt_altap_w		timestamp;
dt_conta_w		timestamp;
dt_conta_real_w		timestamp;
nr_doc_convenio_w	material_atend_paciente.nr_doc_convenio%type;
cd_estabelecimento_w	atendimento_paciente.cd_estabelecimento%type;
ie_clinica_w		atendimento_paciente.ie_clinica%type;
cd_setor_atendimento_w	material_atend_paciente.cd_setor_atendimento%type;
cd_local_estoque_w	material_atend_paciente.cd_local_estoque%type;

cd_material_w		material.cd_material%type;
ie_classif_contabil_w	convenio.ie_tipo_convenio%type;
ie_tipo_atendimento_w	atendimento_paciente.ie_tipo_atendimento%type;
ie_tipo_convenio_aux2_w	convenio.ie_classif_contabil%type;
cd_conta_receita_w	conta_contabil.cd_conta_contabil%type;
cd_centro_custo_w		centro_custo.cd_centro_custo%type;
ie_regra_pacote_w		varchar(5) := 'N';

vl_material_ww		double precision;
vl_unitario_ww		double precision;

dt_acerto_conta_w		timestamp;
nr_interno_conta_w		bigint;
cd_convenio_calculo_w	integer;
cd_categoria_calculo_w	varchar(10);
vl_unitario_novo_w		double precision;
vl_material_novo_w		double precision;
ie_trunc_vl_material_w	varchar(1):= 'N';


BEGIN

select	a.cd_convenio,
	a.cd_categoria,
	a.nr_atendimento,
	a.vl_material,
	a.nm_usuario,
	a.vl_unitario,
	a.qt_material,
	b.dt_entrada,
	coalesce(b.dt_alta,to_date('01/01/1900 00:00:00','dd/mm/yyyy hh24:mi:ss')),
	coalesce(b.dt_alta,clock_timestamp()),
	coalesce(a.dt_conta, coalesce(a.dt_prescricao, a.dt_atendimento)),
	coalesce(a.dt_conta, a.dt_atendimento),
	a.nr_doc_convenio,
	b.cd_estabelecimento,
	b.ie_clinica,
	a.cd_setor_atendimento,
	a.cd_local_estoque,
	CASE WHEN coalesce(a.nr_seq_proc_pacote,0)=0 THEN 'N'  ELSE 'S' END ,
	a.cd_material
into STRICT	cd_convenio_w,
	cd_categoria_w,
	nr_atendimento_w,
	vl_material_w,
	nm_usuario_w,
	vl_unitario_w,
	qt_material_w,
	dt_entrada_w,
	dt_alta_w,
	dt_altap_w,
	dt_conta_w,
	dt_conta_real_w,
	nr_doc_convenio_w,
	cd_estabelecimento_w,
	ie_clinica_w,
	cd_setor_atendimento_w,
	cd_local_estoque_w,
	ie_regra_pacote_w,
	cd_material_w
from	atendimento_paciente b,
	material_atend_paciente a
where	a.nr_atendimento = b.nr_atendimento
and	a.nr_sequencia = nr_sequencia_p;

select	coalesce(max(ie_trunc_vl_material),'N')
into STRICT	ie_trunc_vl_material_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento = cd_estabelecimento_w;

begin
select	coalesce(cd_convenio_glosa,0),
	coalesce(cd_categoria_glosa,' ')
into STRICT	cd_convenio_glosa_w,
	cd_categoria_glosa_w
from	atend_categoria_convenio
where	nr_seq_interno	=
	(SELECT coalesce(max(x.nr_seq_interno),0)
		from 	atend_categoria_convenio x
		where	x.nr_atendimento	= nr_atendimento_w
		and	x.cd_convenio	= cd_convenio_w
		and	x.cd_categoria	= cd_categoria_w);
exception
	when others then
		cd_convenio_glosa_w	:= 0;
		cd_categoria_glosa_w	:= ' ';
end;

if (cd_convenio_glosa_w = 0) then
	SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, null, clock_timestamp(), cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;
end if;

vl_unitario_ww	:= trunc(dividir(vl_glosa_p, qt_material_w),4);
vl_material_ww	:= trunc((vl_unitario_ww * qt_material_w),4);

vl_unitario_novo_w	:= round((dividir((vl_material_w - vl_material_ww),qt_material_w))::numeric,4);
vl_material_novo_w	:= round((vl_unitario_novo_w * qt_material_w)::numeric,4);

if (coalesce(ie_trunc_vl_material_w,'N') = 'S') then
	vl_material_ww		:= trunc(vl_material_ww,2);
	vl_material_novo_w	:= trunc(vl_material_novo_w,2);
end if;

SELECT * FROM obter_conta_paciente(	cd_estabelecimento_w, nr_atendimento_w, cd_convenio_glosa_w, cd_categoria_glosa_w, nm_usuario_w, dt_conta_real_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, 0, null, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;

select	coalesce(max(ie_tipo_convenio),0),
	max(ie_classif_contabil)
into STRICT	ie_tipo_convenio_aux2_w,
	ie_classif_contabil_w
from	convenio
where	cd_convenio = cd_convenio_glosa_w;

SELECT * FROM define_conta_material(
	cd_estabelecimento_w, cd_material_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_contabil_w, ie_tipo_atendimento_w, ie_tipo_convenio_aux2_w, cd_convenio_glosa_w, cd_categoria_glosa_w, cd_local_estoque_w, null, dt_entrada_w, cd_conta_receita_w, cd_centro_custo_w, null, ie_regra_pacote_w) INTO STRICT cd_conta_receita_w, cd_centro_custo_w;

duplicar_mat_paciente_glosa(nr_sequencia_p, nm_usuario_w, 'N', nr_sequencia_w);

update material_atend_paciente
set	ie_valor_informado		= 'S',
	vl_material		= vl_material_ww,
	vl_unitario		= vl_unitario_ww,
	cd_situacao_glosa		= 0,
	qt_material		= 0, -- incluido a qtde = 0
	dt_acerto_conta 		= dt_acerto_conta_w,
	nr_interno_conta 		= nr_interno_conta_w,
	cd_convenio		= cd_convenio_glosa_w,
	cd_categoria		= cd_categoria_glosa_w,
	ie_glosado		= 'S',
	dt_atendimento		= dt_atendimento - 3/86400, --Retirado o 3 Segundos que eram acrescentados na procedure "duplicar_mat_paciente2"
	cd_conta_contabil		= cd_conta_receita_w,
	cd_centro_custo_receita	= CASE WHEN cd_centro_custo_w=0 THEN null  ELSE cd_centro_custo_w END ,
	cd_sequencia_parametro = philips_contabil_pck.get_parametro_conta_contabil
where	nr_sequencia		= nr_sequencia_w;

update material_atend_paciente
set	ie_valor_informado		= 'S',
	vl_material		= vl_material_novo_w,
	vl_unitario		= vl_unitario_novo_w
where	nr_sequencia		= nr_sequencia_p;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE glosa_mat_valor ( nr_sequencia_p bigint, vl_glosa_p bigint) FROM PUBLIC;

