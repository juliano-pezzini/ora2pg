-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_req_reposicao_kit ( nr_seq_kit_estoque_p bigint, nr_sequencia_p bigint, qt_atendida_p bigint, nm_usuario_p text, cd_local_estoque_p bigint, cd_centro_custo_p bigint, nr_requisicao_p INOUT bigint, ie_liberar_p text, ds_erro_p INOUT text, ie_exclui_requisicao_p text default 'N') AS $body$
DECLARE

					 
					 
nr_requisicao_w			bigint;
cd_estabelecimento_w		smallint;
cd_local_estoque_destino_w	smallint;
cd_material_w			integer;
cd_pessoa_requisitante_w	bigint;	
cd_unidade_medida_estoque_w	varchar(30);
cd_unidade_medida_w		varchar(30);
nr_sequencia_w			bigint;
cd_operacao_estoque_w		smallint;
qt_requisicao_estoque_w		double precision;
nr_seq_lote_fornec_w		bigint;
nr_seq_erro_w			bigint;
cd_centro_custo_w		requisicao_material.cd_centro_custo%type;
cd_setor_destino_w		kit_estoque.cd_setor_destino%type;


BEGIN 
 
select	cd_estabelecimento, 
	cd_local_estoque, 
	cd_setor_destino 
into STRICT	cd_estabelecimento_w, 
	cd_local_estoque_destino_w, 
	cd_setor_destino_w 
from	kit_estoque 
where	nr_sequencia = nr_seq_kit_estoque_p;
 
select	max(cd_operacao_consumo_setor) 
into STRICT	cd_operacao_estoque_w 
from	parametro_estoque 
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
 
select	max(cd_centro_custo) 
into STRICT	cd_centro_custo_w 
from	setor_atendimento 
where	cd_setor_atendimento = cd_setor_destino_w;
 
if (coalesce(cd_operacao_estoque_w::text, '') = '') then 
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(280690);
else 
	begin 
	if (coalesce(nr_requisicao_p::text, '') = '') then 
		begin 
		cd_pessoa_requisitante_w := substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10);
		 
		select	nextval('requisicao_seq') 
		into STRICT	nr_requisicao_w 
		;
			 
		nr_requisicao_p := nr_requisicao_w;
	 
		insert into requisicao_material( 
			nr_requisicao, 
			cd_estabelecimento, 
			dt_solicitacao_requisicao, 
			dt_atualizacao, 
			nm_usuario, 
			cd_operacao_estoque, 
			cd_pessoa_requisitante, 
			cd_local_estoque, 
			cd_centro_custo, 
			cd_local_estoque_destino, 
			nm_usuario_lib, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ie_geracao, 
			ie_urgente, 
			nr_seq_solic_kit, 
			ie_origem_requisicao) 
		values (	nr_requisicao_w, 
			cd_estabelecimento_w, 
			clock_timestamp(), 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_operacao_estoque_w, 
			cd_pessoa_requisitante_w, 
			cd_local_estoque_p, 
			cd_centro_custo_w, 
			null, 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			'I', 
			'N', 
			null, 
			'RKT');	
 
		end;
	end if;
	 
	if (nr_requisicao_p IS NOT NULL AND nr_requisicao_p::text <> '') then 
		begin 
		 
		select	coalesce(max(nr_sequencia),0) + 1 
		into STRICT	nr_sequencia_w 
		from	item_requisicao_material 
		where	nr_requisicao = nr_requisicao_p;
		 
		select	a.cd_material, 
			a.nr_seq_lote_fornec 
		into STRICT	cd_material_w, 
			nr_seq_lote_fornec_w 
		from	kit_estoque_comp a 
		where	a.nr_seq_kit_estoque = nr_seq_kit_estoque_p 
		and 	a.nr_sequencia = nr_sequencia_p;
			 
		cd_unidade_medida_w 		:= obter_dados_material_estab(cd_material_w,cd_estabelecimento_w,'UMS');
		cd_unidade_medida_estoque_w	:= obter_dados_material_estab(cd_material_w,cd_estabelecimento_w,'UME');
		qt_requisicao_estoque_w		:= obter_quantidade_convertida(cd_material_w,qt_atendida_p,cd_unidade_medida_w,'UME');
	 
		insert into item_requisicao_material( 
			nr_requisicao, 
			nr_sequencia, 
			cd_estabelecimento, 
			cd_material, 
			qt_material_requisitada, 
			vl_material, 
			dt_atualizacao, 
			nm_usuario, 
			cd_unidade_medida, 
			cd_unidade_medida_estoque, 
			qt_estoque, 
			nr_seq_kit_estoque, 
			nr_seq_lote_fornec) 
		values ( nr_requisicao_p, 
			nr_sequencia_w, 
			cd_estabelecimento_w, 
			cd_material_w, 
			qt_atendida_p, 
			0, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_unidade_medida_w, 
			cd_unidade_medida_estoque_w, 
			qt_requisicao_estoque_w, 
			nr_seq_kit_estoque_p, 
			nr_seq_lote_fornec_w);
		end;
	end if;
	 
	if (ie_liberar_p = 'S') and (nr_requisicao_p IS NOT NULL AND nr_requisicao_p::text <> '') then 
		begin 
		ds_erro_p := consistir_requisicao(nr_requisicao_p, nm_usuario_p, null, cd_centro_custo_w, 'N', 'N', 'N', 'N', 'S', 'N', 'N', cd_operacao_estoque_w, ds_erro_p);
		 
		begin 
		select	nr_sequencia, 
			cd_material, 
			ds_erro_p || chr(13) || substr(ds_consistencia,1,255) 
		into STRICT	nr_seq_erro_w, 
			cd_material_w, 
			ds_erro_p 
		from	requisicao_mat_consist 
		where	nr_requisicao = nr_requisicao_p  LIMIT 1;	
		exception 
		when others then 
			nr_seq_erro_w	:= 0;
 
		end;
	 
		if (nr_seq_erro_w > 0) then 
			begin 
			if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then 
				ds_erro_p := substr(WHEB_MENSAGEM_PCK.get_texto(280691) || lpad(cd_material_w,6,'0') || ' - ' || Obter_Desc_Material(cd_material_w) || ', ' || ds_erro_p,1,255);
			end if;
			end;
		end if;				
		end;
	end if;
	 
	if (ds_erro_p IS NOT NULL AND ds_erro_p::text <> '') and (ie_exclui_requisicao_p = 'S') then 
		delete	FROM requisicao_material 
		where	nr_requisicao = nr_requisicao_p;
	end if;
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_req_reposicao_kit ( nr_seq_kit_estoque_p bigint, nr_sequencia_p bigint, qt_atendida_p bigint, nm_usuario_p text, cd_local_estoque_p bigint, cd_centro_custo_p bigint, nr_requisicao_p INOUT bigint, ie_liberar_p text, ds_erro_p INOUT text, ie_exclui_requisicao_p text default 'N') FROM PUBLIC;

