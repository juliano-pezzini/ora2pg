-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_proposta_dados_contrato ( nr_seq_proposta_p bigint, nr_seq_contrato_p bigint, ie_commit_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_contrato_plano_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_contrato_pagador_w	bigint;
cd_cgc_pagador_w		varchar(14);
cd_pagador_w			varchar(10);
cd_condicao_pagamento_w		bigint;
ie_endereco_boleto_w		varchar(4);
dt_dia_vencimento_w		smallint;
nr_seq_forma_cobranca_w		varchar(2);
cd_banco_w			integer;
cd_agencia_bancaria_w		varchar(8);
ie_digito_agencia_w		varchar(1);
cd_conta_w			varchar(20);
ie_digito_conta_w		varchar(2);
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
nr_seq_compl_pf_tel_adic_w	bigint;
nr_seq_dia_vencimento_w		bigint;
ie_tipo_pagador_w		varchar(1);
nr_seq_tipo_compl_adic_w	bigint;
nr_seq_regra_w			bigint;
nr_seq_regra_preco_w		bigint;
cd_pf_benef_cont_w		bigint;
nr_seq_plano_benef_cont_w	bigint;
nr_seq_tabela_benef_cont_w	bigint;
nr_seq_pagador_prop_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_titular_cont_w		bigint;
nr_seq_parentesco_cont_w	bigint;
nr_seq_segurado_w		bigint;
nr_seq_tabela_origem_w		bigint;
ie_tipo_proposta_w		smallint;
dt_inicio_proposta_w		timestamp;
cd_estabelecimento_w		bigint;
nr_seq_motivo_inclusao_w	bigint;
ie_pagador_contrato_princ_w	varchar(10);
cd_cgc_estipulante_w		varchar(14);
cd_pf_estipulante_w		varchar(10);
ie_tipo_beneficiario_w		varchar(3);
dt_contrato_w			timestamp;
nr_seq_regra_lanc_w		bigint;
nr_seq_vendedor_canal_w		bigint	:= null;
nr_seq_vendedor_pf_w		bigint	:= null;
ie_plano_principal_w		varchar(1);
nr_seq_contrarto_w		bigint;
ie_tipo_regra_vencimento_w	varchar(10);
qt_registros_w			bigint;
nr_seq_regra_nova_w		bigint;
cd_pagador_benef_w		varchar(30);
nr_seq_pagador_w		bigint;
cd_titular_cont_w		bigint;
nr_seq_tit_cont_prop_w		bigint;
nr_seq_classif_itens_w		bigint;
ie_tipo_processo_w		pls_proposta_adesao.ie_tipo_processo%type;
nr_seq_motivo_inclusao_ww	pls_proposta_beneficiario.nr_seq_motivo_inclusao%type;
nr_seq_contrato_principal_w	bigint;
ie_liberado_proposta_w		pls_contrato_pagador.ie_liberado_proposta%type;
nr_seq_vendedor_canal_prop_w	pls_proposta_adesao.nr_seq_vendedor_canal%type;
nr_seq_vendedor_pf_prop_w	pls_proposta_adesao.nr_seq_vendedor_pf%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_plano,
		nr_seq_tabela
	from	pls_contrato_plano
	where	nr_seq_contrato	= nr_seq_contrato_p
	and	((dt_inativacao >= dt_inicio_proposta_w) or (coalesce(dt_inativacao::text, '') = ''))
	and (coalesce(ie_tipo_processo_w,'M') = 'M' or coalesce(ie_inclusao_portal,'S') = 'S'); -- OS 893960
C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_cgc,
		a.cd_pessoa_fisica,
		b.cd_condicao_pagamento,
		a.ie_endereco_boleto,
		b.dt_dia_vencimento,
		b.nr_seq_forma_cobranca,
		b.cd_banco,
		b.cd_agencia_bancaria,
		b.ie_digito_agencia,
		b.cd_conta,
		b.ie_digito_conta,
		b.dt_inicio_vigencia,
		b.dt_fim_vigencia,
		a.nr_seq_compl_pf_tel_adic,
		b.nr_seq_dia_vencimento,
		a.ie_tipo_pagador,
		a.nr_seq_tipo_compl_adic,
		a.nr_seq_classif_itens,
		coalesce(a.ie_liberado_proposta, 'S')
	from	pls_contrato_pagador		a,
		pls_contrato_pagador_fin	b
	where	a.nr_sequencia		= b.nr_seq_pagador
	and	((a.nr_seq_contrato	= nr_seq_contrato_p)
			or (a.nr_seq_contrato	= nr_seq_contrato_w and ie_pagador_contrato_princ_w = 'S'))
	and	((dt_inicio_proposta_w between trunc(coalesce(b.dt_inicio_vigencia,dt_inicio_proposta_w),'dd') and fim_dia(coalesce(b.dt_fim_vigencia,dt_inicio_proposta_w))) or (dt_contrato_w > dt_inicio_proposta_w))
	and	((coalesce(a.dt_rescisao::text, '') = '') or (a.dt_rescisao > dt_inicio_proposta_w))
	order by  a.ie_tipo_pagador;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_desconto
	where	nr_seq_contrato	= nr_seq_contrato_p;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_preco_regra
	where	nr_seq_regra	= nr_seq_regra_w;

C06 CURSOR FOR
	SELECT	c.cd_pessoa_fisica,
		c.nr_seq_pagador,
		c.nr_seq_contrato,
		c.nr_seq_titular,
		c.nr_seq_parentesco,
		c.nr_sequencia,
		c.nr_seq_tabela,
		c.nr_seq_motivo_inclusao,
		a.nr_contrato_principal
	from	pls_plano		d,
		pls_segurado		c,
		pls_contrato_plano	b,
		pls_contrato		a
	where	c.nr_seq_contrato	= a.nr_sequencia
	and	b.nr_seq_contrato	= a.nr_sequencia
	and	c.nr_seq_plano		= d.nr_sequencia
	and	a.nr_sequencia		= nr_seq_contrato_p
	and	d.ie_regulamentacao	= 'R'
	and	coalesce(c.dt_rescisao::text, '') = ''
	and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
	order by CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN -1  ELSE 1 END;


BEGIN

--Obter dados da proposta
select	ie_tipo_proposta,
	dt_inicio_proposta,
	cd_estabelecimento,
	ie_tipo_processo,
	nr_seq_vendedor_canal,
	nr_seq_vendedor_pf
into STRICT	ie_tipo_proposta_w,
	dt_inicio_proposta_w,
	cd_estabelecimento_w,
	ie_tipo_processo_w,
	nr_seq_vendedor_canal_prop_w,
	nr_seq_vendedor_pf_prop_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

select	max(nr_seq_motivo_inclusao),
	max(ie_pagador_contrato_princ)
into STRICT	nr_seq_motivo_inclusao_w,
	ie_pagador_contrato_princ_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;

--Limpar os campos preenchidos
update	pls_proposta_beneficiario
set	nr_seq_plano	 = NULL
where	nr_seq_plano in (	SELECT  nr_sequencia
				from    pls_proposta_plano
				where   nr_seq_proposta = nr_seq_proposta_p
				and     (nr_seq_contrato_plano IS NOT NULL AND nr_seq_contrato_plano::text <> ''));

update	pls_proposta_beneficiario
set	nr_seq_pagador	 = NULL
where	nr_seq_pagador	in (	SELECT	nr_sequencia
				from	pls_proposta_pagador
				where	nr_seq_proposta = nr_seq_proposta_p
				and	(nr_seq_contrato_pagador IS NOT NULL AND nr_seq_contrato_pagador::text <> ''));

delete	FROM pls_proposta_plano
where	nr_seq_proposta	= nr_seq_proposta_p
and	(nr_seq_contrato_plano IS NOT NULL AND nr_seq_contrato_plano::text <> '');

delete	FROM pls_proposta_pagador
where	nr_seq_proposta = nr_seq_proposta_p
and	(nr_seq_contrato_pagador IS NOT NULL AND nr_seq_contrato_pagador::text <> '');

delete	FROM pls_preco_regra
where	nr_seq_regra	in (	SELECT	nr_sequencia
				from	pls_regra_desconto
				where	nr_seq_proposta = nr_seq_proposta_p);

delete	from pls_regra_desconto
where	nr_seq_proposta = nr_seq_proposta_p;

--Obter dados do contrato
select	cd_cgc_estipulante,
	cd_pf_estipulante,
	ie_tipo_beneficiario,
	dt_contrato,
	coalesce(nr_contrato_principal,nr_seq_contrato_p)
into STRICT	cd_cgc_estipulante_w,
	cd_pf_estipulante_w,
	ie_tipo_beneficiario_w,
	dt_contrato_w,
	nr_seq_contrato_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_p;

--Preenchimento de Canal de Venda
if	((ie_tipo_processo_w <> 'W') or
	((ie_tipo_processo_w = 'W') and ((coalesce(nr_seq_vendedor_pf_prop_w::text, '') = '') and (coalesce(nr_seq_vendedor_canal_prop_w::text, '') = '')))) then
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_regra_lanc_w
	from	pls_contrato_regra_lanc a,
		pls_vendedor_vinculado b
	where	b.nr_sequencia		= a.nr_seq_vendedor_pf
	and	a.nr_seq_contrato	= nr_seq_contrato_p
	and	coalesce(a.ie_aplicacao_regra,'A') in ('A','T')
	and	dt_inicio_proposta_w between coalesce(a.dt_inicio_vigencia,dt_inicio_proposta_w) and coalesce(a.dt_fim_vigencia,dt_inicio_proposta_w)
	and	b.cd_pessoa_fisica = (	SELECT	max(x.cd_pessoa_fisica)
					from 	usuario x
					where 	x.nm_usuario = nm_usuario_p);
	
	if (coalesce(nr_seq_regra_lanc_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_regra_lanc_w
		from	pls_contrato_regra_lanc
		where	nr_seq_contrato		= nr_seq_contrato_p
		and	coalesce(ie_aplicacao_regra,'A') in ('A','T')
		and	dt_inicio_proposta_w between coalesce(dt_inicio_vigencia,dt_inicio_proposta_w) and coalesce(dt_fim_vigencia,dt_inicio_proposta_w);
	end if;

	if (nr_seq_regra_lanc_w IS NOT NULL AND nr_seq_regra_lanc_w::text <> '') then
		select	max(nr_seq_vendedor_canal),
			max(nr_seq_vendedor_pf)
		into STRICT	nr_seq_vendedor_canal_w,
			nr_seq_vendedor_pf_w
		from	pls_contrato_regra_lanc
		where	nr_sequencia	= nr_seq_regra_lanc_w;
		
		if (nr_seq_vendedor_canal_w IS NOT NULL AND nr_seq_vendedor_canal_w::text <> '') then
			update	pls_proposta_adesao
			set	nr_seq_vendedor_canal	= nr_seq_vendedor_canal_w,
				nr_seq_vendedor_pf	= nr_seq_vendedor_pf_w
			where	nr_sequencia		= nr_seq_proposta_p;
		end if;
	end if;
end if;

--Insercao de estipulante
update	pls_proposta_adesao
set	cd_cgc_estipulante	= cd_cgc_estipulante_w,
	cd_estipulante		= cd_pf_estipulante_w,
	ie_tipo_beneficiario	= ie_tipo_beneficiario_w
where	nr_sequencia		= nr_seq_proposta_p;

--Insercao do plano da proposta
select	CASE WHEN count(nr_sequencia)=1 THEN 'S'  ELSE 'N' END
into STRICT	ie_plano_principal_w
from	pls_contrato_plano
where	nr_seq_contrato = nr_seq_contrato_p
and	((dt_inativacao >= dt_inicio_proposta_w) or (coalesce(dt_inativacao::text, '') = ''));

if (ie_tipo_proposta_w not in (6,9)) then
	open c01;
	loop
	fetch c01 into
		nr_seq_contrato_plano_w,
		nr_seq_plano_w,
		nr_seq_tabela_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert into pls_proposta_plano(	nr_sequencia,			nr_seq_proposta,	nr_seq_plano,
				ie_principal,			dt_atualizacao,		nm_usuario,
				dt_atualizacao_nrec,		nm_usuario_nrec,	nr_seq_tabela,
				nr_seq_contrato_plano		)
		values ( 	nextval('pls_proposta_plano_seq'), nr_seq_proposta_p,	nr_seq_plano_w,
				ie_plano_principal_w,		clock_timestamp(),		nm_usuario_p,
				clock_timestamp(),			nm_usuario_p,		nr_seq_tabela_w,
				nr_seq_contrato_plano_w	);
		end;
	end loop;
	close c01;
end if;

if (coalesce(cd_cgc_estipulante_w::text, '') = '') then
	ie_tipo_regra_vencimento_w := 'I';
else
	ie_tipo_regra_vencimento_w := 'C';
end if;

open c02;
loop
fetch c02 into
	nr_seq_contrato_pagador_w,
	cd_cgc_pagador_w,
	cd_pagador_w,
	cd_condicao_pagamento_w,
	ie_endereco_boleto_w,
	dt_dia_vencimento_w,
	nr_seq_forma_cobranca_w,
	cd_banco_w,
	cd_agencia_bancaria_w,
	ie_digito_agencia_w,
	cd_conta_w,
	ie_digito_conta_w,
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	nr_seq_compl_pf_tel_adic_w,
	nr_seq_dia_vencimento_w,
	ie_tipo_pagador_w,
	nr_seq_tipo_compl_adic_w,
	nr_seq_classif_itens_w,
	ie_liberado_proposta_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	if (ie_liberado_proposta_w = 'S') then
		select	count(*)
		into STRICT	qt_registros_w
		from	pls_proposta_pagador
		where	nr_seq_proposta	= nr_seq_proposta_p
		and	((cd_cgc_pagador	= cd_cgc_pagador_w)
		or (cd_pagador		= cd_pagador_w))  LIMIT 1;
		
		if (qt_registros_w = 0) then
			if (coalesce(nr_seq_dia_vencimento_w::text, '') = '') and (dt_dia_vencimento_w IS NOT NULL AND dt_dia_vencimento_w::text <> '') then
				select	max(b.nr_sequencia)
				into STRICT	nr_seq_dia_vencimento_w
				from	pls_regra_dia_vencimento	b,
					pls_regra_portador_mens		a
				where	b.nr_seq_regra_portador		= a.nr_sequencia
				and	coalesce(a.dt_fim_vigencia,clock_timestamp()) <= clock_timestamp()
				and	b.dt_dia_vencimento		= dt_dia_vencimento_w
				and	((a.ie_tipo_contratacao = ie_tipo_regra_vencimento_w) or (a.ie_tipo_contratacao = 'T'))
				and 	((a.nr_seq_classif_itens = nr_seq_classif_itens_w) or (coalesce(a.nr_seq_classif_itens::text, '') = ''));
			end if;
			
			insert into pls_proposta_pagador(	nr_sequencia,			  nr_seq_proposta,	dt_atualizacao,
					nm_usuario,			  dt_atualizacao_nrec,	nm_usuario_nrec,
					cd_cgc_pagador,			  cd_pagador,		cd_condicao_pagamento,
					ie_endereco_boleto,		  dt_dia_vencimento,	nr_seq_forma_cobranca,
					cd_banco,			  cd_agencia_bancaria,	ie_digito_agencia,
					cd_conta,			  ie_digito_conta,	nr_seq_contrato_pagador,
					dt_inicio_vigencia,		  dt_fim_vigencia,	nr_seq_compl_pf_tel_adic,
					nr_seq_dia_vencimento,		  ie_tipo_pagador,	nr_seq_tipo_compl_adic)
			values ( 	nextval('pls_proposta_pagador_seq'), nr_seq_proposta_p,	clock_timestamp(),
					nm_usuario_p,			  clock_timestamp(),		nm_usuario_p,
					cd_cgc_pagador_w,		  cd_pagador_w,		cd_condicao_pagamento_w,
					ie_endereco_boleto_w,		  dt_dia_vencimento_w,	nr_seq_forma_cobranca_w,
					cd_banco_w,		 	  cd_agencia_bancaria_w,ie_digito_agencia_w,
					cd_conta_w,			  ie_digito_conta_w,	nr_seq_contrato_pagador_w,
					dt_inicio_vigencia_w,		  dt_fim_vigencia_w,	nr_seq_compl_pf_tel_adic_w,
					nr_seq_dia_vencimento_w,	  ie_tipo_pagador_w,	nr_seq_tipo_compl_adic_w);
		end if;
	end if;
        end;
end loop;
close c02;

open c03;
loop
fetch c03 into
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	select	nextval('pls_regra_desconto_seq')
	into STRICT	nr_seq_regra_nova_w
	;
	
	insert into pls_regra_desconto(	nr_sequencia,	     dt_atualizacao,     nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec,    ds_regra,
			nr_seq_plano,	     nr_seq_contrato,    ie_situacao,
			dt_inicio_vigencia,  dt_fim_vigencia,    ie_tipo_regra,
			nr_seq_proposta,     ie_simulacao_preco, cd_estabelecimento)
	(	SELECT 	nr_seq_regra_nova_w, clock_timestamp(),		 nm_usuario_p,
			clock_timestamp(),	     nm_usuario_p,	 ds_regra,
			nr_seq_plano,	     null,		 ie_situacao,
			dt_inicio_vigencia,  dt_fim_vigencia,	 ie_tipo_regra,
			nr_seq_proposta_p,   ie_simulacao_preco, cd_estabelecimento_w
		from	pls_regra_desconto
		where	nr_sequencia	= nr_seq_regra_w);
	
	open c04;
	loop
	fetch c04 into
		nr_seq_regra_preco_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin
		insert into pls_preco_regra(	nr_sequencia,		     dt_atualizacao,	  nm_usuario,
				dt_atualizacao_nrec,	     nm_usuario_nrec,	  qt_min_vidas,
				qt_max_vidas,		     nr_seq_regra,	  tx_desconto,
				ie_tipo_segurado,	     vl_desconto)
		(	SELECT 	nextval('pls_preco_regra_seq'), clock_timestamp(),		  nm_usuario_p,
				clock_timestamp(),		     nm_usuario_p,	  qt_min_vidas,
				qt_max_vidas,		     nr_seq_regra_nova_w, tx_desconto,
				coalesce(ie_tipo_segurado,'T'),   vl_desconto
			from	pls_preco_regra
			where	nr_sequencia	= nr_seq_regra_preco_w);
		end;
	end loop;
	close c04;
	end;
end loop;
close c03;

if (ie_tipo_proposta_w = 9) then
	nr_seq_plano_w		:= null;
	nr_seq_tabela_w		:= null;
	select	count(*)
	into STRICT	qt_registros_w
	from	pls_proposta_plano
	where	nr_seq_proposta	= nr_seq_proposta_p;
	
	if (qt_registros_w = 1) then
		select	nr_seq_plano,
			nr_seq_tabela
		into STRICT	nr_seq_plano_w,
			nr_seq_tabela_w
		from	pls_proposta_plano
		where	nr_seq_proposta	= nr_seq_proposta_p;
	end if;
	
	delete	FROM pls_proposta_beneficiario
	where	nr_seq_proposta	= nr_seq_proposta_p;
	
	open C06;
	loop
	fetch C06 into
		cd_pf_benef_cont_w,
		nr_seq_pagador_prop_w,
		nr_seq_contrato_w,
		nr_seq_titular_cont_w,
		nr_seq_parentesco_cont_w,
		nr_seq_segurado_w,
		nr_seq_tabela_origem_w,
		nr_seq_motivo_inclusao_ww,
		nr_seq_contrato_principal_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		select	count(*)
		into STRICT	qt_registros_w
		from	pls_proposta_beneficiario
		where	nr_seq_proposta	= nr_seq_proposta_p
		and	cd_beneficiario	= cd_pf_benef_cont_w  LIMIT 1;
		
		if (qt_registros_w	= 0) then
			select	coalesce(cd_pessoa_fisica,cd_cgc)
			into STRICT	cd_pagador_benef_w
			from	pls_contrato_pagador
			where	nr_sequencia	= nr_seq_pagador_prop_w
			and	((nr_seq_contrato = nr_seq_contrato_w)
			or (nr_seq_contrato = nr_seq_contrato_principal_w));
			
			select	nr_sequencia
			into STRICT	nr_seq_pagador_w
			from	pls_proposta_pagador
			where	((cd_pagador	= cd_pagador_benef_w) or (cd_cgc_pagador = cd_pagador_benef_w))
			and	nr_seq_proposta	= nr_seq_proposta_p;
			
			if (nr_seq_titular_cont_w IS NOT NULL AND nr_seq_titular_cont_w::text <> '') then
				select	cd_pessoa_fisica
				into STRICT	cd_titular_cont_w
				from	pls_segurado
				where	nr_sequencia	= nr_seq_titular_cont_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_tit_cont_prop_w
				from	pls_proposta_beneficiario
				where	cd_beneficiario	= cd_titular_cont_w
				and	nr_seq_proposta	= nr_seq_proposta_p;
				exception
				when others then
					nr_seq_tit_cont_prop_w	:= null;
					nr_seq_parentesco_cont_w := null;
				end;
			end if;
			
			--Busca da tabela que o beneficiario possui no contrato origem
			select	max(nr_sequencia)
			into STRICT	nr_seq_tabela_w
			from	pls_tabela_preco
			where	nr_seq_plano	  = nr_seq_plano_w
			and	nr_seq_tabela_ant = nr_seq_tabela_origem_w;
			
			insert	into	pls_proposta_beneficiario(	nr_sequencia,				dt_atualizacao,		 nm_usuario,
					dt_atualizacao_nrec,			nm_usuario_nrec,	cd_beneficiario,
					nr_seq_plano,				nr_seq_tabela,		nr_seq_pagador,
					nr_seq_proposta,			nr_seq_titular,		nr_seq_parentesco,
					nr_seq_beneficiario,			ie_nascido_plano,	ie_taxa_inscricao,
					nr_seq_motivo_inclusao,			ie_copiar_sca_plano	)
			values (	nextval('pls_proposta_beneficiario_seq'),	clock_timestamp(),		nm_usuario_p,
					clock_timestamp(),				nm_usuario_p,		cd_pf_benef_cont_w,
					nr_seq_plano_w,				nr_seq_tabela_w,	nr_seq_pagador_w,
					nr_seq_proposta_p,			nr_seq_tit_cont_prop_w, nr_seq_parentesco_cont_w,
					nr_seq_segurado_w,			'N',			'S',
					coalesce(nr_seq_motivo_inclusao_w, nr_seq_motivo_inclusao_ww),	'S');
		end if;
		end;
	end loop;
	close C06;
end if;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_proposta_dados_contrato ( nr_seq_proposta_p bigint, nr_seq_contrato_p bigint, ie_commit_p text, nm_usuario_p text) FROM PUBLIC;

