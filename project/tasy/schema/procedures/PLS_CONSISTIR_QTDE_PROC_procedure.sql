-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_qtde_proc ( nr_sequencia_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_item_proc_p bigint, ie_evento_p text, ie_tipo_guia_p text, ie_tipo_atendimento_p text, ds_parametro_tres_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* IE_EVENTO_P - domínio 1977
	CC             	|Consistir Conta
	CG             	|Consistir Guia
	IA             	|Importação do arquivo conta
*/
ie_origem_proced_w		bigint;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_regra_w			bigint	:= 0;
ie_tipo_quantidade_w		varchar(3)	:= 'X';
qt_permitida_w			double precision;
dt_solicitacao_w		timestamp;
qt_procedimento_w		double precision	:= 0;
cd_estabelecimento_w		smallint;
qt_solicitada_w			double precision	:= 0;
qt_tipo_quantidade_w		bigint;
nr_seq_grupo_w			bigint	:= null;
ie_carater_internacao_w		varchar(10);
ie_grupo_servico_w		varchar(1);
ie_regra_w			varchar(1)	:= 'N';

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_quantidade,
		a.qt_permitida,
		a.qt_tipo_quantidade,
		a.nr_seq_grupo_servico
	from	pls_regra_qtde_proc	a
	where	a.ie_situacao		= 'A'
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = coalesce(nr_seq_prestador_w,0)))
	and	dt_solicitacao_w >= a.dt_inicio_vigencia
	and (dt_solicitacao_w <= a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '')
	and	((a.ie_evento = ie_evento_p) or (coalesce(a.ie_evento::text, '') = ''))
	and	coalesce(a.cd_procedimento, coalesce(cd_procedimento_p,0))		= coalesce(cd_procedimento_p,0)
	and	coalesce(a.ie_origem_proced, coalesce(ie_origem_proced_w,0))		= coalesce(ie_origem_proced_w,0)
	and	coalesce(a.cd_grupo_proc, coalesce(cd_grupo_proc_w,0))			= coalesce(cd_grupo_proc_w,0)
	and	coalesce(a.cd_especialidade, coalesce(cd_especialidade_w,0))		= coalesce(cd_especialidade_w,0)
	and	coalesce(a.cd_area_procedimento, coalesce(cd_area_procedimento_w,0)) 	= coalesce(cd_area_procedimento_w,0)
	and	coalesce(a.ie_tipo_guia, ie_tipo_guia_p) = ie_tipo_guia_p
	and	((coalesce(a.ie_tipo_atendimento, ie_tipo_atendimento_p) = ie_tipo_atendimento_p) or (a.ie_tipo_atendimento = 'M'))
	and	((coalesce(a.ie_carater_internacao::text, '') = '') or (a.ie_carater_internacao = coalesce(ie_carater_internacao_w,'X')))
	order by a.nr_seq_grupo_servico,
		a.cd_area_procedimento,
		a.cd_especialidade,
		a.cd_grupo_proc,
		a.cd_procedimento,
		coalesce(nr_seq_prestador_w, 0);


BEGIN

SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;

if (ie_evento_p = 'CG') then
	/* Obter dados da guia */

	begin
	select	nr_seq_prestador,
		nr_seq_segurado,
		trunc(dt_solicitacao,'dd')
	into STRICT	nr_seq_prestador_w,
		nr_seq_segurado_w,
		dt_solicitacao_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_sequencia_p;
	exception
	when others then
		nr_seq_prestador_w	:= null;
	end;

	select	coalesce(sum(qt_solicitada),0)
	into STRICT	qt_solicitada_w
	from	pls_guia_plano_proc
	where	nr_sequencia	= nr_seq_item_proc_p;
elsif (ie_evento_p in ('CC','IA')) then
	/* Obter dados da conta */

	begin
	select	nr_seq_prestador_exec,
		nr_seq_segurado,
		trunc(dt_atendimento_referencia,'dd'),
		ie_carater_internacao
	into STRICT	nr_seq_prestador_w,
		nr_seq_segurado_w,
		dt_solicitacao_w,
		ie_carater_internacao_w
	from	pls_conta
	where	nr_sequencia	= nr_sequencia_p;
	exception
	when others then
		nr_seq_prestador_w	:= null;
	end;

	select	coalesce(sum(qt_procedimento_imp),0)
	into STRICT	qt_solicitada_w
	from	pls_conta_proc
	where	nr_sequencia	= nr_seq_item_proc_p;

	/*begin
	select	nr_seq_grupo_serv
	into	nr_seq_grupo_w
	from	pls_conta_proc a
	where	a.nr_sequencia	= nr_seq_item_proc_p;
	exception
		when others then
		nr_seq_grupo_w	:= null;
	end;*/
end if;

/*if	(nr_seq_grupo_w is null) then
	nr_seq_grupo_w	:= pls_obter_grupo_servico(cd_procedimento_p, ie_origem_proced_p);
end if;*/
open C01;
loop
fetch C01 into
	nr_seq_regra_w,
	ie_tipo_quantidade_w,
	qt_permitida_w,
	qt_tipo_quantidade_w,
	nr_seq_grupo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	if (nr_seq_grupo_w IS NOT NULL AND nr_seq_grupo_w::text <> '') then
		ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_w,cd_procedimento_p,ie_origem_proced_w);
		if (ie_grupo_servico_w = 'N') then
			nr_seq_regra_w	:= null;
		end if;
	end if;
end loop;
close C01;

if (nr_seq_regra_w	> 0) then
	if (ie_evento_p = 'CG') then
		if (ie_tipo_quantidade_w	= 'D') then
			select 	coalesce(sum(a.qt_autorizada),0)
			into STRICT	qt_procedimento_w
			from	pls_guia_plano		b,
				pls_guia_plano_proc	a
			where	a.nr_seq_guia		= b.nr_sequencia
			and	b.nr_seq_segurado	= nr_seq_segurado_w
			and	a.cd_procedimento	= cd_procedimento_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	b.ie_estagio		<> 8
			and	trunc(coalesce(a.dt_liberacao,a.dt_atualizacao)) between(trunc(dt_solicitacao_w) - qt_tipo_quantidade_w) and trunc(dt_solicitacao_w);

			qt_procedimento_w	:= qt_procedimento_w + qt_solicitada_w;

		elsif (ie_tipo_quantidade_w	= 'M') then
			select 	coalesce(sum(a.qt_autorizada),0)
			into STRICT	qt_procedimento_w
			from	pls_guia_plano		b,
				pls_guia_plano_proc	a
			where	a.nr_seq_guia		= b.nr_sequencia
			and	b.nr_seq_segurado	= nr_seq_segurado_w
			and	a.cd_procedimento	= cd_procedimento_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	b.ie_estagio		<> 8
			and	coalesce(a.dt_liberacao,a.dt_atualizacao) between
				(dt_solicitacao_w - (qt_tipo_quantidade_w * 30)) and (dt_solicitacao_w);

			qt_procedimento_w	:= qt_procedimento_w + qt_solicitada_w;

		elsif (ie_tipo_quantidade_w	= 'A') then
			select 	coalesce(sum(a.qt_autorizada),0)
			into STRICT	qt_procedimento_w
			from	pls_guia_plano		b,
				pls_guia_plano_proc	a
			where	a.nr_seq_guia		= b.nr_sequencia
			and	b.nr_seq_segurado	= nr_seq_segurado_w
			and	a.cd_procedimento	= cd_procedimento_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	b.ie_estagio		<> 8
			and	coalesce(a.dt_liberacao,a.dt_atualizacao) between
				(dt_solicitacao_w - (qt_tipo_quantidade_w * 365)) and (dt_solicitacao_w);

			qt_procedimento_w	:= qt_procedimento_w + qt_solicitada_w;

		elsif (ie_tipo_quantidade_w	= 'G') then
			select 	coalesce(sum(a.qt_solicitada),0)
			into STRICT	qt_procedimento_w
			from	pls_guia_plano		b,
				pls_guia_plano_proc	a
			where	a.nr_seq_guia		= b.nr_sequencia
			and	b.nr_seq_segurado	= nr_seq_segurado_w
			and	a.cd_procedimento	= cd_procedimento_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	b.ie_estagio		<> 8
			and	b.nr_sequencia		= nr_sequencia_p;
		end if;

		if (qt_procedimento_w > qt_permitida_w) then
			CALL pls_gravar_motivo_glosa('1423', null, nr_seq_item_proc_p,
						null, 'Permitido: ' || qt_permitida_w || ' / Autorizado: ' || qt_procedimento_w ||
						' (Regra: ' || nr_seq_regra_w || ')', nm_usuario_p,
						'', ie_evento_p, nr_seq_prestador_w, null,null);
		end if;
	elsif (ie_evento_p in ('CC','IA')) then
		if (ie_tipo_quantidade_w	= 'D') then
			select 	coalesce(sum(a.qt_procedimento),0)
			into STRICT	qt_procedimento_w
			from	pls_conta		b,
				pls_conta_proc		a
			where	a.nr_seq_conta		= b.nr_sequencia
			and	b.nr_seq_segurado	= nr_seq_segurado_w
			and	a.cd_procedimento	= cd_procedimento_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	a.nr_sequencia		<> nr_seq_item_proc_p -- tratamento para não contabilizar o item 2 vezes drquadros 653738
			and	trunc(coalesce(a.dt_procedimento,coalesce(b.dt_atendimento_referencia,a.dt_atualizacao))) between(trunc(dt_solicitacao_w) - qt_tipo_quantidade_w) and trunc(dt_solicitacao_w);

			qt_procedimento_w	:= qt_procedimento_w + qt_solicitada_w;
		elsif (ie_tipo_quantidade_w	= 'M') then
			select 	coalesce(sum(a.qt_procedimento),0)
			into STRICT	qt_procedimento_w
			from	pls_conta		b,
				pls_conta_proc		a
			where	a.nr_seq_conta		= b.nr_sequencia
			and	b.nr_seq_segurado	= nr_seq_segurado_w
			and	a.cd_procedimento	= cd_procedimento_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	a.nr_sequencia		<> nr_seq_item_proc_p
			and	trunc(coalesce(a.dt_procedimento,coalesce(b.dt_atendimento_referencia,a.dt_atualizacao)), 'month') between(trunc(add_months(dt_solicitacao_w, - qt_tipo_quantidade_w ), 'month')) and trunc(dt_solicitacao_w, 'month');

			qt_procedimento_w	:= qt_procedimento_w + qt_solicitada_w;

		elsif (ie_tipo_quantidade_w	= 'A') then
			select 	coalesce(sum(a.qt_procedimento),0)
			into STRICT	qt_procedimento_w
			from	pls_conta		b,
				pls_conta_proc		a
			where	a.nr_seq_conta		= b.nr_sequencia
			and	b.nr_seq_segurado	= nr_seq_segurado_w
			and	a.cd_procedimento	= cd_procedimento_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	a.nr_sequencia		<> nr_seq_item_proc_p
			and	trunc(coalesce(a.dt_procedimento,coalesce(b.dt_atendimento_referencia,a.dt_atualizacao)), 'yyyy') between
				(trunc(add_months(dt_solicitacao_w, - ( 12 * qt_tipo_quantidade_w )), 'yyyy')) and trunc(dt_solicitacao_w, 'yyyy');

			qt_procedimento_w	:= qt_procedimento_w + qt_solicitada_w;
		elsif (ie_tipo_quantidade_w	= 'G') then
			select 	coalesce(sum(a.qt_procedimento_imp),0)
			into STRICT	qt_procedimento_w
			from	pls_conta		b,
				pls_conta_proc		a
			where	a.nr_seq_conta		= b.nr_sequencia
			and	b.nr_seq_segurado	= nr_seq_segurado_w
			and	a.cd_procedimento	= cd_procedimento_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	b.nr_sequencia		= nr_sequencia_p
			and	a.nr_sequencia		<> nr_seq_item_proc_p;
		end if;

		if (qt_procedimento_w > qt_permitida_w) then
			CALL pls_gravar_conta_glosa('1423', '', nr_seq_item_proc_p,null,'N',
						'Permitido: ' || qt_permitida_w || ' / Executada: ' || qt_procedimento_w ||
						' (Regra: ' || nr_seq_regra_w || ')', nm_usuario_p,
						'A', ie_evento_p, nr_seq_prestador_w,
						cd_estabelecimento_p, '', null);
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_qtde_proc ( nr_sequencia_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_item_proc_p bigint, ie_evento_p text, ie_tipo_guia_p text, ie_tipo_atendimento_p text, ds_parametro_tres_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

