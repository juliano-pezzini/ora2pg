-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_mov_cartao ( nr_adiantamento_p bigint, vl_adiantamento_p bigint, nr_seq_cheque_p bigint, ie_tipo_vinculo_p bigint, cd_tipo_recebimento_p bigint, vl_soma_cheques_p INOUT bigint, ie_tipo_consistencia_p INOUT bigint, qt_cheque_p INOUT bigint, nr_adiant_cheque_p INOUT bigint, qt_adiant_cheque_cr_p INOUT bigint) AS $body$
DECLARE

				 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Verificar se o valor da movimentação em cartão e cheque vinculados superam o valor do adiantamento 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
Função	: Digitalização de Adiantamentos 
Form 	: CorCre_F2 
Evento 	: wHandleBar1OnClickAuxiliar (Click do botão cheques) 
[ ] Objetos do dicionário [X] Tasy (Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
vl_cheque_cartao_w 	bigint;
vl_cheque_cartao_aux_w 	bigint;
vl_soma_cheques_w	double precision;
ie_tipo_consistencia_w 	bigint;
qt_cheque_w		bigint;
nr_adiant_cheque_w	bigint;
qt_adiant_cheque_cr_w	bigint;


BEGIN 
 
	select 	ie_tipo_consistencia 
	into STRICT	ie_tipo_consistencia_w 
	from 	tipo_recebimento 
	where 	cd_tipo_recebimento = cd_tipo_recebimento_p;
 
	select 	coalesce(sum(a.vl_cheque),0) 
	into STRICT 	vl_cheque_cartao_w 
	from  	cheque_cr a       
	where 	a.nr_adiantamento = nr_adiantamento_p;
			    
	select 	coalesce(sum(a.vl_transacao),0) 
	into STRICT	vl_cheque_cartao_aux_w 
    from  movto_cartao_cr a      
    where nr_adiantamento = nr_adiantamento_p;
	 
	vl_cheque_cartao_w := vl_cheque_cartao_w + vl_cheque_cartao_aux_w;
 
	if (vl_cheque_cartao_w > vl_adiantamento_p) then 
		 
		if (ie_tipo_vinculo_p = 1) then 
			delete 
			from 	adiantamento_cheque_cr 
			where 	nr_seq_cheque	 = nr_seq_cheque_p 
			and 	nr_adiantamento = nr_adiantamento_p;
		else 
			Update 	cheque_cr 
			set 	nr_adiantamento  = NULL 
			where 	nr_seq_cheque 	 = nr_seq_cheque_p;
		end if;
	 
		-- 253151 - O valor da movimentação em cartão e cheque(s) vinculado(s) superam o valor do adiantamento. 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(253151);
	 
	end if;
	 
	commit;
	 
	select 	coalesce(sum(vl_cheque),0) 
	into STRICT 	vl_soma_cheques_w 
	from 	cheque_cr_v 
	where 	nr_adiantamento = nr_adiantamento_p 
	and 	coalesce(dt_deposito::text, '') = '' 
	and 	coalesce(dt_devolucao::text, '') = '';
	 
	select 	count(*) 
	into STRICT	qt_cheque_w 
	from 	cheque_cr 
    where 	nr_adiantamento = nr_adiantamento_p;
	 
	select 	nr_adiantamento 
	into STRICT	nr_adiant_cheque_w 
	from 	cheque_cr 
	where 	nr_seq_cheque 	= nr_seq_cheque_p;
	 
	select 	count(*) 
	into STRICT	qt_adiant_cheque_cr_w 
	from 	adiantamento_cheque_cr 
	where 	nr_adiantamento = nr_adiantamento_p 
	and 	nr_seq_cheque 	= nr_seq_cheque_p;
 
qt_adiant_cheque_cr_p	:= qt_adiant_cheque_cr_w;
nr_adiant_cheque_p	:= nr_adiant_cheque_w;
qt_cheque_p		:= qt_cheque_w;
vl_soma_cheques_p 	:= vl_soma_cheques_w;
ie_tipo_consistencia_p 	:= ie_tipo_consistencia_w;
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_mov_cartao ( nr_adiantamento_p bigint, vl_adiantamento_p bigint, nr_seq_cheque_p bigint, ie_tipo_vinculo_p bigint, cd_tipo_recebimento_p bigint, vl_soma_cheques_p INOUT bigint, ie_tipo_consistencia_p INOUT bigint, qt_cheque_p INOUT bigint, nr_adiant_cheque_p INOUT bigint, qt_adiant_cheque_cr_p INOUT bigint) FROM PUBLIC;

