-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_glosa_existentes ( nr_seq_w_resumo_conta_p bigint, nr_seq_analise_conta_item_p bigint, nr_seq_mot_liberacao_p bigint, ds_parecer_p text, nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, qt_liberado_p bigint, vl_liberado_p bigint, vl_lib_co_p bigint, vl_lib_mat_p bigint, vl_lib_hi_p bigint, ie_comitar_p text, ie_lib_demais_glosas_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_motivo_liberacao_w		varchar(255);
ds_observacao_w			varchar(255);
ds_glosa_w			varchar(255);
ds_ocorrencia_w			varchar(255);
ds_tipo_motivo_w		varchar(50);
cd_glosa_w			varchar(10);
cd_ocorrencia_w			varchar(10);
ie_tipo_glosa_oc_w		varchar(1);
ie_tipo_historico_w		varchar(1);
ie_tipo_item_w			varchar(1);
ie_status_w			varchar(1)	:= 'N';
ie_situacao_w			varchar(1);
ie_tipo_motivo_w		varchar(1);
ie_analise_multipla_w		varchar(1)	:= 'N';
ie_calculo_base_glosa_w		varchar(1)	:= 'N';
ie_abriu_cursor_w		varchar(1)	:= 'N';
ie_pagamento_w			varchar(1);
vl_total_apres_w		double precision;
vl_glosa_w			double precision	:= 0;
vl_base_glosa_w			double precision;
vl_base_w			double precision;
vl_liberado_co_w		double precision;
vl_liberado_material_w		double precision;
vl_liberado_hi_w		double precision;
vl_liberado_w			double precision;
qt_liberada_w			double precision;
vl_glosa_co_w			double precision;
vl_glosa_material_w		double precision;
vl_glosa_hi_w			double precision;
ie_valor_base_w			double precision;
vl_calculado_w			double precision;
vl_apresentado_w		double precision;
vl_calculado_mat_w		double precision;
vl_calculado_co_w		double precision;
vl_calculado_hi_w		double precision;
vl_calculado_hi_ww		double precision;
vl_unitario_apres_w		double precision;
vl_unitario_calc_w		double precision;
vl_liberado_hi_ww		double precision;
qt_apresentado_w		double precision;
qt_apresentado_ww		double precision;
qt_glosa_w			double precision	:= 0;
nr_seq_mot_liberacao_w		bigint;
nr_seq_item_glosa_oc_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_partic_proc_w		bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_glosa_w			bigint;
nr_seq_conta_proc_ww		bigint;
nr_seq_conta_mat_ww		bigint;
nr_seq_partic_proc_ww		bigint;
nr_seq_partic_proc_www		bigint;
nr_seq_conta_ww			bigint;
nr_seq_ordem_w			bigint;
nr_seq_item_w			bigint;
nr_seq_ocorrencia_benef_w	bigint;
nr_seq_conta_glosa_w		bigint;
qt_liberado_conta_w		bigint;
qt_conta_pendente_w		bigint;

C01 CURSOR FOR 
	SELECT	ie_tipo, 
		nr_sequencia, 
		ie_status, 
		ie_situacao, 
		nr_seq_conta, 
		nr_seq_conta_mat, 
		nr_seq_conta_proc, 
		nr_seq_proc_partic, 
		vl_glosa, 
		qt_glosa 
	from	pls_analise_conta_item 
	where	nr_seq_conta = nr_seq_conta_ww 
	and	((nr_seq_conta_proc = nr_seq_conta_proc_ww) 
	or (nr_seq_conta_mat = nr_seq_conta_mat_ww) 
	or (nr_seq_proc_partic = nr_seq_partic_proc_ww)) 
	and	ie_status not in ('I', 'E', 'C') 
	order by 1;

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Inserir uma glosa para o item em questão, inserir paracer. histórico e log para esta ação atualizar a via de acesso, informações do item e status do item e de pagamento/faturamento do item 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: Esta rorina possui ie_commit_p 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 

BEGIN 
select	coalesce(qt_apresentado,0), 
	coalesce(vl_total_apres,0), 
	ie_tipo_item, 
	nr_seq_conta, 
	nr_seq_conta_proc, 
	nr_seq_conta_mat, 
	nr_seq_partic_proc, 
	vl_unitario_apres, 
	dividir_sem_round(vl_calculado,qt_apresentado), 
	ie_valor_base, 
	vl_calculado_hi, 
	vl_liberado_hi, 
	nr_seq_item 
into STRICT	qt_apresentado_w, 
	vl_total_apres_w, 
	ie_tipo_item_w, 
	nr_seq_conta_ww, 
	nr_seq_conta_proc_ww, 
	nr_seq_conta_mat_ww, 
	nr_seq_partic_proc_ww, 
	vl_unitario_apres_w, 
	vl_unitario_calc_w, 
	ie_valor_base_w, 
	vl_calculado_hi_w, 
	vl_liberado_hi_ww, 
	nr_seq_item_w	 
from	w_pls_resumo_conta 
where	nr_sequencia	= nr_seq_w_resumo_conta_p;
 
CALL pls_atualizar_via_acesso_conta(nr_seq_conta_ww, nm_usuario_p);
 
if (coalesce(ie_lib_demais_glosas_p,'N') = 'S') then 
	/*Obter o motivo de liberação padrão para liberação manual.*/
 
	begin 
	select	nr_sequencia, 
		ie_tipo_motivo, 
		ds_motivo_liberacao 
	into STRICT	nr_seq_mot_liberacao_w, 
		ie_tipo_motivo_w, 
		ds_motivo_liberacao_w 
	from	pls_mot_lib_analise_conta 
	where	nr_sequencia = 	(SELECT	max(nr_sequencia) 
				from	pls_mot_lib_analise_conta 
				where	coalesce(ie_glosa_manual,'N') = 'S');
	exception 
	when others then 
		nr_seq_mot_liberacao_w	:= null;
		ie_tipo_motivo_w	:= null;
	end;
 
	if (ie_tipo_motivo_w = 'N') then 
		ds_tipo_motivo_w	:= 'Liberação desfavorável';
	else 
		ds_tipo_motivo_w	:= 'Liberação favorável';
	end if;
 
	/*Se o motivo de liberação manual não existe, o processo não pode continuar. */
 
	if (coalesce(nr_seq_mot_liberacao_w,0) = 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176126);
		--'Não existe motivo padrão de liberação de glosas/ocorrências para glosa manual. O motivo de liberação citado, é o campo "Glosa manual", dos "Cadastros gerais / Plano de Saúde / Contas médicas / Motivos de liberação da análise da conta"' 
	end if;
 
	open C01;
	loop 
	fetch C01 into 
		ie_tipo_glosa_oc_w, 
		nr_seq_item_glosa_oc_w, 
		ie_status_w, 
		ie_situacao_w, 
		nr_seq_conta_w, 
		nr_seq_conta_mat_w, 
		nr_seq_conta_proc_w, 
		nr_seq_partic_proc_w, 
		vl_glosa_w, 
		qt_glosa_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		/*Desfeita qualquer liberação que pode ter ocorrido préviamente*/
 
		/*Apagar parecer*/
 
		delete	FROM pls_analise_parecer_item 
		where	nr_seq_item	= nr_seq_item_glosa_oc_w;
 
		/*Atualizar o item para pendente.*/
 
		update	pls_analise_conta_item 
		set	ie_status	= 'P', 
			qt_glosa	= CASE WHEN coalesce(nr_seq_conta_proc,coalesce(nr_seq_conta_mat,coalesce(nr_seq_proc_partic,0)))=0 THEN  0  ELSE coalesce(qt_apresentado_w,0) END , 
			vl_glosa	= CASE WHEN coalesce(nr_seq_conta_proc,coalesce(nr_seq_conta_mat,coalesce(nr_seq_proc_partic,0)))=0 THEN  0  ELSE coalesce(vl_total_apres_w,0) END , 
			ie_consistencia = 'N', 
			ie_situacao	= 'A' 
		where	nr_sequencia	= nr_seq_item_glosa_oc_w 
		and	ie_status	<> 'I';
 
		select	nr_seq_ocorrencia, 
			nr_seq_glosa 
		into STRICT	nr_seq_ocorrencia_w, 
			nr_seq_glosa_w 
		from	pls_analise_conta_item 
		where 	nr_sequencia = nr_seq_item_glosa_oc_w;
 
		/*Obtem o tipo de histórico se é uma liberação de glosa ou de ocorrencia*/
 
		select	CASE WHEN ie_tipo_glosa_oc_w='G' THEN  5 WHEN ie_tipo_glosa_oc_w='O' THEN  6 END  
		into STRICT	ie_tipo_historico_w 
		;
 
		/*Atualizado a glosa / ocorrencia*/
 
		update	pls_analise_conta_item 
		set	ie_status 		= CASE WHEN ie_tipo_motivo_w='S' THEN  'A'  ELSE 'N' END , 
			nm_usuario		= nm_usuario_p, 
			dt_atualizacao 		= clock_timestamp(), 
			ie_consistencia 	= 'N', 
			ie_principal		= 'N', 
			qt_glosa		= CASE WHEN coalesce(nr_seq_conta_proc,coalesce(nr_seq_conta_mat,coalesce(nr_seq_proc_partic,0)))=0 THEN  0  ELSE coalesce(qt_apresentado_w,0) END , 
			vl_glosa		= CASE WHEN coalesce(nr_seq_conta_proc,coalesce(nr_seq_conta_mat,coalesce(nr_seq_proc_partic,0)))=0 THEN  0  ELSE coalesce(vl_total_apres_w,0) END , 
			ie_situacao		= CASE WHEN ie_tipo_motivo_w='N' THEN  'A' WHEN ie_tipo_motivo_w='L' THEN  'I' WHEN ie_tipo_motivo_w='S' THEN  'I' END  
		where	nr_sequencia		= nr_seq_item_glosa_oc_w 
		and	ie_status		<> 'I';
 
		/*Criado o parecer*/
 
		insert into pls_analise_parecer_item(nr_sequencia, 
			nr_seq_item, 
			nr_seq_motivo, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ds_parecer, 
			ie_tipo_motivo) 
		values (nextval('pls_analise_parecer_item_seq'), 
			nr_seq_item_glosa_oc_w, 
			nr_seq_mot_liberacao_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			'Parecer criado automáticamente pelo sistema na glosa/ocorrência manual.', 
			ie_tipo_motivo_w);
 
		ds_observacao_w	:= 	'Tipo de liberação: '||chr(13)||chr(10)|| 
					chr(9)||ds_tipo_motivo_w||chr(13)||chr(10)||chr(13)||chr(10)|| 
					'Motivo de liberação:'||chr(13)||chr(10)|| 
					chr(9)||ds_motivo_liberacao_w||chr(13)||chr(10)||chr(13)||chr(10)|| 
					'Observação/Parecer: '||chr(13)||chr(10)|| 
					chr(9)||'Parecer criado automáticamente pelo sistema na glosa/ocorrência manual.';
 
		/*Adiciona o histórico da ação*/
 
		CALL pls_inserir_hist_analise(nr_seq_conta_w, nr_seq_analise_p, ie_tipo_historico_w, 
					 coalesce(nr_seq_ocorrencia_w, nr_seq_glosa_w), ie_tipo_item_w, nr_seq_ocorrencia_w, 
					 nr_seq_glosa_w, ds_observacao_w, nr_seq_grupo_atual_p, 
					 nm_usuario_p, cd_estabelecimento_p);
		end;
	end loop;
	close C01;
end if;
 
select	nr_seq_ocorrencia, 
	nr_seq_glosa 
into STRICT	nr_seq_ocorrencia_w, 
	nr_seq_glosa_w 
from	pls_analise_conta_item 
where 	nr_sequencia = nr_seq_analise_conta_item_p;
 
/*Apagar o parecer de modo se este existir*/
 
delete	FROM pls_analise_parecer_item 
where	nr_seq_item	= nr_seq_analise_conta_item_p;
 
if (coalesce(nr_seq_ocorrencia_w,0) > 0) then 
	begin	 
	select	nr_seq_ocorrencia 
	into STRICT	nr_seq_ocorrencia_benef_w 
	from	pls_ocorrencia_benef 
	where	nr_sequencia = nr_seq_ocorrencia_w;
	 
	select	cd_ocorrencia, 
		ds_ocorrencia 
	into STRICT	cd_ocorrencia_w,		 
		ds_ocorrencia_w 
	from	pls_ocorrencia 
	where	nr_sequencia 	= nr_seq_ocorrencia_benef_w;	
	exception 
	when others then 
		null;
	end;
 
	ds_observacao_w	:= 'Ocorrência atualizada: ' || cd_ocorrencia_w || ' - ' || ds_ocorrencia_w;
elsif (coalesce(nr_seq_glosa_w,0) > 0) then 
	begin 
	select	nr_seq_motivo_glosa 
	into STRICT	nr_seq_conta_glosa_w 
	from	pls_conta_glosa 
	where	nr_sequencia = nr_seq_glosa_w;	
	 
	select	cd_motivo_tiss,		 
		ds_motivo_tiss 
	into STRICT	cd_glosa_w, 
		ds_glosa_w 
	from	tiss_motivo_glosa 
	where	nr_sequencia	= nr_seq_conta_glosa_w;
	exception 
	when others then 
		null;
	end;
 
	ds_observacao_w		:= 'Glosa atualizada: ' || cd_glosa_w || ' - ' || ds_glosa_w;
end if;
 
if (qt_liberado_p > 0) and (qt_liberado_p < qt_apresentado_w) then 
	qt_glosa_w	:= qt_apresentado_w - qt_liberado_p;
	ie_status_w	:= 'L';
	 
	ds_observacao_w	:= ds_observacao_w || chr(13) || chr(10) || 'Glosa parcial' || chr(13) || chr(10) || 'Qt. glosada: ' || Campo_Mascara_virgula_casas(qt_glosa_w,4) || 
					chr(13) || chr(10);
elsif (vl_liberado_p > 0) and (vl_liberado_p < vl_total_apres_w) then 
	vl_glosa_w	:= vl_total_apres_w - vl_liberado_p;
	ie_status_w	:= 'L';
 
	ds_observacao_w	:= ds_observacao_w || chr(13) || chr(10) || 'Glosa parcial' || chr(13) || chr(10) || 'Vl. glosado: ' || Campo_Mascara_virgula_casas(vl_glosa_w,2) || 
		chr(13) || chr(10);
else 
	qt_glosa_w	:= qt_apresentado_w - qt_liberado_p;
	vl_glosa_w	:= vl_total_apres_w - vl_liberado_p;	
	ie_status_w	:= 'N';
	 
	ds_observacao_w	:= ds_observacao_w || chr(13) || chr(10) || 'Glosa total' || chr(13) || chr(10);
end if;
 
/*Atualizado a glosa / ocorrencia*/
 
update	pls_analise_conta_item 
set	ie_status 		= ie_status_w, 
	nm_usuario		= nm_usuario_p, 
	dt_atualizacao 		= clock_timestamp(), 
	ie_consistencia 	= 'N', 
	ie_situacao 		= 'A', --Ativada a glosa/ocorrencia 
	nr_seq_glosa_manual	 = NULL, 
	qt_glosa		= qt_glosa_w, 
	vl_glosa		= vl_glosa_w 
where	nr_sequencia		= nr_seq_analise_conta_item_p 
and	ie_status		<> 'I';
 
ds_observacao_w	:= ds_observacao_w || 'Observação/Parecer: ' || ds_parecer_p;
 
CALL pls_inserir_hist_analise(nr_seq_conta_w, nr_seq_analise_p, 3, nr_seq_item_w, ie_tipo_item_w, nr_seq_ocorrencia_w, nr_seq_glosa_w, ds_observacao_w, nr_seq_grupo_atual_p, 
			nm_usuario_p, cd_estabelecimento_p);
 
/* Francisco e Diego - 20/06/2012 - Gravar liberação do grupo para o item */
 
ie_analise_multipla_w := obter_param_usuario(1317, 20, null, nm_usuario_p, cd_estabelecimento_p, ie_analise_multipla_w);
 
if (coalesce(ie_analise_multipla_w,'N') = 'N') then 
	if (coalesce(qt_liberado_p,0) > 0) then 
		if (coalesce(ie_valor_base_w,'1') = '1') then 
			vl_liberado_w	:= round((vl_unitario_apres_w*qt_liberado_p)::numeric,2);
		else 
			vl_liberado_w	:= round((vl_unitario_calc_w*qt_liberado_p)::numeric,2);
		end if;
			 
		qt_liberada_w		:= qt_liberado_p;
		vl_liberado_hi_w 	:= null;
		vl_liberado_co_w 	:= null;
		vl_liberado_material_w 	:= null;	
		 
	elsif (coalesce(vl_liberado_p,0) > 0) then				 
		vl_liberado_w		:= vl_liberado_p;
		qt_liberada_w		:= qt_apresentado_w;
		vl_liberado_hi_w 	:= vl_lib_hi_p;
		vl_liberado_co_w 	:= vl_lib_co_p;
		vl_liberado_material_w 	:= vl_lib_mat_p;
	else 
		vl_liberado_w		:= 0;
		qt_liberada_w		:= 0;
		vl_liberado_hi_w 	:= 0;
		vl_liberado_co_w 	:= 0;
		vl_liberado_material_w 	:= 0;
	end if;			
 
	select	max(a.nr_seq_ordem) 
	into STRICT	nr_seq_ordem_w 
	from	pls_tempo_conta_grupo b, 
		pls_auditoria_conta_grupo a 
	where	a.nr_sequencia 		= b.nr_seq_auditoria 
	and	a.nr_seq_analise	= nr_seq_analise_p 
	and	a.nr_seq_grupo		= nr_seq_grupo_atual_p 
	and	coalesce(a.dt_liberacao::text, '') = '' 
	and	(b.dt_inicio_analise IS NOT NULL AND b.dt_inicio_analise::text <> '') 
	and	coalesce(b.dt_final_analise::text, '') = '';
		 
	SELECT * FROM pls_obter_valores_lib_analise(nr_seq_w_resumo_conta_p, cd_estabelecimento_p, vl_glosa_w, vl_liberado_w, qt_liberada_w, vl_liberado_co_w, vl_liberado_material_w, vl_liberado_hi_w, vl_glosa_co_w, vl_glosa_material_w, vl_glosa_hi_w) INTO STRICT vl_glosa_w, vl_liberado_w, qt_liberada_w, vl_liberado_co_w, vl_liberado_material_w, vl_liberado_hi_w, vl_glosa_co_w, vl_glosa_material_w, vl_glosa_hi_w;
	 
	if (nr_seq_ordem_w IS NOT NULL AND nr_seq_ordem_w::text <> '') then 
		if (coalesce(vl_liberado_w,0) = 0) and (coalesce(qt_liberada_w,0) = 0) then 
			ie_pagamento_w	:= 'G';
		elsif (coalesce(vl_glosa_w,0) > 0) and (coalesce(vl_liberado_w,0) > 0) then 
			ie_pagamento_w	:= 'P';	
		else 
			ie_pagamento_w	:= 'L';				
		end if;	
	 
		insert into pls_analise_fluxo_item(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec, 
			nr_seq_analise, 
			nr_seq_grupo, 
			nr_seq_conta_proc, 
			nr_seq_conta_mat, 
			nr_seq_proc_partic, 
			nr_seq_ordem, 
			vl_glosa, 
			vl_liberado_hi, 
			vl_liberado_co,  
			vl_liberado_material, 
			vl_total, 
			vl_glosa_co,  
			vl_glosa_hi, 
			vl_glosa_material, 
			qt_liberada, 
			ie_pagamento, 
			nr_seq_glosa_item) 
		values (nextval('pls_analise_fluxo_item_seq'), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nr_seq_analise_p, 
			nr_seq_grupo_atual_p, 
			nr_seq_conta_proc_ww, 
			nr_seq_conta_mat_ww, 
			nr_seq_partic_proc_ww, 
			nr_seq_ordem_w, 
			vl_glosa_w, 
			vl_liberado_hi_w, 
			vl_liberado_co_w,  
			vl_liberado_material_w, 
			vl_liberado_w, 
			vl_glosa_co_w,  
			vl_glosa_hi_w, 
			vl_glosa_material_w, 
			qt_liberada_w, 
			ie_pagamento_w, 
			nr_seq_analise_conta_item_p);
	end if;
	 
	update	w_pls_resumo_conta 
	set	nm_usuario_glosa 	= nm_usuario_p, 
		nm_usuario_liberacao 	= '', 
		ie_fluxo_com_glosa	= 'S' 
	where	nr_sequencia	 	= nr_seq_w_resumo_conta_p;
end if;	
 
/*Criado o parecer*/
 
insert into pls_analise_parecer_item(nr_sequencia, 
	nr_seq_item, 
	nr_seq_motivo, 
	dt_atualizacao, 
	nm_usuario, 
	dt_atualizacao_nrec, 
	nm_usuario_nrec, 
	ds_parecer, 
	ie_tipo_motivo) 
values (nextval('pls_analise_parecer_item_seq'), 
	nr_seq_analise_conta_item_p, 
	nr_seq_mot_liberacao_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	ds_parecer_p, 
	'A');
	 
if (coalesce(ie_comitar_p,'S') = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_glosa_existentes ( nr_seq_w_resumo_conta_p bigint, nr_seq_analise_conta_item_p bigint, nr_seq_mot_liberacao_p bigint, ds_parecer_p text, nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, qt_liberado_p bigint, vl_liberado_p bigint, vl_lib_co_p bigint, vl_lib_mat_p bigint, vl_lib_hi_p bigint, ie_comitar_p text, ie_lib_demais_glosas_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

