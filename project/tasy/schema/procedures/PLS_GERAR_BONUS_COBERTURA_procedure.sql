-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_bonus_cobertura ( nr_seq_mensalidade_seg_p bigint, nr_seq_segurado_p bigint, nr_seq_contrato_p bigint, dt_mesano_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
nr_seq_tipo_cobertura_w		bigint;
qt_cobertura_regra_w		bigint;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
qt_cobertura_w			bigint;
qt_meses_intervalo_w		integer;
nr_seq_cobertura_w		bigint;
dt_inicio_w			timestamp;
dt_contratacao_w		timestamp;
dt_atual_w			timestamp;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
qt_cobertura_ww			bigint;

nr_seq_bonificacao_w		bigint;
qt_idade_w			bigint;
ie_tipo_item_w			varchar(40);
nr_seq_desconto_w		bigint;
tx_bonificacao_w		double precision;
vl_bonificacao_w		double precision;
ie_alteracao_vinculacao_w	varchar(1);
nr_seq_vinculo_bonificacao_w	bigint;
nr_parcela_inicio_w		bigint;
nr_parcela_fim_w		bigint;
i				bigint := 0;
tx_desconto_w			double precision;
qt_vidas_w			bigint;
dt_referencia_w			timestamp;

vl_bonific_total_w		double precision := 0;
ie_restricao_w			varchar(10);
ds_observacao_w			varchar(255);
vl_item_w			double precision;
vl_mens_desc_w			double precision;
ds_obs_w			varchar(255);
nm_bonificacao_w		varchar(255);
nr_seq_pagador_w		bigint;
nr_seq_sca_w			bigint;
nr_seq_vinculo_sca_w		bigint;
dt_mes_competencia_w		timestamp;
qt_procedimento_w		bigint;
ie_base_maior_valor_w		varchar(1);
ie_titular_w			varchar(1);
nr_seq_titular_w		bigint;
qt_benef_desconto_w		bigint;
qt_min_vidas_w			bigint;
vl_sca_maior_w			double precision;
vl_preco_atual_sca_w		double precision;
ie_gerar_bonus_w		varchar(1);
vl_sca_w			double precision;
nr_seq_mensalidade_w		bigint;
ie_aniversario_sca_w		varchar(1);
dt_aniversario_sca_w		timestamp;
qt_bonificacao_programacao_w	bigint;
qt_parcelas_pagas_inicial_w	bigint;
qt_parcelas_pagas_final_w	bigint;
nr_parcela_dia_w		bigint;
nr_seq_item_w			bigint;
nr_seq_contrato_w		bigint;
qt_aniversario_sca_w		bigint;

qt_parcela_sca_w		bigint;
vl_desconto_w			double precision;
nr_seq_item_mensalidade_w	pls_mensalidade_seg_item.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	d.nr_sequencia,
		c.nr_seq_tipo_cobertura,
		c.qt_cobertura,
		c.qt_meses_intervalo,
		b.nr_sequencia
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c,
		pls_segurado		d
	where	a.nr_seq_segurado	= d.nr_sequencia
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	a.nr_seq_segurado	= d.nr_sequencia
	and	c.ie_tipo_regra		= 'C'
	and	(c.nr_seq_tipo_cobertura IS NOT NULL AND c.nr_seq_tipo_cobertura::text <> '')
	and	d.nr_sequencia		= nr_seq_segurado_p
	group by	b.nr_sequencia,
			d.nr_sequencia,
			c.nr_seq_tipo_cobertura,
			c.qt_cobertura,
			c.qt_meses_intervalo;

C02 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.qt_procedimento
	from	pls_conta_proc		a,
		pls_conta		b,
		pls_segurado		c,
		pls_protocolo_conta	d
	where	b.nr_sequencia		= a.nr_seq_conta
	and	b.nr_seq_segurado	= c.nr_sequencia
	and	d.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	trunc(d.dt_mes_competencia,'mm') = dt_mes_competencia_w
	and	b.ie_status		= 'F';

/* Bonificação para o segurado */

C04 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		coalesce(c.qt_parcelas_pagas_inicial,0),
		coalesce(c.qt_parcelas_pagas_final,0)
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c,
		pls_segurado		d
	where	d.nr_sequencia		= nr_seq_segurado_p
	and	b.nr_sequencia		= nr_seq_bonificacao_w
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	qt_idade_w between coalesce(c.qt_idade_inicial,qt_idade_w) and coalesce(c.qt_idade_final,qt_idade_w)
	and	d.nr_sequencia		= a.nr_seq_segurado
	and (CASE WHEN coalesce(d.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END  = c.ie_titularidade or c.ie_titularidade = 'A' or coalesce(c.ie_titularidade::text, '') = '')
	and (d.nr_seq_parentesco	= c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and (dt_mesano_referencia_p between trunc(coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_p),'dd') and fim_dia(coalesce(a.dt_fim_vigencia,dt_mesano_referencia_p)))
	and	coalesce(c.nr_seq_tipo_cobertura::text, '') = ''
	order by	c.ie_tipo_item;

/* Bonificação para o contrato */

C05 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		coalesce(c.qt_parcelas_pagas_inicial,0),
		coalesce(c.qt_parcelas_pagas_final,0)
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c,
		pls_segurado		d
	where	a.nr_seq_contrato	= nr_seq_contrato_p
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_bonificacao_w
	and	qt_idade_w between coalesce(c.qt_idade_inicial,qt_idade_w) and coalesce(c.qt_idade_final,qt_idade_w)
	and	d.nr_seq_contrato	= a.nr_seq_contrato
	and	d.nr_sequencia		= nr_seq_segurado_p
	and (CASE WHEN coalesce(d.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END  = c.ie_titularidade or c.ie_titularidade = 'A' or coalesce(c.ie_titularidade::text, '') = '')
	and (d.nr_seq_parentesco = c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and (dt_mesano_referencia_p between trunc(coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_p),'dd') and fim_dia(coalesce(a.dt_fim_vigencia,dt_mesano_referencia_p)))
	and	coalesce(c.nr_seq_tipo_cobertura::text, '') = ''
	order by	c.ie_tipo_item;

/* Bonificação para o pagador */

C06 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		coalesce(c.qt_parcelas_pagas_inicial,0),
		coalesce(c.qt_parcelas_pagas_final,0)
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c,
		pls_segurado		d
	where	a.nr_seq_pagador	= nr_seq_pagador_w
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_bonificacao_w
	and	qt_idade_w between coalesce(c.qt_idade_inicial,qt_idade_w) and coalesce(c.qt_idade_final,qt_idade_w)
	and	d.nr_sequencia		= nr_seq_segurado_p
	and (CASE WHEN coalesce(d.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END  = c.ie_titularidade or c.ie_titularidade = 'A' or coalesce(c.ie_titularidade::text, '') = '')
	and (d.nr_seq_parentesco	= c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and (dt_mesano_referencia_p between trunc(coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_p),'dd') and fim_dia(coalesce(a.dt_fim_vigencia,dt_mesano_referencia_p)))
	and	coalesce(c.nr_seq_tipo_cobertura::text, '') = ''
	order by	c.ie_tipo_item;

/* Bonificação SCA para o segurado */

C07 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		d.nr_seq_plano,
		d.nr_sequencia,
		coalesce(a.ie_base_maior_valor,'N'),
		CASE WHEN coalesce(f.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
		coalesce(c.qt_parcelas_pagas_inicial,0),
		coalesce(c.qt_parcelas_pagas_final,0),
		f.nr_seq_contrato
	from	pls_bonificacao_vinculo		a,
		pls_bonificacao			b,
		pls_bonificacao_regra		c,
		pls_sca_vinculo			d,
		pls_plano			e,
		pls_segurado			f
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_bonificacao_w
	and	a.nr_seq_plano		= d.nr_seq_plano
	and	d.nr_seq_plano		= e.nr_sequencia
	and	e.nr_sequencia		= a.nr_seq_plano
	and	f.nr_sequencia	 	= nr_seq_segurado_p
	and	qt_idade_w between coalesce(c.qt_idade_inicial,qt_idade_w) and coalesce(c.qt_idade_final,qt_idade_w)
	and	f.nr_sequencia = d.nr_seq_segurado
	and (CASE WHEN coalesce(f.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END  = c.ie_titularidade or c.ie_titularidade = 'A' or coalesce(c.ie_titularidade::text, '') = '')
	and (f.nr_seq_parentesco = c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and (dt_mesano_referencia_p between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_p) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_p))
	and	coalesce(c.nr_seq_tipo_cobertura::text, '') = ''
	and	((coalesce(d.dt_fim_vigencia::text, '') = '') or (d.dt_fim_vigencia > dt_mesano_referencia_p))
	order by	c.ie_tipo_item;

/* Bonificação SCA para o contrato
Cursor C08 is
	select	b.nr_sequencia,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		d.nr_seq_plano,
		d.nr_sequencia
	from	pls_bonificacao_vinculo		a,
		pls_bonificacao			b,
		pls_bonificacao_regra		c,
		pls_sca_vinculo			d,
		pls_plano			e,
		pls_segurado			f
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	a.nr_seq_plano		= d.nr_seq_plano
	and	d.nr_seq_plano		= e.nr_sequencia
	and	e.nr_sequencia		= a.nr_seq_plano
	and	b.nr_sequencia		= nr_seq_bonificacao_w
	and	d.nr_seq_contrato	= nr_seq_contrato_p
	and	qt_idade_w between nvl(c.qt_idade_inicial,qt_idade_w) and nvl(c.qt_idade_final,qt_idade_w)
	and	f.nr_sequencia = nr_seq_segurado_p
	and	(decode(f.nr_seq_titular,null,'T','D') = c.ie_titularidade or c.ie_titularidade = 'A' or c.ie_titularidade is null)
	and	(f.nr_seq_parentesco = c.nr_seq_parentesco or c.nr_seq_parentesco is null)
	and	(dt_mesano_referencia_p between nvl(a.dt_inicio_vigencia,dt_mesano_referencia_p) and nvl(a.dt_fim_vigencia,dt_mesano_referencia_p))
	and	c.nr_seq_tipo_cobertura is null
	order by	c.ie_tipo_item;
*/
C10 CURSOR FOR
	SELECT	dt_mes_competencia
	from	pls_competencia where	trunc(dt_mes_competencia,'mm') < trunc(dt_mesano_referencia_p,'mm')
	and	cd_estabelecimento	= cd_estabelecimento_p
	order by dt_mes_competencia desc LIMIT (qt_meses_intervalo_w);

C11 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		e.nr_seq_tipo_cobertura,
		e.qt_cobertura,
		e.qt_meses_intervalo,
		c.nr_seq_bonificacao
	from	pls_sca_vinculo		a,
		pls_plano		b,
		pls_bonificacao_vinculo c,
		pls_bonificacao		d,
		pls_bonificacao_regra	e,
		pls_segurado		f
	where	a.nr_seq_plano		= b.nr_sequencia
	and	c.nr_seq_plano		= b.nr_sequencia
	and	c.nr_seq_bonificacao	= d.nr_sequencia
	and	e.nr_seq_bonificacao	= d.nr_sequencia
	and	e.ie_tipo_regra		= 'C'
	and	(e.nr_seq_tipo_cobertura IS NOT NULL AND e.nr_seq_tipo_cobertura::text <> '')
	and	a.nr_seq_segurado	= f.nr_sequencia
	and	f.nr_sequencia		= nr_seq_segurado_p
	and	((coalesce(a.dt_fim_vigencia::text, '') = '') or (a.dt_fim_vigencia > dt_mesano_referencia_p))
	group by	c.nr_seq_bonificacao,
			a.nr_seq_segurado,
			e.nr_seq_tipo_cobertura,
			e.qt_cobertura,
			e.qt_meses_intervalo;

C12 CURSOR FOR
	SELECT	a.nr_sequencia,
		d.vl_preco_atual
	from	pls_segurado		a,
		pls_sca_vinculo		b,
		pls_tabela_preco	c,
		pls_plano_preco		d,
		pessoa_fisica		e,
		pls_plano		f
	where	((a.nr_sequencia = nr_seq_titular_w) or (a.nr_seq_titular = nr_seq_titular_w))
	and	b.nr_seq_segurado	= a.nr_sequencia
	and	b.nr_seq_tabela		= c.nr_sequencia
	and	d.nr_seq_tabela		= c.nr_sequencia
	and	a.cd_pessoa_fisica	= e.cd_pessoa_fisica
	and	b.nr_seq_plano		= f.nr_sequencia
	and	f.nr_sequencia		= nr_seq_sca_w
	and	coalesce(a.dt_rescisao::text, '') = ''
	and	obter_idade_pf(a.cd_pessoa_fisica, dt_mesano_referencia_p, 'A') between d.qt_idade_inicial and d.qt_idade_final
	order by	a.dt_contratacao,
			a.nr_sequencia;


BEGIN

select	sum(a.vl_item),
	max(b.nr_seq_mensalidade)
into STRICT	vl_mens_desc_w,
	nr_seq_mensalidade_w
from	pls_mensalidade_seg_item	a,
	pls_mensalidade_segurado	b
where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
and	b.nr_sequencia			= nr_seq_mensalidade_seg_p
and	a.ie_tipo_item <> '14';

open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	nr_seq_tipo_cobertura_w,
	qt_cobertura_regra_w,
	qt_meses_intervalo_w,
	nr_seq_bonificacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	begin
	select	qt_ocorrencias
	into STRICT	qt_cobertura_ww
	from	w_pls_segurado_compl
	where	nr_seq_segurado		= nr_seq_segurado_w
	and	ie_tipo_complemento	= 'CB';
	exception
	when others then
		qt_cobertura_ww	:= 0;
	end;

	open C10;
	loop
	fetch C10 into
		dt_mes_competencia_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin

		open C02;
		loop
		fetch C02 into
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			begin
			select	cd_grupo_proc,
				cd_especialidade,
				cd_area_procedimento
			into STRICT	cd_grupo_proc_w,
				cd_especialidade_w,
				cd_area_procedimento_w
			from	estrutura_procedimento_v
			where	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w;
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(267426,
									'CD_PROCEDIMENTO_W=' || cd_procedimento_w||';'||
									'IE_ORIGEM_PROCED_W=' || ie_origem_proced_w);
			end;

			select	count(*)
			into STRICT	qt_cobertura_w
			from	pls_cobertura_bonificacao a
			where	a.nr_seq_tipo_cobertura	= nr_seq_tipo_cobertura_w
			and	coalesce(a.cd_procedimento, cd_procedimento_w)	= cd_procedimento_w
			and	coalesce(a.ie_origem_proced, ie_origem_proced_w) 	= ie_origem_proced_w
			and	coalesce(a.cd_grupo_proc, cd_grupo_proc_w)		= cd_grupo_proc_w
			and	coalesce(a.cd_especialidade, cd_especialidade_w)	= cd_especialidade_w
			and	coalesce(a.cd_area_procedimento, cd_area_procedimento_w) 		= cd_area_procedimento_w
			and	coalesce(a.ie_liberado,'N')	= 'S'
			order by
				a.cd_area_procedimento,
				a.cd_especialidade,
				a.cd_grupo_proc,
				a.cd_procedimento,
				CASE WHEN a.ie_liberado='S' THEN  0  ELSE 1 END;

			qt_cobertura_ww	:= coalesce(qt_cobertura_ww,0) + (coalesce(qt_cobertura_w,0) * coalesce(qt_procedimento_w,0));

			end;
		end loop;
		close C02;

		end;
	end loop;
	close C10;

	if (qt_cobertura_ww <= qt_cobertura_regra_w) then /* Dentro do limite. Gerar Bônus */
		/* Busca o pagador e a idade do beneficiário */

		select	a.nr_seq_pagador,
			obter_idade(b.dt_nascimento,clock_timestamp(),'A')
		into STRICT	nr_seq_pagador_w,
			qt_idade_w
		from	pls_segurado	a,
			pessoa_fisica	b
		where	a.nr_sequencia		= nr_seq_segurado_p
		and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;

		/* Gerar a bonificação para o Segurado */

		open C04;
		loop
		fetch C04 into
			nr_seq_bonificacao_w,
			ie_tipo_item_w,
			nr_parcela_inicio_w,
			nr_parcela_fim_w,
			nr_seq_desconto_w,
			vl_bonificacao_w,
			tx_bonificacao_w,
			ie_alteracao_vinculacao_w,
			nr_seq_vinculo_bonificacao_w,
			qt_parcelas_pagas_inicial_w,
			qt_parcelas_pagas_final_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			if	((coalesce(qt_parcelas_pagas_inicial_w,0) = 0) and (coalesce(qt_parcelas_pagas_final_w,0) = 0)) then
				nr_parcela_dia_w	:= 0;
			else
				nr_parcela_dia_w	:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_w,nr_seq_mensalidade_seg_p,nr_seq_vinculo_bonificacao_w);
			end if;

			if	(((nr_parcela_dia_w >= (qt_parcelas_pagas_inicial_w + 1)) and
				(nr_parcela_dia_w <= (qt_parcelas_pagas_final_w + 1)) and
				((qt_parcelas_pagas_inicial_w <> 0) or (qt_parcelas_pagas_final_w <> 0))) or
				(qt_parcelas_pagas_inicial_w = 0 AND qt_parcelas_pagas_final_w = 0)) then

				select	substr(pls_obter_qtd_vidas_contrato(a.nr_sequencia,'A'),1,10)
				into STRICT	qt_vidas_w
				from	pls_contrato	a,
					pls_segurado	b
				where	b.nr_seq_contrato	= a.nr_sequencia
				and	b.nr_sequencia		= nr_seq_segurado_p;

				select	nm_bonificacao
				into STRICT	nm_bonificacao_w
				from	pls_bonificacao
				where	nr_sequencia	= nr_seq_bonificacao_w;

				if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
							coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	vl_bonificacao_w,
							tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b,
							pls_segurado		c
						where	a.nr_seq_segurado	= c.nr_sequencia
						and	c.nr_sequencia		= nr_seq_segurado_p
						and	a.nr_seq_bonificacao	= b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia	= nr_seq_vinculo_bonificacao_w
						and (clock_timestamp() between coalesce(a.dt_inicio_vigencia,clock_timestamp()) and coalesce(a.dt_fim_vigencia,clock_timestamp()));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela_contrato between coalesce(nr_parcela_inicio_w,b.nr_parcela_contrato) and coalesce(nr_parcela_fim_w,b.nr_parcela_contrato)
					and	b.nr_sequencia	= nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0));
					--ds_observacao_w := 'Bonificação por cobertura: '||nm_bonificacao_w||', vinculado ao segurado.';
				elsif (nr_seq_desconto_w IS NOT NULL AND nr_seq_desconto_w::text <> '') then
					select	max(tx_desconto),
						max(vl_desconto)
					into STRICT	tx_desconto_w,
						vl_desconto_w
					from	pls_preco_regra
					where	nr_seq_regra	= nr_seq_desconto_w
					and	qt_vidas_w between coalesce(qt_min_vidas,qt_vidas_w) and coalesce(qt_max_vidas,qt_vidas_w);

					vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mens_desc_w) + coalesce(vl_desconto_w,0); /* Calcula os desconto das bonificações */
					--ds_observacao_w := 'Desconto da bonificação por cobertura: '||nm_bonificacao_w||', vinculado ao segurado.';
				end if;

				SELECT * FROM pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_p, nr_seq_mensalidade_seg_p, dt_mesano_referencia_p, nm_usuario_p, ie_restricao_w, ds_obs_w) INTO STRICT ie_restricao_w, ds_obs_w;
				if (ie_restricao_w = 'N') then
					vl_bonific_total_w := 0;
					ds_observacao_w := ds_obs_w;
				end if;

				ds_observacao_w := 'Bonificação por cobertura: '||nm_bonificacao_w||', vinculado ao segurado.';
				--vl_bonific_total_w := 0;
			end if;
			end;
		end loop;
		close C04;

		vl_bonific_total_w := vl_bonific_total_w * -1;
		if (vl_bonific_total_w <> 0 or ie_restricao_w = 'N') then

			nr_seq_item_mensalidade_w	:= null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, vl_bonific_total_w, nr_seq_item_mensalidade_w);

			vl_bonific_total_w := 0;
		end if;

		/* Gerar a bonificação para o  Contrato */

		open C05;
		loop
		fetch C05 into
			nr_seq_bonificacao_w,
			ie_tipo_item_w,
			nr_parcela_inicio_w,
			nr_parcela_fim_w,
			nr_seq_desconto_w,
			vl_bonificacao_w,
			tx_bonificacao_w,
			ie_alteracao_vinculacao_w,
			nr_seq_vinculo_bonificacao_w,
			qt_parcelas_pagas_inicial_w,
			qt_parcelas_pagas_final_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin

			if	((coalesce(qt_parcelas_pagas_inicial_w,0) = 0) and (coalesce(qt_parcelas_pagas_final_w,0) = 0)) then
				nr_parcela_dia_w	:= 0;
			else
				nr_parcela_dia_w	:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_w,nr_seq_mensalidade_seg_p,nr_seq_vinculo_bonificacao_w);
			end if;

			if	(((nr_parcela_dia_w >= (qt_parcelas_pagas_inicial_w + 1)) and
				(nr_parcela_dia_w <= (qt_parcelas_pagas_final_w + 1)) and
				((qt_parcelas_pagas_inicial_w <> 0) or (qt_parcelas_pagas_final_w <> 0))) or
				(qt_parcelas_pagas_inicial_w = 0 AND qt_parcelas_pagas_final_w = 0)) then

				select	substr(pls_obter_qtd_vidas_contrato(nr_sequencia,'A'),1,10)
				into STRICT	qt_vidas_w
				from	pls_contrato
				where	nr_sequencia = nr_seq_contrato_p;

				select	nm_bonificacao
				into STRICT	nm_bonificacao_w
				from	pls_bonificacao
				where	nr_sequencia = nr_seq_bonificacao_w;

				if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
							coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	vl_bonificacao_w,
							tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b,
							pls_contrato		c
						where	a.nr_seq_contrato	= c.nr_sequencia
						and	c.nr_sequencia		= nr_seq_contrato_p
						and	a.nr_seq_bonificacao	= b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia = nr_seq_vinculo_bonificacao_w
						and (clock_timestamp() between coalesce(a.dt_inicio_vigencia,clock_timestamp()) and coalesce(a.dt_fim_vigencia,clock_timestamp()));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela_contrato between coalesce(nr_parcela_inicio_w,b.nr_parcela_contrato) and coalesce(nr_parcela_fim_w,b.nr_parcela_contrato)
					and	b.nr_sequencia	= nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0); /* Calcula as bonificações */
					--ds_observacao_w := 'Bonificação por cobertura: '||nm_bonificacao_w||', vinculado ao contrato.';
				elsif (nr_seq_desconto_w IS NOT NULL AND nr_seq_desconto_w::text <> '') then
					select	max(tx_desconto),
						max(vl_desconto)
					into STRICT	tx_desconto_w,
						vl_desconto_w
					from	pls_preco_regra
					where	nr_seq_regra = nr_seq_desconto_w
					and	qt_vidas_w between coalesce(qt_min_vidas,qt_vidas_w) and coalesce(qt_max_vidas,qt_vidas_w);

					vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mens_desc_w) + coalesce(vl_desconto_w,0); /* Calcula os desconto das bonificações */
					--ds_observacao_w := 'Desconto da bonificação por cobertura: '||nm_bonificacao_w||', vinculado ao contrato.';
				end if;

				SELECT * FROM pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_p, nr_seq_mensalidade_seg_p, dt_mesano_referencia_p, nm_usuario_p, ie_restricao_w, ds_obs_w) INTO STRICT ie_restricao_w, ds_obs_w;
				if (ie_restricao_w = 'N') then
					vl_bonific_total_w := 0;
					ds_observacao_w := ds_obs_w;
				end if;

				ds_observacao_w := 'Bonificação por cobertura: '||nm_bonificacao_w||', vinculado ao segurado.';
				--vl_bonific_total_w := 0;
			end if;
			end;
		end loop;
		close C05;

		vl_bonific_total_w := vl_bonific_total_w * -1;
		if (vl_bonific_total_w <> 0 or ie_restricao_w = 'N') then

			nr_seq_item_mensalidade_w	:= null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, vl_bonific_total_w, nr_seq_item_mensalidade_w);

			vl_bonific_total_w := 0;
		end if;

		/* Gerar a bonificação para o Pagador */

		open C06;
		loop
		fetch C06 into
			nr_seq_bonificacao_w,
			ie_tipo_item_w,
			nr_parcela_inicio_w,
			nr_parcela_fim_w,
			nr_seq_desconto_w,
			vl_bonificacao_w,
			tx_bonificacao_w,
			ie_alteracao_vinculacao_w,
			nr_seq_vinculo_bonificacao_w,
			qt_parcelas_pagas_inicial_w,
			qt_parcelas_pagas_final_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin

			if	((coalesce(qt_parcelas_pagas_inicial_w,0) = 0) and (coalesce(qt_parcelas_pagas_final_w,0) = 0)) then
				nr_parcela_dia_w	:= 0;
			else
				nr_parcela_dia_w	:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_w,nr_seq_mensalidade_seg_p,nr_seq_vinculo_bonificacao_w);
			end if;

			if	(((nr_parcela_dia_w >= (qt_parcelas_pagas_inicial_w + 1)) and
				(nr_parcela_dia_w <= (qt_parcelas_pagas_final_w + 1)) and
				((qt_parcelas_pagas_inicial_w <> 0) or (qt_parcelas_pagas_final_w <> 0))) or
				(qt_parcelas_pagas_inicial_w = 0 AND qt_parcelas_pagas_final_w = 0)) then

				select	substr(pls_obter_qtd_vidas_contrato(a.nr_sequencia,'A'),1,10)
				into STRICT	qt_vidas_w
				from	pls_contrato		a,
					pls_contrato_pagador	b
				where	b.nr_seq_contrato = a.nr_sequencia
				and	b.nr_sequencia  = nr_seq_pagador_w;

				select	nm_bonificacao
				into STRICT	nm_bonificacao_w
				from	pls_bonificacao
				where	nr_sequencia = nr_seq_bonificacao_w;

				if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
							coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	vl_bonificacao_w,
							tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b,
							pls_contrato_pagador	c
						where	a.nr_seq_pagador	= c.nr_sequencia
						and	c.nr_sequencia		= nr_seq_pagador_w
						and	a.nr_seq_bonificacao	= b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia	= nr_seq_vinculo_bonificacao_w
						and (clock_timestamp() between coalesce(a.dt_inicio_vigencia,clock_timestamp()) and coalesce(a.dt_fim_vigencia,clock_timestamp()));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela_contrato between coalesce(nr_parcela_inicio_w,b.nr_parcela_contrato) and coalesce(nr_parcela_fim_w,b.nr_parcela_contrato)
					and	b.nr_sequencia	= nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0));
					--ds_observacao_w := 'Bonificação por cobertura: '||nm_bonificacao_w||', vinculado ao pagador.';
				elsif (nr_seq_desconto_w IS NOT NULL AND nr_seq_desconto_w::text <> '') then
					select	max(tx_desconto),
						max(vl_desconto)
					into STRICT	tx_desconto_w,
						vl_desconto_w
					from	pls_preco_regra
					where	nr_seq_regra	= nr_seq_desconto_w
					and	qt_vidas_w between coalesce(qt_min_vidas,qt_vidas_w) and coalesce(qt_max_vidas,qt_vidas_w);

					vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mens_desc_w) + coalesce(vl_desconto_w,0); /* Calcula os desconto das bonificações */
					--ds_observacao_w := 'Desconto da bonificação por cobertura: '||nm_bonificacao_w||', vinculado ao contrato.';
				end if;

				SELECT * FROM pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_p, nr_seq_mensalidade_seg_p, dt_mesano_referencia_p, nm_usuario_p, ie_restricao_w, ds_obs_w) INTO STRICT ie_restricao_w, ds_obs_w;
				if (ie_restricao_w = 'N') then
					vl_bonific_total_w := 0;
					ds_observacao_w := ds_obs_w;
				end if;

				ds_observacao_w := 'Bonificação por cobertura: '||nm_bonificacao_w||', vinculado ao pagador.';
				--vl_bonific_total_w := 0;
			end if;
			end;
		end loop;
		close C06;

		vl_bonific_total_w := vl_bonific_total_w * -1;
		if (vl_bonific_total_w <> 0 or ie_restricao_w = 'N') then

			nr_seq_item_mensalidade_w	:= null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, vl_bonific_total_w, nr_seq_item_mensalidade_w);

			vl_bonific_total_w := 0;
		end if;
	else
		ds_observacao_w	:= 'Bonificação não gerada pois o beneficiário utilizou mais procedimentos do que o permitido em um determinado período.';

		nr_seq_item_mensalidade_w	:= null;

		nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, 0, nr_seq_item_mensalidade_w);
	end if;

	end;
end loop;
close C01;

/* Cobertura de bonificação vinculada a um SCA */

open C11;
loop
fetch C11 into
	nr_seq_segurado_w,
	nr_seq_tipo_cobertura_w,
	qt_cobertura_regra_w,
	qt_meses_intervalo_w,
	nr_seq_bonificacao_w;
EXIT WHEN NOT FOUND; /* apply on C11 */
	begin

	begin
	select	qt_ocorrencias
	into STRICT	qt_cobertura_ww
	from	w_pls_segurado_compl
	where	nr_seq_segurado		= nr_seq_segurado_w
	and	ie_tipo_complemento	= 'CB';
	exception
	when others then
		qt_cobertura_ww	:= 0;
	end;

	open C10;
	loop
	fetch C10 into
		dt_mes_competencia_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin

		open C02;
		loop
		fetch C02 into
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			select	max(cd_grupo_proc),
				max(cd_especialidade),
				max(cd_area_procedimento)
			into STRICT	cd_grupo_proc_w,
				cd_especialidade_w,
				cd_area_procedimento_w
			from	estrutura_procedimento_v
			where	cd_procedimento	= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w;

			select	count(*)
			into STRICT	qt_cobertura_w
			from	pls_cobertura_bonificacao a
			where	a.nr_seq_tipo_cobertura	= nr_seq_tipo_cobertura_w
			and	coalesce(a.cd_procedimento, cd_procedimento_w)	= cd_procedimento_w
			and	coalesce(a.ie_origem_proced, ie_origem_proced_w) 	= ie_origem_proced_w
			and	coalesce(a.cd_grupo_proc, cd_grupo_proc_w)		= cd_grupo_proc_w
			and	coalesce(a.cd_especialidade, cd_especialidade_w)	= cd_especialidade_w
			and	coalesce(a.cd_area_procedimento, cd_area_procedimento_w) 		= cd_area_procedimento_w
			and	coalesce(a.ie_liberado,'N')	= 'S'
			order by
				a.cd_area_procedimento,
				a.cd_especialidade,
				a.cd_grupo_proc,
				a.cd_procedimento,
				CASE WHEN a.ie_liberado='S' THEN  0  ELSE 1 END;

			qt_cobertura_ww	:= coalesce(qt_cobertura_ww,0) + (coalesce(qt_cobertura_w,0) * qt_procedimento_w);

			end;
		end loop;
		close C02;

		end;
	end loop;
	close C10;

	if (qt_cobertura_ww <= qt_cobertura_regra_w) then /* Dentro do limite. Gerar Bônus */
		/* Busca o pagador e a idade do beneficiário */

		select	a.nr_seq_pagador,
			trunc(months_between(clock_timestamp(), b.dt_nascimento) / 12)
		into STRICT	nr_seq_pagador_w,
			qt_idade_w
		from	pls_segurado	a,
			pessoa_fisica	b
		where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
		and	a.nr_sequencia		= nr_seq_segurado_p;

		/* Gerar a bonificação SCA para o beneficiário */

		open C07;
		loop
		fetch C07 into
			nr_seq_bonificacao_w,
			ie_tipo_item_w,
			nr_parcela_inicio_w,
			nr_parcela_fim_w,
			nr_seq_desconto_w,
			vl_bonificacao_w,
			tx_bonificacao_w,
			ie_alteracao_vinculacao_w,
			nr_seq_vinculo_bonificacao_w,
			nr_seq_sca_w,
			nr_seq_vinculo_sca_w,
			ie_base_maior_valor_w,
			ie_titular_w,
			qt_parcelas_pagas_inicial_w,
			qt_parcelas_pagas_final_w,
			nr_seq_contrato_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin

			if	((coalesce(qt_parcelas_pagas_inicial_w,0) = 0) and (coalesce(qt_parcelas_pagas_final_w,0) = 0)) then
				nr_parcela_dia_w	:= 0;
			else
				nr_parcela_dia_w	:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_w,nr_seq_mensalidade_seg_p,nr_seq_vinculo_bonificacao_w);
			end if;

			if	(((nr_parcela_dia_w >= (qt_parcelas_pagas_inicial_w + 1)) and
				(nr_parcela_dia_w <= (qt_parcelas_pagas_final_w + 1)) and
				((qt_parcelas_pagas_inicial_w <> 0) or (qt_parcelas_pagas_final_w <> 0))) or
				(qt_parcelas_pagas_inicial_w = 0 AND qt_parcelas_pagas_final_w = 0)) then

				select	count(*)
				into STRICT	qt_aniversario_sca_w
				from	pls_bonificacao			a,
					pls_bonificacao_regra		b
				where	b.nr_seq_bonificacao		= a.nr_sequencia
				and	a.nr_sequencia			= nr_seq_bonificacao_w
				and	b.ie_aniversario_contrato	= 'S';

				if (qt_aniversario_sca_w > 0) then
					ie_aniversario_sca_w	:= 'S';
				else
					ie_aniversario_sca_w	:= 'N';
				end if;

				if (ie_aniversario_sca_w = 'S') then
					select	to_char(trunc(dt_inicio_vigencia,'month'),'dd/mm')||'/'||to_char(dt_mesano_referencia_p,'yyyy')
					into STRICT	dt_aniversario_sca_w
					from	pls_sca_vinculo
					where	nr_sequencia = nr_seq_vinculo_sca_w;

					select	count(*)
					into STRICT	qt_parcela_sca_w
					from	pls_mensalidade_seg_item
					where	nr_seq_vinculo_sca	= nr_seq_vinculo_sca_w;

					if	((trunc(dt_aniversario_sca_w,'month') = trunc(dt_mesano_referencia_p,'month')) or (qt_parcela_sca_w = 1)) then
						for i in 1..12 loop
							begin
							dt_aniversario_sca_w	:= add_months(dt_aniversario_sca_w,1);

							select	count(*)
							into STRICT	qt_bonificacao_programacao_w
							from	pls_segurado_mensalidade	a,
								pls_segurado			b
							where	a.nr_seq_segurado	= b.nr_sequencia
							and	b.nr_sequencia		= nr_seq_segurado_p
							and	a.dt_referencia		= dt_aniversario_sca_w
							and	a.nr_seq_bonificacao	= nr_seq_bonificacao_w;

							if (qt_bonificacao_programacao_w = 0) then
								insert	into	pls_segurado_mensalidade(	nr_sequencia, nr_seq_segurado, cd_estabelecimento,
										dt_referencia, ie_tipo_item, dt_atualizacao,
										nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
										nr_seq_bonificacao, ie_situacao, vl_item,
										tx_desconto, nr_seq_vinculo_bonificacao)
									values (	nextval('pls_segurado_mensalidade_seq'), nr_seq_segurado_p, cd_estabelecimento_p,
										dt_aniversario_sca_w, '14', clock_timestamp(),
										nm_usuario_p, clock_timestamp(), nm_usuario_p,
										nr_seq_bonificacao_w, 'A', 0,
										0, nr_seq_vinculo_bonificacao_w);
							end if;
							end;
						end loop;
					end if;
				else
					select	count(*)
					into STRICT	qt_vidas_w
					from	pls_segurado
					where	nr_seq_contrato	= nr_seq_contrato_w
					and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
					and (coalesce(dt_rescisao::text, '') = '' or ((dt_rescisao IS NOT NULL AND dt_rescisao::text <> '') and coalesce(dt_reativacao,dt_rescisao) > dt_rescisao));

					select	nm_bonificacao
					into STRICT	nm_bonificacao_w
					from	pls_bonificacao
					where	nr_sequencia = nr_seq_bonificacao_w;

					if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') then
						if (ie_alteracao_vinculacao_w = 'S') then
							select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
								coalesce(max(tx_bonificacao),tx_bonificacao_w)
							into STRICT	vl_bonificacao_w,
								tx_bonificacao_w
							from	pls_bonificacao_vinculo		a,
								pls_bonificacao			b,
								pls_sca_vinculo			d,
								pls_plano			e,
								pls_segurado			f
							where	a.nr_seq_bonificacao	= b.nr_sequencia
							and	a.nr_seq_plano		= d.nr_seq_plano
							and	d.nr_seq_plano		= e.nr_sequencia
							and	e.nr_sequencia		= a.nr_seq_plano
							and	d.nr_seq_segurado	= f.nr_sequencia
							and	f.nr_sequencia	 	= nr_seq_segurado_p
							and (clock_timestamp() between coalesce(a.dt_inicio_vigencia,clock_timestamp()) and coalesce(a.dt_fim_vigencia,clock_timestamp()));
						end if;

						select	sum(a.vl_item)
						into STRICT	vl_item_w
						from	pls_mensalidade_seg_item	a,
							pls_mensalidade_segurado	b
						where	a.nr_seq_mensalidade_seg = b.nr_sequencia
						and	b.nr_sequencia		= nr_seq_mensalidade_seg_p
						and	a.nr_seq_vinculo_sca	= nr_seq_vinculo_sca_w
						and	b.nr_parcela_contrato between coalesce(nr_parcela_inicio_w,b.nr_parcela_contrato) and coalesce(nr_parcela_fim_w,b.nr_parcela_contrato)
						and	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
						and	substr(pls_obter_dados_vinc_bonific(a.nr_seq_bonificacao_vinculo,a.nr_seq_vinculo_sca,'O') ,1,255) = 'Beneficiário';

						vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0));
						--ds_observacao_w := 'Bonificação por cobertura: '||nm_bonificacao_w||', vinculado a um SCA do segurado.';
					elsif (nr_seq_desconto_w IS NOT NULL AND nr_seq_desconto_w::text <> '') then
						if (ie_base_maior_valor_w = 'S') then
							if (ie_titular_w = 'T') then
								nr_seq_titular_w	:= nr_seq_segurado_p;
								select	count(*)
								into STRICT	qt_benef_desconto_w
								from	pls_segurado	a,
									pls_sca_vinculo	b,
									pls_plano	c
								where	((a.nr_sequencia = nr_seq_titular_w) or (a.nr_seq_titular = nr_seq_titular_w))
								and	b.nr_seq_segurado	= a.nr_sequencia
								and	coalesce(a.dt_rescisao::text, '') = ''
								and	b.nr_seq_plano		= c.nr_sequencia
								and	c.nr_sequencia		= nr_seq_sca_w;
							elsif (ie_titular_w = 'D') then
								select	nr_seq_titular
								into STRICT	nr_seq_titular_w
								from	pls_segurado
								where	nr_sequencia	= nr_seq_segurado_p;

								select	count(*)
								into STRICT	qt_benef_desconto_w
								from	pls_segurado	a,
									pls_sca_vinculo	b,
									pls_plano	c
								where	((a.nr_sequencia = nr_seq_titular_w) or (a.nr_seq_titular = nr_seq_titular_w))
								and	b.nr_seq_segurado	= a.nr_sequencia
								and	coalesce(a.dt_rescisao::text, '') = ''
								and	b.nr_seq_plano		= c.nr_sequencia
								and	c.nr_sequencia		= nr_seq_sca_w;
							end if;

							select	max(tx_desconto),
								max(qt_min_vidas),
								max(vl_desconto)
							into STRICT	tx_desconto_w,
								qt_min_vidas_w,
								vl_desconto_w
							from	pls_preco_regra
							where	nr_seq_regra	= nr_seq_desconto_w
							and	qt_vidas_w between coalesce(qt_min_vidas,qt_benef_desconto_w) and coalesce(qt_max_vidas,qt_benef_desconto_w);

							i		:= 0;
							vl_sca_maior_w	:= 0;
							open C12;
							loop
							fetch C12 into
								nr_seq_segurado_w,
								vl_preco_atual_sca_w;
							EXIT WHEN NOT FOUND; /* apply on C12 */
								begin
								if (vl_preco_atual_sca_w > vl_sca_maior_w) then
									vl_sca_maior_w	:= vl_preco_atual_sca_w;
								end if;

								if	(nr_seq_segurado_w = nr_seq_segurado_p AND i >= qt_min_vidas_w) then
									ie_gerar_bonus_w	:= 'S';

									select	d.vl_preco_atual
									into STRICT	vl_sca_w
									from	pls_segurado		a,
										pls_sca_vinculo		b,
										pls_tabela_preco	c,
										pls_plano_preco		d,
										pessoa_fisica		e,
										pls_plano		f
									where	a.nr_sequencia		= nr_seq_segurado_p
									and	b.nr_seq_segurado	= a.nr_sequencia
									and	b.nr_seq_tabela		= c.nr_sequencia
									and	d.nr_seq_tabela		= c.nr_sequencia
									and	a.cd_pessoa_fisica	= e.cd_pessoa_fisica
									and	b.nr_seq_plano		= f.nr_sequencia
									and	f.nr_sequencia		= nr_seq_sca_w
									and	coalesce(a.dt_rescisao::text, '') = ''
									and	obter_idade_pf(a.cd_pessoa_fisica, dt_mesano_referencia_p, 'A') between d.qt_idade_inicial and d.qt_idade_final
									order by	a.dt_contratacao,
											a.nr_sequencia;
								end if;
								i	:= i+ 1;
								end;
							end loop;
							close C12;

							if (ie_gerar_bonus_w = 'S') then
								vl_bonific_total_w	:= vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_sca_maior_w) + coalesce(vl_desconto_w,0);

								if (vl_bonific_total_w > vl_sca_w) then
									vl_bonific_total_w	:= vl_sca_w;
								end if;
							end if;
						else
							select	max(tx_desconto),
								max(vl_desconto)
							into STRICT	tx_desconto_w,
								vl_desconto_w
							from	pls_preco_regra
							where	nr_seq_regra = nr_seq_desconto_w
							and	qt_vidas_w between coalesce(qt_min_vidas,qt_vidas_w) and coalesce(qt_max_vidas,qt_vidas_w);

							vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mens_desc_w) + coalesce(vl_desconto_w,0); /* Calcula os desconto das bonificações */
							--ds_observacao_w := 'Desconto da bonificação por cobertura: '||nm_bonificacao_w||', vinculado a um SCA do segurado.';
						end if;
					end if;

					SELECT * FROM pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_p, nr_seq_mensalidade_seg_p, dt_mesano_referencia_p, nm_usuario_p, ie_restricao_w, ds_obs_w) INTO STRICT ie_restricao_w, ds_obs_w;
					if (ie_restricao_w = 'N') then
						vl_bonific_total_w := 0;
						ds_observacao_w := ds_obs_w;
					end if;

					ds_observacao_w := 'Bonificação por cobertura: '||nm_bonificacao_w||', vinculado a um SCA do segurado.';
				end if;
			end if;
			end;
		end loop;
		close C07;

		vl_bonific_total_w := vl_bonific_total_w * -1;
		if (vl_bonific_total_w <> 0 or ie_restricao_w = 'N') then

			nr_seq_item_mensalidade_w	:= null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, nr_seq_vinculo_sca_w, null, null, null, vl_bonific_total_w, nr_seq_item_mensalidade_w);

			vl_bonific_total_w := 0;
		end if;

		/* Bonificação SCA para o contrato
		open C08;
		loop
		fetch C08 into
			nr_seq_bonificacao_w,
			ie_tipo_item_w,
			nr_parcela_inicio_w,
			nr_parcela_fim_w,
			nr_seq_desconto_w,
			vl_bonificacao_w,
			tx_bonificacao_w,
			ie_alteracao_vinculacao_w,
			nr_seq_vinculo_bonificacao_w,
			nr_seq_sca_w,
			nr_seq_vinculo_sca_w;
		exit when C08%notfound;
			begin

			select	substr(pls_obter_qtd_vidas_contrato(nr_sequencia,'A'),1,10)
			into	qt_vidas_w
			from	pls_contrato
			where	nr_sequencia = nr_seq_contrato_p;

			if	(ie_tipo_item_w is not null) then
				if	(ie_alteracao_vinculacao_w = 'S') then
					select	nvl(max(vl_bonificacao),vl_bonificacao_w),
						nvl(max(tx_bonificacao),tx_bonificacao_w)
					into	vl_bonificacao_w,
						tx_bonificacao_w
					from	pls_bonificacao_vinculo		a,
						pls_bonificacao			b,
						pls_sca_vinculo			d,
						pls_plano			e,
						pls_contrato			f
					where	a.nr_seq_bonificacao	= b.nr_sequencia
					and	a.nr_seq_plano		= d.nr_seq_plano
					and	d.nr_seq_plano		= e.nr_sequencia
					and	e.nr_sequencia		= a.nr_seq_plano
					and	d.nr_seq_contrato 	= f.nr_sequencia
					and	f.nr_sequencia		= nr_seq_contrato_p
					and	(sysdate between nvl(a.dt_inicio_vigencia,sysdate) and nvl(a.dt_fim_vigencia,sysdate));
				end if;

				select	sum(a.vl_item)
				into	vl_item_w
				from	pls_mensalidade_seg_item	a,
					pls_mensalidade_segurado	b
				where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
				and	b.nr_parcela_contrato between nvl(nr_parcela_inicio_w,b.nr_parcela_contrato) and nvl(nr_parcela_fim_w,b.nr_parcela_contrato)
				and	b.nr_sequencia = nr_seq_mensalidade_seg_p
				and	a.nr_seq_mensalidade_seg = b.nr_sequencia
				and	substr(pls_obter_dados_vinc_bonific(a.nr_seq_bonificacao_vinculo,a.nr_seq_vinculo_sca,'O') ,1,255) = 'Contrato';

				vl_bonific_total_w := vl_bonific_total_w + (((nvl(tx_bonificacao_w,0)/100) * nvl(vl_item_w,0)) + nvl(vl_bonificacao_w,0));
				--ds_observacao_w := 'Bonificação por cobertura: '||nm_bonificacao_w||', vinculado a um SCA do contrato.';
			elsif	(nr_seq_desconto_w is not null) then
				select	max(tx_desconto)
				into	tx_desconto_w
				from	pls_preco_regra
				where	nr_seq_regra = nr_seq_desconto_w
				and	qt_vidas_w between nvl(qt_min_vidas,qt_vidas_w) and nvl(qt_max_vidas,qt_vidas_w);

				vl_bonific_total_w := vl_bonific_total_w + ((tx_desconto_w/100) * vl_mens_desc_w);  --Calcula os desconto das bonificações
				--ds_observacao_w := 'Desconto da bonificação por cobertura: '||nm_bonificacao_w||', vinculado a um SCA do contrato.';
			end if;

			select	nm_bonificacao
			into	nm_bonificacao_w
			from	pls_bonificacao
			where	nr_sequencia = nr_seq_bonificacao_w;

			pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_p, nr_seq_mensalidade_seg_p, dt_mesano_referencia_p, nm_usuario_p, ie_restricao_w, ds_obs_w);
			if	(ie_restricao_w = 'N') then
				vl_bonific_total_w := 0;
				ds_observacao_w := ds_obs_w;
			end if;
			ds_observacao_w := 'Bonificação por cobertura: '||nm_bonificacao_w||', vinculado a um SCA do contrato.';
			end;
		end loop;
		close C08;
		*/
		vl_bonific_total_w := vl_bonific_total_w * -1;
		if (vl_bonific_total_w <> 0 or ie_restricao_w = 'N') then

			nr_seq_item_mensalidade_w	:= null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, nr_seq_vinculo_sca_w, null, null, null, vl_bonific_total_w, nr_seq_item_mensalidade_w);

			vl_bonific_total_w := 0;
		end if;
	else
		ds_observacao_w	:= 'Bonificação não gerada pois o beneficiário utilizou mais procedimentos do que o permitido em um determinado período.';

		nr_seq_item_mensalidade_w	:= null;

		nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, 0, nr_seq_item_mensalidade_w);
	end if;

	end;
end loop;
close C11;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_bonus_cobertura ( nr_seq_mensalidade_seg_p bigint, nr_seq_segurado_p bigint, nr_seq_contrato_p bigint, dt_mesano_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

