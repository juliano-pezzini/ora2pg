-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ata_reuniao ( nr_seq_reuniao_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_ata_p INOUT bigint) AS $body$
DECLARE


dt_reuniao_w			timestamp;
ds_assunto_w			varchar(255);
nr_seq_ata_w			bigint;
ie_faltou_w			varchar(1)	:= 'N';
nm_pessoa_participante_w	varchar(80);
ds_cargo_externo_w varchar(255);
ds_setor_w			varchar(100);
cd_pessoa_solicitante_w		varchar(10);
cd_setor_atendimento_w		varchar(10);
ds_pauta_w			varchar(255);
ie_buscar_desc_tipo_w		varchar(2);
nr_seq_tipo_reuniao_w		bigint;
ds_tipo_reuniao_w		varchar(255);
ie_tipo_ata_w			varchar(10);
ds_email_w			varchar(255);
ie_gerar_seq_ata_w		varchar(1);


C01 CURSOR FOR
	SELECT	ie_faltou,
		nm_pessoa_participante,
		ds_setor,
		cd_pessoa_participante,
		ds_cargo_externo,
		cd_setor_atendimento,
		 obter_dados_pf_pj(cd_pessoa_participante,null,'M')
	from	ata_participante
	where	nr_seq_reuniao = nr_seq_reuniao_p;

C02 CURSOR FOR
	SELECT	ds_pauta
	from	ata_reuniao_pauta
	where	nr_seq_reuniao = nr_seq_reuniao_p;


BEGIN

ie_buscar_desc_tipo_w := obter_param_usuario(1351, 4, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_buscar_desc_tipo_w);
ie_tipo_ata_w := obter_param_usuario(1351, 6, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_tipo_ata_w);
ie_gerar_seq_ata_w := obter_param_usuario(1351, 19, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_seq_ata_w);

select	max(dt_reuniao),
	max(ds_assunto),
	max(coalesce(nr_seq_tipo_reuniao,0))
into STRICT	dt_reuniao_w,
	ds_assunto_w,
	nr_seq_tipo_reuniao_w
from	ata_reuniao
where	nr_sequencia	= nr_seq_reuniao_p;

if (ie_buscar_desc_tipo_w = 'S' AND nr_seq_tipo_reuniao_w <> 0) then

	select 	ds_tipo_reuniao
	into STRICT	ds_tipo_reuniao_w
	from	tipo_reuniao
	where	nr_sequencia = nr_seq_tipo_reuniao_w;

	ds_assunto_w := ds_tipo_reuniao_w;

end if;


if (nr_seq_reuniao_p IS NOT NULL AND nr_seq_reuniao_p::text <> '') then

	select	nextval('proj_ata_seq')
	into STRICT	nr_seq_ata_w
	;

	insert into proj_ata(	nr_sequencia,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				dt_ata,
				ds_ata,
				cd_consultor,
				nr_seq_reuniao,
				ie_situacao,
				ie_geral,
				ie_tipo_ata)
		values (	nr_seq_ata_w,
				cd_estabelecimento_p,
				clock_timestamp(),
				nm_usuario_p,
				dt_reuniao_w,
				CASE WHEN ie_gerar_seq_ata_w='S' THEN  substr('Ata da reunião Nº'|| to_char(nr_seq_reuniao_p) || ' - ' || ds_assunto_w,1,255)  ELSE substr('Ata da reunião - ' || ds_assunto_w,1,255) END ,
				cd_pessoa_fisica_p,
				nr_seq_reuniao_p,
				'A',
				'S',
				ie_tipo_ata_w);

	open C01;
	loop
	fetch C01 into
		ie_faltou_w,
		nm_pessoa_participante_w,
		ds_setor_w,
		cd_pessoa_solicitante_w,
		ds_cargo_externo_w,
		cd_setor_atendimento_w,
		ds_email_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		insert into proj_ata_participante(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nm_pessoa_participante,
					ds_setor,
					ie_faltou,
					nr_seq_ata,
					cd_pessoa_participante,
					ds_cargo_externo,
					cd_setor_atendimento,
					ds_email)
			values (	nextval('proj_ata_participante_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nm_pessoa_participante_w,
					ds_setor_w,
					ie_faltou_w,
					nr_seq_ata_w,
					cd_pessoa_solicitante_w,
					ds_cargo_externo_w,
					cd_setor_atendimento_w,
					ds_email_w);
		end;
	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		ds_pauta_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		insert into proj_ata_pauta(	nr_sequencia,
					nr_seq_ata,
					nm_usuario_nrec,
					nm_usuario,
					dt_atualizacao_nrec,
					dt_atualizacao,
					ds_pauta)
			values (	nextval('proj_ata_pauta_seq'),
					nr_seq_ata_w,
					nm_usuario_p,
					nm_usuario_p,
					clock_timestamp(),
					clock_timestamp(),
					ds_pauta_w);
		end;
	end loop;
	close C02;

	nr_seq_ata_p	:= nr_seq_ata_w;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ata_reuniao ( nr_seq_reuniao_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_ata_p INOUT bigint) FROM PUBLIC;

