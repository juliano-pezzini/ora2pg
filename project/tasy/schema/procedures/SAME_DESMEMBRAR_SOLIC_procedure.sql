-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE same_desmembrar_solic (nr_seq_solic_p bigint, ds_prontuario_p text, nm_usuario_p text) AS $body$
DECLARE


ds_prontuario_w		varchar(32000);
ie_contador_w		bigint	:= 0;
tam_lista_w		bigint;
ie_pos_virgula_w	smallint;
nr_seq_pront_w		bigint;
nr_seq_solic_w		bigint;


BEGIN

if (ds_prontuario_p IS NOT NULL AND ds_prontuario_p::text <> '') then

	select	nextval('same_solic_pront_seq')
	into STRICT	nr_seq_solic_w
	;

	insert into same_solic_pront(
		nr_sequencia,
		cd_estabelecimento,
		dt_solicitacao,
		dt_atualizacao,
		nm_usuario,
		ie_status,
		cd_pessoa_fisica,
		nr_atendimento,
		dt_prevista,
		dt_entrega,
		ds_observacao,
		cd_pessoa_solicitante,
		ie_tipo_solicitacao,
		ie_urgente,
		nr_seq_lote,
		nr_seq_motivo,
		dt_devolucao_prevista,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_devolucao,
		cd_setor_solicitante,
		dt_recebimento,
		nm_usuario_receb,
		dt_periodo_inicial,
		dt_periodo_final,
		dt_liberacao,
		nr_seq_origem
	)
	SELECT	nr_seq_solic_w,
		cd_estabelecimento,
		dt_solicitacao,
		clock_timestamp(),
		nm_usuario_p,
		ie_status,
		cd_pessoa_fisica,
		nr_atendimento,
		dt_prevista,
		dt_entrega,
		ds_observacao,
		cd_pessoa_solicitante,
		ie_tipo_solicitacao,
		ie_urgente,
		nr_seq_lote,
		nr_seq_motivo,
		dt_devolucao_prevista,
		clock_timestamp(),
		nm_usuario_p,
		dt_devolucao,
		cd_setor_solicitante,
		dt_recebimento,
		nm_usuario_receb,
		dt_periodo_inicial,
		dt_periodo_final,
		dt_liberacao,
		nr_seq_solic_p
	from	same_solic_pront
	where	nr_sequencia	= nr_seq_solic_p;

	ds_prontuario_w		:= ds_prontuario_p;

	while	(ds_prontuario_w IS NOT NULL AND ds_prontuario_w::text <> '') or

		ie_contador_w > 200 loop
		begin
		tam_lista_w		:= length(ds_prontuario_w);
		ie_pos_virgula_w	:= position(',' in ds_prontuario_w);

		if (ie_pos_virgula_w <> 0) then
			nr_seq_pront_w		:= substr(ds_prontuario_w,1,(ie_pos_virgula_w-1));
			ds_prontuario_w		:= substr(ds_prontuario_w,(ie_pos_virgula_w+1),tam_lista_w);
		end if;

		if (nr_seq_pront_w IS NOT NULL AND nr_seq_pront_w::text <> '') then

			insert into same_solic_pront_envelope(
				nr_sequencia,
				nr_seq_solic,
				nr_seq_prontuario,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec
			) values (
				nextval('same_solic_pront_envelope_seq'),
				nr_seq_solic_w,
				nr_seq_pront_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p
			);

			delete	from same_solic_pront_envelope
			where	nr_seq_solic		= nr_seq_solic_p
			and	nr_seq_prontuario	= nr_seq_pront_w;

		end if;

		ie_contador_w	:= ie_contador_w + 1;

		end;
	end loop;
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE same_desmembrar_solic (nr_seq_solic_p bigint, ds_prontuario_p text, nm_usuario_p text) FROM PUBLIC;

