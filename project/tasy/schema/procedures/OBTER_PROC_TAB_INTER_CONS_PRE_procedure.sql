-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_proc_tab_inter_cons_pre (nr_seq_interno_p bigint, nr_seq_agenda_p bigint, cd_convenio_p bigint, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint) AS $body$
DECLARE

 
nr_atendimento_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_edicao_amb_w		integer;
ie_tipo_convenio_w		smallint;
cd_categoria_w		varchar(10);
vl_retorno_w		double precision;
ie_preco_informado_w	varchar(10);
ie_glosa_w		varchar(10);
cd_edicao_ajuste_w	integer;

/* incluído por rafael em 15/09/2006 OS40830 */
 
nr_atend_agenda_w	bigint;
ie_tipo_atendimento_w	smallint;
cd_proced_conv_w		bigint;
ie_origem_proced_conv_w	bigint;

ie_prioridade_edicao_w		varchar(01);	
IE_PRIORIDADE_AJUSTE_PROC_w	varchar(01);

VL_CH_HONORARIOS_W		double precision	:= 1;
VL_CH_CUSTO_OPER_W		double precision	:= 1;
VL_M2_FILME_W			double precision	:= 0;
tx_ajuste_geral_w			double precision	:= 1;
dt_inicio_vigencia_w		timestamp;
ie_autor_particular_w		varchar(1);
cd_convenio_glosa_ww		integer;
cd_categoria_glosa_ww		varchar(10);
nr_seq_ajuste_proc_ww		bigint;

cd_setor_atendimento_w		integer;
nr_seq_cbhpm_edicao_w		bigint;

 
/* incluído por rafael em 15/09/2006 OS40830 */
 
c01 CURSOR FOR 
SELECT	cd_procedimento, 
	ie_origem_proced 
from	proc_interno_conv 
where	nr_seq_proc_interno		= nr_seq_interno_p 
and (cd_convenio			= cd_convenio_p 		or coalesce(cd_convenio::text, '') = '') 
and (cd_edicao_amb		= cd_edicao_amb_w 		or coalesce(cd_edicao_amb::text, '') = '') 
and (ie_tipo_atendimento	= ie_tipo_atendimento_w	or coalesce(ie_tipo_atendimento::text, '') = '') 
and 	((cd_setor_atendimento	= coalesce(cd_setor_atendimento_w,0)) or (coalesce(cd_setor_atendimento::text, '') = '')) 
and 	((cd_estabelecimento  = coalesce(cd_estabelecimento_p, wheb_usuario_pck.get_cd_estabelecimento)) or (coalesce(cd_estabelecimento::text, '') = '')) 
order by 
	coalesce(cd_edicao_amb,0), 
	coalesce(cd_convenio,0), 
	coalesce(ie_tipo_atendimento,0), 
	coalesce(cd_setor_atendimento,0), 
	coalesce(cd_estabelecimento,0);

c02 CURSOR FOR 
	SELECT	cd_categoria 
	from	categoria_convenio 
	where	cd_convenio	= cd_convenio_p 
	and	ie_situacao	= 'A';


BEGIN 
 
select	coalesce(max(ie_prioridade_edicao_amb), 'N'), 
	coalesce(max(IE_PRIORIDADE_AJUSTE_PROC), 'N') 
into STRICT	ie_prioridade_edicao_w, 
	IE_PRIORIDADE_AJUSTE_PROC_w 
from	parametro_faturamento 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
select	max(cd_procedimento), 
	max(ie_origem_proced) 
into STRICT	cd_procedimento_w, 
	ie_origem_proced_w 
from	proc_interno 
where	nr_sequencia = nr_seq_interno_p;
 
if (cd_convenio_p > 0) then 
	begin 
	 
	select	max(ie_tipo_convenio) 
	into STRICT	ie_tipo_convenio_w 
	from	convenio 
	where	cd_convenio = cd_convenio_p;
 
	if (ie_prioridade_edicao_w = 'N') then	 
		SELECT	coalesce(max(CD_EDICAO_AMB),0) 
		INTO STRICT	CD_EDICAO_AMB_W 
		FROM 	CONVENIO_AMB 
		WHERE (CD_ESTABELECIMENTO   = cd_estabelecimento_p) 
		AND (CD_CONVENIO      = cd_convenio_p) 
 		AND (coalesce(IE_SITUACAO,'A')  = 'A') 
 		AND 	(DT_INICIO_VIGENCIA   = 
				(SELECT	MAX(DT_INICIO_VIGENCIA) 
				FROM 	CONVENIO_AMB A	 
				WHERE (A.CD_ESTABELECIMENTO 	= cd_estabelecimento_p) 
				AND (A.CD_CONVENIO     	= CD_CONVENIO_p) 
				AND (coalesce(A.IE_SITUACAO,'A')	= 'A') 
				AND (A.DT_INICIO_VIGENCIA 	<= clock_timestamp())));
	else 
		select	min(cd_categoria) 
		into STRICT	cd_categoria_w 
		from	categoria_convenio 
		where	cd_convenio	= cd_convenio_p 
		and	ie_situacao	= 'A';
			 
		SELECT * FROM Obter_Edicao_Proc_Conv(cd_estabelecimento_p, CD_CONVENIO_p, null, clock_timestamp(), cd_procedimento_w, CD_EDICAO_AMB_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT CD_EDICAO_AMB_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
	end if;
 
	/* rafael em 15/09/2006 OS40830 */
 
	select	coalesce(max(nr_atendimento),0), 
		coalesce(max(cd_categoria),'0'), 
		coalesce(max(cd_setor_atendimento),0) 
	into STRICT	nr_atend_agenda_w, 
		cd_categoria_w, 
		cd_setor_atendimento_w 
	from	agenda_consulta 
	where	nr_sequencia = nr_seq_agenda_p;
	 
	if (coalesce(nr_atendimento_w,0) > 0) then 
		select	obter_tipo_atendimento(nr_atendimento_w) 
		into STRICT	ie_tipo_atendimento_w 
		;
	end if;
 
	cd_edicao_ajuste_w	:= 0;
 
	open	c02;
	loop 
	fetch	c02 into cd_categoria_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
 
		if (cd_edicao_ajuste_w = 0) then 
			begin 
			SELECT * FROM obter_regra_ajuste_proc(cd_estabelecimento_p, cd_convenio_p, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), 0, ie_tipo_atendimento_p, 0, null, 0, 0, null, nr_seq_interno_p, null, null, null, null, null, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_preco_informado_w, ie_glosa_w, vl_retorno_w, vl_retorno_w, cd_edicao_ajuste_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, null, 0, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, null, null, null, null, null, null, null, null, vl_retorno_w, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_preco_informado_w, ie_glosa_w, vl_retorno_w, vl_retorno_w, cd_edicao_ajuste_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, vl_retorno_w;	
			exception 
				when others then 
				cd_edicao_ajuste_w	:= 0;
			end;
		end if;
		end;
	end loop;
	close	c02;
		 
	if (cd_edicao_ajuste_w IS NOT NULL AND cd_edicao_ajuste_w::text <> '') and (cd_edicao_ajuste_w <> 0) then 
		cd_edicao_amb_w		:= cd_edicao_ajuste_w;
	end if;
 
	 
/*	rafael em 15/09/2006. substituí esta rotina, pois gerava erro (o max não trazia a informação correta). 
	alterada para a rotina com o cursor. 
 
	if	(cd_edicao_amb_w > 0) then 
		select	nvl(max(cd_procedimento), cd_procedimento_w), 
			nvl(max(ie_origem_proced), ie_origem_proced_w) 
		into	cd_procedimento_w, 
			ie_origem_proced_w 
		from	proc_interno_conv 
		where	nr_seq_proc_interno				= nr_seq_interno_p 
		and	nvl(cd_convenio, cd_convenio_p)		= cd_convenio_p 
		and	nvl(cd_edicao_amb, cd_edicao_amb_w)	= cd_edicao_amb_w; 
	elsif (ie_tipo_convenio_w = 3) then 
		select	nvl(max(a.cd_procedimento), cd_procedimento_w), 
			nvl(max(a.ie_origem_proced), ie_origem_proced_w) 
		into	cd_procedimento_w, 
			ie_origem_proced_w 
		from	proc_interno_conv a 
		where	a.nr_seq_proc_interno		= nr_seq_interno_p 
		and	nvl(a.cd_convenio, cd_convenio_p)	= cd_convenio_p 
		and	a.nr_sequencia = 
			(select max(x.nr_sequencia) 
			from	proc_interno_conv x 
			where	x.nr_seq_proc_interno		= a.nr_seq_proc_interno 
			and	nvl(x.cd_convenio, cd_convenio_p)	= nvl(a.cd_convenio, cd_convenio_p)); 
 	end if; 
*/
 
	if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') or (cd_edicao_amb_w IS NOT NULL AND cd_edicao_amb_w::text <> '') or (ie_tipo_atendimento_w IS NOT NULL AND ie_tipo_atendimento_w::text <> '') or (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') then 
		open c01;
		loop 
		fetch c01 into	cd_proced_conv_w, 
					ie_origem_proced_conv_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			cd_procedimento_w	:= cd_proced_conv_w;
			ie_origem_proced_w	:= ie_origem_proced_conv_w;
			end;
		end loop;
		close c01;
	end if;
	end;
end if;
 
cd_procedimento_p	:= cd_procedimento_w;
ie_origem_proced_p	:= ie_origem_proced_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_proc_tab_inter_cons_pre (nr_seq_interno_p bigint, nr_seq_agenda_p bigint, cd_convenio_p bigint, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint) FROM PUBLIC;

