-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_guia_intercambio ( nr_seq_guia_p bigint, nr_seq_proc_guia_p bigint, nr_seq_mat_guia_p bigint, ie_status_p text, ds_observacao_p text, cd_senha_externa_p text, dt_valid_senha_ext_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_registros_neg_w		bigint	:= 0;
qt_registros_aprov_w		bigint	:= 0;
ie_status_w			varchar(4);
ie_estagio_w			smallint;
nr_seq_segurado_w		bigint;
dt_solicitacao_w		timestamp;
ie_tipo_guia_w			varchar(4);
qt_dia_solicitado_w		bigint;
qt_dias_validade_w		bigint;
qt_dia_autorizado_w		bigint;
dt_validade_w			timestamp;
cd_senha_w			varchar(20);
qt_solicitada_w			pls_guia_plano_proc.qt_solicitada%type;
qt_autorizada_w			pls_guia_plano_proc.qt_autorizada%type;
qt_reg_proc_neg_w		bigint	:= 0;
qt_reg_proc_aprov_w		bigint	:= 0;
qt_reg_mat_neg_w		bigint	:= 0;
qt_reg_mat_aprov_w		bigint	:= 0;
dt_valid_senha_ext_w		timestamp;
qt_reg_proc_w			bigint	:= 0;
qt_reg_mat_w			bigint	:= 0;
qt_registros_proc_mat_w		bigint	:= 0;
qt_reg_analise_w		bigint	:= 0;

ie_gerar_senha_interna_w	pls_param_intercambio_scs.ie_gerar_senha_interna%type;


BEGIN

-- Verificar o parâmetro na função OPS - Gestão de Operadoras / Parâmetros OPS / Intercâmbio / Intercâmbio SCS
begin
	select	ie_gerar_senha_interna
	into STRICT	ie_gerar_senha_interna_w
	from	pls_param_intercambio_scs;
exception
when others then
	ie_gerar_senha_interna_w := null;
end;

if (nr_seq_proc_guia_p IS NOT NULL AND nr_seq_proc_guia_p::text <> '') then
	select	qt_solicitada,
		qt_autorizada
	into STRICT	qt_solicitada_w,
		qt_autorizada_w
	from	pls_guia_plano_proc
	where	nr_sequencia	= nr_seq_proc_guia_p;

	if (coalesce(qt_autorizada_w,0) = 0) then
		qt_autorizada_w := qt_solicitada_w;
	end if;

	if (ie_status_p	= 'L') then
		update	pls_guia_plano_proc
		set	ie_status	= ie_status_p,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			qt_autorizada	= qt_autorizada_w
		where	nr_sequencia	= nr_seq_proc_guia_p;
	elsif (ie_status_p	= 'K') then
		update	pls_guia_plano_proc
		set	ie_status	= ie_status_p,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			qt_autorizada	= 0
		where	nr_sequencia	= nr_seq_proc_guia_p;
	end if;
elsif (nr_seq_mat_guia_p IS NOT NULL AND nr_seq_mat_guia_p::text <> '') then
	select	qt_solicitada,
		qt_autorizada
	into STRICT	qt_solicitada_w,
		qt_autorizada_w
	from	pls_guia_plano_mat
	where	nr_sequencia	= nr_seq_mat_guia_p;

	if (coalesce(qt_autorizada_w,0) = 0) then
		qt_autorizada_w := qt_solicitada_w;
	end if;

	if (ie_status_p	= 'L') then
		update	pls_guia_plano_mat
		set	ie_status	= ie_status_p,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			qt_autorizada	= qt_autorizada_w
		where	nr_sequencia	= nr_seq_mat_guia_p;
	elsif (ie_status_p	= 'K') then
		update	pls_guia_plano_mat
		set	ie_status	= ie_status_p,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			qt_autorizada	= 0
		where	nr_sequencia	= nr_seq_mat_guia_p;
	end if;
elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	select	count(1)
	into STRICT	qt_reg_proc_neg_w
	from	pls_guia_plano_proc
	where	ie_status		in ('K', 'N')
	and	nr_seq_guia		= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

	select	count(1)
	into STRICT	qt_reg_proc_aprov_w
	from	pls_guia_plano_proc
	where	ie_status		in ('L','S')
	and	nr_seq_guia		= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

	select	count(1)
	into STRICT	qt_reg_proc_w
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

	select	count(1)
	into STRICT	qt_reg_mat_neg_w
	from	pls_guia_plano_mat
	where	ie_status		in ('K', 'N')
	and	nr_seq_guia		= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

	select	count(1)
	into STRICT	qt_reg_mat_aprov_w
	from	pls_guia_plano_mat
	where	ie_status		in ('L','S')
	and	nr_seq_guia		= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

	select	count(1)
	into STRICT	qt_reg_mat_w
	from	pls_guia_plano_mat
	where	nr_seq_guia		= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

	qt_registros_aprov_w	:= qt_reg_proc_aprov_w 	+ qt_reg_mat_aprov_w;
	qt_registros_neg_w	:= qt_reg_proc_neg_w 	+ qt_reg_mat_neg_w;
	qt_registros_proc_mat_w	:= qt_reg_proc_w	+ qt_reg_mat_w;

	if (dt_valid_senha_ext_p IS NOT NULL AND dt_valid_senha_ext_p::text <> '') then
		dt_valid_senha_ext_w	:= to_date(dt_valid_senha_ext_p);
	end if;

	if	(qt_registros_proc_mat_w	>	(qt_registros_aprov_w	+ qt_registros_neg_w)) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(185846);
	else
		if (qt_registros_neg_w	> 0) and (qt_registros_aprov_w	= 0)  then
			ie_status_w	:= '3';
			ie_estagio_w	:= 4;
		elsif (qt_registros_aprov_w	> 0) and (qt_registros_neg_w	= 0) then
			ie_status_w	:= '1';
			ie_estagio_w	:= 6;
		elsif (qt_registros_neg_w	> 0) and (qt_registros_aprov_w	> 0) then
			ie_status_w	:= '1';
			ie_estagio_w	:= 10;
		end if;
	end if;

	select	nr_seq_segurado,
		dt_solicitacao,
		ie_tipo_guia,
		qt_dia_solicitado,
		qt_dia_autorizado
	into STRICT	nr_seq_segurado_w,
		dt_solicitacao_w,
		ie_tipo_guia_w,
		qt_dia_solicitado_w,
		qt_dia_autorizado_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;

	qt_dias_validade_w := (pls_obter_param_padrao_funcao(11, 1247))::numeric;

	if (coalesce(ie_gerar_senha_interna_w,'S')	= 'S') then
		begin
			SELECT * FROM pls_gerar_validade_senha(nr_seq_guia_p, nr_seq_segurado_w, qt_dias_validade_w, dt_solicitacao_w, ie_tipo_guia_w, nm_usuario_p, dt_validade_w, cd_senha_w) INTO STRICT dt_validade_w, cd_senha_w;

			if (dt_valid_senha_ext_w IS NOT NULL AND dt_valid_senha_ext_w::text <> '') then
				dt_validade_w := dt_valid_senha_ext_w;
			end if;
		exception
		when others then
			CALL pls_guia_gravar_historico(	nr_seq_guia_p,2,
							'Problema na conversão da data de solicitação.',
							'', nm_usuario_p);
			dt_validade_w	:= null;
			cd_senha_w		:= null;
		end;
	else
		dt_validade_w	:= null;
		cd_senha_w		:= null;
	end if;

	if (ie_status_w = '3') then
		cd_senha_w	:= null;
		dt_validade_w	:= null;
		if (qt_dia_solicitado_w IS NOT NULL AND qt_dia_solicitado_w::text <> '') then
			qt_dia_autorizado_w	:= 0;
		else
			qt_dia_autorizado_w	:= null;
		end if;
	end if;

	update	pls_guia_plano
	set	ie_status		= ie_status_w,
		ie_estagio		= ie_estagio_w,
		dt_autorizacao		= clock_timestamp(),
		dt_validade_senha	= dt_validade_w,
		nm_usuario		= nm_usuario_p,
		qt_dia_autorizado	= qt_dia_autorizado_w,
		dt_liberacao		= clock_timestamp(),
		nm_usuario_liberacao	= nm_usuario_p,
		cd_senha		= cd_senha_w,
		cd_senha_externa	= cd_senha_externa_p,
		dt_valid_senha_ext	= dt_valid_senha_ext_w,
		ds_observacao		= CASE WHEN ds_observacao_p='' THEN ds_observacao  ELSE ds_observacao_p END
	where	nr_sequencia		= nr_seq_guia_p;
	/* Retirada a restrição de estabelecimento por solicitação da Unimed Litoral OS417489
	and	cd_estabelecimento	= cd_estabelecimento_p;
	*/
	CALL pls_guia_gravar_historico(nr_seq_guia_p,5,substr('Senha externa: '||cd_senha_externa_p||
	' / Observação: O usuário '||nm_usuario_p||' fez a liberação manual de guia de intercâmbio em '||to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')||
	' / Status: '||substr(obter_valor_dominio(1747,ie_status_w),1,255),1,4000),null,nm_usuario_p);

	select	count(1)
	into STRICT	qt_reg_analise_w
	from	pls_auditoria
	where	nr_seq_guia	= nr_seq_guia_p
	and	coalesce(dt_liberacao::text, '') = ''
	and	ie_status	<> 'F';

	if (qt_reg_analise_w	> 0) then
		update	pls_auditoria
		set	ie_status	= 'F',
			dt_liberacao	= clock_timestamp(),
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_seq_guia	= nr_seq_guia_p;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_guia_intercambio ( nr_seq_guia_p bigint, nr_seq_proc_guia_p bigint, nr_seq_mat_guia_p bigint, ie_status_p text, ds_observacao_p text, cd_senha_externa_p text, dt_valid_senha_ext_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

