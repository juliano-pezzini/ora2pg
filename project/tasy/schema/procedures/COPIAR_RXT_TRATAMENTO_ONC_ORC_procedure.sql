-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_rxt_tratamento_onc_orc ( nr_seq_orcamento_p bigint, nr_seq_tratamento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
cd_procedimento_w		orcamento_paciente_proc.cd_procedimento%type	:= 0;
ie_origem_proced_w		orcamento_paciente_proc.ie_origem_proced%type;
nr_seq_proc_interno_w		orcamento_paciente_proc.nr_seq_proc_interno%type	:= 0;
ie_regra_lancam_w       	varchar(2);
cd_estabelecimento_w		orcamento_paciente.cd_estabelecimento%type;
cd_convenio_w			orcamento_paciente.cd_convenio%type;
cd_categoria_w			orcamento_paciente.cd_categoria%type;
ds_erro_w			varchar(255);
ie_gerar_lanc_aut_w		varchar(1);
existe_prot_convenio_w bigint;

C01 CURSOR FOR
	SELECT	a.nr_seq_proc_interno,
		coalesce(a.ie_regra_lancamento,'T')
	from	rxt_protocolo_proc_exec	a,
		rxt_tratamento		b,
		rxt_tumor		c
	where	b.nr_sequencia		= nr_seq_tratamento_p
	and	a.nr_seq_protocolo	= b.nr_seq_protocolo
	and	c.nr_sequencia			= b.nr_seq_tumor
	and (a.cd_convenio = cd_convenio_w or (coalesce(a.cd_convenio::text, '') = '' and existe_prot_convenio_w = 0))
	and (a.nr_seq_modalidade = b.nr_seq_modalidade or (coalesce(a.nr_seq_modalidade::text, '') = '' and existe_prot_convenio_w = 0))
	and (coalesce(a.ie_regra_lancamento,'T') in ('DS','PD','AC','T','CF'))
	
union all

	SELECT	a.nr_seq_proc_interno,
		a.ie_regra_lancamento
	from	rxt_tipo_trat_proced	a,
		rxt_tumor		c,
		rxt_tratamento		b
	where	b.nr_sequencia	= nr_seq_tratamento_p
	and	a.nr_seq_tipo	= c.nr_seq_tipo
	and	c.nr_sequencia	= b.nr_seq_tumor
	and (coalesce(a.ie_regra_lancamento,'T') in ('DS','PD','AC','T','CF'))
	and	a.ie_situacao	= 'A'                           
	order by 1;


BEGIN                                                         

select	cd_estabelecimento,
	cd_convenio,
	cd_categoria
into STRICT	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w
from	orcamento_paciente
where	nr_sequencia_orcamento = nr_seq_orcamento_p;
	
ie_gerar_lanc_aut_w := Obter_Param_Usuario(106, 3, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_lanc_aut_w);

select coalesce(sum(nr_sequencia),0) into STRICT existe_prot_convenio_w
  from (SELECT a.nr_sequencia
    from rxt_protocolo_proc_exec a,
      rxt_tratamento		b,
      rxt_protocolo     c
    where a.nr_seq_protocolo = b.nr_seq_protocolo
      and b.nr_sequencia		= nr_seq_tratamento_p
      and a.cd_convenio = cd_convenio_w
      and a.nr_seq_modalidade = b.nr_seq_modalidade
      and c.ie_situacao = 'A'
    group by a.nr_sequencia
    order by 1
  ) alias2;
	
open c01;
loop
fetch c01 into
	nr_seq_proc_interno_w,
	ie_regra_lancam_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	if (ie_regra_lancam_w = 'DS') or (ie_regra_lancam_w = 'PD') or (ie_regra_lancam_w = 'AC') or (ie_regra_lancam_w = 'T')  or (ie_regra_lancam_w = 'CF') then
		
		SELECT * FROM obter_proc_tab_interno_conv(
					nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, null, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;						
		
		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
			select	nextval('orcamento_paciente_proc_seq')
			into STRICT	nr_sequencia_w
			;
		
			insert	into orcamento_paciente_proc(
					nr_sequencia_orcamento,
					cd_procedimento,
					ie_origem_proced,
					qt_procedimento,
					dt_atualizacao,
					nm_usuario,
					vl_procedimento,
					ie_valor_informado,
					nr_sequencia,
					nr_seq_proc_interno,
					ie_procedimento_principal)
			values (	nr_seq_orcamento_p,
					cd_procedimento_w,
					ie_origem_proced_w,
					1,
					clock_timestamp(),
					nm_usuario_p,
					0,
					'N',
					nr_sequencia_w,
					nr_seq_proc_interno_w,
					'N');
					
			if (ie_gerar_lanc_aut_w = 'S') then
				CALL gerar_lanc_orc_automatico(null,
							nr_seq_orcamento_p,
							34,
							nr_sequencia_w,
							nm_usuario_p);
			end if;		
		else
			ds_erro_w	:= wheb_mensagem_pck.get_texto(277376);		
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(193594,'DS_ERRO=' || ds_erro_w);
		end if;
	end if;

end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_rxt_tratamento_onc_orc ( nr_seq_orcamento_p bigint, nr_seq_tratamento_p bigint, nm_usuario_p text) FROM PUBLIC;

