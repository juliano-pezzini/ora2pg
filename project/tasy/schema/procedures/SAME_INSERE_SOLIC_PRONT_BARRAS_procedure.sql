-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE same_insere_solic_pront_barras ( ds_seq_same_prontuarios_p text, cd_pessoa_solicitante_p text, cd_setor_solicitante_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_motivo_p bigint, nr_seq_lote_p bigint, nr_atendimento_p bigint, NR_SEQ_TIPO_P bigint DEFAULT NULL) AS $body$
DECLARE


ds_seq_same_prontuarios_w	varchar(4000);
nr_sequencia_w			bigint;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
nr_seq_pront_w			bigint;
dt_prevista_w			timestamp := null;
dt_devolucao_prevista_w		timestamp := null;
qt_dias_devolucao_w		bigint := obter_valor_param_usuario(941,42,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
ie_data_devolucao_aoAtender_w	boolean := (obter_valor_param_usuario(941,173,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p) = 'S');


BEGIN
ds_seq_same_prontuarios_w := ds_seq_same_prontuarios_p;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

	select 	nextval('same_solic_pront_seq')
	into STRICT	nr_sequencia_w
	;

	if (coalesce(nr_seq_lote_p::text, '') = '') then
		if (obter_valor_param_usuario(941,39,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p) = 'S') then
			dt_prevista_w 		:= clock_timestamp() + interval '1 days';
			dt_devolucao_prevista_w := clock_timestamp() + interval '1 days';
		elsif (qt_dias_devolucao_w > 0 AND not ie_data_devolucao_aoAtender_w) then
			dt_devolucao_prevista_w := clock_timestamp() + qt_dias_devolucao_w;
		end if;
	end if;

	insert into same_solic_pront(
		nr_sequencia,
		cd_estabelecimento,
		dt_solicitacao,
		dt_atualizacao,
		nm_usuario,
		ie_status,
		cd_pessoa_fisica,
		cd_pessoa_solicitante,
		ie_tipo_solicitacao,
		ie_urgente,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_setor_solicitante,
		dt_prevista,
		dt_devolucao_prevista,
		nr_seq_motivo,
		nr_seq_lote,
		nr_atendimento,
      NR_SEQ_TIPO
	) values (
		nr_sequencia_w,
		cd_estabelecimento_p,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		'P',
		cd_pessoa_fisica_p,
		cd_pessoa_solicitante_p,
		'O',
		'N',
		clock_timestamp(),
		nm_usuario_p,
		cd_setor_solicitante_p,
		dt_prevista_w,
		dt_devolucao_prevista_w,
		nr_seq_motivo_p,
		nr_seq_lote_p,
		nr_atendimento_p,
      NR_SEQ_TIPO_P);

	-- Varre sequencia de itens para registro dos prontuarios da solicitação (Envelopes)
	while(ds_seq_same_prontuarios_w IS NOT NULL AND ds_seq_same_prontuarios_w::text <> '') loop
		begin
		tam_lista_w		:= length(ds_seq_same_prontuarios_w);
		ie_pos_virgula_w	:= position(',' in ds_seq_same_prontuarios_w);

		if (ie_pos_virgula_w <> 0) then
			nr_seq_pront_w			:= substr(ds_seq_same_prontuarios_w,1,(ie_pos_virgula_w - 1));
			ds_seq_same_prontuarios_w	:= substr(ds_seq_same_prontuarios_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;

		insert into same_solic_pront_envelope(
			nr_sequencia,
			nr_seq_solic,
			nr_seq_prontuario,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec
		) values (
			nextval('same_solic_pront_envelope_seq'),
			nr_sequencia_w,
			nr_seq_pront_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p
		);
		end;
	end loop;

	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE same_insere_solic_pront_barras ( ds_seq_same_prontuarios_p text, cd_pessoa_solicitante_p text, cd_setor_solicitante_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_motivo_p bigint, nr_seq_lote_p bigint, nr_atendimento_p bigint, NR_SEQ_TIPO_P bigint DEFAULT NULL) FROM PUBLIC;

