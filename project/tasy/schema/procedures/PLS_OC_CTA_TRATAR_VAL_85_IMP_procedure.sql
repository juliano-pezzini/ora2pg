-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_85_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Validar os valores dos procedimento e materiais
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
*/
ds_select_proc_w	varchar(2000);
ds_select_mat_w		varchar(2000);
ds_restricao_proc_w	varchar(1000);
ds_restricao_mat_w	varchar(1000);
ds_select_w		varchar(4000);
cursor_w		sql_pck.t_cursor;
valor_bind_w		sql_pck.t_dado_bind;
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_valido_w		pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;

-- Informações da regra de validação
C01 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_qt_apresentada,
		a.ie_vl_apresentada,
		a.ie_vl_unitario_apresentado,
		a.ie_vl_total_apresentado,
		coalesce(a.vl_tolerancia,0) vl_tolerancia
	from	pls_oc_cta_val_apres a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_pc;

BEGIN
-- Deve existir informação da regra para executar a validação
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'V',
							'N',
							nr_id_transacao_p,
							null);

	-- Buscar a parametrização da validação conforme cadastrado pelos usuários.
	for	r_C01_w in C01(nr_seq_combinada_p) loop

		ds_select_proc_w :=	'select	sel.nr_sequencia nr_seq_selecao,' || pls_util_pck.enter_w ||
					'	''S'' ie_valido, ' || pls_util_pck.enter_w ||
					'	sel.ds_observacao ' || pls_util_pck.enter_w ||
					'from	pls_oc_cta_selecao_imp sel,  ' || pls_util_pck.enter_w ||
					'	pls_conta_proc_imp proc' || pls_util_pck.enter_w ||
					'where	sel.nr_id_transacao = :nr_id_transacao' || pls_util_pck.enter_w ||
					'and	sel.ie_valido = ''S''' || pls_util_pck.enter_w ||
					'and	proc.nr_sequencia = sel.nr_seq_conta_proc ';

		valor_bind_w := sql_pck.bind_variable(	':nr_id_transacao', nr_id_transacao_p, valor_bind_w);

		if (r_C01_w.ie_qt_apresentada = 'S') then
			ds_restricao_proc_w :=	ds_restricao_proc_w || pls_util_pck.enter_w ||
						' and proc.qt_executado < 0 ';
		elsif (r_c01_w.ie_vl_apresentada  = 'S') then
			ds_restricao_proc_w :=	ds_restricao_proc_w || pls_util_pck.enter_w ||
						' and proc.vl_total < 0 ';
		elsif (r_c01_w.ie_vl_unitario_apresentado  = 'S') then
			ds_restricao_proc_w :=	ds_restricao_proc_w || pls_util_pck.enter_w ||
						' and proc.vl_unitario < 0 ';
		elsif (r_C01_w.ie_vl_total_apresentado = 'S') then
			ds_restricao_proc_w := ds_restricao_proc_w || pls_util_pck.enter_w ||
						' and pls_valida_valor_total(proc.vl_unitario, proc.vl_total, proc.qt_executado, :vl_tolerancia) = ''N'' ';
			valor_bind_w := sql_pck.bind_variable(	':vl_tolerancia', r_c01_w.vl_tolerancia, valor_bind_w);
		end if;

		ds_select_mat_w :=	' union  all' || pls_util_pck.enter_w ||
					' select 	sel.nr_sequencia nr_seq_selecao,' || pls_util_pck.enter_w ||
					' 	 ''S'' ie_valido,' || pls_util_pck.enter_w ||
					' 	 sel.ds_observacao ' || pls_util_pck.enter_w ||
					' from	 pls_oc_cta_selecao_imp sel,  ' || pls_util_pck.enter_w ||
					' 	 pls_conta_mat_imp mat' || pls_util_pck.enter_w ||
					' where	 sel.nr_id_transacao = :nr_id_transacao' || pls_util_pck.enter_w ||
					' and	 sel.ie_valido = ''S''' || pls_util_pck.enter_w ||
					' and	 mat.nr_sequencia = sel.nr_seq_conta_mat';

		if (r_C01_w.ie_qt_apresentada = 'S') then
			ds_restricao_mat_w := ds_restricao_mat_w || pls_util_pck.enter_w ||
						' and mat.qt_executado < 0 ';
		elsif (r_C01_w.ie_vl_apresentada = 'S') then
			ds_restricao_mat_w := ds_restricao_mat_w || pls_util_pck.enter_w ||
						' and mat.vl_total < 0 ';
		elsif (r_C01_w.ie_vl_unitario_apresentado = 'S') then
			ds_restricao_mat_w := ds_restricao_mat_w || pls_util_pck.enter_w ||
						' and mat.vl_unitario < 0 ';
		elsif (r_C01_w.ie_vl_total_apresentado = 'S') then
			ds_restricao_mat_w := ds_restricao_mat_w || pls_util_pck.enter_w ||
						' and pls_valida_valor_total(mat.vl_unitario, mat.vl_total, mat.qt_executado, :vl_tolerancia) = ''N'' ';
		end if;

		ds_select_w := ds_select_proc_w || ds_restricao_proc_w || ds_select_mat_w || ds_restricao_mat_w;
		valor_bind_w := sql_pck.executa_sql_cursor(	ds_select_w, valor_bind_w);
		loop
			fetch cursor_w bulk collect into tb_seq_selecao_w, tb_valido_w, tb_observacao_w
			limit pls_util_pck.qt_registro_transacao_w;
			exit when tb_seq_selecao_w.count = 0;

			--Grava as informações na tabela de seleção
			CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
									tb_valido_w,
									tb_observacao_w,
									nr_id_transacao_p,
									'SEQ');
			--limpa as variáveis
			SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
		end loop;
		close cursor_w;

		if (tb_seq_selecao_w.count > 0) then
			--Grava o que restar nas variáveis na tabela
			CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
									tb_valido_w,
									tb_observacao_w,
									nr_id_transacao_p,
									'SEQ');

		end if;

		-- seta os registros que serão válidos ou inválidos após o processamento
		CALL pls_ocor_imp_pck.atualiza_campo_valido('V',
							'N',
							ie_regra_excecao_p,
							null,
							nr_id_transacao_p,
							null);

	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_85_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

