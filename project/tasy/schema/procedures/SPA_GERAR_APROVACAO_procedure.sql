-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE spa_gerar_aprovacao ( nr_seq_spa_p bigint, nm_usuario_p text, ie_rota_aprov_p INOUT text) AS $body$
DECLARE


nr_seq_tipo_w		bigint;
nr_seq_motivo_w		bigint;
cd_centro_custo_w	integer;
nr_seq_estrut_w		bigint;
nr_seq_rota_w		bigint;
ie_tipo_responsavel_w	varchar(1);
cd_cargo_w		bigint;
nm_usuario_aprovacao_w	varchar(15);
nr_ordem_w		smallint;
nr_menor_ordem_w	smallint;
dt_lib_aprov_w		timestamp;
nr_seq_resp_w		bigint;
nr_seq_regra_resp_w	bigint;
nr_mes_nf_w		smallint;
nr_parcelas_w		double precision;
vl_perc_desc_acum_w	double precision;
vl_desconto_acum_w	double precision;
pr_juros_w		double precision;
ie_gerou_aprovacao_w	varchar(1) := 'N';
ie_tipo_convenio_w	smallint;
ie_aplicou_regra_w	varchar(1) := 'S';
cd_solicitante_w	varchar(10);
vl_negociado_w		double precision;
nr_nivel_w		integer;
nr_seq_regra_resp_ant_w	bigint;
cd_cargo_ant_w		bigint;
nr_nivel_ant_w		bigint;
nr_ult_nivel_ant_w	bigint;
ie_primeiro_nivel_w	varchar(1);
cd_responsavel_w	varchar(10);
cd_cargo_resp_w		bigint;
nm_usuario_resp_w	varchar(15);
qt_aprov_resp_w		bigint;
qt_spa_lib_w		bigint;
dt_aprov_logado_w	timestamp;
nr_nivel_cargo_resp_w	bigint;
nr_seq_nf_regra_w	bigint;
ie_rota_aprov_w		varchar(1);
nr_seq_aprovacao_w	bigint;
nr_seq_aprov_logado_w	bigint;
nm_usuario_aprov_ant_w 	 varchar(15);--spa_rota_aprov_resp_regra.nm_usuario_aprov%type;
nm_usuario_resp_spa_w		usuario.nm_usuario%type;
qt_prorrogacao_w	spa_rota_aprov_resp_regra.qt_prorrogacao_inicial%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_rota
	from	spa_rota_aprov_estrut 	a,
		spa_rota_aprovacao 	b
	where	b.nr_sequencia = a.nr_seq_rota
	and  	coalesce(a.nr_seq_tipo, coalesce(nr_seq_tipo_w,0)) = coalesce(nr_seq_tipo_w,0)
	and	coalesce(a.nr_seq_motivo, coalesce(nr_seq_motivo_w,0)) = coalesce(nr_seq_motivo_w,0)
	and	coalesce(a.cd_centro_custo, coalesce(cd_centro_custo_w,0)) = coalesce(cd_centro_custo_w,0)
	and	coalesce(a.ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0)
	and 	b.ie_situacao = 'A'
	and	a.ie_situacao = 'A'
	order by coalesce(a.nr_seq_tipo,0),
		coalesce(a.nr_seq_motivo,0),
		coalesce(a.cd_centro_custo,0),
		coalesce(a.ie_tipo_convenio,0);
		
C02 CURSOR FOR
	SELECT	nr_sequencia,
		ie_tipo_responsavel,
		nm_usuario_aprovacao,
		cd_cargo,
		nr_ordem
	from	spa_rota_aprov_resp
	where	nr_seq_estrutura = nr_seq_estrut_w
	order by nr_ordem;
	
C03 CURSOR FOR
	SELECT	nr_sequencia,
		cd_cargo,		
		nm_usuario_aprov,
		nr_nivel
	from	spa_rota_aprov_resp_regra
	where	1 = 1
	and ((coalesce(nr_mes_nf_w::text, '') = '') or (nr_mes_nf_w between coalesce(nr_mes_inicial, nr_mes_nf_w) and coalesce(nr_mes_final, nr_mes_nf_w)))
		and	((nr_parcelas_w = 0) or (nr_parcelas_w between coalesce(nr_parcelas_inicial, nr_parcelas_w) and coalesce(nr_parcelas_final, nr_parcelas_w)))
	and	(((pr_juros_w = 0) and (coalesce(ie_juros,'N') = 'N')) or
		 ((pr_juros_w > 0) and (coalesce(ie_juros,'N') = 'S')))
	and (vl_perc_desc_acum_w between coalesce(pr_desconto_inicial, vl_perc_desc_acum_w) and coalesce(pr_desconto_final, vl_perc_desc_acum_w)
	or	vl_desconto_acum_w between coalesce(vl_desconto_inicial, vl_desconto_acum_w) and coalesce(vl_desconto_final, vl_desconto_acum_w))
	and	vl_negociado_w between coalesce(vl_negoc_minimo, vl_negociado_w) and coalesce(vl_negoc_maximo, vl_negociado_w)	
	and (coalesce(qt_prorrogacao_w::text, '') = '' or qt_prorrogacao_w between coalesce(qt_prorrogacao_inicial,0) and coalesce(qt_prorrogacao_final,0))
	and	coalesce(nr_seq_rota, coalesce(nr_seq_rota_w,0)) = coalesce(nr_seq_rota_w,0)
	order by	nr_nivel desc;
	
C04 CURSOR FOR
	SELECT	nr_sequencia,
		cd_cargo,
		nm_usuario_aprov,
		nr_nivel
	from	spa_rota_aprov_resp_regra
	where	coalesce(nr_seq_rota, coalesce(nr_seq_rota_w,0)) = coalesce(nr_seq_rota_w,0)
	and	nr_nivel < nr_nivel_w
	order by	nr_nivel;
			

BEGIN

ie_rota_aprov_w	:= 'S';

select	max(nr_seq_tipo),
	max(nr_seq_motivo),
	max(cd_centro_custo),
	max(ie_tipo_convenio),
	max(cd_solicitante),
	max(cd_responsavel)
into STRICT	nr_seq_tipo_w,
	nr_seq_motivo_w,
	cd_centro_custo_w,
	ie_tipo_convenio_w,
	cd_solicitante_w,
	cd_responsavel_w
from	spa
where	nr_sequencia = nr_seq_spa_p;

select	max(cd_cargo)
into STRICT	cd_cargo_resp_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_responsavel_w;

select 	max(nm_usuario)
into STRICT	nm_usuario_resp_spa_w
from 	usuario
where 	cd_pessoa_fisica = cd_responsavel_w;

select	spa_obter_nota_fiscal_regra(nr_seq_spa_p)
into STRICT	nr_seq_nf_regra_w
;

if (coalesce(nr_seq_nf_regra_w,0) > 0) then
	select	coalesce(trunc(months_between(clock_timestamp(), max(to_date(obter_dados_nota_fiscal(nr_seq_nf_regra_w,9))))),0)
	into STRICT	nr_mes_nf_w
	;
end if;

select	coalesce(sum(vl_negociado),0),
	coalesce(sum(pr_juros),0)
into STRICT	nr_parcelas_w,
	pr_juros_w
from	spa_negociacao
where	cd_forma_negociacao = 4 /*Parcelamento*/
and	nr_seq_spa = nr_seq_spa_p;

select	coalesce(sum(vl_negociado),0)
into STRICT	vl_negociado_w
from	spa_negociacao
where	cd_forma_negociacao not in (4,7) /*Qualquer outra que nao eh parcelamento e prorrogacao*/
and	nr_seq_spa = nr_seq_spa_p;

begin
select	coalesce(sum(vl_negociado),0)
into STRICT	qt_prorrogacao_w
from	spa_negociacao
where	cd_forma_negociacao 	= 7 /*Prorrogacao*/
and	nr_seq_spa 		= nr_seq_spa_p;
exception
when others then
	qt_prorrogacao_w := 0;
end;

select	coalesce(spa_obter_valores(nr_seq_spa_p, 'DAC'),0),
	coalesce(spa_obter_valores(nr_seq_spa_p, 'PDO'),0)
into STRICT	vl_desconto_acum_w,
	vl_perc_desc_acum_w
;

open C01;
loop
fetch C01 into	
	nr_seq_estrut_w,
	nr_seq_rota_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	nr_seq_estrut_w		:= nr_seq_estrut_w;
	nr_seq_rota_w		:= nr_seq_rota_w;
	end;
end loop;
close C01;

if (coalesce(nr_seq_estrut_w,0) > 0) then

	select	min(nr_ordem)
	into STRICT	nr_menor_ordem_w
	from	spa_rota_aprov_resp
	where	nr_seq_estrutura = nr_seq_estrut_w;

	open C02; /*TODOS OS RESPONSAVEIS DA ESTRUTURA*/
	loop
	fetch C02 into
		nr_seq_resp_w,
		ie_tipo_responsavel_w,
		nm_usuario_aprovacao_w,
		cd_cargo_w,
		nr_ordem_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		nr_seq_regra_resp_w	:= null;
		nr_nivel_w		:= null;
		ie_primeiro_nivel_w	:= 'N';
		
		if (nr_ordem_w = nr_menor_ordem_w) then
			dt_lib_aprov_w	:= clock_timestamp();
		else
			dt_lib_aprov_w	:= null;
		end if;
		
		if (ie_tipo_responsavel_w = 'R') then
		
			ie_aplicou_regra_w	:= 'N';
			open C03;/*regra de responsaveis*/
			loop
			fetch C03 into
				nr_seq_regra_resp_w,
				cd_cargo_w,
				nm_usuario_aprovacao_w,
				nr_nivel_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin				
				ie_aplicou_regra_w	:= 'S';
				nr_seq_regra_resp_w	:= nr_seq_regra_resp_w;
				cd_cargo_w		:= cd_cargo_w;
				nm_usuario_aprovacao_w	:= nm_usuario_aprovacao_w;
				nr_nivel_w		:= nr_nivel_w;
				end;
			end loop;
			close C03;
			
			if (ie_aplicou_regra_w = 'S') then							
				
				nr_ult_nivel_ant_w	:= 0;
			
				open C04;/*regra de responsaveis por nivel*/
				loop
				fetch C04 into	
					nr_seq_regra_resp_ant_w,
					cd_cargo_ant_w,
					nm_usuario_aprov_ant_w,
					nr_nivel_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					
					if (nr_nivel_ant_w <> nr_ult_nivel_ant_w) then
					
						dt_aprov_logado_w := null;
						
						select	coalesce(max(nr_nivel),0)
						into STRICT	nr_nivel_cargo_resp_w
						from	spa_rota_aprov_resp_regra
						where	coalesce(nr_seq_rota, coalesce(nr_seq_rota_w,0)) = coalesce(nr_seq_rota_w,0)
						and	nr_nivel <= nr_nivel_w
						and	((cd_cargo = cd_cargo_resp_w) or (nm_usuario_aprov = nm_usuario_resp_spa_w)); --ou cargo ou usuario
						
						if (coalesce(nr_nivel_cargo_resp_w,0) > 0) and (coalesce(nr_nivel_cargo_resp_w,0) >= coalesce(nr_nivel_ant_w,0)) then
							dt_aprov_logado_w := clock_timestamp();
						end if;
						
						select	nextval('spa_aprovacao_seq')
						into STRICT	nr_seq_aprovacao_w
						;
					
						insert into spa_aprovacao(
							nr_sequencia, nr_seq_spa, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_estrut, nr_seq_rota_aprov, nr_seq_resp, nm_usuario_aprov, cd_cargo_aprov, dt_geracao,
							dt_aprovacao, dt_cancelamento, dt_lib_aprov, nr_seq_regra_resp, nr_ordem, nr_nivel)
						values (	nr_seq_aprovacao_w, nr_seq_spa_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							nr_seq_estrut_w, nr_seq_rota_w, nr_seq_resp_w, nm_usuario_aprov_ant_w, cd_cargo_ant_w,
							clock_timestamp(), dt_aprov_logado_w, null, coalesce(dt_aprov_logado_w, dt_lib_aprov_w), nr_seq_regra_resp_ant_w, nr_ordem_w,
							nr_nivel_ant_w);
							
						if (coalesce(cd_cargo_ant_w,0) = coalesce(cd_cargo_resp_w,0) or (nm_usuario_aprov_ant_w = nm_usuario_resp_spa_w)) and (dt_aprov_logado_w IS NOT NULL AND dt_aprov_logado_w::text <> '') then
							nr_seq_aprov_logado_w	:= nr_seq_aprovacao_w;
						end if;
					
						nr_ult_nivel_ant_w	:= nr_nivel_ant_w;
						
						if (ie_primeiro_nivel_w = 'N') and (coalesce(dt_aprov_logado_w::text, '') = '') then
							ie_primeiro_nivel_w	:= 'S';
							dt_lib_aprov_w		:= null;
						end if;
					end if;
					
					end;
				end loop;
				close C04;
				
			end if;
		
		elsif (ie_tipo_responsavel_w = 'S') then
		
			select	max(nm_usuario)
			into STRICT	nm_usuario_aprovacao_w
			from	usuario
			where	cd_pessoa_fisica = cd_solicitante_w;
		
		end if;
		
		if	((ie_tipo_responsavel_w = 'R' AND ie_aplicou_regra_w = 'S') or (ie_tipo_responsavel_w <> 'R')) then
			
			dt_aprov_logado_w := null;
			if	((coalesce(cd_cargo_w,0) > 0) and (coalesce(cd_cargo_w,0) = coalesce(cd_cargo_resp_w,0)))
				or(nm_usuario_aprovacao_w IS NOT NULL AND nm_usuario_aprovacao_w::text <> '' AND nm_usuario_aprovacao_w = nm_usuario_resp_spa_w) then
				dt_aprov_logado_w	:= clock_timestamp();
			end if;
			
			select	nextval('spa_aprovacao_seq')
			into STRICT	nr_seq_aprovacao_w
			;
		
			insert into spa_aprovacao(
				nr_sequencia, nr_seq_spa, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_estrut,
				nr_seq_rota_aprov, nr_seq_resp, nm_usuario_aprov, cd_cargo_aprov, dt_geracao, dt_aprovacao, dt_cancelamento,
				dt_lib_aprov, nr_seq_regra_resp, nr_ordem, nr_nivel)
			values (	nr_seq_aprovacao_w, nr_seq_spa_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, nr_seq_estrut_w,
				nr_seq_rota_w, nr_seq_resp_w, nm_usuario_aprovacao_w, cd_cargo_w, clock_timestamp(), dt_aprov_logado_w, null,
				coalesce(dt_aprov_logado_w, dt_lib_aprov_w), nr_seq_regra_resp_w, nr_ordem_w, nr_nivel_w);
				
			if	(coalesce(cd_cargo_w,0) = coalesce(cd_cargo_resp_w,0) or
				(nm_usuario_aprovacao_w IS NOT NULL AND nm_usuario_aprovacao_w::text <> '' AND nm_usuario_aprovacao_w = nm_usuario_resp_spa_w)) and (dt_aprov_logado_w IS NOT NULL AND dt_aprov_logado_w::text <> '') then
				nr_seq_aprov_logado_w	:= nr_seq_aprovacao_w;
			end if;
			
			ie_gerou_aprovacao_w := 'S';
		
		end if;
		
		end;
	end loop;
	close C02;

end if;

if (coalesce(nr_seq_aprov_logado_w,0) <> 0) then
	CALL spa_aprovar(nr_seq_aprov_logado_w, nm_usuario_p);
end if;

/*se usuario|cargo do responsavel da spa estiver em algum nivel acima da alcada de aprovacao,  libera as alcadas inferioes  para seguir o fluxo de aprovacao*/

if (coalesce(nr_seq_spa_p,0) > 0) then
	CALL spa_aprovar_alcada_inferior(nr_seq_spa_p,nm_usuario_p);
end if;

if (ie_gerou_aprovacao_w = 'N') then
	ie_rota_aprov_w	:= 'N';
end if;

ie_rota_aprov_p	:= coalesce(ie_rota_aprov_w,'S');

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE spa_gerar_aprovacao ( nr_seq_spa_p bigint, nm_usuario_p text, ie_rota_aprov_p INOUT text) FROM PUBLIC;

