-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_centro_custo_holding ( cd_centro_custo_p centro_custo.cd_centro_custo%type, ie_operacao_p bigint, nm_usuario_p text) AS $body$
DECLARE

			
centro_custo_w	centro_custo%rowtype;
cd_empresa_w	empresa.cd_empresa%type;

c01 CURSOR FOR
SELECT	g.cd_empresa
from	grupo_emp_estrutura g
where	g.nr_seq_grupo = holding_pck.GET_GRUPO_EMP_USUARIO(cd_empresa_w)
and	obter_se_periodo_vigente(g.dt_inicio_vigencia,g.dt_fim_vigencia,clock_timestamp()) = 'S'
and	g.cd_empresa	!= cd_empresa_w
and	not exists (SELECT	1
		from	centro_custo y
		where	obter_empresa_estab(y.cd_estabelecimento) = g.cd_empresa
		and	y.cd_centro_custo	= cd_centro_custo_p)
order by g.cd_empresa;

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	c.cd_centro_custo,
	c.cd_estabelecimento
from	centro_custo c
where	c.cd_centro_custo_ref = cd_centro_custo_p;

c02_w	c02%rowtype;


BEGIN
select	c.*
into STRICT	centro_custo_w
from	centro_custo c
where	c.cd_centro_custo = cd_centro_custo_p;

cd_empresa_w	:= obter_empresa_estab(centro_custo_w.cd_estabelecimento);

if (ie_operacao_p = 1) then
	begin
		open c01;
		loop
		fetch c01 into
			c01_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
				centro_custo_w.cd_estabelecimento	:= holding_pck.get_estabelecimento_matriz(c01_w.cd_empresa);
				if (coalesce(centro_custo_w.cd_estabelecimento,0) <> 0) then
					begin
					centro_custo_w.cd_centro_custo_ref	:= cd_centro_custo_p;
					
					select	coalesce(max(cd_centro_custo),0) + 1
					into STRICT	centro_custo_w.cd_centro_custo
					from	centro_custo;
					
					centro_custo_w.nm_usuario_nrec	:= nm_usuario_p;
					centro_custo_w.dt_atualizacao_nrec	:= clock_timestamp();
					centro_custo_w.nm_usuario		:= nm_usuario_p;
					centro_custo_w.dt_atualizacao	:= clock_timestamp();
					
					insert into centro_custo values (centro_custo_w.*);
					end;
				end if;
			end;
		end loop;
		close c01;
	end;
else
	begin
		open c02;
		loop
		fetch c02 into	
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
				update centro_custo
				set	ds_centro_custo	= centro_custo_w.ds_centro_custo,
					ie_situacao = centro_custo_w.ie_situacao,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p,
					nr_seq_terceiro = centro_custo_w.nr_seq_terceiro,
					cd_classificacao = centro_custo_w.cd_classificacao,
					ie_tipo = centro_custo_w.ie_tipo,
					cd_grupo = centro_custo_w.cd_grupo,
					cd_centro_custo_consumo	= centro_custo_w.cd_centro_custo_consumo,
					cd_sistema_contabil	= centro_custo_w.cd_sistema_contabil,
					ie_tipo_custo	= centro_custo_w.ie_tipo_custo,
					ie_periodo_proj_receita = centro_custo_w.ie_periodo_proj_receita,
					dt_fim_contabil = centro_custo_w.dt_fim_contabil,
					ds_observacao = centro_custo_w.ds_observacao
				where 	cd_centro_custo = c02_w.cd_centro_custo
				and	cd_estabelecimento = c02_w.cd_estabelecimento;
			end;
		end loop;
		close c02;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_centro_custo_holding ( cd_centro_custo_p centro_custo.cd_centro_custo%type, ie_operacao_p bigint, nm_usuario_p text) FROM PUBLIC;

