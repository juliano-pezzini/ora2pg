-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_dose_onc_ciclo ( nr_seq_atendimento_p bigint, ie_atualiza_sv_p text default 'S', nr_seq_material_p bigint default null) AS $body$
DECLARE


qt_mg_carboplatina_w		double precision;
cd_pessoa_fisica_w		varchar(10);
qt_peso_w			double precision;
qt_altura_w         		double precision;
qt_sc_sinais_vitais_w       double precision;
qt_superficie_corporea_w	double precision;
qt_superf_corporal_w		double precision;
nr_seq_paciente_w		bigint;
ie_atualiza_w			varchar(10);
qt_altura_cm_w			double precision;
nr_seq_material_w		bigint;
pr_reducao_w			bigint;
pr_reducao_setor_w		bigint;
ie_atualiza_reducao_w		varchar(10);
nr_seq_solucao_w		bigint;
ie_aplica_reducao_w		varchar(1) := 'S';
pr_reducao_item_w		double precision;
ie_formula_sup_corporea_w	varchar(10);
qt_creatinina_w			double precision;
ie_l_dl_creatinina_w		smallint;
qt_auc_w			double precision;
qt_redutor_clcr_w		double precision;
qt_clearance_w			double precision;
qt_carboplatina_w		double precision;
ie_calcular_carboplatina_aut_w	varchar(5);
qt_peso_protocolo_w		double precision;
qt_hora_aplicacao_w		double precision;
ie_calcula_preenchido_w		varchar(3);

C01 CURSOR FOR
	SELECT	qt_peso,	
        	qt_altura_cm,
		qt_superf_corporia
	from	atendimento_sinal_vital
	where	cd_paciente	= cd_pessoa_fisica_w
	and 	coalesce(ie_situacao,'A') = 'A'
	and     (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by nr_sequencia;

c02 CURSOR FOR
	SELECT	nr_seq_solucao
	from	paciente_atend_soluc
	where	nr_seq_atendimento = nr_seq_atendimento_p;

c03 CURSOR FOR
	SELECT	nr_seq_material,
		pr_reducao
	from	paciente_atend_medic a
	where	nr_seq_atendimento = nr_seq_atendimento_p
	and	coalesce(ie_aplica_reducao,'S') = 'S'
	and	coalesce(PR_REDUCAO,100)	<> 100
	and	coalesce(PR_REDUCAO,100)	<> 0
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material = nr_seq_material_p));


C04 CURSOR FOR
	SELECT	a.nr_seq_material,
		coalesce(a.qt_hora_aplicacao,1)
	from	paciente_atend_medic a,
		unidade_medida b
	where	a.nr_seq_atendimento = nr_seq_atendimento_p
	and	b.cd_unidade_medida = a.cd_unid_med_dose
	and	b.ie_mult_h_aplic = 'S'
	and	(a.qt_hora_aplicacao IS NOT NULL AND a.qt_hora_aplicacao::text <> '')
	and	a.qt_hora_aplicacao <> 0
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material = nr_seq_material_p));

c05 CURSOR FOR
	SELECT	nr_seq_material
	from	paciente_atend_medic
	where	nr_seq_atendimento = nr_seq_atendimento_p
	and	ie_regra_diluicao_cad_mat = 'S';		


BEGIN

ie_calcula_preenchido_w := Obter_Param_Usuario(281, 476, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, ie_calcula_preenchido_w);
ie_calcular_carboplatina_aut_w := Obter_param_Usuario(281, 776, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_calcular_carboplatina_aut_w);
ie_atualiza_reducao_w := Obter_param_Usuario(281, 865, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_atualiza_reducao_w);

select 	max(a.pr_reducao),
	max(ie_formula_sup_corporea)
into STRICT	pr_reducao_setor_w,
	ie_formula_sup_corporea_w
from	paciente_setor a,
	paciente_atendimento b
where	a.nr_seq_paciente 	= b.nr_seq_paciente
and	b.nr_seq_atendimento	= nr_seq_atendimento_p;

if (pr_reducao_setor_w IS NOT NULL AND pr_reducao_setor_w::text <> '') and (coalesce(pr_reducao_setor_w,0) > 0 ) and (ie_atualiza_reducao_w = 'S') 	then
	update paciente_atendimento a
	set	a.pr_reducao = pr_reducao_setor_w
	where 	a.nr_seq_atendimento 	= nr_seq_atendimento_p
	and	coalesce(a.pr_reducao::text, '') = '';
end if;

ie_atualiza_w := Obter_param_Usuario(281, 586, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_atualiza_w);
/* pegar o valor da carboplatina */

select	max(b.cd_pessoa_fisica),
	max(a.qt_peso),
  	max(a.qt_altura),
	max(round(obter_superficie_corp_red_ped(a.qt_peso, b.qt_altura, b.qt_redutor_sc, b.cd_pessoa_fisica, b.nm_usuario,b.IE_FORMULA_SUP_CORPOREA),obter_numero_casas_sc)),
	max(a.pr_reducao),
	max(a.qt_creatinina),
	max(a.ie_l_dl_creatinina),
	max(a.qt_auc),
	max(b.qt_redutor_clcr),
	max(b.qt_peso),
  	max(b.qt_altura),
	max(ie_formula_sup_corporea)
into STRICT	cd_pessoa_fisica_w,
	qt_peso_w,
  	qt_altura_w,
	qt_superficie_corporea_w,
	pr_reducao_w,
	qt_creatinina_w,
	ie_l_dl_creatinina_w,
	qt_auc_w,
	qt_redutor_clcr_w,
	qt_peso_protocolo_w,
  	qt_altura_cm_w,
	ie_formula_sup_corporea_w
from	paciente_atendimento a,
	paciente_setor b
where	a.nr_seq_paciente	= b.nr_seq_paciente
and	a.nr_seq_atendimento	= nr_seq_atendimento_p
group by a.qt_peso,
	b.qt_altura,
	b.qt_redutor_sc,
	b.cd_pessoa_fisica,
	b.nm_usuario,
	b.ie_formula_sup_corporea;

if (ie_atualiza_w = 'SV') and (coalesce(ie_atualiza_sv_p,'S') = 'S') then
	begin
		open C01;
		loop
		fetch C01 into	
			qt_peso_w,
      		qt_altura_w,
			qt_superficie_corporea_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		end loop;
		close C01;

        select max(round(obter_superficie_corp_red_ped(qt_peso_w, qt_altura_w, b.qt_redutor_sc, b.cd_pessoa_fisica, b.nm_usuario,b.IE_FORMULA_SUP_CORPOREA),obter_numero_casas_sc))
        into STRICT    qt_sc_sinais_vitais_w
        from    paciente_atendimento a,
                paciente_setor b
        where    a.nr_seq_paciente        = b.nr_seq_paciente
        and        a.nr_seq_atendimento    = nr_seq_atendimento_p;

		if (qt_peso_w IS NOT NULL AND qt_peso_w::text <> '') then
			SELECT * FROM Calcular_caboplanina_loco_reg(	cd_pessoa_fisica_w, qt_peso_w, qt_creatinina_w, ie_l_dl_creatinina_w, qt_auc_w, qt_clearance_w, qt_carboplatina_w, qt_redutor_clcr_w) INTO STRICT qt_clearance_w, qt_carboplatina_w;

			qt_superf_corporal_w := round(obter_superficie_corp_red_ped(qt_peso_w, QT_ALTURA_CM_w, 0, cd_pessoa_fisica_w, obter_usuario_ativo, ie_formula_sup_corporea_w),obter_numero_casas_sc);
				
			update paciente_atendimento
			set	qt_superf_corporal	= coalesce(qt_sc_sinais_vitais_w, qt_superf_corporal_w),
				qt_peso			= qt_peso_w,
                		qt_altura       = qt_altura_w,
				qt_clearance_creatinina	= qt_clearance_w,
				qt_mg_carboplatina	= CASE WHEN ie_calcular_carboplatina_aut_w='S' THEN qt_carboplatina_w  ELSE qt_mg_carboplatina END ,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= wheb_usuario_pck.get_nm_usuario
			where	nr_seq_atendimento = nr_seq_atendimento_p;
		end if;
	end;

elsif (ie_atualiza_w = 'PT') then
	begin
		if (qt_peso_protocolo_w IS NOT NULL AND qt_peso_protocolo_w::text <> '') then
			qt_peso_w	:= qt_peso_protocolo_w;
		end if;

    		if (qt_altura_cm_w IS NOT NULL AND qt_altura_cm_w::text <> '') then
      		qt_altura_w	:= qt_altura_cm_w;
    		end if;

		if (qt_peso_w IS NOT NULL AND qt_peso_w::text <> '') then
			SELECT * FROM Calcular_caboplanina_loco_reg(	cd_pessoa_fisica_w, qt_peso_w, qt_creatinina_w, ie_l_dl_creatinina_w, qt_auc_w, qt_clearance_w, qt_carboplatina_w, qt_redutor_clcr_w) INTO STRICT qt_clearance_w, qt_carboplatina_w;

			update paciente_atendimento
			set	qt_superf_corporal	= coalesce(qt_superficie_corporea_w,qt_superf_corporal),
				qt_peso			= qt_peso_w,
        			qt_altura       = qt_altura_w,
				qt_clearance_creatinina	= qt_clearance_w,
				qt_mg_carboplatina	= CASE WHEN ie_calcular_carboplatina_aut_w='S' THEN qt_carboplatina_w  ELSE qt_mg_carboplatina END ,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= wheb_usuario_pck.get_nm_usuario
			where	nr_seq_atendimento = nr_seq_atendimento_p;
		end if;
	end;	
elsif (ie_atualiza_w = 'N') then
begin
    qt_clearance_w := 0;
    qt_carboplatina_w := 0;
    SELECT * FROM Calcular_caboplanina_loco_reg(cd_pessoa_fisica_w, coalesce(qt_peso_w,0), coalesce(qt_creatinina_w,0), ie_l_dl_creatinina_w, coalesce(qt_auc_w,0), qt_clearance_w, qt_carboplatina_w, coalesce(qt_redutor_clcr_w,0)) INTO STRICT qt_clearance_w, qt_carboplatina_w;

    update paciente_atendimento
    set	qt_clearance_creatinina	= qt_clearance_w,
        qt_mg_carboplatina	= CASE WHEN ie_calcular_carboplatina_aut_w='S' THEN qt_carboplatina_w  ELSE qt_mg_carboplatina END ,
        dt_atualizacao		= clock_timestamp(),
        nm_usuario		= wheb_usuario_pck.get_nm_usuario
    where nr_seq_atendimento = nr_seq_atendimento_p;
end;
end if;


select	coalesce(max(qt_superf_corporal),0),
		coalesce(max(qt_peso_w),0),
		max(nr_seq_paciente),
		coalesce(max(qt_altura),0)
into STRICT	qt_superficie_corporea_w,
		qt_peso_w,
		nr_seq_paciente_w,
		qt_altura_cm_w
from 	paciente_atendimento
where	nr_seq_atendimento = nr_seq_atendimento_p;

/* atualizar todos os medicamentos com dose padrao */



/* atualizar os medicamentos com base na superficie corporal */

update 	paciente_atend_medic a
set 	a.cd_unid_med_prescr =  
               (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unid_med_dose = b.cd_unidade_medida),
	a.qt_dose_prescricao =  a.qt_dose * qt_superficie_corporea_w
where 	a.nr_seq_atendimento = nr_seq_atendimento_p
and exists (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unid_med_dose = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and lower(b.cd_unidade_med_sec) = 'm2')
--and    	a.cd_unid_med_prescr is null

--and	a.qt_dose_prescricao is null
and	a.qt_dose > 0
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
and	qt_superficie_corporea_w > 0;

/* atualizar os medicamentos com base no peso */

select obter_peso_considerado_onc(nr_seq_atendimento_p, nr_seq_material_p, qt_peso_w, qt_altura_cm_w, 'S')
into STRICT qt_peso_w
;

update paciente_atend_medic a
set 	a.cd_unid_med_prescr =  
               (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unid_med_dose = b.cd_unidade_medida),
	a.qt_dose_prescricao = a.qt_dose * qt_peso_w
where 	a.nr_seq_atendimento = nr_seq_atendimento_p
and exists (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unid_med_dose = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and lower(b.cd_unidade_med_sec) = 'kg')
--and    	a.cd_unid_med_prescr is null

--and	a.qt_dose_prescricao is null
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
and	a.qt_dose > 0
and	qt_peso_w > 0;

qt_mg_carboplatina_w	:=OBTER_QT_MG_CARBO_CICLO(nr_seq_atendimento_p);

/* atualizar os medicamentos com base na carboplatina */

update paciente_atend_medic a  
set 	a.qt_dose_prescricao =   
               (SELECT a.qt_dose * coalesce(qt_mg_carboplatina_w,1)
                from paciente_atend_medic b  
                where a.nr_seq_atendimento = b.nr_seq_atendimento
		and	a.nr_seq_material	= b.nr_seq_material),
               a.cd_unid_med_prescr =  
               (select max(b.cd_unidade_med_princ)
                from unidade_medida b  
                where a.cd_unid_med_dose = b.cd_unidade_medida)  
where a.nr_seq_atendimento = nr_seq_atendimento_p
  and exists (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unid_med_dose = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and lower(b.cd_unidade_med_sec) in ('mgc'))
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
and	a.qt_dose > 0
and	coalesce(ie_calcula_preenchido_w,'N') <> 'N';

update paciente_atend_medic a
set 	a.qt_dose_prescricao = coalesce(qt_mg_carboplatina_w,0)
where a.nr_seq_atendimento = nr_seq_atendimento_p
  and exists (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unid_med_dose = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and lower(b.cd_unidade_med_sec) in (obter_desc_expressao(782176)/*'mgcar'*/
))
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
and	a.qt_dose > 0
and	coalesce(ie_calcula_preenchido_w,'N') <> 'N';


update 	paciente_atend_medic a
set 	a.cd_unid_med_prescr 	= a.cd_unid_med_dose,
	a.qt_dose_prescricao	= a.qt_dose
where 	a.nr_seq_atendimento 	= nr_seq_atendimento_p
and not exists (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unid_med_dose = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and lower(b.cd_unidade_med_sec) in ('m2','mgc','kg',obter_desc_expressao(782176)/*'mgcar'*/))
--and	a.cd_unid_med_prescr is null

--and	a.qt_dose_prescricao is null
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
and	a.qt_dose > 0
and	coalesce(ie_calcula_preenchido_w,'N') <> 'N';

open C04;
loop
fetch C04 into	
	nr_seq_material_w,
	QT_HORA_APLICACAO_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	update	paciente_atend_medic
	set		qt_dose_prescricao = qt_dose_prescricao	* QT_HORA_APLICACAO_w
	where	nr_seq_atendimento	= nr_seq_atendimento_p
	and	nr_seq_material = nr_seq_material_w;

	end;
end loop;
close C04;

if (pr_reducao_w IS NOT NULL AND pr_reducao_w::text <> '') and (pr_reducao_w	> 0)and (ie_aplica_reducao_w = 'S')then
	update 	paciente_atend_medic a
	set	 qt_dose_prescricao = (qt_dose_prescricao - ((pr_reducao_w * coalesce(qt_dose_prescricao,0)) / 100)) 
	where 	a.nr_seq_atendimento 	= nr_seq_atendimento_p
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
	and	coalesce(ie_aplica_reducao,'S') = 'S';
end if;

open C03;
loop
fetch C03 into	
	nr_seq_material_w,
	pr_reducao_item_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	update	paciente_atend_medic
	set	qt_dose_prescricao = (((coalesce(pr_reducao_item_w,100) * coalesce(qt_dose_prescricao,0)) / 100))
	where	nr_seq_atendimento 	= nr_seq_atendimento_p
	and	nr_seq_material = nr_seq_material_w;
	end;
end loop;
close C03;

open C02;
	loop
	fetch C02 into	
		nr_seq_solucao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		CALL gerar_volume_ciclo_soluc(nr_seq_atendimento_p,nr_seq_solucao_w,wheb_usuario_pck.get_nm_usuario);
		end;
	end loop;
close C02;	

open C05;
loop
fetch C05 into	
	nr_seq_material_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin

	delete 	from paciente_atend_medic
	where	NR_SEQ_DILUICAO = nr_seq_material_w
	and	nr_seq_atendimento= nr_seq_atendimento_p;	
	CALL Gerar_Recons_Dil_onc_atend(nr_seq_atendimento_p,nr_seq_material_w,'D',wheb_usuario_pck.get_nm_usuario);
	end;
end loop;
close C05;	

CALL Arredondar_dose_onc_ciclo(nr_seq_atendimento_p);
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_dose_onc_ciclo ( nr_seq_atendimento_p bigint, ie_atualiza_sv_p text default 'S', nr_seq_material_p bigint default null) FROM PUBLIC;

