-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_incluir_inscricao_reaj ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_origem_inscricao_w		varchar(1);
nr_seq_contrato_w		bigint;
nr_seq_inscricao_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_reajuste_inscricao_w	bigint;
tx_reajuste_w			double precision;
tx_reajuste_vl_maximo_w		double precision;
dt_referencia_w			timestamp;


C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		CASE WHEN a.nr_seq_plano='' THEN  'C'  ELSE 'P' END
	from	pls_regra_inscricao a
	where	a.nr_seq_contrato	= nr_seq_contrato_w
	and	dt_referencia_w	between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w)
	
union

	SELECT	q.nr_sequencia,
		CASE WHEN q.nr_seq_plano='' THEN  'C'  ELSE 'P' END 
	from	pls_contrato		y,
		pls_contrato_plano	w,
		pls_plano		z,
		pls_regra_inscricao	q
	where	y.nr_sequencia	  = nr_seq_contrato_w
	and	w.nr_seq_contrato = y.nr_sequencia
	and	w.nr_seq_plano    = z.nr_sequencia
	and	q.nr_seq_plano	  = z.nr_sequencia
	and	dt_referencia_w	between coalesce(q.dt_inicio_vigencia, dt_referencia_w) and coalesce(q.dt_fim_vigencia, dt_referencia_w)
	and	not exists (select	1
				from	pls_regra_inscricao	x
				where	x.nr_seq_contrato	= nr_seq_contrato_w)
	
union all

	select	a.nr_sequencia,
		CASE WHEN a.nr_seq_plano='' THEN  'C'  ELSE 'P' END 
	from	pls_regra_inscricao	a
	where	a.nr_seq_intercambio	= nr_seq_intercambio_w
	and	dt_referencia_w	between coalesce(a.dt_inicio_vigencia, dt_referencia_w) and coalesce(a.dt_fim_vigencia, dt_referencia_w)
	
union

	select	q.nr_sequencia,
		CASE WHEN q.nr_seq_plano='' THEN  'C'  ELSE 'P' END 
	from	pls_intercambio		y,
		pls_intercambio_plano	w,
		pls_plano		z,
		pls_regra_inscricao	q
	where	y.nr_sequencia	  = nr_seq_intercambio_w
	and	w.nr_seq_intercambio = y.nr_sequencia
	and	w.nr_seq_plano    = z.nr_sequencia
	and	q.nr_seq_plano	  = z.nr_sequencia
	and	dt_referencia_w	between coalesce(q.dt_inicio_vigencia,dt_referencia_w) and coalesce(q.dt_fim_vigencia,dt_referencia_w)
	and	not exists (select	1
				from	pls_regra_inscricao x
				where	x.nr_seq_intercambio	= nr_seq_intercambio_w);


BEGIN
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
	select	nr_seq_contrato,
		coalesce(tx_reajuste,0),
		dt_referencia,
		nr_seq_intercambio
	into STRICT	nr_seq_contrato_w,
		tx_reajuste_w,
		dt_referencia_w,
		nr_seq_intercambio_w
	from	pls_lote_reaj_inscricao
	where	nr_sequencia	= nr_seq_lote_p;

	open C01;
	loop
	fetch C01 into
		nr_seq_inscricao_w,
		ie_origem_inscricao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	nextval('pls_reajuste_inscricao_seq')
		into STRICT	nr_seq_reajuste_inscricao_w
		;

		insert into pls_reajuste_inscricao(nr_sequencia,
			nr_seq_lote,
			cd_estabelecimento,
			nr_seq_regra_inscricao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			tx_reajuste,
			ie_origem_inscricao)
		values (nr_seq_reajuste_inscricao_w,
			nr_seq_lote_p,
			cd_estabelecimento_p,
			nr_seq_inscricao_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			tx_reajuste_w,
			ie_origem_inscricao_w);
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_incluir_inscricao_reaj ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

