-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_status_int_regulacao ( cd_cnpj_p text, ie_status_p text, nr_seq_pls_requisicao_p bigint default null, nr_seq_regulacao_p bigint DEFAULT NULL, ie_integracao_p text default 'N') AS $body$
DECLARE


	
ie_status_w 					varchar(10);
nr_seq_regulacao_w				varchar(10);
ie_integracao_w					varchar(1);
nm_usuario_w 					varchar(100) := 'BIFROST';
dt_status_atual_w				timestamp;
dt_status_ant_w				timestamp;
qt_intervalo_status_w   	regulacao_status.qt_intervalo_status%type;
cd_pessoa_fisica_w			varchar(10);
ie_lista_espera_w			varchar(1);
qt_solicitado_w				bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;


BEGIN
	
if ((nr_seq_pls_requisicao_p IS NOT NULL AND nr_seq_pls_requisicao_p::text <> '') and ie_integracao_p = 'S') then

	select converte_status_regulacao(ie_status_p,'REG')
	into STRICT   ie_status_w
	;

	update regulacao_atend
	set    ie_status = ie_status_w
	where nr_sequencia = nr_seq_regulacao_p;
	
	commit;
	
	dt_status_atual_w := clock_timestamp();

		select  coalesce(max(x.dt_atualizacao),dt_status_atual_w)
		into STRICT    dt_status_ant_w   
		from    regulacao_status x
		where   x.nr_seq_regulacao_atend = nr_seq_regulacao_p;
		
		qt_intervalo_status_w := (round((dt_status_atual_w - dt_status_ant_w)::numeric, 4)*24*60);

	
		insert into
			regulacao_status(
				nr_sequencia, 
				ie_status, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				qt_intervalo_status, 
				nr_seq_regulacao_atend, 
				dt_revisao
				) values (
				nextval('regulacao_status_seq'),
				ie_status_w,
				dt_status_atual_w,
				nm_usuario_w,
				dt_status_atual_w,
				nm_usuario_w,
				qt_intervalo_status_w,
				nr_seq_regulacao_p,
				dt_status_atual_w);
	
		commit;
		
		if ( ie_status_w = 'AT' ) then
		
			Select  coalesce(max('S'),'N')
			into STRICT	ie_lista_espera_w	
			from    agenda_lista_espera
			where	nr_seq_regulacao = nr_seq_regulacao_p;
			
			if ( ie_lista_espera_w = 'N') then
			
					select  max(cd_pessoa_fisica),
							max(cd_procedimento),
							max(ie_origem_proced),
							max(qt_solicitado)
					into STRICT 	cd_pessoa_fisica_w,
							cd_procedimento_w,
							ie_origem_proced_w,
							qt_solicitado_w
					from 	regulacao_atend
					where 	nr_sequencia = nr_seq_regulacao_p;
					
					
			
				
					insert into agenda_lista_espera(
						nr_sequencia,
						cd_procedimento,
						ie_origem_proced,
						qt_procedimento,
						cd_pessoa_fisica,
						dt_agendamento,
						dt_atualizacao,
						dt_atualizacao_nrec,
						dt_periodo_inicial,						
						ie_status_espera,
						nm_usuario_agenda,
						nm_usuario,
						nm_usuario_nrec,
						nr_seq_regulacao)
					values (
						nextval('agenda_lista_espera_seq'),
						cd_procedimento_w,
						ie_origem_proced_w,
						qt_solicitado_w,
						cd_pessoa_fisica_w,
						clock_timestamp(),
						clock_timestamp(),
						clock_timestamp(),
						clock_timestamp(),
						'A',
						nm_usuario_w,
						nm_usuario_w,
						nm_usuario_w,
						nr_seq_regulacao_p);
						
						commit;
						
					dt_status_atual_w := clock_timestamp();
	
					update	regulacao_atend
					set		ie_status = 'LE',
							nm_usuario_status = nm_usuario_w,
							dt_usuario_status = dt_status_atual_w
					where	nr_sequencia = nr_seq_regulacao_p;
					
				
					select  coalesce(max(x.dt_atualizacao),dt_status_atual_w)
					into STRICT    dt_status_ant_w
					from    regulacao_status x
					where   x.nr_seq_regulacao_atend = nr_seq_regulacao_p;
					
					qt_intervalo_status_w := (round((dt_status_atual_w - dt_status_ant_w)::numeric, 4)*24*60);	
					
					
					Insert into
							regulacao_status(
								nr_sequencia, 
								ie_status, 
								dt_atualizacao, 
								nm_usuario, 
								dt_atualizacao_nrec, 
								nm_usuario_nrec, 
								ds_observacao, 
								qt_intervalo_status, 
								nr_seq_regulacao_atend, 
								dt_revisao) values (
								nextval('regulacao_status_seq'),
								'LE',
								dt_status_atual_w,
								nm_usuario_w,
								dt_status_atual_w,
								nm_usuario_w,
								'',
								qt_intervalo_status_w,
								nr_seq_regulacao_p,
								dt_status_atual_w);
					
						commit;
						
					
			
			end if;
		
		end if;


else

	if ((nr_seq_regulacao_p IS NOT NULL AND nr_seq_regulacao_p::text <> '') and ie_integracao_p = 'N') then
	
		select  nr_sequencia,
				ie_integracao
		into STRICT	nr_seq_regulacao_w,
				ie_integracao_w
		from	pls_requisicao
		where   nr_seq_regulacao = nr_seq_regulacao_p;
		
		if ((nr_seq_regulacao_w IS NOT NULL AND nr_seq_regulacao_w::text <> '') and ie_integracao_w = 'S') then
		
			select converte_status_regulacao(ie_status_p,'PLS')
			into STRICT ie_status_w
			;

			update pls_requisicao
			set ie_estagio = ie_status_w,
			ie_estagio_regulacao = ie_status_p
			where nr_sequencia = nr_seq_regulacao_w;
		
			commit;
		
		end if;
		
	end if;

end if;
	
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_status_int_regulacao ( cd_cnpj_p text, ie_status_p text, nr_seq_pls_requisicao_p bigint default null, nr_seq_regulacao_p bigint DEFAULT NULL, ie_integracao_p text default 'N') FROM PUBLIC;

