-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_endereco_cobranca ( nr_atendimento_p bigint, ie_insert_p text default 'N') AS $body$
DECLARE


    nr_seq_compl_pessoa_fisica_w    bigint;
    cd_cep_w                        varchar(15);
    ds_complemento_w                varchar(300);
    ds_compl_end_w                  varchar(100);
    ds_endereco_w                   varchar(300);
    ds_municipio_w                  varchar(40);
    ie_mala_direta_w                varchar(1);
    ie_nf_correio_w                 varchar(1);
    ie_tipo_complemento_w           smallint;
    nr_seq_pais_w                   bigint;
    sg_estado_w                     varchar(15);
    nr_sequencia_compl_fisica_w     compl_pessoa_fisica.nr_sequencia%type;
    ie_existe_w                     smallint;
		
    c00 CURSOR FOR
    SELECT
        nr_seq_compl_pessoa_fisica,
        cd_cep,
        ds_complemento,
        ds_compl_end,
        ds_endereco,
        ds_municipio,
        ie_nf_correio,
        ie_tipo_complemento,
        nr_seq_pais,
        sg_estado,
        ie_mala_direta
    FROM
        atend_convenio_end_cob
    WHERE
        nr_atendimento = nr_atendimento_p
    and ie_mala_direta = 'S';	


BEGIN

    BEGIN
        OPEN c00;
        LOOP
            FETCH c00 INTO
                nr_seq_compl_pessoa_fisica_w,
                cd_cep_w,
                ds_complemento_w,
                ds_compl_end_w,
                ds_endereco_w,
                ds_municipio_w,
                ie_nf_correio_w,
                ie_tipo_complemento_w,
                nr_seq_pais_w,
                sg_estado_w,
                ie_mala_direta_w;
            EXIT WHEN NOT FOUND; /* apply on c00 */
            BEGIN

            update compl_pessoa_fisica
            set cd_cep              = cd_cep_w,
                ds_complemento      = ds_complemento_w,
                ds_compl_end        = ds_compl_end_w,
                ds_endereco         = ds_endereco_w,
                ds_municipio        = ds_municipio_w,
                ie_nf_correio       = ie_nf_correio_w,
                ie_tipo_complemento = ie_tipo_complemento_w,
                nr_seq_pais         = nr_seq_pais_w,
                sg_estado           = sg_estado_w,
                ie_mala_direta      = ie_mala_direta_w
            where cd_pessoa_fisica = OBTER_PESSOA_ATENDIMENTO(nr_atendimento_p, 'C')
            and nr_sequencia = nr_seq_compl_pessoa_fisica_w;

            select	count(*)
            into STRICT	ie_existe_w
            from	compl_pessoa_fisica
            where	cd_pessoa_fisica	=  OBTER_PESSOA_ATENDIMENTO(nr_atendimento_p, 'C')
            and ie_tipo_complemento = ie_tipo_complemento_w;

            if (coalesce(nr_seq_compl_pessoa_fisica_w::text, '') = '' and ie_mala_direta_w = 'S'
                and ie_insert_p = 'S' and ie_existe_w = 0) then

                select	coalesce(max(nr_sequencia),0) + 1
                into STRICT	nr_sequencia_compl_fisica_w
                from	compl_pessoa_fisica
                where	cd_pessoa_fisica	= OBTER_PESSOA_ATENDIMENTO(nr_atendimento_p, 'C');

                BEGIN

                    INSERT INTO compl_pessoa_fisica(
                        nr_sequencia,
                        cd_pessoa_fisica,
                        cd_cep,
                        ds_complemento,
                        ds_compl_end,
                        ds_endereco,
                        ds_municipio,
                        dt_atualizacao,
                        dt_atualizacao_nrec,
                        ie_mala_direta,
                        ie_nf_correio,
                        ie_tipo_complemento,
                        nm_usuario,
                        nm_usuario_nrec,
                        nr_seq_pais,
                        sg_estado
                    ) VALUES (
                        nr_sequencia_compl_fisica_w,
                        OBTER_PESSOA_ATENDIMENTO(nr_atendimento_p, 'C'),
                        cd_cep_w,
                        ds_complemento_w,
                        ds_compl_end_w,
                        ds_endereco_w,
                        ds_municipio_w,
                        clock_timestamp(),
                        clock_timestamp(),
                        ie_mala_direta_w,
                        ie_nf_correio_w,
                        ie_tipo_complemento_w,
                        wheb_usuario_pck.get_nm_usuario,
                        wheb_usuario_pck.get_nm_usuario,
                        nr_seq_pais_w,
                        sg_estado_w
                    );

                    update atend_convenio_end_cob
                    set nr_seq_compl_pessoa_fisica = nr_sequencia_compl_fisica_w
                    where cd_pessoa_fisica = OBTER_PESSOA_ATENDIMENTO(nr_atendimento_p, 'C')
                    and ie_tipo_complemento = ie_tipo_complemento_w
                    and coalesce(nr_seq_compl_pessoa_fisica::text, '') = '';

                EXCEPTION
                WHEN OTHERS THEN
                    CALL grava_log_tasy(87381, ' Erro: ' || substr(sqlerrm,1,255) , OBTER_PESSOA_ATENDIMENTO(nr_atendimento_p, 'C'));
                END;
                

            end if;

            END;

        END LOOP;

        CLOSE c00;

        delete from atend_convenio_end_cob
        where nr_atendimento = nr_atendimento_p
        and ie_mala_direta = 'N';

        COMMIT;
    END;


END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_endereco_cobranca ( nr_atendimento_p bigint, ie_insert_p text default 'N') FROM PUBLIC;

