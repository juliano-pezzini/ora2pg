-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_prescr_mat_fanep ( nr_seq_pepo_p bigint, nr_prescricao_p bigint, cd_local_estoque_p bigint, nr_seq_atepacu_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_setor_atendimento_p bigint, cd_funcao_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


cd_baixa_incorreta_w		smallint;
cd_motivo_baixa_w			smallint;
cd_motivo_baixa_original_w		smallint;
ie_baixa_sem_estoque_w		varchar(1);
cd_setor_atendimento_w		integer;
cd_setor_atend_baixa_w		integer;
dt_entrada_unidade_w		timestamp;
nr_prescricao_w			bigint;
dt_prescricao_w			timestamp;
nr_atendimento_w			bigint;
cd_estab_w			bigint;
nr_seq_prescr_w			bigint;
cd_material_w			integer;
qt_material_w			double precision;
qt_dispensar_w			double precision;
qt_dias_solic_w			smallint;
qt_dias_lib_w			smallint;
ie_status_w			varchar(2);
ie_baixa_paciente_w		varchar(1) := 'S';
ie_via_aplicacao_w			varchar(5);
cd_unidade_medida_w		varchar(30);
cd_fornec_consignado_w		varchar(14);
nr_seq_lote_fornec_w		bigint;
ie_local_valido_w			varchar(1) := 'S';
ie_disp_estoque_w			varchar(1) := 'S';
ie_atualiza_estoque_w		varchar(1) := 'S';
cd_local_estoque_w		integer;
cd_local_estoque_kit_w		integer;
nr_sequencia_w			bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(2);
cd_funcao_w			bigint;
ie_material_estoque_w		varchar(01) := 'N';
ie_mat_estoque_mat_w		varchar(01) := 'N';
cd_convenio_ww			integer;
cd_categoria_ww			varchar(10);
cd_senha_w			varchar(20);
ie_receita_w			varchar(5) := 'N';
nr_receita_w			bigint;
ie_tipo_lancto_w			varchar(10)	:= '3';
ds_local_estoque_w		varchar(100);
dt_inicio_w			timestamp;
cd_estabelecimento_w		smallint;
nr_seq_kit_estoque_w		bigint;
ie_consignado_w			varchar(1);
cd_material_estoque_w		integer;
ie_permitir_baixa_w			varchar(1);
ie_conta_fechada_w		varchar(1);
qt_estoque_w			double precision;
cd_kit_material_w			integer;
ie_baixa_estoque_w		varchar(1);
qt_conv_estoque_consumo_w	double precision;
cd_unidade_medida_estoque_w	varchar(30);
cd_unidade_medida_consumo_w	varchar(30);
ie_disp_ag_cirur_w			varchar(1);
ie_possui_saldo_w			varchar(1) := 'S';
ie_local_esto_setor_w		varchar(1) := 'S';
ds_erro_w			varchar(255):= null;
ds_erro_ww			varchar(255):= null;

ie_acao_excesso_w		varchar(10);
qt_excedida_w			double precision;
ds_erro_uso_w			varchar(255);
ie_regra_uso_w			varchar(1):= 'N';
nr_seq_excedido_w		bigint;
nr_conta_w			bigint;
nr_seq_regra_uso_w		bigint;
dt_item_w			timestamp;
cd_convenio_pf_w		integer;
cd_categoria_pf_w		varchar(10);
nr_seq_atepacu_w			bigint;
nr_atendimento_ww			bigint;
cd_motivo_exc_conta_w		parametro_faturamento.cd_motivo_exc_conta%type;

C01 CURSOR FOR
SELECT	b.nr_prescricao,
	b.dt_prescricao,
	b.nr_atendimento,
	c.cd_estabelecimento
from  	atendimento_paciente c,
	prescr_medica b,
	pepo_cirurgia a
where 	b.nr_atendimento	= c.nr_atendimento
and 	a.nr_prescricao		= b.nr_prescricao
and 	a.nr_sequencia 		= nr_seq_pepo_p
and 	a.nr_prescricao 	= nr_prescricao_p
and 	coalesce(b.dt_baixa::text, '') = '';

C02 CURSOR FOR
SELECT	nr_sequencia,
	cd_material,
	qt_material,
	qt_total_dispensar,
	coalesce(qt_dias_solicitado,0),
	coalesce(qt_dias_liberado,0),
	ie_status_cirurgia,
	obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material,null,0),
	ie_via_aplicacao,
	cd_unidade_medida,
	cd_fornec_consignado,
	nr_seq_lote_fornec,
	cd_convenio,
	cd_categoria,
	coalesce(nr_receita,0),
	coalesce(nr_seq_kit_estoque,0),
	coalesce(cd_kit_material, 0),
	coalesce(cd_local_estoque,0)
from	prescr_material
where	nr_prescricao	= nr_prescricao_w
and	cd_motivo_baixa	= 0;


BEGIN
cd_funcao_w	:= cd_funcao_p;

select 	wheb_usuario_pck.get_cd_estabelecimento
into STRICT	cd_estabelecimento_w
;

select	coalesce(dt_inicio_proced,clock_timestamp()),
		coalesce(nr_atendimento,0)
into STRICT	dt_inicio_w,
		nr_atendimento_ww
from 	pepo_cirurgia
where	nr_sequencia = nr_seq_pepo_p;

ie_tipo_lancto_w := obter_param_usuario(901, 121, cd_perfil_p, nm_usuario_p, 0, ie_tipo_lancto_w);
ie_receita_w := obter_param_usuario(901, 101, cd_perfil_p, nm_usuario_p, 0, ie_receita_w);

if (ie_tipo_lancto_w <> 0) then
	ie_tipo_lancto_w := obter_param_usuario(900, 258, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_tipo_lancto_w);
	if (ie_tipo_lancto_w = 'S') then
		ie_tipo_lancto_w := '0';
	end if;
end if;

cd_motivo_baixa_w := obter_param_usuario(36, 21, cd_perfil_p, nm_usuario_p, 0, cd_motivo_baixa_w);
ie_baixa_sem_estoque_w := obter_param_usuario(36, 9, cd_perfil_p, nm_usuario_p, 0, ie_baixa_sem_estoque_w);
cd_baixa_incorreta_w := obter_param_usuario(36, 22, cd_perfil_p, nm_usuario_p, 0, cd_baixa_incorreta_w);

ie_permitir_baixa_w := 'N';

cd_motivo_baixa_original_w	:= cd_motivo_baixa_w;

if (coalesce(nr_seq_atepacu_p,0) <> 0) then
	nr_seq_atepacu_w := nr_seq_atepacu_p;
end if;

if (coalesce(nr_seq_atepacu_w,0) = 0) then
	nr_seq_atepacu_w := Obter_Atepacu_paciente(nr_atendimento_ww,'A');
end if;

if (coalesce(nr_seq_atepacu_w,0) = 0) then
	ds_erro_p := wheb_mensagem_pck.get_texto(278307);
	goto final;
end if;

select	cd_setor_atendimento,
	cd_setor_atendimento,
	dt_entrada_unidade
into STRICT	cd_setor_atendimento_w,
	cd_setor_atend_baixa_w,
	dt_entrada_unidade_w
from 	atend_paciente_unidade
where 	nr_seq_interno = nr_seq_atepacu_w;

select	coalesce(max(ie_atualiza_estoque),'N')
into STRICT	ie_atualiza_estoque_w
from	tipo_baixa_prescricao
where	cd_tipo_baixa = cd_motivo_baixa_w
and	ie_prescricao_devolucao = 'P';

cd_local_estoque_w := cd_local_estoque_p;

select	coalesce(max(ie_disp_ag_cirur), 'N')
into STRICT	ie_disp_ag_cirur_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_w;


open C01;
loop
	fetch C01 into	nr_prescricao_w,
				dt_prescricao_w,
				nr_atendimento_w,
				cd_estab_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

	/* Verifica se o atendimento possui a conta fechada */

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_conta_fechada_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w
	and	ie_fim_conta = 'F'
	and	(dt_fim_conta IS NOT NULL AND dt_fim_conta::text <> '');


	if	((ie_permitir_baixa_w = 'S') or (ie_permitir_baixa_w = 'A') or
		 (ie_permitir_baixa_w = 'N' AND ie_conta_fechada_w = 'N') or
		 (ie_permitir_baixa_w = 'B' AND ie_conta_fechada_w = 'N')) then
		begin
		open C02;
		loop
			fetch c02 into		nr_seq_prescr_w,
						cd_material_w,
						qt_material_w,
						qt_dispensar_w,
						qt_dias_solic_w,
						qt_dias_lib_w,
						ie_status_w,
						ie_baixa_paciente_w,
						ie_via_aplicacao_w,
						cd_unidade_medida_w,
						cd_fornec_consignado_w,
						nr_seq_lote_fornec_w,
						cd_convenio_ww,
						cd_categoria_ww,
						nr_receita_w,
						nr_seq_kit_estoque_w,
						cd_kit_material_w,
						cd_local_estoque_kit_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */

/*			if	(ie_gerar_convenio_w = 'S') then
				select	obter_convenio_atendimento(nr_atendimento_w),
					substr(obter_categoria_atendimento(nr_atendimento_w),1,10)
				into	cd_convenio_ww,
					cd_categoria_ww
				from	dual;
			end if;
*/
			ie_disp_estoque_w	:= 'S';

			cd_local_estoque_w 	:= cd_local_estoque_p;

			cd_local_estoque_w := obter_local_disp_prescr(nr_prescricao_p, nr_seq_prescr_w, obter_perfil_ativo, nm_usuario_p);


			/* ConsistÃªncia - Jerusa OS 115151 */

			if (ie_atualiza_estoque_w <> 'S') then
				cd_local_estoque_w := null;
			elsif	((nr_seq_kit_estoque_w = 0) or (cd_local_estoque_p = 0)) then
				select cd_local_estoque
				into STRICT cd_local_estoque_w
				from setor_atendimento
				where cd_setor_atendimento = cd_setor_atendimento_w;
			elsif (nr_seq_kit_estoque_w <> 0) and (cd_local_estoque_kit_w <> 0) then
				cd_local_estoque_w	:= cd_local_estoque_kit_w;
			end if;

			if (cd_kit_material_w > 0) then
				select	coalesce(max(ie_baixa_estoque), 'S')
				into STRICT	ie_baixa_estoque_w
				from	componente_kit
								where	cd_kit_material	= cd_kit_material_w
								and	cd_material	= cd_material_w
				and	((coalesce(cd_estab_regra::text, '') = '') or (cd_estab_regra = cd_estabelecimento_w));

				if (ie_baixa_estoque_w = 'N') then
					cd_local_estoque_w	:= null;
				end if;
			end if;

			select	max(ie_material_estoque)
			into STRICT	ie_mat_estoque_mat_w
			from	material
			where	cd_material		= cd_material_w;

			select	coalesce(max(ie_material_estoque), ie_mat_estoque_mat_w)
			into STRICT	ie_material_estoque_w
			from	material_estab
			where	cd_estabelecimento	= cd_estab_w
			and	cd_material		= cd_material_w;


			if (qt_material_w = 0) and (cd_baixa_incorreta_w <> 0) then

				update 	prescr_material
				set	dt_baixa	= clock_timestamp(),
					cd_motivo_baixa = cd_baixa_incorreta_w,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_prescricao	= nr_prescricao_w
				and	nr_sequencia 	= nr_seq_prescr_w
				and	coalesce(cd_motivo_baixa,0) = 0;

			/* elsif 	(qt_dispensar_w = qt_material_w) and  - Dalcastagne em 04/08/2009 OS 157957 */

			elsif (qt_dispensar_w > 0) and
				((qt_dias_solic_w = 0) or (qt_dias_lib_w > 0)) then

				qt_material_w	:=  qt_dispensar_w; /* Dalcastagne em 04/08/2009 OS 157957 */
				ie_local_valido_w := obter_local_valido(cd_estab_w, cd_local_estoque_w, cd_material_w, '', ie_local_valido_w);


				/* Dalcastagne em 17/10/2007 OS 70819 */

				if (ie_receita_w = 'S') and (nr_receita_w = 0) and (obter_se_medic_controlado(cd_material_w) = 'S') then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(241174,	'DS_MATERIAL='||substr(obter_desc_material(cd_material_w),1,100));
				elsif (ie_receita_w = 'M') and (nr_receita_w = 0) and (obter_se_medic_controlado(cd_material_w) = 'S') then
					if (coalesce(length(ds_erro_p),0) < 255) then
						ds_erro_p := substr(ds_erro_p || wheb_mensagem_pck.get_texto(278090, 'CD_MATERIAL_P=' || substr(obter_desc_material(cd_material_w),1,50)),1,255);
					end if;
				end if;


				select	coalesce(ie_consignado,'0'),
					cd_material_estoque,
					qt_conv_estoque_consumo,
					substr(obter_dados_material_estab(cd_material,cd_estab_w,'UME'),1,30) cd_unidade_medida_estoque,
					substr(obter_dados_material_estab(cd_material,cd_estab_w,'UMS'),1,30) cd_unidade_medida_consumo
				into STRICT	ie_consignado_w,
					cd_material_estoque_w,
					qt_conv_estoque_consumo_w,
					cd_unidade_medida_estoque_w,
					cd_unidade_medida_consumo_w
				from	material
				where	cd_material = cd_material_w;

				ie_possui_saldo_w	:= 'S';
				if	((coalesce(cd_local_estoque_w, 0) > 0) and (ie_baixa_paciente_w = 'S') and (ie_status_w not in ('CB','AD'))) and (ie_baixa_sem_estoque_w <> 'S') then
					begin
					if (ie_consignado_w = '0') or
						((ie_consignado_w = '2') and (coalesce(cd_fornec_consignado_w::text, '') = '')) then
						qt_estoque_w	:= obter_saldo_disp_estoque(cd_estab_w,cd_material_estoque_w,cd_local_estoque_w,trunc(clock_timestamp(),'mm'));
						if (ie_disp_ag_cirur_w = 'S') then
							qt_estoque_w	:= qt_estoque_w + qt_material_w;
						end if;

						if (cd_unidade_medida_consumo_w <> cd_unidade_medida_estoque_w) then
							qt_estoque_w := (qt_estoque_w * qt_conv_estoque_consumo_w);
						end if;

						if (qt_estoque_w < qt_material_w) then
							ie_possui_saldo_w	:= 'N';
							if (coalesce(length(ds_erro_p),0) < 255) then
								ds_erro_p := substr(ds_erro_p || chr(13) || wheb_mensagem_pck.get_texto(278093, 'CD_MATERIAL_P=' || to_char(cd_material_w) ||
																		';QT_ESTOQUE_P=' || to_char(qt_estoque_w) ||
																		';QT_MATERIAL_P=' || to_char(qt_material_w) ||
																		';CD_LOCAL_ESTOQUE_P=' || substr(OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_w),1,100)),1,255);
							end if;
						end if;
					elsif (ie_consignado_w = '1') or
						(ie_consignado_w = '2' AND cd_fornec_consignado_w IS NOT NULL AND cd_fornec_consignado_w::text <> '') then

						select	coalesce(sum(qt_estoque),0)
						into STRICT	qt_estoque_w
						from	fornecedor_mat_consignado
						where	cd_estabelecimento	= cd_estab_w
						and	cd_local_estoque	= cd_local_estoque_w
						and	cd_fornecedor		= cd_fornec_consignado_w
						and	cd_material		= cd_material_estoque_w
						and	dt_mesano_referencia	= trunc(clock_timestamp(),'mm');

						if (ie_disp_ag_cirur_w = 'S') then
							qt_estoque_w	:= qt_estoque_w + qt_material_w;
						end if;
						if (qt_estoque_w < qt_material_w) then
							ie_possui_saldo_w	:= 'N';
							if (coalesce(length(ds_erro_p),0) < 255) then
								ds_erro_p := substr(ds_erro_p || chr(13) || wheb_mensagem_pck.get_texto(278099, 'CD_MATERIAL_P=' || cd_material_w ||
																		';CD_FORNEC_CONSIGNADO_P=' || cd_fornec_consignado_w),1,255);
							end if;
						end if;
					end if;


					end;
				end if;

				ds_local_estoque_w	:= substr(OBTER_DESC_LOCAL_ESTOQUE(cd_local_estoque_w),1,100);
				ie_local_esto_setor_w	:= 'S';
				if (ie_local_valido_w	= 'N') and (coalesce(cd_local_estoque_w, 0) > 0) and (ie_atualiza_estoque_w 	= 'S') then
					ie_local_esto_setor_w	:= 'N';
					if (coalesce(length(ds_erro_p),0) < 255) then
						ds_erro_p := substr(ds_erro_p || chr(13) || wheb_mensagem_pck.get_texto(200311, 'DS_LOCAL_ESTOQUE_W=' || ds_local_estoque_w ||
																';CD_MATERIAL_W=' || cd_material_w),1,255);
					end if;
				end if;

				if (coalesce(ie_local_esto_setor_w,'S') = 'S') and (coalesce(ie_possui_saldo_w,'S') = 'S') and
					(((ie_local_valido_w = 'S') and (coalesce(cd_local_estoque_w, 0) > 0) or (ie_local_valido_w = 'N') and (coalesce(cd_local_estoque_w, 0) = 0))) then

					select nextval('material_atend_paciente_seq')
					into STRICT nr_sequencia_w
					;

					-- Dacastagne em 30/01/2007 OS 49215
					if (coalesce(cd_convenio_ww::text, '') = '') then
						SELECT * FROM obter_convenio_execucao(nr_atendimento_w, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
					else
						cd_convenio_w	:= cd_convenio_ww;
						cd_categoria_w	:= cd_categoria_ww;
					end if;

					-- Dalcastagne 19/02/2007 OS 50875
					if (ie_atualiza_estoque_w = 'N') and (coalesce(cd_local_estoque_w, 0) > 0) then
						cd_local_estoque_w := null;
					end if;

					ie_regra_uso_w := Obter_Param_Usuario(900, 359, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_regra_uso_w);

					if (ie_regra_uso_w = 'S') then

						select 	dt_inicio_w
						into STRICT	dt_item_w
						;

						SELECT * FROM Obter_regra_uso_mat(	nr_atendimento_w, cd_material_w, qt_material_w, cd_setor_atend_baixa_w, ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_uso_w, ds_erro_uso_w, cd_categoria_w, null, cd_fornec_consignado_w, null, dt_item_w, null) INTO STRICT ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_uso_w, ds_erro_uso_w;

						if (ie_acao_excesso_w = 'E') then
							if (qt_excedida_w   > 0) then

								if 	((qt_material_w - qt_excedida_w) >= 0) then

									select	nextval('material_atend_paciente_seq')
									into STRICT	nr_seq_excedido_w
									;

									begin
									insert into material_atend_paciente(
										nr_sequencia,
										nr_atendimento,
										dt_entrada_unidade,
										cd_material,
										dt_atendimento,
										cd_unidade_medida,
										qt_material,
										dt_atualizacao,
										nm_usuario,
										cd_acao,
										cd_setor_atendimento,
										nr_seq_atepacu,
										cd_material_prescricao,
										cd_material_exec,
										ie_via_aplicacao,
										dt_prescricao,
										nr_prescricao,
										nr_sequencia_prescricao,
										cd_cgc_fornecedor,
										qt_executada,
										nr_seq_pepo,--nr_cirurgia,
										cd_local_estoque,
										vl_unitario,
										qt_ajuste_conta,
										ie_valor_informado,
										ie_guia_informada,
										ie_auditoria,
										nm_usuario_original,
										cd_situacao_glosa,
										cd_convenio,
										cd_categoria,
										nr_doc_convenio,
										ie_tipo_guia,
										nr_seq_lote_fornec,
										cd_senha,
										dt_conta,
										nr_seq_kit_estoque)
									values (
										nr_seq_excedido_w,
										nr_atendimento_w,
										dt_entrada_unidade_w,
										cd_material_w,
										dt_inicio_w,
										cd_unidade_medida_w,
										qt_excedida_w,
										clock_timestamp(),
										nm_usuario_p,
										'1',
										cd_setor_atend_baixa_w,
										nr_seq_atepacu_w,
										cd_material_w,
										cd_material_w,
										ie_via_aplicacao_w,
										dt_prescricao_w,
										nr_prescricao_w,
										nr_seq_prescr_w,
										cd_fornec_consignado_w,
										qt_excedida_w,
										nr_seq_pepo_p,--nr_cirurgia_p,
										cd_local_estoque_w,
										0,
										0,
										'N',
										'N',
										'N',
										nm_usuario_p,
										0,
										cd_convenio_w,
										cd_categoria_w,
										nr_doc_convenio_w,
										ie_tipo_guia_w,
										nr_seq_lote_fornec_w,
										cd_senha_w,
										dt_inicio_w,
										nr_seq_kit_estoque_w);
									exception
									when others then
										ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);
										ds_erro_ww 	:= ds_erro_w;
									end;

									CALL atualiza_preco_material(nr_seq_excedido_w, nm_usuario_p);

									select 	max(nr_interno_conta)
									into STRICT	nr_conta_w
									from 	material_atend_paciente
									where 	nr_sequencia = nr_seq_excedido_w;

									select	max(cd_motivo_exc_conta)
									into STRICT	cd_motivo_exc_conta_w
									from	parametro_faturamento
									where	cd_estabelecimento = cd_estabelecimento_w;

									CALL excluir_matproc_conta(
										nr_seq_excedido_w,
										nr_conta_w,
										coalesce(cd_motivo_exc_conta_w, 12),
										wheb_mensagem_pck.get_texto(278102),
										'M',
										nm_usuario_p);

								end if;

								qt_material_w := qt_material_w - qt_excedida_w;


							end if;

						elsif (ie_acao_excesso_w = 'P') then

							if (qt_excedida_w   >= qt_material_w) then

											SELECT * FROM Obter_Convenio_Particular_PF(
									cd_estabelecimento_w, cd_convenio_w, null, dt_item_w, cd_convenio_pf_w, cd_categoria_pf_w) INTO STRICT cd_convenio_pf_w, cd_categoria_pf_w;

								cd_convenio_w	:= cd_convenio_pf_w;
								cd_categoria_w	:= cd_categoria_pf_w;

									else

											qt_material_w	:= qt_material_w - qt_excedida_w;

											SELECT * FROM Obter_Convenio_Particular_PF(
									cd_estabelecimento_w, cd_convenio_w, null, dt_item_w, cd_convenio_pf_w, cd_categoria_pf_w) INTO STRICT cd_convenio_pf_w, cd_categoria_pf_w;

								select	nextval('material_atend_paciente_seq')
								into STRICT	nr_seq_excedido_w
								;

								begin
								insert into material_atend_paciente(
										nr_sequencia,
										nr_atendimento,
										dt_entrada_unidade,
										cd_material,
										dt_atendimento,
										cd_unidade_medida,
										qt_material,
										dt_atualizacao,
										nm_usuario,
										cd_acao,
										cd_setor_atendimento,
										nr_seq_atepacu,
										cd_material_prescricao,
										cd_material_exec,
										ie_via_aplicacao,
										dt_prescricao,
										nr_prescricao,
										nr_sequencia_prescricao,
										cd_cgc_fornecedor,
										qt_executada,
										nr_seq_pepo,
										cd_local_estoque,
										vl_unitario,
										qt_ajuste_conta,
										ie_valor_informado,
										ie_guia_informada,
										ie_auditoria,
										nm_usuario_original,
										cd_situacao_glosa,
										cd_convenio,
										cd_categoria,
										nr_doc_convenio,
										ie_tipo_guia,
										nr_seq_lote_fornec,
										cd_senha,
										dt_conta,
										nr_seq_kit_estoque)
									values (
										nr_seq_excedido_w,
										nr_atendimento_w,
										dt_entrada_unidade_w,
										cd_material_w,
										dt_inicio_w,
										cd_unidade_medida_w,
										qt_excedida_w,
										clock_timestamp(),
										nm_usuario_p,
										'1',
										cd_setor_atend_baixa_w,
										nr_seq_atepacu_w,
										cd_material_w,
										cd_material_w,
										ie_via_aplicacao_w,
										dt_prescricao_w,
										nr_prescricao_w,
										nr_seq_prescr_w,
										cd_fornec_consignado_w,
										qt_excedida_w,
										nr_seq_pepo_p,
										cd_local_estoque_w,
										0,
										0,
										'N',
										'N',
										'N',
										nm_usuario_p,
										0,
										cd_convenio_pf_w,
										cd_categoria_pf_w,
										nr_doc_convenio_w,
										ie_tipo_guia_w,
										nr_seq_lote_fornec_w,
										cd_senha_w,
										dt_inicio_w,
										nr_seq_kit_estoque_w);
								exception
								when others then
									ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);
									ds_erro_ww 	:= ds_erro_w;
								end;

								CALL atualiza_preco_material(nr_seq_excedido_w, nm_usuario_p);

										ds_erro_w := null;
							end if;

						end if;

						if (qt_material_w > 0) then
							begin

							insert into material_atend_paciente(
										nr_sequencia,
										nr_atendimento,
										dt_entrada_unidade,
										cd_material,
										dt_atendimento,
										cd_unidade_medida,
										qt_material,
										dt_atualizacao,
										nm_usuario,
										cd_acao,
										cd_setor_atendimento,
										nr_seq_atepacu,
										cd_material_prescricao,
										cd_material_exec,
										ie_via_aplicacao,
										dt_prescricao,
										nr_prescricao,
										nr_sequencia_prescricao,
										cd_cgc_fornecedor,
										qt_executada,
										nr_seq_pepo,
										cd_local_estoque,
										vl_unitario,
										qt_ajuste_conta,
										ie_valor_informado,
										ie_guia_informada,
										ie_auditoria,
										nm_usuario_original,
										cd_situacao_glosa,
										cd_convenio,
										cd_categoria,
										nr_doc_convenio,
										ie_tipo_guia,
										nr_seq_lote_fornec,
										cd_senha,
										dt_conta,
										nr_seq_kit_estoque)
									values (
										nr_sequencia_w,
										nr_atendimento_w,
										dt_entrada_unidade_w,
										cd_material_w,
										dt_inicio_w,
										cd_unidade_medida_w,
										qt_material_w,
										clock_timestamp(),
										nm_usuario_p,
										'1',
										cd_setor_atend_baixa_w,
										nr_seq_atepacu_w,
										cd_material_w,
										cd_material_w,
										ie_via_aplicacao_w,
										dt_prescricao_w,
										nr_prescricao_w,
										nr_seq_prescr_w,
										cd_fornec_consignado_w,
										qt_material_w,
										nr_seq_pepo_p,
										cd_local_estoque_w,
										0,
										0,
										'N',
										'N',
										'N',
										nm_usuario_p,
										0,
										cd_convenio_w,
										cd_categoria_w,
										nr_doc_convenio_w,
										ie_tipo_guia_w,
										nr_seq_lote_fornec_w,
										cd_senha_w,
										dt_inicio_w,
										nr_seq_kit_estoque_w);
							exception
							when others then
								ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);
								ds_erro_ww 	:= ds_erro_w;
							end;

						end if;

					else

						begin
						insert into material_atend_paciente(
									nr_sequencia,
									nr_atendimento,
									dt_entrada_unidade,
									cd_material,
									dt_atendimento,
									cd_unidade_medida,
									qt_material,
									dt_atualizacao,
									nm_usuario,
									cd_acao,
									cd_setor_atendimento,
									nr_seq_atepacu,
									cd_material_prescricao,
									cd_material_exec,
									ie_via_aplicacao,
									dt_prescricao,
									nr_prescricao,
									nr_sequencia_prescricao,
									cd_cgc_fornecedor,
									qt_executada,
									nr_seq_pepo,
									cd_local_estoque,
									vl_unitario,
									qt_ajuste_conta,
									ie_valor_informado,
									ie_guia_informada,
									ie_auditoria,
									nm_usuario_original,
									cd_situacao_glosa,
									cd_convenio,
									cd_categoria,
									nr_doc_convenio,
									ie_tipo_guia,
									nr_seq_lote_fornec,
									cd_senha,
									dt_conta,
									nr_seq_kit_estoque)
								values (
									nr_sequencia_w,
									nr_atendimento_w,
									dt_entrada_unidade_w,
									cd_material_w,
									dt_inicio_w,
									cd_unidade_medida_w,
									qt_material_w,
									clock_timestamp(),
									nm_usuario_p,
									'1',
									cd_setor_atend_baixa_w,
									nr_seq_atepacu_w,
									cd_material_w,
									cd_material_w,
									ie_via_aplicacao_w,
									dt_prescricao_w,
									nr_prescricao_w,
									nr_seq_prescr_w,
									cd_fornec_consignado_w,
									qt_material_w,
									nr_seq_pepo_p,
									cd_local_estoque_w,
									0,
									0,
									'N',
									'N',
									'N',
									nm_usuario_p,
									0,
									cd_convenio_w,
									cd_categoria_w,
									nr_doc_convenio_w,
									ie_tipo_guia_w,
									nr_seq_lote_fornec_w,
									cd_senha_w,
									dt_inicio_w,
									nr_seq_kit_estoque_w);
						exception
						when others then
							ds_erro_w 	:= substr(SQLERRM(SQLSTATE),1,255);
							ds_erro_ww 	:= ds_erro_w;
						end;

					end if;

					if (coalesce(ds_erro_w::text, '') = '') then

						CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

					CALL gerar_autor_regra(nr_atendimento_w,
							nr_sequencia_w,
							null,
							null,
							null,
							null,
							'PC',
							nm_usuario_p,
						null,
							null,
							null,
							null,
							null,
							null,
							'',
							'',
							'');


						if (ie_tipo_lancto_w	= '0') then
							CALL Gerar_Lanc_Automatico_Mat(nr_atendimento_w,cd_local_estoque_w,132,nm_usuario_p,nr_sequencia_w,null,null);
						end if;

						cd_motivo_baixa_w := cd_motivo_baixa_original_w;

						update	prescr_material
						set	dt_baixa 		= clock_timestamp(),
							cd_motivo_baixa 	= cd_motivo_baixa_w,
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p,
							cd_local_estoque	= cd_local_estoque_w
						where	nr_prescricao		= nr_prescricao_w
						and	nr_sequencia		= nr_seq_prescr_w
						and	coalesce(cd_motivo_baixa,0) = 0;
					end if;
					ds_erro_w := null;
				elsif (coalesce(ie_possui_saldo_w,'S') = 'S') and (coalesce(ie_local_esto_setor_w,'S') = 'S') then
					update	prescr_material
					set	dt_baixa 		= clock_timestamp(),
						cd_motivo_baixa 	= cd_motivo_baixa_w,
						dt_atualizacao 		= clock_timestamp(),
						nm_usuario 		= nm_usuario_p,
						cd_local_estoque 	= cd_local_estoque_w
					where 	nr_prescricao 		= nr_prescricao_w
					and 	nr_sequencia  		= nr_seq_prescr_w
					and	coalesce(cd_motivo_baixa,0)  = 0;
				end if;
			end if;

		commit;
		end loop;
		close C02;

		if (ie_permitir_baixa_w = 'A') and (ie_conta_fechada_w = 'S') and (coalesce(length(ds_erro_p),0) < 255) then
			ds_erro_p	:= wheb_mensagem_pck.get_texto(278109);
		end if;

		end;
	elsif	(ie_permitir_baixa_w = 'B' AND ie_conta_fechada_w = 'S') and (coalesce(length(ds_erro_p),0) < 255) then
		ds_erro_p	:= wheb_mensagem_pck.get_texto(190662);
	end if;

end loop;
close c01;

<<final>>

if (coalesce(ds_erro_p::text, '') = '') and (ds_erro_ww IS NOT NULL AND ds_erro_ww::text <> '') then
	ds_erro_p	:= ds_erro_ww;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_prescr_mat_fanep ( nr_seq_pepo_p bigint, nr_prescricao_p bigint, cd_local_estoque_p bigint, nr_seq_atepacu_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_setor_atendimento_p bigint, cd_funcao_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

