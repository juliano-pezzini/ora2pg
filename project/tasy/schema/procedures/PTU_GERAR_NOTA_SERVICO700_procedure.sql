-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_nota_servico700 ( nr_seq_cobranca_p bigint, cd_interface_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_servico_w			varchar(4000);
ds_servico_orig_w		varchar(4000);
nm_medico_executor_imp_w	varchar(80);
nm_prestador_w			varchar(70);
nm_profissional_prestador_w	varchar(70);
nm_medico_req_w			varchar(40);
nm_prestador_req_w		varchar(40);
nr_cpf_imp_w			varchar(30);
nr_crm_imp_w			varchar(30);
sg_conselho_imp_w		varchar(30);
cd_servico_a900_w		varchar(30);
cd_material_ops_w		varchar(30);
cd_servico_saida_w		varchar(30);
cd_guia_w			varchar(20);
cd_pessoa_fisica_w		varchar(20);
cd_guia_referencia_w		varchar(20);
nr_cons_prof_prest_w		varchar(15);
nr_cons_prof_req_w		varchar(15);
nr_cnpj_cpf_w			varchar(14);
nr_cgc_cpf_req_w		varchar(14);
sg_cons_prof_prest_w		varchar(12);
sg_cons_prof_req_w		varchar(10);
nr_cpf_pessoa_ficia_w		varchar(10);
cd_cooperativa_w		varchar(10);
cd_medico_executor_conta_w	varchar(10);
cd_medico_executor_partic_w	varchar(10);
cd_medico_solic_w		varchar(10);
cd_prestador_w			varchar(8);
cd_cnes_w			varchar(7);
uf_crm_imp_w			valor_dominio.vl_dominio%type;
cd_estabelecimento_w		varchar(4);
sg_uf_cons_prest_w		valor_dominio.vl_dominio%type;
sg_uf_cons_req_w		valor_dominio.vl_dominio%type;
ie_tipo_guia_w			varchar(2);
ie_material_intercambio_w	varchar(2);
ie_tipo_vinculo_w		varchar(1);
ie_tipo_pessoa_pres_w		varchar(1);
ie_tipo_participacao_w		varchar(1);
ie_pacote_w			varchar(1)	:= 'N';
ie_reembolso_w			varchar(1);
ie_tipo_prestador_w		varchar(2);
ie_rede_propria_w		varchar(1);
cd_porte_anest_w		varchar(1);
cd_ato_w			varchar(1);
ie_tipo_conta_w			varchar(1);
ie_taxa_w			varchar(1);
ie_insert_servico_w		varchar(1)	:= 'S';
ie_tipo_despesa_mat_w		varchar(1);
vl_procedimento_w		double precision;
vl_custo_operacional_w		double precision;
vl_filme_w			double precision;
vl_procedimento_imp_w		double precision;
tx_ajuste_filme_w		double precision;
tx_ajuste_custo_oper_w		double precision;
cd_procedimento_w		bigint;
cd_proc_pacote_w		bigint;
cd_grupo_regra_w		bigint;
cd_proc_conversao_w		bigint;
cd_servico_w			bigint;
vl_adic_procedimento_w		double precision;
vl_adic_filme_w			double precision;
vl_prestador_w			double precision;
vl_adic_custo_operacional_w	double precision;
vl_proc_participante_w		double precision;
vl_total_participante_w		double precision;
nr_nota_w			ptu_nota_cobranca.nr_nota%type;
nr_nota_number_w		numeric(20);
nr_seq_conta_w			bigint;
ie_origem_proced_w		bigint;
nr_nota_fiscal_w		bigint;
nr_seq_lote_w			bigint;
nr_seq_protocolo_w		bigint;
nr_nr_seq_fatura_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_grau_part_w		bigint;
nr_seq_grau_part_ww		bigint;
nr_seq_tipo_prest_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_fatura_w			bigint;
qt_dia_proced_receb_w		bigint;
nr_seq_segurado_w		bigint;
ie_origem_regra_w		bigint;
nr_seq_estrut_mat_w		bigint;
nr_seq_proc_conta_w		bigint;
nr_seq_material_w		bigint;
nr_seq_regra_conv_w		bigint;
ie_origem_proced_conv_w		bigint;
qt_proced_origem_w		bigint;
cd_medico_prest_exec_w		bigint;
nr_seq_prestador_atend_w	bigint;
nr_seq_mat_unimed_w		bigint;
qt_registro_w			bigint	:= 0;
nr_seq_regra_conv_mat_w		bigint;
tx_procedimento_w		double precision;
qt_procedimento_w		double precision;
cd_area_regra_w			integer;
cd_especialidade_regra_w	integer;
cd_especialidade_med_w		integer;
cd_unim_prestador_w		ptu_nota_servico.cd_unimed_prestador%type;
ie_union_w			smallint;
cd_tipo_prestador_w		smallint;
ie_via_acesso_w			smallint;
cd_especialidade_w		smallint;
ie_tipo_despesa_w		smallint;
ie_tipo_tabela_w		smallint;
ie_tipo_tabela_conv_w		smallint;
dt_procedimento_w		timestamp;
dt_inicio_proc_w		timestamp;
hr_final_w			timestamp;
nr_cbo_w			integer;
cd_cbo_w			varchar(6);
ie_acres_urg_emer_w		varchar(1);
ie_tec_utilizada_w		varchar(1);
dt_autoriz_w			timestamp;
dt_solicitacao_w		timestamp;
nr_seq_guia_w			bigint;
nr_registro_anvisa_w		varchar(60);
cd_ref_material_fab_w		varchar(60);
ie_mat_a900_w			varchar(1) := 'N';
cd_municipio_w			varchar(7);
cd_medico_imp_w			varchar(10);
dt_competencia_pgto_w		timestamp;
cd_unidade_medida_w		varchar(30);
nr_uni_medida_ptu_w		varchar(5);
dt_alta_w			timestamp;
tx_intercambio_w		double precision;
cd_servico_mat_w		varchar(50);
cd_excecao_w			varchar(20);
cd_senha_w			varchar(20);
ie_status_w			varchar(2);
dt_inicio_pagto_w		timestamp;
dt_fim_pagto_w			timestamp;
ie_tipo_atendimento_w		varchar(2);
vl_co_item_w			double precision;
ie_recem_nascido_w		varchar(1)	:= 'N';
cd_pessoa_exec_w		varchar(10);
cd_prestador_exec_w		varchar(8);
nr_seq_cbo_saude_exec_w		bigint;
qt_registro_med_w		integer;
cd_cgc_w			varchar(14);
cd_unimed_origem_w		varchar(4);
nr_seq_ptu_fatura_w		bigint;
nr_seq_congenere_w		bigint;
ie_tipo_intercambio_w		varchar(1);
sg_estado_w			pessoa_juridica.sg_estado%type;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
ie_tipo_contrato_w		pls_intercambio.ie_tipo_contrato%type;
dt_protocolo_w			timestamp;
qt_dia_vencimento_w		bigint;
nr_seq_lote_pgto_w		bigint;
ie_somente_codigo_w		pls_regra_conv_mat_interc.ie_somente_codigo%type;
ie_tipo_part_regra_w		varchar(1);
nr_seq_prestador_pgto_w		bigint;
cd_cbo_sus_w			varchar(6);
ie_carater_atendimento_w	ptu_nota_cobranca.ie_carater_atendimento%type;
cd_rec_prestador_w		ptu_nota_servico.cd_rec_prestador%type;
nr_seq_tipo_atendimento_w	pls_conta.nr_seq_tipo_atendimento%type;
ie_versao_w			bigint;
ie_diaria_w			varchar(5) := 'N';
nr_ver_tiss_w			ptu_nota_cobranca.nr_ver_tiss%type;

C01 CURSOR FOR
	SELECT	'P',
		1 ie_union,
		b.nr_sequencia,
		a.nr_sequencia,
		c.dt_inicio_proc,
		CASE WHEN c.ie_via_acesso='U' THEN 0 WHEN c.ie_via_acesso='M' THEN 1 WHEN c.ie_via_acesso='D' THEN 2  ELSE '' END ,
		substr(c.cd_porte_anestesico,1,1),
		b.nr_seq_grau_partic,
		b.nr_seq_prestador_exec,
		coalesce(c.dt_procedimento,clock_timestamp()),
		substr(c.ie_tipo_despesa,1,1),
		c.cd_procedimento cd_procedimento,
		c.ie_origem_proced,
		coalesce(c.qt_procedimento,0),
		coalesce(c.vl_liberado_hi,0),
		coalesce(c.vl_liberado_co,0),
		substr(coalesce(b.cd_cnes,'9999999'),1,7),
		CASE WHEN c.nr_sequencia='' THEN 'N'  ELSE 'S' END ,
		b.cd_guia,
		coalesce(c.tx_item,0),
		c.ie_ato_cooperado,
		coalesce(c.vl_liberado,0),
		b.cd_medico_solicitante,
		coalesce(c.vl_liberado_material,0),
		coalesce(c.vl_lib_taxa_material,0),
		coalesce(c.vl_lib_taxa_servico,0),
		coalesce(c.vl_lib_taxa_co,0),
		b.cd_medico_executor,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		b.cd_medico_solicitante,
		b.nr_seq_prestador,
		c.nr_sequencia,
		null,
		b.cd_guia_referencia,
		c.dt_fim_proc,
		coalesce(substr(pls_obter_se_urgencia_emergen(b.nr_sequencia,c.nr_sequencia),1,1),'N'),
		substr(ptu_obter_tec_utilizada(c.nr_sequencia),1,1),
		b.nr_seq_guia,
		b.ie_recem_nascido,
		b.nr_seq_tipo_atendimento
	from	pls_conta_proc		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	c.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= a.nr_sequencia
	and	b.nr_sequencia		= nr_nota_number_w
	and	c.vl_liberado > 0
	and	not exists (	SELECT	1
				from	pls_proc_participante x
				where	x.nr_seq_conta_proc = c.nr_sequencia)	
union all

	select	'P',
		1 ie_union,
		b.nr_sequencia,
		a.nr_sequencia,
		c.dt_inicio_proc,
		CASE WHEN c.ie_via_acesso='U' THEN 0 WHEN c.ie_via_acesso='M' THEN 1 WHEN c.ie_via_acesso='D' THEN 2  ELSE '' END ,
		substr(c.cd_porte_anestesico,1,1),
		coalesce(d.nr_seq_grau_partic,b.nr_seq_grau_partic),
		b.nr_seq_prestador_exec,
		coalesce(c.dt_procedimento,clock_timestamp()),
		substr(c.ie_tipo_despesa,1,1),
		c.cd_procedimento cd_procedimento,
		c.ie_origem_proced,
		coalesce(c.qt_procedimento,0),
		coalesce(d.vl_participante,0),
		0,
		substr(b.cd_cnes,1,7),
		CASE WHEN c.nr_sequencia='' THEN 'N'  ELSE 'S' END ,
		b.cd_guia,
		coalesce(c.tx_item,0),
		c.ie_ato_cooperado,
		coalesce(d.vl_participante,0),
		b.cd_medico_solicitante,
		coalesce(c.vl_material_ptu,0),
		coalesce(c.vl_taxa_material,0),
		coalesce(c.vl_taxa_servico,0),
		coalesce(c.vl_taxa_co,0),
		b.cd_medico_executor,
		d.cd_medico,
		d.nr_cpf_imp,
		d.nr_crm_imp,
		d.sg_conselho_imp,
		d.uf_crm_imp,
		d.nm_medico_executor_imp,
		d.cd_medico_imp,
		b.cd_medico_solicitante,
		b.nr_seq_prestador,
		c.nr_sequencia,
		null,
		b.cd_guia_referencia,
		c.dt_fim_proc,
		coalesce(substr(pls_obter_se_urgencia_emergen(b.nr_sequencia,c.nr_sequencia),1,1),'N'),
		substr(ptu_obter_tec_utilizada(c.nr_sequencia),1,1),
		b.nr_seq_guia,
		b.ie_recem_nascido,
		b.nr_seq_tipo_atendimento
	from	pls_proc_participante	d,
		pls_conta_proc		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	c.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= a.nr_sequencia
	and	d.nr_seq_conta_proc	= c.nr_sequencia
	and	b.nr_sequencia		= nr_nota_number_w
	and	c.vl_liberado > 0
	
union all

	select	'M',
		3 ie_union,
		b.nr_sequencia,
		a.nr_sequencia,
		c.dt_inicio_atend,
		null,
		null,
		b.nr_seq_grau_partic,
		b.nr_seq_prestador_exec,
		coalesce(c.dt_atendimento,clock_timestamp()),
		substr(c.ie_tipo_despesa,1,1),
		c.nr_seq_material cd_procedimento,
		c.ie_origem_preco,
		coalesce(c.qt_material,0),
		coalesce(c.vl_liberado,0),
		0,
		substr(b.cd_cnes,1,7),
		CASE WHEN c.nr_sequencia='' THEN 'N'  ELSE 'S' END ,
		b.cd_guia,
		coalesce(c.tx_participacao,0),
		c.ie_ato_cooperado,
		coalesce(c.vl_liberado,0),
		b.cd_medico_solicitante,
		0,
		0,
		coalesce(c.vl_lib_taxa_material,0),
		0,
		b.cd_medico_executor,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		b.cd_medico_solicitante,
		b.nr_seq_prestador,
		null,
		c.nr_sequencia,
		b.cd_guia_referencia,
		c.dt_fim_atend,
		'N',
		null,
		b.nr_seq_guia,
		b.ie_recem_nascido,
		b.nr_seq_tipo_atendimento
	from	pls_conta_mat		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	c.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= a.nr_sequencia
	and	b.nr_sequencia		= nr_nota_number_w
	and	c.vl_liberado > 0
	order by ie_union,
		cd_procedimento;
	

BEGIN
select	b.nr_seq_fatura,
	b.nr_nota,
	a.cd_estabelecimento,
	a.cd_unimed_destino,
	b.cd_excecao,
	a.dt_inicio_pagto,
	a.dt_fim_pagto,
	b.ie_tipo_atendimento,
	b.dt_protocolo,
	b.ie_carater_atendimento,
	b.nr_ver_tiss
into STRICT	nr_seq_fatura_w,
	nr_nota_w,
	cd_estabelecimento_w,
	cd_cooperativa_w,
	cd_excecao_w,
	dt_inicio_pagto_w,
	dt_fim_pagto_w,
	ie_tipo_atendimento_w,
	dt_protocolo_w,
	ie_carater_atendimento_w,
	nr_ver_tiss_w
from	ptu_nota_cobranca	b,
	ptu_servico_pre_pagto	a
where	b.nr_seq_serv_pre_pagto	= a.nr_sequencia
and	b.nr_sequencia		= nr_seq_cobranca_p;

nr_nota_number_w := null;

if (somente_numero(nr_nota_w) > 0) then
	nr_nota_number_w := somente_numero(nr_nota_w);
end if;

begin
select 	coalesce(max(ie_material_intercambio), 'S')
into STRICT	ie_material_intercambio_w
from 	pls_parametros
where 	cd_estabelecimento	= cd_estabelecimento_w;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(182468);
end;

cd_unim_prestador_w	:= substr(pls_obter_unimed_estab(cd_estabelecimento_w),1,10);
ie_versao_w	:= somente_numero(ptu_obter_versao_dominio('A700', cd_interface_p));

open C01;
loop		
fetch C01 into
	ie_tipo_conta_w,
	ie_union_w,
	nr_seq_conta_w,
	nr_seq_protocolo_w,
	dt_inicio_proc_w,
	ie_via_acesso_w,
	cd_porte_anest_w,
	nr_seq_grau_part_w,
	nr_seq_prestador_exec_w,
	dt_procedimento_w,
	ie_tipo_despesa_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_procedimento_w,
	vl_procedimento_w,
	vl_custo_operacional_w,
	cd_cnes_w,
	ie_reembolso_w,
	cd_guia_w,
	tx_procedimento_w,
	cd_ato_w,
	vl_prestador_w,
	cd_pessoa_fisica_w,
	vl_filme_w,	
	vl_adic_filme_w,
	vl_adic_procedimento_w,
	vl_adic_custo_operacional_w,
	cd_medico_executor_conta_w,
	cd_medico_executor_partic_w,
	nr_cpf_imp_w,
	nr_crm_imp_w,
	sg_conselho_imp_w,
	uf_crm_imp_w,
	nm_medico_executor_imp_w,
	cd_medico_imp_w,
	cd_medico_solic_w,
	nr_seq_prestador_atend_w,
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w,
	cd_guia_referencia_w,
	hr_final_w,
	ie_acres_urg_emer_w,
	ie_tec_utilizada_w,
	nr_seq_guia_w,
	ie_recem_nascido_w,
	nr_seq_tipo_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	nm_profissional_prestador_w	:= null;
	sg_cons_prof_prest_w		:= null;
	nr_cons_prof_prest_w		:= null;
	sg_uf_cons_prest_w		:= null;
	cd_municipio_w			:= null;
	cd_cbo_w			:= null;
	cd_pessoa_exec_w		:= null;
	cd_prestador_exec_w		:= null;
	nr_seq_cbo_saude_exec_w		:= null;
	cd_cbo_sus_w			:= null;
	
	if (sg_conselho_imp_w IS NOT NULL AND sg_conselho_imp_w::text <> '') then
		select coalesce(max(a.cd_ptu),sg_conselho_imp_w)
		into STRICT sg_conselho_imp_w
		from conselho_profissional 	a
		where a.sg_conselho = sg_conselho_imp_w;
	end if;
	
	if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
		select	substr(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'CDM'), 1, 6)
		into STRICT	cd_municipio_w
		from	pls_prestador	a
		where	a.nr_sequencia	= nr_seq_prestador_exec_w;
	end if;
	
	select	max(a.nr_seq_fatura)
	into STRICT	nr_seq_ptu_fatura_w
	from	pls_conta	a
	where	a.nr_sequencia	= nr_seq_conta_w;
			
	if (nr_seq_ptu_fatura_w IS NOT NULL AND nr_seq_ptu_fatura_w::text <> '') then
		select	lpad(max(cd_unimed_origem),4,'0')
		into STRICT	cd_unimed_origem_w
		from	ptu_fatura
		where	nr_sequencia = nr_seq_ptu_fatura_w;
		
		if (cd_unimed_origem_w IS NOT NULL AND cd_unimed_origem_w::text <> '') then
			select	max(cd_cgc)
			into STRICT	cd_cgc_w
			from	pls_congenere
			where	cd_cooperativa = cd_unimed_origem_w;
		end if;
	end if;

	dt_competencia_pgto_w := null;
	nr_seq_lote_pgto_w := null;
		
	if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
		begin
		select	qt_dia_vencimento
		into STRICT	qt_dia_vencimento_w
		from	pls_prestador_pagto
		where	nr_seq_prestador = nr_seq_prestador_exec_w;
		exception
		when others then
			qt_dia_vencimento_w := 0;
		end;
	end if;
	
	if (coalesce(qt_dia_vencimento_w,0) > 0) then
		dt_competencia_pgto_w := to_date(lpad(qt_dia_vencimento_w,2,'0') || to_char(dt_protocolo_w,'mm/yyyy'));
		
		if (trunc(dt_protocolo_w) >= trunc(dt_competencia_pgto_w)) then
			dt_competencia_pgto_w	:= add_months(dt_competencia_pgto_w,1);
		end if;	
	else	
		select	max(dt_competencia_pgto)
		into STRICT	dt_competencia_pgto_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta = nr_seq_conta_w
		and	coalesce(nr_seq_prestador_pgto,nr_seq_prestador_exec) = nr_seq_prestador_pgto_w;
		
		if (coalesce(dt_competencia_pgto_w::text, '') = '') then
			dt_competencia_pgto_w := dt_protocolo_w;
		end if;
		
		if (trunc(dt_protocolo_w) >= trunc(dt_competencia_pgto_w)) then
			dt_competencia_pgto_w	:= dt_competencia_pgto_w + 1;
		end if;
	end if;
	
	if (dt_competencia_pgto_w not between dt_inicio_pagto_w and dt_fim_pagto_w) then
		
		if (to_char(dt_competencia_pgto_w,'dd') > to_char(dt_fim_pagto_w,'dd')) then
			dt_competencia_pgto_w := dt_fim_pagto_w;
		end if;
	
		dt_competencia_pgto_w	:= to_date(lpad(dt_competencia_pgto_w,2,'0') || to_char(dt_inicio_pagto_w,'mm/yyyy'));
	end if;
	
	/*if	(nr_seq_conta_proc_w is not null) then
		select	max(nr_seq_lote_pgto),
			max(dt_competencia_pgto)
		into	nr_seq_lote_pgto_w,
			dt_competencia_pgto_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta 		= nr_seq_conta_w
		and	nr_seq_conta_proc	= nr_seq_conta_proc_w;
		
	elsif	(nr_seq_conta_mat_w is not null) then
		select	max(nr_seq_lote_pgto),
			max(dt_competencia_pgto)
		into	nr_seq_lote_pgto_w,
			dt_competencia_pgto_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta 		= nr_seq_conta_w
		and	nr_seq_conta_mat	= nr_seq_conta_mat_w;
	end if;
	
	if	(nr_seq_lote_pgto_w is null) then
		select	max(nr_seq_lote_pgto),
			max(dt_competencia_pgto)
		into	nr_seq_lote_pgto_w,
			dt_competencia_pgto_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta 		= nr_seq_conta_w;
	end if;
	
	if	(dt_competencia_pgto_w is null) or
		(dt_competencia_pgto_w < trunc(dt_inicio_pagto_w)) or
		(dt_competencia_pgto_w > fim_dia(dt_fim_pagto_w)) then
		
		if	(nr_seq_lote_pgto_w is not null) then
			select	max(dt_mes_competencia)
			into	dt_competencia_pgto_w
			from	pls_lote_pagamento
			where	nr_sequencia = nr_seq_lote_pgto_w;
		end if;
		
		if	(dt_competencia_pgto_w is null) then
			dt_competencia_pgto_w := dt_inicio_pagto_w;
		end if;
	end if;*/

	
	/*	begin
		dt_competencia_pgto_w := to_date(lpad(qt_dia_vencimento_w,2,'0') || to_char(dt_protocolo_w,'mm/yyyy'));
		
		if	(trunc(dt_protocolo_w) >= trunc(dt_competencia_pgto_w)) then
			dt_competencia_pgto_w	:= add_months(dt_competencia_pgto_w,1);
		end if;
		exception
		when others then
			dt_competencia_pgto_w := null;
		end;
	
	else	
		select	max(dt_competencia_pgto)
		into	dt_competencia_pgto_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta = nr_seq_conta_w
		and	nvl(nr_seq_prestador_pgto,nr_seq_prestador_exec) = nr_seq_prestador_exec_w;
		
		if	(dt_competencia_pgto_w is null) then
			dt_competencia_pgto_w := dt_protocolo_w;
		end if;
		
		if	(trunc(dt_protocolo_w) >= trunc(dt_competencia_pgto_w)) then
			dt_competencia_pgto_w	:= dt_competencia_pgto_w + 1;
		end if;
	end if;*/

	
	--if	(( dt_competencia_pgto_w is null) or (dt_competencia_pgto_w between trunc(dt_inicio_pagto_w) and fim_dia(dt_fim_pagto_w))) then

		----------------------------------------------------------------------------------	DADOS DO EXECUTOR		---------------------------------------------------------------------------------- 

		-- Verificar primeiro pelo medico do participante
		if (cd_medico_executor_partic_w IS NOT NULL AND cd_medico_executor_partic_w::text <> '') then
			nm_profissional_prestador_w	:= substr(obter_nome_medico(cd_medico_executor_partic_w, 'N'), 1, 70);
			sg_cons_prof_prest_w		:= substr(pls_obter_sg_conselho_ptu(cd_medico_executor_partic_w), 1, 12);
			nr_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_executor_partic_w, 'CRM'), 1, 15);
			sg_uf_cons_prest_w		:= substr(obter_dados_medico(cd_medico_executor_partic_w, 'UFCRM'), 1, 2);
			cd_municipio_w			:= coalesce(cd_municipio_w,substr(obter_dados_pf_pj(cd_medico_executor_partic_w, null, 'CDM'), 1, 6));
			cd_pessoa_exec_w		:= coalesce(cd_pessoa_exec_w,cd_medico_executor_partic_w);
			cd_prestador_exec_w		:= substr(nr_cons_prof_prest_w,1,8);
			
			begin
			select	max(nr_seq_cbo_saude)
			into STRICT	nr_seq_cbo_saude_exec_w
			from	pessoa_fisica
			where	cd_pessoa_fisica = cd_medico_executor_partic_w;
			exception
			when others then
				nr_seq_cbo_saude_exec_w := null;
			end;
			
			begin
			select	max(cd_cbo)
			into STRICT	cd_cbo_sus_w
			from	sus_cbo_pessoa_fisica
			where	cd_pessoa_fisica = cd_medico_executor_partic_w;
			exception
			when others then
				cd_cbo_sus_w := null;
			end;			
			
		elsif (nr_cpf_imp_w IS NOT NULL AND nr_cpf_imp_w::text <> '') or (nr_crm_imp_w IS NOT NULL AND nr_crm_imp_w::text <> '') then		
			nm_profissional_prestador_w	:= substr(nm_medico_executor_imp_w,1,70);
			sg_cons_prof_prest_w		:= sg_conselho_imp_w;
			nr_cons_prof_prest_w		:= nr_crm_imp_w;
			sg_uf_cons_prest_w		:= uf_crm_imp_w;
			
			if	((coalesce(cd_municipio_w::text, '') = '') and (cd_medico_imp_w IS NOT NULL AND cd_medico_imp_w::text <> '')) then
				cd_municipio_w	:= substr(obter_dados_pf_pj(cd_medico_imp_w, null, 'CDM'), 1, 6);
			end if;
			
			cd_pessoa_exec_w		:= coalesce(cd_pessoa_exec_w,cd_medico_imp_w);
			cd_prestador_exec_w		:= substr(nr_cons_prof_prest_w,1,8);
			
			begin
			select	max(nr_seq_cbo_saude)
			into STRICT	nr_seq_cbo_saude_exec_w
			from	pessoa_fisica
			where	cd_pessoa_fisica = cd_medico_imp_w;
			exception
			when others then
				nr_seq_cbo_saude_exec_w := null;
			end;
			
			begin
			select	max(cd_cbo)
			into STRICT	cd_cbo_sus_w
			from	sus_cbo_pessoa_fisica
			where	cd_pessoa_fisica = cd_medico_imp_w;
			exception
			when others then
				cd_cbo_sus_w := null;
			end;
		end if;
		
		-- Se nao achou, verificar pelo medico executor da conta
		if (coalesce(cd_medico_executor_partic_w::text, '') = '') and (coalesce(nr_cpf_imp_w::text, '') = '') and (coalesce(nr_crm_imp_w::text, '') = '') and (cd_medico_executor_conta_w IS NOT NULL AND cd_medico_executor_conta_w::text <> '') then
			nm_profissional_prestador_w	:= substr(obter_nome_medico(cd_medico_executor_conta_w, 'N'), 1, 70);
			sg_cons_prof_prest_w		:= substr(pls_obter_sg_conselho_ptu(cd_medico_executor_conta_w), 1, 12);
			nr_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_executor_conta_w, 'CRM'), 1, 15);
			sg_uf_cons_prest_w		:= substr(obter_dados_medico(cd_medico_executor_conta_w, 'UFCRM'), 1, 2);
			cd_municipio_w			:= coalesce(cd_municipio_w,substr(obter_dados_pf_pj(cd_medico_executor_conta_w, null, 'CDM'), 1, 6));
			cd_pessoa_exec_w		:= coalesce(cd_pessoa_exec_w,cd_medico_executor_conta_w);
			cd_prestador_exec_w		:= substr(nr_cons_prof_prest_w,1,8);
			
			begin
			select	max(nr_seq_cbo_saude)
			into STRICT	nr_seq_cbo_saude_exec_w
			from	pessoa_fisica
			where	cd_pessoa_fisica = cd_medico_executor_conta_w;
			exception
			when others then
				nr_seq_cbo_saude_exec_w := null;
			end;
			
			begin
			select	max(cd_cbo)
			into STRICT	cd_cbo_sus_w
			from	sus_cbo_pessoa_fisica
			where	cd_pessoa_fisica = cd_medico_executor_conta_w;
			exception
			when others then
				cd_cbo_sus_w := null;
			end;
		end if;
		
		-- Se nao achou, verificar pelo prestador executor da conta
		if (coalesce(cd_medico_executor_partic_w::text, '') = '') and (coalesce(nr_cpf_imp_w::text, '') = '') and (coalesce(nr_crm_imp_w::text, '') = '') and (coalesce(cd_medico_executor_conta_w::text, '') = '') and (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
			
			select	a.cd_pessoa_fisica,
				substr(pls_obter_dados_prestador(a.nr_sequencia,'N'),1,70),
				coalesce(cd_municipio_w,substr(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'CDM'), 1, 6))
			into STRICT	cd_medico_prest_exec_w,
				nm_profissional_prestador_w,
				cd_municipio_w
			from	pls_prestador	a
			where	a.nr_sequencia	= nr_seq_prestador_exec_w;
			
			cd_municipio_w := coalesce(substr(pls_obter_dados_prestador(nr_seq_prestador_exec_w, 'IBGE'), 1, 6),cd_municipio_w);
			
			select	count(1)
			into STRICT	qt_registro_med_w
			from	medico
			where	cd_pessoa_fisica = cd_medico_prest_exec_w;
			
			if (cd_medico_prest_exec_w IS NOT NULL AND cd_medico_prest_exec_w::text <> '') and (qt_registro_med_w > 0) then
				nm_profissional_prestador_w	:= substr(obter_nome_medico(cd_medico_prest_exec_w, 'N'), 1, 70);
				sg_cons_prof_prest_w		:= substr(pls_obter_sg_conselho_ptu(cd_medico_prest_exec_w), 1, 12);
				nr_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_prest_exec_w, 'CRM'), 1, 15);
				sg_uf_cons_prest_w		:= substr(obter_dados_medico(cd_medico_prest_exec_w, 'UFCRM'), 1, 2);
				cd_municipio_w			:= coalesce(cd_municipio_w,substr(obter_dados_pf_pj(cd_medico_prest_exec_w, null, 'CDM'), 1, 6));
				cd_pessoa_exec_w		:= coalesce(cd_pessoa_exec_w,cd_medico_prest_exec_w);
				cd_prestador_exec_w		:= substr(nr_cons_prof_prest_w,1,8);
				
				begin
				select	max(nr_seq_cbo_saude)
				into STRICT	nr_seq_cbo_saude_exec_w
				from	pessoa_fisica
				where	cd_pessoa_fisica = cd_medico_prest_exec_w;
				exception
				when others then
					nr_seq_cbo_saude_exec_w := null;
				end;
				
				begin
				select	max(cd_cbo)
				into STRICT	cd_cbo_sus_w
				from	sus_cbo_pessoa_fisica
				where	cd_pessoa_fisica = cd_medico_prest_exec_w;
				exception
				when others then
					cd_cbo_sus_w := null;
				end;
			end if;
			
			qt_registro_med_w := 0;
		end if;
		
		if (coalesce(cd_municipio_w::text, '') = '') and (cd_pessoa_exec_w IS NOT NULL AND cd_pessoa_exec_w::text <> '') then
			cd_municipio_w	:= substr(obter_dados_pf_pj(cd_pessoa_exec_w, null, 'CDM'), 1, 6);
			
			if (coalesce(cd_municipio_w::text, '') = '') then
				cd_municipio_w := substr(obter_compl_pf(cd_pessoa_exec_w, 2,'CDM'), 1, 6);
			end if;
		end if;
		
		if (coalesce(cd_municipio_w::text, '') = '') and (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			select	max(cd_municipio_ibge)
			into STRICT	cd_municipio_w
			from	pessoa_juridica
			where	cd_cgc	= cd_cgc_w;
		end if;
		
		if (cd_municipio_w IS NOT NULL AND cd_municipio_w::text <> '') then
			cd_municipio_w := cd_municipio_w || substr(calcula_digito('MODULO10',cd_municipio_w),1,1);
		end if;		
		
		if (nr_seq_cbo_saude_exec_w IS NOT NULL AND nr_seq_cbo_saude_exec_w::text <> '') then			
			cd_cbo_w := pls_obter_cbo_saude_ptu(nr_seq_cbo_saude_exec_w, null, 'A700', cd_interface_p);
		end if;
		
		if (coalesce(cd_cbo_w::text, '') = '') and (somente_numero(cd_cbo_sus_w) > 0) then
			cd_cbo_w 	:= somente_numero(cd_cbo_sus_w);
		end if;
		
		if (ie_tipo_conta_w = 'M') then
			cd_cbo_w := '000000';
		end if;
		
		if (somente_numero(cd_cbo_w) = 0) and (nr_ver_tiss_w = '2.02.03') then
			cd_cbo_w := '999999';
		end if;		
		
		nr_cgc_cpf_req_w	:= null;
		nm_prestador_req_w	:= null;
		sg_cons_prof_req_w	:= null;
		nr_cons_prof_req_w	:= null;
		sg_uf_cons_req_w	:= null;
		
		----------------------------------------------------------------------------------	DADOS DO SOLICITANTE	---------------------------------------------------------------------------------- 

		-- Buscar primeiro os dados do medico solicitante da conta 
		if (cd_medico_solic_w IS NOT NULL AND cd_medico_solic_w::text <> '') then
			nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_solic_w, 'CPF'), 1, 14);
			nm_prestador_req_w	:= substr(obter_nome_medico(cd_medico_solic_w, 'N'), 1, 40);
			sg_cons_prof_req_w	:= substr(pls_obter_sg_conselho_ptu(cd_medico_solic_w), 1, 12);
			nr_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'CRM'), 1, 15);
			sg_uf_cons_req_w	:= substr(obter_dados_medico(cd_medico_solic_w,'UFCRM'),1,2);
			
		-- Se nao tiver, buscar o prestador do atendimento
		elsif (nr_seq_prestador_atend_w IS NOT NULL AND nr_seq_prestador_atend_w::text <> '') then
			select	coalesce(a.cd_cgc,substr(obter_dados_pf(a.cd_pessoa_fisica,'CPF'),1,14)),
				a.cd_pessoa_fisica,
				substr(pls_obter_dados_prestador(a.nr_sequencia,'N'),1,40)
			into STRICT	nr_cgc_cpf_req_w,
				cd_medico_solic_w,
				nm_prestador_req_w
			from	pls_prestador	a
			where	a.nr_sequencia	= nr_seq_prestador_atend_w;
			
			if (cd_medico_solic_w IS NOT NULL AND cd_medico_solic_w::text <> '') then
				nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_solic_w, 'CPF'), 1, 14);
				nm_prestador_req_w	:= substr(obter_nome_medico(cd_medico_solic_w, 'N'), 1, 40);
				sg_cons_prof_req_w	:= substr(pls_obter_sg_conselho_ptu(cd_medico_solic_w), 1, 12);
				nr_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'CRM'), 1, 15);
				sg_uf_cons_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'UFCRM'), 1, 2);
			end if;
		
		-- OS 486959 - No ultimo dos casos, tenta buscar o prestador requisitante/solicitante direto da guia
		elsif (cd_guia_referencia_w IS NOT NULL AND cd_guia_referencia_w::text <> '') then
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_guia_plano
			where	cd_guia	= cd_guia_referencia_w;
			
			if (qt_registro_w > 0) then
				select	max(cd_medico_solicitante),
					substr(pls_obter_dados_prestador(max(nr_seq_prestador),'N'),1,40)
				into STRICT	cd_medico_solic_w,
					nm_prestador_req_w
				from	pls_guia_plano
				where	cd_guia	= cd_guia_referencia_w;
				
				if (cd_medico_solic_w IS NOT NULL AND cd_medico_solic_w::text <> '') then
					nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_solic_w, 'CPF'), 1, 14);
					nm_prestador_req_w	:= coalesce(substr(obter_nome_medico(cd_medico_solic_w, 'N'), 1, 40), nm_prestador_req_w);
					sg_cons_prof_req_w	:= substr(pls_obter_sg_conselho_ptu(cd_medico_solic_w), 1, 12);
					nr_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'CRM'), 1, 15);
					sg_uf_cons_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'UFCRM'), 1, 2);
				end if;
			end if;
		end if;

		-- Se for versao igual ou maior 11.0
		if (ie_versao_w >= 110) then
			nm_prestador_req_w := substr(nm_prestador_req_w,1,60);
		end if;	

		select	coalesce(max(c.nr_seq_ops_congenere), max(c.nr_seq_congenere))
		into STRICT	nr_seq_congenere_w
		from	pls_segurado		c,
			pls_conta		b
		where	c.nr_sequencia	= b.nr_seq_segurado
		and	b.nr_sequencia	= nr_seq_conta_w;
		
		ie_tipo_intercambio_w	:= 'A';
		
		if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
			-- Obter a UF da operadora  - Tasy
			select	coalesce(max(sg_estado),'X')
			into STRICT	sg_estado_w
			from	pessoa_juridica
			where	cd_cgc	=	(SELECT	max(cd_cgc_outorgante)
						from	pls_outorgante
						where	cd_estabelecimento	= cd_estabelecimento_w);
			
			-- Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo
			select	coalesce(max(a.sg_estado),'X')
			into STRICT	sg_estado_int_w
			from	pessoa_juridica	a,
				pls_congenere	b
			where	a.cd_cgc	= b.cd_cgc
			and	b.nr_sequencia	= nr_seq_congenere_w;
			
			if (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
				if (sg_estado_w	= sg_estado_int_w) then
					ie_tipo_intercambio_w	:= 'E';
				else	
					ie_tipo_intercambio_w	:= 'N';
				end if;
			else
				ie_tipo_intercambio_w	:= 'A';
			end if;
		end if;
		
		if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
			select	max(a.ie_tipo_contrato)
			into STRICT	ie_tipo_contrato_w
			from	pls_intercambio a,
				pls_contrato_pagador b,
				pls_segurado c
			where	a.nr_sequencia	= b.nr_seq_pagador_intercambio
			and	b.nr_sequencia	= c.nr_seq_pagador
			and	c.nr_sequencia	= nr_seq_segurado_w;
			
			-- Quando for PEA, tem que tratar como Nacional	
			if (ie_tipo_contrato_w = 'S') then
				ie_tipo_intercambio_w	:= 'N';
			end if;
		end if;
		
		-- INICIALIZAR
		dt_autoriz_w 		:= null;
		dt_solicitacao_w 	:= null;	
		nr_registro_anvisa_w	:= null;
		nr_seq_mat_unimed_w	:= null;
		cd_ref_material_fab_w	:= null;
		nr_uni_medida_ptu_w	:= null;
		cd_unidade_medida_w	:= null;
		ie_mat_a900_w		:= 'N';
		ie_somente_codigo_w 	:= null;
		ds_servico_orig_w 	:= null;
		
		if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
			select	max(dt_liberacao),
				max(dt_solicitacao)
			into STRICT	dt_autoriz_w,
				dt_solicitacao_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_w;
		end if;
		
		if (ie_tipo_conta_w = 'P') then
			if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
				select	max(ds_procedimento)
				into STRICT	ds_servico_orig_w
				from	procedimento
				where	cd_procedimento	= cd_procedimento_w
				and	ie_origem_proced= ie_origem_proced_w;
			end if;			
			
		
		
			-- A origem do procedimento e buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.
			SELECT * FROM pls_obter_proced_conversao(	cd_procedimento_w, ie_origem_proced_w, null, cd_estabelecimento_w, 4, null, 3, 'E', null, null, null, null, ie_tipo_intercambio_w, cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), nr_seq_tipo_atendimento_w, null, null) INTO STRICT cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w;
			
			ie_tipo_part_regra_w := pls_obter_regra_partic_proc(	nr_seq_conta_proc_w, cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, nr_seq_grau_part_w, ie_tipo_part_regra_w, 'N', ie_diaria_w);
							
			if (nr_seq_regra_conv_w IS NOT NULL AND nr_seq_regra_conv_w::text <> '') then
				cd_servico_w	:= substr(cd_proc_conversao_w, 1, 8);
				
				select	substr(a.ds_proc_envio, 1, 80)
				into STRICT	ds_servico_w
				from	pls_conversao_proc	a
				where	a.nr_sequencia		= nr_seq_regra_conv_w;
			else
				cd_servico_w	:= substr(coalesce(cd_proc_conversao_w, cd_procedimento_w),1,8);
				ds_servico_w	:= substr(pls_obter_desc_procedimento(coalesce(cd_proc_conversao_w, cd_procedimento_w), coalesce(ie_origem_proced_conv_w, ie_origem_proced_w)), 1, 80);
			end if;
				
			if (coalesce(ie_origem_proced_conv_w::text, '') = '') then
				ie_origem_proced_conv_w := pls_obter_origem_proced(cd_estabelecimento_w, null, 'R', dt_procedimento_w, null);
			end if;
			
			if (coalesce(ie_somente_codigo_w,'N') = 'S') then
				ds_servico_w := substr(ds_servico_orig_w,1,80);
			end if;
			
			if (ie_origem_proced_conv_w <> ie_origem_proced_w) then
				select	count(1)
				into STRICT	qt_proced_origem_w
				from	procedimento
				where	cd_procedimento		= cd_proc_conversao_w
				and	ie_origem_proced	= ie_origem_proced_conv_w;
				
				-- Se este procedimento nao existir na origem padrao e selecionado o max origem proced
				if (qt_proced_origem_w = 0) then	
					select	max(ie_origem_proced)
					into STRICT	ie_origem_proced_conv_w
					from	procedimento
					where	cd_procedimento	= cd_proc_conversao_w;	
				end if;
			
				--cd_procedimento_w 	:= cd_proc_conversao_w;

				--ie_origem_proced_w	:= ie_origem_proced_conv_w;
			end if;
			
			-- Zerar material
			nr_seq_material_w	:= null;
		
			if (ie_tipo_despesa_w  = 1) then
				ie_tipo_tabela_w	:= 0;
			elsif (ie_tipo_despesa_w = 2) then
				ie_tipo_tabela_w	:= 1;
			elsif (ie_tipo_despesa_w = 3) then
				ie_tipo_tabela_w	:= 1;
			elsif (ie_tipo_despesa_w = 4) then
				ie_tipo_tabela_w	:= 2;
			end if;
			
			SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_w, ie_origem_proced_w, cd_area_regra_w, cd_especialidade_regra_w, cd_grupo_regra_w, ie_origem_regra_w) INTO STRICT cd_area_regra_w, cd_especialidade_regra_w, cd_grupo_regra_w, ie_origem_regra_w;
						
		else	
			if (ie_tipo_conta_w = 'M') then			
				if (ie_tipo_despesa_w 	= 1) then
					ie_tipo_tabela_w	:= 2;
				elsif (ie_tipo_despesa_w 	= 2) then
					ie_tipo_tabela_w	:= 3;
				elsif (ie_tipo_despesa_w 	= 3) then
					ie_tipo_tabela_w	:= 2;
				elsif (ie_tipo_despesa_w 	= 7) then
					ie_tipo_tabela_w	:= 2;
				end if;
				
				cd_servico_w 		:= null;
				cd_servico_mat_w 	:= null;
				nr_seq_material_w	:= cd_procedimento_w;
				
				cd_servico_a900_w	:= null;

				select	cd_material_ops,
					ds_material
				into STRICT	cd_material_ops_w,
					ds_servico_orig_w
				from	pls_material
				where	nr_sequencia	= nr_seq_material_w;
				
				-- jtonon - OS 746075

				-- Busca codigo de conversao de materiais em 'Gestao do Cadastro de Meteriais > Materiais > Operadora > Conversoes'
				if (coalesce(cd_servico_w::text, '') = '') then
					-- cd_procedimento_w contem o NR_SEQ_MATERIAL (PLS_MATERIAL) 
					nr_seq_material_w	:= cd_procedimento_w;
						
					-- Francisco - 15/05/2012 - OS 447235 - Tratar conversao de codigos para envio 

					--begin
					if (coalesce(ie_material_intercambio_w, 'S') = 'S') then
						cd_servico_w 	:= nr_seq_material_w;
					elsif (coalesce(ie_material_intercambio_w, 'S') = 'C') then
						cd_servico_w	:= cd_material_ops_w;
					elsif (coalesce(ie_material_intercambio_w, 'S') = 'CI') then
						SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, dt_procedimento_w, cd_servico_a900_w, null) INTO STRICT  nr_seq_material_w, cd_servico_a900_w;
						
						cd_servico_w	:= somente_numero(cd_servico_a900_w);
						
						if (cd_servico_w = 0) then
							cd_servico_w	:= null;
						else
							ie_mat_a900_w	:= 'S';
						end if;

						if (coalesce(cd_servico_w::text, '') = '') then
							select	a.nr_seq_material_unimed
							into STRICT	nr_seq_mat_unimed_w
							from	pls_material	a
							where	nr_sequencia	= nr_seq_material_w;

							if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
								select	a.cd_material
								into STRICT	cd_servico_w
								from	pls_material_unimed	a
								where	a.nr_sequencia		= nr_seq_mat_unimed_w;
								
								ie_mat_a900_w	:= 'S';
							end if;
						end if;
					end if;
					/*exception
					when others then
						cd_servico_w	:= null;
					end;*/
				end if;			
				
				-- jtonon - OS 746075

				-- Se nao encontrou codigo de conversao, o sistema procura regra generica de conversao da funcao 'OPS Cooperativas Medicas > Regras Gerais > Conversoes > Materiais > Envio'
				if (coalesce(cd_servico_w::text, '') = '') then
					SELECT * FROM ptu_obter_material_conversao(	cd_material_ops_w, ie_tipo_tabela_w, dt_procedimento_w, 'E', 'A', ie_tipo_despesa_w, ie_tipo_intercambio_w, nr_seq_mat_unimed_w, cd_servico_mat_w, ie_somente_codigo_w) INTO STRICT nr_seq_mat_unimed_w, cd_servico_mat_w, ie_somente_codigo_w;
		
					if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
						select	a.cd_material,
							substr(coalesce(a.ds_material,a.nm_material), 1, 80)
						into STRICT	cd_servico_w,
							ds_servico_w
						from	pls_material_unimed	a
						where	a.nr_sequencia		= nr_seq_mat_unimed_w;
						
						ie_mat_a900_w	:= 'S';
					end if;
					
					if (coalesce(ie_somente_codigo_w,'N') = 'S') then
						ds_servico_w	:= substr(ds_servico_orig_w,1,80);
					end if;

					if (coalesce(nr_seq_mat_unimed_w::text, '') = '') and (cd_servico_mat_w IS NOT NULL AND cd_servico_mat_w::text <> '') then
						begin
						select	substr(coalesce(a.ds_material,a.nm_material), 1, 80),
							a.nr_sequencia
						into STRICT	ds_servico_w,
							nr_seq_mat_unimed_w
						from	pls_material_unimed	a
						where	a.cd_material		= cd_servico_mat_w;
						exception
						when others then
							ds_servico_w:= null;
							nr_seq_mat_unimed_w:= null;
						end;

						if (coalesce(nr_seq_mat_unimed_w::text, '') = '') then
							begin
							select	substr(coalesce(a.ds_material,a.nm_material), 1, 80),
								a.nr_sequencia
							into STRICT	ds_servico_w,
								nr_seq_mat_unimed_w
							from	pls_material_unimed	a
							where	a.cd_anterior_material	= cd_servico_mat_w;
							exception
							when others then
								ds_servico_w:= null;
								nr_seq_mat_unimed_w:= null;
							end;

							if (coalesce(nr_seq_mat_unimed_w::text, '') = '') then
								begin
								select	substr(coalesce(a.ds_material,a.nm_material), 1, 80),
									a.nr_sequencia
								into STRICT	ds_servico_w,
									nr_seq_mat_unimed_w
								from	pls_material_unimed	a
								where	a.cd_anterior_medicamento	= cd_servico_mat_w;
								exception
								when others then
									ds_servico_w:= null;
									nr_seq_mat_unimed_w:= null;
								end;
							end if;
						end if;

						if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
							ie_mat_a900_w	:= 'S';
						end if;
					end if;

					cd_servico_w := cd_servico_mat_w;

					ds_servico_w	:= substr(pls_obter_desc_material(nr_seq_material_w), 1, 80);

					-- Se ainda assim nao encontrar, lancar o codigo da conta
					if (coalesce(cd_servico_w::text, '') = '') then
						begin
						select	(cd_material_ops)::numeric
						into STRICT	cd_servico_w
						from	pls_material
						where	nr_sequencia	= nr_seq_material_w;
						exception
						when others then
							cd_servico_w	:= null;
						end;
					end if;
				end if;
				
				ie_tipo_part_regra_w := pls_obter_regra_partic_mat(	nr_seq_conta_mat_w, ie_tipo_tabela_w, ie_tipo_part_regra_w, 'N');
								
			end if;
			
			cd_area_regra_w			:= null;
			cd_especialidade_regra_w	:= null;
			cd_grupo_regra_w		:= null;
			ie_origem_regra_w		:= null;

			cd_procedimento_w		:= null;
			ie_origem_proced_w		:= null;
			
			select	max(nr_seq_estrut_mat)
			into STRICT	nr_seq_estrut_mat_w
			from	pls_material
			where	nr_sequencia	= nr_seq_material_w;

			if (ie_mat_a900_w = 'S') then
				if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
					select	somente_numero(max(nr_registro_anvisa)),
						max(cd_ref_material_fab),
						max(cd_unidade_medida)
					into STRICT	nr_registro_anvisa_w,
						cd_ref_material_fab_w,
						cd_unidade_medida_w
					from	pls_material_unimed
					where	nr_sequencia = nr_seq_mat_unimed_w;
				
					if (cd_material_ops_w IS NOT NULL AND cd_material_ops_w::text <> '') and (coalesce( nr_registro_anvisa_w , 0) = 0) and (coalesce(cd_ref_material_fab_w::text, '') = '') then
						select	somente_numero(max(nr_registro_anvisa)),
							max(cd_ref_material_fab),
							max(cd_unidade_medida)
						into STRICT	nr_registro_anvisa_w,
							cd_ref_material_fab_w,
							cd_unidade_medida_w
						from 	pls_material_unimed a
						where 	cd_material		= cd_material_ops_w;
					end if;
					
				elsif (cd_servico_w IS NOT NULL AND cd_servico_w::text <> '') then
					select	somente_numero(max(nr_registro_anvisa)),
						max(cd_ref_material_fab),
						max(cd_unidade_medida)
					into STRICT	nr_registro_anvisa_w,
						cd_ref_material_fab_w,
						cd_unidade_medida_w
					from	pls_material_unimed
					where	cd_material = cd_servico_w;
				end if;
				
				ie_mat_a900_w := 'N';
				
				if (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then			
					select	max(nr_unidade_ptu)
					into STRICT	nr_uni_medida_ptu_w
					from	unidade_medida
					where	upper(cd_unidade_ptu) = upper(cd_unidade_medida_w);
				end if;	
			
			elsif (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
				select	somente_numero(max(nr_registro_anvisa)),
					max(cd_unidade_medida)
				into STRICT	nr_registro_anvisa_w,
					cd_unidade_medida_w
				from	pls_material
				where	nr_sequencia = nr_seq_material_w;
				
				if (coalesce(trim(both nr_registro_anvisa_w),0) = 0) then
					select	max(a.nr_seq_material_unimed)
					into STRICT	nr_seq_mat_unimed_w
					from	pls_material	a
					where	nr_sequencia	= nr_seq_material_w;
					
					if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
						select	somente_numero(max(nr_registro_anvisa)),
							max(cd_ref_material_fab),
							max(cd_unidade_medida)
						into STRICT	nr_registro_anvisa_w,
							cd_ref_material_fab_w,
							cd_unidade_medida_w
						from	pls_material_unimed
						where	nr_sequencia = nr_seq_mat_unimed_w;
					end if;
				end if;
				
				if (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then			
					select	max(nr_unidade_ptu)
					into STRICT	nr_uni_medida_ptu_w
					from	unidade_medida
					where	upper(cd_unidade_medida) = upper(cd_unidade_medida_w);	
				
					if (coalesce(nr_uni_medida_ptu_w::text, '') = '') then
						select	max(nr_unidade_ptu)
						into STRICT	nr_uni_medida_ptu_w
						from	unidade_medida
						where	upper(cd_unidade_ptu) = upper(cd_unidade_medida_w);
					end if;
				end if;
			end if;
			
			if (coalesce(trim(both somente_numero(nr_registro_anvisa_w)),0) = 0) then
				nr_registro_anvisa_w := null;
			end if;
		end if;
		
		select	max(a.ie_tipo_guia),
			max(a.nr_seq_segurado)
		into STRICT	ie_tipo_guia_w,
			nr_seq_segurado_w
		from	pls_conta	a
		where	a.nr_sequencia	= nr_seq_conta_w;

		begin
		select	substr(CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN cd_cgc  ELSE obter_dados_pf(cd_pessoa_fisica,'CPF') END ,1,14),
			substr(CASE WHEN coalesce(cd_cgc::text, '') = '' THEN  'F'  ELSE 'J' END ,1,1),
			substr(upper(elimina_acentos(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc))),1,70),
			substr(pls_obter_se_cooperado_ativo(cd_pessoa_fisica,dt_procedimento_w,null),1,1),
			substr(pls_obter_cod_prestador(nr_sequencia,null),1,8),
			nr_seq_tipo_prestador
		into STRICT	nr_cnpj_cpf_w,
			ie_tipo_pessoa_pres_w,
			nm_prestador_w,
			ie_rede_propria_w,
			cd_prestador_w,
			nr_seq_tipo_prest_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_exec_w;
		exception
		when others then
			nr_cnpj_cpf_w		:= null;
			ie_tipo_pessoa_pres_w	:= null;
			nm_prestador_w		:= null;
			ie_rede_propria_w	:= null;
		end;

		select	coalesce(max(ie_tipo_ptu), '01')
		into STRICT	ie_tipo_prestador_w
		from	pls_tipo_prestador
		where	nr_sequencia	= nr_seq_tipo_prest_w;
		
		select	max(cd_ptu)
		into STRICT	ie_tipo_participacao_w
		from	pls_grau_participacao
		where	nr_sequencia	= nr_seq_grau_part_w;
		
		ie_tipo_participacao_w := coalesce(ie_tipo_part_regra_w, coalesce(ie_tipo_participacao_w,'0'));
		
		if (coalesce(sg_cons_prof_req_w::text, '') = '') then
			select	coalesce(max(c.cd_ptu), 'CRM')
			into STRICT	sg_cons_prof_req_w
			from	conselho_profissional	c,
				medico			b,
				pessoa_fisica		a
			where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
			and	a.nr_seq_conselho	= c.nr_sequencia
			and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		
		if (coalesce(nr_cons_prof_req_w::text, '') = '') then
			select	coalesce(max(a.nr_seq_conselho), 1)
			into STRICT	nr_cons_prof_req_w
			from	conselho_profissional	c,
				medico			b,
				pessoa_fisica		a
			where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
			and	a.nr_seq_conselho	= c.nr_sequencia
			and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		
		if (coalesce(sg_uf_cons_req_w::text, '') = '') then
			select	coalesce(max(b.uf_crm), sg_estado_w)
			into STRICT	sg_uf_cons_req_w
			from	conselho_profissional	c,
				medico			b,
				pessoa_fisica		a
			where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
			and	a.nr_seq_conselho	= c.nr_sequencia
			and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
		
		select	max(cd_especialidade)
		into STRICT	cd_especialidade_med_w
		from	pls_prestador_med_espec
		where	nr_seq_prestador	= nr_seq_prestador_exec_w;
		
		select	coalesce(max(cd_ptu),1)
		into STRICT	cd_especialidade_w
		from	especialidade_medica
		where	cd_especialidade	= cd_especialidade_med_w;		
		
		/*if	((nr_seq_material_w is null) and	 --Se o tipo de despesa for Pacotes ou Procedimentos zerar o tipo de participacao 
			(ie_tipo_despesa_w in (1,4))) or
			((nr_seq_material_w is not null) and	 --Se o tipo de despesa for Materiais ou Medicamentos zerar o tipo de participacao 
			(ie_tipo_despesa_w in (2,3))) or
			((nr_seq_material_w is null) and
			(ie_tipo_guia_w = 4)) then		 --Se for SADT zerar o tipo de participacao 
			ie_tipo_participacao_w := '0';
		end if;*/

		
		/*if	(ie_tipo_guia_w = 4) then
			ie_tipo_participacao_w := '0';
		end if;*/
		
		nr_seq_lote_w	:= nr_seq_conta_w + nr_seq_protocolo_w;
		cd_guia_w	:= somente_numero(cd_guia_w);
			
		if	((coalesce(nr_seq_material_w::text, '') = '') and (coalesce(cd_servico_w::text, '') = '')) then
			cd_servico_w	:= cd_procedimento_w;
			ds_servico_w	:= substr(obter_descricao_procedimento(cd_procedimento_w, ie_origem_proced_w),1,80);
			
		elsif (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') and (coalesce(cd_servico_w::text, '') = '') then
			cd_servico_w	:= substr(pls_obter_dados_material(nr_seq_material_w,'CO'),1,15);
			ds_servico_w	:= substr(obter_descricao_padrao('PLS_MATERIAL','DS_MATERIAL', nr_seq_material_w),1,80);
		end if;

		if (coalesce(qt_procedimento_w,0) = 0) then
			qt_procedimento_w	:= 1;
		end if;
		
		if (cd_excecao_w in ('L', 'C', 'O', 'E')) then
			select	coalesce(max(cd_senha_externa),max(cd_senha)),
				max(ie_status)
			into STRICT	cd_senha_w,
				ie_status_w
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_w
			and	nr_seq_segurado	= nr_seq_segurado_w;
			
			if (coalesce(cd_senha_w::text, '') = '') then
				select	coalesce(max(cd_senha_externa),max(cd_senha)),
					max(ie_status)
				into STRICT	cd_senha_w,
					ie_status_w
				from	pls_guia_plano
				where	cd_guia		= cd_guia_w
				and	nr_seq_segurado	= nr_seq_segurado_w;
			end if;
			
			if (coalesce(cd_senha_w::text, '') = '') then
				select	coalesce(max(cd_senha_externa),max(cd_senha)),
					max(ie_status)
				into STRICT	cd_senha_w,
					ie_status_w
				from	pls_guia_plano
				where	cd_guia		= cd_guia_referencia_w
				and	nr_seq_segurado	= nr_seq_segurado_w;
			end if;
			
			if ((trim(both cd_senha_w) IS NOT NULL AND (trim(both cd_senha_w))::text <> '')) then --and (trim(cd_senha_w) <> '0') then
				cd_senha_w := somente_numero(substr(cd_senha_w,1,10));
			end if;
			
			if (cd_senha_w IS NOT NULL AND cd_senha_w::text <> '') and (cd_excecao_w = 'E') and (ie_status_w = '1') then
				cd_excecao_w := 'L';
				
				update	ptu_nota_cobranca
				set	cd_excecao	= cd_excecao_w
				where	nr_sequencia	= nr_seq_cobranca_p;
			end if;
		else
			cd_senha_w := '0';
		end if;	
		
		if (coalesce(somente_numero(cd_senha_w),'0') = '0') then
			cd_excecao_w := '0';
			
			update	ptu_nota_cobranca
			set	cd_excecao	= cd_excecao_w
			where	nr_sequencia	= nr_seq_cobranca_p;
		end if;

		-- Verifique a nota 00000103411, lote 00092642. Os valores referentes a Diaria, Taxa, Material e Medicamento devem ser demonstrados no campo VL_SERV_COB com os campos VL_CO_COB e VL_FILME_COB zerados.
		if (ie_tipo_tabela_w in (1,2,3,4,5,6)) then
			vl_procedimento_w := vl_procedimento_w + vl_custo_operacional_w + vl_filme_w;
			vl_adic_procedimento_w := vl_adic_procedimento_w + vl_adic_custo_operacional_w + vl_adic_filme_w;
			vl_custo_operacional_w := 0;
			vl_filme_w := 0;
			vl_adic_custo_operacional_w := 0;
			vl_adic_filme_w := 0;
		end if;
		
		if (ie_tipo_participacao_w in ('A','N')) and (coalesce(nr_seq_material_w::text, '') = '') and (coalesce(cd_porte_anest_w::text, '') = '') then
			cd_porte_anest_w := '1';
		end if;
		
		if (cd_porte_anest_w = '0') and (ie_tipo_participacao_w not in ('A','N')) then
			cd_porte_anest_w := null;
		end if;
		
		if (ie_tipo_tabela_w in (2,5)) then
			ie_tipo_participacao_w	:= '0';
		end if;
		
		if	((coalesce(vl_procedimento_w,0) = 0) and (coalesce(vl_prestador_w,0) > 0)) then
			vl_procedimento_w	:= vl_prestador_w;
		end if;
		
		if (ie_carater_atendimento_w = 0) then
			sg_cons_prof_prest_w := coalesce(trim(both sg_cons_prof_prest_w),'CRM');
			nr_cons_prof_prest_w := coalesce(trim(both nr_cons_prof_prest_w),'1');
			sg_uf_cons_prest_w := coalesce(trim(both sg_uf_cons_prest_w),sg_estado_w);
		end if;
		
		-- Se for versao anterior a versao 9.0
		if (ie_versao_w < 90) then
			nm_prestador_w			:= substr(nm_prestador_w,1,40);
			nm_profissional_prestador_w	:= substr(nm_profissional_prestador_w,1,40);
		end if;	
		
		-- Se for versao igual ou maior 11.0
		if (ie_versao_w >= 110) then
			cd_especialidade_w		:= null;
			nm_profissional_prestador_w	:= substr(nm_profissional_prestador_w,1,60);
		end if;	

		-- Se for versao igual ou maior 11.0
		if (ie_versao_w >= 113) then
			if (ie_tipo_tabela_w = 4) then
				ie_pacote_w := ' ';
			else
				ie_pacote_w := 'N';
			end if;	
		end if;
		
		if (sg_cons_prof_req_w IS NOT NULL AND sg_cons_prof_req_w::text <> '') then
			select	coalesce(max(cd_ptu), sg_cons_prof_req_w)
			into STRICT	sg_cons_prof_req_w	
			from	conselho_profissional
			where	sg_conselho = sg_cons_prof_req_w;
		end if;
		
		
		if (sg_cons_prof_prest_w IS NOT NULL AND sg_cons_prof_prest_w::text <> '') then
			select	coalesce(max(cd_ptu), sg_cons_prof_prest_w)
			into STRICT	sg_cons_prof_prest_w
			from	conselho_profissional
			where	sg_conselho = sg_cons_prof_prest_w;
		end if;
		
		
		insert into ptu_nota_servico(nr_sequencia,					dt_atualizacao,						nm_usuario,
			dt_atualizacao_nrec,				nm_usuario_nrec,					nr_seq_nota_cobr,
			nr_lote,					cd_unimed_prestador,					cd_prestador,
			nm_prestador,					ie_tipo_participacao,					dt_procedimento,
			cd_procedimento,				ie_origem_proced,					qt_procedimento,
			ie_tipo_prestador,				ie_rede_propria,					ie_tipo_pessoa_prestador,
			nr_cgc_cpf,					tx_procedimento,					ie_pacote,
			cd_ato,						ie_tipo_tabela,						nr_cgc_cpf_req,
			nm_prestador_requisitante,			sg_cons_prof_req,					nr_cons_prof_req,
			sg_uf_cons_req,					ie_reembolso,						nr_autorizacao,
			nr_nota,					vl_procedimento,					vl_custo_operacional,
			vl_filme,					cd_porte_anestesico,					cd_unimed_autorizadora,	
			cd_unimed_pre_req,				cd_prestador_req,					ie_via_acesso,
			vl_adic_procedimento,				vl_adic_co,						vl_adic_filme,
			cd_especialidade,				nr_seq_nota,						ds_hora_procedimento,
			cd_cnes_prest,					nm_profissional_prestador,				sg_cons_prof_prest,
			nr_cons_prof_prest,				sg_uf_cons_prest,					vl_pago_prest,
			nr_seq_material,				cd_servico,						ds_servico,
			nr_seq_conta_proc,				nr_seq_conta_mat,					hr_final,
			nr_cbo_exec,					id_acres_urg_emer,					tec_utilizada,
			dt_autoriz,					dt_solicitacao,						nr_reg_anvisa,
			cd_ref_material_fab,				cd_munic,						dt_pgto_prestador,
			unidade_medida,					cd_rec_prestador)
		values (nextval('ptu_nota_servico_seq'),			clock_timestamp(),						nm_usuario_p,
			clock_timestamp(),					nm_usuario_p,						nr_seq_cobranca_p,
			substr(nr_seq_lote_w,1,8),			cd_unim_prestador_w,					cd_prestador_w,
			nm_prestador_w,					ie_tipo_participacao_w,					dt_procedimento_w,
			cd_procedimento_w,				ie_origem_proced_w,					qt_procedimento_w,
			ie_tipo_prestador_w,				ie_rede_propria_w,					ie_tipo_pessoa_pres_w,
			nr_cnpj_cpf_w,					CASE WHEN tx_procedimento_w=0 THEN 100  ELSE tx_procedimento_w END ,	ie_pacote_w,	
			coalesce(cd_ato_w,'1'),				ie_tipo_tabela_w,					nr_cgc_cpf_req_w,
			nm_prestador_req_w,				sg_cons_prof_req_w,					nr_cons_prof_req_w,	
			sg_uf_cons_req_w,				ie_reembolso_w,						cd_senha_w,
			nr_seq_conta_w,					vl_procedimento_w,					vl_custo_operacional_w,
			vl_filme_w,					cd_porte_anest_w,					cd_cooperativa_w,				
			cd_unim_prestador_w,				1,							ie_via_acesso_w,				
			vl_adic_procedimento_w,				vl_adic_custo_operacional_w,				vl_adic_filme_w,				
			cd_especialidade_w,				nr_seq_conta_w,						to_char(dt_procedimento_w,'hh24:mi:ss'),	
			cd_cnes_w,					nm_profissional_prestador_w,				sg_cons_prof_prest_w,				
			nr_cons_prof_prest_w,				sg_uf_cons_prest_w,					vl_prestador_w,					
			nr_seq_material_w,				cd_servico_w,						substr(ds_servico_w,1,80),			
			nr_seq_conta_proc_w,				nr_seq_conta_mat_w,					to_char(hr_final_w,'HH24:MI:SS'),		
			coalesce(cd_cbo_w,000000),				ie_acres_urg_emer_w,					ie_tec_utilizada_w,				
			dt_autoriz_w,					dt_solicitacao_w,					substr(nr_registro_anvisa_w,1,15),
			cd_ref_material_fab_w,				cd_municipio_w,						dt_competencia_pgto_w,
			substr(nr_uni_medida_ptu_w,1,3),		cd_rec_prestador_w);
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_nota_servico700 ( nr_seq_cobranca_p bigint, cd_interface_p bigint, nm_usuario_p text) FROM PUBLIC;

