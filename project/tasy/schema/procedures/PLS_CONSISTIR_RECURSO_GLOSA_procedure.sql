-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_recurso_glosa ( nr_seq_protocolo_p bigint, nm_usuario_p text, ds_mensagem_abort_p INOUT text, ie_integrar_p text default 'S', cd_versao_tiss_p text DEFAULT NULL) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Rotina criada para consistir os arquivos de Recurso de Glosa,  no momento da importa??o,
ser? gerada as glosas conforme informa??es do arquivo e ir? barrar a importa??o.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicion?rio [ ] Tasy (Delphi/Java) [x] Portal [  ]  Relat?rios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de aten??o: Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_validacao_w		varchar(1) 	:= 	'S';
qt_reg_protocolo_w	bigint	:= 	0;
qt_reg_conta_w		bigint	:=	0;
nr_seq_prot_conta_w	pls_rec_glosa_prot_cta_imp.nr_sequencia%type;
qt_registros_w		bigint;

/* Vari?veis utilizadas para verificar se existe um protocolo/conta para a guia que esta sendo apresentada */

nr_seq_lote_w 		pls_rec_glosa_lote.nr_sequencia%type;
nr_seq_protocolo_w 	pls_rec_glosa_protocolo.nr_sequencia%type;
nr_seq_prot_cta_imp_w 	pls_rec_glosa_prot_cta_imp.nr_sequencia%type;
nr_seq_conta_imp_w	pls_rec_glosa_conta_imp.nr_sequencia%type;
ie_situacao_prot_w	pls_rec_glosa_protocolo.ie_situacao%type := 'A'; --Aceito
ie_status_w		pls_rec_glosa_conta_imp.ie_status%type;

qt_registros_proc_w	integer := 0;
qt_registros_mat_w	integer := 0;
nr_seq_mensagem_w	integer := 5002;
dt_apresentacao_lote_w	pls_rec_glosa_protocolo.dt_apresentacao_lote%type;
nr_seq_prestador_w	pls_rec_glosa_protocolo.nr_seq_prestador%type;
ds_inco_paga_w		varchar(255);
ds_erro_w		varchar(255);
ie_integrar_w		PLS_PARAMETROS_REC_GLOSA.IE_INTEGRAR_IMP%type;
qt_versao_ativa_w	integer := 0;
ie_origem_solic_w	pls_rec_glosa_protocolo.ie_origem_solic%type;
ds_protocolos_w		varchar(4000);
ie_consid_negados_w  pls_parametros_rec_glosa.ie_consid_negado%type;

C01 CURSOR FOR
		SELECT 	nr_sequencia,
			nr_protocolo
		from 	pls_rec_glosa_prot_cta_imp
		where 	nr_seq_protocolo = nr_seq_protocolo_p;
		
C02 CURSOR FOR
		SELECT	nr_sequencia,
			nr_seq_conta,	
			cd_guia_recurso
		from 	pls_rec_glosa_conta_imp
		where	nr_seq_protocolo_cta = nr_seq_prot_conta_w;
		
C03 CURSOR FOR
		SELECT	a.nr_sequencia,
			a.nr_seq_conta_proc,
			pls_obter_saldo_rec_glo_princ(coalesce(b.nr_seq_proc_princ, b.nr_sequencia), null) - vl_recursado vl_saldo
		from	pls_rec_glosa_proc_imp a,
			pls_conta_proc b
		where	b.nr_sequencia = a.nr_seq_conta_proc
		and	a.nr_seq_conta_imp = nr_seq_conta_imp_w;
		
c04 CURSOR FOR
		SELECT	nr_sequencia,
			nr_seq_material,
			pls_obter_saldo_rec_glosa_mat(nr_seq_material, null) - vl_recursado vl_saldo
		from	pls_rec_glosa_mat_imp
		where	nr_seq_conta_imp = nr_seq_conta_imp_w;
		
C05 CURSOR(nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_protocolo
	from	pls_rec_glosa_conta b,
		pls_rec_glosa_protocolo a
	where	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_seq_conta	= nr_seq_conta_pc
	and	b.ie_status	!= '3'
	and	a.ie_status not in ('3','4','6','10');	

BEGIN

select	dt_apresentacao_lote,
	nr_seq_prestador,
	ie_origem_solic
into STRICT	dt_apresentacao_lote_w,
	nr_seq_prestador_w,
	ie_origem_solic_w
from	pls_rec_glosa_protocolo
where	nr_sequencia	= nr_seq_protocolo_p;

ie_integrar_w := coalesce(ie_integrar_p, 'S');

select	count(1)
into STRICT	qt_versao_ativa_w
from 	PLS_VERSAO_TISS a,
	pls_tiss_rec_glosa b
where 	b.nr_seq_versao = a.nr_sequencia
and 	a.cd_versao_tiss = cd_versao_tiss_p
and 	b.ie_recurso_glosa = 'S'
and 	clock_timestamp() between b.dt_inicio_vigencia and b.dt_fim_vigencia_ref;

select 	coalesce(max(ie_consid_negado),'N')
into STRICT	ie_consid_negados_w
from 	pls_parametros_rec_glosa;

for rg01 in C01 loop
	begin
	qt_reg_conta_w		:= 0;
	nr_seq_prot_conta_w	:= rg01.nr_sequencia;
	
	for rg02 in C02 loop
		begin
		
		
			nr_seq_conta_imp_w 	:= rg02.nr_sequencia;
			ds_erro_w		:= '';
		
			if ( coalesce(rg02.nr_seq_conta,0) = 0 ) then
				/*	Glosa  '1307 - N?mero da guia inv?lido'
					Aplicada quando n?o existe uma canta m?dica para a guia */
					
				CALL pls_gravar_glosa_recurso_glosa(	'1307', rg02.nr_sequencia, null, null, null, null, nm_usuario_p);
			else
				ds_inco_paga_w	:= pls_obter_se_recursa_conta_pag(nr_seq_prestador_w,rg02.nr_seq_conta,dt_apresentacao_lote_w, ie_origem_solic_w);
				
				--1701 - Cobran?a fora do prazo de validade
				if ((trim(both ds_inco_paga_w) IS NOT NULL AND (trim(both ds_inco_paga_w))::text <> '')) then
					CALL pls_gravar_glosa_recurso_glosa(	'1701', rg02.nr_sequencia, null, null, null, ds_inco_paga_w, nm_usuario_p);
				end if;
				
				--5028 - Vers?o do padr?o inv?lida
				if (qt_versao_ativa_w = 0) then
					CALL pls_gravar_glosa_recurso_glosa(	'5028', rg02.nr_sequencia, null, null, null, ds_erro_w, nm_usuario_p);
				end if;
				
				begin
				ds_mensagem_abort_p := pls_consistir_inclusao_recurso(rg02.nr_seq_conta, nm_usuario_p, nr_seq_protocolo_p, null, ds_mensagem_abort_p);
				exception
				when others then
					ds_erro_w	:= sqlerrm;
				end;
				
				if ( ie_origem_solic_w = 'E') then
					ds_protocolos_w := null;
					
					
					
					for r_C05_w in C05(rg02.nr_seq_conta) loop
						if (coalesce(ds_protocolos_w::text, '') = '') then
							ds_protocolos_w := r_C05_w.nr_seq_protocolo;
						else
							ds_protocolos_w := ', ' || r_C05_w.nr_seq_protocolo;
						end if;
						
						
						
					end loop;
												
					if (ds_protocolos_w IS NOT NULL AND ds_protocolos_w::text <> '') then
						ds_erro_w := 'A conta ' || rg02.nr_seq_conta || ' ja esta em analise no protocolo ' || ds_protocolos_w ||'.';
					end if;
				end if;
				
				--1801 - Guia j? apresentada
				if ((trim(both ds_erro_w) IS NOT NULL AND (trim(both ds_erro_w))::text <> '')) then
					CALL pls_gravar_glosa_recurso_glosa(	'1308', rg02.nr_sequencia, null, null, null, ds_erro_w, nm_usuario_p);
				end if;
				
			end if;
			
			if (coalesce(nr_seq_prestador_w::text, '') = '') then
				-- 1203 - C?digo Prestador inv?lido
				CALL pls_gravar_glosa_recurso_glosa(	'1203', rg02.nr_sequencia, null, null, null, 'Codigo do prestador invalido', nm_usuario_p);
			end if;
		
			-- Consistir os procedimentos enviado 
			ds_mensagem_abort_p := pls_consistir_rec_glosa_proc(rg02.nr_sequencia, nm_usuario_p, ds_mensagem_abort_p, ie_consid_negados_w);
			
			--Consistir os materiais enviado 
			ds_mensagem_abort_p := pls_consistir_rec_glosa_mat(rg02.nr_sequencia, nm_usuario_p, ds_mensagem_abort_p, ie_consid_negados_w);
			
			-- Consistir as glosas apresentadas no recurso de glosa 
			CALL pls_consistir_rec_glosa_glosas(rg02.nr_sequencia, nm_usuario_p);
			
			ie_status_w := 'CS'; -- Consistido sem glosa
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_rec_retorno_glosa
			where	nr_seq_conta_imp = rg02.nr_sequencia;
					
			if (qt_registros_w > 0) then
				ie_status_w := 'CG'; --Consistido com glosa
				ie_situacao_prot_w := 'RE'; --Situacao do Protocolo - Rejeitado
			end if;
			
			update	pls_rec_glosa_conta_imp
			set	ie_status = ie_status_w
			where	nr_sequencia = rg02.nr_sequencia;
		end;
	end loop;		
	
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_rec_retorno_glosa
	where	nr_seq_protocolo_cta = rg01.nr_sequencia;
	
	if (qt_registros_w > 0) then
		ie_situacao_prot_w := 'RE'; --Situacao do Protocolo - Rejeitado
	end if;
	end;
end loop;

/* Status do protocolo integrado
1  Recebido
2 Em an?lise*/


-- Se n?o for para integrar, vai ficar com situa??o "importado"
if	(ie_situacao_prot_w <> 'RE' AND ie_integrar_w = 'N') then

	-- Se n?o for para integrar, e o protocolo n?o foi rejeitado, fica com a situacao "importado"
	ie_situacao_prot_w := 'I';
end if;

update	pls_rec_glosa_protocolo
set	ie_situacao		= ie_situacao_prot_w,
	ie_Status		= CASE WHEN ie_situacao_prot_w='RE' THEN  '1'  ELSE '2' END ,
	dt_apresentacao_lote	= clock_timestamp(),
	dt_competencia_lote	= clock_timestamp()
where	nr_sequencia		= nr_seq_protocolo_p;


if	(ie_situacao_prot_w <> 'RE' AND ie_integrar_w = 'S') then	

	CALL pls_integrar_rec_glosa_prot(null, nr_seq_protocolo_p, nm_usuario_p);
end if;

-- Se o protocolo n?o est? rejeitado, ent?o altera o codigo da mensagem.
if (ie_situacao_prot_w <> 'RE') then

	nr_seq_mensagem_w	:= 5013;
end if;

--Grava a informa??o a mensagem do resumo do Recurso de Glosa
CALL pls_gerar_log_erro_rec_glosa(nr_seq_protocolo_p,nm_usuario_p,nr_seq_mensagem_w,'');
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_recurso_glosa ( nr_seq_protocolo_p bigint, nm_usuario_p text, ds_mensagem_abort_p INOUT text, ie_integrar_p text default 'S', cd_versao_tiss_p text DEFAULT NULL) FROM PUBLIC;

