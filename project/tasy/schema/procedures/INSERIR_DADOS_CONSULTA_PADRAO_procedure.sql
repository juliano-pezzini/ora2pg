-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_dados_consulta_padrao ( nr_sequencia_p bigint, nr_seq_consulta_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_refracao_w		bigint;
qt_tonometria_w		bigint;
qt_biomicroscopia_w	bigint;
qt_fundoscopia_w	bigint;
qt_conduta_w		bigint;
qt_acuidade_visual_w	bigint;


BEGIN

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then

	select count(*)
	into STRICT   qt_refracao_w
	from   oft_consulta_padrao
	where  nr_sequencia = nr_sequencia_p
	and	ie_situacao = 'A'
	and    ((vl_od_pl_ard_esf IS NOT NULL AND vl_od_pl_ard_esf::text <> '') or (vl_od_pl_are_esf IS NOT NULL AND vl_od_pl_are_esf::text <> ''));

	select  count(*)
	into STRICT	qt_tonometria_w
	from    oft_consulta_padrao
	where   nr_sequencia = nr_sequencia_p
	and	ie_situacao = 'A'
	and    ((vl_pressao_od IS NOT NULL AND vl_pressao_od::text <> '') or (vl_pressao_oe IS NOT NULL AND vl_pressao_oe::text <> ''));

	select  count(*)
	into STRICT	qt_biomicroscopia_w
	from    oft_consulta_padrao
	where   nr_sequencia = nr_sequencia_p
	and	ie_situacao = 'A'
	and    ((ds_biomicroscopia_od IS NOT NULL AND ds_biomicroscopia_od::text <> '') or (ds_biomicroscopia_oe IS NOT NULL AND ds_biomicroscopia_oe::text <> ''));

	select  count(*)
	into STRICT	qt_fundoscopia_w
	from    oft_consulta_padrao
	where   nr_sequencia = nr_sequencia_p
	and	ie_situacao = 'A'
	and    ((ds_fundoscopia_od IS NOT NULL AND ds_fundoscopia_od::text <> '') or (ds_fundoscopia_oe IS NOT NULL AND ds_fundoscopia_oe::text <> ''));

	select  count(*)
	into STRICT	qt_conduta_w
	from    oft_consulta_padrao
	where   nr_sequencia = nr_sequencia_p
	and	ie_situacao = 'A'
	and (ds_conduta IS NOT NULL AND ds_conduta::text <> '');

	select  count(*)
	into STRICT	qt_acuidade_visual_w
	from 	oft_consulta_padrao
	where   nr_sequencia = nr_sequencia_p
	and	ie_situacao = 'A'
	and     ((vl_od_pl_av_cc IS NOT NULL AND vl_od_pl_av_cc::text <> '') or (vl_od_pl_av_sc IS NOT NULL AND vl_od_pl_av_sc::text <> '') or (vl_oe_pl_av_cc IS NOT NULL AND vl_oe_pl_av_cc::text <> '') or (vl_oe_pl_av_sc IS NOT NULL AND vl_oe_pl_av_sc::text <> '') or (VL_OD_PP_AV IS NOT NULL AND VL_OD_PP_AV::text <> '') or (VL_OE_PP_AV IS NOT NULL AND VL_OE_PP_AV::text <> ''));


	if (qt_refracao_w > 0) then
		insert into OFT_REFRACAO(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_consulta,
			cd_profissional,
			dt_exame,
			ie_refracao_sugerida,
			ie_situacao,
			vl_od_pl_ard_esf,
			vl_od_pl_ard_cil,
			vl_od_pl_ard_eixo,
			vl_od_pl_ard_av_sc,
			vl_oe_pl_ard_esf,
			vl_oe_pl_ard_cil,
			vl_oe_pl_ard_eixo,
			vl_oe_pl_ard_av_sc,
			vl_od_pl_are_esf,
			vl_od_pl_are_cil,
			vl_od_pl_are_eixo,
			vl_od_pl_are_av_sc,
			vl_oe_pl_are_esf,
			vl_oe_pl_are_cil,
			vl_oe_pl_are_eixo,
			vl_oe_pl_are_av_sc,
			dt_liberacao,
			VL_ADICAO,
			VL_OD_ADIC_AV,
			VL_OE_ADIC_AV,
			IE_RECEITA_DINAMICA,
			IE_RECEITA_ESTATICA)
		SELECT	nextval('oft_refracao_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_consulta_p,
			cd_profissional,
			clock_timestamp(),
			'N',
			'A',
			vl_od_pl_ard_esf,
			vl_od_pl_ard_cil,
			vl_od_pl_ard_eixo,
			vl_od_pl_ard_av_sc,
			vl_oe_pl_ard_esf,
			vl_oe_pl_ard_cil,
			vl_oe_pl_ard_eixo,
			vl_oe_pl_ard_av_sc,
			vl_od_pl_are_esf,
			vl_od_pl_are_cil,
			vl_od_pl_are_eixo,
			vl_od_pl_are_av_sc,
			vl_oe_pl_are_esf,
			vl_oe_pl_are_cil,
			vl_oe_pl_are_eixo,
			vl_oe_pl_are_av_sc,
			dt_liberacao,
			VL_ADICAO,
			VL_OD_ADIC_AV,
			VL_OE_ADIC_AV,
			'S',
			'S'
		from		oft_consulta_padrao
		where   nr_sequencia = nr_sequencia_p
		and	ie_situacao = 'A'
		and    ((vl_od_pl_ard_esf IS NOT NULL AND vl_od_pl_ard_esf::text <> '') or (vl_od_pl_are_esf IS NOT NULL AND vl_od_pl_are_esf::text <> ''));
		commit;
	end if;

	if (qt_tonometria_w > 0) then
		insert into OFT_TONOMETRIA(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_consulta,
			cd_profissional,
			dt_exame,
			ie_situacao,
			vl_pressao_od,
			vl_pressao_oe,
			ie_tipo_tonometria,
			dt_liberacao)
		SELECT	nextval('oft_tonometria_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_consulta_p,
			cd_profissional,
			clock_timestamp(),
			'A',
			vl_pressao_od,
			vl_pressao_oe,
			2,
			dt_liberacao
		from	oft_consulta_padrao
		where   nr_sequencia = nr_sequencia_p
		and	ie_situacao = 'A'
		and    ((vl_pressao_od IS NOT NULL AND vl_pressao_od::text <> '') or (vl_pressao_oe IS NOT NULL AND vl_pressao_oe::text <> ''));
		commit;
		end if;

	if (qt_biomicroscopia_w > 0) then
			insert into OFT_BIOMICROSCOPIA(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_consulta,
			cd_profissional,
			dt_exame,
			ie_situacao,
			DS_BIOMICROSCOPIA_OD,
			DS_BIOMICROSCOPIA_OE,
			dt_liberacao)
		SELECT	nextval('oft_biomicroscopia_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_consulta_p,
			cd_profissional,
			clock_timestamp(),
			'A',
			DS_BIOMICROSCOPIA_OD,
			DS_BIOMICROSCOPIA_OE,
			dt_liberacao
		from	oft_consulta_padrao
		where   nr_sequencia = nr_sequencia_p
		and	ie_situacao = 'A'
		and    ((ds_biomicroscopia_od IS NOT NULL AND ds_biomicroscopia_od::text <> '') or (ds_biomicroscopia_oe IS NOT NULL AND ds_biomicroscopia_oe::text <> ''));
		commit;
		end if;

	if (qt_fundoscopia_w > 0) then
			insert into OFT_FUNDOSCOPIA(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_consulta,
			cd_profissional,
			dt_exame,
			ds_fundoscopia_od,
			ds_fundoscopia_oe,
			ie_situacao,
			dt_liberacao)
		SELECT	nextval('oft_fundoscopia_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_consulta_p,
			cd_profissional,
			clock_timestamp(),
			ds_fundoscopia_od,
			ds_fundoscopia_oe,
			'A',
			dt_liberacao
		from	oft_consulta_padrao
		where   nr_sequencia = nr_sequencia_p
		and	ie_situacao = 'A'
		and    ((ds_fundoscopia_od IS NOT NULL AND ds_fundoscopia_od::text <> '') or (ds_fundoscopia_oe IS NOT NULL AND ds_fundoscopia_oe::text <> ''));
		commit;
		end if;
	if (qt_conduta_w > 0) then
			insert into OFT_CONDUTA(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_consulta,
			cd_profissional,
			dt_registro,
			ie_situacao,
			ds_conduta,
			dt_liberacao,
			DS_INF_PRE_CIRURGICA)
		SELECT	nextval('oft_conduta_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_consulta_p,
			cd_profissional,
			clock_timestamp(),
			'A',
			wheb_rtf_pck.GET_CABECALHO||ds_conduta||wheb_rtf_pck.get_rodape,
			dt_liberacao,
			''
		from	oft_consulta_padrao
		where   nr_sequencia = nr_sequencia_p
		and	ie_situacao = 'A'
		and (ds_conduta IS NOT NULL AND ds_conduta::text <> '');
		commit;
		end if;

	if (qt_acuidade_visual_w > 0) then
		insert into OFT_ACUIDADE_VISUAL(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_consulta,
			cd_profissional,
			dt_registro,
			ie_situacao,
			dt_liberacao,
			vl_od_pl_av_cc,
			vl_od_pl_av_sc,
			vl_oe_pl_av_cc,
			vl_oe_pl_av_sc,
			VL_OD_PP_AV,
			VL_OE_PP_AV)
		SELECT	nextval('oft_acuidade_visual_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_consulta_p,
			cd_profissional,
			clock_timestamp(),
			'A',
			dt_liberacao,
			VL_OD_PL_AV_CC,
			VL_OD_PL_AV_SC,
			VL_OE_PL_AV_CC,
			VL_OE_PL_AV_SC,
			VL_OD_PP_AV,
			VL_OE_PP_AV
		from	oft_consulta_padrao
		where   nr_sequencia = nr_sequencia_p
		and	ie_situacao = 'A'
		and     ((vl_od_pl_av_cc IS NOT NULL AND vl_od_pl_av_cc::text <> '') or (vl_od_pl_av_sc IS NOT NULL AND vl_od_pl_av_sc::text <> '') or (vl_oe_pl_av_cc IS NOT NULL AND vl_oe_pl_av_cc::text <> '') or (vl_oe_pl_av_sc IS NOT NULL AND vl_oe_pl_av_sc::text <> '') or (vl_od_pp_av IS NOT NULL AND vl_od_pp_av::text <> '') or (vl_oe_pp_av IS NOT NULL AND vl_oe_pp_av::text <> ''));
		commit;
	end if;



end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_dados_consulta_padrao ( nr_sequencia_p bigint, nr_seq_consulta_p bigint, nm_usuario_p text) FROM PUBLIC;

