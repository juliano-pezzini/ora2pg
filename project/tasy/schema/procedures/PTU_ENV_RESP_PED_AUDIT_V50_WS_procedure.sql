-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_env_resp_ped_audit_v50_ws ( nr_seq_guia_p ptu_pedido_autorizacao.nr_seq_guia%type, nr_seq_requisicao_p ptu_pedido_autorizacao.nr_seq_requisicao%type, nr_seq_complemento_p bigint, ds_mensagem_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_auditoria_p INOUT ptu_resposta_auditoria.nr_sequencia%type) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar a transação PTU de resposta de auditoria, via SCS 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção:Performance. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
cd_unimed_executora_w		ptu_resposta_autorizacao.cd_unimed_executora%type;
cd_unimed_beneficiario_w	ptu_resposta_autorizacao.cd_unimed_beneficiario%type;
nr_seq_execucao_w		ptu_resposta_autorizacao.nr_seq_execucao%type;
nr_seq_origem_w			ptu_controle_execucao.nr_sequencia%type;
dt_validade_senha_w		pls_guia_plano.dt_validade_senha%type;
ie_origem_proced_w		pls_guia_plano_proc.ie_origem_proced%type;
qt_proced_w			ptu_resp_auditoria_servico.qt_autorizado%type;
ie_status_proc_w		pls_requisicao_proc.ie_status%type;
ie_proc_autor_w			ptu_resp_auditoria_servico.ie_autorizado%type;
qt_material_w			ptu_resp_auditoria_servico.qt_autorizado%type;
ie_status_mat_w			pls_requisicao_mat.ie_status%type;
ie_mat_autor_w			ptu_resp_auditoria_servico.ie_autorizado%type;
ds_material_w			ptu_resp_auditoria_servico.ds_servico%type;
ds_proced_w			ptu_resp_auditoria_servico.ds_servico%type;
ie_tipo_cliente_w		ptu_resposta_auditoria.ie_tipo_cliente%type;
ie_tipo_tabela_w		ptu_pedido_aut_servico.ie_tipo_tabela%type;
cd_servico_w			ptu_pedido_aut_servico.cd_servico%type;
nr_seq_pacote_w			pls_guia_plano_proc.nr_seq_pacote%type;
nr_seq_material_w		pls_material.nr_sequencia%type;
qt_reg_aprov_w			integer;
qt_reg_neg_w			integer;
nr_seq_pedido_w			ptu_resposta_autorizacao.nr_sequencia%type;
qt_reg_auditoria_w		integer;
cd_servico_conversao_w		ptu_pedido_aut_servico.cd_servico_consersao%type;
ds_opme_w			ptu_pedido_aut_servico.ds_opme%type;
nr_seq_pedido_aut_w		ptu_controle_execucao.nr_seq_pedido_aut%type;
ie_estagio_w			pls_requisicao.ie_estagio%type;
nr_seq_pedido_compl_w		ptu_controle_execucao.nr_seq_pedido_compl%type;
nr_seq_guia_mat_w		ptu_pedido_aut_servico.nr_seq_guia_mat%type;
nr_seq_guia_proc_w		ptu_pedido_aut_servico.nr_seq_guia_proc%type;
nr_seq_req_mat_w		ptu_pedido_aut_servico.nr_seq_req_mat%type;
nr_seq_req_proc_w		ptu_pedido_aut_servico.nr_seq_req_proc%type;
qt_reg_confirm_w		integer;

C01 CURSOR FOR 
	SELECT	cd_servico, 
		cd_servico_consersao, 
		ie_tipo_tabela, 
		substr(ds_opme,1,80), 
		nr_seq_guia_mat, 
		nr_seq_guia_proc, 
		nr_seq_req_mat, 
		nr_seq_req_proc 
	from	ptu_pedido_aut_servico 
	where	nr_seq_pedido = nr_seq_pedido_aut_w 
	
union
 
	SELECT	cd_servico, 
		cd_servico_conversao, 
		to_char(ie_tipo_tabela), 
		substr(ds_opme,1,80), 
		nr_seq_guia_mat, 
		nr_seq_guia_proc, 
		nr_seq_req_mat, 
		nr_seq_req_proc 
	from	ptu_pedido_compl_aut_serv 
	where	nr_seq_pedido = nr_seq_pedido_compl_w;


BEGIN 
 
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
	begin 
		select	a.nr_sequencia, 
			a.nr_seq_pedido_aut 
		into STRICT	nr_seq_origem_w, 
			nr_seq_pedido_aut_w 
		from	ptu_pedido_autorizacao	b, 
			ptu_controle_execucao	a 
		where	a.nr_seq_pedido_aut	= b.nr_sequencia 
		and	b.nr_seq_guia		= nr_seq_guia_p;
	exception 
	when others then 
		begin 
			select	a.nr_sequencia, 
				a.nr_seq_pedido_compl 
			into STRICT	nr_seq_origem_w, 
				nr_seq_pedido_compl_w 
			from	ptu_pedido_compl_aut	b, 
				ptu_controle_execucao	a 
			where	a.nr_seq_pedido_compl	= b.nr_sequencia 
			and	b.nr_seq_guia		= nr_seq_guia_p;
		exception 
		when others then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(179719);
		end;
	end;
	 
	select	count(1) 
	into STRICT	qt_reg_auditoria_w 
	from	ptu_resposta_auditoria 
	where	nr_seq_origem	= nr_seq_origem_w;
	 
	select	count(1) 
	into STRICT	qt_reg_confirm_w 
	from	ptu_confirmacao 
	where	nr_seq_origem		= nr_seq_origem_w 
	and	ie_tipo_resposta	= 'RA';
	 
	if (qt_reg_auditoria_w	<> qt_reg_confirm_w) then 
		goto final;
	else 
		select	count(1) 
		into STRICT	qt_reg_auditoria_w 
		from	ptu_resposta_auditoria 
		where	nr_seq_origem	= nr_seq_origem_w 
		and	ie_enviado	= 'N';
		 
		if (qt_reg_auditoria_w	> 0) then 
			update	ptu_resposta_auditoria 
			set	ie_enviado	= 'S' 
			where	nr_seq_origem	= nr_seq_origem_w 
			and	ie_enviado	= 'N';
		end if;
	end if;
	 
	begin 
	select	cd_unimed_executora, 
		cd_unimed_beneficiario, 
		nr_seq_execucao, 
		ie_tipo_cliente 
	into STRICT	cd_unimed_executora_w, 
		cd_unimed_beneficiario_w, 
		nr_seq_execucao_w, 
		ie_tipo_cliente_w 
	from	ptu_resposta_autorizacao 
	where	nr_seq_guia	= nr_seq_guia_p;
	exception 
	when others then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(179720);
	end;
	 
	select	dt_validade_senha 
	into STRICT	dt_validade_senha_w 
	from	pls_guia_plano 
	where	nr_sequencia	= nr_seq_guia_p;
	 
	CALL pls_guia_gravar_historico(nr_seq_guia_p,2,substr('Enviada a resposta de auditoria para a Unimed '||cd_unimed_executora_w||' com a mensagem: '||chr(10)||ds_mensagem_p,1,4000),'',nm_usuario_p);
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
	begin 
	select	a.nr_sequencia, 
		a.nr_seq_pedido_aut 
	into STRICT	nr_seq_origem_w, 
		nr_seq_pedido_aut_w 
	from	ptu_pedido_autorizacao	b, 
		ptu_controle_execucao		a 
	where	a.nr_seq_pedido_aut		= b.nr_sequencia 
	and	b.nr_seq_requisicao		= nr_seq_requisicao_p;
	exception 
	when others then 
		begin 
			select	a.nr_sequencia, 
				a.nr_seq_pedido_compl 
			into STRICT	nr_seq_origem_w, 
				nr_seq_pedido_compl_w 
			from	ptu_pedido_compl_aut	b, 
				ptu_controle_execucao	a 
			where	a.nr_seq_pedido_compl	= b.nr_sequencia 
			and	b.nr_seq_requisicao	= nr_seq_requisicao_p;
		exception 
		when others then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(179719);
		end;
	end;
 
	select	count(1) 
	into STRICT	qt_reg_auditoria_w 
	from	ptu_resposta_auditoria 
	where	nr_seq_origem	= nr_seq_origem_w;
	 
	select	count(1) 
	into STRICT	qt_reg_confirm_w 
	from	ptu_confirmacao 
	where	nr_seq_origem		= nr_seq_origem_w 
	and	ie_tipo_resposta	= 'RA';
	 
	if (qt_reg_auditoria_w	<> qt_reg_confirm_w) then 
		goto final;
	else 
		select	count(1) 
		into STRICT	qt_reg_auditoria_w 
		from	ptu_resposta_auditoria 
		where	nr_seq_origem	= nr_seq_origem_w 
		and	ie_enviado	= 'N';
		 
		if (qt_reg_auditoria_w	> 0) then 
			update	ptu_resposta_auditoria 
			set	ie_enviado	= 'S' 
			where	nr_seq_origem	= nr_seq_origem_w 
			and	ie_enviado	= 'N';
		end if;
	end if;
 
	begin 
	select	cd_unimed_executora, 
		cd_unimed_beneficiario, 
		nr_seq_execucao, 
		ie_tipo_cliente 
	into STRICT	cd_unimed_executora_w, 
		cd_unimed_beneficiario_w, 
		nr_seq_execucao_w, 
		ie_tipo_cliente_w 
	from	ptu_resposta_autorizacao 
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	exception 
	when others then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(179720);
	end;
	 
	select	dt_validade_senha 
	into STRICT	dt_validade_senha_w 
	from	pls_requisicao 
	where	nr_sequencia	= nr_seq_requisicao_p;
	 
	CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p,'L',substr('Enviada a resposta de auditoria para a Unimed '||cd_unimed_executora_w||' com a mensagem: '||chr(10)||ds_mensagem_p,1,4000),null,nm_usuario_p);
end if;
 
insert	into ptu_resposta_auditoria(nr_sequencia, cd_transacao, ie_tipo_cliente, 
	 cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao, 
	 nr_seq_origem, ds_observacao, dt_atualizacao, 
	 nm_usuario, dt_validade, nr_seq_guia, 
	 nr_seq_requisicao, ie_tipo_autorizacao, ie_enviado, 
	 nm_usuario_nrec, dt_atualizacao_nrec, nr_versao) 
values (nextval('ptu_resposta_auditoria_seq'), '00404', ie_tipo_cliente_w, 
	 cd_unimed_executora_w, cd_unimed_beneficiario_w, nr_seq_execucao_w, 
	 nr_seq_origem_w, substr(coalesce(replace(replace(ds_mensagem_p,chr(13),''),chr(10),''),' '),1,999), clock_timestamp(), 
	 nm_usuario_p, dt_validade_senha_w, nr_seq_guia_p, 
	 nr_seq_requisicao_p, '1', 'N', 
	 nm_usuario_p, clock_timestamp(), '050') returning nr_sequencia into nr_seq_auditoria_p;
 
select	max(nr_sequencia) 
into STRICT	nr_seq_pedido_w 
from	ptu_resposta_autorizacao 
where	nr_seq_origem		= nr_seq_origem_w;
 
if	((nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') or (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '')) then	 
	open c01;
	loop 
	fetch c01 into 
		cd_servico_w, 
		cd_servico_conversao_w, 
		ie_tipo_tabela_w, 
		ds_opme_w, 
		nr_seq_guia_mat_w, 
		nr_seq_guia_proc_w, 
		nr_seq_req_mat_w, 
		nr_seq_req_proc_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		if (ie_tipo_tabela_w	in ('0','1','4')) then 
			if (coalesce(nr_seq_guia_p,0)	<> 0) then 
				select	ie_origem_proced, 
					qt_autorizada, 
					ie_status, 
					nr_seq_pacote 
				into STRICT	ie_origem_proced_w, 
					qt_proced_w, 
					ie_status_proc_w, 
					nr_seq_pacote_w 
				from	pls_guia_plano_proc 
				where	nr_seq_guia	= nr_seq_guia_p 
				and	nr_sequencia	= nr_seq_guia_proc_w;
			elsif (coalesce(nr_seq_requisicao_p,0)	<> 0) then 
				select	ie_origem_proced, 
					qt_procedimento, 
					ie_status, 
					nr_seq_pacote 
				into STRICT	ie_origem_proced_w, 
					qt_proced_w, 
					ie_status_proc_w, 
					nr_seq_pacote_w 
				from	pls_requisicao_proc 
				where	nr_seq_requisicao	= nr_seq_requisicao_p 
				and	nr_sequencia		= nr_seq_req_proc_w;
			end if;
			 
			if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then 
				ie_tipo_tabela_w	:= '4';
			end if;
			 
			if (ie_status_proc_w	in ('M','G','C','N','D','K')) then 
				ie_proc_autor_w	:= 1;
			elsif (ie_status_proc_w	in ('P','S','T','L')) then 
				ie_proc_autor_w	:= 2;
			end if;
			 
			if (cd_servico_w IS NOT NULL AND cd_servico_w::text <> '') then 
				if (coalesce(ds_opme_w,'X')	= 'X') then 
					ds_proced_w	:= substr(obter_descricao_procedimento(coalesce(cd_servico_conversao_w,cd_servico_w),ie_origem_proced_w),1,80);
				else 
					ds_proced_w	:= ds_opme_w;
				end if;
 
				insert	into ptu_resp_auditoria_servico(nr_sequencia, ie_tipo_tabela, cd_servico, 
					 ie_origem_servico, ds_servico, ie_autorizado, 
					 dt_atualizacao, nm_usuario, qt_autorizado, 
					 nr_seq_auditoria, cd_servico_conversao, nr_seq_guia_proc, 
					 nr_seq_req_proc, nm_usuario_nrec, dt_atualizacao_nrec) 
				values (nextval('ptu_resp_auditoria_servico_seq'), ie_tipo_tabela_w, cd_servico_w, 
					 ie_origem_proced_w, ds_proced_w, ie_proc_autor_w, 
					 clock_timestamp(), nm_usuario_p, qt_proced_w, 
					 nr_seq_auditoria_p, cd_servico_conversao_w, nr_seq_guia_proc_w, 
					 nr_seq_req_proc_w, nm_usuario_p, clock_timestamp());
			end if;
		elsif (ie_tipo_tabela_w	in ('2','3')) then 
			if (coalesce(nr_seq_guia_p,0)	<> 0) then 
				select	qt_autorizada, 
					ie_status 
				into STRICT	qt_material_w, 
					ie_status_mat_w 
				from	pls_guia_plano_mat 
				where	nr_seq_guia	= nr_seq_guia_p 
				and	nr_sequencia	= nr_seq_guia_mat_w;
			elsif (coalesce(nr_seq_requisicao_p,0)	<> 0) then 
				select	qt_material, 
					ie_status 
				into STRICT	qt_material_w, 
					ie_status_mat_w 
				from	pls_requisicao_mat 
				where	nr_seq_requisicao	= nr_seq_requisicao_p 
				and	nr_sequencia		= nr_seq_req_mat_w;
			end if;
			 
			if (ie_status_mat_w	in ('M','G','C','N','D','K')) then 
				ie_mat_autor_w	:= 1;
			elsif (ie_status_mat_w	in ('P','S','T','L')) then 
				ie_mat_autor_w	:= 2;
			end if;
			 
			begin 
			 nr_seq_material_w := pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), coalesce(cd_servico_conversao_w,cd_servico_w), 'O', 'N', pls_obter_versao_tiss);
			exception 
			when others then 
				nr_seq_material_w	:= 0;
			end;
			 
			if (cd_servico_w IS NOT NULL AND cd_servico_w::text <> '') then 
				if (coalesce(ds_opme_w,'X')	= 'X') then 
					ds_material_w	:= substr(coalesce(pls_obter_desc_material(nr_seq_material_w),'Não encontrado'),1,80);
				else 
					ds_material_w	:= ds_opme_w;
				end if;
 
				insert	into ptu_resp_auditoria_servico(nr_sequencia, ie_tipo_tabela, cd_servico, 
					 ie_origem_servico, ds_servico, ie_autorizado, 
					 dt_atualizacao, nm_usuario, qt_autorizado, 
					 nr_seq_auditoria, cd_servico_conversao, nr_seq_guia_mat, 
					 nr_seq_req_mat, nm_usuario_nrec, dt_atualizacao_nrec) 
				values (nextval('ptu_resp_auditoria_servico_seq'), ie_tipo_tabela_w, cd_servico_w, 
					 null, ds_material_w, ie_mat_autor_w, 
					 clock_timestamp(), nm_usuario_p, qt_material_w, 
					 nr_seq_auditoria_p, cd_servico_conversao_w, nr_seq_guia_mat_w, 
					 nr_seq_req_mat_w, nm_usuario_p, clock_timestamp());
			end if;
		end if;
		end;
	end loop;
	close c01;
end if;
 
select	count(1) 
into STRICT	qt_reg_aprov_w 
from	ptu_resp_auditoria_servico 
where	nr_seq_auditoria	= nr_seq_auditoria_p 
and	ie_autorizado		= 2;
 
select	count(1) 
into STRICT	qt_reg_neg_w 
from	ptu_resp_auditoria_servico 
where	nr_seq_auditoria	= nr_seq_auditoria_p 
and	ie_autorizado		= 1;
 
if (qt_reg_aprov_w	= 0) and (qt_reg_neg_w	> 0) and (coalesce(ds_mensagem_p::text, '') = '') then 
	update	ptu_resposta_auditoria 
	set	ds_observacao	= 'Pedido negado' 
	where	nr_sequencia	= nr_seq_auditoria_p;
elsif (qt_reg_aprov_w	> 0) and (qt_reg_neg_w	= 0) and (coalesce(ds_mensagem_p::text, '') = '') then 
	update	ptu_resposta_auditoria 
	set	ds_observacao	= 'Pedido autorizado' 
	where	nr_sequencia	= nr_seq_auditoria_p;
elsif (qt_reg_aprov_w	> 0) and (qt_reg_neg_w	> 0) and (coalesce(ds_mensagem_p::text, '') = '') then 
	update	ptu_resposta_auditoria 
	set	ds_observacao	= 'Pedido parcialmente autorizado' 
	where	nr_sequencia	= nr_seq_auditoria_p;
	 
end if;
 
begin 
	select	ie_estagio 
	into STRICT	ie_estagio_w 
	from	pls_requisicao 
	where	nr_sequencia = nr_seq_requisicao_p;
exception 
when others then 
	ie_estagio_w	:= 0;
end;
 
if (coalesce(ie_estagio_w,0)	in (2,6)) then 
	CALL pls_executar_req_interc_aprov(nr_seq_requisicao_p, cd_estabelecimento_p, nm_usuario_p);
end if;
 
CALL ptu_consistir_transacao('00404',coalesce(nr_seq_guia_p,nr_seq_guia_p),coalesce(nr_seq_requisicao_p,nr_seq_requisicao_p),nr_seq_complemento_p,cd_estabelecimento_p,nm_usuario_p);
 
<<final>> 
qt_reg_auditoria_w	:= 0;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_env_resp_ped_audit_v50_ws ( nr_seq_guia_p ptu_pedido_autorizacao.nr_seq_guia%type, nr_seq_requisicao_p ptu_pedido_autorizacao.nr_seq_requisicao%type, nr_seq_complemento_p bigint, ds_mensagem_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_auditoria_p INOUT ptu_resposta_auditoria.nr_sequencia%type) FROM PUBLIC;

