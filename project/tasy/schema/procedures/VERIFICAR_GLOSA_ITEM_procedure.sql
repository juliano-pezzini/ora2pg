-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verificar_glosa_item ( nr_seq_ageint_item_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_estabelecimento_p bigint, cd_plano_p text, nm_usuario_p text, cd_pessoa_fisica_p text, ie_tipo_Atendimento_p bigint, nr_seq_cobetura_p bigint, ie_Regra_p INOUT bigint, ie_glosa_p INOUT text, nr_seq_regra_p INOUT bigint, cd_medico_p text default null, dt_agenda_p timestamp default clock_timestamp()) AS $body$
DECLARE


nr_seq_proc_interno_w	bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ds_aux_w				varchar(255);
ie_regra_w				integer;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_plano_w				varchar(10);
ie_Sexo_w				varchar(2);
ie_glosa_w				varchar(1);
nr_seq_regra_w			bigint;
ie_edicao_w             varchar(1);
cd_edicao_ajuste_w      bigint;
qt_item_edicao_w        bigint;
ie_pacote_item_w		varchar(1);	
cd_estab_item_w			smallint;
cd_estabelecimento_w	smallint;
ds_Erro_w				varchar(255);
ds_irrelavante_w		varchar(255);
pr_glosa_w				double precision;
vl_glosa_w				double precision;
ie_bloq_glosa_part_ww   varchar(1);
nr_glosa_part_w  		bigint := 99;
dt_agenda_w             timestamp;

c01 CURSOR FOR
	SELECT	nr_seq_proc_interno,
			cd_estabelecimento
	from	agenda_integrada_item
	where	nr_sequencia = nr_seq_ageint_item_p
	and		(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
	
union

	SELECT 	b.nr_seq_proc_interno,
			a.cd_estabelecimento
	from	agenda_integrada_item a,
			ageint_exame_adic_item b
	where	a.nr_sequencia = b.nr_seq_item
	and		a.nr_sequencia = nr_seq_ageint_item_p;
			

BEGIN
dt_agenda_w := dt_agenda_p;
if (coalesce(dt_agenda_w::text, '') = '') then
	dt_agenda_w := clock_timestamp();
end if;

ie_bloq_glosa_part_ww := obter_param_usuario(869, 187, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_bloq_glosa_part_ww);
if (ie_bloq_glosa_part_ww = 'N') then
	nr_glosa_part_w := 8;
end if;
	
select	max(ie_Sexo)
into STRICT	ie_Sexo_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_p;

cd_convenio_w	:= cd_convenio_p;
cd_categoria_w	:= cd_categoria_p;
cd_plano_w		:= cd_plano_p;

open C01;
loop
fetch C01 into
	nr_seq_proc_interno_w,
	cd_estab_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	begin	
	
	if 	((coalesce(ie_regra_w,0) NOT IN (1,2,5,nr_glosa_part_w)) OR (coalesce(ie_glosa_w,'X') <> 'T')) then
		cd_estabelecimento_w := coalesce(cd_estabelecimento_p,cd_estab_item_w);
			
			ageint_sugerir_horarios_pck.get_proc_tab_interno_conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, dt_agenda_w, cd_procedimento_w, ie_origem_proced_w);

			SELECT * FROM ageint_sugerir_horarios_pck.get_consiste_plano_conv(cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, dt_agenda_w, coalesce(ie_tipo_atendimento_p, 0), cd_plano_w, ds_erro_w, ie_regra_w, nr_seq_regra_w, nr_Seq_proc_interno_W, cd_categoria_w, cd_estabelecimento_w, ie_Sexo_w, ie_glosa_w, cd_edicao_ajuste_w, nr_seq_cobetura_p, cd_pessoa_fisica_p, pr_glosa_w, vl_glosa_w, cd_medico_p) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, cd_edicao_ajuste_w, pr_glosa_w, vl_glosa_w;
	
		if (coalesce(cd_edicao_ajuste_w,0) 	>= 0) and (coalesce(ie_glosa_w,'L') 		= 'L') then
			ie_pacote_item_w:= obter_Se_pacote_convenio(cd_procedimento_w, ie_origem_proced_w, cd_convenio_w, cd_estabelecimento_w);
			if (ie_pacote_item_w 			= 'N') then
				ie_edicao_w		:= ageint_sugerir_horarios_pck.get_obter_se_proc_conv(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_agenda_w, cd_procedimento_W, ie_origem_proced_w, nr_Seq_proc_interno_w, ie_tipo_atendimento_p);
				if (ie_edicao_w				= 'N') then
					if (coalesce(cd_edicao_ajuste_w,0) 	= 0) then
						ie_glosa_w        := 'T';
					elsif (coalesce(cd_edicao_ajuste_w,0) 	> 0) then
						select   count(*)
						into STRICT       qt_item_edicao_w
						from      preco_amb
						where   cd_edicao_amb = cd_edicao_ajuste_w
						and       cd_procedimento = cd_procedimento_w
						and       ie_origem_proced = ie_origem_proced_w;

						if (qt_item_edicao_w = 0) then
								   ie_glosa_w :=    'G';
						end if;
					end if;
				end if;
			end if;
		end if;
	end if;
	end;
	end loop;
close C01;
ie_regra_p := ie_regra_w;
ie_glosa_p := ie_glosa_w;
nr_seq_regra_p := nr_seq_regra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verificar_glosa_item ( nr_seq_ageint_item_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_estabelecimento_p bigint, cd_plano_p text, nm_usuario_p text, cd_pessoa_fisica_p text, ie_tipo_Atendimento_p bigint, nr_seq_cobetura_p bigint, ie_Regra_p INOUT bigint, ie_glosa_p INOUT text, nr_seq_regra_p INOUT bigint, cd_medico_p text default null, dt_agenda_p timestamp default clock_timestamp()) FROM PUBLIC;

