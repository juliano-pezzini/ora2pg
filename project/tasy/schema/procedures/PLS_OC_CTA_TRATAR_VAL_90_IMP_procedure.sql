-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_90_imp (( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) is nr_idx_w integer DEFAULT 0) RETURNS varchar AS $body$
DECLARE


_ora2pg_r RECORD;
ds_guia_w	varchar(100);
BEGIN
if (ie_tipo_guia_p = 'G') then
	ds_guia_w := 'Guia operadora';
elsif (ie_tipo_guia_p = 'GP') then
	ds_guia_w := 'Guia prestador';
elsif (ie_tipo_guia_p = 'GF') then
	ds_guia_w := 'Guia referência';
end if;

if (ie_observacao_p = 'N') then
	if (ie_tipo_guia_p = 'G') then
		return ds_guia_w || ' informada errada';
	elsif (ie_tipo_guia_p = 'GP') then
		return ds_guia_w || ' informada errada';
	elsif (ie_tipo_guia_p = 'GF') then
		return ds_guia_w || ' informada errada';
	end if;
elsif (ie_observacao_p = 'D') then
	if (ie_guia_diferente_p = 'G') then
		return ds_guia_w || ' igual à guia operadora. ' || ds_guia_w || ': ';
	elsif (ie_guia_diferente_p = 'GP') then
		return ds_guia_w || ' igual à guia prestador. ' || ds_guia_w || ': ';
	elsif (ie_guia_diferente_p = 'GF') then
		return ds_guia_w || ' igual à guia referência. ' || ds_guia_w || ': ';
	end if;
end if;

end;

begin

-- Deve existir informação da regra para aplicar a validação
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') then

	for	r_C01_w in C01(nr_seq_combinada_p) loop

		/*Verifica se é para validar a ocorrência*/

		if (r_C01_w.ie_tipo_guia IS NOT NULL AND r_C01_w.ie_tipo_guia::text <> '') then

			-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
			CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'V',
									'N',
									nr_id_transacao_p,
									null);

			--limpa as variáveis
			SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

			for r_C02_w in C02(nr_id_transacao_p) loop

				/*Campo guia operadora*/

				if (r_C01_w.ie_tipo_guia = 'G') then

					cd_guia_valida_w := r_C02_w.cd_guia;

				/*Campo guia prestador*/

				elsif (r_C01_w.ie_tipo_guia = 'GP') then

					cd_guia_valida_w := r_C02_w.cd_guia_prestador;

				/*Campo guia referência*/

				elsif (r_C01_w.ie_tipo_guia = 'GF') then

					cd_guia_valida_w := r_C02_w.cd_guia_referencia;

				end if;

				if (cd_guia_valida_w IS NOT NULL AND cd_guia_valida_w::text <> '') then
					ds_observacao_w	 := '';

					/*Valida a quantidade mínima de caracteres*/

					if (r_C01_w.qt_min_caracteres IS NOT NULL AND r_C01_w.qt_min_caracteres::text <> '') then
						if (length(cd_guia_valida_w) < r_C01_w.qt_min_caracteres) then
							ds_observacao_w		:= obter_observacao_ocorrencia(r_C01_w.ie_tipo_guia, null) || '. Ela deve possuir no mínimo ' || r_C01_w.qt_min_caracteres || ' caracteres!';
						end if;
					end if;

					/*Valida a expressão conforme definido pelo cliente*/

					if (r_c01_w.ds_carac_valido IS NOT NULL AND r_c01_w.ds_carac_valido::text <> '') then
						cd_guia_alterada_w	:= regexp_replace(cd_guia_valida_w, '[^'||r_c01_w.ds_carac_valido ||']', '');

						if	((cd_guia_alterada_w <> cd_guia_valida_w) or (coalesce(cd_guia_alterada_w::text, '') = '')) then
							ds_observacao_w		:= obter_observacao_ocorrencia(r_C01_w.ie_tipo_guia, null) || '. Existem caracteres inválidos!';
						end if;
					end if;

					/*Valida se o número da guia não é permitido conforme o cadastro*/

					if (r_c01_w.nr_seq_regra_nguia IS NOT NULL AND r_c01_w.nr_seq_regra_nguia::text <> '') then
						select	count(1)
						into STRICT	qt_registros_w
						from	pls_itens_regra_nguia
						where	nr_seq_regra_nguia 	= r_c01_w.nr_seq_regra_nguia
						and	cd_guia			= cd_guia_valida_w  LIMIT 1;

						if (qt_registros_w > 0) then
							ds_observacao_w		:= obter_observacao_ocorrencia(r_C01_w.ie_tipo_guia, null) || '. O código ' || cd_guia_valida_w || ' não é permitido!';
						end if;
					end if;

					/*Verifica se o número da guia é igual a guia cadastrada na regra para comparação*/

					if (r_c01_w.ie_guia_diferente <> 'N') then
						/*Campo guia operadora*/

						if (r_c01_w.ie_guia_diferente = 'G') then

							ds_guia_diferente_w := 'Guia operadora';
							cd_guia_diferente_w := r_C02_w.cd_guia;

						/*Campo guia prestador*/

						elsif (r_c01_w.ie_guia_diferente = 'GP') then

							ds_guia_diferente_w := 'Guia prestador';
							cd_guia_diferente_w := r_C02_w.cd_guia_prestador;

						/*Campo guia referência*/

						elsif (r_c01_w.ie_guia_diferente = 'GF') then

							ds_guia_diferente_w := 'Guia referência';
							cd_guia_diferente_w := r_C02_w.cd_guia_referencia;

						end if;

						if (cd_guia_diferente_w IS NOT NULL AND cd_guia_diferente_w::text <> '') then
							/*Caso sejam iguais, gera ocorrência*/

							if (cd_guia_valida_w = cd_guia_diferente_w) then
								ds_observacao_w := obter_observacao_ocorrencia(r_C01_w.ie_tipo_guia, r_c01_w.ie_guia_diferente, 'D') || cd_guia_valida_w || '. ' || ds_guia_diferente_w || ': ' || cd_guia_diferente_w;
							end if;
						end if;
					end if;

					/*Caso tiver observação lança a ocorrência*/

					if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then

						tb_valido_w(nr_idx_w)		:= 'S';
						tb_seq_selecao_w(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
						tb_observacao_w(nr_idx_w)	:= ds_observacao_w;

						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then

							--Grava as informações na tabela de seleção
							CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
													tb_valido_w,
													tb_observacao_w,
													nr_id_transacao_p,
													'SEQ');
							--limpa as variáveis
							SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

							nr_idx_w := 0;

						else
							nr_idx_w := nr_idx_w + 1;
						end if;
					end if;
				end if;
			end loop;

			/*Lança as glosas caso existir registros que não foram gerados*/

			if (nr_idx_w > 0)	then

				--Grava o que restar nas variáveis na tabela
				CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
										tb_valido_w,
										tb_observacao_w,
										nr_id_transacao_p,
										'SEQ');

			end if;

			CALL pls_ocor_imp_pck.atualiza_campo_valido('V',
								'N',
								ie_regra_excecao_p,
								null,
								nr_id_transacao_p,
								null);
		end if;

	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_90_imp (( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) is nr_idx_w integer DEFAULT 0) FROM PUBLIC;

