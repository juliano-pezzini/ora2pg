-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_contab_desp_ressa ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar as movimentacoes contabeis da funcionalidade de ressarcimento ao SUS
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
vl_retorno_w			varchar(2000);
dt_referencia_w			timestamp;
dt_processo_w			timestamp;
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
ie_debito_credito_w		w_movimento_contabil.ie_debito_credito%type;
cd_conta_contabil_w		conta_contabil.cd_conta_contabil%type;
ie_centro_custo_w		conta_contabil.ie_centro_custo%type;
vl_contabil_w			w_movimento_contabil.vl_movimento%type;
cd_historico_w			pls_processo_conta.cd_historico%type;
nr_seq_w_movto_cont_w		w_movimento_contabil.nr_sequencia%type;
nr_lote_contabil_w		lote_contabil.nr_lote_contabil%type;
nr_seq_processo_conta_w		pls_processo_conta.nr_sequencia%type;
nr_seq_regra_cc_w		pls_regra_centro_custo.nr_sequencia%type;
cd_centro_custo_w		w_movimento_contabil.cd_centro_custo%type;
cd_estabelecimento_w		lote_contabil.cd_estabelecimento%type;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
nm_agrupador_w			varchar(255);		
nr_seq_agrupamento_w		bigint;
nr_seq_processo_w		pls_processo.nr_sequencia%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
ds_conteudo_w			varchar(4000);
ds_compl_historico_w		varchar(255);
cd_abi_w			pls_processo.cd_abi%type;
nr_processo_w			pls_processo.nr_processo%type;
qt_compl_hist_w			bigint;
ds_compl_historico_ww		varchar(255);
nm_prestador_w			pls_processo_prestador.nm_prestador%type;
nr_titulo_pagar_w		titulo_pagar.nr_titulo%type;
nr_seq_proc_gru_w		pls_processo_conta.nr_seq_proc_gru%type;
nr_seq_segurado_w		pls_processo_conta.nr_seq_segurado%type;
nr_seq_prestador_w		pls_processo_conta.nr_seq_prestador%type;

c_itens_ressarcimento CURSOR FOR
	SELECT	b.nr_sequencia,
		'D',
		b.cd_conta_deb,
		coalesce(b.vl_ressarcir,pls_conta_processo_obter_valor(b.nr_sequencia)),
		trunc(a.dt_processo,'dd') dt_referencia,
		b.cd_historico,
		'PLS_PROCESSO_CONTA' nm_tabela,
		'VL_RESSARCIR' nm_atributo,
		27 nr_seq_info_ctb,
		a.nr_sequencia,
		a.cd_abi,
		a.nr_processo,
		substr( pls_obter_desc_prest_processo(b.nr_seq_prestador),1,80) nr_seq_prestador,
		b.nr_seq_proc_gru,
		b.nr_seq_segurado,
		b.nr_seq_prestador
	from	pls_processo_conta	b,
		pls_processo		a
	where	a.nr_sequencia		= b.nr_seq_processo
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	
union
	
	SELECT	b.nr_sequencia,
		'C',
		b.cd_conta_cred,
		coalesce(b.vl_ressarcir,pls_conta_processo_obter_valor(b.nr_sequencia)),
		trunc(a.dt_processo,'dd') dt_referencia,
		b.cd_historico,
		'PLS_PROCESSO_CONTA' nm_tabela,
		'VL_RESSARCIR' nm_atributo,
		27 nr_seq_info_ctb,
		a.nr_sequencia,
		a.cd_abi,
		a.nr_processo,
		substr(pls_obter_desc_prest_processo(b.nr_seq_prestador),1,80) nr_seq_prestador,
		b.nr_seq_proc_gru,
		b.nr_seq_segurado,
		b.nr_seq_prestador
	from	pls_processo_conta	b,
		pls_processo		a
	where	a.nr_sequencia		= b.nr_seq_processo
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	
union

	select	b.nr_sequencia,
		'D',
		b.cd_conta_deferido_deb,
		b.vl_deferido,
		trunc(a.dt_processo,'dd') dt_referencia,
		b.cd_historico_deferido,
		'PLS_PROCESSO_CONTA' nm_tabela,
		'VL_DEFERIDO' nm_atributo,
		28 nr_seq_info_ctb,
		a.nr_sequencia,
		a.cd_abi,
		a.nr_processo,
		substr(pls_obter_desc_prest_processo(b.nr_seq_prestador),1,80) nr_seq_prestador,
		b.nr_seq_proc_gru,
		b.nr_seq_segurado,
		b.nr_seq_prestador
	from	pls_processo_conta	b,
		pls_processo		a
	where	a.nr_sequencia		= b.nr_seq_processo
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	b.vl_deferido > 0
	
union
	
	select	b.nr_sequencia,
		'C',
		b.cd_conta_deferido_cred,
		b.vl_deferido,
		trunc(a.dt_processo,'dd') dt_referencia,
		b.cd_historico_deferido,
		'PLS_PROCESSO_CONTA' nm_tabela,
		'VL_DEFERIDO' nm_atributo,
		28 nr_seq_info_ctb,
		a.nr_sequencia,
		a.cd_abi,
		a.nr_processo,
		substr(pls_obter_desc_prest_processo(b.nr_seq_prestador),1,80) nr_seq_prestador,
		b.nr_seq_proc_gru,
		b.nr_seq_segurado,
		b.nr_seq_prestador
	from	pls_processo_conta	b,
		pls_processo		a
	where	a.nr_sequencia		= b.nr_seq_processo
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	b.vl_deferido > 0
	
union all

	select	b.nr_sequencia,
		'D',
		c.cd_conta_deb_ajuste,
		coalesce(c.vl_ajuste,0),
		trunc(d.dt_competencia,'dd') dt_referencia,
		c.cd_historico_ajuste,
		'PLS_PROCESSO_CONTAS_COMP' nm_tabela,
		'VL_AJUSTE' nm_atributo,
		27 nr_seq_info_ctb,
		a.nr_sequencia,
		a.cd_abi,
		a.nr_processo,
		substr( pls_obter_desc_prest_processo(b.nr_seq_prestador),1,80) nr_seq_prestador,
		b.nr_seq_proc_gru,
		b.nr_seq_segurado,
		b.nr_seq_prestador
	from	pls_processo_conta		b,
		pls_processo			a,
		pls_processo_contas_comp	c,
		pls_processo_competencia	d
	where	a.nr_sequencia		= b.nr_seq_processo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	c.nr_seq_competencia	= d.nr_sequencia
	and	coalesce(c.vl_ajuste, 0) 	<> 0
	and	c.ie_tipo_movimentacao 	= 'P'
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	
union all

	select	b.nr_sequencia,
		'C',
		c.cd_conta_cred_ajuste,
		coalesce(c.vl_ajuste,0),
		trunc(d.dt_competencia,'dd') dt_referencia,
		c.cd_historico_ajuste,
		'PLS_PROCESSO_CONTAS_COMP' nm_tabela,
		'VL_AJUSTE' nm_atributo,
		27 nr_seq_info_ctb,
		a.nr_sequencia,
		a.cd_abi,
		a.nr_processo,
		substr(pls_obter_desc_prest_processo(b.nr_seq_prestador),1,80) nr_seq_prestador,
		b.nr_seq_proc_gru,
		b.nr_seq_segurado,
		b.nr_seq_prestador
	from	pls_processo_conta		b,
		pls_processo			a,
		pls_processo_contas_comp	c,
		pls_processo_competencia	d
	where	a.nr_sequencia		= b.nr_seq_processo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	c.nr_seq_competencia 	= d.nr_sequencia
	and	coalesce(c.vl_ajuste, 0)	<> 0
	and	c.ie_tipo_movimentacao 	= 'P'
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	
union all

	select	b.nr_sequencia,
		'D',
		c.cd_conta_deb_prov,
		coalesce(c.vl_provisao,0),
		trunc(d.dt_competencia,'dd') dt_referencia,
		c.cd_historico_prov,
		'PLS_PROCESSO_CONTAS_COMP' nm_tabela,
		'VL_PROVISAO' nm_atributo,
		27 nr_seq_info_ctb,
		a.nr_sequencia,
		a.cd_abi,
		a.nr_processo,
		substr( pls_obter_desc_prest_processo(b.nr_seq_prestador),1,80) nr_seq_prestador,
		b.nr_seq_proc_gru,
		b.nr_seq_segurado,
		b.nr_seq_prestador
	from	pls_processo_conta		b,
		pls_processo			a,
		pls_processo_contas_comp	c,
		pls_processo_competencia	d
	where	a.nr_sequencia		= b.nr_seq_processo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	c.nr_seq_competencia	= d.nr_sequencia
	and	coalesce(c.vl_provisao, 0)	<> 0
	and	c.ie_tipo_movimentacao 	= 'P'
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	
union all

	select	b.nr_sequencia,
		'C',
		c.cd_conta_cred_prov,
		coalesce(c.vl_provisao,0),
		trunc(d.dt_competencia,'dd') dt_referencia,
		c.cd_historico_prov,
		'PLS_PROCESSO_CONTAS_COMP' nm_tabela,
		'VL_PROVISAO' nm_atributo,
		27 nr_seq_info_ctb,
		a.nr_sequencia,
		a.cd_abi,
		a.nr_processo,
		substr(pls_obter_desc_prest_processo(b.nr_seq_prestador),1,80) nr_seq_prestador,
		b.nr_seq_proc_gru,
		b.nr_seq_segurado,
		b.nr_seq_prestador
	from	pls_processo_conta	b,
		pls_processo		a,
		pls_processo_contas_comp c,
		pls_processo_competencia d
	where	a.nr_sequencia		= b.nr_seq_processo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	c.nr_seq_competencia 	= d.nr_sequencia
	and	coalesce(c.vl_provisao, 0) 	<> 0
	and	c.ie_tipo_movimentacao 	= 'P'
	and	c.nr_lote_contabil	= nr_lote_contabil_p

union all

	select	b.nr_sequencia,
		'D',
		b.cd_conta_deb_processo,
		pls_conta_processo_obter_valor(b.nr_sequencia),
		trunc(a.dt_processo,'dd') dt_referencia,
		b.cd_historico_processo,
		'PLS_PROCESSO_CONTA' nm_tabela,
		'VL_PROCESSO' nm_atributo,
		28 nr_seq_info_ctb,
		a.nr_sequencia,
		a.cd_abi,
		a.nr_processo,
		substr(pls_obter_desc_prest_processo(b.nr_seq_prestador),1,80) nr_seq_prestador,
		b.nr_seq_proc_gru,
		b.nr_seq_segurado,
		b.nr_seq_prestador
	from	pls_processo_conta	b,
		pls_processo		a
	where	a.nr_sequencia		= b.nr_seq_processo
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	pls_conta_processo_obter_valor(b.nr_sequencia) > 0
	
union all

	select	b.nr_sequencia,
		'C',
		b.cd_conta_cred_processo,
		pls_conta_processo_obter_valor(b.nr_sequencia),
		trunc(a.dt_processo,'dd') dt_referencia,
		b.cd_historico_processo,
		'PLS_PROCESSO_CONTA' nm_tabela,
		'VL_PROCESSO' nm_atributo,
		28 nr_seq_info_ctb,
		a.nr_sequencia,
		a.cd_abi,
		a.nr_processo,
		substr(pls_obter_desc_prest_processo(b.nr_seq_prestador),1,80) nr_seq_prestador,
		b.nr_seq_proc_gru,
		b.nr_seq_segurado,
		b.nr_seq_prestador
	from	pls_processo_conta	b,
		pls_processo		a
	where	a.nr_sequencia		= b.nr_seq_processo
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	pls_conta_processo_obter_valor(b.nr_sequencia) > 0;
	

BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 27) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
select	max(cd_tipo_lote_contabil)
into STRICT	cd_tipo_lote_contabil_w
from	lote_contabil
where	nr_lote_contabil	= nr_lote_contabil_p;

select	dt_referencia,
	cd_estabelecimento,
	nr_lote_contabil
into STRICT 	dt_referencia_w,
	cd_estabelecimento_w,
	nr_lote_contabil_w
from 	lote_contabil
where 	nr_lote_contabil 	= nr_lote_contabil_p;

delete	from w_pls_movimento_sem_conta
where	ie_tipo_item	= 'RS';

if (ie_exclusao_p = 'S') then
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	delete	from movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;

	update	lote_contabil
	set	vl_credito 		= 0,
		vl_debito  		= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;

	update	pls_processo
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil 	= nr_lote_contabil_p;
	
	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
elsif (ie_exclusao_p = 'N') then
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
				1,
				wheb_mensagem_pck.get_texto(1097173),
				nm_usuario_p);

	delete	FROM w_movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	dt_ref_inicial_w	:= trunc(dt_referencia_w, 'month');
	dt_ref_final_w		:= fim_dia(fim_mes(dt_ref_inicial_w));
	
	update	pls_processo a
	set	a.nr_lote_contabil 		= nr_lote_contabil_p
	where 	coalesce(a.nr_lote_contabil,0) 	= 0
	and	a.dt_processo between dt_ref_inicial_w and dt_ref_final_w;

	update	pls_processo_contas_comp a
	set	a.nr_lote_contabil 		= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contabil, 0)	= 0
	and (SELECT	b.dt_competencia
		from 	pls_processo_competencia b
		where	b.nr_sequencia = a.nr_seq_competencia) between dt_ref_inicial_w and dt_ref_final_w;
	
	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	nr_seq_w_movto_cont_w	:= 0;
	
	nm_agrupador_w		:= coalesce(trim(both obter_agrupador_contabil(27)),'NR_SEQ_PROCESSO');
	
	ds_compl_historico_w	:= null;
	
	open c_itens_ressarcimento;
	loop
	fetch c_itens_ressarcimento into
		nr_seq_processo_conta_w,
		ie_debito_credito_w,
		cd_conta_contabil_w,
		vl_contabil_w,
		dt_processo_w,
		cd_historico_w,
		nm_tabela_w,
		nm_atributo_w,
		nr_seq_info_ctb_w,
		nr_seq_processo_w,
		cd_abi_w,
		nr_processo_w,
		nm_prestador_w,
		nr_seq_proc_gru_w,
		nr_seq_segurado_w,
		nr_seq_prestador_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_ressarcimento */
		cd_centro_custo_w	:= null;
		
		select	max(substr(pls_obter_dados_proc_gru(a.nr_sequencia, 'T'), 1, 255))
		into STRICT	nr_titulo_pagar_w
		from	pls_processo_gru	a
		where	a.nr_sequencia = nr_seq_proc_gru_w;
	
		if (nm_agrupador_w = 'NR_SEQ_PROCESSO')then
			nr_seq_agrupamento_w	:=	nr_seq_processo_w;
		end if;
		
		select	count(1)
		into STRICT	qt_compl_hist_w
		from	historico_padrao_atributo
		where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
		and	cd_historico		= cd_historico_w  LIMIT 1;
		
		if (qt_compl_hist_w > 0) then			
			ds_conteudo_w	:= substr(	nr_seq_processo_w			||'#@'||
							cd_abi_w				||'#@'||
							nr_processo_w				||'#@'||
							nr_titulo_pagar_w			||'#@'||
							nm_prestador_w,1,4000);
			
			begin		
			ds_compl_historico_ww	:= obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w);
			exception
			when others then
				ds_compl_historico_ww	:= null;
			end;
			
			ds_compl_historico_w	:= substr(ds_compl_historico_ww,1,255);
		end if;
		
		if (coalesce(cd_conta_contabil_w::text, '') = '') then
			insert into w_pls_movimento_sem_conta(nr_sequencia,
				cd_item,
				ds_item,
				ie_tipo_item,
				dt_atualizacao,
				nm_usuario,
				vl_item,
				dt_referencia,
				nr_lote_contabil,
				ie_proc_mat_item,
				ie_deb_cred)
			values (nextval('w_pls_movimento_sem_conta_seq'),
				nr_seq_processo_conta_w,
				Wheb_mensagem_pck.get_texto(300683) || to_char(nr_seq_processo_conta_w),
				'R',
				clock_timestamp(),
				nm_usuario_p,
				vl_contabil_w,
				dt_processo_w,
				nr_lote_contabil_w,
				null,
				ie_debito_credito_w);
		else
			select	ie_centro_custo
			into STRICT	ie_centro_custo_w
			from	conta_contabil
			where	cd_conta_contabil	= cd_conta_contabil_w;
			
			if (ie_centro_custo_w = 'S') then
				SELECT * FROM pls_obter_centro_custo(	'D', null, cd_estabelecimento_w, '', '', '', nr_seq_segurado_w, '', cd_centro_custo_w, nr_seq_regra_cc_w, null, 			--nr_seq_tipo_lanc_p
							null, 			--nr_seq_bonificacao_p
							null, 			--nr_seq_sca_p
							nr_seq_prestador_w, nr_seq_prestador_w, nr_seq_prestador_w, nr_seq_prestador_w, null			-- nr_seq_evento_p
							) INTO STRICT cd_centro_custo_w, nr_seq_regra_cc_w;

							
			end if;
			
			nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
			
			insert into w_movimento_contabil(nr_lote_contabil,
				nr_sequencia,
				cd_conta_contabil,
				ie_debito_credito,
				cd_historico,
				dt_movimento,
				vl_movimento,
				cd_estabelecimento,
				cd_centro_custo,
				nr_seq_tab_orig,
				nr_seq_info,
				nm_tabela,
				nm_atributo,
				nr_seq_agrupamento,
				ds_compl_historico)
			values (nr_lote_contabil_p,
				nr_seq_w_movto_cont_w,
				cd_conta_contabil_w,
				ie_debito_credito_w,
				cd_historico_w,
				dt_processo_w,
				vl_contabil_w,
				cd_estabelecimento_w,
				cd_centro_custo_w,
				nr_seq_processo_conta_w,
				nr_seq_info_ctb_w,
				nm_tabela_w,
				nm_atributo_w,
				nr_seq_agrupamento_w,
				ds_compl_historico_w);
		end if;
	end loop;
	close c_itens_ressarcimento;
	
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	begin
	update	lote_contabil
	set	ie_situacao 		= 'A',
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
	where	nr_lote_contabil 	= nr_lote_contabil_p;
	
	if (ie_exclusao_p = 'S') then
		ds_retorno_p	:= Wheb_mensagem_pck.get_texto(165188);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					2,
					'',
					nm_usuario_p);
	else
		ds_retorno_p	:= Wheb_mensagem_pck.get_texto(165187);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					1,
					wheb_mensagem_pck.get_texto(1097175),
					nm_usuario_p);
	end if;
	
	commit;
	end;
else
	rollback;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_desp_ressa ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

