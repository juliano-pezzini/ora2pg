-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_insere_anamnese ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vListaAnamnese strRecTypeFormOft) AS $body$
DECLARE


nr_sequencia_w			oft_anamnese.nr_sequencia%type;
dt_anamnese_w			oft_anamnese.dt_anamnese%type;
ds_anamnese_w			oft_anamnese.ds_anamnese%type;
ds_historia_ocular_w	oft_anamnese.ds_historia_ocular%type;
ds_medicamentos_w		oft_anamnese.ds_medicamentos%type;
ds_alergia_w			oft_anamnese.ds_alergia%type;
ds_justificativa_w	oft_anamnese.ds_justificativa%type;
cd_profissional_w		oft_anamnese.cd_profissional%type;
nm_usuario_w			usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
ie_registrado_w		varchar(1) := 'N';
ds_erro_w				varchar(4000);

BEGIN
begin

if (coalesce(nr_seq_consulta_p,0) > 0) and (vListaAnamnese.count > 0) then
	for i in 1..vListaAnamnese.count loop
		begin
		if (vListaAnamnese[i](.ds_valor IS NOT NULL AND .ds_valor::text <> '')) or (vListaAnamnese[i](.nr_valor IS NOT NULL AND .nr_valor::text <> '')) then
			case upper(vListaAnamnese[i].nm_campo)
				when 'CD_PROFISSIONAL' then
					cd_profissional_w	:= vListaAnamnese[i].ds_valor;
				when 'DT_ANAMNESE' then
					dt_anamnese_w 	:= pkg_date_utils.get_DateTime(vListaAnamnese[i].ds_valor);
				when 'DS_ANAMNESE' then
					ds_anamnese_w	:= vListaAnamnese[i].ds_valor;
					ie_registrado_w:= 'S';
				when 'DS_HISTORIA_OCULAR' then
					ds_historia_ocular_w	:= vListaAnamnese[i].ds_valor;
					ie_registrado_w:= 'S';
				when 'DS_MEDICAMENTOS' then
					ds_medicamentos_w	:= vListaAnamnese[i].ds_valor;
					ie_registrado_w:= 'S';
				when 'DS_ALERGIA' then
					ds_alergia_w	:= vListaAnamnese[i].ds_valor;
					ie_registrado_w:= 'S';
				when 'DS_JUSTIFICATIVA' then
					ds_justificativa_w	:= vListaAnamnese[i].ds_valor;
					ie_registrado_w:= 'S';
				else
					null;
			end case;
		end if;
	end;
	end loop;

	select	max(nr_sequencia)
	into STRICT		nr_sequencia_w
	from		oft_anamnese
	where		nr_seq_consulta_form = nr_seq_consulta_form_p
	and		nr_seq_consulta		= nr_seq_consulta_p
	and		coalesce(dt_liberacao::text, '') = ''
	and		nm_usuario				= nm_usuario_w;

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		update	oft_anamnese
		set		dt_atualizacao			= clock_timestamp(),
					nm_usuario				= nm_usuario_w,
					cd_profissional		= coalesce(cd_profissional_w,cd_profissional),
					dt_anamnese				= coalesce(dt_anamnese_w,dt_anamnese),
					ds_anamnese				= coalesce(ds_anamnese_w,' '),
					ds_historia_ocular	= ds_historia_ocular_w,
					ds_medicamentos		= ds_medicamentos_w,
					ds_alergia				= ds_alergia_w,
					ds_justificativa		= ds_justificativa_w
		where		nr_sequencia			= nr_sequencia_w;
		CALL wheb_usuario_pck.set_ie_commit('S');
	else
		if (ie_registrado_w = 'S') then
			CALL wheb_usuario_pck.set_ie_commit('S');
			select	nextval('oft_anamnese_seq')
			into STRICT		nr_sequencia_w
			;

			insert	into oft_anamnese(	nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													dt_atualizacao_nrec,
													nm_usuario_nrec,
													nr_seq_consulta,
													dt_anamnese,
													ds_anamnese,
													cd_profissional,
													ds_historia_ocular,
													ds_medicamentos,
													ds_alergia,
													ie_situacao,
													ds_justificativa,
													nr_seq_consulta_form)
			values (	nr_sequencia_w,
													clock_timestamp(),
													nm_usuario_w,
													clock_timestamp(),
													nm_usuario_w,
													nr_seq_consulta_p,
													coalesce(dt_anamnese_w,clock_timestamp()),
													coalesce(ds_anamnese_w,' '),
													coalesce(cd_profissional_w,obter_pf_usuario(nm_usuario_w,'C')),
													ds_historia_ocular_w,
													ds_medicamentos_w,
													ds_alergia_w,
													'A',
													ds_justificativa_w,
													nr_seq_consulta_form_p);
		end if;
	end if;
end if;
exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);
	update	OFT_CONSULTA_FORMULARIO
	set		ds_stack			=	substr(dbms_utility.format_call_stack||ds_erro_w,1,4000)
	where		nr_sequencia	= 	nr_seq_consulta_form_p;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_insere_anamnese ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vListaAnamnese strRecTypeFormOft) FROM PUBLIC;

