-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_subst_item_conta_pos ( nr_seq_analise_p bigint, cd_item_p bigint, ie_tipo_p text, ie_origem_proced_p bigint, qt_item_p bigint, vl_uni_apres_p bigint, vl_total_apres_p bigint, nr_seq_conta_p bigint, nr_seq_item_subs_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_item_criado_p INOUT bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
vl_uni_apres_w			double precision;
vl_total_apres_w		double precision;
qt_item_w			double precision;
nr_seq_item_criado_w		bigint;
nr_seq_glosa_conta_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_item_w			bigint;
nr_seq_conta_w			bigint;
nr_seq_conta_pos_w		pls_conta_pos_estabelecido.nr_sequencia%type;
nr_seq_mot_w			pls_mot_lib_analise_conta.nr_sequencia%type;
ds_observacao_w			varchar(4000);

BEGIN
 
if (ie_tipo_p	= 'P') then 
	select	max(a.nr_sequencia) 
	into STRICT	nr_seq_conta_proc_w 
	from	pls_conta_proc a 
	where	a.nr_sequencia	= nr_seq_item_subs_p 
	and	a.ie_status <> 'D';
	 
	if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then 
		select	 max(nr_sequencia) 
		into STRICT	nr_seq_conta_pos_w 
		from	pls_conta_pos_estabelecido 
		where	nr_seq_conta_proc	= nr_seq_conta_proc_w 
		and	coalesce(nr_seq_disc_proc::text, '') = '' 
		and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
		if (coalesce(nr_seq_conta_proc_w::text, '') = '') then 
			select	 max(nr_sequencia) 
			into STRICT	nr_seq_conta_pos_w 
			from	pls_conta_pos_estabelecido 
			where	nr_seq_conta_proc	= nr_seq_conta_proc_w 
			and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
			 
		end if;
	end if;
	 
elsif (ie_tipo_p 	= 'M') then 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_conta_mat_w 
	from	pls_conta_mat a 
	where	a.nr_sequencia	= nr_seq_item_subs_p 
	and	a.ie_status <> 'D';
	 
	if (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_conta_pos_w 
		from	pls_conta_pos_estabelecido 
		where	nr_seq_conta_mat	= nr_seq_conta_mat_w 
		and	coalesce(nr_seq_disc_mat::text, '') = '' 
		and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
		if (coalesce(nr_seq_conta_mat_w::text, '') = '') then 
			select	max(nr_sequencia) 
			into STRICT	nr_seq_conta_pos_w 
			from	pls_conta_pos_estabelecido 
			where	nr_seq_conta_mat	= nr_seq_conta_mat_w 
			and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
		end if;
	end if;
	 
end if;
 
select	max(nr_sequencia) 
into STRICT	nr_seq_mot_w 
from	pls_mot_lib_analise_conta 
where	ie_tipo_motivo 		= 'N' 
and	ie_situacao		= 'A' 
and	coalesce(ie_analise_conta_med,'S') = 'S';
 
 
/* Inserir motivo de glosa/ ocorrência */
 
if (nr_seq_ocorrencia_p IS NOT NULL AND nr_seq_ocorrencia_p::text <> '') or (nr_seq_motivo_glosa_p IS NOT NULL AND nr_seq_motivo_glosa_p::text <> '') then 
	 
	 
	CALL pls_inserir_w_glosa_ocor(nr_seq_analise_p, nr_seq_ocorrencia_p, nr_seq_motivo_glosa_p, nr_seq_conta_pos_w, nm_usuario_p, null);
	 
	CALL pls_analise_glosar_item_pos(	nr_seq_analise_p, 
					nr_seq_conta_p, 
					nr_seq_conta_proc_w, 
					nr_seq_conta_mat_w, 
					nr_seq_conta_pos_w, 
					0, 
					nr_seq_mot_w, 
					'Glosado a partir da substituição do item', 
					cd_estabelecimento_p, 
					null, 
					'N', 
					'N', 
					nm_usuario_p);
 
end if;
 
if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then 
	nr_seq_item_w	:= nr_seq_conta_proc_w;
else 
	nr_seq_item_w	:= nr_seq_conta_mat_w;
end if;
  
nr_seq_item_criado_w := pls_substituir_item_pos(cd_item_p, ie_tipo_p, ie_origem_proced_p, qt_item_p, vl_uni_apres_p, vl_total_apres_p, nr_seq_conta_p, nr_seq_item_w, nr_seq_analise_p, nr_seq_conta_pos_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_item_criado_w);
 
ds_observacao_w :=	'Item : '||nr_seq_item_subs_p || chr(13) || chr(10) || 
			'Substituido por : ' || nr_seq_item_criado_w;
/*Inserindo histórico*/
 
CALL pls_inserir_hist_analise(nr_seq_conta_p, nr_seq_analise_p, 33, null, null, null, null,ds_observacao_w, null, nm_usuario_p,cd_estabelecimento_p);
 
 
nr_seq_item_criado_p	:= nr_seq_item_criado_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_subst_item_conta_pos ( nr_seq_analise_p bigint, cd_item_p bigint, ie_tipo_p text, ie_origem_proced_p bigint, qt_item_p bigint, vl_uni_apres_p bigint, vl_total_apres_p bigint, nr_seq_conta_p bigint, nr_seq_item_subs_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_item_criado_p INOUT bigint) FROM PUBLIC;

