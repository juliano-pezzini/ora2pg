-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_limites_sv_atend ( nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
qt_idade_pf_w		double precision;
qt_idade_dia_w		double precision;
nr_sequencia_sv_w		bigint;
vl_minimo_aviso_sv_w	double precision;
vl_maximo_aviso_sv_w	double precision;
vl_minimo_permitido_sv_w	double precision;
vl_maximo_permitido_sv_w	double precision;
vl_minimo_aviso_sv_ww	double precision;
vl_maximo_aviso_sv_ww	double precision;
vl_minimo_permitido_sv_ww	double precision;
vl_maximo_permitido_sv_ww	double precision;
nr_sequencia_w		bigint;
cd_perfil_w		sinal_vital_regra.cd_perfil%type;
ie_regra_w				varchar(1);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	coalesce(a.qt_min_aviso,0),
	coalesce(a.qt_max_aviso,0),
	coalesce(a.qt_minimo,0),
	coalesce(a.vl_maximo,0)
from	sinal_vital a
order by
	a.nr_sequencia;

c02 CURSOR FOR
SELECT	coalesce(b.qt_min_aviso,0),
	coalesce(b.qt_max_aviso,0),
	coalesce(b.qt_minimo,0),
	coalesce(b.vl_maximo,0)
from	sinal_vital_regra b
where	b.nr_seq_sinal = nr_sequencia_sv_w
and	((qt_idade_pf_w between coalesce(b.qt_idade_min,qt_idade_pf_w) and coalesce(b.qt_idade_max,qt_idade_pf_w)) or (qt_idade_dia_w between b.qt_idade_min_dias and b.qt_idade_max_dias))
and	coalesce(b.cd_perfil, cd_perfil_w) = cd_perfil_w
order by
	b.nr_sequencia;
	

BEGIN

cd_perfil_w	:= coalesce(obter_perfil_ativo,0);

if (coalesce(nr_atendimento_p,0) 	> 0) then
	begin
	
	Select  coalesce(max('S'),'N')
	into STRICT	ie_regra_w
	from 	w_limites_sv_atend
	where 	nr_atendimento = nr_atendimento_p
	and		cd_perfil = cd_perfil_w;
	
	if ( ie_regra_w = 'N') then
	
		delete
		from	w_limites_sv_atend
		where	nr_atendimento = nr_atendimento_p;
		begin
		select	obter_idade_pf(b.cd_pessoa_fisica, coalesce(b.dt_obito,clock_timestamp()), 'A')
		into STRICT	qt_idade_pf_w
		from	pessoa_fisica b,
			atendimento_paciente a
		where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
		and	a.nr_atendimento	= nr_atendimento_p;
		
		select	obter_idade(dt_nascimento,clock_timestamp(),'DIA')
		into STRICT	qt_idade_dia_w
		from	pessoa_fisica b,
			atendimento_paciente a
		where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
		and	a.nr_atendimento	= nr_atendimento_p;
		exception
			when no_data_found then
			null;
			end;

		open c01;
		loop
		fetch c01 into	nr_sequencia_sv_w,
				vl_minimo_aviso_sv_w,
				vl_maximo_aviso_sv_w,
				vl_minimo_permitido_sv_w,
				vl_maximo_permitido_sv_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			
			open c02;
			loop
			fetch c02 into	vl_minimo_aviso_sv_ww,
					vl_maximo_aviso_sv_ww,
					vl_minimo_permitido_sv_ww,
					vl_maximo_permitido_sv_ww;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				vl_minimo_aviso_sv_w	:= vl_minimo_aviso_sv_ww;
				vl_maximo_aviso_sv_w	:= vl_maximo_aviso_sv_ww;
				vl_minimo_permitido_sv_w	:= vl_minimo_permitido_sv_ww;
				vl_maximo_permitido_sv_w	:= vl_maximo_permitido_sv_ww;
				end;
			end loop;
			close c02;
			
			select	nextval('w_limites_sv_atend_seq')
			into STRICT	nr_sequencia_w
			;
			
			insert into w_limites_sv_atend(
				nr_sequencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_atualizacao,
				nm_usuario,
				nr_atendimento,
				nr_seq_sinal_vital,
				vl_minimo_aviso,
				vl_maximo_aviso,
				vl_minimo_permitido,
				vl_maximo_permitido,
				cd_perfil)
			values (
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,			
				nr_atendimento_p,
				nr_sequencia_sv_w,
				vl_minimo_aviso_sv_w,
				vl_maximo_aviso_sv_w,
				vl_minimo_permitido_sv_w,
				vl_maximo_permitido_sv_w,
				cd_perfil_w);
				
			end;
		end loop;
		close c01;
		
	end if;
	
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_limites_sv_atend ( nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

