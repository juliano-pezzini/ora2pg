-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE conciliar_ext_cartao_cr_regra (nr_seq_extrato_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_extrato_movto_w		bigint;
nr_seq_parcela_w		bigint;
nr_seq_extrato_parcela_w	bigint;
ie_concil_w			varchar(1);
ie_pagto_indevido_w		varchar(1);
cd_estabelecimento_w		bigint;
vl_parcela_tasy_w		double precision;
vl_min_indevido_w		double precision;
vl_max_indevido_w		double precision;
vl_saldo_concil_cred_w		double precision;
ie_pagamento_indev_w		varchar(1);
vl_ajuste_w			double precision;
ie_parcela_w			varchar(1);
ie_cv_repetido_w		varchar(1);
nr_seq_bandeira_w		bigint;
ds_lista_parcela_w		varchar(255);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	CASE WHEN coalesce(a.nr_seq_extrato_parcela::text, '') = '' THEN 'N'  ELSE 'S' END ,
	a.vl_saldo_concil_cred
from	extrato_cartao_cr_movto a
where	a.nr_seq_extrato	= nr_seq_extrato_p;

c02 CURSOR FOR
SELECT	coalesce(a.nr_sequencia,0),
	a.vl_parcela
from	movto_cartao_cr_parcela a,
	movto_cartao_cr b
where	substr(obter_se_contido(a.nr_sequencia,ds_lista_parcela_w),1,1) = 'S'
and	a.vl_saldo_liquido		<> 0
and	coalesce(a.nr_seq_extrato_parcela::text, '') = ''
and	b.nr_sequencia			= a.nr_seq_movto
and	coalesce(b.dt_cancelamento::text, '') = ''
and	b.nr_seq_bandeira		= nr_seq_bandeira_w;


BEGIN

select	max(a.cd_estabelecimento),
	max(a.nr_seq_bandeira)
into STRICT	cd_estabelecimento_w,
	nr_seq_bandeira_w
from	extrato_cartao_cr a
where	a.nr_sequencia	= nr_seq_extrato_p;

ie_pagto_indevido_w := obter_param_usuario(3020, 44, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_pagto_indevido_w);
ie_cv_repetido_w := obter_param_usuario(3020, 46, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cv_repetido_w);

open	c01;
loop
fetch	c01 into
	nr_seq_extrato_movto_w,
	ie_concil_w,
	vl_saldo_concil_cred_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	/* Conciliar */

	if (ie_opcao_p = 'C') and (ie_concil_w = 'N') then

		SELECT * FROM obter_parcela_regra_cartao(	nr_seq_extrato_movto_w, null, ie_pagto_indevido_w, ie_cv_repetido_w, nm_usuario_p, ie_parcela_w, vl_min_indevido_w, vl_max_indevido_w, ds_lista_parcela_w) INTO STRICT ie_parcela_w, vl_min_indevido_w, vl_max_indevido_w, ds_lista_parcela_w;

		if (coalesce(ie_parcela_w,'N')	= 'S') then

			select	nextval('extrato_cartao_cr_parcela_seq')
			into STRICT	nr_seq_extrato_parcela_w
			;

			insert	into extrato_cartao_cr_parcela(nr_sequencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_atualizacao,
				nm_usuario,
				nr_seq_extrato)
			values (nr_seq_extrato_parcela_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_extrato_p);

			open	c02;
			loop
			fetch	c02 into
				nr_seq_parcela_w,
				vl_parcela_tasy_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */

				vl_saldo_concil_cred_w	:= coalesce(vl_saldo_concil_cred_w,0) - coalesce(vl_parcela_tasy_w,0);
				ie_pagamento_indev_w	:= null;
				vl_ajuste_w		:= 0;

				if (vl_saldo_concil_cred_w >= coalesce(vl_min_indevido_w,0)) and (vl_saldo_concil_cred_w <= coalesce(vl_max_indevido_w,0)) then

					vl_ajuste_w		:= vl_saldo_concil_cred_w;
					vl_saldo_concil_cred_w	:= 0;
					ie_pagamento_indev_w	:= 'N';

				elsif (coalesce(ie_pagto_indevido_w,'N') = 'S') then

					if (coalesce(vl_saldo_concil_cred_w,0)	= 0) then

						ie_pagamento_indev_w	:= 'N';

					else

						ie_pagamento_indev_w	:= 'S';

					end if;

				end if;

				update	extrato_cartao_cr_movto
				set	nr_seq_extrato_parcela	= nr_seq_extrato_parcela_w,
					vl_saldo_concil_cred	= vl_saldo_concil_cred_w,
					ie_pagto_indevido	= coalesce(ie_pagamento_indev_w,ie_pagto_indevido),
					vl_ajuste		= vl_ajuste_w
				where	nr_sequencia		= nr_seq_extrato_movto_w;

				update	movto_cartao_cr_parcela
				set	nr_seq_extrato_parcela	= nr_seq_extrato_parcela_w
				where	nr_sequencia		= nr_seq_parcela_w;

			end	loop;
			close	c02;

		end if;

	/* Desconciliar tudo */

	elsif (ie_opcao_p = 'D') then

		update	extrato_cartao_cr_movto
		set	ie_pagto_indevido	= 'N'
		where	nr_seq_extrato_parcela	= nr_seq_extrato_movto_w;

		if (ie_concil_w = 'S') then

			select	max(nr_seq_extrato_parcela)
			into STRICT	nr_seq_extrato_parcela_w
			from	extrato_cartao_cr_movto
			where	nr_sequencia	= nr_seq_extrato_movto_w;

			if (nr_seq_extrato_parcela_w IS NOT NULL AND nr_seq_extrato_parcela_w::text <> '') then

				update	movto_cartao_cr_parcela
				set	nr_seq_extrato_parcela	 = NULL
				where	nr_seq_extrato_parcela	= nr_seq_extrato_parcela_w;

				update	extrato_cartao_cr_movto
				set	nr_seq_extrato_parcela	 = NULL,
					vl_saldo_concil_cred	= vl_parcela,
					ie_pagto_indevido	= CASE WHEN coalesce(ie_pagto_indevido_w,'N')='S' THEN 'N'  ELSE ie_pagto_indevido END ,
					vl_ajuste		= 0
				where	nr_seq_extrato_parcela	= nr_seq_extrato_parcela_w;

				delete	from extrato_cartao_cr_parcela
				where	nr_sequencia	= nr_seq_extrato_parcela_w;

			end if;
		end if;
	end if;

end loop;
close c01;

/* Forçar desconciliação */

if (ie_opcao_p = 'D') then
	delete	from	extrato_cartao_cr_parcela
	where	nr_seq_extrato	= nr_seq_extrato_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE conciliar_ext_cartao_cr_regra (nr_seq_extrato_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

