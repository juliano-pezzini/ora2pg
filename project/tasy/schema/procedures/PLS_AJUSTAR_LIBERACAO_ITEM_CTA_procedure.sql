-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajustar_liberacao_item_cta ( nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, nm_usuario_p text) AS $body$
DECLARE




ie_status_w			varchar(3);
ie_valor_base_w			varchar(3);
vl_unitario_apres_w		double precision	:= null;
vl_apresentado_w		double precision;
vl_calculado_w			double precision;
vl_unitario_calc_w		double precision	:= null;
vl_calculado_hi_w		double precision;
vl_calculado_co_w		double precision;
vl_calculado_mat_w		double precision;
vl_unitario_hi_w		double precision;
vl_unitario_co_w		double precision;
vl_unitario_mat_w		double precision;
qt_apresentada_w		double precision;
qt_liberada_w			double precision;

ie_glosa_w			varchar(1);
vl_liberado_w			double precision;
vl_glosa_w			double precision;
vl_liberado_hi_w		double precision;
vl_liberado_co_w		double precision;
vl_liberado_mat_w		double precision;
vl_glosa_hi_w			double precision;
vl_glosa_co_w			double precision;
vl_glosa_mat_w			double precision;

vl_taxa_hi_apres_w		double precision;
vl_taxa_hi_uni_apres_w		double precision;
vl_taxa_co_apres_w		double precision;
vl_taxa_co_uni_apres_w		double precision;
vl_taxa_mat_apres_w		double precision;
vl_taxa_mat_uni_apres_w		double precision;
vl_taxa_hi_calc_w		double precision;
vl_taxa_hi_uni_calc_w		double precision;
vl_taxa_co_calc_w		double precision;
vl_taxa_co_uni_calc_w		double precision;
vl_taxa_mat_calc_w		double precision;
vl_taxa_mat_uni_calc_w		double precision;
vl_lib_taxa_hi_w		double precision;
vl_lib_taxa_co_w		double precision;
vl_lib_taxa_mat_w		double precision;
vl_glosa_taxa_hi_w		double precision;
vl_glosa_taxa_co_w		double precision;
vl_glosa_taxa_mat_w		double precision;
tx_intercambio_apres_w		double precision;
tx_intercambio_calc_w		double precision;
vl_procedimento_ptu_imp_w	double precision;
vl_material_ptu_imp_w		double precision;
vl_co_ptu_imp_w			double precision;
nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
vl_tot_partic_w			pls_proc_participante.vl_participante%type;
vl_dif_partic_w			pls_proc_participante.vl_participante%type;
vl_pag_medico_conta_w		pls_conta_proc.vl_pag_medico_conta%type;
vl_medico_original_w		pls_conta_proc.vl_medico_original%type;
qt_glosa_w			integer;
nr_seq_conta_w			pls_conta_proc.nr_seq_conta%type;
ie_origem_conta_w		pls_conta.ie_origem_conta%type;

BEGIN

if (nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '') then
	select	b.ie_status,
		b.ie_valor_base,
		coalesce(a.vl_digitado_complemento, a.vl_apresentado),
		b.vl_procedimento,
		b.qt_procedimento_imp,
		a.qt_liberada,
		coalesce(a.ie_glosa,'N'),
		b.nr_sequencia,
		b.vl_liberado,
		b.vl_medico_original,
		c.ie_origem_conta
	into STRICT	ie_status_w,
		ie_valor_base_w,
		vl_apresentado_w,
		vl_calculado_w,
		qt_apresentada_w,
		qt_liberada_w,
		ie_glosa_w,
		nr_seq_conta_proc_w,
		vl_liberado_w,
		vl_medico_original_w,
		ie_origem_conta_w
	from	pls_conta	c,
		pls_conta_proc 	b,
		pls_proc_participante a
	where	a.nr_seq_conta_proc	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_proc_partic_p
	and	c.nr_sequencia		= b.nr_seq_conta;
	
	
	if (ie_status_w in ('L', 'S')) and (ie_glosa_w = 'N') then

		update	pls_proc_participante
		set	vl_participante		= dividir(( vl_liberado_w * vl_calculado),vl_calculado_w)
		where	nr_sequencia		= nr_seq_proc_partic_p
		and	((coalesce(ie_status::text, '') = '') or (ie_status != 'C'))
		and 	((coalesce(ie_gerada_cta_honorario::text, '') = '') or (ie_gerada_cta_honorario != 'S'));

	end if;
elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
	select	a.ie_status,
		a.ie_valor_base,
		a.vl_unitario_imp,
		a.vl_procedimento_imp,
		a.vl_proc_unitario,
		a.vl_procedimento,
		a.vl_calc_hi_util,
		a.vl_calc_co_util,
		a.vl_calc_mat_util,
		a.qt_procedimento_imp,
		a.qt_procedimento,
		a.tx_intercambio_imp,
		a.tx_intercambio,
		coalesce(a.ie_glosa, 'N'),
		coalesce(vl_procedimento_ptu_imp,0),
		coalesce(vl_material_ptu_imp,0),
		coalesce(vl_co_ptu_imp,0),
		a.vl_medico_original,
		a.vl_liberado,
		a.nr_seq_conta,
		c.ie_origem_conta
	into STRICT	ie_status_w,
		ie_valor_base_w,
		vl_unitario_apres_w,
		vl_apresentado_w,
		vl_unitario_calc_w,
		vl_calculado_w,
		vl_calculado_hi_w,
		vl_calculado_co_w,
		vl_calculado_mat_w,
		qt_apresentada_w,
		qt_liberada_w,
		tx_intercambio_apres_w,
		tx_intercambio_calc_w,
		ie_glosa_w,
		vl_procedimento_ptu_imp_w,
		vl_material_ptu_imp_w,
		vl_co_ptu_imp_w,
		vl_medico_original_w,
		vl_liberado_w,
		nr_seq_conta_w,
		ie_origem_conta_w
	from	pls_conta_proc 	a,
		pls_conta	c
	where	a.nr_sequencia	= nr_seq_conta_proc_p
	and	c.nr_sequencia	= a.nr_seq_conta;

	select	count(1)
	into STRICT	qt_glosa_w
	from	pls_conta_glosa
	where	nr_seq_conta_proc	= nr_seq_conta_proc_p
	and	ie_situacao		= 'A';
	
	if (ie_status_w in ('L', 'S')) then
		
		if (ie_valor_base_w  = '1') or
			(vl_liberado_w = vl_apresentado_w AND vl_liberado_w > 0) or
			((coalesce(ie_valor_base_w::text, '') = '') and (vl_apresentado_w > 0 ) and (vl_calculado_w	  = 0))	or
			((vl_apresentado_w > 0 ) and (qt_glosa_w = 0) and (vl_apresentado_w > vl_calculado_w)) then
			
			if (vl_apresentado_w IS NOT NULL AND vl_apresentado_w::text <> '') then
				vl_unitario_apres_w	:= dividir_sem_round(vl_apresentado_w,qt_apresentada_w);
			end if;
			
			if	(vl_calculado_hi_w > vl_procedimento_ptu_imp_w  AND vl_procedimento_ptu_imp_w > 0)	or (ie_origem_conta_w	= 'A')then
				vl_unitario_hi_w	:= dividir_sem_round(vl_procedimento_ptu_imp_w, qt_apresentada_w);
			else
				vl_unitario_hi_w	:= dividir_sem_round(vl_calculado_hi_w, qt_apresentada_w);
			end if;
			
			if	(vl_calculado_co_w > vl_co_ptu_imp_w AND vl_co_ptu_imp_w > 0) or (ie_origem_conta_w	= 'A')	then
				vl_unitario_co_w	:= dividir_sem_round(vl_co_ptu_imp_w, qt_apresentada_w);
			else
				vl_unitario_co_w	:= dividir_sem_round(vl_calculado_co_w, qt_apresentada_w);
			end if;
			
			if	(vl_calculado_mat_w > vl_material_ptu_imp_w AND vl_material_ptu_imp_w > 0) or (ie_origem_conta_w 	= 'A') then
				vl_unitario_mat_w	:= dividir_sem_round(vl_material_ptu_imp_w, qt_apresentada_w);
			else
				vl_unitario_mat_w	:= dividir_sem_round(vl_calculado_mat_w, qt_apresentada_w);
			end if;

			vl_liberado_w		:= vl_unitario_apres_w * qt_liberada_w;
			vl_glosa_w		:= vl_apresentado_w - vl_liberado_w;
			vl_liberado_hi_w	:= vl_unitario_hi_w * qt_liberada_w;
			vl_liberado_co_w	:= vl_unitario_co_w * qt_liberada_w;
			vl_liberado_mat_w	:= vl_unitario_mat_w * qt_liberada_w;
			
			vl_glosa_hi_w		:= 0;
			vl_glosa_co_w		:= 0;
			vl_glosa_mat_w		:= 0;
			vl_pag_medico_conta_w	:= dividir((vl_medico_original_w * vl_liberado_w),vl_calculado_w);
			
			if (qt_apresentada_w != qt_liberada_w) then
				if (vl_calculado_hi_w > vl_procedimento_ptu_imp_w )and (vl_procedimento_ptu_imp_w > 0)	then
					vl_glosa_hi_w		:= vl_procedimento_ptu_imp_w - vl_liberado_hi_w;
				else
					vl_glosa_hi_w		:= vl_calculado_hi_w - vl_liberado_hi_w;
				end if;
				
				if (vl_calculado_co_w > vl_co_ptu_imp_w) and (vl_co_ptu_imp_w > 0)	then
					vl_glosa_co_w		:= vl_co_ptu_imp_w - vl_liberado_co_w;
				else
					vl_glosa_co_w		:= vl_calculado_co_w - vl_liberado_co_w;
				end if;
				
				if (vl_calculado_mat_w > vl_material_ptu_imp_w) and (vl_material_ptu_imp_w > 0)	then
					vl_glosa_mat_w		:= vl_material_ptu_imp_w - vl_liberado_mat_w;
				else
					vl_glosa_mat_w		:= vl_calculado_mat_w - vl_liberado_mat_w;
				end if;
			end if;
		else
			if (coalesce(vl_unitario_calc_w::text, '') = '') or (vl_unitario_calc_w = 0) then
				vl_unitario_calc_w	:= dividir_sem_round(vl_calculado_w, qt_apresentada_w);
			end if;
			
			if (vl_calculado_hi_w > vl_procedimento_ptu_imp_w )and (vl_procedimento_ptu_imp_w > 0)	then
				vl_unitario_hi_w	:= dividir_sem_round(vl_procedimento_ptu_imp_w, qt_apresentada_w);
			else
				vl_unitario_hi_w	:= dividir_sem_round(vl_calculado_hi_w, qt_apresentada_w);
			end if;
			
			if (vl_calculado_co_w > vl_co_ptu_imp_w) and (vl_co_ptu_imp_w > 0)	then
				vl_unitario_co_w	:= dividir_sem_round(vl_co_ptu_imp_w, qt_apresentada_w);
			else
				vl_unitario_co_w	:= dividir_sem_round(vl_calculado_co_w, qt_apresentada_w);
			end if;
			
			if (vl_calculado_mat_w > vl_material_ptu_imp_w) and (vl_material_ptu_imp_w > 0)	then
				vl_unitario_mat_w	:= dividir_sem_round(vl_material_ptu_imp_w, qt_apresentada_w);
			else
				vl_unitario_mat_w	:= dividir_sem_round(vl_calculado_mat_w, qt_apresentada_w);
			end if;
	
			vl_liberado_w		:= vl_unitario_calc_w * qt_liberada_w;
			vl_glosa_w		:= vl_apresentado_w - vl_liberado_w;
			vl_liberado_hi_w	:= vl_unitario_hi_w * qt_liberada_w;
			vl_liberado_co_w	:= vl_unitario_co_w * qt_liberada_w;
			vl_liberado_mat_w	:= vl_unitario_mat_w * qt_liberada_w;
			vl_glosa_hi_w		:= vl_calculado_hi_w - vl_liberado_hi_w;
			vl_glosa_co_w		:= vl_calculado_co_w - vl_liberado_co_w;
			vl_glosa_mat_w		:= vl_calculado_mat_w - vl_liberado_mat_w;
			
			vl_pag_medico_conta_w	:= dividir((vl_medico_original_w * vl_liberado_w),vl_calculado_w);			
		end if;
	
		if (vl_glosa_w < 0) then
			vl_glosa_w := 0;
		end if;
		
		if (vl_glosa_hi_w < 0) then
			vl_glosa_hi_w	:= 0;
		end if;
		
		if (vl_glosa_co_w < 0) then
			vl_glosa_co_w	:= 0;
		end if;
		
		if (vl_glosa_mat_w < 0) then
			vl_glosa_mat_w	:= 0;
		end if;
				
		update	pls_conta_proc
		set	vl_liberado		= vl_liberado_w,
			vl_glosa		= vl_glosa_w,
			vl_liberado_hi		= vl_liberado_hi_w,
			vl_liberado_co		= vl_liberado_co_w,
			vl_liberado_material	= vl_liberado_mat_w,
			vl_glosa_hi		= vl_glosa_hi_w,
			vl_glosa_co		= vl_glosa_co_w,
			vl_glosa_material	= vl_glosa_mat_w,
			vl_unitario		= dividir(vl_liberado_w, qt_procedimento),
			vl_prestador		= vl_liberado_w,
			vl_medico		= vl_liberado_hi_w,
			vl_pag_medico_conta	= vl_pag_medico_conta_w
		where	nr_sequencia		= nr_seq_conta_proc_p;
		
		
		if (tx_intercambio_apres_w > 0) or (tx_intercambio_calc_w > 0) then
			select	a.vl_taxa_servico_imp,
				a.vl_taxa_servico,
				a.vl_taxa_co_imp,
				a.vl_taxa_co,
				a.vl_taxa_material_imp,
				a.vl_taxa_material
			into STRICT	vl_taxa_hi_apres_w,
				vl_taxa_hi_calc_w,
				vl_taxa_co_apres_w,
				vl_taxa_co_calc_w,
				vl_taxa_mat_apres_w,
				vl_taxa_mat_calc_w
			from	pls_conta_proc a
			where	a.nr_sequencia	= nr_seq_conta_proc_p;
			
			if (ie_valor_base_w = '1') then
				vl_taxa_hi_uni_apres_w	:= dividir_sem_round(vl_taxa_hi_apres_w, qt_apresentada_w);
				vl_taxa_co_uni_apres_w	:= dividir_sem_round(vl_taxa_co_apres_w, qt_apresentada_w);
				vl_taxa_mat_uni_apres_w	:= dividir_sem_round(vl_taxa_mat_apres_w, qt_apresentada_w);
				
				vl_lib_taxa_hi_w	:= vl_taxa_hi_uni_apres_w * qt_liberada_w;
				vl_lib_taxa_co_w	:= vl_taxa_co_uni_apres_w * qt_liberada_w;
				vl_lib_taxa_mat_w	:= vl_taxa_mat_uni_apres_w * qt_liberada_w;
				vl_glosa_taxa_hi_w	:= 0;
				vl_glosa_taxa_co_w	:= 0;
				vl_glosa_taxa_mat_w	:= 0;
			else
				if (vl_taxa_hi_calc_w > vl_taxa_hi_apres_w) then
					vl_taxa_hi_uni_calc_w	:= dividir_sem_round(vl_taxa_hi_apres_w, qt_apresentada_w);
				else
					vl_taxa_hi_uni_calc_w	:= dividir_sem_round(vl_taxa_hi_calc_w, qt_apresentada_w);
				end if;
				
				if (vl_taxa_co_calc_w > vl_taxa_co_apres_w) then
					vl_taxa_co_uni_calc_w	:= dividir_sem_round(vl_taxa_co_apres_w, qt_apresentada_w);
				else
					vl_taxa_co_uni_calc_w	:= dividir_sem_round(vl_taxa_co_calc_w, qt_apresentada_w);
				end if;
				
				if (vl_taxa_mat_calc_w > vl_taxa_mat_apres_w) then
					vl_taxa_mat_uni_calc_w	:= dividir_sem_round(vl_taxa_mat_apres_w, qt_apresentada_w);
				else
					vl_taxa_mat_uni_calc_w	:= dividir_sem_round(vl_taxa_mat_calc_w, qt_apresentada_w);
				end if;
				
				vl_lib_taxa_hi_w	:= vl_taxa_hi_uni_calc_w * qt_liberada_w;
				vl_lib_taxa_co_w	:= vl_taxa_co_uni_calc_w * qt_liberada_w;
				vl_lib_taxa_mat_w	:= vl_taxa_mat_uni_calc_w * qt_liberada_w;
				vl_glosa_taxa_hi_w	:= vl_taxa_hi_calc_w - vl_lib_taxa_hi_w;
				vl_glosa_taxa_co_w	:= vl_taxa_co_calc_w - vl_lib_taxa_co_w;
				vl_glosa_taxa_mat_w	:= vl_taxa_mat_calc_w - vl_lib_taxa_mat_w;
				
				if (vl_glosa_taxa_hi_w < 0) then
					vl_glosa_taxa_hi_w	:= 0;
				end if;
				
				if (vl_glosa_taxa_co_w < 0) then
					vl_glosa_taxa_co_w	:= 0;
				end if;
				
				if (vl_glosa_taxa_mat_w < 0) then
					vl_glosa_taxa_mat_w	:= 0;
				end if;
			end if;
			
			update	pls_conta_proc
			set	vl_lib_taxa_servico	= vl_lib_taxa_hi_w,
				vl_lib_taxa_co		= vl_lib_taxa_co_w,
				vl_lib_taxa_material	= vl_lib_taxa_mat_w,
				vl_glosa_taxa_servico	= vl_glosa_taxa_hi_w,
				vl_glosa_taxa_co	= vl_glosa_taxa_co_w,
				vl_glosa_taxa_material	= vl_glosa_taxa_mat_w
			where	nr_sequencia		= nr_seq_conta_proc_p;
		end if;
	end if;
elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
	select	a.ie_status,
		a.ie_valor_base,
		a.vl_unitario_imp,
		a.vl_material_imp,
		a.vl_material,
		a.qt_material_imp,
		a.qt_material,
		a.tx_intercambio_imp,
		a.tx_intercambio,
		coalesce(a.ie_glosa, 'N')
	into STRICT	ie_status_w,
		ie_valor_base_w,
		vl_unitario_apres_w,
		vl_apresentado_w,
		vl_calculado_w,
		qt_apresentada_w,
		qt_liberada_w,
		tx_intercambio_apres_w,
		tx_intercambio_calc_w,
		ie_glosa_w
	from	pls_conta_mat a
	where	a.nr_sequencia	= nr_seq_conta_mat_p;
	
	
	if (ie_status_w in ('L', 'S'))  then
		
		select	count(1)
		into STRICT	qt_glosa_w
		from	pls_conta_glosa
		where	nr_seq_conta_mat	= nr_seq_conta_mat_p
		and	ie_situacao		= 'A';
		
		if (ie_valor_base_w  = '1') or
			(vl_liberado_w = vl_apresentado_w AND vl_liberado_w > 0) or
			((coalesce(ie_valor_base_w::text, '') = '') and (vl_apresentado_w > 0 ) and (vl_calculado_w = 0)) or
			((vl_apresentado_w > 0 ) and (qt_glosa_w = 0) and (vl_apresentado_w > vl_calculado_w)) then
			if (vl_apresentado_w IS NOT NULL AND vl_apresentado_w::text <> '') then
				vl_unitario_apres_w	:= dividir_sem_round(vl_apresentado_w,qt_apresentada_w);
			end if;
		
			vl_liberado_w		:= vl_unitario_apres_w * qt_liberada_w;
			vl_glosa_w		:= vl_apresentado_w - vl_liberado_w;
		else
			if (coalesce(vl_unitario_calc_w::text, '') = '') then
				vl_unitario_calc_w	:= dividir_sem_round(vl_calculado_w,qt_apresentada_w);
			end if;
		
			vl_liberado_w		:= vl_unitario_calc_w * qt_liberada_w;
			vl_glosa_w		:= vl_apresentado_w - vl_liberado_w;
		end if;
		
		if (vl_glosa_w < 0) then
			vl_glosa_w := 0;
		end if;
	
		update	pls_conta_mat
		set	vl_liberado	= vl_liberado_w,
			vl_glosa	= vl_glosa_w
		where	nr_sequencia	= nr_seq_conta_mat_p;
		
		
		if (tx_intercambio_apres_w > 0) or (tx_intercambio_calc_w > 0) then
			select	a.vl_taxa_material_imp,
				a.vl_taxa_material
			into STRICT	vl_taxa_mat_apres_w,
				vl_taxa_mat_calc_w
			from	pls_conta_mat a
			where	a.nr_sequencia	= nr_seq_conta_mat_p;
			
			if (ie_valor_base_w = '1') then
				vl_taxa_mat_uni_apres_w	:= dividir_sem_round(vl_taxa_mat_apres_w,qt_apresentada_w);
				
				vl_lib_taxa_mat_w	:= vl_taxa_mat_uni_apres_w * qt_liberada_w;
				vl_glosa_taxa_mat_w	:= 0;
			else
				vl_taxa_mat_uni_calc_w	:= dividir_sem_round(vl_taxa_mat_calc_w,qt_apresentada_w);
				
				vl_lib_taxa_mat_w	:= vl_taxa_mat_uni_calc_w * qt_liberada_w;
				vl_glosa_taxa_mat_w	:= vl_taxa_mat_calc_w - vl_lib_taxa_mat_w;
				
				if (vl_glosa_taxa_mat_w < 0) then
					vl_glosa_taxa_mat_w := 0;
				end if;
			end if;
			
			update	pls_conta_mat
			set	vl_lib_taxa_material	= vl_lib_taxa_mat_w,
				vl_glosa_taxa_material	= vl_glosa_taxa_mat_w
			where	nr_sequencia		= nr_seq_conta_mat_p;
		end if;
	end if;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajustar_liberacao_item_cta ( nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, nm_usuario_p text) FROM PUBLIC;

