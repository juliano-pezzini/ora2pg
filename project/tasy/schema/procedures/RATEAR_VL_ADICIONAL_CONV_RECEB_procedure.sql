-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ratear_vl_adicional_conv_receb (nr_seq_retorno_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_titulo_w			bigint;
nr_seq_ret_item_w		bigint;
vl_adicional_w			double precision	:= 0;	/* valor que será rateado */
vl_cambial_ativo_w		double precision	:= 0;
vl_cambial_passivo_w		double precision	:= 0;
vl_guia_w			double precision	:= 0;	/* valor base do rateio. O rateio será proporcional a este valor */
vl_total_w			double precision	:= 0;	/* valor total das guias do título pertencentes ao retorno */
vl_juros_w			double precision	:= 0;	/* resultado do rateio de juros para cada guia */
vl_total_juros_w		double precision	:= 0;	/* soma dos rateios de juros, para o cálculo da sobra no final */
vl_cambial_ativo_item_w		double precision	:= 0;
vl_total_ativo_w		double precision	:= 0;
vl_cambial_passivo_item_w	double precision	:= 0;
vl_total_passivo_w		double precision	:= 0;
cd_estabelecimento_w		smallint;
ie_ratear_sem_titulo_w		varchar(1);

/* valor adicional de cada título, à ser rateado para as guias do retorno */
 
c01 CURSOR FOR 
SELECT	coalesce(a.nr_titulo,0), 
	coalesce(sum(a.vl_adicional),0), 
	coalesce(sum(a.vl_cambial_ativo),0), 
	coalesce(sum(a.vl_cambial_passivo),0) 
from	convenio_receb_adic a, 
	convenio_ret_receb b 
where	b.nr_seq_retorno	= nr_seq_retorno_p 
and	b.nr_seq_receb		= a.nr_seq_receb 
and (coalesce(ie_ratear_sem_titulo_w,'N') = 'S' or (a.nr_titulo IS NOT NULL AND a.nr_titulo::text <> '')) 
group by	a.nr_titulo;

/* guias do título que estão no retorno, ordenada para adicionar a sobra na guia com o maior valor */
 
c02 CURSOR FOR 
SELECT	b.nr_sequencia, 
	coalesce(c.vl_guia,0) 
from	conta_paciente_guia c, 
	convenio_retorno_item b, 
	convenio_retorno a 
where	a.nr_sequencia		= nr_seq_retorno_p 
and	a.nr_sequencia		= b.nr_seq_retorno 
and (nr_titulo_w = 0 or nr_titulo_w = coalesce(b.nr_titulo,(obter_titulo_conta_guia(b.nr_interno_conta,b.cd_autorizacao,a.nr_sequencia,a.nr_seq_protocolo))::numeric )) 
and	b.nr_interno_conta	= c.nr_interno_conta 
and	b.cd_autorizacao	= c.cd_autorizacao 
order by	2;


BEGIN 
 
select	max(a.cd_estabelecimento) 
into STRICT	cd_estabelecimento_w 
from	convenio_retorno a 
where	a.nr_sequencia	= nr_seq_retorno_p;
 
ie_ratear_sem_titulo_w := obter_param_usuario(27, 119, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_ratear_sem_titulo_w);
 
open C01;
loop 
fetch C01 into	 
	nr_titulo_w, 
	vl_adicional_w, 
	vl_cambial_ativo_w, 
	vl_cambial_passivo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
 
	select	coalesce(sum(c.vl_guia),0)			/* obter o valor base total do rateio */
 
	into STRICT	vl_total_w 
	from	conta_paciente_guia c, 
		convenio_retorno_item b, 
		convenio_retorno a 
	where	a.nr_sequencia		= nr_seq_retorno_p 
	and	a.nr_sequencia		= b.nr_seq_retorno 
	and (nr_titulo_w = 0 or nr_titulo_w = coalesce(b.nr_titulo,(obter_titulo_conta_guia(b.nr_interno_conta,b.cd_autorizacao,a.nr_sequencia,a.nr_seq_protocolo))::numeric )) 
	and	b.nr_interno_conta	= c.nr_interno_conta 
	and	b.cd_autorizacao	= c.cd_autorizacao;
 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_ret_item_w, 
		vl_guia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
 
		vl_juros_w			:= (coalesce(vl_adicional_w,0) * coalesce(vl_guia_w,0) / coalesce(vl_total_w,0));
		vl_total_juros_w		:= coalesce(vl_total_juros_w,0) + coalesce(vl_juros_w,0);
		vl_cambial_ativo_item_w		:= (coalesce(vl_cambial_ativo_w,0) * coalesce(vl_guia_w,0) / coalesce(vl_total_w,0));
		vl_total_ativo_w		:= coalesce(vl_total_ativo_w,0) + coalesce(vl_cambial_ativo_item_w,0);
		vl_cambial_passivo_item_w	:= (coalesce(vl_cambial_passivo_w,0) * coalesce(vl_guia_w,0) / coalesce(vl_total_w,0));
		vl_total_passivo_w		:= coalesce(vl_total_passivo_w,0) + coalesce(vl_cambial_passivo_item_w,0);
 
		update	convenio_retorno_item 
		set	vl_juros		= coalesce(vl_juros,0) + coalesce(vl_juros_w,0), 
			vl_cambial_ativo	= coalesce(vl_cambial_ativo,0) + coalesce(vl_cambial_ativo_item_w,0), 
			vl_cambial_passivo	= coalesce(vl_cambial_passivo,0) + coalesce(vl_cambial_passivo_item_w,0), 
			vl_pago			= coalesce(vl_pago,0) - (coalesce(vl_cambial_passivo,0) + coalesce(vl_cambial_passivo_item_w,0)), 
			nm_usuario		= nm_usuario_p, 
			dt_atualizacao		= clock_timestamp() 
		where	nr_sequencia		= nr_seq_ret_item_w;
 
	end loop;
	close c02;
 
	/*comentado este update porque estava adicionando um centavo a mais no valor pago do rateio  OS 1036631 
	update	convenio_retorno_item 
	set	vl_juros		= nvl(vl_juros,0) + (nvl(vl_adicional_w,0) - nvl(vl_total_juros_w,0)), 
		vl_cambial_ativo	= nvl(vl_cambial_ativo,0) + (nvl(vl_cambial_ativo_w,0) - nvl(vl_total_ativo_w,0)), 
		vl_cambial_passivo	= nvl(vl_cambial_passivo,0) + (nvl(vl_cambial_passivo_w,0) - nvl(vl_total_passivo_w,0)), 
		nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= sysdate 
	where	nr_sequencia		= nr_seq_ret_item_w; 
	*/
 
	 
	/* ir para o próximo valor adicional */
 
	vl_total_juros_w	:= 0;
	vl_total_ativo_w	:= 0;
	vl_total_passivo_w	:= 0;
 
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ratear_vl_adicional_conv_receb (nr_seq_retorno_p bigint, nm_usuario_p text) FROM PUBLIC;

