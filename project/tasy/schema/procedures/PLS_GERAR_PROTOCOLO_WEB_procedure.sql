-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_protocolo_web ( nr_seq_prestador_p bigint, dt_competencia_p text, ie_tipo_guia_p text, qt_max_contas_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_verificar_prot_p text, nr_seq_prot_ref_p bigint, nr_seq_usu_prestador_p bigint, nr_seq_protocolo_p INOUT bigint) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Gerar um protocolo de conta médica na digitação.
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	IE_VERIFICAR_PROT_P
	N = vai gerar o protocolo sem fazer a verificação se ja existe um correspondente ao mesmo
	S = veirifa se ja existe um protocolo correspondente ao mesmo

*/nr_seq_protocolo_w      bigint;
nr_seq_outorgante_w	bigint;
nr_protocolo_w		bigint := 0;
dt_competencia_w	timestamp;


BEGIN

nr_seq_protocolo_w := nr_seq_protocolo_p;


if (ie_verificar_prot_p = 'S' and coalesce(nr_seq_protocolo_w::text, '') = '') then
	-- Verifica se existe algum protocolo disponivel
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_protocolo_w
	from 	pls_protocolo_conta a
	where	a.ie_tipo_guia = ie_tipo_guia_p
	and	a.nr_seq_prestador = nr_seq_prestador_p
	and	(((SELECT count(*) from pls_conta where nr_seq_protocolo = a.nr_sequencia) < qt_max_contas_p) or (coalesce(qt_max_contas_p::text, '') = '' or qt_max_contas_p = 0))
	and 	a.Ie_Situacao = 'I'
	and	a.ie_status = '1'
	and	a.ie_apresentacao = 'A'
	And	a.ie_Tipo_Protocolo = 'C'
	and 	a.Ie_Forma_Imp = 'D'
	and	coalesce(a.nr_seq_prot_referencia,0) = coalesce(nr_seq_prot_ref_p,0);

end if;

if (coalesce(nr_seq_protocolo_w::text, '') = '') then
	select  nextval('pls_protocolo_conta_seq')
	into STRICT    nr_seq_protocolo_w
	;

	select	max(nr_sequencia)
	into STRICT	nr_seq_outorgante_w
	from    pls_outorgante
	where   cd_estabelecimento = cd_estabelecimento_p;

	if (coalesce(dt_competencia_p::text, '') = '') then
		dt_competencia_w := clock_timestamp();
	else
		dt_competencia_w := to_date(dt_competencia_p, 'dd/mm/yyyy');
	end if;

	insert into pls_protocolo_conta(nr_sequencia, nm_usuario, dt_atualizacao,
		nm_usuario_nrec, dt_atualizacao_nrec, ie_situacao,
		ie_status, dt_mes_competencia, cd_estabelecimento,
		ie_tipo_guia, ie_apresentacao, dt_protocolo,
		nr_seq_prestador, qt_contas_informadas,
		dt_base_venc, ie_tipo_protocolo, nr_seq_outorgante,
		ie_forma_imp, nr_seq_prot_referencia,ie_origem_protocolo,
		ie_guia_fisica, nr_seq_usu_prestador)
	values (nr_seq_protocolo_w, nm_usuario_p, clock_timestamp(),
		nm_usuario_p, clock_timestamp(), 'I',
		'1', dt_competencia_w, cd_estabelecimento_p,
		ie_tipo_guia_p, 'A', clock_timestamp(),
		nr_seq_prestador_p, qt_max_contas_p,
		clock_timestamp(), 'C', nr_seq_outorgante_w,
		'D', nr_seq_prot_ref_p, 'P',
		'N', nr_seq_usu_prestador_p);
end if;

nr_seq_protocolo_p := nr_seq_protocolo_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_protocolo_web ( nr_seq_prestador_p bigint, dt_competencia_p text, ie_tipo_guia_p text, qt_max_contas_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_verificar_prot_p text, nr_seq_prot_ref_p bigint, nr_seq_usu_prestador_p bigint, nr_seq_protocolo_p INOUT bigint) FROM PUBLIC;

