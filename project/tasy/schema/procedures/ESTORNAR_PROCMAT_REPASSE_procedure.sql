-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_procmat_repasse ( nr_seq_proc_repasse_p bigint, nr_seq_mat_repasse_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_data_liberacao_w	varchar(10);
ie_libera_repasse_original_w	varchar(1);
ds_log_w		varchar(255);
ie_ctb_online_w     varchar(1);
ie_geracao_w        ctb_regra_geracao_lote_rec.ie_geracao%type;
cd_convenio_w       convenio.cd_convenio%type;
ie_tipo_convenio_w  convenio.ie_tipo_convenio%type;
nr_sequencia_w      procedimento_repasse.nr_sequencia%type;


BEGIN

ie_data_liberacao_w	:= obter_valor_param_usuario(87, 89, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

select	coalesce(max(IE_LIBERA_REPASSE_ESTORNADO),'N')
into STRICT	ie_libera_repasse_original_w
from	parametro_repasse
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(nr_seq_proc_repasse_p, 0) > 0) then

	ds_log_w	:= substr(wheb_mensagem_pck.get_texto(304512,'NR_SEQ_PROC_REP=' || nr_seq_proc_repasse_p),1,255);

	insert	into	log_exclusao(	NM_TABELA,
					DT_ATUALIZACAO,
					NM_USUARIO,
					DS_CHAVE)
	values (	'procedimento_repasse',
					clock_timestamp(),
					nm_usuario_p,
					ds_log_w);

    select  nextval('procedimento_repasse_seq')
    into STRICT    nr_sequencia_w
;

	insert into procedimento_repasse(
		nr_sequencia,
		nr_seq_procedimento,
		vl_repasse,
		dt_atualizacao,
		nm_usuario,
		nr_seq_terceiro,
		nr_lote_contabil,
		nr_repasse_terceiro,
		cd_conta_contabil,
		nr_seq_trans_fin,
		vl_liberado,
		nr_seq_item_retorno,
		ie_status,
		nr_seq_origem,
		cd_regra,
		DT_CONTABIL_TITULO,
		DT_CONTABIL,
		cd_medico,
		nr_seq_partic,
		nr_seq_criterio,
		NR_SEQ_TRANS_FIN_REP_MAIOR,
		dt_liberacao,
		nr_seq_motivo_des,
		vl_original_repasse)
	SELECT	nr_sequencia_w,
		nr_seq_procedimento,
		vl_repasse  * -1,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_terceiro,
		0,
		null,
		cd_conta_contabil,
		nr_seq_trans_fin,
		vl_liberado * -1,
		nr_seq_item_retorno,
		'E',
		nr_sequencia,
		cd_regra,
		to_date('01/01/2999','dd/mm/yyyy'),
		to_date('01/01/2999','dd/mm/yyyy'),
		cd_medico,
		nr_seq_partic,
		nr_seq_criterio,
		NR_SEQ_TRANS_FIN_REP_MAIOR,
		CASE WHEN ie_data_liberacao_w='S' THEN  clock_timestamp()  ELSE null END ,
		nr_seq_motivo_des,
		vl_original_repasse
	from	Procedimento_repasse
	where	nr_sequencia	= nr_seq_proc_repasse_p;

	ds_log_w	:= substr(wheb_mensagem_pck.get_texto(304513),1,255);
	
	update	procedimento_repasse
	set	IE_ESTORNO	= 'S',
		ie_status	= CASE WHEN ie_libera_repasse_original_w='S' THEN 'S'  ELSE ie_status END ,
		dt_liberacao	= CASE WHEN ie_libera_repasse_original_w='S' THEN clock_timestamp()  ELSE dt_liberacao END ,
		nm_usuario_lib	= CASE WHEN ie_libera_repasse_original_w='S' THEN nm_usuario_p  ELSE nm_usuario_lib END ,
		ds_observacao	= CASE WHEN ie_libera_repasse_original_w='S' THEN ds_log_w  ELSE ds_observacao END
	where	nr_sequencia	= nr_seq_proc_repasse_p;

    /*Contabilizacao online repasse */

    begin
        select  e.cd_convenio,
                e.ie_tipo_convenio
        into STRICT    cd_convenio_w,
                ie_tipo_convenio_w
        from    procedimento_repasse a,
                procedimento_paciente b,
                conta_paciente c,
                protocolo_convenio d,
                convenio e
        where   a.nr_seq_procedimento = b.nr_sequencia
        and     b.nr_interno_conta = c.nr_interno_conta
        and     c.nr_seq_protocolo = d.nr_seq_protocolo
        and     d.cd_convenio = e.cd_convenio
        and     a.nr_sequencia = nr_seq_proc_repasse_p;
        exception when others then
            cd_convenio_w := null;
            ie_tipo_convenio_w := null;
    end;

    ie_geracao_w    := ctb_online_pck.get_geracao_lote_receita(cd_convenio_w, cd_estabelecimento_p, nm_usuario_p, ie_tipo_convenio_w);
    ie_ctb_online_w := ctb_online_pck.get_modo_lote( 14, cd_estabelecimento_p);

    if (ie_ctb_online_w = 'S' and ie_geracao_w = 'FPR') then
        CALL ctb_contab_onl_repasse( null, null, nr_sequencia_w, nm_usuario_p, 1, 'N', 'N');
    end if;
	
elsif (coalesce(nr_seq_mat_repasse_p, 0) > 0) then

	ds_log_w	:= substr(wheb_mensagem_pck.get_texto(304514,'NR_SEQ_MAT_REP=' || nr_seq_mat_repasse_p),1,255);

	insert	into	log_exclusao(	NM_TABELA,
					DT_ATUALIZACAO,
					NM_USUARIO,
					DS_CHAVE)
	values (	'material_repasse',
					clock_timestamp(),
					nm_usuario_p,
					ds_log_w);
	insert into Material_repasse(
		nr_sequencia,
		nr_seq_Material,
		vl_repasse,
		dt_atualizacao,
		nm_usuario,
		nr_seq_terceiro,
		nr_lote_contabil,
		nr_repasse_terceiro,
		cd_conta_contabil,
		nr_seq_trans_fin,
		vl_liberado,
		nr_seq_item_retorno,
		ie_status,
		nr_seq_origem,
		cd_regra,
		cd_medico,
		NR_SEQ_TRANS_FIN_REP_MAIOR,
		dt_liberacao,
		nr_seq_motivo_des,
		vl_original_repasse)
	SELECT	nextval('material_repasse_seq'),
		nr_seq_material,
		vl_repasse  * -1,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_terceiro,
		0,
		null,
		cd_conta_contabil,
		nr_seq_trans_fin,
		vl_liberado * -1,
		nr_seq_item_retorno,
		'E',
		nr_sequencia,
		cd_regra,
		cd_medico,
		NR_SEQ_TRANS_FIN_REP_MAIOR,
		CASE WHEN ie_data_liberacao_w='S' THEN  clock_timestamp()  ELSE null END ,
		nr_seq_motivo_des,
		vl_original_repasse
	from	material_repasse
	where	nr_sequencia	= nr_seq_mat_repasse_p;

	ds_log_w	:= substr(wheb_mensagem_pck.get_texto(304513),1,255);
	
	update	material_repasse
	set	IE_ESTORNO	= 'S',
		ie_status	= CASE WHEN ie_libera_repasse_original_w='S' THEN 'S'  ELSE ie_status END ,
		dt_liberacao	= CASE WHEN ie_libera_repasse_original_w='S' THEN clock_timestamp()  ELSE dt_liberacao END ,
		nm_usuario_lib	= CASE WHEN ie_libera_repasse_original_w='S' THEN nm_usuario_p  ELSE nm_usuario_lib END ,
		ds_observacao	= CASE WHEN ie_libera_repasse_original_w='S' THEN ds_log_w  ELSE ds_observacao END
	where	nr_sequencia	= nr_seq_mat_repasse_p;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_procmat_repasse ( nr_seq_proc_repasse_p bigint, nr_seq_mat_repasse_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

