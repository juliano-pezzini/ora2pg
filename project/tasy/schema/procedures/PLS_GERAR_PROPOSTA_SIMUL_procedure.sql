-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_proposta_simul ( nr_seq_simulacao_p bigint, cd_estiuplante_p text, nr_seq_canal_venda_p bigint, nr_seq_vendedor_pf_p bigint, dt_inicio_vigencia_p timestamp, nr_dia_vencimento_p bigint, nr_seq_cobrancao_p text, nr_endereco_corresp_p text, nr_mes_vencimento_p bigint, cd_condicao_pagamento_p bigint, nr_seq_proposta_p INOUT bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_tipo_contratacao_w		varchar(2);
nr_seq_cliente_w		bigint;
nr_seq_proposta_w		bigint;
nr_seq_pagador_w		bigint;
ie_mes_vencimento_w		varchar(2);
nr_seq_motivo_inclusao_w	bigint;
nr_seq_titular_w		bigint;
qt_proposta_w			bigint;
qt_tabelas_proposta_w		bigint;
qt_titulares_simulacao_w	bigint;
nr_seq_benef_proposta_w		bigint;
ie_nova_simulacao_w		varchar(1);
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_tabela_w			pls_tabela_preco.nr_sequencia%type;

C01 CURSOR FOR
	SELECT    a.nr_sequencia,
        a.cd_pessoa_fisica,
        a.nm_beneficiario,
        a.nr_seq_produto nr_seq_plano,
        a.nr_seq_tabela,
        a.ie_tipo_benef,
        a.nr_seq_parentesco,
        a.nr_seq_portabilidade,
        (    SELECT    x.ie_tipo_parentesco
            from    grau_parentesco x
            where    x.nr_sequencia         = a.nr_seq_parentesco
            and    a.nr_seq_simulacao    = nr_seq_simulacao_p ) ie_tipo_parentesco
    from    pls_simulpreco_individual a
    where    a.nr_seq_simulacao    = nr_seq_simulacao_p
    order by a.ie_tipo_benef desc;

C02 CURSOR FOR
	SELECT	nr_seq_plano,
		nr_seq_tabela
	from	pls_simulacao_preco_plano
	where	nr_seq_simulacao	= nr_seq_simulacao_p
	and	ie_status = 'S'; --Produto escolhido
C03 CURSOR(nr_seq_simul_indiv_pc pls_simulpreco_individual.nr_sequencia%type) FOR
	SELECT	nr_seq_bonificacao,
		tx_bonificacao,
		vl_bonificacao
	from	pls_bonificacao_vinculo
	where	nr_seq_segurado_simul	= nr_seq_simul_indiv_pc
	
union all

	SELECT	a.nr_seq_bonificacao,
		a.tx_bonificacao,
		a.vl_bonificacao
	from	pls_bonificacao_vinculo a
	where	a.nr_seq_simulacao	= nr_seq_simulacao_p
	and	not exists (	select	1
				from	pls_bonificacao_vinculo x
				where	x.nr_seq_bonificacao	= a.nr_seq_bonificacao
				and	x.nr_seq_segurado_simul	= nr_seq_simul_indiv_pc);

C04 CURSOR(nr_seq_simul_indiv_pc pls_simulpreco_individual.nr_sequencia%type) FOR
	SELECT	nr_seq_plano,
		nr_seq_tabela
	from (	SELECT	nr_seq_plano,
				nr_seq_tabela
			from	pls_sca_vinculo
			where	nr_seq_segurado_simul	= nr_seq_simul_indiv_pc
			
union all

			select	nr_seq_plano,
				nr_seq_tabela
			from	pls_sca_vinculo
			where	nr_seq_simulacao	= nr_seq_simulacao_p) alias1
	group by nr_seq_plano,
		nr_seq_tabela;

procedure inserir_produto(	nr_seq_proposta_p	pls_proposta_adesao.nr_sequencia%type,
				nr_seq_plano_p		pls_plano.nr_sequencia%type,
				nr_seq_tabela_p		pls_tabela_preco.nr_sequencia%type) is
qt_plano_proposta_w		bigint;
qt_plano_proposta_ww		bigint;
BEGIN

--Verificar se o produto ja existe na proposta
select	count(1)
into STRICT	qt_plano_proposta_w
from	pls_proposta_plano
where	nr_seq_proposta	= nr_seq_proposta_p
and	nr_seq_plano	= nr_seq_plano_p;

if (qt_plano_proposta_w = 0) then
	--Verificar se o plano esta liberado para a proposta de adesao
	select	count(1)
	into STRICT	qt_plano_proposta_ww
	from	pls_proposta_plano
	where	nr_seq_proposta	= nr_seq_proposta_p;

	if (pls_obter_se_plano_proposta(nr_seq_plano_p) = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 203313, 'DS_PLANO='||substr(pls_obter_dados_produto(nr_seq_plano_p,'n'),1,225)); --Plano '|| substr(pls_obter_dados_produto(r_c01_w.nr_seq_plano,'n'),1,225)||' nao liberado para a proposta de adesao!
	end if;

	--Verificar se a tabela esta liberada para comercializacao na proposta de adesao
	select	count(1)
	into STRICT	qt_tabelas_proposta_w
	from	pls_tabela_preco
	where	nr_sequencia		= nr_seq_tabela_p
	and	ie_proposta_adesao	= 'S';

	if (qt_tabelas_proposta_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 203314, 'NM_TABELA='||substr(pls_obter_dados_tabela_preco(nr_seq_tabela_p,'N'),1,225)); --Tabela ' || substr(pls_obter_dados_tabela_preco(r_c01_w.nr_seq_tabela,'N'),1,225)||' nao liberada para a proposta de adesao!
	end if;

	insert into pls_proposta_plano(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			nr_seq_proposta,nr_seq_plano,nr_seq_tabela,ie_principal)
	values (	nextval('pls_proposta_plano_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			nr_seq_proposta_p,nr_seq_plano_p,nr_seq_tabela_p,CASE WHEN qt_plano_proposta_ww=0 THEN 'S'  ELSE 'N' END );
end if;
end;

begin
ie_nova_simulacao_w	:= 'N';
select	count(1)
into STRICT	qt_titulares_simulacao_w
from	pls_simulpreco_individual
where	nr_seq_simulacao	= nr_seq_simulacao_p
and	ie_tipo_benef		= 'T';

if (qt_titulares_simulacao_w > 1) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 203307, null); --Para a geracao da proposta de adesao deve apenas possuir 1 titular na simulacao de preco. Verifique!
end if;

select	ie_tipo_contratacao,
	nr_seq_cliente
into STRICT	ie_tipo_contratacao_w,
	nr_seq_cliente_w
from	pls_simulacao_preco
where	nr_sequencia	= nr_seq_simulacao_p;

insert into pls_proposta_adesao(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
		cd_estabelecimento,dt_inicio_proposta,ie_tipo_proposta,ie_tipo_contratacao,cd_estipulante,
		nr_seq_vendedor_canal,nr_seq_vendedor_pf,nr_seq_cliente,ie_status,
		ie_tipo_processo)
values (	nextval('pls_proposta_adesao_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
		cd_estabelecimento_p,clock_timestamp(),1,ie_tipo_contratacao_w,cd_estiuplante_p,
		nr_seq_canal_venda_p,nr_seq_vendedor_pf_p,nr_seq_cliente_w,'U',
		'M')
	returning nr_sequencia into nr_seq_proposta_w;

select	nextval('pls_proposta_pagador_seq')
into STRICT	nr_seq_pagador_w
;

if (nr_mes_vencimento_p	= 0) then
	ie_mes_vencimento_w	:= 'A';
elsif (nr_mes_vencimento_p	= 1) then
	ie_mes_vencimento_w	:= 'P';
end if;

--Gerar pagador da proposta, com os dados enviados nos parametro
insert into pls_proposta_pagador(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
		nr_seq_proposta,cd_pagador,dt_inicio_vigencia,dt_dia_vencimento,nr_seq_forma_cobranca,
		ie_mes_vencimento,ie_endereco_boleto,cd_condicao_pagamento)
values (	nr_seq_pagador_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
		nr_seq_proposta_w,cd_estiuplante_p,dt_inicio_vigencia_p,nr_dia_vencimento_p,nr_seq_cobrancao_p,
		ie_mes_vencimento_w,nr_endereco_corresp_p,cd_condicao_pagamento_p);

for r_c02_w in C02 loop
	begin
	inserir_produto(nr_seq_proposta_w, r_c02_w.nr_seq_plano, r_c02_w.nr_seq_tabela);

	ie_nova_simulacao_w	:= 'S';
	nr_seq_plano_w		:= r_c02_w.nr_seq_plano;
	nr_seq_tabela_w		:= r_c02_w.nr_seq_tabela;
	end;
end loop; --C02
select	nr_seq_motivo_inclusao
into STRICT	nr_seq_motivo_inclusao_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

for r_c01_w in C01 loop
	begin

	if (coalesce(r_c01_w.cd_pessoa_fisica::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 203311, 'NM_BENEFICIARIO='||r_c01_w.nm_beneficiario ); --Beneficiario '||r_c01_w.nm_beneficiario||' nao possui uma pessoa fisica vinculada.Favor verifique!
	end if;

	--Verificar se o beneficiario e titular
	if (r_c01_w.ie_tipo_benef = 'D') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_titular_w
		from	pls_proposta_beneficiario
		where	nr_seq_proposta	= nr_seq_proposta_w
		and	coalesce(nr_seq_titular::text, '') = '';
	elsif (r_c01_w.ie_tipo_benef = 'T') then
		nr_seq_titular_w	:= null;
	end if;

	if (ie_nova_simulacao_w = 'N') then
		if (coalesce(r_c01_w.nr_seq_plano::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 203308, 'NM_BENEFICIARIO='||r_c01_w.nm_beneficiario ); --Beneficiario'||r_c01_w.nm_beneficiario||' sem plano informado na simulacao. Verifique!
		end if;

		if (coalesce(r_c01_w.nr_seq_tabela::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 203310, 'NM_BENEFICIARIO='||r_c01_w.nm_beneficiario ); --Beneficiario'||r_c01_w.nm_beneficiario||' sem tabela informada na simulacao. Verifique!
		end if;

		inserir_produto(nr_seq_proposta_w, r_c01_w.nr_seq_plano, r_c01_w.nr_seq_tabela);

		nr_seq_plano_w	:= r_c01_w.nr_seq_plano;
		nr_seq_tabela_w	:= r_c01_w.nr_seq_tabela;
	end if;


	insert into pls_proposta_beneficiario(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			nr_seq_proposta,cd_beneficiario,nr_seq_plano,nr_seq_tabela,nr_seq_titular,
			nr_seq_parentesco,nr_seq_pagador,nr_seq_motivo_inclusao,ie_nascido_plano,ie_taxa_inscricao,
			ie_copiar_sca_plano,ie_tipo_parentesco)
	values (	nextval('pls_proposta_beneficiario_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			nr_seq_proposta_w,r_c01_w.cd_pessoa_fisica,nr_seq_plano_w,nr_seq_tabela_w,nr_seq_titular_w,
			r_c01_w.nr_seq_parentesco,nr_seq_pagador_w,nr_seq_motivo_inclusao_w,'N','S',
			'S', r_c01_w.ie_tipo_parentesco)
		returning nr_sequencia into nr_seq_benef_proposta_w;

	for r_c03_w in C03(r_c01_w.nr_sequencia) loop
		begin
		insert into pls_bonificacao_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_segurado_prop,nr_seq_bonificacao,tx_bonificacao,vl_bonificacao)
		values (	nextval('pls_bonificacao_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_benef_proposta_w,r_c03_w.nr_seq_bonificacao,r_c03_w.tx_bonificacao,r_c03_w.vl_bonificacao);
		end;
	end loop; --C03
	for r_c04_w in C04(r_c01_w.nr_sequencia) loop
		begin
		insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_benef_proposta,nr_seq_plano,nr_seq_tabela)
		values (	nextval('pls_sca_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_benef_proposta_w,r_c04_w.nr_seq_plano,r_c04_w.nr_seq_tabela);
		end;
	end loop; --C04
	end;
end loop; --C01

--Verificar se a proposta foi gerada, caso foi gerado, deve retornar para o parametro de saide sua sequencia gerada
select	count(1)
into STRICT	qt_proposta_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_w;

if (qt_proposta_w > 0) then
	update	pls_simulacao_preco
	set	nr_seq_proposta	= nr_seq_proposta_w
	where	nr_sequencia	= nr_seq_simulacao_p;

	nr_seq_proposta_p	:= nr_seq_proposta_w;
end  if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_proposta_simul ( nr_seq_simulacao_p bigint, cd_estiuplante_p text, nr_seq_canal_venda_p bigint, nr_seq_vendedor_pf_p bigint, dt_inicio_vigencia_p timestamp, nr_dia_vencimento_p bigint, nr_seq_cobrancao_p text, nr_endereco_corresp_p text, nr_mes_vencimento_p bigint, cd_condicao_pagamento_p bigint, nr_seq_proposta_p INOUT bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

