-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transf_estoque_importa_itens (nr_sequencia_p bigint, nr_ordem_compra_p bigint, nm_usuario_p text, ie_opcao_p text, ie_agrupar_itens_p text, ds_erro_p INOUT text) AS $body$
DECLARE


/*
ie_opcao_p:
N - Nota fiscal
R - Requisição
*/
nr_seq_cobranca_w			bigint;
nr_nota_fiscal_w				varchar(20);
qt_item_nf_w				double precision;
cd_material_w				integer;
cd_unidade_medida_compra_w		varchar(30);
cd_local_entrega_w			integer;
nr_item_oci_w				integer := 0;
dt_entrega_w				timestamp;
qt_existe_w				bigint;
nr_sequencia_w				ordem_compra_item_entrega.nr_sequencia%type;

c01 CURSOR FOR
SELECT	cd_material,
	qt_item_nf,
	cd_unidade_medida_compra
from 	nota_fiscal_item
where	nr_sequencia = nr_sequencia_p;

c02 CURSOR FOR
SELECT	a.cd_material,
	a.qt_material_requisitada - coalesce(a.qt_material_atendida,0) qt_material_requisitada,
	a.cd_unidade_medida
from 	item_requisicao_material a,
	sup_motivo_baixa_req b
where	a.cd_motivo_baixa		= b.nr_sequencia
and	b.cd_motivo_baixa		= 0
and (a.qt_material_requisitada - coalesce(a.qt_material_atendida,0)) > 0
and	a.nr_requisicao = nr_sequencia_p;


BEGIN

select	max(cd_local_entrega),
	max(dt_entrega)
into STRICT	cd_local_entrega_w,
	dt_entrega_w
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

if (ie_opcao_p = 'N') then
	begin

	open c01;
	loop
	fetch c01 into
		cd_material_w,
		qt_item_nf_w,
		cd_unidade_medida_compra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		begin
		select	nr_item_oci
		into STRICT	nr_item_oci_w
		from	ordem_compra_item
		where	nr_ordem_compra = nr_ordem_compra_p
		and	cd_material = cd_material_w
		and	cd_unidade_medida_compra = cd_unidade_medida_compra_w
		and	coalesce(cd_local_estoque,0) = coalesce(cd_local_entrega_w,0)  LIMIT 1;
		exception
		when others then
			nr_item_oci_w := 0;
		end;

		if (nr_item_oci_w > 0) and (ie_agrupar_itens_p = 'S') then
			begin
			update	ordem_compra_item
			set	qt_material = qt_material + qt_item_nf_w,
				vl_total_item = round(( (qt_material + qt_item_nf_w) * vl_unitario_material),4)
			where	nr_ordem_compra = nr_ordem_compra_p
			and	nr_item_oci = nr_item_oci_w;

			select	max(nr_sequencia)
			into STRICT	nr_sequencia_w
			from	ordem_compra_item_entrega
			where	nr_ordem_compra = nr_ordem_compra_p
			and	nr_item_oci = nr_item_oci_w;

			update	ordem_compra_item_entrega
			set	qt_prevista_entrega = qt_prevista_entrega + qt_item_nf_w
			where	nr_ordem_compra = nr_ordem_compra_p
			and	nr_item_oci = nr_item_oci_w
			and	nr_sequencia = nr_sequencia_w;
			end;
		else
			begin
			select	coalesce(max(nr_item_oci),0)
			into STRICT	nr_item_oci_w
			from	ordem_compra_item
			where	nr_ordem_compra = nr_ordem_compra_p;

			nr_item_oci_w := nr_item_oci_w + 1;

			insert into ordem_compra_item(
				nr_ordem_compra,
				nr_item_oci,
				cd_material,
				qt_material,
				qt_original,
				dt_atualizacao,
				nm_usuario,
				cd_unidade_medida_compra,
				cd_local_estoque,
				ie_situacao)
			values (	nr_ordem_compra_p,
				nr_item_oci_w,
				cd_material_w,
				qt_item_nf_w,
				qt_item_nf_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_unidade_medida_compra_w,
				cd_local_entrega_w,
				'A');


			insert into ordem_compra_item_entrega(
				nr_ordem_compra,
				nr_item_oci,
				dt_prevista_entrega,
				qt_prevista_entrega,
				dt_atualizacao,
				nm_usuario,
				nr_sequencia)
			values (	nr_ordem_compra_p,
				nr_item_oci_w,
				dt_entrega_w,
				qt_item_nf_w,
				clock_timestamp(),
				nm_usuario_p,
				nextval('ordem_compra_item_entrega_seq'));
			end;
		end if;



		end;
	end loop;
	close C01;

	end;
elsif (ie_opcao_p = 'R') then
	begin

	select	count(*)
	into STRICT	qt_existe_w
	from	requisicao_material
	where	nr_requisicao = nr_sequencia_p;

	if (qt_existe_w = 0) then
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(281196) || nr_sequencia_p || '.';
	end if;

	if (coalesce(ds_erro_p::text, '') = '') then
		open c02;
		loop
		fetch c02 into
			cd_material_w,
			qt_item_nf_w,
			cd_unidade_medida_compra_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			begin
			select	nr_item_oci
			into STRICT	nr_item_oci_w
			from	ordem_compra_item
			where	nr_ordem_compra = nr_ordem_compra_p
			and	cd_material = cd_material_w
			and	cd_unidade_medida_compra = cd_unidade_medida_compra_w
			and	coalesce(cd_local_estoque,0) = coalesce(cd_local_entrega_w,0)  LIMIT 1;
			exception
			when others then
				nr_item_oci_w := 0;
			end;



			if (nr_item_oci_w > 0) and (ie_agrupar_itens_p = 'S') then
				begin
				update	ordem_compra_item
				set	qt_material = qt_material + qt_item_nf_w
				where	nr_ordem_compra = nr_ordem_compra_p
				and	nr_item_oci = nr_item_oci_w;

				select	max(nr_sequencia)
				into STRICT	nr_sequencia_w
				from	ordem_compra_item_entrega
				where	nr_ordem_compra = nr_ordem_compra_p
				and	nr_item_oci = nr_item_oci_w;

				update	ordem_compra_item_entrega
				set	qt_prevista_entrega = qt_prevista_entrega + qt_item_nf_w
				where	nr_ordem_compra = nr_ordem_compra_p
				and	nr_item_oci = nr_item_oci_w
				and	nr_sequencia = nr_sequencia_w;
				end;
			else
				begin

				select coalesce(max(nr_item_oci),0)
				into STRICT	nr_item_oci_w
				from	ordem_compra_item
				where	nr_ordem_compra = nr_ordem_compra_p;

			nr_item_oci_w := nr_item_oci_w + 1;

				insert into ordem_compra_item(
					nr_ordem_compra,
					nr_item_oci,
					cd_material,
					qt_material,
					qt_original,
					dt_atualizacao,
					nm_usuario,
					cd_unidade_medida_compra,
					cd_local_estoque,
					ie_situacao)
				values (	nr_ordem_compra_p,
					nr_item_oci_w,
					cd_material_w,
					qt_item_nf_w,
					qt_item_nf_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_unidade_medida_compra_w,
					cd_local_entrega_w,
					'A');

				insert into ordem_compra_item_entrega(
					nr_ordem_compra,
					nr_item_oci,
					dt_prevista_entrega,
					qt_prevista_entrega,
					dt_atualizacao,
					nm_usuario,
					nr_sequencia)
				values (	nr_ordem_compra_p,
					nr_item_oci_w,
					dt_entrega_w,
					qt_item_nf_w,
					clock_timestamp(),
					nm_usuario_p,
					nextval('ordem_compra_item_entrega_seq'));
				end;
			end if;
			end;
		end loop;
		close C02;
	end if;

	end;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transf_estoque_importa_itens (nr_sequencia_p bigint, nr_ordem_compra_p bigint, nm_usuario_p text, ie_opcao_p text, ie_agrupar_itens_p text, ds_erro_p INOUT text) FROM PUBLIC;

