-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE lista_guias AS (cd_autorizacao		conta_paciente_guia.cd_autorizacao%type,
		nr_interno_conta	conta_paciente_guia.nr_interno_conta%type,
		vl_guia			conta_paciente_guia.vl_guia%type,
		VL_PARTICIPANTE		conta_paciente_guia.VL_PARTICIPANTE%type,
		VL_CONVENIO		conta_paciente_guia.VL_CONVENIO%type);


CREATE OR REPLACE PROCEDURE tiss_obter_guia_retorno ( nr_seq_tiss_conta_p bigint, cd_convenio_p bigint, cd_estabelecimento_p bigint, nr_guia_operadora_p INOUT text, nr_guia_prestador_p INOUT text, nr_interno_conta_p INOUT bigint, ie_guia_prestador_p INOUT text, ie_dt_conta_p INOUT text) AS $body$
DECLARE


nr_sequencia_w		bigint;
nr_interno_conta_w	bigint;	
nr_atendimento_w	bigint;
nr_seq_protocolo_w	bigint;
ie_tipo_prot_w		bigint;
ie_tipo_protocolo_w	bigint;
ds_mascara_guia_w	varchar(255);
ds_mascara_guia_prest_w	varchar(255);
ie_usuario_convenio_w	varchar(255);
ie_guia_prestador_w	varchar(255);
nr_guia_prestador_w	varchar(255);
nr_guia_prestador_ww	varchar(255);
nr_guia_operadora_w	varchar(255);
nr_adicional_w		varchar(255);
cd_usuario_tiss_w	varchar(255);
cd_autor_masc_w		varchar(255);
cd_autorizacao_w	varchar(255);
nr_convenio_w		varchar(255);
ie_guia_w		varchar(255);
ie_ret_outros_conv_w	varchar(10);
vl_processado_w		double precision;
ds_mascara_usuario_w	varchar(255);
qt_digitos_carteira_w	bigint;
cd_usuario_convenio_w	varchar(255);
cd_usuario_mascara_w	varchar(255);
nr_guia_aux_w		varchar(255);
vl_informado_w		tiss_dem_conta.vl_informado%type;
vl_guia_conta_w		conta_paciente_guia.vl_guia%type;
vl_guia_conta_ww	conta_paciente_guia.vl_guia%type;
dt_inicio_faturamento_w	tiss_dem_conta.dt_inicio_faturamento%type;	
dt_fim_faturamento_w	tiss_dem_conta.dt_fim_faturamento%type;
ie_conta_outro_estab_w	varchar(10) := 'N';
cd_senha_w		varchar(20);
NR_PROTOCOLO_W		tiss_dem_lote.nr_protocolo%type;
ie_dt_conta_w		tiss_regra_ret_guia.ie_data_realizacao%type;
qt_autorizacao_w	integer;
cd_autor_vetor_w	varchar(20);
qt_guias_w          integer;
dt_realizacao_w		tiss_dem_conta.dt_realizacao%type;
type lista_guias_vt is table of lista_guias index 	by integer;
lista_guias_w			lista_guias_vt;
i		integer;


c01 CURSOR FOR
SELECT	CASE WHEN coalesce(ie_guia,'O')='O' THEN  ds_mascara_guia  ELSE ds_mascara_guia_prest END ,
	ie_usuario_convenio,
	ie_guia_prestador,
	coalesce(ie_guia,'O'),
	nr_adicional,
	ds_mascara_usuario,
	ds_mascara_guia_prest,
	coalesce(ie_data_realizacao,'N')
from	tiss_regra_ret_guia
where	cd_convenio		= cd_convenio_p
and	cd_estabelecimento	= cd_estabelecimento_p
and	coalesce(ie_tipo_protocolo, coalesce(ie_tipo_prot_w,0))	= coalesce(ie_tipo_prot_w,0)
and	coalesce(dt_inicio_faturamento_w,clock_timestamp()) between coalesce(dt_inicio_vigencia, clock_timestamp() - interval '10000 days') and coalesce(dt_fim_vigencia,clock_timestamp() + interval '10000 days')
	order by coalesce(dt_inicio_vigencia,clock_timestamp() - interval '99999 days');
	
c_guias CURSOR FOR
	SELECT	cd_autorizacao,
		vl_guia,
		vl_participante,
		vl_convenio
	from	conta_paciente_guia
	where	nr_interno_conta = nr_interno_conta_w
	and	vl_guia	<> 0
	order by dt_atualizacao, cd_autorizacao asc;
	
c_guias_w	c_guias%rowtype;	


BEGIN

select	max(a.cd_usuario_convenio),
	max(a.nr_guia_prestador),
	max(a.nr_guia_operadora),
	max(f.nr_seq_protocolo),
	max(b.nr_protocolo),	
	max(a.vl_processado),
	max(a.vl_informado),
	max(dt_inicio_faturamento),
	max(dt_fim_faturamento),
	max(a.cd_senha),
	max(b.nr_lote),
	max(a.dt_realizacao)
into STRICT	cd_usuario_tiss_w,
	nr_guia_prestador_w,
	nr_guia_operadora_w,
	nr_seq_protocolo_w,
	nr_convenio_w,
	vl_processado_w,
	vl_informado_w,
	dt_inicio_faturamento_w,
	dt_fim_faturamento_w,
	cd_senha_w,
	nr_protocolo_w,
	dt_realizacao_w
FROM tiss_demonstrativo d, tiss_dem_fatura c, tiss_dem_lote b, tiss_dem_conta a, tiss_cabecalho e
LEFT OUTER JOIN convenio_retorno f ON (e.nr_seq_retorno = f.nr_sequencia)
WHERE d.nr_seq_cabecalho	= e.nr_sequencia and c.nr_seq_demonstrativo	= d.nr_sequencia and b.nr_seq_fatura		= c.nr_sequencia and b.nr_sequencia		= a.nr_seq_lote and a.nr_sequencia		= nr_seq_tiss_conta_p;

select	max(ie_tipo_protocolo)
into STRICT	ie_tipo_prot_w
from	protocolo_convenio
where	nr_seq_protocolo = nr_seq_protocolo_w;

select	coalesce(max(ie_ret_outros_conv),'N')
into STRICT	ie_ret_outros_conv_w
from	convenio_estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p
and	cd_convenio		= cd_convenio_p;

ie_conta_outro_estab_w := obter_param_usuario(27, 162, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p, ie_conta_outro_estab_w);

open c01;
loop
fetch c01 into
	ds_mascara_guia_w,
	ie_usuario_convenio_w,
	ie_guia_prestador_w,
	ie_guia_w,
	nr_adicional_w,
	ds_mascara_usuario_w,
	ds_mascara_guia_prest_w,
	ie_dt_conta_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	if (ie_guia_w	= 'O') then
		cd_autorizacao_w		:= nr_guia_operadora_p;
		nr_guia_aux_w			:= nr_guia_prestador_p;
		nr_guia_prestador_ww		:= nr_guia_prestador_p;
		nr_guia_prestador_p		:= null;
	else
		cd_autorizacao_w		:= nr_guia_prestador_p;
		nr_guia_aux_w			:= nr_guia_operadora_p;
		nr_guia_operadora_p		:= null;
	end if;		
	
	if (ds_mascara_usuario_w IS NOT NULL AND ds_mascara_usuario_w::text <> '') then	
		if (length(cd_usuario_tiss_w) < length(ds_mascara_usuario_w)) then
			qt_digitos_carteira_w	:= length(ds_mascara_usuario_w);
			cd_usuario_tiss_w	:= lpad(cd_usuario_tiss_w, qt_digitos_carteira_w,0);
		end if;

		begin
		select	TISS_OBTER_COD_USUARIO_MASC(cd_usuario_tiss_w, ds_mascara_usuario_w)
		into STRICT	cd_usuario_mascara_w
		;
		exception
			when others then
			cd_usuario_mascara_w	:= null;
		end;
		
		if (cd_usuario_mascara_w IS NOT NULL AND cd_usuario_mascara_w::text <> '') then
			cd_usuario_tiss_w	:= cd_usuario_mascara_w;
		end if;
	end if;
	
	if (coalesce(ie_usuario_convenio_w,'N') = 'S') then
		begin
		select	b.nr_interno_conta,
			a.nr_atendimento
		into STRICT	nr_interno_conta_w,
			nr_atendimento_w
		from	conta_paciente b,
			atend_categoria_convenio a
		where	a.nr_atendimento	= b.nr_atendimento
		and (a.cd_convenio		= cd_convenio_p or ie_ret_outros_conv_w = 'S')
		and	a.cd_usuario_convenio	= cd_usuario_tiss_w
		--and	b.nr_conta_convenio	= nr_convenio_w
		and	b.cd_estabelecimento	= cd_estabelecimento_p  LIMIT 1;			
		exception
		when others then
			nr_interno_conta_w	:= null;
			nr_atendimento_w	:= null;
		end;
		
	end if;

	if (somente_numero(nr_guia_prestador_w) = 0) then
		nr_guia_prestador_w		:= null;
	end if;

	if (somente_numero(nr_guia_operadora_w) = 0) then
		nr_guia_operadora_w		:= null;
	end if;	

	
	if (ie_guia_prestador_w = 'IC') or (ie_guia_prestador_w = 'ICS') then

		if (ds_mascara_guia_prest_w IS NOT NULL AND ds_mascara_guia_prest_w::text <> '') then
			nr_guia_prestador_w	:= tiss_obter_doc_masc(nr_guia_prestador_w, ds_mascara_guia_prest_w);
			ds_mascara_guia_w	:= null;
		end if;
		
		if (nr_guia_prestador_w IS NOT NULL AND nr_guia_prestador_w::text <> '') then
			
			begin
			select	a.nr_interno_conta
			into STRICT	nr_interno_conta_w
			from	conta_paciente a,
				protocolo_convenio b
			where (a.cd_convenio_parametro = cd_convenio_p or ie_ret_outros_conv_w = 'S')
			and	a.nr_interno_conta	= nr_guia_prestador_w
			and	a.cd_estabelecimento	= cd_estabelecimento_p
			and	a.nr_seq_protocolo	= b.nr_seq_protocolo
			and	b.ie_status_protocolo	= 2  LIMIT 1;		
			exception
			when others then
				nr_interno_conta_w	:= null;
			end;
			
		end if;
	elsif (ie_guia_prestador_w = 'G') then
		begin
		select	a.nr_interno_conta
		into STRICT	nr_interno_conta_w
		from	conta_paciente a,
			protocolo_convenio b
		where (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
		and	a.nr_atendimento		= nr_atendimento_w
		and	a.nr_interno_conta	= coalesce(nr_guia_operadora_w, a.nr_interno_conta)
		and	a.cd_estabelecimento	= cd_estabelecimento_p
		and	a.nr_seq_protocolo	= b.nr_seq_protocolo
		and	b.ie_status_protocolo	= 2  LIMIT 1;		
		exception
		when others then
			nr_interno_conta_w	:= null;
		end;
	elsif (ie_guia_prestador_w = 'AT') then	
		begin
		select 	a.nr_interno_conta
		into STRICT	nr_interno_conta_w
		from 	conta_paciente a,
			conta_paciente_guia b,
			protocolo_convenio c
		where	a.nr_atendimento	 	= cd_autorizacao_w
		and	a.nr_interno_conta		= b.nr_interno_conta
		--and 	to_char(a.nr_atendimento) 	= b.cd_autorizacao
		and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
		and	a.cd_estabelecimento		= cd_estabelecimento_p
		and	a.nr_seq_protocolo		= c.nr_seq_protocolo
		and	c.ie_status_protocolo		= 2  LIMIT 1;		
		exception
		when others then
			nr_interno_conta_w	:= null;
		end;
	elsif (ie_guia_prestador_w = 'GF') then
	
		nr_interno_conta_w	:= null;		
		
		if (coalesce(nr_protocolo_w,'0') <> '0')then/*Busca por guia e protocolo*/
                        begin
			select	a.nr_interno_conta
			into STRICT	nr_interno_conta_w
			from	conta_paciente_guia b,
				conta_paciente a,
				protocolo_convenio c
			where	a.ie_status_acerto	= 2
			and	a.nr_interno_conta	= b.nr_interno_conta
			and	a.nr_atendimento	= b.nr_atendimento
			and (a.cd_convenio_parametro = cd_convenio_p or ie_ret_outros_conv_w = 'S')
			and	trim(both b.cd_autorizacao)	= cd_autorizacao_w
			and	a.cd_estabelecimento	= cd_estabelecimento_p
			and	a.nr_seq_protocolo	= c.nr_seq_protocolo
			and	c.ie_status_protocolo	= 2
			and 	a.nr_seq_protocolo	= nr_protocolo_w  LIMIT 1;		
			exception
			when others then
				nr_interno_conta_w	:= null;				
			end;
		
		end if;
		
		if (coalesce(nr_interno_conta_w,0) = 0)then/*Busca apenas por guia*/
                        begin
			select	a.nr_interno_conta
			into STRICT	nr_interno_conta_w
			from	conta_paciente_guia b,
				conta_paciente a,
				protocolo_convenio c
			where	a.ie_status_acerto	= 2
			and	a.nr_interno_conta	= b.nr_interno_conta
			and	a.nr_atendimento	= b.nr_atendimento
			and (a.cd_convenio_parametro = cd_convenio_p or ie_ret_outros_conv_w = 'S')
			and	trim(both b.cd_autorizacao)	= cd_autorizacao_w
			and	a.cd_estabelecimento	= cd_estabelecimento_p
			and	a.nr_seq_protocolo	= c.nr_seq_protocolo
			and	c.ie_status_protocolo	= 2  LIMIT 1;		
			exception
			when others then
				nr_interno_conta_w	:= null;					

			end;
		end if;
	elsif (ie_guia_prestador_w = 'GA') then
		begin
		select	a.nr_interno_conta
		into STRICT	nr_interno_conta_w
		from	conta_paciente a,
			atend_categoria_convenio b,
			protocolo_convenio c
		where	a.nr_atendimento		= b.nr_atendimento
		and	b.nr_atendimento		= nr_atendimento_w
		and	b.nr_doc_convenio		= cd_autorizacao_w
		and	a.cd_estabelecimento		= cd_estabelecimento_p
		and	a.nr_seq_protocolo		= c.nr_seq_protocolo
		and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
		and	b.nr_seq_interno		= obter_atecaco_atendimento(nr_atendimento_w)
		and	c.ie_status_protocolo		= 2  LIMIT 1;		
		exception
		when others then
			nr_interno_conta_w	:= null;
		end;
	elsif (ie_guia_prestador_w = 'GFV') then
		begin
		if (coalesce(vl_informado_w,0) = 0) then
			begin
			select	a.nr_interno_conta
			into STRICT	nr_interno_conta_w
			from	conta_paciente_guia b,
				conta_paciente a,
				protocolo_convenio c
			where	obter_valor_conta(a.nr_interno_conta,0) = vl_processado_w
			and	a.ie_status_acerto		= 2
			and	a.nr_interno_conta		= b.nr_interno_conta
			and	a.nr_atendimento		= b.nr_atendimento
			and	a.nr_seq_protocolo		= c.nr_seq_protocolo
			and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
			and	trim(both b.cd_autorizacao)		= cd_autorizacao_w
			and	a.cd_estabelecimento		= cd_estabelecimento_p
			and	c.ie_status_protocolo		= 2  LIMIT 1;		
			exception
			when others then
				nr_interno_conta_w	:= null;
			end;			
		else
			begin
			select	a.nr_interno_conta
			into STRICT	nr_interno_conta_w
			from	conta_paciente_guia b,
				conta_paciente a,
				protocolo_convenio c
			where	obter_valor_conta(a.nr_interno_conta,0) = vl_informado_w
			and	a.ie_status_acerto		= 2
			and	a.nr_interno_conta		= b.nr_interno_conta
			and	a.nr_atendimento		= b.nr_atendimento
			and	a.nr_seq_protocolo		= c.nr_seq_protocolo
			and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
			and	trim(both b.cd_autorizacao)		= cd_autorizacao_w
			and	a.cd_estabelecimento		= cd_estabelecimento_p
			and	c.ie_status_protocolo		= 2  LIMIT 1;		
			exception
			when others then
				nr_interno_conta_w	:= null;
			end;			
		end if;
		
		
		end;
	elsif (ie_guia_prestador_w = 'GPT') then

	
		if (ds_mascara_guia_prest_w IS NOT NULL AND ds_mascara_guia_prest_w::text <> '') then
			cd_autorizacao_w	:= tiss_obter_doc_masc(cd_autorizacao_w, ds_mascara_guia_prest_w);
			ds_mascara_guia_w	:= null;
		end if;		

	
		begin
		select	a.nr_interno_conta
		into STRICT	nr_interno_conta_w
		from	tiss_conta_guia b,
			conta_paciente a,
			protocolo_convenio c
		where	a.nr_interno_conta		= b.nr_interno_conta	
		and	a.nr_seq_protocolo		= c.nr_seq_protocolo
		and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
		and (a.cd_estabelecimento		= cd_estabelecimento_p or ie_conta_outro_estab_w = 'S')
		and	trim(both b.nr_guia_prestador)	= trim(both cd_autorizacao_w)
		and	a.nr_seq_protocolo		= nr_protocolo_w
		and	c.ie_status_protocolo		= 2  LIMIT 1;		
		exception
		when others then
			nr_interno_conta_w	:= null;
		end;

		if (coalesce(nr_interno_conta_w::text, '') = '')  then
			
			begin
			select	nr_seq_protocolo
			into STRICT	nr_seq_protocolo_w
			from	protocolo_convenio
			where	nr_protocolo_spsadt = nr_protocolo_w;
			exception
			when others then
				nr_seq_protocolo_w := null;
			end;	
			
			if (coalesce(nr_seq_protocolo_w::text, '') = '') then
				begin
				select	nr_seq_protocolo
				into STRICT	nr_seq_protocolo_w
				from	protocolo_convenio
				where	nr_protocolo_ri = nr_protocolo_w;
				exception
				when others then
					nr_seq_protocolo_w := null;
				end;
				
				if (coalesce(nr_seq_protocolo_w::text, '') = '')  then
				
					begin
					select	nr_seq_protocolo
					into STRICT	nr_seq_protocolo_w
					from	protocolo_convenio
					where	nr_protocolo_honor = nr_protocolo_w;
					exception
					when others then
						nr_seq_protocolo_w := null;
					end;
					
					if (coalesce(nr_seq_protocolo_w::text, '') = '')  then
				
						begin
						select	nr_seq_protocolo
						into STRICT	nr_seq_protocolo_w
						from	protocolo_convenio
						where	nr_seq_doc_convenio = nr_protocolo_w;
						exception
						when others then
							nr_seq_protocolo_w := null;
						end;
						
						if (coalesce(nr_seq_protocolo_w::text, '') = '')  then
					
							begin
							select	nr_seq_protocolo
							into STRICT	nr_seq_protocolo_w
							from	tiss_protocolo_guia
							where	nr_protocolo = nr_protocolo_w;
							exception
							when others then
								nr_seq_protocolo_w := null;
							end;
					
						end if;						
				
					end if;
				
				end if;
			end if;
				
			if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
				begin
				select	a.nr_interno_conta
				into STRICT	nr_interno_conta_w
				from	tiss_conta_guia b,
					conta_paciente a,
					protocolo_convenio c
				where	a.nr_interno_conta		= b.nr_interno_conta	
				and	a.nr_seq_protocolo		= c.nr_seq_protocolo
				and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
				and (a.cd_estabelecimento		= cd_estabelecimento_p or ie_conta_outro_estab_w = 'S')
				and	b.nr_guia_prestador		= cd_autorizacao_w
				and	a.nr_seq_protocolo		= nr_seq_protocolo_w
				and	c.ie_status_protocolo		= 2  LIMIT 1;
				exception
				when others then
					nr_interno_conta_w	:= null;
				end;
			end if;
				
			-- se mesmo assim nao encontrar, ainda sim que esteja configurado pra usar a guia operadora, busca pela guia prestador

			-- OS 1892769 (pode dar problema de performance) - tentar obter a conta sem filtrar o protocolo
			if (coalesce(nr_interno_conta_w::text, '') = '') then
				begin
				select	a.nr_interno_conta
				into STRICT	nr_interno_conta_w
				from	tiss_conta_guia b,
					conta_paciente a,
					protocolo_convenio c
				where	a.nr_interno_conta		= b.nr_interno_conta	
				and	a.nr_seq_protocolo		= c.nr_seq_protocolo
				and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
				and (a.cd_estabelecimento		= cd_estabelecimento_p or ie_conta_outro_estab_w = 'S')
				and	b.nr_guia_prestador		= nr_guia_prestador_ww
				and	a.nr_seq_protocolo		= nr_seq_protocolo_w -- removido OR NR_SEQ_PROTOCOLO IS NULL, estava impactando na performance
				and	c.ie_status_protocolo		= 2  LIMIT 1;
				exception
				when others then
					nr_interno_conta_w	:= null;
				end;
			end if;	

			if (coalesce(nr_interno_conta_w::text, '') = '') and (dt_realizacao_w IS NOT NULL AND dt_realizacao_w::text <> '') then
				begin
				select	a.nr_interno_conta
				into STRICT	nr_interno_conta_w
				from	tiss_conta_guia b,
					conta_paciente a,
					protocolo_convenio c
				where	a.nr_interno_conta		= b.nr_interno_conta	
				and	a.nr_seq_protocolo		= c.nr_seq_protocolo
				and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
				and (a.cd_estabelecimento		= cd_estabelecimento_p or ie_conta_outro_estab_w = 'S')
				and	b.nr_guia_prestador		= coalesce(nr_guia_prestador_ww,nr_guia_prestador_p)
				and dt_realizacao_w between trunc(a.dt_periodo_inicial) and trunc(a.dt_periodo_final + 1) - INTERVAL '1' SECOND
				and	c.ie_status_protocolo		= 2  LIMIT 1;
				exception
				when others then
					nr_interno_conta_w	:= null;
				end;
			end if;	
							
		end if;

	elsif (ie_guia_prestador_w = 'CG') then		
		begin

		if (coalesce(vl_informado_w,0) = 0) then
			begin
			select	a.nr_interno_conta
			into STRICT	nr_interno_conta_w
			from	conta_paciente_guia b,
				conta_paciente a,
				protocolo_convenio c
			where	a.vl_conta				= vl_processado_w
			and	a.ie_status_acerto			= 2
			and	a.nr_interno_conta			= b.nr_interno_conta
			and	a.nr_atendimento			= b.nr_atendimento
			and	a.nr_seq_protocolo			= c.nr_seq_protocolo
			and	a.nr_atendimento			= coalesce(nr_atendimento_w,a.nr_atendimento)
			and (a.cd_convenio_parametro		= cd_convenio_p or ie_ret_outros_conv_w = 'S')
			and (b.nr_interno_conta||trim(both b.cd_autorizacao))	= cd_autorizacao_w
			and	a.cd_estabelecimento			= cd_estabelecimento_p
			and	c.ie_status_protocolo		= 2  LIMIT 1;		
			exception
			when others then
				nr_interno_conta_w	:= null;
			end;			
		else
			begin
			select	a.nr_interno_conta
			into STRICT	nr_interno_conta_w
			from	conta_paciente_guia b,
				conta_paciente a,
				protocolo_convenio c
			where	a.vl_conta 				= vl_informado_w
			and	a.ie_status_acerto			= 2
			and	a.nr_interno_conta			= b.nr_interno_conta
			and	a.nr_atendimento			= b.nr_atendimento
			and	a.nr_seq_protocolo			= c.nr_seq_protocolo
			and	a.nr_atendimento			= coalesce(nr_atendimento_w,a.nr_atendimento)
			and (a.cd_convenio_parametro		= cd_convenio_p or ie_ret_outros_conv_w = 'S')
			and (b.nr_interno_conta||trim(both b.cd_autorizacao))	= cd_autorizacao_w
			and	a.cd_estabelecimento			= cd_estabelecimento_p
			and	c.ie_status_protocolo		= 2  LIMIT 1;
		
			exception
			when others then
				nr_interno_conta_w	:= null;
			end;
		end if;

	
		if (coalesce(nr_interno_conta_w::text, '') = '') then
			
			begin
			
			select	coalesce(vl_guia,0)
			into STRICT	vl_guia_conta_w
			from	conta_paciente_guia b
			where (b.nr_interno_conta||b.cd_autorizacao)	= cd_autorizacao_w;

			select	sum(coalesce(vl_guia,0))
			into STRICT	vl_guia_conta_ww
			from	conta_paciente_guia b
			where	b.nr_interno_conta = 	(SELECT	max(x.nr_interno_conta)
							from 	conta_paciente_guia x 
							where 	x.nr_interno_conta||x.cd_autorizacao	= cd_autorizacao_w);
			
			select	a.nr_interno_conta
			into STRICT	nr_interno_conta_w
			from	conta_paciente_guia b,
				conta_paciente a,
				protocolo_convenio c
			where	((a.vl_conta	 			= vl_guia_conta_w) or (a.vl_conta				= vl_guia_conta_ww))
			and	a.ie_status_acerto			= 2
			and	a.nr_interno_conta			= b.nr_interno_conta
			and	a.nr_atendimento			= b.nr_atendimento
			and	a.nr_seq_protocolo			= c.nr_seq_protocolo
			and	a.nr_atendimento			= coalesce(nr_atendimento_w,a.nr_atendimento)
			and (a.cd_convenio_parametro		= cd_convenio_p or ie_ret_outros_conv_w = 'S')
			and (b.nr_interno_conta||trim(both b.cd_autorizacao))	= cd_autorizacao_w
			and	a.cd_estabelecimento			= cd_estabelecimento_p
			and	c.ie_status_protocolo			= 2  LIMIT 1;

			exception
			when others then
				nr_interno_conta_w	:= null;
			end;
		end if;	
		
		select	max(cd_autorizacao)
		into STRICT	cd_autorizacao_w
		from	conta_paciente_guia b
		where (b.nr_interno_conta||b.cd_autorizacao)	= cd_autorizacao_w;

		end;
	elsif (ie_guia_prestador_w = 'GFZ') then
		begin
		select	a.nr_interno_conta
		into STRICT	nr_interno_conta_w
		from	conta_paciente_guia b,
			conta_paciente a,
			protocolo_convenio c
		where	a.ie_status_acerto		= 2
		and	a.nr_interno_conta		= b.nr_interno_conta
		and	a.nr_atendimento		= b.nr_atendimento
		and	a.nr_seq_protocolo		= c.nr_seq_protocolo
		and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
		and	ltrim(b.cd_autorizacao,'0')	= cd_autorizacao_w
		and	a.cd_estabelecimento		= cd_estabelecimento_p
		and	c.ie_status_protocolo		= 2  LIMIT 1;
		exception
		when others then
			nr_interno_conta_w	:= null;
		end;
	elsif (ie_guia_prestador_w = 'ST') then --Senha da guia TISS da conta
		begin
		select	a.nr_interno_conta
		into STRICT	nr_interno_conta_w
		from	tiss_conta_guia b,
			conta_paciente a,
			protocolo_convenio c
		where	a.nr_interno_conta		= b.nr_interno_conta	
		and	a.nr_seq_protocolo		= c.nr_seq_protocolo
		and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')	
		and	a.cd_estabelecimento		= cd_estabelecimento_p		
		and	b.cd_senha			= cd_autorizacao_w
		and	c.ie_status_protocolo		= 2  LIMIT 1;	

		select	a.cd_autorizacao	--Ja busca a guia conforme a senha, alem de buscar a propria conta
		into STRICT	cd_autorizacao_w
		from	conta_paciente_guia a,
			tiss_conta_guia b
		where	a.nr_interno_conta	= b.nr_interno_conta
		and	trim(both a.cd_autorizacao)	= b.cd_autorizacao
		and	b.nr_interno_conta	= nr_interno_conta_w
		and	b.cd_senha		= cd_autorizacao_w  LIMIT 1;	
		exception
		when others then
			nr_interno_conta_w		:= null;
		end;		
	elsif (ie_guia_prestador_w = 'GPO') then
	
		if (ds_mascara_guia_prest_w IS NOT NULL AND ds_mascara_guia_prest_w::text <> '') then
			cd_autorizacao_w	:= tiss_obter_doc_masc(cd_autorizacao_w, ds_mascara_guia_prest_w);
			ds_mascara_guia_w	:= null;
		end if;		
	
		begin
		select	a.nr_interno_conta
		into STRICT	nr_interno_conta_w
		from	tiss_conta_guia b,
			conta_paciente a,
			protocolo_convenio c,
			conta_paciente_guia d
		where	a.nr_interno_conta		= b.nr_interno_conta
		and	a.nr_seq_protocolo		= c.nr_seq_protocolo
		and (a.cd_convenio_parametro	= cd_convenio_p or ie_ret_outros_conv_w = 'S')
		and (a.cd_estabelecimento		= cd_estabelecimento_p or ie_conta_outro_estab_w = 'S')
		and	trim(both b.nr_guia_prestador)		= nr_guia_aux_w
		and	c.ie_status_protocolo		= 2
		and	d.nr_interno_conta  		= a.nr_interno_conta
		and	d.cd_autorizacao		= cd_autorizacao_w  LIMIT 1;
		exception
		when others then
			nr_interno_conta_w	:= null;
		end;
	end if;
	
	if (ie_guia_prestador_w not in ('ST','CG','ICS')) then
		--'ST' e 'CG' opcao ja sao tratadas acima onde obtem a conta e ICS na rotina que chama
	
		i := 0;
		open c_guias;
		loop
		fetch c_guias into
			c_guias_w;
		EXIT WHEN NOT FOUND; /* apply on c_guias */
		
			lista_guias_w[i].cd_autorizacao := c_guias_w.cd_autorizacao;

			i := i + 1;
			
		end loop;
		close c_guias;
	
	end if;
	qt_guias_w	:= lista_guias_w.count;
	i := 0;
	if (lista_guias_w.count > 0) then
		
		if (lista_guias_w.count = 1) then	
			cd_autor_vetor_w := lista_guias_w[0].cd_autorizacao;
		else
			FOR i IN 0..lista_guias_w.count-1 LOOP
			
				if (lista_guias_w[i].cd_autorizacao = cd_autorizacao_w) then
					cd_autor_vetor_w := lista_guias_w[i].cd_autorizacao;
				elsif (lista_guias_w[i].cd_autorizacao = nr_guia_operadora_p) then
					cd_autor_vetor_w  := nr_guia_operadora_p;
				elsif (lista_guias_w[i].cd_autorizacao = nr_guia_prestador_p) then
					cd_autor_vetor_w  := nr_guia_prestador_p;
				end if;
			
			END LOOP;
			if (coalesce(cd_autor_vetor_w::text, '') = '') then
				cd_autor_vetor_w := lista_guias_w[qt_guias_w-1].cd_autorizacao;
			end if;
			
		end if;
		
		if (cd_autor_vetor_w IS NOT NULL AND cd_autor_vetor_w::text <> '') then
			cd_autorizacao_w := cd_autor_vetor_w;
		end if;
		
	end if;
	
	if (ds_mascara_guia_w IS NOT NULL AND ds_mascara_guia_w::text <> '') then
		cd_autor_masc_w	:= tiss_obter_doc_masc(cd_autorizacao_w, ds_mascara_guia_w) || nr_adicional_w;
	else
		cd_autor_masc_w	:= cd_autorizacao_w || nr_adicional_w;
	end if;

end loop;
close c01;

nr_guia_operadora_p	:= coalesce(cd_autor_masc_w, nr_guia_operadora_p);
nr_guia_prestador_p	:= coalesce(cd_autor_masc_w, nr_guia_prestador_p);
ie_guia_prestador_p	:= ie_guia_prestador_w;
nr_interno_conta_p	:= nr_interno_conta_w;
ie_dt_conta_p		:= ie_dt_conta_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_obter_guia_retorno ( nr_seq_tiss_conta_p bigint, cd_convenio_p bigint, cd_estabelecimento_p bigint, nr_guia_operadora_p INOUT text, nr_guia_prestador_p INOUT text, nr_interno_conta_p INOUT bigint, ie_guia_prestador_p INOUT text, ie_dt_conta_p INOUT text) FROM PUBLIC;

