-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_gv_agenda_cirurgica ( nr_seq_agenda_p bigint, nr_seq_age_copia_p bigint, nm_usuario_p text) AS $body$
DECLARE

						

cd_estabelecimento_w		smallint;
cd_pessoa_fisica_w		varchar(10);
dt_agenda_w			timestamp;
ie_solicitacao_w			varchar(15);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_sequencia_w			bigint;
nr_atendimento_w			bigint;
cd_tipo_acomodacao_w		smallint;
cd_medico_resp_w			varchar(10);
ie_clinica_w			smallint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_doenca_cid_w			varchar(10);
cd_plano_w			varchar(10);
nm_paciente_w			varchar(80);
cd_tipo_agenda_w			varchar(10);
nr_telefone_w			varchar(255);
ds_observacao_w			varchar(255);
ds_senha_w			varchar(20);
qt_diaria_w			smallint;
nr_doc_convenio_w		varchar(20);
ie_status_w			varchar(1);
ie_tipo_vaga_w			varchar(15);
ie_existe_proc_adic_w		varchar(1);
cd_proc_adic_w			bigint;
ie_origem_proc_adic_w		bigint;
nr_sequencia_gv_w		bigint;
dt_agenda_cop_w			timestamp;
hr_agenda_w			timestamp;
dt_chegada_prev_w 		timestamp;
nr_seq_proc_interno_w		bigint;
ie_consistencia_w			varchar(255);
ie_espec_valid_w			varchar(255);
ie_cid_valid_w			varchar(255);
cd_especialidade_w		bigint;
ie_tipo_atend_w			atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_classif_atend_w		atendimento_paciente.nr_seq_classificacao%type;

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno
	from	gestao_vaga_proc
	where	nr_seq_gestao = nr_sequencia_w;
						

BEGIN

select	dt_agenda
into STRICT	dt_agenda_cop_w
from    agenda_paciente
where	nr_sequencia = nr_seq_age_copia_p;

select	dt_chegada_prev,
	dt_agenda
into STRICT	dt_chegada_prev_w,
	dt_agenda_w
from    agenda_paciente
where	nr_sequencia = nr_seq_agenda_p;

select	nr_sequencia,
	cd_estabelecimento,
	cd_pessoa_fisica,
	dt_prevista,
	ie_solicitacao,
	cd_convenio,
	cd_categoria,
	ie_tipo_vaga,
	nr_atendimento,
	cd_tipo_acomod_desej,
	cd_medico,
	ie_clinica,
	cd_procedimento,
	ie_origem_proced,
	cd_cid_principal,
	cd_plano_convenio,
	nm_paciente,
	cd_tipo_agenda,
	nr_telefone,
	cd_senha,
	qt_dia,
	nr_doc_convenio,
	ie_status,
	cd_especialidade,
	ie_tipo_atendimento,
	nr_seq_classif_atend
into STRICT	nr_sequencia_w,
	cd_estabelecimento_w,
	cd_pessoa_fisica_w,
	dt_agenda_w,
	ie_solicitacao_w,
	cd_convenio_w,
	cd_categoria_w,
	ie_tipo_vaga_w,
	nr_atendimento_w,
	cd_tipo_acomodacao_w,
	cd_medico_resp_w,
	ie_clinica_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	cd_doenca_cid_w,
	cd_plano_w,
	nm_paciente_w,
	cd_tipo_agenda_w,
	nr_telefone_w,
	ds_senha_w,
	qt_diaria_w,
	nr_doc_convenio_w,
	ie_status_w,
	cd_especialidade_w,
	ie_tipo_atend_w,
	nr_seq_classif_atend_w
from	gestao_vaga
where	nr_sequencia	= (
				SELECT	max(nr_Sequencia) from gestao_vaga
				where	nr_seq_agenda = nr_seq_age_copia_p);


if (ie_status_w = 'C') then

	select	nextval('gestao_vaga_seq')
	into STRICT	nr_sequencia_gv_w	
	;

	insert into gestao_vaga(nr_sequencia,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		cd_estabelecimento,
		cd_pessoa_fisica,
		dt_solicitacao,
		ie_solicitacao,
		cd_convenio,
		cd_categoria,
		ie_status,
		ie_tipo_vaga,
		nr_atendimento,
		cd_tipo_acomod_desej,
		cd_medico,
		ie_clinica,
		cd_procedimento,
		ie_origem_proced,
		cd_cid_principal,
		cd_plano_convenio,
		nm_paciente,
		cd_tipo_agenda,
		nr_telefone,
		cd_senha,
		qt_dia,
		nr_doc_convenio,
		dt_prevista,
		nr_seq_agenda,
		ie_tipo_atendimento,
		nr_seq_classif_atend)
	values (nr_sequencia_gv_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		cd_estabelecimento_w,
		cd_pessoa_fisica_w,
		clock_timestamp(),
		ie_solicitacao_w,
		cd_convenio_w,
		cd_categoria_w,
		'A',
		ie_tipo_vaga_w,
		nr_atendimento_w,
		cd_tipo_acomodacao_w,
		cd_medico_resp_w,
		ie_clinica_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		cd_doenca_cid_w,
		cd_plano_w,
		nm_paciente_w,
		cd_tipo_agenda_w,
		nr_telefone_w,
		ds_senha_w,
		qt_diaria_w,
		nr_doc_convenio_w,
		coalesce(dt_chegada_prev_w,dt_agenda_w),
		nr_seq_agenda_p,
		ie_tipo_atend_w,
		nr_seq_classif_atend_w);

		SELECT * FROM obter_reg_regulacao_gest_vagas(ie_solicitacao_w, ie_tipo_vaga_w, ie_espec_valid_w, ie_cid_valid_w) INTO STRICT ie_espec_valid_w, ie_cid_valid_w;

		if ((coalesce(ie_espec_valid_w, 'N') = 'N') or ((coalesce(ie_espec_valid_w, 'N') = 'S') and (coalesce(cd_especialidade_w, 0) > 0)))
			and ((coalesce(ie_cid_valid_w, 'N') = 'N') or ((coalesce(ie_cid_valid_w, 'N') = 'S') and (cd_doenca_cid_w IS NOT NULL AND cd_doenca_cid_w::text <> ''))) then
			ie_consistencia_w := CONSISTIR_REGULACAO(nr_atendimento_w, nr_sequencia_gv_w, 'GESTAO_VAGA', ie_consistencia_w);
		end if;

	select	obter_data_agendamento(nr_seq_agenda)
	into STRICT	hr_agenda_w
	from	gestao_vaga
	where	nr_sequencia = nr_sequencia_gv_w;
	
	
	update	gestao_vaga
	set	ds_observacao = substr(obter_desc_expressao(300402) || ' ' || to_char(hr_agenda_w,'dd/mm/yyyy hh24:mi:ss'),1,200)
	where	nr_sequencia = nr_sequencia_w;

	open C01;
	loop
	fetch C01 into	
		cd_proc_adic_w,
		ie_origem_proc_adic_w,
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		insert	into gestao_vaga_proc( nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						cd_procedimento,
						ie_origem_proced,
						nr_seq_gestao,
						nr_seq_proc_interno)
			values ( nextval('gestao_vaga_proc_seq'),
						clock_timestamp(),
						nm_usuario_p,
						cd_proc_adic_w,
						ie_origem_proc_adic_w,
						nr_sequencia_gv_w,
						nr_seq_proc_interno_w);
		commit;
		end;
	end loop;
	close C01;
					
end if;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_gv_agenda_cirurgica ( nr_seq_agenda_p bigint, nr_seq_age_copia_p bigint, nm_usuario_p text) FROM PUBLIC;

