-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tiss_consistir_atendimento ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, ds_parametro_um_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_segurado_p bigint) AS $body$
DECLARE


/* IE_TIPO_GLOSA_P
	C - Conta
	CP - Conta procedimento
	CM - Conta material
	A - Autorizacao
	AP - Autorizacao procedimento
	AM - Autorizacao material
*/
ie_tipo_consulta_w		smallint;
ie_tipo_guia_w			varchar(2) := '0';
dt_alta_w			timestamp;
qt_proc_alta_w			integer;
dt_entrada_w			timestamp;
ie_obito_mulher_w		smallint;
cd_guia_referencia_w		varchar(20);
nr_seq_segurado_w		bigint;
qt_guia_aut_w			smallint;
ie_tipo_atendimento_imp_w	varchar(255);
ie_internado_w			varchar(255) := 'N';
nr_seq_tipo_atend_w		bigint;
nr_seq_guia_w			pls_conta.nr_seq_guia%type;
ie_regime_atendimento_w		pls_conta.ie_regime_atendimento%type;	
ie_saude_ocupacional_w		pls_conta.ie_saude_ocupacional%type;	
dt_atendimento_w		pls_conta.dt_atendimento_referencia%type;



BEGIN

if (ie_tipo_glosa_p = 'C') then
	begin
		select	ie_tipo_consulta,
			ie_tipo_guia,
			coalesce(dt_alta,dt_alta_imp),
			coalesce(dt_entrada,dt_entrada_imp),
			ie_obito_imp,
			coalesce(coalesce(cd_guia_referencia,cd_guia_solic_imp),coalesce(cd_guia,cd_guia_imp)),
			nr_seq_segurado,
			ie_tipo_atendimento_imp,
			nr_seq_guia,
			nr_seq_tipo_atendimento,
			ie_regime_atendimento,
			ie_saude_ocupacional,
			dt_atendimento_referencia
		into STRICT	ie_tipo_consulta_w,
			ie_tipo_guia_w,
			dt_alta_w,
			dt_entrada_w,
			ie_obito_mulher_w,
			cd_guia_referencia_w,
			nr_seq_segurado_w,
			ie_tipo_atendimento_imp_w,
			nr_seq_guia_w,
			nr_seq_tipo_atend_w,
			ie_regime_atendimento_w,
			ie_saude_ocupacional_w,
			dt_atendimento_w
		from	pls_conta
		where	nr_sequencia = nr_sequencia_p;		
	exception
	when others then
		ie_tipo_consulta_w := null;
	end;
	
	if (coalesce(nr_seq_segurado_w::text, '') = '') and (ie_evento_p = 'IA') then
		nr_seq_segurado_w := nr_seq_segurado_p;
	end if;
	
	select	count(1)
	into STRICT	qt_proc_alta_w
	from	pls_conta_proc
	where	nr_seq_conta = nr_sequencia_p
	and	dt_procedimento	> dt_alta_w;
	
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		select	count(1)
		into STRICT	qt_guia_aut_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_w
		and	ie_status	= 1;
	else
		select	count(1)
		into STRICT	qt_guia_aut_w
		from	pls_guia_plano
		where	cd_guia		= cd_guia_referencia_w
		and	nr_seq_segurado	= nr_seq_segurado_w
		and	ie_status	= 1;
	end if;
end if;
/* 1603 - Tipo de consulta invalido*/

if	((ie_tipo_guia_w = 3) or ((ie_tipo_guia_w = 4) and (lpad(ie_tipo_atendimento_imp_w,2,'0') = '04'))) and
	((coalesce(ie_tipo_consulta_w::text, '') = '') or (ie_tipo_consulta_w not in (1,2,3,4))) then
	CALL pls_gravar_glosa_tiss('1603',
		'Tipo de consulta nao informado ou nao compativel com o padrao TISS', ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;
	
/* 1607 - Alta Hospitalar anterior ao Final da Intervencao*/

if (ie_tipo_guia_w = 5) and (qt_proc_alta_w > 0) then
	CALL pls_gravar_glosa_tiss('1607',
		'Existem servicos com a data do procedimento apos a data de saida da internacao da conta', ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;	
	
/* 1608 - Alta anterior a data de internacao */

if (dt_entrada_w > dt_alta_w) then
	CALL pls_gravar_glosa_tiss('1608',
		null, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;

/*  1610 - ?bito Mulher Invalido*/
	
if (ie_obito_mulher_w not in (1,2,3)) then
	CALL pls_gravar_glosa_tiss('1610',
		null, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;

/* Verificar se a guia de SP/SADT e internado */

if (ie_tipo_guia_w = '4') then
	if (coalesce(nr_seq_tipo_atend_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_tipo_atend_w
		from	pls_tipo_atendimento
		where	cd_tiss			= ie_tipo_atendimento_imp_w
		and	cd_estabelecimento	= cd_estabelecimento_p;
	end if;
	
	begin
	select	trim(both ie_internado)
	into STRICT	ie_internado_w
	from	pls_tipo_atendimento
	where	nr_sequencia	= nr_seq_tipo_atend_w;
	exception
	when others then
		ie_internado_w	:= 'N';
	end;
	
	--Se for encontrado algum tipo de atendimento que aponte o atendimento como sendo internacao, entao nem

	--olha mais pelo ie_regime_atendimento e ie_saude_Ocupacional na pls_parametros_tiss. Se nao encontrar

	--nenhuma regra pelo tipo de atendimento que aponte como internacao, entao procurara na pls_parametros tambem.
	if ( ie_internado_w <> 'S') then
	
		if (ie_regime_atendimento_w IS NOT NULL AND ie_regime_atendimento_w::text <> '') then
		
			--Restringe por ie_internado = S pois o valor default da variavel  eh N e basta achar uma regra cujo ie_internado = S que seja

			--vigente, para ser o suficiente.
			select	coalesce(max(ie_internado), 'N')
			into STRICT	ie_internado_w
			from	pls_parametros_tiss
			where	ie_regime_atendimento = ie_regime_atendimento_w
			and 	dt_inicio_vigencia <= dt_atendimento_w
			and 	dt_fim_vigencia >= dt_atendimento_w
			and 	ie_internado = 'S'
			and 	ie_situacao = 'A';
			
		end if;		
	end if;
	
	if ( ie_internado_w <> 'S') then
	
		--Se for encontrado algum regime de atendimento que aponte o atendimento como sendo internacao, entao nem

		--olha mais pelo  ie_saude_Ocupacional na pls_parametros_tiss. Se nao encontrar

		--nenhuma regra pelo tipo de atendimento que aponte como internacao, entao procurara 

		--por regras com campo ie_saude_ocupacional na pls_parametros tambem.
		if (ie_saude_ocupacional_w IS NOT NULL AND ie_saude_ocupacional_w::text <> '') then
		
			--Restringe por ie_internado = S pois o valor default da variavel  eh N e basta achar uma regra cujo ie_internado = S que seja

			--vigente, para ser o suficiente.
			select	coalesce(max(ie_internado), 'N')
			into STRICT	ie_internado_w
			from	pls_parametros_tiss
			where	ie_saude_ocupacional = ie_saude_ocupacional_w
			and 	dt_inicio_vigencia <= dt_atendimento_w
			and 	dt_fim_vigencia >= dt_atendimento_w
			and 	ie_internado = 'S'
			and 	ie_situacao = 'A';
			
		end if;		
	end if;
	
	
	if (coalesce(ie_internado_w,'X') = 'X') then
		ie_internado_w	:= 'N';
	end if;	
elsif (ie_tipo_guia_w = '5') or (ie_tipo_guia_w = '6') then
	ie_internado_w	:= 'S';
else
	ie_internado_w	:= 'N';
end if;

/* 1615   Internacao nao autorizada*/

if (ie_internado_w = 'S') and (cd_guia_referencia_w IS NOT NULL AND cd_guia_referencia_w::text <> '') and (qt_guia_aut_w = 0) then
	CALL pls_gravar_glosa_tiss('1615',
		null, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_consistir_atendimento ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, ds_parametro_um_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_segurado_p bigint) FROM PUBLIC;

