-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_desfazer_assumir_grupo_aud ( nr_seq_grupo_auditor_p bigint, nr_seq_auditoria_p bigint, ie_origem_desvinc_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_guia_w			bigint;
nr_seq_requisicao_w		bigint;
nr_seq_execucao_w		bigint;
nr_seq_grupo_w			bigint;
qt_reg_w			bigint;
dt_inicio_auditoria_w		timestamp;
nm_usuario_exec_w		varchar(30);
ds_historico_w			varchar(4000);


BEGIN

select	nr_seq_guia,
	nr_seq_requisicao,
	nr_seq_execucao
into STRICT	nr_seq_guia_w,
	nr_seq_requisicao_w,
	nr_seq_execucao_w
from	pls_auditoria
where	nr_sequencia = nr_seq_auditoria_p;

select	nr_seq_grupo,
	dt_inicio_auditoria,
	nm_usuario_exec
into STRICT	nr_seq_grupo_w,
	dt_inicio_auditoria_w,
	nm_usuario_exec_w
from	pls_auditoria_grupo
where	nr_sequencia = nr_seq_grupo_auditor_p;
/*
if	(nr_seq_guia_w is not null) then
	select	count(*)
	into	qt_reg_w
	from	pls_guia_plano_historico
	where	nr_seq_guia = nr_seq_guia_w
	and	nr_seq_item is not null
	and	nr_seq_grupo = nr_seq_grupo_w
	and	dt_historico > dt_inicio_auditoria_w;

elsif	(nr_seq_requisicao_w is not null) then
	select	count(*)
	into	qt_reg_w
	from	pls_requisicao_historico
	where	nr_seq_requisicao = nr_seq_requisicao_w
	and	nr_seq_item is not null
	and	nr_seq_grupo = nr_seq_grupo_w
	and	dt_historico > dt_inicio_auditoria_w;

elsif	(nr_seq_execucao_w is not null) then
	select	nr_seq_requisicao
	into	nr_seq_requisicao_w
	from	pls_execucao_requisicao
	where	nr_sequencia = nr_seq_execucao_w;

	select	count(*)
	into	qt_reg_w
	from	pls_requisicao_historico
	where	nr_seq_requisicao = nr_seq_requisicao_w
	and	nr_seq_item is not null
	and	nr_seq_grupo = nr_seq_grupo_w
	and	dt_historico > dt_inicio_auditoria_w;
end if;

if	(nvl(qt_reg_w,0) > 0) then

end if;*/
if (ie_origem_desvinc_p = 'L') then
	ds_historico_w	:= 'O auditor '||obter_nome_usuario(nm_usuario_exec_w)|| ' foi desvinculado automaticamente do grupo '
				||substr(pls_obter_nome_grupo_auditor(nr_seq_grupo_w),1,120)||' por ultrapassar o tempo limite da análise.';
elsif (ie_origem_desvinc_p = 'A') then
	ds_historico_w	:= 'O auditor '||obter_nome_usuario(nm_usuario_exec_w)|| ' se desvinculou do grupo '
				||substr(pls_obter_nome_grupo_auditor(nr_seq_grupo_w),1,120)||'.';
elsif (ie_origem_desvinc_p = 'J') then
	ds_historico_w	:= 'O auditor '||obter_nome_usuario(nm_usuario_exec_w)|| ' foi desvinculado do grupo '
				||substr(pls_obter_nome_grupo_auditor(nr_seq_grupo_w),1,120)||' após ter solicitado justificativa ao prestador.';
elsif (ie_origem_desvinc_p = 'N') then
	ds_historico_w	:= 'O auditor '||obter_nome_usuario(nm_usuario_exec_w)|| ' foi desvinculado do grupo '
				||substr(pls_obter_nome_grupo_auditor(nr_seq_grupo_w),1,120)||' após ter solicitado notificação ao call center.';
elsif (ie_origem_desvinc_p = 'U') then
	ds_historico_w	:= 'O auditor '||obter_nome_usuario(nm_usuario_exec_w)|| ' foi desvinculado do grupo '
				||substr(pls_obter_nome_grupo_auditor(nr_seq_grupo_w),1,120)||' pelo usuário '|| obter_nome_usuario(nm_usuario_p) ||'.';
elsif (ie_origem_desvinc_p = 'I') then
	ds_historico_w	:= 'O auditor '||obter_nome_usuario(nm_usuario_exec_w)|| ' foi desvinculado do grupo '
				||substr(pls_obter_nome_grupo_auditor(nr_seq_grupo_w),1,120)||' após ter solicitado um processo interno.';
end if;


update	pls_auditoria_grupo
set	nm_usuario_exec  = NULL,
	dt_inicio_auditoria  = NULL,
	dt_atualizacao = clock_timestamp(),
	nm_usuario = nm_usuario_p
where	nr_sequencia = nr_seq_grupo_auditor_p;

if (nr_seq_guia_w	<> 0) then
	CALL pls_guia_gravar_historico(	nr_seq_guia_w, null, ds_historico_w,
					null, nm_usuario_p);
elsif (nr_seq_requisicao_w	<> 0) then
	CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w, 'L', ds_historico_w,
					null, nm_usuario_p);
elsif (nr_seq_execucao_w	<> 0) then
	select	nr_seq_requisicao
	into STRICT	nr_seq_requisicao_w
	from	pls_execucao_requisicao
	where	nr_sequencia = nr_seq_execucao_w;

	CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w, 'L', ds_historico_w,
					nr_seq_execucao_w, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_desfazer_assumir_grupo_aud ( nr_seq_grupo_auditor_p bigint, nr_seq_auditoria_p bigint, ie_origem_desvinc_p text, nm_usuario_p text) FROM PUBLIC;

