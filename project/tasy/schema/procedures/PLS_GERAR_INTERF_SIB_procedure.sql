-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_interf_sib ( dt_referencia_p timestamp, nr_seq_operadora_p bigint, nr_seq_lote_sib_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_gerar_todos_p text) AS $body$
DECLARE


/* ie_gerar_todos_p
E - Exclusao de todos
S - Inclusao de todos
N - Inclusao/Alteracao/Exclusao do mes de referencia
*/
nr_seq_alt_w			smallint;
cd_cgc_w			varchar(14);
cd_ans_w			varchar(20);
nr_seq_arquivo_w		integer;
nr_seq_reg_arquivo_w		integer;
nr_seq_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nm_beneficiario_w		pls_interf_sib.nm_beficiario%type;
dt_nascimento_w			timestamp;
ie_sexo_w			smallint;
ie_sexo_benef_w			varchar(1);
nr_pis_pasep_w			varchar(11);
nm_mae_benef_w			varchar(60);
cd_cns_w			varchar(30);
nr_identidade_w			varchar(15);
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
cd_nacionalidade_w		varchar(8);
nr_anos_w			double precision;
cd_usuario_plano_w		varchar(30);
dt_geracao_w			timestamp;
nr_seq_titular_w		bigint;
cd_usuario_plano_tit_w		varchar(30);
nr_seq_carteira_w		bigint;
nr_cpf_w			varchar(11);
ie_brasileiro_w			varchar(1);
nr_seq_plano_w			bigint;
nr_seq_contrato_w		bigint;
ie_tipo_contratacao_w		varchar(2);
ie_regulamentacao_w		varchar(2);
cd_cgc_estipulante_w		varchar(14);
cd_plano_ans_w			varchar(20);
cd_plano_ans_pre_w		varchar(20);
cd_segmentacao_pre_w		integer;
cd_abrangencia_pre_w		integer;
tp_contratacao_pre_w		integer;
ie_segmentacao_w		varchar(2);
ie_abrangencia_w		varchar(2);
ie_participacao_w		varchar(2);
dt_liberacao_w			timestamp;
nr_seq_parentesco_w		bigint;
qt_coparticipacao_w		smallint;
qt_franquia_w			smallint;
ie_franquia_coparticipacao_w	smallint;
ds_logradouro_w			varchar(100);
ds_numero_w			varchar(5);
ds_complemento_w		varchar(15);
ds_bairro_w			varchar(50);
ds_municipio_w			varchar(50);
uf_w				compl_pessoa_fisica.sg_estado%type;
cep_w				varchar(15);
ie_carencia_temp_w		smallint;
cd_vinculo_benef_w		varchar(2);
ie_tipo_reg_w			bigint;
dt_cancelamento_w		timestamp;
dt_reinclusao_w			timestamp;
cd_motivo_w			smallint;
dt_adaptacao_w			timestamp;
ie_contem_registro_w		varchar(1);
qt_tipo1_w 			integer;
qt_tipo2_w 			integer;
qt_tipo3_w 			integer;
dt_mesano_referencia_w		timestamp;
nr_seq_historico_w		bigint;
ie_tipo_historico_w		varchar(2);
nr_seq_motivo_cancelamento_w	bigint;
qt_registros_incosistentes_w	bigint;
cd_usuario_ant_w		varchar(30);
nr_seq_pais_w			bigint;
cd_pais_sib_w			varchar(30);
ie_enviar_ans_w			varchar(1);
nr_seq_tasy_ans_w		bigint;
nr_seq_portabilidade_w		bigint;
nr_prot_ans_origem_w		varchar(20);
qt_alteracao_portab_w		bigint;
qt_exclusao_portab_w		bigint;
ie_portabilidade_w		varchar(1);
ie_itens_excluid_cobertura_w	pls_interf_sib.ie_itens_excluid_cobertura%type;
ie_scpa_contrato_w		pls_parametros.ie_scpa_contrato%type;
dt_contratacao_w		pls_segurado.dt_contratacao%type;
dt_rescisao_w			pls_segurado.dt_rescisao%type;

c01 CURSOR FOR
	SELECT 	distinct
		1 ie_tipo_reg,
		a.nr_sequencia,
		a.cd_pessoa_fisica,
		substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69) nm_beficiario,
		b.dt_nascimento,
		CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
		coalesce(b.nr_cpf,'00000000000'),
		coalesce(b.nr_pis_pasep,'00000000000'),
		substr(coalesce(obter_compl_pf(b.cd_pessoa_fisica,5,'NPR'),obter_compl_pf(b.cd_pessoa_fisica,5,'N')),1,59) nm_mae_benef,
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		(obter_idade(b.dt_nascimento,clock_timestamp(),'A'))::numeric ,
        	a.nr_seq_titular,
	        a.nr_seq_contrato,
		a.nr_seq_plano,
		c.ie_tipo_contratacao,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN  coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN  e.cd_scpa  ELSE c.cd_scpa END  END ,
		c.ie_segmentacao,
		c.ie_abrangencia,
		coalesce(e.ie_participacao,c.ie_participacao),
		a.dt_contratacao,
		nr_seq_parentesco,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'ES'),1,30),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'NR'),1,5),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CO'),1,15),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'B'),1,20),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CDM'),1,10),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'UF'),1,5),
		coalesce(lpad(substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CEP'),1,8),8,'0'),'00000000'),
		null 			dt_rescisao,
		a.dt_contratacao	dt_mesano_referencia,
		null,
		a.dt_reativacao,
		coalesce(b.nr_seq_pais,0),
		null ie_enviar_ans,
		0 nr_seq_tasy_ans,
		coalesce(a.nr_seq_portabilidade,0)
	FROM pls_contrato e, pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica  and a.nr_seq_contrato = e.nr_sequencia and a.nr_seq_plano = c.nr_sequencia and e.cd_estabelecimento = cd_estabelecimento_p and e.ie_tipo_beneficiario <> 'ENB' and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and ie_gerar_todos_p = 'S' and trunc(a.dt_contratacao,'month') < trunc(dt_referencia_p,'month') and (trunc(a.dt_rescisao,'dd') >= trunc(dt_referencia_p,'dd') or (coalesce(a.dt_rescisao::text, '') = '')) and coalesce(a.dt_cancelamento::text, '') = '' and pls_obter_dados_seg_mes(a.nr_sequencia, dt_referencia_p, 'S') = '1' and exists (SELECT	1
			from	pls_segurado_cart_ant x
			where	a.nr_sequencia	= x.nr_seq_segurado
			and	x.ie_sistema_anterior	= 'S')
	
union

	select 	distinct
		1 ie_tipo_reg,
		a.nr_sequencia,
		a.cd_pessoa_fisica,
		substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69) nm_beficiario,
		b.dt_nascimento,
		CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
		coalesce(b.nr_cpf,'00000000000'),
		coalesce(b.nr_pis_pasep,'00000000000'),
		substr(coalesce(obter_compl_pf(b.cd_pessoa_fisica,5,'NPR'),obter_compl_pf(b.cd_pessoa_fisica,5,'N')),1,59) nm_mae_benef,
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		(obter_idade(b.dt_nascimento,clock_timestamp(),'A'))::numeric ,
        	a.nr_seq_titular,
	        a.nr_seq_contrato,
		a.nr_seq_plano,
		c.ie_tipo_contratacao,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN  coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN  e.cd_scpa  ELSE c.cd_scpa END  END ,
		c.ie_segmentacao,
		c.ie_abrangencia,
		coalesce(e.ie_participacao,c.ie_participacao),
		a.dt_contratacao,
		nr_seq_parentesco,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'ES'),1,30),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'NR'),1,5),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CO'),1,15),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'B'),1,20),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CDM'),1,10),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'UF'),1,5),
		coalesce(lpad(substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CEP'),1,8),8,'0'),'00000000'),
		null 			dt_rescisao,
		a.dt_contratacao	dt_mesano_referencia,
		null,
		a.dt_reativacao,
		coalesce(b.nr_seq_pais,0),
		null ie_enviar_ans,
		0 nr_seq_tasy_ans,
		coalesce(a.nr_seq_portabilidade,0)
	FROM pls_contrato e, pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica  and a.nr_seq_contrato = e.nr_sequencia and a.nr_seq_plano = c.nr_sequencia and e.cd_estabelecimento = cd_estabelecimento_p and e.ie_tipo_beneficiario <> 'ENB' and trunc(a.dt_contratacao,'month') = trunc(add_months(dt_referencia_p,-1),'month') and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and ie_gerar_todos_p = 'N' and coalesce(a.dt_cancelamento::text, '') = ''
	 
union

	select 	distinct
		2 ie_tipo_reg,
		a.nr_sequencia,
		a.cd_pessoa_fisica,
		substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69) nm_beficiario,
		b.dt_nascimento,
		CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
		coalesce(b.nr_cpf,'00000000000'),
		coalesce(b.nr_pis_pasep,'00000000000'),
		substr(coalesce(obter_compl_pf(b.cd_pessoa_fisica,5,'NPR'),obter_compl_pf(b.cd_pessoa_fisica,5,'N')),1,59) nm_mae_benef,
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		(obter_idade(b.dt_nascimento,clock_timestamp(),'A'))::numeric ,
        	a.nr_seq_titular,
	        a.nr_seq_contrato,
		a.nr_seq_plano,
		c.ie_tipo_contratacao,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN  coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN  e.cd_scpa  ELSE c.cd_scpa END  END ,
		c.ie_segmentacao,
		c.ie_abrangencia,
		coalesce(e.ie_participacao,c.ie_participacao),
		a.dt_contratacao,
		nr_seq_parentesco,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'ES'),1,30),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'NR'),1,5),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CO'),1,15),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'B'),1,20),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CDM'),1,10),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'UF'),1,5),
		coalesce(lpad(substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CEP'),1,8),8,'0'),'00000000'),
		a.dt_rescisao,
		null dt_mesano_referencia,
		null,
		a.dt_reativacao,
		coalesce(b.nr_seq_pais,0),
		null ie_enviar_ans,
		0 nr_seq_tasy_ans,
		coalesce(a.nr_seq_portabilidade,0)
	FROM pls_contrato e, pls_segurado_historico d, pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica  and a.nr_sequencia = d.nr_seq_segurado and e.cd_estabelecimento = cd_estabelecimento_p and d.ie_tipo_historico in (2,4,8,12) and e.ie_tipo_beneficiario <> 'ENB' and a.nr_seq_plano = c.nr_sequencia and a.nr_seq_contrato = e.nr_sequencia and trunc(coalesce(dt_ocorrencia_sib,dt_historico),'month') = trunc(add_months(dt_referencia_p,-1),'month') and (a.dt_reativacao > a.dt_rescisao or (coalesce(a.dt_reativacao::text, '') = '' and coalesce(a.dt_rescisao::text, '') = '')) and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and ie_gerar_todos_p = 'N' and coalesce(a.dt_cancelamento::text, '') = ''
	 
union

	select 	distinct
		2 ie_tipo_reg,
		a.nr_sequencia,
		a.cd_pessoa_fisica,
		substr(b.nm_pessoa_fisica,1,59) nm_beficiario,
		b.dt_nascimento,
		CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
		b.nr_cpf,
		b.nr_pis_pasep,
		b.nm_mae_pessoa_fisica,
		substr(b.nr_cartao_nac_sus,1,15),
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		(obter_idade(b.dt_nascimento,clock_timestamp(),'A'))::numeric ,
        	a.nr_seq_titular,
	        a.nr_seq_contrato,
		a.nr_seq_plano,
		c.ie_tipo_contratacao,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN  coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN  e.cd_scpa  ELSE c.cd_scpa END  END ,
		c.ie_segmentacao,
		c.ie_abrangencia,
		coalesce(e.ie_participacao,c.ie_participacao),
		a.dt_contratacao,
		a.nr_seq_parentesco,
		b.ds_endereco,
		to_char(b.nr_endereco),
		b.ds_complemento,
		b.ds_bairro,
		b.cd_municipio_ibge,
		b.sg_estado,
		b.cd_cep,
		a.dt_rescisao,
		b.dt_geracao dt_mesano_referencia,
		null,
		a.dt_reativacao,
		coalesce(b.nr_seq_pais,0),
		null ie_enviar_ans,
		0 nr_seq_tasy_ans,
		coalesce(a.nr_seq_portabilidade,0)
	from	pls_segurado a,
		pls_plano c,
		pls_segurado_sib b,
		pls_contrato e
	where  	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	a.nr_sequencia	= b.nr_seq_segurado
	and	a.nr_seq_plano = c.nr_sequencia
	and	a.nr_seq_contrato = e.nr_sequencia
	and	e.cd_estabelecimento = cd_estabelecimento_p
	and	e.ie_tipo_beneficiario <> 'ENB'
	and (a.dt_reativacao > a.dt_rescisao or (coalesce(a.dt_reativacao::text, '') = '' and coalesce(a.dt_rescisao::text, '') = ''))
	and 	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	((b.nm_pessoa_fisica	<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'N')) or (b.dt_nascimento 	<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'DN')) or (b.ie_sexo 		<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'S')) or (b.nm_mae_pessoa_fisica <> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'NM')) or (b.ds_endereco 	<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'E')) or (b.nr_endereco 	<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'NR')) or (b.ds_bairro 		<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'B')) or (b.cd_municipio_ibge 	<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'M')) or (b.sg_estado 		<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'SG')) or (b.cd_cep 		<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'CEP')) or (b.nr_cartao_nac_sus 	<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'CNS')) or (b.nr_identidade 	<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'I')) or (b.ds_orgao_emissor_ci <> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'OI')) or (b.cd_nacionalidade 	<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'NA')) or (b.nr_pis_pasep 	<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'PIS')) or (b.nr_cpf 		<> pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'CPF')) or (coalesce(pls_obter_dados_segurado_ant(b.nr_seq_segurado,b.nr_sequencia,'N')::text, '') = ''))
	and	trunc(a.dt_contratacao,'month') < trunc(add_months(dt_referencia_p,-1),'month')
	and	trunc(b.dt_geracao,'month') = trunc(dt_referencia_p,'month')
	and	ie_gerar_todos_p = 'N'
	and	not exists (select 1
				from   	pls_segurado_historico d
				where	trunc(coalesce(d.dt_ocorrencia_sib,d.dt_historico),'month') = trunc(add_months(dt_referencia_p,-1),'month')
				and	d.nr_seq_segurado = a.nr_sequencia)
	and	coalesce(a.dt_cancelamento::text, '') = ''
	
union

	select 	distinct
		3 ie_tipo_reg,
		a.nr_sequencia,
		a.cd_pessoa_fisica,
		substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69) nm_beficiario,
		b.dt_nascimento,
		CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
		coalesce(b.nr_cpf,'00000000000'),
		coalesce(b.nr_pis_pasep,'00000000000'),
		substr(coalesce(obter_compl_pf(b.cd_pessoa_fisica,5,'NPR'),obter_compl_pf(b.cd_pessoa_fisica,5,'N')),1,59) nm_mae_benef,
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		(obter_idade(b.dt_nascimento,clock_timestamp(),'A'))::numeric ,
        	a.nr_seq_titular,
	        a.nr_seq_contrato,
		a.nr_seq_plano,
		c.ie_tipo_contratacao,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN  coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN  e.cd_scpa  ELSE c.cd_scpa END  END ,
		c.ie_segmentacao,
		c.ie_abrangencia,
		coalesce(e.ie_participacao,c.ie_participacao),
		a.dt_contratacao,
		nr_seq_parentesco,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'ES'),1,30),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'NR'),1,5),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CO'),1,15),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'B'),1,20),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CDM'),1,10),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'UF'),1,5),
		coalesce(lpad(substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CEP'),1,8),8,'0'),'00000000'),
		a.dt_rescisao,
		a.dt_rescisao dt_mesano_referencia,
		coalesce(to_char(nr_seq_motivo_cancelamento),'01') nr_seq_motivo_cancelamento,
		a.dt_reativacao,
		coalesce(b.nr_seq_pais,0),
		null ie_enviar_ans,
		0 nr_seq_tasy_ans,
		coalesce(a.nr_seq_portabilidade,0)
	FROM pls_contrato e, pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica  and e.ie_tipo_beneficiario <> 'ENB' and a.nr_seq_contrato = e.nr_sequencia and a.nr_seq_plano = c.nr_sequencia and e.cd_estabelecimento = cd_estabelecimento_p and ie_gerar_todos_p = 'N' --	and	a.nr_seq_motivo_cancelamento is not null
  and trunc(a.dt_rescisao,'month') = trunc(add_months(dt_referencia_p,-1),'month') and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(a.dt_cancelamento::text, '') = ''
	 
UNION

	select 	distinct
		3 ie_tipo_reg,
		a.nr_sequencia,
		a.cd_pessoa_fisica,
		substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69) nm_beficiario,
		b.dt_nascimento,
		CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
		coalesce(b.nr_cpf,'00000000000'),
		coalesce(b.nr_pis_pasep,'00000000000'),
		substr(coalesce(obter_compl_pf(b.cd_pessoa_fisica,5,'NPR'),obter_compl_pf(b.cd_pessoa_fisica,5,'N')),1,59) nm_mae_benef,
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		(obter_idade(b.dt_nascimento,clock_timestamp(),'A'))::numeric ,
        	a.nr_seq_titular,
	        a.nr_seq_contrato,
		a.nr_seq_plano,
		c.ie_tipo_contratacao,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN  coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN  e.cd_scpa  ELSE c.cd_scpa END  END ,
		c.ie_segmentacao,
		c.ie_abrangencia,
		coalesce(e.ie_participacao,c.ie_participacao),
		a.dt_contratacao,
		nr_seq_parentesco,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'ES'),1,30),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'NR'),1,5),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CO'),1,15),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'B'),1,20),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CDM'),1,10),
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'UF'),1,5),
		coalesce(lpad(substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CEP'),1,8),8,'0'),'00000000'),
		clock_timestamp()		dt_rescisao,
		a.dt_contratacao	dt_mesano_referencia,
		null,
		a.dt_reativacao,
		coalesce(b.nr_seq_pais,0),
		null ie_enviar_ans,
		0 nr_seq_tasy_ans,
		coalesce(a.nr_seq_portabilidade,0)
	FROM pls_contrato e, pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica  and a.nr_seq_contrato = e.nr_sequencia and a.nr_seq_plano = c.nr_sequencia and e.cd_estabelecimento = cd_estabelecimento_p and e.ie_tipo_beneficiario <> 'ENB' and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and ie_gerar_todos_p = 'E' and trunc(a.dt_contratacao,'month') < trunc(dt_referencia_p,'month') and (trunc(a.dt_rescisao,'dd') >= trunc(dt_referencia_p,'dd') or (coalesce(a.dt_rescisao::text, '') = '')) and coalesce(a.dt_cancelamento::text, '') = ''
	 
UNION

	select 	distinct /* Gerar lote de alteracao do retorno do SIB */
		4 ie_tipo_reg,
		a.nr_sequencia,
		a.cd_pessoa_fisica,
		substr(coalesce(l.nm_pessoa_fisica,d.nm_pessoa_fisica),1,69) nm_beficiario,
		d.dt_nascimento,
		CASE WHEN d.ie_sexo='M' THEN 1  ELSE CASE WHEN d.ie_sexo='F' THEN 3  ELSE 0 END  END ,
		d.nr_cpf,
		d.nr_pis_pasep,
		substr(coalesce(obter_compl_pf(d.cd_pessoa_fisica,5,'NPR'),obter_compl_pf(d.cd_pessoa_fisica,5,'N')),1,59) nm_mae_pessoa_fisica,
		coalesce(substr(d.nr_cartao_nac_sus,1,15),'000000000000000') nr_cartao_nac_sus,
		d.nr_identidade,
		d.ds_orgao_emissor_ci,
		d.cd_nacionalidade,
		(obter_idade(d.dt_nascimento,clock_timestamp(),'A'))::numeric ,
        	a.nr_seq_titular,
	        a.nr_seq_contrato,
		a.nr_seq_plano,
		c.ie_tipo_contratacao,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN  coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN  e.cd_scpa  ELSE c.cd_scpa END  END ,
		c.ie_segmentacao,
		c.ie_abrangencia,
		coalesce(e.ie_participacao,c.ie_participacao),
		a.dt_contratacao,
		nr_seq_parentesco,
		substr(obter_compl_pf(d.cd_pessoa_fisica,1,'EN'),1,30) ds_endereco,
		substr(obter_compl_pf(d.cd_pessoa_fisica,1,'NR'),1,5) nr_endereco,
		substr(obter_compl_pf(d.cd_pessoa_fisica,1,'CO'),1,15) ds_complemento,
		substr(obter_compl_pf(d.cd_pessoa_fisica,1,'B'),1,20) ds_bairro,
		substr(obter_compl_pf(d.cd_pessoa_fisica,1,'CDM'),1,10) cd_municipio_ibge,
		substr(obter_compl_pf(d.cd_pessoa_fisica,1,'UF'),1,5) sg_estado,
		coalesce(lpad(substr(obter_compl_pf(d.cd_pessoa_fisica,1,'CEP'),1,8),8,'0'),'00000000') cd_cep,
		a.dt_rescisao,
		dt_referencia_p dt_mesano_referencia,
		null,
		a.dt_reativacao,
		coalesce(d.nr_seq_pais,0),
		f.ie_enviar_ans,
		f.nr_sequencia nr_seq_tasy_ans,
		coalesce(a.nr_seq_portabilidade,0)
	FROM pls_sib_tasy_ans f, pls_contrato e, pls_plano c, pls_segurado a, pessoa_fisica d
LEFT OUTER JOIN pls_pessoa_fisica l ON (d.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.nr_seq_plano	= c.nr_sequencia  and a.cd_pessoa_fisica	= d.cd_pessoa_fisica and a.nr_seq_contrato	= e.nr_sequencia and a.nr_sequencia	= f.nr_seq_segurado and e.cd_estabelecimento = cd_estabelecimento_p and ie_gerar_todos_p	= 'N' and f.ie_enviar_ans 	<> 'T' and f.ie_tasy_ans		= 'S' and coalesce(f.nr_seq_lote_sib::text, '') = '' --and	f.nr_seq_lote	= nr_seq_lote_retorno_p
 order by 1;

c02 CURSOR FOR
	SELECT 	distinct
		substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69) nm_beficiario,
		b.dt_nascimento,
		b.ie_sexo,
		coalesce(b.nr_cpf,'00000000000'),
		substr(coalesce(obter_compl_pf(b.cd_pessoa_fisica,5,'NPR'),obter_compl_pf(b.cd_pessoa_fisica,5,'N')),1,59) nm_mae_benef,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'EN'),1,30) ds_endereco,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'NR'),1,5) nr_endereco,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CO'),1,15) ds_complemento,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'B'),1,20) ds_bairro,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CDM'),1,10) cd_municipio_ibge,
		substr(obter_compl_pf(b.cd_pessoa_fisica,1,'UF'),1,5) sg_estado,
		coalesce(lpad(substr(obter_compl_pf(b.cd_pessoa_fisica,1,'CEP'),1,8),8,'0'),'00000000') cd_cep,
		coalesce(b.nr_cartao_nac_sus,'000000000000000') cd_cns,
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		coalesce(b.cd_nacionalidade,'000'),
		a.nr_sequencia,
		a.cd_pessoa_fisica,
		coalesce(b.nr_pis_pasep,'00000000000'),
		b.nr_seq_pais,
		pls_obter_dados_segurado(a.nr_sequencia,'C') cd_usuario_plano,
		a.dt_contratacao,
		a.dt_rescisao,
		a.nr_seq_motivo_cancelamento,
		a.nr_seq_parentesco
	FROM pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica  and a.nr_seq_plano = c.nr_sequencia and a.cd_estabelecimento = cd_estabelecimento_p and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(a.dt_cancelamento::text, '') = '';


BEGIN

delete FROM pls_interf_sib
where  nr_seq_lote_sib = nr_seq_lote_sib_p;

delete	FROM pls_segurado_sib
where	trunc(dt_geracao,'month') = trunc(dt_referencia_p,'month');

select	coalesce(max(a.ie_scpa_contrato), 'N')
into STRICT	ie_scpa_contrato_w
from	pls_parametros a
where	cd_estabelecimento = cd_estabelecimento_p;

open c02;
loop
fetch c02 into
	nm_beneficiario_w,
	dt_nascimento_w,
	ie_sexo_benef_w,
	nr_cpf_w,
	nm_mae_benef_w,
	ds_logradouro_w,
	ds_numero_w,
	ds_complemento_w,
	ds_bairro_w,
	ds_municipio_w,
	uf_w,
	cep_w,
	cd_cns_w,
	nr_identidade_w,
	ds_orgao_emissor_ci_w,
	cd_nacionalidade_w,
	nr_seq_segurado_w,
	cd_pessoa_fisica_w,
	nr_pis_pasep_w,
	nr_seq_pais_w,
	cd_usuario_plano_w,
	dt_contratacao_w,
	dt_rescisao_w,
	nr_seq_motivo_cancelamento_w,
	nr_seq_parentesco_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	insert into pls_segurado_sib(nr_sequencia,
					nm_pessoa_fisica,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_nascimento,
					ie_sexo,
					nr_cpf,
					nm_mae_pessoa_fisica,
					ds_endereco,
					nr_endereco,
					ds_complemento,
					ds_bairro,
					cd_municipio_ibge,
					sg_estado,
					cd_cep,
					nr_cartao_nac_sus,
					nr_identidade,
					ds_orgao_emissor_ci,
					dt_geracao,
					nr_seq_segurado,
					cd_pessoa_fisica,
					nr_pis_pasep,
					nr_seq_lote_sib,
					nr_seq_pais,
					cd_usuario_plano,
					dt_contratacao,
					dt_rescisao,
					nr_seq_motivo_cancelamento,
					nr_seq_parentesco)
	values (nextval('pls_segurado_sib_seq'),
					nm_beneficiario_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					dt_nascimento_w,
					ie_sexo_benef_w,
					nr_cpf_w,
					nm_mae_benef_w,
					ds_logradouro_w,
					ds_numero_w,
					ds_complemento_w,
					ds_bairro_w,
					ds_municipio_w,
					CASE WHEN uf_w='IN' THEN 'EX'  ELSE uf_w END ,
					cep_w,
					cd_cns_w,
					nr_identidade_w,
					ds_orgao_emissor_ci_w,
					dt_referencia_p,
					nr_seq_segurado_w,
					cd_pessoa_fisica_w,
					nr_pis_pasep_w,
					nr_seq_lote_sib_p,
					nr_seq_pais_w,
					cd_usuario_plano_w,
					dt_contratacao_w,
					dt_rescisao_w,
					nr_seq_motivo_cancelamento_w,
					nr_seq_parentesco_w);
	end;
end loop;
close c02;

commit;

select  max(b.cd_cgc_outorgante),
	max(b.cd_ans)
into STRICT 	cd_cgc_w,
	cd_ans_w
from	pls_plano a,
	pls_outorgante b
where 	a.nr_seq_outorgante = b.nr_sequencia
and	b.nr_sequencia = coalesce(nr_seq_operadora_p,b.nr_sequencia);

select 	coalesce(max(nr_seq_arquivo),0) + 1
into STRICT	nr_seq_arquivo_w
from	pls_interf_sib;

nr_seq_reg_arquivo_w := 1;

select	dt_geracao
into STRICT	dt_geracao_w
from	pls_lote_sib
where	nr_sequencia = nr_seq_lote_sib_p;

insert into pls_interf_sib(nr_sequencia,
	ie_tipo_reg,
	dt_geracao_arquivo,
	cd_ans,
	cd_cgc,
	nr_seq_arquivo,
	dt_mesano_referencia,
	benef,
	ds_constante,
	ds_modalidade,
	ds_branco,
	zero,
	nr_seq_lote_sib)
values (nr_seq_reg_arquivo_w,
	0,
	dt_geracao_w,
	cd_ans_w,
	cd_cgc_w,
	nr_seq_arquivo_w,
	dt_referencia_p,
	'BENEF',
	'V01',
	'O',
	' ',
	0,
	nr_seq_lote_sib_p);

ie_contem_registro_w := 'N';

open c01;
loop
fetch c01 into	ie_tipo_reg_w,
		nr_seq_segurado_w,
		cd_pessoa_fisica_w,
		nm_beneficiario_w,
		dt_nascimento_w,
		ie_sexo_w,
		nr_cpf_w,
		nr_pis_pasep_w,
		nm_mae_benef_w,
		cd_cns_w,
		nr_identidade_w,
		ds_orgao_emissor_ci_w,
		cd_nacionalidade_w,
		nr_anos_w,
		nr_seq_titular_w,
		nr_seq_contrato_w,
		nr_seq_plano_w,
		ie_tipo_contratacao_w,
		ie_regulamentacao_w,
		cd_plano_ans_w,
		cd_plano_ans_pre_w,
		ie_segmentacao_w,
		ie_abrangencia_w,
		ie_participacao_w,
		dt_liberacao_w,
		nr_seq_parentesco_w,
		ds_logradouro_w,
		ds_numero_w,
		ds_complemento_w,
		ds_bairro_w,
		ds_municipio_w,
		uf_w,
		cep_w,
		dt_cancelamento_w,
		dt_mesano_referencia_w,
		nr_seq_motivo_cancelamento_w,
		dt_reinclusao_w,
		nr_seq_pais_w,
		ie_enviar_ans_w,
		nr_seq_tasy_ans_w,
		nr_seq_portabilidade_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	ie_contem_registro_w  	:= 'S';
	cd_pais_sib_w		:= null;
	ie_portabilidade_w	:= 'N';
	
	if (nr_seq_pais_w <> 0) then
		select	cd_pais_sib
		into STRICT	cd_pais_sib_w
		from	pais
		where	nr_sequencia	= nr_seq_pais_w;
	end if;	
	
	select 	lpad(replace(replace(coalesce(max(cd_usuario_ant),0), '.', ''), '-', ''),17,0)
	into STRICT	cd_usuario_ant_w
	from	pls_segurado_cart_ant
	where	nr_seq_segurado		= nr_seq_segurado_w
	and	coalesce(ie_sistema_anterior,'N')	= 'S';
	
	if (ie_tipo_reg_w = 2) then
		select	count(1)
		into STRICT	qt_alteracao_portab_w
		from	pls_interf_sib
		where	ie_tipo_reg	= 2
		and	cd_motivo	= 43
		and	nr_seq_segurado	= nr_seq_segurado_w;
		
		if (qt_alteracao_portab_w	= 0) and (coalesce(nr_seq_portabilidade_w,0) > 0) then
			ie_portabilidade_w	:= 'S';
		end if;
		
		if (ie_portabilidade_w	= 'S') then
			select	dt_solicitacao
			into STRICT	dt_adaptacao_w
			from	pls_segurado a,
				pls_portab_pessoa b
			where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
			and	a.nr_sequencia	= nr_seq_segurado_w;
		elsif (coalesce(dt_mesano_referencia_w::text, '') = '') and (coalesce(dt_reinclusao_w::text, '') = '') then
			select 	max(nr_sequencia)
			into STRICT	nr_seq_historico_w
			from 	pls_segurado_historico
			where	nr_seq_segurado = nr_seq_segurado_w
			and	trunc(coalesce(dt_ocorrencia_sib,dt_historico),'month') = trunc(add_months(dt_referencia_p,-1),'month');
			
			if (coalesce(nr_seq_historico_w,0) > 0) then
				select 	max(dt_reativacao),
					max(coalesce(dt_ocorrencia_sib,dt_historico)),
					max(ie_tipo_historico),
					max(coalesce(dt_migracao,dt_historico))
				into STRICT 	dt_reinclusao_w,
					dt_mesano_referencia_w,
					ie_tipo_historico_w,
					dt_adaptacao_w
				from	pls_segurado_historico
				where	nr_sequencia = nr_seq_historico_w;
			end if;
		end if;
		if (coalesce(dt_adaptacao_w::text, '') = '') then
			select	pls_obter_data_alt_pessoa(cd_pessoa_fisica_w,trunc(add_months(dt_referencia_p,-1),'month'))
			into STRICT	dt_adaptacao_w
			;
		end if;
	end if;
	
	select 	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_carteira_w
	from	pls_segurado_carteira
	where	nr_seq_segurado		= nr_seq_segurado_w
	and	dt_inicio_vigencia	=
			(SELECT	max(dt_inicio_vigencia)
			from	pls_segurado_carteira
			where	nr_seq_segurado	= nr_seq_segurado_w);
	if (nr_seq_carteira_w > 0) then
		
		select 	cd_usuario_plano
		into STRICT	cd_usuario_plano_w
		from	pls_segurado_carteira
		where	nr_sequencia	= nr_seq_carteira_w;
		
	end if;
	
	cd_usuario_plano_tit_w	:= '';
	
	if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
		
		/*select	max(substr(obter_compl_pf(b.cd_pessoa_fisica,5,'N'),1,59)) nm_mae_benef,
			max(nvl(b.nr_cpf,'00000000000')),
			max(nvl(b.nr_pis_pasep,'00000000000')),
			max(nvl(b.nr_cartao_nac_sus,'000000000000000')) cd_cns
		into	nm_mae_benef_w,
			nr_cpf_w,
			nr_pis_pasep_w,
			cd_cns_w
		from 	pls_segurado a,
			pessoa_fisica b
		where  	a.cd_pessoa_fisica = b.cd_pessoa_fisica
		and	a.nr_sequencia = nr_seq_titular_w; */
		
		select 	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_carteira_w
		from	pls_segurado_carteira
		where	nr_seq_segurado		= nr_seq_titular_w
		and	dt_inicio_vigencia	=
				(SELECT	max(dt_inicio_vigencia)
				from	pls_segurado_carteira
				where	nr_seq_segurado	= nr_seq_titular_w);
		
		if (nr_seq_carteira_w > 0) then
			select 	cd_usuario_plano
			into STRICT	cd_usuario_plano_tit_w
			from	pls_segurado_carteira
			where	nr_sequencia	= nr_seq_carteira_w;
		end if;
	end if;
	
	cd_cgc_estipulante_w	:= null;
	
	if (ie_tipo_contratacao_w = 'CE') then
		select 	cd_cgc_estipulante
		into STRICT	cd_cgc_estipulante_w
		from 	pls_contrato
		where 	nr_sequencia = nr_seq_contrato_w;
	end if;
	
	cd_segmentacao_pre_w	:= 0;
	cd_abrangencia_pre_w	:= 0;
	tp_contratacao_pre_w	:= 0;
	
	if (cd_plano_ans_w = 0) and (ie_regulamentacao_w = 'R') then
		cd_segmentacao_pre_w	:= ie_segmentacao_w;

		if (ie_segmentacao_w = '09') then
			cd_segmentacao_pre_w	:= 10;
		elsif (ie_segmentacao_w = '10') then
			cd_segmentacao_pre_w	:= 11;
		elsif (ie_segmentacao_w = '11') then
			cd_segmentacao_pre_w	:= 13;
		elsif (ie_segmentacao_w = '12') then
			cd_segmentacao_pre_w	:= 14;
		end if;
		
		cd_abrangencia_pre_w	:= 5;

		if (ie_abrangencia_w = 'N') then
			cd_abrangencia_pre_w	:= 1;
		elsif (ie_abrangencia_w = 'GE') then
			cd_abrangencia_pre_w	:= 2;
		elsif (ie_abrangencia_w = 'E') then
			cd_abrangencia_pre_w	:= 3;
		elsif (ie_abrangencia_w = 'GM') then
			cd_abrangencia_pre_w	:= 4;
		end if;
		
		if (ie_participacao_w = 'C') then
			tp_contratacao_pre_w	:= 5;
			if (ie_tipo_contratacao_w = 'I') then
				tp_contratacao_pre_w	:= 1;
			elsif (ie_tipo_contratacao_w = 'CA') then
				tp_contratacao_pre_w	:= 3;
			end if;
		else
			tp_contratacao_pre_w	:= 6;
			if (ie_tipo_contratacao_w = 'I') then
				tp_contratacao_pre_w	:= 1;
			elsif (ie_tipo_contratacao_w = 'CA') then
				tp_contratacao_pre_w	:= 4;
			end if;
		end if;
	end if;
	
	if (nr_anos_w < 18) then
		if (nr_cpf_w = '00000000000') then
			select	coalesce(max(a.nr_cpf),'00000000000')
			into STRICT	nr_cpf_w
			from	compl_pessoa_fisica c,
				pessoa_fisica a
			where	c.ie_tipo_complemento   = 3
			and	c.cd_pessoa_fisica      = cd_pessoa_fisica_w
			and	a.cd_pessoa_fisica = c.cd_pessoa_fisica_ref
			and	c.nr_sequencia          =	(	SELECT	max(x.nr_sequencia)
									from	compl_pessoa_fisica x
									where	x.cd_pessoa_fisica = cd_pessoa_fisica_w
									and	x.ie_tipo_complemento = 3);
		end if;
	end if;
	
	if	((coalesce(nr_seq_titular_w::text, '') = '') and (nr_anos_w >= 18)) then
		cd_vinculo_benef_w	:= 01;
	elsif	((coalesce(nr_seq_titular_w::text, '') = '') and (nr_anos_w < 18)) then
		cd_vinculo_benef_w	:= 11;
	elsif (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') then
		select	cd_sib
		into STRICT	cd_vinculo_benef_w
		from	grau_parentesco
		where	nr_sequencia	= nr_seq_parentesco_w;
	end if;
	
	select 	count(1)
	into STRICT	qt_coparticipacao_w
	from 	pls_regra_coparticipacao
	where 	nr_seq_plano	= nr_seq_plano_w;
	
/*
	select 	count(1)
	into	qt_franquia_w
	from 	pls_regra_franquia
	where 	nr_seq_plano = nr_seq_plano_w;
*/
	
	if (qt_coparticipacao_w > 0) then
		ie_franquia_coparticipacao_w	:= 1;
	elsif (qt_franquia_w > 0) then
		ie_franquia_coparticipacao_w	:= 2;
	elsif (qt_coparticipacao_w = 0) then
		ie_franquia_coparticipacao_w	:= 3;
	elsif (qt_franquia_w = 0) then
		ie_franquia_coparticipacao_w	:= 4;
	end if;
	
	select  coalesce(max(CASE WHEN b.ie_cpt='S' THEN 1  ELSE 2 END ),2)
	into STRICT	ie_carencia_temp_w
	from 	pls_carencia a,
		pls_tipo_carencia b
	where 	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	a.nr_seq_segurado	= nr_seq_segurado_w;
	
	cd_motivo_w	:= 00;
	nr_prot_ans_origem_w	:= '000000000';
	
	if (ie_tipo_reg_w <> 4) then
		if (ie_tipo_reg_w = 1) then
			if (ie_gerar_todos_p = 'S') then
				cd_motivo_w := 18;
			elsif (ie_gerar_todos_p = 'N') then
				if (coalesce(nr_seq_portabilidade_w,0) > 0) then /* Se for de portabilidade o motivo e o 41 */
					cd_motivo_w	:= 41;
					
					select	coalesce(to_char(somente_numero(max(nr_prot_ans_origem))),'000000000')
					into STRICT	nr_prot_ans_origem_w
					from	pls_segurado a,
						pls_portab_pessoa b
					where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
					and	a.nr_sequencia	= nr_seq_segurado_w;
				else
					select	coalesce(max(cd_ans),15)
					into STRICT	cd_motivo_w
					from 	pls_motivo_inclusao_seg a,
						pls_segurado b
					where	b.nr_seq_motivo_inclusao	= a.nr_sequencia
					and	b.nr_sequencia			= nr_seq_segurado_w;
				end if;
			end if;
		elsif (ie_tipo_reg_w = 2) then
			if (ie_portabilidade_w	= 'S') then /* Se for de portabilidade o motivo de alteracao e o 43*/
				cd_motivo_w	:= 43;
				
				select	coalesce(to_char(somente_numero(max(nr_prot_ans_origem))),'000000000')
				into STRICT	nr_prot_ans_origem_w
				from	pls_segurado a,
					pls_portab_pessoa b
				where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
				and	a.nr_sequencia	= nr_seq_segurado_w;
			else
				select	max(nr_sequencia)
				into STRICT	nr_seq_alt_w
				from	pls_segurado_alt_plano
				where	nr_seq_segurado = nr_seq_segurado_w
				and	ie_situacao = 'A'
				and	trunc(dt_alteracao,'month') = trunc(add_months(dt_referencia_p,-1),'month');
				
				if (nr_seq_alt_w > 0) then
					select	cd_ans
					into STRICT	cd_motivo_w
					from	pls_segurado_alt_plano a,
						pls_motivo_alteracao_plano b	
					where	a.nr_sequencia = nr_seq_alt_w
					and	b.nr_sequencia = a.nr_seq_motivo_alt;
				end if;
			end if;
		elsif (ie_tipo_reg_w = 3) then
			if (ie_gerar_todos_p <> 'E') then
				select	count(1)
				into STRICT	qt_exclusao_portab_w
				from	pls_interf_sib
				where	ie_tipo_reg	= 3
				and	cd_motivo	= 43
				and	nr_seq_segurado	= nr_seq_segurado_w;
				
				if (qt_exclusao_portab_w	= 0) and (coalesce(nr_seq_portabilidade_w,0)	> 0) then
					cd_motivo_w	:= 42;
					
					select	coalesce(to_char(somente_numero(max(nr_prot_ans_origem))),'000000000')
					into STRICT	nr_prot_ans_origem_w
					from	pls_segurado a,
						pls_portab_pessoa b
					where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
					and	a.nr_sequencia	= nr_seq_segurado_w;
				else
					cd_motivo_w	:= to_char(nr_seq_motivo_cancelamento_w);
				end if;
			elsif (ie_gerar_todos_p = 'E') then
				cd_motivo_w		:= 07;
				cd_usuario_plano_w	:= cd_usuario_ant_w;
				cd_usuario_ant_w	:= null;
			end if;
		end if;
	else
		if (ie_enviar_ans_w = 'I') then
			cd_motivo_w := 18;
			ie_tipo_reg_w := 1;
		elsif (ie_enviar_ans_w = 'M') then
			cd_motivo_w := 07;
			ie_tipo_reg_w := 3;
		elsif (ie_enviar_ans_w = 'N') then
			select	max(a.cd_ans)
			into STRICT	cd_motivo_w
			from	pls_motivo_inclusao_seg a,
				pls_segurado b
			where	a.nr_sequencia	= b.nr_seq_motivo_inclusao
			and	b.nr_sequencia	= nr_seq_segurado_w;
			
			ie_tipo_reg_w := 1;
			
		elsif (ie_enviar_ans_w = 'E') then
			select	max(a.cd_motivo_cancelamento)
			into STRICT	cd_motivo_w
			from	pls_motivo_cancelamento a,
				pls_segurado b
			where	a.nr_sequencia	= b.nr_seq_motivo_cancelamento
			and	b.nr_sequencia	= nr_seq_segurado_w;
			
			ie_tipo_reg_w := 3;
			
		elsif (ie_enviar_ans_w = 'A') then
			select 	max(nr_sequencia)
			into STRICT	nr_seq_alt_w
			from	pls_segurado_alt_plano
			where	nr_seq_segurado = nr_seq_segurado_w
			and	ie_situacao = 'A'
			and	trunc(dt_alteracao,'month') = trunc(add_months(dt_referencia_p,-1),'month');
			
			if (nr_seq_alt_w > 0 ) then
				select	cd_ans
				into STRICT	cd_motivo_w
				from	pls_segurado_alt_plano a,
					pls_motivo_alteracao_plano b
				where	a.nr_sequencia = nr_seq_alt_w
				and	b.nr_sequencia = a.nr_seq_motivo_alt;
			end if;			
			ie_tipo_reg_w := 2;
		end if;
		
		update	pls_sib_tasy_ans
		set	nr_seq_lote_sib = nr_seq_lote_sib_p
		where	nr_sequencia	= nr_seq_tasy_ans_w;
	end if;
	
	if (ie_regulamentacao_w = 'R') then
		ie_itens_excluid_cobertura_w	:= 1;
	else
		ie_itens_excluid_cobertura_w	:= 2; /* No projeto XML converte para 0 */
	end if;
	
	nr_seq_reg_arquivo_w	:= nr_seq_reg_arquivo_w + 1;
	
	insert into pls_interf_sib(nr_sequencia,
		dt_mesano_referencia,
		ie_tipo_reg,
		cd_usuario_plano,
		nm_beficiario,
		dt_nascimento,
		ie_sexo,
		nr_cpf,
		nr_pis_pasep,
		nm_mae_benef,
		cd_cns,
		nr_identidade,
		ds_orgao_emissor_ci,
		cd_usuario_plano_sup,
		cd_plano_ans,
		cd_plano_ans_pre,
		cd_segmentacao_pre,
		cd_abrangencia_pre,
		tp_contracao_pre,
		dt_adesao_plano,
		cd_vinculo_benef,
		cd_indicacao_copartic_franquia,
		dt_cancelamento,
		dt_reinclusao,
		cd_motivo,
		ie_carencia_temp,
		ie_itens_excluid_cobertura,
		cd_cgc_estipulante,
		logradouro,
		ds_numero,
		ds_complemento,
		ds_bairro,
		ds_municipio,
		uf,
		cep,
		dt_adaptacao,
		cd_pessoa_fisica,
		nr_seq_lote_sib,
		cd_cei,
		nr_seq_segurado,
		cd_usuario_ant,
		cd_pais,
		nr_seq_tasy_ans,
		nr_seq_titular,
		nr_prot_ans_origem)
	values (nr_seq_reg_arquivo_w,
		trunc(dt_mesano_referencia_w),
		ie_tipo_reg_w,
		cd_usuario_plano_w,
		nm_beneficiario_w,
		dt_nascimento_w,
		ie_sexo_w,
		nr_cpf_w,
		nr_pis_pasep_w,
		nm_mae_benef_w,
		cd_cns_w,
		nr_identidade_w,
		ds_orgao_emissor_ci_w,
		cd_usuario_plano_tit_w,
		cd_plano_ans_w,
		cd_plano_ans_pre_w,
		cd_segmentacao_pre_w,
		cd_abrangencia_pre_w,
		tp_contratacao_pre_w,
		dt_liberacao_w,
		cd_vinculo_benef_w,
		ie_franquia_coparticipacao_w,
		dt_cancelamento_w,
		dt_reinclusao_w,
		cd_motivo_w,
		ie_carencia_temp_w,
		ie_itens_excluid_cobertura_w,
		cd_cgc_estipulante_w,
		ds_logradouro_w,
		ds_numero_w,
		ds_complemento_w,
		ds_bairro_w,
		ds_municipio_w,
		CASE WHEN uf_w='IN' THEN 'EX'  ELSE uf_w END ,
		cep_w,
		dt_adaptacao_w,
		cd_pessoa_fisica_w,
		nr_seq_lote_sib_p,
		'00000000000000',
		nr_seq_segurado_w,
		cd_usuario_ant_w,
		cd_pais_sib_w,
		CASE WHEN nr_seq_tasy_ans_w=0 THEN  null  ELSE nr_seq_tasy_ans_w END ,
		nr_seq_titular_w,
		nr_prot_ans_origem_w);
end loop;
close c01;

if (ie_contem_registro_w = 'N') then
	nr_seq_reg_arquivo_w	:= nr_seq_reg_arquivo_w + 1;
	
	insert into pls_interf_sib(nr_sequencia,
		ie_tipo_reg,
		ds_observacao,
		nr_seq_lote_sib)
	values (nr_seq_reg_arquivo_w,
		6,
		wheb_mensagem_pck.get_texto(1108983),
		nr_seq_lote_sib_p);
end if;

select	count(1)
into STRICT	qt_tipo1_w
from	pls_interf_sib
where	ie_tipo_reg = 1
and	nr_seq_lote_sib = nr_seq_lote_sib_p;

select	count(1)
into STRICT	qt_tipo2_w
from	pls_interf_sib
where	ie_tipo_reg = 2
and	nr_seq_lote_sib = nr_seq_lote_sib_p;

select	count(1)
into STRICT	qt_tipo3_w
from	pls_interf_sib
where 	ie_tipo_reg = 3
and	nr_seq_lote_sib = nr_seq_lote_sib_p;

nr_seq_reg_arquivo_w	:= nr_seq_reg_arquivo_w + 1;

CALL pls_consistir_lote_sib(nr_seq_lote_sib_p, null, nm_usuario_p,cd_estabelecimento_p);

select 	count(1)
into STRICT	qt_registros_incosistentes_w
from 	pls_interf_sib a
where 	nr_seq_lote_sib = nr_seq_lote_sib_p
and	exists (SELECT	1 
		from 	pls_lote_consistencia_sib b 
		where 	b.nr_seq_lote_sib = a.nr_seq_lote_sib 
		and 	b.nr_seq_segurado = a.nr_seq_segurado);

insert into pls_interf_sib(nr_sequencia,
	ie_tipo_reg,
	qt_tipo1,
	qt_tipo2,
	qt_tipo3,
	qt_tipo4,
	qt_tipo5,
	qt_tipo7,
	qt_tipo8,
	dt_mesano_referencia,
	ds_branco,
	nr_seq_lote_sib,
	qt_registros_incosistentes)
values (nr_seq_reg_arquivo_w,
	9,
	qt_tipo1_w,
	qt_tipo2_w,
	qt_tipo3_w,
	0,
	0,
	0,
	0,
	dt_referencia_p,
	'',
	nr_seq_lote_sib_p,
	qt_registros_incosistentes_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_interf_sib ( dt_referencia_p timestamp, nr_seq_operadora_p bigint, nr_seq_lote_sib_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_gerar_todos_p text) FROM PUBLIC;

