-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_resumo_auditoria (nr_seq_auditoria_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE

 
 
cd_convenio_w		conta_paciente.cd_convenio_parametro%type;
nr_interno_conta_w	auditoria_conta_paciente.nr_interno_conta%type;	
ie_tipo_auditoria_w	auditoria_conta_paciente.ie_tipo_auditoria%type;
cd_auditor_w		auditoria_conta_paciente.cd_auditor%type;
dt_auditoria_w		auditoria_conta_paciente.dt_auditoria%type;
ie_agrupamento_w	auditoria_conta_paciente.ie_agrupamento%type;
nr_sequencia_w		auditoria_resumo.nr_sequencia%type;
nr_seq_motivo_w		auditoria_motivo.nr_sequencia%type;

/* PARA ESSE PROCESSO, NÃO PODE SER EXCLUÍDO NENHUM REGISTRO APÓS GERAR A AUDITORIA. EXCLUSÃO SIMPLES. PARÂMETRO [16] - Permite a exclusão de itens presentes na auditoria deve estar desabilitado.*/
	 
				   
c01 CURSOR FOR 
	SELECT	b.cd_setor_atendimento,		 
		trunc(b.dt_atendimento) dt_item, 
		b.cd_material, 
		coalesce(sum(a.qt_original),0) qt_original, 
		coalesce(sum(a.vl_material),0) vl_original 
	from	auditoria_matpaci 	a, 
		material_atend_paciente b 
	where	nr_seq_auditoria = nr_seq_auditoria_p 
	and 	a.nr_seq_matpaci = b.nr_sequencia 
	group by b.cd_setor_atendimento, 
		 trunc(b.dt_atendimento), 
		 b.cd_material 
	order by b.cd_setor_atendimento, 
		 trunc(b.dt_atendimento), 
		 b.cd_material;
	
c02 CURSOR FOR 
	SELECT	b.cd_setor_atendimento, 
		trunc(b.dt_procedimento) dt_item, 
		b.cd_procedimento, 
		b.ie_origem_proced, 
		coalesce(sum(a.qt_original),0) qt_original, 
		coalesce(sum(a.vl_procedimento),0) vl_original 
	from	auditoria_propaci	a, 
		procedimento_paciente	b 
	where	a.nr_seq_auditoria = nr_seq_auditoria_p 
	and 	a.nr_seq_propaci = b.nr_sequencia 
	group by b.cd_setor_atendimento, 
		 trunc(b.dt_procedimento), 
		 b.cd_procedimento, 
		 b.ie_origem_proced 
	order by b.cd_setor_atendimento, 
		 trunc(b.dt_procedimento), 
		 b.cd_procedimento, 
		 b.ie_origem_proced;
	
c04 CURSOR FOR 
	SELECT 	b.cd_setor_atendimento, 
		trunc(b.dt_atendimento) dt_item, 
		b.cd_material, 
		coalesce(sum(b.qt_material),0) qt_original, 
		coalesce(sum(a.vl_material_original),0) vl_original 
	from 	auditoria_externa    c, 
		auditoria_externa_item a, 
		material_atend_paciente b 
	where 	a.nr_seq_audit_ext = c.nr_sequencia 
	and	c.nr_seq_auditoria = nr_seq_auditoria_p 
	and 	a.nr_seq_item = b.nr_sequencia 
	and 	b.nr_interno_conta = nr_interno_conta_w 
	and 	a.ie_tipo_item  = 'M' 
	group by b.cd_setor_atendimento, 
		 trunc(b.dt_atendimento), 
		 b.cd_material 
	order by b.cd_setor_atendimento, 
		 trunc(b.dt_atendimento), 
		 b.cd_material;
		
c05 CURSOR FOR 
	SELECT 	b.cd_setor_atendimento, 
		trunc(b.dt_procedimento) dt_item, 
		b.cd_procedimento, 
		b.ie_origem_proced, 
		coalesce(sum(b.qt_procedimento),0) qt_original, 
		coalesce(sum(a.vl_procedimento_orig),0) vl_original 
	from 	auditoria_externa   c, 
		auditoria_externa_item a, 
		procedimento_paciente b 
	where 	a.nr_seq_audit_ext = c.nr_sequencia 
	and	c.nr_seq_auditoria = nr_seq_auditoria_p 
	and 	a.nr_seq_item = b.nr_sequencia 
	and 	b.nr_interno_conta = nr_interno_conta_w 
	and 	a.ie_tipo_item  = 'P' 
	group by b.cd_setor_atendimento, 
		 trunc(b.dt_procedimento), 
		 b.cd_procedimento, 
		 b.ie_origem_proced 
	order by b.cd_setor_atendimento, 
		 trunc(b.dt_procedimento), 
		 b.cd_procedimento, 
		 b.ie_origem_proced;	
		 
		 
c07 CURSOR FOR 
	SELECT 	t.cd_setor_atendimento,	 
		t.dt_item, 
		t.cd_material, 
		coalesce(sum(t.qt_item),0) qt_final, 
		coalesce(sum(t.vl_item),0) vl_final 
	from ( 
		-- Pega todos os itens que estão na auditoria (Inclusive os novos lançamentos) 
		SELECT b.cd_setor_atendimento, 
			trunc(b.dt_atendimento) dt_item, 
			b.cd_material, 
			coalesce(sum(b.qt_material),0) qt_item, 
			coalesce(sum(b.vl_material),0) vl_item 
		from 	auditoria_matpaci a, 
			material_atend_paciente b 
		where 	nr_seq_auditoria = nr_seq_auditoria_p 
		and 	a.nr_seq_matpaci = b.nr_sequencia 
		and 	(b.nr_interno_conta IS NOT NULL AND b.nr_interno_conta::text <> '') 
		group by b.cd_setor_atendimento, 
			trunc(b.dt_atendimento), 
			b.cd_material 
		
union all
 
		-- Pega todos os itens que foram gerados pelo ajuste na liberação da auditoria 
		select b.cd_setor_atendimento, 
			trunc(b.dt_atendimento) dt_item, 
			b.cd_material, 
			coalesce(sum(b.qt_material),0) qt_item, 
			coalesce(sum(b.vl_material),0) vl_item 
		from 	material_atend_paciente b 
		where 	nr_interno_conta = nr_interno_conta_w 
		and   nr_seq_orig_audit in (	select 	y.nr_sequencia 
						from 	auditoria_matpaci x, 
							material_atend_paciente y 
						where 	x.nr_seq_auditoria = nr_seq_auditoria_p 
						and 	x.nr_seq_matpaci = y.nr_sequencia) 
		and exists (	select 	1 
				from 	mat_atend_pac_auditoria x  
				where 	x.nr_seq_matpaci = b.nr_Sequencia 
				and	x.nr_seq_auditoria = nr_seq_auditoria_p) --Somente itens gerados nesta auditoria 
		group by b.cd_setor_atendimento, 
			trunc(b.dt_atendimento), 
			b.cd_material 
		) t 
	where 	1 = 1 
	group by 
		 t.cd_setor_atendimento, 
		 t.dt_item, 
		 t.cd_material 
	order by t.cd_setor_atendimento, 
		 t.dt_item, 
		 t.cd_material;
		
		 
c08 CURSOR FOR 
	SELECT 	t.cd_setor_atendimento,	 
		t.dt_item, 
		t.cd_procedimento, 
		t.ie_origem_proced, 
		coalesce(sum(t.qt_item),0) qt_final, 
		coalesce(sum(t.vl_item),0) vl_final 
	from ( 
		-- Pega todos os itens que estão na auditoria (Inclusive os novos lançamentos) 
		SELECT b.cd_setor_atendimento, 
			trunc(b.dt_procedimento) dt_item, 
			b.cd_procedimento, 
			b.ie_origem_proced, 
			coalesce(sum(b.qt_procedimento),0) qt_item, 
			coalesce(sum(b.vl_procedimento),0) vl_item 
		from 	auditoria_propaci a, 
			procedimento_paciente b 
		where 	nr_seq_auditoria = nr_seq_auditoria_p 
		and 	a.nr_seq_propaci = b.nr_sequencia 
		and 	(b.nr_interno_conta IS NOT NULL AND b.nr_interno_conta::text <> '') 
		group by b.cd_setor_atendimento, 
			trunc(b.dt_procedimento), 
			b.cd_procedimento, 
			b.ie_origem_proced 
		
union all
 
		-- Pega todos os itens que foram gerados pelo ajuste na liberação da auditoria 
		select b.cd_setor_atendimento, 
			trunc(b.dt_procedimento) dt_item, 
			b.cd_procedimento, 
			b.ie_origem_proced, 
			coalesce(sum(b.qt_procedimento),0) qt_item, 
			coalesce(sum(b.vl_procedimento),0) vl_item 
		from 	procedimento_paciente b 
		where 	nr_interno_conta = nr_interno_conta_w 
		and   nr_seq_orig_audit in (	select 	y.nr_sequencia 
						from 	auditoria_propaci x, 
							procedimento_paciente y 
						where 	x.nr_seq_auditoria = nr_seq_auditoria_p 
						and 	x.nr_seq_propaci = y.nr_sequencia) 
		and exists (	select 	1 
				from 	proc_pac_auditoria x  
				where 	x.nr_seq_propaci = b.nr_Sequencia 
				and	x.nr_seq_auditoria = nr_seq_auditoria_p) --Somente itens gerados nesta auditoria						 
		group by b.cd_setor_atendimento, 
			trunc(b.dt_procedimento), 
			b.cd_procedimento, 
			b.ie_origem_proced 
		) t 
	where 	1 = 1 
	group by 
		 t.cd_setor_atendimento, 
		 t.dt_item, 
		 t.cd_procedimento, 
		 t.ie_origem_proced 
	order by t.cd_setor_atendimento, 
		 t.dt_item, 
		 t.cd_procedimento, 
		 t.ie_origem_proced;	 		
		 
	 
c10 CURSOR FOR 
	SELECT 	t.cd_setor_atendimento,	 
		t.dt_item, 
		t.cd_material, 
		coalesce(sum(t.qt_item),0) qt_final, 
		coalesce(sum(t.vl_item),0) vl_final 
	from ( 
		-- Pega todos os itens que estão na auditoria (Inclusive os novos lançamentos) 
		SELECT 	b.cd_setor_atendimento, 
			trunc(b.dt_atendimento) dt_item, 
			b.cd_material, 
			coalesce(sum(b.qt_material),0) qt_item, 
			coalesce(sum(a.vl_material_original),0) vl_item 
		from 	auditoria_externa    c, 
			auditoria_externa_item a, 
			material_atend_paciente b 
		where 	a.nr_seq_audit_ext = c.nr_sequencia 
		and	c.nr_seq_auditoria = nr_seq_auditoria_p 
		and 	a.nr_seq_item = b.nr_sequencia 
		and 	b.nr_interno_conta = nr_interno_conta_w 
		and 	a.ie_tipo_item  = 'M' 
		group by b.cd_setor_atendimento, 
			 trunc(b.dt_atendimento), 
			 b.cd_material 
		
union all
 
		-- Pega todos os itens que foram gerados pelo ajuste na liberação da auditoria 
		select x.cd_setor_atendimento, 
			trunc(x.dt_atendimento) dt_item, 
			x.cd_material, 
			coalesce(sum(x.qt_material),0) qt_item, 
			coalesce(sum(x.vl_material),0) vl_item 
		from 	material_atend_paciente x 
		where 	nr_interno_conta = nr_interno_conta_w 
		and   nr_seq_orig_audit in (	select 	b.nr_sequencia 
						from 	auditoria_externa    c, 
							auditoria_externa_item a, 
							material_atend_paciente b 
						where 	a.nr_seq_audit_ext = c.nr_sequencia 
						and	c.nr_seq_auditoria = nr_seq_auditoria_p 
						and 	a.nr_seq_item = b.nr_sequencia 
						and 	b.nr_interno_conta = nr_interno_conta_w 
						and 	a.ie_tipo_item  = 'M') 
		and exists (	select 	1 
				from 	mat_atend_pac_auditoria m  
				where 	m.nr_seq_matpaci = x.nr_Sequencia 
				and	m.nr_seq_auditoria = nr_seq_auditoria_p) --Somente itens gerados nesta auditoria 
		group by x.cd_setor_atendimento, 
			trunc(x.dt_atendimento), 
			x.cd_material 
		) t 
	where 	1 = 1 
	group by 
		 t.cd_setor_atendimento, 
		 t.dt_item, 
		 t.cd_material 
	order by t.cd_setor_atendimento, 
		 t.dt_item, 
		 t.cd_material;			
		 
		 
c11 CURSOR FOR 
	SELECT 	t.cd_setor_atendimento,	 
		t.dt_item, 
		t.cd_procedimento, 
		t.ie_origem_proced, 
		coalesce(sum(t.qt_item),0) qt_final, 
		coalesce(sum(t.vl_item),0) vl_final 
	from ( 
		-- Pega todos os itens que estão na auditoria (Inclusive os novos lançamentos) 
		SELECT 	b.cd_setor_atendimento, 
			trunc(b.dt_procedimento) dt_item, 
			b.cd_procedimento, 
			b.ie_origem_proced, 
			coalesce(sum(b.qt_procedimento),0) qt_item, 
			coalesce(sum(a.vl_procedimento_orig),0) vl_item 
		from 	auditoria_externa   c, 
			auditoria_externa_item a, 
			procedimento_paciente b 
		where 	a.nr_seq_audit_ext = c.nr_sequencia 
		and	c.nr_seq_auditoria = nr_seq_auditoria_p 
		and 	a.nr_seq_item = b.nr_sequencia 
		and 	b.nr_interno_conta = nr_interno_conta_w 
		and 	a.ie_tipo_item  = 'P' 
		group by b.cd_setor_atendimento, 
			 trunc(b.dt_procedimento), 
			 b.cd_procedimento, 
			 b.ie_origem_proced		 
		
union all
 
		-- Pega todos os itens que foram gerados pelo ajuste na liberação da auditoria 
		select x.cd_setor_atendimento, 
			trunc(x.dt_procedimento) dt_item, 
			x.cd_procedimento, 
			x.ie_origem_proced, 
			coalesce(sum(x.qt_procedimento),0) qt_item, 
			coalesce(sum(x.vl_procedimento),0) vl_item 
		from 	procedimento_paciente x 
		where 	nr_interno_conta = nr_interno_conta_w 
		and   nr_seq_orig_audit in (	select 	b.nr_sequencia 
						from 	auditoria_externa   c, 
							auditoria_externa_item a, 
							procedimento_paciente b 
						where 	a.nr_seq_audit_ext = c.nr_sequencia 
						and	c.nr_seq_auditoria = nr_seq_auditoria_p 
						and 	a.nr_seq_item = b.nr_sequencia 
						and 	b.nr_interno_conta = nr_interno_conta_w 
						and 	a.ie_tipo_item  = 'P') 
		and exists (	select 	1 
				from 	proc_pac_auditoria p  
				where 	p.nr_seq_propaci = x.nr_Sequencia 
				and	p.nr_seq_auditoria = nr_seq_auditoria_p) --Somente itens gerados nesta auditoria							 
		group by x.cd_setor_atendimento, 
			trunc(x.dt_procedimento), 
			x.cd_procedimento, 
			x.ie_origem_proced 
		) t 
	where 	1 = 1 
	group by 
		 t.cd_setor_atendimento, 
		 t.dt_item, 
		 t.cd_procedimento, 
		 t.ie_origem_proced 
	order by t.cd_setor_atendimento, 
		 t.dt_item, 
		 t.cd_procedimento, 
		 t.ie_origem_proced;	
 
 
c15 CURSOR FOR 
	SELECT	nr_sequencia, 
		'M' ie_tipo, 
		cd_material cd_item, 
		null ie_origem_proced, 
		cd_setor_atendimento, 
		dt_item 
	from	auditoria_resumo 
	where	nr_seq_auditoria = nr_seq_auditoria_p 
	and 	(cd_material IS NOT NULL AND cd_material::text <> '') 
	
union all
 
	SELECT	nr_sequencia, 
		'P' ie_tipo, 
		cd_procedimento cd_item, 
		ie_origem_proced ie_origem_proced, 
		cd_setor_atendimento, 
		dt_item 
	from	auditoria_resumo 
	where	nr_seq_auditoria = nr_seq_auditoria_p 
	and 	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') 
	order by ie_tipo;

 
c01_w			c01%rowtype;
c02_w			c02%rowtype;
c04_w			c04%rowtype;
c05_w			c05%rowtype;	
c07_w			c07%rowtype;
c08_w			c08%rowtype;
c10_w			c10%rowtype;
c11_w			c11%rowtype;
c15_w			c15%rowtype;
	
/* 
 
ie_opcao_p 	= 'I' - Fotografia da criação da Auditoria (I - Inicio) 
	= 'F' - Fotografia após liberação da Auditoria (F - Final) 
 
Tabela = AUDITORIA_RESUMO 
 
 Nome                   	Nulo?  	Tipo 
 ----------------------------------------- -------- 	-------------- 
 NR_SEQUENCIA               NOT NULL 	NUMBER(10) 
 NR_SEQ_AUDITORIA           NOT NULL 	NUMBER(10) 
 DT_ATUALIZACAO              NOT NULL 	DATE 
 NM_USUARIO                	NOT NULL 	VARCHAR2(15) 
 DT_ATUALIZACAO_NREC                	DATE 
 NM_USUARIO_NREC                  	VARCHAR2(15) 
 CD_CONVENIO                    	NUMBER(5) 
 NR_INTERNO_CONTA 		NOT NULL 	NUMBER(10) 
 DT_AUDITORIA                    	DATE 
 CD_AUDITOR                     	VARCHAR2(10) 
 IE_TIPO_AUDITORIA		NOT NULL 	VARCHAR2(1) 
 CD_MATERIAL                    	NUMBER(6) 
 CD_PROCEDIMENTO                  	NUMBER(15) 
 IE_ORIGEM_PROCED                  	NUMBER(10) 
 CD_SETOR_ATENDIMENTO	NOT NULL 	NUMBER(5) 
 DT_ITEM			NOT NULL 	DATE 
 NR_SEQ_MOTIVO                   	NUMBER(10) 
 QT_ORIGINAL                    	NUMBER(15,3) 
 VL_ORIGINAL                    	NUMBER(15,2) 
 QT_FINAL                      	NUMBER(15,3) 
 VL_FINAL                      	NUMBER(15,2) 
*/
 
 

BEGIN 
 
--Coletar os dados da tabela = AUDITORIA_CONTA_PACIENTE 
select 	coalesce(max(nr_interno_conta),0), 
	coalesce(max(ie_tipo_auditoria),'I'), 
	max(cd_auditor), 
	max(dt_auditoria), 
	max(ie_agrupamento) 
into STRICT	nr_interno_conta_w, 
	ie_tipo_auditoria_w, 
	cd_auditor_w, 
	dt_auditoria_w, 
	ie_agrupamento_w 
from 	auditoria_conta_paciente 
where 	nr_sequencia = nr_seq_auditoria_p;
 
--Coletar dados da tabela = CONTA_PACIENTE 
select 	max(cd_convenio_parametro) 
into STRICT	cd_convenio_w 
from 	conta_paciente 
where 	nr_interno_conta = nr_interno_conta_w;
 
--Fotografia da criação da Auditoria (I - Inicio) 
if (ie_opcao_p = 'I') then 
	 
	-- Auditoria Interna + Externa (Sem agrupamento, realizado pelo parâmetro [47] - Regra para geração de auditoria externa 
	if	((ie_tipo_auditoria_w = 'I') or 
		((ie_tipo_auditoria_w = 'E') and (coalesce(ie_agrupamento_w::text, '') = ''))) then 
		 
		-- Materiais 
		open C01;
		loop 
		fetch C01 into	 
			c01_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			select nextval('auditoria_resumo_seq') 
			into STRICT	nr_sequencia_w 
			;
			 
			insert into auditoria_resumo( 
					nr_sequencia,		nr_seq_auditoria,		dt_atualizacao,			 
					nm_usuario,		dt_atualizacao_nrec,		nm_usuario_nrec,		 
					cd_convenio,		nr_interno_conta,		dt_auditoria,		 
					cd_auditor,		ie_tipo_auditoria,		cd_material, 
					cd_procedimento,	ie_origem_proced,		cd_setor_atendimento,		 
					dt_item,		nr_seq_motivo,			qt_original,			 
					vl_original, 		qt_final, 			vl_final) 
			values (	nr_sequencia_w,		nr_seq_auditoria_p,		clock_timestamp(), 
					nm_usuario_p,		clock_timestamp(),			nm_usuario_p, 
					cd_convenio_w,		nr_interno_conta_w,		dt_auditoria_w, 
					cd_auditor_w,		ie_tipo_auditoria_w,		c01_w.cd_material, 
					null,			null,				c01_w.cd_setor_atendimento, 
					c01_w.dt_item,		null,				c01_w.qt_original, 
					c01_w.vl_original,	null,				null);
			 
			end;
		end loop;
		close C01;
		 
		-- Procedimentos 
		open C02;
		loop 
		fetch C02 into	 
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			select nextval('auditoria_resumo_seq') 
			into STRICT	nr_sequencia_w 
			;
			 
			insert into auditoria_resumo( 
					nr_sequencia,		nr_seq_auditoria,		dt_atualizacao,			 
					nm_usuario,		dt_atualizacao_nrec,		nm_usuario_nrec,		 
					cd_convenio,		nr_interno_conta,		dt_auditoria,		 
					cd_auditor,		ie_tipo_auditoria,		cd_material, 
					cd_procedimento,	ie_origem_proced,		cd_setor_atendimento,		 
					dt_item,		nr_seq_motivo,			qt_original,			 
					vl_original, 		qt_final, 			vl_final) 
			values (	nr_sequencia_w,		nr_seq_auditoria_p,		clock_timestamp(), 
					nm_usuario_p,		clock_timestamp(),			nm_usuario_p, 
					cd_convenio_w,		nr_interno_conta_w,		dt_auditoria_w, 
					cd_auditor_w,		ie_tipo_auditoria_w,		null, 
					c02_w.cd_procedimento,	c02_w.ie_origem_proced,		c02_w.cd_setor_atendimento, 
					c02_w.dt_item,		null,				c02_w.qt_original, 
					c02_w.vl_original,	null,				null);
			 
			end;
		end loop;
		close C02;
		 
	-- Auditoria Externa 
	elsif	(ie_tipo_auditoria_w = 'E' AND ie_agrupamento_w IS NOT NULL AND ie_agrupamento_w::text <> '') then 
	 
		-- Materiais 
		open C04;
		loop 
		fetch C04 into	 
			c04_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			 
			select nextval('auditoria_resumo_seq') 
			into STRICT	nr_sequencia_w 
			;
	 
			insert into auditoria_resumo( 
					nr_sequencia,		nr_seq_auditoria,		dt_atualizacao,			 
					nm_usuario,		dt_atualizacao_nrec,		nm_usuario_nrec,		 
					cd_convenio,		nr_interno_conta,		dt_auditoria,		 
					cd_auditor,		ie_tipo_auditoria,		cd_material, 
					cd_procedimento,	ie_origem_proced,		cd_setor_atendimento,		 
					dt_item,		nr_seq_motivo,			qt_original,			 
					vl_original, 		qt_final, 			vl_final) 
			values (	nr_sequencia_w,		nr_seq_auditoria_p,		clock_timestamp(), 
					nm_usuario_p,		clock_timestamp(),			nm_usuario_p, 
					cd_convenio_w,		nr_interno_conta_w,		dt_auditoria_w, 
					cd_auditor_w,		ie_tipo_auditoria_w,		c04_w.cd_material, 
					null,			null,				c04_w.cd_setor_atendimento, 
					c04_w.dt_item,		null,				c04_w.qt_original, 
					c04_w.vl_original,	null,				null);
			 
			end;
		end loop;
		close C04;
		 
		-- Procedimentos 
		open C05;
		loop 
		fetch C05 into	 
			c05_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin 
			 
			select nextval('auditoria_resumo_seq') 
			into STRICT	nr_sequencia_w 
			;
	 
			insert into auditoria_resumo( 
					nr_sequencia,		nr_seq_auditoria,		dt_atualizacao,			 
					nm_usuario,		dt_atualizacao_nrec,		nm_usuario_nrec,		 
					cd_convenio,		nr_interno_conta,		dt_auditoria,		 
					cd_auditor,		ie_tipo_auditoria,		cd_material, 
					cd_procedimento,	ie_origem_proced,		cd_setor_atendimento,		 
					dt_item,		nr_seq_motivo,			qt_original,			 
					vl_original, 		qt_final, 			vl_final) 
			values (	nr_sequencia_w,		nr_seq_auditoria_p,		clock_timestamp(), 
					nm_usuario_p,		clock_timestamp(),			nm_usuario_p, 
					cd_convenio_w,		nr_interno_conta_w,		dt_auditoria_w, 
					cd_auditor_w,		ie_tipo_auditoria_w,		null, 
					c05_w.cd_procedimento,	c05_w.ie_origem_proced,		c05_w.cd_setor_atendimento, 
					c05_w.dt_item,		null,				c05_w.qt_original, 
					c05_w.vl_original,	null,				null);
			 
			end;
		end loop;
		close C05;
	 
	end if;
	 
-- Fotografia após liberação da Auditoria (F - Final)	 
elsif (ie_opcao_p = 'F') then 
	 
	 
	-- Auditoria Interna + Externa (Sem agrupamento, realizado pelo parâmetro [47] - Regra para geração de auditoria externa 
	if	((ie_tipo_auditoria_w = 'I') or 
		((ie_tipo_auditoria_w = 'E') and (coalesce(ie_agrupamento_w::text, '') = ''))) then 
	 
		-- Materiais 
		open C07;
		loop 
		fetch C07 into	 
			c07_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin 
			 
			--Encontra o registro correspondente, que foi gerado na "fotografia " iniciar da auditoria para atualização 
			select 	coalesce(max(nr_sequencia),0) 
			into STRICT 	nr_sequencia_w 
			from 	auditoria_resumo 
			where 	nr_seq_auditoria = nr_seq_auditoria_p 
			and 	cd_setor_atendimento = c07_w.cd_setor_atendimento 
			and 	dt_item = c07_w.dt_item 
			and 	cd_material = c07_w.cd_material;		
			 
			-- Se não encontrou, trata-se de um novo registro que foi lançado 
			if (nr_sequencia_w = 0) then 
				 
				select nextval('auditoria_resumo_seq') 
				into STRICT	nr_sequencia_w 
				;
				 
				insert into auditoria_resumo( 
						nr_sequencia,		nr_seq_auditoria,		dt_atualizacao,			 
						nm_usuario,		dt_atualizacao_nrec,		nm_usuario_nrec,		 
						cd_convenio,		nr_interno_conta,		dt_auditoria,		 
						cd_auditor,		ie_tipo_auditoria,		cd_material, 
						cd_procedimento,	ie_origem_proced,		cd_setor_atendimento,		 
						dt_item,		nr_seq_motivo,			qt_original,			 
						vl_original, 		qt_final, 			vl_final) 
				values (	nr_sequencia_w,		nr_seq_auditoria_p,		clock_timestamp(), 
						nm_usuario_p,		clock_timestamp(),			nm_usuario_p, 
						cd_convenio_w,		nr_interno_conta_w,		dt_auditoria_w, 
						cd_auditor_w,		ie_tipo_auditoria_w,		c07_w.cd_material, 
						null,			null,				c07_w.cd_setor_atendimento, 
						c07_w.dt_item,		null,				0, 
						0,			c07_w.qt_final,			c07_w.vl_final);
				 
			-- Se existe, então apenas atualiza 
			else 
			 
				update	auditoria_resumo 
				set 	qt_final = c07_w.qt_final, 
					vl_final = c07_w.vl_final 
				where 	nr_sequencia = nr_sequencia_w;
			 
			end if;
			 
			end;
		end loop;
		close C07;
		 
		-- Procedimentos 
		open C08;
		loop 
		fetch C08 into	 
			c08_w;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			begin 
			 
			--Encontra o registro correspondente, que foi gerado na "fotografia " iniciar da auditoria para atualização 
			select 	coalesce(max(nr_sequencia),0) 
			into STRICT 	nr_sequencia_w 
			from 	auditoria_resumo 
			where 	nr_seq_auditoria = nr_seq_auditoria_p 
			and 	cd_setor_atendimento = c08_w.cd_setor_atendimento 
			and 	dt_item = c08_w.dt_item 
			and 	cd_procedimento = c08_w.cd_procedimento 
			and 	ie_origem_proced = c08_w.ie_origem_proced;
			 
			-- Se não encontrou, trata-se de um novo registro que foi lançado 
			if (nr_sequencia_w = 0) then 
				 
				select nextval('auditoria_resumo_seq') 
				into STRICT	nr_sequencia_w 
				;
				 
				insert into auditoria_resumo( 
						nr_sequencia,		nr_seq_auditoria,		dt_atualizacao,			 
						nm_usuario,		dt_atualizacao_nrec,		nm_usuario_nrec,		 
						cd_convenio,		nr_interno_conta,		dt_auditoria,		 
						cd_auditor,		ie_tipo_auditoria,		cd_material, 
						cd_procedimento,	ie_origem_proced,		cd_setor_atendimento,		 
						dt_item,		nr_seq_motivo,			qt_original,			 
						vl_original, 		qt_final, 			vl_final) 
				values (	nr_sequencia_w,		nr_seq_auditoria_p,		clock_timestamp(), 
						nm_usuario_p,		clock_timestamp(),			nm_usuario_p, 
						cd_convenio_w,		nr_interno_conta_w,		dt_auditoria_w, 
						cd_auditor_w,		ie_tipo_auditoria_w,		null, 
						c08_w.cd_procedimento,	c08_w.ie_origem_proced,		c08_w.cd_setor_atendimento, 
						c08_w.dt_item,		null,				0, 
						0,			c08_w.qt_final,			c08_w.vl_final);
				 
			-- Se existe, então apenas atualiza 
			else 
			 
				update	auditoria_resumo 
				set 	qt_final = c08_w.qt_final, 
					vl_final = c08_w.vl_final 
				where 	nr_sequencia = nr_sequencia_w;
			 
			end if;
			 
			end;
		end loop;
		close C08;
		 
		-- Ajustar a tabela de auditoria_resumo, zerando os que foram excluídos totalmente 
		update	auditoria_resumo 
		set 	qt_final = 0, 
			vl_final = 0 
		where 	nr_seq_auditoria = nr_seq_auditoria_p 
		and 	coalesce(qt_final::text, '') = '' 
		and 	coalesce(vl_final::text, '') = '';
		 
		 
		/* ***************** ATUALIZAÇÃO DO MOTIVO DE AJUSTE DA AUDITORIA *******************/
 
		open C15;
		loop 
		fetch C15 into	 
			c15_w;
		EXIT WHEN NOT FOUND; /* apply on C15 */
			begin 
			 
			if (c15_w.ie_tipo = 'M') then 
			 
			 
				select	max(a.nr_seq_motivo) 
				into STRICT	nr_seq_motivo_w 
				from	auditoria_matpaci 	a, 
					material_atend_paciente b 
				where	nr_seq_auditoria = nr_seq_auditoria_p 
				and 	a.nr_seq_matpaci = b.nr_sequencia 
				and	b.nr_interno_conta = nr_interno_conta_w 
				and 	b.cd_setor_atendimento = c15_w.cd_setor_atendimento 
				and 	trunc(b.dt_atendimento) = c15_w.dt_item 
				and 	b.cd_material = c15_w.cd_item;
				 
				update	auditoria_resumo 
				set 	nr_seq_motivo = nr_seq_motivo_w 
				where 	nr_sequencia = c15_w.nr_sequencia;
				 
				 
			elsif (c15_w.ie_tipo = 'P') then 
				 
				select	max(a.nr_seq_motivo) 
				into STRICT	nr_seq_motivo_w 
				from	auditoria_propaci 	a, 
					procedimento_paciente b 
				where	nr_seq_auditoria = nr_seq_auditoria_p 
				and 	a.nr_seq_propaci = b.nr_sequencia 
				and	b.nr_interno_conta = nr_interno_conta_w 
				and 	b.cd_setor_atendimento = c15_w.cd_setor_atendimento 
				and 	trunc(b.dt_procedimento) = c15_w.dt_item 
				and 	b.cd_procedimento = c15_w.cd_item 
				and 	b.ie_origem_proced = c15_w.ie_origem_proced;
				 
				update	auditoria_resumo 
				set 	nr_seq_motivo = nr_seq_motivo_w 
				where 	nr_sequencia = c15_w.nr_sequencia;
				 
			end if;
			 
			end;			
		end loop;
		close C15;
		 
		 
		 
	-- Auditoria Externa 
	elsif	(ie_tipo_auditoria_w = 'E' AND ie_agrupamento_w IS NOT NULL AND ie_agrupamento_w::text <> '') then	 
	 
		-- Materiais 
		open c10;
		loop 
		fetch c10 into	 
			c10_w;
		EXIT WHEN NOT FOUND; /* apply on c10 */
			begin 
			 
			--Encontra o registro correspondente, que foi gerado na "fotografia " iniciar da auditoria para atualização 
			select 	coalesce(max(nr_sequencia),0) 
			into STRICT 	nr_sequencia_w 
			from 	auditoria_resumo 
			where 	nr_seq_auditoria = nr_seq_auditoria_p 
			and 	cd_setor_atendimento = c10_w.cd_setor_atendimento 
			and 	dt_item = c10_w.dt_item 
			and 	cd_material = c10_w.cd_material;
			 
			-- Se não encontrou, trata-se de um novo registro que foi lançado 
			if (nr_sequencia_w = 0) then 
				 
				select nextval('auditoria_resumo_seq') 
				into STRICT	nr_sequencia_w 
				;
				 
				insert into auditoria_resumo( 
						nr_sequencia,		nr_seq_auditoria,		dt_atualizacao, 
						nm_usuario,		dt_atualizacao_nrec,		nm_usuario_nrec,		 
						cd_convenio,		nr_interno_conta,		dt_auditoria,		 
						cd_auditor,		ie_tipo_auditoria,		cd_material, 
						cd_procedimento,	ie_origem_proced,		cd_setor_atendimento,		 
						dt_item,		nr_seq_motivo,			qt_original,			 
						vl_original, 		qt_final, 			vl_final) 
				values (	nr_sequencia_w,		nr_seq_auditoria_p,		clock_timestamp(), 
						nm_usuario_p,		clock_timestamp(),			nm_usuario_p, 
						cd_convenio_w,		nr_interno_conta_w,		dt_auditoria_w, 
						cd_auditor_w,		ie_tipo_auditoria_w,		c10_w.cd_material, 
						null,			null,				c10_w.cd_setor_atendimento, 
						c10_w.dt_item,		null,				0, 
						0,			c10_w.qt_final,			c10_w.vl_final);
				 
			-- Se existe, então apenas atualiza 
			else 
			 
				update	auditoria_resumo 
				set 	qt_final = c10_w.qt_final, 
					vl_final = c10_w.vl_final 
				where 	nr_sequencia = nr_sequencia_w;
			 
			end if;
			 
			end;
						 
		end loop;
		close c10;
		 
		 
		-- Procedimentos 
		open C11;
		loop 
		fetch C11 into	 
			c11_w;
		EXIT WHEN NOT FOUND; /* apply on C11 */
			begin 
			 
			--Encontra o registro correspondente, que foi gerado na "fotografia " iniciar da auditoria para atualização 
			select 	coalesce(max(nr_sequencia),0) 
			into STRICT 	nr_sequencia_w 
			from 	auditoria_resumo 
			where 	nr_seq_auditoria = nr_seq_auditoria_p 
			and 	cd_setor_atendimento = c11_w.cd_setor_atendimento 
			and 	dt_item = c11_w.dt_item 
			and 	cd_procedimento = c11_w.cd_procedimento 
			and 	ie_origem_proced = c11_w.ie_origem_proced;
			 
			-- Se não encontrou, trata-se de um novo registro que foi lançado 
			if (nr_sequencia_w = 0) then 
				 
				select nextval('auditoria_resumo_seq') 
				into STRICT	nr_sequencia_w 
				;
				 
				insert into auditoria_resumo( 
						nr_sequencia,		nr_seq_auditoria,		dt_atualizacao,			 
						nm_usuario,		dt_atualizacao_nrec,		nm_usuario_nrec,		 
						cd_convenio,		nr_interno_conta,		dt_auditoria,		 
						cd_auditor,		ie_tipo_auditoria,		cd_material, 
						cd_procedimento,	ie_origem_proced,		cd_setor_atendimento,		 
						dt_item,		nr_seq_motivo,			qt_original,			 
						vl_original, 		qt_final, 			vl_final) 
				values (	nr_sequencia_w,		nr_seq_auditoria_p,		clock_timestamp(), 
						nm_usuario_p,		clock_timestamp(),			nm_usuario_p, 
						cd_convenio_w,		nr_interno_conta_w,		dt_auditoria_w, 
						cd_auditor_w,		ie_tipo_auditoria_w,		null, 
						c11_w.cd_procedimento,	c11_w.ie_origem_proced,		c11_w.cd_setor_atendimento, 
						c11_w.dt_item,		null,				0, 
						0,			c11_w.qt_final,			c11_w.vl_final);
				 
			-- Se existe, então apenas atualiza 
			else 
			 
				update	auditoria_resumo 
				set 	qt_final = c11_w.qt_final, 
					vl_final = c11_w.vl_final 
				where 	nr_sequencia = nr_sequencia_w;
			 
			end if;
			 
			end;
		end loop;
		close C11;
		 
		-- Ajustar a tabela de auditoria_resumo, zerando os que foram excluídos totalmente 
		update	auditoria_resumo 
		set 	qt_final = 0, 
			vl_final = 0 
		where 	nr_seq_auditoria = nr_seq_auditoria_p 
		and 	coalesce(qt_final::text, '') = '' 
		and 	coalesce(vl_final::text, '') = '';				
		 
		 
		/* ***************** ATUALIZAÇÃO DO MOTIVO DE AJUSTE DA AUDITORIA *******************/
 
		open C15;
		loop 
		fetch C15 into	 
			c15_w;
		EXIT WHEN NOT FOUND; /* apply on C15 */
			begin 
			 
			if (c15_w.ie_tipo = 'M') then 
			 
				select 	max(c.nr_seq_motivo) 
				into STRICT	nr_seq_motivo_w 
				from 	auditoria_externa    c, 
					auditoria_externa_item a, 
					material_atend_paciente b 
				where 	a.nr_seq_audit_ext = c.nr_sequencia 
				and	c.nr_seq_auditoria = nr_seq_auditoria_p 
				and 	a.nr_seq_item = b.nr_sequencia 
				and 	b.nr_interno_conta = nr_interno_conta_w 
				and 	a.ie_tipo_item  = 'M' 
				and 	b.cd_setor_atendimento = c15_w.cd_setor_atendimento 
				and 	trunc(b.dt_atendimento) = c15_w.dt_item 
				and 	b.cd_material = c15_w.cd_item;
					 
				 
				update	auditoria_resumo 
				set 	nr_seq_motivo = nr_seq_motivo_w 
				where 	nr_sequencia = c15_w.nr_sequencia;
				 
				 
			elsif (c15_w.ie_tipo = 'P') then 
				 
				select	max(c.nr_seq_motivo) 
				into STRICT	nr_seq_motivo_w 
				from 	auditoria_externa   c, 
					auditoria_externa_item a, 
					procedimento_paciente b 
				where 	a.nr_seq_audit_ext = c.nr_sequencia 
				and	c.nr_seq_auditoria = nr_seq_auditoria_p 
				and 	a.nr_seq_item = b.nr_sequencia 
				and 	b.nr_interno_conta = nr_interno_conta_w 
				and 	a.ie_tipo_item  = 'P' 
				and 	b.cd_setor_atendimento = c15_w.cd_setor_atendimento 
				and 	trunc(b.dt_procedimento) = c15_w.dt_item 
				and 	b.cd_procedimento = c15_w.cd_item 
				and 	b.ie_origem_proced = c15_w.ie_origem_proced;
				 
				update	auditoria_resumo 
				set 	nr_seq_motivo = nr_seq_motivo_w 
				where 	nr_sequencia = c15_w.nr_sequencia;
				 
			end if;
			 
			end;			
		end loop;
		close C15;	
		 
	end if;	
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_resumo_auditoria (nr_seq_auditoria_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

