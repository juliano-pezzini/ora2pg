-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_cober_proc_sca ( nr_seq_segurado_p bigint, nr_seq_guia_proc_p bigint, nr_seq_conta_proc_p bigint, nr_seq_reembolso_proc_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_vigencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_sca_p INOUT bigint, ie_origem_consistencia_p text default null, nr_seq_requisicao_proc_p bigint default null) AS $body$
DECLARE



ie_origem_w			varchar(1) := '';
nr_seq_cobertura_proc_w		bigint;
ie_cobertura_w			varchar(1) := 'N';
nr_seq_sca_w			bigint;
nr_seq_contrato_w			bigint;
ie_origem_proced_w		bigint;
cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
ie_regulamentacao_w		varchar(2);
nr_seq_prestador_w		bigint;
nr_seq_guia_w			bigint;
ie_tipo_consistencia_w		varchar(1);
nr_seq_conta_w			bigint;
ie_tipo_despesa_w			varchar(1);
nr_seq_plano_w			bigint;
qt_sca_contrato_w			bigint;
qt_sca_segurado_w		bigint;
qt_sca_plano_w			bigint;
ie_tipo_item_w			varchar(1);
qt_cobertura_w			bigint;
ie_lanca_glosa_w		varchar(1)	:= 'N';
nr_seq_tabela_w			bigint;
ie_grau_dependencia_w		varchar(2);
nr_seq_titular_w		bigint;
nr_seq_sca_ww			bigint;
nr_seq_vinculo_plano_sca_w	bigint;
dt_inclusao_operadora_w		timestamp;
ie_titularidade_w		varchar(1);
qt_idade_w			integer;
nr_seq_prestador_exec_w		bigint;
cd_municipio_ibge_guia_w	varchar(6);
cd_municipio_ibge_conta_w	varchar(6);
cd_municipio_ibge_sca_w		varchar(6);
ie_verificar_atuacao_conta_w	varchar(1) := 'S';
ie_area_coberta_w		varchar(1) := 'S';
nr_seq_plano_adic_w		bigint;
nr_seq_cobertura_w		bigint;
dt_fim_vigencia_w		timestamp;
dt_autorizacao_w		timestamp;
ie_data_rescisao_w		varchar(1) := 'S';
ie_tipo_atendimento_guia_w      varchar(2);
nr_seq_item_w			bigint;
ie_tipo_obter_guia_w		varchar(3);
nr_seq_conta_ww			bigint;
dt_util_w			timestamp;

nr_seq_grupo_servico_w		bigint;
ie_cobertura_ww			varchar(1) := 'N';
nr_seq_cobertura_ww		bigint;
dt_atendimento_referencia_w	pls_conta.dt_atendimento_referencia%type := clock_timestamp();
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;

C00 CURSOR FOR
	SELECT	'S',
		c.nr_sequencia,
		a.nr_seq_tabela,
		b.nr_sequencia,
		a.dt_fim_vigencia
	from	pls_sca_vinculo a,
		pls_plano b,
		pls_cobertura c
	where	a.nr_seq_plano		= b.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_plano
	and	((a.nr_seq_segurado	= nr_seq_segurado_p) or (a.ie_dependente	= 'S' and a.nr_seq_segurado	= nr_seq_titular_w))
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_util_w) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(a.dt_inicio_vigencia,dt_util_w)) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(a.dt_fim_vigencia,dt_util_w)) -- Diego OS 323577-  E errado consisderar a data da consistencia para que seja verificado a vigencia da regra. O correto e se for guia a data de solic e se for conta a dt emissao
	and	b.ie_situacao		in ('A','S') -- Diego OS 323577 - Deve ser tratado a situacao em que o sca encontra-se em situacao 'Ativos com comercializacao Suspensa'
	and	qt_idade_w		<= coalesce(qt_idade_limite,qt_idade_w)
	and	((ie_tipo_atendimento = 'A') or (ie_tipo_atendimento = coalesce(ie_tipo_atendimento_guia_w, ie_tipo_atendimento)))
	and	((coalesce(c.ie_situacao::text, '') = '') or (c.ie_situacao = 'A'))
	and 	trunc(dt_atendimento_referencia_w) between coalesce(c.dt_inicio_vigencia, trunc(dt_atendimento_referencia_w)) and coalesce(c.dt_fim_vigencia , trunc(dt_atendimento_referencia_w))
	
UNION

	SELECT	'P',
		c.nr_sequencia,
		null,
		b.nr_sequencia,
		a.dt_fim_vigencia
	from	pls_plano_servico_adic a,
		pls_plano b,
		pls_cobertura c
	where	a.nr_seq_plano_adic	= b.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_plano
	and	a.nr_seq_plano		= nr_seq_plano_w
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_util_w) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(a.dt_inicio_vigencia,dt_util_w)) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(a.dt_fim_vigencia,dt_util_w)) -- Diego OS 323577-  E errado consisderar a data da consistencia para que seja verificado a vigencia da regra. O correto e se for guia a data de solic e se for conta a dt emissao
	and	b.ie_situacao		in ('A','S') -- Diego OS 323577 - Deve ser tratado a situacao em que o sca encontra-se em situacao 'Ativos com comercializacao Suspensa'
	and	((coalesce(a.ie_grau_dependencia,'A') = ie_titularidade_w) or (coalesce(a.ie_grau_dependencia,'A') = 'A'))
	and	qt_idade_w		<= coalesce(qt_idade_limite,qt_idade_w)
	and	((ie_tipo_atendimento = 'A') or (ie_tipo_atendimento = coalesce(ie_tipo_atendimento_guia_w, ie_tipo_atendimento)))
	and	((coalesce(c.ie_situacao::text, '') = '') or (c.ie_situacao = 'A'))
	and 	trunc(dt_atendimento_referencia_w) between coalesce(c.dt_inicio_vigencia, trunc(dt_atendimento_referencia_w)) and coalesce(c.dt_fim_vigencia , trunc(dt_atendimento_referencia_w));
	
C01 CURSOR FOR
	SELECT	a.ie_cobertura,
		c.nr_sequencia,
		a.nr_seq_grupo_servico
	from	pls_cobertura		c,
		pls_tipo_cobertura	b,
		pls_cobertura_proc	a
	where	c.nr_seq_tipo_cobertura				= b.nr_sequencia
	and	a.nr_seq_tipo_cobertura 			= b.nr_sequencia
	and	coalesce(a.cd_procedimento,cd_procedimento_p)	= cd_procedimento_p
	and	coalesce(a.ie_origem_proced,ie_origem_proced_w) 	= ie_origem_proced_w
	and	coalesce(a.cd_grupo_proc,cd_grupo_w)			= cd_grupo_w
	and	coalesce(a.cd_especialidade, cd_especialidade_w)	= cd_especialidade_w
	and	coalesce(a.cd_area_procedimento, cd_area_w) 		= cd_area_w
	and	c.nr_sequencia	 				= nr_seq_cobertura_proc_w
	order by a.nr_seq_grupo_servico,
		a.cd_area_procedimento,
                a.cd_especialidade,
                a.cd_grupo_proc,		
                a.cd_procedimento;
	
	

BEGIN

select	pls_obter_produto_benef(nr_sequencia,dt_vigencia_p),
	nr_seq_contrato,
	dt_inclusao_operadora,
	CASE WHEN coalesce(nr_seq_titular,0)=0 THEN 'T'  ELSE 'D' END ,
	nr_seq_titular,
	substr(obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),1,5)
into STRICT	nr_seq_plano_w,
	nr_seq_contrato_w,
	dt_inclusao_operadora_w,
	ie_titularidade_w,
	nr_seq_titular_w,
	qt_idade_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;


if (coalesce(nr_seq_conta_proc_p,0) > 0) then
	ie_tipo_consistencia_w	:= 'C';
	nr_seq_item_w		:= nr_seq_conta_proc_p;
	ie_tipo_obter_guia_w	:= 'CP';

	if (ie_origem_consistencia_p = 'I') then
		select 	max(a.dt_atendimento_conv)
		into STRICT	dt_util_w
		from	pls_conta_imp a,
			pls_conta_proc_imp b
		where 	a.nr_sequencia = b.nr_seq_conta
		and	b.nr_sequencia = nr_seq_conta_proc_p;
		
		dt_atendimento_referencia_w := dt_util_w;
	else
		select 	max(a.dt_emissao),
			max(a.dt_atendimento_referencia)
		into STRICT	dt_util_w,
			dt_atendimento_referencia_w
		from	pls_conta a,
			pls_conta_proc b
		where 	a.nr_sequencia = b.nr_seq_conta
		and	b.nr_sequencia = nr_seq_conta_proc_p;
	end if;
	
elsif (coalesce(nr_seq_guia_proc_p,0) > 0) then
	ie_tipo_consistencia_w := 'G';
	nr_seq_item_w		:= nr_seq_guia_proc_p;
	ie_tipo_obter_guia_w	:= 'AP';
	
	select 	max(a.dt_solicitacao),
		max(a.nr_seq_plano)
	into STRICT	dt_util_w,
		nr_seq_plano_w
	from	pls_guia_plano a,
		pls_guia_plano_proc b
	where 	a.nr_sequencia = b.nr_seq_guia
	and	b.nr_sequencia = nr_seq_guia_proc_p;
	
	dt_atendimento_referencia_w := dt_util_w;
	
elsif (coalesce(nr_seq_requisicao_proc_p,0) > 0) then
	ie_tipo_consistencia_w := 'R';
	nr_seq_item_w		:= nr_seq_requisicao_proc_p;
	ie_tipo_obter_guia_w	:= 'RP';
	
	select 	max(trunc(a.dt_requisicao)),
		max(a.nr_seq_plano)
	into STRICT	dt_util_w,
		nr_seq_plano_w
	from	pls_requisicao a,
		pls_requisicao_proc b
	where 	a.nr_sequencia = b.nr_seq_requisicao
	and	b.nr_sequencia = nr_seq_requisicao_proc_p;
	
	dt_atendimento_referencia_w := dt_util_w;
	
end if;

select	count(*)
into STRICT	qt_sca_contrato_w
from	pls_sca_vinculo a,
	pls_plano b
where	a.nr_seq_plano		= b.nr_sequencia
and	a.nr_seq_contrato	= nr_seq_contrato_w;

select	count(*)
into STRICT	qt_sca_segurado_w
from	pls_sca_vinculo a,
	pls_plano b
where	a.nr_seq_plano		= b.nr_sequencia
and	((a.nr_seq_segurado	= nr_seq_segurado_p) or (a.ie_dependente	= 'S' and a.nr_seq_segurado	= nr_seq_titular_w));

select	count(*)
into STRICT	qt_sca_plano_w
from	pls_plano_servico_adic a,
	pls_plano b
where	a.nr_seq_plano_adic	= b.nr_sequencia
and	a.nr_seq_plano		= nr_seq_plano_w;

select	pls_obter_internado_guia(nr_seq_item_w,ie_tipo_obter_guia_w)
into STRICT    ie_tipo_atendimento_guia_w
;

if (ie_tipo_atendimento_guia_w	= 'A') then
	ie_tipo_atendimento_guia_w	:= 'M';
elsif (ie_tipo_atendimento_guia_w	= 'I') then
	ie_tipo_atendimento_guia_w	:= 'H';
end if;

if	((qt_sca_contrato_w > 0) or (qt_sca_segurado_w > 0) or (qt_sca_plano_w	   > 0)) then
	
	open C00;
	loop
	fetch C00 into	
		ie_tipo_item_w,
		nr_seq_cobertura_proc_w,
		nr_seq_tabela_w,
		nr_seq_plano_adic_w,
		dt_fim_vigencia_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin

		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;
			
		if (ie_tipo_consistencia_w = 'G') then
			select 	max(nr_seq_guia)
			into STRICT	nr_seq_guia_w
			from	pls_guia_plano_proc
			where	nr_sequencia = nr_seq_guia_proc_p;
			
			begin
			select	nr_seq_prestador
			into STRICT	nr_seq_prestador_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_w;
			exception
				when others then
				nr_seq_prestador_w := null;
			end;
			
			ie_tipo_despesa_w	:= 1;
		elsif (ie_tipo_consistencia_w = 'C') then
		
			if (ie_origem_consistencia_p = 'I') then
				select	nr_seq_conta,
					ie_tipo_despesa_conv
				into STRICT	nr_seq_conta_w,
					ie_tipo_despesa_w
				from	pls_conta_proc_imp
				where	nr_sequencia = nr_seq_conta_proc_p;
				
				begin
				select	nr_seq_prest_exec_conv
				into STRICT	nr_seq_prestador_exec_w
				from	pls_conta_imp
				where	nr_sequencia = nr_seq_conta_w;
				exception
					when others then
					nr_seq_prestador_exec_w :=  null;
				end;
			else
				select	nr_seq_conta,
					ie_tipo_despesa
				into STRICT	nr_seq_conta_w,
					ie_tipo_despesa_w
				from	pls_conta_proc
				where	nr_sequencia = nr_seq_conta_proc_p;
				
				begin
				select	nr_seq_prestador_exec
				into STRICT	nr_seq_prestador_exec_w
				from	pls_conta
				where	nr_sequencia = nr_seq_conta_w;
				exception
					when others then
					nr_seq_prestador_exec_w :=  null;
				end;
			end if;
			
			begin
			select	a.nr_seq_prestador
			into STRICT	nr_seq_prestador_w
			from	pls_protocolo_conta a,
				pls_conta b
			where	a.nr_sequencia = b.nr_seq_protocolo
			and	b.nr_sequencia = nr_seq_conta_w;
			exception
				when others then
				nr_seq_prestador_w := null;
			end;
		elsif (ie_tipo_consistencia_w = 'R') then
			select 	max(nr_seq_requisicao)
			into STRICT	nr_seq_requisicao_w
			from	pls_requisicao_proc
			where	nr_sequencia = nr_seq_requisicao_proc_p;
			
			begin
			select	coalesce(nr_seq_prestador_exec, nr_seq_prestador)
			into STRICT	nr_seq_prestador_w
			from	pls_requisicao
			where	nr_sequencia = nr_seq_requisicao_w;
			exception
				when others then
				nr_seq_prestador_w := null;
			end;
		end if;	
		--Buscar a regra mais restritiva  da cobertura SCA
	
		open C01;
		loop
		fetch C01 into
			ie_cobertura_ww,
			nr_seq_cobertura_ww,
			nr_seq_grupo_servico_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			if (nr_seq_grupo_servico_w IS NOT NULL AND nr_seq_grupo_servico_w::text <> '') then
				if (pls_se_grupo_preco_servico(nr_seq_grupo_servico_w,cd_procedimento_p,ie_origem_proced_p) = 'S') then
					ie_cobertura_w		:= ie_cobertura_ww;
					nr_seq_cobertura_w	:= nr_seq_cobertura_ww;
				else
					ie_cobertura_w		:= 'N';
				end if;
				--Caso possuir uma cobertura liberada, entao sai do cursor
				if (ie_cobertura_w = 'S') then
					exit;
				end if;
			else
				ie_cobertura_w		:= ie_cobertura_ww;
				nr_seq_cobertura_w	:= nr_seq_cobertura_ww;
			end if;			
			end;
		end loop;
		close C01;
		--Se a cobertura ja esta coberta por algum item, nao deve mais lancar a glosa 
		if (coalesce(ie_cobertura_w::text, '') = '') then
			ie_cobertura_w	:= 'N';
		end if;
		
		if (ie_cobertura_w		= 'N') then
			ie_lanca_glosa_w	:= 'S';
		else
			ie_lanca_glosa_w	:= 'N';
		end if;
		
		if (coalesce(dt_fim_vigencia_w::text, '') = '') then
			dt_fim_vigencia_w	:= dt_util_w;
		end if;	
		
		if (ie_tipo_consistencia_w = 'G') then
			ie_area_coberta_w := pls_consistir_area_atuacao(nr_seq_plano_adic_w, null, nr_seq_prestador_w, null, ie_area_coberta_w);
		elsif (ie_tipo_consistencia_w = 'C') then
			ie_area_coberta_w := pls_consistir_area_atuacao(nr_seq_plano_adic_w, null, nr_seq_prestador_exec_w, null, ie_area_coberta_w);
		elsif (ie_tipo_consistencia_w = 'R') then
			ie_area_coberta_w := pls_consistir_area_atuacao(nr_seq_plano_adic_w, null, nr_seq_prestador_w, null, ie_area_coberta_w);
		end if;	

		if (trunc(dt_fim_vigencia_w,'dd') >= trunc(dt_util_w,'dd')) then
			ie_data_rescisao_w	:= 'N';	
		end if;
				
		if (ie_tipo_consistencia_w = 'G') and (ie_area_coberta_w = 'N') and (ie_lanca_glosa_w = 'N')  then
			CALL pls_gravar_motivo_glosa('1215',null,nr_seq_guia_proc_p,null,obter_desc_expressao(961198)/*Prestador fora da area de atuacao*/,nm_usuario_p, 'A','CG',nr_seq_prestador_w, null,null);
		elsif (ie_tipo_consistencia_w = 'C') and (ie_lanca_glosa_w = 'N')and (ie_area_coberta_w = 'N') then
			CALL pls_gravar_conta_glosa('1215',null, nr_seq_conta_proc_p,null,'N',obter_desc_expressao(961198)/*Prestador fora da area de atuacao*/,nm_usuario_p, 'A','CG',nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
		elsif (ie_tipo_consistencia_w = 'R') and (ie_area_coberta_w = 'N') and (ie_lanca_glosa_w = 'N')  then
			CALL pls_gravar_requisicao_glosa('1215', null, nr_seq_requisicao_proc_p,null,obter_desc_expressao(961198)/*Prestador fora da area de atuacao*/, nm_usuario_p, nr_seq_prestador_w, cd_estabelecimento_p, null, '');
		end if;	
	
	--Se SCA estiver dando cobertura para o procedimento, entao sai do cursor
	if (ie_lanca_glosa_w = 'N') then
		exit;
	end if;	
	end;
	end loop;
	close C00;	
end if;

if (ie_lanca_glosa_w = 'N') and (ie_data_rescisao_w = 'N') then
	nr_seq_sca_p	:= nr_seq_cobertura_w;
else
	nr_seq_sca_p	:= null;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_cober_proc_sca ( nr_seq_segurado_p bigint, nr_seq_guia_proc_p bigint, nr_seq_conta_proc_p bigint, nr_seq_reembolso_proc_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_vigencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_sca_p INOUT bigint, ie_origem_consistencia_p text default null, nr_seq_requisicao_proc_p bigint default null) FROM PUBLIC;

