-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordens_quimio ( nr_seq_ordem_lista_p text, ie_gerar_ordem_amb_p text, ie_gerar_ordem_prescr_p text, ie_gerar_ordem_pac_chegada_p text, dt_referencia_p timestamp, cd_estabelecimento_lista_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
ie_restringir_estab_ordem_w	varchar(1);
cd_estabelecimento_lista_w	varchar(255);
qt_max_loop_w		smallint;
ds_retorno_w		varchar(2000);


BEGIN 
 
if (ie_gerar_ordem_amb_p = 'S') or (ie_gerar_ordem_prescr_p = 'S') then 
	begin 
	/* Quimioterapia - Parâmetro 202 - Exigir informação de medicamentos em uso (histórico de saúde) para liberar a prescrição */
 
	ie_restringir_estab_ordem_w := obter_param_usuario(3130, 202, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_restringir_estab_ordem_w);
 
	if (ie_restringir_estab_ordem_w = 'S') then 
		begin 
		if (coalesce(cd_estabelecimento_lista_p::text, '') = '') then 
			ds_erro_p	:= substr(obter_texto_tasy(61890, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		else 
			begin 
			cd_estabelecimento_lista_w	:= cd_estabelecimento_lista_p;
			if (position('(' in cd_estabelecimento_lista_w) > 0) then 
				cd_estabelecimento_lista_w	:= replace(substr(cd_estabelecimento_lista_w, position('(' in cd_estabelecimento_lista_w) + 1), ')', '');
			end if;
			cd_estabelecimento_lista_w	:= cd_estabelecimento_lista_w || ',';
			cd_estabelecimento_lista_w	:= replace(cd_estabelecimento_lista_w, ' ', '');
 
			qt_max_loop_w	:= 0;
 
			if (ie_gerar_ordem_amb_p = 'S') then 
				begin 
				while(cd_estabelecimento_lista_w IS NOT NULL AND cd_estabelecimento_lista_w::text <> '') and (qt_max_loop_w < 50) loop 
					begin 
					ds_retorno_w := gerar_ordem_ambulatorial( 
						dt_referencia_p, substr(cd_estabelecimento_lista_w, 1, position(',' in cd_estabelecimento_lista_w) - 1), ie_gerar_ordem_pac_chegada_p, nm_usuario_p, 'S', ds_retorno_w);
 
					cd_estabelecimento_lista_w	:= substr(cd_estabelecimento_lista_w, position(',' in cd_estabelecimento_lista_w) + 1, length(cd_estabelecimento_lista_w));
					qt_max_loop_w	:= qt_max_loop_w + 1;
					end;
				end loop;
				end;
			end if;
 
			if (ie_gerar_ordem_prescr_p = 'S') then 
				begin 
				while(cd_estabelecimento_lista_w IS NOT NULL AND cd_estabelecimento_lista_w::text <> '') and (qt_max_loop_w < 50) loop 
					begin 
					CALL gerar_ordem_prescricao( 
						dt_referencia_p, 
						substr(cd_estabelecimento_lista_w, 1, position(',' in cd_estabelecimento_lista_w) - 1), 
						ie_gerar_ordem_pac_chegada_p, 
						nm_usuario_p);
 
					cd_estabelecimento_lista_w	:= substr(cd_estabelecimento_lista_w, position(',' in cd_estabelecimento_lista_w) + 1, length(cd_estabelecimento_lista_w));
					qt_max_loop_w	:= qt_max_loop_w + 1;
					end;
				end loop;
				end;
			end if;
			end;
		end if;
		end;
	else 
		begin 
		if (ie_gerar_ordem_amb_p = 'S') then 
			begin 
			ds_retorno_w := gerar_ordem_ambulatorial( 
				dt_referencia_p, cd_estabelecimento_p, ie_gerar_ordem_pac_chegada_p, nm_usuario_p, 'S', ds_retorno_w);
			end;
		end if;
 
		if (ie_gerar_ordem_prescr_p = 'S') then 
			begin 
			CALL gerar_ordem_prescricao( 
				dt_referencia_p, 
				cd_estabelecimento_p, 
				ie_gerar_ordem_pac_chegada_p, 
				nm_usuario_p);
			end;
		end if;
		end;
	end if;
	end;
end if;
 
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then 
	ds_erro_p := ds_retorno_w;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordens_quimio ( nr_seq_ordem_lista_p text, ie_gerar_ordem_amb_p text, ie_gerar_ordem_prescr_p text, ie_gerar_ordem_pac_chegada_p text, dt_referencia_p timestamp, cd_estabelecimento_lista_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

