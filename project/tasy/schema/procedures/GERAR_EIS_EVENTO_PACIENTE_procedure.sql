-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_evento_paciente ( dt_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_atendimento_w			bigint;
nr_seq_evento_w			bigint;
dt_evento_w			timestamp;
ie_classificacao_w			varchar(10);
ds_evento_w			varchar(4000);
cd_setor_atendimento_w		integer;
nr_seq_tipo_w			bigint;
ie_sexo_w			varchar(1);
ie_faixa_etaria_w			varchar(10);
cd_pessoa_fisica_w		varchar(10);
nm_usuario_origem_w		varchar(15);
nr_seq_classif_evento_w		bigint;
cd_empresa_w			integer;
nr_seq_gravidade_w		bigint;
ie_status_w			varchar(15);
ie_possui_hist_w			varchar(01);
nr_sequencia_evento_w		bigint;
ie_situacao_w			varchar(01);
nr_seq_turno_w			bigint;
ie_liberado_w			varchar(1);
cd_estab_evento_w		bigint;

C01 CURSOR FOR
SELECT	a.nr_atendimento,
	a.nr_seq_evento,
	trunc(a.dt_evento, 'dd'),
	a.ie_classificacao,
	a.ds_evento,
	a.cd_setor_atendimento,
	b.nr_seq_tipo,
	a.cd_pessoa_fisica,
	a.nm_usuario_origem,
	a.nr_seq_classif_evento,
	b.cd_empresa,
	a.nr_seq_gravidade,
	a.ie_status,
	a.nr_sequencia,
	a.ie_situacao,
	a.nr_seq_turno,
	CASE WHEN coalesce(a.dt_liberacao::text, '') = '' THEN  'N'  ELSE 'S' END ,
	a.cd_estabelecimento
from	qua_evento_paciente a,
	qua_evento b
where	trunc(a.dt_evento, 'MM') = trunc(dt_referencia_p,'MM')
and	a.nr_seq_evento = b.nr_sequencia
and	coalesce(ie_tipo_evento,'E') = 'E';


BEGIN
delete
from	eis_evento_paciente
where	trunc(dt_referencia, 'MM') = trunc(dt_referencia_p,'MM');

OPEN C01;
LOOP
	FETCH C01
	into	nr_atendimento_w,
		nr_seq_evento_w,
		dt_evento_w,
		ie_classificacao_w,
		ds_evento_w,
		cd_setor_atendimento_w,
		nr_seq_tipo_w,
		cd_pessoa_fisica_w,
		nm_usuario_origem_w,
		nr_seq_classif_evento_w,
		cd_empresa_w,
		nr_seq_gravidade_w,
		ie_status_w,
		nr_sequencia_evento_w,
		ie_situacao_w,
		nr_seq_turno_w,
		ie_liberado_w,
		cd_estab_evento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
        BEGIN

	select	ie_sexo,
		obter_idade(dt_nascimento, clock_timestamp(), 'E')
	into STRICT	ie_sexo_w,
		ie_faixa_etaria_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_w;

	begin

	select	'S'
	into STRICT	ie_possui_hist_w
	from	qua_evento_hist
	where	nr_seq_evento = nr_sequencia_evento_w  LIMIT 1;
	exception
	when others then
		ie_possui_hist_w := 'N';
	end;

	select	nextval('eis_evento_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	insert	into eis_evento_paciente(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_referencia,
		qt_evento,
		cd_setor_atendimento,
		ie_classificacao,
		nr_seq_tipo,
		nr_seq_evento,
		ie_sexo,
		ie_faixa_etaria,
		nm_usuario_origem,
		nr_seq_classif_evento,
		cd_empresa,
		nr_seq_gravidade,
		ie_status,
		ie_possui_hist,
		ie_situacao,
		nr_seq_turno,
		ie_liberado,
		cd_estab_evento)
	values (	nr_sequencia_w,
		cd_estab_evento_w,
		clock_timestamp(),
		nm_usuario_p,
		dt_evento_w,
		1,
		cd_setor_atendimento_w,
		ie_classificacao_w,
		nr_seq_tipo_w,
		nr_seq_evento_w,
		ie_sexo_w,
		ie_faixa_etaria_w,
		nm_usuario_origem_w,
		nr_seq_classif_evento_w,
		cd_empresa_w,
		nr_seq_gravidade_w,
		ie_status_w,
		ie_possui_hist_w,
		ie_situacao_w,
		nr_seq_turno_w,
		ie_liberado_w,
		cd_estab_evento_w);
	commit;
	end;
END LOOP;
CLOSE C01;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_evento_paciente ( dt_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

