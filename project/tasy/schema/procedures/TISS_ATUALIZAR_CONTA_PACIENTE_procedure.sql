-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_atualizar_conta_paciente (nr_interno_conta_p text, nr_seq_med_fatur_p text, ie_atualizar_todos_p text, cd_estabelecimento_p text, nm_usuario_p text, nr_atend_med_p bigint, nr_seq_prot_med_p bigint) AS $body$
DECLARE


cd_motivo_alta_w		atendimento_paciente.cd_motivo_alta%type;
dt_alta_w			timestamp;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
ie_clinica_w			atendimento_paciente.ie_clinica%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
ie_tipo_atend_tiss_w		atendimento_paciente.IE_TIPO_ATEND_TISS%type;
ie_tipo_atend_tiss_conta_w	conta_paciente.ie_tipo_atend_tiss%type;
ie_tipo_atend_tiss_regra_w	tiss_tipo_atendimento.ie_tipo_atend_tiss%type;
ie_data_entrada_alta_w		tiss_parametros_convenio.ie_data_entrada_alta%type;
ie_status_acerto_w		conta_paciente.ie_status_acerto%type;
cd_setor_entrada_w		tiss_tipo_atendimento.cd_setor_entrada%type;
cd_convenio_w		    	conta_paciente.cd_convenio_parametro%type;
nr_atend_original_w		atendimento_paciente.nr_atend_original%type;
nr_seq_classif_atend_w		atendimento_paciente.nr_seq_classificacao%type;
ie_tipo_consulta_tiss_w		tiss_regra_tipo_consulta.ie_tipo_consulta_tiss%type;
nr_seq_saida_int_w		tiss_parametros_convenio.nr_seq_saida_int%type;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
ie_atualiza_tipo_atend_w	tiss_parametros_convenio.ie_atual_conta%type;
nr_seq_saida_spsadt_w		tiss_parametros_convenio.nr_seq_saida_spsadt%type;
nr_seq_saida_consulta_w		tiss_parametros_convenio.nr_seq_saida_consulta%type;
ie_tipo_atend_conta_w		conta_paciente.ie_tipo_atend_conta%type;
ie_att_tipo_atend_conta_w	tiss_parametros_convenio.ie_alt_tipo_atend_conta%type;
nr_interno_conta_w		conta_paciente.nr_interno_conta%type;
ie_tipo_fatur_periodo_w		tiss_parametros_convenio.ie_tipo_fatur_periodo%type;
nr_seq_queixa_w			atendimento_paciente.nr_seq_queixa%type;
count_param_w			integer;
cd_procedencia_w		atendimento_paciente.cd_procedencia%type;
nr_interno_conta_total_w	conta_paciente.nr_interno_conta%type;
ie_tipo_fat_tiss_regra_w        tiss_regra_tipo_fatur.ie_tipo_fat_tiss_regra%type;
ie_atualizar_final_w            tiss_regra_tipo_fatur.ie_atualizar_final%type;
ie_quebra_tipo_atend_conta_w    tiss_regra_tipo_fatur.ie_quebra_tipo_atend_conta%type;

co_char_zero constant tiss_tipo_atendimento.ie_tipo_atend_tiss%type := '0';
co_char_A constant tiss_parametros_convenio.ie_alt_tipo_atend_conta%type := 'A';
co_char_S constant tiss_parametros_convenio.ie_alt_tipo_atend_conta%type := 'S';
co_char_T constant tiss_regra_tipo_consulta.ie_atend_retorno%type := 'T';
co_char_N constant tiss_regra_tipo_consulta.ie_atend_retorno%type := 'N';
co_char_R constant tiss_regra_tipo_consulta.ie_atend_retorno%type := 'R';
co_char_P constant conta_paciente.ie_tipo_fatur_tiss%type := 'P';

c01 CURSOR FOR
SELECT	coalesce(ie_tipo_atend_tiss, co_char_zero)
from	tiss_tipo_atendimento
where	cd_estabelecimento							= cd_estabelecimento_p
and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w,0)			= coalesce(ie_tipo_atendimento_w,0)
and	coalesce(ie_clinica, ie_clinica_w)						= ie_clinica_w
and	coalesce(cd_setor_entrada, cd_setor_entrada_w)				= cd_setor_entrada_w
and	coalesce(cd_convenio, cd_convenio_w)						= cd_convenio_w
and	coalesce(ie_tipo_atend_conta, ie_tipo_atend_conta_w,0) 		= coalesce(ie_tipo_atend_conta_w,0)
and	coalesce(nr_seq_classif_atend, nr_seq_classif_atend_w,0) 		= coalesce(nr_seq_classif_atend_w,0)
and	coalesce(nr_seq_queixa, nr_seq_queixa_w,0)				= coalesce(nr_seq_queixa_w,0)
and	coalesce(cd_procedencia, cd_procedencia_w,0)				= coalesce(cd_procedencia_w,0)
and	coalesce(TISS_OBTER_SE_TIPO_ATEND(nr_sequencia, nr_interno_conta_p), co_char_S)	= co_char_S
order by coalesce(cd_convenio,0),
	coalesce(ie_tipo_atendimento,0),
	coalesce(ie_clinica,0),
	coalesce(cd_setor_entrada,0),	
	coalesce(ie_tipo_atend_conta, co_char_zero),
	coalesce(nr_seq_classif_atend,0),
	coalesce(TISS_OBTER_SE_TIPO_ATEND(nr_sequencia, nr_interno_conta_p), co_char_A), -- Edgar 25/06/2009, OS 133370, ordenar pelas regras que tem regra de procedimento
	coalesce(nr_seq_queixa,0),
	coalesce(cd_procedencia,0);	

c02 CURSOR FOR
SELECT	coalesce(IE_TIPO_CONSULTA_TISS,0)
from	tiss_regra_tipo_consulta
where	cd_estabelecimento					= cd_estabelecimento_p
and	coalesce(nr_seq_classif_atend, nr_seq_classif_atend_w)	= nr_seq_classif_atend_w
and 	coalesce(cd_convenio, cd_convenio_w)				= cd_convenio_w
and	((coalesce(ie_atend_retorno, co_char_T) = co_char_T) or
	 ((coalesce(nr_atend_original_w::text, '') = '') and (coalesce(ie_atend_retorno, co_char_T) = co_char_N)) or
	 ((nr_atend_original_w IS NOT NULL AND nr_atend_original_w::text <> '') and (coalesce(ie_atend_retorno, co_char_T) = co_char_R)))
order 	by coalesce(cd_convenio,0),
	coalesce(nr_seq_classif_atend, 0);
	
c03 CURSOR FOR
SELECT	ie_regra, ie_tipo_fat_tiss_regra, ie_atualizar_final, coalesce(ie_quebra_tipo_atend_conta, co_char_N)
from	tiss_regra_tipo_fatur
where	cd_estabelecimento					= cd_estabelecimento_p
and	coalesce(cd_convenio, cd_convenio_w,0)			= coalesce(cd_convenio_w,0)
and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w,0)	= coalesce(ie_tipo_atendimento_w,0)
and	coalesce(ie_tipo_atend_conta, ie_tipo_atend_conta_w,0)	= coalesce(ie_tipo_atend_conta_w,0)
order by coalesce(ie_tipo_atend_conta, 0),
	coalesce(ie_tipo_atendimento, 0),
	coalesce(cd_convenio, 0);
	

BEGIN

select	max(ie_status_acerto),
	max(ie_tipo_atend_conta)
into STRICT	ie_status_acerto_w,
	ie_tipo_atend_conta_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;

if (coalesce(nr_interno_conta_p,0) > 0) or
	((coalesce(nr_atend_med_p,0) > 0) and (coalesce(nr_seq_prot_med_p,0) > 0)) then
	begin

	select	b.cd_motivo_alta,
		b.dt_alta,
		b.ie_tipo_atendimento,
		coalesce(b.ie_clinica,co_char_zero),
		b.nr_atendimento,
		b.IE_TIPO_ATEND_TISS,
		a.cd_convenio_parametro,
		b.nr_seq_classificacao,
		a.dt_periodo_inicial,
		a.dt_periodo_final,
		b.nr_atend_original,
		b.nr_seq_queixa,
		b.cd_procedencia
	into STRICT	cd_motivo_alta_w,
		dt_alta_w,
		ie_tipo_atendimento_w,
		ie_clinica_w,
		nr_atendimento_w,
		IE_TIPO_ATEND_TISS_w,
		cd_convenio_w,
		nr_seq_classif_atend_w,
		dt_periodo_inicial_w,
		dt_periodo_final_w,
		nr_atend_original_w,
		nr_seq_queixa_w,
		cd_procedencia_w
	from	atendimento_paciente b,
		conta_paciente a
	where	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_interno_conta	= nr_interno_conta_p;
	exception
	when no_data_found  then
		cd_motivo_alta_w	:= null;
		dt_alta_w		:= null;
		ie_tipo_atendimento_w	:= null;
		ie_clinica_w		:= null;
		ie_tipo_atend_tiss_w	:= null;
		cd_procedencia_w	:= null;
    	when too_many_rows then
    		cd_motivo_alta_w	:= null;
		dt_alta_w		:= null;
		ie_tipo_atendimento_w	:= null;
		ie_clinica_w		:= null;
		ie_tipo_atend_tiss_w	:= null;
		cd_procedencia_w	:= null;
	end;
	
	if (coalesce(nr_seq_prot_med_p,0) > 0) then
		
		select	max(cd_convenio)
		into STRICT 	cd_convenio_w
		from 	med_prot_convenio
		where 	nr_sequencia = nr_seq_prot_med_p;
		
	end if;

	select	count(*),
		coalesce(max(ie_data_entrada_alta), co_char_N),
		max(nr_seq_saida_int),
		max(nr_seq_saida_spsadt),
		max(nr_seq_saida_consulta),
		coalesce(max(ie_atual_conta), co_char_N),
		coalesce(max(ie_alt_tipo_atend_conta), co_char_N),
		coalesce(max(ie_tipo_fatur_periodo),co_char_N)
	into STRICT	count_param_w,
		ie_data_entrada_alta_w,
		nr_seq_saida_int_w,
		nr_seq_saida_spsadt_w,
		nr_seq_saida_consulta_w,
		ie_atualiza_tipo_atend_w,
		ie_att_tipo_atend_conta_w,
		ie_tipo_fatur_periodo_w
	from	tiss_parametros_convenio
	where	cd_convenio		= cd_convenio_w
	and	cd_estabelecimento	= cd_estabelecimento_p;

    	if ( ie_att_tipo_atend_conta_w = co_char_S) then
        	ie_tipo_atend_conta_w := ie_tipo_atendimento_w;
    	end if;

	if (count_param_w > 0) then
		begin
		cd_setor_entrada_w	:= obter_setor_atepacu(obter_atepacu_paciente(nr_atendimento_w, co_char_P),0);
		exception
		when others then
			cd_setor_entrada_w	:= null;
		end;

		if (coalesce(cd_motivo_alta_w,0) > 0) then
			CALL tiss_atualizar_alta(	nr_atendimento_w,
						nr_interno_conta_p,
						cd_motivo_alta_w,
						dt_alta_w,
						nm_usuario_p);
		end if;

		if (coalesce(nr_atendimento_w,co_char_zero) > 0)  then

			if (coalesce(IE_TIPO_ATEND_TISS_w,co_char_zero) = co_char_zero) or (ie_atualiza_tipo_atend_w in (co_char_S,co_char_A)) then

				open c01;
				loop
				fetch c01 into
					ie_tipo_atend_tiss_regra_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					ie_tipo_atend_tiss_w	:= ie_tipo_atend_tiss_regra_w;
				end loop;
				close c01;
			end if;

			open c02;
			loop
			fetch c02 into
				ie_tipo_consulta_tiss_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			end loop;
			close c02;

			if (coalesce(ie_tipo_consulta_tiss_w,0) > 0) then
				update	conta_paciente
				set	ie_tipo_consulta_tiss	= coalesce(ie_tipo_consulta_tiss, ie_tipo_consulta_tiss_w)
				where	nr_interno_conta		= nr_interno_conta_p;
			end if;

			select	max(ie_tipo_atend_tiss)
			into STRICT	ie_tipo_atend_tiss_conta_w
			from	conta_paciente
			where	nr_interno_conta	= nr_interno_conta_p;

			if (coalesce(ie_tipo_atend_tiss_w,co_char_zero) <> co_char_zero) and (coalesce(ie_tipo_atend_tiss_conta_w,co_char_zero) = co_char_zero) then
				if (ie_atualizar_todos_p = co_char_S) then
					update	conta_paciente
					set	ie_tipo_atend_tiss	= ie_tipo_atend_tiss_w
					where	nr_interno_conta	= nr_interno_conta_p;
				else
					update	conta_paciente
					set	ie_tipo_atend_tiss	= coalesce(ie_tipo_atend_tiss, ie_tipo_atend_tiss_w)
					where	nr_interno_conta	= nr_interno_conta_p;
				end if;
			end if;
			if (coalesce(ie_tipo_atend_tiss_w,co_char_zero) <> co_char_zero) then
				if (ie_atualiza_tipo_atend_w = co_char_S) then --lhalves OS249864 em 21/09/2010 - Atualizar apenas na conta
					update	conta_paciente
					set	ie_tipo_atend_tiss	= ie_tipo_atend_tiss_w
					where	nr_interno_conta	= nr_interno_conta_p;		
				elsif (ie_atualiza_tipo_atend_w = co_char_A) then -- Atualizar na conta e no atendimento
					update	conta_paciente
					set	ie_tipo_atend_tiss	= ie_tipo_atend_tiss_w
					where	nr_interno_conta	= nr_interno_conta_p;	
					
					update 	atendimento_paciente
					set 	ie_tipo_atend_tiss	= coalesce(ie_tipo_atend_tiss_w,ie_tipo_atend_tiss)
					where 	nr_atendimento		= nr_atendimento_w;
				end if;				
			end if;

		end if;

		if (coalesce(ie_data_entrada_alta_w, co_char_N) = co_char_S) then
			update	conta_paciente
			set	dt_entrada_tiss		= coalesce(dt_periodo_inicial_w,dt_entrada_tiss),
				dt_alta_tiss		= coalesce(dt_periodo_final_w,dt_alta_tiss)
			where	nr_interno_conta	= nr_interno_conta_p;
		end if;	

		update	conta_paciente
		set	dt_geracao_tiss		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			nr_seq_saida_int	= CASE WHEN ie_tipo_fatur_tiss=co_char_P THEN  coalesce(nr_seq_saida_int_w, nr_seq_saida_int)  ELSE nr_seq_saida_int END ,
			nr_seq_saida_spsadt	= CASE WHEN ie_tipo_fatur_tiss=co_char_P THEN  coalesce(nr_seq_saida_spsadt_w, nr_seq_saida_spsadt)  ELSE nr_seq_saida_spsadt END ,
			nr_seq_saida_consulta	= CASE WHEN ie_tipo_fatur_tiss=co_char_P THEN  coalesce(nr_seq_saida_consulta_w, nr_seq_saida_consulta)  ELSE nr_seq_saida_consulta END ,
			ie_tipo_atend_conta	= CASE WHEN ie_att_tipo_atend_conta_w=co_char_S THEN  coalesce(ie_tipo_atendimento_w, ie_tipo_atend_conta)  ELSE ie_tipo_atend_conta END
		where	nr_interno_conta	= nr_interno_conta_p;
		
		if (coalesce(ie_tipo_fatur_periodo_w,co_char_N) = co_char_R) then --Conforme regra Shift + F11
		
			open C03;
			loop
			fetch C03 into	
				ie_tipo_fatur_periodo_w, ie_tipo_fat_tiss_regra_w, ie_atualizar_final_w, ie_quebra_tipo_atend_conta_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */	
				ie_tipo_fatur_periodo_w	:= ie_tipo_fatur_periodo_w;
				ie_tipo_fat_tiss_regra_w := ie_tipo_fat_tiss_regra_w;
				ie_atualizar_final_w 	:= ie_atualizar_final_w;
               	 		ie_quebra_tipo_atend_conta_w := ie_quebra_tipo_atend_conta_w;
			end loop;
			close C03;
		end if;
		
		if (coalesce(ie_tipo_fatur_periodo_w,co_char_N) = co_char_S) then /*lhalves OS344143 em 26/07/2011*/
		
			/*1013462 Foi apresentada a necessidade de atualizar o tipo de faturamento como complementar
			quando existir uma conta faturada TOTAL com o mesmo periodo*/
			select	max(a.nr_interno_conta)
			into STRICT	nr_interno_conta_total_w
			from 	conta_paciente a
			where	a.nr_atendimento	= nr_atendimento_w
			and	a.cd_convenio_parametro	= cd_convenio_w
			and	a.dt_periodo_final 	= dt_periodo_final_w
			and	a.dt_periodo_inicial 	= dt_periodo_inicial_w
			and	a.nr_interno_conta	< nr_interno_conta_p;

            		if (ie_quebra_tipo_atend_conta_w = 'S' and (ie_tipo_atend_conta_w IS NOT NULL AND ie_tipo_atend_conta_w::text <> '')) then
                		select	max(a.nr_interno_conta)
                		into STRICT	nr_interno_conta_w
                		from 	conta_paciente a
                		where	a.nr_atendimento	= nr_atendimento_w
                		and	a.cd_convenio_parametro	= cd_convenio_w
                		and 	coalesce(a.ie_tipo_atend_conta, ie_tipo_atend_conta_w) = ie_tipo_atend_conta_w
                		and	not exists (		SELECT	1
					from 	conta_paciente x
					where	x.nr_atendimento	= a.nr_atendimento
					and	x.cd_convenio_parametro	= a.cd_convenio_parametro
					and	a.dt_periodo_final 	= dt_periodo_final_w
					and	a.dt_periodo_inicial 	= dt_periodo_inicial_w
					and	a.nr_interno_conta	> nr_interno_conta_p
					and 	x.ie_tipo_atend_conta 	= ie_tipo_atend_conta_w )
                		and	a.dt_periodo_final 	= (	SELECT	max(x.dt_periodo_final)
					from	conta_paciente x
					where	x.nr_atendimento	= a.nr_atendimento
					and	x.cd_convenio_parametro	= a.cd_convenio_parametro
					and	x.cd_estabelecimento	= a.cd_estabelecimento
					and 	x.ie_tipo_atend_conta 	= ie_tipo_atend_conta_w );
            		else
                		select	max(a.nr_interno_conta)
                		into STRICT	nr_interno_conta_w
                		from 	conta_paciente a
                		where	a.nr_atendimento	= nr_atendimento_w
                		and	a.cd_convenio_parametro	= cd_convenio_w
                		and	not exists (		SELECT	1
					from 	conta_paciente x
					where	x.nr_atendimento	= a.nr_atendimento
					and	x.cd_convenio_parametro	= a.cd_convenio_parametro
					and	a.dt_periodo_final 	= dt_periodo_final_w
					and	a.dt_periodo_inicial 	= dt_periodo_inicial_w
					and	a.nr_interno_conta	> nr_interno_conta_p)
                		and	a.dt_periodo_final 	= (	SELECT	max(x.dt_periodo_final)
					from	conta_paciente x
                        		where	x.nr_atendimento	= a.nr_atendimento
					and	x.cd_convenio_parametro	= a.cd_convenio_parametro
					and	x.cd_estabelecimento	= a.cd_estabelecimento);
            		end if;

			if (nr_interno_conta_total_w IS NOT NULL AND nr_interno_conta_total_w::text <> '') then
				update	conta_paciente
				set	ie_tipo_fatur_tiss 	= 'C'
				where	nr_interno_conta	= nr_interno_conta_p;
			elsif (nr_interno_conta_w = nr_interno_conta_p) then			
				if (ie_atualizar_final_w = co_char_S) then
                    		begin
                    			select 'F' into STRICT ie_tipo_fat_tiss_regra_w
                    			from conta_paciente c
                    			where c.nr_atendimento = nr_atendimento_w
                    			and c.cd_convenio_parametro	= cd_convenio_w
                    			and c.ie_tipo_fatur_tiss = co_char_P
                    			and c.nr_interno_conta <> nr_interno_conta_w 
                                	and coalesce(c.ie_cancelamento::text, '') = ''  LIMIT 1;
                    			exception
                        			when no_data_found  then
                            				ie_tipo_fat_tiss_regra_w := null;
                                    		when too_many_rows then
                            				ie_tipo_fat_tiss_regra_w := null;
                    		end;
                		end if;
				
				update	conta_paciente
				set	ie_tipo_fatur_tiss 	= coalesce(ie_tipo_fat_tiss_regra_w,co_char_T)  ---- co_char_T Se ele tem regra cadastrada vai colocar o valor da regra, senao mantem o padrao do sistema
				where	nr_interno_conta	= nr_interno_conta_p;
			else
				update	conta_paciente
				set	ie_tipo_fatur_tiss 	= co_char_P
				where	nr_interno_conta	= nr_interno_conta_p;
                				
				update	conta_paciente
				set	dt_geracao_tiss		= clock_timestamp(),
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp(),
					nr_seq_saida_int		= CASE WHEN ie_tipo_fatur_tiss=co_char_P THEN  coalesce(nr_seq_saida_int_w, nr_seq_saida_int)  ELSE nr_seq_saida_int END ,
					nr_seq_saida_spsadt	= CASE WHEN ie_tipo_fatur_tiss=co_char_P THEN  coalesce(nr_seq_saida_spsadt_w, nr_seq_saida_spsadt)  ELSE nr_seq_saida_spsadt END ,
					nr_seq_saida_consulta	= CASE WHEN ie_tipo_fatur_tiss=co_char_P THEN  coalesce(nr_seq_saida_consulta_w, nr_seq_saida_consulta)  ELSE nr_seq_saida_consulta END
				where	nr_interno_conta		= nr_interno_conta_p;
		
			end if;
		end if;	

		CALL TISS_ATUALIZAR_DESPESAS(nr_interno_conta_p, nm_usuario_p);

		CALL tiss_gerar_conta(nr_interno_conta_p, nr_seq_med_fatur_p, cd_estabelecimento_p, nm_usuario_p, nr_atend_med_p, nr_seq_prot_med_p);

		if (coalesce(wheb_usuario_pck.get_ie_commit, co_char_S) = co_char_S) then commit; end if;
		
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_atualizar_conta_paciente (nr_interno_conta_p text, nr_seq_med_fatur_p text, ie_atualizar_todos_p text, cd_estabelecimento_p text, nm_usuario_p text, nr_atend_med_p bigint, nr_seq_prot_med_p bigint) FROM PUBLIC;

