-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_resultado_scc ( nr_seq_interno_p prescr_procedimento.nr_seq_interno%TYPE, cd_exame_p text, ds_resultado_p text, ds_units_p text, ds_referencia_p text, ds_flag_p text, cd_metodo_p text ) AS $body$
DECLARE


    nr_prescricao_w          prescr_procedimento.nr_prescricao%TYPE;
    nr_seq_prescr_w          prescr_procedimento.nr_sequencia%TYPE;
    ie_status_atend_w        prescr_procedimento.ie_status_atend%TYPE;
    ie_status_receb_w        prescr_procedimento.ie_status_atend%TYPE;
    cd_exame_princ_w         exame_laboratorio.cd_exame%TYPE;
    cd_estabelecimento_w     estabelecimento.cd_estabelecimento%TYPE;
    ie_sexo_w                pessoa_fisica.ie_sexo%TYPE;
    nr_seq_resultado_w       exame_lab_resultado.nr_seq_resultado%TYPE;
    nr_seq_exame_princ_w     exame_laboratorio.nr_seq_exame%TYPE;
    cd_analito_w             exame_laboratorio.cd_exame%TYPE;
    nr_seq_analito_w         exame_laboratorio.nr_seq_exame%TYPE;
    nr_seq_material_w        material_exame_lab.nr_sequencia%TYPE;
    ds_resultado_w           exame_lab_result_item.ds_resultado%TYPE;
    qt_resultado_w           exame_lab_result_item.qt_resultado%TYPE;
    pr_resultado_w           exame_lab_result_item.pr_resultado%TYPE;
    nr_anos_w                smallint;
    count_w                  smallint;
    ds_erro_w                varchar(4000);
    ie_campo_calculo_w       varchar(1);
    ie_formato_resultado_w   varchar(3);
    cd_pessoa_fisica_w       pessoa_fisica.cd_pessoa_fisica%TYPE;

BEGIN
    IF ( coalesce(nr_seq_interno_p::text, '') = '' ) THEN
        CALL wheb_mensagem_pck.exibir_mensagem_abort(nr_seq_mensagem_p => 277600);
    END IF;

    SELECT
        COUNT(1)
    INTO STRICT
        count_w
    FROM
        prescr_procedimento c
    WHERE
        nr_seq_interno = nr_seq_interno_p;

    IF ( count_w = 0 ) THEN
        CALL wheb_mensagem_pck.exibir_mensagem_abort(
            nr_seq_mensagem_p => 1111467,
            vl_macros_p => 'NR_SEQ_INTERNO=' || nr_seq_interno_p
        );
    END IF;

    BEGIN
        SELECT
            c.nr_sequencia,
            c.ie_status_atend,
            coalesce(e.cd_exame_integracao, e.cd_exame),
            c.nr_seq_exame,
            c.nr_prescricao,
            b.cd_estabelecimento,
            obter_sexo_prescricao(b.nr_prescricao)
        INTO STRICT
            nr_seq_prescr_w,
            ie_status_atend_w,
            cd_exame_princ_w,
            nr_seq_exame_princ_w,
            nr_prescricao_w,
            cd_estabelecimento_w,
            ie_sexo_w
        FROM
            atendimento_paciente   a,
            prescr_medica          b,
            prescr_procedimento    c,
            material_exame_lab     d,
            exame_laboratorio      e
        WHERE
            a.nr_atendimento = b.nr_atendimento
            AND b.nr_prescricao = c.nr_prescricao
            AND c.cd_material_exame = d.cd_material_exame
            AND c.nr_seq_exame = e.nr_seq_exame
            AND c.nr_seq_interno = nr_seq_interno_p
            AND coalesce(c.ie_suspenso, 'N') = 'N'
            AND coalesce(e.ie_situacao, 'A') = 'A';

    EXCEPTION
        WHEN no_data_found OR too_many_rows OR data_exception THEN
            CALL wheb_mensagem_pck.exibir_mensagem_abort(nr_seq_mensagem_p => 1111337);
    END;WITH RECURSIVE cte AS (


    BEGIN
        SELECT
            MAX(coalesce(e.cd_exame_integracao, e.cd_exame)),MAX(e.nr_seq_exame)
        INTO STRICT
            cd_analito_w,nr_seq_analito_w
        FROM
            exame_laboratorio e WHERE nr_seq_superior = nr_seq_exame_princ_w
  UNION ALL


    BEGIN
        SELECT
            MAX(coalesce(e.cd_exame_integracao, e.cd_exame)),MAX(e.nr_seq_exame)
        INTO STRICT
            cd_analito_w,nr_seq_analito_w
        FROM
            exame_laboratorio e JOIN cte c ON (c.nr_seq_exame = e.nr_seq_superior)

) SELECT * FROM cte WHERE nr_seq_exame = (
                SELECT
                    nr_seq_exame
                FROM
                    equipamento_lab   b,
                    lab_exame_equip   a
                WHERE
                    a.cd_equipamento = b.cd_equipamento
                    AND a.cd_exame_equip = cd_exame_p
                    AND upper(b.ds_sigla) = 'SCC'
                    AND a.nr_seq_exame = e.nr_seq_exame
            );
;

        IF coalesce(cd_analito_w::text, '') = '' THEN
            IF cd_exame_princ_w <> cd_exame_p THEN
                CALL wheb_mensagem_pck.exibir_mensagem_abort(
                    nr_seq_mensagem_p => 1114528,
                    vl_macros_p => 'DS_CODIGO=' || cd_exame_p
                );
            END IF;

        END IF;

    EXCEPTION
        WHEN no_data_found OR too_many_rows OR data_exception THEN
            CALL wheb_mensagem_pck.exibir_mensagem_abort(
                nr_seq_mensagem_p => 1114528,
                vl_macros_p => 'DS_CODIGO=' || cd_exame_p
            );
    END;

    SELECT
        MAX(ie_status_receb)
    INTO STRICT
        ie_status_receb_w
    FROM
        lab_parametro
    WHERE
        cd_estabelecimento = cd_estabelecimento_w;

    SELECT
        trunc((clock_timestamp() - dt_nascimento) / 365.25),
        b.cd_pessoa_fisica
    INTO STRICT
        nr_anos_w,
        cd_pessoa_fisica_w
    FROM
        prescr_medica   a,
        pessoa_fisica   b
    WHERE
        a.cd_pessoa_fisica = b.cd_pessoa_fisica
        AND a.nr_prescricao = nr_prescricao_w;

    UPDATE
        prescr_procedimento
    SET
        ie_status_atend = 30
    WHERE
        nr_seq_interno = nr_seq_interno_p
        AND ie_status_atend > 30;

    IF ( ie_status_atend_w <= 30 ) THEN
        SELECT
            MAX(a.nr_seq_resultado),
            MAX(b.nr_seq_material)
        INTO STRICT
            nr_seq_resultado_w,
            nr_seq_material_w
        FROM
            exame_lab_resultado     a,
            exame_lab_result_item   b
        WHERE
            a.nr_seq_resultado = b.nr_seq_resultado
            AND a.nr_prescricao = nr_prescricao_w
            AND b.nr_seq_prescr = nr_seq_prescr_w
            AND (b.nr_seq_material IS NOT NULL AND b.nr_seq_material::text <> '');

        IF ( coalesce(nr_seq_resultado_w::text, '') = '' ) THEN
            CALL gera_exame_result_lab(
                nr_prescricao_p => nr_prescricao_w,
                nr_seq_prescr_p => nr_seq_prescr_w,
                ie_somente_amostra_p => 'N',
                ie_digitacao_p => 'N',
                ie_gera_laudo_p => 'S',
                nm_usuario_p => 'SCC'
            );

        END IF;

    END IF;

    SELECT
        MAX(a.nr_seq_resultado),
        MAX(b.nr_seq_material)
    INTO STRICT
        nr_seq_resultado_w,
        nr_seq_material_w
    FROM
        exame_lab_resultado     a,
        exame_lab_result_item   b
    WHERE
        a.nr_seq_resultado = b.nr_seq_resultado
        AND a.nr_prescricao = nr_prescricao_w
        AND b.nr_seq_prescr = nr_seq_prescr_w
        AND (b.nr_seq_material IS NOT NULL AND b.nr_seq_material::text <> '');

    SELECT
        MAX(ie_formato_resultado)
    INTO STRICT
        ie_formato_resultado_w
    FROM
        exame_laboratorio
    WHERE
        nr_seq_exame = coalesce(nr_seq_analito_w, nr_seq_exame_princ_w);

    IF ( substr(ie_formato_resultado_w, 1, 1) = 'P' ) THEN
        SELECT
            (coalesce(replace(ds_resultado_p, '.', ','), 0))::numeric
        INTO STRICT
            pr_resultado_w
;

    ELSIF ( substr(ie_formato_resultado_w, 1, 1) = 'V' ) OR ( substr(ie_formato_resultado_w, 2, 1) = 'V' ) THEN
        BEGIN
            SELECT
                (coalesce(ds_resultado_p, 0))::numeric
            INTO STRICT
                qt_resultado_w
;

        EXCEPTION
            WHEN data_exception THEN
                BEGIN
                    SELECT
                        (coalesce(replace(ds_resultado_p, '.', ','), 0))::numeric
                    INTO STRICT
                        qt_resultado_w
;

                EXCEPTION
                    WHEN data_exception THEN
                        BEGIN
                            SELECT
                                (coalesce(replace(ds_resultado_p, ',', '.'), 0))::numeric
                            INTO STRICT
                                qt_resultado_w
;

                        EXCEPTION
                            WHEN data_exception THEN
                                ds_resultado_w := trim(both ds_resultado_p);
                        END;
                END;
        END;
    ELSE
        ds_resultado_w := trim(both ds_resultado_p);
    END IF;

    CALL gera_resultado_lab(
        nr_seq_resultado_p => nr_seq_resultado_w,
        nr_prescricao_p => nr_prescricao_w,
        nr_seq_prescr_p => nr_seq_prescr_w,
        nr_seq_exame_p => nr_seq_exame_princ_w,
        nr_seq_material_p => nr_seq_material_w,
        nr_idade_p => obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A'),
        ie_sexo_p => obter_dados_pf(cd_pessoa_fisica_w, 'SE'),
        nm_usuario_p => 'SCC'
    );

    ds_erro_p => ds_erro_w := atualizar_lab_result_item(
        nr_prescricao_p => nr_prescricao_w, nr_seq_prescr_p => nr_seq_prescr_w, cd_exame_p => coalesce(cd_analito_w, cd_exame_princ_w), qt_resultado_p => qt_resultado_w, pr_resultado_p => pr_resultado_w, ds_resultado_p => ds_resultado_w, ds_observacao_p => NULL, cd_material_exame_p => NULL, ie_reenvio_p => 'N', nm_usuario_p => 'SCC', dt_coleta_p => clock_timestamp(), ds_referencia_p => ds_referencia_p, ds_unidade_medida_p => ds_units_p, nr_doc_lab_p => NULL, dt_resultado_p => NULL, ds_erro_p => ds_erro_w, nr_seq_exame_atualiz_p => nr_seq_analito_w, ds_flag_p => ds_flag_p, cd_metodo_p => cd_metodo_p);

    COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_resultado_scc ( nr_seq_interno_p prescr_procedimento.nr_seq_interno%TYPE, cd_exame_p text, ds_resultado_p text, ds_units_p text, ds_referencia_p text, ds_flag_p text, cd_metodo_p text ) FROM PUBLIC;

