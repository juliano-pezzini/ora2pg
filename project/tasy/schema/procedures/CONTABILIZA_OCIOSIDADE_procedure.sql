-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_ociosidade ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


dt_referencia_lote_w            lote_contabil.dt_referencia%type;
cd_estab_lote_w                 lote_contabil.cd_estabelecimento%type;
cd_empresa_w                    ctb_regra_lote_moeda_est.cd_empresa%type;
cd_estabelecimento_w            ctb_regra_lote_moeda_est.cd_estabelecimento%type;
ds_compl_historico_w            w_movimento_contabil.ds_compl_historico%type;
ie_centro_custo_w               conta_contabil.ie_centro_custo%type;
nr_seq_tabela_taxa_ocio_w       tabela_custo.nr_sequencia%type;
nr_sequencia_w                  w_movimento_contabil.nr_sequencia%type;
cd_tipo_lote_contabil_w         bigint;

c_valores CURSOR FOR
        SELECT  a.cd_estabelecimento,
                a.cd_centro_controle,
                a.cd_redutor_capacidade,
                coalesce(a.vl_ociosidade,0) vl_ociosidade,
                a.nr_seq_tabela
        from    taxa_custo_ocio a
        where   a.nr_seq_tabela         = nr_seq_tabela_taxa_ocio_w
        and     a.cd_estabelecimento    = cd_estab_lote_w
        and     exists ( SELECT  1
                        from    centro_custo y
                        where   y.cd_estabelecimento    = a.cd_estabelecimento
                        and     y.cd_centro_custo       = a.cd_centro_controle)
        and     a.cd_redutor_capacidade in (
                                        select  x.cd_redutor_capacidade
                                        from    reduc_capac_centro_controle x
                                        where   x.cd_estabelecimento = a.cd_estabelecimento
                                        and     x.cd_centro_controle = a.cd_centro_controle
                                        and     x.nr_sequencia_nivel = 4
                                        )
        order by 1,2,3;

c02 CURSOR FOR
        SELECT  cd_conta_credito,
                cd_conta_debito,
                cd_historico,
                nr_sequencia
        from    ctb_regra_lote_ociosidade a
        where   a.cd_estabelecimento = cd_estab_lote_w
        and     substr(obter_se_periodo_vigente(a.dt_inicio_vigencia, a.dt_fim_vigencia, dt_referencia_lote_w),1,1) = 'S';

vet02   c02%rowtype;

BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 56) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
begin
select  a.dt_referencia,
        a.cd_estabelecimento
into STRICT    dt_referencia_lote_w,
        cd_estab_lote_w
from    lote_contabil a
where   a.nr_lote_contabil = nr_lote_contabil_p;
exception when others then
        dt_referencia_lote_w    := null;
        cd_estab_lote_w         := null;
end;

cd_empresa_w    := obter_empresa_estab(cd_estab_lote_w);

begin
select  a.nr_sequencia
into STRICT    nr_seq_tabela_taxa_ocio_w
from    tabela_custo a
where   a.cd_empresa                    = cd_empresa_w
and     coalesce(a.cd_estabelecimento, cd_estab_lote_w)      = cd_estab_lote_w
and     a.cd_tipo_tabela_custo          = 7
and     trunc(a.dt_mes_referencia,'mm') = trunc(dt_referencia_lote_w,'mm')
and     a.ie_orcado_real                = 'R';
exception when others then
        nr_seq_tabela_taxa_ocio_w       := null;
end;

if (ie_exclusao_p = 'S') then
        CALL wheb_usuario_pck.set_ie_lote_contabil('S');

        delete  from w_movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;
        commit;

        delete  from movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update lote_contabil
        set     vl_credito              = 0,
                vl_debito               = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;
        commit;
        CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else

        delete  from w_movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;
        commit;

        delete  from movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;
        commit;

        open C02;
        loop
        fetch C02 into
                vet02;
        EXIT WHEN NOT FOUND; /* apply on C02 */

                for valores in c_valores loop

                        if (valores.vl_ociosidade <> 0) then
                                nr_sequencia_w  := nr_sequencia_w + 1;

                                begin
                                select  coalesce(c.ie_centro_custo,'N')
                                into STRICT    ie_centro_custo_w
                                from    conta_contabil c
                                where   c.cd_conta_contabil     = vet02.cd_conta_debito;

                                select  a.ds_redutor_capacidade
                                into STRICT    ds_compl_historico_w
                                from    redutor_capacidade a
                                where   a.cd_redutor_capacidade = valores.cd_redutor_capacidade;
                                exception when others then
                                        ie_centro_custo_w       := 'N';
                                        ds_compl_historico_w    := '';
                                end;

                                insert into w_movimento_contabil(
                                        nr_lote_contabil,
                                        cd_estabelecimento,
                                        nr_sequencia,
                                        cd_conta_contabil,
                                        ie_debito_credito,
                                        cd_historico,
                                        dt_movimento,
                                        vl_movimento,
                                        cd_centro_custo,
                                        ds_compl_historico,
                                        nr_seq_agrupamento,
                                        nr_seq_trans_fin,
                                        cd_cgc,
                                        cd_pessoa_fisica,
                                        nr_documento,
                                        ie_transitorio,
                                        nm_tabela,
                                        nm_atributo,
                                        nr_seq_tab_orig,
                                        nr_seq_info)
                                values ( nr_lote_contabil_p,
                                        valores.cd_estabelecimento,
                                        nr_sequencia_w,
                                        vet02.cd_conta_debito,
                                        'D',
                                        vet02.cd_historico,
                                        dt_referencia_lote_w,
                                        valores.vl_ociosidade,
                                        CASE WHEN ie_centro_custo_w='S' THEN valores.cd_centro_controle  ELSE null END ,
                                        ds_compl_historico_w,
                                        vet02.nr_sequencia,
                                        null,
                                        null,
                                        null,
                                        null,
                                        'N',
                                        'TAXA_CUSTO_OCIO',
                                        'VL_OCIOSIDADE',
                                        valores.nr_seq_tabela,
                                        78);

                                nr_sequencia_w  := nr_sequencia_w + 1;

                                select  coalesce(c.ie_centro_custo,'N')
                                into STRICT    ie_centro_custo_w
                                from    conta_contabil c
                                where   c.cd_conta_contabil     = vet02.cd_conta_credito;

                                insert into w_movimento_contabil(
                                        nr_lote_contabil,
                                        cd_estabelecimento,
                                        nr_sequencia,
                                        cd_conta_contabil,
                                        ie_debito_credito,
                                        cd_historico,
                                        dt_movimento,
                                        vl_movimento,
                                        cd_centro_custo,
                                        ds_compl_historico,
                                        nr_seq_agrupamento,
                                        nr_seq_trans_fin,
                                        cd_cgc,
                                        cd_pessoa_fisica,
                                        nr_documento,
                                        ie_transitorio,
                                        nm_tabela,
                                        nm_atributo,
                                        nr_seq_tab_orig,
                                        nr_seq_info)
                                values ( nr_lote_contabil_p,
                                        valores.cd_estabelecimento,
                                        nr_sequencia_w,
                                        vet02.cd_conta_credito,
                                        'C',
                                        vet02.cd_historico,
                                        dt_referencia_lote_w,
                                        valores.vl_ociosidade,
                                        CASE WHEN ie_centro_custo_w='S' THEN valores.cd_centro_controle  ELSE null END ,
                                        ds_compl_historico_w,
                                        vet02.nr_sequencia,
                                        null,
                                        null,
                                        null,
                                        null,
                                        'N',
                                        'TAXA_CUSTO_OCIO',
                                        'VL_OCIOSIDADE',
                                        valores.nr_seq_tabela,
                                        78);
                        end if;
                end loop;
        end loop;
        close C02;

CALL agrupa_movimento_contabil(nr_lote_contabil_p, nm_usuario_p);

end if;

if (coalesce(ds_retorno_p::text, '') = '') then
        update  lote_contabil
        set     ie_situacao             = 'A',
                dt_geracao_lote         = clock_timestamp()
        where   nr_lote_contabil        = nr_lote_contabil_p;

        if (ie_exclusao_p = 'S') then
                ds_retorno_p    := wheb_mensagem_pck.get_texto(165188);

                CALL ctb_gravar_log_lote(    nr_lote_contabil_p,
                                        2,
                                        '',
                                        nm_usuario_p);
        else
                ds_retorno_p    := wheb_mensagem_pck.get_texto(165187);

                CALL ctb_gravar_log_lote(    nr_lote_contabil_p,
                                        1,
                                        '',
                                        nm_usuario_p);
        end if;
        commit;
else
        rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_ociosidade ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

