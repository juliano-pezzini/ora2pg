-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_clas_rede_prest ( nr_seq_lote_p ptu_movimento_prestador.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) AS $body$
DECLARE

					
nr_seq_clas_rede_prest_w	ptu_clas_rede_prestador.nr_sequencia%type;
id_uti_w			ptu_clas_rede_prestador.id_uti%type;
cd_versao_ptu_xml_w		ptu_regra_interface.cd_versao_ptu_xml%type;
nr_seq_rede_prest_econ_w	ptu_clas_rede_prest_econ.nr_sequencia%type;
sadt_cnpj_cpf_terc_1_w		ptu_clas_rede_prest_sadt.sadt_cnpj_cpf_terc_1%type;
sadt_nm_terc_1_w		ptu_clas_rede_prest_sadt.sadt_nm_terc_1%type;
dt_atual_w			timestamp := trunc(clock_timestamp());
ie_tipo_acreditacao_w		pls_prestador_qualif.ie_tipo_acreditacao%type;

C01 CURSOR(    nr_seq_lote_pc	ptu_prestador.nr_sequencia%type ) FOR
        SELECT  CASE WHEN length(a.cd_cgc_cpf)=14 THEN a.cd_cgc_cpf  ELSE null END  cd_cgc,
                CASE WHEN length(a.cd_cgc_cpf)=11 THEN a.cd_cgc_cpf  ELSE null END  cd_cpf,
                substr(a.cd_prestador,1,8) cd_prestador,
		a.nr_seq_prestador,
		'04' id_uti,
		(SELECT	max(x.cd_servico)
		from	ptu_servico_urg_emerg x
		where	x.nr_sequencia	= b.nr_seq_servico_urg_emerg) id_nivel_disp
	from	ptu_prestador 			a,
		pls_prestador			b
	where   b.nr_sequencia		= a.nr_seq_prestador
	and	a.nr_seq_movimento	= nr_seq_lote_pc
	and	a.ie_tipo_prestador in ('02','10') -- Somente Hospital e Hospital Dia
	order by nr_seq_prestador;
	
C02 CURSOR(    nr_seq_prestador_pc		pls_prestador.nr_sequencia%type ) FOR
	SELECT	CASE WHEN a.nr_leitos_psiquiat_exist=0 THEN  null  ELSE a.nr_leitos_psiquiat_exist END  nr_leitos_psiquiat_exist,
		CASE WHEN a.nr_leitos_psiquiat_disp=0 THEN  null  ELSE a.nr_leitos_psiquiat_disp END  nr_leitos_psiquiat_disp,
		CASE WHEN a.nr_leitos_intermed_neo_exist=0 THEN  null  ELSE a.nr_leitos_intermed_neo_exist END  nr_leitos_intermed_neo_exist,
		CASE WHEN a.nr_leitos_intermed_neo_disp=0 THEN  null  ELSE a.nr_leitos_intermed_neo_disp END  nr_leitos_intermed_neo_disp,
		CASE WHEN a.nr_leitos_hosp_dia_exist=0 THEN  null  ELSE a.nr_leitos_hosp_dia_exist END  nr_leitos_hosp_dia_exist,
		CASE WHEN a.nr_leitos_hosp_dia_disp=0 THEN  null  ELSE a.nr_leitos_hosp_dia_disp END  nr_leitos_hosp_dia_disp,
		CASE WHEN a.nr_leitos_bercario_exist=0 THEN  null  ELSE a.nr_leitos_bercario_exist END  nr_leitos_bercario_exist,
		CASE WHEN a.nr_leitos_bercario_disp=0 THEN  null  ELSE a.nr_leitos_bercario_disp END  nr_leitos_bercario_disp,
		CASE WHEN a.nr_leitos_individual_exist=0 THEN  null  ELSE a.nr_leitos_individual_exist END  nr_leitos_individual_exist,
		CASE WHEN a.nr_leitos_individual_disp=0 THEN  null  ELSE a.nr_leitos_individual_disp END  nr_leitos_individual_disp,
		CASE WHEN a.nr_leitos_coletivo_exist=0 THEN  null  ELSE a.nr_leitos_coletivo_exist END  nr_leitos_coletivo_exist,
		CASE WHEN a.nr_leitos_coletivo_disp=0 THEN  null  ELSE a.nr_leitos_coletivo_disp END  nr_leitos_coletivo_disp,
		CASE WHEN a.nr_leitos_isolamento_exist=0 THEN  null  ELSE a.nr_leitos_isolamento_exist END  nr_leitos_isolamento_exist,
		CASE WHEN a.nr_leitos_isolamento_disp=0 THEN  null  ELSE a.nr_leitos_isolamento_disp END  nr_leitos_isolamento_disp,
		CASE WHEN a.nr_leitos_ucc_exist=0 THEN  null  ELSE a.nr_leitos_ucc_exist END  nr_leitos_ucc_exist,
		CASE WHEN a.nr_leitos_ucc_disp=0 THEN  null  ELSE a.nr_leitos_ucc_disp END  nr_leitos_ucc_disp,
		CASE WHEN a.nr_leitos_semi_exist=0 THEN  null  ELSE a.nr_leitos_semi_exist END  nr_leitos_semi_exist,
		CASE WHEN a.nr_leitos_semi_disp=0 THEN  null  ELSE a.nr_leitos_semi_disp END  nr_leitos_semi_disp,
		CASE WHEN a.nr_leitos_uci_neo_conv_exist=0 THEN  null  ELSE a.nr_leitos_uci_neo_conv_exist END  nr_leitos_uci_neo_conv_exist,
		CASE WHEN a.nr_leitos_uci_neo_conv_disp=0 THEN  null  ELSE a.nr_leitos_uci_neo_conv_disp END  nr_leitos_uci_neo_conv_disp,
		CASE WHEN a.nr_leitos_uci_neo_cang_exist=0 THEN  null  ELSE a.nr_leitos_uci_neo_cang_exist END  nr_leitos_uci_neo_cang_exist,
		CASE WHEN a.nr_leitos_uci_neo_cang_disp=0 THEN  null  ELSE a.nr_leitos_uci_neo_cang_disp END  nr_leitos_uci_neo_cang_disp,
		CASE WHEN a.nr_leitos_uci_pediatrico_exist=0 THEN  null  ELSE a.nr_leitos_uci_pediatrico_exist END  nr_leitos_uci_pediatrico_exist,
		CASE WHEN a.nr_leitos_uci_pediatrico_disp=0 THEN  null  ELSE a.nr_leitos_uci_pediatrico_disp END  nr_leitos_uci_pediatrico_disp,
		CASE WHEN a.nr_leitos_uci_adulto_exist=0 THEN  null  ELSE a.nr_leitos_uci_adulto_exist END  nr_leitos_uci_adulto_exist,
		CASE WHEN a.nr_leitos_uci_adulto_disp=0 THEN  null  ELSE a.nr_leitos_uci_adulto_disp END  nr_leitos_uci_adulto_disp,
		CASE WHEN a.nr_leitos_coronariana_exist=0 THEN  null  ELSE a.nr_leitos_coronariana_exist END  nr_leitos_coronariana_exist,
		CASE WHEN a.nr_leitos_coronariana_disp=0 THEN  null  ELSE a.nr_leitos_coronariana_disp END  nr_leitos_coronariana_disp,
		CASE WHEN a.nr_uti_adulto_exist=0 THEN  null  ELSE a.nr_uti_adulto_exist END  nr_uti_adulto_exist,
		CASE WHEN a.nr_uti_adulto_disp=0 THEN  null  ELSE a.nr_uti_adulto_disp END  nr_uti_adulto_disp,
		CASE WHEN a.nr_uti_neonatal_exist=0 THEN  null  ELSE a.nr_uti_neonatal_exist END  nr_uti_neonatal_exist,
		CASE WHEN a.nr_uti_neonatal_disp=0 THEN  null  ELSE a.nr_uti_neonatal_disp END  nr_uti_neonatal_disp,
		CASE WHEN a.nr_uti_pediatria_exist=0 THEN  null  ELSE a.nr_uti_pediatria_exist END  nr_uti_pediatria_exist,
		CASE WHEN a.nr_uti_pediatria_disp=0 THEN  null  ELSE a.nr_uti_pediatria_disp END  nr_uti_pediatria_disp,
		CASE WHEN a.nr_uti_adulto_tp_1_exist=0 THEN  null  ELSE a.nr_uti_adulto_tp_1_exist END  nr_uti_adulto_tp_1_exist,
		CASE WHEN a.nr_uti_adulto_tp_1_disp=0 THEN  null  ELSE a.nr_uti_adulto_tp_1_disp END  nr_uti_adulto_tp_1_disp,
		CASE WHEN a.nr_uti_adulto_tp_2_exist=0 THEN  null  ELSE a.nr_uti_adulto_tp_2_exist END  nr_uti_adulto_tp_2_exist,
		CASE WHEN a.nr_uti_adulto_tp_2_disp=0 THEN  null  ELSE a.nr_uti_adulto_tp_2_disp END  nr_uti_adulto_tp_2_disp,
		CASE WHEN a.nr_uti_adulto_tp_3_exist=0 THEN  null  ELSE a.nr_uti_adulto_tp_3_exist END  nr_uti_adulto_tp_3_exist,
		CASE WHEN a.nr_uti_adulto_tp_3_disp=0 THEN  null  ELSE a.nr_uti_adulto_tp_3_disp END  nr_uti_adulto_tp_3_disp,
		CASE WHEN a.nr_uti_pediatrica_tp_1_exist=0 THEN  null  ELSE a.nr_uti_pediatrica_tp_1_exist END  nr_uti_pediatrica_tp_1_exist,
		CASE WHEN a.nr_uti_pediatrica_tp_1_disp=0 THEN  null  ELSE a.nr_uti_pediatrica_tp_1_disp END  nr_uti_pediatrica_tp_1_disp,
		CASE WHEN a.nr_uti_pediatrica_tp_2_exist=0 THEN  null  ELSE a.nr_uti_pediatrica_tp_2_exist END  nr_uti_pediatrica_tp_2_exist,
		CASE WHEN a.nr_uti_pediatrica_tp_2_disp=0 THEN  null  ELSE a.nr_uti_pediatrica_tp_2_disp END  nr_uti_pediatrica_tp_2_disp,
		CASE WHEN a.nr_uti_pediatrica_tp_3_exist=0 THEN  null  ELSE a.nr_uti_pediatrica_tp_3_exist END  nr_uti_pediatrica_tp_3_exist,
		CASE WHEN a.nr_uti_pediatrica_tp_3_disp=0 THEN  null  ELSE a.nr_uti_pediatrica_tp_3_disp END  nr_uti_pediatrica_tp_3_disp,
		CASE WHEN a.nr_uti_neonatal_tp_1_exist=0 THEN  null  ELSE a.nr_uti_neonatal_tp_1_exist END  nr_uti_neonatal_tp_1_exist,
		CASE WHEN a.nr_uti_neonatal_tp_1_disp=0 THEN  null  ELSE a.nr_uti_neonatal_tp_1_disp END  nr_uti_neonatal_tp_1_disp,
		CASE WHEN a.nr_uti_neonatal_tp_2_exist=0 THEN  null  ELSE a.nr_uti_neonatal_tp_2_exist END  nr_uti_neonatal_tp_2_exist,
		CASE WHEN a.nr_uti_neonatal_tp_2_disp=0 THEN  null  ELSE a.nr_uti_neonatal_tp_2_disp END  nr_uti_neonatal_tp_2_disp,
		CASE WHEN a.nr_uti_neonatal_tp_3_exist=0 THEN  null  ELSE a.nr_uti_neonatal_tp_3_exist END  nr_uti_neonatal_tp_3_exist,
		CASE WHEN a.nr_uti_neonatal_tp_3_disp=0 THEN  null  ELSE a.nr_uti_neonatal_tp_3_disp END  nr_uti_neonatal_tp_3_disp,
		CASE WHEN a.nr_uti_queimados_exist=0 THEN  null  ELSE a.nr_uti_queimados_exist END  nr_uti_queimados_exist,
		CASE WHEN a.nr_uti_queimados_disp=0 THEN  null  ELSE a.nr_uti_queimados_disp END  nr_uti_queimados_disp,
		CASE WHEN a.nr_uti_coronariana_tp_2_exist=0 THEN  null  ELSE a.nr_uti_coronariana_tp_2_exist END  nr_uti_coronariana_tp_2_exist,
		CASE WHEN a.nr_uti_coronariana_tp_2_disp=0 THEN  null  ELSE a.nr_uti_coronariana_tp_2_disp END  nr_uti_coronariana_tp_2_disp,
		CASE WHEN a.nr_obs_pa_exist=0 THEN  null  ELSE a.nr_obs_pa_exist END  nr_obs_pa_exist,
		CASE WHEN a.nr_obs_pa_disp=0 THEN  null  ELSE a.nr_obs_pa_disp END  nr_obs_pa_disp,
		CASE WHEN a.nr_emerg_pa_exist=0 THEN  null  ELSE a.nr_emerg_pa_exist END  nr_emerg_pa_exist,
		CASE WHEN a.nr_emerg_pa_disp=0 THEN  null  ELSE a.nr_emerg_pa_disp END  nr_emerg_pa_disp
	from	pls_prestador_inst_fisica	a
	where	a.nr_seq_prestador	= nr_seq_prestador_pc;
	
-- Enviar os procedimentos "Diarias" e "Servicos hospitalares" que for TUSS e do prestador
C03 CURSOR(    nr_seq_prestador_pc	pls_prestador.nr_sequencia%type,
		dt_atual_pc		timestamp) FOR
	SELECT	cd_procedimento,
		vl_servico
	from (	-- Conforme origem do procedimento (8)
		SELECT	s.cd_procedimento,
			s.vl_servico
		from	procedimento		p,
			preco_servico		s,
			tabela_servico		t,
			pls_regra_preco_servico r
		where	t.cd_estabelecimento	= r.cd_estabelecimento
		and	t.cd_tabela_servico	= r.cd_tabela_servico
		and	t.cd_estabelecimento	= s.cd_estabelecimento
		and	t.cd_tabela_servico	= s.cd_tabela_servico
		and	s.cd_procedimento	= p.cd_procedimento
		and	s.ie_origem_proced	= p.ie_origem_proced
		and	r.nr_seq_prestador	= nr_seq_prestador_pc
		and	t.ie_situacao		= 'A'
		and	p.ie_origem_proced	= 8 -- TUSS
		and	p.ie_classificacao in (2,3)
		and	coalesce(t.ie_gerar_a410,'T')= 'T' -- Somente TUSS
		and	dt_atual_pc between trunc(s.dt_inicio_vigencia,'dd') and fim_dia(s.dt_vigencia_final) -- data de vigencia do procedimento na tabela de preco
		and	not exists (	select	1
					from	pls_procedimento_vigencia v
					where	p.cd_procedimento	= v.cd_procedimento
					and	p.ie_origem_proced	= v.ie_origem_proced
					and 	v.ie_tipo_tabela 	= 18 -- TUSS - Taxas Hospitalares
					and	dt_atual_pc between trunc(v.dt_inicio_vigencia,'dd') and fim_dia(v.dt_fim_vigencia))
		and	s.vl_servico > 0
		
union all

		-- Conforme tipo de tabela TISS (18)
		select	s.cd_procedimento,
			s.vl_servico
		from	pls_procedimento_vigencia v,
			procedimento		p,
			preco_servico		s,
			tabela_servico		t,
			pls_regra_preco_servico r
		where	t.cd_estabelecimento	= r.cd_estabelecimento
		and	t.cd_tabela_servico	= r.cd_tabela_servico
		and	t.cd_estabelecimento	= s.cd_estabelecimento
		and	t.cd_tabela_servico	= s.cd_tabela_servico
		and	s.cd_procedimento	= p.cd_procedimento
		and	s.ie_origem_proced	= p.ie_origem_proced
		and	r.nr_seq_prestador	= nr_seq_prestador_pc
		and	t.ie_situacao		= 'A'
		and	p.cd_procedimento	= v.cd_procedimento
		and	p.ie_origem_proced	= v.ie_origem_proced	
		and	v.ie_tipo_tabela 	= 18 -- TUSS - Taxas Hospitalares
		and	p.ie_classificacao in (2,3)
		and	coalesce(t.ie_gerar_a410,'T')= 'T' -- Somente TUSS
		and	dt_atual_pc between trunc(s.dt_inicio_vigencia,'dd') and fim_dia(s.dt_vigencia_final) -- data de vigencia do procedimento na tabela de preco
		and 	dt_atual_pc between trunc(v.dt_inicio_vigencia,'dd') and fim_dia(v.dt_fim_vigencia) -- data de vigencia do procedimento para OPS
		and	s.vl_servico > 0
		
union all

		-- Sem verificar tipo de codigo
		select	s.cd_procedimento,
			s.vl_servico
		from	procedimento		p,
			preco_servico		s,
			tabela_servico		t,
			pls_regra_preco_servico r
		where	t.cd_estabelecimento	= r.cd_estabelecimento
		and	t.cd_tabela_servico	= r.cd_tabela_servico
		and	t.cd_estabelecimento	= s.cd_estabelecimento
		and	t.cd_tabela_servico	= s.cd_tabela_servico
		and	s.cd_procedimento	= p.cd_procedimento
		and	s.ie_origem_proced	= p.ie_origem_proced
		and	r.nr_seq_prestador	= nr_seq_prestador_pc
		and	t.ie_situacao		= 'A'
		and	p.ie_classificacao in (2,3)
		and	coalesce(t.ie_gerar_a410,'T')= 'S' -- Sem verificar tipo de codigo
		and	dt_atual_pc between trunc(s.dt_inicio_vigencia,'dd') and fim_dia(s.dt_vigencia_final) -- data de vigencia do procedimento na tabela de preco
		and	s.vl_servico > 0) alias18
	group by cd_procedimento,
		vl_servico;
		
C04 CURSOR(    nr_seq_prestador_pc	pls_prestador.nr_sequencia%type ) FOR
	SELECT	coalesce(a.ie_eletivo_amb,0) ie_eletivo_amb,
		coalesce(a.ie_hosp_espec,0) ie_hosp_espec,                    
		coalesce(a.ie_internacao,0) ie_internacao,                    
		coalesce(a.ie_serv_disponivel,0) ie_serv_disponivel,               
		coalesce(a.ie_sobreaviso,0) 	ie_sobreaviso,                    
		coalesce(a.ie_12h,0) ie_12h,                           
		coalesce(a.ie_24h,0) ie_24h,                                                        
		a.nr_seq_servico_clas_rede,
		(SELECT x.cd_servico from ptu_servico_clas_rede x where x.nr_sequencia = a.nr_seq_servico_clas_rede) cd_serv_exist		
	from	pls_prestador_clas_serv	a
	where	a.nr_seq_prestador	= nr_seq_prestador_pc;

C05 CURSOR(    nr_seq_prestador_pc	pls_prestador.nr_sequencia%type ) FOR
	SELECT	coalesce(a.ie_tipo_contrat_sadt,0) ie_tipo_contrat_sadt,
		coalesce(a.ie_serv_disponivel,0) ie_serv_disponivel,               
		(SELECT substr(pls_obter_dados_prestador(a.nr_seq_prest_terc_princ,'N'),1,60) ) sadt_nm_terc_1,
		(select substr(pls_obter_dados_prestador(a.nr_seq_prest_terc_sec,'N'),1,60) ) sadt_nm_terc_2,
		(select substr(CASE WHEN coalesce(pls_obter_dados_prestador(a.nr_seq_prest_terc_princ,'CGC')::text, '') = '' THEN  			pls_obter_dados_prestador(a.nr_seq_prest_terc_princ,'CPF')  ELSE pls_obter_dados_prestador(a.nr_seq_prest_terc_princ,'CGC') END ,1,14) ) sadt_cnpj_cpf_terc_1,
		(select substr(CASE WHEN coalesce(pls_obter_dados_prestador(a.nr_seq_prest_terc_sec,'CGC')::text, '') = '' THEN  			pls_obter_dados_prestador(a.nr_seq_prest_terc_sec,'CPF')  ELSE pls_obter_dados_prestador(a.nr_seq_prest_terc_sec,'CGC') END ,1,14) ) sadt_cnpj_cpf_terc_2,
		(select x.cd_servico from ptu_servico_clas_rede x where x.nr_sequencia = a.nr_seq_servico_clas_rede) cd_serv_exist
	from	pls_prestador_clas_sadt	a
	where	a.nr_seq_prestador	= nr_seq_prestador_pc;

C06 CURSOR(    nr_seq_prestador_pc	pls_prestador.nr_sequencia%type ) FOR
	SELECT	coalesce(a.ie_negociacao_diarias_taxas,0) ie_negociacao_diarias_taxas,
		coalesce(a.ie_negociacao_dietas,0)  ie_negociacao_dietas,          
		coalesce(a.ie_negociacao_equipos,0) ie_negociacao_equipos,           
		coalesce(a.ie_negociacao_hm,0) ie_negociacao_hm,               
		coalesce(a.ie_negociacao_mat_consumo,0) ie_negociacao_mat_consumo,      
		coalesce(a.ie_negociacao_mat_espec,0) ie_negociacao_mat_espec,        
		coalesce(a.ie_negociacao_med,0) ie_negociacao_med,              
		coalesce(a.ie_negociacao_op,0) ie_negociacao_op,               
		coalesce(a.ie_negociacao_sadt,0) ie_negociacao_sadt,                                         
		a.tx_comercializacao_mat_espec,    
		a.tx_comercializacao_op,
		a.nr_sequencia nr_seq_prest_clas_econ,
		a.ds_excecao_diarias
	from	pls_prestador_clas_econ	a
	where	a.nr_seq_prestador	= nr_seq_prestador_pc;

	
C07 CURSOR(    nr_seq_prest_clas_econ_pc	pls_prestador_clas_econ.nr_sequencia%type ) FOR
	-- Excecao especialidade
	SELECT	x.cd_ptu cd_especialidade,
		null cd_area_atuacao,
		null cd_servico
	from	pls_prest_clas_econ_exc	a,
		especialidade_medica x
	where	x.cd_especialidade		= a.cd_especialidade
	and	a.nr_seq_prest_clas_econ	= nr_seq_prest_clas_econ_pc
	and	(a.cd_especialidade IS NOT NULL AND a.cd_especialidade::text <> '')
	and	(x.cd_ptu IS NOT NULL AND x.cd_ptu::text <> '')
	
union

	-- Excecao area de atuacao
	SELECT	null cd_especialidade,
		x.cd_ptu cd_area_atuacao,
		null cd_servico
	from	pls_prest_clas_econ_exc	a,
		area_atuacao_medica x
	where	x.nr_sequencia			= a.nr_seq_area_atuacao
	and	a.nr_seq_prest_clas_econ	= nr_seq_prest_clas_econ_pc
	and	(a.nr_seq_area_atuacao IS NOT NULL AND a.nr_seq_area_atuacao::text <> '')
	and	(x.cd_ptu IS NOT NULL AND x.cd_ptu::text <> '')
	
union

	-- Excecao servico (SADT)
	select	null cd_especialidade,
		null cd_area_atuacao,
		x.cd_servico cd_servico
	from	pls_prest_clas_econ_exc	a,
		ptu_servico_clas_rede x
	where	x.nr_sequencia			= a.nr_seq_servico_clas_rede
	and	a.nr_seq_prest_clas_econ	= nr_seq_prest_clas_econ_pc
	and	(a.nr_seq_servico_clas_rede IS NOT NULL AND a.nr_seq_servico_clas_rede::text <> '')
	and	(x.cd_servico IS NOT NULL AND x.cd_servico::text <> '');
	
C08 CURSOR(    nr_seq_prestador_pc	pls_prestador.nr_sequencia%type ) FOR
	SELECT	coalesce(a.ie_serv_disponivel,0) ie_serv_disponivel,
		(SELECT x.cd_servico from ptu_servico_clas_rede x where x.nr_sequencia = a.nr_seq_servico_clas_rede) cd_serv_exist
	from	pls_prestador_clas_hosp	a
	where	a.nr_seq_prestador	= nr_seq_prestador_pc;
                		

BEGIN
cd_versao_ptu_xml_w := ptu_batch_xml_pck.obter_versao_dominio( cd_estabelecimento_p, null, null, clock_timestamp(), 'A410');

update	tabela_servico
set	ie_gerar_a410	= 'T' -- Somente TUSS
where	coalesce(ie_gerar_a410::text, '') = '';

-- Verificar se ta configurado pra gerar o arquivo A410
if (cd_versao_ptu_xml_w IS NOT NULL AND cd_versao_ptu_xml_w::text <> '') then
	for r_c01_w in c01( nr_seq_lote_p ) loop
		-- DADOS DO PRESTADOR
		
		select 	max(ie_tipo_acreditacao)
		into STRICT	ie_tipo_acreditacao_w
		from 	pls_prestador_qualif
		where	nr_seq_prestador = r_c01_w.nr_seq_prestador;
		
		insert into ptu_clas_rede_prestador(
			nr_sequencia,				dt_atualizacao,		nm_usuario,
			dt_atualizacao_nrec,			nm_usuario_nrec,	nr_seq_movimento,
			cd_cgc,					cd_cpf,			cd_prestador,
			nr_seq_prestador,			id_uti,			id_nivel_disp,
			id_sadt,				tipo_acreditacao)
		values (nextval('ptu_clas_rede_prestador_seq'),	clock_timestamp(),		nm_usuario_p,
			clock_timestamp(),				nm_usuario_p,		nr_seq_lote_p,
			r_c01_w.cd_cgc,				r_c01_w.cd_cpf,		r_c01_w.cd_prestador,
			r_c01_w.nr_seq_prestador,		r_c01_w.id_uti,		r_c01_w.id_nivel_disp,
			'N',					ie_tipo_acreditacao_w) returning nr_sequencia into nr_seq_clas_rede_prest_w;
			
		for r_c02_w in c02( r_c01_w.nr_seq_prestador ) loop
			-- DADOS DOS LEITOS
			insert into ptu_clas_rede_prest_leito(
				nr_sequencia,					nr_seq_clas_rede_prest,			dt_atualizacao,
				dt_atualizacao_nrec,				nm_usuario,				nm_usuario_nrec,
				nr_leitos_psiquiat_exist,			nr_leitos_psiquiat_disp,		nr_leitos_intermed_neo_exist,
				nr_leitos_intermed_neo_disp,			nr_leitos_hosp_dia_exist,		nr_leitos_hosp_dia_disp,
				nr_leitos_bercario_exist,			nr_leitos_bercario_disp,		nr_leitos_individual_exist,
				nr_leitos_individual_disp,			nr_leitos_coletivo_exist,		nr_leitos_coletivo_disp,
				nr_leitos_isolamento_exist,			nr_leitos_isolamento_disp,		nr_leitos_ucc_exist,
				nr_leitos_ucc_disp,				nr_leitos_semi_exist,			nr_leitos_semi_disp,
				nr_leitos_uci_neo_conv_exist,			nr_leitos_uci_neo_conv_disp,		nr_leitos_uci_neo_cang_exist,
				nr_leitos_uci_neo_cang_disp,			nr_leitos_uci_pediatrico_exist,		nr_leitos_uci_pediatrico_disp,
				nr_leitos_uci_adulto_exist,			nr_leitos_uci_adulto_disp,		nr_leitos_coronariana_exist,
				nr_leitos_coronariana_disp,			nr_uti_adulto_exist,			nr_uti_adulto_disp,
				nr_uti_neonatal_exist,				nr_uti_neonatal_disp,			nr_uti_pediatria_exist,
				nr_uti_pediatria_disp,				nr_uti_adulto_tp_1_exist,		nr_uti_adulto_tp_1_disp,
				nr_uti_adulto_tp_2_exist,			nr_uti_adulto_tp_2_disp,		nr_uti_adulto_tp_3_exist,
				nr_uti_adulto_tp_3_disp,			nr_uti_pediatrica_tp_1_exist,		nr_uti_pediatrica_tp_1_disp,
				nr_uti_pediatrica_tp_2_exist,			nr_uti_pediatrica_tp_2_disp,		nr_uti_pediatrica_tp_3_exist,
				nr_uti_pediatrica_tp_3_disp,			nr_uti_neonatal_tp_1_exist,		nr_uti_neonatal_tp_1_disp,
				nr_uti_neonatal_tp_2_exist,			nr_uti_neonatal_tp_2_disp,		nr_uti_neonatal_tp_3_exist,
				nr_uti_neonatal_tp_3_disp,			nr_uti_queimados_exist,			nr_uti_queimados_disp,
				nr_uti_coronariana_tp_2_exist,			nr_uti_coronariana_tp_2_disp,		nr_obs_pa_exist,
				nr_obs_pa_disp,					nr_emerg_pa_exist,			nr_emerg_pa_disp)
			values (nextval('ptu_clas_rede_prest_leito_seq'),		nr_seq_clas_rede_prest_w,		clock_timestamp(),
				clock_timestamp(),					nm_usuario_p,				nm_usuario_p,
				r_c02_w.nr_leitos_psiquiat_exist,		r_c02_w.nr_leitos_psiquiat_disp,	r_c02_w.nr_leitos_intermed_neo_exist,
				r_c02_w.nr_leitos_intermed_neo_disp,		r_c02_w.nr_leitos_hosp_dia_exist,	r_c02_w.nr_leitos_hosp_dia_disp,
				r_c02_w.nr_leitos_bercario_exist,		r_c02_w.nr_leitos_bercario_disp,	r_c02_w.nr_leitos_individual_exist,
				r_c02_w.nr_leitos_individual_disp,		r_c02_w.nr_leitos_coletivo_exist,	r_c02_w.nr_leitos_coletivo_disp,
				r_c02_w.nr_leitos_isolamento_exist,		r_c02_w.nr_leitos_isolamento_disp,	r_c02_w.nr_leitos_ucc_exist,
				r_c02_w.nr_leitos_ucc_disp,			r_c02_w.nr_leitos_semi_exist,		r_c02_w.nr_leitos_semi_disp,
				r_c02_w.nr_leitos_uci_neo_conv_exist,		r_c02_w.nr_leitos_uci_neo_conv_disp,	r_c02_w.nr_leitos_uci_neo_cang_exist,
				r_c02_w.nr_leitos_uci_neo_cang_disp,		r_c02_w.nr_leitos_uci_pediatrico_exist,	r_c02_w.nr_leitos_uci_pediatrico_disp,
				r_c02_w.nr_leitos_uci_adulto_exist,		r_c02_w.nr_leitos_uci_adulto_disp,	r_c02_w.nr_leitos_coronariana_exist,
				r_c02_w.nr_leitos_coronariana_disp,		r_c02_w.nr_uti_adulto_exist,		r_c02_w.nr_uti_adulto_disp,
				r_c02_w.nr_uti_neonatal_exist,			r_c02_w.nr_uti_neonatal_disp,		r_c02_w.nr_uti_pediatria_exist,
				r_c02_w.nr_uti_pediatria_disp,			r_c02_w.nr_uti_adulto_tp_1_exist,	r_c02_w.nr_uti_adulto_tp_1_disp,
				r_c02_w.nr_uti_adulto_tp_2_exist,		r_c02_w.nr_uti_adulto_tp_2_disp,	r_c02_w.nr_uti_adulto_tp_3_exist,
				r_c02_w.nr_uti_adulto_tp_3_disp,		r_c02_w.nr_uti_pediatrica_tp_1_exist,	r_c02_w.nr_uti_pediatrica_tp_1_disp,
				r_c02_w.nr_uti_pediatrica_tp_2_exist,		r_c02_w.nr_uti_pediatrica_tp_2_disp,	r_c02_w.nr_uti_pediatrica_tp_3_exist,
				r_c02_w.nr_uti_pediatrica_tp_3_disp,		r_c02_w.nr_uti_neonatal_tp_1_exist,	r_c02_w.nr_uti_neonatal_tp_1_disp,
				r_c02_w.nr_uti_neonatal_tp_2_exist,		r_c02_w.nr_uti_neonatal_tp_2_disp,	r_c02_w.nr_uti_neonatal_tp_3_exist,
				r_c02_w.nr_uti_neonatal_tp_3_disp,		r_c02_w.nr_uti_queimados_exist,		r_c02_w.nr_uti_queimados_disp,
				r_c02_w.nr_uti_coronariana_tp_2_exist,		r_c02_w.nr_uti_coronariana_tp_2_disp,	r_c02_w.nr_obs_pa_exist,
				r_c02_w.nr_obs_pa_disp,				r_c02_w.nr_emerg_pa_exist,		r_c02_w.nr_emerg_pa_disp);
			
			id_uti_w := '04'; -- Nao possui
			if (r_c02_w.nr_uti_adulto_tp_3_exist > 0) or (r_c02_w.nr_uti_pediatrica_tp_3_exist) > 0 or (r_c02_w.nr_uti_neonatal_tp_3_exist > 0) then
				id_uti_w := '03'; -- UTI tipo III
			elsif (r_c02_w.nr_uti_adulto_tp_2_exist > 0) or (r_c02_w.nr_uti_pediatrica_tp_2_exist > 0) or (r_c02_w.nr_uti_neonatal_tp_2_exist > 0) or (r_c02_w.nr_uti_coronariana_tp_2_exist > 0) then
				id_uti_w := '02'; -- UTI tipo II
			elsif (r_c02_w.nr_uti_adulto_tp_1_exist > 0) or (r_c02_w.nr_uti_pediatrica_tp_1_exist > 0) or (r_c02_w.nr_uti_neonatal_tp_1_exist > 0) then
				id_uti_w := '01'; -- UTI tipo I
			end if;
			
			update	ptu_clas_rede_prestador
			set	id_uti		= id_uti_w
			where	nr_sequencia	= nr_seq_clas_rede_prest_w;
		end loop;
		
		for r_c03_w in c03( r_c01_w.nr_seq_prestador, dt_atual_w ) loop
			-- DIARIAS E TAXAS
			insert into ptu_clas_rede_prest_dth(
				nr_sequencia,				dt_atualizacao,				nm_usuario,
				dt_atualizacao_nrec,			nm_usuario_nrec,			nr_seq_clas_rede_prest,
				cd_dth,					vl_dth)
			values (nextval('ptu_clas_rede_prest_dth_seq'),	clock_timestamp(),				nm_usuario_p,
				clock_timestamp(),				nm_usuario_p,				nr_seq_clas_rede_prest_w,
				r_c03_w.cd_procedimento,		r_c03_w.vl_servico);
		end loop;
		
		for r_c04_w in c04( r_c01_w.nr_seq_prestador ) loop
		
			insert into ptu_clas_rede_prest_serv(
				nr_sequencia,				dt_atualizacao,				nm_usuario,
				dt_atualizacao_nrec,			nm_usuario_nrec, 			id_eletivo_amb,
				id_hosp_espec,                  	id_internacao,                  	id_sobreaviso,
				id_12h,                         	id_24h,                       		nr_seq_clas_rede_prest,
				cd_serv_exist,				serv_disp)
			values (
				nextval('ptu_clas_rede_prest_serv_seq'),	clock_timestamp(),				nm_usuario_p,
				clock_timestamp(),				nm_usuario_p,				r_c04_w.ie_eletivo_amb,
				r_c04_w.ie_hosp_espec,			r_c04_w.ie_internacao,			r_c04_w.ie_sobreaviso,
				r_c04_w.ie_12h,				r_c04_w.ie_24h,				nr_seq_clas_rede_prest_w,
				r_c04_w.cd_serv_exist,			r_c04_w.ie_serv_disponivel);
		end loop;
		
		for r_c05_w in c05( r_c01_w.nr_seq_prestador ) loop
		
			sadt_cnpj_cpf_terc_1_w := r_c05_w.sadt_cnpj_cpf_terc_1;
			sadt_nm_terc_1_w := r_c05_w.sadt_nm_terc_1;
		
			if (r_c05_w.ie_tipo_contrat_sadt = '01') then
				sadt_cnpj_cpf_terc_1_w := null;
				sadt_nm_terc_1_w := null;
			end if;
			
			sadt_nm_terc_1_w := ptu_somente_caracter_permitido(sadt_nm_terc_1_w, 'ANS+');
			r_c05_w.sadt_nm_terc_2 := ptu_somente_caracter_permitido(r_c05_w.sadt_nm_terc_2, 'ANS+');
		
			insert into ptu_clas_rede_prest_sadt(
				nr_sequencia,				dt_atualizacao,    			nm_usuario,	
				dt_atualizacao_nrec,                    nm_usuario_nrec,			nr_seq_clas_rede_prest,
				cd_serv_exist,				sadt_cnpj_cpf_terc_1,           	sadt_cnpj_cpf_terc_2,            
				sadt_nm_terc_1,                  	sadt_nm_terc_2,                 	serv_disp,                       
				tp_contrat_sadt)
			values (
				nextval('ptu_clas_rede_prest_sadt_seq'),	clock_timestamp(),				nm_usuario_p,
				clock_timestamp(),				nm_usuario_p,				nr_seq_clas_rede_prest_w,
				r_c05_w.cd_serv_exist,			sadt_cnpj_cpf_terc_1_w,   		r_c05_w.sadt_cnpj_cpf_terc_2,            
				sadt_nm_terc_1_w,                 	r_c05_w.sadt_nm_terc_2,			r_c05_w.ie_serv_disponivel,
				r_c05_w.ie_tipo_contrat_sadt);
				
			update 	ptu_clas_rede_prestador pre
			set 	pre.id_sadt = 'S'
			where 	pre.nr_sequencia = nr_seq_clas_rede_prest_w;
				
				
		end loop;
		
		for r_c06_w in c06( r_c01_w.nr_seq_prestador ) loop
		
			r_c06_w.ds_excecao_diarias := ptu_somente_caracter_permitido(r_c06_w.ds_excecao_diarias, 'ANS');
	
			insert into ptu_clas_rede_prest_econ(
				nr_sequencia,				dt_atualizacao,    			nm_usuario,	
				dt_atualizacao_nrec,                    nm_usuario_nrec,			nr_seq_clas_rede_prest,
				tp_negociacao_diarias_taxas,     	tp_negociacao_dietas,           	tp_negociacao_equipos,           
				tp_negociacao_hm,                	tp_negociacao_mat_consumo,      	tp_negociacao_mat_espec,         
				tp_negociacao_med,               	tp_negociacao_op,               	tp_negociacao_sadt,              
				tx_comercializacao_mat_espec,    	tx_comercializacao_op,			ds_excecao_diarias)
			values (
				nextval('ptu_clas_rede_prest_econ_seq'),	clock_timestamp(),				nm_usuario_p,
				clock_timestamp(),				nm_usuario_p,				nr_seq_clas_rede_prest_w,
				r_c06_w.ie_negociacao_diarias_taxas,    r_c06_w.ie_negociacao_dietas,   	r_c06_w.ie_negociacao_equipos,           
				r_c06_w.ie_negociacao_hm,               r_c06_w.ie_negociacao_mat_consumo,      r_c06_w.ie_negociacao_mat_espec,         
				r_c06_w.ie_negociacao_med,              r_c06_w.ie_negociacao_op,               r_c06_w.ie_negociacao_sadt,
				r_c06_w.tx_comercializacao_mat_espec,   r_c06_w.tx_comercializacao_op,		r_c06_w.ds_excecao_diarias) returning nr_sequencia into nr_seq_rede_prest_econ_w;
				
			for r_c07_w in c07( r_c06_w.nr_seq_prest_clas_econ ) loop
				insert into ptu_clas_rede_econ_exc(
					nr_sequencia,				dt_atualizacao,			nm_usuario,
					dt_atualizacao_nrec,			nm_usuario_nrec,		cd_excecao_hm_area_atua,         
					cd_excecao_hm_espec,            	cd_excecao_sadt,                nr_seq_rede_prest_econ)
				values (
					nextval('ptu_clas_rede_econ_exc_seq'),	clock_timestamp(),			nm_usuario_p,
					clock_timestamp(),				nm_usuario_p,			r_c07_w.cd_area_atuacao,
					r_c07_w.cd_especialidade,		r_c07_w.cd_servico,		nr_seq_rede_prest_econ_w);
			end loop;
		end loop;
		
		for r_c08_w in c08( r_c01_w.nr_seq_prestador ) loop
		
			insert into ptu_clas_rede_prest_hosp(
				nr_sequencia,				dt_atualizacao,    			nm_usuario,	
				dt_atualizacao_nrec,                    nm_usuario_nrec,			nr_seq_clas_rede_prest,
				cd_serv_exist,				serv_disp)
			values (
				nextval('ptu_clas_rede_prest_hosp_seq'),	clock_timestamp(),				nm_usuario_p,
				clock_timestamp(),				nm_usuario_p,				nr_seq_clas_rede_prest_w,
				r_c08_w.cd_serv_exist,			r_c08_w.ie_serv_disponivel);
		end loop;
		
	end loop;

	if (coalesce(ie_commit_p,'N') = 'S') then
		commit;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_clas_rede_prest ( nr_seq_lote_p ptu_movimento_prestador.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) FROM PUBLIC;

