-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_processa_resp_ordem_serv ( cd_unimed_benef_p ptu_resposta_req_ord_serv.cd_unimed_beneficiario%type, cd_unimed_solic_p ptu_resposta_req_ord_serv.cd_unimed_solicitante%type, nr_seq_origem_p ptu_resposta_req_ord_serv.nr_seq_origem%type, nr_seq_resposta_p ptu_resposta_req_ord_serv.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Importar resposta ordem serv_v50

Rotina utilizada nas transações ptu via scs homologadas com a unimed brasil.
quando for alterar, favor verificar com o análista responsável para a realização de testes.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
Performance
---------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_registros_neg_w	integer;
qt_registros_aprov_w	integer;


BEGIN

select	count(1)
into STRICT	qt_registros_neg_w
from	ptu_resposta_req_servico
where	nr_seq_resp_req_ord	= nr_seq_resposta_p
and	ie_status_requisicao	= 1;

select	count(1)
into STRICT	qt_registros_aprov_w
from	ptu_resposta_req_servico
where	nr_seq_resp_req_ord	= nr_seq_resposta_p
and	ie_status_requisicao	= 2;

-- Se a operadora de origem do beneficiário for diferente da operadora solicitante da ordem de serviço, é caracterizada uma Triangulação
if (cd_unimed_benef_p	<> cd_unimed_solic_p) then
	if (qt_registros_neg_w	> 0)	and (qt_registros_aprov_w	= 0) then
		-- Se a resposta da ordem de serviço vier totalmente recusada, se encerra o processo
		update	ptu_requisicao_ordem_serv
		set	ie_estagio			= 4
		where	nr_transacao_solicitante	= nr_seq_origem_p
		and	cd_unimed_solicitante		= cd_unimed_solic_p;
	else
		-- Se pelo menos um item for aceito, a ordem de serviço fica aguardando a transação de autorização
		update	ptu_requisicao_ordem_serv
		set	ie_estagio			= 2
		where	nr_transacao_solicitante	= nr_seq_origem_p
		and	cd_unimed_solicitante		= cd_unimed_solic_p;
	end if;
-- Se a operadora de origem do beneficiário for igual a operadora solicitante da ordem de serviço, é caracterizada uma transação ponto-a-ponto
elsif (cd_unimed_benef_p	= cd_unimed_solic_p) then
	if (qt_registros_neg_w	> 0)	and (qt_registros_aprov_w	= 0) then
		-- Se a resposta da ordem de serviço vier totalmente recusada, se encerra o processo
		update	ptu_requisicao_ordem_serv
		set	ie_estagio			= 4
		where	nr_transacao_solicitante	= nr_seq_origem_p
		and	cd_unimed_solicitante		= cd_unimed_solic_p;
	elsif (qt_registros_neg_w	> 0)	and (qt_registros_aprov_w	> 0) then
		-- Se a resposta da ordem de serviço vier com serviços recusados e aceitos, a ordem de serviço fica Parcialmente aceita
		update	ptu_requisicao_ordem_serv
		set	ie_estagio			= 5
		where	nr_transacao_solicitante	= nr_seq_origem_p
		and	cd_unimed_solicitante		= cd_unimed_solic_p;
	elsif (qt_registros_neg_w	= 0)	and (qt_registros_aprov_w	> 0) then
		-- Se a resposta da ordem de serviço vier totalmente aceita, o estágio da ordem de serviço fica Aceita e se encerra o processo
		update	ptu_requisicao_ordem_serv
		set	ie_estagio			= 3
		where	nr_transacao_solicitante	= nr_seq_origem_p
		and	cd_unimed_solicitante		= cd_unimed_solic_p;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_processa_resp_ordem_serv ( cd_unimed_benef_p ptu_resposta_req_ord_serv.cd_unimed_beneficiario%type, cd_unimed_solic_p ptu_resposta_req_ord_serv.cd_unimed_solicitante%type, nr_seq_origem_p ptu_resposta_req_ord_serv.nr_seq_origem%type, nr_seq_resposta_p ptu_resposta_req_ord_serv.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

