-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobranca_bb_cnab_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_mensagem_w			varchar(1000);
ds_endereco_w			varchar(255);
ds_cidade_w			varchar(40);
nm_pagador_w			varchar(80);
nm_seg_w			varchar(255);
ds_produto_w			varchar(255);
nr_nosso_numero_w		varchar(20);
nr_reg_ans_seg_w		varchar(30);
cd_carteira_seg_w		varchar(20);
vl_copart_w			varchar(20);
vl_mens_seg_w			varchar(20);
cd_agencia_bancaria_w		varchar(15);
cd_cgc_cpf_w			varchar(14);
cd_carteira_pag_w		varchar(10);
dt_contratacao_seg_w		varchar(10);
ds_uf_w				varchar(15);
vl_titulo_w			double precision;
nr_seq_lote_w			bigint	:= 1;
cd_conta_w			bigint;
ie_digito_conta_w		bigint;
cd_convenio_w			bigint;
cd_carteira_w			bigint;
nr_titulo_w			bigint;	
cd_cep_w			varchar(10);
vl_juros_w			bigint;
vl_desconto_w			bigint;
nr_seq_cobr_w			bigint;
ie_tipo_inscricao_w		integer;
dt_vencimento_w			timestamp;
dt_emissao_w			timestamp;
ds_bairro_w  			varchar(40);
			
C01 CURSOR FOR 
	SELECT	c.nr_sequencia, 
		CASE WHEN coalesce(b.cd_cgc::text, '') = '' THEN obter_dados_pf(b.cd_pessoa_fisica,'CPF')  ELSE b.cd_cgc END  cd_cgc_cpf, 
		e.cd_agencia_bancaria, 
		substr(e.cd_conta,1,15), 
		e.ie_digito_conta, 
		e.cd_convenio_banco, 
		e.cd_carteira, 
		b.nr_titulo, 
		b.vl_titulo, 
		substr(CASE WHEN coalesce(d.nr_sequencia::text, '') = '' THEN  			obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'E')  ELSE pls_obter_compl_pagador(d.nr_seq_pagador,'EN') END ,1,120) ds_endereco, 
		substr(CASE WHEN coalesce(d.nr_sequencia::text, '') = '' THEN  			obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'CEP')  ELSE pls_obter_compl_pagador(d.nr_seq_pagador,'CEP') END ,1,10) cd_cep, 
		substr(CASE WHEN coalesce(d.nr_sequencia::text, '') = '' THEN  			obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'CI')  ELSE pls_obter_compl_pagador(d.nr_seq_pagador,'CI') END ,1,40) ds_cidade, 
		substr(CASE WHEN coalesce(d.nr_sequencia::text, '') = '' THEN  			obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'UF')  ELSE pls_obter_compl_pagador(d.nr_seq_pagador,'UF') END ,1,2) ds_uf, 
		substr(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,80) nm_pagador, 
		b.dt_pagamento_previsto dt_vencimento, 
		b.dt_emissao, 
		CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN '02'  ELSE '01' END , 
		b.vl_saldo_juros, 
		b.vl_desc_previsto, 
		substr(pls_obter_dados_segurado(pls_obter_segurado_pagador(d.nr_seq_pagador),'C'),1,10) cd_carteira_pag, 
		substr(obter_nosso_numero_banco(e.cd_banco,b.nr_titulo),1,20) nr_nosso_numero, 
		substr(CASE WHEN coalesce(d.nr_sequencia::text, '') = '' THEN  			obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'B')  ELSE pls_obter_compl_pagador(d.nr_seq_pagador,'B') END ,1,40) ds_bairro 
	FROM banco_estabelecimento e, titulo_receber_cobr c, cobranca_escritural a, titulo_receber_v b
LEFT OUTER JOIN pls_mensalidade d ON (b.nr_seq_mensalidade = d.nr_sequencia)
WHERE a.nr_sequencia		= c.nr_seq_cobranca and c.nr_titulo		= b.nr_titulo and a.nr_seq_conta_banco	= e.nr_sequencia  and a.nr_sequencia		= nr_seq_cobr_escrit_p;

C02 CURSOR FOR 
	SELECT	substr(coalesce(pls_obter_dados_cart_segurado(f.nr_sequencia,'C'),' '),1,12), --Carteira 
		upper(substr(obter_nome_pf(f.cd_pessoa_fisica),1,24)), --Nome 
		substr(coalesce(g.nr_protocolo_ans,' '),1,13), --ANS 
		upper(substr(CASE WHEN e.ie_tipo_item=1 THEN g.ds_plano WHEN e.ie_tipo_item=15 THEN pls_obter_dados_vinc_bonific('',e.nr_seq_vinculo_sca,'N')  ELSE PERFORM obter_valor_dominio(1930,e.ie_tipo_item) END ,1,50)), --produto, 
		substr(to_char(f.dt_contratacao,'dd/mm/yy'),1,9), --Dt contratação 
		substr(campo_mascara_virgula(CASE WHEN e.ie_tipo_item=3 THEN sum(e.vl_item)  ELSE 0 END ),1,20), 
		substr(campo_mascara_virgula(CASE WHEN e.ie_tipo_item=3 THEN 0  ELSE sum(e.vl_item) END ),1,20) 
	from	pls_plano			g, 
		pls_segurado			f, 
		pls_mensalidade_seg_item	e, 
		pls_mensalidade_segurado	d, 
		pls_mensalidade			h, 
		titulo_receber_cobr		c, 
		titulo_receber			b, 
		cobranca_escritural		a 
	where	a.nr_sequencia			= c.nr_seq_cobranca 
	and	c.nr_titulo			= b.nr_titulo 
	and	b.nr_seq_mensalidade		= h.nr_sequencia 
	and	d.nr_seq_mensalidade		= h.nr_sequencia 
	and	e.nr_seq_mensalidade_seg	= d.nr_sequencia 
	and	d.nr_seq_segurado		= f.nr_sequencia 
	and	f.nr_seq_plano			= g.nr_sequencia 
	and	b.nr_titulo			= nr_titulo_w 
	and	a.nr_sequencia			= nr_seq_cobr_escrit_p 
	and	e.ie_tipo_item in (1,3,4,5,15,25) 
	group by 
		a.nr_sequencia, 
		a.cd_banco, 
		c.nr_titulo, 
		f.nr_sequencia, 
		f.cd_pessoa_fisica, 
		g.nr_protocolo_ans, 
		e.ie_tipo_item, 
		g.ds_plano, 
		e.nr_seq_vinculo_sca, 
		f.dt_contratacao;


BEGIN 
delete from	w_cobranca_banco;
 
--Header do Arquivo 
insert into	w_cobranca_banco(nr_sequencia, 
	nm_usuario, 
	dt_atualizacao, 
	nm_usuario_nrec, 
	dt_atualizacao_nrec, 
	ie_tipo_registro, 
	cd_agencia_bancaria, 
	cd_conta, 
	ie_digito_conta, 
	nm_empresa, 
	dt_geracao, 
	cd_convenio_banco) 
SELECT	nextval('w_cobranca_banco_seq'), 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	0, -- ie_tipo_registro	 
	d.cd_agencia_bancaria, 
	substr(d.cd_conta,1,5) cd_conta, 
	d.ie_digito_conta, 
	substr(obter_razao_social(c.cd_cgc),1,255), 
	clock_timestamp(), 
	d.cd_convenio_banco 
from	banco_estabelecimento d, 
	pessoa_juridica	c, 
	estabelecimento b, 
	cobranca_escritural a 
where	a.cd_estabelecimento	= b.cd_estabelecimento 
and	b.cd_cgc		= c.cd_cgc 
and	a.nr_seq_conta_banco	= d.nr_sequencia 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_cobr_w, 
	cd_cgc_cpf_w, 
	cd_agencia_bancaria_w, 
	cd_conta_w, 
	ie_digito_conta_w, 
	cd_convenio_w, 
	cd_carteira_w, 
	nr_titulo_w, 
	vl_titulo_w, 
	ds_endereco_w, 
	cd_cep_w, 
	ds_cidade_w, 
	ds_uf_w, 
	nm_pagador_w, 
	dt_vencimento_w, 
	dt_emissao_w, 
	ie_tipo_inscricao_w, 
	vl_juros_w, 
	vl_desconto_w, 
	cd_carteira_pag_w, 
	nr_nosso_numero_w, 
	ds_bairro_w;	
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	nr_seq_lote_w	:= nr_seq_lote_w +1;
	ds_mensagem_w	:= null;
	 
	--Registro Detalhe 
	insert into w_cobranca_banco(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		ie_tipo_registro, 
		cd_agencia_bancaria, 
		cd_conta, 
		cd_convenio_banco, 
		cd_carteira, 
		nr_titulo, 
		dt_vencimento, 
		vl_titulo, 
		dt_emissao, 
		ie_tipo_pessoa, 
		nm_pagador, 
		ds_endereco, 
		cd_cep, 
		ds_cidade, 
		sg_estado, 
		ds_cgc_cpf, 
		ie_digito_conta, 
		nr_seq_reg_lote, 
		vl_juros, 
		vl_desconto, 
		nr_nosso_numero, 
		ds_bairro) 
	values (nextval('w_cobranca_banco_seq'), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		7, --ie_tipo_registro 
		cd_agencia_bancaria_w, 
		cd_conta_w, 
		'1859044'||lpad(nr_seq_lote_w-1,10,0), 
		cd_carteira_pag_w, 
		nr_titulo_w, 
		dt_vencimento_w, 
		vl_titulo_w, 
		dt_emissao_w, 
		ie_tipo_inscricao_w, 
		nm_pagador_w, 
		ds_endereco_w, 
		cd_cep_w, 
		ds_cidade_w, 
		substr(ds_uf_w,1,2), 
		cd_cgc_cpf_w, 
		ie_digito_conta_w, 
		nr_seq_lote_w, 
		vl_juros_w, 
		vl_desconto_w, 
		nr_nosso_numero_w, 
		ds_bairro_w);	
 
	/*######### Mensagem Tipo 4 [INICIO] ###########*/
 
	select	max( substr(	rpad(coalesce(obter_linha_texto(d.ds_observacao,1),' '),51,' ')|| 
				rpad(coalesce(obter_linha_texto(d.ds_observacao,2),' '),51,' ')|| 
				rpad(coalesce(obter_linha_texto(d.ds_observacao,3),' '),51,' ')|| 
				rpad(coalesce(obter_linha_texto(d.ds_observacao,4),' '),51,' ')|| 
				rpad(coalesce(obter_linha_texto(d.ds_observacao,5),' '),51,' '),1,255)) 
	into STRICT	ds_mensagem_w 
	from	pls_mensalidade d, 
		titulo_receber_cobr c, 
		titulo_receber b, 
		cobranca_escritural a 
	where	a.nr_sequencia		= c.nr_seq_cobranca 
	and	c.nr_titulo		= b.nr_titulo 
	and	d.nr_sequencia		= b.nr_seq_mensalidade 
	and	c.nr_sequencia		= nr_seq_cobr_w;		
		 
	if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then		 
		insert into	w_cobranca_banco(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec,	 
			ie_tipo_registro, 
			ds_mensagem) 
		values (nextval('w_cobranca_banco_seq'), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			'4', --ie_tipo_registro 
			ds_mensagem_w );
	end if;
	/*######### Mensagem Tipo 4 [FIM] ###########*/
 
	 
	/*######### Mensagem Tipo 5 [INICIO] ###########*/
 
	ds_mensagem_w	:= null;
	ds_mensagem_w	:=	rpad(' ',30,' ') || 
				rpad('MATRICULA  ',13,' ') || 
				rpad('BENEFICIARIO      ',24,' ') || 
				rpad('REG ANS   ',13,' ') || 
				rpad('PLANO/PROD. ',50,' ') || 
				rpad('DT. INSC ',9,' ') || 
				rpad('VALOR',20,' ') || 
				rpad('CO-PART',20,' ');
		 
	if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then 
		insert into	w_cobranca_banco(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec,	 
			ie_tipo_registro, 
			ds_mensagem_2) 
		values (nextval('w_cobranca_banco_seq'), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			'5', --ie_tipo_registro 
			ds_mensagem_w );
	end if;
	 
	open C02;
	loop 
	fetch C02 into	 
		cd_carteira_seg_w, 
		nm_seg_w, 
		nr_reg_ans_seg_w, 
		ds_produto_w, 
		dt_contratacao_seg_w, 
		vl_copart_w, 
		vl_mens_seg_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		ds_mensagem_w	:= null;
		ds_mensagem_w	:=	rpad(' ',30,' ') || 
					rpad(cd_carteira_seg_w,13,' ') || 
					rpad(nm_seg_w,24,' ') || 
					rpad(nr_reg_ans_seg_w,13,' ') || 
					rpad(ds_produto_w,50,' ') || 
					rpad(dt_contratacao_seg_w,9,' ') || 
					rpad(vl_mens_seg_w,20,' ') || 
					rpad(vl_copart_w,20,' ');
					 
					 
		if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then 
			insert into	w_cobranca_banco(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec,	 
				ie_tipo_registro, 
				ds_mensagem_2) 
			values (nextval('w_cobranca_banco_seq'), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				'5', --ie_tipo_registro 
				ds_mensagem_w );
		end if;		
		end;
	end loop;
	close C02;	
	 
	ds_mensagem_w	:= null;
	select	rpad(' ',30,' ')|| 
		'Total: '	|| rpad(campo_mascara_virgula(sum(CASE WHEN x.ie_tipo_item=3 THEN 0 WHEN x.ie_tipo_item=17 THEN 0 WHEN x.ie_tipo_item=14 THEN 0  ELSE x.vl_item END )),6,' ') || 
		'Desconto: '	|| rpad(campo_mascara_virgula(sum(CASE WHEN sign(x.vl_item)=-1 THEN CASE WHEN x.ie_tipo_item=1 THEN 0 WHEN x.ie_tipo_item=3 THEN 0 WHEN x.ie_tipo_item=15 THEN 0 WHEN x.ie_tipo_item=17 THEN 0 WHEN x.ie_tipo_item=4 THEN 0 WHEN x.ie_tipo_item=5 THEN 0 WHEN x.ie_tipo_item=25 THEN 0  ELSE x.vl_item END   ELSE 0 END )),5,' ') || 
		'Acréscimo: '	|| rpad(campo_mascara_virgula(sum(CASE WHEN sign(x.vl_item)=1 THEN CASE WHEN x.ie_tipo_item=1 THEN 0 WHEN x.ie_tipo_item=3 THEN 0 WHEN x.ie_tipo_item=4 THEN 0 WHEN x.ie_tipo_item=5 THEN 0 WHEN x.ie_tipo_item=15 THEN 0 WHEN x.ie_tipo_item=25 THEN 0 WHEN x.ie_tipo_item=17 THEN x.vl_item END   ELSE 0 END )),5,' ') || 
		'CO-PART: '	|| rpad(campo_mascara_virgula(sum(CASE WHEN x.ie_tipo_item=3 THEN x.vl_item  ELSE 0 END )),5,' ') || 
		'Boleto: '	|| rpad(campo_mascara_virgula(sum(x.vl_item)),6,' ') || 
		'PARCELA '	|| rpad(max(to_char(x.dt_referencia,'mm/yyyy')),8,' ') 
	into STRICT	ds_mensagem_w 
	from (SELECT	e.ie_tipo_item, 
			e.vl_item, 
			d.dt_mesano_referencia dt_referencia 
		from	pls_plano g, 
			pls_segurado f, 
			pls_mensalidade_seg_item e, 
			pls_mensalidade_segurado d, 
			titulo_receber_cobr c, 
			titulo_receber b, 
			cobranca_escritural a 
		where	a.nr_sequencia		= c.nr_seq_cobranca 
		and	c.nr_titulo		= b.nr_titulo 
		and	b.nr_seq_mensalidade	= d.nr_seq_mensalidade 
		and	e.nr_seq_mensalidade_seg = d.nr_sequencia 
		and	d.nr_seq_segurado	= f.nr_sequencia 
		and	f.nr_seq_plano		= g.nr_sequencia 
		and	b.nr_titulo		= nr_titulo_w 
		and	a.nr_sequencia		= nr_seq_cobr_escrit_p 
		
union all
 
		SELECT	e.ie_tipo_item, 
			e.vl_item, 
			d.dt_referencia dt_referencia 
		from	pls_mensalidade	d, 
			pls_mensalidade_seg_item e, 
			titulo_receber_cobr c, 
			titulo_receber b, 
			cobranca_escritural a 
		where	a.nr_sequencia		= c.nr_seq_cobranca 
		and	c.nr_titulo		= b.nr_titulo 
		and	d.nr_sequencia		= b.nr_seq_mensalidade 
		and	e.nr_seq_mensalidade = d.nr_sequencia 
		and	e.ie_tipo_item		= '17' 
		and	b.nr_titulo		= nr_titulo_w 
		and	a.nr_sequencia		= nr_seq_cobr_escrit_p) x;
			 
	if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then 
	 
			insert into	w_cobranca_banco(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec,	 
				ie_tipo_registro, 
				ds_mensagem_2) 
			values (nextval('w_cobranca_banco_seq'), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				'5', --ie_tipo_registro 
				ds_mensagem_w );
		end if;
	 
	 
	/*######### Mensagem Tipo 5 [FIM] ###########*/
 
	 
	end;
end loop;
close C01;
 
--Trailer 
nr_seq_lote_w	:= nr_seq_lote_w + 1;
insert into	w_cobranca_banco(nr_sequencia, 
	nm_usuario, 
	dt_atualizacao, 
	nm_usuario_nrec, 
	dt_atualizacao_nrec, 
	ie_tipo_registro, 
	nr_seq_reg_lote) 
values (nextval('w_cobranca_banco_seq'), 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	9, --ie_tipo_registro 
	nr_seq_lote_w);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobranca_bb_cnab_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

