-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_insere_registro_anexo_guia ( ie_tipo_anexo_p text, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_ans_p pls_lote_anexo_guias_aut.cd_ans%type) AS $body$
DECLARE

				   
qt_reg_anex_guia_w		integer;
qt_reg_anex_guia_proc_w		integer;
qt_reg_anex_guia_mat_w		integer;
nr_seq_lote_guia_w		pls_lote_anexo_guias_aut.nr_sequencia%type;
nr_seq_lote_proc_w		pls_lote_anexo_proc_aut.nr_sequencia%type;
nr_seq_lote_mat_w		pls_lote_anexo_mat_aut.nr_sequencia%type;
cd_medico_solic_w		pls_guia_plano.cd_medico_solicitante%type;
nm_profissional_solic_w		pls_lote_anexo_guias_aut.nm_profissional_solic%type;
nr_telef_prof_solic_w		pls_lote_anexo_guias_aut.nr_telef_prof_solic%type;
ds_email_prof_solic_w		pls_lote_anexo_guias_aut.ds_email_prof_solic%type;
nr_registro_anvisa_w		pls_material.nr_registro_anvisa%type;
cd_ref_fabricante_imp_w		pls_lote_anexo_mat_aut.cd_ref_fabricante_imp%type;

c01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_guia_plano_proc 
	where	nr_seq_guia	= nr_seq_guia_p 
	and	ie_tipo_anexo	= ie_tipo_anexo_p;
	
c02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_guia_plano_mat 
	where	nr_seq_guia	= nr_seq_guia_p 
	and	ie_tipo_anexo	= ie_tipo_anexo_p;

BEGIN 
  
select	count(1) 
into STRICT  qt_reg_anex_guia_w 
from  pls_lote_anexo_guias_aut 
where  nr_seq_guia	= nr_seq_guia_p 
and   ie_tipo_anexo	= ie_tipo_anexo_p;
 
if (qt_reg_anex_guia_w = 0) then 
	select	nextval('pls_lote_anexo_guias_aut_seq') 
	into STRICT	nr_seq_lote_guia_w 
	;	
	 
	insert	into pls_lote_anexo_guias_aut(nr_sequencia, nr_seq_guia, cd_guia_referencia, cd_guia, 
		 cd_guia_prestador, cd_senha, ds_biometria, 
		 dt_atualizacao, dt_atualizacao_nrec, dt_autorizacao, 
		 dt_solicitacao, ie_recem_nascido, ie_status, 
		 nm_usuario, nm_usuario_nrec, nr_seq_guia_principal, 
		 ie_tipo_anexo, cd_ans, qt_idade_benef, 
		 ie_sexo) 
	(SELECT	 nr_seq_lote_guia_w, nr_sequencia, cd_guia, cd_guia, 
		 coalesce(cd_guia_prestador, cd_guia), cd_senha, ds_biometria, 
		 clock_timestamp(), clock_timestamp(), dt_autorizacao, 
		 dt_solicitacao, ie_recem_nascido, ie_status, 
		 nm_usuario_p, nm_usuario_p, nr_seq_guia_principal, 
		 ie_tipo_anexo_p, cd_ans_p, 
		 pls_obter_dados_segurado(nr_seq_segurado, 'ID'), --Idade em anos 
		 CASE WHEN pls_obter_dados_segurado(nr_seq_segurado, 'SXS')='M' THEN  '1' WHEN pls_obter_dados_segurado(nr_seq_segurado, 'SXS')='F' THEN  '3'  ELSE null END  
	 from	 pls_guia_plano 
	 where	 nr_sequencia	= nr_seq_guia_p);
	 
	commit;
end if;
 
select	cd_medico_solicitante 
into STRICT	cd_medico_solic_w 
from	pls_guia_plano 
where	nr_sequencia	= nr_seq_guia_p;
 
nm_profissional_solic_w	:= substr(pls_obter_dados_medico(cd_medico_solic_w, 'NM'),1,70);
nr_telef_prof_solic_w	:= substr(pls_obter_dados_medico(cd_medico_solic_w, 'TC'),1,11);
ds_email_prof_solic_w	:= substr(pls_obter_dados_medico(cd_medico_solic_w, 'EC'),1,60);
 
update	pls_lote_anexo_guias_aut 
set	nm_profissional_solic	= nm_profissional_solic_w, 
	nr_telef_prof_solic	= nr_telef_prof_solic_w, 
	ds_email_prof_solic	= ds_email_prof_solic_w 
where	nr_sequencia	= nr_seq_lote_guia_w;
 
if (ie_tipo_anexo_p = 'RA') and (pls_obter_versao_tiss < '3.03.00') then 
	for	r_c01_w in c01	loop 
		select	count(1) 
		into STRICT	qt_reg_anex_guia_proc_w 
		from	pls_lote_anexo_proc_aut 
		where	nr_seq_plano_proc	= r_c01_w.nr_sequencia;
		 
		if (coalesce(nr_seq_lote_guia_w::text, '') = '') then 
			select	nr_sequencia 
			into STRICT	nr_seq_lote_guia_w 
			from  pls_lote_anexo_guias_aut 
			where  nr_seq_guia	= nr_seq_guia_p 
			and	ie_tipo_anexo	= ie_tipo_anexo_p;
		end if;
		 
		--Somente realizo o insert, se ainda não houver registro no procedimento do tipo específico para a guia. 
		if (qt_reg_anex_guia_proc_w = 0 and (nr_seq_lote_guia_w IS NOT NULL AND nr_seq_lote_guia_w::text <> '')) then 
			select	nextval('pls_lote_anexo_proc_aut_seq') 
			into STRICT	nr_seq_lote_proc_w 
			;
			 
			insert into pls_lote_anexo_proc_aut(dt_atualizacao, nm_usuario, dt_atualizacao_nrec, 
				 nm_usuario_nrec, cd_procedimento, ie_origem_proced, 
				 ie_status, nr_seq_plano_proc, nr_seq_lote_anexo_guia, 
				 nr_sequencia) 
			(SELECT clock_timestamp(), nm_usuario_p, clock_timestamp(), 
				 nm_usuario_p, cd_procedimento, ie_origem_proced, 
				 ie_status, nr_sequencia, nr_seq_lote_guia_w, 
				 nr_seq_lote_proc_w 
			 from	 pls_guia_plano_proc 
			 where	 nr_sequencia = r_c01_w.nr_sequencia);
			commit;
		end if;
	end loop;
end if;
 
if (ie_tipo_anexo_p	= 'OP'	or ie_tipo_anexo_p	= 'QU') then 
	for	r_c02_w in c02	loop 
		select	count(1) 
		into STRICT	qt_reg_anex_guia_mat_w 
		from	pls_lote_anexo_mat_aut 
		where	nr_seq_plano_mat	= r_c02_w.nr_sequencia;
		 
		if (coalesce(nr_seq_lote_guia_w::text, '') = '') then 
			select	nr_sequencia 
			into STRICT	nr_seq_lote_guia_w 
			from  pls_lote_anexo_guias_aut 
			where  nr_seq_guia	= nr_seq_guia_p 
			and	ie_tipo_anexo	= ie_tipo_anexo_p;
		end if;
 
		--Somente realizo o insert, se ainda não houver registro no procedimento do tipo específico para a guia. 
		if (qt_reg_anex_guia_mat_w = 0 and (nr_seq_lote_guia_w IS NOT NULL AND nr_seq_lote_guia_w::text <> '')) then 
			select	nextval('pls_lote_anexo_mat_aut_seq') 
			into STRICT	nr_seq_lote_mat_w 
			;
 
			begin 
			select	coalesce(nr_registro_anvisa, (select	max(z.cd_anvisa) 
							from	pls_mat_unimed_fed_sc z 
							where	a.nr_seq_mat_uni_fed_sc = z.nr_sequencia)) 
			into STRICT	nr_registro_anvisa_w 
			from	pls_material a 
			where	nr_sequencia = (SELECT	nr_seq_material 
						from	pls_guia_plano_mat 
						where	nr_sequencia = r_c02_w.nr_sequencia);
			exception 
			when others then 
				nr_registro_anvisa_w := null;
			end;
 
			if (ie_tipo_anexo_p	= 'OP') then 
				begin 
					select	nr_registro_anvisa, 
						cd_ref_material_fab 
					into STRICT	nr_registro_anvisa_w, 
						cd_ref_fabricante_imp_w 
					from	pls_material_unimed 
					where	nr_sequencia = (	SELECT	max(nr_sequencia) 
									from	pls_material_unimed 
									where	ie_situacao = 'A' 
									and	trunc(clock_timestamp()) between trunc(coalesce(dt_inicio_vigencia, clock_timestamp())) and trunc(coalesce(dt_fim_vigencia, clock_timestamp())) 
									and	cd_material = (	select	a.cd_material_ops 
												from	pls_material a 
												where	a.nr_sequencia = (	select	b.nr_seq_material 
																from	pls_guia_plano_mat b 
																where	b.nr_sequencia = r_c02_w.nr_sequencia)));
				exception 
				when others then 
					nr_registro_anvisa_w	:= nr_registro_anvisa_w;
					cd_ref_fabricante_imp_w	:= null;
				end;
			end if;
			 
			insert into pls_lote_anexo_mat_aut(cd_tipo_tabela_imp, dt_atualizacao, dt_atualizacao_nrec, 
				 ie_status, nm_usuario, nm_usuario_nrec , nr_seq_lote_anexo_guia, 
				 nr_seq_plano_mat, nr_sequencia, nr_seq_material,nr_registro_anvisa, 
				 cd_ref_fabricante_imp) 
			(SELECT cd_tipo_tabela_imp, clock_timestamp(), clock_timestamp(), 
				 ie_status, nm_usuario_p, nm_usuario_p , nr_seq_lote_guia_w, 
				 nr_sequencia, nr_seq_lote_mat_w, nr_seq_material, coalesce(nr_registro_anvisa, substr((nr_registro_anvisa_w)::numeric ,1,15)), 
				 coalesce(cd_ref_fabricante_imp, cd_ref_fabricante_imp_w) 
			 from 	 pls_guia_plano_mat 
			 where 	 nr_sequencia = r_c02_w.nr_sequencia);
			 
			 commit;
		end if;
	end loop;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_insere_registro_anexo_guia ( ie_tipo_anexo_p text, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_ans_p pls_lote_anexo_guias_aut.cd_ans%type) FROM PUBLIC;

