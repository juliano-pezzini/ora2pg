-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_comp_eup_js ( nm_usuario_p text, cd_cep_p text, ds_municipio_p INOUT text, sg_estado_p INOUT text, cd_municipio_ibge_p INOUT text, nm_log_p INOUT text, nm_bairro_p INOUT text, ds_endereco_p INOUT text, cd_mun_ibge_p INOUT text, cd_tipo_logradouro_p INOUT text) AS $body$
DECLARE


nm_log_w		varchar(80);
nm_loc_w		varchar(60);
nm_bairro_w		varchar(80);
sg_estado_w		cep_log.ds_uf%type;
nr_cep_w		integer;
cd_municipio_ibge_w	varchar(6);
ds_tipo_logradouro_w	varchar(125);
ds_endereco_w		varchar(100);
ie_tipo_logradouro_w	varchar(1);
cd_estabelecimento_w	bigint;
ie_cep_internet_w	varchar(1);
ie_municipio_ibge_w	varchar(1);
cd_mun_ibge_w		varchar(6);
cd_tipo_logradouro_w	varchar(3);



BEGIN


cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

ie_tipo_logradouro_w := Obter_param_Usuario(5, 116, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_logradouro_w);
ie_cep_internet_w := Obter_param_Usuario(0, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cep_internet_w);
ie_municipio_ibge_w := Obter_param_Usuario(916, 903, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_municipio_ibge_w);

if (cd_cep_p IS NOT NULL AND cd_cep_p::text <> '')then
	begin

	if (ie_cep_internet_w = 'N')then
		begin

		select  max(coalesce(a.nm_logradouro,'')),
			max(coalesce(a.nm_localidade,'')),
			max(coalesce(a.nm_bairro,'')),
			max(coalesce(a.cd_unidade_federacao,'')),
			max(coalesce(a.nr_logradouro,0))
		into STRICT	nm_log_w,
			nm_loc_w,
			nm_bairro_w,
			sg_estado_w,
			nr_cep_w
		from    cep_logradouro a
		where   a.cd_logradouro = cd_cep_p;

		end;
	end if;

	if (ie_cep_internet_w = 'S')then
		begin

		select  max(coalesce(a.nm_logradouro,'')),
			max(coalesce(b.nm_localidade,'')),
			max(coalesce(c.ds_bairro,'')),
			max(coalesce(a.ds_uf,'')),
			max(coalesce(a.cd_cep,0))
		into STRICT	nm_log_w,
			nm_loc_w,
			nm_bairro_w,
			sg_estado_w,
			nr_cep_w
		from    cep_loc b,
			cep_bairro c,
			cep_log a
		where   b.nr_sequencia      = c.nr_seq_loc
		and     a.cd_bairro_inicial = c.nr_sequencia
		and     b.nr_sequencia      = a.nr_seq_loc
		and     a.cd_cep            = cd_cep_p;

		end;

		if (coalesce(nr_cep_w::text, '') = '')then
			begin
			select  null,
				max(b.nm_localidade),
				null,
				max(b.ds_uf),
				max(b.cd_cep)
			into STRICT	nm_log_w,
				nm_loc_w,
				nm_bairro_w,
				sg_estado_w,
				nr_cep_w
			from    cep_loc b
			where   b.cd_cep = cd_cep_p;
			end;
		end if;
	end if;

	select 	max(ds_tipo_logradouro)
	into STRICT	ds_tipo_logradouro_w
	from 	cep_logradouro_v
	where 	cd_cep = cd_cep_p;

	if (ds_tipo_logradouro_w IS NOT NULL AND ds_tipo_logradouro_w::text <> '') and (ie_tipo_logradouro_w = 'S') then

		ds_endereco_w := ds_tipo_logradouro_w || ' ' || nm_log_w;
	else
		ds_endereco_w := substr(replace(nm_log_w,' ',''),1,40);
	end if;

	if (coalesce(ie_municipio_ibge_w,'S') = 'S') then

		select	coalesce(max(cd_municipio_ibge),'')
		into STRICT	cd_mun_ibge_w
		from (SELECT cd_municipio_ibge
                        from cep_municipio
                        where cd_cep = cd_cep_p

union

                        SELECT cd_municipio_ibge
                        from sus_cep
                        where cd_cep = cd_cep_p) alias4;

	end if;

	select	coalesce(max(cd_municipio_ibge),'')
	into STRICT	cd_municipio_ibge_w
	from	cep_municipio
	where 	cd_cep = cd_cep_p;

	select	coalesce(max(cd_tipo_logradouro),'')
	into STRICT	cd_tipo_logradouro_w
	from	sus_tipo_logradouro
        where   padronizar_nome(ds_tipo_logradouro) = padronizar_nome(ds_tipo_logradouro_w);

	end;
end if;

ds_municipio_p		:= nm_loc_w;
sg_estado_p		:= sg_estado_w;
cd_municipio_ibge_p	:= cd_municipio_ibge_w;
nm_log_p		:= nm_log_w;
nm_bairro_p		:= nm_bairro_w;
ds_endereco_p		:= ds_endereco_w;
cd_mun_ibge_p		:= cd_mun_ibge_w;
cd_tipo_logradouro_p	:= cd_tipo_logradouro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_comp_eup_js ( nm_usuario_p text, cd_cep_p text, ds_municipio_p INOUT text, sg_estado_p INOUT text, cd_municipio_ibge_p INOUT text, nm_log_p INOUT text, nm_bairro_p INOUT text, ds_endereco_p INOUT text, cd_mun_ibge_p INOUT text, cd_tipo_logradouro_p INOUT text) FROM PUBLIC;

