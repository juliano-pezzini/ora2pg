-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_indicadores_niss ( dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint ) AS $body$
DECLARE

 
 
 
cd_setor_atendimento_w	integer;
dt_inicial_w		timestamp;
dt_final_w		timestamp;
nr_atendimento_w	bigint;
qt_dias_perma_atend_w	bigint;
qt_dias_perma_total_w	bigint;
qt_total_pacientes_w	bigint;
ie_infeccao_w		varchar(1) := 'N';
qt_ih_pac_w		bigint;
qt_ih_w			bigint;
qt_ih_svd_w		bigint;
qt_ih_resp_w		bigint;
qt_ih_cvc_w		bigint;
qt_ih_cvu_w		bigint;
tx_ih_w			double precision;
Tx_densidade_ih_w	double precision;
Tx_pac_ih_w		double precision;
qt_svd_w		bigint;
qt_cvc_w		bigint;
qt_cvu_w		bigint;
qt_respirador_w		bigint;
qt_paciente_w		bigint;
qt_permanencia_w	double precision;
qt_invasividade_w	double precision;
ie_exige_infec_disp_w	varchar(1);
qt_invasividade_cvc_w	double precision;
qt_invasividade_cvu_w	double precision;
qt_invasividade_svd_w	double precision;
qt_invasividade_resp_w	double precision;
cd_pessoa_fisica_w		varchar(10);
ie_tipo_calc_disp_w		varchar(10);

c01 CURSOR FOR 
	SELECT	cd_setor_atendimento 
	from	setor_atendimento 
	where	(nr_seq_classif_niss IS NOT NULL AND nr_seq_classif_niss::text <> '');

c02 CURSOR FOR 
	SELECT	a.nr_atendimento 
	from	atendimento_paciente b, 
		atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and	a.cd_setor_atendimento = cd_setor_atendimento_w 
	and	trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and	a.dt_entrada_unidade between dt_inicial_w and dt_final_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	and	Obter_Tipo_Unidade_Atend(a.Nr_Atendimento, a.Nr_Seq_Interno, a.Ie_Passagem_Setor) not in ('L','A','S') 
	group by a.nr_atendimento 
	
union
 
	SELECT	a.nr_atendimento 
	from	atendimento_paciente b, 
		atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and	a.cd_setor_atendimento = cd_setor_atendimento_w 
	and	trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and	a.dt_saida_interno between dt_inicial_w and dt_final_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	and	Obter_Tipo_Unidade_Atend(a.Nr_Atendimento, a.Nr_Seq_Interno, a.Ie_Passagem_Setor) not in ('L','A','S') 
	
union
 
	select	a.nr_atendimento 
	from	atendimento_paciente b, 
		atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and	a.cd_setor_atendimento = cd_setor_atendimento_w 
	and	trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and	a.dt_entrada_unidade < dt_inicial_w 
	and	a.dt_saida_interno > dt_final_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	and	Obter_Tipo_Unidade_Atend(a.Nr_Atendimento, a.Nr_Seq_Interno, a.Ie_Passagem_Setor) not in ('L','A','S') 
	order by nr_atendimento;

c03 CURSOR FOR 
	SELECT (coalesce(dt_saida_unidade,clock_timestamp()) - dt_entrada_unidade) 
	from	atend_paciente_unidade 
	where	nr_atendimento = nr_atendimento_w 
	and	cd_setor_atendimento = cd_setor_atendimento_w;
	
C04 CURSOR FOR 
	SELECT	distinct b.cd_pessoa_fisica 
	from	atendimento_paciente b, 
			atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and		a.cd_setor_atendimento = cd_setor_atendimento_w 
	and		trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and		a.dt_entrada_unidade between dt_inicial_w and dt_final_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	group 	by b.cd_pessoa_fisica 
	
union
 
	SELECT	distinct b.cd_pessoa_fisica 
	from	atendimento_paciente b, 
			atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and		a.cd_setor_atendimento = cd_setor_atendimento_w 
	and		trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and		a.dt_saida_interno between dt_inicial_w and dt_final_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	
union
 
	select	distinct b.cd_pessoa_fisica 
	from	atendimento_paciente b, 
			atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and		a.cd_setor_atendimento = cd_setor_atendimento_w 
	and		trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and		a.dt_entrada_unidade < dt_inicial_w 
	and		a.dt_saida_interno > dt_final_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	order by cd_pessoa_fisica;
	
C05 CURSOR FOR 
	SELECT	a.nr_atendimento 
	from	atendimento_paciente b, 
		atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and	a.cd_setor_atendimento = cd_setor_atendimento_w 
	and	trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and	a.dt_entrada_unidade between dt_inicial_w and dt_final_w 
	and		b.cd_pessoa_fisica = cd_pessoa_fisica_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	group by a.nr_atendimento 
	
union
 
	SELECT	a.nr_atendimento 
	from	atendimento_paciente b, 
		atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and	a.cd_setor_atendimento = cd_setor_atendimento_w 
	and	trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and	a.dt_saida_interno between dt_inicial_w and dt_final_w 
	and		b.cd_pessoa_fisica = cd_pessoa_fisica_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	
union
 
	select	a.nr_atendimento 
	from	atendimento_paciente b, 
		atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and	a.cd_setor_atendimento = cd_setor_atendimento_w 
	and	trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and	a.dt_entrada_unidade < dt_inicial_w 
	and	a.dt_saida_interno > dt_final_w 
	and		b.cd_pessoa_fisica = cd_pessoa_fisica_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	order by nr_atendimento;
	
C06 CURSOR FOR 
	SELECT	distinct b.cd_pessoa_fisica 
	from	atendimento_paciente b, 
			atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and		a.cd_setor_atendimento = cd_setor_atendimento_w 
	and		trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and		a.dt_entrada_unidade between dt_inicial_w and dt_final_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	and	Obter_Tipo_Unidade_Atend(a.Nr_Atendimento, a.Nr_Seq_Interno, a.Ie_Passagem_Setor) not in ('L','A','S') 
	group 	by b.cd_pessoa_fisica 
	
union
 
	SELECT	distinct b.cd_pessoa_fisica 
	from	atendimento_paciente b, 
			atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and		a.cd_setor_atendimento = cd_setor_atendimento_w 
	and		trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and		a.dt_saida_interno between dt_inicial_w and dt_final_w 
	and	Obter_Tipo_Unidade_Atend(a.Nr_Atendimento, a.Nr_Seq_Interno, a.Ie_Passagem_Setor) not in ('L','A','S') 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	
union
 
	select	distinct b.cd_pessoa_fisica 
	from	atendimento_paciente b, 
			atend_paciente_unidade a 
	where	a.nr_atendimento = b.nr_atendimento 
	and		a.cd_setor_atendimento = cd_setor_atendimento_w 
	and		trunc(coalesce(b.dt_alta,clock_timestamp())) >= trunc(b.dt_entrada) 
	and		a.dt_entrada_unidade < dt_inicial_w 
	and		a.dt_saida_interno > dt_final_w 
	and		coalesce(b.dt_cancelamento::text, '') = '' 
	and	Obter_Tipo_Unidade_Atend(a.Nr_Atendimento, a.Nr_Seq_Interno, a.Ie_Passagem_Setor) not in ('L','A','S') 
	order by cd_pessoa_fisica;

 

BEGIN 
 
select	coalesce(max(ie_exige_infec_disp),'N') 
into STRICT	ie_exige_infec_disp_w 
from	parametro_medico 
where	cd_estabelecimento	=	cd_estabelecimento_p;
 
ie_tipo_calc_disp_w := obter_param_usuario(7043, 36, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_tipo_calc_disp_w);	
 
dt_inicial_w	:= trunc(dt_referencia_p,'month');
dt_final_w := Pkg_Date_Utils.end_of(Last_Day(dt_referencia_p),'DAY');
 
delete from niss_setor_indice 
where dt_mes_ano_referencia = trunc(dt_referencia_p,'month');
commit;
 
 
OPEN C01;
LOOP 
FETCH C01 into 
	cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	qt_dias_perma_total_w	:= 0;
	qt_total_pacientes_w	:= 0;
	qt_ih_pac_w		:= 0;	
 
	if (ie_exige_infec_disp_w = 'N') then 
		open C04;
		loop 
		fetch C04 into	 
			cd_pessoa_fisica_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin						 
			open C05;
			loop 
			fetch C05 into	 
				nr_atendimento_w;
			EXIT WHEN NOT FOUND or ie_infeccao_w = 'S';  /* apply on C05 */
				begin 
				select	coalesce(max('S'),'N') 
				into STRICT	ie_infeccao_w 
				from	cih_local_infeccao a, 
						cih_ficha_ocorrencia b 
				where	a.dt_infeccao between dt_inicial_w and dt_final_w  
				and		a.nr_ficha_ocorrencia	=	b.nr_ficha_ocorrencia 
				and		b.nr_atendimento	=	nr_atendimento_w 
				and		cih_obter_tipo_infeccao(a.cd_caso_infeccao) not in ('2') 
				and		coalesce(ie_contabiliza_niss,'S') = 'S' 
				and		campo_numerico(cih_obter_setor_infeccao_niss(a.nr_ficha_ocorrencia, a.dt_infeccao,'C')) = cd_setor_atendimento_w;
				end;
			end loop;
			close C05;
			if (ie_infeccao_w = 'S') then 
				qt_ih_pac_w := qt_ih_pac_w + 1;
			end if;
			ie_infeccao_w := 'N';
			end;
		end loop;
		close C04;
		 
		open C06;
		loop 
		fetch C06 into	 
			cd_pessoa_fisica_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin 
			qt_total_pacientes_w := qt_total_pacientes_w + 1;
			end;
		end loop;
		close C06;			
				 
	end if;
	 
	 
	OPEN C02;
	LOOP 
	FETCH C02 into 
		nr_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		/* Total de pacientes com infecção */
 
		 
		if (ie_exige_infec_disp_w = 'S') then 
			/* Totaliza os pacientes */
		 
			qt_total_pacientes_w	:= qt_total_pacientes_w + 1;
			 
			select	coalesce(max('S'),'N') 
			into STRICT	ie_infeccao_w 
			from	qua_evento c, 
					qua_evento_paciente b, 
					atend_pac_dispositivo a 
			where	dt_evento between dt_inicial_w and dt_final_w  
			and		a.nr_atendimento	=	nr_atendimento_w 
			and		b.nr_seq_disp_pac	=	a.nr_sequencia 
			and		b.nr_seq_evento		=	c.nr_sequencia 
			and		c.ie_infeccao		=	'S' 
			and		coalesce(b.ie_tipo_evento,'E') = 'E' 
			and		b.cd_setor_atendimento = cd_setor_atendimento_w;
			 
			if (ie_infeccao_w = 'S') then 
				qt_ih_pac_w := qt_ih_pac_w + 1;
			end if;
		end if;
		OPEN C03;
		LOOP 
		FETCH C03 into 
			qt_dias_perma_atend_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin 
			qt_dias_perma_total_w	:= qt_dias_perma_total_w + qt_dias_perma_atend_w;
			end;
		END LOOP;
		CLOSE C03;
 
		end;
	END LOOP;
	CLOSE C02;
	 
	/* Totaliza os episódios de IH */
 
	if (ie_exige_infec_disp_w = 'S') then 
		select	coalesce(sum(1),0), 
			coalesce(sum(CASE WHEN obter_classif_dispositivo(nr_seq_dispositivo)='SVD' THEN 1  ELSE 0 END ),0), 
			coalesce(sum(CASE WHEN obter_classif_dispositivo(nr_seq_dispositivo)='Resp' THEN 1  ELSE 0 END ),0), 
			coalesce(sum(CASE WHEN obter_classif_dispositivo(nr_seq_dispositivo)='CVC' THEN 1  ELSE 0 END ),0), 
			coalesce(sum(CASE WHEN obter_classif_dispositivo(nr_seq_dispositivo)='CVU' THEN 1  ELSE 0 END ),0) 
		into STRICT	qt_ih_w, 
			qt_ih_svd_w, 
			qt_ih_resp_w, 
			qt_ih_cvc_w, 
			qt_ih_cvu_w 
		from	qua_evento c, 
			qua_evento_paciente b, 
			atend_pac_dispositivo a 
		where	dt_evento between dt_inicial_w and dt_final_w  
		and	b.nr_seq_disp_pac	=	a.nr_sequencia 
		and	b.nr_seq_evento		=	c.nr_sequencia 
		and	c.ie_infeccao		=	'S' 
		and	coalesce(b.ie_tipo_evento,'E') = 'E' 
		and	exists	(	SELECT	1 
					from	atend_paciente_unidade x 
					where	x.nr_atendimento	= a.nr_atendimento	 
					and		x.cd_setor_atendimento	= cd_setor_atendimento_w 
					and		b.cd_setor_atendimento = cd_setor_atendimento_w 
					and	((x.dt_entrada_unidade between dt_inicial_w and dt_final_w) or (x.dt_saida_interno between dt_inicial_w and dt_final_w) or 
						 (x.dt_entrada_unidade < dt_inicial_w AND x.dt_saida_interno > dt_final_w)));
	else 
		select	coalesce(sum(1),0) 
		into STRICT	qt_ih_w 
		from	cih_local_infeccao a, 
			cih_ficha_ocorrencia b 
		where	a.dt_infeccao between dt_inicial_w and dt_final_w  
		and	a.nr_ficha_ocorrencia	=	b.nr_ficha_ocorrencia	 
		and	coalesce(ie_contabiliza_niss,'S') = 'S' 
		and	cih_obter_tipo_infeccao(a.cd_caso_infeccao) not in ('2') 
		and	exists	(	SELECT	1 
					from	atend_paciente_unidade x 
					where	x.nr_atendimento	= b.nr_atendimento	 
					and	x.cd_setor_atendimento	= cd_setor_atendimento_w 
					and	campo_numerico(cih_obter_setor_infeccao_niss(a.nr_ficha_ocorrencia, a.dt_infeccao,'C')) = cd_setor_atendimento_w 
					and	((x.dt_entrada_unidade between dt_inicial_w and dt_final_w) or (x.dt_saida_interno between dt_inicial_w and dt_final_w) or 
						 (x.dt_entrada_unidade < dt_inicial_w AND x.dt_saida_interno > dt_final_w)));
						 
		if (ie_tipo_calc_disp_w = 'D') then 
			select	 
				coalesce(sum(CASE WHEN obter_classif_dispositivo(d.nr_seq_dispositivo)='SVD' THEN 1  ELSE 0 END ),0), 
				coalesce(sum(CASE WHEN obter_classif_dispositivo(d.nr_seq_dispositivo)='Resp' THEN 1  ELSE 0 END ),0), 
				coalesce(sum(CASE WHEN obter_classif_dispositivo(d.nr_seq_dispositivo)='CVC' THEN 1  ELSE 0 END ),0), 
				coalesce(sum(CASE WHEN obter_classif_dispositivo(d.nr_seq_dispositivo)='CVU' THEN 1  ELSE 0 END ),0) 
			into STRICT	 
				qt_ih_svd_w, 
				qt_ih_resp_w, 
				qt_ih_cvc_w, 
				qt_ih_cvu_w 
			from	niss_sitio_especifico c, 
				cih_local_infeccao a, 
				cih_ficha_ocorrencia b, 
				atend_pac_dispositivo d 
			where	a.dt_infeccao between dt_inicial_w and dt_final_w  
			and	a.nr_ficha_ocorrencia	=	b.nr_ficha_ocorrencia 
			and	a.nr_seq_sitio_espec 	= 	c.nr_sequencia 
			and	d.nr_atendimento = b.nr_atendimento 
			and	(obter_dados_disp(d.nr_seq_dispositivo,'CN') IS NOT NULL AND (obter_dados_disp(d.nr_seq_dispositivo,'CN'))::text <> '') 
			and	c.cd_sitio_especifico in ('LCBI','CSEP','PNEU','SUTI','ASB') 
			and exists (SELECT 1 
					 from cih_ficha_ocorrencia_disp x 
					 where x.nr_seq_atend_disp = d.nr_sequencia 
					 and a.nr_sequencia = x.nr_seq_local_infeccao) 
			and	coalesce(ie_contabiliza_niss,'S') = 'S' 
			and	cih_obter_tipo_infeccao(a.cd_caso_infeccao) not in ('2') 
			and	exists	(	select	1 
						from	atend_paciente_unidade x 
						where	x.nr_atendimento	= b.nr_atendimento	 
						and	x.cd_setor_atendimento	= cd_setor_atendimento_w 
						and	campo_numerico(cih_obter_setor_infeccao_niss(a.nr_ficha_ocorrencia, a.dt_infeccao,'C')) = cd_setor_atendimento_w 
						and	((x.dt_entrada_unidade between dt_inicial_w and dt_final_w) or (x.dt_saida_interno between dt_inicial_w and dt_final_w) or 
							 (x.dt_entrada_unidade < dt_inicial_w AND x.dt_saida_interno > dt_final_w)));
		else 
			select	 
				coalesce(sum(CASE WHEN obter_dispositivo_sitio(cd_sitio_especifico)='SVD' THEN 1  ELSE 0 END ),0), 
				coalesce(sum(CASE WHEN obter_dispositivo_sitio(cd_sitio_especifico)='Resp' THEN 1  ELSE 0 END ),0), 
				coalesce(sum(CASE WHEN obter_dispositivo_sitio(cd_sitio_especifico)='CVC' THEN 1  ELSE 0 END ),0), 
				coalesce(sum(CASE WHEN obter_dispositivo_sitio(cd_sitio_especifico)='CVU' THEN 1  ELSE 0 END ),0) 
			into STRICT	 
				qt_ih_svd_w, 
				qt_ih_resp_w, 
				qt_ih_cvc_w, 
				qt_ih_cvu_w 
			from	niss_sitio_especifico c, 
				cih_local_infeccao a, 
				cih_ficha_ocorrencia b 
			where	a.dt_infeccao between dt_inicial_w and dt_final_w  
			and	a.nr_ficha_ocorrencia	=	b.nr_ficha_ocorrencia 
			and	a.nr_seq_sitio_espec 	= 	c.nr_sequencia 
			and	c.cd_sitio_especifico in ('LCBI','CSEP','PNEU','SUTI','ASB') 
			and	coalesce(ie_contabiliza_niss,'S') = 'S' 
			and	cih_obter_tipo_infeccao(a.cd_caso_infeccao) not in ('2') 
			and	exists	(	SELECT	1 
						from	atend_paciente_unidade x 
						where	x.nr_atendimento	= b.nr_atendimento	 
						and	x.cd_setor_atendimento	= cd_setor_atendimento_w 
						and	campo_numerico(cih_obter_setor_infeccao_niss(a.nr_ficha_ocorrencia, a.dt_infeccao,'C')) = cd_setor_atendimento_w 
						and	((x.dt_entrada_unidade between dt_inicial_w and dt_final_w) or (x.dt_saida_interno between dt_inicial_w and dt_final_w) or 
							 (x.dt_entrada_unidade < dt_inicial_w AND x.dt_saida_interno > dt_final_w)));					
		end if;
		 
	end if;
 
 
 
	/* Tx_ih Taxa de infecção */
 
	tx_ih_w	:= dividir(qt_ih_w,qt_total_pacientes_w) * 100;
 
	/* Tx_densidade_ih Densidade de infecção */
 
	Tx_densidade_ih_w := dividir(qt_ih_w,qt_dias_perma_total_w) * 100;
 
	/* Tx_pac_ih Taxa de paciente com IH */
 
	Tx_pac_ih_w := dividir(qt_ih_pac_w,qt_total_pacientes_w) * 100;
 
	/* Procedimentos dia / diarias */
	 
	select	sum(qt_svd), 
		sum(qt_cvc), 
		sum(qt_respirador), 
		sum(qt_paciente), 
		sum(qt_cvu) 
	into STRICT	qt_svd_w, 
		qt_cvc_w, 
		qt_respirador_w, 
		qt_paciente_w, 
		qt_cvu_w 
	from	niss_invasividade 
	where	dt_referencia between dt_inicial_w and dt_final_w 
	and	cd_setor_atendimento = cd_setor_atendimento_w 
	and	cd_estabelecimento = cd_estabelecimento_p;
 
	/* Invasividade */
 
	qt_invasividade_w 	:= dividir((qt_svd_w + qt_cvc_w + qt_respirador_w),qt_paciente_w);
	qt_invasividade_cvc_w	:= dividir(qt_cvc_w,qt_paciente_w);
	qt_invasividade_svd_w	:= dividir(qt_svd_w,qt_paciente_w);
	qt_invasividade_resp_w	:= dividir(qt_respirador_w,qt_paciente_w);
	qt_invasividade_cvu_w	:= dividir(qt_cvu_w,qt_paciente_w);
	 
	select 	coalesce(max(round((dividir(tab2.Total_Dias_Internacao,tab2.Total_Saidas))::numeric,2)),0) 
	into STRICT	qt_permanencia_w 
	from 
	( 
	SELECT round((Sum(Tab1.Qtd_Dias_Int_Sto))::numeric,2)Total_Dias_Internacao, 
		  Tab1.Total_Saidas 
	from( 
	SELECT A.Nr_Atendimento, 
			V.Cd_Pessoa_Fisica, 
			V.Nm_Paciente, 
			T.Dt_Entrada_Unidade, 
			T.Dt_Saida_Unidade, 
			Obter_Valor_Dominio(1493,Obter_Tipo_Unidade_Atend(T.Nr_Atendimento, T.Nr_Seq_Interno, T.Ie_Passagem_Setor)) Tipo_Passagem, 
			Round((Select Case When coalesce(T.Dt_Saida_Unidade, clock_timestamp()) > dt_final_w Then dt_final_w Else T.Dt_Saida_Unidade End  ) - 
			 (Select Case When T.Dt_Entrada_Unidade < dt_inicial_w Then dt_inicial_w Else T.Dt_Entrada_Unidade End ),2) Qtd_Dias_Int_Sto,     
			(Select  count(T2.Nr_Atendimento) 
			From Atend_Paciente_Unidade T2,  
				 Atendimento_Paciente A2 
			Where A2.Nr_Atendimento = T2.Nr_Atendimento 
			And  T2.Dt_Saida_Unidade Between dt_inicial_w And dt_final_w 
			And ((Select Case When coalesce(T2.Dt_Saida_Unidade, clock_timestamp()) > dt_final_w Then dt_final_w Else T2.Dt_Saida_Unidade End  ) - 
				 (Select Case When T2.Dt_Entrada_Unidade < dt_inicial_w Then dt_inicial_w Else T2.Dt_Entrada_Unidade End )) >= 1 
			And  coalesce(A2.Dt_Cancelamento::text, '') = '' 
			And  T2.Cd_Setor_Atendimento = cd_setor_atendimento_w 
			And  T2.Ie_Passagem_Setor = 'N' 
			And	 Obter_Tipo_Unidade_Atend(T2.Nr_Atendimento, T2.Nr_Seq_Interno, T2.Ie_Passagem_Setor) Not In ('L')) Total_Saidas     
	From Atend_Paciente_Unidade T,  
		 Atendimento_Paciente A, 
		 Atendimento_Paciente_V V      
	Where A.Nr_Atendimento = T.Nr_Atendimento 
	And  T.Dt_Entrada_Unidade <= dt_final_w 
	And  coalesce(T.Dt_Saida_Unidade, clock_timestamp()) >= dt_inicial_w 
	And ((Select Case When coalesce(T.Dt_Saida_Unidade, clock_timestamp()) > dt_final_w Then dt_final_w Else T.Dt_Saida_Unidade End  ) - 
		 (select case when T.Dt_Entrada_Unidade < dt_inicial_w then dt_inicial_w else T.Dt_Entrada_Unidade end )) >= 1 
	And  coalesce(A.Dt_Cancelamento::text, '') = '' 
	And  V.Nr_Atendimento = A.Nr_Atendimento 
	And  T.Cd_Setor_Atendimento = cd_setor_atendimento_w 
	Order By V.Nm_Paciente,T.Dt_Entrada_Unidade 
	)Tab1 
	Group By Tab1.Total_Saidas 
	) Tab2;
 
	insert into niss_setor_indice( 
		nr_sequencia, 
		cd_estabelecimento, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		dt_mes_ano_referencia, 
		cd_setor_atendimento, 
		qt_ih, 
		qt_ih_pac, 
		qt_ih_svd, 
		qt_ih_cvc, 
		qt_ih_resp, 
		qt_invasividade, 
		qt_permanencia, 
		tx_ih, 
		tx_pac_ih, 
		tx_densidade_ih, 
		qt_invasividade_cvc, 
		qt_invasividade_svd, 
		qt_invasividade_resp, 
		qt_ih_cvu, 
		qt_invasividade_cvu) 
	values ( 
		nextval('niss_setor_indice_seq'), 
		cd_estabelecimento_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		trunc(dt_referencia_p,'month'), 
		cd_setor_atendimento_w, 
		qt_ih_w, 
		qt_ih_pac_w, 
		qt_ih_svd_w, 
		qt_ih_cvc_w, 
		qt_ih_resp_w, 
		qt_invasividade_w, 
		qt_permanencia_w, 
		tx_ih_w, 
		Tx_pac_ih_w, 
		Tx_densidade_ih_w, 
		qt_invasividade_cvc_w, 
		qt_invasividade_svd_w, 
		qt_invasividade_resp_w, 
		qt_ih_cvu_w, 
		qt_invasividade_cvu_w);
	commit;
 
	end;
END LOOP;
CLOSE C01;
 
CALL gerar_indicadores_niss_neo(dt_referencia_p, nm_usuario_p, cd_estabelecimento_p);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_indicadores_niss ( dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint ) FROM PUBLIC;

