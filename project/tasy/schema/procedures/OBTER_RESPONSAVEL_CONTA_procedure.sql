-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_responsavel_conta ( nr_interno_conta_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text default null, cd_responsavel_p INOUT text DEFAULT NULL) AS $body$
DECLARE


cd_responsavel_w		varchar(10):= null;
ie_tipo_atendimento_w	smallint;
qt_regras_w		bigint;
ie_ordem_w		bigint;
ie_ordem_max_w		bigint;
ie_ordem_gerada_w	bigint;
cd_convenio_w		integer;
qt_regras_conv_w		bigint;
nr_atend_atual_w	atendimento_paciente.nr_atendimento%type;

C01 CURSOR FOR
	SELECT	a.cd_pessoa_fisica,
		a.ie_ordem
	from	regra_responsavel_conta a
	where	a.ie_tipo_atendimento = ie_tipo_atendimento_w
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	coalesce(a.cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0)
	and	a.ie_situacao = 'A'
	and	a.ie_ordem > ie_ordem_w
	and	not exists (	SELECT	1
			from	regra_resp_conta_excluir x
			where	x.nr_seq_regra_resp = a.nr_sequencia
			and	x.cd_convenio = cd_convenio_w
			and	ie_situacao = 'A')
	order by ie_ordem desc;
	
C02 CURSOR FOR
	SELECT 	coalesce(ie_ordem,0),
		nr_atendimento
	from 	conta_responsavel_atual
	where	ie_tipo_atendimento = ie_tipo_atendimento_w
	and	cd_estabelecimento = cd_estabelecimento_p
	and	coalesce(cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0)
	order by dt_atualizacao;



BEGIN

select 	coalesce(max(ie_tipo_atendimento),0),
	coalesce(max(obter_convenio_atendimento(nr_atendimento)),0)
into STRICT	ie_tipo_atendimento_w,
	cd_convenio_w
from 	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

if (ie_tipo_atendimento_w > 0) then
	
	if (cd_responsavel_p IS NOT NULL AND cd_responsavel_p::text <> '') then
		cd_responsavel_w := cd_responsavel_p;
	else	
		select 	max(a.cd_responsavel)
		into STRICT	cd_responsavel_w
		from	conta_paciente a
		where 	a.nr_atendimento = nr_atendimento_p
		and 	a.nr_interno_conta = (	SELECT	max(b.nr_interno_conta)
						from	conta_paciente b
						where	b.nr_atendimento = nr_atendimento_p
						and	(b.cd_responsavel IS NOT NULL AND b.cd_responsavel::text <> ''));
	end if;
	
	if (coalesce(cd_responsavel_w::text, '') = '') then
	
		select	count(*)
		into STRICT	qt_regras_w
		from	regra_responsavel_conta
		where	ie_situacao = 'A';
		
		select	count(*)
		into STRICT	qt_regras_conv_w
		from	regra_responsavel_conta
		where	cd_convenio = cd_convenio_w
		and	ie_situacao = 'A';
	
		if (qt_regras_w > 0) then
			
			if (qt_regras_conv_w > 0) then
			
				select	coalesce(max(a.ie_ordem),0)
				into STRICT	ie_ordem_max_w
				from	regra_responsavel_conta a
				where	a.ie_tipo_atendimento = ie_tipo_atendimento_w
				and	a.cd_estabelecimento = cd_estabelecimento_p
				and	a.cd_convenio  = coalesce(cd_convenio_w,0)
				and	a.ie_situacao = 'A'
				and	not exists (	SELECT	1
							from	regra_resp_conta_excluir x
							where	x.nr_seq_regra_resp = a.nr_sequencia
							and	x.cd_convenio = cd_convenio_w
							and	x.ie_situacao = 'A');
				
			else
			
				select	coalesce(max(a.ie_ordem),0)
				into STRICT	ie_ordem_max_w
				from	regra_responsavel_conta a
				where	a.ie_tipo_atendimento = ie_tipo_atendimento_w
				and	a.cd_estabelecimento = cd_estabelecimento_p
				and	coalesce(a.cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0)
				and	a.ie_situacao = 'A'
				and	not exists (	SELECT	1
							from	regra_resp_conta_excluir x
							where	x.nr_seq_regra_resp = a.nr_sequencia
							and	x.cd_convenio = cd_convenio_w
							and	x.ie_situacao = 'A');
				
			end if;
	
			ie_ordem_w:= 0;
			open C02;
			loop
			fetch C02 into	
				ie_ordem_w,
				nr_atend_atual_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				ie_ordem_w		:= ie_ordem_w;
				nr_atend_atual_w	:= nr_atend_atual_w;
				end;
			end loop;
			close C02;			
	
			/*select 	nvl(max(ie_ordem),0)
			into	ie_ordem_w
			from 	conta_responsavel
			where	ie_tipo_atendimento = ie_tipo_atendimento_w; */
		
			
			if (ie_ordem_w = ie_ordem_max_w) then
				ie_ordem_w:= 0;
			end if;
		
			open C01;
			loop	
			fetch C01 into	
				cd_responsavel_w,
				ie_ordem_gerada_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				cd_responsavel_w := cd_responsavel_w;
				ie_ordem_gerada_w:= ie_ordem_gerada_w;
				end;
			end loop;
			close C01;
			
			cd_responsavel_p:= cd_responsavel_w;
	
			if (coalesce(nr_atend_atual_w,0) > 0) then
				delete from conta_responsavel_atual where nr_atendimento = nr_atend_atual_w;
			end if;
			
			insert into conta_responsavel_atual(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_atendimento,
				nr_interno_conta,
				cd_responsavel,
				ie_ordem,
				ie_tipo_atendimento,
				cd_estabelecimento,
				cd_convenio)
			values (nextval('conta_responsavel_atual_seq'),
				clock_timestamp(),
				coalesce(wheb_usuario_pck.get_nm_usuario, nm_usuario_p),
				nr_atendimento_p,
				nr_interno_conta_p,
				cd_responsavel_p,
				ie_ordem_gerada_w,
				ie_tipo_atendimento_w,
				cd_estabelecimento_p,
				cd_convenio_w);
			
			insert into conta_responsavel(nr_sequencia,
				nr_atendimento,
				nr_interno_conta,
				cd_responsavel,
				ie_ordem,
				ie_tipo_atendimento,
				cd_estabelecimento,
				cd_convenio)
			values (nextval('conta_responsavel_seq'),
				nr_atendimento_p,
				nr_interno_conta_p,
				cd_responsavel_p,
				ie_ordem_gerada_w,
				ie_tipo_atendimento_w,
				cd_estabelecimento_p,
				cd_convenio_w);
		
			commit;	
		
		end if;
	else	
		cd_responsavel_p:= cd_responsavel_w;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_responsavel_conta ( nr_interno_conta_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text default null, cd_responsavel_p INOUT text DEFAULT NULL) FROM PUBLIC;

