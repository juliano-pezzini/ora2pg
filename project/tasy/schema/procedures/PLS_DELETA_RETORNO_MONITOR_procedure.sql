-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_deleta_retorno_monitor ( nr_seq_lote_com_p pls_monitor_tiss_lote_com.nr_sequencia%type, ie_origem_lote_p pls_monitor_tiss_lote.ie_origem_lote%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

 
tb_nr_sequencia_w		pls_util_cta_pck.t_number_table;
nr_seq_lote_monitor_w		pls_monitor_tiss_lote.nr_sequencia%type;
dt_inicio_comp_w		pls_monitor_tiss_lote.dt_mes_competencia%type;
dt_fim_comp_w			pls_monitor_tiss_lote.dt_mes_competencia%type;
nr_seq_lote_com_w		pls_monitor_tiss_lote_com.nr_sequencia%type;
qt_lote_gerado_w		integer;
ie_tipo_lote_w			pls_monitor_tiss_lote.ie_tipo_lote%type;
ie_status_w			pls_monitor_tiss_alt.ie_status%type;

C01 CURSOR(nr_seq_lote_com_pc		pls_monitor_tiss_lote_com.nr_sequencia%type) FOR 
	SELECT	a.nr_sequencia 
	from	pls_monitor_tiss_glosa a, 
		pls_monitor_tiss_proc_ret b, 
		pls_monitor_tiss_guia_ret c, 
		pls_monitor_tiss_lote_ret d 
	where	a.nr_seq_guia_proc_ret = b.nr_sequencia 
	and	b.nr_seq_guia_monitor_ret = c.nr_sequencia 
	and	c.nr_seq_lote_monitor_ret = d.nr_sequencia 
	and	d.nr_seq_lote_com = nr_seq_lote_com_pc 
	
union all
 
	SELECT	a.nr_sequencia 
	from	pls_monitor_tiss_glosa a, 
		pls_monitor_tiss_guia_ret c, 
		pls_monitor_tiss_lote_ret d 
	where	a.nr_seq_guia_monitor_ret = c.nr_sequencia 
	and	c.nr_seq_lote_monitor_ret = d.nr_sequencia 
	and	d.nr_seq_lote_com = nr_seq_lote_com_pc 
	
union all
 
	select	a.nr_sequencia 
	from	pls_monitor_tiss_glosa a, 
		pls_monitor_tiss_lote_ret b 
	where	b.nr_sequencia = a.nr_seq_lote_monitor_ret 
	and	b.nr_seq_lote_com = nr_seq_lote_com_pc;
	
C02 CURSOR(nr_seq_lote_com_pc		pls_monitor_tiss_lote_com.nr_sequencia%type) FOR 
	SELECT	a.nr_sequencia 
	from	pls_monitor_tiss_proc_ret a, 
		pls_monitor_tiss_guia_ret b, 
		pls_monitor_tiss_lote_ret c 
	where	a.nr_seq_guia_monitor_ret = b.nr_sequencia 
	and	b.nr_seq_lote_monitor_ret = c.nr_sequencia 
	and	c.nr_seq_lote_com = nr_seq_lote_com_pc;
	
C03 CURSOR(nr_seq_lote_com_pc		pls_monitor_tiss_lote_com.nr_sequencia%type) FOR 
	SELECT	a.nr_sequencia 
	from	pls_monitor_tiss_guia_ret a, 
		pls_monitor_tiss_lote_ret b 
	where	a.nr_seq_lote_monitor_ret = b.nr_sequencia 
	and	b.nr_seq_lote_com = nr_seq_lote_com_pc;
	
C04 CURSOR(	nr_seq_lote_monitor_pc		pls_monitor_tiss_lote.nr_sequencia%type, 
		dt_mes_competencia_pc		pls_monitor_tiss_lote.dt_mes_competencia%type) FOR 
	SELECT	a.nr_sequencia 
	from	pls_monitor_tiss_alt a, 
		pls_monitor_tiss_guia b 
	where	b.nr_seq_lote_monitor = nr_seq_lote_monitor_pc 
	and	a.nr_seq_conta = b.nr_seq_conta 
	and	a.dt_evento between dt_mes_competencia_pc and fim_mes(dt_mes_competencia_pc);
	
C05 CURSOR(nr_seq_lote_com_pc		pls_monitor_tiss_lote_com.nr_sequencia%type) FOR 
	SELECT	b.nr_sequencia 
	from	pls_monitor_tiss_lote_ret a, 
		pls_mon_tiss_guia_ret_act b		 
	where	a.nr_sequencia = b.nr_seq_lote_monitor_ret 
	and	a.nr_seq_lote_com = nr_seq_lote_com_pc;


BEGIN 
select	trunc(dt_mes_competencia,'mm'), 
	fim_mes(dt_mes_competencia), 
	nr_seq_lote_monitor 
into STRICT	dt_inicio_comp_w, 
	dt_fim_comp_w, 
	nr_seq_lote_monitor_w 
from	pls_monitor_tiss_lote_com 
where	nr_sequencia = nr_seq_lote_com_p;
 
select	max(nr_sequencia) 
into STRICT	nr_seq_lote_com_w 
from	pls_monitor_tiss_lote_com 
where	dt_mes_competencia between dt_inicio_comp_w and dt_fim_comp_w 
and	ie_origem_lote = ie_origem_lote_p;
 
if (nr_seq_lote_com_w > nr_seq_lote_com_p) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(819281); --Existe um lote posterior, de mesma competência, já importado na base. Somente é permitido desfazer a última importação da competência. 
end if;
 
select	count(1) 
into STRICT	qt_lote_gerado_w 
from	pls_monitor_tiss_lote 
where	dt_mes_competencia between dt_inicio_comp_w and dt_fim_comp_w 
and	ie_status in ('PI','PE','LE') 
and	ie_origem_lote = ie_origem_lote_p;
 
if (qt_lote_gerado_w > 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(819282); -- Exite um lote de envio, para esta competência, gerado, favor desfazê-lo antes de desfazer a importação. 
end if;
 
Open C01(nr_seq_lote_com_p);
loop 
	tb_nr_sequencia_w.delete;
	 
	fetch C01 bulk collect into tb_nr_sequencia_w 
	limit 500;
	 
	exit when tb_nr_sequencia_w.count = 0;
	forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last 
		delete	FROM pls_monitor_tiss_glosa 
		where	nr_sequencia = tb_nr_sequencia_w(i);
	commit;
end loop;
 
if (C01%ISOPEN) then 
	close C01;
end if;
 
Open C02(nr_seq_lote_com_p);
loop 
	tb_nr_sequencia_w.delete;
	 
	fetch C02 bulk collect into tb_nr_sequencia_w 
	limit 500;
	 
	exit when tb_nr_sequencia_w.count = 0;
	forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last 
		delete	FROM pls_monitor_tiss_proc_ret 
		where	nr_sequencia = tb_nr_sequencia_w(i);
	commit;
end loop;
 
if (C02%ISOPEN) then 
	close C02;
end if;
 
Open C03(nr_seq_lote_com_p);
loop 
	tb_nr_sequencia_w.delete;
	 
	fetch C03 bulk collect into tb_nr_sequencia_w 
	limit 500;
	 
	exit when tb_nr_sequencia_w.count = 0;
	forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last 
		delete	FROM pls_monitor_tiss_guia_ret 
		where	nr_sequencia = tb_nr_sequencia_w(i);
	commit;
end loop;
 
if (C03%ISOPEN) then 
	close C03;
end if;
 
Open C05(nr_seq_lote_com_p);
loop 
	tb_nr_sequencia_w.delete;
	 
	fetch C05 bulk collect into tb_nr_sequencia_w 
	limit 500;
	 
	exit when tb_nr_sequencia_w.count = 0;
	forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last 
		delete	FROM pls_mon_tiss_guia_ret_act 
		where	nr_sequencia = tb_nr_sequencia_w(i);
	commit;
end loop;
 
if (C05%ISOPEN) then 
	close C05;
end if;
 
delete	FROM pls_monitor_tiss_lote_ret 
where	nr_seq_lote_com = nr_seq_lote_com_p;
 
delete	FROM pls_monitor_tiss_lote_com 
where	nr_sequencia = nr_seq_lote_com_p;
 
commit;
 
select	coalesce(max(ie_tipo_lote),'0') 
into STRICT	ie_tipo_lote_w 
from	pls_monitor_tiss_lote 
where	nr_sequencia = nr_seq_lote_monitor_w;
 
-- Se for lote de exclusão, altera novamente para aceita (GQL) 
if (ie_tipo_lote_w = '1') then 
	ie_status_w := 'A';
else 
	ie_status_w := 'PR';
end if;
 
Open C04(nr_seq_lote_monitor_w, dt_inicio_comp_w);
loop 
	tb_nr_sequencia_w.delete;
	 
	fetch C04 bulk collect into tb_nr_sequencia_w 
	limit 500;
	 
	exit when tb_nr_sequencia_w.count = 0;		
		 
	forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last 
		update	pls_monitor_tiss_alt 
		set	ie_status = ie_status_w 
		where	nr_sequencia = tb_nr_sequencia_w(i);
	commit;
end loop;
 
insert 	into 	pls_monitor_tiss_processo(	nr_sequencia, dt_atualizacao_nrec, nm_usuario_nrec, 
		ie_tipo_processo, dt_processo, nr_seq_lote_monitor, 
		nm_usuario, dt_atualizacao) 
values (	nextval('pls_monitor_tiss_processo_seq'), clock_timestamp(), nm_usuario_p, 
		9, clock_timestamp(), nr_seq_lote_monitor_w, 
		nm_usuario_p, clock_timestamp());
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_deleta_retorno_monitor ( nr_seq_lote_com_p pls_monitor_tiss_lote_com.nr_sequencia%type, ie_origem_lote_p pls_monitor_tiss_lote.ie_origem_lote%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

