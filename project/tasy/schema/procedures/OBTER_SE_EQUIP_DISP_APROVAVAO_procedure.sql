-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_se_equip_disp_aprovavao ( nr_seq_agenda_p bigint, cd_equipamento_p bigint, ie_consiste_prazo_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


dt_inicial_w			timestamp;
dt_final_w			timestamp;
qt_equip_man_w			bigint;
qt_equipamento_w		bigint;
qt_equip_agenda_w		bigint;
nr_seq_agenda_w			bigint;
ds_equipamento_w		varchar(80);
ds_agenda_w			varchar(50);
dt_agenda_w			timestamp;
nm_paciente_w			varchar(60);
nm_medico_w			varchar(50);
cd_classif_equip_w		bigint;
qt_tempo_esterilizacao_w	bigint;
ds_erro_w			varchar(2000);
qt_equip_agenda_exec_w		bigint;
nr_minuto_duracao_w		bigint;
hr_duracao_w			varchar(255);
hr_inicio_atual_w		timestamp;
hr_fim_atual_w			timestamp;
hr_inicio_anterior_w 		timestamp;
hr_fim_anterior_w		timestamp;
ie_primeiro_registro_w		varchar(1);
nr_sequencia_w			    agenda_paciente.nr_sequencia%type;
qt_tempo_transporte_w		bigint;
nr_sequencia_ww			    agenda_paciente.nr_sequencia%type;
dt_chegada_equip_w 		timestamp;
hr_fim_w			timestamp;

C02 CURSOR FOR
	SELECT	 /*+ INDEX(A AGEPACI_UK) */		b.hr_inicio,
		b.hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400),
		b.nr_sequencia
	from	agenda c,
		agenda_pac_equip a,
		agenda_paciente b
	where	b.nr_sequencia	= a.nr_seq_agenda
	and	((hr_inicio between dt_inicial_w and dt_final_w) or
		(hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
		((hr_inicio < dt_inicial_w) and (hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) > dt_final_w)))
	and	a.cd_equipamento = cd_equipamento_p
	and 	b.cd_agenda = c.cd_agenda 
	and 	c.cd_tipo_agenda = 1
	and	ie_status_agenda = 'E'
	and	ie_origem_inf = 'I'
	and	b.nr_sequencia <> nr_seq_agenda_p;


C03 CURSOR FOR
	SELECT	 /*+ INDEX(A AGEPACI_UK) */		b.hr_inicio,
		b.hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400),
		b.nr_sequencia
	from	agenda c,
		agenda_pac_equip a,
		agenda_paciente b
	where	b.nr_sequencia	= a.nr_seq_agenda
	and	((hr_inicio between dt_inicial_w and dt_final_w) or
		(hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
		((hr_inicio < dt_inicial_w) and (hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))
	and	a.cd_equipamento = cd_equipamento_p
	and 	b.cd_agenda = c.cd_agenda
	and 	c.cd_tipo_agenda = 1
	and	ie_status_agenda not in ('C','E')
	and	ie_origem_inf = 'I'
	and	b.nr_sequencia <> nr_seq_agenda_p
	order by 1,2;


BEGIN
if (coalesce(cd_equipamento_p,0) > 0) then
	qt_tempo_transporte_w := Obter_Param_Usuario(871, 483, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, qt_tempo_transporte_w);

	select	hr_inicio,
		(hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400))
	into STRICT	dt_inicial_w,
		dt_final_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_p;

	if (ie_consiste_prazo_p = 'S') then
		--Tempo para chegar o equipamento ate no estabelecimento destino com base na data da aprovacao

		--Ele tem que chegar antes do inicio da cirurgia.
		dt_chegada_equip_w 	:= clock_timestamp() + (qt_tempo_transporte_w/24);


		if (dt_chegada_equip_w > dt_inicial_w) then
			ds_erro_w := wheb_mensagem_pck.get_texto(278948, 'DT_INICIAL_P=' || to_char(dt_inicial_w,'dd/mm/yyyy hh24:mi:ss') ||
									';DT_CHEGADA_EQUIP_P=' || to_char(dt_chegada_equip_w,'dd/mm/yyyy hh24:mi:ss'));
					
		end if;
	else
		dt_inicial_w 	:= dt_inicial_w - (qt_tempo_transporte_w/24);
		dt_final_w	:= dt_final_w + (qt_tempo_transporte_w/24);
		qt_equip_man_w	:= obter_qt_equip_manutencao(null, cd_equipamento_p,dt_inicial_w);

		select	coalesce(sum(coalesce(qt_compartilhamento,qt_equipamento)) - qt_equip_man_w, 1),
			coalesce(max(cd_classificacao),0)
		into STRICT	qt_equipamento_w,
			cd_classif_equip_w
		from	equipamento
		where	cd_equipamento	= cd_equipamento_p
		and	ie_situacao	= 'A';

		qt_tempo_esterilizacao_w	:= 0;
		/* Obter o tempo de esterilizacao da classificacao do equipamento */

		if (cd_classif_equip_w <> 0) then
			select	coalesce(max(qt_tempo_esterelizacao),0)
			into STRICT	qt_tempo_esterilizacao_w
			from	classif_equipamento
			where	nr_sequencia = cd_classif_equip_w;
		end if;

		/* Obter qtde de agendamentos que foram executadas no periodo - neste so e contado o tempo de esterilizacao e nao considera mais o tempo de duracao pois o mesmo ja foi realizado */

		ie_primeiro_registro_w 	:= 'S';

		open C02;
		loop
		fetch C02 into
			hr_inicio_atual_w,
			hr_fim_atual_w,
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			if (ie_primeiro_registro_w = 'S') then
				hr_inicio_anterior_w 	:= hr_inicio_atual_w;
				hr_fim_anterior_w	:= hr_fim_atual_w;
				qt_equip_agenda_exec_w	:= 1;
				ie_primeiro_registro_w 	:= 'N';
				nr_sequencia_ww := nr_sequencia_w;
			else
				if (hr_inicio_atual_w < hr_fim_anterior_w) then
					qt_equip_agenda_exec_w 	:= qt_equip_agenda_exec_w + 1;
					nr_sequencia_ww := nr_sequencia_w;
				end if;
			end if;
		end loop;
		close C02;

		ie_primeiro_registro_w 	:= 'S';

		open C03;
		loop
		fetch C03 into
			hr_inicio_atual_w,
			hr_fim_atual_w,
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			if (ie_primeiro_registro_w = 'S') then
				hr_inicio_anterior_w 	:= hr_inicio_atual_w;
				hr_fim_anterior_w	:= hr_fim_atual_w;
				qt_equip_agenda_w	:= 1;
				ie_primeiro_registro_w 	:= 'N';
				nr_sequencia_ww := nr_sequencia_w;
			else
				if (hr_inicio_atual_w < hr_fim_anterior_w) then
					qt_equip_agenda_w := qt_equip_agenda_w + 1;
					nr_sequencia_ww := nr_sequencia_w;
				end if;
			end if;
		end loop;
		close C03;

		qt_equip_agenda_w	:= coalesce(qt_equip_agenda_exec_w,0) + coalesce(qt_equip_agenda_w,0) + 1;

		if (qt_equipamento_w < qt_equip_agenda_w) then
			if (nr_sequencia_ww IS NOT NULL AND nr_sequencia_ww::text <> '') then
				if (qt_equip_man_w > 0) then
					ds_erro_w :=	wheb_mensagem_pck.get_texto(278954, 'CD_EQUIPAMENTO_P=' || obter_desc_equipamento(cd_equipamento_p));
				else	
					select	substr(Obter_Desc_Equipamento(cd_equipamento_p),1,80),
						hr_inicio,
						hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) + (qt_tempo_transporte_w/24),
						substr(obter_nome_agenda(cd_agenda),1,50),
						nm_paciente,
						substr(obter_nome_pf(cd_medico),1,50),
						nr_minuto_duracao,
						obter_horario_formatado(nr_minuto_duracao/60)
					into STRICT	ds_equipamento_w,
						dt_agenda_w,
						hr_fim_w,
						ds_agenda_w,
						nm_paciente_w,
						nm_medico_w,
						nr_minuto_duracao_w,
						hr_duracao_w
					from	agenda_paciente
					where	nr_sequencia	= nr_sequencia_ww;

					ds_erro_w :=	wheb_mensagem_pck.get_texto(278956, 	'DT_AGENDA_P=' || to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi') ||
												';DS_AGENDA_P=' || ds_agenda_w ||
												';NR_MINUTO_DURACAO_P=' || to_char(nr_minuto_duracao_w) ||
												';HR_DURACAO_P=' || hr_duracao_w ||
												';QT_TEMPO_ESTERILIZACAO_P=' || qt_tempo_esterilizacao_w ||
												';HR_FIM_P=' || to_char(hr_fim_w,'dd/mm/yyyy hh24:mi:ss'));						
				end if;			
			elsif (qt_equip_man_w > 0) then
				ds_erro_w :=	substr(wheb_mensagem_pck.get_texto(278954, 'CD_EQUIPAMENTO_P=' || obter_desc_equipamento(cd_equipamento_p)),1,255);
			end if;
		end if;
	end if;	
end if;	
ds_erro_p := substr(ds_erro_w,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_se_equip_disp_aprovavao ( nr_seq_agenda_p bigint, cd_equipamento_p bigint, ie_consiste_prazo_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

