-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_define_valor_partic ( nr_seq_proc_p bigint, nr_seq_partic_p bigint, vl_anestesista_p bigint, vl_medico_p bigint, vl_auxiliares_p bigint, nm_usuario_p text, ie_tipo_tabela_p text, nr_seq_plano_p pls_segurado.nr_seq_plano%type, vl_participante_p INOUT bigint) AS $body$
DECLARE


tx_valor_medico_w	double precision;
tx_valor_anestesista_w	double precision;
tx_valor_auxiliar_w	double precision;
vl_participante_w	double precision;
cd_procedimento_w	bigint;
nr_seq_grau_partic_w	bigint;
cd_area_w		bigint;
cd_especialidade_w	bigint;
cd_grupo_w		bigint;
ie_origem_w		bigint;

C01 CURSOR FOR
	SELECT	coalesce(tx_valor_medico,0) tx_valor_medico,
		coalesce(tx_valor_anestesista,0) tx_valor_anestesista,
		coalesce(tx_valor_auxiliar,0) tx_valor_auxiliar
	from 	pls_grau_partic_taxa
	where	nr_seq_grau_partic	= nr_seq_grau_partic_w
	and	((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento 	= cd_area_w))
	and 	((coalesce(cd_especialidade::text, '') = '') or (cd_especialidade 		= cd_especialidade_w))
	and 	((coalesce(cd_grupo_proc::text, '') = '') or (cd_grupo_proc 		= cd_grupo_w))
	and 	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento 		= cd_procedimento_w and ie_origem_proced = ie_origem_w))
	and	((coalesce(nr_seq_plano::text, '') = '') or (nr_seq_plano 		= nr_seq_plano_p))
	order by
		cd_area_procedimento desc,
		cd_especialidade desc,
		cd_grupo_proc desc,
		cd_procedimento desc,
		nr_seq_plano desc;

BEGIN

if (ie_tipo_tabela_p	= 'P') then

	select	cd_procedimento,
		ie_origem_proced,
		nr_seq_grau_partic,
		cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento
	into STRICT	cd_procedimento_w,
		ie_origem_w,
		nr_seq_grau_partic_w,
		cd_grupo_w,
		cd_especialidade_w,
		cd_area_w
	from	pls_proc_participante_v
	where	nr_sequencia	= nr_seq_partic_p;

elsif (ie_tipo_tabela_p	= 'C') then

	select	cd_procedimento,
		ie_origem_proced,
		nr_seq_grau_partic_conta,
		cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento
	into STRICT	cd_procedimento_w,
		ie_origem_w,
		nr_seq_grau_partic_w,
		cd_grupo_w,
		cd_especialidade_w,
		cd_area_w
	from	pls_conta_proc_v
	where	nr_sequencia	= nr_seq_proc_p;
end if;

/* Se não tem o grau de participanção informado, o sistema deve tratar como sendo médico */

if (coalesce(nr_seq_grau_partic_w,0) > 0) then
	for r_c01_w in C01() loop
		begin
		tx_valor_medico_w	:= r_c01_w.tx_valor_medico;
		tx_valor_anestesista_w	:= r_c01_w.tx_valor_anestesista;
		tx_valor_auxiliar_w	:= r_c01_w.tx_valor_auxiliar;
		end;
	end loop;
else
	tx_valor_medico_w	:= 1;
end if;

if (tx_valor_medico_w > 0) then
	vl_participante_w 	:= vl_medico_p 		* tx_valor_medico_w;
elsif	(tx_valor_auxiliar_w > 0 AND vl_auxiliares_p IS NOT NULL AND vl_auxiliares_p::text <> '') then
	vl_participante_w 	:= vl_auxiliares_p	* tx_valor_auxiliar_w;
else
	vl_participante_w 	:= vl_anestesista_p	* tx_valor_anestesista_w;
end if;


vl_participante_p	:= vl_participante_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_define_valor_partic ( nr_seq_proc_p bigint, nr_seq_partic_p bigint, vl_anestesista_p bigint, vl_medico_p bigint, vl_auxiliares_p bigint, nm_usuario_p text, ie_tipo_tabela_p text, nr_seq_plano_p pls_segurado.nr_seq_plano%type, vl_participante_p INOUT bigint) FROM PUBLIC;

