-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_guia_cronicas_noms (( dt_inicial_p timestamp, dt_final_p timestamp, ie_sobreescrever_p text) is record_w nom_cronicas) RETURNS varchar AS $body$
DECLARE

	result_tipo_exame	varchar(250);
	
BEGIN
	  if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_tipo_exame_p IS NOT NULL AND ie_tipo_exame_p::text <> '') then
		  select  coalesce(max(obter_vl_exame_nom(d.nr_seq_proc_interno, e.nr_prescricao, d.nr_seq_exame)), max(lab_obter_resultado_exame(f.nr_seq_resultado, f.nr_sequencia)))
		  into STRICT    result_tipo_exame
		  from    exame_laboratorio d,
			  exame_lab_resultado e,
			  exame_lab_result_item f
		  where	d.nr_seq_exame = f.nr_seq_exame
		  and    	f.nr_seq_resultado = e.nr_seq_resultado
		  and     d.ie_tipo_exame = ie_tipo_exame_p
		  and 	e.nr_atendimento = nr_atendimento_p;
	  end if;
	return result_tipo_exame;
	end;

begin
	if (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') then

--    if (ie_sobreescrever_p = 'S') then
	  delete from NOM_CRON_ANTECEDENTES;
	  --where DT_REGISTRO between pkg_date_utils.start_of(dt_inicial_p,'MONTH') and pkg_date_utils.end_of(dt_final_p,'MONTH') ;
	  delete from NOM_CRON_RECOMENDACAO;
	  --where DT_INICIO between pkg_date_utils.start_of(dt_inicial_p,'MONTH') and pkg_date_utils.end_of(dt_final_p,'MONTH');
	  delete from NOM_CRONICAS;
	  --where DT_CAPTURA_CONSULTA between pkg_date_utils.start_of(dt_inicial_p,'MONTH') and pkg_date_utils.end_of(dt_final_p,'MONTH');
	  delete FROM nom_cron_visita;
	--  where dt_visita between pkg_date_utils.start_of(dt_inicial_p,'MONTH') and pkg_date_utils.end_of(dt_final_p,'MONTH');
	  commit;
  --  end if;
	open c_consult_data;
	loop
	fetch c_consult_data into
			c_consult_data_w;
	EXIT WHEN NOT FOUND; /* apply on c_consult_data */
	begin
		nr_atendimento_w 			:= c_consult_data_w.nr_atendimento;
		nr_atendimento_inicial_w	:= c_consult_data_w.nr_atendimento_inicial;
		cd_estabelecimento_w 		:= c_consult_data_W.cd_estabelecimento;
		cd_pessoa_atendimento_w 	:= c_consult_data_W.cd_pessoa_fisica;

		open c_person_data;
		loop
		fetch c_person_data into
		c_person_data_w;
		EXIT WHEN NOT FOUND; /* apply on c_person_data */
		begin

	   select	min(c.IE_TIPO_COMPLEMENTO),
				get_info_end_endereco(min(c.NR_SEQ_PESSOA_ENDERECO),'TIPO_LOGRAD','C') 		as cd_tipo_segunda_vialidade,		/* FR 25 */
				get_info_end_endereco(min(c.NR_SEQ_PESSOA_ENDERECO),'RUA_VIALIDADE','D') 	as ds_rua_segunda_vialidade,		/* FR 26 */
				substr(CASE WHEN get_info_end_endereco(min(c.nr_seq_pessoa_endereco),'NUMERO','D') ='' THEN  null  ELSE get_info_end_endereco(min(c.nr_seq_pessoa_endereco),'NUMERO','D') || CASE WHEN get_info_end_endereco(min(c.nr_seq_pessoa_endereco),'NUM_EXT_ALFA','D')='' THEN  null  ELSE ' ' END  END  || get_info_end_endereco(min(c.nr_seq_pessoa_endereco),'NUM_EXT_ALFA','D'),1,10) as nr_numero_externo,
				substr(CASE WHEN get_info_end_endereco(min(c.nr_seq_pessoa_endereco),'NUMERO_INT','D') ='' THEN  null  ELSE get_info_end_endereco(min(c.nr_seq_pessoa_endereco),'NUMERO_INT','D') || CASE WHEN get_info_end_endereco(min(c.nr_seq_pessoa_endereco),'COMPLEMENTO','D')='' THEN  null  ELSE ' ' END  END  || get_info_end_endereco(min(c.nr_seq_pessoa_endereco),'COMPLEMENTO','D'),1,20) as nr_numero_interno,
				get_info_end_endereco(min(c.NR_SEQ_PESSOA_ENDERECO),'TIPO_BAIRRO','C') 		as cd_tipo_assentamento_segundo,	/* FR 29 */
				get_info_end_endereco(min(c.NR_SEQ_PESSOA_ENDERECO),'BAIRRO_VILA','D') 		as nm_assentamento_segundo,			/* FR 30 */
				get_info_end_endereco(min(c.NR_SEQ_PESSOA_ENDERECO),'CODIGO_POSTAL','D') 	as cd_postal_segundo,				/* FR 31 */
				get_info_end_endereco(min(c.NR_SEQ_PESSOA_ENDERECO),'ESTADO_PROVINCI','C') 	as cd_entidade_segundo,				/* FR 32 */
				get_info_end_endereco(min(c.NR_SEQ_PESSOA_ENDERECO),'MUNICIPIO','C') 		as cd_municipio_segundo,			/* FR 33 */
				get_info_end_endereco(min(c.NR_SEQ_PESSOA_ENDERECO),'LOCALIDADE_AREA','C') 	as cd_localidade_segunda,			/* FR 34 */
				min(c.nr_seq_pessoa_endereco)
		into STRICT 	ie_tipo_complemento_w,
				cd_tipo_segunda_vialidade_w,
				ds_rua_segunda_vialidade_w,
				nr_numero_externo_segundo_w,
				nr_numero_interno_segundo_w,
				cd_tipo_assentamento_segundo_w,
				nm_assentamento_segundo_w,
				cd_postal_segundo_w,
				cd_entidade_segundo_w,
				cd_municipio_segundo_w,
				cd_localidade_segunda_w,
				nr_seq_catalogo_outro_dom_w
		from	compl_pessoa_fisica c
		where	c.cd_pessoa_fisica = cd_pessoa_atendimento_w
		and		ie_tipo_complemento > 1
		and   (c.nr_seq_pessoa_endereco IS NOT NULL AND c.nr_seq_pessoa_endereco::text <> '');

		select
				max((select min(DT_INCLUSAO)
					from MPREV_PROGRAMA_PARTIC
					where NR_SEQ_PARTICIPANTE = m.NR_SEQ_PARTICIPANTE)) as dt_inclusao,
				max((select max(DT_INCLUSAO)
					from MPREV_PROGRAMA_PARTIC
					where NR_SEQ_PARTICIPANTE = m.NR_SEQ_PARTICIPANTE
					and coalesce(DT_EXCLUSAO::text, '') = ''
					and DT_INCLUSAO >= trunc((select max(x.dt_entrada) from atendimento_paciente x where x.nr_atendimento = nr_atendimento_w))))as dt_reingreso
		into STRICT
				dt_ingreso_w,
				dt_reingreso_w
		from
				MPREV_PARTIC_CICLO_ITEM_V m
		where	m.CD_PESSOA_FISICA = CD_PESSOA_ATENDIMENTO_W; 	/* FR 39 igreso (dt_ingreso_w)*/
 /* FR 40 reingreso (dt_reingreso_w) */
		select	max(dt_atualizacao)
		into STRICT	dt_atualizacao_familiar_w
		from	paciente_antec_clinico
		where	cd_pessoa_fisica = cd_pessoa_atendimento_w
		and		coalesce(ie_paciente, 'N') = 'N';

		select	max(dt_atualizacao)
		into STRICT	dt_atualizacao_paciente_w
		from	paciente_antec_clinico
		where	cd_pessoa_fisica = cd_pessoa_atendimento_w
		and		coalesce(ie_paciente, 'N') = 'S';

		select	min(b.nr_seq_catalogo)
		into STRICT	nr_seq_catalogo_w
		from	end_endereco b,
				pessoa_endereco_item a
		where	b.nr_sequencia = a.nr_seq_end_endereco
		and		a.nr_seq_pessoa_endereco = c_person_data_w.nr_seq_catalogo_res;

		select	min(b.nr_seq_catalogo)
		into STRICT	nr_seq_catalogo_outro_dom_w
		from	end_endereco b,
				pessoa_endereco_item a
		where	b.nr_sequencia = a.nr_seq_end_endereco
		and		a.nr_seq_pessoa_endereco = nr_seq_catalogo_outro_dom_w;

		record_w.NR_SEQ_PERSON_NAME					:= c_person_data_w.nr_seq_person_name;  			--	FR 1,2,3
		record_w.CD_ESTADO_NASC						:= c_person_data_w.estado; 							--	FR 4
		record_w.DT_NASCIMENTO						:= c_person_data_w.data_nascimento; 				--	FR 5
		record_w.IE_DATA_ESTIMADA					:= c_person_data_w.data_estimada; 					--	FR 6
		record_w.QT_IDADE							:= c_person_data_w.Anos_Meses; 						--	FR 7
		record_w.IE_SEXO							:= c_person_data_w.Sexo; 							--	FR 8
		record_w.CD_CURP							:= c_person_data_w.Curp; 							--	FR 9
		record_w.IE_SPSS							:= c_person_data_w.SPSS; 			--	FR 10
		select max(cd_tipo_convenio_mx)
		into STRICT	cd_tipo_convenio_mx_w
		from 	pessoa_titular_Convenio x,
				convenio y
		where 	y.cd_convenio = x.cd_convenio
		and		x.cd_pessoa_fisica = cd_pessoa_atendimento_w
		and		clock_timestamp() between coalesce(DT_INICIO_VIGENCIA,clock_timestamp()) and coalesce(DT_FIM_VIGENCIA,clock_timestamp());

		if (cd_tipo_convenio_mx_w = 9) then
			record_w.NR_SPSS							:= c_person_data_w.SPSS_DV; 						--	FR 11
		else record_w.NR_SPSS							:= null;
		end if;

		record_w.NR_PRONTUARIO						:= c_person_data_w.nr_prontuario; 					--	FR 12
		record_w.IE_ETNIA							:= c_person_data_w.considera_indio; 				--	FR 13
		record_w.QT_TAMANHO          				:= obter_sinal_vital(nr_atendimento_inicial_w, 'ALTURA_M'); 							--	FR 14
		if ( trunc(coalesce(record_w.QT_TAMANHO,0)) = 0) then
			record_w.QT_TAMANHO 		  := obter_sinal_vital(nr_atendimento_inicial_w, 'ALTURA') / 100;
		end if;

		record_w.NR_ATENDIMENTO						:= nr_atendimento_w;
		record_w.CD_TIPO_LOGRAD_RES					:= c_person_data_w.cd_tipo_vialidade; 				--	FR 15
		record_w.DS_RUA_VIALIDADE_RES				:= c_person_data_w.ds_rua_vialidade; 				--	FR 16
		record_w.NR_EXTERNO_RES						:= c_person_data_w.nr_numero_externo; 				--	FR 17
		record_w.NR_INTERNO_RES						:= c_person_data_w.nr_numero_interno; 				--	FR 18
		record_w.CD_TIPO_BAIRRO_RES					:= c_person_data_w.cd_tipo_assentamento; 			--	FR 19
		record_w.DS_TIPO_BAIRRO_RES					:= c_person_data_w.nm_assentamento; 				--	FR 20
		record_w.CD_CODIGO_POSTAL_RES				:= c_person_data_w.cd_postal; 						--	FR 21
		record_w.CD_ESTADO_PROVINCI_RES				:= c_person_data_w.cd_entidade;						--	FR 22
		record_w.CD_MUNICIPIO_RES					:= c_person_data_w.cd_municipio; 					--	FR 23
		record_w.CD_LOCALIDADE_AREA_RES				:= c_person_data_w.cd_localidade; 					--	FR 24
		record_w.CD_TIPO_LOGRAD_OUTRO_DOM			:= cd_tipo_segunda_vialidade_w; 					--	FR 25
		record_w.DS_RUA_VIALIDADE_OUTRO_DOM			:= ds_rua_segunda_vialidade_w; 						--	FR 26
		record_w.NR_EXTERNO_OUTRO_DOM				:= nr_numero_externo_segundo_w; 					--	FR 27
		record_w.NR_INTERNO_OUTRO_DOM				:= nr_numero_interno_segundo_w; 					--	FR 28
		record_w.CD_TIPO_BAIRRO_OUTRO_DOM			:= cd_tipo_assentamento_segundo_w; 					--	FR 29
		record_w.DS_TIPO_BAIRRO_OUTRO_DOM			:= nm_assentamento_segundo_w; 						--	FR 30
		record_w.CD_CODIGO_POSTAL_OUTRO_DOM			:= cd_postal_segundo_w; 							--	FR 31
		record_w.CD_ESTADO_PROVINCI_OUTRO_DOM		:= cd_entidade_segundo_w; 							--	FR 32
		record_w.CD_MUNICIPIO_OUTRO_DOM				:= cd_municipio_segundo_w; 							--	FR 33
		record_w.CD_LOCALIDADE_AREA_OUTRO_DOM		:= cd_localidade_segunda_w; 						--	FR 34
		record_w.CD_CLUES_UNID_MED					:= c_person_data_w.cd_clues; 						--	FR 35
		record_w.NR_TELEFONE						:= c_person_data_w.telefone_pessoa;					--	FR 36
		record_w.NR_TELEFONE_CELULAR				:= c_person_data_w.celular_pessoa;					--	FR 37
		record_w.DS_EMAIL							:= c_person_data_w.email;							--	FR 38
		record_w.DT_INTERNACAO_PAC					:= dt_ingreso_w;									--	FR 39
		record_w.DT_REINTERNACAO_PAC				:= dt_reingreso_w;									--	FR 40
		record_w.NR_SEQ_CATALOGO_RES				:= nr_seq_catalogo_w;
		record_w.NR_SEQ_CATALOGO_OUTRO_DOM 			:= nr_seq_catalogo_outro_dom_w;
		record_w.DT_ATUALIZACAO_NREC 				:= c_consult_data_W.dt_atualizacao_nrec;
		record_w.DT_ATUALIZACAO_FAMILIAR			:= dt_atualizacao_familiar_w;
		record_w.DT_ATUALIZACAO_ANT_PESSOAL			:= dt_atualizacao_paciente_w;

		select  min(b.DT_INCLUSAO)
		into STRICT    record_w.DT_CAPTURA_PAC				      --	FR 41
		from    ATEND_PROGRAMA_SAUDE a,
				MPREV_CAPTACAO b
		where   a.CD_PESSOA_FISICA = b.CD_PESSOA_FISICA
		and     a.CD_PESSOA_FISICA = CD_PESSOA_ATENDIMENTO_W;

		record_w.DT_ATUALIZACAO_PAC					:= dt_reingreso_w;									--	FR 42

		/*
		select  Max(a.DT_AGENDA)
		into    dt_proxima_consulta_w
		from    W_MPREV_AGENDAMENTO a,
				MPREV_ATEND_PACIENTE b
		where 	a.NR_SEQ_MPREV_ATEND = b.NR_SEQUENCIA
		and   	b.NR_ATENDIMENTO = nr_atendimento_w;

		if (dt_proxima_consulta_W is null) then
			select  min(C.DT_PREVISTA) as dt_prevista
			into    dt_proxima_consulta_w
			from	mprev_atend_paciente a,
					mprev_participante b,
					mprev_partic_ciclo_item_v c,
					mprev_atendimento d
			where	a.nr_seq_participante = b.nr_sequencia
			and		b.cd_pessoa_fisica = c.cd_pessoa_fisica
			and   	a.NR_ATENDIMENTO = nr_atendimento_w
			and   	D.NR_SEQUENCIA = A.NR_SEQ_ATENDIMENTO
			and   	ie_forma_atend_prev <> 'D'
			AND 	C.DT_EXECUCAO is null;

			if (dt_proxima_consulta_w is null) then
				select  max(dt_agendamento) as dt_prevista
				into    dt_proxima_consulta_w
				from	mprev_partic_ciclo_item_v c
				where c.cd_pessoa_fisica =  CD_PESSOA_ATENDIMENTO_W;
			end if;

		end if;
	*/
		SELECT 	 min(a.dt_prevista)
		into STRICT 	dt_prevista_w
		FROM	 mprev_partic_ciclo_item_v a
		where  CD_PESSOA_FISICA = obter_pessoa_atendimento(nr_atendimento_w,'C')
		and   IE_STATUS = 'P'
		ORDER BY a.dt_prevista;


		if (coalesce(c_consult_data_w.dt_alta::text, '') = '') then
			select  max(b.ie_motivo_baixa)
			into STRICT    record_w.IE_BAIXA_PACIENTE
			from    mprev_programa_partic b,
					mprev_participante a
			where   b.nr_seq_participante = a.nr_sequencia
			and     a.cd_pessoa_fisica = cd_pessoa_atendimento_w
			and     b.nr_atendimento_baixa = nr_atendimento_w;
		else record_w.IE_BAIXA_PACIENTE := null;
		end if;

		select  max(b.dt_exclusao)
		into STRICT    dt_exclusao_w
		from    mprev_partic_ciclo_item_v a,
				mprev_programa_partic b
		where   a.nr_seq_participante = b.nr_seq_participante
		and     a.cd_pessoa_fisica = CD_PESSOA_ATENDIMENTO_W;

		open c_diabetes_exams_data;
		loop
		fetch c_diabetes_exams_data into
		c_diabetes_exams_data_w;
		EXIT WHEN NOT FOUND; /* apply on c_diabetes_exams_data */
		begin
			record_w.DT_ENTRADA_DM				:= c_diabetes_exams_data_w.DT_INGRESO_DBT;
			record_w.IE_TIPO_DM 				:= c_diabetes_exams_data_w.IE_TIPO_DIABETES;
			record_w.DT_ANO_DIAGN_DM 			:= c_diabetes_exams_data_w.DT_INICIO;
			record_w.IE_TIPO_DETECCAO_DM 		:= c_diabetes_exams_data_w.IE_TIPO_DETECCAO;
			record_w.IE_TRAT_PREVIO_FARMAC_DM 	:= c_diabetes_exams_data_w.IE_TRATAMENTO_FAMACOLOGICO;
			record_w.IE_TRAT_PREV_NAO_FARMAC_DM := c_diabetes_exams_data_w.IE_TRATAMENTO_NAO_FAMACO;
			record_w.DT_CAPTURA_BASAL_DM        := c_diabetes_exams_data_w.DT_ATUALIZACAO_NREC;

			if (coalesce(c_diabetes_exams_data_w.IE_REVISAO_PE,0) > 0) then
				record_w.IE_TIPO_REVISAO_PES_DM     := c_diabetes_exams_data_w.IE_REVISAO_PE;
			end if;

			if coalesce(c_diabetes_exams_data_w.IE_FUNDO_OLHO,0) > 0 then
				record_w.IE_FUNDO_OLHO_DM           := c_diabetes_exams_data_w.IE_FUNDO_OLHO;
			end if;

			if (c_diabetes_exams_data_w.QT_GLICEMIA_CAPILAR > 999) then
				record_w.QT_GLICEMIA_BASAL :=  999;
			elsif (c_diabetes_exams_data_w.QT_GLICEMIA_CAPILAR < 20) then
				record_w.QT_GLICEMIA_BASAL := 20;
			else
				record_w.QT_GLICEMIA_BASAL   := c_diabetes_exams_data_w.QT_GLICEMIA_CAPILAR;
			end if;

			if (c_diabetes_exams_data_w.QT_RESULTADO > 20) then
				record_w.QT_HEMOGLOBINA_BASAL :=  20;
			elsif (c_diabetes_exams_data_w.QT_RESULTADO < 3) then
				record_w.QT_HEMOGLOBINA_BASAL := 3;
			else
				record_w.QT_HEMOGLOBINA_BASAL   := c_diabetes_exams_data_w.QT_RESULTADO;
			end if;

			record_w.IE_CONTROLADO_DM := c_diabetes_exams_data_w.obter_status_diagnostico; 						-- FR111
		end;
		end loop;
		close c_diabetes_exams_data;


		open c_hypertension_exams_data;
		loop
		fetch c_hypertension_exams_data into
		c_hypertension_exams_data_w;
		EXIT WHEN NOT FOUND; /* apply on c_hypertension_exams_data */
		begin
			record_w.DT_ENTRADA_HTA               := c_hypertension_exams_data_w.DT_INGRESO_HTA;
			record_w.DT_ANO_DIAG_HTA              := c_hypertension_exams_data_w.DT_INICIO;
			record_w.IE_TIPO_DETECCAO_HTA         := c_hypertension_exams_data_w.IE_TIPO_DETECCAO;
			record_w.IE_TRAT_PREVIO_FARMAC_HTA    := c_hypertension_exams_data_w.IE_TRATAMENTO_FAMACOLOGICO;
			record_w.IE_TRAT_PREV_NAO_FARMAC_HTA  := c_hypertension_exams_data_w.IE_TRATAMENTO_NAO_FAMACO;
			record_w.QT_PRESSAO_SISTOLICA_BASAL   := c_hypertension_exams_data_w.QT_PA_SISTOLICA;
			record_w.QT_PRESSAO_DIASTOLICA_BASAL  := c_hypertension_exams_data_w.QT_PA_DIASTOLICA;
			record_w.DT_ATUALIZACAO_HTA           := c_hypertension_exams_data_w.DT_ATUALIZACAO_NREC;

			record_w.IE_CONTROLADO_HTA			  := c_hypertension_exams_data_w.obter_status_diagnostico; 		-- FR112
		end;
		end loop;
		close c_hypertension_exams_data;

		open c_obesity_exams_data;
		loop
		fetch c_obesity_exams_data into
		c_obesity_exams_data_w;
		EXIT WHEN NOT FOUND; /* apply on c_obesity_exams_data */
		begin
			record_w.DT_ENTRADA_OBES                := c_obesity_exams_data_w.DT_ENTRADA_OBES;
			record_w.DT_ANO_DIAG_OBES            	:= c_obesity_exams_data_w.DT_INICIO;
			record_w.IE_TIPO_DETECCAO_OBES         	:= c_obesity_exams_data_w.IE_TIPO_DETECCAO;
			record_w.IE_TRAT_PREVIO_FARMAC_OBES     := c_obesity_exams_data_w.IE_TRATAMENTO_FAMACOLOGICO;
			record_w.IE_TRAT_PREVIO_NAO_FARMAC_OBES	:= c_obesity_exams_data_w.IE_TRATAMENTO_NAO_FAMACO;
			record_w.QT_PESO_BASAL_KG              	:= c_obesity_exams_data_w.QT_PESO;
			record_w.QT_CINTURA_BASAL_CM            := c_obesity_exams_data_w.QT_CIRCUNF_CINTURA;
			record_w.DT_CAPTURA_BASAL_OBES          := c_obesity_exams_data_w.DT_ATUALIZACAO_NREC;

			record_w.IE_CONTROLADO_OBES 			:= c_obesity_exams_data_w.obter_status_diagnostico;			-- FR113
		end;
		end loop;
		close c_obesity_exams_data;

		open c_dislipidemias_exams_data;
		loop
		fetch c_dislipidemias_exams_data into
		c_dislipidemias_exams_data_W;
		EXIT WHEN NOT FOUND; /* apply on c_dislipidemias_exams_data */
		begin

			record_w.DT_ENTRADA_UNID_DISLIP         := c_dislipidemias_exams_data_W.DT_ENTRADA_UNID_DISLIP;
			record_w.DT_ANO_DIAG_DISLIP				:= c_dislipidemias_exams_data_W.DT_INICIO;
			record_w.IE_TIPO_DETECCAO_DISLIP       	:= c_dislipidemias_exams_data_W.IE_TIPO_DETECCAO;
			record_w.IE_TRAT_PREVIO_FARMAC_DISLIP  	:= c_dislipidemias_exams_data_W.IE_TRATAMENTO_FAMACOLOGICO;
			record_w.IE_TRAT_PREVIO_NAO_FARMAC_DIS  := c_dislipidemias_exams_data_W.IE_TRATAMENTO_NAO_FAMACO;

			if (c_dislipidemias_exams_data_W.IE_TIPO_EXAME = 1) then
				if (c_dislipidemias_exams_data_W.QT_RESULTADO > 2000) then
					record_w.QT_COLESTEROL_TOTAL_BASAL := 2000;
				elsif (c_dislipidemias_exams_data_W.QT_RESULTADO < 10) then
					record_w.QT_COLESTEROL_TOTAL_BASAL := 10;
				else
					record_w.QT_COLESTEROL_TOTAL_BASAL   := c_dislipidemias_exams_data_W.QT_RESULTADO;
				end if;
			end if;


			if (c_dislipidemias_exams_data_W.IE_TIPO_EXAME = 4) then
			  if (c_dislipidemias_exams_data_W.QT_RESULTADO > 500) then
					record_w.QT_COLESTEROL_LDL_BASAL := 500;
				elsif (c_dislipidemias_exams_data_W.QT_RESULTADO < 10) then
					record_w.QT_COLESTEROL_LDL_BASAL := 10;
				else
					record_w.QT_COLESTEROL_LDL_BASAL   := c_dislipidemias_exams_data_W.QT_RESULTADO;
				end if;
			end if;

			if (c_dislipidemias_exams_data_W.IE_TIPO_EXAME = 3) then
				if (c_dislipidemias_exams_data_W.QT_RESULTADO > 200) then
					record_w.QT_COLESTEROL_HDL_BASAL := 200;
				elsif (c_dislipidemias_exams_data_W.QT_RESULTADO < 10) then
					record_w.QT_COLESTEROL_HDL_BASAL := 10;
				else
					record_w.QT_COLESTEROL_HDL_BASAL   := c_dislipidemias_exams_data_W.QT_RESULTADO;
				end if;
			end if;


			if (c_dislipidemias_exams_data_W.IE_TIPO_EXAME = 5) then
			  if (c_dislipidemias_exams_data_W.QT_RESULTADO > 2000) then
					record_w.QT_TRIGLICERIDIOS_BASAL := 2000;
				elsif (c_dislipidemias_exams_data_W.QT_RESULTADO < 10) then
					record_w.QT_TRIGLICERIDIOS_BASAL := 10;
				else
					record_w.QT_TRIGLICERIDIOS_BASAL   := c_dislipidemias_exams_data_W.QT_RESULTADO;
				end if;
			end if;

			record_w.DT_CAPTURA_DISLIP  := c_dislipidemias_exams_data_W.DT_ATUALIZACAO_NREC;
			end;

			record_w.IE_CONTROLADO_DISLIP := c_dislipidemias_exams_data_W.obter_status_diagnostico;					-- FR114
		end loop;
		close c_dislipidemias_exams_data;

		open c_sindrome_met_exams_data;
		loop
		fetch c_sindrome_met_exams_data into
		  c_sindrome_met_exams_data_w;
		  EXIT WHEN NOT FOUND; /* apply on c_sindrome_met_exams_data */
		begin
		  record_w.IE_CONTROLADO_SM := c_sindrome_met_exams_data_w.obter_status_diagnostico;							-- FR115
		  record_w.DT_ENTRADA_UNID_SM := c_sindrome_met_exams_data_w.DT_ENTRADA_UNID_SM;
		  record_w.DT_ANO_DIAG_SM := c_sindrome_met_exams_data_w.DT_INICIO;
		  record_w.DT_CAPTURA_SM := c_sindrome_met_exams_data_w.DT_ATUALIZACAO_NREC;

		end;
		end loop;
		close c_sindrome_met_exams_data;

		record_w.QT_PESO_PAC_KG 			      := obter_sinal_vital(nr_atendimento_w, 'PESO'); 				-- FR90
		record_w.QT_CINTURA_PAC_CM 			    := obter_sinal_vital(nr_atendimento_w, 'CIRCUNFERENCIA'); 			-- FR91
		record_w.QT_TAMANHO_PAC_METROS 		  := obter_sinal_vital(nr_atendimento_w, 'ALTURA_M'); 			-- FR92
		if ( trunc(coalesce(record_w.QT_TAMANHO_PAC_METROS,0)) = 0) then
			record_w.QT_TAMANHO_PAC_METROS 		  := obter_sinal_vital(nr_atendimento_w, 'ALTURA') / 100;
		end if;

		record_w.QT_PRESSAO_SISTOLICA_PAC 	:= obter_sinal_vital(nr_atendimento_w, 'PAMAX');			-- FR93
		record_w.QT_PRESSAO_DIASTOLICA_PAC 	:= obter_sinal_vital(nr_atendimento_w, 'PAMIN');		-- FR94
		record_w.QT_GLICEMIA_PAC 			      := obter_sinal_vital(nr_atendimento_w, 'GC');		-- FR95
		record_w.IE_TIPO_MEDICAO 	          := obter_sinal_vital(nr_atendimento_w, 'MEDICAO');			-- FR96
		if (obter_sinal_vital_char(nr_atendimento_w, 'OLHO') = 'S') then
			record_w.IE_FUNDO_OLHO_PAC  := '1';
		else
			 record_w.IE_FUNDO_OLHO_PAC := '0';
		end if;
		record_w.IE_TIPO_REVISAO_PES_PAC 	  := obter_sinal_vital_char(nr_atendimento_w, 'REVISAOPE'); 			-- FR99
		if ((get_tipo_exame(nr_atendimento_w, '1'))::numeric  > 2000) then
			record_w.QT_COLESTEROL_TOTAL_PAC := '2000';
		elsif ((get_tipo_exame(nr_atendimento_w, '1'))::numeric  < 10) then
			record_w.QT_COLESTEROL_TOTAL_PAC := '10';
		else
			record_w.QT_COLESTEROL_TOTAL_PAC   := get_tipo_exame(nr_atendimento_w, '1');
		end if;

		if ((substr(get_tipo_exame(nr_atendimento_w, '2'),1,3))::numeric  > 20) then
			record_w.QT_HEMOGLOBINA_PAC :=  '20';
		elsif ((substr(get_tipo_exame(nr_atendimento_w, '2'),1,3))::numeric  < 3) then
			record_w.QT_HEMOGLOBINA_PAC := '3';
		else
			record_w.QT_HEMOGLOBINA_PAC   := substr(get_tipo_exame(nr_atendimento_w, '2'),1,3);
		end if;

		if ((get_tipo_exame(nr_atendimento_w, '3'))::numeric  > 200) then
			record_w.QT_COLESTEROL_HDL_PAC := '200';
		elsif ((get_tipo_exame(nr_atendimento_w, '3'))::numeric  < 10) then
			record_w.QT_COLESTEROL_HDL_PAC := '10';
		else
			record_w.QT_COLESTEROL_HDL_PAC   := get_tipo_exame(nr_atendimento_w, '3');
		end if;

		 if ((get_tipo_exame(nr_atendimento_w, '4'))::numeric  > 500) then
			record_w.QT_COLESTEROL_LDL_PAC := '500';
		elsif ((get_tipo_exame(nr_atendimento_w, '4'))::numeric  < 10) then
			record_w.QT_COLESTEROL_LDL_PAC := '10';
		else
			record_w.QT_COLESTEROL_LDL_PAC   := get_tipo_exame(nr_atendimento_w, '4');
		end if;

		if ((get_tipo_exame(nr_atendimento_w, '5'))::numeric  > 2000) then
			record_w.QT_TRIGLICERIDIOS_PAC := '2000';
		elsif ((get_tipo_exame(nr_atendimento_w, '5'))::numeric  < 10) then
			record_w.QT_TRIGLICERIDIOS_PAC := '10';
		else
			record_w.QT_TRIGLICERIDIOS_PAC   := get_tipo_exame(nr_atendimento_w, '5');
		end if;

		if ((get_tipo_exame(nr_atendimento_w, '7'))::numeric  > 0.7) then
			record_w.QT_CREATININA := '0.7';
		elsif ((get_tipo_exame(nr_atendimento_w, '7'))::numeric  < 0.2) then
			record_w.QT_CREATININA := '0.2';
		else
			record_w.QT_CREATININA   := get_tipo_exame(nr_atendimento_w, '7');
		end if;

		record_w.IE_REFERENCIA_OUTRA_UNID   := c_consult_data_w.IE_TIPO_UNID_ENCAMINHAMENTO;
		record_w.DT_CONSULTA 				:= c_consult_data_w.DT_ENTRADA;

		if (coalesce(get_tipo_exame(nr_atendimento_w, '6'),0) > 0) then
		  record_w.IE_MICRO_ALBUMINURIA := '1'; 			-- FR104
		else
		  record_w.IE_MICRO_ALBUMINURIA := '0'; 			-- FR104
		end if;


		if (c_consult_data_w.ie_tipo = 'I') then
			record_w.IE_GRUPO_EC := '1';
		else
			record_w.IE_GRUPO_EC := '0'; 	 --FR106
		end if;

		record_w.IE_GRAU_TABACO_FAGERSTROM := null;

		select  coalesce(max(a.QT_PONTOS),100)
		into STRICT    qt_pontos_w
		from 	ESCALA_FARGESTROM a
		where   a.NR_ATENDIMENTO = NR_ATENDIMENTO_W;

		if (qt_pontos_w = 100) then
		  record_w.IE_GRAU_TABACO_FAGERSTROM 	:= null;
		elsif (qt_pontos_w > 7) then 			--FR 107
		  record_w.IE_GRAU_TABACO_FAGERSTROM 	:= '5'; 	-- V Dependencia muy fuerte
		elsif (qt_pontos_w > 5) then
		  record_w.IE_GRAU_TABACO_FAGERSTROM 	:='4'; 		--  IV Fuerte dependencia
		elsif (qt_pontos_w = 5) then
		  record_w.IE_GRAU_TABACO_FAGERSTROM 	:= '3'; 	-- III Dependencia moderada
		elsif (qt_pontos_w > 2) then
		  record_w.IE_GRAU_TABACO_FAGERSTROM 	:= '2'; 	-- II Dependencia débil
		else
		  record_w.IE_GRAU_TABACO_FAGERSTROM 	:= '1'; 	-- I No dependencia
		end if;


		select
			count(ie_influenza) ie_influenza
		into STRICT
			count_influenza_w
		from
			VACINA a,
			PACIENTE_VACINA b
		where   a.nr_sequencia = b.nr_seq_vacina
		and     b.nr_atendimento = NR_ATENDIMENTO_W;

		if (count_influenza_w >= 1) then -- FR 110
		  record_w.IE_VACINA_INFLUENZA := count_influenza_w;
		else
			record_w.IE_VACINA_INFLUENZA := 0;
		end if;

		select  min(dt_prevista) as dt_prevista
		into STRICT    dt_proxima_consulta_w
		from	  mprev_partic_ciclo_item_v c
		where   c.cd_pessoa_fisica =  obter_pessoa_atendimento(NR_ATENDIMENTO_W, 'C') and dt_prevista > c_consult_data_w.dt_inicio
		and   	ie_forma_atend_prev <> 'D';

		record_w.DT_PROXIMA_CONSULTA := dt_proxima_consulta_W;


		record_w.DT_CAPTURA_CONSULTA := c_consult_data_w.dt_inicio;	-- FR116
		record_w.DT_ATUALIZACAO := clock_timestamp();
		record_w.NM_USUARIO := wheb_usuario_pck.get_nm_usuario();
		record_w.DT_INCLUSAO := c_consult_data_w.dt_inicio;

		select  nextval('nom_cronicas_seq')
		into STRICT    record_w.nr_sequencia
		;

		insert into NOM_CRONICAS values (record_w.*);

		
		open c_visitas_domiciliares;
		loop
		fetch c_visitas_domiciliares into
			  c_visitas_domiciliares_w;
		EXIT WHEN NOT FOUND; /* apply on c_visitas_domiciliares */

			record_visitas_domiciares_w.ie_resultado_visita := c_visitas_domiciliares_w.ie_resultado_visita;
			record_visitas_domiciares_w.dt_visita 			:= c_visitas_domiciliares_w.dt_inicio;
			record_visitas_domiciares_w.ds_observacao 		:= c_visitas_domiciliares_w.ds_observacao;

			if (c_visitas_domiciliares_w.ie_resultado_visita in ('2','4','6') ) then
				record_visitas_domiciares_w.dt_proxima_visita := null;
			else
				record_visitas_domiciares_w.dt_proxima_visita 	:= c_visitas_domiciliares_w.dt_prevista;
			end if;

			if (record_w.IE_GRUPO_EC <> '1') and c_visitas_domiciliares_w.ie_resultado_visita not in ('2','4','6') then
				record_visitas_domiciares_w.dt_proxima_visita := clock_timestamp() + interval '1 days';
			end if;

			record_visitas_domiciares_w.dt_captura_visita 	:= c_visitas_domiciliares_w.dt_atualizacao;
			record_visitas_domiciares_w.nr_atendimento 		:= nr_atendimento_inicial_w;

			select	coalesce(max(nr_sequencia)+ 1,1)
			into STRICT	record_visitas_domiciares_w.nr_sequencia
			from	nom_cron_visita;

			record_visitas_domiciares_w.NR_SEQ_CRONICAS              := record_w.NR_SEQUENCIA;

			insert into nom_cron_visita values (record_visitas_domiciares_w.*);

			commit;
		end loop;
		close c_visitas_domiciliares;

		open c_cron_recomendacao_data;
		loop
		fetch c_cron_recomendacao_data into
			  c_cron_recomendacao_data_w;
		EXIT WHEN NOT FOUND; /* apply on c_cron_recomendacao_data */
		  record_cron_recomendacao_w.CD_MATERIAL                  := c_cron_recomendacao_data_w.CD_MATERIAL;
		  record_cron_recomendacao_w.IE_RECOMENDACAO_NAO_FARMACO  := c_cron_recomendacao_data_w.IE_RECOMENDACAO_NAO_FARMACO;
		  record_cron_recomendacao_w.DT_CAPTURA_COMPLICACAO       := c_cron_recomendacao_data_w.DT_CAPTURA_COMPLICACAO;
		  record_cron_recomendacao_w.DT_CAPTURA_MEDIC             := c_cron_recomendacao_data_w.DT_CAPTURA_MEDIC;
		  record_cron_recomendacao_w.IE_COMPLICACAO               := c_cron_recomendacao_data_w.IE_COMPLICACAO;

		  record_cron_recomendacao_w.IE_TRATAMENTO_FAMACOLOGICO   := c_cron_recomendacao_data_w.IE_TRATAMENTO_FAMACOLOGICO;
		  record_cron_recomendacao_w.IE_TRATAMENTO_NAO_FAMACO     := c_cron_recomendacao_data_w.IE_TRATAMENTO_NAO_FAMACO;

		  record_cron_recomendacao_w.DT_INICIO                    := c_cron_recomendacao_data_w.DT_INICIO;
		  record_cron_recomendacao_w.NR_SEQ_CRONICAS              := record_w.NR_SEQUENCIA;

		

		  select  nextval('nom_cron_recomendacao_seq')
		  into STRICT    record_cron_recomendacao_w.nr_sequencia
		;

		
		  insert into NOM_CRON_RECOMENDACAO values (record_cron_recomendacao_w.*);

		  commit;
		end loop;
		close c_cron_recomendacao_data;

			open 	c_family_history;
					loop
					fetch 	c_family_history into
							c_family_history_w;
					EXIT WHEN NOT FOUND; /* apply on c_family_history */
			begin

				record_cron_antecedentes_w.CD_PARENTESCO_MX		:= c_family_history_W.CD_PARENTESCO_MX;		  --	FR 44
				record_cron_antecedentes_w.DT_ATUALIZACAO		  := c_family_history_w.DT_ATUALIZACAO;				--	FR 45
				record_cron_antecedentes_w.IE_DOENCA_CRONICA	:= c_family_history_w.IE_DOENCA_CRONICA;		--	FR 46
				record_cron_antecedentes_w.DT_REGISTRO		    := c_family_history_w.DT_REGISTRO;					-- 	FR 47
				record_cron_antecedentes_w.IE_TIPO_ANTECEDENTE  := c_family_history_w.IE_TIPO_ANTECEDENTE;
				record_cron_antecedentes_w.NM_USUARIO         := wheb_usuario_pck.get_nm_usuario;
				record_cron_antecedentes_w.NR_SEQ_CRONICAS    := record_w.NR_SEQUENCIA;

			select  nextval('nom_cron_antecedentes_seq')
			into STRICT    record_cron_antecedentes_w.NR_SEQUENCIA
			;

			insert into NOM_CRON_ANTECEDENTES values (record_cron_antecedentes_w.*);
			end;
				end loop;
				close c_family_history;
			end;
			end loop;
			close c_person_data;
		end;

		record_w.IE_CONTROLADO_SM 					:= null;
		record_w.DT_ENTRADA_UNID_SM 				:= null;
		record_w.DT_ANO_DIAG_SM 					:= null;
		record_w.DT_CAPTURA_SM 						:= null;
		record_w.NR_SEQ_PERSON_NAME					:= null;
		record_w.CD_ESTADO_NASC						:= null;
		record_w.DT_NASCIMENTO						:= null;
		record_w.IE_DATA_ESTIMADA					:= null;
		record_w.QT_IDADE							:= null;
		record_w.IE_SEXO							:= null;
		record_w.CD_CURP							:= null;
		record_w.IE_SPSS							:= null;
		record_w.NR_SPSS							:= null;
		record_w.NR_PRONTUARIO						:= null;
		record_w.IE_ETNIA							:= null;
		record_w.QT_TAMANHO          				:= null;
		record_w.NR_ATENDIMENTO						:= null;
		record_w.CD_TIPO_LOGRAD_RES					:= null;
		record_w.DS_RUA_VIALIDADE_RES				:= null;
		record_w.NR_EXTERNO_RES						:= null;
		record_w.NR_INTERNO_RES						:= null;
		record_w.CD_TIPO_BAIRRO_RES					:= null;
		record_w.DS_TIPO_BAIRRO_RES					:= null;
		record_w.CD_CODIGO_POSTAL_RES				:= null;
		record_w.CD_ESTADO_PROVINCI_RES				:= null;
		record_w.CD_MUNICIPIO_RES					:= null;
		record_w.CD_LOCALIDADE_AREA_RES				:= null;
		record_w.CD_TIPO_LOGRAD_OUTRO_DOM			:= null;
		record_w.DS_RUA_VIALIDADE_OUTRO_DOM			:= null;
		record_w.NR_EXTERNO_OUTRO_DOM				:= null;
		record_w.NR_INTERNO_OUTRO_DOM				:= null;
		record_w.CD_TIPO_BAIRRO_OUTRO_DOM			:= null;
		record_w.DS_TIPO_BAIRRO_OUTRO_DOM			:= null;
		record_w.CD_CODIGO_POSTAL_OUTRO_DOM			:= null;
		record_w.CD_ESTADO_PROVINCI_OUTRO_DOM		:= null;
		record_w.CD_MUNICIPIO_OUTRO_DOM				:= null;
		record_w.CD_LOCALIDADE_AREA_OUTRO_DOM		:= null;
		record_w.CD_CLUES_UNID_MED					:= null;
		record_w.NR_TELEFONE						:= null;
		record_w.NR_TELEFONE_CELULAR				:= null;
		record_w.DS_EMAIL							:= null;
		record_w.DT_INTERNACAO_PAC					:= null;
		record_w.DT_REINTERNACAO_PAC				:= null;
		record_w.NR_SEQ_CATALOGO_RES				:= null;
		record_w.NR_SEQ_CATALOGO_OUTRO_DOM 			:= null;
		record_w.DT_ATUALIZACAO_NREC 				:= null;
		record_w.DT_ATUALIZACAO_FAMILIAR			:= null;
		record_w.DT_ATUALIZACAO_ANT_PESSOAL			:= null;
		record_w.DT_ENTRADA_DM				:= null;
		record_w.IE_TIPO_DM 				:= null;
		record_w.DT_ANO_DIAGN_DM 			:= null;
		record_w.IE_TIPO_DETECCAO_DM 		:= null;
		record_w.IE_TRAT_PREVIO_FARMAC_DM 	:= null;
		record_w.IE_TRAT_PREV_NAO_FARMAC_DM := null;
		record_w.QT_GLICEMIA_BASAL          := null;
		record_w.QT_HEMOGLOBINA_BASAL       := null;
		record_w.IE_TIPO_REVISAO_PES_DM     := null;
		record_w.IE_FUNDO_OLHO_DM           := null;
		record_w.DT_CAPTURA_BASAL_DM        := null;

		record_w.IE_GRAU_TABACO_FAGERSTROM := null;


		record_w.IE_CONTROLADO_DM := null;

		record_w.DT_ENTRADA_HTA               := null;
		record_w.DT_ANO_DIAG_HTA              := null;
		record_w.IE_TIPO_DETECCAO_HTA         := null;
		record_w.IE_TRAT_PREVIO_FARMAC_HTA    := null;
		record_w.IE_TRAT_PREV_NAO_FARMAC_HTA  := null;
		record_w.QT_PRESSAO_SISTOLICA_BASAL   := null;
		record_w.QT_PRESSAO_DIASTOLICA_BASAL  := null;
		record_w.DT_ATUALIZACAO_HTA           := null;
		record_w.IE_CONTROLADO_HTA			  := null;


		record_w.DT_ENTRADA_UNID_DISLIP         := null;
		record_w.DT_ANO_DIAG_DISLIP				:= null;
		record_w.IE_TIPO_DETECCAO_DISLIP       	:= null;
		record_w.IE_TRAT_PREVIO_FARMAC_DISLIP  	:= null;
		record_w.IE_TRAT_PREVIO_NAO_FARMAC_DIS  := null;

		record_w.QT_COLESTEROL_TOTAL_BASAL  := null;
		record_w.QT_COLESTEROL_LDL_BASAL  	:= null;
		record_w.QT_COLESTEROL_HDL_BASAL  	:= null;
		record_w.QT_TRIGLICERIDIOS_BASAL  	:= null;
		record_w.DT_CAPTURA_DISLIP  		:= null;
		record_w.IE_CONTROLADO_DISLIP 		:= null;

		record_w.QT_PESO_PAC_KG 			  := null;
		record_w.QT_CINTURA_PAC_CM 			  := null;
		record_w.QT_TAMANHO_PAC_METROS 		  := null;
		record_w.QT_PRESSAO_SISTOLICA_PAC 	  := null;
		record_w.QT_PRESSAO_DIASTOLICA_PAC 	  := null;
		record_w.QT_GLICEMIA_PAC 			  := null;
		record_w.IE_TIPO_MEDICAO 	          := null;
		record_w.IE_FUNDO_OLHO_PAC            := null;
		record_w.IE_FUNDO_OLHO_PAC            := null;
		record_w.IE_TIPO_REVISAO_PES_PAC 	  := null;
		record_w.QT_COLESTEROL_TOTAL_PAC 	  := null;
		record_w.QT_HEMOGLOBINA_PAC 		  := null;
		record_w.QT_COLESTEROL_HDL_PAC 		  := null;
		record_w.QT_COLESTEROL_LDL_PAC 		  := null;
		record_w.QT_TRIGLICERIDIOS_PAC 		  := null;
		record_w.QT_CREATININA 				  := null;
		record_w.IE_REFERENCIA_OUTRA_UNID     := null;
		record_w.DT_CONSULTA 				  := null;
		record_w.DT_ENTRADA_UNID_DISLIP         := NULL;
		record_w.DT_ANO_DIAG_DISLIP				:= NULL;
		record_w.IE_TIPO_DETECCAO_DISLIP       	:= NULL;
		record_w.IE_TRAT_PREVIO_FARMAC_DISLIP  	:= NULL;
		record_w.IE_TRAT_PREVIO_NAO_FARMAC_DIS  := NULL;
		record_w.QT_COLESTEROL_TOTAL_BASAL  	:= NULL;
		record_w.QT_COLESTEROL_LDL_BASAL  		:= NULL;
		record_w.QT_COLESTEROL_HDL_BASAL  		:= NULL;
		record_w.QT_TRIGLICERIDIOS_BASAL  		:= NULL;
		record_w.DT_CAPTURA_DISLIP  			:= NULL;
		record_w.IE_CONTROLADO_DISLIP 			:= NULL;



		end loop;
		close c_consult_data;

	end if;
  commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_guia_cronicas_noms (( dt_inicial_p timestamp, dt_final_p timestamp, ie_sobreescrever_p text) is record_w nom_cronicas) FROM PUBLIC;

