-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_mat_plano_convenio ( cd_convenio_p bigint, cd_plano_p text, cd_material_p bigint, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, ds_retorno_p INOUT text, ie_bloqueia_agenda_p INOUT text, ie_regra_p INOUT text, nr_seq_regra_p INOUT bigint, qt_material_p bigint, dt_atendimento_p timestamp, nr_seq_agenda_p bigint, cd_estabelecimento_p bigint, cd_categoria_p text, ie_tipo_atendimento_p text, cd_tipo_acomodacao_p bigint default null, nr_prescricao_p bigint default null, nr_seq_prescricao_p bigint default null, cd_cgc_p text default null, nr_seq_mat_simpro_p bigint default null) AS $body$
DECLARE



ie_regra_w			smallint 	:= 0;
ds_retorno_w			varchar(255)	:= '';
ie_bloqueia_agenda_w		varchar(01)	:= 'N';
cd_grupo_material_w		integer	:= 0;
cd_subgrupo_material_w		integer	:= 0;
cd_classe_material_w		integer	:= 0;
ie_tipo_atendimento_w		smallint;
cd_funcao_ativa_w		bigint	:= 0;
ie_valor_w			varchar(5);
vl_material_min_w		double precision;
vl_material_max_w		double precision;
cd_categoria_w			varchar(10);
cd_estabelecimento_w		integer;
cont_w				integer;
cd_tipo_acomodacao_w		smallint;
ds_observacao_w			varchar(255)	:= '';
nr_seq_regra_w			bigint;
cd_classif_setor_w		varchar(10);
ds_erro_autor_w			varchar(255)	:= '';
ds_aviso_w			varchar(255)	:= '';
vl_referencia_w			double precision	:= 0;
dt_ult_vigencia_w		timestamp;
cd_tab_preco_mat_w		bigint;
ie_origem_preco_w		bigint;
ie_carater_inter_sus_w		varchar(2);
ie_clinica_w			integer;
cd_usuario_convenio_w		varchar(30);
cd_doenca_atend_w		varchar(10);
qt_utilizada_w			double precision;
qt_minima_w			double precision;
qt_maxima_w			double precision;
ie_autor_generico_w		varchar(1);
cd_material_w			integer;
cd_material_ww			integer;
cd_material_preco_w		bigint;
cd_empresa_conv_w		bigint;
ie_mat_conta_w			varchar(255);
ie_consignado_w			varchar(01);
ie_cobertura_w			varchar(1)	:= 'N';
nr_seq_cobertura_w		bigint;
nr_seq_familia_w		bigint	:= 0;
ds_material_w			varchar(255);
qt_material_w			bigint;
ie_valor_dia_w			varchar(15)	:= 'N';
ie_atual_qt_solic_autor_w	varchar(15);
ie_gerar_saldo_itens_autor_w	varchar(15);
ie_valor_unitario_w		varchar(5);
vl_referencia_conta_w		double precision	:= 0;
cd_perfil_w			integer	:= Obter_perfil_Ativo;
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
nr_seq_ajuste_mat_w		bigint;
cd_material_estoque_w		integer;
ie_tipo_material_w		varchar(3);
nr_seq_classif_atend_w		atendimento_paciente.nr_seq_classificacao%type;
cd_material_validacao_w		integer;
ie_classificacao_w		varchar(3);
cd_simpro_w			bigint;
ds_modulo_w			varchar(48);
ds_action_w			varchar(32)	:= '';

C01 CURSOR FOR
SELECT	ie_regra,
	ie_valor,
	coalesce(vl_material_min, 0),
	coalesce(vl_material_max, 0),
	nr_sequencia,
	coalesce(qt_minima,0),
	coalesce(qt_maxima,999),
	ie_mat_conta,
	coalesce(ie_valor_dia,'N'),
	coalesce(ie_valor_unitario,'N')
from 	regra_Convenio_Plano_mat
where	cd_convenio							= cd_convenio_p
and 	((coalesce(cd_plano, cd_plano_p) 					= cd_plano_p) or (coalesce(cd_plano_p, 'X') = 'X'))
and	coalesce(cd_material,cd_material_w)					= cd_material_w
and	coalesce(cd_material_estoque,cd_material_estoque_w) 			= cd_material_estoque_w
and	coalesce(cd_grupo_material,cd_grupo_material_w)			= cd_grupo_material_w
and	coalesce(cd_subgrupo_material,cd_subgrupo_material_w)		= cd_subgrupo_material_w
and	coalesce(cd_classe_material,cd_classe_material_w)			= cd_classe_material_w
and	coalesce(nr_seq_familia,coalesce(nr_seq_familia_w,0))			= coalesce(nr_seq_familia_w,0)
and	coalesce(ie_tipo_atendimento, coalesce(coalesce(ie_tipo_atendimento_p,ie_tipo_atendimento_w),0)) 		= coalesce(coalesce(ie_tipo_atendimento_p, ie_tipo_atendimento_w),0)
and	coalesce(cd_classif_setor, coalesce(cd_classif_setor_w,'X')) 		= coalesce(cd_classif_setor_w,'X')
and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_p,0))	= coalesce(cd_setor_atendimento_p,0)
and	coalesce(cd_tipo_acomodacao, coalesce(cd_tipo_acomodacao_w,0)) 		= coalesce(cd_tipo_acomodacao_w,0)
and	coalesce(ie_carater_inter_sus,coalesce(ie_carater_inter_sus_w,0))		= coalesce(ie_carater_inter_sus_w,0)
and	coalesce(ie_clinica,coalesce(ie_clinica_w,0))				= coalesce(ie_clinica_w,0)
and	coalesce(obter_se_carteira_mascara(ds_mascara_carteira,cd_usuario_convenio_w),'S') = 'S'
and (coalesce(dt_atendimento_p,clock_timestamp()) between
	coalesce(dt_inicio_vigencia,to_date('01/01/1900','dd/mm/yyyy')) and
	coalesce(dt_fim_vigencia,to_date('31/12/2099','dd/mm/yyyy')))
and (cd_estabelecimento = cd_estabelecimento_p or coalesce(cd_estabelecimento::text, '') = '')
and 	coalesce(cd_empresa, coalesce(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)) = coalesce(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)
and	coalesce(cd_doenca,coalesce(cd_doenca_atend_w,'X'))			= coalesce(cd_doenca_atend_w,'X')
and	coalesce(cd_empresa_conv, coalesce(cd_empresa_conv_w,0))			= coalesce(cd_empresa_conv_w,0)
and	coalesce(ie_consignado, coalesce(ie_consignado_w,'X'))			= coalesce(ie_consignado_w,'X')
and	coalesce(cd_categoria, coalesce(cd_categoria_p, coalesce(cd_categoria_w,'0'))) = coalesce(cd_categoria_p, coalesce(cd_categoria_w,'0'))
and (coalesce(qt_material_p,0) >= 0) -- OS 430392
and	coalesce(cd_perfil,coalesce(cd_perfil_w,0))	= coalesce(cd_perfil_w,0)
--and 	((ie_cobertura_w = 'N') or ((ie_cobertura_w = 'S') and (nvl(nr_seq_cobertura,nvl(nr_seq_cobertura_w,0)) = nvl(nr_seq_cobertura_w,0))))
and	((coalesce(nr_seq_estrutura::text, '') = '') or (consistir_se_mat_estrut_vig(nr_seq_estrutura,cd_material_w, clock_timestamp()) = 'S'))
and 	coalesce(ie_tipo_material, coalesce(ie_tipo_material_w, '0')) = coalesce(ie_tipo_material_w, '0')
and	coalesce(ie_classificacao, coalesce(ie_classificacao_w, '0')) = coalesce(ie_classificacao_w, '0')
order by
	CASE WHEN ds_action_w='OPMENEXO' THEN coalesce(cd_perfil,0)  ELSE 0 END ,
	coalesce(ds_mascara_carteira, 'X'),
	coalesce(cd_material, 0),
	coalesce(cd_classe_material, 0),
	coalesce(cd_subgrupo_material, 0),
	coalesce(cd_grupo_material, 0),
	coalesce(nr_seq_familia, 0),
	coalesce(ie_tipo_material, '0'),
	coalesce(cd_tipo_acomodacao,	0),
	CASE WHEN ds_action_w='OPMENEXO' THEN 0  ELSE coalesce(cd_perfil,0) END ,
	coalesce(cd_setor_atendimento, 0),
	coalesce(cd_classif_setor, 'X'),
	coalesce(cd_categoria, '0'),
	coalesce(ie_tipo_atendimento, 0),
	coalesce(ie_carater_inter_sus, 'X'),
	coalesce(ie_clinica, 0),
	coalesce(cd_empresa_conv, 0),
	coalesce(nr_seq_estrutura, 0);

/*Cursor	c02 is
	select 	b.nr_sequencia
	from 	convenio_cobertura_regra a,
		convenio_cobertura b
	where 	b.nr_sequencia = a.nr_seq_cobertura
	and 	b.cd_convenio = cd_convenio_p
	and 	ie_cobertura_w = 'S'
	and 	nvl(ie_tipo_atendimento, nvl(nvl(ie_tipo_atendimento_p,ie_tipo_atendimento_w),0)) = nvl(nvl(ie_tipo_atendimento_p,ie_tipo_atendimento_w),0)
	and 	nvl(cd_plano, nvl(cd_plano_p,'0')) = nvl(cd_plano_p,'0')
	and 	nvl(a.ie_situacao,'A') = 'A'
	order by nvl(ie_tipo_atendimento,0),
		nvl(cd_plano,'0'),
		a.nr_seq_cobertura;*/
BEGIN

DBMS_APPLICATION_INFO.READ_MODULE(ds_modulo_w, ds_action_w);

cd_material_w	:= cd_material_p;
cd_material_ww	:= cd_material_p;

/*lhalves OS 219697 em 01/06/2010*/

ie_consignado_w	:= Obter_se_mat_Consignado(cd_material_w);

ie_cobertura_w		:= 'N';

/*select 	nvl(max(ie_cobertura),'N')
into	ie_cobertura_w
from 	convenio
where 	cd_convenio = cd_convenio_p;*/
select	count(*)
into STRICT	cont_w
from	regra_Convenio_Plano_mat
where	cd_convenio	= cd_convenio_p;

if (cont_w > 0) then

	select	coalesce(max(ie_autor_generico),'N'),
		coalesce(max(ie_atual_qt_solic_autor),'N')
	into STRICT	ie_autor_generico_w,
		ie_atual_qt_solic_autor_w
	from	convenio_estabelecimento
	where	cd_convenio		= cd_convenio_p
	and	cd_estabelecimento	= cd_estabelecimento_p;


	select	coalesce(max(ie_gerar_saldo_itens_autor),'N')
	into STRICT	ie_gerar_saldo_itens_autor_w
	from	parametro_faturamento
	where	cd_estabelecimento = cd_estabelecimento_p;

	if (ie_autor_generico_w = 'S') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
		cd_material_validacao_w	:= obter_material_generico(cd_material_w);
	end if;

	select	coalesce(max(cd_material_estoque),0),
		coalesce(max(ie_tipo_material),'0')
	into STRICT	cd_material_estoque_w,
		ie_tipo_material_w
	from	material
	where	cd_material 		= cd_material_w;

	select	coalesce(max(cd_classif_setor),'X')
	into STRICT	cd_classif_setor_w
	from	setor_atendimento
	where	cd_setor_atendimento	= cd_setor_atendimento_p;

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then

		select	coalesce(max(ie_tipo_atendimento),0),
			coalesce(max(cd_estabelecimento),0),
			coalesce(max(ie_carater_inter_sus),0),
			coalesce(max(ie_clinica),0),
			coalesce(max(obter_cid_atendimento(nr_atendimento,'P')),'X'),
			max(nr_seq_classificacao)
		into STRICT	ie_tipo_atendimento_w,
			cd_estabelecimento_w,
			ie_carater_inter_sus_w,
			ie_clinica_w,
			cd_doenca_atend_w,
			nr_seq_classif_atend_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_p;

		select	max(cd_categoria),
			coalesce(max(cd_tipo_acomodacao),0),
			max(cd_usuario_convenio),
			max(cd_empresa)
		into STRICT	cd_categoria_w,
			cd_tipo_acomodacao_w,
			cd_usuario_convenio_w,
			cd_empresa_conv_w
		from	atend_categoria_convenio
		where	nr_atendimento	= nr_atendimento_p
		and	cd_convenio	= cd_convenio_p
		and	obter_atecaco_atendimento(nr_atendimento)	= nr_seq_interno;

	elsif (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then

		select	coalesce(max(a.ie_tipo_atendimento),0),
			coalesce(max(b.cd_estabelecimento),0),
			coalesce(max(a.cd_categoria),0),
			coalesce(max(a.cd_tipo_acomodacao),0),
			max(a.cd_usuario_convenio)
		into STRICT	ie_tipo_atendimento_w,
			cd_estabelecimento_w,
			cd_categoria_w,
			cd_tipo_acomodacao_w,
			cd_usuario_convenio_w
		from	agenda b,
			agenda_paciente a
		where	a.cd_agenda	= b.cd_agenda
		and	a.nr_sequencia	= nr_seq_agenda_p;
	end if;


	/* Obter Estrutura do material */

	begin
	select	cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material,
		nr_seq_familia
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w,
		nr_seq_familia_w
	from	Estrutura_material_v
	where	cd_material	 	= coalesce(cd_material_w,0)
	and	(cd_material_w IS NOT NULL AND cd_material_w::text <> '');
	exception when others then
		begin
		cd_grupo_material_w	:= 0;
		cd_subgrupo_material_w	:= 0;
		cd_classe_material_w	:= 0;
		nr_seq_familia_w	:= 0;
	end;
	end;

	-- Cobertura

	/*nr_seq_cobertura_w:= 0;
	open C02;
	loop
	fetch C02 into
		nr_seq_cobertura_w;
	exit when C02%notfound;
		begin
		nr_seq_cobertura_w:=  nr_seq_cobertura_w;
		end;
	end loop;
	close C02;*/
	select	coalesce(max(cd_simpro), 0)
	into STRICT	cd_simpro_w
	from	material_simpro
	where	nr_sequencia	= nr_seq_mat_simpro_p;

	select	coalesce(max(ie_classificacao), '0')
	into STRICT	ie_classificacao_w
	from	simpro_preco
	where	cd_simpro	= cd_simpro_w;

	open c01;
	loop
	fetch c01 into
		ie_regra_w,
		ie_valor_w,
		vl_material_min_w,
		vl_material_max_w,
		nr_seq_regra_w,
		qt_minima_w,
		qt_maxima_w,
		ie_mat_conta_w,
		ie_valor_dia_w,
		ie_valor_unitario_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		ie_regra_w	:= ie_regra_w;

		/*if (ie_autor_generico_w = 'S') then
			cd_material_w := cd_material_ww;
		end if;*/
		if (ie_valor_w in ('S','F')) then
			/* Francisco - OS 74123 - 12/11/07 - Com a function de antes nao buscava o preco correto conforme a consuolta preco
			troquei "obter_preco_mat_conv(cd_estabelecimento_w, cd_convenio_p,cd_categoria_w,cd_material_w,sysdate) pela proc abaixo */
			select	max(CASE WHEN coalesce(ie_mat_conta_w,'N')='N' THEN  cd_material_w  ELSE obter_material_conta(cd_estabelecimento_p, cd_convenio_p, coalesce(cd_categoria_p, cd_categoria_w), cd_material_w, cd_material_w, cd_material_w, cd_plano_p, cd_setor_atendimento_p, clock_timestamp(), 0, 0) END )
			into STRICT	cd_material_preco_w
			;

			-- dsantos em 25/03/2010, OS 203809. acompanhado por Ricardo, autorizado por Marcus.
			if (coalesce(cd_categoria_p,0) = 0) and (coalesce(cd_categoria_w,0) = 0) then
				select	min(cd_categoria)
				into STRICT	cd_categoria_w
				from	categoria_convenio
				where	cd_convenio	= cd_convenio_p
				and	ie_situacao	= 'A';
			end if;

			SELECT * FROM define_preco_material(	coalesce(cd_estabelecimento_p,cd_estabelecimento_w), 		-- cd_estabelecimento_p		number,
						cd_convenio_p,                                           -- cd_convenio_p          	number,
						coalesce(cd_categoria_p,cd_categoria_w),                      -- cd_categoria_p         	varchar2,
						clock_timestamp(),                                                 -- dt_vigencia_p          	date,
						cd_material_preco_w,                                     -- cd_material_p          	number,
						coalesce(cd_tipo_acomodacao_w,cd_tipo_acomodacao_p),          -- cd_tipo_acomodacao_p   	number,
						coalesce(ie_tipo_atendimento_p,ie_tipo_atendimento_w), 	-- ie_tipo_atendimento_p  	number,
						0,                                                       -- cd_setor_atendimento_p 	number,
						cd_cgc_p,                                                -- cd_cgc_fornecedor_p		varchar2,
						0,                                                       -- qt_idade_p			number,
						0,                                                       -- nr_sequencia_p		number,
						cd_plano_p,                                              -- cd_plano_p			varchar2,
						null,                                                    -- cd_proc_referencia_p		number,
						null,                                                    -- ie_origem_proc_p		number,
						null,                                                    -- nr_seq_marca_p		number,
						null,                                                    -- ie_clinica_p			number,
						nr_seq_classif_atend_w,                                  -- nr_seq_classif_atend_p	number,
						nr_atendimento_p, 					-- nr_atendimento_p		number,
						null,                                                    -- ie_vago_4_p			varchar2,
						vl_referencia_w,                                         -- vl_material_p      	 out 	number,
						dt_ult_vigencia_w,                                       -- dt_ult_vigencia_p  	 out 	date,
						cd_tab_preco_mat_w,                                      -- cd_tab_preco_mat_p 	 out 	number,
						ie_origem_preco_w,                                       -- ie_origem_preco_p  	 out 	number,
						nr_seq_bras_preco_w,                                     -- nr_seq_bras_preco_p	 out	number,
						nr_seq_mat_bras_w,                                       -- nr_seq_mat_bras_p	 out	number,
						nr_seq_conv_bras_w,                                      -- nr_seq_conv_bras_p	 out	number,
						nr_seq_conv_simpro_w,                                    -- nr_seq_conv_simpro_p	 out	number,
						nr_seq_mat_simpro_w,                                     -- nr_seq_mat_simpro_p	 out	number,
						nr_seq_simpro_preco_w,                                   -- nr_seq_simpro_preco_p out	number,
						nr_seq_ajuste_mat_w) INTO STRICT 
						vl_referencia_w, 
						dt_ult_vigencia_w, 
						cd_tab_preco_mat_w, 
						ie_origem_preco_w, 
						nr_seq_bras_preco_w, 
						nr_seq_mat_bras_w, 
						nr_seq_conv_bras_w, 
						nr_seq_conv_simpro_w, 
						nr_seq_mat_simpro_w, 
						nr_seq_simpro_preco_w, 
						nr_seq_ajuste_mat_w;                                   -- nr_seq_ajuste_mat_p	 out	number
		end if;

		select	CASE WHEN qt_material_p=0 THEN 1  ELSE qt_material_p END
		into STRICT	qt_material_w
		;

		if (coalesce(ie_valor_unitario_w,'N') = 'S') then
			qt_material_w	:= 1;
		end if;

		if (coalesce(ie_valor_dia_w,'N') = 'N') then

			if (ie_valor_w = 'S') then		-- se consiste valor
				if	((coalesce(qt_material_w,1) * vl_referencia_w) between vl_material_min_w and vl_material_max_w) then
					ie_regra_w	:= null;
					nr_seq_regra_w	:= null;
				end if;
			elsif (ie_valor_w = 'F') then -- Francisco - 10/04/07 - Aplicar regra quando esta na faixa de valores
				if	not((coalesce(qt_material_w,1) * vl_referencia_w) between vl_material_min_w and vl_material_max_w) then
					ie_regra_w	:= null;
					nr_seq_regra_w	:= null;
				end if;
			end if;
		elsif (coalesce(ie_valor_dia_w,'N') = 'S')and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then


			begin
			select	coalesce(sum(vl_material),0)
			into STRICT	vl_referencia_conta_w
			from	material_atend_paciente
			where	cd_material = cd_material_w
			and	nr_atendimento = nr_atendimento_p
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_atendimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
			and	coalesce(cd_motivo_exc_conta::text, '') = '';
			exception
			when others then
				vl_referencia_conta_w := 0;
			end;

			if (ie_valor_w = 'S') then

				if	(((coalesce(qt_material_w,1) * vl_referencia_w) + vl_referencia_conta_w) between vl_material_min_w and vl_material_max_w) then
					ie_regra_w	:= null;
					nr_seq_regra_w	:= null;
				end if;
			elsif (ie_valor_w = 'F') then

				if	not(((coalesce(qt_material_w,1) * vl_referencia_w) + vl_referencia_conta_w) between vl_material_min_w and vl_material_max_w) then
					ie_regra_w	:= null;
					nr_seq_regra_w	:= null;
				end if;
			end if;
		end if;

	end loop;
	close c01;

	/* Bloqueio Atendimento (Quando a Chamada e no Atendimento: Proc = null) */

	if (ie_regra_w in (1,2)) then
		begin
		ds_retorno_w 		:=  substr(wheb_mensagem_pck.get_texto(304184),1,255); -- Este material nao e autorizado para este convenio
		ie_bloqueia_agenda_w	:= 'S';
		end;
	/* Libera com Autorizacao */

	elsif (ie_regra_w = 3) then
		ds_retorno_w 		:= substr(wheb_mensagem_pck.get_texto(304187),1,255); -- Este material deve ter autorizacao especial


		/* Francisco - OS 103531 - 06/08/2008 - Tratar qt autorizada/utilizada */

		if (ie_atual_qt_solic_autor_w = 'S') and (ie_gerar_saldo_itens_autor_w = 'S')then
			ie_regra_w := 3;
			ds_retorno_w := substr(wheb_mensagem_pck.get_texto(304187),1,255); -- Este material deve ter autorizacao especial
		end if;

		SELECT * FROM consiste_autorizacao_mat(nr_atendimento_p, cd_convenio_p, dt_atendimento_p, cd_material_w, qt_material_p, null, ds_aviso_w, ds_erro_autor_w, nr_prescricao_p, nr_seq_prescricao_p) INTO STRICT ds_aviso_w, ds_erro_autor_w;

		if (coalesce(ds_erro_autor_w::text, '') = '') then
			ie_regra_w	:= null;
			ds_retorno_w	:= null;
		end if;

		/* Tratar qtd min e max - OS 118922 */

		if (qt_minima_w > 0) or (qt_maxima_w < 999) then
			select	coalesce(sum(qt_material),0)
			into STRICT	qt_utilizada_w
			from	material_atend_paciente
			where	nr_atendimento 		= nr_atendimento_p
			and	cd_convenio		= cd_convenio_p
			and	cd_material		= cd_material_w
			and	coalesce(cd_motivo_exc_conta::text, '') = '';

			if (qt_utilizada_w + coalesce(qt_material_p,1) < qt_minima_w) or (qt_utilizada_w + coalesce(qt_material_p,1) > qt_maxima_w) then
				ie_regra_w	:= null;
				ds_retorno_w	:= null;
			end if;
		end if;

		/* Fim 26/01/2009 */



	/* Bloqueio previstos na cirurgia */

	elsif (ie_regra_w = 5) then
		ds_retorno_w 		:= substr(wheb_mensagem_pck.get_texto(304184),1,255); -- Este material nao e autorizado para este convenio

	/* Bloqueia sem autorizacao */

	elsif (ie_regra_w = 8) then
		SELECT * FROM consiste_autorizacao_mat(nr_atendimento_p, cd_convenio_p, dt_atendimento_p, cd_material_w, qt_material_p, null, ds_aviso_w, ds_erro_autor_w, nr_prescricao_p, nr_seq_prescricao_p) INTO STRICT ds_aviso_w, ds_erro_autor_w;

		if (coalesce(ds_erro_autor_w::text, '') = '') then
			ie_regra_w	:= null;
		else
			ie_bloqueia_agenda_w	:= 'S';
		end if;

		ds_retorno_w	:= ds_retorno_w || ds_erro_autor_w || ds_aviso_w;

		/* Tratar qtd min e max - OS 118922 */

		if (qt_minima_w > 0) or (qt_maxima_w < 999) then
			select	coalesce(sum(qt_material),0)
			into STRICT	qt_utilizada_w
			from	material_atend_paciente
			where	nr_atendimento 		= nr_atendimento_p
			and	cd_convenio		= cd_convenio_p
			and	cd_material		= cd_material_w
			and	coalesce(cd_motivo_exc_conta::text, '') = '';

			if (qt_utilizada_w + coalesce(qt_material_p,1) < qt_minima_w) or (qt_utilizada_w + coalesce(qt_material_p,1) > qt_maxima_w) then
				ie_regra_w		:= null;
				ds_retorno_w		:= null;
				ie_bloqueia_agenda_w	:= 'N';
			end if;
		end if;

	/* Bloqueia atendimento consistindo quantidade */

	elsif (ie_regra_w = 9) then

		ds_retorno_w := null;

		if (qt_minima_w > 0) or (qt_maxima_w < 999) then
			select	coalesce(sum(qt_material),0)
			into STRICT	qt_utilizada_w
			from	material_atend_paciente
			where	nr_atendimento 		= nr_atendimento_p
			and	cd_convenio		= cd_convenio_p
			and	cd_material		= cd_material_w
			and	coalesce(cd_motivo_exc_conta::text, '') = '';

			if (qt_utilizada_w + coalesce(qt_material_p,1) < qt_minima_w) or (qt_utilizada_w + coalesce(qt_material_p,1) > qt_maxima_w) then
				ds_material_w := substr(obter_desc_material(cd_material_w),1,200);
				-- O material #@CD_MATERIAL_P#@ - #@DS_MATERIAL_P#@ superou a quantidade permitida pelo convenio!
				ds_retorno_w := substr(wheb_mensagem_pck.get_texto(304188,'CD_MATERIAL_P='|| cd_material_w ||';DS_MATERIAL_P='|| ds_material_w ),1,255);
			end if;
		end if;

	end if;

end if;

ie_regra_p		:= ie_regra_w;
nr_seq_regra_p		:= nr_seq_regra_w;
ds_retorno_p		:= ds_retorno_w;
ie_bloqueia_agenda_p	:= ie_bloqueia_agenda_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_mat_plano_convenio ( cd_convenio_p bigint, cd_plano_p text, cd_material_p bigint, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, ds_retorno_p INOUT text, ie_bloqueia_agenda_p INOUT text, ie_regra_p INOUT text, nr_seq_regra_p INOUT bigint, qt_material_p bigint, dt_atendimento_p timestamp, nr_seq_agenda_p bigint, cd_estabelecimento_p bigint, cd_categoria_p text, ie_tipo_atendimento_p text, cd_tipo_acomodacao_p bigint default null, nr_prescricao_p bigint default null, nr_seq_prescricao_p bigint default null, cd_cgc_p text default null, nr_seq_mat_simpro_p bigint default null) FROM PUBLIC;

