-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_titulo_pagar_repasse ( nr_repasse_terceiro_p bigint, nm_usuario_p text, ds_lista_tit_rec_p text) AS $body$
DECLARE


cd_estab_financeiro_w			smallint;
cd_estabelecimento_w			smallint;
dt_vencimento_w				timestamp;
dt_vencimento_orig_w			timestamp;
dt_maior_vencimento_w			timestamp;
dt_emissao_w				timestamp;
vl_vencimento_w				double precision;
vl_total_vencimento_w			double precision;
VL_IMPOSTO_MUNIC_w			double precision;
cd_cgc_w				varchar(14);
cd_pessoa_fisica_w			varchar(10);
ie_rpa_w				varchar(10);
nr_titulo_w				bigint;
nr_titulo_origem_w			bigint;
nr_sequencia_w	        		bigint;
nr_seq_classif_w	       	 	bigint;
nr_sequencia_ref_w        		bigint;
tx_juros_w				double precision;
tx_multa_w				double precision;
tx_desc_antecipacao_w			double precision;
cd_conta_contabil_w			varchar(20);
cd_centro_custo_w			integer;
cd_conta_financ_terc_w			bigint;
cd_conta_financ_rep_w			bigint;
NR_SEQ_TRANS_FIN_TIT_w			bigint;
vl_ir_w					double precision;
vl_total_rep_w				double precision;
ds_erro_w				varchar(4000);
ie_tipo_titulo_pf_w			varchar(255);
cd_condicao_pagto_w			integer;
cd_cond_pg_w				integer;
ds_observacao_w				varchar(255);
ds_irrelevante_w			varchar(255);
nr_seq_rpa_w				bigint;
vl_liquido_venc_w			double precision;
nr_seq_trans_reg_trib_tit_w		bigint;
nr_seq_trans_baixa_trib_tit_w		bigint;
nr_seq_trans_baixa_trib_ir_w		bigint;
nr_seq_trans_reg_trib_ie_w		bigint;
nr_pis_pasep_w				varchar(11);	

/* Falta Obter a Informacao  */

cd_moeda_w				parametros_contas_pagar.cd_moeda_padrao%type;
cd_tipo_taxa_juro_w			bigint;	
cd_tipo_taxa_multa_w        		bigint;

cd_tributo_w				smallint;
dt_imposto_w				timestamp;
vl_base_calculo_w			double precision;
vl_tributo_w				double precision;
pr_imposto_w				Titulo_Pagar_imposto.pr_imposto%type;

/* Campos IR */

cd_beneficiario_ir_w		varchar(14);
cd_tributo_ir_w				smallint;
cd_conta_contabil_ir_w		varchar(20);
nr_seq_conta_fin_ir_w		bigint;
ie_vencimento_ir_w			varchar(1);
nr_seq_baixa_repasse_w		bigint;
nr_seq_imposto_w			bigint;	

/* Campos tributos */

cd_conta_financ_trib_w			bigint;
nr_seq_trans_reg_w			bigint;
nr_seq_trans_baixa_w			bigint;
ie_gerar_cp_w				varchar(01);
cd_beneficiario_trib_w			varchar(14);
vl_nao_retido_w				double precision;
ie_vencimento_w				varchar(01);

VL_BASE_NAO_RETIDO_w			double precision;
VL_TRIB_ADIC_w				double precision;
VL_BASE_ADIC_w				double precision;
vl_baixa_w				double precision := 0;
nr_seq_titulo_w				bigint;
cd_tipo_baixa_padrao_w			bigint;
cd_tipo_receb_terceiro_w		bigint;
vl_total_baixa_tit_rec_w		double precision := 0;
nr_tit_rec_w				bigint;
nr_seq_trans_baixa_terc_w		bigint;
vl_saldo_tit_rec_w			double precision := 0;
vl_total_saldo_tit_rec_w		double precision := 0;
cd_variacao_w				varchar(2);
ie_periodicidade_w			varchar(1);
IE_DT_CONTAB_TIT_REP_w			varchar(100);

vl_total_classif_w			double precision;
cd_conta_financ_item_w			bigint;
vl_item_w				double precision;
dt_mesano_referencia_w			timestamp;
nr_seq_trans_fin_baixa_w		bigint;
nr_seq_trans_fin_abat_cp_w		bigint;
cd_tipo_baixa_abatimento_w	integer;
ie_dt_emissao_w			varchar(255);
nr_seq_trans_tipo_repasse_w		bigint;
nr_seq_tipo_repasse_w			bigint;
cd_empresa_w			bigint := null;
nr_seq_trans_contab_repasse_w		bigint;
vl_adiantamento_w			double precision;
ie_abater_tit_rec_parcial_w		varchar(1);
vl_total_liq_venc_w			double precision;
cd_centro_custo_item_w			integer;
ie_centro_custo_item_w			varchar(1);
nr_seq_liq_w				bigint;
ie_titulo_pessoa_pis_w			varchar(1);
ie_sempre_imposto_w			varchar(1);
ie_gerar_titulo_vencido_w		varchar(1);
nr_titulo_repasse_w			bigint;
count_w					bigint;
ie_liberar_tit_pagar_imposto_w		parametros_contas_pagar.ie_liberar_tit_pagar_imposto%type;
vl_dia_antecipacao_w			repasse_terceiro_item.vl_dia_antecipacao%type;
vl_repasse_w				double precision;
vl_desconto_w				double precision;
ie_conta_contab_tit_trib_w		parametros_contas_pagar.ie_conta_contab_tit_trib%type;
cd_conta_cont_trib_w			conta_contabil.cd_conta_contabil%type;
cd_conta_financ_tipo_w			tipo_repasse.cd_conta_financ%type;
vl_outros_acrescimos_w			repasse_terceiro_item.vl_outros_acrescimos%type;
nr_seq_trib_cp_w			Titulo_Pagar_imposto.nr_seq_trib_cp%type;
nr_seq_classe_titulo_pagar_w  		tipo_repasse.nr_seq_classe_titulo_pagar%type;
nr_seq_tipo_w                         	titulo_pagar.nr_seq_classe%type;
cd_darf_w				TRIBUTO_CONTA_PAGAR.cd_darf%type;
reg_integracao_w			gerar_int_padrao.reg_integracao;
ie_trib_atualiza_saldo_w		parametros_contas_pagar.ie_trib_atualiza_saldo%type;
ie_saldo_tit_pagar_w			tributo.ie_saldo_tit_pagar%type;
ie_atualiza_saldo_titulo_w		varchar(1);
nr_titulo_atualizacao_w			titulo_pagar.nr_titulo%type;
ie_ctb_online_w				ctb_param_lote_tit_repasse.ie_ctb_online%type;

C010 CURSOR FOR
SELECT 	a.cd_estabelecimento,
	a.cd_condicao_pagamento,
	b.nr_sequencia,
	b.dt_vencimento,
	coalesce(b.vl_liquido, (b.vl_vencimento - coalesce(vl_ir,0) - coalesce(b.VL_IMPOSTO_MUNIC,0))),
	c.cd_cgc,
	c.cd_pessoa_fisica,
	b.vl_ir,
	b.VL_IMPOSTO_MUNIC,
	coalesce(c.cd_conta_financ, cd_conta_financ_rep_w),
	c.cd_conta_contabil,
	a.ds_observacao,
	a.dt_mesano_referencia,
	obter_se_trans_financ_ativa(c.nr_seq_trans_fin_baixa),
	c.NR_SEQ_TRANS_FIN_TIT,
	c.cd_centro_custo
from 	terceiro c,
	Repasse_terceiro_venc b,
	Repasse_terceiro a
where 	a.nr_repasse_terceiro	= nr_repasse_terceiro_p
and	a.nr_repasse_terceiro	= b.nr_repasse_terceiro
and	a.nr_seq_terceiro	= c.nr_sequencia
and	(a.dt_aprovacao_terceiro IS NOT NULL AND a.dt_aprovacao_terceiro::text <> '')
and	coalesce(b.nr_titulo::text, '') = '';

C040 CURSOR FOR
SELECT	a.cd_tributo,
	a.dt_imposto,
	sum(coalesce(vl_base_calculo,0)),
	sum(coalesce(a.vl_imposto,0)),
	dividir(sum(coalesce(a.vl_imposto,0)), sum(coalesce(vl_base_calculo,0))) pr_imposto,
	a.cd_conta_financ,
	a.nr_seq_trans_reg,
	a.nr_seq_trans_baixa,	
	b.ie_gerar_titulo_pagar,
	cd_beneficiario,
	sum(coalesce(vl_nao_retido,0)),
	max(ie_vencimento) ie_vencimento,
	sum(coalesce(a.VL_BASE_NAO_RETIDO,0)),
	sum(coalesce(a.VL_TRIB_ADIC,0)),
	sum(coalesce(a.VL_BASE_ADIC,0)),
	b.ie_saldo_tit_pagar
from	Tributo b,
	Repasse_terc_venc_trib a
where	nr_seq_rep_venc	= nr_sequencia_w
and	a.cd_tributo		= b.cd_tributo
and	a.ie_pago_prev		= 'V'
and	b.ie_conta_pagar	= 'S'	
group	by 	a.cd_tributo,
		a.dt_imposto,
		a.cd_conta_financ,
		a.nr_seq_trans_reg,
		a.nr_seq_trans_baixa,	
		b.ie_gerar_titulo_pagar,
		cd_beneficiario,
		b.ie_saldo_tit_pagar;

c05 CURSOR FOR
SELECT	nr_titulo,
	vl_saldo_titulo
from	titulo_receber
where	' ' || ds_lista_tit_rec_p || ' ' like '% ' || nr_titulo || ' %';

c06 CURSOR FOR
SELECT	cd_conta_financ,
	cd_centro_custo,
	coalesce(sum(vl_repasse),0) vl_repasse
from	(SELECT	a.cd_conta_financ,
		CASE WHEN ie_centro_custo_item_w='S' THEN a.cd_centro_custo WHEN ie_centro_custo_item_w='T' THEN a.cd_centro_custo  ELSE null END  cd_centro_custo,
		a.vl_repasse
	from	repasse_terceiro_item a
	where	((a.cd_conta_financ IS NOT NULL AND a.cd_conta_financ::text <> '') or ((ie_centro_custo_item_w = 'S' or ie_centro_custo_item_w = 'T') AND a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''))
	and	a.nr_repasse_terceiro	= nr_repasse_terceiro_p
	
union	all

	select	null cd_conta_financ,
		c.cd_centro_custo,
		a.vl_liberado vl_repasse
	from	setor_atendimento c,
		procedimento_paciente b,
		procedimento_repasse a
	where	(c.cd_centro_custo IS NOT NULL AND c.cd_centro_custo::text <> '')
	and	b.cd_setor_atendimento	= c.cd_setor_atendimento
	and	a.nr_seq_procedimento	= b.nr_sequencia
	and	a.nr_repasse_terceiro	= nr_repasse_terceiro_p
	and	ie_centro_custo_item_w	= 'T'
	
union	all

	select	null cd_conta_financ,
		c.cd_centro_custo,
		a.vl_liberado vl_repasse
	from	setor_atendimento c,
		material_atend_paciente b,
		material_repasse a
	where	(c.cd_centro_custo IS NOT NULL AND c.cd_centro_custo::text <> '')
	and	b.cd_setor_atendimento	= c.cd_setor_atendimento
	and	a.nr_seq_material	= b.nr_sequencia
	and	a.nr_repasse_terceiro	= nr_repasse_terceiro_p
	and	ie_centro_custo_item_w	= 'T') alias8
group by	cd_conta_financ,
	cd_centro_custo,
	vl_repasse;	
	

BEGIN

select	cd_estabelecimento,
	nr_seq_tipo
into STRICT	cd_estabelecimento_w,
	nr_seq_tipo_repasse_w
from	repasse_terceiro
where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

ie_abater_tit_rec_parcial_w := obter_param_usuario(89, 106, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_abater_tit_rec_parcial_w);
ie_centro_custo_item_w := obter_param_usuario(89, 108, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_centro_custo_item_w);
ie_titulo_pessoa_pis_w := obter_param_usuario(89, 129, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_titulo_pessoa_pis_w);
ie_gerar_titulo_vencido_w := obter_param_usuario(89, 162, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_titulo_vencido_w);

select	coalesce(sum(a.vl_repasse),0)
into STRICT	vl_adiantamento_w
from	repasse_terceiro_item a
where	(a.nr_adiant_pago IS NOT NULL AND a.nr_adiant_pago::text <> '')
and	a.nr_repasse_terceiro	= nr_repasse_terceiro_p;

select	coalesce(sum(a.vl_dia_antecipacao),0),
	coalesce(sum(a.vl_outros_acrescimos),0)
into STRICT	vl_dia_antecipacao_w,
	vl_outros_acrescimos_w
from	repasse_terceiro_item a
where	a.nr_repasse_terceiro	= nr_repasse_terceiro_p;

select	obter_valor_repasse(nr_repasse_terceiro_p,'R') vl_repasse
into STRICT	vl_repasse_w
;

select	obter_se_trans_financ_ativa(max(NR_SEQ_TRANS_FIN_BAIXA)),
	max(cd_conta_financ)
into STRICT	nr_seq_trans_tipo_repasse_w,
	cd_conta_financ_tipo_w
from	tipo_repasse
where	nr_sequencia = nr_seq_tipo_repasse_w
and	ie_situacao = 'A';

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(cd_conta_financ_rep),1)
into STRICT	cd_conta_financ_rep_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(ie_rpa), 'N'),
	max(nr_seq_trans_fin_abat_cp)
into STRICT	ie_rpa_w,
	nr_seq_trans_fin_abat_cp_w
from	parametro_repasse
where	cd_estabelecimento	= cd_estabelecimento_w;

begin
select 	cd_beneficiario_ir,
	coalesce(cd_tributo_ir,10),
	cd_conta_contabil_ir,
	nr_seq_conta_fin_ir,
	ie_vencimento_ir,
	obter_se_trans_financ_ativa(nr_seq_trans_baixa_rep),
	coalesce(IE_DATA_CONTAB_TIT_REP, 'A'),
	coalesce(ie_conta_contab_tit_trib,'T'),
	cd_moeda_padrao,
	coalesce(ie_trib_atualiza_saldo,'S')
into STRICT	cd_beneficiario_ir_w,
	cd_tributo_ir_w,
	cd_conta_contabil_ir_w,
	nr_seq_conta_fin_ir_w,
	ie_vencimento_ir_w,
	nr_seq_baixa_repasse_w,
	IE_DT_CONTAB_TIT_REP_w,
	ie_conta_contab_tit_trib_w,
	cd_moeda_w,
	ie_trib_atualiza_saldo_w
from 	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;
exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(185640);
		--'Erro na busca dos parametros do contas a pagar');
end;

if (coalesce(cd_moeda_w,-1) = -1) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(391126);
end if;

if (coalesce(cd_tributo_ir_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(185640);
	--'Erro na busca dos parametros do contas a pagar');
end if;

vl_ir_w			:= 0;

ie_dt_emissao_w		:= obter_valor_param_usuario(89, 66, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_tipo_titulo_pf_w	:= obter_valor_param_usuario(89, 84, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);

if (coalesce(ie_dt_emissao_w,'N') = 'S') then
	select	max(a.dt_mesano_referencia)
	into STRICT	dt_emissao_w
	from	Repasse_terceiro a
	where 	a.nr_repasse_terceiro	= nr_repasse_terceiro_p;
else
	dt_emissao_w		:= clock_timestamp();
end if;

select	obter_valor_repasse(nr_repasse_terceiro,'L')
into STRICT	vl_total_rep_w
from	repasse_terceiro
where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

select	coalesce(sum(vl_vencimento),0),
	coalesce(sum(vl_liquido),0),
	sum(coalesce(vl_liquido, (vl_vencimento - coalesce(vl_ir,0) - coalesce(VL_IMPOSTO_MUNIC,0))))
into STRICT	vl_total_vencimento_w,
	vl_liquido_venc_w,
	vl_total_liq_venc_w
from	repasse_terceiro_venc
where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

if	(vl_total_rep_w <> (vl_total_vencimento_w + vl_adiantamento_w)) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(185641);
	--'O valor de repasse e diferente do valor dos vencimentos');
end if;

select	coalesce(sum(vl_saldo_titulo),0)
into STRICT	vl_total_saldo_tit_rec_w
from	titulo_receber
where	' ' || ds_lista_tit_rec_p || ' ' like '% ' || nr_titulo || ' %';

if (coalesce(ie_abater_tit_rec_parcial_w,'N') = 'N') and (vl_total_saldo_tit_rec_w > vl_total_vencimento_w) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(185642);
	--'O valor dos titulos a receber selecionados supera o valor do repasse!');
end if;

if (vl_total_saldo_tit_rec_w > 0) then

	select	coalesce(max(cd_tipo_receb_terceiro), 0),
		max(nr_seq_trans_baixa_terc)
	into STRICT	cd_tipo_receb_terceiro_w,
		nr_seq_trans_baixa_terc_w
	from	parametro_contas_receber
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (cd_tipo_receb_terceiro_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(185643);
		-- 'O tipo de recebimento padrao de terceiros nao esta cadastrato!' || chr(13) ||'Verifique os parametros do contas a receber.');
	end if;

	select	coalesce(max(cd_tipo_baixa_padrao),0)
	into STRICT	cd_tipo_baixa_padrao_w
	from	PARAMETROS_CONTAS_PAGAR
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (cd_tipo_baixa_padrao_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(185644);
		--'O tipo de baixa padrao de titulo a pagar nao esta cadastrato!' || chr(13) ||'Verifique os parametros do contas a pagar.');
	end if;

end if;

if (vl_total_saldo_tit_rec_w > vl_total_liq_venc_w) then
	vl_total_saldo_tit_rec_w	:= vl_total_liq_venc_w;
end if;

-- Edgar 15/07/2006 oS 34264, fiz rotina de baixa de titulo a receber do terceiro 

-- qdo o mesmo foi gerado pelo controle de terceiros
open c05;
loop
fetch c05 into
	nr_tit_rec_w,
	vl_saldo_tit_rec_w;
EXIT WHEN NOT FOUND; /* apply on c05 */


	if (vl_total_saldo_tit_rec_w > 0) then

		if (vl_total_saldo_tit_rec_w > vl_saldo_tit_rec_w) then
			vl_baixa_w	:= vl_saldo_tit_rec_w;
		else
			vl_baixa_w	:= vl_total_saldo_tit_rec_w;
		end if;

		-- Edgar 05/04/2011, OS 296134, tratar para que o valor da baixa do titulo a receber nao supere o valor dos vencimentos do repasse
		if (vl_baixa_w > vl_liquido_venc_w) then
			vl_baixa_w	:= vl_liquido_venc_w;
		end if;

		CALL Baixa_Titulo_Receber(	cd_estabelecimento_w,
					cd_tipo_receb_terceiro_w,
					nr_tit_rec_w,
					nr_seq_trans_baixa_terc_w,
					vl_baixa_w,
					clock_timestamp(),
					nm_usuario_p,
					null,
					null,
					null,
					0,
					0);

		CALL Atualizar_Saldo_Tit_Rec(nr_tit_rec_w, nm_usuario_p);

		select	max(nr_sequencia)
		into STRICT	nr_seq_titulo_w
		from	titulo_receber_liq
		where	nr_titulo	= nr_tit_rec_w;

		update	titulo_receber_liq
		set	nr_repasse_terceiro	= nr_repasse_terceiro_p
		where	nr_titulo		= nr_tit_rec_w
		and	nr_sequencia		= nr_seq_titulo_w;

		update	titulo_receber
		set	ds_observacao_titulo	= ds_observacao_titulo || chr(13) || WHEB_MENSAGEM_PCK.get_texto(297899,'NR_SEQ_TITULO_W=' || nr_seq_titulo_w || ';VL_BAIXA_W=' || vl_baixa_w)
		where	nr_titulo		= nr_tit_rec_w;

		vl_total_saldo_tit_rec_w	:= vl_total_saldo_tit_rec_w - vl_baixa_w;

		vl_total_baixa_tit_rec_w	:= vl_baixa_w + vl_total_baixa_tit_rec_w;

	end if;

end loop;
close c05;


OPEN C010;
LOOP
FETCH C010 into
	cd_estabelecimento_w,
	cd_condicao_pagto_w,
	nr_sequencia_w,
	dt_vencimento_w,
	vl_vencimento_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	vl_ir_w,
	VL_IMPOSTO_MUNIC_w,
	cd_conta_financ_terc_w,
	cd_conta_contabil_w,
	ds_observacao_w,
	dt_mesano_referencia_w,
	nr_seq_trans_fin_baixa_w,
	NR_SEQ_TRANS_FIN_TIT_w,
	cd_centro_custo_w;
EXIT WHEN NOT FOUND; /* apply on c010 */
	begin
	
	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		cd_pessoa_fisica_w	:= null;
	end if;

	tx_juros_w			:= 0;	
	tx_multa_w			:= 0;
	tx_desc_antecipacao_w		:= 0;
	
	if (coalesce(vl_repasse_w,0) <> 0) then
		vl_desconto_w			:= (coalesce(vl_vencimento_w,0) / coalesce(vl_repasse_w,0)) * coalesce(vl_dia_antecipacao_w,0);
	end if;

	select	nextval('titulo_pagar_seq')
	into STRICT	nr_titulo_w
	;				/* Coloquei o campo NR_REPASSE_TERCEIRO - Edgar 23/05/2003*/


	/* Ricardo 05/04/2006 - A pedido do Marcus, inclui em todos os inserts da Titulo Pagar o campo NR_LOTE_TRANSF_TRIB como 0 (zero) */

	if (nr_seq_tipo_repasse_w IS NOT NULL AND nr_seq_tipo_repasse_w::text <> '') then
		select	max(nr_seq_trans_fin_contab)
		into STRICT	nr_seq_trans_contab_repasse_w
		from 	tipo_repasse
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	nr_sequencia		= nr_seq_tipo_repasse_w;

		if (nr_seq_trans_contab_repasse_w IS NOT NULL AND nr_seq_trans_contab_repasse_w::text <> '') then
			NR_SEQ_TRANS_FIN_TIT_w	:= nr_seq_trans_contab_repasse_w;
		end if;
	end if;
	
	select	max(a.nr_pis_pasep)
	into STRICT	nr_pis_pasep_w
	from	pessoa_fisica a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	
	nr_seq_rpa_w	:= null;
	if (ie_rpa_w = 'S') or
		(ie_rpa_w = 'F' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or
		(ie_rpa_w = 'P' AND nr_pis_pasep_w IS NOT NULL AND nr_pis_pasep_w::text <> '') then
	    	select	coalesce(max(nr_seq_rpa),0) + 1
		into STRICT	nr_seq_rpa_w
		from	Titulo_Pagar
		where	(nr_seq_rpa IS NOT NULL AND nr_seq_rpa::text <> '');
	end if;

	if (coalesce(ie_titulo_pessoa_pis_w,'S') = 'N') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (coalesce(nr_pis_pasep_w::text, '') = '') then

		/* Nao e possivel gerar titulo para este terceiro pois ele nao possui o n  PIS cadastrado! Parametro [129] */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(223175);

	end if;

	if (coalesce(ie_gerar_titulo_vencido_w,'S') = 'N') and (trunc(dt_vencimento_w) < trunc(clock_timestamp())) then

		/* 261327 - Nao e possivel gerar titulo com data de vencimento menor que data de emissao! Parametro[162] */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(261327);

	end if;

	select	max(nr_seq_tipo)
	into STRICT	nr_seq_tipo_w	
	from	repasse_terceiro
	where	nr_repasse_terceiro = nr_repasse_terceiro_p;
	
	
	if (nr_seq_tipo_w > 0) then
		select nr_seq_classe_titulo_pagar into STRICT nr_seq_classe_titulo_pagar_w from tipo_repasse where nr_sequencia = nr_seq_tipo_w;
	
	end if;

	insert	into Titulo_Pagar(
    		nr_titulo,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_emissao,
		dt_Contabil,
		dt_vencimento_original,
		dt_vencimento_atual,
		vl_titulo,
		vl_saldo_titulo,
		vl_saldo_juros,
		vl_saldo_multa,
		cd_moeda,
		tx_juros,
		tx_multa,
		cd_tipo_taxa_juro,
		cd_tipo_taxa_multa,             
		tx_desc_antecipacao,
		ie_situacao,
		ie_origem_titulo,
		ie_tipo_titulo,
		nr_seq_nota_fiscal,
		cd_pessoa_fisica,
		cd_cgc,
		nr_documento,
		IE_DESCONTO_DIA,
		vl_ir, 
		nr_repasse_terceiro,
		VL_IMPOSTO_MUNIC,
		nr_seq_trans_fin_baixa,
		ds_observacao_titulo,
		ie_status_tributo,
		NR_LOTE_TRANSF_TRIB,
		cd_estab_financeiro,
		nr_seq_trans_fin_contab,
		nr_seq_rpa,
		ie_status,
		vl_dia_antecipacao,
		vl_outros_acrescimos,
		nr_seq_classe)
	values (nr_titulo_w,
		cd_estabelecimento_w,
		clock_timestamp(),
		nm_usuario_p,
		dt_emissao_w,
		CASE WHEN IE_DT_CONTAB_TIT_REP_w='A' THEN  clock_timestamp()  ELSE dt_mesano_referencia_w END ,
		dt_vencimento_w,
		dt_vencimento_w,
		vl_vencimento_w,
		vl_vencimento_w,
		0,
		0,
		cd_moeda_w,
		tx_juros_w, 
		tx_multa_w,
		1,
		1, 
		0,
		'A',              /* Situacao Aberto */
		3,                /* Origem Repasse */
		coalesce(CASE WHEN coalesce(cd_cgc_w::text, '') = '' THEN  ie_tipo_titulo_pf_w  ELSE 9 END , 9),
		null,
		cd_pessoa_fisica_w,
		cd_cgc_w,
		nr_repasse_terceiro_p,
		'N',
		vl_ir_w, 
		nr_repasse_terceiro_p,
		VL_IMPOSTO_MUNIC_w,
		coalesce(nr_seq_trans_tipo_repasse_w,coalesce(nr_seq_trans_fin_baixa_w,nr_seq_baixa_repasse_w)),
		ds_observacao_w,
		'N',
		0,
		cd_estab_financeiro_w,
		NR_SEQ_TRANS_FIN_TIT_w, 
		nr_seq_rpa_w,
		'D',
		vl_desconto_w,
		vl_outros_acrescimos_w,
		nr_seq_classe_titulo_pagar_w);
	CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w, nm_usuario_p);
	nr_titulo_repasse_w := nr_titulo_w;

	nr_seq_classif_w		:= 0;
	
	if (coalesce(ie_conta_contab_tit_trib_w,'T')	= 'R') then
		cd_conta_cont_trib_w	:= substr(obter_conta_contabil_trib(cd_empresa_w,cd_tributo_w,cd_cgc_w,clock_timestamp()),1,20);

	end if;
	
	open c06;
	loop
	fetch c06 into
		cd_conta_financ_item_w,
		cd_centro_custo_item_w,
		vl_item_w;
	EXIT WHEN NOT FOUND; /* apply on c06 */

		nr_seq_classif_w		:= nr_seq_classif_w + 1;

		insert	into Titulo_Pagar_Classif(
			nr_titulo,
			nr_sequencia,
			vl_titulo,
			dt_atualizacao,
			nm_usuario,
			cd_conta_contabil,
			cd_centro_custo,
			nr_seq_conta_financ)
		values (	nr_titulo_w,
			nr_seq_classif_w,
			dividir_sem_round(vl_item_w, vl_total_vencimento_w) * vl_vencimento_w,
			clock_timestamp(),
			nm_usuario_p,
			coalesce(cd_conta_cont_trib_w,cd_conta_contabil_w),
			cd_centro_custo_item_w,
			coalesce(cd_conta_financ_item_w,cd_conta_financ_terc_w));

	end loop;
	close c06;

	select	coalesce(sum(vl_titulo),0)
	into STRICT	vl_total_classif_w
	from	titulo_pagar_classif
	where	nr_titulo	= nr_titulo_w;
	
	if	((vl_vencimento_w - vl_total_classif_w) <> 0) then

                if (vl_total_classif_w = 0) then
                        nr_seq_classif_w := nr_seq_classif_w + 1;

                        insert into titulo_pagar_classif(
                                nr_titulo,
                                nr_sequencia, 
                                vl_titulo,
                                dt_atualizacao, 
                                nm_usuario, 
                                cd_conta_contabil, 
                                cd_centro_custo,
                                nr_seq_conta_financ)
                        values (	nr_titulo_w, 
                                nr_seq_classif_w, 
                                vl_vencimento_w - vl_total_classif_w,
                                clock_timestamp(), 
                                nm_usuario_p, 
                                cd_conta_contabil_w, 
                                cd_centro_custo_w,
                                coalesce(cd_conta_financ_tipo_w,cd_conta_financ_terc_w));
                else
                        update 	titulo_pagar_classif
                        set 	vl_titulo = vl_titulo + (vl_vencimento_w - vl_total_classif_w)
                        where  	nr_titulo = nr_titulo_w
                        and 	nr_sequencia = nr_seq_classif_w;
                end if;
	end if;

	-- Edgar 15/07/2006 oS 34264, fiz rotina de baixa de titulo a pagar do terceiro 

	-- qdo o mesmo foi tem titulo a receber gerado pelo controle de terceiros
	if (vl_total_baixa_tit_rec_w > 0) then

		if (vl_total_baixa_tit_rec_w > vl_vencimento_w) then
			vl_baixa_w		:= vl_vencimento_w;
		else
			vl_baixa_w		:= vl_total_baixa_tit_rec_w;
		end if;

		cd_tipo_baixa_abatimento_w := '';
		select	max(a.cd_tipo_baixa)
		into STRICT	cd_tipo_baixa_abatimento_w
		from	tipo_baixa_cpa a
		where	a.ie_tipo_consistencia = 3;

		CALL Baixa_Titulo_Pagar(	cd_estabelecimento_w,
					coalesce(cd_tipo_baixa_abatimento_w,cd_tipo_baixa_padrao_w),
					nr_titulo_w,
					vl_baixa_w,
					nm_usuario_p,
					nr_seq_trans_fin_abat_cp_w,
					null,
					null,
					clock_timestamp(),
					null);

		CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_w, nm_usuario_p);
		CALL Gerar_W_Tit_Pag_imposto(nr_titulo_w, nm_usuario_p);

		select	max(nr_sequencia)
		into STRICT	nr_seq_titulo_w
		from	titulo_pagar_baixa
		where	nr_titulo	= nr_titulo_w;


		update	titulo_pagar
		set	ds_observacao_titulo	= ds_observacao_titulo || ' - ' || WHEB_MENSAGEM_PCK.get_texto(297899,'NR_SEQ_TITULO_W=' || nr_seq_titulo_w || ';VL_BAIXA_W=' || vl_baixa_w)
		where	nr_titulo	= nr_titulo_w;

		vl_total_baixa_tit_rec_w	:= vl_total_baixa_tit_rec_w - vl_baixa_w;

		open c05;
		loop
		fetch c05 into
			nr_tit_rec_w,
			vl_saldo_tit_rec_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */

			select	max(a.nr_sequencia)
			into STRICT	nr_seq_liq_w
			from	titulo_receber_liq a
			where	a.nr_titulo	= nr_tit_rec_w;

			update	titulo_receber_liq
			set	nr_tit_pagar		= nr_titulo_w,
				nr_seq_baixa_pagar	= nr_seq_titulo_w
			where	nr_sequencia		= nr_seq_liq_w
			and	nr_titulo		= nr_tit_rec_w;

		end	loop;
		close	c05;

	end if;

	update	repasse_terceiro_venc
	set	nr_titulo	= nr_titulo_w
	where	nr_sequencia 	= nr_sequencia_w;
	
	--Variavel de controle para definir se deve ou nao atualizar o saldo dos titulos que geram titulos de tributos que devem deduzir do saldo.
	ie_atualiza_saldo_titulo_w	:= 'N';
	nr_titulo_atualizacao_w	:= nr_titulo_w;
	
/*	Tributos do repasse que devem ser gerados no contas a pagar */

	OPEN C040;
	LOOP
	FETCH C040 into
		cd_tributo_w,
		dt_imposto_w,
		vl_base_calculo_w,
		vl_tributo_w,
		pr_imposto_w,
		cd_conta_financ_trib_w,
		nr_seq_trans_reg_w,
		nr_seq_trans_baixa_w,
		ie_gerar_cp_w,
		cd_beneficiario_trib_w,
		vl_nao_retido_w,
		ie_vencimento_w,
		VL_BASE_NAO_RETIDO_w,
		VL_TRIB_ADIC_w,
		VL_BASE_ADIC_w,
		ie_saldo_tit_pagar_w;
	EXIT WHEN NOT FOUND; /* apply on c040 */
		begin

		ie_sempre_imposto_w := obter_param_usuario(89, 131, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_sempre_imposto_w);
		
/* Paulo - 12/06/2007 - OS 42871 - Criada a rotina pois nao estava gravando o cd_variacao e ie_periodicidade no titulo */

		SELECT * FROM OBTER_DADOS_TRIB_TIT_PAGAR(	cd_tributo_w, CD_ESTABELECIMENTO_w, cd_cgc_w, cd_pessoa_fisica_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_trans_reg_trib_tit_w, nr_seq_trans_baixa_trib_tit_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, dt_imposto_w, cd_variacao_w, ie_periodicidade_w, 'R', null, null, null, null, nr_seq_tipo_repasse_w, nr_seq_trib_cp_w, null, 0, ds_irrelevante_w, ds_irrelevante_w, vl_base_calculo_w, 'N', null, null, null, null) INTO STRICT ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_trans_reg_trib_tit_w, nr_seq_trans_baixa_trib_tit_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_trib_cp_w, ds_irrelevante_w, ds_irrelevante_w;
		
		/*lhalves OS 37443108/12/2011*/

		if (coalesce(nr_seq_trans_reg_w::text, '') = '') then
			nr_seq_trans_reg_w 	:= nr_seq_trans_reg_trib_tit_w;
		end if;		
		if (coalesce(nr_seq_trans_baixa_w::text, '') = '') then
			nr_seq_trans_baixa_w	:= nr_seq_trans_baixa_trib_tit_w;
		end if;			
		
		select	max(cd_empresa)
		into STRICT	cd_empresa_w
		from	estabelecimento
		where	cd_estabelecimento = cd_estabelecimento_w;

		select	max(cd_cond_pagto)
		into STRICT	cd_cond_pg_w
		from	tributo_conta_pagar
		where	nr_sequencia = nr_seq_trib_cp_w;		
		
		if (cd_cond_pg_w IS NOT NULL AND cd_cond_pg_w::text <> '') then
			cd_condicao_pagto_w	:= cd_cond_pg_w;
		end if;
				
		select nextval('titulo_pagar_imposto_seq')
		into STRICT	nr_seq_imposto_w
		;
		
		insert into Titulo_Pagar_imposto(
			nr_sequencia, nr_titulo, cd_tributo,
			ie_pago_prev, dt_atualizacao, nm_usuario,
			dt_imposto, vl_base_calculo, vl_imposto,
			ds_emp_retencao, pr_imposto, cd_conta_financ, 
			nr_seq_trans_reg, nr_seq_trans_baixa,
			cd_beneficiario, cd_cond_pagto, vl_nao_retido,
			ie_vencimento, VL_BASE_NAO_RETIDO, VL_TRIB_ADIC, VL_BASE_ADIC,
			nm_usuario_nrec,dt_atualizacao_nrec, cd_variacao, ie_periodicidade, nr_seq_trib_cp,
			cd_darf)
		values (
			nr_seq_imposto_w, nr_titulo_w, cd_tributo_w,
			'V', clock_timestamp(), nm_usuario_p, 
			dt_imposto_w, vl_base_calculo_w, vl_tributo_w,
			null, pr_imposto_w, cd_conta_financ_trib_w, 
			nr_seq_trans_reg_w, nr_seq_trans_baixa_w,
			cd_beneficiario_trib_w, cd_condicao_pagto_w, 
			vl_nao_retido_w, ie_vencimento_w,VL_BASE_NAO_RETIDO_w,VL_TRIB_ADIC_w,VL_BASE_ADIC_w,
			nm_usuario_p,clock_timestamp(), cd_variacao_w, ie_periodicidade_w, nr_seq_trib_cp_w, cd_darf_w);
		if (ie_gerar_cp_w = 'S') and (coalesce(vl_tributo_w,0) > 0) then
			CALL gerar_titulo_tributo(nr_seq_imposto_w, nm_usuario_p);
			update	titulo_pagar
			set	nr_repasse_terceiro	= nr_repasse_terceiro_p
			where	nr_seq_tributo	= nr_seq_imposto_w;			
		end if;
		
		delete	FROM w_titulo_pagar_imposto
		where	nr_titulo	= nr_titulo_w
		and		cd_tributo	= cd_tributo_w;
		
		exception
		when others then
			ds_erro_w	:= SQLERRM(SQLSTATE);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185645,'DS_ERRO_W='||DS_ERRO_W);
			--'Erro ao inserir imposto no titulo. ' || DS_ERRO_W);
		end;
		
		if (ie_saldo_tit_pagar_w = 'S') then
			ie_atualiza_saldo_titulo_w	:= 'S';
		end if;
	END LOOP;
	CLOSE C040;
	end;
	
	/*Integracao padrao para enviar titulos a pagar originados de repasse de terceiros - OS 1370807*/

	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') and (nr_repasse_terceiro_p IS NOT NULL AND nr_repasse_terceiro_p::text <> '') then
		reg_integracao_w := gerar_int_padrao.gravar_integracao('48', nr_titulo_w, nm_usuario_p, reg_integracao_w);	
	end if;
	
	if (vl_ir_w > 0) AND (cd_beneficiario_ir_w IS NOT NULL AND cd_beneficiario_ir_w::text <> '') and (cd_tributo_ir_w IS NOT NULL AND cd_tributo_ir_w::text <> '') then
		begin
		
		
		SELECT * FROM OBTER_DADOS_TRIB_TIT_PAGAR(	cd_tributo_ir_w, CD_ESTABELECIMENTO_w, cd_cgc_w, null, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_trans_reg_trib_ie_w, nr_seq_trans_baixa_trib_ir_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, dt_emissao_w, cd_variacao_w, ie_periodicidade_w, 'R', null, null, null, null, nr_seq_tipo_repasse_w, nr_seq_trib_cp_w, null, 0, ds_irrelevante_w, ds_irrelevante_w, vl_base_calculo_w, 'N', null, null, null, null) INTO STRICT ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_trans_reg_trib_ie_w, nr_seq_trans_baixa_trib_ir_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_trib_cp_w, ds_irrelevante_w, ds_irrelevante_w;

		dt_vencimento_orig_w	:= dt_vencimento_w;
		/* vencimento := 3 dias corridos na senama seguinte, posterga se feriado */

		if (ie_vencimento_ir_w = 'E') then
			dt_vencimento_w := dt_emissao_w;
		end if;

		select	obter_data_vencimento(
			obter_data_base_venc(dt_vencimento_w,3),3, cd_estabelecimento_w,'C','P')
		into STRICT	dt_vencimento_w
		;
		nr_titulo_origem_w	:= nr_titulo_w;
		select	nextval('titulo_pagar_seq')
		into STRICT	nr_titulo_w
		;


		/* Ricardo 05/04/2006 - A pedido do Marcus, inclui em todos os inserts da Titulo Pagar o campo NR_LOTE_TRANSF_TRIB como 0 (zero) */

		
		insert	into Titulo_Pagar(
	    		nr_titulo, cd_estabelecimento,	dt_atualizacao,	nm_usuario, dt_emissao,	dt_Contabil,
			dt_vencimento_original, dt_vencimento_atual, vl_titulo, vl_saldo_titulo, vl_saldo_juros,
			vl_saldo_multa, cd_moeda, tx_juros, tx_multa, cd_tipo_taxa_juro, cd_tipo_taxa_multa,             
			tx_desc_antecipacao, ie_situacao, ie_origem_titulo, ie_tipo_titulo, nr_seq_nota_fiscal,
			cd_cgc, nr_documento,	IE_DESCONTO_DIA, nr_titulo_original, nr_lote_contabil,
			nr_repasse_terceiro, ie_status_tributo, NR_LOTE_TRANSF_TRIB, cd_estab_financeiro,nr_seq_trans_fin_baixa, ie_status)
		values (
			nr_titulo_w, cd_estabelecimento_w, clock_timestamp(), nm_usuario_p, dt_emissao_w, dt_emissao_w,
			dt_vencimento_orig_w, dt_vencimento_w, vl_ir_w, vl_ir_w, 0,
			0, cd_moeda_w,	tx_juros_w, tx_multa_w, 1, 1, 
			0,
			'A',              			/* Situacao Aberto */
			somente_numero(coalesce(ie_sempre_imposto_w,'3')), /* Origem Repasse */
			coalesce(CASE WHEN coalesce(cd_cgc_w::text, '') = '' THEN  ie_tipo_titulo_pf_w  ELSE 9 END , 9),
			null,
			cd_beneficiario_ir_w, nr_repasse_terceiro_p, 'N', nr_titulo_origem_w, 0,
			nr_repasse_terceiro_p, 'NT', 0, cd_estab_financeiro_w, nr_seq_trans_baixa_trib_ir_w, 'D');
		CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w, nm_usuario_p);

		nr_seq_classif_w	:= 1;

		insert into Titulo_Pagar_Classif(
			nr_titulo, nr_sequencia, vl_titulo,
			dt_atualizacao, nm_usuario,
			cd_conta_contabil, cd_centro_custo,
			nr_seq_conta_financ)
		values (
			nr_titulo_w, nr_seq_classif_w, vl_ir_w,
			clock_timestamp(), nm_usuario_p, 
			cd_conta_contabil_ir_w, null,
			nr_seq_conta_fin_ir_w);
		end;
	end if;
	
if (ie_trib_atualiza_saldo_w = 'S') and (ie_atualiza_saldo_titulo_w = 'S') then
	CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_atualizacao_w, nm_usuario_p);
end if;
	
END LOOP;
CLOSE C010;

if (coalesce(nr_titulo_repasse_w,0) <> 0) then
		
	select	coalesce(max(a.ie_liberar_tit_pagar_imposto),'N')
	into STRICT	ie_liberar_tit_pagar_imposto_w
	from	parametros_contas_pagar a
	where	a.cd_estabelecimento	= cd_estabelecimento_w;
	
	if (coalesce(ie_liberar_tit_pagar_imposto_w,'N') = 'S') then
	
		select	count(*)
		into STRICT	count_w
		from	titulo_pagar
		where	nr_titulo = nr_titulo_repasse_w
		and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	(nm_usuario_lib IS NOT NULL AND nm_usuario_lib::text <> '');
		
		if (count_w > 0) then
			
			update	titulo_pagar a
			set	a.dt_liberacao		= clock_timestamp(),
				a.dt_atualizacao	= clock_timestamp(),
				a.nm_usuario		= nm_usuario_p,
				a.nm_usuario_lib	= nm_usuario_p
				where	exists (SELECT	1
					from	titulo_pagar_imposto x
					where	x.nr_sequencia	= a.nr_seq_tributo
					and	x.nr_titulo	= nr_titulo_repasse_w);
			
		end if;
	end if;
	
	ie_ctb_online_w   := ctb_online_pck.get_modo_lote(16, cd_estabelecimento_w);
	
	if (ie_ctb_online_w = 'S') then
		--
		CALL ctb_gerar_rateio_tit_rep(	nr_titulo_repasse_w,
						nm_usuario_p);
		--
		CALL ctb_contab_onl_titulo_repasse(	nr_titulo_repasse_w,
						nm_usuario_p);
	end if;
	
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_titulo_pagar_repasse ( nr_repasse_terceiro_p bigint, nm_usuario_p text, ds_lista_tit_rec_p text) FROM PUBLIC;

