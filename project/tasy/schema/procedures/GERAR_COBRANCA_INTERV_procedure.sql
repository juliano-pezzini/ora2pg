-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobranca_interv ( nr_seq_intervencao_p bigint, nr_seq_pe_prescr_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ie_alteracao_p bigint default null, cd_procedimento_p bigint DEFAULT NULL, ie_origem_proced_p bigint DEFAULT NULL, nr_seq_proc_interno_p bigint DEFAULT NULL) AS $body$
DECLARE


cd_procedimento_w		bigint;
ie_orig_proced_w		bigint;
qt_procedimento_w		double precision;
nr_seq_exame_w			bigint;
ds_observacao_w			varchar(255);
ie_cobrar_dia_w			varchar(1);
cd_setor_atendimento_w	integer;
nr_seq_proc_interno_w	bigint;
cont_w					bigint;
qt_w					bigint;
dt_procedimento_w		timestamp;
dt_alta_w				timestamp;

c01 CURSOR FOR
SELECT	cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		nr_seq_exame,
		cd_setor_atendimento,
		nr_seq_proc_interno,
		ie_cobrar_dia
from	regra_cobranca_sae a
where	a.nr_seq_intervencao	= nr_seq_intervencao_p;


BEGIN
select	count(*)
into STRICT	cont_w
from	regra_cobranca_sae a where		a.nr_seq_intervencao	= nr_seq_intervencao_p LIMIT 1;

if (cont_w > 0) then

	open C01;
	loop
	fetch C01 into	
		cd_procedimento_w,
		ie_orig_proced_w,
		qt_procedimento_w,
		nr_seq_exame_w,
		cd_setor_atendimento_w,
		nr_seq_proc_interno_w,
		ie_cobrar_dia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
			
		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, null, nr_atendimento_p, 0, cd_procedimento_w, ie_orig_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_orig_proced_w;
		end if;
		
		qt_w	:= 0;
		
		if (ie_cobrar_dia_w = 'S') then
			select	count(*)
			into STRICT	qt_w
			from	procedimento_paciente where		nr_atendimento		= nr_atendimento_p
			and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) 	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
			and		cd_procedimento		= cd_procedimento_w
			and		ie_origem_proced	= ie_orig_proced_w LIMIT 1;
		end if;
		
		if (qt_w = 0) then
			if (ie_alteracao_p  = 4) then
				qt_procedimento_w := qt_procedimento_w * -1;
			end if;

			CALL gerar_proc_pac_item_prescr(null, null,nr_atendimento_p,null,nr_seq_proc_interno_w, cd_procedimento_w, ie_orig_proced_w, qt_procedimento_w, cd_setor_atendimento_w,1,
				clock_timestamp(), nm_usuario_p, NULL, nr_seq_exame_w, NULL,nr_seq_pe_prescr_p, null, cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, null);
		end if;
	end loop;
	close C01;
else
	cd_procedimento_w	:= cd_procedimento_p;
	ie_orig_proced_w	:= ie_origem_proced_p;
	
	select	count(*)
	into STRICT	qt_w
	from	procedimento_paciente where		nr_atendimento		= nr_atendimento_p
	and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) 	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
	and		cd_procedimento		= cd_procedimento_w
	and		ie_origem_proced	= ie_orig_proced_w LIMIT 1;
	
	if (qt_w = 0) then
		qt_procedimento_w	:= 1;
		
		if (ie_alteracao_p  = 4) then
			qt_procedimento_w := qt_procedimento_w * -1;
		end if;
		
		select	max(dt_alta)
		into STRICT	dt_alta_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_p;

		if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
			dt_procedimento_w	:= dt_alta_w;
		else
			dt_procedimento_w	:= clock_timestamp();
		end if;

		CALL gerar_proc_pac_item_prescr(null, null,nr_atendimento_p,null,0, cd_procedimento_w, ie_orig_proced_w, qt_procedimento_w, cd_setor_atendimento_w,1,
				dt_procedimento_w, nm_usuario_p, NULL, nr_seq_exame_w, NULL,nr_seq_pe_prescr_p, null, null, null, null, null);
	end if;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobranca_interv ( nr_seq_intervencao_p bigint, nr_seq_pe_prescr_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ie_alteracao_p bigint default null, cd_procedimento_p bigint DEFAULT NULL, ie_origem_proced_p bigint DEFAULT NULL, nr_seq_proc_interno_p bigint DEFAULT NULL) FROM PUBLIC;

