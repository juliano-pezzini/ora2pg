-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_transf_agenda ( nr_seq_origem_p bigint, nr_seq_destino_p bigint, ie_acao_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_consistencia_p INOUT text, ds_erro_p INOUT text, ie_medico_p INOUT text) AS $body$
DECLARE


ie_consiste_medico_w		varchar(1);
cd_medico_exec_origem_w		varchar(10);
ds_medico_exec_origem_w		varchar(90);
cd_medico_exec_destino_w	varchar(10);
ds_medico_exec_destino_w	varchar(90);
ds_consistencia_w		varchar(255);
ds_erro_w			varchar(255);
cd_agenda_w			bigint;
cd_convenio_w			bigint;
cd_medico_exec_w		varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w		bigint;
IE_CONSISTENCIA_w		varchar(255);
ie_agenda_w			varchar(1);
ie_transf_exec_w		varchar(1);
ie_status_agenda_w		varchar(3);
hr_inicio_w			timestamp;
ie_transf_data_ant_w		varchar(1);
ie_status_agenda_destino_w	varchar(3);
ie_manut_proced_w		varchar(1);
hr_inicio_dest_w		timestamp;
cd_retorno_w			bigint;
ie_valida_quant_proc_w		varchar(1);
ie_consist_js_w			varchar(255) := '';
cd_pessoa_fisica_w		varchar(10);
qt_idade_paciente_w		smallint;
ie_medico_exec_copia_w		varchar(1);
ie_medico_exec_transf_w		varchar(1);
cd_categoria_w			varchar(10);
ie_consiste_sobrep_hor_w	varchar(1);
ie_manter_min_dur_transf_w	varchar(1);
ie_se_horario_sobreposto_w	varchar(1);
nr_min_duracao_w		bigint;
ie_permite_w			varchar(1);
cd_empresa_ref_w		bigint;
ie_anestesia_w			varchar(1);
cd_proc_adic_w		agenda_paciente_proc.cd_procedimento%type;
ie_origem_proc_adic_w agenda_paciente_proc.ie_origem_proced%type;
nr_seq_proc_int_adic_w agenda_paciente_proc.nr_seq_proc_interno%type;
cd_conv_adic_w		bigint;
cd_categoria_adic_w	varchar(10);

c01 CURSOR FOR
	SELECT app.cd_procedimento,
		   app.ie_origem_proced,
		   app.nr_seq_proc_interno,
		   coalesce(app.cd_convenio,ap.cd_convenio),
		   coalesce(app.cd_categoria,ap.cd_categoria)
	  from agenda_paciente_proc app,
		   agenda_paciente ap
	 where ap.nr_sequencia = app.nr_sequencia
	   and ap.nr_sequencia = nr_seq_origem_p;
	


BEGIN


ie_consiste_medico_w := Obter_Param_Usuario(820, 40, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_consiste_medico_w);
ie_transf_exec_w := Obter_Param_Usuario(820, 72, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_transf_exec_w);
ie_transf_data_ant_w := Obter_Param_Usuario(820, 73, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_transf_data_ant_w);
ie_manut_proced_w := Obter_Param_Usuario(820, 12, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_manut_proced_w);
ie_valida_quant_proc_w := Obter_Param_Usuario(820, 103, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_valida_quant_proc_w);
ie_medico_exec_transf_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_MEDICO_EXEC_TRANSF', 	'S');
ie_medico_exec_copia_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_MEDICO_EXEC_COPIA', 	'S');
ie_consiste_sobrep_hor_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_CONSISTE_DURACAO', 		'N');
ie_manter_min_dur_transf_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_DURACAO_TRANSF', 		'N');

ds_erro_w		:= null;
ds_consistencia_w	:= null;
ie_medico_p		:= 'N';

select	max(ie_status_agenda)
into STRICT	ie_status_agenda_destino_w
from	agenda_paciente
where 	nr_sequencia = nr_seq_destino_p;

if (ie_status_agenda_destino_w <> 'L') then
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279820,null);
end if;


select 	max(cd_medico_exec),
	max(substr(obter_nome_pf(cd_medico_exec),1,90)),
	max(ie_status_agenda),
	max(hr_inicio),
	max(nr_minuto_duracao)
into STRICT	cd_medico_exec_origem_w,
	ds_medico_exec_origem_w,
	ie_status_agenda_w,
	hr_inicio_w,
	nr_min_duracao_w
from	agenda_paciente
where 	nr_sequencia = nr_seq_origem_p;

select	max(cd_agenda),
	max(cd_medico_exec),
	max(hr_inicio)
into STRICT	cd_agenda_w,
	cd_medico_exec_w,
	hr_inicio_dest_w
from	agenda_paciente
where	nr_sequencia = nr_seq_destino_p;
	
if (ie_acao_p = 'C') and (ie_medico_exec_copia_w = 'N') then
	cd_medico_exec_origem_w 	:= cd_medico_exec_w;
elsif (ie_acao_p = 'T') and (ie_medico_exec_transf_w = 'N') then
	cd_medico_exec_origem_w 	:= cd_medico_exec_w;
end if;

select	max(cd_convenio),
	max(cd_pessoa_fisica),
	max(qt_idade_paciente),
	max(cd_categoria),
	max(cd_empresa_ref),
	max(coalesce(ie_anestesia,'N'))
into STRICT	cd_convenio_w,
	cd_pessoa_fisica_w,
	qt_idade_paciente_w,
	cd_categoria_w,
	cd_empresa_ref_w,
	ie_anestesia_w
from	agenda_paciente
where	nr_sequencia = nr_seq_origem_p;

ie_permite_w	:= Consiste_Agenda_Sexo(cd_pessoa_fisica_w, cd_agenda_w);

if (ie_permite_w = 'N') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(268471);
end if;

select	max(cd_procedimento),
	max(ie_origem_proced),
	max(nr_seq_proc_interno)
into STRICT	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_interno_w
from	agenda_paciente
where	nr_sequencia = nr_seq_origem_p;

if (coalesce(ds_erro_w::text, '') = '') and (coalesce(ds_consistencia_w::text, '') = '') then
	
	if (ie_manut_proced_w = 'N') or
		(ie_manut_proced_w = 'C' AND ie_acao_p = 'T') or
		(ie_manut_proced_w = 'T' AND ie_acao_p = 'C') then
		
		cd_procedimento_w 	:= null;
		ie_origem_proced_w 	:= null;
		nr_seq_proc_interno_w 	:= null;
		
	end if;
	
	if (ie_acao_p = 'T') and (ie_consiste_sobrep_hor_w <> 'N') and (ie_manter_min_dur_transf_w <> 'N')then
		begin
		
		select	max(obter_se_sobreposicao_horario(cd_agenda_w, hr_inicio_dest_w, nr_min_duracao_w))
		into STRICT	ie_se_horario_sobreposto_w
		;
		
		if (ie_se_horario_sobreposto_w = 'S')then
			if (ie_consiste_sobrep_hor_w = 'A')then
				ds_consistencia_w	:= WHEB_MENSAGEM_PCK.get_texto(279830,null);
			elsif (ie_consiste_sobrep_hor_w = 'I')then
				ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279823,null);
			end if;		
		end if;
		
		end;
		
	end if;
	
	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
	
		SELECT * FROM Consistir_Proc_Conv_Agenda(	cd_estabelecimento_p, cd_pessoa_fisica_w, hr_inicio_dest_w, cd_agenda_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, cd_medico_exec_origem_w, 'E', null, null, null, null, cd_empresa_ref_w, ie_anestesia_w, null, null) INTO STRICT IE_CONSISTENCIA_w, ie_agenda_w, cd_retorno_w, ie_consist_js_w;		
		
		if (ie_consistencia_w IS NOT NULL AND ie_consistencia_w::text <> '') and (coalesce(ds_erro_w::text, '') = '') and (coalesce(ds_consistencia_w::text, '') = '')then

			if (ie_valida_quant_proc_w	= 'N') and (ie_agenda_w	= 'Q') then
				ie_agenda_w	:= 'N';
			end if;
		
			if (ie_agenda_w = 'N') or (ie_agenda_w = 'H')  then
				ds_erro_w		:= ie_consistencia_w;
			end if;

			if (ie_agenda_w = 'Q') then
				ds_consistencia_w	:= ie_consistencia_w;
			end if;

		end if;
		
	end if;
	--Validacao para exames adicionais
	OPEN C01;
		LOOP
		FETCH C01 INTO
			cd_proc_adic_w,
			ie_origem_proc_adic_w,
			nr_seq_proc_int_adic_w,
			cd_conv_adic_w,
			cd_categoria_adic_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
			
			if ((cd_proc_adic_w IS NOT NULL AND cd_proc_adic_w::text <> '' AND ie_origem_proc_adic_w IS NOT NULL AND ie_origem_proc_adic_w::text <> '' AND nr_seq_proc_int_adic_w IS NOT NULL AND nr_seq_proc_int_adic_w::text <> '') and
				coalesce(ds_erro_w::text, '') = '' and
				coalesce(ds_consistencia_w::text, '') = '' and
				coalesce(ie_consistencia_w::text, '') = '')	then
				
				SELECT * FROM Consistir_Proc_Conv_Agenda(cd_estabelecimento_p, cd_pessoa_fisica_w, hr_inicio_dest_w, cd_agenda_w, cd_conv_adic_w, cd_categoria_adic_w, cd_proc_adic_w, ie_origem_proc_adic_w, nr_seq_proc_int_adic_w, cd_medico_exec_origem_w, 'E', null, null, null, null, cd_empresa_ref_w, ie_anestesia_w, null, null) INTO STRICT IE_CONSISTENCIA_w, ie_agenda_w, cd_retorno_w, ie_consist_js_w;		
				
				if (ie_consistencia_w IS NOT NULL AND ie_consistencia_w::text <> '') and (coalesce(ds_erro_w::text, '') = '') and (coalesce(ds_consistencia_w::text, '') = '')then

					if (ie_valida_quant_proc_w	= 'N') and (ie_agenda_w	= 'Q') then
						ie_agenda_w	:= 'N';
					end if;
				
					if (ie_agenda_w = 'N') or (ie_agenda_w = 'H')  then
						ds_erro_w		:= ie_consistencia_w;
					end if;

					if (ie_agenda_w = 'Q') then
						ds_consistencia_w	:= ie_consistencia_w;
					end if;
					exit;
				end if;
			else
				exit;
			end if;
		end;
		end loop;
	close c01;
	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		CALL Consistir_Regra_Agenda_Grupo(cd_agenda_w, hr_inicio_dest_w, nr_seq_proc_interno_w, nr_seq_destino_p, nm_usuario_p, cd_estabelecimento_p,0);
	end if;
end if;

if (ie_acao_p = 'T') and (coalesce(ds_erro_w::text, '') = '') and (coalesce(ds_consistencia_w::text, '') = '') then
	
	if (trunc(hr_inicio_w) < trunc(clock_timestamp())) and (ie_transf_data_ant_w = 'N') then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279825,null);
	end if;

	if (ie_status_agenda_w = 'E') and (ie_transf_exec_w = 'N') then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279826,null);
	end if;

	select 	max(cd_medico_exec),
		max(substr(obter_nome_pf(cd_medico_exec),1,90))
	into STRICT	cd_medico_exec_destino_w,
		ds_medico_exec_destino_w
	from	agenda_paciente
	where 	nr_sequencia = nr_seq_destino_p;
	
	select 	max(cd_medico_exec),
		max(substr(obter_nome_pf(cd_medico_exec),1,90)),
		max(ie_status_agenda),
		max(hr_inicio)
	into STRICT	cd_medico_exec_origem_w,
		ds_medico_exec_origem_w,
		ie_status_agenda_w,
		hr_inicio_w
	from	agenda_paciente
	where 	nr_sequencia = nr_seq_origem_p;

	if (cd_medico_exec_origem_w IS NOT NULL AND cd_medico_exec_origem_w::text <> '') and (cd_medico_exec_destino_w IS NOT NULL AND cd_medico_exec_destino_w::text <> '') and (cd_medico_exec_origem_w <> cd_medico_exec_destino_w) then
		ie_medico_p	:= 'S';
		if (ie_consiste_medico_w = 'S') then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279828,'DS_MEDICO_EXEC_DESTINO='|| ds_medico_exec_destino_w||';DS_MEDICO_EXEC_ORIGEM='||  ds_medico_exec_origem_w);
		elsif (ie_consiste_medico_w = 'Q') then
			ds_consistencia_w	:= WHEB_MENSAGEM_PCK.get_texto(279828,'DS_MEDICO_EXEC_DESTINO='|| ds_medico_exec_destino_w||';DS_MEDICO_EXEC_ORIGEM='|| ds_medico_exec_origem_w);
		end if;
	end if;
end if;

ds_consistencia_p	:= ds_consistencia_w;
ds_erro_p		:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_transf_agenda ( nr_seq_origem_p bigint, nr_seq_destino_p bigint, ie_acao_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_consistencia_p INOUT text, ds_erro_p INOUT text, ie_medico_p INOUT text) FROM PUBLIC;

