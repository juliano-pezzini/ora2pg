-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_preco_tuss_cbhpm ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_vigencia_edicao_p timestamp, nr_seq_prestador_p bigint, ie_credenciado_p text, nr_seq_edicao_tuss_p pls_edicao_preco_tuss.nr_sequencia%type, vl_medico_p INOUT bigint, cd_porte_p INOUT text, tx_porte_p INOUT bigint, qt_uco_p INOUT bigint, nr_porte_anest_p INOUT bigint, nr_auxiliar_p INOUT bigint, qt_filme_p INOUT bigint, qt_incidencia_p INOUT bigint, vl_porte_p INOUT bigint, dt_vigencia_porte_p INOUT timestamp, dt_vigencia_preco_p INOUT timestamp, vl_porte_anestesista_p INOUT bigint, cd_edicao_amb_p bigint, nr_seq_plano_p pls_segurado.nr_seq_plano%type) AS $body$
DECLARE

				
cd_grupo_w			bigint	:= 0;
cd_especialidade_w		bigint	:= 0;
cd_area_w			bigint	:= 0;
dt_vigencia_preco_w		timestamp;
cd_porte_w			varchar(10);
tx_porte_w			double precision;
tx_porte_orig_w			double precision;
qt_uco_w			double precision;
nr_porte_anest_w		smallint;
nr_auxiliar_w			smallint;
qt_filme_w			double precision;
qt_incidencia_w			smallint;
vl_porte_w			double precision;
dt_vigencia_porte_w		timestamp;
cd_porte_anestesista_w		varchar(8);
vl_porte_anestesista_w		double precision;
tx_porte_anest_w		double precision;
vl_medico_w			double precision;
dt_vigencia_w			pls_edicao_preco_tuss.dt_vigencia%type;
qt_porte_anest_w		integer;
VL_PORTE_NEGOCIADO_w		double precision:= 0;
ie_grupo_produto_w		varchar(3);
ie_grupo_prestador_w		varchar(1);

C03 CURSOR FOR
	SELECT	coalesce(a.tx_ajuste,1) tx_ajuste,
		a.vl_porte_negociado,
		a.nr_seq_grupo_produto,
		a.nr_seq_grupo_prest,
		a.nr_seq_prestador
	from	pls_ajuste_porte_cbhpm	a
	where	((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = nr_seq_prestador_p))
	and	a.cd_porte		= substr(cd_porte_w,1,8)
	and	((cd_procedimento 	= cd_procedimento_p AND ie_origem_proced 	= ie_origem_proced_p) 	or coalesce(cd_procedimento::text, '') = '')
	and	((cd_grupo_proc 	= cd_grupo_w) 		or (coalesce(cd_grupo_proc::text, '') = ''))
	and	((cd_especialidade 	= cd_especialidade_w) 	or (coalesce(cd_especialidade::text, '') = ''))
	and	((cd_area_procedimento 	= cd_area_w )		or (coalesce(cd_area_procedimento::text, '') = ''))
	and	((nr_seq_plano 		= nr_seq_plano_p)	or (coalesce(nr_seq_plano::text, '') = ''))
	and (coalesce(a.ie_tipo_ajuste,'M') = 'M')
	and	a.ie_situacao	= 'A'
	and	a.dt_vigencia	=
			(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from	pls_ajuste_porte_cbhpm	x
			where	x.cd_porte 	= substr(cd_porte_w,1,8)
			and	x.dt_vigencia	<= dt_referencia_p
			and	x.ie_situacao	= 'A'
			and	((coalesce(x.nr_seq_prestador::text, '') = '') or (x.nr_seq_prestador = nr_seq_prestador_p)))
	order by
		coalesce(cd_procedimento,0),
		coalesce(ie_origem_proced,0),
		coalesce(cd_area_procedimento,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_grupo_proc,0),
		coalesce(nr_seq_prestador,0),
		coalesce(nr_seq_plano,0);

C04 CURSOR FOR
	SELECT	coalesce(a.tx_ajuste,1) tx_ajuste,
		a.vl_porte_negociado,
		a.nr_seq_grupo_produto,
		a.nr_seq_grupo_prest,
		a.nr_seq_prestador
	from	pls_ajuste_porte_cbhpm	a
	where	((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = nr_seq_prestador_p))
	and	a.cd_porte		= substr(cd_porte_anestesista_w,1,8)
	and	((cd_procedimento 	= cd_procedimento_p AND ie_origem_proced 	= ie_origem_proced_p) 	or coalesce(cd_procedimento::text, '') = '')
	and	((cd_grupo_proc 	= cd_grupo_w) 		or (coalesce(cd_grupo_proc::text, '') = ''))
	and	((cd_especialidade 	= cd_especialidade_w) 	or (coalesce(cd_especialidade::text, '') = ''))
	and	((cd_area_procedimento 	= cd_area_w) 		or (coalesce(cd_area_procedimento::text, '') = ''))
	and	((nr_seq_plano 		= nr_seq_plano_p)	or (coalesce(nr_seq_plano::text, '') = ''))
	and (coalesce(a.ie_tipo_ajuste,'M') = 'A')
	and	a.ie_situacao	= 'A'
	and	a.dt_vigencia	=
			(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from	pls_ajuste_porte_cbhpm	x
			where	x.cd_porte 	= substr(cd_porte_anestesista_w,1,8)
			and	x.dt_vigencia	<= dt_referencia_p
			and	x.ie_situacao	= 'A'
			and	((coalesce(x.nr_seq_prestador::text, '') = '') or (x.nr_seq_prestador = nr_seq_prestador_p)))
	order by
		coalesce(cd_procedimento,0),
		coalesce(ie_origem_proced,0),
		coalesce(cd_area_procedimento,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_grupo_proc,0),
		coalesce(nr_seq_prestador,0),
		coalesce(nr_seq_plano,0);
		
BEGIN

/* Obter Estrutura do procedimento */

select	coalesce(max(cd_grupo_proc),0),
	coalesce(max(cd_especialidade),0),
	coalesce(max(cd_area_procedimento),0)
into STRICT	cd_grupo_w,
	cd_especialidade_w,
	cd_area_w
from	estrutura_procedimento_v
where	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;

begin
	select	a.dt_inicio_vigencia,
		coalesce(a.cd_porte_cbhpm,'x'),
		coalesce(a.tx_porte,1),
		coalesce(a.qt_uco,0),
		a.nr_porte_anest_cbhpm,
		coalesce(a.nr_auxiliares_cbhpm,0),
		coalesce(a.qt_filme_cbhpm,0),
		coalesce(a.qt_incidencia_cbhpm,0)
	into STRICT	dt_vigencia_preco_w,
		cd_porte_w,
		tx_porte_w,
		qt_uco_w,
		nr_porte_anest_w,
		nr_auxiliar_w,
		qt_filme_w,
		qt_incidencia_w
	from	preco_tuss	a
	where	a.cd_procedimento	= cd_procedimento_p
	and	a.ie_origem_proced	= ie_origem_proced_p
	and	a.cd_edicao_amb		= cd_edicao_amb_p
	and	coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '3650 days')	=
				(	SELECT	max(coalesce(b.dt_inicio_vigencia, clock_timestamp() - interval '3650 days'))
					from	preco_tuss b
					where	b.cd_procedimento	= cd_procedimento_p
					and	b.cd_edicao_amb		= cd_edicao_amb_p	
					and	b.ie_origem_proced	= ie_origem_proced_p
					and	coalesce(b.dt_inicio_vigencia, clock_timestamp() - interval '3650 days') <= dt_referencia_p);
exception
     	when others then
	begin
	dt_vigencia_preco_w	:= null;
	cd_porte_w		:= 'X';
	tx_porte_w		:= 1;
	qt_uco_w		:= 0;
	nr_porte_anest_w	:= null;
	nr_auxiliar_w		:= 0;
	qt_filme_w		:= 0;
	qt_incidencia_w		:= null;
	end;
end;	

if (tx_porte_w	= 0) then
	tx_porte_w	:= 1;
end if;

if (cd_porte_w	<> 'X') then
	
	for r_c03_w in C03() loop
		begin
		ie_grupo_produto_w	:= 'S';
		ie_grupo_prestador_w	:= 'S';
		
		if (coalesce(r_c03_w.nr_seq_grupo_produto,0) > 0) then
			ie_grupo_produto_w	:= pls_se_grupo_preco_produto(r_c03_w.nr_seq_grupo_produto, nr_seq_plano_p);
		end if;
		
		if (r_c03_w.nr_seq_grupo_prest IS NOT NULL AND r_c03_w.nr_seq_grupo_prest::text <> '') then
		
			ie_grupo_prestador_w := pls_obter_se_prestador_grupo(r_c03_w.nr_seq_grupo_prest, nr_seq_prestador_p);
		end if;
		
		if (ie_grupo_produto_w	= 'S') and (ie_grupo_prestador_w = 'S') then
			if (r_c03_w.tx_ajuste <> 1) then
				tx_porte_w	:= r_c03_w.tx_ajuste;
			else	
				tx_porte_w	:= 1;
			end if;
			vl_porte_negociado_w	:= r_c03_w.vl_porte_negociado;
		end if;
		end;
	end loop;
	
	if (coalesce(nr_seq_edicao_tuss_p::text, '') = '') then	
		begin
		select	a.vl_porte,
			a.dt_vigencia
		into STRICT	vl_porte_w,
			dt_vigencia_porte_w
		from	tuss_porte	a
		where	a.cd_porte	= substr(cd_porte_w,1,8)
		and	a.dt_vigencia	=
			(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from	tuss_porte	x
			where	x.cd_porte 	= substr(cd_porte_w,1,8)
			and	x.dt_vigencia	<= dt_referencia_p
			and	x.dt_vigencia 	<= coalesce(dt_vigencia_edicao_p, dt_referencia_p));
		exception
			when others then
			begin
			vl_porte_w		:= 0;
			dt_vigencia_porte_w	:= null;
			end;
		end;
	else
		select	max(dt_vigencia)
		into STRICT	dt_vigencia_w
		from	pls_edicao_preco_tuss
		where	nr_sequencia	= nr_seq_edicao_tuss_p;
		
		begin	
			select	a.vl_porte,
				a.dt_vigencia
			into STRICT	vl_porte_w,
				dt_vigencia_porte_w
			from	tuss_porte	a
			where	a.cd_porte	= substr(cd_porte_w,1,8)
			and	a.dt_vigencia	=
				(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
				from	tuss_porte	x
				where	x.cd_porte 	= substr(cd_porte_w,1,8)
				and	x.dt_vigencia	<= dt_referencia_p
				and	x.dt_vigencia 	<= coalesce(dt_vigencia_w, dt_referencia_p));
		exception
			when others then
			begin
			vl_porte_w		:= 0;
			dt_vigencia_porte_w	:= null;
			end;
		end;
	end if;
end if;	

if (coalesce(vl_porte_negociado_w,0) <> 0) then
	vl_medico_w	:= (vl_porte_negociado_w * tx_porte_w);
else
	vl_medico_w	:= (vl_porte_w * tx_porte_w);
end if;

select	count(1)
into STRICT	qt_porte_anest_w
from 	pls_porte_anestesico_tuss;

if (qt_porte_anest_w	= 0) then
	/*	Define porte do anestesista */

	if (nr_porte_anest_w	= 1) then
		cd_porte_anestesista_w	:= '3A';
	elsif (nr_porte_anest_w	= 2) then
		cd_porte_anestesista_w	:= '3C';
	elsif (nr_porte_anest_w	= 3) then
		cd_porte_anestesista_w	:= '4C';
	elsif (nr_porte_anest_w	= 4) then
		cd_porte_anestesista_w	:= '6B';
	elsif (nr_porte_anest_w	= 5) then
		cd_porte_anestesista_w	:= '7C';
	elsif (nr_porte_anest_w	= 6) then
		cd_porte_anestesista_w	:= '9B';
	elsif (nr_porte_anest_w	= 7) then
		cd_porte_anestesista_w	:= '10C';
	elsif (nr_porte_anest_w	= 8) then
		cd_porte_anestesista_w	:= '12A';
	else
		cd_porte_anestesista_w	:= 'X';
	end if;
else
	select	max(cd_porte_cbhpm)
	into STRICT	cd_porte_anestesista_w
	from 	pls_porte_anestesico_tuss
	where	nr_porte_anestesico 	= nr_porte_anest_w;
end if;

vl_porte_anestesista_w	:= 0;
vl_porte_negociado_w	:= 0;
if (cd_porte_anestesista_w <> 'X') then
	begin
	if (coalesce(nr_seq_edicao_tuss_p::text, '') = '') then	
	
		select 	coalesce(max(a.vl_porte),0)
		into STRICT	vl_porte_anestesista_w
		from	tuss_porte a
		where	a.cd_porte	= cd_porte_anestesista_w
		and	a.dt_vigencia	=
			(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from 	tuss_porte x
			where 	x.cd_porte 	= cd_porte_anestesista_w
			and	x.dt_vigencia 	<= dt_referencia_p
			and	x.dt_vigencia	<= dt_vigencia_edicao_p);

	else
		select	max(dt_vigencia)
		into STRICT	dt_vigencia_w
		from	pls_edicao_preco_tuss
		where	nr_sequencia	= nr_seq_edicao_tuss_p;
		
		select 	coalesce(max(a.vl_porte),0)
		into STRICT	vl_porte_anestesista_w
		from	tuss_porte a
		where	a.cd_porte	= cd_porte_anestesista_w
		and	a.dt_vigencia	=
			(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from 	tuss_porte x
			where 	x.cd_porte 	= cd_porte_anestesista_w
			and	x.dt_vigencia 	<= dt_referencia_p
			and	x.dt_vigencia	<= coalesce(dt_vigencia_w,dt_vigencia_edicao_p));
	end if;
	
	for r_c04_w in C04() loop
		begin
		ie_grupo_produto_w	:= 'S';
		ie_grupo_prestador_w	:= 'S';
		
		if (coalesce(r_c04_w.nr_seq_grupo_produto,0) > 0) then
			ie_grupo_produto_w	:= pls_se_grupo_preco_produto(r_c04_w.nr_seq_grupo_produto, nr_seq_plano_p);
		end if;
		
		if (r_c04_w.nr_seq_grupo_prest IS NOT NULL AND r_c04_w.nr_seq_grupo_prest::text <> '') then
		
			ie_grupo_prestador_w := pls_obter_se_prestador_grupo(r_c04_w.nr_seq_grupo_prest, nr_seq_prestador_p);
		end if;
		
		if (ie_grupo_produto_w	= 'S') and (ie_grupo_prestador_w	= 'S') then
			
			tx_porte_anest_w	:= r_c04_w.tx_ajuste;

			vl_porte_negociado_w	:= r_c04_w.vl_porte_negociado;
		end if;
		end;
	end loop;
	
	tx_porte_anest_w	:= 1;
	
	if (coalesce(vl_porte_negociado_w,0) <> 0) then
		vl_porte_anestesista_w	:= vl_porte_negociado_w;
	else
		vl_porte_anestesista_w	:= (vl_porte_anestesista_w * tx_porte_anest_w);
	end if;
	
	end;
end if;

vl_medico_p		:= vl_medico_w;
cd_porte_p		:= cd_porte_w;
tx_porte_p		:= tx_porte_w;
qt_uco_p		:= qt_uco_w;
nr_porte_anest_p	:= nr_porte_anest_w;
nr_auxiliar_p		:= nr_auxiliar_w;
qt_filme_p		:= qt_filme_w;
qt_incidencia_p		:= qt_incidencia_w;
vl_porte_p		:= vl_porte_w;
dt_vigencia_porte_p	:= dt_vigencia_porte_w;
dt_vigencia_preco_p	:= dt_vigencia_preco_w;
vl_porte_anestesista_p	:= vl_porte_anestesista_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_preco_tuss_cbhpm ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_vigencia_edicao_p timestamp, nr_seq_prestador_p bigint, ie_credenciado_p text, nr_seq_edicao_tuss_p pls_edicao_preco_tuss.nr_sequencia%type, vl_medico_p INOUT bigint, cd_porte_p INOUT text, tx_porte_p INOUT bigint, qt_uco_p INOUT bigint, nr_porte_anest_p INOUT bigint, nr_auxiliar_p INOUT bigint, qt_filme_p INOUT bigint, qt_incidencia_p INOUT bigint, vl_porte_p INOUT bigint, dt_vigencia_porte_p INOUT timestamp, dt_vigencia_preco_p INOUT timestamp, vl_porte_anestesista_p INOUT bigint, cd_edicao_amb_p bigint, nr_seq_plano_p pls_segurado.nr_seq_plano%type) FROM PUBLIC;

