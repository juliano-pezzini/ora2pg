-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_proc_prescr ( nr_seq_agenda_p bigint, nr_prescricao_p bigint, cd_setor_atendimento_p bigint, cd_tipo_agenda_p bigint, nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w					bigint;
cd_procedimento_w				bigint;
cd_procedimento_ww				bigint;
ie_origem_proced_ww				bigint;
ie_origem_proced_w				bigint;
dt_resultado_w					timestamp;
cd_medico_exec_w				varchar(10);
ie_status_agenda_w				varchar(03);
ie_autorizacao_w				varchar(03);
cd_medico_agenda_w				varchar(10);
ds_setor_param_w				varchar(100);
cd_setor_proc_w					bigint;
ie_lado_w						varchar(01);
nr_seq_proc_interno_w			bigint;
hr_inicio_w						timestamp;
cd_estabelecimento_w			smallint;
ie_situacao_w					varchar(01);
ie_gerar_proc_adic_w			varchar(1);
cd_setor_origem_w				integer;
cd_setor_destino_w				integer;
qt_ambos_w						smallint;
nr_seq_agenda_princ_w			Agenda_paciente_proc.nr_seq_agenda_princ%type;
nr_seq_interno_w				bigint;
nr_seq_proc_princ_w				bigint;
nr_seq_exame_w					bigint;
cd_senha_w						varchar(20);
nr_seq_classificacao_w			bigint;
ie_tipo_atendimento_w			smallint;
cd_convenio_w					integer;
cd_categoria_w					varchar(10);
cd_setor_atend_w				bigint;
ie_medico_executor_w			varchar(1);
cd_medico_executor_w			varchar(10);
cd_cgc_w						varchar(14);
cd_pessoa_fisica_w				varchar(10);
dt_agenda_w						timestamp;
cd_paciente_w					varchar(10);
cd_medico_solic_w				varchar(10);
cd_medico_w						varchar(10);
nr_atendimento_w				bigint;
ds_observacao_w					varchar(2000);
qt_procedimento_w				integer;
cd_setor_exclusivo_w			bigint;
cd_setor_proc_interno_w			bigint;
cd_material_exame_w				varchar(20);
nr_seq_ageint_w					bigint;
nr_seq_proc_prescr_ag_w			bigint;
ie_alterar_proc_conv_w			varchar(1);
ie_qtd_proc_interno_w			varchar(1);
qt_proc_prescr_w				bigint	:= 0;
ie_setor_exclusivo_w			varchar(1);
cd_setor_prescricao_w			integer;
ie_setor_entrega_w				varchar(1);
cd_medico_prescr_w				varchar(10);
ie_considera_regra_med_exame_w	varchar(1);
ie_considera_regra_med_cons_w 	varchar(1);
cd_equipamento_w				prescr_procedimento.cd_equipamento%type;
ie_gerar_med_adicional_w		varchar(1);
nr_seq_prescr_w					prescr_procedimento.nr_sequencia%type;
qt_medico_adic_exame_w			integer;
nr_seq_prof_adic_w				prescr_proced_prof_adic.nr_sequencia%type;
cd_med_requisitante_w			Agenda_paciente.CD_MEDICO%type;
nr_seq_topografia_w				topografia_dor.nr_sequencia%type;
cd_medico_presc_proc_w			prescr_procedimento.CD_MEDICO_SOLICITANTE%type;
ds_dado_clinico_w			prescr_medica.ds_dado_clinico%type;
ie_utilizar_equip_presc_w		varchar(1);
ie_medico_req_age_cons_w        varchar(1);
ie_anestesia_w			Agenda_paciente.ie_anestesia%type;
ie_proced_vinculado_w		proc_int_proc_prescr.ie_proced_vinculado%type;
cd_plano_w			proc_int_proc_prescr.cd_plano_convenio%type;
ie_origem_proc_filtro_w		proc_int_proc_prescr.ie_origem_proc_filtro%type;
nr_seq_material_w		proc_int_proc_prescr.nr_seq_material%type;
qt_idade_pac_w			proc_int_proc_prescr.qt_idade_min%type;
ie_sexo_prescr_w		proc_int_proc_prescr.ie_sexo%type;
ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
cd_edicao_amb_w			convenio_amb.cd_edicao_amb%type;
vl_coparticipacao_w		Agenda_paciente_auxiliar.vl_coparticipacao%type;
nr_Seq_inf_add_w		prescr_proced_inf_adic.nr_sequencia%type;
ie_atualizar_obs_prescr_w		varchar(1);
nr_seq_contraste_w		procedimento_guia_wint.nr_seq_contraste%type;
nr_crm_w            procedimento_guia_wint.nr_crm%type;
nr_ano_guia_w            procedimento_guia_wint.nr_ano_guia%type;

C01 CURSOR FOR
	SELECT
		ds_observacao,
	    cd_procedimento,
		ie_origem_proced,
		ie_status_agenda,
		ie_autorizacao,
		coalesce(cd_medico_exec, cd_medico_exec_w),
		ie_lado,
		nr_seq_proc_interno,
		--hr_inicio
		obter_data_maior(hr_inicio,clock_timestamp()),
		cd_setor_origem,
		cd_setor_destino,
		0 nr_seq_agenda_princ,
		substr(obter_estagio_autor_agepac(nr_seq_agenda_p,'S'),1,255),
		CD_MEDICO,
		(	SELECT	max(z.nr_sequencia)
			from	topografia_dor z
			where	1=1
			and	z.nr_sequencia = a.cd_topografia_proced
			and	z.ie_prescricao = 'S' ) nr_seq_topografia,
		substr(obter_desc_indicacao_ageint(a.nr_sequencia,'P'),0,255) ds_dado_clinico,
		a.ie_anestesia,
		(select max(x.vl_coparticipacao) from agenda_paciente_auxiliar x where x.nr_seq_agenda = nr_seq_agenda_p)
	from	Agenda_paciente a
	where	nr_sequencia	= nr_seq_agenda_p
	  and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '');

c02 CURSOR FOR
	SELECT	cd_setor_atendimento
	from	procedimento_setor_atend
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and	cd_estabelecimento	= cd_estabelecimento_w
	order by ie_prioridade desc;

C03 CURSOR FOR
	SELECT	b.cd_procedimento,
		b.ie_origem_proced,
		a.ie_status_agenda,
		b.ie_autorizacao,
		coalesce(b.cd_medico, coalesce(a.cd_medico_exec, cd_medico_exec_w)),
		b.ie_lado,
		b.nr_seq_proc_interno,
		a.hr_inicio,
		a.cd_setor_origem,
		a.cd_setor_destino,
		coalesce(b.nr_seq_agenda_princ,0) nr_seq_agenda_princ,
		substr(obter_estagio_autor_agepac(nr_seq_agenda_p,'S'),1,255),
		(	SELECT	max(z.nr_sequencia)
			from	topografia_dor z
			where	1=1
			and	z.nr_sequencia = b.cd_topografia_proced
			and	z.ie_prescricao = 'S' ) nr_seq_topografia,
			b.CD_MEDICO_REQ,
		substr(obter_desc_indicacao_ageint(a.nr_sequencia,'P'),0,255) ds_dado_clinico,
		a.ie_anestesia,
		(select max(x.vl_coparticipacao) from agenda_paciente_auxiliar x where x.nr_seq_agenda = nr_seq_agenda_p)
	from 	agenda_paciente a,
		Agenda_paciente_proc b
	where  a.nr_sequencia	= nr_seq_agenda_p
	and	a.nr_sequencia	= b.nr_sequencia
	and	not exists (	select	1
				from 	ageint_itens_adicionais x
				where 	x.nr_sequencia = b.nr_seq_item_adic_ageint
				and	coalesce(x.nr_seq_regra_lanc,0) <> 0)
	order by nr_seq_agenda_princ;

C04 CURSOR FOR
	SELECT	b.cd_procedimento,
		b.ie_origem_proced,
		a.ie_status_agenda,
		a.ie_autorizacao,
		case
		  when cd_tipo_agenda_p in (3, 4) then CASE WHEN ie_medico_req_age_cons_w='S' THEN  a.cd_medico_req  ELSE c.cd_pessoa_fisica END
		  when cd_tipo_agenda_p = 5 then a.cd_medico
		  else a.cd_medico
		end cd_medico,
		b.nr_seq_proc_interno,
		a.dt_agenda,
		substr(obter_senha_autor_agecons(nr_seq_agenda_p),1,255)
	from 	agenda_consulta a,
		Agenda_consulta_proc b,
		agenda c
	where  a.nr_sequencia	= nr_seq_agenda_p
	and	a.nr_sequencia	= b.nr_seq_agenda
	and a.cd_agenda = c.cd_agenda;

C05 CURSOR FOR
	SELECT	cd_setor_atendimento
	from	proc_interno_setor
	where	nr_seq_proc_interno = nr_seq_proc_interno_w
	and	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w
	and	coalesce(cd_perfil,obter_perfil_ativo) = obter_perfil_ativo
	and	((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_medico_prescr_w,cd_especialidade) = 'S'))
	order by nr_prioridade desc;


BEGIN

ie_utilizar_equip_presc_w := Obter_Param_Usuario(869, 417, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_utilizar_equip_presc_w);

select	coalesce(max(b.cd_estabelecimento),1),
	max(b.nr_seq_classificacao),
	max(ie_tipo_atendimento),
	max(obter_convenio_atendimento(b.nr_atendimento)),
	max(obter_categoria_atendimento(b.nr_atendimento)),
	coalesce(max(obter_setor_atendimento(b.nr_atendimento)),0),
	max(a.cd_setor_atendimento),
	max(a.cd_medico)
into STRICT	cd_estabelecimento_w,
	nr_seq_classificacao_w,
	ie_tipo_atendimento_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_setor_atend_w,
	cd_setor_prescricao_w,
	cd_medico_prescr_w
from	atendimento_paciente b,
	prescr_medica a
where	a.nr_atendimento	= b.nr_atendimento
and	a.nr_prescricao		= nr_prescricao_p;

select	max(Obter_Plano_Atendimento(nr_atendimento_p,'C'))
into STRICT	cd_plano_w
;

select	obter_idade_pf(cd_pessoa_fisica, clock_timestamp(), 'A')
into STRICT	qt_idade_pac_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

ie_sexo_prescr_w := Obter_Sexo_Prescricao(nr_prescricao_p);

select 	max(ie_tipo_convenio)
into STRICT	ie_tipo_convenio_w
from 	convenio
where 	cd_convenio = cd_convenio_w;

ie_origem_proc_filtro_w := Obter_Origem_Proced_Cat(cd_estabelecimento_w, ie_tipo_atendimento_w, ie_tipo_convenio_w, cd_convenio_w, cd_categoria_w);

select	coalesce(max(cd_edicao_amb),0)
into STRICT	cd_edicao_amb_w
from 	convenio_amb
where (cd_estabelecimento     = cd_estabelecimento_w)
and (CD_CONVENIO            = cd_convenio_w)
and (coalesce(IE_SITUACAO,'A')   = 'A')
and	((coalesce(cd_categoria_w,'0') = '0') or (cd_categoria = cd_categoria_w))
and 	(DT_INICIO_VIGENCIA     =
		(SELECT	max(dt_inicio_vigencia)
		from 	convenio_amb a
		where (a.cd_estabelecimento  	= cd_estabelecimento_w)
		and (a.cd_convenio         	= cd_convenio_w)
		and (coalesce(A.IE_SITUACAO,'A')	= 'A')
		and	((coalesce(cd_categoria_w,'0') = '0') or (a.cd_categoria = cd_categoria_w))
		and (A.DT_INICIO_VIGENCIA 	<=  clock_timestamp())));

if (cd_tipo_agenda_p	= 2) then
	select	max(b.cd_pessoa_fisica)
	into STRICT	cd_medico_exec_w
	from	agenda b,
		agenda_paciente a
	where 	a.nr_sequencia	= nr_seq_agenda_p
	and	a.cd_agenda		= b.cd_agenda;
else
	select	max(b.cd_pessoa_fisica)
	into STRICT	cd_medico_exec_w
	from	agenda b,
		agenda_consulta a
	where 	a.nr_sequencia	= nr_seq_agenda_p
	and	a.cd_agenda		= b.cd_agenda;
end if;

select	Obter_Valor_Param_Usuario(916, 47, obter_perfil_ativo, nm_usuario_p, 0)
into STRICT	ds_setor_param_w
;

qt_ambos_w := Obter_Param_Usuario(916, 163, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_ambos_w);
ie_gerar_proc_adic_w := Obter_Param_Usuario(916, 301, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_proc_adic_w);
ie_alterar_proc_conv_w := Obter_Param_Usuario(916, 732, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_alterar_proc_conv_w);
ie_qtd_proc_interno_w := Obter_Param_Usuario(916, 385, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_qtd_proc_interno_w);
ie_setor_exclusivo_w := Obter_Param_Usuario(916, 840, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_setor_exclusivo_w);
ie_setor_entrega_w := Obter_Param_Usuario(916, 773, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_setor_entrega_w);
ie_considera_regra_med_exame_w := Obter_Param_Usuario(916, 838, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_considera_regra_med_exame_w);
ie_considera_regra_med_cons_w := Obter_Param_Usuario(916, 1050, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_considera_regra_med_cons_w);
ie_gerar_med_adicional_w := Obter_param_usuario(916, 1188, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_med_adicional_w);
ie_atualizar_obs_prescr_w := Obter_param_usuario(916, 1063, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualizar_obs_prescr_w);
ie_medico_req_age_cons_w := Obter_Param_Usuario(821, 87, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_req_age_cons_w);


nr_seq_interno_w	:= 0;
if (cd_tipo_agenda_p	= 2) then
	OPEN C01;
	LOOP
	FETCH C01 into
		ds_observacao_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_status_agenda_w,
		ie_autorizacao_w,
		cd_medico_agenda_w,
		ie_lado_w,
		nr_seq_proc_interno_w,
		hr_inicio_w,
		cd_setor_origem_w,
		cd_setor_destino_w,
		nr_seq_agenda_princ_w,
		cd_senha_w,
		cd_med_requisitante_w,
		nr_seq_topografia_w,
		ds_dado_clinico_w,
		ie_anestesia_w,
		vl_coparticipacao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (ie_atualizar_obs_prescr_w = 'N') then
			ds_observacao_w := null;
		end if;

		if (ie_alterar_proc_conv_w = 'S')
		and (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			cd_procedimento_ww := Obter_Cod_Proc_Interno_conv2(	nr_seq_proc_interno_w,
										cd_convenio_w,
										cd_categoria_w,
										clock_timestamp(),
										cd_estabelecimento_w);
			if (cd_procedimento_ww IS NOT NULL AND cd_procedimento_ww::text <> '') then
				cd_procedimento_w := cd_procedimento_ww;
			end if;

			ie_origem_proced_ww := Obter_Cod_Proc_Interno_conv2(	nr_seq_proc_interno_w,
										cd_convenio_w,
										cd_categoria_w,
										clock_timestamp(),
										cd_estabelecimento_w,
										2);

			if (ie_origem_proced_ww IS NOT NULL AND ie_origem_proced_ww::text <> '') then
				ie_origem_proced_w := ie_origem_proced_ww;
			end if;

		end if;

		cd_setor_proc_w	:= null;

		select	max(cd_setor_exclusivo)
		into STRICT	cd_setor_exclusivo_w
		from	procedimento
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;

		if (ie_setor_exclusivo_w = 'S') then
			select	max(a.cd_setor_exclusivo)
			into STRICT	cd_setor_proc_w
			from	agenda a,
				agenda_paciente b
			where	a.cd_agenda = b.cd_agenda
			and	b.nr_sequencia = nr_seq_agenda_p;
		elsif (Upper(ds_setor_param_w) = 'PROCEDIMENTO') then
			begin
			open	c02;
			loop
			fetch	c02 into
				cd_setor_proc_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin

				cd_setor_proc_w	:= cd_setor_proc_w;
				end;
			end loop;
			close c02;
			if (coalesce(cd_setor_proc_w,0) = 0) then
				begin
				cd_setor_proc_interno_w	:= null;
				open C05;
				loop
				fetch C05 into
					cd_setor_proc_interno_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin
					cd_setor_proc_interno_w	:=	cd_setor_proc_interno_w;
					end;
				end loop;
				close C05;
				cd_setor_proc_w	:= cd_setor_proc_interno_w;
				end;
			end if;

			end;
		end if;

		select	coalesce(max(a.nr_seq_agenda_int),0),
			max((select max(x.nr_seq_contraste) from procedimento_guia_wint x where x.nr_seq_ageint_item = a.nr_sequencia )),
			coalesce(max(a.crm_medico_externo),0),
			coalesce(max(a.nr_ano_guia),0)
		into STRICT	nr_seq_ageint_w,
			nr_seq_contraste_w,
			nr_crm_w,
			nr_ano_guia_w
		from	agenda_integrada_item a
		where	a.nr_seq_agenda_exame	= nr_seq_agenda_p;

		if (nr_seq_ageint_w	> 0) then
			cd_senha_w	:= obter_estagio_autor_ageint(nr_seq_ageint_w, null, nr_seq_agenda_p, 'S');
		end if;

		select coalesce(max(nr_sequencia),0) + 1
		into STRICT nr_sequencia_w
		from prescr_procedimento
		where nr_prescricao	= nr_prescricao_p;

		select	max(ie_situacao)
		into STRICT	ie_situacao_w
		from	setor_atendimento
		where	cd_setor_atendimento = coalesce(cd_setor_proc_w, cd_setor_atendimento_p);

		dt_resultado_w := obter_entrega_laudo(nr_prescricao_p, coalesce(hr_inicio_w,clock_timestamp()), nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, coalesce(coalesce(cd_setor_proc_w,cd_setor_exclusivo_w), cd_setor_atendimento_p), nm_usuario_p, dt_resultado_w);

		select	max(nr_seq_exame_lab)
		into STRICT	nr_seq_exame_w
		from	proc_interno
		where	nr_Sequencia = nr_seq_proc_interno_w;

		IF (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
			select coalesce(max(cd_material_exame),''),
			       coalesce(max(nr_sequencia),'')
			into STRICT	cd_material_exame_w,
					nr_seq_material_w
			from (	SELECT b.cd_material_exame,
					b.nr_sequencia
					from	material_exame_lab b,
							exame_lab_material a
					where a.nr_seq_material	= b.nr_sequencia
					and a.nr_seq_exame		= nr_seq_exame_w
					and a.ie_situacao		= 'A'
					order by a.ie_prioridade) alias5 LIMIT 1;
		END IF;


		if (ie_considera_regra_med_exame_w = 'S') then
			cd_medico_agenda_w	:= null;
			SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, '0', coalesce(hr_inicio_w,clock_timestamp()), nr_seq_classificacao_w, 'N', null, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;

			if (ie_medico_executor_w = 'F') then
				cd_medico_agenda_w	:= cd_medico_executor_w;
			end if;
		end if;

		if (ie_qtd_proc_interno_w	= 'S') then
			qt_proc_prescr_w := Obter_Qtd_Proc_Tab_Interno(nr_seq_proc_interno_w, null, nr_atendimento_p, 0, qt_proc_prescr_w);
		end if;

		select	nextval('prescr_procedimento_seq')
		into STRICT	nr_seq_interno_w
		;

		if	coalesce(ie_utilizar_equip_presc_w,'N') = 'S' then
			select	max(cd_equipamento)
			into STRICT	cd_equipamento_w
			from	agenda_pac_equip
			where	nr_seq_agenda = nr_seq_agenda_p;
		end if;

		-- Validacao para nao incluir mais de um medico
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_prescr_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and		nr_seq_exame  	= nr_seq_exame_w;



		if (nr_seq_prescr_w > 0) and (ie_gerar_med_adicional_w = 'S') and (cd_medico_prescr_w <> cd_med_requisitante_w) and (cd_medico_prescr_w IS NOT NULL AND cd_medico_prescr_w::text <> '') and (cd_med_requisitante_w IS NOT NULL AND cd_med_requisitante_w::text <> '') then

			select	count(*)
			into STRICT	qt_medico_adic_exame_w
			from	prescr_proced_prof_adic
			where	nr_prescricao 		= nr_prescricao_p
			and		cd_profissional 	= cd_med_requisitante_w
			and 	nr_seq_procedimento = nr_seq_prescr_w;


			if (qt_medico_adic_exame_w = 0) then
				select	nextval('prescr_proced_prof_adic_seq')
				into STRICT	nr_seq_prof_adic_w
				;

				insert into prescr_proced_prof_adic(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					cd_profissional,
					ie_tipo_profissional,
					nr_seq_procedimento)
				values (	nr_seq_prof_adic_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_p,
					cd_med_requisitante_w,
					'1',
					nr_seq_prescr_w);
			end if;
		else

			insert into Prescr_Procedimento(
				nr_prescricao, nr_sequencia, cd_procedimento,
				qt_procedimento, dt_atualizacao, nm_usuario,
				cd_motivo_baixa, ie_origem_proced,
				ie_urgencia, cd_setor_atendimento,
				dt_prev_execucao, ie_suspenso, ie_status_atend,
				ie_origem_inf, dt_resultado, cd_medico_exec, ie_autorizacao, nr_seq_interno, ie_lado,ie_anestesia,
				ie_avisar_result, nr_seq_proc_interno,cd_setor_coleta,cd_setor_entrega, nr_seq_exame, cd_material_exame,
				nr_seq_agenda, cd_senha, cd_equipamento, CD_MEDICO_SOLICITANTE, nr_seq_topografia, ds_dado_clinico, dt_inicio, ds_observacao,
				nr_seq_contraste)
			values (
				nr_prescricao_p, nr_sequencia_w, cd_procedimento_w,
				CASE WHEN coalesce(qt_proc_prescr_w,0)=0 THEN  CASE WHEN ie_lado_w='A' THEN qt_ambos_w  ELSE 1 END   ELSE qt_proc_prescr_w END , clock_timestamp(), nm_usuario_p,
				0, ie_origem_proced_w,
				'N', CASE WHEN ie_situacao_w='I' THEN null  ELSE coalesce(coalesce(cd_setor_proc_w,cd_setor_exclusivo_w), cd_setor_atendimento_p) END ,
				coalesce(hr_inicio_w,clock_timestamp()), 'N', 5, '1',
				dt_resultado_w, cd_medico_agenda_w, ie_autorizacao_w, nr_seq_interno_w, ie_lado_w,ie_anestesia_w,
				'N', nr_seq_proc_interno_w,cd_setor_origem_w,cd_setor_destino_w, nr_seq_exame_w, cd_material_exame_w,
				nr_seq_agenda_p, cd_senha_w, cd_equipamento_w, CASE WHEN ie_gerar_med_adicional_w='S' THEN coalesce(cd_med_requisitante_w, null)  ELSE null END , nr_seq_topografia_w,
				case when pkg_i18n.get_user_locale in ('de_DE', 'de_AT') then ds_dado_clinico_w else null end, coalesce(hr_inicio_w, clock_timestamp()), ds_observacao_w,
				nr_seq_contraste_w);

			if (cd_medico_agenda_w IS NOT NULL AND cd_medico_agenda_w::text <> '') then
				select 	max(nr_sequencia)
				into STRICT	nr_Seq_inf_add_w
				from 	prescr_proced_inf_adic
				where 	nr_prescricao		= nr_prescricao_p
				and	nr_seq_prescricao	= nr_sequencia_w;

				if (coalesce(nr_Seq_inf_add_w,0) = 0) then
					insert into prescr_proced_inf_adic(
								nr_sequencia,
								dt_atualizacao,
							        nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								dt_registro,
								nr_prescricao,
								nr_seq_prescricao,
								cd_pessoa_fisica,
								ie_situacao,
								vl_coparticipacao,
								cd_crm_medico,
								nr_ano_guia)
							values ( nextval('prescr_proced_inf_adic_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nr_prescricao_p,
								nr_sequencia_w,
								cd_medico_agenda_w,
								'A',
								vl_coparticipacao_w,
								nr_crm_w,
								nr_ano_guia_w);

				else
					update 	prescr_proced_inf_adic
					set	vl_coparticipacao = vl_coparticipacao_w
					where 	nr_sequencia = nr_Seq_inf_add_w;
				end if;
			end if;
		end if;

		if (ie_setor_entrega_w	= 'S') and (coalesce(coalesce(cd_setor_proc_w,cd_setor_exclusivo_w),0) > 0) then
			update	prescr_medica
			set	cd_Setor_entrega	= coalesce(cd_setor_proc_w,cd_setor_exclusivo_w)
			where	nr_prescricao		= nr_prescricao_p;
			commit;
		end if;

		nr_seq_proc_prescr_ag_W	:= nr_sequencia_w;

		end;
	END LOOP;
	Close C01;

	begin
		select 	a.ie_proced_vinculado,
        m.cd_material_exame
		into STRICT	ie_proced_vinculado_w,
				cd_material_exame_w
		FROM prescr_procedimento p, proc_int_proc_prescr a
LEFT OUTER JOIN material_exame_lab m ON (a.nr_seq_material = m.nr_sequencia)
WHERE 1 = 1  and ((coalesce(a.cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w)) and ((coalesce(a.ie_permite_duplicado,'N')	= 'S') or
				 (not exists(	SELECT	1
						from	prescr_procedimento b
						where	1 = 1
						and	((coalesce(a.nr_seq_proc_int_adic,0) = 0) or (b.nr_seq_proc_interno = a.nr_seq_proc_int_adic))
						and	((coalesce(a.cd_procedimento,0) = 0) or (b.cd_procedimento = a.cd_procedimento))
						and	b.nr_prescricao	= nr_prescricao_p))) and (((coalesce(qt_idade_pac_w::text, '') = '') or (coalesce(a.qt_idade_min::text, '') = '' and coalesce(a.qt_idade_max::text, '') = '')) or
				 ((qt_idade_pac_w IS NOT NULL AND qt_idade_pac_w::text <> '') and (qt_idade_pac_w between coalesce(a.qt_idade_min,qt_idade_pac_w) and coalesce(a.qt_idade_max,qt_idade_pac_w)))) and ((ie_sexo = ie_sexo_prescr_w) or (coalesce(ie_sexo::text, '') = '')) and coalesce(a.cd_convenio,cd_convenio_w) = cd_convenio_w and ((coalesce(a.cd_edicao_amb::text, '') = '') or (a.cd_edicao_amb = cd_edicao_amb_w)) and ((coalesce(a.cd_convenio_excluir::text, '') = '') or (a.cd_convenio_excluir <> cd_convenio_w)) and ((coalesce(a.cd_categoria_convenio::text, '') = '') or (a.cd_categoria_convenio = cd_categoria_w)) and ((a.cd_plano_convenio	= cd_plano_w) or (coalesce(a.cd_plano_convenio::text, '') = '')) and ((coalesce(a.cd_medico_prescritor::text, '') = '') or (a.cd_medico_prescritor = p.cd_medico_exec)) and ((coalesce(a.cd_medico_excluir::text, '') = '') or (a.cd_medico_excluir <> p.cd_medico_exec)) and ((a.ie_origem_proc_filtro = ie_origem_proc_filtro_w) or (coalesce(a.ie_origem_proc_filtro::text, '') = '')) and obter_conv_excluir_proc_assoc(a.nr_sequencia, cd_convenio_w, cd_edicao_amb_w, ie_origem_proc_filtro_w) = 'S' and ((coalesce(cd_perfil::text, '') = '') or (cd_perfil = obter_perfil_ativo)) and coalesce(a.ie_situacao,'A')	= 'A' and a.nr_seq_proc_interno	= p.nr_seq_proc_interno and p.nr_sequencia		= nr_seq_proc_prescr_ag_W and p.nr_prescricao		= nr_prescricao_p and coalesce(a.ie_tipo_convenio,ie_tipo_convenio_w)      = ie_tipo_convenio_w   LIMIT 1;

	exception when no_data_found then
		ie_proced_vinculado_w := null;
	end;

	OPEN C03;
	LOOP
	FETCH C03 into
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_status_agenda_w,
		ie_autorizacao_w,
		cd_medico_agenda_w,
		ie_lado_w,
		nr_seq_proc_interno_w,
		hr_inicio_w,
		cd_setor_origem_w,
		cd_setor_destino_w,
		nr_seq_agenda_princ_w,
		cd_senha_w,
		nr_seq_topografia_w,
		cd_med_requisitante_w,
		ds_dado_clinico_w,
		ie_anestesia_w,
		vl_coparticipacao_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		if (ie_alterar_proc_conv_w = 'S')
		and (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			cd_procedimento_ww := Obter_Cod_Proc_Interno_conv2(	nr_seq_proc_interno_w,
										cd_convenio_w,
										cd_categoria_w,
										clock_timestamp(),
										cd_estabelecimento_w);
			if (cd_procedimento_ww IS NOT NULL AND cd_procedimento_ww::text <> '') then
				cd_procedimento_w := cd_procedimento_ww;
			end if;
		end if;

		nr_seq_proc_princ_w	:= null;

		if (nr_seq_interno_w > 0) and (nr_seq_agenda_princ_w > 0) then
			nr_seq_proc_princ_w	:= nr_seq_interno_w;
		end if;

		cd_setor_proc_w	:= null;
		if (Upper(ds_setor_param_w) = 'PROCEDIMENTO') then
			begin
			open	c02;
			loop
			fetch	c02 into
				cd_setor_proc_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin

				cd_setor_proc_w	:= cd_setor_proc_w;
				end;
			end loop;
			close c02;

			if (coalesce(cd_setor_proc_w,0) = 0) then
				begin
				cd_setor_proc_interno_w	:= null;
				open C05;
				loop
				fetch C05 into
					cd_setor_proc_interno_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin
					cd_setor_proc_interno_w	:=	cd_setor_proc_interno_w;
					end;
				end loop;
				close C05;
				cd_setor_proc_w	:= cd_setor_proc_interno_w;
				end;
			end if;

			end;
		ELSIF (Upper(ds_setor_param_w) = 'PROC INTERNO') THEN
			BEGIN

			SELECT	coalesce(MAX(Obter_Setor_exec_proc_interno(nr_seq_proc_interno_w, NULL, ie_tipo_atendimento_w, cd_convenio_w, cd_categoria_w)),null)
			INTO STRICT	cd_setor_proc_w
			;

			END;
		end if;

		select	coalesce(max(a.nr_seq_agenda_int),0),
			max((select max(x.nr_seq_contraste) from procedimento_guia_wint x where x.nr_seq_ageint_item = a.nr_sequencia )),
			coalesce(max(a.crm_medico_externo),0),
			coalesce(max(a.nr_ano_guia),0)
		into STRICT	nr_seq_ageint_w,
			nr_seq_contraste_w,
			nr_crm_w,
			nr_ano_guia_w
		from	agenda_integrada_item a
		where	a.nr_seq_agenda_cons	= nr_seq_agenda_p;

		if (nr_seq_ageint_w	> 0) then
			cd_senha_w	:= obter_estagio_autor_ageint(nr_seq_ageint_w, nr_seq_agenda_p, null, 'S');
		end if;

		select coalesce(max(nr_sequencia),0) + 1
		into STRICT nr_sequencia_w
		from prescr_procedimento
		where nr_prescricao	= nr_prescricao_p;

		dt_resultado_w := obter_entrega_laudo(nr_prescricao_p, coalesce(hr_inicio_w,clock_timestamp()), nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_p, nm_usuario_p, dt_resultado_w);

		select	max(nr_seq_exame_lab)
		into STRICT	nr_seq_exame_w
		from	proc_interno
		where	nr_Sequencia = nr_seq_proc_interno_w;
		select	max(ie_situacao)
		into STRICT	ie_situacao_w
		from	setor_atendimento
		where	cd_setor_atendimento = coalesce(cd_setor_proc_w, cd_setor_atendimento_p);

		if (ie_considera_regra_med_exame_w = 'S') then
			cd_medico_agenda_w	:= null;
			SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, '0', coalesce(hr_inicio_w,clock_timestamp()), nr_seq_classificacao_w, 'N', null, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;

			if (ie_medico_executor_w = 'F') then
				cd_medico_agenda_w	:= cd_medico_executor_w;
			end if;
		end if;

		if (ie_qtd_proc_interno_w	= 'S') then
			qt_proc_prescr_w := Obter_Qtd_Proc_Tab_Interno(nr_seq_proc_interno_w, null, nr_atendimento_p, 0, qt_proc_prescr_w);
		end if;

		if	coalesce(ie_utilizar_equip_presc_w,'N') = 'S' then
			select	max(cd_equipamento)
			into STRICT	cd_equipamento_w
			from	agenda_pac_equip
			where	nr_seq_agenda = nr_seq_agenda_p;
		end if;

		-- Validacao para nao incluir mais de um medico
		select	coalesce(max(nr_sequencia),0),
				max(CD_MEDICO_SOLICITANTE)
		into STRICT	nr_seq_prescr_w,
				cd_medico_presc_proc_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and		nr_seq_exame  	= nr_seq_exame_w;

		if (nr_seq_prescr_w > 0) and (ie_gerar_med_adicional_w = 'S') and (cd_medico_presc_proc_w <> cd_med_requisitante_w) and (cd_medico_presc_proc_w IS NOT NULL AND cd_medico_presc_proc_w::text <> '') and (cd_med_requisitante_w IS NOT NULL AND cd_med_requisitante_w::text <> '') then

			select	count(*)
			into STRICT	qt_medico_adic_exame_w
			from	prescr_proced_prof_adic
			where	nr_prescricao 		= nr_prescricao_p
			and		cd_profissional 	= cd_med_requisitante_w
			and 	nr_seq_procedimento = nr_seq_prescr_w;


			if (qt_medico_adic_exame_w = 0) then
				select	nextval('prescr_proced_prof_adic_seq')
				into STRICT	nr_seq_prof_adic_w
				;

				insert into prescr_proced_prof_adic(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					cd_profissional,
					ie_tipo_profissional,
					nr_seq_procedimento)
				values (	nr_seq_prof_adic_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_p,
					cd_med_requisitante_w,
					'1',
					nr_seq_prescr_w);
			end if;
		else

			insert into Prescr_Procedimento(
				nr_prescricao, nr_sequencia, cd_procedimento,
				qt_procedimento, dt_atualizacao, nm_usuario,
				cd_motivo_baixa, ie_origem_proced,
				ie_urgencia, cd_setor_atendimento,
				dt_prev_execucao, ie_suspenso, ie_status_atend,
				ie_origem_inf, dt_resultado, cd_medico_exec, ie_autorizacao, nr_seq_interno, ie_lado, ie_anestesia,
				ie_avisar_result, nr_seq_proc_interno,cd_setor_coleta,cd_setor_entrega, nr_seq_proc_princ, nr_seq_exame,
				nr_seq_agenda, cd_senha,
				nr_seq_topografia, cd_equipamento, CD_MEDICO_SOLICITANTE, ds_dado_clinico,dt_inicio, cd_material_exame,
				nr_seq_contraste)
			values (
				nr_prescricao_p, nr_sequencia_w, cd_procedimento_w,
				CASE WHEN coalesce(qt_proc_prescr_w,0)=0 THEN CASE WHEN ie_lado_w='A' THEN qt_ambos_w  ELSE 1 END   ELSE qt_proc_prescr_w END , clock_timestamp(), nm_usuario_p,
				0, ie_origem_proced_w,
				'N', CASE WHEN ie_situacao_w='I' THEN null  ELSE coalesce(cd_setor_proc_w, cd_setor_atendimento_p) END ,
				coalesce(hr_inicio_w,clock_timestamp()), 'N', 5, '1',
				dt_resultado_w, cd_medico_agenda_w, ie_autorizacao_w, nextval('prescr_procedimento_seq'), ie_lado_w,ie_anestesia_w,
				'N', nr_seq_proc_interno_w,cd_setor_origem_w,cd_setor_destino_w, CASE WHEN ie_proced_vinculado_w='S' THEN nr_seq_proc_princ_w  ELSE null END , nr_seq_exame_w,
				nr_seq_agenda_p, cd_senha_w,
				nr_seq_topografia_w, cd_equipamento_w, CASE WHEN ie_gerar_med_adicional_w='S' THEN coalesce(cd_med_requisitante_w, null)  ELSE null END ,
				case when pkg_i18n.get_user_locale in ('de_DE', 'de_AT') then ds_dado_clinico_w else null end, coalesce(hr_inicio_w,clock_timestamp()), cd_material_exame_w,
				nr_seq_contraste_w);
			if (ie_gerar_proc_adic_w = 'S') then
				CALL Ageint_Gerar_Prescr_Proc_Assoc(Nr_prescricao_p, nr_sequencia_w);
			end if;

			if (cd_medico_agenda_w IS NOT NULL AND cd_medico_agenda_w::text <> '') then
				select 	max(nr_sequencia)
				into STRICT	nr_Seq_inf_add_w
				from 	prescr_proced_inf_adic
				where 	nr_prescricao		= nr_prescricao_p
				and	nr_seq_prescricao	= nr_sequencia_w;

				if (coalesce(nr_Seq_inf_add_w,0) = 0) then

					insert into prescr_proced_inf_adic(
								nr_sequencia,
								dt_atualizacao,
							        nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								dt_registro,
								nr_prescricao,
								nr_seq_prescricao,
								cd_pessoa_fisica,
								ie_situacao,
								vl_coparticipacao,
								cd_crm_medico,
								nr_ano_guia)
							values ( nextval('prescr_proced_inf_adic_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nr_prescricao_p,
								nr_sequencia_w,
								cd_medico_agenda_w,
								'A',
								vl_coparticipacao_w,
								nr_crm_w,
								nr_ano_guia_w);

				else
					update 	prescr_proced_inf_adic
					set	vl_coparticipacao = vl_coparticipacao_w
					where 	nr_sequencia = nr_Seq_inf_add_w;
				end if;
			end if;
		end if;

		CALL Gerar_med_mat_assoc(nr_prescricao_p, nr_sequencia_w);
		end;
	END LOOP;
	Close C03;

	if (ie_gerar_proc_adic_w = 'S') then
			CALL Ageint_Gerar_Prescr_Proc_Assoc(Nr_prescricao_p, nr_seq_proc_prescr_ag_W);
		end if;

		CALL Gerar_med_mat_assoc(nr_prescricao_p, nr_seq_proc_prescr_ag_W);
elsif (cd_tipo_agenda_p	in (3,4)) then
	OPEN C04;
	LOOP
	FETCH C04 into
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_status_agenda_w,
		ie_autorizacao_w,
		cd_medico_agenda_w,
		nr_seq_proc_interno_w,
		hr_inicio_w,
		cd_senha_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin

		if (ie_alterar_proc_conv_w = 'S')
		and (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			cd_procedimento_ww := Obter_Cod_Proc_Interno_conv2(	nr_seq_proc_interno_w,
										cd_convenio_w,
										cd_categoria_w,
										clock_timestamp(),
										cd_estabelecimento_w);
			if (cd_procedimento_ww IS NOT NULL AND cd_procedimento_ww::text <> '') then
				cd_procedimento_w := cd_procedimento_ww;
			end if;
		end if;

		nr_seq_proc_princ_w	:= null;

		if (nr_seq_interno_w > 0) and (nr_seq_agenda_princ_w > 0) then
			nr_seq_proc_princ_w	:= nr_seq_interno_w;
		end if;

		cd_setor_proc_w	:= null;
		if (Upper(ds_setor_param_w) = 'PROCEDIMENTO') then
			begin
			open	c02;
			loop
			fetch	c02 into
				cd_setor_proc_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin

				cd_setor_proc_w	:= cd_setor_proc_w;
				end;
			end loop;
			close c02;


			if (coalesce(cd_setor_proc_w,0) = 0) then
				begin
				cd_setor_proc_interno_w	:= null;
				open C05;
				loop
				fetch C05 into
					cd_setor_proc_interno_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin
					cd_setor_proc_interno_w	:=	cd_setor_proc_interno_w;
					end;
				end loop;
				close C05;
				cd_setor_proc_w	:= cd_setor_proc_interno_w;
				end;
			end if;
			end;
		end if;

		select coalesce(max(nr_sequencia),0) + 1
		into STRICT nr_sequencia_w
		from prescr_procedimento
		where nr_prescricao	= nr_prescricao_p;

		dt_resultado_w := obter_entrega_laudo(nr_prescricao_p, coalesce(hr_inicio_w,clock_timestamp()), nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_p, nm_usuario_p, dt_resultado_w);

		select	max(nr_seq_exame_lab)
		into STRICT	nr_seq_exame_w
		from	proc_interno
		where	nr_Sequencia = nr_seq_proc_interno_w;

		select	max(ie_situacao)
		into STRICT	ie_situacao_w
		from	setor_atendimento
		where	cd_setor_atendimento = coalesce(cd_setor_proc_w, cd_setor_atendimento_p);

		if (ie_considera_regra_med_cons_w = 'S') then
			cd_medico_agenda_w	:= null;
			SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, '0', coalesce(hr_inicio_w,clock_timestamp()), nr_seq_classificacao_w, 'N', null, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;

			if (ie_medico_executor_w = 'F') then
				cd_medico_agenda_w	:= cd_medico_executor_w;
			end if;
		end if;

		if (ie_qtd_proc_interno_w	= 'S') then
			qt_proc_prescr_w := Obter_Qtd_Proc_Tab_Interno(nr_seq_proc_interno_w, null, nr_atendimento_p, 0, qt_proc_prescr_w);
		end if;
		insert into Prescr_Procedimento(
			nr_prescricao, nr_sequencia, cd_procedimento,
			qt_procedimento, dt_atualizacao, nm_usuario,
			cd_motivo_baixa, ie_origem_proced,
			ie_urgencia, cd_setor_atendimento,
			dt_prev_execucao, ie_suspenso, ie_status_atend,
			ie_origem_inf, dt_resultado, cd_medico_exec, ie_autorizacao, nr_seq_interno, ie_lado,
			ie_avisar_result, nr_seq_proc_interno,cd_setor_coleta,cd_setor_entrega, nr_seq_proc_princ, nr_seq_exame,
			nr_seq_agenda_cons, cd_senha, dt_inicio)
		values (
			nr_prescricao_p, nr_sequencia_w, cd_procedimento_w,
			CASE WHEN coalesce(qt_proc_prescr_w,0)=0 THEN CASE WHEN ie_lado_w='A' THEN qt_ambos_w  ELSE 1 END   ELSE qt_proc_prescr_w END , clock_timestamp(), nm_usuario_p,
			0, ie_origem_proced_w,
			'N', CASE WHEN ie_situacao_w='I' THEN null  ELSE coalesce(cd_setor_proc_w, cd_setor_atendimento_p) END ,
			coalesce(hr_inicio_w,clock_timestamp()), 'N', 5, '1',
			dt_resultado_w, cd_medico_agenda_w, ie_autorizacao_w, nextval('prescr_procedimento_seq'), ie_lado_w,
			'N', nr_seq_proc_interno_w,cd_setor_origem_w,cd_setor_destino_w, nr_seq_proc_princ_w, nr_seq_exame_w,
			nr_seq_agenda_p, cd_senha_w,coalesce(hr_inicio_w,clock_timestamp()));
		if (ie_gerar_proc_adic_w = 'S') then
			CALL Ageint_Gerar_Prescr_Proc_Assoc(Nr_prescricao_p, nr_sequencia_w);
		end if;

		CALL Gerar_med_mat_assoc(nr_prescricao_p, nr_sequencia_w);
		end;
	END LOOP;
	Close C04;
elsif (cd_tipo_agenda_p	= 5) then
	select	max(b.dt_agenda),
		max(b.cd_pessoa_fisica),
		max(b.cd_medico_solic),
		max(b.cd_medico),
		max(b.nr_atendimento),
		max(b.cd_procedimento),
		max(b.ie_origem_proced),
		max(b.nr_seq_proc_interno),
		max(b.ds_observacao),
		max(b.nr_seq_exame),
		max(b.cd_setor_coleta),
		max(b.cd_setor_entrega),
		max(qt_procedimento),
		max(b.cd_Senha)
	into STRICT	dt_agenda_w,
		cd_paciente_w,
		cd_medico_solic_w,
		cd_medico_w,
		nr_atendimento_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		ds_observacao_w,
		nr_seq_exame_w,
		cd_setor_origem_w,
		cd_setor_destino_w,
		qt_procedimento_w,
		cd_senha_w
	from	agenda a,
		agenda_consulta b
	where	a.cd_agenda = b.cd_agenda
	and	b.nr_sequencia = nr_seq_agenda_p;

	if (ie_alterar_proc_conv_w = 'S') and (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		cd_procedimento_ww := Obter_Cod_Proc_Interno_conv2(	nr_seq_proc_interno_w,
									cd_convenio_w,
									cd_categoria_w,
									clock_timestamp(),
									cd_estabelecimento_w);
		if (cd_procedimento_ww IS NOT NULL AND cd_procedimento_ww::text <> '') then
			cd_procedimento_w := cd_procedimento_ww;
		end if;
	end if;

	IF (coalesce(cd_procedimento_w::text, '') = '') and (coalesce(ie_origem_proced_w::text, '') = '') then
		SELECT * FROM obter_proc_tab_interno(nr_seq_proc_interno_w, nr_prescricao_p, nr_atendimento_w, 0, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	END IF;
	IF (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
		/* gerar sequencia */

		select	coalesce(max(a.nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	prescr_procedimento a
		where	a.nr_prescricao = nr_prescricao_p;

		IF (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
			select coalesce(max(cd_material_exame),''),
			       coalesce(max(nr_sequencia),'')
			into STRICT	cd_material_exame_w,
				nr_seq_material_w
			from (	SELECT b.cd_material_exame,
					b.nr_sequencia
					from	material_exame_lab b,
							exame_lab_material a
					where a.nr_seq_material	= b.nr_sequencia
					and a.nr_seq_exame		= nr_seq_exame_w
					and a.ie_situacao		= 'A'
					order by a.ie_prioridade) alias5 LIMIT 1;
		END IF;
		/* gerar sequencia */

		select	nextval('prescr_procedimento_seq')
		into STRICT	nr_seq_interno_w
		;

		select	max(cd_setor_exclusivo)
		into STRICT	cd_setor_exclusivo_w
		from	procedimento
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;

		SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, '0', dt_agenda_w, nr_seq_classificacao_w, 'N', null, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;

		if (ie_medico_executor_w = 'F') then
			cd_medico_agenda_w	:= cd_medico_executor_w;
		end if;
		if (ie_qtd_proc_interno_w	= 'S') then
			qt_proc_prescr_w := Obter_Qtd_Proc_Tab_Interno(nr_seq_proc_interno_w, null, nr_atendimento_p, 0, qt_proc_prescr_w);
		end if;

		/* inserir registro na tabela */

		insert into prescr_procedimento(
							nr_prescricao,
							nr_sequencia,
							cd_procedimento,
							qt_procedimento,
							dt_atualizacao,
							nm_usuario,
							ds_horarios,
							cd_motivo_baixa,
							ie_origem_proced,
							cd_intervalo,
							ie_urgencia,
							cd_setor_atendimento,
							dt_prev_execucao,
							ie_suspenso,
							ie_amostra,
							ie_origem_inf,
							ie_executar_leito,
							nr_agrupamento,
							ie_se_necessario,
							ie_acm,
							nr_ocorrencia,
							ie_status_execucao,
							nr_seq_interno,
							ie_avisar_result,
							nr_seq_proc_interno,
							ds_observacao,
							cd_medico_exec,
							nr_Seq_exame,
							cd_material_exame,
							cd_setor_coleta,
							cd_setor_entrega,
							cd_senha,
							nr_seq_agenda_cons,
							dt_inicio
							)
						values (
							nr_prescricao_p,
							nr_sequencia_w,
							cd_procedimento_w,
							CASE WHEN coalesce(qt_proc_prescr_w,0)=0 THEN coalesce(qt_procedimento_w,1)  ELSE qt_proc_prescr_w END ,
							clock_timestamp(),
							nm_usuario_p,
							null,
							0,
							ie_origem_proced_w,
							null,
							'N',
							coalesce(cd_setor_exclusivo_w,cd_setor_atendimento_p),
							dt_agenda_w,
							'N',
							'N',
							'P',
							'N',
							1,
							'N',
							'N',
							1,
							'10',
							nr_seq_interno_w,
							'N',
							nr_seq_proc_interno_w,
							ds_observacao_w,
							cd_medico_w,
							nr_seq_exame_w,
							cd_material_exame_w,
							cd_setor_origem_w,
							cd_setor_destino_w,
							cd_senha_w,
							nr_seq_agenda_p,
							dt_agenda_w
							);
	END IF;
	OPEN C04;
	LOOP
	FETCH C04 into
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_status_agenda_w,
		ie_autorizacao_w,
		cd_medico_agenda_w,
		nr_seq_proc_interno_w,
		hr_inicio_w,
		cd_senha_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin

		nr_seq_proc_princ_w	:= null;

		if (nr_seq_interno_w > 0) and (nr_seq_agenda_princ_w > 0) then
			nr_seq_proc_princ_w	:= nr_seq_interno_w;
		end if;

		cd_setor_proc_w	:= null;
		if (Upper(ds_setor_param_w) = 'PROCEDIMENTO') then
			begin
			open	c02;
			loop
			fetch	c02 into
				cd_setor_proc_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin

				cd_setor_proc_w	:= cd_setor_proc_w;
				end;
			end loop;
			close c02;

			if (coalesce(cd_setor_proc_w,0) = 0) then
				begin
				cd_setor_proc_interno_w	:= null;
				open C05;
				loop
				fetch C05 into
					cd_setor_proc_interno_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin
					cd_setor_proc_interno_w	:=	cd_setor_proc_interno_w;
					end;
				end loop;
				close C05;
				cd_setor_proc_w	:= cd_setor_proc_interno_w;
				end;
			end if;
		end;
		end if;
		select coalesce(max(nr_sequencia),0) + 1
		into STRICT nr_sequencia_w
		from prescr_procedimento
		where nr_prescricao	= nr_prescricao_p;

		dt_resultado_w := obter_entrega_laudo(nr_prescricao_p, coalesce(hr_inicio_w,clock_timestamp()), nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_p, nm_usuario_p, dt_resultado_w);

		select	max(nr_seq_exame_lab)
		into STRICT	nr_seq_exame_w
		from	proc_interno
		where	nr_Sequencia = nr_seq_proc_interno_w;

		select	max(ie_situacao)
		into STRICT	ie_situacao_w
		from	setor_atendimento
		where	cd_setor_atendimento = coalesce(cd_setor_proc_w, cd_setor_atendimento_p);

		SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, '0', coalesce(hr_inicio_w,clock_timestamp()), nr_seq_classificacao_w, 'N', null, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;

		if (ie_medico_executor_w = 'F') then
			cd_medico_agenda_w	:= cd_medico_executor_w;
		end if;

		if (ie_qtd_proc_interno_w	= 'S') then
			qt_proc_prescr_w := Obter_Qtd_Proc_Tab_Interno(nr_seq_proc_interno_w, null, nr_atendimento_p, 0, qt_proc_prescr_w);
		end if;

		insert into Prescr_Procedimento(
			nr_prescricao, nr_sequencia, cd_procedimento,
			qt_procedimento, dt_atualizacao, nm_usuario,
			cd_motivo_baixa, ie_origem_proced,
			ie_urgencia, cd_setor_atendimento,
			dt_prev_execucao, ie_suspenso, ie_status_atend,
			ie_origem_inf, dt_resultado, cd_medico_exec, ie_autorizacao, nr_seq_interno, ie_lado,
			ie_avisar_result, nr_seq_proc_interno,cd_setor_coleta,cd_setor_entrega, nr_seq_proc_princ, nr_seq_exame,
			nr_seq_agenda_cons, cd_senha,dt_inicio)
		values (
			nr_prescricao_p, nr_sequencia_w, cd_procedimento_w,
			CASE WHEN coalesce(qt_proc_prescr_w,0)=0 THEN CASE WHEN ie_lado_w='A' THEN qt_ambos_w  ELSE 1 END   ELSE coalesce(qt_proc_prescr_w,1) END , clock_timestamp(), nm_usuario_p,
			0, ie_origem_proced_w,
			'N', CASE WHEN ie_situacao_w='I' THEN null  ELSE coalesce(cd_setor_proc_w, cd_setor_atendimento_p) END ,
			coalesce(hr_inicio_w,clock_timestamp()), 'N', 5, '1',
			dt_resultado_w, cd_medico_agenda_w, ie_autorizacao_w, nextval('prescr_procedimento_seq'), ie_lado_w,
			'N', nr_seq_proc_interno_w,cd_setor_origem_w,cd_setor_destino_w, nr_seq_proc_princ_w, nr_seq_exame_w,
			nr_seq_agenda_p, cd_senha_w,coalesce(hr_inicio_w,clock_timestamp()));
		if (ie_gerar_proc_adic_w = 'S') then
			CALL Ageint_Gerar_Prescr_Proc_Assoc(Nr_prescricao_p, nr_sequencia_w);
		end if;

		CALL Gerar_med_mat_assoc(nr_prescricao_p, nr_sequencia_w);
		end;
	END LOOP;
	Close C04;
end if;
commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_proc_prescr ( nr_seq_agenda_p bigint, nr_prescricao_p bigint, cd_setor_atendimento_p bigint, cd_tipo_agenda_p bigint, nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

