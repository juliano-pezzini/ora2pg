-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_lancamento_sca_simulacao ( nr_seq_simul_item_p bigint, ie_tipo_simulacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_plano_w			bigint;
nr_seq_lanc_automotico_w	bigint;
nr_seq_regra_item_w		bigint;
nr_seq_sca_w			bigint;
nr_seq_tabela_w			bigint;
qt_registros_w			bigint;
nr_seq_simulacao_w		bigint;
nr_seq_tabela_perfil_w		bigint;
ds_erro_w			varchar(255);
nr_seq_sca_vinculo_w		pls_sca_vinculo.nr_sequencia%type;

/*ie_tipo_simulacao_p
1 - Individual
2 - Coletivas
*/
C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_lanc_automatico
	where	ie_evento	= 5
	and	(((nr_seq_grupo_produto IS NOT NULL AND nr_seq_grupo_produto::text <> '') and substr(pls_se_grupo_preco_produto(nr_seq_grupo_produto,nr_seq_plano_w),1,255) = 'S') or (coalesce(nr_seq_grupo_produto::text, '') = ''))
	and	(((nr_seq_plano IS NOT NULL AND nr_seq_plano::text <> '') and	nr_seq_plano = nr_seq_plano_w) or (coalesce(nr_seq_plano::text, '') = ''))
	and	ie_situacao	= 'A'
	and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) and coalesce(dt_fim_vigencia,clock_timestamp());

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_lanc_aut_item
	where	nr_seq_regra	= nr_seq_lanc_automotico_w
	and	(nr_seq_sca IS NOT NULL AND nr_seq_sca::text <> '')
	and	ie_situacao	= 'A';

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_sca_vinculo
	where	nr_seq_segurado_simul	= nr_seq_simul_item_p
	and	ie_origem_sca 		= 'A';

BEGIN
if (ie_tipo_simulacao_p	= 1) then
	select	nr_seq_produto
	into STRICT	nr_seq_plano_w
	from	pls_simulpreco_individual
	where	nr_sequencia	= nr_seq_simul_item_p;

	open C03;
	loop
	fetch C03 into
		nr_seq_sca_vinculo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		delete	FROM pls_simulacao_resumo
		where 	nr_seq_vinc_sca	= nr_seq_sca_vinculo_w;

		delete	FROM pls_sca_vinculo
		where	nr_sequencia	= nr_seq_sca_vinculo_w;
		end;
	end loop;
	close C03;

	if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
		open C01;
		loop
		fetch C01 into
			nr_seq_lanc_automotico_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			open C02;
			loop
			fetch C02 into
				nr_seq_regra_item_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				select	nr_seq_sca,
					nr_seq_tabela_sca
				into STRICT	nr_seq_sca_w,
					nr_seq_tabela_w
				from	pls_regra_lanc_aut_item
				where	nr_sequencia	= nr_seq_regra_item_w;

				select	count(*)
				into STRICT	qt_registros_w
				from	pls_sca_vinculo
				where	nr_seq_segurado_simul	= nr_seq_simul_item_p
				and	nr_seq_plano		= nr_seq_sca_w;

				ds_erro_w	:= '';

				ds_erro_w := pls_consistir_sca_simulacao(nr_seq_simul_item_p, nr_seq_sca_w, nr_seq_tabela_w, ds_erro_w);

				if (qt_registros_w = 0) and (coalesce(ds_erro_w::text, '') = '') then
					insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_seq_segurado_simul,nr_seq_plano,nr_seq_tabela,ds_observacao,ie_origem_sca)
					values (	nextval('pls_sca_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_seq_simul_item_p,nr_seq_sca_w,nr_seq_tabela_w,'Gerada a partir do lançamento automático','A');
				end if;
				end;
			end loop;
			close C02;
			end;
		end loop;
		close C01;
	end if;
elsif (ie_tipo_simulacao_p	= 2) then

	nr_seq_plano_w	:= null;

	select	max(ie_tabela_selecionada)
	into STRICT	nr_seq_tabela_perfil_w
	from	PLS_SIMULACAO_PLANO
	where 	nr_seq_simul_perfil =  nr_seq_simul_item_p;

	if (nr_seq_tabela_perfil_w IS NOT NULL AND nr_seq_tabela_perfil_w::text <> '') then
		select	max(nr_seq_plano)
		into STRICT	nr_seq_plano_w
		from	pls_tabela_preco
		where	nr_sequencia	= nr_seq_tabela_perfil_w;
	end if;

	if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
		open C01;
		loop
		fetch C01 into
			nr_seq_lanc_automotico_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			open C02;
			loop
			fetch C02 into
				nr_seq_regra_item_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				select	nr_seq_sca,
					nr_seq_tabela_sca
				into STRICT	nr_seq_sca_w,
					nr_seq_tabela_w
				from	pls_regra_lanc_aut_item
				where	nr_sequencia	= nr_seq_regra_item_w;

				select	count(*)
				into STRICT	qt_registros_w
				from	pls_sca_vinculo
				where	nr_seq_simulacao_perfil	= nr_seq_simul_item_p
				and	nr_seq_plano		= nr_seq_sca_w;

				if (qt_registros_w = 0) then
					insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_seq_simulacao_perfil,nr_seq_plano,nr_seq_tabela,ds_observacao)
					values (	nextval('pls_sca_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_seq_simul_item_p,nr_seq_sca_w,nr_seq_tabela_w,'Gerada a partir do lançamento automático');

				end if;
				end;
			end loop;
			close C02;
			end;
		end loop;
		close C01;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_lancamento_sca_simulacao ( nr_seq_simul_item_p bigint, ie_tipo_simulacao_p bigint, nm_usuario_p text) FROM PUBLIC;

