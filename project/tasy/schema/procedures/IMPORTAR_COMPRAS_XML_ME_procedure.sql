-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_compras_xml_me ( cd_estabelecimento_p bigint, nm_usuario_p text, ie_etapa_p text, nr_prepedido_me_p bigint, nr_requisicao_me_p bigint, cd_cgc_p text, cd_condicao_pagamento_p text, cd_cgc_transportador_p text, ie_frete_p text, vl_frete_p bigint, ds_login_p text, ds_tag_p text, ds_observacao_p text, cd_local_entrega_p text, cd_centro_custo_p bigint, dt_entrega_p timestamp, nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nr_item_p bigint, cd_material_p bigint, vl_preco_p bigint, pr_ipi_p bigint, pr_icms_p bigint, pr_iss_p bigint, ie_ipi_incluso_p text, ie_icms_incluso_p text, ie_iss_incluso_p text, qt_material_p bigint, ds_observacao_item_p text, ds_complemento_p text, dt_entrega_item_p timestamp, qt_entrega_item_p bigint, nr_ordem_compra_p INOUT bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
 
/* 
ie_etapa_p 
0	= Ordem 
1	= Itens da ordem 
6	= Entregas 
10	= Finalização 
*/
 
 
cd_comprador_w			varchar(10);
nr_ordem_compra_w		bigint;
cd_condicao_pagamento_w		bigint;
cd_comprador_padrao_w		varchar(10);
cd_pessoa_comprador_w		varchar(10);
cd_moeda_padrao_w		bigint;
cd_pessoa_solicitante_w		varchar(10);
ie_frete_w			varchar(1);
ie_aviso_chegada_w		varchar(1);
cd_unidade_medida_compra_w	varchar(30);
ds_material_direto_w		varchar(255);
cd_centro_custo_w			integer;
cd_conta_contabil_w		varchar(20);
nr_seq_log_prepedido_w		bigint;
qt_existe_w			integer;
ds_erro_w			varchar(255);
ie_status_w			varchar(3);
cd_local_entrega_w		smallint;
cd_local_estoque_w		smallint;
nr_seq_motivo_cancel_w		bigint;
qt_existe_solic_w			bigint;
qt_existe_item_solic_w		bigint;
qt_existe_material_w		bigint;
qt_prepedido_w			bigint;
ds_observacao_ordem_w		varchar(4000);
ds_observacao_w			varchar(255);
qt_consistencia_w			bigint;
cd_tributo_w			integer;
pr_tributo_w			double precision;
vl_tributo_w			double precision;
qt_material_item_w			double precision;
qt_prevista_entrega_w		double precision;
ie_pessoa_fisica_w			varchar(1)	:= 'N';
cd_pessoa_fisica_w		varchar(10);
cd_estabelecimento_w		smallint;
vl_unitario_material_w		double precision;
cd_versao_atual_w			varchar(50);
nr_cot_compra_w			bigint;
nr_seq_orc_item_gpi_w		bigint;


BEGIN 
 
if (ie_etapa_p = 0) then 
	begin 
 
	cd_estabelecimento_w	:= cd_estabelecimento_p;
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	parametro_int_compras 
	where	ds_local_entrega = cd_local_entrega_p;
	if (qt_existe_w > 0) then 
		select	cd_estabelecimento 
		into STRICT	cd_estabelecimento_w 
		from	parametro_int_compras 
		where	ds_local_entrega = cd_local_entrega_p;
	end if;
 
 
	select	nextval('ordem_compra_seq') 
	into STRICT	nr_ordem_compra_w 
	;
 
	select	count(*) 
	into STRICT	qt_prepedido_w 
	from	ordem_compra 
	where	nr_documento_externo = nr_prepedido_me_p;
	if (qt_prepedido_w > 0) then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277274) || nr_prepedido_me_p || WHEB_MENSAGEM_PCK.get_texto(277275);
	end if;
 
 
	select	coalesce(max(cd_pessoa_fisica),'X') 
	into STRICT	cd_pessoa_comprador_w 
	from	usuario 
	where	upper(nm_usuario) = upper(ds_login_p);
 
	begin 
	select	coalesce(cd_condicao_pagamento_p, cd_condicao_pagamento_padrao), 
		CASE WHEN cd_pessoa_comprador_w='X' THEN  cd_comprador_padrao  ELSE cd_pessoa_comprador_w END , 
		cd_moeda_padrao, 
		ie_aviso_chegada 
	into STRICT	cd_condicao_pagamento_w, 
		cd_comprador_padrao_w, 
		cd_moeda_padrao_w, 
		ie_aviso_chegada_w 
	from	parametro_compras 
	where	cd_estabelecimento = cd_estabelecimento_w;
	exception when others then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277276);
	end;
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	pessoa_fisica 
	where	cd_pessoa_fisica = cd_comprador_padrao_w;
	if (qt_existe_w = 0) then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277277) || cd_comprador_padrao_w || WHEB_MENSAGEM_PCK.get_texto(277278);
	end if;
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	comprador 
	where	cd_pessoa_fisica = cd_comprador_padrao_w 
	and	cd_estabelecimento = cd_estabelecimento_w;
	if (qt_existe_w = 0) then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277277) || cd_comprador_padrao_w || WHEB_MENSAGEM_PCK.get_texto(277279);
	end if;
 
 
	begin 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	condicao_pagamento 
	where	cd_condicao_pagamento = cd_condicao_pagamento_p;
	exception when others then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277280) || cd_condicao_pagamento_p || WHEB_MENSAGEM_PCK.get_texto(277275);
	end;
	if (qt_existe_w = 0) and (cd_condicao_pagamento_p IS NOT NULL AND cd_condicao_pagamento_p::text <> '') then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277280) || cd_condicao_pagamento_p || WHEB_MENSAGEM_PCK.get_texto(277275);
	end if;
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	pessoa_juridica 
	where	cd_cgc = cd_cgc_p;
	if (qt_existe_w = 0) and (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then 
		begin 
		/*Se for 14 posições não encontra a pessoa juridica, e se form menor de 14 posições, pode ser de pessoa fisica*/
 
		if (length(cd_cgc_p) = 14) then 
			ds_erro_w		:= WHEB_MENSAGEM_PCK.get_texto(277281) || cd_cgc_p || WHEB_MENSAGEM_PCK.get_texto(277275);
		elsif (length(cd_cgc_p) < 14) then 
			ie_pessoa_fisica_w	:= 'S';
			select	count(*) 
			into STRICT	qt_existe_w 
			from	pessoa_fisica 
			where	nr_cpf = cd_cgc_p;
			if (qt_existe_w = 0) then 
				ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277282) || cd_cgc_p || WHEB_MENSAGEM_PCK.get_texto(277275);
			else 
				select	max(cd_pessoa_fisica) 
				into STRICT	cd_pessoa_fisica_w 
				from	pessoa_fisica 
				where	nr_cpf = cd_cgc_p;
			end if;
		end if;
		end;
	end if;
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	pessoa_juridica 
	where	cd_cgc = cd_cgc_transportador_p;
	if (qt_existe_w = 0) and (cd_cgc_transportador_p IS NOT NULL AND cd_cgc_transportador_p::text <> '') then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277283) || cd_cgc_transportador_p || WHEB_MENSAGEM_PCK.get_texto(277284);
	end if;
 
	select	coalesce(max(cd_pessoa_solic_padrao), 'X'), 
		max(cd_local_estoque_padrao) 
	into STRICT	cd_pessoa_solicitante_w, 
		cd_local_entrega_w 
	from	parametro_compras 
	where	cd_estabelecimento = cd_estabelecimento_w;
	if (cd_pessoa_solicitante_w = 'X') then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277285);
	end if;
 
	select	coalesce(max(vl_dominio),'C') 
	into STRICT	ie_frete_w 
	from	valor_dominio 
	where	cd_dominio = 87 
	and	vl_dominio = ie_frete_p;
 
	ds_observacao_ordem_w	:= substr(ds_observacao_p,1,4000);
 
	select	coalesce(max(cd_versao_atual),'0') 
	into STRICT	cd_versao_atual_w 
	from	aplicacao_tasy 
	where	cd_aplicacao_tasy = 'Tasy';
 
	 
	if (coalesce(ds_erro_w::text, '') = '') then 
		insert into ordem_compra( 
			nr_ordem_compra, 
			nr_documento_externo, 
			cd_estabelecimento, 
			cd_cgc_fornecedor, 
			cd_pessoa_fisica, 
			cd_condicao_pagamento, 
			cd_comprador, 
			dt_ordem_compra, 
			dt_atualizacao, 
			nm_usuario, 
			cd_moeda, 
			ie_situacao, 
			dt_inclusao, 
			cd_pessoa_solicitante, 
			cd_cgc_transportador, 
			ie_frete, 
			vl_frete, 
			ds_observacao, 
			cd_local_entrega, 
			dt_entrega, 
			dt_aprovacao, 
			dt_liberacao, 
			nm_usuario_lib, 
			ie_aviso_chegada, 
			ie_emite_obs, 
			ie_urgente, 
			ie_somente_pagto, 
			pr_desconto, 
			pr_desc_pgto_antec, 
			pr_juros_negociado, 
			pr_desc_financeiro, 
			ie_tipo_ordem, 
			ds_dados_importacao, 
			ie_origem_imp) 
		values (	nr_ordem_compra_w, 
			nr_prepedido_me_p, 
			cd_estabelecimento_w, 
			CASE WHEN ie_pessoa_fisica_w='N' THEN  cd_cgc_p  ELSE null END , 
			CASE WHEN ie_pessoa_fisica_w='S' THEN  cd_pessoa_fisica_w  ELSE null END , 
			cd_condicao_pagamento_w, 
			cd_comprador_padrao_w, 
			trunc(clock_timestamp()), 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_moeda_padrao_w, 
			'A', 
			clock_timestamp(), 
			cd_pessoa_solicitante_w, 
			cd_cgc_transportador_p, 
			ie_frete_w, 
			coalesce(vl_frete_p,0), 
			ds_observacao_ordem_w, 
			cd_local_entrega_w, 
			coalesce(dt_entrega_p, trunc(clock_timestamp())), 
			clock_timestamp(), 
			clock_timestamp(), 
			nm_usuario_p, 
			ie_aviso_chegada_w, 
			'S', 'N', 'N', 0, 0, 0, 0,'I', 
			cd_versao_atual_w, 
			'MercadoEletronico');
	end if;
	end;
end if;
 
 
if (ie_etapa_p = 1) then 
	begin 
	ds_observacao_w		:= ds_observacao_item_p;
 
	select	coalesce(max(nr_ordem_compra),0) 
	into STRICT	nr_ordem_compra_w 
	from	ordem_compra 
	where	nr_documento_externo = nr_prepedido_me_p;
 
	select	cd_pessoa_solicitante 
	into STRICT	cd_pessoa_solicitante_w 
	from	ordem_compra 
	where	nr_ordem_compra = nr_ordem_compra_w;
 
	select	count(*) 
	into STRICT	qt_existe_material_w 
	from	material 
	where	cd_material = cd_material_p;
	if (qt_existe_material_w = 0) then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277307) || cd_material_p;
	end if;
 
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
		delete 
		from	ordem_compra 
		where	nr_ordem_compra = nr_ordem_compra_w;
	elsif (coalesce(ds_erro_w::text, '') = '') then 
		begin 
 
		select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMC'),1,255) cd_unidade_medida_compra 
		into STRICT	cd_unidade_medida_compra_w 
		from	material 
		where	cd_material = cd_material_p;
 
		insert into ordem_compra_item( 
			nr_ordem_compra, 
			nr_item_oci, 
			cd_material, 
			cd_unidade_medida_compra, 
			vl_unitario_material, 
			qt_material, 
			qt_original, 
			dt_atualizacao, 
			nm_usuario, 
			ie_situacao, 
			cd_pessoa_solicitante, 
			ie_geracao_solic, 
			pr_desc_financ, 
			ds_observacao, 
			vl_total_item) 
		values (	nr_ordem_compra_w, 
			nr_item_p, 
			cd_material_p, 
			cd_unidade_medida_compra_w, 
			vl_preco_p, 
			qt_material_p, 
			qt_material_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			'A', 
			cd_pessoa_solicitante_w, 
			'I', 
			0, 
			ds_observacao_w, 
			round((vl_preco_p * qt_material_p)::numeric,4));
 
		if (coalesce(pr_ipi_p, 0) > 0) then 
			begin 
			select	coalesce(max(cd_tributo), 0) 
			into STRICT	cd_tributo_w 
			from	tributo 
			where	ie_tipo_tributo = 'IPI';
		 
			if (cd_tributo_w = 0) then	/*Anderson/Matheus 22/10/2007 - OS72109*/
 
				cd_tributo_w	:= 6;
			end if;
 
			if (cd_tributo_w > 0) then 
				select	dividir((vl_preco_p * pr_ipi_p), 100) 
				into STRICT	vl_tributo_w 
				;
				insert into ordem_compra_item_trib( 
					nr_ordem_compra,		nr_item_oci,		cd_tributo, 
					pr_tributo,			vl_tributo,			dt_atualizacao, 
					nm_usuario,		ds_observacao,		dt_atualizacao_nrec, 
					nm_usuario_nrec) 
				values (nr_ordem_compra_w,		nr_item_p,		cd_tributo_w, 
					pr_ipi_p,			vl_tributo_w,		clock_timestamp(), 
					nm_usuario_p,		null,			clock_timestamp(), 
					nm_usuario_p);
			end if;
			end;
		end if;
 
		if (coalesce(pr_icms_p, 0) > 0) then 
			begin 
			select	coalesce(max(cd_tributo), 0) 
			into STRICT	cd_tributo_w 
			from	tributo 
			where	ie_tipo_tributo = 'ICMS';
			if (cd_tributo_w > 0) then 
				select	dividir((vl_preco_p * pr_icms_p), 100) 
				into STRICT	vl_tributo_w 
				;
				insert into ordem_compra_item_trib( 
					nr_ordem_compra,		nr_item_oci,		cd_tributo, 
					pr_tributo,			vl_tributo,			dt_atualizacao, 
					nm_usuario,		ds_observacao,		dt_atualizacao_nrec, 
					nm_usuario_nrec) 
				values (nr_ordem_compra_w,		nr_item_p,		cd_tributo_w, 
					pr_icms_p,		vl_tributo_w,		clock_timestamp(), 
					nm_usuario_p,		null,			clock_timestamp(), 
					nm_usuario_p);
			end if;
			end;
		end if;
 
		if (coalesce(pr_iss_p, 0) > 0) then 
			begin 
			select	coalesce(max(cd_tributo), 0) 
			into STRICT	cd_tributo_w 
			from	tributo 
			where	ie_tipo_tributo = 'ISS';
			if (cd_tributo_w > 0) then 
				select	dividir((vl_preco_p * pr_iss_p), 100) 
				into STRICT	vl_tributo_w 
				;
				insert into ordem_compra_item_trib( 
					nr_ordem_compra,		nr_item_oci,		cd_tributo, 
					pr_tributo,			vl_tributo,			dt_atualizacao, 
					nm_usuario,		ds_observacao,		dt_atualizacao_nrec, 
					nm_usuario_nrec) 
				values (nr_ordem_compra_w,		nr_item_p,		cd_tributo_w, 
					pr_iss_p,			vl_tributo_w,		clock_timestamp(), 
					nm_usuario_p,		null,			clock_timestamp(), 
					nm_usuario_p);
			end if;
			end;
		end if;
		end;
	end if;	
	end;
end if;
 
 
if (ie_etapa_p = 4) then 
	begin 
 
	select	coalesce(max(nr_ordem_compra),0) 
	into STRICT	nr_ordem_compra_w 
	from	ordem_compra 
	where	nr_documento_externo = nr_prepedido_me_p;
 
	if (coalesce(nr_solic_compra_p::text, '') = '') then 
		update	ordem_compra_item 
		set	ds_observacao		= ds_observacao || WHEB_MENSAGEM_PCK.get_texto(277308) 
		where	nr_ordem_compra		= nr_ordem_compra_w 
		and	nr_item_oci		= nr_item_p;
 
	elsif (nr_solic_compra_p IS NOT NULL AND nr_solic_compra_p::text <> '') then 
		begin 
 
		select	count(*) 
		into STRICT	qt_existe_solic_w 
		from	solic_compra 
		where	nr_solic_compra = nr_solic_compra_p;
		if (qt_existe_solic_w = 0) then 
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277309) || nr_solic_compra_p || WHEB_MENSAGEM_PCK.get_texto(277275);
		end if;
 
		select	count(*) 
		into STRICT	qt_existe_item_solic_w 
		from	solic_compra_item 
		where	nr_solic_compra = nr_solic_compra_p 
		and	nr_item_solic_compra = nr_item_solic_compra_p;
		if (qt_existe_item_solic_w = 0) then 
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277310) || nr_item_solic_compra_p || WHEB_MENSAGEM_PCK.get_texto(277311) || nr_solic_compra_p;
		end if;
 
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
			delete 
			from	ordem_compra 
			where	nr_ordem_compra = nr_ordem_compra_w;
		elsif (coalesce(ds_erro_w::text, '') = '') then 
			begin 
 
			/*Atualiza na Solicitação de compra*/
 
			update	solic_compra 
			set	nr_documento_externo = nr_requisicao_me_p 
			where	nr_solic_compra = nr_solic_compra_p;
 
			select	substr(max(coalesce(ds_complemento_p, ds_material_direto)),1,255), 
				max(nr_seq_orc_item_gpi) 
			into STRICT	ds_material_direto_w, 
				nr_seq_orc_item_gpi_w 
			from	solic_compra_item 
			where	nr_solic_compra = nr_solic_compra_p 
			and	nr_item_solic_compra = nr_item_solic_compra_p;
 
			select	cd_centro_custo, 
				cd_conta_contabil, 
				cd_local_estoque 
			into STRICT	cd_centro_custo_w, 
				cd_conta_contabil_w, 
				cd_local_estoque_w 
			from	solic_compra 
			where	nr_solic_compra = nr_solic_compra_p;
 
			update	ordem_compra_item 
			set	cd_local_estoque	= cd_local_estoque_w, 
				ds_material_direto	= ds_material_direto_w, 
				cd_centro_custo		= cd_centro_custo_w, 
				cd_conta_contabil	= cd_conta_contabil_w, 
				nr_solic_compra		= nr_solic_compra_p, 
				nr_item_solic_compra	= nr_item_solic_compra_p, 
				nr_seq_orc_item_gpi	= nr_seq_orc_item_gpi_w 
			where	nr_ordem_compra		= nr_ordem_compra_w 
			and	nr_item_oci		= nr_item_p;
 
			end;
		end if;
		end;
	end if;
	end;
end if;
 
if (ie_etapa_p = 6) then 
	begin 
	select	coalesce(max(nr_ordem_compra),0) 
	into STRICT	nr_ordem_compra_w 
	from	ordem_compra 
	where	nr_documento_externo = nr_prepedido_me_p;
 
	insert into ordem_compra_item_entrega( 
		nr_ordem_compra, 
		nr_item_oci, 
		dt_prevista_entrega, 
		qt_prevista_entrega, 
		dt_atualizacao, 
		nm_usuario, 
		nr_sequencia) 
	values (	nr_ordem_compra_w, 
		nr_item_p, 
		dt_entrega_item_p, 
		qt_entrega_item_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nextval('ordem_compra_item_entrega_seq'));
 
 
	/*Ajusta as diferencas na quantidade do item da Ordem.*/
 
 
	select	qt_material 
	into STRICT	qt_material_item_w 
	from	ordem_compra_item 
	where	nr_ordem_compra = nr_ordem_compra_w 
	and	nr_item_oci = nr_item_p;
 
	select	sum(qt_prevista_entrega) 
	into STRICT	qt_prevista_entrega_w 
	from	ordem_compra_item_entrega 
	where	nr_ordem_compra = nr_ordem_compra_w 
	and	nr_item_oci = nr_item_p;
 
	if (qt_material_item_w <> qt_prevista_entrega_w) then 
		update	ordem_compra_item 
		set	qt_material = qt_prevista_entrega_w, 
			vl_total_item = round(( qt_prevista_entrega_w * vl_unitario_material)::numeric,4) 
		where	nr_ordem_compra = nr_ordem_compra_w 
		and	nr_item_oci = nr_item_p;
	end if;
 
	end;
end if;
 
 
if (ie_etapa_p = 8) then 
	begin 
	select	coalesce(max(nr_ordem_compra),0) 
	into STRICT	nr_ordem_compra_w 
	from	ordem_compra 
	where	nr_documento_externo = nr_prepedido_me_p;
 
	/*Atualiza o centro de custo, somente se não tiver solicitacao e se o mesmo veio informado no ME*/
 
	if (cd_centro_custo_p > 0) then 
		select	count(*) 
		into STRICT	qt_consistencia_w 
		from	centro_custo 
		where	cd_centro_custo = cd_centro_custo_p;
		if (qt_consistencia_w = 0) then 
 
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277288) || cd_centro_custo_p || WHEB_MENSAGEM_PCK.get_texto(277275);
 
			delete 
			from	ordem_compra 
			where	nr_ordem_compra = nr_ordem_compra_w;
 
		else 
			update	ordem_compra_item 
			set	cd_centro_custo = cd_centro_custo_p 
			where	nr_ordem_compra = nr_ordem_compra_w 
			and	coalesce(nr_solic_compra::text, '') = '';
		end if;
 
 
	end if;
	end;
end if;
 
if (ie_etapa_p = 10) then 
	begin 
	select	coalesce(max(nr_ordem_compra),0) 
	into STRICT	nr_ordem_compra_w 
	from	ordem_compra 
	where	nr_documento_externo = nr_prepedido_me_p;
 
	select	coalesce(max(nr_seq_motivo_cancel),0) 
	into STRICT	nr_seq_motivo_cancel_w 
	from	solic_compra 
	where	nr_solic_compra = nr_solic_compra_p 
	and	(nr_seq_motivo_cancel IS NOT NULL AND nr_seq_motivo_cancel::text <> '');
	if (nr_seq_motivo_cancel_w > 0) then 
		nr_cot_compra_w := cancelar_ordem_compra( nr_ordem_compra_w, nr_seq_motivo_cancel_w, 'N', 'N', 'N', nm_usuario_p, '', 'N', nr_cot_compra_w);
	end if;
 
	if (coalesce(ds_erro_w::text, '') = '') then 
		begin 
		calcular_liquido_ordem_compra( nr_ordem_compra_w, nm_usuario_p);
		CALL gerar_ordem_compra_venc( nr_ordem_compra_w, nm_usuario_p);
		CALL baixar_solic_compra_com_ordem(nr_ordem_compra_w);
		end;
	end if;
 
	select	coalesce(sum(vl_unitario_material), 0) 
	into STRICT	vl_unitario_material_w 
	from	ordem_compra_item 
	where	nr_ordem_compra	= nr_ordem_compra_w;
	if (vl_unitario_material_w = 0) then 
		begin		 
 
		delete 
		from	ordem_compra 
		where	nr_ordem_compra = nr_ordem_compra_w;
 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277287);
 
		end;
	end if;
 
	end;
end if;
 
 
nr_ordem_compra_p	:= nr_ordem_compra_w;
ds_erro_p			:= ds_erro_w;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_compras_xml_me ( cd_estabelecimento_p bigint, nm_usuario_p text, ie_etapa_p text, nr_prepedido_me_p bigint, nr_requisicao_me_p bigint, cd_cgc_p text, cd_condicao_pagamento_p text, cd_cgc_transportador_p text, ie_frete_p text, vl_frete_p bigint, ds_login_p text, ds_tag_p text, ds_observacao_p text, cd_local_entrega_p text, cd_centro_custo_p bigint, dt_entrega_p timestamp, nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nr_item_p bigint, cd_material_p bigint, vl_preco_p bigint, pr_ipi_p bigint, pr_icms_p bigint, pr_iss_p bigint, ie_ipi_incluso_p text, ie_icms_incluso_p text, ie_iss_incluso_p text, qt_material_p bigint, ds_observacao_item_p text, ds_complemento_p text, dt_entrega_item_p timestamp, qt_entrega_item_p bigint, nr_ordem_compra_p INOUT bigint, ds_erro_p INOUT text) FROM PUBLIC;

