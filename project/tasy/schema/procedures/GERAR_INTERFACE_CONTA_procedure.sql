-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interface_conta ( nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint	:= 0;
dt_envio_w			timestamp		:= clock_timestamp();
nr_lote_w			integer;
nr_documento_w		varchar(20);
nr_doc_origem_w		varchar(20);
cd_regional_w			varchar(15);
cd_interno_w			varchar(15);
dt_competencia_w		timestamp;
ie_tipo_documento_w		varchar(3);
dt_emissao_w			timestamp;
dt_entrada_w			timestamp;
dt_alta_w			timestamp;
cd_usuario_convenio_w		varchar(30);
cd_grupo_convenio_w		varchar(10);
nm_usuario_convenio_w		varchar(40);
cd_categoria_w		varchar(10);
uf_medico_solicitante_w		compl_pessoa_fisica.sg_estado%type;
cd_medico_solicitante_w	varchar(10);
cd_doenca_prov_w		varchar(10);
cd_doenca_def_w		varchar(10);
cd_motivo_alta_w		smallint;
cd_tipo_obito_w		smallint;
cd_tipo_transf_w		smallint;
uf_destino_transf_w		valor_dominio.vl_dominio%type;
cd_cgc_destino_w		varchar(15);
cd_cgc_estab_w		varchar(15);
ie_carater_internacao_w	varchar(2);
cd_procedimento_princ_w	bigint;
cd_proc_princ_conv_w		bigint;
ie_origem_proced_w		bigint	:= 1;
cd_tipo_acomodacao_w		smallint;
ie_clinica_w			integer;
qt_nascidos_vivos_w		smallint;
qt_nascidos_mortos_w		smallint;
qt_nascidos_pat_w		smallint;
cd_doenca_vivos_pri_w		varchar(10);
cd_doenca_vivos_sec_w	varchar(10);
cd_medico_executor_w		varchar(15);
ie_funcao_executor_w		varchar(10);
cd_item_w			bigint;
qt_item_w			double precision;
vl_item_w			double precision;
ie_cirurgia_multipla_w		varchar(1);
cd_senha_w			varchar(15);
qt_filme_w			double precision;
vl_filme_w			double precision;
vl_custo_operacional_w	double precision;
vl_medico_w			double precision;
ie_sexo_w			varchar(1);
dt_nascimento_w		timestamp;
cd_moeda_w			smallint;
vl_glosa_w			double precision;
nr_controle_trailler_w		integer	:= 0;
nr_atendimento_w		bigint;
nr_atendimento_ant_w		bigint	:= 0;
nr_prescricao_w		bigint;
cd_convenio_w			integer;
cd_pessoa_fisica_w		varchar(10);
cd_medico_resp_w		varchar(10);
cd_edicao_amb_w		integer;
cd_medico_exec_proc_w	varchar(15);
ie_medico_prescricao_w	varchar(1);
ie_internado_w			smallint;
cd_cgc_prestador_w		varchar(14);
ie_tipo_atendimento_w		smallint;
nr_seq_conversao_w		smallint;
tx_procedimento_w		double precision;
nr_interno_conta_w		bigint;
nr_seq_proc_interno_w		bigint;
cd_estabelecimento_w		bigint;
ie_pacote_w			varchar(01);
cd_plano_w			varchar(10);
cd_tipo_acomod_conv_w		smallint;
qt_idade_w			bigint;
cd_pessoa_fisica_atend_w	varchar(10);
ie_sexo_conv_w			varchar(1);
cd_empresa_ref_w		bigint;
ie_carater_inter_sus_w		varchar(2);
nr_seq_proc_pacote_w		bigint;
nr_seq_pacote_w			bigint;


C01 CURSOR FOR
/* SEARCHES DATA OF THE PROCEDURE_PATIENT AND MATERIAL_ATEND_PATIENT */

SELECT 	nr_atendimento,
       	cd_autorizacao,
       	cd_item_convenio cd_item,
       	sum(qt_item) qt_item,
       	sum(vl_item) vl_item,
       	sum(vl_medico) vl_medico,
       	sum(vl_custo_operacional) vl_custo_operacional,
       	sum(vl_filme) vl_filme,
       	dt_mesano_referencia,
	cd_medico_executor,
	ie_funcao_medico,
	CASE WHEN ie_medico_prescricao_w='S' THEN nr_prescricao  ELSE 0 END  nr_prescricao,
	cd_cgc_prestador,
	tx_procedimento,
	nr_seq_proc_interno,
	CASE WHEN nr_seq_proc_pacote=nr_sequencia THEN  'S'  ELSE 'N' END  ie_pacote,
	nr_seq_proc_pacote
from	protocolo_convenio_item_v
where	nr_seq_protocolo	= nr_seq_protocolo_p
group by 	dt_mesano_referencia,
	nr_atendimento,
	cd_autorizacao,
	cd_item_convenio,
	cd_medico_executor,
	ie_funcao_medico,
	CASE WHEN ie_medico_prescricao_w='S' THEN nr_prescricao  ELSE 0 END ,
	cd_cgc_prestador,
	tx_procedimento,
	nr_seq_proc_interno,
	CASE WHEN nr_seq_proc_pacote=nr_sequencia THEN  'S'  ELSE 'N' END ,
	nr_seq_proc_pacote

union

/* SEARCHES DATA OF THE PARTICIPANTS */

SELECT	a.nr_atendimento,
	c.nr_doc_convenio,
	c.cd_procedimento_convenio cd_item,
	count(*) qt_item,
	sum(c.vl_procedimento) vl_item,
	sum(b.vl_participante) vl_medico,
	sum(c.vl_custo_operacional) vl_custo_operacional,
	sum(c.vl_materiais) vl_filme,
	a.dt_mesano_referencia,
	b.cd_pessoa_fisica,
	b.ie_funcao,
	0 nr_prescricao,
	c.cd_cgc_prestador,
	coalesce(c.tx_procedimento,100),
	c.nr_seq_proc_interno,
	'N',
	c.nr_seq_proc_pacote
from	conta_paciente a,
	procedimento_participante b,
	procedimento_paciente c
where	a.nr_interno_conta	= c.nr_interno_conta
and	c.nr_sequencia	= b.nr_sequencia
and	b.ie_funcao	<> '1'
and	a.nr_seq_protocolo	= nr_seq_protocolo_p
group by a.dt_mesano_referencia,
	a.nr_atendimento,
	c.nr_doc_convenio,
	c.cd_procedimento_convenio,
	b.cd_pessoa_fisica,
	b.ie_funcao,
	0,
	c.cd_cgc_prestador,
 	coalesce(c.tx_procedimento,100),
	c.nr_seq_proc_interno,
	c.nr_seq_proc_pacote
order by	9, 1, 3;


C02 CURSOR FOR
SELECT	coalesce(cd_interno, cd_interno_w),
	coalesce(cd_regional, cd_regional_w)
from	param_interface
where	cd_convenio					= cd_convenio_w
and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
and	coalesce(cd_cgc,cd_cgc_prestador_w)			= cd_cgc_prestador_w
and	coalesce(cd_estabelecimento,cd_estabelecimento_w)	= cd_estabelecimento_w
order by 	coalesce(cd_cgc,0),
	coalesce(ie_tipo_atendimento,0);

C03 CURSOR FOR
SELECT	nr_interno_conta
from	conta_paciente
where	nr_seq_protocolo	= nr_seq_protocolo_p
and	coalesce(ie_cancelamento::text, '') = '';
	
BEGIN

	delete from interface_conta;
	commit;

/* DEFINES STANDARD HOSPITAL CODE FOR INSURANCE */


/* DEFINES HOSPITAL CODE FOR DOCTOR WHEN NOT INFORMED EXECUTOR DOCTOR */

select	a.cd_convenio,
	Obter_Valor_Conv_Estab(b.cd_convenio, a.cd_estabelecimento, 'CD_INTERNO'),
	Obter_Valor_Conv_Estab(b.cd_convenio, a.cd_estabelecimento, 'CD_REGIONAL'),
	a.cd_estabelecimento
into STRICT	cd_convenio_w,
	cd_interno_w,
	cd_regional_w,
	cd_estabelecimento_w		
from	convenio b,
	protocolo_convenio a
where	a.cd_convenio		= b.cd_convenio
and	a.nr_seq_protocolo	= nr_seq_protocolo_p;

begin
select	max(cd_edicao_amb)
into STRICT		cd_edicao_amb_w
from		convenio_amb
where		cd_convenio = cd_convenio_w;
end;	

begin
select	vl_parametro
into STRICT		ie_medico_prescricao_w
from		funcao_parametro
where		cd_funcao = 85
  and		nr_sequencia = 7;
exception
		when others then
		ie_medico_prescricao_w := 'S';
end;

open C03;
loop
	fetch C03 into nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */

	CALL Atualiza_Codigo_Convenio(nr_interno_conta_w,null);

end loop;
close C03;

open c01;
loop
	begin
	fetch c01 into
	nr_atendimento_w,
       	nr_documento_w,
       	cd_item_w,
       	qt_item_w,
       	vl_item_w,
       	vl_medico_w,
       	vl_custo_operacional_w,
       	vl_filme_w,
       	dt_competencia_w,
	cd_medico_exec_proc_w,
	ie_funcao_executor_w,
	nr_prescricao_w,
	cd_cgc_prestador_w,
	tx_procedimento_w,
	nr_seq_proc_interno_w,
	ie_pacote_w,
	nr_seq_proc_pacote_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
      	begin

		nr_sequencia_w	:= nr_sequencia_w + 1;

		/* RETRIEVES DATA FROM THE SERVICE IN THE BREAKDOWN OF THE SAME */

		if (nr_atendimento_w <> nr_atendimento_ant_w) then
			begin
			SELECT A.DT_ENTRADA,
			       A.DT_ENTRADA,
			       A.CD_PESSOA_FISICA,
			       A.IE_TIPO_ATENDIMENTO,
			       A.IE_TIPO_ATENDIMENTO,
			       A.DT_ALTA,
			       coalesce(A.IE_CLINICA,0),
			       A.CD_MOTIVO_ALTA,
			       A.CD_MEDICO_RESP,
			       coalesce(A.IE_CARATER_INTER_SUS,1),
			       P.NM_PESSOA_FISICA,
			       P.DT_NASCIMENTO,
			       P.IE_SEXO,
				 U.CD_CGC
			into STRICT   DT_ENTRADA_W,
			       DT_EMISSAO_W,
			       CD_PESSOA_FISICA_W,
			       IE_TIPO_DOCUMENTO_W,
				 IE_TIPO_ATENDIMENTO_W,
			       DT_ALTA_W,
			       IE_CLINICA_W,
			       CD_MOTIVO_ALTA_W,
			       CD_MEDICO_RESP_W,
			       IE_CARATER_INTERNACAO_W,
			       NM_USUARIO_CONVENIO_W,
			       DT_NASCIMENTO_W,
			       IE_SEXO_W,
				 CD_CGC_ESTAB_W
			FROM	 ESTABELECIMENTO U,
				 PESSOA_FISICA P,
				 ATENDIMENTO_PACIENTE A
			WHERE (A.CD_ESTABELECIMENTO = U.CD_ESTABELECIMENTO)
			  AND (A.CD_PESSOA_FISICA = P.CD_PESSOA_FISICA)
			  and (a.nr_atendimento = nr_atendimento_w);

			/* RETRIEVES USER CODE AND TYPE OF ACCOMMODATION */

			begin
			SELECT C.CD_USUARIO_CONVENIO,
			       C.CD_TIPO_ACOMODACAO
			INTO STRICT   CD_USUARIO_CONVENIO_W,
			       CD_TIPO_ACOMODACAO_W
			FROM   ATEND_CATEGORIA_CONVENIO C
			WHERE (C.DT_INICIO_VIGENCIA =
			      (SELECT MIN(W.DT_INICIO_VIGENCIA) DT_PRIMEIRA_VIGENCIA
			       FROM ATEND_CATEGORIA_CONVENIO W
			       WHERE W.NR_ATENDIMENTO = nr_atendimento_w
			         AND W.CD_CONVENIO    = cd_convenio_w ))
			  AND (C.nr_atendimento       = nr_atendimento_w);
			exception
				when others then
					begin
					CD_USUARIO_CONVENIO_W   := '';
					CD_TIPO_ACOMODACAO_W	:= 0;
					end;
			end;

			/* DEFINES THE TYPE OF ATTENDANCE OF THE INTERNED */

			if (ie_tipo_documento_w <> '1') then
			  	begin
			  	select 	count(*)
			  	into STRICT 		ie_internado_w
			  	from 		atend_paciente_unidade a,
						setor_atendimento b
			  	where 	a.cd_setor_atendimento = b.cd_setor_atendimento
			    	and 		a.nr_atendimento = nr_atendimento_w
			    	and 		b.cd_classif_setor in (3,4,8);
			  	if 		ie_internado_w > 0 then
			    			ie_tipo_documento_w := '1';
			  	else
			    			cd_tipo_acomodacao_w := null;
			  	end if;
			  	end;
			end if;

			cd_procedimento_princ_w := null;

			/* DEFINES THE MAIN PROCEDURE */

			if (ie_tipo_documento_w = '1') then
			  	begin
			  	select 	a.cd_procedimento_principal,
						a.ie_origem_proced
			  	into STRICT		cd_procedimento_princ_w,
						ie_origem_proced_w
			  	from 		autorizacao_convenio a
			  	where 	a.nr_atendimento = nr_atendimento_w
			    	and 		a.nr_seq_autorizacao =
						(SELECT 	min(b.nr_seq_autorizacao)
						from 		autorizacao_convenio b
						where 	b.nr_atendimento = nr_atendimento_w);
			  	exception
						when others then
				  		begin
				  		select 	a.cd_procedimento_princ,
								a.ie_origem_proced
				  		into STRICT		cd_procedimento_princ_w,
								ie_origem_proced_w
				  		from 		cirurgia a
				  		where 	a.nr_atendimento = nr_atendimento_w
				    		and 		a.nr_cirurgia =
								(SELECT 	min(b.nr_cirurgia)
							 	from 		cirurgia b
							 	where 	b.nr_atendimento =
										nr_atendimento_w);
				  		exception
								when others then
								cd_procedimento_princ_w := 20010;
				  		end;
			  	end;
			end if;

			select 	max(cd_plano_convenio),
				coalesce(max(cd_empresa),0)
			into STRICT	cd_plano_w,
				cd_empresa_ref_w
			from 	atend_categoria_convenio
			where 	nr_atendimento = nr_atendimento_w
			and	cd_convenio    = cd_convenio_w;
			
			select 	max(cd_tipo_acomodacao)
			into STRICT	cd_tipo_acomod_conv_w
			from 	atend_categoria_convenio
			where 	nr_atendimento = nr_atendimento_w
			and 	cd_convenio = cd_convenio_w;

			/* CONVERTS CODE TO INSURANCE */

			begin
			
			select	max(cd_pessoa_fisica),
				max(ie_carater_inter_sus_w)
			into STRICT	cd_pessoa_fisica_atend_w,
				ie_carater_inter_sus_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w;
			
			begin
			select	max(obter_idade(dt_nascimento, coalesce(dt_obito,clock_timestamp()),'DIA')),
				max(ie_sexo)
			into STRICT	qt_idade_w,
				ie_sexo_conv_w
			from	pessoa_fisica
			where	cd_pessoa_fisica = cd_pessoa_fisica_atend_w;
			exception
			when others then
				qt_idade_w	:= 0;
				ie_sexo_conv_w	:= '';
			end;
			
			nr_seq_pacote_w	:= 0;
			if (nr_sequencia_w = nr_seq_proc_pacote_w) then
				select	max(nr_seq_pacote)
				into STRICT	nr_seq_pacote_w
				from	atendimento_pacote
				where	nr_seq_procedimento = nr_sequencia_w
				and	nr_atendimento = nr_atendimento_w;
			end if;
			
			SELECT * FROM Converte_Proc_Convenio(cd_estabelecimento_w, cd_convenio_w, CD_CATEGORIA_W, cd_procedimento_princ_w, ie_origem_proced_w, null, null, IE_TIPO_ATENDIMENTO_W, null, cd_proc_princ_conv_w, cd_grupo_convenio_w, nr_seq_conversao_w, null, null, nr_seq_proc_interno_w, ie_pacote_w, cd_plano_w, IE_CLINICA_W, 0, IE_FUNCAO_EXECUTOR_W, cd_tipo_acomod_conv_w, qt_idade_w, ie_sexo_conv_w, cd_empresa_ref_w, ie_carater_inter_sus_w, nr_seq_pacote_w, null, null, null) INTO STRICT cd_proc_princ_conv_w, cd_grupo_convenio_w, nr_seq_conversao_w;
			cd_procedimento_princ_w	:= cd_proc_princ_conv_w;
			end;

			/* RECOVER THE CID */

			begin
			select 	cd_doenca
			into STRICT 	cd_doenca_def_w
			from 	diagnostico_doenca
			where 	nr_atendimento	= nr_atendimento_w
			and 	ie_classificacao_doenca = 'P';
			exception
			when others then
				cd_doenca_def_w	:= null;
			end;
			end;
	  	end if;


		nr_atendimento_ant_w := nr_atendimento_w;

		/* RECOVERS THE DOCTOR FROM PRESCRIPTION */

		if (ie_medico_prescricao_w = 'S') 	and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') 	and (nr_prescricao_w > 0) 			then
			select 	cd_medico
			into STRICT 		cd_medico_resp_w
			from 		prescr_medica 
			where 	nr_prescricao = nr_prescricao_w;
		end if;


		/* DEFINES THE REQUESTING DOCTOR */

		begin
		SELECT	Q.SG_ESTADO UF_SOLICITANTE,
				C.CD_MEDICO_CONVENIO
		INTO STRICT		UF_MEDICO_SOLICITANTE_W,
				CD_MEDICO_SOLICITANTE_W
		FROM medico_v m
LEFT OUTER JOIN compl_pessoa_fisica q ON (M.CD_PESSOA_FISICA = Q.CD_PESSOA_FISICA AND 1 = Q.NR_SEQUENCIA)
, (m
LEFT OUTER JOIN medico_convenio c ON (M.CD_PESSOA_FISICA = C.CD_PESSOA_FISICA)
WHERE (M.CD_PESSOA_FISICA     = CD_MEDICO_RESP_W);
		exception
				when others then
				begin
				uf_medico_solicitante_w := null;
				cd_medico_solicitante_w := null;
				end;
		end;

		/* DEFINES THE REQUESTING DOCTOR */

		if (coalesce(cd_medico_solicitante_w::text, '') = '') then
			begin
			select 	a.nr_crm,
			       	b.sg_estado
			into STRICT   	cd_medico_solicitante_w,
			       	uf_medico_solicitante_w
			FROM medico a
LEFT OUTER JOIN compl_pessoa_fisica b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica AND 1 = b.nr_sequencia)
WHERE a.cd_pessoa_fisica 	= cd_medico_resp_w;
			exception
					when others then
					begin
					uf_medico_solicitante_w := null;
					cd_medico_solicitante_w := null;
					end;
			end;
		end if;

		/* SETS THE AMOUNT OF ORIGINAL FILM IN THE TABLE */

		qt_filme_w			:= 0;
		if (vl_filme_w IS NOT NULL AND vl_filme_w::text <> '') and (vl_filme_w > 0) then
			begin
			select	a.qt_filme
			into STRICT		qt_filme_w
			from		preco_amb a
			where		a.cd_edicao_amb 	= cd_edicao_amb_w
			and		a.cd_procedimento 	= cd_item_w
  			and coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	=
				(SELECT max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days'))
					from preco_amb b
					where b.cd_edicao_amb		= cd_edicao_amb_w
					and	b.cd_procedimento		= cd_item_w);
			exception
					when others then
			      	qt_filme_w		:= 0;
			end;
		end if;

		/* DEFINES THE EXECUTING DOCTOR */

		cd_medico_executor_w	:= null;
		if (coalesce(ie_funcao_executor_w::text, '') = '') then
			ie_funcao_executor_w 	:= 'H';
		end if;
		if (cd_medico_exec_proc_w IS NOT NULL AND cd_medico_exec_proc_w::text <> '') then
			begin
			select	cd_medico_convenio
			into STRICT		cd_medico_executor_w
			from		medico_convenio
			where		cd_pessoa_fisica 	= cd_medico_exec_proc_w
			and		cd_convenio		= cd_convenio_w;
			exception
					when others then
			      	cd_medico_executor_w := null;
			end;
		end if;
		if (length(cd_cgc_prestador_w) < 1) then
			cd_cgc_prestador_w	:= cd_cgc_estab_w;
		end if;
		/* CHECKS IF THERE IS A DIFFERENT HOSPITAL CODE FOR CGC/TYPE OF CARE */

		OPEN C02;
		LOOP
			FETCH C02 into
				cd_interno_w,
				cd_regional_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				BEGIN
				cd_interno_w	:= cd_interno_w;
				END;
			END LOOP;
			CLOSE C02;
		/* When not informed doctor, should use hospital code */

		if (coalesce(cd_medico_executor_w::text, '') = '') then
			cd_medico_executor_w	:= cd_interno_w;
		end if;
		INSERT INTO INTERFACE_CONTA(NR_SEQUENCIA, DT_ENVIO, CD_INTERNO, NR_LOTE,
			NR_DOCUMENTO, NR_DOC_ORIGEM, CD_REGIONAL, DT_COMPETENCIA,
			IE_TIPO_DOCUMENTO, DT_EMISSAO, DT_ENTRADA, DT_ALTA,
			CD_USUARIO_CONVENIO, NM_USUARIO_CONVENIO, CD_CATEGORIA,
			UF_MEDICO_SOLICITANTE, CD_MEDICO_SOLICITANTE, CD_DOENCA_PROV,
			CD_DOENCA_DEF, CD_MOTIVO_ALTA, CD_TIPO_OBITO, CD_TIPO_TRANSF,
			UF_DESTINO_TRANSF, CD_CGC_DESTINO, IE_CARATER_INTERNACAO,
			CD_PROCEDIMENTO_PRINC, CD_TIPO_ACOMODACAO, IE_CLINICA,
			QT_NASCIDOS_VIVOS, QT_NASCIDOS_MORTOS, QT_NASCIDOS_PAT,
			CD_DOENCA_VIVOS_PRI, CD_DOENCA_VIVOS_SEC, CD_MEDICO_EXECUTOR,
			IE_FUNCAO_EXECUTOR, CD_ITEM, QT_ITEM, VL_ITEM, IE_CIRURGIA_MULTIPLA,
			CD_SENHA, QT_FILME, VL_FILME, VL_CUSTO_OPERACIONAL, VL_MEDICO,
			IE_SEXO, DT_NASCIMENTO, CD_MOEDA, VL_GLOSA, NR_CONTROLE_TRAILLER)
		VALUES (NR_SEQUENCIA_W, DT_ENVIO_W, CD_INTERNO_W, NR_LOTE_W,
			NR_DOCUMENTO_W, NR_DOC_ORIGEM_W, CD_REGIONAL_W, DT_COMPETENCIA_W,
			IE_TIPO_DOCUMENTO_W, DT_EMISSAO_W, DT_ENTRADA_W, DT_ALTA_W,
			CD_USUARIO_CONVENIO_W, NM_USUARIO_CONVENIO_W, CD_CATEGORIA_W, 
			UF_MEDICO_SOLICITANTE_W, CD_MEDICO_SOLICITANTE_W, CD_DOENCA_PROV_W,
			CD_DOENCA_DEF_W, CD_MOTIVO_ALTA_W, CD_TIPO_OBITO_W, CD_TIPO_TRANSF_W,
			UF_DESTINO_TRANSF_W, CD_CGC_DESTINO_W, IE_CARATER_INTERNACAO_W,
			CD_PROCEDIMENTO_PRINC_W, CD_TIPO_ACOMODACAO_W, IE_CLINICA_W,
			QT_NASCIDOS_VIVOS_W, QT_NASCIDOS_MORTOS_W, QT_NASCIDOS_PAT_W,
			CD_DOENCA_VIVOS_PRI_W, CD_DOENCA_VIVOS_SEC_W, CD_MEDICO_EXECUTOR_W,
			IE_FUNCAO_EXECUTOR_W, CD_ITEM_W, QT_ITEM_W, VL_ITEM_W, IE_CIRURGIA_MULTIPLA_W,
			CD_SENHA_W, QT_FILME_W, VL_FILME_W, VL_CUSTO_OPERACIONAL_W, VL_MEDICO_W,
			IE_SEXO_W, DT_NASCIMENTO_W, CD_MOEDA_W, VL_GLOSA_W, NR_CONTROLE_TRAILLER_W);
		end;
	end;
END LOOP;
close C01;

update	interface_conta
set	nr_controle_trailler	= 999999
where	nr_sequencia	= nr_sequencia_w;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interface_conta ( nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

