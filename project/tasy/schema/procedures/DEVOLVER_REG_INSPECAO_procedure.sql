-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE devolver_reg_inspecao (nr_seq_registro_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
qt_registros_w			integer;
nr_seq_contagem_w		bigint;
nr_seq_entrega_w		bigint;
nr_seq_entrega_ww		bigint;
nr_ordem_compra_w 		bigint;
ds_observacao_w			varchar(255);
ds_motivo_devolucao_w		varchar(255);
nr_item_oci_w			integer;
qt_prevista_entrega_w		double precision;
qt_prevista_entrega_ww		double precision;
qt_devolvida_w			double precision;
qt_saldo_w			double precision := 0;
dt_entrega_w			timestamp;
qt_dias_devolucao_w		integer;
nr_seq_inspecao_w		bigint;
ie_envia_email_w		varchar(1) := 'N';
nr_seq_regra_w			bigint;
ds_email_adicional_w		varchar(2000);
cd_perfil_disparar_w		varchar(10);
ds_email_origem_w		varchar(255);
nm_usuario_origem_w		varchar(255);
ds_assunto_padrao_w		varchar(255);
ds_email_destino_w		varchar(2000);
ds_mensagem_padrao_w		varchar(4000);
ie_momento_envio_w		varchar(1);
cd_perfil_ativo_w		bigint;
cd_pessoa_solic_w		varchar(10);
ds_email_solicitante_w		varchar(255);
ds_motivo_devolucao_ww		varchar(255);
ds_item_ww			varchar(2000);
ds_item_w			varchar(2000);
ds_item_NC_w			varchar(2000);
ds_item_NC_ww			varchar(2000);
ds_assunto_w			varchar(255);
dt_prevista_entrega_w		timestamp;
ds_historico_w			varchar(4000);
ie_motivo_devolucao_w		varchar(25);
dt_prox_dia_util_w		timestamp;
qt_real_entrega_w		ordem_compra_item_entrega.qt_real_entrega%type;
nr_sequencia_w			ordem_compra_item_entrega.nr_sequencia%type;
qt_material_w			ordem_compra_item.qt_material%type;
nr_seq_tipo_nao_conf_w		inspecao_recebimento.nr_seq_tipo_nao_conf%type;
ds_nao_conformidade_w		inspecao_nao_conf.ds_tipo%type;

c01 CURSOR FOR 
SELECT	a.nr_seq_entrega, 
	a.nr_ordem_compra, 
	substr(obter_valor_dominio(1639,b.ie_motivo_devolucao),1,255) ds_motivo, 
	b.ie_motivo_devolucao, 
	b.nr_seq_tipo_nao_conf, 
	c.nr_item_oci, 
	coalesce(b.qt_inspecao,c.qt_prevista_entrega), 
	c.qt_prevista_entrega, 
	c.dt_prevista_entrega, 
	a.nr_sequencia, 
	c.qt_real_entrega 
from	inspecao_recebimento a, 
	inspecao_contagem b, 
	ordem_compra_item_entrega c 
where	a.nr_seq_registro = nr_seq_registro_p 
and	b.nr_seq_inspecao = a.nr_sequencia 
and	c.nr_ordem_compra = a.nr_ordem_compra 
and	c.nr_sequencia = a.nr_seq_entrega 
and	b.nr_seq_contagem = nr_seq_contagem_w 
order by a.nr_ordem_compra, 
	ds_motivo;

c02 CURSOR FOR 
SELECT	nr_sequencia, 
	ds_email_adicional, 
	cd_perfil_disparar, 
	coalesce(ie_momento_envio,'I') 
from	regra_envio_email_compra 
where	ie_tipo_mensagem = 86 
and	ie_situacao = 'A' 
and	cd_estabelecimento = cd_estabelecimento_p;

c03 CURSOR FOR 
SELECT	distinct nr_ordem_compra 
from	inspecao_recebimento 
where	nr_seq_registro = nr_seq_registro_p;

c04 CURSOR FOR 
SELECT	substr(coalesce(obter_valor_dominio(1639,b.ie_motivo_devolucao),''),1,255) ds_motivo_devolucao, 
	substr(b.cd_material || ' - ' || obter_desc_material(b.cd_material),1,2000) ds_material 
from	inspecao_contagem b 
where	b.nr_seq_registro = nr_seq_registro_p 
and	b.nr_ordem_compra = nr_ordem_compra_w 
and	b.nr_seq_contagem = nr_seq_contagem_w 
group by b.cd_material, 
	b.ie_motivo_devolucao;
	
c05 CURSOR FOR 
SELECT	substr(coalesce(obter_desc_nao_conf(nr_seq_tipo_nao_conf),''),1,255) ds_nao_conformidade, 
	substr(b.cd_material || ' - ' || obter_desc_material(b.cd_material),1,2000) ds_material 
from	inspecao_contagem b 
where	b.nr_seq_registro = nr_seq_registro_p 
and	b.nr_ordem_compra = nr_ordem_compra_w 
and	b.nr_seq_contagem = nr_seq_contagem_w 
group by b.cd_material, 
	b.nr_seq_tipo_nao_conf;


BEGIN 
 
select	count(*) 
into STRICT	qt_registros_w 
from	inspecao_contagem 
where	nr_seq_registro = nr_seq_registro_p 
and	(ie_motivo_devolucao IS NOT NULL AND ie_motivo_devolucao::text <> '');
 
if (nr_seq_registro_p > 0) and (qt_registros_w > 0) then 
 
	select	max(nr_seq_contagem) 
	into STRICT	nr_seq_contagem_w 
	from	inspecao_contagem 
	where	nr_seq_registro = nr_seq_registro_p 
	and	(ie_motivo_devolucao IS NOT NULL AND ie_motivo_devolucao::text <> '');
	 
	if (nr_seq_contagem_w > 0) then 
 
		delete from inspecao_contagem 
		where	nr_seq_registro = nr_seq_registro_p 
		and	nr_seq_contagem > nr_seq_contagem_w;
 
		update	inspecao_contagem 
		set	dt_devolucao = clock_timestamp(), 
			dt_liberacao = clock_timestamp(), 
			nm_usuario_lib = nm_usuario_p, 
			nm_usuario_dev = nm_usuario_p 
		where	nr_seq_registro = nr_seq_registro_p 
		and	nr_seq_contagem = nr_seq_contagem_w;
 
		update	inspecao_registro 
		set	dt_devolucao = clock_timestamp(), 
			dt_liberacao = clock_timestamp(), 
			nm_usuario_dev = nm_usuario_p 
		where	nr_sequencia = nr_seq_registro_p;
 
		select	coalesce((obter_valor_param_usuario(270, 81, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p))::numeric , 1) 
		into STRICT	qt_dias_devolucao_w 
		;
		 
		select	obter_proximo_dia_util(cd_estabelecimento_p,(clock_timestamp()+qt_dias_devolucao_w)) 
		into STRICT	dt_prox_dia_util_w 
		;
 
		open c01;
		loop 
		fetch c01 into	 
			nr_seq_entrega_w, 
			nr_ordem_compra_w, 
			ds_motivo_devolucao_w, 
			ie_motivo_devolucao_w, 
			nr_seq_tipo_nao_conf_w, 
			nr_item_oci_w, 
			qt_devolvida_w, 
			qt_prevista_entrega_w, 
			dt_prevista_entrega_w, 
			nr_seq_inspecao_w, 
			qt_real_entrega_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
 
			if (ds_motivo_devolucao_w IS NOT NULL AND ds_motivo_devolucao_w::text <> '') then 
				ds_observacao_w := substr(WHEB_MENSAGEM_PCK.get_texto(299474,'NR_SEQ_REGISTRO_P='||nr_seq_registro_p||';DS_MOTIVO_DEVOLUCAO_W='||ds_motivo_devolucao_w),1,255);
			end if;
			 
			if (trunc(dt_prevista_entrega_w,'dd') <= trunc(clock_timestamp(),'dd')) then 
				dt_entrega_w := dt_prox_dia_util_w;
			else 
				dt_entrega_w := trunc(dt_prevista_entrega_w,'dd');
			end if;			
			 
		 
			/* Se teve entrega realizada */
 
			if (qt_real_entrega_w > 0) then 
			 
				qt_saldo_w := qt_prevista_entrega_w - qt_real_entrega_w;
			 
				/*Ajusta a entrega realizada*/
 
				update	ordem_compra_item_entrega 
				set	qt_prevista_entrega = qt_real_entrega_w 
				where	nr_ordem_compra = nr_ordem_compra_w 
				and	nr_sequencia = nr_seq_entrega_w;
				 
				select	nextval('ordem_compra_item_entrega_seq') 
				into STRICT	nr_sequencia_w 
				;
				 
				/*Cria uma entrega cancelada que é a entrega que foi devolvida*/
 
				insert	into ordem_compra_item_entrega( 
					nr_sequencia, 
					nm_usuario, 
					dt_atualizacao, 
					qt_prevista_entrega, 
					dt_prevista_entrega, 
					dt_entrega_original, 
					dt_entrega_limite, 
					nr_ordem_compra, 
					nr_item_oci, 
					ds_observacao, 
					dt_cancelamento, 
					ie_cancelada_inspecao) 
				SELECT	nr_sequencia_w, 
					nm_usuario_p, 
					clock_timestamp(), 
					qt_devolvida_w, 
					dt_prevista_entrega, 
					dt_entrega_original, 
					dt_entrega_limite, 
					nr_ordem_compra, 
					nr_item_oci, 
					ds_observacao_w, 
					clock_timestamp(), 
					'S' 
				from	ordem_compra_item_entrega 
				where	nr_ordem_compra = nr_ordem_compra_w 
				and	nr_sequencia = nr_seq_entrega_w;
				 
			/*Se não tem entrega realizada*/
	 
			else 
								 
				qt_saldo_w	:= qt_prevista_entrega_w - qt_devolvida_w;
				 
				if (qt_saldo_w > 0) then 
				 
					select	nextval('ordem_compra_item_entrega_seq') 
					into STRICT	nr_sequencia_w 
					;
 
					/*Gera uma nova entrega com o saldo*/
 
					insert	into ordem_compra_item_entrega( 
						nr_sequencia, 
						nm_usuario, 
						dt_atualizacao, 
						qt_prevista_entrega, 
						dt_prevista_entrega, 
						dt_entrega_original, 
						dt_entrega_limite, 
						nr_ordem_compra, 
						nr_item_oci) 
					SELECT	nr_sequencia_w, 
						nm_usuario_p, 
						clock_timestamp(), 
						qt_saldo_w, 
						dt_prevista_entrega, 
						dt_entrega_original, 
						dt_entrega_limite, 
						nr_ordem_compra, 
						nr_item_oci 
					from	ordem_compra_item_entrega 
					where	nr_ordem_compra = nr_ordem_compra_w 
					and	nr_sequencia = nr_seq_entrega_w;
					 
					/*Altera a quantidade prevista da entrega devolvida*/
 
					update	ordem_compra_item_entrega 
					set	qt_prevista_entrega = qt_devolvida_w 
					where	nr_ordem_compra = nr_ordem_compra_w 
					and	nr_sequencia = nr_seq_entrega_w;
					 
				end if;
				 
				/*Cancela a entrega devolvida*/
 
				update	ordem_compra_item_entrega 
				set	dt_cancelamento = clock_timestamp(), 
					ds_observacao = ds_observacao_w, 
					ie_cancelada_inspecao = 'S' 
				where	nr_ordem_compra = nr_ordem_compra_w 
				and	nr_sequencia = nr_seq_entrega_w;
 
			end if;
			 
			update	inspecao_recebimento 
			set	ie_motivo_devolucao = ie_motivo_devolucao_w, 
				nr_seq_tipo_nao_conf = nr_seq_tipo_nao_conf_w 
			where	nr_sequencia = nr_seq_inspecao_w 
			and  nr_seq_registro = nr_seq_registro_p;
			 
			update	inspecao_recebimento 
			set	nr_seq_entrega = nr_sequencia_w 
			where	nr_ordem_compra = nr_ordem_compra_w 
			and	nr_item_oci = nr_item_oci_w 
			and  nr_seq_registro = nr_seq_registro_p;
			 
			select	coalesce(max(nr_sequencia),0) 
			into STRICT	nr_seq_entrega_ww 
			from	ordem_compra_item_entrega 
			where	nr_ordem_compra = nr_ordem_compra_w 
			and	nr_item_oci = nr_item_oci_w 
			and	trunc(dt_prevista_entrega) = trunc(dt_entrega_w) 
			and	coalesce(dt_cancelamento::text, '') = '' 
			and	nr_sequencia <> nr_seq_entrega_w;
 
			if (nr_seq_entrega_ww > 0) then 
				/*Atualiza a entrega caso a data seja a mesma conforme parametro 81*/
 
				select	coalesce(sum(qt_prevista_entrega),0) 
				into STRICT	qt_prevista_entrega_ww 
				from	ordem_compra_item_entrega 
				where	nr_ordem_compra = nr_ordem_compra_w 
				and	nr_item_oci = nr_item_oci_w 
				--and	trunc(dt_prevista_entrega) = trunc(dt_entrega_w) 
				and	coalesce(dt_cancelamento::text, '') = '';
				--and	nr_sequencia <> nr_seq_entrega_w; 
				 
				select	max(qt_material) 
				into STRICT	qt_material_w 
				from	ordem_compra_item 
				where	nr_ordem_compra = nr_ordem_compra_w 
				and	nr_item_oci = nr_item_oci_w;
				 
				if	((qt_prevista_entrega_ww + qt_devolvida_w) <= qt_material_w) then 
					update	ordem_compra_item_entrega 
					set	qt_prevista_entrega = (qt_prevista_entrega + qt_devolvida_w) 
					where	nr_ordem_compra = nr_ordem_compra_w 
					and	nr_sequencia = nr_seq_entrega_ww;
				elsif (qt_devolvida_w <= qt_material_w) then 
					update	ordem_compra_item_entrega 
					set	qt_prevista_entrega = qt_devolvida_w 
					where	nr_ordem_compra = nr_ordem_compra_w 
					and	nr_sequencia = nr_seq_entrega_ww;
				end if;
								 
			else 
				/*Gera nova entrega para os itens cancelados conforme parametro 81*/
 
				insert	into ordem_compra_item_entrega( 
					nr_sequencia, 
					nm_usuario, 
					dt_atualizacao, 
					qt_prevista_entrega, 
					dt_prevista_entrega, 
					dt_entrega_original, 
					dt_entrega_limite, 
					nr_ordem_compra, 
					nr_item_oci) 
				SELECT	nextval('ordem_compra_item_entrega_seq'), 
					nm_usuario_p, 
					clock_timestamp(), 
					qt_devolvida_w, 
					dt_entrega_w, 
					dt_entrega_original, 
					dt_entrega_w, 
					nr_ordem_compra, 
					nr_item_oci 
				from	ordem_compra_item_entrega 
				where	nr_ordem_compra = nr_ordem_compra_w 
				and	nr_sequencia = nr_seq_entrega_w;
			end if;
 
			ds_historico_w	:= 	substr(WHEB_MENSAGEM_PCK.get_texto(299480,'NR_ITEM_OCI_W='||nr_item_oci_w|| 
									';DT_PREVISTA_ENTREGA_W='||dt_prevista_entrega_w|| 
									';DT_ENTREGA_W='||dt_entrega_w),1,4000);
 
			CALL inserir_historico_ordem_compra( 
				nr_ordem_compra_w, 
				'S', 
				WHEB_MENSAGEM_PCK.get_texto(299491), 
				ds_historico_w, 
				nm_usuario_p);
			 
 
			if (ie_envia_email_w <> 'S') then 
				select	obter_se_envia_email_regra(nr_seq_inspecao_w,'IR',86,cd_estabelecimento_p) 
				into STRICT	ie_envia_email_w 
				;
			end if;
			end;
		end loop;
		close c01;
 
		if (ie_envia_email_w = 'S') then 
 
			cd_perfil_ativo_w := obter_perfil_ativo;
 
			open c03;
			loop 
			fetch c03 into	 
				nr_ordem_compra_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin 
				open c02;
				loop 
				fetch c02 into 
					nr_seq_regra_w, 
					ds_email_adicional_w, 
					cd_perfil_disparar_w, 
					ie_momento_envio_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					begin 
					select substr(obter_dados_regra_email_compra(86, cd_estabelecimento_p, nr_seq_registro_p, 'O', null, nm_usuario_p, null),1,255), 
						substr(obter_dados_regra_email_compra(86, cd_estabelecimento_p, nr_seq_registro_p, 'U', null, nm_usuario_p, null),1,255), 
						--substr(sup_obter_dados_comprador(cd_estabelecimento_p,cd_comprador,'E'),1,255), OS 574256 - Cliente pediu para retirar	19/07/2013 
						cd_pessoa_solicitante 
					into STRICT	ds_email_origem_w, 
						nm_usuario_origem_w, 
						--ds_email_destino_w, 
						cd_pessoa_solic_w 
					from	ordem_compra 
					where	nr_ordem_compra = nr_ordem_compra_w;
 
					select	max(ds_email) 
					into STRICT	ds_email_solicitante_w 
					from	usuario 
					where	cd_pessoa_fisica = cd_pessoa_solic_w;
 
					ds_item_ww	:= '';
					ds_item_w	:= '';
 
					open c04;
					loop 
					fetch c04 into	 
						ds_motivo_devolucao_ww, 
						ds_item_w;
					EXIT WHEN NOT FOUND; /* apply on c04 */
						begin 
						if (ds_motivo_devolucao_ww IS NOT NULL AND ds_motivo_devolucao_ww::text <> '') then 
							ds_item_ww := substr(ds_item_ww || ds_item_w || WHEB_MENSAGEM_PCK.get_texto(299492) || ds_motivo_devolucao_ww || chr(10),1,2000);
						else 
							ds_item_ww := substr(ds_item_ww || ds_item_w || chr(10),1,2000);
						end if;
						end;
					end loop;
					close c04;
					 
					open c05;
					loop 
					fetch c05 into	 
						ds_nao_conformidade_w, 
						ds_item_NC_w;
					EXIT WHEN NOT FOUND; /* apply on c05 */
						begin 
						if (ds_nao_conformidade_w IS NOT NULL AND ds_nao_conformidade_w::text <> '') then			/* - Não conformidade: */
 
							ds_item_NC_ww := substr(ds_item_NC_ww || ds_item_NC_w || WHEB_MENSAGEM_PCK.get_texto(408135) || ds_nao_conformidade_w || chr(10),1,2000);
						else 
							ds_item_NC_ww := substr(ds_item_NC_ww || ds_item_NC_w || chr(10),1,2000);
						end if;
						end;
					end loop;
					close c05;
					 
					select	ds_assunto,						 
						ds_mensagem_padrao 
					into STRICT	ds_assunto_w, 
						ds_mensagem_padrao_w 
					from	regra_envio_email_compra 
					where	nr_sequencia = nr_seq_regra_w;
					 
					ds_assunto_w := SUBSTR(replace_macro(ds_assunto_w,'@nr_ordem_compra', nr_ordem_compra_w), 1, 255);
					ds_assunto_w := SUBSTR(replace_macro(ds_assunto_w,'@nr_inspecao', nr_seq_registro_p), 1, 255);
					ds_assunto_w := SUBSTR(replace_macro(ds_assunto_w,'@mat_mtvo_dev', ds_item_ww), 1, 255);
					ds_assunto_w := SUBSTR(replace_macro(ds_assunto_w,'@nao_conformidade', ds_item_NC_ww), 1, 255); 			
					ds_assunto_w := SUBSTR(ds_assunto_w, 1, 255); 	
					ds_mensagem_padrao_w := SUBSTR(replace_macro(ds_mensagem_padrao_w,'@nr_ordem_compra', nr_ordem_compra_w), 1, 4000);	
					ds_mensagem_padrao_w := SUBSTR(replace_macro(ds_mensagem_padrao_w,'@nr_inspecao', nr_seq_registro_p), 1, 4000);	
					ds_mensagem_padrao_w := SUBSTR(replace_macro(ds_mensagem_padrao_w,'@mat_mtvo_dev', ds_item_ww), 1, 4000);		
					ds_mensagem_padrao_w := SUBSTR(replace_macro(ds_mensagem_padrao_w,'@nao_conformidade', ds_item_NC_ww), 1, 4000);	
					ds_mensagem_padrao_w := ds_mensagem_padrao_w;	 	
					 
					if (coalesce(cd_perfil_disparar_w::text, '') = '') or (cd_perfil_disparar_w IS NOT NULL AND cd_perfil_disparar_w::text <> '') and (cd_perfil_disparar_w = cd_perfil_ativo_w) then 
 
						/*OS 574256 - Cliente pediu para retirar	19/07/2013 
						if	(ds_email_solicitante_w is not null) then 
							ds_email_destino_w := substr(ds_email_solicitante_w || ';' || ds_email_destino_w,1,2000); 
						end if;*/
 
 
						if (ds_email_adicional_w IS NOT NULL AND ds_email_adicional_w::text <> '') then 
							ds_email_destino_w := substr(ds_email_adicional_w || ';' || ds_email_destino_w ,1,2000);
						end if;
 
						if (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then 
						 
							if (ie_momento_envio_w = 'A') then 
 
								CALL sup_grava_envio_email( 
									'IR', 
									'86', 
									nr_seq_registro_p, 
									null, 
									null, 
									ds_email_destino_w, 
									nm_usuario_origem_w, 
									ds_email_origem_w, 
									ds_assunto_w, 
									ds_mensagem_padrao_w, 
									cd_estabelecimento_p, 
									nm_usuario_p);
 
							else 
								CALL enviar_email(ds_assunto_w, ds_mensagem_padrao_w, ds_email_origem_w, ds_email_destino_w, nm_usuario_origem_w,'M');
							end if;
						end if;
					end if;
					end;
				end loop;
				close c02;
				end;
			end loop;
			close c03;
		end if;
	end if;
	commit;
elsif (qt_registros_w = 0) then 
	/* É necessário pelo menos um dos itens da contagem com o motivo devolução informado. */
 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(247784);
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE devolver_reg_inspecao (nr_seq_registro_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

