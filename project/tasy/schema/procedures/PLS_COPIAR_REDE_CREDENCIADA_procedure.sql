-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_rede_credenciada ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE



ds_motivo_w			varchar(255);
ie_situacao_w			varchar(1);
ds_documento_w			varchar(120);
ie_prestador_w			varchar(1);
cd_tipo_prestador_w		varchar(10);
ds_tipo_prestador_w		varchar(255);
nr_seq_motivo_descred_w		bigint;
nr_seq_tipo_documento_w		bigint;
nr_seq_tipo_prestador_w		bigint;
qt_registro_w			bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		ds_motivo,
		ie_situacao
	from	pls_motivo_descred
	where	cd_estabelecimento = cd_estab_origem_p
	order by nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		ds_documento,
		ie_prestador,
		ie_situacao
	from	pls_tipo_documento
	where	cd_estabelecimento = cd_estab_origem_p
	order by nr_sequencia;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		cd_tipo_prestador,
		ds_tipo_prestador,
		ie_situacao
	from	pls_tipo_prestador
	where	cd_estabelecimento = cd_estab_origem_p
	order by nr_sequencia;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_motivo_descred_w,
	ds_motivo_w,
	ie_situacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	count(*)
	into STRICT	qt_registro_w
	from	pls_motivo_descred
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_motivo_descred_w;

	if (qt_registro_w	= 0) then
		insert into pls_motivo_descred(nr_sequencia, ds_motivo, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ie_situacao, cd_estabelecimento, nr_seq_anterior)
		values (nextval('pls_motivo_descred_seq'), ds_motivo_w, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			ie_situacao_w, cd_estab_destino_p, nr_seq_motivo_descred_w);
	end if;

	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_tipo_documento_w,
	ds_documento_w,
	ie_prestador_w,
	ie_situacao_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select	count(*)
	into STRICT	qt_registro_w
	from	pls_tipo_documento
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_tipo_documento_w;

	if (qt_registro_w	= 0) then
		insert into pls_tipo_documento(nr_sequencia, ds_documento, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ie_situacao, cd_estabelecimento, ie_prestador,
			nr_seq_anterior)
		values (nextval('pls_tipo_documento_seq'), ds_documento_w, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			ie_situacao_w, cd_estab_destino_p, ie_prestador_w,
			nr_seq_tipo_documento_w);
	end if;

	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_seq_tipo_prestador_w,
	cd_tipo_prestador_w,
	ds_tipo_prestador_w,
	ie_situacao_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	select	count(*)
	into STRICT	qt_registro_w
	from	pls_tipo_prestador
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_tipo_prestador_w;

	if (qt_registro_w	= 0) then
		insert into pls_tipo_prestador(nr_sequencia, cd_tipo_prestador, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ie_situacao, cd_estabelecimento, ds_tipo_prestador,
			nr_seq_anterior)
		values (nextval('pls_tipo_prestador_seq'), cd_tipo_prestador_w, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			ie_situacao_w, cd_estab_destino_p, ds_tipo_prestador_w,
			nr_seq_tipo_prestador_w);
	end if;

	end;
end loop;
close C03;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_rede_credenciada ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

