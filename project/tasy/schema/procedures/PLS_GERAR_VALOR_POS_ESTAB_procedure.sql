-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_valor_pos_estab ( nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_origem_valor_pos_p text, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, ie_acao_p text) AS $body$
DECLARE


_ora2pg_r RECORD;
/*ie_acao_p
A - Atualizacao
Ir? atualizar o cabe?alho da an?lise
C -  Consist?ncia
Ir? apenas consistir a an?lise de p?s n?o ir? atualizar o cabe?alho
R - Recalcular item com log
F - Finaliza??o da contesta??o onde ser?o gerados os valores ap?s a finaliza??o da contesta??o
RC - Recurso de glosa

GMR - Gera??o manual de p?s pelo recurso de glosa. Funciona exatamente como  quando informado ie_acao_p exceto tratativa
  especial para casos de benefici?rios com plano pr? que por vias normais n?o teriam gerado p?s, mas devem gerar pela a??o manual.

CA - Aviso de cobranca (A520), vai ter o mesmo funcionamento da op?ao A, EXCETO pelo fato de tratar o 
	IE_STATUS_FATURAMENTO e IE_COBRAR_MENSALIDADE diferente e nao chamar a pls_gerar_contab_val_adic
	
CAB Mesma coisa que o CA, porem e para tratar especificamente de modificacao do beneficiario na conta, para apenas nao gerar relancamento de itens
de abertura de pacote, evitando replicacao de itens do aviso	
*/
ds_item_convertido_w    	varchar(255);
cd_usuario_plano_w    		varchar(30);
cd_item_convertido_w    	varchar(30);
cd_material_ops_w    		varchar(30);
ie_tipo_contratacao_w    	varchar(10);
cd_categoria_w      		varchar(10);
ie_tipo_guia_w      		varchar(10);
ie_tipo_despesa_w    		varchar(10);
ie_tipo_conta_w      		varchar(10);
ie_tipo_valor_w      		varchar(5);
ie_intercambio_cobranca_w  	varchar(5)  	:= 'N';
ie_tipo_segurado_w    		varchar(3);
ie_preco_plano_w    		varchar(2);
ie_calculo_pos_estab_w    	varchar(2);
ie_calcula_preco_benef_w  	varchar(1);
ie_internado_w      		varchar(1);
ie_tecnica_utilizada_w    	varchar(1);
ie_cobranca_pos_w    		varchar(1)  	:= 'N';
ie_status_w      		varchar(1);
ie_origem_conta_w    		varchar(1);
ie_cobranca_pos_estab_w    	varchar(1)  	:= 'N';
ie_param_operadora_w    	varchar(1);
ie_status_faturamento_w    	varchar(1)  	:= 'U';
ie_glosa_w      		varchar(1);
ie_taxa_w      			varchar(1);
tx_inter_gerada_w    		double precision  	:= 0;
vl_procedimento_w    		double precision  	:= 0;
vl_apresentado_w    		double precision  	:= 0;
vl_beneficiario_w    		double precision  	:= 0;
vl_custo_operacional_w    	double precision  	:= 0;
vl_medico_w      		double precision  	:= 0;
vl_material_w      		double precision  	:= 0;
vl_procedimento_ptu_w    	double precision  	:= 0;
vl_co_ptu_w      		double precision  	:= 0;
vl_material_ptu_w    		double precision  	:= 0;
vl_materiais_w      		double precision;
vl_calculado_w      		double precision;
vl_resultado_w      		double precision   	:= 0;
vl_provisao_w      		double precision;
vl_administrativa_w    		double precision;
vl_liberado_w      		double precision;
vl_taxa_int_w      		double precision  	:= 0;
vl_total_beneciciario_w    	double precision;
vl_proc_beneciciario_w    	double precision;
vl_mat_beneciciario_w    	double precision;
vl_liberado_material_fat_w  	double precision;
vl_liberado_co_fat_w    	double precision;
vl_liberado_hi_fat_w    	double precision;
vl_glosa_material_fat_w    	double precision;
vl_glosa_hi_fat_w    		double precision;
vl_glosa_co_fat_w    		double precision;
nr_seq_material_w    		bigint;
cd_procedimento_w    		bigint;
qt_procedimento_w    		double precision;
qt_material_w      		double precision;
nr_seq_procedimento_w    	bigint;
nr_seq_segurado_w    		bigint;
cd_estabelecimento_w    	bigint;
nr_seq_categoria_w    		bigint;
nr_seq_tipo_acomodacao_w  	bigint;
ie_origem_proced_w    		bigint;
ie_origem_proc_regra_w    	procedimento.ie_origem_proced%type;
nr_seq_tipo_atendimento_w  	bigint;
nr_seq_clinica_w    		bigint;
nr_seq_plano_w      		bigint;
nr_seq_contrato_w    		bigint  	:= null;
nr_seq_outorgante_w    		bigint;
cd_convenio_w      		bigint;
qt_dias_internacao_w    	bigint;
nr_seq_classificacao_prest_w  	bigint;
nr_seq_regra_pos_estab_w  	bigint;
nr_seq_regra_horario_w    	bigint;
nr_seq_prestador_exec_w    	bigint;
nr_seq_cod_material_w    	bigint;
qt_devolucao_carteira_w    	bigint;
nr_seq_regra_w      		bigint;
nr_seq_congenere_w    		bigint;
nr_seq_regra_conversao_w  	bigint;
nr_seq_analise_w    		bigint;
nr_seq_analise_ww    		bigint;
nr_seq_pos_estab_w    		bigint;
nr_seq_regra_int_w    		bigint;
nr_seq_pos_estab_interc_w  	bigint;
ie_origem_conversao_w    	bigint;
nr_seq_intercambio_w    	bigint  	:= null;
nr_seq_ops_congenere_w    	bigint  	:= null;
nr_seq_protocolo_w    		bigint;
nr_seq_fatura_w      		bigint;
qt_dia_proced_receb_w    	bigint;
nr_seq_regra_conv_w    		bigint;
nr_seq_mat_ret_w    		bigint;
qt_recalc_pos_estab_w    	bigint;
tx_item_w      			double precision  	:= 0;
tx_administrativa_w    		double precision;
tx_administracao_w    		double precision;
tx_intercambio_w    		double precision;
tx_intercambio_cont_w    	double precision;
qt_registro_w      		integer  	:= 0;
ie_origem_preco_w    		smallint;
ie_tipo_tabela_conv_w    	smallint;
dt_rescisao_w      		timestamp;
dt_procedimento_w    		timestamp;
dt_atendimento_w    		timestamp;
dt_emissao_w      		timestamp;
nr_seq_congenere_seg_w    	bigint;
nr_seq_congenere_outorg_w  	bigint;
qt_liberada_w      		double precision;
vl_calculado_fat_w    		double precision;
dt_inicio_item_w    		timestamp;
dt_fim_item_w      		timestamp;
qt_conta_cabecalho_w    	integer;
ie_pos_estab_faturamento_w  	pls_parametros.ie_pos_estab_faturamento%type;
ie_geracao_pos_estabelecido_w  	pls_parametros.ie_geracao_pos_estabelecido%type;
cd_procedimento_original_w  	pls_conta_proc.cd_procedimento%type;
ie_preco_interc_congenere_w  	pls_parametros.ie_preco_interc_congenere%type;
ie_taxa_contrato_pos_w    	pls_parametros.ie_taxa_contrato_pos%type;
ie_controle_pos_estabelecido_w  pls_parametros.ie_controle_pos_estabelecido%type;
qt_registros_proc_xml_w    	bigint;
qt_registros_mat_xml_w    	bigint;
cd_item_conver_xml_w    	bigint;
ie_origem_proced_conver_xml_w  	bigint;
nr_seq_regra_conver_xml_w  	bigint;
nr_seq_tiss_tab_conver_xml_w  	bigint;
nr_seq_regra_mat_conver_w  	bigint;
vl_medico_calc_w    		pls_conta_pos_estabelecido.vl_medico_calc%type;
vl_materiais_calc_w    		pls_conta_pos_estabelecido.vl_materiais_calc%type;
vl_custo_operacional_calc_w  	pls_conta_pos_estabelecido.vl_custo_operacional_calc%type;
ie_tipo_intercambio_w    	pls_conta_v.ie_tipo_intercambio%type;
dt_alta_w      			pls_conta.dt_alta%type;
dt_postagem_fatura_w    	ptu_fatura.dt_postagem%type;
dt_recebimento_fatura_w    	ptu_fatura.dt_recebimento_fatura%type;
nr_seq_grupo_coop_seg_w    	pls_segurado.nr_seq_grupo_coop%type;
ie_beneficio_obito_w    	pls_plano.ie_seguro_obito%type;
ie_pcmso_w      		pls_segurado.ie_pcmso%type;
ie_gera_pos_estab_w    		pls_ger_pos_estabelecido.ie_gera_pos_estabelecido%type;
dados_conta_valor_w    		pls_cta_valorizacao_pck.dados_conta;
dados_conta_proc_valor_w  	pls_cta_valorizacao_pck.dados_conta_proc;
dados_conta_mat_valor_w    	pls_cta_valorizacao_pck.dados_conta_mat;
dados_beneficiario_valor_w  	pls_cta_valorizacao_pck.dados_beneficiario;
dados_fatura_valor_w    	pls_cta_valorizacao_pck.dados_fatura;
dados_tx_interc_valor_w    	pls_cta_valorizacao_pck.dados_taxa_intercambio;
dados_procedimento_w    	pls_cta_valorizacao_pck.dados_procedimento;
dados_conta_pos_w    		pls_cta_valorizacao_pck.dados_conta_pos;
dados_regra_preco_pos_estab_w  	pls_cta_valorizacao_pck.dados_regra_preco_pos_estab;
tx_inter_out_w      		pls_conta_proc.tx_intercambio%type;
ie_log_w      			varchar(1)  := 'N';
ds_observacao_log_w    		varchar(4000);
nr_seq_discussao_proc_w    	pls_discussao_proc.nr_sequencia%type;
nr_seq_discussao_mat_w    	pls_discussao_mat.nr_sequencia%type;
nr_seq_discussao_w    		pls_discussao_proc.nr_seq_discussao%type;
qt_lib_total_w      		pls_conta_proc.qt_procedimento%type;
nr_seq_pos_cabecalho_w    	pls_conta_pos_cabecalho.nr_sequencia%type;
vl_glosa_taxa_co_w         	pls_conta_pos_estabelecido.vl_glosa_taxa_co%type;
vl_glosa_taxa_material_w  	pls_conta_pos_estabelecido.vl_glosa_taxa_material%type;
vl_glosa_taxa_servico_w   	pls_conta_pos_estabelecido.vl_glosa_taxa_servico%type;
vl_lib_taxa_co_w         	pls_conta_pos_estabelecido.vl_lib_taxa_co%type;
vl_lib_taxa_material_w    	pls_conta_pos_estabelecido.vl_lib_taxa_material%type;
vl_lib_taxa_servico_w       	pls_conta_pos_estabelecido.vl_lib_taxa_servico%type;
vl_taxa_co_w       		pls_conta_pos_estabelecido.vl_taxa_co%type;
vl_taxa_material_w    		pls_conta_pos_estabelecido.vl_taxa_material%type;
vl_taxa_servico_w     		pls_conta_pos_estabelecido.vl_taxa_servico%type;
vl_dif_w      			double precision;
vl_total_taxa_w      		double precision;
ie_tipo_congenere_w    		pls_congenere.ie_tipo_congenere%type;
nr_seq_conta_pos_cab_w    	pls_conta_pos_cabecalho.nr_sequencia%type;
dados_regra_preco_proc_w  	pls_cta_valorizacao_pck.dados_regra_preco_proc;
dados_regra_preco_material_w  	pls_cta_valorizacao_pck.dados_regra_preco_material;
ie_vl_pag_prestador_w    	varchar(1);
ie_somente_codigo_w    		pls_conversao_proc.ie_somente_codigo%type;
qt_regra_int_w      		integer;
ie_tipo_repasse_w    		pls_intercambio.ie_tipo_repasse%type;
ie_tipo_repasse_seg_w    	pls_segurado.ie_tipo_repasse%type;
dt_validade_carteira_w    	pls_segurado_carteira.dt_validade_carteira%type;
nr_via_solicitacao_w    	pls_segurado_carteira.nr_via_solicitacao%type;
nr_seq_proc_rec_w    		pls_rec_glosa_proc.nr_sequencia%type;
nr_seq_mat_rec_w    		pls_rec_glosa_mat.nr_sequencia%type;
nr_seq_conta_rec_w    		pls_rec_glosa_conta.nr_sequencia%type;
ie_cobrar_mensalidade_w    	pls_conta_pos_estabelecido.ie_cobrar_mensalidade%type;
ie_tipo_protocolo_w    		pls_protocolo_conta.ie_tipo_protocolo%type;
dt_mes_competencia_w    	pls_protocolo_conta.dt_mes_competencia%type;
ie_tipo_prestador_atend_w  	varchar(2);
ie_tipo_prestador_exec_w  	varchar(2);
ie_acao_contab_val_adic_w  	varchar(2);
ie_origem_protocolo_w    	pls_protocolo_conta.ie_origem_protocolo%type;
vl_liberado_co_w    		pls_conta_proc.vl_liberado_co%type;
vl_liberado_hi_w    		pls_conta_proc.vl_liberado_hi%type;
vl_liberado_material_w     	pls_conta_proc.vl_liberado_material%type;
vl_lib_original_w    		pls_conta_proc.vl_liberado%type;
nr_seq_regra_pct_fat_w    	pls_conta_proc.nr_seq_regra_pct_fat%type;
qt_mult_quantidade_w    	pls_conversao_proc.qt_mult_quantidade%type;
ds_altera_item_pos_w    	pls_conta_pos_estabelecido.ds_item_ptu%type;
vl_beneficiario_ww    		pls_conta_pos_estabelecido.vl_beneficiario%type;
ie_cobrar_co_w      		pls_regra_cobr_val_pos.ie_cobrar_custo_op%type := 'S';
ie_cobrar_filme_w    		pls_regra_cobr_val_pos.ie_cobrar_filme%type := 'S';
nr_seq_grau_partic_w    	pls_grau_participacao.nr_sequencia%type;
qt_partic_w      		integer;
ie_apropriacao_copartic_w  	pls_parametros.ie_apropriacao_copartic%type;
ie_gera_w      			varchar(1) := 'S';
qt_apropriacao_w    		integer;
qt_item_pos_w      		pls_conta_pos_estabelecido.qt_item%type;
vl_benef_aprop_w    		pls_conta_proc_aprop.vl_beneficiario%type;
vl_beneficiario_tmp_w    	pls_conta_pos_estabelecido.vl_beneficiario%type;
vl_dif_arredondamento_w    	double precision;
ie_tipo_log_w      		pls_log_calculo_proc.ie_tipo_log%type := 'C';
det_reg_anvisa_w    		pls_conta_mat.det_reg_anvisa%type;
qt_filme_tab_proc_w       	pls_conta_proc.qt_filme_tab%type;
qt_filme_tab_proc_aplicar_w   	pls_conta_proc.qt_filme_tab%type;
dt_limite_utilizacao_w    	timestamp;
ie_glosa_parcial_w    		varchar(1);
vl_glosa_w      		double precision;
nr_seq_ajuste_fat_w    		pls_conta_v.nr_seq_ajuste_fat%type;
ie_vl_pag_prestador_ww    	pls_conta_pos_estabelecido.ie_vl_pag_prestador%type;
qt_liberado_w      		pls_conta_proc.qt_procedimento%type;
ie_horario_rescisao_w    	pls_parametros.ie_horario_rescisao%type;
dt_item_base_w      		pls_conta_proc.dt_procedimento%type;
ie_gera_pos_resc_w    		varchar(1);
nr_seq_regra_co_filme_w    	pls_regra_cobr_val_pos.nr_sequencia%type;
nr_seq_regra_pos_estab_ww  	pls_conta_pos_estabelecido.nr_seq_regra_pos_estab%type;
nr_seq_pos_estab_interc_ww  	pls_conta_pos_estabelecido.nr_seq_pos_estab_interc%type;
vl_lib_taxa_mat_w    		pls_conta_mat.vl_lib_taxa_material%type;
qt_registros_gerados_pos_w  	integer;
ie_acao_w      			varchar(3);
qt_disc_pos_w      		bigint;
nr_seq_prest_inter_w    	pls_conta.nr_seq_prest_inter%type;
ie_ignorar_lib_usuario_w  	varchar(1) := 'N';
ds_sql_w      			varchar(1000);
vl_liberado_com_tx_inter_w  	pls_conta_proc.vl_liberado%type;
nr_seq_grupo_intercambio_w  	pls_intercambio.nr_seq_grupo_intercambio%type;
nr_seq_regra_un_minima_w  	pls_regra_conv_um_mat.nr_sequencia%type;
cd_simpro_w			pls_material.cd_simpro%type;
dt_vigencia_w			simpro_preco.dt_vigencia%type;
qt_embalagem_w			simpro_preco.qt_embalagem%type;
cd_unidade_medida_w		pls_conta_pos_estabelecido.cd_unidade_medida%type;
ie_tipo_fracao_mat_w		simpro_preco.ie_tipo_fracao%type;
cd_unidade_medida_conta_mat_w	pls_conta_mat.cd_unidade_medida%type;
qt_pos_w			integer;
qt_registro_cab_pos_w    	integer  := 0;
ie_aviso_a520_proc_w		pls_conta_proc_regra.ie_a520%type;
ie_aviso_a520_mat_w		pls_conta_mat_regra.ie_a520%type;
qt_pos_a520_abert_pct_w  integer;
qt_pos_abert_pct_w integer;
ie_tipo_faturamento_w	pls_conta.ie_tipo_faturamento%type;
vl_benef_sem_tx_w		pls_conta_proc.vl_beneficiario%type;
vl_lib_taxa_servico_pag_w	pls_conta_proc.vl_lib_taxa_servico%type;
vl_lib_taxa_co_pag_w 		pls_conta_proc.vl_lib_taxa_co%type;
vl_lib_taxa_material_pag_w	pls_conta_proc.vl_lib_taxa_material%type;
nr_seq_regra_conv_proc_w	pls_conta_proc.nr_seq_regra_conv%type;
nr_seq_proc_princ_w		pls_conta_proc.nr_seq_proc_princ%type;
qt_pos_a520_conv_proc_w		integer;
ie_benef_remido_w		varchar(1);
ie_gerar_pos_remido_w		pls_parametro_faturamento.ie_gerar_pos_remido%type;
vl_liquido_w			pls_conta_proc.vl_liquido%type;
nr_seq_mot_reembolso_w		pls_motivo_reembolso.nr_sequencia%type;
ie_desc_copart_pos_w		pls_motivo_reembolso.ie_desconta_copartic_pos%type;
vl_diferenca_w			double precision;
pr_proporcao_w			double precision := 1;
vl_participacao_w		pls_conta_mat.vl_participacao%type;
ie_gerar_partic_conta_w		pls_parametro_faturamento.ie_gerar_partic_conta%type;
qt_ocor_partic_w		integer;
qt_reg_prev_w  			integer  := 0;
qt_reg_impede_geracao_w 	integer := 0;
nr_seq_disc_mat_w		pls_conta_pos_estabelecido.nr_seq_disc_mat%type;
nr_seq_disc_proc_w		pls_conta_pos_estabelecido.nr_seq_disc_proc%type;
ie_processou_valor_co_w		varchar(1);
vl_mult_w			double precision;
qt_glosa_partic_w		integer;
vl_procedimento_ptu_old_w	pls_conta_proc.vl_procedimento_ptu%type;
vl_co_ptu_old_w			pls_conta_proc.vl_co_ptu%type;
vl_material_ptu_old_w		pls_conta_proc.vl_material_ptu%type;
vl_taxa_co_old_w		pls_conta_pos_estabelecido.vl_taxa_co%type;
vl_taxa_servico_old_w		pls_conta_pos_estabelecido.vl_taxa_servico%type;
vl_taxa_material_old_w		pls_conta_pos_estabelecido.vl_taxa_material%type;
ie_regra_5_vl_pag_prest_w	varchar(1) := 'N';
ie_lanc_opm_pac_fechado_w	pls_parametro_faturamento.ie_lancar_tx_opm_pac_fechado%type;
tx_intercambio_old_w		pls_conta_proc.tx_intercambio%type;
nr_seq_regra_tx_interc_w	pls_regra_intercambio.nr_sequencia%type;

C01 CURSOR FOR
	SELECT  a.nr_sequencia,
		coalesce(b.cd_procedimento,a.cd_procedimento),
		coalesce(b.ie_origem_proced,a.ie_origem_proced),
		a.vl_procedimento,
		a.vl_procedimento_imp,
		coalesce(a.tx_item,100),
		round((coalesce(a.qt_procedimento_imp,1))::numeric,3),
		a.nr_seq_regra_horario,
		a.ie_tecnica_utilizada,
		a.ie_tipo_despesa,
		coalesce(b.dt_item,coalesce(a.dt_procedimento,clock_timestamp())),
		a.vl_procedimento_ptu,
		a.vl_co_ptu,
		a.vl_material_ptu,
		a.vl_taxa_co,
		a.vl_taxa_servico,
		a.vl_taxa_material,
		a.vl_provisao,
		a.ie_status,
		a.nr_seq_regra_int,
		CASE WHEN coalesce(a.vl_liberado,0)=0 THEN a.vl_procedimento  ELSE a.vl_liberado END ,
		coalesce(a.ie_glosa,'N'),
		round((coalesce(a.qt_procedimento,0))::numeric,3),
		coalesce(b.dt_inicio_item,a.dt_inicio_proc),
		coalesce(b.dt_fim_item,a.dt_fim_proc),
		coalesce((  SELECT  max(x.nr_seq_grupo_rec)
		from  procedimento x
		where  x.ie_origem_proced = a.ie_origem_proced
		and  x.cd_procedimento = a.cd_procedimento),'0') nr_seq_grupo_rec,
		null nr_seq_discussao_proc,
		null nr_seq_discussao,
		d.ie_apresentacao,
		null ie_tipo_despesa_mat,
		d.nr_seq_prestador,
		null nr_seq_proc_rec,
		null nr_seq_conta_rec,
		d.ie_tipo_protocolo,
		d.dt_mes_competencia,
		d.ie_origem_protocolo,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_liberado_material,
		a.vl_liberado,
		a.nr_seq_regra_pct_fat,
		c.nr_seq_grau_partic,
		0 qt_apropriacao,
		0 qt_itens_pos,
		a.qt_filme_tab,
		a.vl_glosa,
		a.dt_procedimento dt_base_item,
		null qt_disc_pos_estab,
		c.nr_seq_prest_inter,
		(	select	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_proc_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520,
		coalesce(c.ie_tipo_faturamento, 'T') ie_tipo_faturamento,
		coalesce(a.vl_lib_taxa_servico,0) vl_lib_taxa_servico,
		coalesce(a.vl_lib_taxa_co,0) vl_lib_taxa_co, 
		coalesce(a.vl_lib_taxa_material,0) vl_lib_taxa_material,
		a.nr_seq_regra_conv,
		a.nr_seq_proc_princ,
		a.vl_liquido,
		(	select	count(1) qt_ocor_partic
			from	pls_ocorrencia_benef	x
			where	x.nr_seq_conta_proc	= a.nr_sequencia
			and	x.ie_situacao		= 'A'
			and	(x.nr_seq_proc_partic IS NOT NULL AND x.nr_seq_proc_partic::text <> '')) qt_ocor_partic,
		(	select	count(1) qt_ocor_partic
			from	pls_conta_glosa	x
			where	x.nr_seq_conta_proc	= a.nr_sequencia
			and	x.ie_situacao		= 'A'
			and	(x.nr_seq_proc_partic IS NOT NULL AND x.nr_seq_proc_partic::text <> '')) qt_glosa_partic,
		(   select 	count(1) 
			from 	pls_conta_pos_estab_prev 
			where 	nr_seq_conta_proc = a.nr_sequencia
			and 	a.ie_status = 'M'
			and 	coalesce(a.nr_seq_regra_lanc_aut::text, '') = '' 
			and 	coalesce(c.nr_seq_ajuste_fat::text, '') = ''
		) qt_reg_previa, --Apenas itens de faturamento manual oriundos de refaturamento e de lancamento automaico que tem ligacao tanto com pos, tanto com previa de pos
		b.nr_seq_disc_proc,
		a.tx_intercambio
	FROM pls_protocolo_conta d, pls_conta c, pls_conta_proc a
LEFT OUTER JOIN pls_conta_pos_estabelecido b ON (a.nr_sequencia = b.nr_seq_conta_proc AND b.nr_seq_regra_tx_opme is null   AND 'A' != b.ie_cobrar_mensalidade)
WHERE ((a.nr_seq_conta = nr_seq_conta_p and coalesce(nr_seq_conta_proc_p::text, '') = '' and coalesce(nr_seq_conta_mat_p::text, '') = '') or (a.nr_sequencia = nr_seq_conta_proc_p)) and a.ie_status     != 'D' and (a.ie_apenas_pagamento   = 'N' or coalesce(a.ie_apenas_pagamento::text, '') = '')     --Tratamento da regra de OPME, n?o deve entrar no cursor
  and c.nr_sequencia    = a.nr_seq_conta and d.nr_sequencia    = c.nr_seq_protocolo and ((coalesce(a.nr_seq_regra_conv::text, '') = '') or ((a.nr_seq_proc_princ IS NOT NULL AND a.nr_seq_proc_princ::text <> '') and a.ie_status = 'M'))  --Tratamento da regra de lan?amento autom?tico de p?s-estabelecido
  and ((coalesce(a.nr_seq_regra_pct_fat::text, '') = '') or (a.ie_status  = 'M') or (not exists (select 1 from pls_conta_proc proc where proc.nr_seq_conta = c.nr_sequencia and proc.ie_status = 'M' and proc.nr_seq_proc_pct = a.nr_sequencia))) --tratamento para pacotes abertos no faturamento
  and ((ie_acao_p    not in ('F','RC')) or (coalesce(ie_acao_p::text, '') = '')) and (coalesce(b.ie_tipo_liberacao::text, '') = '' or b.ie_tipo_liberacao <> 'U')  
union
   -- DISCUSS?O
	select  a.nr_sequencia,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.vl_procedimento,
		a.vl_procedimento_imp,
		coalesce(a.tx_item,100),
		round((coalesce(a.qt_procedimento_imp,1))::numeric,3),
		a.nr_seq_regra_horario,
		a.ie_tecnica_utilizada,
		a.ie_tipo_despesa,
		coalesce(a.dt_procedimento,clock_timestamp()),
		a.vl_procedimento_ptu,
		a.vl_co_ptu,
		a.vl_material_ptu,
		a.vl_taxa_co,
		a.vl_taxa_servico,
		a.vl_taxa_material,
		a.vl_provisao,
		a.ie_status,
		a.nr_seq_regra_int,
		b.vl_aceito,
		coalesce(a.ie_glosa,'N'),
		round((coalesce(a.qt_procedimento_imp,0) - coalesce(a.qt_procedimento,0)),3),
		a.dt_inicio_proc,
		a.dt_fim_proc,
		coalesce((  select  max(x.nr_seq_grupo_rec)
		from  procedimento x
		where  x.ie_origem_proced = a.ie_origem_proced
		and  x.cd_procedimento = a.cd_procedimento), '0') nr_seq_grupo_rec,
		b.nr_sequencia nr_seq_discussao_proc,
		b.nr_seq_discussao,
		d.ie_apresentacao,
		null ie_tipo_despesa_mat,
		d.nr_seq_prestador,
		null nr_seq_proc_rec,
		null nr_seq_conta_rec,
		d.ie_tipo_protocolo,
		d.dt_mes_competencia,
		d.ie_origem_protocolo,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_liberado_material,
		a.vl_liberado,
		a.nr_seq_regra_pct_fat,
		null nr_seq_grau_partic,
		0 qt_apropriacao,
		0 qt_itens_pos,
		a.qt_filme_tab,
		a.vl_glosa,
		a.dt_procedimento dt_base_item,
		(  select max(qt_item) from pls_conta_pos_estabelecido where nr_seq_disc_proc = b.nr_sequencia) qt_disc_pos_estab,
		c.nr_seq_prest_inter,
		'N' ie_a520,
		coalesce(c.ie_tipo_faturamento, 'T') ie_tipo_faturamento,
		coalesce(a.vl_lib_taxa_servico,0) vl_lib_taxa_servico, 
		coalesce(a.vl_lib_taxa_co,0) vl_lib_taxa_co, 
		coalesce(a.vl_lib_taxa_material,0) vl_lib_taxa_material,
		a.nr_seq_regra_conv,
		a.nr_seq_proc_princ,
		a.vl_liquido,
		0 qt_ocor_partic,
		0 qt_glosa_partic,
		(   	select 	count(1) 
			from 	pls_conta_pos_estab_prev 
			where 	nr_seq_conta_proc = a.nr_sequencia
			and 	a.ie_status = 'M'
			and 	coalesce(a.nr_seq_regra_lanc_aut::text, '') = ''
			and 	coalesce(c.nr_seq_ajuste_fat::text, '') = '') qt_reg_previa,
		b.nr_sequencia,
		a.tx_intercambio
	from  	pls_conta_proc    	a,
		pls_discussao_proc  	b,
		pls_conta    		c,
		pls_protocolo_conta  	d
	where  	((a.nr_seq_conta = nr_seq_conta_p and coalesce(nr_seq_conta_proc_p::text, '') = '' and coalesce(nr_seq_conta_mat_p::text, '') = '') or (a.nr_sequencia = nr_seq_conta_proc_p))
	and  	a.ie_status     != 'D'
	and (a.ie_apenas_pagamento = 'N' or coalesce(a.ie_apenas_pagamento::text, '') = '')
	and  	b.nr_seq_conta_proc  = a.nr_sequencia
	and  	c.nr_sequencia    = a.nr_seq_conta
	and  	d.nr_sequencia    = c.nr_seq_protocolo
	and  	ie_acao_p    = 'F'
	and  	((b.vl_aceito > 0) and ((coalesce(a.qt_procedimento_imp,0) - coalesce(a.qt_procedimento,0)) > 0))
	and  	a.qt_procedimento  != qt_procedimento_imp
	and  	not exists (  	select  1
				from  	pls_contestacao_discussao  x,
					pls_lote_discussao    y
				where  	x.nr_seq_lote    	= y.nr_sequencia
				and  	b.nr_seq_discussao   	= x.nr_sequencia
				and  	y.ie_status    		= 'C')
	and  not exists  (  	select  1
				from  	pls_conta_pos_estabelecido  x
				where  	x.nr_seq_conta_proc  	= a.nr_sequencia
				and  	x.ie_status_faturamento != 'N'
				and  	((x.ie_situacao  = 'A') or (coalesce(x.ie_situacao::text, '') = ''))
				and  	x.qt_item    		= a.qt_procedimento_imp)
	
union
  -- RECURSO DE GLOSA
	select  a.nr_sequencia,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.vl_procedimento,
		a.vl_procedimento_imp,
		coalesce(a.tx_item,100),
		round((coalesce(a.qt_procedimento_imp,1))::numeric,3),
		a.nr_seq_regra_horario,
		a.ie_tecnica_utilizada,
		a.ie_tipo_despesa,
		coalesce(a.dt_procedimento,clock_timestamp()),
		a.vl_procedimento_ptu,
		a.vl_co_ptu,
		a.vl_material_ptu,
		a.vl_taxa_co,
		a.vl_taxa_servico,
		a.vl_taxa_material,
		a.vl_provisao,
		a.ie_status,
		a.nr_seq_regra_int,
		b.vl_acatado,
		coalesce(a.ie_glosa,'N'),
		(coalesce(a.qt_procedimento_imp,0) - coalesce(qt_procedimento,0)) qt_procedimento,
		a.dt_inicio_proc,
		a.dt_fim_proc,
		coalesce((  select  max(x.nr_seq_grupo_rec)
		from  procedimento x
		where  x.ie_origem_proced = a.ie_origem_proced
		and  x.cd_procedimento = a.cd_procedimento), '0') nr_seq_grupo_rec,
		null nr_seq_discussao_proc,
		null nr_seq_discussao,
		d.ie_apresentacao,
		null ie_tipo_despesa_mat,
		d.nr_seq_prestador,
		b.nr_sequencia nr_seq_proc_rec,
		b.nr_seq_conta_rec,
		d.ie_tipo_protocolo,
		d.dt_mes_competencia,
		d.ie_origem_protocolo,
		a.vl_liberado_co,
		a.vl_liberado_hi,
		a.vl_liberado_material,
		a.vl_liberado,
		a.nr_seq_regra_pct_fat,
		null nr_seq_grau_partic,
		(select  count(1)
		from  pls_conta_proc_aprop x
		where  x.nr_seq_proc_rec = b.nr_sequencia) qt_apropriacao,
		(select  coalesce(sum(qt_item),0)
		from  pls_conta_pos_estabelecido x
		where  x.nr_seq_conta_proc = a.nr_sequencia
		and	x.ie_status_faturamento not in ('N', 'A')
		and	x.ie_cobrar_mensalidade	!= 'A'
		and  ((x.ie_situacao = 'A') or (coalesce(x.ie_situacao::text, '') = ''))) qt_itens_pos,
		a.qt_filme_tab,
		a.vl_glosa,
		a.dt_procedimento dt_base_item,
		null qt_disc_pos_estab,
		c.nr_seq_prest_inter,
		'N' ie_a520,
		coalesce(c.ie_tipo_faturamento, 'T') ie_tipo_faturamento,
		coalesce(a.vl_lib_taxa_servico,0) vl_lib_taxa_servico, 
		coalesce(a.vl_lib_taxa_co,0) vl_lib_taxa_co, 
		coalesce(a.vl_lib_taxa_material,0) vl_lib_taxa_material,
		a.nr_seq_regra_conv,
		a.nr_seq_proc_princ,
		a.vl_liquido,
		0 qt_ocor_partic,
		0 qt_glosa_partic,
		(   	select 	count(1) 
			from 	pls_conta_pos_estab_prev 
			where 	nr_seq_conta_proc = a.nr_sequencia
			and 	a.ie_status = 'M'
			and 	coalesce(a.nr_seq_regra_lanc_aut::text, '') = ''
			and 	coalesce(c.nr_seq_ajuste_fat::text, '') = '') qt_reg_previa,
		null nr_seq_discussao_proc,
		a.tx_intercambio
	from  	pls_conta_proc    	a,
		pls_rec_glosa_proc  	b,
		pls_conta    		c,
		pls_protocolo_conta  	d
	where  	((a.nr_seq_conta = nr_seq_conta_p and coalesce(nr_seq_conta_proc_p::text, '') = '' and coalesce(nr_seq_conta_mat_p::text, '') = '') or (a.nr_sequencia = nr_seq_conta_proc_p))
	and  	a.ie_status     != 'D'
	and (a.ie_apenas_pagamento = 'N' or coalesce(a.ie_apenas_pagamento::text, '') = '')
	and  	b.nr_seq_conta_proc  = a.nr_sequencia
	and  	c.nr_sequencia    = a.nr_seq_conta
	and  	d.nr_sequencia    = c.nr_seq_protocolo
	and  	ie_acao_p    = 'RC'
	and  	coalesce(b.vl_acatado,0)  > 0
	and  	not exists (  	select  1
				from  	pls_rec_glosa_protocolo  w,
					pls_rec_glosa_conta  n
				where  	w.nr_sequencia  = n.nr_seq_protocolo
				and  	n.nr_sequencia  = b.nr_seq_conta_rec
				and  	n.ie_status  = '2' -- Fechado
				and  	w.ie_status  in ('6'))
	and  	((ie_apropriacao_copartic_w = 'N') or exists (  select  1
								from  	pls_conta_proc_aprop
								where  	nr_seq_proc_rec = b.nr_sequencia
								and  	nr_seq_centro_aprop  in (  	select  nr_sequencia
													from  	pls_centro_apropriacao
													where  	ie_responsavel_apropriacao in ('1','2')))); -- Liberado para pagamento
C02 CURSOR FOR
	SELECT  a.nr_sequencia,
		a.nr_seq_material,
		a.ie_tipo_despesa,
		a.ie_origem_preco,
		a.vl_material,
		a.vl_material_imp,
		coalesce(a.qt_material_imp,0),
		coalesce(b.dt_item,coalesce(a.dt_atendimento,clock_timestamp())),
		a.vl_material_ptu,
		a.vl_taxa_material,
		a.vl_provisao,
		a.ie_status,
		a.nr_seq_regra_int,
		CASE WHEN coalesce(a.vl_liberado,0)=0 THEN a.vl_material  ELSE a.vl_liberado END ,
		coalesce(a.ie_glosa,'N'),
		coalesce(a.qt_material,0),
		coalesce(b.dt_inicio_item,a.dt_inicio_atend),
		coalesce(b.dt_fim_item,a.dt_fim_atend),
		null nr_seq_discussao_mat,
		null nr_seq_discussao,
		d.ie_apresentacao,
		a.ie_tipo_despesa,
		d.nr_seq_prestador,
		null nr_seq_mat_rec,
		null nr_seq_conta_rec,
		d.ie_tipo_protocolo,
		d.dt_mes_competencia,
		d.ie_origem_protocolo,
		a.vl_liberado,
		a.nr_seq_regra_pct_fat,
		0 qt_apropriacao,
		0 qt_itens_pos,
		a.det_reg_anvisa,
		a.vl_glosa,
		a.dt_atendimento dt_base_item,
		CASE WHEN coalesce(a.vl_liberado,0)=0 THEN a.vl_taxa_material  ELSE a.vl_lib_taxa_material END ,
		null qt_disc_pos_estab,
		c.nr_seq_prest_inter,
		(	SELECT	coalesce(max(x.ie_a520), 'N')
			from	pls_conta_mat_regra	x
			where	x.nr_sequencia		= a.nr_sequencia) ie_a520,
		coalesce(c.ie_tipo_faturamento, 'T') ie_tipo_faturamento,
		a.vl_participacao,
		(  	select 	count(1)
			from 	pls_conta_pos_estab_prev 
			where 	nr_seq_conta_mat = a.nr_sequencia
			and 	a.ie_status = 'M'
			and 	coalesce(a.nr_seq_regra_lanc_aut::text, '') = ''
			and 	coalesce(c.nr_seq_ajuste_fat::text, '') = '') qt_reg_previa,
		b.nr_seq_disc_mat,
		a.tx_intercambio
	FROM pls_protocolo_conta d, pls_conta c, pls_conta_mat a
LEFT OUTER JOIN pls_conta_pos_estabelecido b ON (a.nr_sequencia = b.nr_seq_conta_mat AND b.nr_seq_regra_tx_opme is null   AND b.nr_seq_mat_rec is null   AND 'A' != b.ie_cobrar_mensalidade)
WHERE ((a.nr_seq_conta  = nr_seq_conta_p and coalesce(nr_seq_conta_mat_p::text, '') = '' and coalesce(nr_seq_conta_proc_p::text, '') = '') or (a.nr_sequencia = nr_seq_conta_mat_p)) and a.ie_status     != 'D' and (a.ie_apenas_pagamento   = 'N' or coalesce(a.ie_apenas_pagamento::text, '') = '')     --Tratamento da regra de OPME, n?o deve entrar no cursor
  and coalesce(a.nr_seq_regra_conv::text, '') = '' and c.nr_sequencia    = a.nr_seq_conta and d.nr_sequencia    = c.nr_seq_protocolo and ((ie_acao_p    not in ('F','RC')) or (coalesce(ie_acao_p::text, '') = '')) and (coalesce(b.ie_tipo_liberacao::text, '') = '' or b.ie_tipo_liberacao <> 'U')  
union
  -- DISCUSS?O
	select  a.nr_sequencia,
		a.nr_seq_material,
		a.ie_tipo_despesa,
		a.ie_origem_preco,
		a.vl_material,
		a.vl_material_imp,
		coalesce(a.qt_material_imp,0),
		coalesce(a.dt_atendimento,clock_timestamp()),
		a.vl_material_ptu,
		a.vl_taxa_material,
		a.vl_provisao,
		a.ie_status,
		a.nr_seq_regra_int,
		b.vl_aceito,
		coalesce(a.ie_glosa,'N'),
		(coalesce(a.qt_material_imp,0) - coalesce(a.qt_material,0)),
		a.dt_inicio_atend,
		a.dt_fim_atend,
		b.nr_sequencia nr_seq_discussao_mat,
		b.nr_seq_discussao,
		d.ie_apresentacao,
		a.ie_tipo_despesa,
		d.nr_seq_prestador,
		null nr_seq_mat_rec,
		null nr_seq_conta_rec,
		d.ie_tipo_protocolo,
		d.dt_mes_competencia,
		d.ie_origem_protocolo,
		a.vl_liberado,
		a.nr_seq_regra_pct_fat,
		0 qt_apropriacao,
		0 qt_itens_pos,
		a.det_reg_anvisa,
		a.vl_glosa,
		a.dt_atendimento dt_base_item,
		CASE WHEN coalesce(a.vl_liberado,0)=0 THEN a.vl_taxa_material  ELSE a.vl_lib_taxa_material END ,
		(  select max(qt_item) from pls_conta_pos_estabelecido where nr_seq_disc_mat = b.nr_sequencia) qt_disc_pos_estab,
		c.nr_seq_prest_inter,
		'N' ie_a520,
		coalesce(c.ie_tipo_faturamento, 'T') ie_tipo_faturamento,
		a.vl_participacao,
		(   	select 	count(1) 
			from 	pls_conta_pos_estab_prev 
			where 	nr_seq_conta_mat = a.nr_sequencia
			and 	a.ie_status = 'M'
			and 	coalesce(a.nr_seq_regra_lanc_aut::text, '') = ''
			and 	coalesce(c.nr_seq_ajuste_fat::text, '') = '') qt_reg_previa,
		b.nr_sequencia,
		a.tx_intercambio
	from  	pls_conta_mat      	a,
		pls_discussao_mat    	b,
		pls_conta      		c,
		pls_protocolo_conta    	d
	where  	((a.nr_seq_conta  = nr_seq_conta_p and coalesce(nr_seq_conta_mat_p::text, '') = '' and coalesce(nr_seq_conta_proc_p::text, '') = '') or (a.nr_sequencia = nr_seq_conta_mat_p))
	and  	a.ie_status     != 'D'
	and (a.ie_apenas_pagamento   = 'N' or coalesce(a.ie_apenas_pagamento::text, '') = '')
	and  	b.nr_seq_conta_mat  = a.nr_sequencia
	and  	c.nr_sequencia    = a.nr_seq_conta
	and  	d.nr_sequencia    = c.nr_seq_protocolo
	and  	ie_acao_p    = 'F'
	and  	((b.vl_aceito > 0) and ((coalesce(a.qt_material_imp,0) - coalesce(a.qt_material,0)) > 0))
	and  	a.qt_material  != qt_material_imp
	and  	not exists (  	select  1
				from  	pls_contestacao_discussao  x,
					pls_lote_discussao    y
				where  	x.nr_seq_lote    	= y.nr_sequencia
				and  	b.nr_seq_discussao   	= x.nr_sequencia
				and  	y.ie_status    		= 'C')
	and  	not exists  (  	select  1
				from  	pls_conta_pos_estabelecido  x
				where  	x.nr_seq_conta_mat  	= a.nr_sequencia
				and  	x.ie_status_faturamento != 'N'
				and  	((x.ie_situacao    	= 'A') or (coalesce(x.ie_situacao::text, '') = ''))
				and  	x.qt_item    		= a.qt_material_imp)
	
union
  -- RECURSO DE GLOSA
	select  a.nr_sequencia,
		a.nr_seq_material,
		a.ie_tipo_despesa,
		a.ie_origem_preco,
		a.vl_material,
		a.vl_material_imp,
		coalesce(a.qt_material_imp,0),
		coalesce(a.dt_atendimento,clock_timestamp()),
		a.vl_material_ptu,
		a.vl_taxa_material,
		a.vl_provisao,
		a.ie_status,
		a.nr_seq_regra_int,
		b.vl_acatado,
		coalesce(a.ie_glosa,'N'),
		(coalesce(a.qt_material_imp,0) - coalesce(qt_material,0)) qt_material,
		a.dt_inicio_atend,
		a.dt_fim_atend,
		null nr_seq_discussao_mat,
		null nr_seq_discussao,
		d.ie_apresentacao,
		a.ie_tipo_despesa,
		d.nr_seq_prestador,
		b.nr_sequencia nr_seq_mat_rec,
		b.nr_seq_conta_rec,
		d.ie_tipo_protocolo,
		d.dt_mes_competencia,
		d.ie_origem_protocolo,
		a.vl_liberado,
		a.nr_seq_regra_pct_fat,
		(select  count(1)
		from  pls_conta_mat_aprop x
		where  x.nr_seq_mat_rec = b.nr_sequencia) qt_apropriacao,
		(select  coalesce(sum(qt_item),0)
		from  pls_conta_pos_estabelecido x
		where  x.nr_seq_conta_mat = a.nr_sequencia
		and  x.ie_status_faturamento not in ('N', 'A')
		and	x.ie_cobrar_mensalidade	!= 'A'
		and  ((x.ie_situacao = 'A') or (coalesce(x.ie_situacao::text, '') = ''))) qt_itens_pos,
		a.det_reg_anvisa,
		a.vl_glosa,
		a.dt_atendimento dt_base_item,
		0,
		null qt_disc_pos_estab,
		c.nr_seq_prest_inter,
		'N' ie_a520,
		coalesce(c.ie_tipo_faturamento, 'T') ie_tipo_faturamento,
		a.vl_participacao,
		(   	select 	count(1) 
			from 	pls_conta_pos_estab_prev 
			where 	nr_seq_conta_mat = a.nr_sequencia
			and 	a.ie_status = 'M'
			and 	coalesce(a.nr_seq_regra_lanc_aut::text, '') = ''
			and 	coalesce(c.nr_seq_ajuste_fat::text, '') = '') qt_reg_previa,
		null nr_seq_discussao_mat,
		a.tx_intercambio
	from  	pls_conta_mat      	a,
		pls_rec_glosa_mat    	b,
		pls_conta      		c,
		pls_protocolo_conta    d
	where  	((a.nr_seq_conta  = nr_seq_conta_p and coalesce(nr_seq_conta_mat_p::text, '') = '' and coalesce(nr_seq_conta_proc_p::text, '') = '') or (a.nr_sequencia = nr_seq_conta_mat_p))
	and  	a.ie_status     != 'D'
	and (a.ie_apenas_pagamento   = 'N' or coalesce(a.ie_apenas_pagamento::text, '') = '')
	and  	b.nr_seq_conta_mat  = a.nr_sequencia
	and  	c.nr_sequencia    = a.nr_seq_conta
	and  	d.nr_sequencia    = c.nr_seq_protocolo
	and  	ie_acao_p    = 'RC'
	and  	coalesce(b.vl_acatado,0)  > 0
	and  	not exists (  	select  1
					from  	pls_rec_glosa_protocolo  w,
						pls_rec_glosa_conta  n
					where  	w.nr_sequencia  = n.nr_seq_protocolo
					and  	n.nr_sequencia  = b.nr_seq_conta_rec
					and  	n.ie_status  	= '2' -- Fechado
					and  	w.ie_status  	in ('6'))
	and  	((ie_apropriacao_copartic_w = 'N') or exists (  select  1
								from  	pls_conta_mat_aprop
								where  	nr_seq_mat_rec = b.nr_sequencia
								and  	nr_seq_centro_aprop  in (  	select  nr_sequencia
													from  	pls_centro_apropriacao
													where  	ie_responsavel_apropriacao in ('1','2')))); -- Liberado para pagamento
c03 CURSOR(nr_seq_conta_pos_estab_pc		pls_conta_pos_estabelecido.nr_sequencia%type)FOR	
	SELECT 	vl_materiais_calc,
		vl_custo_operacional_calc, 
		vl_medico_calc, 
		vl_taxa_co, 
		vl_taxa_material, 
		vl_taxa_servico,
		vl_beneficiario,
		(vl_materiais_calc + vl_custo_operacional_calc + vl_medico_calc + vl_taxa_co + vl_taxa_material + vl_taxa_servico) vl_total_pos
	from pls_conta_pos_estabelecido
	where nr_sequencia = nr_seq_conta_pos_estab_pc;
BEGIN

If (ie_acao_p <> 'P') Then
	select 	max(ie_ignorar_lib_usuario)
	into STRICT  	ie_ignorar_lib_usuario_w
	from   	pls_visible_false;

	if ( ie_ignorar_lib_usuario_w = 'S') then

		update  pls_conta_pos_estabelecido
		set  	ie_tipo_liberacao  = NULL
		where  	ie_tipo_liberacao = 'U'
		and  	((ie_acao_p    not in ('F','RC')) or (coalesce(ie_acao_p::text, '') = ''))
		and  	nr_sequencia in (   	SELECT 	nr_sequencia
						from   	pls_conta_pos_estabelecido
						where  	((nr_seq_conta = nr_seq_conta_p and coalesce(nr_seq_conta_proc_p::text, '') = '' and coalesce(nr_seq_conta_mat_p::text, '') = '') or (nr_seq_conta_proc = nr_seq_conta_proc_p) or (nr_seq_conta_mat = nr_seq_conta_mat_p)));

	end if;
end if;

--Essa vari?vel ? utilizada para passar o par?metro para outras procedures e caso for

--gera??o manual pelo recurso, deve ter o mesmo tratamento que quando passado 'A', como no fechamento de conta.
if (ie_acao_p = 'GMR') then
	ie_acao_w := 'A';
else
	ie_acao_w := ie_acao_p;
end if;

if (ie_acao_p != 'P') then
  ie_log_w  := 'S';
end if;

-- Seta a vari?vel de processo do p?s para 'S'. Essa vari?vel

-- ser? utilizada para definir qual o tipo de log de regras de pre?o
pls_util_pck.ie_processo_pos_w := 'S';

-- retirado o delete para que seja mantido o status do faturamento no rec?lculo Diogo
ie_calculo_pos_estab_w := '';

select	max(a.cd_estabelecimento),
	max(ie_tipo_protocolo),
	max(nr_seq_mot_reembolso)
into STRICT  	cd_estabelecimento_w,
	ie_tipo_protocolo_w,
	nr_seq_mot_reembolso_w
from  	pls_conta a,
	pls_protocolo_conta b
where  	a.nr_sequencia  = nr_seq_conta_p
and   	a.nr_seq_protocolo = b.nr_sequencia;

CALL pls_cta_consistir_pck.gera_views_valorizacao();

-- Felipe - 12/09/2011 - OS 332785

-- Para os benefici?rio rescindidos em Pr? pagamento, que n?o devolveram a carteira, se for parametrizado, o sistema ir? realizar a cobran?a em P?s estabelecido
select  coalesce(max(ie_calculo_pos_estab),'C'),
	coalesce(max(ie_cobranca_pos),'N'),
	coalesce(max(ie_pos_estab_faturamento),'N'),
	coalesce(max(ie_geracao_pos_estabelecido),'F'),
	coalesce(max(ie_preco_interc_congenere),'I'),
	coalesce(max(ie_taxa_contrato_pos),'F'),
	coalesce(max(ie_controle_pos_estabelecido),'N'),
	coalesce(max(ie_apropriacao_copartic), 'N'),
	coalesce(max(ie_horario_rescisao), 'N')
into STRICT  	ie_calculo_pos_estab_w,
	ie_cobranca_pos_w,
	ie_pos_estab_faturamento_w,
	ie_geracao_pos_estabelecido_w,
	ie_preco_interc_congenere_w,
	ie_taxa_contrato_pos_w,
	ie_controle_pos_estabelecido_w,
	ie_apropriacao_copartic_w,
	ie_horario_rescisao_w
from  	pls_parametros
where  	cd_estabelecimento  = cd_estabelecimento_w;

select coalesce(max(ie_lancar_tx_opm_pac_fechado), 'N')
into STRICT	ie_lanc_opm_pac_fechado_w
from 	pls_parametro_Faturamento
where 	cd_estabelecimento = cd_estabelecimento_w;

if ( ie_acao_p = 'P') then

	ie_pos_estab_faturamento_w := 'N';

end if;

If (ie_acao_p <> 'P') Then
  if (ie_controle_pos_estabelecido_w = 'S') then
    ie_cobrar_mensalidade_w  := 'P'; -- Pendente de libera??o
  else
    ie_cobrar_mensalidade_w  := 'S'; -- Liberado para a mensalidade
  end if;
Else
  ie_cobrar_mensalidade_w := 'N';
End If;

-- quando for CA deve ter o status fixo 'A'

-- feito um IF separado garantir isto (e um decode no insert, para evitar manipula??o incorreta ao longo da rotina)
if (ie_acao_p in ('CA','CAB')) then

	ie_cobrar_mensalidade_w := 'A';
end if;


--- carrega parametrizacoes do faturamento
select	coalesce(max(a.ie_gerar_pos_remido), 'N') ie_gerar_pos_remido,
	coalesce(max(a.ie_gerar_partic_conta),'N') ie_gerar_partic_conta
into STRICT	ie_gerar_pos_remido_w,
	ie_gerar_partic_conta_w
from	pls_parametro_Faturamento	a
where	a.cd_estabelecimento		= cd_estabelecimento_w;
	

update	pls_conta_proc
set  	ie_co_preco_operadora  = 'N'
where  	nr_seq_conta    = nr_seq_conta_p;

update	pls_conta_mat
set  	ie_co_preco_operadora  = 'N'
where  	nr_seq_conta    = nr_seq_conta_p;
--Update necess?rio para alimentar o campo dt_atendimento_referencia
update	pls_conta
set  	cd_guia  = cd_guia
where  	nr_sequencia = nr_seq_conta_p;

select	count(1)
into STRICT  	qt_conta_cabecalho_w
from  	pls_conta_pos_cabecalho
where  	nr_seq_conta  = nr_seq_conta_p;

select	count(1)
into STRICT  	qt_registros_proc_xml_w
from  	PLS_CONVERSAO_PROC
where	ie_envio_receb  = 'E'
and  	ie_situacao  	= 'A'  LIMIT 1;

select	count(1)
into STRICT  	qt_registros_mat_xml_w
from  	pls_conversao_mat_guias
where  	ie_situacao  	= 'A'  LIMIT 1;



-- Em alguns casos ? necess?rio gerar o cabecalho novamente. Mesmo quando ja existe.

-- N?O DEVER? GERAR QUANDO	

	-- Possuir p?s diferente de "Envio A520"

	-- Possuir p?s de "Envio A520" j? inserido em lote A520
select	sum(t.qt_pos)
into STRICT	qt_pos_w
from (	SELECT	count(1) qt_pos
	from	pls_conta_pos_estabelecido	a
	where	a.nr_seq_conta			= nr_seq_conta_p
	and	ie_status_faturamento		!= 'A'
	
union all

	SELECT	count(1) qt_pos
	from	ptu_aviso_conta		a
	where	a.nr_seq_conta		= nr_seq_conta_p) t;

-- NO FINAL DA ROTINA VERIFICA SE DEVE RE-GERAR. Se alterar este IF, observar no fim da rotina
if (ie_geracao_pos_estabelecido_w   = 'F' and ie_acao_p != 'P') and
	((coalesce(ie_acao_p,'A')    	not in ('R','C', 'F')) or
	((qt_conta_cabecalho_w    	= 0) or (qt_pos_w = 0))) then
  /* Francisco - 21/06/2013 - OS 609623 */

	
	
	select	sum(contador)
	into STRICT	qt_registro_cab_pos_w
	from (	SELECT	count(1) contador
		from	pls_conta_pos_cabecalho
		where	nr_seq_conta		= nr_seq_conta_p
		and	(nr_seq_discussao IS NOT NULL AND nr_seq_discussao::text <> '')
		
union all

		SELECT	count(1) contador
		from	pls_rec_glosa_conta
		where	nr_seq_conta		= nr_seq_conta_p
		
union all

		select	count(1) contador
		from	pls_conta_pos_cabecalho
		where	nr_seq_conta		= nr_seq_conta_p
		and	(nr_seq_conta_rec IS NOT NULL AND nr_seq_conta_rec::text <> '')) alias14;
	
	if (qt_registro_cab_pos_w = 0) then
		delete from pls_diagnos_nasc_viv_pos where nr_seq_conta = nr_seq_conta_p;
		delete from pls_diag_conta_obito_pos where nr_seq_conta = nr_seq_conta_p;
		delete from pls_diagnostico_conta_pos where nr_seq_conta = nr_seq_conta_p;
		delete from pls_conta_pos_cabecalho where nr_seq_conta = nr_seq_conta_p;
	end if;
	
	CALL pls_gerar_conta_pos_cabecalho(nr_seq_conta_p, null, nm_usuario_p);
	
elsif (coalesce(ie_acao_p,'A') = 'F') then
	qt_conta_cabecalho_w := 0;
end if;

if  	((ie_pos_estab_faturamento_w = 'N') or (ie_geracao_pos_estabelecido_w != 'F') or ( ie_acao_p = 'P' ))  then
	/* Obter dados da conta  e do protocolo*/

	begin
		select  a.nr_seq_segurado,
			a.nr_seq_prestador_exec,
			a.cd_estabelecimento,
			a.nr_seq_tipo_acomodacao,
			a.nr_seq_tipo_atendimento,
			a.nr_seq_clinica,
			a.qt_dias_internacao,
			a.ie_tipo_guia,
			a.ie_internado,
			a.ie_tipo_conta,
			a.nr_seq_analise,
			a.ie_origem_conta,
			a.dt_atendimento,
			a.nr_seq_protocolo,
			a.nr_seq_fatura,
			a.nr_seq_congenere,
			a.ie_tipo_intercambio,
			a.dt_alta,
			a.dt_recebimento_fatura,
			a.dt_postagem_fatura,
			a.nr_seq_ajuste_fat,
			a.ie_tipo_segurado
		into STRICT  	nr_seq_segurado_w,
			nr_seq_prestador_exec_w,
			cd_estabelecimento_w,
			nr_seq_tipo_acomodacao_w,
			nr_seq_tipo_atendimento_w,
			nr_seq_clinica_w,
			qt_dias_internacao_w,
			ie_tipo_guia_w,
			ie_internado_w,
			ie_tipo_conta_w,
			nr_seq_analise_w,
			ie_origem_conta_w,
			dt_emissao_w,
			nr_seq_protocolo_w,
			nr_seq_fatura_w,
			nr_seq_congenere_w,
			ie_tipo_intercambio_w,
			dt_alta_w,
			dt_recebimento_fatura_w,
			dt_postagem_fatura_w,
			nr_seq_ajuste_fat_w,
			ie_tipo_segurado_w
		from  	pls_conta_v    a
		where  	a.nr_sequencia  = nr_seq_conta_p;
	exception
	when others then
		nr_seq_congenere_w := null;
	end;
else
	begin
		select  max(nr_sequencia)
		into STRICT  	nr_seq_conta_pos_cab_w
		from  	pls_conta_pos_cabecalho
		where  	nr_seq_conta  = nr_seq_conta_p;

		select  a.nr_seq_segurado,
			a.nr_seq_prestador_exec,
			b.cd_estabelecimento,
			a.nr_seq_tipo_acomodacao,
			a.nr_seq_tipo_atendimento,
			a.nr_seq_clinica,
			b.qt_dias_internacao,
			a.ie_tipo_guia,
			b.ie_internado,
			b.ie_tipo_conta,
			b.nr_seq_analise,
			a.ie_origem_conta,
			b.dt_atendimento,
			b.nr_seq_protocolo,
			b.nr_seq_fatura,
			b.nr_seq_congenere,
			b.ie_tipo_intercambio,
			b.dt_alta,
			b.dt_recebimento_fatura,
			b.dt_postagem_fatura,
			b.nr_seq_ajuste_fat,
			b.ie_tipo_segurado
		into STRICT  	nr_seq_segurado_w,
			nr_seq_prestador_exec_w,
			cd_estabelecimento_w,
			nr_seq_tipo_acomodacao_w,
			nr_seq_tipo_atendimento_w,
			nr_seq_clinica_w,
			qt_dias_internacao_w,
			ie_tipo_guia_w,
			ie_internado_w,
			ie_tipo_conta_w,
			nr_seq_analise_w,
			ie_origem_conta_w,
			dt_emissao_w,
			nr_seq_protocolo_w,
			nr_seq_fatura_w,
			nr_seq_congenere_w,
			ie_tipo_intercambio_w,
			dt_alta_w,
			dt_recebimento_fatura_w,
			dt_postagem_fatura_w,
			nr_seq_ajuste_fat_w,
			ie_tipo_segurado_w
		from  	pls_conta_pos_cabecalho a,
			pls_conta_v    		b
		where  	a.nr_seq_conta    	= nr_seq_conta_p
		and  	b.nr_sequencia    	= a.nr_seq_conta
		and  	a.nr_sequencia    	= nr_seq_conta_pos_cab_w;
	exception
	when others then
		nr_seq_congenere_w := null;
	end;
end if;

dados_conta_valor_w.nr_sequencia     		:= nr_seq_conta_p;
dados_conta_valor_w.nr_seq_congenere    	:= nr_seq_congenere_w;
dados_conta_valor_w.ie_origem_conta    		:= ie_origem_conta_w;
if (ie_tipo_conta_w  	= 'I') then
	dados_conta_valor_w.ie_tipo_conta    		:= 'C';
else
	dados_conta_valor_w.ie_tipo_conta    		:= ie_tipo_conta_w;
end if;

select	count(1)
into STRICT  	qt_regra_int_w
from   	pls_regra_intercambio
where   ie_tipo_regra = 'CE';

dados_conta_valor_w.nr_seq_segurado    		:= nr_seq_segurado_w;
dados_conta_valor_w.ie_tipo_intercambio    	:= ie_tipo_intercambio_w;
dados_conta_valor_w.ie_tipo_guia    		:= ie_tipo_guia_w;
dados_conta_valor_w.dt_alta      		:= dt_alta_w;
dados_conta_valor_w.dt_atendimento    		:= dt_emissao_w;

dados_fatura_valor_w.nr_sequencia    		:= nr_seq_fatura_w;
dados_fatura_valor_w.dt_recebimento    		:= dt_recebimento_fatura_w;
dados_fatura_valor_w.dt_postagem    		:= dt_postagem_fatura_w;

--Se n?o tiver a sequencia da an?lise, ent?o nesse caso pode se tratar de

--ajuste de refaturamento, ent?o tento buscar an?lise de p?s
if (coalesce(nr_seq_analise_w::text, '') = '') then

	if (nr_seq_ajuste_fat_w IS NOT NULL AND nr_seq_ajuste_fat_w::text <> '') then
		select	max(a.nr_sequencia)
		into STRICT  	nr_seq_analise_ww
		from  	pls_analise_conta a,
			pls_conta_pos_estabelecido b
		where  	a.nr_sequencia = b.nr_seq_analise
		and  	b.nr_seq_conta = nr_seq_conta_p
		and  	a.ie_origem_analise  	= 2;

	end if;

else
	select  max(nr_sequencia)
	into STRICT  	nr_seq_analise_ww
	from  	pls_analise_conta
	where  	nr_seq_analise_ref  = nr_seq_analise_w
	and  	ie_origem_analise  = 2;

end if;
/* Obter dados do segurado */

begin
  --select  nr_seq_plano,
	select  pls_obter_produto_benef(nr_sequencia,dt_emissao_w),
		nr_seq_contrato,
		pls_obter_conv_cat_segurado(nr_sequencia, 1),
		pls_obter_conv_cat_segurado(nr_sequencia, 2),
		dt_rescisao,
		coalesce(nr_seq_ops_congenere,nr_seq_congenere),
		CASE WHEN coalesce(ie_tipo_segurado_w::text, '') = '' THEN  ie_tipo_segurado  ELSE ie_tipo_segurado_w END ,
		nr_seq_intercambio,
		ie_pcmso,
		nr_seq_grupo_coop,
		dt_limite_utilizacao,
		ie_tipo_repasse,
		pls_obter_se_benef_remido(nr_sequencia, dados_conta_valor_w.dt_atendimento)
	into STRICT  	nr_seq_plano_w,
		nr_seq_contrato_w,
		cd_convenio_w,
		cd_categoria_w,
		dt_rescisao_w,
		nr_seq_congenere_seg_w,
		ie_tipo_segurado_w,
		nr_seq_intercambio_w,
		ie_pcmso_w,
		nr_seq_grupo_coop_seg_w,
		dt_limite_utilizacao_w,
		ie_tipo_repasse_seg_w,
		ie_benef_remido_w
	from  	pls_segurado
	where  	nr_sequencia  = nr_seq_segurado_w;
exception
when others then
	nr_seq_plano_w  := null;
end;

-- quando for remido e configurado para gerar o respectivo pos, ent?o deve desconsiderar essa regra
if (ie_benef_remido_w = 'S') and (ie_gerar_pos_remido_w = 'S') then
	
	ie_gera_pos_estab_w := 'S';
else
	
	ie_gera_pos_estab_w := pls_cta_obter_gera_pos_estab(nr_seq_contrato_w, nr_seq_intercambio_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (ie_gera_pos_estab_w = 'S') then
	nr_seq_congenere_w := nr_seq_congenere_seg_w;

	if (coalesce(nr_seq_congenere_w::text, '') = '') and (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
		select  nr_seq_oper_congenere
		into STRICT  	nr_seq_congenere_w
		from  	pls_intercambio
		where  	nr_sequencia = nr_seq_intercambio_w;
	end if;

	select  max(ie_tipo_congenere)
	into STRICT  	ie_tipo_congenere_w
	from  	pls_congenere
	where  	nr_sequencia = nr_seq_congenere_w;
	--incluido tratamento qt_regra_int_w devido a necessidade da unimed s?o jos? do rio preto, que da forma como estava o tratamento hoje para as cooperativas m?dicas acabava sendo aplicada a regra da unimed origem
	if (ie_tipo_congenere_w = 'OP') and (ie_tipo_segurado_w = 'T') and (qt_regra_int_w = 0) then
		nr_seq_congenere_w := coalesce(dados_conta_valor_w.nr_seq_congenere,nr_seq_congenere_w);
	end if;

	dados_conta_valor_w.nr_seq_congenere    	:= nr_seq_congenere_w;
	dados_conta_pos_w.nr_seq_congenere    		:= nr_seq_congenere_w;
	if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
		select	max(nr_seq_oper_congenere),
			max(ie_tipo_repasse),
			max(nr_seq_grupo_intercambio)
		into STRICT  	nr_seq_ops_congenere_w,
			ie_tipo_repasse_w,
			nr_seq_grupo_intercambio_w
		from  	pls_intercambio a
		where  	a.nr_sequencia  = nr_seq_intercambio_w;
	end if;
	
	if (ie_tipo_repasse_seg_w IS NOT NULL AND ie_tipo_repasse_seg_w::text <> '') then
	
		ie_tipo_repasse_w := ie_tipo_repasse_seg_w;
		
	end if;

	cd_usuario_plano_w  := pls_obter_carteira_segurado(nr_seq_segurado_w);

	/* Obter dados do plano */

	begin
		select  ie_preco,
			nr_seq_outorgante,
			ie_tipo_contratacao,
			ie_seguro_obito
		into STRICT  	ie_preco_plano_w,
			nr_seq_outorgante_w,
			ie_tipo_contratacao_w,
			ie_beneficio_obito_w
		from  	pls_plano
		where  	nr_sequencia  = nr_seq_plano_w;
	exception
	when others then
		nr_seq_outorgante_w  := null;
	end;
	
	dados_beneficiario_valor_w.nr_sequencia    	:= nr_seq_segurado_w;
	dados_beneficiario_valor_w.nr_seq_intercambio  	:= nr_seq_intercambio_w;
	dados_beneficiario_valor_w.nr_seq_plano    	:= nr_seq_plano_w;
	dados_beneficiario_valor_w.nr_seq_grupo_coop  	:= nr_seq_grupo_coop_seg_w;
	dados_beneficiario_valor_w.ie_tipo_beneficiario := ie_tipo_segurado_w;
	dados_beneficiario_valor_w.ie_beneficio_obito  	:= ie_beneficio_obito_w;
	dados_beneficiario_valor_w.ie_pcmso    		:= ie_pcmso_w;

	ie_param_operadora_w   	:= ie_calculo_pos_estab_w;

	-- Buscar a validade e via da carteira do segurado.
	select  max(dt_validade_carteira),
		max(nr_via_solicitacao)
	into STRICT  	dt_validade_carteira_w,
		nr_via_solicitacao_w
	from  	pls_segurado_carteira
	where  	nr_seq_segurado    = nr_seq_segurado_w;

	ie_calcula_preco_benef_w  	:= pls_obter_dados_conta(nr_seq_conta_p, 'CPO');
	ie_intercambio_cobranca_w  	:= 'N';

	if  	(((coalesce(ie_tipo_conta_w,'C') = 'C') and (coalesce(ie_tipo_repasse_w,'X') != 'P')) or
		((coalesce(ie_tipo_conta_w,'C') = 'I') and
		ie_preco_plano_w in ('2','3')))and
		(((nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') and (ie_tipo_segurado_w in ('R','T','I','C','H'))) or
		((coalesce(ie_tipo_conta_w,'C') = 'I') and (ie_tipo_segurado_w = 'B'))) then

		ie_calcula_preco_benef_w  	:= 'N';
		ie_cobranca_pos_estab_w    	:= 'S';
		qt_registro_w      		:= 0;
		ie_intercambio_cobranca_w  	:= 'S';
		ie_calculo_pos_estab_w    	:= 'IC';
	end if;
	

	if (qt_registro_w  = 0) and
		((ie_calcula_preco_benef_w = 'S') or (ie_preco_plano_w in ('2','3')) or
		((ie_preco_plano_w = '1') and (ie_cobranca_pos_w = 'S' or ie_acao_p = 'GMR' ) and ((dt_limite_utilizacao_w IS NOT NULL AND dt_limite_utilizacao_w::text <> '') or ie_acao_p = 'GMR' )) or (ie_cobranca_pos_estab_w = 'S') or (ie_benef_remido_w = 'S' and ie_acao_p not in ('CA','CAB') and ie_gerar_pos_remido_w = 'S')) then

		-- Edgar 12/05/2014,  Verificar se o p?s-estabelecido est? sendo recalculado, se estiver, dever? filtrar and ie_status_faturamento  = 'L'
		select  count(1)
		into STRICT  	qt_recalc_pos_estab_w
		from   	v$session
		where  	audsid  =   	(SELECT userenv('sessionid')
					)
		and  	username =   	(select username
					from   v$session
					where   audsid = (  	SELECT userenv('sessionid')
								))
		and  action like 'PLS_RECALC_POS_ESTAB_FAT%';
		/* Obter dados do prestador */

		select  max(nr_seq_classificacao)
		into STRICT  	nr_seq_classificacao_prest_w
		from  	pls_prestador
		where  	nr_sequencia  = nr_seq_prestador_exec_w;

		/* Obter a categoria do tipo de acomoda??o */

		if (coalesce(nr_seq_tipo_acomodacao_w,0) > 0) then
			select  max(nr_seq_categoria)
			into STRICT  	nr_seq_categoria_w
			from  	pls_regra_categoria
			where  	nr_seq_tipo_acomodacao  = nr_seq_tipo_acomodacao_w;
		end if;
		/* 767280 */

		if   	((coalesce(tx_intercambio_w,0) = 0) and (ie_pos_estab_faturamento_w = 'S') and (ie_taxa_contrato_pos_w = 'P')) then
			tx_intercambio_cont_w := pls_obter_taxa_contrato(nr_seq_intercambio_w, dt_emissao_w, nr_seq_contrato_w, nr_seq_plano_w);
		end if;
		
		--Abertura dos itens relacionados a pacote. Caso acao = 'CAB', significa que teve troca do benef na conta, entao nao faz relancamento de itens de pacote, visando nao replicar geracao 

		--de aviso no PTU
		if ( ie_acao_p <> 'CAB') then
			CALL pls_abrir_proc_pacote_cta(nr_seq_conta_p, nm_usuario_p, ie_acao_w);
		end if;
			
		/* PROCEDIMENTOS */

		open C01;
		loop
		fetch C01 into
			nr_seq_procedimento_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			vl_procedimento_w,
			vl_apresentado_w,
			tx_item_w,
			qt_procedimento_w,
			nr_seq_regra_horario_w,
			ie_tecnica_utilizada_w,
			ie_tipo_despesa_w,
			dt_procedimento_w,
			vl_procedimento_ptu_w,
			vl_co_ptu_w,
			vl_material_ptu_w,
			vl_taxa_co_w,
			vl_taxa_servico_w,
			vl_taxa_material_w,
			vl_provisao_w,
			ie_status_w,
			nr_seq_regra_int_w,
			vl_liberado_w,
			ie_glosa_w,
			qt_liberada_w,
			dt_inicio_item_w,
			dt_fim_item_w,
			dados_procedimento_w.nr_seq_grupo_rec,
			nr_seq_discussao_proc_w,
			nr_seq_discussao_w,
			dados_conta_pos_w.ie_apresentacao_prot,
			dados_conta_pos_w.ie_tipo_desp_mat,
			dados_conta_pos_w.nr_seq_prestador_prot,
			nr_seq_proc_rec_w,
			nr_seq_conta_rec_w,
			ie_tipo_protocolo_w,
			dt_mes_competencia_w,
			ie_origem_protocolo_w,
			vl_liberado_co_w,
			vl_liberado_hi_w,
			vl_liberado_material_w,
			vl_lib_original_w,
			nr_seq_regra_pct_fat_w,
			nr_seq_grau_partic_w,
			qt_apropriacao_w,
			qt_item_pos_w,
			qt_filme_tab_proc_w,
			vl_glosa_w,
			dt_item_base_w,
			qt_disc_pos_w,
			nr_seq_prest_inter_w,
			ie_aviso_a520_proc_w,
			ie_tipo_faturamento_w,
			vl_lib_taxa_servico_pag_w,
			vl_lib_taxa_co_pag_w,
			vl_lib_taxa_material_pag_w,
			nr_seq_regra_conv_proc_w,
			nr_seq_proc_princ_w,
			vl_liquido_w,
			qt_ocor_partic_w,
			qt_glosa_partic_w,
			qt_reg_impede_geracao_w,
			nr_seq_disc_proc_w,
			tx_intercambio_old_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			--reiniciliza a cada iteracao. Essa variavel serve para controlar quando um 

			--pos foi valorizado com regra de tipo 5(valor a ser pago ao prestador caso regra de preco for 0) e o valor 

			--final foi baseado em valor pago ao prestador e nao por valor de regra. 
			ie_regra_5_vl_pag_prest_w := 'N';
			

			--Se for previa de pos, entao deve guardar esses valores para que alteracoes nao interfiram na analise de pagamento, ja que a previa e gerada

			--antes do fechamento da conta e com isso, podem ser realizadas acoes como aceitar valor calculado, etc
			if (ie_acao_p = 'P') then
					
				vl_procedimento_ptu_old_w :=	vl_procedimento_ptu_w;
				vl_co_ptu_old_w		:=	vl_co_ptu_w;
				vl_material_ptu_old_w	:=	vl_material_ptu_w;
				vl_taxa_co_old_w	:=	vl_taxa_co_w;
				vl_taxa_servico_old_w	:=	vl_taxa_servico_w;
				vl_taxa_material_old_w	:=	vl_taxa_material_w;
										
			end if;
			
			ie_processou_valor_co_w := 'N';
			ie_gera_w        := 'S';
			qt_pos_a520_abert_pct_w := 0;
			qt_pos_abert_pct_w	:= 0;
			
			if ( (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') and    ie_status_w = 'M') then
			
			 
				--Se ? registro lan?ado manualmente via abertura de pacote e j? tem p?s gerado, ent?o n?o poder? lan?ar novo p?s vinculado ao mesmo item
				select count(1)
				into STRICT  qt_pos_a520_abert_pct_w
				from  pls_conta_pos_estabelecido 
				where   nr_seq_conta_proc = nr_seq_procedimento_w
				and   ie_status_faturamento = 'A';
				
				--alguns casos ocorre um lancamento de proc faturamento manual de item da composicao de pacote para aviso e outro para o pos, e tem caso que 

				--somente lancou um item. Quando lanca somente um item, deve permitir gerar pos do item que ja gerou o aviso, se lancar dois itens, nao deve permitir

				
				--Item em questao gerou aviso e na mesma conta ha proc de mesma identificacao lancado pela regra de abertura de pacote, entao nao deve gerar 

				-- pos aqui e sim quando iterar pelo outro item apenas
				select 	count(1)
				into STRICT	qt_pos_abert_pct_w
				from	pls_conta_proc x,
					pls_conta_pos_estabelecido z
				where 	x.nr_sequencia = nr_seq_procedimento_w
				and	x.nr_sequencia = z.nr_seq_conta_proc
				and   	z.ie_status_faturamento = 'A'	
				and 	exists ( SELECT 1 from pls_conta_proc y
						where 	y.nr_seq_conta = x.nr_seq_conta
						and 	y.nr_seq_regra_pct_fat = x.nr_seq_regra_pct_fat
						and 	y.nr_seq_proc_pct = x.nr_seq_proc_pct
						and 	y.cd_procedimento = x.cd_procedimento
						and 	y.ie_origem_proced = x.ie_origem_proced
						and 	y.nr_sequencia <>  nr_seq_procedimento_w);
			
				--evita gerar dois registros para aviso
				if (( qt_pos_a520_abert_pct_w > 0  and ie_acao_p in ('CA','CAB')) or (qt_pos_abert_pct_w > 0 and ie_acao_p not in ('CA','CAB')))then
					ie_gera_w := 'N';
				end if;
												
			end if;
			
			qt_pos_a520_conv_proc_w := 0;
			if	((nr_seq_regra_conv_proc_w IS NOT NULL AND nr_seq_regra_conv_proc_w::text <> '')	and (ie_status_w = 'M') and (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '')) then
			
				-- se ja teve algum lancamento de conversao e possui um A520 gerado, ent?o n?o deve gerar um novo p?s
				select	count(1)
				into STRICT	qt_pos_a520_conv_proc_w
				from	pls_conta_pos_estabelecido	a
				where	a.nr_seq_conta_proc		= nr_seq_procedimento_w
				and	a.ie_status_faturamento		= 'A';
				
				if (qt_pos_a520_conv_proc_w > 0) then
				
					ie_gera_w := 'N';
				end if;
			end if;

			ie_cobrar_co_w    	:= null;
			ie_cobrar_filme_w  	:= null;
			qt_filme_tab_proc_aplicar_w := 0;
			nr_seq_regra_w    	:= null;
			ie_gera_pos_resc_w   	:= 'S';
			nr_seq_pos_estab_interc_w := null;

			if (qt_disc_pos_w IS NOT NULL AND qt_disc_pos_w::text <> '') then
				qt_liberada_w := qt_disc_pos_w;
			end if;

			if (ie_horario_rescisao_w = 'N') then
				dt_item_base_w := trunc(dt_item_base_w);
				dt_limite_utilizacao_w := trunc(dt_limite_utilizacao_w);
			end if;

			--Apenas para caso de gera??o de p?s de discussao
			if (ie_geracao_pos_estabelecido_w   = 'F') and
				((coalesce(ie_acao_p,'A') = 'F') and (qt_conta_cabecalho_w    = 0)) then

				CALL pls_gerar_conta_pos_cabecalho(nr_seq_conta_p, nr_seq_discussao_w, nm_usuario_p);

				select  count(1)
				into STRICT  	qt_conta_cabecalho_w
				from  	pls_conta_pos_cabecalho
				where  	nr_seq_conta  = nr_seq_conta_p
				and   	nr_seq_discussao = nr_seq_discussao_w;

			end if;

			-- retirado o tratamento devido a gerar a coparticipa??o respeitando a regra de honor?rio e o grau de participa??o dos itens
			if (ie_preco_plano_w = '1') and (ie_calculo_pos_estab_w <> 'IC') and
				((ie_gerar_pos_remido_w = 'N') or (ie_gerar_pos_remido_w = 'S' and ie_benef_remido_w != 'S')) then
				ie_gera_pos_resc_w := 'N';

				if (dt_limite_utilizacao_w < dt_item_base_w) then

					if (ie_cobranca_pos_w = 'S') then

						select  count(a.nr_sequencia)
						into STRICT  	qt_devolucao_carteira_w
						from  	pls_carteira_devolucao  a,
							pls_cart_lote_devolucao b
						where  	b.nr_sequencia      		= a.nr_seq_lote
						and  	a.cd_usuario_plano    		= cd_usuario_plano_w
						and  	a.nr_via       			= nr_via_solicitacao_w
						and  	a.dt_validade_carteira    	= dt_validade_carteira_w
						and  	trunc(b.dt_devolucao,'dd')  	< dt_item_base_w;

						if (qt_devolucao_carteira_w = 0) then

							ie_gera_pos_resc_w := 'S';
						end if;
					end if;
				end if;
			end if;

			if (ie_acao_p = 'RC') then
				ie_gera_w := 'N';

				if (ie_apropriacao_copartic_w = 'S') then
					if (qt_apropriacao_w > 0) then
						ie_gera_w := 'S';
					end if;
				else
					ie_gera_w := 'S';
				end if;

				if (ie_gera_w = 'S') and (ie_apropriacao_copartic_w = 'N') then
					select  coalesce(max(ie_vl_pag_prestador),'N'),
						max(nr_seq_regra_pos_estab),
						max(nr_seq_pos_estab_interc)
					into STRICT  	ie_vl_pag_prestador_ww,
						nr_seq_regra_pos_estab_ww,
						nr_seq_pos_estab_interc_ww
					from  	pls_conta_pos_estabelecido
					where  	nr_seq_conta_proc = nr_seq_procedimento_w
					and  	coalesce(nr_seq_conta_rec::text, '') = ''
					and  	vl_beneficiario > 0
					and  	((ie_situacao  = 'A') or (coalesce(ie_situacao::text, '') = ''))
					and  	ie_status_faturamento  not in ('N', 'A')
					and	ie_cobrar_mensalidade	!= 'A';

					if (ie_vl_pag_prestador_ww = 'N') and (qt_liberada_w <= 0) and
						((nr_seq_regra_pos_estab_ww IS NOT NULL AND nr_seq_regra_pos_estab_ww::text <> '') or (nr_seq_pos_estab_interc_ww IS NOT NULL AND nr_seq_pos_estab_interc_ww::text <> '')) then
						ie_gera_w := 'N';
					end if;
				end if;

				if (qt_liberada_w <= 0) then
					qt_liberada_w := qt_procedimento_w;
				end if;
			end if;
			
			-- se o item veio de A500, foi avisada em A520 e est? com valor apresentado zerado, n?o deve gerar o P?s
			if (pls_obter_se_a504_glosado(ie_aviso_a520_proc_w, ie_origem_conta_w, vl_apresentado_w) = 'S') then
				
				ie_gera_w := 'N';
			end if;
			
			if (qt_reg_impede_geracao_w > 0) then
				ie_gera_w := 'N';
			end if;

			if  	((ie_gera_w = 'S') and
				((ie_gera_pos_resc_w = 'S') or ie_acao_p = 'GMR' ))then
				ie_vl_pag_prestador_w      		:= 'N';
				dados_regra_preco_proc_w    		:= null;
				dados_regra_preco_pos_estab_w    	:= null;
				dados_conta_pos_w.cd_area_procedimento  := null;
				dados_conta_pos_w.cd_especialidade  	:= null;
				dados_conta_pos_w.cd_grupo_proc    	:= null;
				qt_mult_quantidade_w      		:= null;
				ie_tipo_valor_w        			:= null;

			if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
				SELECT * FROM pls_obter_estrut_proc(  cd_procedimento_w, ie_origem_proced_w, dados_conta_pos_w.cd_area_procedimento, dados_conta_pos_w.cd_especialidade, dados_conta_pos_w.cd_grupo_proc, ie_origem_proc_regra_w) INTO STRICT dados_conta_pos_w.cd_area_procedimento, dados_conta_pos_w.cd_especialidade, dados_conta_pos_w.cd_grupo_proc, ie_origem_proc_regra_w;
			end if;

			if (nr_seq_discussao_w IS NOT NULL AND nr_seq_discussao_w::text <> '') or (nr_seq_conta_rec_w IS NOT NULL AND nr_seq_conta_rec_w::text <> '') then
				nr_seq_analise_ww  	:= null;
			end if;

			if (ie_acao_p  = 'R') then

				if (pls_util_pck.ie_processo_pos_w = 'S') then
					ie_tipo_log_w := 'P';
				end if;

				delete  from pls_log_calculo_proc
				where  	nr_seq_procedimento = nr_seq_procedimento_w
				and    	((ie_tipo_log = ie_tipo_log_w) or (coalesce(ie_tipo_log::text, '') = ''));
			end if;

			select  max(nr_sequencia)
			into STRICT  	nr_seq_pos_cabecalho_w
			from  	pls_conta_pos_cabecalho
			where  	nr_seq_conta    = nr_seq_conta_p
			and  	nr_seq_discussao  = nr_seq_discussao_w;

			if (coalesce(nr_seq_pos_cabecalho_w::text, '') = '') then

				if (nr_seq_conta_rec_w IS NOT NULL AND nr_seq_conta_rec_w::text <> '') then

					select  max(nr_sequencia)
					into STRICT  	nr_seq_pos_cabecalho_w
					from  	pls_conta_pos_cabecalho
					where  	nr_seq_conta = nr_seq_conta_p
					and  	nr_seq_conta_rec = nr_seq_conta_rec_w;

				end if;

			end if;

			dados_conta_proc_valor_w.nr_sequencia    	:= nr_seq_procedimento_w;
			dados_conta_proc_valor_w.nr_seq_conta    	:= nr_seq_conta_p;
			dados_conta_proc_valor_w.ie_origem_proced  	:= ie_origem_proced_w;
			dados_conta_proc_valor_w.cd_procedimento  	:= cd_procedimento_w;
			dados_conta_proc_valor_w.dt_procedimento  	:= dt_procedimento_w;

			ds_item_convertido_w    	:= '';
			cd_procedimento_original_w  	:= cd_procedimento_w;
			/* Se tinha que cobrar valor P?s de benefici?rio Pre, mas o item foi executado antes da rescisao, ent?o n?o cobra */

			ie_status_faturamento_w    	:= 'U';
			
			-- se o ie_acao_p = CA - A520, ent?o o status do faturamento SEMPRE ser? 'A', feito um if separado para ficar destacado
			if (ie_acao_p in ('CA','CAB')) then
				
				ie_status_faturamento_w    	:= 'A';
			end if;
			
			nr_seq_regra_conversao_w  	:= '';
			vl_beneficiario_w    		:= 0;

			if (ie_status_w    	= 'M')   or (ie_acao_p 		in ('CA','CAB'))  or
				((ie_status_w    	= 'C')  and (ie_origem_valor_pos_p  = 'C')  and (ie_glosa_w    		= 'N')  and (qt_liberada_w     	= 0))  then
				qt_liberada_w := qt_procedimento_w;
			end if;

			/*A regra de taxa de interc?mbio pra procedimento ? gravada dentro do cursor por causa da regra por grupo de servi?o 28/08/2013 drquadros 609134*/

			if (ie_tipo_conta_w in ('I','C')) then
				-- Obter a taxa de interc?mbio.

				--Caso n?o existir cong?nere seg, ent?o ? benefici?rio da pr?pria operadora e com isso n?o cobra interc?mbio no faturamento.
				if (nr_seq_congenere_seg_w IS NOT NULL AND nr_seq_congenere_seg_w::text <> '') then
					dados_tx_interc_valor_w  := pls_cta_valorizacao_pck.obter_taxa_intercambio(
					dados_conta_valor_w, dados_conta_proc_valor_w, null,
					dados_fatura_valor_w, dados_beneficiario_valor_w, dados_procedimento_w, cd_estabelecimento_w);
					tx_intercambio_w := dados_tx_interc_valor_w.pr_taxa;
					nr_seq_regra_tx_interc_w := dados_tx_interc_valor_w.nr_sequencia;
				end if;
			end if;

			if (coalesce(tx_intercambio_w,0) = 0) then
				tx_intercambio_w := tx_intercambio_cont_w;
			end if;

			if (ie_log_w = 'S') then
				ds_observacao_log_w  	:= 'Status: '||ie_status_w||'; Calculo p?s estabelecido: '||ie_calculo_pos_estab_w;
				CALL pls_gravar_log_calculo_proc(  	'S', nr_seq_procedimento_w, cd_estabelecimento_w,
								'Status + tipo regra faturamento', ds_observacao_log_w, 'pls_gerar_valor_pos_estab',
								0, 0, 0,
								0, 0, 0,
								1, null, null,
								null, null, 'PLS_CONTA_POS_ESTABELECIDO',
								nm_usuario_p);
			end if;

			if (ie_status_w    = 'M') and (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') then
				vl_beneficiario_w    := vl_procedimento_w;

				if (coalesce(vl_beneficiario_w,0) = 0) then
					ie_calcula_preco_benef_w  := 'S';
				else
					ie_calcula_preco_benef_w  := 'N';
				end if;
			elsif (ie_calculo_pos_estab_w = 'C') then
				if (ie_calcula_preco_benef_w = 'N') and (ie_preco_plano_w in ('2','3')) then
					vl_beneficiario_w  := vl_lib_original_w;
					ie_vl_pag_prestador_w  := 'S';
				end if;
			elsif ( ie_calculo_pos_estab_w = 'R') or (ie_param_operadora_w = 'R') then

				dados_conta_pos_w.nr_seq_segurado  	:= nr_seq_segurado_w;
				dados_conta_pos_w.dt_referencia    	:= dt_procedimento_w;
				dados_conta_pos_w.ie_origem_conta  	:= ie_origem_conta_w;
				dados_conta_pos_w.nr_seq_grupo_rec  	:= dados_procedimento_w.nr_seq_grupo_rec;

				dados_conta_pos_w.cd_procedimento  	:= cd_procedimento_w;
				dados_conta_pos_w.ie_origem_proced  	:= ie_origem_proced_w;
				dados_conta_pos_w.nr_seq_prestador_exec := nr_seq_prestador_exec_w;
				dados_conta_pos_w.ie_tipo_intercambio  	:= coalesce(pls_obter_tipo_intercambio(coalesce(nr_seq_ops_congenere_w,nr_seq_congenere_w),cd_estabelecimento_w),'A');
				dados_conta_pos_w.ie_origem_protocolo  	:= ie_origem_protocolo_w;
				dados_conta_pos_w.ie_tipo_congenere  	:= coalesce(pls_obter_dados_cooperativa(coalesce(nr_seq_ops_congenere_w,nr_seq_congenere_w),'IT'),'A');
				dados_conta_pos_w.ie_tipo_protocolo  	:= ie_tipo_protocolo_w;
				dados_conta_pos_w.nr_seq_prest_inter 	:= nr_seq_prest_inter_w;

				dados_regra_preco_pos_estab_w := pls_obter_tipo_valor_pos_estab( dados_conta_pos_w, nm_usuario_p, cd_estabelecimento_w, dados_regra_preco_pos_estab_w);

				nr_seq_regra_w    	:= dados_regra_preco_pos_estab_w.nr_sequencia;
				ie_tipo_valor_w    	:= dados_regra_preco_pos_estab_w.ie_tipo_valor;

				-- se a regra que retornou diz que n?o ? para aplicar a taxa, ent?o seta a vari?vel para zero
				if (coalesce(dados_regra_preco_pos_estab_w.ie_nao_gera_tx_inter, 'N') = 'S') then

					tx_intercambio_w := 0;
				end if;

				if (ie_log_w = 'S') then
					ds_observacao_log_w  := 'Tipo de valor: '||ie_tipo_valor_w||'; Regra: '||nr_seq_regra_w;
					CALL pls_gravar_log_calculo_proc('S', nr_seq_procedimento_w, cd_estabelecimento_w,
								    'Calculo conforme regra', ds_observacao_log_w, 'pls_gerar_valor_pos_estab',
								    0, 0, 0,
								    0, 0, 0,
								    2, null, null,
								    null, null, 'PLS_CONTA_POS_ESTABELECIDO',
								    nm_usuario_p);
				end if;
											
				if (ie_tipo_valor_w = '1') then
					ie_calcula_preco_benef_w  := 'S';

				elsif (ie_tipo_valor_w = '2') then
					vl_beneficiario_w    := vl_apresentado_w;
					ie_calcula_preco_benef_w := 'N';

				elsif (ie_tipo_valor_w = '3') then
					if (coalesce(vl_liberado_w,0) > 0) then
						vl_beneficiario_w  := vl_liberado_w;
					else
						vl_beneficiario_w  := vl_procedimento_w;
					end if;
					ie_vl_pag_prestador_w    := 'S';
					ie_calcula_preco_benef_w  := 'N';
				elsif (ie_tipo_valor_w = '4') then
					ie_calcula_preco_benef_w  := 'S';

				elsif (ie_tipo_valor_w = '5') then
					ie_calcula_preco_benef_w  := 'S';

				elsif (ie_tipo_valor_w = '7') then
					vl_beneficiario_w   := vl_apresentado_w;
					ie_calcula_preco_benef_w := 'N';

				elsif (ie_tipo_valor_w = '8') then
					--Conforme solicita??o da Francini vide OS 873000
					vl_beneficiario_w   := coalesce(vl_liberado_co_w,0) +  coalesce(vl_liberado_hi_w,0) + coalesce(vl_liberado_material_w,0);
					ie_calcula_preco_benef_w := 'N';
				elsif (ie_tipo_valor_w = '9') then
					ie_calcula_preco_benef_w  := 'S';
				end if;

			elsif (ie_calculo_pos_estab_w = 'P') then
				vl_beneficiario_w    := vl_procedimento_w;
				ie_calcula_preco_benef_w  := 'N';
			elsif (ie_calculo_pos_estab_w  = 'O') then
				ie_calcula_preco_benef_w  := 'S';
			elsif (ie_calculo_pos_estab_w  = 'IC') then

				dados_conta_pos_w.nr_seq_segurado  := nr_seq_segurado_w;
				dados_conta_pos_w.dt_referencia    := dt_procedimento_w;
				dados_conta_pos_w.ie_origem_conta  := ie_origem_conta_w;
				dados_conta_pos_w.nr_seq_grupo_rec  := dados_procedimento_w.nr_seq_grupo_rec;

				dados_conta_pos_w.cd_procedimento  := cd_procedimento_w;
				dados_conta_pos_w.ie_origem_proced  := ie_origem_proced_w;
				dados_conta_pos_w.nr_seq_prestador_exec  := nr_seq_prestador_exec_w;
				dados_conta_pos_w.ie_tipo_intercambio  := coalesce(pls_obter_tipo_intercambio(coalesce(nr_seq_ops_congenere_w,nr_seq_congenere_w),cd_estabelecimento_w),'A');
				dados_conta_pos_w.ie_origem_protocolo  := ie_origem_protocolo_w;
				dados_conta_pos_w.ie_tipo_congenere  := coalesce(pls_obter_dados_cooperativa(coalesce(nr_seq_ops_congenere_w,nr_seq_congenere_w),'IT'),'A');
				dados_conta_pos_w.ie_tipo_protocolo  := ie_tipo_protocolo_w;
				dados_conta_pos_w.nr_seq_prest_inter := nr_seq_prest_inter_w;

				dados_regra_preco_pos_estab_w := pls_obter_tipo_valor_pos_estab( dados_conta_pos_w, nm_usuario_p, cd_estabelecimento_w, dados_regra_preco_pos_estab_w);

				nr_seq_regra_w    	:= dados_regra_preco_pos_estab_w.nr_sequencia;
				ie_tipo_valor_w    	:= dados_regra_preco_pos_estab_w.ie_tipo_valor;

				-- se a regra que retornou diz que n?o ? para aplicar a taxa, ent?o seta a vari?vel para zero
				if (coalesce(dados_regra_preco_pos_estab_w.ie_nao_gera_tx_inter, 'N') = 'S') then
					tx_intercambio_w := 0;
				end if;

				SELECT * FROM pls_atualiza_valor_proc_int(  	nr_seq_procedimento_w, ie_tipo_despesa_w, ie_log_w, nm_usuario_p, tx_intercambio_w, ie_pos_estab_faturamento_w, ie_geracao_pos_estabelecido_w, ie_preco_interc_congenere_w, nr_seq_pos_estab_interc_w, vl_beneficiario_w, dados_regra_preco_proc_w, ie_acao_w ) INTO STRICT _ora2pg_r;
 tx_intercambio_w := _ora2pg_r.tx_intercambio_p; nr_seq_pos_estab_interc_w := _ora2pg_r.nr_seq_regra_p; vl_beneficiario_w := _ora2pg_r.vl_beneficiario_p; dados_regra_preco_proc_w := _ora2pg_r.dados_regra_preco_proc_p;

				nr_seq_regra_pos_estab_w  := null;

				if (ie_tipo_congenere_w = 'CO') then
					SELECT * FROM pls_obter_proced_conversao(  	cd_procedimento_w, ie_origem_proced_w, nr_seq_prestador_exec_w, cd_estabelecimento_w, 1, nr_seq_congenere_w, null, 'E', null, null, null, null, ie_tipo_intercambio_w, cd_item_convertido_w, ie_origem_conversao_w, nr_seq_regra_conversao_w, ie_somente_codigo_w, clock_timestamp(), nr_seq_tipo_atendimento_w, null, null) INTO STRICT cd_item_convertido_w, ie_origem_conversao_w, nr_seq_regra_conversao_w, ie_somente_codigo_w;
				end if;
				cd_procedimento_w := coalesce(cd_item_convertido_w,cd_procedimento_w);

				select  max(vl_beneficiario)
				into STRICT  	vl_beneficiario_w
				from  	pls_conta_proc
				where  	nr_sequencia  = nr_seq_procedimento_w
				and  	(vl_beneficiario IS NOT NULL AND vl_beneficiario::text <> '');
			end if;

			-- Caso a gera??o seja por apropria??o deve buscar os valores atrav?s da apropria??o gerada
			if (ie_apropriacao_copartic_w = 'S') then
				if (qt_apropriacao_w > 0) then
					select  sum(vl_beneficiario)
					into STRICT  	vl_benef_aprop_w
					from  	pls_conta_proc_aprop
					where  	nr_seq_proc_rec = nr_seq_proc_rec_w
					and  	nr_seq_centro_aprop  in (  	SELECT  nr_sequencia
										from  	pls_centro_apropriacao
										where  	ie_responsavel_apropriacao = '1');

					if (vl_benef_aprop_w > 0) then
						vl_beneficiario_w := vl_benef_aprop_w;
						ie_vl_pag_prestador_w := 'S';
						ie_calcula_preco_benef_w := 'N';
					end if;
				end if;
			end if;

			if (ie_calculo_pos_estab_w <> 'IC') then
				/* Francisco - 19/05/2012 - OS 447235 - Realizar a convers?o do c?digo para cobran?a do item */

				SELECT * FROM pls_obter_proced_conversao(  	cd_procedimento_w, ie_origem_proced_w, nr_seq_prestador_exec_w, cd_estabelecimento_w, 5, nr_seq_congenere_w, null, 'E', nr_seq_contrato_w, nr_seq_intercambio_w, nr_seq_ops_congenere_w, null, ie_tipo_intercambio_w, cd_item_convertido_w, ie_origem_conversao_w, nr_seq_regra_conversao_w, ie_somente_codigo_w, clock_timestamp(), nr_seq_tipo_atendimento_w, null, null) INTO STRICT cd_item_convertido_w, ie_origem_conversao_w, nr_seq_regra_conversao_w, ie_somente_codigo_w;
			end if;
			
			-- tratar aqui a chamada a atualiza_valor_proc_int

			--Se for faturamento parcial e estiver sendo processado um reembolso, necessitar? calcular valor intercambio
			if ( ie_tipo_faturamento_w = 'P' and ie_tipo_protocolo_w = 'R') then

				vl_beneficiario_w := 0;			
				SELECT * FROM pls_atualiza_valor_proc_int(  	nr_seq_procedimento_w, ie_tipo_despesa_w, ie_log_w, nm_usuario_p, tx_intercambio_w, ie_pos_estab_faturamento_w, ie_geracao_pos_estabelecido_w, ie_preco_interc_congenere_w, nr_seq_pos_estab_interc_w, vl_beneficiario_w, dados_regra_preco_proc_w, ie_acao_w ) INTO STRICT _ora2pg_r;
 tx_intercambio_w := _ora2pg_r.tx_intercambio_p; nr_seq_pos_estab_interc_w := _ora2pg_r.nr_seq_regra_p; vl_beneficiario_w := _ora2pg_r.vl_beneficiario_p; dados_regra_preco_proc_w := _ora2pg_r.dados_regra_preco_proc_p;
									
				select  max(vl_procedimento_ptu) --valor sem a taxa int
				into STRICT  	vl_benef_sem_tx_w
				from  	pls_conta_proc
				where  	nr_sequencia  = nr_seq_procedimento_w
				and  	(vl_beneficiario IS NOT NULL AND vl_beneficiario::text <> '');							
				
			end if;

			if ( ie_calcula_preco_benef_w = 'S') then
				if (ie_calculo_pos_estab_w  = 'IC') then
					SELECT * FROM pls_atualiza_valor_proc_int(  	nr_seq_procedimento_w, ie_tipo_despesa_w, ie_log_w, nm_usuario_p, tx_intercambio_w, ie_pos_estab_faturamento_w, ie_geracao_pos_estabelecido_w, ie_preco_interc_congenere_w, nr_seq_pos_estab_interc_w, vl_beneficiario_w, dados_regra_preco_proc_w, ie_acao_w ) INTO STRICT _ora2pg_r;
 tx_intercambio_w := _ora2pg_r.tx_intercambio_p; nr_seq_pos_estab_interc_w := _ora2pg_r.nr_seq_regra_p; vl_beneficiario_w := _ora2pg_r.vl_beneficiario_p; dados_regra_preco_proc_w := _ora2pg_r.dados_regra_preco_proc_p;

					nr_seq_regra_pos_estab_w  := null;

					if (ie_tipo_congenere_w  = 'CO') then
						SELECT * FROM pls_obter_proced_conversao(  	cd_procedimento_w, ie_origem_proced_w, nr_seq_prestador_exec_w, cd_estabelecimento_w, 1, nr_seq_congenere_w, null, 'E', null, null, null, null, ie_tipo_intercambio_w, cd_item_convertido_w, ie_origem_conversao_w, nr_seq_regra_conversao_w, ie_somente_codigo_w, clock_timestamp(), nr_seq_tipo_atendimento_w, null, null) INTO STRICT cd_item_convertido_w, ie_origem_conversao_w, nr_seq_regra_conversao_w, ie_somente_codigo_w;
					end if;
					cd_procedimento_w := coalesce(cd_item_convertido_w,cd_procedimento_w);
				else
					dados_regra_preco_proc_w := pls_atualiza_valor_proc_co(  	nr_seq_procedimento_w, ie_tipo_despesa_w, ie_log_w, ie_pos_estab_faturamento_w, ie_geracao_pos_estabelecido_w, nm_usuario_p, dados_regra_preco_proc_w);
									
					ie_processou_valor_co_w := 'S';

				end if;

				select  max(vl_beneficiario)
				into STRICT  	vl_beneficiario_w
				from  	pls_conta_proc
				where  	nr_sequencia  = nr_seq_procedimento_w
				and  	(vl_beneficiario IS NOT NULL AND vl_beneficiario::text <> '');
			end if;

			if (nr_seq_regra_conversao_w IS NOT NULL AND nr_seq_regra_conversao_w::text <> '') then
				select  ds_proc_envio,
					qt_mult_quantidade
				into STRICT  	ds_item_convertido_w,
					qt_mult_quantidade_w
				from  	pls_conversao_proc a
				where  	a.nr_sequencia  = nr_seq_regra_conversao_w;
			end if;
			
			if ( ie_tipo_faturamento_w = 'P' and ie_tipo_protocolo_w = 'R') then
									
				if (vl_benef_sem_tx_w > vl_liberado_w) then
					vl_beneficiario_w := 0;
				else
					vl_beneficiario_w  := vl_liberado_w - vl_benef_sem_tx_w;
				end if;						
			
				ie_vl_pag_prestador_w  := 'S';
				vl_taxa_int_w    := dividir((coalesce(vl_beneficiario_w,0) * coalesce(tx_intercambio_w,0)),100);
								
				vl_beneficiario_w  := coalesce(vl_beneficiario_w,0) + coalesce(vl_taxa_int_w,0);

			elsif (ie_tipo_valor_w = '4') and (coalesce(vl_beneficiario_w,0) = 0) and (ie_param_operadora_w = 'R') then
				vl_beneficiario_w  := vl_apresentado_w;
			elsif (ie_tipo_valor_w = '5') and (coalesce(vl_beneficiario_w,0) = 0) and (ie_param_operadora_w = 'R') then
				vl_beneficiario_w  := vl_liberado_w;
				ie_regra_5_vl_pag_prest_w := 'S';
				ie_vl_pag_prestador_w  := 'S';
				nr_seq_pos_estab_interc_w := null;
				if (ie_tipo_conta_w in ('I', 'C')) and (ie_calculo_pos_estab_w = 'IC') then
					vl_taxa_int_w    := dividir((coalesce(vl_beneficiario_w,0) * coalesce(tx_intercambio_w,0)),100);
					vl_beneficiario_w  := coalesce(vl_beneficiario_w,0) + coalesce(vl_taxa_int_w,0);
				end if;
			elsif (ie_tipo_valor_w = '9') and (ie_param_operadora_w = 'R') then
				--Caso regra de libera??o for valor a ser pago ao prestador desde que menor que regra de pre?o, ent?o calcula com a regra de interc?mbio, pois sen?o, estaria

				--considerando o valor liberado sem taxa contra o valor calculado de p?s com taxa.
				vl_liberado_com_tx_inter_w := coalesce(vl_liberado_w,0) + (coalesce(vl_liberado_w,0) * coalesce(tx_intercambio_w,0) / 100);
				if (coalesce(vl_liberado_w,0) > 0) then
					if (vl_liberado_com_tx_inter_w < vl_beneficiario_w) or (vl_beneficiario_w = 0) then
						vl_beneficiario_w  := vl_liberado_w;						
						qt_filme_tab_proc_aplicar_w := qt_filme_tab_proc_w;
						ie_vl_pag_prestador_w    := 'S';
						nr_seq_pos_estab_interc_w  := null;
					else
						ie_vl_pag_prestador_w    := 'N';
					end if;
				else
					if (vl_procedimento_w < vl_beneficiario_w) or (vl_beneficiario_w = 0) then
						vl_beneficiario_w  := vl_procedimento_w;
						qt_filme_tab_proc_aplicar_w := qt_filme_tab_proc_w;
						ie_vl_pag_prestador_w    := 'S';
						nr_seq_pos_estab_interc_w  := null;
					else
						ie_vl_pag_prestador_w    := 'N';
					end if;
				end if;
			end if;

			if (ie_log_w = 'S') then
				ds_observacao_log_w  := 'Vl calculado: '||vl_beneficiario_w||'; Tx inter: '||tx_intercambio_w;
				CALL pls_gravar_log_calculo_proc(  	'S', nr_seq_procedimento_w, cd_estabelecimento_w,
								'Vl calculado faturamento', ds_observacao_log_w, 'pls_gerar_valor_pos_estab',
								vl_beneficiario_w, 0, 0,
								0, 0, 0,
								10, null, null,
								null, null, 'PLS_CONTA_POS_ESTABELECIDO',
								nm_usuario_p);
			end if;

			select  max(nr_seq_regra_pos_estab)
			into STRICT  nr_seq_regra_pos_estab_w
			from  pls_conta_proc
			where  nr_sequencia  = nr_seq_procedimento_w;

			if (ie_calculo_pos_estab_w <> 'IC') then
				nr_seq_pos_estab_interc_w  := null;
			else
				nr_seq_regra_pos_estab_w  := null;
				/* Francisco - 29/08/2013 - OS 637684 -
				Se o benefici?rio for de cong?nere buscar pre?o p?s ao inv?s de interc?mbio */
				if (ie_preco_interc_congenere_w = 'F') and (ie_tipo_segurado_w = 'C') then
					nr_seq_regra_pos_estab_w  := nr_seq_pos_estab_interc_w;
					nr_seq_pos_estab_interc_w  := null;
				end if;
			end if;

			if (ie_acao_p  = 'F') then
				select  max(nr_sequencia)
				into STRICT  	nr_seq_pos_estab_w
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_proc	= nr_seq_procedimento_w
				and  	nr_seq_disc_proc  	= nr_seq_discussao_proc_w
				and  	nr_seq_conta    	= nr_seq_conta_p
				and  	((ie_situacao  = 'A') 	or (coalesce(ie_situacao::text, '') = ''))
				and	ie_status_faturamento	!= 'A'
				and	ie_cobrar_mensalidade	!= 'A'
				and  	((coalesce(ie_tipo_liberacao::text, '') = '') or (ie_tipo_liberacao <> 'U'));
			elsif (ie_acao_p  = 'RC') then
				select  max(nr_sequencia)
				into STRICT  	nr_seq_pos_estab_w
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_proc  	= nr_seq_procedimento_w
				and  	nr_seq_proc_rec    	= nr_seq_proc_rec_w
				and  	nr_seq_conta    	= nr_seq_conta_p
				and  	((ie_situacao  		= 'A') or (coalesce(ie_situacao::text, '') = ''))
				and	ie_status_faturamento	!= 'A'
				and	ie_cobrar_mensalidade	!= 'A'
				and  	((coalesce(ie_tipo_liberacao::text, '') = '') or (ie_tipo_liberacao <> 'U'));

			elsif (ie_acao_p  in ('CA','CAB')) then

				select  max(nr_sequencia)
				into STRICT  	nr_seq_pos_estab_w
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_proc  = nr_seq_procedimento_w
				and  	nr_seq_conta    = nr_seq_conta_p
				and  	ie_status_faturamento  = 'A'
				and  	((ie_situacao  = 'A') or (coalesce(ie_situacao::text, '') = ''))
				and	ie_cobrar_mensalidade	= 'A'
				and  	((coalesce(ie_tipo_liberacao::text, '') = '') or (ie_tipo_liberacao <> 'U'))
				and  	coalesce(nr_seq_conta_rec::text, '') = ''
				and	coalesce(nr_seq_disc_proc::text, '') = '';
			else
				if (qt_recalc_pos_estab_w = 0) then
					select  max(nr_sequencia)
					into STRICT  	nr_seq_pos_estab_w
					from  	pls_conta_pos_estabelecido
					where  	nr_seq_conta_proc  = nr_seq_procedimento_w
					and  	nr_seq_conta    = nr_seq_conta_p
					and  	((ie_situacao  = 'A') or (coalesce(ie_situacao::text, '') = ''))
					and	ie_status_faturamento	!= 'A'
					and	ie_cobrar_mensalidade	!= 'A'
					and  	((coalesce(ie_tipo_liberacao::text, '') = '') or (ie_tipo_liberacao <> 'U'))
					and  	coalesce(nr_seq_conta_rec::text, '') = ''
					and	coalesce(nr_seq_disc_proc::text, '') = '';
				else
					select  max(nr_sequencia)
					into STRICT  	nr_seq_pos_estab_w
					from  	pls_conta_pos_estabelecido
					where  	nr_seq_conta_proc  = nr_seq_procedimento_w
					and  	nr_seq_conta    = nr_seq_conta_p
					and  	ie_status_faturamento  = 'L'
					and  	((ie_situacao  = 'A') or (coalesce(ie_situacao::text, '') = ''))
					and	ie_cobrar_mensalidade	!= 'A'
					and  	((coalesce(ie_tipo_liberacao::text, '') = '') or (ie_tipo_liberacao <> 'U'))
					and  	coalesce(nr_seq_conta_rec::text, '') = ''
					and	coalesce(nr_seq_disc_proc::text, '') = '';
				end if;
			end if;

			select  count(1)
			into STRICT  	qt_partic_w
			from  	pls_proc_participante
			where  	nr_seq_conta_proc = nr_seq_procedimento_w;

			-- Somente deve ser verificado a regra de cobran?a de custo operacional e filme

			-- Caso n?o possua mais de um participante, caso n?o possua participante

			-- dentro da function ser? verificado o grau de participa??o da conta
			if (qt_partic_w <= 1) then
				SELECT * FROM pls_obter_se_cobra_co_filme(nr_seq_procedimento_w, dt_procedimento_w, cd_estabelecimento_w, ie_cobrar_co_w, ie_cobrar_filme_w, nr_seq_regra_co_filme_w) INTO STRICT ie_cobrar_co_w, ie_cobrar_filme_w, nr_seq_regra_co_filme_w;
			end if;

			if (ie_tipo_conta_w in ('I','C')) and (coalesce(ie_tipo_valor_w,'1') not in ('2','3')) and
				((coalesce(nr_seq_regra_pct_fat_w::text, '') = '') or
				(ie_calcula_preco_benef_w =  'S' AND ie_calculo_pos_estab_w  = 'IC')) and
				((coalesce(ie_vl_pag_prestador_w,'N') = 'N')or (coalesce(ie_tipo_valor_w,'1') not in ('8','9')))then

				
				select  coalesce(vl_procedimento_ptu,0),
					coalesce(vl_material_ptu,0),
					coalesce(vl_co_ptu,0)
				into STRICT  	vl_resultado_w,
					vl_material_w,
					vl_custo_operacional_w
				from  	pls_conta_proc
				where  	nr_sequencia  = nr_seq_procedimento_w;

				
				tx_inter_gerada_w  := tx_intercambio_w;
				tx_administrativa_w  := tx_inter_gerada_w;
				vl_medico_w    := coalesce(vl_resultado_w,0) - coalesce(vl_material_w,0) - coalesce(vl_custo_operacional_w,0);

				if (vl_medico_w < 0) then
					vl_medico_w := 0;
				end if;

				vl_administrativa_w  := coalesce(dividir((tx_inter_gerada_w * vl_resultado_w), 100),0);

				if (vl_administrativa_w = 0) then
					vl_administrativa_w  := coalesce(vl_taxa_int_w,0);
				end if;


				if  	((ie_tipo_valor_w in ('4', '5')) and
					((coalesce(nr_seq_pos_estab_interc_w::text, '') = '' or nr_seq_pos_estab_interc_w = 0) or
					((vl_medico_w = 0) and (vl_material_w = 0) and (vl_custo_operacional_w = 0))) or
					---tratamento realizado para verificar onde a valoriza??o do faturamento ? de regra de pre?o, por?m n?o calculou os dados de interc?mbio (M?dico, Custo e Filme)
					(ie_tipo_valor_w = '1') and (vl_medico_w = 0) and (vl_material_w = 0) and (vl_custo_operacional_w = 0)) then
					
					if ( (ie_processou_valor_co_w = 'N') or (ie_cobrar_co_w = 'N')) then
						select  coalesce(vl_calc_co_util,0),
							coalesce(vl_calc_mat_util,0),
							coalesce(vl_procedimento,0),
							coalesce(vl_calc_hi_util,0)
						into STRICT  	vl_custo_operacional_w,
							vl_materiais_w,
							vl_calculado_w,
							vl_medico_w
						from  	pls_conta_proc
						where  	nr_sequencia  = nr_seq_procedimento_w;
					else
					
						--multiplicador por valor calculado na chamada a pls_atualiza_valor_proc_co, pois retorna valores a nivel individual, entao precisa aplicar

						-- a quantidade liberada e a taxa do item
						vl_mult_w := qt_liberada_w * ( dividir(coalesce(tx_item_w, 100), 100));
					
						select  coalesce(coalesce(dados_regra_preco_proc_w.vl_custo_operacional_tab * vl_mult_w, vl_calc_co_util),0),
							coalesce(vl_calc_mat_util,0),
							--nvl(nvl(dados_regra_preco_proc_w.vl_proc_tabela * vl_mult_w, vl_procedimento),0),
							coalesce(coalesce(dados_regra_preco_proc_w.vl_procedimento * vl_mult_w, vl_procedimento),0),
							coalesce(coalesce(dados_regra_preco_proc_w.vl_medico * vl_mult_w, vl_calc_hi_util),0)
						into STRICT  	vl_custo_operacional_w,
							vl_materiais_w,
							vl_calculado_w,
							vl_medico_w
						from  	pls_conta_proc
						where  	nr_sequencia  = nr_seq_procedimento_w;

					end if;


					if (vl_calculado_w = 0) then
						vl_calculado_w := coalesce(vl_beneficiario_w,0)-vl_administrativa_w;
					end if;

					if (vl_custo_operacional_w > 0) then
						vl_custo_operacional_w  := dividir_sem_round(((coalesce(vl_beneficiario_w,0)-vl_administrativa_w) * vl_custo_operacional_w),vl_calculado_w);

					end if;

					vl_resultado_w := 0;

					if (vl_materiais_w > 0) then
						vl_resultado_w  := ((coalesce(vl_beneficiario_w,0)-vl_administrativa_w) * vl_materiais_w);
						vl_materiais_w  := dividir_sem_round(vl_resultado_w,vl_calculado_w);
					end if;

					if (vl_medico_w > 0) then
						vl_resultado_w  := ((coalesce(vl_beneficiario_w,0)-vl_administrativa_w) * vl_medico_w);
						vl_medico_w  := dividir_sem_round(vl_resultado_w,vl_calculado_w);
					end if;

					if (vl_custo_operacional_w = 0) and (vl_materiais_w = 0) and (vl_medico_w = 0) then
						vl_medico_w := coalesce(vl_beneficiario_w,0)-vl_administrativa_w;
					end if;

					--Retirado o tratamento abaixo, tendo em vista que o valor da taxa ? calculado novamente abaixo.
				else
					vl_materiais_w := coalesce(vl_material_w,0);
				end if;
			else
				
				if ( (ie_processou_valor_co_w = 'N') or (ie_cobrar_co_w = 'N')) then
					select  coalesce(vl_calc_co_util,0),
						coalesce(vl_calc_mat_util,0),
						coalesce(vl_procedimento,0),
						coalesce(vl_calc_hi_util,0),
						coalesce(vl_taxa_co,0),
						coalesce(vl_taxa_material,0),
						coalesce(vl_taxa_servico,0)
					into STRICT  	vl_custo_operacional_w,
						vl_materiais_w,
						vl_calculado_w,
						vl_medico_w,
						vl_taxa_co_w,
						vl_taxa_material_w,
						vl_taxa_servico_w
					from  	pls_conta_proc
					where  	nr_sequencia  = nr_seq_procedimento_w;
				else
					
					--multiplicador por valor calculado na chamada a pls_atualiza_valor_proc_co, pois retorna valores a nivel individual, entao precisa aplicar

					-- a quantidade liberada e a taxa do item
					vl_mult_w := qt_liberada_w * ( dividir(coalesce(tx_item_w, 100), 100));
					
					select  coalesce(coalesce(dados_regra_preco_proc_w.vl_custo_operacional_tab * vl_mult_w, vl_calc_co_util),0),
						coalesce(vl_calc_mat_util,0),
						-- nvl(nvl(dados_regra_preco_proc_w.vl_proc_tabela * vl_mult_w, vl_procedimento),0),
						coalesce(coalesce(dados_regra_preco_proc_w.vl_procedimento * vl_mult_w, vl_procedimento),0),
						coalesce(coalesce(dados_regra_preco_proc_w.vl_medico * vl_mult_w, vl_calc_hi_util),0),
						coalesce(vl_taxa_co,0),
						coalesce(vl_taxa_material,0),
						coalesce(vl_taxa_servico,0)
					into STRICT  	vl_custo_operacional_w,
						vl_materiais_w,
						vl_calculado_w,
						vl_medico_w,
						vl_taxa_co_w,
						vl_taxa_material_w,
						vl_taxa_servico_w
					from  	pls_conta_proc
					where  	nr_sequencia  = nr_seq_procedimento_w;
				end if;

				if (coalesce(ie_tipo_valor_w,'1') in ('8','9')) and (ie_vl_pag_prestador_w  =   'S') then
					vl_taxa_co_w    := 0;
					vl_taxa_material_w  := 0;
					vl_taxa_servico_w  := 0;

					update  pls_proc_participante
					set  vl_pos_estab    = 0
					where  nr_seq_conta_proc  = nr_seq_procedimento_w;

				end if;
				/* 767280*/

				if  not( ie_tipo_faturamento_w = 'P' and ie_tipo_protocolo_w = 'R') then
					tx_administrativa_w := tx_intercambio_w;
				end if;

		
				--Caso for valor a ser pago ao prestador e n?o liberou taxa de interc^mbio no pagamento, ent?o n?o usa a taxa gerada no faturamento para proporcionalizar os valores.
				if (vl_lib_taxa_co_pag_w = 0 and   vl_lib_taxa_servico_pag_w = 0 and vl_lib_taxa_material_pag_w = 0 and coalesce(ie_tipo_valor_w, 0) = 3) then
					if (vl_custo_operacional_w > 0) then
						vl_resultado_w    := (coalesce(vl_beneficiario_w,0) * (vl_custo_operacional_w));
						vl_custo_operacional_w  := dividir_sem_round(vl_resultado_w, vl_calculado_w);
					end if;

					vl_resultado_w := 0;

					if (vl_materiais_w > 0) then
						vl_resultado_w  := (coalesce(vl_beneficiario_w,0) * (vl_materiais_w));
						vl_materiais_w  := dividir_sem_round(vl_resultado_w, vl_calculado_w);
					end if;

					if (vl_medico_w > 0) then
						vl_resultado_w  := (coalesce(vl_beneficiario_w,0) * (vl_medico_w));
						vl_medico_w  := dividir_sem_round(vl_resultado_w, vl_calculado_w);
					end if;				
				elsif (coalesce(ie_tipo_valor_w, 0) = 3) then
					if (vl_custo_operacional_w > 0) then
						vl_resultado_w    := (coalesce(vl_beneficiario_w,0) * (vl_custo_operacional_w+ vl_taxa_co_w));
						vl_custo_operacional_w  := dividir_sem_round(vl_resultado_w, vl_calculado_w);
					end if;

					vl_resultado_w := 0;

					if (vl_materiais_w > 0) then
						vl_resultado_w  := (coalesce(vl_beneficiario_w,0) * (vl_materiais_w + vl_taxa_material_w));
						vl_materiais_w  := dividir_sem_round(vl_resultado_w, vl_calculado_w);
					end if;

					if (vl_medico_w > 0) then
						vl_resultado_w  := (coalesce(vl_beneficiario_w,0) * (vl_medico_w + vl_taxa_servico_w));
						vl_medico_w  := dividir_sem_round(vl_resultado_w, vl_calculado_w);
					end if;			
				end if;

				if (coalesce(vl_custo_operacional_w,0) = 0) and (coalesce(vl_materiais_w,0) = 0) and (coalesce(vl_medico_w,0) = 0) then
					vl_medico_w := coalesce(vl_beneficiario_w,0);
				end if;
				--necess?rio zerar as variaveis para n?o carregar os valores para o pos estabelecido
				vl_taxa_co_w    := 0;
				vl_taxa_material_w  := 0;
				vl_taxa_servico_w  := 0;
			end if;


			if (coalesce(dados_regra_preco_pos_estab_w.vl_retificador,1) != 1) and
				((dados_regra_preco_pos_estab_w.ie_retificador_vl_prestador = 'N') or (ie_vl_pag_prestador_w  = 'S')) then
				vl_medico_w    		:= coalesce(vl_medico_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
				vl_materiais_w    	:= coalesce(vl_materiais_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
				vl_custo_operacional_w  := coalesce(vl_custo_operacional_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;

				if (ie_tipo_valor_w in (2,3, 9)) or
					((ie_tipo_valor_w = 5) and (coalesce(dados_regra_preco_proc_w.vl_procedimento ,0) = 0) and (coalesce(dados_regra_preco_proc_w.vl_custo_operacional ,0) = 0) and (coalesce(dados_regra_preco_proc_w.vl_anestesista ,0) = 0) and (coalesce(dados_regra_preco_proc_w.vl_medico ,0) = 0) and (coalesce(dados_regra_preco_proc_w.vl_filme ,0) = 0) and (coalesce(dados_regra_preco_proc_w.vl_auxiliares ,0) = 0) and (ie_calculo_pos_estab_w in ('R', 'IC')) and (dados_regra_preco_pos_estab_w.ie_retificador_vl_sem_preco = 'S') and (ie_regra_5_vl_pag_prest_w = 'S')
					 ) then

					vl_beneficiario_w := coalesce(vl_beneficiario_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
					
					
				end if;
			end if;

			vl_medico_calc_w    		:= coalesce(vl_medico_w,0);
			vl_materiais_calc_w    		:= coalesce(vl_materiais_w,0);
			vl_custo_operacional_calc_w  	:= coalesce(vl_custo_operacional_w,0);

			vl_taxa_co_w       := dividir((vl_custo_operacional_calc_w * coalesce(tx_administrativa_w,0)),100);

			--F = Aplicar taxa exceto filme , se for F n?o deve aplicar intercambio ao valor do filme, se n?o ent?o mant?m comportamento anterior, pois

			--pode ser que aplique a todo item ou n?o aplicar taxa e isso ser? controlado na tx_administrativa.
			if (coalesce(dados_regra_preco_proc_w.ie_nao_gera_tx_inter,'N') <> 'F') then
				vl_taxa_material_w    := dividir((vl_materiais_calc_w * coalesce(tx_administrativa_w,0)),100);
			end if;

			vl_taxa_servico_w     	:= dividir((vl_medico_calc_w * coalesce(tx_administrativa_w,0)),100);

			vl_calculado_fat_w    	:= vl_medico_calc_w + vl_materiais_calc_w + vl_custo_operacional_calc_w + vl_taxa_co_w + vl_taxa_material_w + vl_taxa_servico_w;
			--Verifica se existe diferen?a entre o valor calculado total e o valor individual
			vl_total_taxa_w  	:= 	(coalesce(vl_taxa_co_w,0) + coalesce(vl_taxa_material_w,0) + coalesce(vl_taxa_servico_w,0) +
							(coalesce(vl_custo_operacional_calc_w,0) + coalesce(vl_materiais_calc_w,0) +coalesce(vl_medico_calc_w,0) ));

			
			if    	((coalesce(tx_administrativa_w,0) > 0) and
				((ie_tipo_valor_w in (2,3)) or
				((coalesce(ie_tipo_valor_w,'1') in ('8','9')) and (ie_vl_pag_prestador_w  =   'S')) or
				(nr_seq_regra_pct_fat_w > 0 AND ie_calcula_preco_benef_w = 'N'))) then
				vl_beneficiario_w := coalesce(vl_beneficiario_w,0) + dividir((coalesce(vl_beneficiario_w,0) * coalesce(tx_administrativa_w,0)),100);
			end if;

			vl_dif_w  := vl_total_taxa_w - coalesce(vl_beneficiario_w,0);
						
			if ( vl_dif_w >= -0.01 and vl_dif_w <= 0.01) then
				if 	(vl_total_taxa_w  = coalesce(vl_procedimento_ptu_w,0) + round( dividir((coalesce(vl_procedimento_ptu_w,0) * coalesce(tx_administrativa_w,0)),100) ,2) ) then
					vl_dif_w := 0;
				end if;
			end if;

			--subtrai a diferen?a
			if (vl_dif_w > 0) and (round((vl_taxa_servico_w)::numeric,2) > vl_dif_w) then
				vl_taxa_servico_w := vl_taxa_servico_w - vl_dif_w;
			elsif (vl_dif_w > 0) and (round((vl_taxa_material_w)::numeric,2) > vl_dif_w) then
				vl_taxa_material_w := vl_taxa_material_w - vl_dif_w;
			elsif (vl_dif_w > 0) and (round((vl_taxa_co_w)::numeric,2) > vl_dif_w) then
				vl_taxa_co_w := vl_taxa_co_w - vl_dif_w;
			elsif (vl_dif_w < 0) and
				((vl_taxa_servico_w > 0) or
				((coalesce(vl_taxa_servico_w,0) = 0) and (coalesce(tx_administrativa_w,0) > 0) and (vl_medico_calc_w > 0)))then
				vl_taxa_servico_w := vl_taxa_servico_w - vl_dif_w;
			elsif (vl_dif_w < 0) and
				((vl_taxa_material_w > 0) or
				((coalesce(vl_taxa_material_w,0) = 0) and (coalesce(tx_administrativa_w,0) > 0) and (vl_materiais_calc_w > 0)))then
				vl_taxa_material_w := vl_taxa_material_w - vl_dif_w;
			elsif (vl_dif_w < 0) and
				((vl_taxa_co_w > 0) or
				((coalesce(vl_taxa_co_w,0) = 0) and (coalesce(tx_administrativa_w,0) > 0) and (vl_custo_operacional_calc_w > 0)))then
				vl_taxa_co_w := vl_taxa_co_w - vl_dif_w;
			end if;

			-- verifica se ainda existe a diferen?a
			vl_total_taxa_w  := 	(coalesce(vl_taxa_co_w,0) + coalesce(vl_taxa_material_w,0) + coalesce(vl_taxa_servico_w,0) +
						(coalesce(vl_custo_operacional_calc_w,0) + coalesce(vl_materiais_calc_w,0) +coalesce(vl_medico_calc_w,0) ));

			vl_dif_w  := vl_total_taxa_w - coalesce(vl_beneficiario_w,0);

			if ( vl_dif_w >= -0.01 and vl_dif_w <= 0.01) then
				if (vl_total_taxa_w  = coalesce(vl_procedimento_ptu_w,0) + round( dividir((coalesce(vl_procedimento_ptu_w,0) * coalesce(tx_administrativa_w,0)),100) ,2) ) then
					vl_dif_w := 0;
				end if;
			end if;

			--aplica dos valores individuais se serem as taxas
			if (vl_dif_w > 0) and (vl_medico_w > vl_dif_w) then
				vl_medico_w := vl_medico_w - vl_dif_w;
			elsif (vl_dif_w > 0) and (vl_materiais_w > vl_dif_w) then
				vl_materiais_w := vl_materiais_w - vl_dif_w;
			elsif (vl_dif_w > 0) and (vl_custo_operacional_w > vl_dif_w) then
				vl_custo_operacional_w := vl_custo_operacional_w - vl_dif_w;
			elsif (vl_dif_w < 0) and (vl_medico_w > 0) then
				vl_medico_w := vl_medico_w - vl_dif_w;
			elsif (vl_dif_w < 0) and (vl_materiais_w > 0) then
				vl_materiais_w := vl_materiais_w - vl_dif_w;
			elsif (vl_dif_w < 0) and (vl_custo_operacional_w > 0) then
				vl_custo_operacional_w := vl_custo_operacional_w - vl_dif_w;
			end if;
			
			vl_medico_calc_w    		:= coalesce(vl_medico_w,0);
			vl_materiais_calc_w    		:= coalesce(vl_materiais_w,0);
			vl_custo_operacional_calc_w  	:= coalesce(vl_custo_operacional_w,0);

			if (qt_liberada_w     	!= qt_procedimento_w) and (ie_vl_pag_prestador_w  = 'N')then
				vl_materiais_w     	:= dividir_sem_round(coalesce(vl_materiais_w,0) ,qt_procedimento_w) * qt_liberada_w;
				vl_custo_operacional_w  := dividir_sem_round(coalesce(vl_custo_operacional_w,0) ,qt_procedimento_w) * qt_liberada_w;
				vl_medico_w     	:= dividir_sem_round(coalesce(vl_medico_w,0) ,qt_procedimento_w) * qt_liberada_w;
				vl_lib_taxa_co_w       	:= dividir_sem_round(coalesce(vl_taxa_co_w,0) ,qt_procedimento_w) * qt_liberada_w;
				vl_lib_taxa_material_w  := dividir_sem_round(coalesce(vl_taxa_material_w,0) ,qt_procedimento_w) * qt_liberada_w;
				vl_lib_taxa_servico_w   := dividir_sem_round(coalesce(vl_taxa_servico_w,0) ,qt_procedimento_w) * qt_liberada_w;
			elsif  	(qt_liberada_w   	> 0 AND ie_vl_pag_prestador_w  = 'N') or (coalesce(qt_liberada_w,0)  	= 0 ) then
				vl_materiais_w       	:= dividir_sem_round(coalesce(vl_materiais_w,0) ,qt_procedimento_w) * qt_liberada_w;
				vl_custo_operacional_w  := dividir_sem_round(coalesce(vl_custo_operacional_w,0) ,qt_procedimento_w) * qt_liberada_w;
				vl_medico_w       	:= dividir_sem_round(coalesce(vl_medico_w,0) ,qt_procedimento_w) * qt_liberada_w;
				vl_lib_taxa_co_w        := dividir_sem_round(coalesce(vl_taxa_co_w,0) ,qt_procedimento_w) * qt_liberada_w;
				vl_lib_taxa_material_w  := dividir_sem_round(coalesce(vl_taxa_material_w,0) ,qt_procedimento_w) * qt_liberada_w;
				vl_lib_taxa_servico_w   := dividir_sem_round(coalesce(vl_taxa_servico_w,0) ,qt_procedimento_w) * qt_liberada_w;
			elsif (qt_liberada_w  	> 0) then
				vl_materiais_w       	:= coalesce(vl_materiais_w,0);
				vl_custo_operacional_w  := coalesce(vl_custo_operacional_w,0);
				vl_medico_w       	:= coalesce(vl_medico_w,0);
				vl_lib_taxa_co_w        := coalesce(vl_taxa_co_w,0);
				vl_lib_taxa_material_w  := coalesce(vl_taxa_material_w,0);
				vl_lib_taxa_servico_w   := coalesce(vl_taxa_servico_w,0);
			end if;



			if (ie_cobrar_co_w = 'N') then
				vl_custo_operacional_w     	:= 0;
				vl_custo_operacional_calc_w	:= 0;
				vl_lib_taxa_co_w    		:= 0;
				vl_taxa_co_w      		:= 0;
				vl_glosa_co_fat_w    		:= 0;
				vl_glosa_taxa_co_w    		:= 0;
			end if;

			if (ie_cobrar_filme_w = 'N') then
				vl_materiais_w       := 0;
				vl_materiais_calc_w    := 0;
				vl_lib_taxa_material_w    := 0;
				vl_taxa_material_w    := 0;
				vl_glosa_material_fat_w    := 0;
				vl_glosa_taxa_material_w  := 0;
			end if;

			vl_calculado_fat_w  	:= vl_medico_calc_w + vl_materiais_calc_w + vl_custo_operacional_calc_w + round((coalesce(vl_taxa_co_w,0) + coalesce(vl_taxa_material_w,0) + coalesce(vl_taxa_servico_w,0))::numeric,2);
			vl_administrativa_w  	:= round((coalesce(vl_taxa_co_w,0) + coalesce(vl_taxa_material_w,0) + coalesce(vl_taxa_servico_w,0))::numeric,2);
			vl_beneficiario_w   	:= coalesce(vl_materiais_w,0) + coalesce(vl_custo_operacional_w,0) + coalesce(vl_medico_w,0) + coalesce(vl_lib_taxa_co_w,0) + coalesce(vl_lib_taxa_material_w,0) + coalesce(vl_lib_taxa_servico_w,0);

			if  ((vl_lib_taxa_co_w > 0)     or (vl_lib_taxa_material_w > 0)   or (vl_lib_taxa_servico_w  > 0))   and not(ie_tipo_valor_w = 3 and ie_vl_pag_prestador_w = 'S')  then
				vl_beneficiario_tmp_w :=   	coalesce(vl_materiais_w,0) + coalesce(vl_custo_operacional_w,0) + coalesce(vl_medico_w,0) +
								(dividir_sem_round(coalesce(vl_taxa_co_w,0) ,qt_procedimento_w) * qt_liberada_w) +
								(dividir_sem_round(coalesce(vl_taxa_material_w,0) ,qt_procedimento_w) * qt_liberada_w) +
								(dividir_sem_round(coalesce(vl_taxa_servico_w,0) ,qt_procedimento_w) * qt_liberada_w);

				vl_dif_arredondamento_w := vl_beneficiario_tmp_w - vl_beneficiario_w;				
				
			elsif 	((vl_lib_taxa_co_w > 0)     or (vl_lib_taxa_material_w > 0)   or (vl_lib_taxa_servico_w  > 0)) 	and (ie_tipo_valor_w = 3) then
					
					vl_beneficiario_tmp_w :=   coalesce(vl_materiais_w,0) + coalesce(vl_custo_operacional_w,0) + coalesce(vl_medico_w,0) +
												coalesce(vl_taxa_co_w,0) + coalesce(vl_taxa_material_w,0) + coalesce(vl_taxa_servico_w,0);	
												
				vl_dif_arredondamento_w := vl_beneficiario_tmp_w - vl_beneficiario_w;
			else
				vl_dif_arredondamento_w := 0;				
			end if;
				
			if (nr_seq_disc_proc_w IS NOT NULL AND nr_seq_disc_proc_w::text <> '') and (vl_beneficiario_w < vl_calculado_fat_w) then
			-- situacoes de glosa parcial, onde o vl_beneficiario e menor que o vl_calculado. Nesses casos e preciso atualizar o valor calculado para que seja igual o liberado, pois senao a rotina

			--de liberacao automatica atualiza o valor do pos com o calculado
			vl_medico_calc_w := vl_medico_w;
			vl_materiais_calc_w := vl_materiais_w;
			vl_custo_operacional_calc_w := vl_custo_operacional_w;
			vl_taxa_co_w := vl_lib_taxa_co_w;
			vl_taxa_material_w := vl_lib_taxa_material_w;
			vl_taxa_servico_w := vl_lib_taxa_servico_w;
			end if;
				
			--Caso ocorrer diverg?ncia, ent?o precisa fazer as verifica??es para atribuir a uma das taxas esse valor.
			if (vl_dif_arredondamento_w <> 0) then
			--Se a taxa de servi?o for a maior ou pelo menos n?o for menor que ?s demais, ent?o joga o arredondamento para ela
				if (vl_taxa_servico_w >=  vl_taxa_material_w and vl_taxa_servico_w >=  vl_taxa_co_w) then
					--Para garantir que valor n?o ficar? negativo
					if  	((vl_lib_taxa_servico_w + vl_dif_arredondamento_w) >= 0) then
						vl_lib_taxa_servico_w   := vl_lib_taxa_servico_w + vl_dif_arredondamento_w;
						vl_taxa_servico_w  := vl_taxa_servico_w + vl_dif_arredondamento_w;
					end if;
				--Se cair aqui, ent?o a taxa_servico ? menor que uma das duas, nesse caso, sendo a taxa_co maior ou igual a taxa_material, joga a diferen?a para ela
				elsif ( vl_taxa_co_w >= vl_taxa_material_w) then
					if  	((vl_lib_taxa_co_w + vl_dif_arredondamento_w) >= 0) then
						vl_lib_taxa_co_w   := vl_lib_taxa_co_w + vl_dif_arredondamento_w;
						vl_taxa_co_w    := vl_taxa_co_w + vl_dif_arredondamento_w;
					end if;
				else
					if  	((vl_lib_taxa_material_w + vl_dif_arredondamento_w) > 0) then
						vl_lib_taxa_material_w  := vl_lib_taxa_material_w + vl_dif_arredondamento_w;
						vl_taxa_material_w  := vl_taxa_material_w + vl_dif_arredondamento_w;
					end if;
				end if;
				
				--Atribui novamente os valores, s? que agora com uma das taxas incorporando a diferen?a gerada anteriormente pelo arredondamento.
				vl_beneficiario_w :=   	coalesce(vl_materiais_w,0) + coalesce(vl_custo_operacional_w,0) + coalesce(vl_medico_w,0) +
							coalesce(vl_lib_taxa_co_w,0) + coalesce(vl_lib_taxa_material_w,0) + coalesce(vl_lib_taxa_servico_w,0);
			end if;
				
			if (ie_status_w in ('S', 'L','M')) and (coalesce(vl_beneficiario_w,0) > 0) then
				ie_status_faturamento_w  := 'P';
			elsif (ie_status_w in ('S', 'L','M')) then
				ie_status_faturamento_w  := 'N';
			end if;
			
			-- se o ie_acao_p = CA - A520, ent?o o status do faturamento SEMPRE ser? 'A', feito um if separado para ficar destacado
			if (ie_acao_p in ('CA','CAB')) then
				
				ie_status_faturamento_w    	:= 'A';
			end if;

			vl_liberado_material_fat_w  	:= vl_materiais_w;
			vl_liberado_co_fat_w    	:= vl_custo_operacional_w;
			vl_liberado_hi_fat_w    	:= vl_medico_w;
			vl_glosa_material_fat_w    	:= 0;
			vl_glosa_hi_fat_w    		:= 0;
			vl_glosa_co_fat_w    		:= 0;
			vl_glosa_taxa_co_w         	:= 0;
			vl_glosa_taxa_material_w  	:= 0;
			vl_glosa_taxa_servico_w     	:= 0;

			if (ie_log_w = 'S') then
				ds_observacao_log_w  := 'Vl calculado: '||vl_calculado_fat_w||'; vl liberado: '||vl_beneficiario_w||' ; Qt liberada : '||qt_liberada_w;
				CALL pls_gravar_log_calculo_proc(  	'S', nr_seq_procedimento_w, cd_estabelecimento_w,
								'Vl calculado X vl liberado', ds_observacao_log_w, 'pls_gerar_valor_pos_estab',
								vl_beneficiario_w, 0, 0,
								0, 0, 0,
								11, null, null,
								null, null, 'PLS_CONTA_POS_ESTABELECIDO',
								nm_usuario_p);
			end if;

			--aaschlote 01/10/2015 OS 923624 - Realizar a convers?o da quantidade do p?s-estabelecido
			if (coalesce(qt_mult_quantidade_w,0) > 0) then
				qt_liberada_w  := round((qt_liberada_w * qt_mult_quantidade_w)::numeric,3);
			end if;

			if (vl_calculado_fat_w IS NOT NULL AND vl_calculado_fat_w::text <> '') then
				vl_provisao_w := vl_calculado_fat_w;
			end if;
			--Se qt_filme_tab_proc_aplicar_w for diferente de zero ? por que pegou valor pago ao prestador com tipo de cobran?a p?s = 9, ent?o al?m do valor

			--pago ao prestador, o qt_filme(l? da pls_conta_proc) deve ser utilizado.
			if ( qt_filme_tab_proc_aplicar_w = 0) then
				qt_filme_tab_proc_aplicar_w := dados_regra_preco_proc_w.qt_filme_tab;
			end if;
			
			if (dados_regra_preco_proc_w.nr_seq_regra_tx_proc_int IS NOT NULL AND dados_regra_preco_proc_w.nr_seq_regra_tx_proc_int::text <> '') then
					
				tx_item_w := dados_regra_preco_proc_w.tx_item;
				
				if (ie_log_w = 'S') then
					ds_observacao_log_w	:= 'Tx proc inter: ' || dados_regra_preco_proc_w.tx_item || '; Regra de tx proc: ' || dados_regra_preco_proc_w.nr_seq_regra_tx_proc_int;
					CALL pls_gravar_log_calculo_proc(	'S', nr_seq_procedimento_w, cd_estabelecimento_w,
									'Tx proc para interc?mbio', ds_observacao_log_w, 'pls_gerar_valor_pos_estab',
									vl_beneficiario_w, 0, 0,
									0, 0, 0,
									12, null, null,
									null, null, 'PLS_CONTA_POS_ESTABELECIDO',
									nm_usuario_p);
				end if;
				
			end if;

			if (coalesce(nr_seq_pos_estab_w,0) > 0 ) then
				begin
				
				if (ie_acao_p <> 'P') Then
					update  pls_conta_pos_estabelecido
					set  	vl_beneficiario			= CASE WHEN ie_status_faturamento='N' THEN 0 WHEN ie_status_faturamento='C' THEN 0  ELSE coalesce(vl_beneficiario_w,0) END ,
						nr_seq_pos_estab_interc 	= nr_seq_pos_estab_interc_w,
						nr_seq_regra_pos_estab  	= nr_seq_regra_pos_estab_w,
						vl_provisao      		= coalesce(vl_provisao_w,coalesce(vl_beneficiario_w,0)),
						vl_custo_operacional    	= coalesce(vl_custo_operacional_w,0),
						vl_medico      			= coalesce(vl_medico_w,0),
						vl_materiais      		= coalesce(vl_materiais_w,0),
						vl_calculado      		= coalesce(vl_calculado_fat_w,0),
						vl_medico_calc      		= vl_medico_calc_w,
						vl_materiais_calc    		= vl_materiais_calc_w,
						vl_custo_operacional_calc  	= vl_custo_operacional_calc_w,
						ds_item_convertido    		= ds_item_convertido_w,
						vl_liberado_material_fat  	= CASE WHEN ie_status_faturamento='N' THEN 0  ELSE vl_materiais_w END ,
						vl_liberado_co_fat    		= CASE WHEN ie_status_faturamento='N' THEN 0  ELSE vl_custo_operacional_w END ,
						vl_liberado_hi_fat    		= CASE WHEN ie_status_faturamento='N' THEN 0  ELSE vl_medico_w END ,
						vl_glosa_material_fat    	= vl_glosa_material_fat_w,
						vl_glosa_hi_fat      		= vl_glosa_hi_fat_w,
						vl_glosa_co_fat      		= vl_glosa_co_fat_w,
						cd_item_convertido    		= CASE WHEN cd_item_alt = NULL THEN  cd_item_convertido_w  ELSE cd_item_alt END ,
						nm_usuario      		= nm_usuario_p,
						dt_atualizacao      		= clock_timestamp(),
						vl_administracao    		= coalesce(vl_administrativa_w,0),
						tx_administracao    		= coalesce(tx_administrativa_w,0),
						qt_item        			= qt_liberada_w,
						vl_glosa_taxa_co         	= vl_glosa_taxa_co_w,
						vl_glosa_taxa_material    	= vl_glosa_taxa_material_w,
						vl_glosa_taxa_servico     	= vl_glosa_taxa_servico_w,
						vl_lib_taxa_co         		= CASE WHEN ie_status_faturamento='N' THEN 0  ELSE vl_lib_taxa_co_w END ,
						vl_lib_taxa_material    	= CASE WHEN ie_status_faturamento='N' THEN 0  ELSE vl_lib_taxa_material_w END ,
						vl_lib_taxa_servico      	= CASE WHEN ie_status_faturamento='N' THEN 0  ELSE vl_lib_taxa_servico_w END ,
						vl_taxa_co       		= vl_taxa_co_w,
						vl_taxa_material    		= vl_taxa_material_w,
						vl_taxa_servico     		= vl_taxa_servico_w,
						ie_status_faturamento    	= CASE WHEN vl_beneficiario=0 THEN 'N'  ELSE ie_status_faturamento END ,
						vl_tabela_preco      		= dados_regra_preco_proc_w.vl_proc_tabela,
						vl_cotacao_moeda     		= dados_regra_preco_proc_w.vl_ch_honorarios,
						cd_moeda_calculo    		= dados_regra_preco_proc_w.cd_moeda_autogerado,
						qt_filme_tab      		= dados_regra_preco_proc_w.qt_filme_tab,
						vl_custo_operacional_tab  	= dados_regra_preco_proc_w.vl_custo_operacional_tab,
						vl_material_tab      		= dados_regra_preco_proc_w.vl_base_filme, --aldellandrea 774659
						nr_seq_regra_horario    	= dados_regra_preco_proc_w.nr_seq_criterio_horario,
						ie_situacao      		= 'A',
						ie_vl_pag_prestador    		= ie_vl_pag_prestador_w,
						cd_porte_anestesico    		= dados_regra_preco_proc_w.cd_porte_anestesico,
						ie_gerar_co      		= ie_cobrar_co_w,
						ie_gerar_filme      		= ie_cobrar_filme_w,
						nr_seq_regra_tp_pos     	= nr_seq_regra_w,
						ie_tipo_liberacao    		= 'S',
						tx_item				= CASE WHEN dados_regra_preco_proc_w.nr_seq_regra_tx_proc_int = NULL THEN  tx_item  ELSE tx_item_w END , --Somente seta se teve regra v?lida, para n?o zerar quando n?o tiver
						nr_seq_regra_taxa_int	=	nr_seq_regra_tx_interc_w
					where  	nr_sequencia       		= nr_seq_pos_estab_w
					and	coalesce(nr_seq_conta_pos_orig::text, '') = ''; -- nao pode alterar pos de estorno
				end if;
				end;
				
			else
				begin
				/*aaschlote 28/08/2013 - OS 631364*/

				cd_item_conver_xml_w  := null;
				ie_origem_proced_conver_xml_w  := null;
				nr_seq_tiss_tab_conver_xml_w  := null;
				if (qt_registros_proc_xml_w > 0) and (coalesce(ie_tipo_congenere_w,'OP') = 'OP') then
					SELECT * FROM pls_obter_proced_conversao(  	cd_procedimento_original_w, ie_origem_proced_w, nr_seq_prestador_exec_w, cd_estabelecimento_w, 6, nr_seq_congenere_w, null, 'E', nr_seq_contrato_w, nr_seq_intercambio_w, nr_seq_ops_congenere_w, null, ie_tipo_intercambio_w, cd_item_conver_xml_w, ie_origem_proced_conver_xml_w, nr_seq_regra_conver_xml_w, ie_somente_codigo_w, clock_timestamp(), nr_seq_tipo_atendimento_w, null, null) INTO STRICT cd_item_conver_xml_w, ie_origem_proced_conver_xml_w, nr_seq_regra_conver_xml_w, ie_somente_codigo_w;

					if (cd_item_conver_xml_w = cd_procedimento_original_w) then
						cd_item_conver_xml_w  := null;
						ie_origem_proced_conver_xml_w  := null;
					end if;

					if (nr_seq_regra_conver_xml_w IS NOT NULL AND nr_seq_regra_conver_xml_w::text <> '') then
						select  max(nr_seq_tiss_tab_conversao)
						into STRICT  nr_seq_tiss_tab_conver_xml_w
						from  pls_conversao_proc
						where  nr_sequencia  = nr_seq_regra_conver_xml_w;
					end if;
				end if;

				begin
					select  CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'PF'  ELSE 'PJ' END
					into STRICT  	ie_tipo_prestador_atend_w
					from  	pls_prestador
					where  	nr_sequencia  = dados_conta_pos_w.nr_seq_prestador_prot;
				exception
				when others then
					ie_tipo_prestador_atend_w  := null;
				end;

				begin
					select  CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'PF'  ELSE 'PJ' END
					into STRICT  	ie_tipo_prestador_exec_w
					from  	pls_prestador
					where  	nr_sequencia  = nr_seq_prestador_exec_w;
				exception
				when others then
					ie_tipo_prestador_exec_w  := null;
				end;

				if (ie_acao_p <> 'P') Then
					select  nextval('pls_conta_pos_estabelecido_seq')
					into STRICT  nr_seq_pos_estab_w
					;

					insert into pls_conta_pos_estabelecido(nr_sequencia, nr_seq_conta, vl_beneficiario,
							dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
							nm_usuario_nrec, nr_seq_conta_proc, nr_seq_conta_mat,
							ie_calcula_preco_benef, ie_preco_plano, nr_seq_regra_pos_estab,
							ie_cobrar_mensalidade, nr_seq_cooperativa, cd_proc_convertido,
							nr_seq_analise, vl_provisao, ie_status_faturamento,
							nr_seq_pos_estab_interc,vl_custo_operacional,vl_materiais,
							cd_item_convertido, ds_item_convertido,tx_administracao,
							vl_administracao,qt_item,vl_medico,
							qt_original,vl_calculado, ie_origem_valor_pos,
							nr_seq_regra_conv_proc, vl_liberado_material_fat,vl_liberado_co_fat,
							vl_liberado_hi_fat,vl_glosa_material_fat,vl_glosa_hi_fat,
							vl_glosa_co_fat, vl_medico_calc, vl_materiais_calc,
							vl_custo_operacional_calc,
							cd_procedimento,ie_origem_proced,dt_item,dt_inicio_item,dt_fim_item,
							cd_item_convertido_xml,nr_seq_tiss_tab_conversao, nr_seq_disc_proc,
							nr_seq_cabecalho, vl_glosa_taxa_co, vl_glosa_taxa_material,
							vl_glosa_taxa_servico, vl_lib_taxa_co,  vl_lib_taxa_material,
							vl_lib_taxa_servico, vl_taxa_co, vl_taxa_material,
							vl_taxa_servico,vl_tabela_preco, vl_cotacao_moeda,
							cd_moeda_calculo, qt_filme_tab, vl_custo_operacional_tab,
							vl_material_tab, ie_situacao, nr_seq_proc_rec,
							nr_seq_conta_rec, ie_tipo_guia, ie_tipo_protocolo,
							nr_seq_segurado, ie_tipo_segurado, dt_mes_competencia,
							nr_seq_protocolo, nr_seq_prestador_atend, nr_seq_prestador_exec,
							ie_tipo_prestador_atend, ie_tipo_prestador_exec, ie_vl_pag_prestador,
							nr_seq_regra_horario, cd_porte_anestesico, ie_gerar_co,
							ie_gerar_filme, nr_seq_regra_tp_pos, ie_tipo_liberacao,
							tx_item, nr_seq_regra_taxa_int)
					values (	nr_seq_pos_estab_w, nr_seq_conta_p, coalesce(vl_beneficiario_w,0),
							clock_timestamp(), nm_usuario_p, clock_timestamp(),
							nm_usuario_p, nr_seq_procedimento_w, null,
							ie_calcula_preco_benef_w, ie_preco_plano_w, nr_seq_regra_pos_estab_w,
							-- tratamento de seguran?a, para os casos de contas de aviso, gerar SEMPRE com ie_cobrar_mensalidade_w = 'A'
							case ie_acao_p when 'CA' then 'A' when 'CAB' then 'A' else ie_cobrar_mensalidade_w end , nr_seq_congenere_w, cd_procedimento_w,
							-- tratamento de seguran?a, para os casos de contas de aviso, gerar SEMPRE com ie_status_faturamento_w = 'A'
							nr_seq_analise_ww, coalesce(vl_provisao_w,vl_beneficiario_w),case ie_acao_p when 'CA' then 'A'  when 'CAB' then 'A'
							when ''then 'A' else ie_status_faturamento_w end,
							nr_seq_pos_estab_interc_w,vl_custo_operacional_w,vl_materiais_w,
							cd_item_convertido_w, ds_item_convertido_w,coalesce(tx_administrativa_w,0),
							coalesce(vl_administrativa_w,0),qt_liberada_w,vl_medico_w,
							qt_procedimento_w,coalesce(vl_calculado_fat_w,0),ie_origem_valor_pos_p,
							nr_seq_regra_conversao_w, vl_liberado_material_fat_w,vl_liberado_co_fat_w,
							vl_liberado_hi_fat_w,vl_glosa_material_fat_w,vl_glosa_hi_fat_w,
							vl_glosa_co_fat_w, vl_medico_calc_w,vl_materiais_calc_w,
							vl_custo_operacional_calc_w,
							cd_procedimento_original_w,ie_origem_proced_w,dt_procedimento_w,dt_inicio_item_w,dt_fim_item_w,
							cd_item_conver_xml_w,nr_seq_tiss_tab_conver_xml_w, nr_seq_discussao_proc_w,
							nr_seq_pos_cabecalho_w,vl_glosa_taxa_co_w, vl_glosa_taxa_material_w,
							vl_glosa_taxa_servico_w, vl_lib_taxa_co_w,  vl_lib_taxa_material_w,
							vl_lib_taxa_servico_w, vl_taxa_co_w, vl_taxa_material_w,
							vl_taxa_servico_w, dados_regra_preco_proc_w.vl_proc_tabela, dados_regra_preco_proc_w.vl_ch_honorarios,
							dados_regra_preco_proc_w.cd_moeda_autogerado, dados_regra_preco_proc_w.qt_filme_tab, dados_regra_preco_proc_w.vl_custo_operacional_tab,
							dados_regra_preco_proc_w.vl_base_filme, 'A', nr_seq_proc_rec_w,
							nr_seq_conta_rec_w, ie_tipo_guia_w, ie_tipo_protocolo_w,
							nr_seq_segurado_w, ie_tipo_segurado_w, dt_mes_competencia_w,
							nr_seq_protocolo_w, dados_conta_pos_w.nr_seq_prestador_prot, nr_seq_prestador_exec_w,
							ie_tipo_prestador_atend_w, ie_tipo_prestador_exec_w, ie_vl_pag_prestador_w,
							dados_regra_preco_proc_w.nr_seq_criterio_horario, dados_regra_preco_proc_w.cd_porte_anestesico, ie_cobrar_co_w,
							ie_cobrar_filme_w, nr_seq_regra_w, 'S',
							tx_item_w, nr_seq_regra_tx_interc_w);
				Else

					select  count(1)
					into STRICT  	qt_reg_prev_w
					from   	pls_conta_Pos_estab_prev
					where   nr_seq_conta_Proc = nr_seq_Procedimento_w;

					if (qt_reg_prev_w = 0) then

						select  nextval('pls_conta_pos_estab_prev_seq')
						into STRICT  nr_seq_pos_estab_w
						;

					if ( coalesce(vl_beneficiario_w,0) != 0 ) then			
						insert into pls_conta_pos_estab_prev(	nr_sequencia, nr_seq_conta, vl_beneficiario,
								dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
								nm_usuario_nrec, nr_seq_conta_proc, nr_seq_conta_mat,
								ie_calcula_preco_benef, ie_preco_plano, nr_seq_regra_pos_estab,
								ie_cobrar_mensalidade, nr_seq_cooperativa, cd_proc_convertido,
								nr_seq_analise, vl_provisao, ie_status_faturamento,
								nr_seq_pos_estab_interc,vl_custo_operacional,vl_materiais,
								cd_item_convertido, ds_item_convertido,tx_administracao,
								vl_administracao,qt_item,vl_medico,
								qt_original,vl_calculado, ie_origem_valor_pos,
								nr_seq_regra_conv_proc, vl_liberado_material_fat,vl_liberado_co_fat,
								vl_liberado_hi_fat,vl_glosa_material_fat,vl_glosa_hi_fat,
								vl_glosa_co_fat, vl_medico_calc, vl_materiais_calc,
								vl_custo_operacional_calc,
								cd_procedimento,ie_origem_proced,dt_item,dt_inicio_item,dt_fim_item,
								cd_item_convertido_xml,nr_seq_tiss_tab_conversao, nr_seq_disc_proc,
								nr_seq_cabecalho, vl_glosa_taxa_co, vl_glosa_taxa_material,
								vl_glosa_taxa_servico, vl_lib_taxa_co,  vl_lib_taxa_material,
								vl_lib_taxa_servico, vl_taxa_co, vl_taxa_material,
								vl_taxa_servico,vl_tabela_preco, vl_cotacao_moeda,
								cd_moeda_calculo, qt_filme_tab, vl_custo_operacional_tab,
								vl_material_tab, ie_situacao, nr_seq_proc_rec,
								nr_seq_conta_rec, ie_tipo_guia, ie_tipo_protocolo,
								nr_seq_segurado, ie_tipo_segurado, dt_mes_competencia,
								nr_seq_protocolo, nr_seq_prestador_atend, nr_seq_prestador_exec,
								ie_tipo_prestador_atend, ie_tipo_prestador_exec, ie_vl_pag_prestador,
								nr_seq_regra_horario, cd_porte_anestesico, ie_gerar_co,
								ie_gerar_filme, nr_seq_regra_tp_pos, ie_tipo_liberacao,
								tx_item)
						values (  	nr_seq_pos_estab_w, nr_seq_conta_p, coalesce(vl_beneficiario_w,0),
								clock_timestamp(), nm_usuario_p, clock_timestamp(),
								nm_usuario_p, nr_seq_procedimento_w, null,
								ie_calcula_preco_benef_w, ie_preco_plano_w, nr_seq_regra_pos_estab_w,
								-- tratamento de seguran?a, para os casos de contas de aviso, gerar SEMPRE com ie_cobrar_mensalidade_w = 'A'
								case ie_acao_p when 'CA' then 'A' when 'CAB' then 'A' 
								else ie_cobrar_mensalidade_w end , nr_seq_congenere_w, cd_procedimento_w,
								-- tratamento de seguran?a, para os casos de contas de aviso, gerar SEMPRE com ie_status_faturamento_w = 'A'
								nr_seq_analise_ww, coalesce(vl_provisao_w,vl_beneficiario_w),case ie_acao_p when 'CA' then 'A' 
								when 'CAB' then 'A' else ie_status_faturamento_w end,
								nr_seq_pos_estab_interc_w,vl_custo_operacional_w,vl_materiais_w,
								cd_item_convertido_w, ds_item_convertido_w,coalesce(tx_administrativa_w,0),
								coalesce(vl_administrativa_w,0),qt_liberada_w,vl_medico_w,
								qt_procedimento_w,coalesce(vl_calculado_fat_w,0),ie_origem_valor_pos_p,
								nr_seq_regra_conversao_w, vl_liberado_material_fat_w,vl_liberado_co_fat_w,
								vl_liberado_hi_fat_w,vl_glosa_material_fat_w,vl_glosa_hi_fat_w,
								vl_glosa_co_fat_w, vl_medico_calc_w,vl_materiais_calc_w,
								vl_custo_operacional_calc_w,
								cd_procedimento_original_w,ie_origem_proced_w,dt_procedimento_w,dt_inicio_item_w,dt_fim_item_w,
								cd_item_conver_xml_w,nr_seq_tiss_tab_conver_xml_w, nr_seq_discussao_proc_w,
								nr_seq_pos_cabecalho_w,vl_glosa_taxa_co_w, vl_glosa_taxa_material_w,
								vl_glosa_taxa_servico_w, vl_lib_taxa_co_w,  vl_lib_taxa_material_w,
								vl_lib_taxa_servico_w, vl_taxa_co_w, vl_taxa_material_w,
								vl_taxa_servico_w, dados_regra_preco_proc_w.vl_proc_tabela, dados_regra_preco_proc_w.vl_ch_honorarios,
								dados_regra_preco_proc_w.cd_moeda_autogerado, dados_regra_preco_proc_w.qt_filme_tab, dados_regra_preco_proc_w.vl_custo_operacional_tab,
								dados_regra_preco_proc_w.vl_base_filme, 'A', nr_seq_proc_rec_w,
								nr_seq_conta_rec_w, ie_tipo_guia_w, ie_tipo_protocolo_w,
								nr_seq_segurado_w, ie_tipo_segurado_w, dt_mes_competencia_w,
								nr_seq_protocolo_w, dados_conta_pos_w.nr_seq_prestador_prot, nr_seq_prestador_exec_w,
								ie_tipo_prestador_atend_w, ie_tipo_prestador_exec_w, ie_vl_pag_prestador_w,
								dados_regra_preco_proc_w.nr_seq_criterio_horario, dados_regra_preco_proc_w.cd_porte_anestesico, ie_cobrar_co_w,
								ie_cobrar_filme_w, nr_seq_regra_w, 'S',
								tx_item_w);
						else

							insert into plsprco_cta( 	nr_sequencia, dt_atualizacao, nm_usuario,
												dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela,
												ds_log, ds_log_call, ds_funcao_ativa, 
												ie_aplicacao_tasy, nm_maquina, pls_conta_proc, ie_opcao )
									values ( 	nextval('plsprco_cta_seq'), clock_timestamp(), nm_usuario_p,
												clock_timestamp(), nm_usuario_p, 'PLS_CONTA_POS_ESTAB_PREV', 
												'Nao gerou previa por valor zerado cd_Proc= '||cd_procedimento_w||' ie_origem_proc= '||ie_origem_proced_w, 
												'PLS_GERAR_VALOR_POS_ESTAB', obter_funcao_ativa, 
												'S', '' , nr_seq_procedimento_w, '0');
						end if;
					end if;
				end if;
				
				end;
			end if;
			
			--necessario verificar se sera decontada a coparticipacao do pos estabelecido e caso sim. Se o valor liquido for diferente do liberado, quer dizer que houve coparticipacao deduzida
			if (ie_tipo_protocolo_w = 'R' and (nr_seq_mot_reembolso_w IS NOT NULL AND nr_seq_mot_reembolso_w::text <> '')) then						
			
				select max(ie_desconta_copartic_pos)
				into STRICT ie_desc_copart_pos_w
				from pls_motivo_reembolso
				where nr_sequencia = nr_seq_mot_reembolso_w;
				
				if (ie_desc_copart_pos_w = 'S') then
				
					if (vl_liberado_w <> vl_liquido_w) then
					pr_proporcao_w := dividir(vl_liquido_w,vl_liberado_w);
					end if;				
					
					update 	pls_conta_pos_estabelecido
					set	vl_beneficiario = vl_liquido_w + vl_taxa_int_w,
					vl_materiais_calc = vl_materiais_calc * pr_proporcao_w,
					vl_custo_operacional_calc = vl_custo_operacional_calc * pr_proporcao_w,
					vl_medico_calc = vl_medico_calc * pr_proporcao_w,
					vl_taxa_co = vl_taxa_co * pr_proporcao_w,
					vl_taxa_material = vl_taxa_material * pr_proporcao_w,
					vl_taxa_servico = vl_taxa_servico * pr_proporcao_w,
					vl_provisao = vl_liquido_w
					where	nr_sequencia = nr_seq_pos_estab_w;
					
					
					for r_c03_w in C03(nr_seq_pos_estab_w) loop

						if (r_c03_w.vl_beneficiario <> r_c03_w.vl_total_pos) then

							vl_diferenca_w := r_c03_w.vl_beneficiario - r_c03_w.vl_total_pos;

							if (r_c03_w.vl_medico_calc > r_c03_w.vl_custo_operacional_calc) and (r_c03_w.vl_medico_calc > r_c03_w.vl_materiais_calc) then
								update pls_conta_pos_estabelecido
								set vl_medico_calc = vl_medico_calc + vl_diferenca_w
								where nr_sequencia = nr_seq_pos_estab_w;
							
							elsif (r_c03_w.vl_custo_operacional_calc > r_c03_w.vl_materiais_calc) then
								update pls_conta_pos_estabelecido
								set vl_custo_operacional_calc = vl_custo_operacional_calc + vl_diferenca_w
								where nr_sequencia = nr_seq_pos_estab_w;
							
							else  						
								update pls_conta_pos_estabelecido
								set vl_materiais_calc = vl_materiais_calc + vl_diferenca_w
								where nr_sequencia = nr_seq_pos_estab_w;
							
							end if;
						end if;
					end loop;
					
				end if;
			end if;	

			if ( ie_acao_p != 'P') then
				-- Gerar os participantes do procedimento referente ao p?s-estabelecido. Adicionada verifica??o para

				--que gere participantes em caso de ajuste de refaturamento.
				if  	(((vl_medico_calc_w > 0) or ((ie_gerar_partic_conta_w = 'S') and (qt_ocor_partic_w = 0) and (qt_glosa_partic_w = 0))) and				
					((nr_seq_pos_estab_interc_w IS NOT NULL AND nr_seq_pos_estab_interc_w::text <> '') or (nr_seq_regra_pos_estab_w IS NOT NULL AND nr_seq_regra_pos_estab_w::text <> '') or (nr_seq_ajuste_fat_w IS NOT NULL AND nr_seq_ajuste_fat_w::text <> ''))) or (ie_vl_pag_prestador_w = 'S') or
					(((coalesce(nr_seq_pos_estab_interc_w::text, '') = '') and (coalesce(nr_seq_regra_pos_estab_w::text, '') = '') and (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') and (qt_partic_w >= 1)))then

					CALL pls_gerar_conta_pos_estab_part(  nr_seq_pos_estab_w, 'N', nm_usuario_p);
				else
					delete   FROM pls_conta_pos_estab_partic
					where  nr_seq_conta_pos = nr_seq_pos_estab_w;
				end if;
			end if;
			
			vl_beneficiario_w  := coalesce(vl_beneficiario_w,0);

			if (ie_acao_p <> 'RC') then
				update  pls_conta_proc
				set 	vl_beneficiario    	= vl_beneficiario_w,
					ie_co_preco_operadora  	= ie_calcula_preco_benef_w
				where  	nr_sequencia    	= nr_seq_procedimento_w;

				select  sum(qt_item)
				into STRICT  	qt_lib_total_w
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_proc  = nr_seq_procedimento_w
				and  	vl_beneficiario    > 0
				and  	((ie_situacao  	= 'A') or (coalesce(ie_situacao::text, '') = ''))
				and  	ie_status_faturamento  not in ('N', 'A')
				and     ie_origem_valor_pos     != 'RC'
				and	ie_cobrar_mensalidade	!= 'A';

				if (qt_lib_total_w > qt_procedimento_w) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(268762, 'NR_SEQ_PROC='||nr_seq_procedimento_w);
				end if;
			else
				select  coalesce(sum(vl_beneficiario),0)
				into STRICT  	vl_beneficiario_ww
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_proc  = nr_seq_procedimento_w
				and  	vl_beneficiario    > 0
				and  	((ie_situacao  = 'A') or (coalesce(ie_situacao::text, '') = ''))
				and  	ie_status_faturamento  not in ('N', 'A')
				and	ie_cobrar_mensalidade	!= 'A';

				update  pls_conta_proc
				set  	vl_beneficiario    = vl_beneficiario_ww + vl_beneficiario_w,
					ie_co_preco_operadora  = ie_calcula_preco_benef_w
				where  	nr_sequencia    = nr_seq_procedimento_w;
			end if;

			--atualiiza descri??o do item gen?rico
			if (ie_acao_p not in ('F', 'RC')) and (nr_seq_procedimento_w IS NOT NULL AND nr_seq_procedimento_w::text <> '') then
				ds_altera_item_pos_w := 'X';
				select	coalesce(max(ds_item_ptu), 'X')
				into STRICT  	ds_altera_item_pos_w
				from  	pls_conta_proc_regra
				where  	nr_sequencia = nr_seq_procedimento_w
				and  	(ds_item_ptu IS NOT NULL AND ds_item_ptu::text <> '');

				if (ds_altera_item_pos_w <> 'X') then
					update  pls_conta_pos_estabelecido
					set  	ds_item_ptu   	= ds_altera_item_pos_w,
						nm_usuario  	= nm_usuario_p,
						dt_atualizacao  = clock_timestamp()
					where  	nr_sequencia 	= nr_seq_pos_estab_w;

				end if;
			end if;
			commit;
			<<final>>
			ie_cobranca_pos_w  := 'S'; /* Deve existir uma linha ap?s o <<Final>> */
		end if;
		
		--Se for previa de pos
		if (ie_acao_p = 'P') then
			update 	pls_conta_proc set
				vl_procedimento_ptu = vl_procedimento_ptu_old_w,	
				vl_co_ptu 	= vl_co_ptu_old_w,			
				vl_material_ptu = vl_material_ptu_old_w,		
				vl_taxa_co 	= vl_taxa_co_old_w,		
				vl_taxa_servico	= vl_taxa_servico_old_w,		
				vl_taxa_material = vl_taxa_material_old_w,
				tx_intercambio = tx_intercambio_old_w
			where 	nr_sequencia = nr_seq_procedimento_w;
		end if;
		
	end;
	end loop;
	close C01;

	vl_apresentado_w  := 0;
	vl_beneficiario_w  := 0;
	vl_liquido_w	:= 0;
	commit;
	/* MATERIAIS */

	open C02;
	loop
	fetch C02 into
		nr_seq_material_w,
		nr_seq_cod_material_w,
		ie_tipo_despesa_w,
		ie_origem_preco_w,
		vl_material_w,
		vl_apresentado_w,
		qt_material_w,
		dt_atendimento_w,
		vl_material_ptu_w,
		vl_taxa_material_w,
		vl_provisao_w,
		ie_status_w,
		nr_seq_regra_int_w,
		vl_liberado_w,
		ie_glosa_w,
		qt_liberada_w,
		dt_inicio_item_w,
		dt_fim_item_w,
		nr_seq_discussao_mat_w,
		nr_seq_discussao_w,
		dados_conta_pos_w.ie_apresentacao_prot,
		dados_conta_pos_w.ie_tipo_desp_mat,
		dados_conta_pos_w.nr_seq_prestador_prot,
		nr_seq_mat_rec_w,
		nr_seq_conta_rec_w,
		ie_tipo_protocolo_w,
		dt_mes_competencia_w,
		ie_origem_protocolo_w,
		vl_lib_original_w,
		nr_seq_regra_pct_fat_w,
		qt_apropriacao_w,
		qt_item_pos_w,
		det_reg_anvisa_w,
		vl_glosa_w,
		dt_item_base_w,
		vl_lib_taxa_mat_w,
		qt_disc_pos_w,
		nr_seq_prest_inter_w,
		ie_aviso_a520_mat_w,
		ie_tipo_faturamento_w,
		vl_participacao_w,
		qt_reg_impede_geracao_w,
		nr_seq_disc_mat_w,
		tx_intercambio_old_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (qt_disc_pos_w IS NOT NULL AND qt_disc_pos_w::text <> '') then
			qt_liberada_w := qt_disc_pos_w;
		end if;
		
		ie_regra_5_vl_pag_prest_w := 'N';
		if (ie_acao_p = 'P') then
			vl_material_ptu_old_w := vl_material_ptu_w;
			vl_taxa_material_old_w := vl_taxa_material_w;
		end if;
		
		--Apenas para caso de gera??o de p?s de discussao
		if (ie_geracao_pos_estabelecido_w   = 'F') and
			((coalesce(ie_acao_p,'A') 	= 'F') and (qt_conta_cabecalho_w   = 0)) then
			CALL pls_gerar_conta_pos_cabecalho(nr_seq_conta_p, nr_seq_discussao_w, nm_usuario_p);

			--Se ? registro lan?ado manualmente via abertura de pacote e j? tem p?s gerado, ent?o n?o poder? lan?ar novo p?s vinculado ao mesmo item
			select  count(1)
			into STRICT  	qt_conta_cabecalho_w
			from  	pls_conta_pos_cabecalho
			where  	nr_seq_conta  = nr_seq_conta_p
			and   	nr_seq_discussao = nr_seq_discussao_w;
		end if;

		ie_gera_w        := 'S';
		qt_pos_a520_abert_pct_w := 0;
		qt_pos_abert_pct_w := 0;
				
		if ( (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') and  ie_status_w = 'M') then
			
		--Se e registro lancado manualmente via abertura de pacote e ja tem pos gerado, entao nao podera lancar novo pos vinculado ao mesmo item
			select count(1)
			into STRICT  qt_pos_a520_abert_pct_w
			from  pls_conta_pos_estabelecido
			where   nr_seq_conta_mat = nr_seq_material_w
			and   ie_status_faturamento = 'A';
			
			--alguns casos ocorre um lancamento de proc faturamento manual de item da composicao de pacote para aviso e outro para o pos, e tem caso que 

			--somente lancou um item. Quando lanca somente um item, deve permitir gerar pos do item que ja gerou o aviso, se lancar dois itens, nao deve permitir
				
			select 	count(1)
			into STRICT	qt_pos_abert_pct_w
			from	pls_conta_mat x,
				pls_conta_pos_estabelecido z
			where 	x.nr_sequencia = nr_seq_material_w
			and	x.nr_sequencia = z.nr_seq_conta_mat
			and   	z.ie_status_faturamento = 'A'	
			and 	exists ( SELECT 1 from pls_conta_mat y
					where 	y.nr_seq_conta = x.nr_seq_conta
					and 	y.nr_seq_regra_pct_fat = x.nr_seq_regra_pct_fat
					and 	y.nr_seq_proc_pct = x.nr_seq_proc_pct
					and 	y.nr_seq_material = x.nr_seq_material
					and 	y.nr_sequencia <>  nr_seq_material_w);
		
			--evita gerar dois registros para aviso
			if (( qt_pos_a520_abert_pct_w > 0  and ie_acao_p in ('CA','CAB'))
				or (qt_pos_abert_pct_w > 0 and ie_acao_p not in ('CA','CAB')))then
				ie_gera_w := 'N';
			end if;
									
		end if;
		nr_seq_regra_w 		:= null;
		ie_gera_pos_resc_w   	:= 'S';
		nr_seq_pos_estab_interc_w := null;

		if (ie_horario_rescisao_w = 'N') then
			dt_item_base_w := trunc(dt_item_base_w);
			dt_limite_utilizacao_w := trunc(dt_limite_utilizacao_w);
		end if;

		-- retirado o tratamento devido a gerar a coparticipa??o respeitando a regra de honor?rio e o grau de participa??o dos itens
		if (ie_preco_plano_w = '1') and (ie_calculo_pos_estab_w <> 'IC') and
                        ((ie_gerar_pos_remido_w = 'N') or (ie_gerar_pos_remido_w = 'S' and ie_benef_remido_w != 'S')) then
			ie_gera_pos_resc_w := 'N';
			if (dt_limite_utilizacao_w < dt_item_base_w) then
				if (ie_cobranca_pos_w = 'S') then

					select  count(a.nr_sequencia)
					into STRICT  	qt_devolucao_carteira_w
					from  	pls_carteira_devolucao  a,
						pls_cart_lote_devolucao  b
					where  	b.nr_sequencia      = a.nr_seq_lote
					and  	a.cd_usuario_plano    = cd_usuario_plano_w
					and  	a.nr_via       = nr_via_solicitacao_w
					and  	a.dt_validade_carteira    = dt_validade_carteira_w
					and  	trunc(b.dt_devolucao,'dd')  < dt_item_base_w;

					if (qt_devolucao_carteira_w = 0) then
						ie_gera_pos_resc_w := 'S';
						ie_calcula_preco_benef_w := 'S';
					end if;
				end if;
			end if;
		end if;

		if (ie_acao_p = 'RC') then
			ie_gera_w := 'N';

			if (ie_apropriacao_copartic_w = 'S') then
				if (qt_apropriacao_w > 0) then
					ie_gera_w := 'S';
				end if;
			else
				ie_gera_w := 'S';
			end if;

			if (ie_gera_w = 'S') and (ie_apropriacao_copartic_w = 'N') then
				select  coalesce(max(ie_vl_pag_prestador),'N'),
					max(nr_seq_regra_pos_estab),
					max(nr_seq_pos_estab_interc)
				into STRICT  	ie_vl_pag_prestador_ww,
					nr_seq_regra_pos_estab_ww,
					nr_seq_pos_estab_interc_ww
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_mat 	= nr_seq_material_w
				and  	coalesce(nr_seq_conta_rec::text, '') = ''
				and  	vl_beneficiario 	> 0
				and  	((ie_situacao  = 'A') 	or (coalesce(ie_situacao::text, '') = ''))
				and  	ie_status_faturamento  	not in ('N', 'A')
				and	ie_cobrar_mensalidade	!= 'A';

				if (ie_vl_pag_prestador_ww = 'N') and (qt_liberada_w <= 0) and
					((nr_seq_regra_pos_estab_ww IS NOT NULL AND nr_seq_regra_pos_estab_ww::text <> '') or (nr_seq_pos_estab_interc_ww IS NOT NULL AND nr_seq_pos_estab_interc_ww::text <> '')) then
					ie_gera_w := 'N';
				end if;
			end if;

			if (qt_liberada_w <= 0) then
				qt_liberada_w := qt_material_w;
			end if;
		end if;
		
		
		-- se o item veio de A500, foi avisada em A520 e est? com valor apresentado zerado, n?o deve gerar o P?s
		if (pls_obter_se_a504_glosado(ie_aviso_a520_mat_w, ie_origem_conta_w, vl_apresentado_w) = 'S') then
			
			ie_gera_w := 'N';
		end if;
		
		if (qt_reg_impede_geracao_w > 0) then
			ie_gera_w := 'N';
		 end if;

		if  	((ie_gera_w = 'S') and
			((ie_gera_pos_resc_w = 'S') or ie_acao_p = 'GMR' ))then
			ie_vl_pag_prestador_w      := 'N';
			dados_conta_pos_w.cd_area_procedimento  := null;
			dados_conta_pos_w.cd_especialidade  	:= null;
			dados_conta_pos_w.cd_grupo_proc    	:= null;

			if (nr_seq_discussao_w IS NOT NULL AND nr_seq_discussao_w::text <> '') or (nr_seq_conta_rec_w IS NOT NULL AND nr_seq_conta_rec_w::text <> '') then
				nr_seq_analise_ww  := null;
			end if;
			vl_taxa_int_w    := 0;
			tx_administrativa_w  := 0;
			dados_conta_mat_valor_w.nr_sequencia    := nr_seq_material_w;
			dados_conta_mat_valor_w.nr_seq_conta    := nr_seq_conta_p;
			dados_conta_mat_valor_w.nr_seq_material := nr_seq_cod_material_w;
			dados_conta_mat_valor_w.dt_atendimento  := dt_atendimento_w;

			dados_regra_preco_pos_estab_w  		:= null;

			select  max(nr_sequencia)
			into STRICT  	nr_seq_pos_cabecalho_w
			from  	pls_conta_pos_cabecalho
			where  	nr_seq_conta    = nr_seq_conta_p
			and  	nr_seq_discussao  = nr_seq_discussao_w;

			if (coalesce(nr_seq_pos_cabecalho_w::text, '') = '') then

				if (nr_seq_conta_rec_w IS NOT NULL AND nr_seq_conta_rec_w::text <> '') then
					select  max(nr_sequencia)
					into STRICT  	nr_seq_pos_cabecalho_w
					from  	pls_conta_pos_cabecalho
					where  	nr_seq_conta = nr_seq_conta_p
					and  	nr_seq_conta_rec = nr_seq_conta_rec_w;
				end if;
			end if;

			if (ie_log_w = 'S') then

				if (pls_util_pck.ie_processo_pos_w = 'S') then
					ie_tipo_log_w := 'P';
				end if;

				delete  from pls_log_calculo_mat
				where  	nr_seq_material = nr_seq_material_w
				and    	((ie_tipo_log = ie_tipo_log_w) or (coalesce(ie_tipo_log::text, '') = ''));
			end if;

			if (ie_tipo_conta_w in ('I','C')) then
				-- Obter a taxa de interc?mbio.
				if (nr_seq_congenere_seg_w IS NOT NULL AND nr_seq_congenere_seg_w::text <> '') then
					dados_tx_interc_valor_w  := pls_cta_valorizacao_pck.obter_taxa_intercambio(
															dados_conta_valor_w, null, dados_conta_mat_valor_w,
															dados_fatura_valor_w, dados_beneficiario_valor_w, null, cd_estabelecimento_w);
					tx_intercambio_w := dados_tx_interc_valor_w.pr_taxa;
					nr_seq_regra_tx_interc_w := dados_tx_interc_valor_w.nr_sequencia;
				end if;
			end if;
			/*767280*/

			if (coalesce(tx_intercambio_w,0) = 0) then
				tx_intercambio_w := tx_intercambio_cont_w;
			end if;

			ds_item_convertido_w  	:= 'Item n?o possu? c?digo de convers?o';
			ie_status_faturamento_w := 'U';
			
			-- se o ie_acao_p = CA - A520, ent?o o status do faturamento SEMPRE ser? 'A', feito um if separado para ficar destacado
			if (ie_acao_p in ('CA','CAB')) then
				
				ie_status_faturamento_w    	:= 'A';
			end if;
			nr_seq_regra_conversao_w:= '';
			cd_item_convertido_w  	:= null;

			if (ie_status_w   	= 'M')   or (ie_acao_p 	in ('CA','CAB'))  or
				((ie_status_w   = 'C')  and (ie_origem_valor_pos_p  = 'C')  and (ie_glosa_w    	= 'N')  and (qt_liberada_w  = 0))  then
				qt_liberada_w := qt_material_w;
			end if;

			if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
				select  max(b.cd_material_ops)
				into STRICT  	cd_material_ops_w
				from  	pls_material b,
					pls_conta_mat a
				where  	a.nr_seq_material   	= b.nr_sequencia
				and  	a.nr_sequencia		= nr_seq_material_w;
			end if;

			if (ie_log_w = 'S') then
				ds_observacao_log_w  := 'Calculo p?s-estabelecido: '||ie_calculo_pos_estab_w||' ; Status: '||ie_status_w;
				CALL pls_gravar_log_calculo_mat(  	'S', nr_seq_material_w, cd_estabelecimento_w,
								'Calculo pos estab X Status', ds_observacao_log_w, 'pls_gerar_valor_pos_estab',
								  0, 1, null,
								  null, nr_seq_cod_material_w, nm_usuario_p);
			end if;

			if (ie_status_w    = 'M') and (nr_seq_regra_pct_fat_w IS NOT NULL AND nr_seq_regra_pct_fat_w::text <> '') then
				vl_beneficiario_w    := vl_material_w;
				if (coalesce(vl_beneficiario_w,0) = 0) then
					ie_calcula_preco_benef_w  := 'S';
				else
					ie_calcula_preco_benef_w  := 'N';
				end if;
			elsif (ie_calculo_pos_estab_w = 'C') then
				if (ie_calcula_preco_benef_w = 'N') and (ie_preco_plano_w in ('2', '3')) then
					vl_beneficiario_w  := vl_lib_original_w;
					ie_vl_pag_prestador_w  := 'S';
				end if;
			elsif   ((ie_calculo_pos_estab_w 	= 'R')  or (ie_param_operadora_w 		= 'R')) and
				((ie_apropriacao_copartic_w 	= 'N') or (ie_acao_p != 'RC'))then

				dados_conta_pos_w.nr_seq_segurado  := nr_seq_segurado_w;
				dados_conta_pos_w.dt_referencia    := dt_atendimento_w;
				dados_conta_pos_w.ie_origem_conta  := ie_origem_conta_w;
				dados_conta_pos_w.nr_seq_grupo_rec  := null;
				dados_conta_pos_w.nr_seq_material  := nr_seq_cod_material_w;

				dados_conta_pos_w.cd_procedimento  := null;
				dados_conta_pos_w.ie_origem_proced  := null;
				dados_conta_pos_w.nr_seq_prestador_exec  := nr_seq_prestador_exec_w;
				dados_conta_pos_w.ie_tipo_intercambio  := coalesce(pls_obter_tipo_intercambio(coalesce(nr_seq_ops_congenere_w,nr_seq_congenere_w),cd_estabelecimento_w),'A');
				dados_conta_pos_w.ie_origem_protocolo  := ie_origem_protocolo_w;
				dados_conta_pos_w.ie_tipo_congenere  := coalesce(pls_obter_dados_cooperativa(coalesce(nr_seq_ops_congenere_w,nr_seq_congenere_w),'IT'),'A');
				dados_conta_pos_w.nr_seq_prest_inter := nr_seq_prest_inter_w;
				dados_conta_pos_w.ie_tipo_protocolo  	:= ie_tipo_protocolo_w;

				dados_regra_preco_pos_estab_w := pls_obter_tipo_valor_pos_estab( dados_conta_pos_w, nm_usuario_p, cd_estabelecimento_w, dados_regra_preco_pos_estab_w);

				nr_seq_regra_w    	:= dados_regra_preco_pos_estab_w.nr_sequencia;
				ie_tipo_valor_w    	:= dados_regra_preco_pos_estab_w.ie_tipo_valor;

				-- se a regra que retornou diz que n?o ? para aplicar a taxa, ent?o seta a vari?vel para zero
				if (coalesce(dados_regra_preco_pos_estab_w.ie_nao_gera_tx_inter, 'N') = 'S') then
					tx_intercambio_w := 0;
				end if;
								
				if (ie_tipo_valor_w = '1') then
					ie_calcula_preco_benef_w  := 'S';
				elsif (ie_tipo_valor_w = '2') then
					vl_beneficiario_w    := vl_apresentado_w;
					ie_calcula_preco_benef_w  := 'N';
				elsif (ie_tipo_valor_w = '3') then
					if (coalesce(vl_liberado_w,0) > 0) then
						vl_beneficiario_w  := vl_liberado_w;
					else
						vl_beneficiario_w  := vl_material_w;
					end if;
					ie_vl_pag_prestador_w    := 'S';
					if (ie_tipo_conta_w in ('I','C')) and
						((ie_calculo_pos_estab_w = 'IC') or (tx_intercambio_w  > 0))then
						vl_taxa_int_w    := dividir(coalesce(vl_beneficiario_w,0),100) * coalesce(tx_intercambio_w,0);
						vl_beneficiario_w  := coalesce(vl_beneficiario_w,0) + coalesce(vl_taxa_int_w,0);
					end if;
					ie_calcula_preco_benef_w  := 'N';
				elsif (ie_tipo_valor_w = '4') then
					ie_calcula_preco_benef_w  := 'S';
				elsif (ie_tipo_valor_w = '5') then
					ie_calcula_preco_benef_w  := 'S';
				elsif (ie_tipo_valor_w = '7') then
					vl_beneficiario_w   := vl_apresentado_w;
					ie_calcula_preco_benef_w := 'N';
				elsif (ie_tipo_valor_w = '8') then
					vl_beneficiario_w   := vl_liberado_w - coalesce(vl_lib_taxa_mat_w,0);
					ie_calcula_preco_benef_w := 'N';
					ie_vl_pag_prestador_w   := 'S';
				elsif (ie_tipo_valor_w = '9') then
					ie_calcula_preco_benef_w := 'S';
				end if;
				if (ie_log_w = 'S') then
					ds_observacao_log_w  := 'Tipo valor: '||ie_tipo_valor_w||'; Regra :'||nr_seq_regra_w;
					CALL pls_gravar_log_calculo_mat(  	'S', nr_seq_material_w, cd_estabelecimento_w,
									'Calculo cadastro de regras', ds_observacao_log_w, 'pls_gerar_valor_pos_estab',
									vl_beneficiario_w, 2, null,
									null, nr_seq_cod_material_w, nm_usuario_p);
				end if;
			elsif (ie_calculo_pos_estab_w = 'P') then
				vl_beneficiario_w    := vl_material_w;
				ie_calcula_preco_benef_w   := 'N';
			elsif (ie_calculo_pos_estab_w = 'O') then
				ie_calcula_preco_benef_w  := 'S';
			elsif (ie_calculo_pos_estab_w  = 'IC') then
				ie_calcula_preco_benef_w := 'N';
				SELECT * FROM pls_atualiza_valor_mat_int(  	nr_seq_material_w, ie_log_w, nm_usuario_p, tx_intercambio_w, ie_pos_estab_faturamento_w, ie_geracao_pos_estabelecido_w, ie_preco_interc_congenere_w, nr_seq_pos_estab_interc_w, vl_beneficiario_w, tx_inter_out_w, dados_regra_preco_material_w) INTO STRICT _ora2pg_r;
 nr_seq_pos_estab_interc_w := _ora2pg_r.nr_seq_regra_p; vl_beneficiario_w := _ora2pg_r.vl_beneficiario_p; tx_inter_out_w := _ora2pg_r.tx_inter_out_p; dados_regra_preco_material_w := _ora2pg_r.dados_regra_preco_material_p;

				
				nr_seq_regra_pos_estab_w:= null;
				
				if (nr_seq_congenere_seg_w IS NOT NULL AND nr_seq_congenere_seg_w::text <> '') then
					tx_intercambio_w  	:= tx_inter_out_w;
				end if;

				select  max(vl_beneficiario),
					max(vl_material_ptu)
				into STRICT  	vl_beneficiario_w,
					vl_material_ptu_w
				from  	pls_conta_mat
				where  	nr_sequencia  = nr_seq_material_w
				and  	(vl_beneficiario IS NOT NULL AND vl_beneficiario::text <> '');
				
			end if;

			-- Caso a gera??o seja por apropria??o deve buscar os valores atrav?s da apropria??o gerada
			if (ie_apropriacao_copartic_w = 'S') then
				if (qt_apropriacao_w > 0) then
					select  sum(vl_beneficiario)
					into STRICT  	vl_benef_aprop_w
					from  	pls_conta_mat_aprop
					where  	nr_seq_mat_rec = nr_seq_mat_rec_w
					and  	nr_seq_centro_aprop  in (SELECT  nr_sequencia
									 from  pls_centro_apropriacao
									 where  ie_responsavel_apropriacao = '1');

					if (vl_benef_aprop_w > 0) then
						vl_beneficiario_w 	:= vl_benef_aprop_w;
						ie_vl_pag_prestador_w 	:= 'S';
						ie_calcula_preco_benef_w:= 'N';
					end if;
				end if;
			end if;

			if (cd_material_ops_w IS NOT NULL AND cd_material_ops_w::text <> '') then
				SELECT * FROM pls_obter_mat_conversao(cd_material_ops_w, ie_tipo_despesa_w, nm_usuario_p, 'E', nr_seq_contrato_w, nr_seq_ops_congenere_w, nr_seq_prestador_exec_w, nr_seq_mat_ret_w, cd_item_convertido_w, ds_item_convertido_w, ie_tipo_tabela_conv_w, nr_seq_regra_conv_w, null) INTO STRICT nr_seq_mat_ret_w, cd_item_convertido_w, ds_item_convertido_w, ie_tipo_tabela_conv_w, nr_seq_regra_conv_w;
			end if;

			-- tratar aqui a chamada a atualiza_valor_proc_int

			--Se for faturamento parcial e estiver sendo processado um reembolso, necessitar? calcular valor intercambio
			if ( ie_tipo_faturamento_w = 'P' and ie_tipo_protocolo_w = 'R') then
				
				vl_beneficiario_w := 0;
				vl_material_ptu_w := 0;
													
				SELECT * FROM pls_atualiza_valor_mat_int(  	nr_seq_material_w, ie_log_w, nm_usuario_p, tx_intercambio_w, ie_pos_estab_faturamento_w, ie_geracao_pos_estabelecido_w, ie_preco_interc_congenere_w, nr_seq_pos_estab_interc_w, vl_beneficiario_w, tx_inter_out_w, dados_regra_preco_material_w) INTO STRICT _ora2pg_r;
 nr_seq_pos_estab_interc_w := _ora2pg_r.nr_seq_regra_p; vl_beneficiario_w := _ora2pg_r.vl_beneficiario_p; tx_inter_out_w := _ora2pg_r.tx_inter_out_p; dados_regra_preco_material_w := _ora2pg_r.dados_regra_preco_material_p;
									
									
				select  max(vl_beneficiario),
						max(vl_material_ptu)
				into STRICT  	vl_beneficiario_w,
						vl_material_ptu_w
				from  	pls_conta_mat
				where  	nr_sequencia  = nr_seq_material_w
				and  	(vl_beneficiario IS NOT NULL AND vl_beneficiario::text <> '');
				
			end if;
			
			if (ie_calcula_preco_benef_w = 'S') then
				if (ie_calculo_pos_estab_w  = 'IC') then
					SELECT * FROM pls_atualiza_valor_mat_int(  	nr_seq_material_w, ie_log_w, nm_usuario_p, tx_intercambio_w, ie_pos_estab_faturamento_w, ie_geracao_pos_estabelecido_w, ie_preco_interc_congenere_w, nr_seq_pos_estab_interc_w, vl_beneficiario_w, tx_inter_out_w, dados_regra_preco_material_w) INTO STRICT _ora2pg_r;
 nr_seq_pos_estab_interc_w := _ora2pg_r.nr_seq_regra_p; vl_beneficiario_w := _ora2pg_r.vl_beneficiario_p; tx_inter_out_w := _ora2pg_r.tx_inter_out_p; dados_regra_preco_material_w := _ora2pg_r.dados_regra_preco_material_p;
					nr_seq_regra_pos_estab_w  := null;

					if (nr_seq_congenere_seg_w IS NOT NULL AND nr_seq_congenere_seg_w::text <> '') then
						tx_intercambio_w    := tx_inter_out_w;
					end if;
				else
					dados_regra_preco_material_w := pls_atualiza_valor_mat_co(  	nr_seq_material_w, ie_log_w, ie_pos_estab_faturamento_w, ie_geracao_pos_estabelecido_w, nm_usuario_p, dados_regra_preco_material_w);
				end if;
				
				select  max(vl_beneficiario),
					max(vl_material_ptu)
				into STRICT  	vl_beneficiario_w,
					vl_material_ptu_w
				from  	pls_conta_mat
				where  	nr_sequencia  = nr_seq_material_w
				and  	(vl_beneficiario IS NOT NULL AND vl_beneficiario::text <> '');
				
			end if;
				
			if ( ie_tipo_faturamento_w = 'P' and ie_tipo_protocolo_w = 'R') then
				
				
				--Se o valor calculado sem a tx_intercambio(vl_material_ptu_w) for maior que o valor liberado no reembolso, ent?o zera. Caso contr?rio gera o valor liberado - o calculado
				if (vl_material_ptu_w > vl_lib_original_w) then
					vl_beneficiario_w := 0;
					vl_material_ptu_w := 0;
				else
					vl_material_ptu_w :=  vl_lib_original_w - vl_material_ptu_w;
					vl_beneficiario_w  := vl_material_ptu_w;
				end if;
				
				ie_vl_pag_prestador_w  := 'S';
				vl_taxa_int_w    := dividir((coalesce(vl_beneficiario_w,0) * coalesce(tx_intercambio_w,0)),100);
				vl_beneficiario_w  := coalesce(vl_beneficiario_w,0) + coalesce(vl_taxa_int_w,0);
			
			elsif (ie_tipo_valor_w = '4') and (coalesce(vl_beneficiario_w,0) = 0) and (ie_param_operadora_w = 'R')then
				vl_beneficiario_w  := vl_apresentado_w;
			elsif (ie_tipo_valor_w = '5') and (coalesce(vl_beneficiario_w,0) = 0) and (ie_param_operadora_w = 'R')then
				vl_beneficiario_w  := coalesce(vl_liberado_w,0);
				ie_regra_5_vl_pag_prest_w := 'S';
				ie_vl_pag_prestador_w  := 'S';
				if (ie_tipo_conta_w in ('I','C')) and (ie_calculo_pos_estab_w = 'IC') then

					vl_taxa_int_w    := dividir(coalesce(vl_beneficiario_w,0),100) * coalesce(tx_intercambio_w,0);
					vl_beneficiario_w  := coalesce(vl_beneficiario_w,0) + coalesce(vl_taxa_int_w,0);
				end if;
			elsif (ie_tipo_valor_w = '9') and (ie_param_operadora_w = 'R') then
				--Caso regra de libera??o for valor a ser pago ao prestador desde que menor que regra de pre?o, ent?o calcula com a regra de interc?mbio, pois sen?o, estaria

				--considerando o valor liberado sem taxa contra o valor calculado de p?s com taxa.
				vl_liberado_com_tx_inter_w := coalesce(vl_liberado_w,0) + (coalesce(vl_liberado_w,0) * coalesce(tx_intercambio_w, 0) / 100);
				if (coalesce(vl_liberado_w,0) > 0) then
					if (vl_liberado_com_tx_inter_w < vl_beneficiario_w) or (vl_beneficiario_w = 0) then
						vl_beneficiario_w  	:= vl_liberado_w;
						ie_vl_pag_prestador_w   := 'S';
						ie_calcula_preco_benef_w:= 'N';
					else
						ie_vl_pag_prestador_w    := 'N';
					end if;
				else
					if (vl_material_w < vl_beneficiario_w) or (vl_beneficiario_w = 0) then
						vl_beneficiario_w  := vl_material_w;
						ie_vl_pag_prestador_w    := 'S';
						ie_calcula_preco_benef_w  := 'N';
					else
						ie_vl_pag_prestador_w    := 'N';
					end if;
				end if;
				
			end if;

			if (ie_acao_p  = 'F') then
				select  max(nr_sequencia)
				into STRICT  	nr_seq_pos_estab_w
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_mat  = nr_seq_material_w
				and  	nr_seq_disc_mat    = nr_seq_discussao_mat_w
				and  	((ie_situacao  = 'A') or (coalesce(ie_situacao::text, '') = ''))
				and	ie_status_faturamento	!= 'A'
				and	ie_cobrar_mensalidade	!= 'A'
				and  	nr_seq_conta    = nr_seq_conta_p;
			elsif (ie_acao_p = 'RC') then
				select  max(nr_sequencia)
				into STRICT  	nr_seq_pos_estab_w
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_mat  = nr_seq_material_w
				and  	nr_seq_mat_rec    = nr_seq_mat_rec_w
				and	ie_status_faturamento	!= 'A'
				and	ie_cobrar_mensalidade	!= 'A'
				and  	((ie_situacao  = 'A') or (coalesce(ie_situacao::text, '') = ''))
				and  	nr_seq_conta    = nr_seq_conta_p;
			
			elsif (ie_acao_p in ('CA','CAB')) then
	
				select  max(nr_sequencia)
				into STRICT  	nr_seq_pos_estab_w
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_mat  	= nr_seq_material_w
				and  	nr_seq_conta    	= nr_seq_conta_p
				and  	((ie_situacao  		= 'A') or (coalesce(ie_situacao::text, '') = ''))
				and  	ie_status_faturamento  	= 'A'
				and	ie_cobrar_mensalidade	= 'A'
				and  	coalesce(nr_seq_conta_rec::text, '') = '';

			else
				if (qt_recalc_pos_estab_w = 0) then
					select  max(nr_sequencia)
					into STRICT  	nr_seq_pos_estab_w
					from  	pls_conta_pos_estabelecido
					where  	nr_seq_conta_mat  	= nr_seq_material_w
					and  	((ie_situacao  		= 'A') or (coalesce(ie_situacao::text, '') = ''))
					and  	nr_seq_conta    	= nr_seq_conta_p
					and	ie_status_faturamento	!= 'A'
					and	ie_cobrar_mensalidade	!= 'A'
					and  	coalesce(nr_seq_conta_rec::text, '') = '';
				else
					select  max(nr_sequencia)
					into STRICT  	nr_seq_pos_estab_w
					from  	pls_conta_pos_estabelecido
					where  	nr_seq_conta_mat  	= nr_seq_material_w
					and  	nr_seq_conta    	= nr_seq_conta_p
					and  	((ie_situacao  		= 'A') or (coalesce(ie_situacao::text, '') = ''))
					and  	ie_status_faturamento  	= 'L'
					and	ie_cobrar_mensalidade	!= 'A'
					and  	coalesce(nr_seq_conta_rec::text, '') = '';
				end if;
			end if;

			select  max(nr_seq_regra_pos_estab)
			into STRICT  	nr_seq_regra_pos_estab_w
			from  	pls_conta_mat
			where  	nr_sequencia  = nr_seq_material_w;

			if (ie_calculo_pos_estab_w <> 'IC') then
				nr_seq_pos_estab_interc_w  := null;
			else
				nr_seq_regra_pos_estab_w  := null;
				/* Francisco - 29/08/2013 - OS 637684 -
				Se o benefici?rio for de cong?nere buscar pre?o p?s ao inv?s de interc?mbio */
				if (ie_preco_interc_congenere_w = 'F') and (ie_tipo_segurado_w = 'C') then
					nr_seq_regra_pos_estab_w  	:= nr_seq_pos_estab_interc_w;
					nr_seq_pos_estab_interc_w  	:= null;
				end if;
			end if;

			vl_resultado_w  := 0;

			if (vl_material_w > 0) then
				vl_resultado_w  := (coalesce(vl_beneficiario_w,0) * vl_material_w);
				vl_material_w  := dividir_sem_round(vl_resultado_w,vl_material_w);
			end if;

			if (ie_acao_p  = 'F') then
				select  max(nr_sequencia)
				into STRICT  	nr_seq_pos_estab_w
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_mat  	= nr_seq_material_w
				and  	nr_seq_disc_mat 	= nr_seq_discussao_mat_w
				and	ie_status_faturamento	!= 'A'
				and	ie_cobrar_mensalidade	!= 'A'
				and  	((ie_situacao  		= 'A') or (coalesce(ie_situacao::text, '') = ''))
				and  	nr_seq_conta    	= nr_seq_conta_p;
			elsif (ie_acao_p = 'RC') then
				select  max(nr_sequencia)
				into STRICT  	nr_seq_pos_estab_w
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_mat  	= nr_seq_material_w
				and  	nr_seq_mat_rec  	= nr_seq_mat_rec_w
				and	ie_status_faturamento	!= 'A'
				and	ie_cobrar_mensalidade	!= 'A'
				and  	((ie_situacao  		= 'A') or (coalesce(ie_situacao::text, '') = ''))
				and  	nr_seq_conta    	= nr_seq_conta_p;
			else
				if (qt_recalc_pos_estab_w = 0) then
					select  max(nr_sequencia)
					into STRICT  	nr_seq_pos_estab_w
					from  	pls_conta_pos_estabelecido
					where  	nr_seq_conta_mat  	= nr_seq_material_w
					and	ie_status_faturamento	!= 'A'
					and	ie_cobrar_mensalidade	!= 'A'
					and  	((ie_situacao  		= 'A') or (coalesce(ie_situacao::text, '') = ''))
					and  	nr_seq_conta    	= nr_seq_conta_p
					and	coalesce(nr_seq_disc_mat::text, '') = '';
				else
					select  max(nr_sequencia)
					into STRICT  	nr_seq_pos_estab_w
					from  	pls_conta_pos_estabelecido
					where  	nr_seq_conta_mat  	= nr_seq_material_w
					and  	nr_seq_conta    	= nr_seq_conta_p
					and  	((ie_situacao  		= 'A') or (coalesce(ie_situacao::text, '') = ''))
					and  	ie_status_faturamento  	= 'L'
					and	ie_cobrar_mensalidade	!= 'A'
					and	coalesce(nr_seq_disc_mat::text, '') = '';
				end if;
			end if;

			if (ie_tipo_conta_w in ('I','C')) and
				((coalesce(nr_seq_regra_pct_fat_w::text, '') = '') or
				(ie_calcula_preco_benef_w =  'S' AND ie_calculo_pos_estab_w  = 'IC')) and
				((coalesce(ie_vl_pag_prestador_w,'N') = 'N')or (coalesce(ie_tipo_valor_w,'1') not in ('5','8','9')))then
				tx_inter_gerada_w  := tx_intercambio_w;

				if (vl_taxa_int_w <> 0) then
					vl_taxa_material_w  := vl_taxa_int_w;
				else
					vl_taxa_material_w  := dividir(coalesce(vl_material_ptu_w,0),100) * coalesce(tx_inter_gerada_w,0);
				end if;

				if (coalesce(tx_inter_gerada_w,0) > 0 ) then
					tx_administrativa_w  := tx_inter_gerada_w;
				end if;

				if  	((ie_tipo_valor_w = '5') and (coalesce(nr_seq_pos_estab_interc_w::text, '') = '' or nr_seq_pos_estab_interc_w = 0)) or (ie_tipo_valor_w = '3') then
					select  coalesce(vl_liberado,0),
						coalesce(vl_material,0)
					into STRICT  	vl_materiais_w,
						vl_calculado_w
					from  	pls_conta_mat
					where  	nr_sequencia  = nr_seq_material_w;

					vl_materiais_w  := (coalesce(vl_beneficiario_w,0)-round((vl_taxa_material_w)::numeric,2));

					vl_material_w  := vl_materiais_w;

					update  pls_conta_mat
					set  vl_taxa_material    = vl_taxa_material_w
					where  nr_sequencia      = nr_seq_material_w;
				else
					vl_material_w  := (coalesce(vl_beneficiario_w,0)-round((vl_taxa_material_w)::numeric,2));
					vl_materiais_w  := vl_material_w;
					/* DIOGO - Verificar este tratamento - 767280 */

					if (coalesce(tx_intercambio_cont_w,0) > 0) then
						tx_administracao_w := tx_intercambio_cont_w;
						vl_taxa_material_w := tx_administracao_w * vl_materiais_w;
						vl_beneficiario_w  := vl_taxa_material_w + vl_materiais_w;
					end if;
				end if;
			else
				tx_administrativa_w := coalesce(tx_intercambio_w,0);

				if (ie_tipo_valor_w = '5') and (coalesce(ie_vl_pag_prestador_w,'N') = 'S') then

					if (vl_taxa_int_w > 0) then
						vl_taxa_material_w := vl_taxa_int_w;

						update  pls_conta_mat
						set  	vl_taxa_material  = vl_taxa_material_w
						where  	nr_sequencia      = nr_seq_material_w;
					end if;

					if (tx_administrativa_w = 0) then
						vl_taxa_material_w := 0;
					end if;

					vl_materiais_w 	:= coalesce(vl_beneficiario_w,0) - coalesce(vl_taxa_material_w,0);
					vl_material_w 	:= vl_materiais_w;
				else
					vl_material_w := coalesce(vl_beneficiario_w,0);
					if (ie_calcula_preco_benef_w  = 'N') then
						vl_taxa_material_w  := dividir(coalesce(vl_beneficiario_w,0),100) * coalesce(tx_intercambio_w,0);
						vl_beneficiario_w  := vl_beneficiario_w + vl_taxa_material_w;
					end if;
					vl_materiais_w  := vl_material_w;
				end if;
			end if;

			vl_calculado_fat_w := coalesce(vl_materiais_w,0) + coalesce(vl_taxa_material_w,0);

			if (coalesce(dados_regra_preco_pos_estab_w.vl_retificador,1) != 1) and
				((dados_regra_preco_pos_estab_w.ie_retificador_vl_prestador = 'N') or (ie_vl_pag_prestador_w  = 'S')) then
				
				
				if (ie_tipo_valor_w in (2,3, 9)) then
					vl_material_w    	:= coalesce(vl_material_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
					vl_taxa_material_w  	:= coalesce(vl_taxa_material_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
					vl_calculado_fat_w  	:= (coalesce(vl_materiais_w,0) + coalesce(vl_taxa_material_w,0)) * dados_regra_preco_pos_estab_w.vl_retificador;
					vl_materiais_w    	:= vl_material_w;
					vl_beneficiario_w := coalesce(vl_beneficiario_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
				end if;

				if  ((ie_tipo_valor_w = 5) and (ie_calculo_pos_estab_w in ('R', 'IC')) and
					 ((dados_regra_preco_pos_estab_w.ie_retificador_vl_sem_preco = 'S' AND ie_regra_5_vl_pag_prest_w = 'S') or (dados_regra_preco_pos_estab_w.ie_retificador_vl_sem_preco = 'N'))) then

					vl_material_w    	:= coalesce(vl_material_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
					vl_taxa_material_w  	:= coalesce(vl_taxa_material_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
					vl_calculado_fat_w  	:= (coalesce(vl_materiais_w,0) + coalesce(vl_taxa_material_w,0)) * dados_regra_preco_pos_estab_w.vl_retificador;
					vl_materiais_w    	:= vl_material_w;
					vl_beneficiario_w := coalesce(vl_beneficiario_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
				end if;
				
				if (ie_tipo_valor_w not in (2,3,5)) then
					vl_material_w    	:= coalesce(vl_material_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
					vl_taxa_material_w  	:= coalesce(vl_taxa_material_w,0) * dados_regra_preco_pos_estab_w.vl_retificador;
					vl_calculado_fat_w  	:= (coalesce(vl_materiais_w,0) + coalesce(vl_taxa_material_w,0)) * dados_regra_preco_pos_estab_w.vl_retificador;
					vl_materiais_w    	:= vl_material_w;
				end if;
			end if;

			vl_materiais_calc_w := coalesce(vl_material_w,0);

			if (qt_liberada_w     != qt_material_w) and (ie_vl_pag_prestador_w  = 'N') then
				vl_material_w     	:= dividir_sem_round(coalesce(vl_materiais_w,0) ,qt_material_w ) * qt_liberada_w;
				vl_lib_taxa_material_w  := dividir_sem_round(coalesce(vl_taxa_material_w,0) ,qt_material_w ) * qt_liberada_w;
				vl_beneficiario_w  	:= coalesce(vl_material_w,0) + coalesce(vl_lib_taxa_material_w,0);
			elsif (qt_liberada_w     = qt_material_w) and (ie_vl_pag_prestador_w   = 'N')then
				vl_material_w     	:= dividir_sem_round(coalesce(vl_materiais_w,0) , qt_material_w ) * qt_liberada_w;
				vl_lib_taxa_material_w  := dividir_sem_round(coalesce(vl_taxa_material_w,0) ,qt_material_w ) * qt_liberada_w;
				vl_beneficiario_w  	:= coalesce(vl_material_w,0) + coalesce(vl_lib_taxa_material_w,0);
			elsif (qt_liberada_w    > 0) then
				vl_material_w     	:= coalesce(vl_materiais_w,0);
				vl_lib_taxa_material_w  := coalesce(vl_taxa_material_w,0);
				vl_beneficiario_w  	:= vl_material_w + vl_lib_taxa_material_w;
			else
				vl_material_w     	:= dividir_sem_round(coalesce(vl_materiais_w,0) , qt_material_w ) * qt_liberada_w;
				vl_lib_taxa_material_w  := dividir_sem_round(coalesce(vl_taxa_material_w,0) ,qt_material_w ) * qt_liberada_w;
				vl_beneficiario_w  	:= coalesce(vl_material_w,0) + coalesce(vl_lib_taxa_material_w,0);
			end if;

			if (ie_status_w in ('S', 'L','M')) and (coalesce(vl_beneficiario_w,0) > 0) then
				ie_status_faturamento_w  := 'P';
			elsif (ie_status_w in ('S', 'L','M')) then
				ie_status_faturamento_w  := 'N';
			end if;
			
			-- se o ie_acao_p = CA - A520, ent?o o status do faturamento SEMPRE ser? 'A', feito um if separado para ficar destacado
			if (ie_acao_p in ('CA','CAB')) then
				
				ie_status_faturamento_w    	:= 'A';
			end if;

			vl_liberado_material_fat_w  := vl_material_w;
			vl_glosa_material_fat_w    := 0;
			vl_glosa_taxa_material_w  := 0;
			
			if (nr_seq_disc_mat_w IS NOT NULL AND nr_seq_disc_mat_w::text <> '') and (vl_material_w < vl_materiais_calc_w) then
			-- situacoes de glosa parcial, onde o vl_material_w esta com o valor liberado e o materiais_calc esta com o valor calculado total. Nesses casos e preciso atualizar o valor calculado para que seja igual o liberado, pois senao a rotina

			--de liberacao automatica atualiza o valor do pos com o calculado
			vl_materiais_calc_w := vl_material_w;
			vl_taxa_material_w :=	vl_lib_taxa_material_w;
			end if;
			
			if (ie_log_w = 'S') then
				ds_observacao_log_w  := 'Vl calculado: '||vl_calculado_fat_w||'; vl liberado: '||vl_beneficiario_w||' ; Qt liberada : '||qt_liberada_w;
				CALL pls_gravar_log_calculo_mat(  	'S', nr_seq_material_w, cd_estabelecimento_w,
								'Vl calculado X vl liberdo', ds_observacao_log_w, 'pls_gerar_valor_pos_estab',
								vl_beneficiario_w, 8, null,
								null, nr_seq_cod_material_w, nm_usuario_p);
			end if;
			if (ie_tipo_valor_w = '9') then
				if (ie_tipo_conta_w in ('I', 'C')) and (ie_calculo_pos_estab_w = 'IC') then
					tx_administrativa_w  := tx_intercambio_w;
					vl_taxa_material_w  := dividir((coalesce(vl_material_w,0) * tx_administrativa_w),100);
				end if;
			end if;

			if (vl_calculado_fat_w IS NOT NULL AND vl_calculado_fat_w::text <> '') then
				vl_provisao_w := vl_calculado_fat_w;
			end if;

			-- Realizado o tratamento para caso tenha taxa de interc?mbio,

			-- tenha valor de benefici?rio, mas n?o tenha gerado valor de taxa de interc?mbio

			-- calcular o valor da taxa novamnete e aplicar no valor do benefici?rio
			if (coalesce(vl_taxa_material_w,0) = 0) and (coalesce(tx_administrativa_w,0) > 0) and (coalesce(vl_materiais_calc_w,0) > 0) then
				vl_taxa_material_w := dividir(vl_materiais_calc_w * tx_administrativa_w, 100);
			end if;

			if (coalesce(vl_taxa_material_w,0) > 0) and (coalesce(tx_administrativa_w,0) = 0) then
				vl_taxa_material_w 	:= 0;
				vl_lib_taxa_material_w 	:= 0;
			end if;

			vl_beneficiario_w := coalesce(vl_material_w,0) + coalesce(vl_lib_taxa_material_w,0);

			nr_seq_regra_un_minima_w := pls_processar_regra_un_min_mat(nr_seq_contrato_w, nr_seq_intercambio_w, nr_seq_ops_congenere_w, nr_seq_grupo_intercambio_w, dt_atendimento_w,nr_seq_cod_material_w);
			cd_unidade_medida_w := null;
			if (nr_seq_regra_un_minima_w IS NOT NULL AND nr_seq_regra_un_minima_w::text <> '') then
				select 	coalesce(max(c.cd_simpro),0)
				into STRICT	cd_simpro_w
				from	pls_material c,
					simpro_cadastro b
				where	b.cd_simpro		= c.cd_simpro
				and	c.nr_sequencia		= nr_seq_cod_material_w
				and	c.cd_estabelecimento	= cd_estabelecimento_w;
					
				if (cd_simpro_w IS NOT NULL AND cd_simpro_w::text <> '') then			
					select	max(dt_vigencia)
					into STRICT	dt_vigencia_w
					from	simpro_preco
					where	cd_simpro	= cd_simpro_w
					and	dt_vigencia	<= dt_atendimento_w;
					if (dt_vigencia_w IS NOT NULL AND dt_vigencia_w::text <> '') then										
						select	max(qt_embalagem),
							max(ie_tipo_fracao)
						into STRICT	qt_embalagem_w,
							ie_tipo_fracao_mat_w
						from	simpro_preco	a
						where	a.cd_simpro	= cd_simpro_w
						and	a.dt_vigencia	= dt_vigencia_w
						and	a.nr_sequencia = (SELECT max(b.nr_sequencia)
									from	simpro_preco	b
									where	b.cd_simpro	= cd_simpro_w
									and	b.dt_vigencia	= dt_vigencia_w);
											
						if (ie_tipo_fracao_mat_w IS NOT NULL AND ie_tipo_fracao_mat_w::text <> '') then
						
							select 	max(cd_unidade_medida)
							into STRICT	cd_unidade_medida_w
							from	unidade_medida
							where	cd_unidade_ptu = ie_tipo_fracao_mat_w;
						end if;
																						
						if (qt_embalagem_w > 0 and (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '')) then
						
							select 	max(cd_unidade_medida)
							into STRICT	cd_unidade_medida_conta_mat_w
							from	pls_material
							where 	nr_sequencia = nr_seq_cod_material_w;
						
							if (cd_unidade_medida_conta_mat_w <> cd_unidade_medida_w) then
								qt_liberada_w  := qt_liberada_w * qt_embalagem_w;
									if (ie_log_w = 'S') then
										ds_observacao_log_w  := 'Vl calculado: '||vl_calculado_fat_w||'; vl liberado: '||vl_beneficiario_w||' ; Qt liberada : '||qt_liberada_w||
													' Regra unidade m?nima de fracionamento: '||nr_seq_regra_un_minima_w||' qt_embalagem_simpro : '||qt_embalagem_w;
										CALL pls_gravar_log_calculo_mat('S', nr_seq_material_w, cd_estabelecimento_w,
																	'Regra unidade m?nima ', ds_observacao_log_w, 'pls_gerar_valor_pos_estab',
																	vl_beneficiario_w, 1, null,null, nr_seq_cod_material_w, nm_usuario_p);
									end if;
							end if;
						else
							cd_unidade_medida_w	:= null;
						end if;
					
					end if;
				
				end if;
			
			end if;
		
			if (coalesce(nr_seq_pos_estab_w,0) > 0 ) then
				begin
				
				If (ie_acao_p <> 'P') Then
					update  pls_conta_pos_estabelecido
					set  	vl_beneficiario     	= CASE WHEN ie_status_faturamento='N' THEN 0 WHEN ie_status_faturamento='C' THEN 0  ELSE coalesce(vl_beneficiario_w,0) END ,
						nr_seq_pos_estab_interc = nr_seq_pos_estab_interc_w,
						nr_seq_regra_pos_estab  = nr_seq_regra_pos_estab_w,
						vl_provisao      	= coalesce(vl_provisao_w,coalesce(vl_beneficiario_w,0)),
						vl_materiais      	= coalesce(vl_material_w,0),
						vl_materiais_calc    	= vl_materiais_calc_w,
						ds_item_convertido    	= ds_item_convertido_w,
						vl_liberado_material_fat= CASE WHEN ie_status_faturamento='N' THEN 0  ELSE vl_liberado_material_fat_w END ,
						vl_glosa_material_fat   = vl_glosa_material_fat_w,
						vl_calculado      	= coalesce(vl_calculado_fat_w,0),
						vl_administracao    	= coalesce(vl_taxa_material_w,0),
						dt_atualizacao      	= clock_timestamp(),
						nm_usuario      	= nm_usuario_p,
						nr_seq_material      	= nr_seq_cod_material_w,
						tx_administracao    	= tx_administrativa_w,
						qt_item        		= qt_liberada_w,
						vl_glosa_taxa_co        = 0,
						vl_glosa_taxa_material  = vl_glosa_taxa_material_w,
						vl_glosa_taxa_servico   = 0,
						vl_lib_taxa_co         	= 0,
						vl_lib_taxa_material    = vl_lib_taxa_material_w,
						vl_lib_taxa_servico     = 0,
						vl_taxa_co       	= 0,
						vl_taxa_material    	= vl_taxa_material_w,
						vl_taxa_servico     	= 0,
						ie_status_faturamento   = CASE WHEN vl_beneficiario=0 THEN 'N'  ELSE ie_status_faturamento END ,
						vl_tabela_preco      	= dados_regra_preco_material_w.vl_material_tabela,
						vl_cotacao_moeda    	= dados_regra_preco_material_w.vl_ch_material,
						cd_moeda_calculo    	= dados_regra_preco_material_w.cd_moeda_calculo,
						ie_situacao      	= 'A',
						ie_vl_pag_prestador    	= ie_vl_pag_prestador_w,
						nr_seq_regra_tp_pos    	= nr_seq_regra_w,
						ie_tipo_liberacao    	= 'S',
						cd_unidade_medida	= cd_unidade_medida_w,
						nr_seq_regra_taxa_int	=	nr_seq_regra_tx_interc_w
					where  	nr_sequencia      	= nr_seq_pos_estab_w
					and	coalesce(nr_seq_conta_pos_orig::text, '') = ''; -- nao pode alterar pos de estorno
				end if;
				
				end;
			else
				begin

				cd_item_conver_xml_w  := null;
				if (qt_registros_mat_xml_w > 0) then
					SELECT * FROM pls_convert_mat_guia_xml_mens(nr_seq_cod_material_w, nr_seq_segurado_w, ie_tipo_guia_w, cd_item_conver_xml_w, nr_seq_regra_mat_conver_w) INTO STRICT cd_item_conver_xml_w, nr_seq_regra_mat_conver_w;
					if (cd_item_conver_xml_w  = nr_seq_cod_material_w) then
						cd_item_conver_xml_w  := null;
					end if;
				end if;

				begin
					select  CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'PF'  ELSE 'PJ' END
					into STRICT  ie_tipo_prestador_atend_w
					from  pls_prestador
					where  nr_sequencia  = dados_conta_pos_w.nr_seq_prestador_prot;
				exception
				when others then
					ie_tipo_prestador_atend_w  := null;
				end;

				begin
					select  CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'PF'  ELSE 'PJ' END
					into STRICT  	ie_tipo_prestador_exec_w
					from  	pls_prestador
					where  	nr_sequencia  = nr_seq_prestador_exec_w;
				exception
				when others then
					ie_tipo_prestador_exec_w  := null;
				end;

				If (ie_acao_p <> 'P') Then
					select  nextval('pls_conta_pos_estabelecido_seq')
					into STRICT  	nr_seq_pos_estab_w
					;

					insert into pls_conta_pos_estabelecido(nr_sequencia, nr_seq_conta, vl_beneficiario,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_seq_conta_proc, nr_seq_conta_mat,
						ie_calcula_preco_benef, ie_preco_plano, nr_seq_regra_pos_estab,
						ie_cobrar_mensalidade, nr_seq_analise, vl_provisao,
						ie_status_faturamento,nr_seq_pos_estab_interc, qt_item,
						cd_item_convertido, ds_item_convertido,nr_seq_cooperativa,
						tx_administracao, vl_administracao, qt_original,
						vl_calculado, ie_origem_valor_pos, vl_materiais,
						vl_materiais_calc, vl_liberado_material_fat, vl_glosa_material_fat,
						nr_seq_conv_mat,
						nr_seq_material,dt_item,dt_inicio_item,dt_fim_item,
						cd_item_convertido_xml, nr_seq_disc_mat, nr_seq_cabecalho,
						vl_glosa_taxa_co, vl_glosa_taxa_material, vl_glosa_taxa_servico,
						vl_lib_taxa_co,  vl_lib_taxa_material, vl_lib_taxa_servico,
						vl_taxa_co, vl_taxa_material, vl_taxa_servico,
						vl_tabela_preco, vl_cotacao_moeda, cd_moeda_calculo,
						ie_situacao, nr_seq_mat_rec, nr_seq_conta_rec,
						ie_tipo_guia, ie_tipo_protocolo, nr_seq_segurado, ie_tipo_segurado,
						dt_mes_competencia, nr_seq_protocolo, nr_seq_prestador_atend,
						nr_seq_prestador_exec, ie_tipo_prestador_atend, ie_tipo_prestador_exec,
						ie_vl_pag_prestador, det_reg_anvisa_opme, nr_seq_regra_tp_pos,
						ie_tipo_liberacao, cd_unidade_medida, nr_seq_regra_taxa_int)
					values (nr_seq_pos_estab_w, nr_seq_conta_p, coalesce(vl_beneficiario_w,0),
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, null, nr_seq_material_w,
						ie_calcula_preco_benef_w, ie_preco_plano_w, nr_seq_regra_pos_estab_w,
						-- tratamento de seguran?a, para os casos de contas de aviso, gerar SEMPRE com ie_cobrar_mensalidade_w = 'A'
						CASE WHEN ie_acao_p='CA' THEN  'A' WHEN ie_acao_p='CAB' THEN  'A'  ELSE ie_cobrar_mensalidade_w END , nr_seq_analise_ww, coalesce(vl_provisao_w,vl_beneficiario_w),
						-- tratamento de seguran?a, para os casos de contas de aviso, gerar SEMPRE com ie_status_faturamento_w = 'A'
						CASE WHEN ie_acao_p='CA' THEN  'A' WHEN ie_acao_p='CAB' THEN  'A'  ELSE ie_status_faturamento_w END , nr_seq_pos_estab_interc_w, qt_liberada_w,
						cd_item_convertido_w, ds_item_convertido_w, nr_seq_congenere_w,
						tx_administrativa_w, vl_taxa_material_w, qt_material_w,
						coalesce(vl_calculado_fat_w,0),ie_origem_valor_pos_p, vl_material_w,
						vl_materiais_calc_w, vl_liberado_material_fat_w, vl_glosa_material_fat_w,
						nr_seq_regra_conv_w,
						nr_seq_cod_material_w,dt_atendimento_w,dt_inicio_item_w,dt_fim_item_w,
						cd_item_conver_xml_w, nr_seq_discussao_mat_w, nr_seq_pos_cabecalho_w,
						0, vl_glosa_taxa_material_w, 0,
						0,  vl_lib_taxa_material_w, 0,
						0, vl_taxa_material_w, 0,
						dados_regra_preco_material_w.vl_material_tabela, dados_regra_preco_material_w.vl_ch_material, dados_regra_preco_material_w.cd_moeda_calculo,
						'A', nr_seq_mat_rec_w, nr_seq_conta_rec_w,
						ie_tipo_guia_w, ie_tipo_protocolo_w, nr_seq_segurado_w, ie_tipo_segurado_w,
						dt_mes_competencia_w, nr_seq_protocolo_w, dados_conta_pos_w.nr_seq_prestador_prot,
						nr_seq_prestador_exec_w, ie_tipo_prestador_atend_w, ie_tipo_prestador_exec_w,
						ie_vl_pag_prestador_w, det_reg_anvisa_w, nr_seq_regra_w,
						'S', cd_unidade_medida_w, nr_seq_regra_tx_interc_w);
				else
					select  count(1)
					into STRICT  	qt_reg_prev_w
					from   	pls_conta_Pos_estab_prev
					where   nr_seq_conta_mat = nr_seq_material_w;

					if (qt_reg_prev_w = 0) then
						
					if ( coalesce(vl_beneficiario_w,0) != 0) then
						select  nextval('pls_conta_pos_estab_prev_seq')
						into STRICT  nr_seq_pos_estab_w
						;
				
						insert into pls_conta_pos_estab_prev(nr_sequencia, nr_seq_conta, vl_beneficiario,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_seq_conta_proc, nr_seq_conta_mat,
						ie_calcula_preco_benef, ie_preco_plano, nr_seq_regra_pos_estab,
						ie_cobrar_mensalidade, nr_seq_analise, vl_provisao,
						ie_status_faturamento,nr_seq_pos_estab_interc, qt_item,
						cd_item_convertido, ds_item_convertido,nr_seq_cooperativa,
						tx_administracao, vl_administracao, qt_original,
						vl_calculado, ie_origem_valor_pos, vl_materiais,
						vl_materiais_calc, vl_liberado_material_fat, vl_glosa_material_fat,
						nr_seq_conv_mat,
						nr_seq_material,dt_item,dt_inicio_item,dt_fim_item,
						cd_item_convertido_xml, nr_seq_disc_mat, nr_seq_cabecalho,
						vl_glosa_taxa_co, vl_glosa_taxa_material, vl_glosa_taxa_servico,
						vl_lib_taxa_co,  vl_lib_taxa_material, vl_lib_taxa_servico,
						vl_taxa_co, vl_taxa_material, vl_taxa_servico,
						vl_tabela_preco, vl_cotacao_moeda, cd_moeda_calculo,
						ie_situacao, nr_seq_mat_rec, nr_seq_conta_rec,
						ie_tipo_guia, ie_tipo_protocolo, nr_seq_segurado, ie_tipo_segurado,
						dt_mes_competencia, nr_seq_protocolo, nr_seq_prestador_atend,
						nr_seq_prestador_exec, ie_tipo_prestador_atend, ie_tipo_prestador_exec,
						ie_vl_pag_prestador, det_reg_anvisa_opme, nr_seq_regra_tp_pos,
						ie_tipo_liberacao, cd_unidade_medida)
						values (nr_seq_pos_estab_w, nr_seq_conta_p, coalesce(vl_beneficiario_w,0),
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, null, nr_seq_material_w,
						ie_calcula_preco_benef_w, ie_preco_plano_w, nr_seq_regra_pos_estab_w,
						-- tratamento de seguran?a, para os casos de contas de aviso, gerar SEMPRE com ie_cobrar_mensalidade_w = 'A'
						CASE WHEN ie_acao_p='CA' THEN  'A' WHEN ie_acao_p='CAB' THEN  'A'  ELSE ie_cobrar_mensalidade_w END , nr_seq_analise_ww, coalesce(vl_provisao_w,vl_beneficiario_w),
						-- tratamento de seguran?a, para os casos de contas de aviso, gerar SEMPRE com ie_status_faturamento_w = 'A'
						CASE WHEN ie_acao_p='CA' THEN  'A' WHEN ie_acao_p='CAB' THEN  'A'  ELSE ie_status_faturamento_w END , nr_seq_pos_estab_interc_w, qt_liberada_w,
						cd_item_convertido_w, ds_item_convertido_w, nr_seq_congenere_w,
						tx_administrativa_w, vl_taxa_material_w, qt_material_w,
						coalesce(vl_calculado_fat_w,0),ie_origem_valor_pos_p, vl_material_w,
						vl_materiais_calc_w, vl_liberado_material_fat_w, vl_glosa_material_fat_w,
						nr_seq_regra_conv_w,
						nr_seq_cod_material_w,dt_atendimento_w,dt_inicio_item_w,dt_fim_item_w,
						cd_item_conver_xml_w, nr_seq_discussao_mat_w, nr_seq_pos_cabecalho_w,
						0, vl_glosa_taxa_material_w, 0,
						0,  vl_lib_taxa_material_w, 0,
						0, vl_taxa_material_w, 0,
						dados_regra_preco_material_w.vl_material_tabela, dados_regra_preco_material_w.vl_ch_material, dados_regra_preco_material_w.cd_moeda_calculo,
						'A', nr_seq_mat_rec_w, nr_seq_conta_rec_w,
						ie_tipo_guia_w, ie_tipo_protocolo_w, nr_seq_segurado_w, ie_tipo_segurado_w,
						dt_mes_competencia_w, nr_seq_protocolo_w, dados_conta_pos_w.nr_seq_prestador_prot,
						nr_seq_prestador_exec_w, ie_tipo_prestador_atend_w, ie_tipo_prestador_exec_w,
						ie_vl_pag_prestador_w, det_reg_anvisa_w, nr_seq_regra_w,
						'S', cd_unidade_medida_w);
						else

							insert into plsprco_cta( 	nr_sequencia, dt_atualizacao, nm_usuario,
												dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela,
												ds_log, ds_log_call, ds_funcao_ativa, 
												ie_aplicacao_tasy, nm_maquina, nr_seq_conta_mat, ie_opcao )
									values ( 	nextval('plsprco_cta_seq'), clock_timestamp(), nm_usuario_p,
												clock_timestamp(), nm_usuario_p, 'PLS_CONTA_POS_ESTAB_PREV', 
												'Nao gerou previa por valor zerado mat = '||nr_seq_cod_material_w, 
												'PLS_GERAR_VALOR_POS_ESTAB', obter_funcao_ativa, 
												'S', '' , nr_seq_material_w, '0');												
		
						end if;
					end if;
				end if;
				
				end;
			end if;
			
			if (ie_tipo_protocolo_w = 'R' and (nr_seq_mot_reembolso_w IS NOT NULL AND nr_seq_mot_reembolso_w::text <> '')) then							
			
				select max(ie_desconta_copartic_pos)
				into STRICT ie_desc_copart_pos_w
				from pls_motivo_reembolso
				where nr_sequencia = nr_seq_mot_reembolso_w;
			
				if (ie_desc_copart_pos_w = 'S') then

					vl_liquido_w := vl_liberado_w - coalesce(vl_participacao_w,0);
				
					if (vl_liberado_w <> vl_liquido_w) then
					
					update 	pls_conta_pos_estabelecido
					set	vl_beneficiario = vl_liquido_w + vl_taxa_int_w, 
					vl_materiais_calc = vl_liquido_w,					
					vl_taxa_material = vl_taxa_int_w
					where	nr_sequencia = nr_seq_pos_estab_w;

					end if;		
					
				end if;
			end if;
			
			if (ie_acao_p <> 'RC') then
				select  sum(qt_item)
				into STRICT  	qt_lib_total_w
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_mat  = nr_seq_material_w
				and  	vl_beneficiario    > 0
				and  	((ie_situacao  = 'A') or (coalesce(ie_situacao::text, '') = ''))
				and  	ie_status_faturamento  not in ('N', 'A')
				and	ie_cobrar_mensalidade	!= 'A'
				and     ie_origem_valor_pos     != 'RC'
				and 	coalesce(cd_unidade_medida_w::text, '') = ''; --Adicionada essa restri??o pois se tiver cd_unidade medida, significa que teve regra de fracionamento de item, ent?o poder?
				--ter uma quantidade superior ? quantidade no pagamento
				if (qt_lib_total_w > qt_material_w) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(338666, 'NR_SEQ_MATERIAL='||nr_seq_material_w);
				end if;

				update  pls_conta_mat
				set  	vl_beneficiario    = coalesce(vl_beneficiario_w,0)
				where  	nr_sequencia    = nr_seq_material_w;
			else
				select  coalesce(sum(vl_beneficiario),0)
				into STRICT  	vl_beneficiario_ww
				from  	pls_conta_pos_estabelecido
				where  	nr_seq_conta_mat  = nr_seq_material_w
				and  	vl_beneficiario    > 0
				and  	((ie_situacao  = 'A') or (coalesce(ie_situacao::text, '') = ''))
				and  	ie_status_faturamento  not in ('N', 'A')
				and	ie_cobrar_mensalidade	!= 'A';

				update  pls_conta_mat
				set  	vl_beneficiario    = vl_beneficiario_ww + coalesce(vl_beneficiario_w,0)
				where  	nr_sequencia    = nr_seq_material_w;
			end if;

			--atualizar descri??o do item gen?rico
			if (ie_acao_p not in ('F', 'RC')) and (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then

				ds_altera_item_pos_w := 'X';

				select  coalesce(max(ds_item_ptu), 'X')
				into STRICT  	ds_altera_item_pos_w
				from  	pls_conta_mat_regra
				where  	nr_sequencia = nr_seq_material_w
				and  	(ds_item_ptu IS NOT NULL AND ds_item_ptu::text <> '');

				if (ds_altera_item_pos_w <> 'X') then
					update  pls_conta_pos_estabelecido
					set  	ds_item_ptu   = ds_altera_item_pos_w,
						nm_usuario  = nm_usuario_p,
						dt_atualizacao  = clock_timestamp()
					where  	nr_sequencia = nr_seq_pos_estab_w;
				end if;
			end if;
			commit;
			<<final2>>
			null;
		end if;
		
		--Se for previa de pos, volta com valor antes de chamada para atualiza_valor_mat_int
		if (ie_acao_p = 'P') then
			update 	pls_conta_mat set 		
				vl_material_ptu = vl_material_ptu_old_w,
				tx_intercambio = tx_intercambio_old_w,
				vl_taxa_material = vl_taxa_material_old_w
			where 	nr_sequencia = nr_seq_material_w;
		end if;
		
	end;
	end loop;
	close C02;

	delete  FROM pls_conta_pos_estabelecido  a
	where  	a.nr_seq_conta  = nr_seq_conta_p
	and  	((not exists (	SELECT  1
				from  	pls_conta_proc  p
				where  	p.nr_sequencia   = a.nr_seq_conta_proc)) and (not exists (	select  1
				from  	pls_conta_mat  m
				where  	m.nr_sequencia   = a.nr_seq_conta_mat)));
	--N?o ? para commit em procedures intermediarias

	--commit;
	end if;
commit;

-- Lepinski - OS 380254
CALL pls_gerar_valor_pos_estab_sca(  nr_seq_conta_p,
				ie_pos_estab_faturamento_w,
				ie_geracao_pos_estabelecido_w,
				nm_usuario_p,
				ie_origem_valor_pos_p);

if ( ie_acao_p != 'P') then				
	CALL pls_gerar_taxa_adm_pos_estab(nr_seq_conta_p, nr_seq_contrato_w, nr_seq_intercambio_w, nr_seq_plano_w, dt_emissao_w, nr_seq_congenere_seg_w, nm_usuario_p);
end if;

if ( ie_acao_w != 'P')	 then
	select  count(1)
	into STRICT  	qt_registro_w
	from  	pls_conta_pos_estabelecido  b,
		pls_conta_mat      	a
	where  	b.nr_seq_conta   	= nr_seq_conta_p
	and  	b.nr_seq_conta_mat  	= a.nr_sequencia
	and  	a.ie_tipo_despesa    	= '7'
	and  	ie_status_faturamento   in ('D','L','P','U');
else
	select  count(1)
	into STRICT  	qt_registro_w
	from  	pls_conta_pos_estab_prev  b,
		pls_conta_mat      	a
	where  	b.nr_seq_conta   	= nr_seq_conta_p
	and  	b.nr_seq_conta_mat  	= a.nr_sequencia
	and  	a.ie_tipo_despesa    	= '7'
	and  	ie_status_faturamento   in ('D','L','P','U');
end if;
	
--Apenas chama a procedure abaixo caso houver OPM na conta

--Se nao encontrou opm na conta, ainda verifica se tem pacote fechado com OPM dentro dele
if (qt_registro_w = 0 and ie_lanc_opm_pac_fechado_w = 'S') then

	if ( ie_acao_w != 'P')	 then
		select  count(1)
		into STRICT  	qt_registro_w
		from  	pls_conta_pos_estabelecido  b,
				pls_conta_proc      	a
		where  	b.nr_seq_conta   	= nr_seq_conta_p
		and  	b.nr_seq_conta_proc  	= a.nr_sequencia
		and  	a.ie_tipo_despesa    	= '4'
		and  	ie_status_faturamento   in ('D','L','P','U')
		and exists (
			SELECT 	1
			from   	pls_pacote_material d,
					pls_pacote_tipo_acomodacao c
			where 	d.nr_seq_composicao = c.nr_seq_composicao
			and 	c.nr_sequencia = a.nr_seq_regra_pct_fat
			and 	c.ie_abrir_itens_intercambio = 'S'
			and 	d.ie_tipo_despesa = 7);
	else
	
		select  count(1)
		into STRICT  	qt_registro_w
		from  	pls_conta_pos_estab_prev  b,
				pls_conta_proc      	a
		where  	b.nr_seq_conta   	= nr_seq_conta_p
		and  	b.nr_seq_conta_proc  	= a.nr_sequencia
		and  	a.ie_tipo_despesa    	= '4'
		and  	ie_status_faturamento   in ('D','L','P','U')
		and exists (
			SELECT 	1
			from   	pls_pacote_material d,
					pls_pacote_tipo_acomodacao c
			where 	d.nr_seq_composicao = c.nr_seq_composicao
			and 	c.nr_sequencia = a.nr_seq_regra_pct_fat
			and 	c.ie_abrir_itens_intercambio = 'S'
			and 	d.ie_tipo_despesa = 7);

	end if;


end if;


if (qt_registro_w > 0) then
	-- update apenas pra chamar a trigger pls_conta_atual e atualizar o campo dt_atendimento_referencia
	update  pls_conta
	set  	dt_atualizacao  = dt_atualizacao
	where  	nr_sequencia  = nr_seq_conta_p;

	-- tratamento de seguran?a, para os casos de contas de aviso, gerar SEMPRE com ie_cobrar_mensalidade_w = 'A'
	CALL pls_lancar_tx_proc_opm_fat(nr_seq_conta_p,nr_seq_analise_ww,nr_seq_congenere_w,	
		case ie_acao_p when 'CA' then 'A' when 'CAB' then 'A' else ie_cobrar_mensalidade_w end,
		ie_acao_w,ie_preco_plano_w,nm_usuario_p, ie_lanc_opm_pac_fechado_w);
end if;

end if;

select   count(1)
into STRICT  	qt_registro_w
from  	pls_conta_pos_estabelecido
where  	nr_seq_conta  = nr_seq_conta_p;

if (qt_registro_w = 0) then
	delete	FROM pls_diagnos_nasc_viv_pos
	where	nr_seq_conta = nr_seq_conta_p;
	
	delete	FROM pls_diag_conta_obito_pos
	where	nr_seq_conta = nr_seq_conta_p;
	
	delete	FROM pls_diagnostico_conta_pos
	where	nr_seq_conta = nr_seq_conta_p;
	
	delete  FROM pls_conta_pos_cabecalho
	where  	nr_seq_conta  = nr_seq_conta_p;
elsif (ie_tipo_protocolo_w  = 'R') then
	update  pls_conta
	set  	ie_status_fat  = 'L'
	where  	nr_sequencia  = nr_seq_conta_p;

	update  pls_conta_pos_estabelecido
	set  	ie_status_faturamento  = 'L'
	where  	vl_beneficiario > 0
	and  	nr_seq_conta  = nr_seq_conta_p
	and	ie_status_faturamento	!= 'A'
	and	ie_cobrar_mensalidade	!= 'A';
end if;

select  coalesce(sum(vl_beneficiario),0)
into STRICT  	vl_proc_beneciciario_w
from  	pls_conta_proc
where  	nr_seq_conta  = nr_seq_conta_p;

select  coalesce(sum(vl_beneficiario),0)
into STRICT  	vl_mat_beneciciario_w
from  	pls_conta_mat
where  	nr_seq_conta  = nr_seq_conta_p;

vl_total_beneciciario_w  := vl_proc_beneciciario_w + vl_mat_beneciciario_w;

update  pls_conta
set  	vl_total_beneficiario  	= vl_total_beneciciario_w
where  	nr_sequencia    	= nr_seq_conta_p;

vl_total_beneciciario_w  := 0;

select  sum(vl_total_beneficiario)
into STRICT  	vl_total_beneciciario_w
from  	pls_conta
where  	nr_seq_protocolo  = nr_seq_protocolo_w;

update  pls_protocolo_conta
set  	vl_total_beneficiario  	= vl_total_beneciciario_w
where  	nr_sequencia    	= nr_seq_protocolo_w;

nr_seq_discussao_proc_w := null;
nr_seq_discussao_mat_w  := null;
nr_seq_proc_rec_w  	:= null;
nr_seq_mat_rec_w  	:= null;

--Recurso de Glosa
if (ie_acao_p = 'RC') then
	ie_acao_contab_val_adic_w := 'R';
	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		select  max(nr_seq_proc_rec)
		into STRICT  	nr_seq_proc_rec_w
		from  	pls_conta_pos_estabelecido
		where  	nr_seq_conta     	= nr_seq_conta_p
		and  	nr_seq_conta_proc  	= nr_seq_conta_proc_p
		and  	(nr_seq_proc_rec IS NOT NULL AND nr_seq_proc_rec::text <> '');
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		select  max(nr_seq_mat_rec)
		into STRICT  	nr_seq_mat_rec_w
		from  	pls_conta_pos_estabelecido
		where  	nr_seq_conta     	= nr_seq_conta_p
		and  	nr_seq_conta_mat  	= nr_seq_conta_mat_p
		and  	(nr_seq_mat_rec IS NOT NULL AND nr_seq_mat_rec::text <> '');
	end if;
	--Fechamento de discuss?o
elsif (ie_acao_p = 'F') then
	ie_acao_contab_val_adic_w := 'F';
	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		select  max(nr_seq_disc_proc)
		into STRICT  	nr_seq_discussao_proc_w
		from  	pls_conta_pos_estabelecido
		where  	nr_seq_conta     	= nr_seq_conta_p
		and  	nr_seq_conta_proc  	= nr_seq_conta_proc_p
		and  	(nr_seq_disc_proc IS NOT NULL AND nr_seq_disc_proc::text <> '');
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		select  max(nr_seq_disc_mat)
		into STRICT  	nr_seq_discussao_mat_w
		from  	pls_conta_pos_estabelecido
		where  	nr_seq_conta     	= nr_seq_conta_p
		and  	nr_seq_conta_mat  	= nr_seq_conta_mat_p
		and  	(nr_seq_disc_mat IS NOT NULL AND nr_seq_disc_mat::text <> '');
	end if;
else
	--Normal, consist?ncia da conta ou atualiza??o de registro
	ie_acao_contab_val_adic_w := 'N';
end if;

--Para benefici?rio com plano pr?(que pode gerar p?s quando tiver data limite utiliza??o), Se n?o gerou registros de p?s-estabelecido, ent?o necessita excluir itens que tenham

--sido gerados por abertura de pacote no faturamento. Isso evita problemas com itens lan?ados em abertura de pacote e n?o ? gerada an?ils de p?s, ficando itens pendurados a

--ocorr?ncias e ocasionando problemas ao desfazer fechamento de contas na an?lise de prestador.
if (ie_preco_plano_w = '1') then
	select   count(1)
	into STRICT  	qt_registros_gerados_pos_w
	from  	pls_conta_pos_estabelecido
	where   nr_seq_conta = nr_seq_conta_p;

	if (qt_registros_gerados_pos_w = 0) then
		delete  FROM pls_hist_analise_conta
		where  	nr_seq_conta_proc  in ( SELECT	nr_sequencia
						from  	pls_conta_proc
						where  	ie_status  		= 'M'
						and  	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
						and  	nr_seq_conta  		= nr_seq_conta_p);

		delete  FROM pls_hist_analise_conta
		where  	nr_seq_conta_mat  in (	SELECT   nr_sequencia
						from  	pls_conta_mat
						where  	ie_status  		= 'M'
						and  	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
						and  	nr_seq_conta  		= nr_seq_conta_p);

		delete 	from pls_conta_mat
		where   nr_seq_conta 	= nr_seq_conta_p
		and   	ie_status 	= 'M'
		and  	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '');

		delete 	from pls_conta_proc
		where   nr_seq_conta 	= nr_seq_conta_p
		and   	ie_status 	= 'M'
		and   	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '');

	end if;
end if;


if (ie_acao_p != 'P') then

	CALL pls_gerar_contab_val_adic(  	nr_seq_conta_p,  nr_seq_conta_proc_p, nr_seq_conta_mat_p,nr_seq_proc_rec_w,
					nr_seq_mat_rec_w,nr_seq_discussao_proc_w,nr_seq_discussao_mat_w, 'P',case when ie_acao_p = 'CA' then 'CA'
					when ie_acao_p = 'CAB' then 'CA'else ie_acao_contab_val_adic_w end, nm_usuario_p);
end if;

if (ie_gerar_pos_remido_w = 'S') then
	
	-- atualiza a cobranca de mensalidade
	CALL pls_cobrar_mens_remido(null, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, cd_estabelecimento_w, nm_usuario_p);
	CALL pls_status_faturamento_remido(null, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, cd_estabelecimento_w, nm_usuario_p);
end if;

-- gera o grupo ANS
CALL pls_atualizar_grupo_ans_conta(nr_seq_protocolo_w, 'S', null, null, 'N', nm_usuario_p, cd_estabelecimento_w, null);


-- Seta a vari?vel de processo do p?s para 'N'. Essa vari?vel

-- ser? utilizada para definir qual o tipo de log de regras de pre?o
pls_util_pck.ie_processo_pos_w := 'N';



end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_valor_pos_estab ( nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_origem_valor_pos_p text, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, ie_acao_p text) FROM PUBLIC;

