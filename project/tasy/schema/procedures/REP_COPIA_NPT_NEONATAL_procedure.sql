-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_copia_npt_neonatal (nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_pac_elem_mat_w	bigint;
qt_dia_npt_w		bigint;
nr_nut_pac_w		bigint;
nut_pac_elem_w		bigint;
nr_seq_pac_elem_w	bigint;
ie_copiar_w		varchar(10);
ie_copia_valid_igual_w	varchar(1);
nr_horas_validade_w	integer;
ie_prim_horario_setor_w	varchar(10);
hr_setor_w		varchar(10);
cd_setor_atendimento_w	bigint;
cd_estabelecimento_w	smallint;
nr_atendimento_w	bigint;
dt_prescricao_www	timestamp;
dt_inicio_prescr_w	timestamp;
dt_primeiro_horario_w	timestamp;
dt_validade_origem_w	timestamp;
dt_validade_nova_w	timestamp;
nr_atend_prescr_origem_w	bigint;
ie_horas_fixas_npt_w	varchar(1);
qt_hora_inf_w		nut_pac.qt_hora_inf%type;

c03 CURSOR FOR
SELECT	nr_sequencia
from	nut_pac_elemento
where	nr_seq_nut_pac	= (	select	min(b.nr_sequencia)
				from	nut_pac b
				where	b.nr_prescricao = nr_prescricao_orig_p
				and		coalesce(b.dt_suspensao::text, '') = ''
				and	coalesce(ie_npt_adulta,'N') = 'N')
order by nr_sequencia;

c04 CURSOR FOR
SELECT	nr_sequencia
from	nut_pac_elem_mat
where	nr_seq_pac_elem	= (	select	min(b.nr_sequencia)
				from	nut_pac_elemento b
				where	b.nr_sequencia = nut_pac_elem_w)
order by nr_sequencia;


BEGIN
ie_horas_fixas_npt_w := Obter_Param_Usuario(924, 1149, obter_perfil_ativo, nm_usuario_p, Obter_estab_usuario(nm_usuario_p), ie_horas_fixas_npt_w);

nr_atend_prescr_origem_w	:= obter_atendimento_prescr(nr_prescricao_orig_p);

select	coalesce(max(a.qt_dia_npt),0) + 1
into STRICT	qt_dia_npt_w
from	nut_pac a,
	prescr_medica b
where	a.nr_prescricao = b.nr_prescricao
and	b.dt_prescricao between clock_timestamp() - interval '7 days' and trunc(clock_timestamp())
and	b.nr_atendimento = nr_atend_prescr_origem_w
and	coalesce(a.ie_npt_adulta,'N') = 'N';

select  max(nr_horas_validade)
into STRICT 	nr_horas_validade_w
from 	prescr_medica
where 	nr_prescricao = nr_prescricao_p;

qt_hora_inf_w	:= coalesce(nr_horas_validade_w,24);

Select	nextval('nut_pac_seq')
into STRICT	nr_nut_pac_w
;

Insert into nut_pac(
	cd_intervalo,
	ds_diagnostico,
	ds_justificativa,
	ds_orientacao,
	dt_atualizacao,
	dt_atualizacao_nrec,
	hr_prim_horario,
	ie_ajustar_potassio,
	ie_ajustar_sodio,
	ie_bomba_infusao,
	ie_calcula_vel,
	ie_calculo_auto,
	ie_correcao,
	ie_dispositivo_infusao,
	ie_emissao,
	ie_forma,
	ie_forma_infusao,
	ie_gera_produto,
	ie_npt_adulta,
	ie_permite_alteracao,
	ie_suplementacao,
	ie_suspenso,
	ie_via_administracao,
	nm_usuario,
	nm_usuario_nrec,
	nr_prescricao,
	nr_prescricao_original,
	nr_seq_anterior,
	nr_seq_assinatura,
	nr_seq_fator_ativ,
	nr_seq_fator_stress,
	nr_seq_interf_farm,
	nr_seq_protocolo,
	nr_sequencia,
	pr_carboidrato,
	pr_conc_glic_solucao,
	pr_conc_lipidio_solucao,
	pr_conc_proteina_solucao,
	pr_lipidio,
	pr_npt,
	pr_proteina,
	qt_altura_cm,
	qt_aporte_hidrico_diario,
	qt_dia_npt,
	qt_equipo,
	qt_fase_npt,
	qt_gotejo_npt,
	qt_grama_nitrogenio,
	qt_grama_proteina_kg_dia,
	qt_hora_inf,
	qt_idade_ano,
	qt_idade_dia,
	qt_idade_mes,
	qt_kcal_carboidrato,
	qt_kcal_kg,
	qt_kcal_kg_ped,
	qt_kcal_lipidio,
	qt_kcal_nao_proteico,
	qt_kcal_proteico,
	qt_kcal_proteina,
	qt_kcal_total,
	qt_min_inf,
	qt_multiplicador,
	qt_nec_hidrica_diaria,
	qt_nec_hidrica_diaria_ped,
	qt_nec_kcal_dia,
	qt_nec_kcal_kg_dia,
	qt_osmolaridade_total,
	qt_peso,
	qt_peso_ajustado,
	qt_peso_calorico,
	qt_peso_ideal,
	qt_rel_cal_nit,
	qt_tempo_etapa,
	qt_tmb,
	qt_vel_inf_glicose,
	qt_volume_adep,
	qt_volume_diario,
	nr_sequencia_anterior)
SELECT	cd_intervalo,
	ds_diagnostico,
	ds_justificativa,
	ds_orientacao,
	clock_timestamp(),
	clock_timestamp(),
	hr_prim_horario,
	ie_ajustar_potassio,
	ie_ajustar_sodio,
	ie_bomba_infusao,
	ie_calcula_vel,
	ie_calculo_auto,
	ie_correcao,
	ie_dispositivo_infusao,
	0,
	ie_forma,
	ie_forma_infusao,
	ie_gera_produto,
	ie_npt_adulta,
	ie_permite_alteracao,
	ie_suplementacao,
	'N',
	ie_via_administracao,
	nm_usuario_p,
	nm_usuario_p,
	nr_prescricao_p,
	nr_prescricao_orig_p,
	nr_seq_anterior,
	nr_seq_assinatura,
	nr_seq_fator_ativ,
	nr_seq_fator_stress,
	nr_seq_interf_farm,
	nr_seq_protocolo,
	nr_nut_pac_w,
	pr_carboidrato,
	pr_conc_glic_solucao,
	pr_conc_lipidio_solucao,
	pr_conc_proteina_solucao,
	pr_lipidio,
	pr_npt,
	pr_proteina,
	qt_altura_cm,
	qt_aporte_hidrico_diario,
	qt_dia_npt_w,
	qt_equipo,
	qt_fase_npt,
	CASE WHEN ie_horas_fixas_npt_w='S' THEN  round((qt_volume_diario/qt_hora_inf_w)::numeric,2)  ELSE round((qt_volume_diario/qt_hora_inf)::numeric,2) END ,

	qt_grama_nitrogenio,
	qt_grama_proteina_kg_dia,
	CASE WHEN ie_horas_fixas_npt_w='S' THEN qt_hora_inf_w  ELSE qt_hora_inf END ,

	qt_idade_ano,
	qt_idade_dia,
	qt_idade_mes,
	qt_kcal_carboidrato,
	qt_kcal_kg,
	qt_kcal_kg_ped,
	qt_kcal_lipidio,
	qt_kcal_nao_proteico,
	qt_kcal_proteico,
	qt_kcal_proteina,
	qt_kcal_total,
	qt_min_inf,
	qt_multiplicador,
	qt_nec_hidrica_diaria,
	qt_nec_hidrica_diaria_ped,
	qt_nec_kcal_dia,
	qt_nec_kcal_kg_dia,
	qt_osmolaridade_total,
	qt_peso,
	qt_peso_ajustado,
	qt_peso_calorico,
	qt_peso_ideal,
	qt_rel_cal_nit,
	qt_tempo_etapa,
	qt_tmb,
	qt_vel_inf_glicose,
	qt_volume_adep,
	qt_volume_diario,
	nr_sequencia
from	nut_pac
where	nr_prescricao	= nr_prescricao_orig_p
and		coalesce(dt_suspensao::text, '') = ''
and		nr_sequencia	= (	Select	min(b.nr_sequencia)
				from	nut_pac b
				where	b.nr_prescricao = nr_prescricao_orig_p
				and	coalesce(ie_npt_adulta,'N') = 'N');

open c03;
loop
fetch c03 into
	nut_pac_elem_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	select	nextval('nut_pac_elemento_seq')
	into STRICT	nr_seq_pac_elem_w
	;

	Insert into nut_pac_elemento(
		nr_sequencia,
		nr_seq_nut_pac,
		nr_seq_elemento,
		dt_atualizacao,
		nm_usuario,
		cd_unidade_medida,
		qt_elem_kg_dia,
		qt_diaria,
		pr_total,
		qt_kcal,
		ie_prim_fase,
		ie_seg_fase,
		ie_terc_fase,
		ie_quar_fase,
		ie_npt,
		qt_volume_final)
	SELECT	nr_seq_pac_elem_w,
		nr_nut_pac_w,
		nr_seq_elemento,
		clock_timestamp(),
		nm_usuario_p,
		cd_unidade_medida,
		qt_elem_kg_dia,
		qt_diaria,
		pr_total,
		qt_kcal,
		ie_prim_fase,
		ie_seg_fase,
		ie_terc_fase,
		ie_quar_fase,
		ie_npt,
		qt_volume_final
	from	nut_pac_elemento
	where	nr_sequencia = nut_pac_elem_w;

	open c04;
	loop
	fetch c04 into
		nr_seq_pac_elem_mat_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */

		insert into nut_pac_elem_mat(
			nr_sequencia,
			nr_seq_pac_elem,
			dt_atualizacao,
			nm_usuario,
			nr_seq_elem_mat,
			qt_volume,
			qt_vol_1_fase,
			qt_vol_2_fase,
			qt_vol_3_fase,
			qt_vol_4_fase,
			qt_vol_cor)
		SELECT	nextval('nut_pac_elem_mat_seq'),
			nr_seq_pac_elem_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_elem_mat,
			qt_volume,
			qt_vol_1_fase,
			qt_vol_2_fase,
			qt_vol_3_fase,
			qt_vol_4_fase,
			qt_vol_cor
		from	nut_pac_elem_mat
		where	nr_sequencia	= nr_seq_pac_elem_mat_w;

	end loop;
	close c04;
	end;
end loop;
close c03;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_copia_npt_neonatal (nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, nm_usuario_p text) FROM PUBLIC;

