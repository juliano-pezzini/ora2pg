-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_lote_producao_comp ( nr_lote_producao_p bigint, ie_padronizado_lote_prod_p text, ds_erro_p INOUT text) AS $body$
DECLARE



ie_situacao_w			varchar(1);
ie_padronizado_w			varchar(1);
ie_local_valido_w			varchar(1);
cd_material_w			integer;
nr_item_w			integer;
qt_estoque_w			double precision;
qt_saldo_w			double precision;
cd_estabelecimento_w		smallint;
cd_local_estoque_w		smallint;
ds_erro_item_saldo_w		varchar(1000);
ds_erro_item_inativo_w		varchar(1000);
ds_erro_item_naopadr_w		varchar(1000);
ds_erro_item_local_w		varchar(1000);
ds_erro_w			varchar(1000);
ie_baixa_comp_producao_w		varchar(01);
ie_material_estoque_w		varchar(1);
IE_DISP_LOTE_PROD_W		varchar(1);
ie_regra_saldo_consig_w		parametro_estoque.ie_regra_saldo_consig%type;
ie_consignado_w			material.ie_consignado%type;
ie_estoque_lote_w		material_estab.ie_estoque_lote%type;
cd_cgc_fornecedor_w		lote_producao_comp.cd_fornecedor%type;
nr_seq_lote_fornec_w		lote_producao_comp.nr_seq_lote_fornec%type;
dt_mesano_vigente_w		parametro_estoque.dt_mesano_vigente%type;
dt_mesano_referencia_w		saldo_estoque.dt_mesano_referencia%type := clock_timestamp();
dt_mesano_referencia_consig_w	fornecedor_mat_consignado.dt_mesano_referencia%type;
qt_saldo_estoque_w		double precision;
qt_estoque_consigado_w		double precision;
ie_consiste_saldo_contabil_w 	funcao_param_usuario.vl_parametro%type;

C01 CURSOR FOR
SELECT	cd_material,
	nr_sequencia,
	qt_estoque,
	cd_local_estoque,
	cd_fornecedor,
	nr_seq_lote_fornec
FROM	lote_producao_comp
WHERE (nr_lote_producao = nr_lote_producao_p)
AND	ie_baixa_comp_producao_w	= 'S'
ORDER BY nr_sequencia;


BEGIN

ie_consiste_saldo_contabil_w := obter_param_usuario(143, 393, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_saldo_contabil_w);

SELECT	cd_estabelecimento
INTO STRICT	cd_estabelecimento_w
FROM	lote_producao
WHERE (nr_lote_producao = nr_lote_producao_p);

SELECT	coalesce(MAX(ie_baixa_comp_producao),'S'),
	coalesce(MAX(IE_DISP_LOTE_PROD),'S'),
	max(dt_mesano_vigente),
	coalesce(max(ie_regra_saldo_consig), 0)
INTO STRICT	ie_baixa_comp_producao_w,
	IE_DISP_LOTE_PROD_W,
	dt_mesano_vigente_w,
	ie_regra_saldo_consig_w
FROM	parametro_estoque
WHERE	cd_estabelecimento_padrao = cd_estabelecimento_w;

dt_mesano_referencia_consig_w := PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);

OPEN 	c01;
LOOP
FETCH c01 INTO
	cd_material_w,
	nr_item_w,
	qt_estoque_w,
	cd_local_estoque_w,
	cd_cgc_fornecedor_w,
	nr_seq_lote_fornec_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
IF 	C01%FOUND THEN
	BEGIN
	SELECT	coalesce(max(b.ie_material_estoque),'N'),
		max(a.ie_consignado),
		coalesce(max(b.ie_estoque_lote),'N')
	INTO STRICT	ie_material_estoque_w,
		ie_consignado_w,
		ie_estoque_lote_w
	FROM	material a,
		material_estab b
	WHERE	a.cd_material = cd_material_w
	and	b.cd_material = a.cd_material
	and	b.cd_estabelecimento = cd_estabelecimento_w;

	IF (ie_material_estoque_w = 'S') THEN
		BEGIN
		
		/* Item proprio ou consignado ambos sem fornecedor informado. */

		if (ie_consignado_w = '0') or
			((ie_consignado_w = '2') and (coalesce(cd_cgc_fornecedor_w::text, '') = '')) then
			begin
			qt_saldo_estoque_w := obter_saldo_disp_estoque(	cd_estabelecimento_w,
									cd_material_w,
									cd_local_estoque_w,
									dt_mesano_referencia_w,
									nr_seq_lote_fornec_w);
									
			/* Caso o item for consignado ambos e houver regra de consignado, devera somar o saldo consignado ao proprio. */

			if (ie_consignado_w = '2') and (ie_regra_saldo_consig_w > 0)then
				begin

				if (ie_estoque_lote_w = 'N') or (nr_seq_lote_fornec_w <= 0) then
					select	coalesce(sum(qt_estoque),0)
					into STRICT	qt_estoque_consigado_w
					from	fornecedor_mat_consignado
					where	cd_estabelecimento	= cd_estabelecimento_w
					and	cd_local_estoque	= cd_local_estoque_w
					and	cd_material		= cd_material_w
					and	dt_mesano_referencia	= dt_mesano_referencia_consig_w;
				else
					select	coalesce(sum(qt_estoque),0)
					into STRICT	qt_estoque_consigado_w
					from	fornecedor_mat_consig_lote
					where	cd_estabelecimento	= cd_estabelecimento_w
					and	cd_local_estoque	= cd_local_estoque_w
					and	cd_material		= cd_material_w
					and	dt_mesano_referencia	= dt_mesano_referencia_consig_w
					and	nr_seq_lote		= nr_seq_lote_fornec_w;
				end if;
			
				qt_saldo_estoque_w	:= qt_saldo_estoque_w + qt_estoque_consigado_w;
				end;
			end if;
			end;
			
		/* Item consignado ou consignado ambos com fornecedor informado */

		elsif (ie_consignado_w = '1') or
			(ie_consignado_w = '2' AND cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') then
			begin

			if (ie_estoque_lote_w = 'N') or (nr_seq_lote_fornec_w <= 0) then
				select	coalesce(sum(qt_estoque),0)
				into STRICT	qt_saldo_estoque_w
				from	fornecedor_mat_consignado
				where	cd_estabelecimento	= cd_estabelecimento_w
				and	cd_local_estoque	= cd_local_estoque_w
				and	cd_fornecedor 		= cd_cgc_fornecedor_w
				and	cd_material 		= cd_material_w
				and	dt_mesano_referencia	= dt_mesano_referencia_consig_w;
			else
				select	coalesce(sum(qt_estoque),0)
				into STRICT	qt_saldo_estoque_w
				from	fornecedor_mat_consig_lote
				where	cd_estabelecimento	= cd_estabelecimento_w
				and	cd_local_estoque	= cd_local_estoque_w
				and	cd_fornecedor		= cd_cgc_fornecedor_w
				and	cd_material		= cd_material_w
				and	dt_mesano_referencia	= dt_mesano_referencia_consig_w
				and	nr_seq_lote		= nr_seq_lote_fornec_w;
			end if;
			end;
		end if;

		if (ie_disp_lote_prod_w = 'S') then
			if (ie_consiste_saldo_contabil_w = 'S' and qt_saldo_estoque_w < 0) then			
				qt_saldo_estoque_w := 0;
			end if;
			qt_saldo_estoque_w := qt_saldo_estoque_w + qt_estoque_w;
		end if;
		
		IF (qt_saldo_estoque_w < qt_estoque_w) THEN
			IF (ds_erro_item_saldo_w IS NOT NULL AND ds_erro_item_saldo_w::text <> '') THEN
				ds_erro_item_saldo_w := ds_erro_item_saldo_w || ', ';
			END IF;
			ds_erro_item_saldo_w := ds_erro_item_saldo_w || nr_item_w;
		END IF;
		END;
	END IF;

	SELECT	ie_situacao,
		SUBSTR(obter_se_material_padronizado(cd_estabelecimento_w, cd_material_w),1,1) ie_padronizado
	INTO STRICT	ie_situacao_w,
		ie_padronizado_w
	FROM	material
	WHERE (cd_material = cd_material_w);

	IF (ie_situacao_w = 'I') THEN
		IF (ds_erro_item_inativo_w IS NOT NULL AND ds_erro_item_inativo_w::text <> '') THEN
			ds_erro_item_inativo_w := ds_erro_item_inativo_w || ', ';
		END IF;
		ds_erro_item_inativo_w := ds_erro_item_inativo_w || nr_item_w;
	END IF;

	IF (ie_padronizado_lote_prod_p = 'N') THEN
		IF (ie_padronizado_w <> 'S') THEN
			IF (ds_erro_item_NaoPadr_w IS NOT NULL AND ds_erro_item_NaoPadr_w::text <> '') THEN
				ds_erro_item_NaoPadr_w := ds_erro_item_NaoPadr_w || ', ';
			END IF;
			ds_erro_item_NaoPadr_w := ds_erro_item_NaoPadr_w || nr_item_w;
		END IF;
	END IF;

	ie_local_valido_w := obter_local_valido(cd_estabelecimento_w, cd_local_estoque_w, cd_material_w, 2, ie_local_valido_w);

	IF (ie_local_valido_w <> 'S') THEN
		IF (ds_erro_item_Local_w IS NOT NULL AND ds_erro_item_Local_w::text <> '') THEN
			ds_erro_item_Local_w := ds_erro_item_Local_w || ', ';
		END IF;
		ds_erro_item_Local_w := ds_erro_item_Local_w || nr_item_w;
	END IF;
	END;
END IF;
END LOOP;
CLOSE c01;

IF (ds_erro_item_saldo_w IS NOT NULL AND ds_erro_item_saldo_w::text <> '') THEN
	ds_erro_w := ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279834) || ' ' || ds_erro_item_saldo_w || ' ' || WHEB_MENSAGEM_PCK.get_texto(279835) || CHR(13) || CHR(10);
END IF;
IF (ds_erro_item_inativo_w IS NOT NULL AND ds_erro_item_inativo_w::text <> '') THEN
	ds_erro_w := ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279834) || ' ' || ds_erro_item_inativo_w || ' ' || WHEB_MENSAGEM_PCK.get_texto(279836)|| CHR(13) || CHR(10);
END IF;
IF (ds_erro_item_NaoPadr_w IS NOT NULL AND ds_erro_item_NaoPadr_w::text <> '') THEN
	ds_erro_w := ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279834) || ' ' || ds_erro_item_NaoPadr_w || ' ' || WHEB_MENSAGEM_PCK.get_texto(279837) || CHR(13) || CHR(10);
END IF;
IF (ds_erro_item_local_w IS NOT NULL AND ds_erro_item_local_w::text <> '') THEN
	ds_erro_w := ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(279834) || ' ' || ds_erro_item_local_w || ' ' || WHEB_MENSAGEM_PCK.get_texto(279838) || CHR(13) || CHR(10);
END IF;

ds_erro_p := SUBSTR(ds_erro_w,1,255);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_lote_producao_comp ( nr_lote_producao_p bigint, ie_padronizado_lote_prod_p text, ds_erro_p INOUT text) FROM PUBLIC;

