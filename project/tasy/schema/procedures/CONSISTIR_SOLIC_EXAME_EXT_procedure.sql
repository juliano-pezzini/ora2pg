-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_solic_exame_ext ( nr_atendimento_p bigint, nr_seq_exame_ext_p bigint, cd_pessoa_fisica_p text, ds_retorno_p INOUT text, ie_impedir_p INOUT text, ie_justificar_p INOUT text) AS $body$
DECLARE

 
cd_convenio_w		bigint;
qt_reg_w			bigint;
qt_reg_ww			bigint;
dt_regra_w			timestamp;		
qt_cons_data		double precision;
ie_impedir_w		varchar(1) := 'N';
ie_justificar_w		varchar(1) := 'N';
nr_regra_w			bigint;
			
c01 CURSOR FOR 
	SELECT	nr_seq_exame_lab, 
		nr_seq_grupo_lab, 
		nr_seq_exame_interno, 
		cd_procedimento, 
		cd_grupo_proc, 
		cd_especialidade, 
		cd_area_procedimento, 
		cd_convenio, 
		qt_dias, 
		qt_permitida, 
		ie_origem_proced, 
		ie_impedir, 
		ie_justificar 
	from	regra_interv_sol_exame_ext;
	
c02 CURSOR FOR 
	SELECT 	'TOPO' ie_tipo 
	from	pedido_exame_externo_item a, 
			proc_interno b 
	where  nr_seq_pedido = nr_seq_exame_ext_p 
	and		a.nr_proc_interno = b.nr_sequencia 
	and 	(((coalesce(b.IE_TOPOGRAFIA,'N') = 'S') and (coalesce(a.nr_seq_topografia::text, '') = ''))) 
	and 	obter_lib_erro_regra_rep(253,1980) = 'N' 
	
union
 
	SELECT 	'LADO' ie_tipo 
	from	pedido_exame_externo_item a, 
			proc_interno b 
	where  nr_seq_pedido = nr_seq_exame_ext_p 
	and		a.nr_proc_interno = b.nr_sequencia 
	and 	(((coalesce(b.IE_EXIGE_LADO,'N') = 'S') and (coalesce(a.ie_lado::text, '') = ''))) 
	and 	obter_lib_erro_regra_rep(61,1980) = 'N';
		
c01_w	c01%rowtype;	
c02_w	c02%rowtype;
	

BEGIN 
 
select	max(a.cd_convenio) 
into STRICT	cd_convenio_w 
from	atend_categoria_convenio a 
where	a.nr_atendimento = nr_atendimento_p 
and 	a.dt_inicio_vigencia	=	(SELECT max(b.dt_inicio_vigencia) 
					from atend_categoria_convenio b 
					where b.nr_atendimento	= nr_atendimento_p);
					 
select 	max(dt_solicitacao) 
into STRICT	dt_regra_w 
from	pedido_exame_externo 
where	nr_sequencia = nr_seq_exame_ext_p;
					 
ds_retorno_p 	:= '';
qt_cons_data	:= 1/24/60/60;
open C01;
loop 
fetch C01 into	 
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	if (c01_w.qt_dias IS NOT NULL AND c01_w.qt_dias::text <> '') then 
	 
		if (c01_w.cd_convenio IS NOT NULL AND c01_w.cd_convenio::text <> '') then 
			begin 
			select	count(*) 
			into STRICT	qt_reg_w 
			from	pedido_exame_externo_item a, 
				pedido_exame_externo b, 
				atendimento_paciente c, 
				atend_categoria_convenio d 
			where	b.cd_pessoa_fisica = cd_pessoa_fisica_p 
			and	a.nr_seq_pedido = b.nr_sequencia 
			and	b.nr_atendimento = c.nr_atendimento 
			and	c.nr_atendimento = d.nr_atendimento 
			and	d.cd_convenio = c01_w.cd_convenio 
			and	((a.nr_seq_exame_lab = c01_w.nr_seq_exame_lab) or (coalesce(c01_w.nr_seq_exame_lab::text, '') = '')) 
			and	((a.nr_proc_interno = c01_w.nr_seq_exame_interno) or (coalesce(c01_w.nr_seq_exame_interno::text, '') = '')) 
			and	((a.cd_procedimento = c01_w.cd_procedimento) or (coalesce(c01_w.cd_procedimento::text, '') = '')) 
			and	((a.qt_exame = c01_w.qt_permitida) or (coalesce(c01_w.qt_permitida::text, '') = '')) 
			and	b.dt_solicitacao between(dt_regra_w-c01_w.qt_dias) and dt_regra_w-qt_cons_data;
		 
		 
			select	count(*) 
			into STRICT	qt_reg_ww 
			from	prescr_procedimento a, 
				prescr_medica b, 
				atendimento_paciente c, 
				atend_categoria_convenio d 
			where	b.cd_pessoa_fisica = cd_pessoa_fisica_p 
			and	a.nr_prescricao = b.nr_prescricao 
			and	b.nr_atendimento = c.nr_atendimento 
			and	c.nr_atendimento = d.nr_atendimento 
			and	d.cd_convenio = c01_w.cd_convenio 
			and	((a.nr_seq_exame = c01_w.nr_seq_exame_lab) or (coalesce(c01_w.nr_seq_exame_lab::text, '') = '')) 
			and	((a.nr_seq_proc_interno = c01_w.nr_seq_exame_interno) or (coalesce(c01_w.nr_seq_exame_interno::text, '') = '')) 
			and	((a.cd_procedimento = c01_w.cd_procedimento) or (coalesce(c01_w.cd_procedimento::text, '') = '')) 
			and	((a.qt_procedimento = c01_w.qt_permitida) or (coalesce(c01_w.qt_permitida::text, '') = '')) 
			and	b.dt_prescricao between(dt_regra_w-c01_w.qt_dias) and dt_regra_w-qt_cons_data 
			and	coalesce(a.DT_SUSPENSAO::text, '') = '' 
			and	coalesce(b.DT_SUSPENSAO::text, '') = '';		
			 
			qt_reg_w	:= qt_reg_w + qt_reg_ww;
		 
			if (qt_reg_w > 0) then 
				select	count(*) 
				into STRICT	qt_reg_w 
				from	pedido_exame_externo_item a, 
					pedido_exame_externo b, 
					atendimento_paciente c, 
					atend_categoria_convenio d 
				where	a.nr_seq_pedido = nr_seq_exame_ext_p 
				and	a.nr_seq_pedido = b.nr_sequencia 
				and	b.nr_atendimento = c.nr_atendimento 
				and	c.nr_atendimento = d.nr_atendimento 
				and	d.cd_convenio = c01_w.cd_convenio 
				and	((a.nr_seq_exame_lab = c01_w.nr_seq_exame_lab) or (coalesce(c01_w.nr_seq_exame_lab::text, '') = '')) 
				and	((a.nr_proc_interno = c01_w.nr_seq_exame_interno) or (coalesce(c01_w.nr_seq_exame_interno::text, '') = '')) 
				and	((a.cd_procedimento = c01_w.cd_procedimento) or (coalesce(c01_w.cd_procedimento::text, '') = '')) 
				and	((a.qt_exame = c01_w.qt_permitida) or (coalesce(c01_w.qt_permitida::text, '') = ''));
				 
				if (qt_reg_w > 0) then 
					begin 
					--ds_retorno_p := 'Os seguintes exames foram solicitados nos últimos '||c01_w.qt_dias||' dias:'||chr(13); 
					--ds_retorno_p := wheb_mensagem_pck.get_texto(443606 , 'QT_DIAS=' || c01_w.qt_dias || chr(13)); 
					ds_retorno_p := wheb_mensagem_pck.get_texto(443606 , 'QT_DIAS= ' || c01_w.qt_dias);
					ds_retorno_p := ds_retorno_p || chr(13);
					 
					--Os seguintes exames foram solicitados nos últimos #@QT_DIAS#@ dias: 
					 
					if (coalesce(c01_w.ie_impedir,'N') = 'S') then 
						ie_impedir_w := c01_w.ie_impedir;
					end if;
					 
					if (coalesce(c01_w.ie_justificar,'N') = 'S') then 
						ie_justificar_w := c01_w.ie_justificar;
					end if;
					 
					if (c01_w.cd_procedimento IS NOT NULL AND c01_w.cd_procedimento::text <> '') then 
						ds_retorno_p	:= ds_retorno_p||Obter_Desc_Exame_Lab(null,null,c01_w.cd_procedimento,c01_w.ie_origem_proced)||chr(13);
					end if;	
					if (c01_w.nr_seq_exame_lab IS NOT NULL AND c01_w.nr_seq_exame_lab::text <> '') then 
						ds_retorno_p	:= ds_retorno_p||Obter_Desc_Exame_Lab(c01_w.nr_seq_exame_lab,null,null,null)||chr(13);
					end if;
					if (c01_w.nr_seq_exame_interno IS NOT NULL AND c01_w.nr_seq_exame_interno::text <> '') then 
						ds_retorno_p	:= ds_retorno_p||Obter_Desc_Proc_Interno(c01_w.nr_seq_exame_interno);
					end if;
					end;
				end if;
				 
			end if;
			end;	
		else 
			begin 
			select	count(*) 
			into STRICT	qt_reg_w 
			from	pedido_exame_externo_item a, 
				pedido_exame_externo b 
			where	b.cd_pessoa_fisica = cd_pessoa_fisica_p 
			and	a.nr_seq_pedido = b.nr_sequencia 
			and	((a.nr_seq_exame_lab = c01_w.nr_seq_exame_lab) or (coalesce(c01_w.nr_seq_exame_lab::text, '') = '')) 
			and	((a.nr_proc_interno = c01_w.nr_seq_exame_interno) or (coalesce(c01_w.nr_seq_exame_interno::text, '') = '')) 
			and	((a.cd_procedimento = c01_w.cd_procedimento) or (coalesce(c01_w.cd_procedimento::text, '') = '')) 
			and	((a.qt_exame = c01_w.qt_permitida) or (coalesce(c01_w.qt_permitida::text, '') = '')) 
			and	b.dt_solicitacao between(dt_regra_w-c01_w.qt_dias) and dt_regra_w-qt_cons_data;
			 
			 
			select	count(*) 
			into STRICT	qt_reg_ww 
			from	prescr_procedimento a, 
				prescr_medica b 
			where	b.cd_pessoa_fisica = cd_pessoa_fisica_p 
			and	a.nr_prescricao = b.nr_prescricao 
			and	((a.nr_seq_exame = c01_w.nr_seq_exame_lab) or (coalesce(c01_w.nr_seq_exame_lab::text, '') = '')) 
			and	((a.nr_seq_proc_interno = c01_w.nr_seq_exame_interno) or (coalesce(c01_w.nr_seq_exame_interno::text, '') = '')) 
			and	((a.cd_procedimento = c01_w.cd_procedimento) or (coalesce(c01_w.cd_procedimento::text, '') = '')) 
			and	((a.qt_procedimento = c01_w.qt_permitida) or (coalesce(c01_w.qt_permitida::text, '') = '')) 
			and	b.dt_prescricao between(dt_regra_w-c01_w.qt_dias) and dt_regra_w-qt_cons_data 
			and	coalesce(a.DT_SUSPENSAO::text, '') = '' 
			and	coalesce(b.DT_SUSPENSAO::text, '') = '';
		 
			qt_reg_w	:= qt_reg_w + qt_reg_ww;
			 
			if (qt_reg_w > 0) then 
				begin 
				select	count(*) 
				into STRICT	qt_reg_w 
				from	pedido_exame_externo_item a, 
					pedido_exame_externo b 
				where	a.nr_seq_pedido = nr_seq_exame_ext_p 
				and	a.nr_seq_pedido = b.nr_sequencia 
				and	((a.nr_seq_exame_lab = c01_w.nr_seq_exame_lab) or (coalesce(c01_w.nr_seq_exame_lab::text, '') = '')) 
				and	((a.nr_proc_interno = c01_w.nr_seq_exame_interno) or (coalesce(c01_w.nr_seq_exame_interno::text, '') = '')) 
				and	((a.cd_procedimento = c01_w.cd_procedimento) or (coalesce(c01_w.cd_procedimento::text, '') = '')) 
				and	((a.qt_exame = c01_w.qt_permitida) or (coalesce(c01_w.qt_permitida::text, '') = ''));
				 
				if (qt_reg_w > 0) then 
					begin 
					--ds_retorno_p := 'Os seguintes exames foram solicitados nos últimos '||c01_w.qt_dias||' dias:'||chr(13); 
					--ds_retorno_p := wheb_mensagem_pck.get_texto(443606 , 'QT_DIAS=' || c01_w.qt_dias || chr(13)); 
					ds_retorno_p := wheb_mensagem_pck.get_texto(443606 , 'QT_DIAS= ' || c01_w.qt_dias);
					ds_retorno_p := ds_retorno_p || chr(13);
					--Os seguintes exames foram solicitados nos últimos #@QT_DIAS#@ dias: 
 
					if (coalesce(c01_w.ie_impedir,'N') = 'S') then 
						ie_impedir_w := c01_w.ie_impedir;
					end if;
					 
					if (coalesce(c01_w.ie_justificar,'N') = 'S') then 
						ie_justificar_w := c01_w.ie_justificar;
					end if;
					 
					if (c01_w.cd_procedimento IS NOT NULL AND c01_w.cd_procedimento::text <> '') then 
						ds_retorno_p	:= ds_retorno_p||Obter_Desc_Exame_Lab(null,null,c01_w.cd_procedimento,c01_w.ie_origem_proced)||chr(13);
					end if;	
					if (c01_w.nr_seq_exame_lab IS NOT NULL AND c01_w.nr_seq_exame_lab::text <> '') then 
						ds_retorno_p	:= ds_retorno_p||Obter_Desc_Exame_Lab(c01_w.nr_seq_exame_lab,null,null,null)||chr(13);
					end if;
					if (c01_w.nr_seq_exame_interno IS NOT NULL AND c01_w.nr_seq_exame_interno::text <> '') then 
						ds_retorno_p	:= ds_retorno_p||Obter_Desc_Proc_Interno(c01_w.nr_seq_exame_interno);
					end if;
					end;
				end if;
				end;
			end if;
			end;
		end if;
	end if;
	end;
end loop;
close C01;		
 
open c02;
loop 
fetch c02 into 
	c02_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin 
		if (c02_w.ie_tipo = 'TOPO') then 
			nr_regra_w := 253;
		elsif (c02_w.ie_tipo = 'LADO') then 
			nr_regra_w := 61;
		end if;
		 
		select	coalesce(ds_retorno_p,'') || chr(13)||obter_desc_expressao(cd_exp_descricao,ds_regra_prescr) 
		into STRICT	ds_retorno_p 
		from	regra_consiste_prescr 
		where	nr_sequencia = nr_regra_w;
		 
		ie_impedir_w := 'S';
		 
	end;
	end loop;
close c02;
			 
 
ie_impedir_p := ie_impedir_w;
ie_justificar_p := ie_justificar_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_solic_exame_ext ( nr_atendimento_p bigint, nr_seq_exame_ext_p bigint, cd_pessoa_fisica_p text, ds_retorno_p INOUT text, ie_impedir_p INOUT text, ie_justificar_p INOUT text) FROM PUBLIC;

