-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tit_trib_lote_pag ( nr_seq_pag_prest_p pls_pagamento_prestador.nr_sequencia%type, nr_seq_venc_trib_p pls_pag_prest_venc_trib.nr_sequencia%type, vl_tributo_p bigint, cd_moeda_p bigint, vl_base_calculo_p bigint, cd_cgc_prestador_p text, cd_pf_prestador_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_tributo_p tributo.cd_tributo%type, dt_vencimento_p timestamp, dt_emissao_p timestamp, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

	
ds_irrelevante_w		varchar(4000);
cd_benef_regra_w		varchar(255);
ie_conta_contab_tit_trib_w	varchar(255);
ie_conta_financ_tit_trib_w	varchar(255);
cd_darf_w			varchar(255);
cd_conta_cred_w			varchar(20);
cd_conta_contab_trib_w		varchar(20);
ie_tipo_contratacao_w		varchar(2);
nr_titulo_w			titulo_pagar.nr_titulo%type;
nr_seq_classe_w			bigint;
cd_tipo_baixa_neg_w		bigint;
cd_conta_financ_regra_w		bigint;
cd_conta_financ_w		bigint;
nr_seq_trans_reg_w		bigint;
nr_seq_trans_baixa_w		bigint;
cd_empresa_w			bigint;
nr_seq_regra_w			bigint;
nr_seq_tipo_prestador_w		pls_tipo_prestador.nr_sequencia%type;
nr_seq_classificacao_w		pls_prestador.nr_seq_classificacao%type;
qt_registros_w			integer;
	

BEGIN
-- busca o tipo de contratação
if (nr_seq_venc_trib_p IS NOT NULL AND nr_seq_venc_trib_p::text <> '') then

	select	max(a.ie_tipo_contratacao)
	into STRICT	ie_tipo_contratacao_w
	from	pls_pag_prest_venc_trib a
	where	a.nr_sequencia = nr_seq_venc_trib_p;
end if;

-- busca o tipo de prestador
if (nr_seq_pag_prest_p IS NOT NULL AND nr_seq_pag_prest_p::text <> '') then

	select	max(b.nr_seq_tipo_prestador),
		max(b.nr_seq_classificacao)
	into STRICT	nr_seq_tipo_prestador_w,
		nr_seq_classificacao_w
	from	pls_pagamento_prestador a,
		pls_prestador		b
	where	b.nr_sequencia	= a.nr_seq_prestador
	and	a.nr_sequencia	= nr_seq_pag_prest_p;
end if;	

-- obtem os dados do titulo
SELECT * FROM obter_dados_trib_tit_pagar(	cd_tributo_p, cd_estabelecimento_p, cd_cgc_prestador_p, cd_pf_prestador_p, cd_benef_regra_w, ds_irrelevante_w, ds_irrelevante_w, cd_conta_financ_regra_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, clock_timestamp(), ds_irrelevante_w, ds_irrelevante_w, 'N', null, null, null, ie_tipo_contratacao_w, null, nr_seq_regra_w, null, 0, nr_seq_classe_w, cd_tipo_baixa_neg_w, vl_base_calculo_p, 'S', null, null, nr_seq_tipo_prestador_w, nr_seq_classificacao_w) INTO STRICT cd_benef_regra_w, ds_irrelevante_w, ds_irrelevante_w, cd_conta_financ_regra_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_regra_w, nr_seq_classe_w, cd_tipo_baixa_neg_w;

-- se encontrou algum beneficiário na regra então da continuidade, senão encontrou não gera do título
if (cd_benef_regra_w IS NOT NULL AND cd_benef_regra_w::text <> '') then

	select	count(1)
	into STRICT	qt_registros_w
	from	titulo_pagar
	where	nr_seq_pls_pag_prest	= nr_seq_pag_prest_p
	and	nr_seq_pls_venc_trib	= nr_seq_venc_trib_p
	and	cd_tributo		= cd_tributo_p
	and	ie_situacao		= 'A';
	
	-- Não deixar gerar o título do tributo duplicado
	if (qt_registros_w = 0) then

		select	coalesce(max(ie_conta_contab_tit_trib),'T'),
			coalesce(max(ie_conta_financ_tit_trib),'T')
		into STRICT	ie_conta_contab_tit_trib_w,
			ie_conta_financ_tit_trib_w
		from	parametros_contas_pagar
		where 	cd_estabelecimento = cd_estabelecimento_p;	
		
		if (ie_conta_financ_tit_trib_w = 'R') then
		
			cd_conta_financ_w := cd_conta_financ_regra_w;
		end if;
		
		if (ie_conta_contab_tit_trib_w = 'R') then
		
			select	max(cd_empresa)
			into STRICT	cd_empresa_w
			from	estabelecimento	
			where	cd_estabelecimento = cd_estabelecimento_p;
			
			cd_conta_contab_trib_w := substr(obter_conta_contabil_trib(cd_empresa_w, cd_tributo_p, cd_cgc_prestador_p, clock_timestamp()),1,20);
		end if;	

		insert into titulo_pagar(
			nr_titulo, cd_estabelecimento, dt_atualizacao,
			nm_usuario, dt_emissao, dt_contabil,
			dt_vencimento_original, dt_vencimento_atual, vl_titulo, 	
			vl_saldo_titulo, vl_saldo_juros, vl_saldo_multa,
			cd_moeda, tx_juros, tx_multa,
			cd_tipo_taxa_juro, cd_tipo_taxa_multa, tx_desc_antecipacao,
			ie_situacao, ie_origem_titulo, ie_tipo_titulo,
			cd_cgc, ie_desconto_dia, nr_lote_contabil,
			nr_seq_trans_fin_contab, nr_seq_trans_fin_baixa, ie_status_tributo,
			nr_lote_transf_trib, nr_seq_classe, cd_tipo_baixa_neg,
			ie_status, cd_tributo, nr_seq_pls_pag_prest,
			nr_seq_pls_venc_trib, ds_observacao_titulo, cd_darf
		) values (
			nextval('titulo_pagar_seq'), cd_estabelecimento_p, clock_timestamp(),
			nm_usuario_p, coalesce(dt_emissao_p,trunc(clock_timestamp(),'dd')), coalesce(dt_emissao_p,trunc(clock_timestamp(),'dd')),
			dt_vencimento_p, dt_vencimento_p, vl_tributo_p,
			vl_tributo_p, 0, 0, 
			cd_moeda_p, 0, 0, 
			1, 1, 0,
			'A', 4, 4, -- Situação Aberto / 4- Imposto, 3- Repasse (quando origem for repasse) / Imposto 
			cd_benef_regra_w, 'N', 0,
			nr_seq_trans_reg_w, nr_seq_trans_baixa_w, 'NT',
			0, nr_seq_classe_w, cd_tipo_baixa_neg_w,
			'D', cd_tributo_p, nr_seq_pag_prest_p,
			nr_seq_venc_trib_p, substr(obter_nome_pf_pj(cd_pf_prestador_p, cd_cgc_prestador_p), 1,80), cd_darf_w
		) returning nr_titulo into nr_titulo_w;
			
		CALL atualizar_inclusao_tit_pagar(nr_titulo_w, nm_usuario_p);
		
		select	max(c.cd_conta_cred)
		into STRICT	cd_conta_cred_w
		from	pls_conta_proc c,
			pls_conta_medica_resumo b,
			pls_pagamento_item a
		where	a.nr_seq_pagamento	= nr_seq_pag_prest_p
		and	a.nr_sequencia		= b.nr_seq_pag_item
		and	b.nr_seq_item		= c.nr_sequencia
		and	b.ie_proc_mat		= 'P'
		and	((coalesce(b.ie_situacao::text, '') = '') or (b.ie_situacao != 'I'));
		
		insert into titulo_pagar_classif(
			nr_titulo, nr_sequencia, vl_titulo,
			dt_atualizacao, nm_usuario, cd_conta_contabil,
			cd_centro_custo, nr_seq_conta_financ
		) values (
			nr_titulo_w, 1, vl_tributo_p,
			clock_timestamp(), nm_usuario_p, coalesce(cd_conta_contab_trib_w,cd_conta_cred_w), 
			null, cd_conta_financ_w);
	end if;
end if;
/* Sem commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tit_trib_lote_pag ( nr_seq_pag_prest_p pls_pagamento_prestador.nr_sequencia%type, nr_seq_venc_trib_p pls_pag_prest_venc_trib.nr_sequencia%type, vl_tributo_p bigint, cd_moeda_p bigint, vl_base_calculo_p bigint, cd_cgc_prestador_p text, cd_pf_prestador_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_tributo_p tributo.cd_tributo%type, dt_vencimento_p timestamp, dt_emissao_p timestamp, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

