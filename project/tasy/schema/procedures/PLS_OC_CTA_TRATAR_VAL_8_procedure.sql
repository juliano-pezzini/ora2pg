-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_8 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação de falta de senha externa da conta médica
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:

Alterações
 ------------------------------------------------------------------------------------------------------------------
dlehmkuhl OS 688483 - 14/04/2014 -

Alteração:	Modificada a forma de trabalho em relação a atualização dos campos de controle
	que basicamente decidem se a ocorrência será ou não gerada. Foi feita também a
	substituição da rotina obter_se_gera.

Motivo:	Necessário realizar essas alterações para corrigir bugs principalmente no que se
	refere a questão de aplicação de filtros (passo anterior ao da validação). Também
	tivemos um foco especial em performance, visto que a mesma precisou ser melhorada
	para não inviabilizar a nova solicitação que diz que a exceção deve verificar todo
	o atendimento.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dados_filtro_w		pls_tipos_ocor_pck.dados_filtro;

i			integer;
tb_nr_seq_selecao_w	dbms_sql.number_table;
tb_ie_valido_w		dbms_sql.varchar2_table;
tb_ds_observacao_w	dbms_sql.varchar2_table;

C01 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT	a.nr_sequencia nr_seq_selecao
	from	pls_oc_cta_selecao_ocor_v	a,
		pls_conta_ocor_v		b
	where	a.nr_id_transacao	= nr_id_transacao_pc
	and	a.ie_valido		= 'S'
	and	b.nr_sequencia		= a.nr_seq_conta
	and	coalesce(b.cd_senha_externa::text, '') = '';

-- Informações da validação de senha externa
C02 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
SELECT	a.nr_sequencia	nr_seq_validacao,
	a.ie_senha_nao_inf
from	pls_oc_cta_val_senha_ext a
where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;
BEGIN

if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	for	r_C02_w in C02(dados_regra_p.nr_sequencia)  loop

		if (r_C02_w.ie_senha_nao_inf = 'S') then

			-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
			CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

			-- Inicializar as listas para cada regra.
			tb_ie_valido_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
			tb_ds_observacao_w	:= pls_tipos_ocor_pck.vchr2_table_vazia;
			tb_nr_seq_selecao_w	:= pls_tipos_ocor_pck.num_table_vazia;

			-- Iniciar o índice para preenchimento da tabela.
			i := 0;
			for	r_C01_w in C01(nr_id_transacao_p) loop

				-- Inicializar os valores que serão atualizados na tabela de seleção.
				tb_ds_observacao_w(i) := null;
				tb_nr_seq_selecao_w(i) := r_C01_w.nr_seq_selecao;

				-- Verificar se o registro atual é válido ou não conforme as parametrizações de regras e regras de exceção.
				tb_ie_valido_w(i) := 'S';

				-- Quando a quantidade de itens da lista tiver chegado ao máximo definido na PLS_CTA_CONSISTIR_PCK, então os registros são levados para
				-- o BD e gravados todos de uma vez, pela procedure GERENCIAL_SELECAO_VALIDACAO, que atualiza os registros conforme passado por
				-- parâmetro, o indice e as listas são reiniciados para carregar os novos registros e para que os registros atuais não sejam atualizados novamente em
				-- na próxima carga.
				if (i = pls_cta_consistir_pck.qt_registro_transacao_w) then

					-- Será passado uma lista com todas a sequencias da seleção para a conta e para seus itens, estas sequências serão atualizadas com os mesmos dados da conta,
					-- conforme passado por parâmetro,
					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	tb_nr_seq_selecao_w, pls_tipos_ocor_pck.clob_table_vazia,
											'SEQ', tb_ds_observacao_w, tb_ie_valido_w, nm_usuario_p);

					-- Zerar o índice
					i := 0;

					-- Zerar as listas.
					tb_ie_valido_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
					tb_ds_observacao_w	:= pls_tipos_ocor_pck.vchr2_table_vazia;
					tb_nr_seq_selecao_w	:= pls_tipos_ocor_pck.num_table_vazia;
				-- Enquanto os registros não tiverem atingido a carga para gravar na seleção incrementa o índice para armazenar os próximos registros.
				else
					i := i + 1;
				end if;
			end loop; -- C01
			-- Quando tiver sobrado algo na lista irá gravar o que restou após a execução do loop.
			if (tb_nr_seq_selecao_w.count > 0) then
				-- Será passado uma lista com todas a sequencias da seleção para a conta e para seus itens, estas sequências serão atualizadas com os mesmos dados da conta,
				-- conforme passado por parâmetro,
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	tb_nr_seq_selecao_w, pls_tipos_ocor_pck.clob_table_vazia,
										'SEQ', tb_ds_observacao_w, tb_ie_valido_w, nm_usuario_p);
			end if;
		end if;

		-- seta os registros que serão válidos ou inválidos após o processamento
		CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
	end loop; -- C02
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_8 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

