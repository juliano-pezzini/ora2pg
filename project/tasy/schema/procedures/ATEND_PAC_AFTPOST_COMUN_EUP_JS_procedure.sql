-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atend_pac_aftpost_comun_eup_js ( nr_seq_autorizacao_p text, ds_lista_age_serv_p text, ds_lista_age_cons_p text, ds_lista_age_exame_p text, ds_lista_age_pac_p text, ie_novo_atend_lista_age_p text, ie_novo_atend_cham_p text, nr_internacao_aghos_p bigint, nr_seq_atend_futuro_p bigint, ie_regra_lancto_auto_p text, ie_edicao_registro_p text, cd_pessoa_responsavel_p text, ie_carater_inter_sus_p text, nr_seq_checkup_p bigint, ie_novo_atend_checkup_p text, ie_classif_doenca_p text, ie_tipo_diagnostico_p bigint, cd_medico_resp_p text, cd_doenca_p text, nr_seq_pac_espera_p bigint, ie_tipo_convenio_p bigint, cd_pessoa_fisica_p text, nr_seq_classificacao_p bigint, dt_entrada_p timestamp, ie_clinica_p bigint, ie_tipo_atendimento_p bigint, nr_atendimento_p bigint, cd_tipo_agenda_p bigint, nr_seq_agenda_p bigint, ie_novo_registro_p text, nm_usuario_p text, nr_seq_gestao_p text, ie_retorno_cid_p INOUT text, ds_msg_cep_p INOUT text, ds_msg_idade_pagador_p INOUT text, ds_msg_informa_pagador_p INOUT text, ds_msg_vincula_agenda_p INOUT text, nr_seq_vincula_agenda_p INOUT bigint, ds_msg_auto_conve_perm_p INOUT text, ds_msg_auto_conve_p INOUT text, ie_perm_auto_conv_p INOUT text, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, qt_prescr_cult_positiva_p INOUT bigint, ds_msg_tempo_espera_atend_p INOUT text, ds_msg_fila_espera_p INOUT text, ie_atend_fila_espera_p INOUT text, qt_orc_pac_aprovado_p INOUT bigint, qt_cartao_fidel_p INOUT bigint, nr_prontuario_p INOUT bigint, ds_msg_laudo_preenchido_p INOUT text, cd_conv_atend_fut_p INOUT bigint, cd_categ_atend_fut_p INOUT text, cd_plano_convenio_p INOUT text, cd_usuario_convenio_p INOUT text, dt_validade_carteira_p INOUT timestamp, qt_dia_internacao_p INOUT bigint, dt_validade_cart_glosa_p INOUT timestamp, nr_doc_convenio_p INOUT text, cd_senha_p INOUT text, ds_msg_regra_carater_conv_p INOUT text, cd_carteirinha_p INOUT text, ds_msg_esp_quest_p INOUT text, ie_permit_esp_p INOUT text) AS $body$
DECLARE


cd_estabelecimento_w		smallint;					
ie_cid_age_cirurg_w		varchar(1);	
ie_retorno_cid_w		varchar(1);	
ie_cid_age_exame_w		varchar(1);
ie_cid_age_consulta_w		varchar(1);
ie_cid_age_servico_w			varchar(1);
ie_reg_triagem_pa_w		varchar(1);
ie_valida_regra_triagem_w	varchar(1);
cd_cep_w			varchar(15);
qt_cep_w			bigint;
qt_w				bigint;
qt_idade_min_pagador_w		bigint;
ie_gerar_pagador_w		varchar(1);
ie_resp_pag_atend_w		varchar(1);
qt_idade_paciente_w		smallint;
ie_obter_ult_diag_w		varchar(1);
ie_ult_diag_pac_espera_w	varchar(1);
ie_atualiza_pront_tipo_atend_w	varchar(1);
ie_consulta_ofta_w		varchar(1);
ie_tipo_guia_w			varchar(2);
ie_tipo_atend_isol_w		varchar(60);
qt_atend_paciente_w		bigint;
ie_tipo_atend_age_cirurg_w	varchar(60);
ds_msg_vincula_agenda_w		varchar(255);
nr_seq_vincula_agenda_w		bigint;
ie_regra_aut_conv_w		varchar(1);
ie_consiste_auto_w		varchar(1);
ie_perfil_cih_comunic_w		varchar(255);
qt_dias_internacao_w		bigint;
ie_envio_alerta_classif_pac_w	varchar(2);
ie_utiliza_conv_cadastro_w	varchar(1);
cd_convenio_w			integer;
cd_conv_atend_w			integer;
cd_categoria_w			varchar(10);
ie_prescr_cult_positiva_w	varchar(1);
ie_mostra_tempo_espera_w	varchar(1);
qt_media_tempo_atend_min_w	bigint;
qt_min_tempo_espera_w		bigint;
ds_email_pac_orcamento_w	varchar(255);
ie_atend_fila_espera_w		varchar(1);
ie_pac_fila_espera_w		varchar(1);
ie_perm_vincular_orc_apro_w	varchar(1);
ie_vincula_orcam_auto_w		varchar(1);
qt_dias_orcamento_w		bigint;
ie_apre_med_cartao_fide_w	varchar(1);
ie_transf_laudo_atend_w		varchar(1);
ie_atualiza_dados_resp_w	varchar(1);
ie_gera_autorizacao_w		varchar(1);
ie_gerar_pront_auto_w		varchar(1);	
nr_prontuario_w			bigint;
qt_regra_alta_w			bigint;	
ie_consis_laudo_preenchido_w	varchar(1);
ie_gerar_volume_pront_intern_w	varchar(1);
ie_copiar_precaucao_cih_w	varchar(1);
cd_conv_atend_futu_w		integer;
cd_categ_atend_futu_w		varchar(10);	
qt_dias_autoriz_w		bigint;		
ie_guia_autorizada_w 		varchar(20);
ie_situacao_aghos_w		varchar(2);
ie_vinc_prescr_pac_w		varchar(1);
cd_carteirinha_w		varchar(30);
ie_permite_escolher_esp_w	varchar(1);
lista_informacao_w		varchar(800) := '';
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
nr_seq_agenda_w			agenda_consulta.nr_sequencia%type;
ie_import_CIDs_w		varchar(1);
ie_CIDs_ges_vagas_w	varchar(1);
cd_cid_principal_w	gestao_vaga.cd_cid_principal%type;
nr_seq_agenda_gestao_w	varchar(255);
cd_tipo_agenda_gestao_w bigint;
dt_diagnostico_w		timestamp;
qt_atend_vinc_agenda_w	bigint := 0;

procedure gravar_atendimento_agenda( nr_seq_agenda_pp bigint ) is
;
BEGIN

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '')then
		if (cd_tipo_agenda_p in (3,4,5)) then
			select 	count(*)
			into STRICT	qt_atend_vinc_agenda_w
			from	agenda_consulta
			where 	nr_atendimento = nr_atendimento_p;
		
			if ( qt_atend_vinc_agenda_w = 0) then
				update	agenda_consulta
				set		nr_atendimento = nr_atendimento_p
				where	nr_sequencia = nr_seq_agenda_pp;
			end if;
		elsif ( cd_tipo_agenda_p in (1,2)) then
			select 	count(*)
			into STRICT	qt_atend_vinc_agenda_w
			from	agenda_paciente
			where 	nr_atendimento = nr_atendimento_p;
		
			if ( qt_atend_vinc_agenda_w = 0) then
				update	agenda_paciente
				set		nr_atendimento = nr_atendimento_p
				where	nr_sequencia = nr_seq_agenda_pp;
			end if;
		end if;
	end if;

	CALL executar_evento_age_eup_js('GA', cd_tipo_agenda_p, nr_seq_agenda_pp, cd_estabelecimento_w, nm_usuario_p);
end;
	
	
begin

/* 
PROCEDURE CRIADA PARA O EVENTO AFTERPOST COMUM PARA A PASTA COMPLETO E PASTA EXAMES/PROCED
*/
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
qt_dias_internacao_w := Obter_param_Usuario(916, 99, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_dias_internacao_w);
ie_perfil_cih_comunic_w := Obter_param_Usuario(916, 132, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_perfil_cih_comunic_w);
qt_idade_min_pagador_w := Obter_param_Usuario(916, 149, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_idade_min_pagador_w);
ds_email_pac_orcamento_w := Obter_param_Usuario(916, 193, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ds_email_pac_orcamento_w);
ie_atend_fila_espera_w := Obter_param_Usuario(916, 267, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atend_fila_espera_w);
ie_vincula_orcam_auto_w := Obter_param_Usuario(916, 271, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vincula_orcam_auto_w);
ie_resp_pag_atend_w := Obter_param_Usuario(916, 340, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_resp_pag_atend_w);
ie_mostra_tempo_espera_w := Obter_param_Usuario(916, 366, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_mostra_tempo_espera_w);
qt_min_tempo_espera_w := Obter_param_Usuario(916, 388, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_min_tempo_espera_w);
ie_gerar_pagador_w := Obter_param_Usuario(916, 394, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_pagador_w);
ie_obter_ult_diag_w := Obter_param_Usuario(916, 429, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_obter_ult_diag_w);
ie_atualiza_dados_resp_w := Obter_param_Usuario(916, 473, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_dados_resp_w);
ie_gera_autorizacao_w := Obter_param_Usuario(916, 478, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gera_autorizacao_w);
ie_perm_vincular_orc_apro_w := Obter_param_Usuario(916, 510, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_perm_vincular_orc_apro_w);
ie_gerar_pront_auto_w := Obter_param_Usuario(916, 523, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_pront_auto_w);
ie_prescr_cult_positiva_w := Obter_param_Usuario(916, 587, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_prescr_cult_positiva_w);
ie_cid_age_cirurg_w := Obter_param_Usuario(916, 590, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cid_age_cirurg_w);
ie_ult_diag_pac_espera_w := Obter_param_Usuario(916, 649, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_ult_diag_pac_espera_w);
ie_tipo_atend_age_cirurg_w := Obter_param_Usuario(916, 736, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_atend_age_cirurg_w);
ie_reg_triagem_pa_w := Obter_param_Usuario(916, 762, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_reg_triagem_pa_w);
ie_utiliza_conv_cadastro_w := Obter_param_Usuario(916, 771, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_utiliza_conv_cadastro_w);
ie_cid_age_exame_w := Obter_param_Usuario(916, 796, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cid_age_exame_w);
ie_consis_laudo_preenchido_w := Obter_param_Usuario(916, 809, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consis_laudo_preenchido_w);
ie_cid_age_consulta_w := Obter_param_Usuario(916, 890, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cid_age_consulta_w);
ie_tipo_atend_isol_w := Obter_param_Usuario(916, 895, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_atend_isol_w);
ie_permite_escolher_esp_w := Obter_param_Usuario(916, 909, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_escolher_esp_w);
ie_apre_med_cartao_fide_w := Obter_param_Usuario(916, 937, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_apre_med_cartao_fide_w);
ie_envio_alerta_classif_pac_w := Obter_param_Usuario(916, 957, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_envio_alerta_classif_pac_w);
ie_gerar_volume_pront_intern_w := Obter_param_Usuario(916, 961, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_volume_pront_intern_w);
ie_vinc_prescr_pac_w := Obter_param_Usuario(916, 978, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vinc_prescr_pac_w);
ie_copiar_precaucao_cih_w := Obter_param_Usuario(916, 1058, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_copiar_precaucao_cih_w);
ie_consiste_auto_w := Obter_param_Usuario(916, 1080, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_auto_w);
qt_dias_orcamento_w := Obter_param_Usuario(916, 1087, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_dias_orcamento_w);
ie_consulta_ofta_w := Obter_param_Usuario(916, 1091, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consulta_ofta_w);
ie_import_CIDs_w := Obter_param_Usuario(916, 1191, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_import_CIDs_w);
ie_CIDs_ges_vagas_w := Obter_param_Usuario(916, 1198, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_CIDs_ges_vagas_w);
ie_cid_age_servico_w := Obter_param_Usuario(916, 1200, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cid_age_servico_w);

ie_atualiza_pront_tipo_atend_w := Obter_param_Usuario(941, 162, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_pront_tipo_atend_w);

ie_transf_laudo_atend_w := Obter_param_Usuario(1123, 95, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_transf_laudo_atend_w);

if (ie_import_CIDs_w = 'S' and
	ie_cid_age_cirurg_w = 'S' and
	(nr_seq_gestao_p IS NOT NULL AND nr_seq_gestao_p::text <> '')) then

	select 	nr_seq_agenda,
			cd_tipo_agenda
	into STRICT 	nr_seq_agenda_gestao_w,
			cd_tipo_agenda_gestao_w
	from 	gestao_vaga
	where 	nr_sequencia = nr_seq_gestao_p;
	
	if ((nr_seq_agenda_gestao_w IS NOT NULL AND nr_seq_agenda_gestao_w::text <> '') and
		cd_tipo_agenda_gestao_w = 1) then
	
		ie_retorno_cid_w := gerar_diagnostico_doenca_eup(nr_atendimento_p, nr_seq_agenda_gestao_w, nm_usuario_p, cd_estabelecimento_w, ie_retorno_cid_w);
	
	end if;

end if;

--eu
if (ie_CIDs_ges_vagas_w = 'S' and
		(nr_seq_gestao_p IS NOT NULL AND nr_seq_gestao_p::text <> '')) then

		begin
			select 	cd_cid_principal
			into STRICT 	cd_cid_principal_w
			from 	gestao_vaga 
			where 	nr_sequencia = nr_seq_gestao_p
			and 	coalesce(nr_seq_agenda::text, '') = '';

		exception
		when others then
			cd_cid_principal_w := null;
		end;

	if (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '') then
		dt_diagnostico_w := clock_timestamp();
	
		insert into  diagnostico_medico(
			nr_atendimento,
			dt_diagnostico,                 
			ie_tipo_diagnostico,           
			cd_medico,                      
			dt_atualizacao,                 
			nm_usuario)
		values (
			nr_atendimento_p,
			dt_diagnostico_w,		
			1,
			cd_medico_resp_p,
			clock_timestamp(),
			nm_usuario_p);			
				
		insert into diagnostico_doenca(
			nr_atendimento,
			dt_diagnostico,          
			cd_doenca,              
			dt_atualizacao,
			nm_usuario)        
		values (
			nr_atendimento_p,
			dt_diagnostico_w,
			cd_cid_principal_w,
			clock_timestamp(),
			nm_usuario_p);
			
			ie_retorno_cid_w := 'S';
	end if;
end if;
--fim eu
if (coalesce(nr_seq_agenda_p,0) > 0) and
	((ie_cid_age_exame_w = 'S' AND cd_tipo_agenda_p = 2) or
	(ie_cid_age_consulta_w = 'S' AND cd_tipo_agenda_p = 3) or
	(ie_cid_age_cirurg_w = 'S' AND cd_tipo_agenda_p = 1) or
	(ie_cid_age_servico_w = 'S' AND cd_tipo_agenda_p = 5)) then
	
	ie_retorno_cid_w := gerar_diagnostico_doenca_eup(nr_atendimento_p, nr_seq_agenda_p, nm_usuario_p, cd_estabelecimento_w, ie_retorno_cid_w);
end if;


if (ie_tipo_atend_age_cirurg_w IS NOT NULL AND ie_tipo_atend_age_cirurg_w::text <> '') and (obter_se_contido_entre_virgula(ie_tipo_atend_age_cirurg_w, ie_tipo_atendimento_p) = 'S') then
	ds_msg_vincula_agenda_w := substr(obter_se_vinc_atendimento(nr_atendimento_p, 'D'),1,255);
	nr_seq_vincula_agenda_w := obter_se_vinc_atendimento(nr_atendimento_p, 'C');
	if (ds_msg_vincula_agenda_w IS NOT NULL AND ds_msg_vincula_agenda_w::text <> '') and (coalesce(nr_seq_vincula_agenda_w,0) > 0) then
		ds_msg_vincula_agenda_p := ds_msg_vincula_agenda_w;
		nr_seq_vincula_agenda_p := nr_seq_vincula_agenda_w;
	end if;
end if;

if (ie_reg_triagem_pa_w = 'S') and (coalesce(ie_tipo_atendimento_p,0) = 3) then
	
	ie_valida_regra_triagem_w := validar_atend_regra_triagem(cd_estabelecimento_w,ie_clinica_p,to_char(dt_entrada_p,'dd/MM/yyyy hh24:mi:ss'), nr_seq_classificacao_p);
	
	if (ie_valida_regra_triagem_w = 'S') then
		CALL gerar_atend_triagem(nr_atendimento_p, nm_usuario_p);
	end if;

end if;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (ie_tipo_convenio_p = 3) then
	
	select	max(trim(both cd_cep))
	into STRICT	cd_cep_w
	from	compl_pessoa_fisica
	where	ie_tipo_complemento = 1   
	and  	cd_pessoa_fisica = cd_pessoa_fisica_p;	
	
	if (cd_cep_w IS NOT NULL AND cd_cep_w::text <> '') then
		
		select	coalesce(sum(qt_w),0)
		into STRICT	qt_cep_w
		from (SELECT coalesce(count(*),0)
		      qt_w
                      from   cep_municipio        
                      where  cd_cep = cd_cep_w    
                      
union
                       
                      SELECT coalesce(count(*),0)      
                      from   sus_cep              
                      where  cd_cep = cd_cep_w) alias7;
			
		if (qt_cep_w = 0) then
			ds_msg_cep_p := substr(obter_texto_tasy(94314,wheb_usuario_pck.get_nr_seq_idioma),1,255);
		end if;
	end if;
end if;

if (ie_resp_pag_atend_w = 'S') then
	qt_idade_paciente_w := obter_idade_pf(cd_pessoa_fisica_p,clock_timestamp(),'A');
	if (qt_idade_paciente_w <= coalesce(qt_idade_min_pagador_w,0)) then
	ds_msg_informa_pagador_p := substr(obter_texto_dic_objeto(95627, wheb_usuario_pck.get_nr_seq_idioma, 'ITEM='||qt_idade_min_pagador_w),1,255);
	end if;
end if;

if (coalesce(ie_tipo_convenio_p,0) = 3) and (coalesce(ie_tipo_atendimento_p,0) = 1) then
	CALL gerar_dias_ult_atend_sus(nr_atendimento_p, cd_estabelecimento_w);
end if;

if (cd_doenca_p IS NOT NULL AND cd_doenca_p::text <> '') and (coalesce(nr_seq_pac_espera_p,0) > 0) then
	CALL Gerar_diagnostico_atend(nr_atendimento_p, cd_doenca_p, cd_medico_resp_p, nm_usuario_p, ie_tipo_diagnostico_p, ie_classif_doenca_p);
end if;

if (ie_atualiza_pront_tipo_atend_w = 'S') and (ie_tipo_atendimento_p = 1) then
	CALL same_atualizar_tipo_atend(cd_pessoa_fisica_p, nm_usuario_p);
end if;

if (coalesce(nr_atendimento_p,0) > 0) and (coalesce(ie_clinica_p,0) > 0)  then
	
	select	max(ie_tipo_guia)
	into STRICT	ie_tipo_guia_w
	from	atend_categoria_convenio
	where 	nr_atendimento = nr_atendimento_p;
	
	if (ie_tipo_guia_w IS NOT NULL AND ie_tipo_guia_w::text <> '') then
		CALL atualizar_tipo_guia_convenio(cd_estabelecimento_w, nr_atendimento_p, ie_tipo_guia_w, ie_clinica_p, nm_usuario_p);
	end if;
end if;


if (ie_novo_registro_p = 'S') then

	if (ie_novo_atend_cham_p = 'S') and (coalesce(nr_atendimento_p,0) > 0) then
	
			
		/* Esta parte (agendas) feita da mesma forma nas pasta completo e exames conforme conversado com o Analista das fun??es Daniel Donhini
		*/
		if (ie_novo_atend_lista_age_p = 'S') then
			CALL atualiza_atend_lista_age_js(nr_atendimento_p, ds_lista_age_exame_p, ds_lista_age_cons_p, ds_lista_age_serv_p, nm_usuario_p);
		end if;
		if (coalesce(nr_seq_agenda_p,0) > 0) then
		
			if (ie_novo_atend_lista_age_p = 'N') and
				((coalesce(cd_tipo_agenda_p,0) = 1) or (coalesce(cd_tipo_agenda_p,0) = 2)) then
	
				CALL atualizar_atend_agenda_pac_js(nr_seq_agenda_p, 0, null, nr_atendimento_p, ds_lista_age_exame_p, nm_usuario_p);
			end if;
			
			if (ds_lista_age_pac_p IS NOT NULL AND ds_lista_age_pac_p::text <> '') then
				lista_informacao_w := ds_lista_age_pac_p;
				while(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '')  loop
					begin
					tam_lista_w			:= length(lista_informacao_w);
					ie_pos_virgula_w	:= position(',' in lista_informacao_w);

					if (ie_pos_virgula_w <> 0) then
						nr_seq_agenda_w	:= (substr(lista_informacao_w,1,(ie_pos_virgula_w - 1)))::numeric;
						lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
					end if;
					gravar_atendimento_agenda(nr_seq_agenda_w);
				
					end;
				end loop;
			else
				gravar_atendimento_agenda(nr_seq_agenda_p);
				
			end if;
		
			if (ie_novo_atend_lista_age_p = 'S') then
				CALL executa_ev_ag_lista_eup_js(nr_seq_agenda_p, ds_lista_age_exame_p, ds_lista_age_cons_p, ds_lista_age_serv_p, 'GA', nm_usuario_p, cd_estabelecimento_w);
			end if;
		end if;
		
		if (coalesce(nr_seq_autorizacao_p,0) > 0) then
			CALL Vincular_atend_autorizacao(nr_seq_autorizacao_p, nr_atendimento_p, nm_usuario_p);
		end if;
	end if;

	
	if (ie_vinc_prescr_pac_w = 'S') then
		CALL Atualizar_atend_prescricao(nr_atendimento_p, 'GA');
	end if;

	if (ie_mostra_tempo_espera_w = 'S') and (ie_tipo_atendimento_p = 3) and (ie_clinica_p IS NOT NULL AND ie_clinica_p::text <> '') then
		
		qt_media_tempo_atend_min_w := obter_medica_tempo_atend(ie_tipo_atendimento_p, ie_clinica_p, clock_timestamp(), coalesce(qt_min_tempo_espera_w,40), qt_media_tempo_atend_min_w);
		if (coalesce(qt_media_tempo_atend_min_w,0) > 0) then
			ds_msg_tempo_espera_atend_p := substr(obter_texto_dic_objeto(95406, wheb_usuario_pck.get_nr_seq_idioma, 'ITEM='||qt_media_tempo_atend_min_w),1,255);
		end if;
	end if;

	if (ie_prescr_cult_positiva_w = 'S') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
		
		select count(distinct(d.nr_prescricao || ' - ' ||  d.dt_prescricao))
		into STRICT	qt_prescr_cult_positiva_p
		from 	exame_lab_result_item a,
			exame_lab_resultado b,
			exame_lab_result_antib c,
			prescr_medica d
		where	a.nr_seq_resultado = b.nr_seq_resultado
		and	a.nr_seq_resultado = c.nr_seq_resultado
		and	a.nr_sequencia	 = c.nr_seq_result_item
		and	b.nr_prescricao	 = d.nr_prescricao
		and	ie_resultado in ('I','R','S')
		and	(obter_data_aprov_lab(b.nr_prescricao, a.nr_seq_prescr) IS NOT NULL AND (obter_data_aprov_lab(b.nr_prescricao, a.nr_seq_prescr))::text <> '')
		and	d.cd_pessoa_fisica = cd_pessoa_fisica_p;
	end if;
	
	if (ie_gerar_pagador_w = 'S') and (ie_resp_pag_atend_w <> 'S') then
		ds_msg_idade_pagador_p := gerar_atend_pagador(nr_atendimento_p, coalesce(qt_idade_min_pagador_w,0), nm_usuario_p, cd_estabelecimento_w, obter_perfil_ativo, ds_msg_idade_pagador_p);
	end if;
	
	if (ie_obter_ult_diag_w = 'S') and
		((ie_ult_diag_pac_espera_w = 'S') or
		 ((ie_ult_diag_pac_espera_w <> 'S') and 
		  ((coalesce(nr_seq_pac_espera_p,0) > 0) and (cd_doenca_p IS NOT NULL AND cd_doenca_p::text <> '')))) then
		CALL replica_diagnostico_ult_atend(nr_atendimento_p, nm_usuario_p);
	end if;
	
	if (ie_consulta_ofta_w = 'S') then
		CALL gerar_consulta_oft_atend(nr_atendimento_p, nm_usuario_p, cd_estabelecimento_w);
	end if;
	
	if (ie_novo_atend_checkup_p = 'S') then
		CALL atualizar_checkup_js(nr_seq_checkup_p, nr_atendimento_p);
	end if;
	
	
	if (ie_tipo_atend_isol_w IS NOT NULL AND ie_tipo_atend_isol_w::text <> '') then
	
		select 	count(*)
		into STRICT	qt_atend_paciente_w	
		from  	atendimento_paciente a,
			atendimento_precaucao b
		where	a.nr_atendimento = b.nr_atendimento
		and	exists (SELECT 	1
				from    atend_precaucao_micro c,
					cih_microorganismo d
				where 	c.cd_microorganismo = d.cd_microorganismo
				and	b.nr_sequencia = c.nr_seq_atend_precaucao
				and	coalesce(d.ie_isolamento_permanente,'N') = 'S')		
				and 	a.nr_atendimento = (	select	max(nr_atendimento)
								from	atendimento_paciente
								where	cd_pessoa_fisica = cd_pessoa_fisica_p
								and	nr_atendimento <> nr_atendimento_p)
		and	a.cd_pessoa_fisica = cd_pessoa_fisica_p;
		if (qt_atend_paciente_w > 0) and (obter_se_contido_entre_virgula(ie_tipo_atend_isol_w, ie_tipo_atendimento_p) = 'S')  then
			CALL Atualiza_precaucao_isolamento(cd_pessoa_fisica_p, nr_atendimento_p, nm_usuario_p);
		end if;
	end if;
	
	CALL gerar_evento_atend_pa(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w);
	CALL gerar_evento_bac_multirresist(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w);
	CALL enviar_comunic_reinternacao(nr_atendimento_p, cd_pessoa_fisica_p, ie_perfil_cih_comunic_w, qt_dias_internacao_w, nm_usuario_p, cd_estabelecimento_w);
	CALL gerar_evento_mol_infectocontag(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p,cd_estabelecimento_w);
	CALL gerar_evento_multirresistente(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w);
	CALL gerar_evento_inadimplente(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w);
	CALL gerar_sms_atend_regra(nr_atendimento_p, cd_estabelecimento_w, nm_usuario_p, cd_pessoa_fisica_p);
	
	if (coalesce(ie_envio_alerta_classif_pac_w,'AT') = 'AT') and (ie_novo_registro_p = 'S')then
		CALL gerar_evento_classif_atend(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w);
	end if;
	
	if (ie_utiliza_conv_cadastro_w = 'S') and (coalesce(nr_atendimento_p,0) > 0) then
		
		select	coalesce(max(cd_convenio),0)
		into STRICT	cd_conv_atend_w
		from	atend_categoria_convenio
		where	nr_atendimento = nr_atendimento_p;
		
		if (coalesce(cd_conv_atend_w,0) = 0) then
			SELECT * FROM obter_conv_cat_cadastro(cd_pessoa_fisica_p, cd_categoria_w, cd_convenio_w, cd_carteirinha_w) INTO STRICT cd_categoria_w, cd_convenio_w, cd_carteirinha_w;
			
			if (coalesce(cd_convenio_w,0) > 0) then
				cd_convenio_p := cd_convenio_w;
			end if;
			if (cd_categoria_w IS NOT NULL AND cd_categoria_w::text <> '') then
				cd_categoria_p := cd_categoria_w;
			end if;
			if (cd_carteirinha_w IS NOT NULL AND cd_carteirinha_w::text <> '') then
				cd_carteirinha_p := cd_carteirinha_w;
			end if;
		end if;
	end if;
	
	if (ie_perm_vincular_orc_apro_w <> 'N') and (ie_vincula_orcam_auto_w = 'N') then
		qt_orc_pac_aprovado_p := obter_se_possui_orca_pac(cd_pessoa_fisica_p, dt_entrada_p, qt_dias_orcamento_w, ie_perm_vincular_orc_apro_w, ie_tipo_atendimento_p);
	end if;
	if (coalesce(ie_tipo_atendimento_p,0) = 1) then
	
		CALL gerar_evento_reinternacao(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w);
		CALL gerar_evento_reint_alerta(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w);
		
		if (ie_gerar_volume_pront_intern_w = 'S') then
			CALL inserir_same_prontuario_atend(nr_atendimento_p, nm_usuario_p, cd_estabelecimento_w);
		end if;
		
		if	((ie_atend_fila_espera_w = 'S') or (ie_atend_fila_espera_w = 'L')) then
			ie_pac_fila_espera_w := Obter_se_pac_fila_espera(cd_pessoa_fisica_p);
			
			if (ie_pac_fila_espera_w = 'S') then
				ds_msg_fila_espera_p := substr(obter_texto_tasy(95422,wheb_usuario_pck.get_nr_seq_idioma),1,255);
				ie_atend_fila_espera_p := ie_atend_fila_espera_w;
			end if;
		end if;
	
		if (ie_transf_laudo_atend_w = 'S') and (coalesce(ie_tipo_convenio_p,0) = 3) and (coalesce(nr_atendimento_p,0) > 0) then
		
			CALL sus_transfere_laudo_atend(nr_atendimento_p, nm_usuario_p);
		end if;
	end if;
	
	CALL Atualizar_Atend_Triagem(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_w);
	CALL define_prioridade_atend(nr_atendimento_p, ie_tipo_atendimento_p);
	if (ie_copiar_precaucao_cih_w = 'S') and (coalesce(nr_atendimento_p,0) > 0) then
		CALL cih_copiar_precaucao_atend(cd_pessoa_fisica_p, nr_atendimento_p, nm_usuario_p);
	end if;
	
	if (coalesce(nr_seq_atend_futuro_p,0) > 0) and (coalesce(nr_atendimento_p,0) > 0) then
		
		SELECT * FROM atuali_atend_categ_convenio(nm_usuario_p, nr_seq_atend_futuro_p, cd_conv_atend_futu_w, cd_categ_atend_futu_w, cd_plano_convenio_p, cd_usuario_convenio_p, dt_validade_carteira_p, qt_dia_internacao_p, ie_guia_autorizada_w, dt_validade_cart_glosa_p, nr_doc_convenio_p, cd_senha_p, qt_dias_autoriz_w) INTO STRICT cd_conv_atend_futu_w, cd_categ_atend_futu_w, cd_plano_convenio_p, cd_usuario_convenio_p, dt_validade_carteira_p, qt_dia_internacao_p, ie_guia_autorizada_w, dt_validade_cart_glosa_p, nr_doc_convenio_p, cd_senha_p, qt_dias_autoriz_w;
		if (coalesce(cd_conv_atend_futu_w,0) > 0) then
			cd_conv_atend_fut_p := cd_conv_atend_futu_w;
			if (cd_categ_atend_futu_w IS NOT NULL AND cd_categ_atend_futu_w::text <> '') then
				cd_categ_atend_fut_p := cd_categ_atend_futu_w;
			end if;
		end if;
		
	end if;
end if;

if (coalesce(ie_tipo_convenio_p,0) = 3) and (coalesce(ie_tipo_atendimento_p,0) = 1) and (coalesce(nr_atendimento_p,0) > 0) then
	
	if (ie_consis_laudo_preenchido_w = 'S') and
		((ie_edicao_registro_p = 'S') or (ie_novo_registro_p = 'S')) then
		ds_msg_laudo_preenchido_p := substr(obter_texto_tasy(115443,wheb_usuario_pck.get_nr_seq_idioma),1,255);
	end if;

	CALL sus_transfere_laudo_aih(nr_atendimento_p, cd_estabelecimento_w, nm_usuario_p);
	
end if;
	
if (ie_carater_inter_sus_p IS NOT NULL AND ie_carater_inter_sus_p::text <> '') and (coalesce(ie_tipo_atendimento_p,0) > 0) then
	ie_perm_auto_conv_p:= Obter_Regra_Visual_Autor(ie_tipo_atendimento_p, ie_carater_inter_sus_p);
	if (ie_perm_auto_conv_p = 'S') then
		SELECT * FROM obter_msg_aut_convenio_eup_js(nr_atendimento_p, ie_consiste_auto_w, nm_usuario_p, ds_msg_auto_conve_perm_p, ds_msg_auto_conve_p) INTO STRICT ds_msg_auto_conve_perm_p, ds_msg_auto_conve_p;
	end if;
end if;
if (ds_email_pac_orcamento_w IS NOT NULL AND ds_email_pac_orcamento_w::text <> '') then
	CALL enviar_email_paciente_orc(ds_email_pac_orcamento_w, cd_pessoa_fisica_p, nm_usuario_p);
end if;
if (ie_apre_med_cartao_fide_w = 'S') and (cd_medico_resp_p IS NOT NULL AND cd_medico_resp_p::text <> '') then
	
	select	count(*)
	into STRICT	qt_cartao_fidel_p
	from  	cartao_fidelidade a, pf_cartao_fidelidade b
	where 	a.nr_sequencia = b.nr_seq_cartao
	and   	a.ie_situacao  = 'A'
	and   	cd_pessoa_fisica  = cd_medico_resp_p;

end if;
if (ie_gera_autorizacao_w = 'S') then
	CALL gerar_autor_regra(nr_atendimento_p, null, null, null, null, null, 'AT', nm_usuario_p, null, null, null, null, null, null);
end if;

if (ie_atualiza_dados_resp_w <> 'N') and (cd_pessoa_responsavel_p IS NOT NULL AND cd_pessoa_responsavel_p::text <> '') then
	CALL Inserir_dados_Responsavel(cd_pessoa_responsavel_p, cd_pessoa_fisica_p, nm_usuario_p);
end if;

if (ie_gerar_pront_auto_w = 'S') then
	select	coalesce(max(nr_prontuario),0)
	into STRICT	nr_prontuario_p
        from    pessoa_fisica                  
        where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	
	if (nr_prontuario_w = 0) then
		nr_prontuario_p := nr_prontuario_w;
	end if;
end if;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (coalesce(nr_atendimento_p,0) > 0) then
	CALL vincular_atend_fila_espera(cd_pessoa_fisica_p, nr_atendimento_p);
end if;

select	count(*)
into STRICT	qt_regra_alta_w
from 	regra_alta
where 	ie_situacao = 'A'
and 	cd_estabelecimento = cd_estabelecimento_w;
if (qt_regra_alta_w > 0) then
	CALL gerar_alta_tipo_atend_regra(nr_atendimento_p, nm_usuario_p, cd_estabelecimento_w);
end if;

if (ie_regra_lancto_auto_p = 'S') then
	CALL gerar_lancamento_automatico(nr_atendimento_p, null, 543, nm_usuario_p, null, null, null, null, null, null);
end if;

if (coalesce(nr_internacao_aghos_p,0) > 0) then
	
	select	max(ie_situacao)
	into STRICT	ie_situacao_aghos_w
	from	solicitacao_tasy_aghos
	where	nr_internacao = nr_internacao_aghos_p
	order by 1;
	if (ie_situacao_aghos_w = 'AL') then
		update	solicitacao_tasy_aghos
                set	nr_atendimento = nr_atendimento_p, 
                        ie_situacao = 'I'
                where	nr_internacao = nr_internacao_aghos_p;
	end if;	
end if;

ds_msg_regra_carater_conv_p := obter_mens_regra_carat_conv(ie_carater_inter_sus_p, ie_tipo_convenio_p);
CALL atualiza_precaucao_isol_acomp(nr_atendimento_p, nm_usuario_p);

ie_retorno_cid_p := ie_retorno_cid_w;
SELECT * FROM permite_escol_esp_medico_js(nr_atendimento_p, 'P', ie_permite_escolher_esp_w, cd_medico_resp_p, nm_usuario_p, ds_msg_esp_quest_p, ie_permit_esp_p) INTO STRICT ds_msg_esp_quest_p, ie_permit_esp_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atend_pac_aftpost_comun_eup_js ( nr_seq_autorizacao_p text, ds_lista_age_serv_p text, ds_lista_age_cons_p text, ds_lista_age_exame_p text, ds_lista_age_pac_p text, ie_novo_atend_lista_age_p text, ie_novo_atend_cham_p text, nr_internacao_aghos_p bigint, nr_seq_atend_futuro_p bigint, ie_regra_lancto_auto_p text, ie_edicao_registro_p text, cd_pessoa_responsavel_p text, ie_carater_inter_sus_p text, nr_seq_checkup_p bigint, ie_novo_atend_checkup_p text, ie_classif_doenca_p text, ie_tipo_diagnostico_p bigint, cd_medico_resp_p text, cd_doenca_p text, nr_seq_pac_espera_p bigint, ie_tipo_convenio_p bigint, cd_pessoa_fisica_p text, nr_seq_classificacao_p bigint, dt_entrada_p timestamp, ie_clinica_p bigint, ie_tipo_atendimento_p bigint, nr_atendimento_p bigint, cd_tipo_agenda_p bigint, nr_seq_agenda_p bigint, ie_novo_registro_p text, nm_usuario_p text, nr_seq_gestao_p text, ie_retorno_cid_p INOUT text, ds_msg_cep_p INOUT text, ds_msg_idade_pagador_p INOUT text, ds_msg_informa_pagador_p INOUT text, ds_msg_vincula_agenda_p INOUT text, nr_seq_vincula_agenda_p INOUT bigint, ds_msg_auto_conve_perm_p INOUT text, ds_msg_auto_conve_p INOUT text, ie_perm_auto_conv_p INOUT text, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, qt_prescr_cult_positiva_p INOUT bigint, ds_msg_tempo_espera_atend_p INOUT text, ds_msg_fila_espera_p INOUT text, ie_atend_fila_espera_p INOUT text, qt_orc_pac_aprovado_p INOUT bigint, qt_cartao_fidel_p INOUT bigint, nr_prontuario_p INOUT bigint, ds_msg_laudo_preenchido_p INOUT text, cd_conv_atend_fut_p INOUT bigint, cd_categ_atend_fut_p INOUT text, cd_plano_convenio_p INOUT text, cd_usuario_convenio_p INOUT text, dt_validade_carteira_p INOUT timestamp, qt_dia_internacao_p INOUT bigint, dt_validade_cart_glosa_p INOUT timestamp, nr_doc_convenio_p INOUT text, cd_senha_p INOUT text, ds_msg_regra_carater_conv_p INOUT text, cd_carteirinha_p INOUT text, ds_msg_esp_quest_p INOUT text, ie_permit_esp_p INOUT text) FROM PUBLIC;

