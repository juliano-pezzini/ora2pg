-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE solicitar_devolucao_pix (cd_movto_pix_p bigint, nm_usuario_p text, cd_devolucao_pix_p bigint default null) AS $body$
DECLARE


    cd_cobranca_pix_w pix_movimento.nr_seq_cobranca%type;
    vl_movimento_w pix_movimento.vl_movimento%type;

    cd_devolucao_pix_w pix_devolucao.nr_sequencia%type;
    ds_endtoend_id_w pix_devolucao.ds_rtr_id%type;

    nr_seq_transmissao_w pix_transmissao.nr_sequencia%type;

    ds_data_w varchar(1000);
    ds_result_w varchar(1000);


BEGIN

    select  max(nr_seq_cobranca)
    into STRICT    cd_cobranca_pix_w
    from    pix_movimento
    where   nr_sequencia = cd_movto_pix_p;

    /* Caso seja solicitada uma nova devolucao para determinado movimento */

    if (coalesce(cd_devolucao_pix_p::text, '') = '') then
        begin
            select  nextval('pix_devolucao_seq')
            into STRICT    cd_devolucao_pix_w
;

            select  max(vl_movimento),
                    max(ds_endtoend_id)
            into STRICT    vl_movimento_w,
                    ds_endtoend_id_w
            from    pix_movimento
            where   nr_sequencia = cd_movto_pix_p;

            insert into pix_devolucao(
                            nr_sequencia,
                            dt_atualizacao,
                            nm_usuario,
                            nr_seq_movto_pix,
                            vl_devolucao,
                            ds_rtr_id,
                            dt_horario_solicitacao,
                            ie_status_devolucao)
                    values (
                            cd_devolucao_pix_w,
                            clock_timestamp(),
                            nm_usuario_p,
                            cd_movto_pix_p,
                            vl_movimento_w,
                            ds_endtoend_id_w,
                            clock_timestamp(),
                            'NAO_REGISTRADA');
        end;
    else /* Caso seja somente realizada nova solicitacao ao PSP de uma solicitacao de devolucao ja existente */
        cd_devolucao_pix_w := cd_devolucao_pix_p;
    end if;

    select nextval('pix_transmissao_seq')
    into STRICT nr_seq_transmissao_w
;

    insert into pix_transmissao(
        nr_sequencia,
        nr_seq_pix_cob,
        dt_transmissao,
        nm_usuario,
        ie_tipo_transmissao)
    values (
        nr_seq_transmissao_w,
        cd_cobranca_pix_w,
        clock_timestamp(),
        nm_usuario_p,
        'R'
    );

    commit;

    ds_data_w := '{ "paymentReturnId" : ' || cd_devolucao_pix_w || ',' ||
                   ' "transactionId" : ' || nr_seq_transmissao_w || ', ' ||
                   ' "user" : "' || nm_usuario_p || '" ' ||
                   '}';

    ds_result_w := BIFROST.SEND_INTEGRATION('pix.solicitar.devolucao',
    'com.philips.tasy.integration.pix.api.paymenttransaction.business.PaymentReturnCallBack',
    ds_data_w , nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE solicitar_devolucao_pix (cd_movto_pix_p bigint, nm_usuario_p text, cd_devolucao_pix_p bigint default null) FROM PUBLIC;

