-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_longa_permanencia ( nr_atendimento_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_perm_sus_w			bigint;
qt_perm_real_w			bigint;
qt_longa_perm_w			bigint;
dt_entrada_unidade_w		timestamp;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_setor_atendimento_w		integer;
cd_estabelecimento_w		integer;
nr_seq_atepacu_w			bigint;
nr_seq_interno_w			bigint;
cd_cgc_prestador_w		varchar(14);
nr_sequencia_w			bigint;
nr_aih_w				bigint;
vl_procedimento_w			double precision	:= 0;
vl_medico_w			double precision	:= 0;
vl_anestesista_w			double precision	:= 0;
vl_materiais_w			double precision	:= 0;
cd_medico_solic_w			varchar(10);
cd_medico_resp_w			varchar(10);
cd_medico_req_laudo_w		varchar(10);
cd_medico_resp_laudo_w		varchar(10);
ie_medico_w			varchar(10)	:= 'N';
cd_medico_executor_w		varchar(10);
cd_procedimento_real_w		bigint;
ie_origem_proc_real_w		bigint;
dt_procedimento_w			timestamp;
dt_periodo_inicial_w		timestamp;
ie_data_execucao_w		varchar(10) 	:= 'N';
ie_corrige_loga_permanecia_w	varchar(10) 	:= 'N';
ie_ultrapassa_qtd_max_w		varchar(10) 	:= 'S';
cd_estab_usuario_w		integer 	:= 0;
ie_qtd_perm_informada_w		varchar(10) 	:= 'N';
qt_longa_permanencia_w		bigint 	:= null;
ie_ajuste_perm_comp_w		varchar(10) 	:= 'N';


BEGIN

begin
cd_estab_usuario_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
exception
when others then
	cd_estab_usuario_w := 0;
end;

ie_medico_w		:= coalesce(Obter_Valor_Param_Usuario(1123,54,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
ie_data_execucao_w	:= coalesce(Obter_Valor_Param_Usuario(1123,65,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
ie_ultrapassa_qtd_max_w := coalesce(Obter_Valor_Param_Usuario(1123,117,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'S');
ie_qtd_perm_informada_w	:= coalesce(Obter_Valor_Param_Usuario(1123,183,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
ie_ajuste_perm_comp_w	:= coalesce(Obter_Valor_Param_Usuario(1123,187,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');

begin
select	qt_longa_permanencia
into STRICT	qt_longa_permanencia_w
from	sus_aih_unif
where	nr_atendimento		= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p;
exception
when others then
	qt_longa_permanencia_w := null;
end;

if (coalesce(qt_longa_permanencia_w::text, '') = '') then
	begin

	begin
	select	qt_longa_permanencia
	into STRICT	qt_longa_permanencia_w
	from	sus_dados_aih_conta
	where	nr_interno_conta = nr_interno_conta_p;
	exception
	when others then
		qt_longa_permanencia_w := null;
	end;

	end;
end if;
/* Selecao das informacoes para geracao do procedimento Longa permanencia */

SELECT * FROM Sus_Calcular_Longa_Perm_Unif(nr_atendimento_p, nr_interno_conta_p, nm_usuario_p, cd_procedimento_w, ie_origem_proced_w, qt_perm_sus_w, qt_perm_real_w, qt_longa_perm_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w, qt_perm_sus_w, qt_perm_real_w, qt_longa_perm_w;

if (coalesce(ie_qtd_perm_informada_w,'N') = 'S') and (qt_longa_permanencia_w IS NOT NULL AND qt_longa_permanencia_w::text <> '') then
	qt_longa_perm_w := qt_longa_permanencia_w;
end if;

if (ie_ultrapassa_qtd_max_w = 'N') and (qt_longa_perm_w > 99) then
	qt_longa_perm_w := 99;
end if;

begin
update	sus_aih_unif
set	qt_permanencia_sus	= qt_perm_sus_w,
	qt_permanencia_real 	= qt_perm_real_w,
	qt_longa_permanencia	= qt_longa_perm_w
where	nr_atendimento		= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
	qt_perm_sus_w	:= qt_perm_sus_w;
end;

begin
select	nr_aih,
	cd_procedimento_real,
	ie_origem_proc_real
into STRICT	nr_aih_w,
	cd_procedimento_real_w,
	ie_origem_proc_real_w
from	sus_aih_unif
where	nr_atendimento		= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
	nr_aih_w	:= 0;

	select	max(cd_procedimento_solic),
		max(ie_origem_proced),
		max(cd_medico_requisitante),
		max(cd_medico_responsavel)
	into STRICT	cd_procedimento_real_w,
		ie_origem_proc_real_w,
		cd_medico_req_laudo_w,
		cd_medico_resp_laudo_w
	from	sus_laudo_paciente
	where	nr_interno_conta	= nr_interno_conta_p
	and	nr_atendimento		= nr_atendimento_p
	and	ie_classificacao 	= 1
	and	ie_tipo_laudo_sus 	= 0;
end;

select	max(cd_estabelecimento),
	max(dt_periodo_inicial)
into STRICT	cd_estabelecimento_w,
	dt_periodo_inicial_w
from	conta_paciente
where 	nr_interno_conta	= nr_interno_conta_p;

ie_corrige_loga_permanecia_w := obter_valor_param_usuario(1123,89,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w);

if (qt_longa_perm_w = 0) and (obter_se_regra_permanencia(cd_estabelecimento_w,cd_procedimento_real_w,ie_origem_proc_real_w) = 'S') and (ie_corrige_loga_permanecia_w = 'S') then
	begin
	delete	FROM procedimento_paciente
	where	nr_atendimento		= nr_atendimento_p
	and	nr_interno_conta	= nr_interno_conta_p
	and	ie_origem_Proced	= 7
	and	cd_procedimento		= 0802010199
	and	coalesce(cd_motivo_exc_conta::text, '') = '';
	end;
end if;

if (qt_longa_perm_w	> 0)  and (obter_se_regra_permanencia(cd_estabelecimento_w,cd_procedimento_real_w,ie_origem_proc_real_w) = 'S') then
	begin

	cd_procedimento_w	:= 0802010199;

	begin
	select 	dt_entrada_unidade,
		cd_convenio,
		cd_categoria,
		cd_setor_atendimento,
		cd_estabelecimento,
		nr_sequencia
	into STRICT	dt_entrada_unidade_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_setor_atendimento_w,
		cd_estabelecimento_w,
		nr_seq_atepacu_w
	from 	atendimento_paciente c,
		atend_categoria_convenio b,
		atend_paciente_unidade a
	where	c.nr_atendimento	= nr_atendimento_p
	and	a.nr_atendimento 	= c.nr_atendimento
	and	a.nr_atendimento	= b.nr_atendimento
	and	b.nr_seq_interno	= obter_atecaco_atendimento(c.nr_atendimento)
	and	obter_classif_setor(a.cd_setor_atendimento) in (3,4)
	and	a.dt_entrada_unidade	= (	SELECT 	max(d.dt_entrada_unidade)
						from 	atend_paciente_unidade d
						where 	obter_classif_setor(d.cd_setor_atendimento) in (3,4)
						and	d.nr_Atendimento = c.nr_atendimento);
	exception
		when no_data_found then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(191752);
			/* Paciente não teve nenhuma passagem por um setor de Internação. */

		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(191753);
			/* Problema na leitura dos dados da unidade. */

	end;
	/* selecionar ultimo setor de internação */

	nr_seq_interno_w	:= coalesce(obter_atepacu_paciente(nr_atendimento_p,'IA'),0);

	if (nr_seq_interno_w > 0) and (nr_seq_interno_w <> nr_seq_atepacu_w) then
		select	dt_entrada_unidade,
			cd_setor_atendimento,
			nr_seq_interno
		into STRICT	dt_entrada_unidade_w,
			cd_setor_atendimento_w,
			nr_seq_atepacu_w
		from	atend_paciente_unidade
		where	nr_atendimento	= nr_atendimento_p
		and	nr_seq_interno	= nr_seq_interno_w;
	end if;

	select	cd_cgc
	into STRICT	cd_cgc_prestador_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_w;
	/* Delecao de longa permanecia caso exista alguma */

	delete	FROM procedimento_paciente
	where	nr_atendimento		= nr_atendimento_p
	and	nr_interno_conta	= nr_interno_conta_p
	and	ie_origem_Proced	= 7
	and	cd_procedimento		= cd_procedimento_w
	and	coalesce(cd_motivo_exc_conta::text, '') = '';

	select	nextval('procedimento_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	if (ie_medico_w	<> 'N') then

		begin
		select	cd_medico_solic,
			cd_medico_responsavel
		into STRICT	cd_medico_solic_w,
			cd_medico_resp_w
		from	sus_aih_unif
		where	nr_interno_conta	= nr_interno_conta_p;
		exception
			when others then
			if (coalesce(cd_medico_resp_laudo_w,'X') <> 'X') then
				cd_medico_resp_w := cd_medico_resp_laudo_w;
			else
				cd_medico_resp_w	:= null;
			end if;
			if (coalesce(cd_medico_req_laudo_w,'X') <> 'X') then
				cd_medico_solic_w := cd_medico_req_laudo_w;
			else
				cd_medico_solic_w	:= null;
			end if;
		end;

		if (ie_medico_w	= 'R') then
			cd_medico_executor_w	:= cd_medico_resp_w;
		elsif (ie_medico_w	= 'S') then
			cd_medico_executor_w	:= cd_medico_solic_w;
		end if;
	end if;

	dt_procedimento_w	:= dt_entrada_unidade_w;

	if (ie_data_execucao_w		= 'S') then
		dt_procedimento_w		:= dt_periodo_inicial_w;
	end if;

	insert into procedimento_paciente(	nr_atendimento,
		dt_entrada_unidade,
		cd_procedimento,
		dt_procedimento,
		qt_procedimento,
		dt_atualizacao,
		nm_usuario,
		cd_convenio,
		cd_categoria,
		dt_prescricao,
		cd_setor_atendimento,
		ie_origem_proced,
		vl_procedimento,
		vl_medico,
		vl_anestesista,
		vl_materiais,
		nr_aih,
		tx_procedimento,
		ie_valor_informado,
		nr_sequencia,
		dt_inicio_procedimento,
		ie_classif_sus,
		cd_cgc_prestador,
		nr_interno_conta,
		nr_seq_atepacu,
		nr_seq_aih,
		ds_observacao,
		cd_medico_executor)
	values (	nr_atendimento_p,
		dt_entrada_unidade_w,
		cd_procedimento_w,
		coalesce(dt_procedimento_w,dt_entrada_unidade_w),
		qt_longa_perm_w,
		clock_timestamp(),
		'Tasy',
		cd_convenio_w,
		cd_categoria_w,
		dt_entrada_unidade_w,
		cd_setor_atendimento_w,
		7,
		vl_procedimento_w,
		vl_medico_w,
		vl_anestesista_w,
		vl_materiais_w,
		nr_aih_w,
		100,
		'N',
		nr_sequencia_w,
		dt_entrada_unidade_w,
		4,
		cd_cgc_prestador_w,
		nr_interno_conta_p,
		nr_seq_atepacu_w,
		0,
		Wheb_mensagem_pck.get_Texto(301533), /*'Param. AIH',*/
		cd_medico_executor_w);

	begin
	CALL Atualiza_Preco_Procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
	exception
		when others then
		dt_entrada_unidade_w := clock_timestamp();
	end;

	if (ie_ajuste_perm_comp_w = 'S') then
		CALL sus_ajustar_perm_competencia(nr_atendimento_p,nr_interno_conta_p,nr_sequencia_w,nm_usuario_p);
	end if;

	end;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_longa_permanencia ( nr_atendimento_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

