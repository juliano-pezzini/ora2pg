-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_resultado_exame ( nr_seq_cliente_p bigint, dt_exame_p timestamp, nr_seq_exame_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE




ds_calculo_w		varchar(255);
vl_exame_w		double precision;
soma_exame_w		double precision 	:= 0;
seq_exame_calculo_w	varchar(255)	:= '';
controle_w		integer	:= 0;
auxiliar_w			varchar(255)	:= '';
sequencias_w		varchar(255)	:= '';
qtd_w			bigint;
ds_calculo_aux_w		varchar(255)	:= '';
contador			integer;
ds_resultado_w		double precision;
ds_retorno_w		varchar(255)	:= '';
nr_seq_exame_atual_w	double precision;
ds_comando_w		varchar(255);
ds_valor_result_w		double precision;

C01 CURSOR FOR
	SELECT  	ds_calculo,
		nr_sequencia
	from   	med_exame_padrao
	where   	position('@'||nr_seq_exame_p||'@'  ds_calculo) > 0
	and     	(ds_calculo IS NOT NULL AND ds_calculo::text <> '');

BEGIN

open C01;
loop
fetch C01 into
	ds_calculo_w,
	nr_seq_exame_atual_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	for contador in 1..length(ds_calculo_w) loop
	begin
		auxiliar_w	:=	substr(ds_calculo_w, contador, 1);
		if (substr(ds_calculo_w, contador, 1) = '@')  then
			if ( controle_w = 0 ) then
				controle_w  := 1;
			else
				controle_w 		:= 0;
				sequencias_w		:= seq_exame_calculo_w || ',' || sequencias_w;

				/* buscar o valor do exame */

				select  count(*)
				into STRICT	qtd_w
				from 	med_result_exame
				where   nr_seq_cliente 	= nr_seq_cliente_p
				and     dt_exame 	= dt_exame_p
				and     nr_seq_exame    = seq_exame_calculo_w;

				if ( qtd_w > 0 ) then
					select  vl_exame
					into STRICT	vl_exame_w
					from 	med_result_exame
					where   nr_seq_cliente 	= nr_seq_cliente_p
					and     dt_exame 		= dt_exame_p
					and     nr_seq_exame    	= seq_exame_calculo_w;

					ds_calculo_aux_w	:= ds_calculo_aux_w || vl_exame_w;
				end if;
				seq_exame_calculo_w 	:= '';
			end if;
		end if;
		if ( auxiliar_w <>	'@') then
			if ( controle_w = 1 ) then
				seq_exame_calculo_w	:=	seq_exame_calculo_w || auxiliar_w;
			else
				ds_calculo_aux_w		:=	ds_calculo_aux_w || auxiliar_w;
			end if;
		end if;
	end;
	end loop;
	sequencias_w	:= sequencias_w || '0';
	/* Verificar se todas as sequencias dos exames possuem valores informados */

	select  count(*)
	into STRICT	qtd_w
	from 	med_result_exame
	where   	nr_seq_cliente 	= nr_seq_cliente_p
	and     	dt_exame 	= dt_exame_p
	and	obter_se_contido(nr_seq_exame, sequencias_w) = 'S'
	and     	coalesce(vl_exame::text, '') = '';

	if ( qtd_w = 0 ) then
		/* realizar  a soma quando todos os exames contidos na f√≥rmula estiver com valor  */

		ds_valor_result_w := obter_valor_dinamico('select ' || ds_calculo_aux_w || ' from dual', ds_valor_result_w);

		ds_retorno_w	:= ds_retorno_w || '#' || nr_seq_exame_atual_w;
		ds_retorno_w 	:= ds_retorno_w || '=' || ds_valor_result_w;

		/* Atualizar  o valor na tabela */

		update	med_result_exame
		set	vl_exame 	= ds_valor_result_w
		where   nr_seq_exame    	= nr_seq_exame_atual_w
		and     nr_seq_cliente  	= nr_seq_cliente_p
		and     dt_exame        	= dt_exame_p;
	end if;
	ds_calculo_aux_w 		:= '';
	sequencias_w	 	:= '';
end;
end loop;
close C01;
commit;

ds_retorno_p := ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_resultado_exame ( nr_seq_cliente_p bigint, dt_exame_p timestamp, nr_seq_exame_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

