-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_titulo_convenio (nr_seq_retorno_p bigint, nm_usuario_p text, nr_seq_conta_banco_p bigint, ds_erro_p INOUT text, nr_seq_trans_financ_p bigint, ds_campos_obrigatorios_p text, ie_commit_p text, ie_tipo_perda_p text, nr_seq_motivo_perda_p bigint, ie_repasse_estorno_p text default null) AS $body$
DECLARE


vl_soma_titulo_w		double precision;
vl_soma_retorno_w		double precision;

nr_seq_protocolo_w	bigint;
vl_pago_w		double precision;
vl_adicional_w		double precision;
vl_glosa_w		double precision;
vl_adequado_w		double precision;
vl_rec_maior_w		double precision;
vl_guia_w		double precision;
vl_perdas_w		double precision;
vl_amenor_w		double precision;
vl_juros_cobr_w		double precision;
vl_multa_cobr_w		double precision;
vl_pago_ant_w		double precision;


vl_desconto_w		double precision;
vl_baixa_desconto_w	double precision;

cd_moeda_w		integer;
qt_contas_w		bigint;

dt_receb_w		timestamp;
nr_seq_trans_w		bigint;
nr_seq_trans_partic_w	bigint;
cd_banco_w		banco_estabelecimento.cd_banco%type;
cd_agencia_w		varchar(255);
ie_status_retorno_w		varchar(255);
cd_tipo_receb_w		integer;
CD_CENTRO_CUSTO_DESC_w	integer;
NR_SEQ_MOTIVO_DESC_w	bigint;

nr_seq_ret_item_w	bigint;
nr_interno_conta_w	bigint := null;
cd_autorizacao_w	varchar(20) := 0;
cd_autorizacao_aux_w	varchar(20);

nr_titulo_w		bigint;
vl_saldo_titulo_w	double precision;
nr_titulo_receb_w	bigint;
vl_pago_receb_w		double precision;

nr_sequencia_w		integer;
vl_baixa_w		double precision;
vl_baixa_glosa_w	double precision;

nr_item_w		integer := 0;

nr_tit_erros_w		varchar(4000) := ' ';

dt_liquidacao_w		timestamp;
vl_titulo_w		double precision;
cd_estabelecimento_w	smallint;

nr_seq_convenio_receb_w	bigint;
nr_seq_conv_receb_tit_w bigint;
nr_seq_conpaci_ret_w	bigint;
vl_saldo_conpaci_w	double precision;
ie_novo_w		varchar(1);
ie_auditoria_w		varchar(1);

ie_glosa_w		varchar(1);

vl_pago_glosa_w		double precision;
vl_recebido_glosa_w	double precision;

ie_consiste_mes_contabil_w 	varchar(1);
ie_tit_ret_senha_w		varchar(255);
nr_sequencia_contabil_w		bigint;
dt_abertura_w			timestamp;
cd_motivo_glosa_w		integer;
cd_convenio_particular_w	integer;
vl_recebido_outro_ret_w		double precision;
nr_seq_trans_desc_ret_w		bigint;
nr_seq_trans_fin_perda_w	bigint;
cd_tipo_receb_perda_w		bigint;
nr_seq_liq_w			bigint;
cd_tipo_receb_desc_ret_w	integer;
qt_mes_fechado_w		integer;
cd_tipo_receb_trans_w		integer;
cd_autorizacao_senha_w		varchar(255);
qt_dias_venc_w			integer;
ie_tipo_data_ref_w		varchar(1);
cd_convenio_w			integer;
nr_seq_lote_hist_guia_w		bigint;
vl_amenor_post_w		double precision;
ie_tipo_convenio_w		smallint;
ie_canc_conta_glosa_sus_w	varchar(1)	:= 'N';
nr_interno_conta_sus_w		bigint;
nr_adiantamento_w		bigint;
cont_w				bigint;
nr_seq_cobranca_w		bigint;
dt_recebimento_w		timestamp;
vl_despesa_bancaria_w		double precision;
vl_nota_credito_w		double precision;
nr_seq_tit_cobr_w		bigint;
vl_juros_w			double precision;
vl_cambial_ativo_w		double precision;
vl_cambial_passivo_w		double precision;
nr_seq_ret_estorno_w		double precision;
ie_lib_repasse_ret_w		varchar(255);
qt_adiantamento_w		bigint;
ie_atualizar_tf_titulo_w	varchar(1);
ie_estab_conta_ret_w		varchar(10);
cd_estab_conta_ret_w		bigint;
ie_gerar_imposto_tit_w		varchar(1);
ie_data_baixa_cr_w		varchar(1) := 'N';
nr_seq_tipo_w			bigint;
cd_tipo_receb_tipo_ret_w	integer;
nr_atendimento_w		bigint;
ie_controle_perdas_w		varchar(1);
ie_somente_liquidacao_w		varchar(1);
nr_seq_baixa_perda_w		bigint;
nr_seq_perda_w			bigint;

cd_tipo_receb_desc_regra_w	bigint;
nr_seq_trans_desc_regra_w	bigint;
cd_tipo_receb_perda_regra_w	bigint;
nr_seq_trans_perda_regra_w	bigint;
cd_tipo_receb_nc_regra_w	bigint;
nr_seq_trans_nc_regra_w		bigint;
cd_tipo_receb_glosa_regra_w	bigint;
nr_seq_trans_glosa_regra_w	bigint;
cd_tipo_receb_pago_regra_w	bigint;
nr_seq_trans_pago_regra_w	bigint;
cd_tipo_receb_amenor_regra_w	bigint;
nr_seq_trans_amenor_regra_w	bigint;
nr_seq_lote_protocolo_w		bigint;

nr_interno_conta_ww		bigint := null;
nr_titulo_contab_w		bigint;
ds_titulos_contab_w		varchar(4000);
nr_seq_tipo_alerta_w		varchar(255);
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;

ie_nota_credito_w		varchar(1);
nr_seq_ret_item_est_w		bigint;
qt_tit_desdob_w			bigint;
vl_receb_ant_est_w		double precision;
vl_tributo_guia_w		double precision;
ie_passivo_saldo_tit_w		varchar(1);
ie_permite_gerar_analise_w	varchar(1) := 'N';
qt_guias_analisadas_w		bigint;
ds_retorno_w			varchar(4000);
ie_repasse_retorno_w		parametro_repasse.ie_repasse_retorno%type;
vl_glosado_ret_w		convenio_retorno_item.vl_glosado%type;
vl_amenor_ret_w			convenio_retorno_item.vl_amenor%type;
nr_seq_lote_audit_w		lote_auditoria.nr_sequencia%type;
nr_seq_lote_novo_w		lote_auditoria.nr_sequencia%type;

qt_titulo_w			bigint;
nr_conta_titulo_w		titulo_receber.nr_titulo%type;
nr_ret_titulo_w			titulo_receber.nr_titulo%type;
nr_seq_lote_prot_w	lote_protocolo.nr_sequencia%type;

type 				lista_titulo is table of bigint;
lista_titulo_w   		lista_titulo := lista_titulo();
posicao_lista_w			integer := 1;
ds_lista_titulo_w		varchar(32767) := '';
nr_analise_ant_w		lote_audit_hist.nr_sequencia%type;
nr_analise_atual_w		lote_audit_hist.nr_sequencia%type;
nr_seq_analise_w		lote_audit_hist.nr_sequencia%type;
nr_analise_lote_antigo_w	lote_audit_hist.nr_sequencia%type;
qt_guias_analise_nova_w		bigint;
nr_seq_mot_glosa_w		regra_baixa_titulo_conv.nr_seq_mot_glosa%type;

nr_seq_ret_origem_w		convenio_retorno.nr_seq_ret_origem%type;
ie_status_origem_w		convenio_retorno.ie_status_retorno%type;
nr_seq_ret_adiant_w		convenio_retorno.nr_seq_ret_adiant%type;
ie_tipo_glosa_w			convenio_retorno.ie_tipo_glosa%type;
nr_seq_nota_receb_w		nota_fiscal.nr_sequencia%type;
ie_gerou_liq_cc_w		varchar(1) := 'N';

cd_mtv_glosa_regra_w		motivo_glosa.cd_motivo_glosa%type;

ie_vinc_receb_ret_w             varchar(1) := 'N';
ds_user_locale_w        user_locale.ds_locale%type;

RET_C			constant varchar(3) := 'RET';
VL_AMENOR_C 		constant varchar(9) := 'VL_AMENOR';
VL_NOTA_CREDITO_C 	constant varchar(15) := 'VL_NOTA_CREDITO';
VL_DESCONTO_C 		constant varchar(11) := 'VL_DESCONTO';
VL_PERDAS_C 		constant varchar(9) := 'VL_PERDAS';
VL_GLOSA_C 		constant varchar(8) := 'VL_GLOSA';
VL_PAGO_ADIC_C 		constant varchar(12) := 'VL_PAGO_ADIC';

C01 CURSOR FOR
SELECT	a.nr_sequencia,
	b.nr_seq_protocolo,
	a.nr_interno_conta,
	somente_numero(a.cd_autorizacao),
	a.cd_autorizacao,
	a.ie_glosa,
	sum(a.vl_pago),
	coalesce(sum(a.vl_adicional),0),
	sum(a.vl_glosado),
	coalesce(sum(a.vl_adequado),0),
	coalesce(sum(a.vl_desconto),0),
	coalesce(sum(a.vl_amenor),0),
	a.cd_motivo_glosa,
	a.nr_titulo,
	a.CD_CENTRO_CUSTO_DESC,
	a.NR_SEQ_MOTIVO_DESC,
	sum(coalesce(a.vl_perdas,0)),
	a.cd_autorizacao cd_autorizacao_senha,
	sum(coalesce(a.vl_amenor_post,0)),
	sum(a.vl_guia),
	coalesce(sum(a.vl_juros_cobr),0),
	coalesce(sum(a.vl_multa_cobr),0),
	coalesce(sum(a.vl_nota_credito),0),
	coalesce(sum(a.vl_juros),0),
	coalesce(sum(a.vl_cambial_ativo),0),
	coalesce(sum(a.vl_cambial_passivo),0),
	obter_pessoa_atendimento(b.nr_atendimento,'C'),
	a.nr_seq_ret_item_est,
	coalesce(sum(a.vl_tributo_guia),0)
from	conta_paciente b,
    	convenio_retorno_item a
where	a.nr_interno_conta = b.nr_interno_conta
and	a.nr_seq_retorno = nr_seq_retorno_p
group	by a.nr_sequencia,
	b.nr_seq_protocolo,
	a.nr_interno_conta,
	somente_numero(a.cd_autorizacao),
	a.cd_autorizacao,
	a.ie_glosa,
	a.cd_motivo_glosa,
	a.nr_titulo,
	a.CD_CENTRO_CUSTO_DESC,
	a.NR_SEQ_MOTIVO_DESC,
	a.cd_autorizacao,
	obter_pessoa_atendimento(b.nr_atendimento,'C'),
	a.nr_seq_ret_item_est
having(sum(a.vl_pago) >= 0 and coalesce(sum(a.vl_adicional),0) >= 0) or (nr_seq_ret_estorno_w IS NOT NULL AND nr_seq_ret_estorno_w::text <> '');

C02 CURSOR FOR
SELECT 	nr_sequencia,
	nr_titulo,
	sum(vl_pago),
	coalesce(sum(vl_adicional),0),
	sum(vl_glosado),
	coalesce(sum(vl_adequado),0),
	coalesce(sum(vl_desconto),0),
	CD_CENTRO_CUSTO_DESC,
	NR_SEQ_MOTIVO_DESC,
	sum(coalesce(vl_perdas,0)),
	coalesce(sum(vl_nota_credito),0),
	coalesce(sum(vl_juros),0),
	coalesce(sum(vl_cambial_ativo),0),
	coalesce(sum(vl_cambial_passivo),0),
	coalesce(sum(vl_amenor),0)
from	convenio_retorno_item
where	nr_seq_retorno		= nr_seq_retorno_p
and	coalesce(nr_interno_conta::text, '') = ''
group 	by nr_sequencia,
	nr_titulo,
	CD_CENTRO_CUSTO_DESC,
	NR_SEQ_MOTIVO_DESC;

C03 CURSOR FOR
SELECT	nr_titulo,
	vl_saldo_titulo
from 	(SELECT	dt_pagamento_previsto,
		nr_titulo,
		dt_vencimento,
	      	vl_saldo_titulo
	from	titulo_receber
	where (nr_documento IS NOT NULL AND nr_documento::text <> '')
	and (nr_documento 		<> nr_interno_conta_w)
	and	nr_interno_conta 	= nr_interno_conta_w
	and	nr_documento 		= cd_autorizacao_w 	/* Francisco - 29/04/2009 - Tirei o comentario ,OS 128238 */
	and	coalesce(nr_seq_cobranca_w,0) = 0
	and	ie_situacao not in ('3','5')
--	and	vl_saldo_titulo 	>= vl_pago_w		-- Jacson OS 45469
	
union

	select	dt_pagamento_previsto,
		nr_titulo,
		dt_vencimento,
	      	vl_saldo_titulo
	from	titulo_receber a
	where	(a.nr_documento IS NOT NULL AND a.nr_documento::text <> '')
	and	a.nr_documento 		<> nr_interno_conta_w
	and	a.nr_documento		<> cd_autorizacao_w
	and	a.nr_interno_conta 	= nr_interno_conta_w
	and	obter_senha_atendimento(a.nr_atendimento)	= cd_autorizacao_senha_w
	and	ie_tit_ret_senha_w	= 'S'
	and	ie_situacao not in ('3','5')
	and	coalesce(nr_seq_cobranca_w,0) = 0
	
union

	select	dt_pagamento_previsto,
		nr_titulo,
		dt_vencimento,
		vl_saldo_titulo
	from	titulo_receber
	where	((coalesce(nr_documento::text, '') = '') or (nr_documento = nr_interno_conta_w))
	and	nr_interno_conta 	= nr_interno_conta_w
	and	coalesce(nr_seq_cobranca_w,0) = 0
	and	ie_situacao not in ('3','5')
--	and	vl_saldo_titulo 	>= vl_pago_w		-- Jacson OS 45469
	
union

	select	dt_pagamento_previsto,
		nr_titulo,
		dt_vencimento,
		vl_saldo_titulo
	from	titulo_receber
	where	(nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '')
	and	nr_seq_protocolo 	= nr_seq_protocolo_w
	and	coalesce(nr_interno_conta::text, '') = ''
	and	ie_situacao not in ('3','5')
	and	coalesce(nr_seq_cobranca_w,0) = 0
	
union

	select	dt_pagamento_previsto,
		nr_titulo,
		dt_vencimento,
		vl_saldo_titulo
	from	titulo_receber
	where	(nr_seq_lote_protocolo_w IS NOT NULL AND nr_seq_lote_protocolo_w::text <> '')
	and	nr_seq_lote_prot 	= nr_seq_lote_protocolo_w
	and	coalesce(nr_interno_conta::text, '') = ''
	and	coalesce(nr_seq_protocolo::text, '') = ''
	and	ie_situacao not in ('3','5')
	and	coalesce(nr_seq_cobranca_w,0) = 0
	
union

	select	a.dt_pagamento_previsto,
		a.nr_titulo,
		a.dt_vencimento,
		a.vl_saldo_titulo
	from	titulo_receber a
	where	ie_tit_ret_senha_w	<> 'S'
	and	a.nr_interno_conta	= nr_interno_conta_w
	and	(a.nr_documento IS NOT NULL AND a.nr_documento::text <> '')
	and	ie_situacao not in ('3','5')
	and	not exists (select	1
		from	titulo_receber x
		where (x.nr_documento IS NOT NULL AND x.nr_documento::text <> '')
		and	x.nr_documento		<> nr_interno_conta_w
		and	x.nr_interno_conta	= nr_interno_conta_w
		and	x.nr_documento		= cd_autorizacao_w)
	and	coalesce(nr_seq_cobranca_w,0) = 0
	
union

	select	b.dt_pagamento_previsto,
		b.nr_titulo,
		b.dt_vencimento,
		b.vl_saldo_titulo
	from	titulo_receber b,
		convenio_retorno_item a
	where	a.nr_titulo	= b.nr_titulo
	and	a.nr_sequencia	= nr_seq_ret_item_w
	and	ie_situacao not in ('3','5')
	and	coalesce(nr_seq_cobranca_w,0) <> 0) /* ahoffelder - OS 261149 - 05/11/2010 */

--	and	vl_saldo_titulo >= vl_pago_w)		-- Jacson OS 45469
order by	dt_pagamento_previsto, dt_vencimento;

C04 CURSOR FOR
SELECT	a.nr_sequencia,
	b.nr_seq_protocolo,
	a.nr_interno_conta,
	somente_numero(a.cd_autorizacao),
	a.cd_autorizacao,
	coalesce(sum(a.vl_pago),0),
	coalesce(sum(a.vl_glosado),0),
	coalesce(sum(a.vl_adequado),0),
	coalesce(sum(a.vl_desconto),0),
	a.CD_CENTRO_CUSTO_DESC,
	a.NR_SEQ_MOTIVO_DESC,
	coalesce(sum(a.vl_perdas),0),
	a.cd_autorizacao cd_autorizacao_senha,
	coalesce(sum(a.vl_juros_cobr),0),
	coalesce(sum(a.vl_multa_cobr),0),
	coalesce(sum(a.vl_nota_credito),0),
	coalesce(sum(a.vl_juros),0),
	coalesce(sum(a.vl_cambial_ativo),0),
	coalesce(sum(a.vl_cambial_passivo),0),
	a.ie_glosa,
	coalesce(sum(a.vl_amenor),0),
	obter_pessoa_atendimento(b.nr_atendimento,'C'),
	coalesce(sum(a.vl_tributo_guia),0),
	Obter_Seq_Lote_Protocolo(b.nr_seq_protocolo)	
from	conta_paciente b,
	convenio_retorno_item a
where	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_seq_retorno	= nr_seq_retorno_p
group	by a.nr_sequencia,
	b.nr_seq_protocolo,
	a.nr_interno_conta,
	somente_numero(a.cd_autorizacao),
	a.cd_autorizacao,
	a.CD_CENTRO_CUSTO_DESC,
	a.NR_SEQ_MOTIVO_DESC,
	a.cd_autorizacao,
	a.ie_glosa,
	obter_pessoa_atendimento(b.nr_atendimento,'C')	
having	coalesce(sum(a.vl_pago),0) < 0 and coalesce(nr_seq_ret_estorno_w::text, '') = '';

C05 CURSOR FOR
SELECT	nr_titulo,
	dt_liquidacao,
	vl_titulo,
	vl_saldo_titulo
from	(SELECT	dt_pagamento_previsto,
		nr_titulo,
		dt_liquidacao,
		dt_vencimento,
		vl_titulo,
      		vl_saldo_titulo
	from	titulo_receber
	where	(nr_documento IS NOT NULL AND nr_documento::text <> '')
	and	nr_interno_conta	= nr_interno_conta_w
	and (nr_documento <> nr_interno_conta_w)
	and	nr_documento		= cd_autorizacao_w /* Francisco - 29/04/2009 - Tirei o comentario ,OS 128238 */
	and	ie_situacao <> '3'
	and	coalesce(nr_seq_cobranca_w,0) = 0
	
union

	select	a.dt_pagamento_previsto,
		a.nr_titulo,
		a.dt_liquidacao,
		a.dt_vencimento,
		a.vl_titulo,
      		a.vl_saldo_titulo
	from	conta_paciente b,
		titulo_receber a
	where	(a.nr_documento IS NOT NULL AND a.nr_documento::text <> '')
	and	a.nr_interno_conta	= b.nr_interno_conta
	and	a.nr_interno_conta	= nr_interno_conta_w
	and (a.nr_documento <> nr_interno_conta_w)
	and	a.nr_documento		<> cd_autorizacao_w
	and	obter_senha_atendimento(b.nr_atendimento)	= cd_autorizacao_senha_w /* Edgar 06/05/2009 OS 140226, localizar o titulo pela senha do atendimento devido a despadronizacao do Bradesco */
	and	ie_tit_ret_senha_w	= 'S'
	and	a.ie_situacao 		<> '3'
	and	coalesce(nr_seq_cobranca_w,0) = 0
	
union

	select	dt_pagamento_previsto,
		nr_titulo,
		dt_liquidacao,
		dt_vencimento,
		vl_titulo,
		vl_saldo_titulo
	from	titulo_receber
	where	((coalesce(nr_documento::text, '') = '') or (nr_documento = nr_interno_conta_w))
	and	nr_interno_conta	= nr_interno_conta_w
	and	coalesce(nr_seq_cobranca_w,0) = 0
	and	ie_situacao 		<> '3'
	
union

	select	dt_pagamento_previsto,
		nr_titulo,
		dt_liquidacao,
		dt_vencimento,
		vl_titulo,
	     	vl_saldo_titulo
	from	titulo_receber
	where	(nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '')
	and	nr_seq_protocolo	= nr_seq_protocolo_w
	and	coalesce(nr_interno_conta::text, '') = ''
	and	coalesce(nr_seq_cobranca_w,0) = 0
	and	ie_situacao 		<> '3'
	
union

	select	dt_pagamento_previsto,
		nr_titulo,
		dt_liquidacao,
		dt_vencimento,
		vl_titulo,
	     	vl_saldo_titulo
	from	titulo_receber
	where	coalesce(nr_seq_protocolo::text, '') = ''
	and	nr_seq_lote_prot	= nr_seq_lote_prot_w
	and	coalesce(nr_interno_conta::text, '') = ''
	and	coalesce(nr_seq_cobranca_w,0) = 0
	and	ie_situacao 		<> '3'
	
union

	select	b.dt_pagamento_previsto,
		b.nr_titulo,
		b.dt_liquidacao,
		b.dt_vencimento,
		b.vl_titulo,
	     	b.vl_saldo_titulo
	from	titulo_receber b,
		convenio_retorno_item a
	where	a.nr_titulo	= b.nr_titulo
	and	a.nr_sequencia	= nr_seq_ret_item_w
	and	b.ie_situacao 		<> '3'
	and	coalesce(nr_seq_cobranca_w,0) <> 0) alias19
order	by dt_pagamento_previsto, coalesce(dt_liquidacao, dt_vencimento) desc;

c06 CURSOR FOR
SELECT	e.nr_titulo,
	sum(a.vl_vinculado),
	b.nr_sequencia,
	a.nr_seq_nota_receb
from	convenio_receb b,
	convenio_ret_receb_guia a,
	convenio_retorno_item e
where	a.nr_seq_recebimento	= b.nr_sequencia
and	a.nr_seq_ret_item	= e.nr_sequencia
and	e.nr_seq_retorno	= nr_seq_retorno_p
group by e.nr_titulo,
	b.nr_sequencia,
	a.nr_seq_nota_receb;

c07 CURSOR FOR
SELECT	nr_titulo,
	nr_sequencia
from	titulo_receber_liq
where	nr_seq_retorno		= nr_seq_retorno_p;

c08 CURSOR FOR
SELECT	distinct
	a.nr_interno_conta
from	motivo_glosa b,
	convenio_retorno_item a
where	a.nr_seq_retorno	= nr_seq_retorno_p
and	a.cd_motivo_glosa	= b.cd_motivo_glosa
and	b.ie_acao_glosa		= 'R'
and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');

c09 CURSOR FOR
SELECT	a.nr_seq_nota_credito
from	titulo_receber_nc a
where	a.nr_titulo_rec	= nr_titulo_w;

c10 CURSOR FOR
SELECT	b.nr_sequencia
from	lote_audit_hist c,
	lote_audit_hist_guia b,
	convenio_retorno_item a
where	a.nr_sequencia		= nr_seq_ret_item_w
and	a.nr_interno_conta	= b.nr_interno_conta
and	a.cd_autorizacao	= b.cd_autorizacao
and	b.nr_seq_lote_hist	= c.nr_sequencia
and	coalesce(c.dt_fechamento::text, '') = '';

c11 CURSOR FOR
SELECT	b.nr_sequencia
from	lote_audit_hist c,
	lote_audit_hist_guia b,
	convenio_retorno_item a
where	a.nr_sequencia		= nr_seq_ret_item_w
and	a.nr_interno_conta	= b.nr_interno_conta
and	a.cd_autorizacao	= b.cd_autorizacao
and	b.nr_seq_lote_hist	= c.nr_sequencia
and	(c.dt_fechamento IS NOT NULL AND c.dt_fechamento::text <> '')
and	c.nr_sequencia		= obter_ultima_analise(c.nr_seq_lote_audit);

c12 CURSOR FOR
	SELECT	a.nr_sequencia
	from	lote_audit_hist_guia a,
		LOTE_AUDIT_HIST B
	where	a.nr_seq_lote_hist = nr_analise_atual_w
	AND	B.NR_SEQUENCIA	   = A.NR_SEQ_LOTE_HIST
	--AND	B.NR_SEQ_LOTE_AUDIT = nr_seq_lote_audit_w
	and	not exists (SELECT	1
			   from		lote_audit_hist_guia x
			   where	x.nr_Seq_lote_hist <> nr_analise_atual_w
			   and		x.nr_interno_conta = a.nr_interno_conta
			   and		x.cd_autorizacao  = a.cd_autorizacao);
c12_w	c12%rowtype;

c13 CURSOR FOR
	SELECT	a.nr_sequencia,
		(SELECT max(x.nr_seq_lote_audit)
		from 	lote_audit_hist x,
			lote_audit_hist_guia y,
			lote_auditoria z
		where 	x.nr_sequencia = y.nr_seq_lote_hist
		and	z.nr_sequencia = x.nr_seq_lote_audit
		and	y.cd_autorizacao = a.cd_autorizacao
		and	y.nr_interno_conta = a.nr_interno_conta
		-- and	x.nr_sequencia = (select max(w.nr_sequencia) from lote_audit_hist w where w.nr_seq_lote_audit = z.nr_sequencia)
		and	(x.dt_fechamento IS NOT NULL AND x.dt_fechamento::text <> '')
		and	(x.dt_envio IS NOT NULL AND x.dt_envio::text <> '')
		--and	x.nr_sequencia < nr_analise_atual_w

		--and	x.nr_sequencia < nr_analise_ant_w
		and	coalesce(z.dt_fechamento::text, '') = '') nr_seq_lote_antigo
	from	lote_audit_hist_guia a,
		LOTE_AUDIT_HIST B
	where	a.nr_seq_lote_hist = nr_analise_atual_w
	AND	B.NR_SEQUENCIA	   = A.NR_SEQ_LOTE_HIST;
c13_w	c13%rowtype;	


BEGIN
ds_user_locale_w := pkg_i18n.get_user_locale();
if coalesce(nr_seq_retorno_p, 0) > 0 then

	begin
		select	coalesce(nr_seq_ret_origem, 0)
		into STRICT	nr_seq_ret_origem_w
		from	convenio_retorno
		where	nr_sequencia = nr_seq_retorno_p;
	exception
	when others then
		nr_seq_ret_origem_w := 0;
	end;
	
	if nr_seq_ret_origem_w > 0 then
		
		select 	ie_status_retorno
		into STRICT	ie_status_origem_w
		from	convenio_retorno
		where	nr_sequencia = nr_seq_ret_origem_w;
		
		if ie_status_origem_w <> 'F' then
			/*
				Retorno originado pelo desdobramento por recebimento parcial. Para prosseguir sera necessario fechar o retorno de origem: #@NR_RETORNO#@				
			*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1125862, 'NR_RETORNO='||nr_seq_ret_origem_w);
		end if;
		
	end if;
	
end if;

CALL GERAR_TRANS_FINANC_GLOSA(nr_seq_retorno_p, nm_usuario_p);

ie_vinc_receb_ret_w := obter_param_usuario(27, 300, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_vinc_receb_ret_w);

select	max(b.nr_adiantamento),
	count(*)
into STRICT	nr_adiantamento_w,
	cont_w
from	convenio_receb b,
	convenio_ret_receb a
where	a.nr_seq_retorno	= nr_seq_retorno_p
and	a.nr_seq_receb		= b.nr_sequencia;

if (coalesce(nr_adiantamento_w::text, '') = '') then
	select	count(*)
	into STRICT	qt_adiantamento_w
	from	convenio_receb_adiant b,
		convenio_ret_receb a
	where	a.nr_seq_receb		= b.nr_seq_receb
	and	a.nr_seq_retorno	= nr_seq_retorno_p;

	if (qt_adiantamento_w = 1) then
		select	b.nr_adiantamento
		into STRICT	nr_adiantamento_w
		from	convenio_receb_adiant b,
			convenio_ret_receb a
		where	a.nr_seq_receb		= b.nr_seq_receb
		and	a.nr_seq_retorno	= nr_seq_retorno_p;
	end if;
end if;

if (nr_adiantamento_w IS NOT NULL AND nr_adiantamento_w::text <> '') and (ie_vinc_receb_ret_w = 'N') and (cont_w > 1) then
	--r.aise_application_error(-20011, 'Este retorno esta vinculado a rececimento adiantamento!' ||

	--				'Nao e possivel baixar retornos com mais de um recebimento vinculado nestes casos.');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(174116);
end if;

if (position('DS_OBSERVACAO' in upper(ds_campos_obrigatorios_p)) > 0) then
	select	max(a.nr_interno_conta)
	into STRICT	nr_interno_conta_w
	from	convenio_retorno_glosa b,
		convenio_retorno_item a
	where	a.nr_sequencia		= b.nr_seq_ret_item
	and	a.nr_seq_retorno	= nr_seq_retorno_p
	and	coalesce(b.ds_observacao::text, '') = '';
	if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
		--r.aise_application_error(-20011, 'A conta ' || nr_interno_conta_w || ' nao possui observacao informada nos itens glosados!');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174117,'NR_INTERNO_CONTA_W='||nr_interno_conta_w);
	end if;
end if;

if (position('CD_MOTIVO_GLOSA' in upper(ds_campos_obrigatorios_p)) > 0) then
	select	max(a.nr_interno_conta)
	into STRICT	nr_interno_conta_w
	from	convenio_retorno_glosa b,
		convenio_retorno_item a
	where	a.nr_sequencia		= b.nr_seq_ret_item
	and	a.nr_seq_retorno	= nr_seq_retorno_p
	and	coalesce(b.cd_motivo_glosa::text, '') = ''
	and	((a.vl_glosado	<> 0)  or (a. VL_AMENOR <> 0));
	if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
		--r.aise_application_error(-20011, 'A conta ' || nr_interno_conta_w || ' nao possui motivo de glosa informada nos itens glosados!');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174120,'NR_INTERNO_CONTA_W='||nr_interno_conta_w);
	end if;
end if;
if (position('CD_SETOR_RESPONSAVEL' in upper(ds_campos_obrigatorios_p)) > 0) then
	select	max(a.nr_interno_conta)
	into STRICT	nr_interno_conta_w
	from	convenio_retorno_glosa b,
		convenio_retorno_item a
	where	a.nr_sequencia		= b.nr_seq_ret_item
	and	a.nr_seq_retorno	= nr_seq_retorno_p
	and	coalesce(b.cd_setor_responsavel::text, '') = '';
	if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
		--r.aise_application_error(-20011, 'A conta ' || nr_interno_conta_w || ' nao possui setor responsavel informado nos itens glosados!');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174123,'NR_INTERNO_CONTA_W='||nr_interno_conta_w);
	end if;
end if;

ds_erro_p := '';

select 	max(cd_convenio_particular),
	max(ie_status_retorno),
	max(nr_seq_cobranca),
	max(nr_seq_ret_estorno),
	max(nr_seq_tipo),
	max(nr_seq_ret_adiant),
	max(ie_tipo_glosa)
into STRICT	cd_convenio_particular_w,
	ie_status_retorno_w,
	nr_seq_cobranca_w,
	nr_seq_ret_estorno_w,
	nr_seq_tipo_w,
	nr_seq_ret_adiant_w,
	ie_tipo_glosa_w
from 	convenio_retorno
where 	nr_sequencia = nr_seq_retorno_p;

if (ie_status_retorno_w = 'F') then
	--r.aise_application_error(-20011, 'Este retorno ja foi fechado!');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(174127);
end if;

select	count(*)
into STRICT	qt_contas_w
from	conta_paciente b,
	convenio_retorno_item a
where	a.nr_seq_retorno = nr_seq_retorno_p
and	a.nr_interno_conta = b.nr_interno_conta
and	(b.ie_cancelamento IS NOT NULL AND b.ie_cancelamento::text <> '');

if (qt_contas_w <> 0) then
	--r.aise_application_error(-20011,'Existem itens com conta cancelada !');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(174128);
end if;

select	coalesce(sum(vl_pago + vl_glosado + coalesce(vl_desconto,0)),0)
into STRICT	vl_soma_retorno_w
from	convenio_retorno_item
where	nr_seq_retorno = nr_seq_retorno_p;

select	obter_saldo_retorno(nr_seq_retorno_p,1)
into STRICT	vl_soma_titulo_w
;

/*
if (vl_soma_retorno_w > vl_soma_titulo_w) then
	r.aise_application_error(-20011,' Valor do retorno supera o valor dos titulos !');
end if;
*/
ie_estab_conta_ret_w := obter_param_usuario(27, 194, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_estab_conta_ret_w); --lhalves OS 379887 em 26/01/2012
ie_data_baixa_cr_w := obter_param_usuario(27, 211, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_data_baixa_cr_w);
ie_permite_gerar_analise_w := obter_param_usuario(27, 271, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_gerar_analise_w);
nr_seq_tipo_alerta_w := obter_param_usuario(27, 289, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, nr_seq_tipo_alerta_w);
cd_estab_conta_ret_w	:= null;

if (coalesce(ie_estab_conta_ret_w,'N') = 'S') then
	select	max(b.cd_estabelecimento)
	into STRICT	cd_estab_conta_ret_w
	from	conta_paciente b,
		convenio_retorno_item a
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	a.nr_seq_retorno	= nr_seq_retorno_p;

end if;

select	coalesce(max(d.dt_baixa_cr),clock_timestamp()),
	max(coalesce(nr_seq_trans_financ_p,coalesce(x.nr_seq_trans_fin_conv_ret, coalesce(e.nr_seq_trans_fin_conv_ret, b.nr_seq_trans_fin)))),
	max(e.cd_tipo_receb_conv_ret),
	max(c.cd_banco),
	max(c.cd_agencia_bancaria),
	max(d.cd_estabelecimento),
	coalesce(max(ie_consiste_mes_contabil),'N'),
	max(nr_seq_trans_ret_partic),
	max(nr_seq_trans_desc_ret),
	max(cd_tipo_receb_desc_ret),
	max(nr_seq_trans_fin_perda),
	max(cd_tipo_receb_perda),
	coalesce(max(ie_tit_ret_senha), 'N'),
	max(d.cd_convenio),
	max(e.ie_controle_perdas),
	coalesce(max(ie_passivo_saldo_tit),'S')
into STRICT	dt_receb_w,
	nr_seq_trans_w,
	cd_tipo_receb_w,
	cd_banco_w,
	cd_agencia_w,
	cd_estabelecimento_w,
	ie_consiste_mes_contabil_w,
	nr_seq_trans_partic_w,
	nr_seq_trans_desc_ret_w,
	cd_tipo_receb_desc_ret_w,
	nr_seq_trans_fin_perda_w,
	cd_tipo_receb_perda_w,
	ie_tit_ret_senha_w,
	cd_convenio_w,
	ie_controle_perdas_w,
	ie_passivo_saldo_tit_w
FROM convenio_estabelecimento x, convenio_ret_receb a
LEFT OUTER JOIN convenio_receb b ON (a.nr_seq_receb = b.nr_sequencia)
LEFT OUTER JOIN banco_estabelecimento c ON (b.nr_seq_conta_banco = c.nr_sequencia)
, convenio_retorno d
LEFT OUTER JOIN convenio_ret_receb a ON (d.nr_sequencia = a.nr_seq_retorno)
LEFT OUTER JOIN parametro_contas_receber e ON (d.cd_estabelecimento = e.cd_estabelecimento)
WHERE coalesce(cd_estab_conta_ret_w,d.cd_estabelecimento)	= x.cd_estabelecimento and d.cd_convenio					= x.cd_convenio and d.nr_sequencia					= nr_seq_retorno_p;

--lhalves OS 839585 em 09/03/2015 - para alem de atualizar o Dt_baixa_cr do retonro, ele considere a data atual para a baixa.
if (ie_data_baixa_cr_w = 'B') then
	dt_receb_w	:= clock_timestamp();
end if;

ie_atualizar_tf_titulo_w := obter_param_usuario(27, 193, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualizar_tf_titulo_w);
ie_somente_liquidacao_w := obter_param_usuario(815, 11, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_somente_liquidacao_w);

select	coalesce(max(ie_lib_repasse_ret),'A'),
		coalesce(max(ie_repasse_retorno),'S')
into STRICT	ie_lib_repasse_ret_w,
		ie_repasse_retorno_w
from	parametro_repasse a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

select	max(ie_tipo_convenio)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio	= cd_convenio_w;

/* Se for SUS, testar o parametro e cancelar contas */

if (ie_tipo_convenio_w = 3) then

	select	coalesce(max(ie_canc_conta_glosa_sus),'N')
	into STRICT	ie_canc_conta_glosa_sus_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;
end if;

if (cd_convenio_particular_w IS NOT NULL AND cd_convenio_particular_w::text <> '') and (nr_seq_trans_partic_w IS NOT NULL AND nr_seq_trans_partic_w::text <> '') then
	nr_seq_trans_w	:= nr_seq_trans_partic_w;
end if;

select	max(cd_tipo_recebimento)
into STRICT	cd_tipo_receb_trans_w
from	transacao_financeira
where	nr_sequencia	= nr_seq_trans_w;

select	max(cd_tipo_recebimento)
into STRICT	cd_tipo_receb_tipo_ret_w
from	tipo_conv_ret
where	nr_sequencia	= nr_seq_tipo_w;

cd_tipo_receb_w	:=	coalesce(cd_tipo_receb_trans_w,cd_tipo_receb_w);

if (cd_tipo_receb_tipo_ret_w IS NOT NULL AND cd_tipo_receb_tipo_ret_w::text <> '') then
	cd_tipo_receb_w	:= cd_tipo_receb_tipo_ret_w;
end if;

begin
select	cd_moeda_padrao
into STRICT	cd_moeda_w
from	parametro_contas_receber
where	cd_estabelecimento = cd_estabelecimento_w;
exception
when no_data_found then
	/*r.aise_application_error(-20011, 'Parametros do contas a receber nao encontrados!' || chr(13) ||
					'cd_estabelecimento_w = ' || cd_estabelecimento_w);*/
	CALL wheb_mensagem_pck.exibir_mensagem_abort(174129,'CD_ESTABELECIMENTO_W='||cd_estabelecimento_w);	
end;

select	ie_audita_retorno
into STRICT	ie_auditoria_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

cd_autorizacao_w := 0;
nr_interno_conta_w := null;

if (ie_consiste_mes_contabil_w = 'S') then		-- OS35550, Bruna

	/* Francisco - OS 114576 - 27/10/2008 - Troquei tudo */

	select 	count(*)
	into STRICT 	qt_mes_fechado_w
	from	estabelecimento b,
		ctb_mes_ref a
	where 	trunc(a.dt_referencia,'month')	= trunc(dt_receb_w,'month')
	and	a.cd_empresa 		= b.cd_empresa
	and	b.cd_estabelecimento	= cd_estabelecimento_w
	and	substr(ctb_obter_se_mes_fechado(a.nr_sequencia,b.cd_estabelecimento),1,1) = 'F';

	if (qt_mes_fechado_w <> 0)	then
		--r.aise_application_error(-20011, 'A data de baixa do titulo no Contas a Receber e inferior a data vigente na contabilidade (Mes de Referencia)' );
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174131);
	end if;
end if;

open C04;
loop
fetch C04 into
	nr_seq_ret_item_w,
	nr_seq_protocolo_w,
	nr_interno_conta_w,
	cd_autorizacao_w,
	cd_autorizacao_aux_w,
	vl_pago_w,
	vl_glosa_w,
	vl_adequado_w,
	vl_desconto_w,
	CD_CENTRO_CUSTO_DESC_w,
	NR_SEQ_MOTIVO_DESC_w,
	vl_perdas_w,
	cd_autorizacao_senha_w,
	vl_juros_cobr_w,
	vl_multa_cobr_w,
	vl_nota_credito_w,
	vl_juros_w,
	vl_cambial_ativo_w,
	vl_cambial_passivo_w,
	ie_glosa_w,
	vl_amenor_w,
	cd_pessoa_fisica_w,
	vl_tributo_guia_w,
	nr_seq_lote_prot_w;
EXIT WHEN NOT FOUND; /* apply on C04 */

	select	coalesce(x.cd_motivo_glosa, (select max(y.cd_motivo_glosa) from convenio_retorno_glosa y where y.nr_seq_ret_item = x.nr_sequencia))
	into STRICT	cd_mtv_glosa_regra_w
	from	convenio_retorno_item x
	where	x.nr_sequencia = nr_seq_ret_item_w;
	
	select 	max(nr_seq_lote_protocolo)
	into STRICT	nr_seq_lote_protocolo_w
	from	protocolo_convenio
	where	nr_seq_protocolo = nr_seq_protocolo_w;
	
	if (ie_passivo_saldo_tit_w = 'N') then --lhalves OS 709618 em 26/06/2014 (Dia do meu aniversario :), se esta definido para nao somar o saldo, deve somar o valor passivo ao valor pago.
		vl_pago_w	:= vl_pago_w + vl_cambial_passivo_w;
	end if;

	vl_pago_ant_w	:= vl_pago_w;
	vl_pago_w 	:= vl_pago_w * -1;
	vl_adequado_w 	:= vl_adequado_w * -1;
	
	if (vl_pago_w <> 0) then	
		vl_pago_w	:= vl_pago_w - vl_tributo_guia_w;
	end if;

	if (ie_auditoria_w = 'S') and (coalesce(nr_seq_cobranca_w,0) = 0) then

		-- Edgar 01/03/2006, OS 29972, inclui selects abaixo
		select	coalesce(sum(a.vl_guia),0)
		into STRICT	vl_guia_w
		from	conta_paciente_guia a
		where	a.nr_interno_conta	= nr_interno_conta_w
		and	a.cd_autorizacao	= cd_autorizacao_aux_w;

		select	coalesce(sum(vl_rec_maior),0)
		into STRICT	vl_rec_maior_w
		from	titulo_receber_liq
		where	nr_seq_ret_item in (	SELECT	b.nr_sequencia
						from	convenio_retorno_item b,
							convenio_retorno a
						where	a.nr_sequencia		= b.nr_seq_retorno
						and	a.ie_status_retorno	='F'
						and	b.nr_interno_conta 	= nr_interno_conta_w
						and	b.cd_autorizacao	= cd_autorizacao_aux_w
						and	a.nr_sequencia		<> nr_seq_retorno_p);

		vl_saldo_conpaci_w 	:= coalesce(vl_guia_w,0) + coalesce(vl_rec_maior_w,0) - coalesce(vl_pago_w,0) - coalesce(vl_perdas_w,0);

		SELECT * FROM obter_conpaci_retorno(	nr_interno_conta_w, cd_autorizacao_aux_w, nm_usuario_p, dt_receb_w, vl_saldo_conpaci_w, nr_seq_conpaci_ret_w, ie_novo_w) INTO STRICT vl_saldo_conpaci_w, nr_seq_conpaci_ret_w, ie_novo_w;

		if (ie_novo_w = 'N') and (nr_seq_conpaci_ret_w IS NOT NULL AND nr_seq_conpaci_ret_w::text <> '') then
			
			select	min(nr_titulo)
			into STRICT	nr_ret_titulo_w
			from	convenio_retorno_item a
			where	a.nr_interno_conta = nr_interno_conta_w;
			
			select	max(nr_titulo)
			into STRICT	nr_conta_titulo_w
			from	convenio_retorno_item a
			where	a.nr_interno_conta = nr_interno_conta_w;
			
			if (nr_ret_titulo_w <> nr_conta_titulo_w) then
				update 	conta_paciente_retorno
				set 	vl_inicial 	= (	SELECT 	sum(x.vl_guia)
								from 	conta_paciente_guia x
								where 	x.nr_interno_conta = nr_interno_conta_w),
					vl_pendente 	= (	select 	sum(x.vl_guia)
								from 	conta_paciente_guia x
								where 	x.nr_interno_conta = nr_interno_conta_w)
				where 	nr_interno_conta = nr_interno_conta_w;	
				
			end if;

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_sequencia_w
			from	hist_audit_conta_paciente
			where	ie_acao = 5;

			if (coalesce(nr_sequencia_w,0)	<> 0) then

				insert into conta_paciente_ret_hist(nr_sequencia,
						nr_seq_conpaci_ret,
						dt_historico,
						vl_historico,
						nr_seq_hist_audit,
						dt_atualizacao,
						nm_usuario,
						nr_seq_ret_item,
						nm_usuario_resp)
				values (nextval('conta_paciente_ret_hist_seq'),
						nr_seq_conpaci_ret_w,
						dt_receb_w,
						vl_pago_w,
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_ret_item_w,
						nm_usuario_p);

				if (vl_glosa_w < 0) and (ie_glosa_w = 'S') then

					insert into conta_paciente_ret_hist(nr_sequencia,
						nr_seq_conpaci_ret,
						dt_historico,
						vl_historico,
						nr_seq_hist_audit,
						dt_atualizacao,
						nm_usuario,
						nr_seq_ret_item,
						cd_motivo_glosa,
						nm_usuario_resp)
					values (nextval('conta_paciente_ret_hist_seq'),
						nr_seq_conpaci_ret_w,
						dt_receb_w,
						vl_glosa_w,
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_ret_item_w,
						cd_motivo_glosa_w,
						nm_usuario_p);

				end if;

			end if;

			update	conta_paciente_retorno
			set	ie_situacao	= 'A',
				dt_adequacao	= dt_receb_w
			where	nr_sequencia 	= nr_seq_conpaci_ret_w
			and	ie_situacao 	<> 'A';

		end if;
	end if;
	
	ds_titulos_contab_w	:= null;
	
	open C05;
	loop
	fetch C05 into
		nr_titulo_w,
		dt_liquidacao_w,
		vl_titulo_w,
		vl_saldo_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */

		select	coalesce(max(a.dt_liquidacao),dt_receb_w),
			coalesce(max(a.vl_despesa_bancaria),0),
			max(a.nr_sequencia)
		into STRICT	dt_recebimento_w,
			vl_despesa_bancaria_w,
			nr_seq_tit_cobr_w
		FROM titulo_receber_cobr a
LEFT OUTER JOIN banco_ocorr_escrit_ret b ON (a.nr_seq_ocorrencia_ret = b.nr_sequencia)
WHERE (ie_somente_liquidacao_w = 'N' or b.ie_rejeitado = 'L')  and a.nr_titulo		= nr_titulo_w and a.nr_seq_cobranca	= nr_seq_cobranca_w;

		select	coalesce(sum(vl_rec_maior),0)
		into STRICT	vl_rec_maior_w
		from	titulo_receber_liq
		where	nr_titulo	= nr_titulo_w
		and	nr_seq_ret_item in (	SELECT	b.nr_sequencia
						from	convenio_retorno_item b,
							convenio_retorno a
						where	a.nr_sequencia		= b.nr_seq_retorno
						and	a.ie_status_retorno	='F'
						and	b.nr_interno_conta 	= nr_interno_conta_w
						and	b.cd_autorizacao	= cd_autorizacao_aux_w
						and	a.nr_sequencia		<> nr_seq_retorno_p
						
union

						SELECT	b.nr_sequencia		-- Edgar 04/06/2009, tratar a senha, OS 143315
						from	conta_paciente c,
							convenio_retorno_item b,
							convenio_retorno a
						where	a.nr_sequencia		= b.nr_seq_retorno
						and	b.nr_interno_conta	= c.nr_interno_conta
						and	a.ie_status_retorno	='F'
						and	b.nr_interno_conta 	= nr_interno_conta_w
						and	b.cd_autorizacao	= obter_senha_atendimento(c.nr_atendimento)
						and	a.nr_sequencia		<> nr_seq_retorno_p
						and	ie_tit_ret_senha_w	= 'S');

		if (vl_pago_w <> 0) then
			if (vl_rec_maior_w <> 0) then
				if (vl_pago_w >= vl_rec_maior_w) then
					vl_pago_w	:= vl_pago_w - vl_rec_maior_w;
					vl_rec_maior_w	:= vl_rec_maior_w * -1;
				else
					vl_rec_maior_w	:= (vl_pago_w * -1);
					vl_pago_w 	:= 0;
				end if;

				update	convenio_retorno_item
				set	vl_adicional	= vl_rec_maior_w,
					vl_pago		= (vl_pago_w * -1)
				where nr_sequencia = nr_seq_ret_item_w;
			end if;

			vl_baixa_w := vl_pago_w;


			if 	((vl_titulo_w - vl_saldo_titulo_w) <= vl_pago_w) then

				vl_baixa_w := (vl_titulo_w - vl_saldo_titulo_w);

				if (vl_baixa_w > vl_pago_w) then
					vl_baixa_w := vl_pago_w;
				end if;

				vl_pago_w := vl_pago_w - vl_baixa_w;

			elsif (vl_pago_ant_w + vl_glosa_w = 0) then
				vl_pago_w	:= vl_pago_ant_w;
			elsif	(vl_guia_w - (vl_pago_ant_w - vl_glosa_w) = 0) then
				vl_pago_w := vl_pago_w * -1;
				vl_baixa_w := vl_pago_w;
				/*Se tratar se de guia negativa e o valor pago e glosa compor o total da guia, entao inverte novamente
				o sinal para liberar valor no titulo a receber*/
		
			else
				vl_pago_w := 0;
			end if;

			vl_saldo_titulo_w	:= vl_saldo_titulo_w - vl_baixa_w;
			vl_baixa_glosa_w	:= vl_glosa_w;
			vl_baixa_desconto_w 	:= vl_desconto_w;

			if (vl_glosa_w > 0) and (vl_pago_w + vl_glosa_w <> 0) then
				if (vl_saldo_titulo_w <= vl_glosa_w) then
					vl_baixa_glosa_w := vl_saldo_titulo_w;
				else
					vl_baixa_glosa_w := vl_glosa_w;
				end if;
				vl_glosa_w := vl_glosa_w - vl_baixa_glosa_w;
			end if;

			if (vl_desconto_w > 0) then
				if	((vl_saldo_titulo_w - vl_baixa_glosa_w) <= vl_desconto_w) then
					vl_baixa_desconto_w := (coalesce(vl_saldo_titulo_w,0) - coalesce(vl_baixa_glosa_w,0));
				else
					vl_baixa_desconto_w := vl_desconto_w;
				end if;
				vl_desconto_w := vl_desconto_w - vl_baixa_desconto_w;
				-- vl_nota_credito_w		:= vl_nota_credito_w * -1; ahoffelder
			end if;

			vl_pago_w := vl_pago_w - vl_baixa_w;
			
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_AMENOR_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_amenor_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_amenor_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_amenor_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_amenor_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;
			
			if (cd_tipo_receb_amenor_regra_w IS NOT NULL AND cd_tipo_receb_amenor_regra_w::text <> '') and (nr_seq_trans_amenor_regra_w IS NOT NULL AND nr_seq_trans_amenor_regra_w::text <> '') and (coalesce(vl_amenor_w,0) <> 0) and (ie_glosa_w = 'N') then --Somente se ie_glosa = N que e valor de reapresentacao.
			
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						CD_CENTRO_CUSTO_DESC,
						NR_SEQ_MOTIVO_DESC,
						vl_perdas,
						nr_adiantamento,
						vl_despesa_bancaria,
						nr_seq_cobranca,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						ie_tipo_perda,
						vl_nota_credito,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						0,
						0,
						0,
						0,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_tipo_receb_amenor_regra_w,
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
						cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
						null,
						null,
						0,
						nr_seq_trans_amenor_regra_w,
						0,
						0,
						nr_seq_retorno_p,
						0,
						nr_seq_ret_item_w,
						'S',
						null,
						null,
						0,
						nr_adiantamento_w,
						vl_despesa_bancaria_w,
						nr_seq_cobranca_w,
						0,
						0,
						vl_amenor_w,
						null,
						0,
						nr_seq_mot_glosa_w);
						
				CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w,
							null,
							nm_usuario_p,
							nr_titulo_w,
							nr_sequencia_w);
						
				vl_amenor_w	:= 0;
			end if;			
			
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_NOTA_CREDITO_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_nc_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_nc_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_nc_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_nc_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

			if (cd_tipo_receb_nc_regra_w IS NOT NULL AND cd_tipo_receb_nc_regra_w::text <> '') and (nr_seq_trans_nc_regra_w IS NOT NULL AND nr_seq_trans_nc_regra_w::text <> '') and (coalesce(vl_nota_credito_w,0) <> 0) then
			
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						CD_CENTRO_CUSTO_DESC,
						NR_SEQ_MOTIVO_DESC,
						vl_perdas,
						nr_adiantamento,
						vl_despesa_bancaria,
						nr_seq_cobranca,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						ie_tipo_perda,
						vl_nota_credito,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						0,
						0,
						0,
						0,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_tipo_receb_nc_regra_w,
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
						cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
						null,
						null,
						0,
						nr_seq_trans_nc_regra_w,
						0,
						0,
						nr_seq_retorno_p,
						0,
						nr_seq_ret_item_w,
						'S',
						null,
						null,
						0,
						nr_adiantamento_w,
						vl_despesa_bancaria_w,
						nr_seq_cobranca_w,
						0,
						0,
						0,
						null,
						vl_nota_credito_w,
						nr_seq_mot_glosa_w);
						
				CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w,
							null,
							nm_usuario_p,
							nr_titulo_w,
							nr_sequencia_w);

				if (vl_nota_credito_w * -1 < 0) then
					CALL gerar_baixa_nota_credito(nr_sequencia_w,nr_seq_tit_cobr_w,null,nr_titulo_w,nm_usuario_p,'E');
				else
					CALL gerar_baixa_nota_credito(nr_sequencia_w,nr_seq_tit_cobr_w,null,nr_titulo_w,nm_usuario_p,'B');
				end if;
				
				ie_nota_credito_w := 'N';
						
				vl_nota_credito_w	:= 0;
			end if;		

			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_DESCONTO_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_desc_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_desc_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_desc_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_desc_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

			/* Francisco - OS97438 - 21/06/2008 */

			if	((nr_seq_trans_desc_ret_w IS NOT NULL AND nr_seq_trans_desc_ret_w::text <> '' AND cd_tipo_receb_desc_ret_w IS NOT NULL AND cd_tipo_receb_desc_ret_w::text <> '') or
				 (nr_seq_trans_desc_regra_w IS NOT NULL AND nr_seq_trans_desc_regra_w::text <> '' AND cd_tipo_receb_desc_regra_w IS NOT NULL AND cd_tipo_receb_desc_regra_w::text <> '')) and (vl_baixa_desconto_w <> 0) then

				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						CD_CENTRO_CUSTO_DESC,
						NR_SEQ_MOTIVO_DESC,
						nr_adiantamento,
						nr_seq_cobranca,
						vl_despesa_bancaria,
						vl_nota_credito,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						0,
						coalesce(vl_baixa_desconto_w,0),
					  	0,
						0,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
					  	coalesce(cd_tipo_receb_desc_regra_w,cd_tipo_receb_desc_ret_w),
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
					  	cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
					  	null,
						null,
						0,
					  	coalesce(nr_seq_trans_desc_regra_w,nr_seq_trans_desc_ret_w),
						0,
						0,
					  	nr_seq_retorno_p,
						0,
						nr_seq_ret_item_w,
						'S',
						CD_CENTRO_CUSTO_DESC_w,
						NR_SEQ_MOTIVO_DESC_w,
						nr_adiantamento_w,
						nr_seq_cobranca_w,
						vl_despesa_bancaria_w,
						vl_nota_credito_w,
						0,
						0,
						0,
						nr_seq_mot_glosa_w);

				if (coalesce(vl_baixa_desconto_w,0) > 0) then
					CALL GERAR_TIT_REC_LIQ_DESC(nr_titulo_w, nr_sequencia_w, nm_usuario_p);
				end if;

				vl_baixa_desconto_w	:= 0;

			end if;
			
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_PERDAS_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_perda_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_perda_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_perda_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_perda_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

			/* Edgar  - OS105786 - 03/10/2008 */

			if	((nr_seq_trans_fin_perda_w IS NOT NULL AND nr_seq_trans_fin_perda_w::text <> '' AND cd_tipo_receb_perda_w IS NOT NULL AND cd_tipo_receb_perda_w::text <> '') or
				 (nr_seq_trans_perda_regra_w IS NOT NULL AND nr_seq_trans_perda_regra_w::text <> '' AND cd_tipo_receb_perda_regra_w IS NOT NULL AND cd_tipo_receb_perda_regra_w::text <> '')) and (vl_perdas_w <> 0) then

				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						CD_CENTRO_CUSTO_DESC,
						NR_SEQ_MOTIVO_DESC,
						vl_perdas,
						nr_adiantamento,
						vl_despesa_bancaria,
						nr_seq_cobranca,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						ie_tipo_perda,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						0,
						0,
						0,
						0,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						coalesce(cd_tipo_receb_perda_regra_w,cd_tipo_receb_perda_w),
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
						cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
						null,
						null,
						0,
						coalesce(nr_seq_trans_perda_regra_w,nr_seq_trans_fin_perda_w),
						0,
						0,
						nr_seq_retorno_p,
						0,
						nr_seq_ret_item_w,
						'S',
						CD_CENTRO_CUSTO_DESC_w,
						NR_SEQ_MOTIVO_DESC_w,
						vl_perdas_w,
						nr_adiantamento_w,
						vl_despesa_bancaria_w,
						nr_seq_cobranca_w,
						0,
						0,
						0,
						ie_tipo_perda_p,
						nr_seq_mot_glosa_w);

				if (coalesce(vl_perdas_w,0) <> 0) then
					CALL GERAR_TIT_REC_LIQ_DESC(nr_titulo_w, nr_sequencia_w, nm_usuario_p);
				end if;
				
				if (ie_controle_perdas_w = 'S') then
				
					if (vl_perdas_w > 0) then						
						CALL gerar_perda_contas_receber(
							cd_estabelecimento_w,
							null, 
							nr_titulo_w, 
							nr_sequencia_w, 
							vl_perdas_w, 
							coalesce(ie_tipo_perda_p,'R'), 
							nm_usuario_p, 
							nr_seq_motivo_perda_p,
							dt_recebimento_w);
					
					elsif (vl_perdas_w < 0) then						
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_baixa_perda_w
						from	titulo_receber_liq a,
							convenio_retorno_item b
						where	a.nr_titulo		= b.nr_titulo
						and	a.nr_seq_ret_item	= b.nr_sequencia
						and	a.vl_perdas		> 0
						and	a.nr_titulo		= nr_titulo_w
						and	b.nr_interno_conta	= nr_interno_conta_w
						and	b.nr_seq_retorno	= nr_seq_ret_estorno_w;
						
						select	max(nr_sequencia)
						into STRICT	nr_seq_perda_w
						from	perda_contas_receber
						where	nr_titulo	= nr_titulo_w
						and	nr_seq_baixa	= nr_seq_baixa_perda_w;
						
						if (nr_seq_perda_w IS NOT NULL AND nr_seq_perda_w::text <> '') then
							CALL fin_cancelar_perda(nr_seq_perda_w,nm_usuario_p);
						end if;						
					end if;
				end if;
				
				vl_perdas_w	:= 0;
			end if;
			
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_GLOSA_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_glosa_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_glosa_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_glosa_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_glosa_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

			if (cd_tipo_receb_glosa_regra_w IS NOT NULL AND cd_tipo_receb_glosa_regra_w::text <> '') and (nr_seq_trans_glosa_regra_w IS NOT NULL AND nr_seq_trans_glosa_regra_w::text <> '') and (coalesce(vl_baixa_glosa_w,0) <> 0) then
				
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						vl_perdas,
						nr_adiantamento,
						vl_despesa_bancaria,
						nr_seq_cobranca,
						vl_nota_credito,
						vl_cambial_ativo,
						vl_cambial_passivo,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						ie_tipo_perda,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						0  * -1,
						coalesce(vl_baixa_desconto_w,0),
						coalesce(vl_juros_cobr_w,0) + coalesce(vl_juros_w,0),
						vl_multa_cobr_w,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_tipo_receb_glosa_regra_w,
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
						cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
						null,
						null,
						0,
						nr_seq_trans_glosa_regra_w,
						0,
						vl_baixa_glosa_w,
						nr_seq_retorno_p,
						0 * -1,
						nr_seq_ret_item_w,
						'S',
						vl_perdas_w,
						nr_adiantamento_w,
						vl_despesa_bancaria_w,
						nr_seq_cobranca_w,
						vl_nota_credito_w,
						vl_cambial_ativo_w,
						vl_cambial_passivo_w,
						0,
						0,
						vl_amenor_w,
						null,
						nr_seq_mot_glosa_w);
						
				CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w,
							null,
							nm_usuario_p,
							nr_titulo_w,
							nr_sequencia_w);
						
				vl_baixa_glosa_w	:= 0;			
				
			end if;
			
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_PAGO_ADIC_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_pago_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_pago_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_pago_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_pago_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	titulo_receber_liq
			where	nr_titulo	= nr_titulo_w;

			insert into titulo_receber_liq(nr_titulo,
					nr_sequencia,
					dt_recebimento,
					vl_recebido,
					vl_descontos,
					vl_juros,
					vl_multa,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					cd_tipo_recebimento,
					ie_acao,
					cd_serie_nf_devol,
					nr_nota_fiscal_devol,
					nr_seq_conta_banco,
					cd_banco,
					cd_agencia_bancaria,
					nr_documento,
					nr_lote_banco,
					cd_cgc_emp_cred,
					nr_cartao_cred,
					nr_lote_contabil,
					nr_seq_trans_fin,
					vl_rec_maior,
					vl_glosa,
					nr_seq_retorno,
					vl_adequado,
					nr_seq_ret_item,
					ie_lib_caixa,
					vl_perdas,
					nr_adiantamento,
					vl_despesa_bancaria,
					nr_seq_cobranca,
					vl_nota_credito,
					vl_cambial_ativo,
					vl_cambial_passivo,
					nr_lote_contab_antecip,
					nr_lote_contab_pro_rata,
					vl_recurso,
					ie_tipo_perda,
					nr_seq_mot_glosa)
			values (nr_titulo_w,
					nr_sequencia_w,
					dt_recebimento_w,
					vl_baixa_w  * -1,
					coalesce(vl_baixa_desconto_w,0),
				  	coalesce(vl_juros_cobr_w,0) + coalesce(vl_juros_w,0),
					vl_multa_cobr_w,
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
				  	coalesce(cd_tipo_receb_pago_regra_w,cd_tipo_Receb_w),
					'I',
					null,
					null,
					CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
				  	cd_banco_w,
					cd_agencia_w,
					cd_autorizacao_w,
					null,
				  	null,
					null,
					0,
				  	coalesce(nr_seq_trans_pago_regra_w,nr_seq_trans_w),
					vl_rec_maior_w,
					vl_baixa_glosa_w,
				  	nr_seq_retorno_p,
					vl_adequado_w * -1,
					nr_seq_ret_item_w,
					'S',
					vl_perdas_w,
					nr_adiantamento_w,
					vl_despesa_bancaria_w,
					nr_seq_cobranca_w,
					vl_nota_credito_w,
					vl_cambial_ativo_w,
					vl_cambial_passivo_w,
					0,
					0,
					vl_amenor_w,
					ie_tipo_perda_p,
					nr_seq_mot_glosa_w);

			if (coalesce(vl_baixa_desconto_w,0) <> 0) or (coalesce(vl_perdas_w, 0) <> 0) then
				CALL GERAR_TIT_REC_LIQ_DESC(nr_titulo_w, nr_sequencia_w, nm_usuario_p);
			end if;
			
			if (ie_controle_perdas_w = 'S') then
			
				if (vl_perdas_w > 0) then
					CALL gerar_perda_contas_receber(
						cd_estabelecimento_w,
						null, 
						nr_titulo_w, 
						nr_sequencia_w, 
						vl_perdas_w, 
						coalesce(ie_tipo_perda_p,'R'), 
						nm_usuario_p, 
						nr_seq_motivo_perda_p,
						dt_recebimento_w);
				
				elsif (vl_perdas_w < 0) then
				
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_baixa_perda_w
					from	titulo_receber_liq a,
						convenio_retorno_item b
					where	a.nr_titulo		= b.nr_titulo
					and	a.nr_seq_ret_item	= b.nr_sequencia
					and	a.vl_perdas		> 0
					and	a.nr_titulo		= nr_titulo_w
					and	b.nr_interno_conta	= nr_interno_conta_w
					and	b.nr_seq_retorno	= nr_seq_ret_estorno_w;
					
					select	max(nr_sequencia)
					into STRICT	nr_seq_perda_w
					from	perda_contas_receber
					where	nr_titulo	= nr_titulo_w
					and	nr_seq_baixa	= nr_seq_baixa_perda_w;
					
					if (nr_seq_perda_w IS NOT NULL AND nr_seq_perda_w::text <> '') then
						CALL fin_cancelar_perda(nr_seq_perda_w,nm_usuario_p);
					end if;	
				end if;
			end if;

			update	convenio_retorno_item
			set	nr_titulo = coalesce(nr_titulo,nr_titulo_w)
			where	nr_sequencia = nr_seq_ret_item_w;

			-- Edgar 12/12/2006, OS 44726, inclui este bloco para gerar rateio cc
			if (vl_baixa_glosa_w <> 0) or (vl_rec_maior_w <> 0) then

				CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w,
							null,
							nm_usuario_p,
							nr_titulo_w,
							nr_sequencia_w);
							
				nr_titulo_contab_w	:= null;
				
				nr_titulo_contab_w := pls_gerar_tit_rec_liq_mens(nr_titulo_w, nr_sequencia_w, nm_usuario_p, nr_titulo_contab_w);
				
				
				if (nr_titulo_contab_w IS NOT NULL AND nr_titulo_contab_w::text <> '') then
					ds_titulos_contab_w	:= substr(ds_titulos_contab_w || nr_titulo_contab_w || ', ',1,4000);
				end if;
								
/*				gerar_titulo_rec_liq_cc(cd_estabelecimento_w, nr_seq_ret_item_w, nm_usuario_p, null, null); Bruna, 01/03/2007. coloquei a chamada acima*/

			end if;

			if (dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '') then
				update	titulo_receber
				set	dt_liquidacao	 = NULL,
					ie_situacao	= '1'
				where	nr_titulo = nr_titulo_w;
			end if;

			lista_titulo_w.extend;
			lista_titulo_w(posicao_lista_w) := nr_titulo_w;
			posicao_lista_w := posicao_lista_w + 1;

			if (ie_nota_credito_w = 'S') then
				if (vl_baixa_w * -1 < 0) then
					CALL gerar_baixa_nota_credito(nr_sequencia_w,nr_seq_tit_cobr_w,null,nr_titulo_w,nm_usuario_p,'E');
				else
					CALL gerar_baixa_nota_credito(nr_sequencia_w,nr_seq_tit_cobr_w,null,nr_titulo_w,nm_usuario_p,'B');
				end if;
			end if;

			if (ie_atualizar_tf_titulo_w = 'S') then

				update	titulo_receber
				set	nr_seq_trans_fin_baixa	= nr_seq_trans_w
				where	nr_titulo		= nr_titulo_w;

			end if;

			exit;

		end if;
        if (ds_user_locale_w = 'es_CO') then
            CALL gerar_baixa_tit_pag_imp(nr_titulo_w,nm_usuario_p);
        end if;
	end loop;
	close C05;
	
	if (coalesce(nr_seq_tipo_alerta_w,0) > 0) then
		update	alerta_paciente
		set	ie_situacao		= 'I',
			nm_usuario_inativacao	= nm_usuario_p,
			dt_inativacao		= clock_timestamp()
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	obter_se_contido(nr_seq_tipo_alerta,nr_seq_tipo_alerta_w) = 'S';
	end if;
	

end loop;
close C04;

	if (ds_titulos_contab_w IS NOT NULL AND ds_titulos_contab_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236517, 'NR_TITULO=' || ds_titulos_contab_w);
	end if;

	ds_titulos_contab_w	:= null;

open C01;
loop
fetch C01 into
	nr_seq_ret_item_w,
	nr_seq_protocolo_w,
	nr_interno_conta_w,
	cd_autorizacao_w,
	cd_autorizacao_aux_w,
	ie_glosa_w,
	vl_pago_w,
	vl_adicional_w,
	vl_glosa_w,
	vl_adequado_w,
	vl_desconto_w,
	vl_amenor_w,
	cd_motivo_glosa_w,
	nr_titulo_w,
	CD_CENTRO_CUSTO_DESC_w,
	NR_SEQ_MOTIVO_DESC_w,
	vl_perdas_w,
	cd_autorizacao_senha_w,
	vl_amenor_post_w,
	vl_guia_w,
	vl_juros_cobr_w,
	vl_multa_cobr_w,
	vl_nota_credito_w,
	vl_juros_w,
	vl_cambial_ativo_w,
	vl_cambial_passivo_w,
	cd_pessoa_fisica_w,
	nr_seq_ret_item_est_w,
	vl_tributo_guia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	select	coalesce(x.cd_motivo_glosa, (select max(y.cd_motivo_glosa) from convenio_retorno_glosa y where y.nr_seq_ret_item = x.nr_sequencia))
	into STRICT	cd_mtv_glosa_regra_w
	from	convenio_retorno_item x
	where	x.nr_sequencia = nr_seq_ret_item_w;
	
	if (ie_passivo_saldo_tit_w = 'N') then --lhalves OS 709618 em 26/06/2014 (Dia do meu aniversario :), se esta definido para nao somar o saldo, deve somar o valor passivo ao valor pago.
		vl_pago_w	:= vl_pago_w + vl_cambial_passivo_w;
	end if;

	select 	max(nr_seq_lote_protocolo)
	into STRICT	nr_seq_lote_protocolo_w
	from	protocolo_convenio
	where	nr_seq_protocolo = nr_seq_protocolo_w;
	

	if (ie_auditoria_w = 'S') and (coalesce(nr_seq_cobranca_w,0) = 0) then
		begin

		-- Edgar 06/06/2008, OS 95678, obter o valor que ja foi pago em outro retorno
		select	coalesce(sum(vl_recebido + vl_glosa),0)
		into STRICT	vl_recebido_outro_ret_w
		from	titulo_receber_liq
		where	nr_titulo	= nr_titulo_w
		and	nr_seq_ret_item in (	SELECT	b.nr_sequencia
						from	convenio_retorno_item b,
							convenio_retorno a
						where	a.nr_sequencia		= b.nr_seq_retorno
						and	a.ie_status_retorno	='F'
						and	b.nr_interno_conta 	= nr_interno_conta_w
						and	b.cd_autorizacao	= cd_autorizacao_aux_w
						and	a.nr_sequencia		<> nr_seq_retorno_p);


		/* Francisco - 25/09/2009 - OS 156069 - Tratei o vl_amenor_post */

		if (vl_amenor_post_w > 0) then
			vl_saldo_conpaci_w	:= vl_guia_w - vl_amenor_post_w;
		else
			vl_saldo_conpaci_w := vl_pago_w + vl_glosa_w + vl_recebido_outro_ret_w + vl_desconto_w;
		end if;
		
		exception
		when others then
			--r.aise_application_error(-20011, 'vl_recebido_outro_ret_w = ' || vl_recebido_outro_ret_w || chr(13) || sqlerrm);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(174132,'VL_RECEBIDO_OUTRO_RET_W='||vl_recebido_outro_ret_w);
			
		end;

		SELECT * FROM obter_conpaci_retorno(nr_interno_conta_w, cd_autorizacao_aux_w, nm_usuario_p, dt_receb_w, vl_saldo_conpaci_w, nr_seq_conpaci_ret_w, ie_novo_w) INTO STRICT vl_saldo_conpaci_w, nr_seq_conpaci_ret_w, ie_novo_w;

		if (ie_novo_w = 'N') and (nr_seq_conpaci_ret_w IS NOT NULL AND nr_seq_conpaci_ret_w::text <> '') then
			
			select	min(nr_titulo)
			into STRICT	nr_ret_titulo_w
			from	convenio_retorno_item a
			where	a.nr_interno_conta = nr_interno_conta_w;
			
			select	max(a.nr_titulo)
			into STRICT	nr_conta_titulo_w
			from	convenio_retorno_item a
			where	a.nr_interno_conta = nr_interno_conta_w;
			
			if (nr_ret_titulo_w <> nr_conta_titulo_w) then
				update 	conta_paciente_retorno
				set 	vl_inicial 	= (	SELECT 	sum(x.vl_guia)
								from 	conta_paciente_guia x
								where 	x.nr_interno_conta = nr_interno_conta_w),
					vl_pendente 	= (	select 	sum(x.vl_guia)
								from 	conta_paciente_guia x
								where 	x.nr_interno_conta = nr_interno_conta_w)
				where 	nr_interno_conta = nr_interno_conta_w;	
				
			end if;

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_sequencia_w
			from	hist_audit_conta_paciente
			where	ie_acao = 1;

			insert into conta_paciente_ret_hist(nr_sequencia,
					nr_seq_conpaci_ret,
					dt_historico,
					vl_historico,
					nr_seq_hist_audit,
					dt_atualizacao,
					nm_usuario,
					nr_seq_ret_item,
					nm_usuario_resp)
			values (nextval('conta_paciente_ret_hist_seq'),
					nr_seq_conpaci_ret_w,
					dt_receb_w,
					vl_pago_w,
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_ret_item_w,
					nm_usuario_p);

		end if;

		if (ie_novo_w = 'N') and (vl_glosa_w > 0) and (ie_glosa_w = 'S') and (nr_seq_conpaci_ret_w IS NOT NULL AND nr_seq_conpaci_ret_w::text <> '') then

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_sequencia_w
			from	hist_audit_conta_paciente
			where	ie_acao = 3;

			insert into conta_paciente_ret_hist(nr_sequencia,
					nr_seq_conpaci_ret,
					dt_historico,
					vl_historico,
					nr_seq_hist_audit,
					dt_atualizacao,
					nm_usuario,
					nr_seq_ret_item,
					cd_motivo_glosa,
					nm_usuario_resp)
			values (nextval('conta_paciente_ret_hist_seq'),
					nr_seq_conpaci_ret_w,
					dt_receb_w,
					vl_glosa_w,
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_ret_item_w,
					cd_motivo_glosa_w,
					nm_usuario_p);

		end if;
		
		update	conta_paciente_retorno
			set	ie_situacao	= 'A',
				dt_adequacao	= dt_receb_w
			where	nr_sequencia 	= nr_seq_conpaci_ret_w
			and	ie_situacao 	<> 'A';

		if	((vl_pago_w <> 0) or (vl_amenor_w <> 0)) then
			open C10;
			loop
			fetch C10 into
				nr_seq_lote_hist_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C10 */
				CALL gerar_baixa_lote_recurso(nr_seq_ret_item_w, nr_seq_lote_hist_guia_w, vl_pago_w, 0, vl_amenor_w, nm_usuario_p);
			end loop;
			close c10;
		end if;

	end if;
	
	/*if	((vl_pago_w <> 0) or (vl_amenor_w <> 0)) then
		open C11;
		loop
		fetch C11 into
			nr_seq_lote_hist_guia_w;
		exit when C11%notfound;
			gerar_baixa_lote_grg(nr_seq_ret_item_w, nr_seq_lote_hist_guia_w, vl_pago_w, 0, vl_amenor_w, nm_usuario_p,dt_receb_w);
		end loop;
		close c11;
	end if;*/
	if	((vl_pago_w + vl_adicional_w + vl_glosa_w + vl_desconto_w + vl_perdas_w + vl_nota_credito_w + vl_amenor_w) <> 0) or (vl_adequado_w <> 0) then

		nr_item_w := 0;
		open C03;
		loop
		fetch C03 into
			nr_titulo_w,
			vl_saldo_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			/*OS 1780881 - Precisa zerar a variavel a titulo, pq se inserir a baixa, ja busca a ultima seq + 1 de cada titulo. Da forma que estava, caso n ocorra a baixa, a variavel vai ter uma sequencia, e pode da erro na classificaccao da baixa.*/

			nr_sequencia_w := null;
			
			ie_nota_credito_w := 'S';

			select	coalesce(max(a.dt_liquidacao),dt_receb_w),
				coalesce(max(a.vl_despesa_bancaria),0),
				max(a.nr_sequencia)
			into STRICT	dt_recebimento_w,
				vl_despesa_bancaria_w,
				nr_seq_tit_cobr_w
			FROM titulo_receber_cobr a
LEFT OUTER JOIN banco_ocorr_escrit_ret b ON (a.nr_seq_ocorrencia_ret = b.nr_sequencia)
WHERE (ie_somente_liquidacao_w = 'N' or b.ie_rejeitado = 'L')  and a.nr_titulo		= nr_titulo_w and a.nr_seq_cobranca	= nr_seq_cobranca_w;
			
			if (vl_pago_w <> 0) then
				vl_pago_w := vl_pago_w - vl_tributo_guia_w;
			end if;

			nr_item_w 		:= nr_item_w + 1;
			vl_baixa_desconto_w 	:= vl_desconto_w;
			vl_baixa_glosa_w 	:= vl_glosa_w;
			vl_baixa_w 		:= vl_pago_w;

			select	count(*)
			into STRICT	qt_tit_desdob_w
			from	titulo_receber_desdob
			where	nr_titulo_dest = nr_titulo_w;
			
			if (nr_seq_ret_item_est_w IS NOT NULL AND nr_seq_ret_item_est_w::text <> '') and --Se for de estorno, e o titulo desdobrado, o valor baixado deve ser com base na baixa original
				(vl_pago_w < 0) and (qt_tit_desdob_w > 0) then
				
				select	sum(a.vl_recebido)
				into STRICT	vl_receb_ant_est_w
				from	titulo_receber_liq a
				where	a.nr_titulo		= nr_titulo_w
				and	a.nr_seq_ret_item	= nr_seq_ret_item_est_w
				and	a.nr_sequencia		=
								(SELECT	max(x.nr_sequencia)
								from	titulo_receber_liq x
								where	x.nr_titulo		= a.nr_titulo
								and	x.nr_seq_ret_item	= nr_seq_ret_item_est_w
								and	x.vl_recebido		> 0);
								
				if (vl_receb_ant_est_w > 0) then
					vl_baixa_w	:= vl_receb_ant_est_w * -1;					
				end if;
			elsif (vl_saldo_titulo_w <= vl_pago_w) then
				vl_baixa_w := vl_saldo_titulo_w;
			end if;

			vl_saldo_titulo_w 	:= vl_saldo_titulo_w - vl_baixa_w;

			if (vl_glosa_w > 0) and (vl_pago_w + vl_glosa_w <> 0) then
				if (vl_saldo_titulo_w <= vl_glosa_w) then
					vl_baixa_glosa_w 	:= vl_saldo_titulo_w;
				else
					vl_baixa_glosa_w 	:= vl_glosa_w;
				end if;
				vl_glosa_w := vl_glosa_w - vl_baixa_glosa_w;
			end if;

			if (vl_desconto_w > 0) then
				if 	((vl_saldo_titulo_w - vl_baixa_glosa_w) <= vl_desconto_w) then
					vl_baixa_desconto_w 	:= (vl_saldo_titulo_w - vl_baixa_glosa_w);
				else
					vl_baixa_desconto_w 	:= vl_desconto_w;
				end if;
				vl_desconto_w 			:= vl_desconto_w - vl_baixa_desconto_w;
			end if;

			vl_pago_w := vl_pago_w - vl_baixa_w;
			
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_AMENOR_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_amenor_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_amenor_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_amenor_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_amenor_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

			if (cd_tipo_receb_amenor_regra_w IS NOT NULL AND cd_tipo_receb_amenor_regra_w::text <> '') and (nr_seq_trans_amenor_regra_w IS NOT NULL AND nr_seq_trans_amenor_regra_w::text <> '') and (coalesce(vl_amenor_w,0) <> 0) and (ie_glosa_w = 'N') then
				
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						CD_CENTRO_CUSTO_DESC,
						NR_SEQ_MOTIVO_DESC,
						nr_adiantamento,
						vl_despesa_bancaria,
						nr_seq_cobranca,
						vl_nota_credito,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						0,
						0,
						0,
						0,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						coalesce(cd_tipo_receb_amenor_regra_w,cd_tipo_receb_desc_ret_w),
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
						cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
						null,
						null,
						0,
						nr_seq_trans_amenor_regra_w,
						0,
						0,
						nr_seq_retorno_p,
						0,
						nr_seq_ret_item_w,
						'S',
						null,
						null,
						nr_adiantamento_w,
						vl_despesa_bancaria_w,
						nr_seq_cobranca_w,
						0,
						0,
						0,
						vl_amenor_w,
						nr_seq_mot_glosa_w);
						
				CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w,
							null,
							nm_usuario_p,
							nr_titulo_w,
							nr_sequencia_w);
							
				vl_amenor_w	:= 0;
				ie_gerou_liq_cc_w := 'S';
				
			end if;							
			
			--vl_pago_w := vl_pago_w - vl_baixa_w;	
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_NOTA_CREDITO_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_nc_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_nc_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_nc_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_nc_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

			if (cd_tipo_receb_nc_regra_w IS NOT NULL AND cd_tipo_receb_nc_regra_w::text <> '') and (nr_seq_trans_nc_regra_w IS NOT NULL AND nr_seq_trans_nc_regra_w::text <> '') and (coalesce(vl_nota_credito_w,0) <> 0) then
				
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						CD_CENTRO_CUSTO_DESC,
						NR_SEQ_MOTIVO_DESC,
						nr_adiantamento,
						vl_despesa_bancaria,
						nr_seq_cobranca,
						vl_nota_credito,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						0,
						0,
						0,
						0,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						coalesce(cd_tipo_receb_nc_regra_w,cd_tipo_receb_desc_ret_w),
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
						cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
						null,
						null,
						0,
						nr_seq_trans_nc_regra_w,
						0,
						0,
						nr_seq_retorno_p,
						0,
						nr_seq_ret_item_w,
						'S',
						null,
						null,
						nr_adiantamento_w,
						vl_despesa_bancaria_w,
						nr_seq_cobranca_w,
						vl_nota_credito_w,
						0,
						0,
						0,
						nr_seq_mot_glosa_w);
						
				CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w,
							null,
							nm_usuario_p,
							nr_titulo_w,
							nr_sequencia_w);
				ie_gerou_liq_cc_w := 'S';

				if (vl_nota_credito_w < 0)  then
					CALL gerar_baixa_nota_credito(nr_sequencia_w,nr_seq_tit_cobr_w,null,nr_titulo_w,nm_usuario_p,'E');
				else
					CALL gerar_baixa_nota_credito(nr_sequencia_w,nr_seq_tit_cobr_w,null,nr_titulo_w,nm_usuario_p,'B');
				end if;			
							
				ie_nota_credito_w := 'N';
							
				vl_nota_credito_w	:= 0;
				
			end if;
			
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_DESCONTO_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_desc_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_desc_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_desc_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_desc_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

			/* Francisco - OS97438 - 21/06/2008 */

			if	((nr_seq_trans_desc_ret_w IS NOT NULL AND nr_seq_trans_desc_ret_w::text <> '' AND cd_tipo_receb_desc_ret_w IS NOT NULL AND cd_tipo_receb_desc_ret_w::text <> '') or
				 (nr_seq_trans_desc_regra_w IS NOT NULL AND nr_seq_trans_desc_regra_w::text <> '' AND cd_tipo_receb_desc_regra_w IS NOT NULL AND cd_tipo_receb_desc_regra_w::text <> '')) and (vl_baixa_desconto_w <> 0) then

				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						CD_CENTRO_CUSTO_DESC,
						NR_SEQ_MOTIVO_DESC,
						nr_adiantamento,
						vl_despesa_bancaria,
						nr_seq_cobranca,
						vl_nota_credito,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						0,
						coalesce(vl_baixa_desconto_w,0),
						0,
						0,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						coalesce(cd_tipo_receb_desc_regra_w,cd_tipo_receb_desc_ret_w),
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
						cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
						null,
						null,
						0,
						coalesce(nr_seq_trans_desc_regra_w,nr_seq_trans_desc_ret_w),
						0,
						0,
						nr_seq_retorno_p,
						0,
						nr_seq_ret_item_w,
						'S',
						CD_CENTRO_CUSTO_DESC_w,
						NR_SEQ_MOTIVO_DESC_w,
						nr_adiantamento_w,
						vl_despesa_bancaria_w,
						nr_seq_cobranca_w,
						vl_nota_credito_w,
						0,
						0,
						0,
						nr_seq_mot_glosa_w);

				if (coalesce(vl_baixa_desconto_w,0) > 0) then
					CALL GERAR_TIT_REC_LIQ_DESC(nr_titulo_w, nr_sequencia_w, nm_usuario_p);
				end if;
				vl_baixa_desconto_w	:= 0;
				ie_gerou_liq_cc_w := 'N';
			end if;
			
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_PERDAS_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_perda_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_perda_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_perda_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_perda_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

			/* Edgar  - OS105786 - 03/10/2008 */

			if	((nr_seq_trans_fin_perda_w IS NOT NULL AND nr_seq_trans_fin_perda_w::text <> '' AND cd_tipo_receb_perda_w IS NOT NULL AND cd_tipo_receb_perda_w::text <> '') or
				 (nr_seq_trans_perda_regra_w IS NOT NULL AND nr_seq_trans_perda_regra_w::text <> '' AND cd_tipo_receb_perda_regra_w IS NOT NULL AND cd_tipo_receb_perda_regra_w::text <> '')) and (vl_perdas_w <> 0) then

				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						CD_CENTRO_CUSTO_DESC,
						NR_SEQ_MOTIVO_DESC,
						vl_perdas,
						nr_adiantamento,
						vl_despesa_bancaria,
						nr_seq_cobranca,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						ie_tipo_perda,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						0,
						0,
						0,
						0,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						coalesce(cd_tipo_receb_perda_regra_w,cd_tipo_receb_perda_w),
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
						cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
						null,
						null,
						0,
						coalesce(nr_seq_trans_perda_regra_w,nr_seq_trans_fin_perda_w),
						0,
						0,
						nr_seq_retorno_p,
						0,
						nr_seq_ret_item_w,
						'S',
						CD_CENTRO_CUSTO_DESC_w,
						NR_SEQ_MOTIVO_DESC_w,
						vl_perdas_w,
						nr_adiantamento_w,
						vl_despesa_bancaria_w,
						nr_seq_cobranca_w,
						0,
						0,
						0,
						ie_tipo_perda_p,
						nr_seq_mot_glosa_w);

				if (coalesce(vl_perdas_w,0) <> 0) then
					CALL GERAR_TIT_REC_LIQ_DESC(nr_titulo_w, nr_sequencia_w, nm_usuario_p);
				end if;
				
				if (ie_controle_perdas_w = 'S') then
				
					if (vl_perdas_w > 0) then					
						CALL gerar_perda_contas_receber(
							cd_estabelecimento_w,
							null, 
							nr_titulo_w, 
							nr_sequencia_w, 
							vl_perdas_w, 
							coalesce(ie_tipo_perda_p,'R'), 
							nm_usuario_p, 
							nr_seq_motivo_perda_p,
							dt_recebimento_w);
					elsif (vl_perdas_w < 0) then	
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_baixa_perda_w
						from	titulo_receber_liq a,
							convenio_retorno_item b
						where	a.nr_titulo		= b.nr_titulo
						and	a.nr_seq_ret_item	= b.nr_sequencia
						and	a.vl_perdas		> 0
						and	a.nr_titulo		= nr_titulo_w
						and	b.nr_interno_conta	= nr_interno_conta_w
						and	b.nr_seq_retorno	= nr_seq_ret_estorno_w;
						
						select	max(nr_sequencia)
						into STRICT	nr_seq_perda_w
						from	perda_contas_receber
						where	nr_titulo	= nr_titulo_w
						and	nr_seq_baixa	= nr_seq_baixa_perda_w;
						
						if (nr_seq_perda_w IS NOT NULL AND nr_seq_perda_w::text <> '') then
							CALL fin_cancelar_perda(nr_seq_perda_w,nm_usuario_p);
						end if;	
					end if;
				end if;
				
				vl_perdas_w	:= 0;
				ie_gerou_liq_cc_w := 'N';
			end if;	
			
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_GLOSA_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_glosa_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_glosa_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_glosa_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_glosa_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;
							
			if (cd_tipo_receb_glosa_regra_w IS NOT NULL AND cd_tipo_receb_glosa_regra_w::text <> '') and (nr_seq_trans_glosa_regra_w IS NOT NULL AND nr_seq_trans_glosa_regra_w::text <> '') and (coalesce(vl_baixa_glosa_w,0) <> 0) then
				
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						vl_perdas,
						nr_adiantamento,
						vl_despesa_bancaria,
						nr_seq_cobranca,
						vl_nota_credito,
						vl_cambial_ativo,
						vl_cambial_passivo,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						ie_tipo_perda,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						0,
						coalesce(vl_baixa_desconto_w,0),
						coalesce(vl_juros_cobr_w,0) + coalesce(vl_juros_w,0),
						vl_multa_cobr_w,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_tipo_receb_glosa_regra_w,
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
						cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
						null,
						null,
						0,
						nr_seq_trans_glosa_regra_w,
						CASE WHEN nr_item_w=1 THEN vl_adicional_w  ELSE 0 END ,
						vl_baixa_glosa_w,
						nr_seq_retorno_p,
						vl_adequado_w,
						nr_seq_ret_item_w,
						'S',
						vl_perdas_w,
						nr_adiantamento_w,
						vl_despesa_bancaria_w,
						nr_seq_cobranca_w,
						vl_nota_credito_w,
						vl_cambial_ativo_w,
						vl_cambial_passivo_w,
						0,
						0,
						vl_amenor_w,
						null,
						nr_seq_mot_glosa_w);
						
				CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w,
							null,
							nm_usuario_p,
							nr_titulo_w,
							nr_sequencia_w);
				
				vl_baixa_glosa_w := 0;
				ie_gerou_liq_cc_w := 'S';
				
			end if;
			
			SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> RET_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_PAGO_ADIC_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_pago_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_pago_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_mtv_glosa_regra_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> cd_autorizacao_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_pago_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_pago_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

			-- Edgar 22/10/2008, incluido if abaixo, OS 105786, nao gerar baixa se nao tiver valor para baixar
			if (coalesce(vl_baixa_w, 0) <> 0) or (coalesce(vl_baixa_desconto_w, 0) <> 0) or (coalesce(vl_adicional_w, 0) <> 0) or (coalesce(vl_baixa_glosa_w, 0) <> 0) or (coalesce(vl_adequado_w, 0) <> 0) or (coalesce(vl_perdas_w, 0) <> 0) or (coalesce(vl_nota_credito_w, 0) <> 0) then
								
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_sequencia_w
				from	titulo_receber_liq
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_receber_liq(nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						nr_seq_conta_banco,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						nr_seq_trans_fin,
						vl_rec_maior,
						vl_glosa,
						nr_seq_retorno,
						vl_adequado,
						nr_seq_ret_item,
						ie_lib_caixa,
						vl_perdas,
						nr_adiantamento,
						vl_despesa_bancaria,
						nr_seq_cobranca,
						vl_nota_credito,
						vl_cambial_ativo,
						vl_cambial_passivo,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata,
						vl_recurso,
						ie_tipo_perda,
						nr_seq_mot_glosa)
				values (nr_titulo_w,
						nr_sequencia_w,
						dt_recebimento_w,
						vl_baixa_w,
						coalesce(vl_baixa_desconto_w,0),
						coalesce(vl_juros_cobr_w,0) + coalesce(vl_juros_w,0),
						vl_multa_cobr_w,
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						coalesce(cd_tipo_receb_pago_regra_w,cd_tipo_receb_w),
						'I',
						null,
						null,
						CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
						cd_banco_w,
						cd_agencia_w,
						cd_autorizacao_w,
						null,
						null,
						null,
						0,
						coalesce(nr_seq_trans_pago_regra_w,nr_seq_trans_w),
						CASE WHEN nr_item_w=1 THEN vl_adicional_w  ELSE 0 END ,
						vl_baixa_glosa_w,
						nr_seq_retorno_p,
						vl_adequado_w,
						nr_seq_ret_item_w,
						'S',
						vl_perdas_w,
						nr_adiantamento_w,
						vl_despesa_bancaria_w,
						nr_seq_cobranca_w,
						vl_nota_credito_w,
						vl_cambial_ativo_w,
						vl_cambial_passivo_w,
						0,
						0,
						vl_amenor_w,
						ie_tipo_perda_p,
						nr_seq_mot_glosa_w);

				/*
				r.aise_application_error(-20011, 'vl_juros_cobr_w =  ' || vl_juros_cobr_w);
				r.aise_application_error(-20011, 'vl_baixa_w = ' || vl_baixa_w || chr(13) ||
								'vl_baixa_desconto_w = ' || vl_baixa_desconto_w);
				*/
				if (coalesce(vl_baixa_desconto_w,0) <> 0) or (coalesce(vl_perdas_w,0) <> 0) then
					CALL GERAR_TIT_REC_LIQ_DESC(nr_titulo_w, nr_sequencia_w, nm_usuario_p);
				end if;
				
				if (ie_controle_perdas_w = 'S') then					
					if (vl_perdas_w > 0) then
						CALL gerar_perda_contas_receber(
							cd_estabelecimento_w,
							null, 
							nr_titulo_w, 
							nr_sequencia_w, 
							vl_perdas_w, 
							coalesce(ie_tipo_perda_p,'R'), 
							nm_usuario_p, 
							nr_seq_motivo_perda_p,
							dt_recebimento_w);
					elsif (vl_perdas_w < 0) then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_baixa_perda_w
						from	titulo_receber_liq a,
							convenio_retorno_item b
						where	a.nr_titulo		= b.nr_titulo
						and	a.nr_seq_ret_item	= b.nr_sequencia
						and	a.vl_perdas		> 0
						and	a.nr_titulo		= nr_titulo_w
						and	b.nr_interno_conta	= nr_interno_conta_w
						and	b.nr_seq_retorno	= nr_seq_ret_estorno_w;
						
						select	max(nr_sequencia)
						into STRICT	nr_seq_perda_w
						from	perda_contas_receber
						where	nr_titulo	= nr_titulo_w
						and	nr_seq_baixa	= nr_seq_baixa_perda_w;
						
						if (nr_seq_perda_w IS NOT NULL AND nr_seq_perda_w::text <> '') then
							CALL fin_cancelar_perda(nr_seq_perda_w,nm_usuario_p);
						end if;
					end if;
					
					vl_perdas_w := 0;
				end if;

				if (ie_atualizar_tf_titulo_w = 'S') then

					update	titulo_receber
					set	nr_seq_trans_fin_baixa	= nr_seq_trans_w
					where	nr_titulo		= nr_titulo_w;

				end if;

				ie_gerou_liq_cc_w := 'N';
			end if;

			lista_titulo_w.extend;
			lista_titulo_w(posicao_lista_w) := nr_titulo_w;
			posicao_lista_w := posicao_lista_w + 1;

			update 	convenio_retorno_item
			set 	nr_titulo	= coalesce(nr_titulo,nr_titulo_w)
			where 	nr_sequencia	= nr_seq_ret_item_w;

			-- Edgar 12/01/2006, OS 25315, inclui ((vl_adicional_w > 0) and (nr_item_w = 1))
			if (coalesce(nr_sequencia_w,0) > 0) and (ie_gerou_liq_cc_w = 'N') then 	--OS 1653846, Na OS 1780881, foi retirado esse if. Mas comecou a gerar clasif da baixa p titulos q n tem baixa. Entao vamos controlar pelo nr_sequencia, somente qdo lancar baixa, gerar classif da baixa.
				CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w,
							null,--nr_seq_ret_item_w, OS 2189164
							nm_usuario_p,
							nr_titulo_w,
							nr_sequencia_w);
				
				nr_titulo_contab_w := pls_gerar_tit_rec_liq_mens(nr_titulo_w, nr_sequencia_w, nm_usuario_p, nr_titulo_contab_w);
				
				if (nr_titulo_contab_w IS NOT NULL AND nr_titulo_contab_w::text <> '') then
					ds_titulos_contab_w	:= substr(ds_titulos_contab_w || nr_titulo_contab_w || ', ',1,4000);
				end if;				
					
				/* gerar_titulo_rec_liq_cc(cd_estabelecimento_w, nr_seq_ret_item_w, nm_usuario_p, null, null); Bruna, 01/03/2007. coloquei a chamada acima */

			end if;			

			if (ie_nota_credito_w = 'S') and (coalesce(vl_nota_credito_w,0) <> 0) then
				if (vl_baixa_w < 0) then
					CALL gerar_baixa_nota_credito(nr_sequencia_w,nr_seq_tit_cobr_w,null,nr_titulo_w,nm_usuario_p,'E');
				else
					CALL gerar_baixa_nota_credito(nr_sequencia_w,nr_seq_tit_cobr_w,null,nr_titulo_w,nm_usuario_p,'B');
				end if;
			end if;

		end loop;	

		if	((nr_item_w = 0) or (vl_pago_w <> 0 or vl_glosa_w <> 0)) and (length(nr_tit_erros_w) <= 1985) then

			nr_tit_erros_w := nr_tit_erros_w || to_char(nr_interno_conta_w) || ',';

		end if;

        if (ds_user_locale_w = 'es_CO') then
            CALL gerar_baixa_tit_pag_imp(nr_titulo_w,nm_usuario_p);
        end if;
		close c03;
	end if;
	
	if (coalesce(nr_seq_tipo_alerta_w,'X') <> 'X') then
		update	alerta_paciente
		set	ie_situacao		= 'I',
			nm_usuario_inativacao	= nm_usuario_p,
			dt_inativacao		= clock_timestamp()
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	obter_se_contido(nr_seq_tipo_alerta,nr_seq_tipo_alerta_w) = 'S';
	end if;

end loop;
close c01;

	if (ds_titulos_contab_w IS NOT NULL AND ds_titulos_contab_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236517, 'NR_TITULO=' || substr(ds_titulos_contab_w,1,length(ds_titulos_contab_w) -2)  );
	end if;

OPEN C02;
LOOP
FETCH C02 into
	nr_seq_ret_item_w,
	nr_titulo_w,
	vl_pago_w,
	vl_adicional_w,
	vl_glosa_w,
	vl_adequado_w,
	vl_desconto_w,
	CD_CENTRO_CUSTO_DESC_w,
	NR_SEQ_MOTIVO_DESC_w,
	vl_perdas_w,
	vl_nota_credito_w,
	vl_juros_w,
	vl_cambial_ativo_w,
	vl_cambial_passivo_w,
	vl_amenor_w;
EXIT WHEN NOT FOUND; /* apply on C02 */

	select	coalesce(max(a.dt_liquidacao),dt_receb_w),
		coalesce(max(a.vl_despesa_bancaria),0),
		max(a.nr_sequencia)
	into STRICT	dt_recebimento_w,
		vl_despesa_bancaria_w,
		nr_seq_tit_cobr_w
	FROM titulo_receber_cobr a
LEFT OUTER JOIN banco_ocorr_escrit_ret b ON (a.nr_seq_ocorrencia_ret = b.nr_sequencia)
WHERE (ie_somente_liquidacao_w = 'N' or b.ie_rejeitado = 'L')  and a.nr_titulo		= nr_titulo_w and a.nr_seq_cobranca	= nr_seq_cobranca_w;

	select	sum(vl_saldo_titulo)
	into STRICT	vl_saldo_titulo_w
	from	titulo_receber
	where	nr_titulo	= nr_titulo_w;

	if ((vl_saldo_titulo_w	>= (vl_pago_w + vl_glosa_w + vl_desconto_w + vl_perdas_w)) and
	   ((vl_pago_w + vl_glosa_w + vl_adicional_w + vl_desconto_w + vl_perdas_w) > 0)) or (vl_adequado_w <> 0) then

		/* Francisco - OS97438 - 21/06/2008 */

		if (nr_seq_trans_desc_ret_w IS NOT NULL AND nr_seq_trans_desc_ret_w::text <> '') and (cd_tipo_receb_desc_ret_w IS NOT NULL AND cd_tipo_receb_desc_ret_w::text <> '') and (vl_desconto_w > 0) then

			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	titulo_receber_liq
			where	nr_titulo = nr_titulo_w;

			insert into titulo_receber_liq(nr_titulo,
					nr_sequencia,
					dt_recebimento,
					vl_recebido,
					vl_descontos,
					vl_juros,
					vl_multa,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					cd_tipo_recebimento,
					ie_acao,
					cd_serie_nf_devol,
					nr_nota_fiscal_devol,
					cd_banco,
					cd_agencia_bancaria,
					nr_documento,
					nr_lote_banco,
					cd_cgc_emp_cred,
					nr_cartao_cred,
					nr_lote_contabil,
					nr_seq_trans_fin,
					vl_rec_maior,
					vl_glosa,
					nr_seq_retorno,
					vl_adequado,
					nr_seq_ret_item,
					ie_lib_caixa,
					nr_seq_conta_banco,
					CD_CENTRO_CUSTO_DESC,
					NR_SEQ_MOTIVO_DESC,
					nr_adiantamento,
					vl_despesa_bancaria,
					nr_seq_cobranca,
					vl_nota_credito,
					nr_lote_contab_antecip,
					nr_lote_contab_pro_rata,
					vl_recurso,
					nr_seq_mot_glosa)
			values (nr_titulo_w,
					nr_sequencia_w,
					dt_recebimento_w,
					0,
					coalesce(vl_desconto_w,0),
					0,
					0,
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_tipo_receb_desc_ret_w,
					'I',
					null,
					null,
					cd_banco_w,
					cd_agencia_w,
					nr_seq_retorno_p,
					null,
					null,
					null,
					0,
					nr_seq_trans_desc_ret_w,
					0,
					0,
					nr_seq_retorno_p,
					0,
					nr_seq_ret_item_w,
					'S',
					CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
					CD_CENTRO_CUSTO_DESC_w,
					NR_SEQ_MOTIVO_DESC_w,
					nr_adiantamento_w,
					vl_despesa_bancaria_w,
					nr_seq_cobranca_w,
					vl_nota_credito_w,
					0,
					0,
					0,
					nr_seq_mot_glosa_w);

			if (coalesce(vl_desconto_w,0) > 0) then
				CALL GERAR_TIT_REC_LIQ_DESC(nr_titulo_w, nr_sequencia_w, nm_usuario_p);
			end if;

			vl_desconto_w	:= 0;
		end if;

		/* Edgar  - OS105786 - 03/10/2008 */

		if (nr_seq_trans_fin_perda_w IS NOT NULL AND nr_seq_trans_fin_perda_w::text <> '') and (cd_tipo_receb_perda_w IS NOT NULL AND cd_tipo_receb_perda_w::text <> '') and (vl_perdas_w <> 0) then

			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	titulo_receber_liq
			where	nr_titulo	= nr_titulo_w;

			insert into titulo_receber_liq(nr_titulo,
					nr_sequencia,
					dt_recebimento,
					vl_recebido,
					vl_descontos,
					vl_juros,
					vl_multa,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					cd_tipo_recebimento,
					ie_acao,
					cd_serie_nf_devol,
					nr_nota_fiscal_devol,
					nr_seq_conta_banco,
					cd_banco,
					cd_agencia_bancaria,
					nr_documento,
					nr_lote_banco,
					cd_cgc_emp_cred,
					nr_cartao_cred,
					nr_lote_contabil,
					nr_seq_trans_fin,
					vl_rec_maior,
					vl_glosa,
					nr_seq_retorno,
					vl_adequado,
					nr_seq_ret_item,
					ie_lib_caixa,
					CD_CENTRO_CUSTO_DESC,
					NR_SEQ_MOTIVO_DESC,
					vl_perdas,
					nr_adiantamento,
					vl_despesa_bancaria,
					nr_seq_cobranca,
					nr_lote_contab_antecip,
					nr_lote_contab_pro_rata,
					vl_recurso,
					ie_tipo_perda,
					nr_seq_mot_glosa)
			values (nr_titulo_w,
					nr_sequencia_w,
					dt_recebimento_w,
					0,
					0,
					0,
					0,
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_tipo_receb_perda_w,
					'I',
					null,
					null,
					CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
					cd_banco_w,
					cd_agencia_w,
					cd_autorizacao_w,
					null,
					null,
					null,
					0,
					nr_seq_trans_fin_perda_w,
					0,
					0,
					nr_seq_retorno_p,
					0,
					nr_seq_ret_item_w,
					'S',
					CD_CENTRO_CUSTO_DESC_w,
					NR_SEQ_MOTIVO_DESC_w,
					vl_perdas_w,
					nr_adiantamento_w,
					vl_despesa_bancaria_w,
					nr_seq_cobranca_w,
					0,
					0,
					0,
					ie_tipo_perda_p,
					nr_seq_mot_glosa_w);

			if (coalesce(vl_perdas_w,0) <> 0) then
				CALL GERAR_TIT_REC_LIQ_DESC(nr_titulo_w, nr_sequencia_w, nm_usuario_p);
			end if;
			
			vl_perdas_w	:= 0;
		end if;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	titulo_receber_liq
		where	nr_titulo = nr_titulo_w;

		insert into titulo_receber_liq(nr_titulo,
				nr_sequencia,
				dt_recebimento,
				vl_recebido,
				vl_descontos,
				vl_juros,
				vl_multa,
				cd_moeda,
				dt_atualizacao,
				nm_usuario,
				cd_tipo_recebimento,
				ie_acao,
				cd_serie_nf_devol,
				nr_nota_fiscal_devol,
				cd_banco,
				cd_agencia_bancaria,
				nr_documento,
				nr_lote_banco,
				cd_cgc_emp_cred,
				nr_cartao_cred,
				nr_lote_contabil,
				nr_seq_trans_fin,
				vl_rec_maior,
				vl_glosa,
				nr_seq_retorno,
				vl_adequado,
				nr_seq_ret_item,
				ie_lib_caixa,
				nr_seq_conta_banco,
				vl_perdas,
				nr_adiantamento,
				vl_despesa_bancaria,
				nr_seq_cobranca,
				vl_nota_credito,
				vl_cambial_ativo,
				vl_cambial_passivo,
				nr_lote_contab_antecip,
				nr_lote_contab_pro_rata,
				vl_recurso,
				ie_tipo_perda,
				nr_seq_mot_glosa)
		values (nr_titulo_w,
				nr_sequencia_w,
				dt_recebimento_w,
				vl_pago_w,
				coalesce(vl_desconto_w,0),
				coalesce(vl_juros_w,0),
				0,
				cd_moeda_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_tipo_receb_w,
				'I',
				null,
				null,
				cd_banco_w,
				cd_agencia_w,
				nr_seq_retorno_p,
				null,
				null,
				null,
				0,
				nr_seq_trans_w,
				vl_adicional_w,
				vl_glosa_w,
				nr_seq_retorno_p,
				vl_adequado_w,
				nr_seq_ret_item_w,
				'S',
				CASE WHEN nr_seq_conta_banco_p=0 THEN null  ELSE nr_seq_conta_banco_p END ,
				vl_perdas_w,
				nr_adiantamento_w,
				vl_despesa_bancaria_w,
				nr_seq_cobranca_w,
				vl_nota_credito_w,
				vl_cambial_ativo_w,
				vl_cambial_passivo_w,
				0,
				0,
				vl_amenor_w,
				ie_tipo_perda_p,
				nr_seq_mot_glosa_w);

		if (coalesce(vl_desconto_w,0) <> 0) or (coalesce(vl_perdas_w,0) <> 0) then
			CALL GERAR_TIT_REC_LIQ_DESC(nr_titulo_w, nr_sequencia_w, nm_usuario_p);
		end if;
		
		if (ie_controle_perdas_w = 'S') and (vl_perdas_w > 0) then
			CALL gerar_perda_contas_receber(
				cd_estabelecimento_w,
				null, 
				nr_titulo_w, 
				nr_sequencia_w, 
				vl_perdas_w, 
				coalesce(ie_tipo_perda_p,'R'), 
				nm_usuario_p, 
				nr_seq_motivo_perda_p,
				dt_recebimento_w);
		end if;

		lista_titulo_w.extend;
		lista_titulo_w(posicao_lista_w) := nr_titulo_w;
		posicao_lista_w := posicao_lista_w + 1;

		if (vl_pago_w < 0) then
			CALL gerar_baixa_nota_credito(nr_sequencia_w,nr_seq_tit_cobr_w,null,nr_titulo_w,nm_usuario_p,'E');
		else
			CALL gerar_baixa_nota_credito(nr_sequencia_w,nr_seq_tit_cobr_w,null,nr_titulo_w,nm_usuario_p,'B');
		end if;

		if (ie_atualizar_tf_titulo_w = 'S') then

			update	titulo_receber
			set	nr_seq_trans_fin_baixa	= nr_seq_trans_w
			where	nr_titulo		= nr_titulo_w;

		end if;

	end if;

    if (ds_user_locale_w = 'es_CO') then
        CALL gerar_baixa_tit_pag_imp(nr_titulo_w,nm_usuario_p);
    end if;
END LOOP;
CLOSE C02;

for posicao_lista_w in 1 .. lista_titulo_w.count
loop
	if (coalesce(position(ds_lista_titulo_w in lista_titulo_w(posicao_lista_w)||','),0) = 0) then
		CALL atualizar_saldo_tit_rec(lista_titulo_w(posicao_lista_w), nm_usuario_p);
		ds_lista_titulo_w := substr(ds_lista_titulo_w || lista_titulo_w(posicao_lista_w)||',',1,32767);
	end	if;
end loop;

select	coalesce(min(nr_titulo),0)
into STRICT	nr_titulo_w
from	convenio_retorno_item a
where	nr_seq_retorno = nr_seq_retorno_p
and	vl_pago + vl_glosado + coalesce(vl_desconto,0) <> 0
and (vl_pago + vl_glosado + coalesce(vl_cambial_passivo,0) + coalesce(vl_desconto,0) - coalesce(vl_tributo_guia,0)) <>
	(SELECT	coalesce(max(vl_recebido + vl_glosa + vl_descontos + vl_cambial_passivo),0)
	from	titulo_receber_liq b
	where	nr_seq_ret_item = a.nr_sequencia);

if (nr_titulo_w = 0) then		-- Edgar/Elemar OS 27476, colocamos esta consistencia
	select	coalesce(min(nr_titulo),0)
	into STRICT	nr_titulo_w
	from	convenio_retorno_item a
	where	nr_seq_retorno = nr_seq_retorno_p
	and	vl_adicional <>
		(SELECT	coalesce(sum(vl_rec_maior),0)
		from	titulo_receber_liq b
		where	b.nr_seq_ret_item = a.nr_sequencia);

	if (nr_titulo_w <> 0) then
		rollback;
		--r.aise_application_error(-20011, 'Valor a maior do retorno nao bate com o valor a maior do titulo!' || chr(13) ||

		--				'Titulo : ' || nr_titulo_w);
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174134,'NR_TITULO_W='||nr_titulo_w);
	end if;
end if;

select	coalesce(sum(coalesce(vl_recebido,0) + coalesce(vl_glosa,0) + coalesce(vl_descontos,0) + coalesce(vl_nota_credito,0) + coalesce(vl_cambial_passivo,0)),0)
into STRICT	vl_soma_titulo_w
from	titulo_receber_liq
where	nr_seq_retorno = nr_seq_retorno_p;

select	vl_soma_titulo_w + coalesce(sum(vl_rec_maior),0)
into STRICT	vl_soma_titulo_w
from	titulo_receber_liq
where	nr_seq_retorno	= nr_seq_retorno_p
and	vl_rec_maior	< 0;

select	coalesce(sum(coalesce(vl_pago,0) + coalesce(vl_glosado,0) + coalesce(vl_desconto,0) + coalesce(vl_nota_credito,0) + coalesce(vl_cambial_passivo,0)),0)
into STRICT	vl_soma_retorno_w
from	convenio_retorno_item
where	nr_seq_retorno	= nr_seq_retorno_p;

select	vl_soma_retorno_w + coalesce(sum(vl_adicional),0)
into STRICT	vl_soma_retorno_w
from	convenio_retorno_item
where	nr_seq_retorno	= nr_seq_retorno_p
and	vl_adicional	< 0;

select	vl_soma_retorno_w - coalesce(sum(vl_tributo_guia),0)
into STRICT	vl_soma_retorno_w
from	convenio_retorno_item
where	nr_seq_retorno	= nr_seq_retorno_p
and	coalesce(vl_pago,0) + coalesce(vl_glosado,0) + coalesce(vl_desconto,0) + coalesce(vl_nota_credito,0) <> 0;

if (vl_soma_retorno_w <> vl_soma_titulo_w) then

	select	coalesce(min(nr_sequencia),0)
	into STRICT	nr_seq_ret_item_w
	from	convenio_retorno_item a
	where	nr_seq_retorno = nr_seq_retorno_p
	and	a.nr_titulo	= nr_titulo_w
	and	vl_pago + vl_glosado + coalesce(vl_desconto,0) <> 0
	and (vl_pago + vl_glosado + coalesce(vl_desconto,0) + coalesce(vl_cambial_passivo,0) - coalesce(vl_tributo_guia,0)) <>
		(SELECT	coalesce(max(vl_recebido + vl_glosa + vl_descontos + vl_cambial_passivo),0)
		from	titulo_receber_liq b
		where	nr_seq_ret_item = a.nr_sequencia);

	select	coalesce(min(vl_pago + vl_glosado + coalesce(vl_cambial_passivo,0) + coalesce(vl_desconto,0) - coalesce(vl_tributo_guia,0)),0),
		min(cd_autorizacao),
		min(nr_interno_conta)
	into STRICT	vl_pago_glosa_w,
		cd_autorizacao_w,
		nr_interno_conta_w
	from	convenio_retorno_item
	where	nr_sequencia	= nr_seq_ret_item_w;

	select	coalesce(min(vl_recebido + vl_glosa + vl_descontos),0)
	into STRICT	vl_recebido_glosa_w
	from	titulo_receber_liq b
	where	nr_seq_ret_item = nr_seq_ret_item_w
	and	nr_titulo	= nr_titulo_w;

	rollback;

	if (length(nr_tit_erros_w) > 1) then
		ds_erro_p := substr(Wheb_mensagem_pck.get_texto(728869)|| chr(13) || chr(10) || nr_tit_erros_w,1,255);
	elsif (nr_titulo_w <> 0) then
		/*r.aise_application_error(-20011,	'Valor baixado para titulo "' || nr_titulo_w || '" nao confere, favor verificar!' || chr(10) || chr(13) ||
						'Item: ' || nr_seq_ret_item_w || chr(10) || chr(13) ||
						'Vl pago + glosa (guia): ' || vl_pago_glosa_w || chr(10) || chr(13) ||
						'Vl recebido + glosa (titulo): ' || vl_recebido_glosa_w || chr(10) || chr(13) ||
						'Autorizacao: ' || cd_autorizacao_w || chr(10) || chr(13) ||
						'Conta: ' || nr_interno_conta_w || chr(10) || chr(13) ||
						'Vl retorno: ' || vl_soma_retorno_w || chr(10) || chr(13) ||
						'Vl titulo: ' || vl_soma_titulo_w);*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174139,
							'NR_TITULO_W='||nr_titulo_w||';'||
							'NR_SEQ_RET_ITEM_W='||nr_seq_ret_item_w||';'||
							'VL_PAGO_GLOSA_W='||vl_pago_glosa_w||';'||
							'VL_RECEBIDO_GLOSA_W='||vl_recebido_glosa_w||';'||
							'CD_AUTORIZACAO_W='||cd_autorizacao_w||';'||
							'NR_INTERNO_CONTA_W='||nr_interno_conta_w||';'||
							'VL_SOMA_RETORNO_W='||vl_soma_retorno_w||';'||
							'VL_SOMA_TITULO_W='||vl_soma_titulo_w);
	else
		/*r.aise_application_error(-20011,	'Erro na baixa. Valor baixado nao confere.' || chr(10) ||
						'Baixa Cancelada !' || chr(10) ||
						'Retorno: ' || vl_soma_retorno_w || chr(10) ||
						'Titulo : ' || vl_soma_titulo_w);*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174144,
							'VL_SOMA_RETORNO_W='||vl_soma_retorno_w||';'||
							'VL_SOMA_TITULO_W='||vl_soma_titulo_w);
	end if;
else
	update	convenio_retorno
	set	ie_status_retorno 	= 'F',
		dt_fechamento 		= clock_timestamp(),
		nm_usuario_fechamento 	= nm_usuario_p
	where	nr_sequencia 		= nr_seq_retorno_p;
	
	if coalesce(ie_permite_gerar_analise_w, 'C') = 'C' then
		begin
			select	coalesce(a.ie_generate_dam_ir, 'N')
			into STRICT	ie_permite_gerar_analise_w
			from	convenio_estabelecimento a,
				convenio_retorno b
			where	a.cd_convenio = b.cd_convenio
			and	a.cd_estabelecimento = b.cd_estabelecimento
			and	b.nr_sequencia = nr_seq_retorno_p;
		exception
		when others then
			ie_permite_gerar_analise_w := 'N';
		end;
	end if;
	
	if (coalesce(ie_permite_gerar_analise_w,'N') in ('S','A', 'O')) then
	
		--feito para gerar a nova analise apenas se nao for retorno de estorno.
		select	sum(a.vl_amenor)
		into STRICT	qt_guias_analisadas_w
		from	convenio_retorno_item a
		where	a.nr_seq_retorno	= nr_seq_retorno_p;
	
		
		--somente vai gerar a analise se ja houver um lote de recurso para a guia e se o valor pago nao for negativo(retorno estornado).Para nao gerar uma nova analise com valores negativos.
		if (coalesce(qt_guias_analisadas_w,0) > 0) then
		
			nr_analise_ant_w := 0;
			nr_seq_lote_audit_w	:= OBTER_ULTIMO_LOTE_GRG(nr_seq_retorno_p);
			
			if (nr_seq_lote_audit_w > 0) then
			
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_analise_ant_w
				from	lote_audit_hist
				where	nr_seq_lote_audit = nr_seq_lote_audit_w;
			
				ds_retorno_w := gerar_lote_auditoria(nr_seq_retorno_p, 'S', nm_usuario_p, nr_seq_lote_audit_w, 'N', 'N', ds_retorno_w);
			end if;
			
			if (ie_permite_gerar_analise_w = 'A') then -- Gerar nova analise para guias com historico de recurso e novo lote para guias sem historico.
				
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_analise_atual_w
				from	lote_audit_hist
				where	nr_seq_lote_audit = nr_seq_lote_audit_w;
				
				if (nr_analise_ant_w <> nr_analise_atual_w) and (coalesce(ds_retorno_w::text, '') = '') then
					nr_seq_lote_novo_w := 	null;
					
					open C12;
					loop
					fetch C12 into	
						c12_w;
					EXIT WHEN NOT FOUND; /* apply on C12 */
					
						if (coalesce(nr_seq_lote_novo_w::text, '') = '') then
							nr_seq_lote_novo_w := Criar_Lote_Auditoria(	cd_convenio_w, cd_estabelecimento_w, nm_usuario_p, nr_seq_lote_novo_w);
										
							if (nr_seq_lote_novo_w IS NOT NULL AND nr_seq_lote_novo_w::text <> '') then
								nr_seq_analise_w := Criar_Lote_Audit_Hist(	nr_seq_lote_novo_w, cd_estabelecimento_w, nm_usuario_p, nr_seq_analise_w);
							end if;
						end if;
						
						if (nr_seq_lote_audit_w IS NOT NULL AND nr_seq_lote_audit_w::text <> '') and (nr_seq_analise_w IS NOT NULL AND nr_seq_analise_w::text <> '') then
							update	lote_audit_hist_guia
							set	nr_seq_lote_hist = nr_seq_analise_w,
								dt_atualizacao	 = clock_timestamp(),
								nm_usuario       = nm_usuario_p
							where	nr_sequencia	 = c12_w.nr_sequencia;
						end if;
						
					
					end loop;
					close C12;
					
				end if;
				
			elsif (ie_permite_gerar_analise_w = 'O') then -- Gerar analise e guia no lote de origem e novo para guias sem historico na GRG
			
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_analise_atual_w
				from	lote_audit_hist
				where	nr_seq_lote_audit = nr_seq_lote_audit_w;
				
				if	((nr_analise_ant_w <> nr_analise_atual_w) or
					((coalesce(nr_seq_lote_audit_w::text, '') = '') and nr_analise_atual_w = 0)) and (coalesce(ds_retorno_w::text, '') = '') then
			
					if (nr_analise_atual_w > 0) then
					
						for c13_w in c13 loop
						
							if (c13_w.nr_seq_lote_antigo IS NOT NULL AND c13_w.nr_seq_lote_antigo::text <> '') then 	-- Se ja estiver em um lote antigo com analise fechada e enviada,
														-- cria a nova analise e/ou atualiza a referencia da analise
								select	coalesce(max(w.nr_sequencia),0)
								into STRICT	nr_analise_lote_antigo_w
								from	lote_audit_hist w
								where	w.nr_seq_lote_audit = c13_w.nr_seq_lote_antigo
								and	w.dt_fechamento is  null
								and	w.dt_envio is  null;
								
								if (nr_analise_lote_antigo_w = 0) then
								
									nr_analise_lote_antigo_w := Criar_Lote_Audit_Hist(c13_w.nr_seq_lote_antigo, cd_estabelecimento_w, nm_usuario_p, nr_analise_lote_antigo_w);
								end if;
								
								update	lote_audit_hist_guia
								set	nr_seq_lote_hist = nr_analise_lote_antigo_w,
									dt_atualizacao	 = clock_timestamp(),
									nm_usuario       = nm_usuario_p
								where	nr_sequencia	 = c13_w.nr_sequencia;
								
							else
							
								if (coalesce(nr_seq_lote_novo_w::text, '') = '') then
									nr_seq_lote_novo_w := Criar_Lote_Auditoria(	cd_convenio_w, cd_estabelecimento_w, nm_usuario_p, nr_seq_lote_novo_w);
												
								end if;
								
								
								
								
								if (coalesce(nr_seq_analise_w::text, '') = '')
									and (nr_seq_lote_novo_w IS NOT NULL AND nr_seq_lote_novo_w::text <> '') then
									nr_seq_analise_w := Criar_Lote_Audit_Hist(	nr_seq_lote_novo_w, cd_estabelecimento_w, nm_usuario_p, nr_seq_analise_w);
								end if;
								
								if (nr_seq_lote_audit_w IS NOT NULL AND nr_seq_lote_audit_w::text <> '') and (nr_seq_analise_w IS NOT NULL AND nr_seq_analise_w::text <> '') then
									update	lote_audit_hist_guia
									set	nr_seq_lote_hist = nr_seq_analise_w,
										dt_atualizacao	 = clock_timestamp(),
										nm_usuario       = nm_usuario_p
									where	nr_sequencia	 = c13_w.nr_sequencia;
								end if;
							end if;

						end loop;
					elsif (coalesce(nr_seq_lote_audit_w::text, '') = '') then
						
						ds_retorno_w := gerar_lote_auditoria(nr_seq_retorno_p, 'S', nm_usuario_p, null, 'N', 'N', ds_retorno_w);
						
					
					end if;
					
				end if;
				
			end if;

		end if;
		
	end  if;

	
	if (ie_data_baixa_cr_w in ('S','B')) then		
		update	convenio_retorno
		set	dt_baixa_cr		= clock_timestamp()
		where	nr_sequencia 		= nr_seq_retorno_p;
	end if;

	select	max(qt_dias_venc),
		max(ie_tipo_data_ref)
	into STRICT	qt_dias_venc_w,
		ie_tipo_data_ref_w
	from	convenio_regra_venc_ret
	where	cd_convenio		= cd_convenio_w
	and	cd_estabelecimento	= cd_estabelecimento_w;

	if (qt_dias_venc_w IS NOT NULL AND qt_dias_venc_w::text <> '') and (ie_tipo_data_ref_w = 'F') then
		delete from convenio_retorno_venc
		where	nr_seq_retorno	= nr_seq_retorno_p;

		insert	into	convenio_retorno_venc(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_retorno,
			dt_vencimento)
		values (nextval('convenio_retorno_venc_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_retorno_p,
			trunc(clock_timestamp(),'dd') + qt_dias_venc_w);
	end if;

	CALL atualizar_guia_retorno(nr_seq_retorno_p, nm_usuario_p);
	
	select	max(vl_glosado),
		max(vl_amenor)
	into STRICT	vl_glosado_ret_w,
		vl_amenor_ret_w
	from	convenio_retorno_item
	where	nr_seq_retorno	= nr_seq_retorno_p;
	
	if (nr_seq_ret_adiant_w IS NOT NULL AND nr_seq_ret_adiant_w::text <> '') and (ie_tipo_glosa_w = 'D') then
		CALL atualiza_repasse_ret_adiant(nr_seq_retorno_p, nm_usuario_p);

	elsif (coalesce(ie_lib_repasse_ret_w,'A') = 'A') then
		CALL atualizar_repasse_retorno(nr_seq_retorno_p, nm_usuario_p);

	elsif (coalesce(ie_lib_repasse_ret_w,'A') = 'N') and
		((coalesce(ie_repasse_retorno_w,'S')	= 'S') or (coalesce(ie_repasse_retorno_w,'S')	= 'P')) and (coalesce(ie_repasse_estorno_p,'S')	= 'S') and (coalesce(nr_seq_ret_adiant_w::text, '') = '') then
		CALL fechar_retorno_repasse(nr_seq_retorno_p, null, null, nm_usuario_p);
	end if;

	insert into convenio_retorno_log(nr_sequencia,
		dt_atualizacao,
		nm_usuario,		
		nr_seq_retorno,
		ie_status_retorno,
		ds_log)
	values (nextval('convenio_retorno_log_seq'),
			clock_timestamp(),
			nm_usuario_p,		
			nr_seq_retorno_p,
			'F',
			'');

	-- commit; /* Francisco - 06/10/2009 - Comentei o commit por causa das rotinas que sao feitas depois */
end if;

CALL GERAR_RET_RECEB_GUIA(NR_SEQ_RETORNO_P, 'N', nm_usuario_p);

open c06;
loop
fetch c06 into
	nr_titulo_receb_w,
	vl_pago_receb_w,
	nr_seq_convenio_receb_w,
	nr_seq_nota_receb_w;
EXIT WHEN NOT FOUND; /* apply on c06 */

	if (coalesce(nr_titulo_receb_w,0)>0) then

		select	nextval('convenio_receb_titulo_seq')
		into STRICT	nr_seq_conv_receb_tit_w
		;

		insert into convenio_receb_titulo(nr_sequencia,
			nr_seq_receb,
			nr_titulo,
			vl_recebido,
			dt_atualizacao,
			nm_usuario,
			nr_seq_nota_receb)
		values (nr_seq_conv_receb_tit_w,
			nr_seq_convenio_receb_w,
			nr_titulo_receb_w,
			vl_pago_receb_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_nota_receb_w);
	end if;

end loop;
close c06;

open c07;
loop
fetch c07 into
	nr_titulo_w,
	nr_seq_liq_w;
EXIT WHEN NOT FOUND; /* apply on c07 */

	CALL Gerar_Titulo_Rec_Liq_Valor(nr_titulo_w, nr_seq_liq_w, nm_usuario_p);

end loop;
close c07;

/* Francisco - OS 157151 - 06/10/2009 */

if (ie_canc_conta_glosa_sus_w = 'S') then
	open c08;
	loop
	fetch c08 into
		nr_interno_conta_sus_w;
	EXIT WHEN NOT FOUND; /* apply on c08 */
	
		/*lhalves OS 522628 em 30/11/2012 - Precisa abrir o atendimento se ja estiver fechado*/

		select	max(a.nr_atendimento)
		into STRICT	nr_atendimento_w
		from	atendimento_paciente a,
			conta_paciente b
		where	a.nr_atendimento	= b.nr_atendimento
		and	b.nr_interno_conta	= nr_interno_conta_sus_w
		and	(a.dt_fim_conta IS NOT NULL AND a.dt_fim_conta::text <> '')
		and	a.ie_fim_conta		= 'F';
		
		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
			CALL abrir_atendimento(nr_atendimento_w,nm_usuario_p);
		end if;
	
		CALL cancelar_conta_paciente(nr_interno_conta_sus_w,nm_usuario_p,'N');
	end loop;
	close c08;
end if;

CALL GERAR_TITULO_REC_LIQ_AGRUP(nr_seq_retorno_p, nm_usuario_p);
/*
Removida para a OS 927853, pois nao e necessario atualizar o saldo novamente
por que ja e atualizado no momento em que e vinculado ao recebimento - Geliard
if	(nr_adiantamento_w is not null) then
	atualizar_saldo_adiantamento(nr_adiantamento_w, nm_usuario_p, null);
end if;
*/
ie_gerar_imposto_tit_w := obter_param_usuario(27, 200, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_imposto_tit_w);

if (coalesce(ie_gerar_imposto_tit_w,'N') in ('S','D')) then /* ahoffelder - 09/04/2012 - OS 425659 */
	CALL gerar_imposto_receb_tit_rec(nr_seq_retorno_p,nm_usuario_p);
end if;

CALL gerar_etapa_baixa_retorno(  nr_seq_retorno_p, nm_usuario_p);

CALL GERAR_BAIXA_RET_GRG( nr_seq_retorno_p, dt_receb_w, nm_usuario_p, 'N');

CALL gerar_dashboard_regra(null, nr_seq_retorno_p);
					
if (ie_commit_p = 'S') then
	commit;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_titulo_convenio (nr_seq_retorno_p bigint, nm_usuario_p text, nr_seq_conta_banco_p bigint, ds_erro_p INOUT text, nr_seq_trans_financ_p bigint, ds_campos_obrigatorios_p text, ie_commit_p text, ie_tipo_perda_p text, nr_seq_motivo_perda_p bigint, ie_repasse_estorno_p text default null) FROM PUBLIC;

