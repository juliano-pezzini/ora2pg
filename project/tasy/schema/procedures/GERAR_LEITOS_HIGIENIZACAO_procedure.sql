-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_leitos_higienizacao ( dt_servico_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


ie_status_unidade_w			varchar(3);
ie_dia_semana_w				smallint;
cd_setor_atendimento_w			integer;
nr_seq_interno_w				bigint;
nr_seq_servico_w				bigint;
dt_prevista_w				timestamp;
ie_executor_w				varchar(15);
qt_minuto_adic_w				bigint;
nr_atendimento_w				bigint;
nr_sequencia_w				bigint;
nr_sequencia_unid_w			bigint;
cd_classif_setor_w				varchar(2);
ie_gerar_servico_w				varchar(1);
qt_horas_novo_servico_w			smallint;
nr_seq_serv_cancelamento_w 		bigint;
ie_verifica_se_existe_serv_w			varchar(2);
cd_tipo_acomodacao_w		smallint;
ie_higienizacao_w		varchar(1);
ie_tipo_acomod_w		varchar(1);
ie_pac_em_isolamento_w		varchar(1);
ie_evento_w 	sl_regra_servico.ie_evento%type;

c01 CURSOR FOR
	SELECT	a.nr_seq_interno,
		a.cd_setor_atendimento,
		a.ie_status_unidade,
		a.nr_atendimento,
		b.cd_classif_setor,
		CASE WHEN ie_tipo_acomod_w='S' THEN  c.cd_tipo_acomodacao  ELSE a.cd_tipo_acomodacao END ,
		a.ie_higienizacao,
		coalesce(obter_se_pac_isolamento(a.nr_atendimento),'N')
	from	setor_atendimento b,
		unidade_atendimento a,
		atend_paciente_unidade c
	where	a.cd_setor_atendimento	=	b.cd_setor_atendimento
	and	b.ie_situacao		=	'A'
	and	a.ie_situacao		=	'A'
	and	b.cd_estabelecimento	=	cd_estabelecimento_p
	and	a.cd_setor_atendimento	=	 c.cd_setor_atendimento
	and	a.cd_unidade_basica	= 	c.cd_unidade_basica
	and	a.cd_unidade_compl	= 	c.cd_unidade_compl
	and	c.nr_seq_interno	=
			(SELECT	coalesce(max(x.nr_seq_interno),0)
				from	atend_paciente_unidade x
				where	x.nr_atendimento = a.nr_atendimento
				and 	coalesce(x.dt_saida_unidade, x.dt_entrada_unidade + 9999)	= 
						(select	max(coalesce(t.dt_saida_unidade, t.dt_entrada_unidade + 9999))
						from	Setor_Atendimento y,
							atend_paciente_unidade t
						where 	nr_atendimento 	= a.nr_atendimento
						and	t.cd_setor_atendimento	= y.cd_setor_atendimento
						and	y.cd_classif_setor in (3,4,8)));

c02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_servico,
		to_date(to_char(dt_servico_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(a.dt_prevista,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss'),
		coalesce(qt_minuto_adic,0),
		coalesce(qt_horas_novo_servico,0),
		a.ie_evento
	from	sl_regra_servico a,
		sl_servico b
	where	b.nr_sequencia 			= a.nr_seq_servico
	and	b.ie_situacao 			= 'A'
	and	((a.nr_seq_unidade		=	nr_seq_interno_w) 	or (coalesce(a.nr_seq_unidade::text, '') = ''))
	and 	obter_se_unid_regra(a.nr_sequencia, nr_seq_interno_w) = 'S'	
	and	((a.cd_setor_atendimento	=	cd_setor_atendimento_w) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and	((a.cd_classif_setor		=	cd_classif_setor_w)	or (coalesce(a.cd_classif_setor::text, '') = ''))
	and	((a.cd_tipo_acomodacao = cd_tipo_acomodacao_w) or (coalesce(cd_tipo_acomodacao::text, '') = ''))
	and	((a.ie_status_leito		=	ie_status_unidade_w) 	or (coalesce(a.ie_status_leito::text, '') = ''))
	and	((a.ie_dia_semana		=	ie_dia_semana_w) or
		(a.ie_dia_semana = 9 AND ie_dia_semana_w between 2 and 6) or (coalesce(a.ie_dia_semana::text, '') = ''))
	and	((a.nr_dia_mes			=	campo_numerico(to_char(dt_servico_p,'dd'))) or (coalesce(a.nr_dia_mes::text, '') = ''))
	and	a.ie_evento			=	'J'
	and	obter_se_gerar_regra_serv(a.DT_INICIO_FREQUENCIA, a.IE_FREQUENCIA, dt_servico_p) = 'S'
	and	a.cd_estabelecimento		=	cd_estabelecimento_p
	and	((ie_status_unidade_w <> 'P') or (Verifica_estadia_higienizacao(nr_atendimento_w, a.nr_seq_unidade, a.qt_estadia_leito) = 'S'))
	and not exists (SELECT  1 
	                        from    sl_regra_servico_excecao x 
		        where  x.cd_setor_atendimento = cd_setor_atendimento_w
		        and     x.nr_seq_sl_regra_servico = a.nr_sequencia);
	
c03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_servico,
		to_date(to_char(dt_servico_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(a.dt_prevista,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss'),
		coalesce(qt_minuto_adic,0),
		coalesce(qt_horas_novo_servico,0)
	from	sl_regra_servico a,
		sl_servico b
	where	b.nr_sequencia 			= a.nr_seq_servico
	and	b.ie_situacao 			= 'A'
	and	((a.nr_seq_unidade		=	nr_seq_interno_w) 	or (coalesce(a.nr_seq_unidade::text, '') = ''))
	and 	obter_se_unid_regra(a.nr_sequencia, nr_seq_interno_w) = 'S'	
	and	((a.cd_setor_atendimento	=	cd_setor_atendimento_w) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and	((a.cd_classif_setor		=	cd_classif_setor_w)	or (coalesce(a.cd_classif_setor::text, '') = ''))
	and	((a.cd_tipo_acomodacao = cd_tipo_acomodacao_w) or (coalesce(cd_tipo_acomodacao::text, '') = ''))
	and	((a.ie_status_leito		=	ie_status_unidade_w) 	or (coalesce(a.ie_status_leito::text, '') = ''))
	and	((a.ie_dia_semana		=	ie_dia_semana_w) or
		(a.ie_dia_semana = 9 AND ie_dia_semana_w between 2 and 6) or (coalesce(a.ie_dia_semana::text, '') = ''))
	and	((a.nr_dia_mes			=	campo_numerico(to_char(dt_servico_p,'dd'))) or (coalesce(a.nr_dia_mes::text, '') = ''))
	and	((ie_higienizacao_w <> 'N') or (coalesce(a.ie_considera_estrutura, 'N') = 'N'))
	and	a.ie_evento			=	'JCP'
	and	obter_se_gerar_regra_serv(a.DT_INICIO_FREQUENCIA, a.IE_FREQUENCIA, dt_servico_p) = 'S'
	and	a.cd_estabelecimento		=	cd_estabelecimento_p
	and	(nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')
	and not exists (SELECT  1 
	                        from    sl_regra_servico_excecao x 
		        where  x.cd_setor_atendimento = cd_setor_atendimento_w 
		        and     x.nr_seq_sl_regra_servico = a.nr_sequencia);
	
c04 CURSOR FOR
	SELECT	nr_seq_servico_canc
	from	sl_servico_regra_canc
	where	ie_situacao = 'A'
	and	nr_seq_servico = nr_seq_servico_w;	
	
c05 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_servico,
		to_date(to_char(dt_servico_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(a.dt_prevista,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss'),
		coalesce(qt_minuto_adic,0),
		coalesce(qt_horas_novo_servico,0)
	from	sl_regra_servico a,
		sl_servico b
	where	b.nr_sequencia 			= a.nr_seq_servico
	and	b.ie_situacao 			= 'A'
	and	((a.nr_seq_unidade		=	nr_seq_interno_w) 	or (coalesce(a.nr_seq_unidade::text, '') = ''))
	and 	obter_se_unid_regra(a.nr_sequencia, nr_seq_interno_w) = 'S'	
	and	((a.cd_setor_atendimento	=	cd_setor_atendimento_w) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and	((a.cd_classif_setor		=	cd_classif_setor_w)	or (coalesce(a.cd_classif_setor::text, '') = ''))
	and	((a.cd_tipo_acomodacao = cd_tipo_acomodacao_w) or (coalesce(cd_tipo_acomodacao::text, '') = ''))
	and	((a.ie_status_leito		=	ie_status_unidade_w) 	or (coalesce(a.ie_status_leito::text, '') = ''))
	and	((a.ie_dia_semana		=	ie_dia_semana_w) or
		(a.ie_dia_semana = 9 AND ie_dia_semana_w between 2 and 6) or (coalesce(a.ie_dia_semana::text, '') = ''))
	and	((a.nr_dia_mes			=	campo_numerico(to_char(dt_servico_p,'dd'))) or (coalesce(a.nr_dia_mes::text, '') = ''))
	and	((ie_higienizacao_w <> 'N') or (coalesce(a.ie_considera_estrutura, 'N') = 'N'))
	and	a.ie_evento			=	'JCPI'
	and	ie_pac_em_isolamento_w = 'S'
	and	obter_se_gerar_regra_serv(a.DT_INICIO_FREQUENCIA, a.IE_FREQUENCIA, dt_servico_p) = 'S'
	and	a.cd_estabelecimento		=	cd_estabelecimento_p
	and	(nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')
	and not exists (SELECT  1 
	                        from    sl_regra_servico_excecao x 
		        where  x.cd_setor_atendimento = cd_setor_atendimento_w 
		        and     x.nr_seq_sl_regra_servico = a.nr_sequencia);	

c06 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_servico,
		to_date(to_char(dt_servico_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(a.dt_prevista,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss'),
		coalesce(qt_minuto_adic,0),
		coalesce(qt_horas_novo_servico,0)
	from	sl_regra_servico a,
		sl_servico b
	where	b.nr_sequencia 			= a.nr_seq_servico
	and	b.ie_situacao 			= 'A'
	and	((a.nr_seq_unidade		=	nr_seq_interno_w) 	or (coalesce(a.nr_seq_unidade::text, '') = ''))
	and 	obter_se_unid_regra(a.nr_sequencia, nr_seq_interno_w) = 'S'	
	and	((a.cd_setor_atendimento	=	cd_setor_atendimento_w) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
	and	((a.cd_classif_setor		=	cd_classif_setor_w)	or (coalesce(a.cd_classif_setor::text, '') = ''))
	and	((a.cd_tipo_acomodacao = cd_tipo_acomodacao_w) or (coalesce(cd_tipo_acomodacao::text, '') = ''))
	and	((a.ie_status_leito		=	ie_status_unidade_w) 	or (coalesce(a.ie_status_leito::text, '') = ''))
	and	((a.ie_dia_semana		=	ie_dia_semana_w) or
		(a.ie_dia_semana = 9 AND ie_dia_semana_w between 2 and 6) or (coalesce(a.ie_dia_semana::text, '') = ''))
	and	((a.nr_dia_mes			=	campo_numerico(to_char(dt_servico_p,'dd'))) or (coalesce(a.nr_dia_mes::text, '') = ''))
	and	((ie_higienizacao_w <> 'N') or (coalesce(a.ie_considera_estrutura, 'N') = 'N'))
	and	a.ie_evento			=	'JCPNI'
	and	ie_pac_em_isolamento_w = 'N'
	and	obter_se_gerar_regra_serv(a.DT_INICIO_FREQUENCIA, a.IE_FREQUENCIA, dt_servico_p) = 'S'
	and	a.cd_estabelecimento		=	cd_estabelecimento_p
	and	(nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')
	and not exists (SELECT  1 
	                        from    sl_regra_servico_excecao x 
		        where  x.cd_setor_atendimento = cd_setor_atendimento_w 
		        and     x.nr_seq_sl_regra_servico = a.nr_sequencia);	

BEGIN
ie_tipo_acomod_w := Obter_param_Usuario(75, 104, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_tipo_acomod_w);

ie_verifica_se_existe_serv_w		:= coalesce(obter_valor_param_usuario(75,50,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'N');

select pkg_date_utils.get_WeekDay(dt_servico_p)
into STRICT	ie_dia_semana_w
;

OPEN C01;
LOOP
FETCH C01 into
	nr_seq_interno_w,
	cd_setor_atendimento_w,
	ie_status_unidade_w,
	nr_atendimento_w,
	cd_classif_setor_w,
	cd_tipo_acomodacao_w,
	ie_higienizacao_w,
	ie_pac_em_isolamento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	OPEN C02;
	LOOP
	FETCH C02 into
		nr_sequencia_w,
		nr_seq_servico_w,
		dt_prevista_w,
		qt_minuto_adic_w,
		qt_horas_novo_servico_w,
		ie_evento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		OPEN C04;
		LOOP
		FETCH C04 into
			nr_seq_serv_cancelamento_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			update	sl_unid_atend
			set  	ie_status_serv = 'C'
			where	nr_seq_unidade	= nr_seq_interno_w
			and  	nr_seq_servico	= nr_seq_serv_cancelamento_w
			and		coalesce(dt_inicio::text, '') = ''
			and		trunc(dt_prevista) = trunc(dt_prevista_w);	
				
			end;
		end loop;
		close c04;		
		
		
		ie_gerar_servico_w	:= 'S';

		if (ie_verifica_se_existe_serv_w = 'S') then
			begin
			select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_gerar_servico_w
			from   	sl_unid_atend
			where	nr_seq_unidade	= nr_seq_interno_w
			and	nr_seq_servico	= nr_seq_servico_w
			and	dt_prevista = (dt_prevista_w + (qt_minuto_adic_w / 1440));
			end;
		end if;
		
		select	ie_executor
		into STRICT	ie_executor_w	
		from	sl_servico
		where	nr_sequencia	=	nr_seq_servico_w;

		select	nextval('sl_unid_atend_seq')
		into STRICT	nr_sequencia_unid_w
		;
		
		if (ie_gerar_servico_w = 'S') then
				
			insert into sl_unid_atend(
				nr_sequencia,
				cd_estabelecimento,
				nr_seq_unidade,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_status_serv,
				nr_seq_servico,
				dt_prevista,
				ie_executor,
				cd_setor_higienizacao,
				ie_evento)
			values(
				nr_sequencia_unid_w,
				cd_estabelecimento_p,
				nr_seq_interno_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'P',
				nr_seq_servico_w,
				dt_prevista_w + (qt_minuto_adic_w / 1440),
				ie_executor_w,
				cd_setor_atendimento_w,
				ie_evento_w);
			commit;
			
			CALL gravar_historico_higienizacao(nm_usuario_p,'J',nr_sequencia_w,nr_seq_servico_w,clock_timestamp(),cd_setor_atendimento_w,nr_sequencia_unid_w);
		end if;
		
		end;
	END LOOP;
	CLOSE C02;
	
	OPEN C03;
	LOOP
	FETCH C03 into
		nr_sequencia_w,
		nr_seq_servico_w,
		dt_prevista_w,
		qt_minuto_adic_w,
		qt_horas_novo_servico_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		
		OPEN C04;
		LOOP
		FETCH C04 into
			nr_seq_serv_cancelamento_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			update	sl_unid_atend
			set  	ie_status_serv = 'C'
			where	nr_seq_unidade	= nr_seq_interno_w
			and  	nr_seq_servico	= nr_seq_serv_cancelamento_w
			and		coalesce(dt_inicio::text, '') = ''
			and		trunc(dt_prevista) = trunc(dt_prevista_w);	
				
			end;
		end loop;
		close c04;	

		select	ie_executor
		into STRICT	ie_executor_w	
		from	sl_servico
		where	nr_sequencia	=	nr_seq_servico_w;
		
		ie_gerar_servico_w	:= 'S';

		if (ie_verifica_se_existe_serv_w = 'S') then
			begin
			select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_gerar_servico_w
			from   	sl_unid_atend
			where	nr_seq_unidade	= nr_seq_interno_w
			and	nr_seq_servico	= nr_seq_servico_w
			and	dt_prevista = (dt_prevista_w + (qt_minuto_adic_w / 1440));
			end;
		end if;
		
		select	nextval('sl_unid_atend_seq')
		into STRICT	nr_sequencia_unid_w
		;

		if (ie_gerar_servico_w = 'S') then
							
			insert into sl_unid_atend(
				nr_sequencia,
				cd_estabelecimento,
				nr_seq_unidade,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_status_serv,
				nr_seq_servico,
				dt_prevista,
				ie_executor,
				cd_setor_higienizacao)
			values(
				nr_sequencia_unid_w,
				cd_estabelecimento_p,
				nr_seq_interno_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'P',
				nr_seq_servico_w,
				dt_prevista_w + (qt_minuto_adic_w / 1440),
				ie_executor_w,
				cd_setor_atendimento_w);
			commit;
			CALL gravar_historico_higienizacao(nm_usuario_p,'JCP',nr_sequencia_w,nr_seq_servico_w,clock_timestamp(),cd_setor_atendimento_w,nr_sequencia_unid_w);
		end if;
		end;
	END LOOP;
	CLOSE C03;	
	------------
	OPEN C05;
	LOOP
	FETCH C05 into
		nr_sequencia_w,
		nr_seq_servico_w,
		dt_prevista_w,
		qt_minuto_adic_w,
		qt_horas_novo_servico_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		
		OPEN C04;
		LOOP
		FETCH C04 into
			nr_seq_serv_cancelamento_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			update	sl_unid_atend
			set  	ie_status_serv = 'C'
			where	nr_seq_unidade	= nr_seq_interno_w
			and  	nr_seq_servico	= nr_seq_serv_cancelamento_w
			and		coalesce(dt_inicio::text, '') = ''
			and		trunc(dt_prevista) = trunc(dt_prevista_w);	
				
			end;
		end loop;
		close c04;	

		select	ie_executor
		into STRICT	ie_executor_w	
		from	sl_servico
		where	nr_sequencia	=	nr_seq_servico_w;
		
		ie_gerar_servico_w	:= 'S';

		if (ie_verifica_se_existe_serv_w = 'S') then
			begin
			select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_gerar_servico_w
			from   	sl_unid_atend
			where	nr_seq_unidade	= nr_seq_interno_w
			and	nr_seq_servico	= nr_seq_servico_w
			and	dt_prevista = (dt_prevista_w + (qt_minuto_adic_w / 1440));
			end;
		end if;
		
		select	nextval('sl_unid_atend_seq')
		into STRICT	nr_sequencia_unid_w
		;

		if (ie_gerar_servico_w = 'S') then
							
			insert into sl_unid_atend(
				nr_sequencia,
				cd_estabelecimento,
				nr_seq_unidade,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_status_serv,
				nr_seq_servico,
				dt_prevista,
				ie_executor,
				cd_setor_higienizacao)
			values(
				nr_sequencia_unid_w,
				cd_estabelecimento_p,
				nr_seq_interno_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'P',
				nr_seq_servico_w,
				dt_prevista_w + (qt_minuto_adic_w / 1440),
				ie_executor_w,
				cd_setor_atendimento_w);
			commit;
			CALL gravar_historico_higienizacao(nm_usuario_p,'JCPI',nr_sequencia_w,nr_seq_servico_w,clock_timestamp(),cd_setor_atendimento_w,nr_sequencia_unid_w);
		end if;
		end;
	END LOOP;
	CLOSE C05;	
	
	OPEN C06;
	LOOP
	FETCH C06 into
		nr_sequencia_w,
		nr_seq_servico_w,
		dt_prevista_w,
		qt_minuto_adic_w,
		qt_horas_novo_servico_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		
		OPEN C04;
		LOOP
		FETCH C04 into
			nr_seq_serv_cancelamento_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			update	sl_unid_atend
			set  	ie_status_serv = 'C'
			where	nr_seq_unidade	= nr_seq_interno_w
			and  	nr_seq_servico	= nr_seq_serv_cancelamento_w
			and		coalesce(dt_inicio::text, '') = ''
			and		trunc(dt_prevista) = trunc(dt_prevista_w);	
				
			end;
		end loop;
		close c04;	

		select	ie_executor
		into STRICT	ie_executor_w	
		from	sl_servico
		where	nr_sequencia	=	nr_seq_servico_w;
		
		ie_gerar_servico_w	:= 'S';

		if (ie_verifica_se_existe_serv_w = 'S') then
			begin
			select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_gerar_servico_w
			from   	sl_unid_atend
			where	nr_seq_unidade	= nr_seq_interno_w
			and	nr_seq_servico	= nr_seq_servico_w
			and	dt_prevista = (dt_prevista_w + (qt_minuto_adic_w / 1440));
			end;
		end if;
		
		select	nextval('sl_unid_atend_seq')
		into STRICT	nr_sequencia_unid_w
		;

		if (ie_gerar_servico_w = 'S') then
							
			insert into sl_unid_atend(
				nr_sequencia,
				cd_estabelecimento,
				nr_seq_unidade,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_status_serv,
				nr_seq_servico,
				dt_prevista,
				ie_executor,
				cd_setor_higienizacao)
			values(
				nr_sequencia_unid_w,
				cd_estabelecimento_p,
				nr_seq_interno_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'P',
				nr_seq_servico_w,
				dt_prevista_w + (qt_minuto_adic_w / 1440),
				ie_executor_w,
				cd_setor_atendimento_w);
			commit;
			CALL gravar_historico_higienizacao(nm_usuario_p,'JCPNI',nr_sequencia_w,nr_seq_servico_w,clock_timestamp(),cd_setor_atendimento_w,nr_sequencia_unid_w);
		end if;
		end;
	END LOOP;
	CLOSE C06;	
	end;
END LOOP;
CLOSE C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_leitos_higienizacao ( dt_servico_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

