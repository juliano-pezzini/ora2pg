-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_79 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE



/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Aplicar a validação de senha de itens
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Alterações:
------------------------------------------------------------------------------------------------------------------
jjkruk OS 799487 - Criação da procedure.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dados_tb_selecao_w		pls_tipos_ocor_pck.dados_table_selecao_ocor;

nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
ie_status_w			pls_guia_plano.ie_status%type;
dt_validade_w			pls_guia_plano.dt_validade_senha%type;
cd_senha_w 			pls_guia_plano.cd_senha%type;

nr_idx_w			integer;
ie_valido_w			pls_oc_cta_selecao_ocor_v.ie_valido%type;
ie_verificar_w			varchar(1);
cd_senha_conta_w		pls_conta.cd_senha%type;

qt_item_autorizado_w		pls_guia_plano_proc.qt_autorizada%type;

-- Cursor das regras
C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.ie_valida_senha
	from	pls_oc_cta_val_aut_senha a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

-- Cursor das contas com os campos necessário para encontrar a autorização. Seja pela senha ou por nr_seq_guia (intercambio)
C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_sequencia%type)	FOR
	SELECT distinct	a.nr_sequencia,
			a.ie_origem_conta,
			a.nr_seq_guia,
			a.cd_senha,
			a.cd_senha_externa,
			a.cd_senha_imp,
			a.nr_seq_segurado
	from		pls_oc_cta_selecao_ocor_v	x,
			pls_conta_ocor_v		a
	where		x.ie_valido		= 'S'
	and		x.nr_id_transacao	= nr_id_transacao_pc
	and		a.nr_sequencia		= x.nr_seq_conta;

C03 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_sequencia%type,
		nr_seq_conta_pc		pls_conta_proc.nr_seq_conta%type) FOR
	SELECT 		x.nr_sequencia		nr_seq_selecao,
			a.dt_procedimento 	dt_item,
			a.dt_procedimento_imp	dt_item_imp,
			a.qt_procedimento_imp	qt_item,
			a.ie_origem_proced	ie_origem_proced,
			a.cd_procedimento	cd_procedimento,
			null			nr_seq_material
	from	pls_oc_cta_selecao_ocor_v	x,
		pls_conta_proc_ocor_v		a
	where	x.ie_valido		= 'S'
	and	x.nr_id_transacao	= nr_id_transacao_pc
	and	a.nr_sequencia 		= x.nr_seq_conta_proc
	and	x.nr_seq_conta		= nr_seq_conta_pc
	and	(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
	and	(a.ie_origem_proced IS NOT NULL AND a.ie_origem_proced::text <> '')
	
union all

	SELECT 		x.nr_sequencia		nr_seq_selecao,
			a.dt_atendimento	dt_item,
			a.dt_atendimento_imp	dt_item_imp,
			a.qt_material_imp	qt_item,
			null			ie_origem_proced,
			null			cd_procedimento,
			a.nr_seq_material	nr_seq_material
	from	pls_oc_cta_selecao_ocor_v	x,
		pls_conta_mat_ocor_v		a
	where	x.ie_valido		= 'S'
	and	x.nr_id_transacao	= nr_id_transacao_pc
	and	a.nr_sequencia 		= x.nr_seq_conta_mat
	and	x.nr_seq_conta		= nr_seq_conta_pc
	and	(a.nr_seq_material IS NOT NULL AND a.nr_seq_material::text <> '');
BEGIN
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '')  then
	for r_C01_w in C01(dados_regra_p.nr_sequencia) loop
		if (r_C01_w.ie_valida_senha = 'S')	then

			CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

			for r_C02_w in C02(nr_id_transacao_p) loop
				nr_seq_guia_w:= 	null;
				ie_status_w:= 		null;
				dt_validade_w:= 	null;
				cd_senha_w:= 		null;

				ie_verificar_w:= 'N';
				if (r_C02_w.ie_origem_conta = 'A') then -- Conta de intercambio
					if (r_C02_w.nr_seq_guia IS NOT NULL AND r_C02_w.nr_seq_guia::text <> '') then
						ie_verificar_w:= 'S';
						select 	max(nr_sequencia),
							max(ie_status),
							max(dt_validade_senha),
							max(cd_senha)
						into STRICT	nr_seq_guia_w,
							ie_status_w,
							dt_validade_w,
							cd_senha_w
						from	pls_guia_plano
						where	nr_sequencia	= r_C02_w.nr_seq_guia;
					end if;
				else
					if ((r_C02_w.cd_senha IS NOT NULL AND r_C02_w.cd_senha::text <> '') or (r_C02_w.cd_senha_imp IS NOT NULL AND r_C02_w.cd_senha_imp::text <> '')) then
						ie_verificar_w:= 'S';
						if (dados_regra_p.ie_evento = 'IMP') then
							cd_senha_conta_w:= r_C02_w.cd_senha_imp;
						else
							cd_senha_conta_w:= r_C02_w.cd_senha;
						end if;

						select 	max(nr_sequencia),
							max(ie_status),
							max(dt_validade_senha),
							max(cd_senha)
						into STRICT	nr_seq_guia_w,
							ie_status_w,
							dt_validade_w,
							cd_senha_w
						from	pls_guia_plano
						where	cd_senha	= cd_senha_conta_w
						and	nr_seq_segurado	= r_C02_w.nr_seq_segurado;
					end if;
				end if;

				pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
				nr_idx_w:=	0;

				-- Só faz validação se tiver cd_senha ou nr_seq_guia informado
				if (ie_verificar_w = 'S') then
					for r_C03_w in	C03( nr_id_transacao_p, r_C02_w.nr_sequencia) loop
						ie_valido_w:= 'N';
						dados_tb_selecao_w.ds_observacao(nr_idx_w):=	'';
						if (coalesce(nr_seq_guia_w::text, '') = '') then
							-- Vai gerar ocorrencia
							ie_valido_w:= 'S';
							dados_tb_selecao_w.ds_observacao(nr_idx_w):=	'Item não autorizado, não foi encontrada autorização.';
						elsif ((nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') and ie_status_w <> '1') then
							-- Vai gerar ocorrencia
							ie_valido_w:= 'S';
							dados_tb_selecao_w.ds_observacao(nr_idx_w):=	'Item não autorizado.';
						else
							if (dados_regra_p.ie_evento = 'IMP') then
								if (r_C03_w.dt_item_imp > dt_validade_w) then
									ie_valido_w:= 'S';
									dados_tb_selecao_w.ds_observacao(nr_idx_w):=	'Item não autorizado, data superior a validade da senha';
								end if;
							else
								if (r_C03_w.dt_item > dt_validade_w) then
									ie_valido_w:= 'S';
									dados_tb_selecao_w.ds_observacao(nr_idx_w):=	'Item não autorizado, data superior a validade da senha';
								end if;
							end if;

							if (ie_valido_w = 'N') then
								if (r_C03_w.cd_procedimento IS NOT NULL AND r_C03_w.cd_procedimento::text <> '') then
									select 	sum(a.qt_autorizada)
									into STRICT	qt_item_autorizado_w
									from	pls_guia_plano_proc a
									where	a.nr_seq_guia 		= nr_seq_guia_w
									and	a.ie_origem_proced	= r_c03_w.ie_origem_proced
									and	a.cd_procedimento	= r_c03_w.cd_procedimento
									and	a.ie_status in ('S','P','L');
								elsif (r_C03_w.nr_seq_material IS NOT NULL AND r_C03_w.nr_seq_material::text <> '') then
									select 	sum(a.qt_autorizada)
									into STRICT	qt_item_autorizado_w
									from	pls_guia_plano_mat a
									where	a.nr_seq_guia 		= nr_seq_guia_w
									and	a.nr_seq_material	= r_c03_w.nr_seq_material
									and	a.ie_status in ('S','P','L');
								end if;
								if (r_C03_w.qt_item > coalesce(qt_item_autorizado_w,0)) then
									ie_valido_w:= 'S';
									dados_tb_selecao_w.ds_observacao(nr_idx_w):=	'Item não autorizado, quantidade apresentada maior que a autorizada.';
								end if;
							end if;
						end if;
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w):=	r_C03_w.nr_seq_selecao;
						dados_tb_selecao_w.ie_valido(nr_idx_w):=	ie_valido_w;
						nr_idx_w := nr_idx_w + 1;

						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						end if;
					end loop;
					if (nr_idx_w > 0)	then
						CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
												'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
					end if;
				end if;
			end loop;
			CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
		end if;
	end loop;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_79 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

