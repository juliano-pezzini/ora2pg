-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_insert_medic_reg (( nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_prescricao_p prescr_medica.nr_prescricao%type, nr_sequencia_p cpoe_material.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type, ie_origem_inf_p text, dt_inicio_prescr_p timestamp, dt_inicio_ret_p out timestamp, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type default null, ie_copia_diaria_p char default 'N', ie_disp_semanal_p char default 'N') is type tcursor REFCURSOR) AS $body$
DECLARE


	_ora2pg_r RECORD;
qt_horas_w  	varchar(10);
	dt_fim_ww  		timestamp;
	dt_inicio_ww	timestamp;
	hr_prim_hor_ww	cpoe_material.hr_prim_horario%type;
	/*tratamento igual ao do java, +1 para pegar todos os intervalos entre os horarios*/

	
BEGIN
		select	max(dt_inicio),
				max(hr_prim_horario),
				max(dt_fim)
		into STRICT	dt_inicio_ww,
				hr_prim_hor_ww,
				dt_fim_ww
		from 	cpoe_material
		where 	nr_sequencia = nr_sequencia_p
		and 	nr_atendimento = nr_atendimento_p;

		if ((to_char(dt_inicio_ww, 'hh24'))::numeric  = 0 and (hr_prim_hor_ww IS NOT NULL AND hr_prim_hor_ww::text <> '')) then
			dt_inicio_ww := to_date(to_char(dt_inicio_ww,'dd/mm/yyyy ') || hr_prim_hor_ww, 'dd/mm/yyyy hh24:mi');
		end if;

		--- Inicio MD1
    begin
      EXEC_W := 'CALL OBTER_VALIDADE_CPOE_MD(:1,:2) INTO :RESULT';

      EXECUTE EXEC_W USING IN dt_inicio_ww,
                                     IN dt_fim_ww,
                                     OUT qt_horas_w;

    exception
      when others then
      ds_erro_w := sqlerrm;
      ds_parametros_w := ('nr_atendimento_p: '||nr_atendimento_p||'-'||'nr_prescricao_p: '||nr_prescricao_p||'-'||'nr_sequencia_p: '||nr_sequencia_p||'-'||
                          'dt_inicio_ww: '||dt_inicio_ww||'-'||'dt_fim_ww: '||dt_fim_ww||'-'||'qt_horas_w: '||qt_horas_w);

      CALL gravar_log_medical_device('cpoe_insert_medic_reg','OBTER_VALIDADE_CPOE_MD'
                                 ,ds_parametros_w,substr(ds_erro_w, 4000),nm_usuario_p,'S');
      
        qt_horas_w := null;
    end;
		--- Fim MD1
		return;
	end;

	procedure gerar_item_medicacao(	cd_material_p				in	number,
									cd_unidade_medida_dose_p	in	varchar2,
									qt_dose_p					in	number,
									ds_dose_diferenciada_p		in	varchar2,
									qt_solucao_p				in	number,
									ie_agrupador_p				in	number,
									nr_seq_diluicao_p			in	number,
									ie_checar_adep_p			in	char,
									nr_prescricao_orig_p		in	number ,
									nr_sequencia_orig_p			in	number ,
									ie_item_superior_p			in	varchar2 default 'N',
									ds_observacao_p				in	varchar2 default '',
									qt_dose_correcao_p          in	number ,
									qt_dias_tratamento_p		in	number ,
									qt_dose_diaria_p			in	number ,
									ie_medicacao_pac_w			in	varchar2 ,
									nr_seq_mat_diluicao_p		in	number ,
									ie_gerar_lote_p				in	material_diluicao.ie_gerar_lote%type ,
									cd_motivo_baixa_p			in	material_diluicao.cd_motivo_baixa%type ) is

	ds_erro_ww					varchar2(2000);
	ds_dose_diferenciada_aux_w	varchar2(4000);
	nr_posicao_w				integer;
	qt_dose_medic_w				prescr_material.qt_dose%type;
	ie_gerar_lote_w				prescr_material.ie_gerar_lote%type := 'S';
	ie_update_onco_w			varchar2(1 char);

	begin

	ds_dose_diferenciada_aux_w	:= replace(ds_dose_diferenciada_p,',','.');
	qt_dose_medic_w				:= qt_dose_p;
	cd_material_incons_w		:= cd_material_p;

	if (ie_agrupador_p in (1,4)) then
		ie_update_onco_w := 'S';
	else
		ie_update_onco_w := 'N';
	end if;

	if (coalesce(nr_agrupamento_w::text, '') = '') then
		select	coalesce(max(nr_agrupamento),0) + 1
		into STRICT	nr_agrupamento_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p;
	end if;

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_seq_prescricao_w
	from	prescr_material
	where	nr_prescricao = nr_prescricao_p;

	cd_unidade_medida_w	:= substr(obter_dados_material_estab(cd_material_p, cd_estabelecimento_p ,'UMS'),1,30);
	qt_conversao_dose_w	:= coalesce(obter_conversao_unid_med(cd_material_p, cd_unidade_medida_dose_p),0);

	--- Inicio MD3
  begin
    EXEC_W := 'BEGIN CALC_ITEM_MEDICACAO_CPOE_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9); END;';

    EXECUTE EXEC_W USING IN OUT qt_conversao_dose_w,
                                   IN qt_dose_correcao_p,
                                   IN qt_dose_medic_w,
                                   IN ds_dose_diferenciada_aux_w,
                                   IN ds_dose_diferenciada_p,
                                   IN cd_material_p,
                                   OUT qt_unitaria_w,
                                   OUT qt_material_w,
                                   OUT qt_erro_somar_doses_w;
  exception
    when others then
      ds_erro_w := sqlerrm;
      ds_parametros_w := ('nr_atendimento_p: '||nr_atendimento_p||'-'||'nr_prescricao_p: '||nr_prescricao_p||'-'||'nr_sequencia_p: '||nr_sequencia_p||'-'||
                          'qt_conversao_dose_w: '||qt_conversao_dose_w||'-'||'qt_dose_correcao_p: '||qt_dose_correcao_p||'-'||'qt_dose_medic_w: '||qt_dose_medic_w||'-'||
                          'ds_dose_diferenciada_aux_w: '||ds_dose_diferenciada_aux_w||'-'||'ds_dose_diferenciada_p: '||ds_dose_diferenciada_p||'-'||'qt_unitaria_w: '||qt_unitaria_w||'-'||
                          'qt_material_w: '||qt_material_w||'-'||'qt_erro_somar_doses_w: '||qt_erro_somar_doses_w);

      CALL gravar_log_medical_device('cpoe_insert_medic_reg','CALC_ITEM_MEDICACAO_CPOE_MD'
                                 ,ds_parametros_w,substr(ds_erro_w, 4000),nm_usuario_p,'S');
    
      qt_conversao_dose_w   := null;
      qt_unitaria_w         := null;
      qt_material_w         := null;
      qt_erro_somar_doses_w := null;
  end;

  if (qt_erro_somar_doses_w = 1) then
      CALL gravar_log_tasy(10007,
          substr('MEDIC somar_doses diferenciada Erro:' || substr(to_char(sqlerrm),1,2000)
                        ||'STACK ' || dbms_utility.format_call_stack
                          ||'//cd_estabelecimento_p : ' 	|| cd_estabelecimento_p
                          ||' nr_prescricao_p:'	    		|| nr_prescricao_p
                          ||' nr_seq_prescricao_w:'			|| nr_seq_prescricao_w
                          ||' cd_intervalo_w:'				|| cd_intervalo_w
                          ||' ie_via_aplicacao_w:'			|| ie_via_aplicacao_w
                          ||' qt_unitaria_w:'				|| qt_unitaria_w
                          ||' nr_ocorrencia_w:'				|| nr_ocorrencia_w
                          ||' ds_dose_diferenciada_p:'		|| ds_dose_diferenciada_p
                          ||' ie_origem_inf_p:'				|| ie_origem_inf_p
                          ||' cd_unidade_medida_w:'			|| cd_unidade_medida_w
                          ||' ie_se_necessario_w:'			|| ie_se_necessario_w
                          ||' ie_acm_w:'					|| ie_acm_w,1,2000),
              nm_usuario_p);
  end if;
	--- Fim MD3
	begin
		if ((ie_copia_diaria_p = 'S') and (coalesce(ds_dose_diferenciada_p::text, '') = '') and (dt_fim_medic_w IS NOT NULL AND dt_fim_medic_w::text <> '')) then
			ds_horarios_w := cpoe_recalcula_horarios_copia(ds_horarios_w, dt_inicio_w, dt_fim_medic_w, ie_acm_w, ie_se_necessario_w, cd_intervalo_w);
			nr_ocorrencia_w := obter_ocorrencias_horarios_rep(ds_horarios_w);
		end if;
	exception when others then
		CALL gravar_log_cpoe(substr('CPOE_INSERT_MEDIC_REG CPOE_RECALCULA_HORARIOS_COPIA EXCEPTION: ' || substr(to_char(sqlerrm),1,2000)
			|| '-nr_sequencia_p: ' || nr_sequencia_p
			|| '-nr_prescricao_p: ' || nr_prescricao_p
			|| '-nr_atendimento_p: ' || nr_atendimento_p
			|| '-cd_estabelecimento_p: ' || cd_estabelecimento_p
			|| '-cd_perfil_p: ' || cd_perfil_p
			|| '-nm_usuario_p: ' || nm_usuario_p
			|| '-ie_origem_inf_p: ' || ie_origem_inf_p
			|| '-dt_inicio_prescr_p: ' || to_char(dt_inicio_prescr_p,'dd/mm/yyyy hh24:mi:ss')
			|| '-ds_horarios_w: ' || ds_horarios_w
			|| '-dt_inicio_w: ' || to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')
			|| '-dt_fim_medic_w: ' || to_char(dt_fim_medic_w,'dd/mm/yyyy hh24:mi:ss')
			|| '-ie_acm_w: ' || ie_acm_w
			|| '-ie_se_necessario_w: ' || ie_se_necessario_w
			|| '-cd_intervalo_w: ' || cd_intervalo_w, 1, 2000),
			nr_atendimento_p, 'M', nr_sequencia_p);
	end;

	if (coalesce(nr_ocorrencia_w,0) = 0) then
		nr_ocorrencia_w	:= obter_ocorrencia_intervalo(cd_intervalo_w, 24, 'O');

		if (coalesce(nr_ocorrencia_w,0) = 0) then
			nr_ocorrencia_w	:= 1;
		end if;
	end if;

	begin
		SELECT * FROM obter_quant_dispensar(	cd_estabelecimento_p, cd_material_p, nr_prescricao_p, nr_seq_prescricao_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_ocorrencia_w, ds_dose_diferenciada_aux_w, ie_origem_inf_p, cd_unidade_medida_w, 0, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_ww, ie_se_necessario_w, ie_acm_w ) INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_ww;
	exception when others then
		CALL gravar_log_tasy(10007,
				substr('MEDIC obter_quant_dispensar Erro:' || substr(to_char(sqlerrm),1,2000)
											||'STACK ' || dbms_utility.format_call_stack
										   ||'//cd_estabelecimento_p : ' 	|| cd_estabelecimento_p
										   ||'cd_material_p:'	    		|| cd_material_p
										   ||'nr_prescricao_p:'	    		|| nr_prescricao_p
										   ||'nr_seq_prescricao_w:'			|| nr_seq_prescricao_w
										   ||'cd_intervalo_w:'				|| cd_intervalo_w
										   ||'ie_via_aplicacao_w:'			|| ie_via_aplicacao_w
										   ||'qt_unitaria_w:'				|| qt_unitaria_w
										   ||'nr_ocorrencia_w:'				|| nr_ocorrencia_w
										   ||'ds_dose_diferenciada_p:'		|| ds_dose_diferenciada_p
										   ||'ie_origem_inf_p:'				|| ie_origem_inf_p
										   ||'cd_unidade_medida_w:'			|| cd_unidade_medida_w
										   ||'qt_material_w:'				|| qt_material_w
										   ||'qt_total_dispensar_w :'		|| qt_total_dispensar_w
										   ||'ie_regra_disp_w:'				|| ie_regra_disp_w
										   ||'ds_erro_ww:'					|| ds_erro_ww
										   ||'ie_se_necessario_w:'			|| ie_se_necessario_w
										   ||'ie_acm_w:'					|| ie_acm_w,1,2000),
						nm_usuario_p);
	end;

	if (ie_regra_disp_ww IS NOT NULL AND ie_regra_disp_ww::text <> '') then
		ie_regra_disp_w := ie_regra_disp_ww;
	end if;

	qt_material_w	:= coalesce(qt_material_w, qt_unitaria_w, 1);
	qt_material_w	:= coalesce(qt_material_w,0);
	qt_unitaria_w	:= coalesce(qt_unitaria_w,0);

	if (qt_dias_liberado_w = 0) then
		qt_dias_liberado_w	:= null;
	end if;

	if (coalesce(nr_seq_ataque_w,0) > 0) or (coalesce(nr_seq_adicional_w,0) > 0)  then
		ie_dose_espec_agora_w 	:= 'S';
		qt_dose_especial_w 		:= qt_dose_medic_w;

		if (coalesce(nr_seq_adicional_w,0) > 0) then
			hr_dose_especial_w	:= to_char(dt_adm_adicional_w,'hh24:mi');
		else
			hr_dose_especial_w 	:= hr_prim_horario_w;
		end if;
		ds_horarios_w := null;
		hr_prim_horario_w := null;
	else
		ie_dose_espec_agora_w := 'N';
		qt_dose_especial_w := null;
		hr_dose_especial_w := null;
	end if;
	select	coalesce(max(ie_dias_util_medic),'O'),
			coalesce(max(ie_medic_paciente),'N')
	into STRICT	ie_dias_util_medic_w,
			ie_medic_paciente_w
	from	material
	where	cd_material = cd_material_p;

	ds_justificativa_w := cpoe_obter_justificativa_item(nr_sequencia_p, cd_material_p,'M');
	if (ie_gera_disp_acm_sn_w = 'N' and ie_copia_diaria_p = 'S' AND (ie_acm_w = 'S' or ie_se_necessario_w = 'S' )) then
		ie_gerar_lote_w := 'N';
	end if;

	if ((trim(both ds_observacao_p) IS NOT NULL AND (trim(both ds_observacao_p))::text <> '')) then
		ds_observacao_w :=  substr(ds_observacao_w,1,2000) ||' '|| chr(10) || chr(13) || substr(ds_observacao_p,1,2000);
	else
		ds_observacao_w :=  substr(ds_observacao_w,1,2000);
	end if;

	begin
		if (hr_min_aplicacao_w IS NOT NULL AND hr_min_aplicacao_w::text <> '') then
			qt_hora_aplicacao_w := substr(hr_min_aplicacao_w, 1, position(':' in hr_min_aplicacao_w)-1);
			qt_min_aplicacao_w := substr(hr_min_aplicacao_w, position(':' in hr_min_aplicacao_w)+1, length(hr_min_aplicacao_w));
		end if;
	exception when others then
		null;
	end;

	if (trunc(dt_inicio_w,'dd') > trunc(clock_timestamp(),'dd')) then
		select  max(dt_prox_geracao)
		into STRICT    dt_prox_geracao_ww
		from  	cpoe_material
		where 	nr_sequencia = nr_seq_mat_cpoe_w;

		CALL gravar_log_tasy(10007,
				substr('MEDIC dt_prox_geracao_ww Log:' || substr(to_char(sqlerrm),1,2000)
											||'STACK ' || dbms_utility.format_call_stack
										   ||'//nr_prescricao_p : ' 	|| nr_prescricao_p
										   ||' nr_seq_cpoe: ' 	    		|| nr_seq_mat_cpoe_w
										   ||' dt_prox_geracao_ww:'			|| to_char(dt_prox_geracao_ww, 'dd/mm/yyyy hh24:mi:ss'),1,2000),
						nm_usuario_p);
	end if;

	if (ds_dose_diferenciada_p IS NOT NULL AND ds_dose_diferenciada_p::text <> '') then
		SELECT * FROM cpoe_obter_horarios_dd(ds_horarios_w, ds_dose_diferenciada_p) INTO STRICT _ora2pg_r;
 ds_horarios_w := _ora2pg_r.ds_horarios_ajustados_p; nr_ocorrencia_w := _ora2pg_r.nr_ocorrencia_p;
		hr_prim_horario_w := obter_prim_dshorarios(ds_horarios_w);
		dt_inicio_w	:=  to_date(to_char(dt_inicio_w,'dd/mm/yyyy')||hr_prim_horario_w,'dd/mm/yyyy hh24:mi');
	end if;

	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
		select	coalesce(max(qt_min_intervalo),0)
		into STRICT	qt_min_intervalo_w
		from	intervalo_prescricao
		where	cd_intervalo = cd_intervalo_w;
	else
		qt_min_intervalo_w := 0;
	end if;

	begin
		ds_justificativa_prescr_w := '';
		open c002;
		loop
		fetch c002 into
			ds_just_interacao_medic_w;
		EXIT WHEN NOT FOUND; /* apply on c002 */
		begin
			if (ds_just_interacao_medic_w IS NOT NULL AND ds_just_interacao_medic_w::text <> '') then
				ds_justificativa_prescr_w := ds_justificativa_prescr_w || ' ' || ds_just_interacao_medic_w;
			end if;
		end;
		end loop;
		close c002;

		if (ds_justificativa_prescr_w IS NOT NULL AND ds_justificativa_prescr_w::text <> '')then
			update prescr_medica
			set ds_justificativa = substr(ds_justificativa || ds_justificativa_prescr_w,1,2000)
			where nr_prescricao = nr_prescricao_p;
		end if;

		insert into prescr_material(
				nr_prescricao,
				nr_sequencia,
				cd_material,
				qt_dose,
				cd_unidade_medida_dose,
				cd_unidade_medida,
				ie_via_aplicacao,
				cd_intervalo,
				ie_se_necessario,
				ie_acm,
				ie_urgencia,
				hr_prim_horario,
				ds_horarios,
				ie_origem_inf,
				ie_regra_disp,
				nr_sequencia_diluicao,
				ds_justificativa,
				qt_dias_solicitado,
				qt_dias_liberado,
				ie_objetivo,
				cd_microorganismo_cih,
				cd_amostra_cih,
				ie_origem_infeccao,
				cd_topografia_cih,
				ie_indicacao,
				nr_dia_util,
				qt_total_dias_lib,
				ie_uso_antimicrobiano,
				ie_bomba_infusao,
				qt_hora_aplicacao,
				qt_min_aplicacao,
				ie_aplic_bolus,
				ie_aplic_lenta,
				qt_solucao,
				nm_usuario,
				dt_atualizacao,
				ds_dose_diferenciada,
				cd_perfil_ativo,
				qt_unitaria,
				qt_material,
				qt_total_dispensar,
				ie_agrupador,
				nr_ocorrencia,
				qt_conversao_dose,
				nr_agrupamento,
				ie_ciente,
				ie_modificado,
				ie_novo_ciclo_ccih,
				ie_utiliza_kit,
				ie_antibiograma,
				ie_cultura_cih,
				ie_recons_diluente_fixo,
				ie_supera_limite_uso,
				ie_sem_aprazamento,
				ie_medicacao_paciente,
				ie_dose_espec_agora,
				ie_intervalo_dif,
				ie_pre_medicacao,
				ie_em_protocolo_vanco,
				ie_horario_susp,
				ie_fator_correcao,
				ie_suspenso,
				ie_cobra_paciente,
				ie_permite_substituir,
				ie_permite_alterar,
				ie_alterar_horario,
				ie_gerar_lote,
				ie_aplicar,
				ie_tipo_medic_hd,
				ie_status_cirurgia,
				nr_seq_mat_cpoe,
				qt_baixa_especial,
				qt_baixa_nconta,
				qt_dia_prim_hor,
				ie_erro,
				ie_checar_adep,
				ie_administrar,
				dt_proxima_dose,
				nr_prescricao_original,
				nr_prescricao_anterior,
				nr_sequencia_anterior,
				ds_observacao,
				dt_inicio_medic,
				cd_protocolo,
				nr_seq_protocolo,
				nr_seq_mat_protocolo,
				ie_lado,
				qt_dose_especial,
				hr_dose_especial,
				ie_item_superior,
				qt_volume_corrigido,
				qt_dias_tratamento,
				qt_dose_diaria,
				nr_seq_mat_diluicao,
				qt_min_intervalo,
				ds_observacao_ccih,
				ds_observacao_far,
				nr_seq_avaliacao,
				cd_motivo_baixa,
				nr_seq_atend_medic
		) values (
				nr_prescricao_p,
				nr_seq_prescricao_w,
				cd_material_p,
				qt_dose_medic_w,
				cd_unidade_medida_dose_p,
				cd_unidade_medida_w,
				ie_via_aplicacao_w,
				cd_intervalo_w,
				ie_se_necessario_w,
				ie_acm_w,
				CASE WHEN coalesce(ie_urgencia_w::text, '') = '' THEN 'N'  ELSE 'S' END ,
				hr_prim_horario_w,
				cpoe_substr_horario(ds_horarios_w,2000),
				ie_origem_inf_p,
				CASE WHEN coalesce(ie_regra_disp_w,'X')='D' THEN  ie_regra_disp_w  ELSE ie_regra_disp_w END ,
				nr_seq_diluicao_p,
				ds_justificativa_w,
				qt_dias_solicitado_w,
				qt_dias_liberado_w,
				ie_objetivo_w,
				cd_microorganismo_cih_w,
				cd_amostra_cih_w,
				ie_origem_infeccao_w,
				cd_topografia_cih_w,
				ie_indicacao_w,
				nr_dia_util_w,
				qt_total_dias_lib_w,
				ie_uso_antimicrobiano_w,
				ie_bomba_infusao_w,
				qt_hora_aplicacao_w,
				qt_min_aplicacao_w,
				ie_aplic_bolus_w,
				ie_aplic_lenta_w,
				qt_solucao_p,
				nm_usuario_p,
				dt_atualizacao_w,
				ds_dose_diferenciada_p,
				cd_perfil_p,
				qt_unitaria_w,
				qt_material_w,
				qt_total_dispensar_w,
				ie_agrupador_p,
				nr_ocorrencia_w,
				qt_conversao_dose_w,
				CASE WHEN coalesce(nr_seq_diluicao_p::text, '') = '' THEN nr_agrupamento_w  ELSE 0 END ,
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				ie_medicacao_paciente_w,
				ie_dose_espec_agora_w,
				'N',
				'N',
				'N',
				'N',
				'N',
				'N',
				'S',
				'S',
				'S',
				'S',
				coalesce(ie_gerar_lote_p, ie_gerar_lote_w),
				'S',
				'D',
				'GI',
				nr_seq_mat_cpoe_w,
				0,
				0,
				qt_dia_prim_hor_w,
				0,
				ie_checar_adep_p,
				ie_administrar_w,
				dt_proxima_dose_w,
				nr_prescricao_orig_p,
				nr_prescricao_orig_p,
				nr_sequencia_orig_p,
				ds_observacao_w,
				dt_inicio_w,
				cd_protocolo_w,
				nr_seq_protocolo_w,
				nr_seq_mat_protocolo_w,
				ie_lado_w,
				qt_dose_especial_w,
				hr_dose_especial_w,
				ie_item_superior_p,
				qt_dose_correcao_p,
				qt_dias_tratamento_p,
				qt_dose_diaria_p,
				nr_seq_mat_diluicao_p,
				qt_min_intervalo_w,
				ds_observacao_ccih_w,
				ds_observacao_far_w,
				nr_seq_avaliacao_w,
				cd_motivo_baixa_p,
				CASE WHEN ie_update_onco_w='S' THEN  nr_seq_interno_onc_w  ELSE null END
				);

				if (nr_seq_avaliacao_w > 0) then
					update 	med_Avaliacao_paciente
					set		nr_prescricao = nr_prescricao_p
					where	nr_sequencia = nr_seq_avaliacao_w
					and		coalesce(nr_prescricao::text, '') = '';
				end if;


		commit;

	exception when others then
	CALL gravar_log_tasy(10007,
				substr('MEDIC Insert Erro:' || substr(to_char(sqlerrm),1,2000)
											||'STACK ' || dbms_utility.format_call_stack
										   ||'//nr_prescricao_p : ' 	|| nr_prescricao_p
										   ||' nr_seq_prescricao_w:'	    || nr_seq_prescricao_w
										   ||' cd_material_p:'	    		|| cd_material_p
										   ||' nr_seq_mat_cpoe_w:'			|| nr_seq_mat_cpoe_w
										   ||' cd_intervalo_w:'				|| cd_intervalo_w
										   ||' nr_sequencia_orig_p:'		|| nr_sequencia_orig_p
										   ||' qt_unitaria_w:'				|| qt_unitaria_w
										   ||' nr_ocorrencia_w:'			|| nr_ocorrencia_w
										   ||'qt_total_dispensar_w:'		|| qt_total_dispensar_w
										   ||'qt_material_w:'				|| qt_material_w
										   ||'ds_horarios_w'				|| ds_horarios_w,1,2000),
						nm_usuario_p);
	end;

	select  coalesce(max(b.nr_prescricao),0)
	into STRICT	nr_presc_incons_w
	from  	prescr_medica a,
			prescr_material b,
			prescr_material_incon_farm c
	WHERE   b.nr_prescricao = a.nr_prescricao
	and		b.nr_prescricao = c.nr_prescricao
	and		b.nr_sequencia = c.nr_seq_material
	and		nr_seq_mat_cpoe = nr_seq_mat_cpoe_w
	and 	a.dt_suspensao is  null
	and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and     a.cd_funcao_origem not in (924,950)
	and		b.ie_agrupador = 1
	and		b.cd_material = cd_material_p
	and		b.nr_prescricao <> nr_prescricao_p;

	if (nr_presc_incons_w > 0) then

    CALL gravar_log_cpoe(substr('CPOE_INSERT_MEDIC_REG GENERATE INCONSISTENCY PHARMACY 1: '
      || '-nr_presc_incons_w: ' || nr_presc_incons_w
      || '-nr_seq_mat_cpoe_w: ' || nr_seq_mat_cpoe_w
      || '-cd_material_incons_w: ' || cd_material_incons_w, 1, 2000),
      nr_atendimento_p, 'M', nr_sequencia_p);

    for c003_w in c003
      loop

        CALL gravar_log_cpoe(substr('CPOE_INSERT_MEDIC_REG GENERATE INCONSISTENCY PHARMACY 2: '
          || '-c003_w.nm_usuario: ' || c003_w.nm_usuario
          || '-c003_w.nm_usuario_nrec: ' || c003_w.nm_usuario_nrec
          || '-c003_w.nr_seq_inconsistencia: ' || c003_w.nr_seq_inconsistencia, 1, 2000),
          nr_atendimento_p, 'M', nr_sequencia_p);

        insert  into	prescr_material_incon_farm(
          nr_sequencia,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          nr_prescricao,
          nr_seq_material,
          nr_seq_inconsistencia,
          ie_situacao)
      values (nextval('prescr_material_incon_farm_seq'),
          clock_timestamp(),
          c003_w.nm_usuario,
          c003_w.dt_atualizacao_nrec,
          c003_w.nm_usuario_nrec,
          nr_prescricao_p,
          nr_seq_prescricao_w,
          c003_w.nr_seq_inconsistencia,
          'A');
    end loop;
	end if;

	ie_padronizado_w := coalesce(obter_se_material_padronizado(cd_estabelecimento_p, cd_material_p), 'N');

  if (ie_padronizado_w = 'N') and (ie_agrupador_p in (1, 4, 8, 12)) and (ie_origem_inf_p <> 'K') then

		select	max(coalesce(qt_total_dias_lib,0))
		into STRICT	qt_total_dias_lib_w
		from 	cpoe_material
		where	cd_material		= cd_material_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and		coalesce(dt_suspensao::text, '') = ''
		and		(qt_total_dias_lib IS NOT NULL AND qt_total_dias_lib::text <> '')
		and		dt_fim 			> clock_timestamp()
		and		nr_atendimento = nr_atendimento_p
		and		nr_sequencia	<> nr_sequencia_p;

		--- Inicio MD4 criar objeto obter_dt_fim_dias_lib_md
    begin
      EXEC_W := 'BEGIN OBTER_DT_FIM_DIAS_LIB_MD(:1,:2,:3); END;';

      EXECUTE EXEC_W USING IN OUT qt_total_dias_lib_w,
                                     IN dt_inicio_w,
                                     OUT dt_fim_nao_padrao_w;
    exception
      when others then
      ds_erro_w := sqlerrm;
      ds_parametros_w := ('nr_atendimento_p: '||nr_atendimento_p||'-'||'nr_prescricao_p: '||nr_prescricao_p||'-'||'nr_sequencia_p: '||nr_sequencia_p||'-'||
                          'qt_total_dias_lib_w: '||qt_total_dias_lib_w||'-'||'dt_inicio_w: '||dt_inicio_w||'-'||'dt_fim_nao_padrao_w: '||dt_fim_nao_padrao_w);

      CALL gravar_log_medical_device('cpoe_insert_medic_reg','OBTER_DT_FIM_DIAS_LIB_MD'
                                 ,ds_parametros_w,substr(ds_erro_w, 4000),nm_usuario_p,'S');
      
        qt_total_dias_lib_w  := null;
        dt_fim_nao_padrao_w  := null;
    end;
		---- Fim MD4
		update	cpoe_material
		set		dt_fim_nao_padrao 	= dt_fim_nao_padrao_w,
				qt_total_dias_lib	= qt_total_dias_lib_w,
				dt_fim				= CASE WHEN ie_dias_util_medic_w='N' THEN  coalesce(dt_fim_nao_padrao_w, dt_fim)  ELSE dt_fim END
		where 	nr_sequencia		= nr_sequencia_p;

		if (ie_medic_paciente_w = 'N') and (ds_justificativa_w IS NOT NULL AND ds_justificativa_w::text <> '') and (coalesce(qt_dias_tratamento_p,0) > 0) then

			begin
				select	coalesce(max('N'), 'S')
				into STRICT	ie_primeira_prescr_w
				from	prescr_material
				where	nr_seq_mat_cpoe = nr_seq_mat_cpoe_w
				and	cd_material = cd_material_p;


				if (ie_copia_diaria_p = 'N' or (ie_copia_diaria_p = 'S' and ie_primeira_prescr_w = 'S')) then
					CALL gerar_liberacao_med_naopadrao(qt_dias_tratamento_p, cd_pessoa_fisica_w, cd_material_p, dt_inicio_prescr_p, qt_dose_diaria_p , nm_usuario_p, ds_justificativa_w, nr_prescricao_p, nr_seq_prescricao_w,null, cd_intervalo_w);
				end if;
			exception when others then
				CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_liberacao_med_naopadrao Erro:' || substr(to_char(sqlerrm),1,2000)
										   ||'STACK ' || dbms_utility.format_call_stack
										   ||'//nr_dia_util_w : ' 	|| nr_dia_util_w
										   ||' nr_seq_prescricao_w:'		|| nr_seq_prescricao_w
										   ||' cd_pessoa_fisica_w:'	    || cd_pessoa_fisica_w
										   ||' cd_material_p:'	    		|| cd_material_p
										   ||' dt_inicio_prescr_p:'			|| to_char(dt_inicio_prescr_p,'dd/mm/yyyy hh24:mi:ss')
										   ||' qt_dose_medic_w:'				|| qt_dose_medic_w
										   ||' nr_sequencia_orig_p:'		|| nm_usuario_p
										   ||' ds_justificativa_w:'				|| ds_justificativa_w
										   ||' nr_prescricao_p:'			|| nr_prescricao_p
										   ||'cd_intervalo_w:'				|| cd_intervalo_w,1,2000),
						nm_usuario_p);
			end;
		end if;

	end if;

	qt_dias_liberado_w	:= null;
	nr_dia_util_w		:= null;
	qt_total_dias_lib_w	:= null;
	ds_observacao_ccih_w := null;
	ds_observacao_far_w := null;

	end;

	procedure Localizar_ultimo_item is
	begin
		nr_prescricao_orig_w	:= null;
		nr_sequencia_orig_w		:= null;

		if	(ie_copia_diaria_p = 'S' AND nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
			-- Localizar ultima prescricao
			select	max(a.nr_prescricao)
			into STRICT	nr_prescricao_orig_w
			from	prescr_medica a
			where	a.nr_atendimento = nr_atendimento_p
			and		a.dt_prescricao > dt_inicio_base_w - 10
			and		exists (	SELECT	1
							from	prescr_material b
							where	b.ie_agrupador = 1
							and		b.nr_seq_mat_cpoe = nr_sequencia_p
							and		coalesce(b.ie_origem_inf,'X') <> 'K'
							and		coalesce(b.nr_seq_kit::text, '') = ''
							and		b.nr_prescricao = a.nr_prescricao );

			if (nr_prescricao_orig_w IS NOT NULL AND nr_prescricao_orig_w::text <> '') then
				-- Itens copiados nao devem ser gerados como agora
				ie_urgencia_w	:= null;

				-- Localizar ultimo item
				select	min(b.nr_sequencia)
				into STRICT	nr_sequencia_orig_w
				from	prescr_material b
				where	b.ie_agrupador = 1
				and		b.nr_seq_mat_cpoe = nr_sequencia_p
				and		coalesce(b.ie_origem_inf,'X') <> 'K'
				and		coalesce(b.nr_seq_kit::text, '') = ''
				and		b.nr_prescricao = nr_prescricao_orig_w;
			else
				nr_sequencia_orig_w	:= null;
			end if;
		end if;
	end;

	function obter_observacao_interacao(	nr_seq_mat_p	in	number,
											ie_tipo_item_p	in	varchar2)
											return;
	ds_retorno_w varchar2(2000);

	C01 CURSOR FOR
		SELECT	distinct
				a.ds_orientacao
		from	material_interacao_medic a,
				cpoe_justificativa_item b
		where	a.nr_sequencia = b.nr_seq_interacao_medic
		and		b.nr_seq_material = nr_seq_mat_p
		and		b.ie_tipo_item = ie_tipo_item_p
    and   coalesce(a.ie_situacao, 'A') = 'A';
	begin
		open C01;
		loop
		fetch C01 into
			ds_orientacao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
				ds_retorno_w	:= substr(ds_retorno_w || ds_orientacao_w,1,2000);
			end;
		end loop;
		close C01;

		return;
	end;

begin
dt_inicio_base_w		:= trunc(dt_inicio_prescr_p,'mi');
nr_horas_prox_geracao_w	:= get_qt_hours_after_copy_cpoe(cd_perfil_p, nm_usuario_p, cd_estabelecimento_p);

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	cd_pessoa_fisica_w	:= cd_pessoa_fisica_p;
else
	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
end if;

select	max(ie_gera_disp_acm_sn)
into STRICT	ie_gera_disp_acm_sn_w
from	parametros_farmacia
where	cd_estabelecimento	= cd_estabelecimento_p;

open c001;
loop
fetch c001 into
	cd_material_w,
	qt_dose_w,
	ie_via_aplicacao_w,
	cd_unidade_medida_dose_w,
	cd_intervalo_w,
	hr_prim_horario_w,
	ds_horarios_w,
	ie_se_necessario_w,
	ie_acm_w,
	ds_justificativa_w,
	qt_dias_solicitado_w,
	qt_dias_liberado_w,
	ie_objetivo_w,
	cd_microorganismo_cih_w,
	cd_amostra_cih_w,
	ie_origem_infeccao_w,
	cd_topografia_cih_w,
	ie_indicacao_w,
	nr_dia_util_w,
	qt_total_dias_lib_w,
	ie_uso_antimicrobiano_w,
	ie_bomba_infusao_w,
	qt_hora_aplicacao_w,
	qt_min_aplicacao_w,
  	hr_min_aplicacao_w,
	ie_aplic_bolus_w,
	ie_aplic_lenta_w,
	qt_solucao_w,
	dt_atualizacao_w,
	ds_dose_diferenciada_w,
	qt_dosagem_w,
	ie_tipo_dosagem_w,
	qt_tempo_aplicacao_w,
	qt_solucao_total_w,
	qt_hora_fase_w,
	cd_mat_dil_w,
	qt_dose_dil_w,
	cd_unid_med_dose_dil_w,
	ds_dose_diferenciada_dil_w,
	qt_solucao_dil_w,
	cd_mat_recons_w,
	qt_dose_recons_w,
	cd_unid_med_dose_recons_w,
	cd_mat_red_w,
	qt_dose_red_w,
	cd_unid_med_dose_red_w,
	ds_dose_diferenciada_red_w,
	qt_solucao_red_w,
	nr_seq_mat_cpoe_w,
	cd_mat_comp1_w,
	qt_dose_comp1_w,
	cd_unid_med_dose_comp1_w,
	ds_dose_diferenciada_comp1_w,
	ie_paciente_comp1_w,
	cd_mat_comp2_w,
	qt_dose_comp2_w,
	cd_unid_med_dose_comp2_w,
	ds_dose_diferenciada_comp2_w,
	ie_paciente_comp2_w,
	cd_mat_comp3_w,
	qt_dose_comp3_w,
	cd_unid_med_dose_comp3_w,
	ds_dose_diferenciada_comp3_w,
	ie_paciente_comp3_w,
	cd_mat_comp4_w,
	qt_dose_comp4_w,
	cd_unid_med_dose_comp4_w,
	ds_dose_diferenciada_comp4_w,
	ie_paciente_comp4_w,
	cd_mat_comp5_w,
	qt_dose_comp5_w,
	cd_unid_med_dose_comp5_w,
	ds_dose_diferenciada_comp5_w,
	ie_paciente_comp5_w,
	cd_mat_comp6_w,
	qt_dose_comp6_w,
	cd_unid_med_dose_comp6_w,
	ds_dose_diferenciada_comp6_w,
	ie_paciente_comp6_w,
	cd_mat_comp7_w,
	qt_dose_comp7_w,
	cd_unid_med_dose_comp7_w,
	ds_dose_diferenciada_comp7_w,
	ie_paciente_comp7_w,
	dt_inicio_orig_w,
	dt_fim_w,
	dt_fim_cih_w,
	nr_ocorrencia_w,
	ds_observacao_w,
	ie_urgencia_w,
	ie_medicacao_paciente_w,
	cd_protocolo_w,
	nr_seq_protocolo_w,
	nr_seq_mat_protocolo_w,
	ie_administracao_w,
	ie_lado_w,
	nr_seq_ataque_w,
	nr_seq_adicional_w,
	dt_adm_adicional_w,
	ie_retrogrado_w,
	qt_dil_correcao_w,
	qt_dias_tratamento_w,
	qt_dias_tratamento1_w,
	qt_dias_tratamento2_w,
	qt_dias_tratamento3_w,
	qt_dose_diaria_w,
	qt_dose_diaria1_w,
	qt_dose_diaria2_w,
	qt_dose_diaria3_w,
	nr_seq_mat_diluicao_w,
	ie_duracao_w,
	nr_seq_cpoe_anterior_w,
	ie_evento_unico_w,
	ie_alterou_horario_w,
	ie_dose_ataque_w,
	ie_dose_adicional_w,
	ie_antibiotico_w,
	dt_suspensao_w,
	dt_lib_suspensao_w,
	ie_reset_atb_w,
	ds_observacao_far_w,
	nr_seq_avaliacao_w,
	dt_fim_medic_w,
	ie_regra_disp_ww,
	nr_seq_mat_reconst_w,
	ie_oncologia_w,
	nr_seq_interno_onc_w,
	ie_fator_correcao_w,
	qt_dose_correcao1_w,
	qt_dose_correcao2_w,
	qt_dose_correcao3_w,
	qt_dose_correcao4_w,
	qt_dose_correcao5_w,
	qt_dose_correcao6_w,
	qt_dose_correcao7_w,
	qt_dose_correcao8_w,
	qt_vol_dil_corrigido_w,
	qt_vol_red_corrigido_w,
	qt_vol_rec_corrigido_w,
	cd_mat_recons1_w,
	qt_dose_recons1_w,
	cd_unid_med_dose_recons1_w,
	ds_dose_diferenciada_rec1_w,
	cd_mat_recons2_w,
	qt_dose_recons2_w,
	cd_unid_med_dose_recons2_w,
	ds_dose_diferenciada_rec2_w,
	cd_mat_recons3_w,
	qt_dose_recons3_w,
	cd_unid_med_dose_recons3_w,
	ds_dose_diferenciada_rec3_w,
	cd_mat_recons4_w,
	qt_dose_recons4_w,
	cd_unid_med_dose_recons4_w,
	ds_dose_diferenciada_rec4_w,
	cd_mat_recons5_w,
	qt_dose_recons5_w,
	cd_unid_med_dose_recons5_w,
	ds_dose_diferenciada_rec5_w,
	cd_mat_recons6_w,
	qt_dose_recons6_w,
	cd_unid_med_dose_recons6_w,
	ds_dose_diferenciada_rec6_w,
	cd_mat_recons7_w,
	qt_dose_recons7_w,
	cd_unid_med_dose_recons7_w,
	ds_dose_diferenciada_rec7_w;
EXIT WHEN NOT FOUND; /* apply on c001 */
	begin

	--ie_calcula_horarios_w	:= false;
	dt_inicio_w				:= dt_inicio_orig_w;

	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
		select	max(ie_operacao),
				max(qt_operacao)
		into STRICT	ie_operacao_w,
				qt_operacao_w
		from	intervalo_prescricao
		where	cd_intervalo = cd_intervalo_w;

		if (ie_copia_diaria_p = 'N') and (obter_se_interv_evento_unico(cd_intervalo_w) = 'N') and (ie_evento_unico_w = 'S') then
			ie_evento_unico_w := 'N';
		end if;
	end if;

	select	max(qt_dose_adm)
	into STRICT	qt_dose_adm_w
	from	cpoe_variable_dose
	where	nr_seq_mat_cpoe = nr_sequencia_p
	and 	trunc(dt_dose) = trunc(dt_inicio_prescr_p);

	--- Inicio MD5
  begin
    EXEC_W := 'CALL OBTER_DOSE_ADM_CPOE_MD(:1,:2) INTO :RESULT';

    EXECUTE EXEC_W USING IN qt_dose_adm_w,
                                   IN qt_dose_w,
                                   OUT qt_dose_w;
  exception
    when others then
      ds_erro_w := sqlerrm;
      ds_parametros_w := ('nr_atendimento_p: '||nr_atendimento_p||'-'||'nr_prescricao_p: '||nr_prescricao_p||'-'||'nr_sequencia_p: '||nr_sequencia_p||'-'||
                          'qt_dose_adm_w: '||qt_dose_adm_w||'-'||'qt_dose_w: '||qt_dose_w||'-'||'qt_dose_w: '||qt_dose_w);

      CALL gravar_log_medical_device('cpoe_insert_medic_reg','OBTER_DOSE_ADM_CPOE_MD'
                                 ,ds_parametros_w,substr(ds_erro_w, 4000),nm_usuario_p,'S');
    
      qt_dose_w  := null;
  end;
	--- Fim MD5
	if (qt_dose_adm_w IS NOT NULL AND qt_dose_adm_w::text <> '') then
		update 	cpoe_material
		set 	qt_dose = qt_dose_adm_w
		where 	nr_sequencia = nr_sequencia_p;
  end if;

	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
	   hr_prim_horario_ww := obter_prim_dshorarios(ds_horarios_w);
		if (hr_prim_horario_ww IS NOT NULL AND hr_prim_horario_ww::text <> '') and (hr_prim_horario_w <> '  :  ') and (hr_prim_horario_w <> hr_prim_horario_ww) then
			if (coalesce(ie_copia_diaria_p, 'N') = 'N' and ie_alterou_horario_w = 'N' and to_date(to_char(dt_inicio_w,'dd/mm/yyyy ') || hr_prim_horario_ww,'dd/mm/yyyy hh24:mi') < clock_timestamp() and
					to_date(to_char(dt_inicio_w,'dd/mm/yyyy ') || hr_prim_horario_w,'dd/mm/yyyy hh24:mi') > clock_timestamp()) then
				nr_ocorrencia_w := null;
				SELECT * FROM cpoe_calcular_horario_prescr(nr_atendimento_p, cd_intervalo_w, null, to_date(to_char(dt_inicio_w,'dd/mm/yyyy ') || hr_prim_horario_w,'dd/mm/yyyy hh24:mi'), null, 0, nr_ocorrencia_w, ds_horarios_aux_w, ds_horarios_aux2_w, nm_usuario_p, cd_estabelecimento_p, cd_perfil_p, '', null, null, null, null, obterValidade(nr_atendimento_p,nr_sequencia_p), dt_fim_w) INTO STRICT nr_ocorrencia_w, ds_horarios_aux_w, ds_horarios_aux2_w;

				ds_horarios_w := ds_horarios_aux_w||ds_horarios_aux2_w;
				ds_horarios_w := replace(padroniza_horario_prescr(ds_horarios_w,NULL),'A','');

				update  cpoe_material
				set		nr_ocorrencia = nr_ocorrencia_w,
						ds_horarios = ds_horarios_w
				where	nr_sequencia = nr_seq_mat_cpoe_w;
			else
				hr_prim_horario_w := hr_prim_horario_ww;

				update  cpoe_material
				set		hr_prim_horario = hr_prim_horario_w
				where	nr_sequencia = nr_seq_mat_cpoe_w;

			end if;
		end if;
	end if;

	--- Inicio MD6
	-- Itens ACM e SN nao possuem 1 horario, definir inicio do item para execucao da geracao.
  begin
    EXEC_W := 'CALL OBTER_PRIM_HORARIO_CPOE_MD(:1,:2,:3,:4) INTO :RESULT';

    EXECUTE EXEC_W USING IN ie_administracao_w,
                                   IN dt_inicio_w,
                                   IN dt_inicio_base_w,
                                   IN hr_prim_horario_w,
                                   OUT hr_prim_horario_w;
  exception
    when others then
      ds_erro_w := sqlerrm;
      ds_parametros_w := ('nr_atendimento_p: '||nr_atendimento_p||'-'||'nr_prescricao_p: '||nr_prescricao_p||'-'||'nr_sequencia_p: '||nr_sequencia_p||'-'||
                          'ie_administracao_w: '||ie_administracao_w||'-'||'dt_inicio_w: '||dt_inicio_w||'-'||'dt_inicio_base_w: '||dt_inicio_base_w||'-'||
                          'hr_prim_horario_w: '||hr_prim_horario_w||'-'||'hr_prim_horario_w: '||hr_prim_horario_w);

      CALL gravar_log_medical_device('cpoe_insert_medic_reg','OBTER_PRIM_HORARIO_CPOE_MD'
                                 ,ds_parametros_w,substr(ds_erro_w, 4000),nm_usuario_p,'S');
    
      hr_prim_horario_w  := null;
  end;
	--- Fim MD6
	-- Localizar ultima prescricao e item principal vinculado ao registro da CPOE
	Localizar_ultimo_item;

	-- Atualiza a data inicio com dia e horario.
	dt_inicio_w := to_date(to_char(dt_inicio_w,'dd/mm/yyyy ') || hr_prim_horario_w,'dd/mm/yyyy hh24:mi');

	-- Atualizar data de inicio com a data atual, para itens que a data de inicio ja tenha sido ultrapassada.
	-- E se for nao for a primeira prescricao de um item retrogrado
	if (ie_copia_diaria_p = 'S' and (nr_prescricao_orig_w IS NOT NULL AND nr_prescricao_orig_w::text <> '')) then
		-- Assumir data da prescricao para o item
		dt_inicio_w	:= to_date(to_char(dt_inicio_base_w,'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');

		-- Adicionar um dia, caso o inicio do item, nao caia na data de hoje
    --- Inicio MD7 --- Criar um MD que tenha esse if para usar em outros lugares.
    begin
      EXEC_W := 'CALL OBTER_SE_DT_MEDIC_REG_CPOE_MD(:1,:2) INTO :RESULT';

      EXECUTE EXEC_W USING IN dt_inicio_w,
                                     IN dt_inicio_base_w,
                                     OUT se_dt_medic_reg_w;
    exception
      when others then
      ds_erro_w := sqlerrm;
      ds_parametros_w := ('nr_atendimento_p: '||nr_atendimento_p||'-'||'nr_prescricao_p: '||nr_prescricao_p||'-'||'nr_sequencia_p: '||nr_sequencia_p||'-'||
                          'dt_inicio_w: '||dt_inicio_w||'-'||'dt_inicio_base_w: '||dt_inicio_base_w||'-'||'se_dt_medic_reg_w: '||se_dt_medic_reg_w);

      CALL gravar_log_medical_device('cpoe_insert_medic_reg','OBTER_SE_DT_MEDIC_REG_CPOE_MD'
                                 ,ds_parametros_w,substr(ds_erro_w, 4000),nm_usuario_p,'S');
      
        se_dt_medic_reg_w  := null;
    end;

		if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
			if (ie_operacao_w = 'H' and qt_operacao_w > 12) then
				dt_inicio_w := cpoe_obter_inicio_interv_horas(cd_intervalo_w, dt_inicio_w, dt_inicio_base_w);
				hr_prim_horario_w	:= to_char(dt_inicio_w,'hh24:mi');
				dt_inicio_base_w	:= dt_inicio_w;
				ds_horarios_w		:= hr_prim_horario_w;

				if (qt_operacao_w < 24) then
					SELECT * FROM cpoe_calcular_horario_prescr(nr_atendimento_p, cd_intervalo_w, null, dt_inicio_w, null, 0, nr_ocorrencia_w, ds_horarios_aux_w, ds_horarios_aux2_w, nm_usuario_p, cd_estabelecimento_p, cd_perfil_p, '', null, null, null, null, 24, dt_fim_w) INTO STRICT nr_ocorrencia_w, ds_horarios_aux_w, ds_horarios_aux2_w;

					ds_horarios_w := ds_horarios_aux_w||ds_horarios_aux2_w;
					ds_horarios_w := replace(padroniza_horario_prescr(ds_horarios_w,NULL),'A','');
				end if;

				update	cpoe_material
				set		hr_prim_horario = hr_prim_horario_w,
						ds_horarios = ds_horarios_w
				where	nr_sequencia = nr_seq_mat_cpoe_w;
      elsif se_dt_medic_reg_w = 'S' then --- Inicio MD7 --- Criar um MD que tenha esse if para usar em outros lugares.
				dt_inicio_w	:= dt_inicio_w+1;
			end if; --- Fim MD7
		elsif se_dt_medic_reg_w = 'S' then
			dt_inicio_w	:= dt_inicio_w+1;
		end if; --- Fim MD7
	elsif (ie_administracao_w = 'P') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and (ie_operacao_w in ('X','H')) and
			((obter_quantidade_horarios(ds_horarios_w) <> Obter_ocorrencia_intervalo(cd_intervalo_w, obterValidade(nr_atendimento_p,nr_sequencia_p), 'O')) or (coalesce(ds_horarios_w::text, '') = '')) and (ie_alterou_horario_w = 'N') and (ie_dose_ataque_w = 'N') and (ie_dose_adicional_w = 'N')then



		CALL gravar_log_tasy(10007,
			substr( 'MEDICAMENTO HORARIOS_ETAPAS_DIFERENTES line 1475:' ||
					' nr_sequencia_p: ' || nr_sequencia_p ||
					' cd_intervalo_w: ' || cd_intervalo_w ||
					' dt_inicio_w: ' || to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss') ||
					' cd_estabelecimento_p: ' || cd_estabelecimento_p ||
					' cd_perfil_p: ' ||  cd_perfil_p ||
					' ds_horarios_w : ' || ds_horarios_w ||
					' ds_horarios_aux_w : ' || ds_horarios_aux_w ||
					' ds_horarios_aux2_w : ' || ds_horarios_aux2_w ||
					' nr_ocorrencia_w : ' || nr_ocorrencia_w,1,2000), nm_usuario_p);

		nr_ocorrencia_w := null;

		SELECT * FROM cpoe_calcular_horario_prescr(nr_atendimento_p, cd_intervalo_w, null, dt_inicio_w, null, 0, nr_ocorrencia_w, ds_horarios_aux_w, ds_horarios_aux2_w, nm_usuario_p, cd_estabelecimento_p, cd_perfil_p, '', null, null, null, null, obterValidade(nr_atendimento_p,nr_sequencia_p), dt_fim_w) INTO STRICT nr_ocorrencia_w, ds_horarios_aux_w, ds_horarios_aux2_w;

		CALL gravar_log_tasy(10007,
					substr( 'MEDICAMENTO HORARIOS_ETAPAS_DIFERENTES line 1475:' ||
							' nr_sequencia_p: ' || nr_sequencia_p ||
							' cd_intervalo_w: ' || cd_intervalo_w ||
							' dt_inicio_w: ' || to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss') ||
							' cd_estabelecimento_p: ' || cd_estabelecimento_p ||
							' cd_perfil_p: ' ||  cd_perfil_p ||
							' ds_horarios_w : ' || ds_horarios_w ||
							' ds_horarios_aux_w : ' || ds_horarios_aux_w ||
							' ds_horarios_aux2_w : ' || ds_horarios_aux2_w ||
							' nr_ocorrencia_w : ' || nr_ocorrencia_w,1,2000), nm_usuario_p);

		ds_horarios_w := ds_horarios_aux_w||ds_horarios_aux2_w;
		ds_horarios_w := replace(padroniza_horario_prescr(ds_horarios_w,NULL),'A','');

		CALL gravar_log_tasy(10007,
					substr(	'MEDICAMENTO HORARIOS_ETAPAS_DIFERENTES line 1475:' ||
							' nr_sequencia_p: ' || nr_sequencia_p ||
							' cd_intervalo_w: ' || cd_intervalo_w ||
							' dt_inicio_w: ' || to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss') ||
							' cd_estabelecimento_p: ' || cd_estabelecimento_p ||
							' cd_perfil_p: ' ||  cd_perfil_p ||
							' ds_horarios_w : ' || ds_horarios_w ||
							' ds_horarios_aux_w : ' || ds_horarios_aux_w ||
							' ds_horarios_aux2_w : ' || ds_horarios_aux2_w ||
							' nr_ocorrencia_w : ' || nr_ocorrencia_w,1,2000), nm_usuario_p);


		update  cpoe_material
		set		nr_ocorrencia = nr_ocorrencia_w,
				ds_horarios = ds_horarios_w
		where	nr_sequencia = nr_seq_mat_cpoe_w;

	end if;

	dt_proxima_dose_w	:= dt_inicio_w;
	ie_administrar_w	:= null;
	dt_prox_geracao_w	:= null;

	-- Caso a data de inicio do item maior que data fim de base do item, reprogramar geracao do item.
	--  A prescricao deste item, deve ser gerada diariamente, independente de sua administracao.
	if (dt_proxima_dose_w > dt_inicio_base_w + 1 - 1/86400) and (ie_disp_semanal_p = 'N') then
		begin
		-- Se a data de inicio do item for superior a data de inicio da prescricao adicionando 1 dia (totalizando 24h),
		--  e nao existe nenhuma prescricao gerada anteriormente, quer dizer que e um novo item.
		--  sendo assim, deve-se programar a geracao de uma prescricao para este.
		if (coalesce(nr_prescricao_orig_w::text, '') = '') then
      --- Inicio MD8 utilizar ou criar o objeto obter_dt_prox_geracao_cpoe_md
      begin
        EXEC_W := 'CALL OBTER_DT_PROX_GERACAO_CPOE_MD(:1,:2) INTO :RESULT';

        EXECUTE EXEC_W USING IN dt_proxima_dose_w,
                                       IN nr_horas_prox_geracao_w,
                                       OUT dt_prox_geracao_w;
      exception
        when others then
      ds_erro_w := sqlerrm;
      ds_parametros_w := ('nr_atendimento_p: '||nr_atendimento_p||'-'||'nr_prescricao_p: '||nr_prescricao_p||'-'||'nr_sequencia_p: '||nr_sequencia_p||'-'||
                          'dt_proxima_dose_w: '||dt_proxima_dose_w||'-'||'nr_horas_prox_geracao_w: '||nr_horas_prox_geracao_w||'-'||'dt_prox_geracao_w: '||dt_prox_geracao_w);

      CALL gravar_log_medical_device('cpoe_insert_medic_reg','OBTER_DT_PROX_GERACAO_CPOE_MD'
                                 ,ds_parametros_w,substr(ds_erro_w, 4000),nm_usuario_p,'S');
        
          dt_prox_geracao_w := null;
      end;

			begin
				update	cpoe_material
				set		dt_prox_geracao = dt_prox_geracao_w
				where	nr_sequencia = nr_sequencia_p;
				commit;
			exception when others then
				CALL gravar_log_tasy(10007,
					substr('MEDIC dt_proxima_dose_w > dt_inicio_base_w+1d e nr_prescricao_orig_w is null, UPDATE dt_prox_geracao :'
											||'//dt_proxima_dose_w : ' || to_char(dt_proxima_dose_w,'dd/mm/yyyy hh24:mi:ss')
											||' dt_proxima_dose_new : ' || to_char(trunc(dt_proxima_dose_w,'hh24') - (nr_horas_prox_geracao_w/24),'dd/mm/yyyy hh24:mi:ss')
											||' dt_inicio_base_w : ' || to_char(dt_inicio_base_w,'dd/mm/yyyy hh24:mi:ss')
											||' nr_prescricao_p : ' || nr_prescricao_p
											||' nr_seq_mat_cpoe_w :' || nr_sequencia_p
											||' cd_perfil_p: ' || cd_perfil_p,1,2000),
							nm_usuario_p);
			end;

			goto proximo_item;
		else
      --- Inicio MD9 Criar uma rotina especifica para isso
      begin
        EXEC_W := 'CALL OBTER_DT_PROX_GER_CPOE_MD(:1,:2) INTO :RESULT';

        EXECUTE EXEC_W USING IN dt_inicio_base_w,
                                       IN dt_proxima_dose_w,
                                       OUT dt_prox_geracao_w;
      exception
        when others then
      ds_erro_w := sqlerrm;
      ds_parametros_w := ('nr_atendimento_p: '||nr_atendimento_p||'-'||'nr_prescricao_p: '||nr_prescricao_p||'-'||'nr_sequencia_p: '||nr_sequencia_p||'-'||
                          'dt_inicio_base_w: '||dt_inicio_base_w||'-'||'dt_proxima_dose_w: '||dt_proxima_dose_w||'-'||'dt_prox_geracao_w: '||dt_prox_geracao_w);

      CALL gravar_log_medical_device('cpoe_insert_medic_reg','OBTER_DT_PROX_GER_CPOE_MD'
                                 ,ds_parametros_w,substr(ds_erro_w, 4000),nm_usuario_p,'S');
        
          dt_prox_geracao_w := null;
      end;

			ie_administrar_w	:= 'N';

			select	coalesce(max('S'),'N')
			into STRICT	ie_administrar_w
			from	prescr_material item
			where	item.nr_prescricao = nr_prescricao_orig_w
			and		item.nr_sequencia = nr_sequencia_orig_w
			and		coalesce(item.ie_administrar,'N') = 'N'
			and		exists (	SELECT	1
							from	prescr_mat_hor horario
							where	horario.nr_prescricao = item.nr_prescricao
							and		horario.nr_seq_material = item.nr_sequencia
							and		horario.dt_horario = dt_inicio_w
							);

			if (ie_administrar_w = 'S') then
				begin
					update	cpoe_material
					set		dt_prox_geracao = dt_prox_geracao_w
					where	nr_sequencia = nr_sequencia_p;
					commit;
				exception when others then
				CALL gravar_log_tasy(10007,
					substr('MEDIC dt_proxima_dose_w > dt_inicio_base_w+1d e ie_administrar_w=''S'', UPDATE dt_prox_geracao :'
											||'//dt_proxima_dose_w : ' || to_char(dt_proxima_dose_w,'dd/mm/yyyy hh24:mi:ss')
											||' dt_prox_geracao_w : ' || to_char(dt_prox_geracao_w,'dd/mm/yyyy hh24:mi:ss')
											||' dt_inicio_base_w : ' || to_char(dt_inicio_base_w,'dd/mm/yyyy hh24:mi:ss')
											||' dt_inicio_w : ' || to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')
											||' nr_prescricao_orig_w : ' || nr_prescricao_orig_w
											||' nr_sequencia_orig_w : ' || nr_sequencia_orig_w
											||' nr_prescricao_p : ' || nr_prescricao_p
											||' nr_seq_mat_cpoe_w :' || nr_sequencia_p
											||' cd_perfil_p: ' || cd_perfil_p,1,2000),
							nm_usuario_p);
				end;

				goto proximo_item;
			end if;
		end if;
		end;
	else
		dt_proxima_dose_w	:= null;
	end if;

	-- Se o inicio do item for apos a data de fim, definida para o mesmo, este item nao deve ser mais copiado.
  --- Inicio MD10 criar rotina para o if
  begin
    EXEC_W := 'CALL OBTER_SE_DT_FIM_CIH_CPOE_MD(:1,:2,:3) INTO :RESULT';

    EXECUTE EXEC_W USING IN dt_fim_cih_w,
                                   IN dt_fim_w,
                                   IN dt_inicio_w,
                                   OUT se_dt_fim_cih_w;
  exception
    when others then
      ds_erro_w := sqlerrm;
      ds_parametros_w := ('nr_atendimento_p: '||nr_atendimento_p||'-'||'nr_prescricao_p: '||nr_prescricao_p||'-'||'nr_sequencia_p: '||nr_sequencia_p||'-'||
                          'dt_fim_cih_w: '||dt_fim_cih_w||'-'||'dt_fim_w: '||dt_fim_w||'-'||'dt_inicio_w: '||dt_inicio_w||'-'||'se_dt_fim_cih_w: '||se_dt_fim_cih_w);

      CALL gravar_log_medical_device('cpoe_insert_medic_reg','OBTER_SE_DT_FIM_CIH_CPOE_MD'
                                 ,ds_parametros_w,substr(ds_erro_w, 4000),nm_usuario_p,'S');
    
      se_dt_fim_cih_w := null;
  end;

	if (se_dt_fim_cih_w = 'S') then --- Inicio MD10 criar rotina para o if
		CALL gravar_log_tasy(10007,
			substr('MEDIC dt_fim_w <= dt_inicio_w :'
									||'//dt_inicio_base_w : ' || to_char(dt_inicio_base_w,'dd/mm/yyyy hh24:mi:ss')
									||' dt_inicio_w : ' || to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')
									||' dt_fim_w : ' || to_char(dt_fim_w,'dd/mm/yyyy hh24:mi:ss')
									||' nr_prescricao_p : ' || nr_prescricao_p
									||' nr_seq_mat_cpoe_w :' || nr_sequencia_p
									||' cd_perfil_p: ' || cd_perfil_p,1,2000),
					nm_usuario_p);

		goto proximo_item;
	end if;

	-- Retornar a maior data de inicio dos itens.
	if	((coalesce(dt_inicio_ret_p::text, '') = '') or (dt_inicio_w > dt_inicio_ret_p)) then
		dt_inicio_ret_p	:= dt_inicio_w;
	end if;

	-- Consulta de dias de utilizacao da medicacao
	select	coalesce(max(ie_dias_util_medic),'N'),
			coalesce(max(ie_controle_medico),0)
	into STRICT	ie_dias_util_medic_w,
			ie_controle_medico_ww
	from	material
	where	cd_material	= cd_material_w;


	begin
		if (ie_antibiotico_w = 'S') then

			SELECT * FROM cpoe_obter_nr_dias_util_cih(nr_seq_mat_cpoe_w, nr_atendimento_p, cd_pessoa_fisica_w, cd_material_w, dt_inicio_w, dt_fim_w, dt_fim_cih_w, dt_suspensao_w, dt_lib_suspensao_w, nr_seq_cpoe_anterior_w, nr_dia_util_aux_w, ie_tratamento_vig_w, qt_total_dias_lib_w) INTO STRICT nr_dia_util_aux_w, ie_tratamento_vig_w, qt_total_dias_lib_w;

			if (ie_copia_diaria_p = 'S') then

				select	coalesce(max('S'), 'N')
				into STRICT	ie_copia_w
				from	prescr_medica y,
					prescr_material z
				where	y.nr_prescricao = z.nr_prescricao
				and		y.nr_atendimento = nr_atendimento_p
				and		z.nr_seq_mat_cpoe = nr_sequencia_p;

				if (ie_copia_w = 'S') then
					nr_dia_util_w :=  nr_dia_util_w + 1;
					qt_dias_solicitado_w := null;
				end if;
			elsif (coalesce(ie_copia_diaria_p, 'N') = 'N' and coalesce(ie_reset_atb_w, 'N') <> 'S' and ie_tratamento_vig_w = 'S' and (nr_seq_cpoe_anterior_w IS NOT NULL AND nr_seq_cpoe_anterior_w::text <> '')) then
				if (qt_dias_liberado_w IS NOT NULL AND qt_dias_liberado_w::text <> '' AND dt_fim_cih_w IS NOT NULL AND dt_fim_cih_w::text <> '') then
					qt_total_dias_lib_w := qt_dias_liberado_w;
				end if;

				ds_observacao_ccih_w := cpoe_obter_observacao_cih(nr_sequencia_p, nr_seq_cpoe_anterior_w, cd_estabelecimento_p, obter_setor_atendimento(nr_atendimento_p), cd_perfil_p);
			end if;
		elsif (ie_controle_medico_ww = 0) and (coalesce(nr_seq_ataque_w,0) = 0) and (coalesce(nr_seq_adicional_w,0) = 0) and
		      ((coalesce(nr_seq_cpoe_anterior_w,0) = 0) or (ie_copia_diaria_p = 'S') or (ie_mudou_mat_w = 'S')) then

			if (ie_copia_diaria_p <> 'S') then
				if (ie_dias_util_medic_w = 'S') then
					nr_dia_util_w := 1;
				elsif (ie_dias_util_medic_w = 'O') then
					nr_dia_util_w := 0;
				end if;
			elsif ((ie_dias_util_medic_w = 'S') and (coalesce(nr_dia_util_w, 0) > 0)) or
				  ((ie_dias_util_medic_w = 'O') and (coalesce(nr_dia_util_w, -1) >= 0)) then
				nr_dia_util_w := nr_dia_util_w + 1;
			end if;

		end if;
	exception when others then
		ds_erro_w	:= substr(to_char(sqlerrm),1,2000);

		CALL gravar_log_tasy(10007,
			substr(obter_desc_expressao(289370) || obter_desc_expressao(330076) ||ds_erro_w
								||'STACK ' || dbms_utility.format_call_stack
								||'//nr_sequencia_p:'||nr_sequencia_p||'nr_prescricao_p:'||nr_prescricao_p
								||'nr_atendimento_p:'||nr_atendimento_p||'cd_estabelecimento_p'||cd_estabelecimento_p
								||'cd_perfil_p:'||cd_perfil_p||'nm_usuario_p : '||nm_usuario_p||'ie_origem_inf_p:'||ie_origem_inf_p
								||'dt_inicio_prescr_p :'||to_char(dt_inicio_prescr_p,'dd/mm/yyyy hh24:mi:ss')
								||'dt_inicio_ret_p :'||to_char(dt_inicio_ret_p,'dd/mm/yyyy hh24:mi:ss')
								||'cd_pessoa_fisica_p'||cd_pessoa_fisica_p,1,2000), nm_usuario_p);
	end;

	update	cpoe_material
	set		nr_dia_util = nr_dia_util_w,
			qt_total_dias_lib = CASE WHEN coalesce(ie_copia_diaria_p, 'N')='N' THEN  qt_total_dias_lib_w  ELSE qt_total_dias_lib END ,
			dt_prox_geracao = coalesce(dt_prox_geracao_w,dt_prox_geracao),
			ie_evento_unico = ie_evento_unico_w
	where	nr_sequencia = nr_sequencia_p;
	commit;

	ie_se_necessario_w	:= 'N';
	ie_acm_w			:= 'N';

	if (ie_administracao_w = 'N') then
		ie_se_necessario_w	:= 'S';
		ie_acm_w			:= 'N';
		ds_horarios_w		:= 'SN';
		ie_urgencia_w		:= null;
		if ((coalesce(nr_seq_ataque_w,0) = 0) and (coalesce(nr_seq_adicional_w,0) = 0)) then
			hr_prim_horario_w := null;
		end if;
	elsif (ie_administracao_w = 'C') then
		ie_se_necessario_w	:= 'N';
		ie_acm_w			:= 'S';
		ds_horarios_w		:= 'ACM';
		ie_urgencia_w		:= null;
		if ((coalesce(nr_seq_ataque_w,0) = 0) and (coalesce(nr_seq_adicional_w,0) = 0)) then
			hr_prim_horario_w := null;
		end if;
	end if;

	qt_dia_prim_hor_w	:= trunc(dt_inicio_w) - trunc(dt_inicio_prescr_p);
	if (qt_dia_prim_hor_w < 0) then
		qt_dia_prim_hor_w	:= 0;
	end if;

	if (cd_mat_comp1_w IS NOT NULL AND cd_mat_comp1_w::text <> '') or (cd_mat_comp2_w IS NOT NULL AND cd_mat_comp2_w::text <> '') or (cd_mat_comp3_w IS NOT NULL AND cd_mat_comp3_w::text <> '') or (cd_mat_comp4_w IS NOT NULL AND cd_mat_comp4_w::text <> '') or (cd_mat_comp5_w IS NOT NULL AND cd_mat_comp5_w::text <> '') or (cd_mat_comp6_w IS NOT NULL AND cd_mat_comp6_w::text <> '') or (cd_mat_comp7_w IS NOT NULL AND cd_mat_comp7_w::text <> '') then
		ie_item_superior_w := 'S';
	end if;

	begin
		gerar_item_medicacao( cd_material_w, cd_unidade_medida_dose_w, qt_dose_w, ds_dose_diferenciada_w, qt_solucao_w, 1, null, 'S',
						nr_prescricao_orig_w, nr_sequencia_orig_w, coalesce(ie_item_superior_w,'N'), obter_observacao_interacao(nr_sequencia_p, 'MAT'), qt_dose_correcao1_w,
						qt_dias_tratamento_w, qt_dose_diaria_w, ie_medicacao_paciente_w);
	exception when others then
		CALL gravar_log_tasy(10007,
				substr('MEDIC gerar_item_medicacao PRINC Erro:' || substr(to_char(sqlerrm),1,2000)
										   ||'STACK ' || dbms_utility.format_call_stack
										   ||'//nr_sequencia_orig_w : ' 	|| nr_sequencia_orig_w
										   ||'nr_prescricao_orig_w:'	    || nr_prescricao_orig_w
										   ||'dt_inicio_prescr_p:'	    	|| to_char(dt_inicio_prescr_p,'dd/mm/yyyy hh24:mi:ss')
										   ||'cd_material_w:'	    		|| cd_material_w
										   ||'cd_unidade_medida_dose_w:'	|| cd_unidade_medida_dose_w
										   ||'qt_dose_w:'					|| qt_dose_w
										   ||'ds_dose_diferenciada_w:'		|| ds_dose_diferenciada_w
										   ||'qt_solucao_w:'				|| qt_solucao_w,1,2000), nm_usuario_p);
	end;


	begin
		CALL cpoe_gerar_albumina_medic(nr_seq_mat_cpoe_w, nr_seq_prescricao_w, nr_prescricao_p, nm_usuario_p, cd_perfil_p);
	exception when others then
		CALL gravar_log_tasy(10007,substr('MEDIC cpoe_gerar_albumina_medic Erro:'
									|| substr(to_char(sqlerrm),1,2000)
									||'STACK ' || dbms_utility.format_call_stack
									||'//nr_seq_mat_cpoe_w : ' 			|| nr_seq_mat_cpoe_w
									||'nr_seq_prescricao_w:'	|| nr_seq_prescricao_w
									||'nr_prescricao_w:'	    		|| nr_prescricao_w
									||'cd_perfil_p:'|| cd_perfil_p,1,2000), nm_usuario_p);
	end;

	if (nr_seq_prescricao_w IS NOT NULL AND nr_seq_prescricao_w::text <> '') and (cd_unidade_medida_dose_w IS NOT NULL AND cd_unidade_medida_dose_w::text <> '') and (ie_origem_inf_p IS NOT NULL AND ie_origem_inf_p::text <> '') then
		nr_seq_medic_princ_w	:= nr_seq_prescricao_w;

		begin
			if (cd_mat_dil_w IS NOT NULL AND cd_mat_dil_w::text <> '') then
				select	max(a.ie_gerar_lote),
						max(a.cd_motivo_baixa)
				into STRICT	ie_gerar_lote_w,
						cd_motivo_baixa_w
				from	material_diluicao a
				where	a.nr_seq_interno = nr_seq_mat_diluicao_w;

				gerar_item_medicacao(	cd_material_p				=> cd_mat_dil_w,
										cd_unidade_medida_dose_p	=> cd_unid_med_dose_dil_w,
										qt_dose_p					=> coalesce(qt_dose_dil_w,0),
										ds_dose_diferenciada_p		=> ds_dose_diferenciada_dil_w,
										qt_solucao_p				=> qt_solucao_dil_w,
										ie_agrupador_p				=> 3,
										nr_seq_diluicao_p			=> nr_seq_medic_princ_w,
										ie_checar_adep_p			=> 'S',
										nr_prescricao_orig_p		=> null,
										nr_sequencia_orig_p			=> null,
										ie_item_superior_p			=> null,
										ds_observacao_p				=> null,
										qt_dose_correcao_p			=> coalesce(qt_vol_dil_corrigido_w, qt_dil_correcao_w),
										qt_dias_tratamento_p		=> null,
										qt_dose_diaria_p			=> null,
										ie_medicacao_pac_w			=> null,
										nr_seq_mat_diluicao_p		=> nr_seq_mat_diluicao_w,
										ie_gerar_lote_p				=> ie_gerar_lote_w,
										cd_motivo_baixa_p			=> cd_motivo_baixa_w
										);
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao DIL Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_dil_w : ' 			|| cd_mat_dil_w
											   ||'cd_unid_med_dose_dil_w:'	    || cd_unid_med_dose_dil_w
											   ||'qt_dose_dil_w:'	    		|| qt_dose_dil_w
											   ||'ds_dose_diferenciada_dil_w:'	|| ds_dose_diferenciada_dil_w
											   ||'qt_solucao_dil_w:'			|| qt_solucao_dil_w
											   ||'nr_seq_medic_princ_w:'		|| nr_seq_medic_princ_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_recons_w IS NOT NULL AND cd_mat_recons_w::text <> '') then
				select	max(a.ie_gerar_lote),
						max(a.cd_motivo_baixa)
				into STRICT	ie_gerar_lote_w,
						cd_motivo_baixa_w
				from	material_diluicao a
				where	a.nr_seq_interno = nr_seq_mat_reconst_w;

				gerar_item_medicacao(	cd_material_p				=> cd_mat_recons_w,
										cd_unidade_medida_dose_p	=> cd_unid_med_dose_recons_w,
										qt_dose_p					=> qt_dose_recons_w,
										ds_dose_diferenciada_p		=> null,
										qt_solucao_p				=> null,
										ie_agrupador_p				=> 9,
										nr_seq_diluicao_p			=> nr_seq_medic_princ_w,
										ie_checar_adep_p			=> 'S',
										ie_gerar_lote_p				=> ie_gerar_lote_w,
										cd_motivo_baixa_p			=> cd_motivo_baixa_w,
										qt_dose_correcao_p			=> qt_vol_rec_corrigido_w);
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao RECONS Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_recons_w : ' 			|| cd_mat_recons_w
											   ||'cd_unid_med_dose_recons_w:'	    || cd_unid_med_dose_recons_w
											   ||'qt_dose_recons_w:'	    		|| qt_dose_recons_w
											   ||'nr_seq_medic_princ_w:'			|| nr_seq_medic_princ_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_red_w IS NOT NULL AND cd_mat_red_w::text <> '') then
				gerar_item_medicacao( cd_mat_red_w, cd_unid_med_dose_red_w, qt_dose_red_w, ds_dose_diferenciada_red_w, qt_solucao_red_w, 7, nr_seq_medic_princ_w, 'S', null, null, null, null, qt_vol_red_corrigido_w);
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao REDIL Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_red_w : ' 			|| cd_mat_red_w
											   ||'cd_unid_med_dose_red_w:'	    || cd_unid_med_dose_red_w
											   ||'qt_dose_red_w:'	    		|| qt_dose_red_w
											   ||'ds_dose_diferenciada_red_w:'	|| ds_dose_diferenciada_red_w
											   ||'qt_solucao_red_w:'			|| qt_solucao_red_w
											   ||'nr_seq_medic_princ_w:'		|| nr_seq_medic_princ_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_comp1_w IS NOT NULL AND cd_mat_comp1_w::text <> '') then
				gerar_item_medicacao( cd_mat_comp1_w, cd_unid_med_dose_comp1_w, qt_dose_comp1_w, ds_dose_diferenciada_comp1_w, null, 1, null, 'N',null,null,
								null,obter_observacao_interacao(nr_sequencia_p, 'MCOMP1'), qt_dose_correcao2_w, qt_dias_tratamento1_w, qt_dose_diaria1_w, ie_paciente_comp1_w);
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao COMP1 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_comp1_w : ' 			|| cd_mat_comp1_w
											   ||'cd_unid_med_dose_comp1_w:'	|| cd_unid_med_dose_comp1_w
											   ||'qt_dose_comp1_w:'	    		|| qt_dose_comp1_w
											   ||'ds_dose_diferenciada_comp1_w:'|| ds_dose_diferenciada_comp1_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_recons1_w IS NOT NULL AND cd_mat_recons1_w::text <> '') then
				gerar_item_medicacao(cd_mat_recons1_w, cd_unid_med_dose_recons1_w, qt_dose_recons1_w, ds_dose_diferenciada_rec1_w, null, 9, nr_seq_prescricao_w, 'N');
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao RECONS1 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_recons1_w: ' 			|| cd_mat_recons1_w
											   ||'cd_unid_med_dose_recons1_w:'	    || cd_unid_med_dose_recons1_w
											   ||'qt_dose_recons1_w:'	    		|| qt_dose_recons1_w
											   ||'nr_seq_prescricao_w:'				|| nr_seq_prescricao_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_comp2_w IS NOT NULL AND cd_mat_comp2_w::text <> '') then
				gerar_item_medicacao( cd_mat_comp2_w, cd_unid_med_dose_comp2_w, qt_dose_comp2_w, ds_dose_diferenciada_comp2_w, null, 1, null, 'N',null,null,
							null, obter_observacao_interacao(nr_sequencia_p, 'MCOMP2'),qt_dose_correcao3_w, qt_dias_tratamento2_w, qt_dose_diaria2_w, ie_paciente_comp2_w);
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao COMP2 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_comp2_w : ' 			|| cd_mat_comp2_w
											   ||'cd_unid_med_dose_comp2_w:'	|| cd_unid_med_dose_comp2_w
											   ||'qt_dose_comp2_w:'	    		|| qt_dose_comp2_w
											   ||'ds_dose_diferenciada_comp2_w:'|| ds_dose_diferenciada_comp2_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_recons2_w IS NOT NULL AND cd_mat_recons2_w::text <> '') then
				gerar_item_medicacao(cd_mat_recons2_w, cd_unid_med_dose_recons2_w, qt_dose_recons2_w, ds_dose_diferenciada_rec2_w, null, 9, nr_seq_prescricao_w, 'N');
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao RECONS2 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_recons2_w: ' 			|| cd_mat_recons2_w
											   ||'cd_unid_med_dose_recons2_w:'	    || cd_unid_med_dose_recons2_w
											   ||'qt_dose_recons2_w:'	    		|| qt_dose_recons2_w
											   ||'nr_seq_prescricao_w:'				|| nr_seq_prescricao_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_comp3_w IS NOT NULL AND cd_mat_comp3_w::text <> '') then
				gerar_item_medicacao( cd_mat_comp3_w, cd_unid_med_dose_comp3_w, qt_dose_comp3_w, ds_dose_diferenciada_comp3_w, null, 1, null, 'N',null,null,
								null, obter_observacao_interacao(nr_sequencia_p, 'MCOMP3'),qt_dose_correcao4_w, qt_dias_tratamento3_w, qt_dose_diaria3_w, ie_paciente_comp3_w);
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao COMP3 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_comp3_w : ' 			|| cd_mat_comp3_w
											   ||'cd_unid_med_dose_comp3_w:'	|| cd_unid_med_dose_comp3_w
											   ||'qt_dose_comp3_w:'	    		|| qt_dose_comp3_w
											   ||'ds_dose_diferenciada_comp3_w:'|| ds_dose_diferenciada_comp3_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_recons3_w IS NOT NULL AND cd_mat_recons3_w::text <> '') then
				gerar_item_medicacao(cd_mat_recons3_w, cd_unid_med_dose_recons3_w, qt_dose_recons3_w, ds_dose_diferenciada_rec3_w, null, 9, nr_seq_prescricao_w, 'N');
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao RECONS3 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_recons3_w: ' 			|| cd_mat_recons3_w
											   ||'cd_unid_med_dose_recons3_w:'	    || cd_unid_med_dose_recons3_w
											   ||'qt_dose_recons3_w:'	    		|| qt_dose_recons3_w
											   ||'nr_seq_prescricao_w:'				|| nr_seq_prescricao_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_comp4_w IS NOT NULL AND cd_mat_comp4_w::text <> '') then
				gerar_item_medicacao( cd_mat_comp4_w, cd_unid_med_dose_comp4_w, qt_dose_comp4_w, ds_dose_diferenciada_comp4_w, null, 1, null, 'N',null,null,
								null, obter_observacao_interacao(nr_sequencia_p, 'MCOMP4'),qt_dose_correcao5_w, '', '', ie_paciente_comp4_w);
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao COMP4 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_comp4_w : ' 			|| cd_mat_comp4_w
											   ||'cd_unid_med_dose_comp4_w:'	|| cd_unid_med_dose_comp4_w
											   ||'qt_dose_comp4_w:'	    		|| qt_dose_comp4_w
											   ||'ds_dose_diferenciada_comp4_w:'|| ds_dose_diferenciada_comp4_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_recons4_w IS NOT NULL AND cd_mat_recons4_w::text <> '') then
				gerar_item_medicacao(cd_mat_recons4_w, cd_unid_med_dose_recons4_w, qt_dose_recons4_w, ds_dose_diferenciada_rec4_w, null, 9, nr_seq_prescricao_w, 'N');
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao RECONS4 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_recons4_w: ' 			|| cd_mat_recons4_w
											   ||'cd_unid_med_dose_recons4_w:'	    || cd_unid_med_dose_recons4_w
											   ||'qt_dose_recons4_w:'	    		|| qt_dose_recons4_w
											   ||'nr_seq_prescricao_w:'				|| nr_seq_prescricao_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_comp5_w IS NOT NULL AND cd_mat_comp5_w::text <> '') then
				gerar_item_medicacao( cd_mat_comp5_w, cd_unid_med_dose_comp5_w, qt_dose_comp5_w, ds_dose_diferenciada_comp5_w, null, 1, null, 'N',null,null,
								null, obter_observacao_interacao(nr_sequencia_p, 'MCOMP5'),qt_dose_correcao6_w, '', '', ie_paciente_comp5_w);
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao COMP5 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_comp5_w : ' 			|| cd_mat_comp5_w
											   ||'cd_unid_med_dose_comp5_w:'	|| cd_unid_med_dose_comp5_w
											   ||'qt_dose_comp5_w:'	    		|| qt_dose_comp5_w
											   ||'ds_dose_diferenciada_comp5_w:'|| ds_dose_diferenciada_comp5_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_recons5_w IS NOT NULL AND cd_mat_recons5_w::text <> '') then
				gerar_item_medicacao(cd_mat_recons5_w, cd_unid_med_dose_recons5_w, qt_dose_recons5_w, ds_dose_diferenciada_rec5_w, null, 9, nr_seq_prescricao_w, 'N');
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao RECONS5 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_recons5_w: ' 			|| cd_mat_recons5_w
											   ||'cd_unid_med_dose_recons5_w:'	    || cd_unid_med_dose_recons5_w
											   ||'qt_dose_recons5_w:'	    		|| qt_dose_recons5_w
											   ||'nr_seq_prescricao_w:'				|| nr_seq_prescricao_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_comp6_w IS NOT NULL AND cd_mat_comp6_w::text <> '') then
				gerar_item_medicacao( cd_mat_comp6_w, cd_unid_med_dose_comp6_w, qt_dose_comp6_w, ds_dose_diferenciada_comp6_w, null, 1, null, 'N',null,null,
								null, obter_observacao_interacao(nr_sequencia_p, 'MCOMP6'),qt_dose_correcao7_w, '', '', ie_paciente_comp6_w);
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao COMP6 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_comp6_w : ' 			|| cd_mat_comp6_w
											   ||'cd_unid_med_dose_comp6_w:'	|| cd_unid_med_dose_comp6_w
											   ||'qt_dose_comp6_w:'	    		|| qt_dose_comp6_w
											   ||'ds_dose_diferenciada_comp6_w:'|| ds_dose_diferenciada_comp6_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_recons6_w IS NOT NULL AND cd_mat_recons6_w::text <> '') then
				gerar_item_medicacao(cd_mat_recons6_w, cd_unid_med_dose_recons6_w, qt_dose_recons6_w, ds_dose_diferenciada_rec6_w, null, 9, nr_seq_prescricao_w, 'N');
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao RECONS6 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_recons6_w: ' 			|| cd_mat_recons6_w
											   ||'cd_unid_med_dose_recons6_w:'	    || cd_unid_med_dose_recons6_w
											   ||'qt_dose_recons6_w:'	    		|| qt_dose_recons6_w
											   ||'nr_seq_prescricao_w:'				|| nr_seq_prescricao_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_comp7_w IS NOT NULL AND cd_mat_comp7_w::text <> '') then
				gerar_item_medicacao( cd_mat_comp7_w, cd_unid_med_dose_comp7_w, qt_dose_comp7_w, ds_dose_diferenciada_comp7_w, null, 1, null, 'N',null,null,
								null, obter_observacao_interacao(nr_sequencia_p, 'MCOMP6'),qt_dose_correcao8_w, '', '', ie_paciente_comp7_w);
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao COMP7 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_comp7_w : ' 			|| cd_mat_comp7_w
											   ||'cd_unid_med_dose_comp7_w:'	|| cd_unid_med_dose_comp7_w
											   ||'qt_dose_comp7_w:'	    		|| qt_dose_comp7_w
											   ||'ds_dose_diferenciada_comp7_w:'|| ds_dose_diferenciada_comp7_w,1,2000),
							nm_usuario_p);
		end;

		begin
			if (cd_mat_recons7_w IS NOT NULL AND cd_mat_recons7_w::text <> '') then
				gerar_item_medicacao(cd_mat_recons7_w, cd_unid_med_dose_recons7_w, qt_dose_recons7_w, ds_dose_diferenciada_rec7_w, null, 9, nr_seq_prescricao_w, 'N');
			end if;
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC gerar_item_medicacao RECONS7 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//cd_mat_recons7_w: ' 			|| cd_mat_recons7_w
											   ||'cd_unid_med_dose_recons7_w:'	    || cd_unid_med_dose_recons7_w
											   ||'qt_dose_recons7_w:'	    		|| qt_dose_recons7_w
											   ||'nr_seq_prescricao_w:'				|| nr_seq_prescricao_w,1,2000),
							nm_usuario_p);
		end;

		begin
			CALL ajustar_prescr_material( nr_prescricao_p, nr_seq_medic_princ_w);
			CALL ajustar_itens_compostos( nr_prescricao_p, nr_seq_medic_princ_w, nm_usuario_p);
			CALL gerar_prescr_mat_diluicao( nr_prescricao_p, nr_seq_medic_princ_w,nm_usuario_p,cd_perfil_p);
			--calcular_vol_dil_afterpost( nr_prescricao_p, nm_usuario_p);
			/*atualizar_tempo_aplic_medic( nr_prescricao_p, nr_seq_medic_princ_w);  -- Removido, pois a CPOE ja faz esta consulta e no caso de edicao esta sobreescrvendo o valor*/

			CALL atualiza_reconst_diluicao( nr_prescricao_p, nr_seq_medic_princ_w);
		exception when others then
		CALL gravar_log_tasy(10007,
					substr('MEDIC exception line 1060 Erro:' || substr(to_char(sqlerrm),1,2000)
											   ||'STACK ' || dbms_utility.format_call_stack
											   ||'//nr_prescricao_p : ' 		|| nr_prescricao_p
											   ||'nr_seq_medic_princ_w:'		|| nr_seq_medic_princ_w
											   ||'nm_usuario_p:'	    		|| nm_usuario_p
											   ||'cd_perfil_p:'					|| cd_perfil_p,1,2000),
							nm_usuario_p);
		end;
		commit;
	end if;

	<<proximo_item>>
	null;
	end;
end loop;
close c001;
exception when others then
	ds_erro_w	:= substr(to_char(sqlerrm),1,2000);

	CALL gravar_log_tasy(10007,
					substr(/*'Erro'*/
 obter_desc_expressao(289370) || obter_desc_expressao(330076)/*'Medicamnto:'*/||ds_erro_w
										||'STACK ' || dbms_utility.format_call_stack
										||'//nr_sequencia_p:'||nr_sequencia_p||'nr_prescricao_p:'||nr_prescricao_p
									    ||'nr_atendimento_p:'||nr_atendimento_p||'cd_estabelecimento_p'||cd_estabelecimento_p
									    ||'cd_perfil_p:'||cd_perfil_p||'nm_usuario_p : '||nm_usuario_p||'ie_origem_inf_p:'||ie_origem_inf_p
									    ||'dt_inicio_prescr_p :'||to_char(dt_inicio_prescr_p,'dd/mm/yyyy hh24:mi:ss')
									    ||'dt_inicio_ret_p :'||to_char(dt_inicio_ret_p,'dd/mm/yyyy hh24:mi:ss')
										||'cd_pessoa_fisica_p'||cd_pessoa_fisica_p,1,2000),
					nm_usuario_p);
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_insert_medic_reg (( nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_prescricao_p prescr_medica.nr_prescricao%type, nr_sequencia_p cpoe_material.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type, ie_origem_inf_p text, dt_inicio_prescr_p timestamp, dt_inicio_ret_p out timestamp, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type default null, ie_copia_diaria_p char default 'N', ie_disp_semanal_p char default 'N') is type tcursor REFCURSOR) FROM PUBLIC;

