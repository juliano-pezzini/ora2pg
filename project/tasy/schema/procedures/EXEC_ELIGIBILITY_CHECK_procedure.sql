-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE exec_eligibility_check ( nr_seq_authorization_p bigint) AS $body$
DECLARE

  ie_exists_oec_w      integer;
  cd_interface_w       smallint;
  ds_param_integ_hl7_w varchar(255);
  cd_procedure_w       varchar(15);
  cd_illness_w         varchar(15);
  nr_convenio_tipo_w   smallint;


BEGIN
  -- checking if this authorization has an OEC
	select a.procedure_code,
		   a.illness_code
	into STRICT   cd_procedure_w,
		   cd_illness_w
	from   BFT_INSURANCE_AUTH_PROC_V a
	where a.authorization_id = nr_seq_authorization_p;


	select obter_tipo_convenio(a.cd_convenio)
	into STRICT nr_convenio_tipo_w
	from autorizacao_convenio a
	where a.nr_sequencia = nr_seq_authorization_p;

  if (nr_convenio_tipo_w in (12,13)) and
		(cd_procedure_w IS NOT NULL AND cd_procedure_w::text <> '') then

	select coalesce(max(1),0)

	into STRICT ie_exists_oec_w

	from autorizacao_convenio_compl

	where nr_sequencia_autor = nr_seq_authorization_p

	and (nr_documento IS NOT NULL AND nr_documento::text <> '');

	if (ie_exists_oec_w      = 1) then

		cd_interface_w        := 2; -- has OEC, execute the event for create invoice and  OEC
	else

		cd_interface_w := 1; -- does not has OEC, execute the event for create appointment, invoice and OEC
    end if;

	ds_param_integ_hl7_w := '{"NR_SEQUENCE" : "' || nr_seq_authorization_p || '"'|| '}';

	CALL execute_bifrost_integration(cd_interface_w,ds_param_integ_hl7_w);

  end if;

  if (nr_convenio_tipo_w not in (12,13))

	  and ((cd_procedure_w IS NOT NULL AND cd_procedure_w::text <> '') or (cd_illness_w IS NOT NULL AND cd_illness_w::text <> '')) then

		ds_param_integ_hl7_w := '{"NR_SEQUENCE" : "' || nr_seq_authorization_p || '"'|| '}';

		CALL execute_bifrost_integration(200,ds_param_integ_hl7_w); -- eligibility check fund
  end if;

  update autorizacao_convenio

  set dt_envio       = clock_timestamp()

  where nr_sequencia = nr_seq_authorization_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE exec_eligibility_check ( nr_seq_authorization_p bigint) FROM PUBLIC;

