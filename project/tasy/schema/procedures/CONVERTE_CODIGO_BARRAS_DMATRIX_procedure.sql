-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE converte_codigo_barras_dmatrix ( cd_mat_barra_p text, cd_estabelecimento_p bigint, ie_retorno_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/*Esta procedure decodifica os padrões GTIN e HBIC. Outros padrões ou variações destes podem não ser analisados corretamente.*/

/*Retorno
MAT	= Código do material do Tasy
01	= Código de Barras indicado na etiqueta (GTIN)
10	= Lote
17	= Data de validade com formatação dd/mm/yyyy
17S	= Data de validade sem formatação
713	= Registro Anvisa
*/
cd_mat_barra_w		varchar(4000);
ie_identificador_w		varchar(2);
IA_0			varchar(18);
ds_retorno_w		varchar(255);

cd_material_w		integer;
ie_achou_w		varchar(1);
dt_validade_ww		varchar(10);
dt_validade_w		varchar(10);
ds_lote_w		varchar(255);

pos_w			integer;

nr_registro_anvisa_w	material.nr_registro_anvisa%type;



BEGIN
cd_mat_barra_w	:= replace(replace(replace(replace(cd_mat_barra_p,'(01)','01'),'(17)','17'),'(10)','10'), '(713)', '713');

pos_w	:=	position('(99)' in cd_mat_barra_w)-1;

if (pos_w > 0) then
	cd_mat_barra_w	:= substr(cd_mat_barra_w, 1, pos_w);
end if;

ie_identificador_w	:= substr(cd_mat_barra_w, 1,2);

select	CASE WHEN ie_identificador_w='00' THEN 	substr(cd_mat_barra_w, position(ie_identificador_w in cd_mat_barra_w) + 2,18) WHEN ie_identificador_w='01' THEN 	substr(cd_mat_barra_w, position(ie_identificador_w in cd_mat_barra_w) + 2,14) WHEN ie_identificador_w='02' THEN 	substr(cd_mat_barra_w, position(ie_identificador_w in cd_mat_barra_w) + 2,14) WHEN ie_identificador_w='XX' THEN 	'' END ,
	CASE WHEN ie_identificador_w='00' THEN 	substr(cd_mat_barra_w, 21, 4000) WHEN ie_identificador_w='01' THEN 	substr(cd_mat_barra_w, 17, 4000) WHEN ie_identificador_w='02' THEN 	substr(cd_mat_barra_w, 17, 4000) WHEN ie_identificador_w='XX' THEN 	substr(cd_mat_barra_w, 1, 4000) END /*Utilizado na nota fiscal, na pasta Identificação barras item*/
into STRICT	IA_0,
	cd_mat_barra_w
;

if (coalesce(IA_0::text, '') = '') then --Tratamento específico para o padrão HIBC (Health Industy Bar Code) em pacotes unitários.
	begin
	cd_mat_barra_w		:= cd_mat_barra_p;
	ie_identificador_w	:= substr(cd_mat_barra_w, 1,1);

	select	CASE WHEN ie_identificador_w='+' THEN 	substr(cd_mat_barra_w, 1, position(';' in cd_mat_barra_w) - 1)  ELSE '' END ,
		CASE WHEN ie_identificador_w='+' THEN 	substr(cd_mat_barra_w, position(';' in cd_mat_barra_w), 4000)  ELSE substr(cd_mat_barra_w, 1, 4000) END /*Utilizado na nota fiscal, na pasta Identificação barras item*/
	into STRICT	IA_0,
		cd_mat_barra_w
	;
	end;
end if;

if (ie_retorno_p = 'MAT') then
	select	coalesce(max(cd_material),0)
	into STRICT	cd_material_w
	from	material_cod_barra
	where	cd_barra_material	= IA_0;

	ds_retorno_w	:= substr(cd_material_w,1,255);


elsif (ie_retorno_p = '01') then
	ds_retorno_w	:= IA_0;

elsif	((ie_retorno_p = '17') or (ie_retorno_p = '10') or (ie_retorno_p = '713') or (ie_retorno_p = '17S')) then
	begin

	/*Rotina para identificar a data de validade dentro do Barras*/

	ie_achou_w	:= 'N';
	while ie_achou_w = 'N' loop
		if (position('17' in cd_mat_barra_w) > 0) then
			begin
			if (substr(cd_mat_barra_w, position('17' in cd_mat_barra_w) + 6, 1) = '-') then
				dt_validade_ww	:= substr(cd_mat_barra_w, position('17' in cd_mat_barra_w) + 2,7);
				dt_validade_w	:= '00' || '/' || substr(dt_validade_ww, 6,2) || '/' || substr(dt_validade_ww, 1,4);
				ie_achou_w	:= 'S';
			else
				dt_validade_ww	:= substr(cd_mat_barra_w, position('17' in cd_mat_barra_w) + 2, 6);
				dt_validade_w	:= substr(dt_validade_ww, 5,2) || '/' || substr(dt_validade_ww, 3,2) || '/20' || substr(dt_validade_ww, 1,2);
				ie_achou_w	:= 'S';
			end if;

			exception when others then
				--cd_mat_barra_w	:= replace(cd_mat_barra_w, dt_validade_ww, '');
				ie_achou_w	:= 'N';
			end;
		elsif (position(';' in cd_mat_barra_w) > 0) and (ie_identificador_w = '+') then
			begin
			dt_validade_ww	:= substr(cd_mat_barra_w, position(';' in cd_mat_barra_w) + 1,5);
			dt_validade_w	:= to_char(to_date('01/01/20' || substr(dt_validade_ww,1,2),'dd/mm/yyyy') + substr(dt_validade_ww,3,3) - 1,'dd/mm/yyyy');
			ie_achou_w	:= 'S';

			exception when others then
				ie_achou_w	:= 'S';
			end;
		else
			ie_achou_w	:= 'S';
		end if;
	end loop;
	--Ao final, retira a validade do codigo
	begin
	if (position('17' in cd_mat_barra_w) > 0) then
		cd_mat_barra_w	:= replace(cd_mat_barra_w, '17' || dt_validade_ww, '');
	elsif (position(';' in cd_mat_barra_w) > 0) and (ie_identificador_w = '+') then
		cd_mat_barra_w	:= replace(cd_mat_barra_w, ';' || dt_validade_ww, '');
	end if;

	exception when others then
		cd_mat_barra_w	:= replace(cd_mat_barra_w, '17' || dt_validade_ww, '');
	end;

	ie_achou_w	:= 'N';
	while ie_achou_w = 'N' loop
		if (position('713' in cd_mat_barra_w) > 0) then
			begin
			nr_registro_anvisa_w	:= substr(cd_mat_barra_w, position('713' in cd_mat_barra_w) + 3, 255);
			ie_achou_w	:= 'S';
			exception when others then
				ie_achou_w	:= 'N';
			end;
		elsif (position(';' in cd_mat_barra_p) > 0) and (ie_identificador_w = '+') then
			begin
			nr_registro_anvisa_w	:= substr(cd_mat_barra_w,1,length(cd_mat_barra_w) - 1);
			ie_achou_w	:= 'S';
			exception when others then
				ie_achou_w	:= 'N';
			end;
		else
			ie_achou_w	:= 'S';
		end if;
	end loop;

	begin
	if (position('713' in cd_mat_barra_w) > 0) then
		cd_mat_barra_w	:= replace(cd_mat_barra_w, '713' || nr_registro_anvisa_w, '');
	elsif (position(';' in cd_mat_barra_w) > 0) and (ie_identificador_w = '+') then
		cd_mat_barra_w	:= replace(cd_mat_barra_w, ';' || nr_registro_anvisa_w, '');
	end if;

	exception when others then
		cd_mat_barra_w	:= replace(cd_mat_barra_w, '713' || nr_registro_anvisa_w, '');
	end;

	/*Rotina para identificar o lote dentro do Barras*/

	ie_achou_w	:= 'N';
	while ie_achou_w = 'N' loop
		if (position('10' in cd_mat_barra_w) > 0) then
			begin
			ds_lote_w	:= substr(cd_mat_barra_w, position('10' in cd_mat_barra_w) + 2, 255);
			ie_achou_w	:= 'S';
			exception when others then
				ie_achou_w	:= 'N';
			end;
		elsif (position(';' in cd_mat_barra_p) > 0) and (ie_identificador_w = '+') then
			begin
			ds_lote_w	:= substr(cd_mat_barra_w,1,length(cd_mat_barra_w) - 1);
			ie_achou_w	:= 'S';
			exception when others then
				ie_achou_w	:= 'N';
			end;
		else
			ie_achou_w	:= 'S';
		end if;
	end loop;

	cd_mat_barra_w	:= replace(cd_mat_barra_w, '10' || ds_lote_w, '');

	if (ie_retorno_p in ('17','17S')) then
		begin
		if (substr(dt_validade_w,1,2) = '00') then /*Se for dia 00*/
			ds_retorno_w	:= to_char(last_day(to_date('01' || substr(dt_validade_w,3,255),'dd/mm/yyyy')),'dd/mm/yyyy');
		else
			ds_retorno_w	:= dt_validade_w;
		end if;

		if (ie_retorno_p = '17S') then
			ds_retorno_w	:=	to_char(to_date(ds_retorno_w,'dd/mm/yyyy'));
		end if;
		end;
	elsif (ie_retorno_p = '10') then
		ds_retorno_w	:= ds_lote_w;
	elsif (ie_retorno_p = '713') then
		ds_retorno_w	:= nr_registro_anvisa_w;
	end if;
	end;
end if;

ds_retorno_p	:= substr(ds_retorno_w,1,255);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE converte_codigo_barras_dmatrix ( cd_mat_barra_p text, cd_estabelecimento_p bigint, ie_retorno_p text, ds_retorno_p INOUT text) FROM PUBLIC;

