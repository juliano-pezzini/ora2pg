-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_reinf_2040 ( nm_usuario_p text, nr_seq_superior_p bigint, nr_titulo_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

					
 ds_observacao_w         fis_reinf_tit_r2040.ds_observacao%type;
 vl_titulo_w             fis_reinf_tit_r2040.vl_titulo%type;
 cd_estabelecimento_w    fis_reinf_tit_r2040.cd_estabelecimento%type;
 cd_cgc_w                pessoa_juridica.cd_cgc%type;
 ie_mesmo_estab_w        varchar(10);
 ie_situacao_w           varchar(10);
 nr_achou_titulo_w       varchar(10);
 dt_inicial_w		 fis_reinf_r2040.DT_APURACAO%type;	
 dt_final_w		 fis_reinf_r2040.DT_APURACAO%type;
 ds_erro_w               varchar(4000) := '';
 vl_imposto_diminui_w	 titulo_pagar_imposto.vl_imposto%type;
 vl_adiant_w			titulo_pagar_adiant.vl_adiantamento%type;


BEGIN
	
select 	pkg_date_utils.start_of(a.DT_APURACAO, 'MONTH', 0) dt_inicial,
	pkg_date_utils.end_of(a.DT_APURACAO, 'MONTH', 0) dt_final	
into STRICT	dt_inicial_w,
	dt_final_w	
from	fis_reinf_r2040 a
where 	a.nr_sequencia = nr_seq_superior_p;

if (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (nr_seq_superior_p IS NOT NULL AND nr_seq_superior_p::text <> '') and (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then
	begin
	
	select cd_estabelecimento
	into STRICT cd_estabelecimento_w 
	from fis_reinf_r2040 fr
	where fr.nr_sequencia = nr_seq_superior_p;
	
	select substr(ds_observacao_titulo,1,255)
        into STRICT  ds_observacao_w	
      	from titulo_pagar tp 
	where tp.nr_titulo = nr_titulo_p;
	
	SELECT  coalesce(cd_cgc,'N')
	into STRICT    cd_cgc_w
        FROM   titulo_pagar
        WHERE  nr_titulo = nr_titulo_p;
	
	--O título #@nr_titulo#@ não pode ser inserido, não é de uma pessoa jurídica 	
	if (cd_cgc_w = 'N') then
	 ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(957393, 'NR_TITULO=' || nr_titulo_p);
	end if;			
			
    select coalesce(sum(vl_baixa), 0)
    into STRICT vl_titulo_w
    from titulo_pagar_baixa t
    where t.nr_titulo = nr_titulo_p
    and to_date(dt_baixa,'dd/mm/rrrr') between  to_date(pkg_date_utils.start_of(dt_inicial_w, 'MONTH', 0),'dd/mm/rrrr')   and to_date(pkg_date_utils.end_of(dt_final_w, 'MONTH', 0),'dd/mm/rrrr');

    select	coalesce(sum(vl_adiantamento),0)
    into STRICT 	vl_adiant_w
    from	titulo_pagar_adiant t
    where 	t.nr_titulo = nr_titulo_p
    and		to_date(dt_contabil,'dd/mm/rrrr') between  to_date(pkg_date_utils.start_of(dt_inicial_w, 'MONTH', 0),'dd/mm/rrrr')   and to_date(pkg_date_utils.end_of(dt_final_w, 'MONTH', 0),'dd/mm/rrrr');	

	vl_titulo_w	:= vl_titulo_w + vl_adiant_w;
	
	select 	sum(vl_imposto)
	into STRICT	vl_imposto_diminui_w
	from   	titulo_pagar_imposto a,
		tributo b
	where  	a.cd_tributo = b.cd_tributo
	and	b.ie_soma_diminui = 'D'
	and	a.nr_titulo = nr_titulo_p;
	
	if vl_imposto_diminui_w > 0 then
		vl_titulo_w := vl_titulo_w + vl_imposto_diminui_w;
	end if;
       	
	---O título #@#@  não possui pagamentos nesta competência, não pode ser inserido
	if (vl_titulo_w <= 0) or (coalesce(vl_titulo_w::text, '') = '') then	
	   ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(936297, 'NR_TITULO=' || nr_titulo_p);
	end if;			
	
	select	ie_situacao
	into STRICT    ie_situacao_w
        from	titulo_pagar
        where	nr_titulo = nr_titulo_p;
	
	--O título #@nr_titulo#@ não será inserido porque está cancelado!  
	if (ie_situacao_w = 'C') then
	  ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(936233, 'NR_TITULO=' || nr_titulo_p);
	end if;
		
	select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
        into STRICT 	ie_mesmo_estab_w
        from	titulo_pagar_v a,
                estabelecimento b
	where	a.nr_titulo		= nr_titulo_p
        and  	a.cd_estabelecimento  = b.cd_estabelecimento        
	and 	b.cd_cgc = (SELECT cd_cgc from estabelecimento where cd_estabelecimento = cd_estabelecimento_w);
        ---and	cd_estabelecimento	= cd_estabelecimento_w;

	
	--O título #@#@, não pertence ao estabelecimento do usuário.
	if (ie_mesmo_estab_w = 'N') then
	 ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(936265, 'NR_TITULO=' || nr_titulo_p);	
	end if;	
		
	SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
	into STRICT nr_achou_titulo_w
        FROM fis_reinf_tit_r2040
        WHERE nr_seq_superior = nr_seq_superior_p
        AND  nr_titulo = nr_titulo_p;
	
	--O título #@#@ não pode ser inserido , pois já está incluído nesse lote. 
	if (nr_achou_titulo_w = 'S') then
	   ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(936292, 'NR_TITULO=' || nr_titulo_p);	
	end if;
	
	
	    if (coalesce(ds_erro_w::text, '') = '') then
		insert into fis_reinf_tit_r2040(nr_sequencia, 
						cd_estabelecimento,
						dt_atualizacao, 
						nm_usuario, 				  
						nr_titulo, 
						nr_seq_superior, 
						ds_observacao, 
						vl_titulo,
						VL_RETENCAO)				   
		values (nextval('fis_reinf_tit_r2040_seq'), 
			 cd_estabelecimento_w,
			 clock_timestamp(),
			 nm_usuario_p,
			 nr_titulo_p,
			 nr_seq_superior_p,
			 ds_observacao_w,
			 vl_titulo_w,
			 0		 
			);
		
	commit;	
     end if;			
    end;	
end if;

ds_erro_p := ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_reinf_2040 ( nm_usuario_p text, nr_seq_superior_p bigint, nr_titulo_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

