-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_grau_de_parentesco2 ( CD_PESSOA_FISICA_P text, CD_PESSOA_FAMILIA_P text DEFAULT NULL, NR_SEQ_GRAU_PARENTESCO_P bigint DEFAULT 0, GRAU_PARENTESCO_INVERSO_P bigint DEFAULT 0, NM_USUARIO_P text DEFAULT NULL, CD_DOMICILIO_P bigint DEFAULT NULL, IE_OPERACAO_P text DEFAULT 'OTHER', INVERSO_MORADIA_P text DEFAULT 'OTHER') AS $body$
DECLARE


    EXISTE_RELACAO_W bigint:=0;
	c_pessoa_familia CURSOR FOR
      SELECT CD_PESSOA_FAMILIA, OBTER_NOME_PF(CD_PESSOA_FAMILIA), coalesce(IE_DESCONHECIDA,'N') DESCO FROM PF_FAMILIA WHERE CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
      EXCEPT
      SELECT CD_PESSOA_FAMILIA,  OBTER_NOME_PF(CD_PESSOA_FAMILIA), coalesce(IE_DESCONHECIDA,'N') DESCO FROM PF_FAMILIA WHERE CD_PESSOA_FISICA = CD_PESSOA_FAMILIA_P OR CD_PESSOA_FAMILIA = CD_PESSOA_FAMILIA_P;
    nr_vetor_w			bigint := 0;
    nr_seq_w_familia_w		pf_familia.nr_sequencia%type;
    type vetor_pf_familia is table of PF_FAMILIA%RowType index by integer;
    w_pf_familia_w	vetor_pf_familia;
    w_pf_familia_aux_w	vetor_pf_familia;


  Reg RECORD;

BEGIN

    IF (INVERSO_MORADIA_P = 'S') THEN
          CALL INSERIR_GRAU_MORADIA(CD_PESSOA_FISICA_P, CD_PESSOA_FAMILIA_P, NR_SEQ_GRAU_PARENTESCO_P, GRAU_PARENTESCO_INVERSO_P, NM_USUARIO_P, CD_DOMICILIO_P, IE_OPERACAO_P);
    END IF;

    IF (IE_OPERACAO_P = 'INSERT_FROM_MORADIA') THEN

          SELECT CASE WHEN coalesce(MAX(NR_SEQUENCIA)::text, '') = '' THEN '0'  ELSE MAX(NR_SEQUENCIA) END
          INTO STRICT EXISTE_RELACAO_W FROM PF_FAMILIA WHERE CD_PESSOA_FISICA = CD_PESSOA_FISICA_P AND  CD_PESSOA_FAMILIA = CD_PESSOA_FAMILIA_P;

            IF (EXISTE_RELACAO_W > 0 ) THEN
                UPDATE PF_FAMILIA SET NR_SEQ_GRAU_PARENTESCO = NR_SEQ_GRAU_PARENTESCO_P
                WHERE CD_PESSOA_FISICA = CD_PESSOA_FISICA_P AND  CD_PESSOA_FAMILIA = CD_PESSOA_FAMILIA_P;

            ELSE
                INSERT INTO PF_FAMILIA(NR_SEQUENCIA, DT_ATUALIZACAO, NM_USUARIO, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC, CD_PESSOA_FISICA, CD_PESSOA_FAMILIA, NR_SEQ_GRAU_PARENTESCO, IE_HABITACAO)
                VALUES (nextval('pf_familia_seq'), clock_timestamp(), NM_USUARIO_P, clock_timestamp(), NM_USUARIO_P, CD_PESSOA_FISICA_P, CD_PESSOA_FAMILIA_P, coalesce(NR_SEQ_GRAU_PARENTESCO_P,0), 'S');
           END IF;

    ELSIF (IE_OPERACAO_P = 'INSERT_CONVERSE') THEN
          
          SELECT CASE WHEN coalesce(MAX(NR_SEQUENCIA)::text, '') = '' THEN '0'  ELSE MAX(NR_SEQUENCIA) END 
          INTO STRICT EXISTE_RELACAO_W FROM PF_FAMILIA WHERE CD_PESSOA_FISICA = CD_PESSOA_FAMILIA_P AND  CD_PESSOA_FAMILIA = CD_PESSOA_FISICA_P;

            IF (EXISTE_RELACAO_W > 0 ) THEN
                UPDATE PF_FAMILIA SET NR_SEQ_GRAU_PARENTESCO = GRAU_PARENTESCO_INVERSO_P
                WHERE CD_PESSOA_FISICA = CD_PESSOA_FAMILIA_P AND  CD_PESSOA_FAMILIA = CD_PESSOA_FISICA_P;
            ELSE

                INSERT INTO PF_FAMILIA(NR_SEQUENCIA, DT_ATUALIZACAO, NM_USUARIO, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC, CD_PESSOA_FISICA, CD_PESSOA_FAMILIA, NR_SEQ_GRAU_PARENTESCO, IE_HABITACAO)
                VALUES (nextval('pf_familia_seq'), clock_timestamp(), NM_USUARIO_P, clock_timestamp(), NM_USUARIO_P, CD_PESSOA_FAMILIA_P, CD_PESSOA_FISICA_P, GRAU_PARENTESCO_INVERSO_P, 'S');

                BEGIN   
                    FOR REG IN c_pessoa_familia LOOP      
                    nr_vetor_w	:= 0;
                    select	nextval('pf_familia_seq')
                    into STRICT	nr_seq_w_familia_w
;
                    w_pf_familia_w[nr_vetor_w].NR_SEQUENCIA		:= nr_seq_w_familia_w;
                    w_pf_familia_w[nr_vetor_w].DT_ATUALIZACAO	:= clock_timestamp();
                    w_pf_familia_w[nr_vetor_w].NM_USUARIO		:= NM_USUARIO_P;
                    w_pf_familia_w[nr_vetor_w].DT_ATUALIZACAO_NREC		:= clock_timestamp();
                    w_pf_familia_w[nr_vetor_w].NM_USUARIO_NREC		:= NM_USUARIO_P;
                    w_pf_familia_w[nr_vetor_w].CD_PESSOA_FISICA	:= CD_PESSOA_FAMILIA_P;
                    w_pf_familia_w[nr_vetor_w].CD_PESSOA_FAMILIA		:= REG.CD_PESSOA_FAMILIA;
                    w_pf_familia_w[nr_vetor_w].NR_SEQ_GRAU_PARENTESCO		:=  '0';
                    w_pf_familia_w[nr_vetor_w].IE_HABITACAO		:= 'S';
                    forall m in w_pf_familia_w.first..w_pf_familia_w.last
                        INSERT INTO PF_FAMILIA
                        VALUES w_pf_familia_w(m);
                        
                    IF (REG.DESCO = 'N')THEN
                      select	nextval('pf_familia_seq')
                      into STRICT	nr_seq_w_familia_w
;
                      w_pf_familia_aux_w[nr_vetor_w].NR_SEQUENCIA		:= nr_seq_w_familia_w;
                      w_pf_familia_aux_w[nr_vetor_w].DT_ATUALIZACAO	:= clock_timestamp();
                      w_pf_familia_aux_w[nr_vetor_w].NM_USUARIO		:= NM_USUARIO_P;
                      w_pf_familia_aux_w[nr_vetor_w].DT_ATUALIZACAO_NREC		:= clock_timestamp();
                      w_pf_familia_aux_w[nr_vetor_w].NM_USUARIO_NREC		:= NM_USUARIO_P;
                      w_pf_familia_aux_w[nr_vetor_w].CD_PESSOA_FISICA	:= REG.CD_PESSOA_FAMILIA;
                      w_pf_familia_aux_w[nr_vetor_w].CD_PESSOA_FAMILIA		:= CD_PESSOA_FAMILIA_P;
                      w_pf_familia_aux_w[nr_vetor_w].NR_SEQ_GRAU_PARENTESCO		:=  '0';
                      w_pf_familia_aux_w[nr_vetor_w].IE_HABITACAO		:= 'S';
                      forall m in w_pf_familia_aux_w.first..w_pf_familia_aux_w.last
                      INSERT INTO PF_FAMILIA
                        VALUES w_pf_familia_aux_w(m);
                    END IF;
                    END LOOP;
                END;
            END IF;

    ELSIF IE_OPERACAO_P = 'INSERT_DOMICILIO_VINCULADO' THEN
        BEGIN   
              For Reg In (
                  SELECT DISTINCT CD_PESSOA_FISICA FROM PESSOA_DOMICILIO_MORADIA WHERE NR_SEQ_DOMICILIO = CD_DOMICILIO_P
                  AND NOT EXISTS (SELECT CD_PESSOA_FAMILIA FROM PF_FAMILIA WHERE CD_PESSOA_FISICA = CD_PESSOA_FISICA_P)
                ) LOOP      
                        INSERT INTO PF_FAMILIA(NR_SEQUENCIA, DT_ATUALIZACAO, NM_USUARIO, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC, CD_PESSOA_FISICA, CD_PESSOA_FAMILIA, NR_SEQ_GRAU_PARENTESCO, IE_HABITACAO)                    
                        VALUES (nextval('pf_familia_seq'),  clock_timestamp(),  NM_USUARIO_P,  clock_timestamp(),  NM_USUARIO_P,  CD_PESSOA_FISICA_P,  REG.CD_PESSOA_FISICA,  '0', 'S');
                        INSERT INTO PF_FAMILIA(NR_SEQUENCIA, DT_ATUALIZACAO, NM_USUARIO, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC, CD_PESSOA_FISICA, CD_PESSOA_FAMILIA, NR_SEQ_GRAU_PARENTESCO, IE_HABITACAO)
                        VALUES (nextval('pf_familia_seq'),  clock_timestamp(),  NM_USUARIO_P,  clock_timestamp(),  NM_USUARIO_P,  REG.CD_PESSOA_FISICA,  CD_PESSOA_FISICA_P,  '0', 'S');

                  END LOOP;
              END;
    ELSIF (IE_OPERACAO_P = 'DELETE') THEN
      SELECT CASE WHEN coalesce(MAX(NR_SEQ_GRAU_PARENTESCO)::text, '') = '' THEN '0'  ELSE MAX(NR_SEQ_GRAU_PARENTESCO) END NR_SEQ_GRAU_PARENTESCO INTO STRICT EXISTE_RELACAO_W FROM PF_FAMILIA WHERE CD_PESSOA_FISICA = CD_PESSOA_FISICA_P AND  CD_PESSOA_FAMILIA = CD_PESSOA_FAMILIA_P;
      IF (EXISTE_RELACAO_W > 0 ) THEN
          DELETE FROM PF_FAMILIA WHERE CD_PESSOA_FISICA = CD_PESSOA_FISICA_P AND CD_PESSOA_FAMILIA = CD_PESSOA_FAMILIA_P;
        COMMIT;
      END IF;
    End If;
End;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_grau_de_parentesco2 ( CD_PESSOA_FISICA_P text, CD_PESSOA_FAMILIA_P text DEFAULT NULL, NR_SEQ_GRAU_PARENTESCO_P bigint DEFAULT 0, GRAU_PARENTESCO_INVERSO_P bigint DEFAULT 0, NM_USUARIO_P text DEFAULT NULL, CD_DOMICILIO_P bigint DEFAULT NULL, IE_OPERACAO_P text DEFAULT 'OTHER', INVERSO_MORADIA_P text DEFAULT 'OTHER') FROM PUBLIC;

