-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_interf_j800_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


			

	
ds_longo_w			text;
cd_instit_resp_cadastro_w	varchar(4);
cd_instituicao_w		varchar(21);
ds_arquivo_w			varchar(4000);
ds_compl_arquivo_w		varchar(4000);
ds_linha_w			varchar(8000);
ie_gerar_w			varchar(1)	:= 'S';
nr_linha_w			bigint := qt_linha_p;
nr_seq_registro_w		bigint := nr_sequencia_p;
nr_sequencia_w			bigint;
sep_w				varchar(1) := '|';
tp_registro_w			varchar(15) := 'J800';
ds_documento_w			text;
ie_ult_documento_w		boolean;
cd_versao_w			ctb_regra_sped.cd_versao%type;


c01 CURSOR FOR
SELECT	a.nr_sequencia
from	ctb_demo_externo a
where  	a.cd_empresa = cd_empresa_p
and	dt_referencia between dt_inicio_p and dt_fim_p;


BEGIN

select 	coalesce(a.cd_versao, '9.0')
into STRICT	cd_versao_w
from	ctb_regra_sped a,
	ctb_sped_controle b
where	a.nr_sequencia	= b.nr_seq_regra_sped
and	b.nr_sequencia	= nr_seq_controle_p;


open C01;
loop
fetch C01 into	
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	ie_gerar_w	:= 'S';
	ie_ult_documento_w:= false;
	
	select	ds_documento
	into STRICT	ds_documento_w
	from	ctb_demo_externo a
	where	a.nr_sequencia	= nr_sequencia_w;
		
	begin
	select	a.ds_demonstrativo
	into STRICT	ds_longo_w
	from	ctb_demo_externo a
	where  	a.nr_sequencia	= nr_sequencia_w;
	exception when others then
		ie_gerar_w	:= 'N';
		
		if (ds_documento_w IS NOT NULL AND ds_documento_w::text <> '') then
			begin
			
			ie_ult_documento_w:= true;
			ie_gerar_w	:= 'S';
			
			end;
		end if;
	end;

		
	if (ie_gerar_w = 'S')
	and (coalesce(cd_versao_w::text, '') = '')	then
		
		if (ie_ult_documento_w) then
			begin
			ds_linha_w	:= substr(	sep_w || tp_registro_w 		||
							sep_w || ds_documento_w		|| 
							sep_w || 'J800FIM' 		|| sep_w,1,8000);
			end;
		else	
			begin
			ds_linha_w	:= substr(	sep_w || tp_registro_w 		||
							sep_w || ds_longo_w 		|| 
							sep_w || 'J800FIM' 		|| sep_w,1,8000);
			end;
		
		end if;

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;	
	
		insert into ctb_sped_registro(
			nr_sequencia,
			ds_arquivo,                     
			dt_atualizacao,                 
			nm_usuario,                     
			dt_atualizacao_nrec,            
			nm_usuario_nrec,                
			nr_seq_controle_sped,           
			ds_arquivo_compl,               
			cd_registro,
			nr_linha,
			ds_longo)
		values (	nr_seq_registro_w,
			ds_arquivo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_controle_p,
			ds_compl_arquivo_w,
			tp_registro_w,
			nr_linha_w,
			ds_longo_w);
	end if;
	
	end;
end loop;
close C01;

commit;
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_interf_j800_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

