-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_valor_regra ( cd_conta_financ_p bigint, nr_dia_fixo_p bigint, vl_fixo_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_acumular_fluxo_p text, cd_empresa_p bigint, nr_seq_regra_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_classif_fluxo_p text) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENÇÃO ----------------------------------------------------------------*/

/* Cuidado ao realizar alterações no fluxo de caixa. Toda e qualquer alteração realizada em qualquer uma das       */

/* procedures do fluxo de caixa deve ser cuidadosamente verificada e realizada no fluxo de caixa em lote.           */

/* Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando assim que           */

/* existam diferenças entre os fluxos de caixa.                                                                                                                */

/*--------------- AO ALTERAR O FLUXO DE CAIXA ALTERAR TAMBÉM O FLUXO DE CAIXA EM LOTE ---------------*/

ie_tratar_fim_semana_w          varchar(100);
ie_antecipar_dia_util_w         varchar(100);
ie_dia_fixo_w                   varchar(100);
ie_regra_data_w                 varchar(3);
vl_deducao_w                    double precision;
dt_referencia_w                 timestamp;
dt_mes_w                        timestamp;
dt_previsto_w                   timestamp;
vl_previsto_w                   double precision;
vl_fluxo_previsto_w             double precision;
vl_fluxo_maior_w		double precision;
qt_meses_valor_contrato_w       smallint;
vl_soma_dias_w			double precision;
cd_moeda_empresa_w		integer;

BEGIN

select  ie_tratar_fim_semana,
        coalesce(qt_meses_valor_contrato,0)
into STRICT    ie_tratar_fim_semana_w,
        qt_meses_valor_contrato_w
from    parametro_fluxo_caixa
where   cd_estabelecimento      = cd_estabelecimento_p;

select  coalesce(ie_antecipar_dia_util, 'N'),
        coalesce(ie_dia_fixo, 'N'),
        coalesce(ie_regra_data,'F')
into STRICT    ie_antecipar_dia_util_w,
        ie_dia_fixo_w,
        ie_regra_data_w
from    regra_fluxo_caixa
where   nr_sequencia            = nr_seq_regra_p;

/* Projeto Multimoeda - Busca a moeda padrão da empresa para gravar no fluxo. */

select	obter_moeda_padrao_empresa(cd_estabelecimento_p,'E')
into STRICT	cd_moeda_empresa_w
;

if      not(coalesce(nr_dia_fixo_p,0) between 1 and 31) then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(195875,'DS_CONTA='||OBTER_DESC_CONTA_FINANC(cd_conta_financ_p));
end if;

dt_mes_w        := pkg_date_utils.start_of(dt_inicial_p,'MONTH',0);

if (nr_dia_fixo_p > pkg_date_utils.extract_field('DAY',PKG_DATE_UTILS.GET_DATETIME(PKG_DATE_UTILS.END_OF(dt_mes_w, 'MONTH'), coalesce(dt_mes_w, PKG_DATE_UTILS.get_Time('00:00:00'))), 0)) then
	dt_referencia_w         := PKG_DATE_UTILS.GET_DATETIME(PKG_DATE_UTILS.END_OF(dt_mes_w, 'MONTH'), coalesce(dt_mes_w, PKG_DATE_UTILS.get_Time('00:00:00')));
else
	dt_referencia_w         := pkg_date_utils.get_date(nr_dia_fixo_p, dt_mes_w, 0);

dt_mes_w	:= dt_referencia_w;
vl_soma_dias_w	:= 0;
end if;

for i in 1.. qt_meses_valor_contrato_w loop
	begin
	dt_referencia_w		:= PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w, i * -1,0);

	select  coalesce(sum(vl_fluxo),0),
		max(dt_previsto)
	into STRICT	vl_previsto_w,
		dt_previsto_w
	from (SELECT (dividir_sem_round(coalesce(c.vl_titulo, b.vl_titulo),b.vl_titulo) * d.vl_pago) vl_fluxo,
			pkg_date_utils.start_of(d.dt_baixa,'DD',0) dt_previsto
		from    titulo_pagar_baixa d,
			titulo_pagar_classif c,
			titulo_pagar b
		where   c.nr_seq_conta_financ   = cd_conta_financ_p
		and     b.nr_titulo             = c.nr_titulo
		and     not exists (select 1
			from    titulo_pagar_baixa_cc x
			where   x.nr_seq_baixa  = d.nr_sequencia
			and     x.nr_titulo     = d.nr_titulo)
		and     b.ie_situacao           <> 'C'
		and     b.cd_estabelecimento	= cd_estabelecimento_p
		and     obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p
		and     b.nr_titulo             = d.nr_titulo
		and     d.dt_baixa              between pkg_date_utils.start_of(dt_referencia_w,'DD',0) and fim_dia(dt_referencia_w)
		
union all

		SELECT  e.vl_pago vl_fluxo,
			pkg_date_utils.start_of(d.dt_baixa,'DD',0) dt_previsto
		from    titulo_pagar_baixa_cc e,
			titulo_pagar_baixa d,
			titulo_pagar b
		where   e.cd_conta_financ       = cd_conta_financ_p
		and     d.nr_sequencia          = e.nr_seq_baixa
		and     d.nr_titulo             = e.nr_titulo
		and     b.ie_situacao           <> 'C'
		and     b.cd_estabelecimento	= cd_estabelecimento_p
		and     obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p
		and     b.nr_titulo             = d.nr_titulo
		and     d.dt_baixa              between pkg_date_utils.start_of(dt_referencia_w,'DD',0) and fim_dia(dt_referencia_w)) alias15;
	
	vl_soma_dias_w	:= vl_soma_dias_w + vl_previsto_w;
	
	end;
end loop;

dt_referencia_w		:= dt_mes_w;

if      (ie_tratar_fim_semana_w = 'S' AND ie_antecipar_dia_util_w <> 'U') or
	(ie_dia_fixo_w = 'N' AND ie_antecipar_dia_util_w = 'S') then
	dt_referencia_w := obter_proximo_dia_util(cd_estabelecimento_p, dt_referencia_w);
end if;

if (ie_antecipar_dia_util_w = 'U') or
	((ie_antecipar_dia_util_w = 'S') and
	 ((pkg_date_utils.start_of(dt_referencia_w, 'MONTH',0) > pkg_date_utils.start_of(dt_mes_w, 'MONTH',0)) or (obter_se_dia_util(dt_referencia_w, cd_estabelecimento_p) = 'N'))) then
	dt_referencia_w         := obter_dia_anterior_util(cd_estabelecimento_p, dt_mes_w);
end if;

if (qt_meses_valor_contrato_w = 0) then
	qt_meses_valor_contrato_w := 1;
end if;

vl_soma_dias_w		:= vl_soma_dias_w / qt_meses_valor_contrato_w;

begin
insert into fluxo_caixa(cd_estabelecimento,
	dt_referencia,
	cd_conta_financ,
	ie_classif_fluxo,
	dt_atualizacao,
	nm_usuario,
	vl_fluxo,
	ie_origem,
	ie_periodo,
	ie_integracao,
	cd_empresa,
	ds_observacao,
	cd_moeda)
values (cd_estabelecimento_p,
	dt_referencia_w,
	cd_conta_financ_p,
	coalesce(ie_classif_fluxo_p,'R'),
	clock_timestamp(),
	nm_usuario_p,
	coalesce(vl_soma_dias_w,0),
	'I',
	'D',
	'CP',
	cd_empresa_p,
	wheb_mensagem_pck.get_texto(302848), -- [RE] Regra Especial
	cd_moeda_empresa_w);
exception
when unique_violation then
	update  fluxo_caixa
	set     vl_fluxo                = vl_fluxo + coalesce(vl_soma_dias_w,0)
	where   cd_estabelecimento      = cd_estabelecimento_p
	and     cd_conta_financ         = cd_conta_financ_p
	and     dt_referencia           = dt_referencia_w
	and     ie_periodo              = 'D'
	and     ie_classif_fluxo        = 'R'
	and     ie_integracao           = 'CP'
	and	ie_origem		= 'I'
	and     cd_empresa              = cd_empresa_p;
end;

vl_deducao_w    := coalesce(obter_se_fluxo_caixa_regra(nr_seq_regra_p, dt_referencia_w, cd_estabelecimento_p, 'VL'), 0);
vl_fluxo_previsto_w	:= vl_fixo_p - vl_deducao_w;

if (vl_fluxo_previsto_w > coalesce(vl_soma_dias_w,0)) then
	vl_fluxo_maior_w	:= vl_fluxo_previsto_w - vl_soma_dias_w;
	
	begin
	insert into fluxo_caixa(cd_estabelecimento,
		dt_referencia,
		cd_conta_financ,
		ie_classif_fluxo,
		dt_atualizacao,
		nm_usuario,
		vl_fluxo,
		ie_origem,
		ie_periodo,
		ie_integracao,
		cd_empresa,
		ds_observacao,
		cd_moeda)
	values (cd_estabelecimento_p,
		dt_referencia_w,
		cd_conta_financ_p,
		coalesce(ie_classif_fluxo_p,'R'),
		clock_timestamp(),
		nm_usuario_p,
		coalesce(vl_fluxo_maior_w,0),
		'I',
		'D',
		'RE',
		cd_empresa_p,
		wheb_mensagem_pck.get_texto(302849), -- [RE] Regra Especial - Média dos títulos da regra
		cd_moeda_empresa_w);
	exception
	when unique_violation then
		update  fluxo_caixa
		set     vl_fluxo                = vl_fluxo + coalesce(vl_fluxo_maior_w,0)
		where   cd_estabelecimento      = cd_estabelecimento_p
		and     cd_conta_financ         = cd_conta_financ_p
		and     dt_referencia           = dt_referencia_w
		and     ie_periodo              = 'D'
		and     ie_classif_fluxo        = 'R'
		and     ie_integracao           = 'RE'
		and	ie_origem		= 'I'
		and     cd_empresa              = cd_empresa_p;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_valor_regra ( cd_conta_financ_p bigint, nr_dia_fixo_p bigint, vl_fixo_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_acumular_fluxo_p text, cd_empresa_p bigint, nr_seq_regra_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_classif_fluxo_p text) FROM PUBLIC;

