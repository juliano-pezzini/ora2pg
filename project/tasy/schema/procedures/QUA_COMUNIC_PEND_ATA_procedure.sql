-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qua_comunic_pend_ata ( qt_dia_p bigint, ie_comunic_interna_p text, ie_email_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;
ds_pendencia_w		varchar(255);
ds_ata_w			varchar(255);
dt_ata_w			varchar(80);
dt_prev_solucao_w		varchar(80);
nm_usuario_resp_w		varchar(15);
ds_email_usuario_w		varchar(255);
ds_titulo_w		varchar(255);
ds_comunicacao_w		varchar(4000);

c01 CURSOR FOR
SELECT	b.nr_sequencia,
	to_char(b.dt_ata, 'dd/mm/yyyy') dt_ata,
	b.ds_ata,
	to_char(a.dt_prev_solucao, 'dd/mm/yyyy') dt_prev_solucao,
	a.ds_pendencia,
	substr(obter_usuario_pessoa(a.cd_pessoa_resp),1,15) nm_usuario_resp
from	proj_ata_pendencia a,
	proj_ata b
where	b.nr_sequencia 		= a.nr_seq_ata
and	b.ie_tipo_ata		= 'Q'
and	coalesce(a.dt_conclusao_real::text, '') = ''
and	abs(obter_dias_entre_datas(clock_timestamp(), a.dt_prev_solucao)) >= qt_dia_p;


BEGIN

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	dt_ata_w,
	ds_ata_w,
	dt_prev_solucao_w,
	ds_pendencia_w,
	nm_usuario_resp_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (nm_usuario_resp_w IS NOT NULL AND nm_usuario_resp_w::text <> '') then
		begin
		ds_titulo_w		:= substr(wheb_mensagem_pck.get_texto(305704),1,255); /*PendÃªncia de ATA */
		ds_comunicacao_w	:= substr(wheb_mensagem_pck.get_texto(305712,'DT_ATA=' || dt_ata_w || ';NR_SEQUENCIA='|| nr_sequencia_w|| ';DS_PENDENCIA='|| ds_pendencia_w || ';DT_PREV_SOLUCAO=' || dt_prev_solucao_w),1,4000);

	if (coalesce(ie_comunic_interna_p,'N') = 'S') then
			CALL gerar_comunic_padrao(	clock_timestamp(),
						ds_titulo_w,
						ds_comunicacao_w,
						nm_usuario_p,
						'N',
						nm_usuario_resp_w,
						'N',
						null,
						null,
						null,
						null,
						clock_timestamp(),
						null,
						null);
		end if;
	if (coalesce(ie_email_p,'N') = 'S') then
			begin
			select	max(ds_email)
			into STRICT	ds_email_usuario_w
			from	usuario
			where	nm_usuario = nm_usuario_resp_w;

			if (ds_email_usuario_w IS NOT NULL AND ds_email_usuario_w::text <> '') then
				CALL enviar_email(	ds_titulo_w,
						ds_comunicacao_w,
						null,
						ds_email_usuario_w,
						nm_usuario_p,
						'M');
			end if;
			end;
		end if;
		end;
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qua_comunic_pend_ata ( qt_dia_p bigint, ie_comunic_interna_p text, ie_email_p text, nm_usuario_p text) FROM PUBLIC;

