-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_22 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação da Glosa 1406 - Senha informada diferente da liberada.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
Alterações:
 ------------------------------------------------------------------------------------------------------------------
 jjung OS 601977 02/07/2013 -  Criação da rotina
 ------------------------------------------------------------------------------------------------------------------
 jjung 17/09/2013 -

 Alteração:	Adicionado tratamento para o campo IE_VALIDA_SENHA_EXTERNA.

 Motivo:	Este campo tinha sido incluído inicialmente no tratamento da validação
	Validar autorização do item, porém foi identificado que o local correto para tratamento
	seria esta validação, portanto ele foi removido da tela da validação de autorização do item
	e foi criado para esta validação.
 ------------------------------------------------------------------------------------------------------------------
 dlehmkuhl OS 688483 - 14/04/2014 -

Alteração:	Modificada a forma de trabalho em relação a atualização dos campos de controle
	que basicamente decidem se a ocorrência será ou não gerada. Foi feita também a
	substituição da rotina obterX_seX_geraX.

Motivo:	Necessário realizar essas alterações para corrigir bugs principalmente no que se
	refere a questão de aplicação de filtros (passo anterior ao da validação). Também
	tivemos um foco especial em performance, visto que a mesma precisou ser melhorada
	para não inviabilizar a nova solicitação que diz que a exceção deve verificar todo
	o atendimento.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_sql_w		varchar(4000);
ds_restricao_w		varchar(2000);
ds_restricao_externa_w	varchar(2000);
ds_restricao_interna_w	varchar(2000);

ds_restricao_interc_w	varchar(2000);
ds_rest_inter_externa_w	varchar(2000);
ds_rest_inter_interna_w	varchar(2000);

nr_seq_selecao_w	dbms_sql.number_table;
ds_observacao_w		dbms_sql.varchar2_table;
ie_valido_w		dbms_sql.varchar2_table;
ie_registro_valido_w	varchar(1);
v_cur_w			pls_util_pck.t_cursor;

-- Informações da regra de validação da senha X autorização.
C02 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia	nr_seq_validacao,
		a.ie_valida_glosa_1406,
		a.ie_valida_senha_externa
	from	pls_oc_cta_val_glo1406 a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

BEGIN

if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	-- Atualizar o campo ie_valido_temp para N  na tabela PLS_SELECAO_OCOR_CTA  para todos os registros.
	ie_registro_valido_w := 'S';
	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

	-- Informações da regra de validação da senha externa X autorização.
	for	r_C02_w in C02(dados_regra_p.nr_sequencia) loop
		ds_sql_w := null;
		ds_restricao_w := null;
		ds_restricao_interna_w := null;
		ds_restricao_externa_w := null;

		ds_restricao_interc_w	:= null;
		ds_rest_inter_externa_w	:= null;
		ds_rest_inter_interna_w	:= null;

		-- Só aplica a validação caso seja informado na regra que é para fazê-lo
		if (r_C02_w.ie_valida_glosa_1406 = 'S' or
			r_C02_w.ie_valida_senha_externa = 'S') then

			-- Se for para verificar a senha interna então procura pela autorização olhando pela senha informada na conta.
			if (r_C02_w.ie_valida_glosa_1406 = 'S') then

				-- Se for durante a importação então verifica o campo IMP, caso contrário olha o campo quente.
				if (dados_regra_p.ie_evento = 'IMP') then

					ds_restricao_interna_w := 	ds_restricao_interna_w || pls_tipos_ocor_pck.enter_w ||
								'			(nvl(guia.cd_senha,0) <> nvl(conta.cd_senha_imp,0)) ';

					ds_rest_inter_interna_w := 	ds_rest_inter_interna_w || pls_tipos_ocor_pck.enter_w ||
								'			(nvl(guia.cd_senha,0) <> nvl(conta.cd_senha_imp,0)) ';

				else
					ds_restricao_interna_w :=	ds_restricao_interna_w || pls_tipos_ocor_pck.enter_w ||
								'			(nvl(guia.cd_senha,0) <> nvl(conta.cd_senha,0)) ';

					ds_rest_inter_interna_w :=	ds_rest_inter_interna_w || pls_tipos_ocor_pck.enter_w ||
								'			(nvl(guia.cd_senha,0) <> nvl(conta.cd_senha,0)) ';
				end if;
			end if;

			-- Se for para verificar a senha externa, procura pela guia olhando também para a senha externa informada na conta
			if (r_C02_w.ie_valida_senha_externa = 'S') then

				ds_restricao_externa_w := 	ds_restricao_externa_w || pls_tipos_ocor_pck.enter_w ||
							'			(nvl(guia.cd_senha,0) <> nvl(conta.cd_senha_externa,0)) ';

				ds_rest_inter_externa_w := 	ds_rest_inter_externa_w || pls_tipos_ocor_pck.enter_w ||
							'			((nvl((	select max(x.nr_seq_origem) 	' || pls_tipos_ocor_pck.enter_w ||
							'				from ptu_resposta_autorizacao x	' || pls_tipos_ocor_pck.enter_w ||
							'				where	x.nr_seq_guia = guia.nr_sequencia),0) <> nvl(conta.cd_senha,0)) and '|| pls_tipos_ocor_pck.enter_w ||
							'			(nvl((	select max(x.nr_seq_origem) 	' || pls_tipos_ocor_pck.enter_w ||
							'				from 	ptu_resposta_autorizacao x,' || pls_tipos_ocor_pck.enter_w ||
							'					pls_execucao_requisicao  y ' || pls_tipos_ocor_pck.enter_w ||
							'				where	y.nr_seq_guia 	= guia.nr_sequencia '||pls_tipos_ocor_pck.enter_w ||
							'				and	x.nr_seq_requisicao = y.nr_seq_requisicao),0) <> nvl(conta.cd_senha,0)))';
			end if;

			/* No caso de ser validado tanto a senha interna quanto a senha externa, é necessário fazer um or, pois caso uma delas seja diferente da senha da guia,
			então a ocorrência deve ser gerada*/
			if	(ds_restricao_externa_w IS NOT NULL AND ds_restricao_externa_w::text <> '' AND ds_restricao_interna_w IS NOT NULL AND ds_restricao_interna_w::text <> '') then
				ds_restricao_w		:= 'and ('|| ds_restricao_interna_w ||' or '||ds_restricao_externa_w||' )';

			elsif (ds_restricao_interna_w IS NOT NULL AND ds_restricao_interna_w::text <> '') then
				ds_restricao_w := ' and '||ds_restricao_interna_w;

			elsif (ds_restricao_externa_w IS NOT NULL AND ds_restricao_externa_w::text <> '') then
				ds_restricao_w := ' and '||ds_restricao_externa_w;

			end if;

			--Tratamento para intercâmbio
			if	(ds_rest_inter_externa_w IS NOT NULL AND ds_rest_inter_externa_w::text <> '' AND ds_rest_inter_interna_w IS NOT NULL AND ds_rest_inter_interna_w::text <> '') then
				ds_restricao_interc_w		:= 'and ('|| ds_rest_inter_interna_w ||' or '||ds_rest_inter_externa_w||' )';

			elsif (ds_rest_inter_interna_w IS NOT NULL AND ds_rest_inter_interna_w::text <> '') then
				ds_restricao_interc_w := ' and '||ds_rest_inter_interna_w;

			elsif (ds_rest_inter_externa_w IS NOT NULL AND ds_rest_inter_externa_w::text <> '') then
				ds_restricao_interc_w := ' and '||ds_rest_inter_externa_w;

			end if;

			--Monta o select base verificando a autorização. Se a conta tiver uma autorização e a senha informada na
			ds_sql_w :=	'select	distinct sel.nr_sequencia nr_seq_selecao,' || pls_tipos_ocor_pck.enter_w ||
					''''||ie_registro_valido_w||''' ie_registro_valido, ' ||pls_tipos_ocor_pck.enter_w||
					' null ds_obervacao ' ||pls_tipos_ocor_pck.enter_w||
					'from	pls_oc_cta_selecao_ocor_v sel, ' || pls_tipos_ocor_pck.enter_w ||
					'	pls_conta_ocor_v conta ' || pls_tipos_ocor_pck.enter_w ||
					'where	sel.nr_id_transacao = :nr_id_transacao ' || pls_tipos_ocor_pck.enter_w ||
					'and	sel.ie_valido = ''S'' ' || pls_tipos_ocor_pck.enter_w ||
					'and	conta.nr_sequencia = sel.nr_seq_conta ' || pls_tipos_ocor_pck.enter_w ||
					'and	ie_origem_conta <> ''A'' ' || pls_tipos_ocor_pck.enter_w ||
					'and	exists (	select	1 ' || pls_tipos_ocor_pck.enter_w ||
					'			from	pls_guia_plano guia ' || pls_tipos_ocor_pck.enter_w ||
					'			where	guia.nr_sequencia = conta.nr_seq_guia '|| pls_tipos_ocor_pck.enter_w ||
					'			and	guia.ie_status = ''1'' ' || pls_tipos_ocor_pck.enter_w ||
					ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
					'	)'|| pls_tipos_ocor_pck.enter_w ||
					'union all ' || pls_tipos_ocor_pck.enter_w ||
					'select	distinct sel.nr_sequencia nr_seq_selecao,' || pls_tipos_ocor_pck.enter_w ||
					''''||ie_registro_valido_w||''' ie_registro_valido, ' ||pls_tipos_ocor_pck.enter_w||
					' null ds_obervacao ' ||pls_tipos_ocor_pck.enter_w||
					'from	pls_oc_cta_selecao_ocor_v sel, ' || pls_tipos_ocor_pck.enter_w ||
					'	pls_conta_ocor_v conta ' || pls_tipos_ocor_pck.enter_w ||
					'where	sel.nr_id_transacao = :nr_id_transacao ' || pls_tipos_ocor_pck.enter_w ||
					'and	sel.ie_valido = ''S'' ' || pls_tipos_ocor_pck.enter_w ||
					'and	conta.nr_sequencia = sel.nr_seq_conta ' || pls_tipos_ocor_pck.enter_w ||
					'and	ie_origem_conta = ''A'' ' || pls_tipos_ocor_pck.enter_w ||
					'and	exists (	select	1 ' || pls_tipos_ocor_pck.enter_w ||
					'			from	pls_guia_plano guia ' || pls_tipos_ocor_pck.enter_w ||
					'			where	guia.nr_sequencia = conta.nr_seq_guia '|| pls_tipos_ocor_pck.enter_w ||
					'			and	guia.ie_status = ''1'' ' || pls_tipos_ocor_pck.enter_w ||
					ds_restricao_interc_w || pls_tipos_ocor_pck.enter_w ||
					'	)';

			begin
				open v_cur_w for EXECUTE ds_sql_w using 	nr_id_transacao_p,nr_id_transacao_p;
				loop
					nr_seq_selecao_w	:= pls_util_cta_pck.num_table_vazia_w;
					ie_valido_w		:= pls_util_cta_pck.vchr2_table_vazia_w;
					ds_observacao_w		:= pls_util_cta_pck.vchr2_table_vazia_w;
					fetch v_cur_w bulk collect
					into  nr_seq_selecao_w, ie_valido_w, ds_observacao_w
					limit pls_util_cta_pck.qt_registro_transacao_w;
						exit when nr_seq_selecao_w.count = 0;

						CALL pls_tipos_ocor_pck.gerencia_selecao_validacao( nr_seq_selecao_w, pls_util_cta_pck.clob_table_vazia_w, 'SEQ', ds_observacao_w,
											ie_valido_w, nm_usuario_p);

				end loop;
				close v_cur_w;
			exception
			when others then
				--Fecha o cursor
				close v_cur_w;
				-- Insere o log na tabela e aborta a operação
				CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(dados_regra_p, ds_sql_w,nr_id_transacao_p, nm_usuario_p);
			end;
		end if;
	end loop; -- C02
	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_22 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

