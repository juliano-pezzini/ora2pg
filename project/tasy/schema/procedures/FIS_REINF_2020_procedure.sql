-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_reinf_2020 (nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_inicial_w		fis_reinf_r2020.dt_competencia%type;	
dt_final_w		fis_reinf_r2020.dt_competencia%type;
nr_seq_nfs_w		nota_fiscal.nr_sequencia%type;
nr_nota_fiscal_w		nota_fiscal.nr_nota_fiscal%type;
cd_serie_nf_w		nota_fiscal.cd_serie_nf%type;	
cd_cnpj_w		nota_fiscal.cd_cgc%type;
vl_bruto_nf_w		nota_fiscal.vl_mercadoria%type;
vl_base_trib_inss_w		nota_fiscal_trib.vl_base_calculo%type;
vl_retencao_inss_w		nota_fiscal_trib.vl_tributo%type;
cd_tributo_w		fis_reinf_r2020.cd_tributo%type;
vl_n_retencao_inss_w    nota_fiscal_trib.vl_tributo%TYPE;
tx_tributo_w		nota_fiscal_trib.tx_tributo%TYPE;

C01 CURSOR FOR


SELECT  nr_seq_nfs,
        cd_serie_nota,
        MAX(nr_nota_fiscal) nr_nota_fiscal,
        MAX(cd_cnpj) cd_cnpj,
        MAX(vl_bruto_nf) vl_bruto_nf,
        SUM(vl_base_trib_inss) vl_base_trib_inss,
        SUM(vl_retencao_inss) vl_retencao_inss,
	      sum(vl_n_retencao_inss) vl_n_retencao_inss,
        tx_tributo
FROM (
	SELECT 	a.nr_sequencia nr_seq_nfs,
		obter_dados_nota_fiscal(a.nr_sequencia,'1') cd_serie_nota,
		MAX(SUBSTR(a.nr_nota_fiscal,1,80)) nr_nota_fiscal,
		MAX(a.cd_cgc) cd_cnpj,
		MAX(a.vl_mercadoria) vl_bruto_nf,
		SUM(b.vl_base_calculo) vl_base_trib_inss,
		SUM(CASE WHEN obter_se_possui_processo(a.nr_sequencia,nr_sequencia_p,'2020')='S' THEN b.vl_tributo  ELSE 0 END ) vl_n_retencao_inss,
		sum(b.vl_base_calculo * 0.11) vl_retencao_inss,
    b.tx_tributo tx_tributo
	FROM 	nota_fiscal a,
		nota_fiscal_trib b,
		tributo c  ,
		fis_reinf_r2020 d,
		estabelecimento e
	WHERE 	a.nr_sequencia = b.nr_sequencia
	AND     	b.cd_tributo = c.cd_tributo
	AND	a.dt_emissao BETWEEN dt_inicial_w AND dt_final_w
	AND	a.ie_tipo_nota IN ('SD', 'SE', 'SF', 'ST') /*Domnio 1661*/
	AND     (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '') /*notas calculadas*/
	AND     a.ie_situacao IN (1)
	and	b.vl_tributo <> 0	
	AND     (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')
	and 	e.cd_estabelecimento = d.cd_estabelecimento
	and 	a.cd_cgc_emitente = e.cd_cgc
	AND    	c.cd_tributo = d.cd_tributo
	and 	d.nr_sequencia = nr_sequencia_p
	--AND  	c.cd_tributo = cd_tributo_w
	GROUP BY 	a.nr_sequencia,
		 obter_dados_nota_fiscal(a.nr_sequencia,'1'),
     tx_tributo
	
UNION

	SELECT 	a.nr_sequencia nr_seq_nfs,
		obter_dados_nota_fiscal(a.nr_sequencia,'1') cd_serie_nota,
		MAX(SUBSTR(a.nr_nota_fiscal,1,80)) nr_nota_fiscal,
		MAX(a.cd_cgc) cd_cnpj,
		MAX(a.vl_mercadoria) vl_bruto_nf,
		SUM(b.vl_base_calculo) vl_base_trib_inss,
		SUM(CASE WHEN obter_se_possui_processo(a.nr_sequencia,nr_sequencia_p,'2020')='S' THEN b.vl_tributo  ELSE 0 END ) vl_n_retencao_inss,
		sum(b.vl_base_calculo * 0.11) vl_retencao_inss,
    b.tx_tributo tx_tributo
	FROM 	nota_fiscal a,
		nota_fiscal_item_trib b,
		tributo c  ,
		fis_reinf_r2020 d,
		estabelecimento e
	WHERE 	a.nr_sequencia = b.nr_sequencia
	AND	b.cd_tributo = c.cd_tributo
	AND	a.dt_emissao BETWEEN dt_inicial_w AND dt_final_w
	AND	a.ie_tipo_nota IN ('SD', 'SE', 'SF', 'ST') /*Domnio 1661*/
	AND     (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '') /*notas calculadas*/
	AND     a.ie_situacao IN (1)
	and	b.vl_tributo <> 0	
	AND     (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')
	and 	e.cd_estabelecimento = d.cd_estabelecimento
	and 	a.cd_cgc_emitente = e.cd_cgc
	AND    	c.cd_tributo = d.cd_tributo
	and 	d.nr_sequencia = nr_sequencia_p
	GROUP BY 	a.nr_sequencia,
		 obter_dados_nota_fiscal(a.nr_sequencia,'1'),
     tx_tributo
	ORDER BY nr_nota_fiscal
       ) alias34WHERE vl_retencao_inss > 0
        AND vl_base_trib_inss > 0
        GROUP BY nr_seq_nfs,cd_serie_nota, tx_tributo;


BEGIN
	
select 	pkg_date_utils.start_of(a.dt_competencia, 'MONTH', 0) dt_inicial,
	pkg_date_utils.end_of(a.dt_competencia, 'MONTH', 0) dt_final,
	a.cd_tributo cd_tributo
into STRICT	dt_inicial_w,
	dt_final_w,
	cd_tributo_w
from	fis_reinf_r2020 a
where 	a.nr_sequencia = nr_sequencia_p;

	open  C01;
	loop
	fetch C01 into 
		nr_seq_nfs_w,
		cd_serie_nf_w,
		nr_nota_fiscal_w,
		cd_cnpj_w,
		vl_bruto_nf_w,
		vl_base_trib_inss_w,
		vl_retencao_inss_w,
		vl_n_retencao_inss_w,
    tx_tributo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		
		begin
		
    insert into fis_reinf_notas_r2020(
			nr_sequencia,
			cd_estabelecimento,
			dt_atualizacao, 
			nm_usuario,
			vl_bruto_nf,
			vl_base_trib_inss,
			vl_retencao_inss,
			nr_documento,
			nr_seq_superior,
			cd_cnpj,
			nr_seq_nota,
			vl_n_retencao_inss,
      vl_servicos_15,
      vl_servicos_20,
      vl_servicos_25) 
		values (	nextval('fis_reinf_notas_r2020_seq'),
			cd_estabelecimento_p, 
			clock_timestamp(),
			nm_usuario_p,
			vl_bruto_nf_w,
			vl_base_trib_inss_w,
			vl_retencao_inss_w,
			nr_nota_fiscal_w,
			nr_sequencia_p,
			cd_cnpj_w,
			nr_seq_nfs_w,
			vl_n_retencao_inss_w,
			fis_obter_valor_apo_esp_2010(tx_tributo_w, vl_base_trib_inss_w, 2),
			fis_obter_valor_apo_esp_2010(tx_tributo_w, vl_base_trib_inss_w, 3),
			fis_obter_valor_apo_esp_2010(tx_tributo_w, vl_base_trib_inss_w, 4));

		end;

	end loop;
	close C01;

	update	fis_reinf_r2020
	set	dt_geracao = clock_timestamp()
	where 	nr_sequencia = nr_sequencia_p;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_reinf_2020 (nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

