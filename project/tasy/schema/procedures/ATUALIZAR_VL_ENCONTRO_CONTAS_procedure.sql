-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_vl_encontro_contas ( nr_seq_pessoa_p bigint, nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
vl_saldo_lote_w			double precision;						
vl_saldo_tit_receb_w		double precision;
vl_saldo_tit_pagar_w		double precision;
vl_saldo_pessoa_w		double precision;
vl_juros_tit_pagar_w		double precision;
vl_multa_tit_pagar_w		double precision;
vl_juros_tit_rec_w		double precision;
vl_multa_tit_rec_w		double precision;	
vl_descontos_w			double precision;
vl_despesa_w			double precision;
vl_outros_acrescimos_w		double precision;
nr_seq_regra_enc_cont_w		bigint;
ie_tipo_pessoa_w		varchar(3);
ie_juros_w			varchar(1)	:= 'N';
ie_multa_w			varchar(1)	:= 'N';
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w 			varchar(14);
ie_despesa_desconto_w		varchar(1);
ie_outras_desp_no_saldo_w	varchar(1);
	

BEGIN 
 
ie_outras_desp_no_saldo_w := obter_param_usuario(851, 256, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_outras_desp_no_saldo_w);
 
if (nr_seq_pessoa_p IS NOT NULL AND nr_seq_pessoa_p::text <> '') and (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then	 
	select	max(cd_cgc), 
		max(cd_pessoa_fisica) 
	into STRICT	cd_cgc_w, 
		cd_pessoa_fisica_w 
	from	lote_encontro_contas 
	where	nr_sequencia = nr_seq_lote_p;
	 
	/* Obter o tipo da pessoa*/
 
	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then 
		select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'CO' END  
		into STRICT	ie_tipo_pessoa_w 
		from	pls_congenere 
		where	cd_cgc	= cd_cgc_w 
		and	coalesce(dt_exclusao::text, '') = '';
		 
		if (ie_tipo_pessoa_w = 'N') then 
			select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'C' END  
			into STRICT	ie_tipo_pessoa_w 
			from	pls_cooperado 
			where	cd_cgc	= cd_cgc_w 
			and	coalesce(dt_exclusao::text, '') = '';
			 
			if (ie_tipo_pessoa_w = 'N') then 
				ie_tipo_pessoa_w	:= 'CL';
			end if;
		end if;
	else 
		select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'C' END  
		into STRICT	ie_tipo_pessoa_w 
		from	pls_cooperado 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	coalesce(dt_exclusao::text, '') = '';
		 
		if (ie_tipo_pessoa_w = 'N') then 
			ie_tipo_pessoa_w	:= 'CL';
		end if;
	end if;
	 
	if (ie_tipo_pessoa_w IS NOT NULL AND ie_tipo_pessoa_w::text <> '') then	 
		nr_seq_regra_enc_cont_w := obter_seq_regra_enc_contas(ie_tipo_pessoa_w, nr_seq_regra_enc_cont_w);
		 
		if (nr_seq_regra_enc_cont_w IS NOT NULL AND nr_seq_regra_enc_cont_w::text <> '') then 
			select	coalesce(a.ie_juros,'N'), 
				coalesce(a.ie_multa,'N'), 
				coalesce(a.ie_despesa_desconto,'N') 
			into STRICT	ie_juros_w, 
				ie_multa_w, 
				ie_despesa_desconto_w 
			from	regra_receb_enc_contas a 
			where	a.nr_sequencia = nr_seq_regra_enc_cont_w;
		end if;
	end if;
	 
	if (coalesce(ie_juros_w::text, '') = '') then 
		ie_juros_w := 'N';
	end if;
	 
	if (coalesce(ie_multa_w::text, '') = '') then 
		ie_multa_w := 'N';
	end if;
	 
	if (coalesce(ie_despesa_desconto_w::text, '') = '') then 
		ie_despesa_desconto_w := 'N';
	end if;
	 
	select	coalesce(sum(b.vl_saldo_titulo),0) 
	into STRICT	vl_saldo_tit_receb_w 
	from	titulo_receber b, 
		encontro_contas_item a 
	where	a.nr_seq_pessoa		= nr_seq_pessoa_p 
	and	a.nr_titulo_receber	= b.nr_titulo;
	 
	select	coalesce(sum(b.vl_saldo_titulo),0) + coalesce(sum(b.vl_outros_acrescimos),0) 
	into STRICT	vl_saldo_tit_pagar_w 
	from	titulo_pagar b, 
		encontro_contas_item a 
	where	a.nr_titulo_pagar	= b.nr_titulo 
	and	a.nr_seq_pessoa		= nr_seq_pessoa_p;
	 
	/*Se a regra de juros e multa, estiver ativa. Ã‰ inserido juros e multa ao valor total.*/
 
	if (ie_juros_w = 'S') or (ie_juros_w = 'R') then 
		select	sum((obter_juros_multa_titulo(b.nr_titulo, clock_timestamp(),'R','J'))::numeric ) vl_saldo_juros 
		into STRICT	vl_juros_tit_rec_w 
		from	titulo_receber b, 
			encontro_contas_item a 
		where	a.nr_seq_pessoa		= nr_seq_pessoa_p 
		and	a.nr_titulo_receber	= b.nr_titulo;
 
		vl_saldo_tit_receb_w	:= coalesce(vl_saldo_tit_receb_w,0) + coalesce(vl_juros_tit_rec_w,0);
	end if;
	 
	if (ie_multa_w = 'S') or (ie_multa_w = 'R') then 
		select	sum((obter_juros_multa_titulo(b.nr_titulo, clock_timestamp(),'R','M'))::numeric ) vl_saldo_multa 
		into STRICT	vl_multa_tit_rec_w 
		from	titulo_receber b, 
			encontro_contas_item a 
		where	a.nr_seq_pessoa		= nr_seq_pessoa_p 
		and	a.nr_titulo_receber	= b.nr_titulo;
 
		vl_saldo_tit_receb_w	:= coalesce(vl_saldo_tit_receb_w,0) + coalesce(vl_multa_tit_rec_w,0);
	end if;
		 
	if (ie_juros_w = 'S') or (ie_juros_w = 'P') then 
		select	sum((obter_juros_multa_titulo(b.nr_titulo, clock_timestamp(),'P','J'))::numeric ) vl_saldo_juros 
		into STRICT	vl_juros_tit_pagar_w 
		from	titulo_pagar b, 
			encontro_contas_item a 
		where	a.nr_titulo_pagar	= b.nr_titulo 
		and	a.nr_seq_pessoa		= nr_seq_pessoa_p;	
		 
		vl_saldo_tit_pagar_w	:= coalesce(vl_saldo_tit_pagar_w,0) + coalesce(vl_juros_tit_pagar_w,0);
	end if;
	 
	if (ie_multa_w = 'S') or (ie_multa_w = 'P') then 
		select	sum((obter_juros_multa_titulo(b.nr_titulo, clock_timestamp(),'P','M'))::numeric ) vl_saldo_multa 
		into STRICT	vl_multa_tit_pagar_w 
		from	titulo_pagar b, 
			encontro_contas_item a 
		where	a.nr_titulo_pagar	= b.nr_titulo 
		and	a.nr_seq_pessoa		= nr_seq_pessoa_p;	
		 
		vl_saldo_tit_pagar_w	:= coalesce(vl_saldo_tit_pagar_w,0) + coalesce(vl_multa_tit_pagar_w,0);
	end if;
	 
	if (ie_despesa_desconto_w = 'S') or (ie_despesa_desconto_w = 'R') then 
		select	coalesce(sum(obter_valores_tit_rec(b.nr_titulo,'D')),0) + coalesce(sum(b.vl_desc_previsto),0) vl_desconto 
		into STRICT	vl_descontos_w 
		from	titulo_receber b, 
			encontro_contas_item a 
		where	a.nr_seq_pessoa		= nr_seq_pessoa_p 
		and	a.nr_titulo_receber	= b.nr_titulo;
		 
		vl_saldo_tit_receb_w	:= coalesce(vl_saldo_tit_receb_w,0) - coalesce(vl_descontos_w,0);
	end if;
	 
	if (ie_despesa_desconto_w = 'S') or (ie_despesa_desconto_w = 'P') then		 
		select	sum(coalesce(b.vl_dia_antecipacao,0)) vl_desconto, 
			sum(coalesce(b.vl_outras_despesas,0)) vl_despesa 
		into STRICT	vl_descontos_w, 
			vl_despesa_w 
		from	titulo_pagar b, 
			encontro_contas_item a 
		where	a.nr_titulo_pagar	= b.nr_titulo 
		and	a.nr_seq_pessoa		= nr_seq_pessoa_p;	
		 
		if (coalesce(ie_outras_desp_no_saldo_w,'N') = 'S') then 
			vl_saldo_tit_pagar_w	:= coalesce(vl_saldo_tit_pagar_w,0) - coalesce(vl_descontos_w,0);
		else 
			vl_saldo_tit_pagar_w	:= coalesce(vl_saldo_tit_pagar_w,0) + coalesce(vl_despesa_w,0) - coalesce(vl_descontos_w,0);
		end if;
		 
	end if;
	 
	vl_saldo_pessoa_w 	:= coalesce(vl_saldo_tit_receb_w,0) - coalesce(vl_saldo_tit_pagar_w,0);
	 
	if (vl_saldo_pessoa_w > 0) then 
		update	pessoa_encontro_contas 
		set	vl_saldo_credor 	= abs(vl_saldo_pessoa_w), 
			vl_saldo_devedor	 = NULL, 
			nm_usuario		= nm_usuario_p, 
			dt_atualizacao		= clock_timestamp() 
		where	nr_sequencia		= nr_seq_pessoa_p;	
	elsif (vl_saldo_pessoa_w < 0) then 
		update	pessoa_encontro_contas 
		set	vl_saldo_devedor 	= abs(vl_saldo_pessoa_w), 
			vl_saldo_credor		 = NULL, 
			nm_usuario		= nm_usuario_p, 
			dt_atualizacao		= clock_timestamp() 
		where	nr_sequencia		= nr_seq_pessoa_p;		
	elsif (vl_saldo_pessoa_w = 0) then 
		update	pessoa_encontro_contas 
		set	vl_saldo_devedor 	= 0, 
			vl_saldo_credor		= 0, 
			nm_usuario		= nm_usuario_p, 
			dt_atualizacao		= clock_timestamp() 
		where	nr_sequencia		= nr_seq_pessoa_p;
	end if;
	 
	select (sum(coalesce(vl_saldo_credor,0)) - sum(coalesce(vl_saldo_devedor,0))) vl_saldo 
	into STRICT	vl_saldo_lote_w 
	from	pessoa_encontro_contas 
	where 	nr_seq_lote 	= nr_seq_lote_p;
	 
	update	lote_encontro_contas 
	set	vl_saldo	= vl_saldo_lote_w, 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp() 
	where	nr_sequencia	= nr_seq_lote_p;
 
	commit;
end if;
	 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_vl_encontro_contas ( nr_seq_pessoa_p bigint, nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

