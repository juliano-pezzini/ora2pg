-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mens_pos_estab_sca ( nr_seq_mensalidade_seg_p bigint, nr_seq_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_preco_pos_w			varchar(2);
vl_total_liberado_w		double precision	:= 0;
nr_seq_contrato_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_protocolo_w		bigint;
tx_administracao_w		double precision;
vl_informado_w			double precision;
vl_taxa_pos_w			double precision;
ie_tipo_taxa_w			varchar(5);
dt_mesano_referencia_w		timestamp;
nr_seq_mensalidade_w		bigint;
qt_beneficiarios_w		integer	:= 0;
vl_mensalidade_seg_w		double precision	:= 0;
nr_seq_seg_contrato_w		bigint;
qt_idade_w			smallint;
dt_adesao_seg_w			timestamp;
nr_seq_mensalidade_seg_w	bigint;
nr_parcela_segurado_w		bigint;
nr_parcela_contrato_w		bigint;
dt_rescisao_w			timestamp;
dt_reativacao_w			timestamp;
dt_referencia_w			timestamp;
nr_seq_segurado_w		bigint;
dt_alteracao_w			timestamp;
qt_conta_pos_estab_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_sca_w			bigint;
nr_seq_vinculo_sca_w		bigint;
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
ie_pos_estab_faturamento_w	varchar(255);
ie_pos_estab_fat_resc_w		varchar(255);
ie_forma_cobr_pos_estab_w	varchar(255);
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
vl_taxa_manutencao_w		pls_conta_pos_estab_taxa.vl_taxa_manutencao%type;
ie_tipo_taxa_ww			pls_conta_pos_estab_taxa.ie_tipo_taxa%type;
nr_seq_item_mensalidade_w	pls_mensalidade_seg_item.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.nr_seq_sca,
		c.ie_preco,
		sum(a.vl_beneficiario)
	from	pls_conta_pos_estabelecido	a,
		pls_conta 			b,
		pls_plano 			c
	where	a.nr_seq_conta		= b.nr_sequencia
	and	a.nr_seq_sca		= c.nr_sequencia
	and	coalesce(a.nr_seq_mensalidade_seg::text, '') = ''
	and	a.ie_cobrar_mensalidade	= 'S'
	and	coalesce(a.nr_seq_cooperativa::text, '') = ''
	and	b.nr_sequencia		= nr_seq_conta_p
	and	c.ie_preco in ('1','2','3')
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	not exists (	SELECT	1
				from	pls_mensalidade_seg_item x,
					pls_mensalidade_segurado y,
					pls_mensalidade w
				where	x.nr_seq_mensalidade_seg = y.nr_sequencia
				and	y.nr_seq_mensalidade	= w.nr_sequencia
				and	x.nr_seq_conta		= b.nr_sequencia
				and	coalesce(w.ie_cancelamento::text, '') = ''
				and	x.ie_tipo_item in ('4','6','7'))
	and	((dt_alteracao_w IS NOT NULL AND dt_alteracao_w::text <> '' AND dt_atendimento_referencia >= dt_alteracao_w) or (coalesce(dt_alteracao_w::text, '') = ''))
	group by a.nr_seq_sca,
		c.ie_preco;

C02 CURSOR FOR
	SELECT	b.nr_sequencia,
		trunc(months_between(clock_timestamp(), a.dt_nascimento) / 12),
		b.dt_contratacao
	from	pessoa_fisica	a,
		pls_segurado	b,
		pls_contrato	c
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	b.nr_seq_contrato	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_contrato_w
	
union all

	SELECT	b.nr_sequencia,
		trunc(months_between(clock_timestamp(), a.dt_nascimento) / 12),
		b.dt_contratacao
	from	pessoa_fisica	a,
		pls_segurado	b,
		pls_intercambio	c
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	b.nr_seq_intercambio	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_intercambio_w;

C03 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	vl_taxa_manutencao,
		CASE WHEN a.ie_tipo_taxa='1' THEN  '10' WHEN a.ie_tipo_taxa='2' THEN  '9'  ELSE null END  ie_tipo_taxa
	from	pls_conta_pos_estabelecido 	b,
		pls_conta_pos_estab_taxa 	a
	where	b.nr_seq_conta = nr_seq_conta_pc
	and	b.nr_sequencia = nr_seq_conta_pos_estab;


BEGIN
select	count(*)
into STRICT	qt_conta_pos_estab_w
from	pls_conta_pos_estabelecido	a,
	pls_conta			b
where	a.nr_seq_conta	= b.nr_sequencia
and	(a.nr_seq_sca IS NOT NULL AND a.nr_seq_sca::text <> '')
and	coalesce(a.nr_seq_cooperativa::text, '') = ''
and	b.nr_sequencia	= nr_seq_conta_p;

if (qt_conta_pos_estab_w > 0) then
	/* Obter dados do segurado */

	select	c.nr_seq_mensalidade,
		d.nr_seq_contrato,
		d.nr_seq_plano,
		d.dt_rescisao,
		d.dt_reativacao,
		c.dt_mesano_referencia,
		d.nr_sequencia,
		d.nr_seq_intercambio,
		trunc(a.dt_mesano_referencia,'month'),
		d.ie_tipo_segurado,
		d.cd_estabelecimento
	into STRICT	nr_seq_mensalidade_w,
		nr_seq_contrato_w,
		nr_seq_plano_w,
		dt_rescisao_w,
		dt_reativacao_w,
		dt_referencia_w,
		nr_seq_segurado_w,
		nr_seq_intercambio_w,
		dt_mesano_referencia_w,
		ie_tipo_segurado_w,
		cd_estabelecimento_w
	from	pls_segurado			d,
		pls_mensalidade_segurado	c,
		pls_mensalidade			b,
		pls_lote_mensalidade		a
	where	c.nr_seq_segurado		= d.nr_sequencia
	and	c.nr_seq_mensalidade		= b.nr_sequencia
	and	b.nr_seq_lote			= a.nr_sequencia
	and	c.nr_sequencia			= nr_seq_mensalidade_seg_p;

	select	max(ie_pos_estab_faturamento),
		max(ie_pos_estab_fat_resc)
	into STRICT	ie_pos_estab_faturamento_w,
		ie_pos_estab_fat_resc_w
	from	pls_parametros
	where	cd_estabelecimento	= cd_estabelecimento_w;
	
	/* Caso a forma de geracao de valores pos estabelecido depender de regra, o sistema ira verificar a regra atraves da function pls_obter_forma_cobr_pos_estab */

	if (ie_pos_estab_faturamento_w = 'R') then
		ie_forma_cobr_pos_estab_w	:= pls_obter_forma_cobr_pos_estab(cd_estabelecimento_w,ie_tipo_segurado_w);
		/* Se o resultado da regra para o tipo de beneficiario for F (Faturamento), e alterada a variavel de geracao do pos-estabelecido para "N" (Nao gerar na mensalidade) */

		if (ie_forma_cobr_pos_estab_w = 'F') then
			ie_pos_estab_faturamento_w	:= 'S';
		else
			ie_pos_estab_faturamento_w	:= 'N';
		end if;
	end if;
	
	if (coalesce(ie_pos_estab_faturamento_w,'N') = 'N') or
		((dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and (dt_mesano_referencia_w > dt_rescisao_w) and (coalesce(ie_pos_estab_fat_resc_w,'M') = 'M')) then
	
		select	max(a.dt_alteracao)
		into STRICT	dt_alteracao_w
		from	pls_segurado_alt_plano	a,
			pls_segurado		b
		where	a.nr_seq_segurado	= b.nr_sequencia
		and	a.ie_situacao 		= 'A'
		and	b.nr_sequencia		= nr_seq_segurado_w;

		/* Obter o protocolo da conta */

		select	coalesce(max(nr_seq_protocolo),0)
		into STRICT	nr_seq_protocolo_w
		from	pls_conta
		where	nr_sequencia	= nr_seq_conta_p;

		open C01;
		loop
		fetch C01 into	
			nr_seq_sca_w,
			ie_preco_pos_w,
			vl_total_liberado_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			select	max(nr_sequencia)
			into STRICT	nr_seq_vinculo_sca_w
			from	pls_sca_vinculo
			where	nr_seq_segurado	= nr_seq_segurado_w
			and	nr_seq_plano	= nr_seq_sca_w;
			
			if (ie_preco_pos_w = '2') then /* 7 - Preco pos-estabelecido por rateio */
				if (coalesce(nr_seq_intercambio_w,0) <> 0) then
					select	count(*)
					into STRICT	qt_conta_pos_estab_w
					from	pls_conta	a,
						pls_segurado	b,
						pls_intercambio	c
					where	a.nr_seq_segurado 	= b.nr_sequencia
					and	b.nr_seq_intercambio 	= c.nr_sequencia
					and	c.nr_sequencia		= nr_seq_intercambio_w;
				else
					select	count(*)
					into STRICT	qt_conta_pos_estab_w
					from	pls_conta	a,
						pls_segurado	b,
						pls_contrato	c
					where	a.nr_seq_segurado 	= b.nr_sequencia
					and	b.nr_seq_contrato 	= c.nr_sequencia
					and	c.nr_sequencia		= nr_seq_contrato_w;
				end if;
				
				if (qt_conta_pos_estab_w > 0) then
					if (coalesce(nr_seq_intercambio_w,0) <> 0) then
						select	sum(d.vl_beneficiario)
						into STRICT	vl_total_liberado_w
						from	pls_conta			a,
							pls_segurado			b,
							pls_intercambio			c,
							pls_conta_pos_estabelecido	d
						where	a.nr_seq_segurado 	= b.nr_sequencia
						and	b.nr_seq_intercambio 	= c.nr_sequencia
						and	d.nr_seq_conta		= a.nr_sequencia
						and	coalesce(d.nr_seq_cooperativa::text, '') = ''
						and	coalesce(d.nr_seq_mensalidade_seg::text, '') = ''
						and	(d.nr_seq_sca IS NOT NULL AND d.nr_seq_sca::text <> '')
						and	d.ie_cobrar_mensalidade	= 'S'
						and	coalesce(d.ie_situacao,'A') = 'A'
						and	c.nr_sequencia		= nr_seq_intercambio_w
						and	a.nr_sequencia		= nr_seq_conta_p;
					else
						select	sum(d.vl_beneficiario)
						into STRICT	vl_total_liberado_w
						from	pls_conta			a,
							pls_segurado			b,
							pls_contrato			c,
							pls_conta_pos_estabelecido	d
						where	a.nr_seq_segurado 	= b.nr_sequencia
						and	b.nr_seq_contrato 	= c.nr_sequencia
						and	d.nr_seq_conta		= a.nr_sequencia
						and	coalesce(d.nr_seq_cooperativa::text, '') = ''
						and	coalesce(d.nr_seq_mensalidade_seg::text, '') = ''
						and	(d.nr_seq_sca IS NOT NULL AND d.nr_seq_sca::text <> '')
						and	d.ie_cobrar_mensalidade	= 'S'
						and	coalesce(d.ie_situacao,'A') = 'A'
						and	c.nr_sequencia		= nr_seq_contrato_w
						and	a.nr_sequencia		= nr_seq_conta_p;
					end if;
				else
					if (coalesce(nr_seq_intercambio_w,0) <> 0) then
						select	sum(vl_total)
						into STRICT	vl_total_liberado_w
						from	pls_conta	a,
							pls_segurado	b,
							pls_intercambio	c
						where	a.nr_seq_segurado 	= b.nr_sequencia
						and	b.nr_seq_intercambio	= c.nr_sequencia
						and	c.nr_sequencia		= nr_seq_intercambio_w;
					else
						select	sum(vl_total)
						into STRICT	vl_total_liberado_w
						from	pls_conta	a,
							pls_segurado	b,
							pls_contrato	c
						where	a.nr_seq_segurado 	= b.nr_sequencia
						and	b.nr_seq_contrato 	= c.nr_sequencia
						and	c.nr_sequencia		= nr_seq_contrato_w;
					end if;
				end if;
				
				if (coalesce(nr_seq_intercambio_w,0) <> 0) then
					select	count(*)
					into STRICT	qt_beneficiarios_w
					from	pls_segurado	a,
						pls_intercambio	b
					where	a.nr_seq_intercambio	= b.nr_sequencia
					and	b.nr_sequencia		= nr_seq_intercambio_w
					and	coalesce(a.dt_rescisao::text, '') = '';
				else
					select	count(*)
					into STRICT	qt_beneficiarios_w
					from	pls_segurado	a,
						pls_contrato	b
					where	a.nr_seq_contrato	= b.nr_sequencia
					and	b.nr_sequencia		= nr_seq_contrato_w
					and	coalesce(a.dt_rescisao::text, '') = '';
				end if;
				
				vl_mensalidade_seg_w := dividir(vl_total_liberado_w,qt_beneficiarios_w);
				
				open C02;
				loop
				fetch C02 into	
					nr_seq_seg_contrato_w,
					qt_idade_w,
					dt_adesao_seg_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					select	nextval('pls_mensalidade_segurado_seq')
					into STRICT	nr_seq_mensalidade_seg_w
					;
					
					select (trunc(months_between(trunc(dt_mesano_referencia_w,'month'),trunc(dt_adesao_seg_w,'month'))) + 1),
						pls_obter_parcela_contrato(nr_seq_contrato_w,dt_mesano_referencia_w)
					into STRICT	nr_parcela_segurado_w,
						nr_parcela_contrato_w
					;
					
					insert into pls_mensalidade_segurado(nr_sequencia, dt_atualizacao, nm_usuario,
						nr_seq_segurado, vl_mensalidade, nr_seq_mensalidade,
						qt_idade, dt_mesano_referencia, nr_parcela,
						nr_seq_plano, nr_seq_contrato, nr_parcela_contrato,
						nr_seq_intercambio)
					values (nr_seq_mensalidade_seg_w, clock_timestamp(), nm_usuario_p,
						nr_seq_seg_contrato_w, 0, nr_seq_mensalidade_w, qt_idade_w,
						dt_mesano_referencia_w, nr_parcela_segurado_w, 
						nr_seq_plano_w, nr_seq_contrato_w, nr_parcela_contrato_w,
						nr_seq_intercambio_w);
					
					if (coalesce(vl_mensalidade_seg_w,0) > 0) then
					
						nr_seq_item_mensalidade_w := null;
					
						nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('7', nm_usuario_p, null, null, null, null, null, null, null, 'N', null, null, null, null, nr_seq_conta_p, null, null, nr_seq_mensalidade_seg_w, null, null, null, nr_seq_protocolo_w, null, null, null, null, null, nr_seq_vinculo_sca_w, null, null, null, vl_mensalidade_seg_w, nr_seq_item_mensalidade_w);

						if	(qt_conta_pos_estab_w > 0 AND nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '') then
							update	pls_conta_pos_estabelecido
							set	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_w,
								dt_atualizacao		= clock_timestamp(),
								nm_usuario		= nm_usuario_p
							where	nr_seq_conta		= nr_seq_conta_p
							and	(nr_seq_sca IS NOT NULL AND nr_seq_sca::text <> '')
							and	coalesce(nr_seq_cooperativa::text, '') = '';
							
							CALL pls_atualizar_item_faturado(nr_seq_conta_p, 1, nm_usuario_p);
						end if;	
					end if;
					end;
				end loop;
				close C02;
			elsif (ie_preco_pos_w = '3') then /* 6 - Preco pos-estabelecido por custo operacional */

				/*if	(dt_rescisao_w is null) and*/

				if (coalesce(vl_total_liberado_w,0) <> 0) then /*aaschlote  - gerei uma mensalidade, na qual um benefiiciario do pagadr nao possui conta medica, assim jogando nulo o valor da mensalidade*/
					nr_seq_item_mensalidade_w := null;
					
					nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('6', nm_usuario_p, null, null, null, null, null, null, null, 'N', null, null, null, null, nr_seq_conta_p, null, null, nr_seq_mensalidade_seg_p, null, null, null, nr_seq_protocolo_w, null, null, null, null, null, nr_seq_vinculo_sca_w, null, null, null, vl_total_liberado_w, nr_seq_item_mensalidade_w);
				end if;
			elsif (ie_preco_pos_w = '1') and (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '')then /*Tratado com o Diogo, pois existe a regra para gerar pos estabelecido para benefiicario rescindido */
				if (coalesce(vl_total_liberado_w,0) <> 0) then
					nr_seq_item_mensalidade_w := null;
					
					nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('6', nm_usuario_p, null, null, null, null, null, null, null, 'N', null, null, null, null, nr_seq_conta_p, null, null, nr_seq_mensalidade_seg_p, null, null, null, nr_seq_protocolo_w, null, null, null, null, null, nr_seq_vinculo_sca_w, null, null, null, vl_total_liberado_w, nr_seq_item_mensalidade_w);
				end if;
			end if;
			end;
		end loop;
		close C01;
		
		if (ie_preco_pos_w in ('2','3')) then
			open C03(nr_seq_conta_p);
			loop
			fetch C03 into	
				vl_taxa_manutencao_w,
				ie_tipo_taxa_ww;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
					nr_seq_item_mensalidade_w := null;
				
					nr_seq_item_mensalidade_w := pls_insert_mens_seg_item(ie_tipo_taxa_ww, nm_usuario_p, null, null, null, null, null, null, null, 'N', null, null, null, null, nr_seq_conta_p, null, null, nr_seq_mensalidade_seg_p, null, null, null, nr_seq_protocolo_w, null, null, null, null, null, nr_seq_vinculo_sca_w, null, null, null, vl_taxa_manutencao_w, nr_seq_item_mensalidade_w);	
				end;
			end loop;
			close C03;
		end if;
	end if;
end if;

/* Nao pode dar commit nesta procedure */


--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mens_pos_estab_sca ( nr_seq_mensalidade_seg_p bigint, nr_seq_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

