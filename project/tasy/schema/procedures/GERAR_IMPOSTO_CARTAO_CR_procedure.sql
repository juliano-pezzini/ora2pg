-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_imposto_cartao_cr ( nr_seq_movto_cartao_p bigint, cd_estabelecimento_p bigint, dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


cd_tributo_w				tributo.cd_tributo%type;
nr_seq_bandeira_w			movto_cartao_cr.nr_seq_bandeira%type;
nr_seq_forma_pagto_w		movto_cartao_cr.nr_seq_forma_pagto%type;
cd_empresa_w				estabelecimento.cd_empresa%type;
cd_pessoa_fisica_w			movto_cartao_cr.cd_pessoa_fisica%type;
cd_cgc_w					movto_cartao_cr.cd_cgc%type;
nr_sequencia_w				fis_reg_trib_cartao.nr_sequencia%type;
cd_tributo_regra_w			fis_reg_trib_cartao.cd_tributo%type;
tx_tributo_w				fis_reg_trib_cartao.tx_tributo%type;
nr_seq_trans_financ_w		fis_reg_trib_cartao.nr_seq_trans_financ%type;
vl_despesa_w				movto_cartao_cr_parcela.vl_despesa%type;
vl_imposto_w				movto_cartao_cr_trib.vl_imposto%type;
nr_seq_parcela_w			movto_cartao_cr_parcela.nr_sequencia%type;
vl_total_despesa_w			movto_cartao_cr_parcela.vl_despesa%type;



/*
Rotina para calcular o imposto sobre o movimento de cartão
Essa rotina foi criada para atender as necessidades do méxico para o IVA.
Esse imposto é gerado sobre o valor de despesa do cartão.
Como a despesa é calculada apenas na geração da parcela do cartão, essa rotina deve ser chamada após o calculo das parcelas do cartao.
*/
/*Cursor para ler os tributos*/

C01 CURSOR FOR
	SELECT	a.cd_tributo
	from	tributo a
	where	a.ie_situacao = 'A'
	and		a.ie_pf_pj in ('A',CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN 'PJ'  ELSE 'PF' END )
	and (coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p)
	and		not exists (SELECT 1 --nao trazer o tributo caso ja existir o mesmo gerado no cartao
						from	movto_cartao_cr_trib x
						where	x.cd_tributo = a.cd_tributo
						and		x.nr_seq_movto_cartao = nr_seq_movto_cartao_p)
	order by a.cd_tributo;

/*Cursor para ler as regras de cartao dos tributos.*/

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.cd_tributo,
			a.tx_tributo,
			a.nr_seq_trans_financ
	from	fis_reg_trib_cartao a
	where	a.cd_tributo 										= cd_tributo_w
	and		a.cd_empresa										= cd_empresa_w
	and (coalesce(a.cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p)
	and (coalesce(a.nr_seq_bandeira, nr_seq_bandeira_w) 			= nr_seq_bandeira_w)
	and (coalesce(a.nr_seq_forma_pagto, nr_seq_forma_pagto_w) 	= nr_seq_forma_pagto_w)
	and		trunc(coalesce(dt_referencia_p, clock_timestamp()), 'dd') between trunc(coalesce(a.dt_inicio_vigencia, coalesce(dt_referencia_p, clock_timestamp())), 'dd') and
															   trunc(coalesce(a.dt_fim_vigencia, coalesce(dt_referencia_p, clock_timestamp())), 'dd')
	order by a.nr_sequencia;

/*Cursor para buscar as parcelas do cartao.*/

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.vl_despesa
	from	movto_cartao_cr_parcela a
	where	a.nr_seq_movto	= nr_seq_movto_cartao_p
	order by a.nr_sequencia;


BEGIN

if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then

	select	max(cd_empresa)
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_p;

end if;

if (nr_seq_movto_cartao_p IS NOT NULL AND nr_seq_movto_cartao_p::text <> '') then

	/*OS 1462244 - Excluir os tributos antes de gerar novamente.*/

	delete	FROM movto_cartao_cr_trib
	where	nr_seq_movto_cartao = nr_seq_movto_cartao_p;

	select	max(a.nr_seq_bandeira),
			max(a.nr_seq_forma_pagto),
			max(a.cd_pessoa_fisica),
			max(a.cd_cgc)
	into STRICT	nr_seq_bandeira_w,
			nr_seq_forma_pagto_w,
			cd_pessoa_fisica_w,
			cd_cgc_w
	from	movto_cartao_cr a
	where	a.nr_sequencia = nr_seq_movto_cartao_p;

	open C01;
	loop
	fetch C01 into
		cd_tributo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		open C02;
		loop
		fetch C02 into
			nr_sequencia_w,
			cd_tributo_regra_w,
			tx_tributo_w,
			nr_seq_trans_financ_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			/*Como o imposto é calculado sobre o valor de despesa do cartao, neste cursor faz apenas o update no valor de imposto na parcela*/

			open C03;
			loop
			fetch C03 into
				nr_seq_parcela_w,
				vl_despesa_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin

				if (coalesce(vl_despesa_w,0) > 0) and (coalesce(tx_tributo_w,0) > 0) then

					vl_imposto_w := vl_despesa_w * (tx_tributo_w / 100);

					update	movto_cartao_cr_parcela a
					set		a.vl_imposto	= coalesce(a.vl_imposto,0) + vl_imposto_w,
							a.vl_liquido	= coalesce(a.vl_liquido,0) - coalesce(vl_imposto_w,0), -- OS 1721742 tratado para deduzir o imposto do valor liquido
							a.vl_saldo_liquido = coalesce(a.vl_saldo_liquido,0) - coalesce(vl_imposto_w,0) -- OS 1721742 tratado para deduzir o imposto do valor de saldo
					where	a.nr_sequencia	= nr_seq_parcela_w
					and		a.nr_seq_movto	= nr_seq_movto_cartao_p;

				end if;

				end;
			end loop;
			close C03;

		/*Apos incluir o valor de imposto em todas as parcelas e fechar o cursor que faz isso, quando voltar a cursor 2 da regra, entao inserir o tributo na movimentacao de cartao*/

		select	coalesce(sum(a.vl_despesa),0)
		into STRICT	vl_total_despesa_w
		from	movto_cartao_cr_parcela a
		where	a.nr_seq_movto	= nr_seq_movto_cartao_p;

		vl_imposto_w := vl_total_despesa_w * (tx_tributo_w / 100);

		insert into	movto_cartao_cr_trib(	nr_sequencia,
											cd_estabelecimento,
											cd_tributo,
											dt_atualizacao,
											dt_atualizacao_nrec,
											nm_usuario,
											nm_usuario_nrec,
											nr_seq_movto_cartao,
											nr_seq_regra,
											nr_seq_trans_financ,
											vl_imposto,
											tx_tributo)
								values (	nextval('movto_cartao_cr_trib_seq'),
											cd_estabelecimento_p,
											cd_tributo_w,
											clock_timestamp(),
											clock_timestamp(),
											nm_usuario_p,
											nm_usuario_p,
											nr_seq_movto_cartao_p,
											nr_sequencia_w,
											nr_seq_trans_financ_w,
											coalesce(vl_imposto_w,0),
											tx_tributo_w);

			end;
		end loop;
		close C02;

		end;
	end loop;
	close C01;

end if;

--commit; O COMMIT OCORRE NA gerar_cartao_cr_parcela
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_imposto_cartao_cr ( nr_seq_movto_cartao_p bigint, cd_estabelecimento_p bigint, dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

