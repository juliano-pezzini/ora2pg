-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adiciona_lista_espera ( cd_tipo_agenda_p bigint, nr_sequencia_p bigint, dt_desejada_p timestamp, ds_observacao_p text, ie_urgente_p text, nm_usuario_p text, dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, nr_seq_lista_espera_p INOUT bigint, nr_seq_waiting_list_type_p bigint) AS $body$
DECLARE



dt_periodo_inicial_w    timestamp;
dt_periodo_final_w      timestamp;
dt_desejada_w           timestamp;
dt_agenda_w             timestamp;
nr_seq_lista_espera_w   bigint;
nr_minuto_duracao_w     bigint;
cd_depto_medico_w       agenda_lista_espera.cd_departamento_medico%type;
cd_depto_medico_exec_w  agenda_paciente_auxiliar.cd_depto_medico%type;
ie_posicao_w			agenda_paciente_auxiliar.ie_posicao%type;
nr_seq_lista_w          agenda_paciente.nr_seq_lista%type;


BEGIN
dt_periodo_inicial_w := dt_periodo_inicial_p;
dt_periodo_final_w := dt_periodo_final_p;
dt_desejada_w := dt_desejada_p;

select  nextval('agenda_lista_espera_seq')
into STRICT    nr_seq_lista_espera_w
;

select max(nr_seq_lista)
into STRICT nr_seq_lista_w
from agenda_paciente
where nr_sequencia = nr_sequencia_p;

if (nr_seq_lista_w IS NOT NULL AND nr_seq_lista_w::text <> '') then
  select max(cd_departamento_medico)
  into STRICT cd_depto_medico_w
  from agenda_lista_espera
  where nr_sequencia = nr_seq_lista_w;
end if;

select  max(cd_depto_medico),
		max(ie_posicao)
into STRICT    cd_depto_medico_exec_w,
		ie_posicao_w
from    agenda_paciente_auxiliar
where   nr_sequencia_p = nr_seq_agenda;

if (obter_sigla_pais_locale(nm_usuario_p) in ('de_DE', 'de_AT'))then
    select  coalesce(max(a.nr_minuto_duracao),0)
    into STRICT    nr_minuto_duracao_w
    from    agenda_paciente a
    where   a.nr_sequencia = nr_sequencia_p;
else
    nr_minuto_duracao_w := null;
end if;


if (cd_tipo_agenda_p in (3,4,5)) then

	select	max(dt_agenda)
	into STRICT	dt_agenda_w
	from	agenda_consulta
	where	nr_sequencia = nr_sequencia_p;

	insert into agenda_lista_espera(	nr_sequencia,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nm_usuario,
		cd_agenda,
		dt_agendamento,
		nm_usuario_agenda,
		dt_desejada,
		cd_pessoa_fisica,
		nm_pessoa_lista,
		nr_telefone,
		nm_pessoa_contato,
		cd_convenio,
		cd_categoria,
		cd_plano,
		ds_observacao,
		ie_status_espera,
		NR_SEQ_AGECONS,
		nr_seq_agenda,
		ie_urgente,
		ie_classif_agenda,
		dt_periodo_inicial,
		dt_periodo_final,
		dt_agenda_origem,
		ie_autorizacao,
		nr_doc_convenio,
		cd_senha,
		cd_cid,
		cd_usuario_convenio,
		dt_validade_carteira,
		cd_medico,
		cd_medico_exec,
		cd_procedencia,
		cd_setor_atendimento,
		nr_seq_waiting_list_type,
    nr_minuto_duracao)
	SELECT 	nr_seq_lista_espera_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_agenda,
		clock_timestamp(),
		nm_usuario_p,
		dt_desejada_p,
		cd_pessoa_fisica,
		substr(CASE WHEN coalesce(nm_paciente::text, '') = '' THEN  Obter_nome_pf(cd_pessoa_fisica)  ELSE nm_paciente END ,1,60),
		nr_telefone,
		nm_pessoa_contato,
		cd_convenio,
		cd_categoria,
		cd_plano,
		coalesce(ds_observacao_p,ds_observacao),
		'A',
		nr_sequencia_p,
		null,
		coalesce(ie_urgente_p,'N'),
		ie_classif_agenda,
		dt_periodo_inicial_w,
		dt_periodo_final_w,
		dt_agenda_w,
		ie_autorizacao,
		nr_doc_convenio,
		cd_senha,
		cd_cid,
		cd_usuario_convenio,
		dt_validade_carteira,
		cd_medico_req,
		cd_medico_req,
		cd_procedencia,
		cd_setor_atendimento,
		nr_seq_waiting_list_type_p,
    nr_minuto_duracao_w
	from 	agenda_consulta
	where 	nr_sequencia = nr_sequencia_p;
elsif (cd_tipo_agenda_p in (1,2)) then

	insert into agenda_lista_espera(	
			nr_sequencia,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_atualizacao,
			nm_usuario,
			cd_agenda,
			dt_agendamento,
			nm_usuario_agenda,
			dt_desejada,
			cd_pessoa_fisica,
			nm_pessoa_lista,
			nr_telefone,
			nm_pessoa_contato,
			cd_convenio,
			cd_categoria,
			ds_observacao,
			ie_status_espera,
			NR_SEQ_AGECONS,
			nr_seq_agenda,
			ie_urgente,
			dt_periodo_inicial,
			dt_periodo_final,
			ie_forma_agendamento,
			cd_setor_atendimento,
			cd_medico_exec,
			ie_lado,
			cd_empresa_ref,
			nr_doc_convenio,
			cd_plano,
			dt_validade_carteira,
			cd_usuario_convenio,
			cd_procedencia,
			qt_peso,
			qt_altura_cm,
			nr_Seq_classif_agenda,
			nr_seq_indicacao,
			nr_seq_proc_interno,
			cd_medico,
			cd_procedimento,
			ie_origem_proced,
			ie_autorizacao,
			nr_seq_waiting_list_type,
			nr_minuto_duracao,
			nr_atendimento,
			cd_departamento_medico,
			cd_departamento_medico_exec,
			ie_posicao)
	SELECT 	nr_seq_lista_espera_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_agenda,
			clock_timestamp(),
			nm_usuario_p,
			dt_desejada_p,
			cd_pessoa_fisica,
			substr(CASE WHEN coalesce(nm_paciente::text, '') = '' THEN  Obter_nome_pf(cd_pessoa_fisica)  ELSE nm_paciente END ,1,60),
			nr_telefone,
			nm_pessoa_contato,
			cd_convenio,
			cd_categoria,
			substr(ds_observacao,1,2000),
			'A',
			null,
			nr_sequencia_p,
			(SELECT coalesce(a.ie_urgente,'N')
			 from   agenda_paciente_classif a,
					agenda_paciente b 
			 where  a.nr_sequencia = b.NR_SEQ_CLASSIF_AGENDA
			 and b.nr_sequencia = nr_sequencia_p) ie_urgente_p,
			dt_periodo_inicial_w,
			dt_periodo_final_w,
			ie_forma_agendamento,
			cd_setor_atendimento,
			cd_medico,
			ie_lado,
			cd_empresa_ref,
			nr_doc_convenio,
			cd_plano,
			dt_validade_carteira,
			cd_usuario_convenio,
			cd_procedencia,
			qt_peso,
			qt_altura_cm,
			nr_Seq_classif_agenda,
			nr_seq_indicacao,
			nr_seq_proc_interno,
			cd_medico,
			cd_procedimento,
			ie_origem_proced,
			ie_autorizacao,
			nr_seq_waiting_list_type_p,
			nr_minuto_duracao_w,
			nr_atendimento,
			cd_depto_medico_w,
			cd_depto_medico_exec_w,
			ie_posicao_w
	from 	agenda_paciente
	where 	nr_sequencia = nr_sequencia_p;

	if (cd_tipo_agenda_p = 1) then 
		CALL transf_proc_waiting_list(nr_sequencia_p, nr_seq_lista_espera_w, 'S');
		CALL transf_equip_waiting_list(nr_sequencia_p, nr_seq_lista_espera_w, 'S');
		CALL transf_prof_waiting_list(nr_sequencia_p, nr_seq_lista_espera_w, 'S');
	end if;
end if;

nr_seq_lista_espera_p := nr_seq_lista_espera_w;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adiciona_lista_espera ( cd_tipo_agenda_p bigint, nr_sequencia_p bigint, dt_desejada_p timestamp, ds_observacao_p text, ie_urgente_p text, nm_usuario_p text, dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, nr_seq_lista_espera_p INOUT bigint, nr_seq_waiting_list_type_p bigint) FROM PUBLIC;

