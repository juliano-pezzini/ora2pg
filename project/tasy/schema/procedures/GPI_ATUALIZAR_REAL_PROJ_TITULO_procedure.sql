-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gpi_atualizar_real_proj_titulo ( nr_seq_projeto_p bigint, nr_seq_orcamento_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_titulo_w		bigint;
nr_seq_etapa_gpi_w	bigint;
nr_seq_proj_gpi_w		bigint;
nr_seq_orcamento_w	bigint;
nr_seq_conta_gpi_w	bigint;
qt_registro_w		bigint;
vl_realizado_w		double precision;
vl_titulo_w		double precision;
nr_seq_orc_item_gpi_w	bigint;


c01 CURSOR FOR
SELECT	a.nr_titulo,
	a.nr_seq_proj_gpi,
	a.nr_seq_etapa_gpi,
	a.nr_seq_conta_gpi,
	a.vl_titulo,
	a.nr_seq_orc_item_gpi
from	titulo_pagar a
where	a.nr_seq_proj_gpi	= nr_seq_projeto_p
and	(a.nr_seq_etapa_gpi IS NOT NULL AND a.nr_seq_etapa_gpi::text <> '')
and	(a.nr_seq_conta_gpi IS NOT NULL AND a.nr_seq_conta_gpi::text <> '')
and	coalesce(a.vl_titulo, 0) <> 0
and	not exists (	select	1
			from	nota_fiscal_item y,
				nota_fiscal x
			where	x.nr_sequencia	= y.nr_sequencia
			and	x.nr_sequencia	= a.nr_seq_nota_fiscal
			and	(y.nr_seq_proj_gpi IS NOT NULL AND y.nr_seq_proj_gpi::text <> ''))

union

select	a.nr_titulo,
	a.nr_seq_proj_gpi,
	a.nr_seq_etapa_gpi,
	a.nr_seq_conta_gpi,
	a.vl_titulo,
	a.nr_seq_orc_item_gpi
from	titulo_pagar b,
	titulo_pagar_classif a
where	b.nr_titulo		= a.nr_titulo
and	a.nr_seq_proj_gpi	= nr_seq_projeto_p
and	(a.nr_seq_etapa_gpi IS NOT NULL AND a.nr_seq_etapa_gpi::text <> '')
and	(a.nr_seq_conta_gpi IS NOT NULL AND a.nr_seq_conta_gpi::text <> '')
and	coalesce(a.vl_titulo, 0) <> 0
and	not exists (	select	1
			from	nota_fiscal_item y,
				nota_fiscal x
			where	x.nr_sequencia	= y.nr_sequencia
			and	x.nr_sequencia	= b.nr_seq_nota_fiscal
			and	(y.nr_seq_proj_gpi IS NOT NULL AND y.nr_seq_proj_gpi::text <> ''));


BEGIN

nr_seq_orcamento_w	:= nr_seq_orcamento_p;

open C01;
loop
fetch C01 into
	nr_titulo_w,
	nr_seq_proj_gpi_w,
	nr_seq_etapa_gpi_w,
	nr_seq_conta_gpi_w,
	vl_titulo_w,
	nr_seq_orc_item_gpi_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	vl_realizado_w		:= vl_titulo_w;

	select	count(*)
	into STRICT	qt_registro_w
	from	gpi_orc_item b,
		gpi_orcamento a
	where	a.nr_sequencia					= b.nr_seq_orcamento
	and	coalesce(b.nr_seq_etapa, nr_seq_etapa_gpi_w)		= nr_seq_etapa_gpi_w;

	if (qt_registro_w = 0)and (coalesce(nr_seq_orc_item_gpi_w::text, '') = '')then


		insert into gpi_orc_item(
			nr_sequencia,
			nr_seq_orcamento,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_plano,
			vl_orcado,
			nr_seq_etapa,
			vl_realizado,
			ie_origem_orc,
			ie_origem_real)
		values (	nextval('gpi_orc_item_seq'),
			nr_seq_orcamento_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_conta_gpi_w,
			0,
			nr_seq_etapa_gpi_w,
			vl_realizado_w,
			'',
			'TP');

	else


		update	gpi_orc_item
		set	vl_realizado				= coalesce(vl_realizado,0) + vl_realizado_w,
			ie_origem_real				= 'TP'
		where	nr_seq_orcamento			= nr_seq_orcamento_w
		and	coalesce(nr_seq_etapa, nr_seq_etapa_gpi_w)	= nr_seq_etapa_gpi_w
		and	nr_sequencia				= nr_seq_orc_item_gpi_w;



	end if;


	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gpi_atualizar_real_proj_titulo ( nr_seq_projeto_p bigint, nr_seq_orcamento_p bigint, nm_usuario_p text) FROM PUBLIC;

