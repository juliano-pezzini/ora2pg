-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_itens_regra_copart ( nr_seq_regra_ant_p bigint, nr_seq_regra_nova_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


nr_seq_regra_aprop_w	pls_regra_copartic_aprop.nr_sequencia%type;
nr_seq_regra_benef_w	pls_regra_copartic_benef.nr_sequencia%type;
nr_seq_regra_conta_w	pls_regra_copartic_conta.nr_sequencia%type;
nr_seq_regra_util_w	pls_regra_copartic_util.nr_sequencia%type;
nr_seq_regra_prest_w	pls_regra_copartic_prest.nr_sequencia%type;
nr_seq_regra_guia_w	pls_regra_copartic_guia.nr_sequencia%type;
nr_seq_regra_inter_w	pls_regra_copartic_interna.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_copartic_aprop
	where	nr_seq_regra	= nr_seq_regra_ant_p;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_copartic_benef
	where	nr_seq_regra	= nr_seq_regra_ant_p;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_copartic_conta
	where	nr_seq_regra	= nr_seq_regra_ant_p;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_copartic_util
	where	nr_seq_regra	= nr_seq_regra_ant_p;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_copartic_prest
	where	nr_seq_regra	= nr_seq_regra_ant_p;

C06 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_copartic_guia
	where	nr_seq_regra	= nr_seq_regra_ant_p;

C07 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_copartic_interna
	where	nr_seq_regra	= nr_seq_regra_ant_p;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_regra_aprop_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert	into	pls_regra_copartic_aprop(	nr_sequencia,
			nr_seq_regra,
			nr_seq_centro_apropriacao,
			ie_tipo_apropriacao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			vl_apropriacao,
			tx_apropriacao)
		(SELECT	nextval('pls_regra_copartic_aprop_seq'),
			nr_seq_regra_nova_p,
			nr_seq_centro_apropriacao,
			ie_tipo_apropriacao,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			vl_apropriacao,
			tx_apropriacao
		from	pls_regra_copartic_aprop
		where	nr_sequencia	= nr_seq_regra_aprop_w);
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_regra_benef_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	insert	into	pls_regra_copartic_benef(	nr_sequencia,
			nr_seq_regra,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_titularidade,
			nr_seq_plano,
			qt_idade_min,
			qt_idade_max,
			ie_tipo_parentesco,
			dt_contrato_de,
			dt_contrato_ate,
			nr_faixa_salarial_inicial,
			nr_faixa_salarial_final)
		(SELECT	nextval('pls_regra_copartic_benef_seq'),
			nr_seq_regra_nova_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ie_titularidade,
			nr_seq_plano,
			qt_idade_min,
			qt_idade_max,
			ie_tipo_parentesco,
			dt_contrato_de,
			dt_contrato_ate,
			nr_faixa_salarial_inicial,
			nr_faixa_salarial_final
		from	pls_regra_copartic_benef
		where	nr_sequencia	= nr_seq_regra_benef_w);
	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_seq_regra_conta_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	insert	into	pls_regra_copartic_conta(	nr_sequencia,
			nr_seq_regra,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_tipo_atendimento,
			ie_forma_cobr_internacao)
		(SELECT	nextval('pls_regra_copartic_conta_seq'),
			nr_seq_regra_nova_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ie_tipo_atendimento,
			ie_forma_cobr_internacao
		from	pls_regra_copartic_conta
		where	nr_sequencia	= nr_seq_regra_conta_w);
	end;
end loop;
close C03;

open C04;
loop
fetch C04 into
	nr_seq_regra_util_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin
	insert	into	pls_regra_copartic_util(	nr_sequencia,
			nr_seq_regra,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			qt_evento_minimo,
			qt_evento_maximo,
			ie_tipo_data_consistencia,
			qt_periodo_ocorrencia,
			ie_tipo_periodo_ocor,
			nr_seq_grupo_serv,
			ie_eventos_incidencia)
		(SELECT	nextval('pls_regra_copartic_util_seq'),
			nr_seq_regra_nova_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			qt_evento_minimo,
			qt_evento_maximo,
			ie_tipo_data_consistencia,
			qt_periodo_ocorrencia,
			ie_tipo_periodo_ocor,
			nr_seq_grupo_serv,
			ie_eventos_incidencia
		from	pls_regra_copartic_util
		where	nr_sequencia	= nr_seq_regra_util_w);
	end;
end loop;
close C04;

open C05;
loop
fetch C05 into
	nr_seq_regra_prest_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin
	insert	into	pls_regra_copartic_prest(	nr_sequencia,
			nr_seq_regra,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_prestador_cooperado,
			nr_seq_prestador_atend,
			nr_seq_tipo_prestador_atend)
		(SELECT	nextval('pls_regra_copartic_prest_seq'),
			nr_seq_regra_nova_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ie_prestador_cooperado,
			nr_seq_prestador_atend,
			nr_seq_tipo_prestador_atend
		from	pls_regra_copartic_prest
		where	nr_sequencia	= nr_seq_regra_prest_w);
	end;
end loop;
close C05;

open C06;
loop
fetch C06 into
	nr_seq_regra_guia_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	begin
	insert	into	pls_regra_copartic_guia(	nr_sequencia,
			nr_seq_regra,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_controle_interno,
			ie_tipo_atend_tiss)
		(SELECT	nextval('pls_regra_copartic_guia_seq'),
			nr_seq_regra_nova_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_controle_interno,
			ie_tipo_atend_tiss
		from	pls_regra_copartic_guia
		where	nr_sequencia	= nr_seq_regra_guia_w);
	end;
end loop;
close C06;

open C07;
loop
fetch C07 into
	nr_seq_regra_inter_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin
	insert	into	pls_regra_copartic_interna(	nr_sequencia,
			nr_seq_regra,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_clinica,
			qt_diaria_inicial,
			qt_diaria_final)
		(SELECT	nextval('pls_regra_copartic_interna_seq'),
			nr_seq_regra_nova_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_clinica,
			qt_diaria_inicial,
			qt_diaria_final
		from	pls_regra_copartic_interna
		where	nr_sequencia	= nr_seq_regra_inter_w);
	end;
end loop;
close C07;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_itens_regra_copart ( nr_seq_regra_ant_p bigint, nr_seq_regra_nova_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

