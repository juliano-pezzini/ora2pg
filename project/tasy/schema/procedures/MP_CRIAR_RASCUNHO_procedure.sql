-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mp_criar_rascunho (nr_seq_processo_p bigint, nm_usuario_p text, nr_seq_novo_processo_p INOUT bigint) AS $body$
DECLARE


nr_sequencia_w			bigint;
qt_registro_w			bigint;
ie_status_versao_w		varchar(2);
ds_processo_w			text;
ds_objeto_w			text;
nr_seq_proc_objeto_w		bigint;
nr_seq_proc_objeto_novo_w	bigint;
nr_seq_proc_raia_w		bigint;
nr_seq_processo_doc_w		bigint;
nr_seq_proc_unid_org_w		bigint;
nr_seq_proc_regra_equip_w	bigint;
nr_seq_recurso_w		bigint;
nr_seq_obj_ref_w		bigint;
ie_tipo_ref_w			varchar(1);
nr_seq_proc_obj_unid_org_w	bigint;
nr_seq_tarefa_w			bigint;
nr_seq_proc_objeto_pai_w	bigint;
nr_seq_processo_ref_w		bigint;

/* Objetos em tela */

c01 CURSOR FOR
SELECT	a.nr_sequencia
from	mp_processo_objeto a
where	nr_seq_processo	= nr_seq_processo_p
order by
	CASE WHEN coalesce(nr_seq_obj_origem::text, '') = '' THEN 2  ELSE 1 END;

c02 CURSOR FOR
SELECT	a.nr_sequencia
from	mp_processo_raia a
where	nr_seq_processo	= nr_seq_processo_p;

/* Tabelas filhas do processo */

c03 CURSOR FOR
SELECT	a.nr_sequencia
from	mp_processo_doc a
where	a.nr_seq_processo	= nr_seq_processo_p;

c04 CURSOR FOR
SELECT	a.nr_sequencia
from	mp_processo_unid_org a
where	a.nr_seq_processo	= nr_seq_processo_p;

c05 CURSOR FOR
SELECT	a.nr_sequencia
from	mp_proc_regra_equip a
where	a.nr_seq_proc		= nr_seq_processo_p;

/* Tabelas filhas da atividade */

c06 CURSOR FOR
SELECT	a.nr_sequencia
from	mp_processo_doc a
where	a.nr_seq_proc_obj	= nr_seq_proc_objeto_w;

c07 CURSOR FOR
SELECT	a.nr_sequencia
from	mp_processo_obj_rec a
where	a.nr_seq_obj_proc	= nr_seq_proc_objeto_w;

c08 CURSOR FOR
SELECT	a.nr_sequencia,
	'O'
from	mp_proc_obj_ref a
where	a.nr_seq_proc_obj_origem	= nr_seq_proc_objeto_w

union all

select	a.nr_sequencia,
	'D'
from	mp_proc_obj_ref a
where	a.nr_seq_proc_obj_destino	= nr_seq_proc_objeto_w;

c09 CURSOR FOR
SELECT	a.nr_sequencia
from	mp_proc_obj_unid_org a
where	a.nr_seq_proc_obj		= nr_seq_proc_objeto_w;

c10 CURSOR FOR
SELECT	a.nr_sequencia
from	mp_tarefa a
where	a.nr_seq_proc_objeto		= nr_seq_proc_objeto_w;


BEGIN

if (nr_seq_processo_p IS NOT NULL AND nr_seq_processo_p::text <> '') then

	select	count(*)
	into STRICT	qt_registro_w
	from	mp_processo
	where	ie_status_versao	in ('R','E')
	and	nr_seq_origem		= nr_seq_processo_p;

	if (qt_registro_w > 0) then
		-- Já existe uma revisão para esse processo!
		CALL wheb_mensagem_pck.exibir_mensagem_abort(267095);
	end if;

	select	ie_status_versao,
		ds_processo
	into STRICT	ie_status_versao_w,
		ds_processo_w
	from	mp_processo
	where	nr_sequencia	= nr_seq_processo_p;

	if (ie_status_versao_w in ('R','E')) then
		-- O processo atual já é uma revisão, não é permitido criar outra revisão a partir dele.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(267096);
	end if;

	select	nextval('mp_processo_seq')
	into STRICT	nr_sequencia_w
	;


	insert	into	mp_processo(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		cd_empresa,
		cd_estabelecimento,
		nm_processo,
		ie_status_versao,
		ie_tipo_mapeamento,
		nr_seq_apres,
		nr_seq_objeto,
		nr_seq_origem,
		nr_seq_superior)
	SELECT	nr_sequencia_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		cd_empresa,
		cd_estabelecimento,
		nm_processo,
		'E',
		ie_tipo_mapeamento,
		nr_seq_apres,
		nr_seq_objeto,
		nr_seq_processo_p,
		nr_seq_superior
	from	mp_processo
	where	nr_sequencia	= nr_seq_processo_p;

	update	mp_processo
	set	ds_processo	= ds_processo_w
	where	nr_sequencia	= nr_sequencia_w;

	/* Atualizar referencias superiores */

	insert	into	mp_processo_objeto(ds_cor,
		ds_lista_pontos,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_objeto,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_apres,
		nr_seq_objeto,
		nr_seq_processo,
		nr_sequencia,
		qt_altura,
		qt_esquerda,
		qt_largura,
		qt_topo,
		nr_seq_obj_origem,
		nr_seq_obj_destino,
		nr_seq_processo_ref)
	SELECT	ds_cor,
		ds_lista_pontos,
		clock_timestamp(),
		clock_timestamp(),
		nm_objeto,
		nm_usuario_p,
		nm_usuario_p,
		nr_seq_apres,
		nr_seq_objeto,
		nr_seq_processo,
		nextval('mp_processo_objeto_seq'),
		qt_altura,
		qt_esquerda,
		qt_largura,
		qt_topo,
		nr_seq_obj_origem,
		nr_seq_obj_destino,
		nr_sequencia_w
	from	mp_processo_objeto
	where	nr_seq_processo_ref	= nr_seq_processo_p;


	/*Copiar tabelas filhas do processo */

	open c03;
	loop
	fetch c03 into
		nr_seq_processo_doc_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		insert	into	mp_processo_doc(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_processo,
			nr_seq_documento)
		SELECT	nextval('mp_processo_doc_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_sequencia_w,
			nr_seq_documento
		from	mp_processo_doc
		where	nr_sequencia	= nr_seq_processo_doc_w;
	end loop;
	close c03;

	open c04;
	loop
	fetch c04 into
		nr_seq_proc_unid_org_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		insert	into	mp_processo_unid_org(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_processo,
			nr_seq_unid_org)
		SELECT	nextval('mp_processo_unid_org_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_sequencia_w,
			nr_seq_unid_org
		from	mp_processo_unid_org
		where	nr_sequencia	= nr_seq_proc_unid_org_w;
	end loop;
	close c04;

	open c05;
	loop
	fetch c05 into
		nr_seq_proc_regra_equip_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		insert	into	mp_proc_regra_equip(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_proc,
			cd_setor_atendimento,
			cd_cargo,
			nr_seq_equipe,
			cd_pessoa_fisica)
		SELECT	nextval('mp_proc_regra_equip_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_sequencia_w,
			cd_setor_atendimento,
			cd_cargo,
			nr_seq_equipe,
			cd_pessoa_fisica
		from	mp_proc_regra_equip
		where	nr_sequencia	= nr_seq_proc_regra_equip_w;
	end loop;
	close c05;


	/* Copiar objetos */

	open c01;
	loop
	fetch c01 into
		nr_seq_proc_objeto_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		select	ds_objeto
		into STRICT	ds_objeto_w
		from	mp_processo_objeto
		where	nr_sequencia	= nr_seq_proc_objeto_w;

		select	nextval('mp_processo_objeto_seq')
		into STRICT	nr_seq_proc_objeto_novo_w
		;

		insert	into	mp_processo_objeto(ds_cor,
			ds_lista_pontos,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_objeto,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_apres,
			nr_seq_objeto,
			nr_seq_processo,
			nr_sequencia,
			qt_altura,
			qt_esquerda,
			qt_largura,
			qt_topo,
			nr_seq_obj_origem,
			nr_seq_obj_destino,
			nr_seq_processo_ref)
		SELECT	ds_cor,
			ds_lista_pontos,
			clock_timestamp(),
			clock_timestamp(),
			nm_objeto,
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_apres,
			nr_seq_objeto,
			nr_sequencia_w,
			nr_seq_proc_objeto_novo_w,
			qt_altura,
			qt_esquerda,
			qt_largura,
			qt_topo,
			nr_seq_obj_origem,
			nr_seq_obj_destino,
			nr_seq_processo_ref
		from	mp_processo_objeto
		where	nr_sequencia	= nr_seq_proc_objeto_w;

		update	mp_processo_objeto
		set	ds_objeto	= ds_objeto_w
		where	nr_sequencia	= nr_seq_proc_objeto_novo_w;

		update	mp_processo_objeto a
		set	nr_seq_obj_origem	= nr_seq_proc_objeto_novo_w
		where	a.nr_seq_obj_origem 	= nr_seq_proc_objeto_w
		and	a.nr_seq_processo	= nr_sequencia_w;

		update	mp_processo_objeto a
		set	nr_seq_obj_destino	= nr_seq_proc_objeto_novo_w
		where	a.nr_seq_obj_destino 	= nr_seq_proc_objeto_w
		and	a.nr_seq_processo	= nr_sequencia_w;

		/* Copiar filhas da atividade */

		open c06;
		loop
		fetch c06 into
			nr_seq_processo_doc_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */
			insert	into	mp_processo_doc(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_proc_obj,
				nr_seq_documento)
			SELECT	nextval('mp_processo_doc_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_proc_objeto_novo_w,
				nr_seq_documento
			from	mp_processo_doc
			where	nr_sequencia	= nr_seq_processo_doc_w;
		end loop;
		close c06;

		open c07;
		loop
		fetch c07 into
			nr_seq_recurso_w;
		EXIT WHEN NOT FOUND; /* apply on c07 */
			insert	into	mp_processo_obj_rec(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_obj_proc,
				nr_seq_recurso,
				cd_cargo,
				nr_seq_tipo_equip)
			SELECT	nextval('mp_processo_obj_rec_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_proc_objeto_novo_w,
				nr_seq_recurso,
				cd_cargo,
				nr_seq_tipo_equip
			from	mp_processo_obj_rec
			where	nr_sequencia	= nr_seq_recurso_w;
		end loop;
		close c07;

		open c08;
		loop
		fetch c08 into
			nr_seq_obj_ref_w,
			ie_tipo_ref_w;
		EXIT WHEN NOT FOUND; /* apply on c08 */
			insert	into	mp_proc_obj_ref(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_proc_obj_origem,
				nr_seq_proc_obj_destino)
			SELECT	nextval('mp_proc_obj_ref_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				CASE WHEN ie_tipo_ref_w='O' THEN nr_seq_proc_objeto_novo_w  ELSE nr_seq_proc_obj_origem END ,
				CASE WHEN ie_tipo_ref_w='D' THEN nr_seq_proc_objeto_novo_w  ELSE nr_seq_proc_obj_destino END
			from	mp_proc_obj_ref
			where	nr_sequencia	= nr_seq_obj_ref_w;
		end loop;
		close c08;

		open c09;
		loop
		fetch c09 into
			nr_seq_proc_obj_unid_org_w;
		EXIT WHEN NOT FOUND; /* apply on c09 */
			insert	into	mp_proc_obj_unid_org(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_proc_obj,
				nr_seq_unid_org)
			SELECT	nextval('mp_proc_obj_unid_org_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_proc_objeto_novo_w,
				nr_seq_unid_org
			from	mp_proc_obj_unid_org
			where	nr_sequencia	= nr_seq_proc_obj_unid_org_w;
		end loop;
		close c09;

		open c10;
		loop
		fetch c10 into
			nr_seq_tarefa_w;
		EXIT WHEN NOT FOUND; /* apply on c10 */
			insert	into	mp_tarefa(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_proc_objeto,
				nr_seq_apres,
				ds_tarefa)
			SELECT	nextval('mp_tarefa_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_proc_objeto_novo_w,
				nr_seq_apres,
				ds_tarefa
			from	mp_tarefa
			where	nr_sequencia	= nr_seq_tarefa_w;
		end loop;
		close c10;
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into
		nr_seq_proc_raia_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		insert	into	mp_processo_raia(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_processo,
			nr_seq_unid_org,
			qt_topo,
			qt_esquerda,
			ie_orientacao,
			qt_altura,
			qt_largura)
		SELECT	nextval('mp_processo_unid_org_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_w,
			nr_seq_unid_org,
			qt_topo,
			qt_esquerda,
			ie_orientacao,
			qt_altura,
			qt_largura
		from	mp_processo_raia
		where	nr_sequencia	= nr_seq_proc_raia_w;
	end loop;
	close c02;
end if;

nr_seq_novo_processo_p	:= nr_sequencia_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mp_criar_rascunho (nr_seq_processo_p bigint, nm_usuario_p text, nr_seq_novo_processo_p INOUT bigint) FROM PUBLIC;

