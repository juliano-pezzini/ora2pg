-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_requisicao ( nr_seq_requisicao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_requisicao_w		bigint;
ds_historico_w			varchar(4000);
ie_requisicao_imp_w		varchar(2);
cd_procedimento_w		bigint;
nr_seq_material_w		bigint;
ie_status_w			varchar(255);
ds_histrico_itens_w		varchar(4000);
nr_seq_plano_w			bigint;
cd_matricula_estipulante_w	varchar(30);
nr_seq_segurado_w		bigint;
nr_seq_req_proc_w		bigint;

nr_seq_proc_anexo_nov_w   	pls_requisicao_proc.nr_sequencia%type;
nr_seq_mat_anexo_nov_w	 	pls_requisicao_mat.nr_sequencia%type;
nr_seq_diag_anexo_nov_w		pls_lote_anexo_mat_aut.nr_sequencia%type;
nr_seq_anexo_guia_orig_w	pls_lote_anexo_guias_aut.nr_sequencia%type;
nr_seq_anexo_guia_nova_w	pls_lote_anexo_guias_aut.nr_sequencia%type;
nr_seq_lote_anexo_guia_w	pls_lote_anexo_guias_aut.nr_sequencia%type;

cd_guia_principal_w			pls_requisicao.cd_guia_principal%type;

C00 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_w;

C01 CURSOR FOR
	SELECT	cd_procedimento,
			ie_status
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	
C02 CURSOR FOR
	SELECT	nr_seq_material,
			ie_status
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
--Retorna  os procedimentos de fora da requisicao antiga
C05 CURSOR FOR
	SELECT	nr_sequencia,
		ie_origem_proced,
		cd_procedimento,
		ie_tipo_anexo,
		qt_solicitado,
		vl_procedimento,
		ie_utiliza_opme,
		cd_procedimento_ptu,
		ds_observacao,
		ds_procedimento_ptu,
		qt_procedimento,
		ie_tipo_tabela
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
--Retorna os caras de cima de dentro da requisicao antiga
C07 CURSOR FOR
	SELECT	cd_ans,
		cd_cnes,
		cd_guia,
		cd_guia_prestador,
		cd_guia_referencia,
		cd_senha,
		cd_usuario_plano,
		ds_area_irradiada,
		ds_biometria,
		ds_email_prof_solic,
		ds_especificacao,
		ds_justificativa,
		ds_observacao,
		ds_procedimento_cirurgico,
		ds_quimioterapia,
		dt_autorizacao,
		dt_inicio_previsto,
		dt_quimioterapia,
		dt_radioterapia,
		dt_real_proc_cirurgico,
		dt_solicitacao,
		ie_recem_nascido,
		ie_sexo,
		ie_status,
		ie_tipo_anexo,
		nm_beneficiario,
		nm_profissional_solic,
		nm_usuario,
		nm_usuario_nrec,
		nr_campos,
		nr_ciclo_atual,
		nr_ciclo_previsto,
		nr_sequencia,
		nr_seq_guia_principal,
		nr_seq_lote_anexo, 
		nr_telef_prof_solic,
		nr_dia_ciclo_atual,
		qt_altura,
		qt_campo_irradiacao,
		qt_dias_previsto,
		qt_dose_dia,
		qt_dose_total,
		qt_idade_benef,
		qt_intervalo_ciclo,
		qt_peso,
		qt_superficie_corporal
	from	pls_lote_anexo_guias_aut
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
--Retorna os materiais cadastrados para a antiga requisicao
C10 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		ie_tipo_anexo,
		qt_solicitado,
		qt_material,
		vl_material,
		ds_observacao,
		nr_seq_prest_fornec,
		cd_material,
		cd_material_ptu,
		ds_material_ptu,
		nr_seq_material_forn
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
--Retornar os diagnosticos inseridos para os caras de cima de dentro(QU, RA, OP)  da requisicao antiga	
C11 CURSOR FOR
	SELECT	cd_diagnostico_imagem,
		cd_doenca,
		cd_finalidade_tratamento,
		ds_diagnostico,
		ds_observacao,
		ds_plano_terapeutico,
		ie_capacidade_funcional,
		ie_classificacao,
		ie_estadia_tumor,
		ie_tipo_diagnostico,
		ie_tipo_quimioterapia,
		ie_tumor,
		ie_nodulo,
		ie_metastases,
		nm_usuario,
		nm_usuario_nrec,
		dt_diagnostico
	from	pls_lote_anexo_diag_aut
	where	nr_seq_lote_anexo_guia	= nr_seq_anexo_guia_orig_w;	
	
BEGIN

begin
	select	ie_requisicao_imp,
		nr_seq_segurado
	into STRICT	ie_requisicao_imp_w, 
		nr_seq_segurado_w
	from	pls_requisicao
	where	nr_sequencia		= nr_seq_requisicao_p
	and	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	ie_requisicao_imp_w	:= 'N';
	nr_seq_segurado_w	:= null;
end;

begin
	select 	cd_matricula_estipulante
	into STRICT	cd_matricula_estipulante_w
	from	pls_segurado
	where	nr_sequencia = nr_seq_segurado_w;

	nr_seq_plano_w := pls_obter_produto_benef(nr_seq_segurado_w, clock_timestamp());
exception
when others then
	nr_seq_plano_w			:= null;
	cd_matricula_estipulante_w	:= null;
end;

if (coalesce(ie_requisicao_imp_w,'N')	= 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(138424);
	/*Nao e possivel duplicar esta requisicao. Requisicao inserida via importacao de base !*/

end if;

if (coalesce(nr_seq_requisicao_p,0)	<> 0) then
	select	nextval('pls_requisicao_seq')
	into STRICT	nr_seq_requisicao_w
	;
	
	insert	into pls_requisicao(	nr_sequencia,			dt_requisicao,			dt_atualizacao,
					nm_usuario,			dt_atualizacao_nrec,		nm_usuario_nrec,
					nr_seq_segurado,		cd_medico_solicitante,		ie_status,
					nr_seq_plano,			cd_estabelecimento,		ie_tipo_guia,
					ie_estagio,			ie_tipo_requisicao,		nr_seq_motivo_inclusao,
					nr_seq_prestador,		qt_dia_solicitado,		qt_dia_autorizado,
					cd_especialidade,		ie_tipo_consulta,		nm_recem_nascido,
					dt_nasc_recem_nascido,		ie_tipo_atendimento,		nr_seq_prestador_exec,
					ie_carater_atendimento,		ds_indicacao_clinica,		nr_seq_clinica,
					ie_regime_internacao,		nr_seq_tipo_acomodacao,		dt_entrada_hospital,
					dt_alta_hospital,		nr_seq_requisicao_sup,		ie_tipo_saida,
					ds_biometria,			ie_tipo_processo,		nr_seq_uni_exec,
					ie_consulta_urgencia,		cd_senha,			dt_validade_senha,
					ds_observacao,			nm_usuario_solic,		ie_origem_solic,
					ie_tipo_intercambio,		ie_tipo_gat,			ie_recem_nascido,
					cd_senha_externa,		dt_valid_senha_ext,		ie_exige_senha_ext,
					ie_auditoria_estipulante,	cd_guia_principal,		nr_seq_guia_principal,
					nr_seq_regra_pos_estip,		cd_matricula_estipulante,	ie_pcmso,
					nr_seq_cbo_saude,		dt_internacao_sugerida,		ie_regime_atendimento,
					ie_cobertura_especial,		ie_saude_ocupacional)
				(SELECT	nr_seq_requisicao_w,		clock_timestamp(),			clock_timestamp(),
					nm_usuario_p,			clock_timestamp(),			nm_usuario_p,
					nr_seq_segurado,		cd_medico_solicitante,		'P',
					nr_seq_plano_w,			cd_estabelecimento_p,		ie_tipo_guia,
					1,				'M',				nr_seq_motivo_inclusao,
					nr_seq_prestador,		qt_dia_solicitado,		qt_dia_autorizado,
					cd_especialidade,		ie_tipo_consulta,		nm_recem_nascido,
					dt_nasc_recem_nascido,		ie_tipo_atendimento,		nr_seq_prestador_exec,
					ie_carater_atendimento,		ds_indicacao_clinica,		nr_seq_clinica,
					ie_regime_internacao,		nr_seq_tipo_acomodacao,		dt_entrada_hospital,
					dt_alta_hospital,		nr_sequencia,			ie_tipo_saida,
					ds_biometria,			ie_tipo_processo,		nr_seq_uni_exec,
					ie_consulta_urgencia,		null,				null,
					ds_observacao,			nm_usuario_p,			'M',
					ie_tipo_intercambio,		ie_tipo_gat,			ie_recem_nascido,
					cd_senha_externa,		dt_valid_senha_ext,		null,
					null,				cd_guia_principal,		nr_seq_guia_principal,
					null,				cd_matricula_estipulante_w,	ie_pcmso,
					nr_seq_cbo_saude,		dt_internacao_sugerida,		ie_regime_atendimento,
					ie_cobertura_especial,		ie_saude_ocupacional
				from	pls_requisicao a
				where	a.nr_sequencia = nr_seq_requisicao_p);
				
				select	cd_guia_principal
				into STRICT	cd_guia_principal_w
				from	pls_requisicao
				where	nr_sequencia = nr_seq_requisicao_p;
	
	--Traz todos as informacoes de cima de dentro da requisicao antiga (QU, RA, OP)
	for r_c07_w in C07 loop
		
		insert into pls_lote_anexo_guias_aut(cd_ans, cd_cnes, cd_guia,
			cd_guia_prestador, cd_guia_referencia, cd_senha,
			cd_usuario_plano, ds_area_irradiada, ds_biometria,
			ds_email_prof_solic, ds_especificacao, ds_justificativa,
			ds_observacao, ds_procedimento_cirurgico, ds_quimioterapia,
			dt_atualizacao, dt_atualizacao_nrec, dt_autorizacao,
			dt_inicio_previsto, dt_quimioterapia, dt_radioterapia,
			dt_real_proc_cirurgico, dt_solicitacao, ie_recem_nascido,
			ie_sexo, ie_status, ie_tipo_anexo,
			nm_beneficiario, nm_profissional_solic, nm_usuario,
			nm_usuario_nrec, nr_campos, nr_ciclo_atual,
			nr_ciclo_previsto, nr_seq_requisicao, nr_seq_guia_principal,
			nr_seq_lote_anexo, nr_sequencia, nr_telef_prof_solic,
			qt_altura, qt_campo_irradiacao, qt_dias_previsto,
			qt_dose_dia, qt_dose_total, qt_idade_benef,
			qt_intervalo_ciclo, qt_peso, qt_superficie_corporal, nr_dia_ciclo_atual)
		(SELECT	r_c07_w.cd_ans, r_c07_w.cd_cnes, cd_guia_principal_w,
			cd_guia_principal_w, cd_guia_principal_w, r_c07_w.cd_senha,
			r_c07_w.cd_usuario_plano, r_c07_w.ds_area_irradiada, r_c07_w.ds_biometria,
			r_c07_w.ds_email_prof_solic, r_c07_w.ds_especificacao, r_c07_w.ds_justificativa,
			r_c07_w.ds_observacao, r_c07_w.ds_procedimento_cirurgico, r_c07_w.ds_quimioterapia,
			clock_timestamp(), clock_timestamp(), r_c07_w.dt_autorizacao,
			r_c07_w.dt_inicio_previsto, r_c07_w.dt_quimioterapia, r_c07_w.dt_radioterapia,
			r_c07_w.dt_real_proc_cirurgico, r_c07_w.dt_solicitacao, r_c07_w.ie_recem_nascido,
			r_c07_w.ie_sexo, r_c07_w.ie_status, r_c07_w.ie_tipo_anexo,
			r_c07_w.nm_beneficiario, r_c07_w.nm_profissional_solic, r_c07_w.nm_usuario,
			r_c07_w.nm_usuario_nrec, r_c07_w.nr_campos, r_c07_w.nr_ciclo_atual,
			r_c07_w.nr_ciclo_previsto, nr_seq_requisicao_w, r_c07_w.nr_seq_guia_principal,
			r_c07_w.nr_seq_lote_anexo, nextval('pls_lote_anexo_guias_aut_seq'), r_c07_w.nr_telef_prof_solic,
			r_c07_w.qt_altura, r_c07_w.qt_campo_irradiacao, r_c07_w.qt_dias_previsto,
			r_c07_w.qt_dose_dia, r_c07_w.qt_dose_total, r_c07_w.qt_idade_benef,
			r_c07_w.qt_intervalo_ciclo, r_c07_w.qt_peso, r_c07_w.qt_superficie_corporal,
			r_c07_w.nr_dia_ciclo_atual
		);
	end loop;
	--C05 traz todos os procedimentos de fora, da requisicao antiga
	for r_c05_w in C05 loop
		--Id do procedimento de fora da nova requisicao (procedimento do processamento atual)
		select	nextval('pls_requisicao_proc_seq')
		into STRICT	nr_seq_proc_anexo_nov_w
		;
		
		insert	into pls_requisicao_proc(nr_sequencia, nr_seq_requisicao, cd_procedimento,
			 ie_origem_proced, qt_solicitado, dt_atualizacao,
			 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			 nr_seq_cobertura, ie_tipo_cobertura, ie_status,
			 nr_seq_grupo_exec, nr_seq_tipo_limitacao, ie_estagio,
			 nr_seq_pacote, vl_procedimento, qt_procedimento,
			 cd_porte_anestesico, nr_seq_regra, ie_utiliza_opme,
			 ie_pacote_aberto, cd_pacote_item, nr_seq_preco_pacote,
			 nr_seq_conversao_pacote, cd_procedimento_ptu, ds_observacao,
			 ie_origem_inclusao, ds_procedimento_ptu, ie_tipo_anexo,
			 ie_origem_pacote_item, ie_tipo_tabela)
		(SELECT	 nr_seq_proc_anexo_nov_w, nr_seq_requisicao_w, r_c05_w.cd_procedimento,
			 r_c05_w.ie_origem_proced, r_c05_w.qt_solicitado, clock_timestamp(),
			 nm_usuario_p, clock_timestamp(), nm_usuario_p,
			 null, null, 'U',
			 null, null, 'AE',
			 null, r_c05_w.vl_procedimento, r_c05_w.qt_procedimento,
			 null, null, r_c05_w.ie_utiliza_opme,
			 null, null, null,
			 null, r_c05_w.cd_procedimento_ptu, r_c05_w.ds_observacao,
			 'T', r_c05_w.ds_procedimento_ptu, r_c05_w.ie_tipo_anexo,
			 null, r_c05_w.ie_tipo_tabela
		);
		
		begin
			select	nr_sequencia
			into STRICT	nr_seq_lote_anexo_guia_w
			from	pls_lote_anexo_guias_aut
			where	nr_seq_requisicao	= nr_seq_requisicao_w
			and	ie_tipo_anexo		= r_c05_w.ie_tipo_anexo;
		exception
		when others then
			nr_seq_lote_anexo_guia_w := null;
		end;
		
		if (nr_seq_lote_anexo_guia_w IS NOT NULL AND nr_seq_lote_anexo_guia_w::text <> '') then		
			--Faz o insert do procedimento de dentro, com o id do procedimento de fora criado logo ali acima e com o id do cara de cima de dentro(QU, RA, OP)
			insert into pls_lote_anexo_proc_aut(cd_procedimento, cd_tipo_tabela, ds_procedimento,
				dt_atualizacao, dt_atualizacao_nrec, dt_prev_realizacao,
				ie_origem_proced, ie_status, nm_usuario,
				nm_usuario_nrec, nr_seq_req_proc, nr_sequencia,
				qt_solicitado, nr_seq_lote_anexo_guia)
			(SELECT cd_procedimento, cd_tipo_tabela, ds_procedimento,
				clock_timestamp(), clock_timestamp(), dt_prev_realizacao,
				ie_origem_proced, ie_status, nm_usuario,
				nm_usuario_nrec, nr_seq_proc_anexo_nov_w, nextval('pls_lote_anexo_proc_aut_seq'),
				qt_solicitado, nr_seq_lote_anexo_guia_w
			from	pls_lote_anexo_proc_aut
			where	nr_seq_req_proc	= r_c05_w.nr_sequencia);
		end if;
	end loop;
	
	-- Valorizacao dos procedimentos
	open C00;
	loop
	fetch C00 into
		nr_seq_req_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin
		CALL pls_atualiza_valor_proc_aut(nr_seq_req_proc_w, 'R', nm_usuario_p);
		end;
	end loop;
	close C00;

	--Retorna os materiais cadastrados para a antiga requisicao
	for r_c10_w in C10 loop
	
		select	nextval('pls_requisicao_mat_seq')
		into STRICT	nr_seq_mat_anexo_nov_w
		;
		--Insere material de fora para a nova requisicao
		insert	into pls_requisicao_mat(nr_sequencia, nr_seq_requisicao, nr_seq_material,
			 qt_solicitado, dt_atualizacao, nm_usuario,
			 dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_cobertura,
			 ie_tipo_cobertura, ie_status,
			 nr_seq_grupo_exec, nr_seq_motivo_exc, nr_seq_tipo_limitacao,
			 ie_estagio, ds_observacao, nr_seq_prest_fornec,
			 cd_material, qt_mat_executado, vl_material,
			 ie_origem_inclusao, cd_material_ptu, ds_material_ptu, ie_tipo_anexo,
			 qt_material, nr_seq_material_forn)
		(SELECT	 nr_seq_mat_anexo_nov_w, nr_seq_requisicao_w, r_c10_w.nr_seq_material,
			 r_c10_w.qt_solicitado, clock_timestamp(), nm_usuario_p,
			 clock_timestamp(), nm_usuario_p, null,
			 null, 'U', 
			 null, null, null,
			 'AE', r_c10_w.ds_observacao, r_c10_w.nr_seq_prest_fornec,
			 r_c10_w.cd_material, null, r_c10_w.vl_material,
			 'T', r_c10_w.cd_material_ptu, r_c10_w.ds_material_ptu, r_c10_w.ie_tipo_anexo,
			 r_c10_w.qt_material, r_c10_w.nr_seq_material_forn
		);
	
		begin
			select	nr_sequencia
			into STRICT	nr_seq_lote_anexo_guia_w
			from	pls_lote_anexo_guias_aut
			where	nr_seq_requisicao	= nr_seq_requisicao_w
			and	ie_tipo_anexo		= r_c10_w.ie_tipo_anexo;
		exception
		when others then
			nr_seq_lote_anexo_guia_w	:= 0;
		end;
		
		if	nr_seq_lote_anexo_guia_w > 0 then
		--Insere registro material de dentro para a nova requisicao com o id do cara de cima de dentro (QU, RA, OP), buscando pelos materias anexo com o id do material da requisicao.
			insert into pls_lote_anexo_mat_aut(cd_aut_funcionamento, cd_material, cd_ref_fabricante_imp,
				cd_tipo_tabela_imp, ds_material, ds_observacao,
				dt_atualizacao, dt_atualizacao_nrec, dt_prevista,
				ie_frequencia_dose, ie_opcao_fabricante, ie_status,
				ie_via_administracao, nm_usuario, nm_usuario_nrec,
				nr_registro_anvisa, nr_seq_material, nr_seq_req_mat,
				nr_sequencia, qt_autorizado, qt_solicitado,
				vl_unit_material_aut, vl_unit_material_solic, nr_seq_lote_anexo_guia,
				qt_unidade_medida, qt_dosagem_total)
			(SELECT cd_aut_funcionamento, cd_material, cd_ref_fabricante_imp,
				cd_tipo_tabela_imp, ds_material, ds_observacao,
				clock_timestamp(), clock_timestamp(), dt_prevista,
				ie_frequencia_dose, ie_opcao_fabricante, ie_status,
				ie_via_administracao, nm_usuario, nm_usuario_nrec,
				nr_registro_anvisa, nr_seq_material, nr_seq_mat_anexo_nov_w,
				nextval('pls_lote_anexo_mat_aut_seq'), qt_autorizado, qt_solicitado,
				vl_unit_material_aut, vl_unit_material_solic, nr_seq_lote_anexo_guia_w,
				qt_unidade_medida, qt_dosagem_total
			from	pls_lote_anexo_mat_aut
			where	nr_seq_req_mat	= r_c10_w.nr_sequencia);
		end if;
	end loop;
	
	insert	into pls_requisicao_diagnostico(nr_sequencia, nr_seq_requisicao, cd_doenca,
		 dt_diagnostico, dt_atualizacao, nm_usuario,
		 dt_atualizacao_nrec, nm_usuario_nrec, ie_classificacao,
		 ie_tipo_doenca, ds_diagnostico, ie_indicacao_acidente,
		 ie_unidade_tempo, qt_tempo)
	(SELECT	 nextval('pls_requisicao_diagnostico_seq'), nr_seq_requisicao_w, cd_doenca,
		 dt_diagnostico, clock_timestamp(), nm_usuario_p,
		 clock_timestamp(), nm_usuario_p, ie_classificacao,
		 ie_tipo_doenca, ds_diagnostico, ie_indicacao_acidente,
		 ie_unidade_tempo, qt_tempo
	from	pls_requisicao_diagnostico
	where	nr_seq_requisicao	= nr_seq_requisicao_p);
	--Retorna as informacoes de cima de dentro da requisicao antiga
	for r_c07_w in C07 loop
		
		nr_seq_anexo_guia_orig_w := r_c07_w.nr_sequencia;
		
		begin
		
			select	nr_sequencia
			into STRICT	nr_seq_anexo_guia_nova_w
			from	pls_lote_anexo_guias_aut
			where	nr_seq_requisicao	= nr_seq_requisicao_w
			and	ie_tipo_anexo	= r_c07_w.ie_tipo_anexo;
		
		exception
		when others then
			nr_seq_anexo_guia_nova_w:= null;
		end;
		
		for r_c11_w in C11 loop
			insert into pls_lote_anexo_diag_aut(cd_diagnostico_imagem, cd_doenca, cd_finalidade_tratamento,
				ds_diagnostico, ds_observacao, ds_plano_terapeutico,
				dt_atualizacao, dt_atualizacao_nrec, dt_diagnostico,
				ie_capacidade_funcional, ie_classificacao, ie_estadia_tumor,
				ie_tipo_diagnostico, ie_tipo_quimioterapia,
				nm_usuario, nm_usuario_nrec, nr_seq_lote_anexo_guia,
				nr_sequencia,ie_tumor , ie_nodulo, ie_metastases)
			(SELECT	r_c11_w.cd_diagnostico_imagem, r_c11_w.cd_doenca, r_c11_w.cd_finalidade_tratamento,
				r_c11_w.ds_diagnostico, r_c11_w.ds_observacao, r_c11_w.ds_plano_terapeutico,
				clock_timestamp(), clock_timestamp(), r_c11_w.dt_diagnostico,
				r_c11_w.ie_capacidade_funcional, r_c11_w.ie_classificacao, r_c11_w.ie_estadia_tumor,
				r_c11_w.ie_tipo_diagnostico, r_c11_w.ie_tipo_quimioterapia,
				r_c11_w.nm_usuario, r_c11_w.nm_usuario_nrec, nr_seq_anexo_guia_nova_w,
				nextval('pls_lote_anexo_diag_aut_seq'),r_c11_w.ie_tumor ,r_c11_w.ie_nodulo ,r_c11_w.ie_metastases
			);
		end loop;
	end loop;
	
	insert	into pls_requisicao_anexo(nr_sequencia, nr_seq_requisicao, dt_anexo,
		 ds_anexo, dt_atualizacao, nm_usuario,
		 dt_atualizacao_nrec, nm_usuario_nrec, ie_origem_anexo)
	(SELECT	 nextval('pls_requisicao_anexo_seq'), nr_seq_requisicao_w, dt_anexo,
		 ds_anexo, clock_timestamp(), nm_usuario_p,
		 clock_timestamp(), nm_usuario_p, ie_origem_anexo
	from	pls_requisicao_anexo
	where	nr_seq_requisicao	= nr_seq_requisicao_p);
	
	open C01;
	loop
	fetch C01 into	
		cd_procedimento_w,
		ie_status_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ds_histrico_itens_w	:= substr(ds_histrico_itens_w||cd_procedimento_w||' - '||obter_valor_dominio(3453,ie_status_w)||chr(13)||chr(10),1,4000);
		end;
	end loop;
	close C01;
	
	open C02;
	loop
	fetch C02 into	
		nr_seq_material_w,
		ie_status_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ds_histrico_itens_w	:= substr(	ds_histrico_itens_w||substr(pls_obter_seq_codigo_material(nr_seq_material_w,''),1,255)||
							' - '||obter_valor_dominio(3453,ie_status_w)||chr(13)||chr(10),1,4000);
		end;
	end loop;
	close C02;
	
	ds_historico_w	:= substr(	'Requisicao '||nr_seq_requisicao_w||' duplicada por '||nm_usuario_p||' em '||to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')||
					'.'||chr(13)||chr(10)||'Requisicao original numero: '||nr_seq_requisicao_p||chr(13)||chr(10)|| ' ' ||chr(13)||chr(10)||'Itens/Status original'||chr(13)||chr(10)||
					ds_histrico_itens_w,1,4000);
	CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L',ds_historico_w,'',nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_requisicao ( nr_seq_requisicao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

