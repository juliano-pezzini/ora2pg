-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_auditoria_requisicao ( nr_seq_requisicao_p bigint, nm_usuario_p text, ie_origem_p text) AS $body$
DECLARE

					
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gera auditoria de requisicao.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatarios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
	Performance.
	
	IE_ORIGEM_P 
	 'A' - Automatico ( gerar a auditoria quando  for consistido uma requisicao)
	 'M' - Manual ( gerar a auditoria quando a requisicao so encaminhada para a 
		auditoria manualmente)
	 'AE' - Analise externa (Nao gerar auditoria para os grupos da ocorrencia pois a 
			requisicao esta em auditoria na operadora de origem 
			do beneficiario)
	 'AI' - Analise interna (Nao gerar auditoria para os grupos da ocorrencia pois a 
			requisicao foi enviada para analise devido a um pedido
			de insistencia da operadora de origem do beneficiario)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_observacao_w			varchar(4000);
ds_indicacao_clinica_w		varchar(4000);
nr_telef_cel_benef_w		varchar(15);
cd_medico_solicitante_w		varchar(10);
ie_tipo_despesa_w		varchar(10);
ie_regra_preco_w		varchar(3);
ie_status_w			varchar(2);
ie_auditoria_estip_w		varchar(1);
ie_externo_w			varchar(1);
ie_utiliza_nivel_w		varchar(1);
vl_material_w			double precision;
vl_procedimento_w		double precision;
vl_total_pacote_w		double precision;
nr_seq_requisicao_w		bigint;
nr_seq_segurado_w		bigint;
ie_tipo_guia_w			bigint;
nr_seq_auditoria_w		bigint;
nr_seq_procedimento_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_auditoria_item_w		bigint;
nr_seq_material_w		bigint;
qt_solicitado_w			pls_requisicao_proc.qt_solicitado%type;
nr_seq_mat_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_grupo_w			bigint;
nr_seq_fluxo_w			bigint;
qt_grupo_w			bigint;
qt_fluxo_w			bigint;
nr_seq_ordem_atual_w		bigint;
cd_estabelecimento_w		bigint;
nr_seq_grupo_auditor_w		bigint;
nr_seq_regra_pos_estip_w	bigint;
nr_seq_regra_preco_pac_w	bigint;
nr_seq_pacote_w			bigint;
dt_requisicao_w			timestamp;
nr_seq_ocorrencia_w		bigint;
ie_auditoria_w			varchar(1);
nr_seq_motivo_glosa_w		bigint;
nr_seq_material_forn_w		bigint;
nr_telefone_celular_w		varchar(15);
nr_seq_prestador_exec_w		pls_requisicao.nr_seq_prestador_exec%type;
ie_pacote_ptu_w				pls_guia_plano_proc.ie_pacote_ptu%type;
ie_agrupa_grupo_aud_w		pls_param_analise_aut.ie_agrupa_grupo_aud%type;
ie_recem_nascido_w			pls_requisicao.ie_recem_nascido%type;
nm_recem_nascido_w			pls_requisicao.nm_recem_nascido%type;
dt_nasc_recem_nascido_w		pls_requisicao.dt_nasc_recem_nascido%type;
ie_tipo_anexo_w				pls_auditoria_item.ie_tipo_anexo%type;

--Dados auditoria
ie_anexo_quimioterapia_w	pls_auditoria.ie_anexo_quimioterapia%type;
ie_anexo_radioterapia_w		pls_auditoria.ie_anexo_radioterapia%type;
ie_anexo_opme_w				pls_auditoria.ie_anexo_opme%type;
ie_anexo_guia_w				pls_auditoria.ie_anexo_guia%type;
ie_permite_compl_opme_w		pls_auditoria.ie_permite_compl_opme%type;
ie_tipo_processo_w			pls_requisicao.ie_tipo_processo%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitado,
		ie_status,
		vl_procedimento,
		vl_total_pacote,
		ie_pacote_ptu,
		ie_tipo_anexo
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		qt_solicitado,
		ie_status,
		vl_material,
		nr_seq_material_forn,
		ie_tipo_anexo
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	
C05 CURSOR FOR
	SELECT	nr_seq_grupo,
		nr_seq_fluxo,
		nr_seq_ocorrencia
	from	pls_ocorrencia_grupo
	where	nr_seq_ocorrencia in (SELECT	nr_seq_ocorrencia
					from	pls_ocorrencia_benef
					where	nr_seq_requisicao	= nr_seq_requisicao_p)
	and	ie_requisicao	= 'S'
	and	ie_situacao	= 'A'
	group by nr_seq_fluxo, nr_seq_grupo, nr_seq_ocorrencia
	order by nr_seq_fluxo;


BEGIN

select	nr_sequencia,
	nr_seq_segurado,
	ie_tipo_guia,
	dt_requisicao,
	cd_medico_solicitante,
	nr_seq_prestador,
	ds_observacao,
	coalesce(ie_auditoria_estipulante,'N'),
	cd_estabelecimento,
	nr_seq_regra_pos_estip,
	ds_indicacao_clinica,
	ie_anexo_quimioterapia,
	ie_anexo_radioterapia,
	ie_anexo_opme,
	ie_anexo_guia,
	nr_seq_prestador_exec,
	ie_recem_nascido,
	nm_recem_nascido,
	dt_nasc_recem_nascido,
	substr(pls_obter_dados_segurado(nr_seq_segurado, 'TCD'),0,15),
	ie_tipo_processo
into STRICT	nr_seq_requisicao_w,
	nr_seq_segurado_w,
	ie_tipo_guia_w,
	dt_requisicao_w,
	cd_medico_solicitante_w,
	nr_seq_prestador_w,
	ds_observacao_w,
	ie_auditoria_estip_w,
	cd_estabelecimento_w,
	nr_seq_regra_pos_estip_w,
	ds_indicacao_clinica_w,
	ie_anexo_quimioterapia_w,
	ie_anexo_radioterapia_w,
	ie_anexo_opme_w,
	ie_anexo_guia_w,
	nr_seq_prestador_exec_w,
	ie_recem_nascido_w, 
	nm_recem_nascido_w,
	dt_nasc_recem_nascido_w,
	nr_telefone_celular_w,
	ie_tipo_processo_w
from	pls_requisicao
where	nr_sequencia	= nr_seq_requisicao_p;

begin
	select	nr_sequencia
	into STRICT	nr_seq_auditoria_w
	from	pls_auditoria
	where	nr_seq_requisicao = nr_seq_requisicao_p
	and	coalesce(dt_liberacao::text, '') = '';
exception
when others then
	nr_seq_auditoria_w	:= 0;	
end;

if (nr_seq_auditoria_w = 0) then
	/* Tratamento para pegar o numero de telefone do beneficiario, informado quando e gerada uma auditoria interna para a requisicao, para quando for gerada auditoria imposta pela operadora de origem do beneficiario (Intercambio),  seja possivel o
	envio de um SMS informado o status da requisicao.*/
	if (ie_origem_p in ('AE','AI')) then
		select	max(nr_telef_celular_benef)
		into STRICT	nr_telef_cel_benef_w
		from	pls_auditoria
		where	nr_seq_requisicao = nr_seq_requisicao_p;
	end if;
	
	--Se o tipo de guia dor de internacao e verificado se o prestador executor possui permissao para complementar as solicitacoes de OPME

	--Regra esta na OPS - Cadastro de Regras / Regra complemento OPME TISS
	if ( ie_tipo_guia_w = '1' ) then
		ie_permite_compl_opme_w := pls_obter_prest_compl_opme( nr_seq_requisicao_p, nr_seq_prestador_exec_w );
	end if;
	

	select 	nextval('pls_auditoria_seq')
	into STRICT	nr_seq_auditoria_w
	;

	insert into pls_auditoria(nr_sequencia, dt_auditoria, dt_atualizacao,
		nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		nr_seq_guia, nr_seq_requisicao,
		ie_tipo_auditoria, nr_seq_segurado, ie_tipo_guia, 
		dt_solicitacao, cd_medico_solicitante, ie_status,
		nr_seq_prestador, ds_observacao, ie_auditoria_estipulante,
		cd_estabelecimento, ds_indicacao_clinica, nr_telef_celular_benef,
		ie_anexo_quimioterapia, ie_anexo_radioterapia, ie_anexo_opme, 
		ie_anexo_guia, ie_permite_compl_opme, ie_recem_nascido, 
		nm_recem_nascido, dt_nasc_recem_nascido, ie_retorno_justific, ie_tipo_processo)
	values (nr_seq_auditoria_w, clock_timestamp(), clock_timestamp(),
		nm_usuario_p, clock_timestamp(), nm_usuario_p,
		null, nr_seq_requisicao_w,
		'R', nr_seq_segurado_w, ie_tipo_guia_w, 
		dt_requisicao_w, cd_medico_solicitante_w, 'A',--decode(ie_auditoria_estip_w,'S','AE','A'),
		nr_seq_prestador_w, ds_observacao_w, ie_auditoria_estip_w,
		cd_estabelecimento_w, ds_indicacao_clinica_w, coalesce(nr_telef_cel_benef_w,nr_telefone_celular_w),
		ie_anexo_quimioterapia_w, ie_anexo_radioterapia_w, ie_anexo_opme_w, 
		ie_anexo_guia_w, ie_permite_compl_opme_w, ie_recem_nascido_w, 
		nm_recem_nascido_w, dt_nasc_recem_nascido_w, 'N', ie_tipo_processo_w);

	open C01;
	loop
	fetch C01 into	
		nr_seq_procedimento_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_solicitado_w,
		ie_status_w,
		vl_procedimento_w,
		vl_total_pacote_w,
		ie_pacote_ptu_w,
		ie_tipo_anexo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	nextval('pls_auditoria_item_seq')
		into STRICT	nr_seq_auditoria_item_w
		;
		
		if (ie_status_w  in ('P','S','I')) then
			ie_status_w 	:= 'A';
		elsif (ie_status_w = 'A') then
			ie_status_w 	:= 'P';
		elsif (ie_status_w = 'G') then
			ie_status_w	:= 'N';
		end if;
		
		select 	coalesce(max(ie_classificacao),1)
		into STRICT	ie_tipo_despesa_w
		from	procedimento
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;

		if (nr_seq_prestador_w	> 0) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_pacote_w
			from	pls_pacote
			where	coalesce(nr_seq_prestador,coalesce(nr_seq_prestador_w,0))	= coalesce(nr_seq_prestador_w,0)
			and	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w
			and	ie_situacao		= 'A';
			
			/* Francisco - 16/05/2012 - OS 447352 */

			if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then
				select	coalesce(ie_regra_preco,'N')
				into STRICT	ie_regra_preco_w
				from	pls_pacote a
				where	a.nr_sequencia = nr_seq_pacote_w;
				
				if (ie_regra_preco_w = 'S') then
					SELECT * FROM pls_obter_regra_preco_pacote(	cd_procedimento_w, ie_origem_proced_w, 'R', nr_seq_procedimento_w, nm_usuario_p, nr_seq_pacote_w, nr_seq_regra_preco_pac_w) INTO STRICT nr_seq_pacote_w, nr_seq_regra_preco_pac_w;
				end if;
			end if;
			
			if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then			
				ie_tipo_despesa_w	:= '4';
			end if;
		end if;
			
		insert into pls_auditoria_item(nr_sequencia, nr_seq_auditoria, cd_procedimento,
			ie_origem_proced, qt_original, nr_seq_proc_origem,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
			nm_usuario_nrec, qt_ajuste, ie_status_solicitacao,
			ie_status, ie_tipo_despesa, vl_item,
			vl_total_pacote, ie_pacote_ptu, vl_original,
			ie_tipo_anexo)
		values (nr_seq_auditoria_item_w, nr_seq_auditoria_w, cd_procedimento_w,
			ie_origem_proced_w, qt_solicitado_w, nr_seq_procedimento_w,
			clock_timestamp(), nm_usuario_p, clock_timestamp(),
			nm_usuario_p, qt_solicitado_w, ie_status_w,
			ie_status_w, ie_tipo_despesa_w, vl_procedimento_w,
			vl_total_pacote_w, ie_pacote_ptu_w, vl_procedimento_w,
			ie_tipo_anexo_w);
		
		/*insert into pls_auditoria_grupo
			(nr_sequencia, nr_seq_auditoria, nr_seq_grupo,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
			nm_usuario_nrec, nr_seq_ordem, ie_status)
		(select pls_auditoria_grupo_seq.nextval, nr_seq_auditoria_w, nr_seq_grupo,
			sysdate, nm_usuario_p, sysdate,
			nm_usuario_p, nr_seq_fluxo, 'U'
		from	pls_ocorrencia_grupo
		where	ie_situacao = 'A'
		and	ie_requisicao = 'S'
		and	nr_seq_ocorrencia	in (	select	nr_seq_ocorrencia
							from	pls_ocorrencia_benef
							where	nr_seq_requisicao	= nr_seq_requisicao_w
							and	nr_seq_proc		= nr_seq_procedimento_w)
		and	nr_seq_grupo 		not in (select	nr_seq_grupo
							from	pls_auditoria_grupo
							where	nr_seq_auditoria 	= nr_seq_auditoria_w));*/
		end;
	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		nr_seq_material_w,
		nr_seq_mat_w,
		qt_solicitado_w,
		ie_status_w,
		vl_material_w,
		nr_seq_material_forn_w,
		ie_tipo_anexo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select	nextval('pls_auditoria_item_seq')
		into STRICT	nr_seq_auditoria_item_w
		;
		
		if (ie_status_w 	in ('P','S','I')) then
			ie_status_w 	:= 'A';
		elsif (ie_status_w	= 'A') then
			ie_status_w 	:= 'P';
		elsif (ie_status_w	= 'G') then
			ie_status_w	:= 'N';
		end if;
			
		select 	max(ie_tipo_despesa)
		into STRICT	ie_tipo_despesa_w
		from	pls_material
		where	nr_sequencia = nr_seq_mat_w;
		
		insert into pls_auditoria_item(nr_sequencia, nr_seq_auditoria, qt_original,
			nr_seq_mat_origem, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, qt_ajuste,
			nr_seq_material, ie_status_solicitacao, ie_status,
			ie_tipo_despesa, vl_item, nr_seq_material_forn,
			vl_original, ie_tipo_anexo)
		values (nr_seq_auditoria_item_w, nr_seq_auditoria_w, qt_solicitado_w,
			nr_seq_material_w, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, qt_solicitado_w,
			nr_seq_mat_w, ie_status_w, ie_status_w,
			ie_tipo_despesa_w, vl_material_w, nr_seq_material_forn_w,
			vl_material_w, ie_tipo_anexo_w);
			
		/*insert into pls_auditoria_grupo
			(nr_sequencia, nr_seq_auditoria, nr_seq_grupo,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
			nm_usuario_nrec, nr_seq_ordem, ie_status)
		(select pls_auditoria_grupo_seq.nextval, nr_seq_auditoria_w, nr_seq_grupo,
			sysdate, nm_usuario_p, sysdate,
			nm_usuario_p, nr_seq_fluxo, 'U'
		from	pls_ocorrencia_grupo
		where	ie_situacao = 'A'
		and	ie_requisicao = 'S'
		and	nr_seq_ocorrencia	in (	select	nr_seq_ocorrencia
							from	pls_ocorrencia_benef
							where	nr_seq_requisicao	= nr_seq_requisicao_w
							and	nr_seq_mat		= nr_seq_material_w)
		and	nr_seq_grupo	 	not in (select	nr_seq_grupo
							from	pls_auditoria_grupo
							where	nr_seq_auditoria 	= nr_seq_auditoria_w));*/
		end;
	end loop;
	close C02;

	if (ie_origem_p = 'A') then
		begin
			select	coalesce(ie_agrupa_grupo_aud, 'S')
			into STRICT	ie_agrupa_grupo_aud_w
			from	pls_param_analise_aut;		
		exception
		when others then
			ie_agrupa_grupo_aud_w	:= 'S';
		end;

		open C05;
		loop
		fetch C05 into	
			nr_seq_grupo_w,
			nr_seq_fluxo_w,
			nr_seq_ocorrencia_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			
			begin
				select	ie_auditoria,
					nr_seq_motivo_glosa
				into STRICT	ie_auditoria_w,
					nr_seq_motivo_glosa_w
				from	pls_ocorrencia
				where	nr_sequencia	= nr_seq_ocorrencia_w;
			exception
			when others then
				ie_auditoria_w	:= 'N';
			end;
			
			if	((ie_auditoria_w	= 'S') or (ie_auditoria_w	= 'N' AND nr_seq_motivo_glosa_w IS NOT NULL AND nr_seq_motivo_glosa_w::text <> '')) then
				if (ie_agrupa_grupo_aud_w = 'S') then
					select	count(1)
					into STRICT	qt_grupo_w
					from	pls_auditoria_grupo
					where	nr_seq_auditoria 	= nr_seq_auditoria_w
					and	nr_seq_grupo 		= nr_seq_grupo_w;
					

					if (qt_grupo_w = 0) then
						select	count(1)
						into STRICT	qt_fluxo_w
						from	pls_auditoria_grupo
						where	nr_seq_auditoria 	= nr_seq_auditoria_w
						and	nr_seq_ordem 		= nr_seq_fluxo_w;
						
						if (qt_fluxo_w	> 0) then
							select	max(nr_seq_ordem) + 1
							into STRICT	nr_seq_ordem_atual_w
							from	pls_auditoria_grupo
							where	nr_seq_auditoria 	= nr_seq_auditoria_w;
							
							nr_seq_fluxo_w	:= nr_seq_ordem_atual_w;
						end if;
						
						insert into pls_auditoria_grupo(nr_sequencia, nr_seq_auditoria, nr_seq_grupo,
							dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
							nm_usuario_nrec, nr_seq_ordem, ie_status,
							ie_manual)
						values (nextval('pls_auditoria_grupo_seq'), nr_seq_auditoria_w, nr_seq_grupo_w,
							clock_timestamp(), nm_usuario_p, clock_timestamp(),
							nm_usuario_p, nr_seq_fluxo_w, 'U',
							'N');
					end if;
				elsif (ie_agrupa_grupo_aud_w = 'N') then
					select	count(1)
					into STRICT	qt_fluxo_w
					from	pls_auditoria_grupo
					where	nr_seq_auditoria 	= nr_seq_auditoria_w
					and	nr_seq_ordem 		= nr_seq_fluxo_w;
					
					if (qt_fluxo_w	> 0) then
						select	max(nr_seq_ordem) + 1
						into STRICT	nr_seq_ordem_atual_w
						from	pls_auditoria_grupo
						where	nr_seq_auditoria 	= nr_seq_auditoria_w;
						
						nr_seq_fluxo_w	:= nr_seq_ordem_atual_w;
					end if;
					
					insert into pls_auditoria_grupo(nr_sequencia, nr_seq_auditoria, nr_seq_grupo,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_seq_ordem, ie_status,
						ie_manual)
					values (nextval('pls_auditoria_grupo_seq'), nr_seq_auditoria_w, nr_seq_grupo_w,
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, nr_seq_fluxo_w, 'U',
						'N');
				end if;
			end if;
			end;
		end loop;
		close C05;
		
		select	coalesce(pls_obter_grupo_analise_atual(nr_seq_auditoria_w),0)
		into STRICT	nr_seq_grupo_auditor_w
		;
		
		if (ie_auditoria_estip_w = 'S') and (nr_seq_grupo_auditor_w > 0) then
			select	nr_seq_grupo
			into STRICT	nr_seq_grupo_w
			from	pls_auditoria_grupo
			where	nr_sequencia = nr_seq_grupo_auditor_w;
			
			select	CASE WHEN ie_tipo_auditoria=3 THEN 'S'  ELSE 'N' END
			into STRICT	ie_externo_w
			from	pls_grupo_auditor
			where	nr_sequencia	= nr_seq_grupo_w;
			
			if (ie_externo_w = 'S') and (coalesce(nr_seq_regra_pos_estip_w,0) > 0) then
				CALL pls_enviar_email_requisicao(nr_seq_requisicao_p,1,nr_seq_regra_pos_estip_w,nm_usuario_p);
				
				update	pls_auditoria
				set	ie_status			= 'AE',
					ie_auditoria_estipulante	= 'S'
				where	nr_sequencia			= nr_seq_auditoria_w;
			end if;	
		end if;
	end if;

	--OS - 421626 - Rotina para gerar as ocorrencias e glosas na tabela "pls_analise_ocor_glosa_aut" 
	ie_utiliza_nivel_w := pls_obter_se_uti_nivel_lib_aut(cd_estabelecimento_w);
	
	if (ie_utiliza_nivel_w = 'S') then
		CALL pls_gerar_ocorr_glosa_aud_req(nr_seq_auditoria_w,nm_usuario_p);
	end if;
end if;

begin
	CALL pls_gerar_alerta_evento(2, nr_seq_auditoria_w, null, null, nm_usuario_p);
exception
when others then
	null;
end;

CALL pls_gerar_prior_analise_regra(nm_usuario_p, cd_estabelecimento_w, 1, nr_seq_auditoria_w);

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_auditoria_requisicao ( nr_seq_requisicao_p bigint, nm_usuario_p text, ie_origem_p text) FROM PUBLIC;

