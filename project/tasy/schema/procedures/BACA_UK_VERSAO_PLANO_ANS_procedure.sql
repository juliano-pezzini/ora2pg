-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_uk_versao_plano_ans () AS $body$
DECLARE


ds_retorno_w	varchar(255);


BEGIN

/*Atualiza a tabela CONTA_CONTABIL*/

update	conta_contabil
set	ie_versao_ans = '0'
where	coalesce(ie_versao_ans::text, '') = '';
commit;

/*Atualiza a tabela SALDO*/

update	ctb_saldo_ans
set	ie_versao_ans = '0'
where	coalesce(ie_versao_ans::text, '') = '';
commit;

/*-------------------------DROPAR----------------*/

/*dropa FK do SALDO*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE CTB_SALDO_ANS DROP CONSTRAINT CTBSAAN_CTBPLAN_FK', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')and (ds_retorno_w <> '0') then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;
	delete	from INTEGRIDADE_ATRIBUTO
	where	nm_tabela = 'CTB_SALDO_ANS'
	and	nm_INTEGRIDADE_REFERENCIAL =  'CTBSAAN_CTBPLAN_FK';

	delete 	from INTEGRIDADE_REFERENCIAL
	where	nm_tabela = 'CTB_SALDO_ANS'
	and	nm_INTEGRIDADE_REFERENCIAL =  'CTBSAAN_CTBPLAN_FK';

/*dropa FK do CONTA_CONTABIL*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE CONTA_CONTABIL DROP CONSTRAINT CONCONT_CTBPLAN_FK', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;
	delete	from INTEGRIDADE_ATRIBUTO
	where	nm_tabela = 'CONTA_CONTABIL'
	and	nm_INTEGRIDADE_REFERENCIAL =  'CONCONT_CTBPLAN_FK';

	delete 	from INTEGRIDADE_REFERENCIAL
	where	nm_tabela = 'CONTA_CONTABIL'
	and	nm_INTEGRIDADE_REFERENCIAL =  'CONCONT_CTBPLAN_FK';



/*Dropa indice do SALDO*/

ds_retorno_w := Executar_SQL_Dinamico('DROP INDEX CTBSAAN_CTBPLAN_FK_I ', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;
	delete	from INDICE
	where	nm_tabela = 'CTB_SALDO_ANS'
	and	nm_indice = 'CTBSAAN_CTBPLAN_FK_I';

	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'CTB_SALDO_ANS'
	and	nm_indice = 'CTBSAAN_CTBPLAN_FK_I';


/*Dropa indice da CONTA_CONTABIL*/

ds_retorno_w := Executar_SQL_Dinamico('DROP INDEX CONCONT_CTBPLAN_FK_I ', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;
	delete	from INDICE
	where	nm_tabela = 'CONTA_CONTABIL'
	and	nm_indice = 'CONCONT_CTBPLAN_FK_I';

	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'CONTA_CONTABIL'
	and	nm_indice = 'CONCONT_CTBPLAN_FK_I';






/*---------------------------AJUSTE DA UK------------------------*/

/*Ajusta a UK da CTB_PLANO_ANS*/

ds_retorno_w := Executar_SQL_Dinamico('ALTER TABLE CTB_PLANO_ANS DROP CONSTRAINT CTBPLAN_UK ', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;
ds_retorno_w := Executar_SQL_Dinamico('ALTER TABLE CTB_PLANO_ANS ADD
			( CONSTRAINT CTBPLAN_UK Unique(	CD_EMPRESA, CD_PLANO, IE_VERSAO)) ', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;
	delete	from INDICE
	where	nm_tabela = 'CTB_PLANO_ANS'
	and	nm_indice = 'CTBPLAN_UK';

	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'CTB_PLANO_ANS'
	and	nm_indice = 'CTBPLAN_UK';


	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('CTB_PLANO_ANS',
		'CTBPLAN_UK',
		'UK',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('CTB_PLANO_ANS', 'CTBPLAN_UK', 1, 'CD_EMPRESA', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('CTB_PLANO_ANS', 'CTBPLAN_UK', 2, 'CD_PLANO', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('CTB_PLANO_ANS', 'CTBPLAN_UK', 3, 'IE_VERSAO', clock_timestamp(), 'Tasy');





/*-------------------------CRIAR----------------*/

/*Ajusta FK do SALDO*/

	ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE CTB_SALDO_ANS ADD
		(CONSTRAINT CTBSAAN_CTBPLAN_FK FOREIGN KEY (CD_EMPRESA, CD_CONTA_ANS, IE_VERSAO_ANS)
		REFERENCES CTB_PLANO_ANS(CD_EMPRESA, CD_PLANO, IE_VERSAO)) ', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;

	insert	into INTEGRIDADE_REFERENCIAL(
		nm_tabela,
		nm_integridade_referencial,
		nm_tabela_referencia,
		dt_atualizacao,
		nm_usuario,
		ie_regra_delecao,
		ds_integridade_referencial,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values (	'CTB_SALDO_ANS',
		'CTBSAAN_CTBPLAN_FK',
		'CTB_PLANO_ANS',
		clock_timestamp(),
		'Tasy',
		'NO ACTION',
		'',
		'I',
		'A',
		clock_timestamp());

	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela, nm_integridade_referencial, nm_atributo, ie_sequencia_criacao, dt_atualizacao, nm_usuario, NM_ATRIBUTO_REF)
	values (	'CTB_SALDO_ANS', 'CTBSAAN_CTBPLAN_FK', 'CD_EMPRESA', 1, clock_timestamp(), 'Tasy', 'CD_EMPRESA');
	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela, nm_integridade_referencial, nm_atributo, ie_sequencia_criacao, dt_atualizacao, nm_usuario, NM_ATRIBUTO_REF)
	values (	'CTB_SALDO_ANS', 'CTBSAAN_CTBPLAN_FK', 'CD_CONTA_ANS', 2, clock_timestamp(), 'Tasy', 'CD_PLANO');
	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela, nm_integridade_referencial, nm_atributo, ie_sequencia_criacao, dt_atualizacao, nm_usuario, NM_ATRIBUTO_REF)
	values (	'CTB_SALDO_ANS', 'CTBSAAN_CTBPLAN_FK', 'IE_VERSAO_ANS', 3, clock_timestamp(), 'Tasy', 'IE_VERSAO');


/*Ajusta indice do SALDO*/

ds_retorno_w := Executar_SQL_Dinamico('DROP INDEX CTBSAAN_CTBPLAN_FK_I ', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;
ds_retorno_w := Executar_SQL_Dinamico('CREATE INDEX CTBSAAN_CTBPLAN_FK_I ON CTB_SALDO_ANS(CD_EMPRESA, CD_CONTA_ANS, IE_VERSAO_ANS)', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;
	delete	from INDICE
	where	nm_tabela = 'CTB_SALDO_ANS'
	and	nm_indice = 'CTBSAAN_CTBPLAN_FK_I';

	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'CTB_SALDO_ANS'
	and	nm_indice = 'CTBSAAN_CTBPLAN_FK_I';


	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('CTB_SALDO_ANS',
		'CTBSAAN_CTBPLAN_FK_I',
		'I',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('CTB_SALDO_ANS', 'CTBSAAN_CTBPLAN_FK_I', 1, 'CD_EMPRESA', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('CTB_SALDO_ANS', 'CTBSAAN_CTBPLAN_FK_I', 2, 'CD_CONTA_ANS', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('CTB_SALDO_ANS', 'CTBSAAN_CTBPLAN_FK_I', 3, 'IE_VERSAO_ANS', clock_timestamp(), 'Tasy');




/*Ajusta FK da CONTA_CONTABIL*/

/*Ajusta FK da CONTA_CONTABIL*/

	ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE CONTA_CONTABIL ADD
		(CONSTRAINT CONCONT_CTBPLAN_FK FOREIGN KEY (CD_EMPRESA, CD_PLANO_ANS, IE_VERSAO_ANS)
		REFERENCES CTB_PLANO_ANS(CD_EMPRESA, CD_PLANO, IE_VERSAO)) ', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;

	insert	into INTEGRIDADE_REFERENCIAL(
		nm_tabela,
		nm_integridade_referencial,
		nm_tabela_referencia,
		dt_atualizacao,
		nm_usuario,
		ie_regra_delecao,
		ds_integridade_referencial,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values (	'CONTA_CONTABIL',
		'CONCONT_CTBPLAN_FK',
		'CTB_PLANO_ANS',
		clock_timestamp(),
		'Tasy',
		'NO ACTION',
		'',
		'I',
		'A',
		clock_timestamp());

	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela, nm_integridade_referencial, nm_atributo, ie_sequencia_criacao, dt_atualizacao, nm_usuario, NM_ATRIBUTO_REF)
	values (	'CONTA_CONTABIL', 'CONCONT_CTBPLAN_FK', 'CD_EMPRESA', 1, clock_timestamp(), 'Tasy', 'CD_EMPRESA');
	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela, nm_integridade_referencial, nm_atributo, ie_sequencia_criacao, dt_atualizacao, nm_usuario, NM_ATRIBUTO_REF)
	values (	'CONTA_CONTABIL', 'CONCONT_CTBPLAN_FK', 'CD_PLANO_ANS', 2, clock_timestamp(), 'Tasy', 'CD_PLANO');
	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela, nm_integridade_referencial, nm_atributo, ie_sequencia_criacao, dt_atualizacao, nm_usuario, NM_ATRIBUTO_REF)
	values (	'CONTA_CONTABIL', 'CONCONT_CTBPLAN_FK', 'IE_VERSAO_ANS', 3, clock_timestamp(), 'Tasy', 'IE_VERSAO');


/*Ajusta indice da CONTA_CONTABIL*/

ds_retorno_w := Executar_SQL_Dinamico('DROP INDEX CONCONT_CTBPLAN_FK_I ', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;
ds_retorno_w := Executar_SQL_Dinamico('CREATE INDEX CONCONT_CTBPLAN_FK_I ON CONTA_CONTABIL(CD_EMPRESA, CD_PLANO_ANS, IE_VERSAO_ANS)', ds_retorno_w);
if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ds_retorno_w <> '0')then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280124, 'DS_RETORNO=' || ds_retorno_w);
end if;
	delete	from INDICE
	where	nm_tabela = 'CONTA_CONTABIL'
	and	nm_indice = 'CONCONT_CTBPLAN_FK_I';

	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'CONTA_CONTABIL'
	and	nm_indice = 'CONCONT_CTBPLAN_FK_I';


	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('CONTA_CONTABIL',
		'CONCONT_CTBPLAN_FK_I',
		'I',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('CONTA_CONTABIL', 'CONCONT_CTBPLAN_FK_I', 1, 'CD_EMPRESA', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('CONTA_CONTABIL', 'CONCONT_CTBPLAN_FK_I', 2, 'CD_PLANO_ANS', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('CONTA_CONTABIL', 'CONCONT_CTBPLAN_FK_I', 3, 'IE_VERSAO_ANS', clock_timestamp(), 'Tasy');



end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_uk_versao_plano_ans () FROM PUBLIC;

