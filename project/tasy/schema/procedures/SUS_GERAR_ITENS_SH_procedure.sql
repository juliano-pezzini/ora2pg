-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_itens_sh ( nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_propaci_w		bigint;
nr_seq_matpaci_w		bigint;
cd_item_w			bigint;
ie_origem_proced_w		bigint;
qt_item_w			double precision;
vl_item_w			double precision;
cd_setor_atendimento_w		integer;
dt_item_w			timestamp;
cd_estabelecimento_w		bigint;
nr_seq_proc_interno_w		procedimento_paciente.nr_seq_proc_interno%type;
cd_registro_w			sus_registro.cd_registro%type := null;
ie_proc_princ_receb_sh_w	sus_parametros_aih.ie_proc_princ_receb_sh%type;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		vl_materiais,
		cd_setor_atendimento,
		dt_procedimento,
		nr_seq_proc_interno
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	sus_obter_se_proc_sh(cd_procedimento,ie_origem_proced,cd_estabelecimento_w)	= 'S'
	and	coalesce(sus_restinge_proc_princ(cd_procedimento,ie_origem_proced,nr_seq_proc_interno,cd_setor_atendimento,nr_interno_conta,cd_estabelecimento_w),1) = 1
	and	coalesce(ie_valor_informado,'N')	= 'N';

c02 CURSOR FOR
	SELECT	nr_sequencia,
		cd_material,
		qt_material,
		0 vl_item,
		cd_setor_atendimento,
		dt_atendimento
	from	material_atend_paciente
	where	nr_interno_conta	= nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	coalesce(ie_valor_informado,'N')	= 'N';

type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;

type 		fetch_array02 is table of c02%rowtype;
w_array 	fetch_array02;
n		integer := 1;
type vetor02 is table of fetch_array02 index by integer;
vetor_c02_w			vetor02;
BEGIN

cd_estabelecimento_w	:= Obter_Estab_Conta_Paciente(nr_interno_conta_p);

begin
select	coalesce(ie_proc_princ_receb_sh,'S')
into STRICT	ie_proc_princ_receb_sh_w
from	sus_parametros_aih
where	cd_estabelecimento = cd_estabelecimento_w  LIMIT 1;
exception
when others then
	ie_proc_princ_receb_sh_w	:= 'S';
end;

open c01;
loop
fetch c01 bulk collect into s_array limit 100000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

for i in 1..vetor_c01_w.count loop
	begin
	s_array := vetor_c01_w(i);
	for z in 1..s_array.count loop
		begin

		nr_seq_propaci_w		:= s_array[z].nr_sequencia;
		cd_item_w			:= s_array[z].cd_procedimento;
		ie_origem_proced_w		:= s_array[z].ie_origem_proced;
		qt_item_w			:= s_array[z].qt_procedimento;
		vl_item_w			:= s_array[z].vl_materiais;
		cd_setor_atendimento_w		:= s_array[z].cd_setor_atendimento;
		dt_item_w			:= s_array[z].dt_procedimento;
		nr_seq_proc_interno_w		:= s_array[z].nr_seq_proc_interno;

		if (ie_origem_proced_w = 7) and (ie_proc_princ_receb_sh_w = 'N') then
			begin

			begin
			select	max(cd_registro)
			into STRICT	cd_registro_w
			from	sus_procedimento_registro
			where	cd_procedimento		= cd_item_w
			and	ie_origem_proced	= ie_origem_proced_w
			and	cd_registro in (3,4,5);
			exception
			when others then
				cd_registro_w := null;
			end;

			end;
		end if;

		/* Gerar procedimentos */

		select	nextval('w_conta_sus_sh_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into w_conta_sus_sh(
			nr_sequencia,
			nr_interno_conta,
			cd_item,
			ie_origem_proced,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			vl_preco,
			vl_receita,
			qt_item,
			nr_seq_propaci,
			nr_seq_matpaci,
			cd_setor_atendimento,
			dt_item,
			vl_original,
			nr_seq_proc_interno,
			cd_registro)
		values (nr_sequencia_w,
			nr_interno_conta_p,
			cd_item_w,
			ie_origem_proced_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			0,
			0,
			qt_item_w,
			nr_seq_propaci_w,
			null,
			cd_setor_atendimento_w,
			dt_item_w,
			vl_item_w,
			nr_seq_proc_interno_w,
			cd_registro_w);

		end;
	end loop;
	end;
end loop;

open c02;
loop
fetch c02 bulk collect into w_array limit 100000;
	vetor_c02_w(n) := w_array;
	n := n + 1;
EXIT WHEN NOT FOUND; /* apply on c02 */
end loop;
close c02;

for j in 1..vetor_c02_w.count loop
	begin
	w_array := vetor_c02_w(j);
	for x in 1..w_array.count loop
		begin

		nr_seq_matpaci_w		:= w_array[x].nr_sequencia;
		cd_item_w			:= w_array[x].cd_material;
		qt_item_w			:= w_array[x].qt_material;
		vl_item_w			:= w_array[x].vl_item;
		cd_setor_atendimento_w		:= w_array[x].cd_setor_atendimento;
		dt_item_w			:= w_array[x].dt_atendimento;

		/* gerar matmed */

		select	nextval('w_conta_sus_sh_seq')
		into STRICT	nr_sequencia_w
		;

		insert	into w_conta_sus_sh(
			nr_sequencia,
			nr_interno_conta,
			cd_item,
			ie_origem_proced,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			vl_preco,
			vl_receita,
			qt_item,
			nr_seq_propaci,
			nr_seq_matpaci,
			cd_setor_atendimento,
			dt_item,
			nr_seq_proc_interno,
			cd_registro)
		values (nr_sequencia_w,
			nr_interno_conta_p,
			cd_item_w,
			0,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			0,
			vl_item_w,
			qt_item_w,
			null,
			nr_seq_matpaci_w,
			cd_setor_atendimento_w,
			dt_item_w,
			null,
			null);

		end;
	end loop;
	end;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_itens_sh ( nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

