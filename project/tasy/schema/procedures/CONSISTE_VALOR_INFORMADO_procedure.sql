-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_valor_informado (NR_INTERNO_CONTA_P bigint, DS_ERRO_P INOUT text) AS $body$
DECLARE


DS_ERRO_W         		varchar(80) 	:= '';
NR_SEQUENCIA_W			bigint		:= 0;
CD_PROCEDIMENTO_W			bigint		:= 0;
VL_PROCEDIMENTO_W			double precision	:= 0;
VL_MEDICO_W				double precision	:= 0;
VL_CUSTO_OPERACIONAL_W		double precision	:= 0;
VL_MATERIAIS_W			double precision	:= 0;
VL_AUXILIARES_W			double precision	:= 0;
VL_ANESTESISTA_W			double precision	:= 0;
IE_RESPONSAVEL_CREDITO_W	varchar(5);
IE_CLASSIFICACAO_W            varchar(1);
VL_PARTICIPANTE_W			double precision	:= 0;
VL_TOTAL_CONTA_W			double precision	:= 0;
CD_MEDICO_EXECUTOR_W		varchar(10);
IE_ENTRA_CONTA_W			varchar(1);
IE_CALCULA_VALOR_W		varchar(1);
IE_REPASSA_MEDICO_W		varchar(1);
IE_COLUNA_SOMA_W			varchar(1);
IE_VALOR_INFORMADO_W		varchar(1);
ds_erro_ww				varchar(80);
ie_desconto_w			varchar(01)	:= 'N';

C01 CURSOR FOR
	SELECT		a.nr_sequencia,
			a.cd_procedimento,
			coalesce(a.vl_procedimento,0),
			coalesce(a.vl_medico,0),
			coalesce(a.vl_custo_operacional,0),
			coalesce(a.vl_materiais,0),
			coalesce(a.vl_auxiliares,0),
			coalesce(a.vl_anestesista,0),
			a.ie_responsavel_credito,
			b.ie_classificacao,
			a.cd_medico_executor,
			a.ie_valor_informado
	from		procedimento_paciente a,
			procedimento b
	where		a.cd_procedimento		= b.cd_procedimento
	and		a.ie_origem_proced	= b.ie_origem_proced
	and		a.nr_interno_conta	= nr_interno_conta_p
	and		a.ie_valor_informado	= 'S'
	and		a.ie_origem_proced	not in (2,3)
	and		coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and		b.ie_classificacao	= '1';




BEGIN

ds_erro_w			:= '';

/* Consistencia dos valores informados */

OPEN C01;
LOOP
FETCH C01 into
		nr_sequencia_w,
		cd_procedimento_w,
		vl_procedimento_w,
		vl_medico_w,
		vl_custo_operacional_w,
		vl_materiais_w,
		vl_auxiliares_w,
		vl_anestesista_w,
		ie_responsavel_credito_w,
		ie_classificacao_w,
		cd_medico_executor_w,
		ie_valor_informado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
		/* Consistencia do medico executor */

		ie_entra_conta_w 		:= 'X';
		ie_calcula_valor_w		:= 'X';
		ie_repassa_medico_w		:= 'X';
		ie_coluna_soma_w		:= 'X';
		ds_erro_ww			:= '';

		if (vl_medico_w	<> 0) then
			begin
			select		coalesce(ie_entra_conta,'X'),
					coalesce(ie_calcula_valor,'X'),
					coalesce(ie_repassa_medico,'X'),
					coalesce(ie_coluna_soma,'X')
			into STRICT		ie_entra_conta_w,
					ie_calcula_valor_w,
					ie_repassa_medico_w,
					ie_coluna_soma_w
			from		regra_honorario
			where		cd_regra	= ie_responsavel_credito_w;
			exception
					when others then
					ie_entra_conta_w := 'N';
			end;
		end if;

		select	coalesce(max('S'), 'N')
		into STRICT	ie_desconto_w
		from	proc_paciente_valor
		where	nr_seq_procedimento	= nr_sequencia_w
		and	ie_tipo_valor		= 3;


		/* Consistencia dos valores */

		if (ie_valor_informado_w = 'S') and (ie_desconto_w = 'N') then
			begin



			vl_participante_w 	:= 0;
			begin
			select 	sum(coalesce(vl_conta,0))
			into STRICT		vl_participante_w
			from		procedimento_participante
			where		nr_sequencia	= nr_sequencia_w;
			exception
					when others then
					vl_participante_w := 0;
			end;

			vl_total_conta_w	:= 	(vl_participante_w + vl_custo_operacional_w +
							vl_materiais_w);

			if (ie_entra_conta_w		= 'S') then
				vl_total_conta_w	:= (vl_total_conta_w + vl_medico_w);
			end if;

			if (vl_total_conta_w	<> vl_procedimento_w) then
				ds_erro_ww := ('11'||'('||WHEB_MENSAGEM_PCK.get_texto(281195)||to_char(cd_procedimento_w)||') ');
			end if;
			end;
		end if;

		if (ds_erro_ww IS NOT NULL AND ds_erro_ww::text <> '') and
			((length(coalesce(ds_erro_w,' ')) + length(ds_erro_ww)) < 79) then
			RAISE NOTICE '% %', ds_erro_w, length(ds_erro_w);
			ds_erro_w	:= ds_erro_ww;
		end if;
	END;
END LOOP;
CLOSE C01;

ds_erro_p	:= ds_erro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_valor_informado (NR_INTERNO_CONTA_P bigint, DS_ERRO_P INOUT text) FROM PUBLIC;

