-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE trocar_conta_auditoria (nr_interno_conta_p bigint, nr_seq_item_p bigint, ie_tipo_item_p bigint, nm_usuario_p text, nr_Seq_motivo_p bigint, ie_transfere_liberada_p text, ie_desdobrar_conta_p text, ie_transferir_conta_p text default 'N') AS $body$
DECLARE



nr_seq_auditoria_w		bigint;
nr_sequencia_w			bigint;
dt_item_w			timestamp;
cd_convenio_orig_w		integer;
cd_convenio_dest_w		integer;
nr_conta_origem_w		bigint;
ie_transfere_liberada_w		varchar(1);
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
dt_periodo_inicial_audit_w	timestamp;
dt_periodo_final_audit_w	timestamp;
nr_seq_audit_w			bigint;
ie_Gerar_Pendencia_w		varchar(1);
vl_material_w			double precision;
vl_procedimento_w		double precision;
cd_categoria_dest_w		conta_paciente.cd_categoria_parametro%TYPE;
cd_convenio_atual_w		conta_paciente.cd_convenio_parametro%TYPE;


BEGIN

ie_transfere_liberada_w:= coalesce(ie_transfere_liberada_p, 'N');
nr_seq_audit_w:= 0;

select 	coalesce(max(cd_convenio_parametro),0),
	MAX(cd_categoria_parametro)
into STRICT	cd_convenio_dest_w,
	cd_categoria_dest_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_p;

if (ie_tipo_item_p	= 1) then

	select 	coalesce(max(a.cd_convenio_parametro),0)
	into STRICT	cd_convenio_orig_w
	from 	conta_paciente a,
		procedimento_paciente b
	where 	a.nr_interno_conta = b.nr_interno_conta
	and 	b.nr_sequencia = nr_seq_item_p;

	update	procedimento_paciente
	set	nr_interno_conta	= nr_interno_conta_p,
		cd_convenio		= cd_convenio_dest_w,
		cd_categoria		= cd_categoria_dest_w,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_item_p;
	
	if (cd_convenio_orig_w <> cd_convenio_dest_w) then
		CALL atualiza_preco_procedimento(nr_seq_item_p, cd_convenio_dest_w, nm_usuario_p);
		
		select 	coalesce(max(a.cd_convenio_parametro),0)
		into STRICT	cd_convenio_atual_w
		from 	conta_paciente a,
			procedimento_paciente b
		where 	a.nr_interno_conta = b.nr_interno_conta
		and 	b.nr_sequencia = nr_seq_item_p;
		
		if (cd_convenio_atual_w <> cd_convenio_dest_w) then
			goto final;
		end if;
	end if;
	
	select 	coalesce(max(a.nr_seq_auditoria),0)
	into STRICT	nr_seq_auditoria_w
	from 	auditoria_propaci a,
		auditoria_conta_paciente b
	where 	a.nr_seq_propaci = nr_seq_item_p
	and 	a.nr_seq_auditoria = b.nr_sequencia
	and 	(((ie_transfere_liberada_w = 'N') and (coalesce(b.dt_liberacao::text, '') = '')) or (ie_transfere_liberada_w = 'S'));
	
	select 	max(coalesce(dt_procedimento,clock_timestamp())),
		max(nr_interno_conta)
	into STRICT	dt_item_w,
		nr_conta_origem_w
	from 	procedimento_paciente
	where 	nr_sequencia = nr_seq_item_p;
	
else

	select 	coalesce(max(a.cd_convenio_parametro),0)
	into STRICT	cd_convenio_orig_w
	from 	conta_paciente a,
		material_atend_paciente b
	where 	a.nr_interno_conta = b.nr_interno_conta
	and 	b.nr_sequencia = nr_seq_item_p;

	update	material_atend_paciente
	set	nr_interno_conta	= nr_interno_conta_p,
		cd_convenio		= cd_convenio_dest_w,
		cd_categoria		= cd_categoria_dest_w,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_item_p;
	
	if (cd_convenio_orig_w <> cd_convenio_dest_w) then		
		CALL atualiza_preco_material(nr_seq_item_p, nm_usuario_p);
		
		select 	coalesce(max(a.cd_convenio_parametro),0)
		into STRICT	cd_convenio_atual_w
		from 	conta_paciente a,
			material_atend_paciente b
		where 	a.nr_interno_conta = b.nr_interno_conta
		and 	b.nr_sequencia = nr_seq_item_p;	

		if (cd_convenio_atual_w <> cd_convenio_dest_w) then
			goto final;
		end if;
	end if;

	select 	coalesce(max(a.nr_seq_auditoria),0)
	into STRICT	nr_seq_auditoria_w
	from 	auditoria_matpaci a,
		auditoria_conta_paciente b
	where 	a.nr_seq_matpaci = nr_seq_item_p
	and 	a.nr_seq_auditoria = b.nr_sequencia
	and 	(((ie_transfere_liberada_w = 'N') and (coalesce(b.dt_liberacao::text, '') = '')) or (ie_transfere_liberada_w = 'S'));
	
	select 	max(coalesce(dt_conta,dt_atendimento)),
		max(nr_interno_conta)
	into STRICT	dt_item_w,
		nr_conta_origem_w
	from 	material_atend_paciente
	where 	nr_sequencia = nr_seq_item_p;

end if;
	
select 	coalesce(max(nr_sequencia),0)
into STRICT	nr_sequencia_w
from 	auditoria_conta_paciente
where 	coalesce(dt_liberacao::text, '') = ''
and 	nr_interno_conta = nr_interno_conta_p
and 	dt_item_w between dt_periodo_inicial and dt_periodo_final;

if	(nr_sequencia_w = 0 AND nr_seq_auditoria_w > 0) then
	
	if (ie_desdobrar_conta_p = 'S') then
		select	max(dt_periodo_inicial),
			max(dt_periodo_final)
		into STRICT	dt_periodo_inicial_w,
			dt_periodo_final_w
		from	conta_paciente
		where	nr_interno_conta = nr_interno_conta_p;
		
		select	coalesce(max(dt_periodo_final),dt_periodo_final_w)
		into STRICT	dt_periodo_final_w
		from	auditoria_conta_paciente
		where	nr_sequencia = nr_seq_auditoria_w;
	end if;
	
	select 	nextval('auditoria_conta_paciente_seq')
	into STRICT	nr_sequencia_w
	;	
	
	nr_seq_audit_w:= nr_sequencia_w;

	insert into auditoria_conta_paciente(			
			nr_sequencia,
			nr_interno_conta,
			cd_auditor,
			dt_auditoria,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_liberacao,
			nr_atendimento,
			dt_periodo_inicial,
			dt_periodo_final,
			ie_tipo_auditoria,
			cd_auditor_externo,
			nm_usuario_resp)
		SELECT 	nr_sequencia_w,
			nr_interno_conta_p,
			cd_auditor,
			dt_auditoria,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			null,
			nr_atendimento,
			coalesce(dt_periodo_inicial_w,dt_periodo_inicial),
			coalesce(dt_periodo_final_w,dt_periodo_final),
			ie_tipo_auditoria,
			cd_auditor_externo,
			nm_usuario_resp
		from 	auditoria_conta_paciente
		where 	nr_sequencia = nr_seq_auditoria_w;	
		
	if (ie_desdobrar_conta_p = 'S') then
	
		select	max(dt_periodo_inicial)
		into STRICT	dt_periodo_inicial_audit_w
		from	auditoria_conta_paciente
		where	nr_sequencia = nr_seq_auditoria_w;
		
		dt_periodo_final_audit_w := dt_periodo_inicial_w - 1/86400;
	
		if (dt_periodo_inicial_audit_w < dt_periodo_final_audit_w) then
			update	auditoria_conta_paciente
			set	dt_periodo_final = dt_periodo_final_audit_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_sequencia = nr_seq_auditoria_w;
		end if;
		
		if (dt_periodo_inicial_audit_w > dt_periodo_inicial_w) then
			update	auditoria_conta_paciente
			set	dt_periodo_inicial = dt_periodo_inicial_audit_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_sequencia = nr_sequencia_w;
		end if;
		
		update	auditoria_conta_espelho
		set	nr_seq_audit_nova = nr_sequencia_w
		where	nr_seq_auditoria = nr_seq_auditoria_w;
		
	end if;
	
	if (coalesce(ie_transferir_conta_p,'N') = 'S') then
	
		update	auditoria_conta_espelho
		set	nr_seq_audit_nova = nr_sequencia_w
		where	nr_seq_auditoria = nr_seq_auditoria_w;
		
	end if;
	
end if;
ie_Gerar_Pendencia_w := coalesce(obter_valor_param_usuario(1116, 136, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

if (ie_tipo_item_p	= 1) then
	
	vl_procedimento_w:= 0;
	if (cd_convenio_orig_w <> cd_convenio_dest_w) then
		
		if (ie_gerar_pendencia_w = 'V') then
			select 	coalesce(max(vl_procedimento),0)
			into STRICT	vl_procedimento_w
			from 	procedimento_paciente
			where 	nr_sequencia = nr_seq_item_p;
			
			update	auditoria_propaci a
			set	vl_procedimento = CASE WHEN cd_convenio_orig_w=cd_convenio_dest_w THEN  vl_procedimento  ELSE vl_procedimento_w END ,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where 	nr_seq_propaci = nr_seq_item_p
			and 	nr_seq_auditoria_w > 0
			and 	exists (	SELECT 	1
						from 	auditoria_conta_paciente x
						where 	x.nr_sequencia = a.nr_seq_auditoria
						and 	(((ie_transfere_liberada_w = 'n') and (coalesce(x.dt_liberacao::text, '') = '')) or (ie_transfere_liberada_w = 's')));	
		end if;
	end if;	
	
	update	auditoria_aprovacao_item a
	set	a.nr_seq_auditoria = CASE WHEN nr_sequencia_w=0 THEN  a.nr_seq_auditoria  ELSE nr_sequencia_w END
	where 	a.nr_seq_auditoria = nr_seq_auditoria_w
	and 	exists (	SELECT 	1 
				from 	auditoria_conta_paciente x
				where 	x.nr_sequencia = a.nr_seq_auditoria
				and 	(((ie_transfere_liberada_w = 'N') and (coalesce(x.dt_liberacao::text, '') = '')) or (ie_transfere_liberada_w = 'S')))
	and	exists (	select	1
				from	auditoria_propaci y
				where	y.nr_sequencia = a.nr_seq_item
				and	y.nr_seq_propaci = nr_seq_item_p);
	
	update	auditoria_propaci a
	set	nr_seq_auditoria = CASE WHEN nr_sequencia_w=0 THEN  nr_seq_auditoria  ELSE nr_sequencia_w END ,
		nr_seq_motivo	= coalesce(nr_Seq_motivo_p,nr_seq_motivo),
		nr_conta_origem = CASE WHEN nr_conta_origem = NULL THEN  nr_conta_origem_w  ELSE nr_conta_origem END ,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where 	nr_seq_propaci = nr_seq_item_p
	and 	nr_seq_auditoria_w > 0
	and 	exists (	SELECT 	1
				from 	auditoria_conta_paciente x
				where 	x.nr_sequencia = a.nr_seq_auditoria
				and 	(((ie_transfere_liberada_w = 'N') and (coalesce(x.dt_liberacao::text, '') = '')) or (ie_transfere_liberada_w = 'S')));

else

	vl_material_w:= 0;
	if (cd_convenio_orig_w <> cd_convenio_dest_w) then
		
		if (ie_Gerar_Pendencia_w = 'V') then
			select 	coalesce(max(vl_material),0)
			into STRICT	vl_material_w
			from 	material_atend_paciente
			where 	nr_sequencia = nr_seq_item_p;
		end if;
	end if;

	update	auditoria_aprovacao_item a
	set	a.nr_seq_auditoria = CASE WHEN nr_sequencia_w=0 THEN  a.nr_seq_auditoria  ELSE nr_sequencia_w END
	where 	a.nr_seq_auditoria = nr_seq_auditoria_w
	and 	exists (	SELECT 	1 
				from 	auditoria_conta_paciente x
				where 	x.nr_sequencia = a.nr_seq_auditoria
				and 	(((ie_transfere_liberada_w = 'N') and (coalesce(x.dt_liberacao::text, '') = '')) or (ie_transfere_liberada_w = 'S')))
	and	exists (	select	1
				from	auditoria_matpaci y
				where	y.nr_sequencia = a.nr_seq_item
				and	y.nr_seq_matpaci = nr_seq_item_p);
	
	update	auditoria_matpaci a
	set	nr_seq_auditoria = CASE WHEN nr_sequencia_w=0 THEN  nr_seq_auditoria  ELSE nr_sequencia_w END ,
		nr_seq_motivo	= coalesce(nr_Seq_motivo_p,nr_seq_motivo),
		nr_conta_origem = CASE WHEN nr_conta_origem = NULL THEN  nr_conta_origem_w  ELSE nr_conta_origem END ,
		vl_material = CASE WHEN ie_Gerar_Pendencia_w='V' THEN  CASE WHEN cd_convenio_orig_w=cd_convenio_dest_w THEN  vl_material  ELSE vl_material_w END   ELSE vl_material END ,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where 	nr_seq_matpaci = nr_seq_item_p
	and 	nr_seq_auditoria_w > 0
	and 	exists (	SELECT 	1
				from 	auditoria_conta_paciente x
				where 	x.nr_sequencia = a.nr_seq_auditoria
				and 	(((ie_transfere_liberada_w = 'N') and (coalesce(x.dt_liberacao::text, '') = '')) or (ie_transfere_liberada_w = 'S')));
				
end if;


update	auditoria_conta_paciente
set 	vl_auditoria_orig =  CASE WHEN ie_Gerar_Pendencia_w='V' THEN  Obter_valor_Orig_Audit(nr_sequencia)  ELSE obter_valor_auditoria(nr_sequencia, nr_interno_conta) END ,
	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp()
where 	nr_sequencia = nr_seq_audit_w;

<<final>>

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE trocar_conta_auditoria (nr_interno_conta_p bigint, nr_seq_item_p bigint, ie_tipo_item_p bigint, nm_usuario_p text, nr_Seq_motivo_p bigint, ie_transfere_liberada_p text, ie_desdobrar_conta_p text, ie_transferir_conta_p text default 'N') FROM PUBLIC;

