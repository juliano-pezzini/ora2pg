-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_atend_pac_int_opme ( nr_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


cd_material_w			bigint;
nr_sequencia_item_w		bigint;
nr_sequencia_w			bigint;
qt_material_w			double precision;
ds_grupo_w			varchar(255);
ds_material_w			varchar(255);
ds_cnpj_w			varchar(255);
cd_cnpj_w			varchar(14);
qt_existe_w			bigint;
nr_seq_int_opme_w		bigint;
nr_seq_agenda_w			bigint;
nr_sequencia_agend_w		bigint;
cd_procedimento_w		bigint;
nr_seq_proc_pac_w		bigint;
nr_sequencia_agenda_w		bigint;
ie_opme_integracao_W		varchar(1);
ie_origem_proced_w		bigint;
qt_existe_mat_w			bigint;
nr_atendimento_w		bigint;
qt_existe_util_w		bigint;
nr_sequencia_map_w		bigint;
qt_material_existente_w 	double precision;
nr_sequencia_existente_w 	bigint;
qt_material_alterado_w		double precision;
qt_existe_mat_int_w		bigint;
dt_atendimento_w		timestamp;

c02 CURSOR FOR
	SELECT	d.cd_cgc_fornecedor,
		d.cd_material,
		d.qt_material,
		d.nr_atendimento,
		d.nr_sequencia
	from	material_atend_paciente d
	where	d.nr_atendimento = nr_atendimento_p
	and 	d.qt_material > 0
	and	obter_regra_int_opme_material(d.cd_material,3) = 'S'
	and	((d.cd_funcao not in (36,67,1116,900)) or ((d.cd_funcao in (36,67)) and coalesce(nr_prescricao,0) = 0))
	and	not exists (SELECT 1
			    from   agenda_pac_opme a,
			    	   agenda_paciente b
			    where  a.nr_seq_agenda  = b.nr_sequencia
			    and    b.nr_atendimento = d.nr_atendimento
			    and    a.cd_material    = d.cd_material
			    and    a.cd_cgc         = d.cd_cgc_fornecedor
			    and	   a.nr_seq_map	    = d.nr_sequencia)
	and 	not exists (select 1
			    from atend_pac_int_opme_item x
			    where d.nr_sequencia = x.nr_seq_map
			    and d.cd_material = x.cd_material);


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	atend_pac_int_opme
where	nr_atendimento = nr_atendimento_p
and ((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')  or (trunc(dt_atualizacao) = trunc(clock_timestamp())));

select	count(*)
into STRICT	qt_existe_mat_int_w
from	material_atend_paciente d
where	d.nr_atendimento =  nr_atendimento_p
and 	d.qt_material > 0
and	obter_regra_int_opme_material(d.cd_material,3) = 'S'
and	((d.cd_funcao not in (36,67,1116,900)) or ((d.cd_funcao in (36,67)) and coalesce(nr_prescricao,0) = 0))
and	trunc(dt_atualizacao_nrec) = trunc(clock_timestamp())
and	not exists (SELECT 1
		    from   agenda_pac_opme a,
		    	   agenda_paciente b
		    where  a.nr_seq_agenda  = b.nr_sequencia
		    and    b.nr_atendimento = d.nr_atendimento
		    and    a.cd_material    = d.cd_material
		    and    a.cd_cgc         = d.cd_cgc_fornecedor
		    and	   a.nr_seq_map	    = d.nr_sequencia)
and 	not exists (select 1
		    from atend_pac_int_opme_item x
		    where d.nr_sequencia = x.nr_seq_map
		    and d.cd_material = x.cd_material);

if (qt_existe_w = 0) and (qt_existe_mat_int_w > 0) then
	begin

	select 	nextval('atend_pac_int_opme_seq')
	into STRICT	nr_sequencia_w
	;

	insert into atend_pac_int_opme(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_atendimento,
		ie_opme_int_status)
	values (	nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_atendimento_p,
		'60');
	end;

end if;

if (qt_existe_mat_int_w = 0) then

	select	count(*)
	into STRICT	qt_existe_mat_int_w
	from	material_atend_paciente d
	where	d.nr_atendimento =  nr_atendimento_p
	and 	d.qt_material > 0
	and	obter_regra_int_opme_material(d.cd_material,3) = 'S'
	and	((d.cd_funcao not in (36,67,1116,900)) or ((d.cd_funcao in (36,67)) and coalesce(nr_prescricao,0) = 0))
	and	trunc(coalesce(dt_atualizacao_nrec, dt_atualizacao)) = (SELECT trunc(max(coalesce(z.dt_atualizacao_nrec, dt_atualizacao)))
					from	material_atend_paciente z
					where	z.nr_atendimento = nr_atendimento_p
					and	z.cd_material = d.cd_material)
	and	not exists (select 1
			    from   agenda_pac_opme a,
				   agenda_paciente b
			    where  a.nr_seq_agenda  = b.nr_sequencia
			    and    b.nr_atendimento = d.nr_atendimento
			    and    a.cd_material    = d.cd_material
			    and    a.cd_cgc         = d.cd_cgc_fornecedor
			    and	   a.nr_seq_map	    = d.nr_sequencia)
	and 	not exists (select 1
			    from atend_pac_int_opme_item x
			    where d.nr_sequencia = x.nr_seq_map
			    and d.cd_material = x.cd_material);

	select	trunc(max(coalesce(dt_atualizacao_nrec, dt_atualizacao)))
	into STRICT	dt_atendimento_w
	from	material_atend_paciente
	where	nr_atendimento = nr_atendimento_p
	and	obter_regra_int_opme_material(cd_material,3) = 'S';

	select	count(*)
	into STRICT	qt_existe_w
	from	atend_pac_int_opme
	where	nr_atendimento = nr_atendimento_p
	and ((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')  or (trunc(dt_atualizacao) = trunc(dt_atendimento_w)));


	if (qt_existe_w = 0) and (qt_existe_mat_int_w > 0) then
		begin

		select 	nextval('atend_pac_int_opme_seq')
		into STRICT	nr_sequencia_w
		;

		insert into atend_pac_int_opme(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_atendimento,
			ie_opme_int_status)
		values (	nr_sequencia_w,
			dt_atendimento_w,
			nm_usuario_p,
			dt_atendimento_w,
			nm_usuario_p,
			nr_atendimento_p,
			'60');

		end;
	end if;

end if;

open C02;
loop
fetch C02 into
	cd_cnpj_w,
	cd_material_w,
	qt_material_w,
	nr_atendimento_w,
	nr_sequencia_map_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	max(cd_cgc)
	into STRICT	cd_cnpj_w
	from	material_fornec
	where	cd_material = cd_material_w
	and	cd_estabelecimento = cd_estabelecimento_p;

	if (coalesce(nr_sequencia_w,0) = 0) then
		select 	max(nr_sequencia)
		into STRICT	nr_seq_int_opme_w
		from	atend_pac_int_opme
		where	nr_atendimento = nr_atendimento_w;
	end if;

	select	count(*)
	into STRICT	qt_existe_mat_w
	from	atend_pac_int_opme_item a,
		atend_pac_int_opme b
	where	b.nr_sequencia = a.nr_seq_atend_int
	and	b.nr_sequencia = coalesce(nr_seq_int_opme_w,nr_sequencia_w)
	and	cd_cnpj = cd_cnpj_w
	and	cd_material = cd_material_w
	and	b.nr_atendimento = nr_atendimento_w
	and 	a.nr_seq_map = nr_sequencia_map_w;

	if (coalesce(qt_existe_mat_w,0) = 0) then
		begin
		select 	nextval('atend_pac_int_opme_item_seq')
		into STRICT	nr_sequencia_item_w
		;

		insert into atend_pac_int_opme_item(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_atend_int,
				qt_material,
				cd_cnpj,
				cd_material,
				nr_seq_map)
		values (nr_sequencia_item_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(nr_sequencia_w,nr_seq_int_opme_w),
				qt_material_w,
				cd_cnpj_w,
				cd_material_w,
				nr_sequencia_map_w);
		end;

		select 	max(a.cd_procedimento),
			max(ie_origem_proced)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w
		from    procedimento_paciente a
		where   a.nr_atendimento        = nr_atendimento_w
		and 	(nr_sequencia_prescricao IS NOT NULL AND nr_sequencia_prescricao::text <> '')
		and 	obter_classif_Setor(a.cd_setor_atendimento) = 1
		and 	exists (SELECT 1
				from material_atend_paciente x
				where x.cd_setor_atendimento = a.cd_setor_atendimento
				and 	a.nr_atendimento = x.nr_atendimento
				and 	a.cd_convenio = x.cd_convenio);

		update	atend_pac_int_opme
		set	cd_procedimento =  cd_procedimento_w,
			ie_origem_proced = ie_origem_proced_w
		where	nr_atendimento = nr_atendimento_p;
	end if;
	end;
end loop;
close C02;

select 	max(nr_seq_proc_pac)
into STRICT	nr_seq_proc_pac_w
from	w_int_opme_itens_util
where	nr_atendimento = nr_atendimento_p;

if (coalesce(nr_seq_proc_pac_w,0) > 0) then

	select	cd_procedimento,
		ie_origem_proced
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w
	from    procedimento_paciente
	where   nr_atendimento = nr_atendimento_p
	and 	nr_sequencia = nr_seq_proc_pac_w;

	update	atend_pac_int_opme
	set	cd_procedimento =  cd_procedimento_w,
		ie_origem_proced = ie_origem_proced_w
	where	nr_atendimento = nr_atendimento_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_atend_pac_int_opme ( nr_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

