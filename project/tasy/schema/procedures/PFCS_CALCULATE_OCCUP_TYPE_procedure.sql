-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calculate_occup_type ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


-- Tasy cursors
--- Occupied
c01_tasy CURSOR(cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text) FOR
SELECT	b.dt_entrada_unidade dt_entry_unit,
	a.cd_pessoa_fisica id_patient,
	coalesce(get_formatted_person_name(a.cd_pessoa_fisica, 'list'), obter_nome_pf(a.cd_pessoa_fisica)) nm_patient,
	pfcs_obter_lista_dados_classif(a.cd_pessoa_fisica) ds_classification,
	obter_sexo_pf(a.cd_pessoa_fisica, 'D') ds_gender,
	pf.dt_nascimento dt_birthdate,
    obter_dados_pf(a.cd_pessoa_fisica, 'I') qt_idade_paciente,
	a.nr_atendimento nr_encounter,
	a.dt_entrada dt_entrance
from	unidade_atendimento	c,
	atend_paciente_unidade	b,
	atendimento_paciente	a,
	pessoa_fisica pf
where	a.nr_atendimento	= b.nr_atendimento
and	c.cd_setor_atendimento	= cd_setor_atendimento_p
and	c.cd_unidade_basica	= cd_unidade_basica_p
and	c.cd_unidade_compl	= cd_unidade_compl_p
and	c.cd_setor_atendimento	= b.cd_setor_atendimento
and	c.cd_unidade_basica	= b.cd_unidade_basica
and	c.cd_unidade_compl	= b.cd_unidade_compl
and	b.nr_seq_interno	= obter_atepacu_paciente(c.nr_atendimento,'A')
and	c.ie_situacao		= 'A'
and	a.cd_pessoa_fisica	= pf.cd_pessoa_fisica;

--- ICU Beds
c02_tasy CURSOR FOR
SELECT	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department,
	c.cd_unidade_basica || ' ' || c.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, c.ie_status_unidade),1,255) ds_status,
	c.ie_status_unidade cd_status,
	c.ie_temporario ie_temporary,
	c.cd_unidade_basica,
	c.cd_unidade_compl,
	1 cd_type,
	substr(obter_valor_dominio(9537, '1'),1,255) ds_type,
    c.nr_seq_location
from	setor_atendimento	d,
	unidade_atendimento	c
where	c.cd_setor_atendimento	= d.cd_setor_atendimento
and	c.ie_situacao		= 'A'
and	d.ie_situacao		= 'A'
and	d.cd_classif_setor	= to_char(4)
and	d.cd_estabelecimento_base = cd_estabelecimento_p;

--- Private Beds
c03_tasy CURSOR FOR
SELECT	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department,
	c.cd_unidade_basica || ' ' || c.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, c.ie_status_unidade),1,255) ds_status,
	c.ie_status_unidade cd_status,
	c.ie_temporario ie_temporary,
	c.cd_unidade_basica,
	c.cd_unidade_compl,
	2 cd_type,
	substr(obter_valor_dominio(9537, '2'),1,255) ds_type,
    c.nr_seq_location
from	setor_atendimento	d,
	unidade_atendimento	c
where	c.cd_setor_atendimento	= d.cd_setor_atendimento
and	c.ie_situacao		= 'A'
and	d.ie_situacao		= 'A'
and	d.cd_classif_setor	in ('1','3','4','9','11','12')
and	d.ie_ocup_hospitalar	<> 'N'
and	pfcs_get_if_private_room(c.nr_seq_interno) = 'S'
and	d.cd_estabelecimento_base = cd_estabelecimento_p;

--- Collective Beds
c04_tasy CURSOR FOR
SELECT	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department,
	c.cd_unidade_basica || ' ' || c.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, c.ie_status_unidade),1,255) ds_status,
	c.ie_status_unidade cd_status,
	c.ie_temporario ie_temporary,
	c.cd_unidade_basica,
	c.cd_unidade_compl,
	3 cd_type,
	substr(obter_valor_dominio(9537, '3'),1,255) ds_type,
    c.nr_seq_location
from	setor_atendimento	d,
	unidade_atendimento	c
where	c.cd_setor_atendimento	= d.cd_setor_atendimento
and	c.ie_situacao		= 'A'
and	d.ie_situacao		= 'A'
and	d.cd_classif_setor	in ('1','3','4','9','11','12')
and	d.ie_ocup_hospitalar	<> 'N'
and	pfcs_get_if_private_room(c.nr_seq_interno) = 'N'
and	d.cd_estabelecimento_base = cd_estabelecimento_p;

--- Isolated Beds
c05_tasy CURSOR FOR
SELECT	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department,
	c.cd_unidade_basica || ' ' || c.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, c.ie_status_unidade),1,255) ds_status,
	c.ie_status_unidade cd_status,
	c.ie_temporario ie_temporary,
	c.cd_unidade_basica,
	c.cd_unidade_compl,
	4 cd_type,
	substr(obter_valor_dominio(9537, '4'),1,255) ds_type,
    c.nr_seq_location
from	setor_atendimento	d,
	unidade_atendimento	c
where	c.cd_setor_atendimento	= d.cd_setor_atendimento
and	c.ie_situacao		= 'A'
and	d.ie_situacao		= 'A'
and	d.cd_classif_setor	in ('1','3','4','9','11','12')
and	d.ie_ocup_hospitalar	<> 'N'
and c.ie_status_unidade = 'O'
and	d.cd_estabelecimento_base = cd_estabelecimento_p

union all

select	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department,
	c.cd_unidade_basica || ' ' || c.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, c.ie_status_unidade),1,255) ds_status,
	c.ie_status_unidade cd_status,
	c.ie_temporario ie_temporary,
	c.cd_unidade_basica,
	c.cd_unidade_compl,
	4 cd_type,
	substr(obter_valor_dominio(9537, '4'),1,255) ds_type,
    c.nr_seq_location
from	setor_atendimento	d,
	unidade_atendimento	c
where	c.cd_setor_atendimento	= d.cd_setor_atendimento
and	c.ie_situacao		= 'A'
and	d.ie_situacao		= 'A'
and	d.cd_classif_setor	in ('1','3','4','9','11','12')
and	d.ie_ocup_hospitalar	<> 'N'
and 	c.ie_status_unidade = 'P'
and	(c.nr_atendimento IS NOT NULL AND c.nr_atendimento::text <> '')
and	exists ( select 1 from atendimento_paciente x where x.nr_atendimento = c.nr_atendimento and coalesce(ie_paciente_isolado,'N') = 'S')
and	d.cd_estabelecimento_base = cd_estabelecimento_p;

--- Feminine Beds
c06_tasy CURSOR FOR
SELECT	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department,
	c.cd_unidade_basica || ' ' || c.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, c.ie_status_unidade),1,255) ds_status,
	c.ie_status_unidade cd_status,
	c.ie_temporario ie_temporary,
	c.cd_unidade_basica,
	c.cd_unidade_compl,
	5 cd_type,
	substr(obter_valor_dominio(9537, '5'),1,255) ds_type
from	setor_atendimento	d,
	unidade_atendimento	c
where	c.cd_setor_atendimento	= d.cd_setor_atendimento
and	c.ie_situacao		= 'A'
and	d.ie_situacao		= 'A'
and	d.cd_classif_setor	in ('1','3','4','9','11','12')
and	d.ie_ocup_hospitalar	<> 'N'
and	c.ie_sexo_paciente in ('f', 'F')
and	d.cd_estabelecimento_base = cd_estabelecimento_p;

--- Masculine Beds
c07_tasy CURSOR FOR
SELECT	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department,
	c.cd_unidade_basica || ' ' || c.cd_unidade_compl ds_location,
	substr(obter_valor_dominio(82, c.ie_status_unidade),1,255) ds_status,
	c.ie_status_unidade cd_status,
	c.ie_temporario ie_temporary,
	c.cd_unidade_basica,
	c.cd_unidade_compl,
	6 cd_type,
	substr(obter_valor_dominio(9537, '6'),1,255) ds_type
from	setor_atendimento	d,
	unidade_atendimento	c
where	c.cd_setor_atendimento	= d.cd_setor_atendimento
and	c.ie_situacao		= 'A'
and	d.ie_situacao		= 'A'
and	d.cd_classif_setor	in ('1','3','4','9','11','12')
and	d.ie_ocup_hospitalar	<> 'N'
and	c.ie_sexo_paciente in ('m', 'M')
and	d.cd_estabelecimento_base = cd_estabelecimento_p;


-- Integration cursors
c01_fhir CURSOR(nr_seq_location_p bigint) FOR
SELECT distinct enc.period_start dt_entry_unit,
    pat.patient_id id_patient,
	pfcs_get_human_name(pat.nr_sequencia, 'Patient') nm_patient,
	enc.ds_classification ds_classification,
	pat.gender ds_gender,
	pat.birthdate dt_birthdate,
    trunc(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)/12) qt_idade_paciente,
	enc.id_encounter nr_encounter,
    enc.period_start dt_entrance
from setor_atendimento	sec,
	unidade_atendimento	uni,
    pfcs_patient pat,
    pfcs_encounter enc,
    pfcs_patient_loc_hist hst
where enc.nr_seq_patient = pat.nr_sequencia
    and sec.cd_setor_atendimento = uni.cd_setor_atendimento
    and uni.nr_seq_location = nr_seq_location_p
    and (enc.period_start IS NOT NULL AND enc.period_start::text <> '')
    and coalesce(enc.period_end::text, '') = ''
    and (hst.dt_period_start IS NOT NULL AND hst.dt_period_start::text <> '')
    and coalesce(hst.dt_period_end::text, '') = ''
    and hst.si_intent = 'ORDER'
    and hst.nr_seq_encounter = enc.nr_sequencia
    and hst.nr_seq_location = uni.nr_seq_location
    and hst.ie_situacao = 'A';


-- Variables
pfcs_flag_settings_w            pfcs_general_rule.ie_table_origin%type;
pfcs_panel_detail_seq_w			pfcs_panel_detail.nr_sequencia%type;
pfcs_detail_bed_seq_w			pfcs_detail_bed.nr_sequencia%type;
pfcs_panel_seq_w			    pfcs_panel.nr_sequencia%type;
nr_seq_operational_level_w		pfcs_operational_level.nr_sequencia%type;
qt_unit_w				        numeric(20) := 0;
qt_unit_occupied_w			    numeric(20) := 0;
BEGIN
nr_seq_operational_level_w := pfcs_get_structure_level(
		cd_establishment_p => cd_estabelecimento_p,
		ie_level_p => 'O',
		ie_info_p => 'C');

select ie_table_origin
into STRICT pfcs_flag_settings_w
from pfcs_general_rule;

for c02_w in c02_tasy loop
    qt_unit_w := qt_unit_w + 1;

    select	nextval('pfcs_panel_detail_seq')
    into STRICT	pfcs_panel_detail_seq_w
;

    insert into pfcs_panel_detail(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        ie_situation,
        nr_seq_indicator,
        nr_seq_operational_level)
    values (
        pfcs_panel_detail_seq_w,
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        'T',
        nr_seq_indicator_p,
        nr_seq_operational_level_w);

    select	nextval('pfcs_detail_bed_seq')
    into STRICT	pfcs_detail_bed_seq_w
;

    insert into pfcs_detail_bed(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        nr_seq_detail,
        ds_location,
        cd_department,
        ds_department,
        ds_status,
        cd_status,
        cd_type,
        ds_type)
    values (
        pfcs_detail_bed_seq_w,
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        pfcs_panel_detail_seq_w,
        c02_w.ds_location,
        c02_w.cd_department,
        c02_w.ds_department,
        c02_w.ds_status,
        c02_w.cd_status,
        c02_w.cd_type,
        c02_w.ds_type);

    -- Tasy tables or both
    if (pfcs_flag_settings_w = 0 or pfcs_flag_settings_w = 2) then
        for c01_w in c01_tasy(c02_w.cd_department, c02_w.cd_unidade_basica, c02_w.cd_unidade_compl) loop
            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente);

            update pfcs_detail_bed
            set dt_entry_unit = c01_w.dt_entry_unit
            where nr_sequencia = pfcs_detail_bed_seq_w;

            qt_unit_occupied_w := qt_unit_occupied_w + 1;
        end loop;
        commit;
    end if;

    -- Integration tables or both
    if (pfcs_flag_settings_w = 1 or pfcs_flag_settings_w = 2) then
        for c01_w in c01_fhir(c02_w.nr_seq_location) loop
            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente);

            update pfcs_detail_bed
            set dt_entry_unit = c01_w.dt_entry_unit
            where nr_sequencia = pfcs_detail_bed_seq_w;

            qt_unit_occupied_w := qt_unit_occupied_w + 1;
        end loop;
        commit;
    end if;
end loop;

 := pfcs_pck.pfcs_generate_results(
        vl_indicator_p => qt_unit_occupied_w, vl_indicator_aux_p => qt_unit_w, ds_reference_value_p => substr(obter_valor_dominio(9537, '1'),1,255), cd_reference_value_p => '1', nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

CALL pfcs_pck.pfcs_update_detail(
        nr_seq_indicator_p => nr_seq_indicator_p,
        nr_seq_panel_p => pfcs_panel_seq_w,
        nr_seq_operational_level_p => nr_seq_operational_level_w,
        nm_usuario_p => nm_usuario_p);

qt_unit_occupied_w := 0;
qt_unit_w := 0;

for c03_w in c03_tasy loop
    qt_unit_w := qt_unit_w + 1;

    select	nextval('pfcs_panel_detail_seq')
    into STRICT	pfcs_panel_detail_seq_w
;

    insert into pfcs_panel_detail(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        ie_situation,
        nr_seq_indicator,
        nr_seq_operational_level)
    values (
        pfcs_panel_detail_seq_w,
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        'T',
        nr_seq_indicator_p,
        nr_seq_operational_level_w);

    select	nextval('pfcs_detail_bed_seq')
    into STRICT	pfcs_detail_bed_seq_w
;

    insert into pfcs_detail_bed(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        nr_seq_detail,
        ds_location,
        cd_department,
        ds_department,
        ds_status,
        cd_status,
        cd_type,
        ds_type)
    values (
        pfcs_detail_bed_seq_w,
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        pfcs_panel_detail_seq_w,
        c03_w.ds_location,
        c03_w.cd_department,
        c03_w.ds_department,
        c03_w.ds_status,
        c03_w.cd_status,
        c03_w.cd_type,
        c03_w.ds_type);

    -- Tasy tables or both
    if (pfcs_flag_settings_w = 0 or pfcs_flag_settings_w = 2) then
        for c01_w in c01_tasy(c03_w.cd_department, c03_w.cd_unidade_basica, c03_w.cd_unidade_compl) loop
            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente);

            update pfcs_detail_bed
            set dt_entry_unit = c01_w.dt_entry_unit
            where nr_sequencia = pfcs_detail_bed_seq_w;

            qt_unit_occupied_w := qt_unit_occupied_w + 1;
        end loop;
        commit;
    end if;

    -- Integration tables or both
    if (pfcs_flag_settings_w = 1 or pfcs_flag_settings_w = 2) then
        for c01_w in c01_fhir(c03_w.nr_seq_location) loop
            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente);

            update pfcs_detail_bed
            set dt_entry_unit = c01_w.dt_entry_unit
            where nr_sequencia = pfcs_detail_bed_seq_w;

            qt_unit_occupied_w := qt_unit_occupied_w + 1;
        end loop;
        commit;
    end if;
end loop;

 := pfcs_pck.pfcs_generate_results(
        vl_indicator_p => qt_unit_occupied_w, vl_indicator_aux_p => qt_unit_w, ds_reference_value_p => substr(obter_valor_dominio(9537, '2'),1,255), cd_reference_value_p => '2', nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

CALL pfcs_pck.pfcs_update_detail(
        nr_seq_indicator_p => nr_seq_indicator_p,
        nr_seq_panel_p => pfcs_panel_seq_w,
        nr_seq_operational_level_p => nr_seq_operational_level_w,
        nm_usuario_p => nm_usuario_p);

qt_unit_occupied_w := 0;
qt_unit_w := 0;

for c04_w in c04_tasy loop
    qt_unit_w := qt_unit_w + 1;

    select	nextval('pfcs_panel_detail_seq')
    into STRICT	pfcs_panel_detail_seq_w
;

    insert into pfcs_panel_detail(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        ie_situation,
        nr_seq_indicator,
        nr_seq_operational_level)
    values (
        pfcs_panel_detail_seq_w,
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        'T',
        nr_seq_indicator_p,
        nr_seq_operational_level_w);

    select	nextval('pfcs_detail_bed_seq')
    into STRICT	pfcs_detail_bed_seq_w
;

    insert into pfcs_detail_bed(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        nr_seq_detail,
        ds_location,
        cd_department,
        ds_department,
        ds_status,
        cd_status,
        cd_type,
        ds_type)
    values (
        pfcs_detail_bed_seq_w,
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        pfcs_panel_detail_seq_w,
        c04_w.ds_location,
        c04_w.cd_department,
        c04_w.ds_department,
        c04_w.ds_status,
        c04_w.cd_status,
        c04_w.cd_type,
        c04_w.ds_type);

    -- Tasy tables or both
    if (pfcs_flag_settings_w = 0 or pfcs_flag_settings_w = 2) then
        for c01_w in c01_tasy(c04_w.cd_department, c04_w.cd_unidade_basica, c04_w.cd_unidade_compl) loop
            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente);

            update pfcs_detail_bed
            set dt_entry_unit = c01_w.dt_entry_unit
            where nr_sequencia = pfcs_detail_bed_seq_w;

            qt_unit_occupied_w := qt_unit_occupied_w + 1;
        end loop;
        commit;
    end if;

     -- Integration tables or both
    if (pfcs_flag_settings_w = 1 or pfcs_flag_settings_w = 2) then
        for c01_w in c01_fhir(c04_w.nr_seq_location) loop
            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente);

            update pfcs_detail_bed
            set dt_entry_unit = c01_w.dt_entry_unit
            where nr_sequencia = pfcs_detail_bed_seq_w;

            qt_unit_occupied_w := qt_unit_occupied_w + 1;
        end loop;
        commit;
    end if;
end loop;

 := pfcs_pck.pfcs_generate_results(
        vl_indicator_p => qt_unit_occupied_w, vl_indicator_aux_p => qt_unit_w, ds_reference_value_p => substr(obter_valor_dominio(9537, '3'),1,255), cd_reference_value_p => '3', nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

CALL pfcs_pck.pfcs_update_detail(
        nr_seq_indicator_p => nr_seq_indicator_p,
        nr_seq_panel_p => pfcs_panel_seq_w,
        nr_seq_operational_level_p => nr_seq_operational_level_w,
        nm_usuario_p => nm_usuario_p);

qt_unit_occupied_w := 0;
qt_unit_w := 0;

for c05_w in c05_tasy loop
    qt_unit_w := qt_unit_w + 1;

    select	nextval('pfcs_panel_detail_seq')
    into STRICT	pfcs_panel_detail_seq_w
;

    insert into pfcs_panel_detail(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        ie_situation,
        nr_seq_indicator,
        nr_seq_operational_level)
    values (
        pfcs_panel_detail_seq_w,
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        'T',
        nr_seq_indicator_p,
        nr_seq_operational_level_w);

    select	nextval('pfcs_detail_bed_seq')
    into STRICT	pfcs_detail_bed_seq_w
;

    insert into pfcs_detail_bed(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        nr_seq_detail,
        ds_location,
        cd_department,
        ds_department,
        ds_status,
        cd_status,
        cd_type,
        ds_type)
    values (
        pfcs_detail_bed_seq_w,
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        pfcs_panel_detail_seq_w,
        c05_w.ds_location,
        c05_w.cd_department,
        c05_w.ds_department,
        c05_w.ds_status,
        c05_w.cd_status,
        c05_w.cd_type,
        c05_w.ds_type);

    -- Tasy tables or both
    if (pfcs_flag_settings_w = 0 or pfcs_flag_settings_w = 2) then
        for c01_w in c01_tasy(c05_w.cd_department, c05_w.cd_unidade_basica, c05_w.cd_unidade_compl) loop
            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente);

            update pfcs_detail_bed
            set dt_entry_unit = c01_w.dt_entry_unit
            where nr_sequencia = pfcs_detail_bed_seq_w;

            qt_unit_occupied_w := qt_unit_occupied_w + 1;
        end loop;
        commit;
    end if;

     -- Integration tables or both
    if (pfcs_flag_settings_w = 1 or pfcs_flag_settings_w = 2) then
        for c01_w in c01_fhir(c05_w.nr_seq_location) loop
            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente);

            update pfcs_detail_bed
            set dt_entry_unit = c01_w.dt_entry_unit
            where nr_sequencia = pfcs_detail_bed_seq_w;

            qt_unit_occupied_w := qt_unit_occupied_w + 1;
        end loop;
        commit;
    end if;
end loop;

 := pfcs_pck.pfcs_generate_results(
        vl_indicator_p => qt_unit_occupied_w, vl_indicator_aux_p => qt_unit_w, ds_reference_value_p => substr(obter_valor_dominio(9537, '4'),1,255), cd_reference_value_p => '4', nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

CALL pfcs_pck.pfcs_update_detail(
        nr_seq_indicator_p => nr_seq_indicator_p,
        nr_seq_panel_p => pfcs_panel_seq_w,
        nr_seq_operational_level_p => nr_seq_operational_level_w,
        nm_usuario_p => nm_usuario_p);

qt_unit_occupied_w := 0;
qt_unit_w := 0;

-- Tasy tables or both
if (pfcs_flag_settings_w = 0 or pfcs_flag_settings_w = 2) then
    for c06_w in c06_tasy loop
        qt_unit_w := qt_unit_w + 1;

        select	nextval('pfcs_panel_detail_seq')
        into STRICT	pfcs_panel_detail_seq_w
;

        insert into pfcs_panel_detail(
            nr_sequencia,
            nm_usuario,
            dt_atualizacao,
            nm_usuario_nrec,
            dt_atualizacao_nrec,
            ie_situation,
            nr_seq_indicator,
            nr_seq_operational_level)
        values (
            pfcs_panel_detail_seq_w,
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            'T',
            nr_seq_indicator_p,
            nr_seq_operational_level_w);

        select	nextval('pfcs_detail_bed_seq')
        into STRICT	pfcs_detail_bed_seq_w
;

        insert into pfcs_detail_bed(
            nr_sequencia,
            nm_usuario,
            dt_atualizacao,
            nm_usuario_nrec,
            dt_atualizacao_nrec,
            nr_seq_detail,
            ds_location,
            cd_department,
            ds_department,
            ds_status,
            cd_status,
            cd_type,
            ds_type)
        values (
            pfcs_detail_bed_seq_w,
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            pfcs_panel_detail_seq_w,
            c06_w.ds_location,
            c06_w.cd_department,
            c06_w.ds_department,
            c06_w.ds_status,
            c06_w.cd_status,
            c06_w.cd_type,
            c06_w.ds_type);

        for c01_w in c01_tasy(c06_w.cd_department, c06_w.cd_unidade_basica, c06_w.cd_unidade_compl) loop
            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente);

            update pfcs_detail_bed
            set dt_entry_unit = c01_w.dt_entry_unit
            where nr_sequencia = pfcs_detail_bed_seq_w;

            qt_unit_occupied_w := qt_unit_occupied_w + 1;
        end loop;
    end loop;

     := pfcs_pck.pfcs_generate_results(
            vl_indicator_p => qt_unit_occupied_w, vl_indicator_aux_p => qt_unit_w, ds_reference_value_p => substr(obter_valor_dominio(9537, '5'),1,255), cd_reference_value_p => '5', nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

    CALL pfcs_pck.pfcs_update_detail(
            nr_seq_indicator_p => nr_seq_indicator_p,
            nr_seq_panel_p => pfcs_panel_seq_w,
            nr_seq_operational_level_p => nr_seq_operational_level_w,
            nm_usuario_p => nm_usuario_p);

    qt_unit_occupied_w := 0;
    qt_unit_w := 0;

    for c07_w in c07_tasy loop
        qt_unit_w := qt_unit_w + 1;

        select	nextval('pfcs_panel_detail_seq')
        into STRICT	pfcs_panel_detail_seq_w
;

        insert into pfcs_panel_detail(
            nr_sequencia,
            nm_usuario,
            dt_atualizacao,
            nm_usuario_nrec,
            dt_atualizacao_nrec,
            ie_situation,
            nr_seq_indicator,
            nr_seq_operational_level)
        values (
            pfcs_panel_detail_seq_w,
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            'T',
            nr_seq_indicator_p,
            nr_seq_operational_level_w);

        select	nextval('pfcs_detail_bed_seq')
        into STRICT	pfcs_detail_bed_seq_w
;

        insert into pfcs_detail_bed(
            nr_sequencia,
            nm_usuario,
            dt_atualizacao,
            nm_usuario_nrec,
            dt_atualizacao_nrec,
            nr_seq_detail,
            ds_location,
            cd_department,
            ds_department,
            ds_status,
            cd_status,
            cd_type,
            ds_type)
        values (
            pfcs_detail_bed_seq_w,
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            pfcs_panel_detail_seq_w,
            c07_w.ds_location,
            c07_w.cd_department,
            c07_w.ds_department,
            c07_w.ds_status,
            c07_w.cd_status,
            c07_w.cd_type,
            c07_w.ds_type);

        for c01_w in c01_tasy(c07_w.cd_department, c07_w.cd_unidade_basica, c07_w.cd_unidade_compl) loop
            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                dt_birthdate,
                ds_age_range)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_entrance,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente);

            update pfcs_detail_bed
            set dt_entry_unit = c01_w.dt_entry_unit
            where nr_sequencia = pfcs_detail_bed_seq_w;

            qt_unit_occupied_w := qt_unit_occupied_w + 1;
        end loop;
    end loop;

     := pfcs_pck.pfcs_generate_results(
            vl_indicator_p => qt_unit_occupied_w, vl_indicator_aux_p => qt_unit_w, ds_reference_value_p => substr(obter_valor_dominio(9537, '6'),1,255), cd_reference_value_p => '6', nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

    CALL pfcs_pck.pfcs_update_detail(
            nr_seq_indicator_p => nr_seq_indicator_p,
            nr_seq_panel_p => pfcs_panel_seq_w,
            nr_seq_operational_level_p => nr_seq_operational_level_w,
            nm_usuario_p => nm_usuario_p);
end if;

CALL pfcs_pck.pfcs_activate_records(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calculate_occup_type ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

