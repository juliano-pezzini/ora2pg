-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_adiantamento ( nr_seq_pagador_prop_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_adiantamento_p INOUT bigint) AS $body$
DECLARE


cd_cgc_pagador_w		pls_proposta_pagador.cd_cgc_pagador%type;
cd_pagador_w			pls_proposta_pagador.cd_pagador%type;
cd_tipo_recebimento_w		pls_parametros.cd_tipo_receb_adiantamento%type;
cd_moeda_w			pls_parametros.cd_moeda_adiantamento%type;
nr_seq_adiantamento_w		adiantamento.nr_adiantamento%type;
nr_recibo_w			adiantamento.nr_recibo%type;
nr_seq_proposta_w		pls_proposta_adesao.nr_sequencia%type;
vl_mensalidade_w		double precision;
nm_pagador_w			varchar(255);
qt_adiantatamento_w		bigint;


BEGIN

select	cd_cgc_pagador,
	cd_pagador,
	nr_seq_proposta,
	obter_nome_pf_pj(cd_pagador, cd_cgc_pagador) nm_pagador
into STRICT	cd_cgc_pagador_w,
	cd_pagador_w,
	nr_seq_proposta_w,
	nm_pagador_w
from	pls_proposta_pagador
where	nr_sequencia	= nr_seq_pagador_prop_p;

/* Verificar se já existe adiantamento para o pagador, que não esteja cancelado (com devolução total) */

select	count(1)
into STRICT	qt_adiantatamento_w
from	adiantamento a
where	a.nr_seq_proposta_pagador = nr_seq_pagador_prop_p
and	not exists (	SELECT	1
			from	adiantamento_dev x
			where	x.nr_adiantamento = a.nr_adiantamento
			and	x.vl_devolucao = a.vl_adiantamento);

if (qt_adiantatamento_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 271722, 'NM_PAGADOR='||nm_pagador_w );
else
	select	coalesce(sum(pls_obter_total_proposta_benef(a.nr_sequencia)),0)
	into STRICT	vl_mensalidade_w
	from	pls_proposta_beneficiario a
	where	a.nr_seq_pagador	= nr_seq_pagador_prop_p
	and	coalesce(a.dt_cancelamento::text, '') = '';

	if (vl_mensalidade_w > 0) then
		select	cd_tipo_receb_adiantamento,
			coalesce(cd_moeda_adiantamento,1)
		into STRICT	cd_tipo_recebimento_w,
			cd_moeda_w
		from	pls_parametros
		where	cd_estabelecimento = cd_estabelecimento_p;

		if (coalesce(cd_tipo_recebimento_w::text, '') = '') then
			select	max(cd_tipo_recebimento)
			into STRICT	cd_tipo_recebimento_w
			from	tipo_recebimento
			where	ie_tipo_consistencia = '7';
		end if;

		if (cd_tipo_recebimento_w IS NOT NULL AND cd_tipo_recebimento_w::text <> '') then
			select	nextval('adiantamento_seq')
			into STRICT	nr_seq_adiantamento_w
			;

			select	max(coalesce(nr_recibo,0)) +1
			into STRICT	nr_recibo_w
			from	adiantamento;

			insert into adiantamento(	nr_adiantamento,
							cd_estabelecimento,
							dt_atualizacao,
							nm_usuario,
							dt_adiantamento,
							vl_adiantamento,
							vl_saldo,
							cd_moeda,
							cd_tipo_recebimento,
							cd_pessoa_fisica,
							cd_cgc,
							dt_contabil,
							ie_situacao,
							nr_recibo,
							nr_seq_proposta_pagador,
							vl_especie)
						values (	nr_seq_adiantamento_w,
							cd_estabelecimento_p,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							vl_mensalidade_w,
							vl_mensalidade_w,
							cd_moeda_w,
							cd_tipo_recebimento_w,
							cd_pagador_w,
							cd_cgc_pagador_w,
							clock_timestamp(),
							'A',
							nr_recibo_w,
							nr_seq_pagador_prop_p,
							0);

			nr_seq_adiantamento_p	:= nr_seq_adiantamento_w;

			/* Gravar histórico na proposta */

			insert	into	pls_proposta_historico(	nr_sequencia, nr_seq_proposta, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					dt_historico, ds_historico, ie_origem_historico,
					dt_liberacao_historico, nm_usuario_liberacao)
				values (	nextval('pls_proposta_historico_seq'), nr_seq_proposta_w, clock_timestamp(),
					nm_usuario_p, clock_timestamp(), nm_usuario_p,
					clock_timestamp(), 'Gerado o adiantamento '||nr_seq_adiantamento_w||', para o pagador '||nr_seq_pagador_prop_p||' - '||nm_pagador_w||', com o valor '||vl_mensalidade_w, 1,
					clock_timestamp(), nm_usuario_p);
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_adiantamento ( nr_seq_pagador_prop_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_adiantamento_p INOUT bigint) FROM PUBLIC;

