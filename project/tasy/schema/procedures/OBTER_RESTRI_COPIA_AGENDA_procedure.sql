-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_restri_copia_agenda ( nr_seq_origem_p bigint, nr_seq_destino_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text, ds_aviso_regra_qtd_p INOUT text) AS $body$
DECLARE

 
ie_copia_agenda_cancel_w	varchar(1);
ie_status_agenda_w		varchar(10);
ie_copia_mesma_data_w		varchar(1);
dt_agenda_destino_w		timestamp;
dt_agenda_origem_w		timestamp;
ie_consiste_material_w		varchar(1);
ie_possui_medicamentos_w	varchar(1);
nr_cirurgia_w			bigint;
cd_medico_origem_w		varchar(10);
cd_convenio_origem_w		integer;
ie_carater_cirurgia_origem_w	varchar(15);
cd_agenda_destino_w		bigint;
cd_turno_destino_w		varchar(1);
ie_somente_aviso_w		varchar(255);
ds_erro_w			varchar(255);
ie_consiste_estab_w		varchar(1);
nr_seq_proc_interno_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_medico_w			varchar(10);
cd_pessoa_fisica_w		varchar(10);
cd_plano_w			varchar(10);
ie_consistencia_w		varchar(255);
ie_agenda_w			varchar(1);
ie_anestesia_w			varchar(1);
cd_retorno_w			bigint;
ie_consist_js_w			varchar(255)	:= '';
dt_hora_agenda_w		timestamp;


BEGIN 
ie_copia_agenda_cancel_w := obter_param_usuario(871, 282, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_copia_agenda_cancel_w);
ie_copia_mesma_data_w := obter_param_usuario(871, 322, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_copia_mesma_data_w);
ie_consiste_material_w := Obter_Param_Usuario(871, 349, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_material_w);
 
ds_erro_p:= '';
 
select	trunc(max(dt_agenda)), 
	max(cd_medico), 
	max(cd_convenio), 
	max(ie_carater_cirurgia), 
	max(nr_seq_proc_interno), 
	max(cd_pessoa_fisica), 
	max(cd_procedimento), 
	max(ie_origem_proced), 
	max(cd_medico), 
	max(cd_plano), 
	coalesce(max(ie_anestesia), 'N') 
into STRICT	dt_agenda_origem_w, 
	cd_medico_origem_w, 
	cd_convenio_origem_w, 
	ie_carater_cirurgia_origem_w, 
	nr_seq_proc_interno_w, 
	cd_pessoa_fisica_w, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	cd_medico_w, 
	cd_plano_w, 
	ie_anestesia_w 
from	agenda_paciente 
where	nr_sequencia = nr_seq_origem_p;
 
select	trunc(max(dt_agenda)), 
	max(hr_inicio), 
	max(cd_agenda), 
	max(cd_turno) 
into STRICT	dt_agenda_destino_w, 
	dt_hora_agenda_w, 
	cd_agenda_destino_w, 
	cd_turno_destino_w 
from	agenda_paciente 
where	nr_sequencia = nr_seq_destino_p;
 
 
if (ie_copia_mesma_data_w = 'N') then 
	if (dt_agenda_destino_w = dt_agenda_origem_w) then 
		ds_erro_p	:= wheb_mensagem_pck.get_texto(277754);
 
	end if;
end if;	
 
 
if (nr_seq_origem_p IS NOT NULL AND nr_seq_origem_p::text <> '') and (nr_seq_origem_p > 0) then 
	select	max(nr_cirurgia) 
	into STRICT	nr_cirurgia_w 
	from 	Agenda_paciente 
	where	nr_sequencia 	= nr_seq_origem_p;
end if;
 
 
if 	((ie_consiste_material_w = 'N') or (ie_consiste_material_w = 'O')) and (nr_cirurgia_w > 0) then 
	select	max(coalesce('S','N') ) 
	into STRICT	ie_possui_medicamentos_w 
	from 	prescr_material b, 
		cirurgia a 
	where 	a.nr_cirurgia	= nr_cirurgia_w 
	and 	b.nr_prescricao	= a.nr_prescricao;
	 
	if ie_possui_medicamentos_w = 'S' then 
		ds_erro_p	:= wheb_mensagem_pck.get_texto(277719);
	end if;
end if;
 
if (ie_copia_agenda_cancel_w = 'N') then 
	select	ie_status_agenda 
	into STRICT	ie_status_agenda_w 
	from	agenda_paciente 
	where	nr_sequencia = nr_seq_origem_p;
	 
	if (ie_status_agenda_w = 'C') then	 
		ds_erro_p	:= wheb_mensagem_pck.get_texto(277755);	
	end if;
end if;	
 
if (coalesce(ds_erro_p::text, '') = '') or (ds_erro_p = '') then 
	SELECT * FROM consiste_regra_qtd_agendamento(	nr_seq_destino_p, cd_medico_origem_w, cd_convenio_origem_w, dt_agenda_destino_w, cd_agenda_destino_w, cd_turno_destino_w, ie_carater_cirurgia_origem_w, 'N', 'S', ds_erro_w, ie_somente_aviso_w) INTO STRICT ds_erro_w, ie_somente_aviso_w;
	 
	if (ie_somente_aviso_w = 'N') then 
		ds_erro_p :=	ds_erro_w;
	elsif (ie_somente_aviso_w = 'S') then 
		ds_aviso_regra_qtd_p :=	ds_erro_w;
	end if;
end if;	
 
if (coalesce(ds_erro_p::text, '') = '') or (ds_erro_p = '') then 
	select 	coalesce(max('S'),'N') 
	into STRICT	ie_consiste_estab_w 
	from	agenda a 
	where	a.cd_agenda = cd_agenda_destino_w 
	and (exists (SELECT 	1 
			from 	proc_interno_estab b 
			where 	a.cd_estabelecimento 	= b.cd_estabelecimento 
			and 	b.nr_seq_proc_interno 	= nr_seq_proc_interno_w) 
	or  not exists (select 	1 
			from 	proc_interno_estab b 
			where 	b.nr_seq_proc_interno 	= nr_seq_proc_interno_w));
 
	if (ie_consiste_estab_w = 'N') then 
		ds_erro_p := wheb_mensagem_pck.get_texto(338352);
	end if;
end if;
 
SELECT * FROM consistir_proc_conv_agenda(cd_estabelecimento_p, cd_pessoa_fisica_w, dt_hora_agenda_w, cd_agenda_destino_w, cd_convenio_origem_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, cd_medico_w, 'E', cd_plano_w, null, null, null, null, ie_anestesia_w, null, null) INTO STRICT ie_consistencia_w, ie_agenda_w, cd_retorno_w, ie_consist_js_w;
 
if (ie_agenda_w = 'N') or (ie_agenda_w = 'H') then 
	ds_erro_p := wheb_mensagem_pck.get_texto(178359, 'DS_INCONSISTENCIA=' || ie_consistencia_w);
end if;
 
 
 
end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_restri_copia_agenda ( nr_seq_origem_p bigint, nr_seq_destino_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text, ds_aviso_regra_qtd_p INOUT text) FROM PUBLIC;

