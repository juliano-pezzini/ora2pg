-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cme_ajusta_conj_proc_agenda ( nr_seq_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
nr_seq_proc_interno_w			bigint;
ie_gerar_cme_w				varchar(1);
ie_gerar_cme_adic_w			varchar(1);
nr_seq_conjunto_w				bigint;
qt_conjunto_w				bigint;
ie_obrigatorio_w				varchar(3);
nr_seq_grupo_w				bigint;
cd_medico_conjunto_w			varchar(10);
cd_medico_w				varchar(10);
ie_consiste_cme_w				varchar(15);
ds_erro_cme_w				varchar(255);
ds_erro_w				varchar(255) := '';
nr_sequencia_w				bigint;
ie_GerarCMEIndividualizado_w		varchar(1);
ie_tem_medico_w				varchar(1);
ie_soma_proc_adic_w			varchar(2);
qt_cme_agenda_w				integer;
ie_cme_proc_w				varchar(1);
ie_GerarCMEIndiv_ProcAdic_w		varchar(1);
qt_anos_pac_w			smallint;
qt_meses_pac_w			smallint;
qt_total_meses_pac_w	smallint;

c01 CURSOR FOR 
		SELECT	a.nr_seq_conjunto, 
		a.qt_conjunto, 
		coalesce(a.ie_obrigatorio,'S'), 
		0 nr_seq_grupo 
	from	proc_interno_cme a, cm_conjunto b 
	where	a.nr_seq_proc_interno	=	nr_seq_proc_interno_w 
	and 		coalesce(qt_total_meses_pac_w,0) between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,999) 
	and	a.nr_seq_conjunto = b.nr_sequencia 
	and	coalesce(a.cd_medico::text, '') = '' 
	and	coalesce(a.NR_SEQ_CLASSIF::text, '') = '' 
	and	coalesce(a.NR_SEQ_GRUPO::text, '') = '' 
	and not exists (	SELECT	1 
			from	agenda_pac_cme x 
			where	x.nr_seq_agenda		=	nr_seq_agenda_p 
			and	x.nr_seq_conjunto	=	a.nr_seq_conjunto) 
	
union
 
	select	a.nr_seq_conjunto, 
		a.qt_conjunto, 
		coalesce(a.ie_obrigatorio,'S'), 
		0 nr_seq_grupo 
	from	proc_interno_cme a, cm_conjunto b 
	where	a.nr_seq_proc_interno	=	nr_seq_proc_interno_w 
	and 		coalesce(qt_total_meses_pac_w,0) between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,999) 
	and	a.nr_seq_conjunto = b.nr_sequencia 
	and	a.cd_medico		=	cd_medico_w 
	and	coalesce(a.NR_SEQ_CLASSIF::text, '') = '' 
	and	coalesce(a.NR_SEQ_GRUPO::text, '') = '' 
	and not exists (	select	1 
			from	agenda_pac_cme x 
			where	x.nr_seq_agenda		=	nr_seq_agenda_p 
			and	x.nr_seq_conjunto	=	a.nr_seq_conjunto) 
	
union
 
	select	b.nr_sequencia, 
		a.qt_conjunto, 
		coalesce(a.ie_obrigatorio,'S'), 
		0 nr_seq_grupo 
	from	cm_conjunto b, proc_interno_cme a 
	where	a.nr_seq_proc_interno				= nr_seq_proc_interno_w 
	and 		coalesce(qt_total_meses_pac_w,0) between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,999) 
	and	coalesce(a.cd_medico, coalesce(cd_medico_w, 'X')) 	= coalesce(cd_medico_w,'X') 
	and	a.NR_SEQ_CLASSIF 				= b.NR_SEQ_CLASSIF 
	and	coalesce(b.ie_situacao, 'A')				= 'A' 
	and	coalesce(NR_SEQ_GRUPO::text, '') = '' 
	and not exists (	select	1 
			from	agenda_pac_cme x 
			where	x.nr_seq_agenda		=	nr_seq_agenda_p 
			and	x.nr_seq_conjunto	=	a.nr_seq_conjunto) 
	
union
 
	select	b.nr_sequencia, 
		a.qt_conjunto, 
		coalesce(a.ie_obrigatorio,'S'), 
		c.NR_SEQ_GRUPO 
	from	cm_grupo_conjunto d, 
		cm_grupo_classif c, 
		cm_conjunto b, 
		proc_interno_cme a 
	where	a.nr_seq_proc_interno				= nr_seq_proc_interno_w 
	and 		coalesce(qt_total_meses_pac_w,0) between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,999) 
	and	c.nr_seq_grupo					= d.nr_sequencia 
	and	coalesce(a.cd_medico, coalesce(cd_medico_w, 'X')) 	= coalesce(cd_medico_w, 'X') 
	and	b.NR_SEQ_CLASSIF 				= c.NR_SEQ_CLASSIFICACAO 
	and	a.NR_SEQ_GRUPO  				= c.NR_SEQ_GRUPO 
	and	coalesce(d.ie_situacao, 'A')				= 'A' 
	and	coalesce(b.ie_situacao, 'A')				= 'A' 
	and not exists (	select	1 
			from	agenda_pac_cme x 
			where	x.nr_seq_agenda		=	nr_seq_agenda_p 
			and	x.nr_seq_conjunto	=	a.nr_seq_conjunto) 
	and (ie_GerarCMEIndividualizado_w = 'N') 
	
union
 
	select	b.nr_sequencia, 
			a.qt_conjunto, 
			coalesce(a.ie_obrigatorio,'S'), 
			c.NR_SEQ_GRUPO 
	from	cm_grupo_conjunto d, 
			cm_grupo_classif c, 
			cm_conjunto b, 
			proc_interno_cme a 
	where	a.nr_seq_proc_interno					= nr_seq_proc_interno_w 
	and		c.nr_seq_grupo							= d.nr_sequencia 
	and 		coalesce(qt_total_meses_pac_w,0) between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,999) 
	and		((ie_tem_medico_w = 'S' AND a.cd_medico = cd_medico_w) or 
			 ((ie_tem_medico_w = 'N') and (coalesce(a.cd_medico::text, '') = ''))) 
	and		b.NR_SEQ_CLASSIF 						= c.NR_SEQ_CLASSIFICACAO 
	and		a.NR_SEQ_GRUPO  						= c.NR_SEQ_GRUPO 
	and		coalesce(d.ie_situacao, 'A')					= 'A' 
	and		coalesce(b.ie_situacao, 'A')					= 'A' 
	and not exists (	select	1 
					from	agenda_pac_cme x 
					where	x.nr_seq_agenda	=	nr_seq_agenda_p 
					and	x.nr_seq_conjunto	=	a.nr_seq_conjunto) 
	and (ie_GerarCMEIndividualizado_w = 'S');

c02 CURSOR FOR 
	SELECT	nr_seq_conjunto, 
		qt_conjunto, 
		coalesce(ie_obrigatorio,'S'), 
		ie_soma_proc_adic 
	from	proc_interno_cme 
	where	nr_seq_proc_interno	=	nr_seq_proc_interno_w 
	and	(nr_seq_conjunto IS NOT NULL AND nr_seq_conjunto::text <> '') 
	and	((coalesce(cd_medico_w,'X') = coalesce(cd_medico,'X')) or (coalesce(cd_medico::text, '') = '')) 
	and	ie_GerarCMEIndiv_ProcAdic_w = 'N' 
	
union
 
	SELECT	nr_seq_conjunto, 
		qt_conjunto, 
		coalesce(ie_obrigatorio,'S'), 
		ie_soma_proc_adic 
	from	proc_interno_cme 
	where	nr_seq_proc_interno	=	nr_seq_proc_interno_w 
	and	(nr_seq_conjunto IS NOT NULL AND nr_seq_conjunto::text <> '') 
	and	((coalesce(cd_medico_w,'X') = coalesce(cd_medico,'X')) or (coalesce(cd_medico::text, '') = '')) 
	and	ie_GerarCMEIndiv_ProcAdic_w = 'S' 
	and	((ie_tem_medico_w = 'S' AND cd_medico = cd_medico_w) or 
		 ((ie_tem_medico_w = 'N') and (coalesce(cd_medico::text, '') = '')));

 
c03 CURSOR FOR 
	SELECT	c.nr_sequencia, 
		a.qt_conjunto, 
		coalesce(a.ie_obrigatorio,'S'), 
		ie_soma_proc_adic 
	from	cm_grupo_conjunto d, 
		proc_interno_cme a, 
		CM_GRUPO_CLASSIF b, 
		CM_CONJUNTO c 
	where	a.nr_seq_proc_interno	= nr_seq_proc_interno_w 
	and 		coalesce(qt_total_meses_pac_w,0) between coalesce(c.qt_idade_min,0) and coalesce(c.qt_idade_max,999) 
	and	a.nr_seq_grupo		= d.nr_sequencia 
	and	a.nr_seq_grupo		= b.nr_seq_grupo 
	and	c.NR_SEQ_CLASSIF	= b.NR_SEQ_CLASSIFICACAO 
	and	(a.nr_seq_grupo IS NOT NULL AND a.nr_seq_grupo::text <> '') 
	and	coalesce(a.NR_SEQ_CLASSIF::text, '') = '' 
	and	coalesce(a.nr_seq_conjunto::text, '') = '' 
	and	d.ie_situacao 		= 'A' 
	and	((coalesce(cd_medico_w,'X') = coalesce(a.cd_medico,'X')) or (coalesce(a.cd_medico::text, '') = '')) 
	and	ie_GerarCMEIndiv_ProcAdic_w = 'N' 
	
union
 
	SELECT	c.nr_sequencia, 
		a.qt_conjunto, 
		coalesce(a.ie_obrigatorio,'S'), 
		ie_soma_proc_adic 
	from	cm_grupo_conjunto d, 
		proc_interno_cme a, 
		CM_GRUPO_CLASSIF b, 
		CM_CONJUNTO c 
	where	a.nr_seq_proc_interno	= nr_seq_proc_interno_w 
	and 		coalesce(qt_total_meses_pac_w,0) between coalesce(c.qt_idade_min,0) and coalesce(c.qt_idade_max,999) 
	and	a.nr_seq_grupo		= d.nr_sequencia 
	and	a.nr_seq_grupo		= b.nr_seq_grupo 
	and	c.NR_SEQ_CLASSIF	= b.NR_SEQ_CLASSIFICACAO 
	and	(a.nr_seq_grupo IS NOT NULL AND a.nr_seq_grupo::text <> '') 
	and	coalesce(a.NR_SEQ_CLASSIF::text, '') = '' 
	and	coalesce(a.nr_seq_conjunto::text, '') = '' 
	and	d.ie_situacao 					= 'A' 
	and	((coalesce(cd_medico_w,'X') = coalesce(a.cd_medico,'X')) or (coalesce(a.cd_medico::text, '') = '')) 
	and	ie_GerarCMEIndiv_ProcAdic_w = 'S' 
	and	((ie_tem_medico_w = 'S' AND a.cd_medico = cd_medico_w) or 
		 ((ie_tem_medico_w = 'N') and (coalesce(a.cd_medico::text, '') = '')));

 
c04 CURSOR FOR 
	SELECT	c.nr_sequencia, 
			a.qt_conjunto, 
			coalesce(a.ie_obrigatorio,'S'), 
			ie_soma_proc_adic 
	from	proc_interno_cme a, 
			CM_CONJUNTO c 
	where	a.nr_seq_proc_interno	= nr_seq_proc_interno_w 
	and		c.NR_SEQ_CLASSIF	= a.NR_SEQ_CLASSIF 
	and 		coalesce(qt_total_meses_pac_w,0) between coalesce(c.qt_idade_min,0) and coalesce(c.qt_idade_max,999) 
	and		((coalesce(cd_medico_w,'X') = coalesce(a.cd_medico,'X')) or (coalesce(a.cd_medico::text, '') = '')) 
	and		(a.NR_SEQ_CLASSIF IS NOT NULL AND a.NR_SEQ_CLASSIF::text <> '') 
	and		coalesce(a.nr_seq_conjunto::text, '') = '' 
	and		ie_GerarCMEIndiv_ProcAdic_w = 'N' 
	
union
 
	SELECT	c.nr_sequencia, 
			a.qt_conjunto, 
			coalesce(a.ie_obrigatorio,'S'), 
			ie_soma_proc_adic 
	from	proc_interno_cme a, 
			CM_CONJUNTO c 
	where	a.nr_seq_proc_interno	= nr_seq_proc_interno_w 
	and 		coalesce(qt_total_meses_pac_w,0) between coalesce(c.qt_idade_min,0) and coalesce(c.qt_idade_max,999) 
	and		c.NR_SEQ_CLASSIF	= a.NR_SEQ_CLASSIF 
	and		(a.NR_SEQ_CLASSIF IS NOT NULL AND a.NR_SEQ_CLASSIF::text <> '') 
	and		coalesce(a.nr_seq_conjunto::text, '') = '' 
	and		ie_GerarCMEIndiv_ProcAdic_w = 'S' 
	and		((ie_tem_medico_w = 'S' AND a.cd_medico = cd_medico_w) or 
			 ((ie_tem_medico_w = 'N') and (coalesce(a.cd_medico::text, '') = '')));

C05 CURSOR FOR 
	SELECT	nr_seq_proc_interno, 
			cd_medico 
	from	agenda_paciente_proc 
	where	nr_sequencia = nr_seq_agenda_p;


BEGIN 
ie_gerar_cme_w := Obter_Param_Usuario(871, 200, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_cme_w);
ie_consiste_cme_w := Obter_Param_Usuario(871, 101, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_cme_w);
ie_GerarCMEIndividualizado_w := Obter_Param_Usuario(871, 261, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_GerarCMEIndividualizado_w);
ie_gerar_cme_adic_w := Obter_Param_Usuario(871, 136, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_cme_adic_w);
ie_cme_proc_w := Obter_Param_Usuario(871, 143, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_cme_proc_w);
ie_GerarCMEIndiv_ProcAdic_w := Obter_Param_Usuario(871, 272, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_GerarCMEIndiv_ProcAdic_w);
 
select max(qt_idade_paciente), 
		max(qt_idade_mes) 
into STRICT	qt_anos_pac_w,	 
    qt_meses_pac_w	 
from	agenda_paciente 
where	nr_sequencia 	= 	nr_seq_agenda_p;
 
qt_total_meses_pac_w := (qt_anos_pac_w * 12) + qt_meses_pac_w;
if (ie_Gerar_cme_w	= 'S') then 
	select	coalesce(max(nr_seq_proc_interno),0) 
	into STRICT	nr_seq_proc_interno_w 
	from 	agenda_paciente 
	where	nr_sequencia = nr_seq_agenda_p;
 
	if (nr_seq_proc_interno_w > 0) then 
		delete	FROM agenda_pac_cme 
		where	nr_seq_agenda 		= nr_seq_agenda_p 
		and		nr_seq_proc_interno	= nr_seq_proc_interno_w;
 
		select	cd_medico 
		into STRICT	cd_medico_w 
		from 	agenda_paciente 
		where	nr_sequencia = nr_seq_agenda_p;
 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_tem_medico_w 
		from 	proc_interno_cme 
		where	cd_medico 			= cd_medico_w 
		and		nr_seq_proc_interno = nr_seq_proc_interno_w;
 
		open c01;
		loop 
			fetch c01	into 
				nr_seq_conjunto_w, 
				qt_conjunto_w, 
				ie_obrigatorio_w, 
				nr_seq_grupo_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
 
			select	coalesce(max(cd_medico),'0') 
			into STRICT	cd_medico_conjunto_w 
			from	cm_conjunto 
			where	nr_sequencia		= nr_seq_conjunto_w;
 
			if (cd_medico_conjunto_w 	= '0') or (cd_medico_conjunto_w	= coalesce(cd_medico_w, cd_medico_conjunto_w)) then 
				begin 
 
				/* Consistir conforme o parâmetro [101] */
 
				if (ie_consiste_cme_w <> 'N') AND (nr_seq_grupo_w = 0) then 
					begin 
					ds_erro_cme_w := cme_consistir_conj_agenda(nr_seq_agenda_p, nr_seq_conjunto_w, 'S', nm_usuario_p, cd_estabelecimento_p, ds_erro_cme_w);
 
					if (ds_erro_cme_w IS NOT NULL AND ds_erro_cme_w::text <> '') and (coalesce(ds_erro_w::text, '') = '') then 
						ds_erro_w	:= substr(ds_erro_cme_w || chr(13) || chr(10) || ds_erro_w, 1, 255);
					end if;
					end;
				end if;
 
				if (ie_consiste_cme_w <> 'N') and (nr_seq_grupo_w > 0) then 
					begin 
 
					ds_erro_cme_w := cme_consistir_grupo_agenda(nr_seq_agenda_p, nr_seq_grupo_w, 'S', nm_usuario_p, cd_estabelecimento_p, ds_erro_cme_w);
 
					if (ds_erro_cme_w IS NOT NULL AND ds_erro_cme_w::text <> '') and (coalesce(ds_erro_w::text, '') = '') then 
						ds_erro_w	:= substr(ds_erro_cme_w || chr(13) || chr(10) || ds_erro_w, 1, 255);
					end if;
					end;
				end if;
 
 
				if (ie_consiste_cme_w = 'N') or (ie_consiste_cme_w = 'A') or 
					((ie_consiste_cme_w = 'S') and (coalesce(ds_erro_cme_w::text, '') = '')) then 
					begin 
 
					select	nextval('agenda_pac_cme_seq') 
					into STRICT	nr_sequencia_w 
					;
 
					insert into agenda_pac_cme( 
						nr_seq_conjunto, 
						qt_conjunto, 
						nr_sequencia, 
						nr_seq_agenda, 
						dt_atualizacao, 
						nm_usuario, 
						ie_origem_inf, 
						ie_obrigatorio, 
						nr_seq_proc_interno, 
						nr_seq_grupo, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec) 
					values ( 
						nr_seq_conjunto_w, 
						qt_conjunto_w, 
						nr_sequencia_w, 
						nr_seq_agenda_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						'I', 
						ie_obrigatorio_w, 
						nr_seq_proc_interno_w, 
						CASE WHEN nr_seq_grupo_w=0 THEN null  ELSE nr_seq_grupo_w END , 
						clock_timestamp(), 
						nm_usuario_p);
					end;
				end if;
				end;
			end if;
			end;
		end loop;
		close c01;
	ds_erro_p	:= substr(ds_erro_w,1,255);
	end if;
end if;
 
if (ie_gerar_cme_adic_w = 'S') then 
	open c05;
	loop 
		fetch c05	into 
			nr_seq_proc_interno_w, 
			cd_medico_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
		begin 
		delete	FROM agenda_pac_cme 
		where	nr_seq_agenda 		= nr_seq_agenda_p 
		and		nr_seq_proc_interno = nr_seq_proc_interno_w;
 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_tem_medico_w 
		from 	proc_interno_cme 
		where	cd_medico 			= cd_medico_w 
		and		nr_seq_proc_interno = nr_seq_proc_interno_w;
 
 
		open c02;
		loop 
		fetch c02	into 
				nr_seq_conjunto_w, 
				qt_conjunto_w, 
				ie_obrigatorio_w, 
				ie_soma_proc_adic_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
			begin 
			select	count(*) 
			into STRICT	qt_cme_agenda_w 
			from	agenda_pac_cme 
			where	nr_seq_agenda	=	nr_seq_agenda_p 
			and	nr_seq_conjunto	=	nr_seq_conjunto_w;
			exception 
				when others then 
					qt_cme_agenda_w	:= 0;
			end;
 
			if	(qt_cme_agenda_w > 0 AND ie_soma_proc_adic_w = 'S') then 
				begin 
				if (ie_cme_proc_w = 'N') then 
					update	agenda_pac_cme 
					set	qt_conjunto		= qt_conjunto + qt_conjunto_w 
					where	nr_seq_agenda	= nr_seq_agenda_p 
					and	nr_seq_conjunto	= nr_seq_conjunto_w;
				else 
					insert into agenda_pac_cme( 
						nr_seq_conjunto, 
						qt_conjunto, 
						nr_sequencia, 
						nr_seq_agenda, 
						dt_atualizacao, 
						nm_usuario, 
						ie_origem_inf, 
						ie_obrigatorio, 
						nr_seq_proc_interno, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec) 
					values ( 
						nr_seq_conjunto_w, 
						qt_conjunto_w, 
						nextval('agenda_pac_cme_seq'), 
						nr_seq_agenda_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						'I', 
						ie_obrigatorio_w, 
						nr_seq_proc_interno_w, 
						clock_timestamp(), 
						nm_usuario_p);
				end if;
				end;
			elsif (qt_cme_agenda_w = 0) then 
				begin 
				insert into agenda_pac_cme( 
					nr_seq_conjunto, 
					qt_conjunto, 
					nr_sequencia, 
					nr_seq_agenda, 
					dt_atualizacao, 
					nm_usuario, 
					ie_origem_inf, 
					ie_obrigatorio, 
					nr_seq_proc_interno, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec) 
				values ( 
					nr_seq_conjunto_w, 
					qt_conjunto_w, 
					nextval('agenda_pac_cme_seq'), 
					nr_seq_agenda_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					'I', 
					ie_obrigatorio_w, 
					nr_seq_proc_interno_w, 
					clock_timestamp(), 
					nm_usuario_p);
				end;
			end if;
		end;
		end loop;
		close c02;
 
 
		open c03;
		loop 
		fetch c03	into 
				nr_seq_conjunto_w, 
				qt_conjunto_w, 
				ie_obrigatorio_w, 
				ie_soma_proc_adic_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
 
			begin 
			select	count(*) 
			into STRICT	qt_cme_agenda_w 
			from	agenda_pac_cme 
			where	nr_seq_agenda	=	nr_seq_agenda_p 
			and	nr_seq_conjunto	=	nr_seq_conjunto_w;
			exception 
				when others then 
					qt_cme_agenda_w	:= 0;
			end;
 
			if	(qt_cme_agenda_w > 0 AND ie_soma_proc_adic_w = 'S') then 
				begin 
				if (ie_cme_proc_w = 'N') then 
					update	agenda_pac_cme 
					set	qt_conjunto	=	qt_conjunto + qt_conjunto_w 
					where	nr_seq_agenda	=	nr_seq_agenda_p 
					and	nr_seq_conjunto	=	nr_seq_conjunto_w;
				else 
					insert into agenda_pac_cme( 
						nr_seq_conjunto, 
						qt_conjunto, 
						nr_sequencia, 
						nr_seq_agenda, 
						dt_atualizacao, 
						nm_usuario, 
						ie_origem_inf, 
						ie_obrigatorio, 
						nr_seq_proc_interno, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec) 
					values ( 
						nr_seq_conjunto_w, 
						qt_conjunto_w, 
						nextval('agenda_pac_cme_seq'), 
						nr_seq_agenda_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						'I', 
						ie_obrigatorio_w, 
						nr_seq_proc_interno_w, 
						clock_timestamp(), 
						nm_usuario_p);
				end if;
				end;
			elsif (qt_cme_agenda_w = 0) then 
				begin 
				insert into agenda_pac_cme( 
					nr_seq_conjunto, 
					qt_conjunto, 
					nr_sequencia, 
					nr_seq_agenda, 
					dt_atualizacao, 
					nm_usuario, 
					ie_origem_inf, 
					ie_obrigatorio, 
					nr_seq_proc_interno, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec) 
				values ( 
					nr_seq_conjunto_w, 
					qt_conjunto_w, 
					nextval('agenda_pac_cme_seq'), 
					nr_seq_agenda_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					'I', 
					ie_obrigatorio_w, 
					nr_seq_proc_interno_w, 
					clock_timestamp(), 
					nm_usuario_p);
				end;
			end if;
		end;
		end loop;
		close c03;
 
		open c04;
		loop 
		fetch c04	into 
				nr_seq_conjunto_w, 
				qt_conjunto_w, 
				ie_obrigatorio_w, 
				ie_soma_proc_adic_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
		begin 
 
			begin 
			select	count(*) 
			into STRICT	qt_cme_agenda_w 
			from	agenda_pac_cme 
			where	nr_seq_agenda	=	nr_seq_agenda_p 
			and	nr_seq_conjunto	=	nr_seq_conjunto_w;
			exception 
				when others then 
					qt_cme_agenda_w	:= 0;
			end;
 
			if	(qt_cme_agenda_w > 0 AND ie_soma_proc_adic_w = 'S') then 
				begin 
				if (ie_cme_proc_w = 'N') then 
					update	agenda_pac_cme 
					set	qt_conjunto	=	qt_conjunto + qt_conjunto_w 
					where	nr_seq_agenda	=	nr_seq_agenda_p 
					and	nr_seq_conjunto	=	nr_seq_conjunto_w;
				else 
					insert into agenda_pac_cme( 
						nr_seq_conjunto, 
						qt_conjunto, 
						nr_sequencia, 
						nr_seq_agenda, 
						dt_atualizacao, 
						nm_usuario, 
						ie_origem_inf, 
						ie_obrigatorio, 
						nr_seq_proc_interno, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec) 
					values ( 
						nr_seq_conjunto_w, 
						qt_conjunto_w, 
						nextval('agenda_pac_cme_seq'), 
						nr_seq_agenda_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						'I', 
						ie_obrigatorio_w, 
						nr_seq_proc_interno_w, 
						clock_timestamp(), 
						nm_usuario_p);
				end if;
				end;
			elsif (qt_cme_agenda_w = 0) then 
				begin 
				insert into agenda_pac_cme( 
					nr_seq_conjunto, 
					qt_conjunto, 
					nr_sequencia, 
					nr_seq_agenda, 
					dt_atualizacao, 
					nm_usuario, 
					ie_origem_inf, 
					ie_obrigatorio, 
					nr_seq_proc_interno, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec) 
				values ( 
					nr_seq_conjunto_w, 
					qt_conjunto_w, 
					nextval('agenda_pac_cme_seq'), 
					nr_seq_agenda_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					'I', 
					ie_obrigatorio_w, 
					nr_seq_proc_interno_w, 
					clock_timestamp(), 
					nm_usuario_p);
				end;
			end if;
		end;
		end loop;
		close c04;
	end;
	end loop;
	close c05;
end if;
 
end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cme_ajusta_conj_proc_agenda ( nr_seq_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

