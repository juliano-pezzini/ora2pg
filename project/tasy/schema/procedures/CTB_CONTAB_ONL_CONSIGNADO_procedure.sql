-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_contab_onl_consignado ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE

/*
===============================================================================
Purpose: Indentacao

Remarks: n/a

Who         When            What
----------  -----------     --------------------------------------------------

chjreinert  13/mai/2021     OS 2444975 - Indentacao

===============================================================================
*/
cd_tipo_lote_contabil_w         tipo_lote_contabil.cd_tipo_lote_contabil%type;
ie_origem_documento_w           movimento_contabil.ie_origem_documento%Type;
nr_seq_tab_orig_w               w_movimento_contabil.nr_seq_tab_orig%type;
nr_sequencia_movto_w            movimento_contabil.nr_sequencia%type := 0;
nr_documento_ww                 movimento_contabil.nr_documento%Type;
nm_tabela_w                     w_movimento_contabil.nm_tabela%type;
nr_lote_contabil_w              lote_contabil.nr_lote_contabil%type;
ctb_param_lote_consignado_w     ctb_param_lote_consignado%rowtype;
ctb_movimento_doc_w             ctb_online_pck.ctb_movimento_doc;
cd_empresa_w                    empresa.cd_empresa%type;
ds_erro_w                       varchar(255)   := null;
ds_doc_agrupamento_w            varchar(50)    := '0';
nm_fornecedor_w                 varchar(80);
ds_compl_historico_w            varchar(255);
ds_material_w                   varchar(255);
nm_agrupador_w                  varchar(255);
ie_contab_w                     varchar(1);
cd_convenio_w                   bigint;
nr_seq_agrupamento_w            bigint;
dt_movimento_w                  timestamp;
dt_estorno_w                    timestamp;
dt_movimento_trunc_w            timestamp;
dt_atualizacao_saldo_w          timestamp;
qt_registro_w                   bigint;
sequencia_w                     dbms_sql.number_table;

c010 CURSOR FOR
    SELECT  a.cd_conta_contabil,
            a.cd_centro_custo,
            obter_vl_pend_oci(b.nr_ordem_compra,a.nr_item_oci,dt_movimento_w) vl_item_liquido,
            b.nr_ordem_compra,
            a.cd_material,
            b.nr_atendimento,
            'VL_LIQ_ITEM_PEND' nm_atributo,
			a.cd_sequencia_parametro
    from    ordem_compra            b,
            ordem_compra_item       a
    where   a.nr_ordem_compra       = b.nr_ordem_compra
    and     b.cd_estabelecimento    = cd_estabelecimento_p
    and     ctb_param_lote_consignado_w.ie_contab_oc_cancel = 'N'
    and     coalesce(b.nr_seq_motivo_cancel::text, '') = ''
    and     (a.cd_conta_contabil IS NOT NULL AND a.cd_conta_contabil::text <> '')
    and     (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
    and     coalesce(a.dt_reprovacao::text, '') = ''
    and     obter_se_mat_consignado(a.cd_material) <> '0'
    and (coalesce(b.dt_baixa::text, '') = '' or b.dt_baixa >= dt_movimento_w)
    and     b.dt_ordem_compra <= dt_movimento_w
    and     substr(obter_se_item_oc_cancelado(b.nr_ordem_compra, a.nr_item_oci),1,1) = 'N'
    and     ((coalesce(b.ie_tipo_ordem::text, '') = '' and coalesce(ctb_param_lote_consignado_w.ie_tipo_ordem_compra::text, '') = '') or (b.ie_tipo_ordem = coalesce(ctb_param_lote_consignado_w.ie_tipo_ordem_compra, b.ie_tipo_ordem)))

union all

    SELECT  a.cd_conta_contabil,
            a.cd_centro_custo,
            (obter_vl_pend_oci(b.nr_ordem_compra,a.nr_item_oci,dt_movimento_w)) vl_item_liquido,
            b.nr_ordem_compra,
            a.cd_material,
            b.nr_atendimento,
            'VL_LIQ_ITEM_PEND' nm_atributo,
			a.cd_sequencia_parametro
    from    ordem_compra            b,
            ordem_compra_item       a
    where   a.nr_ordem_compra       = b.nr_ordem_compra
    and     b.cd_estabelecimento    = cd_estabelecimento_p
    and     ctb_param_lote_consignado_w.ie_contab_oc_cancel = 'S'
    and     ((coalesce(b.nr_seq_motivo_cancel::text, '') = '') or ((b.nr_seq_motivo_cancel IS NOT NULL AND b.nr_seq_motivo_cancel::text <> '') and b.dt_baixa >= dt_movimento_w))
    and     (a.cd_conta_contabil IS NOT NULL AND a.cd_conta_contabil::text <> '')
    and     (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
    and     coalesce(a.dt_reprovacao::text, '') = ''
    and     obter_se_mat_consignado(a.cd_material) <> '0'
    and (coalesce(b.dt_baixa::text, '') = '' or b.dt_baixa >= dt_movimento_w)
    and     b.dt_ordem_compra <= dt_movimento_w
    and     substr(obter_se_item_oc_cancelado(b.nr_ordem_compra, a.nr_item_oci),1,1) = 'N'
    and     ((coalesce(b.ie_tipo_ordem::text, '') = '' and coalesce(ctb_param_lote_consignado_w.ie_tipo_ordem_compra::text, '') = '') or (b.ie_tipo_ordem = coalesce(ctb_param_lote_consignado_w.ie_tipo_ordem_compra,b.ie_tipo_ordem)));

c010_w          c010%rowtype;

c020 CURSOR FOR
    SELECT  a.nr_sequencia,
            a.nr_lote_contabil,
            a.nr_seq_mes_ref,
            a.dt_movimento,
            coalesce(b.vl_movimento, a.vl_movimento) vl_movimento,
            a.dt_atualizacao,
            a.nm_usuario,
            a.cd_historico,
            a.cd_conta_debito,
            a.cd_conta_credito,
            a.ds_compl_historico,
            a.nr_seq_agrupamento,
            a.cd_estabelecimento,
            a.cd_classif_debito,
            a.cd_classif_credito,
            a.nr_documento,
            a.ie_origem_documento,
            a.nr_seq_movto_partida,
            a.nr_seq_reg_concil,
            a.ie_transitorio,
            b.cd_centro_custo
    FROM ctb_movimento a
LEFT OUTER JOIN ctb_movto_centro_custo b ON (a.nr_sequencia = b.nr_seq_movimento)
WHERE a.nr_lote_contabil  = nr_lote_contabil_w order by 1;

c020_w          c020%rowtype;

procedure get_sequence is

  vet RECORD;

BEGIN

ctb_movimento_doc_w.nr_sequencia := null;

if (sequencia_w.count > 0) then
        ctb_movimento_doc_w.nr_sequencia        := sequencia_w(sequencia_w.count);
        sequencia_w.delete(sequencia_w.count);
end if;
exception when others then
        ctb_movimento_doc_w.nr_sequencia        := null;
end;

begin
cd_tipo_lote_contabil_w := 26; /* Lote Consignado */
cd_empresa_w            := obter_empresa_estab(cd_estabelecimento_p);

/* Busca LOTE CONTABIL  */

nr_lote_contabil_w := ctb_online_pck.get_lote_contabil( cd_tipo_lote_contabil_w,
                                        cd_estabelecimento_p,
                                        dt_referencia_p,
                                        nm_usuario_p);
select  count(nr_sequencia)
into STRICT    qt_registro_w
from    ctb_movimento
where   nr_lote_contabil        = nr_lote_contabil_w;

begin
select  dt_atualizacao_saldo
into STRICT    dt_atualizacao_saldo_w
from    lote_contabil
where   nr_lote_contabil        = nr_lote_contabil_w;
exception when others then
        dt_atualizacao_saldo_w  := null;
end;

if (dt_atualizacao_saldo_w IS NOT NULL AND dt_atualizacao_saldo_w::text <> '') then
        ds_erro_w := ctb_desatualizar_lote(nr_lote_contabil_w, nm_usuario_p, ds_erro_w);
end if;

if (qt_registro_w > 0) then
    begin
    qt_registro_w   := sequencia_w.count;

    for vet in (SELECT a.nr_sequencia
                from    ctb_movimento a
                where   a.nr_lote_contabil  = nr_lote_contabil_w
                order by 1 desc) loop
            begin
            qt_registro_w   := qt_registro_w + 1;
            sequencia_w(qt_registro_w)      := vet.nr_sequencia;
            end;
    end loop;
    end;
end if;

delete  FROM ctb_movimento
where   nr_lote_contabil = nr_lote_contabil_w;

commit;

select  x.*
into STRICT    ctb_param_lote_consignado_w
from (
SELECT  a.*
from    ctb_param_lote_consignado a
where   a.cd_empresa    = cd_empresa_w
and     coalesce(a.cd_estab_exclusivo, cd_estabelecimento_p) = cd_estabelecimento_p
order by coalesce(a.cd_estab_exclusivo,0) desc) x LIMIT 1;

dt_movimento_w          := pkg_date_utils.end_of(dt_referencia_p, 'MONTH', 0);
dt_movimento_trunc_w    := pkg_date_utils.start_of(pkg_date_utils.END_OF(dt_referencia_p, 'MONTH', 0),'dd',0);
nm_agrupador_w          := coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'NR_ORDEM_COMPRA');

open c010;
loop
fetch c010 into
        c010_w;
EXIT WHEN NOT FOUND; /* apply on c010 */
    begin
    if (c010_w.vl_item_liquido != 0) then
        begin
        cd_convenio_w           := null;
        nm_tabela_w             := 'ORDEM_COMPRA_ITEM';
        nr_seq_tab_orig_w       := c010_w.nr_ordem_compra;

        if (c010_w.nm_atributo = 'VL_LIQUIDO') then
                nm_tabela_w     := 'NOTA_FISCAL_ITEM';
        end if;

        ie_contab_w             := 'S';

        if (nm_agrupador_w = 'NR_ORDEM_COMPRA')then
                nr_seq_agrupamento_w    := c010_w.nr_ordem_compra;
        end if;

        if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                nr_seq_agrupamento_w    := c010_w.nr_ordem_compra;
        end if;

        nm_fornecedor_w         := substr(obter_dados_ordem_compra(c010_w.nr_ordem_compra,'F'),1,255);
        ds_material_w           := substr(obter_desc_material(c010_w.cd_material),1,255);

        /* Parametros Historico */

        CALL ctb_online_pck.definir_atrib_compl(cd_tipo_lote_contabil_w);
        CALL ctb_online_pck.set_value_compl_hist('NM_FORNECEDOR', nm_fornecedor_w);
        CALL ctb_online_pck.set_value_compl_hist('NR_ORDEM_COMPRA', c010_w.nr_ordem_compra);
        CALL ctb_online_pck.set_value_compl_hist('CD_MATERIAL', c010_w.cd_material);
        CALL ctb_online_pck.set_value_compl_hist('DS_MATERIAL', ds_material_w);
        CALL ctb_online_pck.set_value_compl_hist('NR_ATENDIMENTO', c010_w.nr_atendimento);

        /* Obtem HISTORICO */

        ds_compl_historico_w := ctb_online_pck.ctb_obter_compl_Historico( cd_tipo_lote_contabil_w, ctb_param_lote_consignado_w.cd_historico);

        if (c010_w.nr_atendimento IS NOT NULL AND c010_w.nr_atendimento::text <> '') then
                cd_convenio_w   := obter_convenio_atendimento(c010_w.nr_atendimento);

                if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
                        select  coalesce(max(ie_contab_lote_consig),'N')
                        into STRICT    ie_contab_w
                        from    convenio_estabelecimento
                        where   cd_convenio             = cd_convenio_w
                        and     cd_estabelecimento      = cd_estabelecimento_p;
                end if;
        end if;

        nr_documento_ww := c010_w.nr_ordem_compra;
        ie_origem_documento_w := 10;

        if (ie_contab_w = 'S') then
            begin
            /* DEBITO */

            get_sequence;
            ctb_movimento_doc_w := null;
            ctb_movimento_doc_w.nr_lote_contabil            := nr_lote_contabil_w;
            ctb_movimento_doc_w.cd_tipo_lote_contabil       := cd_tipo_lote_contabil_w;
            ctb_movimento_doc_w.cd_estabelecimento          := cd_estabelecimento_p;
            ctb_movimento_doc_w.dt_movimento                := dt_movimento_w;
            ctb_movimento_doc_w.vl_movimento                := c010_w.vl_item_liquido;
            ctb_movimento_doc_w.cd_conta_debito             := c010_w.cd_conta_contabil;
            ctb_movimento_doc_w.cd_historico                := ctb_param_lote_consignado_w.cd_historico;
            ctb_movimento_doc_w.nr_seq_agrupamento          := nr_seq_agrupamento_w;
            ctb_movimento_doc_w.ds_compl_historico          := ds_compl_historico_w;
            ctb_movimento_doc_w.nr_documento                := nr_documento_ww;
            ctb_movimento_doc_w.ie_origem_documento         := ie_origem_documento_w;
            ctb_movimento_doc_w.cd_centro_custo             := c010_w.cd_centro_custo;
            ctb_movimento_doc_w.nr_seq_tab_orig             := nr_seq_tab_orig_w;
            ctb_movimento_doc_w.nm_tabela                   := nm_tabela_w;
            ctb_movimento_doc_w.nm_atributo                 := c010_w.nm_atributo;
            ctb_movimento_doc_w.ie_transitorio              := 'N';
            ctb_movimento_doc_w.nr_seq_info                 := 10;
			ctb_movimento_doc_w.cd_sequencia_parametro      := c010_w.cd_sequencia_parametro;

             ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto( ctb_movimento_doc_w, nm_usuario_p, 'S');
            /* CREDITO */

            get_sequence;
            ctb_movimento_doc_w := null;
            ctb_movimento_doc_w.nr_lote_contabil            := nr_lote_contabil_w;
            ctb_movimento_doc_w.cd_tipo_lote_contabil       := cd_tipo_lote_contabil_w;
            ctb_movimento_doc_w.cd_estabelecimento          := cd_estabelecimento_p;
            ctb_movimento_doc_w.dt_movimento                := dt_movimento_w;
            ctb_movimento_doc_w.vl_movimento                := c010_w.vl_item_liquido;
            ctb_movimento_doc_w.cd_conta_credito            := ctb_param_lote_consignado_w.cd_conta_credito;
            ctb_movimento_doc_w.cd_historico                := ctb_param_lote_consignado_w.cd_historico;
            ctb_movimento_doc_w.nr_seq_agrupamento          := nr_seq_agrupamento_w;
            ctb_movimento_doc_w.ds_compl_historico          := ds_compl_historico_w;
            ctb_movimento_doc_w.nr_documento                := nr_documento_ww;
            ctb_movimento_doc_w.ie_origem_documento         := ie_origem_documento_w;
            ctb_movimento_doc_w.nr_seq_tab_orig             := nr_seq_tab_orig_w;
            ctb_movimento_doc_w.nm_tabela                   := nm_tabela_w;
            ctb_movimento_doc_w.nm_atributo                 := c010_w.nm_atributo;
            ctb_movimento_doc_w.ie_transitorio              := 'N';
            ctb_movimento_doc_w.nr_seq_info                 := 10;

             ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto( ctb_movimento_doc_w, nm_usuario_p, 'S');
            end;
        end if;
        end;
    end if;
    end;
end loop;
close c010;

/* Reverter os lancamentos no primeiro dia do mes subsequente */

dt_estorno_w    := pkg_date_utils.start_of(pkg_date_utils.ADD_MONTH(dt_referencia_p,1,0),'MONTH',0);

open c020;
loop
fetch c020 into
          c020_w;
EXIT WHEN NOT FOUND; /* apply on c020 */
    begin
    ctb_movimento_doc_w                             := null;
    get_sequence;
    ctb_movimento_doc_w.cd_centro_custo             := c020_w.cd_centro_custo;
    ctb_movimento_doc_w.cd_conta_credito            := c020_w.cd_conta_debito;
    ctb_movimento_doc_w.cd_conta_debito             := c020_w.cd_conta_credito;
    ctb_movimento_doc_w.cd_estabelecimento          := c020_w.cd_estabelecimento;
    ctb_movimento_doc_w.cd_historico                := c020_w.cd_historico;
    ctb_movimento_doc_w.cd_tipo_lote_contabil       := cd_tipo_lote_contabil_w;
    ctb_movimento_doc_w.ds_compl_historico          := substr(c020_w.ds_compl_historico || ' ' || wheb_mensagem_pck.get_texto(799478) || ' ',1,255);
    ctb_movimento_doc_w.dt_movimento                := dt_estorno_w;
    ctb_movimento_doc_w.ie_origem_documento         := c020_w.ie_origem_documento;
    ctb_movimento_doc_w.ie_transitorio              := c020_w.ie_transitorio;
    ctb_movimento_doc_w.nr_documento                := c020_w.nr_documento;
    ctb_movimento_doc_w.nr_lote_contabil            := c020_w.nr_lote_contabil;
    ctb_movimento_doc_w.nr_seq_agrupamento          := c020_w.nr_seq_agrupamento;
    ctb_movimento_doc_w.vl_movimento                := c020_w.vl_movimento;
	ctb_movimento_doc_w.cd_sequencia_parametro      := c010_w.cd_sequencia_parametro;

     ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto( ctb_movimento_doc_w, nm_usuario_p, 'N');
    end;
end loop;
close c020;

update  lote_contabil
set     ie_situacao      = 'A',
        dt_geracao_lote  = clock_timestamp(),
        dt_integracao    = clock_timestamp()
where   nr_lote_contabil = nr_lote_contabil_w;

begin
ds_erro_w := ctb_atualizar_saldo(  nr_lote_contabil_w, 'S', nm_usuario_p, 'N', ds_erro_w, 'S');
exception when others then
        null;
end;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_contab_onl_consignado ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

