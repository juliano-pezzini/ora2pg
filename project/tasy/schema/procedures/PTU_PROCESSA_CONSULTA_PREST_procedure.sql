-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_processa_consulta_prest ( nr_seq_consulta_p ptu_consulta_prestador.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_resp_consulta_prest_p INOUT ptu_resp_consulta_prest.nr_sequencia%type) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Realizar a validação do arquivo 00418 - Consulta Prestado do PTU 
 
Rotina utilizada nas transações ptu via WebService. 
Irá ler a consulta de prestador que foi realizada e irá gerar a resposta desta consulta., 
gravando as informações nas tabelas que serão consultadas na tela. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ x] Outros:* 
*WebService SCS 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
nm_prestador_w			ptu_consulta_prestador.nm_prestador%type;
sg_cons_prof_w			ptu_consulta_prestador.sg_cons_profissional%type;
ie_tipo_cliente_w		ptu_consulta_prestador.ie_tipo_cliente%type;
uf_cons_prof_w			ptu_consulta_prestador.uf_cons_profissional%type;
cd_cgc_cpf_w			ptu_consulta_prestador.cd_cgc_cpf%type;
nr_cons_prof_w			ptu_consulta_prestador.nr_cons_profissional%type;
nr_seq_requisicao_w		ptu_consulta_prestador.nr_seq_requisicao%type;
nr_seq_execucao_w		ptu_consulta_prestador.nr_seq_execucao%type;
cd_unimed_executora_w		ptu_consulta_prestador.cd_unimed_executora%type;
cd_unimed_beneficiario_w	ptu_consulta_prestador.cd_unimed_beneficiario%type;
nr_versao_w			ptu_consulta_prestador.nr_versao%type;
ie_tipo_rede_min_w		ptu_resp_nomes_prest.ie_tipo_rede_min%type;
cd_especialidade_w		ptu_resp_nomes_prest.cd_especialidade%type;
ie_inseriu_w			varchar(1)	:= 'N';
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;

C01 CURSOR(	nm_prestador_pc		pessoa_fisica.nm_pessoa_fisica%type, 
		cd_cgc_cpf_pc		text, 
		nr_cons_prof_pc		ptu_consulta_prestador.nr_cons_profissional%type, 
		uf_cons_prof_pc		ptu_consulta_prestador.uf_cons_profissional%type, 
		sg_cons_prof_pc		ptu_consulta_prestador.sg_cons_profissional%type )FOR 
	 
	SELECT	a.cd_pessoa_fisica cd_prestador, 
		a.nm_pessoa_fisica nm_pessoa_fisica, 
		d.nr_sequencia nr_seq_prestador, 
		CASE WHEN d.ie_tipo_rede_min_ptu=1 THEN  3 WHEN d.ie_tipo_rede_min_ptu=3 THEN  1  ELSE 2 END  ie_tipo_rede_min 
	FROM conselho_profissional c, medico b, pessoa_fisica a, pls_prestador d
LEFT OUTER JOIN pls_prestador_medico e ON (d.nr_sequencia = e.nr_seq_prestador)
WHERE a.cd_pessoa_fisica	= b.cd_pessoa_fisica and a.nr_seq_conselho	= c.nr_sequencia and d.cd_pessoa_fisica	= a.cd_pessoa_fisica  and (b.nr_crm		= nr_cons_prof_pc	or coalesce(nr_cons_prof_pc::text, '') = '') and (b.uf_crm		= uf_cons_prof_pc	or coalesce(uf_cons_prof_pc::text, '') = '') and (c.sg_conselho		= sg_cons_prof_pc	or coalesce(sg_cons_prof_pc::text, '') = '') and (a.nr_cpf		= to_char(lpad(cd_cgc_cpf_pc,11,'0')) or coalesce(to_char(cd_cgc_cpf_pc)::text, '') = '') and b.ie_situacao		= 'A' and d.ie_situacao		= 'A' and (e.ie_situacao		= 'A' or coalesce(e.ie_situacao::text, '') = '') and trunc(clock_timestamp(),'dd') between trunc(coalesce(e.dt_inclusao,clock_timestamp()),'dd') and fim_dia(coalesce(e.dt_exclusao,clock_timestamp())) and upper(a.nm_pessoa_fisica_sem_acento) like nm_prestador_pc 
	 
union
 
	SELECT	cd_prestador cd_prestador, 
		substr(obter_dados_pf_pj(null, cd_cgc,'N'),1,40) nm_pessoa_fisica, 
		nr_sequencia nr_seq_prestador, 
		CASE WHEN ie_tipo_rede_min_ptu=1 THEN  3 WHEN ie_tipo_rede_min_ptu=3 THEN  1  ELSE 2 END  ie_tipo_rede_min 
	from	pls_prestador 
	where	ie_situacao	= 'A' 
	and	upper(obter_dados_pf_pj(null, cd_cgc,'N')) like nm_prestador_pc 
	and	((cd_cgc = lpad(cd_cgc_cpf_pc,14,'0')) or (coalesce(cd_cgc_cpf_pc::text, '') = '')) 
	order by 1;	
 
BEGIN 
 
cd_estabelecimento_w := cd_estabelecimento_p;
 
--Quando as transações são geradas pelo WebService, não existe estabelecimento definido, então é verificado o estabeleicmento do parâmetro 
if ( coalesce(cd_estabelecimento_w::text, '') = ''	) then 
	cd_estabelecimento_w := ptu_obter_estab_padrao;
end if;
 
select	ie_tipo_cliente, 
	cd_unimed_executora, 
	cd_unimed_beneficiario, 	 
	upper(elimina_acentos('%'||nm_prestador||'%')), 
	cd_cgc_cpf, 
	sg_cons_profissional, 
	nr_cons_profissional, 
	uf_cons_profissional, 
	nr_seq_execucao, 
	nr_versao, 
	nextval('ptu_resp_consulta_prest_seq') 
into STRICT	ie_tipo_cliente_w, 
	cd_unimed_executora_w, 
	cd_unimed_beneficiario_w, 
	nm_prestador_w, 
	cd_cgc_cpf_w, 
	sg_cons_prof_w, 
	nr_cons_prof_w, 
	uf_cons_prof_w, 
	nr_seq_execucao_w, 
	nr_versao_w, 
	nr_seq_resp_consulta_prest_p 
from	ptu_consulta_prestador 
where	nr_sequencia	= nr_seq_consulta_p;
 
insert	into ptu_resp_consulta_prest(nr_sequencia, cd_transacao, ie_tipo_cliente, 
	cd_unimed_executora, nr_seq_execucao, cd_unimed_beneficiario, 
	ie_confirmacao, nr_seq_origem, dt_atualizacao, 
	nm_usuario, nr_seq_guia, nr_seq_requisicao, 
	nm_usuario_nrec, dt_atualizacao_nrec, nr_versao) 
values (nr_seq_resp_consulta_prest_p, '00419', ie_tipo_cliente_w, 
	cd_unimed_executora_w, nr_seq_execucao_w, cd_unimed_beneficiario_w, 
	'S', nr_seq_resp_consulta_prest_p, clock_timestamp(), 
	nm_usuario_p, nr_seq_resp_consulta_prest_p, nr_seq_requisicao_w, 
	nm_usuario_p, clock_timestamp(), nr_versao_w);
begin 
	for c01_w in C01(nm_prestador_w, cd_cgc_cpf_w, nr_cons_prof_w, uf_cons_prof_w, sg_cons_prof_w) loop 
		begin		 
		select	max(a.cd_ptu) 
		into STRICT	cd_especialidade_w 
		from	pls_prestador_med_espec	b, 
			especialidade_medica	a 
		where	b.nr_seq_prestador	= c01_w.nr_seq_prestador 
		and	a.cd_especialidade	= b.cd_especialidade 
		and	trunc(clock_timestamp(),'dd') between trunc(coalesce(b.dt_inicio_vigencia, clock_timestamp()), 'dd') and fim_dia(coalesce(b.dt_fim_vigencia, clock_timestamp()));
 
		insert	into ptu_resp_nomes_prest(nr_sequencia, cd_unimed_prestador, ie_tipo_rede_min, 
			nm_prestador, cd_prestador, nr_seq_resp_prest, 
			dt_atualizacao, nm_usuario, cd_especialidade, 
			nm_usuario_nrec, dt_atualizacao_nrec) 
		values (nextval('ptu_resp_nomes_prest_seq'), cd_unimed_beneficiario_w, c01_w.ie_tipo_rede_min, 
			substr(c01_w.nm_pessoa_fisica,1,40), c01_w.cd_prestador, nr_seq_resp_consulta_prest_p, 
			clock_timestamp(), nm_usuario_p, cd_especialidade_w, 
			nm_usuario_p, clock_timestamp());
		end;
 
		ie_inseriu_w	:= 'S';
	end loop;
exception 
when others then 
	ie_inseriu_w	:= 'N';
end;
 
if (coalesce(ie_inseriu_w, 'N') = 'N') then 
	update	ptu_resp_consulta_prest 
	set	ie_confirmacao	= 'N' 
	where	nr_sequencia	= nr_seq_resp_consulta_prest_p;
	 
	CALL ptu_inserir_inconsistencia(	null, null, 5001, 
					'', cd_estabelecimento_w, nr_seq_resp_consulta_prest_p, 
					'CP', '00419', null, 
					null, null, nm_usuario_p);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_processa_consulta_prest ( nr_seq_consulta_p ptu_consulta_prestador.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_resp_consulta_prest_p INOUT ptu_resp_consulta_prest.nr_sequencia%type) FROM PUBLIC;

