-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_release_patient ( nr_seq_encounter_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_seq_service_request_w    pfcs_service_request.nr_sequencia%type;
ds_log_w                    varchar(4000);


BEGIN
    select max(v.nr_sequencia)
    into STRICT nr_seq_service_request_w
    from (
        SELECT svc.nr_sequencia
        from pfcs_service_request svc,
            pfcs_encounter enc
        where svc.cd_service in ('E0401', 'E0402', 'E0405')
            and svc.si_status in ('ACTIVE', 'COMPLETED')
            and svc.si_intent in ('PLAN', 'ORDER')
            and svc.nr_seq_encounter = enc.nr_sequencia
            and svc.nr_seq_patient = enc.nr_seq_patient
            and enc.nr_sequencia = nr_seq_encounter_p
        order by svc.dt_atualizacao desc
     LIMIT 1) v;

    if (nr_seq_service_request_w IS NOT NULL AND nr_seq_service_request_w::text <> '') then
        update pfcs_service_request set
            cd_service = 'E0405',
            si_status = 'COMPLETED',
            si_intent = 'ORDER',
            nm_usuario = nm_usuario_p,
            dt_atualizacao = clock_timestamp()
        where nr_sequencia = nr_seq_service_request_w;

        ds_log_w := (
            concat('nr_sequencia: ', nr_seq_service_request_w || CHR(10))
            || ('new cd_service: E0405' || CHR(10))
            || ('new si_status: COMPLETED' || CHR(10))
            || ('new si_intent: ORDER')
        );
        CALL pfcs_log_pck.pfcs_insert_org_struc_log(
            ie_type_p => 'UPDATE',
            nm_table_p => 'PFCS_SERVICE_REQUEST',
            ds_log_p => ds_log_w,
            nm_usuario_p => nm_usuario_p
        );

        update pfcs_encounter set
            nr_seq_location  = NULL,
            period_end = coalesce(period_end, clock_timestamp()),
            nm_usuario = nm_usuario_p,
            dt_atualizacao = clock_timestamp()
        where nr_sequencia = nr_seq_encounter_p;

        ds_log_w := (
            concat('nr_sequencia: ', nr_seq_encounter_p || CHR(10))
            || concat('new dt_period_end: ', clock_timestamp() || CHR(10))
            || ('new nr_seq_location: null')
        );
        CALL pfcs_log_pck.pfcs_insert_org_struc_log(
            ie_type_p => 'UPDATE',
            nm_table_p => 'PFCS_ENCOUNTER',
            ds_log_p => ds_log_w,
            nm_usuario_p => nm_usuario_p
        );

        update pfcs_patient_loc_hist set
            dt_period_end = clock_timestamp(),
            nm_usuario = nm_usuario_p,
            dt_atualizacao = clock_timestamp()
        where nr_seq_encounter = nr_seq_encounter_p
            and si_intent = 'ORDER'
            and coalesce(dt_period_end::text, '') = '';

        ds_log_w := (
            concat('nr_seq_encounter: ', nr_seq_encounter_p || CHR(10))
            || concat('new dt_period_end: ', clock_timestamp())
        );
        CALL pfcs_log_pck.pfcs_insert_org_struc_log(
            ie_type_p => 'UPDATE',
            nm_table_p => 'PFCS_PATIENT_LOC_HIST',
            ds_log_p => ds_log_w,
            nm_usuario_p => nm_usuario_p
        );

        commit;
    end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_release_patient ( nr_seq_encounter_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

