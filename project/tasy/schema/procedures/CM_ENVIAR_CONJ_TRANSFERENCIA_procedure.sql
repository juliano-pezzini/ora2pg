-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cm_enviar_conj_transferencia ( nr_seq_conjunto_p bigint, nr_seq_transferencia_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_sequencia_w			bigint;
qt_existe_w			bigint;
ds_erro_w			varchar(255);
ie_status_transf_w		smallint;
cd_estab_w			smallint;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
nr_sequence_w cm_conjunto_movto.nr_sequencia%type;


BEGIN
cd_estabelecimento_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,1);

if (coalesce(nr_seq_conjunto_p,0) > 0) then
	begin

	if (coalesce(ds_erro_w::text, '') = '')   then
		begin
            select	max(nr_sequencia)
            into STRICT	nr_sequence_w
            from	cm_conjunto_movto
            where	nr_seq_conjunto = nr_seq_conjunto_p;

            select	coalesce(max(cd_estab_atual),0)
            into STRICT	qt_existe_w
            from	cm_conjunto_movto
            where	nr_sequencia = nr_sequence_w;

            if (coalesce(qt_existe_w,0) = 0) then      
        
                select	count(*)
            	into STRICT	qt_existe_w
            	from	cm_conjunto_cont
                where	nr_sequencia = nr_seq_conjunto_p
            	and 	cd_estabelecimento = cd_estabelecimento_w
            	and	coalesce(ie_situacao,'A') = 'A';

            else
            
                select	count(*)
            	into STRICT	qt_existe_w
            	from	cm_conjunto_cont
                where	nr_sequencia = nr_seq_conjunto_p
            	and	coalesce(ie_situacao,'A') = 'A';

            end if;

			if (qt_existe_w = 0) then
				ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(266321);
			end if;
		end;
	end if;
	
	
	if (coalesce(ds_erro_w::text, '') = '') then
		begin
		
		select	count(*)
		into STRICT	qt_existe_w
		from	cm_conjunto_cont a,
			cm_ciclo b
		where	a.nr_sequencia = nr_seq_conjunto_p
		and	b.nr_sequencia = a.nr_seq_ciclo
		and	coalesce(b.dt_fim::text, '') = '';

		if (qt_existe_w > 0) then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279829);
		end if;

		end;
	end if;

	if (coalesce(ds_erro_w::text, '') = '') then
		begin
		
		select	count(*)
		into STRICT	qt_existe_w
		from	cm_lote_transferencia a,
			cm_lote_transf_conj b
		where	a.nr_sequencia = nr_seq_transferencia_p
		and	b.nr_seq_lote_transf = a.nr_sequencia
		and	b.nr_seq_conjunto = nr_seq_conjunto_p;

		if (qt_existe_w > 0) then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279831);
		end if;

		end;
	end if;
	
	if (coalesce(ds_erro_w::text, '') = '') then
		begin
		select	cm_obter_estab_atual_conj(nr_seq_conjunto_p)
		into STRICT	cd_estab_w
		;
		
		ie_status_transf_w := obter_param_usuario(406, 165, obter_perfil_ativo, nm_usuario_p, cd_estab_w, ie_status_transf_w);

		if (coalesce(ie_status_transf_w,0) > 0) then
		
			select	count(*)
			into STRICT	qt_existe_w
			from	cm_conjunto_cont a
			where	a.nr_sequencia = nr_seq_conjunto_p
			and	a.ie_status_conjunto = ie_status_transf_w;
			
			if (qt_existe_w = 0) then
				ds_erro_w := (WHEB_MENSAGEM_PCK.get_texto(279832));
			end if;
		
		end if;

		end;
	end if;
	
	if (coalesce(ds_erro_w::text, '') = '') then
		begin

		select	nextval('cm_lote_transf_conj_seq')
		into STRICT	nr_sequencia_w
		;

		insert into cm_lote_transf_conj(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_lote_transf,
			nr_seq_conjunto) values (
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_transferencia_p,
				nr_seq_conjunto_p);

		commit;

		end;
	end if;

	end;
end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cm_enviar_conj_transferencia ( nr_seq_conjunto_p bigint, nr_seq_transferencia_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

