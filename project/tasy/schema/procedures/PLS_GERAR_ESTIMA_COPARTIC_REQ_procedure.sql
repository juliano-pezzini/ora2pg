-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_estima_copartic_req ( nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar a estimativa de coparticipacao na funcao OPS - Autorizacoes
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_segurado_w			pls_segurado.nr_sequencia%type;
cd_guia_w				pls_requisicao.cd_guia_prestador%type;
ie_tipo_guia_w				pls_requisicao.ie_tipo_guia%type;
dt_autorizacao_w			pls_requisicao.dt_requisicao%type;
nr_seq_prestador_w			pls_prestador.nr_sequencia%type;
ie_tipo_processo_w			pls_requisicao.ie_tipo_processo%type;
ie_tipo_atend_tiss_w			pls_requisicao.ie_tipo_atendimento%type;
ie_carater_internacao_w			pls_requisicao.ie_carater_atendimento%type;
nr_seq_categoria_w			pls_categoria.nr_sequencia%type;
nr_seq_tipo_atendimento_w		pls_tipo_atendimento.nr_sequencia%type;
ie_tipo_segurado_w			pls_segurado.ie_tipo_segurado%type;
nr_seq_plano_w				pls_plano.nr_sequencia%type;
dt_contrato_w				pls_contrato.dt_contrato%type;
nr_seq_intercambio_w			pls_intercambio.nr_sequencia%type;
nr_seq_congenere_w			pls_congenere.nr_sequencia%type;
sg_estado_int_w				pessoa_juridica.sg_estado%type;
sg_estado_w				pessoa_juridica.sg_estado%type;
nr_seq_contrato_w			pls_contrato.nr_sequencia%type;
nr_contrato_w				pls_contrato.nr_contrato%type;
nr_seq_classificacao_prest_w		pls_classif_prestador.nr_sequencia%type;
nr_seq_tipo_prestador_w			pls_tipo_prestador.nr_sequencia%type;
qt_autorizada_w				pls_requisicao_proc.qt_procedimento%type;
nr_seq_pacote_w				pls_pacote.nr_sequencia%type;
cd_proc_pacote_w			procedimento.cd_procedimento%type;
ie_origem_pacote_w			procedimento.ie_origem_proced%type;
nr_seq_estrut_mat_w			pls_estrutura_material.nr_sequencia%type;
ie_tipo_despesa_w			pls_material.ie_tipo_despesa%type;
nr_seq_clinica_w			pls_clinica.nr_sequencia%type;
nr_seq_tipo_acomodacao_w		pls_tipo_acomodacao.nr_sequencia%type;
nr_seq_acomod_pacote_w			pls_pacote_tipo_acomodacao.nr_sequencia%type;
nr_seq_regra_w				pls_regra_copartic_aut.nr_sequencia%type;
nr_seq_regra_copartic_w			pls_regra_copartic_aut.nr_sequencia%type;
cd_edicao_amb_w				edicao_amb.cd_edicao_amb%type;
cd_porte_anestesico_w			preco_amb.qt_porte_anestesico%type;
nr_aux_regra_w				preco_amb.nr_auxiliares%type;
nr_seq_regra_autogerado_w		pls_regra_preco_autogerado.nr_sequencia%type;
cd_moeda_autogerado_w			pls_preco_autogerado.cd_moeda%type;
nr_seq_copartic_w			pls_coparticipacao_proc.nr_sequencia%type;
cd_area_w				area_procedimento.cd_area_procedimento%type;
cd_especialidade_w			especialidade_proc.cd_especialidade%type;
cd_grupo_w				grupo_proc.cd_grupo_proc%type;
ie_origem_proced_w			procedimento.ie_origem_proced%type;
nr_seq_outorgante_w			pls_outorgante.nr_sequencia%type;
nr_seq_cbo_saude_w			pls_guia_plano.nr_seq_cbo_saude%type;
dt_ult_vigencia_w			timestamp;
nr_seq_material_preco_w			bigint;
qt_idade_w				smallint;
vl_liberado_w				double precision;
vl_coparticipacao_w			double precision;
vl_unitario_w				double precision;
vl_copartic_unit_w			double precision;
vl_custo_operacional_w			double precision;
vl_anestesista_w			double precision;
vl_medico_w				double precision;
vl_filme_w				double precision;
vl_auxiliares_w				double precision;
vl_material_w				double precision;
vl_material_simpro_w			double precision;
vl_material_brasindice_w		double precision;
vl_material_tabela_w			double precision;
vl_pacote_w				double precision;
vl_materiais_w				double precision;
ie_proc_grupo_serv_w			varchar(1);
ie_internado_w				varchar(4);
ie_restringe_estab_w			varchar(4);
ie_calculo_coparticipacao_w		varchar(4);
ie_calculo_copartic_w			varchar(4);
ie_titularidade_w			varchar(4);
ie_tipo_intercambio_w			varchar(4);
ie_dependencia_w			varchar(4);
ie_estrut_mat_w				varchar(4);
ie_depende_regra_w			varchar(4);
ie_tipo_valor_w				varchar(4);
ie_valor_informado_w			varchar(4);
ie_gerar_copartic_w			varchar(4);
ie_tipo_atend_w				varchar(4);
ie_liberado_w				varchar(4);
ds_retorno_w				varchar(255);
qt_coparticipacao_w			integer;
qt_registros_w				integer;
cont_w					integer;
qt_prestador_cooperado_w		integer;
vl_ch_honorarios_w			cotacao_moeda.vl_cotacao%type;
vl_ch_custo_oper_w			cotacao_moeda.vl_cotacao%type;
vl_ch_custo_filme_w			cotacao_moeda.vl_cotacao%type;
vl_ch_anestesista_w			cotacao_moeda.vl_cotacao%type;
dados_regra_preco_proc_w		pls_cta_valorizacao_pck.dados_regra_preco_proc;
dados_regra_preco_material_w		pls_cta_valorizacao_pck.dados_regra_preco_material;
dados_guia_w				pls_cta_valorizacao_pck.dados_guia;
ie_itens_aprovados_w			pls_param_requisicao.ie_validar_itens_copart%type := 'N';
ie_regime_atendimento_w			pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w			pls_conta.ie_saude_ocupacional%type;

c_proc_req CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		qt_solicitado,
		vl_procedimento,
		nr_seq_pacote
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	((ie_itens_aprovados_w = 'S' and ie_status('S', 'L'))
	or (ie_itens_aprovados_w = 'N'));

c_mat_req CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		qt_material,
		qt_solicitado,
		nr_seq_prest_fornec
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	((ie_itens_aprovados_w = 'S' and ie_status('S', 'L'))
	or (ie_itens_aprovados_w = 'N'));

c_regras_copart CURSOR FOR 	-- Pega as regras de coparticipacao do contrato (1 Parte do union) , do intercambio (2 parte do union), ou do plano caso nao exista no contrato (3 Parte do union) 
	SELECT	nr_seq_regra_coparticipacao,
		nr_seq_tipo_coparticipacao,
		tx_coparticipacao,
		vl_maximo,
		ie_tipo_atendimento,
		vl_coparticipacao,
		qt_eventos_minimo,
		qt_meses_intervalo,
		qt_ocorrencias,
		ie_tipo_ocorrencia,
		ie_tipo_data_consistencia,
		qt_diaria_inicial,
		qt_diaria_final,
		ie_origem,
		ie_incidencia_valor_maximo,
		ie_forma_cobr_internacao,
		ie_periodo_valor_maximo
	from	(	SELECT	a.nr_sequencia nr_seq_regra_coparticipacao,
				a.nr_seq_tipo_coparticipacao,
				coalesce(a.tx_coparticipacao,0) tx_coparticipacao,
				coalesce(a.vl_maximo,0) vl_maximo,
				a.ie_tipo_atendimento,
				a.vl_coparticipacao,
				coalesce(a.qt_eventos_minimo,0) qt_eventos_minimo,
				coalesce(a.qt_meses_intervalo,1) qt_meses_intervalo,
				coalesce(qt_ocorrencias,0) qt_ocorrencias,
				ie_tipo_ocorrencia,
				coalesce(ie_tipo_data_consistencia,'N') ie_tipo_data_consistencia,
				a.qt_diaria_inicial,
				a.qt_diaria_final,
				'C' ie_origem,
				coalesce(a.ie_incidencia_valor_maximo,'U') ie_incidencia_valor_maximo,
				coalesce(qt_ocorrencia_grupo_serv,0) qt_ocorrencia_grupo_serv,
				coalesce(ie_forma_cobr_internacao,'C') ie_forma_cobr_internacao,
				coalesce(ie_periodo_valor_maximo,'C') ie_periodo_valor_maximo
			from	pls_regra_coparticipacao a
			where (
				coalesce(dt_inicio_vigencia::text, '') = ''
			or	dt_inicio_vigencia		<= dt_autorizacao_w
				)
			and (
				coalesce(dt_fim_vigencia::text, '') = ''
			or	dt_fim_vigencia			>= dt_autorizacao_w
				)
			and (
				coalesce(dt_contrato_de::text, '') = ''
			or	dt_contrato_de			<= dt_contrato_w
				)
			and (
				coalesce(dt_contrato_ate::text, '') = ''
			or	dt_contrato_ate			>= dt_contrato_w
				)
			and (
				coalesce(qt_idade_min::text, '') = ''
			or	qt_idade_min			<= qt_idade_w
				)
			and (
				coalesce(qt_idade_max::text, '') = ''
			or	qt_idade_max			>= qt_idade_w
				)
			and	nr_seq_contrato			= nr_seq_contrato_w
			and (
				coalesce(nr_seq_plano::text, '') = ''
			or 	nr_seq_plano 			= nr_seq_plano_w
				)
			and (
				coalesce(nr_seq_prestador::text, '') = ''
			or 	nr_seq_prestador 		= nr_seq_prestador_w
				)
			and (
				coalesce(nr_seq_tipo_prestador::text, '') = ''
			or 	nr_seq_tipo_prestador 		= nr_seq_tipo_prestador_w
				)
			and 	(
				(coalesce(ie_prestador_cooperado::text, '') = '')
			or (ie_prestador_cooperado		= 'N')
			or (ie_prestador_cooperado 	= 'S'	and qt_prestador_cooperado_w	> 0)
				)
			and 	(
				(coalesce(ie_titularidade::text, '') = '')
			or (ie_titularidade 		= 'A')
			or (ie_titularidade 		= ie_titularidade_w)
				)
			and (coalesce(ie_tipo_parentesco::text, '') = ''
			or 	ie_tipo_parentesco 		= ie_dependencia_w
				)
			
union

			select	a.nr_sequencia,
				a.nr_seq_tipo_coparticipacao,
				coalesce(a.tx_coparticipacao,0),
				coalesce(a.vl_maximo,0),
				a.ie_tipo_atendimento,
				a.vl_coparticipacao,
				coalesce(a.qt_eventos_minimo,0),
				coalesce(a.qt_meses_intervalo,1),
				coalesce(qt_ocorrencias,0) qt_ocorrencias,
				ie_tipo_ocorrencia,
				coalesce(ie_tipo_data_consistencia,'N'),
				a.qt_diaria_inicial,
				a.qt_diaria_final,
				'I',
				coalesce(a.ie_incidencia_valor_maximo,'U'),
				coalesce(qt_ocorrencia_grupo_serv,0) qt_ocorrencia_grupo_serv,
				coalesce(ie_forma_cobr_internacao,'C') ie_forma_cobr_internacao,
				coalesce(ie_periodo_valor_maximo,'C') ie_periodo_valor_maximo
			from	pls_regra_coparticipacao a
			where (
				coalesce(dt_inicio_vigencia::text, '') = ''
			or	dt_inicio_vigencia		<= dt_autorizacao_w
				)
			and (
				coalesce(dt_fim_vigencia::text, '') = ''
			or	dt_fim_vigencia			>= dt_autorizacao_w
				)
			and (
				coalesce(dt_contrato_de::text, '') = ''
			or	dt_contrato_de			<= dt_contrato_w
				)
			and (
				coalesce(dt_contrato_ate::text, '') = ''
			or	dt_contrato_ate			>= dt_contrato_w
				)
			and (
				coalesce(qt_idade_min::text, '') = ''
			or	qt_idade_min			<= qt_idade_w
				)
			and (
				coalesce(qt_idade_max::text, '') = ''
			or	qt_idade_max			>= qt_idade_w
				)
			and	nr_seq_intercambio		= nr_seq_intercambio_w
			and (
				coalesce(nr_seq_plano::text, '') = ''
			or 	nr_seq_plano 			= nr_seq_plano_w
				)
			and (
				coalesce(nr_seq_prestador::text, '') = ''
			or 	nr_seq_prestador 		= nr_seq_prestador_w
				)
			and (
				coalesce(nr_seq_tipo_prestador::text, '') = ''
			or 	nr_seq_tipo_prestador 		= nr_seq_tipo_prestador_w
				)
			and 	(
				(coalesce(ie_prestador_cooperado::text, '') = '')
			or (ie_prestador_cooperado		= 'N')
			or (ie_prestador_cooperado 	= 'S'	and qt_prestador_cooperado_w	> 0)
				)
			and 	(
				(coalesce(ie_titularidade::text, '') = '')
			or (ie_titularidade 		= 'A')
			or (ie_titularidade 		= ie_titularidade_w)
				)
			and (coalesce(ie_tipo_parentesco::text, '') = ''
			or 	ie_tipo_parentesco 		= ie_dependencia_w
				)
			
union

			select	a.nr_sequencia,
				a.nr_seq_tipo_coparticipacao,
				coalesce(a.tx_coparticipacao,0),
				coalesce(a.vl_maximo,0),
				a.ie_tipo_atendimento,
				a.vl_coparticipacao,
				coalesce(a.qt_eventos_minimo,0),
				coalesce(a.qt_meses_intervalo,1),
				coalesce(qt_ocorrencias,0) qt_ocorrencias,
				ie_tipo_ocorrencia,
				coalesce(ie_tipo_data_consistencia,'N'),
				a.qt_diaria_inicial,
				a.qt_diaria_final,
				'P',
				coalesce(a.ie_incidencia_valor_maximo,'U'),
				coalesce(qt_ocorrencia_grupo_serv,0) qt_ocorrencia_grupo_serv,
				coalesce(ie_forma_cobr_internacao,'C') ie_forma_cobr_internacao,
				coalesce(ie_periodo_valor_maximo,'C') ie_periodo_valor_maximo
			from	pls_regra_coparticipacao a
			where (
				coalesce(dt_inicio_vigencia::text, '') = ''
			or	dt_inicio_vigencia		<= dt_autorizacao_w
				)
			and (
				coalesce(dt_fim_vigencia::text, '') = ''
			or	dt_fim_vigencia			>= dt_autorizacao_w
				)
			and (
				coalesce(dt_contrato_de::text, '') = ''
			or	dt_contrato_de			<= dt_contrato_w
				)
			and (
				coalesce(dt_contrato_ate::text, '') = ''
			or	dt_contrato_ate			>= dt_contrato_w
				)
			and (
				coalesce(qt_idade_min::text, '') = ''
			or	qt_idade_min			<= qt_idade_w
				)
			and (
				coalesce(qt_idade_max::text, '') = ''
			or	qt_idade_max			>= qt_idade_w
				)
			and	a.nr_seq_plano			= nr_seq_plano_w
			and	coalesce(a.nr_seq_contrato::text, '') = ''
			and	coalesce(a.nr_seq_intercambio::text, '') = ''
			and	coalesce(a.nr_seq_proposta::text, '') = ''
			and (
				coalesce(nr_seq_prestador::text, '') = ''
			or 	nr_seq_prestador 		= nr_seq_prestador_w
				)
			and (
				coalesce(nr_seq_tipo_prestador::text, '') = ''
			or 	nr_seq_tipo_prestador 		= nr_seq_tipo_prestador_w
				)
			and 	(
				(coalesce(ie_prestador_cooperado::text, '') = '')
			or (ie_prestador_cooperado		= 'N')
			or (ie_prestador_cooperado 	= 'S'	and qt_prestador_cooperado_w	> 0)
				)
			and 	(
				(coalesce(ie_titularidade::text, '') = '')
			or (ie_titularidade 		= 'A')
			or (ie_titularidade 		= ie_titularidade_w)
				)
			and (coalesce(ie_tipo_parentesco::text, '') = ''
			or 	ie_tipo_parentesco 		= ie_dependencia_w
				)
			and	not exists (	select	1
									from	pls_regra_coparticipacao x
									where	x.nr_seq_contrato	= nr_seq_contrato_w
									and (coalesce(x.dt_inicio_vigencia::text, '') = ''
									or	x.dt_inicio_vigencia	<= dt_autorizacao_w)
									and (coalesce(x.dt_fim_vigencia::text, '') = ''
									or 	x.dt_fim_vigencia >= dt_autorizacao_w ) )
			and	not exists (	select	1
									from	pls_regra_coparticipacao x
									where	x.nr_seq_intercambio	= nr_seq_intercambio_w
									and (coalesce(x.dt_inicio_vigencia::text, '') = ''
									or	x.dt_inicio_vigencia	<= dt_autorizacao_w)
									and (coalesce(x.dt_fim_vigencia::text, '') = ''
									or 	x.dt_fim_vigencia >= dt_autorizacao_w) )
		) alias131
	order by qt_ocorrencia_grupo_serv desc;

c_copartic_proc CURSOR(cd_procedimento_p		procedimento.cd_procedimento%type,
			ie_origem_proced_p		procedimento.ie_origem_proced%type,
			cd_grupo_p			grupo_proc.cd_grupo_proc%type,
			cd_especialidade_p		especialidade_proc.cd_especialidade%type,
			cd_area_p			area_procedimento.cd_area_procedimento%type,
			nr_seq_tipo_coparticipacao_p	pls_tipo_coparticipacao.nr_sequencia%type)is
	with query_tmp as (	
			SELECT	b.ie_liberado,
				b.nr_seq_grupo_servico
			from	pls_tipo_coparticipacao a,
				pls_coparticipacao_proc b
			where	a.nr_sequencia		= b.nr_seq_tipo_coparticipacao
			and	a.nr_sequencia		= nr_seq_tipo_coparticipacao_p
			and (coalesce(b.cd_procedimento::text, '') = ''	or b.cd_procedimento		= cd_procedimento_p)
			and (coalesce(b.ie_origem_proced::text, '') = ''	or b.ie_origem_proced 		= ie_origem_proced_p)
			and (coalesce(b.cd_grupo_proc::text, '') = ''	or b.cd_grupo_proc		= cd_grupo_p)
			and (coalesce(b.cd_especialidade::text, '') = ''	or b.cd_especialidade		= cd_especialidade_p)
			and (coalesce(b.cd_area_procedimento::text, '') = ''	or b.cd_area_procedimento	= cd_area_p)
			and	a.ie_situacao		= 'A'
			order by
				b.cd_area_procedimento,
				b.cd_especialidade,
				b.cd_grupo_proc,
				b.cd_procedimento
	)
	SELECT	ie_liberado,
		nr_seq_grupo_servico
	from	query_tmp LIMIT 1;

c_copartic_mat CURSOR(	nr_seq_material_p		pls_material.nr_sequencia%type,
			ie_tipo_despesa_p		pls_material.ie_tipo_despesa%type,
			nr_seq_tipo_coparticipacao_p	pls_tipo_coparticipacao.nr_sequencia%type)is
	with query_tmp	as (
			SELECT	b.ie_liberado,
				b.nr_seq_estrut_mat
			from	pls_tipo_coparticipacao a,
				pls_coparticipacao_mat b
			where	a.nr_sequencia		= b.nr_seq_tipo_coparticipacao
			and	a.nr_sequencia		= nr_seq_tipo_coparticipacao_p
			and (coalesce(b.nr_seq_material::text, '') = ''	or b.nr_seq_material	= nr_seq_material_p)
			and (coalesce(b.ie_tipo_despesa::text, '') = ''	or b.ie_tipo_despesa 	= ie_tipo_despesa_p)
			and	a.ie_situacao	= 'A'
			order by
				nr_seq_material,
				nr_seq_estrut_mat
	)
	SELECT	ie_liberado,
		nr_seq_estrut_mat
	from	query_tmp LIMIT 1;
BEGIN

select	coalesce(max(ie_validar_itens_copart),'N')
into STRICT	ie_itens_aprovados_w
from	pls_param_requisicao;

-- Obter os dados da requisicao
select	max(a.nr_seq_segurado),
	max(a.cd_guia_prestador),
	max(a.ie_tipo_guia),
	max(trunc(coalesce(a.dt_requisicao, a.dt_solicitacao))),
	max(a.nr_seq_clinica),
	max(a.nr_seq_prestador),
	max(a.nr_seq_tipo_acomodacao),
	max(a.ie_tipo_processo),
	max(a.ie_tipo_atendimento),
	max(a.ie_carater_atendimento),
	max(pls_obter_internado_guia(a.nr_sequencia, 'R')),
	max(a.ie_tipo_consulta),
	max(a.nr_seq_plano),
	max(a.nr_seq_cbo_saude),
	max(a.ie_regime_atendimento),
	max(a.ie_saude_ocupacional)
into STRICT	nr_seq_segurado_w,
	cd_guia_w,
	ie_tipo_guia_w,
	dt_autorizacao_w,
	nr_seq_clinica_w,
	nr_seq_prestador_w,
	nr_seq_tipo_acomodacao_w,
	ie_tipo_processo_w,
	ie_tipo_atend_tiss_w,
	ie_carater_internacao_w,
	ie_internado_w,
	dados_guia_w.ie_tipo_consulta_guia,
	nr_seq_plano_w,
	nr_seq_cbo_saude_w,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_requisicao a
where	a.nr_sequencia = nr_seq_requisicao_p;

-- Obter a categoria do tipo de acomodacao
if (nr_seq_tipo_acomodacao_w IS NOT NULL AND nr_seq_tipo_acomodacao_w::text <> '') then
	select	max(nr_seq_categoria)
	into STRICT	nr_seq_categoria_w
	from	pls_regra_categoria 
	where	nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w;
end if;

-- Obter a sequencia do tipo de atendimento
begin
	select	nr_sequencia
	into STRICT	nr_seq_tipo_atendimento_w
	from	pls_tipo_atendimento
	where	somente_numero(cd_tiss)	= ie_tipo_atend_tiss_w;
exception
when others then
	nr_seq_tipo_atendimento_w	:= null;
end;

-- Obter se a regra de coparticipacao sera restringida por estabelecimento
ie_restringe_estab_w	:= pls_obter_se_controle_estab('CO');

/* Obter se o tipo de calculo da coparticipacao
P = Prestador
O = Operadora
R = Conforme regra
*/
begin
	select	coalesce(max(ie_calculo_coparticipacao),'P')
	into STRICT	ie_calculo_coparticipacao_w
	from	pls_parametros
	where	((ie_restringe_estab_w	= 'S' AND cd_estabelecimento	= cd_estabelecimento_p)
	or (ie_restringe_estab_w	= 'N'));
exception
when others then
	ie_calculo_coparticipacao_w	:= 'P';
end;

-- Alterar o valor para o tratado na procedure de valoreizacao dos itens
if (ie_calculo_coparticipacao_w	= 'O') then
	ie_calculo_coparticipacao_w	:= 'CO';
end if;

-- Obter o tipo do beneficiario da requisicao
ie_tipo_segurado_w	:= pls_obter_dados_segurado(nr_seq_segurado_w, 'TP');

if (ie_tipo_segurado_w	in ('I','H')) then
	-- Obter os dados do beneficiario eventual
	select	dt_contratacao,
		nr_seq_intercambio,
		nr_seq_congenere,
		obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),
		CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END
	into STRICT	dt_contrato_w,
		nr_seq_intercambio_w,
		nr_seq_congenere_w,
		qt_idade_w,
		ie_titularidade_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;

	-- Obter o estado(UF) da operadora do beneficiario eventual
	select	max(a.sg_estado)
	into STRICT	sg_estado_int_w
	from	pessoa_juridica	a,
		pls_congenere	b
	where	a.cd_cgc	= b.cd_cgc
	and	b.nr_sequencia	= nr_seq_congenere_w;

	-- Obter o estado(UF) da operadora do estabelecimento (operadora cadastrada na funcao OPS - Gestao de Operadoras)
	select	max(a.sg_estado)
	into STRICT	sg_estado_w
	from	pessoa_juridica a
	where	exists (	SELECT	1
				from	pls_outorgante b
				where	b.cd_estabelecimento	= cd_estabelecimento_p
				and	b.cd_cgc_outorgante	= a.cd_cgc);

	if (sg_estado_w IS NOT NULL AND sg_estado_w::text <> '') and (sg_estado_int_w IS NOT NULL AND sg_estado_int_w::text <> '') then
		if (sg_estado_w	= sg_estado_int_w) then
			ie_tipo_intercambio_w	:= 'E';
		else	
			ie_tipo_intercambio_w	:= 'N';
		end if;
	else
		ie_tipo_intercambio_w	:= 'A';
	end if;
else
	-- Obter os dados do beneficiario de plano de saude
	select	nr_seq_contrato,
		obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),
		CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END
	into STRICT	nr_seq_contrato_w,
		qt_idade_w,
		ie_titularidade_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;

	-- Obter a data do contrato e o numero do contrato do beneficiario
	begin
		select	dt_contrato,
			nr_contrato
		into STRICT	dt_contrato_w,
			nr_contrato_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;
	exception
	when others then
		dt_contrato_w	:= null;
		nr_contrato_w	:= null;
	end;
end if;

-- Obter a dependencia do beneficiario
ie_dependencia_w	:= pls_obter_garu_dependencia_seg(nr_seq_segurado_w,'C');
if (ie_dependencia_w = 'T') then
	ie_dependencia_w	:= '';
elsif (ie_dependencia_w = 'DL') then
	ie_dependencia_w	:= '1';
elsif (ie_dependencia_w = 'DA') then
	ie_dependencia_w	:= '2';
end if;

-- Obter a classificacao do prestador (Online ou Offline)

-- Obter o tipo do prestador. Ex: Medico,  Consultorio, Hospital
begin
	select	nr_seq_classificacao,
		nr_seq_tipo_prestador
	into STRICT	nr_seq_classificacao_prest_w,
		nr_seq_tipo_prestador_w
	from	pls_prestador	
	where	nr_sequencia = nr_seq_prestador_w;
exception
when others then
	nr_seq_classificacao_prest_w	:= null;
	nr_seq_tipo_prestador_w		:= null;
end;

-- Qunado for definido o calculo de coparticipacao "Depende da regra", sera calculado com base nos valores da operadora
select	CASE WHEN ie_calculo_coparticipacao_w='R' THEN 'CO'  ELSE ie_calculo_coparticipacao_w END
into STRICT	ie_calculo_copartic_w
;

-- Verificar se o prestador e cooperado da operadora
select	count(1)
into STRICT	qt_prestador_cooperado_w
from	pls_congenere	b,
	pls_prestador	a
where	a.cd_cgc	= b.cd_cgc
and	a.nr_sequencia	= nr_seq_prestador_w  LIMIT 1;

-- Obter a operadora outorgante do produto
begin
	select	nr_seq_outorgante
	into STRICT	nr_seq_outorgante_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
exception
	when others then
	nr_seq_outorgante_w	:= 0;
end;

-- Caso ja exista uma estimativa de coparticipacao para a requisicao em questao, deve ser atulizado para a mais recente
delete	from pls_req_coparticipacao
where	nr_seq_requisicao = nr_seq_requisicao_p;

for r_proc_req_w in c_proc_req loop
	ie_depende_regra_w	:= 'N';
	ie_liberado_w		:= 'N';

	if (r_proc_req_w.qt_procedimento	= 0) then
		qt_autorizada_w	:= r_proc_req_w.qt_solicitado;
	else
		qt_autorizada_w	:= r_proc_req_w.qt_procedimento;
	end if;

	-- Obter a estrutura do procedimento selecionado no cursor
	SELECT * FROM pls_obter_estrut_proc(	r_proc_req_w.cd_procedimento, r_proc_req_w.ie_origem_proced, 	-- IN
				cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT 
				cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;	-- OUT
	if (ie_calculo_coparticipacao_w	= 'R') and (r_proc_req_w.nr_seq_pacote IS NOT NULL AND r_proc_req_w.nr_seq_pacote::text <> '') then
		-- Obter valor da regra na funcao OPS - Cadastro de Regras > OPS - Atendimento > Autorizacao > Estimativa de coparticipacao
		SELECT * FROM pls_obter_tipo_vl_copartic_aut(	nr_seq_segurado_w, dt_autorizacao_w, nm_usuario_p, '4', 	-- IN
						ie_tipo_valor_w, nr_seq_regra_copartic_w) INTO STRICT 
						ie_tipo_valor_w, nr_seq_regra_copartic_w;		-- OUT
		if (ie_tipo_valor_w = 1) or (ie_tipo_valor_w = 6) then
			ie_depende_regra_w	:= 'S';
			
			select	CASE WHEN ie_tipo_valor_w=6 THEN 2  ELSE 1 END
			into STRICT	ie_tipo_valor_w
			;

			--Valorizar o procedimento quando este for Pacote
			SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_p, nr_seq_prestador_w, nr_seq_tipo_acomodacao_w, 			-- IN
						dt_autorizacao_w, r_proc_req_w.cd_procedimento, r_proc_req_w.ie_origem_proced, 	-- IN
						ie_internado_w, nr_seq_plano_w, nr_contrato_w, 						-- IN
						nr_seq_congenere_w, nm_usuario_p, '', ie_tipo_intercambio_w, 				-- IN
						nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, 				-- OUT
						ie_origem_pacote_w, vl_pacote_w, vl_medico_w, 						-- OUT
						vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w, 		-- OUT
						nr_seq_intercambio_w, nr_seq_classificacao_prest_w, 					-- IN
						null, nr_seq_segurado_w, null, 'N', null, ie_tipo_valor_w) INTO STRICT 
						nr_seq_pacote_w, nr_seq_acomod_pacote_w, cd_proc_pacote_w, 
						ie_origem_pacote_w, vl_pacote_w, vl_medico_w, 
						vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w;						-- IN
			vl_liberado_w	:= (vl_pacote_w * qt_autorizada_w);
			vl_unitario_w	:= vl_pacote_w;
			nr_seq_regra_w	:= nr_seq_regra_copartic_w;
		else
			ie_calculo_coparticipacao_w	:= 'CO';
		end if;
	end if;
	
	if (ie_depende_regra_w <> 'S') then
		-- Valorizar o procedimento com base nas regras da funcao OPS - Regras e Criterios de Preco
		dados_regra_preco_proc_w := pls_define_preco_proc(	cd_estabelecimento_p, nr_seq_prestador_w, null, dt_autorizacao_w, null, r_proc_req_w.cd_procedimento, r_proc_req_w.ie_origem_proced, nr_seq_tipo_acomodacao_w, null, nr_seq_clinica_w, nr_seq_plano_w, ie_calculo_copartic_w, nr_seq_contrato_w, 0, null, 'N', null, null, null, null, null, null, null, null, null, null, null, ie_tipo_guia_w, 'A', 'X', nr_seq_cbo_saude_w, ie_carater_internacao_w, null, null, null, null, dados_guia_w, null, dados_regra_preco_proc_w, null, null, ie_regime_atendimento_w, null, ie_saude_ocupacional_w);
					
		vl_unitario_w			:= dados_regra_preco_proc_w.vl_procedimento;
		vl_custo_operacional_w		:= dados_regra_preco_proc_w.vl_custo_operacional;
		vl_anestesista_w		:= dados_regra_preco_proc_w.vl_anestesista;
		vl_medico_w			:= dados_regra_preco_proc_w.vl_medico;
		vl_filme_w			:= dados_regra_preco_proc_w.vl_filme;
		vl_auxiliares_w			:= dados_regra_preco_proc_w.vl_auxiliares;
		nr_seq_regra_w			:= dados_regra_preco_proc_w.nr_sequencia;
		cd_edicao_amb_w			:= dados_regra_preco_proc_w.cd_edicao_amb;
		cd_porte_anestesico_w		:= dados_regra_preco_proc_w.cd_porte_anestesico;
		nr_aux_regra_w			:= dados_regra_preco_proc_w.nr_auxiliares;
		nr_seq_regra_autogerado_w	:= dados_regra_preco_proc_w.nr_seq_regra_autogerado;
		cd_moeda_autogerado_w		:= dados_regra_preco_proc_w.cd_moeda_autogerado;
		vl_ch_honorarios_w		:= dados_regra_preco_proc_w.vl_ch_honorarios;
		vl_ch_custo_oper_w		:= dados_regra_preco_proc_w.vl_ch_custo_oper;
		vl_ch_custo_filme_w		:= dados_regra_preco_proc_w.vl_ch_custo_filme;
		vl_ch_anestesista_w		:= dados_regra_preco_proc_w.vl_ch_anestesista;

		vl_liberado_w 	:= (vl_unitario_w * qt_autorizada_w);
	end if;

	select	pls_obter_se_copartic(cd_guia_w,nr_seq_segurado_w, null, null)
	into STRICT	ie_gerar_copartic_w
	;

	if (ie_gerar_copartic_w = 'N') then
		if (ie_tipo_guia_w in ('1','5','6','7','8')) then
			ie_tipo_atend_w	:= 'I';
		elsif (ie_tipo_guia_w in ('2','3','4')) then
			ie_tipo_atend_w	:= 'E';
		end if;

		for r_regras_copart_w in c_regras_copart loop
			if (r_regras_copart_w.ie_tipo_atendimento = ie_tipo_atend_w) or (r_regras_copart_w.ie_tipo_atendimento = 'A') then
				cont_w := 0;

				--Verifica se tem regra de tipo de atendimento cadastrado
				if (nr_seq_clinica_w <> 0) then
					select	count(1)
					into STRICT	cont_w
					from	pls_tipo_coparticipacao a,
						pls_coparticipacao_proc b
					where	a.nr_sequencia		= r_regras_copart_w.nr_seq_tipo_coparticipacao
					and (coalesce(b.nr_seq_clinica::text, '') = ''	or nr_seq_clinica	= nr_seq_clinica_w)
					and	a.ie_situacao		= 'A';
				end if;

				for r_copartic_proc_w in c_copartic_proc(	r_proc_req_w.cd_procedimento, r_proc_req_w.ie_origem_proced, cd_grupo_w,
										cd_especialidade_w, cd_area_w, r_regras_copart_w.nr_seq_tipo_coparticipacao) loop
										
					if (r_copartic_proc_w.nr_seq_grupo_servico IS NOT NULL AND r_copartic_proc_w.nr_seq_grupo_servico::text <> '') then
					
						ie_proc_grupo_serv_w	:= pls_se_grupo_preco_servico(r_copartic_proc_w.nr_seq_grupo_servico, r_proc_req_w.cd_procedimento, r_proc_req_w.ie_origem_proced);
						
						if (ie_proc_grupo_serv_w = 'S') then
							ie_liberado_w	:= r_copartic_proc_w.ie_liberado;
						else
							ie_liberado_w	:= 'N';
						end if;
					else
						ie_liberado_w	:= r_copartic_proc_w.ie_liberado;
					end if;
				end loop;

				if (coalesce(ie_liberado_w,'N') = 'S') then
					select	count(1)
					into STRICT	qt_registros_w
					from	pls_req_coparticipacao
					where	nr_seq_req_proc	= r_proc_req_w.nr_sequencia;

					
					if (qt_registros_w = 0) then
						vl_copartic_unit_w	:= ((coalesce(vl_unitario_w,0) * r_regras_copart_w.tx_coparticipacao) / 100);

						-- Caso exista regra de valor fixo para coparticipacao, deve ser considerado este valor.
						if (coalesce(r_regras_copart_w.vl_coparticipacao,0) > 0) then
							vl_coparticipacao_w	:= r_regras_copart_w.vl_coparticipacao;
						elsif (r_regras_copart_w.vl_maximo	> 0) and (vl_copartic_unit_w > r_regras_copart_w.vl_maximo) then
							vl_coparticipacao_w := (r_regras_copart_w.vl_maximo * qt_autorizada_w);
							vl_copartic_unit_w := r_regras_copart_w.vl_maximo;
						else
							vl_coparticipacao_w	:= ((coalesce(vl_liberado_w,0) * r_regras_copart_w.tx_coparticipacao) / 100);
						end if;

						if (coalesce(vl_coparticipacao_w,0) > 0) then
							insert into pls_req_coparticipacao(nr_sequencia, dt_atualizacao, nm_usuario,
								 dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_requisicao,
								 nr_seq_req_proc, vl_coparticipacao, nr_seq_regra_preco,
								 nr_seq_regra_copartic)
							values (nextval('pls_req_coparticipacao_seq'), clock_timestamp(), nm_usuario_p,
								 clock_timestamp(), nm_usuario_p, nr_seq_requisicao_p,
								 r_proc_req_w.nr_sequencia, vl_coparticipacao_w, nr_seq_regra_w,
								 r_regras_copart_w.nr_seq_regra_coparticipacao);
						end if;
					end if;
				end if;
			end if;
		end loop;
	end if;
end loop;

for r_mat_req_w in c_mat_req loop
	ie_liberado_w	:= 'N';
	
	if (r_mat_req_w.qt_material	= 0) then
		qt_autorizada_w	:= r_mat_req_w.qt_solicitado;

	else
		qt_autorizada_w	:= r_mat_req_w.qt_material;
	end if;

	-- Ovter o tipo de despesa e a estrutura do material
	begin
		select	ie_tipo_despesa,
			nr_seq_estrut_mat
		into STRICT	ie_tipo_despesa_w,
			nr_seq_estrut_mat_w
		from	pls_material
		where	nr_sequencia	= r_mat_req_w.nr_seq_material;
	exception
	when others then
		ie_tipo_despesa_w	:= null;
		nr_seq_estrut_mat_w	:= null;
	end;

	-- Valorizar o material com base nas regras da funcao OPS - Regras e Criterios de Preco
	SELECT * FROM pls_define_preco_material(	cd_estabelecimento_p, nr_seq_prestador_w, dt_autorizacao_w, r_mat_req_w.nr_sequencia, 4, ie_tipo_despesa_w, null, ie_calculo_copartic_w, nr_seq_outorgante_w, nr_seq_segurado_w, null, r_mat_req_w.nr_seq_prest_fornec, nr_seq_categoria_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, ie_tipo_guia_w, null, null, 'N', nm_usuario_p, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, vl_material_w, dt_ult_vigencia_w, nr_seq_material_preco_w, vl_material_simpro_w, vl_material_brasindice_w, vl_material_tabela_w, dados_regra_preco_material_w, null, ie_regime_atendimento_w, ie_saude_ocupacional_w) INTO STRICT _ora2pg_r;
 vl_material_w := _ora2pg_r.vl_material_p; dt_ult_vigencia_w := _ora2pg_r.dt_ult_vigencia_p; nr_seq_material_preco_w := _ora2pg_r.nr_seq_material_preco_p; vl_material_simpro_w := _ora2pg_r.vl_material_simpro_p; vl_material_brasindice_w := _ora2pg_r.vl_material_brasindice_p; vl_material_tabela_w := _ora2pg_r.vl_material_tabela_p; dados_regra_preco_material_w := _ora2pg_r.dados_regra_preco_material_p;
					
	nr_seq_regra_w	:= dados_regra_preco_material_w.nr_sequencia;
	vl_liberado_w 	:= (vl_material_w * r_mat_req_w.qt_material);

	select	pls_obter_se_copartic(cd_guia_w, nr_seq_segurado_w, null,null)
	into STRICT	ie_gerar_copartic_w
	;

	if (ie_gerar_copartic_w = 'N') then
		if (ie_tipo_guia_w in ('1','5','6','7','8')) then
			ie_tipo_atend_w	:= 'I';
		elsif (ie_tipo_guia_w in ('2','3','4')) then
			ie_tipo_atend_w	:= 'E';
		end if;

		for r_regras_copart_w in c_regras_copart loop
			if (r_regras_copart_w.ie_tipo_atendimento = ie_tipo_atend_w) or (r_regras_copart_w.ie_tipo_atendimento = 'A') then
				cont_w := 0;

				--Verifica se tem regra de tipo de atendimento cadastrado
				if (nr_seq_clinica_w <> 0) then
					select	count(1)
					into STRICT	cont_w
					from	pls_tipo_coparticipacao a,
						pls_coparticipacao_proc b
					where	a.nr_sequencia		= r_regras_copart_w.nr_seq_tipo_coparticipacao
					and (coalesce(b.nr_seq_clinica::text, '') = ''	or nr_seq_clinica	= nr_seq_clinica_w)
					and	a.ie_situacao		= 'A';
				end if;

				for r_copartic_mat_w in c_copartic_mat(r_mat_req_w.nr_seq_material, ie_tipo_despesa_w, r_regras_copart_w.nr_seq_tipo_coparticipacao) loop
					ie_estrut_mat_w	:= 'S';
					if (r_copartic_mat_w.nr_seq_estrut_mat IS NOT NULL AND r_copartic_mat_w.nr_seq_estrut_mat::text <> '') then
						if (pls_obter_se_mat_estrutura(r_mat_req_w.nr_seq_material, r_copartic_mat_w.nr_seq_estrut_mat) = 'N') then
							ie_estrut_mat_w	:= 'N';
						end if;
					end if;

					if (ie_estrut_mat_w = 'S') then
						ie_liberado_w	:= r_copartic_mat_w.ie_liberado;
					end if;
				end loop;

				if (coalesce(ie_liberado_w,'N') = 'S') then
					select	count(1)
					into STRICT	qt_registros_w
					from	pls_req_coparticipacao
					where	nr_seq_req_mat = r_mat_req_w.nr_sequencia;

					if (qt_registros_w = 0) then
						vl_copartic_unit_w	:= ((coalesce(vl_unitario_w,0) * r_regras_copart_w.tx_coparticipacao) / 100);

						-- Caso exista regra de valor fixo para coparticipacao, deve ser considerado este valor.
						if (coalesce(r_regras_copart_w.vl_coparticipacao,0) > 0) then
							vl_coparticipacao_w	:= r_regras_copart_w.vl_coparticipacao;
						elsif (r_regras_copart_w.vl_maximo	> 0) and (vl_copartic_unit_w	> r_regras_copart_w.vl_maximo) then
							vl_coparticipacao_w	:= (r_regras_copart_w.vl_maximo * r_mat_req_w.qt_material);
							vl_copartic_unit_w	:= r_regras_copart_w.vl_maximo;
						else
							vl_coparticipacao_w	:= ((coalesce(vl_liberado_w,0) * r_regras_copart_w.tx_coparticipacao) / 100);
						end if;
						
						if (coalesce(vl_coparticipacao_w,0) > 0) then
							insert into pls_req_coparticipacao(nr_sequencia, dt_atualizacao, nm_usuario,
								 dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_requisicao,
								 nr_seq_req_mat, vl_coparticipacao, nr_seq_regra_preco,
								 nr_seq_regra_copartic)
							values (nextval('pls_req_coparticipacao_seq'), clock_timestamp(), nm_usuario_p,
								 clock_timestamp(), nm_usuario_p, nr_seq_requisicao_p,
								 r_mat_req_w.nr_sequencia, vl_coparticipacao_w, nr_seq_regra_w,
								 r_regras_copart_w.nr_seq_regra_coparticipacao);
						end if;
					end if;
				end if;
			end if;
		end loop;
	end if;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_estima_copartic_req ( nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

