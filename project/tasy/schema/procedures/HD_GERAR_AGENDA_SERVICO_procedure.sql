-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_agenda_servico (nr_seq_ponto_p bigint) AS $body$
DECLARE

    cd_agenda_p          bigint;
    ds_agenda_w          varchar(2000);
    cd_estabelecimento_w bigint;
    nm_usuario_w         varchar(255) := coalesce(wheb_usuario_pck.get_nm_usuario, 'TASY');
    cd_tipo_agenda_w     bigint := 8;
    ie_existe            bigint;


BEGIN
    SELECT COUNT(*)
      INTO STRICT ie_existe
      FROM hd_ponto_acesso hpa
     WHERE hpa.nr_sequencia = nr_seq_ponto_p
       AND coalesce(hpa.cd_agenda::text, '') = ''
       AND hpa.ie_situacao = 'A';
    IF ie_existe > 0 THEN
        SELECT substr(upper( wheb_mensagem_pck.get_texto(292302) || '-' ||
                            hpa.ds_ponto_acesso || ' - ' || obter_nome_setor(hpa.cd_setor_atendimento) ),
                      1,
                      50),
               hpa.cd_estabelecimento,
               nextval('agenda_seq')
          INTO STRICT ds_agenda_w,
               cd_estabelecimento_w,
               cd_agenda_p
          FROM hd_ponto_acesso hpa
         WHERE hpa.nr_sequencia = nr_seq_ponto_p;

        INSERT INTO agenda(cd_agenda,
             ds_agenda,
             cd_tipo_agenda,
             nm_usuario,
             dt_atualizacao,
             nr_minuto_intervalo,
             ie_situacao,
             cd_estabelecimento,
             qt_dia_historico,
             hr_quebra_turno,
             qt_min_quebra_turno,
             ie_feriado,
             ie_classificacao,
             ie_medico_executor,
             ie_gerar_sobra_horario,
             ie_gerar_solic_pront,
             ie_gerar_solic_pront_gp,
             ie_medico_requisitante,
             ie_agenda_web,
             ie_agenda_integrada)

        VALUES (cd_agenda_p,
             ds_agenda_w,
             cd_tipo_agenda_w,
             nm_usuario_w,
             clock_timestamp(),
             1,
             'A',
             cd_estabelecimento_w,
             30,
             '00',
             '00',
             'S',
             'I',
             'N',
             'N',
             'N',
             'N',
             'N',
             'N',
             'N');

        UPDATE hd_ponto_acesso dpa
           SET dpa.cd_agenda      = cd_agenda_p,
               dpa.dt_atualizacao = clock_timestamp(),
               dpa.nm_usuario     = nm_usuario_w
         WHERE dpa.nr_sequencia = nr_seq_ponto_p;
    END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_agenda_servico (nr_seq_ponto_p bigint) FROM PUBLIC;

