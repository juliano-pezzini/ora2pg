-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_sms_proc_reapraz ( nr_prescricao_p bigint, nr_prescricoes_p text, nm_usuario_p text) AS $body$
DECLARE

 
ds_remetente_w	rep_regra_envio_sms_dest.ds_remetente%type;
nr_celular_w	rep_regra_envio_sms_dest.nr_celular%type;
ds_mensagem_w	rep_regra_envio_sms_dest.ds_mensagem%type;
id_sms_w		bigint;
ds_procedimento_w	 	procedimento.ds_procedimento%TYPE;
nm_paciente_w		varchar(240);
ds_setor_atend_w	varchar(240);
cd_procedimento_w	bigint;
ie_consiste_destinatario_sms	varchar(1);

c01 CURSOR FOR 
SELECT	y.ds_remetente, 
		CASE WHEN ie_consiste_destinatario_sms='S' THEN  y.nr_celular  ELSE obter_nr_cel_int(y.nr_ddi,y.nr_celular) END , 
		y.ds_mensagem, 
		c.ds_procedimento, 
		substr(obter_nome_pf(a.cd_pessoa_fisica),1,240), 
		substr(Obter_Unidade_Atendimento(a.nr_atendimento,'IAA','SU'),1,240), 
		b.cd_procedimento 
from 	rep_regra_envio_sms_dest y, 
		rep_regra_envio_sms x, 
		estrutura_procedimento_v c, 
		prescr_procedimento b, 
		prescr_medica a 
where	a.nr_prescricao 	= b.nr_prescricao 
and		b.cd_procedimento 	= c.cd_procedimento 
and 	b.ie_origem_proced 	= c.ie_origem_proced 
and 	y.nr_seq_regra		= x.nr_sequencia 
and	(nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') 
and	coalesce(nr_prescricoes_p::text, '') = '' 
and 	a.nr_prescricao		= nr_prescricao_p 
and 	a.cd_setor_atendimento	= coalesce(x.cd_setor_atendimento,a.cd_setor_atendimento) 
and 	c.cd_procedimento	= coalesce(x.cd_procedimento,c.cd_procedimento) 
and 	c.ie_origem_proced	= coalesce(x.ie_origem_proced,c.ie_origem_proced) 
and		c.cd_area_procedimento	= coalesce(x.cd_area_procedimento,c.cd_area_procedimento) 
and		c.cd_especialidade	= coalesce(x.cd_especialidade, c.cd_especialidade) 
and		c.cd_grupo_proc		= coalesce(x.cd_grupo_proc, c.cd_grupo_proc) 
and		coalesce(a.ie_funcao_prescritor,'X')	= coalesce(x.ie_tipo_evolucao, coalesce(a.ie_funcao_prescritor,'X')) 

union all
 
SELECT	y.ds_remetente, 
		CASE WHEN ie_consiste_destinatario_sms='S' THEN  y.nr_celular  ELSE obter_nr_cel_int(y.nr_ddi,y.nr_celular) END , 
		y.ds_mensagem, 
		c.ds_procedimento, 
		substr(obter_nome_pf(a.cd_pessoa_fisica),1,240), 
		substr(Obter_Unidade_Atendimento(a.nr_atendimento,'IAA','SU'),1,240), 
		b.cd_procedimento 
from 	rep_regra_envio_sms_dest y, 
		rep_regra_envio_sms x, 
		estrutura_procedimento_v c, 
		prescr_procedimento b, 
		prescr_medica a 
where	a.nr_prescricao 	= b.nr_prescricao 
and		b.cd_procedimento 	= c.cd_procedimento 
and 	b.ie_origem_proced 	= c.ie_origem_proced 
and 	y.nr_seq_regra		= x.nr_sequencia 
and	coalesce(nr_prescricao_p::text, '') = '' 
and	(nr_prescricoes_p IS NOT NULL AND nr_prescricoes_p::text <> '') 
and	obter_se_contido(a.nr_prescricao, '(' || nr_prescricoes_p || ')') = 'S' 
and 	a.cd_setor_atendimento	= coalesce(x.cd_setor_atendimento,a.cd_setor_atendimento) 
and 	c.cd_procedimento	= coalesce(x.cd_procedimento,c.cd_procedimento) 
and 	c.ie_origem_proced	= coalesce(x.ie_origem_proced,c.ie_origem_proced) 
and		c.cd_area_procedimento	= coalesce(x.cd_area_procedimento,c.cd_area_procedimento) 
and		c.cd_especialidade	= coalesce(x.cd_especialidade, c.cd_especialidade) 
and		c.cd_grupo_proc		= coalesce(x.cd_grupo_proc, c.cd_grupo_proc) 
and		coalesce(a.ie_funcao_prescritor,'X')	= coalesce(x.ie_tipo_evolucao, coalesce(a.ie_funcao_prescritor,'X'));

 

BEGIN 
 
ie_consiste_destinatario_sms := OBTER_VALOR_PARAM_USUARIO(0,214,0,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);
 
open C01;
loop 
fetch C01 into 
	ds_remetente_w, 
	nr_celular_w, 
	ds_mensagem_w, 
	ds_procedimento_w, 
	nm_paciente_w, 
	ds_setor_atend_w, 
	cd_procedimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
		ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@PROCEDIMENTO', ds_procedimento_w),1,2000);
		ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@PACIENTE', nm_paciente_w),1,2000);
		ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@SETOR', ds_setor_atend_w),1,2000);
		ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@CD_PROCEDIMENTO', cd_procedimento_w),1,2000);
		id_sms_w := wheb_sms.enviar_sms( ds_remetente_w, nr_celular_w, ds_mensagem_w, nm_usuario_p, id_sms_w);
	end;
end loop;
close C01;
 
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_sms_proc_reapraz ( nr_prescricao_p bigint, nr_prescricoes_p text, nm_usuario_p text) FROM PUBLIC;

