-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_grupo_aud_recurso (nr_seq_recurso_conta_p pls_rec_glosa_conta.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type ) AS $body$
DECLARE


qt_auditoria_w			integer := 0;
qt_tipo_despesa_w		integer := 0;

-- Cursor das glosas da conta de recurso
C01 CURSOR(nr_seq_recurso_conta_pc	pls_rec_glosa_conta.nr_sequencia%type) FOR
	SELECT	a.nr_seq_motivo_glosa,
		null ie_tipo_despesa,
		'C' ie_tipo_glosa
	from	pls_rec_glosa_glosas a
	where	a.nr_seq_conta_rec = nr_seq_recurso_conta_pc
	and	coalesce(a.nr_seq_proc_rec::text, '') = ''
	and	coalesce(a.nr_seq_mat_rec::text, '') = ''
	
union all

	SELECT	a.nr_seq_motivo_glosa,
		c.ie_tipo_despesa,
		'P' ie_tipo_glosa
	from	pls_rec_glosa_glosas a,
		pls_rec_glosa_proc b,
		pls_conta_proc c
	where	a.nr_seq_proc_rec = b.nr_sequencia
	and	b.nr_seq_conta_proc = c.nr_sequencia
	and	b.nr_seq_conta_rec = nr_seq_recurso_conta_pc
	
union all

	select	a.nr_seq_motivo_glosa,
		c.ie_tipo_despesa,
		'M' ie_tipo_glosa
	from	pls_rec_glosa_glosas a,
		pls_rec_glosa_mat b,
		pls_conta_mat c
	where	a.nr_seq_mat_rec = b.nr_sequencia
	and	b.nr_seq_conta_mat = c.nr_sequencia
	and	b.nr_seq_conta_rec = nr_seq_recurso_conta_pc;
-- Cursor das glosas de fluxo de análise
C02 CURSOR(nr_seq_motivo_glosa_pc		tiss_motivo_glosa.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_glosa_fluxo,
		0 qt_excecao  -- Colocado quantidade 0 pois caso tenha glosa informada na regra a exceção não será válida
	from	pls_glosa_flux_analise_rec a
	where	nr_seq_motivo_glosa = nr_seq_motivo_glosa_pc
	
union all

	SELECT	a.nr_sequencia nr_seq_glosa_fluxo,
		(select	count(1)
		 from	pls_glosa_flux_analise_exc x
		 where	x.nr_seq_glosa_flux_rec = a.nr_sequencia
		 and (coalesce(nr_seq_motivo_glosa::text, '') = '' or nr_seq_motivo_glosa = nr_seq_motivo_glosa_pc)) qt_excecao
	from	pls_glosa_flux_analise_rec a
	where	coalesce(nr_seq_motivo_glosa::text, '') = '';
-- Cursor dos grupos de auditoria do fluxo de análise
C03 CURSOR(nr_seq_glosa_flux_rec_pc	pls_glosa_flux_analise_rec.nr_sequencia%type) FOR
	SELECT	a.nr_seq_grupo,
		a.nr_seq_fluxo,
		a.nr_sequencia nr_seq_fluxo_rec
	from	pls_fluxo_analise_rec a
	where	a.nr_seq_glosa_flux_rec = nr_seq_glosa_flux_rec_pc
	order by
		a.nr_seq_fluxo;
-- Cursor dos tipos de despesa de fluxo de análise
C04 CURSOR(nr_seq_fluxo_analise_rec_pc		pls_fluxo_analise_rec.nr_sequencia%type) FOR
	SELECT	'P' ie_tipo_item,
		ie_tipo_despesa_proc ie_tipo_despesa
	from	pls_fluxo_analise_rec_desp
	where	nr_seq_fluxo_analise_rec = nr_seq_fluxo_analise_rec_pc
	and	(ie_tipo_despesa_proc IS NOT NULL AND ie_tipo_despesa_proc::text <> '')
	
union all

	SELECT	'M' ie_tipo_item,
		ie_tipo_despesa_mat ie_tipo_despesa
	from	pls_fluxo_analise_rec_desp
	where	nr_seq_fluxo_analise_rec = nr_seq_fluxo_analise_rec_pc
	and	(ie_tipo_despesa_mat IS NOT NULL AND ie_tipo_despesa_mat::text <> '');
BEGIN
-- Abre cursor de glosas
for r_C01_w in C01(nr_seq_recurso_conta_p) loop
	-- Abre cursor de glosas de fluxo de analise cadastradas
	for r_C02_w in C02(r_C01_w.nr_seq_motivo_glosa) loop
		-- Caso não possua possua exceção válida, prossegue
		if (r_C02_w.qt_excecao = 0) then
			-- Abre cursor dos grupos de auditoria
			for r_C03_w in C03(r_C02_w.nr_seq_glosa_fluxo) loop
				-- Caso a glosa seja da conta não há necessidade de verificar o tipo de despesa
				if (r_C01_w.ie_tipo_glosa = 'C') then
					select	count(1)
					into STRICT	qt_auditoria_w
					from	pls_auditoria_conta_grupo
					where	nr_seq_analise	= nr_seq_analise_p
					and	nr_seq_grupo	= r_C03_w.nr_seq_grupo;
					-- Caso o grupo já não esteja nessa análise, adiciona
					if (qt_auditoria_w = 0) then
						insert into pls_auditoria_conta_grupo(nr_sequencia,
							nr_seq_analise,
							nr_seq_grupo,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_ordem,
							ds_conta,
							ie_pre_analise)
						values (nextval('pls_auditoria_conta_grupo_seq'),
							nr_seq_analise_p,
							r_C03_w.nr_seq_grupo,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							r_C03_w.nr_seq_fluxo,
							'',
							'N');
					end if;
				else
					-- Verifica caso exista algum registro de tipo de despesa cadastrado
					select	count(1)
					into STRICT	qt_tipo_despesa_w
					from	pls_fluxo_analise_rec_desp
					where	nr_seq_fluxo_analise_rec = r_C03_w.nr_seq_fluxo_rec;

					if (qt_tipo_despesa_w > 0) then
						-- Caso a glosa não seja de conta, abre o cursor dos tipos de despesa
						for r_C04_w in C04(r_C03_w.nr_seq_fluxo_rec) loop
							-- Caso o tipo de despesa e o tipo de item sejam iguais aos do item glosado adiciona grupo auditor
							if (r_C04_w.ie_tipo_despesa = r_C01_w.ie_tipo_despesa) and (r_C04_w.ie_tipo_item = r_C01_w.ie_tipo_glosa) then
								select	count(1)
								into STRICT	qt_auditoria_w
								from	pls_auditoria_conta_grupo
								where	nr_seq_analise	= nr_seq_analise_p
								and	nr_seq_grupo	= r_C03_w.nr_seq_grupo;
								-- Caso o grupo já não esteja nessa análise, adiciona
								if (qt_auditoria_w = 0) then
									insert into pls_auditoria_conta_grupo(nr_sequencia,
										nr_seq_analise,
										nr_seq_grupo,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										nr_seq_ordem,
										ds_conta,
										ie_pre_analise)
									values (nextval('pls_auditoria_conta_grupo_seq'),
										nr_seq_analise_p,
										r_C03_w.nr_seq_grupo,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										r_C03_w.nr_seq_fluxo,
										'',
										'N');
								end if;
							end if;
						end loop;
					else
						-- Caso não tenha tipo de despesa cadastrado, insere o grupo
						select	count(1)
						into STRICT	qt_auditoria_w
						from	pls_auditoria_conta_grupo
						where	nr_seq_analise	= nr_seq_analise_p
						and	nr_seq_grupo	= r_C03_w.nr_seq_grupo;
						-- Caso o grupo já não esteja nessa análise, adiciona
						if (qt_auditoria_w = 0) then
							insert into pls_auditoria_conta_grupo(nr_sequencia,
								nr_seq_analise,
								nr_seq_grupo,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_ordem,
								ds_conta,
								ie_pre_analise)
							values (nextval('pls_auditoria_conta_grupo_seq'),
								nr_seq_analise_p,
								r_C03_w.nr_seq_grupo,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								r_C03_w.nr_seq_fluxo,
								'',
								'N');
						end if;
					end if;
				end if;
			end loop;
		end if;
	end loop;
end loop;
-- Atualiza o grupo principal na análise
CALL pls_atualizar_grupo_penden(nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_grupo_aud_recurso (nr_seq_recurso_conta_p pls_rec_glosa_conta.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type ) FROM PUBLIC;

