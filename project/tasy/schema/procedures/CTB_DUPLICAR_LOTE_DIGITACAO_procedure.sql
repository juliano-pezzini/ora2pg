-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_duplicar_lote_digitacao ( nr_seq_mes_ref_p bigint, nr_lote_contabil_p bigint, dt_lancamento_p timestamp, nm_usuario_p text, ds_erro_p INOUT text, ds_compl_historico_p text) AS $body$
DECLARE


cd_tipo_lote_w			bigint;
dt_referencia_w			timestamp;
dt_lancamento_w			timestamp;
nr_lote_contabil_w			bigint;
ie_digitacao_w			integer;
vl_movimento_w			double precision;
cd_historico_w			bigint;
cd_conta_debito_w			varchar(40);
cd_conta_credito_w		varchar(40);
ds_compl_historico_w		varchar(255);
nr_seq_movto_w			bigint;
nr_seq_movimento_w		bigint;
nr_seq_mes_ref_w			bigint;
cd_classif_debito_w		varchar(40);
cd_classif_credito_w		varchar(40);
cd_estabelecimento_w 	ctb_movimento.cd_estabelecimento%type;
nr_seq_agrupamento_w	ctb_movimento.nr_seq_agrupamento%type;
nr_documento_w			ctb_movimento.nr_documento%type;
ie_origem_documento_w	ctb_movimento.ie_origem_documento%type;
nr_seq_mutacao_pl_w		ctb_movimento.nr_seq_mutacao_pl%type;
ds_observacao_w			ctb_movimento.ds_observacao%type;

c01 CURSOR FOR
SELECT	nr_sequencia,
	vl_movimento,
	cd_historico,
	cd_conta_debito,
	cd_conta_credito,
	coalesce(ds_compl_historico_p,ds_compl_historico),
	cd_classif_debito,
	cd_classif_credito,
	cd_estabelecimento,
	nr_seq_agrupamento,
	nr_documento,
	ie_origem_documento,
	nr_seq_mutacao_pl,
	ds_observacao
from	ctb_movimento
where	nr_lote_contabil	= nr_lote_contabil_p
and	nr_seq_mes_ref	= nr_seq_mes_ref_w;


BEGIN

select	(coalesce(min(coalesce(vl_parametro,vl_parametro_padrao)),0))::numeric
into STRICT	cd_tipo_lote_w
from	funcao_parametro
where	cd_funcao = 923
and	nr_sequencia = 3;

select	count(*)
into STRICT	ie_digitacao_w
from	lote_contabil
where	nr_lote_contabil		= nr_lote_contabil_p
and	cd_tipo_lote_contabil	= cd_tipo_lote_w;

if (ie_digitacao_w > 0) then
	begin
	dt_lancamento_w	:= trunc(dt_lancamento_p,'mm');

	select	trunc(dt_referencia,'mm')
	into STRICT	dt_referencia_w
	from	ctb_mes_ref
	where	nr_sequencia	= nr_seq_mes_ref_p;

	if (dt_lancamento_w = dt_referencia_w) then
		begin

		select	coalesce(max(nr_lote_contabil),0) + 1
		into STRICT	nr_lote_contabil_w
		from	lote_contabil;

		insert into lote_contabil(
			nr_lote_contabil,
			dt_referencia,
			cd_tipo_lote_contabil,
			dt_atualizacao,
			nm_usuario,
			cd_estabelecimento,
			ie_situacao,
			vl_debito,
			vl_credito,
			dt_integracao,
			dt_atualizacao_saldo,
			dt_consistencia,
			nm_usuario_original,
			nr_seq_mes_ref,
			ie_encerramento,
			ds_observacao)
		SELECT	nr_lote_contabil_w,
			dt_lancamento_p,
			cd_tipo_lote_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_estabelecimento,
			'A',
			0,
			0,
			null,
			null,
			null,
			nm_usuario_p,
			nr_seq_mes_ref_p,
			'N',
			substr(WHEB_MENSAGEM_PCK.get_texto(281261) || ds_observacao,1,2000)
		from	lote_contabil
		where	nr_lote_contabil	= nr_lote_contabil_p;

		select	nr_seq_mes_ref
		into STRICT	nr_seq_mes_ref_w
		from	lote_contabil
		where	nr_lote_contabil	= nr_lote_contabil_p;

		open c01;
		loop
   		fetch c01 into
			nr_seq_movimento_w,
			vl_movimento_w,
            cd_historico_w,
			cd_conta_debito_w,
			cd_conta_credito_w,
			ds_compl_historico_w,
			cd_classif_debito_w,
			cd_classif_credito_w,
			cd_estabelecimento_w,
			nr_seq_agrupamento_w,
			nr_documento_w,
			ie_origem_documento_w,
			nr_seq_mutacao_pl_w,
			ds_observacao_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			select	nextval('ctb_movimento_seq')
			into STRICT	nr_seq_movto_w
			;

			insert into ctb_movimento(
				nr_sequencia,
				nr_lote_contabil,
				nr_seq_mes_ref,
				dt_movimento,
				vl_movimento,
				dt_atualizacao,
				nm_usuario,
				cd_historico,
				cd_conta_debito,
				cd_conta_credito,
				ds_compl_historico,
				ie_revisado,
				cd_classif_debito,
				cd_classif_credito,
				cd_estabelecimento,
				nr_seq_agrupamento,
				nr_documento,
				ie_origem_documento,
				nr_seq_mutacao_pl,
				ds_observacao)
			values (nr_seq_movto_w,
				nr_lote_contabil_w,
				nr_seq_mes_ref_p,
				dt_lancamento_p,
				vl_movimento_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_historico_w,
				cd_conta_debito_w,
				cd_conta_credito_w,
				ds_compl_historico_w,
				'N',
				cd_classif_debito_w,
				cd_classif_credito_w,
				cd_estabelecimento_w,
				nr_seq_agrupamento_w,
				nr_documento_w,
				ie_origem_documento_w,
				nr_seq_mutacao_pl_w,
                ds_observacao_w	);
			insert into ctb_movto_centro_custo(
				nr_sequencia,
				nr_seq_movimento,
				cd_centro_custo,
				dt_atualizacao,
				nm_usuario,
				vl_movimento,
				pr_rateio)
			SELECT	nextval('ctb_movto_centro_custo_seq'),
				nr_seq_movto_w,
				cd_centro_custo,
				clock_timestamp(),
				nm_usuario_p,
				vl_movimento,
				pr_rateio
			from	ctb_movto_centro_custo
			where	nr_seq_movimento	= nr_seq_movimento_w;

			end;
		end loop;
		close c01;
		end;
	else
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281248);
	end if;
	end;
else
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281256);
end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_duplicar_lote_digitacao ( nr_seq_mes_ref_p bigint, nr_lote_contabil_p bigint, dt_lancamento_p timestamp, nm_usuario_p text, ds_erro_p INOUT text, ds_compl_historico_p text) FROM PUBLIC;

