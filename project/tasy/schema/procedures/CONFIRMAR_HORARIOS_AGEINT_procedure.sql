-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE confirmar_horarios_ageint ( cd_agenda_p bigint, dt_agenda_p timestamp, nr_seq_ageint_p bigint, ie_marc_no_show_p text, ie_reserva_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

		
ind				integer	:= 1;
ds_horario_w			varchar(255);
ds_sql_w			varchar(4000);
ds_sep_bv_w			varchar(50);
ds_parametros_w			varchar(4000);
cd_tipo_agenda_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nm_contato_w			varchar(80);
nr_telefone_w			varchar(60);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_plano_w			varchar(10);
nr_doc_convenio_w		varchar(20);
cd_usuario_convenio_w		varchar(30);
dt_validade_carteira_w		timestamp;
nr_seq_agenda_w			bigint;
cd_agenda_w			bigint;
nr_sequencia_w			bigint;
nr_status_agendado_w		bigint;	
nr_seq_ageint_item_w		bigint;
nr_seq_ageint_item_transf_w	agenda_integrada_item.nr_seq_ageint_item_transf%type;
cd_medico_w			varchar(10);
nr_seq_proc_interno_w		bigint;
cd_estabelecimento_w		smallint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_minuto_duracao_w		bigint;
ie_encaixe_w			varchar(1);
hr_agenda_w			timestamp;
nr_seq_encaixe_w		bigint;
cd_medico_marcacao_w		varchar(10);
nr_seq_proc_int_assoc_w		bigint;
cd_proc_assoc_w			bigint;
ie_origem_proc_assoc_w		bigint;
nr_seq_proc_adic_w		bigint	:= 0;
ie_classif_agenda_w		varchar(5);
ds_observacao_w			varchar(2000);
nr_seq_exame_adic_w		bigint;
cd_proc_adic_w			bigint;
ie_origem_proc_adic_w		bigint;
nm_paciente_w			varchar(60);
qt_peso_w			double precision;
qt_altura_cm_w			real;
dt_nascimento_w			timestamp;
ie_exige_check_list_w		varchar(1);
ie_exige_avaliacao_w		varchar(1);
nr_seq_tipo_aval_w		bigint;
qt_dias_confirm_aut_w		bigint;
dt_entrega_prevista_w		timestamp;
nr_seq_classif_int_w		bigint;
cd_convenio_ageint_w		integer;
cd_categoria_ageint_w		varchar(10);
cd_plano_ageint_w		varchar(10);
cd_conv_item_w			integer;
cd_categ_item_w			varchar(10);
cd_plano_item_w			varchar(10);
ie_tipo_atendimento_w		smallint;
cd_medico_req_w			varchar(10);
cd_beneficiario_w		bigint;
qt_pls_w			bigint;
nr_seq_proposta_w		bigint;
cd_medico_pls_w			varchar(10);
nr_seq_perito_w			bigint;
qt_medico_w			smallint;
nr_seq_analise_w		bigint;
cd_estab_agenda_w		smallint;
nr_doc_convenio_item_w		varchar(20);
dt_validade_carteira_item_w	timestamp;
cd_usuario_convenio_item_w	varchar(30);
ie_anestesia_w			varchar(1);
cd_anestesista_w		varchar(10);
nr_seq_sala_w			bigint;
nr_seq_transporte_w		bigint;
cd_profissional_w		varchar(10);
nm_usuario_confirm_encaixe_w 	varchar(15);
dt_confirm_encaixe_w		timestamp;
nr_seq_tipo_classif_pac_w	bigint;
nm_medico_externo_w		varchar(60);
crm_medico_externo_w		varchar(60);
nm_medico_externo_item_w	varchar(60);
crm_medico_externo_item_w	varchar(60);
qt_diaria_prev_w		smallint;
ie_forma_agendamento_w		smallint;
nr_seq_motivo_agendamento_w	bigint;
ie_tipo_guia_w			varchar(2);

dt_confirmacao_w		timestamp;
nm_usuario_confirm_w		varchar(15);
ie_confirmacao_aut_w		varchar(1);
cd_empresa_w			bigint;
nr_reserva_exame_w		varchar(20);
nr_reserva_serv_w		varchar(20);
ie_modo_gerar_reserva_w		varchar(1);
ie_gerar_adicionais_w		varchar(1);
ie_gerar_controle_sessao_w	varchar(1);
ie_consistir_marc_itens_w	varchar(1);
qt_idade_w			smallint;
ie_lado_w			varchar(1);
ie_lado_adic_w			varchar(1);
ds_obs_item_w			varchar(255);	
ie_autor_agenda_exame_w		varchar(3);
ie_gerar_sala_agenda_int	varchar(1);

nr_seq_proc_int_item_adic_w	bigint;
cd_proc_item_adic_w		bigint;
ie_origem_proc_item_adic_w	bigint;

dt_agenda_w			timestamp;
ie_classif_agenda_encaixe_w	varchar(5);

qt_marcacoes_w			bigint;
qt_itens_w			bigint;
cd_doenca_cid_w			varchar(10);

dt_prevista_item_w		timestamp;
nr_seq_motivo_anestesia_w	bigint;

ds_obs_agenda_w			varchar(4000);
cd_setor_exame_lab_w		integer;
ds_erro_w			varchar(255);
nr_seq_proc_interno_aux_w	bigint;
nr_seq_exame_lab_w		bigint;
ie_tipo_convenio_w		smallint;
cd_procedencia_w		bigint;
cd_tipo_acomodacao_w	smallint;
nr_seq_motivo_anest_w		bigint;
--ie_cons_se_bloq_check_list_w		varchar2(1);
qt_check_list_bloqueio_w	bigint;
nr_glosa_part_w			bigint;
ie_bloq_glosa_part_w		varchar(1);
qt_item_bloq_w			bigint;
ie_regra_geracao_setor_agend_w	varchar(1);
cd_setor_atendimento_w		integer;
nr_seq_lista_w			bigint;
ie_possui_proc_lista_w		varchar(1);
ds_cirurgia_w			varchar(500);
cd_procedimento_int_w		bigint;
ie_origem_proced_item_w 	bigint;
dt_resultado_w			timestamp;
dt_entrega_w			timestamp;
cd_setor_exclusivo_w		integer;
ie_forma_cons_checklist_w	varchar(1);
ie_carater_cirurgia_w		agenda_integrada_item.ie_carater_cirurgia%type;
qt_agendamento_w		integer;
nr_controle_sus_w			varchar(10);
cd_regulacao_sus_w		 varchar(30);
cd_chave_regulacao_sus_w 		varchar(30);
ds_senha_w			varchar(30);
nr_seq_partic_ciclo_item_w	mprev_partic_ciclo_item.nr_sequencia%type;
nr_seq_captacao_w		mprev_captacao.nr_sequencia%type;
qt_tipo_guia_w			bigint;
qt_procedimentos_w smallint;

nr_seq_partic_item_ageint_w	agenda_integrada.nr_seq_partic_ciclo_item%type;
nr_seq_captacao_ageint_w	agenda_integrada.nr_seq_captacao%type;

nr_seq_opm_w 			bigint;
nr_prescricao_w		agenda_integrada_item.nr_prescricao%type;
qt_agend_cons_conv_w 	 	bigint 	:= 0;
qt_perm_regra_w			bigint	:= 0;
ds_mensagem_w			varchar(255)	:= '';
ie_permite_classif_w			varchar(1) := 'S';
ie_consiste_classif_lib_w		varchar(1);
nr_seq_segurado_w		agenda_integrada.nr_seq_segurado%type;
ie_agend_serv_cons_w			varchar(1) := 'N';
ie_agendamento_coletivo_w	varchar(1):= 'N';
hr_inicio_w			timestamp;
nr_minuto_duracao_age_exame_w	bigint;
ie_utiliza_prof_horario_w		agenda.ie_utiliza_prof_horario%type;
ie_utiliza_medico_marcacao_w	varchar(1);
ie_valida_glosa_estab_item_w    varchar(1);

NR_SEQ_CIRURGIA_W bigint;

nr_atendimento_w	prescr_medica.nr_atendimento%type;
ie_gestao_exame_w	AGENDA_INTEGRADA_ITEM.ie_gestao_exame%type;
ie_vincula_atendimento_w	varchar(1);
nr_seq_lista_espera_w		agenda_integrada_item.nr_seq_lista_espera%type;
ie_executa_evento_w			varchar(1);
ie_tipo_agenda_w			status_evento_agenda.ie_agenda%type;
ie_inserir_especialidade_w	varchar(1);
cd_especialidade_ageint_w		agenda_integrada_item.cd_especialidade%type;

ie_origem_agendamento_w		agenda_integrada_item.ie_origem_agendamento%type;

NR_SEQ_LISTA_ESPERA_ORIGEM_W	agenda_integrada_item.NR_SEQ_LISTA_ESPERA_ORIGEM%type;
CNPJ_SOLICITANTE_w		  agenda_integrada.CNPJ_SOLICITANTE%type;
ds_razao_social_w				      pessoa_juridica.ds_razao_social%type;
nr_sequencia_agen_list_esp_w  	AGENDA_LISTA_ESPERA.nr_sequencia%type;
CNPJ_LOCAL_AGENDA_EXTERNO_w		AGENDA_LISTA_ESPERA.CNPJ_LOCAL_AGENDA_EXTERNO%type;
DS_LOCAL_AGENDA_EXTERNO_w		AGENDA_LISTA_ESPERA.DS_LOCAL_AGENDA_EXTERNO%type;
nr_seq_person_name_w            agenda_integrada.nr_seq_person_name%type;
NR_SEQ_SOLIC_COMPL_w            agenda_integrada_item.nr_seq_solic_compl%type;
nr_seq_topografia_w		agenda_integrada_item.nr_seq_topografia%type;
nr_seq_topografia_adic_w	ageint_exame_adic_item.nr_seq_topografia%type;
ie_cop_classif_agendamento_w	agenda_paciente_classif.ie_copiar_classif_agendamento%type;
nr_seq_classif_agenda_w		agenda_integrada_item.nr_seq_classif_agenda%type;
ie_agendamento_wsuite_w		agenda_integrada.ie_agendamento_wsuite%type;
ie_gerar_evolucao_schedule_w     varchar(1);
cd_evolucao_w                   bigint;
vl_coparticipacao_w		agenda_integrada_item.vl_coparticipacao%type;
vl_coparticipacao_adic_w	ageint_exame_adic_item.vl_coparticipacao%type;
nr_seq_pac_aux_w		agenda_paciente_auxiliar.nr_sequencia%type;
cd_pessoa_indicacao_w       	agenda_integrada.cd_pessoa_indicacao%type;

cd_pessoa_fisica_medico_w medico.cd_pessoa_fisica%type;
cd_perfil_wsuite_w WSUITE_CONFIG_AGENDAMENTO.cd_perfil%type;

C01 CURSOR FOR
	SELECT	nr_seq_agenda,
		cd_agenda,
		nr_sequencia,
		nr_seq_ageint_item,
		(SELECT nr_seq_ageint_item_transf from agenda_integrada_item where nr_sequencia = nr_seq_ageint_item),
		nr_minuto_duracao,
		coalesce(ie_encaixe, 'N'),
		hr_agenda,
		cd_pessoa_fisica,
		nm_usuario_confirm_encaixe,
		dt_confirm_encaixe,
		ageint_obter_lista_espera_reab(nr_seq_ageint_item),
			(select	max(x.nr_seq_lista_espera)
			from	agenda_integrada_item x
			where	x.nr_sequencia = nr_seq_ageint_item) nr_seq_lista_espera
	from	ageint_marcacao_usuario
	where	nm_usuario		= nm_usuario_p	
	and	nr_seq_ageint		= nr_seq_ageint_p
	and	coalesce(ie_gerado,'N')	= 'N'
	and	coalesce(ie_horario_auxiliar,'N') = 'N';

C02 CURSOR FOR
	SELECT	cd_agenda
	from	ageint_lib_usuario
	where	nm_usuario	= nm_usuario_p
	and	nr_Seq_ageint	= nr_seq_ageint_p;
	
C03 CURSOR FOR
	SELECT	nr_Seq_proc_interno
	from	ageint_exame_associado
	where	nr_seq_ageint_item	= nr_seq_ageint_item_w
	order by 1;

C04 CURSOR FOR
	SELECT	nr_seq_proc_interno,
		ie_lado,
		ds_cirurgia,
		nr_seq_topografia,
		vl_coparticipacao
	from	ageint_exame_adic_item
	where	nr_seq_item	= nr_seq_ageint_item_w;
	
C05 CURSOR FOR
	SELECT	cd_pessoa_fisica
	from	agenda_integrada
	where	nr_sequencia	= nr_seq_ageint_p;
	
C06 CURSOR FOR
	SELECT	nr_Seq_proc_interno
	from	ageint_itens_adicionais
	where	nr_seq_ageint_item	= nr_seq_ageint_item_w
	and	(nr_Seq_proc_interno IS NOT NULL AND nr_Seq_proc_interno::text <> '')
	and	coalesce(nr_seq_regra_lanc::text, '') = ''
	and	coalesce(ie_glosa,'X') <> 'T'
	order by 1;
	
procedure remover_marcacao_multitransf is
	
  item RECORD;

BEGIN
	if (nr_seq_ageint_item_transf_w IS NOT NULL AND nr_seq_ageint_item_transf_w::text <> '') then
		CALL remover_marcacao_item(nm_usuario_p, cd_estabelecimento_p, nr_seq_ageint_item_transf_w);
	end if;
	
	for item in (SELECT nr_sequencia from agenda_integrada_item where nr_seq_ageint_item_transf = nr_seq_ageint_item_w) loop
		CALL remover_marcacao_item(nm_usuario_p, cd_estabelecimento_p, item.nr_sequencia);
	end loop;
	end;
	
begin

select	coalesce(max(ie_agendamento_wsuite),'N')
into STRICT 	ie_agendamento_wsuite_w
from	agenda_integrada
where	nr_sequencia	= nr_seq_Ageint_p;

if (ie_agendamento_wsuite_w = 'S') then
	select 	max(CD_PERFIL)
	into STRICT	cd_perfil_wsuite_w
	from	WSUITE_CONFIG_AGENDAMENTO
	where	coalesce(cd_estabelecimento,cd_estabelecimento_p) = (cd_estabelecimento_p);
	
	CALL wheb_usuario_pck.set_nm_usuario(nm_usuario_p);
	CALL wheb_usuario_pck.set_cd_perfil(cd_perfil_wsuite_w);
	CALL wheb_usuario_pck.set_cd_funcao(869);
	CALL wheb_usuario_pck.set_cd_estabelecimento(cd_estabelecimento_p);
end if;

nr_glosa_part_w	:= 99;

ie_bloq_glosa_part_w := obter_param_usuario(869, 187, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_bloq_glosa_part_w);
ie_agendamento_coletivo_w := obter_param_usuario(869, 410, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_agendamento_coletivo_w);
ie_vincula_atendimento_w := obter_param_usuario(869, 423, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_vincula_atendimento_w);
ie_inserir_especialidade_w := obter_param_usuario(869, 445, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_inserir_especialidade_w);
ie_gerar_evolucao_schedule_w := obter_param_usuario(281, 1646, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_evolucao_schedule_w);

If (Ie_Agendamento_Coletivo_W = 'S') Then
	CALL valida_itens_agend_coletivo(nr_seq_ageint_p);
end if;

if (ie_bloq_glosa_part_w = 'N') then
	nr_glosa_part_w := 8;
end if;
			
select	coalesce(max(obter_valor_param_usuario(869, 14, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), '0'),
		coalesce(max(obter_valor_param_usuario(869, 77, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), '0'),
		max(obter_valor_param_usuario(869, 102, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)),
		coalesce(max(obter_valor_param_usuario(869, 160, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'S'),
		coalesce(max(obter_valor_param_usuario(869, 203, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'),
		--nvl(max(obter_valor_param_usuario(869, 299, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'), PARaMETRO INATIVADO
		coalesce(max(obter_valor_param_usuario(820, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'U'),
		coalesce(max(obter_valor_param_usuario(869, 75, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'L'),
		coalesce(max(obter_valor_param_usuario(869, 401, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'),
		coalesce(max(obter_valor_param_usuario(869, 403, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'),
		coalesce(max(obter_valor_param_usuario(869, 415, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N'),
		coalesce(max(obter_valor_param_usuario(869, 437, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N')
into STRICT	nr_seq_tipo_aval_w,
		qt_dias_confirm_aut_w,
		ie_modo_gerar_reserva_w,
		ie_gerar_adicionais_w,
		ie_consistir_marc_itens_w,
		--ie_cons_se_bloq_check_list_w,
		ie_regra_geracao_setor_agend_w,
		ie_forma_cons_checklist_w,
		ie_gerar_controle_sessao_w,
		ie_consiste_classif_lib_w,
		ie_utiliza_medico_marcacao_w,
		ie_valida_glosa_estab_item_w
;

select	cd_pessoa_fisica,
	nm_contato,
	nr_telefone,
	cd_convenio,
	cd_Categoria,
	cd_plano,
	nr_doc_convenio,
	cd_usuario_convenio,
	dt_validade_carteira,
	cd_estabelecimento,
	ds_observacao,
	nm_paciente,
	qt_peso,
	qt_altura_cm,
	dt_nascimento,
	ie_tipo_atendimento,
	cd_empresa,
	nr_seq_tipo_classif_pac,
	nm_medico_externo,      
	crm_medico_externo,
	cd_procedencia,
	nr_controle_sus,
	cd_regulacao_sus,
	cd_chave_regulacao_sus,
	nr_seq_opm,
	nr_seq_segurado,
	nr_seq_partic_ciclo_item,
	nr_seq_captacao,
	cd_tipo_acomodacao,
	CNPJ_SOLICITANTE,
	nr_seq_person_name,
	cd_pessoa_indicacao,
	coalesce(ie_agendamento_wsuite,'N')
into STRICT	cd_pessoa_fisica_w,
	nm_contato_w,
	nr_telefone_w,
	cd_convenio_ageint_w,
	cd_Categoria_ageint_w,
	cd_plano_ageint_w,
	nr_doc_convenio_w,
	cd_usuario_convenio_w,
	dt_validade_carteira_w,
	cd_estabelecimento_w,
	ds_observacao_w,
	nm_paciente_w,
	qt_peso_w,
	qt_altura_cm_w,
	dt_nascimento_w,
	ie_tipo_atendimento_w,
	cd_empresa_w,
	nr_seq_tipo_classif_pac_w,
	nm_medico_externo_w,      
	crm_medico_externo_w,
	cd_procedencia_w,
	nr_controle_sus_w,
	cd_regulacao_sus_w,
	cd_chave_regulacao_sus_w,
	nr_seq_opm_w,
	nr_seq_segurado_w,
	nr_seq_partic_item_ageint_w,
	nr_seq_captacao_ageint_w,
	cd_tipo_acomodacao_w,
	CNPJ_SOLICITANTE_w,
	nr_seq_person_name_w,
	cd_pessoa_indicacao_w,
	ie_agendamento_wsuite_w
from	agenda_integrada
where	nr_sequencia	= nr_seq_Ageint_p;

qt_idade_w	:= obter_idade(dt_nascimento_w, clock_timestamp(), 'A');

cd_convenio_w	:= cd_convenio_ageint_w;
cd_categoria_w	:= cd_categoria_ageint_w;
cd_plano_w	:= cd_plano_ageint_w;

select  coalesce(max(ie_origem_agendamento),'XX')
into STRICT    ie_origem_agendamento_w
from	agenda_integrada_item
where	nr_seq_agenda_int = nr_seq_ageint_p;


if (ie_consistir_marc_itens_w = 'S') and (ie_origem_agendamento_w not in ('MS','CP','WS')) then
	select 	sum(qt)
	into STRICT	qt_marcacoes_w from (
			SELECT	count(*) qt
	from	ageint_marcacao_usuario
	where	nm_usuario		= nm_usuario_p
	and		nr_seq_ageint		= nr_seq_ageint_p
	and		coalesce(ie_gerado,'N')	= 'N'
	and		coalesce(ie_horario_auxiliar,'N') = 'N'
	
union all

			SELECT	count(*) qt
	from	agenda_quimio_marcacao a,
			agenda_integrada_item b,
			agenda_integrada c
	where	a.nr_seq_ageint_item	= b.nr_sequencia
	and		b.nr_seq_agenda_int	= nr_Seq_Ageint_p
	and		b.nr_seq_Agenda_int	= c.nr_sequencia
	and		a.ie_gerado		= 'N') alias8;

	select 	sum(qt)
	into STRICT	qt_itens_w from (
			SELECT	count(*) qt
	from	agenda_integrada_item a,
        	paciente_atendimento b
	where	a.nr_seq_agenda_int = nr_Seq_Ageint_p
    and a.nr_seq_pend_quimio = b.nr_seq_pend_agenda
	and (ie_valida_glosa_estab_item_w = 'S'
	or (coalesce(a.ie_regra, 0) not in (1, 2 ,5, 8) 
	and coalesce(a.ie_glosa,'X') <> 'T'))
	and	coalesce(a.nr_seq_agenda_exame::text, '') = ''
	and	coalesce(a.nr_seq_agenda_cons::text, '') = ''
	and	coalesce(a.nr_seq_agequi::text, '') = ''
	and coalesce(b.dt_cancelamento::text, '') = ''
	
union all

			SELECT	count(*) qt
	from	agenda_integrada_item
	where	nr_seq_agenda_int = nr_seq_ageint_p
	and (ie_valida_glosa_estab_item_w = 'S' 
	or (coalesce(ie_regra, 0) not in (1, 2 ,5, 8) 
	and coalesce(ie_glosa,'X') <> 'T'))	
	and	coalesce(nr_seq_agenda_exame::text, '') = ''
	and	coalesce(nr_seq_agenda_cons::text, '') = ''
	and	coalesce(nr_seq_agequi::text, '') = ''
	and coalesce(nr_seq_pend_quimio::text, '') = '') alias21;

	if (qt_marcacoes_w <> qt_itens_w) then
		-- Nao e permitido confirmar as marcacoes! e necessario marcar todos os itens conforme o parametro [203].
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(193581);
	end if;
end if;
	
if (ie_reserva_p = 'N') and (coalesce(cd_pessoa_fisica_w::text, '') = '') and (coalesce(nm_paciente_w::text, '') = '') then
	-- Nao foi possivel confirmar as marcacoes. Verifique os dados do agendamento pois nao foi informado o paciente.
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(193587);
end if;

select	count(*)
into STRICT	qt_item_bloq_w
from	ageint_exame_lab a
where	a.nr_seq_ageint = nr_seq_ageint_p
and	((coalesce(a.ie_regra,0) in (1,2,5,nr_glosa_part_w)) or (coalesce(a.ie_glosa,'X') = 'T'))
and	not exists(	SELECT	1
			from	ageint_exame_lab x
			where	a.nr_sequencia = x.nr_seq_origem
			and	((coalesce(x.ie_regra,0) not in (1,2,5,nr_glosa_part_w)) or (coalesce(x.ie_glosa,'X') <> 'T')));
			
if (qt_item_bloq_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(225572);
end if;


open C01;
loop
fetch C01 into	
	nr_seq_agenda_w,
	cd_agenda_w,
	nr_sequencia_w,
	nr_seq_ageint_item_w,
	nr_seq_ageint_item_transf_w,
	nr_minuto_duracao_w,
	ie_encaixe_w,
	hr_agenda_w,
	cd_medico_marcacao_w,
	nm_usuario_confirm_encaixe_w,
	dt_confirm_encaixe_w,
	nr_seq_lista_w,
	nr_seq_lista_espera_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	ds_obs_agenda_w	:= '';
	if (qt_dias_confirm_aut_w > 0) and (Ageint_Obter_Qt_Dia_Util_Per(clock_timestamp(), hr_agenda_w, cd_estabelecimento_p) <= qt_dias_confirm_aut_w) then
		nm_usuario_confirm_encaixe_w := nm_usuario_p;
		ie_confirmacao_aut_w		 := 'S';
		dt_confirm_encaixe_w 	     := clock_timestamp();
		nm_usuario_confirm_w		 := nm_usuario_p;
		dt_confirmacao_w		     := clock_timestamp();
	else
	    nm_usuario_confirm_encaixe_w := '';
		dt_confirmacao_w	   		 := null;
	    dt_confirm_encaixe_w   		 := null;
		nm_usuario_confirm_w		 := '';
		ie_confirmacao_aut_w		 := 'N';
	end if;
	
	select	max(cd_convenio),
		max(cd_categoria),
		max(cd_plano),
		max(cd_usuario_convenio),
		max(dt_validade_carteira)		
	into STRICT	cd_conv_item_w,
		cd_categ_item_w,
		cd_plano_item_w,
		cd_usuario_convenio_item_w,
		dt_validade_carteira_item_w
	from	agenda_integrada_conv_item
	where	nr_seq_agenda_item	= nr_seq_ageint_item_w;
	
	if (cd_conv_item_w IS NOT NULL AND cd_conv_item_w::text <> '') then
		cd_convenio_w		:= cd_conv_item_w;
		cd_categoria_w		:= cd_categ_item_w;
		cd_plano_w		:= cd_plano_item_w;
		cd_usuario_convenio_w	:= cd_usuario_convenio_item_w;
		dt_validade_carteira_w	:= dt_validade_carteira_item_w;
	end if;
	
	select 	max(a.cd_tipo_Agenda),
		max(a.nr_seq_classif_int),
		max(a.cd_estabelecimento),
		max(a.cd_setor_exclusivo),
		max(ie_utiliza_prof_horario)
	into STRICT	cd_tipo_Agenda_w,
		nr_seq_classif_int_w,
		cd_estab_agenda_w,
		cd_setor_exclusivo_w,
		ie_utiliza_prof_horario_w
	from	agenda a		
	where	a.cd_agenda	= cd_Agenda_w;
	
	if (cd_tipo_Agenda_w = 5 or cd_tipo_Agenda_w = 3) then
		ie_agend_serv_cons_w		:= 'S';		
	end if;
	
	select	nr_Seq_proc_interno,
		cd_procedimento,
		cd_medico,
		ie_classif_agenda,
		substr(ageint_obter_se_proc_check(nr_Seq_proc_interno,nr_seq_ageint_p, cd_estabelecimento_p, cd_especialidade),1,1),
		substr(ageint_obter_se_exige_aval(nr_seq_tipo_aval_w,nr_seq_ageint_p,nr_Seq_proc_interno),1,1),
		CASE WHEN ie_origem_agendamento='MS' THEN  CASE WHEN cd_tipo_agenda_w=2 THEN  cd_medico  ELSE cd_medico_req END   ELSE cd_medico_req END ,
		ie_anestesia,
		cd_anestesista,
		nr_seq_sala,
		nr_seq_transporte,
		nm_medico_externo,
		crm_medico_externo,
		ie_lado,
		ds_observacao,
		qt_diaria_prev,
		ie_forma_agendamento,
		ie_autor_agenda_exame,
		cd_doenca_cid,
		nr_seq_motivo_agendamento,
		nr_seq_motivo_anest,
		ds_cirurgia,
		ie_origem_proced,
		ie_carater_cirurgia,
		ds_senha,
		nr_seq_partic_ciclo_item,
		nr_seq_captacao,
		nr_prescricao,
		NR_SEQ_CIRURGIA,
		ie_gestao_exame,
		NR_SEQ_LISTA_ESPERA_ORIGEM,
		cd_especialidade,
        NR_SEQ_SOLIC_COMPL,
		nr_seq_topografia,
		nr_seq_classif_agenda,
		vl_coparticipacao
	into STRICT	nr_seq_proc_interno_w,
		cd_procedimento_int_w,
		cd_medico_w,
		ie_classif_agenda_w,
		ie_exige_check_list_w,
		ie_exige_avaliacao_w,
		cd_medico_req_w,
		ie_anestesia_w,
		cd_anestesista_w,
		nr_seq_sala_w,
		nr_seq_transporte_w,
		nm_medico_externo_item_w,      
		crm_medico_externo_item_w,
		ie_lado_w,
		ds_obs_item_w,
		qt_diaria_prev_w,
		ie_forma_agendamento_w,
		ie_autor_agenda_exame_w,
		cd_doenca_cid_w,
		nr_seq_motivo_agendamento_w,
		nr_seq_motivo_anest_w,
		ds_cirurgia_w,
		ie_origem_proced_item_w,
		ie_carater_cirurgia_w,
		ds_senha_w,
		nr_seq_partic_ciclo_item_w,
		nr_seq_captacao_w,
		nr_prescricao_w,
		NR_SEQ_CIRURGIA_W,
		ie_gestao_exame_w,
		NR_SEQ_LISTA_ESPERA_ORIGEM_W,
		cd_especialidade_ageint_w,
        NR_SEQ_SOLIC_COMPL_w,
		nr_seq_topografia_w,
		nr_seq_classif_agenda_w,
		vl_coparticipacao_w
	from	agenda_integrada_item
	where	nr_Sequencia	= nr_seq_ageint_item_w;
	
	begin
	select 	ds_razao_social
			into STRICT	ds_razao_social_w
			from  	pessoa_juridica
			where 	cd_cgc = to_char(CNPJ_SOLICITANTE_w);
	exception
			when others then
				ds_razao_social_w := null;
		end;
	
			if ((CNPJ_SOLICITANTE_w IS NOT NULL AND CNPJ_SOLICITANTE_w::text <> '')
					and	 (ds_razao_social_w IS NOT NULL AND ds_razao_social_w::text <> '')
					and	 (NR_SEQ_LISTA_ESPERA_ORIGEM_W IS NOT NULL AND NR_SEQ_LISTA_ESPERA_ORIGEM_W::text <> '') ) then
			begin

				select 	cd_cgc,
						nm_fantasia_estab
				into STRICT	CNPJ_LOCAL_AGENDA_EXTERNO_w,
						DS_LOCAL_AGENDA_EXTERNO_w
				from 	estabelecimento
				where 	cd_estabelecimento = cd_estabelecimento_p;
			
				select  max(nr_sequencia)
				into STRICT	nr_sequencia_agen_list_esp_w
				from    AGENDA_lista_ESPERA
				where   CNPJ_ORIGEM = CNPJ_SOLICITANTE_w 
				and     NR_SEQ_LISTA_ESPERA_ORIGEM = NR_SEQ_LISTA_ESPERA_ORIGEM_W;

				if (nr_sequencia_agen_list_esp_w IS NOT NULL AND nr_sequencia_agen_list_esp_w::text <> '') then
					begin
					
					update  AGENDA_LISTA_ESPERA
					set     DT_AGENDA_EXTERNO = hr_agenda_w,
							IE_STATUS_ESPERA = 'E',
							DS_LOCAL_AGENDA_EXTERNO = DS_LOCAL_AGENDA_EXTERNO_w,
							CNPJ_LOCAL_AGENDA_EXTERNO = CNPJ_LOCAL_AGENDA_EXTERNO_w,
							IE_FALTA = 'N'
					where   nr_sequencia = nr_sequencia_agen_list_esp_w;

					end;
				else
					begin

						insert into AGENDA_LISTA_ESPERA(NR_SEQUENCIA,
							DT_ATUALIZACAO_NREC,
							NM_USUARIO_NREC,
							IE_STATUS_ESPERA,
							NM_USUARIO,
							DT_AGENDAMENTO,
							NM_USUARIO_AGENDA,
							DT_ATUALIZACAO,
							CNPJ_LOCAL_AGENDA_EXTERNO,
							DS_LOCAL_AGENDA_EXTERNO,
							DT_AGENDA_EXTERNO,
							NR_SEQ_LISTA_ESPERA_ORIGEM,
							CNPJ_ORIGEM,
							NM_ESTABELECIMENTO_ORIGEM,
							CD_PESSOA_FISICA,
							NM_PESSOA_CONTATO,
							NR_TELEFONE,
							CD_SETOR_ATENDIMENTO,
							NR_SEQ_CLASSIF_AGENDA,
							CD_CID,
							CD_ESPECIALIDADE,
							CD_CONVENIO,
							IE_FALTA)
						values (nextval('agenda_lista_espera_seq'),
							clock_timestamp(),
							nm_usuario_p,
							'E',
							nm_usuario_p,
							hr_agenda_w,
							nm_usuario_p,
							clock_timestamp(),
							CNPJ_LOCAL_AGENDA_EXTERNO_w,
							DS_LOCAL_AGENDA_EXTERNO_w,
							hr_agenda_w,
							NR_SEQ_LISTA_ESPERA_ORIGEM_W,
							CNPJ_SOLICITANTE_w,
							ds_razao_social_w,
							cd_pessoa_fisica_w,
							nm_contato_w,
							nr_telefone_w,
							CASE WHEN cd_setor_atendimento_w=0 THEN  null  ELSE cd_setor_atendimento_w END ,
							nr_seq_tipo_classif_pac_w,
							cd_doenca_cid_w,
							cd_especialidade_ageint_w,
							cd_convenio_w,
							'N');

					end;
				end if;
			end;
			end if;
      

	if (ie_reserva_p = 'N') and (ie_exige_check_list_w = 'S') and (ie_forma_cons_checklist_w <> 'C')then
		-- Nao foi possivel confirmar as marcacoes. Verifique as regras cadastradas que exigem check-list para o(s) procedimento(s).
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(193588);
	end if;
	
	if (ie_reserva_p = 'N') and (ie_exige_avaliacao_w = 'S') and (ie_agendamento_wsuite_w = 'N')	then
		-- Nao foi possivel confirmar as marcacoes. Verifique as regras cadastradas que exigem avaliacao para o(s) procedimento(s).
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(193590);
	end if;
	
	SELECT * FROM Consistir_qtd_conv_regra(	nr_seq_agenda_w, cd_convenio_w, hr_agenda_w, cd_agenda_w, cd_pessoa_fisica_w, cd_categoria_w, cd_plano_w, cd_estabelecimento_p, nm_usuario_p, cd_medico_w, nr_seq_proc_interno_w, ie_tipo_atendimento_w, qt_agend_cons_conv_w, qt_perm_regra_w, ds_mensagem_w) INTO STRICT qt_agend_cons_conv_w, qt_perm_regra_w, ds_mensagem_w;
		
	if (qt_agend_cons_conv_w > qt_perm_regra_w) then
		if (ds_mensagem_w = '' or coalesce(ds_mensagem_w::text, '') = '') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(192298);
		else
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(ds_mensagem_w);
		end if;
	end if;
	
	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
		begin
			update prescr_medica
			set nr_seq_agenda = nr_seq_agenda_w
			where nr_prescricao = nr_prescricao_w;
			
			if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
				begin
				update prescr_procedimento
				set nr_seq_agenda = nr_seq_agenda_w
				where nr_prescricao = nr_prescricao_w
				and nr_seq_proc_interno = nr_seq_proc_interno_w;
				end;
			else
				begin
				update prescr_procedimento
				set nr_seq_agenda = nr_seq_agenda_w
				where nr_prescricao = nr_prescricao_w;
				end;
			end if;
		exception
			when others then
				nr_prescricao_w := nr_prescricao_w;
		end;
	end if;
	
	if (ie_encaixe_w	= 'N') then
		if (nr_Seq_proc_interno_w IS NOT NULL AND nr_Seq_proc_interno_w::text <> '') then
			SELECT * FROM obter_proc_tab_interno_conv(
					nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, dt_agenda_p, null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;		
		
		if (nr_seq_ageint_p IS NOT NULL AND nr_seq_ageint_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '')then
			CALL ageint_ins_anexo_email(nr_seq_ageint_p, nm_usuario_p, cd_estab_agenda_w);
		end if;
		
		if (cd_tipo_agenda_w	= 2) then

			if (ie_modo_gerar_reserva_w	= '1') then
				nr_reserva_exame_w	:= Ageint_Obter_Reserva_Pac(nr_seq_agenda_w, hr_agenda_w, cd_pessoa_fisica_w, cd_estab_agenda_w,'E');
			end if;
			
			if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
				ds_obs_agenda_w	:= substr(ds_observacao_w,1,4000);
			end if;
			if (ds_obs_item_w IS NOT NULL AND ds_obs_item_w::text <> '') then
				if (ds_obs_agenda_w IS NOT NULL AND ds_obs_agenda_w::text <> '') then
					ds_obs_agenda_w	:= substr(ds_obs_agenda_w || ' ' || ds_obs_item_w,1,4000);
				else
					ds_obs_agenda_w	:= substr(ds_obs_item_w,1,4000);
				end if;
			end if;
				
				if (nr_seq_sala_w IS NOT NULL AND nr_seq_sala_w::text <> '')then
					ie_gerar_sala_agenda_int := 'S';
				else
					ie_gerar_sala_agenda_int := 'N';
				end if;
			
			if (ie_regra_geracao_setor_agend_w <> 'N')then
				
				if (ie_regra_geracao_setor_agend_w = 'U')then
					select	coalesce(max(obter_setor_usuario(nm_usuario_p)), 0)
					into STRICT	cd_setor_atendimento_w
					;
				elsif (ie_regra_geracao_setor_agend_w = 'E') then
						select	coalesce(max(cd_setor_exclusivo), 0)
						into STRICT	cd_setor_atendimento_w
						from	agenda
						where	cd_agenda = cd_agenda_w;
				elsif (ie_regra_geracao_setor_agend_w = 'P') then
						select	coalesce(max(cd_setor_exclusivo), 0)
						into STRICT	cd_setor_atendimento_w
						from 	procedimento
						where 	cd_procedimento = cd_procedimento_w;				
				end if;			
			else
				cd_setor_atendimento_w := 0;
			end if;
			
			if (nr_seq_lista_w IS NOT NULL AND nr_seq_lista_w::text <> '') then
				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_possui_proc_lista_w
				from	rp_lista_espera_modelo
				where	nr_sequencia = nr_seq_lista_w
				and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')
				and	(ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '')
				and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '');
				
				if (ie_possui_proc_lista_w = 'S') then
					select	cd_procedimento,
						nr_seq_proc_interno,
						ie_origem_proced
					into STRICT	cd_procedimento_w,
						nr_seq_proc_interno_w,
						ie_origem_proced_w
					from	rp_lista_espera_modelo
					where	nr_sequencia = nr_seq_lista_w;
				end if;
			end if;
			
      select	count(*)
      into STRICT	  qt_tipo_guia_w
      from	  tipo_guia_atend
      where	  ie_tipo_atendimento = ie_tipo_atendimento_w;

      if (qt_tipo_guia_w > 0) then
        select	max(ie_tipo_guia)
        into STRICT	ie_tipo_guia_w
        from	tipo_guia_atend 
        where	ie_tipo_atendimento = ie_tipo_atendimento_w
        and   cd_estabelecimento = cd_estabelecimento_w;

        if (coalesce(ie_tipo_guia_w::text, '') = '') then
          select	max(ie_tipo_guia)
          into STRICT	ie_tipo_guia_w
          from	tipo_guia_atend
          where	ie_tipo_atendimento = ie_tipo_atendimento_w
          and   coalesce(cd_estabelecimento::text, '') = '';
        end if;
      end if;
			
			select	nr_minuto_duracao
			into STRICT 	nr_minuto_duracao_age_exame_w
			from	agenda_paciente
			where	nr_sequencia = nr_seq_agenda_w;
			
			-- se a duracao do horario da agenda for menor do que o marcado
			if (nr_minuto_duracao_age_exame_w < nr_minuto_duracao_w) then
				CALL liberar_hor_dur_age_exame(nr_seq_Agenda_w, nr_minuto_duracao_w, nm_usuario_p);
			end if;
			
			select 	coalesce(max(ie_copiar_classif_agendamento),'S')
			into STRICT	ie_cop_classif_agendamento_w
			from	agenda_paciente_classif
			where	nr_sequencia = nr_seq_classif_agenda_w;
			
			if (ie_anestesia_w = 'S') then
				if (coalesce(cd_anestesista_w::text, '') = '') then
				
					begin

					select 	max(t.cd_pessoa_fisica)
					into STRICT	cd_anestesista_w
					from  ageint_anestesia_turno t,
						  ageint_agenda_turno_anest a
					where	a.nr_seq_anest_turno = t.nr_sequencia
					and a.cd_agenda = cd_agenda_w
					and	t.ie_situacao = 'A'
					and	t.cd_estabelecimento = cd_estabelecimento_p
					and	(t.cd_pessoa_fisica IS NOT NULL AND t.cd_pessoa_fisica::text <> '')
					and trunc(hr_agenda_w) >= coalesce(t.dt_inicial_vigencia,trunc(hr_agenda_w))
					and	trunc(hr_agenda_w) <= coalesce(t.dt_final_vigencia,trunc(hr_agenda_w))
					and ((hr_agenda_w >= to_date(to_char(hr_agenda_w,'dd/mm/yyyy')||' '||to_char(t.hr_inicial,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
						and (hr_agenda_w <= to_date(to_char(hr_agenda_w,'dd/mm/yyyy')||' '||to_char(t.hr_final,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')))
					and not exists (SELECT 1
						from	agenda_paciente
						where (cd_anestesista = t.cd_pessoa_fisica or cd_medico_exec  = t.cd_pessoa_fisica)
						and	hr_inicio = hr_agenda_w
						and (cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '')
						and	ie_status_agenda <> 'C');
					
					exception
						when others then
							cd_anestesista_w := null;
					end;
					
				end if;
				
				if (cd_anestesista_w IS NOT NULL AND cd_anestesista_w::text <> '') then
					update	agenda_integrada_item
					set	cd_anestesista = cd_anestesista_w
					where	nr_seq_agenda_int = nr_seq_ageint_p;
				end if;
			end if;
			
			if (cd_medico_marcacao_w IS NOT NULL AND cd_medico_marcacao_w::text <> '') then
				begin
          		select cd_pessoa_fisica
          			into STRICT cd_pessoa_fisica_medico_w
          			from medico
          			where cd_pessoa_fisica = cd_medico_marcacao_w;
        		exception
          			when no_data_found then
        			-- Nao foi possivel confirmar a marcacao. O profissional executor selecionado para o item de exame nao possui cadastro medico. --
        			CALL Wheb_mensagem_pck.exibir_mensagem_abort(1173534);
        		end;							
			end if;
			
			update	agenda_paciente
			set	cd_pessoa_fisica	= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN cd_pessoa_fisica_w  ELSE null END ,				
				ie_status_agenda	= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN 'N'  ELSE 'R' END ,
				nr_Telefone		= nr_telefone_w,
				cd_convenio		= cd_convenio_w,
				cd_Categoria		= cd_Categoria_w,
				cd_plano		= cd_plano_w,
				nr_doc_convenio		= nr_doc_convenio_w,
				cd_usuario_convenio	= cd_usuario_convenio_w,
				dt_validade_carteira	= dt_validade_carteira_w,
				nm_usuario_acesso	 = NULL,
				nr_seq_proc_interno	= nr_seq_proc_interno_w,
				cd_procedimento		= cd_procedimento_w,
				ie_origem_proced	= ie_origem_proced_w,
				nr_minuto_duracao	= nr_minuto_duracao_w,
				cd_medico_exec		= cd_medico_marcacao_w,
				ds_observacao		= substr(ds_obs_agenda_w,1,4000),
				nm_paciente		= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN nm_paciente_w  ELSE wheb_mensagem_pck.get_texto(793119) END ,
				qt_peso			= qt_peso_w,
				qt_altura_cm		= qt_altura_cm_w,
				dt_nascimento_pac	= dt_nascimento_w,
				ie_tipo_atendimento	= ie_tipo_atendimento_w,
				cd_medico		= cd_medico_req_w,
				ie_anestesia		= ie_anestesia_w,
				cd_anestesista		= cd_anestesista_w,
				nr_seq_sala		= CASE WHEN ie_gerar_sala_agenda_int='S' THEN  nr_seq_sala_w  ELSE nr_seq_sala END ,
				nr_Seq_transporte	= nr_seq_transporte_w,
				dt_confirmacao		= dt_confirmacao_w,
				nm_usuario_confirm	= nm_usuario_confirm_w,
				ie_confirmacao_aut	= ie_confirmacao_aut_w,
				cd_empresa_ref		= cd_empresa_w,
				nr_seq_tipo_classif_pac	= nr_seq_tipo_classif_pac_w,
				nm_medico_externo	= coalesce(nm_medico_externo_item_w,nm_medico_externo_w),
				crm_medico_externo	= coalesce(crm_medico_externo_item_w,crm_medico_externo_w),
				nr_reserva		= nr_reserva_exame_w,
				qt_idade_paciente	= qt_idade_w,
				ie_lado			= ie_lado_w,
				nm_usuario_reserva	= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN null  ELSE nm_usuario_p END ,
				dt_reserva		= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN null  ELSE clock_timestamp() END ,
				ie_forma_agendamento	= ie_forma_agendamento_w,
				ie_autorizacao		= ie_autor_agenda_exame_w,
				cd_doenca_cid		= cd_doenca_cid_w,
				cd_procedencia		= cd_procedencia_w,
				nr_seq_motivo_anest	=	nr_seq_motivo_anest_w,
				cd_setor_atendimento = CASE WHEN cd_setor_atendimento_w=0 THEN  null  ELSE cd_setor_atendimento_w END ,
				nr_seq_lista_reab       = nr_seq_lista_w,
				nr_seq_lista 		= coalesce(nr_seq_lista_w, nr_seq_lista),
				ie_marc_no_show		= coalesce(ie_marc_no_show_p, 'N'),
				ie_perdido		= 'N',
				ds_cirurgia		= ds_cirurgia_w,
				nr_seq_motivo_agendamento = nr_seq_motivo_agendamento_w,
				ie_tipo_guia		= ie_tipo_guia_w,
				ie_carater_cirurgia = ie_carater_cirurgia_w,
				nm_pessoa_contato	= substr(nm_contato_w,1,50),
				nr_controle_sus = nr_controle_sus_w,
				cd_regulacao_sus = cd_regulacao_sus_w,
				cd_chave_regulacao_sus = cd_chave_regulacao_sus_w,
				ds_senha	        = ds_senha_w,
				nr_seq_segurado	        = nr_seq_segurado_w,
				cd_tipo_acomodacao		= cd_tipo_acomodacao_w,
				nr_seq_person_name      = nr_seq_person_name_w,
				cd_topografia_proced	= nr_seq_topografia_w,
				nr_seq_classif_agenda	= CASE WHEN ie_cop_classif_agendamento_w='S' THEN coalesce(nr_seq_classif_agenda_w,nr_seq_classif_agenda)  ELSE nr_seq_classif_agenda END ,
				cd_pessoa_indicacao     = cd_pessoa_indicacao_w,
				IE_AGENDA_WEB			= ie_agendamento_wsuite_w,
				NM_USUARIO_ORIG			= coalesce(nm_usuario_p,NM_USUARIO_ORIG)
			where	nr_sequencia		= nr_seq_agenda_w;	
			
			if (coalesce(vl_coparticipacao_w,0) > 0) then
				select 	max(nr_sequencia)
	            		into STRICT 	nr_seq_pac_aux_w
            			from 	agenda_paciente_auxiliar apa
			        where 	apa.nr_seq_agenda = nr_seq_agenda_w;
			
				if (coalesce(nr_seq_pac_aux_w,0) > 0) then
					update	agenda_paciente_auxiliar
					set	vl_coparticipacao = vl_coparticipacao_w
					where 	nr_sequencia = nr_seq_pac_aux_w;
				else
					INSERT INTO agenda_paciente_auxiliar(
					 		nr_sequencia,
							dt_atualizacao,
                                                        nm_usuario,
                                                        dt_atualizacao_nrec,
                                                        nm_usuario_nrec,
							vl_coparticipacao,
							nr_seq_agenda)
						values (	nextval('agenda_paciente_auxiliar_seq'),
							clock_timestamp(),
                                                        nm_usuario_p,
                                                        clock_timestamp(),
                                                        nm_usuario_p,
							vl_coparticipacao_w,
							nr_seq_agenda_w
						);
				end if;
			end if;
			commit;
			remover_marcacao_multitransf;
			
			if (ie_vincula_atendimento_w = 'S') and (ie_gestao_exame_w = 'S') and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
				select nr_atendimento
				into STRICT  nr_atendimento_w
				from prescr_medica
				where nr_prescricao = nr_prescricao_w;

				if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
					CALL vincular_atend_agenda(cd_tipo_Agenda_w, nr_seq_agenda_w, nr_atendimento_w, nm_usuario_p);
				end if;
			end if;
			
			-- se a duracao do horario da agenda for menor do que o marcado
			if (nr_minuto_duracao_age_exame_w < nr_minuto_duracao_w) then
				CALL Gerar_Horario_Agenda_Exame(cd_estabelecimento_p, cd_agenda_w, trunc(hr_agenda_w), nm_usuario_p);
			end if;

			if (ie_agendamento_coletivo_w = 'S') then

				update 	agendamento_coletivo
				set 	dt_agenda = CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN hr_agenda_w  ELSE clock_timestamp() END ,
					hr_inicio = hr_agenda_w,
					Nr_Minuto_Duracao = Nr_Minuto_Duracao_W, 
					ie_status_agenda = CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN 'N'  ELSE 'R' END ,
          Nm_Usuario = Nm_Usuario_P,
          dt_atualizacao = clock_timestamp()
				where nr_seq_agenda_int = nr_seq_ageint_item_w;
			end if;
			
			if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
				select  obter_dt_entrega_laudo(nr_seq_ageint_p, nr_seq_proc_interno_w, cd_procedimento_int_w, ie_origem_proced_item_w, nm_usuario_p, hr_agenda_w, cd_setor_exclusivo_w, 'DR', nr_seq_agenda_w),
						obter_dt_entrega_laudo(nr_seq_ageint_p, nr_seq_proc_interno_w, cd_procedimento_int_w, ie_origem_proced_item_w, nm_usuario_p, hr_agenda_w, cd_setor_exclusivo_w, 'DE', nr_seq_agenda_w)
				into STRICT	dt_resultado_w,
						dt_entrega_w
				;	
			end if;
			CALL gravar_log_tasy(57412,'AgeEx Seq = '||nr_seq_ageint_p||' PF = '||cd_pessoa_fisica_w,'Tasy');
			
			CALL Ageint_Gerar_Equip_Agenda(nr_seq_agenda_w,
						nr_seq_ageint_item_w,
						nm_usuario_p);
			
			update	ageint_marcacao_usuario
			set		ie_Gerado	= 'S'
			where	nr_sequencia	= nr_sequencia_w;
						
			update	agenda_integrada_item
			set	nr_seq_agenda_exame	= nr_seq_agenda_w,
				dt_resultado		= dt_resultado_w,
				dt_entrega_prevista	= dt_entrega_w,
				nr_classificacao_agend	= CASE WHEN nr_classificacao_agend = NULL THEN nr_seq_classif_int_w  ELSE nr_classificacao_agend END
			where	nr_sequencia		= nr_seq_ageint_item_w;
		
			commit;
			if (ie_gerar_evolucao_schedule_w = 'S' and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') ) then
                cd_evolucao_w := clinical_notes_pck.gerar_soap(null, nr_seq_agenda_w, 'EXAM_SCHD', NULL, 'P', 1, cd_evolucao_w, null, cd_pessoa_fisica_w);
                if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
                    CALL update_evolucao_soap(cd_evolucao_w,nr_seq_agenda_w,'AGENDA_PACIENTE');
                end if;
            end if;
			update	agenda_integrada_prof_item
			set	ie_confirmado 		= 'S'
			where	nr_seq_agenda_item  	= nr_seq_ageint_item_w;
			
			update	agenda_pac_opme
			set	nr_seq_agenda		= nr_seq_agenda_w
			where	nr_seq_item		= nr_seq_ageint_item_w
			and	nr_seq_agenda_int	= nr_seq_ageint_p
			and	coalesce(nr_seq_agenda::text, '') = '';
			
			CALL gerar_agenda_paciente_hist(cd_agenda_w,nr_seq_agenda_w,'A',nm_usuario_p,wheb_mensagem_pck.get_texto(793118), null, null, clock_timestamp(), obter_perfil_ativo);
			
			open C03;
			loop
			fetch C03 into	
				nr_seq_proc_int_assoc_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				
				if (nr_seq_proc_int_assoc_w IS NOT NULL AND nr_seq_proc_int_assoc_w::text <> '') then
					SELECT * FROM obter_proc_tab_interno_conv(
						nr_seq_proc_int_assoc_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_proc_assoc_w, ie_origem_proc_assoc_w, null, dt_agenda_p, null, null, null, null, null, null, null, null) INTO STRICT cd_proc_assoc_w, ie_origem_proc_assoc_w;
				end if;
				
				select	coalesce(max(nr_seq_Agenda),0) + 1
				into STRICT	nr_seq_proc_Adic_w
				from	agenda_paciente_proc
				where	nr_sequencia	= nr_seq_Agenda_w;
				
				insert into agenda_paciente_proc(nr_sequencia,
					nr_seq_agenda,
					dt_Atualizacao,
					nm_usuario,
					cd_procedimento,
					ie_origem_proced,
					nr_seq_proc_interno,
					nr_seq_agenda_princ,
					ie_lado,
					qt_procedimento)
				values (nr_seq_agenda_w,
					nr_seq_proc_Adic_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_proc_assoc_w,
					ie_origem_proc_assoc_w,
					nr_seq_proc_int_assoc_w,
					nr_seq_agenda_w,
					ie_lado_w,
					1);
				end;
			end loop;
			close C03;
			
			if (ie_gerar_adicionais_w = 'S') then
				open C06;
				loop
				fetch C06 into
					nr_seq_proc_int_item_adic_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
					begin

					if (nr_seq_proc_int_item_adic_w IS NOT NULL AND nr_seq_proc_int_item_adic_w::text <> '') then
						SELECT * FROM obter_proc_tab_interno_conv(
							nr_seq_proc_int_item_adic_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_proc_item_adic_w, ie_origem_proc_item_adic_w, null, dt_agenda_p, null, null, null, null, null, null, null, null) INTO STRICT cd_proc_item_adic_w, ie_origem_proc_item_adic_w;
					end if;

					select	coalesce(max(nr_seq_Agenda),0) + 1
					into STRICT	nr_seq_proc_Adic_w
					from	agenda_paciente_proc
					where	nr_sequencia	= nr_seq_Agenda_w;

					insert into agenda_paciente_proc(nr_sequencia,
						nr_seq_agenda,
						dt_Atualizacao,
						nm_usuario,
						cd_procedimento,
						ie_origem_proced,
						nr_seq_proc_interno,
						nr_seq_agenda_princ,
						ie_lado)
					values (nr_seq_agenda_w,
						nr_seq_proc_Adic_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_proc_item_adic_w,
						ie_origem_proc_item_adic_w,
						nr_seq_proc_int_item_adic_w,
						nr_seq_agenda_w,
						ie_lado_w);
					end;
				end loop;
				close C06;
			end if;
				
			open C04;
			loop
			fetch C04 into	
				nr_seq_exame_adic_w,
				ie_lado_adic_w,
				ds_cirurgia_w,
				nr_seq_topografia_adic_w,
				vl_coparticipacao_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				if (nr_seq_exame_adic_w IS NOT NULL AND nr_seq_exame_adic_w::text <> '') then
					SELECT * FROM obter_proc_tab_interno_conv(
						nr_seq_exame_adic_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_proc_adic_w, ie_origem_proc_adic_w, null, dt_agenda_p, null, null, null, null, null, null, null, null) INTO STRICT cd_proc_adic_w, ie_origem_proc_adic_w;
				end if;
				
				select	coalesce(max(nr_seq_Agenda),0) + 1
				into STRICT	nr_seq_proc_Adic_w
				from	agenda_paciente_proc
				where	nr_sequencia	= nr_seq_Agenda_w;
				
				select	max(cd_medico_req)
				into STRICT	cd_medico_req_w
				from	agenda_integrada_item
				where	nr_sequencia = nr_seq_ageint_item_w;
				
				insert into agenda_paciente_proc(nr_sequencia,
					nr_seq_agenda,
					dt_Atualizacao,
					nm_usuario,
					cd_procedimento,
					ie_origem_proced,
					nr_seq_proc_interno,
					nr_seq_agenda_princ,
					ie_lado,
					ds_indicacao_clinica,
					qt_procedimento,
					cd_medico,
					cd_medico_req,
					cd_topografia_proced,
					vl_coparticipacao)
				values (nr_seq_agenda_w,
					nr_seq_proc_Adic_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_proc_adic_w,
					ie_origem_proc_adic_w,
					nr_seq_exame_adic_w,
					nr_seq_agenda_w,
					ie_lado_adic_w,
					ds_cirurgia_w,
					1,
					cd_medico_marcacao_w,
					cd_medico_req_w,
					nr_seq_topografia_adic_w,
					vl_coparticipacao_adic_w);
				end;				
			end loop;
			close C04;
			
		elsif (cd_tipo_agenda_w = 3) then
			
			if (ie_modo_gerar_reserva_w	= '1') then
				nr_reserva_exame_w	:= Ageint_Obter_Reserva_Pac(nr_seq_agenda_w, hr_agenda_w, cd_pessoa_fisica_w, cd_estab_agenda_w,'O');
			end if;
			
			if (coalesce(ie_classif_agenda_w::text, '') = '') then
				select	max(ie_classif_agenda)
				into STRICT	ie_classif_agenda_w
				from	agenda_consulta
				where	nr_sequencia	= nr_seq_agenda_w;
			end if;

			-- Consistencia de classificacoes liberadas
			if (ie_consiste_classif_lib_w = 'S') -- Novo parametro na AGI
			and (ie_classif_agenda_w IS NOT NULL AND ie_classif_agenda_w::text <> '') then
				ie_permite_classif_w	:= obter_agecons_agenda_classif(cd_agenda_w,ie_classif_agenda_w);
				if (ie_permite_classif_w = 'N') then
					CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(262323);
				end if;
			end if;
			
			select	max(cd_pessoa_fisica)
			into STRICT	cd_medico_marcacao_w
			from	medico
			where	cd_pessoa_fisica = cd_medico_marcacao_w;
			
			if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
				ds_obs_agenda_w	:= substr(ds_observacao_w,1,2000);
			end if;
			if (ds_obs_item_w IS NOT NULL AND ds_obs_item_w::text <> '') then
				if (ds_obs_agenda_w IS NOT NULL AND ds_obs_agenda_w::text <> '') then
					ds_obs_agenda_w	:= substr(ds_obs_agenda_w || ' ' || ds_obs_item_w,1,2000);
				else
					ds_obs_agenda_w	:= substr(ds_obs_item_w,1,2000);
				end if;
			end if;			
			
			select	coalesce(max(cd_setor_exclusivo), 0)
			into STRICT	cd_setor_atendimento_w
			from	agenda
			where	cd_agenda = cd_agenda_w;
			
			if (cd_setor_atendimento_w = 0) then
				select	coalesce(max(cd_setor_agenda), 0)
				into STRICT	cd_setor_atendimento_w
				from	agenda
				where	cd_agenda = cd_agenda_w;
			end if;	
			
			if (cd_setor_atendimento_w = 0) then
				select	coalesce(max(obter_setor_usuario(nm_usuario_p)), 0)
				into STRICT	cd_setor_atendimento_w
				;
			end if;
			
			if ie_inserir_especialidade_w = 'N' then
				cd_especialidade_ageint_w := null;
			end if;

      -- verificar se esta cadastrado na tabela de medicos
      select max(cd_pessoa_fisica)
      into STRICT cd_medico_req_w
      from medico
      where cd_pessoa_fisica = cd_medico_req_w;
			
			update	agenda_consulta
			set	cd_pessoa_fisica		= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN cd_pessoa_fisica_w  ELSE null END ,				
				ie_status_agenda	      	= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN 'N'  ELSE 'R' END ,
				nr_Telefone		        = nr_telefone_w,
				cd_convenio		        = cd_convenio_w,
				cd_Categoria		      	= cd_Categoria_w,
				cd_plano		        = cd_plano_w,
				nr_doc_convenio		      	= nr_doc_convenio_w,
				cd_usuario_convenio	      	= cd_usuario_convenio_w, 
				dt_validade_carteira      	= dt_validade_carteira_w,
				nm_usuario_acesso	      	 = NULL,
				cd_medico_req		      	= CASE WHEN coalesce(cd_medico_req_w,'N')='N' THEN  CASE WHEN ie_utiliza_medico_marcacao_w='S' THEN  cd_medico_marcacao_w  ELSE cd_medico_req END   ELSE cd_medico_req_w END ,
				nr_minuto_duracao	      	= nr_minuto_duracao_w,
				ie_classif_agenda	      	= coalesce(ie_classif_agenda_w,ie_classif_agenda),
				ds_observacao		      	= substr(ds_obs_agenda_w,1,2000),
				nm_paciente		      	= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN nm_paciente_w  ELSE wheb_mensagem_pck.get_texto(793119) END ,
				dt_nascimento_pac	      	= dt_nascimento_w,
				dt_confirmacao		      	= dt_confirmacao_w,
				nm_usuario_confirm	      	= nm_usuario_confirm_w,
				ie_confirmacao_aut	      	= ie_confirmacao_aut_w,
				nm_medico_externo	      	= coalesce(nm_medico_externo_item_w,nm_medico_externo_w),
				crm_medico_externo	      	= coalesce(crm_medico_externo_item_w,crm_medico_externo_w),
				qt_idade_pac		      	= qt_idade_w,
				ie_forma_agendamento      	= ie_forma_agendamento_w,
				cd_procedencia		      	= cd_procedencia_w,
				nr_seq_motivo_agendamento 	= nr_seq_motivo_agendamento_w,
				nr_seq_lista_reab         	= nr_seq_lista_w,
				nr_seq_lista_espera		= coalesce(nr_seq_lista_espera_w, nr_seq_lista_espera),
				cd_setor_atendimento	  	= CASE WHEN cd_setor_atendimento_w=0 THEN  null  ELSE cd_setor_atendimento_w END ,
				nr_controle_sus           	= nr_controle_sus_w,
				cd_regulacao_sus       	  	= cd_regulacao_sus_w,
				cd_chave_regulacao_sus    	= cd_chave_regulacao_sus_w,
				cd_senha		  	= ds_senha_w,
				nr_seq_partic_ciclo_item	= coalesce(nr_seq_partic_ciclo_item_w,nr_seq_partic_item_ageint_w),
				nr_seq_captacao			= coalesce(nr_seq_captacao_w,nr_seq_captacao_ageint_w),
				nr_reserva			= nr_reserva_exame_w,
				nr_seq_opm 			= nr_seq_opm_w,
				nm_pessoa_contato		= substr(nm_contato_w,1,50),
				nr_seq_segurado	        	= nr_seq_segurado_w,
				nr_seq_agepaci 				= NR_SEQ_CIRURGIA_W,
				cd_tipo_acomodacao 		= cd_tipo_acomodacao_w,
				cd_cid				= cd_doenca_cid_w,
				cd_especialidade = cd_especialidade_ageint_w,
				nr_seq_person_name      = nr_seq_person_name_w,
				IE_AGENDA_WEB			= ie_agendamento_wsuite_w,
				cd_pessoa_indicacao     	= cd_pessoa_indicacao_w,
				nm_usuario_origem		= coalesce(nm_usuario_p, nm_usuario_origem)
			where	nr_sequencia	= nr_seq_agenda_w;
						
			commit;

			remover_marcacao_multitransf;

			CALL gravar_log_tasy(57412,'AgeCons Seq = '||nr_seq_ageint_p||' PF = '||cd_pessoa_fisica_w,'Tasy');
						
			update	agenda_integrada_item
			set	nr_seq_agenda_cons	= nr_seq_agenda_w,
				nr_classificacao_agend	= CASE WHEN nr_classificacao_agend = NULL THEN nr_seq_classif_int_w  ELSE nr_classificacao_agend END
			where	nr_sequencia		= nr_seq_ageint_item_w;
		    commit;
			if (ie_gerar_evolucao_schedule_w = 'S' and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') ) then
			cd_evolucao_w := clinical_notes_pck.gerar_soap(null, nr_seq_agenda_w, 'CONS_SCHD', NULL, 'P', 1, cd_evolucao_w, null, cd_pessoa_fisica_w);
			if (cd_evolucao_w IS NOT NULL AND cd_evolucao_w::text <> '') then
				CALL update_evolucao_soap(cd_evolucao_w,nr_seq_agenda_w,'AGENDA_CONSULTA');
			end if;
            end if;		
			select	max(dt_prevista_item)
			into STRICT	dt_prevista_item_w
			from	agenda_integrada_item
			where	nr_sequencia	= nr_seq_ageint_item_w;
			
			if (dt_prevista_item_w IS NOT NULL AND dt_prevista_item_w::text <> '') then
				select	max(dt_agenda)
				into STRICT	dt_agenda_w
				from	agenda_consulta
				where	nr_sequencia = nr_seq_agenda_w;
				
				update	agenda_integrada_item
				set	dt_prevista_item	= dt_agenda_w
				where	nr_sequencia		= nr_seq_ageint_item_w;
			end if;

			If (Ie_Agendamento_Coletivo_W = 'S') Then

				Update 	Agendamento_Coletivo
				Set 	Dt_Agenda = hr_Agenda_W,
					hr_inicio = hr_agenda_w,
					Nr_Minuto_Duracao = Nr_Minuto_Duracao_W, 
					Ie_Status_Agenda = CASE WHEN coalesce(Ie_Reserva_P, 'N')='N' THEN 'N'  ELSE 'R' END ,
          Nm_Usuario = Nm_Usuario_P,
          dt_atualizacao = clock_timestamp()
				where nr_seq_agenda_int = nr_seq_ageint_item_w;
			end if;
			
			update	agenda_integrada_prof_item
			set	ie_confirmado 		= 'S'
			where	nr_seq_agenda_item  	= nr_seq_ageint_item_w;
			
			update	ageint_marcacao_usuario
			set	ie_Gerado	= 'S'
			where	nr_sequencia	= nr_sequencia_w;
			
			CALL gerar_agenda_consulta_hist(cd_agenda_w,nr_seq_agenda_w,'A',nm_usuario_p,wheb_mensagem_pck.get_texto(793118), null, null, clock_timestamp());
			
			/*update	agenda_pac_opme
			set	nr_seq_agenda_cons	= nr_seq_agenda_w
			where	nr_seq_item		= nr_seq_ageint_item_w
			and	nr_seq_agenda_int	= nr_seq_ageint_p
			and	nr_seq_agenda_cons is null;*/
			
			open C04;
			loop
			fetch C04 into	
				nr_seq_exame_adic_w,
				ie_lado_adic_w,
				ds_cirurgia_w,
				nr_seq_topografia_adic_w,
				vl_coparticipacao_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				if (nr_seq_exame_adic_w IS NOT NULL AND nr_seq_exame_adic_w::text <> '') then
					SELECT * FROM obter_proc_tab_interno_conv(
						nr_seq_exame_adic_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_proc_adic_w, ie_origem_proc_adic_w, null, dt_agenda_p, null, null, null, null, null, null, null, null) INTO STRICT cd_proc_adic_w, ie_origem_proc_adic_w;
				end if;
				/*
				select	nvl(max(nr_seq_Agenda),0) + 1
				into	nr_seq_proc_Adic_w
				from	agenda_consulta_proc
				where	nr_sequencia	= nr_seq_Agenda_w;*/
				
				select	max(cd_medico_req)
				into STRICT	cd_medico_req_w
				from	agenda_integrada_item
				where	nr_sequencia = nr_seq_ageint_item_w;

        select  count(1)
        into STRICT    qt_procedimentos_w
        from    agenda_consulta_proc
        where   nr_seq_proc_interno = nr_seq_exame_adic_w
        and     nr_seq_agenda = nr_seq_agenda_w;

        if qt_procedimentos_w = 0 then
				
          insert into agenda_consulta_proc(nr_sequencia,
            nr_seq_agenda, 
            dt_Atualizacao,
            nm_usuario,
            cd_procedimento,
            ie_origem_proced,
            nr_seq_proc_interno,
            ie_executar_proc,
            qt_procedimento)
          values (nextval('agenda_consulta_proc_seq'), 
            nr_seq_Agenda_w,
            clock_timestamp(),
            nm_usuario_p,
            cd_proc_adic_w,
            ie_origem_proc_adic_w,
            nr_seq_exame_adic_w,
            'S',
            1);
          end if;
				end;
				--end;
			end loop;
			close C04;
			
		elsif (cd_tipo_Agenda_w	= 5) then
			if (ie_modo_gerar_reserva_w	= '1') then
				nr_reserva_serv_w	:= Ageint_Obter_Reserva_Pac(nr_seq_agenda_w, hr_agenda_w, cd_pessoa_fisica_w, cd_estab_agenda_w,'S');
			end if;

			if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
				ds_obs_agenda_w	:= substr(ds_observacao_w,1,2000);
			end if;
			if (ds_obs_item_w IS NOT NULL AND ds_obs_item_w::text <> '') then
				if (ds_obs_agenda_w IS NOT NULL AND ds_obs_agenda_w::text <> '') then
					ds_obs_agenda_w	:= substr(ds_obs_agenda_w || ' ' || ds_obs_item_w,1,2000);
				else
					ds_obs_agenda_w	:= substr(ds_obs_item_w,1,2000);
				end if;
			end if;
			
			select	max(nr_seq_exame_lab)
			into STRICT	nr_seq_exame_lab_w
			from	proc_interno
			where	nr_sequencia = nr_seq_proc_interno_w;
			
			if (nr_seq_exame_lab_w IS NOT NULL AND nr_seq_exame_lab_w::text <> '') then
				
				select	max(ie_tipo_convenio)
				into STRICT	ie_tipo_convenio_w
				from	convenio
				where	cd_convenio = cd_convenio_w;
				
				SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_lab_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_p, ie_tipo_convenio_w, nr_seq_proc_interno_w, null, cd_plano_w, cd_setor_exame_lab_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_exame_lab_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
			end if;
		
			if (nr_seq_lista_w IS NOT NULL AND nr_seq_lista_w::text <> '') then
				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_possui_proc_lista_w
				from	rp_lista_espera_modelo
				where	nr_sequencia = nr_seq_lista_w
				and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')
				and	(ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '')
				and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '');
				
				if (ie_possui_proc_lista_w = 'S') then
					select	cd_procedimento,
						nr_seq_proc_interno,
						ie_origem_proced
					into STRICT	cd_procedimento_w,
						nr_seq_proc_interno_w,
						ie_origem_proced_w
					from	rp_lista_espera_modelo
					where	nr_sequencia = nr_seq_lista_w;
				end if;
			end if;
			
			update	agenda_consulta
			set	cd_pessoa_fisica		= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN cd_pessoa_fisica_w  ELSE null END ,
				--nm_contato_w,
				ie_status_agenda		= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN 'N'  ELSE 'R' END ,
				nr_Telefone			= nr_telefone_w,
				cd_convenio			= cd_convenio_w,
				cd_Categoria			= cd_Categoria_w,
				cd_plano			= cd_plano_w,
				nr_doc_convenio			= nr_doc_convenio_w,
				cd_usuario_convenio		= cd_usuario_convenio_w, 
				dt_validade_carteira		= dt_validade_carteira_w,
				nm_usuario_acesso		 = NULL,
				cd_medico_req			= cd_medico_w,
				nr_minuto_duracao		= coalesce(nr_minuto_duracao_w, nr_minuto_duracao),
				ie_classif_agenda		= coalesce(ie_classif_agenda_w, ie_classif_agenda),
				ds_observacao			= substr(ds_obs_agenda_w,1,2000),
				nm_paciente			= CASE WHEN coalesce(ie_reserva_p, 'N')='N' THEN nm_paciente_w  ELSE wheb_mensagem_pck.get_texto(793119) END ,
				dt_nascimento_pac		= dt_nascimento_w,
				nr_seq_proc_interno		= nr_seq_proc_interno_w,
				cd_procedimento			= cd_procedimento_w,
				ie_origem_proced		= ie_origem_proced_w,
				cd_medico_solic			= cd_medico_req_w,
				dt_confirmacao			= dt_confirmacao_w,
				nm_usuario_confirm		= nm_usuario_confirm_w,
				ie_confirmacao_aut		= ie_confirmacao_aut_w,
				nr_reserva			= nr_reserva_serv_w,
				qt_idade_pac			= qt_idade_w,
				qt_diaria_prev			= qt_diaria_prev_w,
				ie_forma_agendamento		= ie_forma_agendamento_w,
				ie_tipo_atendimento		= ie_tipo_atendimento_w,
				nr_seq_exame			= nr_seq_exame_lab_w,
				nr_seq_lista_reab		= nr_seq_lista_w,
				nr_controle_sus           	= nr_controle_sus_w,
				cd_regulacao_sus       	  	= cd_regulacao_sus_w,
				cd_chave_regulacao_sus    	= cd_chave_regulacao_sus_w,
				cd_senha		  	= ds_senha_w,
				nr_seq_partic_ciclo_item	= coalesce(nr_seq_partic_ciclo_item_w,nr_seq_partic_item_ageint_w),
				nr_seq_captacao			= coalesce(nr_seq_captacao_w,nr_seq_captacao_ageint_w),
				nr_seq_opm 			= nr_seq_opm_w,
				nm_pessoa_contato		= substr(nm_contato_w,1,50),
				nr_seq_segurado	        	= nr_seq_segurado_w,
				nr_seq_lista_espera		= coalesce(nr_seq_lista_espera_w, nr_seq_lista_espera),
				cd_tipo_acomodacao 		= cd_tipo_acomodacao_w,
				cd_cid				= cd_doenca_cid_w,
				nr_seq_person_name      = nr_seq_person_name_w,
				ie_agenda_web			= ie_agendamento_wsuite_w,
				nm_usuario_origem		= coalesce(nm_usuario_p, nm_usuario_origem)
			where	nr_sequencia	= nr_seq_agenda_w;
			
			commit;

			remover_marcacao_multitransf;
			
			CALL gravar_log_tasy(57412,'AgeServ Seq = '||nr_seq_ageint_p||' PF = '||cd_pessoa_fisica_w,'Tasy');
			
			update	agenda_integrada_item
			set	nr_seq_agenda_cons	= nr_seq_agenda_w,
				nr_classificacao_agend	= CASE WHEN nr_classificacao_agend = NULL THEN nr_seq_classif_int_w  ELSE nr_classificacao_agend END
			where	nr_sequencia		= nr_seq_ageint_item_w;
		
			update	agenda_pac_sangue
			set	nr_seq_agenda_cons	= nr_seq_agenda_w
			where	nr_seq_item		= nr_seq_ageint_item_w;
			
			update	agenda_pac_desc_material
			set	nr_seq_agenda_cons	= nr_seq_agenda_w
			where	nr_seq_item		= nr_seq_ageint_item_w;
			
			update  agenda_pac_opme
			set     nr_seq_agenda_cons 	= nr_seq_agenda_w
			where	nr_seq_item		= nr_seq_ageint_item_w;
			
			update  agenda_cons_servico
			set 	nr_seq_agenda		= nr_seq_agenda_w
			where	nr_seq_item		= nr_seq_ageint_item_w;
			
			update	ageint_marcacao_usuario
			set	ie_Gerado	= 'S'
			where	nr_sequencia	= nr_sequencia_w;
			
			CALL gerar_agenda_consulta_hist(cd_agenda_w,nr_seq_agenda_w,'A',nm_usuario_p,wheb_mensagem_pck.get_texto(793118), null, null, clock_timestamp());
			
			open C04;
			loop
			fetch C04 into	
				nr_seq_exame_adic_w,
				ie_lado_adic_w,
				ds_cirurgia_w,
				nr_seq_topografia_adic_w,
				vl_coparticipacao_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				if (nr_seq_exame_adic_w IS NOT NULL AND nr_seq_exame_adic_w::text <> '') then
					SELECT * FROM obter_proc_tab_interno_conv(
						nr_seq_exame_adic_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_proc_adic_w, ie_origem_proc_adic_w, null, dt_agenda_p, null, null, null, null, null, null, null, null) INTO STRICT cd_proc_adic_w, ie_origem_proc_adic_w;
				end if;
				
				select	max(nr_seq_exame_lab)
				into STRICT	nr_seq_exame_lab_w
				from	proc_interno
				where	nr_sequencia = nr_seq_exame_adic_w;
				
				if (nr_seq_exame_lab_w IS NOT NULL AND nr_seq_exame_lab_w::text <> '') then
					
					select	max(ie_tipo_convenio)
					into STRICT	ie_tipo_convenio_w
					from	convenio
					where	cd_convenio = cd_convenio_w;
					
					SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_lab_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_p, ie_tipo_convenio_w, nr_seq_exame_adic_w, null, cd_plano_w, cd_setor_exame_lab_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_exame_lab_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
				end if;
				
				select	max(cd_medico_req)
				into STRICT	cd_medico_req_w
				from	agenda_integrada_item
				where	nr_sequencia = nr_seq_ageint_item_w;

        select  count(1)
        into STRICT    qt_procedimentos_w
        from    agenda_consulta_proc
        where   nr_seq_proc_interno = nr_seq_exame_adic_w
        and     nr_seq_agenda = nr_seq_agenda_w;

        if qt_procedimentos_w = 0 then
				
          insert into agenda_consulta_proc(nr_sequencia,
            nr_seq_agenda, 
            dt_Atualizacao,
            nm_usuario,
            cd_procedimento,
            ie_origem_proced,
            nr_seq_proc_interno,
            ie_executar_proc,
            nr_seq_exame,
            qt_procedimento)
          values (nextval('agenda_consulta_proc_seq'), 
            nr_seq_Agenda_w,
            clock_timestamp(),
            nm_usuario_p,
            cd_proc_adic_w,
            ie_origem_proc_adic_w,
            nr_seq_exame_adic_w,
            'S',
            nr_seq_exame_lab_w,
            1);
          end if;
				end;
				--end;
			end loop;
			close C04;
			
		end if;
	elsif (ie_encaixe_w	= 'S') then
	
		if (nr_seq_ageint_p IS NOT NULL AND nr_seq_ageint_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '')then
			CALL ageint_ins_anexo_email(nr_seq_ageint_p, nm_usuario_p, cd_estab_agenda_w);
		end if;
	
		select	max(ie_classif_agenda)
		into STRICT	ie_classif_agenda_encaixe_w
		from	ageint_encaixe_usuario
		where	cd_Agenda		= cd_agenda_w
		and	nr_seq_Ageint		= nr_seq_ageint_p
		and	nr_seq_ageint_item	= nr_seq_ageint_item_w
		and	dt_encaixe		= hr_Agenda_w;
		
		cd_setor_atendimento_w := 0;
		if (cd_tipo_agenda_w 	= 3) then
			select	coalesce(max(cd_setor_exclusivo), 0)
			into STRICT	cd_setor_atendimento_w
			from	agenda
			where	cd_agenda = cd_agenda_w;
		
      if (cd_setor_atendimento_w = 0) then
				select	coalesce(max(cd_setor_agenda), 0)
				into STRICT	cd_setor_atendimento_w
				from	agenda
				where	cd_agenda = cd_agenda_w;
			end if;	
			
			if (cd_setor_atendimento_w = 0) then
				select	coalesce(max(obter_setor_usuario(nm_usuario_p)), 0)
				into STRICT	cd_setor_atendimento_w
				;
			end if;

		elsif (cd_tipo_agenda_w = 2) then -- AGENDA EXAMES
			if (ie_regra_geracao_setor_agend_w <> 'N')then -- PARaMETRO 25 (Nao gera setor)
				if (ie_regra_geracao_setor_agend_w = 'U')then -- PARaMETRO 25 (Setor do usuario)
					select	coalesce(max(obter_setor_usuario(nm_usuario_p)), 0)
					into STRICT	cd_setor_atendimento_w
					;
				elsif (ie_regra_geracao_setor_agend_w = 'E') then -- PARAMETRO 25 (Setor exclusivo da agenda)
						select	coalesce(max(cd_setor_exclusivo), 0)
						into STRICT	cd_setor_atendimento_w
						from	agenda
						where	cd_agenda = cd_agenda_w;
				elsif (ie_regra_geracao_setor_agend_w = 'P') then -- PARAMETRO 25 (Setor exclusivo do procedimento)
						select	coalesce(max(cd_setor_exclusivo), 0)
						into STRICT	cd_setor_atendimento_w
						from 	procedimento
						where 	cd_procedimento = cd_procedimento_w;				
				end if;			
			end if;
		end if;
		
		if (cd_setor_atendimento_w = 0) then
			cd_setor_atendimento_w := null;
		end if;
		
	nr_Seq_encaixe_w := gerar_encaixe_ageint(cd_estabelecimento_w, cd_agenda_w, hr_agenda_w, hr_agenda_w, nr_minuto_duracao_w, cd_pessoa_fisica_w, cd_convenio_w, cd_categoria_w, nr_Seq_proc_interno_w, nm_usuario_p, cd_setor_atendimento_w, nr_seq_Ageint_item_w, nr_Seq_Ageint_p, cd_medico_marcacao_w, nr_Seq_encaixe_w, nm_usuario_confirm_encaixe_w, dt_confirm_encaixe_w, ie_classif_agenda_encaixe_w, cd_doenca_cid_w, nr_seq_segurado_w, ie_confirmacao_aut_w);
					
		remover_marcacao_multitransf;
		
		if (cd_tipo_Agenda_w	= 2) and (ie_vincula_atendimento_w = 'S') and (ie_gestao_exame_w = 'S') and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
			
			begin
			
			select 	nr_atendimento
			into STRICT  	nr_atendimento_w
			from 	prescr_medica
			where 	nr_prescricao = nr_prescricao_w  LIMIT 1;
			
			exception
			when others then
				nr_atendimento_w := null;
			end;
			

			if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
				CALL vincular_atend_agenda(cd_tipo_Agenda_w, nr_Seq_encaixe_w, nr_atendimento_w, nm_usuario_p);
			end if;
		end if;
		
                if (cd_tipo_agenda_w in (3,5)) then
                        update  agenda_consulta
                        set     nr_seq_partic_ciclo_item	= coalesce(nr_seq_partic_ciclo_item_w,nr_seq_partic_item_ageint_w),
                                nr_seq_captacao			= coalesce(nr_seq_captacao_w,nr_seq_captacao_ageint_w)
                        where   nr_sequencia = nr_Seq_encaixe_w;
                end if;

		update ageint_encaixe_usuario
		set	ie_Gerado	= 'S'
		where	cd_Agenda		= cd_agenda_w
		and	nr_seq_Ageint		= nr_seq_ageint_p
		and	nr_seq_ageint_item	= nr_seq_ageint_item_w
		and	dt_encaixe		= hr_Agenda_w;
	end if;
	
	enviar_comunic_ageint_mat(cd_estabelecimento_p,nr_seq_ageint_item_w,62,nm_usuario_p,'N');
	
	
	cd_convenio_w	:= cd_convenio_ageint_w;
	cd_categoria_w	:= cd_categoria_ageint_w;
	cd_plano_w	:= cd_plano_ageint_w;
	
	open C05;
	loop
	fetch C05 into	
		cd_beneficiario_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		
		/*aaschlote 01/04/2011 - OS -301356*/

		select	max(dt_agenda)
		into STRICT	dt_agenda_w
		from	agenda_consulta
		where	nr_sequencia	= nr_seq_agenda_w;
		
		if (coalesce(dt_agenda_w::text, '') = '') then
			dt_agenda_w	:= clock_timestamp();
		end if;	
		
		select	max(b.nr_sequencia)
		into STRICT	nr_seq_proposta_w
		from	pls_proposta_adesao		a,
			pls_proposta_beneficiario	b,
			agenda_integrada		c
		where	a.nr_sequencia		= b.nr_seq_proposta
		and	c.cd_pessoa_fisica	= b.cd_beneficiario
		and	c.nr_seq_prop_ades_pls	= a.nr_sequencia
		and	b.cd_beneficiario	= cd_beneficiario_w			
		and	a.ie_status in ('C','E','N'); -- C = Consistido / E = Liberado pelo vendedor/ N= Analise de Adesao;
		--and	a.nr_seq_status		= 2;
		if (nr_seq_proposta_w IS NOT NULL AND nr_seq_proposta_w::text <> '') then	
		
			CALL pls_gerar_analise_adesao(nr_seq_proposta_w, nm_usuario_p,'N');
	
			select	max(nr_sequencia)
			into STRICT	nr_seq_perito_w
			from	pls_analise_perito
			where	cd_pessoa_fisica = cd_medico_marcacao_w;
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_analise_w
			from	pls_analise_adesao
			where	cd_pessoa_fisica	= cd_beneficiario_w;
			
			CALL pls_vincular_perito(nr_seq_analise_w, nm_usuario_p, nr_seq_perito_w, dt_agenda_w);
		end if;
		end;
	end loop;
	close C05;
	
	if (nr_seq_lista_w IS NOT NULL AND nr_seq_lista_w::text <> '') then	
		select 	count(*)
		into STRICT	qt_agendamento_w
		from	agenda_consulta
		where	nr_seq_lista_reab = nr_seq_lista_w
		and		IE_STATUS_AGENDA <> 'C';

		update	rp_lista_espera_modelo
		set		ie_status = 'T'
		where	nr_sequencia = nr_seq_lista_w
		and	coalesce(NR_SESSOES,1) = qt_agendamento_w;
		
	end if;
	
	if (cd_tipo_agenda_w IS NOT NULL AND cd_tipo_agenda_w::text <> '') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		begin
		select  CASE WHEN cd_tipo_agenda_w=1 THEN 'CI' WHEN cd_tipo_agenda_w=2 THEN 'E' WHEN cd_tipo_agenda_w=3 THEN 'C' WHEN cd_tipo_agenda_w=4 THEN 'S'  ELSE 'T' END
		into STRICT	ie_tipo_agenda_w
		;
		
		select	max(obter_se_existe_evento_agenda(wheb_usuario_pck.get_cd_estabelecimento,'CAP',ie_tipo_agenda_w))
		into STRICT	ie_executa_evento_w
		;
		
		if (ie_executa_evento_w = 'S') and (ie_gestao_exame_w = 'S') and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
			begin
			CALL executar_evento_agenda('CAP',ie_tipo_agenda_w,nr_seq_agenda_w,wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario,null,null);
			end;
		end if;	
		end;
	end if;	

    if (nr_seq_solic_compl_w IS NOT NULL AND nr_seq_solic_compl_w::text <> '') then
    
        update    solicitacao_exame_compl
            set    cd_status = 20,
                nm_usuario = nm_usuario_p,
                dt_atualizacao = clock_timestamp()
            where    nr_sequencia = nr_seq_solic_compl_w;
    end if;

	end;
end loop;
close C01;

select	max(cd_pessoa_fisica)
into STRICT	cd_profissional_w
from	usuario
where	nm_usuario	= nm_usuario_p;

if (cd_profissional_w IS NOT NULL AND cd_profissional_w::text <> '') then
	update	agenda_integrada
	set	cd_profissional	= cd_profissional_w,
		nm_usuario_nrec	= nm_usuario_p
	where	nr_sequencia	= nr_seq_ageint_p;
end if;

CALL ageint_excluir_medico_item(nr_seq_ageint_p, nm_usuario_p);

delete	FROM w_ageint_dados_tela_marc
where	nr_seq_agenda_int 	= nr_seq_ageint_p
and		nm_usuario			= nm_usuario_p;

CALL atualiza_titular_convenio(nm_usuario_p,
			cd_convenio_w,
			cd_categoria_w,
			null,
			cd_plano_w,
			null,
			null,
			dt_validade_carteira_w);	

if (ie_agend_serv_cons_w = 'S') and (ie_gerar_controle_sessao_w = 'S') then
	CALL gerar_controle_sessao(nr_seq_ageint_p, nm_usuario_p);
end if;

if (cd_tipo_agenda_w IS NOT NULL AND cd_tipo_agenda_w::text <> '') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
	begin
	select  CASE WHEN cd_tipo_agenda_w=1 THEN 'CI' WHEN cd_tipo_agenda_w=2 THEN 'E' WHEN cd_tipo_agenda_w=3 THEN 'C' WHEN cd_tipo_agenda_w=4 THEN 'S'  ELSE 'T' END
	into STRICT	ie_tipo_agenda_w
	;
	
	select	max(obter_se_existe_evento_agenda(wheb_usuario_pck.get_cd_estabelecimento,'CAP',ie_tipo_agenda_w))
	into STRICT	ie_executa_evento_w
	;
	
	if (ie_executa_evento_w = 'S') and (ie_gestao_exame_w = 'S') and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
		begin
		CALL executar_evento_agenda('CAP',ie_tipo_agenda_w,nr_seq_agenda_w,wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario,null,null);
		end;
	end if;	
	end;
end if;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE confirmar_horarios_ageint ( cd_agenda_p bigint, dt_agenda_p timestamp, nr_seq_ageint_p bigint, ie_marc_no_show_p text, ie_reserva_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

