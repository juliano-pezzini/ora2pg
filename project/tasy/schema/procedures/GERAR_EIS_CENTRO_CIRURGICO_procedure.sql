-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_centro_cirurgico (dt_parametro_P timestamp, NM_USUARIO_P text) AS $body$
DECLARE

 
dt_referencia_w			timestamp;
dt_parametro_w			timestamp;
dt_parametro_fim_w			timestamp;
cd_estabelecimento_w			integer;
cd_Setor_w				integer;
cd_Unidade_w				varchar(20);
cd_Unidade_basica_w			varchar(10);
cd_Unidade_compl_w			varchar(10);
ie_dia_Semana_w			smallint;
cd_agenda_w				bigint;
qt_min_disp_w				integer	:= 720;
qt_min_Espera_w			integer;
qt_min_Preparo_w			integer;
qt_min_Cirurgia_w			integer;
qt_min_Monit_w			integer;
qt_min_Anestesia_w			integer;
qt_min_total_w			integer;
qt_min_maior_w			integer;
qt_minuto_regra_w		smallint:=0;

C01 CURSOR FOR 
	SELECT 	PKG_DATE_UTILS.start_of(a.dt_inicio_real,'dd', 0), 
			sum(coalesce(a.nr_min_duracao_real,0)), 
			coalesce(b.cd_setor_atendimento,0), 
			substr((b.cd_unidade_basica || ' '|| b.cd_unidade_compl),1,20) cd_unidade, 
			b.cd_unidade_basica, 
			b.cd_unidade_compl, 
			c.cd_estabelecimento, 
			sum(coalesce(CASE WHEN ie_tipo_tempo='E' THEN qt_minuto  ELSE 0 END ,0)), 
			sum(coalesce(CASE WHEN ie_tipo_tempo='P' THEN qt_minuto  ELSE 0 END ,0)), 
			sum(coalesce(CASE WHEN ie_tipo_tempo='M' THEN qt_minuto  ELSE 0 END ,0)), 
			sum(coalesce(CASE WHEN ie_tipo_tempo='A' THEN qt_minuto  ELSE 0 END ,0)) 
   FROM atendimento_paciente c, atend_paciente_unidade b, cirurgia a
LEFT OUTER JOIN cirurgia_tempo t ON (a.nr_cirurgia = t.nr_cirurgia)
WHERE a.dt_inicio_real between	dt_parametro_w and dt_parametro_fim_w and (a.dt_termino IS NOT NULL AND a.dt_termino::text <> '') and (a.dt_inicio_real IS NOT NULL AND a.dt_inicio_real::text <> '') and a.nr_atendimento 			= c.nr_atendimento and a.nr_atendimento 			= b.nr_atendimento and a.dt_entrada_unidade 		= b.dt_entrada_unidade  group by 	PKG_DATE_UTILS.start_of(a.dt_inicio_real,'dd', 0), 
			coalesce(b.cd_setor_atendimento,0), 
			(b.cd_unidade_basica || ' '|| b.cd_unidade_compl), 
			b.cd_unidade_basica, 
			b.cd_unidade_compl, 
			c.cd_estabelecimento;


BEGIN 
dt_parametro_fim_w	:= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_parametro_p, 'MONTH', 0), 1,0) - (1/86400);
dt_parametro_w		:= PKG_DATE_UTILS.start_of(dt_parametro_p,'month', 0);
 
delete from eis_centro_Cirurgico 
where dt_referencia between dt_parametro_w and dt_parametro_fim_w;
 
OPEN C01;
LOOP 
	FETCH C01 into 	dt_referencia_w, 
				qt_min_cirurgia_w, 
				cd_setor_w, 
				cd_unidade_w, 
				cd_unidade_basica_w, 
				cd_unidade_compl_w, 
				cd_estabelecimento_w, 
				qt_min_espera_w, 
				qt_min_preparo_w, 
				qt_min_monit_w, 
				qt_min_Anestesia_w;
   EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	qt_min_disp_w 			:= 0;
 
	select	obter_valor_maior(qt_min_Anestesia_w, qt_min_cirurgia_w) 
	into STRICT	qt_min_maior_w 
	;
	 
 
	select coalesce(max(cd_agenda),0) 
	into STRICT cd_agenda_w 
	from unid_atend_disp 
	where cd_setor_atendimento 	= cd_setor_w 
	 and cd_unidade_basica		= cd_unidade_basica_w 
	 and cd_unidade_compl		= cd_unidade_compl_w;
 
	select PKG_DATE_UTILS.start_of(dt_referencia_w,'dd', 0) - PKG_DATE_UTILS.start_of(dt_referencia_w,'d', 0) + 1 
	into STRICT ie_dia_semana_w 
	;
	 
	qt_minuto_regra_w := obter_regra_disp_sala_cirur(cd_setor_w,cd_unidade_basica_w,cd_unidade_compl_w,ie_dia_semana_w);
	 
	if (cd_agenda_w <> 0) then 
		begin 
		select (((hr_final - hr_inicial) - 
			(coalesce(hr_final_intervalo - hr_inicial_intervalo,0))) * 24 * 60) 
		into STRICT 	qt_min_disp_w 
		from agenda_horario 
		where cd_agenda 		= cd_agenda_w 
		 and dt_dia_semana	= ie_dia_semana_w;
		exception 
			when others then 
				qt_min_disp_w	:= 0;
		end;
	end if;
 
 
	if (qt_min_disp_w = 0) then 
		begin 
		if (coalesce(Obter_Se_Feriado(cd_estabelecimento_w,dt_referencia_w),0) > 0) then 
			qt_min_disp_w	:= qt_min_cirurgia_w;
		elsif (ie_dia_semana_w	= 1) then 
			qt_min_disp_w	:= qt_min_cirurgia_w;
		elsif (ie_dia_semana_w	= 7) then 
			if (qt_minuto_regra_w > 0) then 
				qt_min_disp_w	:= qt_minuto_regra_w;
			else	 
				qt_min_disp_w	:= campo_numerico(Obter_Valor_Param_Usuario(291,33, obter_perfil_ativo, nm_usuario_p,0));
			end if;	
		else 
			if (qt_minuto_regra_w > 0) then 
				qt_min_disp_w	:= qt_minuto_regra_w;
			else	 
				qt_min_disp_w	:= campo_numerico(Obter_Valor_Param_Usuario(291,20, obter_perfil_ativo, nm_usuario_p,0));
			end if;	
		end if;
		end;
	end if;
	 
	if (ie_dia_semana_w = 7) and (campo_numerico(Obter_Valor_Param_Usuario(291,33, obter_perfil_ativo, nm_usuario_p,0)) <> 360) then 
		qt_min_disp_w := campo_numerico(Obter_Valor_Param_Usuario(291,33, obter_perfil_ativo, nm_usuario_p,0));
		 
		if (campo_numerico(Obter_Valor_Param_Usuario(291,33, obter_perfil_ativo, nm_usuario_p,0)) = 0) then 
			qt_min_disp_w := qt_min_cirurgia_w;
		end if;
	end if;
	 
	if (ie_dia_semana_w = 7) and (qt_minuto_regra_w > 0) then 
		qt_min_disp_w	:= qt_minuto_regra_w;
	end if;
	 
	qt_min_total_w	:= (qt_min_espera_w + qt_min_preparo_w + qt_min_monit_w + qt_min_maior_w);
   	 
	insert into eis_centro_Cirurgico( 
		dt_referencia, 
		cd_estabelecimento, 
		cd_setor_atendimento, 
		cd_sala, 
		dt_atualizacao, 
		nm_usuario, 
		qt_min_disp, 
		qt_min_espera, 
		qt_min_preparo, 
		qt_min_cirurgia, 
		qt_min_monit, 
		qt_min_anestesia, 
		qt_min_total) 
	values ( 
		dt_referencia_w, 
		cd_estabelecimento_w, 
		cd_setor_w, 
		cd_unidade_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		coalesce(qt_min_disp_w,0), 
		qt_min_espera_w, 
		qt_min_preparo_w, 
		qt_min_cirurgia_w, 
		qt_min_monit_w, 
		qt_min_anestesia_w, 
		qt_min_total_w);
	end;
  END LOOP;
  CLOSE C01;
 
commit;
  
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_centro_cirurgico (dt_parametro_P timestamp, NM_USUARIO_P text) FROM PUBLIC;

