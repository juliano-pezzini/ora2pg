-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consis_aprov_pagto_multinivel ( nr_seq_lote_p bigint, nm_usuario_p text, ie_documento_p text) AS $body$
DECLARE


qt_nivel_usua_logado_w		bigint;
count_reg_w					bigint;
count_aprov_w				bigint;
dt_aprovacao_w				timestamp;
ds_historico_w				varchar(255);
qt2_w						bigint;
qt1_w						bigint;

nr_seq_regra_tit_pagar_w	conta_pagar_lib.nr_seq_regra_tit_pagar%type;
ie_nivel_lib_w				regra_lib_tit_pagar.ie_nivel_lib%type;
ie_nivel_menor_w			conta_pagar_lib.ie_nivel%type;


BEGIN

if (ie_documento_p = 'B') then

	select	coalesce(max(a.ie_nivel),0),
			max(dt_liberacao)
	into STRICT 	qt_nivel_usua_logado_w,
			dt_aprovacao_w
	from	conta_pagar_lib a
	where	a.nr_bordero		= nr_seq_lote_p
	and 	a.nm_usuario_lib	= nm_usuario_p;


	select	count(*)
	into STRICT 	count_reg_w
	from	conta_pagar_lib a
	where	a.nr_bordero		= nr_seq_lote_p
	and 	a.ie_nivel 	< qt_nivel_usua_logado_w;

	select	count(*)
	into STRICT 	count_aprov_w
	from	conta_pagar_lib a
	where	a.nr_bordero		= nr_seq_lote_p
	and 	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and 	a.ie_nivel 	< qt_nivel_usua_logado_w;

	if (count_reg_w <> count_aprov_w) then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(699318);

	end if;


elsif (ie_documento_p = 'P') then


	select	coalesce(max(a.ie_nivel),0),
			max(dt_liberacao)
	into STRICT 	qt_nivel_usua_logado_w,
			dt_aprovacao_w
	from	conta_pagar_lib a
	where	a.nr_seq_banco_escrit	= nr_seq_lote_p
	and 	a.nm_usuario_lib	= nm_usuario_p;


	select	count(*)
	into STRICT 	count_reg_w
	from	conta_pagar_lib a
	where	a.nr_seq_banco_escrit		= nr_seq_lote_p
	and 	a.ie_nivel 	< qt_nivel_usua_logado_w;

	select	count(*)
	into STRICT 	count_aprov_w
	from	conta_pagar_lib a
	where	a.nr_seq_banco_escrit		= nr_seq_lote_p
	and 	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and 	a.ie_nivel 	< qt_nivel_usua_logado_w;

	if (count_reg_w <> count_aprov_w) then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(699318);

	end if;

elsif (ie_documento_p = 'T') then

	select	coalesce(max(a.ie_nivel),0),
			max(a.dt_liberacao),
			max(a.nr_seq_regra_tit_pagar)
	into STRICT 	qt_nivel_usua_logado_w,
			dt_aprovacao_w,
			nr_seq_regra_tit_pagar_w
	from	conta_pagar_lib a
	where	a.nr_titulo		= nr_seq_lote_p
	and 	a.nm_usuario_lib	= nm_usuario_p;

	select	min(a.ie_nivel)
	into STRICT	ie_nivel_menor_w
	from	conta_pagar_lib a
	where	a.nr_titulo		= nr_seq_lote_p;

	if (nr_seq_regra_tit_pagar_w IS NOT NULL AND nr_seq_regra_tit_pagar_w::text <> '') then
		/*
		T = Exige liberacao de todos usuarios/perfils do nivel
		N = Exige liberacao de pelo menos um usuario/perfil de cada nivel
		*/
		select	max(a.ie_nivel_lib)
		into STRICT	ie_nivel_lib_w
		from	regra_lib_tit_pagar a
		where	a.nr_sequencia = nr_seq_regra_tit_pagar_w;

	end if;

	select	count(*)
	into STRICT 	count_reg_w
	from	conta_pagar_lib a
	where	a.nr_titulo		= nr_seq_lote_p
	and 	a.ie_nivel 	< qt_nivel_usua_logado_w;

	select	count(*)
	into STRICT 	count_aprov_w
	from	conta_pagar_lib a
	where	a.nr_titulo		= nr_seq_lote_p
	and 	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and 	a.ie_nivel 	< qt_nivel_usua_logado_w;

	if (count_reg_w <> count_aprov_w) and (ie_nivel_lib_w = 'T') then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(699318);

	elsif (count_aprov_w = 0) and (ie_nivel_lib_w = 'N') then
		/*Se for nivel igual, indica que o primeiro nivel, ai nao consiste. Somente se for nivel diferente*/

	    if (ie_nivel_menor_w <> qt_nivel_usua_logado_w) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(699318);
		end if;

	end if;

end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consis_aprov_pagto_multinivel ( nr_seq_lote_p bigint, nm_usuario_p text, ie_documento_p text) FROM PUBLIC;

