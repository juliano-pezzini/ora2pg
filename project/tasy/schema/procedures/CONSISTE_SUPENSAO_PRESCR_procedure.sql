-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_supensao_prescr ( nr_prescricao_p bigint, nr_sequencia_p bigint, nm_tabela_p text, ie_exame_p text, cd_estabelecimento_p bigint, ie_consistencia_p INOUT text, nm_usuario_p text, cd_funcao_p bigint) AS $body$
DECLARE


qt_registro_w					bigint := 0;
qt_registro_ww					bigint := 0;
ie_em_exame_w					varchar(1);
ie_susp_mat_exec_w				varchar(1);
ie_susp_mat_ADEP_w				varchar(1);
ie_consiste_coleta_w			varchar(1);
ie_consiste_em_adm_w			varchar(1);
ie_consiste_BE_w				varchar(1);
ie_consiste_mapa_w				varchar(1);
ie_susp_glicemia_w				varchar(1);
cd_estabelecimento_w			bigint;
cd_convenio_w					bigint;
cd_setor_atendimento_w			bigint;
ie_tipo_atendimento_w			bigint;
cd_setor_entrega_w				bigint;
cd_perfil_w						bigint;
nr_seq_exame_w					bigint;
cd_procedimento_w				bigint;
ie_origem_proced_w				bigint;
ie_status_execucao_w			varchar(5);
ie_consiste_hemoterapia_w		varchar(5);
ie_consistencia_w				varchar(5);
nr_seq_proc_interno_w			bigint;
cd_setor_execucao_w				bigint;
nr_seq_grupo_w					bigint;
cd_grupo_proc_prescr_w			bigint;
cd_especialidade_prescr_w		bigint;
cd_area_procedimento_prescr_w	bigint;
cd_tipo_procedimento_w			bigint;
nr_seq_grupo_sus_w				bigint;
nr_seq_subgrupo_w				bigint;
nr_seq_forma_org_w				bigint;
ie_susp_conta_definitivo_w		varchar(1);
qt_conta_def_w					bigint;
ie_perm_susp_proc_integ_w		varchar(1);


BEGIN

ie_susp_mat_exec_w := Obter_Param_Usuario(924, 57, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_susp_mat_exec_w);
ie_em_exame_w := Obter_Param_Usuario(924, 117, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_em_exame_w);
ie_susp_mat_ADEP_w := Obter_Param_Usuario(924, 222, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_susp_mat_ADEP_w);
ie_consiste_coleta_w := Obter_Param_Usuario(924, 326, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_coleta_w);
ie_consiste_em_adm_w := Obter_Param_Usuario(924, 330, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_em_adm_w);
ie_susp_glicemia_w := Obter_Param_Usuario(924, 407, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_susp_glicemia_w);
ie_consiste_BE_w := Obter_Param_Usuario(924, 660, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_BE_w);
ie_consiste_mapa_w := Obter_Param_Usuario(924, 749, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_mapa_w);
ie_consiste_hemoterapia_w := Obter_Param_Usuario(924, 822, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_hemoterapia_w);
ie_susp_conta_definitivo_w := Obter_Param_Usuario(924, 1025, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_susp_conta_definitivo_w);
ie_perm_susp_proc_integ_w := Obter_Param_Usuario(924, 1100, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_perm_susp_proc_integ_w);

if (nr_sequencia_p = 0) then
	begin
	if (ie_perm_susp_proc_integ_w = 'N') then
		select	count(*)
		into STRICT	qt_conta_def_w
		from	prescr_procedimento
		where	(dt_integracao IS NOT NULL AND dt_integracao::text <> '')
		and		nr_prescricao = nr_prescricao_p;

		if (qt_conta_def_w > 0) then
			--Não é possível realizar a suspensão pois a data de integração foi informada em exame(s)/procedimento(s) desta prescrição! Parâmetro [1100] da REP.
			CALL wheb_mensagem_pck.exibir_mensagem_abort(226792);
		end if;
	end if;

	if (ie_susp_conta_definitivo_w = 'N') then
		select	count(*)
		into STRICT	qt_conta_def_w
		from	conta_paciente		a,
			procedimento_paciente	b,
			prescr_procedimento	c
		where	a.nr_interno_conta		= b.nr_interno_conta
		and	b.nr_prescricao			= c.nr_prescricao
		and	b.nr_sequencia_prescricao	= c.nr_sequencia
		and	c.nr_prescricao			= nr_prescricao_p
		and	a.ie_status_acerto		= 2;
		if (qt_conta_def_w > 0) then
			--'A prescrição não pode ser suspensa por completo. Existem procedimentos que estão em contas com o status definitivo. Parâmetro[1025]'
			CALL wheb_mensagem_pck.exibir_mensagem_abort(194718);
		end if;
	end if;

	if (ie_susp_mat_exec_w = 'N') then
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and	cd_motivo_baixa <> 0;

		if (qt_registro_w > 0) THEN
			--'A prescrição não pode ser suspensa por completo. Existem materiais/medicamentos já atendidos pela farmácia. Parâmetro[57].');
			CALL wheb_mensagem_pck.exibir_mensagem_abort(177242);
		end if;
		end;
	end if;

	if (ie_susp_mat_ADEP_w = 'N') then
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	prescr_mat_hor b,
			prescr_material a
		where	a.nr_prescricao	= nr_prescricao_p
		and	a.nr_prescricao	= b.nr_prescricao
		and	(b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> '')
		and	Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';

		if (qt_registro_w > 0) then
			--A prescrição não pode ser suspensa por completo. Existem materiais/medicamentos já administrados no ADEP. Parâmetro[222]. Deve usar a opção de suspender por horário
			CALL wheb_mensagem_pck.exibir_mensagem_abort(177244);
		end if;
		end;
	end if;

	if (ie_consiste_hemoterapia_w = 'N') then
		select	count(*)
		into STRICT	qt_registro_w
		from	prescr_procedimento a
		where	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
		and		a.nr_prescricao	= nr_prescricao_p
		and		coalesce(substr(obter_status_solucao_prescr(3, nr_prescricao, nr_sequencia),1,3),'N') not in ('N','S');

		if (qt_registro_w > 0) then
			--A prescrição não pode ser suspensa por completo. Existem hemoterapias já administrados ou em andamento no ADEP. Parâmetro[822].
			CALL wheb_mensagem_pck.exibir_mensagem_abort(177245);
		end if;
	end if;
	if (ie_exame_p = 'N') then 	/*Não pemite*/
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	prescr_procedimento
		where	nr_prescricao		= nr_prescricao_p
		and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
		and	((coalesce(nr_seq_prot_glic::text, '') = '') or (ie_susp_glicemia_w = 'S'))




		and	((cd_motivo_baixa <> 0) or (ie_status_execucao = '20') or (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
		end;

	elsif (ie_exame_p = 'A') then		/*Permite ambos*/
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	prescr_procedimento
		where	nr_prescricao		= nr_prescricao_p
		and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
		and	((ie_status_execucao = '15') and (ie_status_execucao = '20') or (ie_em_exame_w = 'N'));
		end;

	elsif (ie_exame_p = 'S') then		/*Somente exames laboratoriais*/
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	prescr_procedimento
		where	nr_prescricao		= nr_prescricao_p
		and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
		and	coalesce(nr_seq_exame::text, '') = ''
		and	((coalesce(nr_seq_prot_glic::text, '') = '') or (ie_susp_glicemia_w = 'S'))




		and	((cd_motivo_baixa <> 0) or (ie_status_execucao = '20') or (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
		end;

	elsif (ie_exame_p = 'P') then		/*Somente exames não laboratoriais*/
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	prescr_procedimento
		where	nr_prescricao		= nr_prescricao_p
		and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
		and	cd_motivo_baixa		<> 0
		and	(nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> '')
		and	((cd_motivo_baixa <> 0) or (ie_status_execucao = '20') or
			 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
		end;

	elsif (ie_exame_p in ('E','X')) then		/*Somente exames que são executados automaticamente */
		begin
		select	cd_estabelecimento,
			obter_convenio_atendimento(nr_atendimento),
			cd_setor_atendimento,
			obter_tipo_atendimento(nr_atendimento),
			cd_setor_entrega
		into STRICT	cd_estabelecimento_w,
			cd_convenio_w,
			cd_setor_atendimento_w,
			ie_tipo_atendimento_w,
			cd_setor_entrega_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		exception
			when others then
				cd_estabelecimento_w := 1;
		end;
		cd_perfil_w := wheb_usuario_pck.get_cd_perfil;

		select	max(nr_seq_exame),
			max(cd_procedimento),
			max(ie_origem_proced),
			max(nr_seq_proc_interno),
			max(cd_setor_atendimento),
			max(ie_status_execucao)
		into STRICT	nr_seq_exame_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			cd_setor_execucao_w,
			ie_status_execucao_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_sequencia_p;

		nr_seq_grupo_w := null;

		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
			begin
			select	nr_seq_grupo
			into STRICT	nr_seq_grupo_w
			from	exame_laboratorio
			where	nr_seq_exame = nr_seq_exame_w;
			exception
				when others then
				nr_seq_grupo_w := null;
			end;
		end if;

		select	max(cd_grupo_proc),
			max(cd_especialidade),
			max(cd_area_procedimento),
			max(cd_tipo_procedimento)
		into STRICT	cd_grupo_proc_prescr_w,
			cd_especialidade_prescr_w,
			cd_area_procedimento_prescr_w,
			cd_tipo_procedimento_w
		from	estrutura_procedimento_v
		where	cd_procedimento 	= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;

		begin
		select	nr_seq_grupo,
			nr_seq_subgrupo,
			nr_seq_forma_org
		into STRICT	nr_seq_grupo_sus_w,
			nr_seq_subgrupo_w,
			nr_seq_forma_org_w
		from	sus_estrutura_procedimento_v
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;
		exception
			when others then
			nr_seq_grupo_sus_w	:= 0;
			nr_seq_subgrupo_w	:= 0;
			nr_seq_forma_org_w	:= 0;
		end;

		if (ie_exame_p = 'X') then
			select	count(*)
			into STRICT	qt_registro_w
			from	prescr_procedimento
			where	nr_prescricao	= nr_prescricao_p
			and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
			and	coalesce(ie_executado_automatico,'N') <> 'S'
			and	((cd_motivo_baixa <> 0) or (ie_status_execucao = '20') or
				 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));

		end if;
	end if;

	if (ie_consiste_coleta_w = 'N') then
		select 	CASE WHEN coalesce(max(dt_coleta)::text, '') = '' THEN  0  ELSE 1 END
		into STRICT	qt_registro_ww
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p;
	elsif (ie_consiste_coleta_w = 'P') then
		select 	CASE WHEN coalesce(max(dt_coleta)::text, '') = '' THEN  0  ELSE 1 END
		into STRICT	qt_registro_ww
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and	Obter_se_exibe_proced(nr_prescricao,nr_sequencia,ie_tipo_proced,'AP') = 'N'
		and	Obter_se_exibe_proced(nr_prescricao,nr_sequencia,ie_tipo_proced,'APH') = 'N'
		and	Obter_se_exibe_proced(nr_prescricao,nr_sequencia,ie_tipo_proced,'APC') = 'N';
	end if;

	if (qt_registro_ww > 0) then
		--A prescrição não pode ser suspensa. Existem exames já coletados. Parâmetro[326]'
		CALL wheb_mensagem_pck.exibir_mensagem_abort(177246);
	elsif (qt_registro_w > 0) then
		--A prescrição não pode ser suspensa por completo. Existem procedimentos/exames já executados ou em execução. Parâmetro[91, 117,114].');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(177247);
	end if;

	if (ie_consiste_mapa_w <> 'S') then
		select 	CASE WHEN coalesce(max(nr_sequencia)::text, '') = '' THEN  0  ELSE 1 END
		into STRICT	qt_registro_ww
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(ie_status_atend,0) >= 15;

		if (qt_registro_ww > 0) then
			--A prescrição não pode ser suspensa. Existem exames com mapa de trabalho impresso. Parâmetro[749]'
			CALL wheb_mensagem_pck.exibir_mensagem_abort(177248);
		end if;
	end if;

	select 	count(*)
	into STRICT	qt_registro_ww
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p
	and		ie_status_atend >= 35/*
	and		nr_sequencia = nr_sequencia_p*/
;

	if (qt_registro_ww > 0) then
		--Este exame já foi aprovado e não pode ser suspenso. Para realizar a suspensão do exame, desaprove o resultado do exame e em seguida realize a suspensão.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(321092);
	end if;

	end;
else
	begin

	if (upper(nm_tabela_p) = 'PRESCR_SOLUCAO')	then

		ie_consistencia_w := consistir_status_solucao_adep(1, nr_prescricao_p, nr_sequencia_p, ie_consiste_em_adm_w, ie_consistencia_w, cd_funcao_p); /* Rafael em 06/02/2007 = ADEP */
	end if;

	if (upper(nm_tabela_p) = 'PRESCR_MATERIAL') then
		begin
		ie_consistencia_w := consistir_status_solucao_adep(2, nr_prescricao_p, nr_sequencia_p, ie_consiste_em_adm_w, ie_consistencia_w, cd_funcao_p); /* Rafael em 10/07/2007 = ADEP */
		if (ie_susp_mat_exec_w = 'N') then
			begin
			select	count(*)
			into STRICT	qt_registro_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_sequencia_p
			and	cd_motivo_baixa <> 0;

			if (qt_registro_w > 0) then
				--Esse item não pode ser suspenso. Já foi atendido pela farmácia. Parâmetro[57].
				CALL wheb_mensagem_pck.exibir_mensagem_abort(177249);
			end if;
			end;
		end if;

		if (ie_susp_mat_ADEP_w = 'N') then
			begin
			select	count(*)
			into STRICT	qt_registro_w
			from	prescr_mat_hor b,
				prescr_material a
			where	a.nr_prescricao	= nr_prescricao_p
			and	a.nr_sequencia	= nr_sequencia_p
			and	a.nr_prescricao	= b.nr_prescricao
			and	a.nr_sequencia	= b.nr_seq_material
			and	(b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> '')
			and	Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S';

			if (qt_registro_w > 0) then
				--'Esse item não pode ser suspenso. Já foi administrado no ADEP. Parâmetro[222]. Deve usar a opção de suspender por horário.#@#@');
				CALL wheb_mensagem_pck.exibir_mensagem_abort(177250);
			end if;
			end;
		end if;

		end;
	elsif (upper(nm_tabela_p) = 'PRESCR_PROCEDIMENTO') or (upper(nm_tabela_p) = 'PRESCR_SOLIC_BCO_SANGUE') then
		begin

		if (ie_perm_susp_proc_integ_w = 'N') then
			select	count(*)
			into STRICT	qt_conta_def_w
			from	prescr_procedimento
			where	(dt_integracao IS NOT NULL AND dt_integracao::text <> '')
			and		nr_sequencia = nr_sequencia_p
			and		nr_prescricao = nr_prescricao_p;

			if (qt_conta_def_w > 0) then
				--Não é possível realizar a suspensão pois a data de integração foi informada em exame(s)/procedimento(s) desta prescrição! Parâmetro [1100] da REP.
				CALL wheb_mensagem_pck.exibir_mensagem_abort(226792);
			end if;
		end if;

		if (ie_susp_conta_definitivo_w = 'N') then
			select	count(*)
			into STRICT	qt_conta_def_w
			from	conta_paciente		a,
				procedimento_paciente	b,
				prescr_procedimento	c
			where	a.nr_interno_conta		= b.nr_interno_conta
			and	b.nr_prescricao			= c.nr_prescricao
			and	b.nr_sequencia_prescricao	= c.nr_sequencia
			and	c.nr_prescricao			= nr_prescricao_p
			and	c.nr_sequencia			= nr_sequencia_p
			and	a.ie_status_acerto		= 2;
			if (qt_conta_def_w > 0) then
				--'O item não pode ser suspenso pois a conta vinculada está com o status definitivo. Parâmetro[1025]'
				CALL wheb_mensagem_pck.exibir_mensagem_abort(194719);
			end if;
		end if;

		if (ie_consiste_hemoterapia_w = 'N') then
			select	count(a.nr_sequencia)
			into STRICT	qt_registro_w
			from	prescr_procedimento a
			where	substr(coalesce(obter_status_solucao_prescr(3,nr_prescricao,nr_sequencia), 'N'),1,5) not in ('S', 'N')
			and		coalesce(a.ie_suspenso, 'N') = 'N'
			and		(a.nr_seq_solic_sangue IS NOT NULL AND a.nr_seq_solic_sangue::text <> '')
			and		a.nr_sequencia		= nr_sequencia_p
			and		a.nr_prescricao		= nr_prescricao_p;

			if (qt_registro_w = 0) then
				select	count(a.nr_seq_procedimento)
				into STRICT	qt_registro_w
				from	prescr_proc_hor a,
						prescr_procedimento b
				where	a.nr_prescricao = b.nr_prescricao
				and		a.nr_prescricao = nr_prescricao_p
				and		a.nr_seq_procedimento = nr_sequencia_p
				and		a.nr_seq_procedimento = b.nr_sequencia
	   		    and		substr(coalesce(obter_status_solucao_prescr(3,b.nr_prescricao,b.nr_sequencia), 'N'),1,5) not in ('S', 'N')
				and		(b.nr_seq_solic_sangue IS NOT NULL AND b.nr_seq_solic_sangue::text <> '')
				and		(a.dt_fim_horario IS NOT NULL AND a.dt_fim_horario::text <> '');
			end if;

			if (qt_registro_w > 0) then
				--O item não pode ser suspenso pois já foi administrados ou está em andamento no ADEP. Parâmetro[822].#@#@');
				CALL wheb_mensagem_pck.exibir_mensagem_abort(177251);
			end if;
		end if;

		if (ie_exame_p = 'N') then 	/*Não pemite*/
			begin
			select	count(*)
			into STRICT	qt_registro_w
			from	prescr_procedimento
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_sequencia_p
			and	((coalesce(nr_seq_prot_glic::text, '') = '') or (ie_susp_glicemia_w = 'S'))
			and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
			and	((cd_motivo_baixa <> 0) or (ie_status_execucao = 20) or
			 	 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
			end;

		elsif (ie_exame_p = 'A') then		/*Permite ambos*/
			begin
			select	count(*)
			into STRICT	qt_registro_w
			from	prescr_procedimento
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_sequencia_p
			and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
			and	(ie_status_execucao = '15' AND ie_em_exame_w = 'N');
			end;

		elsif (ie_exame_p = 'S') then		/*Somente exames laboratoriais*/
			begin
			select	count(*)
			into STRICT	qt_registro_w
			from	prescr_procedimento
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_sequencia_p
			and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
			and	coalesce(nr_seq_exame::text, '') = ''
			and	((coalesce(nr_seq_prot_glic::text, '') = '') or (ie_susp_glicemia_w = 'N'))
			and	((cd_motivo_baixa <> 0) or
			 	 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
			end;

		elsif (ie_exame_p = 'P') then		/*Somente exames não laboratoriais*/
			begin
			select	count(*)
			into STRICT	qt_registro_w
			from	prescr_procedimento
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_sequencia_p
			and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
			and	(nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> '')
			and	((cd_motivo_baixa <> 0) or
				 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
			end;
		elsif (ie_exame_p in ('E','X')) then		/*Somente exames que são executados automaticamente */
			begin
			select	cd_estabelecimento,
				obter_convenio_atendimento(nr_atendimento),
				cd_setor_atendimento,
				obter_tipo_atendimento(nr_atendimento),
				cd_setor_entrega
			into STRICT	cd_estabelecimento_w,
				cd_convenio_w,
				cd_setor_atendimento_w,
				ie_tipo_atendimento_w,
				cd_setor_entrega_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;
			exception
				when others then
					cd_estabelecimento_w := 1;
			end;
			cd_perfil_w := wheb_usuario_pck.GET_CD_PERFIL;

			select	max(nr_seq_exame),
				max(cd_procedimento),
				max(ie_origem_proced),
				max(nr_seq_proc_interno),
				max(cd_setor_atendimento),
				max(ie_status_execucao)
			into STRICT	nr_seq_exame_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_proc_interno_w,
				cd_setor_execucao_w,
				ie_status_execucao_w
			from	prescr_procedimento
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_sequencia_p;

			nr_seq_grupo_w := null;

			if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
				begin
				select	nr_seq_grupo
				into STRICT	nr_seq_grupo_w
				from	exame_laboratorio
				where	nr_seq_exame = nr_seq_exame_w;
				exception
					when others then
					nr_seq_grupo_w := null;
				end;
			end if;

			select	cd_grupo_proc,
				cd_especialidade,
				cd_area_procedimento,
				cd_tipo_procedimento
			into STRICT	cd_grupo_proc_prescr_w,
				cd_especialidade_prescr_w,
				cd_area_procedimento_prescr_w,
				cd_tipo_procedimento_w
			from	estrutura_procedimento_v
			where	cd_procedimento 	= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w;

			begin
			select	nr_seq_grupo,
				nr_seq_subgrupo,
				nr_seq_forma_org
			into STRICT	nr_seq_grupo_sus_w,
				nr_seq_subgrupo_w,
				nr_seq_forma_org_w
			from	sus_estrutura_procedimento_v
			where	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w;
			exception
				when others then
				nr_seq_grupo_sus_w	:= 0;
				nr_seq_subgrupo_w	:= 0;
				nr_seq_forma_org_w	:= 0;
			end;

			if (ie_exame_p = 'X') and (cd_procedimento_w > 0) then
				if (ie_exame_p = 'X') then
					select	count(*)
					into STRICT	qt_registro_w
					from	prescr_procedimento
					where	nr_prescricao	= nr_prescricao_p
					and	nr_sequencia	= nr_sequencia_p
					and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
					and	coalesce(ie_executado_automatico,'N') <> 'S'
					and	((cd_motivo_baixa <> 0) or (ie_status_execucao = '20') or
						 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));

				end if;
			end if;
		end if;


		if (ie_consiste_coleta_w = 'N') then
			select	count(*)
			into STRICT	qt_registro_ww
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_p
			and	nr_sequencia = nr_sequencia_p
			and	(dt_coleta IS NOT NULL AND dt_coleta::text <> '')
			and	(nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> '');
		end if;

		if (qt_registro_ww > 0) then
			--'Este item não pode ser suspenso. A coleta deste exame já foi realizada. Parâmetro[326]'||'#@#@');
			CALL wheb_mensagem_pck.exibir_mensagem_abort(177252);
		elsif (qt_registro_w > 0) then
			--Esse item não pode ser suspenso. Já foi ou está sendo executado. Parâmetro[91, 117, 114].'
			CALL wheb_mensagem_pck.exibir_mensagem_abort(177253);
		end if;

		if (ie_consiste_mapa_w <> 'S') then
			select 	CASE WHEN coalesce(max(nr_sequencia)::text, '') = '' THEN  0  ELSE 1 END
			into STRICT	qt_registro_ww
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_p
			and	ie_status_atend >= 15
			and	nr_sequencia = nr_sequencia_p;

			if (qt_registro_ww > 0) then
				--A prescrição não pode ser suspensa. Existem exames com mapa de trabalho impresso. Parâmetro[749]'
				CALL wheb_mensagem_pck.exibir_mensagem_abort(177254);
			end if;
		end if;

		select 	count(*)
		into STRICT	qt_registro_ww
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and		coalesce(ie_status_atend,0) >= 35
		and		nr_sequencia = nr_sequencia_p;

		if (qt_registro_ww > 0) then
			--Este exame já foi aprovado e não pode ser suspenso. Para realizar a suspensão do exame, desaprove o resultado do exame e em seguida realize a suspensão.
			CALL wheb_mensagem_pck.exibir_mensagem_abort(321092);
		end if;

		end;
	end if;
	end;
end if;

ie_consistencia_p := ie_consistencia_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_supensao_prescr ( nr_prescricao_p bigint, nr_sequencia_p bigint, nm_tabela_p text, ie_exame_p text, cd_estabelecimento_p bigint, ie_consistencia_p INOUT text, nm_usuario_p text, cd_funcao_p bigint) FROM PUBLIC;

