-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gera_grupo_prescr_procedimento ( nr_prescricao_p bigint, ds_lista_seq_p INOUT text) AS $body$
DECLARE


nr_seq_exame_w		bigint;
nr_seq_prescr_w		bigint;
nr_seq_prescricao_w prescr_procedimento.nr_sequencia%type;
ds_lista_seq_w		varchar(255);			
nr_grupo_integracao_w	bigint;
nr_seq_grupo_w		bigint;
dt_prev_execucao_w	timestamp;
dt_prev_execucao_ant_w	timestamp;

nr_sequencia_w		prescr_proc_hor.nr_sequencia%type;
ie_grupa_horario_w	lab_parametro.ie_agrupa_ficha_fleury%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
				
C01 CURSOR FOR
	SELECT	nr_seq_exame,
		nr_sequencia,
		to_date(to_char(dt_prev_execucao,'dd/mm/yyyy hh24:mi')||':00','dd/mm/yyyy hh24:mi:ss')
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p
	and	coalesce(nr_grupo_integracao::text, '') = ''
	and	(obter_sigla_exame_fleury(nr_prescricao, nr_sequencia) IS NOT NULL AND (obter_sigla_exame_fleury(nr_prescricao, nr_sequencia))::text <> '')
	and	coalesce(dt_suspensao::text, '') = ''
	
union

	SELECT	nr_seq_exame,
		nr_sequencia,
		to_date(to_char(dt_prev_execucao,'dd/mm/yyyy hh24:mi')||':00','dd/mm/yyyy hh24:mi:ss')
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p
	and	coalesce(nr_grupo_integracao::text, '') = ''
	and	(obter_sigla_exame_fleury_diag(nr_prescricao, nr_sequencia) IS NOT NULL AND (obter_sigla_exame_fleury_diag(nr_prescricao, nr_sequencia))::text <> '')
	and	coalesce(dt_suspensao::text, '') = '' 
	order 	by 3, 2;

C02 CURSOR FOR
	SELECT	distinct nr_grupo_integracao
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p
	and	(nr_grupo_integracao IS NOT NULL AND nr_grupo_integracao::text <> '')
	and	coalesce(dt_suspensao::text, '') = ''
	order 	by nr_grupo_integracao;
	
c03 CURSOR FOR
	SELECT	a.nr_seq_exame,
    		b.nr_seq_procedimento nr_seq_prescr,
        	a.nr_sequencia nr_seq_prescricao,
        	b.nr_sequencia,
        	b.dt_horario
	from	prescr_procedimento a,
        prescr_proc_hor b
	where	a.nr_prescricao = b.nr_prescricao
	and	a.nr_sequencia = coalesce(b.nr_Seq_proc_origem, b.nr_seq_procedimento)
	and	a.nr_prescricao = nr_prescricao_p
	and	coalesce(a.nr_grupo_integracao::text, '') = ''
	and	coalesce(a.dt_suspensao::text, '') = ''
	and	(obter_sigla_exame_fleury(a.nr_prescricao, a.nr_sequencia) IS NOT NULL AND (obter_sigla_exame_fleury(a.nr_prescricao, a.nr_sequencia))::text <> '')
    order by nr_seq_prescr;
	
C04 CURSOR FOR
	SELECT	distinct nr_grupo_integracao
	from	prescr_proc_hor
	where	nr_prescricao = nr_prescricao_p
	and	(nr_grupo_integracao IS NOT NULL AND nr_grupo_integracao::text <> '')
	order 	by nr_grupo_integracao;
	

BEGIN

dt_prev_execucao_ant_w := null;
nr_seq_grupo_w := 0;

select	coalesce(max(a.cd_estabelecimento),wheb_usuario_pck.get_cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	prescr_medica a
where	a.nr_prescricao = nr_prescricao_p;

ie_grupa_horario_w	:= obter_dados_lab_parametro('AF', cd_estabelecimento_w);

if (ie_grupa_horario_w <> 'H') then
	open C01;
	loop
	fetch C01 into	
		nr_seq_exame_w,
		nr_seq_prescr_w,
		dt_prev_execucao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (coalesce(dt_prev_execucao_ant_w::text, '') = '') or (dt_prev_execucao_w <> dt_prev_execucao_ant_w) then
			
			dt_prev_execucao_ant_w := dt_prev_execucao_w;
			
			nr_seq_grupo_w := nr_seq_grupo_w + 1;
		end if;

		update	prescr_procedimento
		set	nr_grupo_integracao = nr_seq_grupo_w
		where	nr_sequencia = nr_seq_prescr_w
		and	nr_prescricao = nr_prescricao_p;
		
		end;
	end loop;
	close C01;
	
	commit;
	
	open C02;
	loop
	fetch C02 into	
		nr_grupo_integracao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ds_lista_seq_w := ds_lista_seq_w||nr_grupo_integracao_w||',';
		end;
	end loop;
	close C02;

else

	open C03;
	loop
	fetch C03 into	
		nr_seq_exame_w,
    		nr_seq_prescr_w,
    		nr_seq_prescricao_w,
		nr_sequencia_w,
		dt_prev_execucao_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		if (coalesce(dt_prev_execucao_ant_w::text, '') = '') or (dt_prev_execucao_w <> dt_prev_execucao_ant_w) then
			
			dt_prev_execucao_ant_w := dt_prev_execucao_w;
			
			nr_seq_grupo_w := nr_seq_grupo_w + 1;
		end if;

		update	prescr_proc_hor
		set	nr_grupo_integracao = nr_seq_grupo_w
		where	nr_sequencia = nr_sequencia_w;

    		update prescr_procedimento
    		set nr_grupo_integracao = nr_seq_grupo_w
    		where nr_sequencia = nr_seq_prescricao_w
    		and nr_prescricao = nr_prescricao_p;
		
		end;
	end loop;
	close C03;	
	
	commit;
	
	open C04;
	loop
	fetch C04 into	
		nr_grupo_integracao_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		ds_lista_seq_w := ds_lista_seq_w||nr_grupo_integracao_w||',';
		end;
	end loop;
	close C04;
	
end if;

ds_lista_seq_p := ds_lista_seq_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gera_grupo_prescr_procedimento ( nr_prescricao_p bigint, ds_lista_seq_p INOUT text) FROM PUBLIC;

