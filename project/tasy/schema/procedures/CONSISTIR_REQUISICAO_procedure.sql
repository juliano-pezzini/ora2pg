-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_requisicao ( nr_requisicao_p bigint, nm_usuario_p text, cd_local_destino_p bigint, cd_centro_custo_p bigint, varconsistematerialccusto_p text, somentetransf_farmacia_p text, varobrigamaterialpadr_p text, varconsistemateriallocal_p text, varconsisteestoquedisp_p text, consiste_devol_consumo_p text, VarPermiteEstoqueMax_p text, cd_operacao_estoque_p bigint, ds_erro_liberacao INOUT text) AS $body$
DECLARE


dt_liberacao_w			timestamp;						ds_erro_item_w			varchar(2000);		
cd_cgc_w			varchar(2000);					ie_tipo_requisicao_w		smallint;		
ie_tipo_local_w			varchar(5);				cd_material_w			integer;		
nr_item_w			double precision;						qt_material_requisitada_w		double precision;		
cd_local_estoque_w		smallint;					ie_situacao_w			varchar(01);
cd_estabelecimento_w		smallint;				cd_estabelecimento_ccusto_w	smallint;
qt_conv_estoque_consumo_w	double precision;			qt_consumo_w			double precision;
qt_material_requisicao_w		double precision;		cd_conta_contabil_w		varchar(20);				
ds_justificativa_w			varchar(1);			ie_obriga_justif_w			varchar(1);			
ie_consiste_just_w			varchar(1);			cd_centro_custo_w			integer;
nr_seq_aprovacao_w		integer;					nr_seq_item_w			integer;
ie_urgente_w			varchar(1);				cd_perfil_ativo_w			integer;
cd_processo_aprov_w		bigint;					
cd_responsavel_w			varchar(10);			nr_sequencia_w			bigint;
ie_responsavel_w			varchar(01);			cd_cargo_w			bigint	:= 0;
nm_usuario_regra_w		varchar(15);				
nr_items_sem_aprov_w		bigint;				cd_unidade_medida_consumo_w	varchar(30);
qt_existe_w			bigint;						ie_permite_centro_custo_w		varchar(1);
nr_seq_regra_w			bigint;					nr_seq_regra_ci_w			bigint;
nr_seq_justificativa_w		bigint;				ds_titulo_w			varchar(80);		
nr_seq_ci_w			bigint;						ds_comunicado_w			varchar(4000);				
ie_ci_lida_w			varchar(1);				ie_valor_gerar_item_Req_w		varchar(1);		
valor_gerar_item_w			integer;			cd_setor_entrega_w		integer;
dt_requisicao_w			timestamp;						ie_consiste_regra_w		varchar(1);
ie_geracao_w			varchar(255);				nm_usuario_destino_w		varchar(255);
cd_setor_atendimento_w		integer;				ie_obriga_observacao_w		varchar(1);
ds_observacao_w			varchar(255);				nr_seq_regra_motivo_w		bigint;
ie_situacao_operacao_w		varchar(1);			ie_consiste_transferencia_w		varchar(1);
cd_conta_cont_item_w		varchar(14);			cd_cgc_fornec_item_w		varchar(14);		
nr_nivel_aprovacao_w2		bigint;				nr_nivel_aprovacao_w		bigint;	
cd_perfil_w			varchar(1);					ie_momento_gerar_vl_item_Req_w	varchar(1);
nr_seq_justif_item_w								item_requisicao_material.nr_seq_justificativa%type;
ie_regra_gerar_solic_req_w							parametro_compras.ie_regra_gerar_solic_req%type;
nr_solic_compra_w									solic_compra.nr_solic_compra%type;
ie_atualiza_conta_contabil_w		varchar(1);
ie_consiste_saldo_gpi_w             varchar(1) := 'N';
ie_requisicao_transferencia_w		varchar(1) := 'N';
ie_consiste_vl_empenho_w	varchar(5);
vl_orcado_w			ctb_orcamento.vl_orcado%type;
vl_empenho_w			ctb_orcamento.vl_orcado%type;
nr_seq_mes_ref_w		ctb_mes_ref.nr_sequencia%type;
ds_consistencia_w		requisicao_mat_consist.ds_consistencia%type;
ds_obs_consist_w		requisicao_mat_consist.ds_observacao%type;

/* Se tiver setor na regra, envia CI para os setores */
		/* Campos da regra Usuario da Regra */

ds_setor_adicional_w		varchar(2000) := '';	cd_setor_regra_usuario_w		integer;
ie_tipo_conta_w			integer;					cd_conta_contabil_ww		varchar(20);
cd_estab_local_w		smallint;
ie_aprovacao_nivel_w			varchar(1);
vl_minimo_w				processo_aprov_resp.vl_minimo%type;
vl_maximo_w				processo_aprov_resp.vl_maximo%type;
qt_minimo_aprovador_w			processo_aprov_resp.qt_minimo_aprovador%type;
qt_itens_regra_w			processo_aprov_resp.qt_itens_regra%type;
qt_intervalo_regra_w			processo_aprov_resp.qt_intervalo_regra%type;

c01 CURSOR FOR
SELECT	cd_material,
	nr_sequencia,
	qt_material_requisitada,
	ds_justificativa,
	cd_unidade_medida,
	coalesce(cd_conta_contabil,0),
	nr_seq_justificativa
from	item_Requisicao_material
where	nr_requisicao = nr_requisicao_p;

c02 CURSOR FOR
SELECT	b.nr_seq_aprovacao,
	b.cd_material,
	b.nr_sequencia,
	a.cd_centro_custo,
	a.cd_local_estoque,
	b.cd_conta_contabil,
	b.cd_cgc_fornecedor
from 	requisicao_material a,
	item_requisicao_material b,
	estrutura_material_v e
where	a.nr_requisicao = b.nr_requisicao
and	b.cd_material = e.cd_material
and 	coalesce(a.dt_aprovacao::text, '') = ''
and	a.nr_requisicao = nr_requisicao_p
order by	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material;

c03 CURSOR FOR
SELECT	nr_sequencia,
	ie_responsavel,
	cd_cargo,
	nm_usuario_regra,
	nr_nivel_aprovacao,
	vl_minimo,
	vl_maximo,
	qt_minimo_aprovador,
	qt_itens_regra,
	qt_intervalo_regra
from	processo_aprov_resp
where	cd_processo_aprov	= cd_processo_aprov_w
and	ie_requisicao		= 'S'
order by	nr_sequencia;

c04 CURSOR FOR
SELECT	distinct nr_seq_aprovacao
from	item_requisicao_material
where	nr_requisicao = nr_requisicao_p
and	(nr_seq_aprovacao IS NOT NULL AND nr_seq_aprovacao::text <> '');

c05 CURSOR FOR
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento
from	regra_envio_comunic_usu a
where	a.nr_seq_evento = nr_seq_regra_ci_w;


BEGIN

delete from requisicao_mat_consist
where nr_requisicao = nr_requisicao_p;

select	dt_liberacao,
	cd_local_estoque,
	cd_centro_custo,
	cd_estabelecimento,
	ie_urgente,
	obter_perfil_ativo,
	cd_setor_entrega,
	cd_setor_atendimento,
	dt_solicitacao_requisicao,
	ie_geracao
into STRICT	dt_liberacao_w,
	cd_local_estoque_w,
	cd_centro_custo_w,
	cd_estabelecimento_w,
	ie_urgente_w,
	cd_perfil_ativo_w,
	cd_setor_entrega_w,
	cd_setor_atendimento_w,
	dt_requisicao_w,
	ie_geracao_w
from	requisicao_material
where	nr_requisicao = nr_requisicao_p;

ie_consiste_regra_w		:= obter_valor_param_usuario(919, 33, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
ie_valor_gerar_item_Req_w		:= obter_valor_param_usuario(919, 82, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
ie_momento_gerar_vl_item_Req_w	:= obter_valor_param_usuario(919, 83, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
ie_consiste_transferencia_w		:= obter_valor_param_usuario(919, 70, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
ie_atualiza_conta_contabil_w		:= obter_valor_param_usuario(919, 15, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
ie_consiste_saldo_gpi_w         := obter_valor_param_usuario(919, 126, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
ie_consiste_vl_empenho_w	:= coalesce(obter_valor_param_usuario( cd_funcao_p => 925, nr_sequencia_p => 121, cd_perfil_p => Obter_perfil_ativo,
								nm_usuario_p => nm_usuario_p, cd_estabelecimento_p => cd_estabelecimento_w),'N');

select	ie_tipo_requisicao
into STRICT	ie_tipo_requisicao_w
from	operacao_estoque
where	cd_operacao_estoque = cd_operacao_estoque_p;

select	ie_situacao
into STRICT	ie_situacao_operacao_w
from	operacao_Estoque
where	cd_operacao_estoque = cd_operacao_estoque_p;


begin
select	cd_estabelecimento
into STRICT	cd_estab_local_w
from	local_estoque
where	cd_local_estoque = cd_local_estoque_w;
exception
when others then
	cd_estab_local_w := 0;
end;

select	coalesce(max(ie_tipo_local),0)
into STRICT	ie_tipo_local_w
from	local_estoque
where	cd_local_estoque = cd_local_destino_p;

/* Tratamento transferencia entre locais Mexico */

if (ie_tipo_requisicao_w in (2,21)) then
	ie_requisicao_transferencia_w := 'S';
else
	ie_requisicao_transferencia_w := obter_se_transf_local_mexico(
							cd_estabelecimento_p	=> cd_estabelecimento_w,
							cd_operacao_estoque_p	=> cd_operacao_estoque_p);
end if;

if (coalesce(dt_liberacao_w::text, '') = '') then	
	if (ie_tipo_requisicao_w not in (1,2,3,8,21) and (obter_se_contido(cd_operacao_estoque_p, obter_valor_param_usuario(919, 31, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)) = 'N')) then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301903), /*'As operacoes devem ser do tipo Consumo ou Transferencia.',*/
			'C',
			Wheb_mensagem_pck.get_Texto(301904), /*'Verificar o campo Tipo operacao, no cadastro da operacao de estoque.'*/
			nm_usuario_p);

	elsif (coalesce(cd_local_destino_p,0) > 0) and (coalesce(cd_centro_custo_p,0) > 0) then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301905), /*'Deve ser informado somente Local de estoque ou Centro de custo.',*/
			'C',null, nm_usuario_p);

	elsif (ie_requisicao_transferencia_w = 'S') and (coalesce(cd_local_destino_p,0) = 0) then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301906), /*'Quando a operacao e de Transferencia, deve ser informado o Local destino.',*/
			'C',null, nm_usuario_p);

	elsif (ie_requisicao_transferencia_w = 'S') and (cd_local_destino_p = cd_local_estoque_w) then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301907),/* 'Quando a operacao e de Transferencia, o Local orig/dest deve ser diferente do Local baixa estoque.',*/
			'C',null, nm_usuario_p);

	elsif (ie_requisicao_transferencia_w = 'N') and (coalesce(cd_local_destino_p,0) <> 0) then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301908), /*'Quando a operacao e de Consumo, nao deve ser informado o Local destino.',*/
			'C',null, nm_usuario_p);

	elsif (ie_requisicao_transferencia_w = 'N') and (coalesce(cd_centro_custo_p,0) = 0) then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301909),/* 'Esta operacao exige informar o Centro de custo.',*/
			'C',null, nm_usuario_p);

	elsif (SomenteTransf_Farmacia_p = 'S') and (ie_requisicao_transferencia_w = 'S') and (ie_tipo_local_w not in (0,1)) then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301910), /*'Este Usuario somente pode fazer Transferencias com o local de estoque do tipo Farmacia central.',*/
			'C',
			Wheb_mensagem_pck.get_Texto(301911), /*'Verifique o parametro [18] e o tipo de local no cadastro do Local de estoque.',*/
			nm_usuario_p);

	elsif (ie_situacao_operacao_w = 'I') then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301912), /*'Esta operacao de estoque esta inativa.',*/
			'C',null, nm_usuario_p);

	end if;
end if;

if (coalesce(cd_centro_custo_p,0) > 0) then
	select	coalesce(max(ie_situacao),'I'),
		coalesce(max(cd_estabelecimento), cd_estabelecimento_w)
	into STRICT	ie_situacao_w,
		cd_estabelecimento_ccusto_w
	from	centro_custo
	where	cd_centro_custo	= cd_centro_custo_p;
	if (ie_situacao_w <> 'A') then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301913),/* 'O Centro de custo informado esta inativo ou nao existe no cadastro.',*/
			'C',null, nm_usuario_p);

	elsif (cd_estabelecimento_ccusto_w <> cd_estabelecimento_w) then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301914), /*'O estabelecimento do Centro de custo e diferente do estabelecimento da requisicao.',*/
			'C',null, nm_usuario_p);
	end if;
end if;

/*Verifica estabelecimento da requisicao, com o estabelecimento do local da requisicao*/

if (cd_estab_local_w > 0) and (cd_estab_local_w <> cd_estabelecimento_w) then
	CALL gravar_consistencia_requisicao(
		nr_requisicao_p, null,'0',
		Wheb_mensagem_pck.get_Texto(325681), /*'O estabelecimento do local de estoque da requisicao e diferente do estabelecimento da requisicao!',*/
		'C',null, nm_usuario_p);
end if;

begin
select	cd_estabelecimento
into STRICT	cd_estab_local_w
from	local_estoque
where	cd_local_estoque = cd_local_destino_p;
exception
when others then
	cd_estab_local_w := 0;
end;

/*Verifica estabelecimento da requisicao, com o estabelecimento do local da requisicao*/

if (cd_estab_local_w > 0) and (cd_estab_local_w <> cd_estabelecimento_w) then
	CALL gravar_consistencia_requisicao(
		nr_requisicao_p, null,'0',
		Wheb_mensagem_pck.get_Texto(325682), /*'O estabelecimento do local de estoque destino da requisicao e diferente do estabelecimento da requisicao!*/
		'C',null, nm_usuario_p);
end if;

select	coalesce(max(a.cd_conta_contabil), 'X')
into STRICT	cd_conta_contabil_w
from	item_requisicao_material a,
	requisicao_material b
where	a.nr_requisicao	= nr_requisicao_p
and	a.nr_requisicao	= b.nr_requisicao
and (substr(obter_se_conta_vigente(a.cd_conta_contabil, b.dt_solicitacao_requisicao),1,1) = 'N');

if (cd_conta_contabil_w <> 'X') then
	CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null,'0',
			Wheb_mensagem_pck.get_Texto(301915, 'CD_CONTA_CONTABIL_W='|| CD_CONTA_CONTABIL_W),/*'A conta contabil ' || cd_conta_contabil_w || ' esta fora da data de vigencia.',*/
			'C',null, nm_usuario_p);
end if;

ie_consiste_just_w := coalesce(obter_valor_param_usuario(919, 39, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w), 'N');

select	coalesce(max(nr_seq_justificativa), 0)
into STRICT	nr_seq_justificativa_w
from	requisicao_material
where	nr_requisicao	= nr_requisicao_p;
if (nr_seq_justificativa_w = 0) and (ie_consiste_just_w = 'S') then
	begin
	SELECT * FROM obter_regra_just_req(nr_requisicao_p, nr_seq_regra_w, ie_obriga_justif_w) INTO STRICT nr_seq_regra_w, ie_obriga_justif_w;
	if (ie_obriga_justif_w = 'S') then
		CALL gravar_consistencia_requisicao(
			nr_requisicao_p, null, '0',
			Wheb_mensagem_pck.get_Texto(301916),/* 'A requisicao nao possui justificativa informada.',*/
			'C',
			Wheb_mensagem_pck.get_Texto(301917, 'NR_SEQ_REGRA_W='|| NR_SEQ_REGRA_W),/*Verifique a regra: Regras de justificativa para requisicao[' || nr_seq_regra_w || ']',*/
			nm_usuario_p);
	end if;
	end;
end if;

/*Verifica se obriga informar observacao de acordo com a regra do motivo*/

select	nvl(ds_observacao,' ')
into	ds_observacao_w
from	requisicao_material
where	nr_requisicao = nr_requisicao_p;

if	(nvl(ds_observacao_w,' ') = ' ') then

	select	max(ie_justificativa),
		max(nr_sequencia)
	into	ie_obriga_observacao_w,
		nr_seq_regra_motivo_w
	from	motivo_justif_req_regra
	where	nr_seq_motivo 		= nr_seq_justificativa_w
	and	ie_justificativa 	= 'S'
	and	nvl(cd_operacao_Estoque,cd_operacao_estoque_p) 	= cd_operacao_estoque_p;

	if	(ie_obriga_observacao_w = 'S') then
		gravar_consistencia_requisicao(
			nr_requisicao_p, null, '0',
			Wheb_mensagem_pck.get_Texto(301918),/* 'A requisicao nao possui observacao informada.',*/
			'C',
			Wheb_mensagem_pck.get_Texto(301919, 'NR_SEQ_REGRA_MOTIVO_W='|| NR_SEQ_REGRA_MOTIVO_W),/*'Verifique a regra: Regra para motivos [' || nr_seq_regra_motivo_w || '] (Motivos de justificativa para requisicao)',*/
			nm_usuario_p);
	end if;
end if;

open 	c01;
loop
fetch c01 into
	cd_material_w,
	nr_item_w,
	qt_material_requisitada_w,
	ds_justificativa_w,
	cd_unidade_medida_consumo_w,
	cd_conta_contabil_ww,
	nr_seq_justif_item_w;
exit when c01%notfound;
	if C01%found then
		begin

		/* Atualiza a conta contabil do material */

		if	(ie_atualiza_conta_contabil_w = 'S') then
			begin
			ie_tipo_conta_w := 3;
			if	(ie_requisicao_transferencia_w = 'S') then
				ie_tipo_conta_w := 2;
			end if;

			define_conta_material(	cd_estabelecimento_w,
						cd_material_w,
						ie_tipo_conta_w, 0,
						cd_setor_atendimento_w, '0', 0, 0, 0, 0,
						cd_local_estoque_w,
						cd_operacao_estoque_p,
						sysdate,
						cd_conta_contabil_w,
						cd_centro_custo_w,
						null);

			if	(nvl(cd_conta_contabil_w,0) <> cd_conta_contabil_ww) then
				begin
				update	item_requisicao_material
				set	cd_conta_contabil	= cd_conta_contabil_w
				where	nr_requisicao		= nr_requisicao_p
				and	nr_sequencia		= nr_item_w;
				end;
			end if;
			end;
		end if;

		if	(ie_momento_gerar_vl_item_Req_w = 'L') and
			(ie_valor_gerar_item_Req_w <> 'N') then
			/*Gera o valor unitario como Valor ultima Compra*/

			begin
			if	(ie_valor_gerar_item_Req_w = 'U') then

				select	to_number(sup_obter_valores_material_req(nr_requisicao_p,nr_item_w,'U'))
				into	valor_gerar_item_w
				from	dual;
			else
				/*Gera o valor unitario como Custo medio*/

				if 	(ie_valor_gerar_item_Req_w = 'C') then

					select	to_number(sup_obter_valores_material_req(nr_requisicao_p,nr_item_w,'C'))
					into	valor_gerar_item_w
					from	dual;
				end if;
			end if;

			update	item_requisicao_material
			set	vl_unit_previsto 	= valor_gerar_item_w
			where	nr_requisicao	= nr_requisicao_p
			and	nr_sequencia	= nr_item_w;

			end;
		end if;


		if	((ds_justificativa_w is null) and
			(nr_seq_justif_item_w is null)) and
			(ie_consiste_just_w = 'S') then
			begin
			obter_regra_just_requisicao(nr_requisicao_p, cd_material_w, nr_seq_regra_w, ie_obriga_justif_w);
			if	(ie_obriga_justif_w = 'S') then
				gravar_consistencia_requisicao(
					nr_requisicao_p, cd_material_w,'1',
					Wheb_mensagem_pck.get_Texto(301921), /*'O item nao possui a justificativa informada.',*/
					'C',
					Wheb_mensagem_pck.get_Texto(301922, 'NR_SEQ_REGRA_W='|| NR_SEQ_REGRA_W),/*'Verifique a regra: Regras de justificativa para itens da requisicao[' || nr_seq_regra_w || ']',*/
					nm_usuario_p);
			end if;
			end;
		end if;
		
		
		if	(ie_consiste_regra_w = 'L') or
			(ie_consiste_regra_w = 'T') or
			(ie_consiste_regra_w = 'J') or
			(ie_consiste_regra_w = 'K') then
			begin
			if	(substr(obter_regra_req_permissao(cd_local_destino_p, cd_operacao_estoque_p, cd_local_estoque_w, cd_centro_custo_w, cd_perfil_ativo_w, nm_usuario_p, cd_material_w, ie_urgente_w, dt_requisicao_w, cd_setor_entrega_w, cd_estabelecimento_w),1,1) = 'N') then
				gravar_consistencia_requisicao(
					nr_requisicao_p, cd_material_w, '1',
					Wheb_mensagem_pck.get_Texto(301923), /*'Sem permissao para requisitar este item.',*/
					'C', null, nm_usuario_p);
			end if;
			end;
		end if;

		select	count(*)
		into	qt_existe_w
		from	regra_req_permissao_qtde
		where	nvl(ie_requisicao_manual,'S') = 'S';

		if	(qt_existe_w > 0) then

			if	(obter_se_permite_qt_req_dia(nr_requisicao_p) = 'N') then
				gravar_consistencia_requisicao(
					nr_requisicao_p, null, '1',
					Wheb_mensagem_pck.get_Texto(301924), /*'Ja atingiu a quantidade maxima de requisicoes diarias para este local. Verifique as Regras para quantidade de requisicoes diarias.',*/
					'C', null, nm_usuario_p);
			end if;
		end if;

		select	count(*)
		into	qt_existe_w
		from	regra_req_permissao_qtde
		where	nvl(ie_requisicao_auto,'S') = 'S';

		if	(qt_existe_w > 0) and
			(ie_geracao_w in ('A','AC')) then

			if	(obter_se_permite_req_dia_aut(cd_estabelecimento_w, cd_local_estoque_w, cd_local_destino_p) = 'N') then
				gravar_consistencia_requisicao(
					nr_requisicao_p, cd_material_w, '1',
					Wheb_mensagem_pck.get_Texto(301925), /*'Ja atingiu a quantidade maxima de requisicoes diarias para este material. Verifique as Regras para quantidade de requisicoes diarias.',*/
					'C', null, nm_usuario_p);
			end if;
		end if;


		Consistir_item_Requisicao(
				cd_material_w,
				nr_requisicao_p,
				VarConsisteMaterialCCusto_p,
				VarObrigaMaterialpadr_p,
				VarConsisteMaterialLocal_p,
				VarConsisteEstoqueDisp_p,
				VarPermiteEstoqueMax_p,
				'S',
				nm_usuario_p,
				'N',
				cd_cgc_w,
				ds_erro_item_w);

 		if 	(qt_material_requisitada_w <= 0) then
			gravar_consistencia_requisicao(
				nr_requisicao_p, cd_material_w,'1',
				Wheb_mensagem_pck.get_Texto(301926), /*'A quantidade requisitada esta igual a zero.',*/
				'C',null, nm_usuario_p);
		end if;

		if	(VarConsisteEstoqueDisp_p in ('S','M')) then
			Consiste_Estoque_Requisicao(
				nr_requisicao_p,
				nr_item_w,
				qt_material_requisitada_w,
				nm_usuario_p,
				0,
				0,
				ds_erro_item_w);
		end if;

		if	(ie_requisicao_transferencia_w = 'S') and
			(ie_consiste_transferencia_w = 'L') then
			begin
			consiste_req_transf_estoque(
				cd_local_destino_p,
				cd_material_w,
				qt_material_requisitada_w,
				cd_unidade_medida_consumo_w,
				nr_requisicao_p,
				cd_estabelecimento_w,
				ie_consiste_transferencia_w,
				'S',
				ds_erro_item_w);

			if	(ds_erro_item_w is not null) then
				gravar_consistencia_requisicao(
					nr_requisicao_p, cd_material_w, '1',
					ds_erro_item_w,
					'C',null,nm_usuario_p);
			end if;
			end;
		end if;

		if	(Consiste_devol_consumo_p in ('N','C')) and
			(ie_tipo_requisicao_w = 3) then
			begin
			select	nvl(qt_conv_estoque_consumo,1)
			into	qt_conv_estoque_consumo_w
			from	material
			where	cd_material = cd_material_w;
			qt_material_requisicao_w	:= dividir(qt_material_requisitada_w, qt_conv_estoque_consumo_w);

			if	(Consiste_devol_consumo_p = 'C') then
				select	nvl(sum(qt_consumo),0)
				into	qt_consumo_w
				from	movto_estoque_operacao_v
				where	cd_material		= cd_material_w
				and	cd_centro_custo = cd_centro_custo_w
				and	dt_mesano_referencia	= trunc(sysdate,'month')
				and	cd_estabelecimento	= cd_estabelecimento_w
				and	cd_local_estoque	= cd_local_estoque_w;
			else
				select	nvl(sum(qt_consumo),0)
				into	qt_consumo_w
				from	movto_estoque_operacao_v
				where	cd_material		= cd_material_w
				and	cd_centro_custo is not null
				and	dt_mesano_referencia	= trunc(sysdate,'month')
				and	cd_estabelecimento	= cd_estabelecimento_w
				and	cd_local_estoque	= cd_local_estoque_w;
			end if;

			if	(qt_consumo_w < qt_material_requisicao_w) then
				gravar_consistencia_requisicao(
					nr_requisicao_p, cd_material_w,'1',
					Wheb_mensagem_pck.get_Texto(301927),/* 'nao teve consumo suficiente no mes para esta devolucao.',*/
					'C',null, nm_usuario_p);
			end if;
			end;
		end if;
		end;
	end if;
end loop;
close c01;

sup_consistir_consumo_req(nr_requisicao_p, null, 'RC', nm_usuario_p);

if  (ie_consiste_saldo_gpi_w = 'S') then
    gpi_consiste_saldo_orc(null, nr_requisicao_p, nm_usuario_p);
end if;

if	(nvl(ie_consiste_vl_empenho_w,'N') = 'S') then
	select	max(nr_sequencia)
	into	nr_seq_mes_ref_w
	from	ctb_mes_ref
	where	trunc(dt_referencia,'month') = trunc(dt_requisicao_w,'month');
	
	select	nvl(max(i.cd_conta_contabil),cd_conta_contabil_w)
	into	cd_conta_contabil_w
	from	item_requisicao_material i,
		requisicao_material r
	where	i.nr_requisicao	= nr_requisicao_p
	and	i.nr_requisicao	= r.nr_requisicao
	and	(substr(obter_se_conta_vigente(i.cd_conta_contabil, r.dt_solicitacao_requisicao),1,1) = 'S');
	
	select	nvl(max(r.cd_centro_custo),cd_centro_custo_w)
	into	cd_centro_custo_w
	from	requisicao_material r
	where	r.nr_requisicao	= nr_requisicao_p;

	vl_orcado_w :=	nvl(ctb_obter_valor_orcado( dt_referencia_p => trunc(dt_requisicao_w,'month'), cd_conta_contabil_p => cd_conta_contabil_w, 
							cd_centro_custo_p => cd_centro_custo_w, cd_estabelecimento_p => cd_estabelecimento_w),0);

	select	nvl(max(vl_empenho),0)
	into	vl_empenho_w
	from	ctb_orcamento
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_centro_custo		= cd_centro_custo_w
	and	cd_conta_contabil	= cd_conta_contabil_w
	and	nr_seq_mes_ref		= nr_seq_mes_ref_w;
	
	if	(vl_empenho_w = 0) then
		vl_empenho_w := nvl(ctb_obter_empenho_orcamento( nr_seq_mes_ref_p => nr_seq_mes_ref_w, cd_conta_contabil_p => cd_conta_contabil_w, 
							cd_centro_custo_p => cd_centro_custo_w, cd_estabelecimento_p => cd_estabelecimento_w, 
							dt_inicial_p => null, dt_final_p => null),0);
	end if;
	
	if	(vl_empenho_w > vl_orcado_w) then
		ds_consistencia_w := substr(wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 1196401, vl_macros_p => null),1,255);
		ds_obs_consist_w := substr(wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 1196644, 
									vl_macros_p => 'VL_EMPENHO='|| campo_mascara_virgula(vl_empenho_w) ||
											';VL_ORCADO='|| campo_mascara_virgula(vl_orcado_w)),1,255);
	
		gravar_consistencia_requisicao( nr_requisicao_p => nr_requisicao_p, cd_material_p => null,
						ie_tipo_p => '0', ds_consistencia_p => ds_consistencia_w,
						ie_forma_p => 'C', ds_observacao_p => ds_obs_consist_w, 
						nm_usuario_p => nm_usuario_p);
	end if;
end if;

select	count(*)
into	qt_existe_w
from	requisicao_mat_consist
where	nr_requisicao = nr_requisicao_p
and	ie_forma_consistencia <> 'M';

select	dt_liberacao
into 	dt_liberacao_w
from	requisicao_material
where	nr_requisicao = nr_requisicao_p;

if (dt_liberacao_w is not null) then
    wheb_mensagem_pck.exibir_mensagem_abort(237192);
end if;


if	(qt_existe_w = 0) then

	update	requisicao_material
	set	dt_liberacao	= sysdate,
		nm_usuario_lib	= nm_usuario_p
	where	nr_requisicao	= nr_requisicao_p;

	/*Para gravar os estoques disponiveis em cada item da requisicao no momento de liberar - OS386419*/

	gravar_estoque_requisicao_lib(nr_requisicao_p, nm_usuario_p);

	insert into requisicao_mat_historico(
		nr_sequencia,
		nr_requisicao,
		dt_atualizacao,
		nm_usuario,
		dt_historico,
		ds_titulo,
		ds_historico,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_tipo,
		cd_evento,
		dt_liberacao,
		nm_usuario_lib)
	values	(requisicao_mat_historico_seq.nextval,
		nr_requisicao_p,
		sysdate,
		nm_usuario_p,
		sysdate,
		Wheb_mensagem_pck.get_Texto(301928), /*'Liberacao da requisicao',*/
		WHEB_MENSAGEM_PCK.get_texto(301929,'NM_USUARIO_P='|| NM_USUARIO_P ||';DT_LIB_W='|| to_char(sysdate,'dd/mm/yyyy hh24:mi:ss')),/*'Liberacao da requisicao pelo Usuario ' || nm_usuario_p || '. Data de Liberacao: ' || to_char(sysdate,'dd/mm/yyyy hh24:mi:ss'),*/
		sysdate,
		nm_usuario_p,
		'S',
		'LB',
		sysdate,
		nm_usuario_p);

	open C02;
	loop
	fetch C02 into
		nr_seq_aprovacao_w,
		cd_material_w,
		nr_seq_item_w,
		cd_centro_custo_w,
		cd_local_estoque_w,
		cd_conta_cont_item_w,
		cd_cgc_fornec_item_w;
	exit when C02%notfound;
		begin
		if	(nr_seq_aprovacao_w is null) then

			if	(cd_centro_custo_w is null) then
				select	nvl(max(cd_centro_custo),null)
				into	cd_centro_custo_w
				from	local_estoque
				where	cd_estabelecimento	= cd_estabelecimento_w
				and	cd_local_estoque	= cd_local_estoque_w;
			end if;

			obter_processo_aprovacao(
				cd_material_w,
				cd_centro_custo_w,
				cd_setor_atendimento_w,
				cd_local_estoque_w,
				cd_local_destino_p,
				cd_operacao_estoque_p,
				cd_conta_cont_item_w,
				cd_cgc_fornec_item_w,
				null,
				'R',
				ie_urgente_w,
				cd_estabelecimento_w,
				cd_perfil_ativo_w,
				null,
				nr_requisicao_p,
				cd_processo_aprov_w);

			if	(cd_processo_aprov_w is null) then
				update	item_requisicao_material
				set	dt_aprovacao	= sysdate,
					nm_usuario_aprov	= nm_usuario_p
				where	nr_requisicao	= nr_requisicao_p
				and	nr_sequencia	= nr_seq_item_w;
			else
				
				select	nvl(max(b.nr_sequencia),0)
				into 	nr_seq_aprovacao_w
				from 	processo_aprov_compra a,
					processo_compra b
				where 	b.nr_sequencia = a.nr_sequencia
				and 	b.cd_processo_aprov = cd_processo_aprov_w
				and 	a.nr_documento = nr_requisicao_p
				and 	a.cd_estabelecimento = cd_estabelecimento_w
				and	a.ie_tipo = 'R';
				
				if	(nr_seq_aprovacao_w = 0) then
					begin
					
					select processo_compra_seq.nextval
					into nr_seq_aprovacao_w
					from dual;

					insert into processo_compra(
						nr_sequencia,
						cd_processo_aprov,
						dt_atualizacao,
						nm_usuario)
					values(	nr_seq_aprovacao_w,
						cd_processo_aprov_w,
						sysdate,
						nm_usuario_p);

					dt_liberacao_w			:= sysdate;

					open c03;
					loop
					fetch c03 into
						nr_sequencia_w,
						ie_responsavel_w,
						cd_cargo_w,
						nm_usuario_regra_w,
						nr_nivel_aprovacao_w,
						vl_minimo_w,
						vl_maximo_w,
						qt_minimo_aprovador_w,
						qt_itens_regra_w,
						qt_intervalo_regra_w;
					exit when c03%notfound;
						begin

						cd_responsavel_w	:= '';

						if	(nr_nivel_aprovacao_w2 is null) then
							nr_nivel_aprovacao_w2 := nr_nivel_aprovacao_w;
						end if;

						if	(ie_responsavel_w = 'R') then
							if	(cd_centro_custo_w is null) then
								select	nvl(max(cd_centro_custo),null)
								into	cd_centro_custo_w
								from	local_estoque
								where	cd_estabelecimento	= cd_estabelecimento_w
								and	cd_local_estoque	= cd_local_estoque_w;
							end if;

							select	nvl(max(b.cd_cargo),null)
							into	cd_cargo_w
							from	cargo a,
								cargo_centro_custo b
							where	b.cd_centro_custo	= cd_centro_custo_w
							and	b.cd_cargo	= a.cd_cargo
							and	a.ie_situacao	= 'A';
						end if;

						if	(ie_responsavel_w <> 'F') then

							if	(nr_nivel_aprovacao_w is not null)
								and (dt_liberacao_w is null) then
								
								select	obter_se_proc_por_nivel(nr_seq_aprovacao_w, cd_estabelecimento_w)
								into	ie_aprovacao_nivel_w
								from	dual;
								
								if	(ie_aprovacao_nivel_w = 'S') and
									(nr_nivel_aprovacao_w2 = nr_nivel_aprovacao_w) then
									dt_liberacao_w	:= sysdate;
								else
									dt_liberacao_w	:= null;
								end if;
							end if;

							insert into processo_aprov_compra (
								nr_sequencia,
								nr_seq_proc_aprov,
								dt_atualizacao,
								nm_usuario,
								nm_usuario_nrec,
								cd_pessoa_fisica,
								cd_cargo,
								dt_liberacao,
								dt_definicao,
								ie_aprov_reprov,
								cd_estabelecimento,
								ie_urgente,
								nr_documento,
								ie_tipo,
								dt_documento,
								nr_nivel_aprovacao,
								cd_processo_aprov,
								ie_responsavel,
								vl_minimo,
								vl_maximo,
								qt_minimo_aprovador,
								nm_usuario_regra,
								qt_itens_regra,
								qt_intervalo_regra)
							values(	nr_seq_aprovacao_w,
								nr_sequencia_w,
								sysdate,
								nm_usuario_p,
								nm_usuario_p,
								cd_responsavel_w,
								cd_cargo_w,
								dt_liberacao_w,
								decode(cd_cargo_w,null, sysdate, null),
								'P',
								cd_estabelecimento_w,
								ie_urgente_w,
								nr_requisicao_p,
								'R',
								dt_requisicao_w,
								nr_nivel_aprovacao_w,
								cd_processo_aprov_w,
								ie_responsavel_w,
								vl_minimo_w,
								vl_maximo_w,
								qt_minimo_aprovador_w,
								nm_usuario_regra_w,
								qt_itens_regra_w,
								qt_intervalo_regra_w);

							if 	(cd_cargo_w is not null) then
								dt_liberacao_w	:= null;
							end if;

						elsif	(ie_responsavel_w = 'F') then

							select	obter_pessoa_fisica_usuario(nm_usuario_regra_w,'C')
							into	cd_responsavel_w
							from	dual;

							if	(cd_responsavel_w is null) then
								wheb_mensagem_pck.exibir_mensagem_abort(177847,'NM_USUARIO_REGRA='||nm_usuario_regra_w);
							end if;
							
							if	(nr_nivel_aprovacao_w is not null)
								and (dt_liberacao_w is null) then
								
								select	obter_se_proc_por_nivel(nr_seq_aprovacao_w, cd_estabelecimento_w)
								into	ie_aprovacao_nivel_w
								from	dual;
								
								if	(ie_aprovacao_nivel_w = 'S') and
									(nr_nivel_aprovacao_w2 = nr_nivel_aprovacao_w) then
									dt_liberacao_w	:= sysdate;
								else
									dt_liberacao_w	:= null;
								end if;
							end if;

							insert into processo_aprov_compra (
								nr_sequencia,
								nr_seq_proc_aprov,
								dt_atualizacao,
								nm_usuario,
								nm_usuario_nrec,
								cd_pessoa_fisica,
								cd_cargo,
								dt_liberacao,
								dt_definicao,
								ie_aprov_reprov,
								cd_estabelecimento,
								ie_urgente,
								nr_documento,
								ie_tipo,
								dt_documento,
								nr_nivel_aprovacao,
								cd_processo_aprov,
								ie_responsavel,
								vl_minimo,
								vl_maximo,
								qt_minimo_aprovador,
								nm_usuario_regra,
								qt_itens_regra,
								qt_intervalo_regra)
							values(	nr_seq_aprovacao_w,
								nr_sequencia_w,
								sysdate,
								nm_usuario_p,
								nm_usuario_p,
								cd_responsavel_w,
								null,
								dt_liberacao_w,
								null,
								'P',
								cd_estabelecimento_w,
								ie_urgente_w,
								nr_requisicao_p,
								'R',
								dt_requisicao_w,
								nr_nivel_aprovacao_w,
								cd_processo_aprov_w,
								ie_responsavel_w,
								vl_minimo_w,
								vl_maximo_w,
								qt_minimo_aprovador_w,
								nm_usuario_regra_w,
								qt_itens_regra_w,
								qt_intervalo_regra_w);

							if	(cd_responsavel_w is not null) then
								dt_liberacao_w	:= null;
							end if;

						end if;
						end;
					end loop;
					close c03;
					end;
				end if;

				update	item_requisicao_material
				set	nr_seq_aprovacao	= nr_seq_aprovacao_w,
					cd_processo_aprov	= cd_processo_aprov_w
				where	nr_requisicao	= nr_requisicao_p
				and	nr_sequencia	= nr_seq_item_w;

			end if;
		end if;
		end;
	end loop;
	close C02;

	select	count(*)
	into	nr_items_sem_aprov_w
	from	item_requisicao_material
	where	dt_aprovacao is null
	and	nr_requisicao = nr_requisicao_p;

	if	(nr_items_sem_aprov_w = 0) then
		update	requisicao_material
		set	dt_aprovacao	= sysdate,
			nm_usuario_aprov	= nm_usuario_p
		where	nr_requisicao	= nr_requisicao_p;
	end if;

	update	item_requisicao_material
	set	dt_atendimento = null,
		qt_material_atendida = 0,
		cd_motivo_baixa = 0
	where	nr_requisicao	= nr_requisicao_p;

	open c04;
	loop
	fetch c04 into
		nr_seq_aprovacao_w;
	exit when c04%notfound;
		aprovacao_automatica_req(nr_seq_aprovacao_w, nm_usuario_p);
	end loop;
	close c04;


	/*Envia comunicacao interna*/

	select	nvl(max(b.nr_sequencia),0),
		max(b.cd_perfil)
	into	nr_seq_regra_ci_w,
		cd_perfil_w
	from	regra_envio_comunic_compra a,
		regra_envio_comunic_evento b
	where	a.nr_sequencia = b.nr_seq_regra
	and	a.cd_funcao = 919
	and	b.cd_evento = 24
	and	b.ie_situacao = 'A'
	and	cd_estabelecimento = cd_estabelecimento_w
	and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_requisicao_p,'RM',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

	if	(nr_seq_regra_ci_w > 0) then

		open C05;
		loop
		fetch C05 into
			cd_setor_regra_usuario_w;
		exit when C05%notfound;
			begin
			if	(cd_setor_regra_usuario_w <> 0) and
				(obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then
				ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
			end if;
			end;
		end loop;
		close C05;

		select	substr(ds_titulo,1,80),
			substr(replace_macro(ds_comunicacao,'@nr_requisicao', nr_requisicao_p),1,4000) ds_comunicacao,
			nvl(ie_ci_lida,'N')
		into	ds_titulo_w,
			ds_comunicado_w,
			ie_ci_lida_w
		from	regra_envio_comunic_evento
		where	nr_sequencia = nr_seq_regra_ci_w;

		nm_usuario_destino_w := substr(obter_usuarios_comunic_compras(nr_requisicao_p, null, 24, nr_seq_regra_ci_w, nm_usuario_p),1,255);

		if	(ds_comunicado_w is not null) and
			((nvl(nm_usuario_destino_w,'X') <> 'X') or (nvl(ds_setor_adicional_w,'X') <> 'X')) then

			select	comunic_interna_seq.nextval
			into	nr_seq_ci_w
			from	dual;

			if	(cd_perfil_w is not null) then
				cd_perfil_w := cd_perfil_w ||',';
			end if;

			insert into comunic_interna(
				dt_comunicado,
				ds_titulo,
				ds_comunicado,
				nm_usuario,
				dt_atualizacao,
				ie_geral,
				nm_usuario_destino,
				nr_sequencia,
				ie_gerencial,
				nr_seq_classif,
				dt_liberacao,
				ds_perfil_adicional,
				ds_setor_adicional)
			values(	sysdate,
				ds_titulo_w,
				ds_comunicado_w,
				nm_usuario_p,
				sysdate,
				'N',
				nm_usuario_destino_w,
				nr_seq_ci_w,
				'N',
				obter_classif_comunic('F'),
				sysdate,
				cd_perfil_w,
				ds_setor_adicional_w);

			/*Para que a comunicacao seja gerada como lida ao proprio Usuario */

			if	(ie_ci_lida_w = 'S') then
				insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values(nr_seq_ci_w,nm_usuario_p,sysdate);
			end if;
		end if;
	end if;

	envia_email_req_aprov( nr_requisicao_p, cd_estabelecimento_w, nm_usuario_p);

	select	nvl(max(ie_regra_gerar_solic_req),'N')
	into	ie_regra_gerar_solic_req_w
	from	parametro_compras
	where	cd_estabelecimento = cd_estabelecimento_w;

	if	(ie_regra_gerar_solic_req_w = 'S') then
		gerar_solic_compra_requisicao(nr_requisicao_p,nm_usuario_p,cd_estabelecimento_w,nr_solic_compra_w);
	end if;
end if;

/* OS359976
Somente para os tipos diferente de integracao, o sistema fara o commit*/
if	(nvl(ie_geracao_w,'X') <> 'I') and
	(nvl(ie_geracao_w,'X') <> 'IT') and
	(nvl(ie_geracao_w,'X') <> 'IA') and
	(nvl(ie_geracao_w,'X') <> 'K') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_requisicao ( nr_requisicao_p bigint, nm_usuario_p text, cd_local_destino_p bigint, cd_centro_custo_p bigint, varconsistematerialccusto_p text, somentetransf_farmacia_p text, varobrigamaterialpadr_p text, varconsistemateriallocal_p text, varconsisteestoquedisp_p text, consiste_devol_consumo_p text, VarPermiteEstoqueMax_p text, cd_operacao_estoque_p bigint, ds_erro_liberacao INOUT text) FROM PUBLIC;

