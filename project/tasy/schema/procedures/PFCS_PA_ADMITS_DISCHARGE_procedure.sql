-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_pa_admits_discharge ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_indicator_w          pfcs_panel.nr_seq_indicator%type := 122;
pfcs_panel_detail_seq_w     pfcs_panel_detail.nr_sequencia%type;
pfcs_panel_seq_w            pfcs_panel.nr_sequencia%type;

qt_unit_w				    numeric(20)  := 0; --> Total beds
qt_census_w                 numeric(20)  := 0; --> Total beds for census/capacity
qt_occupied_unit_w			numeric(20)  := 0; --> Occupied beds
qt_blocked_unit_w		    numeric(20)  := 0; --> Blocked/Suspended Beds
qt_admits_unit_w			numeric(20);
qt_discharges_unit_w		numeric(20);
qt_available_unit_w         numeric(20);

qt_total_patients_w 		numeric(20) := 0;
qt_total_time_w				numeric(20) := 0;

---- Departments' names
c01_dpt CURSOR FOR
SELECT cd_setor_atendimento cd_department,
    ds_setor_atendimento ds_department,
    cd_classif_setor cd_classif_setor
from setor_atendimento
where  cd_classif_setor  in ('1','3','4','9','11','12')
    and ie_situacao             = 'A'
    and ie_ocup_hospitalar      = 'S'
    and cd_estabelecimento_base = cd_estabelecimento_p;

---- All beds
c02_bds CURSOR(cd_setor_atendimento_p bigint) FOR
SELECT CASE WHEN coalesce(sec.ds_setor_atendimento::text, '') = '' THEN  uni.cd_unidade_basica || '-' || uni.cd_unidade_compl  ELSE sec.ds_setor_atendimento || '-' || uni.cd_unidade_basica || '-' || uni.cd_unidade_compl END  ds_location,
    uni.ie_status_unidade cd_status,
    uni.cd_unidade_basica ds_room,
    uni.cd_unidade_compl ds_bed,
    uni.nr_seq_location nr_seq_location,
    uni.nr_seq_interno,
    pfcs_get_bed_status(uni.ie_status_unidade, 'T', cd_estabelecimento_p) ie_total_beds,
    pfcs_get_bed_status(uni.ie_status_unidade, 'C', cd_estabelecimento_p) ie_census,
    uni.ie_situacao
from unidade_atendimento uni,
	 setor_atendimento sec
where uni.cd_setor_atendimento    = cd_setor_atendimento_p
  and  uni.cd_setor_atendimento = sec.cd_setor_atendimento;

---- Admits/Discharges
c03_ad CURSOR(nr_seq_interno_p bigint) FOR
SELECT enc.id_encounter
    nr_encounter_varchar,
    enc.si_status,
    pat.patient_id                                           id_patient,
    pfcs_get_human_name(pat.nr_sequencia, 'Patient')         nm_patient,
    pfcs_get_patient_gender(pat.gender)                      gender,
    pat.birthdate,
    to_char(round(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate))) qt_patient_age,
    pfcs_get_human_name(pfcs_get_practitioner_seq(enc.nr_sequencia, '405279007'), 'Practitioner') nm_practioner,
    case when psr.cd_service = 'E0401' THEN ((clock_timestamp() - enc.period_start) * 24 * 60)
        else ((clock_timestamp() - psr.dt_authored_on) * 24 * 60)
    end total_time,
    case when psr.cd_service = 'E0401' THEN enc.period_start
        else psr.dt_authored_on 
    end period_start,
    pfcs_get_code_status(pat.nr_sequencia, enc.nr_sequencia, 'S') code_status,
    cd_courtesy,
    uni.cd_unidade_compl  ds_bed,
    pfcs_get_patient_diagnosis(enc.nr_sequencia) diagnosis,
    enc.si_classif ,
    psr.cd_service,
    enc.nr_sequencia encounter_sequence,
	coalesce(pfcs_get_checklist(enc.nr_sequencia, pat.nr_sequencia, 'MPL'),'') ds_care_status,
	coalesce(pfcs_get_checklist(enc.nr_sequencia, pat.nr_sequencia, 'TOOLTIP'),'') ds_checklist,
    pfcs_get_edi_score(enc.nr_sequencia   ) nr_edi_score,
    pfcs_get_lace_plus(enc.nr_sequencia, enc.nr_seq_organization) readmission_risk,
    pfcs_get_frequent_flyer(enc.nr_sequencia) flag_recur_pat,
    pfcs_get_recurring_patient(pat.nr_sequencia) ds_recur_pat,
    si_intent,
    pfcs_get_special_requests(enc.nr_sequencia, uni.nr_seq_location) special_request,
	pfcs_obs_contributor_pck.get_laceplus(enc.nr_sequencia) ds_readm_risk_contrb,
	pfcs_obs_contributor_pck.get_freqflyer_visits(enc.nr_sequencia) ds_recur_pat_adm_data,
	pfcs_obs_contributor_pck.get_freqflyer_comorbidities(enc.nr_sequencia) ds_recur_pat_comorbd,
	pfcs_obs_contributor_pck.get_freqflyer_visit_reason(enc.nr_sequencia) ds_recur_pat_reasons,
	pfcs_obs_contributor_pck.get_edi_vital_warnings(enc.nr_sequencia) ds_edi_vitals_warn,
	pfcs_obs_contributor_pck.get_edi_contributors(enc.nr_sequencia) ds_edi_contrb
FROM   pfcs_encounter enc,
    pfcs_service_request psr,
    pfcs_patient pat,
    unidade_atendimento uni,
    setor_atendimento sta
WHERE uni.nr_seq_location = psr.nr_seq_location
    AND uni.cd_setor_atendimento = sta.cd_setor_atendimento
    AND uni.nr_seq_interno = nr_seq_interno_p
    AND enc.nr_seq_patient = pat.nr_sequencia
    AND enc.nr_sequencia = psr.nr_seq_encounter
    AND pat.ie_active = '1'
    AND (psr.cd_service = 'E0401' 
            OR (psr.cd_service in ('E0402', 'E0405')
                AND (enc.period_start IS NOT NULL AND enc.period_start::text <> '')))
    AND upper(psr.si_intent) = 'PLAN'
    AND upper(psr.si_status) = 'ACTIVE';

---- Occupied beds
c04_ocp CURSOR(nr_seq_interno_p bigint) FOR
SELECT enc.id_encounter nr_encounter_varchar,
    pat.patient_id id_patient
from pfcs_encounter enc,
    pfcs_patient pat,
    unidade_atendimento uni,
    pfcs_service_request svc
where uni.nr_seq_location       =  coalesce(enc.nr_seq_location, pfcs_get_pat_location(pat.nr_sequencia, enc.nr_sequencia))
    and uni.nr_seq_interno      = nr_seq_interno_p
    and upper(uni.ie_situacao)  = 'A'
    and enc.nr_seq_patient      = pat.nr_sequencia
    and (enc.period_start IS NOT NULL AND enc.period_start::text <> '')
    and coalesce(enc.period_end::text, '') = ''
    and svc.nr_seq_encounter = enc.nr_sequencia
    and svc.nr_seq_patient = pat.nr_sequencia
    and ((svc.cd_service = 'E0401'
			and svc.si_status = 'COMPLETED'
			and svc.si_intent = 'ORDER') or
        svc.cd_service = 'E0402' or (svc.cd_service = 'E0405'
			and svc.si_status <> 'COMPLETED'
			and svc.si_intent <> 'ORDER'));
BEGIN

for c01_w in c01_dpt loop
    qt_unit_w := 0;
    qt_census_w := 0;
    qt_occupied_unit_w := 0;
    qt_blocked_unit_w := 0;
    qt_admits_unit_w := 0;
    qt_discharges_unit_w:= 0;

    for c02_w in c02_bds(c01_w.cd_department) loop
        if (c02_w.ie_situacao = 'A') then
            if (c02_w.ie_census IS NOT NULL AND c02_w.ie_census::text <> '') then
                qt_unit_w := qt_unit_w + 1;
            end if;

            if (c02_w.ie_total_beds = 'Y') then
                qt_census_w := qt_census_w + 1;
            end if;

            if (c02_w.ie_census = 'B') then
                qt_blocked_unit_w := qt_blocked_unit_w + 1;
            end if;
        end if;

        select  nextval('pfcs_panel_detail_seq')
        into STRICT  pfcs_panel_detail_seq_w
;

        insert into pfcs_panel_detail(
            nr_sequencia,
            nm_usuario,
            dt_atualizacao,
            nm_usuario_nrec,
            dt_atualizacao_nrec,
            ie_situation,
            nr_seq_indicator,
            nr_seq_operational_level)
        values (
            pfcs_panel_detail_seq_w,
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            'T',
            nr_seq_indicator_w,
            cd_estabelecimento_p);

        insert into pfcs_detail_bed(
            nr_sequencia,
            nm_usuario,
            dt_atualizacao,
            nm_usuario_nrec,
            dt_atualizacao_nrec,
            nr_seq_detail,
            ds_location,
            ds_department,
            cd_status)
        values (
            nextval('pfcs_detail_bed_seq'),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            pfcs_panel_detail_seq_w,
            c02_w.ds_location,
            c01_w.ds_department,
            c02_w.cd_status);

        for c03_w in c03_ad(c02_w.nr_seq_interno) loop
            if ((c03_w.total_time IS NOT NULL AND c03_w.total_time::text <> '') and c03_w.cd_service <> 'E0405' ) then
                qt_total_patients_w := qt_total_patients_w + 1;
                qt_total_time_w := qt_total_time_w + c03_w.total_time;
            end if;

            if (c03_w.cd_service = 'E0405') then
                qt_discharges_unit_w := qt_discharges_unit_w + 1;
            else
                qt_admits_unit_w := qt_admits_unit_w + 1;

                insert into pfcs_detail_patient(
                        nr_sequencia,
                        nm_usuario,
                        dt_atualizacao,
                        nm_usuario_nrec,
                        dt_atualizacao_nrec,
                        nr_seq_detail,
                        nr_encounter_varchar,
                        dt_entrance,
                        id_patient,
                        nm_patient,
                        ds_gender,
                        dt_birthdate,
                        ds_age_range,
                        ds_symptoms,
                        ds_dnr_status,
                        qt_time_total_pa,
                        ds_physician,
                        ds_special_request,
                        ds_care_status,
                        ds_checklist,
                        qt_edi_score,
                        ds_readmission_risk,
                        ie_freq_flyer,
                        ds_recurring_patient,
						ds_readm_risk_contrb,
						ds_rec_pat_adm_data,
						ds_rec_pat_comorbd,
						ds_rec_pat_reasons,
						ds_edi_vitals_warn,
						ds_edi_contrb)
                    values (
                        nextval('pfcs_detail_patient_seq'),
                        nm_usuario_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        clock_timestamp(),
                        pfcs_panel_detail_seq_w,
                        c03_w.nr_encounter_varchar,
                        c03_w.period_start,
                        c03_w.id_patient,
                        c03_w.nm_patient,
                        c03_w.gender,
                        c03_w.birthdate,
                        c03_w.qt_patient_age,
                        c03_w.diagnosis,
                        c03_w.code_status,
                        c03_w.total_time,
                        c03_w.nm_practioner,
                        c03_w.special_request,
                        c03_w.ds_care_status,
                        c03_w.ds_checklist,
                        c03_w.nr_edi_score,
                        c03_w.readmission_risk,
                        c03_w.flag_recur_pat,
                        c03_w.ds_recur_pat,
						c03_w.ds_readm_risk_contrb,
						c03_w.ds_recur_pat_adm_data,
						c03_w.ds_recur_pat_comorbd,
						c03_w.ds_recur_pat_reasons,
						c03_w.ds_edi_vitals_warn,
						c03_w.ds_edi_contrb);
            end if;
        end loop;

        for c04_w in c04_ocp(c02_w.nr_seq_interno) loop
            qt_occupied_unit_w := qt_occupied_unit_w + 1;
        end loop;

        commit;
    end loop;

	pfcs_pck.pfcs_generate_results(
        ds_reference_value_p => c01_w.ds_department,
		cd_reference_value_p => c01_w.cd_department,
        cd_reference_aux_p => c01_w.cd_classif_setor,
        vl_indicator_p => (pfcs_get_percentage_value(qt_occupied_unit_w, qt_census_w)),
        vl_indicator_aux_p => (qt_unit_w - qt_occupied_unit_w - qt_blocked_unit_w),
        vl_indicator_help_p => qt_admits_unit_w,
        vl_indicator_collab_p => qt_discharges_unit_w,
        nr_seq_indicator_p => nr_seq_indicator_w,
        nr_seq_operational_level_p => cd_estabelecimento_p,
        nm_usuario_p => nm_usuario_p,
        nr_seq_panel_p => pfcs_panel_seq_w);

	CALL pfcs_pck.pfcs_update_detail(
        nr_seq_indicator_p => nr_seq_indicator_w,
        nr_seq_panel_p => pfcs_panel_seq_w,
        nr_seq_operational_level_p => cd_estabelecimento_p,
        nm_usuario_p => nm_usuario_p);
end loop;

CALL pfcs_pck.pfcs_activate_records(
	nr_seq_indicator_p => nr_seq_indicator_w,
	nr_seq_operational_level_p => cd_estabelecimento_p,
	nm_usuario_p => nm_usuario_p);

/*-----------------------------------------------------------*/

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pa_admits_discharge ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

