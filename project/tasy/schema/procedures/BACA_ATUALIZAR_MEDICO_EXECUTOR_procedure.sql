-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_atualizar_medico_executor ( nr_seq_protocolo_p bigint) AS $body$
DECLARE

 
			 
nr_interno_conta_w			bigint;
cd_estabelecimento_w		bigint;
ie_medico_executor_w		varchar(10);
cd_cgc_w            		varchar(14);
cd_medico_executor_w      	varchar(10);
cd_pessoa_fisica_w       		varchar(10);
cd_medico_exec_filtro_w    	varchar(10);
ie_tipo_atendimento_w		smallint;
cd_medico_conta_w    		varchar(10);
cd_medico_resp_w			varchar(10);
ds_module_w 			varchar(255);
osuser_w				varchar(100);
ie_origem_inf_w			varchar(1);
cd_cgc_laboratorio_w		varchar(14);
cd_setor_prescricao_w		integer;

c01 CURSOR FOR 
	SELECT	nr_interno_conta, 
		cd_estabelecimento, 
		obter_tipo_atendimento(nr_atendimento), 
		obter_dados_atendimento(nr_atendimento,'MR') 
	from	conta_paciente 
	where	nr_seq_protocolo	= nr_seq_protocolo_p 
	and	coalesce(ie_cancelamento::text, '') = '';
	
c02 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_exame, 
		nr_seq_proc_interno, 
		cd_setor_atendimento, 
		cd_convenio, 
		cd_procedimento, 
		ie_origem_proced, 
		dt_procedimento, 
		a.nr_prescricao, 
		a.nr_sequencia_prescricao 
	from	procedimento_paciente a 
	where	a.nr_interno_conta	= nr_interno_conta_w 
	and	coalesce(cd_motivo_exc_conta::text, '') = '' 
	and	coalesce(cd_medico_executor::text, '') = '' 
	and	obter_classificacao_proced(cd_procedimento,ie_origem_proced,'C')	= 1;
	
 
c02_w	c02%rowtype;

BEGIN
select	max(module||' - ' || machine||' - ' || program|| ' - ' || osuser|| ' - ' || terminal), 
	max(osuser) 
into STRICT	ds_module_w, 
	osuser_w 
from	v$session 
where	audsid = (SELECT userenv('sessionid') ) 
and 	upper(program) not like '%TASY%';
 
 
open c01;
loop 
fetch c01 into	 
	nr_interno_conta_w, 
	cd_estabelecimento_w, 
	ie_tipo_atendimento_w, 
	cd_medico_resp_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	open c02;
	loop 
	fetch c02 into	 
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		 
		if (coalesce(c02_w.nr_prescricao,0) > 0) then 
		 
			select	max(cd_setor_atendimento) 
			into STRICT	cd_setor_prescricao_w 
			from	prescr_medica 
			where	nr_prescricao = c02_w.nr_prescricao;
		 
			if (coalesce(c02_w.nr_sequencia_prescricao,0) > 0) then 
				select	max(ie_origem_inf), 
					max(cd_cgc_laboratorio) 
				into STRICT	ie_origem_inf_w, 
					cd_cgc_laboratorio_w 
				from	prescr_procedimento 
				where	nr_prescricao = c02_w.nr_prescricao 
				and	nr_sequencia = c02_w.nr_sequencia_prescricao;
			end if;
			 
		end if;
		 
		SELECT * FROM consiste_medico_executor(	cd_estabelecimento_w, c02_w.cd_convenio, c02_w.cd_setor_atendimento, c02_w.cd_procedimento, c02_w.ie_origem_proced, ie_tipo_atendimento_w, c02_w.nr_seq_exame, c02_w.nr_seq_proc_interno, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, cd_medico_exec_filtro_w, c02_w.dt_procedimento, null, ie_origem_inf_w, cd_cgc_laboratorio_w, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;
						 
		cd_medico_conta_w	:= null;
		if (ie_medico_executor_w		= 'A') then 
			cd_medico_conta_w	:= cd_medico_resp_w;
		elsif (ie_medico_executor_w		= 'F') or (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then 
			cd_medico_conta_w	:= cd_medico_executor_w;
		end if;
		 
		if (cd_medico_conta_w IS NOT NULL AND cd_medico_conta_w::text <> '') then 
			update	procedimento_paciente 
			set	cd_medico_executor	= cd_medico_conta_w 
			where	nr_sequencia		= c02_w.nr_sequencia;
		end if;
		 
		/*insert into logxxxxx_tasy (dt_atualizacao,nm_usuario,cd_log,ds_log) 
				values (sysdate,osuser_w,91237,'Sequencia= '||c02_w.nr_sequencia);*/
 
		 
		end;
	end loop;
	close c02;
	 
	end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_atualizar_medico_executor ( nr_seq_protocolo_p bigint) FROM PUBLIC;

