-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE same_transf_prontuario_estab ( nr_seq_same_p bigint, nr_seq_caixa_p bigint, cd_estab_p bigint, nm_usuario_p text, nr_seq_local_p bigint, cd_setor_atendimento_p bigint default null) AS $body$
DECLARE

					
nr_seq_local_w			bigint;
ie_permite_util_pront_w		varchar(1);
qt_prontuarios_w		bigint;
nr_seq_local_atual_w		bigint;
nr_seq_caixa_atual_w		bigint;


BEGIN
if (nr_seq_caixa_p IS NOT NULL AND nr_seq_caixa_p::text <> '') then
	
	select	max(nr_seq_local)
	into STRICT	nr_seq_local_w
	from	same_caixa
	where	nr_sequencia = nr_seq_caixa_p;
	
	/*Consiste o local*/

	CALL Consistir_prontuario_local(nr_seq_same_p,nr_seq_local_w,cd_estab_p,nm_usuario_p);
	
	select	max(coalesce(ie_permite_util_pront,'N'))
	into STRICT	ie_permite_util_pront_w
	from	same_local
	where	nr_sequencia = nr_seq_local_w;

	if (ie_permite_util_pront_w = 'S') then
		select	count(*)
		into STRICT	qt_prontuarios_w
		from	same_prontuario
		where	nr_seq_caixa = nr_seq_caixa_p;
		
		if (qt_prontuarios_w > 1) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(215117);
		end if;

	end if;
	
	/*Se estiver na caixa retira o prontuario*/

	select	count(*)
	into STRICT	qt_prontuarios_w
	from	same_prontuario
	where	nr_sequencia = nr_seq_same_p
	and	(nr_seq_caixa IS NOT NULL AND nr_seq_caixa::text <> '');
	
	if (qt_prontuarios_w > 0) then
		select	nr_seq_local,
			nr_seq_caixa
		into STRICT	nr_seq_local_atual_w,
			nr_seq_caixa_atual_w
		from	same_prontuario
		where	nr_sequencia = nr_seq_same_p;
		CALL Gestao_Prontuario_Same(nr_seq_same_p,nm_usuario_p,'',cd_setor_atendimento_p,nr_seq_local_atual_w,nr_seq_caixa_atual_w,'','',14,wheb_mensagem_pck.get_texto(455740),'',null,cd_estab_p);
	end if;
	
end if;

	/*Armazena o prontuario na caixa selecionada*/

	CALL Gestao_Prontuario_Same(nr_seq_same_p,nm_usuario_p,'',cd_setor_atendimento_p,nr_seq_local_w,nr_seq_caixa_p,'','',13,wheb_mensagem_pck.get_texto(455740),'',null,cd_estab_p);	

	/*Altera o estabelecimento e setor do prontuario*/

	update	same_prontuario
	set	cd_estabelecimento = cd_estab_p,
		cd_setor_atendimento = coalesce(cd_setor_atendimento_p, cd_setor_atendimento)
	where	nr_sequencia = nr_seq_same_p;

if (nr_seq_local_p IS NOT NULL AND nr_seq_local_p::text <> '') then
	
	/*Consiste o local*/

	CALL Consistir_prontuario_local(nr_seq_same_p,nr_seq_local_p,cd_estab_p,nm_usuario_p);
	
	/*Armazena o prontuario no local selecionada*/

	CALL Gestao_Prontuario_Same(nr_seq_same_p,nm_usuario_p,'',cd_setor_atendimento_p,nr_seq_local_p,'','','',27,wheb_mensagem_pck.get_texto(455740),'',null,cd_estab_p);	
	
	/*Altera o estabelecimento e setor do prontuario*/

	update	same_prontuario
	set	cd_estabelecimento = cd_estab_p,
		cd_setor_atendimento = coalesce(cd_setor_atendimento_p, cd_setor_atendimento)
	where	nr_sequencia = nr_seq_same_p;
	
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE same_transf_prontuario_estab ( nr_seq_same_p bigint, nr_seq_caixa_p bigint, cd_estab_p bigint, nm_usuario_p text, nr_seq_local_p bigint, cd_setor_atendimento_p bigint default null) FROM PUBLIC;

