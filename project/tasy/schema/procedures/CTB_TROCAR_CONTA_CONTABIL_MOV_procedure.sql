-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_trocar_conta_contabil_mov (cd_estabelecimento_p bigint, nr_seq_mes_ref_p bigint, nr_lote_contabil_p bigint, cd_conta_contabil_antiga_p text, cd_conta_contabil_nova_p text, nm_usuario_p text) AS $body$
DECLARE


cd_classificacao_w			varchar(40);
cd_classif_credito_w		varchar(40);
cd_classif_debito_w			varchar(40);
dt_referencia_w				timestamp;
nr_lote_contabil_w			bigint;
ds_erro_w                   varchar(255) := null;
contador_w                  bigint := 0;

c01 CURSOR FOR
SELECT	a.nr_lote_contabil
from	lote_contabil a
where	a.nr_seq_mes_ref	= nr_seq_mes_ref_p
and	a.cd_estabelecimento	= cd_estabelecimento_p
and	coalesce(a.dt_atualizacao_saldo::text, '') = ''
and	a.nr_lote_contabil	= coalesce(nr_lote_contabil_w, a.nr_lote_contabil)
and	exists (	SELECT	1
		from	ctb_movimento_v y
		where	y.nr_lote_contabil	= a.nr_lote_contabil
		and	y.cd_conta_contabil	= cd_conta_contabil_antiga_p);



c02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_conta_debito cd_conta_contabil,
	'D' ie_debito_credito
from	ctb_movimento a
where	a.nr_lote_contabil	= nr_lote_contabil_w
and	a.cd_conta_debito	= cd_conta_contabil_antiga_p

union

SELECT	a.nr_sequencia,
	a.cd_conta_credito,
	'C' ie_debito_credito
from	ctb_movimento a
where	a.nr_lote_contabil	= nr_lote_contabil_w
and	a.cd_conta_credito	= cd_conta_contabil_antiga_p;

vet02	C02%Rowtype;


BEGIN

if (coalesce(nr_lote_contabil_p,0) <> 0) then
	nr_lote_contabil_w	:= nr_lote_contabil_p;
end if;

select	dt_referencia
into STRICT	dt_referencia_w
from	ctb_mes_ref
where	nr_sequencia	= nr_seq_mes_ref_p;


cd_classificacao_w	:= substr(ctb_obter_classif_conta(cd_conta_contabil_nova_p, null, dt_referencia_w),1,40);

open c01;
loop
fetch c01 into
	nr_lote_contabil_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin	
	
	open C02;
	loop
	fetch C02 into	
		vet02;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		cd_classif_credito_w	:= '';
		cd_classif_debito_w	:= '';
			
		if (vet02.ie_debito_credito = 'D') then
			begin
                cd_classif_debito_w	:= cd_classificacao_w;
                update	ctb_movimento
                set	cd_conta_debito		= cd_conta_contabil_nova_p,
                    cd_classif_debito		= cd_classif_debito_w,
                    nm_usuario		= nm_usuario_p,
                    dt_atualizacao		= clock_timestamp()
                where	nr_sequencia		= vet02.nr_sequencia;
                exception when others then
                    ds_erro_w := SQLERRM(SQLSTATE);
			end;
		elsif (vet02.ie_debito_credito = 'C') then
			begin
                cd_classif_credito_w		:= cd_classificacao_w;

                update	ctb_movimento
                set	cd_conta_credito		= cd_conta_contabil_nova_p,
                    cd_classif_credito		= cd_classif_credito_w,
                    nm_usuario		= nm_usuario_p,
                    dt_atualizacao		= clock_timestamp()
                where	nr_sequencia		= vet02.nr_sequencia;
                exception when others then
                    ds_erro_w := SQLERRM(SQLSTATE);
			end;
		end if;
		contador_w := contador_w + 1;
		end;
	end loop;
	close C02;

	end;
end loop;
close c01;

if (coalesce(ds_erro_w::text, '') = '' and contador_w > 0) then	
    commit;
end if;

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
    CALL wheb_mensagem_pck.exibir_mensagem_abort(substr(ds_erro_w,1,255));
end if;

if (contador_w = 0) then
    CALL wheb_mensagem_pck.exibir_mensagem_abort(140484);--Conta nao encontrada
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_trocar_conta_contabil_mov (cd_estabelecimento_p bigint, nr_seq_mes_ref_p bigint, nr_lote_contabil_p bigint, cd_conta_contabil_antiga_p text, cd_conta_contabil_nova_p text, nm_usuario_p text) FROM PUBLIC;

