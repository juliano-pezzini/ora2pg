-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_palm_imprime_lote ( nr_seq_impressora_p bigint, nr_seq_lote_p bigint, nr_seq_relatorio_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

					

ds_endereco_rede_w     	varchar(255);
ds_endereco_ip_w		varchar(255);
nr_prescricao_w		bigint;
qt_existe_w			bigint;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
cd_local_estoque_w		local_estoque.cd_local_estoque%type;
nr_seq_relatorio_w		regra_ap_lote_impressao.nr_seq_relatorio%type;
nr_seq_impressora_w		regra_ap_lote_impressao.nr_seq_impressora%type;

C01 CURSOR FOR
	SELECT	nr_seq_relatorio,
		nr_seq_impressora
	from	regra_ap_lote_impressao
	where	((coalesce(cd_perfil::text, '') = '') or (cd_perfil = coalesce(obter_perfil_ativo, cd_perfil)))
	and		((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = coalesce(cd_estabelecimento_w, cd_estabelecimento)))
	and		((coalesce(cd_setor_atendimento::text, '') = '') or (cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)))
	and		((coalesce(cd_local_estoque::text, '') = '') or (cd_local_estoque = coalesce(cd_local_estoque_w, cd_local_estoque)))
	order by cd_local_estoque desc,
		cd_setor_atendimento desc,
		cd_perfil desc;


BEGIN

nr_seq_relatorio_w := nr_seq_relatorio_p;
nr_seq_impressora_w := nr_seq_impressora_p;

select	max(nr_prescricao),
	max(cd_local_estoque)
into STRICT	nr_prescricao_w,
	cd_local_estoque_w
from	ap_lote
where	nr_sequencia = nr_seq_lote_p;

select 	max(ds_endereco_rede),
	max(ds_endereco_ip)
into STRICT	ds_endereco_rede_w,
	ds_endereco_ip_w
from	impressora
where	nr_sequencia = nr_seq_impressora_p;

select	count(1)
into STRICT	qt_existe_w
from	regra_ap_lote_impressao;

if (qt_existe_w > 0) then

	select	max(cd_estabelecimento),
		max(cd_setor_atendimento)
	into STRICT	cd_estabelecimento_w,
		cd_setor_atendimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_w;

	open C01;
	loop
	fetch C01 into	
		nr_seq_relatorio_w,
		nr_seq_impressora_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_seq_relatorio_w := nr_seq_relatorio_w;
		nr_seq_impressora_w	:= nr_seq_impressora_w;
		end;
	end loop;
	close C01;
	
	if (coalesce(nr_seq_relatorio_w::text, '') = '') then
		nr_seq_relatorio_w := nr_seq_relatorio_p;
	end if;
	
	if (coalesce(nr_seq_impressora_w::text, '') = '') then
		nr_seq_impressora_w := nr_seq_impressora_p;
	else
		select 	max(ds_endereco_rede),
			max(ds_endereco_ip)
		into STRICT	ds_endereco_rede_w,
			ds_endereco_ip_w
		from	impressora
		where	nr_sequencia = nr_seq_impressora_w;
	end if;
end if;

if (coalesce(ds_endereco_rede_w::text, '') = '' or coalesce(ds_endereco_ip_w::text, '') = '') then
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279101);
else
	
	insert into ap_lote_impressao_pda(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
            dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_lote,
            nr_prescricao,
			nr_seq_impressora,
			ds_endereco_rede,       
            nr_seq_relatorio,
			ds_endereco_ip,
			ie_pendente,
			cd_estabelecimento)
    values (	nextval('ap_lote_impressao_pda_seq'),
			clock_timestamp(),
			nm_usuario_p,            
            clock_timestamp(),
			nm_usuario_p,
			nr_seq_lote_p,
            nr_prescricao_w,
			nr_seq_impressora_w,
			ds_endereco_rede_w,
            nr_seq_relatorio_w,
			ds_endereco_ip_w,
			'S',
			coalesce(cd_estabelecimento_w,cd_estabelecimento_p));

	insert into fila_impressao_etiqueta(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_chave,
			nr_seq_impressora,
			nr_seq_relatorio,
			ds_endereco_rede,
			ds_endereco_ip,
			ie_pendente)
	values (	nextval('fila_impressao_etiqueta_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_lote_p,
            nr_seq_impressora_w,
			nr_seq_relatorio_w,
			ds_endereco_rede_w,
            ds_endereco_ip_w,
			'S');

	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_palm_imprime_lote ( nr_seq_impressora_p bigint, nr_seq_lote_p bigint, nr_seq_relatorio_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

