-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_encaminhar_grupo_analise ( nr_seq_ocorrencia_p bigint, nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, ds_observacao_p text, ie_retornar_analise_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_guia_w			varchar(20);
ie_origem_conta_w		varchar(3);
ie_status_w			varchar(1);
nr_seq_grupo_auditor_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_conta_princ_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_ocorrencia_benef_w	bigint;
nr_glosa_oc_criada_w		bigint;
nr_seq_ordem_w			bigint;
nr_seq_grupo_w			bigint;	--grupo auditor atual
qt_grupos_finalizados_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_grupo_criado_w		bigint;
ie_origem_analise_w		pls_analise_conta.ie_origem_analise%type;
ie_analise_cm_nova_w		pls_parametros.ie_analise_cm_nova%type;
/*Cursor que obtem somente os grupos de um determinada ocorrencia que e cadastrado como conta medica e na origem conta certo.*/
		
C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_grupo_auditor 	a,
		pls_ocorrencia_grupo 	b,
		pls_ocorrencia 		c
	where	b.nr_seq_grupo = a.nr_sequencia
	and	c.nr_sequencia = b.nr_seq_ocorrencia
	and	((coalesce(a.nr_seq_classificacao,0) = 0) or exists (SELECT	1
								from    pls_classif_grupo_auditor x
								where	x.nr_sequencia = a.nr_seq_classificacao
								and	coalesce(x.ie_encaminhar_grupo,'S') = 'S'))
	and	a.cd_estabelecimento 			= cd_estabelecimento_p
	and	c.nr_sequencia 				= nr_seq_ocorrencia_p
	and	coalesce(b.ie_conta_medica,'S') 		= 'S'
	and	b.ie_situacao		= 'A'
	and	coalesce(b.ie_origem_conta,ie_origem_conta_w) = ie_origem_conta_w
	and	((coalesce(b.ie_tipo_analise::text, '') = '') or (b.ie_tipo_analise = 'A') or (b.ie_tipo_analise = 'C' and ie_origem_analise_w in ('1','3','4','5','6')) or (b.ie_tipo_analise	= 'P' and ie_origem_analise_w in ('2','7')))
	order by b.nr_seq_fluxo desc;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta
	where	nr_seq_analise = nr_seq_analise_p;	
	

BEGIN
select	coalesce(max(ie_analise_cm_nova),'N')
into STRICT	ie_analise_cm_nova_w
from	pls_parametros;

begin
	select	ie_origem_conta,
		nr_seq_prestador,
		cd_guia,
		nr_seq_segurado,
		ie_origem_analise
	into STRICT	ie_origem_conta_w,
		nr_seq_prestador_w,
		cd_guia_w,
		nr_seq_segurado_w,
		ie_origem_analise_w
	from	pls_analise_conta
	where	nr_sequencia	= nr_seq_analise_p;
exception
when others then
	ie_origem_conta_w	:= null;
	nr_seq_prestador_w	:= null;
	cd_guia_w		:= null;
	nr_seq_segurado_w	:= null;
end;

nr_seq_conta_princ_w := pls_obter_conta_principal(cd_guia_w, nr_seq_analise_p, nr_seq_segurado_w, nr_seq_prestador_w);

if (coalesce(nr_seq_grupo_atual_p,0) > 0) then
	select	min(nr_seq_ordem)
	into STRICT	nr_seq_ordem_w
	from (SELECT	nr_seq_ordem
		 from	pls_auditoria_conta_grupo
		 where	nr_seq_analise	= nr_seq_analise_p		
		 and	nr_seq_grupo	= nr_seq_grupo_atual_p
		 and	coalesce(dt_liberacao::text, '') = ''
		 and    coalesce(ie_pre_analise, 'N') = 'N'
		 and	(nm_auditor_atual IS NOT NULL AND nm_auditor_atual::text <> '')) alias6;	
else
	select	max(nr_seq_ordem)
	into STRICT	nr_seq_ordem_w
	from	pls_auditoria_conta_grupo
	where	nr_seq_analise	= nr_seq_analise_p	
	and     coalesce(ie_pre_analise, 'N') = 'N';	
end if;

nr_seq_ordem_w := coalesce(nr_seq_ordem_w,0);

if (coalesce(ie_retornar_analise_p,'N') = 'S') then							
	nr_seq_grupo_criado_w := pls_inserir_grupo_aud(nr_seq_analise_p, nr_seq_grupo_atual_p, nr_seq_ordem_w, ds_observacao_p, nm_usuario_p, cd_estabelecimento_p, nr_seq_grupo_criado_w);		
	CALL pls_liberar_analise_grupo(nr_seq_analise_p, nm_usuario_p, nr_seq_grupo_atual_p, 'N', cd_estabelecimento_p);	
end if;

open C01;
loop
fetch C01 into	
	nr_seq_grupo_auditor_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	nr_seq_grupo_criado_w := pls_inserir_grupo_aud(nr_seq_analise_p, nr_seq_grupo_auditor_w, nr_seq_ordem_w, ds_observacao_p, nm_usuario_p, cd_estabelecimento_p, nr_seq_grupo_criado_w);		
	end;
end loop;
close C01;

nr_seq_ocorrencia_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, null, nr_seq_conta_princ_w, null, null, null, nm_usuario_p, substr('Ocorrencia inserida pelo usuario '||obter_nome_usuario(nm_usuario_p) ||Chr(13)||Chr(10)||ds_observacao_p,1,4000), null, 8, cd_estabelecimento_p, 'N', null, nr_seq_ocorrencia_benef_w, null, null, null, null);

-- Se utilizar a funcao "OPS - Analisde Contas Medicas (Nova)" nao deve inserir na "pls_analise_conta_item"
if (ie_analise_cm_nova_w = 'N') then
	nr_glosa_oc_criada_w := pls_atual_analise_conta_item(	null, nr_seq_conta_princ_w, null, null, null, null, nr_seq_ocorrencia_benef_w, 0, 0, cd_estabelecimento_p, nm_usuario_p, nr_seq_analise_p, nr_glosa_oc_criada_w);
end if;

select 	count(nr_sequencia)
into STRICT	qt_grupos_finalizados_w
from 	pls_auditoria_conta_grupo
where	nr_Seq_analise	= nr_seq_analise_p
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
	
/*Se existir um grupo finalizado (ou seja com data de liberacao) se coloca a analise em em auditoria senao em aguardando auditoria*/

if (qt_grupos_finalizados_w = 0) then
	ie_status_w := 'G';
else
	ie_status_w := 'A';
end if;

CALL pls_alterar_status_analise_cta(nr_seq_analise_p, ie_status_w, 'PLS_ENCAMINHAR_GRUPO_ANALISE', nm_usuario_p, cd_estabelecimento_p);
	
update	pls_analise_conta
set	ie_auditoria	= 'S'
where	nr_Sequencia 	= nr_seq_analise_p;

open C02;
loop
fetch C02 into	
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	update	pls_conta
	set	ie_status	= 'A',
		dt_atualizacao  = clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_conta_w;
	
	update	pls_conta_proc
	set	ie_status	= 'A',
		dt_atualizacao  = clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_seq_conta	= nr_seq_conta_w
	and	ie_status	<> 'D';
	
	update	pls_conta_mat
	set	ie_status	= 'A',
		dt_atualizacao  = clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_seq_conta	= nr_seq_conta_w;
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_encaminhar_grupo_analise ( nr_seq_ocorrencia_p bigint, nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, ds_observacao_p text, ie_retornar_analise_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

