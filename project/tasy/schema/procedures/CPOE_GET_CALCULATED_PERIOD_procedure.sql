-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_get_calculated_period (dt_start_p timestamp, qt_days_p bigint, dt_end_p timestamp, si_dif_interval_p text, si_sunday_p text default null, si_monday_p text default null, si_tuesday_p text default null, si_wednesday_p text default null, si_thursday_p text default null, si_friday_p text default null, si_saturday_p text default null, qt_days_calculated_p INOUT bigint DEFAULT NULL, dt_end_calculated_p INOUT timestamp DEFAULT NULL) AS $body$
DECLARE


dt_end_w	timestamp	:= null;
dt_reference_w	timestamp	:= null;
qt_days_w	bigint;
qt_tot_days_w bigint := 0;


BEGIN

if (dt_start_p IS NOT NULL AND dt_start_p::text <> '') and ((qt_days_p > 0) or (dt_end_p IS NOT NULL AND dt_end_p::text <> '')) then
	if (si_dif_interval_p = 'Y') then
		dt_reference_w	:= dt_start_p;

		qt_days_w	:= 0;
		while ((qt_days_w < qt_days_p  and qt_days_p > 0) or (dt_reference_w < dt_end_p and (dt_end_p IS NOT NULL AND dt_end_p::text <> ''))) and (dt_reference_w <= dt_reference_w + 100) loop

			if	((si_sunday_p = 'Y') and (PKG_DATE_UTILS.get_WeekDay(dt_reference_w) = 1)) or
				((si_monday_p = 'Y') and (PKG_DATE_UTILS.get_WeekDay(dt_reference_w) = 2)) or
				((si_tuesday_p = 'Y') and (PKG_DATE_UTILS.get_WeekDay(dt_reference_w) = 3)) or
				((si_wednesday_p = 'Y') and (PKG_DATE_UTILS.get_WeekDay(dt_reference_w) = 4)) or
				((si_thursday_p = 'Y') and (PKG_DATE_UTILS.get_WeekDay(dt_reference_w) = 5)) or
				((si_friday_p = 'Y') and (PKG_DATE_UTILS.get_WeekDay(dt_reference_w) = 6)) or
				((si_saturday_p = 'Y') and (PKG_DATE_UTILS.get_WeekDay(dt_reference_w) = 7)) then
				qt_days_w	:= qt_days_w + 1;
                dt_end_w    := dt_start_p + qt_tot_days_w;

			end if;
            qt_tot_days_w := qt_tot_days_w +1;
			dt_reference_w	:= dt_reference_w + 1;

		end loop;
		dt_end_w := dt_reference_w - 1/24/60;
	else
		dt_end_w	:= dt_start_p + qt_days_p - 1/24/60;
    qt_days_w	:= dt_end_p - dt_start_p;
	end if;
end if;

dt_end_calculated_p := dt_end_w;
qt_days_calculated_p  := qt_days_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_get_calculated_period (dt_start_p timestamp, qt_days_p bigint, dt_end_p timestamp, si_dif_interval_p text, si_sunday_p text default null, si_monday_p text default null, si_tuesday_p text default null, si_wednesday_p text default null, si_thursday_p text default null, si_friday_p text default null, si_saturday_p text default null, qt_days_calculated_p INOUT bigint DEFAULT NULL, dt_end_calculated_p INOUT timestamp DEFAULT NULL) FROM PUBLIC;

