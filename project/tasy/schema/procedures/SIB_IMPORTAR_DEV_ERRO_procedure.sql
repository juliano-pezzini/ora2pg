-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sib_importar_dev_erro ( nr_seq_lote_sib_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_texto_w			varchar(2000);
nr_seq_interno_w		integer;
qt_registro_w			integer;
ie_tipo_registro_w		varchar(1);
nr_cco_w			bigint;
nr_digito_cco_w			smallint;
nr_reg_controle_w		smallint;
ds_conteudo_erro_w		varchar(70);
cd_erro_w			smallint;
ds_erro_w			varchar(40);
ds_causa_erro_w			varchar(255);
ie_registro_w			smallint;
i				integer;
cd_motivo_w			smallint;
cd_usuario_plano_w		varchar(30);
nm_beneficiario_w		varchar(70);
dt_nascimento_w			timestamp;
ds_sexo_w			varchar(10);
nr_cpf_w			bigint;
nm_mae_w			varchar(70);
dt_adesao_w			timestamp;

C01 CURSOR FOR 
	SELECT	ds_texto 
	from	w_sib_devolucao;


BEGIN 
 
delete	from sib_devolucao_erro 
where	nr_seq_lote	= nr_seq_lote_sib_p;
 
delete	FROM sib_devolucao_log 
where	nr_seq_lote_sib_envio	= nr_seq_lote_sib_p 
and	ie_tipo_arquivo		= 'D';
 
delete	FROM sib_devolucao_log 
where	nr_seq_lote_sib_reenvio	= nr_seq_lote_sib_p 
and	ie_tipo_arquivo		= 'D';
 
open C01;
loop 
fetch C01 into	 
	ds_texto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	i:= 0;
	 
	select	(coalesce(substr(ds_texto_w,8,1),'0'))::numeric  
	into STRICT	ie_registro_w 
	;
	 
	if (ie_registro_w	= 1) then /* Inclusão */
 
		if (coalesce(substr(ds_texto_w,366,2),'0') <> '0') then 
			ie_tipo_registro_w	:= 'A';
		else	 
			ie_tipo_registro_w	:= 'E';
		end if;
	elsif (ie_registro_w	= 2) then /* Alteração */
 
		if (coalesce(substr(ds_texto_w,488,7),'0') <> '0') then 
			ie_tipo_registro_w	:= 'A';
		else	 
			ie_tipo_registro_w	:= 'E';
		end if;
	elsif (ie_registro_w	= 7) then /* Exclusão */
 
		if (coalesce(substr(ds_texto_w,93,3),'0') <> '0') then 
			ie_tipo_registro_w	:= 'E';
		else	 
			ie_tipo_registro_w	:= 'A';
		end if;
	end if;
	 
	if (ie_tipo_registro_w	= 'A') then 
		if (ie_registro_w	= 1) then			 
			cd_motivo_w		:= (substr(ds_texto_w,9,2))::numeric;
			cd_usuario_plano_w	:= substr(ds_texto_w,11,30);
			nm_beneficiario_w	:= limpa_espacos_entre(substr(ds_texto_w,41,70));
			/*aaschlote 20/04/2011 OS - 307601*/
 
			begin 
			dt_nascimento_w		:= to_date(substr(ds_texto_w,111,8),'yyyy/mm/dd');
			exception 
			when others then 
				/*aaschlote 11/05/2011 OS - 317669*/
 
				CALL sib_gravar_log_devolucao(nr_seq_lote_sib_p,'D',(substr(ds_texto_w,1,7))::numeric ,'A data de nascimento está inválida -> '|| substr(ds_texto_w,111,8), 
							cd_estabelecimento_p,nm_usuario_p);
				dt_nascimento_w	:= null;
			end;
			select	CASE WHEN substr(ds_texto_w,119,1)='1' THEN 'Masculino'  ELSE 'Feminino' END  
			into STRICT	ds_sexo_w 
			;
			nr_cpf_w		:= (substr(ds_texto_w,120,11))::numeric;
			nm_mae_w		:= limpa_espacos_entre(substr(ds_texto_w,172,70));
			dt_adesao_w		:= to_date(substr(ds_texto_w,358,8),'yyyy/mm/dd');
			nr_cco_w		:= 0;
			nr_digito_cco_w		:= 0;
		elsif (ie_registro_w	= 2) then 
			cd_motivo_w		:= (substr(ds_texto_w,9,2))::numeric;
			nr_cco_w		:= (substr(ds_texto_w,11,10))::numeric;
			nr_digito_cco_w		:= (substr(ds_texto_w,21,2))::numeric;
			cd_usuario_plano_w	:= substr(ds_texto_w,113,30);
			nm_beneficiario_w	:= limpa_espacos_entre(substr(ds_texto_w,23,70));
			/*aaschlote 20/04/2011 OS - 307601*/
 
			begin 
			dt_nascimento_w		:= to_date(substr(ds_texto_w,93,8),'yyyy/mm/dd');
			exception 
			when others then 
				/*aaschlote 11/05/2011 OS - 317669*/
 
				CALL sib_gravar_log_devolucao(nr_seq_lote_sib_p,'D',(substr(ds_texto_w,1,7))::numeric ,'A data de nascimento está inválida -> '|| substr(ds_texto_w,93,8), 
							cd_estabelecimento_p,nm_usuario_p);
				dt_nascimento_w	:= null;
			end;
			select	CASE WHEN substr(ds_texto_w,101,1)='1' THEN 'Masculino'  ELSE 'Feminino' END  
			into STRICT	ds_sexo_w 
			;
			nr_cpf_w		:= (substr(ds_texto_w,102,11))::numeric;
			nm_mae_w		:= limpa_espacos_entre(substr(ds_texto_w,154,70));
			dt_adesao_w		:= to_date(substr(ds_texto_w,340,8),'yyyy/mm/dd');
		elsif (ie_registro_w	= 7) then 
			cd_motivo_w		:= (substr(ds_texto_w,9,2))::numeric;
			nr_cco_w		:= (substr(ds_texto_w,11,10))::numeric;
			nr_digito_cco_w		:= (substr(ds_texto_w,21,2))::numeric;
			cd_usuario_plano_w	:= '0';
			nm_beneficiario_w	:= '';
			/*aaschlote 20/04/2011 OS - 307601*/
 
			begin 
			dt_nascimento_w		:= to_date(substr(ds_texto_w,23,8),'yyyy/mm/dd');
			exception 
			when others then 
				/*aaschlote 11/05/2011 OS - 317669*/
 
				CALL sib_gravar_log_devolucao(nr_seq_lote_sib_p,'D',(substr(ds_texto_w,1,7))::numeric ,'A data de nascimento está inválida -> '|| substr(ds_texto_w,23,8), 
							cd_estabelecimento_p,nm_usuario_p);
				dt_nascimento_w	:= null;
			end;
			ds_sexo_w		:= '';
			nr_cpf_w		:= 0;
			nm_mae_w		:= '';
			dt_adesao_w		:= null;
		end if;
		nr_seq_interno_w	:= (substr(ds_texto_w,1,7))::numeric;
		nr_reg_controle_w	:= 0;
		ds_conteudo_erro_w	:= '0';
		cd_erro_w		:= 0;
		ds_erro_w		:= '0';
		ds_causa_erro_w		:= '0';
	else 
		begin			 
		nr_seq_interno_w	:= (substr(ds_texto_w,1,7))::numeric;
		nr_cco_w		:= (substr(ds_texto_w,9,10))::numeric;
		nr_digito_cco_w		:= (substr(ds_texto_w,19,2))::numeric;
		 
		nr_reg_controle_w	:= (substr(ds_texto_w,21,2))::numeric;
		ds_conteudo_erro_w	:= substr(ds_texto_w,23,70);
		begin 
		cd_erro_w		:= (substr(ds_texto_w,93,3))::numeric;
		exception 
		when others then 
			cd_erro_w		:= (substr(ds_texto_w,92,3))::numeric;
		end;
		if (cd_erro_w	= 110) then 
			i := -1;
		end if;
		ds_erro_w		:= substr(ds_texto_w,96 + i,40);
		ds_causa_erro_w		:= substr(ds_texto_w,136 + i,205);
		ie_registro_w		:= (substr(ds_texto_w,8,1))::numeric;
		exception 
		when others then 
			nr_cco_w		:= 0;
			nr_digito_cco_w		:= 0;
			nr_reg_controle_w	:= 0;
			ds_conteudo_erro_w	:= '0';
			cd_erro_w		:= 0;
			ds_erro_w		:= '0';
			ds_causa_erro_w		:= '0';
			ie_registro_w		:= 0;
		end;
	end if;
	 
	begin 
	insert into sib_devolucao_erro(	nr_sequencia, 
						nr_seq_lote, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_interno, 
						nr_cco, 
						nr_digito_cco, 
						nr_reg_controle, 
						ds_conteudo_erro, 
						cd_erro, 
						ds_erro, 
						ds_causa_erro, 
						ie_tipo_registro, 
						ie_registro, 
						cd_motivo, 
						cd_usuario_plano, 
						nm_segurado, 
						dt_nascimento, 
						ds_sexo, 
						nr_cpf, 
						nm_mae, 
						dt_adesao) 
					values (	nextval('sib_devolucao_erro_seq'), 
						nr_seq_lote_sib_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_interno_w, 
						nr_cco_w, 
						nr_digito_cco_w, 
						nr_reg_controle_w, 
						ds_conteudo_erro_w, 
						cd_erro_w, 
						ds_erro_w,							 
						ds_causa_erro_w, 
						ie_tipo_registro_w, 
						ie_registro_w, 
						cd_motivo_w, 
						cd_usuario_plano_w, 
						nm_beneficiario_w, 
						dt_nascimento_w, 
						ds_sexo_w, 
						nr_cpf_w, 
						nm_mae_w, 
						dt_adesao_w);
	exception 
	when others then 
		/*aaschlote 11/05/2011 OS - 317669*/
 
		CALL sib_gravar_log_devolucao(nr_seq_lote_sib_p,'D',nr_seq_interno_w,'Erro ao importrar o arquivo: ' || sqlerrm(SQLSTATE), 
					cd_estabelecimento_p,nm_usuario_p);
	end;
	commit;
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sib_importar_dev_erro ( nr_seq_lote_sib_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

