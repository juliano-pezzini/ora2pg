-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_substituir_maquina (nr_seq_dialise_dialisador_p bigint, nr_seq_motivo_subst_p text, nr_seq_maquina_p bigint, nr_seq_ponto_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_dial_retirada_w		hd_dialise_dialisador.nr_sequencia%type;
nr_seq_dialise_dialisador_w	hd_dialise_dialisador.nr_sequencia%type;
nr_seq_dialise_w			hd_dialise_dialisador.nr_seq_dialise%type;
dt_dialise_w				hd_dialise.dt_dialise%type;
nr_seq_ponto_w				hd_ponto_acesso.nr_sequencia%type;
cd_pessoa_fisica_w			hd_dialise.cd_pessoa_fisica%type;
nr_seq_turno_w				hd_turno.nr_sequencia%type;
nr_seq_agenda_w				hd_agenda_dialise.nr_sequencia%type;
nr_seq_unidade_w			hd_unidade_dialise.nr_sequencia%type;
ie_dia_semana_w				smallint;
ie_atualiza_w				varchar(10);

NR_ATENDIMENTO_w         HD_DIALISE.NR_ATENDIMENTO%type;
CD_SETOR_ATENDIMENTO_w   HD_PONTO_ACESSO.CD_SETOR_ATENDIMENTO%type;
CD_UNIDADE_BASICA_w      HD_PONTO_ACESSO.CD_UNIDADE_BASICA%type;
CD_UNIDADE_COMPL_w       HD_PONTO_ACESSO.CD_UNIDADE_COMPL%type;
IE_GERAR_MOVIMENTACAO_W  varchar(1);

BEGIN
if (nr_seq_dialise_dialisador_p IS NOT NULL AND nr_seq_dialise_dialisador_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_dial_retirada_w
	from	hd_dialise_dialisador
	where	nr_sequencia = nr_seq_dialise_dialisador_p;
	
	select	max(nr_seq_dialise)
	into STRICT	nr_seq_dialise_w
	from	hd_dialise_dialisador
	where	nr_sequencia = nr_seq_dialise_dialisador_p;

	update	hd_dialise_dialisador
	set		dt_retirada = clock_timestamp(),
			cd_pf_retirada = substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10),
			nr_seq_motivo_sub = nr_seq_motivo_subst_p
	where	nr_sequencia = nr_seq_dialise_dialisador_p;

	select 	nextval('hd_dialise_dialisador_seq')
	into STRICT	nr_seq_dialise_dialisador_w
	;
		
	insert into hd_dialise_dialisador(	
		NR_SEQUENCIA,
		CD_ESTABELECIMENTO,
		DT_ATUALIZACAO,
		NM_USUARIO,
		NR_SEQ_DIALISADOR,
		NR_SEQ_MAQUINA,
		NR_SEQ_UNID_DIALISE,
		QT_REUSO_ATUAL,
		DT_MONTAGEM,						
		DT_ATUALIZACAO_NREC,
		NM_USUARIO_NREC,
		CD_PF_MONTAGEM,		
		NR_SEQ_PONTO_ACESSO,
		NR_SEQ_DIALISE,
		NR_SEQ_OSMOSE,
		IE_TROCA_EMERGENCIA)
	SELECT	nr_seq_dialise_dialisador_w,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_dialisador,
		nr_seq_maquina_p,
		nr_seq_unid_dialise,
		qt_reuso_atual,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10),
		nr_seq_ponto_p,
		nr_seq_dialise,
		nr_seq_osmose,
		ie_troca_emergencia
	from	hd_dialise_dialisador
	where	nr_sequencia = nr_seq_dialise_dialisador_p;
	
	if (nr_seq_dialise_w IS NOT NULL AND nr_seq_dialise_w::text <> '') then
		CALL hd_gerar_assinatura(nr_seq_dialise_dialisador_w, null, nr_seq_dialise_w, null, null, null, nr_seq_dial_retirada_w, null, null, 'SM', nm_usuario_p, 'N');
		/* Inicio rotina atualização agenda*/

		select	max(nr_sequencia)
		into STRICT	nr_seq_agenda_w
		from	hd_agenda_dialise
		where	nr_seq_dialise = nr_seq_dialise_w;
		
		if (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
			select	max(dt_dialise),
					max(cd_pessoa_fisica),
					max(nr_seq_unid_dialise),
					max(obter_cod_dia_semana(dt_dialise))
			into STRICT	dt_dialise_w,
					cd_pessoa_fisica_w,
					nr_seq_unidade_w,
					ie_dia_semana_w
			from	hd_dialise
			where	nr_sequencia = nr_seq_dialise_w;
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_turno_w
			from	hd_turno ht
			where	dt_dialise_w BETWEEN pkg_date_utils.get_time(dt_dialise_w,
									  		  pkg_date_utils.EXTRACT_FIELD('HOUR',ht.dt_inicio),
											  pkg_date_utils.EXTRACT_FIELD('MINUTE',ht.dt_inicio),
											  pkg_date_utils.EXTRACT_FIELD('SECOND',ht.dt_inicio)) AND
											  pkg_date_utils.get_time(dt_dialise_w,
									  		  pkg_date_utils.EXTRACT_FIELD('HOUR',ht.dt_fim),
											  pkg_date_utils.EXTRACT_FIELD('MINUTE',ht.dt_fim),
											  pkg_date_utils.EXTRACT_FIELD('SECOND',ht.dt_fim))
			and		ie_situacao = 'A';

			select	coalesce(max(nr_seq_ponto), nr_seq_ponto_p)
			into STRICT	nr_seq_ponto_w
			from	hd_maquina_dialise
			where	nr_sequencia = nr_seq_maquina_p;
			
			if (dt_dialise_w IS NOT NULL AND dt_dialise_w::text <> '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (nr_seq_turno_w IS NOT NULL AND nr_seq_turno_w::text <> '') and (nr_seq_unidade_w IS NOT NULL AND nr_seq_unidade_w::text <> '') and (ie_dia_semana_w IS NOT NULL AND ie_dia_semana_w::text <> '') and (nr_seq_ponto_w IS NOT NULL AND nr_seq_ponto_w::text <> '') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then								
				select	hd_atualiza_agenda(
					trunc(dt_dialise_w),
					cd_pessoa_fisica_w,
					nr_seq_turno_w,
					nr_seq_unidade_w,
					cd_estabelecimento_p,
					ie_dia_semana_w,
					nr_seq_ponto_w,
					null,
					nr_seq_agenda_w)
				into STRICT	ie_atualiza_w
				;
			end if;
			
			if (ie_atualiza_w = 'S') then
				IE_GERAR_MOVIMENTACAO_W := obter_param_usuario(7009, 278, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, IE_GERAR_MOVIMENTACAO_W);
				IF IE_GERAR_MOVIMENTACAO_W = 'S' THEN
					BEGIN
					  SELECT
						  hd.NR_ATENDIMENTO
						 ,hpa.CD_SETOR_ATENDIMENTO
						 ,hpa.CD_UNIDADE_BASICA
						 ,hpa.CD_UNIDADE_COMPL
					  INTO STRICT
						 NR_ATENDIMENTO_w
						,CD_SETOR_ATENDIMENTO_w
						,CD_UNIDADE_BASICA_w
						,CD_UNIDADE_COMPL_w
					  FROM HD_DIALISE hd, HD_DIALISE_DIALISADOR hdd, HD_PONTO_ACESSO hpa
					  WHERE hd.nr_sequencia = hdd.nr_seq_dialise
					  AND   hdd.nr_seq_ponto_acesso = hpa.nr_sequencia
					  AND   hd.nr_sequencia = nr_seq_dialise_w
					  AND   hdd.nr_sequencia =  nr_seq_dialise_dialisador_w;

					END;

					CALL GERAR_TRANSFERENCIA_PACIENTE(
					   nr_atendimento_p        => NR_ATENDIMENTO_w
					  ,cd_setor_atendimento_p   => CD_SETOR_ATENDIMENTO_w
					  ,cd_unidade_basica_p      => CD_UNIDADE_BASICA_w
					  ,cd_unidade_compl_p       => CD_UNIDADE_COMPL_w
					  ,cd_tipo_acomodacao_p     => NULL
					  ,nr_acompanhantes_p       => 0
					  ,nr_seq_motivo_transf_p   => NULL
					  ,ds_observacao_p          => NULL
					  ,nm_usuario_p             => nm_usuario_p
					  ,dt_entrada_unidade_p     => clock_timestamp());
				  END IF;
			end if;
		end if;  /*fim rotina atualização agenda*/
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_substituir_maquina (nr_seq_dialise_dialisador_p bigint, nr_seq_motivo_subst_p text, nr_seq_maquina_p bigint, nr_seq_ponto_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

