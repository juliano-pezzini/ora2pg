-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE job_registro_exame_wint (nr_seq_protocolo_p protocolo_convenio.nr_seq_protocolo%type default null, ie_job_p wint_confirmacao_exame.ie_status%type default 'S', nr_seq_proc_paciente_p wint_confirmacao_exame.nr_seq_proc_paciente%type default null, nr_interno_conta_p conta_paciente.nr_interno_conta%type default null, qt_dias_leitura_p wint_confirmacao_exame.qt_procedimento%type default 15, qt_max_registros_p wint_confirmacao_exame.qt_procedimento%type default 50) AS $body$
DECLARE

        ds_param_integ_w        varchar(5000);
        nr_integration_code_w   smallint;
        nr_sequencia_w          wint_confirmacao_exame.nr_sequencia%type;
        cd_procedimento_w       wint_confirmacao_exame.cd_procedimento%type;
        qt_procedimento_w       wint_confirmacao_exame.qt_procedimento%type;
        cd_cart_benef_w         atend_categoria_convenio.cd_usuario_convenio%type;
        dt_atual_w              varchar(8);
        nr_crm_w                tiss_conta_contrat_solic.nr_crm_solic%type;
        cd_especialidade_w      prestador_wint.cd_especialidade%type;
        cd_prest_exec_movto1_w  bigint;
        qt_servico_w            bigint;
        qtd_data_read           bigint;
        cd_clinica_w            prestador_wint.cd_clinica%type;
        ds_cod_hospital_w       prestador_wint.ds_cod_hospital%type;
        ds_aplicativo_w         prestador_wint.ds_aplicativo%type;
        cd_unid_prestador_w     prestador_wint.cd_unid_prestador%type;
        cd_prestador_w          bigint;
        nr_ano_guia_w           bigint;
        nr_guia_atend_w         tiss_conta_proc.nr_guia_prestador%type;
        qt_insumo_w             wint_conf_exame_insumo.qt_item%type;
        cd_insumo_w             wint_conf_exame_insumo.cd_item%type;
        tp_insumo_w             varchar(2);
        ie_tiss_tipo_despesa_w  material_atend_paciente.ie_tiss_tipo_despesa%type;
        nr_seq_proc_paciente_w  wint_confirmacao_exame.nr_seq_proc_paciente%type;
        ie_tipo_atend_conta_w   conta_paciente.ie_tipo_atend_conta%type;
        ie_tipo_exame_w         wint_confirmacao_exame.ie_tipo_exame%type;
        ie_without_register_wint wint_confirmacao_exame.ie_status%type := 'N';
	dt_leitura_w		timestamp := clock_timestamp() - qt_dias_leitura_p;
	contador_w		bigint := 0;
	dt_envio_w		timestamp;

c_exam_wint_job CURSOR FOR
SELECT  cp.nr_interno_conta
from	conta_paciente cp,
        protocolo_convenio pc,
        atendimento_paciente ap,
        convenio_estabelecimento ce
where 	cp.nr_seq_protocolo = pc.nr_seq_protocolo
and	ap.nr_atendimento = cp.nr_atendimento
and     pc.cd_convenio = ce.cd_convenio
and     ce.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
and     coalesce(ce.ie_utiliza_wint, 'N') = 'S'
and	cp.dt_conta_protocolo > dt_leitura_w
and 	ap.ie_tipo_atendimento <> 1
and 	not exists (	select  1
			from	wint_confirmacao_exame x,
				procedimento_paciente y
			where	x.nr_seq_proc_paciente = y.nr_sequencia
			and	y.nr_interno_conta = cp.nr_interno_conta);

c_exam_wint_confirm CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_proc_paciente,
	cd_procedimento,
	qt_procedimento,
	dt_procedimento,
	qt_servico,
	ie_tipo_exame,
	dt_envio
from	(
select  a.nr_sequencia nr_sequencia,
        a.nr_seq_proc_paciente nr_seq_proc_paciente,
        a.cd_procedimento cd_procedimento,
        a.qt_procedimento qt_procedimento,
        to_char(a.dt_procedimento, 'yyyy')dt_procedimento,
        (select count(*)
         from wint_conf_exame_insumo b 
         where b.nr_seq_wint_exame = a.nr_sequencia) + 1 qt_servico,
        a.ie_tipo_exame ie_tipo_exame,
	a.dt_envio dt_envio	
from    wint_confirmacao_exame a
where   ie_status = 'E'
and	(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
and     coalesce(nr_seq_proc_paciente_p::text, '') = ''
and	coalesce(nr_interno_conta_p::text, '') = ''
and	coalesce(nr_seq_protocolo_p::text, '') = ''

union

select  a.nr_sequencia nr_sequencia,
        a.nr_seq_proc_paciente nr_seq_proc_paciente,
        a.cd_procedimento cd_procedimento,
        a.qt_procedimento qt_procedimento,
        to_char(a.dt_procedimento, 'yyyy')dt_procedimento,
        (select count(*) 
         from wint_conf_exame_insumo b 
         where b.nr_seq_wint_exame = a.nr_sequencia) + 1 qt_servico,
        a.ie_tipo_exame ie_tipo_exame,
	coalesce(a.dt_envio,clock_timestamp() + interval '1 days')dt_envio	
from    wint_confirmacao_exame a
where   ie_status = 'E'
and	(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
and	nr_seq_proc_paciente_p > 0
and     a.nr_seq_proc_paciente = nr_seq_proc_paciente_p

union

select  a.nr_sequencia nr_sequencia,
        a.nr_seq_proc_paciente nr_seq_proc_paciente,
        a.cd_procedimento cd_procedimento,
        a.qt_procedimento qt_procedimento,
        to_char(a.dt_procedimento, 'yyyy')dt_procedimento,
        (select count(*) 
         from wint_conf_exame_insumo b 
         where b.nr_seq_wint_exame = a.nr_sequencia) + 1 qt_servico,
        a.ie_tipo_exame ie_tipo_exame,
	coalesce(a.dt_envio,clock_timestamp() + interval '1 days')dt_envio	
from    wint_confirmacao_exame a,
	procedimento_paciente b
where   a.ie_status = 'E'
and	(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
and     a.nr_seq_proc_paciente = b.nr_sequencia
and	nr_interno_conta_p > 0
and	b.nr_interno_conta = nr_interno_conta_p

union

select  a.nr_sequencia nr_sequencia,
        a.nr_seq_proc_paciente nr_seq_proc_paciente,
        a.cd_procedimento cd_procedimento,
        a.qt_procedimento qt_procedimento,
        to_char(a.dt_procedimento, 'yyyy')dt_procedimento,
        (select count(*) 
         from wint_conf_exame_insumo b 
         where b.nr_seq_wint_exame = a.nr_sequencia) + 1 qt_servico,
        a.ie_tipo_exame ie_tipo_exame,
	coalesce(a.dt_envio,clock_timestamp() + interval '1 days')dt_envio	
from    wint_confirmacao_exame a,
	procedimento_paciente b,
	conta_paciente c
where   a.ie_status = 'E'
and	(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
and     a.nr_seq_proc_paciente = b.nr_sequencia
and	b.nr_interno_conta = c.nr_interno_conta
and	nr_seq_protocolo_p > 0
and	c.nr_seq_protocolo = nr_seq_protocolo_p) alias25
where	1 = 1
order by dt_envio desc;

c02 CURSOR FOR
SELECT  b.cd_item,
        b.qt_item,
        coalesce(a.ie_tiss_tipo_despesa, 3)
from    material_atend_paciente a, wint_conf_exame_insumo b
where   a.nr_sequencia = b.nr_seq_mat_atend_pac
and     b.nr_seq_wint_exame = nr_sequencia_w;

BEGIN

if (ie_job_p = 'S')then
        for c_exam_wint_job_p in c_exam_wint_job loop
                CALL inserir_wint_confirmacao_exame(wheb_usuario_pck.get_nm_usuario, c_exam_wint_job_p.nr_interno_conta, null);
        end loop;
else
        if (nr_seq_proc_paciente_p IS NOT NULL AND nr_seq_proc_paciente_p::text <> '')then
                CALL inserir_wint_confirmacao_exame(wheb_usuario_pck.get_nm_usuario, null, null, nr_seq_proc_paciente_p);
        elsif (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then
                CALL inserir_wint_confirmacao_exame(wheb_usuario_pck.get_nm_usuario, null, nr_seq_protocolo_p);
        end if;
end if;

open c_exam_wint_confirm;
loop
fetch c_exam_wint_confirm into
        nr_sequencia_w,
        nr_seq_proc_paciente_w,
        cd_procedimento_w,
        qt_procedimento_w,
        nr_ano_guia_w,
        qt_servico_w,
        ie_tipo_exame_w,
	dt_envio_w;
EXIT WHEN NOT FOUND; /* apply on c_exam_wint_confirm */
        begin
                qtd_data_read := 1;
                dt_atual_w      := to_char(clock_timestamp(), 'yyyymmdd');

                begin
                select  obter_crm_medico(b.cd_medico_executor) nr_crm_solic,
                        obter_dados_categ_conv(a.nr_atendimento, 'U'),
                        a.cd_autorizacao,
                        t.ie_tipo_atendimento
                into STRICT    nr_crm_w,
                        cd_cart_benef_w,
                        nr_guia_atend_w,
                        ie_tipo_atend_conta_w
                from    conta_paciente a,
                        procedimento_paciente b,
			atendimento_paciente t
                where   a.nr_interno_conta = b.nr_interno_conta
		and	t.nr_atendimento = a.nr_atendimento
                and     b.nr_sequencia = nr_seq_proc_paciente_w;
                exception
                        when no_data_found then
                                nr_crm_w := null;
                                cd_cart_benef_w := null;
                                nr_guia_atend_w := null;
                                ie_tipo_atend_conta_w := null;
                        when too_many_rows then
                                nr_crm_w := null;
                                cd_cart_benef_w := null;
                                nr_guia_atend_w := null;
                                ie_tipo_atend_conta_w := null;
                end;

                begin
                select  cd_clinica,
                        ds_cod_hospital,
                        ds_aplicativo,
                        cd_unid_prestador,
                        cd_especialidade
                into STRICT    cd_clinica_w,
                        ds_cod_hospital_w,
                        ds_aplicativo_w,
                        cd_unid_prestador_w,
                        cd_especialidade_w
                from    prestador_wint
                where   cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
                and     ie_tipo_atendimento = ie_tipo_atend_conta_w
                and     ie_tipo_exame = ie_tipo_exame_w;
                exception
                        when no_data_found then
                                ie_without_register_wint := 'S';

                                update  wint_confirmacao_exame a
                                set     a.ds_erro = obter_desc_expressao(1080655),
                                        a.ie_status = 'R'
                                where   a.nr_sequencia = nr_sequencia_w;
                                commit;
                       when too_many_rows then
                                ie_without_register_wint := 'S';
                end;

                if (ie_without_register_wint = 'N')then

                        if (cd_especialidade_w = 51) then
                                cd_prest_exec_movto1_w  := 290000410001;
                                cd_prestador_w          := 410001;
                        else
                                cd_prest_exec_movto1_w  := 290000310001;
                                cd_prestador_w          := 310001;
                        end if;

                        ds_param_integ_w :=
                                '{"NR_SEQUENCIA" : ' || '"' || nr_sequencia_w || '"' || 
                                ' , "CD_CLINICA" : ' || '"' || cd_clinica_w || '"' || 
                                ' , "DS_SENHA" : ' || '"' || ds_cod_hospital_w || '"' || 
                                ' , "DS_APLICATIVO" : ' || '"' || ds_aplicativo_w || '"' || 
                                ' , "CD_UNIT_PRESTADOR" : ' || '"' || cd_unid_prestador_w || '"' || 
                                ' , "CD_PRESTADOR" : ' || '"' || cd_prestador_w || '"' || 
                                ' , "DS_OPERACAO" :  ' || '"' || '03' || '"' || 
                                ' , "CD_UNI_BENEF" :  ' || '"' || cd_unid_prestador_w || '"' || 
                                ' , "CD_USUARIO_CONVENIO" : ' || '"' || cd_cart_benef_w || '"' || 
                                ' , "NR_ANO_GUIA" : ' || '"' || nr_ano_guia_w || '"' || 
                                ' , "NR_GUIA_ATEND" : ' || '"' || nr_guia_atend_w || '"' || 
                                ' , "DT_EMISSAO" : ' || '"' || dt_atual_w || '"' || 
                                ' , "CD_CARTAO" : ' || '"' || 'S' || '"' || 
                                ' , "NR_VIA_CARTAO" : ' || '"' || 1 || '"' || 
                                ' , "CD_PREST_SOLI" : ' || '"' || 2900 || lpad(coalesce(nr_crm_w,0), 8, 0) || '"' || 
                                ' , "CD_ESPECIALIDADE" : ' || '"' || cd_especialidade_w || '"' ||
                                ' , "NR_TIPO_ATENDIMENTO" : ' || '"' || '02' || '"' ||
                                ' , "IE_AUTO_EMPRESA" : ' || '"' || 'N' || '"' || 
                                ' , "IE_ATEND_RN" : ' || '"' || 'N' || '"' || 
                                ' , "IE_SOLICITACAO" : ' || '"' || 'E' || '"' ||             
                                ' , "DT_REALIZACAO" : ' || '"' || dt_atual_w || '"' ||
                                ' , "DT_HORA_REALIZACAO" : ' || '"' || to_char(clock_timestamp(), 'hhmi') || '"' ||
                                ' , "QT_SERVICO" : ' || '"' || qt_servico_w || '"' ||
                                ' , "IE_TIPO_SERVICO1" : ' || '"' || 'P' || '"' || 
                                ' , "QT_SERVICO1" : ' || '"' || qt_procedimento_w || '"' ||                                 
                                ' , "CD_SERVICO1" : ' || '"' || cd_procedimento_w || '"' || 
                                ' , "CD_PREST_EXEC_MOVTO1" : ' || '"' || cd_prest_exec_movto1_w || '"';
                        open c02;
                        loop
                        fetch c02 into
                                qt_insumo_w,
                                cd_insumo_w,
                                ie_tiss_tipo_despesa_w;
                        EXIT WHEN NOT FOUND; /* apply on c02 */
                                begin
                                        if (ie_tiss_tipo_despesa_w = 2) then
                                                tp_insumo_w := '21';
                                        elsif (ie_tiss_tipo_despesa_w = 3) then
                                                tp_insumo_w := '01';
                                        end if;

                                        if (qtd_data_read = 1) then
                                                ds_param_integ_w := ds_param_integ_w || ', "INSUMOS" : [';
                                        end if;
                                        ds_param_integ_w := ds_param_integ_w ||
                                        '  {"TP_SERVICO" : ' || '"' || 'I' || '"' || 
                                        ' ,"QT_SERVICO" : ' || '"' || qt_insumo_w || '"' ||                                 
                                        ' ,"CD_SERVICO" : ' || '"' || cd_insumo_w || '"' || 
                                        ' ,"CD_PREST_EXEC_MOVTO" : ' || '"' || cd_prest_exec_movto1_w || '"' ||
                                        ' ,"TP_INSUMO" : ' || '"' || tp_insumo_w || '"}';
                                        qtd_data_read := qtd_data_read + 1;
                                        if (qt_servico_w > qtd_data_read) then
                                                ds_param_integ_w := ds_param_integ_w || ' ,';
                                        end if;
                                end;
                        end loop;
                        close c02;

                        if (qt_servico_w > 1) then
                                ds_param_integ_w := ds_param_integ_w || ']';
                        end if;

                        ds_param_integ_w := ds_param_integ_w || '}';

                        nr_integration_code_w   := 949;
			contador_w := contador_w  + 1;

			if	contador_w <= qt_max_registros_p then
				CALL execute_bifrost_integration(nr_integration_code_w,ds_param_integ_w);
				update  wint_confirmacao_exame a
				set     a.dt_envio = clock_timestamp()
				where   a.nr_sequencia = nr_sequencia_w;
				commit;
			end if;

                end if;
        end;
end loop;
close c_exam_wint_confirm;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE job_registro_exame_wint (nr_seq_protocolo_p protocolo_convenio.nr_seq_protocolo%type default null, ie_job_p wint_confirmacao_exame.ie_status%type default 'S', nr_seq_proc_paciente_p wint_confirmacao_exame.nr_seq_proc_paciente%type default null, nr_interno_conta_p conta_paciente.nr_interno_conta%type default null, qt_dias_leitura_p wint_confirmacao_exame.qt_procedimento%type default 15, qt_max_registros_p wint_confirmacao_exame.qt_procedimento%type default 50) FROM PUBLIC;

