-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nom_rc_heredofamiliar (nr_seq_cabecalho_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
cd_pessoa_fisica_w			atendimento_paciente.cd_pessoa_fisica%type;
nr_seq_episodio_w			episodio_paciente.nr_sequencia%type;
qt_idade_w					nom_rc_heredofamiliar.qt_idade%type;
nm_usuario_w				usuario.nm_usuario%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
count_w						bigint;
ie_nega_doenca_w			varchar(1);
							
ie_hipertension_w			varchar(2);/*id_260*/
ie_dislipidemia_w			varchar(2);/*id_261*/
ie_diabete_w				varchar(2);/*id_262*/
ds_html_w					varchar(32000)	:= null;

c01 CURSOR FOR
	SELECT 	a.cd_doenca,
			CASE WHEN c.ie_grau_parentesco=4 THEN 'FTH' WHEN c.ie_grau_parentesco=5 THEN 'MTH' WHEN c.ie_grau_parentesco=11 THEN 'AUNT' WHEN c.ie_grau_parentesco=10 THEN 'UNCLE' WHEN c.ie_grau_parentesco=7 THEN CASE WHEN a.ie_sexo='M' THEN 'SON' WHEN a.ie_sexo='F' THEN 'DAU' END  WHEN c.ie_grau_parentesco=21 THEN CASE WHEN a.ie_sexo='M' THEN 'BRO' WHEN a.ie_sexo='F' THEN 'SIS' END  WHEN c.ie_grau_parentesco=8 THEN 'GRPRN' WHEN c.ie_grau_parentesco=9 THEN 'GRPRN' WHEN c.ie_grau_parentesco=24 THEN 'GRNDCHILD' WHEN c.ie_grau_parentesco=6 THEN CASE WHEN a.ie_sexo='M' THEN 'HUSB' WHEN a.ie_sexo='F' THEN 'WIFE' END				 END  ie_grau_parentesco,
			(CASE WHEN (a.dt_nascimento_parente IS NOT NULL AND a.dt_nascimento_parente::text <> '') THEN obter_idade(a.dt_nascimento_parente, a.dt_inicio, 'A') ELSE null END) qt_idade,
			a.dt_obito_parente
	FROM cid_doenca b, grau_parentesco c
LEFT OUTER JOIN paciente_antec_clinico a ON (c.nr_sequencia = a.nr_seq_parentesco)
WHERE a.cd_pessoa_fisica = cd_pessoa_fisica_w and (a.nr_seq_parentesco IS NOT NULL AND a.nr_seq_parentesco::text <> '')  and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(a.dt_inativacao::text, '') = '' and a.cd_doenca = b.cd_doenca_cid and coalesce(b.ie_doenca_cronica_mx::text, '') = '' and coalesce(ie_nega_doencas, 'N') = 'N' and coalesce(ie_paciente, 'S') = 'N' and (a.cd_doenca IS NOT NULL AND a.cd_doenca::text <> '');

BEGIN

delete FROM nom_rc_heredofamiliar where nr_seq_cabecalho = nr_seq_cabecalho_p;

select	a.nr_atendimento,
		a.nr_seq_episodio,
		a.cd_estabelecimento,
		a.nm_usuario nm_usuario		
into STRICT	nr_atendimento_w,
		nr_seq_episodio_w,
		cd_estabelecimento_w,
		nm_usuario_w		
from	nom_rc_cabecalho a
where	a.nr_sequencia	= nr_seq_cabecalho_p;

if	((coalesce(nr_atendimento_w::text, '') = '') and (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '')) then
	select	min(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	atendimento_paciente a
	where	a.nr_seq_episodio = nr_seq_episodio_w;
end if;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

	select	cd_pessoa_fisica
	into STRICT	cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w;
	
	select (select Max('S')
			FROM paciente_antec_clinico b
LEFT OUTER JOIN cid_doenca c ON (b.cd_doenca = c.cd_doenca_cid)
WHERE coalesce(ie_paciente, 'S') = 'N' and (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and coalesce(b.dt_inativacao::text, '') = ''  and (c.ie_doenca_cronica_mx = 'HIPAS'
                    or b.ie_doenca_cronica = '2') and b.cd_pessoa_fisica = cd_pessoa_fisica_w ) ie_hipas, /*id_260*/
		(select Max('S')
			FROM paciente_antec_clinico b
LEFT OUTER JOIN cid_doenca c ON (b.cd_doenca = c.cd_doenca_cid)
WHERE coalesce(ie_paciente, 'S') = 'N' and (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and coalesce(b.dt_inativacao::text, '') = ''  and (c.ie_doenca_cronica_mx = 'DIABT'
                    or b.ie_doenca_cronica = '3') and b.cd_pessoa_fisica = cd_pessoa_fisica_w ) ie_diabt,	/*id_262*/
		(select Max('S')
			FROM paciente_antec_clinico b
LEFT OUTER JOIN cid_doenca c ON (b.cd_doenca = c.cd_doenca_cid)
WHERE coalesce(ie_paciente, 'S') = 'N' and (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and coalesce(b.dt_inativacao::text, '') = ''  and (c.ie_doenca_cronica_mx = 'LIPDM'
                    or b.ie_doenca_cronica = '4') and b.cd_pessoa_fisica = cd_pessoa_fisica_w ) ie_lipdm,	/*id_261*/
		(select Max(coalesce(b.ie_nega_doencas, 'N'))
			from 	paciente_antec_clinico b
			where 	coalesce(ie_paciente, 'S') = 'N'
			and 	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
			and 	coalesce(b.dt_inativacao::text, '') = ''
			and 	coalesce(b.ie_nega_doencas, 'N') = 'S'
            and     b.cd_pessoa_fisica = cd_pessoa_fisica_w) ie_nega_doenca
	into STRICT	
			ie_hipertension_w,
			ie_diabete_w,
			ie_dislipidemia_w,
			ie_nega_doenca_w
	;


	ds_html_w	:= '<table class="wrichedit-table" width="100%" xmlns="urn:hl7-org:v3">';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || '<thead>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || '<tr>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<th>Hipertensión</th>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<th>Dislipidemias</th>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<th>Diabetes</th>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || '</tr>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) ||  '</thead>';
	
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || '<tbody>';
	
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || '<tr>';
	
	select	count(1)
	into STRICT	count_w
	from 	paciente_antec_clinico a
	where 	a.cd_pessoa_fisica = cd_pessoa_fisica_w
	and		coalesce(a.ie_paciente, 'S') = 'N';
	
	if (count_w = 0) then
		ie_hipertension_w	:= '8';
		ie_dislipidemia_w 	:= '8';
		ie_diabete_w 		:= '8';
	else
		if (ie_hipertension_w = 'S') then
			ie_hipertension_w	:=	'1'; /* Sim */
		elsif (ie_nega_doenca_w = 'S') then
			ie_hipertension_w	:=	'2'; /* Não */
		else
			ie_hipertension_w	:=	'2'; /* Não */
		end if;
			
		if (ie_dislipidemia_w = 'S') then
			ie_dislipidemia_w := '1'; /* Sim */
		elsif (ie_nega_doenca_w = 'S') then
			ie_dislipidemia_w := '2'; /* Não */
		else
			ie_dislipidemia_w := '2'; /* Não */
		end if;
		
		if (ie_diabete_w = 'S') then
			ie_diabete_w := '1';	/* Sim */
		elsif (ie_nega_doenca_w = 'S') then
			ie_diabete_w := '2';	/* Não */
		else
			ie_diabete_w := '2';	/* Não */
		end if;	
	end if;
		
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<td>' || obter_valor_dominio(9248, ie_hipertension_w)  || '</td>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<td>' || obter_valor_dominio(9248, ie_dislipidemia_w) || '</td>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<td>' || obter_valor_dominio(9248, ie_diabete_w) || '</td>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || '</tr>';
	
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || '</tbody>';
	
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || '</table>';	/*id_259*/
	
	insert into nom_rc_heredofamiliar(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_cabecalho,
					ie_hipertension,
					ie_dislipidemia,
					ie_diabete,
					ds_antecendente)
				values (
					nextval('nom_rc_heredofamiliar_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_cabecalho_p,
					ie_hipertension_w,
					ie_dislipidemia_w,
					ie_diabete_w,
					null);	
	
	
	insert into nom_rc_heredofamiliar(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_cabecalho,
					ie_hipertension,
					ie_dislipidemia,
					ie_diabete,
					ds_antecendente)
				values (
					nextval('nom_rc_heredofamiliar_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_cabecalho_p,
					null,
					null,
					null,
					ds_html_w);
					
	
	for r_c01 in c01 loop
	
		insert into nom_rc_heredofamiliar(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_cabecalho,
					ie_hipertension,
					ie_dislipidemia,
					ie_diabete,
					ds_antecendente,
					cd_doenca_cid,
					qt_idade,
					cd_tipo_vinculo,
					dt_obito_parente)
				values (
					nextval('nom_rc_heredofamiliar_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_cabecalho_p,
					null,
					null,
					null,
					null,
					r_c01.cd_doenca,
					r_c01.qt_idade,
					r_c01.ie_grau_parentesco,
					r_c01.dt_obito_parente);
					
	end loop;
	
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nom_rc_heredofamiliar (nr_seq_cabecalho_p bigint, nm_usuario_p text) FROM PUBLIC;

