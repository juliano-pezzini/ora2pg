-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_protocolo_npt (nr_seq_prot_origem_p bigint, nr_seq_prot_destino_p bigint, ie_copiar_elemento_p text, ie_copiar_produto_p text, vl_mult_elemento_p bigint, vl_mult_produto_p bigint, nm_usuario_p text) AS $body$
DECLARE



vl_mult_elemento_w	real;
vl_mult_produto_w	real;


BEGIN

vl_mult_elemento_w	:= coalesce(vl_mult_elemento_p,1);
vl_mult_produto_w	:= coalesce(vl_mult_produto_p,1);

if (coalesce(nr_seq_prot_origem_p::text, '') = '') or (coalesce(nr_seq_prot_destino_p::text, '') = '') then
	--Selecione os protocolos de origem e destino
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(184350);
end if;

if (ie_copiar_elemento_p = 'S') then

	insert into protocolo_npt_item(
		nr_sequencia,
		nr_seq_elemento,
		dt_atualizacao,
		nm_usuario,
		nr_seq_protocolo,
		cd_unidade_medida,
		qt_elemento,
		ie_prim_fase,
		ie_seg_fase,
		ie_terc_fase,
		ie_quar_fase,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		qt_osmolaridade,
		nr_seq_elem_mat,
          ie_prod_adicional,
		nr_seq_apres)
	SELECT	nextval('protocolo_npt_item_seq'),
		nr_seq_elemento,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_prot_destino_p,
		cd_unidade_medida,
		CASE WHEN coalesce(qt_elemento::text, '') = '' THEN qt_elemento  ELSE qt_elemento * vl_mult_elemento_w END ,
		ie_prim_fase,
		ie_seg_fase,
		ie_terc_fase,
		ie_quar_fase,
		clock_timestamp(),
		nm_usuario_p,
		qt_osmolaridade,
		nr_seq_elem_mat,
          ie_prod_adicional,
		nr_seq_apres
	from	protocolo_npt_item
	where	nr_seq_protocolo	= nr_seq_prot_origem_p;

end if;

if (ie_copiar_produto_p = 'S') then

	insert into protocolo_npt_prod(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_protocolo,
		nr_seq_elem_mat,
		qt_volume,
		qt_vol_1_fase,
		qt_vol_2_fase,
		qt_vol_3_fase,
		qt_vol_4_fase,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_material,
		ie_dispensacao,
		ie_prod_adicional,
		cd_unidade_medida,
		qt_dose,
		ie_somar_volume,
		nr_seq_apresentacao)
	SELECT	nextval('protocolo_npt_prod_seq'),
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_prot_destino_p,
		nr_seq_elem_mat,
		CASE WHEN coalesce(qt_volume::text, '') = '' THEN qt_volume  ELSE qt_volume * coalesce(vl_mult_produto_w,1) END ,
		CASE WHEN coalesce(qt_vol_1_fase::text, '') = '' THEN qt_vol_1_fase  ELSE qt_vol_1_fase * vl_mult_produto_w END ,
		CASE WHEN coalesce(qt_vol_2_fase::text, '') = '' THEN qt_vol_2_fase  ELSE qt_vol_2_fase * vl_mult_produto_w END ,
		CASE WHEN coalesce(qt_vol_3_fase::text, '') = '' THEN qt_vol_3_fase  ELSE qt_vol_3_fase * vl_mult_produto_w END ,
		CASE WHEN coalesce(qt_vol_4_fase::text, '') = '' THEN qt_vol_4_fase  ELSE qt_vol_4_fase * vl_mult_produto_w END ,
		clock_timestamp(),
		nm_usuario_p,
		cd_material,
		ie_dispensacao,
		ie_prod_adicional,
		cd_unidade_medida,
		qt_dose,
		ie_somar_volume,
		nr_seq_apresentacao
	from	protocolo_npt_prod
	where	nr_seq_protocolo	= nr_seq_prot_origem_p;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_protocolo_npt (nr_seq_prot_origem_p bigint, nr_seq_prot_destino_p bigint, ie_copiar_elemento_p text, ie_copiar_produto_p text, vl_mult_elemento_p bigint, vl_mult_produto_p bigint, nm_usuario_p text) FROM PUBLIC;

