-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE material AS (nr_sequencia			bigint,
			nr_seq_conta			bigint,
			dt_material			timestamp,
			nr_seq_material			bigint,
			ie_tipo_despesa			varchar(1),
			ie_origem_preco			smallint,
			qt_material_imp			double precision,
			dt_inicio_atend			timestamp,
			dt_fim_atend			timestamp,
			nr_seq_fornecedor		bigint,
			ie_status			varchar(1),
			vl_apresentado			double precision,
			nr_seq_estrut_mat		bigint,
			nr_seq_tipo_uso			bigint,
			vl_calculado_ant		double precision,
			nr_seq_pacote			bigint,
			ie_vl_apresentado_sistema	pls_conta_mat.ie_vl_apresentado_sistema%type,
			tx_intercambio			pls_conta_mat.tx_intercambio%type,
			nr_seq_regra_tx_inter		pls_conta_mat.nr_seq_regra_tx_inter%type,
			ie_cobranca_prevista		pls_conta_mat.ie_cobranca_prevista%type,
			ie_cobranca_prevista_inf 	pls_conta_mat.ie_cobranca_prevista_inf%type);


CREATE OR REPLACE PROCEDURE pls_atualiza_valor_mat_n ( nr_seq_material_p pls_conta_mat.nr_sequencia%type, ie_gravar_log_p text, nm_usuario_p usuario.nm_usuario%type, ie_conta_inteira_p text, nr_seq_conta_p pls_conta.nr_sequencia%type, ie_recalcular_conta_p text default 'N') AS $body$
DECLARE


nr_seq_conta_w			bigint;
nr_seq_material_w		bigint;
nr_seq_prestador_exec_w		bigint;
dt_preco_w			timestamp;
dt_material_w			timestamp;
dt_conta_w			timestamp;
ie_tipo_despesa_w		varchar(1);
vl_material_w			double precision;
vl_calculado_w			double precision;
qt_material_imp_w		double precision;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
cd_estabelecimento_w		integer;
ie_cobranca_prevista_w		varchar(1);
ie_cobranca_prevista_mat_w	varchar(1);
ie_cobranca_previa_servico_w	varchar(1);
cd_guia_w			varchar(20);
cd_guia_referencia_w		varchar(20);
nr_seq_protocolo_w		bigint;
ie_tipo_protocolo_w		varchar(3);
ie_tipo_tabela_w		varchar(2) := '';
ie_origem_conta_w		varchar(1);
dt_inicio_atend_w		timestamp;
dt_fim_atend_w			timestamp;
vl_mat_copartic_w		double precision := 0;
ie_calculo_coparticipacao_w	varchar(3);
nr_seq_regra_cooperado_w	bigint;
ie_ato_cooperado_w		bigint;
nr_seq_prestador_atend_w	bigint;
nr_seq_prestador_solic_w	bigint;
nr_seq_intercambio_w		bigint;
ie_medico_solic_coope_w		varchar(10);
ie_medico_exec_coope_w		varchar(10);
cd_medico_solicitante_w		varchar(20);
cd_medico_conta_w		varchar(20);
vl_material_ptu_w		double precision;
ie_tipo_segurado_w		varchar(10);
nr_seq_regra_int_w		bigint;
nr_seq_fornecedor_w		bigint;
vl_apresentado_w		double precision;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_categoria_w		bigint;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_clinica_w		bigint;
ie_tipo_guia_w			varchar(2);
nr_seq_plano_espec_w		bigint;
ie_gravar_log_w			varchar(1);
ie_vl_apresentado_sistema_w	varchar(1) := 'N';
nr_seq_guia_w			bigint;
cd_solic_w			varchar(20);
ie_status_w			varchar(1);
ie_tipo_vinculo_w		varchar(5);
nr_seq_tipo_prestador_w		bigint;
nr_seq_congenere_w		bigint;

nr_seq_classificacao_prest_w	bigint;
sg_estado_outorg_w		pessoa_juridica.sg_estado%type;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
ie_tipo_contratacao_w		varchar(5);
tx_intercambio_w		double precision;
ie_tipo_conta_w			varchar(2);
nr_seq_fatura_w			bigint;
nr_seq_conta_mat_w		bigint;
cd_unimed_ori_w			varchar(4);
ie_restringe_estab_w		varchar(2);
vl_calculado_ant_w		double precision;
dt_alta_w			timestamp;
tx_adm_w			double precision;
qt_regra_tx_w			bigint;
vl_taxa_material_w		pls_conta_mat.vl_taxa_material%type;
ds_observacao_log_w		varchar(4000);
vl_unitario_w			pls_conta_mat_v.vl_unitario%type;
nr_seq_congenere_conta_w	pls_conta.nr_seq_congenere%type;
nr_seq_pacote_w			pls_pacote.nr_sequencia%type;
ie_composicao_w			varchar(1);
ie_tipo_intercambio_w		pls_conta_v.ie_tipo_intercambio%type;
nr_seq_grupo_coop_seg_w		pls_segurado.nr_seq_grupo_coop%type;
ie_seguro_obito_w		pls_plano.ie_seguro_obito%type;
ie_pcmso_w			pls_segurado.ie_pcmso%type;
dt_recebimento_fatura_w		ptu_fatura.dt_recebimento_fatura%type;
dt_postagem_fatura_w		ptu_fatura.dt_postagem%type;
ie_cobranca_prevista_ww		pls_conta_mat.ie_cobranca_prevista%type;
ie_cobranca_prevista_inf_w	pls_conta_mat.ie_cobranca_prevista_inf%type;

dados_conta_valor_w		pls_cta_valorizacao_pck.dados_conta;
dados_conta_mat_valor_w		pls_cta_valorizacao_pck.dados_conta_mat;
dados_beneficiario_valor_w	pls_cta_valorizacao_pck.dados_beneficiario;
dados_fatura_valor_w		pls_cta_valorizacao_pck.dados_fatura;
dados_tx_interc_valor_w		pls_cta_valorizacao_pck.dados_taxa_intercambio;
ie_status_conta_w		pls_conta.ie_status%type;
ie_nao_gera_tx_inter_w		pls_regra_preco_mat.ie_nao_gera_tx_inter%type;
nr_seq_regra_tx_inter_w		pls_conta_mat.nr_seq_regra_tx_inter%type;
nr_seq_log_exec_w		pls_cta_log_exec.nr_sequencia%type;
dados_conta_mat_w		pls_cta_valorizacao_pck.table_dados_conta_mat;
nr_update_index_w		integer;
tb_seq_conta_mat_insert_w	dbms_sql.number_table;
nr_seq_congenere_prot_w		pls_protocolo_conta.nr_seq_congenere%type;
ie_cobranca_prevista_www	pls_guia_plano_mat.ie_cobranca_prevista%type;
nr_seq_cp_comb_entao_w		pls_conta_mat_regra.nr_seq_cp_comb_entao%type;
ie_preco_w					pls_plano.ie_preco%type;
nr_seq_contrato_w			pls_segurado.nr_seq_contrato%type;
vl_fixo_tx_adm_w			pls_prestador_taxa_item.vl_fixo%type;
nr_seq_regra_tx_adm_w			pls_prestador_taxa_item.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_seq_conta,
		coalesce(dt_atendimento, clock_timestamp()) dt_atendimento,
		nr_seq_material,
		ie_tipo_despesa,
		ie_origem_preco,
		qt_material_imp,
		dt_inicio_atend,
		dt_fim_atend,
		nr_seq_prest_fornec,
		ie_status,
		vl_material_imp,
		nr_sequencia,
		vl_material,
		nr_seq_pacote,
		nr_seq_tipo_uso,
		tx_intercambio,
		nr_seq_regra_tx_inter,
		ie_cobranca_prevista,
		ie_cobranca_prevista_inf,
		ie_vl_apresentado_sistema
	from	pls_conta_mat_v
	where	nr_seq_conta		= nr_seq_conta_p
	and	(nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '')
	and	ie_conta_inteira_p 	= 'S'
	and	ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	
union all

	SELECT	nr_seq_conta,
		coalesce(dt_atendimento, clock_timestamp()) dt_atendimento,
		nr_seq_material,
		ie_tipo_despesa,
		ie_origem_preco,
		qt_material_imp,
		dt_inicio_atend,
		dt_fim_atend,
		nr_seq_prest_fornec,
		ie_status,
		vl_material_imp,
		nr_sequencia,
		vl_material,
		nr_seq_pacote,
		nr_seq_tipo_uso,
		tx_intercambio,
		nr_seq_regra_tx_inter,
		ie_cobranca_prevista,
		ie_cobranca_prevista_inf,
		ie_vl_apresentado_sistema
	from	pls_conta_mat_v
	where	nr_sequencia 		= nr_seq_material_p
	and	(nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '')
	and	ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	order by
		nr_seq_material;

type vetor_materiais is table of material index by integer;

/* Vetores */

vetor_mat_w		vetor_materiais;
i	bigint	:= 1;
k	bigint	:= 1;

BEGIN

-- Inicializar os valores que n√£o devem ficar nulos.
tx_intercambio_w := 0;

nr_seq_conta_w	:= nr_seq_conta_p;

ie_gravar_log_w	:= coalesce(ie_gravar_log_p,'N');

/* Obter dados do material */

i	:= 1;
vetor_mat_w.delete;

for r_c01_w in C01() loop
	begin
	nr_seq_conta_w					:= r_c01_w.nr_seq_conta;
	vetor_mat_w[i].nr_sequencia			:= r_c01_w.nr_sequencia;
	vetor_mat_w[i].nr_seq_conta			:= r_c01_w.nr_seq_conta;
	vetor_mat_w[i].dt_material			:= r_c01_w.dt_atendimento;
	vetor_mat_w[i].nr_seq_material			:= r_c01_w.nr_seq_material;
	vetor_mat_w[i].ie_tipo_despesa			:= r_c01_w.ie_tipo_despesa;
	vetor_mat_w[i].ie_origem_preco			:= r_c01_w.ie_origem_preco;
	vetor_mat_w[i].qt_material_imp			:= r_c01_w.qt_material_imp;
	vetor_mat_w[i].dt_inicio_atend			:= r_c01_w.dt_inicio_atend;
	vetor_mat_w[i].dt_fim_atend			:= r_c01_w.dt_fim_atend;
	vetor_mat_w[i].nr_seq_fornecedor		:= r_c01_w.nr_seq_prest_fornec;
	vetor_mat_w[i].ie_status 			:= r_c01_w.ie_status;
	vetor_mat_w[i].vl_apresentado			:= r_c01_w.vl_material_imp;
	vetor_mat_w[i].vl_calculado_ant			:= r_c01_w.vl_material;
	vetor_mat_w[i].nr_seq_pacote			:= r_c01_w.nr_seq_pacote;
	vetor_mat_w[i].nr_seq_tipo_uso			:= r_c01_w.nr_seq_tipo_uso;
	vetor_mat_w[i].ie_vl_apresentado_sistema	:= r_c01_w.ie_vl_apresentado_sistema;
	vetor_mat_w[i].tx_intercambio			:= r_c01_w.tx_intercambio;
	vetor_mat_w[i].nr_seq_regra_tx_inter		:= r_c01_w.nr_seq_regra_tx_inter;
	vetor_mat_w[i].ie_cobranca_prevista		:= r_c01_w.ie_cobranca_prevista;
	vetor_mat_w[i].ie_cobranca_prevista_inf 	:= r_c01_w.ie_cobranca_prevista_inf;
	i := i + 1;
	end;
end loop;

/* Obter dados da conta */

select	nr_seq_prestador_exec,
	dt_atendimento,
	nr_seq_segurado,
	cd_estabelecimento,
	coalesce(cd_guia,0),
	nr_seq_protocolo,
	ie_origem_conta,
	cd_medico_solicitante,
	cd_medico_executor,
	coalesce(nr_seq_tipo_acomodacao,0),
	coalesce(nr_seq_tipo_atendimento,0),
	nr_seq_clinica,
	ie_tipo_guia,
	cd_guia_referencia,
	ie_tipo_conta,
	nr_seq_fatura,
	dt_alta,
	nr_seq_guia,
	nr_seq_congenere,
	ie_tipo_intercambio,
	dt_recebimento_fatura,
	dt_postagem_fatura,
	ie_status,
	ie_tipo_protocolo,
	nr_seq_prestador_prot,
	ie_tipo_vinculo_prest_exec,
	nr_seq_tipo_prest_exec,
	nr_seq_clas_prest_exec,
	nr_seq_congenere_prot,
	coalesce(ie_tipo_segurado,'B')
into STRICT	nr_seq_prestador_exec_w,
	dt_conta_w,
	nr_seq_segurado_w,
	cd_estabelecimento_w,
	cd_guia_w,
	nr_seq_protocolo_w,
	ie_origem_conta_w,
	cd_medico_solicitante_w,
	cd_medico_conta_w,
	nr_seq_tipo_acomodacao_w,
	nr_seq_tipo_atendimento_w,
	nr_seq_clinica_w,
	ie_tipo_guia_w,
	cd_guia_referencia_w,
	ie_tipo_conta_w,
	nr_seq_fatura_w,
	dt_alta_w,
	nr_seq_plano_espec_w,
	nr_seq_congenere_conta_w,
	ie_tipo_intercambio_w,
	dt_recebimento_fatura_w,
	dt_postagem_fatura_w,
	ie_status_conta_w,
	ie_tipo_protocolo_w,
	nr_seq_prestador_atend_w,
	ie_tipo_vinculo_w,
	nr_seq_tipo_prestador_w,
	nr_seq_classificacao_prest_w,
	nr_seq_congenere_prot_w,
	ie_tipo_segurado_w
from	pls_conta_v
where	nr_sequencia	= nr_seq_conta_w;

dados_conta_valor_w.nr_sequencia 		:= nr_seq_conta_w;
dados_conta_valor_w.nr_seq_congenere		:= nr_seq_congenere_conta_w;
dados_conta_valor_w.ie_origem_conta		:= ie_origem_conta_w;
dados_conta_valor_w.ie_tipo_conta		:= ie_tipo_conta_w;
dados_conta_valor_w.nr_seq_segurado		:= nr_seq_segurado_w;
dados_conta_valor_w.ie_tipo_intercambio		:= ie_tipo_intercambio_w;
dados_conta_valor_w.ie_tipo_guia		:= ie_tipo_guia_w;
dados_conta_valor_w.dt_alta			:= dt_alta_w;
dados_conta_valor_w.dt_atendimento		:= dt_conta_w;

dados_fatura_valor_w.nr_sequencia		:= nr_seq_fatura_w;
dados_fatura_valor_w.dt_recebimento		:= dt_recebimento_fatura_w;
dados_fatura_valor_w.dt_postagem		:= dt_postagem_fatura_w;

if (coalesce(nr_seq_plano_espec_w::text, '') = '') then
	/*Obter sequencia da autoriza√ß√£o  especial*/

	select	max(nr_sequencia)
	into STRICT	nr_seq_plano_espec_w
	from	pls_guia_plano
	where	cd_guia		= cd_guia_referencia_w
	and	nr_seq_segurado = nr_seq_segurado_w;
end if;

/* Obter a categoria do tipo de acomoda√ß√£o */

if (nr_seq_tipo_acomodacao_w IS NOT NULL AND nr_seq_tipo_acomodacao_w::text <> '') then
	select	max(nr_seq_categoria)
	into STRICT	nr_seq_categoria_w
	from	pls_regra_categoria
	where	nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w;
end if;

/* Obter par√¢metros da conta m√©dica */

ie_restringe_estab_w	:= pls_obter_se_controle_estab('CO');

select	coalesce(max(ie_calculo_coparticipacao),'P')
into STRICT	ie_calculo_coparticipacao_w
from	pls_parametros
where	((ie_restringe_estab_w	= 'S' AND cd_estabelecimento	= cd_estabelecimento_w)
or (ie_restringe_estab_w	= 'N'));

/* Obter dados do segurado */

begin
	select	coalesce(pls_obter_produto_benef(nr_sequencia,dt_conta_w),0),
		nr_seq_intercambio,
		nr_seq_congenere,
		nr_seq_grupo_coop,
		ie_pcmso,
		nr_seq_contrato
	into STRICT	nr_seq_plano_w,
		nr_seq_intercambio_w,
		nr_seq_congenere_w,
		nr_seq_grupo_coop_seg_w,
		ie_pcmso_w,
		nr_seq_contrato_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
exception
	when others then
	nr_seq_plano_w	:= null;
	ie_tipo_segurado_w	:= null;
	CALL pls_gravar_conta_glosa('1013',nr_seq_conta_w,null,null,
				'N','Beneficirio n√£o informado',nm_usuario_p,
				'A','CC',nr_seq_prestador_exec_w, cd_estabelecimento_w,'',null);
end;

/* Obter dados do plano */

select	max(ie_tipo_contratacao),
		max(ie_seguro_obito),
		max(ie_preco)
into STRICT	ie_tipo_contratacao_w,
		ie_seguro_obito_w,
		ie_preco_w
from	pls_plano
where	nr_sequencia	= nr_seq_plano_w;

dados_beneficiario_valor_w.nr_sequencia		:= nr_seq_segurado_w;
dados_beneficiario_valor_w.nr_seq_intercambio	:= nr_seq_intercambio_w;
dados_beneficiario_valor_w.nr_seq_plano		:= nr_seq_plano_w;
dados_beneficiario_valor_w.nr_seq_grupo_coop	:= nr_seq_grupo_coop_seg_w;
dados_beneficiario_valor_w.ie_tipo_beneficiario	:= ie_tipo_segurado_w;
dados_beneficiario_valor_w.ie_beneficio_obito	:= ie_seguro_obito_w;
dados_beneficiario_valor_w.ie_pcmso		:= ie_pcmso_w;

select	coalesce(max(ie_cobranca_prevista),'N')
into STRICT 	ie_cobranca_prevista_mat_w
from 	pls_conta_mat_v
where 	nr_sequencia = nr_seq_material_p;

/* Obter dados da guia */

if (nr_seq_plano_espec_w IS NOT NULL AND nr_seq_plano_espec_w::text <> '') then
	begin
		select	CASE WHEN coalesce(ie_cobranca_prevista,'N')='S' THEN 'S'  ELSE CASE WHEN coalesce(ie_cobranca_prevista_mat_w,'N')='S' THEN 'S'  ELSE 'N' END  END ,
			nr_sequencia,
			cd_medico_solicitante
		into STRICT	ie_cobranca_prevista_w,
			nr_seq_guia_w,
			cd_solic_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_plano_espec_w;

	exception
		when others then
		ie_cobranca_prevista_w	:= 'N';
		cd_solic_w		:= null;
	end;
end if;

/* Obter a UF da operadora  - Tasy*/

select	coalesce(max(sg_estado),'X')
into STRICT	sg_estado_outorg_w
from	pessoa_juridica
where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
			from	pls_outorgante
			where	cd_estabelecimento	= cd_estabelecimento_w);

-- OS 450179 - Caso n√£o tenha a informa√ß√£o de congenere
if (coalesce(nr_seq_congenere_w::text, '') = '') and (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
	select	max(cd_unimed_origem)
	into STRICT	cd_unimed_ori_w
	from	ptu_fatura
	where	nr_sequencia = 	(SELECT	max(nr_seq_fatura)
				from	pls_conta
				where	nr_sequencia = nr_seq_conta_w);

	select	max(nr_sequencia)
	into STRICT	nr_seq_congenere_w
	from	pls_congenere
	where	cd_cooperativa = cd_unimed_ori_w;
end if;

if (ie_tipo_protocolo_w	= 'R') then
	ie_tipo_tabela_w	:= 'R';
elsif (ie_tipo_protocolo_w	= 'I') then
	ie_tipo_tabela_w	:= 'IP';
else
	ie_tipo_tabela_w	:= 'P';
end if;

-- se for interc√¢mbio de pagamento deve ser olhado o congenere do protocolo ao inv√©z do congenere do benefici√°rio
-- pois trata-se de um atendimento que o benefici√°rio da operadora sofreu em outra operadora
if (ie_tipo_tabela_w = 'IP') then

	nr_seq_congenere_w := nr_seq_congenere_prot_w;
end if;

/* Obter a UF da operadora do benefici√°rio eventual ou que enviou o protocolo*/

select	coalesce(max(a.sg_estado),'X')
into STRICT	sg_estado_int_w
from	pessoa_juridica	a,
	pls_congenere	b
where	a.cd_cgc	= b.cd_cgc
and	b.nr_sequencia	= nr_seq_congenere_w;

--Passada a data da conta devido a data do material n√£o existir neste momento
dt_preco_w	:= dt_conta_w;

if (ie_tipo_protocolo_w = 'C') then
	begin
		select	b.nr_seq_prestador
		into STRICT	nr_seq_prestador_solic_w
		from	pls_prestador_medico	b,
			pls_prestador		d
		where	b.nr_seq_prestador	= d.nr_sequencia
		and	d.cd_estabelecimento	= cd_estabelecimento_w
		and	b.cd_medico		= cd_medico_solicitante_w
		and	b.ie_situacao		= 'A'
		and	trunc(dt_preco_w,'dd') between trunc(coalesce(b.dt_inclusao, dt_preco_w),'dd') and trunc(coalesce(b.dt_exclusao,dt_preco_w),'dd');
	exception
	when others then
		nr_seq_prestador_solic_w	:= null;
	end;

	if (coalesce(nr_seq_prestador_solic_w,0) = 0) then
		begin
			select	nr_seq_prestador
			into STRICT	nr_seq_prestador_solic_w
			from	pls_prestador_medico
			where	ie_situacao		= 'A'
			and	cd_medico		= cd_solic_w
			and	trunc(dt_preco_w,'dd') between trunc(coalesce(dt_inclusao, dt_preco_w),'dd') and trunc(coalesce(dt_exclusao,dt_preco_w),'dd');
		exception
		when others then
			nr_seq_prestador_solic_w	:= null;
		end;
	end if;

	/*aaschlote 10/07/2012 - Verificar se o cooperado est√° ativo pela data do procedimento e n√£o a regra do prestador*/

	ie_medico_exec_coope_w	:= pls_obter_se_cooperado_ativo(cd_medico_conta_w,dt_material_w,null);

	if (ie_medico_exec_coope_w = 'S') then
		ie_medico_exec_coope_w := 'C'; -- Caso ele n√£o for cooperador a function j√° retorna N
	end if;

	/*aaschlote 10/07/2012 - Verificar se o cooperado est√° ativo pela data do procedimento e n√£o a regra do prestador*/

	ie_medico_solic_coope_w	:= pls_obter_se_cooperado_ativo(cd_medico_solicitante_w,dt_material_w,null);

	if (ie_medico_solic_coope_w = 'S') then
		ie_medico_solic_coope_w := 'C'; -- Caso ele n√£o for cooperador a function j√° retorna N
	end if;
end if;

dados_conta_mat_w := pls_cta_valorizacao_pck.limpa_tabela_dados_conta_mat(dados_conta_mat_w);
nr_update_index_w 	:= 0;
tb_seq_conta_mat_insert_w.delete;

i := vetor_mat_w.count;
k := 1;
for k in 1.. i loop
	begin
	nr_seq_conta_mat_w			:= vetor_mat_w[k].nr_sequencia;
	nr_seq_conta_w				:= vetor_mat_w[k].nr_seq_conta;
	dt_material_w				:= vetor_mat_w[k].dt_material;
	nr_seq_material_w			:= vetor_mat_w[k].nr_seq_material;
	ie_tipo_despesa_w			:= vetor_mat_w[k].ie_tipo_despesa;
	qt_material_imp_w			:= vetor_mat_w[k].qt_material_imp;
	dt_inicio_atend_w			:= vetor_mat_w[k].dt_inicio_atend;
	dt_fim_atend_w				:= vetor_mat_w[k].dt_fim_atend;
	nr_seq_fornecedor_w			:= vetor_mat_w[k].nr_seq_fornecedor;
	ie_status_w				:= vetor_mat_w[k].ie_status;
	vl_apresentado_w			:= vetor_mat_w[k].vl_apresentado;
	vl_calculado_ant_w			:= vetor_mat_w[k].vl_calculado_ant;
	ie_vl_apresentado_sistema_w		:= vetor_mat_w[k].ie_vl_apresentado_sistema;
	dados_tx_interc_valor_w.pr_taxa		:= vetor_mat_w[k].tx_intercambio;
	dados_tx_interc_valor_w.nr_sequencia	:= vetor_mat_w[k].nr_seq_regra_tx_inter;
	ie_cobranca_prevista_inf_w		:= vetor_mat_w[k].ie_cobranca_prevista_inf;
	ie_cobranca_prevista_ww			:= vetor_mat_w[k].ie_cobranca_prevista;

	dados_conta_mat_valor_w.nr_sequencia	:= nr_seq_conta_mat_w;
	dados_conta_mat_valor_w.nr_seq_conta	:= nr_seq_conta_w;
	dados_conta_mat_valor_w.nr_seq_material	:= nr_seq_material_w;
	dados_conta_mat_valor_w.dt_atendimento	:= dt_material_w;
	--Tratamento realizado devido ao camo dt atendimento ser alimentado via trigger dt_material_w
	dt_preco_w	:= dt_material_w;

	ie_composicao_w	:= 'S';
	/*Obter se o item est√° dentro da composi√ß√£o do pacote.*/

	if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '')	then
		ie_composicao_w	:= pls_obter_se_item_composicao(nr_seq_pacote_w	,nr_seq_material_w,null,null);
	end if;
	if (ie_composicao_w = 'S')	then
		/* Obter dados do procedimento da autoriza√ß√£o */

		select	max(ie_cobranca_previa_servico)
		into STRICT	ie_cobranca_previa_servico_w
		from	pls_guia_plano_mat
		where	nr_seq_guia	= nr_seq_guia_w
		and	nr_seq_material	= nr_seq_material_w;

		if (coalesce(ie_cobranca_previa_servico_w::text, '') = '') then
			ie_cobranca_previa_servico_w	:= 'N';
		end if;

		select 	max(vl_material_base),
			max(nr_seq_cp_comb_entao),
			max(vl_mat_copartic_regra)
		into STRICT	vl_material_w,
			nr_seq_cp_comb_entao_w,
			vl_mat_copartic_w
		from	pls_conta_mat_regra
		where	nr_sequencia = nr_seq_conta_mat_w;

		vl_calculado_w := (coalesce(vl_material_w,0) * qt_material_imp_w);

		if	((vl_calculado_w	= 0)  and (vl_material_w	       != 0) and (qt_material_imp_w	> 0)  and
			not(ie_tipo_conta_w	= 'I')) then
			vl_calculado_w	:= vl_material_w;
		end if;

		vl_material_ptu_w := (coalesce(vl_material_w,0) * qt_material_imp_w);

		select 	count(1)
		into STRICT	qt_regra_tx_w
		from	pls_prestador_taxa_item;

		if ( qt_regra_tx_w > 0 ) then
			SELECT * FROM pls_obter_taxa_adm_item( null, null, nr_seq_material_w, nr_seq_prestador_exec_w, nm_usuario_p, ie_preco_w, ie_tipo_segurado_w, nr_seq_contrato_w, dt_material_w, tx_adm_w, vl_fixo_tx_adm_w, nr_seq_regra_tx_adm_w) INTO STRICT tx_adm_w, vl_fixo_tx_adm_w, nr_seq_regra_tx_adm_w;
			if ( tx_adm_w > 0 ) then
				vl_calculado_w := vl_calculado_w + dividir(( vl_calculado_w * tx_adm_w),100);

				if (ie_gravar_log_w = 'S') then

						ds_observacao_log_w :=	substr((ds_observacao_log_w ||
									';tx_adm_w=' || tx_adm_w ||
									';nr_seq_regra_tx_adm=' || nr_seq_regra_tx_adm_w),1,4000);
				end if;

			elsif (vl_fixo_tx_adm_w IS NOT NULL AND vl_fixo_tx_adm_w::text <> '') then
				vl_calculado_w := vl_calculado_w + vl_fixo_tx_adm_w;

				if (ie_gravar_log_w = 'S') then

						ds_observacao_log_w :=	substr((ds_observacao_log_w ||
									';vl_fixo_tx_adm_w=' || vl_fixo_tx_adm_w ||
									';nr_seq_regra_tx_adm=' || nr_seq_regra_tx_adm_w),1,4000);
				end if;

			end if;
		end if;

		SELECT * FROM pls_obter_tipo_ato_cooperado(	null, null, nr_seq_conta_mat_w, 'M', nr_seq_prestador_exec_w, nr_seq_prestador_solic_w, nr_seq_prestador_atend_w, null, ie_medico_solic_coope_w, ie_medico_exec_coope_w, nr_seq_material_w, ie_tipo_protocolo_w, ie_tipo_guia_w, null, ie_tipo_despesa_w, nr_seq_regra_cooperado_w, ie_ato_cooperado_w) INTO STRICT nr_seq_regra_cooperado_w, ie_ato_cooperado_w;

		select	max(ie_nao_gera_tx_inter)
		into STRICT	ie_nao_gera_tx_inter_w
		from	pls_cp_cta_emat
		where	nr_sequencia 	= nr_seq_cp_comb_entao_w;

		vl_unitario_w	:= dividir(vl_calculado_w,qt_material_imp_w);

		if (coalesce(vl_unitario_w,0)	!= 0) or (ie_tipo_conta_w	= 'I') then
			vl_calculado_w	:= vl_unitario_w * qt_material_imp_w;
		end if;

		vl_unitario_w	:= round((dividir(vl_material_ptu_w,qt_material_imp_w))::numeric,4);
		if (coalesce(vl_unitario_w,0)	!= 0) or (ie_tipo_conta_w	= 'I') then
			vl_material_ptu_w:= vl_unitario_w * qt_material_imp_w;
		end if;

		if (coalesce(ie_nao_gera_tx_inter_w,'N') = 'N') then

			if (ie_tipo_conta_w = 'I') then

				if (coalesce(dados_tx_interc_valor_w.nr_sequencia::text, '') = '') and (ie_recalcular_conta_p = 'N') then
					-- Obter a taxa de interc√¢mbio.
					nr_seq_log_exec_w := pls_cta_processo_pck.executa_processo(	null, null, null, nr_seq_conta_w, null, null, nr_seq_conta_mat_w, null, '12,', null, nm_usuario_p, cd_estabelecimento_w, null, nr_seq_log_exec_w);

					select	tx_intercambio,
						nr_seq_regra_tx_inter
					into STRICT	dados_tx_interc_valor_w.pr_taxa,
						dados_tx_interc_valor_w.nr_sequencia
					from	pls_conta_mat
					where	nr_sequencia 	= nr_seq_conta_mat_w;
				end if;

				tx_intercambio_w := dados_tx_interc_valor_w.pr_taxa;

				if (tx_intercambio_w IS NOT NULL AND tx_intercambio_w::text <> '') then
					nr_seq_regra_tx_inter_w	:= dados_tx_interc_valor_w.nr_sequencia;

					if (ie_gravar_log_w = 'S') then

						ds_observacao_log_w :=	substr((ds_observacao_log_w ||
									'vl_material_ptu_w=' || to_char(vl_material_ptu_w) ||
									';tx_intercambio_w=' || to_char(tx_intercambio_w)),1,4000);
					end if;

					vl_taxa_material_w := dividir((vl_material_ptu_w*tx_intercambio_w),100);

					vl_calculado_w	:= vl_calculado_w + coalesce(vl_taxa_material_w,0);

					if (ie_gravar_log_w = 'S') then

						ds_observacao_log_w :=	substr((ds_observacao_log_w ||
									';vl_taxa_material_w=' || vl_taxa_material_w ||
									';vl_calculado_w + vl_taxa_material_w=' || vl_calculado_w),1,4000);
					end if;
				else
					tx_intercambio_w := 0;
				end if;

				if (ie_gravar_log_w = 'S') then
					CALL pls_entao_regra_preco_cta_pck.gerencia_log_mat(	'Tx. interc√¢mbio' || ds_observacao_log_w || '.',
											nr_seq_conta_mat_w,	vl_calculado_w,	null,
											nm_usuario_p);
				end if;

			end if;
		end  if;

		if (ie_status_conta_w in ('U','P','A'))	then
			if (ie_status_w = 'M') then
				ie_status_w	:= ie_status_w;
			/* Francisco - 17/10/2012 - OS 469604 - Se o item estiver na an√°lise na pode mudar o status
				N√£o pode estar  "En an√°lise" , "Liberado pelo usu√°rio" e "Cancelado"*/
			elsif (ie_status_w in ('A','D','L')) then
				ie_status_w	:= ie_status_w;
			else
				ie_status_w	:= 'C';
			end if;
		end if;

		if (ie_cobranca_prevista_w = 'N') then
			select	coalesce(max(ie_cobranca_prevista),'N')
			into STRICT	ie_cobranca_prevista_www
			from	pls_guia_plano_mat
			where	nr_seq_material = nr_seq_material_w
			and	nr_seq_guia 	= nr_seq_plano_espec_w;

			if (ie_cobranca_prevista_www = 'S') then
				ie_cobranca_prevista_w := ie_cobranca_prevista_www;
			end if;
		end if;

		tb_seq_conta_mat_insert_w(nr_update_index_w) := nr_seq_conta_mat_w;
		dados_conta_mat_w.vl_material(nr_update_index_w) := vl_calculado_w;
		dados_conta_mat_w.vl_glosa(nr_update_index_w) := 0;
		dados_conta_mat_w.vl_saldo(nr_update_index_w) := 0;
		dados_conta_mat_w.vl_beneficiario(nr_update_index_w) := 0;
		dados_conta_mat_w.ie_status(nr_update_index_w) := ie_status_w;
		dados_conta_mat_w.dt_inicio_atend(nr_update_index_w) := dt_inicio_atend_w;
		dados_conta_mat_w.dt_fim_atend(nr_update_index_w) := dt_fim_atend_w;
		dados_conta_mat_w.vl_mat_copartic(nr_update_index_w) := vl_mat_copartic_w;
		dados_conta_mat_w.ie_ato_cooperado(nr_update_index_w) := ie_ato_cooperado_w;
		dados_conta_mat_w.nr_seq_regra_cooperado(nr_update_index_w) := nr_seq_regra_cooperado_w;
		dados_conta_mat_w.vl_material_ptu(nr_update_index_w) := vl_material_ptu_w;
		dados_conta_mat_w.nr_seq_regra_int(nr_update_index_w) := nr_seq_regra_int_w;
		dados_conta_mat_w.ie_vl_apresentado_sistema(nr_update_index_w) := ie_vl_apresentado_sistema_w;
		dados_conta_mat_w.tx_intercambio(nr_update_index_w) := tx_intercambio_w;
		dados_conta_mat_w.vl_taxa_material(nr_update_index_w) := vl_taxa_material_w;
		dados_conta_mat_w.vl_calculado_ant(nr_update_index_w) := vl_calculado_ant_w;
		dados_conta_mat_w.nr_seq_regra_tx_inter(nr_update_index_w) := nr_seq_regra_tx_inter_w;
		dados_conta_mat_w.ie_cobranca_prevista(nr_update_index_w) := ie_cobranca_prevista_w;
		dados_conta_mat_w.ie_cobranca_previa_servico(nr_update_index_w) := ie_cobranca_previa_servico_w;
		dados_conta_mat_w.ie_cobranca_prevista_inf(nr_update_index_w) := ie_cobranca_prevista_inf_w;
		dados_conta_mat_w.ie_cobranca_prevista_mat(nr_update_index_w) := ie_cobranca_prevista_ww;
		dados_conta_mat_w.nr_seq_regra_copartic(nr_update_index_w) := null;
		dados_conta_mat_w.nr_seq_regra_pos_estab(nr_update_index_w) := null;
		dados_conta_mat_w.nr_seq_regra(nr_update_index_w) := null;
		dados_conta_mat_w.tx_prestador_item(nr_update_index_w) := tx_adm_w;

		--Se as vari√°veis tabelas atingirem a quantidade de registros pr√©-definida para update
		if (nr_update_index_w>= pls_util_pck.qt_registro_transacao_w) then

			--Todos os registros presentes nas tabelas.
			CALL pls_cta_valorizacao_pck.atualiza_conta_mat(	dados_conta_mat_w,tb_seq_conta_mat_insert_w,	nm_usuario_p,
									cd_estabelecimento_w);
			tb_seq_conta_mat_insert_w.delete;
			--Limpa das tabelas os dados para update
			nr_update_index_w := 0;
			--Limpa das tabelas os dados para insert
			dados_conta_mat_w := pls_cta_valorizacao_pck.limpa_tabela_dados_conta_mat(dados_conta_mat_w);

		--Se o limite de registros n√£o for alcan√ßada, ent√£o incrementa contador
		else
			nr_update_index_w := nr_update_index_w + 1;
		end if;

	end if;
	end;
end loop;

update pls_conta_mat_regra
set		dt_atualizacao = clock_timestamp(),
		nr_seq_regra_tx_adm = nr_seq_regra_tx_adm_w
where	nr_sequencia = nr_seq_material_p;

CALL pls_entao_regra_preco_cta_pck.atualizar_log_mat(nm_usuario_p, null);

CALL pls_cta_valorizacao_pck.atualiza_conta_mat(	dados_conta_mat_w,tb_seq_conta_mat_insert_w,	nm_usuario_p,
						cd_estabelecimento_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_valor_mat_n ( nr_seq_material_p pls_conta_mat.nr_sequencia%type, ie_gravar_log_p text, nm_usuario_p usuario.nm_usuario%type, ie_conta_inteira_p text, nr_seq_conta_p pls_conta.nr_sequencia%type, ie_recalcular_conta_p text default 'N') FROM PUBLIC;

