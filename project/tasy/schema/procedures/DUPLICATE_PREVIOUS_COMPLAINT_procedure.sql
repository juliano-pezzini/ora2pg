-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicate_previous_complaint ( nr_seq_ordem_serv_p bigint) AS $body$
DECLARE


ie_old_terceiro_w		man_ordem_servico.ie_complaint%type;
ie_old_complaint_w 		man_ordem_servico.ie_complaint%type;
nr_seq_ordem_serv_w 		man_ordem_servico.nr_sequencia%type := nr_seq_ordem_serv_p;
nr_seq_os_ant_w 		man_ordem_servico.nr_sequencia%type;
nm_usuario_w			man_ordem_servico.nm_usuario%type := 'WebService';

ie_potencial_privacy_w		man_ordem_servico.ie_potencial_privacy%type;
ds_potencial_privacy_w		man_ordem_servico.ds_potencial_privacy%type;
ie_potencial_security_w		man_ordem_servico.ie_potencial_security%type;
ds_potencial_security_w		man_ordem_servico.ds_potencial_security%type;
nr_customer_requirement_w	man_ordem_servico.nr_customer_requirement%type;
ie_potential_harmed_w		man_ordem_servico.ie_potential_harmed%type;
ds_potential_harmed_w		man_ordem_servico.ds_potential_harmed%type;
ie_potencial_safety_w		man_ordem_servico.ie_potencial_safety%type;
ds_potencial_safety_w		man_ordem_servico.ds_potencial_safety%type;
nr_seq_reg_tipo_risco_w		man_ordem_servico.nr_seq_reg_tipo_risco%type;
ie_malfunction_w		man_ordem_servico.ie_malfunction%type;
ds_malfunction_w		man_ordem_servico.ds_malfunction%type;
ie_severity_harm_w		man_ordem_servico.ie_severity_harm%type;
ie_probability_harm_w		man_ordem_servico.ie_probability_harm%type;
nm_user_safety_w		man_ordem_servico.nm_user_safety%type;
dt_release_safety_w		man_ordem_servico.dt_release_safety%type;
ie_complaint_w			man_ordem_servico.ie_complaint%type;
ie_potential_cdp_w		man_ordem_servico.ie_potential_complaint_duplic%type;
ie_market_anomaly_w		man_ordem_servico.ie_market_anomaly%type;
cd_trackwise_id_w		man_ordem_servico.cd_trackwise_id%type;

c01 CURSOR FOR
        SELECT  mah.nm_user_safety,
		mah.ds_malfunction,
		mah.ds_potencial_privacy,
		mah.ds_potencial_safety,
		mah.ds_potencial_security,
		mah.ds_potential_harmed,
		mah.ie_classificacao,
		mah.ie_complaint,
		mah.ie_malfunction,
		mah.ie_market_anomaly,
		mah.ie_potencial_privacy,
		mah.ie_potencial_safety,
		mah.ie_potencial_security,
		mah.ie_potential_complaint_duplic,
		mah.ie_potential_harmed,
		mah.ie_probability_harm,
		mah.ie_severity_harm,
		mah.nr_customer_requirement,
		mah.nr_seq_sub_classif,
		mah.nr_seq_severidade,
		mah.nr_seq_intencao_uso
        from    man_assessment_history	mah
        where	mah.nr_seq_ordem_servico = nr_seq_os_ant_w;

c02 CURSOR FOR
	SELECT	mot.nr_sequencia,
		mot.ds_relat_tecnico,
		mot.ie_origem,
		mot.nr_seq_tipo
	from 	man_ordem_serv_tecnico mot
	where	mot.nr_seq_ordem_serv = nr_seq_os_ant_w
	and 	mot.nr_seq_tipo in (212,213,214,215,216,217,218,219,233,234,236,244,246)
	order by	mot.nr_sequencia asc;
BEGIN

select	max(mos.nr_seq_os_ant)
into STRICT	nr_seq_os_ant_w
from	man_ordem_servico mos
where	mos.nr_sequencia = nr_seq_ordem_serv_w;

if (nr_seq_os_ant_w IS NOT NULL AND nr_seq_os_ant_w::text <> '') then

	select 	max(man_obter_se_loc_terceiro(mos.nr_seq_localizacao)) ie_terceiro,
		max(mos.ie_complaint) ie_complaint
	into STRICT	ie_old_terceiro_w,
		ie_old_complaint_w
	from	man_ordem_servico mos
	where	mos.nr_sequencia = nr_seq_os_ant_w;

	if (ie_old_terceiro_w = 'S' and  ie_old_complaint_w = 'S') then
		<<reg01_loop>>
		for reg01 in c01 loop
			CALL gerar_assessment_history(
			nr_seq_ordem_servico_p		=> nr_seq_ordem_serv_w,
			ds_malfunction_p		=> reg01.ds_malfunction,
			ds_potencial_privacy_p		=> reg01.ds_potencial_privacy,
			ds_potencial_safety_p		=> reg01.ds_potencial_safety,
			ds_potencial_security_p		=> reg01.ds_potencial_security,
			ds_potential_harmed_p		=> reg01.ds_potential_harmed,
			ie_classificacao_p		=> reg01.ie_classificacao,
			ie_complaint_p			=> reg01.ie_complaint,
			ie_malfunction_p		=> reg01.ie_malfunction,
			ie_market_anomaly_p		=> reg01.ie_market_anomaly,
			ie_potencial_privacy_p		=> reg01.ie_potencial_privacy,
			ie_potencial_safety_p		=> reg01.ie_potencial_safety,
			ie_potencial_security_p		=> reg01.ie_potencial_security,
			ie_potential_complaint_dup_p	=> reg01.ie_potential_complaint_duplic,
			ie_potential_harmed_p		=> reg01.ie_potential_harmed,
			ie_probability_harm_p		=> reg01.ie_probability_harm,
			ie_severity_harm_p		=> reg01.ie_severity_harm,
			nr_customer_requirement_p	=> reg01.nr_customer_requirement,
			nr_seq_sub_classif_p		=> reg01.nr_seq_sub_classif,
			nr_seq_severidade_p		=> reg01.nr_seq_severidade,
			nr_seq_intencao_uso_p		=> reg01.nr_seq_intencao_uso,
			nm_usuario_p			=> nm_usuario_w);
		end loop reg01_loop;

		<<reg02_loop>>
		for reg02 in c02 loop
			CALL man_gravar_historico_ordem(
			nr_seq_ordem_serv_p	=> nr_seq_ordem_serv_w,
			dt_liberacao_p		=> clock_timestamp(),
			ds_relat_tecnico_p	=> reg02.ds_relat_tecnico,
			ie_origem_p		=> reg02.ie_origem,
			nr_seq_tipo_p		=> reg02.nr_seq_tipo,
			nm_usuario_p		=> nm_usuario_w);
		end loop reg02_loop;

		select	mos.ie_potencial_privacy,
			mos.ds_potencial_privacy,
			mos.ie_potencial_security,
			mos.ds_potencial_security,
			mos.nr_customer_requirement,
			mos.ie_potential_harmed,
			mos.ds_potential_harmed,
			mos.ie_potencial_safety,
			mos.ds_potencial_safety,
			mos.nr_seq_reg_tipo_risco,
			mos.ie_malfunction,
			mos.ds_malfunction,
			mos.ie_severity_harm,
			mos.ie_probability_harm,
			mos.nm_user_safety,
			mos.dt_release_safety,
			mos.ie_complaint,
			mos.ie_potential_complaint_duplic,
			mos.ie_market_anomaly,
			mos.cd_trackwise_id
		into STRICT	ie_potencial_privacy_w,
			ds_potencial_privacy_w,
			ie_potencial_security_w,
			ds_potencial_security_w,
			nr_customer_requirement_w,
			ie_potential_harmed_w,
			ds_potential_harmed_w,
			ie_potencial_safety_w,
			ds_potencial_safety_w,
			nr_seq_reg_tipo_risco_w,
			ie_malfunction_w,
			ds_malfunction_w,
			ie_severity_harm_w,
			ie_probability_harm_w,
			nm_user_safety_w,
			dt_release_safety_w,
			ie_complaint_w,
			ie_potential_cdp_w,
			ie_market_anomaly_w,
			cd_trackwise_id_w
		from 	man_ordem_servico mos
		where	mos.nr_sequencia = nr_seq_os_ant_w;

		update	man_ordem_servico
		set	ie_potencial_privacy		= ie_potencial_privacy_w,
			ds_potencial_privacy		= ds_potencial_privacy_w,
			ie_potencial_security		= ie_potencial_security_w,
			ds_potencial_security		= ds_potencial_security_w,
			nr_customer_requirement		= nr_customer_requirement_w,
			ie_potential_harmed		= ie_potential_harmed_w,
			ds_potential_harmed		= ds_potential_harmed_w,
			ie_potencial_safety		= ie_potencial_safety_w,
			ds_potencial_safety		= ds_potencial_safety_w,
			nr_seq_reg_tipo_risco		= nr_seq_reg_tipo_risco_w,
			ie_malfunction			= ie_malfunction_w,
			ds_malfunction			= ds_malfunction_w,
			ie_severity_harm		= ie_severity_harm_w,
			ie_probability_harm		= ie_probability_harm_w,
			nm_user_safety			= nm_user_safety_w,
			dt_release_safety		= dt_release_safety_w,
			ie_complaint			= ie_complaint_w,
			ie_potential_complaint_duplic	= ie_potential_cdp_w,
			ie_market_anomaly		= ie_market_anomaly_w,
			cd_trackwise_id			= cd_trackwise_id_w
		where 	nr_sequencia 			= nr_seq_ordem_serv_w;

		commit;

	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicate_previous_complaint ( nr_seq_ordem_serv_p bigint) FROM PUBLIC;

