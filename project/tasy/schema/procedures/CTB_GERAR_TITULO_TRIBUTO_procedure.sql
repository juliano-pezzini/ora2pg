-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_titulo_tributo (nr_seq_tributo_p bigint, nm_usuario_p text, nr_titulo_p INOUT bigint) AS $body$
DECLARE


cd_cgc_w		varchar(14);
cd_estabelecimento_w	smallint;
cd_estab_financeiro_w	smallint;
cd_moeda_w		integer;
cd_tributo_w		smallint;
dt_contabil_w		timestamp;
dt_geracao_w		timestamp;
ie_dt_contabil_w	varchar(1);
nr_titulo_w		bigint;
vl_tributo_w		double precision;
cd_beneficiario_w	varchar(255);
pr_aliquota_w		double precision;
cd_cond_pagto_w		bigint;
cd_conta_financ_w	bigint;
nr_seq_trans_reg_w	bigint;
nr_seq_trans_baixa_w	bigint;
vl_minimo_base_w	double precision;
vl_minimo_tributo_w	double precision;
ie_acumulativo_w	varchar(255);
VL_TETO_BASE_CALCULO_w	double precision;
vl_desc_dependente_w	double precision;
cd_darf_w		varchar(255);
dt_mesano_ref_w		timestamp;
cd_variacao_w		varchar(255);
ie_periodicidade_w	varchar(255);
nr_seq_regra_w		bigint;
nr_seq_trans_fin_reg_w	bigint;
nr_seq_trans_fin_baixa_w	bigint;
cd_condicao_pagamento_w	bigint;
dt_vencimento_w		timestamp;
ds_venc_w		varchar(2000);
qt_venc_w		integer;
nr_seq_classe_w		bigint;
cd_tipo_baixa_neg_w	integer;
vl_base_calculo_w	double precision;
cd_estab_regra_w	estabelecimento.cd_estabelecimento%TYPE;


BEGIN

select	coalesce(max(a.vl_tributo),0),
	max(a.cd_estabelecimento),
	max(a.cd_tributo),
	max(a.dt_geracao),
	coalesce(max(a.dt_mesano_ref),clock_timestamp()),
	max(a.cd_condicao_pagamento),
	max(a.vl_base_calculo)
into STRICT	vl_tributo_w,
	cd_estabelecimento_w,
	cd_tributo_w,
	dt_geracao_w,
	dt_mesano_ref_w,
	cd_condicao_pagamento_w,
	vl_base_calculo_w
from	ctb_tributo a
where	a.nr_sequencia	= nr_seq_tributo_p;

if (vl_tributo_w > 0) then

	cd_estab_regra_w := wheb_usuario_pck.get_cd_estabelecimento;
	
	select	max(a.cd_cgc),
		max(a.cd_estab_financeiro)
	into STRICT	cd_cgc_w,
		cd_estab_financeiro_w
	from	estabelecimento a
	where	a.cd_estabelecimento	= coalesce(cd_estabelecimento_w,cd_estab_regra_w);

	select	max(a.cd_moeda_padrao)
	into STRICT	cd_moeda_w
	from	parametros_contas_pagar a
	where	a.cd_estabelecimento	= coalesce(cd_estabelecimento_w,cd_estab_regra_w);

	select	max(a.ie_dt_contab_tit_trib)
	into STRICT	ie_dt_contabil_w
	from	tributo a
	where	a.cd_tributo	= cd_tributo_w;

	if (coalesce(ie_dt_contabil_w::text, '') = '') then

		select	coalesce(max(a.ie_dt_contab_tit_trib),'E')
		into STRICT	ie_dt_contabil_w
		from	parametros_contas_pagar a
		where	a.cd_estabelecimento 	= coalesce(cd_estabelecimento_w,cd_estab_regra_w);
	end if;

	if (ie_dt_contabil_w = 'A')	then
		dt_contabil_w	:= trunc(clock_timestamp(),'dd');
	elsif (ie_dt_contabil_w = 'T')	then
		dt_contabil_w	:= trunc(dt_geracao_w,'dd');
	elsif (ie_dt_contabil_w = 'R')	then
		dt_contabil_w	:= trunc(dt_mesano_ref_w,'dd');
	end if;

	select	nextval('titulo_pagar_seq')
	into STRICT	nr_titulo_w
	;

	SELECT * FROM obter_dados_trib_tit_pagar(	cd_tributo_w, coalesce(cd_estabelecimento_w,cd_estab_regra_w), cd_cgc_w, null, cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, VL_TETO_BASE_CALCULO_w, vl_desc_dependente_w, cd_darf_w, dt_mesano_ref_w, cd_variacao_w, ie_periodicidade_w, 'AT', null, null, null, null, null, nr_seq_regra_w, null, 0, nr_seq_classe_w, cd_tipo_baixa_neg_w, vl_base_calculo_w, 'N', null, '0', null, null) INTO STRICT cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, VL_TETO_BASE_CALCULO_w, vl_desc_dependente_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_regra_w, nr_seq_classe_w, cd_tipo_baixa_neg_w;
	
	dt_vencimento_w	:= dt_mesano_ref_w;

	if (coalesce(cd_condicao_pagamento_w::text, '') = '') then

		select	max(a.cd_cond_pagto)
		into STRICT	cd_condicao_pagamento_w
		from	tributo_conta_pagar a
		where	a.cd_estabelecimento	= coalesce(cd_estabelecimento_w,cd_estab_regra_w)
		and	a.cd_tributo		= cd_tributo_w;

	end if;

	if (cd_condicao_pagamento_w IS NOT NULL AND cd_condicao_pagamento_w::text <> '') then

		SELECT * FROM calcular_vencimento(coalesce(cd_estabelecimento_w,cd_estab_regra_w), cd_condicao_pagamento_w, dt_vencimento_w, qt_venc_w, ds_venc_w) INTO STRICT qt_venc_w, ds_venc_w;

		if (qt_venc_w = 1) then	
			dt_vencimento_w	:= to_date(substr(ds_venc_w,1,10),'dd/mm/yyyy');
		end if;

		update	ctb_tributo
		set	cd_condicao_pagamento	= cd_condicao_pagamento_w
		where	nr_sequencia		= nr_seq_tributo_p;

	end if;

	insert	into titulo_pagar(cd_cgc,
		cd_darf,
		cd_estabelecimento,
		cd_estab_financeiro,
		cd_moeda,
		cd_tipo_taxa_juro,
		cd_tipo_taxa_multa,
		cd_tributo,
		ds_observacao_titulo,
		dt_atualizacao,
		dt_contabil,
		dt_emissao,
		dt_vencimento_atual,
		dt_vencimento_original,
		ie_desconto_dia,
		ie_origem_titulo,
		ie_situacao,
		ie_status_tributo,
		ie_tipo_titulo,
		nm_usuario,
		nr_lote_contabil,
		nr_lote_transf_trib,
		nr_seq_ctb_tributo,
		nr_seq_trans_fin_baixa,
		nr_seq_trans_fin_contab,
		nr_titulo,
		tx_desc_antecipacao,
		tx_juros,
		tx_multa,
		vl_saldo_juros,
		vl_saldo_multa,
		vl_saldo_titulo,
		vl_titulo,
		nr_seq_classe,
		cd_tipo_baixa_neg)
	values (coalesce(cd_beneficiario_w,cd_cgc_w),
		cd_darf_w,
		coalesce(cd_estabelecimento_w,cd_estab_regra_w),
		coalesce(cd_estab_financeiro_w,cd_estabelecimento_w),
		cd_moeda_w,
		1,
		1,
		cd_tributo_w,
		Wheb_mensagem_pck.get_texto(299372,'NR_SEQ_TRIBUTO='||nr_seq_tributo_p),
		clock_timestamp(),
		dt_contabil_w,
		dt_vencimento_w,
		dt_vencimento_w,
		dt_vencimento_w,
		'N',
		4,
		'A',
		'NT',
		4,
		nm_usuario_p,
		0,
		0,
		nr_seq_tributo_p,
		nr_seq_trans_baixa_w,
		nr_seq_trans_reg_w,
		nr_titulo_w,
		0,
		0,
		0,
		0,
		0,
		vl_tributo_w,
		vl_tributo_w,
		nr_seq_classe_w,
		cd_tipo_baixa_neg_w);
	CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w, nm_usuario_p);

	nr_titulo_p	:= nr_titulo_w;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_titulo_tributo (nr_seq_tributo_p bigint, nm_usuario_p text, nr_titulo_p INOUT bigint) FROM PUBLIC;

