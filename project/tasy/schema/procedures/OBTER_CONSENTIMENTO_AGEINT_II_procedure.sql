-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_consentimento_ageint_ii ( nr_seq_ageint_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text) AS $body$
DECLARE



ds_texto_w			ageint_regra_consent.DS_TEXTO%type;

ds_estabelecimento_w	varchar(80);
cd_estabelecimento_w	varchar(80);
ds_agenda_w				agenda.ds_agenda%type;
nm_paciente_w			agenda_integrada.nm_paciente%type;
nm_responsavel_w		agenda_integrada.nm_paciente%type;
nm_medico_w				agenda_integrada.nm_paciente%type;
nr_sequencia_w			agenda_integrada_item.nr_sequencia%type;
cd_especialidade_w		agenda_integrada_item.cd_especialidade%type;
cd_convenio_w			agenda_integrada.cd_convenio%type;
cd_categoria_w			agenda_integrada.cd_categoria%type;
cd_plano_w				agenda_integrada.cd_plano%type;
nr_seq_proc_interno_w	agenda_integrada_item.nr_seq_proc_interno%type;
ds_exame_w				proc_interno.ds_proc_exame%type;
cd_agenda_w				varchar(10);
dt_hr_agendamento_w		varchar(20);
dt_agendamento_w		varchar(20);
hr_agendamento_w		varchar(20);
ds_lado_w				varchar(255);
cd_pessoa_fisica_w		agenda_integrada.cd_pessoa_fisica%type;
ie_tipo_agendamento_w	agenda_integrada_item.ie_tipo_agendamento%type;
nr_seq_agenda_cons_w	agenda_integrada_item.nr_seq_agenda_cons%type;
nr_seq_agenda_exame_w	agenda_integrada_item.nr_seq_agenda_exame%type;
nr_seq_agequi_w			agenda_integrada_item.nr_seq_agequi%type;
nr_seq_local_w			bigint;

C01 CURSOR FOR
	SELECT	substr(obter_nome_estab(cd_estabelecimento_p),1,80),
			b.ie_tipo_agendamento,
			coalesce(substr(obter_nome_pf(a.cd_pessoa_fisica),1,60),a.nm_paciente),
			substr(obter_dados_pf(a.cd_pessoa_fisica,'NDR'),1,60),
			substr(obter_nome_pf(a.cd_medico_exec),1,60),
			substr(Obter_Desc_Proc_Interno(b.nr_seq_proc_interno),1,255),
			b.cd_especialidade,
			a.cd_convenio,
			b.nr_seq_proc_interno,
			substr(to_char(coalesce( Obter_Horario_item_Ageint(b.nr_seq_agenda_cons, b.nr_Seq_Agenda_exame,b.nr_sequencia),
								qt_obter_horario_agendado(b.nr_sequencia)),
				pkg_date_formaters.localize_mask('short', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))),1,20), --'dd/mm/yyyy hh24:mi'
			substr(to_char(coalesce( Obter_Horario_item_Ageint(b.nr_seq_agenda_cons, b.nr_Seq_Agenda_exame,b.nr_sequencia),
								qt_obter_horario_agendado(b.nr_sequencia)),
				pkg_date_formaters.localize_mask('shortDate', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))),1,20), --'dd/mm/yyyy'
			substr(to_char(coalesce( Obter_Horario_item_Ageint(b.nr_seq_agenda_cons, b.nr_Seq_Agenda_exame,b.nr_sequencia),
								qt_obter_horario_agendado(b.nr_sequencia)),
				pkg_date_formaters.localize_mask('shortTime', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))),1,20), --'hh24:mi'
			substr(obter_valor_dominio(1372,b.ie_lado),1,20),
			b.nr_sequencia,
			substr(obter_cod_agenda_AgeInt(b.nr_sequencia),1,10),
			a.cd_pessoa_fisica,
			b.nr_seq_agenda_cons,
			b.nr_seq_agenda_exame,
			b.nr_seq_agequi
	from	agenda_integrada a,
			agenda_integrada_item b
	where	a.nr_sequencia	= b.nr_seq_agenda_int
	and	a.nr_sequencia	= nr_seq_ageint_p;

C02 CURSOR FOR
	SELECT	ds_texto
	from	ageint_regra_consent
	where (coalesce(cd_estabelecimento::text, '') = '' or cd_estabelecimento	= coalesce(cd_estabelecimento_p, cd_estabelecimento) or cd_estabelecimento_p = '0')
	and (coalesce(cd_perfil::text, '') = '' or cd_perfil			= coalesce(cd_perfil_p, cd_perfil) or cd_perfil_p = '0')
	and (coalesce(cd_especialidade::text, '') = '' or cd_especialidade	= coalesce(cd_especialidade_w, cd_especialidade) or cd_especialidade_w = '0')
	and (coalesce(cd_convenio::text, '') = '' or cd_convenio	= coalesce(cd_convenio_w, cd_convenio) or cd_convenio_w = '0')
	and (coalesce(cd_agenda::text, '') = '' or cd_agenda			= coalesce(cd_agenda_w, cd_agenda) or cd_agenda_w = '0')
	and (coalesce(nr_seq_proc_interno::text, '') = '' or nr_seq_proc_interno	= coalesce(nr_seq_proc_interno_w, nr_seq_proc_interno) or nr_seq_proc_interno_w = '0')
	order by cd_estabelecimento desc, cd_perfil desc, cd_especialidade desc, cd_agenda desc, nr_seq_proc_interno desc;


BEGIN

delete	FROM w_ageint_consent
where	nm_usuario_nrec = nm_usuario_p;

open C01;
loop
fetch C01 into
	ds_estabelecimento_w,
	ie_tipo_agendamento_w,
	nm_paciente_w,
	nm_responsavel_w,
	nm_medico_w,
	ds_exame_w,
	cd_especialidade_w,
	cd_convenio_w,
	nr_seq_proc_interno_w,
	dt_hr_agendamento_w,
	dt_agendamento_w,
	hr_agendamento_w,
	ds_lado_w,
	nr_sequencia_w,
	cd_agenda_w,
	cd_pessoa_fisica_w,
	nr_seq_agenda_cons_w,
	nr_seq_agenda_exame_w,
	nr_seq_agequi_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	open C02;
	loop
	fetch C02 into
		ds_texto_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		null;
	end loop;
	close C02;

	if (ie_tipo_agendamento_w in ('C','S','E')) then
		if (ie_tipo_agendamento_w = ('E')) then
			select 	max(cd_agenda)
			into STRICT	nr_seq_local_w
			from	agenda_paciente
			where	nr_sequencia = nr_seq_agenda_exame_w;
		else
			select 	max(cd_agenda)
			into STRICT	nr_seq_local_w
			from	agenda_consulta
			where	nr_sequencia = nr_seq_agenda_cons_w;
		end if;

		select	max(cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from 	agenda
		where	cd_agenda = nr_seq_local_w;

	elsif (ie_tipo_agendamento_w = ('Q')) then
		select 	max(nr_seq_local)
		into STRICT	nr_seq_local_w
		from	agenda_quimio
		where	nr_sequencia = nr_seq_agequi_w;

		select	max(cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from 	qt_local
		where	nr_sequencia = nr_seq_local_w;

	end if;

	if (ds_texto_w IS NOT NULL AND ds_texto_w::text <> '') then
		select	max(ds_agenda)
		into STRICT	ds_agenda_w
		from	agenda
		where	cd_agenda_w		= cd_agenda;

		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@ds_estabelecimento', ds_estabelecimento_w);
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@ds_agenda', ds_agenda_w);
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@nm_paciente', nm_paciente_w);
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@nm_responsavel', nm_responsavel_w);
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@nm_medico', nm_medico_w);
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@ds_exame', ds_exame_w);
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@dt_hr_agendamento', dt_hr_agendamento_w);
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@dt_agendamento', dt_agendamento_w);
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@hr_agendamento', hr_agendamento_w);
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@ds_lado', ds_lado_w);
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@ds_convenio', substr(obter_desc_convenio(cd_convenio_w),1,255));
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@cidade_estab', substr(Obter_municipio_pj(cd_estabelecimento_w),1,255));
		DS_TEXTO_w	:= replace_macro_long(DS_TEXTO_w, '@prontuario', Obter_Prontuario_Paciente(cd_pessoa_fisica_w));

	insert into w_ageint_consent(
			nr_sequencia,
			nr_seq_agenda_int,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_agenda_item,
			ds_texto
		) values (
			nextval('w_ageint_consent_seq'),
			nr_seq_ageint_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_w,
			ds_texto_w);
	end if;

	end;
end loop;
close C01;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_consentimento_ageint_ii ( nr_seq_ageint_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text) FROM PUBLIC;

