-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_erro_prescr_proced (nr_prescricao_p bigint, nr_seq_proced_p bigint, nr_regra_p bigint, ie_permite_liberar_p text, ds_compl_erro_p text, cd_perfil_p bigint, nm_usuario_p text, ie_tipo_p text, nr_seq_erro_p INOUT bigint, ie_justificado_p text default 'N') AS $body$
DECLARE


nr_seq_erro_w		bigint;
ie_regra_w			varchar(15);
ds_regra_w			varchar(255);
ds_msg_perfil_w		varchar(4000);
ds_msg_wheb_w		varchar(4000);
ds_inf_w			varchar(2000);
ie_prioridade_w		smallint;
ds_cor_w			varchar(15);
ie_agrupador_w		smallint;
ie_tipo_item_w		varchar(255):=null;
nr_seq_proc_cpoe_w 	prescr_procedimento.nr_seq_proc_cpoe%type;
ie_tipo_proced_w	prescr_procedimento.ie_tipo_proced%type;
	
c01 CURSOR FOR
SELECT	ds_mensagem_cliente
from	regra_consiste_prescr_par
where	nr_seq_regra 		= nr_regra_p
and	coalesce(cd_perfil,cd_perfil_p)	= cd_perfil_p
order by
	nr_sequencia;


BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') and (ie_permite_liberar_p IS NOT NULL AND ie_permite_liberar_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	if (ie_tipo_p = 'E') then
		delete FROM prescr_medica_erro where ie_tipo = 'E';
	end if;

	open c01;
	loop
	fetch c01 into ds_msg_perfil_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		ds_msg_perfil_w := ds_msg_perfil_w;
		end;
	end loop;
	close c01;

	select	ie_tipo_regra,
		obter_desc_expressao(cd_exp_descricao,ds_regra_prescr),
		obter_desc_expressao(cd_exp_mensagem,ds_mensagem_usuario),
		obter_desc_expressao(cd_exp_informacao_adic,ds_informacao_adic),
		ie_prioridade,
		ds_cor
	into STRICT	ie_regra_w,
		ds_regra_w,
		ds_msg_wheb_w,
		ds_inf_w,
		ie_prioridade_w,
		ds_cor_w
	from	regra_consiste_prescr
	where	nr_sequencia = nr_regra_p;

	select	nextval('prescr_medica_erro_seq')
	into STRICT	nr_seq_erro_w
	;

	if (ie_justificado_p = 'S') then

	insert into prescr_medica_erro_just(
		nr_sequencia,
		nr_prescricao,
		nr_seq_proced,
		nr_regra,
		ds_inconsistencia,
		ds_erro,
		ds_compl_erro,
		ie_libera,
		ie_tipo_regra,
		ds_inf_adicional,
		ie_prioridade,
		ds_cor,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nm_usuario,
		dt_atualizacao,
		ie_tipo)
	values (
		nr_seq_erro_w,
		nr_prescricao_p,
		nr_seq_proced_p,
		nr_regra_p,
		ds_regra_w,
		coalesce(ds_msg_perfil_w,ds_msg_wheb_w),
		ds_compl_erro_p,
		ie_permite_liberar_p,
		ie_regra_w,
		ds_inf_w,
		ie_prioridade_w,
		ds_cor_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		ie_tipo_p);

	else

	insert into prescr_medica_erro(
		nr_sequencia,
		nr_prescricao,
		nr_seq_proced,
		nr_regra,
		ds_inconsistencia,
		ds_erro,
		ds_compl_erro,
		ie_libera,
		ie_tipo_regra,
		ds_inf_adicional,
		ie_prioridade,
		ds_cor,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nm_usuario,
		dt_atualizacao,
		ie_tipo)
	values (
		nr_seq_erro_w,
		nr_prescricao_p,
		nr_seq_proced_p,
		nr_regra_p,
		ds_regra_w,
		coalesce(ds_msg_perfil_w,ds_msg_wheb_w),
		ds_compl_erro_p,
		ie_permite_liberar_p,
		ie_regra_w,
		ds_inf_w,
		ie_prioridade_w,
		ds_cor_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		ie_tipo_p);

	end if;
	
end if;

	if (obter_funcao_origem_prescr(nr_prescricao_p) = 2314) and --CPOE
	   (cpoe_obter_se_consiste(nr_regra_p) = 'S') and (coalesce(ie_justificado_p, 'N') = 'N')	   then
		
		select	max(nr_seq_proc_cpoe),
				max(Obter_tipo_proc_interno(nr_seq_proc_interno))
		into STRICT	nr_seq_proc_cpoe_w, 
				ie_tipo_proced_w
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and nr_sequencia = nr_seq_proced_p;
		
		if (coalesce(nr_seq_proc_cpoe_w,0) > 0) then				
				if (ie_tipo_proced_w in ('O','IVC')) then
					ie_tipo_item_w := 'P';				
				elsif (ie_tipo_proced_w in ('AP','APH','APC')) then
					ie_tipo_item_w := 'AP';
				elsif (ie_tipo_proced_w in ('BS','AT','ST')) then
					ie_tipo_item_w := 'H';
				end if;
		end if;
		
		if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') and (coalesce(nr_seq_proc_cpoe_w,0) > 0) then
			nr_seq_erro_p := gerar_erro_cpoe(nr_seq_proc_cpoe_w, ie_tipo_item_w, nr_regra_p, ie_permite_liberar_p, ds_compl_erro_p, cd_perfil_p, nm_usuario_p, obter_atendimento_prescr(nr_prescricao_p), nr_prescricao_p, nr_seq_erro_p);
		end if;
	end if;

nr_seq_erro_p	:= nr_seq_erro_w;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_erro_prescr_proced (nr_prescricao_p bigint, nr_seq_proced_p bigint, nr_regra_p bigint, ie_permite_liberar_p text, ds_compl_erro_p text, cd_perfil_p bigint, nm_usuario_p text, ie_tipo_p text, nr_seq_erro_p INOUT bigint, ie_justificado_p text default 'N') FROM PUBLIC;

