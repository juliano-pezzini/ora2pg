-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_med_mat_assoc_contraste ( nr_prescricao_p bigint, nr_sequencia_p bigint, nr_seq_contraste_p bigint) AS $body$
DECLARE

 
 
nr_agrup_acum_w			double precision;
cd_material_w			integer;
cd_unidade_medida_w		varchar(30);
cd_unidade_medida_consumo_w	varchar(30);
qt_dose_w			double precision;
nm_usuario_w			varchar(15);
ds_observacao_w			varchar(255);
qt_conversao_w			double precision;
nr_sequencia_w			integer;
cd_intervalo_w			varchar(7);
ds_horarios_w			varchar(2000);
ds_horarios_ww			varchar(2000);
ds_horarios2_ww			varchar(2000);
nr_ocorrencia_w			bigint := 0;
cd_estabelecimento_w		smallint;
qt_total_disp_w			double precision;
ds_erro_w			varchar(255);
cd_pessoa_fisica_w		varchar(255);
ie_via_aplicacao_w		varchar(5);
ie_duplicar_w			varchar(15);
dt_primeiro_horario_w		timestamp;
dt_prescricao_w			timestamp;
cd_motivo_baixa_w		smallint;
cont_w				bigint;
dt_baixa_w			timestamp;
ie_cobra_paciente_w		varchar(1);
ie_intervalo_fixo_w		varchar(1);/* Oraci em 07/01/2007 OS75094 */
dt_prev_execucao_w		timestamp;
nr_horas_validade_w		integer;/* Oraci em 21/01/2008 */
ie_regra_disp_w			varchar(1);/* Rafael em 15/3/8 OS86206 */
qt_hora_intervalo_w		smallint;
qt_min_intervalo_w		integer;
ie_checar_adep_w		varchar(1);
ie_prescr_mat_sem_lib_w		varchar(30);
nm_usuario_ww			varchar(15);
ie_loop_w			varchar(10);
qt_itens_w			bigint;
ie_urgencia_w			varchar(1);
	
 
C02 CURSOR FOR 
SELECT	a.nr_sequencia, 
	a.cd_material, 
	a.cd_unidade_medida, 
	a.qt_dose, 
	p.NM_USUARIO, 
	p.cd_intervalo, 
	null ds_observacao, 
	null ds_horarios, 
	null ie_via_aplicacao, 
	0, 
	null, 
	'S', 
	'N', 
	p.dt_prev_execucao, 
	p.qt_hora_intervalo, 
	p.qt_min_intervalo, 
	'N', 
	'S' 
FROM	proc_int_mat_contraste a, 
	proc_interno_contraste c, 
	prescr_procedimento p, 
	prescr_medica x 
where	x.nr_prescricao		= p.nr_prescricao 
and	c.nr_seq_proc_interno	= p.nr_seq_proc_interno 
and	a.nr_seq_contraste	= c.nr_sequencia 
and	p.nr_sequencia		= nr_sequencia_p 
and	p.nr_prescricao		= nr_prescricao_p 
and	a.nr_seq_contraste	= nr_seq_contraste_p 
and 	not exists (	 
	SELECT	1 
	from	prescr_material b, 
		prescr_medica k 
	where	k.nr_prescricao	= nr_prescricao_p 
	and	k.nr_prescricao	= b.nr_prescricao 
	and	b.nr_sequencia_proc	= nr_sequencia_p 
	and	a.cd_material		= b.cd_material);

 

BEGIN 
select	nm_usuario, 
	coalesce(ie_urgencia,'N') 
into STRICT	nm_usuario_ww, 
	ie_urgencia_w 
from	prescr_procedimento 
where	nr_prescricao = nr_prescricao_p 
and	nr_sequencia = nr_sequencia_p;
 
select	cd_estabelecimento, 
	dt_primeiro_horario, 
	dt_prescricao, 
	cd_pessoa_fisica 
into STRICT	cd_estabelecimento_w, 
	dt_primeiro_horario_w, 
	dt_prescricao_w, 
	cd_pessoa_fisica_w 
from	prescr_medica 
where	nr_prescricao = nr_prescricao_p;
 
ie_prescr_mat_sem_lib_w := Obter_Param_Usuario(924, 530, obter_perfil_ativo, nm_usuario_ww, cd_estabelecimento_w, ie_prescr_mat_sem_lib_w);
 
select coalesce(max(nr_agrupamento),0) 
into STRICT	nr_agrup_acum_w 
from	prescr_material 
where	nr_prescricao = NR_PRESCRICAO_P;
 
open C02;
loop 
fetch C02 into	 
	nr_sequencia_w, 
	cd_material_w, 
	cd_unidade_medida_w, 
	qt_dose_w, 
	nm_usuario_w, 
	cd_intervalo_w, 
	ds_observacao_w, 
	ds_horarios_w, 
	ie_via_aplicacao_w, 
	cd_motivo_baixa_w, 
	dt_baixa_w, 
	ie_cobra_paciente_w, 
	ie_intervalo_fixo_w, 
	dt_prev_execucao_w, 
	qt_hora_intervalo_w, 
	qt_min_intervalo_w, 
	ie_checar_adep_w, 
	ie_duplicar_w;
EXIT WHEN NOT FOUND; /* apply on C02 */	
 
	if (ie_duplicar_w = 'N') then 
		select	count(*) 
		into STRICT	cont_w 
		from	prescr_material 
		where	cd_material	= cd_material_w 
		and	nr_prescricao	= nr_prescricao_p;
		 
		if (cont_w = 0) then 
			ie_duplicar_w	:= 'S';
		end if;
	end if;
	 
	if (ie_duplicar_w = 'S') then 
 
		select	coalesce(max(qt_conversao),1) 
		into STRICT	qt_conversao_w 
		from	material_conversao_unidade 
		where	cd_material		= cd_material_w 
		and	cd_unidade_medida	= cd_unidade_medida_w;
 
		/* Oraci em 21/01/2008 */
 
		select	nr_horas_validade 
		into STRICT	nr_horas_validade_w 
		from	prescr_medica 
		where	nr_prescricao = nr_prescricao_p;
 
		select	obter_ocorrencia_intervalo(cd_intervalo_w, nr_horas_validade_w, 'O') 
		into STRICT	nr_ocorrencia_w 
		;
		if (ie_intervalo_fixo_w = 'N') then		 
			SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), clock_timestamp(), 24, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww;
 
			ds_horarios_ww	:= ds_horarios_ww || ds_horarios2_ww;
		else 
			SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), coalesce(dt_primeiro_horario_w,dt_prescricao_w), 24, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww;
 
			ds_horarios_ww	:= ds_horarios_ww || ds_horarios2_ww;
		end if;
		 
		select	coalesce(substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS'),1,30),cd_unidade_medida_w) 
		into STRICT	cd_unidade_medida_consumo_w 
		from	material	 
		where	cd_material	= cd_material_w;
 
		ie_loop_w	:= 'S';
		while(ie_loop_w = 'S') loop 
			select	count(*) 
			into STRICT	qt_itens_w 
			from	prescr_material 
			where	nr_prescricao	= nr_prescricao_p 
			and	nr_sequencia	= nr_sequencia_w;
			if (qt_itens_w	= 0) then 
				ie_loop_w	:= 'N';
			else	 
				nr_sequencia_w	:= nr_sequencia_w + 1;
			end if;
		end loop;
		 
		Insert	into Prescr_material( 
			nr_prescricao, 
			nr_sequencia, 
			ie_origem_inf, 
			cd_material, 
			cd_unidade_medida_dose, 
			cd_unidade_medida, 
			qt_dose, 
			qt_unitaria, 
			qt_material, 
			dt_atualizacao, 
			nm_usuario, 
			cd_intervalo, 
			ds_observacao, 
			nr_sequencia_proc, 
			ie_agrupador, 
			ie_medicacao_paciente, 
			ie_se_necessario, 
			ie_urgencia, 
			ie_suspenso, 
			ie_utiliza_kit, 
			ie_status_cirurgia, 
			ie_bomba_infusao, 
			ie_aplic_bolus, 
			ie_aplic_lenta, 
			ie_acm, 
			cd_motivo_baixa, 
			dt_baixa, 
			qt_conversao_dose, 
			ds_horarios, 
			nr_ocorrencia, 
			ie_via_aplicacao, 
			ie_recons_diluente_fixo, 
			ie_sem_aprazamento, 
			ie_cobra_paciente, 
			ie_intervalo_dif, 
			hr_prim_horario, 
			ie_checar_adep) 
		values (		 
			nr_prescricao_p, 
			nr_sequencia_w, 
			'A', 
			cd_material_w, 
			cd_unidade_medida_w, 
			cd_unidade_medida_consumo_w, 
			qt_dose_w, 
			dividir(qt_dose_w,qt_conversao_w), 
			qt_dose_w, 
			clock_timestamp(), 
			nm_usuario_w, 
			cd_intervalo_w, 
			ds_observacao_w, 
			nr_sequencia_p, 
			5, 
			'N', 
			'N', 
			ie_urgencia_w, 
			'N', 
			'N', 
			'GI', 
			'N', 
			'N', 
			'N', 
			'N', 
			cd_motivo_baixa_w, 
			dt_baixa_w, 
			qt_conversao_w, 
			coalesce(ds_horarios_w,ds_horarios_ww), 
			nr_ocorrencia_w, 
			ie_via_aplicacao_w, 
			'N', 
			'N', 
			ie_cobra_paciente_w, 
			ie_intervalo_fixo_w, 
			CASE WHEN ie_intervalo_fixo_w='N' THEN to_char(dt_prev_execucao_w,'hh24:mi')  ELSE to_char(coalesce(dt_primeiro_horario_w,dt_prescricao_w),'hh24:mi') END  , 
			ie_checar_adep_w);	
			 
		if (ie_prescr_mat_sem_lib_w = 'S') then 
			CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_sequencia_w,obter_perfil_ativo,'N',nm_usuario_ww,null);
		end if;		
 
		SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_w, cd_material_w, NR_PRESCRICAO_P, nr_sequencia_w, cd_intervalo_w, null, dividir(qt_dose_w,qt_conversao_w), null, nr_ocorrencia_w, null, '1', cd_unidade_medida_w, 1, qt_dose_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w, 'N', 'N') INTO STRICT qt_dose_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w;
			 
		update	prescr_material 
		set	qt_material		= qt_dose_w, 
			qt_total_dispensar	= qt_total_disp_w, 
			ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END  
		where	nr_prescricao		= NR_PRESCRICAO_P 
		and	nr_sequencia		= nr_sequencia_w;
		 
		CALL Gerar_Reconst_Diluicao(nr_prescricao_p, nr_sequencia_w,'A');
	end if;
end loop;
close C02;
 
commit;			
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_med_mat_assoc_contraste ( nr_prescricao_p bigint, nr_sequencia_p bigint, nr_seq_contraste_p bigint) FROM PUBLIC;

