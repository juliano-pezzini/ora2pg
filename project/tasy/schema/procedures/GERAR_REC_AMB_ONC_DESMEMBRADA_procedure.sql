-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_rec_amb_onc_desmembrada (( nr_seq_paciente_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ie_gerado_p out text) is cd_material_w bigint) AS $body$
DECLARE

			
			qt_reg_w	bigint;
			
			
BEGIN
			
				select	count(*)
				into STRICT	qt_reg_w
				from	paciente_atend_medic a,
					paciente_atendimento b
				where	a.nr_seq_atendimento	= b.nr_seq_atendimento
				and	b.nr_seq_paciente		= nr_seq_paciente_p
				and	b.nr_ciclo between nr_ciclo_inicial_p and nr_ciclo_final_p
				and	a.ie_local_adm	= 'C'
				and	PKG_DATE_UTILS.get_WeekDay(b.dt_prevista) = nr_dia_p
				and	a.cd_material	= cd_material_w
				and	a.cd_unid_med_prescr	= cd_unid_med_prescr_w
				and	coalesce(a.ie_via_aplicacao,coalesce(ie_via_aplicacao_w,'XPTO'))	= coalesce(ie_via_aplicacao_w,'XPTO')
				and	coalesce(a.cd_intervalo,coalesce(cd_intervalo_w,'XPTO'))			= coalesce(cd_intervalo_w,'XPTO')		
				and	coalesce(a.nr_seq_solucao::text, '') = ''
				and	coalesce(a.nr_seq_diluicao::text, '') = '';
				
				if (qt_reg_w	> 0) then
					return;
				else
					return;
				end if;

			end;

begin

cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

select	max(cd_pessoa_fisica),
	max(cd_medico_resp)
into STRICT	cd_pessoa_fisica_w,
	cd_medico_w
from	paciente_setor
where	nr_seq_paciente	= nr_seq_paciente_p;

nr_atendimento_w	:= coalesce(nr_atendimento_p,OBTER_ULTIMO_ATENDIMENTO(cd_pessoa_fisica_w));

ie_libera_receita_w := obter_param_usuario(281, 1305, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_libera_receita_w);
ie_tipo_receita_w := obter_param_usuario(10015, 114, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_receita_w);
ie_receita_ciclo_w := obter_param_usuario(281, 1484, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_receita_ciclo_w);
ie_gera_registro_entrega_w := obter_param_usuario(281, 1490, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gera_registro_entrega_w);

open C00;
loop
fetch C00 into
	nr_ciclo_w,
	dt_prevista_w,
	dt_validade_receita_w,
	nr_dias_receita_w,
	nr_seq_atendimento_w,
    qt_dias_util_ww;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin	

		select 	coalesce(max('S'), 'N')
	  	into STRICT 	ie_ja_existe_ciclo_w
		from 	fa_receita_farmacia
		where 	nr_ciclo = nr_ciclo_w
		and  	nr_seq_paciente = nr_seq_paciente_p;
		
		if	(((ie_receita_ciclo_w = 'N') and
		     ((coalesce(nr_seq_receita_w::text, '') = '') or (nr_dias_receita_w <> nr_dias_receita_ant_w))) or
			 (ie_receita_ciclo_w = 'S' AND ie_ja_existe_ciclo_w = 'N')) then

				select	nextval('fa_receita_farmacia_seq')
				into STRICT	nr_seq_receita_w
				;

				ds_retorno_w	:= FA_OBTER_NUMERO_RECEITA(nr_atendimento_w);

				nr_receita_w	:= substr(substr(ds_retorno_w,1,position('-' in ds_retorno_w)-1),1,15);
				nr_serie_w	:= substr(substr(ds_retorno_w,position('-' in ds_retorno_w)+1,length(ds_retorno_w)),1,15);
			
				insert	into fa_receita_farmacia(	nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_atendimento,
								cd_medico,
								nr_receita,
								dt_receita,
								dt_liberacao,
								nr_serie,
								cd_pessoa_fisica,
								nr_seq_paciente,
								nr_ciclo,
								nr_dias_receita,
								ie_tipo_receita,
								cd_estabelecimento,
								dt_inicio_receita,
								dt_validade_receita,
								nr_seq_atendimento
								)
						values (	nr_seq_receita_w,
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									nr_atendimento_w,
									cd_medico_w,
									nr_receita_w,
									clock_timestamp(),
									null,
									nr_serie_w,
									cd_pessoa_fisica_w,
									nr_seq_paciente_p,
									CASE WHEN ie_receita_ciclo_w='S' THEN  nr_ciclo_w  ELSE nr_ciclo_inicial_p END ,
                                    CASE WHEN qt_dias_util_ww=0 THEN  nr_dias_receita_w  ELSE qt_dias_util_ww END ,
									coalesce(ie_tipo_receita_w,'Q'),
									cd_estabelecimento_w,
									dt_prevista_w,
                                    CASE WHEN qt_dias_util_ww=0 THEN  dt_validade_receita_w  ELSE dt_prevista_w + qt_dias_util_ww -1 END ,
									nr_seq_atendimento_w);

				ie_gerado_p	:= 'S';
				nr_dias_receita_ant_w := nr_dias_receita_w;
				
				if (ie_gera_registro_entrega_w = 'S') then

					select	nextval('fa_paciente_entrega_seq')
					into STRICT	nr_seq_pac_entrega_w
					;
					
					insert	into fa_paciente_entrega(	nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_atendimento,
									cd_pessoa_fisica,
									dt_entrada,
									ie_status_paciente,
									cd_estabelecimento
									)
							values (	nr_seq_pac_entrega_w,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										nr_atendimento_w,
										cd_pessoa_fisica_w,
										dt_prevista_w,
										'TR', /*corresponde ao status de triagem da entrega*/
										cd_estabelecimento_w
									);
				end if;

				open C01;
				loop
				fetch C01 into	
					cd_material_w,
					ie_via_aplicacao_w,
					cd_unid_med_prescr_w,
					qt_dose_prescricao_w,
					cd_intervalo_w,
					qt_dias_util_w,
					ie_uso_continuo_w,
					ds_observacao_w,
					ds_dose_diferenciada_w,
					ie_se_necessario_atend_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					begin

						if (ie_uso_continuo_w = 'S') or (qt_dias_util_w IS NOT NULL AND qt_dias_util_w::text <> '') then
							ie_segunda_w			:= 'S';
							ie_terca_w			:= 'S';
							ie_quarta_w			:= 'S';
							ie_quinta_w			:= 'S';
							ie_sexta_w			:= 'S';
							ie_sabado_w			:= 'S';
							ie_domingo_w			:= 'S';
						else	
							ie_segunda_w			:= Obter_Se_Dia_Receita(2);
							ie_terca_w			:= Obter_Se_Dia_Receita(3);
							ie_quarta_w			:= Obter_Se_Dia_Receita(4);
							ie_quinta_w			:= Obter_Se_Dia_Receita(5);
							ie_sexta_w			:= Obter_Se_Dia_Receita(6);
							ie_sabado_w			:= Obter_Se_Dia_Receita(7);
							ie_domingo_w			:= Obter_Se_Dia_Receita(1);
						end if;
						
						if (ie_se_necessario_atend_w = 'S') and (coalesce(qt_dias_util_w::text, '') = '') and (ie_uso_continuo_w = 'N') then
							ie_se_necessario_w 		:= '';
							ds_se_necessario_w      := 'S';
						else
							ds_se_necessario_w      := 'N';
							ie_se_necessario_w 		:= obter_desc_expressao(746576);
						end if;
						
						select	max(ds_texto_padrao_receita)
						into STRICT	ds_texto_padrao_receita_w
						from	FA_MEDIC_FARMACIA_AMB
						where	cd_material	= cd_material_w;
							
						if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then
							
							qt_dose_prescricao_w := 0;
							
							for i in 1..length(ds_dose_diferenciada_w) loop
								begin
								x	:= substr(ds_dose_diferenciada_w, i, 1);
								if (x <> '-') then
									buff_w := buff_w || x;
								end if;
								if (x = '-') or (i = length(ds_dose_diferenciada_w)) then
									if (buff_w = '1/2') then
										buff_w := to_char(0.5);
									elsif (coalesce(somente_numero_char(buff_w),'0') <> buff_w) then
										buff_W := to_char(0);
									end if;
									qt_dose_prescricao_w := qt_dose_prescricao_w + (buff_w)::numeric;
									buff_w := '';
									k := k + 1;
								end if;
								end;
							end loop;
						end if;

						if (ds_texto_padrao_receita_w IS NOT NULL AND ds_texto_padrao_receita_w::text <> '') then	
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@medicamento',OBTER_DESC_MATERIAL(cd_material_w));
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@dose',qt_dose_prescricao_w);
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@orientacao',fa_obter_orientacao_medic(cd_material_w));
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@unidade',Obter_Unidade_Medida(cd_unid_med_prescr_w));
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@intervalo',OBTER_DESC_INTERVALO(cd_intervalo_w));
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@via',Obter_Via_Aplicacao(ie_via_aplicacao_w,'D'));
							
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@dias_receita',qt_dias_util_w);
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@nr_ciclos','');
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@uso_continuo','');
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@observacao',ds_observacao_w);
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@se_necessario',ie_se_necessario_w);		
							
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@dif_dose_1',coalesce(ds_dose_dif_1_w,''));
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@dif_dose_2',coalesce(ds_dose_dif_2_w,''));
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@dif_dose_3',coalesce(ds_dose_dif_3_w,''));
							
							ds_dias_semana_w	:= null;
							if (ie_segunda_w	='S') then
								ds_dias_semana_w	:= ds_dias_semana_w||obter_desc_expressao(298104);--segunda
							end if;
							
							if (ie_terca_w	='S') then
								ds_dias_semana_w	:= ds_dias_semana_w||obter_desc_expressao(299301); --terca
							end if;
							
							if (ie_quarta_w	='S') then
								ds_dias_semana_w	:= ds_dias_semana_w||obter_desc_expressao(297137); --quarta
							end if;
							
							if (ie_quinta_w	='S') then
								ds_dias_semana_w	:= ds_dias_semana_w||obter_desc_expressao(297213);--quinta
							end if;
						
							if (ie_sexta_w	='S') then
								ds_dias_semana_w	:= ds_dias_semana_w||obter_desc_expressao(298487);--sexta
							end if;

							if (ie_sabado_w	='S') then
								ds_dias_semana_w	:= ds_dias_semana_w||obter_desc_expressao(297960);--sabado
							end if;
						
							if (ie_domingo_w	='S') then
								ds_dias_semana_w	:= ds_dias_semana_w||obter_desc_expressao(288200);--domingo
							end if;
							ds_texto_padrao_receita_w	:= replace(ds_texto_padrao_receita_w,'@dias_semana',ds_dias_semana_w);
						end if;
						
						select 	max(ds_dias_aplicacao)
						into STRICT 	ds_dias_ciclo_w
						from 	paciente_protocolo_medic 
						where 	nr_seq_paciente = nr_seq_paciente_p
						and 	cd_material = cd_material_w
						and		coalesce(nr_seq_solucao::text, '') = ''
						and		coalesce(nr_seq_diluicao::text, '') = '';

						insert into fa_receita_farmacia_item(	nr_sequencia,	
											dt_atualizacao,
											nm_usuario,
											nr_seq_receita,
											cd_material,
											qt_dose,
											ie_via_aplicacao,
											cd_unidade_medida,
											cd_intervalo,
											ie_segunda,
											ie_terca       ,
											ie_quarta,
											ie_quinta ,     
											ie_sexta  ,     
											ie_sabado  ,    
											ie_domingo,
											ds_texto_receita ,
											nr_dias_receita,
											ie_uso_continuo,
											ie_se_necessario,
											ds_dose_diferenciada,
											dt_inicio_receita,
											dt_validade_receita,
											ds_dias_ciclo)
								values (		nextval('fa_receita_farmacia_item_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_receita_w,
											cd_material_w,
											qt_dose_prescricao_w,
											ie_via_aplicacao_w,
											cd_unid_med_prescr_w,
											cd_intervalo_w,
											ie_segunda_w,
											ie_terca_w,
											ie_quarta_w,
											ie_quinta_w,
											ie_sexta_w,
											ie_sabado_w,
											ie_domingo_w,
											ds_texto_padrao_receita_w,
											qt_dias_util_w,
											ie_uso_continuo_w,
											ds_se_necessario_w,
											ds_dose_diferenciada_w,
											dt_prevista_w,
											CASE WHEN coalesce(qt_dias_util_w,0)=0 THEN null  ELSE dt_prevista_w + qt_dias_util_w - 1 END ,
											ds_dias_ciclo_w);
					end;

					if (coalesce(ie_libera_receita_w,'S') = 'S') then
						CALL fa_lib_receita_parcial(nr_seq_receita_w,nm_usuario_p);		
					elsif (coalesce(ie_libera_receita_w,'N') = 'T') then
						CALL fa_lib_receita_total(nr_seq_receita_w,nm_usuario_p);	
					end if;

				end loop;
				close C01;
		end if;	
		
	end;
end loop;
close C00;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_rec_amb_onc_desmembrada (( nr_seq_paciente_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ie_gerado_p out text) is cd_material_w bigint) FROM PUBLIC;

