-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_contab_cancel_mens ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE



dt_referencia_w			timestamp;
cd_estabelecimento_w		smallint;
cd_conta_contabil_w		varchar(20);
ie_debito_credito_w		varchar(20);
vl_contabil_w			double precision;
vl_retorno_w			varchar(2000);
nr_seq_w_movto_cont_w		bigint;
cd_historico_w			bigint;
nr_seq_mensalidade_w		bigint;
nr_seq_nota_fiscal_w		bigint;
cd_centro_custo_w		integer;
ie_centro_custo_w		varchar(1);
cd_centro_custo_ww		integer;
nr_seq_item_w			bigint;
ds_item_w			varchar(255);
nr_lote_contabil_w		bigint;
ie_tipo_valor_w			varchar(2);
nr_seq_pagador_w		bigint;
nr_seq_regra_w			bigint;
ie_tipo_item_w			varchar(2);
nr_nota_fiscal_w		varchar(255);
nr_titulo_w			bigint;
cd_cgc_pagador_w		varchar(14);
cd_pf_pagador_w			varchar(10);
ds_conteudo_w			varchar(4000);
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
nr_seq_copartic_w		bigint;
nm_pagador_w			varchar(255);
cd_centro_custo_item_w		integer;
nr_seq_regra_cc_item_w		bigint;
nr_seq_lote_mensalidade_w	bigint;
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
qt_compl_hist_w			bigint;
nr_seq_movimento_sem_conta_w	bigint;
nr_seq_vinculo_sca_w		bigint;
ds_grupo_w			varchar(255);
dt_referencia_mov_w		timestamp;
cd_conta_ato_cooperado_w	varchar(20);
cd_conta_ato_auxiliar_w		varchar(20);
cd_conta_ato_nao_coop_w		varchar(20);
vl_ato_cooperado_princ_w	double precision;
vl_ato_cooperado_aux_w		double precision;
vl_ato_nao_cooperado_w		double precision;
qt_ato_cooperado_w		bigint;
ie_deb_rec_ato_cooperado_w	varchar(1);
nr_seq_tipo_lanc_w		bigint;
nr_seq_agrupamento_w		bigint;
nr_seq_esquema_w		bigint;
qt_lote_gerado_mes_w		bigint;
dt_referencia_lote_w		timestamp;
nm_agrupador_w			varchar(255);
ds_classif_sca_w		varchar(255);
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
nr_seq_tab_orig_w		w_movimento_contabil.nr_seq_tab_orig%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
dt_referencia_fm_w		timestamp;

C01 CURSOR FOR
	SELECT	'D' ie_debito_credito,
		'N' ie_tipo_valor,
		a.cd_conta_deb cd_conta_contabil,
		coalesce(a.vl_item,0) vl_contabil,
		a.cd_historico cd_historico,
		a.nr_sequencia nr_seq_item,
		(	SELECT	substr(ds_valor_dominio,1,255)
			from	valor_dominio
			where	cd_dominio = 1930
			and	vl_dominio = a.ie_tipo_item) ds_item,
		a.nr_seq_regra_ctb_mensal_deb nr_seq_regra,
		a.ie_tipo_item ie_tipo_item,
		CASE WHEN a.ie_tipo_item='13' THEN CASE WHEN coalesce(ie_cancelamento::text, '') = '' THEN 1  ELSE d.nr_sequencia END   ELSE 0 END  nr_seq_copartic,
		a.cd_centro_custo cd_centro_custo,
		e.nr_titulo nr_titulo,
		d.nr_seq_lote nr_seq_lote_mensalidade,
		e.cd_pessoa_fisica cd_pessoa_fisica,
		e.cd_cgc cd_cgc,
		d.nr_sequencia nr_seq_mensalidade,
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		a.vl_ato_cooperado,
		a.vl_ato_auxiliar,
		a.vl_ato_nao_cooperado,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		g.dt_referencia dt_referencia_lote,
		a.nr_seq_vinculo_sca,
		'PLS_MENSALIDADE_SEG_ITEM' nm_tabela,
		'VL_ITEM' nm_atributo,
		a.nr_sequencia nr_seq_tab_orig,
		20 nr_seq_info_ctb
	FROM pls_cancel_rec_mens_lote g, pls_cancel_rec_mensalidade f, pls_segurado c, pls_mensalidade_segurado b, pls_mensalidade_seg_item a, pls_mensalidade d
LEFT OUTER JOIN titulo_receber e ON (d.nr_sequencia = e.nr_seq_mensalidade)
WHERE b.nr_sequencia	= a.nr_seq_mensalidade_seg and c.nr_sequencia	= b.nr_seq_segurado and d.nr_sequencia	= b.nr_seq_mensalidade  and f.nr_sequencia	= d.nr_seq_cancel_rec_mens and g.nr_sequencia	= f.nr_seq_lote and a.ie_tipo_item not in ('3','6','18') /* Do not account the parcel of revenue negociation */
  and g.nr_lote_contabil	= nr_lote_contabil_p
	
union all

	select	'C',
		'N',
		a.cd_conta_rec,
		coalesce(a.vl_item,0),
		a.cd_historico,
		a.nr_sequencia,
		(	select	substr(ds_valor_dominio,1,255)
			from	valor_dominio
			where	cd_dominio = 1930
			and	vl_dominio = a.ie_tipo_item),
		a.nr_seq_regra_ctb_mensal,
		a.ie_tipo_item,
		CASE WHEN a.ie_tipo_item='13' THEN CASE WHEN coalesce(ie_cancelamento::text, '') = '' THEN 1  ELSE d.nr_sequencia END   ELSE 0 END ,
		a.cd_centro_custo,
		e.nr_titulo,
		d.nr_seq_lote nr_seq_lote_mensalidade,
		e.cd_pessoa_fisica,
		e.cd_cgc,
		d.nr_sequencia nr_seq_mensalidade,
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		a.vl_ato_cooperado,
		a.vl_ato_auxiliar,
		a.vl_ato_nao_cooperado,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		g.dt_referencia dt_referencia_lote,
		a.nr_seq_vinculo_sca,
		'PLS_MENSALIDADE_SEG_ITEM' nm_tabela,
		'VL_ITEM' nm_atributo,
		a.nr_sequencia nr_seq_tab_orig,
		20 nr_seq_info_ctb
	FROM pls_cancel_rec_mens_lote g, pls_cancel_rec_mensalidade f, pls_segurado c, pls_mensalidade_segurado b, pls_mensalidade_seg_item a, pls_mensalidade d
LEFT OUTER JOIN titulo_receber e ON (d.nr_sequencia = e.nr_seq_mensalidade)
WHERE b.nr_sequencia	= a.nr_seq_mensalidade_seg and d.nr_sequencia	= b.nr_seq_mensalidade and c.nr_sequencia	= b.nr_seq_segurado and f.nr_sequencia	= d.nr_seq_cancel_rec_mens and g.nr_sequencia	= f.nr_seq_lote  and a.ie_tipo_item not in ('3','6','18') /* Do not account the parcel of revenue negociation */
  and g.nr_lote_contabil	= nr_lote_contabil_p
	 
union all

	select	'D',
		'C',
		f.cd_conta_deb,
		coalesce(coalesce(f.vl_copartic_mens, f.vl_coparticipacao),0),
		f.cd_historico,
		c.nr_sequencia,
		(	select	substr(ds_valor_dominio,1,255)
			from	valor_dominio
			where	cd_dominio = 1930
			and	vl_dominio = c.ie_tipo_item),
		f.nr_seq_regra_ctb_deb,
		c.ie_tipo_item,
		f.nr_sequencia,
		f.cd_centro_custo,
		j.nr_titulo,
		a.nr_seq_lote nr_seq_lote_mensalidade,
		j.cd_pessoa_fisica,
		j.cd_cgc,
		a.nr_sequencia nr_seq_mensalidade,
		null cd_conta_ato_cooperado,
		null cd_conta_ato_auxiliar,
		null cd_conta_ato_nao_coop,
		null vl_ato_cooperado,
		null vl_ato_auxiliar,
		null vl_ato_nao_cooperado,
		null nr_seq_tipo_lanc,
		a.nr_seq_pagador,
		f.nr_seq_esquema,
		n.dt_referencia dt_referencia_lote,
		c.nr_seq_vinculo_sca,
		'PLS_CONTA_COPARTICIPACAO' nm_tabela,
		'VL_COPARTICIPACAO' nm_atributo,
		f.nr_sequencia nr_seq_tab_orig,
		21 nr_seq_info_ctb
	FROM pls_cancel_rec_mens_lote n, pls_cancel_rec_mensalidade m, pls_segurado g, pls_conta_coparticipacao f, pls_conta d, pls_mensalidade_seg_item c, pls_mensalidade_segurado b, pls_mensalidade a
LEFT OUTER JOIN titulo_receber j ON (a.nr_sequencia = j.nr_seq_mensalidade)
WHERE a.nr_sequencia	= b.nr_seq_mensalidade and b.nr_sequencia	= c.nr_seq_mensalidade_seg and d.nr_sequencia	= c.nr_seq_conta and d.nr_sequencia	= f.nr_seq_conta and g.nr_sequencia	= b.nr_seq_segurado and m.nr_sequencia	= a.nr_seq_cancel_rec_mens and n.nr_sequencia	= m.nr_seq_lote  and c.ie_tipo_item	= '3' and n.nr_lote_contabil	= nr_lote_contabil_p
	 
union all

	select	'C',
		'C',
		f.cd_conta_cred,
		coalesce(coalesce(f.vl_copartic_mens, f.vl_coparticipacao),0),
		f.cd_historico,
		c.nr_sequencia,
		(	select	substr(ds_valor_dominio,1,255)
			from	valor_dominio
			where	cd_dominio = 1930
			and	vl_dominio = c.ie_tipo_item),
		f.nr_seq_regra_ctb_cred,
		c.ie_tipo_item,
		f.nr_sequencia,
		f.cd_centro_custo,
		j.nr_titulo,
		a.nr_seq_lote nr_seq_lote_mensalidade,
		j.cd_pessoa_fisica,
		j.cd_cgc,
		a.nr_sequencia nr_seq_mensalidade,
		null cd_conta_ato_cooperado,
		null cd_conta_ato_auxiliar,
		null cd_conta_ato_nao_coop,
		null vl_ato_cooperado,
		null vl_ato_auxiliar,
		null vl_ato_nao_cooperado,
		null nr_seq_tipo_lanc,
		a.nr_seq_pagador,
		f.nr_seq_esquema,
		n.dt_referencia dt_referencia_lote,
		c.nr_seq_vinculo_sca,
		'PLS_CONTA_COPARTICIPACAO' nm_tabela,
		'VL_COPARTICIPACAO' nm_atributo,
		f.nr_sequencia nr_seq_tab_orig,
		21 nr_seq_info_ctb
	FROM pls_cancel_rec_mens_lote n, pls_cancel_rec_mensalidade m, pls_segurado g, pls_conta_coparticipacao f, pls_conta d, pls_mensalidade_seg_item c, pls_mensalidade_segurado b, pls_mensalidade a
LEFT OUTER JOIN titulo_receber j ON (a.nr_sequencia = j.nr_seq_mensalidade)
WHERE a.nr_sequencia	= b.nr_seq_mensalidade and b.nr_sequencia	= c.nr_seq_mensalidade_seg and d.nr_sequencia	= c.nr_seq_conta and d.nr_sequencia	= f.nr_seq_conta and g.nr_sequencia	= b.nr_seq_segurado and m.nr_sequencia	= a.nr_seq_cancel_rec_mens and n.nr_sequencia	= m.nr_seq_lote  and c.ie_tipo_item	= '3' and n.nr_lote_contabil	= nr_lote_contabil_p
	 
union all

	select	'D',
		'P',
		f.cd_conta_deb,
		coalesce(f.vl_beneficiario,0),
		f.cd_historico,
		c.nr_sequencia,
		(	select	substr(ds_valor_dominio,1,255)
			from	valor_dominio
			where	cd_dominio = 1930
			and	vl_dominio = c.ie_tipo_item),
		f.nr_seq_regra_ctb_deb,
		c.ie_tipo_item,
		f.nr_sequencia,
		f.cd_centro_custo,
		j.nr_titulo,
		a.nr_seq_lote nr_seq_lote_mensalidade,
		j.cd_pessoa_fisica,
		j.cd_cgc,
		a.nr_sequencia nr_seq_mensalidade,
		null cd_conta_ato_cooperado,
		null cd_conta_ato_auxiliar,
		null cd_conta_ato_nao_coop,
		null vl_ato_cooperado,
		null vl_ato_auxiliar,
		null vl_ato_nao_cooperado,
		null nr_seq_tipo_lanc,
		a.nr_seq_pagador,
		f.nr_seq_esquema,
		n.dt_referencia dt_referencia_lote,
		c.nr_seq_vinculo_sca,
		'PLS_CONTA_POS_ESTABELECIDO' nm_tabela,
		'VL_BENEFICIARIO' nm_atributo,
		f.nr_sequencia nr_seq_tab_orig,
		22 nr_seq_info_ctb
	FROM pls_cancel_rec_mens_lote n, pls_cancel_rec_mensalidade m, pls_segurado g, pls_conta_pos_estabelecido f, pls_conta d, pls_mensalidade_seg_item c, pls_mensalidade_segurado b, pls_mensalidade a
LEFT OUTER JOIN titulo_receber j ON (a.nr_sequencia = j.nr_seq_mensalidade)
WHERE a.nr_sequencia	= b.nr_seq_mensalidade and b.nr_sequencia	= c.nr_seq_mensalidade_seg and d.nr_sequencia	= c.nr_seq_conta and d.nr_sequencia	= f.nr_seq_conta and g.nr_sequencia	= b.nr_seq_segurado and m.nr_sequencia	= a.nr_seq_cancel_rec_mens and n.nr_sequencia	= m.nr_seq_lote  and c.ie_tipo_item	= '6' and n.nr_lote_contabil	= nr_lote_contabil_p and coalesce(f.ie_situacao,'A') = 'A'
	 
union all

	select	'C',
		'P',
		f.cd_conta_cred,
		coalesce(f.vl_beneficiario,0),
		f.cd_historico,
		c.nr_sequencia,
		(	select	substr(ds_valor_dominio,1,255)
			from	valor_dominio
			where	cd_dominio = 1930
			and	vl_dominio = c.ie_tipo_item),
		f.nr_seq_regra_ctb_cred,
		c.ie_tipo_item,
		f.nr_sequencia,
		f.cd_centro_custo,
		j.nr_titulo,
		a.nr_seq_lote nr_seq_lote_mensalidade,
		j.cd_pessoa_fisica,
		j.cd_cgc,
		a.nr_sequencia nr_seq_mensalidade,
		null cd_conta_ato_cooperado,
		null cd_conta_ato_auxiliar,
		null cd_conta_ato_nao_coop,
		null vl_ato_cooperado,
		null vl_ato_auxiliar,
		null vl_ato_nao_cooperado,
		null nr_seq_tipo_lanc,
		a.nr_seq_pagador,
		f.nr_seq_esquema,
		n.dt_referencia dt_referencia_lote,
		c.nr_seq_vinculo_sca,
		'PLS_CONTA_POS_ESTABELECIDO' nm_tabela,
		'VL_BENEFICIARIO' nm_atributo,
		f.nr_sequencia nr_seq_tab_orig,
		22 nr_seq_info_ctb
	FROM pls_cancel_rec_mens_lote n, pls_cancel_rec_mensalidade m, pls_segurado g, pls_conta_pos_estabelecido f, pls_conta d, pls_mensalidade_seg_item c, pls_mensalidade_segurado b, pls_mensalidade a
LEFT OUTER JOIN titulo_receber j ON (a.nr_sequencia = j.nr_seq_mensalidade)
WHERE a.nr_sequencia	= b.nr_seq_mensalidade and b.nr_sequencia	= c.nr_seq_mensalidade_seg and d.nr_sequencia	= c.nr_seq_conta and d.nr_sequencia	= f.nr_seq_conta and g.nr_sequencia	= b.nr_seq_segurado and m.nr_sequencia	= a.nr_seq_cancel_rec_mens and n.nr_sequencia	= m.nr_seq_lote  and c.ie_tipo_item	= '6' and n.nr_lote_contabil	= nr_lote_contabil_p and coalesce(f.ie_situacao,'A') = 'A';

TYPE 		fetch_array IS TABLE OF c01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w			Vetor;

c_movimento_w CURSOR FOR
	SELECT	oid
	from	w_movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
c_movimento CURSOR FOR
	SELECT	oid
	from	movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 46) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
select	trunc(dt_referencia,'month'),
	cd_estabelecimento,
	nr_lote_contabil,
	cd_tipo_lote_contabil
into STRICT 	dt_referencia_w,
	cd_estabelecimento_w,
	nr_lote_contabil_w,
	cd_tipo_lote_contabil_w
from 	lote_contabil
where 	nr_lote_contabil 	= nr_lote_contabil_p;

dt_referencia_fm_w	:= fim_dia(fim_mes(dt_referencia_w));

delete	from w_pls_movimento_sem_conta
where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w;

if (ie_exclusao_p = 'S') then
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	for reg in c_movimento
		loop
		delete	from movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
	
	update	lote_contabil
	set	vl_credito 		= 0,
		vl_debito  		= 0,
		dt_geracao_lote		 = NULL
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_cancel_rec_mens_lote
	set	nr_lote_contabil	 = NULL
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else
	select	count(1)
	into STRICT	qt_lote_gerado_mes_w
	from	lote_contabil
	where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
	and	dt_referencia between dt_referencia_w and dt_referencia_fm_w
	and	nr_lote_contabil	<> nr_lote_contabil_p
	and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	and	(dt_geracao_lote IS NOT NULL AND dt_geracao_lote::text <> '')  LIMIT 1;
	
	if (qt_lote_gerado_mes_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 188714, 'DT_REFERENCIA=' || to_char(dt_referencia_w,'mm/yyyy') );
	end if;
	
	nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)), 'NR_TITULO');
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	for reg in c_movimento_w
		loop
		delete	from w_movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
	
	update	pls_cancel_rec_mens_lote
	set	nr_lote_contabil	= nr_lote_contabil_p
	where	dt_referencia between dt_referencia_w and dt_referencia_fm_w
	and	ie_status	= 'D';
	
	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	/* Obtain the cost centre when it's not informed in the monthly fee item */

	SELECT * FROM pls_obter_centro_custo(	'R', null, cd_estabelecimento_w, '', '', '', '', '', cd_centro_custo_item_w, nr_seq_regra_cc_item_w) INTO STRICT cd_centro_custo_item_w, nr_seq_regra_cc_item_w;
	
	nr_seq_w_movto_cont_w	:= 0;
	
	/* Account the monthly fee */

	open c01;
	loop
	FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
		Vetor_c01_w(i) := s_array;
		i := i + 1;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	END LOOP;
	CLOSE C01;
	
	for i in 1..Vetor_c01_w.COUNT loop
		s_array := Vetor_c01_w(i);
		for z in 1..s_array.COUNT loop
			begin
			ie_debito_credito_w		:= s_array[z].ie_debito_credito;
			ie_tipo_valor_w			:= s_array[z].ie_tipo_valor;
			cd_conta_contabil_w		:= s_array[z].cd_conta_contabil;
			vl_contabil_w			:= s_array[z].vl_contabil;
			cd_historico_w			:= s_array[z].cd_historico;
			nr_seq_item_w			:= s_array[z].nr_seq_item;
			ds_item_w			:= s_array[z].ds_item;
			nr_seq_regra_w			:= s_array[z].nr_seq_regra;
			ie_tipo_item_w			:= s_array[z].ie_tipo_item;
			nr_seq_copartic_w		:= s_array[z].nr_seq_copartic;
			cd_centro_custo_w		:= s_array[z].cd_centro_custo;
			nr_titulo_w			:= s_array[z].nr_titulo;
			nr_seq_lote_mensalidade_w	:= s_array[z].nr_seq_lote_mensalidade;
			cd_pessoa_fisica_w		:= s_array[z].cd_pessoa_fisica;
			cd_cgc_w			:= s_array[z].cd_cgc;
			nr_seq_mensalidade_w		:= s_array[z].nr_seq_mensalidade;
			cd_conta_ato_cooperado_w	:= s_array[z].cd_conta_ato_cooperado;
			cd_conta_ato_auxiliar_w		:= s_array[z].cd_conta_ato_auxiliar;
			cd_conta_ato_nao_coop_w		:= s_array[z].cd_conta_ato_nao_coop;
			vl_ato_cooperado_princ_w	:= s_array[z].vl_ato_cooperado;
			vl_ato_cooperado_aux_w		:= s_array[z].vl_ato_auxiliar;
			vl_ato_nao_cooperado_w		:= s_array[z].vl_ato_nao_cooperado;
			nr_seq_tipo_lanc_w		:= s_array[z].nr_seq_tipo_lanc;
			nr_seq_pagador_w		:= s_array[z].nr_seq_pagador;
			nr_seq_esquema_w		:= s_array[z].nr_seq_esquema;
			dt_referencia_lote_w		:= s_array[z].dt_referencia_lote;
			nr_seq_vinculo_sca_w		:= s_array[z].nr_seq_vinculo_sca;
			nm_tabela_w			:= s_array[z].nm_tabela;
			nm_atributo_w			:= s_array[z].nm_atributo;
			nr_seq_tab_orig_w		:= s_array[z].nr_seq_tab_orig;
			nr_seq_info_ctb_w		:= s_array[z].nr_seq_info_ctb;
			
			cd_centro_custo_ww		:= cd_centro_custo_w;
			nm_pagador_w			:= null;
			ds_compl_historico_w		:= null;
			dt_referencia_mov_w		:= dt_referencia_lote_w;
			
			vl_contabil_w	:= vl_contabil_w *-1; /* It will always account for reversal in this accounting batch */
			
			if (coalesce(cd_historico_w::text, '') = '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort( 184666,	'NR_SEQ_PAGADOR=' || nr_seq_pagador_w || ';' ||
											'NR_SEQ_LOTE=' || nr_seq_lote_mensalidade_w);
			else
				/*Lepinski - OS - Improve performance. Verify if the default history has a history complement for this accounting batch. Otherwise doesn't call the procedure to obtain the complement. */

				select	count(1)
				into STRICT	qt_compl_hist_w
				from	historico_padrao_atributo
				where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
				and	cd_historico		= cd_historico_w  LIMIT 1;
				
				if (qt_compl_hist_w > 0) then
					select	max(nr_sequencia)
					into STRICT	nr_seq_nota_fiscal_w
					from	nota_fiscal
					where	nr_seq_mensalidade	= nr_seq_mensalidade_w;
					
					if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then
						select	max(nr_nota_fiscal)
						into STRICT	nr_nota_fiscal_w
						from	nota_fiscal
						where	nr_sequencia	= nr_seq_nota_fiscal_w;
						
						nr_nota_fiscal_w	:= somente_numero(nr_nota_fiscal_w);
					end if;
					
					if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
						begin
						select	ds_razao_social
						into STRICT	nm_pagador_w
						from	pessoa_juridica
						where	cd_cgc	= cd_cgc_w;
						exception
						when others then
							nm_pagador_w	:= null;
						end;
					elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
						begin
						select	nm_pessoa_fisica
						into STRICT	nm_pagador_w
						from	pessoa_fisica
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
						exception
						when others then
							nm_pagador_w	:= null;
						end;
					else
						select (select x.nm_pessoa_fisica
							from	pessoa_fisica x
							where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
							
UNION ALL

							select	y.ds_razao_social
							from	pessoa_juridica y
							where	y.cd_cgc	= a.cd_cgc)
						into STRICT	nm_pagador_w
						from	pls_contrato_pagador a
						where	a.nr_sequencia	= nr_seq_pagador_w;
					end if;
					
					if (coalesce(nr_seq_vinculo_sca_w,0) > 0) then
						select	max(c.ds_classificacao)
						into STRICT	ds_classif_sca_w
						from	pls_sca_classificacao	c,
							pls_sca_vinculo 	b,
							pls_plano 		a
						where	a.nr_sequencia	= b.nr_seq_plano
						and	c.nr_sequencia	= a.nr_seq_classificacao
						and	b.nr_sequencia	= nr_seq_vinculo_sca_w;
					end if;	
					
					if (coalesce(nr_seq_esquema_w,0) > 0) then
						select	max(b.ds_grupo)	
						into STRICT	ds_grupo_w
						from	pls_contab_mov_mens_lote	b,
							pls_esquema_contabil 		a
						where	b.nr_sequencia	= a.nr_seq_movimentacao
						and	a.nr_sequencia	= nr_seq_esquema_w;
					end if;
					
					ds_conteudo_w	:= substr(	nr_nota_fiscal_w		|| '#@' ||
									cd_cgc_pagador_w 		|| '#@' ||
									cd_pf_pagador_w			|| '#@' ||
									nr_titulo_w			|| '#@' ||
									nm_pagador_w			|| '#@' ||
									nr_seq_lote_mensalidade_w 	|| '#@' ||
									nr_seq_regra_w			|| '#@' ||
									dt_referencia_lote_w		|| '#@' ||
									ds_item_w			|| '#@' ||
									ds_classif_sca_w		|| '#@' ||
									ds_grupo_w,1,4000);
					
					begin
					ds_compl_historico_ww	:= obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w);
					exception
					when others then
						ds_compl_historico_ww	:= null;
					end;
					
					ds_compl_historico_w	:= substr(ds_compl_historico_ww,1,255);
				end if;
			end if;
			
			/* Lepinski - OS 456905 - Define the accounting grouper */

			if (nm_agrupador_w = 'NR_SEQ_LOTE') then
				nr_seq_agrupamento_w	:= nr_seq_lote_mensalidade_w;
			elsif (nm_agrupador_w = 'NR_SEQ_PAGADOR') then
				nr_seq_agrupamento_w	:= nr_seq_pagador_w;
			elsif (nm_agrupador_w = 'NR_TITULO') then
				nr_seq_agrupamento_w	:= nr_titulo_w;
			elsif (nm_agrupador_w = 'IE_TIPO_ITEM') then
				nr_seq_agrupamento_w	:= ie_tipo_item_w;
			elsif (ie_tipo_item_w	= '20') then
				nr_seq_agrupamento_w	:= nr_seq_tipo_lanc_w;
			elsif (ie_tipo_item_w = '3') then
				nr_seq_agrupamento_w	:= nr_seq_copartic_w;
			else
				nr_seq_agrupamento_w	:= null;
			end if;
			
			if (coalesce(nr_seq_agrupamento_w,0) = 0) then
				nr_seq_agrupamento_w	:= nr_titulo_w;
			end if;
			
			select	count(*)
			into STRICT	qt_ato_cooperado_w
			from	pls_mensalidade_seg_item
			where	nr_sequencia	= nr_seq_item_w
			and	((cd_conta_ato_cooperado IS NOT NULL AND cd_conta_ato_cooperado::text <> '') or (cd_conta_ato_auxiliar IS NOT NULL AND cd_conta_ato_auxiliar::text <> '') or (cd_conta_ato_nao_coop IS NOT NULL AND cd_conta_ato_nao_coop::text <> ''));
			
			begin
			select	CASE WHEN coalesce(cd_conta_rec::text, '') = '' THEN 'C' WHEN cd_conta_rec=cd_conta_deb THEN 'D' END
			into STRICT	ie_deb_rec_ato_cooperado_w
			from	pls_mensalidade_seg_item
			where	nr_sequencia	= nr_seq_item_w
			and	((cd_conta_ato_cooperado IS NOT NULL AND cd_conta_ato_cooperado::text <> '') or (cd_conta_ato_auxiliar IS NOT NULL AND cd_conta_ato_auxiliar::text <> '') or (cd_conta_ato_nao_coop IS NOT NULL AND cd_conta_ato_nao_coop::text <> ''));
			exception
			when others then
				null;
			end;
			
			if	(qt_ato_cooperado_w > 0 AND ie_debito_credito_w = ie_deb_rec_ato_cooperado_w) then
				/*			MAIN COOPERATIVE ACT			*/

				if (vl_ato_cooperado_princ_w <> 0) then
					select	max(ie_centro_custo)
					into STRICT	ie_centro_custo_w
					from	conta_contabil
					where	cd_conta_contabil	= cd_conta_ato_cooperado_w;
					
					if (coalesce(ie_centro_custo_w,'N') = 'N') then
						cd_centro_custo_w	:= null;
					else
						cd_centro_custo_w	:= cd_centro_custo_ww;
					end if;
					
					if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
						cd_centro_custo_w	:= cd_centro_custo_item_w;
					end if;
					
					if (cd_conta_ato_cooperado_w IS NOT NULL AND cd_conta_ato_cooperado_w::text <> '') then
						nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
						nm_atributo_w	:= 'VL_ATO_COOPERADO';
						
						insert into w_movimento_contabil(nr_lote_contabil,
							nr_sequencia,
							cd_conta_contabil,
							ie_debito_credito,
							cd_historico,
							dt_movimento,
							vl_movimento,
							cd_estabelecimento,
							cd_centro_custo,
							ds_compl_historico,
							nr_seq_agrupamento,
							nr_seq_info,
							nm_tabela,
							nm_atributo,
							nr_seq_tab_orig)
						values (nr_lote_contabil_p,
							nr_seq_w_movto_cont_w,
							cd_conta_ato_cooperado_w,
							ie_debito_credito_w,
							cd_historico_w,
							dt_referencia_mov_w,
							vl_ato_cooperado_princ_w,
							cd_estabelecimento_w,
							cd_centro_custo_w,
							ds_compl_historico_w,
							nr_seq_agrupamento_w,
							nr_seq_info_ctb_w,
							nm_tabela_w,
							nm_atributo_w,
							nr_seq_tab_orig_w);
					else
						select	nextval('w_pls_movimento_sem_conta_seq')
						into STRICT	nr_seq_movimento_sem_conta_w
						;
						
						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao,
							ie_tipo_ato_cooperado,
							ie_conta_antecipacao,
							cd_tipo_lote_contabil)
						values (nr_seq_movimento_sem_conta_w,
							nr_seq_item_w,
							ds_item_w,
							'M',
							clock_timestamp(),
							nm_usuario_p,
							vl_ato_cooperado_princ_w,
							dt_referencia_w,
							nr_lote_contabil_w,
							null,
							'C',
							CASE WHEN ie_tipo_valor_w='C' THEN wheb_mensagem_pck.get_texto(299459) WHEN ie_tipo_valor_w='P' THEN wheb_mensagem_pck.get_texto(299461)  ELSE wheb_mensagem_pck.get_texto(299462) END ,
							'1',
							'N',
							cd_tipo_lote_contabil_w);
					end if;
					
					cd_centro_custo_w	:= null;
				end if;
				
				/*			AUXILIARY COOPERATIVE ACT			*/

				if (vl_ato_cooperado_aux_w <> 0) then
					select	max(ie_centro_custo)
					into STRICT	ie_centro_custo_w
					from	conta_contabil
					where	cd_conta_contabil = cd_conta_ato_auxiliar_w;
					
					if (coalesce(ie_centro_custo_w,'N') = 'N') then
						cd_centro_custo_w	:= null;
					else
						cd_centro_custo_w	:= cd_centro_custo_ww;
					end if;
					
					if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
						cd_centro_custo_w	:= cd_centro_custo_item_w;
					end if;
					
					if (cd_conta_ato_auxiliar_w IS NOT NULL AND cd_conta_ato_auxiliar_w::text <> '') then
						nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
						nm_atributo_w	:= 'VL_ATO_AUXILIAR';
						
						insert into w_movimento_contabil(nr_lote_contabil,
							nr_sequencia,
							cd_conta_contabil,
							ie_debito_credito,
							cd_historico,
							dt_movimento,
							vl_movimento,
							cd_estabelecimento,
							cd_centro_custo,
							ds_compl_historico,
							nr_seq_agrupamento,
							nr_seq_info,
							nm_tabela,
							nm_atributo,
							nr_seq_tab_orig)
						values (nr_lote_contabil_p,
							nr_seq_w_movto_cont_w,
							cd_conta_ato_auxiliar_w,
							ie_debito_credito_w,
							cd_historico_w,
							dt_referencia_mov_w,
							vl_ato_cooperado_aux_w,
							cd_estabelecimento_w,
							cd_centro_custo_w,
							ds_compl_historico_w,
							nr_seq_agrupamento_w,
							nr_seq_info_ctb_w,
							nm_tabela_w,
							nm_atributo_w,
							nr_seq_tab_orig_w);
					else
						select	nextval('w_pls_movimento_sem_conta_seq')
						into STRICT	nr_seq_movimento_sem_conta_w
						;
						
						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao,
							ie_tipo_ato_cooperado,
							ie_conta_antecipacao,
							cd_tipo_lote_contabil)
						values (nr_seq_movimento_sem_conta_w,
							nr_seq_item_w,
							ds_item_w,
							'M',
							clock_timestamp(),
							nm_usuario_p,
							vl_ato_cooperado_aux_w,
							dt_referencia_w,
							nr_lote_contabil_w,
							null,
							'C',
							CASE WHEN ie_tipo_valor_w='C' THEN wheb_mensagem_pck.get_texto(299459) WHEN ie_tipo_valor_w='P' THEN wheb_mensagem_pck.get_texto(299461)  ELSE wheb_mensagem_pck.get_texto(299465) END ,
							'2',
							'N',
							cd_tipo_lote_contabil_w);
					end if;
					cd_centro_custo_w	:= null;
				end if;
				
				/*			NON COOPERATIVE ACT 			*/

				if (vl_ato_nao_cooperado_w <> 0) then
					select	max(ie_centro_custo)
					into STRICT	ie_centro_custo_w
					from	conta_contabil
					where	cd_conta_contabil = cd_conta_ato_nao_coop_w;
					
					if (coalesce(ie_centro_custo_w,'N') = 'N') then
						cd_centro_custo_w	:= null;
					else
						cd_centro_custo_w	:= cd_centro_custo_ww;
					end if;
					
					if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
						cd_centro_custo_w	:= cd_centro_custo_item_w;
					end if;
					
					if (cd_conta_ato_nao_coop_w IS NOT NULL AND cd_conta_ato_nao_coop_w::text <> '') then
						nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
						nm_atributo_w	:= 'VL_ATO_NAO_COOPERADO';
						
						insert into w_movimento_contabil(nr_lote_contabil,
							nr_sequencia,
							cd_conta_contabil,
							ie_debito_credito,
							cd_historico,
							dt_movimento,
							vl_movimento,
							cd_estabelecimento,
							cd_centro_custo,
							ds_compl_historico,
							nr_seq_agrupamento,
							nr_seq_info,
							nm_tabela,
							nm_atributo,
							nr_seq_tab_orig)
						values (nr_lote_contabil_p,
							nr_seq_w_movto_cont_w,
							cd_conta_ato_nao_coop_w,
							ie_debito_credito_w,
							cd_historico_w,
							dt_referencia_mov_w,
							vl_ato_nao_cooperado_w,
							cd_estabelecimento_w,
							cd_centro_custo_w,
							ds_compl_historico_w,
							nr_seq_agrupamento_w,
							nr_seq_info_ctb_w,
							nm_tabela_w,
							nm_atributo_w,
							nr_seq_tab_orig_w);
					else
						select	nextval('w_pls_movimento_sem_conta_seq')
						into STRICT	nr_seq_movimento_sem_conta_w
						;
						
						insert	into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao,
							ie_tipo_ato_cooperado,
							ie_conta_antecipacao,
							cd_tipo_lote_contabil)
						values (nr_seq_movimento_sem_conta_w,
							nr_seq_item_w,
							ds_item_w,
							'M',
							clock_timestamp(),
							nm_usuario_p,
							vl_ato_nao_cooperado_w,
							dt_referencia_w,
							nr_lote_contabil_w,
							null,
							'C',
							CASE WHEN ie_tipo_valor_w='C' THEN wheb_mensagem_pck.get_texto(299459) WHEN ie_tipo_valor_w='P' THEN wheb_mensagem_pck.get_texto(299461)  ELSE wheb_mensagem_pck.get_texto(299467) END ,
							'3',
							'N',
							cd_tipo_lote_contabil_w);
					end if;
					cd_centro_custo_w	:= null;
				end if;
			else
				if (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then
					select	max(ie_centro_custo)
					into STRICT	ie_centro_custo_w
					from	conta_contabil
					where	cd_conta_contabil = cd_conta_contabil_w;
					
					if (coalesce(ie_centro_custo_w,'N') = 'N') then
						cd_centro_custo_w	:= null;
					else
						cd_centro_custo_w	:= cd_centro_custo_ww;
					end if;
					
					if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
						cd_centro_custo_w	:= cd_centro_custo_item_w;
					end if;
					
					nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
					
					insert into w_movimento_contabil(nr_lote_contabil,
						nr_sequencia,
						cd_conta_contabil,
						ie_debito_credito,
						cd_historico,
						dt_movimento,
						vl_movimento,
						cd_estabelecimento,
						cd_centro_custo,
						ds_compl_historico,
						nr_seq_agrupamento,
						nr_seq_info,
						nm_tabela,
						nm_atributo,
						nr_seq_tab_orig)
					values (nr_lote_contabil_p,
						nr_seq_w_movto_cont_w,
						cd_conta_contabil_w,
						ie_debito_credito_w,
						cd_historico_w,
						dt_referencia_mov_w,
						vl_contabil_w,
						cd_estabelecimento_w,
						cd_centro_custo_w,
						ds_compl_historico_w,
						nr_seq_agrupamento_w,
						nr_seq_info_ctb_w,
						nm_tabela_w,
						nm_atributo_w,
						nr_seq_tab_orig_w);
						
					cd_centro_custo_w	:= null;
				else
					select	nextval('w_pls_movimento_sem_conta_seq')
					into STRICT	nr_seq_movimento_sem_conta_w
					;
					
					insert into w_pls_movimento_sem_conta(nr_sequencia,
						cd_item, ds_item,
						ie_tipo_item,
						dt_atualizacao,
						nm_usuario,
						vl_item,
						dt_referencia,
						nr_lote_contabil,
						ie_proc_mat_item,
						ie_deb_cred,
						ds_observacao,
						ie_tipo_ato_cooperado,
						ie_conta_antecipacao,
						cd_tipo_lote_contabil)
					values (nr_seq_movimento_sem_conta_w,
						nr_seq_item_w,
						ds_item_w,
						'M',
						clock_timestamp(),
						nm_usuario_p,
						vl_contabil_w,
						dt_referencia_w,
						nr_lote_contabil_w,
						null,
						ie_debito_credito_w,
						CASE WHEN ie_tipo_valor_w='C' THEN wheb_mensagem_pck.get_texto(299459)  ELSE '' END ,
						null,
						'N',
						cd_tipo_lote_contabil_w);
				end if;
			end if;
			end;
		end loop;
	end loop;
	
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	begin
	update	lote_contabil
	set	ie_situacao		= 'A',
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
	where	nr_lote_contabil 	= nr_lote_contabil_p;
	
	if (ie_exclusao_p = 'S') then
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);
	end if;
	
	commit;
	end;
else
	rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_cancel_mens ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

