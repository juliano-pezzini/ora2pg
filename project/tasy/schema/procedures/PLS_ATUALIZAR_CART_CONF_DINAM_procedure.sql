-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_cart_conf_dinam ( nr_seq_lote_sib_p bigint, ie_tipo_verificacao_p bigint, qt_retirar_incluir_dig_ini_p text, qt_retirar_incluir_dig_fim_p text, nm_usuario_p text) AS $body$
DECLARE


/*
ie_tipo_verificacao_p
1 - Retirar
2 - Incluir
*/
nr_seq_retorno_sib_w	bigint;
cd_usuario_plano_w	varchar(30);
cd_usuario_plano_ww	varchar(30);
cd_carteira_pesquisa_w	varchar(30);
nm_beneficario_w	varchar(70);

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_retorno_sib
	from	pls_retorno_sib		a,
		pls_lote_retorno_sib	b
	where	a.nr_seq_lote_sib	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_lote_sib_p
	order by nm_beneficiario;

TYPE 		fetch_array IS TABLE OF c01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w	Vetor;

BEGIN

CALL gravar_processo_longo('Atulizando cart√µes dinamicamentes' ,'PLS_ATUALIZAR_CART_CONF_DINAM',0);

open c01;
loop
FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
	Vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on C01 */
END LOOP;
CLOSE C01;

for i in 1..Vetor_c01_w.COUNT loop
	s_array := Vetor_c01_w(i);
	for z in 1..s_array.COUNT loop
	nr_seq_retorno_sib_w	:= s_array[z].nr_seq_retorno_sib;

	begin

	select	cd_usuario_plano,
		cd_usuario_plano,
		nm_beneficiario
	into STRICT	cd_usuario_plano_w,
		cd_usuario_plano_ww,
		nm_beneficario_w
	from	pls_retorno_sib
	where	nr_sequencia	= nr_seq_retorno_sib_w;

	CALL gravar_processo_longo(nm_beneficario_w || ' - ' || cd_usuario_plano_w,'PLS_ATUALIZAR_CART_CONF_DINAM',-1);

	if (ie_tipo_verificacao_p	= 1) then
		if (qt_retirar_incluir_dig_ini_p <> '0') and (qt_retirar_incluir_dig_ini_p IS NOT NULL AND qt_retirar_incluir_dig_ini_p::text <> '') then
			cd_carteira_pesquisa_w	:= substr(cd_usuario_plano_w,qt_retirar_incluir_dig_ini_p+1,length(cd_usuario_plano_w));
			cd_usuario_plano_ww	:= cd_carteira_pesquisa_w;
		end if;
		if (qt_retirar_incluir_dig_fim_p <> '0') and (qt_retirar_incluir_dig_fim_p IS NOT NULL AND qt_retirar_incluir_dig_fim_p::text <> '') then
			cd_carteira_pesquisa_w	:= substr(cd_usuario_plano_ww,1,length(cd_usuario_plano_ww) - qt_retirar_incluir_dig_fim_p);
		end if;
	elsif (ie_tipo_verificacao_p	= 2) then
		if (qt_retirar_incluir_dig_ini_p IS NOT NULL AND qt_retirar_incluir_dig_ini_p::text <> '') then
			cd_carteira_pesquisa_w	:= qt_retirar_incluir_dig_ini_p||cd_usuario_plano_w;
			cd_usuario_plano_ww	:= cd_carteira_pesquisa_w;
		end if;
		if (qt_retirar_incluir_dig_fim_p IS NOT NULL AND qt_retirar_incluir_dig_fim_p::text <> '') then
			cd_carteira_pesquisa_w	:= cd_usuario_plano_ww || qt_retirar_incluir_dig_fim_p;
		end if;
	end if;

	update	pls_retorno_sib
	set	cd_carteira_pesquisa	= cd_carteira_pesquisa_w
	where	nr_sequencia		= nr_seq_retorno_sib_w;

	end;
	end loop;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_cart_conf_dinam ( nr_seq_lote_sib_p bigint, ie_tipo_verificacao_p bigint, qt_retirar_incluir_dig_ini_p text, qt_retirar_incluir_dig_fim_p text, nm_usuario_p text) FROM PUBLIC;

