-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_insere_diagnostico ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vListaDiagnostico strRecTypeFormOft) AS $body$
DECLARE


nr_sequencia_w					oft_diagnostico.nr_sequencia%type;
dt_exame_w						oft_diagnostico.dt_registro%type;
nr_seq_diag_w					oft_diagnostico.nr_seq_diag%type;	
cd_doenca_cid_w				oft_diagnostico.cd_doenca_cid%type;
ds_diagnostico_w				oft_diagnostico.ds_diagnostico%type;
ds_observacao_w				oft_diagnostico.ds_observacao%type;
ie_olho_w						oft_diagnostico.ie_olho%type;
nr_seq_grau_parentesco_w	oft_diagnostico.nr_seq_grau_parentesco%type;
ie_paciente_w					oft_diagnostico.ie_paciente%type;
dt_inicio_w						oft_diagnostico.dt_inicio%type;
dt_fim_w							oft_diagnostico.dt_fim%type;
cd_profissional_w				oft_diagnostico.cd_profissional%type;	
nr_atendimento_w				atendimento_paciente.nr_atendimento%type;
nr_seq_interno_w				diagnostico_doenca.nr_seq_interno%type;
dt_diagnostico_w				diagnostico_doenca.dt_diagnostico%type;
nm_usuario_w					usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
cd_perfil_w						perfil.cd_perfil%type 	:= wheb_usuario_pck.get_cd_perfil;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type 	:= wheb_usuario_pck.get_cd_estabelecimento;
ie_grava_diagnostico_w		varchar(1);
ie_registrado_w				varchar(1) := 'N';
ds_erro_w						varchar(4000);
nr_seq_campo_formulario_w		oft_diagnostico.nr_seq_campo_formulario%type;

BEGIN
begin

ie_grava_diagnostico_w := Obter_Param_Usuario(3010, 10, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_grava_diagnostico_w);

if (coalesce(nr_seq_consulta_p,0) > 0) and (vListaDiagnostico.count > 0) then
	nr_seq_campo_formulario_w  := vListaDiagnostico[vListaDiagnostico.last].nr_aux_1;
	for i in 1..vListaDiagnostico.count loop
		begin
		if (vListaDiagnostico[i].nr_seq_visao = 86093) then
			ie_paciente_w := 'S';
		elsif (vListaDiagnostico[i].nr_seq_visao = 86094) then
			ie_paciente_w := 'N';
		end if;	
		
		if (vListaDiagnostico[i](.ds_valor IS NOT NULL AND .ds_valor::text <> '')) or (vListaDiagnostico[i](.nr_valor IS NOT NULL AND .nr_valor::text <> '')) then
			case upper(vListaDiagnostico[i].nm_campo)
				when 'CD_PROFISSIONAL' then
					cd_profissional_w				:= vListaDiagnostico[i].ds_valor;
				when 'DT_REGISTRO' then
					dt_exame_w 						:= pkg_date_utils.get_DateTime(vListaDiagnostico[i].ds_valor);
				when 'NR_SEQ_DIAG' then
					nr_seq_diag_w 					:= vListaDiagnostico[i].nr_valor;
					ie_registrado_w				:= 'S';
				when 'CD_DOENCA_CID' then
					cd_doenca_cid_w 				:= vListaDiagnostico[i].ds_valor;
					ie_registrado_w				:= 'S';
				when 'DS_DIAGNOSTICO' then
					ds_diagnostico_w 				:= vListaDiagnostico[i].ds_valor;
					ie_registrado_w				:= 'S';
				when 'DS_OBSERVACAO' then
					ds_observacao_w 				:= vListaDiagnostico[i].ds_valor;
					ie_registrado_w				:= 'S';
				when 'IE_OLHO' then
					ie_olho_w 						:= vListaDiagnostico[i].ds_valor;
				when 'NR_SEQ_GRAU_PARENTESCO' then
					nr_seq_grau_parentesco_w 	:= vListaDiagnostico[i].nr_valor;
					ie_registrado_w				:= 'S';
				when 'DT_INICIO' then
					dt_inicio_w 					:= pkg_date_utils.get_DateTime(vListaDiagnostico[i].ds_valor);
					ie_registrado_w				:= 'S';
				when 'DT_FIM' then
					dt_fim_w 						:= pkg_date_utils.get_DateTime(vListaDiagnostico[i].ds_valor);
					ie_registrado_w				:= 'S';
				else
					null;	
			end case;	
		end if;	
	end;
	end loop;
	
	select	max(nr_sequencia)
	into STRICT		nr_sequencia_w
	from		oft_diagnostico
	where		nr_seq_consulta_form                                     = nr_seq_consulta_form_p
	and		nr_seq_consulta		                                    = nr_seq_consulta_p
	and		coalesce(dt_liberacao::text, '') = ''
	and		nm_usuario				                                     = nm_usuario_w
	and		ie_paciente				                                     = ie_paciente_w
	and		coalesce(nr_seq_campo_formulario,1)	= nr_seq_campo_formulario_w;
	
	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		update	oft_diagnostico
		set		dt_atualizacao				=	clock_timestamp(),
					nm_usuario					=	nm_usuario_w, 
					cd_profissional			= coalesce(cd_profissional_w,cd_profissional),	
					dt_registro					=	coalesce(dt_exame_w,clock_timestamp()),
					nr_seq_diag					=	nr_seq_diag_w, 
					cd_doenca_cid				=	cd_doenca_cid_w, 
					ds_diagnostico				=	ds_diagnostico_w, 
					ds_observacao				=	ds_observacao_w, 
					ie_olho						=	coalesce(ie_olho_w,ie_olho), 
					nr_seq_grau_parentesco	=	nr_seq_grau_parentesco_w, 
					dt_inicio					=	dt_inicio_w, 
					dt_fim						=	dt_fim_w,
					nr_seq_campo_formulario = coalesce(nr_seq_campo_formulario,nr_seq_campo_formulario_w)
		where		nr_sequencia				=	nr_sequencia_w
		and		coalesce(nr_seq_campo_formulario, 1)		=	nr_seq_campo_formulario_w;
		CALL wheb_usuario_pck.set_ie_commit('S');
	else	
		if (ie_registrado_w = 'S') then
			CALL wheb_usuario_pck.set_ie_commit('S');
			select	nextval('oft_diagnostico_seq')
			into STRICT		nr_sequencia_w	
			;

			insert	into oft_diagnostico(	nr_sequencia,
														dt_atualizacao, 
														nm_usuario, 
														dt_atualizacao_nrec, 
														nm_usuario_nrec, 
														cd_profissional, 
														dt_registro,
														nr_seq_consulta, 
														ie_situacao,
														nr_seq_diag, 
														cd_doenca_cid, 
														ds_diagnostico, 
														ds_observacao, 
														ie_olho, 
														nr_seq_grau_parentesco, 
														ie_paciente, 
														dt_inicio, 
														dt_fim,
														nr_seq_consulta_form,
														nr_seq_campo_formulario
														)
			values (	nr_sequencia_w, 
														clock_timestamp(), 
														nm_usuario_w, 
														clock_timestamp(), 
														nm_usuario_w, 
														coalesce(cd_profissional_w,obter_pf_usuario(nm_usuario_w,'C')), 
														coalesce(dt_exame_w,clock_timestamp()), 
														nr_seq_consulta_p,
														'A',
														nr_seq_diag_w,
														cd_doenca_cid_w,
														ds_diagnostico_w,
														ds_observacao_w,
														coalesce(ie_olho_w,'A'),
														nr_seq_grau_parentesco_w,
														coalesce(ie_paciente_w,'S'),
														dt_inicio_w,
														dt_fim_w,
														nr_seq_consulta_form_p,
														nr_seq_campo_formulario_w);
		end if;												
	end if;											
	if (ie_paciente_w = 'S') and (ie_grava_diagnostico_w = 'S') and (ie_registrado_w = 'S')	then
		select	max(nr_atendimento)
		into STRICT		nr_atendimento_w	
		from		oft_consulta
		where		nr_sequencia = nr_seq_consulta_p;
		dt_diagnostico_w := clock_timestamp();
		CALL gerar_diagnostico_doenca(nr_atendimento_w,cd_doenca_cid_w,dt_diagnostico_w,obter_pf_usuario(nm_usuario_w,'C'),nm_usuario_w,nr_seq_consulta_form_p);
	end if;	
end if;	

exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);
	update	OFT_CONSULTA_FORMULARIO
	set		ds_stack			=	substr(dbms_utility.format_call_stack||ds_erro_w,1,4000)
	where		nr_sequencia	= 	nr_seq_consulta_form_p;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_insere_diagnostico ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vListaDiagnostico strRecTypeFormOft) FROM PUBLIC;

