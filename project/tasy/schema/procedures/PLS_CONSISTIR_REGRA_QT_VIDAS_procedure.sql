-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_regra_qt_vidas ( nr_seq_proposta_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_minima_w		pls_regra_vidas_proposta.qt_minima_vidas%type;
qt_maxima_w		pls_regra_vidas_proposta.qt_maxima_vidas%type;
ie_tipo_proposta_w	pls_proposta_adesao.ie_tipo_proposta%type;
qt_benef_w		bigint;
qt_inconsistencia_w	bigint;

--Regras cadastradas
c01 CURSOR(	ie_tipo_proposta_pc	pls_proposta_adesao.ie_tipo_proposta%type ) FOR
	SELECT	coalesce(qt_minima_vidas,0)		qt_minima,
		coalesce(qt_maxima_vidas,999999999)	qt_maxima,
		nr_seq_tabela			nr_seq_tabela
	from	pls_regra_vidas_proposta
	where	trunc(clock_timestamp(),'dd') between dt_inicio_vigencia_ref and dt_fim_vigencia_ref
	and	coalesce(ie_tipo_proposta, ie_tipo_proposta_pc) = ie_tipo_proposta_pc;
	
BEGIN
select	count(*)
into STRICT	qt_inconsistencia_w
from 	pls_inconsistencia_inc_seg
where 	cd_inconsistencia = 59
and 	ie_situacao = 'A';

if (qt_inconsistencia_w > 0) then
	--Seleciona o tipo da proposta
	select	max(ie_tipo_proposta)
	into STRICT	ie_tipo_proposta_w
	from	pls_proposta_adesao
	where	nr_sequencia	= nr_seq_proposta_p;
	
	-- Cursor com as regras cadastradas
	for	r_C01_w in C01( ie_tipo_proposta_w ) loop
		qt_benef_w 	:= 0;
		--Verifica se a regra restringe por tabela de preco as quantidades de vidas	
		if (coalesce(r_C01_w.nr_seq_tabela,0) > 0) then
			--Considera apenas os beneficiarios da tabela de preco definida na regra			
			select	count(nr_sequencia) qt_benef
			into STRICT	qt_benef_w
			from	pls_proposta_beneficiario
			where	nr_seq_proposta	= nr_seq_proposta_p
			and	nr_seq_tabela	= r_C01_w.nr_seq_tabela;	
			
			if (qt_benef_w > 0) then
				if	((qt_benef_w < r_C01_w.qt_minima) or (qt_benef_w > r_C01_w.qt_maxima)) then
					CALL pls_gravar_inconsist_proposta(nr_seq_proposta_p, null, 59, null,nm_usuario_p);
				end if;		
			end if;
			
		else
			--Considera todos os beneficiarios da proposta
			select	count(nr_sequencia) qt_benef
			into STRICT	qt_benef_w
			from	pls_proposta_beneficiario
			where	nr_seq_proposta	= nr_seq_proposta_p;
			
			if	((qt_benef_w < r_C01_w.qt_minima) or (qt_benef_w > r_C01_w.qt_maxima)) then
				CALL pls_gravar_inconsist_proposta(nr_seq_proposta_p, null, 59, null, nm_usuario_p);
			end if;
		end if;	
	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_regra_qt_vidas ( nr_seq_proposta_p bigint, nm_usuario_p text) FROM PUBLIC;

