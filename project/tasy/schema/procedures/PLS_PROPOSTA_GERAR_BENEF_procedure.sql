-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_proposta_gerar_benef ( nr_seq_proposta_p bigint, nr_seq_plano_p bigint, nr_seq_contrato_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_pessoa_proposta_w	bigint;
cd_beneficiario_w		varchar(10);
nr_seq_titular_w		bigint;
nr_seq_titular_contrato_w	bigint;
nr_seq_pagador_benef_w		bigint;
nr_seq_plano_benef_w		bigint;
nr_seq_tabela_origem_benef_w	bigint;
nr_seq_parentesco_w		bigint;
nr_seq_portabilidade_w		bigint;
dt_admissao_w			timestamp;
nr_seq_vinculo_estip_w		bigint;
cd_matricula_est_w		varchar(30);
cd_cbo_w			varchar(6);
nr_seq_subestipulante_w		bigint;
qt_registro_w			integer	:= 0;
cd_titular_w			varchar(10);
cd_pagador_w			varchar(10);
cd_cgc_pagador_w		varchar(14);
ie_tipo_operacao_w		varchar(3);
nr_seq_segurado_w		bigint;
nr_seq_tabela_benef_w		bigint;
dt_inicio_proposta_w		timestamp;
nr_seq_vendedor_canal_w		bigint;
nr_seq_vendedor_pf_w		bigint;
nr_seq_seg_contrato_w		bigint;
nr_seq_inclusao_benef_w		bigint;
ie_nascido_plano_w		varchar(1);
nr_seq_vinculo_bonific_w	bigint;
nr_seq_vinculo_sca_w		bigint;
dt_contratacao_w		timestamp;
nr_contrato_principal_w		bigint;
nr_Seq_motivo_inclusao_w	integer;
ie_taxa_inscricao_w		varchar(3);
cd_estabelecimento_w		bigint;
nr_seq_bonificacao_w		bigint;
nr_seq_indicacao_w		bigint;
nr_seq_segurado_ind_w		bigint;
nr_seq_agravo_proposta_w	bigint;
nr_seq_segurado_agravo_w	bigint;
dt_solicitacao_inclusao_w	timestamp;
ie_permite_tabela_dif_w		varchar(1);
nr_seq_vinculo_sca_novo_w	bigint;
nr_seq_tabela_sca_w		bigint;
nr_seq_plano_sca_w		bigint;
dt_reajuste_sca_w		timestamp;
ie_geracao_valores_w		varchar(10);
dt_contrato_w			timestamp;
ie_lancamento_mensalidade_w	varchar(2);
nr_seq_congenere_w		bigint;
ie_tipo_repasse_w		varchar(2);
nr_seq_tipo_comercial_w		bigint;
nr_seq_vend_canal_aux_w		bigint;
ie_pagador_contrato_princ_w	varchar(2);
nr_seq_vendedor_aux_w		bigint;
cd_matricula_familia_w		bigint;
qt_analises_realizadas_w	bigint;
qt_registros_w			bigint;
ie_tipo_pessoa_proposta_w	varchar(10);
qt_dias_validade_analise_w	bigint;
ie_preco_w			varchar(2);
cd_sistema_anterior_w		varchar(30);
cd_carteira_ant_w		varchar(30);
nr_seq_contrato_w		bigint;
nr_seq_congenere_cobr_w		bigint;
nr_contrato_w			bigint;
qt_congenere_oper_w		bigint;
nr_seq_congenere_ordem_w	bigint;
nr_seq_solicitacao_w		bigint;
ie_divisao_repasse_w		varchar(2);
nr_seq_agente_motivador_w	bigint;
nr_seq_origem_agente_w		bigint;
nr_seq_contrato_pagador_w	bigint;
nr_seq_pagador_benef_incl_w	bigint;
nr_seq_faixa_salarial_w		pls_faixa_salarial.nr_sequencia%type;
dt_inclusao_operadora_w		pls_segurado.dt_inclusao_operadora%type;
qt_dias_rescisao_mig_w		pls_parametros.qt_dias_rescisao_mig%type;
nr_seq_benef_gerado_w		pls_segurado.nr_sequencia%type;
ds_anexo_w			pls_proposta_benef_anexo.ds_anexo%type;
nr_seq_localizacao_benef_w	pls_inclusao_beneficiario.nr_seq_localizacao_benef%type;
nr_seq_tabela_w			pls_proposta_beneficiario.nr_seq_tabela%type;
ie_tipo_proposta_w		pls_proposta_adesao.ie_tipo_proposta%type;
ie_tipo_parentesco_w		pls_proposta_beneficiario.ie_tipo_parentesco%type;
nr_seq_indicacao_venda_w	pls_indicacao_venda.nr_sequencia%type;
nr_seq_tipo_documento_w		pls_proposta_benef_anexo.nr_seq_tipo_documento%type;
ie_apresenta_portal_w		pls_segurado_doc_arq.ie_apresenta_portal%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_beneficiario,
		a.nr_seq_titular,
		a.nr_seq_titular_contrato,
		a.nr_seq_pagador,
		a.nr_seq_plano,
		a.nr_seq_tabela,
		a.nr_seq_parentesco,
		(	SELECT	max(x.nr_sequencia)
			from	pls_portab_pessoa x
			where	x.nr_sequencia = a.nr_seq_portabilidade
			and	x.ie_status = 'A') nr_seq_portabilidade,
		a.dt_admissao,
		a.nr_seq_vinculo_estip,
		a.cd_matricula_est,
		a.cd_cbo,
		a.nr_seq_subestipulante,
		a.nr_seq_inclusao_benef,
		a.ie_nascido_plano,
		a.dt_contratacao,
		a.nr_seq_motivo_inclusao,
		coalesce(a.ie_taxa_inscricao,'S'),
		a.dt_contratacao,
		a.cd_matricula_familia,
		a.nr_seq_tipo_comercial,
		a.nr_seq_faixa_salarial,
		a.ie_tipo_parentesco
	from	pls_proposta_beneficiario a
	where	a.nr_seq_proposta	= nr_seq_proposta_p
	and	a.nr_seq_plano	= nr_seq_plano_p
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	coalesce(a.nr_seq_beneficiario::text, '') = '' 
	and	coalesce(a.nr_seq_benef_gerado::text, '') = ''
	order by a.nr_seq_titular desc;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_bonificacao_vinculo
	where	nr_seq_segurado_prop	= nr_seq_pessoa_proposta_w;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_plano
	from	pls_sca_vinculo
	where	nr_seq_benef_proposta	= nr_seq_pessoa_proposta_w;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_ind_bonific
	where	nr_seq_segurado	= nr_seq_pessoa_proposta_w;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_benef_agravo
	where	nr_seq_proposta_benef = nr_seq_pessoa_proposta_w;

C06 CURSOR FOR
	SELECT	max(nr_sequencia),
		nr_seq_vendedor_canal
	from (	SELECT	nr_sequencia,
			nr_seq_vendedor_canal
		from	pls_benef_prop_canal_compl
		where	nr_seq_benef_proposta = nr_seq_pessoa_proposta_w
		
union all

		select	nr_sequencia,
			nr_seq_vendedor_canal
		from	pls_benef_prop_canal_compl
		where	nr_seq_proposta = nr_seq_proposta_p
		and	coalesce(nr_seq_benef_proposta::text, '') = '') alias2
	group by nr_seq_vendedor_canal;

C07 CURSOR FOR
	SELECT	nr_seq_congenere_cobr,
		nr_seq_congenere,
		ie_tipo_repasse
	from	(	SELECT	nr_seq_congenere_cobr,
				coalesce(nr_seq_congenere,0) nr_seq_congenere,
				ie_titularidade,
				ie_tipo_parentesco,
				ie_tipo_repasse,
				ie_tipo_intercambio
			from	pls_contrato_regra_repasse
			where	nr_seq_contrato	= nr_seq_contrato_w
			and	((nr_seq_congenere = nr_seq_congenere_w) or (coalesce(nr_seq_congenere::text, '') = ''))
			and	pls_obter_se_depend_repasse(nr_sequencia,nr_seq_segurado_w) = 'S'
			and	pls_restring_loc_atend_repasee(nr_sequencia,nr_seq_congenere_w,cd_estabelecimento_w) = 'S'
			
union

			select	nr_seq_congenere_cobr,
				coalesce(nr_seq_congenere,0),
				ie_titularidade,
				ie_tipo_parentesco,
				ie_tipo_repasse,
				ie_tipo_intercambio
			from	pls_contrato_regra_repasse
			where	coalesce(nr_seq_contrato::text, '') = ''
			and	coalesce(nr_seq_intercambio::text, '') = ''
			and	cd_estabelecimento	= cd_estabelecimento_w
			and	((nr_seq_congenere = nr_seq_congenere_w) or (coalesce(nr_seq_congenere::text, '') = ''))
			and	pls_obter_se_depend_repasse(nr_sequencia,nr_seq_segurado_w) = 'S'
			and	not exists (	select	1
						from	pls_contrato_regra_repasse
						where	nr_seq_contrato	= nr_seq_contrato_w
						and	ie_tipo_repasse	= ie_tipo_repasse_w)) alias16
	order by nr_seq_congenere,
		CASE WHEN coalesce(ie_titularidade,'A')='A' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(ie_tipo_parentesco::text, '') = '' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(ie_tipo_intercambio,'A')='A' THEN -1  ELSE 1 END;

C08 CURSOR FOR
	SELECT	nr_seq_benef_gerado,
		ie_tipo_parentesco,
		nr_seq_parentesco
	from	pls_proposta_beneficiario
	where	nr_seq_proposta	= nr_seq_proposta_p
	and	nr_seq_titular	= nr_seq_pessoa_proposta_w
	and	(nr_seq_benef_gerado IS NOT NULL AND nr_seq_benef_gerado::text <> '')
	and	coalesce(dt_cancelamento::text, '') = '';

C09 CURSOR FOR
	SELECT	ds_anexo,
		nr_seq_tipo_documento,
		ie_apresenta_portal
	from	pls_proposta_benef_anexo
	where	nr_seq_beneficiario = nr_seq_pessoa_proposta_w;

C10 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_indicacao_venda a
	where	a.nr_seq_segurado_prop = nr_seq_pessoa_proposta_w
	
union all

	SELECT	a.nr_sequencia
	from	pls_indicacao_venda a
	where	a.nr_seq_proposta = nr_seq_proposta_p
	and	not exists (	select	1
				from	pls_indicacao_venda x
				where	x.nr_seq_segurado_prop = nr_seq_pessoa_proposta_w);
				
C11 CURSOR FOR
	SELECT	ds_anexo,
		nr_seq_tipo_documentacao
	from	pls_portab_anexo
	where	nr_seq_portabilidade = nr_seq_portabilidade_w
	order by ds_anexo;

BEGIN

select	CASE WHEN coalesce(cd_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END ,
	nr_seq_vendedor_canal,
	nr_seq_vendedor_pf,
	dt_inicio_proposta,
	cd_estabelecimento,
	coalesce(ie_permite_tabela_dif,'N'),
	nr_seq_contrato,
	nr_seq_agente_motivador,
	nr_seq_origem_agente,
	ie_tipo_proposta
into STRICT	ie_tipo_pessoa_proposta_w,
	nr_seq_vendedor_canal_w,
	nr_seq_vendedor_pf_w,
	dt_inicio_proposta_w,
	cd_estabelecimento_w,
	ie_permite_tabela_dif_w,
	nr_contrato_w,
	nr_seq_agente_motivador_w,
	nr_seq_origem_agente_w,
	ie_tipo_proposta_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

if (nr_contrato_w IS NOT NULL AND nr_contrato_w::text <> '') then
	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_contrato_w
	from	pls_contrato
	where	nr_contrato	= nr_contrato_w;
	exception
	when others then
		nr_seq_contrato_w	:= null;
	end;
end if;

select	max(ie_pagador_contrato_princ),
	max(qt_dias_rescisao_mig)
into STRICT	ie_pagador_contrato_princ_w,
	qt_dias_rescisao_mig_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;

ie_pagador_contrato_princ_w	:= coalesce(ie_pagador_contrato_princ_w,'S');

begin
select	c.nr_sequencia,
	ie_divisao_repasse
into STRICT	nr_seq_solicitacao_w,
	ie_divisao_repasse_w
from	pls_solicitacao_comercial	c,
	pls_comercial_cliente		b,
	pls_proposta_adesao		a
where	a.nr_seq_cliente = b.nr_sequencia
and	b.nr_seq_solicitacao = c.nr_sequencia
and	a.nr_sequencia = nr_seq_proposta_p;
exception
when others then
	nr_seq_solicitacao_w	:= null;
	ie_divisao_repasse_w	:= 'N';
end;

open C01;
loop
fetch C01 into
	nr_seq_pessoa_proposta_w,
	cd_beneficiario_w,
	nr_seq_titular_w,
	nr_seq_titular_contrato_w,
	nr_seq_pagador_benef_w,
	nr_seq_plano_benef_w,
	nr_seq_tabela_w,
	nr_seq_parentesco_w,
	nr_seq_portabilidade_w,
	dt_admissao_w,	
	nr_seq_vinculo_estip_w,	
	cd_matricula_est_w,
	cd_cbo_w,
	nr_seq_subestipulante_w,
	nr_seq_inclusao_benef_w,
	ie_nascido_plano_w,
	dt_contratacao_w,
	nr_seq_motivo_inclusao_w,
	ie_taxa_inscricao_w,
	dt_solicitacao_inclusao_w,
	cd_matricula_familia_w,
	nr_seq_tipo_comercial_w,
	nr_seq_faixa_salarial_w,
	ie_tipo_parentesco_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_segurado
	where	nr_seq_contrato		= nr_seq_contrato_p
	and	cd_pessoa_fisica	= cd_beneficiario_w
	and	coalesce(dt_rescisao::text, '') = ''
	and	((nr_seq_subestipulante	= nr_seq_subestipulante_w) or (coalesce(nr_seq_subestipulante::text, '') = ''));
	
	if (qt_registro_w	= 0) then
		cd_titular_w		:= '';
		cd_pagador_w		:= '';
		cd_cgc_pagador_w	:= '';
		nr_seq_contrato_pagador_w := null;
		dt_inclusao_operadora_w	:= null;		
		
		if (nr_seq_pagador_benef_w IS NOT NULL AND nr_seq_pagador_benef_w::text <> '') then
			select	cd_cgc_pagador,
				cd_pagador,
				nr_seq_contrato_pagador
			into STRICT	cd_cgc_pagador_w,
				cd_pagador_w,
				nr_seq_contrato_pagador_w
			from	pls_proposta_pagador
			where	nr_sequencia	= nr_seq_pagador_benef_w;
		end if;
		
		select	max(nr_contrato_principal)
		into STRICT	nr_contrato_principal_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_p;
		
		select	ie_geracao_valores,
			dt_contrato
		into STRICT	ie_geracao_valores_w,
			dt_contrato_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_p;
		
		nr_seq_pagador_benef_w	:= null;
		
		if (nr_seq_contrato_pagador_w IS NOT NULL AND nr_seq_contrato_pagador_w::text <> '') then
			nr_seq_pagador_benef_w := nr_seq_contrato_pagador_w;
		else
			if (ie_pagador_contrato_princ_w = 'S') then
				if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') then				
					select	max(b.nr_sequencia)
					into STRICT	nr_seq_pagador_benef_w
					from	pls_contrato_pagador	b,
						pls_contrato		a
					where	a.nr_sequencia		= b.nr_seq_contrato
					and	((cd_pessoa_fisica = cd_pagador_w) or (cd_cgc = cd_cgc_pagador_w))
					and	a.nr_sequencia		= nr_contrato_principal_w
					and	b.ie_tipo_pagador = 'P';
					
					if (coalesce(nr_seq_pagador_benef_w::text, '') = '') then
						select	max(b.nr_sequencia)
						into STRICT	nr_seq_pagador_benef_w
						from	pls_contrato_pagador	b,
							pls_contrato		a
						where	a.nr_sequencia		= b.nr_seq_contrato
						and	((cd_pessoa_fisica = cd_pagador_w) or (cd_cgc = cd_cgc_pagador_w))
						and	a.nr_sequencia		= nr_contrato_principal_w
						and	b.ie_tipo_pagador = 'S';
					end if;
				end if;
			end if;
			
			if (coalesce(nr_seq_pagador_benef_w::text, '') = '') then
				select	max(b.nr_sequencia)
				into STRICT	nr_seq_pagador_benef_w
				from	pls_contrato_pagador	b,
					pls_contrato		a
				where	a.nr_sequencia		= b.nr_seq_contrato
				and	((cd_pessoa_fisica = cd_pagador_w) or (cd_cgc = cd_cgc_pagador_w))
				and	a.nr_sequencia		= nr_seq_contrato_p
				and	b.ie_tipo_pagador = 'P';
				
				if (coalesce(nr_seq_pagador_benef_w::text, '') = '') then
					select	max(b.nr_sequencia)
					into STRICT	nr_seq_pagador_benef_w
					from	pls_contrato_pagador	b,
						pls_contrato		a
					where	a.nr_sequencia		= b.nr_seq_contrato
					and	((cd_pessoa_fisica = cd_pagador_w) or (cd_cgc = cd_cgc_pagador_w))
					and	a.nr_sequencia		= nr_seq_contrato_p
					and	b.ie_tipo_pagador = 'S';
				end if;
			end if;
		end if;		
	
		if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
			nr_seq_titular_w	:= nr_seq_titular_contrato_w;
		elsif (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
			select	cd_beneficiario,
				nr_seq_benef_gerado
			into STRICT	cd_titular_w,
				nr_seq_benef_gerado_w
			from	pls_proposta_beneficiario
			where	nr_sequencia	= nr_seq_titular_w;
			
			if (nr_seq_benef_gerado_w IS NOT NULL AND nr_seq_benef_gerado_w::text <> '') then
				nr_seq_titular_w	:= nr_seq_benef_gerado_w;
			else
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_titular_w
				from	pls_segurado	a
				where	a.cd_pessoa_fisica	= cd_titular_w
				and	a.nr_proposta_adesao	= nr_seq_proposta_p
				and	coalesce(a.nr_seq_titular::text, '') = '';
			end if;
		end if;
		
		if (ie_tipo_proposta_w = 2) then
			nr_seq_tabela_benef_w := nr_seq_tabela_w;
		else		
			if (coalesce(nr_seq_plano_benef_w,0) > 0) and (ie_permite_tabela_dif_w = 'N') then
				select	max(nr_seq_tabela)
				into STRICT	nr_seq_tabela_benef_w
				from	pls_contrato_plano
				where	nr_seq_plano	= nr_seq_plano_benef_w
				and	nr_seq_contrato	= nr_seq_contrato_p
				and	ie_situacao	= 'A';
				
				if (coalesce(nr_seq_tabela_benef_w::text, '') = '') then
					select	max(nr_seq_tabela)
					into STRICT	nr_seq_tabela_benef_w
					from	pls_contrato_plano
					where	nr_seq_plano	= nr_seq_plano_benef_w
					and	nr_seq_contrato	= nr_seq_contrato_p;
				end if;
			elsif (coalesce(nr_seq_plano_benef_w,0) > 0) and (ie_permite_tabela_dif_w = 'S') then
				select	nr_seq_tabela
				into STRICT	nr_seq_tabela_benef_w
				from	pls_proposta_beneficiario
				where	nr_sequencia	= nr_seq_pessoa_proposta_w;
			end if;
		end if;
		
		if (coalesce(dt_contratacao_w::text, '') = '') then
			dt_contratacao_w	:= dt_inicio_proposta_w;
		end if;
		
		select	count(1)
		into STRICT	qt_analises_realizadas_w
		from	pls_analise_adesao
		where	nr_seq_pessoa_proposta	= nr_seq_pessoa_proposta_w;
		
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_regra_analise_proposta
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	((ie_tipo_contratacao	= ie_tipo_pessoa_proposta_w) or (ie_tipo_contratacao = 'A'))
		and	ie_situacao		= 'A';
		
		if (qt_analises_realizadas_w > 0) and (qt_registros_w > 0) then
			select	max(qt_dias_validade_analise)
			into STRICT	qt_dias_validade_analise_w
			from	pls_regra_analise_proposta
			where	cd_estabelecimento	= cd_estabelecimento_w
			and	((ie_tipo_contratacao	= ie_tipo_pessoa_proposta_w) or (ie_tipo_contratacao = 'A'))
			and	ie_situacao		= 'A';
			
			dt_contratacao_w	:= dt_contratacao_w + coalesce(qt_dias_validade_analise_w,0);
		end if;
		
		cd_sistema_anterior_w		:= '';
		cd_carteira_ant_w		:= '';
		nr_seq_pagador_benef_incl_w	:= null;
		
		if (nr_seq_inclusao_benef_w IS NOT NULL AND nr_seq_inclusao_benef_w::text <> '') then
			select	max(cd_sistema_anterior),
				max(cd_carteira_ant),
				max(nr_seq_pagador),
				max(nr_seq_localizacao_benef),
				max(dt_inclusao_operadora)
			into STRICT	cd_sistema_anterior_w,
				cd_carteira_ant_w,
				nr_seq_pagador_benef_incl_w,
				nr_seq_localizacao_benef_w,
				dt_inclusao_operadora_w
			from	pls_inclusao_beneficiario
			where	nr_sequencia	= nr_seq_inclusao_benef_w;
			
			if	((cd_carteira_ant_w IS NOT NULL AND cd_carteira_ant_w::text <> '') and (coalesce(dt_inclusao_operadora_w::text, '') = '')) then				
				select	min(b.dt_inclusao_operadora)
				into STRICT	dt_inclusao_operadora_w
				from	pls_segurado_carteira	a,
					pls_segurado		b
				where	b.nr_sequencia	= a.nr_seq_segurado
				and	a.cd_usuario_plano = cd_carteira_ant_w
				and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
				and	((coalesce(b.dt_rescisao::text, '') = '') or (dt_contratacao_w <= (b.dt_rescisao+qt_dias_rescisao_mig_w)));
			end if;
		end if;
		
		if (coalesce(dt_inclusao_operadora_w::text, '') = '') then
			dt_inclusao_operadora_w	:= dt_contratacao_w;
		end if;
		
		if (nr_seq_pagador_benef_incl_w IS NOT NULL AND nr_seq_pagador_benef_incl_w::text <> '') then
			nr_seq_pagador_benef_w	:= nr_seq_pagador_benef_incl_w;
		end if;
		
		select	max(ie_tipo_operacao)
		into STRICT	ie_tipo_operacao_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_p;
		
		select	coalesce(max(nr_seq_seg_contrato),0) + 1
		into STRICT	nr_seq_seg_contrato_w
		from	pls_segurado
		where	nr_seq_contrato	= nr_seq_contrato_p;
		
		select	nextval('pls_segurado_seq')
		into STRICT	nr_seq_segurado_w
		;
		
		insert into pls_segurado(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica,
			nr_seq_titular, nr_seq_contrato, nr_seq_pagador,
			nr_seq_plano, nr_seq_tabela, nr_proposta_adesao,
			dt_contratacao, dt_liberacao, nr_seq_parentesco,
			dt_rescisao, nr_seq_segurado_ant, dt_migracao,
			ds_observacao, cd_subestipulante_pf, nr_seq_motivo_cancelamento,
			dt_reativacao, vl_analise, cd_segurado_contrato,
			cd_segurado_familia, dt_inclusao_operadora, dt_limite_utilizacao,
			nr_seq_vinculo_est, cd_matricula_estipulante, nr_seq_tabela_origem,
			nr_seq_motivo_inclusao, nr_seq_segurado_mig, nr_seq_vendedor_pf,
			nr_seq_vendedor_canal, ie_acao_contrato, ie_tipo_plano,
			dt_ultima_carencia, ie_taxa_inscricao, dt_cancelamento,
			ie_tipo_segurado, nr_seq_pessoa_proposta, nr_seq_portabilidade,
			nr_seq_subestipulante, nr_seq_seg_contrato, ie_nascido_plano, ie_situacao_atend,
			cd_estabelecimento, dt_solicitacao_inclusao, cd_matricula_familia, nr_seq_tipo_comercial,
			cd_cod_anterior, ie_divisao_repasse, cd_carteira_ant,
			nr_seq_agente_motivador, nr_seq_origem_agente, nr_seq_faixa_salarial, nr_seq_localizacao_benef,
			ie_tipo_parentesco)
		values (nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, cd_beneficiario_w,
			nr_seq_titular_w, nr_seq_contrato_p, nr_seq_pagador_benef_w,
			nr_seq_plano_benef_w, nr_seq_tabela_benef_w, nr_seq_proposta_p,
			dt_contratacao_w, null, nr_seq_parentesco_w,
			null, null, null,
			null, null, null,
			null, 0, null,
			null, dt_inclusao_operadora_w, null,
			nr_seq_vinculo_estip_w, cd_matricula_est_w, null,
			nr_Seq_motivo_inclusao_w, null, nr_seq_vendedor_pf_w,
			nr_seq_vendedor_canal_w, null, null,
			null, ie_taxa_inscricao_w, null,
			ie_tipo_operacao_w, nr_seq_pessoa_proposta_w, nr_seq_portabilidade_w,
			nr_seq_subestipulante_w, nr_seq_seg_contrato_w, ie_nascido_plano_w, 'A',
			cd_estabelecimento_w, dt_solicitacao_inclusao_w, cd_matricula_familia_w, nr_seq_tipo_comercial_w,
			cd_sistema_anterior_w, ie_divisao_repasse_w, cd_carteira_ant_w,
			nr_seq_agente_motivador_w, nr_seq_origem_agente_w, nr_seq_faixa_salarial_w, nr_seq_localizacao_benef_w,
			ie_tipo_parentesco_w);
		
		open C09;
		loop
		fetch C09 into
			ds_anexo_w,
			nr_seq_tipo_documento_w,
			ie_apresenta_portal_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
			begin
				insert into pls_segurado_doc_arq(nr_sequencia, nr_seq_segurado, cd_estabelecimento, dt_atualizacao,
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ds_arquivo,
					 ie_origem_anexo, nr_seq_tipo_documento, ie_apresenta_portal
					)
				values (nextval('pls_segurado_doc_arq_seq'), nr_seq_segurado_w, cd_estabelecimento_w, clock_timestamp(),
					 nm_usuario_p, clock_timestamp(), nm_usuario_p, ds_anexo_w,
					 'P', nr_seq_tipo_documento_w, ie_apresenta_portal_w
					);
			end;
		end loop;
		close C09;
		if (coalesce(nr_seq_portabilidade_w, 0) > 0) then
			open C11;
			loop
			fetch C11 into
				ds_anexo_w,
				nr_seq_tipo_documento_w;
			EXIT WHEN NOT FOUND; /* apply on C11 */
				begin
					insert into pls_segurado_doc_arq(nr_sequencia, nr_seq_segurado, cd_estabelecimento, dt_atualizacao,
						nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ds_arquivo,
						ie_origem_anexo, nr_seq_tipo_documento, ie_apresenta_portal
					)
					values (nextval('pls_segurado_doc_arq_seq'), nr_seq_segurado_w, cd_estabelecimento_w, clock_timestamp(),
						nm_usuario_p, clock_timestamp(), nm_usuario_p, ds_anexo_w,
						'T', nr_seq_tipo_documento_w, ie_apresenta_portal_w
					);
				end;
			end loop;
			close C11;
		end if;
		
		begin
		update	pls_declaracao_segurado
		set	nr_seq_segurado		= nr_seq_segurado_w
		where	nr_seq_proposta_adesao	= nr_seq_proposta_p
		and	cd_pessoa_fisica	= cd_beneficiario_w;
		exception
		when others then
			null;
		end;
		
		if	((dt_admissao_w IS NOT NULL AND dt_admissao_w::text <> '') or (coalesce(cd_cbo_w,'0') <> '0')) then
			
			insert into pls_segurado_compl(nr_sequencia,
				nr_seq_segurado,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_cbo,
				dt_admissao)
			values (nextval('pls_segurado_compl_seq'),
				nr_seq_segurado_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_cbo_w,
				dt_admissao_w);
		end if;
		
		insert into pls_carencia(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_plano,
			nr_seq_contrato,
			nr_seq_tipo_carencia,
			nr_seq_segurado,
			qt_dias,
			dt_inicio_vigencia,
			ds_observacao,
			nr_seq_pessoa_proposta,
			ie_origem_carencia_benef,
			ie_cpt,
			nr_seq_grupo_carencia,
			dt_fim_vigencia)
		SELECT	nextval('pls_carencia_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			null,
			null,
			nr_seq_tipo_carencia,
			nr_seq_segurado_w,
			qt_dias,
			dt_contratacao_w,
			ds_observacao,
			null,
			'P',
			ie_cpt,
			nr_seq_grupo_carencia,
			dt_contratacao_w + qt_dias
		from	pls_carencia
		where	nr_seq_pessoa_proposta	= nr_seq_pessoa_proposta_w;
		
		if (ie_divisao_repasse_w = 'S') then
			insert into pls_segurado_vendedor(nr_sequencia,
				nr_seq_segurado,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_vendedor_canal,
				nr_seq_vendedor_vinculado,
				ie_vendedor_base,
				tx_repasse)
			SELECT	nextval('pls_segurado_vendedor_seq'),
				nr_seq_segurado_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_vendedor_canal,
				nr_seq_vendedor_vinculado,
				ie_vendedor_base,
				tx_repasse
			from	pls_solicitacao_vendedor
			where	nr_seq_solicitacao = nr_seq_solicitacao_w;
		end if;
	
		update	pls_inclusao_beneficiario
		set	ie_status	= 'B'
		where	nr_sequencia	= nr_seq_inclusao_benef_w;
		
		if (nr_seq_inclusao_benef_w IS NOT NULL AND nr_seq_inclusao_benef_w::text <> '') then
			begin
			select	nr_seq_congenere,
				ie_tipo_repasse
			into STRICT	nr_seq_congenere_w,
				ie_tipo_repasse_w
			from	pls_inclusao_beneficiario
			where	nr_sequencia	= nr_seq_inclusao_benef_w;
			exception
			when others then
				nr_seq_congenere_w	:= null;
			end;
			
			if (coalesce(ie_tipo_repasse_w::text, '') = '') then
				select	max(ie_preco)
				into STRICT	ie_preco_w
				from	pls_plano
				where	nr_sequencia	= nr_seq_plano_benef_w;
				
				if (ie_preco_w = '1') then
					ie_tipo_repasse_w	:= 'P';
				else
					ie_tipo_repasse_w	:= 'C';
				end if;
			end if;
			
			if	((ie_tipo_repasse_w = 'P') and (coalesce(nr_seq_contrato_w,0) <> 0)) then
				open C07;
				loop
				fetch C07 into
					nr_seq_congenere_cobr_w,
					nr_seq_congenere_ordem_w,
					ie_tipo_repasse_w;
				EXIT WHEN NOT FOUND; /* apply on C07 */
				end loop;
				close C07;
			else
				nr_seq_congenere_cobr_w		:= nr_seq_congenere_w;
			end if;
			
			if (coalesce(nr_seq_congenere_cobr_w,0) = 0) then
				nr_seq_congenere_cobr_w	:= nr_seq_congenere_w;
			end if;
			
			if (coalesce(ie_tipo_repasse_w::text, '') = '') then
				if (ie_preco_w = '1') then
					ie_tipo_repasse_w	:= 'P';
				else
					ie_tipo_repasse_w	:= 'C';
				end if;
			end if;
			
			begin
			select	count(1)
			into STRICT	qt_congenere_oper_w
			from	pls_congenere a,
				pls_outorgante b
			where	a.cd_cgc		= b.cd_cgc_outorgante
			and	a.nr_sequencia		= nr_seq_congenere_w
			and	b.cd_estabelecimento	= cd_estabelecimento_w;
			exception
			when others then
				qt_congenere_oper_w	:= 0;
			end;
			
			if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') and (coalesce(qt_congenere_oper_w,0) = 0) then
				insert into pls_segurado_repasse(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_estabelecimento,
					nr_seq_segurado,
					nr_seq_congenere,
					nr_seq_congenere_atend,
					ie_tipo_repasse,
					ie_cartao_provisorio,
					ie_origem_solicitacao,
					dt_repasse,
					ie_tipo_compartilhamento)
				values (nextval('pls_segurado_repasse_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_estabelecimento_w,
					nr_seq_segurado_w,
					nr_seq_congenere_cobr_w,
					nr_seq_congenere_w,
					ie_tipo_repasse_w,
					'N',
					'M',
					dt_contratacao_w,
					1);
			end if;
		end if;	
	
		update	pls_proposta_beneficiario
		set	nr_seq_benef_gerado	= nr_seq_segurado_w
		where	nr_sequencia		= nr_seq_pessoa_proposta_w;
		
		CALL pls_lanc_bonificacao_plano_sca(	nr_seq_segurado_w,
						nr_seq_pessoa_proposta_w,
						'1',
						nm_usuario_p);
		
		open C02;
		loop
		fetch C02 into
			nr_seq_vinculo_bonific_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			insert	into pls_bonificacao_vinculo(nr_sequencia,
				nr_seq_bonificacao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_segurado,
				tx_bonificacao,
				vl_bonificacao,
				dt_inicio_vigencia,
				dt_fim_vigencia)
			(SELECT	nextval('pls_bonificacao_vinculo_seq'),
				nr_seq_bonificacao,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_segurado_w,
				tx_bonificacao,
				vl_bonificacao,
				dt_inicio_vigencia,
				dt_fim_vigencia
			from	pls_bonificacao_vinculo
			where	nr_sequencia	= nr_seq_vinculo_bonific_w);
			end;
		end loop;
		close C02;
		
		open C03;
		loop
		fetch C03 into
			nr_seq_vinculo_sca_w,
			nr_seq_plano_sca_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			
			ie_lancamento_mensalidade_w	:= null;

			select	nextval('pls_sca_vinculo_seq')
			into STRICT	nr_seq_vinculo_sca_novo_w
			;

			select	max(ie_lancamento_mensalidade)
			into STRICT	ie_lancamento_mensalidade_w
			from	pls_sca_regra_contrato
			where	nr_seq_contrato = nr_seq_contrato_p
			and	nr_seq_plano = nr_seq_plano_sca_w
			and	dt_contratacao_w between coalesce(dt_inicio_vigencia, dt_contratacao_w) and coalesce(dt_fim_vigencia, clock_timestamp());

			
			select	nr_seq_tabela,
				nr_seq_plano
			into STRICT	nr_seq_tabela_sca_w,
				nr_seq_plano_sca_w
			from	pls_sca_vinculo
			where	nr_sequencia	= nr_seq_vinculo_sca_w;

			select	dt_reajuste,
				coalesce(ie_lancamento_mensalidade_w, ie_lancamento_mensalidade)
			into STRICT	dt_reajuste_sca_w,
				ie_lancamento_mensalidade_w
			from	pls_plano
			where	nr_sequencia	= nr_seq_plano_sca_w;

			insert	into pls_sca_vinculo(nr_sequencia,
				nr_seq_plano,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_segurado,
				nr_seq_tabela,
				nr_seq_tabela_origem,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				ds_observacao,
				qt_idade_limite,
				nr_seq_vendedor_canal,
				nr_seq_vendedor_pf,
				ie_geracao_valores,
				dt_reajuste,
				ie_lancamento_mensalidade)
			(SELECT	nr_seq_vinculo_sca_novo_w,
				nr_seq_plano,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_segurado_w,
				nr_seq_tabela,
				nr_seq_tabela_origem,
				coalesce(dt_inicio_vigencia, dt_contratacao_w),
				dt_fim_vigencia,
				wheb_mensagem_pck.get_texto(1104295),
				qt_idade_limite,nr_seq_vendedor_canal,nr_seq_vendedor_pf,ie_geracao_valores_w,dt_reajuste_sca_w,ie_lancamento_mensalidade_w
			from	pls_sca_vinculo
			where	nr_sequencia	= nr_seq_vinculo_sca_w);
			
			CALL pls_duplicar_tabela_preco_sca(	nr_seq_contrato_p,
							nr_seq_vinculo_sca_novo_w,
							nr_seq_tabela_sca_w,
							'N',
							nm_usuario_p);
			end;
		end loop;
		close C03;
		
		open C04;
		loop
		fetch C04 into
			nr_seq_indicacao_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			select	nr_seq_bonificacao,
				nr_seq_segurado_ind
			into STRICT	nr_seq_bonificacao_w,
				nr_seq_segurado_ind_w
			from	pls_proposta_ind_bonific
			where	nr_sequencia	= nr_seq_indicacao_w;
			
			CALL pls_gerar_bonif_indicacao(	nr_seq_segurado_ind_w,
							nr_seq_bonificacao_w,
							dt_inicio_proposta_w,
							cd_estabelecimento_w,
							nr_seq_pessoa_proposta_w,
							nm_usuario_p);
			end;
		end loop;
		close C04;
		
		open C05;
		loop
		fetch C05 into
			nr_seq_agravo_proposta_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			select	nextval('pls_segurado_agravo_seq')
			into STRICT	nr_seq_segurado_agravo_w
			;
			
			insert into pls_segurado_agravo(nr_sequencia,
				nr_seq_segurado,
				cd_estabelecimento,
				nr_seq_agravo,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_tipo_agravo,
				vl_agravo,
				qt_parcelas,
				tx_agravo)
			(SELECT	nr_seq_segurado_agravo_w,
				nr_seq_segurado_w,
				cd_estabelecimento,
				nr_seq_agravo,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_tipo_agravo,
				vl_agravo,
				qt_parcelas_agravo,
				tx_agravo
			from	pls_proposta_benef_agravo
			where	nr_sequencia		= nr_seq_agravo_proposta_w);
			
			CALL pls_gerar_parcelas_agravo(	nr_seq_segurado_agravo_w,
							'G',
							cd_estabelecimento_w,
							nm_usuario_p);
			end;
		end loop;
		close C05;
		
		open C06;
		loop
		fetch C06 into
			nr_seq_vendedor_aux_w,
			nr_seq_vend_canal_aux_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin
			insert into pls_segurado_canal_compl(nr_sequencia,
				nr_seq_segurado,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_vendedor_canal,
				nr_seq_vendedor_vinculado)
			(SELECT	nextval('pls_segurado_canal_compl_seq'),
				nr_seq_segurado_w,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_vendedor_canal,
				nr_seq_vendedor_vinculado
			from	pls_benef_prop_canal_compl
			where	nr_sequencia	= nr_seq_vendedor_aux_w);
			end;
		end loop;
		close C06;
		
		open C10;
		loop
		fetch C10 into
			nr_seq_indicacao_venda_w;
		EXIT WHEN NOT FOUND; /* apply on C10 */
			begin
			insert into pls_indicacao_venda(nr_sequencia,
				nr_seq_segurado,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_segurado_indicacao,
				cd_pessoa_fisica,
				cd_cgc,
				nr_seq_bonificacao,
				qt_parcela_paga,
				qt_meses_bonificacao)
			(SELECT	nextval('pls_indicacao_venda_seq'),
				nr_seq_segurado_w,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_segurado_indicacao,
				cd_pessoa_fisica,
				cd_cgc,
				nr_seq_bonificacao,
				qt_parcela_paga,
				qt_meses_bonificacao
			from	pls_indicacao_venda
			where	nr_sequencia	= nr_seq_indicacao_venda_w);
			end;
		end loop;
		close C10;	

		if (coalesce(nr_seq_titular_w::text, '') = '') then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_proposta_beneficiario
			where	nr_seq_proposta	= nr_seq_proposta_p
			and	nr_seq_titular	= nr_seq_pessoa_proposta_w
			and	(nr_seq_benef_gerado IS NOT NULL AND nr_seq_benef_gerado::text <> '')
			and	coalesce(dt_cancelamento::text, '') = ''  LIMIT 1;
			
			if (qt_registros_w	> 0) then
				  for r_C08 in C08 loop
					begin
					update	pls_segurado
					set	nr_seq_titular	= nr_seq_segurado_w,
						ie_tipo_parentesco	= r_C08.ie_tipo_parentesco,
						nr_seq_parentesco	= r_C08.nr_seq_parentesco					
					where	nr_sequencia	= r_C08.nr_seq_benef_gerado
					and	coalesce(nr_seq_titular::text, '') = '';
					end;
				end loop;				
			end if;
		end if;
		
		CALL pls_gravar_histor_prop_benef(	nr_seq_pessoa_proposta_w,
						clock_timestamp(),
						'11',
						wheb_mensagem_pck.get_texto(1104294),
						nm_usuario_p);
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_proposta_gerar_benef ( nr_seq_proposta_p bigint, nr_seq_plano_p bigint, nr_seq_contrato_p bigint, nm_usuario_p text) FROM PUBLIC;

