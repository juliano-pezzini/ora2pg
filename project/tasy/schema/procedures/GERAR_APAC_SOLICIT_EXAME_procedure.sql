-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_apac_solicit_exame (nr_sequencia_p bigint) AS $body$
DECLARE



nr_seq_proc_int_sus_w	bigint;
cd_procedimento_w		bigint;
nr_atendimento_w		bigint;
cd_pessoa_fisica_w		varchar(10);
cd_profissional_w		varchar(10);
cd_medico_responsavel_w	varchar(10);
dt_solicitacao_w		timestamp;
cd_doenca_w				varchar(10);
ds_diagnostico_cid_w	varchar(255);
ds_cid_w				varchar(4000);
ds_exame_ant_w			varchar(255);
ds_dados_clinicos_w		varchar(255);
ds_justificativa_w		varchar(255);
ie_origem_proced_w		bigint;
nr_laudo_sus_w			smallint;
qt_exame_w				integer;
nm_usuario_w			varchar(15);
nr_seq_interno_w		bigint;
ds_justificativa_item_w	varchar(255);


C01 CURSOR FOR
		SELECT 	a.nr_seq_proc_int_sus,
				a.cd_procedimento,
				a.ie_origem_proced,
				a.qt_exame,
				a.ds_justificativa
		from	pedido_exame_externo_item a,
				pedido_exame_externo b
		where	a.nr_seq_pedido = b.nr_sequencia
		and		b.nr_sequencia = nr_sequencia_p
		and		(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
		and		Sus_Obter_TipoReg_Proc(a.cd_procedimento,7, 'C', 3) in (6,7);


BEGIN


if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '')	then

	Select 	max(nr_atendimento),
			max(DT_SOLICITACAO),
			max(CD_PESSOA_FISICA),
			max(CD_PROFISSIONAL),
			max(CD_DOENCA),
			max(DS_DIAGNOSTICO_CID),
			max(DS_CID),
			max(DS_EXAME_ANT),
			max(DS_DADOS_CLINICOS),
			max(DS_JUSTIFICATIVA)
    into STRICT	nr_atendimento_w,
			dt_solicitacao_w,
			cd_pessoa_fisica_w,
			cd_profissional_w,
			cd_doenca_w,
			ds_diagnostico_cid_w,
			ds_cid_w,
			ds_exame_ant_w,
			ds_dados_clinicos_w,
			ds_justificativa_w
	from   	pedido_exame_externo
	where  	nr_sequencia =  nr_sequencia_p;

	Select 	obter_medico_resp_atend( nr_atendimento_w,'C'),
			wheb_usuario_pck.get_nm_usuario
	into STRICT	cd_medico_responsavel_w,
			nm_usuario_w
	;


	open C01;
	loop
	fetch C01 into
		nr_seq_proc_int_sus_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_exame_w,
		ds_justificativa_item_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

			select	coalesce(max(nr_laudo_sus),0) + 1
			into STRICT	nr_laudo_sus_w
			from	sus_laudo_paciente
			where	nr_atendimento = nr_atendimento_w
			and		ie_tipo_laudo_sus = 0;

			Select 	nextval('sus_laudo_paciente_seq')
			into STRICT	nr_seq_interno_w
			;

			insert into sus_laudo_paciente(	nr_seq_interno,
													nr_atendimento,
													cd_pessoa_fisica,
													ie_tipo_laudo_sus,
													nr_laudo_sus,
													dt_emissao,
													cd_procedimento_solic,
													ie_origem_proced,
													qt_procedimento_solic,
													cd_medico_requisitante,
													cd_medico_responsavel,
													dt_atualizacao,
													dt_atualizacao_nrec,
													nm_usuario,
													nm_usuario_nrec,
													ie_classificacao,
													cd_cid_principal,
													ds_hipotese_diag,
													ds_resumo_exame_fis,
													ds_exame_resultado,
													ds_sinal_sintoma,
													ds_justificativa,
													IE_DIARIA_ACOMP)
										values ( 	nr_seq_interno_w,
													nr_atendimento_w,
													cd_pessoa_fisica_w,
													0,
													nr_laudo_sus_w,
													dt_solicitacao_w,
													cd_procedimento_w,
													ie_origem_proced_w,
													qt_exame_w,
													cd_profissional_w,
													cd_medico_responsavel_w,
													clock_timestamp(),
													clock_timestamp(),
													nm_usuario_w,
													nm_usuario_w,
													13,
													substr(cd_doenca_w,1,4),
													substr(ds_diagnostico_cid_w,1,2000),
													substr(ds_cid_w,1,2000),
													ds_exame_ant_w,
													ds_dados_clinicos_w,
													coalesce(ds_justificativa_item_w,ds_justificativa_w),
													'N');

											commit;


			copia_campo_long_de_para_Java(	'PEDIDO_EXAME_EXTERNO',
											'DS_SOLICITACAO',
											' where nr_sequencia = :nr_seq_pedido',
											'nr_seq_pedido='||nr_sequencia_p,
											'SUS_LAUDO_PACIENTE',
											'DS_COMPLEMENTO_LONGO',
											' where nr_seq_interno = :nr_seq_interno',
											'nr_seq_interno='||nr_seq_interno_w,
											'L');



		end;
	end loop;
	close C01;

	commit;

end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_apac_solicit_exame (nr_sequencia_p bigint) FROM PUBLIC;

