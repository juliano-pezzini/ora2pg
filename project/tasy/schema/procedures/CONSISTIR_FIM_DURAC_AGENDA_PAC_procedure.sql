-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_fim_durac_agenda_pac (cd_agenda_p bigint, dt_agenda_p timestamp, hr_inicio_p timestamp, nr_minuto_duracao_p bigint, nr_seq_agenda_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


ds_erro_w	varchar(250)	:= null;
qt_agenda_w	bigint	:= 0;
dt_agenda_w	timestamp;
ultimo_hor_disp timestamp;
ds_lista_status_w varchar(255)	:= null;


BEGIN

dt_agenda_w	:= to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || to_char(hr_inicio_p,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
if (wheb_usuario_pck.get_cd_funcao = 871) then /*só irá buscar o parametro se estiver na função Gestão da Agenda cirurgica*/
	ds_lista_status_w := Obter_Param_Usuario(871, 820, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ds_lista_status_w);
end if;

if (coalesce(ds_lista_status_w,'XPTO') = 'XPTO') then
	SELECT	COUNT(*)
	into STRICT	qt_agenda_w
	FROM	agenda_paciente
	WHERE	cd_agenda		= cd_agenda_p
	AND	ie_status_agenda	not in ('C', 'L', 'B')
	AND	dt_agenda		=   TRUNC(dt_agenda_w, 'dd')
	AND	coalesce(obter_tipo_classif_agenda(nr_seq_classif_agenda),'XX') <> 'E'
	AND	nr_sequencia		= nr_seq_agenda_p
	AND     hr_inicio + ((nr_minuto_duracao_p - 1) / 1440) > (SELECT MAX(hr_inicio + ((nr_minuto_duracao) / 1440))
								 FROM   agenda_paciente
								 WHERE  cd_agenda 	 =     cd_agenda_p
								 AND	((nr_sequencia 	 <> nr_seq_agenda_p) or (nr_minuto_duracao = nr_minuto_duracao_p))
								 AND    dt_agenda 	 =   TRUNC(dt_agenda_w, 'dd'));
else
	SELECT	COUNT(*)
	into STRICT	qt_agenda_w
	FROM	agenda_paciente
	WHERE	cd_agenda		= cd_agenda_p
	and 	obter_se_contido_char(ie_status_agenda,ds_lista_status_w || ',L') = 'N'
	AND	dt_agenda		=   TRUNC(dt_agenda_w, 'dd')
	AND	coalesce(obter_tipo_classif_agenda(nr_seq_classif_agenda),'XX') <> 'E'
	AND	nr_sequencia		= nr_seq_agenda_p
	AND     hr_inicio + ((nr_minuto_duracao_p - 1) / 1440) > (SELECT MAX(hr_inicio + ((nr_minuto_duracao) / 1440))
								 FROM   agenda_paciente
								 WHERE  cd_agenda 	 =     cd_agenda_p
								 AND	((nr_sequencia 	 <> nr_seq_agenda_p) or (nr_minuto_duracao = nr_minuto_duracao_p))
								 AND    dt_agenda 	 =   TRUNC(dt_agenda_w, 'dd'));
end if;

if (qt_agenda_w > 0) then
	ds_erro_w	:= wheb_mensagem_pck.get_texto(278664);
end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_fim_durac_agenda_pac (cd_agenda_p bigint, dt_agenda_p timestamp, hr_inicio_p timestamp, nr_minuto_duracao_p bigint, nr_seq_agenda_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

