-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prontuario_pac ( cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, ie_commit_p text, nm_usuario_p text, nr_prontuario_p INOUT bigint) AS $body$
DECLARE


nr_prontuario_w		bigint;
nr_sequencia_w		bigint;
ie_regra_pront_w		varchar(15);
qt_registro_w		bigint;
nr_novo_prontuario_w	bigint;
ie_novo_pront_w		boolean;
qt_pront_w		bigint;
ie_reutiliza_pront_w	varchar(01);
cd_pessoa_fisica_w	pessoa_fisica.cd_pessoa_fisica%type;
ie_pront_igual_cdpf_w	varchar(1);
cd_pessoa_pront_w	pessoa_fisica.cd_pessoa_fisica%type;



BEGIN
cd_pessoa_fisica_w:= null;

select	coalesce(max(vl_parametro),'BASE')
into STRICT	ie_regra_pront_w
from	funcao_parametro
where	cd_funcao	= 0
and	nr_sequencia	= 120;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	begin
	ie_pront_igual_cdpf_w := Obter_Param_Usuario(5, 138, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_pront_igual_cdpf_w);
	
	if (ie_pront_igual_cdpf_w = 'S') then
		
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_pront_w
		from	pessoa_fisica 
		where	nr_prontuario = cd_pessoa_fisica_p;
		

		if (cd_pessoa_pront_w IS NOT NULL AND cd_pessoa_pront_w::text <> '') then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(131066, 'CD_PESSOA_FISICA=' || cd_pessoa_pront_w);
		end if;
		nr_prontuario_w	:= cd_pessoa_fisica_p;
		
		update pessoa_fisica
		set	   nr_prontuario = cd_pessoa_fisica_p,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	 cd_pessoa_fisica = cd_pessoa_fisica_p;
	else
		if (ie_regra_pront_w = 'BASE') then
		
			ie_reutiliza_pront_w := Obter_Param_Usuario(916, 597, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_reutiliza_pront_w);
			
			if (ie_reutiliza_pront_w = 'S') then
			
				nr_novo_prontuario_w := 0;
				ie_novo_pront_w := true;
				
				while(ie_novo_pront_w) loop
					begin
					nr_novo_prontuario_w := nr_novo_prontuario_w + 1;
					
					select	count(*)
					into STRICT	qt_pront_w
					from	pessoa_fisica x
					where	x.nr_prontuario = nr_novo_prontuario_w;
					
					if (qt_pront_w = 0) then
						ie_novo_pront_w := false;
						nr_prontuario_w := nr_novo_prontuario_w;
					end if;

					end;
				end loop;
				
			else 				
				select	nextval('prontuario_seq')
				into STRICT	nr_prontuario_w
				;
			end if;
			
      update pessoa_fisica
      set	   nr_prontuario  = nr_prontuario_w,
              nm_usuario	    = nm_usuario_p,
              dt_atualizacao = clock_timestamp()
      where	 cd_pessoa_fisica	= cd_pessoa_fisica_p;
			
		elsif (ie_regra_pront_w = 'ESTAB') and (coalesce(cd_estabelecimento_p,0) <> 0) then

			select	count(*)
			into STRICT	qt_registro_w
			from	regra_prontuario_estab
			where	cd_estabelecimento	= cd_estabelecimento_p;
			
			if (qt_registro_w = 0) then
				CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(281294, 'CD_ESTABELECIMENTO=' || cd_estabelecimento_p);
			end if;
			
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_sequencia_w
			from	pessoa_fisica_pront_estab
			where	cd_pessoa_fisica	= cd_pessoa_fisica_p
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			if (coalesce(nr_sequencia_w,0) = 0) then
				
				lock table regra_prontuario_estab in exclusive mode;
				
				select	coalesce(max(nr_ult_prontuario),0) + 1
				into STRICT	nr_prontuario_w
				from	regra_prontuario_estab
				where	cd_estabelecimento	= cd_estabelecimento_p;
				
				select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_fisica_w
				from	pessoa_fisica_pront_estab
				where	cd_estabelecimento	= cd_estabelecimento_p
				and	nr_prontuario		= nr_prontuario_w;
				
				if (coalesce(cd_pessoa_fisica_w,'X') <> 'X') then
					CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(281297, 'NR_PRONTUARIO=' || nr_prontuario_w || ';CD_PESSOA_FISICA=' || cd_pessoa_fisica_w);
				end if;
			
				update	regra_prontuario_estab
				set	nr_ult_prontuario	= nr_prontuario_w,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	cd_estabelecimento	= cd_estabelecimento_p;
				
				insert into pessoa_fisica_pront_estab(
					nr_sequencia,
					cd_pessoa_fisica,
					cd_estabelecimento,
					nr_prontuario,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec)
				values (	nextval('pessoa_fisica_pront_estab_seq'),
					cd_pessoa_fisica_p,
					cd_estabelecimento_p,
					nr_prontuario_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp());
			end if;
			
		end if;
	end if;
		
	if (ie_commit_p = 'S') then
		commit;
	end if;
	end;
end if;

nr_prontuario_p	:= nr_prontuario_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prontuario_pac ( cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, ie_commit_p text, nm_usuario_p text, nr_prontuario_p INOUT bigint) FROM PUBLIC;

