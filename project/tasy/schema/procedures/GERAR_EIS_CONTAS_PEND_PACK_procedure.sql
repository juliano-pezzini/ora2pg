-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_contas_pend_pack ( nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


dt_inicial_p			eis_contas_pend_filtros_pck.dt_inicial%type;
dt_final_p			eis_contas_pend_filtros_pck.dt_final%type;
ie_data_p			eis_contas_pend_filtros_pck.ie_data%type;
ie_pac_alta_p			eis_contas_pend_filtros_pck.ie_pac_alta%type;
ie_titulo_p			eis_contas_pend_filtros_pck.ie_titulo%type;
ie_nota_fiscal_p		eis_contas_pend_filtros_pck.ie_nota_fiscal%type;
ie_setor_atual_p		eis_contas_pend_filtros_pck.ie_setor_atual%type;
ie_contas_canceladas_p		eis_contas_pend_filtros_pck.ie_contas_canceladas%type;
ie_guias_conta_p		eis_contas_pend_filtros_pck.ie_guias_conta%type;
ie_data_etapa_p			eis_contas_pend_filtros_pck.ie_data_etapa%type;
ie_pac_internado_p		eis_contas_pend_filtros_pck.ie_pac_internado%type;
ie_conta_fechada_p		eis_contas_pend_filtros_pck.ie_conta_fechada%type;
ie_maiores_zero_p		eis_contas_pend_filtros_pck.ie_maiores_zero%type;
ie_setor_pac_p			eis_contas_pend_filtros_pck.ie_setor_pac%type;
ie_com_aih_p			eis_contas_pend_filtros_pck.ie_com_aih%type;
ie_com_apac_p			eis_contas_pend_filtros_pck.ie_com_apac%type;
ie_conta_sem_etapa_p		eis_contas_pend_filtros_pck.ie_conta_sem_etapa%type;
ie_conta_etapa_pend_p		eis_contas_pend_filtros_pck.ie_conta_etapa_pend%type;
ie_filtrar_estab_conta_p	eis_contas_pend_filtros_pck.ie_filtrar_estab_conta%type;
ie_retornos_p			eis_contas_pend_filtros_pck.ie_retornos%type;
ie_contas_protocolo_p		eis_contas_pend_filtros_pck.ie_contas_protocolo%type;
vl_inicial_p			eis_contas_pend_filtros_pck.vl_inicial%type;
vl_final_p			eis_contas_pend_filtros_pck.vl_final%type;
cd_convenios_p			eis_contas_pend_filtros_pck.cd_convenios%type;
cd_categorias_p			eis_contas_pend_filtros_pck.cd_categorias%type;
ie_tipos_atendimento_p		eis_contas_pend_filtros_pck.ie_tipos_atendimento%type;
ie_tipos_convenio_p		eis_contas_pend_filtros_pck.ie_tipos_convenio%type;
ie_status_conta_p		eis_contas_pend_filtros_pck.ie_status_conta%type;
cd_etapas_p			eis_contas_pend_filtros_pck.cd_etapas%type;
cd_medicos_p			eis_contas_pend_filtros_pck.cd_medicos%type;
cd_setores_p			eis_contas_pend_filtros_pck.cd_setores%type;
ie_lanc_setor_p			eis_contas_pend_filtros_pck.ie_lanc_setor%type;
ie_filtrar_estab_atend_p	eis_contas_pend_filtros_pck.ie_filtrar_estab_atend%type;
cd_setores_etapa_p		eis_contas_pend_filtros_pck.cd_setores_etapa%type;
cd_pessoas_etapa_p		eis_contas_pend_filtros_pck.cd_pessoas_etapa%type;
ie_valor_conta_p		eis_contas_pend_filtros_pck.ie_valor_conta%type;
ie_valor_conta_sus_p		eis_contas_pend_filtros_pck.ie_valor_conta_sus%type;
ie_clinicas_p			eis_contas_pend_filtros_pck.ie_clinicas%type;
cd_procedimento_p		eis_contas_pend_filtros_pck.cd_procedimento%type;
nr_proc_interno_p		eis_contas_pend_filtros_pck.nr_proc_interno%type;
cd_grupo_proc_p			eis_contas_pend_filtros_pck.cd_grupo_proc%type;
cd_area_procedimento_p		eis_contas_pend_filtros_pck.cd_area_procedimento%type;
cd_especialidade_p		eis_contas_pend_filtros_pck.cd_especialidade%type;
cd_planos_p			eis_contas_pend_filtros_pck.cd_planos%type;
ie_complexidade_p		eis_contas_pend_filtros_pck.ie_complexidade%type;
cd_setores_ult_int_p		eis_contas_pend_filtros_pck.cd_setores_ult_int%type;
cd_motivos_devol_etapa_p	eis_contas_pend_filtros_pck.cd_motivos_devol_etapa%type;
cd_tipos_procedimento_p		eis_contas_pend_filtros_pck.cd_tipos_procedimento%type;
ie_status_protocolo_p		eis_contas_pend_filtros_pck.ie_status_protocolo%type;
cd_municipio_p			eis_contas_pend_filtros_pck.cd_municipio%type;
cd_classif_setor_p		eis_contas_pend_filtros_pck.cd_classif_setor%type;
cd_procedencia_p		eis_contas_pend_filtros_pck.cd_procedencia%type;
nm_usuario_etapa_p		eis_contas_pend_filtros_pck.nm_usuario_etapa%type;
cd_setor_valor_p		eis_contas_pend_filtros_pck.cd_setor_valor%type;
cd_estab_conta_p		eis_contas_pend_filtros_pck.cd_estab_conta%type;
cd_estab_atend_p		eis_contas_pend_filtros_pck.cd_estab_atend%type;
ie_conta_sem_proced_p		eis_contas_pend_filtros_pck.ie_conta_sem_proced%type;
cd_responsavel_conta_p		eis_contas_pend_filtros_pck.cd_responsavel_conta%type;
ie_tipos_atend_conta_p		eis_contas_pend_filtros_pck.ie_tipos_atend_conta%type;
ie_tipo_guia_conv_p		eis_contas_pend_filtros_pck.ie_tipo_guia_conv%type;
cd_motivo_alta_p		eis_contas_pend_filtros_pck.cd_motivo_alta%type;
ie_tipo_protocolo_p		eis_contas_pend_filtros_pck.ie_tipo_protocolo%type;
cd_setor_destino_p		eis_contas_pend_filtros_pck.cd_setor_destino%type;
nr_seq_estagio_aut_p		eis_contas_pend_filtros_pck.nr_seq_estagio_aut%type;
nr_seq_estagio_conta_p		eis_contas_pend_filtros_pck.nr_seq_estagio_conta%type;
nr_seq_grupo_sus_p		eis_contas_pend_filtros_pck.nr_seq_grupo_sus%type;
nr_seq_subgrupo_sus_p		eis_contas_pend_filtros_pck.nr_seq_subgrupo_sus%type;
nr_seq_forma_org_sus_p		eis_contas_pend_filtros_pck.nr_seq_forma_org_sus%type;
cd_setor_entrega_prescr_p	eis_contas_pend_filtros_pck.cd_setor_entrega_prescr%type;
cd_tipo_regulacao_p		eis_contas_pend_filtros_pck.cd_tipo_regulacao%type;
cd_tipo_serv_regulacao_p	eis_contas_pend_filtros_pck.cd_tipo_serv_regulacao%type;
qt_dias_etapa_p			eis_contas_pend_filtros_pck.qt_dias_etapa%type;
cd_tipo_acomodacao_p		eis_contas_pend_filtros_pck.cd_tipo_acomodacao%type;
ie_conta_perda_p		eis_contas_pend_filtros_pck.ie_conta_perda%type;
nr_seq_classif_atend_p		eis_contas_pend_filtros_pck.nr_seq_classif_atend%type;
cd_setor_prescr_proced_p	eis_contas_pend_filtros_pck.cd_setor_prescr_proced%type;
nr_atendimento_p		eis_contas_pend_filtros_pck.nr_atendimento%type;
dt_ref_protocolo_p		eis_contas_pend_filtros_pck.dt_ref_protocolo%type;
ie_cod_setores_conta_p		eis_contas_pend_filtros_pck.ie_cod_setores_conta%type;
nm_usuario_recep_atend_p	eis_contas_pend_filtros_pck.nm_usuario_recep_atend%type;
nr_seq_tipo_lib_guia_p		eis_contas_pend_filtros_pck.nr_seq_tipo_lib_guia%type;
nm_usuario_recebimento_p	eis_contas_pend_filtros_pck.nm_usuario_recebimento%type;
ie_ult_etapa_receb_p		eis_contas_pend_filtros_pck.ie_ult_etapa_receb%type;
qt_dias_atraso_p		eis_contas_pend_filtros_pck.qt_dias_atraso%type;
cd_agrupamento_setor_p		eis_contas_pend_filtros_pck.cd_agrupamento_setor%type;
ie_carater_inter_sus_p		eis_contas_pend_filtros_pck.ie_carater_inter_sus%type;
ie_listar_proced_p		eis_contas_pend_filtros_pck.ie_listar_proced%type;
ie_situacao_titulo_p		eis_contas_pend_filtros_pck.ie_situacao_titulo%type;
ie_etapa_conta_p		eis_contas_pend_filtros_pck.ie_etapa_conta%type := '0';
ie_conta_sem_matmed_p		eis_contas_pend_filtros_pck.ie_conta_sem_matmed%type;
ie_laudo_paciente_p		eis_contas_pend_filtros_pck.ie_laudo_paciente%type;
nr_seq_pessoa_classif_p		eis_contas_pend_filtros_pck.nr_seq_pessoa_classif%type;
ie_atend_cancel_p		eis_contas_pend_filtros_pck.ie_atend_cancel%type;
cd_setor_inicial_p		eis_contas_pend_filtros_pck.cd_setor_inicial%type;
ie_protocolo_doc_p		eis_contas_pend_filtros_pck.ie_protocolo_doc%type;
cd_setor_prontuario_p		eis_contas_pend_filtros_pck.cd_setor_prontuario%type;
ie_conta_opme_sus_p		eis_contas_pend_filtros_pck.ie_conta_opme_sus%type;
ie_conta_opme_p			eis_contas_pend_filtros_pck.ie_conta_opme%type;
nr_seq_tp_pend_conta_p		eis_contas_pend_filtros_pck.nr_seq_tp_pend_conta%type;
nr_seq_protocolo_p		eis_contas_pend_filtros_pck.nr_seq_protocolo%type;
nr_seq_estag_conta_p		eis_contas_pend_filtros_pck.nr_seq_estag_conta%type;
nm_usu_ult_etapa_p		eis_contas_pend_filtros_pck.nm_usu_ult_etapa%type;
ie_visual_empresa_p		eis_contas_pend_filtros_pck.ie_visual_empresa%type;
nr_seq_classif_etapa_p		eis_contas_pend_filtros_pck.nr_seq_classif_etapa%type;
qt_dias_venc_atend_min_p	eis_contas_pend_filtros_pck.qt_dias_venc_atend_min%type;
qt_dias_venc_atend_max_p	eis_contas_pend_filtros_pck.qt_dias_venc_atend_max%type;
cd_especial_med_atend_p		eis_contas_pend_filtros_pck.cd_especial_med_atend%type;
cd_cnpj_opme_p			eis_contas_pend_filtros_pck.cd_cnpj_opme%type;
cd_classif_convenio_p		eis_contas_pend_filtros_pck.cd_classif_convenio%type;
ie_penultima_etapa_p		eis_contas_pend_filtros_pck.ie_penultima_etapa%type;
ie_pendencia_conta_p		eis_contas_pend_filtros_pck.ie_pendencia_conta%type;
ie_laudos_liberados_p		eis_contas_pend_filtros_pck.ie_laudos_liberados%type;
cd_med_espec_p			eis_contas_pend_filtros_pck.cd_med_espec%type;
nr_seq_tipo_admissao_fat_p		eis_contas_pend_filtros_pck.nr_seq_tipo_admissao_fat%type;
nr_seq_classificacao_p		eis_contas_pend_filtros_pck.nr_seq_classificacao%type;

nr_atendimento_w		bigint;
nr_atendimento_ww		bigint := 0;
ie_tipo_atendimento_w		smallint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nr_interno_conta_w		bigint;
ie_status_conta_w		smallint;
cd_procedencia_w		integer;
nr_seq_protocolo_w		bigint;
ds_etapa_w			varchar(80);
ds_etapa_conta_obs_w		varchar(80);
nm_usuario_w			varchar(15);
cd_estabelecimento_w		smallint;
cd_estab_atend_w		smallint;
cd_convenio_w			integer;
ie_tipo_convenio_w		smallint;
cd_categoria_convenio_w		varchar(10);
cd_setor_atendimento_w		integer;
cd_guia_w			varchar(20);
dt_ultima_etapa_w		timestamp;
cd_medico_exec_w		varchar(10);
cd_setor_destino_w		integer;
cd_unidade_pac_w		varchar(21);
vl_conta_w			double precision;
vl_conta_sus_w			double precision;
ie_insere_w			varchar(1) := 'S';
cd_setor_etapa_w		integer;
dt_conta_protocolo_w		timestamp;
dt_prev_protocolo_w		timestamp;
cd_pessoa_etapa_w		varchar(10);
cd_grupo_proc_w			bigint;
cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
qt_unidade_atendimento_w	bigint;
cd_plano_w			varchar(20);
cd_setor_ult_int_w		varchar(80);
cd_motivo_devol_etapa_w		varchar(80);
vl_conta_ww			double precision;
nr_seq_etapa_w			bigint;
ie_etapa_muda_status_w		varchar(10);
sql_err_w			varchar(1800);
nr_sequencia_proc_w		bigint;
nm_ultimo_usuario_w		varchar(15);
nm_ultimo_usu_receb_w		varchar(15);
ds_ultimo_usuario_w		varchar(255);
ds_usuario_receb_etapa_w	varchar(255);
ie_tipo_atend_conta_w		smallint;
cd_motivo_alta_w		varchar(3);
ie_tipo_protocolo_w		varchar(3);
dt_inicial_ww			timestamp;
dt_final_ww			timestamp;
cd_responsavel_w		varchar(10);
nr_atend_original_w		bigint;
ie_clinica_w			integer;
nr_seq_estagio_conta_w		bigint;
nr_seq_grupo_sus_w		bigint;
nr_seq_subgrupo_sus_w		bigint;
nr_seq_forma_org_sus_w		bigint;
qt_existe_w			bigint;
ds_setor_etapa_filtro_w		varchar(255);

ie_tipo_regulacao_w		varchar(01);
nr_seq_tipo_serv_regulacao_w	bigint;
nr_seq_classif_atend_w		bigint;
qt_existe_proc_w		bigint := 0;
ds_status_atend_w		varchar(255);
ie_probabilidade_alta_w		varchar(03);
ie_status_atend_w		varchar(03);
dt_alta_w			timestamp;
dt_alta_medico_w		timestamp;
dt_previsto_alta_w		timestamp;
dt_status_atend_w		timestamp;
dt_mesano_ref_prot_w		timestamp;
ds_cod_setores_conta_w		varchar(255);
nm_usuario_recep_atend_w	varchar(15);
ds_municipio_w			varchar(40);
ie_todas_pf_etapa_w		varchar(1);
ie_etapa_recebida_w		varchar(15);
cd_procedimento_aux_w		bigint;
ie_origem_proced_aux_w		bigint;
ie_setor_atend_conta_w		varchar(1);
ie_carater_inter_sus_w		varchar(2);
ds_proc_aux_w			varchar(20);
ie_tipo_atend_tiss_w		varchar(03);
ds_tipo_atend_tiss_w		varchar(255);
nr_seq_etapa_conta_w		bigint;
dt_etapa_conta_w		timestamp;
cd_setor_etapa_conta_w		integer;
ie_etapa_conta_w		varchar(15);
qt_existe_matmed_w		bigint;
ie_sem_etapa_w			varchar(1);
qt_existe_laudo_w		bigint;
nr_seq_atepacu_w		bigint;
cd_setor_inicial_w		integer;
dt_entrada_w			timestamp;
nr_seq_classif_w		bigint;
ie_usuario_atend_w		varchar(15) := 'N';
ie_somente_proc_conta_w		varchar(15) := 'N';
atend_paciente_unidade_w	varchar(15);
qt_prot_doc_w			bigint;
nr_seq_motivo_devol_etapa_w	bigint;

nm_pessoa_fisica_w		varchar(60);
ds_convenio_w			varchar(255);
ds_setor_atendimento_w		varchar(100);
ds_setor_etapa_w		varchar(100);
nm_medico_exec_w		varchar(60);
ds_tipo_atendimento_w		varchar(150);
ds_procedimento_w		varchar(255);
cd_pessoa_etapa_ww		varchar(10);
nm_pessoa_etapa_w		varchar(60);
ds_motivo_devol_w		varchar(80);
ds_status_conta_w		varchar(80);
ds_proced_atend_w		varchar(40);
ds_obs_conta_w			varchar(255);
qt_dias_atraso_atend_w		bigint;
nm_estabelecimento_w		varchar(255);
dt_periodo_ini_conta_w		timestamp;
dt_periodo_fim_conta_w		timestamp;
qt_dif_datas_alta_prot_w	bigint;
ds_tipo_guia_cta_w		varchar(80);
ie_tipo_guia_w			varchar(2);
ds_categ_conv_w			varchar(100);
cd_setor_atual_w		bigint;
ds_setor_atual_w		varchar(255);
nr_seq_agrup_atual_w		bigint;
ds_agrup_setor_atual_w		varchar(80);
ds_agrup_setor_w		varchar(80);
nr_seq_agrupamento_w		bigint;
ds_setor_destino_w		varchar(255);
cd_usuario_convenio_w		varchar(40);
cd_senha_w			varchar(20);
ie_tipo_guia_atend_w		varchar(10);
ds_tipo_guia_atend_w		varchar(80);
ds_setor_inicial_w		varchar(255);
ds_grupo_opme_param_w		varchar(80);
nr_seq_estagio_w		cta_pendencia.nr_seq_estagio%type;
qt_tipo_pend_cta_w		bigint;
qt_estag_pend_cta_w		bigint;
nr_seq_interno_w		bigint;
nr_seq_classif_etapa_w		fatur_etapa.nr_seq_classif%type;
ds_classif_etapa_w		classif_etapa.ds_classificacao%type;
cd_empresa_w			atend_categoria_convenio.cd_empresa%type;
ds_empresa_referencia_w		w_eis_conta_pendente.ds_empresa_referencia%type := '';
qt_dias_venc_atend_w            bigint;
cd_especial_med_atend_w		eis_contas_pend_filtros_pck.cd_especial_med_atend%type;
ds_penultima_etapa_w		w_eis_conta_pendente.ds_penultima_etapa%type;
dt_inicio_audit_w		w_eis_conta_pendente.dt_inicio_audit%type;
dt_fim_audit_w			w_eis_conta_pendente.dt_fim_audit%type;
dt_lib_audit_w			w_eis_conta_pendente.dt_lib_audit%type;
qt_dias_sem_audit_w		w_eis_conta_pendente.qt_dias_sem_audit%type;
qt_dias_sem_ajuste_audit_w	w_eis_conta_pendente.qt_dias_sem_ajuste_audit%type;
ds_setor_leito_pac_w		w_eis_conta_pendente.ds_setor_leito_pac%type;
nr_lote_contab_prot_w		w_eis_conta_pendente.nr_lote_contab_prot%type;
dt_ultima_vig_internacao_w	w_eis_conta_pendente.dt_ultima_vig_internacao%type;
nr_seq_auditoria_w		auditoria_conta_paciente.nr_sequencia%type;
nr_seq_tipo_lib_guia_w		atend_categoria_convenio.nr_seq_tipo_lib_guia%type;

qt_eis_conta_pendente_w		bigint;

dt_mesano_referencia_w      w_eis_conta_pendente.dt_mesano_referencia%type;
ie_ativar_tela_job_w              varchar(15);

c01 CURSOR FOR
SELECT	a.nr_atendimento,
	a.nr_interno_conta,
	a.cd_estabelecimento,
	a.cd_convenio_parametro,
	a.cd_categoria_parametro,
	b.cd_pessoa_fisica,
	a.nm_usuario,
	b.cd_medico_resp,
	b.ie_tipo_atendimento,
	a.ie_status_acerto,
	a.nr_seq_protocolo,
	a.dt_conta_protocolo,
	a.dt_prev_protocolo,
	b.cd_procedencia,
	a.ie_tipo_atend_conta,
	b.cd_motivo_alta,
	a.cd_responsavel,
	b.nr_atend_original,
	b.ie_clinica,
	a.nr_seq_estagio_conta,
	b.ie_probabilidade_alta,
	b.dt_alta,
	b.dt_alta_medico,
	b.dt_previsto_alta,
	b.nm_usuario_atend,
	b.ie_carater_inter_sus,
	b.ie_tipo_atend_tiss,
	b.dt_entrada,
	a.ds_observacao,
	a.dt_periodo_inicial,
	a.dt_periodo_final,
	a.ie_tipo_guia,
	b.cd_estabelecimento cd_estab_atend,
    a.dt_mesano_referencia
from	atendimento_paciente b,
	conta_paciente a
where	a.nr_atendimento = b.nr_atendimento
and	((ie_filtrar_estab_atend_p = 'N') or (ie_filtrar_estab_atend_p = 'S' AND b.cd_estabelecimento = cd_estabelecimento_p))
and	((((a.cd_estabelecimento)::numeric  = cd_estabelecimento_p) and (ie_filtrar_estab_conta_p = 'S'))
	or (ie_filtrar_estab_conta_p = 'N'))
and	((ie_contas_protocolo_p = 'A')
	or	((coalesce(a.nr_seq_protocolo::text, '') = '') and (ie_contas_protocolo_p = 'S'))
	or	(a.nr_seq_protocolo IS NOT NULL AND a.nr_seq_protocolo::text <> '' AND ie_contas_protocolo_p = 'C'))
and	((ie_data_p = 'E' AND b.dt_entrada >= dt_inicial_p and b.dt_entrada <= dt_final_p)
	or	(ie_data_p = 'A' AND b.dt_alta >= dt_inicial_p and b.dt_alta <= dt_final_p)
	or	(ie_data_p = 'R' AND a.dt_mesano_referencia between dt_inicial_ww and dt_final_ww)
	or	((ie_data_p = 'P') and (obter_se_eis_etapa(a.nr_interno_conta,dt_inicial_p,dt_final_p,cd_etapas_p,ie_etapa_conta_w) = 'S'))
	or	(ie_data_p = 'G' AND a.dt_entrada_tiss >= dt_inicial_p and a.dt_entrada_tiss <= dt_final_p)
	or	(ie_data_p = 'F' AND a.dt_periodo_final >= dt_inicial_p and a.dt_periodo_final <= dt_final_p)
	or	(ie_data_p = 'I' AND a.dt_periodo_inicial >= dt_inicial_p and dt_periodo_inicial <= dt_final_p)
	or	((ie_data_p = 'X') and exists (
					SELECT	1
					from	procedimento_paciente p
					where	p.nr_interno_conta = a.nr_interno_conta
					and	coalesce(p.cd_motivo_exc_conta::text, '') = ''
					and	p.dt_procedimento >= dt_inicial_p and p.dt_procedimento <= dt_final_p 
					
union

					select	1
					from	material_atend_paciente m
					where	m.nr_interno_conta = a.nr_interno_conta
					and	coalesce(m.cd_motivo_exc_conta::text, '') = ''
					and	m.dt_atendimento >= dt_inicial_p and m.dt_atendimento <= dt_final_p  LIMIT 1))
	or	((ie_data_p = 'T') and exists 	(select 1
										from	atend_categoria_convenio conv
										where	conv.nr_atendimento 	= a.nr_atendimento
										and	conv.dt_inicio_vigencia = (	select	max(conv_b.dt_inicio_vigencia)
													 	from	atend_categoria_convenio conv_b
													 	where	conv_b.nr_atendimento = a.nr_atendimento)
										and conv.dt_validade_carteira >= dt_inicial_p and conv.dt_validade_carteira <= dt_final_p
										))
	or	((coalesce(dt_inicial_p::text, '') = '') or (coalesce(dt_final_p::text, '') = '')))
and	((coalesce(cd_convenios_p::text, '') = '') or ((cd_convenios_p IS NOT NULL AND cd_convenios_p::text <> '') and (obter_se_contido(a.cd_convenio_parametro,substr(cd_convenios_p,2,length(cd_convenios_p))) = substr(cd_convenios_p,1,1))))
/* Recolocada esta linha acima por um problema de performance OS212150 Geliard*/

and	((ie_pac_alta_p = 'C' AND b.dt_alta IS NOT NULL AND b.dt_alta::text <> '')
	or	((ie_pac_alta_p = 'S') and (coalesce(b.dt_alta::text, '') = ''))
	or (ie_pac_alta_p = 'A'))
and	(((ie_contas_canceladas_p = 'S') and (coalesce(a.ie_cancelamento::text, '') = ''))
	or	(ie_contas_canceladas_p = 'C' AND a.ie_cancelamento IS NOT NULL AND a.ie_cancelamento::text <> '')
	or (ie_contas_canceladas_p = 'A'))
and	((coalesce(cd_setor_valor_p::text, '') = '') or
	((cd_setor_valor_p IS NOT NULL AND cd_setor_valor_p::text <> '') and
	exists (select	1
		from	conta_paciente_mat_proc_v s
		where	s.nr_interno_conta 	= a.nr_interno_conta
		and	obter_se_contido(s.cd_setor_atendimento,substr(cd_setor_valor_p,2,length(cd_setor_valor_p))) = substr(cd_setor_valor_p,1,1))))
and (a.nr_atendimento = coalesce(nr_atendimento_p,a.nr_atendimento))
and	((coalesce(nr_seq_protocolo_p::text, '') = '') or (a.nr_seq_protocolo = nr_seq_protocolo_p))
order by	b.cd_pessoa_fisica;

type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;

-- Variaveis utilizadas na criacao do cursor dinamico
ds_sql_select	varchar(2000);
ds_sql_from	varchar(2000);
ds_sql_where_tb	varchar(2000);
ds_sql_where	varchar(10000);
ds_sql_group	varchar(2000);
ds_sql_order	varchar(2000);
ds_sql		varchar(20000);

dt_inicial_w	varchar(100);
dt_final_w	varchar(100);

ds_cursor	REFCURSOR;

BEGIN
CALL exec_sql_dinamico('Tasy','Truncate table w_eis_conta_pendente');
/*delete from w_eis_conta_pendente a where a.nm_usuario = nm_usuario_p; 
commit;*/
dt_inicial_p 			:= eis_contas_pend_filtros_pck.get_dt_inicial;
dt_final_p 			:= eis_contas_pend_filtros_pck.get_dt_final;
ie_data_p 			:= eis_contas_pend_filtros_pck.get_ie_data;
ie_pac_alta_p 			:= eis_contas_pend_filtros_pck.get_ie_pac_alta;
ie_titulo_p 			:= eis_contas_pend_filtros_pck.get_ie_titulo;
ie_nota_fiscal_p 		:= eis_contas_pend_filtros_pck.get_ie_nota_fiscal;
ie_setor_atual_p 		:= eis_contas_pend_filtros_pck.get_ie_setor_atual;
ie_contas_canceladas_p 		:= eis_contas_pend_filtros_pck.get_ie_contas_canceladas;
ie_guias_conta_p 		:= eis_contas_pend_filtros_pck.get_ie_guias_conta;
ie_data_etapa_p 		:= eis_contas_pend_filtros_pck.get_ie_data_etapa;
ie_pac_internado_p 		:= eis_contas_pend_filtros_pck.get_ie_pac_internado;
ie_conta_fechada_p 		:= eis_contas_pend_filtros_pck.get_ie_conta_fechada;
ie_maiores_zero_p 		:= eis_contas_pend_filtros_pck.get_ie_maiores_zero;
ie_setor_pac_p 			:= eis_contas_pend_filtros_pck.get_ie_setor_pac;
ie_com_aih_p 			:= eis_contas_pend_filtros_pck.get_ie_com_aih;
ie_com_apac_p 			:= eis_contas_pend_filtros_pck.get_ie_com_apac;
ie_conta_sem_etapa_p 		:= eis_contas_pend_filtros_pck.get_ie_conta_sem_etapa;
ie_conta_etapa_pend_p 		:= eis_contas_pend_filtros_pck.get_ie_conta_etapa_pend;
ie_filtrar_estab_conta_p 	:= eis_contas_pend_filtros_pck.get_ie_filtrar_estab_conta;
ie_retornos_p 			:= eis_contas_pend_filtros_pck.get_ie_retornos;
ie_contas_protocolo_p 		:= eis_contas_pend_filtros_pck.get_ie_contas_protocolo;
vl_inicial_p 			:= eis_contas_pend_filtros_pck.get_vl_inicial;
vl_final_p 			:= eis_contas_pend_filtros_pck.get_vl_final;
cd_convenios_p 			:= eis_contas_pend_filtros_pck.get_cd_convenios;
cd_categorias_p 		:= eis_contas_pend_filtros_pck.get_cd_categorias;
ie_tipos_atendimento_p 		:= eis_contas_pend_filtros_pck.get_ie_tipos_atendimento;
ie_tipos_convenio_p 		:= eis_contas_pend_filtros_pck.get_ie_tipos_convenio;
ie_status_conta_p 		:= eis_contas_pend_filtros_pck.get_ie_status_conta;
cd_etapas_p 			:= eis_contas_pend_filtros_pck.get_cd_etapas;
cd_medicos_p 			:= eis_contas_pend_filtros_pck.get_cd_medicos;
cd_setores_p 			:= eis_contas_pend_filtros_pck.get_cd_setores;
ie_lanc_setor_p 		:= eis_contas_pend_filtros_pck.get_ie_lanc_setor;
ie_filtrar_estab_atend_p 	:= eis_contas_pend_filtros_pck.get_ie_filtrar_estab_atend;
cd_setores_etapa_p 		:= eis_contas_pend_filtros_pck.get_cd_setores_etapa;
cd_pessoas_etapa_p 		:= eis_contas_pend_filtros_pck.get_cd_pessoas_etapa;
ie_valor_conta_p 		:= eis_contas_pend_filtros_pck.get_ie_valor_conta;
ie_valor_conta_sus_p 		:= eis_contas_pend_filtros_pck.get_ie_valor_conta_sus;
ie_clinicas_p 			:= eis_contas_pend_filtros_pck.get_ie_clinicas;
cd_procedimento_p 		:= eis_contas_pend_filtros_pck.get_cd_procedimento;
nr_proc_interno_p 		:= eis_contas_pend_filtros_pck.get_nr_proc_interno;
cd_grupo_proc_p 		:= eis_contas_pend_filtros_pck.get_cd_grupo_proc;
cd_area_procedimento_p 		:= eis_contas_pend_filtros_pck.get_cd_area_procedimento;
cd_especialidade_p 		:= eis_contas_pend_filtros_pck.get_cd_especialidade;
cd_planos_p 			:= eis_contas_pend_filtros_pck.get_cd_planos;
ie_complexidade_p 		:= eis_contas_pend_filtros_pck.get_ie_complexidade;
cd_setores_ult_int_p 		:= eis_contas_pend_filtros_pck.get_cd_setores_ult_int;
cd_motivos_devol_etapa_p 	:= eis_contas_pend_filtros_pck.get_cd_motivos_devol_etapa;
cd_tipos_procedimento_p 	:= eis_contas_pend_filtros_pck.get_cd_tipos_procedimento;
ie_status_protocolo_p 		:= eis_contas_pend_filtros_pck.get_ie_status_protocolo;
cd_municipio_p 			:= eis_contas_pend_filtros_pck.get_cd_municipio;
cd_classif_setor_p 		:= eis_contas_pend_filtros_pck.get_cd_classif_setor;
cd_procedencia_p 		:= eis_contas_pend_filtros_pck.get_cd_procedencia;
nm_usuario_etapa_p 		:= eis_contas_pend_filtros_pck.get_nm_usuario_etapa;
cd_setor_valor_p 		:= eis_contas_pend_filtros_pck.get_cd_setor_valor;
cd_estab_conta_p 		:= eis_contas_pend_filtros_pck.get_cd_estab_conta;
cd_estab_atend_p 		:= eis_contas_pend_filtros_pck.get_cd_estab_atend;
ie_conta_sem_proced_p 		:= eis_contas_pend_filtros_pck.get_ie_conta_sem_proced;
cd_responsavel_conta_p 		:= eis_contas_pend_filtros_pck.get_cd_responsavel_conta;
ie_tipos_atend_conta_p 		:= eis_contas_pend_filtros_pck.get_ie_tipos_atend_conta;
ie_tipo_guia_conv_p 		:= eis_contas_pend_filtros_pck.get_ie_tipo_guia_conv;
cd_motivo_alta_p 		:= eis_contas_pend_filtros_pck.get_cd_motivo_alta;
ie_tipo_protocolo_p 		:= eis_contas_pend_filtros_pck.get_ie_tipo_protocolo;
cd_setor_destino_p 		:= eis_contas_pend_filtros_pck.get_cd_setor_destino;
nr_seq_estagio_aut_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_estagio_aut;
nr_seq_estagio_conta_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_estagio_conta;
nr_seq_grupo_sus_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_grupo_sus;
nr_seq_subgrupo_sus_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_subgrupo_sus;
nr_seq_forma_org_sus_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_forma_org_sus;
cd_setor_entrega_prescr_p 	:= eis_contas_pend_filtros_pck.get_cd_setor_entrega_prescr;
cd_tipo_regulacao_p 		:= eis_contas_pend_filtros_pck.get_cd_tipo_regulacao;
cd_tipo_serv_regulacao_p 	:= eis_contas_pend_filtros_pck.get_cd_tipo_serv_regulacao;
qt_dias_etapa_p 		:= eis_contas_pend_filtros_pck.get_qt_dias_etapa;
cd_tipo_acomodacao_p 		:= eis_contas_pend_filtros_pck.get_cd_tipo_acomodacao;
ie_conta_perda_p 		:= eis_contas_pend_filtros_pck.get_ie_conta_perda;
nr_seq_classif_atend_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_classif_atend;
cd_setor_prescr_proced_p 	:= eis_contas_pend_filtros_pck.get_cd_setor_prescr_proced;
nr_atendimento_p 		:= eis_contas_pend_filtros_pck.get_nr_atendimento;
dt_ref_protocolo_p 		:= eis_contas_pend_filtros_pck.get_dt_ref_protocolo;
ie_cod_setores_conta_p 		:= eis_contas_pend_filtros_pck.get_ie_cod_setores_conta;
nm_usuario_recep_atend_p 	:= eis_contas_pend_filtros_pck.get_nm_usuario_recep_atend;
nr_seq_tipo_lib_guia_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_tipo_lib_guia;
nm_usuario_recebimento_p	:= eis_contas_pend_filtros_pck.get_nm_usuario_recebimento;
ie_ult_etapa_receb_p 		:= eis_contas_pend_filtros_pck.get_ie_ult_etapa_receb;
qt_dias_atraso_p 		:= eis_contas_pend_filtros_pck.get_qt_dias_atraso;
cd_agrupamento_setor_p 		:= eis_contas_pend_filtros_pck.get_cd_agrupamento_setor;
ie_carater_inter_sus_p 		:= eis_contas_pend_filtros_pck.get_ie_carater_inter_sus;
ie_listar_proced_p 		:= eis_contas_pend_filtros_pck.get_ie_listar_proced;
ie_situacao_titulo_p 		:= eis_contas_pend_filtros_pck.get_ie_situacao_titulo;
ie_etapa_conta_p 		:= coalesce(eis_contas_pend_filtros_pck.get_ie_etapa_conta,'0');
ie_conta_sem_matmed_p 		:= eis_contas_pend_filtros_pck.get_ie_conta_sem_matmed;
ie_laudo_paciente_p 		:= eis_contas_pend_filtros_pck.get_ie_laudo_paciente;
nr_seq_pessoa_classif_p		:= eis_contas_pend_filtros_pck.get_nr_seq_pessoa_classif;
ie_atend_cancel_p 		:= eis_contas_pend_filtros_pck.get_ie_atend_cancel;
cd_setor_inicial_p 		:= eis_contas_pend_filtros_pck.get_cd_setor_inicial;
ie_protocolo_doc_p 		:= eis_contas_pend_filtros_pck.get_ie_protocolo_doc;
cd_setor_prontuario_p 		:= eis_contas_pend_filtros_pck.get_cd_setor_prontuario;
ie_conta_opme_sus_p 		:= eis_contas_pend_filtros_pck.get_ie_conta_opme_sus;
ie_conta_opme_p 		:= eis_contas_pend_filtros_pck.get_ie_conta_opme;
nr_seq_tp_pend_conta_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_tp_pend_conta;
nr_seq_protocolo_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_protocolo;
nr_seq_estag_conta_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_estag_conta;
nm_usu_ult_etapa_p 		:= eis_contas_pend_filtros_pck.get_nm_usu_ult_etapa;
ie_visual_empresa_p 		:= eis_contas_pend_filtros_pck.get_ie_visual_empresa;
nr_seq_classif_etapa_p 		:= eis_contas_pend_filtros_pck.get_nr_seq_classif_etapa;
qt_dias_venc_atend_min_p	:= eis_contas_pend_filtros_pck.get_qt_dias_venc_atend_min;
qt_dias_venc_atend_max_p	:= eis_contas_pend_filtros_pck.get_qt_dias_venc_atend_max;
cd_especial_med_atend_p		:= eis_contas_pend_filtros_pck.get_cd_especial_med_atend;
cd_cnpj_opme_p			:= eis_contas_pend_filtros_pck.get_cd_cnpj_opme;
cd_classif_convenio_p 		:= eis_contas_pend_filtros_pck.get_cd_classif_convenio;
ie_penultima_etapa_p		:= eis_contas_pend_filtros_pck.get_ie_penultima_etapa;
ie_pendencia_conta_p		:= eis_contas_pend_filtros_pck.get_ie_pendencia_conta;
ie_laudos_liberados_p		:= eis_contas_pend_filtros_pck.get_ie_laudos_liberados;
cd_med_espec_p				:= eis_contas_pend_filtros_pck.get_cd_med_espec;
nr_seq_tipo_admissao_fat_p	:= eis_contas_pend_filtros_pck.get_nr_seq_tipo_admissao_fat;
nr_seq_classificacao_p		:= eis_contas_pend_filtros_pck.get_nr_seq_classificacao;

dt_inicial_ww		:= trunc(dt_inicial_p,'month');
dt_final_ww		:= last_day(fim_dia(dt_final_p));
ie_todas_pf_etapa_w	:= coalesce(obter_valor_param_usuario(1121, 31, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'U');
ie_setor_atend_conta_w	:= coalesce(obter_valor_param_usuario(1121, 33, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_usuario_atend_w		:= coalesce(obter_valor_param_usuario(1121, 39, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_somente_proc_conta_w		:= coalesce(obter_valor_param_usuario(1121, 40, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');

if (coalesce(ie_etapa_conta_p,'0') = '0') then
	ie_etapa_conta_w := coalesce(obter_valor_param_usuario(1121, 3, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'U');
else
	ie_etapa_conta_w := ie_etapa_conta_p;
end if;

-- Montar dinamicamente o select do cursor principal, para ganho de performance. O select ficara com o mesmo funcionamento do select do cursor c01, porem sem adicionar restricoes desnecessarias, conforme os filtros utilizados.
ds_sql_select	:= 'select	a.nr_atendimento,
			a.nr_interno_conta,
			a.cd_estabelecimento,
			a.cd_convenio_parametro,
			a.cd_categoria_parametro,
			b.cd_pessoa_fisica,
			a.nm_usuario,
			b.cd_medico_resp,
			b.ie_tipo_atendimento,
			a.ie_status_acerto,
			a.nr_seq_protocolo,
			a.dt_conta_protocolo,
			a.dt_prev_protocolo,
			b.cd_procedencia,
			a.ie_tipo_atend_conta,
			b.cd_motivo_alta,
			a.cd_responsavel,
			b.nr_atend_original,
			b.ie_clinica,
			a.nr_seq_estagio_conta,
			b.ie_probabilidade_alta,
			b.dt_alta,
			b.dt_alta_medico,
			b.dt_previsto_alta,
			b.nm_usuario_atend,
			b.ie_carater_inter_sus,
			b.ie_tipo_atend_tiss,
			b.dt_entrada,
			a.ds_observacao,
			a.dt_periodo_inicial,
			a.dt_periodo_final,
			a.ie_tipo_guia,
			b.cd_estabelecimento cd_estab_atend, 
            a.dt_mesano_referencia ';
			
ds_sql_from	:= 'from	atendimento_paciente b,
			conta_paciente a ';
			
ds_sql_where_tb	:= 'where	a.nr_atendimento = b.nr_atendimento ';

ds_sql_where	:= ' and 1 = 1';

-- Filtrar pelo estabelecimento do atendimento
if (ie_filtrar_estab_atend_p = 'S') then
	ds_sql_where	:= ds_sql_where || chr(10) || ' and b.cd_estabelecimento = ' || cd_estabelecimento_p;
end if;

-- Filtrar pelo estabelecimento da conta
if (ie_filtrar_estab_conta_p = 'S') then
	ds_sql_where	:= ds_sql_where || chr(10) || ' and to_number(a.cd_estabelecimento) = ' || cd_estabelecimento_p;
end if;

-- Contas (Protocolo)
if (ie_contas_protocolo_p = 'S') then -- Sem
	ds_sql_where	:= ds_sql_where || chr(10) || ' and a.nr_seq_protocolo is null ';
elsif (ie_contas_protocolo_p = 'C')  then -- Com
	ds_sql_where	:= ds_sql_where || chr(10) || ' and a.nr_seq_protocolo is not null ';
end if;

-- Data de
if (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') then
	
	dt_inicial_w	:= 'to_date(' || chr(39) || to_char(dt_inicial_p,'dd/mm/yyyy hh24:mi:ss') || chr(39) || ',' || chr(39) || 'dd/mm/yyyy hh24:mi:ss' || chr(39) || ')';
	dt_final_w	:= 'to_date(' || chr(39) || to_char(dt_final_p,'dd/mm/yyyy hh24:mi:ss') || chr(39) || ',' || chr(39) || 'dd/mm/yyyy hh24:mi:ss' || chr(39) || ')';
	
	if (ie_data_p = 'E') then -- Entrada
		ds_sql_where	:= ds_sql_where || chr(10) || ' and b.dt_entrada >= ' || dt_inicial_w || ' and b.dt_entrada <= ' || dt_final_w;
	elsif (ie_data_p = 'A') then -- Alta
		ds_sql_where	:= ds_sql_where || chr(10) || ' and b.dt_alta >= ' || dt_inicial_w || ' and b.dt_alta <= ' || dt_final_w;
	elsif (ie_data_p = 'R') then -- Referencia
		dt_inicial_w	:= 'to_date(' || chr(39) || to_char(dt_inicial_ww,'dd/mm/yyyy hh24:mi:ss') || chr(39) || ',' || chr(39) || 'dd/mm/yyyy hh24:mi:ss' || chr(39) || ')';
		dt_final_w	:= 'to_date(' || chr(39) || to_char(dt_final_ww,'dd/mm/yyyy hh24:mi:ss') || chr(39) || ',' || chr(39) || 'dd/mm/yyyy hh24:mi:ss' || chr(39) || ')';
		ds_sql_where	:= ds_sql_where || chr(10) || ' and a.dt_mesano_referencia >= ' || dt_inicial_w || ' and a.dt_mesano_referencia <= ' || dt_final_w;
	elsif (ie_data_p = 'P') then -- Etapa		
		
		ds_sql_from	:= ds_sql_from || chr(10) || ', conta_paciente_etapa x ';
		ds_sql_where_tb	:= ds_sql_where_tb || chr(10) || ' and x.nr_interno_conta = a.nr_interno_conta';
		ds_sql_where	:= ds_sql_where || chr(10) || ' and x.dt_etapa between ' || dt_inicial_w || ' and ' || dt_final_w;
		
		if (cd_etapas_p IS NOT NULL AND cd_etapas_p::text <> '') then -- Se utilizar o filtro por etapa, realiza algumas validacoes diferentes (antes utilizava a function obter_se_eis_etapa)
			-- Etapa conta
			ds_sql_where	:= ds_sql_where || chr(10);
			
			if (substr(cd_etapas_p,1,1) = 'S') then
				ds_sql_where	:= ds_sql_where || ' and exists (select	1 ';
			else
				ds_sql_where	:= ds_sql_where || ' and not exists (select	1 ';
			end if;
						
			ds_sql_where	:= ds_sql_where || chr(10) || ' 	from	table(lista_pck.obter_lista(' || chr(39) || cd_etapas_p || chr(39) || ')) y ';
			ds_sql_where	:= ds_sql_where || chr(10) || '		where	x.nr_seq_etapa = y.nr_registro )';
			
			if (coalesce(ie_etapa_conta_w,'U') = 'U') then -- Ultima
				ds_sql_where	:= ds_sql_where || chr(10) || ' and	x.dt_etapa = (	select	max(z.dt_etapa) ';
				ds_sql_where	:= ds_sql_where || chr(10) || ' 	from	conta_paciente_etapa z ';
				ds_sql_where	:= ds_sql_where || chr(10) || ' 	where	z.nr_interno_conta = x.nr_interno_conta ';
				ds_sql_where	:= ds_sql_where || chr(10) || ' 	and	z.dt_etapa between ' || dt_inicial_w || ' and ' || dt_final_w || ' ) ';
			elsif (coalesce(ie_etapa_conta_w,'U') = 'P') then -- Primeira
				ds_sql_where	:= ds_sql_where || chr(10) || ' and	x.dt_etapa = (	select	min(z.dt_etapa) ';
				ds_sql_where	:= ds_sql_where || chr(10) || ' 	from	conta_paciente_etapa z ';
				ds_sql_where	:= ds_sql_where || chr(10) || ' 	where	z.nr_interno_conta = x.nr_interno_conta) ';
			elsif (coalesce(ie_etapa_conta_w,'U') = 'O') then -- Primeira ocorrencia (1a ocor)
				ds_sql_where	:= ds_sql_where || chr(10) || '	and	x.dt_etapa = (	select	min(z.dt_etapa) ';
				ds_sql_where	:= ds_sql_where || chr(10) || '		from	conta_paciente_etapa z, ';
				ds_sql_where	:= ds_sql_where || chr(10) || '			table(lista_pck.obter_lista(' || chr(39) || cd_etapas_p || chr(39) || ')) w ';
				ds_sql_where	:= ds_sql_where || chr(10) || '		where	z.nr_interno_conta = x.nr_interno_conta ';
				ds_sql_where	:= ds_sql_where || chr(10) || '		and	z.nr_seq_etapa = w.nr_registro) ';
			elsif (coalesce(ie_etapa_conta_w,'U') = 'M') then -- Maior sequencia (> seq)
				ds_sql_from	:= ds_sql_from || chr(10) || ', fatur_etapa k ';
				ds_sql_where_tb	:= ds_sql_where_tb || chr(10) || ' and x.nr_seq_etapa = k.nr_sequencia ';
				ds_sql_where	:= ds_sql_where || chr(10) || '	and	k.nr_seq_etapa = (	select	max(w.nr_seq_etapa) ';
				ds_sql_where	:= ds_sql_where || chr(10) || '		from	conta_paciente_etapa z, ';
				ds_sql_where	:= ds_sql_where || chr(10) || '			fatur_etapa w ';
				ds_sql_where	:= ds_sql_where || chr(10) || '		where	z.nr_interno_conta = x.nr_interno_conta ';
				ds_sql_where	:= ds_sql_where || chr(10) || '		and	z.nr_seq_etapa = w.nr_sequencia) ';
			end if;
			
		end if;
		
	elsif (ie_data_p = 'G') then -- Guia TISS
		ds_sql_where	:= ds_sql_where || chr(10) || ' and a.dt_entrada_tiss >= ' || dt_inicial_w || ' and a.dt_entrada_tiss <= ' || dt_final_w;
	elsif (ie_data_p = 'F') then -- Periodo final
		ds_sql_where	:= ds_sql_where || chr(10) || ' and a.dt_periodo_final >= ' || dt_inicial_w || ' and a.dt_periodo_final <= ' || dt_final_w;
	elsif (ie_data_p = 'I') then -- Periodo inicial
		ds_sql_where	:= ds_sql_where || chr(10) || ' and a.dt_periodo_inicial >= ' || dt_inicial_w || ' and a.dt_periodo_inicial <= ' || dt_final_w;
	elsif (ie_data_p = 'X') then -- Execucao
		ds_sql_where	:= ds_sql_where || chr(10) || ' and exists(
					select	1
					from	procedimento_paciente p
					where	p.nr_interno_conta = a.nr_interno_conta
					and	p.cd_motivo_exc_conta is null
					and	p.dt_procedimento >= ' || dt_inicial_w || ' and p.dt_procedimento <= ' || dt_final_w ||
					' and	rownum = 1
					union
					select	1
					from	material_atend_paciente m
					where	m.nr_interno_conta = a.nr_interno_conta
					and	m.cd_motivo_exc_conta is null
					and	m.dt_atendimento >= ' || dt_inicial_w || ' and m.dt_atendimento <= ' || dt_final_w ||
					' and	rownum = 1) ';
	elsif (ie_data_p = 'T') then -- Treatment validity
	   ds_sql_where	:= ds_sql_where || chr(10) ||  ' and validar_datas_carteiras(a.nr_atendimento ,' || dt_inicial_w ||  ',' || dt_final_w ||') = ''S''';
	end if;

end if;

-- Pacientes
if (ie_pac_alta_p = 'C') then -- Com Alta
	ds_sql_where	:= ds_sql_where || chr(10) || ' and b.dt_alta is not null ';
elsif (ie_pac_alta_p = 'S') then -- Sem Alta
	ds_sql_where	:= ds_sql_where || chr(10) || ' and b.dt_alta is null ';
end if;

-- Contas (canceladas)
if (ie_contas_canceladas_p = 'C') then -- Com
	ds_sql_where	:= ds_sql_where || chr(10) || ' and a.ie_cancelamento is not null ';
elsif (ie_contas_canceladas_p = 'S') then -- Sem
	ds_sql_where	:= ds_sql_where || chr(10) || ' and a.ie_cancelamento is null ';
end if;

-- Filtro convenio
if (cd_convenios_p IS NOT NULL AND cd_convenios_p::text <> '') then
	ds_sql_where	:= ds_sql_where || chr(10) || ' and obter_se_contido(a.cd_convenio_parametro,substr(' || chr(39) || cd_convenios_p || chr(39) || ',2,length(' || chr(39) ||				cd_convenios_p || chr(39) || '))) = substr(' || chr(39) || cd_convenios_p || chr(39) || ',1,1) ';
end if;

-- Filtro setor
if (cd_setor_valor_p IS NOT NULL AND cd_setor_valor_p::text <> '') then
	ds_sql_where	:= ds_sql_where || chr(10) || ' and exists (select	1
		from	conta_paciente_mat_proc_v s
		where	s.nr_interno_conta 	= a.nr_interno_conta
		and	obter_se_contido(s.cd_setor_atendimento,substr(' || chr(39) || cd_setor_valor_p || chr(39) || ',2,length(' || chr(39) || cd_setor_valor_p || chr(39) || 		'))) = substr(' || chr(39) || cd_setor_valor_p || chr(39) || ',1,1)) ';
end if;

-- Filtro atendimento
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	ds_sql_where	:= ds_sql_where || chr(10) || ' and a.nr_atendimento = ' || nr_atendimento_p;
end if;

-- Filtro protocolo
if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then
	ds_sql_where	:= ds_sql_where || chr(10) || ' and a.nr_seq_protocolo = ' || nr_seq_protocolo_p;
end if;

ds_sql_group	:= ' group by a.nr_atendimento,
			a.nr_interno_conta,
			a.cd_estabelecimento,
			a.cd_convenio_parametro,
			a.cd_categoria_parametro,
			b.cd_pessoa_fisica,
			a.nm_usuario,
			b.cd_medico_resp,
			b.ie_tipo_atendimento,
			a.ie_status_acerto,
			a.nr_seq_protocolo,
			a.dt_conta_protocolo,
			a.dt_prev_protocolo,
			b.cd_procedencia,
			a.ie_tipo_atend_conta,
			b.cd_motivo_alta,
			a.cd_responsavel,
			b.nr_atend_original,
			b.ie_clinica,
			a.nr_seq_estagio_conta,
			b.ie_probabilidade_alta,
			b.dt_alta,
			b.dt_alta_medico,
			b.dt_previsto_alta,
			b.nm_usuario_atend,
			b.ie_carater_inter_sus,
			b.ie_tipo_atend_tiss,
			b.dt_entrada,
			a.ds_observacao,
			a.dt_periodo_inicial,
			a.dt_periodo_final,
			a.ie_tipo_guia,
			b.cd_estabelecimento,
            a.dt_mesano_referencia ';

ds_sql_order	:= ' order by	b.cd_pessoa_fisica ';

ds_sql	:= ds_sql_select || chr(10) || ds_sql_from || chr(10) || ds_sql_where_tb || chr(10) || ds_sql_where || chr(10) || ds_sql_group || chr(10) || ds_sql_order;

-- Novo loop para usar o SQL dinamico. O C01 nao sera mais usado, porem foi mantido para consulta
open ds_cursor for EXECUTE ds_sql;
	loop
	fetch ds_cursor bulk collect into s_array limit 10000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
	EXIT WHEN NOT FOUND; /* apply on ds_cursor */
	end loop;
close ds_cursor;

-- Forma antiga (sem o sql dinamico)

/*open c01;
loop
fetch c01 bulk collect into s_array limit 10000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
exit when c01%notfound;
end loop;
close c01;*/
for i in 1..vetor_c01_w.count loop
	s_array := vetor_c01_w(i);
	for z in 1..s_array.count loop
	begin

	nr_atendimento_w		:= s_array[z].nr_atendimento;

	begin
	select	/*+ index (a atecaco_i3) */		cd_usuario_convenio,
		cd_senha,
		ie_tipo_guia,
		cd_empresa,
		nr_seq_tipo_lib_guia
	into STRICT	cd_usuario_convenio_w,
		cd_senha_w,
		ie_tipo_guia_atend_w,
		cd_empresa_w,
		nr_seq_tipo_lib_guia_w
	from	atend_categoria_convenio
	where	nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_w);
	exception
		when others then
			cd_usuario_convenio_w	:= null;
			cd_senha_w		:= null;
			ie_tipo_guia_atend_w	:= null;
			cd_empresa_w		:= null;
			nr_seq_tipo_lib_guia_w	:= null;
	end;

	cd_setor_atual_w		:= Obter_Unidade_Atendimento(nr_atendimento_w,'IA','CS');

	select 	max(ds_setor_atendimento),
		coalesce(max(nr_seq_agrupamento),0)
	into STRICT	ds_setor_atual_w,
		nr_seq_agrup_atual_w
	from 	setor_atendimento
	where 	cd_setor_atendimento = cd_setor_atual_w;

	ds_agrup_setor_atual_w:= '';
	if (nr_seq_agrup_atual_w > 0) then
		select	max(ds_agrupamento)
		into STRICT	ds_agrup_setor_atual_w
		from	agrupamento_setor
		where	nr_sequencia = nr_seq_agrup_atual_w;
	end if;

	nr_interno_conta_w		:= s_array[z].nr_interno_conta;
	cd_estabelecimento_w		:= s_array[z].cd_estabelecimento;
	cd_estab_atend_w			:= s_array[z].cd_estab_atend;
	nm_estabelecimento_w		:= obter_nome_estabelecimento(cd_estabelecimento_w);

	cd_convenio_w			:= s_array[z].cd_convenio_parametro;
	
    dt_mesano_referencia_w  := s_array[z].dt_mesano_referencia;
    
	select 	max(ds_convenio)
	into STRICT	ds_convenio_w
	from 	convenio
	where 	cd_convenio = cd_convenio_w;

	cd_categoria_convenio_w		:= s_array[z].cd_categoria_parametro;
	ds_categ_conv_w			:= null;


	if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_categoria_convenio_w IS NOT NULL AND cd_categoria_convenio_w::text <> '') then

		select	max(ds_categoria)
		into STRICT	ds_categ_conv_w
		from	categoria_convenio
		where	cd_convenio	= cd_convenio_w
		and	cd_categoria	= cd_categoria_convenio_w;

	end if;

	cd_pessoa_fisica_w		:= s_array[z].cd_pessoa_fisica;

	select 	max(nm_pessoa_fisica)
	into STRICT	nm_pessoa_fisica_w
	from 	pessoa_fisica
	where 	cd_pessoa_fisica = cd_pessoa_fisica_w;

	if (coalesce(ie_usuario_atend_w,'N') = 'S') and (upper(s_array[z].nm_usuario) = 'TASY') then
		nm_usuario_w		:= s_array[z].nm_usuario_atend;
	else
		nm_usuario_w		:= s_array[z].nm_usuario;
	end if;

	cd_medico_exec_w		:= s_array[z].cd_medico_resp;

	select 	max(nm_pessoa_fisica)
	into STRICT	nm_medico_exec_w
	from 	pessoa_fisica
	where 	cd_pessoa_fisica = cd_medico_exec_w;

	ie_tipo_atendimento_w		:= s_array[z].ie_tipo_atendimento;

	--ds_tipo_atendimento_w:= 'Internado';
	ds_tipo_atendimento_w:= wheb_mensagem_pck.get_texto(304101);
	if (ie_tipo_atendimento_w = 1) then
		--ds_tipo_atendimento_w:= 'Internado';
		ds_tipo_atendimento_w:= wheb_mensagem_pck.get_texto(304101);
	elsif (ie_tipo_atendimento_w = 3) then
		--ds_tipo_atendimento_w:= 'Pronto Socorro';
		ds_tipo_atendimento_w:= wheb_mensagem_pck.get_texto(304102);
	elsif (ie_tipo_atendimento_w = 7) then
		--ds_tipo_atendimento_w:= 'Externo';
		ds_tipo_atendimento_w:= wheb_mensagem_pck.get_texto(304103);
	elsif (ie_tipo_atendimento_w = 8) then
		--ds_tipo_atendimento_w:= 'Ambulatorial';
		ds_tipo_atendimento_w:= wheb_mensagem_pck.get_texto(304104);
	end if;

	ie_status_conta_w		:= s_array[z].ie_status_acerto;

	--ds_status_conta_w:= 'Provisorio';
	ds_status_conta_w:= wheb_mensagem_pck.get_texto(304105);
	if (ie_status_conta_w = 2) then
		--ds_status_conta_w:= 'Definitivo';
		ds_status_conta_w:= wheb_mensagem_pck.get_texto(304106);
	end if;

	nr_seq_protocolo_w		:= s_array[z].nr_seq_protocolo;
	dt_conta_protocolo_w		:= s_array[z].dt_conta_protocolo;
	dt_prev_protocolo_w		:= s_array[z].dt_prev_protocolo;
	cd_procedencia_w		:= s_array[z].cd_procedencia;

	select	max(ds_procedencia)
	into STRICT	ds_proced_atend_w
	from	procedencia
	where	cd_procedencia	= cd_procedencia_w;

	ie_tipo_atend_conta_w		:= s_array[z].ie_tipo_atend_conta;
	cd_motivo_alta_w		:= s_array[z].cd_motivo_alta;

	ie_tipo_protocolo_w		:= null;
	if (coalesce(nr_seq_protocolo_w,0) > 0) then
		select 	max(ie_tipo_protocolo)
		into STRICT	ie_tipo_protocolo_w
		from 	protocolo_convenio
		where 	nr_seq_protocolo = nr_seq_protocolo_w;
	end if;

	cd_responsavel_w		:= s_array[z].cd_responsavel;
	nr_atend_original_w		:= s_array[z].nr_atend_original;
	ie_clinica_w			:= s_array[z].ie_clinica;
	nr_seq_estagio_conta_w		:= s_array[z].nr_seq_estagio_conta;
	ie_probabilidade_alta_w		:= s_array[z].ie_probabilidade_alta;
	dt_alta_w			:= s_array[z].dt_alta;

	qt_dias_atraso_atend_w		:= Obter_Dias_Entre_Datas(dt_alta_w,clock_timestamp());
	qt_dif_datas_alta_prot_w	:= Obter_Dias_Entre_Datas(dt_conta_protocolo_w, dt_alta_w);

	dt_alta_medico_w		:= s_array[z].dt_alta_medico;
	dt_previsto_alta_w		:= s_array[z].dt_previsto_alta;
	nm_usuario_recep_atend_w	:= s_array[z].nm_usuario_atend;
	ie_carater_inter_sus_w		:= s_array[z].ie_carater_inter_sus;
	ie_tipo_atend_tiss_w		:= s_array[z].ie_tipo_atend_tiss;
	dt_entrada_w			:= s_array[z].dt_entrada;
	ds_obs_conta_w			:= s_array[z].ds_observacao;
	dt_periodo_ini_conta_w		:= s_array[z].dt_periodo_inicial;
	dt_periodo_fim_conta_w		:= s_array[z].dt_periodo_final;
	ie_tipo_guia_w			:= s_array[z].ie_tipo_guia;

	ds_tipo_guia_cta_w		:= null;
	if (ie_tipo_guia_w IS NOT NULL AND ie_tipo_guia_w::text <> '') then
		ds_tipo_guia_cta_w	:= obter_valor_dominio(1031,ie_tipo_guia_w);
	end if;

	ds_tipo_guia_atend_w		:= null;
	if (ie_tipo_guia_atend_w IS NOT NULL AND ie_tipo_guia_atend_w::text <> '') then
		ds_tipo_guia_atend_w	:= obter_valor_dominio(1031,ie_tipo_guia_atend_w);
	end if;

	ie_insere_w		:= 'S';

	/* verificacao se tem ou nao titulo */

	if (ie_titulo_p = 'C') then
		begin
		if (ie_situacao_titulo_p IS NOT NULL AND ie_situacao_titulo_p::text <> '') then
			begin
			select	'S'
			into STRICT	ie_insere_w
			
			where	exists (SELECT	1
					from	titulo_receber y
					where	y.nr_interno_conta 	= nr_interno_conta_w
					and (obter_se_contido_char(y.ie_situacao,replace(substr(ie_situacao_titulo_p,2,length(ie_situacao_titulo_p)),', ',',')) = substr(ie_situacao_titulo_p,1,1))
					
union

					SELECT	1
					from	titulo_receber y
					where	y.nr_seq_protocolo	= nr_seq_protocolo_w
					and (obter_se_contido_char(y.ie_situacao,replace(substr(ie_situacao_titulo_p,2,length(ie_situacao_titulo_p)),', ',',')) = substr(ie_situacao_titulo_p,1,1))
					
union

					select	1
					from	titulo_receber y,
						lote_protocolo l,
						protocolo_convenio p
					where	p.nr_seq_protocolo	= nr_seq_protocolo_w
					and	p.nr_seq_lote_protocolo = l.nr_sequencia
					and	l.nr_sequencia 		= y.nr_seq_lote_prot
					and (obter_se_contido_char(y.ie_situacao,replace(substr(ie_situacao_titulo_p,2,length(ie_situacao_titulo_p)),', ',',')) = substr(ie_situacao_titulo_p,1,1)));
			exception
				when others then
				ie_insere_w	:= 'N';
				goto final;
			end;
		else
			begin
			select	'S'
			into STRICT	ie_insere_w
			
			where	exists (SELECT	1
					from	titulo_receber y
					where	y.nr_interno_conta 	= nr_interno_conta_w
					
union

					SELECT	1
					from	titulo_receber y
					where	y.nr_seq_protocolo	= nr_seq_protocolo_w
					
union

					select	1
					from	titulo_receber y,
						lote_protocolo l,
						protocolo_convenio p 
					where	p.nr_seq_protocolo	= nr_seq_protocolo_w
					and	p.nr_seq_lote_protocolo = l.nr_sequencia
					and	l.nr_sequencia 		= y.nr_seq_lote_prot);
			exception
				when others then
				ie_insere_w	:= 'N';
				goto final;
			end;
		end if;
		end;
	elsif (ie_titulo_p = 'S') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	not exists (	SELECT	1
					from	titulo_receber y
					where	y.nr_interno_conta = nr_interno_conta_w
					
union

					SELECT	1
					from	titulo_receber y
					where	y.nr_seq_protocolo	= nr_seq_protocolo_w
					
union

					select	1
					from	titulo_receber y,
						lote_protocolo l,
						protocolo_convenio p
					where	p.nr_seq_protocolo	= nr_seq_protocolo_w
					and	p.nr_seq_lote_protocolo = l.nr_sequencia
					and	l.nr_sequencia 		= y.nr_seq_lote_prot);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	elsif (ie_titulo_p = 'A') and (ie_situacao_titulo_p IS NOT NULL AND ie_situacao_titulo_p::text <> '') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	((exists (	SELECT	1
					from	titulo_receber y
					where	y.nr_interno_conta 	= nr_interno_conta_w
					and (obter_se_contido_char(y.ie_situacao,replace(substr(ie_situacao_titulo_p,2,length(ie_situacao_titulo_p)),', ',',')) = substr(ie_situacao_titulo_p,1,1))
					
union

					SELECT	1
					from	titulo_receber y
					where	y.nr_seq_protocolo	= nr_seq_protocolo_w
					and (obter_se_contido_char(y.ie_situacao,replace(substr(ie_situacao_titulo_p,2,length(ie_situacao_titulo_p)),', ',',')) = substr(ie_situacao_titulo_p,1,1))))
			or (not exists (select	1
					from	titulo_receber y
					where	y.nr_interno_conta = nr_interno_conta_w
					
union

					select	1
					from	titulo_receber y
					where	y.nr_seq_protocolo	= nr_seq_protocolo_w)));
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;

	/* verificacao se tem ou nao nota fiscal */

	if (ie_nota_fiscal_p = 'C') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	exists (SELECT	1
				from	nota_fiscal nf
				where	nf.nr_interno_conta = nr_interno_conta_w
				
union

				SELECT	1
				from	nota_fiscal nf
				where	nf.nr_seq_protocolo	= nr_seq_protocolo_w
				
union

				select	1
				from	nota_fiscal nf,
					lote_protocolo lp,
					protocolo_convenio pc
				where	nf.nr_seq_lote_prot 	= lp.nr_sequencia
				and	lp.nr_sequencia 	= pc.nr_seq_lote_protocolo
				and	pc.nr_seq_protocolo	= nr_seq_protocolo_w);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	elsif (ie_nota_fiscal_p = 'S') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	not exists (	SELECT	1
					from	nota_fiscal nf
					where	nf.nr_interno_conta = nr_interno_conta_w
					
union

					SELECT	1
					from	nota_fiscal nf
					where	nf.nr_seq_protocolo	= nr_seq_protocolo_w
					
union

					select	1
					from	nota_fiscal nf,
						lote_protocolo lp,
						protocolo_convenio pc
					where	nf.nr_seq_lote_prot 	= lp.nr_sequencia
					and	lp.nr_sequencia 	= pc.nr_seq_lote_protocolo
					and	pc.nr_seq_protocolo	= nr_seq_protocolo_w);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;

	/* verifica se o paciente esta internado ou nao */

	if (ie_pac_internado_p = 'S') then
		begin
		select	count(1)
		into STRICT	qt_unidade_atendimento_w
		from	unidade_atendimento u
		where	u.nr_atendimento = nr_atendimento_w  LIMIT 1;

		select	'S'
		into STRICT	ie_insere_w
		
		where	qt_unidade_atendimento_w = 0;
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;

	/* verifica se tem ou nao aih */

	if (ie_com_aih_p = 'C') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	exists (SELECT	1
				 from	sus_aih s
				 where	s.nr_atendimento	= nr_atendimento_w
				 and	s.nr_interno_conta	= nr_interno_conta_w
				
union

				 SELECT	1
				 from	sus_aih_unif u
				 where	u.nr_atendimento	= nr_atendimento_w
				 and	u.nr_interno_conta	= nr_interno_conta_w);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	elsif (ie_com_aih_p = 'S') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	not exists (SELECT	1
				 	 from	sus_aih s
				 	 where	s.nr_atendimento	= nr_atendimento_w
				 	 and	s.nr_interno_conta	= nr_interno_conta_w
					
union

				 	 SELECT	1
					 from	sus_aih_unif u
					 where	u.nr_atendimento	= nr_atendimento_w
					 and	u.nr_interno_conta	= nr_interno_conta_w);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;

	/* verifica se tem ou nao aih */

	if (ie_com_apac_p = 'C') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	exists (SELECT	1
				 from	sus_apac_movto s
				 where	s.nr_atendimento	= nr_atendimento_w
				 and	s.nr_interno_conta	= nr_interno_conta_w
				
union

				 SELECT	1
				 from	sus_apac_unif u
				 where	u.nr_atendimento	= nr_atendimento_w
				 and	u.nr_interno_conta	= nr_interno_conta_w);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	elsif (ie_com_apac_p = 'S') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	not exists (SELECT	1
				 	 from	sus_apac_movto s
				 	 where	s.nr_atendimento	= nr_atendimento_w
				 	 and	s.nr_interno_conta	= nr_interno_conta_w
					
union

				 	 SELECT	1
					 from	sus_apac_unif u
					 where	u.nr_atendimento	= nr_atendimento_w
					 and	u.nr_interno_conta	= nr_interno_conta_w);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;

	/* busca somente contas sem etapa informada */

	if (ie_conta_sem_etapa_p = 'S') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	not exists (	SELECT	1
					from	conta_paciente_etapa cp
					where	cp.nr_interno_conta = nr_interno_conta_w);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;

	/* busca somente contas com etapa em aberto */

	if (ie_conta_etapa_pend_p = 'S') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	exists (	SELECT	1
					from	conta_paciente_etapa cp
					where	cp.nr_interno_conta = nr_interno_conta_w
					and	coalesce(cp.dt_fim_etapa::text, '') = '');
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;	
	
	if (ie_pendencia_conta_p = 'C') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	exists (SELECT	1
				from	cta_pendencia a
				where	a.nr_interno_conta	= nr_interno_conta_w
				and	coalesce(a.dt_fechamento::text, '') = '');		
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;			
		end;	
	elsif (ie_pendencia_conta_p = 'S') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	not exists (SELECT	1
					from	cta_pendencia a
					where	a.nr_interno_conta	= nr_interno_conta_w
					and	coalesce(a.dt_fechamento::text, '') = '');		
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;			
		end;	
	end if;
	
	if (coalesce(ie_laudos_liberados_p,'N') = 'S') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	exists (SELECT	1
				from	laudo_paciente
				where	nr_atendimento = nr_atendimento_w
				and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''));
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;		
	end if;

	/* obter setor atual */

	if	((ie_setor_atual_p = 'S') or (ie_lanc_setor_p = 'S')) then
		select	max(coalesce(a.cd_setor_atendimento,0)),
			max(a.ds_setor_atendimento),
			max(a.nr_seq_agrupamento)
		into STRICT	cd_setor_atendimento_w,
			ds_setor_atendimento_w,
			nr_seq_agrupamento_w
		from	atend_paciente_unidade b,
			setor_atendimento a
		where	a.cd_setor_atendimento = b.cd_setor_atendimento
		and	obter_atepacu_paciente(nr_atendimento_w,'A') = b.nr_seq_interno
		and	b.nr_atendimento	= nr_atendimento_w;

		ds_agrup_setor_w:= '';
		if (nr_seq_agrupamento_w > 0) then
			select	max(ds_agrupamento)
			into STRICT	ds_agrup_setor_w
			from	agrupamento_setor
			where	nr_sequencia = nr_seq_agrupamento_w;
		end if;
	end if;

	/* obter guia conta */

	if (ie_guias_conta_p = 'S') then
		select	max(coalesce(cd_autorizacao,0))
		into STRICT	cd_guia_w
		from	conta_paciente_guia
		where	nr_interno_conta = nr_interno_conta_w;
	end if;

	/* informacoes das etapas */

	SELECT * FROM obter_dados_eis_etapa_conta(	nr_interno_conta_w, nr_seq_etapa_w, ds_etapa_conta_obs_w, ie_etapa_muda_status_w, cd_setor_etapa_w, cd_pessoa_etapa_w, ds_etapa_w, cd_motivo_devol_etapa_w, dt_ultima_etapa_w, nm_ultimo_usuario_w, nm_ultimo_usu_receb_w, nr_seq_classif_etapa_w) INTO STRICT nr_seq_etapa_w, ds_etapa_conta_obs_w, ie_etapa_muda_status_w, cd_setor_etapa_w, cd_pessoa_etapa_w, ds_etapa_w, cd_motivo_devol_etapa_w, dt_ultima_etapa_w, nm_ultimo_usuario_w, nm_ultimo_usu_receb_w, nr_seq_classif_etapa_w;

	cd_pessoa_etapa_ww:= cd_pessoa_etapa_w;
	nm_pessoa_etapa_w := null;

	if (cd_pessoa_etapa_ww IS NOT NULL AND cd_pessoa_etapa_ww::text <> '') then
		select 	max(nm_pessoa_fisica)
		into STRICT	nm_pessoa_etapa_w
		from 	pessoa_fisica
		where 	cd_pessoa_fisica = cd_pessoa_etapa_ww;
	end if;

	select 	max(ds_setor_atendimento)
	into STRICT	ds_setor_etapa_w
	from 	setor_atendimento
	where 	cd_setor_atendimento = cd_setor_etapa_w;

	select	max(ds_classificacao) ds
	into STRICT	ds_classif_etapa_w
	from	classif_etapa
	where	nr_sequencia = nr_seq_classif_etapa_w;

	ds_motivo_devol_w:= null;

	if (cd_motivo_devol_etapa_w IS NOT NULL AND cd_motivo_devol_etapa_w::text <> '') then

		nr_seq_motivo_devol_etapa_w:= (cd_motivo_devol_etapa_w)::numeric;
		select 	max(ds_motivo_devolucao)
		into STRICT	ds_motivo_devol_w
		from 	fatur_motivo_devol
		where 	nr_sequencia = cd_motivo_devol_etapa_w;
	end if;

	begin
	ds_ultimo_usuario_w	:= null;
	if (coalesce(nm_ultimo_usuario_w,'X') <> 'X') then
		select	ds_usuario
		into STRICT	ds_ultimo_usuario_w
		from	usuario
		where	nm_usuario = nm_ultimo_usuario_w;
	end if;
	exception
	when others then
		ds_ultimo_usuario_w := nm_ultimo_usuario_w;
	end;

	ie_etapa_recebida_w := 'N';
	if (coalesce(nm_ultimo_usu_receb_w,'X') <> 'X') then
		ie_etapa_recebida_w := 'S';
	end if;

	begin
	ds_usuario_receb_etapa_w:= '';
	if (coalesce(nm_ultimo_usu_receb_w,'X') <> 'X') then
		select	ds_usuario
		into STRICT	ds_usuario_receb_etapa_w
		from	usuario
		where	nm_usuario = nm_ultimo_usu_receb_w;
	end if;
	exception
	when others then
		ds_usuario_receb_etapa_w := nm_ultimo_usu_receb_w;
	end;

	if (coalesce(ie_ult_etapa_receb_p,'A') <> 'A') and (coalesce(ie_ult_etapa_receb_p,'A') <> ie_etapa_recebida_w) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	/* OS 521818 */

	cd_setor_inicial_w:= 0;
	nr_seq_atepacu_w:=  obter_atepacu_paciente(nr_atendimento_w, 'P');
	ds_setor_inicial_w:= null;
	if (coalesce(nr_seq_atepacu_w,0) > 0) then
		select 	coalesce(max(cd_setor_atendimento),0)
		into STRICT	cd_setor_inicial_w
		from 	atend_paciente_unidade
		where 	nr_atendimento = nr_atendimento_w
		and 	nr_seq_interno = nr_seq_atepacu_w;

		select 	max(ds_setor_atendimento)
		into STRICT	ds_setor_inicial_w
		from 	setor_atendimento
		where 	cd_setor_atendimento = cd_setor_inicial_w;
	end if;

	/* obter o setor inicial da entrada unica */

	if (cd_setor_inicial_p IS NOT NULL AND cd_setor_inicial_p::text <> '') and (obter_se_contido(cd_setor_inicial_w, substr(cd_setor_inicial_p,2,length(cd_setor_inicial_p))) <> substr(cd_setor_inicial_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	/* setor paciente */

	if (ie_setor_pac_p = 'S') then

		if (nr_atendimento_w <> nr_atendimento_ww) then
			begin
			cd_setor_destino_w	:= obter_setor_destino_prot_doc(nr_atendimento_w);
			nr_atendimento_ww	:= nr_atendimento_w;
			end;
		end if;

		select	substr(max(a.cd_unidade_basica) || ' ' || max(a.cd_unidade_compl),1,20)
		into STRICT	cd_unidade_pac_w
		from	atend_paciente_unidade a,
			setor_atendimento b
		where	a.nr_atendimento = nr_atendimento_w
		and	a.cd_setor_atendimento = b.cd_setor_atendimento
		and	obter_atepacu_paciente(nr_atendimento_w,'A')	= a.nr_seq_interno;

		if (cd_setor_destino_w = 0) then /* caso nao tenha setor o valor retornado pela funciton e 0, e isto causa uma violacao de integridade com a setor atendimento, por este motivo a variavel rece null quando for igual a zero */
			cd_setor_destino_w := null;
		end if;

		select 	max(ds_setor_atendimento)
		into STRICT	ds_setor_destino_w
		from 	setor_atendimento
		where 	cd_setor_atendimento = cd_setor_destino_w;

	end if;

	if (nm_usuario_etapa_p IS NOT NULL AND nm_usuario_etapa_p::text <> '') and (obter_se_contido(cd_pessoa_etapa_w, substr(nm_usuario_etapa_p,2,length(nm_usuario_etapa_p))) <> substr(nm_usuario_etapa_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (nm_usuario_recebimento_p IS NOT NULL AND nm_usuario_recebimento_p::text <> '') and (obter_se_contido_char(nm_ultimo_usu_receb_w,replace(substr(nm_usuario_recebimento_p,2,length(nm_usuario_recebimento_p)),', ',',')) <> substr(nm_usuario_recebimento_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (cd_categorias_p IS NOT NULL AND cd_categorias_p::text <> '') and (obter_se_contido_char(replace(cd_convenio_w||cd_categoria_convenio_w,' ',''),replace(substr(cd_categorias_p,2,length(cd_categorias_p)),', ',',')) <> substr(cd_categorias_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (ie_tipos_atendimento_p IS NOT NULL AND ie_tipos_atendimento_p::text <> '') and (obter_se_contido(ie_tipo_atendimento_w, substr(ie_tipos_atendimento_p,2,length(ie_tipos_atendimento_p))) <> substr(ie_tipos_atendimento_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (ie_tipos_convenio_p IS NOT NULL AND ie_tipos_convenio_p::text <> '') and (obter_se_contido(obter_tipo_convenio(cd_convenio_w), substr(ie_tipos_convenio_p,2,length(ie_tipos_convenio_p))) <> substr(ie_tipos_convenio_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (ie_status_conta_p IS NOT NULL AND ie_status_conta_p::text <> '') and (obter_se_contido(ie_status_conta_w, substr(ie_status_conta_p,2,length(ie_status_conta_p))) <> substr(ie_status_conta_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (ie_status_protocolo_p IS NOT NULL AND ie_status_protocolo_p::text <> '') and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') and (obter_se_contido(obter_status_protocolo(nr_seq_protocolo_w), substr(ie_status_protocolo_p,2,length(ie_status_protocolo_p))) <> substr(ie_status_protocolo_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (cd_municipio_p IS NOT NULL AND cd_municipio_p::text <> '') and (obter_se_contido(obter_municipio_atend_conv(nr_atendimento_w, cd_convenio_w, cd_categoria_convenio_w, 'C'), substr(cd_municipio_p,2,length(cd_municipio_p))) <> substr(cd_municipio_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (cd_classif_setor_p IS NOT NULL AND cd_classif_setor_p::text <> '') and (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') and (obter_se_contido(obter_classif_setor(cd_setor_atendimento_w), substr(cd_classif_setor_p,2,length(cd_classif_setor_p))) <> substr(cd_classif_setor_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (cd_motivo_alta_p IS NOT NULL AND cd_motivo_alta_p::text <> '') and (obter_se_contido(cd_motivo_alta_w, substr(cd_motivo_alta_p,2,length(cd_motivo_alta_p))) <> substr(cd_motivo_alta_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (ie_tipo_protocolo_p IS NOT NULL AND ie_tipo_protocolo_p::text <> '') and (obter_se_contido(ie_tipo_protocolo_w, substr(ie_tipo_protocolo_p,2,length(ie_tipo_protocolo_p))) <> substr(ie_tipo_protocolo_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (cd_responsavel_conta_p IS NOT NULL AND cd_responsavel_conta_p::text <> '') and (obter_se_contido(cd_responsavel_w,substr(cd_responsavel_conta_p,2,length(cd_responsavel_conta_p))) <> substr(cd_responsavel_conta_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;
	
	if (cd_estab_conta_p IS NOT NULL AND cd_estab_conta_p::text <> '') and (obter_se_contido(cd_estabelecimento_w,substr(cd_estab_conta_p,2,length(cd_estab_conta_p))) <> substr(cd_estab_conta_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;
	
	if (cd_estab_atend_p IS NOT NULL AND cd_estab_atend_p::text <> '') and (obter_se_contido(cd_estab_atend_w,substr(cd_estab_atend_p,2,length(cd_estab_atend_p))) <> substr(cd_estab_atend_p,1,1)) then
		cd_estabelecimento_w := cd_estab_atend_w;
		ie_insere_w	:= 'N';
		goto final;
	elsif (cd_estab_atend_p IS NOT NULL AND cd_estab_atend_p::text <> '') then
		-- Se filtrou por estabelecimento do atendimento, vai gravar o estabelecimento do atendimento.
		cd_estabelecimento_w := cd_estab_atend_w;
		nm_estabelecimento_w := obter_nome_estabelecimento(cd_estabelecimento_w);
	end if;

	if (ie_clinicas_p IS NOT NULL AND ie_clinicas_p::text <> '') and (obter_se_contido(ie_clinica_w,substr(ie_clinicas_p,2,length(ie_clinicas_p))) <> substr(ie_clinicas_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (cd_procedencia_p IS NOT NULL AND cd_procedencia_p::text <> '') and (obter_se_contido(cd_procedencia_w,substr(cd_procedencia_p,2,length(cd_procedencia_p))) <> substr(cd_procedencia_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if	(((ie_retornos_p = 'C') and (coalesce(nr_atend_original_w::text, '') = '')) or
		(ie_retornos_p = 'S' AND nr_atend_original_w IS NOT NULL AND nr_atend_original_w::text <> '')) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (cd_etapas_p IS NOT NULL AND cd_etapas_p::text <> '') then
		ie_sem_etapa_w := obter_se_contido_char('00', replace(substr(cd_etapas_p,2,length(cd_etapas_p)),', ',','));
		if (ie_sem_etapa_w = 'S') then
			begin
			select	'S'
			into STRICT	ie_insere_w
			
			where	not exists (	SELECT	1
						from	conta_paciente_etapa cp
						where	cp.nr_interno_conta = nr_interno_conta_w);
			exception
				when others then
				ie_insere_w	:= 'N';
			end;
		end if;

		if	((ie_insere_w = 'N' AND ie_sem_etapa_w = 'S') or (ie_sem_etapa_w = 'N')) then
			begin

			if (ie_etapa_conta_w = 'U') then
				begin
				select	'S'
				into STRICT	ie_insere_w
				
				where	obter_se_contido(obter_eis_etapa_conta(nr_interno_conta_w,'C'), substr(cd_etapas_p,2,length(cd_etapas_p))) = substr(cd_etapas_p,1,1);
				exception
					when others then
					ie_insere_w	:= 'N';
					goto final;
				end;
			elsif (ie_etapa_conta_w = 'T') then
				begin

				select	coalesce(max('S'),'N')
				into STRICT	ie_insere_w
				from	fatur_etapa b,
					conta_paciente_etapa a
				where	a.nr_seq_etapa		= b.nr_sequencia
				and	a.nr_interno_conta	= nr_interno_conta_w
				and	coalesce(b.ie_situacao,'A')	= 'A'
				and	((ie_conta_etapa_pend_p = 'S' and coalesce(a.dt_fim_etapa::text, '') = '') or (ie_conta_etapa_pend_p = 'N'))
				and	((coalesce(cd_setores_etapa_p::text, '') = '') or (obter_se_contido(a.cd_setor_atendimento, substr(cd_setores_etapa_p,2,length(cd_setores_etapa_p))) = substr(cd_setores_etapa_p,1,1)))
				and	((coalesce(cd_pessoas_etapa_p::text, '') = '') or (obter_se_contido(a.cd_pessoa_fisica, substr(cd_pessoas_etapa_p,2,length(cd_pessoas_etapa_p))) = substr(cd_pessoas_etapa_p,1,1)))
				and	((ie_data_p <> 'P') or (a.dt_etapa between coalesce(dt_inicial_p,a.dt_etapa) and coalesce(dt_final_p,a.dt_etapa)))
				and	obter_se_contido(a.nr_seq_etapa, substr(cd_etapas_p,2,length(cd_etapas_p))) = substr(cd_etapas_p,1,1);

				if (ie_insere_w = 'N') then
					goto final;
				end if;

				exception
					when others then
					ie_insere_w	:= 'N';
					goto final;
				end;
			elsif (ie_etapa_conta_w = 'P') then
				begin
				select	min(a.nr_seq_etapa)
				into STRICT	nr_seq_etapa_conta_w
				from	fatur_etapa b,
					conta_paciente_etapa a
				where	b.nr_sequencia		= a.nr_seq_etapa
				and	coalesce(b.ie_situacao,'A')	= 'A'
				and	a.nr_interno_conta	= nr_interno_conta_w
				and	a.dt_etapa		= (	SELECT	min(x.dt_etapa)
									from	conta_paciente_etapa x
									where	x.nr_interno_conta = a.nr_interno_conta);

				if (obter_se_contido(nr_seq_etapa_conta_w, substr(cd_etapas_p,2,length(cd_etapas_p))) <> substr(cd_etapas_p,1,1)) then
					ie_insere_w	:= 'N';
					goto final;
				end if;
				end;
			elsif (ie_etapa_conta_w = 'O') then
				begin
				select	'S'
				into STRICT	ie_insere_w
				from	fatur_etapa b,
					conta_paciente_etapa a
				where	b.nr_sequencia		= a.nr_seq_etapa
				and	coalesce(b.ie_situacao,'A')	= 'A'
				and	a.nr_interno_conta	= nr_interno_conta_w
				and	obter_se_contido(a.nr_seq_etapa, substr(cd_etapas_p,2,length(cd_etapas_p))) = substr(cd_etapas_p,1,1)  LIMIT 1;
				exception
				when others then
					ie_insere_w	:= 'N';
					goto final;
				end;
			elsif (ie_etapa_conta_w = 'M') then
				begin

				select	max(x.nr_sequencia)
				into STRICT	nr_seq_etapa_conta_w
				from	fatur_etapa x,
						conta_paciente_etapa a
				where	x.nr_sequencia  = a.nr_seq_etapa
				and		coalesce(x.ie_situacao,'A') = 'A'
				and		a.nr_interno_conta = nr_interno_conta_w
				and		x.nr_seq_etapa = (	SELECT	max(obter_seq_etapa(a.nr_seq_etapa))
    										from	fatur_etapa b,
													conta_paciente_etapa a
    										where	b.nr_sequencia  = a.nr_seq_etapa
    										and		coalesce(b.ie_situacao,'A') = 'A'
    										and		a.nr_interno_conta = nr_interno_conta_w);

				if (obter_se_contido(nr_seq_etapa_conta_w, substr(cd_etapas_p,2,length(cd_etapas_p))) <> substr(cd_etapas_p,1,1)) then
					ie_insere_w	:= 'N';
					goto final;
				end if;
				end;
			end if;
			end;
		end if;
	end if;


	if (cd_medicos_p IS NOT NULL AND cd_medicos_p::text <> '') and (obter_se_contido(cd_medico_exec_w, substr(cd_medicos_p,2,length(cd_medicos_p))) <> substr(cd_medicos_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (cd_setores_p IS NOT NULL AND cd_setores_p::text <> '') and (obter_se_contido(cd_setor_atendimento_w, substr(cd_setores_p,2,length(cd_setores_p))) <> substr(cd_setores_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (ie_lanc_setor_p = 'S') and (cd_setores_p IS NOT NULL AND cd_setores_p::text <> '') then
		if (ie_setor_atend_conta_w = 'S') then
			begin
			select	a.ie_contem
			into STRICT	ie_insere_w
			from (SELECT	'S' ie_contem
				 from	procedimento_paciente
				 where	nr_interno_conta = nr_interno_conta_w
				 and	obter_se_contido(cd_setor_atendimento, substr(cd_setores_p,2,length(cd_setores_p))) = substr(cd_setores_p,1,1)
				 and	coalesce(cd_motivo_exc_conta::text, '') = ''
				 group by cd_setor_atendimento
				
union

				 SELECT	'S' ie_contem
				 from	material_atend_paciente
				 where	nr_interno_conta = nr_interno_conta_w
				 and	obter_se_contido(cd_setor_atendimento, substr(cd_setores_p,2,length(cd_setores_p))) = substr(cd_setores_p,1,1)
				 and	coalesce(cd_motivo_exc_conta::text, '') = ''
				 group by cd_setor_atendimento) a
			group by a.ie_contem;
			exception
			when others then
				ie_insere_w	:= 'N';
				goto final;
			end;
		else
			begin
			select	a.ie_contem
			into STRICT	ie_insere_w
			from (SELECT	'S' ie_contem
				 from	procedimento_paciente
				 where	nr_atendimento = nr_atendimento_w
				 and	obter_se_contido(cd_setor_atendimento, substr(cd_setores_p,2,length(cd_setores_p))) = substr(cd_setores_p,1,1)
				 and	coalesce(cd_motivo_exc_conta::text, '') = ''
				 group by cd_setor_atendimento
				
union

				 SELECT	'S' ie_contem
				 from	material_atend_paciente
				 where	nr_atendimento = nr_atendimento_w
				 and	obter_se_contido(cd_setor_atendimento, substr(cd_setores_p,2,length(cd_setores_p))) = substr(cd_setores_p,1,1)
				 and	coalesce(cd_motivo_exc_conta::text, '') = ''
				 group by cd_setor_atendimento) a
			group by a.ie_contem;
			exception
			when others then
				ie_insere_w	:= 'N';
				goto final;
			end;
		end if;
	end if;

	/* setores das etapas */

	if (cd_setores_etapa_p IS NOT NULL AND cd_setores_etapa_p::text <> '') then
		begin
		ds_setor_etapa_filtro_w := '';

		if (ie_etapa_conta_w = 'U') then
			select	'S'
			into STRICT	ie_insere_w
			
			where	obter_se_contido(cd_setor_etapa_w, substr(cd_setores_etapa_p,2,length(cd_setores_etapa_p))) = substr(cd_setores_etapa_p,1,1)
			and	((ie_data_p <> 'P') or (dt_ultima_etapa_w between dt_inicial_p and dt_final_p));

			select	substr(obter_nome_setor(cd_setor_etapa_w),1,255)
			into STRICT	ds_setor_etapa_filtro_w
			;
		elsif (ie_etapa_conta_w = 'T') then
			select	coalesce(max('S'),'N')
			into STRICT	ie_insere_w
			from	fatur_etapa b,
				conta_paciente_etapa a
			where	a.nr_seq_etapa		= b.nr_sequencia
			and	a.nr_interno_conta	= nr_interno_conta_w
			and	coalesce(b.ie_situacao,'A')	= 'A'
			and	((coalesce(cd_setores_etapa_p::text, '') = '') or (obter_se_contido(a.cd_setor_atendimento, substr(cd_setores_etapa_p,2,length(cd_setores_etapa_p))) = substr(cd_setores_etapa_p,1,1)))
			and	((ie_data_p <> 'P') or (a.dt_etapa between coalesce(dt_inicial_p,a.dt_etapa) and coalesce(dt_final_p,a.dt_etapa)));

			if (ie_insere_w = 'S') then
				select	substr(obter_select_concatenado_bv(	'select	substr(obter_nome_setor(a.cd_setor_atendimento),1,255)
									from	fatur_etapa b,
										conta_paciente_etapa a
									where	a.nr_seq_etapa		= b.nr_sequencia
									and	a.nr_interno_conta	= :nr_interno_conta
									and	nvl(b.ie_situacao,' || chr(39) || 'A' || chr(39) || ') = ' || chr(39) || 'A' || chr(39) || '
									and	((:cd_setores_etapa_p is null) or (obter_se_contido(a.cd_setor_atendimento, substr(:cd_setores_etapa_p,2,length(:cd_setores_etapa_p))) = substr(:cd_setores_etapa_p,1,1)))
									and	((:ie_data_p <> ' || chr(39) || 'P' || chr(39) || ') or ((a.dt_etapa between nvl(:dt_inicial_p,a.dt_etapa) and nvl(:dt_final_p,a.dt_etapa))))',
									'nr_interno_conta=' || nr_interno_conta_w || '#@#@' ||
									'cd_setores_etapa_p='|| cd_setores_etapa_p|| '#@#@' ||
									'ie_data_p=' || ie_data_p || '#@#@' ||
									'dt_inicial_p=' || dt_inicial_p || '#@#@' ||
									'dt_final_p=' || dt_final_p, ','),1,255)
				into STRICT	ds_setor_etapa_filtro_w
				;
			end if;
		elsif (ie_etapa_conta_w = 'P') then
			begin
			select	x.cd_setor_atendimento,
				x.dt_etapa
			into STRICT	cd_setor_etapa_conta_w,
				dt_etapa_conta_w
			from	conta_paciente_etapa x
			where	x.nr_sequencia =	(SELECT	min(a.nr_seq_etapa)
							from	fatur_etapa b,
								conta_paciente_etapa a
							where	b.nr_sequencia		= a.nr_seq_etapa
							and	coalesce(b.ie_situacao,'A')	= 'A'
							and	a.nr_interno_conta	= nr_interno_conta_w
							and	a.dt_etapa		= (	select	min(x.dt_etapa)
												from	conta_paciente_etapa x
												where	x.nr_interno_conta = a.nr_interno_conta));

			select	'S'
			into STRICT	ie_insere_w
			
			where	obter_se_contido(cd_setor_etapa_conta_w, substr(cd_setores_etapa_p,2,length(cd_setores_etapa_p))) = substr(cd_setores_etapa_p,1,1)
			and	((ie_data_p <> 'P') or (dt_etapa_conta_w between dt_inicial_p and dt_final_p));

			select	substr(obter_nome_setor(cd_setor_etapa_conta_w),1,255)
			into STRICT	ds_setor_etapa_filtro_w
			;
			end;
		elsif (ie_etapa_conta_w = 'O') then
			begin
			select	x.cd_setor_atendimento,
				x.dt_etapa
			into STRICT	cd_setor_etapa_conta_w,
				dt_etapa_conta_w
			from	conta_paciente_etapa x
			where	x.nr_sequencia =	(SELECT	min(a.nr_seq_etapa)
							from	fatur_etapa b,
								conta_paciente_etapa a
							where	b.nr_sequencia		= a.nr_seq_etapa
							and	coalesce(b.ie_situacao,'A')	= 'A'
							and	a.nr_interno_conta	= nr_interno_conta_w
							and	obter_se_contido(a.nr_seq_etapa, substr(cd_etapas_p,2,length(cd_etapas_p))) = substr(cd_etapas_p,1,1)
							and	a.dt_etapa		= (	select	min(x.dt_etapa)
												from	conta_paciente_etapa x
												where	x.nr_interno_conta = a.nr_interno_conta
												and	obter_se_contido(x.nr_seq_etapa, substr(cd_etapas_p,2,length(cd_etapas_p))) = substr(cd_etapas_p,1,1)));

			select	'S'
			into STRICT	ie_insere_w
			
			where	obter_se_contido(cd_setor_etapa_conta_w, substr(cd_setores_etapa_p,2,length(cd_setores_etapa_p))) = substr(cd_setores_etapa_p,1,1)
			and	((ie_data_p <> 'P') or (dt_etapa_conta_w between dt_inicial_p and dt_final_p));

			select	substr(obter_nome_setor(cd_setor_etapa_conta_w),1,255)
			into STRICT	ds_setor_etapa_filtro_w
			;
			end;
		end if;
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;

	if (cd_pessoas_etapa_p IS NOT NULL AND cd_pessoas_etapa_p::text <> '') then
		begin
		if (ie_todas_pf_etapa_w = 'T') then
			begin

			select	max(a.cd_pessoa_fisica)
			into STRICT	cd_pessoa_etapa_w
			from	fatur_etapa b,
				conta_paciente_etapa a
			where	a.nr_seq_etapa		= b.nr_sequencia
			and	a.nr_interno_conta	= nr_interno_conta_w
			and	coalesce(b.ie_situacao,'A')	= 'A'
			and	((ie_conta_etapa_pend_p	= 'N') or (ie_conta_etapa_pend_p = 'S' and coalesce(a.dt_fim_etapa::text, '') = ''))
			and	((coalesce(cd_setores_etapa_p::text, '') = '') or (obter_se_contido(a.cd_setor_atendimento, substr(cd_setores_etapa_p,2,length(cd_setores_etapa_p))) = 'S'))
			and	((ie_data_p <> 'P') or (a.dt_etapa between coalesce(dt_inicial_p,a.dt_etapa) and coalesce(dt_final_p,a.dt_etapa)))
			and	((coalesce(cd_etapas_p::text, '') = '') or (obter_se_contido(a.nr_seq_etapa, substr(cd_etapas_p,2,length(cd_etapas_p))) = 'S'))
			and	obter_se_contido(a.cd_pessoa_fisica, substr(cd_pessoas_etapa_p,2,length(cd_pessoas_etapa_p))) = 'S';

			end;
		elsif (ie_todas_pf_etapa_w = 'M') then
			begin

			select	max(a.cd_pessoa_fisica)
			into STRICT	cd_pessoa_etapa_w
			from	fatur_etapa x,
				conta_paciente_etapa a
			where	x.nr_sequencia  = a.nr_seq_etapa
			and	coalesce(x.ie_situacao,'A') = 'A'
			and	a.nr_interno_conta = nr_interno_conta_w
			and	x.nr_seq_etapa = (	SELECT	max(obter_seq_etapa(a.nr_seq_etapa))
							from	fatur_etapa b,
								conta_paciente_etapa a
							where	b.nr_sequencia  = a.nr_seq_etapa
							and	coalesce(b.ie_situacao,'A') = 'A'
							and	a.nr_interno_conta = nr_interno_conta_w);

			end;
		end if;

		if (obter_se_contido(cd_pessoa_etapa_w, substr(cd_pessoas_etapa_p,2,length(cd_pessoas_etapa_p))) <> substr(cd_pessoas_etapa_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
		end;
	end if;

	if (cd_planos_p IS NOT NULL AND cd_planos_p::text <> '') then
		cd_plano_w	:= cd_convenio_w || substr(obter_plano_convenio_atend(nr_atendimento_w,'C'),1,10);		
		if (obter_se_contido_char(cd_plano_w, replace(substr(cd_planos_p,2,length(cd_planos_p)),', ',',')) <> substr(cd_planos_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (cd_setor_destino_p IS NOT NULL AND cd_setor_destino_p::text <> '')and (substr(cd_setor_destino_p,1,1) = 'N')then
		begin

		begin
		select	'N'
		into STRICT	ie_insere_w
		
		where	exists (	SELECT 	1
				from	protocolo_documento a,
					protocolo_doc_item b
				where	b.nr_documento	= nr_atendimento_w
				and	a.ie_tipo_protocolo = 2
				and	a.nr_sequencia = b.nr_sequencia
				and	(a.cd_setor_destino IS NOT NULL AND a.cd_setor_destino::text <> '')
				and	obter_se_contido(a.cd_setor_destino, substr(cd_setor_destino_p,2,length(cd_setor_destino_p))) <> substr(cd_setor_destino_p,1,1)
				group by a.cd_setor_destino);
		exception
			when others then
			ie_insere_w := 'S';
			end;
		end;
	end if;

	if (cd_setor_destino_p IS NOT NULL AND cd_setor_destino_p::text <> '')and (substr(cd_setor_destino_p,1,1) = 'S')then
		begin

		begin
		select	'S'
		into STRICT	ie_insere_w
		
		where	exists (	SELECT 	1
				from	protocolo_documento a,
					protocolo_doc_item b
				where	b.nr_documento	= nr_atendimento_w
				and	a.ie_tipo_protocolo = 2
				and	a.nr_sequencia = b.nr_sequencia
				and	(a.cd_setor_destino IS NOT NULL AND a.cd_setor_destino::text <> '')
				and	obter_se_contido(a.cd_setor_destino, substr(cd_setor_destino_p,2,length(cd_setor_destino_p))) = substr(cd_setor_destino_p,1,1)
				group by a.cd_setor_destino);
		exception
			when others then
			ie_insere_w := 'N';
			end;
		end;
	end if;

	if (nr_seq_estagio_aut_p IS NOT NULL AND nr_seq_estagio_aut_p::text <> '') then
		begin

		begin
		select 	'S'
		into STRICT	ie_insere_w
		from	autorizacao_convenio
		where	nr_atendimento	= nr_atendimento_w
		and	obter_se_contido(nr_seq_estagio, substr(nr_seq_estagio_aut_p,2,length(nr_seq_estagio_aut_p))) = substr(nr_seq_estagio_aut_p,1,1)
		group by nr_seq_estagio;
		exception
			when others then
			ie_insere_w := 'N';
			goto final;
			end;
		end;
	end if;

	if (nr_seq_estagio_conta_p IS NOT NULL AND nr_seq_estagio_conta_p::text <> '') and (obter_se_contido(nr_seq_estagio_conta_w, substr(nr_seq_estagio_conta_p,2,length(nr_seq_estagio_conta_p))) <> substr(nr_seq_estagio_conta_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	/*Alteracao para otimizar a busca dos procedimentos apenas se for utilizado algum filtro por procedimento ou opcao de listar estiver marcada*/

	if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') or (cd_tipos_procedimento_p IS NOT NULL AND cd_tipos_procedimento_p::text <> '') or (ie_conta_sem_proced_p <> 'A') or (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') or (cd_area_procedimento_p IS NOT NULL AND cd_area_procedimento_p::text <> '') or (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') or (nr_seq_grupo_sus_p IS NOT NULL AND nr_seq_grupo_sus_p::text <> '') or (nr_seq_subgrupo_sus_p IS NOT NULL AND nr_seq_subgrupo_sus_p::text <> '') or (nr_seq_forma_org_sus_p IS NOT NULL AND nr_seq_forma_org_sus_p::text <> '') or (nr_proc_interno_p IS NOT NULL AND nr_proc_interno_p::text <> '') or (ie_listar_proced_p = 'S') then
		begin
		/*Verifica se existe algum procedimento gravado na tabela para este atendimento*/

		begin
		select	nr_sequencia
		into STRICT	nr_sequencia_proc_w
		from	w_eis_conta_pendente
		where	nr_atendimento 	= nr_atendimento_w
		and	nm_usuario	= nm_usuario_p
		and	nr_interno_conta = nr_interno_conta_w
		and	coalesce(cd_procedimento,0) <> 0
		and	coalesce(ie_origem_proced,0) <> 0  LIMIT 1;
		exception
		when others then
			nr_sequencia_proc_w := 0;
		end;

		/*Se achou, busca o procedimento e origem proced*/

		if (nr_sequencia_proc_w > 0) then
			begin
			select	cd_procedimento,
				ie_origem_proced
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w
			from	w_eis_conta_pendente
			where	nr_sequencia = nr_sequencia_proc_w;
			exception
			when others then
				cd_procedimento_w	:= null;
				ie_origem_proced_w	:= null;
			end;
		/*Se ainda nao tem, busca o proc principal do atendimento e verifica se este esta lancado no EIS para o atendimento*/

		elsif (nr_sequencia_proc_w = 0) then
			ds_proc_aux_w		:= substr(obter_proc_principal(nr_atendimento_w,cd_convenio_w,null,nr_interno_conta_w,'EIS'),1,20);

			cd_procedimento_aux_w	:= substr(ds_proc_aux_w,2,15);
			ie_origem_proced_aux_w	:= substr(ds_proc_aux_w,1,1);

			cd_procedimento_w	:= cd_procedimento_aux_w;
			ie_origem_proced_w	:= ie_origem_proced_aux_w;

			/*Verifica se tem o proc principal do atendimento na tabela*/

			if (nr_sequencia_proc_w = 0) and (coalesce(cd_procedimento_w,0) <> 0) and (coalesce(ie_origem_proced_w,0) <> 0) then
				begin
				select	nr_sequencia
				into STRICT	nr_sequencia_proc_w
				from	w_eis_conta_pendente
				where	nr_atendimento 	= nr_atendimento_w
				and	nm_usuario	= nm_usuario_p
				and	cd_procedimento	= cd_procedimento_w
				and	ie_origem_proced= ie_origem_proced_w  LIMIT 1;
				exception
				when others then
					nr_sequencia_proc_w := 0;
				end;
			end if;

			/*Se ainda nao encontrou nenhum, busca por qualquer procedimento da conta*/

			if (coalesce(cd_procedimento_w,0) = 0) then
				begin
				select	nr_sequencia,
					cd_procedimento,
					ie_origem_proced
				into STRICT	nr_sequencia_proc_w,
					cd_procedimento_w,
					ie_origem_proced_w
				from	procedimento_paciente
				where	nr_interno_conta = nr_interno_conta_w
				and	coalesce(cd_motivo_exc_conta::text, '') = ''  LIMIT 1;
				exception
				when others then
					nr_sequencia_proc_w := 0;
				end;
			end if;
		end if;

		if (coalesce(cd_procedimento_w,0) <> 0) and (coalesce(ie_origem_proced_w,0) = 0) then
			select	max(ie_origem_proced)
			into STRICT	ie_origem_proced_w
			from	procedimento
			where	cd_procedimento = cd_procedimento_w;
		end if;
		end;

		ds_procedimento_w:= null;
		if (coalesce(cd_procedimento_w,0) <> 0) and (coalesce(ie_origem_proced_w,0) <> 0) then

		   select  max(ds_procedimento)
		   into STRICT	   ds_procedimento_w
		   from	   procedimento
		   where   cd_procedimento = cd_procedimento_w
		   and 	   ie_origem_proced = ie_origem_proced_w;

		end if;
	end if;

	if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
		begin
		if (coalesce(ie_somente_proc_conta_w,'N') = 'N') and (obter_se_contido(cd_procedimento_w,substr(cd_procedimento_p,2,length(cd_procedimento_p))) <> substr(cd_procedimento_p,1,1))then
			ie_insere_w	:= 'N';
			goto final;
		else
			begin

			begin
			
				if (substr(cd_procedimento_p,1,1) = 'S') then
					select	coalesce(max('S'),'N')
					into STRICT	ie_insere_w
					from	procedimento_paciente
					where	nr_interno_conta = nr_interno_conta_w
					and	nr_atendimento = nr_atendimento_w
					and	coalesce(cd_motivo_exc_conta::text, '') = ''
					and	obter_se_contido(cd_procedimento,substr(cd_procedimento_p,2,length(cd_procedimento_p))) = substr(cd_procedimento_p,1,1)  LIMIT 1;
				else
					
					select	coalesce(max('N'),'S')
					into STRICT	ie_insere_w
					
					where	exists (	SELECT	1
							from	procedimento_paciente
							where	nr_interno_conta = nr_interno_conta_w
							and	nr_atendimento = nr_atendimento_w
							and	coalesce(cd_motivo_exc_conta::text, '') = ''
							and	obter_se_contido(cd_procedimento,substr(cd_procedimento_p,2,length(cd_procedimento_p))) <> substr(cd_procedimento_p,1,1));
				end if;
				
			
			exception
			when others then
				ie_insere_w := 'N';
			end;

			if (ie_insere_w = 'N') then
				goto final;
			end if;
			end;
		end if;
		end;
	end if;
	

	
	if (nr_proc_interno_p IS NOT NULL AND nr_proc_interno_p::text <> '') then
		begin
		
			if (coalesce(ie_somente_proc_conta_w,'N') = 'N') and (obter_se_contido(cd_procedimento_w,substr(nr_proc_interno_p,2,length(nr_proc_interno_p))) <> substr(nr_proc_interno_p,1,1))then
				ie_insere_w	:= 'N';
				goto final;
			else
			
				begin

					begin
					
						if (substr(nr_proc_interno_p,1,1) = 'S') then
							select	coalesce(max('S'),'N')
							into STRICT	ie_insere_w
							from	procedimento_paciente
							where	nr_interno_conta = nr_interno_conta_w
							and	nr_atendimento = nr_atendimento_w
							and	coalesce(cd_motivo_exc_conta::text, '') = ''
							and	obter_se_contido(nr_seq_proc_interno,substr(nr_proc_interno_p,2,length(nr_proc_interno_p))) = substr(nr_proc_interno_p,1,1)  LIMIT 1;
						else
							
							select	coalesce(max('N'),'S')
							into STRICT	ie_insere_w
							
							where	exists (	SELECT	1
									from	procedimento_paciente
									where	nr_interno_conta = nr_interno_conta_w
									and	nr_atendimento = nr_atendimento_w
									and	coalesce(cd_motivo_exc_conta::text, '') = ''
									and	obter_se_contido(nr_seq_proc_interno,substr(nr_proc_interno_p,2,length(nr_proc_interno_p))) <> substr(nr_proc_interno_p,1,1));
						end if;
						
					
					exception
					when others then
						ie_insere_w := 'N';
					end;

					if (ie_insere_w = 'N') then
						goto final;
					end if;
				end;
			end if;
		end;
	end if;

	if	(cd_tipos_procedimento_p IS NOT NULL AND cd_tipos_procedimento_p::text <> '' AND cd_tipos_procedimento_p <> '0') then

		if (coalesce(ie_somente_proc_conta_w,'N') = 'S') then

			begin
			select	coalesce(max('S'),'N')
			into STRICT	ie_insere_w
			from	procedimento_paciente a,
				procedimento	b
			where	a.cd_procedimento	= b.cd_procedimento
			and	a.ie_origem_proced	= b.ie_origem_proced
			and	a.nr_interno_conta 	= nr_interno_conta_w
			and	a.nr_atendimento 	= nr_atendimento_w
			and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
			and (obter_se_contido(b.cd_tipo_procedimento,
							substr(cd_tipos_procedimento_p,2,length(cd_tipos_procedimento_p))) =
							substr(cd_tipos_procedimento_p,1,1))  LIMIT 1;
			exception
			when others then
				ie_insere_w := 'N';
			end;
		elsif (coalesce(cd_procedimento_w,0) <> 0) and (coalesce(ie_origem_proced_w,0) <> 0) and (obter_se_contido(obter_tipo_procedimento(cd_procedimento_w,ie_origem_proced_w,'C'),substr(cd_tipos_procedimento_p,2,length(cd_tipos_procedimento_p))) <> substr(cd_tipos_procedimento_p,1,1))then
			ie_insere_w	:= 'N';
		end if;

		if (ie_insere_w = 'N') then
			goto final;
		end if;

	end if;

	if (coalesce(cd_procedimento_w,0) = 0) and (coalesce(ie_conta_sem_proced_p,'C') = 'C') then
		begin
		ie_insere_w	:= 'N';
		goto final;
		end;
	elsif (coalesce(cd_procedimento_w,0) > 0) and (coalesce(ie_conta_sem_proced_p,'C') = 'S') then
		begin
		ie_insere_w	:= 'N';
		goto final;
		end;
	end if;

	if (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') then
		begin
		cd_grupo_proc_w	:= obter_grupo_procedimento(cd_procedimento_w, ie_origem_proced_w, 'C');
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
			end;

		if (obter_se_contido(cd_grupo_proc_w,substr(cd_grupo_proc_p,2,length(cd_grupo_proc_p))) <> substr(cd_grupo_proc_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (cd_area_procedimento_p IS NOT NULL AND cd_area_procedimento_p::text <> '') then
		begin
		cd_area_procedimento_w	:= obter_area_procedimento(cd_procedimento_w,ie_origem_proced_w);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
			end;

		if (obter_se_contido(cd_area_procedimento_w,substr(cd_area_procedimento_p,2,length(cd_area_procedimento_p))) <> substr(cd_area_procedimento_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;

	end if;

	if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') then
		begin
		cd_especialidade_w	:= obter_especialidade_proced(cd_procedimento_w,ie_origem_proced_w);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
			end;

		if (obter_se_contido(cd_especialidade_w,substr(cd_especialidade_p,2,length(cd_especialidade_p))) <> substr(cd_especialidade_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (nr_seq_grupo_sus_p IS NOT NULL AND nr_seq_grupo_sus_p::text <> '') then
		begin
		nr_seq_grupo_sus_w	:= sus_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, 'S', 'G');
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
			end;

		if (obter_se_contido(nr_seq_grupo_sus_w,substr(nr_seq_grupo_sus_p,2,length(nr_seq_grupo_sus_p))) <> substr(nr_seq_grupo_sus_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (nr_seq_subgrupo_sus_p IS NOT NULL AND nr_seq_subgrupo_sus_p::text <> '') then
		begin
		nr_seq_subgrupo_sus_w	:= sus_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, 'S', 'S');
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
			end;

		if (obter_se_contido(nr_seq_subgrupo_sus_w,substr(nr_seq_subgrupo_sus_p,2,length(nr_seq_subgrupo_sus_p))) <> substr(nr_seq_subgrupo_sus_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (nr_seq_forma_org_sus_p IS NOT NULL AND nr_seq_forma_org_sus_p::text <> '') then
		begin
		nr_seq_forma_org_sus_w	:= sus_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, 'S', 'F');
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
			end;

		if (obter_se_contido(nr_seq_forma_org_sus_w,substr(nr_seq_forma_org_sus_p,2,length(nr_seq_forma_org_sus_p))) <> substr(nr_seq_forma_org_sus_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (ie_complexidade_p IS NOT NULL AND ie_complexidade_p::text <> '') then
		begin
		select	coalesce(max('S'),'N')
		into STRICT	ie_insere_w
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_w
		and	sus_obter_tiporeg_proc(cd_procedimento, ie_origem_proced, 'C', 13) = '3'
		and	obter_se_contido_char(sus_obter_complexidade_proced(cd_procedimento,ie_origem_proced, 'C'), replace(substr(ie_complexidade_p,2,length(ie_complexidade_p)),', ',',')) = substr(ie_complexidade_p,1,1);

		if (ie_insere_w = 'N') then
			goto final;
		end if;

		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;

	if (ie_tipo_guia_conv_p IS NOT NULL AND ie_tipo_guia_conv_p::text <> '') then
		begin
		select	coalesce(max('S'),'N')
		into STRICT	ie_insere_w
		
		where (obter_se_contido_char(substr(obter_tipo_guia_convenio(nr_atendimento_w),1,1),replace(substr(ie_tipo_guia_conv_p,2,length(ie_tipo_guia_conv_p)),', ',',')) = substr(ie_tipo_guia_conv_p,1,1));
		end;
	end if;

	if (cd_setores_ult_int_p IS NOT NULL AND cd_setores_ult_int_p::text <> '') then
		cd_setor_ult_int_w := obter_unidade_atendimento(nr_atendimento_w,'IA','CS');

		if (obter_se_contido(cd_setor_ult_int_w,substr(cd_setores_ult_int_p,2,length(cd_setores_ult_int_p))) <> substr(cd_setores_ult_int_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (cd_setor_entrega_prescr_p IS NOT NULL AND cd_setor_entrega_prescr_p::text <> '') then
		begin
		if (substr(cd_setor_entrega_prescr_p,1,1) = 'S') then
			select	count(1)
			into STRICT	qt_existe_w
			from	prescr_medica
			where	nr_atendimento = nr_atendimento_w
			and (obter_se_contido(cd_setor_entrega,substr(cd_setor_entrega_prescr_p,2,length(cd_setor_entrega_prescr_p))) = substr(cd_setor_entrega_prescr_p,1,1))  LIMIT 1;

			if (qt_existe_w = 0) then
				ie_insere_w	:= 'N';
				goto final;
			end if;
		elsif (substr(cd_setor_entrega_prescr_p,1,1) = 'N') then
			select	count(1)
			into STRICT	qt_existe_w
			from	prescr_medica
			where	nr_atendimento = nr_atendimento_w
			and (obter_se_contido(cd_setor_entrega,substr(cd_setor_entrega_prescr_p,2,length(cd_setor_entrega_prescr_p))) <> substr(cd_setor_entrega_prescr_p,1,1))  LIMIT 1;

			if (qt_existe_w > 0) then
				ie_insere_w	:= 'N';
				goto final;
			end if;
		end if;
		end;
	end if;

	if (cd_motivos_devol_etapa_p IS NOT NULL AND cd_motivos_devol_etapa_p::text <> '') then
		begin

		select	'S'
		into STRICT	ie_insere_w
		
		where	obter_se_contido(cd_motivo_devol_etapa_w, substr(cd_motivos_devol_etapa_p,2,length(cd_motivos_devol_etapa_p))) = substr(cd_motivos_devol_etapa_p,1,1);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;
	if (cd_motivos_devol_etapa_p IS NOT NULL AND cd_motivos_devol_etapa_p::text <> '') and (obter_se_contido(cd_motivo_devol_etapa_w, substr(cd_motivos_devol_etapa_p,2,length(cd_motivos_devol_etapa_p))) <> substr(cd_motivos_devol_etapa_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (ie_tipos_atend_conta_p IS NOT NULL AND ie_tipos_atend_conta_p::text <> '') and (obter_se_contido(ie_tipo_atend_conta_w, substr(ie_tipos_atend_conta_p,2,length(ie_tipos_atend_conta_p))) <> substr(ie_tipos_atend_conta_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (cd_tipo_regulacao_p IS NOT NULL AND cd_tipo_regulacao_p::text <> '') then
		select	substr(obter_eme_dados_regul_atend(nr_atendimento_w,'TP'),1,1)
		into STRICT	ie_tipo_regulacao_w
		;

		select	coalesce(max('S'),'N')
		into STRICT	ie_insere_w
		
		where (obter_se_contido_char(substr(obter_eme_dados_regul_atend(nr_atendimento_w,'TP'),1,1),replace(substr(cd_tipo_regulacao_p,2,length(cd_tipo_regulacao_p)),', ',',')) = substr(cd_tipo_regulacao_p,1,1));

		if (ie_insere_w = 'N') then
			goto final;
		end if;
	end if;

	if (cd_tipo_serv_regulacao_p IS NOT NULL AND cd_tipo_serv_regulacao_p::text <> '') then
		select	coalesce(substr(obter_eme_dados_regul_atend(nr_atendimento_w,'TS'),1,10),0)
		into STRICT	nr_seq_tipo_serv_regulacao_w
		;

		if (obter_se_contido(nr_seq_tipo_serv_regulacao_w, substr(cd_tipo_serv_regulacao_p,2,length(cd_tipo_serv_regulacao_p))) <> substr(cd_tipo_serv_regulacao_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (cd_procedimento_w = 0) then
		cd_procedimento_w	:= null;
		ie_origem_proced_w	:= null;
	end if;

	if (qt_dias_etapa_p IS NOT NULL AND qt_dias_etapa_p::text <> '') then
		begin

		begin
		select	coalesce(max('S'),'N')
		into STRICT	ie_insere_w
		from	fatur_etapa b,
			conta_paciente_etapa a
		where	a.nr_seq_etapa		= b.nr_sequencia
		and	coalesce(b.ie_situacao,'A')	= 'A'
		and	a.nr_interno_conta		= nr_interno_conta_w
		and	a.nr_seq_etapa		= obter_eis_etapa_conta(nr_interno_conta_w,'C')
		and	coalesce(a.dt_fim_etapa::text, '') = ''
		and	((trunc(clock_timestamp(),'dd') - trunc(a.dt_etapa,'dd')) > qt_dias_etapa_p);

		if (ie_insere_w = 'N') then
			goto final;
		end if;

		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
		end;
	end if;

	if (coalesce(qt_dias_atraso_p,0) > 0) then
		begin
		begin
		select	coalesce(max('S'),'N')
		into STRICT	ie_insere_w
		from	atendimento_paciente a,
				conta_paciente b
		where	a.nr_atendimento = b.nr_atendimento
		and		b.nr_interno_conta = nr_interno_conta_w
		and		((trunc(clock_timestamp(),'dd') - trunc(a.dt_alta,'dd')) > qt_dias_atraso_p);

		if (ie_insere_w = 'N') then
			goto final;
		end if;

		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
		end;
	end if;

	if (ie_laudo_paciente_p <> 'A') then
		begin

		select	count(1)
		into STRICT	qt_existe_laudo_w
		from	laudo_paciente
		where	nr_atendimento = nr_atendimento_w  LIMIT 1;

		if (qt_existe_laudo_w = 0) and (coalesce(ie_laudo_paciente_p,'C') = 'C') then
			begin
			ie_insere_w	:= 'N';
			goto final;
			end;
		elsif (qt_existe_laudo_w > 0) and (coalesce(ie_laudo_paciente_p,'C') = 'S') then
			begin
			ie_insere_w	:= 'N';
			goto final;
			end;
		end if;

		end;
	end if;

	if (cd_tipo_acomodacao_p IS NOT NULL AND cd_tipo_acomodacao_p::text <> '') then
		begin

		begin
		select 	'S'
		into STRICT	ie_insere_w
		from	atend_categoria_convenio a
		where	a.nr_atendimento 	= nr_atendimento_w
		and	a.dt_inicio_vigencia = (	SELECT	max(dt_inicio_vigencia)
					 	from	atend_categoria_convenio b
					 	where	b.nr_atendimento = nr_atendimento_w)
		and	obter_se_contido(a.cd_tipo_acomodacao, substr(cd_tipo_acomodacao_p,2,length(cd_tipo_acomodacao_p))) = substr(cd_tipo_acomodacao_p,1,1)
		group by a.cd_tipo_acomodacao;
		exception
			when others then
			ie_insere_w := 'N';
			end;
		end;
	end if;

	if (coalesce(ie_conta_perda_p,'S') = 'N') and (coalesce(obter_perda_conta_pac_baixa(nr_interno_conta_w),0) <> 0) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (nr_seq_classif_atend_p IS NOT NULL AND nr_seq_classif_atend_p::text <> '') then
		nr_seq_classif_atend_w := obter_classificacao_atend(nr_atendimento_w,'C');

		if (obter_se_contido(nr_seq_classif_atend_w,substr(nr_seq_classif_atend_p,2,length(nr_seq_classif_atend_p))) <> substr(nr_seq_classif_atend_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (cd_med_espec_p IS NOT NULL AND cd_med_espec_p::text <> '') then
		select	count(1)
		into STRICT	qt_existe_w
		from	atendimento_paciente_aux
		where	nr_atendimento = nr_atendimento_w
		and     obter_se_contido_char(cd_especialidade, replace(substr(cd_med_espec_p,2,length(cd_med_espec_p)),', ',',')) = substr(cd_med_espec_p,1,1);

		if (qt_existe_w = 0) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (nr_seq_tipo_admissao_fat_p IS NOT NULL AND nr_seq_tipo_admissao_fat_p::text <> '') then
		select	count(1)
		into STRICT	qt_existe_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w
		and	obter_se_contido_char(nr_seq_tipo_admissao_fat, replace(substr(nr_seq_tipo_admissao_fat_p,2,length(nr_seq_tipo_admissao_fat_p)),', ',',')) = substr(nr_seq_tipo_admissao_fat_p,1,1);

		if (qt_existe_w = 0) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (nr_seq_classificacao_p IS NOT NULL AND nr_seq_classificacao_p::text <> '') then
		nr_seq_classif_atend_w := obter_classificacao_atend(nr_atendimento_w,'C');
		if (obter_se_contido(nr_seq_classif_atend_w,substr(nr_seq_classificacao_p,2,length(nr_seq_classificacao_p))) <> substr(nr_seq_classificacao_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;

	if (coalesce(cd_procedimento_w,0) = 0) or (coalesce(ie_origem_proced_w,0) = 0) then
		cd_procedimento_w	:= null;
		ie_origem_proced_w	:= null;
		nr_sequencia_proc_w	:= null;
	else
		select	count(1)
		into STRICT	qt_existe_proc_w
		from	procedimento
		where	cd_procedimento = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w  LIMIT 1;

		if (qt_existe_proc_w = 0) then
			cd_procedimento_w	:= null;
			ie_origem_proced_w	:= null;
			nr_sequencia_proc_w	:= null;
		end if;
	end if;

	if (cd_setor_prescr_proced_p IS NOT NULL AND cd_setor_prescr_proced_p::text <> '') then
		begin
		select	count(1)
		into STRICT	qt_existe_w
		from	prescr_medica b,
			prescr_procedimento a
		where	b.nr_prescricao = a.nr_prescricao
		and	b.nr_atendimento = nr_atendimento_w
		and (obter_se_contido(a.cd_setor_atendimento,substr(cd_setor_prescr_proced_p,2,length(cd_setor_prescr_proced_p))) = 'S')  LIMIT 1;

		if (substr(cd_setor_prescr_proced_p,1,1) = 'S') then
			if (qt_existe_w = 0) then
				ie_insere_w	:= 'N';
				goto final;
			end if;
		elsif (substr(cd_setor_prescr_proced_p,1,1) = 'N') then
			if (qt_existe_w > 0) then
				ie_insere_w	:= 'N';
				goto final;
			end if;
		end if;
		end;
	end if;

	begin
	ie_status_atend_w	:= ie_probabilidade_alta_w;
	ds_status_atend_w	:= substr(obter_valor_dominio(1267, ie_probabilidade_alta_w),1,255);

	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
		ie_status_atend_w	:= 'X';
		--ds_status_atend_w	:= 'Alta hospitalar';
		ds_status_atend_w	:= wheb_mensagem_pck.get_texto(304107);
	end if;

	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
		dt_status_atend_w	:= dt_alta_w;
	elsif (dt_alta_medico_w IS NOT NULL AND dt_alta_medico_w::text <> '') then
		dt_status_atend_w	:= dt_alta_medico_w;
	elsif (dt_previsto_alta_w IS NOT NULL AND dt_previsto_alta_w::text <> '') then
		dt_status_atend_w	:= dt_previsto_alta_w;
	else
		dt_status_atend_w	:= '';
	end if;

	exception
	when others then
		ds_status_atend_w := '';
	end;

	if (coalesce(ie_tipo_atend_tiss_w,'X') <> 'X') then
		ds_tipo_atend_tiss_w := substr(obter_valor_dominio(1761,ie_tipo_atend_tiss_w),1,255);
	end if;

	if (dt_ref_protocolo_p IS NOT NULL AND dt_ref_protocolo_p::text <> '') then
		begin
		if (coalesce(nr_seq_protocolo_w,0) > 0) then
			select	dt_mesano_referencia
			into STRICT	dt_mesano_ref_prot_w
			from	protocolo_convenio
			where	nr_seq_protocolo = nr_seq_protocolo_w;

			if (trunc(dt_mesano_ref_prot_w,'dd') <> trunc(dt_ref_protocolo_p,'dd')) then
				begin
				ie_insere_w	:= 'N';
				goto final;
				end;
			end if;
		else
			ie_insere_w	:= 'N';
			goto final;
		end if;
		end;
	end if;

	if (ie_cod_setores_conta_p = 'S') then
		begin
		select obter_select_concatenado_bv('select	a.cd_setor_atendimento
						from	valores_atend_paciente_v a
						where	a.nr_interno_conta = :nr_interno_conta
						and	(a.quantidade <> 0 or a.valor <> 0)
						and	a.cd_motivo_exc_conta is null
						and	(nvl(a.nr_seq_proc_pacote,0)  <> a.nr_sequencia)
						group by a.cd_setor_atendimento',
						'nr_interno_conta= ' || nr_interno_conta_w,',')
		into STRICT	ds_cod_setores_conta_w
		;
		end;
	end if;

	if (nm_usuario_recep_atend_p IS NOT NULL AND nm_usuario_recep_atend_p::text <> '') and (obter_se_contido_char(nm_usuario_recep_atend_w,replace(substr(nm_usuario_recep_atend_p,2,length(nm_usuario_recep_atend_p)),', ',',')) <> substr(nm_usuario_recep_atend_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (nr_seq_tipo_lib_guia_p IS NOT NULL AND nr_seq_tipo_lib_guia_p::text <> '') and (obter_se_contido(nr_seq_tipo_lib_guia_w,substr(nr_seq_tipo_lib_guia_p,2,length(nr_seq_tipo_lib_guia_p))) <> substr(nr_seq_tipo_lib_guia_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	ds_municipio_w := '';
	if (coalesce(cd_pessoa_fisica_w,'X') <> 'X') then
		select	substr(obter_compl_pf(cd_pessoa_fisica_w,1,'DSM'),1,40)
		into STRICT	ds_municipio_w
		;
	end if;

	if (cd_agrupamento_setor_p IS NOT NULL AND cd_agrupamento_setor_p::text <> '') and (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') and (obter_se_contido(obter_agrupamento_setor(cd_setor_atendimento_w), substr(cd_agrupamento_setor_p,2,length(cd_agrupamento_setor_p))) <> substr(cd_agrupamento_setor_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (ie_carater_inter_sus_p IS NOT NULL AND ie_carater_inter_sus_p::text <> '') and (obter_se_contido_char(ie_carater_inter_sus_w,replace(substr(ie_carater_inter_sus_p,2,length(ie_carater_inter_sus_p)),', ',',')) <> substr(ie_carater_inter_sus_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	/* valor da conta */

	if (ie_valor_conta_p = 'S') or (ie_maiores_zero_p = 'S') or
		(vl_inicial_p IS NOT NULL AND vl_inicial_p::text <> '' AND vl_final_p IS NOT NULL AND vl_final_p::text <> '') then
		begin
		vl_conta_w	:= obter_valor_conta(nr_interno_conta_w,0);
		exception
			when others then
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;

	begin
	/* verificando se o valor da conta e maior que zero */

	if (ie_maiores_zero_p = 'S') and (coalesce(vl_conta_w,0) <= 0) then
		begin
		ie_insere_w	:= 'N';
		goto final;
		end;
	end if;
	exception
		when others then
		sql_err_w := substr(sqlerrm, 1, 1800);
	end;
	/*valor da conta SUS*/

	begin
	if (ie_valor_conta_sus_p = 'S') then
		vl_conta_sus_w	:= sus_obter_valor_unif(nr_interno_conta_w,0);
	end if;
	exception
		when others then
		sql_err_w := substr(sqlerrm, 1, 1800);
	end;

	/* contas com restricao de valor */

	if (vl_inicial_p IS NOT NULL AND vl_inicial_p::text <> '') and (vl_final_p IS NOT NULL AND vl_final_p::text <> '') then
		begin
		if (vl_conta_w IS NOT NULL AND vl_conta_w::text <> '') then
			vl_conta_ww	:= vl_conta_w;
		else
		vl_conta_ww	:= vl_conta_w;
		end if;
		if (vl_conta_ww	>=vl_inicial_p) and (vl_conta_ww	<=vl_final_p) then
			ie_insere_w	:= 'S';
		else
			ie_insere_w	:= 'N';
			goto final;
		end if;
		end;
	end if;

	/*Verifica se tem mat/med na conta*/

	if (ie_conta_sem_matmed_p <> 'A') then
		begin

		select	count(1)
		into STRICT	qt_existe_matmed_w
		from	material_atend_paciente
		where	nr_interno_conta = nr_interno_conta_w
		and	coalesce(cd_motivo_exc_conta::text, '') = ''  LIMIT 1;

		if (qt_existe_matmed_w = 0) and (coalesce(ie_conta_sem_matmed_p,'C') = 'C') then
			begin
			ie_insere_w	:= 'N';
			goto final;
			end;
		elsif (qt_existe_matmed_w > 0) and (coalesce(ie_conta_sem_matmed_p,'C') = 'S') then
			begin
			ie_insere_w	:= 'N';
			goto final;
			end;
		end if;

		end;
	end if;
	/*Verifica a classificacao da pessoa fisica*/

	if (nr_seq_pessoa_classif_p IS NOT NULL AND nr_seq_pessoa_classif_p::text <> '') then
		begin

		begin
		select	max(nr_seq_classif)
		into STRICT	nr_seq_classif_w
		from	pessoa_classif
		where	cd_pessoa_fisica = cd_pessoa_fisica_w
		and	dt_inicio_vigencia < dt_entrada_w;
		exception
		when others then
			nr_seq_classif_w := 0;
		end;

		if (obter_se_contido(nr_seq_classif_w, substr(nr_seq_pessoa_classif_p,2,length(nr_seq_pessoa_classif_p))) <> substr(nr_seq_pessoa_classif_p,1,1)) then
			ie_insere_w	:= 'N';
			goto final;
		end if;

		end;
	end if;
	/*Verifica a se o atendimento e cancelado ou nao*/

	if (ie_atend_cancel_p <> 'A') then
		begin
		begin
		select	coalesce(max(ie_insere),'N')
		into STRICT	ie_insere_w
		from (SELECT	'S' ie_insere
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w
			and	coalesce(dt_cancelamento::text, '') = ''
			and	ie_atend_cancel_p = 'S'
			
union

			SELECT	'S' ie_insere
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w
			and	(dt_cancelamento IS NOT NULL AND dt_cancelamento::text <> '')
			and	ie_atend_cancel_p = 'C'  LIMIT 1) alias5;
		end;

		if (ie_insere_w = 'N') then
			goto final;
		end if;
		exception
		when others then
		ie_insere_w	:= 'N';
		goto final;
		end;
	end if;

	/* Verifica numero do protocolo documento do atendimento*/

	if (coalesce(ie_protocolo_doc_p,'A') <> 'A') then
		begin

		select	count(1)
		into STRICT	qt_prot_doc_w
		
		where	coalesce(Obter_dados_protocolo_doc(nr_atendimento_w,'SE'),'0') <> '0'  LIMIT 1;

		if (qt_prot_doc_w = 0) and (coalesce(ie_protocolo_doc_p,'A') = 'C') then
			begin
			ie_insere_w	:= 'N';
			goto final;
			end;
		elsif ( qt_prot_doc_w > 0) and (coalesce(ie_protocolo_doc_p,'A') = 'S') then
			begin
			ie_insere_w	:= 'N';
			goto final;
			end;
		end if;
		end;
	end if;

	/*Identificar os prontuarios que nao foram enviados para faturamento*/

	if (cd_setor_prontuario_p IS NOT NULL AND cd_setor_prontuario_p::text <> '') and (substr(cd_setor_prontuario_p,1,1) = 'N') then
		begin

		begin
		select 	'N'
		into STRICT	ie_insere_w
		
		where	exists (SELECT	1
				from	transf_prontuario a
				where	a.nr_atendimento 	= nr_atendimento_w
				and	obter_se_contido(a.cd_setor_destino, substr(cd_setor_prontuario_p,2,length(cd_setor_prontuario_p))) <> substr(cd_setor_prontuario_p,1,1));
		exception
		when others then
			ie_insere_w := 'S';
			goto final;
		end;

		end;
	end if;

	if (cd_setor_prontuario_p IS NOT NULL AND cd_setor_prontuario_p::text <> '') and (substr(cd_setor_prontuario_p,1,1) = 'S') then
		begin

		begin
		select 	'S'
		into STRICT	ie_insere_w
		
		where	exists (SELECT	1
				from	transf_prontuario a
				where	a.nr_atendimento 	= nr_atendimento_w
				and	obter_se_contido(a.cd_setor_destino, substr(cd_setor_prontuario_p,2,length(cd_setor_prontuario_p))) = substr(cd_setor_prontuario_p,1,1));
		exception
		when others then
			ie_insere_w := 'N';
			goto final;
		end;

		end;
	end if;

	if (ie_conta_opme_sus_p <> 'A') then

		select	count(nr_sequencia)
		into STRICT	qt_existe_w
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_w
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	ie_origem_proced = 7
		and	Sus_Obter_Estrut_Proc(cd_procedimento, ie_origem_proced, 'C', 'G') = '7'  LIMIT 1;

		if (ie_conta_opme_sus_p = 'S') and (qt_existe_w = 0) then
			ie_insere_w := 'N';
			goto final;
		elsif (ie_conta_opme_sus_p = 'N') and (qt_existe_w > 0) then
			ie_insere_w := 'N';
			goto final;
		end if;

	end if;

	if (ie_conta_opme_p <> 'A') then

		ds_grupo_opme_param_w := obter_valor_param_usuario(1121, 45, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

		if (ds_grupo_opme_param_w IS NOT NULL AND ds_grupo_opme_param_w::text <> '') then

			select	count(a.nr_sequencia)
			into STRICT	qt_existe_w
			from	material_atend_paciente a
			where	a.nr_interno_conta = nr_interno_conta_w
			and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
			and	obter_classif_material_proced(a.cd_material, null, null) in (1,5,7,10)
			and	obter_se_contido_char(obter_estrutura_material(a.cd_material,'G'), ds_grupo_opme_param_w) = 'S'  LIMIT 1;

			if (ie_conta_opme_p = 'S') then

				if (qt_existe_w = 0) then
					ie_insere_w := 'N';
				elsif (coalesce(cd_cnpj_opme_p,'X') <> 'X') then

					select	count(a.nr_sequencia)
					into STRICT	qt_existe_w
					from	material_atend_paciente a
					where	a.nr_interno_conta = nr_interno_conta_w
					and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
					and	obter_classif_material_proced(a.cd_material, null, null) in (1,5,7,10)
					and	obter_se_contido_char(obter_estrutura_material(a.cd_material,'G'), ds_grupo_opme_param_w) = 'S'
					and 	obter_se_contido_char(a.cd_cgc_fornecedor, replace(substr(cd_cnpj_opme_p,2,length(cd_cnpj_opme_p)),', ',',')) = substr(cd_cnpj_opme_p,1,1)  LIMIT 1;

					if (qt_existe_w = 0) then
						ie_insere_w := 'N';
						goto final;
					end if;
				end if;

			elsif (ie_conta_opme_p = 'N') and (qt_existe_w > 0) then
				ie_insere_w := 'N';
				goto final;
			end if;
		end if;


	end if;

	if (nr_seq_tp_pend_conta_p IS NOT NULL AND nr_seq_tp_pend_conta_p::text <> '') then
		begin

		begin
		nr_seq_estagio_w := (coalesce(obter_valor_param_usuario(1121,46,obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'0'))::numeric;
		exception
		when others then
			nr_seq_estagio_w := 0;
		end;

		if (nr_seq_estagio_w > 0) then
			begin

			begin
			select	count(a.nr_sequencia)
			into STRICT	qt_tipo_pend_cta_w
			from	cta_pendencia a
			where	a.nr_atendimento = nr_atendimento_w
			and	a.nr_interno_conta = nr_interno_conta_w
			and	obter_se_contido(a.nr_seq_tipo, substr(nr_seq_tp_pend_conta_p,2,length(nr_seq_tp_pend_conta_p))) = substr(nr_seq_tp_pend_conta_p,1,1)
			and	a.nr_seq_estagio = nr_seq_estagio_w  LIMIT 1;
			exception
			when others then
				ie_insere_w	:= 'N';
				goto final;
			end;

			if (qt_tipo_pend_cta_w = 0) then
				ie_insere_w	:= 'N';
				goto final;
			end if;

			end;
		else
			begin

			begin
			select	count(a.nr_sequencia)
			into STRICT	qt_tipo_pend_cta_w
			from	cta_pendencia a
			where	a.nr_atendimento = nr_atendimento_w
			and	a.nr_interno_conta = nr_interno_conta_w
			and	obter_se_contido(a.nr_seq_tipo, substr(nr_seq_tp_pend_conta_p,2,length(nr_seq_tp_pend_conta_p))) = substr(nr_seq_tp_pend_conta_p,1,1)  LIMIT 1;
			exception
			when others then
				ie_insere_w	:= 'N';
				goto final;
			end;

			if (qt_tipo_pend_cta_w = 0) then
				ie_insere_w	:= 'N';
				goto final;
			end if;

			end;
		end if;
		end;
	end if;

	if (nr_seq_estag_conta_p IS NOT NULL AND nr_seq_estag_conta_p::text <> '') then
		begin

		begin
		select	count(1)
		into STRICT	qt_estag_pend_cta_w
		from	cta_pendencia a
		where	a.nr_atendimento = nr_atendimento_w
		and	a.nr_interno_conta = nr_interno_conta_w
		and	obter_se_contido(a.nr_seq_estagio, substr(nr_seq_estag_conta_p,2,length(nr_seq_estag_conta_p))) = substr(nr_seq_estag_conta_p,1,1)  LIMIT 1;
		exception
		when others then
			ie_insere_w	:= 'N';
			goto final;
		end;

		if (qt_estag_pend_cta_w = 0) then
			ie_insere_w	:= 'N';
			goto final;
		end if;

		end;
	end if;


	if (nm_usu_ult_etapa_p IS NOT NULL AND nm_usu_ult_etapa_p::text <> '') and (obter_se_contido_char(nm_ultimo_usuario_w,replace(substr(nm_usu_ult_etapa_p,2,length(nm_usu_ult_etapa_p)),', ',',')) <> substr(nm_usu_ult_etapa_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	ds_empresa_referencia_w	:= null;
	if (coalesce(ie_visual_empresa_p,'N') = 'S') and (cd_empresa_w IS NOT NULL AND cd_empresa_w::text <> '') then
		begin

		select	substr(nm_empresa,1,255)
		into STRICT	ds_empresa_referencia_w
		from	empresa_referencia
		where	cd_empresa = cd_empresa_w  LIMIT 1;

		end;
	end if;


	if (nr_seq_classif_etapa_p IS NOT NULL AND nr_seq_classif_etapa_p::text <> '') and (obter_se_contido(nr_seq_classif_etapa_w,substr(nr_seq_classif_etapa_p,2,length(nr_seq_classif_etapa_p))) <> substr(nr_seq_classif_etapa_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;


	if (coalesce(qt_dias_venc_atend_min_p,0) <> 0) and (coalesce(qt_dias_venc_atend_max_p,0) <> 0) then

		qt_dias_venc_atend_w := coalesce(obter_dias_vencimento_atend(nr_atendimento_w,cd_convenio_w),0);

		if not(qt_dias_venc_atend_w between coalesce(qt_dias_venc_atend_min_p,0) and coalesce(qt_dias_venc_atend_max_p,9999)) then
			ie_insere_w := 'N';
			goto final;
		end if;
	end if;

	if (cd_especial_med_atend_p IS NOT NULL AND cd_especial_med_atend_p::text <> '') then
		begin

		cd_especial_med_atend_w	:= substr(coalesce(Obter_Espec_medico_atend(nr_atendimento_w,cd_medico_exec_w,'C'),obter_especialidade_medico(cd_medico_exec_w,'C')),1,50);

		if (obter_se_contido(cd_especial_med_atend_w,substr(cd_especial_med_atend_p,2,length(cd_especial_med_atend_p))) <> substr(cd_especial_med_atend_p,1,1)) then
			begin
			ie_insere_w	:= 'N';
			goto final;
			end;
		end if;

		end;
	end if;

	if (cd_classif_convenio_p IS NOT NULL AND cd_classif_convenio_p::text <> '') and (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (obter_se_contido(obter_classif_conv(cd_convenio_w, 'C'), substr(cd_classif_convenio_p,2,length(cd_classif_convenio_p))) <> substr(cd_classif_convenio_p,1,1)) then
		ie_insere_w	:= 'N';
		goto final;
	end if;

	if (ie_penultima_etapa_p IS NOT NULL AND ie_penultima_etapa_p::text <> '') and (ie_penultima_etapa_p = 'S')then

		begin
		select	substr(a.ds_etapa,1,255) ds_penultima
		into STRICT	ds_penultima_etapa_w
		from	fatur_etapa a,
			conta_paciente_etapa b
		where	a.nr_sequencia  = b.nr_seq_etapa
		and	b.nr_interno_conta = nr_interno_conta_w
		and	b.nr_sequencia = (	SELECT	max(d.nr_sequencia)
						from	fatur_etapa c,
							conta_paciente_etapa d
						where	c.nr_sequencia		= d.nr_seq_etapa
						and	d.nr_interno_conta	= b.nr_interno_conta
						and	d.nr_sequencia		< (	select	max(f.nr_sequencia)
											from	fatur_etapa e,
												conta_paciente_etapa f
											where	e.nr_sequencia		= f.nr_seq_etapa
											and	f.nr_seq_etapa		<> d.nr_seq_etapa --So ira retornar a etapa anterior que for diferente da atual
											and	f.nr_interno_conta	= b.nr_interno_conta)) LIMIT 1;
		exception
		when others then
			ds_penultima_etapa_w := null;
		end;


	end if;
	
	dt_inicio_audit_w	:= null;
	dt_fim_audit_w		:= null;
	dt_lib_audit_w		:= null;
	qt_dias_sem_audit_w	:= null;
	qt_dias_sem_ajuste_audit_w := null;
	ds_setor_leito_pac_w	:= null;
	
	select	max(x.nr_sequencia)
	into STRICT	nr_seq_auditoria_w
	from	auditoria_conta_paciente x
	where	x.nr_interno_conta = nr_interno_conta_w;
	
	if (nr_seq_auditoria_w IS NOT NULL AND nr_seq_auditoria_w::text <> '') then
		select	a.dt_periodo_inicial,
			a.dt_periodo_final,
			a.dt_liberacao
		into STRICT	dt_inicio_audit_w,
			dt_fim_audit_w,
			dt_lib_audit_w
		from	auditoria_conta_paciente a
		where	a.nr_interno_conta = nr_interno_conta_w
		and	a.nr_sequencia = nr_seq_auditoria_w;
	end if;
	
	select	trunc(coalesce(dt_alta_w,clock_timestamp())) - trunc(dt_fim_audit_w)
	into STRICT	qt_dias_sem_audit_w
	;
	
	if (dt_lib_audit_w IS NOT NULL AND dt_lib_audit_w::text <> '') then
		qt_dias_sem_ajuste_audit_w := null;
	elsif (nr_seq_auditoria_w IS NOT NULL AND nr_seq_auditoria_w::text <> '') then
		select	trunc(coalesce(dt_alta_w,clock_timestamp())) - trunc(dt_inicio_audit_w)
		into STRICT	qt_dias_sem_ajuste_audit_w
		from	auditoria_conta_paciente a
		where	a.nr_interno_conta = nr_interno_conta_w
		and	a.nr_sequencia = nr_seq_auditoria_w;
	end if;

	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')	then
		select coalesce(max(nr_seq_interno),0)
		into STRICT 	nr_seq_interno_w
		from	atend_paciente_unidade
		where 	coalesce(dt_saida_unidade::text, '') = ''
		and	nr_atendimento = nr_atendimento_w;
	
		if (nr_seq_interno_w > 0)  then
			select	substr(obter_nome_setor(cd_setor_Atendimento)||' / '||cd_unidade_basica||'-'||cd_unidade_compl,1,255)
			into STRICT	ds_setor_leito_pac_w
			from	atend_paciente_unidade
			where	nr_seq_interno = nr_seq_interno_w;			
		end if;
	end if;	

	select	obter_lote_protocolo(nr_seq_protocolo_w)
	into STRICT	nr_lote_contab_prot_w
	;

	if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
		select	dt_mesano_referencia
		into STRICT	dt_mesano_ref_prot_w
		from	protocolo_convenio
		where	nr_seq_protocolo = nr_seq_protocolo_w;
	end if;
	
	select	obter_dt_ultima_autor_int(nr_atendimento_w)
	into STRICT	dt_ultima_vig_internacao_w
	;

<<final>>
	if (ie_insere_w = 'S') and (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (nr_interno_conta_w <> 0) then
		begin

		insert into w_eis_conta_pendente(	nr_sequencia,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						nr_interno_conta,
						ds_etapa,
						ds_etapa_conta_obs,
						nm_usuario_conta,
						cd_guia,
						ds_ultima_etapa,
						dt_ultima_etapa,
						cd_medico_exec,
						cd_setor_destino,
						cd_unidade_pac,
						cd_setor_atendimento,
						cd_convenio,
						cd_categoria,
						vl_conta,
						vl_conta_sus,
						nr_atendimento,
						cd_procedimento,
						ie_origem_proced,
						nr_seq_protocolo,
						cd_setor_etapa,
						dt_conta_protocolo,
						dt_prev_protocolo,
						ie_status_acerto,
						cd_procedencia,
						nm_ult_usuario_etapa,
						ds_setor_etapa_filtro,
						nr_seq_proc,
						ds_status_atend,
						ds_cod_setores_conta,
						ds_municipio,
						ds_ult_usuario_etapa,
						ie_ult_etapa_receb,
						nm_usuario_receb_etapa,
						ds_usuario_receb_etapa,
						ie_tipo_atend_tiss,
						ds_tipo_atend_tiss,
						cd_setor_inicial,
						nm_paciente,
						ds_conv,
						ds_setor_atend,
						ds_setor_etapa_conta,
						nm_medico_resp,
						ds_tipo_atend,
						dt_entrada_pac,
						dt_alta_pac,
						ds_proced,
						cd_pessoa_etapa,
						nm_pessoa_etapa_conta,
						ds_motivo_devol,
						nm_usuario_recep_atend,
						ds_status_conta,
						ds_proced_atend,
						ds_obs_conta,
						qt_dias_atraso_atend,
						nm_estabelecimento,
						dt_periodo_ini_conta,
						dt_periodo_fim_conta,
						qt_dif_datas_alta_prot,
						ds_tipo_guia_cta,
						ds_categ_conv,
						cd_setor_atual,
						ds_agrup_setor_atual,
						ds_setor_atual,
						ds_agrup_setor,
						ds_setor_dest,
						cd_senha_atend,
						cd_usuario_conv,
						ds_setor_ini,
						nr_seq_classif_etapa,
						ds_classif_etapa,
						ds_empresa_referencia,
						ie_tipo_atend_conta,
						ds_penultima_etapa,
						dt_inicio_audit,
						dt_fim_audit,
						dt_lib_audit,
						qt_dias_sem_audit,
						qt_dias_sem_ajuste_audit,
						ds_setor_leito_pac,
						nr_lote_contab_prot,
						dt_mesano_ref_prot,
						dt_ultima_vig_internacao,
                        dt_mesano_referencia
						)
					values (nextval('w_eis_conta_pendente_seq'),
						cd_estabelecimento_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pessoa_fisica_w,
						nr_interno_conta_w,
						--nvl(ds_etapa_w,'Nao Informado'),
						coalesce(ds_etapa_w, wheb_mensagem_pck.get_texto(304108)),
						ds_etapa_conta_obs_w,
						nm_usuario_w,
						cd_guia_w,
						--nvl(ds_etapa_w,'Nao Informado'),
						coalesce(ds_etapa_w, wheb_mensagem_pck.get_texto(304108)),
						dt_ultima_etapa_w,
						cd_medico_exec_w,
						cd_setor_destino_w,
						cd_unidade_pac_w,
						cd_setor_atendimento_w,
						cd_convenio_w,
						cd_categoria_convenio_w,
						CASE WHEN ie_valor_conta_p='S' THEN vl_conta_w  ELSE 0 END ,
						CASE WHEN ie_valor_conta_sus_p='S' THEN vl_conta_sus_w  ELSE 0 END ,
						nr_atendimento_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_protocolo_w,
						cd_setor_etapa_w,
						dt_conta_protocolo_w,
						dt_prev_protocolo_w,
						ie_status_conta_w,
						cd_procedencia_w,
						nm_ultimo_usuario_w,
						ds_setor_etapa_filtro_w,
						nr_sequencia_proc_w,
						ds_status_atend_w,
						ds_cod_setores_conta_w,
						ds_municipio_w,
						ds_ultimo_usuario_w,
						ie_etapa_recebida_w,
						nm_ultimo_usu_receb_w,
						ds_usuario_receb_etapa_w,
						ie_tipo_atend_tiss_w,
						ds_tipo_atend_tiss_w,
						CASE WHEN cd_setor_inicial_w=0 THEN null  ELSE cd_setor_inicial_w END ,
						nm_pessoa_fisica_w,
						ds_convenio_w,
						ds_setor_atendimento_w,
						ds_setor_etapa_w,
						nm_medico_exec_w,
						ds_tipo_atendimento_w,
						dt_entrada_w,
						dt_alta_w,
						ds_procedimento_w,
						cd_pessoa_etapa_ww,
						nm_pessoa_etapa_w,
						ds_motivo_devol_w,
						nm_usuario_recep_atend_w,
						ds_status_conta_w,
						ds_proced_atend_w,
						ds_obs_conta_w,
						qt_dias_atraso_atend_w,
						nm_estabelecimento_w,
						dt_periodo_ini_conta_w,
						dt_periodo_fim_conta_w,
						qt_dif_datas_alta_prot_w,
						ds_tipo_guia_cta_w,
						ds_categ_conv_w,
						cd_setor_atual_w,
						ds_agrup_setor_atual_w,
						ds_setor_atual_w,
						ds_agrup_setor_w,
						ds_setor_destino_w,
						cd_senha_w,
						cd_usuario_convenio_w,
						ds_setor_inicial_w,
						nr_seq_classif_etapa_w,
						ds_classif_etapa_w,
						ds_empresa_referencia_w,
						ie_tipo_atend_conta_w,
						ds_penultima_etapa_w,
						dt_inicio_audit_w,
						dt_fim_audit_w,
						dt_lib_audit_w,
						qt_dias_sem_audit_w,
						qt_dias_sem_ajuste_audit_w,
						ds_setor_leito_pac_w,
						nr_lote_contab_prot_w,
						dt_mesano_ref_prot_w,
						dt_ultima_vig_internacao_w,
                        dt_mesano_referencia_w
						);	

		end;
	end if;
	end;
	end loop;
	commit;
end loop;

ie_ativar_tela_job_w    := coalesce(obter_valor_param_usuario(1121, 55, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
if ( ie_ativar_tela_job_w = 'S' ) then
        begin
        CALL gerar_eis_conta_pend_controle('F');
        end;
end if;

--Alimentar tabela utilizada nos relatorios
begin
	select	count(1)
	into STRICT	qt_eis_conta_pendente_w
	from	w_eis_conta_pendente;

	delete	
	from 	w_eis_conta_pend_rel_novo
	where	nm_usuario = nm_usuario_p;
	
	if (qt_eis_conta_pendente_w > 0) then	
		
		insert	into w_eis_conta_pend_rel_novo(
			nr_sequencia,
			cd_estabelecimento,
			cd_procedencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_fisica,
			nr_interno_conta,
			ds_etapa,
			ds_etapa_conta_obs,
			nm_usuario_conta,
			cd_guia,
			ds_ultima_etapa,
			dt_ultima_etapa,
			cd_medico_exec,
			nm_ult_usuario_etapa,
			cd_setor_destino,
			cd_unidade_pac,
			cd_setor_atendimento,
			cd_convenio,
			cd_categoria,
			vl_conta,
			ie_status_acerto,
			nr_atendimento,
			cd_procedimento,
			ie_origem_proced,
			nr_seq_protocolo,
			cd_setor_etapa,
			dt_conta_protocolo,
			dt_prev_protocolo,
			vl_conta_sus,
			ds_status_atend,
			ds_setor_etapa_filtro,
			nr_seq_proc,
			ds_penultima_etapa,
			dt_inicio_audit,
			dt_fim_audit,
			dt_lib_audit,
			qt_dias_sem_audit,
			qt_dias_sem_ajuste_audit,
			nr_lote_contab_prot,
			dt_mesano_ref_prot,
			dt_ultima_vig_internacao,
			ds_setor_leito_pac,
			ds_cod_setores_conta,
			ds_municipio,
			ds_ult_usuario_etapa,
			ie_ult_etapa_receb,
			nm_usuario_receb_etapa,
			ds_usuario_receb_etapa,
			ie_tipo_atend_tiss,
			ds_tipo_atend_tiss,
			cd_setor_inicial,
			nm_paciente,
			ds_conv,
			ds_categ_conv,
			ds_setor_atend,
			ds_setor_etapa_conta,
			nm_medico_resp,
			ds_tipo_atend,
			dt_entrada_pac,
			dt_alta_pac,
			ds_proced,
			cd_pessoa_etapa,
			nm_pessoa_etapa_conta,
			ds_motivo_devol,
			nm_usuario_recep_atend,
			ds_status_conta,
			ds_proced_atend,
			ds_obs_conta,
			qt_dias_atraso_atend,
			nm_estabelecimento,
			dt_periodo_ini_conta,
			dt_periodo_fim_conta,
			qt_dif_datas_alta_prot,
			ds_tipo_guia_cta,
			cd_setor_atual,
			ds_agrup_setor_atual,
			ds_setor_atual,
			ds_agrup_setor,
			ds_setor_dest,
			cd_senha_atend,
			cd_usuario_conv,
			ds_tipo_guia_atend,
			ds_setor_ini,
			nr_seq_classif_etapa,
			ds_classif_etapa,
			ds_empresa_referencia,
			ie_tipo_atend_conta,
            dt_mesano_referencia)							
		SELECT	nextval('w_eis_conta_pend_rel_novo_seq'),
			cd_estabelecimento,
			cd_procedencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_fisica,
			nr_interno_conta,
			ds_etapa,
			ds_etapa_conta_obs,
			nm_usuario_conta,
			cd_guia,
			ds_ultima_etapa,
			dt_ultima_etapa,
			cd_medico_exec,
			nm_ult_usuario_etapa,
			cd_setor_destino,
			cd_unidade_pac,
			cd_setor_atendimento,
			cd_convenio,
			cd_categoria,
			vl_conta,
			ie_status_acerto,
			nr_atendimento,
			cd_procedimento,
			ie_origem_proced,
			nr_seq_protocolo,
			cd_setor_etapa,
			dt_conta_protocolo,
			dt_prev_protocolo,
			vl_conta_sus,
			ds_status_atend,
			ds_setor_etapa_filtro,
			nr_seq_proc,
			ds_penultima_etapa,
			dt_inicio_audit,
			dt_fim_audit,
			dt_lib_audit,
			qt_dias_sem_audit,
			qt_dias_sem_ajuste_audit,
			nr_lote_contab_prot,
			dt_mesano_ref_prot,
			dt_ultima_vig_internacao,
			ds_setor_leito_pac,
			ds_cod_setores_conta,
			ds_municipio,
			ds_ult_usuario_etapa,
			ie_ult_etapa_receb,
			nm_usuario_receb_etapa,
			ds_usuario_receb_etapa,
			ie_tipo_atend_tiss,
			ds_tipo_atend_tiss,
			cd_setor_inicial,
			nm_paciente,
			ds_conv,
			ds_categ_conv,
			ds_setor_atend,
			ds_setor_etapa_conta,
			nm_medico_resp,
			ds_tipo_atend,
			dt_entrada_pac,
			dt_alta_pac,
			ds_proced,
			cd_pessoa_etapa,
			nm_pessoa_etapa_conta,
			ds_motivo_devol,
			nm_usuario_recep_atend,
			ds_status_conta,
			ds_proced_atend,
			ds_obs_conta,
			qt_dias_atraso_atend,
			nm_estabelecimento,
			dt_periodo_ini_conta,
			dt_periodo_fim_conta,
			qt_dif_datas_alta_prot,
			ds_tipo_guia_cta,
			cd_setor_atual,
			ds_agrup_setor_atual,
			ds_setor_atual,
			ds_agrup_setor,
			ds_setor_dest,
			cd_senha_atend,
			cd_usuario_conv,
			ds_tipo_guia_atend,
			ds_setor_ini,
			nr_seq_classif_etapa,
			ds_classif_etapa,
			ds_empresa_referencia,
			ie_tipo_atend_conta,
            dt_mesano_referencia
		from 	w_eis_conta_pendente;
		
	end if;
exception
when others then
	--se ocorrer erro nao para o processo do EIS, apenas ira gerar o rel em branco
	null;
	commit;
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_contas_pend_pack ( nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

