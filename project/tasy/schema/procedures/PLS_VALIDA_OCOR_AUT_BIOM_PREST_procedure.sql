-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_biom_prest ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
Procedure utilizada para validar informações da regra de validação da biometria do prestador. Esta 
rotina é utilizada para geração de ocorrência na Autorização / Requisição e Execução 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [x] Tasy (Delphi/Java) [ x] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
 Rotina utilizada para geração de ocorrência na Autorização / Requisição e Execução 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_valida_local_atend_w			varchar(2);
ie_valida_local_atend_finger_w		varchar(2);
nr_seq_prestador_w			bigint;
nr_seq_prestador_web_w			bigint;
nr_seq_requisicao_w			bigint;
ie_gerar_ocorrencia_w			varchar(2)	:= 'N';
ie_gerou_ocor_cabecalho_w		varchar(2);
ie_regra_w				varchar(2);
ie_tipo_item_w				bigint;
nr_seq_oc_benef_w			bigint;
ie_tipo_ocorrencia_w			varchar(2);
cd_pessoa_fisica_w			varchar(10);
nr_seq_lote_w				bigint;

C01 CURSOR FOR 
	SELECT	a.ie_valida_local_atend, 
		a.ie_valida_local_atend_finger 
	into STRICT	ie_valida_local_atend_w, 
		ie_valida_local_atend_finger_w 
	from	pls_validacao_aut_finger a, 
		pls_ocor_aut_combinada b 
	where	b.nr_sequencia 			= nr_seq_ocor_combinada_p 
	and	a.nr_seq_ocor_aut_combinada 	= b.nr_sequencia 
	and	b.dt_inicio_vigencia		<= clock_timestamp() 
	and	((coalesce(b.dt_fim_vigencia::text, '') = '') or (b.dt_fim_vigencia	>= clock_timestamp())) 
	and	a.ie_situacao	= 'A';
	

BEGIN 
open C01;
loop 
fetch C01 into	 
	ie_valida_local_atend_w, 
	ie_valida_local_atend_finger_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ie_gerar_ocorrencia_w	:= 'N';
	 
	if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
		begin 
			select	nr_seq_prestador, 
				nr_seq_prestador_web 
			into STRICT	nr_seq_prestador_w, 
				nr_seq_prestador_web_w 
			from	pls_requisicao 
			where	nr_sequencia	= nr_seq_requisicao_p;
		exception 
		when others then 
			nr_seq_prestador_w	:= null;
			nr_seq_prestador_web_w	:= null;
		end;
 
		if (coalesce(ie_valida_local_atend_w, 'N') = 'S') then 
			ie_gerar_ocorrencia_w	:= pls_valida_prest_local_atend(nr_seq_prestador_w, nr_seq_prestador_web_w, 1, nm_usuario_p);
		end if;
	 
		if (coalesce(ie_valida_local_atend_finger_w, 'N') = 'S' and ie_gerar_ocorrencia_w = 'N') then 
			ie_gerar_ocorrencia_w	:= pls_valida_prest_hab_outro_loc(nr_seq_prestador_w, nr_seq_prestador_web_w, 1, nm_usuario_p);
		end if;
		 
		if (ie_gerar_ocorrencia_w = 'S') then 
			if (ie_utiliza_filtro_p = 'S') then 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, null, null, null, null, null, ie_gerou_ocor_cabecalho_w, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
				if (ie_regra_w	in ('E','N')) then 
					exit;
				end if;
			end if;		
 
			ie_tipo_item_w	:= 5;
			nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
		end if;
		 
		 
	else if (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then 
 
		begin 
			select	nr_seq_prestador, 
				nr_seq_lote_exec    
			into STRICT	nr_seq_prestador_w, 
				nr_seq_lote_w 
			from	pls_execucao_requisicao 
			where	nr_sequencia	= nr_seq_execucao_p;
		exception 
		when others then 
			nr_seq_prestador_w	:= null;
		end;
		 
		begin 
			select	nr_seq_usuario_web 
			into STRICT	nr_seq_prestador_web_w 
			from	pls_lote_execucao_req 
			where	nr_sequencia = nr_seq_lote_w;
		exception 
		when others then 
			nr_seq_prestador_web_w	:= null;
		end;
		 
		if (coalesce(ie_valida_local_atend_w, 'N') = 'S') then 
			ie_gerar_ocorrencia_w	:= pls_valida_prest_local_atend(nr_seq_prestador_w, nr_seq_prestador_web_w,2, nm_usuario_p);
		end if;
		 
		if (coalesce(ie_valida_local_atend_finger_w, 'N') = 'S' and ie_gerar_ocorrencia_w = 'N') then 
			ie_gerar_ocorrencia_w	:= pls_valida_prest_hab_outro_loc(nr_seq_prestador_w, nr_seq_prestador_web_w,2, nm_usuario_p);
		end if;
 
		if ( ie_gerar_ocorrencia_w = 'S') then 
			if (ie_utiliza_filtro_p = 'S') then 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, null, null, null, null, ie_gerou_ocor_cabecalho_w, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
				if (ie_regra_w	in ('E','N')) then 
					exit;
				end if;
			end if;
			 
			ie_tipo_item_w	:= 10;
			nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
					 
			CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
							null, null, nr_seq_execucao_p, 
							null, null, null, 
							null, null, null, 
							nm_usuario_p, cd_estabelecimento_p);
 
		end if;
	end if;
	end if;
	end;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_biom_prest ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

