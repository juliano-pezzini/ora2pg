-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE considerar_itens_consistidos ( nr_prescricao_p bigint, cd_funcao_p bigint, nr_cirurgia_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, cd_setor_atendimento_p bigint, cd_local_estoque_p bigint, nm_usuario_p text ) AS $body$
DECLARE


nr_sequencia_mat_w	bigint;
cd_material_w		bigint;
qt_material_w		double precision;
qt_disp_estoque_consig_w	double precision;
qt_disp_estoque_w		double precision;
ie_consiste_disponivel_w	varchar(1);
ie_consignado_w				varchar(1);
cd_fornec_consignado_w		varchar(14);
qt_conv_estoque_consumo_w	double precision;

ie_baixa_estoque_w		varchar(1);
ie_baixa_estoque_pac_w		varchar(1);
ds_material_w	varchar(250);


C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_material,
		coalesce(cd_fornec_consignado,'0'),
		coalesce(obter_se_material_estoque(cd_estabelecimento_p, cd_estabelecimento_p, cd_material),'S'),
		coalesce(obter_material_baixa_estoq_pac(cd_estabelecimento_p, cd_estabelecimento_p, cd_material),'S')
	from	prescr_material
	where	ie_status_cirurgia	= 'GI'
	and 	cd_motivo_baixa 	= 0
	and	nr_prescricao 		= nr_prescricao_p;


BEGIN

ie_consiste_disponivel_w := obter_param_usuario(900, 83, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_consiste_disponivel_w);

open C01;
loop
fetch C01 into
	nr_sequencia_mat_w,
	cd_material_w,
	cd_fornec_consignado_w,
	ie_baixa_estoque_w,
	ie_baixa_estoque_pac_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (coalesce(nr_cirurgia_p,0)	> 0) and (ie_consiste_disponivel_w = 'S') then

		select 	coalesce(max(ie_consignado),'0')
		into STRICT	ie_consignado_w
		from 	material
		where 	cd_material = cd_material_w;

		select 	coalesce(max(qt_conv_estoque_consumo),1)
		into STRICT	qt_conv_estoque_consumo_w
		from 	material
		where 	cd_material = cd_material_w;

		select 	coalesce(sum(qt_material),0)
		into STRICT	qt_material_w
		from	prescr_material
		where	cd_material 			= cd_material_w
		and 	cd_motivo_baixa 		= 0
		and	nr_prescricao 			= nr_prescricao_p
		and	ie_status_cirurgia		= 'GI'
		and	coalesce(cd_fornec_consignado,'0')	= cd_fornec_consignado_w;

		if (ie_consignado_w = '0') and (ie_baixa_estoque_w = 'S') and (ie_baixa_estoque_pac_w = 'S') then

			qt_disp_estoque_w	:= obter_saldo_disp_estoque(cd_estabelecimento_p,cd_material_w,cd_local_estoque_p,trunc(clock_timestamp(),'dd'));

			if	(qt_disp_estoque_w < (qt_material_w/qt_conv_estoque_consumo_w)) then

				ds_material_w := substr(obter_desc_material(cd_material_w),1,60);

				/*(-20011,'O saldo disponível em estoque do item ' || substr(obter_desc_material(cd_material_w),1,60) ||
								'é insuficiente. Não pode ser atendido, parâmetro [83] ! ' ||
								'Saldo disponível: ' || QT_DISP_ESTOQUE_W || ' Quantidade a baixar: ' || QT_MATERIAL_W || '#@#@');*/
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(233389,	'DS_ITEM_P='||DS_MATERIAL_W || ';' ||
																'QT_DISP_ESTOQUE_P=' || to_char(QT_DISP_ESTOQUE_W) || ';' ||
																'QT_MATERIAL_P= '|| to_char(QT_MATERIAL_W));

			end if;
		end if;

		if (ie_consignado_w = '1') and (ie_baixa_estoque_w = 'S') and (ie_baixa_estoque_pac_w = 'S') then

			qt_disp_estoque_consig_w	:= Obter_Saldo_Estoque_Consig(cd_estabelecimento_p,cd_fornec_consignado_w,cd_material_w,cd_local_estoque_p);

			if (qt_disp_estoque_consig_w < qt_material_w) then

				ds_material_w := substr(obter_desc_material(cd_material_w),1,60);

				/*(-20011,'O saldo disponível em estoque do item ' || substr(obter_desc_material(cd_material_w),1,60) ||
								'é insuficiente. Não pode ser atendido, parâmetro [83] ! ' ||
								'Saldo disponível: ' || qt_disp_estoque_consig_w || ' Quantidade a baixar: ' || qt_material_w || '#@#@');*/
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(233389,	'DS_ITEM_P='||DS_MATERIAL_W || ';' ||
																'QT_DISP_ESTOQUE_P=' || to_char(QT_DISP_ESTOQUE_W) || ';' ||
																'QT_MATERIAL_P= '|| to_char(QT_MATERIAL_W));

			end if;
		end if;

		if (ie_consignado_w = '2') and (ie_baixa_estoque_w = 'S') and (ie_baixa_estoque_pac_w = 'S') then

			qt_disp_estoque_w	:= obter_saldo_disp_estoque(cd_estabelecimento_p,cd_material_w,cd_local_estoque_p,trunc(clock_timestamp(),'dd'));

			if (qt_disp_estoque_w < qt_material_w) and (cd_fornec_consignado_w <> '0') then

				qt_disp_estoque_consig_w	:= Obter_Saldo_Estoque_Consig(cd_estabelecimento_p,cd_fornec_consignado_w,cd_material_w,cd_local_estoque_p);

				if (qt_disp_estoque_consig_w < qt_material_w) then

					ds_material_w := substr(obter_desc_material(cd_material_w),1,60);

					/*(-20011,'O saldo disponível em estoque do item ' || substr(obter_desc_material(cd_material_w),1,60) ||
									'é insuficiente. Não pode ser atendido, parâmetro [83] ! ' ||
									'Saldo disponível: ' || qt_disp_estoque_w || ' Quantidade a baixar: ' || qt_material_w || '#@#@');*/
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(233389,	'DS_ITEM_P='||DS_MATERIAL_W || ';' ||
																'QT_DISP_ESTOQUE_P=' || to_char(QT_DISP_ESTOQUE_W) || ';' ||
																'QT_MATERIAL_P= '|| to_char(QT_MATERIAL_W));

				end if;
			end if;
		end if;


	end if;

	update	prescr_material
	set 	ie_status_cirurgia	= 'CB',
		nm_usuario_consist	= nm_usuario_p,
		dt_atualizacao_consist	= clock_timestamp()
	where	ie_status_cirurgia	= 'GI'
	and 	cd_motivo_baixa 	= 0
	and	nr_prescricao 		= nr_prescricao_p
	and	nr_sequencia		= nr_sequencia_mat_w;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE considerar_itens_consistidos ( nr_prescricao_p bigint, cd_funcao_p bigint, nr_cirurgia_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, cd_setor_atendimento_p bigint, cd_local_estoque_p bigint, nm_usuario_p text ) FROM PUBLIC;

