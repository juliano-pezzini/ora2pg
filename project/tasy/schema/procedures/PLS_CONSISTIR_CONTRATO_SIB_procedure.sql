-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_contrato_sib ( nr_seq_contrato_p bigint, nr_seq_proposta_p bigint, nr_seq_segurado_p bigint, cd_pessoa_fisica_p text, ie_opcao_p text, ie_commit_p text default 'S', nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE


/* ie_opcao_p
	C = Contrato
	P = Proposta
	S = Segurado
	PF = Pessoa física
*/
nr_seq_segurado_w		bigint;
nm_beneficiario_w		varchar(255);
dt_nascimento_w			timestamp;
ie_sexo_w			bigint;
nr_cpf_w			varchar(11);
nr_pis_pasep_w			varchar(11);
nm_mae_benef_w			varchar(255);
cd_cns_w			varchar(15);
nr_identidade_w			varchar(30);
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
cd_nacionalidade_w		varchar(8);
qt_idade_w			smallint;
nr_seq_titular_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_contrato_aux_w		bigint;
ie_tipo_contratacao_w		varchar(2);
cd_plano_ans_w			varchar(20);
cd_plano_ans_pre_w		varchar(20);
ie_segmentacao_w		varchar(3);
ie_abrangencia_w		varchar(3);
ds_logradouro_w			varchar(255);
ds_municipio_w			varchar(100);
uf_w				compl_pessoa_fisica.sg_estado%type;
nr_cep_w			varchar(8);
nr_seq_pais_w			bigint;
ie_brasileiro_w			varchar(1);
cd_usuario_plano_w		varchar(30);
cd_pais_sib_w			varchar(30);
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_resp_w		varchar(10);
nr_cpf_resp_w			varchar(11);
nr_ident_resp_w			varchar(30);
ds_orgao_emissor_ci_resp_w	pessoa_fisica.ds_orgao_emissor_ci%type;
nr_reg_geral_estrang_w		varchar(30);
cd_nacionalidade_resp_w		smallint;
ie_brasileiro_resp_w		varchar(1);
nr_reg_geral_estrang_resp_w	varchar(30);
dt_liberacao_w			timestamp;
cd_pessoa_fisica_tit_w		varchar(10);
nr_cpf_titular_w		varchar(11);
cd_nacionalidade_titular_w	smallint;
nr_reg_geral_estrang_titular_w	varchar(30);
ie_brasileiro_titular_w		varchar(1);
cd_declaracao_nasc_vivo_w	pessoa_fisica.cd_declaracao_nasc_vivo%type;
dt_contratacao_w		timestamp;
cd_muninipio_ibge_res_w		varchar(6);
ie_nome_mae_invalido_w		varchar(10);
ie_nome_benef_invalido_w	varchar(10);
sg_emissora_ci_w		varchar(10);
ie_tipo_logradouro_w		varchar(10);
ds_numero_w			varchar(5);
ds_complemento_w		varchar(255);
ds_bairro_w			varchar(50);

C01 CURSOR FOR
	SELECT	distinct
		a.nr_sequencia,
		substr(b.nm_pessoa_fisica,1,255),
		trunc(b.dt_nascimento,'dd'),
		CASE WHEN b.ie_sexo='M' THEN 1 WHEN b.ie_sexo='F' THEN 3  ELSE 0 END ,
		coalesce(b.nr_cpf,'00000000000'),
		coalesce(b.nr_pis_pasep,'00000000000'),
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		trunc(months_between(clock_timestamp(), trunc(b.dt_nascimento,'month')) / 12),
		a.nr_seq_titular,
		a.nr_seq_contrato,
		coalesce(c.ie_tipo_contratacao,'0'),
		CASE WHEN ie_regulamentacao='R' THEN '000000000'  ELSE coalesce(c.nr_protocolo_ans,'000000000') END ,
		CASE WHEN ie_regulamentacao='R' THEN c.cd_codigo_ant  ELSE '' END ,
		coalesce(c.ie_segmentacao,'0'),
		coalesce(c.ie_abrangencia,'0'),
		coalesce(b.nr_seq_pais,0),
		b.cd_pessoa_fisica,
		b.nr_reg_geral_estrang,
		b.cd_declaracao_nasc_vivo,
		a.dt_contratacao,
		b.sg_emissora_ci,
		e.nr_sequencia
	FROM pls_contrato e, pessoa_fisica b, pls_segurado a
LEFT OUTER JOIN pls_plano c ON (a.nr_seq_plano = c.nr_sequencia)
WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica and a.nr_seq_contrato = e.nr_sequencia  and e.ie_tipo_beneficiario <> 'ENB' and e.nr_sequencia = nr_seq_contrato_p and coalesce(a.dt_rescisao::text, '') = '' and coalesce(a.dt_cancelamento::text, '') = '' and coalesce(ie_opcao_p,'C') = 'C'
	
UNION

	SELECT	distinct
		0 nr_seq_segurado,
		substr(b.nm_pessoa_fisica,1,255),
		trunc(b.dt_nascimento,'dd'),
		CASE WHEN b.ie_sexo='M' THEN 1 WHEN b.ie_sexo='F' THEN 3  ELSE 0 END ,
		coalesce(b.nr_cpf,'00000000000'),
		coalesce(b.nr_pis_pasep,'00000000000'),
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		trunc(months_between(clock_timestamp(), trunc(b.dt_nascimento,'month')) / 12),
		coalesce(a.nr_seq_titular,a.nr_seq_titular_contrato),
		0 nr_seq_contrato,
		coalesce(c.ie_tipo_contratacao,'0'),
		CASE WHEN c.ie_regulamentacao='R' THEN '000000000'  ELSE coalesce(c.nr_protocolo_ans,'000000000') END ,
		CASE WHEN c.ie_regulamentacao='R' THEN c.cd_codigo_ant  ELSE '' END ,
		coalesce(c.ie_segmentacao,'0'),
		coalesce(c.ie_abrangencia,'0'),
		coalesce(b.nr_seq_pais,0),
		b.cd_pessoa_fisica,
		b.nr_reg_geral_estrang,
		b.cd_declaracao_nasc_vivo,
		(	select	max(x.dt_inicio_proposta)
			from	pls_proposta_adesao	x
			where	a.nr_seq_proposta	= x.nr_sequencia),
		b.sg_emissora_ci,
		(	select	max(x.nr_seq_contrato)
			from	pls_proposta_adesao	x
			where	a.nr_seq_proposta	= x.nr_sequencia)
	FROM pessoa_fisica b, pls_proposta_beneficiario a
LEFT OUTER JOIN pls_plano c ON (a.nr_seq_plano = c.nr_sequencia)
WHERE a.cd_beneficiario = b.cd_pessoa_fisica  and a.nr_seq_proposta	= nr_seq_proposta_p and coalesce(ie_opcao_p,'C') = 'P'
	 
union

	select	distinct
		a.nr_sequencia,
		substr(b.nm_pessoa_fisica,1,255),
		trunc(b.dt_nascimento,'dd'),
		CASE WHEN b.ie_sexo='M' THEN 1 WHEN b.ie_sexo='F' THEN 3  ELSE 0 END ,
		coalesce(b.nr_cpf,'00000000000'),
		coalesce(b.nr_pis_pasep,'00000000000'),
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		trunc(months_between(clock_timestamp(), trunc(b.dt_nascimento,'month')) / 12),
		a.nr_seq_titular,
		a.nr_seq_contrato,
		coalesce(c.ie_tipo_contratacao,'0'),
		CASE WHEN ie_regulamentacao='R' THEN '000000000'  ELSE coalesce(c.nr_protocolo_ans,'000000000') END ,
		CASE WHEN ie_regulamentacao='R' THEN c.cd_codigo_ant  ELSE '' END ,
		coalesce(c.ie_segmentacao,'0'),
		coalesce(c.ie_abrangencia,'0'),
		coalesce(b.nr_seq_pais,0),
		b.cd_pessoa_fisica,
		b.nr_reg_geral_estrang,
		b.cd_declaracao_nasc_vivo,
		a.dt_contratacao,
		b.sg_emissora_ci,
		e.nr_sequencia
	FROM pls_contrato e, pessoa_fisica b, pls_segurado a
LEFT OUTER JOIN pls_plano c ON (a.nr_seq_plano = c.nr_sequencia)
WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica and a.nr_seq_contrato = e.nr_sequencia  and e.ie_tipo_beneficiario <> 'ENB' and a.nr_sequencia = nr_seq_segurado_p and coalesce(ie_opcao_p,'C') = 'S'
	 
UNION ALL

	select	distinct
		0 nr_sequencia,
		substr(a.nm_pessoa_fisica,1,255),
		trunc(a.dt_nascimento,'dd'),
		CASE WHEN a.ie_sexo='M' THEN 1 WHEN a.ie_sexo='F' THEN 3  ELSE 0 END ,
		coalesce(a.nr_cpf,'00000000000'),
		coalesce(a.nr_pis_pasep,'00000000000'),
		coalesce(substr(a.nr_cartao_nac_sus,1,15),'000000000000000') cd_cns,
		a.nr_identidade,
		a.ds_orgao_emissor_ci,
		a.cd_nacionalidade,
		trunc(months_between(clock_timestamp(), trunc(A.dt_nascimento,'month')) / 12),
		0 nr_seq_titular,
		0 nr_seq_contrato,
		'0' ie_tipo_contratacao,
		'000000000' nr_protocolo_ans,
		'' cd_codigo_ant,
		'0' ie_segmentacao,
		'0' ie_abrangencia,
		coalesce(a.nr_seq_pais,0),
		a.cd_pessoa_fisica,
		a.nr_reg_geral_estrang,
		a.cd_declaracao_nasc_vivo,
		null,
		a.sg_emissora_ci,
		null
	from	pessoa_fisica a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	coalesce(ie_opcao_p,'C') = 'PF';


BEGIN
/* Alterado pela performance 1412600
delete	pls_lote_consistencia_sib
where	(nr_seq_contrato	= nr_seq_contrato_p and ie_origem_consistencia = 'C')
or	(nr_seq_proposta	= nr_seq_proposta_p and ie_origem_consistencia = 'P')
or	(nr_seq_segurado	= nr_seq_segurado_p and ie_origem_consistencia = 'S')
or	(cd_beneficiario	= cd_pessoa_fisica_p and ie_origem_consistencia = 'PF'); */
If (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then

	delete  FROM pls_lote_consistencia_sib where nr_seq_contrato  = nr_seq_contrato_p and ie_origem_consistencia = 'C';

Elsif  (nr_seq_proposta_p IS NOT NULL AND nr_seq_proposta_p::text <> '') then

	delete  FROM pls_lote_consistencia_sib where nr_seq_proposta  = nr_seq_proposta_p and ie_origem_consistencia = 'P';

Elsif  (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then

	delete  FROM pls_lote_consistencia_sib where nr_seq_segurado  = nr_seq_segurado_p and ie_origem_consistencia = 'S';

Elsif (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

	delete  FROM pls_lote_consistencia_sib where cd_beneficiario  = cd_pessoa_fisica_p and ie_origem_consistencia = 'PF';

End If;


open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	nm_beneficiario_w,
	dt_nascimento_w,
	ie_sexo_w,
	nr_cpf_w,
	nr_pis_pasep_w,
	cd_cns_w,
	nr_identidade_w,
	ds_orgao_emissor_ci_w,
	cd_nacionalidade_w,
	qt_idade_w,
	nr_seq_titular_w,
	nr_seq_contrato_w,
	ie_tipo_contratacao_w,
	cd_plano_ans_w,
	cd_plano_ans_pre_w,
	ie_segmentacao_w,
	ie_abrangencia_w,
	nr_seq_pais_w,
	cd_pessoa_fisica_w,
	nr_reg_geral_estrang_w,
	cd_declaracao_nasc_vivo_w,
	dt_contratacao_w,
	sg_emissora_ci_w,
	nr_seq_contrato_aux_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	--aaschlote 27/04/2011 OS - 309537 - Buscar a data de contratação do beneficiário, caso não houver no cursor
	if (coalesce(dt_contratacao_w::text, '') = '') then
		select	max(dt_contratacao)
		into STRICT	dt_contratacao_w
		from	pls_segurado
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	end if;
	
	if (coalesce(nr_seq_contrato_aux_w::text, '') = '') then
		select	max(nr_seq_contrato)
		into STRICT	nr_seq_contrato_aux_w
		from	pls_segurado
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	end if;
	
	if (ie_opcao_p = 'P') then
		nr_seq_contrato_aux_w	:= pls_obter_seq_contrato(nr_seq_contrato_aux_w);
	end if;
	
	if (nr_seq_contrato_w = 0) then
		nr_seq_contrato_w := null;
	end if;
	
	if (nr_seq_segurado_w = 0) then
		nr_seq_segurado_w := null;
	end if;
	
	/*aaschlote 26/09/2012 OS - 463181*/

	SELECT * FROM pls_obter_enderecos_benef_sib(	cd_pessoa_fisica_w, nr_seq_contrato_aux_w, 'N', '1', ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_muninipio_ibge_res_w, uf_w, nr_cep_w) INTO STRICT ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_muninipio_ibge_res_w, uf_w, nr_cep_w;
	
	begin
	select	a.nm_pessoa_fisica
	into STRICT	nm_mae_benef_w
	from	pessoa_fisica a,
		compl_pessoa_fisica b
	where	b.cd_pessoa_fisica_ref	= a.cd_pessoa_fisica
	and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	b.ie_tipo_complemento	= 5  LIMIT 1;
	exception
	when others then
		nm_mae_benef_w	:= '';
	end;
	
	if (coalesce(nm_mae_benef_w::text, '') = '') then
		begin
		select	a.nm_contato
		into STRICT	nm_mae_benef_w
		from	compl_pessoa_fisica a
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	a.ie_tipo_complemento	= 5  LIMIT 1;
		exception
		when others then
			nm_mae_benef_w	:= '';
		end;
	end if;
	
	ds_logradouro_w	:= replace(ds_logradouro_w,'-','');
	ds_logradouro_w	:= trim(both ds_logradouro_w);
	
	/* Comentado por Lepinski - Não pode Verificar se existe cartão aqui, pois o cartão ainda não foi gerado.
	if (nr_seq_segurado_w <> 0) then
		select	max(cd_usuario_plano)
		into	cd_usuario_plano_w
		from	pls_segurado_carteira
		where	nr_seq_segurado = nr_seq_segurado_w
		AND	ROWNUM		<= 1;
		1- Código do Beneficiário na opradora não informado 
		if 	(cd_usuario_plano_w is null) then	
			pls_gravar_cosistencia_sib (nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '',nm_usuario_p,1,ie_opcao_p);
		end if;
	end if;*/
	
	if (nr_seq_pais_w <> 0) then
		select	cd_pais_sib
		into STRICT	cd_pais_sib_w
		from	pais
		where	nr_sequencia	= nr_seq_pais_w;
	end if;
	
	if (coalesce(cd_nacionalidade_w,'0') <> '0') then
		select	ie_brasileiro
		into STRICT	ie_brasileiro_w
		from	nacionalidade
		where	cd_nacionalidade = cd_nacionalidade_w;
	end if;
	
	/* 2- Nome da mãe do beneficiário não informado*/

	if (coalesce(nm_mae_benef_w::text, '') = '') and (pls_obter_incosistencia_lib(2) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 2, ie_opcao_p);
	end if;
	/* 3 - Nome do Beneficiário não informado*/

	if (coalesce(nm_beneficiario_w::text, '') = '') and (pls_obter_incosistencia_lib(3) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 3, ie_opcao_p);
	end if;
	/* 4 - Data de Nasc. do Beneficiário não informado*/

	if (coalesce(dt_nascimento_w::text, '') = '') and (pls_obter_incosistencia_lib(4) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 4, ie_opcao_p);
	end if;
	/* 5 - Sexo do Beneficiário não informado*/

	if (coalesce(ie_sexo_w,0) = 0) and (pls_obter_incosistencia_lib(5) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 5, ie_opcao_p);
	end if;
	
	if (ie_opcao_p in ('C','S')) then
		begin
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_tit_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_titular_w  LIMIT 1;
		exception
		when others then
			cd_pessoa_fisica_tit_w	:= '0';
		end;
	elsif (ie_opcao_p = 'P') then
		begin
		select	max(cd_beneficiario)
		into STRICT	cd_pessoa_fisica_tit_w
		from	pls_proposta_beneficiario
		where	nr_sequencia	= nr_seq_titular_w  LIMIT 1;
		exception
		when others then
			cd_pessoa_fisica_tit_w	:= '0';
		end;
	end if;
	
	if (coalesce(cd_pessoa_fisica_tit_w::text, '') = '') then
		cd_pessoa_fisica_tit_w	:= '0';
	end if;
	
	if (cd_pessoa_fisica_tit_w <> '0') then
		select	coalesce(max(nr_cpf),0),
			coalesce(max(cd_nacionalidade),0),
			coalesce(max(nr_reg_geral_estrang),'0')
		into STRICT	nr_cpf_titular_w,
			cd_nacionalidade_titular_w,
			nr_reg_geral_estrang_titular_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_tit_w;
		
		if (coalesce(cd_nacionalidade_titular_w,'0') <> '0') then
			select	ie_brasileiro
			into STRICT	ie_brasileiro_titular_w
			from	nacionalidade
			where	cd_nacionalidade = cd_nacionalidade_titular_w;
		end if;
	end if;
	
	select	coalesce(max(cd_pessoa_fisica_ref),'0')
	into STRICT	cd_pessoa_resp_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	ie_tipo_complemento = 3;
	
	if (cd_pessoa_resp_w <> 0) then
		select	coalesce(max(nr_cpf),0),
			coalesce(max(cd_nacionalidade),0),
			coalesce(max(nr_identidade),'0'),
			coalesce(max(ds_orgao_emissor_ci),'0'),
			coalesce(max(nr_reg_geral_estrang),'0')
		into STRICT	nr_cpf_resp_w,
			cd_nacionalidade_resp_w,
			nr_ident_resp_w,
			ds_orgao_emissor_ci_resp_w,
			nr_reg_geral_estrang_resp_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_resp_w;
		
		if (coalesce(cd_nacionalidade_resp_w,'0') <> '0') then
			select	ie_brasileiro
			into STRICT	ie_brasileiro_resp_w
			from	nacionalidade
			where	cd_nacionalidade = cd_nacionalidade_resp_w;
		end if;
	end if;
	
	/* caso o beneficiário for brasileiro verifica se tem CPF, caso contrário não verifica OS  - 406270*/

	if (coalesce(ie_brasileiro_w,'S') = 'S') and (pls_obter_incosistencia_lib(6) = 'S') then	/*Se não tiver CPF*/
		if (nr_cpf_w = '00000000000') then
			if (qt_idade_w	< 18) and (coalesce(nr_seq_titular_w::text, '') = '') then /*Caso o beneficiário seja de menor e titular*/
				CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 6, ie_opcao_p);
			elsif (qt_idade_w	< 18) and (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then /* Caso o beneficiário for menor e possuir um titular*/
				if (coalesce(nm_mae_benef_w::text, '') = '') then /*Verifica se ele tem o nome da mãe informado*/
					CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 6, ie_opcao_p);
				elsif (coalesce(ie_brasileiro_titular_w,'S') = 'N')  and (nr_reg_geral_estrang_titular_w = '0') and /* Verirficar o RG estrangeiro do titular*/
					(nr_reg_geral_estrang_resp_w = '0') then
					CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 6, ie_opcao_p);
				end if;
			elsif (qt_idade_w	>= 18) then /* Caso o beneficiário for maior de 18 */
				CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 6, ie_opcao_p);
			end if;
		end if;
	end if;
	
	if (nr_identidade_w IS NOT NULL AND nr_identidade_w::text <> '') then
		/* 8 -  Orgão Emissor do Documento de Identificação do Beneficiário não informado */

		if (coalesce(ds_orgao_emissor_ci_w::text, '') = '') and (pls_obter_incosistencia_lib(8) = 'S') then
			CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 8, ie_opcao_p);
		end if;
		/* 9 -País Emissor do Documento de Identificação do Beneficiário não informado*/

		if (coalesce(cd_pais_sib_w::text, '') = '') and (pls_obter_incosistencia_lib(9) = 'S') then
			CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 9, ie_opcao_p);
		end if;
		
		/*31 - UF Emissor do Documento de Identificação do Beneficiário não informado*/

		if (coalesce(sg_emissora_ci_w::text, '') = '') and (pls_obter_incosistencia_lib(31) = 'S') then
			CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 31, ie_opcao_p);
		end if;
	else
		/*7 - Documento de Identificação do Beneficiário não informado*/

		if (pls_obter_incosistencia_lib(7) = 'S') then
			CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 7, ie_opcao_p);
		end if;
		/* 22 -  Órgão emissor preenchido sem número carteira de identidade */

		if (ds_orgao_emissor_ci_w IS NOT NULL AND ds_orgao_emissor_ci_w::text <> '') and (pls_obter_incosistencia_lib(22) = 'S') then
			CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 22, ie_opcao_p);
		end if;
	end if;
	
	/* 10 - CEP do Beneficiário não informado*/

	if (nr_cep_w = '00000000') and (pls_obter_incosistencia_lib(10) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 10, ie_opcao_p);
	end if;
	
	/* 11 - UF do Beneficiário não informado*/

	if (coalesce(uf_w::text, '') = '') and (pls_obter_incosistencia_lib(11) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 11, ie_opcao_p);
	end if;
	
	/* 12 - Municipio do Beneficiário não informado*/

	if (coalesce(ds_municipio_w::text, '') = '') and (pls_obter_incosistencia_lib(12) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 12, ie_opcao_p);
	end if;
	
	/* 13 - Logradouro do Beneficiário não informado*/

	if (coalesce(ds_logradouro_w::text, '') = '') and (pls_obter_incosistencia_lib(13) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 13, ie_opcao_p);
	end if;
	
	/*23 - Número do cartão nacional do SUS não informado*/

	if	((coalesce(cd_cns_w::text, '') = '') or (cd_cns_w = '000000000000000')) and (pls_obter_incosistencia_lib(23) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 23, ie_opcao_p);
	end if;
	
	/*24 - Número da declaração de nascido vivo não informado*/

	if (coalesce(cd_declaracao_nasc_vivo_w::text, '') = '') and (dt_nascimento_w >= to_date('01/01/2010','dd/mm/yyyy')) and (pls_obter_incosistencia_lib(24) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 24, ie_opcao_p);
	end if;
	
	/*25 - Número do cartão do SUS deve possuir 15 dígitos*/

	if	((coalesce(cd_cns_w::text, '') = '') or (cd_cns_w	<> '0')) and (length(cd_cns_w) <> 15) and (pls_obter_incosistencia_lib(25) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 25, ie_opcao_p);
	end if;
	
	/*26 - pis/pasep do beneficiário não informado*/

	if	((coalesce(nr_pis_pasep_w::text, '') = '') or (nr_pis_pasep_w = '00000000000')) and (qt_idade_w	> 18) and (coalesce(nr_seq_titular_w::text, '') = '')/*aaschlote 03/12/2011  OS - 390201*/
and (pls_obter_incosistencia_lib(26) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 26, ie_opcao_p);
	end if;
	
	/*27 - Código do município IBGE residencial do beneficiário não informado*/

	if (coalesce(cd_muninipio_ibge_res_w::text, '') = '') and (ie_tipo_logradouro_w = '1') and (pls_obter_incosistencia_lib(27) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 27, ie_opcao_p);
	end if;
	
	/*28 - Nome do beneficiário ou da mãe inválido - Apenas para brasileiros*/

	if (coalesce(ie_brasileiro_w,'S') = 'S') then
		ie_nome_benef_invalido_w	:= pls_consistir_letra_unica_pf(nm_beneficiario_w);
		ie_nome_mae_invalido_w		:= pls_consistir_letra_unica_pf(nm_mae_benef_w);
		
		if	((ie_nome_mae_invalido_w = 'S') or (ie_nome_benef_invalido_w = 'S')) and (pls_obter_incosistencia_lib(28) = 'S') then
			CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 28, ie_opcao_p);
		end if;
	end if;
	
	/*29 - Beneficiário titular possuir plano não regulamentado e individual/familiar superior 01/01/1999*/

	if (ie_tipo_contratacao_w = 'I') and (cd_plano_ans_pre_w IS NOT NULL AND cd_plano_ans_pre_w::text <> '') and (dt_contratacao_w IS NOT NULL AND dt_contratacao_w::text <> '') and (coalesce(nr_seq_titular_w::text, '') = '') and (dt_contratacao_w >= to_date('01/01/1999','dd/mm/yyyy')) and (pls_obter_incosistencia_lib(29) = 'S') then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 29, ie_opcao_p);
	end if;
	
	/* 33 - Número da declaração de nascido vivo inválido */

	if (cd_declaracao_nasc_vivo_w IS NOT NULL AND cd_declaracao_nasc_vivo_w::text <> '') and (pls_obter_incosistencia_lib(33) = 'S') and
		((obter_se_somente_numero(cd_declaracao_nasc_vivo_w) = 'N') or (length(cd_declaracao_nasc_vivo_w) <> 11)) then
		CALL pls_gravar_cosistencia_sib(nr_seq_segurado_w, cd_pessoa_fisica_w, null, nr_seq_contrato_w, nr_seq_proposta_p, '', nm_usuario_p, 33, ie_opcao_p);
	end if;
	end;
end loop;
close C01;

if (ie_opcao_p <> 'C') and (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_contrato_sib ( nr_seq_contrato_p bigint, nr_seq_proposta_p bigint, nr_seq_segurado_p bigint, cd_pessoa_fisica_p text, ie_opcao_p text, ie_commit_p text default 'S', nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

