-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_primeiro_atend_adep (nr_seq_processo_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;				
nr_prescricao_w		bigint;	
nr_seq_solucao_w	integer;
ie_agrupador_w		smallint;
nr_seq_hor_w		prescr_mat_hor.nr_sequencia%type;	
ie_retorno_w		varchar(1);	
cd_material_w		prescr_material.cd_material%type;
ie_gerou_w			varchar(1);
nr_seq_mat_w		prescr_mat_hor.nr_seq_material%type;
		
C01 CURSOR FOR
	SELECT	b.nr_prescricao,
		a.nr_sequencia,
		nr_seq_solucao,
		b.ie_agrupador,
		a.nr_sequencia,
		b.cd_material,
		a.nr_seq_material
	from	prescr_material b,
		prescr_mat_hor a
	where	b.nr_sequencia		= a.nr_seq_material
	and	b.nr_prescricao		= a.nr_prescricao
	and	a.nr_seq_processo	= nr_seq_processo_p
	and	coalesce(a.dt_suspensao::text, '') = ''
	and	obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S'
	and 	b.ie_agrupador in (1,4,5,8,13)
	order by
		b.nr_prescricao desc,
		b.nr_sequencia,
		a.nr_sequencia;	

BEGIN

open C01;
loop
fetch C01 into	
	nr_prescricao_w,
	nr_sequencia_w,
	nr_seq_solucao_w,
	ie_agrupador_w,
	nr_seq_hor_w,
	cd_material_w,
	nr_seq_mat_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (ie_agrupador_w in (1,5)) then   -- Aqui
				
		ie_retorno_w	:= coalesce(obter_se_medic_dupla_chec(cd_material_w, wheb_usuario_pck.get_cd_estabelecimento, nr_prescricao_w),'N');
		
		if (ie_retorno_w = 'N') then		
			select	coalesce(max(ie_dupla_checagem),'N')
			into STRICT	ie_retorno_w
			from	material
			where	cd_material = cd_material_w;			
		end if;
				
		if (ie_retorno_w = 'S') then	
			
			if (ie_agrupador_w = 1) then	--Aqui				
				ie_gerou_w := Gerar_primeira_checagem(nr_seq_hor_w, null, null, 'M', clock_timestamp(), nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerou_w);
			else
				ie_gerou_w := Gerar_primeira_checagem(nr_seq_hor_w, null, null, 'IAG', clock_timestamp(), nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerou_w);
			end if;			
		end if;
	elsif (ie_agrupador_w in (4, 8)) then
		exit;
	end if;

	commit;
	end;
end loop;
close C01;

if (ie_agrupador_w = 4) then
    CALL gerar_primeira_checagem_sol(nr_prescricao_w,nr_seq_solucao_w,1,nr_seq_hor_w,nm_usuario_p,0);
elsif (ie_agrupador_w = 8) then
    CALL gerar_primeira_checagem_sol(nr_prescricao_w,nr_seq_mat_w,2,nr_seq_hor_w,nm_usuario_p,0);
elsif (ie_agrupador_w = 13) then
    CALL gerar_primeira_checagem_hd(nr_prescricao_w,nr_seq_solucao_w,nr_seq_hor_w,nm_usuario_p,0);
end if;

update	adep_processo
set		dt_primeira_checagem = clock_timestamp()
where	nr_sequencia = nr_seq_processo_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_primeiro_atend_adep (nr_seq_processo_p bigint, nm_usuario_p text) FROM PUBLIC;

