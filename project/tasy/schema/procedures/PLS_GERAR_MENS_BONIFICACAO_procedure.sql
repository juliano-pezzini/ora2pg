-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mens_bonificacao ( nr_seq_mensalidade_seg_p bigint, nr_seq_intercambio_p bigint, nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text) AS $body$
DECLARE


tx_bonificacao_w		double precision;
vl_bonificacao_w		double precision;
ie_tipo_item_w			varchar(255);
nr_parcela_inicio_w		bigint;
nr_parcela_fim_w		bigint;
vl_bonific_total_w		double precision := 0;
vl_item_w			double precision := 0;
nr_seq_pagador_w		bigint;
nr_seq_desconto_w		bigint;
qt_vidas_w			bigint;
tx_desconto_w			double precision := 0;
ds_observacao_w			varchar(4000);
qt_idade_w			bigint;
ie_alteracao_vinculacao_w	varchar(1);
nr_seq_vinculo_bonificacao_w	bigint;
vl_mens_desc_w			double precision;
nr_seq_bonificacao_w		bigint;
nr_seq_vinculo_bonif_ant_w	bigint;
nm_bonificacao_w		varchar(100);
nr_seq_seg_mens_w		bigint;
dt_mesano_referencia_w		timestamp;
nr_seq_sca_w			bigint;
ie_restricao_w			varchar(1);
ds_obs_w			varchar(255);
nr_seq_vinculo_sca_w		bigint;
qt_cobertura_w			bigint;
ie_lancamento_mensalidade_w	varchar(2);
vl_preco_pre_w			double precision;
vl_preco_pre_bonific_w		double precision;
vl_minimo_w			double precision;
nm_tabela_preco_w		varchar(255);
nr_seq_tabela_preco_w		bigint;
qt_bonificacao_gerada_w		bigint;
ie_base_maior_valor_w		varchar(1);
nr_seq_titular_w		bigint;
qt_benef_desconto_w		bigint;
nr_seq_segurado_w		bigint;
qt_min_vidas_w			bigint;
i				bigint;
ie_gerar_bonus_w		varchar(1);
nr_seq_sca_vinculo_w		bigint;
vl_preco_atual_sca_w		double precision;
vl_sca_maior_w			double precision;
nr_seq_mensalidade_w		bigint;
vl_item_embutido_w		double precision;
vl_sca_w			double precision;
nr_contrato_principal_w		bigint;
ie_acao_contrato_w		varchar(2);
vl_mens_desconto_w		double precision;
ie_tipo_regra_w			varchar(2);
nr_seq_grupo_contrato_w		bigint;
ds_grupo_contrato_w		varchar(255);
nr_parcela_contrato_w		bigint;
ie_calc_primeira_mens_w		varchar(1);
qt_bonificacao_w		bigint;
qt_parcelas_pagas_inicial_w	bigint;
qt_parcelas_pagas_final_w	bigint;
nr_parcela_dia_w		bigint;
qt_vidas_trabalhista_w		bigint;
qt_vidas_trabalhista_princ_w	bigint;
nr_seq_regra_w			bigint;
ie_situacao_trabalhista_w	varchar(10);
nr_seq_lote_w			bigint;
cd_estabelecimento_w		bigint;
ie_seg_cooperado_w		varchar(1);
ie_cooperado_w			varchar(1);
nr_seq_cooperado_w		bigint;
qt_tempo_cooperado_w		bigint;
qt_tempo_cooperado_inicial_w	bigint;
qt_tempo_cooperado_final_w	bigint;
tx_bonificacao_conjuge_w	double precision;
nr_seq_dependente_legal_w	bigint;
nr_parcela_sca_w		bigint;
nr_parcela_inicial_sca_w	bigint;
nr_parcela_final_sca_w		bigint;
qt_vidas_bonificacao_w		bigint;
nr_seq_segurado_preco_w		bigint;
cd_pessoa_fisica_w		varchar(10);
qt_pessoa_cooperado_w		bigint;
qt_bonific_segurado_w		bigint;
ie_tipo_segurado_regra_w	varchar(1);
ie_tipo_vidas_contrato_w	varchar(2);
ie_possui_bonificacao_w		varchar(1);
ie_demitido_exonerado_w		varchar(10);
qt_vidas_ww			bigint;
ie_titularidade_w		varchar(1);
ie_titularidade_regra_w		varchar(2);
vl_desconto_w			double precision;
nr_seq_bonificacao_obito_w	pls_bonificacao_vinculo.nr_seq_bonificacao%type;
nr_seq_item_mensalidade_w	pls_mensalidade_seg_item.nr_sequencia%type;
nr_seq_forma_cobranca_w		pls_contrato_pagador.nr_seq_forma_cobranca%type;
ie_consiste_parcela_em_dia_w	varchar(1);

nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;
dt_contrato_w			timestamp;
qt_titulares_inicial_w		pls_bonificacao_regra.qt_titulares_inicial%type;
qt_titulares_final_w		pls_bonificacao_regra.qt_titulares_final%type;
qt_titulares_w			integer;
ie_consiste_qt_titular_w	varchar(1);


C01 CURSOR FOR /* Gerar a bonificação para o  Contrato */
	SELECT	b.nr_sequencia,
		a.nr_seq_contrato,
		a.nr_seq_intercambio,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		b.ie_lancamento_mensalidade,
		c.ie_acao_contrato,
		c.ie_tipo_regra,
		coalesce(c.qt_parcelas_pagas_inicial,0),
		coalesce(c.qt_parcelas_pagas_final,0),
		coalesce(ie_cooperado,'N'),
		coalesce(c.qt_tempo_cooperado_inicial,0),
		coalesce(c.qt_tempo_cooperado_final,0),
		tx_bonificacao_conjuge,
		coalesce(c.nr_parcela_inicial_sca,0),
		coalesce(c.nr_parcela_final_sca,9999999999),
		c.ie_tipo_segurado,
		c.ie_tipo_vidas_contrato,
		coalesce(c.ie_possui_bonificacao,'N'),
		coalesce(c.ie_demitido_exonerado,'N'),
		b.nm_bonificacao,
		CASE WHEN coalesce(d.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END  ie_titularidade,
		coalesce(c.ie_titularidade,'A') ie_titularidade_regra,
		coalesce(c.qt_titulares_inicial,0) qt_titulares_inicial,
		coalesce(c.qt_titulares_final,0) qt_titulares_final
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c,
		pls_segurado		d
	where	((a.nr_seq_contrato	= nr_seq_contrato_p) or (a.nr_seq_intercambio = nr_seq_intercambio_p))
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	d.nr_sequencia		= nr_seq_segurado_p
	and	((qt_idade_w	>= c.qt_idade_inicial and (c.qt_idade_inicial IS NOT NULL AND c.qt_idade_inicial::text <> '')) or (coalesce(c.qt_idade_inicial::text, '') = ''))
	and	((qt_idade_w	<= c.qt_idade_final and (c.qt_idade_final IS NOT NULL AND c.qt_idade_final::text <> '')) or (coalesce(c.qt_idade_final::text, '') = ''))
	and	((d.nr_seq_contrato = a.nr_seq_contrato) or (d.nr_seq_intercambio = a.nr_seq_intercambio))
	and (d.nr_seq_parentesco = c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and (c.nr_seq_forma_cobranca = nr_seq_forma_cobranca_w or coalesce(c.nr_seq_forma_cobranca::text, '') = '')
	and	((dt_mesano_referencia_w	>= a.dt_inicio_vigencia and (a.dt_inicio_vigencia IS NOT NULL AND a.dt_inicio_vigencia::text <> '')) or (coalesce(a.dt_inicio_vigencia::text, '') = ''))
	and	((dt_mesano_referencia_w	< a.dt_fim_vigencia and (a.dt_fim_vigencia IS NOT NULL AND a.dt_fim_vigencia::text <> '')) or (coalesce(a.dt_fim_vigencia::text, '') = ''))
	and	((((d.ie_acao_contrato = c.ie_acao_contrato) or (coalesce(c.ie_acao_contrato::text, '') = '')) and (c.nr_seq_desconto IS NOT NULL AND c.nr_seq_desconto::text <> '')) or (coalesce(c.nr_seq_desconto::text, '') = ''))
	order by	c.ie_tipo_item;

C02 CURSOR FOR /* Gerar a bonificação para o Beneficiário */
	SELECT	b.nr_sequencia,
		d.nr_seq_contrato,
		d.nr_seq_intercambio,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		b.ie_lancamento_mensalidade,
		c.ie_acao_contrato,
		c.ie_tipo_regra,
		coalesce(c.qt_parcelas_pagas_inicial,0),
		coalesce(c.qt_parcelas_pagas_final,0),
		coalesce(ie_cooperado,'N'),
		coalesce(c.qt_tempo_cooperado_inicial,0),
		coalesce(c.qt_tempo_cooperado_final,0),
		tx_bonificacao_conjuge,
		coalesce(c.nr_parcela_inicial_sca,0),
		coalesce(c.nr_parcela_final_sca,9999999999),
		c.ie_tipo_segurado,
		c.ie_tipo_vidas_contrato,
		coalesce(c.ie_possui_bonificacao,'N'),
		coalesce(c.ie_demitido_exonerado,'N'),
		b.nm_bonificacao,
		CASE WHEN coalesce(d.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
		coalesce(c.ie_titularidade,'A'),
		coalesce(c.qt_titulares_inicial,0) qt_titulares_inicial,
		coalesce(c.qt_titulares_final,0) qt_titulares_final
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c,
		pls_segurado		d
	where	a.nr_seq_segurado	= nr_seq_segurado_p
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	d.nr_sequencia		= a.nr_seq_segurado
	and	((qt_idade_w	>= c.qt_idade_inicial and (c.qt_idade_inicial IS NOT NULL AND c.qt_idade_inicial::text <> '')) or (coalesce(c.qt_idade_inicial::text, '') = ''))
	and	((qt_idade_w	<= c.qt_idade_final and (c.qt_idade_final IS NOT NULL AND c.qt_idade_final::text <> '')) or (coalesce(c.qt_idade_final::text, '') = ''))
	and (d.nr_seq_parentesco	= c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and (c.nr_seq_forma_cobranca = nr_seq_forma_cobranca_w or coalesce(c.nr_seq_forma_cobranca::text, '') = '')
	and	((dt_mesano_referencia_w	>= a.dt_inicio_vigencia and (a.dt_inicio_vigencia IS NOT NULL AND a.dt_inicio_vigencia::text <> '')) or (coalesce(a.dt_inicio_vigencia::text, '') = ''))
	and	((dt_mesano_referencia_w	< a.dt_fim_vigencia and (a.dt_fim_vigencia IS NOT NULL AND a.dt_fim_vigencia::text <> '')) or (coalesce(a.dt_fim_vigencia::text, '') = ''))
	and	((((d.ie_acao_contrato = c.ie_acao_contrato) or (coalesce(c.ie_acao_contrato::text, '') = '')) and (c.nr_seq_desconto IS NOT NULL AND c.nr_seq_desconto::text <> '')) or (coalesce(c.nr_seq_desconto::text, '') = ''))
	and (b.nr_sequencia = nr_seq_bonificacao_obito_w or coalesce(nr_seq_bonificacao_obito_w::text, '') = '')
	order by	c.ie_tipo_item;

C03 CURSOR FOR /* Gerar a bonificação para o Pagador */
	SELECT	b.nr_sequencia,
		d.nr_seq_contrato,
		d.nr_seq_intercambio,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		b.ie_lancamento_mensalidade,
		c.ie_acao_contrato,
		c.ie_tipo_regra,
		coalesce(c.qt_parcelas_pagas_inicial,0),
		coalesce(c.qt_parcelas_pagas_final,0),
		coalesce(ie_cooperado,'N'),
		coalesce(c.qt_tempo_cooperado_inicial,0),
		coalesce(c.qt_tempo_cooperado_final,0),
		tx_bonificacao_conjuge,
		coalesce(c.nr_parcela_inicial_sca,0),
		coalesce(c.nr_parcela_final_sca,9999999999),
		c.ie_tipo_segurado,
		c.ie_tipo_vidas_contrato,
		coalesce(c.ie_possui_bonificacao,'N'),
		coalesce(c.ie_demitido_exonerado,'N'),
		b.nm_bonificacao,
		CASE WHEN coalesce(d.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
		coalesce(c.ie_titularidade,'A'),
		coalesce(c.qt_titulares_inicial,0) qt_titulares_inicial,
		coalesce(c.qt_titulares_final,0) qt_titulares_final
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c,
		pls_segurado		d
	where	a.nr_seq_pagador	= nr_seq_pagador_w
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	d.nr_sequencia		= nr_seq_segurado_p
	and	((qt_idade_w	>= c.qt_idade_inicial and (c.qt_idade_inicial IS NOT NULL AND c.qt_idade_inicial::text <> '')) or (coalesce(c.qt_idade_inicial::text, '') = ''))
	and	((qt_idade_w	<= c.qt_idade_final and (c.qt_idade_final IS NOT NULL AND c.qt_idade_final::text <> '')) or (coalesce(c.qt_idade_final::text, '') = ''))
	and (d.nr_seq_parentesco	= c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and (c.nr_seq_forma_cobranca = nr_seq_forma_cobranca_w or coalesce(c.nr_seq_forma_cobranca::text, '') = '')
	and	((dt_mesano_referencia_w	>= a.dt_inicio_vigencia and (a.dt_inicio_vigencia IS NOT NULL AND a.dt_inicio_vigencia::text <> '')) or (coalesce(a.dt_inicio_vigencia::text, '') = ''))
	and	((dt_mesano_referencia_w	< a.dt_fim_vigencia and (a.dt_fim_vigencia IS NOT NULL AND a.dt_fim_vigencia::text <> '')) or (coalesce(a.dt_fim_vigencia::text, '') = ''))
	and	((((d.ie_acao_contrato = c.ie_acao_contrato) or (coalesce(c.ie_acao_contrato::text, '') = '')) and (c.nr_seq_desconto IS NOT NULL AND c.nr_seq_desconto::text <> '')) or (coalesce(c.nr_seq_desconto::text, '') = ''))
	and	coalesce(a.ie_lancamento_bonificacao,'B')	<> 'P'
	order by	c.ie_tipo_item;

C04 CURSOR FOR /* Gerar a bonificação SCA para o beneficiário */
	SELECT	b.nr_sequencia,
		f.nr_seq_contrato,
		f.nr_seq_intercambio,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		d.nr_seq_plano,
		d.nr_sequencia,
		b.ie_lancamento_mensalidade,
		coalesce(a.ie_base_maior_valor,'N'),
		c.ie_acao_contrato,
		c.ie_tipo_regra,
		coalesce(c.qt_parcelas_pagas_inicial,0),
		coalesce(c.qt_parcelas_pagas_final,0),
		coalesce(ie_cooperado,'N'),
		coalesce(c.qt_tempo_cooperado_inicial,0),
		coalesce(c.qt_tempo_cooperado_final,0),
		tx_bonificacao_conjuge,
		coalesce(c.nr_parcela_inicial_sca,0),
		coalesce(c.nr_parcela_final_sca,9999999999),
		c.ie_tipo_segurado,
		c.ie_tipo_vidas_contrato,
		coalesce(c.ie_possui_bonificacao,'N'),
		coalesce(c.ie_demitido_exonerado,'N'),
		b.nm_bonificacao,
		CASE WHEN coalesce(f.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
		coalesce(c.ie_titularidade,'A'),
		coalesce(c.qt_titulares_inicial,0) qt_titulares_inicial,
		coalesce(c.qt_titulares_final,0) qt_titulares_final
	from	pls_segurado			f,
		pls_sca_vinculo			d,
		pls_plano			e,
		pls_bonificacao_vinculo		a,
		pls_bonificacao			b,
		pls_bonificacao_regra		c
	where	d.nr_seq_segurado	= f.nr_sequencia
	and	d.nr_seq_plano		= e.nr_sequencia
	and	a.nr_seq_plano		= e.nr_sequencia
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	f.nr_sequencia	 	= nr_seq_segurado_p
	and	((qt_idade_w	>= c.qt_idade_inicial and (c.qt_idade_inicial IS NOT NULL AND c.qt_idade_inicial::text <> '')) or (coalesce(c.qt_idade_inicial::text, '') = ''))
	and	((qt_idade_w	<= c.qt_idade_final and (c.qt_idade_final IS NOT NULL AND c.qt_idade_final::text <> '')) or (coalesce(c.qt_idade_final::text, '') = ''))
	and (f.nr_seq_parentesco	= c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and (c.nr_seq_forma_cobranca = nr_seq_forma_cobranca_w or coalesce(c.nr_seq_forma_cobranca::text, '') = '')
	and	((dt_mesano_referencia_w	>= a.dt_inicio_vigencia and (a.dt_inicio_vigencia IS NOT NULL AND a.dt_inicio_vigencia::text <> '')) or (coalesce(a.dt_inicio_vigencia::text, '') = ''))
	and	((dt_mesano_referencia_w	< a.dt_fim_vigencia and (a.dt_fim_vigencia IS NOT NULL AND a.dt_fim_vigencia::text <> '')) or (coalesce(a.dt_fim_vigencia::text, '') = ''))
	and	((((f.ie_acao_contrato = c.ie_acao_contrato) or (coalesce(c.ie_acao_contrato::text, '') = '')) and (c.nr_seq_desconto IS NOT NULL AND c.nr_seq_desconto::text <> '')) or (coalesce(c.nr_seq_desconto::text, '') = ''))
	and	((coalesce(d.dt_fim_vigencia::text, '') = '') or (d.dt_fim_vigencia > dt_mesano_referencia_w))
	order by	c.ie_tipo_item;

C05 CURSOR FOR /* Gerar a bonificação para o grupo de contrato */
	SELECT	b.nr_sequencia,
		d.nr_seq_contrato,
		d.nr_seq_intercambio,
		c.ie_tipo_item,
		c.nr_parcela_inicial,
		c.nr_parcela_final,
		c.nr_seq_desconto,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		b.ie_lancamento_mensalidade,
		c.ie_acao_contrato,
		c.ie_tipo_regra,
		coalesce(c.qt_parcelas_pagas_inicial,0),
		coalesce(c.qt_parcelas_pagas_final,0),
		coalesce(ie_cooperado,'N'),
		coalesce(c.qt_tempo_cooperado_inicial,0),
		coalesce(c.qt_tempo_cooperado_final,0),
		tx_bonificacao_conjuge,
		coalesce(c.nr_parcela_inicial_sca,0),
		coalesce(c.nr_parcela_final_sca,9999999999),
		c.ie_tipo_segurado,
		c.ie_tipo_vidas_contrato,
		coalesce(c.ie_possui_bonificacao,'N'),
		coalesce(c.ie_demitido_exonerado,'N'),
		b.nm_bonificacao,
		e.ds_grupo,
		CASE WHEN coalesce(d.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
		coalesce(c.ie_titularidade,'A'),
		coalesce(c.qt_titulares_inicial,0) qt_titulares_inicial,
		coalesce(c.qt_titulares_final,0) qt_titulares_final
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c,
		pls_segurado		d,
		pls_grupo_contrato	e,
		pls_contrato_grupo	f,
		pls_contrato		g
	where	a.nr_seq_grupo_contrato	= e.nr_sequencia
	and	f.nr_seq_grupo		= e.nr_sequencia
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	d.nr_seq_contrato	= g.nr_sequencia
	and	f.nr_seq_contrato	= g.nr_sequencia
	and	e.nr_sequencia		= nr_seq_grupo_contrato_w
	and	g.nr_sequencia		= nr_seq_contrato_p
	and	d.nr_sequencia		= nr_seq_segurado_p
	and	((qt_idade_w	>= c.qt_idade_inicial and (c.qt_idade_inicial IS NOT NULL AND c.qt_idade_inicial::text <> '')) or (coalesce(c.qt_idade_inicial::text, '') = ''))
	and	((qt_idade_w	<= c.qt_idade_final and (c.qt_idade_final IS NOT NULL AND c.qt_idade_final::text <> '')) or (coalesce(c.qt_idade_final::text, '') = ''))
	and	((dt_mesano_referencia_w	>= a.dt_inicio_vigencia and (a.dt_inicio_vigencia IS NOT NULL AND a.dt_inicio_vigencia::text <> '')) or (coalesce(a.dt_inicio_vigencia::text, '') = ''))
	and	((dt_mesano_referencia_w	< a.dt_fim_vigencia and (a.dt_fim_vigencia IS NOT NULL AND a.dt_fim_vigencia::text <> '')) or (coalesce(a.dt_fim_vigencia::text, '') = ''))
	and (d.nr_seq_parentesco = c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and (c.nr_seq_forma_cobranca = nr_seq_forma_cobranca_w or coalesce(c.nr_seq_forma_cobranca::text, '') = '')
	and	((((d.ie_acao_contrato = c.ie_acao_contrato) or (coalesce(c.ie_acao_contrato::text, '') = '')) and (c.nr_seq_desconto IS NOT NULL AND c.nr_seq_desconto::text <> '')) or (coalesce(c.nr_seq_desconto::text, '') = ''))
	order by	c.ie_tipo_item;

C06 CURSOR FOR
	SELECT	a.nr_sequencia,
		d.vl_preco_atual
	from	pessoa_fisica		e,
		pls_segurado		a,
		pls_sca_vinculo		b,
		pls_tabela_preco	c,
		pls_plano_preco		d
	where	a.cd_pessoa_fisica	= e.cd_pessoa_fisica
	and	b.nr_seq_segurado	= a.nr_sequencia
	and	b.nr_seq_tabela		= c.nr_sequencia
	and	d.nr_seq_tabela		= c.nr_sequencia
	and	b.nr_seq_plano		= nr_seq_sca_w
	and	coalesce(a.dt_rescisao::text, '') = ''
	and	((a.nr_sequencia = nr_seq_titular_w) or (a.nr_seq_titular = nr_seq_titular_w))
	and	obter_idade_pf(a.cd_pessoa_fisica, dt_mesano_referencia_w, 'A') between d.qt_idade_inicial and d.qt_idade_final
	order by	a.dt_contratacao,
			a.nr_sequencia;


BEGIN

dt_mesano_referencia_w		:= pls_store_data_mens_pck.get_dt_mesano_referencia;
nr_seq_mensalidade_w		:= pls_store_data_mens_pck.get_nr_seq_mensalidade;
nr_seq_segurado_preco_w		:= pls_store_data_mens_pck.get_nr_seq_segurado_preco;
nr_seq_pagador_w		:= pls_store_data_mens_pck.get_nr_seq_pagador;
nr_parcela_contrato_w		:= pls_store_data_mens_pck.get_nr_parcela_contrato;
nr_seq_lote_w			:= pls_store_data_mens_pck.get_nr_seq_lote_mensalidade;
nr_seq_pagador_w		:= pls_store_data_mens_pck.get_nr_seq_pagador;
ie_situacao_trabalhista_w	:= pls_store_data_mens_pck.get_ie_situacao_trabalhista;
cd_estabelecimento_w		:= pls_store_data_mens_pck.get_cd_estabelecimento;
qt_idade_w			:= pls_store_data_mens_pck.get_qt_idade;
cd_pessoa_fisica_w		:= pls_store_data_mens_pck.get_cd_pessoa_fisica;

select	max(b.nr_seq_forma_cobranca)
into STRICT	nr_seq_forma_cobranca_w
from	pls_mensalidade_segurado	a,
	pls_mensalidade			b
where	b.nr_sequencia	= a.nr_seq_mensalidade
and	a.nr_sequencia	= nr_seq_mensalidade_seg_p;

/* Verificar se o beneficiário é cooperado */

select	count(1)
into STRICT	qt_pessoa_cooperado_w
from	pls_cooperado
where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

if (qt_pessoa_cooperado_w > 0) then
	select	max(nr_sequencia)
	into STRICT	nr_seq_cooperado_w
	from	pls_cooperado
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	coalesce(dt_exclusao::text, '') = ''
	and	coalesce(dt_suspensao::text, '') = '';

	begin
	select	trunc(months_between(dt_mesano_referencia_w, dt_inclusao) / 12)
	into STRICT	qt_tempo_cooperado_w
	from	pls_cooperado
	where	nr_sequencia	= nr_seq_cooperado_w;
	exception
	when others then
		qt_tempo_cooperado_w	:= 0;
	end;
end if;

/* Verificar se o contrato está em algum grupo de contrato */

select	max(a.nr_sequencia)
into STRICT	nr_seq_grupo_contrato_w
from	pls_grupo_contrato	a,
	pls_contrato_grupo	b
where	a.nr_sequencia	= b.nr_seq_grupo
and	b.nr_seq_contrato = nr_seq_contrato_p
and	a.ie_tipo_relacionamento = '1';

/* Valor da mensalidade para calcular o desconto da bonificação */

select	sum(a.vl_item)
into STRICT	vl_mens_desc_w
from	pls_mensalidade_seg_item	a,
	pls_mensalidade_segurado	b
where	a.nr_seq_mensalidade_seg = b.nr_sequencia
and	b.nr_sequencia		= nr_seq_mensalidade_seg_p
and	a.ie_tipo_item <> '14'
and	a.ie_tipo_mensalidade <> 'P';

/* Valor do preço pré-estabelecido */

select	max(a.vl_item)
into STRICT	vl_preco_pre_w
from	pls_mensalidade_seg_item	a,
	pls_mensalidade_segurado	b
where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
and	b.nr_sequencia			= nr_seq_mensalidade_seg_p
and	a.ie_tipo_item	= '1';

/* Valor mínimo permitido para a tabela de preço */

begin
select	coalesce(vl_minimo_mensalidade,0),
	nr_seq_tabela
into STRICT	vl_minimo_w,
	nr_seq_tabela_preco_w
from	pls_segurado_preco
where	nr_sequencia		= nr_seq_segurado_preco_w;
exception
when others then
	vl_minimo_w		:= 0;
	nr_seq_tabela_preco_w	:= null;
end;

/* Busca o pagador ,idade do beneficiário,,estabelecimento e a situação trabalhista */

if (length(qt_idade_w) > 3) then
	CALL pls_gerar_mens_log_erro(nr_seq_lote_w,nr_seq_pagador_w,nr_seq_segurado_p, nr_seq_mensalidade_w, 'Beneficiário  possui ' || qt_idade_w || ' anos. Verifique.',
								cd_estabelecimento_w,nm_usuario_p);
end if;

/* Gerar bonificação por indicação para o beneficiário e pagador/beneficiário */

select	max(nr_sequencia),
	max(vl_item),
	max(tx_desconto)
into STRICT	nr_seq_seg_mens_w,
	vl_bonificacao_w,
	tx_bonificacao_w
from	pls_segurado_mensalidade
where	ie_tipo_item = '14'
and	coalesce(nr_seq_item_mensalidade::text, '') = ''
and	nr_seq_segurado = nr_seq_segurado_p;

vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_bonificacao_w,0)/100) * vl_mens_desc_w) + coalesce(vl_bonificacao_w,0);

ds_observacao_w := 'Bonificação gerada por indicação de contrato.';
vl_bonific_total_w := vl_bonific_total_w * -1;
if (vl_bonific_total_w <> 0) then

	nr_seq_item_mensalidade_w := null;

	nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, coalesce(vl_bonific_total_w,0), nr_seq_item_mensalidade_w);

	if (nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '') then
		update	pls_segurado_mensalidade
		set	nr_seq_item_mensalidade = nr_seq_item_mensalidade_w,
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p
		where	nr_sequencia = nr_seq_seg_mens_w;
	end if;
end if;
vl_bonific_total_w := 0;

select	max(a.nr_seq_bonificacao)
into STRICT	nr_seq_bonificacao_obito_w
from	pls_bonificacao_vinculo a,
	pls_bonificacao		b
where	a.nr_seq_bonificacao = b.nr_sequencia
and	a.nr_seq_segurado = nr_seq_segurado_p
and	b.ie_seguro_obito = 'S'
and	((dt_mesano_referencia_w	>= a.dt_inicio_vigencia and (a.dt_inicio_vigencia IS NOT NULL AND a.dt_inicio_vigencia::text <> '')) or (coalesce(a.dt_inicio_vigencia::text, '') = ''))
and	((dt_mesano_referencia_w	<  a.dt_fim_vigencia and (a.dt_fim_vigencia IS NOT NULL AND a.dt_fim_vigencia::text <> '')) or (coalesce(a.dt_fim_vigencia::text, '') = ''));

select	count(1)
into STRICT	qt_bonificacao_w
from	pls_bonificacao_vinculo a
where	((a.nr_seq_contrato	= nr_seq_contrato_p and (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> ''))
or (a.nr_seq_intercambio	= nr_seq_intercambio_p and (nr_seq_intercambio_p IS NOT NULL AND nr_seq_intercambio_p::text <> '')))
and	coalesce(nr_seq_bonificacao_obito_w::text, '') = '';

if (qt_bonificacao_w > 0) then
	/* Gerar a bonificação para o  Contrato */

	open C01;
	loop
	fetch C01 into
		nr_seq_bonificacao_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w,
		ie_tipo_item_w,
		nr_parcela_inicio_w,
		nr_parcela_fim_w,
		nr_seq_desconto_w,
		vl_bonificacao_w,
		tx_bonificacao_w,
		ie_alteracao_vinculacao_w,
		nr_seq_vinculo_bonificacao_w,
		ie_lancamento_mensalidade_w,
		ie_acao_contrato_w,
		ie_tipo_regra_w,
		qt_parcelas_pagas_inicial_w,
		qt_parcelas_pagas_final_w,
		ie_cooperado_w,
		qt_tempo_cooperado_inicial_w,
		qt_tempo_cooperado_final_w,
		tx_bonificacao_conjuge_w,
		nr_parcela_inicial_sca_w,
		nr_parcela_final_sca_w,
		ie_tipo_segurado_regra_w,
		ie_tipo_vidas_contrato_w,
		ie_possui_bonificacao_w,
		ie_demitido_exonerado_w,
		nm_bonificacao_w,
		ie_titularidade_w,
		ie_titularidade_regra_w,
		qt_titulares_inicial_w,
		qt_titulares_final_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		tx_desconto_w := 0;
		vl_desconto_w := 0;

		SELECT * FROM pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_p, nr_seq_mensalidade_seg_p, dt_mesano_referencia_w, nm_usuario_p, ie_restricao_w, ds_obs_w) INTO STRICT ie_restricao_w, ds_obs_w;
		if (ie_tipo_regra_w = 'M') then
			if (ie_cooperado_w = 'N') then

				if	((coalesce(qt_parcelas_pagas_inicial_w,0) = 0) and (coalesce(qt_parcelas_pagas_final_w,0) = 0)) then
					nr_parcela_dia_w		:= 0;
					ie_consiste_parcela_em_dia_w	:= 'N';
				else
					nr_parcela_dia_w	:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_w,nr_seq_mensalidade_seg_p,nr_seq_vinculo_bonificacao_w);
					ie_consiste_parcela_em_dia_w	:= 'S';
				end if;

				if (qt_titulares_inicial_w <> 0 or qt_titulares_final_w <> 0) then
					if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
						select	max(dt_contrato)
						into STRICT	dt_contrato_w
						from	pls_contrato
						where	nr_sequencia	= nr_seq_contrato_w;
					elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
						select	max(dt_inclusao)
						into STRICT	dt_contrato_w
						from	pls_intercambio
						where	nr_sequencia	= nr_seq_intercambio_w;
					end if;

					if (nr_parcela_contrato_w = 1) or (fim_dia(add_months(dt_mesano_referencia_w,-1)) < fim_dia(dt_contrato_w)) then
						qt_titulares_w	:= pls_obter_qt_titulares_ativos(nr_seq_contrato_w, nr_seq_intercambio_w, null, fim_dia(dt_contrato_w));
					else
						qt_titulares_w	:= pls_obter_qt_titulares_ativos(nr_seq_contrato_w, nr_seq_intercambio_w, null, fim_dia(add_months(dt_mesano_referencia_w,-1)));
					end if;

					ie_consiste_qt_titular_w	:= 'S';
				else
					qt_titulares_w	:= 0;
					ie_consiste_qt_titular_w	:= 'N';
				end if;

				if	((nr_parcela_dia_w between qt_parcelas_pagas_inicial_w and qt_parcelas_pagas_final_w AND ie_consiste_parcela_em_dia_w = 'S') or (ie_consiste_parcela_em_dia_w = 'N')) and
					((ie_consiste_qt_titular_w = 'S' and qt_titulares_w between qt_titulares_inicial_w and qt_titulares_final_w) or (ie_consiste_qt_titular_w = 'N')) and
					((ie_titularidade_w = ie_titularidade_regra_w) or (ie_titularidade_regra_w = 'A') or (coalesce(ie_titularidade_regra_w::text, '') = '')) then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
							coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	vl_bonificacao_w,
							tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b
						where	((a.nr_seq_contrato	= nr_seq_contrato_p) or (a.nr_seq_intercambio = nr_seq_intercambio_p))
						and	a.nr_seq_bonificacao	= b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia	= nr_seq_vinculo_bonificacao_w
						and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela between coalesce(nr_parcela_inicio_w,b.nr_parcela) and coalesce(nr_parcela_fim_w,b.nr_parcela)
					and	((a.ie_tipo_item <> '15') or ((a.ie_tipo_item = '15') and (coalesce(a.nr_parcela_sca,nr_parcela_inicial_sca_w) >= nr_parcela_inicial_sca_w and coalesce(a.nr_parcela_sca,nr_parcela_final_sca_w) <= nr_parcela_final_sca_w)))
					and	b.nr_sequencia = nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					if (coalesce(vl_item_w,0) <> 0) then
						vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0); /* Calcula as bonificações */
					end if;
				end if;
			elsif (ie_cooperado_w = 'S') then
				if	((qt_tempo_cooperado_w >= qt_tempo_cooperado_inicial_w AND qt_tempo_cooperado_w <= qt_tempo_cooperado_final_w) or
					(qt_tempo_cooperado_inicial_w = 0 AND qt_tempo_cooperado_final_w = 0)) then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b
						where	((a.nr_seq_contrato	= nr_seq_contrato_p) or (a.nr_seq_intercambio = nr_seq_intercambio_p))
						and	a.nr_seq_bonificacao	= b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
							and	a.nr_sequencia	= nr_seq_vinculo_bonificacao_w
						and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela between coalesce(nr_parcela_inicio_w,b.nr_parcela) and coalesce(nr_parcela_fim_w,b.nr_parcela)
					and	((a.ie_tipo_item <> '15') or ((a.ie_tipo_item = '15') and (coalesce(a.nr_parcela_sca,nr_parcela_inicial_sca_w) >= nr_parcela_inicial_sca_w and coalesce(a.nr_parcela_sca,nr_parcela_final_sca_w) <= nr_parcela_final_sca_w)))
					and	b.nr_sequencia = nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0));

					/* Buscar o cônjuge, caso exista taxa cadastrada para o mesmo */

					if (tx_bonificacao_conjuge_w <> 0) and (coalesce(ie_restricao_w,'N') <> 'N') then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_dependente_legal_w
						from	pls_segurado	a
						where	a.nr_seq_titular	= nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	coalesce(a.dt_rescisao::text, '') = ''
						and	coalesce(a.ie_bonific_cooperado,'N')	= 'S';
						/*and	exists	(select	1
								from	grau_parentesco x
								where	x.nr_sequencia		= a.nr_seq_parentesco
								and	x.ie_tipo_parentesco	= '1'); Domínio 1885 - Dependente Legal */
						if (coalesce(nr_seq_dependente_legal_w,0) <> 0) then
							insert	into	pls_segurado_mensalidade(	nr_sequencia, nr_seq_segurado, cd_estabelecimento,
									dt_referencia, ie_tipo_item, dt_atualizacao,
									dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
									vl_item, tx_desconto, ie_situacao, ie_acao_desfazer)
								values (	nextval('pls_segurado_mensalidade_seq'), nr_seq_dependente_legal_w, cd_estabelecimento_w,
									dt_mesano_referencia_w, '14', clock_timestamp(),
									clock_timestamp(), nm_usuario_p, nm_usuario_p,
									0, tx_bonificacao_conjuge_w, 'A', 'E');
						end if;
					end if;
				end if;
			end if;
		elsif (ie_tipo_regra_w = 'D') then
			/* Quantidade de vidas do contrato e contrato principal */

			if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
				select	max(nr_contrato_principal)
				into STRICT	nr_contrato_principal_w
				from	pls_contrato
				where	nr_sequencia	= nr_seq_contrato_p;

				if (coalesce(ie_demitido_exonerado_w,'N') = 'S') then
					if (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						/* Quantidade de vidas da familia do pagador */

						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_trabalhista_w
						from	pls_segurado	a
						where	a.nr_sequencia = nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
					else
						/* Quantidade de vidas do contrato e contrato principal com e sem situação trabalhista */

						select	count(1)
						into STRICT	qt_vidas_trabalhista_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_seq_contrato_p) or (a.nr_contrato_principal = nr_seq_contrato_p))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

						if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
							select	count(1)
							into STRICT	qt_vidas_trabalhista_princ_w
							from	pls_contrato	a,
								pls_segurado	b
							where	b.nr_seq_contrato	= a.nr_sequencia
							and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
							and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
							and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
							and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
						end if;
					end if;

					qt_vidas_trabalhista_w	:= coalesce(qt_vidas_trabalhista_w,0) + coalesce(qt_vidas_trabalhista_princ_w,0);
					qt_vidas_ww	:= qt_vidas_trabalhista_w;
				elsif (coalesce(ie_demitido_exonerado_w,'N') = 'N') then
					if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					elsif (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						/* Quantidade de vidas da familia do pagador */

						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_w
						from	pls_segurado	a
						where	a.nr_sequencia = nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(a.ie_situacao_trabalhista::text, '') = '';
					else
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_seq_contrato_p) or (a.nr_contrato_principal = nr_seq_contrato_p))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					end if;

					qt_vidas_ww	:= qt_vidas_w;
				end if;
			elsif (nr_seq_intercambio_p IS NOT NULL AND nr_seq_intercambio_p::text <> '') then
				select	count(1)
				into STRICT	qt_vidas_w
				from	pls_intercambio	a,
					pls_segurado	b
				where	b.nr_seq_intercambio	= a.nr_sequencia
				and	a.nr_sequencia		= nr_seq_intercambio_p
				and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
				and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
				and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

				qt_vidas_ww	:= qt_vidas_w;
			end if;
			/* Fim qt vidas */

			select	max(nr_sequencia)
			into STRICT	nr_seq_regra_w
			from	pls_preco_regra
			where	nr_seq_regra = nr_seq_desconto_w
			and	qt_vidas_ww between coalesce(qt_min_vidas,qt_vidas_ww) and coalesce(qt_max_vidas,qt_vidas_ww);

			--nr_seq_regra_w	:= pls_regra_exo_dem_bonificacao(nr_seq_desconto_w,'C',qt_vidas_trabalhista_w,qt_vidas_w,qt_vidas_bonificacao_w);
			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				/*select	nvl(ie_demitido_exonerado,'N')
				into	ie_demitido_exonerado_w
				from	pls_preco_regra
				where	nr_sequencia	= nr_seq_regra_w;*/
				if	((ie_demitido_exonerado_w = 'N') and (coalesce(ie_situacao_trabalhista_w::text, '') = '') or (ie_demitido_exonerado_w = 'S')) then

					select	max(tx_desconto),
						max(vl_desconto)
					into STRICT	tx_desconto_w,
						vl_desconto_w
					from	pls_preco_regra
					where	nr_sequencia	= nr_seq_regra_w;
				end if;
			end if;
			if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') then
				select	sum(vl_item)
				into STRICT	vl_mens_desconto_w
				from	pls_mensalidade_seg_item
				where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
				and	pls_obter_item_mens(ie_tipo_item_w,ie_tipo_item) = 'S';
			else
				vl_mens_desconto_w	:= vl_mens_desc_w;
			end if;

			vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mens_desconto_w) + coalesce(vl_desconto_w,0); /* Calcula os desconto das bonificações */
		end if;

		ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', vinculado ao contrato.';

		if (ie_restricao_w = 'N') then
			vl_bonific_total_w := 0;
			ds_observacao_w := ds_obs_w;
		end if;

		select	count(1)
		into STRICT	qt_cobertura_w
		from	pls_bonificacao_regra
		where	nr_seq_bonificacao = nr_seq_bonificacao_w
		and	(nr_seq_tipo_cobertura IS NOT NULL AND nr_seq_tipo_cobertura::text <> '');

		if (ie_lancamento_mensalidade_w = 'E') then
			vl_bonific_total_w := vl_bonific_total_w * -1;
			ds_observacao_w	:= 'Valor gerado com a bonificação "'||nm_bonificacao_w||'", vinculado ao contrato. Valor original: '||Campo_Mascara_virgula(vl_preco_pre_w);
			vl_preco_pre_bonific_w	:= vl_mens_desc_w + vl_bonific_total_w;

			if (vl_preco_pre_bonific_w < vl_minimo_w) then
				vl_item_embutido_w	:= vl_minimo_w;
				ds_observacao_w := 'Valor gerado com a bonificação: '||nm_bonificacao_w||', respeitando o valor mínimo permitido para a tabela de preço. Vinculado ao contrato. Valor original: '||Campo_Mascara_virgula(vl_preco_pre_w);
			else
				vl_item_embutido_w	:= coalesce(vl_preco_pre_w,0) + vl_bonific_total_w;
			end if;

			if (vl_bonific_total_w <> 0) then
				update	pls_mensalidade_seg_item
				set	vl_item			= coalesce(vl_item_embutido_w,0),
					vl_bonificacao_embutido	= vl_bonific_total_w,
					ds_observacao		= ds_observacao_w
				where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
				and	ie_tipo_item = '1';
			end if;

			vl_bonific_total_w	:= 0;
			vl_item_embutido_w	:= 0;
		end if;

		select	count(1)
		into STRICT	qt_bonific_segurado_w
		from	pls_mensalidade_seg_item
		where	vl_item = 0
		and	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
		and	nr_seq_bonificacao_vinculo = nr_seq_vinculo_bonificacao_w;

		if	((ie_restricao_w <> 'A') and (qt_bonific_segurado_w = 0) and (vl_bonific_total_w <> 0 or ie_restricao_w = 'N') and (qt_cobertura_w	= 0) and (ie_lancamento_mensalidade_w = 'D')) then
			vl_preco_pre_bonific_w := vl_mens_desc_w - vl_bonific_total_w;
			if (vl_preco_pre_bonific_w < vl_minimo_w) then
				vl_bonific_total_w := vl_mens_desc_w - vl_minimo_w;
				ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', respeitando o valor mínimo permitido para a tabela de preço. Vinculado ao contrato.';
			end if;

			vl_bonific_total_w := vl_bonific_total_w * -1;

			nr_seq_item_mensalidade_w := null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, coalesce(vl_bonific_total_w,0), nr_seq_item_mensalidade_w);
		end if;
		vl_bonific_total_w := 0;
		end;
	end loop;
	close C01;
end if;

select	count(1)
into STRICT	qt_bonificacao_w
from	pls_bonificacao_vinculo
where	nr_seq_segurado	= nr_seq_segurado_p;

if (qt_bonificacao_w > 0) then
	/* Gerar a bonificação para o Segurado */

	open C02;
	loop
	fetch C02 into
		nr_seq_bonificacao_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w,
		ie_tipo_item_w,
		nr_parcela_inicio_w,
		nr_parcela_fim_w,
		nr_seq_desconto_w,
		vl_bonificacao_w,
		tx_bonificacao_w,
		ie_alteracao_vinculacao_w,
		nr_seq_vinculo_bonificacao_w,
		ie_lancamento_mensalidade_w,
		ie_acao_contrato_w,
		ie_tipo_regra_w,
		qt_parcelas_pagas_inicial_w,
		qt_parcelas_pagas_final_w,
		ie_cooperado_w,
		qt_tempo_cooperado_inicial_w,
		qt_tempo_cooperado_final_w,
		tx_bonificacao_conjuge_w,
		nr_parcela_inicial_sca_w,
		nr_parcela_final_sca_w,
		ie_tipo_segurado_regra_w,
		ie_tipo_vidas_contrato_w,
		ie_possui_bonificacao_w,
		ie_demitido_exonerado_w,
		nm_bonificacao_w,
		ie_titularidade_w,
		ie_titularidade_regra_w,
		qt_titulares_inicial_w,
		qt_titulares_final_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		tx_desconto_w := 0;
		vl_desconto_w := 0;

		SELECT * FROM pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_p, nr_seq_mensalidade_seg_p, dt_mesano_referencia_w, nm_usuario_p, ie_restricao_w, ds_obs_w) INTO STRICT ie_restricao_w, ds_obs_w;

		if (ie_tipo_regra_w = 'M') then
			if (ie_cooperado_w = 'N') then

				if	((coalesce(qt_parcelas_pagas_inicial_w,0) = 0) and (coalesce(qt_parcelas_pagas_final_w,0) = 0)) then
					nr_parcela_dia_w		:= 0;
					ie_consiste_parcela_em_dia_w	:= 'N';
				else
					nr_parcela_dia_w		:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_w,nr_seq_mensalidade_seg_p,nr_seq_vinculo_bonificacao_w);
					ie_consiste_parcela_em_dia_w	:= 'S';
				end if;

				if (qt_titulares_inicial_w <> 0 or qt_titulares_final_w <> 0) then
					if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
						select	max(dt_contrato)
						into STRICT	dt_contrato_w
						from	pls_contrato
						where	nr_sequencia	= nr_seq_contrato_w;
					elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
						select	max(dt_inclusao)
						into STRICT	dt_contrato_w
						from	pls_intercambio
						where	nr_sequencia	= nr_seq_intercambio_w;
					end if;

					if (nr_parcela_contrato_w = 1) or (fim_dia(add_months(dt_mesano_referencia_w,-1)) < fim_dia(dt_contrato_w)) then
						qt_titulares_w	:= pls_obter_qt_titulares_ativos(nr_seq_contrato_w, nr_seq_intercambio_w, null, fim_dia(dt_contrato_w));
					else
						qt_titulares_w	:= pls_obter_qt_titulares_ativos(nr_seq_contrato_w, nr_seq_intercambio_w, null, fim_dia(add_months(dt_mesano_referencia_w,-1)));
					end if;

					ie_consiste_qt_titular_w	:= 'S';
				else
					qt_titulares_w	:= 0;
					ie_consiste_qt_titular_w	:= 'N';
				end if;

				if	((nr_parcela_dia_w between qt_parcelas_pagas_inicial_w and qt_parcelas_pagas_final_w AND ie_consiste_parcela_em_dia_w = 'S') or (ie_consiste_parcela_em_dia_w = 'N')) and
					((ie_consiste_qt_titular_w = 'S' and qt_titulares_w between qt_titulares_inicial_w and qt_titulares_final_w) or (ie_consiste_qt_titular_w = 'N')) and
					((ie_titularidade_w = ie_titularidade_regra_w) or (ie_titularidade_regra_w = 'A') or (coalesce(ie_titularidade_regra_w::text, '') = '')) then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
							coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	vl_bonificacao_w,
							tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b
						where	a.nr_seq_segurado = nr_seq_segurado_p
						and	a.nr_seq_bonificacao = b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia = nr_seq_vinculo_bonificacao_w
						and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela between coalesce(nr_parcela_inicio_w,b.nr_parcela) and coalesce(nr_parcela_fim_w,b.nr_parcela)
					and	((a.ie_tipo_item <> '15') or ((a.ie_tipo_item = '15') and (coalesce(a.nr_parcela_sca,nr_parcela_inicial_sca_w) >= nr_parcela_inicial_sca_w and coalesce(a.nr_parcela_sca,nr_parcela_final_sca_w) <= nr_parcela_final_sca_w)))
					and	b.nr_sequencia = nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					if (coalesce(vl_item_w,0) <> 0) then
						vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0));
					end if;
				end if;
			elsif (ie_cooperado_w = 'S') then
				if	((qt_tempo_cooperado_w >= qt_tempo_cooperado_inicial_w AND qt_tempo_cooperado_w <= qt_tempo_cooperado_final_w) or
					(qt_tempo_cooperado_inicial_w = 0 AND qt_tempo_cooperado_final_w = 0)) then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b
						where	a.nr_seq_segurado = nr_seq_segurado_p
						and	a.nr_seq_bonificacao = b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia = nr_seq_vinculo_bonificacao_w
						and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela between coalesce(nr_parcela_inicio_w,b.nr_parcela) and coalesce(nr_parcela_fim_w,b.nr_parcela)
					and	((a.ie_tipo_item <> '15') or ((a.ie_tipo_item = '15') and (coalesce(a.nr_parcela_sca,nr_parcela_inicial_sca_w) >= nr_parcela_inicial_sca_w and coalesce(a.nr_parcela_sca,nr_parcela_final_sca_w) <= nr_parcela_final_sca_w)))
					and	b.nr_sequencia = nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)));

					/* Buscar o cônjuge, caso exista taxa cadastrada para o mesmo */

					if (tx_bonificacao_conjuge_w <> 0) and (coalesce(ie_restricao_w,'N') <> 'N') then
						/*select	max(a.nr_sequencia)
						into	nr_seq_dependente_legal_w
						from	pls_segurado	a
						where	a.nr_seq_titular	= nr_seq_segurado_p
						and	a.dt_liberacao is not null
						and	a.dt_rescisao is null
						and	exists	(select	1
								from	grau_parentesco x
								where	x.nr_sequencia		= a.nr_seq_parentesco
								and	x.ie_grau_parentesco	= 4);  Domínio 3324  - Cônjuge */
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_dependente_legal_w
						from	pls_segurado	a
						where	a.nr_seq_titular	= nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	coalesce(a.dt_rescisao::text, '') = ''
						and	coalesce(a.ie_bonific_cooperado,'N')	= 'S';
						/*and	exists	(select	1
								from	grau_parentesco x
								where	x.nr_sequencia		= a.nr_seq_parentesco
								and	x.ie_tipo_parentesco	= '1'); Domínio 1885 - Dependente Legal */
						if (coalesce(nr_seq_dependente_legal_w,0) <> 0) then
							insert	into	pls_segurado_mensalidade(	nr_sequencia, nr_seq_segurado, cd_estabelecimento,
									dt_referencia, ie_tipo_item, dt_atualizacao,
									dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
									vl_item, tx_desconto, ie_situacao, ie_acao_desfazer)
								values (	nextval('pls_segurado_mensalidade_seq'), nr_seq_dependente_legal_w, cd_estabelecimento_w,
									dt_mesano_referencia_w, '14', clock_timestamp(),
									clock_timestamp(), nm_usuario_p, nm_usuario_p,
									0, tx_bonificacao_conjuge_w, 'A', 'E');
						end if;
					end if;
				end if;
			end if;
		elsif (ie_tipo_regra_w = 'D') then
			/* Quantidade de vidas do contrato e contrato principal */

			if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
				select	max(nr_contrato_principal)
				into STRICT	nr_contrato_principal_w
				from	pls_contrato
				where	nr_sequencia	= nr_seq_contrato_p;

				if (coalesce(ie_possui_bonificacao_w,'N') = 'S') then

					/* Quantidade de vidas que possuem a bonificação */

					if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
						select	count(1)
						into STRICT	qt_vidas_bonificacao_w
						from	pls_contrato		a,
							pls_segurado		b,
							pls_bonificacao_vinculo	c
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	c.nr_seq_segurado	= b.nr_sequencia
						and	c.nr_seq_bonificacao	= nr_seq_bonificacao_w
						and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = ''
						and	((coalesce(c.dt_fim_vigencia::text, '') = '') or (c.dt_fim_vigencia > dt_mesano_referencia_w));
					elsif (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						/* Obter quantidade vidas por familia */

						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_trabalhista_w
						from	pls_segurado		a,
							pls_bonificacao_vinculo b
						where	b.nr_seq_segurado	= a.nr_sequencia
						and	b.nr_seq_bonificacao 	= nr_seq_bonificacao_w
						and	a.nr_sequencia 		= nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(a.ie_situacao_trabalhista::text, '') = '';
					else
						select	count(1)
						into STRICT	qt_vidas_bonificacao_w
						from	pls_contrato		a,
							pls_segurado		b,
							pls_bonificacao_vinculo	c
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	c.nr_seq_segurado	= b.nr_sequencia
						and	c.nr_seq_bonificacao	= nr_seq_bonificacao_w
						and	((a.nr_sequencia = nr_seq_contrato_p) or (a.nr_contrato_principal = nr_seq_contrato_p))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = ''
						and	((coalesce(c.dt_fim_vigencia::text, '') = '') or (c.dt_fim_vigencia > dt_mesano_referencia_w));
					end if;

					qt_vidas_ww	:= qt_vidas_bonificacao_w;
				elsif (coalesce(ie_demitido_exonerado_w,'N') = 'S') then
					if (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						/* Quantidade de vidas da familia do pagador */

						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_trabalhista_w
						from	pls_segurado	a
						where	a.nr_sequencia = nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
					else
						/* Quantidade de vidas do contrato e contrato principal com e sem situação trabalhista */

						select	count(1)
						into STRICT	qt_vidas_trabalhista_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_seq_contrato_p) or (a.nr_contrato_principal = nr_seq_contrato_p))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

						if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
							select	count(1)
							into STRICT	qt_vidas_trabalhista_princ_w
							from	pls_contrato	a,
								pls_segurado	b
							where	b.nr_seq_contrato	= a.nr_sequencia
							and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
							and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
							and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
							and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
						end if;
					end if;
					qt_vidas_trabalhista_w	:= coalesce(qt_vidas_trabalhista_w,0) + coalesce(qt_vidas_trabalhista_princ_w,0);
					qt_vidas_ww	:= qt_vidas_trabalhista_w;
				elsif (coalesce(ie_demitido_exonerado_w,'N') = 'N') then
					if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					elsif (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_w
						from	pls_segurado	a
						where	a.nr_sequencia = nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(a.ie_situacao_trabalhista::text, '') = '';
					else
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_seq_contrato_p) or (a.nr_contrato_principal = nr_seq_contrato_p))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					end if;
					qt_vidas_ww	:= qt_vidas_w;
				end if;
			elsif (nr_seq_intercambio_p IS NOT NULL AND nr_seq_intercambio_p::text <> '') then
				if (coalesce(ie_possui_bonificacao_w,'N') = 'S') then
					select	count(1)
					into STRICT	qt_vidas_bonificacao_w
					from	pls_intercambio		a,
						pls_segurado		b,
						pls_bonificacao_vinculo	c
					where	b.nr_seq_intercambio	= a.nr_sequencia
					and	c.nr_seq_segurado	= b.nr_sequencia
					and	a.nr_sequencia		= nr_seq_intercambio_p
					and	c.nr_seq_bonificacao	= nr_seq_bonificacao_w
					and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
					and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
					and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
					and	((coalesce(c.dt_fim_vigencia::text, '') = '') or (c.dt_fim_vigencia > dt_mesano_referencia_w));

					qt_vidas_ww	:= qt_vidas_bonificacao_w;
				else
					select	count(1)
					into STRICT	qt_vidas_w
					from	pls_intercambio	a,
						pls_segurado	b
					where	b.nr_seq_intercambio	= a.nr_sequencia
					and	a.nr_sequencia		= nr_seq_intercambio_p
					and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
					and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
					and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

					qt_vidas_ww	:= qt_vidas_w;
				end if;
			end if;
			/* Fim qt vidas */

			select	max(nr_sequencia)
			into STRICT	nr_seq_regra_w
			from	pls_preco_regra
			where	nr_seq_regra = nr_seq_desconto_w
			and	qt_vidas_ww between coalesce(qt_min_vidas,qt_vidas_ww) and coalesce(qt_max_vidas,qt_vidas_ww);

			--nr_seq_regra_w	:= pls_regra_exo_dem_bonificacao(nr_seq_desconto_w,'B',qt_vidas_trabalhista_w,qt_vidas_w, qt_vidas_bonificacao_w);
			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				/*select	nvl(ie_demitido_exonerado,'N')
				into	ie_demitido_exonerado_w
				from	pls_preco_regra
				where	nr_sequencia	= nr_seq_regra_w;*/
				if	((ie_demitido_exonerado_w = 'N') and (coalesce(ie_situacao_trabalhista_w::text, '') = '') or (ie_demitido_exonerado_w = 'S')) then

					select	max(tx_desconto),
						max(vl_desconto)
					into STRICT	tx_desconto_w,
						vl_desconto_w
					from	pls_preco_regra
					where	nr_sequencia	= nr_seq_regra_w;
				end if;
			end if;

			if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') then
				select	sum(vl_item)
				into STRICT	vl_mens_desconto_w
				from	pls_mensalidade_seg_item
				where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
				and	pls_obter_item_mens(ie_tipo_item_w,ie_tipo_item) = 'S';
			else
				vl_mens_desconto_w	:= vl_mens_desc_w;
			end if;

			vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mens_desconto_w) + coalesce(vl_desconto_w,0); /* Calcula os desconto das bonificações */
		end if;

		ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', vinculado ao beneficiário.';

		if (ie_restricao_w = 'N') then
			vl_bonific_total_w := 0;
			ds_observacao_w := ds_obs_w;
		end if;

		select	count(1)
		into STRICT	qt_cobertura_w
		from	pls_bonificacao_regra
		where	nr_seq_bonificacao = nr_seq_bonificacao_w
		and	(nr_seq_tipo_cobertura IS NOT NULL AND nr_seq_tipo_cobertura::text <> '');

		if (ie_lancamento_mensalidade_w = 'E') then
			vl_bonific_total_w := vl_bonific_total_w * -1;
			ds_observacao_w	:= 'Valor gerado com a bonificação "'||nm_bonificacao_w||'", vinculado ao beneficiário. Valor original: '||Campo_Mascara_virgula(vl_preco_pre_w);
			vl_preco_pre_bonific_w	:= vl_mens_desc_w + vl_bonific_total_w;

			if (vl_preco_pre_bonific_w < vl_minimo_w) then
				vl_item_embutido_w	:= vl_minimo_w;
				ds_observacao_w := 'Valor gerado com a bonificação: '||nm_bonificacao_w||', respeitando o valor mínimo permitido para a tabela de preço. Vinculado ao beneficiário. Valor original: '||Campo_Mascara_virgula(vl_preco_pre_w);
			else
				vl_item_embutido_w	:= vl_preco_pre_w + vl_bonific_total_w;
			end if;

			if (vl_bonific_total_w <> 0) then
				update	pls_mensalidade_seg_item
				set	vl_item			= coalesce(vl_item_embutido_w,0),
					vl_bonificacao_embutido	= vl_bonific_total_w,
					ds_observacao		= ds_observacao_w
				where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
				and	ie_tipo_item = '1';
			end if;
			vl_bonific_total_w	:= 0;
			vl_item_embutido_w	:= 0;
		end if;

		select	count(*)
		into STRICT	qt_bonific_segurado_w
		from	pls_mensalidade_seg_item
		where	vl_item = 0
		and	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
		and	nr_seq_bonificacao_vinculo = nr_seq_vinculo_bonificacao_w;

		if	((ie_restricao_w <> 'A') and (qt_bonific_segurado_w = 0) and (vl_bonific_total_w <> 0 or ie_restricao_w = 'N') and (qt_cobertura_w	= 0) and (ie_lancamento_mensalidade_w = 'D')) then
			vl_preco_pre_bonific_w := vl_mens_desc_w - vl_bonific_total_w;
			if (vl_preco_pre_bonific_w < vl_minimo_w) then
				vl_bonific_total_w := vl_mens_desc_w - vl_minimo_w;
				ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', respeitando o valor mínimo permitido para a tabela de preço. Vinculado ao beneficiário.';
			end if;

			vl_bonific_total_w := vl_bonific_total_w * -1;

			nr_seq_item_mensalidade_w := null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, coalesce(vl_bonific_total_w,0), nr_seq_item_mensalidade_w);
		end if;
		vl_bonific_total_w := 0;
		end;
	end loop;
	close C02;
end if;

select	count(1)
into STRICT	qt_bonificacao_w
from	pls_bonificacao_vinculo
where	nr_seq_pagador	= nr_seq_pagador_w
and	coalesce(nr_seq_bonificacao_obito_w::text, '') = '';

if (qt_bonificacao_w > 0) then
	/* Gerar a bonificação para o Pagador */

	open C03;
	loop
	fetch C03 into
		nr_seq_bonificacao_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w,
		ie_tipo_item_w,
		nr_parcela_inicio_w,
		nr_parcela_fim_w,
		nr_seq_desconto_w,
		vl_bonificacao_w,
		tx_bonificacao_w,
		ie_alteracao_vinculacao_w,
		nr_seq_vinculo_bonificacao_w,
		ie_lancamento_mensalidade_w,
		ie_acao_contrato_w,
		ie_tipo_regra_w,
		qt_parcelas_pagas_inicial_w,
		qt_parcelas_pagas_final_w,
		ie_cooperado_w,
		qt_tempo_cooperado_inicial_w,
		qt_tempo_cooperado_final_w,
		tx_bonificacao_conjuge_w,
		nr_parcela_inicial_sca_w,
		nr_parcela_final_sca_w,
		ie_tipo_segurado_regra_w,
		ie_tipo_vidas_contrato_w,
		ie_possui_bonificacao_w,
		ie_demitido_exonerado_w,
		nm_bonificacao_w,
		ie_titularidade_w,
		ie_titularidade_regra_w,
		qt_titulares_inicial_w,
		qt_titulares_final_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		SELECT * FROM pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_p, nr_seq_mensalidade_seg_p, dt_mesano_referencia_w, nm_usuario_p, ie_restricao_w, ds_obs_w) INTO STRICT ie_restricao_w, ds_obs_w;
		if (ie_tipo_regra_w = 'M') then
			if (ie_cooperado_w = 'N') then

				if	((coalesce(qt_parcelas_pagas_inicial_w,0) = 0) and (coalesce(qt_parcelas_pagas_final_w,0) = 0)) then
					nr_parcela_dia_w		:= 0;
					ie_consiste_parcela_em_dia_w	:= 'N';
				else
					nr_parcela_dia_w		:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_w,nr_seq_mensalidade_seg_p,nr_seq_vinculo_bonificacao_w);
					ie_consiste_parcela_em_dia_w	:= 'S';
				end if;

				if (qt_titulares_inicial_w <> 0 or qt_titulares_final_w <> 0) then
					if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
						select	max(dt_contrato)
						into STRICT	dt_contrato_w
						from	pls_contrato
						where	nr_sequencia	= nr_seq_contrato_w;
					elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
						select	max(dt_inclusao)
						into STRICT	dt_contrato_w
						from	pls_intercambio
						where	nr_sequencia	= nr_seq_intercambio_w;
					end if;

					if (nr_parcela_contrato_w = 1) or (fim_dia(add_months(dt_mesano_referencia_w,-1)) < fim_dia(dt_contrato_w)) then
						qt_titulares_w	:= pls_obter_qt_titulares_ativos(nr_seq_contrato_w, nr_seq_intercambio_w, null, fim_dia(dt_contrato_w));
					else
						qt_titulares_w	:= pls_obter_qt_titulares_ativos(nr_seq_contrato_w, nr_seq_intercambio_w, null, fim_dia(add_months(dt_mesano_referencia_w,-1)));
					end if;
					ie_consiste_qt_titular_w	:= 'S';
				else
					qt_titulares_w	:= 0;
					ie_consiste_qt_titular_w	:= 'N';
				end if;

				if	((nr_parcela_dia_w between qt_parcelas_pagas_inicial_w and qt_parcelas_pagas_final_w AND ie_consiste_parcela_em_dia_w = 'S') or (ie_consiste_parcela_em_dia_w = 'N')) and
					((ie_consiste_qt_titular_w = 'S' and qt_titulares_w between qt_titulares_inicial_w and qt_titulares_final_w) or (ie_consiste_qt_titular_w = 'N')) and
					((ie_titularidade_w = ie_titularidade_regra_w) or (ie_titularidade_regra_w = 'A') or (coalesce(ie_titularidade_regra_w::text, '') = '')) then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
							coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	vl_bonificacao_w,
							tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b
						where	a.nr_seq_pagador = nr_seq_pagador_w
						and	a.nr_seq_bonificacao = b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia = nr_seq_vinculo_bonificacao_w
						and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela between coalesce(nr_parcela_inicio_w,b.nr_parcela) and coalesce(nr_parcela_fim_w,b.nr_parcela)
					and	((a.ie_tipo_item <> '15') or ((a.ie_tipo_item = '15') and (coalesce(a.nr_parcela_sca,nr_parcela_inicial_sca_w) >= nr_parcela_inicial_sca_w and coalesce(a.nr_parcela_sca,nr_parcela_final_sca_w) <= nr_parcela_final_sca_w)))
					and	b.nr_sequencia = nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					if (coalesce(vl_item_w,0) <> 0) then
						vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0));
					end if;
				end if;
			elsif (ie_cooperado_w = 'S') then
				if	((qt_tempo_cooperado_w >= qt_tempo_cooperado_inicial_w AND qt_tempo_cooperado_w <= qt_tempo_cooperado_final_w) or
					(qt_tempo_cooperado_inicial_w = 0 AND qt_tempo_cooperado_final_w = 0)) then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b
						where	a.nr_seq_pagador = nr_seq_pagador_w
						and	a.nr_seq_bonificacao = b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia = nr_seq_vinculo_bonificacao_w
						and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela between coalesce(nr_parcela_inicio_w,b.nr_parcela) and coalesce(nr_parcela_fim_w,b.nr_parcela)
					and	((a.ie_tipo_item <> '15') or ((a.ie_tipo_item = '15') and (coalesce(a.nr_parcela_sca,nr_parcela_inicial_sca_w) >= nr_parcela_inicial_sca_w and coalesce(a.nr_parcela_sca,nr_parcela_final_sca_w) <= nr_parcela_final_sca_w)))
					and	b.nr_sequencia = nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)));

					/* Buscar o cônjuge, caso exista taxa cadastrada para o mesmo */

					if (tx_bonificacao_conjuge_w <> 0) and (coalesce(ie_restricao_w,'N') <> 'N') then
						/*select	max(a.nr_sequencia)
						into	nr_seq_dependente_legal_w
						from	pls_segurado	a
						where	a.nr_seq_titular	= nr_seq_segurado_p
						and	a.dt_liberacao is not null
						and	a.dt_rescisao is null
						and	exists	(select	1
								from	grau_parentesco x
								where	x.nr_sequencia		= a.nr_seq_parentesco
								and	x.ie_grau_parentesco	= 4); Domínio 3324  - Cônjuge */
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_dependente_legal_w
						from	pls_segurado	a
						where	a.nr_seq_titular	= nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	coalesce(a.dt_rescisao::text, '') = ''
						and	coalesce(a.ie_bonific_cooperado,'N')	= 'S';
						/*and	exists	(select	1
								from	grau_parentesco x
								where	x.nr_sequencia		= a.nr_seq_parentesco
								and	x.ie_tipo_parentesco	= '1'); Domínio 1885 - Dependente Legal */
						if (coalesce(nr_seq_dependente_legal_w,0) <> 0) then
							insert	into	pls_segurado_mensalidade(	nr_sequencia, nr_seq_segurado, cd_estabelecimento,
									dt_referencia, ie_tipo_item, dt_atualizacao,
									dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
									vl_item, tx_desconto, ie_situacao, ie_acao_desfazer)
								values (	nextval('pls_segurado_mensalidade_seq'), nr_seq_dependente_legal_w, cd_estabelecimento_w,
									dt_mesano_referencia_w, '14', clock_timestamp(),
									clock_timestamp(), nm_usuario_p, nm_usuario_p,
									0, tx_bonificacao_conjuge_w, 'A', 'E');
						end if;
					end if;
				end if;
			end if;
		elsif (ie_tipo_regra_w = 'D') then
			/* Quantidade de vidas do contrato e contrato principal sem situação trabalhista */

			if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
				select	max(nr_contrato_principal)
				into STRICT	nr_contrato_principal_w
				from	pls_contrato
				where	nr_sequencia	= nr_seq_contrato_p;


				if (coalesce(ie_demitido_exonerado_w,'N') = 'S') then
					if (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						/* Obter quantidade vidas por familia */

						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_trabalhista_w
						from	pls_segurado	a
						where	a.nr_sequencia = nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
					else
						/* Quantidade de vidas do contrato e contrato principal com e sem situação trabalhista */

						select	count(1)
						into STRICT	qt_vidas_trabalhista_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_seq_contrato_p) or (a.nr_contrato_principal = nr_seq_contrato_p))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

						if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
							select	count(1)
							into STRICT	qt_vidas_trabalhista_princ_w
							from	pls_contrato	a,
								pls_segurado	b
							where	b.nr_seq_contrato	= a.nr_sequencia
							and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
							and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
							and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
							and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
						end if;
					end if;
					qt_vidas_trabalhista_w	:= coalesce(qt_vidas_trabalhista_w,0) + coalesce(qt_vidas_trabalhista_princ_w,0);
					qt_vidas_ww	:= qt_vidas_trabalhista_w;
				elsif (coalesce(ie_demitido_exonerado_w,'N') = 'N') then
					if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					elsif (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						/* Obter quantidade vidas por familia */

						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_w
						from	pls_segurado	a
						where	a.nr_sequencia = nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(a.ie_situacao_trabalhista::text, '') = '';
					else
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_seq_contrato_p) or (a.nr_contrato_principal = nr_seq_contrato_p))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					end if;

					qt_vidas_ww	:= qt_vidas_w;
				end if;
			elsif (nr_seq_intercambio_p IS NOT NULL AND nr_seq_intercambio_p::text <> '') then
				select	count(1)
				into STRICT	qt_vidas_w
				from	pls_intercambio	a,
					pls_segurado	b
				where	b.nr_seq_intercambio	= a.nr_sequencia
				and	a.nr_sequencia		= nr_seq_intercambio_p
				and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
				and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
				and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

				qt_vidas_ww	:= qt_vidas_w;
			end if;
			/* Fim qt vidas */

			select	max(nr_sequencia)
			into STRICT	nr_seq_regra_w
			from	pls_preco_regra
			where	nr_seq_regra = nr_seq_desconto_w
			and	qt_vidas_ww between coalesce(qt_min_vidas,qt_vidas_ww) and coalesce(qt_max_vidas,qt_vidas_ww);

			--nr_seq_regra_w	:= pls_regra_exo_dem_bonificacao(nr_seq_desconto_w,'P',qt_vidas_trabalhista_w,qt_vidas_w, qt_vidas_bonificacao_w);
			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				/*select	nvl(ie_demitido_exonerado,'N')
				into	ie_demitido_exonerado_w
				from	pls_preco_regra
				where	nr_sequencia	= nr_seq_regra_w;*/
				if	((ie_demitido_exonerado_w = 'N') and (coalesce(ie_situacao_trabalhista_w::text, '') = '') or (ie_demitido_exonerado_w = 'S')) then

					select	max(tx_desconto),
						max(vl_desconto)
					into STRICT	tx_desconto_w,
						vl_desconto_w
					from	pls_preco_regra
					where	nr_sequencia	= nr_seq_regra_w;
				end if;
			end if;

			if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') then
				select	sum(vl_item)
				into STRICT	vl_mens_desconto_w
				from	pls_mensalidade_seg_item
				where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
				and	pls_obter_item_mens(ie_tipo_item_w,ie_tipo_item) = 'S';
			else
				vl_mens_desconto_w	:= vl_mens_desc_w;
			end if;

			vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mens_desconto_w) + coalesce(vl_desconto_w,0); /* Calcula os desconto das bonificações */
		end if;

		ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', vinculado ao pagador.';

		if (ie_restricao_w = 'N') then
			vl_bonific_total_w := 0;
			ds_observacao_w := ds_obs_w;
		end if;

		select	count(1)
		into STRICT	qt_cobertura_w
		from	pls_bonificacao_regra
		where	nr_seq_bonificacao = nr_seq_bonificacao_w
		and	(nr_seq_tipo_cobertura IS NOT NULL AND nr_seq_tipo_cobertura::text <> '');

		if (ie_lancamento_mensalidade_w = 'E') then
			vl_bonific_total_w := vl_bonific_total_w * -1;
			ds_observacao_w	:= 'Valor gerado com a bonificação "'||nm_bonificacao_w||'", vinculado ao pagador. Valor original: '||Campo_Mascara_virgula(vl_preco_pre_w);
			vl_preco_pre_bonific_w	:= vl_mens_desc_w + vl_bonific_total_w;

			if (vl_preco_pre_bonific_w < vl_minimo_w) then
				vl_item_embutido_w	:= vl_minimo_w;
				ds_observacao_w := 'Valor gerado com a bonificação: '||nm_bonificacao_w||', respeitando o valor mínimo permitido para a tabela de preço. Vinculado ao pagador. Valor original: '||vl_preco_pre_w;
			else
				vl_item_embutido_w	:= vl_preco_pre_w + vl_bonific_total_w;
			end if;

			if (vl_bonific_total_w <> 0) then
				update	pls_mensalidade_seg_item
				set	vl_item			= coalesce(vl_item_embutido_w,0),
					vl_bonificacao_embutido	= vl_bonific_total_w,
					ds_observacao		= ds_observacao_w
				where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
				and	ie_tipo_item = '1';
			end if;
			vl_bonific_total_w	:= 0;
			vl_item_embutido_w	:= 0;
		end if;

		select	count(*)
		into STRICT	qt_bonific_segurado_w
		from	pls_mensalidade_seg_item
		where	vl_item = 0
		and	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
		and	nr_seq_bonificacao_vinculo = nr_seq_vinculo_bonificacao_w;

		if	((ie_restricao_w <> 'A') and (qt_bonific_segurado_w = 0) and (vl_bonific_total_w <> 0 or ie_restricao_w = 'N') and (qt_cobertura_w	= 0) and (ie_lancamento_mensalidade_w = 'D')) then
			vl_preco_pre_bonific_w := vl_mens_desc_w - vl_bonific_total_w;
			if (vl_preco_pre_bonific_w < vl_minimo_w) then
				vl_bonific_total_w := vl_mens_desc_w - vl_minimo_w;
				ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', respeitando o valor mínimo permitido para a tabela de preço. Vinculado ao pagador.';
			end if;

			vl_bonific_total_w := vl_bonific_total_w * -1;

			nr_seq_item_mensalidade_w := null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, coalesce(vl_bonific_total_w,0), nr_seq_item_mensalidade_w);
		end if;
		vl_bonific_total_w := 0;
		end;
	end loop;
	close C03;
end if;

select	count(1)
into STRICT	qt_bonificacao_w
from	pls_bonificacao_vinculo		a,
	pls_sca_vinculo			b,
	pls_plano			c,
	pls_segurado			d
where	d.nr_sequencia	= b.nr_seq_segurado
and	c.nr_sequencia	= b.nr_seq_plano
and	c.nr_sequencia	= a.nr_seq_plano
and	d.nr_sequencia 	= nr_seq_segurado_p
and	coalesce(nr_seq_bonificacao_obito_w::text, '') = '';

if (qt_bonificacao_w > 0) then
	/* Gerar a bonificação SCA para o beneficiário */

	open C04;
	loop
	fetch C04 into
		nr_seq_bonificacao_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w,
		ie_tipo_item_w,
		nr_parcela_inicio_w,
		nr_parcela_fim_w,
		nr_seq_desconto_w,
		vl_bonificacao_w,
		tx_bonificacao_w,
		ie_alteracao_vinculacao_w,
		nr_seq_vinculo_bonificacao_w,
		nr_seq_sca_w,
		nr_seq_vinculo_sca_w,
		ie_lancamento_mensalidade_w,
		ie_base_maior_valor_w,
		ie_acao_contrato_w,
		ie_tipo_regra_w,
		qt_parcelas_pagas_inicial_w,
		qt_parcelas_pagas_final_w,
		ie_cooperado_w,
		qt_tempo_cooperado_inicial_w,
		qt_tempo_cooperado_final_w,
		tx_bonificacao_conjuge_w,
		nr_parcela_inicial_sca_w,
		nr_parcela_final_sca_w,
		ie_tipo_segurado_regra_w,
		ie_tipo_vidas_contrato_w,
		ie_possui_bonificacao_w,
		ie_demitido_exonerado_w,
		nm_bonificacao_w,
		ie_titularidade_w,
		ie_titularidade_regra_w,
		qt_titulares_inicial_w,
		qt_titulares_final_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		SELECT * FROM pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_p, nr_seq_mensalidade_seg_p, dt_mesano_referencia_w, nm_usuario_p, ie_restricao_w, ds_obs_w) INTO STRICT ie_restricao_w, ds_obs_w;
		if (ie_tipo_regra_w = 'M') then
			if (ie_cooperado_w = 'N') then

				if	((coalesce(qt_parcelas_pagas_inicial_w,0) = 0) and (coalesce(qt_parcelas_pagas_final_w,0) = 0)) then
					nr_parcela_dia_w		:= 0;
					ie_consiste_parcela_em_dia_w	:= 'N';
				else
					nr_parcela_dia_w	:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_w,nr_seq_mensalidade_seg_p,nr_seq_vinculo_bonificacao_w);
					ie_consiste_parcela_em_dia_w	:= 'S';
				end if;

				if (qt_titulares_inicial_w <> 0 or qt_titulares_final_w <> 0) then
					if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
						select	max(dt_contrato)
						into STRICT	dt_contrato_w
						from	pls_contrato
						where	nr_sequencia	= nr_seq_contrato_w;
					elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
						select	max(dt_inclusao)
						into STRICT	dt_contrato_w
						from	pls_intercambio
						where	nr_sequencia	= nr_seq_intercambio_w;
					end if;

					if (nr_parcela_contrato_w = 1) or (fim_dia(add_months(dt_mesano_referencia_w,-1)) < fim_dia(dt_contrato_w)) then
						qt_titulares_w	:= pls_obter_qt_titulares_ativos(nr_seq_contrato_w, nr_seq_intercambio_w, null, fim_dia(dt_contrato_w));
					else
						qt_titulares_w	:= pls_obter_qt_titulares_ativos(nr_seq_contrato_w, nr_seq_intercambio_w, null, fim_dia(add_months(dt_mesano_referencia_w,-1)));
					end if;
					ie_consiste_qt_titular_w	:= 'S';
				else
					qt_titulares_w	:= 0;
					ie_consiste_qt_titular_w	:= 'N';
				end if;

				if	((nr_parcela_dia_w between qt_parcelas_pagas_inicial_w and qt_parcelas_pagas_final_w AND ie_consiste_parcela_em_dia_w = 'S') or (ie_consiste_parcela_em_dia_w = 'N')) and
					((ie_consiste_qt_titular_w = 'S' and qt_titulares_w between qt_titulares_inicial_w and qt_titulares_final_w) or (ie_consiste_qt_titular_w = 'N')) and
					((ie_titularidade_w = ie_titularidade_regra_w) or (ie_titularidade_regra_w = 'A') or (coalesce(ie_titularidade_regra_w::text, '') = '')) then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
							coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	vl_bonificacao_w,
							tx_bonificacao_w
						from	pls_bonificacao_vinculo		a,
							pls_bonificacao			b,
							pls_sca_vinculo			d,
							pls_plano			e,
							pls_segurado			f
						where	a.nr_seq_bonificacao	= b.nr_sequencia
						and	a.nr_seq_plano		= d.nr_seq_plano
						and	d.nr_seq_plano		= e.nr_sequencia
						and	e.nr_sequencia		= a.nr_seq_plano
						and	d.nr_seq_segurado 	= nr_seq_segurado_p
						and	f.nr_sequencia = d.nr_seq_segurado
						and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela between coalesce(nr_parcela_inicio_w,b.nr_parcela) and coalesce(nr_parcela_fim_w,b.nr_parcela)
					and	((a.ie_tipo_item <> '15') or ((a.ie_tipo_item = '15') and (coalesce(a.nr_parcela_sca,nr_parcela_inicial_sca_w) >= nr_parcela_inicial_sca_w and coalesce(a.nr_parcela_sca,nr_parcela_final_sca_w) <= nr_parcela_final_sca_w)))
					and	b.nr_sequencia		= nr_seq_mensalidade_seg_p
					and	nr_seq_vinculo_sca	= nr_seq_vinculo_sca_w
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					if (coalesce(vl_item_w,0) <> 0) then
						vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0));
					end if;
				end if;
			elsif (ie_cooperado_w = 'S') then
				if	((qt_tempo_cooperado_w >= qt_tempo_cooperado_inicial_w AND qt_tempo_cooperado_w <= qt_tempo_cooperado_final_w) or
					(qt_tempo_cooperado_inicial_w = 0 AND qt_tempo_cooperado_final_w = 0)) then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	tx_bonificacao_w
						from	pls_bonificacao_vinculo		a,
							pls_bonificacao			b,
							pls_sca_vinculo			d,
							pls_plano			e,
							pls_segurado			f
						where	a.nr_seq_bonificacao	= b.nr_sequencia
						and	a.nr_seq_plano		= d.nr_seq_plano
						and	d.nr_seq_plano		= e.nr_sequencia
						and	e.nr_sequencia		= a.nr_seq_plano
						and	d.nr_seq_segurado 	= nr_seq_segurado_p
						and	f.nr_sequencia = d.nr_seq_segurado
						and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela between coalesce(nr_parcela_inicio_w,b.nr_parcela) and coalesce(nr_parcela_fim_w,b.nr_parcela)
					and	((a.ie_tipo_item <> '15') or ((a.ie_tipo_item = '15') and (coalesce(a.nr_parcela_sca,nr_parcela_inicial_sca_w) >= nr_parcela_inicial_sca_w and coalesce(a.nr_parcela_sca,nr_parcela_final_sca_w) <= nr_parcela_final_sca_w)))
					and	b.nr_sequencia		= nr_seq_mensalidade_seg_p
					and	nr_seq_vinculo_sca	= nr_seq_vinculo_sca_w
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)));

					/* Buscar o cônjuge, caso exista taxa cadastrada para o mesmo */

					if (tx_bonificacao_conjuge_w <> 0) and (coalesce(ie_restricao_w,'N') <> 'N') then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_dependente_legal_w
						from	pls_segurado	a
						where	a.nr_seq_titular	= nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	coalesce(a.dt_rescisao::text, '') = ''
						and	coalesce(a.ie_bonific_cooperado,'N')	= 'S';
						/*and	exists	(select	1
								from	grau_parentesco x
								where	x.nr_sequencia		= a.nr_seq_parentesco
								and	x.ie_tipo_parentesco	= '1'); Domínio 1885 - Dependente Legal */
						if (coalesce(nr_seq_dependente_legal_w,0) <> 0) then
							insert	into	pls_segurado_mensalidade(	nr_sequencia, nr_seq_segurado, cd_estabelecimento,
									dt_referencia, ie_tipo_item, dt_atualizacao,
									dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
									vl_item, tx_desconto, ie_situacao, ie_acao_desfazer)
								values (	nextval('pls_segurado_mensalidade_seq'), nr_seq_dependente_legal_w, cd_estabelecimento_w,
									dt_mesano_referencia_w, '14', clock_timestamp(),
									clock_timestamp(), nm_usuario_p, nm_usuario_p,
									0, tx_bonificacao_conjuge_w, 'A', 'E');
						end if;
					end if;
				end if;
			end if;
		elsif (ie_tipo_regra_w = 'D') then
			/* Quantidade de vidas do contrato e contrato principal */

			if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
				if (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
					/* Quantidade de vidas da familia do beneficiário */

					select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
					into STRICT	qt_vidas_w
					from	pls_segurado	a
					where	a.nr_sequencia = nr_seq_segurado_p
					and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
					and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
					and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

					select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
					into STRICT	qt_vidas_bonificacao_w
					from	pls_segurado		a,
						pls_bonificacao_vinculo b
					where	b.nr_seq_segurado	= a.nr_sequencia
					and	b.nr_seq_bonificacao 	= nr_seq_bonificacao_w
					and	a.nr_sequencia 		= nr_seq_segurado_p
					and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
					and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
					and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
					and	coalesce(a.ie_situacao_trabalhista::text, '') = '';
				else
					select	count(1)
					into STRICT	qt_vidas_w
					from	pls_contrato	a,
						pls_segurado	b
					where	b.nr_seq_contrato	= a.nr_sequencia
					and	((a.nr_sequencia = nr_seq_contrato_p) or (a.nr_contrato_principal = nr_seq_contrato_p))
					and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
					and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
					and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

					/* Quantidade de vidas que possuem a bonificação */

					select	count(1)
					into STRICT	qt_vidas_bonificacao_w
					from	pls_contrato		a,
						pls_segurado		b,
						pls_bonificacao_vinculo	c
					where	b.nr_seq_contrato	= a.nr_sequencia
					and	c.nr_seq_segurado	= b.nr_sequencia
					and	c.nr_seq_bonificacao	= nr_seq_bonificacao_w
					and	((a.nr_sequencia = nr_seq_contrato_p) or (a.nr_contrato_principal = nr_seq_contrato_p))
					and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
					and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
					and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
					and	coalesce(b.ie_situacao_trabalhista::text, '') = '';

					select	max(nr_contrato_principal)
					into STRICT	nr_contrato_principal_w
					from	pls_contrato
					where	nr_sequencia	= nr_seq_contrato_p;

					if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

						select	count(1)
						into STRICT	qt_vidas_bonificacao_w
						from	pls_contrato		a,
							pls_segurado		b,
							pls_bonificacao_vinculo	c
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	c.nr_seq_segurado	= b.nr_sequencia
						and	c.nr_seq_bonificacao	= nr_seq_bonificacao_w
						and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					end if;
				end if;
			elsif (nr_seq_intercambio_p IS NOT NULL AND nr_seq_intercambio_p::text <> '') then
				select	count(1)
				into STRICT	qt_vidas_w
				from	pls_intercambio	a,
					pls_segurado	b
				where	b.nr_seq_intercambio	= a.nr_sequencia
				and	a.nr_sequencia		= nr_seq_intercambio_p
				and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
				and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
				and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

				select	count(1)
				into STRICT	qt_vidas_bonificacao_w
				from	pls_intercambio		a,
					pls_segurado		b,
					pls_bonificacao_vinculo	c
				where	b.nr_seq_intercambio	= a.nr_sequencia
				and	c.nr_seq_segurado	= b.nr_sequencia
				and	a.nr_sequencia		= nr_seq_intercambio_p
				and	c.nr_seq_bonificacao	= nr_seq_bonificacao_w
				and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
				and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
				and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
			end if;
			/* Fim qt vidas */

			if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') then
				select	sum(vl_item)
				into STRICT	vl_mens_desconto_w
				from	pls_mensalidade_seg_item
				where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
				and	pls_obter_item_mens(ie_tipo_item_w,ie_tipo_item) = 'S';
			else
				vl_mens_desconto_w	:= vl_mens_desc_w;
			end if;

			if (ie_base_maior_valor_w = 'S') then
				if (ie_titularidade_w = 'T') then
					nr_seq_titular_w	:= nr_seq_segurado_p;
					select	count(1)
					into STRICT	qt_benef_desconto_w
					from	pls_segurado	a,
						pls_sca_vinculo	b
					where	((a.nr_sequencia = nr_seq_titular_w) or (a.nr_seq_titular = nr_seq_titular_w))
					and	b.nr_seq_segurado	= a.nr_sequencia
					and	coalesce(a.dt_rescisao::text, '') = ''
					and	b.nr_seq_plano		= nr_seq_sca_w;
				elsif (ie_titularidade_w = 'D') then
					select	nr_seq_titular
					into STRICT	nr_seq_titular_w
					from	pls_segurado
					where	nr_sequencia = nr_seq_segurado_p;

					select	count(1)
					into STRICT	qt_benef_desconto_w
					from	pls_segurado	a,
						pls_sca_vinculo	b
					where	((a.nr_sequencia = nr_seq_titular_w) or (a.nr_seq_titular = nr_seq_titular_w))
					and	b.nr_seq_segurado	= a.nr_sequencia
					and	coalesce(a.dt_rescisao::text, '') = ''
					and	b.nr_seq_plano		= nr_seq_sca_w;
				end if;

				select	max(tx_desconto),
					max(qt_min_vidas),
					max(vl_desconto)
				into STRICT	tx_desconto_w,
					qt_min_vidas_w,
					vl_desconto_w
				from	pls_preco_regra
				where	nr_seq_regra = nr_seq_desconto_w
				and	qt_vidas_w between coalesce(qt_min_vidas,qt_benef_desconto_w) and coalesce(qt_max_vidas,qt_benef_desconto_w);

				i		:= 0;
				vl_sca_maior_w	:= 0;
				open C06;
				loop
				fetch C06 into
					nr_seq_segurado_w,
					vl_preco_atual_sca_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
					begin
					if (vl_preco_atual_sca_w > vl_sca_maior_w) then
						vl_sca_maior_w	:= vl_preco_atual_sca_w;
					end if;

					if	(nr_seq_segurado_w = nr_seq_segurado_p AND i >= qt_min_vidas_w) then
						ie_gerar_bonus_w	:= 'S';

						begin
						select	d.vl_preco_atual
						into STRICT	vl_sca_w
						from	pls_segurado		a,
							pls_sca_vinculo		b,
							pls_tabela_preco	c,
							pls_plano_preco		d,
							pessoa_fisica		e
						where	a.nr_sequencia		= nr_seq_segurado_p
						and	b.nr_seq_segurado	= a.nr_sequencia
						and	b.nr_seq_tabela		= c.nr_sequencia
						and	d.nr_seq_tabela		= c.nr_sequencia
						and	a.cd_pessoa_fisica	= e.cd_pessoa_fisica
						and	b.nr_seq_plano		= nr_seq_sca_w
						and	coalesce(a.dt_rescisao::text, '') = ''
						and	obter_idade_pf(a.cd_pessoa_fisica, dt_mesano_referencia_w, 'A') between d.qt_idade_inicial and d.qt_idade_final
						order by	a.dt_contratacao,
								a.nr_sequencia;
						exception
						when others then
							vl_sca_w	:= 0;
						end;
					end if;
					i	:= i+ 1;
					end;
				end loop;
				close C06;

				if (ie_gerar_bonus_w = 'S') then
					vl_bonific_total_w	:= vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_sca_maior_w) + coalesce(vl_desconto_w,0);

					if (vl_bonific_total_w > vl_sca_w) then
						vl_bonific_total_w	:= vl_sca_w;
					end if;
				end if;
			else
				select	max(tx_desconto),
					max(vl_desconto)
				into STRICT	tx_desconto_w,
					vl_desconto_w
				from	pls_preco_regra
				where	nr_seq_regra = nr_seq_desconto_w
				and	qt_vidas_w between coalesce(qt_min_vidas,qt_vidas_w) and coalesce(qt_max_vidas,qt_vidas_w);

				vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mens_desconto_w) + coalesce(vl_desconto_w,0); /* Calcula os desconto das bonificações */
			end if;
		end if;

		ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', vinculado a um SCA do beneficiário.';

		if (ie_restricao_w = 'N') then
			vl_bonific_total_w := 0;
			ds_observacao_w := ds_obs_w;
		end if;

		select	count(1)
		into STRICT	qt_cobertura_w
		from	pls_bonificacao_regra
		where	nr_seq_bonificacao = nr_seq_bonificacao_w
		and	(nr_seq_tipo_cobertura IS NOT NULL AND nr_seq_tipo_cobertura::text <> '');

		if (ie_lancamento_mensalidade_w = 'E') then
			vl_bonific_total_w := vl_bonific_total_w * -1;
			ds_observacao_w	:= 'Valor gerado com a bonificação "'||nm_bonificacao_w||'", vinculado a um SCA do beneficiário. Valor original: '||vl_preco_pre_w;
			vl_preco_pre_bonific_w	:= vl_mens_desc_w + vl_bonific_total_w;

			if (vl_preco_pre_bonific_w < vl_minimo_w) then
				vl_item_embutido_w	:= vl_minimo_w;
				ds_observacao_w := 'Valor gerado com a bonificação: '||nm_bonificacao_w||', respeitando o valor mínimo permitido para a tabela de preço. Vinculado a um SCA do beneficiário. Valor original: '||Campo_Mascara_virgula(vl_preco_pre_w);
			else
				vl_item_embutido_w	:= vl_preco_pre_w + vl_bonific_total_w;
			end if;

			if (vl_bonific_total_w <> 0) then
				update	pls_mensalidade_seg_item
				set	vl_item			= coalesce(vl_item_embutido_w,0),
					vl_bonificacao_embutido	= vl_bonific_total_w,
					ds_observacao		= ds_observacao_w
				where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
				and	ie_tipo_item = '1';
			end if;
			vl_bonific_total_w	:= 0;
			vl_item_embutido_w	:= 0;
		end if;

		select	count(*)
		into STRICT	qt_bonific_segurado_w
		from	pls_mensalidade_seg_item
		where	vl_item = 0
		and	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
		and	nr_seq_bonificacao_vinculo = nr_seq_vinculo_bonificacao_w;

		if	((ie_restricao_w <> 'A') and (qt_bonific_segurado_w = 0) and (vl_bonific_total_w <> 0 or ie_restricao_w = 'N') and (qt_cobertura_w	= 0) and (ie_lancamento_mensalidade_w = 'D')) then
			vl_preco_pre_bonific_w := vl_mens_desc_w - vl_bonific_total_w;
			if (vl_preco_pre_bonific_w < vl_minimo_w) then
				vl_bonific_total_w := vl_mens_desc_w - vl_minimo_w;
				ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', respeitando o valor mínimo permitido para a tabela de preço. Vinculado a um SCA do beneficiário.';
			end if;

			vl_bonific_total_w := vl_bonific_total_w * -1;

			nr_seq_item_mensalidade_w := null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, nr_seq_vinculo_sca_w, null, null, null, coalesce(vl_bonific_total_w,0), nr_seq_item_mensalidade_w);
		end if;
		vl_bonific_total_w := 0;
		end;
	end loop;
	close C04;
end if;

select	count(1)
into STRICT	qt_bonificacao_w
from	pls_bonificacao_vinculo	a,
	pls_grupo_contrato	b,
	pls_contrato_grupo	c,
	pls_contrato		d,
	pls_segurado		e
where	a.nr_seq_grupo_contrato	= b.nr_sequencia
and	c.nr_seq_grupo		= b.nr_sequencia
and	c.nr_seq_contrato	= d.nr_sequencia
and	e.nr_seq_contrato	= d.nr_sequencia
and	e.nr_sequencia		= nr_seq_segurado_p
and	coalesce(nr_seq_bonificacao_obito_w::text, '') = '';

if (qt_bonificacao_w > 0) then
	/* Gerar a bonificação para o grupo de contrato */

	open C05;
	loop
	fetch C05 into
		nr_seq_bonificacao_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w,
		ie_tipo_item_w,
		nr_parcela_inicio_w,
		nr_parcela_fim_w,
		nr_seq_desconto_w,
		vl_bonificacao_w,
		tx_bonificacao_w,
		ie_alteracao_vinculacao_w,
		nr_seq_vinculo_bonificacao_w,
		ie_lancamento_mensalidade_w,
		ie_acao_contrato_w,
		ie_tipo_regra_w,
		qt_parcelas_pagas_inicial_w,
		qt_parcelas_pagas_final_w,
		ie_cooperado_w,
		qt_tempo_cooperado_inicial_w,
		qt_tempo_cooperado_final_w,
		tx_bonificacao_conjuge_w,
		nr_parcela_inicial_sca_w,
		nr_parcela_final_sca_w,
		ie_tipo_segurado_regra_w,
		ie_tipo_vidas_contrato_w,
		ie_possui_bonificacao_w,
		ie_demitido_exonerado_w,
		nm_bonificacao_w,
		ds_grupo_contrato_w,
		ie_titularidade_w,
		ie_titularidade_regra_w,
		qt_titulares_inicial_w,
		qt_titulares_final_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		SELECT * FROM pls_gerar_bonific_restricao(nr_seq_bonificacao_w, nr_seq_segurado_p, nr_seq_mensalidade_seg_p, dt_mesano_referencia_w, nm_usuario_p, ie_restricao_w, ds_obs_w) INTO STRICT ie_restricao_w, ds_obs_w;
		if (ie_tipo_regra_w = 'M') then
			if (ie_cooperado_w = 'N') then

				if	((coalesce(qt_parcelas_pagas_inicial_w,0) = 0) and (coalesce(qt_parcelas_pagas_final_w,0) = 0)) then
					nr_parcela_dia_w		:= 0;
					ie_consiste_parcela_em_dia_w	:= 'N';
				else
					nr_parcela_dia_w		:= pls_obter_nr_parcela_em_dia(nr_seq_mensalidade_w,nr_seq_mensalidade_seg_p,nr_seq_vinculo_bonificacao_w);
					ie_consiste_parcela_em_dia_w	:= 'S';
				end if;

				if (qt_titulares_inicial_w <> 0 or qt_titulares_final_w <> 0) then
					if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
						select	max(dt_contrato)
						into STRICT	dt_contrato_w
						from	pls_contrato
						where	nr_sequencia	= nr_seq_contrato_w;
					elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
						select	max(dt_inclusao)
						into STRICT	dt_contrato_w
						from	pls_intercambio
						where	nr_sequencia	= nr_seq_intercambio_w;
					end if;

					if (nr_parcela_contrato_w = 1) or (fim_dia(add_months(dt_mesano_referencia_w,-1)) < fim_dia(dt_contrato_w)) then
						qt_titulares_w	:= pls_obter_qt_titulares_ativos(null, null, nr_seq_grupo_contrato_w, fim_dia(dt_contrato_w));
					else
						qt_titulares_w	:= pls_obter_qt_titulares_ativos(null, null, nr_seq_grupo_contrato_w, fim_dia(add_months(dt_mesano_referencia_w,-1)));
					end if;
					ie_consiste_qt_titular_w	:= 'S';
				else
					qt_titulares_w	:= 0;
					ie_consiste_qt_titular_w	:= 'N';
				end if;

				if	((nr_parcela_dia_w between qt_parcelas_pagas_inicial_w and qt_parcelas_pagas_final_w AND ie_consiste_parcela_em_dia_w = 'S') or (ie_consiste_parcela_em_dia_w = 'N')) and
					((ie_consiste_qt_titular_w = 'S' and qt_titulares_w between qt_titulares_inicial_w and qt_titulares_final_w) or (ie_consiste_qt_titular_w = 'N')) and
					((ie_titularidade_w = ie_titularidade_regra_w) or (ie_titularidade_regra_w = 'A') or (coalesce(ie_titularidade_regra_w::text, '') = '')) then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
							coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	vl_bonificacao_w,
							tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b
						where	a.nr_seq_contrato = nr_seq_contrato_p
						and	a.nr_seq_bonificacao = b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia = nr_seq_vinculo_bonificacao_w
						and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela between coalesce(nr_parcela_inicio_w,b.nr_parcela) and coalesce(nr_parcela_fim_w,b.nr_parcela)
					and	((a.ie_tipo_item <> '15') or ((a.ie_tipo_item = '15') and (coalesce(a.nr_parcela_sca,nr_parcela_inicial_sca_w) >= nr_parcela_inicial_sca_w and coalesce(a.nr_parcela_sca,nr_parcela_final_sca_w) <= nr_parcela_final_sca_w)))
					and	b.nr_sequencia = nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					if (coalesce(vl_item_w,0) <> 0) then
						vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0); /* Calcula as bonificações */
					end if;
				end if;
			elsif (ie_cooperado_w = 'S') then
				if	((qt_tempo_cooperado_w >= qt_tempo_cooperado_inicial_w AND qt_tempo_cooperado_w <= qt_tempo_cooperado_final_w) or
					(qt_tempo_cooperado_inicial_w = 0 AND qt_tempo_cooperado_final_w = 0)) then
					if (ie_alteracao_vinculacao_w = 'S') then
						select	coalesce(max(tx_bonificacao),tx_bonificacao_w)
						into STRICT	tx_bonificacao_w
						from	pls_bonificacao_vinculo	a,
							pls_bonificacao		b
						where	a.nr_seq_contrato = nr_seq_contrato_p
						and	a.nr_seq_bonificacao = b.nr_sequencia
						and	b.ie_alteracao_vinculacao = 'S'
						and	a.nr_sequencia = nr_seq_vinculo_bonificacao_w
						and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
					end if;

					select	sum(a.vl_item)
					into STRICT	vl_item_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
					and	b.nr_parcela between coalesce(nr_parcela_inicio_w,b.nr_parcela) and coalesce(nr_parcela_fim_w,b.nr_parcela)
					and	((a.ie_tipo_item <> '15') or ((a.ie_tipo_item = '15') and (coalesce(a.nr_parcela_sca,nr_parcela_inicial_sca_w) >= nr_parcela_inicial_sca_w and coalesce(a.nr_parcela_sca,nr_parcela_final_sca_w) <= nr_parcela_final_sca_w)))
					and	b.nr_sequencia = nr_seq_mensalidade_seg_p
					and	a.nr_seq_mensalidade_seg = b.nr_sequencia;

					vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0));

					/* Buscar o cônjuge, caso exista taxa cadastrada para o mesmo */

					if (tx_bonificacao_conjuge_w <> 0) and (coalesce(ie_restricao_w,'N') <> 'N') then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_dependente_legal_w
						from	pls_segurado	a
						where	a.nr_seq_titular	= nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	coalesce(a.dt_rescisao::text, '') = ''
						and	coalesce(a.ie_bonific_cooperado,'N')	= 'S';
						/*and	exists	(select	1
								from	grau_parentesco x
								where	x.nr_sequencia		= a.nr_seq_parentesco
								and	x.ie_tipo_parentesco	= '1'); Domínio 1885 - Dependente Legal */
						if (coalesce(nr_seq_dependente_legal_w,0) <> 0) then
							insert	into	pls_segurado_mensalidade(	nr_sequencia, nr_seq_segurado, cd_estabelecimento,
									dt_referencia, ie_tipo_item, dt_atualizacao,
									dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
									vl_item, tx_desconto, ie_situacao, ie_acao_desfazer)
								values (	nextval('pls_segurado_mensalidade_seq'), nr_seq_dependente_legal_w, cd_estabelecimento_w,
									dt_mesano_referencia_w, '14', clock_timestamp(),
									clock_timestamp(), nm_usuario_p, nm_usuario_p,
									0, tx_bonificacao_conjuge_w, 'A', 'E');
						end if;
					end if;
				end if;
			end if;
		elsif (ie_tipo_regra_w = 'D') then
			if (coalesce(ie_possui_bonificacao_w,'N') = 'S') then
				/* Quantidade de vidas que possuem a bonificação */

				select	count(1)
				into STRICT	qt_vidas_bonificacao_w
				from	pls_segurado		a,
					pls_contrato		b,
					pls_bonificacao_vinculo	c
				where	a.nr_seq_contrato	= b.nr_sequencia
				and	c.nr_seq_segurado	= a.nr_sequencia
				and	c.nr_seq_bonificacao	= nr_seq_bonificacao_w
				and	((b.nr_sequencia = nr_seq_contrato_p) or (b.nr_contrato_principal = nr_seq_contrato_p))
				and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
				and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
				and	coalesce(a.ie_situacao_trabalhista::text, '') = ''
				and	((coalesce(c.dt_fim_vigencia::text, '') = '') or (c.dt_fim_vigencia > dt_mesano_referencia_w));

				qt_vidas_ww	:= qt_vidas_bonificacao_w;
			elsif (coalesce(ie_demitido_exonerado_w,'N') = 'S') then
				/* Quantidade de vidas do contrato e contrato principal com e sem situação trabalhista */

				select	count(1)
				into STRICT	qt_vidas_trabalhista_w
				from	pls_segurado		d,
					pls_contrato		c,
					pls_contrato_grupo	b,
					pls_grupo_contrato	a
				where	d.nr_seq_contrato	= c.nr_sequencia
				and	b.nr_seq_contrato	= c.nr_sequencia
				and	b.nr_seq_grupo		= a.nr_sequencia
				and	a.nr_sequencia		= nr_seq_grupo_contrato_w
				and	(d.dt_liberacao IS NOT NULL AND d.dt_liberacao::text <> '')
				and	((coalesce(d.dt_rescisao::text, '') = '') or (d.dt_reativacao IS NOT NULL AND d.dt_reativacao::text <> '' AND d.dt_reativacao > d.dt_rescisao))
				and	((d.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

				qt_vidas_ww	:= qt_vidas_trabalhista_w;
			else
				/* Quantidade de vidas do contrato e contrato principal */

				select	count(1)
				into STRICT	qt_vidas_w
				from	pls_segurado		d,
					pls_contrato		c,
					pls_contrato_grupo	b,
					pls_grupo_contrato	a
				where	d.nr_seq_contrato	= c.nr_sequencia
				and	b.nr_seq_contrato	= c.nr_sequencia
				and	b.nr_seq_grupo		= a.nr_sequencia
				and	a.nr_sequencia		= nr_seq_grupo_contrato_w
				and	(d.dt_liberacao IS NOT NULL AND d.dt_liberacao::text <> '')
				and (coalesce(d.dt_rescisao::text, '') = '' or ((d.dt_rescisao IS NOT NULL AND d.dt_rescisao::text <> '') and coalesce(d.dt_reativacao,d.dt_rescisao) > d.dt_rescisao))
				and	((d.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
				and	coalesce(d.ie_situacao_trabalhista::text, '') = '';

				qt_vidas_ww	:= qt_vidas_w;
			end if;

			select	max(nr_sequencia)
			into STRICT	nr_seq_regra_w
			from	pls_preco_regra
			where	nr_seq_regra = nr_seq_desconto_w
			and	qt_vidas_ww between coalesce(qt_min_vidas,qt_vidas_ww) and coalesce(qt_max_vidas,qt_vidas_ww);

			--nr_seq_regra_w	:= pls_regra_exo_dem_bonificacao(nr_seq_desconto_w,'GC',qt_vidas_trabalhista_w,qt_vidas_w, qt_vidas_bonificacao_w);
			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				/*select	nvl(ie_demitido_exonerado,'N')
				into	ie_demitido_exonerado_w
				from	pls_preco_regra
				where	nr_sequencia	= nr_seq_regra_w;*/
				if	((ie_demitido_exonerado_w = 'N') and (coalesce(ie_situacao_trabalhista_w::text, '') = '') or (ie_demitido_exonerado_w = 'S')) then

					select	max(tx_desconto),
						max(vl_desconto)
					into STRICT	tx_desconto_w,
						vl_desconto_w
					from	pls_preco_regra
					where	nr_sequencia	= nr_seq_regra_w;
				end if;
			end if;
			if (ie_tipo_item_w IS NOT NULL AND ie_tipo_item_w::text <> '') then
				select	sum(vl_item)
				into STRICT	vl_mens_desconto_w
				from	pls_mensalidade_seg_item
				where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
				and	pls_obter_item_mens(ie_tipo_item_w,ie_tipo_item) = 'S';
			else
				vl_mens_desconto_w	:= vl_mens_desc_w;
			end if;

			vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mens_desconto_w) + coalesce(vl_desconto_w,0); /* Calcula os desconto das bonificações */
		end if;

		ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', vinculado ao grupo de contrato '||nr_seq_grupo_contrato_w||' - '||ds_grupo_contrato_w||'.';

		if (ie_restricao_w = 'N') then
			vl_bonific_total_w := 0;
			ds_observacao_w := ds_obs_w;
		end if;

		select	count(1)
		into STRICT	qt_cobertura_w
		from	pls_bonificacao_regra
		where	nr_seq_bonificacao = nr_seq_bonificacao_w
		and	(nr_seq_tipo_cobertura IS NOT NULL AND nr_seq_tipo_cobertura::text <> '');

		if (ie_lancamento_mensalidade_w = 'E') then
			vl_bonific_total_w := vl_bonific_total_w * -1;
			ds_observacao_w	:= 'Valor gerado com a bonificação "'||nm_bonificacao_w||'", vinculado ao grupo de contrato '||nr_seq_grupo_contrato_w||'. Valor original: '||Campo_Mascara_virgula(vl_mens_desc_w);
			vl_preco_pre_bonific_w	:= vl_mens_desc_w + vl_bonific_total_w;

			if (vl_preco_pre_bonific_w < vl_minimo_w) then
				vl_item_embutido_w	:= vl_minimo_w;
				ds_observacao_w := 'Valor gerado com a bonificação: '||nm_bonificacao_w||', respeitando o valor mínimo permitido para a tabela de preço. Vinculado ao contrato. Valor original: '||Campo_Mascara_virgula(vl_preco_pre_w);
			else
				vl_item_embutido_w	:= vl_preco_pre_w + vl_bonific_total_w;
			end if;

			if (vl_bonific_total_w <> 0) then
				update	pls_mensalidade_seg_item
				set	vl_item			= coalesce(vl_item_embutido_w,0),
					vl_bonificacao_embutido	= vl_bonific_total_w,
					ds_observacao		= ds_observacao_w
				where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p
				and	ie_tipo_item = '1';
			end if;
			vl_bonific_total_w	:= 0;
			vl_item_embutido_w	:= 0;
		end if;

		select	count(*)
		into STRICT	qt_bonific_segurado_w
		from	pls_mensalidade_seg_item
		where	vl_item = 0
		and	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
		and	nr_seq_bonificacao_vinculo = nr_seq_vinculo_bonificacao_w;

		if	((ie_restricao_w <> 'A') and (qt_bonific_segurado_w = 0) and (vl_bonific_total_w <> 0 or ie_restricao_w = 'N') and (qt_cobertura_w	= 0) and (ie_lancamento_mensalidade_w = 'D')) then
			vl_preco_pre_bonific_w := vl_mens_desc_w - vl_bonific_total_w;
			if (vl_preco_pre_bonific_w < vl_minimo_w) then
				vl_bonific_total_w := vl_mens_desc_w - vl_minimo_w;
				ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', respeitando o valor mínimo permitido para a tabela de preço. Vinculado ao contrato.';
			end if;
			vl_bonific_total_w := vl_bonific_total_w * -1;

			nr_seq_item_mensalidade_w := null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'N', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, null, null, null, null, null, null, null, coalesce(vl_bonific_total_w,0), nr_seq_item_mensalidade_w);
		end if;
		vl_bonific_total_w := 0;
		end;
	end loop;
	close C05;
end if;

select	count(1),
	sum(a.vl_item)
into STRICT	qt_bonificacao_gerada_w,
	vl_bonific_total_w
from	pls_mensalidade_seg_item a,
	pls_mensalidade_segurado b
where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
and	b.nr_sequencia	= nr_seq_mensalidade_seg_p
and	a.ie_tipo_item	= '14';

/* É necessário fazer o mesmo select do preço pré, pois ele pode ter sido alterado por vlaor de bonificação embutido, nessa rotina. */

select	sum(vl_item)
into STRICT	vl_preco_pre_w
from	pls_mensalidade_seg_item a,
	pls_mensalidade_segurado b
where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
and	b.nr_sequencia	= nr_seq_mensalidade_seg_p
and	a.ie_tipo_item	in ('1', '5', '25');

if	(vl_preco_pre_w < vl_minimo_w AND qt_bonificacao_gerada_w = 0) then
	select	ie_calc_primeira_mens
	into STRICT	ie_calc_primeira_mens_w
	from	pls_contrato_pagador
	where	nr_sequencia	= nr_seq_pagador_w;

	if	(nr_parcela_contrato_w = 1 AND ie_calc_primeira_mens_w = 'P') then
		ds_observacao_w	:= 'Valor mínimo permitido não considerado pois a forma de cálculo da 1° mensalidade do pagador é proporcial.';
		update	pls_mensalidade_seg_item
		set	ds_observacao	= ds_observacao_w
		where	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
		and	ie_tipo_item = '1';
	else
		begin
		select	nm_tabela
		into STRICT	nm_tabela_preco_w
		from	pls_tabela_preco
		where	nr_sequencia	= nr_seq_tabela_preco_w;
		exception
		when others then
			nm_tabela_preco_w	:= null;
		end;

		ds_observacao_w	:= 'Valor gerado com o mínimo permitido para a tabela de preço ['||nr_seq_tabela_preco_w||'] - '||nm_tabela_preco_w;

		update	pls_mensalidade_seg_item
		set	vl_item		= coalesce(vl_minimo_w,0),
			ds_observacao	= ds_observacao_w
		where	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
		and	ie_tipo_item = '1';
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mens_bonificacao ( nr_seq_mensalidade_seg_p bigint, nr_seq_intercambio_p bigint, nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text) FROM PUBLIC;

