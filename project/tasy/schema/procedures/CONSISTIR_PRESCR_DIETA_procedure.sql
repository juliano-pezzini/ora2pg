-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_prescr_dieta ( nr_prescricao_p bigint, nr_seq_dieta_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, ds_erro_p INOUT text ) AS $body$
DECLARE


    cd_intervalo_w            varchar(7);
    ie_erro_liberar_prescr_w  varchar(1);
    nr_seq_erro_w             bigint;
    ie_situacao_interv_w      varchar(10);
    hr_prim_horario_w         varchar(10);
    hr_primeiro_horario_w     varchar(10);
    ds_horarios_w             varchar(2000);
    qt_erro_nao_lib_w         bigint;
    qt_erro_lib_w             bigint;
    nr_seq_dieta_w            bigint;
    qt_max_dietas_jejum_w     bigint;
    nr_horas_validade_w       bigint;
    qt_operacao_w             bigint;
    nr_ocorrencia_w           bigint;
    qt_ocorrencias_hor_w      bigint;
    dt_prim_hor_prescr_w      timestamp;
    dt_prim_hor_medic_w       timestamp;
    cd_dieta_w                prescr_dieta.cd_dieta%TYPE;
    ds_justificativa_w        prescr_dieta.ds_justificativa%TYPE;
    ie_obriga_justif_w        varchar(300);
    cd_setor_atendimento_w    prescr_medica.cd_setor_atendimento%TYPE;
    cd_convenio_w             atend_categoria_convenio.cd_convenio%TYPE;
    cont_w                    bigint;
    cd_protocolo_w            bigint;
    nr_seq_protocolo_w        integer;
    cd_protocolo_item_w       bigint;
    sql_w                     varchar(300);
    ds_erro_w                 varchar(4000);
    ds_parametros_w           varchar(4000);

    c00 REFCURSOR;

BEGIN

    qt_max_dietas_jejum_w := obter_param_usuario(924, 510, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, qt_max_dietas_jejum_w);
    IF ( coalesce(nr_prescricao_p, 0) > 0 ) THEN
        IF ( coalesce(nr_seq_dieta_p, 0) > 0 ) THEN
            DELETE FROM prescr_medica_erro
            WHERE
                    nr_seq_dieta = nr_seq_dieta_p
                AND nr_prescricao = nr_prescricao_p;

            OPEN c00 FOR SELECT
                            cd_intervalo,
                            nr_sequencia,
                            ds_horarios,
                            hr_prim_horario,
                            cd_dieta,
                            ds_justificativa,
                            cd_protocolo
                        FROM
                            prescr_dieta
                        WHERE
                                nr_sequencia = nr_seq_dieta_p
                            AND nr_prescricao = nr_prescricao_p;

        ELSE
            DELETE FROM prescr_medica_erro
            WHERE
                (nr_seq_dieta IS NOT NULL AND nr_seq_dieta::text <> '')
                AND nr_prescricao = nr_prescricao_p;

            OPEN c00 FOR SELECT
                            cd_intervalo,
                            nr_sequencia,
                            ds_horarios,
                            hr_prim_horario,
                            cd_dieta,
                            ds_justificativa,
                            cd_protocolo
                        FROM
                            prescr_dieta
                        WHERE
                            nr_prescricao = nr_prescricao_p;

        END IF;

        SELECT
            MAX(to_char(dt_primeiro_horario, 'hh24:mi')),
            MAX(nr_horas_validade),
            MAX(cd_setor_atendimento),
            obter_convenio_atendimento(MAX(nr_atendimento)),
            MAX(cd_protocolo),
            MAX(nr_seq_protocolo)
        INTO STRICT
            hr_primeiro_horario_w,
            nr_horas_validade_w,
            cd_setor_atendimento_w,
            cd_convenio_w,
            cd_protocolo_w,
            nr_seq_protocolo_w
        FROM
            prescr_medica
        WHERE
            nr_prescricao = nr_prescricao_p;

        LOOP
            FETCH c00 INTO
                cd_intervalo_w,
                nr_seq_dieta_w,
                ds_horarios_w,
                hr_prim_horario_w,
                cd_dieta_w,
                ds_justificativa_w,
                cd_protocolo_item_w;
            EXIT WHEN NOT FOUND; /* apply on c00 */
            SELECT
                coalesce(MAX(ie_situacao), 'A'),
                coalesce(MAX(qt_operacao), 1)
            INTO STRICT
                ie_situacao_interv_w,
                qt_operacao_w
            FROM
                intervalo_prescricao
            WHERE
                cd_intervalo = cd_intervalo_w;

            IF (
                ( ( coalesce(cd_intervalo_w::text, '') = '' ) OR ( ie_situacao_interv_w = 'I' ) )
                AND ( wheb_assist_pck.obter_se_consiste_rep(235, cd_perfil_p) = 'S' )
            ) THEN
                ie_erro_liberar_prescr_w := obter_lib_erro_regra_rep(235, cd_perfil_p);
                nr_seq_erro_w := gerar_erro_prescr_dieta(nr_prescricao_p, nr_seq_dieta_w, 235, ie_erro_liberar_prescr_w, NULL, cd_perfil_p, nm_usuario_p, nr_seq_erro_w);

            END IF;

            IF ( coalesce(qt_max_dietas_jejum_w, 0) > 0 )
                AND ( wheb_assist_pck.obter_se_consiste_rep(254, cd_perfil_p) = 'S' )
                AND ( coalesce(qt_max_dietas_jejum_w, 0) < coalesce(obter_qt_dieta_prescr(nr_prescricao_p), 0) )
            THEN
                ie_erro_liberar_prescr_w := obter_lib_erro_regra_rep(254, cd_perfil_p);
                nr_seq_erro_w := gerar_erro_prescr_dieta(nr_prescricao_p, nr_seq_dieta_w, 254, ie_erro_liberar_prescr_w, wheb_mensagem_pck.get_texto(
                306555, 'QT_MAX_DIETAS_JEJUM_W=' || qt_max_dietas_jejum_w), cd_perfil_p, nm_usuario_p, nr_seq_erro_w);

            END IF;

            ie_erro_liberar_prescr_w := '';
            IF (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '')
                AND (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '')
                AND ( wheb_assist_pck.obter_se_consiste_rep(260, cd_perfil_p) = 'S' )
            THEN
                IF (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '')
                    AND ( hr_prim_horario_w <> '  :  ' )
                THEN
                    dt_prim_hor_prescr_w := pkg_date_utils.get_time(clock_timestamp(), hr_primeiro_horario_w, 0);
                    dt_prim_hor_medic_w := pkg_date_utils.get_time(clock_timestamp(), hr_prim_horario_w, 0);
				--- Inicio MD1 Verificar se ja nao existe uma rotina criada para fazer isso.
                    BEGIN
                        sql_w := 'call calcular_horas_validas_md(:1, :2, :3) into :nr_horas_validade_w';
                        EXECUTE sql_w
                            USING IN dt_prim_hor_medic_w, IN dt_prim_hor_prescr_w, IN nr_horas_validade_w, OUT nr_horas_validade_w;
                    EXCEPTION
                        WHEN OTHERS THEN
                            ds_erro_w := sqlerrm;
                            ds_parametros_w := ( 'nr_prescricao_p: '
                                                 || nr_prescricao_p
                                                 || '-'
                                                 || 'nr_seq_dieta_p: '
                                                 || nr_seq_dieta_p
                                                 || '-'
                                                 || 'cd_intervalo_w: '
                                                 || cd_intervalo_w
                                                 || '-'
                                                 || 'ie_situacao_interv_w: '
                                                 || ie_situacao_interv_w
                                                 || '-'
                                                 || 'ds_horarios_w: '
                                                 || ds_horarios_w
                                                 || '-'
                                                 || 'qt_max_dietas_jejum_w: '
                                                 || qt_max_dietas_jejum_w
                                                 || '-'
                                                 || 'qt_operacao_w: '
                                                 || qt_operacao_w
                                                 || '-'
                                                 || 'nr_ocorrencia_w: '
                                                 || nr_ocorrencia_w
                                                 || '-'
                                                 || 'qt_ocorrencias_hor_w: '
                                                 || qt_ocorrencias_hor_w
                                                 || '-'
                                                 || 'cd_dieta_w: '
                                                 || cd_dieta_w
                                                 || '-'
                                                 || 'ds_justificativa_w: '
                                                 || ds_justificativa_w
                                                 || '-'
                                                 || 'cd_protocolo_w: '
                                                 || cd_protocolo_w
                                                 || '-'
                                                 || 'nr_seq_protocolo_w: '
                                                 || nr_seq_protocolo_w
                                                 || '-'
                                                 || 'cd_protocolo_item_w: '
                                                 || cd_protocolo_item_w
                                                 || '-'
                                                 || 'dt_prim_hor_medic_w: '
                                                 || dt_prim_hor_medic_w
                                                 || '-'
                                                 || 'dt_prim_hor_prescr_w: '
                                                 || dt_prim_hor_prescr_w
                                                 || '-'
                                                 || 'nr_horas_validade_w: '
                                                 || nr_horas_validade_w
                                                 || '-'
                                                 || 'nr_horas_validade_w: '
                                                 || nr_horas_validade_w );

                            CALL gravar_log_medical_device('Consistir_prescr_dieta',
                                                     'calcular_horas_validas_md',
                                                     ds_parametros_w,
                                                     ds_erro_w,
                                                     nm_usuario_p,
                                                     'S');
                            nr_horas_validade_w := NULL;
                    END;
				--- Fim MD1
                END IF;

                IF ( qt_operacao_w <= 24 ) THEN
                    qt_ocorrencias_hor_w := coalesce(obter_ocorrencia_intervalo(cd_intervalo_w, nr_horas_validade_w, 'O'), 0);
                ELSE
                    qt_ocorrencias_hor_w := 1;
                END IF;

                nr_ocorrencia_w := obter_ocorrencias_horarios_rep(ds_horarios_w);
                IF ( qt_ocorrencias_hor_w <> nr_ocorrencia_w ) THEN
                    ie_erro_liberar_prescr_w := obter_lib_erro_regra_rep(260, cd_perfil_p);
                    nr_seq_erro_w := gerar_erro_prescr_dieta(nr_prescricao_p, nr_seq_dieta_w, 260, ie_erro_liberar_prescr_w, wheb_mensagem_pck.get_texto(
                    306555, 'QT_MAX_DIETAS_JEJUM_W=' || qt_max_dietas_jejum_w), cd_perfil_p, nm_usuario_p, nr_seq_erro_w);

                END IF;

            END IF;

            SELECT
                MAX(ie_obriga_justif)
            INTO STRICT ie_obriga_justif_w
            FROM
                dieta
            WHERE
                cd_dieta = cd_dieta_w;

            SELECT
                COUNT(nr_sequencia)
            INTO STRICT cont_w
            FROM
                dieta_perfil
            WHERE
                cd_dieta = cd_dieta_w;

            IF ( cont_w > 0 ) THEN
                ie_obriga_justif_w := obter_se_dieta_perfil(cd_perfil_p, cd_setor_atendimento_w, cd_dieta_w, nm_usuario_p, cd_convenio_w,
                                                           'J', ie_obriga_justif_w);
            END IF;

            ie_erro_liberar_prescr_w := '';
            IF ( coalesce(ds_justificativa_w::text, '') = '' )
                AND ( coalesce(ie_obriga_justif_w, 'N') <> 'N' )
                AND ( wheb_assist_pck.obter_se_consiste_rep(286, cd_perfil_p) = 'S' )
            THEN
                ie_erro_liberar_prescr_w := obter_lib_erro_regra_rep(286, cd_perfil_p);
                nr_seq_erro_w := gerar_erro_prescr_dieta(nr_prescricao_p, nr_seq_dieta_w, 286, ie_erro_liberar_prescr_w, substr(ie_obriga_justif_w,
                3, 257), cd_perfil_p, nm_usuario_p, nr_seq_erro_w);

            END IF;

            IF ( wheb_assist_pck.obter_se_consiste_rep(285, cd_perfil_p) = 'S' )
                AND ( obriga_justificativa_protocolo(nr_prescricao_p, cd_protocolo_w, nr_seq_protocolo_w) = 'S' )
                AND ( ( coalesce(cd_protocolo_item_w::text, '') = '' ) OR ( cd_protocolo_item_w <> cd_protocolo_w ) )
                AND ( coalesce(ds_justificativa_w::text, '') = '' )
            THEN
                ie_erro_liberar_prescr_w := obter_lib_erro_regra_rep(285, cd_perfil_p);
                nr_seq_erro_w := gerar_erro_prescr_dieta(nr_prescricao_p, nr_seq_dieta_w, 285, ie_erro_liberar_prescr_w, NULL, cd_perfil_p, nm_usuario_p, nr_seq_erro_w);

            END IF;

            SELECT
                COUNT(*)
            INTO STRICT qt_erro_nao_lib_w
            FROM
                prescr_medica_erro
            WHERE
                    ie_libera = 'N'
                AND nr_seq_dieta = nr_seq_dieta_w
                AND nr_prescricao = nr_prescricao_p  LIMIT 1;

            SELECT
                COUNT(*)
            INTO STRICT qt_erro_lib_w
            FROM
                prescr_medica_erro
            WHERE
                    ie_libera = 'S'
                AND nr_seq_dieta = nr_seq_dieta_w
                AND nr_prescricao = nr_prescricao_p  LIMIT 1;

            IF ( qt_erro_nao_lib_w > 0 ) THEN
                UPDATE prescr_dieta
                SET
                    ie_erro = 125,
                    ds_cor_erro = obter_cor_erro_prescr_rec(nr_prescricao_p, nr_seq_dieta_w, 125, cd_estabelecimento_p, cd_perfil_p)
                WHERE
                        nr_sequencia = nr_seq_dieta_w
                    AND nr_prescricao = nr_prescricao_p;

                ds_erro_p := '125';
            ELSIF ( qt_erro_lib_w > 0 ) THEN
                UPDATE prescr_dieta
                SET
                    ie_erro = 124,
                    ds_cor_erro = obter_cor_erro_prescr_rec(nr_prescricao_p, nr_seq_dieta_w, 124, cd_estabelecimento_p, cd_perfil_p)
                WHERE
                        nr_sequencia = nr_seq_dieta_w
                    AND nr_prescricao = nr_prescricao_p;

            ELSE
                UPDATE prescr_dieta
                SET
                    ie_erro = 0,
                    ds_cor_erro  = NULL
                WHERE
                        nr_sequencia = nr_seq_dieta_w
                    AND nr_prescricao = nr_prescricao_p;

            END IF;

        END LOOP;

        CLOSE c00;
    END IF;

    IF ( coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S' ) THEN
        COMMIT;
    END IF;

    IF ( coalesce(nr_seq_dieta_p, 0) > 0 ) THEN
        SELECT
            MAX(ie_erro)
        INTO STRICT ds_erro_p
        FROM
            prescr_dieta
        WHERE
                nr_sequencia = nr_seq_dieta_p
            AND nr_prescricao = nr_prescricao_p;

    END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_prescr_dieta ( nr_prescricao_p bigint, nr_seq_dieta_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, ds_erro_p INOUT text ) FROM PUBLIC;

