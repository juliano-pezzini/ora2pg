-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agenda_valida_turno_duplic ( cd_agenda_p bigint, ie_frequencia_p text, dt_dia_semana_p bigint, hr_inicial_p timestamp, hr_final_p timestamp, hr_inicial_intervalo_p timestamp, hr_final_intervalo_p timestamp, nr_minuto_intervalo_p bigint, dt_inicio_vigencia_p timestamp, dt_final_vigencia_p timestamp, ie_semana_p bigint, ie_feriado_p text, dt_agenda_p timestamp, ie_horario_adicional_p text, ie_dia_semana_p bigint, qt_total_turno_p bigint, dt_agenda_fim_p timestamp, nm_tabela_p text, nr_seq_turno_p bigint DEFAULT NULL) AS $body$
DECLARE


ie_valida_turno_duplic_w	parametro_agenda.ie_valida_turno_duplic%TYPE;
cd_tipo_agenda_w		    agenda.cd_tipo_agenda%TYPE;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%TYPE := wheb_usuario_pck.get_cd_estabelecimento;
qt_registros_w 				integer;


BEGIN

SELECT	obter_parametro_agenda(cd_estabelecimento_w, 'IE_VALIDA_TURNO_DUPLIC', 'N')
INTO STRICT	ie_valida_turno_duplic_w
;

IF (ie_valida_turno_duplic_w = 'S') THEN
	SELECT	MAX(cd_tipo_agenda)
	INTO STRICT	cd_tipo_agenda_w
	FROM	agenda
	WHERE	cd_agenda = cd_agenda_p;

	IF (cd_tipo_agenda_w = 2) THEN
		IF (UPPER(nm_tabela_p) = 'AGENDA_HORARIO') THEN
			SELECT    COUNT(*)
			INTO STRICT	  qt_registros_w
			FROM	  agenda_horario
			WHERE	  cd_agenda			        	= cd_agenda_p
			AND (ie_frequencia		    	= ie_frequencia_p 															OR (coalesce(ie_frequencia::text, '') = '' AND coalesce(ie_frequencia_p::text, '') = ''))
			AND 	  dt_dia_semana        	    	= dt_dia_semana_p
			AND (pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_inicial),							pkg_date_utils.extract_field('MINUTE', hr_inicial))
					  = pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_inicial_p), 						pkg_date_utils.extract_field('MINUTE', hr_inicial_p)))
			AND (pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_final),							pkg_date_utils.extract_field('MINUTE', hr_final))
					  = pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_final_p), 							pkg_date_utils.extract_field('MINUTE', hr_final_p)))
			AND (pkg_date_utils.get_time(COALESCE(pkg_date_utils.extract_field('HOUR', hr_inicial_intervalo),00),	COALESCE(pkg_date_utils.extract_field('MINUTE', hr_inicial_intervalo), 00))
					  = pkg_date_utils.get_time(COALESCE(pkg_date_utils.extract_field('HOUR', hr_inicial_intervalo_p),00), COALESCE(pkg_date_utils.extract_field('MINUTE', hr_inicial_intervalo_p), 00)))
			AND (pkg_date_utils.get_time(COALESCE(pkg_date_utils.extract_field('HOUR', hr_final_intervalo),00),		COALESCE(pkg_date_utils.extract_field('MINUTE', hr_final_intervalo), 00))
					  = pkg_date_utils.get_time(COALESCE(pkg_date_utils.extract_field('HOUR', hr_final_intervalo_p),00), 	COALESCE(pkg_date_utils.extract_field('MINUTE', hr_final_intervalo_p), 00)))
			AND 	  nr_minuto_intervalo   		= nr_minuto_intervalo_p
			AND (dt_inicio_vigencia    		= dt_inicio_vigencia_p 														OR (coalesce(dt_inicio_vigencia::text, '') = '' AND coalesce(dt_inicio_vigencia_p::text, '') = ''))
			AND (dt_final_vigencia     		= dt_final_vigencia_p 														OR (coalesce(dt_final_vigencia::text, '') = '' AND coalesce(dt_final_vigencia_p::text, '') = ''))
			AND 	  COALESCE(ie_semana, 0)        = COALESCE(ie_semana_p, 0)
			AND (ie_feriado            		= ie_feriado_p 															    OR (coalesce(ie_feriado::text, '') = '' AND coalesce(ie_feriado_p::text, '') = '' ))
			AND (nr_sequencia <> nr_seq_turno_p or coalesce(nr_seq_turno_p::text, '') = '');

		ELSIF (UPPER(nm_tabela_p) = 'AGENDA_HORARIO_ESP') THEN
			SELECT	  COUNT(*)
			INTO STRICT	  qt_registros_w
			FROM	  agenda_horario_esp
			WHERE	  cd_agenda               		= cd_agenda_p
			AND (dt_agenda 					BETWEEN pkg_date_utils.start_of(dt_agenda_p,'DAY',0) 						AND pkg_date_utils.end_of(dt_agenda_p,'DAY',0))
			AND		  ie_horario_adicional     		= ie_horario_adicional_p
			AND (pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_inicial),							pkg_date_utils.extract_field('MINUTE', hr_inicial))
					  = pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_inicial_p), 						pkg_date_utils.extract_field('MINUTE', hr_inicial_p)))
			AND (pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_final),							pkg_date_utils.extract_field('MINUTE', hr_final))
					  = pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_final_p), 							pkg_date_utils.extract_field('MINUTE', hr_final_p)))
			AND 	  nr_minuto_intervalo   		= nr_minuto_intervalo_p
			AND (hr_inicial_intervalo  		= hr_inicial_intervalo_p 													OR (coalesce(hr_inicial_intervalo::text, '') = '' AND coalesce(hr_inicial_intervalo_p::text, '') = ''))
			AND (hr_final_intervalo    		= hr_final_intervalo_p 														OR (coalesce(hr_final_intervalo::text, '') = '' AND coalesce(hr_final_intervalo_p::text, '') = ''))
			AND (nr_sequencia <> nr_seq_turno_p or coalesce(nr_seq_turno_p::text, '') = '');

		END IF;

	ELSIF (UPPER(nm_tabela_p) = 'AGENDA_TURNO') THEN
			SELECT  COUNT(*)
			INTO STRICT    qt_registros_w
			FROM    agenda_turno
			WHERE   cd_agenda               		= cd_agenda_p
			AND (ie_frequencia          		= ie_frequencia_p 															OR (coalesce(ie_frequencia::text, '') = '' AND coalesce(ie_frequencia_p::text, '') = ''))
			AND     ie_dia_semana           		= ie_dia_semana_p
			AND (pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_inicial),							pkg_date_utils.extract_field('MINUTE', hr_inicial))
					= pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_inicial_p), 						pkg_date_utils.extract_field('MINUTE', hr_inicial_p)))
			AND (pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_final),							pkg_date_utils.extract_field('MINUTE', hr_final))
					= pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_final_p), 							pkg_date_utils.extract_field('MINUTE', hr_final_p)))
			AND (pkg_date_utils.get_time(COALESCE(pkg_date_utils.extract_field('HOUR', hr_inicial_intervalo),00),	COALESCE(pkg_date_utils.extract_field('MINUTE', hr_inicial_intervalo), 00))
					= pkg_date_utils.get_time(COALESCE(pkg_date_utils.extract_field('HOUR', hr_inicial_intervalo_p),00), COALESCE(pkg_date_utils.extract_field('MINUTE', hr_inicial_intervalo_p), 00)))
			AND (pkg_date_utils.get_time(COALESCE(pkg_date_utils.extract_field('HOUR', hr_final_intervalo),00),		COALESCE(pkg_date_utils.extract_field('MINUTE', hr_final_intervalo), 00))
					= pkg_date_utils.get_time(COALESCE(pkg_date_utils.extract_field('HOUR', hr_final_intervalo_p),00), 	COALESCE(pkg_date_utils.extract_field('MINUTE', hr_final_intervalo_p), 00)))
			AND     ((dt_inicio_vigencia      		BETWEEN pkg_date_utils.start_of(dt_inicio_vigencia_p,'DAY',0) 				AND pkg_date_utils.end_of(dt_inicio_vigencia_p,'DAY',0)) OR (coalesce(dt_inicio_vigencia::text, '') = '' AND coalesce(dt_inicio_vigencia_p::text, '') = ''))
			AND     ((dt_final_vigencia      		BETWEEN pkg_date_utils.start_of(dt_final_vigencia_p,'DAY',0) 				AND pkg_date_utils.end_of(dt_final_vigencia_p,'DAY',0)) OR (coalesce(dt_final_vigencia::text, '') = '' AND coalesce(dt_final_vigencia_p::text, '') = ''))
			AND (qt_total_turno    				= qt_total_turno_p															OR (coalesce(qt_total_turno::text, '') = '' AND coalesce(qt_total_turno_p::text, '') = ''))
			AND     COALESCE(ie_semana, 0)        	= COALESCE(ie_semana_p, 0)
			AND (ie_feriado             		= ie_feriado_p 																OR (coalesce(ie_feriado::text, '') = '' AND coalesce(ie_feriado_p::text, '') = ''))
			AND 	((cd_tipo_agenda_w IN (3, 4) 	AND nr_minuto_intervalo = nr_minuto_intervalo_p) 							OR (cd_tipo_agenda_w = 5))
			AND (nr_sequencia <> nr_seq_turno_p or coalesce(nr_seq_turno_p::text, '') = '');

	ELSIF (UPPER(nm_tabela_p) = 'AGENDA_TURNO_ESP') THEN
			SELECT   COUNT(*)
			INTO STRICT     qt_registros_w
			FROM     agenda_turno_esp
			WHERE    cd_agenda 			        	= cd_agenda_p
			AND (dt_agenda                		BETWEEN pkg_date_utils.start_of(dt_agenda_p,'DAY',0) 						AND pkg_date_utils.end_of(dt_agenda_p,'DAY',0))
			AND      ((dt_agenda_fim            	BETWEEN pkg_date_utils.start_of(dt_agenda_fim_p,'DAY',0) 					AND pkg_date_utils.end_of(dt_agenda_fim_p,'DAY',0)) OR (coalesce(dt_agenda_fim::text, '') = '' AND coalesce(dt_agenda_fim_p::text, '') = ''))
			AND      ie_horario_adicional     		= ie_horario_adicional_p
			AND (ie_dia_semana            		= ie_dia_semana_p 															OR (coalesce(ie_dia_semana::text, '') = '' AND coalesce(ie_dia_semana_p::text, '') = ''))
			AND (pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_inicial),							pkg_date_utils.extract_field('MINUTE', hr_inicial))
					 = pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_inicial_p), 						pkg_date_utils.extract_field('MINUTE', hr_inicial_p)))
			AND (pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_final),							pkg_date_utils.extract_field('MINUTE', hr_final))
					 = pkg_date_utils.get_time(pkg_date_utils.extract_field('HOUR', hr_final_p), 							pkg_date_utils.extract_field('MINUTE', hr_final_p)))
			AND      nr_minuto_intervalo      		= nr_minuto_intervalo_p
			AND (nr_sequencia <> nr_seq_turno_p or coalesce(nr_seq_turno_p::text, '') = '');

	END IF;

	IF (qt_registros_w > 0) THEN
	    CALL wheb_mensagem_pck.exibir_mensagem_abort(nr_seq_mensagem_p => 1192170);
	END IF;

END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agenda_valida_turno_duplic ( cd_agenda_p bigint, ie_frequencia_p text, dt_dia_semana_p bigint, hr_inicial_p timestamp, hr_final_p timestamp, hr_inicial_intervalo_p timestamp, hr_final_intervalo_p timestamp, nr_minuto_intervalo_p bigint, dt_inicio_vigencia_p timestamp, dt_final_vigencia_p timestamp, ie_semana_p bigint, ie_feriado_p text, dt_agenda_p timestamp, ie_horario_adicional_p text, ie_dia_semana_p bigint, qt_total_turno_p bigint, dt_agenda_fim_p timestamp, nm_tabela_p text, nr_seq_turno_p bigint DEFAULT NULL) FROM PUBLIC;

