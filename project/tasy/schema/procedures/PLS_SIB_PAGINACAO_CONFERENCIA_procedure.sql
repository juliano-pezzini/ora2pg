-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_sib_paginacao_conferencia ( nr_seq_lote_p pls_sib_conferencia_lote.nr_sequencia%type, nr_seq_conf_arq_p pls_sib_conferencia_arq.nr_sequencia%type, cd_divergencia_p bigint, ie_situacao_p bigint, nr_seq_segurado_p bigint, nr_plano_ans_p text, nr_plano_ops_p text, cd_beneficiario_p text, nr_cnpj_p text, nr_cpf_p text, nr_cco_p text, nm_beneficiario_p text, nr_contrato_p bigint, ie_situacao_tasy_p bigint, ie_somente_benef_divergente_p text, ie_data_p text, ie_origem_p text, dt_inicial_p timestamp, dt_final_p timestamp, nr_ultima_pagina_p INOUT bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_indice_w			integer;
nr_pagina_w			integer;
nr_linha_w			integer;
qt_registros_pagina_w		integer;
t_nr_seq_conferencia_w		pls_util_cta_pck.t_number_table;
t_nr_pagina_w			pls_util_cta_pck.t_number_table;
t_nr_ordem_w			pls_util_cta_pck.t_number_table;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_contratacao dt_contratacao_conf,
		a.dt_cancelamento dt_cancelamento_conf,
		(SELECT	max(x.dt_rescisao)
		from	pls_segurado x
		where	x.nr_sequencia = a.nr_seq_segurado) dt_cancelamento_benef,
		(select	max(x.dt_contratacao)
		from	pls_segurado x
		where	x.nr_sequencia = a.nr_seq_segurado) dt_contratacao_benef
	from	pls_sib_conferencia a
	where	a.nr_seq_lote	= nr_seq_lote_p
	and	((coalesce(cd_divergencia_p::text, '') = '') or (exists (	select	1
				from	pls_sib_conf_divergencia x,
					pls_sib_divergencia_conf y
				where	y.nr_sequencia = x.nr_seq_divergencia
				and	x.nr_seq_conferencia = a.nr_sequencia
				and	y.cd_divergencia = cd_divergencia_p)))
	and	((ie_situacao_p = 0) or (ie_situacao_p = 1 and a.ds_situacao = 'ATIVO') or (ie_situacao_p = 2 and a.ds_situacao = 'INATIVO'))
	and (a.nr_seq_conf_arq = nr_seq_conf_arq_p or coalesce(nr_seq_conf_arq_p::text, '') = '')
	and (a.nr_seq_segurado = nr_seq_segurado_p or coalesce(nr_seq_segurado_p::text, '') = '')
	and (a.nr_plano_ans = nr_plano_ans_p or coalesce(nr_plano_ans_p::text, '') = '')
	and (a.nr_plano_ops = nr_plano_ops_p or coalesce(nr_plano_ops_p::text, '') = '')
	and (a.cd_beneficiario = cd_beneficiario_p or coalesce(cd_beneficiario_p::text, '') = '')
	and (a.nr_cnpj = nr_cnpj_p or coalesce(nr_cnpj_p::text, '') = '')
	and (a.nr_cpf = nr_cpf_p or coalesce(nr_cpf_p::text, '') = '')
	and (a.nr_cco = nr_cco_p or coalesce(nr_cco_p::text, '') = '')
	and	((ie_somente_benef_divergente_p = 'N') or
		((ie_somente_benef_divergente_p = 'S') and (exists (	select 1
									from	pls_sib_conf_divergencia x
									where	a.nr_sequencia = x.nr_seq_conferencia))))
	and (upper(a.nm_beneficiario) like '%'||upper(nm_beneficiario_p)||'%' or coalesce(nm_beneficiario_p::text, '') = '')
	and	((coalesce(nr_contrato_p::text, '') = '') or (exists (	select	1
				from	pls_segurado x,
					pls_contrato y
				where	y.nr_sequencia = x.nr_seq_contrato
				and	x.nr_sequencia = a.nr_seq_segurado
				and	y.nr_contrato = nr_contrato_p)))
	and	((ie_situacao_tasy_p = 0) or (ie_situacao_tasy_p = 1 and (exists (	select 1
							from	pls_segurado x
							where	x.nr_sequencia = a.nr_seq_segurado
							and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
							and (coalesce(x.dt_rescisao::text, '') = '' or x.dt_rescisao > clock_timestamp())))) or (ie_situacao_tasy_p = 2 and (exists (select 1
							from	pls_segurado x
							where	x.nr_sequencia = a.nr_seq_segurado
							and (coalesce(x.dt_liberacao::text, '') = '' or x.dt_rescisao < clock_timestamp())))))
	order by nm_beneficiario;

procedure limpar_vetor is;
BEGIN
nr_indice_w	:= 0;
t_nr_seq_conferencia_w.delete;
t_nr_pagina_w.delete;
t_nr_ordem_w.delete;
end;

procedure atualizar_pagina is
begin
if (t_nr_seq_conferencia_w.count > 0) then
	forall i in t_nr_seq_conferencia_w.first..t_nr_seq_conferencia_w.last
		insert	into 	pls_sib_conferencia_pag(nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
				nm_usuario, nr_pagina, nr_ordem,
				nr_seq_conferencia)
		values (nextval('pls_sib_conferencia_pag_seq'), clock_timestamp(), clock_timestamp(), 
				nm_usuario_p, t_nr_pagina_w(i), t_nr_ordem_w(i),
				t_nr_seq_conferencia_w(i));
	commit;
	CALL CALL CALL limpar_vetor();
end if;
end;

begin

delete	from pls_sib_conferencia_pag
where	nm_usuario = nm_usuario_p;

nr_linha_w		:= 0;
nr_pagina_w		:= 1;
qt_registros_pagina_w	:= coalesce(obter_valor_param_usuario(280, 8, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p),300000);

update	pls_sib_conferencia
set	nr_pagina	 = NULL,
	nr_ordem	 = NULL
where	nr_seq_lote	= nr_seq_lote_p;

CALL CALL CALL limpar_vetor();

for r_c01_w in C01 loop
	begin
	if	((ie_data_p = 0) or
		((ie_data_p = 1) and
		 (((ie_origem_p = 0) and (r_c01_w.dt_contratacao_benef between trunc(dt_inicial_p,'dd') and fim_dia(dt_final_p))) or
		 ((ie_origem_p = 1) and (r_c01_w.dt_contratacao_conf between trunc(dt_inicial_p,'dd') and fim_dia(dt_final_p))))) or
		((ie_data_p = 2) and
		 (((ie_origem_p = 0) and (r_c01_w.dt_cancelamento_benef between trunc(dt_inicial_p,'dd') and fim_dia(dt_final_p))) or
		 ((ie_origem_p = 1) and (r_c01_w.dt_cancelamento_conf between trunc(dt_inicial_p,'dd') and fim_dia(dt_final_p)))))) then
		nr_linha_w	:= nr_linha_w+1;
		t_nr_seq_conferencia_w(nr_indice_w)	:= r_c01_w.nr_sequencia;
		t_nr_pagina_w(nr_indice_w)		:= nr_pagina_w;
		t_nr_ordem_w(nr_indice_w)		:= nr_linha_w;

		if (mod(nr_linha_w,qt_registros_pagina_w) = 0) then
			nr_pagina_w	:= nr_pagina_w+1;
		end if;

		if (nr_indice_w >= pls_util_pck.qt_registro_transacao_w) then
			atualizar_pagina;
		else
			nr_indice_w	:= nr_indice_w + 1;
		end if;
	end if;
	end;
end loop;

atualizar_pagina;

nr_ultima_pagina_p	:= nr_pagina_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sib_paginacao_conferencia ( nr_seq_lote_p pls_sib_conferencia_lote.nr_sequencia%type, nr_seq_conf_arq_p pls_sib_conferencia_arq.nr_sequencia%type, cd_divergencia_p bigint, ie_situacao_p bigint, nr_seq_segurado_p bigint, nr_plano_ans_p text, nr_plano_ops_p text, cd_beneficiario_p text, nr_cnpj_p text, nr_cpf_p text, nr_cco_p text, nm_beneficiario_p text, nr_contrato_p bigint, ie_situacao_tasy_p bigint, ie_somente_benef_divergente_p text, ie_data_p text, ie_origem_p text, dt_inicial_p timestamp, dt_final_p timestamp, nr_ultima_pagina_p INOUT bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

