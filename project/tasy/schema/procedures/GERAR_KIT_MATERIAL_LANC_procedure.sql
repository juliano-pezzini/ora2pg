-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_kit_material_lanc (CD_KIT_MATERIAL_P bigint, DT_ATENDIMENTO_P timestamp, NR_PRESCRICAO_P bigint, IE_AUDITORIA_P text, CD_LOCAL_ESTOQUE_P text, NR_SEQ_PROC_PRINC_P text, NR_SEQ_ATEPACU_P bigint, IE_BAIXA_SEM_ESTOQUE_P text, NM_USUARIO_P text, QT_KIT_P bigint, DS_ERRO_P INOUT text) AS $body$
DECLARE



DT_ENTRADA_UNIDADE_W		timestamp;
NR_SEQ_W			bigint;
CD_CONVENIO_W			bigint;
NR_ATENDIMENTO_W		bigint;
CD_SETOR_ATENDIMENTO_W	integer;
CD_MATERIAL_w			integer;
QT_MATERIAL_w			double precision;
CD_UNIDADE_MEDIDA_CONSUMO_w	varchar(30);
IE_VIA_APLICACAO_w		varchar(10);
CD_CATEGORIA_W		varchar(10);
NR_DOC_CONVENIO_W		varchar(20);
IE_TIPO_GUIA_W			varchar(2);
IE_ESTOQUE_DISP_w		varchar(1);
cd_estabelecimento_W		integer;
cd_senha_w			varchar(20);
ie_entra_conta_w			varchar(01);
cd_local_estoque_w		smallint;
ie_baixa_estoque_w		varchar(1);
qt_idade_w			smallint;
NR_SEQ_ATEPACU_w		bigint;
IE_DISPARA_REGRA_LANC_KIT_w	varchar(1):= 'N';
NR_DOC_CONVENIO_WW		varchar(30);
VinculaGuiaPrescricao_w		varchar(10);
ie_baixa_estoq_pac_w		varchar(1);
ds_erro_w			varchar(4000):= '';
msg_erro_padrao_w		varchar(4000):= WHEB_MENSAGEM_PCK.get_texto(280165)|| CHR(13);
ie_entrou_w			varchar(1):= 'N';
ie_sexo_w			varchar(1);
ie_recem_nato_w			varchar(1);
ie_tipo_convenio_w		smallint;

C001 CURSOR FOR
	SELECT 	A.CD_MATERIAL,
		A.QT_MATERIAL,
		substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_w,'UMS'),1,30) CD_UNIDADE_MEDIDA_CONSUMO,
		B.IE_VIA_APLICACAO,
		a.ie_entra_conta,
		a.ie_baixa_estoque
	FROM	MATERIAL B, COMPONENTE_KIT A
	WHERE (A.CD_MATERIAL = B.CD_MATERIAL)
	AND 	A.CD_KIT_MATERIAL = CD_KIT_MATERIAL_P
	and	coalesce(a.cd_convenio, coalesce(cd_convenio_w,0))	= coalesce(cd_convenio_w,0)
	and	coalesce(a.ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0))	= coalesce(ie_tipo_convenio_w,0)
	AND 	A.IE_SITUACAO = 'A'
	AND 	B.IE_SITUACAO = 'A'
	AND	qt_idade_w >= coalesce(a.qt_idade_minima,0)
	and	qt_idade_w <= coalesce(a.qt_idade_maxima,999)
	and	((a.ie_recem_nato =  coalesce(ie_recem_nato_w, 'A')) or (coalesce(a.ie_recem_nato, 'A') = 'A'))
	and	coalesce(a.ie_sexo, coalesce(ie_sexo_w,0))		= coalesce(ie_sexo_w,0)
	and	((coalesce(a.cd_estab_regra::text, '') = '') or (a.cd_estab_regra = cd_estabelecimento_w));


BEGIN

NR_SEQ_ATEPACU_w	:= NR_SEQ_ATEPACU_p;

select	max(nr_atendimento),
	coalesce(max(ie_recem_nato), 'A')
into STRICT	nr_atendimento_w,
	ie_recem_nato_w
from	prescr_medica
where	nr_prescricao		= NR_PRESCRICAO_P;

if (NR_SEQ_ATEPACU_P	= 0) then
	select	max(nr_seq_interno)
	into STRICT	NR_SEQ_ATEPACU_w
	from	atend_paciente_unidade
	where	nr_atendimento		= nr_atendimento_w;
end if;

if (CD_LOCAL_ESTOQUE_P = '0') then
	cd_local_estoque_w:= (null)::numeric;
else
	cd_local_estoque_w:= (cd_local_estoque_p)::numeric;
end if;

DS_ERRO_P	:= '';

SELECT	a.DT_ENTRADA_UNIDADE,
	a.CD_SETOR_ATENDIMENTO,
	a.NR_ATENDIMENTO,
	b.cd_estabelecimento,
	coalesce((obter_idade_pf(b.cd_pessoa_fisica, clock_timestamp(), 'A'))::numeric ,0),
	substr(obter_sexo_pf(b.cd_pessoa_fisica, 'C'),1,1)
INTO STRICT	DT_ENTRADA_UNIDADE_W,
	CD_SETOR_ATENDIMENTO_W,
	NR_ATENDIMENTO_W,
	cd_estabelecimento_W,
	qt_idade_w,
	ie_sexo_w
FROM	ATEND_PACIENTE_UNIDADE a,
	atendimento_paciente b
WHERE	a.nr_atendimento = b.nr_atendimento
and	a.NR_SEQ_INTERNO = NR_SEQ_ATEPACU_w;


select	coalesce(max(IE_DISPARA_REGRA_LANC_KIT), 'N')
into STRICT	IE_DISPARA_REGRA_LANC_KIT_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

SELECT * FROM OBTER_CONVENIO_EXECUCAO(NR_ATENDIMENTO_W, DT_ATENDIMENTO_P, CD_CONVENIO_W, CD_CATEGORIA_W, NR_DOC_CONVENIO_W, IE_TIPO_GUIA_W, cd_senha_w) INTO STRICT CD_CONVENIO_W, CD_CATEGORIA_W, NR_DOC_CONVENIO_W, IE_TIPO_GUIA_W, cd_senha_w;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
	select	ie_tipo_convenio
	into STRICT	ie_tipo_convenio_w
	from	convenio
	where	cd_convenio = cd_convenio_w;
end if;

if (obter_funcao_ativa	= 24) and (NR_PRESCRICAO_P IS NOT NULL AND NR_PRESCRICAO_P::text <> '')	then

	VinculaGuiaPrescricao_w	:= coalesce(Obter_Valor_Param_Usuario(24,142,obter_perfil_ativo,nm_usuario_p,0),'N');

	select	max(nr_doc_conv)
	into STRICT	NR_DOC_CONVENIO_WW
	from	prescr_medica
	where	nr_prescricao	= NR_PRESCRICAO_P;

	if (VinculaGuiaPrescricao_w	= 'S') and (NR_DOC_CONVENIO_WW IS NOT NULL AND NR_DOC_CONVENIO_WW::text <> '') then
		NR_DOC_CONVENIO_W	:= NR_DOC_CONVENIO_WW;
	end if;
end if;


OPEN C001;
LOOP
	FETCH C001 INTO
		CD_MATERIAL_w,
		QT_MATERIAL_w,
		CD_UNIDADE_MEDIDA_CONSUMO_w,
		IE_VIA_APLICACAO_w,
		ie_entra_conta_w,
		ie_baixa_estoque_w;
	EXIT WHEN NOT FOUND; /* apply on c001 */
	IE_ESTOQUE_DISP_w := 'N';
	if (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') then
		IE_ESTOQUE_DISP_w := OBTER_DISP_ESTOQUE(CD_MATERIAL_W, (cd_local_estoque_w)::numeric , cd_estabelecimento_W, 0, QT_MATERIAL_w, '', IE_ESTOQUE_DISP_w);
	end if;
	if (IE_BAIXA_SEM_ESTOQUE_P = 'S') or (ie_baixa_estoque_w = 'N') OR (coalesce(cd_local_estoque_w::text, '') = '') or (IE_ESTOQUE_DISP_w = 'S') then

		begin

		select obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material_w,null,0)
		into STRICT	ie_baixa_estoq_pac_w
		;

		if (ie_entra_conta_w	= 'S') then

			SELECT 	nextval('material_atend_paciente_seq')
			INTO STRICT	NR_SEQ_W
			;

			INSERT INTO
			MATERIAL_ATEND_PACIENTE(NR_SEQUENCIA,
					NR_ATENDIMENTO,
					DT_ATENDIMENTO,
					CD_MATERIAL,
					CD_MATERIAL_PRESCRICAO,
					IE_VIA_APLICACAO,
					QT_MATERIAL,
					CD_UNIDADE_MEDIDA,
					NR_PRESCRICAO,
					NR_SEQ_PROC_PRINC,
					CD_SETOR_ATENDIMENTO,
					CD_LOCAL_ESTOQUE,
					QT_EXECUTADA,
					CD_ACAO,
					VL_UNITARIO,
					QT_AJUSTE_CONTA,
					IE_VALOR_INFORMADO,
					IE_GUIA_INFORMADA,
					IE_AUDITORIA,
					NM_USUARIO_ORIGINAL,
					CD_SITUACAO_GLOSA,
					DT_ENTRADA_UNIDADE,
					NR_SEQ_ATEPACU,
					DT_ATUALIZACAO,
					NM_USUARIO,
					CD_CONVENIO,
					CD_CATEGORIA,
					NR_DOC_CONVENIO,
					IE_TIPO_GUIA,
					cd_senha,
					CD_KIT_MATERIAL,
					dt_atualizacao_estoque,
					CD_MATERIAL_exec)
			VALUES (NR_SEQ_W,
					NR_ATENDIMENTO_W,
					DT_ATENDIMENTO_P,
					CD_MATERIAL_W,
					CD_MATERIAL_W,
					IE_VIA_APLICACAO_W,
					(QT_MATERIAL_W * QT_KIT_P),
					CD_UNIDADE_MEDIDA_CONSUMO_w,
					NR_PRESCRICAO_P,
					(NR_SEQ_PROC_PRINC_P)::numeric ,
					CD_SETOR_ATENDIMENTO_W,
					cd_local_estoque_w,
					QT_MATERIAL_W,
					1,
					0,
					0,
					'N',
					'N',
					IE_AUDITORIA_P,
					NM_USUARIO_P,
					0,
					DT_ENTRADA_UNIDADE_W,
					NR_SEQ_ATEPACU_w,
					clock_timestamp(),
					NM_USUARIO_P,
					CD_CONVENIO_W,
					CD_CATEGORIA_w,
					NR_DOC_CONVENIO_W,
					IE_TIPO_GUIA_W,
					cd_senha_w,
					CD_KIT_MATERIAL_P,
					CASE WHEN ie_baixa_estoque_w='S' THEN  clock_timestamp()  ELSE null END ,
					CD_MATERIAL_W);




			if (ie_baixa_estoque_w	= 'S') and (ie_baixa_estoq_pac_w   = 'S') and (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') then
				CALL Gerar_Prescricao_Estoque(cd_estabelecimento_W,
					NR_ATENDIMENTO_W,
					DT_ENTRADA_UNIDADE_W,
					CD_MATERIAL_W,
					dt_atendimento_p,
					'1',
					(cd_local_estoque_w)::numeric ,
					(QT_MATERIAL_W * QT_KIT_P),
					CD_SETOR_ATENDIMENTO_W,
					CD_UNIDADE_MEDIDA_CONSUMO_w,
					NM_USUARIO_P,
					'I',
					NR_PRESCRICAO_P,
					null,
					NR_SEQ_PROC_PRINC_P,
					NR_SEQ_W,
					'',
					'',
					0,
					0,
					0,
					null, '','','');
			end if;

			--if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
			CALL ATUALIZA_PRECO_MATERIAL(NR_SEQ_W, NM_USUARIO_P);
		else
			if (ie_baixa_estoque_w	= 'S') and (ie_baixa_estoq_pac_w   = 'S') and (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') then
			CALL Gerar_Prescricao_Estoque(cd_estabelecimento_W,
					NR_ATENDIMENTO_W,
					DT_ENTRADA_UNIDADE_W,
					CD_MATERIAL_W,
					dt_atendimento_p,
					'1',
					(cd_local_estoque_w)::numeric ,
					(QT_MATERIAL_W * QT_KIT_P),
					CD_SETOR_ATENDIMENTO_W,
					CD_UNIDADE_MEDIDA_CONSUMO_w,
					NM_USUARIO_P,
					'I',
					NR_PRESCRICAO_P,
					null,
					NR_SEQ_PROC_PRINC_P,
					0,
					'',
					'',
					0,
					0,
					0,
					null, '','','');
			end if;


		end if;
		end;
	ELSE
		ie_entrou_w:= 'S';
		ds_erro_w :=  cd_material_w || CHR(13);
	END IF;
END LOOP;
CLOSE C001;

if (ie_entrou_w = 'S') then
	ds_erro_w:= msg_erro_padrao_w || ds_erro_w;
end if;

ds_erro_p	:= ds_erro_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_kit_material_lanc (CD_KIT_MATERIAL_P bigint, DT_ATENDIMENTO_P timestamp, NR_PRESCRICAO_P bigint, IE_AUDITORIA_P text, CD_LOCAL_ESTOQUE_P text, NR_SEQ_PROC_PRINC_P text, NR_SEQ_ATEPACU_P bigint, IE_BAIXA_SEM_ESTOQUE_P text, NM_USUARIO_P text, QT_KIT_P bigint, DS_ERRO_P INOUT text) FROM PUBLIC;

