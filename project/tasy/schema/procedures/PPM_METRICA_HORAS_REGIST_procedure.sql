-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ppm_metrica_horas_regist (nr_seq_metrica_p bigint, nr_seq_objetivo_metrica_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, dt_referencia_p timestamp) AS $body$
DECLARE


/*Procedure para cálculo da meta de horas registradas no Tasy (Usuário Controle) no mês.*/

resultado_w			double precision;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
nm_usuario_exec_w		varchar(255);
qt_min_total_w			bigint;
qt_min_nreg_w			bigint;
qt_min_registrados_w		bigint;
qt_min_intervalo_w		bigint;
qt_min_lanche_w			bigint;
qt_min_os_w			bigint;
nr_seq_diretoria_w	ppm_objetivo.nr_seq_diretoria%type;
nr_seq_gerencia_w	ppm_objetivo.nr_seq_gerencia%type;
nr_seq_grupo_w		ppm_objetivo.nr_seq_grupo%type;


BEGIN

dt_inicial_w	:= pkg_date_utils.start_of(dt_referencia_p,'MONTH');
dt_final_w	:= fim_mes(dt_referencia_p);

select	max(nm_usuario)
into STRICT	nm_usuario_exec_w
from	usuario
where	cd_pessoa_fisica	= cd_pessoa_fisica_p
and	ie_situacao		= 'A';

select	max(nr_seq_gerencia),
	max(nr_seq_grupo),
	max(nr_seq_diretoria)
into STRICT	nr_seq_gerencia_w,
	nr_seq_grupo_w,
	nr_seq_diretoria_w
from	ppm_objetivo_metrica a,
	ppm_objetivo_meta b,
	ppm_objetivo c
where	a.nr_sequencia		= nr_seq_objetivo_metrica_p
and	a.nr_seq_meta		= b.nr_sequencia
and	b.nr_seq_objetivo	= c.nr_sequencia;

if (nr_seq_diretoria_w IS NOT NULL AND nr_seq_diretoria_w::text <> '') then

	select	sum(coalesce(qt_min_total,0)),
		sum(coalesce(qt_min_intervalo,0)),
		sum(coalesce(qt_min_lanche,0)),
		sum(coalesce(qt_min_os,0))
	into STRICT	qt_min_total_w,
		qt_min_intervalo_w,
		qt_min_lanche_w,
		qt_min_os_w
	from	usuario_controle a,
		usuario u,
		grupo_desenvolvimento b,
		usuario_grupo_des c,
		gerencia_wheb g
	where	u.nm_usuario		= c.NM_USUARIO_GRUPO
	and	c.nr_seq_grupo		= b.nr_sequencia
	and	b.nr_seq_gerencia	= g.nr_sequencia
	and	a.nm_usuario		= u.nm_usuario
	and	(a.dt_saida IS NOT NULL AND a.dt_saida::text <> '')
	and	a.dt_entrada		between  dt_inicial_w and dt_final_w
	and	g.nr_seq_diretoria	= nr_seq_diretoria_w;

elsif (nr_seq_gerencia_w IS NOT NULL AND nr_seq_gerencia_w::text <> '') then

	select	sum(coalesce(qt_min_total,0)),
		sum(coalesce(qt_min_intervalo,0)),
		sum(coalesce(qt_min_lanche,0)),
		sum(coalesce(qt_min_os,0))
	into STRICT	qt_min_total_w,
		qt_min_intervalo_w,
		qt_min_lanche_w,
		qt_min_os_w
	from	usuario_controle a,
		usuario u,
		grupo_desenvolvimento b,
		usuario_grupo_des c,
		gerencia_wheb g
	where	u.nm_usuario		= c.NM_USUARIO_GRUPO
	and	c.nr_seq_grupo		= b.nr_sequencia
	and	b.nr_seq_gerencia	= g.nr_sequencia
	and	a.nm_usuario		= u.nm_usuario
	and	(a.dt_saida IS NOT NULL AND a.dt_saida::text <> '')
	and	a.dt_entrada		between  dt_inicial_w and dt_final_w
	and	g.nr_sequencia		= nr_seq_gerencia_w;

elsif (nr_seq_grupo_w IS NOT NULL AND nr_seq_grupo_w::text <> '') then

	select	sum(coalesce(qt_min_total,0)),
		sum(coalesce(qt_min_intervalo,0)),
		sum(coalesce(qt_min_lanche,0)),
		sum(coalesce(qt_min_os,0))
	into STRICT	qt_min_total_w,
		qt_min_intervalo_w,
		qt_min_lanche_w,
		qt_min_os_w
	from	usuario_controle a,
		usuario u,
		grupo_desenvolvimento b,
		usuario_grupo_des c,
		gerencia_wheb g
	where	u.nm_usuario		= c.NM_USUARIO_GRUPO
	and	c.nr_seq_grupo		= b.nr_sequencia
	and	b.nr_seq_gerencia	= g.nr_sequencia
	and	a.nm_usuario		= u.nm_usuario
	and	(a.dt_saida IS NOT NULL AND a.dt_saida::text <> '')
	and	a.dt_entrada		between  dt_inicial_w and dt_final_w
	and	b.nr_sequencia		= nr_seq_grupo_w;

elsif (nm_usuario_exec_w IS NOT NULL AND nm_usuario_exec_w::text <> '') then

	select	sum(coalesce(qt_min_total,0)),
		sum(coalesce(qt_min_intervalo,0)),
		sum(coalesce(qt_min_lanche,0)),
		sum(coalesce(qt_min_os,0))
	into STRICT	qt_min_total_w,
		qt_min_intervalo_w,
		qt_min_lanche_w,
		qt_min_os_w
	from	usuario_controle a
	where	a.nm_usuario	= nm_usuario_exec_w
	and	(a.dt_saida IS NOT NULL AND a.dt_saida::text <> '')
	and	a.dt_entrada	between  dt_inicial_w and dt_final_w;

end if;


qt_min_registrados_w	:= qt_min_total_w - qt_min_intervalo_w - qt_min_lanche_w;

if (qt_min_registrados_w < 0) then
	resultado_w	:= 0;
else
	resultado_w     := trunc(dividir(qt_min_os_w,qt_min_registrados_w) * 100);
end if;

if (resultado_w > 100) then
	resultado_w     := 100;
end if;

CALL PPM_GRAVAR_RESULTADO(nr_seq_objetivo_metrica_p,dt_referencia_p,resultado_w, qt_min_total_w, qt_min_registrados_w, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ppm_metrica_horas_regist (nr_seq_metrica_p bigint, nr_seq_objetivo_metrica_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, dt_referencia_p timestamp) FROM PUBLIC;

