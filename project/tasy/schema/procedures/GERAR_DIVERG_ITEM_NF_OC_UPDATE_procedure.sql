-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_diverg_item_nf_oc_update ( nr_sequencia_p bigint, nr_item_nf_p bigint, nm_usuario_p text, vl_unitario_p bigint, cd_material_p bigint, qt_material_p bigint, cd_local_estoque_p bigint, ds_return_p INOUT text) AS $body$
DECLARE


qt_existe_w			bigint;
pr_diferenca_w			regra_diverg_oc_nf.pr_diferenca%type;
qt_diferenca_w			regra_diverg_oc_nf.qt_diferenca%type;
qt_diferenca_ww			double precision;
nr_ordem_compra_w		nota_fiscal_item.nr_ordem_compra%type;
cd_material_w			nota_fiscal_item.cd_material%type;
cd_local_estoque_w		nota_fiscal_item.cd_local_estoque%type;
nr_item_oci_w			nota_fiscal_item.nr_item_oci%type;
cd_estabelecimento_w	nota_fiscal_item.cd_estabelecimento%type;
cd_cgc_emitente_w		nota_fiscal_item.cd_cgc_emitente%type;
nr_item_nf_w			nota_fiscal_item.nr_item_nf%type;
qt_item_nf_w			nota_fiscal_item.qt_item_nf%type;
qt_item_nf_ww			nota_fiscal_item.qt_item_nf%type;
vl_unitario_item_nf_w	nota_fiscal_item.vl_unitario_item_nf%type;
dt_entrega_ordem_w		nota_fiscal_item.dt_entrega_ordem%type;
nr_item_oci_ww			ordem_compra_item.nr_item_oci%type;
qt_item_oci_w			ordem_compra_item_entrega.qt_prevista_entrega%type;
vl_unitario_item_oci_w	ordem_compra_item.vl_unitario_material%type;
cd_grupo_material_w		estrutura_material_v.cd_grupo_material%type;
cd_subgrupo_material_w	estrutura_material_v.cd_subgrupo_material%type;
cd_classe_material_w	estrutura_material_v.cd_classe_material%type;
ie_tipo_nota_w			nota_fiscal.ie_tipo_nota%type;
nr_seq_entrega_w		ordem_compra_item_entrega.nr_sequencia%type;
ds_material_w			varchar(255);
qt_reg_entrega_w		bigint;

c01 CURSOR FOR
SELECT	a.cd_estabelecimento,
	a.cd_cgc_emitente,
	a.nr_item_nf,
	a.nr_ordem_compra,
	a.nr_item_oci,
	b.qt_material,
	b.vl_unitario_material,
	a.dt_entrega_ordem,
	b.nr_item_oci
from	ordem_compra_item b,
	ordem_compra o,
	nota_fiscal_item a,
	nota_fiscal n
where	a.nr_sequencia		= nr_sequencia_p
and	a.nr_item_nf 		= nr_item_nf_p
and	o.nr_ordem_compra	= b.nr_ordem_compra
and	n.nr_sequencia		= a.nr_sequencia
and	(a.nr_ordem_compra IS NOT NULL AND a.nr_ordem_compra::text <> '')
and	a.nr_ordem_compra	= b.nr_ordem_compra
and	a.nr_item_oci		= b.nr_item_oci;


BEGIN

select	coalesce(max(ie_tipo_nota), 'X')
into STRICT	ie_tipo_nota_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

if (ie_tipo_nota_w in ('EN','EF','EP')) then

    open c01;
	loop
	fetch c01 into
		cd_estabelecimento_w,
		cd_cgc_emitente_w,
	 	nr_item_nf_w,
	 	nr_ordem_compra_w,
	 	nr_item_oci_w,
	 	qt_item_oci_w,
	 	vl_unitario_item_oci_w,
		dt_entrega_ordem_w,
		nr_item_oci_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
    begin
                         
        begin
        
            vl_unitario_item_nf_w := vl_unitario_p;
            cd_material_w := cd_material_p;
            qt_item_nf_ww := qt_material_p;
            cd_local_estoque_w := cd_local_estoque_p;

            select	count(1)
            into STRICT	qt_reg_entrega_w
            from	ordem_compra_item_entrega a
            where	a.nr_ordem_compra 	= nr_ordem_compra_w
            and	a.nr_item_oci 		= nr_item_oci_ww
            and	trunc(a.dt_prevista_entrega,'dd') = trunc(dt_entrega_ordem_w,'dd')
            and	coalesce(a.dt_cancelamento::text, '') = ''
            and	((coalesce(a.dt_real_entrega::text, '') = '') or (coalesce(a.qt_real_entrega,0) < a.qt_prevista_entrega));

            if (qt_reg_entrega_w > 0) then
                begin
    
                    select	min(a.nr_sequencia)
                    into STRICT	nr_seq_entrega_w
                    from	ordem_compra_item_entrega a
                    where	a.nr_ordem_compra 	= nr_ordem_compra_w
                    and	a.nr_item_oci 		= nr_item_oci_ww
                    and	trunc(a.dt_prevista_entrega,'dd') = trunc(dt_entrega_ordem_w,'dd')
                    and	coalesce(a.dt_cancelamento::text, '') = ''
                    and	((coalesce(a.dt_real_entrega::text, '') = '') or (coalesce(a.qt_real_entrega,0) < a.qt_prevista_entrega));

                end;
            else	
                begin

                    select	min(a.nr_sequencia)
                    into STRICT	nr_seq_entrega_w
                    from	ordem_compra_item_entrega a
                    where	a.nr_ordem_compra 	= nr_ordem_compra_w
                    and	a.nr_item_oci 		= nr_item_oci_ww
                    and	coalesce(a.dt_cancelamento::text, '') = ''
                    and	((coalesce(a.dt_real_entrega::text, '') = '') or (coalesce(a.qt_real_entrega,0) < a.qt_prevista_entrega));

                end;
            end if;

            select	substr(obter_desc_material(cd_material_w),1,255)
            into STRICT	ds_material_w
;

            select	qt_prevista_entrega
            into STRICT	qt_item_oci_w
            from	ordem_compra_item_entrega
            where	nr_sequencia = nr_seq_entrega_w;

            exception when no_data_found then
                ds_return_p := wheb_mensagem_pck.get_texto(177760,	'NR_ITEM_NF_W='||nr_item_nf_w||';'||
                                        'NR_ITEM_OCI_W='||nr_item_oci_ww||';'||
                                        'CD_MATERIAL_W='||cd_material_w||';'||
                                        'DS_MATERIAL_W='||ds_material_w);
                Exit;
        end;

        select	coalesce(sum(qt_item_nf),0)
        into STRICT	qt_item_nf_w
        from	nota_fiscal_item
        where	nr_ordem_compra = nr_ordem_compra_w
        and	nr_item_oci = nr_item_oci_w
        and nr_sequencia <> nr_sequencia_p
        and	trunc(dt_entrega_ordem,'dd') = trunc(dt_entrega_ordem_w,'dd');

        qt_item_nf_w := qt_item_nf_w + qt_item_nf_ww;

        select  cd_grupo_material,
                cd_subgrupo_material,
                cd_classe_material
        into STRICT	cd_grupo_material_w,
                cd_subgrupo_material_w,
                cd_classe_material_w
        from	estrutura_material_v
        where	cd_material = cd_material_w;

        /* 2 - Alteracao na quantidade(a maior)*/

        select	count(*),
            coalesce(max(pr_diferenca),0),
            coalesce(max(qt_diferenca),0)
        into STRICT	qt_existe_w,
            pr_diferenca_w,
            qt_diferenca_w
        from	regra_diverg_oc_nf
        where	cd_estabelecimento					= cd_estabelecimento_w
        and	coalesce(cd_local_estoque,cd_local_estoque_w)		= cd_local_estoque_w
        and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
        and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
        and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
        and	coalesce(cd_material, cd_material_w)			= cd_material_w
        and	ie_consiste_salvar_item = 'S'
        and	ie_tipo_regra = 2
        and ie_permite_justif = 'N' 
        and	coalesce(obter_se_restringe_div_oc_nf(nr_sequencia, cd_cgc_emitente_w),'S') = 'S';

        if (pr_diferenca_w > 0) then
            qt_diferenca_ww	:= round((dividir((qt_item_oci_w * pr_diferenca_w), 100))::numeric,4);
        else
            qt_diferenca_ww := qt_diferenca_w;
        end if;

        if (qt_existe_w > 0) and (round((qt_diferenca_ww + qt_item_oci_w)::numeric,4) < qt_item_nf_w) then		
            begin
                ds_return_p := wheb_mensagem_pck.get_texto(1161620);
                Exit;
            end;
        end if;

        /* 7 - Alteracao na quantidade(a menor) */

        select	count(*),
            coalesce(max(pr_diferenca),0),
            coalesce(max(qt_diferenca),0)
        into STRICT	qt_existe_w,
            pr_diferenca_w,
            qt_diferenca_w
        from	regra_diverg_oc_nf
        where	cd_estabelecimento					= cd_estabelecimento_w
        and	coalesce(cd_local_estoque,cd_local_estoque_w)		= cd_local_estoque_w
        and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
        and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
        and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
        and	coalesce(cd_material, cd_material_w)				= cd_material_w
        and	ie_consiste_salvar_item = 'S'
        and	ie_tipo_regra = 7
        and ie_permite_justif = 'N' 
        and	coalesce(obter_se_restringe_div_oc_nf(nr_sequencia, cd_cgc_emitente_w),'S') = 'S';

        if (pr_diferenca_w > 0) then
            qt_diferenca_ww	:= round((dividir((qt_item_oci_w * pr_diferenca_w), 100))::numeric,4);
        else
            qt_diferenca_ww := qt_diferenca_w;
        end if;

        if (qt_existe_w > 0) and (round((abs(qt_diferenca_ww - qt_item_oci_w))::numeric,4) > qt_item_nf_w) then
            begin
                ds_return_p := wheb_mensagem_pck.get_texto(1161620);
                Exit;
            end;
        end if;

        /* 3 - Alteracao preco unitario (a maior) */

        select	count(*),
            coalesce(max(pr_diferenca),0),
            coalesce(max(qt_diferenca),0)
        into STRICT	qt_existe_w,
            pr_diferenca_w,
            qt_diferenca_w
        from	regra_diverg_oc_nf
        where	cd_estabelecimento					= cd_estabelecimento_w
        and	coalesce(cd_local_estoque,cd_local_estoque_w)		= cd_local_estoque_w
        and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
        and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
        and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
        and	coalesce(cd_material, cd_material_w)			= cd_material_w
        and	ie_consiste_salvar_item = 'S'
        and	ie_tipo_regra = 3
        and ie_permite_justif = 'N' 
        and	coalesce(obter_se_restringe_div_oc_nf(nr_sequencia, cd_cgc_emitente_w),'S') = 'S';

        if (pr_diferenca_w > 0) then
            qt_diferenca_ww	:= round((dividir((vl_unitario_item_oci_w * pr_diferenca_w), 100))::numeric,4);
        end if;

        if (qt_existe_w > 0) and
            (((pr_diferenca_w > 0) and (round((qt_diferenca_ww + vl_unitario_item_oci_w)::numeric,4) < vl_unitario_item_nf_w)) or
            ((qt_diferenca_w > 0)  and (vl_unitario_item_nf_w > vl_unitario_item_oci_w) and (abs(vl_unitario_item_nf_w - vl_unitario_item_oci_w) > qt_diferenca_w))) then
            begin
                ds_return_p := wheb_mensagem_pck.get_texto(1161619);
                Exit;
            end;
        end if;

        /* 8 - Alteracao preco unitario (a menor)*/

        select	count(*),
            coalesce(max(pr_diferenca),0),
            coalesce(max(qt_diferenca),0)
        into STRICT	qt_existe_w,
            pr_diferenca_w,
            qt_diferenca_w
        from	regra_diverg_oc_nf
        where	cd_estabelecimento					= cd_estabelecimento_w
        and	coalesce(cd_local_estoque,cd_local_estoque_w)		= cd_local_estoque_w
        and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
        and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
        and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
        and	coalesce(cd_material, cd_material_w)			= cd_material_w
        and	ie_consiste_salvar_item = 'S'
        and	ie_tipo_regra = 8
        and ie_permite_justif = 'N'
        and	coalesce(obter_se_restringe_div_oc_nf(nr_sequencia, cd_cgc_emitente_w),'S') = 'S';

        if (pr_diferenca_w > 0) then
            qt_diferenca_ww	:= round((dividir((vl_unitario_item_oci_w * pr_diferenca_w), 100))::numeric,4);
        end if;

        if (qt_existe_w > 0) and
            (((pr_diferenca_w > 0) and (round((abs(qt_diferenca_ww - vl_unitario_item_oci_w))::numeric,4) > vl_unitario_item_nf_w)) or
            ((qt_diferenca_w > 0)  and (vl_unitario_item_nf_w < vl_unitario_item_oci_w) and (abs(vl_unitario_item_nf_w - vl_unitario_item_oci_w) > qt_diferenca_w))) then
            begin
                ds_return_p := wheb_mensagem_pck.get_texto(1161619);
                Exit;
            end;
        end if;
    end;
    end loop;
	close c01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_diverg_item_nf_oc_update ( nr_sequencia_p bigint, nr_item_nf_p bigint, nm_usuario_p text, vl_unitario_p bigint, cd_material_p bigint, qt_material_p bigint, cd_local_estoque_p bigint, ds_return_p INOUT text) FROM PUBLIC;

