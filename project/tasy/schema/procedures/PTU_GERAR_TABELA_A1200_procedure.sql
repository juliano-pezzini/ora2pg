-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_tabela_a1200 ( cd_edicao_amb_p edicao_amb.cd_edicao_amb%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

 
nm_prestador_w			varchar(255);
cd_prestador_w			varchar(100);	
cd_prest_a400_w			varchar(15);		
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type := cd_estabelecimento_p;
cd_unimed_origem_w		varchar(10);
vl_pacote_w			varchar(10);
cd_servico_w			varchar(10);
vl_servico_w			varchar(10);
ie_tipo_despesa_w		varchar(10);
nr_seq_ptu_pacote_w		bigint;
nr_seq_pacote_reg_w		bigint;
qt_servico_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
cd_edicao_amb_w			bigint;
nr_versao_transacao_w		ptu_pacote.nr_versao_transacao%type;
dt_inicio_vigencia_w		pls_pacote_composicao.dt_inicio_vigencia%type;
dt_fim_vigencia_w		pls_pacote_composicao.dt_fim_vigencia%type;
ie_tipo_item_w			ptu_pacote_servico.ie_tipo_item%type;
qt_registro_w			integer;
cd_pacote_w			integer;
nr_seq_composicao_w		bigint;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
ie_proc_mat_w			varchar(1);
nr_seq_congenere_w		pls_congenere.nr_sequencia%type;
cd_interface_w			interface.cd_interface%type;
cd_versao_w			varchar(10);
dt_negociacao_w			edicao_amb.dt_negociacao%type;
dt_publicacao_w			edicao_amb.dt_publicacao%type;

c00 CURSOR FOR  --ptu_pacote 
	SELECT	a.cd_edicao_amb, 
		a.dt_negociacao, 
		a.dt_publicacao 
	from 	edicao_amb	a 
	where 	a.ie_gerar_a1200 = 'S' 
	and	(a.dt_negociacao IS NOT NULL AND a.dt_negociacao::text <> '') 
	and	(a.dt_publicacao IS NOT NULL AND a.dt_publicacao::text <> '');
	
c01 CURSOR(	cd_edicao_amb_pc	edicao_amb.cd_edicao_amb%type ) FOR 
	SELECT	a.nr_seq_prestador, 
		coalesce(pls_obter_dados_prestador(a.nr_seq_prestador,'A400'),'0') cd_prest_a400, 
		substr(pls_obter_dados_prestador(a.nr_seq_prestador,'N'),1,40) nm_prestador 
	from	ptu_prestador_amb a 
	where	a.cd_edicao_amb	= cd_edicao_amb_pc 
	and	(a.nr_seq_prestador IS NOT NULL AND a.nr_seq_prestador::text <> '') 
	
union
 
	SELECT	g.nr_seq_prestador, 
		coalesce(pls_obter_dados_prestador(g.nr_seq_prestador,'A400'),'0') cd_prest_a400, 
		substr(pls_obter_dados_prestador(g.nr_seq_prestador,'N'),1,40) nm_prestador 
	from	ptu_prestador_amb	a, 
		pls_preco_prestador	g 
	where	a.nr_seq_grupo_prestador	= g.nr_seq_grupo 
	and	a.cd_edicao_amb			= cd_edicao_amb_pc 
	and	(a.nr_seq_grupo_prestador IS NOT NULL AND a.nr_seq_grupo_prestador::text <> '') 
	group by a.nr_seq_prestador, 
		g.nr_seq_prestador;

c02 CURSOR(	cd_edicao_amb_pc	edicao_amb.cd_edicao_amb%type ) FOR  --ptu_pacote_servico 
	SELECT 	a.cd_procedimento cd_servico, 
		coalesce(a.vl_procedimento,0) vl_negociado,		 
		a.ie_origem_proced ie_origem_proced		 
	from 	preco_amb	a 
	where 	a.cd_edicao_amb	= cd_edicao_amb_pc;
	
BEGIN 
-- Unimed de Origem 
select	pls_obter_unimed_estab(cd_estabelecimento_p) 
into STRICT	cd_unimed_origem_w
;
 
select	pls_obter_cd_seq_congenere(lpad(cd_unimed_origem_w,4,'0'),'NR') 
into STRICT	nr_seq_congenere_w
;
 
if (coalesce(trim(both cd_interface_w)::text, '') = '') then 
	cd_interface_w := coalesce(pls_obter_interf_ptu( cd_estabelecimento_p, nr_seq_congenere_w, clock_timestamp(), 'A1200'), '2183');
end if;
 
select	ptu_obter_versao('A1200',cd_interface_w) 
into STRICT	cd_versao_w
;
 
nr_versao_transacao_w	:= ptu_obter_versao_transacao('A1200',cd_versao_w);
 
-- Gera PTU A1200 
insert into ptu_pacote(nr_sequencia, 
	cd_unimed_origem, 
	dt_atualizacao, 
	dt_geracao, 
	ie_tipo_carga, 
	ie_tipo_informacao,     
	cd_estabelecimento, 
	nm_usuario, 
	nm_usuario_nrec, 
	dt_atualizacao_nrec, 
	nr_versao_transacao) 
values (nextval('ptu_pacote_seq'), 
	cd_unimed_origem_w, 
	clock_timestamp(),        
	clock_timestamp(), 
	1, 
	2,     
	cd_estabelecimento_p, 
	nm_usuario_p, 
	nm_usuario_p, 
	clock_timestamp(), 
	nr_versao_transacao_w) returning nr_sequencia into nr_seq_ptu_pacote_w;
 
for r_c00_w in c00 loop 
	cd_edicao_amb_w := r_c00_w.cd_edicao_amb;
	dt_negociacao_w := r_c00_w.dt_negociacao;
	dt_publicacao_w := r_c00_w.dt_publicacao;
	 
	for r_c01_w in c01(r_c00_w.cd_edicao_amb) loop 
		nr_seq_prestador_w	:= r_c01_w.nr_seq_prestador;
		cd_prest_a400_w		:= r_c01_w.cd_prest_a400;
		nm_prestador_w 		:= r_c01_w.nm_prestador;
		 
		/* Grid Regras A1200 */
 
		insert into ptu_pacote_reg(nr_sequencia, 
			nr_seq_pacote, 
			cd_unimed_prestador, 
			cd_prestador, 
			nm_prestador, 
			dt_negociacao, 
			dt_atualizacao, 
			nm_usuario, 
			dt_publicacao, 
			ds_observacao, 
			ie_tipo_informacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec, 
			ie_tipo_internacao, 
			vl_tot_taxas, 
			vl_tot_diarias, 
			vl_tot_gases, 
			vl_tot_mat, 
			vl_tot_med, 
			vl_tot_proc, 
			vl_tot_opme, 
			vl_tot_pacote, 
			ie_honorario) 
		values (nextval('ptu_pacote_reg_seq'), 
			nr_seq_ptu_pacote_w, 
			cd_unimed_origem_w, 
			cd_prest_a400_w, 
			nm_prestador_w, 
			dt_negociacao_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			dt_publicacao_w, 
			null, 
			2, 
			nm_usuario_p, 
			clock_timestamp(), 
			null, 
			0, 
			0, 
			0, 
			0, 
			0, 
			0, 
			0, 
			0, 
			'N') returning nr_sequencia into nr_seq_pacote_reg_w;
		 
		for r_c02_w in c02(r_c00_w.cd_edicao_amb) loop 
			cd_servico_w		:= substr(r_c02_w.cd_servico,1,8);
			vl_servico_w		:= r_c02_w.vl_negociado;
			ie_origem_proced_w	:= r_c02_w.ie_origem_proced;
			ie_tipo_despesa_w	:= null;
			 
			if (ie_proc_mat_w = 'P') then 
				select 	coalesce(max(ie_classificacao),0) 
				into STRICT	ie_tipo_despesa_w 
				from	procedimento 
				where	cd_procedimento		= cd_servico_w 
				and	ie_origem_proced	= ie_origem_proced_w;
				 
			elsif (ie_proc_mat_w = 'M') then 
				if (coalesce(cd_servico_w::text, '') = '') then 
					select 	substr(coalesce(max(cd_material_ops),'0'),1,8) 
					into STRICT	cd_servico_w 
					from	pls_material 
					where	nr_sequencia	= nr_seq_material_w;
				end if;
				 
				select 	coalesce(max(ie_tipo_despesa),0) 
				into STRICT	ie_tipo_despesa_w 
				from	pls_material 
				where	nr_sequencia = nr_seq_material_w;
			end if;
			 
			select	CASE WHEN ie_proc_mat_w='P' THEN CASE WHEN ie_tipo_despesa_w=3 THEN 2 WHEN ie_tipo_despesa_w=2 THEN 1  ELSE 6 END   ELSE CASE WHEN ie_tipo_despesa_w=1 THEN 3 WHEN ie_tipo_despesa_w=2 THEN 5 WHEN ie_tipo_despesa_w=3 THEN 4 WHEN ie_tipo_despesa_w=7 THEN 7  ELSE 4 END  END  
			into STRICT	ie_tipo_item_w 
			;			
			 
			insert into ptu_pacote_servico(nr_sequencia, 
				ie_tipo_tabela, 
				cd_servico, 
				ie_honorario, 
				ie_principal, 	 
				ie_tipo_item, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_pacote_reg, 
				vl_servico, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec) 
			values (nextval('ptu_pacote_servico_seq'), 
				1, 
				cd_servico_w, 
				'N', 
				1, 
				ie_tipo_item_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_pacote_reg_w, 
				vl_servico_w, 
				nm_usuario_p, 
				clock_timestamp());
		end loop;
	end loop;
	 
	select	count(1) 
	into STRICT	qt_registro_w 
	from	ptu_pacote_servico	a, 
		ptu_pacote_reg		b 
	where	b.nr_sequencia	= a.nr_seq_pacote_reg 
	and	b.nr_seq_pacote	= nr_seq_ptu_pacote_w;
	 
	delete	FROM ptu_pacote_reg x 
	where	x.nr_seq_pacote	= nr_seq_ptu_pacote_w 
	and	not exists (SELECT	1 
				from	ptu_pacote_servico a 
				where	x.nr_sequencia	= a.nr_seq_pacote_reg);
	 
	if (qt_registro_w = 0) then 
		delete	FROM ptu_pacote_reg 
		where	nr_seq_pacote	= nr_seq_ptu_pacote_w;
	end if;
end loop;
 
select	count(1) 
into STRICT	qt_registro_w 
from	ptu_pacote_reg 
where	nr_seq_pacote	= nr_seq_ptu_pacote_w;
 
if (qt_registro_w = 0) then 
	delete	FROM ptu_pacote 
	where	nr_sequencia	= nr_seq_ptu_pacote_w;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_tabela_a1200 ( cd_edicao_amb_p edicao_amb.cd_edicao_amb%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

