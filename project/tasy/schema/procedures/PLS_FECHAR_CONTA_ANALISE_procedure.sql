-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_fechar_conta_analise ( ie_commit_p text, nr_seq_analise_p bigint, nr_seq_grupo_p bigint, ie_consistir_pend_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nm_usuario_audit_lib_w		varchar(255);
ie_origem_conta_w		varchar(255);
ie_analise_cm_nova_w		varchar(255);
nm_usuario_lib_w		varchar(20);
cd_codigo_w			varchar(20);
nr_nota_fiscal_w		varchar(20);
cd_guia_w			varchar(10);
ie_permite_fechar_conta_w	varchar(10)	:= 'N';
ie_status_w			varchar(2);
ie_status_ww			varchar(2);
ie_via_acesso_w			varchar(2);
ie_permissao_w			varchar(2);
ie_itens_auditar_cor_w		varchar(2);
ie_itens_auditar_w		varchar(1);
ie_tipo_glosa_oc_w		varchar(1);
ie_carater_internacao_w		varchar(1);
ie_fechar_conta_w		varchar(1);
ie_fechar_com_glosas_w		varchar(1);
ie_tipo_item_w			varchar(1);
ie_inconsistencia_conta_w	varchar(1);
vl_total_w			double precision;
vl_prestador_w			double precision;
vl_pag_medico_conta_w		double precision;
qt_liberado_w			double precision;
tx_item_w			double precision;
vl_liberado_w			double precision;
vl_unit_liberado_w		double precision;
nr_seq_conta_w			bigint;
nr_seq_glosa_oc_w		bigint;
nr_seq_analise_conta_item_w	bigint;
qt_parecer_desfav_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_motivo_glosa_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_item_w			bigint;
nr_seq_item_analise_w		bigint;
nr_seq_glosa_anexada_oc_w	bigint;
nr_seq_auditoria_w		bigint;
nr_seq_partic_proc_w		bigint;
nr_seq_fatura_w			bigint;
vl_calculado_w			double precision;
qt_grupos_pend_w		bigint;
qt_glosa_pend_w			bigint;
dt_atualizacao_w		timestamp;
dt_emissao_nf_w			timestamp;
dt_recebimento_nf_w		timestamp;
qt_item_pos_estab_w		bigint;
ie_glosa_w			pls_conta.ie_glosa%type;
qt_glosa_ocor_w			integer;
ie_novo_pos_w			pls_visible_false.ie_novo_pos_estab%type;
nr_seq_analise_pos_w	pls_analise_conta.nr_sequencia%type;
cd_guia_fat_w			pls_conta.cd_guia_fat%type;


C01 CURSOR FOR
	SELECT	b.nr_sequencia
	from	pls_conta	b
	where	b.ie_status not in ('F','C')
	and	b.nr_seq_analise	= nr_seq_analise_p
	order by cd_guia_referencia desc;
		
C02 CURSOR FOR
	SELECT	ie_tipo,
		nr_seq_glosa_oc,
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nr_seq_conta_mat,
		nr_seq_conta_proc,
		cd_codigo,
		ie_status
	from	pls_analise_conta_item
	where	nr_seq_conta	= nr_seq_conta_w
	order 	by CASE WHEN ie_status='N' THEN 9 WHEN ie_status='L' THEN 8  ELSE 1 END;

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_status,
		a.vl_total,
		a.nr_seq_conta_proc,
		a.nr_seq_Conta_mat,
		a.nr_seq_partic_proc
	from	w_pls_resumo_conta	a
	where	a.nr_seq_analise  = nr_seq_analise_p	
	and	a.nr_seq_conta 	  = nr_seq_conta_w
	and	a.ie_status 	 <> 'I';
C04 CURSOR FOR
	SELECT	x.nr_seq_analise
	from	pls_conta a,
		pls_conta_pos_estabelecido x
	where	x.nr_seq_conta		= a.nr_sequencia
	and	a.nr_seq_analise 	= nr_seq_analise_p
	and	(x.nr_seq_analise IS NOT NULL AND x.nr_seq_analise::text <> '')
	and	((x.ie_situacao	= 'A') or (coalesce(x.ie_situacao::text, '') = ''))
	group by x.nr_seq_analise
	order by 1;
	
C05 CURSOR FOR
	SELECT	distinct nr_seq_analise
	from (
			SELECT	x.nr_seq_analise
			from	pls_conta a,
				pls_conta_pos_proc x
			where	x.nr_seq_conta		= a.nr_sequencia
			and	a.nr_seq_analise 	= nr_seq_analise_p
			and	(x.nr_seq_analise IS NOT NULL AND x.nr_seq_analise::text <> '')
			
union all

			select	x.nr_seq_analise
			from	pls_conta a,
				pls_conta_pos_mat x
			where	x.nr_seq_conta		= a.nr_sequencia
			and	a.nr_seq_analise 	= nr_seq_analise_p
			and	(x.nr_seq_analise IS NOT NULL AND x.nr_seq_analise::text <> '')) alias2
	group by nr_seq_analise
	order by 1;
	
  rw_conta_analise_w RECORD;
  rw_proc_conta_w RECORD;
  rw_mat_conta_w RECORD;

BEGIN
begin
	select	coalesce(a.ie_analise_cm_nova,'N')
	into STRICT	ie_analise_cm_nova_w
	from	pls_parametros a
	where	a.cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	ie_analise_cm_nova_w	:= 'N';
end;

select	coalesce(max(ie_novo_pos_estab),'N')
into STRICT 	ie_novo_pos_w
from	pls_visible_false;

ie_permite_fechar_conta_w	:=  obter_valor_param_usuario(1317, 19, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);

select	max(a.ie_origem_conta)
into STRICT	ie_origem_conta_w
from	pls_analise_conta	a
where	a.nr_sequencia	= nr_seq_analise_p;

if (coalesce(ie_consistir_pend_p, 'S') = 'S') and (coalesce(ie_permite_fechar_conta_w, 'N') = 'N') then
	
	ie_itens_auditar_w	:= pls_obter_se_todos_itens_aud(nr_seq_analise_p, null, nm_usuario_p);

	select	max(ie_permissao)
	into STRICT	ie_permissao_w
	from 	pls_grupo_auditor
	where 	nr_sequencia	= nr_seq_grupo_p;

	if	((ie_itens_auditar_w = 'N') and (not(coalesce(ie_permissao_w, 'X') in ('T', 'R')))) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174347, 'NR_SEQ_ANALISE=' || nr_seq_analise_p);

	end if;

	ie_itens_auditar_cor_w	:= pls_obter_se_todos_itens_cor(nr_seq_analise_p, null, nm_usuario_p);

	if	((ie_itens_auditar_cor_w = 'N') and (not(coalesce(ie_permissao_w, 'X') in ('T', 'R')))) then
		 CALL wheb_mensagem_pck.exibir_mensagem_abort(174348, 'NR_SEQ_ANALISE=' || nr_seq_analise_p);


	end if;
end if;

ie_fechar_com_glosas_w := obter_valor_param_usuario(1317,2,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);

if (ie_origem_conta_w <> 'E') and (ie_analise_cm_nova_w = 'N') then
	select	count(1)
	into STRICT	qt_grupos_pend_w
	from	pls_auditoria_conta_grupo   	a,
		pls_grupo_auditor		b
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	b.nr_sequencia		= a.nr_seq_grupo
	and	coalesce(a.dt_liberacao::text, '') = ''
	and	not exists (SELECT  1
					from	pls_membro_grupo_aud    x
					where	x.nr_seq_grupo 		= b.nr_sequencia
					and	x.nm_usuario_exec 	= nm_usuario_p
					and	x.ie_situacao 		= 'A');

	if (qt_grupos_pend_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210788);
		
	end if;
end if;

if (ie_fechar_com_glosas_w = 'N') then
	select	count(1)
	into STRICT	qt_glosa_pend_w
	from	pls_analise_conta_item
	where	nr_seq_analise	= nr_seq_analise_p
	and	ie_status	= 'P';
	
	if (qt_glosa_pend_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174347, 'NR_SEQ_ANALISE=' || nr_seq_analise_p);
	end if;
end if;

for r_c01_w in c01 loop

	if (ie_novo_pos_w = 'N') then
		CALL pls_lancar_item_proc_pos( r_c01_w.nr_sequencia, nm_usuario_p);
	else
		CALL pls_conversao_itens_pck.conversao_itens_pos(	null,  null, null,
								null, null, r_c01_w.nr_sequencia,
								nm_usuario_p, cd_estabelecimento_p);
			
		CALL pls_conversao_itens_pck.abrir_proc_pacote_cta(	null,  null, null,
								null, null, r_c01_w.nr_sequencia,
								nm_usuario_p, cd_estabelecimento_p);
			
	end if;

end loop;

open C01;
loop
fetch C01 into	
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	open C02;
	loop
	fetch C02 into	
		ie_tipo_glosa_oc_w,
		nr_seq_glosa_oc_w,
		nr_seq_analise_conta_item_w,
		nm_usuario_lib_w,
		dt_atualizacao_w,
		nr_seq_conta_mat_w,
		nr_seq_conta_proc_w,
		cd_codigo_w,
		ie_status_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin		
		
		if (ie_status_w not in ('N','P','L','E')) then			
		
			if (ie_tipo_glosa_oc_w = 'O') then
			
				select	max(ie_fechar_conta),
					max(nr_seq_glosa)
				into STRICT	ie_fechar_conta_w,
					nr_seq_glosa_anexada_oc_w
				from	pls_ocorrencia_benef
				where	nr_sequencia	= nr_seq_glosa_oc_w;

				if	(ie_fechar_com_glosas_w = 'N' AND ie_fechar_conta_w = 'N') then
					ie_fechar_conta_w	:= 'S';	
				end if;				

				update	pls_ocorrencia_benef
				set	dt_liberacao 		= dt_atualizacao_w,					
					nm_usuario_lib 		= nm_usuario_lib_w,
					ie_fechar_conta		= ie_fechar_conta_w,
					
					ie_situacao		= 'I',
					ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END ,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_sequencia 		= nr_seq_glosa_oc_w;
							
				select  count(1)
				into STRICT	qt_glosa_ocor_w
				from	pls_ocorrencia_benef
				where	nr_seq_glosa = nr_seq_glosa_anexada_oc_w
				and	ie_situacao = 'A';
				
				if	(nr_seq_glosa_anexada_oc_w IS NOT NULL AND nr_seq_glosa_anexada_oc_w::text <> '' AND qt_glosa_ocor_w = 0) then
					
					update	pls_conta_glosa
					set	dt_liberacao 		= dt_atualizacao_w,					
						nm_usuario_lib 		= nm_usuario_lib_w,
						ie_fechar_conta		= ie_fechar_conta_w,
						
						ie_situacao		= 'I',
						ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END ,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_sequencia	 	= nr_seq_glosa_anexada_oc_w;
				end if;
				
				
				update	pls_conta_glosa
				set	dt_liberacao 		= dt_atualizacao_w,					
					nm_usuario_lib 		= nm_usuario_lib_w,
					ie_fechar_conta		= ie_fechar_conta_w,
				
					ie_situacao		= 'I',
					ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END ,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_seq_ocorrencia_benef	= nr_seq_glosa_oc_w;
				
				
			elsif (ie_tipo_glosa_oc_w = 'G') then
			
				select	max(ie_fechar_conta),
					max(nr_seq_ocorrencia_benef)
				into STRICT	ie_fechar_conta_w,
					nr_seq_glosa_anexada_oc_w
				from	pls_conta_glosa
				where	nr_sequencia	= nr_seq_glosa_oc_w;								
				
				if	(ie_fechar_com_glosas_w = 'N' AND ie_fechar_conta_w = 'N') then
					ie_fechar_conta_w	:= 'S';	
				end if;
				
				update	pls_conta_glosa
				set	dt_liberacao 		= dt_atualizacao_w,
					nm_usuario_lib 		= nm_usuario_lib_w,
					ie_situacao		= 'I',
					ie_fechar_conta		= ie_fechar_conta_w,
					ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END ,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_lib_w
				where	nr_sequencia 		= nr_seq_glosa_oc_w;

				
				if (nr_seq_glosa_anexada_oc_w IS NOT NULL AND nr_seq_glosa_anexada_oc_w::text <> '') then
				
					update	pls_ocorrencia_benef
					set	dt_liberacao 		= dt_atualizacao_w,					
						nm_usuario_lib 		= nm_usuario_lib_w,
						ie_fechar_conta		= ie_fechar_conta_w,
					
						ie_situacao		= 'I',
						ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END ,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p					
					where	nr_sequencia		= nr_seq_glosa_anexada_oc_w;
				end if;
				
	
				update	pls_ocorrencia_benef
				set	dt_liberacao 		= dt_atualizacao_w,					
					nm_usuario_lib 		= nm_usuario_lib_w,
					ie_fechar_conta		= ie_fechar_conta_w,
					
					ie_situacao		= 'I',
					ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='S' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'U' END ,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_seq_glosa		= nr_seq_glosa_oc_w;
			end if;
			
		elsif (ie_status_w in ('L', 'N')) then
			
			if (ie_tipo_glosa_oc_w = 'O') then
			
				select	max(ie_fechar_conta),
					max(nr_seq_glosa)
				into STRICT	ie_fechar_conta_w,
					nr_seq_glosa_anexada_oc_w
				from	pls_ocorrencia_benef
				where	nr_sequencia	= nr_seq_glosa_oc_w;

				if	(ie_fechar_com_glosas_w = 'N' AND ie_fechar_conta_w = 'N') then
					ie_fechar_conta_w	:= 'S';	
				end if;				

				update	pls_ocorrencia_benef
				set	dt_liberacao 		= dt_atualizacao_w,					
					nm_usuario_lib 		= nm_usuario_lib_w,
					ie_fechar_conta		= ie_fechar_conta_w,
					
					ie_situacao		= 'A',
					ie_forma_inativacao	 = NULL,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_sequencia 		= nr_seq_glosa_oc_w;

			
				if (nr_seq_glosa_anexada_oc_w IS NOT NULL AND nr_seq_glosa_anexada_oc_w::text <> '') then
				
					update	pls_conta_glosa
					set	dt_liberacao 		= dt_atualizacao_w,					
						nm_usuario_lib 		= nm_usuario_lib_w,
						ie_fechar_conta		= ie_fechar_conta_w,
						
						ie_situacao		= 'A',
						ie_forma_inativacao	 = NULL,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_sequencia	 	= nr_seq_glosa_anexada_oc_w;
				end if;
				
				update	pls_conta_glosa
				set	dt_liberacao 		= dt_atualizacao_w,					
					nm_usuario_lib 		= nm_usuario_lib_w,
					ie_fechar_conta		= ie_fechar_conta_w,
					
					ie_situacao		= 'A',
					ie_forma_inativacao	 = NULL,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_seq_ocorrencia_benef	= nr_seq_glosa_oc_w;
				
			elsif (ie_tipo_glosa_oc_w = 'G') then
			
				select	max(ie_fechar_conta),
					max(nr_seq_ocorrencia_benef)
				into STRICT	ie_fechar_conta_w,
					nr_seq_glosa_anexada_oc_w
				from	pls_conta_glosa
				where	nr_sequencia	= nr_seq_glosa_oc_w;								
				
				if	(ie_fechar_com_glosas_w = 'N' AND ie_fechar_conta_w = 'N') then
					ie_fechar_conta_w	:= 'S';	
				end if;

				update	pls_conta_glosa
				set	dt_liberacao 		= dt_atualizacao_w,
					nm_usuario_lib 		= nm_usuario_lib_w,
					ie_fechar_conta		= ie_fechar_conta_w,
					ie_situacao		= 'A',
					ie_forma_inativacao	 = NULL,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_sequencia 		= nr_seq_glosa_oc_w;
				
							
				if (nr_seq_glosa_anexada_oc_w IS NOT NULL AND nr_seq_glosa_anexada_oc_w::text <> '') then
				
					update	pls_ocorrencia_benef
					set	dt_liberacao 		= dt_atualizacao_w,					
						nm_usuario_lib 		= nm_usuario_lib_w,
						ie_fechar_conta		= ie_fechar_conta_w,
						
						ie_situacao		= 'A',
						ie_forma_inativacao	 = NULL,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_sequencia 	= nr_seq_glosa_anexada_oc_w;
				end if;
				
				update	pls_ocorrencia_benef
				set	dt_liberacao 		= dt_atualizacao_w,					
					nm_usuario_lib 		= nm_usuario_lib_w,
					ie_fechar_conta		= ie_fechar_conta_w,
					
					ie_situacao		= 'A',
					ie_forma_inativacao	 = NULL,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_seq_glosa	 	= nr_seq_glosa_oc_w;
			end if;
		end if;
		end;
	end loop;
	close C02;
	
	open C03;
	loop
	fetch C03 into	
		nr_seq_item_analise_w,
		ie_status_ww,
		vl_total_w,
		nr_seq_conta_proc_w,
		nr_seq_conta_mat_w,
		nr_seq_partic_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin			
		if (ie_status_ww = 'C') then
			ie_status_ww	:=  'D';
		end if;
		
		if (ie_permite_fechar_conta_w = 'S') then		
			if (ie_status_ww = 'P') then
				ie_status_ww	:= 'L';
				
			end if;
		end if;
		
	
		if (coalesce(nr_seq_conta_proc_w,0) > 0) then		
			select	vl_medico_original,
				vl_procedimento
			into STRICT	vl_pag_medico_conta_w,
				vl_calculado_w
			from	pls_conta_proc
			where 	nr_sequencia = nr_seq_conta_proc_w;
		
			vl_pag_medico_conta_w	:= dividir((vl_pag_medico_conta_w*vl_total_w),vl_calculado_w);
			
			update	pls_conta_proc
			set	ie_status		= ie_status_ww,
				vl_liberado		= vl_total_w,
				vl_prestador		= vl_total_w,
				vl_pag_medico_conta 	= vl_pag_medico_conta_w
			where	nr_sequencia 		= nr_seq_conta_proc_w;			
		elsif (coalesce(nr_seq_conta_mat_w,0) > 0) then
			update	pls_conta_mat
			set	ie_status	= ie_status_ww,
				vl_liberado	= vl_total_w
			where	nr_sequencia 	= nr_seq_conta_mat_w;
		elsif (coalesce(nr_seq_partic_proc_w,0) > 0) then
			update	pls_proc_participante
			set	ie_status	= ie_status_ww,
				vl_participante	= vl_total_w
			where	nr_sequencia 	= nr_seq_partic_proc_w;
		end if;	
		
		end;
	end loop;
	close C03;
	
	CALL pls_fechar_conta(nr_seq_conta_w, 'S', null, 'N', cd_estabelecimento_p, nm_usuario_p, null, null);

	if (ie_novo_pos_w = 'N') then
		
		select	count(1)
		into STRICT	qt_item_pos_estab_w
		from	pls_conta_pos_estabelecido a
		where	a.nr_seq_conta	= nr_seq_conta_w
		and	((a.nr_seq_conta_proc IS NOT NULL AND a.nr_seq_conta_proc::text <> '') or (a.nr_seq_conta_mat IS NOT NULL AND a.nr_seq_conta_mat::text <> ''))
		and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''))
		and	coalesce(a.nr_seq_analise::text, '') = '';
	else
	
		select 	count(1)
		into STRICT	qt_item_pos_estab_w
		from (
			SELECT	nr_sequencia
			from	pls_conta_pos_proc
			where	nr_seq_conta	= nr_seq_conta_w
			and	coalesce(nr_seq_analise::text, '') = ''
			
union all

			SELECT nr_sequencia
			from	pls_conta_pos_mat
			where	nr_seq_conta	= nr_seq_conta_w
			and	coalesce(nr_seq_analise::text, '') = '') alias3;
			
	
	end if;
		
	if (qt_item_pos_estab_w > 0) then
		CALL pls_gerar_analise_pos_estab(nr_seq_conta_w, nm_usuario_p, cd_estabelecimento_p,'F');
	end if;

	
	if (ie_novo_pos_w = 'N') then
		select cd_guia_fat,
				(select max(nr_seq_analise) from pls_conta_pos_estabelecido where nr_seq_conta = a.nr_sequencia) nr_seq_analise
		into STRICT	cd_guia_fat_w,
				nr_seq_analise_pos_w
		from	pls_conta a
		where 	nr_sequencia = nr_seq_conta_w;
	else
		select 	max(cd_guia_fat),
				max(nr_seq_analise)
		into STRICT	cd_guia_fat_w,
				nr_seq_analise_pos_w
		from (
			SELECT a.cd_guia_fat,
			   b.nr_seq_analise
			from  pls_conta a,
				  pls_conta_pos_proc b
			where   a.nr_sequencia = nr_seq_conta_w
			and     a.nr_sequencia = b.nr_seq_conta
			
union all

			SELECT a.cd_guia_fat,
			   b.nr_seq_analise
			from  pls_conta a,
				  pls_conta_pos_mat b
			where   a.nr_sequencia = nr_seq_conta_w
			and     a.nr_sequencia = b.nr_seq_conta
		) alias2;
	
	end if;
	
	if (coalesce(cd_guia_fat_w::text, '') = '') then	
			CALL pls_define_cd_guia_fat_conta(nr_seq_conta_w, nr_seq_analise_pos_w, nm_usuario_p);
	end if;
	
			
	CALL pls_cta_consistir_pck.gerar_resumo_conta(null, null, null, nr_seq_conta_w,nm_usuario_p, cd_estabelecimento_p);
	end;
end loop;
close C01;

begin
nm_usuario_audit_lib_w	:= pls_obter_nome_usuario(nm_usuario_p);
exception
when others then
	nm_usuario_audit_lib_w	:= nm_usuario_p;
end;

CALL pls_inserir_hist_analise(nr_seq_conta_w, nr_seq_analise_p, 10, null, 'C', null, null, 'Contas fechadas pelo auditor: ' || nm_usuario_audit_lib_w, nr_seq_grupo_p,
				nm_usuario_p, cd_estabelecimento_p);

begin
	select 	nr_sequencia
	into STRICT	nr_seq_auditoria_w
	from	pls_auditoria_conta_grupo
	where	nr_seq_analise 	= nr_seq_analise_p
	and	nr_seq_grupo	= nr_seq_grupo_p
	and	coalesce(dt_liberacao::text, '') = '';
exception
when others then
	nr_seq_auditoria_w	:= 0;		
end;

if (coalesce(nr_seq_auditoria_w,0) > 0) then
	update	pls_auditoria_conta_grupo y
	set	y.dt_liberacao	  = clock_timestamp(),
		y.dt_atualizacao  = clock_timestamp(),
		y.nm_usuario	  = nm_usuario_p
	where	y.nr_sequencia 	in (SELECT	a.nr_sequencia	
					from	pls_auditoria_conta_grupo   	a,
						pls_grupo_auditor		b
					where	a.nr_seq_analise	= nr_seq_analise_p
					and	b.nr_sequencia		= a.nr_seq_grupo
					and	exists (select  1
									from	pls_membro_grupo_aud    x
									where	x.nr_seq_grupo 		= b.nr_sequencia
									and	x.nm_usuario_exec 	= nm_usuario_p
									and	x.ie_situacao 		= 'A'));
end if;

CALL pls_alterar_status_analise_cta(nr_seq_analise_p, 'T', 'PLS_FECHAR_CONTA_ANALISE', nm_usuario_p, cd_estabelecimento_p);

CALL ptu_status_analise_finalizada(nr_seq_conta_w, nm_usuario_p, cd_estabelecimento_p);
commit;

if (ie_novo_pos_w = 'N') then
	for r_c04_w in C04() loop
		begin
		CALL pls_consistir_analise_pos(r_c04_w.nr_seq_analise, null, cd_estabelecimento_p, nm_usuario_p, 'N', 'N', 'N');
		end;
	end loop;
else
	for r_c05_w in C05() loop
		begin
		CALL pls_consistir_analise_pos(r_c05_w.nr_seq_analise, null, cd_estabelecimento_p, nm_usuario_p, 'N', 'N', 'N');
		end;
	end loop;
end if;

commit;
CALL pls_gerar_auditoria_pos(nr_seq_analise_p, null, 'N', cd_estabelecimento_p, nm_usuario_p);

CALL pls_atualizar_grupo_penden(nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p);

select	max(nr_seq_fatura)
into STRICT	nr_seq_fatura_w
from	pls_conta
where	nr_sequencia	= nr_seq_conta_w;


CALL pls_atualizar_valor_ptu_fatura(nr_seq_fatura_w, 'N');

for	rw_conta_analise_w in (	SELECT	a.nr_sequencia
				from	pls_conta_v a
				where	a.nr_seq_analise = nr_seq_analise_p
				and	a.ie_status <> 'C') loop
	

	for	rw_proc_conta_w in (	select	a.nr_sequencia,
						a.vl_liberado,
						a.qt_procedimento,
						((select	count(1)
						from	pls_conta_glosa x
						where	x.nr_seq_conta_proc = a.nr_sequencia
						and	x.ie_situacao = 'A')
						+
						(select	count(1)
						from	pls_ocorrencia_benef x
						where	x.nr_seq_conta_proc = a.nr_sequencia
						and	x.ie_situacao = 'A')
						+
						(select	count(1)
						from	pls_conta_glosa x
						where	x.nr_seq_conta = a.nr_seq_conta
						and	coalesce(x.nr_seq_conta_proc::text, '') = ''
						and	coalesce(x.nr_seq_conta_mat::text, '') = ''
						and	coalesce(x.nr_seq_proc_partic::text, '') = ''
						and	x.ie_situacao = 'A')
						+
						(select	count(1)
						from	pls_ocorrencia_benef x
						where	x.nr_seq_conta = a.nr_seq_conta
						and	coalesce(x.nr_seq_conta_proc::text, '') = ''
						and	coalesce(x.nr_seq_conta_mat::text, '') = ''
						and	coalesce(x.nr_seq_proc_partic::text, '') = ''
						and	x.ie_situacao = 'A')) qt_glosa
					from	pls_conta_proc_v a
					where	a.nr_seq_conta	= rw_conta_analise_w.nr_sequencia
					and	a.ie_status	<> 'D') loop
		
		ie_glosa_w 	:= 'N';
		
		if	((rw_proc_conta_w.vl_liberado = 0 or rw_proc_conta_w.qt_procedimento = 0) and
			rw_proc_conta_w.qt_glosa > 0)then
			
			ie_glosa_w		:= 'S';
		end if;
				
		update	pls_conta_proc
		set	ie_glosa = ie_glosa_w,
			nm_usuario = nm_usuario,
			dt_atualizacao = dt_atualizacao
		where	nr_sequencia = rw_proc_conta_w.nr_sequencia;
	end loop;
	
	for	rw_mat_conta_w in (	SELECT	a.nr_sequencia,
						a.vl_liberado,
						a.qt_material,
						((select	count(1)
						from	pls_conta_glosa x
						where	x.nr_seq_conta_mat = a.nr_sequencia
						and	x.ie_situacao = 'A')
						+
						(select	count(1)
						from	pls_ocorrencia_benef x
						where	x.nr_seq_conta_mat = a.nr_sequencia
						and	x.ie_situacao = 'A')
						+
						(select	count(1)
						from	pls_conta_glosa x
						where	x.nr_seq_conta = a.nr_seq_conta
						and	coalesce(x.nr_seq_conta_proc::text, '') = ''
						and	coalesce(x.nr_seq_conta_mat::text, '') = ''
						and	coalesce(x.nr_seq_proc_partic::text, '') = ''
						and	x.ie_situacao = 'A')
						+
						(select	count(1)
						from	pls_ocorrencia_benef x
						where	x.nr_seq_conta = a.nr_seq_conta
						and	coalesce(x.nr_seq_conta_proc::text, '') = ''
						and	coalesce(x.nr_seq_conta_mat::text, '') = ''
						and	coalesce(x.nr_seq_proc_partic::text, '') = ''
						and	x.ie_situacao = 'A')) qt_glosa
					from	pls_conta_mat_v a
					where	a.nr_seq_conta	= rw_conta_analise_w.nr_sequencia
					and	a.ie_status	<> 'D') loop
		
		ie_glosa_w 	:= 'N';
		
		if	((rw_mat_conta_w.vl_liberado = 0 or rw_mat_conta_w.qt_material = 0) and
			rw_mat_conta_w.qt_glosa > 0)then
			
			ie_glosa_w		:= 'S';
		end if;
				
		update	pls_conta_mat
		set	ie_glosa = ie_glosa_w,
			nm_usuario = nm_usuario,
			dt_atualizacao = dt_atualizacao
		where	nr_sequencia = rw_mat_conta_w.nr_sequencia;
	end loop;
	
	select	max(ie_glosa)
	into STRICT	ie_glosa_w
	from	pls_conta_v
	where	nr_sequencia	= rw_conta_analise_w.nr_sequencia;
	
	update	pls_conta
	set	ie_glosa = ie_glosa_w,
		nm_usuario = nm_usuario,
		dt_atualizacao = dt_atualizacao
	where	nr_sequencia	= rw_conta_analise_w.nr_sequencia;
end loop;

if (coalesce(ie_commit_p, 'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_fechar_conta_analise ( ie_commit_p text, nr_seq_analise_p bigint, nr_seq_grupo_p bigint, ie_consistir_pend_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

