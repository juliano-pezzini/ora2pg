-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_301 (nm_usuario_p text) AS $body$
DECLARE


ie_gerar_w	varchar(1);
dt_geracao_w	timestamp;
dt_fim_ref_w	timestamp;
nr_seq_lote_w	bigint;
qt_w		smallint;

c01 CURSOR FOR
SELECT	nr_sequencia,
	cd_estabelecimento,
	cd_convenio,
	ie_tipo_lote,
	dt_ultima_execucao,
	ds_hora_execucao
from	c301_regra_lote
where	ie_situacao	= 'A'
order by cd_estabelecimento,
	coalesce(cd_convenio,0) desc;

c01_w	c01%rowtype;


BEGIN

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	SELECT * FROM OBTER_SE_GERA_LOTE_301(c01_w.ds_hora_execucao, ie_gerar_w, dt_geracao_w) INTO STRICT ie_gerar_w, dt_geracao_w;

	if (ie_gerar_w = 'S') then

		--a data do último lote gerado pela regra, para utilizar como base na data final de referência
		select	max(dt_fim_ref)
		into STRICT	dt_fim_ref_w
		from	d301_lote_envio
		where	(nr_seq_regra_lote IS NOT NULL AND nr_seq_regra_lote::text <> '')
		and	cd_estabelecimento	= c01_w.cd_estabelecimento
		and	ie_tipo_lote		= c01_w.ie_tipo_lote
		and	coalesce(cd_convenio,coalesce(c01_w.cd_convenio,0)) = coalesce(c01_w.cd_convenio,0);

		if (coalesce(dt_fim_ref_w::text, '') = '') then
			dt_fim_ref_w	:= pkg_date_utils.START_OF(clock_timestamp(),'DAY');
		else
			dt_fim_ref_w	:= dt_fim_ref_w +(1/24/60/60);
		end if;

		select	nextval('d301_lote_envio_seq')
		into STRICT	nr_seq_lote_w
		;

		insert into d301_lote_envio(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			cd_estabelecimento,
			cd_convenio,
			nr_seq_regra_lote,
			ie_tipo_lote,
			dt_inicio_geracao,
			dt_inicio_ref,
			dt_fim_ref)
		values (nr_seq_lote_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			c01_w.cd_estabelecimento,
			c01_w.cd_convenio,
			c01_w.nr_sequencia,
			c01_w.ie_tipo_lote,
			clock_timestamp(),
			dt_fim_ref_w,
			dt_geracao_w);

		CALL gerar_dados_lote_301(nr_seq_lote_w,null,nm_usuario_p);

		begin
		select	1
		into STRICT	qt_w
		from	d301_arquivo_envio a,
			d301_dataset_envio b
		where	a.nr_sequencia		= b.nr_seq_arquivo
		and	a.nr_seq_lote_envio	= nr_seq_lote_w  LIMIT 1;
		exception
		when others then
			qt_w	:= 0;
		end;

		if (qt_w  = 0) then
			delete	from d301_lote_envio
			where	nr_sequencia	= nr_seq_lote_w;
		end if;

		update	c301_regra_lote
		set	dt_ultima_execucao	= clock_timestamp()
		where	nr_sequencia		= c01_w.nr_sequencia;

	end if;

end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_301 (nm_usuario_p text) FROM PUBLIC;

