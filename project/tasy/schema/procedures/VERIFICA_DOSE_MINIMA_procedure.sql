-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verifica_dose_minima ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_utiliza_horarios_p text, ds_erro_p INOUT text, ds_erro2_p INOUT text) AS $body$
DECLARE


qt_max_prescricao_w		double precision;
cd_unidade_medida_consumo_w	varchar(30);
cd_unid_med_min_w		varchar(30);
qt_min_pessoa_w		double precision;
qt_conversao_dose_w		double precision;
qt_conversao_dose_min_w	double precision;
qt_dose_w			double precision;
qt_dose_ww			double precision;
qt_dose_min_w		double precision;
cd_unidade_medida_dose_w	varchar(30);
cd_material_w			integer;
ie_dose_limite_w		varchar(15);
nr_ocorrencia_w			double precision;
ie_via_aplicacao_w		varchar(5);
ie_justificativa_w		varchar(5);
ds_justificativa_w		varchar(2000);
cd_prescritor_w			varchar(50);
cd_setor_atendimento_w		integer;
qt_regra_w			bigint;
qt_idade_w			bigint;
qt_peso_w			real;
qt_limite_peso_w		double precision;
nr_horas_validade_w		integer;
cd_estabelecimento_w	integer;
ie_agrupador_w			prescr_material.ie_agrupador%type;

c01 CURSOR FOR
	SELECT	coalesce(QT_DOSE_MIN,0),
		upper(obter_desc_expressao(288220)),
		CD_UM_MINIMA,
		coalesce(ie_justificativa,'S')
	from	material_prescr a
	where	cd_material							= cd_material_w
	and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
	and	coalesce(ie_via_aplicacao, coalesce(ie_via_aplicacao_w,0))		= coalesce(ie_via_aplicacao_w,0)
	and	(qt_dose_min IS NOT NULL AND qt_dose_min::text <> '')
	and	qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999)
	and	qt_peso_w between coalesce(qt_peso_min,0) and coalesce(qt_peso_max,999)
	and	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w))
	and	ie_tipo								= '2'
	and	((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_prescritor_w, cd_especialidade) = 'S'))
	and	not exists (	SELECT 	1
					from	regra_setor_mat_prescr x
					where	x.nr_seq_mat_prescr = a.nr_sequencia
					and	x.cd_setor_excluir = cd_setor_atendimento_w)
	and	(((coalesce(ie_tipo_item,'TOD') = 'SOL') and (ie_agrupador_w = 4)) or
		 ((coalesce(ie_tipo_item,'TOD') = 'OUT') and (ie_agrupador_w <> 4)) or (coalesce(ie_tipo_item,'TOD') = 'TOD'))
	order by nr_sequencia;


BEGIN

ds_erro_p	:= '';
ds_erro2_p	:= '';

select	cd_material,
	cd_unidade_medida_dose,
	qt_dose,
	nr_ocorrencia,
	ie_via_aplicacao,
	ds_justificativa,
	ie_agrupador
into STRICT	cd_material_w,
	cd_unidade_medida_dose_w,
	qt_dose_ww,
	nr_ocorrencia_w,
	ie_via_aplicacao_w,
	ds_justificativa_w,
	ie_agrupador_w
from	prescr_material
where	nr_prescricao	= nr_prescricao_p
and	nr_sequencia	= nr_sequencia_p;

select	max(cd_prescritor),
	max(nr_horas_validade),
	max(cd_estabelecimento)
into STRICT	cd_prescritor_w,
	nr_horas_validade_w,
	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

if (coalesce(cd_material_w,0) > 0) and (cd_unidade_medida_dose_w IS NOT NULL AND cd_unidade_medida_dose_w::text <> '') and (coalesce(qt_dose_ww,0) > 0) then
	/* Pega o setor de atendimento da prescrição e a idade do paciente */

	select	cd_setor_atendimento,
		(obter_idade_pf(cd_pessoa_fisica, clock_timestamp(), 'A'))::numeric ,
		coalesce(qt_peso,0)
	into STRICT	cd_setor_atendimento_w,
		qt_idade_w,
		qt_peso_w
	from	prescr_medica
	where	nr_prescricao	= nr_prescricao_p;

	if (cd_unidade_medida_consumo_w = cd_unidade_medida_dose_w) then
		qt_conversao_dose_w	:= 1;
	else
		begin
		select	coalesce(max(qt_conversao),1)
		into STRICT	qt_conversao_dose_w
		from	material_conversao_unidade
		where	cd_material		= cd_material_w
		and	cd_unidade_medida	= cd_unidade_medida_dose_w;
		exception
			when others then
				qt_conversao_dose_w	:= 1;
		end;
	end if;

	/* Verifica se tem alguma regra para os dados informados */

	select	count(*)
	into STRICT	qt_regra_w
	from	material_prescr a
	where	cd_material							= cd_material_w
	and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
	and	coalesce(ie_via_aplicacao, coalesce(ie_via_aplicacao_w,0))		= coalesce(ie_via_aplicacao_w,0)
	and	qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999)
	and	qt_peso_w between coalesce(qt_peso_min,0) and coalesce(qt_peso_max,999)
	and	(qt_dose_min IS NOT NULL AND qt_dose_min::text <> '')
	and	((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_prescritor_w, cd_especialidade) = 'S'))
	and	ie_tipo								= '2'
	and	not exists (	SELECT 	1
					from	regra_setor_mat_prescr x
					where	x.nr_seq_mat_prescr = a.nr_sequencia
					and	x.cd_setor_excluir = cd_setor_atendimento_w)
	and	(((coalesce(ie_tipo_item,'TOD') = 'SOL') and (ie_agrupador_w = 4)) or
		 ((coalesce(ie_tipo_item,'TOD') = 'OUT') and (ie_agrupador_w <> 4)) or (coalesce(ie_tipo_item,'TOD') = 'TOD'));

	/* Caso haja alguma regra, faz as consistências */

	if (qt_regra_w > 0) then
		open c01;
		loop
		fetch c01 into
			qt_min_pessoa_w,
			ie_dose_limite_w,
			cd_unid_med_min_w,
			ie_justificativa_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			if (cd_unidade_medida_consumo_w = cd_unid_med_min_w) then
				qt_conversao_dose_min_w	:= 1;
			else
				begin
				select	coalesce(max(qt_conversao),1)
				into STRICT	qt_conversao_dose_min_w
				from	material_conversao_unidade
				where	cd_material		= cd_material_w
				and		cd_unidade_medida	= cd_unid_med_min_w;
				exception
					when others then
						qt_conversao_dose_min_w	:= 1;
				end;
			end if;

			qt_dose_w		:= (trunc(qt_dose_ww * 1000 / qt_conversao_dose_w)/ 1000);
			qt_dose_min_w	:= (trunc(qt_min_pessoa_w * 1000 / qt_conversao_dose_min_w)/ 1000);

			if (qt_dose_min_w > 0) and (qt_dose_min_w > coalesce(qt_dose_w,0)) and
				((ie_justificativa_w = 'S') or (coalesce(ds_justificativa_w::text, '') = '')) then
				ds_erro2_p := substr(wheb_mensagem_pck.get_texto(277155, 'QT_MIN_PESSOA_P=' || qt_min_pessoa_w || ';CD_UNID_MED_MIN_P=' || cd_unid_med_min_w || ';IE_DOSE_LIMITE_P=' || lower(ie_dose_limite_w)),1,255);
			end if;

			end;
		end loop;
		close c01;
	end if;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verifica_dose_minima ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_utiliza_horarios_p text, ds_erro_p INOUT text, ds_erro2_p INOUT text) FROM PUBLIC;

