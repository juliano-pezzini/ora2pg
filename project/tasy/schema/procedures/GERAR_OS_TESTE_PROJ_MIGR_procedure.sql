-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_os_teste_proj_migr ( nr_seq_projeto_p bigint, dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


nr_seq_os_proj_migr_w	bigint;
cd_funcao_projeto_w	integer;
nr_seq_grupo_des_w	bigint;
nm_usuario_analista_w	varchar(15);
nr_seq_os_teste_w		bigint;
ds_dano_w		varchar(4000);
nr_seq_os_revisao_w	bigint;
nr_seq_os_cor_teste_w	bigint;
ds_historico_w		text;

dt_atualizacao_w		timestamp;
nm_usuario_w		varchar(15);
ds_relat_tecnico_w		text;
cd_versao_tasy_w		varchar(15);
dt_historico_w		timestamp;
ie_origem_w		varchar(1);
nr_seq_tipo_w		bigint;
dt_liberacao_w		timestamp;
nm_usuario_lib_w		varchar(15);
ie_grau_satisfacao_w	varchar(3);
dt_envio_w		timestamp;

/*cursor c01 is
select	h.ds_relat_tecnico
from	man_ordem_serv_tecnico h
where	h.nr_seq_ordem_serv = nr_seq_os_revisao_w
and	h.nr_seq_tipo in (53,49)
order by
	h.dt_historico desc;*/
c01 CURSOR FOR
SELECT	dt_atualizacao,
	nm_usuario,
	ds_relat_tecnico,
	cd_versao_tasy,
	dt_historico,
	ie_origem,
	nr_seq_tipo,
	dt_liberacao,
	nm_usuario_lib,
	ie_grau_satisfacao,
	dt_envio
from	man_ordem_serv_tecnico
where	nr_seq_ordem_serv = nr_seq_os_revisao_w
and	nr_seq_tipo in (53,49)
order by
	dt_historico desc;


BEGIN
if (nr_seq_projeto_p IS NOT NULL AND nr_seq_projeto_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	/*select	nvl(max(nr_seq_ordem),0)
	into	nr_seq_os_teste_ant_w
	from	proj_ordem_servico
	where	nr_seq_proj = nr_seq_projeto_p
	and	ie_tipo_ordem = 'T';*/
	select	coalesce(max(nr_seq_os),0)
	into STRICT	nr_seq_os_revisao_w
	from	os_revisao_teste_migracao_v
	where	nr_seq_projeto = nr_seq_projeto_p;

	select	nr_seq_ordem_serv,
		cd_funcao
	into STRICT	nr_seq_os_proj_migr_w,
		cd_funcao_projeto_w
	from	proj_projeto
	where	nr_sequencia = nr_seq_projeto_p;

	select	max(nr_seq_grupo),
		max(nm_usuario_exec)
	into STRICT	nr_seq_grupo_des_w,
		nm_usuario_analista_w
	from	funcao_grupo_des
	where	cd_funcao = cd_funcao_projeto_w;

	if (coalesce(nr_seq_grupo_des_w::text, '') = '') or (coalesce(nm_usuario_analista_w::text, '') = '') then
		begin
		CALL wheb_mensagem_pck.exibir_mensagem_abort(281994);
		end;
	end if;

	ds_dano_w	:= 'Migração: testes referentes à função: ' ||
			cd_funcao_projeto_w || ' - ' || obter_desc_funcao(cd_funcao_projeto_w) || ' (' || obter_form_funcao(cd_funcao_projeto_w) || ').' || chr(13) || chr(10) || chr(13) || chr(10);

	ds_dano_w	:= 'Como acessar o ambiente Swing para a realização dos testes: ' || chr(13) || chr(10) ||
			'Via browser, acessar o endereço http://192.168.0.230/Tasy/ informando as suas credencias de acesso a rede (Internet) e selecionar a opção Rede interna.' || chr(13) || chr(10) || chr(13) || chr(10) ||
			'Como acessar o sistema para a realização dos testes:' || chr(13) || chr(10) ||
			'Utilizar as informações de login conforme o Tasy. Uma vez logado, os perfis serão exibidos na barra lateral esquerda e as funções correspondentes no painel central.' || chr(13) || chr(10) ||
			'As parâmetrizações, cadastros e regras em geral permanecem conforme o funcionamento normal do Tasy também.' || chr(13) || chr(10) || chr(13) || chr(10) ||
			'Questões a serem consideradas nos testes:' || chr(13) || chr(10) ||
			'- Processo / Regras de Negócio;' || chr(13) || chr(10) ||
			'- Performance;' || chr(13) || chr(10) ||
			'- Layout;' || chr(13) || chr(10) ||
			'- Funcionalidades e recursos conforme o ambiente Delphi;' || chr(13) || chr(10) ||
			'- Ícone: você deve selecionar um ícone para a função (em formato PNG e tamanho 64x64) e salvar o mesmo em \\whebd60\temp\Icones_Tasy_Java_Analistas_Delphi com o nome ' ||
			'como sendo o código da função;' || chr(13) || chr(10) || chr(13) || chr(10) ||
			'Como gerar as Ordens de Serviço referentes as possíveis situações identificadas: ' || chr(13) || chr(10) ||
			'Na OS correspondente a necessidade de testes, utilizar a opção de mouse lado direito "Migração - Gerar necessidade de correção referente ao projeto", e, ' ||
			'realizar a documentação desejada em relação as situações identificadas na nova OS que será gerada.';

	select	nextval('man_ordem_servico_seq')
	into STRICT	nr_seq_os_teste_w
	;

	insert into man_ordem_servico(
		nr_sequencia,
		dt_ordem_servico,
		cd_pessoa_solicitante,
		nr_seq_localizacao,
		nr_seq_equipamento,
		ds_dano_breve,
		ie_prioridade,
		ds_dano,
		cd_funcao,
		nr_seq_grupo_des,
		ie_classificacao,
		ie_tipo_ordem,
		ie_status_ordem,
		dt_inicio_previsto,
		dt_fim_previsto,
		dt_inicio_desejado,
		dt_conclusao_desejada,
		nr_seq_estagio,
		nr_grupo_trabalho,
		nr_grupo_planej,
		nm_usuario,
		dt_atualizacao,
		ie_parado,
		ie_obriga_news,
		ie_exclusiva,
		ie_origem_os,
		nr_seq_classif,
		nr_seq_nivel_valor,
		nr_seq_origem)
	values (
		nr_seq_os_teste_w,
		coalesce(dt_referencia_p,clock_timestamp()),
		'4464',
		1272,
		41,
		'Migração: testes do projeto ' || obter_form_funcao(cd_funcao_projeto_w),
		'A',
		ds_dano_w,
		cd_funcao_projeto_w,
		nr_seq_grupo_des_w,
		'S',
		4,
		'2',
		coalesce(dt_referencia_p,clock_timestamp()),
		coalesce(dt_referencia_p,clock_timestamp()) + 1,
		coalesce(dt_referencia_p,clock_timestamp()),
		coalesce(dt_referencia_p,clock_timestamp()) + 1,
		1051,
		2,
		1,
		nm_usuario_p,
		coalesce(dt_referencia_p,clock_timestamp()),
		'N',
		'N',
		'P',
		'1',
		22,
		1,
		nr_seq_os_proj_migr_w);

	delete
	from	man_ordem_servico_exec
	where	nr_seq_ordem = nr_seq_os_teste_w;

	delete
	from	man_ordem_ativ_prev
	where	nr_seq_ordem_serv = nr_seq_os_teste_w;

	/*insert into man_ordem_servico_exec (
		nr_sequencia,
		nr_seq_ordem,
		dt_atualizacao,
		nm_usuario,
		nm_usuario_exec,
		qt_min_prev,
		dt_ult_visao,
		nr_seq_funcao,
		dt_recebimento,
		nr_seq_tipo_exec)
	values (
		man_ordem_servico_exec_seq.nextval,
		nr_seq_os_teste_w,
		sysdate,
		nm_usuario_p,
		'Rafael',
		null,
		null,
		null,
		null,
		3);*/
	insert into man_ordem_servico_exec(
		nr_sequencia,
		nr_seq_ordem,
		dt_atualizacao,
		nm_usuario,
		nm_usuario_exec,
		qt_min_prev,
		dt_ult_visao,
		nr_seq_funcao,
		dt_recebimento,
		nr_seq_tipo_exec)
	values (
		nextval('man_ordem_servico_exec_seq'),
		nr_seq_os_teste_w,
		coalesce(dt_referencia_p,clock_timestamp()),
		nm_usuario_p,
		nm_usuario_analista_w,
		null,
		null,
		null,
		null,
		1);

	/*open c01;
	loop
	fetch c01 into ds_historico_w;
	exit when c01%notfound;
		begin
		insert into man_ordem_serv_tecnico (
			nr_sequencia,
			nr_seq_ordem_serv,
			dt_atualizacao,
			nm_usuario,
			ds_relat_tecnico,
			dt_historico,
			ie_origem,
			nr_seq_tipo,
			nm_usuario_lib,
			dt_liberacao)
		values (
			man_ordem_serv_tecnico_seq.nextval,
			nr_seq_os_teste_w,
			nvl(dt_referencia_p,sysdate),
			'Rafael',
			ds_historico_w,
			nvl(dt_referencia_p,sysdate),
			'I',
			20,
			'Rafael',
			nvl(dt_referencia_p,sysdate));
		end;
	end loop;
	close c01;*/
	open c01;
	loop
	fetch c01 into	dt_atualizacao_w,
			nm_usuario_w,
			ds_relat_tecnico_w,
			cd_versao_tasy_w,
			dt_historico_w,
			ie_origem_w,
			nr_seq_tipo_w,
			dt_liberacao_w,
			nm_usuario_lib_w,
			ie_grau_satisfacao_w,
			dt_envio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert into man_ordem_serv_tecnico(
			nr_sequencia,
			nr_seq_ordem_serv,
			dt_atualizacao,
			nm_usuario,
			ds_relat_tecnico,
			cd_versao_tasy,
			dt_historico,
			ie_origem,
			nr_seq_tipo,
			dt_liberacao,
			nm_usuario_lib,
			ie_grau_satisfacao,
			dt_envio,
			ie_relevante_teste)
		values (
			nextval('man_ordem_serv_tecnico_seq'),
			nr_seq_os_teste_w,
			dt_atualizacao_w,
			nm_usuario_w,
			ds_relat_tecnico_w,
			cd_versao_tasy_w,
			dt_historico_w,
			ie_origem_w,
			nr_seq_tipo_w,
			dt_liberacao_w,
			nm_usuario_lib_w,
			ie_grau_satisfacao_w,
			dt_envio_w,
			'N');
		end;
	end loop;
	close c01;

	insert into man_ordem_serv_arq(
		nr_sequencia,
		nr_seq_ordem,
		dt_atualizacao,
		nm_usuario,
		ds_arquivo,
		ie_anexar_email,
		ie_status_anexo,
		dt_atualizacao_nrec,
		nm_usuario_nrec)
	SELECT	nextval('man_ordem_serv_arq_seq'),
		nr_seq_os_teste_w,
		dt_atualizacao,
		nm_usuario,
		ds_arquivo,
		ie_anexar_email,
		ie_status_anexo,
		dt_atualizacao_nrec,
		nm_usuario_nrec
	from	man_ordem_serv_arq
	where	nr_seq_ordem = nr_seq_os_revisao_w;

	insert into proj_ordem_servico(
		nr_sequencia,
		nr_seq_proj,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_ordem,
		ie_tipo_ordem)
	values (
		nextval('proj_ordem_servico_seq'),
		nr_seq_projeto_p,
		coalesce(dt_referencia_p,clock_timestamp()),
		nm_usuario_p,
		coalesce(dt_referencia_p,clock_timestamp()),
		nm_usuario_p,
		nr_seq_os_teste_w,
		'T');
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_os_teste_proj_migr ( nr_seq_projeto_p bigint, dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

