-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_laudo_paciente_loc ( nr_atendimento_p bigint, nr_prescricao_p bigint, cd_setor_atendimento_p bigint, cd_pessoa_entrega_p text, ie_tipo_local_p text, cd_setor_registro_p bigint, nr_seq_laudo_p bigint, nm_usuario_p text, cd_pessoa_fisica_p text, cd_pessoa_recebido_p text, ds_senha_p text, ds_observacao_p text, nm_externo_p text, ie_gravar_setor_p text, dt_recebimento_p timestamp) AS $body$
DECLARE

 
ie_tipo_atendimento_w 	smallint	:= 0;
ie_tipo_local_w 		varchar(3);
cd_setor_atendimento_w 	integer;
nr_seq_loc_w 			integer;
ie_data_retirada_w 		varchar(3);
cd_estabelecimento_w 	smallint;
dt_retirada_w 			timestamp		:= null;
ie_param_nove_w			varchar(1);
nr_agrupamento_w		bigint;
nr_seq_laudo_agrupado_w	bigint;

c01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	laudo_paciente 
	where	nr_agrupamento = nr_agrupamento_w 
	and	nr_sequencia <> nr_seq_laudo_p 
	and	nr_agrupamento_w > 0;


BEGIN 
 
 
select	coalesce(max(nr_agrupamento),0) 
into STRICT	nr_agrupamento_w 
from	laudo_paciente 
where 	nr_sequencia = nr_seq_laudo_p;
 
if (nr_atendimento_p <> 0) then 
	begin 
	 
	select	c.ie_tipo_atendimento, 
		c.cd_estabelecimento 
	into STRICT 	ie_tipo_atendimento_w, 
		cd_estabelecimento_w 
	from 	atendimento_paciente c 
	where 	c.nr_atendimento	= nr_atendimento_p;
	 
 	exception 
		when no_data_found then 
		begin 
 		ie_tipo_atendimento_w := 0;
 		end;
 	end;
end if;
 
if (nr_prescricao_p <> 0) and (ie_tipo_atendimento_w = 0) then 
	begin 
	 
 	select coalesce(max(c.ie_tipo_atendimento),0), 
 		coalesce(max(c.cd_estabelecimento),0) 
 	into STRICT	ie_tipo_atendimento_w, 
 		cd_estabelecimento_w 
 	from	prescr_medica b, 
 		atendimento_paciente c 
 	where	c.nr_atendimento = b.nr_atendimento 
 	and	b.nr_prescricao = nr_prescricao_p;
	 
 	exception 
 		when no_data_found then 
 		begin 
 		ie_tipo_atendimento_w := 0;
 		end;
 	end;
end if;
 
select	coalesce(obter_valor_param_usuario(994, 9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'n') 
into STRICT	ie_param_nove_w
;
 
/*luiz meinecke em 19/12/2006 os46665*/
 
if	ie_param_nove_w = 'N' then 
	 
	select	max(b.ie_tipo_local) 
	into STRICT	ie_tipo_local_w 
	from	regra_loc_laudo b, 
		prescr_medica a 
	where	a.cd_setor_entrega = b.cd_setor_entrega 
	and (coalesce(b.ie_tipo_atendimento, ie_tipo_atendimento_w) = ie_tipo_atendimento_w 
	or	ie_tipo_atendimento_w = 0) 
	and	a.nr_prescricao = nr_prescricao_p;
	 
end if;
 
select	coalesce(obter_valor_param_usuario(994, 8, obter_perfil_ativo, nm_usuario_p,cd_estabelecimento_w),'n') 
into STRICT	ie_data_retirada_w
;
 
if (coalesce(ie_tipo_local_w::text, '') = '') then 
	ie_tipo_local_w := ie_tipo_local_p;
end if;
 
if (ie_tipo_local_p = '8') or (ie_gravar_setor_p = 'S') then 
	cd_setor_atendimento_w := cd_setor_atendimento_p;
end if;
 
if (ie_data_retirada_w = 'S') then 
	dt_retirada_w := clock_timestamp();
elsif (ie_data_retirada_w = 'N') and (dt_recebimento_p IS NOT NULL AND dt_recebimento_p::text <> '') then 
	dt_retirada_w := dt_recebimento_p;
end if;
 
select	coalesce(max(nr_seq_loc), 0) + 1 
into STRICT	nr_seq_loc_w 
from	laudo_paciente_loc 
where	nr_sequencia = nr_seq_laudo_p;
 
insert	into	laudo_paciente_loc(nr_sequencia, 
  		nr_seq_loc, 
  		ie_tipo_local, 
  		dt_atualizacao, 
  		nm_usuario, 
  		cd_setor_atendimento, 
  		dt_retirada, 
  		cd_pessoa_fisica, 
  		ds_observacao, 
		cd_setor_registro, 
		nm_pessoa_fisica, 
		nm_usuario_nrec, 
		cd_pessoa_recebido, 
		ds_senha, 
		dt_atualizacao_nrec, 
		cd_pessoa_entrega) 
values (nr_seq_laudo_p, 
  		nr_seq_loc_w, 
  		ie_tipo_local_w, 
  		clock_timestamp(), 
  		nm_usuario_p, 
  		cd_setor_atendimento_w, 
  		dt_retirada_w, 
  		cd_pessoa_fisica_p, 
  		ds_observacao_p, 
		CASE WHEN cd_setor_registro_p=0 THEN  null  ELSE cd_setor_registro_p END , 
		substr(nm_externo_p,1,60), 
		nm_usuario_p, 
		cd_pessoa_recebido_p, 
		ds_senha_p, 
		clock_timestamp(), 
		cd_pessoa_entrega_p);
 
open c01;
loop 
fetch c01 into 
	nr_seq_laudo_agrupado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	select	coalesce(max(nr_seq_loc), 0) + 1 
	into STRICT	nr_seq_loc_w 
	from	laudo_paciente_loc 
	where	nr_sequencia = nr_seq_laudo_p;
	insert	into	laudo_paciente_loc(nr_sequencia, 
	  		nr_seq_loc, 
	  		ie_tipo_local, 
	  		dt_atualizacao, 
	  		nm_usuario, 
	  		cd_setor_atendimento, 
	  		dt_retirada, 
	  		cd_pessoa_fisica, 
	  		ds_observacao, 
			cd_setor_registro, 
			nm_pessoa_fisica, 
			nm_usuario_nrec, 
			cd_pessoa_recebido, 
			ds_senha, 
			dt_atualizacao_nrec, 
			cd_pessoa_entrega) 
	values (nr_seq_laudo_agrupado_w, 
	  		nr_seq_loc_w, 
	  		ie_tipo_local_w, 
	  		clock_timestamp(), 
	  		nm_usuario_p, 
	  		cd_setor_atendimento_w, 
	  		dt_retirada_w, 
	  		cd_pessoa_fisica_p, 
	  		ds_observacao_p, 
			CASE WHEN cd_setor_registro_p=0 THEN  null  ELSE cd_setor_registro_p END , 
			substr(nm_externo_p,1,60), 
			nm_usuario_p, 
			cd_pessoa_recebido_p, 
			ds_senha_p, 
			clock_timestamp(), 
			cd_pessoa_entrega_p);
 
	CALL atualizar_status_exec_proced(nr_seq_laudo_agrupado_w,nm_usuario_p,'N');
 
	end;
end loop;
close c01;
 
CALL atualizar_status_exec_proced(nr_seq_laudo_p,nm_usuario_p,'N');
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_laudo_paciente_loc ( nr_atendimento_p bigint, nr_prescricao_p bigint, cd_setor_atendimento_p bigint, cd_pessoa_entrega_p text, ie_tipo_local_p text, cd_setor_registro_p bigint, nr_seq_laudo_p bigint, nm_usuario_p text, cd_pessoa_fisica_p text, cd_pessoa_recebido_p text, ds_senha_p text, ds_observacao_p text, nm_externo_p text, ie_gravar_setor_p text, dt_recebimento_p timestamp) FROM PUBLIC;

