-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mens_amortizacao ( nr_seq_mensalidade_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
vl_item_w			double precision;
vl_amortizado_w			double precision;
nr_seq_amortizacao_w		bigint;
qt_segurado_w			integer;
vl_diferenca_w			double precision;
qt_inserida_w			integer;
vl_inserido_w			double precision;
vl_segurado_w			double precision;
vl_total_mens_w			double precision;
nr_seq_mens_segurado_w		bigint;
nr_titulo_w			bigint;
dt_baixa_w			timestamp;
dt_mes_competencia_w		timestamp;
nr_seq_item_mensalidade_w	pls_mensalidade_seg_item.nr_sequencia%type;

c01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.vl_amortizado 
	from	pls_pagador_amortizacao a 
	where	coalesce(a.nr_seq_mensalidade::text, '') = '' 
	and	a.nr_seq_pagador	= pls_store_data_mens_pck.get_nr_seq_pagador;

c02 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	pls_mensalidade_segurado 	a 
	where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p 
	and	exists (SELECT	1 
			from	pls_mensalidade_seg_item x 
			where	a.nr_sequencia = x.nr_seq_mensalidade_seg);


BEGIN 
if (nr_seq_mensalidade_p IS NOT NULL AND nr_seq_mensalidade_p::text <> '') then 
	open c01;
	loop 
	fetch c01 into 
		nr_seq_amortizacao_w, 
		vl_amortizado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		open c02;
		loop 
		fetch c02 into 
			nr_seq_mens_segurado_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			 
			-- Obter valor de rateio para o segurado 
			select	count(1) 
			into STRICT	qt_segurado_w 
			from	pls_mensalidade_segurado 	a 
			where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p 
			and	exists (SELECT	1 
					from	pls_mensalidade_seg_item x 
					where	a.nr_sequencia = x.nr_seq_mensalidade_seg);
			 
			vl_item_w	:= dividir_sem_round(vl_amortizado_w,qt_segurado_w);
			 
			select	max(b.nr_titulo), 
				max(b.dt_recebimento), 
				max(d.dt_referencia) 
			into STRICT	nr_titulo_w, 
				dt_baixa_w, 
				dt_mes_competencia_w 
			from	titulo_receber_liq	b, 
				titulo_receber		c, 
				pls_mensalidade		d, 
				pls_pagador_amortizacao	a 
			where	b.nr_titulo		= c.nr_titulo 
			and	c.nr_seq_mensalidade 	= d.nr_sequencia 
			and	b.nr_seq_amortizacao 	= a.nr_sequencia 
			and	a.nr_sequencia		= nr_seq_amortizacao_w;
			 
			nr_seq_item_mensalidade_w := null;
			 
			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('16', nm_usuario_p, null, null, 'Valor recebido a menor na última mensalidade.' || chr(13) || chr(10) || 
							'Referente ao título: ' || nr_titulo_w || chr(13) || chr(10) || 
							'Mês de competência: ' || dt_mes_competencia_w || chr(13) || chr(10) || 
							'Data da baixa: ' || dt_baixa_w, null, null, null, null, 'P', null, nr_seq_amortizacao_w, null, null, null, null, null, nr_seq_mens_segurado_w, null, null, null, null, null, null, null, null, null, null, null, null, null, vl_item_w, nr_seq_item_mensalidade_w);
 
			if (nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '') then 
				-- Arrendondamento 
				select	count(1) 
				into STRICT	qt_inserida_w 
				from	pls_mensalidade_seg_item a, 
					pls_mensalidade_segurado b 
				where	b.nr_sequencia		= a.nr_seq_mensalidade_seg 
				and	b.nr_seq_mensalidade	= nr_seq_mensalidade_p 
				and	a.nr_seq_amortizacao	= nr_seq_amortizacao_w;
				 
				-- Se for último registro 
				if (qt_inserida_w = qt_segurado_w) then 
					select	sum(a.vl_item) 
					into STRICT	vl_inserido_w 
					from	pls_mensalidade_seg_item a, 
						pls_mensalidade_segurado b 
					where	b.nr_sequencia		= a.nr_seq_mensalidade_seg 
					and	b.nr_seq_mensalidade	= nr_seq_mensalidade_p 
					and	a.nr_seq_amortizacao	= nr_seq_amortizacao_w;
					 
					if (vl_amortizado_w <> vl_inserido_w) then 
						vl_diferenca_w	:= vl_amortizado_w - vl_inserido_w;
						 
						update	pls_mensalidade_seg_item 
						set	vl_item	= vl_item + vl_diferenca_w 
						where	nr_sequencia	= nr_seq_item_mensalidade_w;
					end if;
				end if;
			end if;
		end loop;
		close c02;
		 
		-- Gravar a mensalidade na amortização para que não seja re-utilizada 
		update	pls_pagador_amortizacao 
		set	nr_seq_mensalidade	= nr_seq_mensalidade_p 
		where	nr_sequencia		= nr_seq_amortizacao_w;
	end loop;
	close c01;
end if;
-- Não pode dar commit nesta procedure 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mens_amortizacao ( nr_seq_mensalidade_p bigint, nm_usuario_p text) FROM PUBLIC;

