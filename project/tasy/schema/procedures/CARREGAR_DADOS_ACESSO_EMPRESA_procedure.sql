-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE carregar_dados_acesso_empresa ( nr_matricula_p text, qt_temperatura_p text, dt_acesso_predio_p text, nm_usuario_p text) AS $body$
DECLARE


cd_pessoa_fisica_w	usuario.cd_pessoa_fisica%type;
nm_pessoa_fisica_w	atendimento_visita.ds_observacao%type;
ds_observacao_w		atendimento_visita.ds_observacao%type;
cd_setor_Atendimento_w	usuario.cd_setor_Atendimento%type;
nr_identidade_w		pessoa_fisica.nr_identidade%type;
nr_telefone_celular_w 	pessoa_fisica.nr_telefone_celular%type;
cd_empresa_w		compl_pessoa_fisica.cd_empresa_refer%type;
dt_nascimento_w		pessoa_fisica.dt_nascimento%type;
qt_igual_w		atendimento_visita.nr_sequencia%type;
dt_acesso_predio_w 	atendimento_visita.dt_entrada%type;


BEGIN

if (nr_matricula_p IS NOT NULL AND nr_matricula_p::text <> '') then

	dt_acesso_predio_w := TO_DATE('01-01-1970', 'dd-mm-yyyy') + (dt_acesso_predio_p)::numeric /86400;

	select	max(a.cd_pessoa_fisica),
		max(substr(obter_nome_pf(a.cd_pessoa_fisica),1,255)),                                                         
		max(a.cd_setor_atendimento),                                                                                 
		max(b.nr_identidade),                                                                                         
		max(b.nr_telefone_celular),                                                                                   
		max(coalesce(substr(obter_compl_pf(a.cd_pessoa_fisica, 1, 'CS'), 1,90),
			     substr(obter_compl_pf(a.cd_pessoa_fisica, 2, 'CS'), 1,90))),
		max(b.dt_nascimento) 
	into STRICT	cd_pessoa_fisica_w,                                                                                       
		nm_pessoa_fisica_w,
		cd_setor_Atendimento_w,
		nr_identidade_w,
		nr_telefone_celular_w,
		cd_empresa_w,
		dt_nascimento_w
	from	usuario a, pessoa_fisica b
	where	a.cd_barras = nr_matricula_p
	and	a.cd_pessoa_fisica = b.cd_pessoa_fisica;

	
	select 	coalesce(max(1),0)
	into STRICT	qt_igual_w
	from	atendimento_visita
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	dt_entrada = dt_acesso_predio_w;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (qt_igual_w = 0) then


		ds_observacao_w := substr(obter_desc_expressao(761538) || ': ' || nr_matricula_p       || chr(10) || chr(13) ||
					  obter_desc_expressao(744691) || ': ' || nm_pessoa_fisica_w   || chr(10) || chr(13) ||
					  obter_desc_expressao(299207) || ': ' || qt_temperatura_p,1,255);

		insert into atendimento_visita(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_entrada,
					cd_pessoa_fisica,
					ds_observacao,
					cd_setor_Atendimento,
					nr_telefone, 
					nr_identidade,
					dt_nascimento,
					cd_empresa)
				values ( nextval('atendimento_visita_seq'),
					clock_timestamp(),
					coalesce(nm_usuario_p,'Tasy'),
					coalesce(dt_acesso_predio_w,clock_timestamp()),
					cd_pessoa_fisica_w,
					ds_observacao_w,
					cd_setor_Atendimento_w,
					nr_telefone_celular_w,
					nr_identidade_w,
					dt_nascimento_w,
					cd_empresa_w
				);

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE carregar_dados_acesso_empresa ( nr_matricula_p text, qt_temperatura_p text, dt_acesso_predio_p text, nm_usuario_p text) FROM PUBLIC;

