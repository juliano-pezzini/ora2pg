-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_reconsistir_pos_estab ( nr_seq_analise_p bigint, cd_estabelecimento_p bigint, ie_reconsistir_p text, nm_usuario_p text ) AS $body$
DECLARE

/*Esta rotina tem como objetivo realizar a reconsistencia das análises de pós estabelecido*/

nr_seq_pos_estab_w      bigint;
nr_seq_conta_w          bigint;
ie_origem_analise_w	bigint;
nr_seq_analise_pagto_w	bigint;
nr_seq_analise_pos_w	bigint;

C01 CURSOR FOR
        SELECT  distinct(nr_seq_conta)
        from    pls_conta_pos_estabelecido
        where   nr_seq_analise = nr_seq_analise_p
	and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));

BEGIN
/*ie_reconsistir = 'S'  -> reconsistir pós estabelecido
    ie_reconsistir = 'N' -> recalcular pósestabelecido
*/
select	max(ie_origem_analise)
into STRICT	ie_origem_analise_w
from	pls_analise_conta
where	nr_sequencia = nr_seq_analise_p;

if (ie_origem_analise_w = '2') then
	/*Se for uma análse de pós.*/

	nr_seq_analise_pos_w := nr_seq_analise_p;

	select	max(nr_seq_analise_ref)
	into STRICT	nr_seq_analise_pagto_w
	from	pls_analise_conta
	where	nr_sequencia = nr_seq_analise_p;
else
	/*Se for uma análise de pagto.*/

	select	max(nr_sequencia)
	into STRICT	nr_seq_analise_pos_w
	from	pls_analise_conta
	where	nr_seq_analise_ref = nr_seq_analise_p;

	nr_seq_analise_pagto_w := nr_seq_analise_p;
end if;

select	max(ie_origem_analise)
into STRICT	ie_origem_analise_w
from	pls_analise_conta
where	nr_sequencia = nr_seq_analise_pagto_w;

open C01;
loop
fetch C01 into
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (ie_reconsistir_p = 'S')	then
		/*Inativar as ocorrencias do pos estabelecido*/

		CALL pls_desfazer_oco_pos_estab(nr_seq_conta_w,nm_usuario_p);

		/*Recalcular novamente o pos estab*/

		CALL pls_gerar_valor_pos_estab(nr_seq_conta_w, nm_usuario_p,'A',null,null,'C');

		/*Gerar novamente as ocorrência*/

		CALL pls_gerar_ocorrencia_pos_estab(nr_seq_analise_p, nr_seq_conta_w,null,cd_estabelecimento_p,nm_usuario_p);

		/*Atualizar dados na análise */

		if (ie_origem_analise_w = 3) then
			CALL pls_atualizar_pos_estab_ptu(	nr_seq_conta_w,	null, null,
							nr_seq_analise_p, 'N', cd_estabelecimento_p,
							nm_usuario_p	);
		else
			CALL pls_atualizar_conta_pos_estab(	nr_seq_conta_w,	null, null,
							nr_seq_analise_p, 'N', cd_estabelecimento_p,
							nm_usuario_p	);
		end if;


		/*Atualizar as glosas da análise*/

		CALL pls_atualiza_oco_analise_pos(nr_seq_conta_w, nm_usuario_p);

		/*Liberar valor e verificar status*/

		CALL pls_analise_status_fat(		nr_seq_conta_w, null, null,
						nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p);
	elsif (ie_reconsistir_p = 	'N')	then
		/*Recalcular novamente o pos estab*/

		CALL pls_gerar_valor_pos_estab(nr_seq_conta_w, nm_usuario_p,'A',null,null,'C');

		if (ie_origem_analise_w = 3) then
			CALL pls_atualizar_pos_estab_ptu(	nr_seq_conta_w,	null, null,
							nr_seq_analise_p, 'N', cd_estabelecimento_p,
							nm_usuario_p );
		else
			CALL pls_atualizar_conta_pos_estab(	nr_seq_conta_w,	null, null,
							nr_seq_analise_p, 'N', cd_estabelecimento_p,
							nm_usuario_p );
		end if;

		/*incluído o tratamento abaixo para que o valor liberado seja atualizado estava ficando zerado  Diogo*/

		/*Liberar valor e verificar status*/

		CALL pls_analise_status_fat(		nr_seq_conta_w, null, null,
						nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_reconsistir_pos_estab ( nr_seq_analise_p bigint, cd_estabelecimento_p bigint, ie_reconsistir_p text, nm_usuario_p text ) FROM PUBLIC;

