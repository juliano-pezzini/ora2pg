-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_item_lote_hist (nr_seq_ret_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_propaci_p bigint, nr_seq_matpaci_p bigint, nm_usuario_p text, vl_glosa_informada_p bigint, qt_item_glosa_p bigint) AS $body$
DECLARE


nr_seq_lote_hist_w	bigint;
nr_seq_conpaci_ret_w	bigint;
nr_seq_hist_audit_w	bigint;
nr_seq_ret_item_w	bigint;
qt_item_w		double precision;
nr_seq_ret_glosa_w	bigint;
nr_seq_item_gerado_w	bigint;
cd_motivo_glosa_w	bigint;
nr_analise_w		bigint;
cd_setor_responsavel_w	integer;
vl_saldo_w		double precision;
cd_estabelecimento_w	smallint;
ie_carrega_setor_w	varchar(1);
ie_item_sem_saldo_w	varchar(1);
ie_ajustar_qtd_w	varchar(1);


BEGIN

select	max(a.nr_seq_lote_hist),
	max(b.nr_analise),
	max(c.cd_estabelecimento)
into STRICT	nr_seq_lote_hist_w,
	nr_analise_w,
	cd_estabelecimento_w
from	lote_auditoria c,
	lote_audit_hist b,
	lote_audit_hist_guia a
where	a.nr_sequencia		= nr_seq_guia_p
and	a.nr_seq_lote_hist	= b.nr_sequencia
and	b.nr_seq_lote_audit	= c.nr_sequencia;

ie_carrega_setor_w := obter_param_usuario(69, 20, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_carrega_setor_w);
ie_item_sem_saldo_w := obter_param_usuario(69, 28, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_item_sem_saldo_w);
ie_ajustar_qtd_w := obter_param_usuario(69, 14, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_ajustar_qtd_w);

if (coalesce(nr_seq_ret_glosa_p,0) <> 0) then

	select	max(a.nr_seq_ret_item),
		max(b.nr_seq_conpaci_ret),
		max(b.nr_seq_hist_audit),
		max(a.qt_glosa),
		max(a.cd_motivo_glosa),
		CASE WHEN ie_carrega_setor_w='N' THEN null  ELSE max(a.cd_setor_responsavel) END  cd_setor_responsavel
	into STRICT	nr_seq_ret_item_w,
		nr_seq_conpaci_ret_w,
		nr_seq_hist_audit_w,
		qt_item_w,
		cd_motivo_glosa_w,
		cd_setor_responsavel_w
	FROM convenio_retorno_glosa a
LEFT OUTER JOIN conta_paciente_ret_hist b ON (a.nr_seq_conpaci_ret_hist = b.nr_sequencia)
WHERE a.nr_sequencia		= nr_seq_ret_glosa_p;

	nr_seq_ret_glosa_w := nr_seq_ret_glosa_p;

else
	nr_seq_ret_glosa_w := null;

	select	max(qt_item),
		CASE WHEN ie_carrega_setor_w='N' THEN null  ELSE max(cd_setor_responsavel) END  cd_setor_responsavel
	into STRICT	qt_item_w,
		cd_setor_responsavel_w
	from (SELECT	coalesce(CASE WHEN coalesce(ie_ajustar_qtd_w,'N')='N' THEN a.qt_procedimento  ELSE (obter_dados_item_ajustado(a.nr_sequencia,null,'Q'))::numeric  END ,0) qt_item,
			coalesce(a.cd_setor_resp,a.cd_setor_atendimento) cd_setor_responsavel
		from	procedimento_paciente a
		where	a.nr_sequencia	= nr_seq_propaci_p
		
union

		SELECT	coalesce(a.qt_material,0) qt_item,
			a.cd_setor_atendimento cd_setor_responsavel
		from	material_atend_paciente a
		where	a.nr_sequencia	= nr_seq_matpaci_p
		and 	coalesce(ie_ajustar_qtd_w,'N') <> 'A'
		
union

		select	coalesce(b.qt_item_saldo,0) qt_item,
			a.cd_setor_atendimento cd_setor_responsavel
		from	material_atend_paciente a,
			w_saldo_material_conta  b
		where	a.nr_sequencia	= nr_seq_matpaci_p
		and 	a.nr_sequencia = b.nr_sequencia
		and 	b.nm_usuario = nm_usuario_p
		and 	coalesce(ie_ajustar_qtd_w,'N') = 'A') alias11;

end if;

vl_saldo_w	:= coalesce((obter_saldo_conpaci_item(nr_seq_propaci_p,nr_Seq_matpaci_p))::numeric ,0);

if (coalesce(ie_ajustar_qtd_w,'N') = 'A') and (coalesce(nr_Seq_matpaci_p,0) > 0) then
	select	coalesce(sum(b.vl_item_saldo),vl_saldo_w)
	into STRICT	vl_saldo_w
	from	material_atend_paciente a,
		w_saldo_material_conta  b
	where	a.nr_sequencia	= nr_seq_matpaci_p
	and 	a.nr_sequencia = b.nr_sequencia
	and 	b.nm_usuario = nm_usuario_p;
end if;
if (coalesce(ie_ajustar_qtd_w,'N') = 'A') and (coalesce(nr_Seq_propaci_p,0) > 0) then
	select	coalesce(sum((obter_dados_item_ajustado(a.nr_sequencia,null,'V'))::numeric ),vl_saldo_w)
	into STRICT	vl_saldo_w
	from	procedimento_paciente a
	where	a.nr_sequencia	= nr_seq_propaci_p;
end if;

if (coalesce(qt_item_glosa_p,0) <> 0) then
	qt_item_w	:= qt_item_glosa_p;
end if;

/* ahoffelder - 11/06/2010 -	alterei para gerar os itens negativos tambÃ©m porque deve ser chamada
				a procedure ajustar_lote_hist_item_conta (somente depois de inserir todos os itens na guia) */
if (ie_item_sem_saldo_w = 'S') or (vl_saldo_w > 0) or (qt_item_w < 0) then

	select	nextval('lote_audit_hist_item_seq')
	into STRICT	nr_seq_item_gerado_w
	;

	insert	into lote_audit_hist_item(dt_atualizacao,
		dt_historico,
		nm_usuario,
		nr_seq_conpaci_ret,
		nr_seq_guia,
		nr_seq_hist_audit,
		nr_seq_lote,
		nr_seq_matpaci,
		nr_seq_propaci,
		nr_seq_ret_glosa,
		nr_seq_ret_item,
		nr_sequencia,
		qt_item,
		vl_glosa,
		vl_pago,
		cd_motivo_glosa,
		cd_setor_responsavel,
		vl_amenor,
		vl_saldo_amenor,
		vl_glosa_informada,
		vl_saldo)
	values (clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_conpaci_ret_w,
		nr_seq_guia_p,
		nr_seq_hist_audit_w,
		nr_seq_lote_hist_w,
		nr_seq_matpaci_p,
		nr_seq_propaci_p,
		nr_seq_ret_glosa_w,
		nr_seq_ret_item_w,
		nr_seq_item_gerado_w,
		coalesce(qt_item_w,0),
		0,
		0,
		cd_motivo_glosa_w,
		cd_setor_responsavel_w,
		0,
		vl_glosa_informada_p,
		vl_glosa_informada_p,
		vl_saldo_w);

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_item_lote_hist (nr_seq_ret_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_propaci_p bigint, nr_seq_matpaci_p bigint, nm_usuario_p text, vl_glosa_informada_p bigint, qt_item_glosa_p bigint) FROM PUBLIC;

