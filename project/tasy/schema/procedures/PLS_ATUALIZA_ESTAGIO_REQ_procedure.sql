-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_estagio_req ( nr_seq_requisicao_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realizar a atualizacao do estagio da requisicao , apos as consistencias.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Performance.
-------------------------------------------------------------------------------------------------------------------

Referencias:
	PLS_ATUALIZAR_REQ_LIBERADA
	PLS_ATUALIZA_SITUACAO_COBRANCA
	PLS_CANCELAR_ITEM_JUST_WEB
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_tipo_intercambio_w		varchar(10);
ie_tipo_processo_w		varchar(4);
ie_envia_scs_benef_repass_w	varchar(2);
ie_tipo_guia_w			varchar(2);
ie_req_glosada_w		varchar(1);
ie_proc_glosado_w		varchar(1);
ie_mat_glosado_w		varchar(1);
ie_define_se_gera_analise_w	varchar(1);
ie_gerar_analise_w		varchar(1);
ie_tipo_gat_w			varchar(1);
ie_estagio_w			bigint	:= 2;
nr_seq_segurado_w		bigint;
qt_mat_auditoria_w		bigint;
qt_proc_liberado_w		bigint;
qt_mat_liberado_w		bigint;
qt_req_auditoria_w		bigint;
qt_itens_liberados_w		bigint;
qt_req_lib_analise_w		bigint;
qt_req_proc_w			bigint	:= 0;
qt_req_mat_w			bigint	:= 0;
qt_req_proc_neg_w		bigint	:= 0;
qt_req_mat_neg_w		bigint	:= 0;
qt_req_proc_aud_w		bigint	:= 0;
qt_req_mat_aud_w		bigint	:= 0;
cd_estabelecimento_w		smallint;
dt_requisicao_w			timestamp;
dt_fim_processo_req_w		timestamp;
qt_dia_solicitado_w		smallint;
qt_dia_autorizado_w		smallint;

qt_ocor_req_proc_auditoria_w	bigint;
qt_ocor_req_mat_auditoria_w	bigint;
qt_ocor_cabecalho_auditoria_w	bigint;

nr_seq_atend_pls_w		pls_atendimento.nr_sequencia%type;
nr_seq_evento_atend_w		pls_atendimento_evento.nr_sequencia%type;
dt_fim_evento_w			pls_atendimento_evento.dt_fim_evento%type;

nr_seq_item_tiss_w		pls_requisicao_proc.nr_seq_item_tiss%type := 0;

C01 CURSOR(nr_seq_requisicao_pc bigint) FOR
	SELECT	a.nr_seq_proc
	from	pls_ocorrencia		b,
		pls_ocorrencia_benef	a
	where	a.nr_seq_requisicao	= nr_seq_requisicao_pc
	and	a.nr_seq_ocorrencia	= b.nr_sequencia
	and	b.ie_auditoria 		= 'S'
	and	exists (	SELECT	1
		from	pls_requisicao_proc x
		where	x.nr_sequencia	= a.nr_seq_proc
		and	x.nr_seq_requisicao	= a.nr_seq_requisicao)
	and	not exists (	select	1
			from	pls_auditoria y
			where	y.nr_seq_requisicao	= nr_seq_requisicao_pc
			and	(y.dt_liberacao IS NOT NULL AND y.dt_liberacao::text <> ''));

C02 CURSOR(nr_seq_requisicao_pc bigint) FOR
	SELECT	a.nr_seq_mat
	from	pls_ocorrencia		b,
		pls_ocorrencia_benef	a
	where	a.nr_seq_requisicao	= nr_seq_requisicao_pc
	and	a.nr_seq_ocorrencia	= b.nr_sequencia
	and	b.ie_auditoria 		= 'S'
	and	exists (	SELECT	1
			from	pls_requisicao_mat x
			where	x.nr_sequencia	= a.nr_seq_mat
			and	x.nr_seq_requisicao	= a.nr_seq_requisicao)
	and	not exists (	select	1
				from	pls_auditoria y
				where	y.nr_seq_requisicao	= nr_seq_requisicao_pc
				and	(y.dt_liberacao IS NOT NULL AND y.dt_liberacao::text <> ''));

BEGIN
select 	cd_estabelecimento,
	ie_tipo_processo,
	ie_tipo_intercambio,
	ie_tipo_gat,
	nr_seq_segurado,
	dt_requisicao,
	ie_tipo_guia,
	qt_dia_solicitado
into STRICT	cd_estabelecimento_w,
	ie_tipo_processo_w,
	ie_tipo_intercambio_w,
	ie_tipo_gat_w,
	nr_seq_segurado_w,
	dt_requisicao_w,
	ie_tipo_guia_w,
	qt_dia_solicitado_w
from	pls_requisicao
where	nr_sequencia	= nr_seq_requisicao_p;

ie_define_se_gera_analise_w	:= pls_obter_define_gera_analise(cd_estabelecimento_w, 'R');
qt_req_auditoria_w		:= pls_obter_se_req_auditoria(nr_seq_requisicao_p, '');

ie_req_glosada_w		:= pls_obter_se_requisicao_glosa(nr_seq_requisicao_p, 'R');
ie_proc_glosado_w		:= pls_obter_se_requisicao_glosa(nr_seq_requisicao_p, 'P');
ie_mat_glosado_w		:= pls_obter_se_requisicao_glosa(nr_seq_requisicao_p, 'M');

if (ie_define_se_gera_analise_w = 'N') then
	ie_gerar_analise_w	:= pls_obter_se_gerar_analise(nr_seq_requisicao_p,  null, 0);

	if (ie_gerar_analise_w = 'N') then
		qt_req_auditoria_w := 0;
	elsif (ie_gerar_analise_w = 'S') and /*((ie_proc_glosado_w	= 'S') or (ie_mat_glosado_w	= 'S') or*/
		(ie_req_glosada_w = 'S') then
		qt_req_auditoria_w := 0;
	end if;
end if;

if (qt_req_auditoria_w <> 0) then
	ie_estagio_w	:= 4;			-- requisicao em "Auditoria"

	-- Verificar se existe procedimentos em auditoria
	qt_ocor_req_proc_auditoria_w	:= pls_obter_se_req_auditoria(nr_seq_requisicao_p, 'P');

	if (qt_ocor_req_proc_auditoria_w > 0) then
		for r_C01_w in C01(nr_seq_requisicao_p) loop
		begin
			nr_seq_item_tiss_w := nr_seq_item_tiss_w + 1;
			if (pls_obter_se_gerar_analise(nr_seq_requisicao_p,  r_C01_w.nr_seq_proc, 5) = 'S') then
				update	pls_requisicao_proc
				set	ie_status	= 'A',
					qt_procedimento	= 0,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp(),
					nr_seq_item_tiss = nr_seq_item_tiss_w
				where	nr_seq_requisicao	= nr_seq_requisicao_p
				and	nr_sequencia		= r_C01_w.nr_seq_proc;
			else
				update	pls_requisicao_proc
				set		nr_seq_item_tiss = nr_seq_item_tiss_w
				where	nr_seq_requisicao	= nr_seq_requisicao_p
				and		nr_sequencia		= r_C01_w.nr_seq_proc;
			end if;
		end;
		end loop;
	end if;

	-- Verificar se existe materiais em auditoria
	qt_ocor_req_mat_auditoria_w := pls_obter_se_req_auditoria(nr_seq_requisicao_p, 'M');

	if (qt_ocor_req_mat_auditoria_w > 0) then
		for r_C02_w in C02(nr_seq_requisicao_p) loop
		begin
			nr_seq_item_tiss_w := nr_seq_item_tiss_w + 1;
			if (pls_obter_se_gerar_analise(nr_seq_requisicao_p, r_C02_w.nr_seq_mat, 6) = 'S') then
				update	pls_requisicao_mat
				set	ie_status		= 'A',
					qt_material		= 0,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp(),
					nr_seq_item_tiss = nr_seq_item_tiss_w
				where	nr_seq_requisicao	= nr_seq_requisicao_p
				and	nr_sequencia		= r_C02_w.nr_seq_mat;
			else
				update	pls_requisicao_mat
				set		nr_seq_item_tiss = nr_seq_item_tiss_w
				where	nr_seq_requisicao	= nr_seq_requisicao_p
				and		nr_sequencia		= r_C02_w.nr_seq_mat;
			end if;
		end;
		end loop;
	end if;

	qt_ocor_cabecalho_auditoria_w := pls_obter_se_req_auditoria(nr_seq_requisicao_p, 'C');

	if (qt_ocor_cabecalho_auditoria_w > 0) then
		-- Verificar se existe procedimentos na requisicao e se estes procedimentos nao estao negados.
		select	count(1)
		into STRICT	qt_req_proc_w
		from	pls_requisicao_proc
		where	nr_seq_requisicao	= nr_seq_requisicao_p;

		select	count(1)
		into STRICT	qt_req_proc_neg_w
		from	pls_requisicao_proc
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and	ie_status		= 'N';

		--  Caso os procedimentos nao estejam todos negados, e colocado todos eles em auditoria, quando a ocorrencia e gerada para o cabecalho.
		update	pls_requisicao_proc
		set	ie_status		= 'A',
			qt_procedimento		= 0,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and	exists (	SELECT	1
				from	pls_ocorrencia_benef	x
				where	x.nr_seq_requisicao	= nr_seq_requisicao_p
				and	coalesce(x.nr_seq_proc::text, '') = ''
				and	coalesce(x.nr_seq_mat::text, '') = '')
		and	ie_status	<> 'N'
		and	qt_req_proc_w	<> qt_req_proc_neg_w;

		-- Verificar se existe materiais na requisicao e se estes materiais nao estao negados.
		select	count(1)
		into STRICT	qt_req_mat_w
		from	pls_requisicao_mat
		where	nr_seq_requisicao	= nr_seq_requisicao_p;

		select	count(1)
		into STRICT	qt_req_mat_neg_w
		from	pls_requisicao_mat
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and	ie_status		= 'N';

		--  Caso os materiais nao estejam todos negados, e colocado todos eles em auditoria, quando a ocorrencia e gerada para o cabecalho.
		update	pls_requisicao_mat
		set	ie_status		= 'A',
			qt_material		= 0,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and	exists (SELECT	1
				from	pls_ocorrencia_benef	x
				where	x.nr_seq_requisicao	= nr_seq_requisicao_p
				and	coalesce(x.nr_seq_mat::text, '') = ''
				and	coalesce(x.nr_seq_proc::text, '') = '')
		and	ie_status	<> 'N'
		and	qt_req_mat_w	<> qt_req_mat_neg_w;
	end if;

	select	count(1)
	into STRICT	qt_req_proc_aud_w
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	ie_status		= 'A';

	select	count(1)
	into STRICT	qt_req_mat_aud_w
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	ie_status		= 'A';

	if	((qt_req_proc_aud_w > 0) or (qt_req_mat_aud_w > 0)) then
		CALL pls_gerar_auditoria_requisicao(	nr_seq_requisicao_p,
						nm_usuario_p,
						'A');
	else
		qt_req_auditoria_w	:= 0;
	end if;
end if;

if (qt_req_auditoria_w = 0) then
	select	count(1)
	into STRICT	qt_proc_liberado_w
	from	pls_requisicao_proc
	where	nr_seq_requisicao 	= nr_seq_requisicao_p
	and	ie_status		in ('S', 'P', 'I');

	select	count(1)
	into STRICT	qt_mat_liberado_w
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	ie_status		in ('S', 'P', 'I');

	qt_itens_liberados_w	:= qt_proc_liberado_w + qt_mat_liberado_w;

	if (ie_req_glosada_w = 'N') and
		((ie_proc_glosado_w = 'S') or (ie_mat_glosado_w = 'S')) and (qt_itens_liberados_w <> 0) then
		ie_estagio_w	:= 6;	-- requisicao "Parcialmente Aprovada"
		dt_fim_processo_req_w	:= clock_timestamp();
		if (ie_tipo_guia_w in (1,8)) then
			qt_dia_autorizado_w	:= qt_dia_solicitado_w;
		else
			qt_dia_autorizado_w 	:= null;
		end if;
	else
		if (ie_req_glosada_w = 'N') and (ie_proc_glosado_w = 'N') and (ie_mat_glosado_w = 'N') and (qt_itens_liberados_w > 0) then
			ie_estagio_w	:= 2;	-- requisicao "Aprovada"
			dt_fim_processo_req_w	:= clock_timestamp();
			if (ie_tipo_guia_w in (1,8)) then
				qt_dia_autorizado_w	:= qt_dia_solicitado_w;
			else
				qt_dia_autorizado_w 	:= null;
			end if;
		elsif (ie_req_glosada_w = 'S') or
			((ie_proc_glosado_w = 'S') or (ie_mat_glosado_w = 'S') and (qt_itens_liberados_w = 0)) then
			ie_estagio_w	:= 7;		-- requisicao "Reprovada"
			dt_fim_processo_req_w	:= clock_timestamp();
			if (ie_req_glosada_w	= 'S') then
				update	pls_requisicao_proc
				set	ie_status		= 'N',
					qt_procedimento		= 0,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	nr_seq_requisicao	= nr_seq_requisicao_p
				and	ie_status 		<> 'C';

				update	pls_requisicao_mat
				set	ie_status		= 'N',
					qt_material		= 0,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	nr_seq_requisicao	= nr_seq_requisicao_p
				and	ie_status 		<> 'C';
			end if;
		end if;
	end if;
end if;

ie_envia_scs_benef_repass_w	:= pls_obter_se_env_scs_benef_rep(nr_seq_segurado_w);

if	((ie_tipo_processo_w = 'I' AND ie_tipo_intercambio_w = 'I') or (coalesce(ie_envia_scs_benef_repass_w,'N') = 'S')) and (coalesce(ie_tipo_gat_w, 'N') <> 'S') then
	select	count(1)
	into STRICT	qt_req_auditoria_w
	from	pls_auditoria	a
	where	a.nr_seq_requisicao	= nr_seq_requisicao_p
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	exists (	SELECT	1
			from	pls_requisicao	x
			where	x.nr_sequencia	= a.nr_seq_requisicao
			and	ie_estagio	= 5);

	if (qt_req_auditoria_w = 0) then
		if (ie_estagio_w	in (2,6)) then
			ie_estagio_w	:= 10;	-- requisicao "Aguardando envio intercambio"
			update	pls_requisicao_proc
			set	ie_status		= 'I',
				qt_solicitado		= coalesce(qt_procedimento,qt_solicitado),
				qt_procedimento		= 0,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_seq_requisicao	= nr_seq_requisicao_p
			and	ie_status		not in ('G','N','C');

			update	pls_requisicao_mat
			set	ie_status		= 'I',
				qt_solicitado		= coalesce(qt_material,qt_solicitado),
				qt_material		= 0,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_seq_requisicao	= nr_seq_requisicao_p
			and	ie_status		not in ('G','N','C');
		end if;
	end if;
elsif (ie_tipo_processo_w = 'I') and (ie_tipo_intercambio_w = 'E') then
	-- Tratamento realizado para quando for importado um pedido de autorizacao ou complemento somente com um procedimento e que este nao exista na base, negar a requisicao
	select	count(1)
	into STRICT	qt_req_proc_w
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

	select	count(1)
	into STRICT	qt_req_proc_neg_w
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and (coalesce(cd_procedimento::text, '') = ''
	or	ie_status		= 'N');

	select	count(1)
	into STRICT	qt_req_proc_aud_w
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	ie_status		= 'A';

	select	count(1)
	into STRICT	qt_req_mat_w
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

	select	count(1)
	into STRICT	qt_req_mat_neg_w
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and (coalesce(nr_seq_material::text, '') = ''
	or	ie_status		= 'N');

	select	count(1)
	into STRICT	qt_req_mat_aud_w
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	ie_status		= 'A';

	if (qt_req_proc_aud_w	> 0) or (qt_req_mat_aud_w	> 0) then
		ie_estagio_w	:= 4; --Auditoria
	elsif	(((qt_req_proc_w	= qt_req_proc_neg_w)	and (qt_req_mat_w	= 0)	and (qt_req_mat_neg_w	= 0))	or
		((qt_req_mat_w		= qt_req_mat_neg_w) 	and (qt_req_proc_w	= 0)	and (qt_req_proc_neg_w	= 0))	or
		(qt_req_mat_w		= qt_req_mat_neg_w AND qt_req_proc_w	= qt_req_proc_neg_w)) then
		ie_estagio_w	:= 7;		-- requisicao "Reprovada"
		update	pls_requisicao_proc
		set	ie_status		= 'N',
			qt_procedimento		= 0,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_seq_requisicao	= nr_seq_requisicao_p;

		update	pls_requisicao_mat
		set	ie_status		= 'N',
			qt_material		= 0,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_seq_requisicao	= nr_seq_requisicao_p;
	elsif	(qt_req_mat_neg_w	> 0 AND qt_req_proc_neg_w	= 0) or
		(qt_req_proc_neg_w	> 0 AND qt_req_mat_neg_w	= 0) then
		ie_estagio_w	:= 6;		-- requisicao "Parcialmente aprovada"
		if (ie_tipo_guia_w in (1,8)) then
			qt_dia_autorizado_w	:= qt_dia_solicitado_w;
		else
			qt_dia_autorizado_w 	:= null;
		end if;
	end if;
end if;


if (ie_estagio_w in (2,6)) then
	CALL pls_gerar_tratamento_benef(	nr_seq_requisicao_p,
					'R',
					null,
					nm_usuario_p);

	CALL pls_gerar_solic_entreg_mat_med(	nr_seq_requisicao_p,
					nm_usuario_p);

	CALL pls_gerar_validade_senha_req(	nr_seq_requisicao_p,
					nr_seq_segurado_w,
					dt_requisicao_w,
					ie_tipo_guia_w,
					nm_usuario_p);

	CALL pls_gerar_alerta_evento(3,
				null,
				nr_seq_requisicao_p,
				null,
				nm_usuario_p);
end if;

update	pls_requisicao
set	ie_estagio		= ie_estagio_w,
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p,
	ie_tipo_processo	= CASE WHEN ie_envia_scs_benef_repass_w='S' THEN  'I'  ELSE ie_tipo_processo END ,
	ie_tipo_intercambio	= CASE WHEN ie_envia_scs_benef_repass_w='S' THEN  'I'  ELSE ie_tipo_intercambio END ,
	dt_fim_processo_req	= dt_fim_processo_req_w,
	qt_dia_autorizado	= qt_dia_autorizado_w
where	nr_sequencia		= nr_seq_requisicao_p;

begin
select	nr_seq_atend_pls,
	nr_seq_evento_atend
into STRICT	nr_seq_atend_pls_w,
	nr_seq_evento_atend_w
from	pls_requisicao
where	nr_sequencia = nr_seq_requisicao_p;
exception
when others then
	nr_seq_atend_pls_w := null;
	nr_seq_evento_atend_w := null;
end;

begin
select	dt_fim_evento
into STRICT	dt_fim_evento_w
from	pls_atendimento_evento
where	nr_sequencia = nr_seq_evento_atend_w;
exception
when others then
	dt_fim_evento_w := null;
end;

if (ie_estagio_w in (2,3,5,6,7,9,10)) and (nr_seq_atend_pls_w IS NOT NULL AND nr_seq_atend_pls_w::text <> '') and (dt_fim_evento_w IS NOT NULL AND dt_fim_evento_w::text <> '') then
	CALL pls_finalizar_atendimento(	nr_seq_atend_pls_w,
					nr_seq_evento_atend_w,
					null,
					null,
					nm_usuario_p);
end if;

if (ie_tipo_processo_w <> 'P') then
	CALL pls_gerar_alerta_evento(8,
				null,
				nr_seq_requisicao_p,
				null,
				nm_usuario_p);
end if;

begin
CALL Alterar_status_regulacao(null,ie_estagio_w,null,null,null,null,nr_seq_requisicao_p,'N');
exception
when others then
	dt_fim_evento_w := null;
end;

if (ie_estagio_w = 7) then
	CALL pls_gerar_regra_notifi_neg(nr_seq_requisicao_p, cd_estabelecimento_w, nm_usuario_p);
end if;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_estagio_req ( nr_seq_requisicao_p bigint, nm_usuario_p text) FROM PUBLIC;

