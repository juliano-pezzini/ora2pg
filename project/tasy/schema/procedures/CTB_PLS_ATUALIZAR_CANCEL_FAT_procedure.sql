-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_cancel_fat ( nr_seq_lote_p bigint, nr_seq_fatura_proc_p bigint, nr_seq_fatura_mat_p bigint, nr_seq_atualizacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_classificacao_credito_w	varchar(255);
cd_classificacao_debito_w	varchar(255);
cd_conta_credito_w		varchar(20);
cd_conta_debito_w		varchar(20);
ie_preco_w			varchar(2);
ie_tipo_segurado_w		varchar(2);
ie_regulamentacao_w		varchar(2);
ie_tipo_contratacao_w		varchar(2);
ie_segmentacao_w		varchar(2);
nr_seq_plano_w			bigint;
dt_referencia_w			timestamp;
nr_seq_esquema_w		bigint;
cd_historico_padrao_w		bigint;
cd_historico_baixa_w		bigint;
cd_historico_estorno_w		bigint;
ds_erro_w			varchar(4000);
nr_seq_contrato_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_conta_fat_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_grupo_ans_w		bigint;
nr_seq_grupo_ans_ww		bigint;
nr_seq_grupo_superior_w		bigint;
ie_classif_grupo_w		varchar(5);
ie_classif_grupo_ww		varchar(5);
ie_tipo_relacao_w		varchar(2);
nr_seq_tipo_atendimento_w	bigint;
cd_medico_executor_w		varchar(10);
ie_regime_internacao_w		varchar(1);
nr_seq_conselho_w		bigint;
ie_tipo_guia_w			varchar(2);
ie_ato_cooperado_w		varchar(5);
ie_tipo_contrato_w		varchar(2);
ie_codificacao_w		varchar(2);
vl_fixo_w			varchar(30);
cd_conta_contabil_w		varchar(20);
ie_debito_credito_w		varchar(1);
ie_tipo_outorgante_w		varchar(3);
ie_tipo_operacao_w		varchar(3);
ds_mascara_w			varchar(30);
ie_proc_mat_w			varchar(1);
ie_tipo_vinculo_operadora_w	varchar(2);
ie_tipo_cobranca_w		varchar(3);
nr_seq_fat_proc_cancel_w	bigint;
nr_seq_fat_mat_cancel_w		bigint;
cd_classificacao_item_w		varchar(30);
ie_inconsistencia_w		varchar(255);
ie_tipo_despesa_w		varchar(255);

c_itens CURSOR FOR
	SELECT	'P', --ie_proc_mat
		a.nr_sequencia,
		h.ie_tipo_contratacao,
		h.ie_preco,
		h.ie_segmentacao,
		h.ie_regulamentacao,
		g.ie_tipo_segurado,
		j.dt_referencia,
		g.nr_seq_contrato,
		c.nr_sequencia nr_seq_conta,
		h.ie_tipo_operacao,
		h.nr_sequencia nr_seq_plano_seg,
		b.cd_procedimento,
		b.ie_origem_proced,
		b.ie_ato_cooperado,
		c.ie_tipo_guia,
		c.nr_seq_tipo_atendimento,
		c.cd_medico_executor,
		c.ie_regime_internacao,
		g.ie_tipo_vinculo_operadora,
		coalesce(a.ie_tipo_cobranca, d.ie_tipo_cobranca),
		a.nr_seq_fat_proc_cancel,
		null nr_seq_fat_mat_cancel,
		b.nr_seq_grupo_ans,
		b.ie_tipo_despesa
	from	pls_fatura_proc		a,
		pls_conta_proc		b,
		pls_conta		c,
		pls_fatura_conta	d,
		pls_fatura_evento	e,
		pls_fatura		f,
		pls_segurado		g,
		pls_plano		h,
		pls_cancel_rec_fatura	i,
		pls_cancel_rec_fat_lote	j
	where	b.nr_sequencia	= a.nr_seq_conta_proc
	and	d.nr_sequencia	= a.nr_seq_fatura_conta
	and	c.nr_sequencia	= b.nr_seq_conta
	and	c.nr_sequencia	= d.nr_seq_conta
	and	e.nr_sequencia	= d.nr_seq_fatura_evento
	and	f.nr_sequencia	= e.nr_seq_fatura
	and	g.nr_sequencia	= c.nr_seq_segurado
	and	h.nr_sequencia	= c.nr_seq_plano
	and	i.nr_sequencia	= f.nr_seq_cancel_fat
	and	j.nr_sequencia	= i.nr_seq_lote
	and	(c.nr_seq_plano IS NOT NULL AND c.nr_seq_plano::text <> '')
	and	j.nr_sequencia	= nr_seq_lote_p
	and	((a.nr_sequencia = nr_seq_fatura_proc_p) or (coalesce(nr_seq_fatura_proc_p::text, '') = ''))
	
union all

	SELECT	'P', --ie_proc_mat
		a.nr_sequencia,
		h.ie_tipo_contratacao,
		h.ie_preco,
		h.ie_segmentacao,
		h.ie_regulamentacao,
		g.ie_tipo_segurado,
		j.dt_referencia,
		g.nr_seq_contrato,
		c.nr_sequencia nr_seq_conta,
		h.ie_tipo_operacao,
		h.nr_sequencia nr_seq_plano_seg,
		b.cd_procedimento,
		b.ie_origem_proced,
		b.ie_ato_cooperado,
		c.ie_tipo_guia,
		c.nr_seq_tipo_atendimento,
		c.cd_medico_executor,
		c.ie_regime_internacao,
		g.ie_tipo_vinculo_operadora,
		coalesce(a.ie_tipo_cobranca, d.ie_tipo_cobranca),
		a.nr_seq_fat_proc_cancel,
		null nr_seq_fat_mat_cancel,
		b.nr_seq_grupo_ans,
		b.ie_tipo_despesa
	from	pls_fatura_proc		a,
		pls_conta_proc		b,
		pls_conta		c,
		pls_fatura_conta	d,
		pls_fatura_evento	e,
		pls_fatura		f,
		pls_segurado		g,
		pls_plano		h,
		pls_cancel_rec_fatura	i,
		pls_cancel_rec_fat_lote	j
	where	b.nr_sequencia	= a.nr_seq_conta_proc
	and	d.nr_sequencia	= a.nr_seq_fatura_conta
	and	c.nr_sequencia	= b.nr_seq_conta
	and	c.nr_sequencia	= d.nr_seq_conta
	and	e.nr_sequencia	= d.nr_seq_fatura_evento
	and	f.nr_sequencia	= e.nr_seq_fatura
	and	g.nr_sequencia	= c.nr_seq_segurado
	and	h.nr_sequencia	= g.nr_seq_plano
	and	i.nr_sequencia	= f.nr_seq_cancel_fat
	and	j.nr_sequencia	= i.nr_seq_lote
	and	coalesce(c.nr_seq_plano::text, '') = ''
	and	j.nr_sequencia	= nr_seq_lote_p
	and	((a.nr_sequencia = nr_seq_fatura_proc_p) or (coalesce(nr_seq_fatura_proc_p::text, '') = ''))
	
union all

	select	'M',
		a.nr_sequencia,
		h.ie_tipo_contratacao,
		h.ie_preco,
		h.ie_segmentacao,
		h.ie_regulamentacao,
		g.ie_tipo_segurado,
		j.dt_referencia,
		g.nr_seq_contrato,
		c.nr_sequencia nr_seq_conta,
		h.ie_tipo_operacao,
		h.nr_sequencia nr_seq_plano_seg,
		0,
		0,
		b.ie_ato_cooperado,
		c.ie_tipo_guia,
		c.nr_seq_tipo_atendimento,
		c.cd_medico_executor,
		c.ie_regime_internacao,
		g.ie_tipo_vinculo_operadora,
		coalesce(a.ie_tipo_cobranca, d.ie_tipo_cobranca),
		null nr_seq_fat_proc_cancel,
		a.nr_seq_fat_mat_cancel,
		b.nr_seq_grupo_ans,
		b.ie_tipo_despesa
	from	pls_fatura_mat		a,
		pls_conta_mat		b,
		pls_conta		c,
		pls_fatura_conta	d,
		pls_fatura_evento	e,
		pls_fatura		f,
		pls_segurado		g,
		pls_plano		h,
		pls_cancel_rec_fatura	i,
		pls_cancel_rec_fat_lote	j
	where	b.nr_sequencia	= a.nr_seq_conta_mat
	and	d.nr_sequencia	= a.nr_seq_fatura_conta
	and	c.nr_sequencia	= b.nr_seq_conta
	and	c.nr_sequencia	= d.nr_seq_conta
	and	e.nr_sequencia	= d.nr_seq_fatura_evento
	and	f.nr_sequencia	= e.nr_seq_fatura
	and	g.nr_sequencia	= c.nr_seq_segurado
	and	h.nr_sequencia	= c.nr_seq_plano
	and	i.nr_sequencia	= f.nr_seq_cancel_fat
	and	j.nr_sequencia	= i.nr_seq_lote
	and	(c.nr_seq_plano IS NOT NULL AND c.nr_seq_plano::text <> '')
	and	j.nr_sequencia	= nr_seq_lote_p
	and	((a.nr_sequencia = nr_seq_fatura_mat_p) or (coalesce(nr_seq_fatura_mat_p::text, '') = ''))
	
union all

	select	'M',
		a.nr_sequencia,
		h.ie_tipo_contratacao,
		h.ie_preco,
		h.ie_segmentacao,
		h.ie_regulamentacao,
		g.ie_tipo_segurado,
		j.dt_referencia,
		g.nr_seq_contrato,
		c.nr_sequencia nr_seq_conta,
		h.ie_tipo_operacao,
		h.nr_sequencia nr_seq_plano_seg,
		0,
		0,
		b.ie_ato_cooperado,
		c.ie_tipo_guia,
		c.nr_seq_tipo_atendimento,
		c.cd_medico_executor,
		c.ie_regime_internacao,
		g.ie_tipo_vinculo_operadora,
		coalesce(a.ie_tipo_cobranca, d.ie_tipo_cobranca),
		null nr_seq_fat_proc_cancel,
		a.nr_seq_fat_mat_cancel,
		b.nr_seq_grupo_ans,
		b.ie_tipo_despesa
	from	pls_fatura_mat		a,
		pls_conta_mat		b,
		pls_conta		c,
		pls_fatura_conta	d,
		pls_fatura_evento	e,
		pls_fatura		f,
		pls_segurado		g,
		pls_plano		h,
		pls_cancel_rec_fatura	i,
		pls_cancel_rec_fat_lote	j
	where	b.nr_sequencia	= a.nr_seq_conta_mat
	and	d.nr_sequencia	= a.nr_seq_fatura_conta
	and	c.nr_sequencia	= b.nr_seq_conta
	and	c.nr_sequencia	= d.nr_seq_conta
	and	e.nr_sequencia	= d.nr_seq_fatura_evento
	and	f.nr_sequencia	= e.nr_seq_fatura
	and	g.nr_sequencia	= c.nr_seq_segurado
	and	h.nr_sequencia	= g.nr_seq_plano
	and	i.nr_sequencia	= f.nr_seq_cancel_fat
	and	j.nr_sequencia	= i.nr_seq_lote
	and	coalesce(c.nr_seq_plano::text, '') = ''
	and	j.nr_sequencia	= nr_seq_lote_p
	and	((a.nr_sequencia = nr_seq_fatura_mat_p) or (coalesce(nr_seq_fatura_mat_p::text, '') = ''));

c_esquema CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_historico_padrao,
		a.cd_historico_baixa,
		a.cd_historico_estorno
	from	pls_esquema_contabil	a
	where	a.ie_tipo_regra		= 'FC'
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	dt_referencia_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_referencia_w)
	and	((exists (SELECT	1
				from	pls_grupo_seg_item	l,
					pls_grupo_segmentacao	k
				where	l.nr_seq_grupo		= k.nr_sequencia
				and	k.nr_sequencia		= a.nr_seq_grupo_segmentacao
				and	l.ie_segmentacao	= ie_segmentacao_w)) or (coalesce(a.nr_seq_grupo_segmentacao::text, '') = ''))
	and	((exists (select	1
			from	pls_contab_tipo_cobranca y,
				pls_contab_grupo_cobranca x
			where	y.nr_seq_grupo	= x.nr_sequencia
			and	x.nr_sequencia	= a.nr_seq_grupo_cobranca
			and	y.ie_tipo_cobranca = ie_tipo_cobranca_w)) or (coalesce(a.nr_seq_grupo_cobranca::text, '') = ''))
	and	((a.nr_seq_plano = nr_seq_plano_w) or (coalesce(a.nr_seq_plano::text, '') = ''))
	and	((a.ie_tipo_outorgante = ie_tipo_outorgante_w) or (coalesce(a.ie_tipo_outorgante::text, '') = ''))
	and	((a.ie_tipo_segurado = ie_tipo_segurado_w) or (coalesce(a.ie_tipo_segurado::text, '') = ''))
	and	((a.ie_tipo_plano = ie_tipo_operacao_w) or (coalesce(a.ie_tipo_plano::text, '') = ''))
	and	((a.ie_tipo_vinculo_operadora = ie_tipo_vinculo_operadora_w) or (coalesce(a.ie_tipo_vinculo_operadora::text, '') = ''))
	and	((a.nr_seq_contrato = nr_seq_contrato_w) or (coalesce(a.nr_seq_contrato::text, '') = ''))
	and	((a.ie_tipo_contratacao = ie_tipo_contratacao_w) or (coalesce(a.ie_tipo_contratacao::text, '') = ''))
	order by
		coalesce(a.ie_tipo_segurado,' '),
		coalesce(a.nr_seq_contrato,0),
		coalesce(a.ie_tipo_plano,' '),
		coalesce(a.nr_seq_plano,0),
		coalesce(a.ie_tipo_vinculo_operadora,0),
		coalesce(a.ie_tipo_contratacao,' '),
		coalesce(a.ie_tipo_outorgante,' '),
		coalesce(a.dt_inicio_vigencia,clock_timestamp());

c_segmentacao CURSOR FOR
	SELECT	ie_codificacao,
		vl_fixo,
		cd_conta_contabil,
		ie_debito_credito,
		ds_mascara
	from	pls_esquema_contabil_seg
	where	nr_seq_regra_esquema = nr_seq_esquema_w
	order by
		ie_debito_credito,
		nr_seq_apresentacao;


BEGIN
select	max(ie_tipo_outorgante)
into STRICT	ie_tipo_outorgante_w
from	pls_outorgante
where	cd_estabelecimento	= cd_estabelecimento_p;

open c_itens;
loop
fetch c_itens into
	ie_proc_mat_w,
	nr_seq_conta_fat_w,
	ie_tipo_contratacao_w,
	ie_preco_w,
	ie_segmentacao_w,
	ie_regulamentacao_w,
	ie_tipo_segurado_w,
	dt_referencia_w,
	nr_seq_contrato_w,
	nr_seq_conta_w,
	ie_tipo_operacao_w,
	nr_seq_plano_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_ato_cooperado_w,
	ie_tipo_guia_w,
	nr_seq_tipo_atendimento_w,
	cd_medico_executor_w,
	ie_regime_internacao_w,
	ie_tipo_vinculo_operadora_w,
	ie_tipo_cobranca_w,
	nr_seq_fat_proc_cancel_w,
	nr_seq_fat_mat_cancel_w,
	nr_seq_grupo_ans_w,
	ie_tipo_despesa_w;
EXIT WHEN NOT FOUND; /* apply on c_itens */
	begin
	nr_seq_esquema_w		:= null;

	begin
	select	CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN 'PF'  ELSE 'PJ' END
	into STRICT	ie_tipo_contrato_w
	from	pls_contrato
	where	nr_sequencia	= nr_seq_contrato_w;
	exception
	when others then
		ie_tipo_contrato_w	:= null;
	end;

	open c_esquema;
	loop
	fetch c_esquema into
		nr_seq_esquema_w,
		cd_historico_padrao_w,
		cd_historico_baixa_w,
		cd_historico_estorno_w;
	EXIT WHEN NOT FOUND; /* apply on c_esquema */
	end loop;
	close c_esquema;

	cd_conta_credito_w		:= null;
	cd_conta_debito_w		:= null;
	--nr_seq_grupo_ans_w		:= null;
	cd_classificacao_credito_w	:= null;
	cd_classificacao_debito_w	:= null;

	/* 5 - Grupo ANS */

	/*
	if	(cd_medico_executor_w is not null) then
		select	max(nr_seq_conselho)
		into	nr_seq_conselho_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_medico_executor_w
		and	rownum			<= 1;
	end if;

	if	(nvl(nr_seq_grupo_ans_w,0) = 0) then
		select	pls_obter_grupo_ans(	cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_conselho_w,
						nr_seq_tipo_atendimento_w,
						ie_tipo_guia_w,
						ie_regime_internacao_w,
						ie_tipo_despesa_w,
						'G',
						nvl(cd_estabelecimento_p,0))
		into	nr_seq_grupo_ans_w
		from	dual;
	end if;
	*/
	if (coalesce(nr_seq_grupo_ans_w,0) > 0) then
		select	max(nr_seq_grupo_superior)
		into STRICT	nr_seq_grupo_superior_w
		from	ans_grupo_despesa
		where	nr_sequencia	= nr_seq_grupo_ans_w;

		select	max(ie_tipo_grupo_ans)
		into STRICT	nr_seq_grupo_superior_w
		from	ans_grupo_despesa
		where	nr_sequencia	= nr_seq_grupo_superior_w;
	end if;

	if (coalesce(nr_seq_grupo_superior_w,0) = 0) then
		select	max(ie_tipo_grupo_ans)
		into STRICT	nr_seq_grupo_ans_ww
		from	ans_grupo_despesa
		where	nr_sequencia	= nr_seq_grupo_ans_w;
	else
		nr_seq_grupo_ans_ww	:= nr_seq_grupo_superior_w;
	end if;

	if (nr_seq_grupo_ans_ww = 10) then /* 1 - Consultas */
		ie_classif_grupo_w	:= '1';
		ie_classif_grupo_ww	:= '0';
	elsif (nr_seq_grupo_ans_ww = 20) then /* 49 - Exames */
		ie_classif_grupo_w	:= '2';
		ie_classif_grupo_ww	:= '0';
	elsif (nr_seq_grupo_ans_ww = 30) then /* 51 - Terapias */
		ie_classif_grupo_w	:= '3';
		ie_classif_grupo_ww	:= '0';
	elsif (nr_seq_grupo_ans_ww = 41) then /* 7 - Internação - Honorário médico */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '1';
	elsif (nr_seq_grupo_ans_ww = 42) then /* 8 - Internação - Exames */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '2';
	elsif (nr_seq_grupo_ans_ww = 43) then /* 9 - Internação - Terapias*/
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '3';
	elsif (nr_seq_grupo_ans_ww = 44) then /* 10 - Internação - Materiais médicos */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '4';
	elsif (nr_seq_grupo_ans_ww = 45) then /* 11 - Internação - Medicamentos */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '5';
	elsif (nr_seq_grupo_ans_ww = 49) then /* 12 - Internação - Outras despesas */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '9';
	elsif (nr_seq_grupo_ans_ww = 50) then /* 6 - Outros atendimentos - Ambulatoriais */
		ie_classif_grupo_w	:= '5';
		ie_classif_grupo_ww	:= '0';
	elsif (nr_seq_grupo_ans_ww = 60) then /* 16 - Demais despesas assistenciais */
		ie_classif_grupo_w	:= '6';
		ie_classif_grupo_ww	:= '0';
	end if;

	select	max(c.ie_tipo_relacao)
	into STRICT	ie_tipo_relacao_w
	from	pls_conta		a,
		pls_protocolo_conta	b,
		pls_prestador		c
	where	a.nr_seq_protocolo	= b.nr_sequencia
	and	a.nr_seq_prestador_exec	= c.nr_sequencia
	and	a.nr_sequencia		= nr_seq_conta_w;

	open c_segmentacao;
	loop
	fetch c_segmentacao into
		ie_codificacao_w,
		vl_fixo_w,
		cd_conta_contabil_w,
		ie_debito_credito_w,
		ds_mascara_w;
	EXIT WHEN NOT FOUND; /* apply on c_segmentacao */
		begin
		cd_classificacao_item_w	:= null;

		if (ie_debito_credito_w = 'C') then /* Classificação CRÉDITO */
			if (ie_codificacao_w = 'CR') then /* Código reduzido */
				select	cd_classificacao_atual
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_credito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'FX') then /* Fixo */
				cd_classificacao_item_w	:= vl_fixo_w;
			elsif (ie_codificacao_w = 'MC') then
				if (ie_proc_mat_w = 'P') then
					select	max(cd_conta_credito)
					into STRICT	cd_conta_credito_w
					from	pls_fatura_proc
					where	nr_sequencia	= nr_seq_fat_proc_cancel_w;
				elsif (ie_proc_mat_w = 'M') then
					select	max(cd_conta_credito)
					into STRICT	cd_conta_credito_w
					from	pls_fatura_mat
					where	nr_sequencia	= nr_seq_fat_mat_cancel_w;
				end if;

				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_credito_w;
			elsif (ie_codificacao_w = 'MD') then
				if (ie_proc_mat_w = 'P') then
					select	max(cd_conta_debito)
					into STRICT	cd_conta_credito_w
					from	pls_fatura_proc
					where	nr_sequencia	= nr_seq_fat_proc_cancel_w;
				elsif (ie_proc_mat_w = 'M') then
					select	max(cd_conta_debito)
					into STRICT	cd_conta_credito_w
					from	pls_fatura_mat
					where	nr_sequencia	= nr_seq_fat_mat_cancel_w;
				end if;

				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_credito_w;
			elsif (ie_codificacao_w = 'GA') then /* Grupo ANS */
				if (ie_classif_grupo_w IS NOT NULL AND ie_classif_grupo_w::text <> '') then
					cd_classificacao_item_w	:= ie_classif_grupo_w;
				else
					cd_classificacao_item_w	:= 'GA';
				end if;
			elsif (ie_codificacao_w = 'FP') then /* Formação de Preço */
				if (ie_tipo_segurado_w = 'A') then
					cd_classificacao_item_w	:= '9';
				else
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_formacao_preco(ie_preco_w);
				end if;
			elsif (ie_codificacao_w = 'R') then /* Regulamentação */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_regulamentacao(ie_regulamentacao_w);
			elsif (ie_codificacao_w = 'TC') then /* Tipo de contratação */
				if (ie_tipo_contratacao_w in ('I','CE','CA')) then
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_contratacao(ie_tipo_contratacao_w);
				else
					cd_classificacao_item_w	:= 'TC';
				end if;
			elsif (ie_codificacao_w = 'TP') then /* Tipo de Contrato (Pessoa física ou Júrídica) */
				if (ie_tipo_contrato_w in ('PF','PJ')) then
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_pessoa_contrato(ie_tipo_contrato_w);
				else
					cd_classificacao_item_w	:= 'TP';
				end if;
			elsif (ie_codificacao_w = 'S') then /* Segmentação */
				cd_classificacao_item_w	:= lpad(ie_segmentacao_w,2,'0');
			elsif (ie_codificacao_w = 'TR') then /* Tipo de relação com a OPS */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
			elsif (ie_codificacao_w = 'TA') then /* Tipo de ato cooperado */
				if (ie_ato_cooperado_w in ('1','2','3')) then
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_ato_cooperado(ie_ato_cooperado_w);
				else
					cd_classificacao_item_w	:= 'A';
				end if;
			elsif (ie_codificacao_w = 'CG') then /* Complemento grupo ANS */
				if (ie_classif_grupo_ww IS NOT NULL AND ie_classif_grupo_ww::text <> '') then
					cd_classificacao_item_w	:= ie_classif_grupo_ww;
				else
					cd_classificacao_item_w	:= 'CG';
				end if;
			elsif (ie_codificacao_w = 'RC') then /* Tipo de contratação / Regulamentação */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_contratacao_regulamentacao(ie_tipo_contratacao_w,ie_regulamentacao_w);
			end if;

			if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
				if (ds_mascara_w = '00') then
					cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
				elsif (ds_mascara_w = '0.0') then
					cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
				elsif (ds_mascara_w = '0_') then
					cd_classificacao_item_w	:= cd_classificacao_item_w;
				else
					cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
				end if;

				cd_classificacao_credito_w	:= cd_classificacao_credito_w || cd_classificacao_item_w;
			end if;
		elsif (ie_debito_credito_w = 'D') then /* Classificação DÉBITO */
			if (ie_codificacao_w = 'CR') then /* Código reduzido */
				select	cd_classificacao_atual
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_debito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'FX') then /* Fixo */
				cd_classificacao_item_w	:= vl_fixo_w;
			elsif (ie_codificacao_w = 'MC') then
				if (ie_proc_mat_w = 'P') then
					select	max(cd_conta_credito)
					into STRICT	cd_conta_debito_w
					from	pls_fatura_proc
					where	nr_sequencia	= nr_seq_fat_proc_cancel_w;
				elsif (ie_proc_mat_w = 'M') then
					select	max(cd_conta_credito)
					into STRICT	cd_conta_debito_w
					from	pls_fatura_mat
					where	nr_sequencia	= nr_seq_fat_mat_cancel_w;
				end if;

				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_debito_w;
			elsif (ie_codificacao_w = 'MD') then
				if (ie_proc_mat_w = 'P') then
					select	max(cd_conta_debito)
					into STRICT	cd_conta_debito_w
					from	pls_fatura_proc
					where	nr_sequencia	= nr_seq_fat_proc_cancel_w;
				elsif (ie_proc_mat_w = 'M') then
					select	max(cd_conta_debito)
					into STRICT	cd_conta_debito_w
					from	pls_fatura_mat
					where	nr_sequencia	= nr_seq_fat_mat_cancel_w;
				end if;

				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_debito_w;
			elsif (ie_codificacao_w = 'GA') then /* Grupo ANS */
				if (ie_classif_grupo_w IS NOT NULL AND ie_classif_grupo_w::text <> '') then
					cd_classificacao_item_w	:= ie_classif_grupo_w;
				else
					cd_classificacao_item_w	:= 'GA';
				end if;
			elsif (ie_codificacao_w = 'FP') then /* Formação de Preço */
				if (ie_tipo_segurado_w = 'A') then
					cd_classificacao_item_w	:= '9';
				else
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_formacao_preco(ie_preco_w);
				end if;
			elsif (ie_codificacao_w = 'R') then /* Regulamentação */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_regulamentacao(ie_regulamentacao_w);
			elsif (ie_codificacao_w = 'TC') then /* Tipo de contratação */
				if (ie_tipo_contratacao_w in ('I','CE','CA')) then
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_contratacao(ie_tipo_contratacao_w);
				else
					cd_classificacao_item_w	:= 'TC';
				end if;
			elsif (ie_codificacao_w = 'S') then /* Segmentação */
				cd_classificacao_item_w	:= lpad(ie_segmentacao_w,2,'0');
			elsif (ie_codificacao_w = 'TP') then /* Tipo de Contrato (Pessoa física ou Júrídica) */
				if (ie_tipo_contrato_w in ('PF','PJ')) then
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_pessoa_contrato(ie_tipo_contrato_w);
				else
					cd_classificacao_item_w	:= 'TP';
				end if;
			elsif (ie_codificacao_w = 'TR') then /* Tipo de relação com a OPS */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
			elsif (ie_codificacao_w = 'TA') then /* Tipo de ato cooperado */
				if (ie_ato_cooperado_w in ('1','2','3')) then
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_ato_cooperado(ie_ato_cooperado_w);
				else
					cd_classificacao_item_w	:= 'A';
				end if;
			elsif (ie_codificacao_w = 'CG') then /* Complemento grupo ANS */
				if (ie_classif_grupo_ww IS NOT NULL AND ie_classif_grupo_ww::text <> '') then
					cd_classificacao_item_w	:= ie_classif_grupo_ww;
				else
					cd_classificacao_item_w	:= 'CG';
				end if;
			elsif (ie_codificacao_w = 'RC') then /* Tipo de contratação / Regulamentação */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_contratacao_regulamentacao(ie_tipo_contratacao_w,ie_regulamentacao_w);
			end if;

			if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
				if (ds_mascara_w = '00') then
					cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
				elsif (ds_mascara_w = '0.0') then
					cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
				elsif (ds_mascara_w = '0_') then
					cd_classificacao_item_w	:= cd_classificacao_item_w;
				else
					cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
				end if;

				cd_classificacao_debito_w	:= cd_classificacao_debito_w || cd_classificacao_item_w;
			end if;
		end if;
		end;
	end loop;
	close c_segmentacao;

	/* Remover o último ponto da classificação */

	if (substr(cd_classificacao_credito_w,length(cd_classificacao_credito_w),length(cd_classificacao_credito_w)) = '.') then
		cd_classificacao_credito_w	:= substr(cd_classificacao_credito_w,1,length(cd_classificacao_credito_w)-1);
	end if;

	if (substr(cd_classificacao_debito_w,length(cd_classificacao_debito_w),length(cd_classificacao_debito_w)) = '.') then
		cd_classificacao_debito_w	:= substr(cd_classificacao_debito_w,1,length(cd_classificacao_debito_w)-1);
	end if;

	if (coalesce(cd_conta_credito_w::text, '') = '') then
		cd_conta_credito_w	:= ctb_obter_conta_classif(cd_classificacao_credito_w,dt_referencia_w,cd_estabelecimento_p);
	end if;

	if (coalesce(cd_conta_debito_w::text, '') = '') then
		cd_conta_debito_w	:= ctb_obter_conta_classif(cd_classificacao_debito_w,dt_referencia_w,cd_estabelecimento_p);
	end if;

	if (ie_proc_mat_w = 'P') then
		if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
			if (coalesce(nr_seq_esquema_w::text, '') = '') then
				CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p, 1, null, null, null, null, null, null, nr_seq_conta_fat_w, null, null, null, null, null,null, null, null, nm_usuario_p, nr_seq_esquema_w);
			elsif	((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) then
				CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p, 2, null, null, null, null, null, null, nr_seq_conta_fat_w, null, null, null, null, null,null, null, null, nm_usuario_p, nr_seq_esquema_w);
			end if;
		end if;

		update	pls_fatura_proc
		set	cd_conta_credito	= cd_conta_credito_w,
			cd_conta_debito		= cd_conta_debito_w,
			cd_historico		= cd_historico_padrao_w,
			cd_historico_baixa	= cd_historico_baixa_w,
			cd_historico_estorno	= cd_historico_estorno_w,
			cd_classif_cred		= cd_classificacao_credito_w,
			cd_classif_deb		= cd_classificacao_debito_w,
			nr_seq_esquema		= nr_seq_esquema_w
		where	nr_sequencia		= nr_seq_conta_fat_w;
	elsif (ie_proc_mat_w = 'M') then
		if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
			if (coalesce(nr_seq_esquema_w::text, '') = '') then
				CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p, 1, null, null, null, null, null, null, null, nr_seq_conta_fat_w, null, null, null, null,null, null, null, nm_usuario_p, nr_seq_esquema_w);
			elsif	((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) then
				CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p, 2, null, null, null, null, null, null, null, nr_seq_conta_fat_w, null, null, null, null,null, null, null, nm_usuario_p, nr_seq_esquema_w);
			end if;
		end if;

		update	pls_fatura_mat
		set	cd_conta_credito	= cd_conta_credito_w,
			cd_conta_debito		= cd_conta_debito_w,
			cd_historico		= cd_historico_padrao_w,
			cd_historico_baixa	= cd_historico_baixa_w,
			cd_historico_estorno	= cd_historico_estorno_w,
			cd_classif_cred		= cd_classificacao_credito_w,
			cd_classif_deb		= cd_classificacao_debito_w,
			nr_seq_esquema		= nr_seq_esquema_w
		where	nr_sequencia		= nr_seq_conta_fat_w;
	end if;
	end;
end loop;
close c_itens;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_cancel_fat ( nr_seq_lote_p bigint, nr_seq_fatura_proc_p bigint, nr_seq_fatura_mat_p bigint, nr_seq_atualizacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

