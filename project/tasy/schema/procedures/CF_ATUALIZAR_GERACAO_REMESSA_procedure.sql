-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cf_atualizar_geracao_remessa ( cd_empresa_p bigint, cd_estabelecimento_p bigint, cd_convenio_parametro_p bigint, cd_categoria_parametro_p text, cd_plano_convenio_p text, dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, nr_doc_convenio_p text, nr_interno_conta_p bigint, cd_pessoa_fisica_p text, cd_medico_executor_p text, nr_seq_proc_interno_p bigint, cd_grupo_proc_p bigint, cd_especialidade_p bigint, cd_area_procedimento_p bigint, ie_destino_remessa_p text, ie_opcao_data_p text, nm_usuario_p text, cd_recepcionista_p text) AS $body$
DECLARE

									 
									 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Locais de chamada direta: 
[ ] Objetos do dicionário [X] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
cd_pessoa_fisica_w		atendimento_paciente.cd_pessoa_fisica%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
nr_doc_convenio_w		procedimento_paciente.nr_doc_convenio%type;
nr_interno_conta_w		procedimento_paciente.nr_interno_conta%type;
dt_procedimento_w		procedimento_paciente.dt_procedimento%type;
nr_sequencia_w			procedimento_paciente.nr_sequencia%type;
nr_seq_exame_w			procedimento_paciente.nr_seq_exame%type;
cd_procedimento_w		procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w		procedimento_paciente.ie_origem_proced%type;
vl_procedimento_w		procedimento_paciente.vl_procedimento%type;
cd_senha_w			procedimento_paciente.cd_senha%type;
nr_seq_proc_interno_w		procedimento_paciente.nr_seq_proc_interno%type;
nr_seq_atepacu_w		procedimento_paciente.nr_seq_atepacu%type;
cd_setor_atendimento_w		procedimento_paciente.cd_setor_atendimento%type;
dt_entrada_unidade_w		procedimento_paciente.dt_entrada_unidade%type;
nm_pessoa_fisica_w		pessoa_fisica.nm_pessoa_fisica%type;
cd_estabelecimento_w		conta_paciente.cd_estabelecimento%type;			
nr_seq_status_fat_w		conta_paciente.nr_seq_status_fat%type;
nr_seq_status_mob_w		conta_paciente.nr_seq_status_mob%type;
nr_seq_protocolo_w		conta_paciente.nr_seq_protocolo%type;
cd_convenio_parametro_w		conta_paciente.cd_convenio_parametro%type;
nm_paciente_w			pessoa_fisica.nm_pessoa_fisica%type;
qt_altura_w			pessoa_fisica.qt_altura_cm%type;
qt_peso_w			pessoa_fisica.qt_peso%type;
cd_plano_convenio_w		atend_categoria_convenio.cd_plano_convenio%type;
cd_usuario_convenio_w		atend_categoria_convenio.cd_usuario_convenio%type;
ds_status_fat_w			cf_status_faturamento.ds_status_fat%type;
ds_status_mob_w			cf_status_mobilizacao.ds_status_mob%type;
ds_procedimento_w		procedimento.ds_procedimento%type;
ds_convenio_w			convenio.ds_convenio%type;
ds_plano_w			convenio_plano.ds_plano%type;
cd_empresa_w			estabelecimento.cd_empresa%type;
ie_insere_w 			varchar(1);
ds_estagio_w			varchar(120);
ds_classificacao_w		varchar(120);
qt_pendencia_total_w		bigint;
qt_pendencia_aberta_w		bigint;
nr_seq_regra_resp_w		bigint;
cd_recepcionista_w		varchar(10);
nm_usuario_atend_w		varchar(15);
nr_seq_regra_remessa_w		bigint;
nr_seq_status_fat_remessa_w	bigint;
nr_seq_status_mob_remessa_w	bigint;

-- LÊ OS PROCEDIMENTOS CONFORME OS FILTROS 
C01 CURSOR FOR 
	SELECT	a.nr_doc_convenio, 
		a.nr_interno_conta, 
		d.nr_atendimento, 
		a.dt_procedimento, 
		a.nr_seq_exame, 
		a.cd_procedimento, 
		a.ie_origem_proced,        
		coalesce(a.vl_procedimento, 0), 
		a.cd_senha, 
		d.cd_pessoa_fisica, 
		b.cd_estabelecimento, 
		b.nr_seq_status_fat, 
		b.nr_seq_status_mob, 
		b.nr_seq_protocolo, 
		b.cd_convenio_parametro, 
		a.nr_seq_proc_interno, 
		a.nr_seq_atepacu, 
		a.cd_setor_atendimento, 
		a.dt_entrada_unidade, 
		a.nr_sequencia, 
		d.nm_usuario_atend 
	from	estrutura_procedimento_v	c, 
		procedimento_paciente		a, 
		conta_paciente				b, 
		atendimento_paciente		d 
	where	( 
		(ie_opcao_data_p = 'H' and trunc(a.dt_procedimento,'dd') = trunc(clock_timestamp(),'dd')) or (ie_opcao_data_p = 'P' and a.dt_procedimento between trunc(to_date(dt_periodo_inicial_p),'dd') and fim_dia(to_date(dt_periodo_final_p))) or (ie_opcao_data_p = 'A' and a.dt_procedimento between to_date(clock_timestamp() - interval '360 days') and fim_dia(to_date(clock_timestamp()))) 
		)	 
	and	((coalesce(nr_seq_proc_interno_p::text, '') = '') or (a.nr_seq_proc_interno = nr_seq_proc_interno_p)) 
	and	((coalesce(cd_grupo_proc_p::text, '') = '') or (c.cd_grupo_proc = cd_grupo_proc_p)) 
	and	((coalesce(cd_especialidade_p::text, '') = '') or (c.cd_especialidade = cd_especialidade_p)) 
	and	((coalesce(cd_area_procedimento_p::text, '') = '') or (c.cd_area_procedimento = cd_area_procedimento_p)) 
	and	a.nr_interno_conta = b.nr_interno_conta 
	and	d.nr_atendimento  = b.nr_atendimento 
	and	c.cd_procedimento = a.cd_procedimento 
	and	c.ie_origem_proced = a.ie_origem_proced	 
	and	((coalesce(cd_convenio_parametro_p::text, '') = '') or (b.cd_convenio_parametro = cd_convenio_parametro_p)) 
	and	((coalesce(cd_categoria_parametro_p::text, '') = '') or (b.cd_categoria_parametro = cd_categoria_parametro_p)) 
	and	((coalesce(cd_pessoa_fisica_p::text, '') = '') or (d.cd_pessoa_fisica = cd_pessoa_fisica_p)) 
	and	((coalesce(nr_doc_convenio_p::text, '') = '') or (a.nr_doc_convenio = nr_doc_convenio_p)) 
	and	((coalesce(nr_interno_conta_p::text, '') = '') or (a.nr_interno_conta = nr_interno_conta_p))	 
	and	((coalesce(cd_medico_executor_p::text, '') = '') or (a.cd_medico_executor = cd_medico_executor_p)) 
	and	(a.nr_doc_convenio IS NOT NULL AND a.nr_doc_convenio::text <> '') 
	and	c.ie_classificacao = 1		 
	and  	b.nr_seq_status_fat = coalesce(nr_seq_status_fat_remessa_w, b.nr_seq_status_fat) 
	and  	b.nr_seq_status_mob = coalesce(nr_seq_status_mob_remessa_w, b.nr_seq_status_mob) 
	and 	(b.nr_seq_regra_fluxo IS NOT NULL AND b.nr_seq_regra_fluxo::text <> '') 
	and 	(b.nr_seq_status_mob IS NOT NULL AND b.nr_seq_status_mob::text <> '') 
	and 	(b.nr_seq_status_fat IS NOT NULL AND b.nr_seq_status_fat::text <> '') 
	order by a.nr_interno_conta;


BEGIN 
 
/* Deleta os registros do usuário */
 
delete	from w_cf_geracao_remessa 
where	nm_usuario = nm_usuario_p;
 
 
select 	max(nr_sequencia) 
into STRICT	nr_seq_regra_remessa_w 
from 	cf_regra_geracao_remessa 
where 	ie_destino_remessa = ie_destino_remessa_p;
 
select 	max(nr_seq_status_fat), 
	max(nr_seq_status_mob) 
into STRICT	nr_seq_status_fat_remessa_w, 
	nr_seq_status_mob_remessa_w 
from 	cf_regra_geracao_remessa 
where 	nr_sequencia = nr_seq_regra_remessa_w;
 
open C01;
loop 
fetch C01 into	 
	nr_doc_convenio_w, 
	nr_interno_conta_w, 
	nr_atendimento_w, 
	dt_procedimento_w, 
	nr_seq_exame_w, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	vl_procedimento_w, 
	cd_senha_w, 
	cd_pessoa_fisica_w, 
	cd_estabelecimento_w, 
	nr_seq_status_fat_w, 
	nr_seq_status_mob_w, 
	nr_seq_protocolo_w, 
	cd_convenio_parametro_w, 
	nr_seq_proc_interno_w, 
	nr_seq_atepacu_w, 
	cd_setor_atendimento_w, 
	dt_entrada_unidade_w, 
	nr_sequencia_w, 
	nm_usuario_atend_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		ie_insere_w 		:= 'S';
		ds_estagio_w		:= '';
		ds_classificacao_w	:= '';
		 
		select 	count(*), 
				sum(CASE WHEN coalesce(dt_fechamento::text, '') = '' THEN  1  ELSE 0 END ) 
		into STRICT	qt_pendencia_total_w, 
				qt_pendencia_aberta_w 
		from 	cta_pendencia 
		where 	nr_interno_conta = nr_interno_conta_w;		
		 
		if (qt_pendencia_total_w > 0) then 
 
					select 	coalesce(max(nr_seq_regra_resp),0) 
					into STRICT	nr_seq_regra_resp_w 
					from 	cta_pendencia 
					where 	nr_interno_conta = nr_interno_conta_w 
					and 	coalesce(dt_fechamento::text, '') = '';
			 
					select 		max(ds_regra) 
					into STRICT		ds_classificacao_w 
					from 		cta_regra_resp_pend 
					where 		nr_sequencia = nr_seq_regra_resp_w;
										 
					if (qt_pendencia_aberta_w > 0) then 
								 
								--ds_estagio_w		:= 'Pendência Ativa'; 
								ds_estagio_w		:= WHEB_MENSAGEM_PCK.get_texto(297981);
					else 
 
								--ds_estagio_w		:= 'Pendência Resolvida'; 
								ds_estagio_w		:= WHEB_MENSAGEM_PCK.get_texto(297982);
							 
					end if;
					 
		else 
					ds_estagio_w		:= '';
					ds_classificacao_w	:= '';
		end if;
		 
		 
		select		max(substr(obter_nome_pf(a.cd_pessoa_fisica),1,200)), 
				max(a.qt_altura_cm), 
				max(a.qt_peso) 
		into STRICT		nm_paciente_w, 
				qt_altura_w, 
				qt_peso_w 
		from		pessoa_fisica a 
		where		a.cd_pessoa_fisica = cd_pessoa_fisica_w;
				 
		select 		coalesce(max(cd_pessoa_fisica),'0') 
		into STRICT		cd_recepcionista_w 
		from 		usuario 
		where		nm_usuario = nm_usuario_atend_w;
		 
		 
		if (ie_insere_w = 'S') and 
			((cd_recepcionista_p IS NOT NULL AND cd_recepcionista_p::text <> '' AND cd_recepcionista_p = cd_recepcionista_w) or (coalesce(cd_recepcionista_p::text, '') = '')) then 
			ie_insere_w:= 'S';
		else 
			ie_insere_w:= 'N';
		end if;
		 
		 
		select		max(obter_dados_categ_conv(nr_atendimento_w, 'P')), 
				max(obter_dados_categ_conv(nr_atendimento_w, 'U')) 
		into STRICT		cd_plano_convenio_w, 
				cd_usuario_convenio_w 
		;
		 
		select		max(a.ds_plano) 
		into STRICT		ds_plano_w 
		from		convenio_plano a 
		where		a.cd_plano = cd_plano_convenio_w 
		and		a.cd_convenio = cd_convenio_parametro_w;
		 
		select		max(a.ds_status_fat) 
		into STRICT		ds_status_fat_w 
		from		cf_status_faturamento a 
		where		a.nr_sequencia = nr_seq_status_fat_w;
		 
		select		max(b.ds_status_mob) 
		into STRICT		ds_status_mob_w 
		from		cf_status_mobilizacao b 
		where		b.nr_sequencia = nr_seq_status_mob_w;
		 
		select		max(a.ds_procedimento) 
		into STRICT		ds_procedimento_w 
		from		procedimento a 
		where		a.cd_procedimento = cd_procedimento_w 
		and		a.ie_origem_proced = ie_origem_proced_w;
		 
		select		max(a.ds_convenio) 
		into STRICT		ds_convenio_w 
		from		convenio a 
		where		a.cd_convenio = cd_convenio_parametro_w;
		 
		if (ie_insere_w = 'S') and 
			((cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '' AND cd_estabelecimento_w = cd_estabelecimento_w) or (coalesce(cd_estabelecimento_p::text, '') = '')) then 
			ie_insere_w:= 'S';
		else 
			ie_insere_w:= 'N';
		end if;
						 
		select	max(cd_empresa) 
		into STRICT	cd_empresa_w 
		from	estabelecimento 
		where	cd_estabelecimento = cd_estabelecimento_w;
		 
		if (ie_insere_w = 'S') and 
			((cd_empresa_p IS NOT NULL AND cd_empresa_p::text <> '' AND cd_empresa_p = cd_empresa_w) or (coalesce(cd_empresa_p::text, '') = '')) then 
			ie_insere_w:= 'S';
		else 
			ie_insere_w:= 'N';
		end if;
		 
		if (ie_insere_w = 'S') and 
			((cd_plano_convenio_p IS NOT NULL AND cd_plano_convenio_p::text <> '' AND cd_plano_convenio_p = cd_plano_convenio_w) or (coalesce(cd_plano_convenio_p::text, '') = '')) then 
			ie_insere_w:= 'S';
		else 
			ie_insere_w:= 'N';
		end if;
		 
		if (ie_insere_w = 'S') then 
			insert	into w_cf_geracao_remessa(				nr_guia, 
											nr_interno_conta, 
											nr_seq_status_fat, 
											dt_atualizacao, 
											nm_usuario, 
											nr_seq_protocolo, 
											ds_status_fat, 
											ds_status_mob, 
											ds_classificacao, 
											nr_seq_status_mob,											 
											ds_estagio, 
											dt_procedimento, 
											cd_paciente, 
											nm_paciente, 
											qt_altura, 
											ds_procedimento, 
											ds_convenio, 
											qt_peso, 
											nr_seq_exame, 
											cd_procedimento, 
											ie_origem_proced, 
											vl_procedimento, 
											ds_plano, 
											cd_convenio, 
											cd_plano_convenio, 
											cd_senha, 
											cd_usuario_convenio,											 
											nr_seq_proc_interno, 
											nr_seq_atepacu, 
											cd_setor_atendimento, 
											dt_entrada_unidade, 
											nr_atendimento, 
											nr_seq_propaci, 
											nr_seq_regra_remessa) 
			values (	nr_doc_convenio_w, 
											nr_interno_conta_w, 
											nr_seq_status_fat_w, 
											clock_timestamp(), 
											nm_usuario_p, 
											nr_seq_protocolo_w, 
											ds_status_fat_w, 
											ds_status_mob_w, 
											ds_classificacao_w, 
											nr_seq_status_mob_w, 
											ds_estagio_w, 
											dt_procedimento_w, 
											cd_pessoa_fisica_w, 
											nm_paciente_w, 
											qt_altura_w, 
											ds_procedimento_w, 
											ds_convenio_w, 
											qt_peso_w, 
											nr_seq_exame_w, 
											cd_procedimento_w, 
											ie_origem_proced_w, 
											vl_procedimento_w, 
											ds_plano_w, 
											cd_convenio_parametro_w, 
											cd_plano_convenio_w, 
											cd_senha_w, 
											cd_usuario_convenio_w, 
											nr_seq_proc_interno_w, 
											nr_seq_atepacu_w, 
											cd_setor_atendimento_w, 
											dt_entrada_unidade_w, 
											nr_atendimento_w, 
											nr_sequencia_w, 
											nr_seq_regra_remessa_w);
		end if;
		end;
end loop;
close C01;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cf_atualizar_geracao_remessa ( cd_empresa_p bigint, cd_estabelecimento_p bigint, cd_convenio_parametro_p bigint, cd_categoria_parametro_p text, cd_plano_convenio_p text, dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, nr_doc_convenio_p text, nr_interno_conta_p bigint, cd_pessoa_fisica_p text, cd_medico_executor_p text, nr_seq_proc_interno_p bigint, cd_grupo_proc_p bigint, cd_especialidade_p bigint, cd_area_procedimento_p bigint, ie_destino_remessa_p text, ie_opcao_data_p text, nm_usuario_p text, cd_recepcionista_p text) FROM PUBLIC;

