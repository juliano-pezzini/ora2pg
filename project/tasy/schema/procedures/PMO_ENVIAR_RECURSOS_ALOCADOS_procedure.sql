-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pmo_enviar_recursos_alocados (nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_gerencia_w	bigint;
nm_pessoa_fisica_w	varchar(60);
cd_pessoa_fisica_w	varchar(10);
nr_seq_projeto_w	bigint;
qt_total_exec_w		bigint;
ds_titulo_w		varchar(80);
qt_realizado_w		bigint;
qt_recursos_w		bigint;
nr_seq_ordem_w		bigint;
ds_dano_breve_w		varchar(80);
qt_minuto_exec_w	double precision;
ds_gerencia_w		varchar(80);
ie_cronograma_w		varchar(10);
ds_dados_w		varchar(8000);
ds_email_w		varchar(200);
ds_enter_w       varchar(10)  := chr(13) || chr(10);

C01 CURSOR FOR 
	SELECT	distinct p.nr_seq_gerencia, 
		g.ds_gerencia, 
		substr(obter_compl_pf(g.cd_responsavel,2,'M'),1,200)||',' ds_email 
	from	proj_projeto p, 
		proj_cronograma c, 
		proj_cron_etapa b, 
		proj_cron_etapa_equipe a, 
		usuario u, 
		gerencia_wheb g 
	where	p.nr_sequencia = c.nr_seq_proj 
	and	c.nr_sequencia = b.nr_seq_cronograma 
	and	b.nr_sequencia = a.nr_seq_etapa_cron 
	and	clock_timestamp() between b.dt_inicio_prev and b.dt_fim_prev 
	and	u.cd_pessoa_fisica = a.cd_programador 
	and 	p.ie_status = 'E' 
	and 	p.ie_origem = 'D' 
	and 	coalesce(p.ie_nivel_projeto,0) <> '3' 
	and	p.nr_seq_estagio <> 17	 
	and	g.nr_sequencia = p.nr_seq_gerencia;
	
C02 CURSOR FOR 
	SELECT	distinct a.cd_programador, 
		substr(obter_nome_pf(a.cd_programador),1,60) nm_pessoa_fisica 
	from	proj_projeto p, 
		proj_cronograma c, 
		proj_cron_etapa b, 
		proj_cron_etapa_equipe a, 
		usuario u 
	where	p.nr_sequencia = c.nr_seq_proj 
	and	c.nr_sequencia = b.nr_seq_cronograma 
	and	b.nr_sequencia = a.nr_seq_etapa_cron 
	and	clock_timestamp() between b.dt_inicio_prev and b.dt_fim_prev 
	and	u.cd_pessoa_fisica = a.cd_programador 
	and	c.ie_situacao = 'A' 
	and 	p.ie_status = 'E' 
	and 	p.ie_origem = 'D' 
	and  	b.pr_etapa <> 100 
	and 	coalesce(p.ie_nivel_projeto,0) <> '3' 
	and	p.nr_seq_estagio <> 17 
	and	p.nr_seq_gerencia = nr_seq_gerencia_w 
	order by nm_pessoa_fisica;
	
C03 CURSOR FOR 
	SELECT	p.nr_sequencia, 
		substr(p.ds_titulo,1,40) ds_titulo 
	from	proj_projeto p, 
		proj_cronograma c, 
		proj_cron_etapa b, 
		proj_cron_etapa_equipe a, 
		usuario u 
	where	p.nr_sequencia = c.nr_seq_proj 
	and	c.nr_sequencia = b.nr_seq_cronograma 
	and	b.nr_sequencia = a.nr_seq_etapa_cron 
	and	clock_timestamp() between b.dt_inicio_prev and b.dt_fim_prev 
	and	u.cd_pessoa_fisica = a.cd_programador 
	and	p.nr_seq_gerencia = nr_seq_gerencia_w 
	and	a.cd_programador = cd_pessoa_fisica_w 
	and	c.ie_situacao = 'A' 
	and 	p.ie_status = 'E' 
	and 	p.ie_origem = 'D' 
	and  	b.pr_etapa <> 100 
	and 	coalesce(p.ie_nivel_projeto,0) <> '3' 
	and	p.nr_seq_estagio <> 17;
	
C04 CURSOR FOR 
	SELECT	v.nr_sequencia, 
		substr(v.ds_dano_breve,1,40) ds_dano_breve, 
		a.qt_minuto, 
		CASE WHEN 		 		CASE WHEN(SELECT	count(*) 		from	proj_ordem_servico m, 			proj_projeto p 		where	p.nr_sequencia = m.nr_seq_proj 		and	m.nr_seq_ordem = v.nr_sequencia)=0 THEN (select	count(*) 		from	proj_projeto p 		where	p.nr_seq_ordem_serv = v.nr_sequencia) END  		=0 THEN '# '  ELSE ' - ' END  ie_cronograma 
	from	man_ordem_servico_v2 v, 
		man_ordem_serv_ativ a, 
		usuario u 
	where	v.nr_sequencia  = a.nr_seq_ordem_serv 
	and	trunc(a.dt_atividade) = trunc(clock_timestamp()) 
	and	u.nm_usuario = a.nm_usuario_exec 
	and	u.cd_pessoa_fisica = cd_pessoa_fisica_w;


BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_gerencia_w, 
	ds_gerencia_w, 
	ds_email_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	ds_dados_w:= ds_enter_w;
 
	select	count(*) 
	into STRICT	qt_recursos_w 
	from	proj_projeto p, 
		proj_cronograma c, 
		proj_cron_etapa b, 
		proj_cron_etapa_equipe a, 
		usuario u 
	where	p.nr_sequencia = c.nr_seq_proj 
	and	c.nr_sequencia = b.nr_seq_cronograma 
	and	b.nr_sequencia = a.nr_seq_etapa_cron 
	and	clock_timestamp() between b.dt_inicio_prev and b.dt_fim_prev 
	and	u.cd_pessoa_fisica = a.cd_programador 
	and	c.ie_situacao = 'A' 
	and 	p.ie_status = 'E' 
	and 	p.ie_origem = 'D' 
	and  	b.pr_etapa <> 100 
	and 	coalesce(p.ie_nivel_projeto,0) <> '3' 
	and	p.nr_seq_estagio <> 17 
	and	p.nr_seq_gerencia = nr_seq_gerencia_w;
	 
	if (qt_recursos_w <> 0) then 
		begin 
		 
		open C02;
		loop 
		fetch C02 into	 
			cd_pessoa_fisica_w, 
			nm_pessoa_fisica_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
 
			 
			ds_dados_w:=	ds_dados_w || ds_enter_w;
			ds_dados_w:= 	ds_dados_w ||'--------------------------------------------------------------------------'||ds_enter_w;		
			ds_dados_w:=	ds_dados_w || nm_pessoa_fisica_w || ds_enter_w;
			ds_dados_w:=	ds_dados_w || ds_enter_w;
			ds_dados_w:=	ds_dados_w || 'Previsto '|| ds_enter_w;
			 
			open C03;
			loop 
			fetch C03 into	 
				nr_seq_projeto_w, 
				ds_titulo_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin 
				ds_dados_w:= ds_dados_w ||' - Projeto: '||nr_seq_projeto_w|| ' - '||ds_titulo_w || ds_enter_w;
				 
				 
				end;
			end loop;
			close C03;
			 
			ds_dados_w:=	ds_dados_w|| ds_enter_w;
			ds_dados_w:=	ds_dados_w ||'Realizado '|| ds_enter_w;
		 
			select	count(*) 
			into STRICT	qt_realizado_w 
			from	man_ordem_servico_v2 v, 
				man_ordem_serv_ativ a, 
				usuario u 
			where	v.nr_sequencia  = a.nr_seq_ordem_serv 
			and	trunc(a.dt_atividade) = trunc(clock_timestamp()) 
			and	u.nm_usuario = a.nm_usuario_exec 
			and	u.cd_pessoa_fisica = cd_pessoa_fisica_w;
			 
			if (qt_realizado_w > 0) then 
			 
				open C04;
				loop 
				fetch C04 into	 
					nr_seq_ordem_w, 
					ds_dano_breve_w, 
					qt_minuto_exec_w, 
					ie_cronograma_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin 
					 
					ds_dados_w:= ds_dados_w ||ie_cronograma_w||'OS: '|| nr_seq_ordem_w || ' - '|| ds_dano_breve_w || ds_enter_w;
					ds_dados_w:= ds_dados_w ||'  Minutos: '|| qt_minuto_exec_w ||ds_enter_w||ds_enter_w;
								 
					end;
				end loop;
				close C04;
			else 
				ds_dados_w:= ds_dados_w || ' - Nenhuma atividade registrada.'|| ds_enter_w;
			end if;
			 
			end;
		end loop;
		close C02;
		 
		if (pkg_date_utils.get_WeekDay(clock_timestamp()) <> 1) then 
			CALL enviar_email( 
			'Recursos alocados em projetos - '|| ds_gerencia_w, 
			ds_dados_w, 
			'pmo_desenvolvimento@wheb.com.br', 
			'gerencia_op@wheb.com.br,adriano.s@wheb.com.br,ricardo.reich@philips.com', 
			nm_usuario_p, 
			'A');
		end if;	
		 
		end;
	end if;
	 
	end;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pmo_enviar_recursos_alocados (nm_usuario_p text) FROM PUBLIC;

