-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_bipagem_bolsa (ds_identificacao_bolsa_p bigint, nr_cirurgia_p bigint, nr_seq_derivado_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

		
ds_erro_w			varchar(255) := '';
ie_existe_w         varchar(1) := 'N';
ie_bolsa_bipada_w   varchar(1) := 'N';
ie_pertence_cirurgia_w varchar(1) := 'N';
nr_seq_inutil_w     bigint;
ds_identificacao_bolsa_w	numeric(20) := ds_identificacao_bolsa_p;


BEGIN

if (obtain_user_locale(wheb_usuario_pck.get_nm_usuario) = 'de_DE') then
	
	select	coalesce(max(nr_sequencia),to_char(ds_identificacao_bolsa_p))
	into STRICT	ds_identificacao_bolsa_w
	from	san_producao
	where	nr_sangue = to_char(ds_identificacao_bolsa_p);

end if;
	
if (ds_identificacao_bolsa_w IS NOT NULL AND ds_identificacao_bolsa_w::text <> '') then	
	/*Consistencia que impede de bipar uma bolsa inexistente*/

	SELECT 	coalesce(MAX('S'),'N')
	INTO STRICT   	ie_existe_w
	FROM   	san_producao
	WHERE   nr_sequencia = ds_identificacao_bolsa_w;
	
	if (ie_existe_w = 'N') then	
		/*Mensagem: Identificação da bolsa não encontrada!*/

		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(354397,null);
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(354397);
	end if;
	
	/*Consistencia de que impede de bipar bolsa inutilizada.*/

	SELECT 	MAX(NR_SEQ_INUTIL)
	INTO STRICT   	nr_seq_inutil_w
	FROM   	san_producao
	WHERE   nr_sequencia = ds_identificacao_bolsa_w;
	
	if (nr_seq_inutil_w IS NOT NULL AND nr_seq_inutil_w::text <> '') then
		/*Mensagem: Esta bolsa está inutilizada!*/

		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(354405,null);		
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(354405);
	end if;
	
	/*Consistencia que impede de bipar duas vezes a mesma bolsa*/

	SELECT 	coalesce(MAX('S'),'N')
	INTO STRICT   	ie_bolsa_bipada_w
	FROM   	CIRURGIA_AGENTE_ANEST_OCOR
	WHERE  trim(both DS_IDENTIFICACAO_BOLSA) = TO_CHAR(ds_identificacao_bolsa_w)
	AND 	coalesce(ie_situacao,'A')  = 'A';
		
	if (ie_bolsa_bipada_w = 'S') then
		/*Mensagem: Não é possível informar esta bolsa de sangue! A mesma já foi registrada.*/

		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(354407,null);		
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(354407);
	end if;
			
	/*Consistencia que impede bipar a bolsa de outra cirurgia*/

	SELECT    coalesce(MAX('S'),'N')
	INTO STRICT   	  ie_pertence_cirurgia_w
	FROM      san_transfusao b,
			  san_producao c
	WHERE     b.nr_sequencia     = c.nr_seq_transfusao
	AND       coalesce(b.ie_status,'A')  = 'A'
	AND       b.nr_cirurgia    = nr_cirurgia_p
	AND 	  c.nr_sequencia   = ds_identificacao_bolsa_w;
	
	if (ie_pertence_cirurgia_w = 'N') then
		/*Mensagem: Não é possível informar esta bolsa de sangue! A mesma não pertence a esta cirurgia.*/

		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(354408,null);		
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(354408);
	end if;
	
	/*Consistencia que impede bipar uma bolsa em um derivado diferente*/

	SELECT   coalesce(MAX('S'),'N')
	INTO STRICT   	 ie_existe_w
	FROM     san_transfusao b,
			 san_producao c
	WHERE    b.nr_sequencia  = c.nr_seq_transfusao
	AND      b.nr_cirurgia   = nr_cirurgia_p
	AND      c.nr_sequencia  = ds_identificacao_bolsa_w
	AND      nr_seq_derivado = nr_seq_derivado_p;
	
	if (ie_existe_w = 'N') then
		/*Mensagem: Não é possível informar esta bolsa de sangue! A mesma não pertence a esta cirurgia.*/

		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(354811,null);		
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(354811);
	end if;

end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_bipagem_bolsa (ds_identificacao_bolsa_p bigint, nr_cirurgia_p bigint, nr_seq_derivado_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

