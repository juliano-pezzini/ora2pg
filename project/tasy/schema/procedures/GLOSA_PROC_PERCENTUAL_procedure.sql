-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE glosa_proc_percentual ( nr_sequencia_p bigint, pr_glosa_p bigint, cd_convenio_glosa_p bigint, cd_categoria_glosa_p text, vl_proc_original_p bigint) AS $body$
DECLARE


vl_total_proc_w			double precision := 0;
cd_estabelecimento_w		integer;
vl_disponivel_w			double precision;
vl_autorizado_w			double precision;
vl_utilizado_w			double precision;
vl_procedimento_w			double precision;
nr_seq_autorizacao_w		varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nm_usuario_w			varchar(15);
nr_sequencia_w			bigint;
vl_medico_w			double precision;
vl_anestesista_w			double precision;
vl_auxiliares_w			double precision;
vl_custo_operacional_w		double precision;
vl_materiais_w			double precision;
vl_adic_plant_w			double precision;
vl_medico_ww			double precision;
vl_anestesista_ww			double precision;
vl_auxiliares_ww			double precision;
vl_custo_operacional_ww		double precision;
vl_materiais_ww			double precision;
vl_adic_plant_ww			double precision;
vl_procedimento_ww		double precision;
pr_glosa_w			double precision;
cd_convenio_glosa_w		integer := null;
cd_categoria_glosa_w		varchar(10) := null;
nr_atendimento_w			bigint;

ie_regra_arredondamento_tx_w	varchar(01):= 'N';
ie_regra_arred_IPE_w		varchar(01):= 'N';
ie_tipo_rounded_w			varchar(01);
ie_vl_cad_glosa_perc_ipe_w		varchar(01):= 'N';
ie_considerar_adic_hora_ipe_w	varchar(15) := 'N';

vl_medico_www			double precision;
vl_anestesista_www		double precision;
vl_auxiliares_www			double precision;
vl_custo_operacional_www		double precision;
vl_materiais_www			double precision;
vl_adic_plant_www			double precision;
vl_procedimento_www		double precision;
dt_procedimento_w			timestamp;

tx_adic_medico_w    		double precision		:= 1;
tx_adic_anestesista_w 		double precision		:= 1;
tx_adic_auxiliares_w 		double precision		:= 1;
tx_adic_custo_operacional_w		double precision		:= 1;
tx_adic_materiais_w 		double precision		:= 1;
tx_adic_procedimento_w		double precision		:= 1;
vl_adic_proc_w			double precision		:= 0;
vl_adic_medico_w			double precision		:= 0;
nr_seq_adic_w			bigint;
cd_setor_atendimento_w    		integer  	:= 0;
ie_tipo_atendimento_w     		smallint    	:= 0;
ie_carater_inter_sus_w		varchar(2);
dt_conta_w                		timestamp		:= clock_timestamp();
nr_cirurgia_w			bigint   	:= 0;
ie_carater_cirurgia_w		varchar(01);
ie_video_w			varchar(01);
dt_final_cirurgia_w			timestamp;
dt_inicio_cirurgia_w			timestamp;
cd_tipo_acomodacao_w      		smallint;
cd_medico_executor_w      		varchar(10);
cd_proced_calculo_horario_w		bigint;
ie_origem_proced_horario_w		bigint;
vl_procedimento_horario_w		double precision;
ds_log_w				varchar(2000);

cd_area_proc_w			bigint;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
ie_data_adic_hor_w		varchar(1):= 'N';
dt_adic_hor_w			timestamp;
ie_consid_vl_orig_w		varchar(15) := 'X';
dt_entrada_w			timestamp;
dt_alta_w				timestamp;
dt_alta_preco_w				timestamp;
dt_agenda_integrada_w		timestamp;
dt_conta_definitiva_w		timestamp;
dt_preco_w			timestamp;
nr_interno_conta_w			bigint := 0;
nr_prescricao_w			bigint		:= 0;
ie_regra_data_preco_w		varchar(1) := 'N';
ie_valor_filme_apos_adic_hor_w	varchar(15) := 'N';
qt_procedimento_w			double precision;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
ie_tipo_regra_data_preco_w	varchar(1);
vl_materiais_tab_w		double precision := 0;
vl_anestesista_tab_w		double precision := 0;
vl_auxiliares_tab_w		double precision := 0;
vl_custo_oper_tab_w		double precision := 0;
vl_procedimento_tab_w		double precision := 0;
vl_medico_tab_w			double precision := 0;
cd_plano_w			varchar(10);
ie_ajusta_resp_cred_glosa_w	varchar(1):= 'N';
ie_clinica_w			integer;
nr_seq_proc_interno_w		bigint;



BEGIN

pr_glosa_w			:= pr_glosa_p;
cd_convenio_glosa_w		:= coalesce(cd_convenio_glosa_p,0);
cd_categoria_glosa_w		:= cd_categoria_glosa_p;

select	a.cd_convenio,
	a.cd_categoria,
	a.nr_atendimento,
	coalesce(a.vl_procedimento,0),
	a.nr_seq_autorizacao,
	a.cd_procedimento,
	a.ie_origem_proced,
	a.nm_usuario,
	coalesce(a.vl_medico,0),
	coalesce(a.vl_anestesista,0),
	coalesce(a.vl_auxiliares,0),
	coalesce(a.vl_custo_operacional,0),
	coalesce(a.vl_materiais,0),
	coalesce(a.vl_adic_plant,0),
	b.cd_estabelecimento,
	a.dt_procedimento,
	a.cd_setor_atendimento,
	b.ie_tipo_atendimento,
	b.ie_carater_inter_sus,
	coalesce(a.dt_conta, coalesce(a.dt_prescricao,a.dt_procedimento)),
	a.nr_cirurgia,
	a.ie_video,
	a.cd_medico_executor,
	a.qt_procedimento,
	obter_dado_atend_cat_conv(a.nr_atendimento, a.dt_conta, a.cd_convenio, a.cd_categoria, 'P'),
	b.ie_clinica,
	a.nr_seq_proc_interno
into STRICT	cd_convenio_w,
	cd_categoria_w,
	nr_atendimento_w,
	vl_procedimento_w,
	nr_seq_autorizacao_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nm_usuario_w,
	vl_medico_w,
	vl_anestesista_w,
	vl_auxiliares_w,
	vl_custo_operacional_w,
	vl_materiais_w,
	vl_adic_plant_w,
	cd_estabelecimento_w,
	dt_procedimento_w,
	cd_setor_atendimento_w,
	ie_tipo_atendimento_w,
	ie_carater_inter_sus_w,
	dt_conta_w,
	nr_cirurgia_w,
	ie_video_w,
	cd_medico_executor_w,
	qt_procedimento_w,
	cd_plano_w,
	ie_clinica_w,
	nr_seq_proc_interno_w
from	atendimento_paciente b,
	Procedimento_paciente a
where	a.nr_atendimento	= b.nr_atendimento
and	a.nr_sequencia	= nr_sequencia_p;


begin
select	ie_carater_cirurgia,
	coalesce(dt_fim_cirurgia,coalesce(dt_termino,dt_conta_w)),
	coalesce(dt_inicio_cirurgia, coalesce(dt_inicio_real,dt_conta_w))
into STRICT	ie_carater_cirurgia_w,
	dt_final_cirurgia_w,
	dt_inicio_cirurgia_w
from	cirurgia
where	nr_cirurgia		= nr_cirurgia_w;
exception
	when others then
      	ie_carater_cirurgia_w 	:= null;
	dt_final_cirurgia_w	:= null;
	dt_inicio_cirurgia_w 	:= null;
end;

begin
select	cd_area_procedimento,
	cd_grupo_proc,
	cd_especialidade
into STRICT	cd_area_proc_w,
	cd_grupo_proc_w,
	cd_especialidade_w
from	estrutura_procedimento_v
where	cd_procedimento		= cd_procedimento_w
and	ie_origem_proced	= ie_origem_proced_w;
exception
	when others then
	cd_area_proc_w		:= 0;
	cd_grupo_proc_w		:= 0;
	cd_especialidade_w	:= 0;
	end;

begin
select	dt_entrada,
	coalesce(dt_alta,clock_timestamp()),
	dt_alta
into STRICT	dt_entrada_w,
	dt_alta_w,
	dt_alta_preco_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_w;
exception
	when others then
	dt_entrada_w := null;
	dt_alta_w	:= null;
	dt_alta_preco_w := null;
	end;

begin
select	nr_interno_Conta,
	coalesce(nr_prescricao,0)
into STRICT	nr_interno_conta_w,
	nr_prescricao_w
from 	procedimento_paciente
where 	nr_sequencia = nr_sequencia_p;
exception
    	when others then
      	nr_interno_conta_w := 0;
	nr_prescricao_w	:= 0;
	end;

begin
select	max(CASE WHEN ie_status_acerto=1 THEN coalesce(dt_conta_definitiva,clock_timestamp())  ELSE coalesce(dt_conta_definitiva,dt_conta_w) END ),
	max(dt_periodo_inicial),
	max(dt_periodo_final)
into STRICT	dt_conta_definitiva_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_w;
exception
    	when others then
      	dt_conta_definitiva_w:= dt_conta_w;
	dt_periodo_inicial_w	:= clock_timestamp();
	dt_periodo_final_w	:= clock_timestamp();
end;

dt_agenda_integrada_w:= dt_conta_w;
if (coalesce(nr_prescricao_w,0) > 0) then

	select	coalesce(Obter_Tipo_Regra_Data_Preco('P',cd_convenio_glosa_w),'X')
	into STRICT	ie_tipo_regra_data_preco_w
	;


	if (ie_tipo_regra_data_preco_w = 'G') then

		begin
		dt_agenda_integrada_w := Propaci_Obter_data_ageint(nr_prescricao_w, nr_atendimento_w, cd_procedimento_w, ie_origem_proced_w, dt_conta_w, dt_agenda_integrada_w);
		exception
			when others then
			dt_agenda_integrada_w:= dt_conta_w;
		end;


	end if;
end if;

/* obter o tipo de acomodacao do convenio */

begin
select	obter_tipo_acomod_proc(nr_atendimento_w,nr_sequencia_p)
into STRICT	cd_tipo_acomodacao_w
;
exception
	when others then
		cd_tipo_acomodacao_w 	:= 0;
end;

if (cd_convenio_glosa_w = 0) then
	begin
	select	coalesce(cd_convenio_glosa,0),
		coalesce(cd_categoria_glosa,' ')
	into STRICT	cd_convenio_glosa_w,
		cd_categoria_glosa_w
	from	atend_categoria_convenio
	where	nr_seq_interno	=
		(SELECT coalesce(max(x.nr_seq_interno),0)
			from 	atend_categoria_convenio x
			where	x.nr_atendimento	= nr_atendimento_w
			and	x.cd_convenio	 = cd_convenio_w
			and	x.cd_categoria	 = cd_categoria_w);
	exception
		when others then
			cd_convenio_glosa_w	:= 0;
			cd_categoria_glosa_w	:= ' ';
	end;


	if (cd_convenio_glosa_w = 0) then
		SELECT * FROM obter_convenio_particular(cd_estabelecimento_w, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;
		if (cd_convenio_w = cd_convenio_glosa_w) and /* OS  344765  Não duplicar o procedimento quando o convênio do proc já for particular */
			(cd_categoria_w = cd_categoria_glosa_w)then
			cd_convenio_glosa_w := 0;
			cd_categoria_glosa_w := ' ';
		end if;
	end if;
end if;

/* ROTINA DE ARREDONDAMENTO, USADO PELO CONVÊNIO IPE   --->>    INICIO  <<----- */

if (cd_convenio_glosa_w <> 0) and (coalesce(cd_categoria_glosa_w,'X') <> 'X') then
	begin
		begin
	select	coalesce(max(ie_regra_arredondamento_tx),'N'),
		coalesce(max(ie_vl_cad_glosa_perc_ipe),'N'),
		coalesce(max(ie_considerar_adic_hora_ipe),'N'),
		coalesce(max(ie_data_adic_hor),'N'),
		coalesce(max(ie_ajusta_resp_cred_glosa),'N')
	into STRICT	ie_regra_arredondamento_tx_w,
		ie_vl_cad_glosa_perc_ipe_w,
		ie_considerar_adic_hora_ipe_w,
		ie_data_adic_hor_w,
		ie_ajusta_resp_cred_glosa_w
	from	parametro_faturamento
	where	cd_estabelecimento = cd_estabelecimento_W;
	exception
		when others then
			ie_regra_arredondamento_tx_w	:= 'N';
			ie_vl_cad_glosa_perc_ipe_w	:= 'N';
			ie_data_adic_hor_w		:= 'N';
			ie_ajusta_resp_cred_glosa_w	:= 'N';
	end;

	-- Convenio Glosa
	select	coalesce(max(ie_valor_original_glosa),'X')
	into STRICT	ie_consid_vl_orig_w
	from	convenio_estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_glosa_w;

	--Convenio
	select	max(ie_arredondamento),
		coalesce(max(ie_considera_regra_data_preco),'N'),
		coalesce(max(ie_valor_filme_apos_adic_hor),'N')
	into STRICT	ie_tipo_rounded_w,
		ie_regra_data_preco_w,
		ie_valor_filme_apos_adic_hor_w
	from	convenio_estabelecimento
	where	cd_convenio	  	= cd_convenio_w
	and	cd_estabelecimento	= cd_estabelecimento_W;

	if (ie_regra_arredondamento_tx_w = 'S') then
		begin

		if (ie_vl_cad_glosa_perc_ipe_w = 'S') 	and (cd_area_proc_w = 3) 		then

			select	coalesce(Obter_preco_procedimento2(
					cd_estabelecimento_w,
					cd_convenio_w,
					cd_categoria_w,
					dt_procedimento_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'P'),0)
				into STRICT	vl_procedimento_w
				;

			select	coalesce(Obter_preco_procedimento2(
					cd_estabelecimento_w,
					cd_convenio_w,
					cd_categoria_w,
					dt_procedimento_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'M'),0)
				into STRICT	vl_medico_w
				;

			select	coalesce(Obter_preco_procedimento2(
					cd_estabelecimento_w,
					cd_convenio_w,
					cd_categoria_w,
					dt_procedimento_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'F'),0)
				into STRICT	vl_materiais_w
				;


			select	coalesce(Obter_preco_procedimento2(
					cd_estabelecimento_w,
					cd_convenio_w,
					cd_categoria_w,
					dt_procedimento_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'AN'),0)
				into STRICT	vl_anestesista_w
				;

			select	coalesce(Obter_preco_procedimento2(
					cd_estabelecimento_w,
					cd_convenio_w,
					cd_categoria_w,
					dt_procedimento_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'AX'),0)
				into STRICT	vl_auxiliares_w
				;

			select	coalesce(Obter_preco_procedimento2(
					cd_estabelecimento_w,
					cd_convenio_w,
					cd_categoria_w,
					dt_procedimento_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'',
					'C'),0)
			into STRICT	vl_custo_operacional_w


			;


			vl_procedimento_w := (qt_procedimento_w * vl_procedimento_w);

			/*Solicitada a inclusão do adicional horário para os procedimentos da área 3 - DIAGNOSE E TERAPIA  Hospital Ernesto Dornelles OS 256479*/

			if (ie_considerar_adic_hora_ipe_w = 'S') and (cd_area_proc_w = 3) then
				begin
				select 	CASE WHEN ie_data_adic_hor_w='S' THEN  dt_procedimento_w  ELSE dt_conta_w END
				into STRICT	dt_adic_hor_w
				;

				if (ie_regra_data_preco_w = 'S') then --OS262547
					begin
					select	obter_regra_data_preco('P',cd_convenio_w, dt_entrada_w, dt_conta_w, dt_alta_preco_w, dt_conta_definitiva_w, dt_agenda_integrada_w, dt_periodo_inicial_w, dt_periodo_final_w)
					into STRICT	dt_preco_w
					;

					dt_adic_hor_w := dt_preco_w;
					end;
				end if;

				SELECT * FROM define_adicional_horario(cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, cd_convenio_w, cd_categoria_w, cd_setor_atendimento_w, ie_tipo_atendimento_w, ie_carater_inter_sus_w, dt_adic_hor_w, ie_carater_cirurgia_w, ie_video_w, dt_inicio_cirurgia_w, dt_final_cirurgia_w, cd_tipo_acomodacao_w, cd_medico_executor_w, cd_plano_w, dt_entrada_w, tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w, ie_clinica_w, null, nr_seq_proc_interno_w) INTO STRICT tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w;

				if (coalesce(nr_seq_adic_w,0) > 0) then

					if (OBTER_SE_DISPENSA_ADIC_HOR(nr_sequencia_p) = 'S') then

						tx_adic_medico_w 		:= 1;
						tx_adic_anestesista_w 		:= 1;
						tx_adic_auxiliares_w		:= 1;
						tx_adic_custo_operacional_w	:= 1;
						tx_adic_materiais_w		:= 1;
						tx_adic_procedimento_w		:= 1;
						vl_adic_proc_w			:= 0;
						vl_adic_medico_w		:= 0;
						cd_proced_calculo_horario_w 	:= null;
						ie_origem_proced_horario_w	:= null;
						nr_seq_adic_w := null;

					end if;
				end if;

				if (coalesce(vl_adic_proc_w::text, '') = '') then
					vl_adic_proc_w	:= 0;
				end if;

				if (coalesce(cd_proced_calculo_horario_w::text, '') = '') then
					begin


					if (coalesce(nr_seq_adic_w,0) > 0) then	 --OS 271320
						vl_custo_operacional_w 		:= (tx_adic_custo_operacional_w 	* vl_custo_operacional_w);
						vl_anestesista_w 		:= (tx_adic_anestesista_w 		* vl_anestesista_w);
						vl_medico_w 			:= (tx_adic_medico_w * (coalesce(vl_adic_medico_w,0) + vl_medico_w));
						vl_auxiliares_w 		:= (tx_adic_auxiliares_w 		* vl_auxiliares_w);
						vl_materiais_w 			:= (tx_adic_materiais_w 		* vl_materiais_w);

						if (ie_valor_filme_apos_adic_hor_w = 'S') then
							begin
							vl_procedimento_w := vl_procedimento_w - vl_materiais_w;
							vl_procedimento_w := (tx_adic_procedimento_w * (vl_adic_proc_w + vl_procedimento_w));
							vl_procedimento_w := vl_procedimento_w + vl_materiais_w;
							end;
						else
							vl_procedimento_w := (tx_adic_procedimento_w * (vl_adic_proc_w + vl_procedimento_w));
						end if;

						vl_total_proc_w	:= (vl_medico_w + vl_custo_operacional_w + vl_anestesista_w + vl_auxiliares_w + vl_materiais_w);
						if (vl_total_proc_w > 0) then

							vl_procedimento_w := qt_procedimento_w * vl_total_proc_w;

						end if;
					end if;
					end;
				else
					begin
					vl_procedimento_horario_w := (tx_adic_procedimento_w * (vl_adic_proc_w + vl_procedimento_w));

					vl_procedimento_w := vl_procedimento_horario_w - vl_procedimento_w;
					end;
				end if;
				end;
			end if;

		end if;

		vl_medico_www		:= ((vl_medico_w		* pr_glosa_w) / 100);
		vl_anestesista_www	:= ((vl_anestesista_w	* pr_glosa_w) / 100);
		vl_auxiliares_www		:= ((vl_auxiliares_w		* pr_glosa_w) / 100);
		vl_custo_operacional_www	:= ((vl_custo_operacional_w 	* pr_glosa_w) / 100);
		vl_materiais_www		:= ((vl_materiais_w		* pr_glosa_w) / 100);
		vl_adic_plant_www		:= ((vl_adic_plant_w		* pr_glosa_w) / 100);
		vl_procedimento_www	:= ((vl_procedimento_w	* pr_glosa_w) / 100);

		if (ie_tipo_rounded_w = 'R') then
			begin
			select 	obter_regra_arredondamento(cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w,
					dt_procedimento_w, 'P', 1)
			into STRICT	ie_tipo_rounded_w
			;

			ie_regra_arred_IPE_w:= 'S';

			if (ie_tipo_rounded_w IS NOT NULL AND ie_tipo_rounded_w::text <> '') and (ie_regra_arred_IPE_w = 'S') /*and
				(ie_valor_informado_w = 'N')*/
 then

				vl_procedimento_www := arredondamento(vl_procedimento_www, 2, ie_tipo_rounded_w);
				vl_custo_operacional_www := arredondamento(vl_custo_operacional_www, 2, ie_tipo_rounded_w);
				vl_anestesista_www := arredondamento(vl_anestesista_www, 2, ie_tipo_rounded_w);
				vl_medico_www := arredondamento(vl_medico_www, 2, ie_tipo_rounded_w);
				vl_auxiliares_www := arredondamento(vl_auxiliares_www, 2, ie_tipo_rounded_w);
				vl_materiais_www := arredondamento(vl_materiais_www, 2, ie_tipo_rounded_w);


				vl_medico_ww		:=	vl_medico_www;
				vl_anestesista_ww		:=	vl_anestesista_www;
				vl_auxiliares_ww		:=	vl_auxiliares_www;
				vl_custo_operacional_ww	:=	vl_custo_operacional_www;
				vl_materiais_ww		:=	vl_materiais_www;
				vl_adic_plant_ww		:=	vl_adic_plant_www;
				vl_procedimento_ww	:=	vl_procedimento_www;

			else
				begin
				vl_medico_ww		:=	vl_medico_www;
				vl_anestesista_ww		:=	vl_anestesista_www;
				vl_auxiliares_ww		:=	vl_auxiliares_www;
				vl_custo_operacional_ww	:=	vl_custo_operacional_www;
				vl_materiais_ww		:=	vl_materiais_www;
				vl_adic_plant_ww		:=	vl_adic_plant_www;
				vl_procedimento_ww	:=	vl_procedimento_www;
				end;
			end if;
			end;
		else
			begin
			vl_medico_ww		:=	vl_medico_www;
			vl_anestesista_ww		:=	vl_anestesista_www;
			vl_auxiliares_ww		:=	vl_auxiliares_www;
			vl_custo_operacional_ww	:=	vl_custo_operacional_www;
			vl_materiais_ww		:=	vl_materiais_www;
			vl_adic_plant_ww		:=	vl_adic_plant_www;
			vl_procedimento_ww	:=	vl_procedimento_www;

			end;
		end if;


		nr_sequencia_w := duplicar_proc_paciente(nr_sequencia_p, nm_usuario_w, nr_sequencia_w);

		/*Procedimento original*/

		update procedimento_paciente
		set	ie_valor_informado	= 'S',
			vl_medico		= vl_medico_ww,
			vl_anestesista		= vl_anestesista_ww,
			vl_auxiliares		= vl_auxiliares_ww,
			vl_custo_operacional	= vl_custo_operacional_ww,
			vl_materiais		= vl_materiais_ww,
			vl_adic_plant		= vl_adic_plant_ww,
			vl_Procedimento		= vl_procedimento_ww
		where	nr_sequencia		= nr_sequencia_p;

		if (ie_tipo_rounded_w IS NOT NULL AND ie_tipo_rounded_w::text <> '') and (ie_regra_arred_IPE_w = 'S') /*and
			(ie_valor_informado_w = 'N')*/
 then
			begin
			vl_medico_www		:= vl_medico_w - vl_medico_ww;
			vl_anestesista_www	:= vl_anestesista_w - vl_anestesista_ww;
			vl_auxiliares_www		:= vl_auxiliares_w - vl_auxiliares_ww;
			vl_custo_operacional_www	:= vl_custo_operacional_w - vl_custo_operacional_ww;
			vl_materiais_www		:= vl_materiais_w - vl_materiais_ww;
			vl_adic_plant_www		:= vl_adic_plant_w - vl_adic_plant_ww;
			vl_procedimento_www	:= vl_Procedimento_w - vl_Procedimento_ww;

			vl_procedimento_www := arredondamento(vl_procedimento_www, 2, ie_tipo_rounded_w);
			vl_custo_operacional_www := arredondamento(vl_custo_operacional_www, 2, ie_tipo_rounded_w);
			vl_anestesista_www := arredondamento(vl_anestesista_www, 2, ie_tipo_rounded_w);
			vl_medico_www := arredondamento(vl_medico_www, 2, ie_tipo_rounded_w);
			vl_auxiliares_www := arredondamento(vl_auxiliares_www, 2, ie_tipo_rounded_w);
			vl_materiais_www := arredondamento(vl_materiais_www, 2, ie_tipo_rounded_w);

			vl_medico_ww			:=	vl_medico_www;
			vl_anestesista_ww		:=	vl_anestesista_www;
			vl_auxiliares_ww		:=	vl_auxiliares_www;
			vl_custo_operacional_ww		:=	vl_custo_operacional_www;
			vl_materiais_ww			:=	vl_materiais_www;
			vl_adic_plant_ww		:=	vl_adic_plant_www;
			vl_procedimento_ww		:=	vl_procedimento_www;
			end;
		else
			begin
			vl_medico_ww		:= vl_medico_w - vl_medico_ww;
			vl_anestesista_ww		:= vl_anestesista_w - vl_anestesista_ww;
			vl_auxiliares_ww		:= vl_auxiliares_w - vl_auxiliares_ww;
			vl_custo_operacional_ww	:= vl_custo_operacional_w - vl_custo_operacional_ww;
			vl_materiais_ww		:= vl_materiais_w - vl_materiais_ww;
			vl_adic_plant_ww		:= vl_adic_plant_w - vl_adic_plant_ww;
			vl_procedimento_ww	:= vl_Procedimento_w - vl_Procedimento_ww;
			end;
		end if;

		if (ie_vl_cad_glosa_perc_ipe_w = 'S') and (cd_area_proc_w = 3) then
			vl_medico_ww		:=	(vl_medico_w 	* (100 - pr_glosa_w) / 100);
			vl_anestesista_ww	:=	(vl_anestesista_w	* (100 - pr_glosa_w) / 100);
			vl_auxiliares_ww	:=	(vl_auxiliares_w	* (100 - pr_glosa_w) / 100);
			vl_custo_operacional_ww	:=	(vl_custo_operacional_w * (100 - pr_glosa_w) / 100);
			vl_materiais_ww		:=	(vl_materiais_w 	* (100 - pr_glosa_w) / 100);
			vl_procedimento_ww	:=	(vl_procedimento_w 	* (100 - pr_glosa_w) / 100);
		end if;

		if (obter_se_proc_recebe_honorario(nr_sequencia_w,ie_tipo_atendimento_w,cd_convenio_glosa_w) = 'N') then
			begin
			vl_procedimento_ww := ((vl_proc_original_p * pr_glosa_w) / 100);
			end;
		end if;

		/*Procedimento duplicado*/

		update procedimento_paciente
		set	ie_valor_informado	= 'S',
			vl_medico		= vl_medico_ww,
			vl_anestesista		= vl_anestesista_ww,
			vl_auxiliares		= vl_auxiliares_ww,
			vl_custo_operacional	= vl_custo_operacional_ww,
			vl_materiais		= vl_materiais_ww,
			vl_adic_plant		= vl_adic_plant_ww,
			vl_procedimento		= vl_procedimento_ww,
			cd_situacao_glosa	= 8,
			qt_procedimento		= 0,
			cd_convenio		= cd_convenio_glosa_w,
			cd_categoria		= cd_categoria_glosa_w,
			nr_seq_proc_princ	= nr_sequencia_p,
			nr_interno_conta	 = NULL
		where	nr_sequencia		= nr_sequencia_w;

		end;
	/* ROTINA DE ARREDONDAMENTO, USADO PELO CONVÊNIO IPE   --->>    FIM  <<----- */

	elsif (ie_regra_arredondamento_tx_w = 'N') then
		begin
		/*Não usa arredondamento IPE*/

		vl_medico_ww		:= ((vl_medico_w		* pr_glosa_w) / 100);
		vl_anestesista_ww		:= ((vl_anestesista_w	* pr_glosa_w) / 100);
		vl_auxiliares_ww		:= ((vl_auxiliares_w		* pr_glosa_w) / 100);
		vl_custo_operacional_ww	:= ((vl_custo_operacional_w 	* pr_glosa_w) / 100);
		vl_materiais_ww		:= ((vl_materiais_w		* pr_glosa_w) / 100);
		vl_adic_plant_ww		:= ((vl_adic_plant_w		* pr_glosa_w) / 100);
		vl_procedimento_ww	:= ((vl_procedimento_w	* pr_glosa_w) / 100);

		nr_sequencia_w := duplicar_proc_paciente(nr_sequencia_p, nm_usuario_w, nr_sequencia_w);

		update procedimento_paciente
		set	ie_valor_informado	= 'S',
			vl_medico		= vl_medico_ww,
			vl_anestesista		= vl_anestesista_ww,
			vl_auxiliares		= vl_auxiliares_ww,
			vl_custo_operacional	= vl_custo_operacional_ww,
			vl_materiais		= vl_materiais_ww,
			vl_adic_plant		= vl_adic_plant_ww,
			vl_Procedimento		= vl_procedimento_ww
		where	nr_sequencia		= nr_sequencia_p;

		update procedimento_paciente
		set	ie_valor_informado		= 'S',
			vl_medico		= vl_medico_w - vl_medico_ww,
			vl_anestesista		= vl_anestesista_w - vl_anestesista_ww,
			vl_auxiliares		= vl_auxiliares_w - vl_auxiliares_ww,
			vl_custo_operacional	= vl_custo_operacional_w - vl_custo_operacional_ww,
			vl_materiais		= vl_materiais_w - vl_materiais_ww,
			vl_adic_plant		= vl_adic_plant_w - vl_adic_plant_ww,
			vl_procedimento		= vl_Procedimento_w - vl_Procedimento_ww,
			cd_situacao_glosa	= 8,
			qt_procedimento		= 0,
			cd_convenio		= cd_convenio_glosa_w,
			cd_categoria		= cd_categoria_glosa_w,
			nr_seq_proc_princ		= nr_sequencia_p,
			nr_interno_conta		 = NULL
		where	nr_sequencia		= nr_sequencia_w;
		end;
	end if;

	if (coalesce(ie_ajusta_resp_cred_glosa_w,'N') = 'S') and (coalesce(nr_sequencia_w,0) > 0)then
		CALL ajustar_resp_cred_proc_glosa(nr_sequencia_w);
	end if;

	end;
end if;

/* Elemar - 26/08/03 - Dava erro porque é chamado a partir atualiza_preco_proc_amb que é chamado na trigger da exame_lab_result_item
if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
*/
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE glosa_proc_percentual ( nr_sequencia_p bigint, pr_glosa_p bigint, cd_convenio_glosa_p bigint, cd_categoria_glosa_p text, vl_proc_original_p bigint) FROM PUBLIC;

