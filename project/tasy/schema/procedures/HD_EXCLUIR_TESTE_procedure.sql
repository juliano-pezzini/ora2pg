-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_excluir_teste ( nr_seq_teste_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_dialisador_w		bigint;
nr_seq_dialise_dialisador_w	bigint;
nr_teste_atual_w		smallint;
nr_teste_maior_w		smallint;
ie_status_dialisador_w		varchar(15);
nr_seq_dialise_w		bigint;
nr_seq_dialisador_montado_w	bigint;
dt_inicio_dialise_w		timestamp;
dt_fim_dialise_w		timestamp;
dt_cancelada_w			timestamp;


BEGIN

/* Obter informações do teste */

select	nr_seq_dialise_dialisador,
	nr_seq_dialisador,
	nr_teste,
	nr_seq_dialise
into STRICT	nr_seq_dialise_dialisador_w,
	nr_seq_dialisador_w,
	nr_teste_atual_w,
	nr_seq_dialise_w
from	hd_dialisador_teste
where	nr_sequencia			= nr_seq_teste_p;

/* Obtém o número do dialisador que está montado na máquina */

select	coalesce(hd_obter_seq_dialisador_atual(nr_seq_dialise_w),0)
into STRICT	nr_seq_dialisador_montado_w
;

/* Verifica o status do dialisador */

select	ie_status
into STRICT	ie_status_dialisador_w
from	hd_dializador
where	nr_sequencia	= nr_seq_dialisador_w;

/* Verifica datas da hemodiálise */

select	dt_inicio_dialise,
	dt_fim_dialise,
	dt_cancelamento
into STRICT	dt_inicio_dialise_w,
	dt_fim_dialise_w,
	dt_cancelada_w
from	hd_dialise
where	nr_sequencia	= nr_seq_dialise_w;

/* Retorna erro caso possua outro dialisador montado ou remonta o dialisador na máquina */

if (nr_seq_dialisador_montado_w > 0) and (nr_seq_dialisador_montado_w <> nr_seq_dialise_dialisador_w) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264155);
elsif (nr_seq_dialisador_montado_w = 0) and (ie_status_dialisador_w <> 'D') and (coalesce(dt_fim_dialise_w::text, '') = '') and (coalesce(dt_cancelada_w::text, '') = '') then
	update	hd_dialise_dialisador
	set	dt_retirada	 = NULL,
		cd_pf_retirada	 = NULL
	where	nr_sequencia	= nr_seq_dialise_dialisador_w;
end if;

/* Se o dialisador estiver com status em reprocessamento não tem como iniciar testes */

if (ie_status_dialisador_w = 'R') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264156);
end if;

/*  Não permite excluir o primeiro teste se diálise já finalizada ou iniciada */

if (dt_inicio_dialise_w IS NOT NULL AND dt_inicio_dialise_w::text <> '') and (nr_teste_atual_w = 1) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264157);
elsif (dt_fim_dialise_w IS NOT NULL AND dt_fim_dialise_w::text <> '') and (nr_teste_atual_w = 1) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264158);
end if;

/* Verificar se há outro teste e se o outro é maior que o atual */

select	coalesce(max(nr_teste),0)
into STRICT	nr_teste_maior_w
from	hd_dialisador_teste
where	nr_seq_dialise_dialisador	= nr_seq_dialise_dialisador_w
and	nr_sequencia			<> nr_seq_teste_p;

if (nr_teste_atual_w < nr_teste_maior_w) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264159);
else
	begin

	if (ie_status_dialisador_w <> 'D') and (coalesce(dt_fim_dialise_w::text, '') = '') and (coalesce(dt_cancelada_w::text, '') = '') then

		/* Atualiza o status do dialisador */

		update	hd_dializador
		set	ie_status	= 'S',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_dialisador_w
		and	ie_status	<> 'S';

	end if;

	/* Excluir o teste */

	delete	from hd_dialisador_teste
	where	nr_sequencia	= nr_seq_teste_p;

	commit;

	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_excluir_teste ( nr_seq_teste_p bigint, nm_usuario_p text) FROM PUBLIC;

