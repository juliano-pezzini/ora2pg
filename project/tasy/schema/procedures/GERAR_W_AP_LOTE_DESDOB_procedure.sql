-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_ap_lote_desdob ( nr_seq_lote_p bigint, nr_seq_item_p bigint, nr_seq_mat_hor_p bigint, qt_original_p bigint, qt_ajuste_p bigint, ie_origem_p text default null) AS $body$
DECLARE



qt_existe_w		bigint;
nr_prescricao_w		prescr_medica.nr_prescricao%type;
cd_material_w		prescr_mat_hor.cd_material%type;
ie_origem_w		varchar(10)	:= coalesce(ie_origem_p,'F');

C01 CURSOR FOR
SELECT	b.nr_seq_turno,
        b.ie_urgente,
        a.cd_material,
        substr(obter_desc_material(a.cd_material),1,200) ds_material,
        a.nr_seq_mat_hor,
        b.ds_horario,
        b.cd_unidade_medida, 
        b.cd_unidade_medida_dose,
        a.nr_sequencia,
	c.ie_status_lote,
      	sum(b.qt_dose) qt_dose,
      	sum(a.qt_dispensar) qt_dispensar,
       	sum(a.qt_dispensar) qt_dispensar_hor
from    ap_lote_item a, 
	prescr_mat_hor b, 
	ap_lote c
where   a.nr_seq_mat_hor = b.nr_sequencia
and     c.nr_sequencia = a.nr_seq_lote
and     a.nr_seq_lote =  nr_seq_lote_p
and	a.cd_material = cd_material_w
and     coalesce(a.dt_supensao::text, '') = ''
and	(((ie_origem_w = 'F') and (c.ie_status_lote	in ('G'))) or
	((ie_origem_w = 'E') and (c.ie_status_lote	in ('A','R','D','E'))) )
and	Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
group by 	b.nr_seq_turno,
	substr(obter_desc_turno_disp(b.nr_seq_turno),1,255),        	
        b.ie_urgente,
        a.cd_material,
        a.nr_seq_mat_hor,
        b.cd_unidade_medida,
        a.nr_sequencia,
        substr(obter_desc_material(a.cd_material),1,200),
        b.ds_horario,         
        b.cd_unidade_medida_dose,
	c.ie_status_lote
having 	sum(a.qt_dispensar) > 0
order by nr_sequencia;

c01_w	c01%rowtype;



BEGIN

if (ie_origem_p = 'E') then
	delete
	from	w_ap_lote_desdob
	where	nr_seq_lote = nr_seq_lote_p;
end if;

select	max(nr_prescricao),
	max(cd_material)
into STRICT	nr_prescricao_w,
	cd_material_w
from	prescr_mat_hor
where	nr_sequencia = nr_seq_mat_hor_p;

if (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') then

	select	count(1)
	into STRICT	qt_existe_w
	from	ap_lote
	where	nr_sequencia = nr_seq_lote_p
	and	nr_prescricao = nr_prescricao_w;
			
	if (qt_existe_w > 0) then
		insert into w_ap_lote_desdob(
			nr_sequencia,
			nr_seq_lote,
			nr_seq_item,
			nr_seq_mat_hor,
			qt_original,
			qt_ajuste)
		values (	nextval('w_ap_lote_desdob_seq'),
			nr_seq_lote_p,
			nr_seq_item_p,
			nr_seq_mat_hor_p,
			qt_original_p,
			qt_ajuste_p);
	end if;
else
	open C01;
	loop
	fetch C01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		insert into w_ap_lote_desdob(
			nr_sequencia,
			nr_seq_lote,
			nr_seq_item,
			nr_seq_mat_hor,
			qt_original,
			qt_ajuste,			
			cd_material,
			cd_material_orig)
		values (	nextval('w_ap_lote_desdob_seq'),
			nr_seq_lote_p,
			c01_w.nr_sequencia,
			c01_w.nr_seq_mat_hor,
			c01_w.qt_dispensar,
			CASE WHEN ie_origem_w='E' THEN  0  ELSE c01_w.qt_dispensar END ,
			c01_w.cd_material,
			c01_w.cd_material);
		end;
	end loop;
	close C01;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_ap_lote_desdob ( nr_seq_lote_p bigint, nr_seq_item_p bigint, nr_seq_mat_hor_p bigint, qt_original_p bigint, qt_ajuste_p bigint, ie_origem_p text default null) FROM PUBLIC;

