-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_82 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Validar rescisao do beneficiario conforme item da conta
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatarios [ ] Outros:
*/
dados_tb_sel_w			pls_tipos_ocor_pck.dados_table_selecao_ocor;
dados_tb_selecao_w		pls_tipos_ocor_pck.dados_table_selecao_ocor;
nr_idx_w			integer := 0;

-- Informacoes da validacao de periodo de internacao com relacao ao item
C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	coalesce(a.ie_valida_limite_utilizacao, 'N') ie_valida_limite_utilizacao,
		coalesce(a.ie_autorizacao_valida,'N') ie_autorizacao_valida
	from	pls_oc_cta_val_resc_item a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia 				nr_seq_selecao,
		sel.dt_item,
		fim_dia(coalesce(seg.dt_limite_utilizacao,seg.dt_rescisao))	dt_limite_utilizacao,
		'P' ie_tipo_item,
		conta.nr_seq_guia
	from	pls_oc_cta_selecao_ocor_v 	sel,
		pls_segurado			seg,
		pls_conta_v			conta
	where	sel.nr_id_transacao = nr_id_transacao_pc
	and	sel.ie_valido 		= 'S'
	and	sel.ie_tipo_registro	= 'P'
	and	sel.nr_seq_segurado	= seg.nr_sequencia
	and 	conta.nr_sequencia	= sel.nr_seq_conta
	
union all

	SELECT	sel.nr_sequencia 				nr_seq_selecao,
		sel.dt_item,
		fim_dia(coalesce(seg.dt_limite_utilizacao,seg.dt_rescisao))	dt_limite_utilizacao,
		'M' ie_tipo_item,	
		conta.nr_seq_guia
	from	pls_oc_cta_selecao_ocor_v 	sel,
		pls_segurado			seg,
		pls_conta_v			conta
	where	sel.nr_id_transacao = nr_id_transacao_pc
	and	sel.ie_tipo_registro	= 'M'
	and	sel.ie_valido 		= 'S'
	and	sel.nr_seq_segurado	= seg.nr_sequencia
	and 	conta.nr_sequencia	= sel.nr_seq_conta;

BEGIN

-- Deve existir informacao da regra para aplicar a validacao
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then
	
	for	r_C01_w in C01(dados_regra_p.nr_sequencia) loop
		
		/*Verifica se e para validar a ocorrencia*/

		if (r_C01_w.ie_valida_limite_utilizacao = 'S') or (r_C01_w.ie_autorizacao_valida = 'S')	then
			
			CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);
			pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_sel_w);
			
			for r_C02_w in C02(nr_id_transacao_p) loop
				
				if (r_C02_w.dt_limite_utilizacao IS NOT NULL AND r_C02_w.dt_limite_utilizacao::text <> '') and (r_C02_w.dt_item IS NOT NULL AND r_C02_w.dt_item::text <> '') and (r_C02_w.dt_item	> r_C02_w.dt_limite_utilizacao) and
					(((coalesce(r_C02_w.nr_seq_guia::text, '') = '') 
					and (r_C01_w.ie_autorizacao_valida = 'S'))
					or (r_C01_w.ie_autorizacao_valida = 'N'))then
					
					dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
					dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
					dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Beneficiario com limite utilizacao ' || to_char(r_C02_w.dt_limite_utilizacao,'dd/mm/yyyy') ||
											   ' e a data do item para ' || to_char(r_C02_w.dt_item,'dd/mm/yyyy');
					
					if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
						CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
												'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
						nr_idx_w := 0;
						pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
					else
						nr_idx_w := nr_idx_w + 1;
					end if;
				end if;
			end loop;
			
			
			/*Lanca as glosas caso existir registros que nao foram gerados*/

			if (nr_idx_w > 0)	then
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
										'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
			end if;
			
			CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
		end if;

	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_82 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

