-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_opm ( nr_prescricao_p bigint, cd_material_p bigint, ds_alerta_p INOUT text, ds_abort_p INOUT text) AS $body$
DECLARE

				 
qt_dias_limite_w	smallint;
qt_idade_w		varchar(15);
cd_procedimento_w	bigint;
cd_pessoa_fisica_w	varchar(15);
ie_consistencia_w	varchar(15);
ie_consistencia_ww	varchar(15);
qt_dias_limite_ww	varchar(15);
nr_prescricao_w		bigint;

C01 CURSOR FOR 
	SELECT	qt_dias_limite, 
		ie_consistencia 
	from	regra_prescr_opm 
	where	coalesce(cd_material,cd_material_p) 			= cd_material_p 
	and	coalesce(cd_procedimento,coalesce(cd_procedimento_w,0))	= coalesce(cd_procedimento_w,0) 
	and	qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999) 
	order by	coalesce(cd_material,0), 
			coalesce(cd_procedimento,0);
			

BEGIN 
 
if (coalesce(nr_prescricao_p,0) > 0) and (coalesce(cd_material_p,0) > 0) then 
	cd_procedimento_w := sus_obter_proc_material_opm(cd_material_p);
 
	select	obter_dados_pf(max(cd_pessoa_fisica),'I'), 
		max(cd_pessoa_fisica) 
	into STRICT	qt_idade_w, 
		cd_pessoa_fisica_w 
	from 	prescr_medica 
	where	nr_prescricao = nr_prescricao_p;
	 
	open C01;
	loop 
	fetch C01 into	 
		qt_dias_limite_w, 
		ie_consistencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		qt_dias_limite_ww 	:= qt_dias_limite_w;
		ie_consistencia_ww	:= ie_consistencia_w;
		end;
	end loop;
	close C01;
	 
	select	max(a.nr_prescricao) 
	into STRICT	nr_prescricao_w 
	from	prescr_medica a, 
		prescr_opm b 
	where	a.nr_prescricao		= b.nr_prescricao 	 
	and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w 
	and	coalesce(a.dt_suspensao::text, '') = '' 
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and	a.nr_prescricao 	<> nr_prescricao_p 
	and	a.dt_prescricao		between clock_timestamp() - qt_dias_limite_w and clock_timestamp() 
	and	((b.cd_material = cd_material_p) or (sus_obter_proc_material_opm(b.cd_material) = cd_procedimento_w));
	 
	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then 
		if (ie_consistencia_ww = 'B') then 
			--Esta OPM já foi prescrita para o paciente na prescrição #@NR_PRESCRICAO#@! 
			ds_abort_p	:= substr(obter_texto_dic_objeto(456404,wheb_usuario_pck.get_nr_seq_idioma,'NR_PRESCRICAO=' ||nr_prescricao_w|| ';'),1,255);
		elsif (ie_consistencia_ww = 'A') then 
			ds_alerta_p	:= substr(obter_texto_dic_objeto(456404,wheb_usuario_pck.get_nr_seq_idioma,'NR_PRESCRICAO=' ||nr_prescricao_w|| ';'),1,255);
		end if;
	end if;
end if;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_opm ( nr_prescricao_p bigint, cd_material_p bigint, ds_alerta_p INOUT text, ds_abort_p INOUT text) FROM PUBLIC;

