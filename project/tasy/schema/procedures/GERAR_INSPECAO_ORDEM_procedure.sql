-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_inspecao_ordem ( nr_sequencia_p bigint, nm_usuario_p text, nr_nota_fiscal_p text, nr_seq_registro_p bigint, ds_erro_p INOUT text, dt_entrega_p timestamp default null) AS $body$
DECLARE


cd_pessoa_responsavel_w		varchar(10);
cd_cgc_fornecedor_w		varchar(14);
cd_pessoa_fisica_w		varchar(10);
nr_ordem_compra_w		bigint;
cd_estabelecimento_w		smallint;
dt_aprovacao_w			timestamp;
cd_material_w			integer;
qt_prevista_entrega_w		double precision;
nr_item_oci_w			integer;
vl_unitario_material_w		double precision;
nr_sequencia_w			bigint;
pr_desconto_w			double precision;
vl_desconto_w			double precision;
cd_condicao_pagamento_w		bigint;
ds_material_direto_w		varchar(255);
VarBusca_quantidade_oc_w	varchar(15);
VarBusca_valor_oc_w		varchar(15);
nr_seq_nao_conf_w		bigint;
ds_ordens_w			varchar(255);
dt_entrega_atrada_w		timestamp;
ie_consiste_ent_atrasada_w	varchar(1);
cd_perfil_ativo_w		perfil.cd_perfil%type;

nr_seq_inspecao_w		bigint;
qt_inspecao_w			integer;
qt_original_w			ordem_compra_item.qt_original%TYPE;
nr_seq_marca_w			ordem_compra_item.nr_seq_marca%type;
ds_delivery_location_w varchar(255);

/* Parametro [ 44 ]  */

ie_forma_contagem_inspecao_w	varchar(1) := 'I';
/* Parametro [ 46 ]  */

ie_exige_segunda_contagem_w	varchar(1) := 'N';
/*Parametro [ 85 ] */

ie_copia_inf_valor_contagens_w varchar(1) := 'N';

c01 CURSOR FOR
SELECT	a.nr_ordem_compra,
	a.cd_cgc_fornecedor,
	a.cd_pessoa_fisica,
	a.dt_aprovacao,
	b.cd_material,
	b.nr_item_oci,
	b.vl_unitario_material,
	c.nr_sequencia,
	c.qt_prevista_entrega - obter_qt_inspecao(a.nr_ordem_compra,b.nr_item_oci,c.dt_prevista_entrega),
	b.pr_descontos,
	b.vl_desconto,
	a.cd_condicao_pagamento,
	ds_material_direto,
	qt_original,
	b.nr_seq_marca
FROM	ordem_compra a,
	ordem_compra_item b,
	ordem_compra_item_entrega c
WHERE	a.nr_ordem_compra = b.nr_ordem_compra
AND	b.nr_ordem_compra = c.nr_ordem_compra
AND	b.nr_item_oci = c.nr_item_oci
AND	c.nr_sequencia = nr_sequencia_p;


BEGIN

SELECT	a.cd_estabelecimento
INTO STRICT	cd_estabelecimento_w
FROM	ordem_compra a,
	ordem_compra_item b,
	ordem_compra_item_entrega c
WHERE	a.nr_ordem_compra = b.nr_ordem_compra
AND	b.nr_ordem_compra = c.nr_ordem_compra
AND	b.nr_item_oci = c.nr_item_oci
AND	c.nr_sequencia = nr_sequencia_p;

select	obter_perfil_ativo
into STRICT	cd_perfil_ativo_w
;

VarBusca_quantidade_oc_w := obter_param_usuario(270, 25, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w, VarBusca_quantidade_oc_w);
VarBusca_valor_oc_w := obter_param_usuario(270, 26, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w, VarBusca_valor_oc_w);
ie_forma_contagem_inspecao_w := obter_param_usuario(270, 44, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w, ie_forma_contagem_inspecao_w);
ie_exige_segunda_contagem_w := obter_param_usuario(270, 46, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w, ie_exige_segunda_contagem_w);
nr_seq_nao_conf_w := obter_param_usuario(270, 73, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w, nr_seq_nao_conf_w);
ie_copia_inf_valor_contagens_w := obter_param_usuario(270, 85, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w, ie_copia_inf_valor_contagens_w);
ie_consiste_ent_atrasada_w := obter_param_usuario(270, 106, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w, ie_consiste_ent_atrasada_w);

OPEN C01;
LOOP
FETCH C01 INTO
	nr_ordem_compra_w,
	cd_cgc_fornecedor_w,
	cd_pessoa_fisica_w,
	dt_aprovacao_w,
	cd_material_w,
	nr_item_oci_w,
	vl_unitario_material_w,
	nr_sequencia_w,
	qt_prevista_entrega_w,
	pr_desconto_w,
	vl_desconto_w,
	cd_condicao_pagamento_w,
	ds_material_direto_w,
	qt_original_w,
	nr_seq_marca_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN

	SELECT	COUNT(*)
	INTO STRICT	qt_inspecao_w
	FROM	inspecao_recebimento
	WHERE	nr_ordem_compra = nr_ordem_compra_w;
	
	IF (qt_inspecao_w > 0) THEN
	
		vl_desconto_w	:= dividir((qt_prevista_entrega_w * vl_desconto_w), qt_original_w);
	END IF;
	
	IF (coalesce(dt_aprovacao_w::text, '') = '') THEN
		/*Esta ordem de compra nao foi aprovada*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(218062);
	ELSE
		SELECT	coalesce(MAX(SUBSTR(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10)),'X')
		INTO STRICT	cd_pessoa_responsavel_w
		;

		IF (cd_pessoa_responsavel_w = 'X') THEN
			/*Usuario deve estar vinculado com uma pessoa fisica.*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(218063);
		END IF;

		IF (VarBusca_quantidade_oc_w = 'N') THEN
			qt_prevista_entrega_w	:= 0;
		END IF;
		IF (VarBusca_valor_oc_w = 'N') THEN
			vl_unitario_material_w	:= 0;
		END IF;
		if (ie_consiste_ent_atrasada_w = 'S') then
		
			select	min(b.dt_prevista_entrega)
			into STRICT	dt_entrega_atrada_w
			from	ordem_compra_item_entrega b,
				ordem_compra_item a
			where	a.nr_ordem_compra = b.nr_ordem_compra
			and	a.nr_item_oci = b.nr_item_oci
			and (b.qt_prevista_entrega - obter_qt_inspecao(a.nr_ordem_compra,a.nr_item_oci,b.dt_prevista_entrega)) > 0
			and	coalesce(b.qt_prevista_entrega,0) > coalesce(b.qt_real_entrega,0)
			and	coalesce(b.dt_cancelamento::text, '') = ''
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prevista_entrega) < ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrega_p)
			and	a.nr_ordem_compra = nr_ordem_compra_w
			and	a.cd_material = cd_material_w;
			
			if (dt_entrega_atrada_w IS NOT NULL AND dt_entrega_atrada_w::text <> '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(410448,'DT_ENTREGA_ATRASADA_W='||dt_entrega_atrada_w);				
			end if;
			
		end if;

		SELECT	nextval('inspecao_recebimento_seq')
		INTO STRICT	nr_seq_inspecao_w
		;

    SELECT substr(obter_desc_delivery_location(nr_ordem_compra_w),1,255)
    INTO STRICT ds_delivery_location_w
;

		INSERT INTO inspecao_recebimento(
			nr_sequencia,
			cd_cgc,
			cd_pessoa_fisica,
			cd_material,
			nr_nota_fiscal,
			dt_recebimento,
			dt_atualizacao,
			nm_usuario,
			ds_lote_fornec,
			dt_validade,
			qt_inspecao,
			ie_externo,
			ie_interno,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_responsavel,
			ie_temperatura,
			ie_laudo,
			nr_ordem_compra,
			ie_motivo_devolucao,
			nr_item_oci,
			vl_unitario_material,
			dt_entrega_real,
			nr_seq_entrega,
			nr_seq_registro,
			pr_desconto,
			vl_desconto,
			cd_condicao_pagamento,
			ds_material_direto,
			nr_seq_tipo_nao_conf,
			nr_seq_marca,
      ds_delivery_location)
		VALUES (	nr_seq_inspecao_w,
			cd_cgc_fornecedor_w,
			cd_pessoa_fisica_w,
			cd_material_w,
			coalesce(nr_nota_fiscal_p,NULL),
			ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()),
			clock_timestamp(),
			nm_usuario_p,
			'',
			NULL,
			qt_prevista_entrega_w,
			'N',
			'N',
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_responsavel_w,
			'',
			'N',
			nr_ordem_compra_w,
			'',
			nr_item_oci_w,
			vl_unitario_material_w,
			ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()),
			nr_sequencia_w,
			CASE WHEN nr_seq_registro_p=0 THEN ''  ELSE nr_seq_registro_p END ,
			pr_desconto_w,
			vl_desconto_w,
			cd_condicao_pagamento_w,
			ds_material_direto_w,
			nr_seq_nao_conf_w,
			nr_seq_marca_w,
      ds_delivery_location_w);

		/* Inspecao Contagem - Gera as inspecoes para Primeira e Segunda contagem */

		IF (ie_exige_segunda_contagem_w = 'S') AND (ie_forma_contagem_inspecao_w <> 'A') AND (nr_seq_registro_p <> 0) AND (ie_copia_inf_valor_contagens_w = 'S') THEN
			BEGIN
			INSERT INTO inspecao_contagem(
				nr_sequencia,
				nr_seq_inspecao,
				nr_seq_registro,
				nr_seq_contagem,
				nr_ordem_compra,
				nr_item_oci,
				cd_material,
				dt_atualizacao,
				nm_usuario,
				qt_inspecao,
				ie_externo,
				ie_interno,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_temperatura,
				ie_laudo,
				ie_motivo_devolucao,
				vl_unitario_material,
				dt_entrega_real,
				pr_desconto,
				vl_desconto,
				cd_condicao_pagamento,
				nr_seq_entrega,
				nr_seq_marca)
			VALUES (nextval('inspecao_contagem_seq'),
				nr_seq_inspecao_w,
				nr_seq_registro_p,
				1, -- Primeira Contagem
				nr_ordem_compra_w,
				nr_item_oci_w,
				cd_material_w,
				clock_timestamp(), -- dt_atualizacao
				nm_usuario_p,
				qt_prevista_entrega_w, -- qt_inspecao
				'N', -- ie_externo
				'N', -- ie_interno
				clock_timestamp(),
				nm_usuario_p,
				'', -- ie_temperatura
				'N', -- ie_laudo
				'', -- ie_motivo_devolucao
				vl_unitario_material_w, -- vl_unitario_material
				ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()), -- dt_entrega_real
				pr_desconto_w, -- pr_desconto
				vl_desconto_w, -- vl_desconto
				cd_condicao_pagamento_w, -- cd_condicao_pagamento
				nr_sequencia_p,
				nr_seq_marca_w);


			INSERT INTO inspecao_contagem(
				nr_sequencia,
				nr_seq_inspecao,
				nr_seq_registro,
				nr_seq_contagem,
				nr_ordem_compra,
				nr_item_oci,
				cd_material,
				dt_atualizacao,
				nm_usuario,
				qt_inspecao,
				ie_externo,
				ie_interno,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_temperatura,
				ie_laudo,
				ie_motivo_devolucao,
				vl_unitario_material,
				dt_entrega_real,
				pr_desconto,
				vl_desconto,
				cd_condicao_pagamento,
				nr_seq_entrega,
				nr_seq_marca)
			VALUES (nextval('inspecao_contagem_seq'),
				nr_seq_inspecao_w,
				nr_seq_registro_p,
				2, -- Primeira Contagem
				nr_ordem_compra_w,
				nr_item_oci_w,
				cd_material_w,
				clock_timestamp(), -- dt_atualizacao
				nm_usuario_p,
				qt_prevista_entrega_w, -- qt_inspecao
				'N', -- ie_externo
				'N', -- ie_interno
				clock_timestamp(),
				nm_usuario_p,
				'', -- ie_temperatura
				'N', -- ie_laudo
				'', -- ie_motivo_devolucao
				vl_unitario_material_w, -- vl_unitario_material
				ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()), -- dt_entrega_real
				pr_desconto_w, -- pr_desconto
				vl_desconto_w, -- vl_desconto
				cd_condicao_pagamento_w, -- cd_condicao_pagamento
				nr_sequencia_p,
				nr_seq_marca_w);
			END;
		ELSIF (ie_exige_segunda_contagem_w = 'S') AND (ie_forma_contagem_inspecao_w <> 'A') AND (nr_seq_registro_p <> 0) AND (ie_copia_inf_valor_contagens_w = 'N') THEN
				BEGIN
				INSERT INTO inspecao_contagem(
					nr_sequencia,
					nr_seq_inspecao,
					nr_seq_registro,
					nr_seq_contagem,
					nr_ordem_compra,
					nr_item_oci,
					cd_material,
					dt_atualizacao,
					nm_usuario,
					qt_inspecao,
					ie_externo,
					ie_interno,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_temperatura,
					ie_laudo,
					ie_motivo_devolucao,
					vl_unitario_material,
					dt_entrega_real,
					pr_desconto,
					vl_desconto,
					cd_condicao_pagamento,
					nr_seq_entrega,
					nr_seq_marca)
				VALUES (nextval('inspecao_contagem_seq'),
					nr_seq_inspecao_w,
					nr_seq_registro_p,
					1, -- Primeira Contagem
					nr_ordem_compra_w,
					nr_item_oci_w,
					cd_material_w,
					clock_timestamp(), -- dt_atualizacao
					nm_usuario_p,
					qt_prevista_entrega_w, -- qt_inspecao
					'N', -- ie_externo
					'N', -- ie_interno
					clock_timestamp(),
					nm_usuario_p,
					'', -- ie_temperatura
					'N', -- ie_laudo
					'', -- ie_motivo_devolucao
					NULL, -- vl_unitario_material
					ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()), -- dt_entrega_real
					'', -- pr_desconto
					'', -- vl_desconto
					'', -- cd_condicao_pagamento
					nr_sequencia_p,
					nr_seq_marca_w);

				INSERT INTO inspecao_contagem(
					nr_sequencia,
					nr_seq_inspecao,
					nr_seq_registro,
					nr_seq_contagem,
					nr_ordem_compra,
					nr_item_oci,
					cd_material,
					dt_atualizacao,
					nm_usuario,
					qt_inspecao,
					ie_externo,
					ie_interno,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_temperatura,
					ie_laudo,
					ie_motivo_devolucao,
					vl_unitario_material,
					dt_entrega_real,
					pr_desconto,
					vl_desconto,
					cd_condicao_pagamento,
					nr_seq_entrega,
					nr_seq_marca)
				VALUES (nextval('inspecao_contagem_seq'),
					nr_seq_inspecao_w,
					nr_seq_registro_p,
					2, -- Primeira Contagem
					nr_ordem_compra_w,
					nr_item_oci_w,
					cd_material_w,
					clock_timestamp(), -- dt_atualizacao
					nm_usuario_p,
					qt_prevista_entrega_w, -- qt_inspecao
					'N', -- ie_externo
					'N', -- ie_interno
					clock_timestamp(),
					nm_usuario_p,
					'', -- ie_temperatura
					'N', -- ie_laudo
					'', -- ie_motivo_devolucao
					NULL, -- vl_unitario_material
					ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()), -- dt_entrega_real
					'', -- pr_desconto
					'', -- vl_desconto
					'', -- cd_condicao_pagamento
					nr_sequencia_p,
					nr_seq_marca_w);
				END;
		END IF;

	END IF;
	END;
END LOOP;
CLOSE C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;


END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_inspecao_ordem ( nr_sequencia_p bigint, nm_usuario_p text, nr_nota_fiscal_p text, nr_seq_registro_p bigint, ds_erro_p INOUT text, dt_entrega_p timestamp default null) FROM PUBLIC;

