-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_regra_lanc (nm_usuario_p text) AS $body$
DECLARE


nm_atributo_w 			tabela_atributo.nm_atributo%type;
nm_tabela_referencia_w 		integridade_referencial.nm_tabela_referencia%type;
ds_evento_w			evento_tasy.nm_evento%type;
nr_seq_evento_w			evento_tasy.nr_sequencia%type;
nr_sequencia_regra_w		regra_lanc_automatico.nr_sequencia%type;
nr_seq_consiste_regra_w 		w_consiste_regra_lanc.nr_sequencia%type;
ds_expressao_atrib_w		dic_expressao.ds_expressao_br%type;
nm_atributo_ref_w			indice_atributo.nm_atributo%type;
cd_dominio_w			bigint;
ds_atributo_ref_w       		varchar(30);
vl_atributo_ref_w       		varchar(30);
vl_inativo_w			varchar(30);
ds_sql				varchar(255);
ie_existe_ie_situacao_w		varchar(1);


cur1 REFCURSOR;
cur2 REFCURSOR;

-- buscando atributos da tabela regra_lanc_automatico
c01 CURSOR FOR
SELECT 	ta.nm_atributo
from 	tabela_atributo ta
where 	ta.nm_tabela = 'REGRA_LANC_AUTOMATICO'
order by 	nm_atributo;


BEGIN

delete from w_consiste_regra_lanc;

open C01;
loop
fetch C01 into
	nm_atributo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	-- prior 1: atributos da tabela com filtro por ie_situacao no campo ds_valores
	select 	max(ir.nm_tabela_referencia),
		null vl_dominio,
		max(ex.ds_expressao_br)
	into STRICT	nm_tabela_referencia_w,
		cd_dominio_w,
		ds_expressao_atrib_w
	FROM integridade_referencial ir, integridade_atributo ia, tabela_atributo ta
LEFT OUTER JOIN dic_expressao ex ON (ta.cd_exp_label = ex.cd_expressao)
WHERE ta.nm_tabela = ia.nm_tabela and ta.nm_atributo = ia.nm_atributo and ia.nm_integridade_referencial = ir.nm_integridade_referencial  and ta.nm_tabela = 'REGRA_LANC_AUTOMATICO' and upper(ta.nm_atributo) = upper(nm_atributo_w) and upper(ta.nm_atributo) not in ('CD_PROCEDIMENTO','IE_ORIGEM_PROCED') and position('IE_SITUACAO' in upper(ta.ds_valores)) > 0 and position(chr(39) || 'A' || chr(39) in upper(ta.ds_valores)) > 0;

	-- prior 2: atributos da tabela com integridade referencial sem filtro por ie_situacao
	if coalesce(nm_tabela_referencia_w::text, '') = '' then

		select 	max(ir.nm_tabela_referencia),
			null vl_dominio,
			max(ex.ds_expressao_br)
		into STRICT	nm_tabela_referencia_w,
			cd_dominio_w,
			ds_expressao_atrib_w
		FROM integridade_referencial ir, integridade_atributo ia, tabela_atributo ta
LEFT OUTER JOIN dic_expressao ex ON (ta.cd_exp_label = ex.cd_expressao)
WHERE ta.nm_tabela = ia.nm_tabela and ta.nm_atributo = ia.nm_atributo and ia.nm_integridade_referencial = ir.nm_integridade_referencial  and ta.nm_tabela = 'REGRA_LANC_AUTOMATICO' and upper(ta.nm_atributo) = upper(nm_atributo_w) and upper(ta.nm_atributo) not in ('CD_PROCEDIMENTO','IE_ORIGEM_PROCED') and coalesce(ta.ds_valores::text, '') = '';

	end if;

	-- prior 3: campos da visão que apenas restringem o valor por ie_situacao no campo ds_valores
	if coalesce(nm_tabela_referencia_w::text, '') = '' then

		select 	upper(trim(both replace(
			replace(
			elimina_caracteres_especiais(max(substr(va.ds_valores, position('FROM' in upper(va.ds_valores)) + 4,
			position('WHERE' in upper(va.ds_valores)) - 5 - position('FROM' in upper(va.ds_valores))))),
			chr(13),''),
			chr(10),''))) nm_tabela_referencia,
			null vl_dominio,
			max(ex.ds_expressao_br)
		into STRICT	nm_tabela_referencia_w,
			cd_dominio_w,
			ds_expressao_atrib_w
		FROM tabela_visao v, tabela_visao_atributo va
LEFT OUTER JOIN dic_expressao ex ON (va.cd_exp_label = ex.cd_expressao)
WHERE va.nr_sequencia = v.nr_sequencia  and v.nm_tabela = 'REGRA_LANC_AUTOMATICO' and upper(va.nm_atributo) = upper(nm_atributo_w) and upper(va.nm_atributo) not in ('CD_PROCEDIMENTO','IE_ORIGEM_PROCED') and (va.ds_valores IS NOT NULL AND va.ds_valores::text <> '') and position('FROM' in upper(va.ds_valores)) > 0 and position('WHERE' in upper(va.ds_valores)) > 0 and position('IE_SITUACAO' in upper(va.ds_valores)) > 0 and position('.' in upper(va.ds_valores)) = 0 and position('DOMINIO' in upper(va.ds_valores)) = 0;

	end if;

	-- prior 4: campos da tabela que possuem restrição de domínio
	if coalesce(nm_tabela_referencia_w::text, '') = '' then

		select 	'VALOR_DOMINIO_V' nm_tabela_referencia,
		       	max(ta.cd_dominio) vl_dominio,
			max(ex.ds_expressao_br)
		into STRICT	nm_tabela_referencia_w,
			cd_dominio_w,
			ds_expressao_atrib_w
		FROM tabela_atributo ta
LEFT OUTER JOIN dic_expressao ex ON (ta.cd_exp_label = ex.cd_expressao)
WHERE ta.nm_tabela = 'REGRA_LANC_AUTOMATICO' and upper(ta.nm_atributo) = upper(nm_atributo_w) and upper(ta.nm_atributo) not in ('CD_PROCEDIMENTO','IE_ORIGEM_PROCED') and (ta.cd_dominio IS NOT NULL AND ta.cd_dominio::text <> '');

		-- prior 5: campos da visão que possuem restrição de domínio
		if (coalesce(cd_dominio_w::text, '') = '') then

			select 	'VALOR_DOMINIO_V' nm_tabela_referencia,
				max(va.cd_dominio) vl_dominio,
				max(ex.ds_expressao_br)
			into STRICT	nm_tabela_referencia_w,
				cd_dominio_w,
				ds_expressao_atrib_w
			FROM tabela_visao v, tabela_visao_atributo va
LEFT OUTER JOIN dic_expressao ex ON (va.cd_exp_label = ex.cd_expressao)
WHERE va.nr_sequencia = v.nr_sequencia  and v.nm_tabela = 'REGRA_LANC_AUTOMATICO' and upper(va.nm_atributo) = upper(nm_atributo_w) and upper(va.nm_atributo) not in ('CD_PROCEDIMENTO','IE_ORIGEM_PROCED') and (va.cd_dominio IS NOT NULL AND va.cd_dominio::text <> '');

		end if;

		-- prior 6: campos da visão que possuem restrição de domínio no campo ds_valores
		if (coalesce(cd_dominio_w::text, '') = '') then

			select 	'VALOR_DOMINIO_V' nm_tabela_referencia,
				somente_numero(upper(trim(both replace(
				replace(
				max(substr(va.ds_valores, position('CD_DOMINIO' in upper(va.ds_valores)) + 10, 13)),
				chr(13),''),
				chr(10),'')))) vl_dominio,
				max(ex.ds_expressao_br)
			into STRICT	nm_tabela_referencia_w,
				cd_dominio_w,
				ds_expressao_atrib_w
			FROM tabela_visao v, tabela_visao_atributo va
LEFT OUTER JOIN dic_expressao ex ON (va.cd_exp_label = ex.cd_expressao)
WHERE va.nr_sequencia = v.nr_sequencia  and v.nm_tabela = 'REGRA_LANC_AUTOMATICO' and upper(va.nm_atributo) = upper(nm_atributo_w) and va.nm_atributo not in ('CD_PROCEDIMENTO','IE_ORIGEM_PROCED') and (va.ds_valores IS NOT NULL AND va.ds_valores::text <> '') and position('FROM' in upper(va.ds_valores)) > 0 and position('WHERE' in upper(va.ds_valores)) > 0 and position('IE_SITUACAO' in upper(va.ds_valores)) > 0 and position('DOMINIO' in upper(va.ds_valores)) > 0;

		end if;
	end if;

	-- verifica se tabela de referência possui restrição por ie_situacao
	select 	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
	into STRICT 	ie_existe_ie_situacao_w
	from 	tabela_atributo
	where 	nm_tabela	= nm_tabela_referencia_w
	and  	nm_atributo	= 'IE_SITUACAO';

	if ((coalesce(ie_existe_ie_situacao_w,'N') <> 'N') and (nm_tabela_referencia_w IS NOT NULL AND nm_tabela_referencia_w::text <> '') and (coalesce(cd_dominio_w::text, '') = '')) then

		-- buscar atributo chave da tabela referencia
		select 	max(ia.nm_atributo)
		into STRICT 	nm_atributo_ref_w
		from 	indice_atributo ia,
				indice i
		where	i.ie_tipo    = 'PK'
		and	i.nm_tabela  = ia.nm_tabela
		and	i.nm_indice  = ia.nm_indice
		and	ia.nm_tabela = nm_tabela_referencia_w;

		-- verifica se o atributo está com o registro destino da integridade com ie_situacao <> 'A'
		open cur1 for EXECUTE 'select	distinct a.'|| nm_atributo_w ||
				'  from	regra_lanc_automatico a '    ||
				' where	a.ie_situacao = ' || chr(39) || 'A'     || chr(39) ||
				'   and a.' || nm_atributo_w || ' in (select b.'|| nm_atributo_ref_w      ||
				'       from '  || nm_tabela_referencia_w || ' b ' ||
				'      where b.ie_situacao <> '|| chr(39) || 'A'   || chr(39) || ')';
		loop
		fetch cur1 into
			vl_inativo_w;
		EXIT WHEN NOT FOUND; /* apply on cur1 */

			-- buscar campo de descrição ref. ao contéudo do lookup
			begin
				select 	nm_atributo
				into STRICT 	ds_atributo_ref_w
				from (
						SELECT 	nm_atributo
						from 	tabela_atributo
						where 	nm_tabela = nm_tabela_referencia_w
						and position('DS_' in nm_atributo) > 0
						order by nr_sequencia_criacao) alias1 LIMIT 1;
			exception
			when others then
				ds_atributo_ref_w := null;
			end;

			-- buscar conteúdo do campo de descrição ref. ao lookup
			if (ds_atributo_ref_w IS NOT NULL AND ds_atributo_ref_w::text <> '') then
			begin
				ds_sql := 'select max(' || ds_atributo_ref_w || ') from ' || nm_tabela_referencia_w || ' where ' || nm_atributo_ref_w || ' = '|| chr(39) || vl_inativo_w || chr(39);

				EXECUTE ds_sql into STRICT vl_atributo_ref_w;
			exception
			when others then
				null;
			end;

			end if;

			-- filtra as regras com o valor que está inativo na tabela de integridade
			open cur2 for EXECUTE 'select	distinct a.nr_sequencia, b.nm_evento, b.nr_sequencia '||
					'from	regra_lanc_automatico a,'||
					'     	evento_tasy b '||
					'where	a.nr_seq_evento = b.nr_sequencia '   ||
					'and 	'|| nm_atributo_w || ' = '|| chr(39) || vl_inativo_w || chr(39);
			loop
			fetch cur2 into
				nr_sequencia_regra_w,
				ds_evento_w,
				nr_seq_evento_w;
			EXIT WHEN NOT FOUND; /* apply on cur2 */

				select nextval('w_consiste_regra_lanc_seq')
				into STRICT nr_seq_consiste_regra_w
				;

				insert into w_consiste_regra_lanc(
							nr_sequencia,
							nr_seq_regra_lanc,
							nm_atributo,
							ds_atributo,
							nr_seq_evento,
							ds_evento,
							cd_valor_selecionado,
							ds_valor_selecionado,
							dt_atualizacao,
							nm_usuario)
						values (nr_seq_consiste_regra_w,
							nr_sequencia_regra_w,
							nm_atributo_w,
							coalesce(ds_expressao_atrib_w,nm_atributo_w),
							nr_seq_evento_w,
							ds_evento_w,
							substr(vl_inativo_w,1,10),
							coalesce(vl_atributo_ref_w, vl_inativo_w),
							clock_timestamp(),
							nm_usuario_p);

			end loop;
			close cur2;
		end loop;
		close cur1;

	end if;

	--tratamento dos dominios
	if (cd_dominio_w IS NOT NULL AND cd_dominio_w::text <> '') then

	open cur1 for EXECUTE 'select	distinct vl_dominio '||
			'  from	valor_dominio_v '    ||
			' where cd_dominio = '  || chr(39) || cd_dominio_w || chr(39) ||
			'   and ie_situacao <> '|| chr(39) || 'A'   || chr(39);
	loop
	fetch cur1 into
		vl_inativo_w;
	EXIT WHEN NOT FOUND; /* apply on cur1 */
		begin
			ds_sql := 	'select ds_expressao from valor_dominio_v '||
				'where cd_dominio = ' || chr(39) || cd_dominio_w || chr(39) ||
				' and vl_dominio = '  || chr(39) || vl_inativo_w || chr(39);

			EXECUTE ds_sql into STRICT vl_atributo_ref_w;
		exception
		when others then
			null;
		end;

		open cur2 for EXECUTE 'select	distinct a.nr_sequencia, b.nm_evento, b.nr_sequencia '||
				'from	regra_lanc_automatico a,'||
				'     	evento_tasy b '||
				'where	a.nr_seq_evento = b.nr_sequencia '   ||
				'and 	'|| nm_atributo_w || ' = '|| chr(39) || vl_inativo_w || chr(39);

		loop
		fetch cur2 into
			nr_sequencia_regra_w,
			ds_evento_w,
			nr_seq_evento_w;
		EXIT WHEN NOT FOUND; /* apply on cur2 */

			select nextval('w_consiste_regra_lanc_seq')
			into STRICT nr_seq_consiste_regra_w
			;

			insert into w_consiste_regra_lanc(
						nr_sequencia,
						nr_seq_regra_lanc,
						nm_atributo,
						ds_atributo,
						nr_seq_evento,
						ds_evento,
						cd_valor_selecionado,
						ds_valor_selecionado,
						dt_atualizacao,
						nm_usuario)
					values (nr_seq_consiste_regra_w,
						nr_sequencia_regra_w,
						nm_atributo_w,
						coalesce(ds_expressao_atrib_w,nm_atributo_w),
						nr_seq_evento_w,
						ds_evento_w,
						substr(vl_inativo_w,1,10),
						coalesce(vl_atributo_ref_w, vl_inativo_w),
						clock_timestamp(),
						nm_usuario_p);

		end loop;
		close cur2;
	end loop;
	close cur1;

	end if;

end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_regra_lanc (nm_usuario_p text) FROM PUBLIC;

