-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE apache_import_result_lab ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w	bigint;
nr_seq_exame_w		bigint;
qt_resultado_w		double precision;
ie_apache_II_w		varchar(3);

c01 CURSOR FOR
	SELECT	nr_seq_exame,
		ie_apache_II
	from	exame_laboratorio
	where	(ie_apache_II IS NOT NULL AND ie_apache_II::text <> '');

c02 CURSOR FOR
	SELECT 	b.qt_resultado
	from 	exame_lab_result_item b,
		exame_lab_resultado a,
		prescr_procedimento x,
		prescr_medica c
	where a.nr_seq_resultado = b.nr_seq_resultado
	and a.nr_prescricao  = c.nr_prescricao
	and x.nr_sequencia  = b.nr_seq_prescr
	and x.nr_prescricao  = c.nr_prescricao
	and b.nr_seq_exame  = nr_seq_exame_w
	and c.nr_atendimento = nr_atendimento_w
	and x.ie_status_atend >= 35
	and (b.qt_resultado IS NOT NULL AND b.qt_resultado::text <> '')
	order by b.dt_aprovacao;


BEGIN

select	coalesce(max(nr_atendimento),0)
into STRICT	nr_atendimento_w
from	apache
where	nr_sequencia = nr_sequencia_p;

open c01;
loop
fetch c01 into
	nr_seq_exame_w,
	ie_apache_II_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	if (nr_atendimento_w > 0) then

		qt_resultado_w	:= 0;

		open c02;
		loop
		fetch c02 into
			qt_resultado_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			qt_resultado_w	:= qt_resultado_w;
		end loop;
		close c02;

		if (coalesce(qt_resultado_w,0) <> 0) then
			if (ie_apache_II_w = '1') then
				begin
				update	apache
				set	qt_potassio_serico	= qt_resultado_w,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	nr_sequencia		= nr_sequencia_p
				and	coalesce(qt_potassio_serico::text, '') = '';
				exception
				when others then
					qt_resultado_w	:= 0;
				end;
			elsif (ie_apache_II_w = '2') then
				begin
				update	apache
				set	qt_bicarbonato_serico	= qt_resultado_w,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	nr_sequencia		= nr_sequencia_p
				and	coalesce(qt_bicarbonato_serico::text, '') = '';
				exception
				when others then
					qt_resultado_w	:= 0;
				end;
			elsif (ie_apache_II_w = '3') then
				begin
				update	apache
				set	qt_sodio_serico	= qt_resultado_w,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_sequencia	= nr_sequencia_p
				and	coalesce(qt_sodio_serico::text, '') = '';
				exception
				when others then
					qt_resultado_w	:= 0;
				end;
			elsif (ie_apache_II_w = '4') then
				begin
				update	apache
				set	qt_creatinina	= qt_resultado_w,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_sequencia	= nr_sequencia_p
				and	coalesce(qt_creatinina::text, '') = '';
				exception
				when others then
					qt_resultado_w	:= 0;
				end;
			elsif (ie_apache_II_w = '5') then
				begin
				update	apache
				set	qt_hematocrito	= qt_resultado_w,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_sequencia	= nr_sequencia_p
				and	coalesce(qt_hematocrito::text, '') = '';
				exception
				when others then
					qt_resultado_w	:= 0;
				end;
			elsif (ie_apache_II_w = '6') then
				begin
				update	apache
				set	qt_globulos_brancos	= qt_resultado_w,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	nr_sequencia		= nr_sequencia_p
				and	coalesce(qt_globulos_brancos::text, '') = '';
				exception
				when others then
					qt_resultado_w	:= 0;
				end;
			elsif (ie_apache_II_w = '7') then
				begin
				update	apache
				set	qt_ph_arterial	= qt_resultado_w,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	nr_sequencia		= nr_sequencia_p
				and	coalesce(qt_ph_arterial::text, '') = '';
				exception
				when others then
					qt_resultado_w	:= 0;
				end;
			end if;
		end if;

	end if;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE apache_import_result_lab ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

