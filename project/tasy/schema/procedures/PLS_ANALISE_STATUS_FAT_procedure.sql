-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_status_fat ( nr_seq_conta_p bigint, nr_seq_mat_p bigint, nr_seq_proc_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_proc_w			bigint;
nr_seq_mat_w			bigint;
nr_seq_item_analise_pagto_w	bigint;
nr_seq_analise_pgto_w		bigint;
nr_seq_item_analise_pos_w	bigint;
nr_seq_item_analise_pagto_ww	bigint;
nr_seq_proc_partic_w		bigint;
nr_seq_item_ref_w		bigint;
qt_participantes_w		bigint;
qt_itens_w			double precision;
qt_glosa_w			double precision;
vl_glosa_w			double precision;
qt_liberado_w			double precision;
vl_total_liberado_w		double precision;
vl_unitario_lib_w		double precision;
nr_seq_analise_pos_w		double precision;
nr_seq_analise_pagto_w		double precision;
vl_total_w			double precision;
vl_calc_faturado_w		double precision;
vl_glosa_ww			double precision;
vl_total_liberado_ww		double precision;
ie_faturamento_w		varchar(1) := 'N';
ie_faturamento_ww		varchar(1);
ie_glosa_w			varchar(1) := 'N';
ie_status_faturamento_w		varchar(1);
ie_pagamento_w			varchar(1);
ie_status_analise_pagto_w	varchar(1);
ie_origem_analise_w		varchar(1);
ie_status_pagto_w		varchar(2);
ie_pagamento_ww			varchar(2);
ie_status_fat_w			varchar(2);
ie_status_conta_w		varchar(10);
ie_status_item_fat_w		varchar(2);
qt_itens_glosa_w		bigint;
ie_controle_pos_estabelecido_w	pls_parametros.ie_controle_pos_estabelecido%type;
ie_cobrar_mensalidade_w		pls_conta_pos_estabelecido.ie_cobrar_mensalidade%type;

C01 CURSOR FOR
	SELECT	nr_seq_conta_proc,
		nr_seq_conta_mat
	from	w_pls_resumo_conta
	where	nr_seq_conta	= nr_seq_conta_p
	and	nr_seq_analise	= nr_seq_analise_p;

C02 CURSOR FOR
	SELECT	nr_seq_partic_proc,
		nr_sequencia
	from	w_pls_resumo_conta
	where	ie_tipo_item	= 'R'
	and	nr_seq_item_ref = nr_seq_proc_p
	and	nr_seq_analise	= nr_seq_analise_pos_w;


BEGIN
if (coalesce(nr_seq_mat_p,0) = 0) and (coalesce(nr_seq_proc_p,0) = 0) then
	open C01;
	loop
	fetch C01 into
		nr_seq_proc_w,
		nr_seq_mat_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if	((coalesce(nr_seq_proc_w,0) <> 0) or (coalesce(nr_seq_mat_w,0) <> 0)) then
			CALL pls_analise_status_fat(	nr_seq_conta_p,	nr_seq_mat_w, nr_seq_proc_w,
						nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p);
		end if;
		end;
	end loop;
	close C01;
else
	begin
	select	ie_status
	into STRICT	ie_status_conta_w
	from	pls_conta
	where	nr_sequencia	= nr_seq_conta_p;
	exception
	when others then
		ie_status_conta_w	:= null;
	end;

	begin
	select	ie_origem_analise
	into STRICT	ie_origem_analise_w
	from	pls_analise_conta
	where	nr_sequencia = nr_seq_analise_p;
	exception
	when others then
		ie_origem_analise_w	:= null;
	end;

	if (ie_origem_analise_w = '2') then
		/*Se for uma análse de pós.*/

		nr_seq_analise_pos_w := nr_seq_analise_p;

		begin
		select	nr_seq_analise_ref
		into STRICT	nr_seq_analise_pgto_w
		from	pls_analise_conta
		where	nr_sequencia = nr_seq_analise_p;
		exception
		when others then
			nr_seq_analise_pgto_w	:= null;
		end;
	else
		/*Se for uma análse de pagto.*/

		nr_seq_analise_pgto_w := nr_seq_analise_p;

		begin
		select	nr_sequencia
		into STRICT	nr_seq_analise_pos_w
		from	pls_analise_conta
		where	nr_seq_analise_ref = nr_seq_analise_p;
		exception
		when others then
			nr_seq_analise_pos_w	:= null;
		end;
	end if;

	select	max(ie_status)
	into STRICT	ie_status_analise_pagto_w
	from	pls_analise_conta
	where	nr_sequencia = nr_seq_analise_pgto_w;

	/*Obter o item de pagto.*/

	select	max(nr_sequencia)
	into STRICT	nr_seq_item_analise_pagto_w
	from	w_pls_resumo_conta
	where	nr_seq_conta		= nr_seq_conta_p
	and 	nr_seq_item		= nr_seq_proc_p
	and	ie_tipo_item		= 'P'
	and	nr_seq_analise		= nr_seq_analise_pgto_w;

	if (ie_origem_analise_w = '2') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_item_analise_pagto_w
		from	w_pls_resumo_conta
		where	nr_seq_conta		= nr_seq_conta_p
		and 	nr_seq_item		= nr_seq_proc_p
		and	ie_tipo_item		in ('P','R')
		and	nr_seq_analise		= nr_seq_analise_pgto_w;
	end if;

	select	max(nr_sequencia)
	into STRICT	nr_seq_item_analise_pagto_ww
	from	w_pls_resumo_conta
	where	nr_seq_conta	= nr_seq_conta_p
	and 	nr_seq_item 	= nr_seq_mat_p
	and	ie_tipo_item	= 'M'
	and	nr_seq_analise	= nr_seq_analise_pgto_w;

	if (coalesce(nr_seq_item_analise_pagto_ww,0) > coalesce(nr_seq_item_analise_pagto_w,0)) then
		nr_seq_item_analise_pagto_w	:= nr_seq_item_analise_pagto_ww;
	end if;

	/*Obter o item de fat.*/

	select	max(nr_sequencia)
	into STRICT	nr_seq_item_analise_pos_w
	from	w_pls_resumo_conta
	where	nr_seq_conta = nr_seq_conta_p
	and 	((nr_seq_item = nr_seq_proc_p AND ie_tipo_item = 'P')
	or 	 (nr_seq_item = nr_seq_mat_p AND ie_tipo_item = 'M'))
	and	nr_seq_analise = nr_seq_analise_pos_w;

	begin
	select	ie_status
	into STRICT	ie_status_item_fat_w
	from	w_pls_resumo_conta
	where	nr_sequencia	= nr_seq_item_analise_pos_w;
	exception
	when others then
		ie_status_item_fat_w := null;
	end;

	if (coalesce(nr_seq_item_analise_pos_w,0) > 0) and (ie_status_item_fat_w <> 'C') then
		begin
		select	vl_total,
			ie_status,
			ie_pagamento,
			nr_seq_item_ref
		into STRICT	vl_total_w,
			ie_status_pagto_w,
			ie_pagamento_w,
			nr_seq_item_ref_w
		from	w_pls_resumo_conta
		where	nr_sequencia = nr_seq_item_analise_pagto_w;
		exception
		when others then
			vl_total_w		:= null;
			ie_status_pagto_w	:= null;
			ie_pagamento_w		:= null;
		end;

		/*
		FATURAMENTO
		D	Amarelo	Pendente de análise
		L	Azul	Liberado para faturamento
		N	Vermelho	Não permite faturamento
		P	Verde	Permitido faturamento
		U	Branco	Usuário (Aguardando Ação)

		PAGAMENTO
		L	Amarelo 	Liberado Usuário
		S 	Verde	Liberado Sistema
		I 	Azul	Informativo
		C 	Preto	Cancelado
		P 	Vermelho	Pendente
		*/
		/*Se o item já foi liberado PAGAMENTO */

		if (ie_status_pagto_w in ('P', 'L', 'S', 'C')) then
			/*Se possui valor liberado no item de pagamento a mesmo deve ser setada para "Permite faturamento".   - OS 459304 - ebcabral - Alterado para não consistir o status do pagamento para liberar para faturamento.*/

			/*if	(nvl(vl_total_w,0) > 0) then

				/*Se o pagamento foi glosado não é realizado a liberação.
				if	(ie_pagamento_w = 'G') then

					select	count(nr_sequencia)
					into	qt_itens_w
					from	w_pls_resumo_conta
					where	nr_seq_item_ref = nr_seq_item_ref_w
					and	nr_seq_analise  = nr_seq_analise_p;

					select	count(nr_sequencia)
					into	qt_itens_glosa_w
					from	w_pls_resumo_conta
					where	nr_seq_item_ref = nr_seq_item_ref_w
					and	nr_seq_analise  = nr_seq_analise_p
					and	ie_faturamento  = 'G';

					if	(qt_itens_glosa_w = 0) then
						ie_faturamento_ww := 'L';
					elsif	(qt_itens_w = qt_itens_glosa_w) then
						ie_faturamento_ww := 'G';
					elsif	(qt_itens_w > qt_itens_glosa_w) then
						ie_faturamento_ww := 'P';
					end if;

					update	w_pls_resumo_conta
					set	ie_faturamento	= ie_faturamento_ww,
						vl_total    	= vl_calculado,
						ie_status	= 'N',
						dt_atualizacao	= sysdate,
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_item_analise_pos_w;

					ie_status_faturamento_w := 'N';
					ie_faturamento_w 	:= 'N';
				else	*/
					select	count(nr_sequencia)
					into STRICT	qt_itens_w
					from	(SELECT	nr_sequencia
						from	pls_analise_conta_item
						where	nr_seq_conta 	= nr_seq_conta_p
						and	(((coalesce(nr_seq_proc_partic,0) = 0) and (coalesce(nr_seq_conta_proc,0) = 0) and (coalesce(nr_seq_conta_mat,0) = 0))
						or	 ((nr_seq_conta_proc = nr_seq_proc_p) or (nr_seq_conta_mat = nr_seq_mat_p)))
						and	ie_tipo_glosa in ('A','F')
						and 	coalesce(ie_status_faturamento, ie_status) in ('N','P')
						and	nr_seq_analise = nr_seq_analise_pgto_w
						
union

						SELECT	nr_sequencia
						from	pls_analise_conta_item
						where	((nr_seq_conta_proc = nr_seq_proc_p) or (nr_seq_conta_mat = nr_seq_mat_p))
						and	coalesce(ie_status_faturamento, ie_status)	in ('N','P')
						and	nr_seq_analise	= nr_seq_analise_pos_w) alias22 LIMIT 1;

					/*A não ser que possui ocorrências no pagamento que indicam que não deve ser realizado o faturamento.
					    Não importa o status da ocorrência. Existindo não paga.*/
					if (qt_itens_w > 0) then
						 --Não permite faturamento
						update	w_pls_resumo_conta
						set	ie_faturamento	= 'G',
							vl_total    	= 0,
							ie_status	= 'N',
							dt_atualizacao	= clock_timestamp(),
							nm_usuario	= nm_usuario_p
						where	nr_sequencia	= nr_seq_item_analise_pos_w;

						ie_status_faturamento_w := 'N';
						ie_faturamento_w 	:= 'S';
					else
						/*Verificar se existe ocorrências de pós. pendente*/

						select	count(nr_sequencia)
						into STRICT	qt_itens_w
						from	pls_analise_conta_item
						where	((nr_seq_conta_proc 	= nr_seq_proc_p) or (nr_seq_conta_mat = nr_seq_mat_p))
						and	coalesce(ie_status_faturamento, ie_status)	= 'P'
						and	nr_seq_analise		= nr_seq_analise_pos_w  LIMIT 1;

						if (qt_itens_w = 0) then
							/*Se não existe  verifica-se se existe valor calculado para liberar*/

							select	max(vl_calculado)
							into STRICT	vl_calc_faturado_w
							from	w_pls_resumo_conta
							where	nr_sequencia = nr_seq_item_analise_pos_w;

							if (coalesce(vl_calc_faturado_w,0) > 0) then
								--Permitido faturamento
								update	w_pls_resumo_conta
								set	vl_total    	= vl_calculado,
									ie_status	= 'L',
									dt_atualizacao	= clock_timestamp(),
									nm_usuario	= nm_usuario_p,
									ie_faturamento	= 'L'
								where	nr_sequencia	= nr_seq_item_analise_pos_w;
								ie_status_faturamento_w := 'P';
								ie_faturamento_w 	:= 'S';
							else
								/*Será atualizado que não será realizado o faturamento para indicar a falta de valor de faturamento
								OS 426803 Hist. 17/04/2012 11:27:52*/
								update	w_pls_resumo_conta
								set	ie_faturamento	= 'G',
									vl_total    	= vl_calculado,
									ie_status	= 'N',
									dt_atualizacao	= clock_timestamp(),
									nm_usuario	= nm_usuario_p
								where	nr_sequencia	= nr_seq_item_analise_pos_w;
								ie_status_faturamento_w := 'N';
								ie_faturamento_w 	:= 'N';
							end if;
						else
							--Caso exista o item é mantido como pendente
							update	w_pls_resumo_conta
							set	ie_faturamento	= '',
								vl_total    	= 0,
								ie_status	= 'D',
								dt_atualizacao	= clock_timestamp(),
								nm_usuario	= nm_usuario_p
							where	nr_sequencia	= nr_seq_item_analise_pos_w;
							ie_status_faturamento_w := 'D';
							ie_faturamento_w 	:= 'S';
						end if;
					end if;
				--end if;
			/*else

				update	w_pls_resumo_conta
				set	ie_faturamento		= 'G',
					vl_total    		= 0,
					ie_status		= 'N',
					dt_atualizacao		= sysdate,
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= nr_seq_item_analise_pos_w;

				ie_status_faturamento_w := 'N';
				ie_glosa_w := 'S';
			end if;*/
		else
			/*Se o item não estiver liberado */

			update	w_pls_resumo_conta
			set	ie_faturamento	= '',
				vl_total    	= 0,
				ie_status	= 'U',
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_item_analise_pos_w;

			ie_status_faturamento_w := 'U';
		end if;

		/*Se for para faturar*/

		if (ie_faturamento_w = 'S') then
			select	coalesce(max(ie_controle_pos_estabelecido),'N')
			into STRICT	ie_controle_pos_estabelecido_w
			from	pls_parametros
			where	cd_estabelecimento	= cd_estabelecimento_p;

			if (ie_controle_pos_estabelecido_w = 'S') then
				ie_cobrar_mensalidade_w	:= 'P'; -- Pendente de liberação
			else
				ie_cobrar_mensalidade_w	:= 'S'; -- Liberado para a mensalidade
			end if;

			if (coalesce(nr_seq_proc_p,0) > 0) then
				if (ie_status_conta_w	= 'A') then
					update	pls_conta_pos_estabelecido
					set	ie_cobrar_mensalidade	= ie_cobrar_mensalidade_w,
						ie_glosa		= ie_glosa_w,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p,
						ie_status_faturamento	= ie_status_faturamento_w
					where	nr_seq_conta_proc	= nr_seq_proc_p
					and	((ie_situacao		= 'A')or (coalesce(ie_situacao::text, '') = ''));
				end if;
			elsif (coalesce(nr_seq_mat_p,0) > 0) then
				if (ie_status_conta_w	= 'A') then
					update	pls_conta_pos_estabelecido
					set	ie_cobrar_mensalidade	= ie_cobrar_mensalidade_w,
						ie_glosa		= ie_glosa_w,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p,
						ie_status_faturamento	= ie_status_faturamento_w
					where	nr_seq_conta_mat	= nr_seq_mat_p
					and	((ie_situacao		= 'A')or (coalesce(ie_situacao::text, '') = ''));
				end if;
			end if;
		else
			if (coalesce(nr_seq_proc_p,0) > 0) then
				if (ie_status_conta_w	= 'A') then
					update	pls_conta_pos_estabelecido
					set	ie_cobrar_mensalidade	= 'N',
						ie_glosa		= ie_glosa_w,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p,
						ie_status_faturamento	= ie_status_faturamento_w
					where	nr_seq_conta_proc	= nr_seq_proc_p
					and	((ie_situacao		= 'A')or (coalesce(ie_situacao::text, '') = ''));
				end if;
			elsif (coalesce(nr_seq_mat_p,0) > 0) then
				if (ie_status_conta_w	= 'A') then
					update	pls_conta_pos_estabelecido
					set	ie_cobrar_mensalidade	= 'N',
						ie_glosa		= ie_glosa_w,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p,
						ie_status_faturamento	= ie_status_faturamento_w
					where	nr_seq_conta_mat	= nr_seq_mat_p
					and	((ie_situacao		= 'A')or (coalesce(ie_situacao::text, '') = ''));
				end if;
			end if;
		end if;

		ie_status_fat_w := ie_status_faturamento_w;
	end if;

	if (coalesce(nr_seq_proc_p,0) > 0 ) then
		open C02;
		loop
		fetch C02 into
			nr_seq_proc_partic_w,
			nr_seq_item_analise_pos_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ie_status_faturamento_w 	:= null;

			select	max(ie_pagamento)
			into STRICT	ie_pagamento_ww
			from	w_pls_resumo_conta
			where	nr_seq_item 	= nr_seq_proc_p
			and	nr_sequencia	= nr_seq_item_analise_pagto_w
			and	ie_tipo_item 	in ('P','R');

			begin
			select	vl_total,
				ie_status,
				ie_pagamento
			into STRICT	vl_total_w,
				ie_status_pagto_w,
				ie_pagamento_w
			from	w_pls_resumo_conta
			where	nr_sequencia = nr_seq_item_analise_pagto_w;
			exception
			when others then
				vl_total_w		:= null;
				ie_status_pagto_w	:= null;
				ie_pagamento_w		:= null;
			end;

			/*Se o item já foi liberado*/

			if (ie_status_pagto_w in ('P', 'L', 'S', 'C')) then
				/*Se possui valor liberado no item de pagamento a mesmo deve ser setada para "Permite faturamento". -OS 459304 - ebcabral - Alterado para não consistir o status do pagamento para liberar para faturamento.*/

				select	count(nr_sequencia)
				into STRICT	qt_itens_w
				from	(SELECT	nr_sequencia
					from	pls_analise_conta_item
					where	nr_seq_conta 	= nr_seq_conta_p
					and	(((coalesce(nr_seq_proc_partic,0) = 0) and (coalesce(nr_seq_conta_proc,0) = 0) and (coalesce(nr_seq_conta_mat,0) = 0))
					or (nr_seq_proc_partic	= nr_seq_proc_partic_w))
					and	ie_tipo_glosa in ('A','F')
					and 	coalesce(ie_status_faturamento, ie_status) in ('N','P')
					and	nr_seq_analise		= nr_seq_analise_pgto_w
					
union

					SELECT	nr_sequencia
					from	pls_analise_conta_item
					where	nr_seq_proc_partic	= nr_seq_proc_partic_w
					and	coalesce(ie_status_faturamento, ie_status)	in ('N', 'P')
					and	nr_seq_analise		= nr_seq_analise_pos_w) alias17 LIMIT 1;

				if (qt_itens_w > 0) then
					 --Não permite faturamento
					update	w_pls_resumo_conta
					set	vl_total    	= 0,
						ie_status	= 'N',
						dt_atualizacao	= clock_timestamp(),
						ie_faturamento 	= 'G',
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_item_analise_pos_w;

					ie_status_faturamento_w := 'N';
					ie_faturamento_w 	:= 'S';
				else
					/*Verificar se existe ocorrências de pós. pendente*/

					select	count(nr_sequencia)
					into STRICT	qt_itens_w
					from	pls_analise_conta_item
					where	nr_seq_proc_partic 	= nr_seq_proc_partic_w
					and	nr_seq_analise		= nr_seq_analise_pos_w
					and	coalesce(ie_status_faturamento, ie_status)	= 'P'  LIMIT 1;

					if (qt_itens_w = 0) then
						/*Se não existe  verifica-se se existe valor calculado para liberar*/

						select	max(vl_calculado)
						into STRICT	vl_calc_faturado_w
						from	w_pls_resumo_conta
						where	nr_sequencia = nr_seq_item_analise_pos_w;

						if (coalesce(vl_calc_faturado_w,0) > 0) then
							--Permitido faturamento
							update	w_pls_resumo_conta
							set	vl_total    	= vl_calculado,
								ie_status	= 'L',
								dt_atualizacao	= clock_timestamp(),
								nm_usuario	= nm_usuario_p,
								ie_faturamento	= 'L'
							where	nr_sequencia	= nr_seq_item_analise_pos_w;
							ie_status_faturamento_w := 'P';
							ie_faturamento_w 	:= 'S';
						else
							/*Será atualizado que não será realizado o faturamento para indicar a falta de valor de faturamento
							OS 426803 Hist. 17/04/2012 11:27:52*/
							update	w_pls_resumo_conta
							set	ie_faturamento	= 'G',
								vl_total    	= vl_calculado,
								ie_status	= 'N',
								dt_atualizacao	= clock_timestamp(),
								nm_usuario	= nm_usuario_p
							where	nr_sequencia	= nr_seq_item_analise_pos_w;
							ie_status_faturamento_w := 'N';
							ie_faturamento_w 	:= 'N';
						end if;
					else
						--Caso exista o item é mantido como pendente
						update	w_pls_resumo_conta
						set	vl_total    	= 0,
							ie_status	= 'D',
							dt_atualizacao	= clock_timestamp(),
							ie_faturamento 	= '',
							nm_usuario	= nm_usuario_p
						where	nr_sequencia	= nr_seq_item_analise_pos_w;

						ie_status_faturamento_w := 'D';
						ie_faturamento_w 	:= 'S';
					end if;
				end if;
			else
				/*Se o item não estiver liberado */

				update	w_pls_resumo_conta
				set	vl_total    	= 0,
					ie_status	= 'U',
					ie_faturamento 	= '',
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_seq_item_analise_pos_w;

				ie_status_faturamento_w := 'U';
			end if;
			end;
		end loop;
		close C02;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_status_fat ( nr_seq_conta_p bigint, nr_seq_mat_p bigint, nr_seq_proc_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

