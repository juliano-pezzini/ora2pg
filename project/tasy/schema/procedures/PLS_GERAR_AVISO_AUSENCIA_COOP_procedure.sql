-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_aviso_ausencia_coop (dt_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_cooperado_w	bigint;
nr_seq_ausencia_w	bigint;
dt_inicio_w		timestamp;
dt_fim_w		timestamp;
dt_referencia_w		timestamp;
nr_seq_motivo_w		bigint;
nr_seq_regra_w		bigint;
qt_dias_inicio_w	bigint;
qt_dias_fim_w		bigint;
ds_aviso_w		varchar(4000);
ie_avisar_inicio_w	varchar(1);
ie_avisar_termino_w	varchar(1);
cd_perfil_w		bigint;
nm_usuario_dest_w	varchar(15);
ie_email_w		varchar(1);
ie_comunic_interna_w	varchar(1);
ds_email_origem_w	varchar(255);
ds_email_destino_w	varchar(255);
ds_titulo_w		varchar(255);
qt_dias_w		bigint;
nm_cooperado_w		varchar(255);
dt_inicio_aus_w		timestamp;
dt_fim_aus_w		timestamp;
ie_aviso_w		varchar(1) := 'N';
ie_email_cooperado_w	varchar(1) := 'N';
cd_pessoa_fisica_w	varchar(10);
cd_cgc_w		varchar(14);
ds_email_w		varchar(255);
					
c01 CURSOR FOR 
	SELECT	b.nr_seq_cooperado, 
		b.nr_sequencia, 
		b.dt_inicio, 
		b.dt_fim, 
		b.nr_seq_motivo 
	from	pls_cooperado_ausencia	b, 
		pls_cooperado		a 
	where	a.nr_sequencia	= b.nr_seq_cooperado;

C02 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.qt_dias_inicio, 
		a.qt_dias_fim, 
		a.ds_aviso, 
		a.ie_avisar_inicio, 
		a.ie_avisar_termino, 
		a.ie_email_cooperado 
	from	pls_regra_aviso_aus_coop a 
	where	coalesce(a.nr_seq_motivo,nr_seq_motivo_w) = nr_seq_motivo_w 
	and	dt_referencia_w	between trunc(a.dt_inicio_vigencia,'dd') and fim_dia(coalesce(a.dt_fim_vigencia,dt_referencia_w));

c03 CURSOR FOR 
	SELECT	a.cd_perfil, 
		a.nm_usuario_dest, 
		a.ie_email, 
		a.ie_comunic_interna 
	from	pls_regra_aviso_aus_dest a 
	where	a.nr_seq_regra_aviso = nr_seq_regra_w;
	

BEGIN 
if (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then 
 
	-- Cooperado - Ausência 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_cooperado_w, 
		nr_seq_ausencia_w, 
		dt_inicio_aus_w, 
		dt_fim_aus_w, 
		nr_seq_motivo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		dt_referencia_w	:= trunc(dt_referencia_p,'dd');
		dt_inicio_aus_w	:= trunc(dt_inicio_aus_w,'dd');
		dt_fim_aus_w	:= trunc(dt_fim_aus_w,'dd');
		ds_titulo_w	:= 'Aviso de ausência de cooperado';
		nm_cooperado_w	:= pls_obter_dados_cooperado(nr_seq_cooperado_w,'N');
		 
		-- Regras sobre ausência 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_regra_w, 
			qt_dias_inicio_w, 
			qt_dias_fim_w, 
			ds_aviso_w, 
			ie_avisar_inicio_w, 
			ie_avisar_termino_w, 
			ie_email_cooperado_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin			 
			ie_aviso_w	:= 'N';
			ds_aviso_w	:=	'Ausência do cooperado ' || nm_cooperado_w ||'.'|| chr(13) || chr(10) || 
						'Data início: ' || dt_inicio_aus_w || chr(13) || chr(10) || 
						'Data final: ' || dt_fim_aus_w || chr(13) || chr(10) || 
						'Motivo: ' || pls_obter_desc_motivo_afast(nr_seq_motivo_w) || chr(13) || chr(10) || 
						chr(13) || chr(10) || ds_aviso_w;
			 
			if (ds_aviso_w IS NOT NULL AND ds_aviso_w::text <> '') then 
				ds_aviso_w := ds_aviso_w || chr(13) || chr(10) || chr(13) || chr(10) ||'';
			end if;
			 
			-- Avisar início de ausência 
			if (coalesce(ie_avisar_inicio_w,'N') = 'S') and (qt_dias_inicio_w IS NOT NULL AND qt_dias_inicio_w::text <> '') then 
				select	max(dt_inicio) 
				into STRICT	dt_inicio_w 
				from	pls_cooperado_ausencia a 
				where	a.nr_sequencia = nr_seq_ausencia_w 
				and	dt_referencia_w between a.dt_inicio - qt_dias_inicio_w and a.dt_inicio -1;
				 
				if (dt_inicio_w IS NOT NULL AND dt_inicio_w::text <> '') then 
					qt_dias_w 	:= trunc(dt_inicio_w - dt_referencia_p);
					ds_titulo_w	:= ds_titulo_w || ' - Início da ausência.';
					if (qt_dias_w > 1) then 
						ds_aviso_w	:= 	ds_aviso_w || 'Faltam ' || qt_dias_w || 
									' dias para o início da ausência do cooperado ' || nm_cooperado_w ||'.';
					else 
						ds_aviso_w	:= 	ds_aviso_w || 'Falta ' || qt_dias_w || 
									' dia para o início da ausência do cooperado ' || nm_cooperado_w ||'.';
					end if;
					ie_aviso_w	:= 'S';
				end if;
			end if;
			 
			-- Avisar fim de ausência 
			if (coalesce(ie_avisar_termino_w,'N') = 'S') and (qt_dias_fim_w IS NOT NULL AND qt_dias_fim_w::text <> '') then 
				select	max(dt_fim) 
				into STRICT	dt_fim_w 
				from	pls_cooperado_ausencia a 
				where	a.nr_sequencia = nr_seq_ausencia_w 
				and	dt_referencia_w between a.dt_fim - qt_dias_fim_w and a.dt_fim -1;
				 
				if (dt_fim_w IS NOT NULL AND dt_fim_w::text <> '') then 
					qt_dias_w 	:= trunc(dt_fim_w - dt_referencia_p);
					ds_titulo_w	:= ds_titulo_w || ' - Final da ausência.';
					if (qt_dias_w > 1) then 
						ds_aviso_w	:= 	ds_aviso_w || 'Faltam ' || qt_dias_w || 
									' dias para o fim da ausência do cooperado '|| nm_cooperado_w ||'.';
					else 
						ds_aviso_w	:= 	ds_aviso_w || 'Falta ' || qt_dias_w || 
									' dia para o início da ausência do cooperado ' || nm_cooperado_w ||'.';
					end if;
					ie_aviso_w	:= 'S';
				end if;
			end if;
			 
			-- Se não houver qt_dias_inicio informado 
			if (coalesce(qt_dias_inicio_w::text, '') = '') and (dt_inicio_aus_w = dt_referencia_w) then 
				ds_titulo_w 	:= 'Aviso - Início da ausência do cooperado ' || nm_cooperado_w ||'.';
				ie_aviso_w	:= 'S';
			end if;
			 
			-- Se não houver qt_dias_fim informado 
			if (coalesce(qt_dias_inicio_w::text, '') = '') and (dt_fim_aus_w = dt_referencia_w) then 
				ds_titulo_w 	:= 'Aviso - Fim da ausência do cooperado ' || nm_cooperado_w ||'.';
				ie_aviso_w	:= 'S';
			end if;			
			 
			-- Destinatários 
			if (ie_aviso_w = 'S') then 
				select	ds_email 
				into STRICT	ds_email_origem_w 
				from	usuario 
				where	nm_usuario = nm_usuario_p;
				 
				-- Enviar email ao cooperado 
				if (coalesce(ie_email_cooperado_w,'N') = 'S') then 
					select	max(cd_pessoa_fisica), 
						max(cd_cgc) 
					into STRICT	cd_pessoa_fisica_w, 
						cd_cgc_w 
					from	pls_cooperado 
					where	nr_sequencia = nr_seq_cooperado_w;
					 
					ds_email_w := substr(obter_dados_pf_pj(cd_pessoa_fisica_w,cd_cgc_w,'M'),1,255);
					 
					if ((trim(both ds_email_w) IS NOT NULL AND (trim(both ds_email_w))::text <> '')) then 
						CALL enviar_email(ds_titulo_w,ds_aviso_w,ds_email_origem_w,ds_email_w,nm_usuario_p,'M');
					end if;
				end if;
			 
				-- Enviar email aos destinatários 
				open C03;
				loop 
				fetch C03 into	 
					cd_perfil_w, 
					nm_usuario_dest_w, 
					ie_email_w, 
					ie_comunic_interna_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin 
					-- Gera email 
					if (ie_email_w = 'S') then 
						select	ds_email 
						into STRICT	ds_email_destino_w 
						from	usuario 
						where	nm_usuario = nm_usuario_dest_w;
						 
						CALL enviar_email(ds_titulo_w,ds_aviso_w,ds_email_origem_w,ds_email_destino_w,nm_usuario_p,'M');
					end if;	
					 
					-- Gera comunicação interna 
					if (ie_comunic_interna_w = 'S') then 
						CALL gerar_comunic_padrao(	clock_timestamp(),ds_titulo_w,ds_aviso_w,'Tasy','N',nm_usuario_dest_w,'N',null, 
									cd_perfil_w,null,null,clock_timestamp(),null,null);
					end if;	
					end;
				end loop;
				close C03;
			end if;
 
			end;
		end loop;
		close C02;
			 
		end;
	end loop;
	close C01;
	 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_aviso_ausencia_coop (dt_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

