-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copia_param_convenio_estab ( cd_convenio_orig_p bigint, cd_estab_orig_p bigint, cd_estab_dest_p text, nm_tabela_p text, nm_usuario_p text, ie_excluir_p text, ie_tipo_acao_p text) AS $body$
DECLARE


nr_seq_w				bigint;
nr_sequencia_w			bigint;
nr_seq_acomod_w			bigint;
nr_seq_tipo_acomodacao_w		bigint;
ie_tipo_acomod_w			varchar(2);
ie_regra_hora_inicio_w		varchar(5);
ie_regra_hora_fim_w		varchar(5);
qt_dias_pacote_w			integer;
qt_dias_hospital_w			integer;
qt_dias_uti_w			integer;
ie_excedente_w			smallint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
vl_pacote_w			double precision;
vl_honorario_w			double precision;
qt_ponto_pacote_w			double precision;
qt_ponto_honorario_w		double precision;
cd_estrutura_conta_w		integer;
ie_classificacao_w			varchar(1);

dt_vigencia_w			timestamp;
dt_vigencia_final_w			timestamp;
ie_exige_gabarito_w		varchar(01);
cd_cgc_w			varchar(14);
cd_kit_material_w			integer;
cd_material_w			integer;
ie_via_aplicacao_w			varchar(5);
ie_tipo_paciente_w			varchar(3);
qt_material_w			double precision;

qt_volume_min_w			real;
qt_volume_max_w			real;
ie_baixa_estoque_w 		varchar(1);
cd_medico_w 			varchar(10);
ie_dispensavel_w			varchar(1);
nr_seq_kit_w			integer;
ie_ratear_repasse_w		varchar(2);
/*Rafael em 09/05/2006 OS33807*/

dt_inicio_vigencia_w		timestamp;
cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w		integer;
tx_ajuste_w			double precision;
vl_negociado_w			double precision;
ie_preco_informado_w		varchar(1);
ie_glosa_w			varchar(1);
tx_brasindice_pfb_w		REGRA_AJUSTE_MATERIAL.tx_brasindice_pfb%type; -- number(15,4);
tx_brasindice_pmc_w		CONVENIO_BRASINDICE.TX_BRASINDICE_PMC%type;--number(15,4);
tx_afaturar_w			double precision;
dt_final_vigencia_w			timestamp;
dt_final_vigencia_ww			timestamp;
cd_tipo_acomodacao_w		smallint;
ie_tipo_atendimento_w		smallint;
ie_tipo_atend_conta_w		smallint;
cd_setor_atendimento_w		integer;
qt_idade_min_w			bigint;
qt_idade_max_w			bigint;
tx_simpro_pfb_w			double precision;
tx_simpro_pmc_w			double precision;
ie_origem_preco_w			varchar(5);
ie_precedencia_preco_w		varchar(1);
pr_glosa_w			double precision;
ie_tipo_material_w			varchar(3);
tx_pmc_neg_w			CONVENIO_BRASINDICE.TX_PMC_NEG%type;--number(15,4);
tx_pmc_pos_w			CONVENIO_BRASINDICE.TX_PMC_POS%type;--number(15,4);
cd_cid_w				varchar(10);
cd_tabela_preco_w			bigint;
cd_motivo_exc_conta_w		bigint;
nr_seq_ajuste_w			bigint;
vl_inicial_w			double precision;
vl_final_w				double precision;
tx_ajustedif_w			double precision;
qt_ajuste_w			smallint;
ie_tipo_doc_w			varchar(1);
ds_documento_w			text;
ds_documento_ww			text;
ie_documento_w			varchar(3);
ds_arquivo_w			varchar(255);
qt_tabelas_w			smallint;



tx_ajuste_tabela_mat_w		double precision;
cd_tab_preco_mat_w		smallint;
ie_sexo_w			varchar(01);
cd_plano_w			varchar(10);
ie_gerar_proced_negativo_w		varchar(1);
vl_anestesista_w			double precision;
ie_atend_retorno_w			varchar(01);
ie_autor_particular_w		varchar(2) := 'N';
/*Fim alteracao Rafael (em 09/05/2006 OS33807)*/

ie_kit_material_w			varchar(1);/*Geliard 12/01/2009*/
tx_pfb_neg_w			CONVENIO_BRASINDICE.TX_PFB_NEG%type;--number(15,4);
tx_pfb_pos_w			CONVENIO_BRASINDICE.TX_PFB_POS%type;--number(15,4);
cd_estab_dest_w			smallint;
ie_atend_acomp_w		varchar(1);
nr_seq_regra_seq_conta_w	bigint;
nr_seq_regra_usuario_categ_w	bigint;
nr_seq_estrutura_w		bigint;

cd_tipo_baixa_w			smallint;
nr_seq_proc_interno_w		bigint;
cd_medico_executor_w		varchar(10);
ie_clinica_w			integer;
vl_materiais_w			double precision;
ie_consiste_cirurgia_w		varchar(1);
ie_exige_item_conta_w		varchar(1);
vl_auxiliares_w			double precision;
ds_observacao_w			varchar(255);
pr_acrescimo_rn_w		double precision;
ie_lado_w			varchar(1);
ie_setor_lanc_exclusivo_w	varchar(1);
qt_procedimento_w		double precision;
ie_tab_adicional_w		varchar(1);
ie_integracao_opme_w		varchar(1);


cd_categoria_w			varchar(10);
dt_liberacao_tabela_w	timestamp;
cd_tabela_servico_w		smallint;
ie_situacao_w			varchar(1);
nr_prioridade_w			bigint;
dt_termino_w			timestamp;
tx_ajuste_geral_w		double precision;
nr_seq_tiss_tabela_w 	convenio_servico.nr_seq_tiss_tabela%type;

cd_centro_custo_w		integer;
ie_credenciado_w		varchar(1);
acomod_qt_idade_min_w			   smallint;
acomod_qt_idade_max_w             smallint;
acomod_qt_dias_inter_inicio_w     bigint;
acomod_qt_dias_inter_final_w      bigint;
ie_tipo_anestesia_w        varchar(3);
hr_final_pacote_w          timestamp;
pr_faturar_pacote_w        double precision;
ie_atualiza_medico_w       varchar(1);
ie_atend_alta_w            varchar(1);
ie_consiste_dias_inter_w   varchar(1);
ie_data_consiste_idade_w   varchar(1);

qt_hora_w					pacote_tipo_acomodacao.qt_hora%type;
cd_convenio_glosa_w			convenio.cd_convenio%type;
cd_categoria_glosa_w		categoria_convenio.cd_categoria%type;
nr_seq_agenda_regra_w		agenda_regra.nr_sequencia%type;
nr_seq_next_agenda_regra_w	agenda_regra.nr_sequencia%type;
nr_seq_agend_cons_reg_proc_w  agenda_cons_regra_proc.nr_sequencia%type;
nr_seq_conversao_proc_w		conversao_proc_convenio.nr_sequencia%type;

cd_proc_referencia_w		regra_ajuste_material.cd_proc_referencia%type;
ie_data_referencia_vig_w	regra_ajuste_material.ie_data_referencia_vig%type;
ie_tipo_kit_w			regra_ajuste_material.ie_tipo_kit%type;
nr_seq_familia_w		regra_ajuste_material.nr_seq_familia%type;
ie_ignora_preco_venda_w		regra_ajuste_material.ie_ignora_preco_venda%type;
ie_ignora_divisao_bras_w	regra_ajuste_material.ie_ignora_divisao_bras%type;
tx_simpro_pos_pfb_w		regra_ajuste_material.tx_simpro_pos_pfb%type;
tx_simpro_neg_pfb_w		regra_ajuste_material.tx_simpro_neg_pfb%type;
tx_simpro_pos_pmc_w		regra_ajuste_material.tx_simpro_pos_pmc%type;
tx_simpro_neg_pmc_w		regra_ajuste_material.tx_simpro_neg_pmc%type;
qt_dias_inter_inicio_w		regra_ajuste_material.qt_dias_inter_inicio%type;
qt_dias_inter_final_w		regra_ajuste_material.qt_dias_inter_final%type;
cd_usuario_convenio_w		regra_ajuste_material.cd_usuario_convenio%type;
qt_pos_inicial_w		regra_ajuste_material.qt_pos_inicial%type;
qt_pos_final_w			regra_ajuste_material.qt_pos_final%type;
ie_estrangeiro_w		regra_ajuste_material.ie_estrangeiro%type;
ie_reconstituinte_w		regra_ajuste_material.ie_reconstituinte%type;
ie_tipo_preco_autor_w	 	regra_ajuste_material.ie_tipo_preco_autor%type;
cd_doenca_w           		varchar(10);
ie_carater_inter_sus_w      pacote_tipo_acomodacao.ie_carater_inter_sus%type;



c000 CURSOR FOR
	SELECT	cd_estabelecimento
	from	estabelecimento
	where	(((ie_tipo_acao_p = '1') and (obter_se_contido(cd_estabelecimento, elimina_aspas(cd_estab_dest_p)) = 'S')) or
		((ie_tipo_acao_p = '2') and (not obter_se_contido(cd_estabelecimento, elimina_aspas(cd_estab_dest_p)) = 'S')))
	and	cd_estabelecimento <> cd_estab_orig_p;


c001 CURSOR FOR
	SELECT cd_estabelecimento,
		cd_area_proced,
		cd_especial_proced,
		cd_grupo_proced,
		cd_procedimento,
		ie_origem_proced,
		cd_setor_atendimento,
		ie_medico_executor,
		cd_cgc,
		ie_tipo_atendimento,
		cd_medico_exec_filtro,
		cd_tipo_procedimento
	from 	consiste_setor_proc
	where 	cd_convenio 		= cd_convenio_orig_p
	and	cd_estabelecimento	= cd_estab_orig_p;


c005 CURSOR FOR
	SELECT 	nr_sequencia
	from 	regra_lanc_automatico
	where 	cd_convenio 		= cd_convenio_orig_p
	and	cd_estabelecimento	= cd_estab_orig_p;

c006 CURSOR FOR
	SELECT 	nr_seq_pacote
	from 	pacote
	where 	cd_convenio = cd_convenio_orig_p
	and	cd_estabelecimento = cd_estab_orig_p;

c008 CURSOR FOR
	SELECT		ie_tipo_acomod,
			qt_dias_pacote,
			qt_dias_hospital,
			qt_dias_uti,
			ie_excedente,
			cd_procedimento,
			ie_origem_proced,
			vl_pacote,
			vl_honorario,
			qt_ponto_pacote,
			qt_ponto_honorario,
			cd_estrutura_conta,
			ie_classificacao,
			cd_categoria,
			cd_plano,
			dt_vigencia,
			dt_vigencia_final,
			ie_exige_gabarito,
			ie_regra_hora_inicio,
			ie_regra_hora_fim,
			ie_ratear_repasse,
			nr_sequencia,
			ie_tipo_atendimento,
			ie_gerar_proced_negativo,
			vl_anestesista,
			ie_atend_retorno,
			ie_atend_acomp,
			cd_setor_atendimento,
			nr_seq_proc_interno,
			cd_medico_executor,
			ie_clinica,
			vl_materiais,
			ie_consiste_cirurgia,
			ie_exige_item_conta,
			vl_auxiliares,
			ds_observacao,
			ie_sexo,
			pr_acrescimo_rn,
			ie_lado,
			ie_setor_lanc_exclusivo,
			qt_procedimento,
			ie_tipo_atend_conta,
			cd_centro_custo,
			ie_credenciado,
			qt_hora,
			qt_idade_min,
			qt_idade_max,
			qt_dias_inter_inicio,
			qt_dias_inter_final,
			ie_tipo_anestesia,
			hr_final_pacote,
			pr_faturar_pacote,
			ie_atualiza_medico,
			ie_atend_alta,
			ie_consiste_dias_inter,
			ie_data_consiste_idade,
            ie_carater_inter_sus
	from		pacote_tipo_acomodacao
	where		nr_seq_pacote	= nr_seq_w;

c010 CURSOR FOR
SELECT 	nr_sequencia,
 	dt_inicio_vigencia,
	ie_situacao,
	cd_categoria,
	cd_grupo_material,
	cd_subgrupo_material,
	cd_classe_material,
	cd_material,
	tx_ajuste,
	vl_negociado,
	ie_preco_informado,
	ie_glosa,
	tx_brasindice_pfb,
	tx_brasindice_pmc,
	tx_afaturar,
	dt_final_vigencia,
	cd_tipo_acomodacao,
	ie_tipo_atendimento,
	cd_setor_atendimento,
	qt_idade_min,
	qt_idade_max,
	tx_simpro_pfb,
	tx_simpro_pmc,
	ie_origem_preco,
	ie_precedencia_preco,
	pr_glosa,
	ie_tipo_material,
	tx_pmc_neg,
	tx_pmc_pos,
	cd_cid,
	cd_tabela_preco,
	cd_motivo_exc_conta,
	ie_sexo,
	cd_plano,
	ie_autor_particular,
	ie_kit_material,
	cd_kit_material,
	tx_pfb_neg,
	tx_pfb_pos,
	nr_seq_estrutura,
	cd_tipo_baixa,
	ie_clinica,
	cd_convenio_glosa,
	cd_categoria_glosa,
	cd_proc_referencia,
	ie_origem_proced,
	nr_seq_proc_interno,
	ds_observacao,
	ie_data_referencia_vig,
	ie_atend_retorno,
	ie_tipo_kit,
	nr_seq_familia,
	ie_ignora_preco_venda,
	ie_ignora_divisao_bras,
	tx_simpro_pos_pfb,
	tx_simpro_neg_pfb,
	tx_simpro_pos_pmc,
	tx_simpro_neg_pmc,
	qt_dias_inter_inicio,
	qt_dias_inter_final,
	cd_usuario_convenio,
	qt_pos_inicial,
	qt_pos_final,
	ie_estrangeiro,
	ie_reconstituinte,
	ie_tipo_preco_autor
from	regra_ajuste_material
where 	cd_convenio		= cd_convenio_orig_p
and	cd_estabelecimento	= cd_estab_orig_p;
--and	cd_material		is not null;
c011 CURSOR FOR
SELECT	vl_inicial,
	vl_final,
	tx_ajuste,
	ie_origem_preco
from	regra_ajuste_indice_dif
where	nr_seq_regra	= nr_sequencia_w;

c012 CURSOR FOR
SELECT 	cd_categoria,
	cd_tipo_acomodacao
from	categoria_convenio
where 	cd_convenio		= cd_convenio_orig_p;

c013 CURSOR FOR
SELECT 	nr_sequencia
from	evento_convenio
where 	cd_convenio		= cd_convenio_orig_p
and 	cd_estabelecimento	= cd_estab_orig_p;

c014 CURSOR FOR
SELECT	ie_tipo_doc,
	ds_documento
from 	pacote_doc
where 	nr_seq_pacote = nr_seq_w;

c015 CURSOR FOR
SELECT 	ie_documento,
	dt_vigencia,
	ds_arquivo,
	dt_final_vigencia,
	nr_sequencia,
	ds_documento
from 	convenio_documento
where 	cd_convenio		= cd_convenio_orig_p
and 	cd_estabelecimento	= cd_estab_orig_p;

c016 CURSOR FOR
SELECT 	nr_sequencia
from 	regra_ajuste_proc
where 	cd_convenio		= cd_convenio_orig_p
and 	cd_estabelecimento	= cd_estab_orig_p;

c017 CURSOR FOR
SELECT 	nr_sequencia
from 	convenio_regra_qtde
where 	cd_convenio		= cd_convenio_orig_p
and 	cd_estabelecimento	= cd_estab_orig_p;

c018 CURSOR FOR
SELECT	cd_categoria,
	dt_liberacao_tabela,
	cd_tabela_servico,
	ie_situacao,
	nr_prioridade,
	dt_termino,
	tx_ajuste_geral,
	nr_seq_tiss_tabela
from 	convenio_servico
where 	cd_convenio = cd_convenio_orig_p
and	cd_estabelecimento = cd_estab_orig_p;

c019 CURSOR FOR
SELECT	cd_categoria,
	dt_liberacao_tabela,
	cd_tab_preco_mat,
	tx_ajuste_tabela_mat,
	ie_situacao,
	nr_prioridade,
	dt_inicio_vigencia,
	dt_final_vigencia,
	ie_tab_adicional,
	ie_integracao_opme
from 	convenio_preco_mat
where 	cd_convenio = cd_convenio_orig_p
and	cd_estabelecimento = cd_estab_orig_p;

c020 CURSOR FOR
SELECT 	nr_sequencia
from 	mat_convenio_regra_qtde
where 	cd_convenio		= cd_convenio_orig_p
and 	cd_estabelecimento	= cd_estab_orig_p;

c021 CURSOR FOR
SELECT 	nr_sequencia
from 	tipo_taxa_cirurgica
where 	cd_convenio		= cd_convenio_orig_p
and 	cd_estabelecimento	= cd_estab_orig_p;

c22 CURSOR FOR
	SELECT	*
	from	convenio_estabelecimento
	where	cd_convenio		= cd_convenio_orig_p
	and 	cd_estabelecimento	= cd_estab_orig_p;

c23 CURSOR FOR
	SELECT	*
	from	conversao_material_convenio
	where	cd_convenio		= cd_convenio_orig_p
	and 	cd_estabelecimento	= cd_estab_orig_p;

c24 CURSOR FOR
	SELECT	nr_sequencia
	from	conv_regra_seq_conta
	where	cd_convenio		= cd_convenio_orig_p
	and	cd_estabelecimento	= cd_estab_orig_p;

c25 CURSOR FOR
	SELECT	nr_sequencia
	from	conv_regra_usuario_categ
	where	cd_convenio = cd_convenio_orig_p
	and	cd_estabelecimento = cd_estab_orig_p;

c26 CURSOR FOR
	SELECT	nr_sequencia
	from	conversao_proc_convenio
	where	cd_convenio		= cd_convenio_orig_p
	and 	cd_estabelecimento	= cd_estab_orig_p;

c27 CURSOR FOR
	SELECT	*
	from	convenio_doc_atend
	where	cd_convenio		= cd_convenio_orig_p
	and 	cd_estabelecimento	= cd_estab_orig_p;

c028 CURSOR FOR
	SELECT	NR_SEQUENCIA,
			CD_DOENCA,
			NR_SEQ_PACOTE,
			IE_SITUACAO
	from	pacote_cid
	where	NR_SEQ_PACOTE	= nr_seq_w
	and		NR_SEQUENCIA	= nr_sequencia_w;

c047 CURSOR FOR
	SELECT	nr_sequencia
	from	agenda_regra
	where	cd_convenio	 	= cd_convenio_orig_p
	and	cd_estabelecimento	= cd_estab_orig_p;

c048 CURSOR FOR
	SELECT	nr_sequencia
	from	AGENDA_CONS_REGRA_PROC
	where	cd_convenio	 	= cd_convenio_orig_p
	and	    cd_estabelecimento	= cd_estab_orig_p;

c001_w	c001%rowtype;
c22_w	c22%rowtype;
c23_w	c23%rowtype;
c27_w	c27%rowtype;


BEGIN
open c000;
loop
fetch c000 into
	cd_estab_dest_w;
EXIT WHEN NOT FOUND; /* apply on c000 */
	begin

	if (nm_tabela_p = 'CONSISTE_SETOR_PROC') then
		if (ie_excluir_p = 'S') then
			delete from consiste_setor_proc
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		open c001;
		loop
			fetch c001 into c001_w;
			EXIT WHEN NOT FOUND; /* apply on c001 */

			select nextval('consiste_setor_proc_seq')
			into STRICT nr_seq_w
			;

			insert into consiste_setor_proc(
				nr_sequencia,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				cd_area_proced,
				cd_especial_proced,
				cd_grupo_proced,
				cd_procedimento,
				ie_origem_proced,
				cd_convenio,
				cd_setor_atendimento,
				ie_medico_executor,
				cd_cgc,
				ie_tipo_atendimento,
				cd_medico_exec_filtro,
				cd_tipo_procedimento)
			values (nr_seq_w,
				cd_estab_dest_w,
				clock_timestamp(),
				nm_usuario_p,
				c001_w.cd_area_proced,
				c001_w.cd_especial_proced,
				c001_w.cd_grupo_proced,
				c001_w.cd_procedimento,
				c001_w.ie_origem_proced,
				cd_convenio_orig_p,
				c001_w.cd_setor_atendimento,
				c001_w.ie_medico_executor,
				c001_w.cd_cgc,
				c001_w.ie_tipo_atendimento,
				c001_w.cd_medico_exec_filtro,
				c001_w.cd_tipo_procedimento);
		end loop;
		close c001;
	elsif (nm_tabela_p = 'CONTA_FINANC_REGRA') then
		if (ie_excluir_p = 'S') then
			delete from conta_financ_regra
			where cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
			Insert into CONTA_FINANC_REGRA(
				NR_SEQUENCIA,
				CD_ESTABELECIMENTO,
				NR_SEQ_CONTA_FINANC,
				IE_ENTRADA_SAIDA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				CD_GRUPO_MATERIAL,
				CD_SUBGRUPO_MATERIAL,
				CD_CLASSE_MATERIAL,
				CD_AREA_PROCEDIMENTO,
				CD_ESPECIALIDADE,
				CD_GRUPO_PROC,
				CD_CONVENIO,
				CD_SETOR_ATENDIMENTO,
				CD_TIPO_PESSOA,
				CD_CGC,
				CD_MATERIAL,
				CD_PROCEDIMENTO,
				IE_ORIGEM_PROCED,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				CD_CENTRO_CUSTO,
				IE_CLINICA,
				CD_OPERACAO_NF,
				IE_FATURAMENTO,
				IE_TIPO_ATENDIMENTO,
				CD_CATEGORIA,
				NR_SEQ_PROJ_REC,
				IE_TIPO_CONVENIO,
				NR_SEQ_PRODUTO,
				IE_NOTA_CREDITO,
				CD_PESSOA_FISICA,
				IE_TIPO_PESSOA,
				DS_OBSERVACAO,
				NR_SEQ_GRUPO,
				NR_SEQ_SUBGRUPO,
				NR_SEQ_FORMA_ORG,
				IE_TIPO_FINANCIAMENTO,
				IE_COMPLEXIDADE,
				IE_ORIGEM_TIT_REC,
				IE_ORIGEM_TIT_PAGAR,
				NR_SEQ_CLASSE_TP,
				NR_SEQ_CLASSE_TR,
				CD_LOCAL_ESTOQUE,
				NR_SEQ_TRANS_FIN,
				CD_CONTA_CONTABIL,
				IE_TIPO_TITULO_PAGAR,
				IE_TIPO_TITULO_RECEBER,
				CD_MOEDA,
				NR_SEQ_FAMILIA)
			SELECT nextval('conta_financ_regra_seq'),
				cd_estab_dest_w,
				NR_SEQ_CONTA_FINANC,
				IE_ENTRADA_SAIDA,
				clock_timestamp(),
				nm_usuario_p,
				CD_GRUPO_MATERIAL,
				CD_SUBGRUPO_MATERIAL,
				CD_CLASSE_MATERIAL,
				CD_AREA_PROCEDIMENTO,
				CD_ESPECIALIDADE,
				CD_GRUPO_PROC,
				cd_convenio_orig_p,
				CD_SETOR_ATENDIMENTO,
				CD_TIPO_PESSOA,
				CD_CGC,
				CD_MATERIAL,
				CD_PROCEDIMENTO,
				IE_ORIGEM_PROCED,
				clock_timestamp(),
				nm_usuario_p,
				CD_CENTRO_CUSTO,
				IE_CLINICA,
				CD_OPERACAO_NF,
				IE_FATURAMENTO,
				IE_TIPO_ATENDIMENTO,
				CD_CATEGORIA,
				NR_SEQ_PROJ_REC,
				IE_TIPO_CONVENIO,
				NR_SEQ_PRODUTO,
				IE_NOTA_CREDITO,
				CD_PESSOA_FISICA,
				IE_TIPO_PESSOA,
				DS_OBSERVACAO,
				NR_SEQ_GRUPO,
				NR_SEQ_SUBGRUPO,
				NR_SEQ_FORMA_ORG,
				IE_TIPO_FINANCIAMENTO,
				IE_COMPLEXIDADE,
				IE_ORIGEM_TIT_REC,
				IE_ORIGEM_TIT_PAGAR,
				NR_SEQ_CLASSE_TP,
				NR_SEQ_CLASSE_TR,
				CD_LOCAL_ESTOQUE,
				NR_SEQ_TRANS_FIN,
				CD_CONTA_CONTABIL,
				IE_TIPO_TITULO_PAGAR,
				IE_TIPO_TITULO_RECEBER,
				CD_MOEDA,
				NR_SEQ_FAMILIA
			from 	conta_financ_regra
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'CAT_CONV_TIPO_ACOMODACAO') then
		if (ie_excluir_p = 'S') then
			delete 	from 	cat_conv_tipo_acomodacao
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;
		begin
		open c012;
			loop
			fetch c012 into
					cd_categoria_w,
					cd_tipo_acomodacao_w;
			EXIT WHEN NOT FOUND; /* apply on c012 */
					begin
					insert into cat_conv_tipo_acomodacao(
						nr_sequencia,
						cd_estabelecimento,
						cd_convenio,
						cd_categoria,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_acomodacao,
						dt_atualizacao_nrec,
						nm_usuario_nrec)
					SELECT 	nextval('cat_conv_tipo_acomodacao_seq'),
						cd_estab_dest_w,
						cd_convenio_orig_p,
						cd_categoria_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_tipo_acomodacao,
						clock_timestamp(),
						nm_usuario_p
					from 	cat_conv_tipo_acomodacao
					where 	cd_convenio = cd_convenio_orig_p
					and	cd_categoria = cd_categoria_w
					and	cd_estabelecimento = cd_estab_orig_p;
					end;
			end loop;
		close c012;
		end;
	elsif (nm_tabela_p = 'EVENTO_CONVENIO') then
		if (ie_excluir_p = 'S') then
			delete 	from 	evento_convenio
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		begin
		open c013;
			loop
			fetch c013 into
					nr_seq_w;
			EXIT WHEN NOT FOUND; /* apply on c013 */

				select  nextval('evento_convenio_seq')
				into STRICT	nr_sequencia_w
				;

				insert into evento_convenio(
					nr_sequencia,
					cd_convenio,
					dt_atualizacao,
					nm_usuario,
					nr_seq_evento,
					ds_evento,
					ds_dll,
					ds_funcao,
					nr_seq_interface,
					cd_estabelecimento,
					nr_seq_apres,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				SELECT 	nr_sequencia_w,
					cd_convenio_orig_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_evento,
					ds_evento,
					ds_dll,
					ds_funcao,
					nr_seq_interface,
					cd_estab_dest_w,
					nr_seq_apres,
					clock_timestamp(),
					nm_usuario_p
				from 	evento_convenio
				where 	cd_convenio = cd_convenio_orig_p
				and	cd_estabelecimento = cd_estab_orig_p
				and 	nr_sequencia = nr_seq_w;

				insert into evento_convenio_ret(
					nr_sequencia,
					nr_seq_evento_conv,
					dt_atualizacao,
					nm_usuario,
					cd_retorno,
					ds_retorno,
					ie_sucesso,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				SELECT 	nextval('evento_convenio_ret_seq'),
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_retorno,
					ds_retorno,
					ie_sucesso,
					clock_timestamp(),
					nm_usuario_p
				from 	evento_convenio_ret
				where 	nr_seq_evento_conv = nr_seq_w;
			end loop;
		close c013;
		end;
	elsif (nm_tabela_p = 'COTACAO_MOEDA_CONVENIO') then
		if (ie_excluir_p = 'S') then
			delete 	from 	cotacao_moeda_convenio
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		insert into cotacao_moeda_convenio(
				nr_sequencia,
				cd_estabelecimento,
				cd_convenio,
				cd_moeda,
				ie_previsto_realizado,
				dt_referencia,
				vl_honorarios,
				vl_custo_oper,
				vl_filme,
				dt_atualizacao,
				nm_usuario,
				cd_categoria,
				cd_area_proced,
				cd_especial_proced,
				cd_grupo_proced,
				cd_procedimento,
				ie_origem_proced,
				cd_setor_atendimento,
				ie_tipo_atendimento,
				ie_credenciado,
				cd_plano,
				ie_clinica,
				cd_empresa_ref,
				ds_regra_codigo,
				cd_edicao_amb,
				ie_situacao,
				nr_seq_proc_interno,
				nr_seq_grupo_lab,
				cd_tipo_acomodacao,
        dt_referencia_final)
			SELECT	nextval('cotacao_moeda_convenio_seq'),
				cd_estab_dest_w,
				cd_convenio_orig_p,
				cd_moeda,
				ie_previsto_realizado,
				dt_referencia,
				vl_honorarios,
				vl_custo_oper,
				vl_filme,
				clock_timestamp(),
				nm_usuario_p,
				cd_categoria,
				cd_area_proced,
				cd_especial_proced,
				cd_grupo_proced,
				cd_procedimento,
				ie_origem_proced,
				cd_setor_atendimento,
				ie_tipo_atendimento,
				ie_credenciado,
				cd_plano,
				ie_clinica,
				cd_empresa_ref,
				ds_regra_codigo,
				cd_edicao_amb,
				ie_situacao,
				nr_seq_proc_interno,
				nr_seq_grupo_lab,
				cd_tipo_acomodacao,
        dt_referencia_final
			from 	cotacao_moeda_convenio
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_orig_p;
	elsif (nm_tabela_p = 'CONVENIO_CONTA_CONTABIL') then
		if (ie_excluir_p = 'S') then
			delete 	from 	convenio_conta_contabil
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		insert into convenio_conta_contabil(
				nr_sequencia,
				cd_convenio,
				cd_conta_contabil,
				dt_atualizacao,
				nm_usuario,
				ie_tipo_atendimento,
				cd_estabelecimento,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_tipo_conta,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				ie_tipo_protocolo,
				cd_setor_atendimento)
			SELECT	nextval('convenio_conta_contabil_seq'),
				cd_convenio_orig_p,
				cd_conta_contabil,
				clock_timestamp(),
				nm_usuario_p,
				ie_tipo_atendimento,
				cd_estab_dest_w,
				clock_timestamp(),
				nm_usuario_p,
				ie_tipo_conta,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				ie_tipo_protocolo,
				cd_setor_atendimento
			from 	convenio_conta_contabil
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_orig_p;
	elsif (nm_tabela_p = 'CONVENIO_REGRA_ATEND') then
		if (ie_excluir_p = 'S') then
			delete 	from 	convenio_regra_atend
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		insert into convenio_regra_atend(
				nr_sequencia,
				cd_estabelecimento,
				cd_convenio,
				dt_atualizacao,
				nm_usuario,
				ie_regra,
				ie_tipo_atendimento,
				qt_regra,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_plano,
				ie_ignorar_estab)
			SELECT	nextval('convenio_regra_atend_seq'),
				cd_estab_dest_w,
				cd_convenio_orig_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_regra,
				ie_tipo_atendimento,
				qt_regra,
				clock_timestamp(),
				nm_usuario_p,
				cd_plano,
				ie_ignorar_estab
			from 	convenio_regra_atend
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_orig_p;
	elsif (nm_tabela_p = 'REGRA_GERAR_AUTORIZACAO') then
		if (ie_excluir_p = 'S') then
			delete 	from 	regra_gerar_autorizacao
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		insert into regra_gerar_autorizacao(
				nr_sequencia,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				ie_tipo_autorizacao,
				ie_evento,
				ie_exige_just_medica,
				qt_hora_antecedencia,
				hr_execucao,
				ie_tipo_atendimento,
				cd_edicao_convenio,
				cd_convenio,
				ie_internado,
				cd_classif_setor,
				cd_tipo_acomodacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_tipo_regra,
				cd_categoria,
				ie_situacao,
				cd_procedimento,
				ie_origem_proced,
				cd_proc_internacao,
				ie_origem_proc_int,
				ie_tipo_guia,
				ie_carater_inter_sus,
				nr_seq_estagio,
				ie_tipo_util,
				qt_dias_prazo,
				ie_proc_diaria_acomod,
				cd_setor_atendimento,
				dt_vigencia_inicial,
				dt_vigencia_final,
				ie_equip_agenda,
				nr_seq_tipo_avaliacao,
				ie_autor_vaga_atend,
				qt_dia_autor_rn,
				ie_clinica,
				ie_unic_intern_transf_rn,
				hr_inicial,
				hr_final,
				ie_dia_util,
				cd_especialidade,
				ie_gerar_proc_princ_agenda,
				ie_tipo_acomod_atual,
				ie_carater_int_tiss_regra,
				qt_idade_min,
				qt_idade_max,
				nr_seq_classif,
				qt_dias_geracao_vigencia,
				ie_autor_exame_adic_integ,
				ie_carater_cirurgia,
				ie_classif_agenda_consulta,
				ie_data_fim_vigencia,
				ie_feriado,
				dt_dia_semana,
				qt_dias_solic_padrao,
				nr_seq_proc_interno_int,
				ie_gerar_observacao,
				ie_gerar_indic_clinica,
				ie_gerar_inicio_vigencia,
				qt_sessao_agenda)
			SELECT	nextval('regra_gerar_autorizacao_seq'),
				cd_estab_dest_w,
				clock_timestamp(),
				nm_usuario_p,
				ie_tipo_autorizacao,
				ie_evento,
				ie_exige_just_medica,
				qt_hora_antecedencia,
				hr_execucao,
				ie_tipo_atendimento,
				cd_edicao_convenio,
				cd_convenio_orig_p,
				ie_internado,
				cd_classif_setor,
				cd_tipo_acomodacao,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(ie_tipo_regra,'A'),
				cd_categoria,
				ie_situacao,
				cd_procedimento,
				ie_origem_proced,
				cd_proc_internacao,
				ie_origem_proc_int,
				ie_tipo_guia,
				ie_carater_inter_sus,
				nr_seq_estagio,
				ie_tipo_util,
				qt_dias_prazo,
				ie_proc_diaria_acomod,
				cd_setor_atendimento,
				dt_vigencia_inicial,
				dt_vigencia_final,
				ie_equip_agenda,
				nr_seq_tipo_avaliacao,
				ie_autor_vaga_atend,
				qt_dia_autor_rn,
				ie_clinica,
				ie_unic_intern_transf_rn,
				hr_inicial,
				hr_final,
				ie_dia_util,
				cd_especialidade,
				ie_gerar_proc_princ_agenda,
				ie_tipo_acomod_atual,
				ie_carater_int_tiss_regra,
				qt_idade_min,
				qt_idade_max,
				nr_seq_classif,
				qt_dias_geracao_vigencia,
				ie_autor_exame_adic_integ,
				ie_carater_cirurgia,
				ie_classif_agenda_consulta,
				ie_data_fim_vigencia,
				ie_feriado,
				dt_dia_semana,
				qt_dias_solic_padrao,
				nr_seq_proc_interno_int,
				ie_gerar_observacao,
				ie_gerar_indic_clinica,
				ie_gerar_inicio_vigencia,
				qt_sessao_agenda
			from 	regra_gerar_autorizacao
			where 	cd_convenio 	= cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_orig_p;
	elsif (nm_tabela_p = 'CONVENIO_PRESTADOR') then
		if (ie_excluir_p = 'S') then
			delete 	from 	convenio_prestador
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		insert into convenio_prestador(
				nr_sequencia,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				cd_convenio,
				cd_cgc,
				cd_prestador_convenio,
				nr_seq_classificacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			SELECT	nextval('convenio_prestador_seq'),
				cd_estab_dest_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_convenio_orig_p,
				cd_cgc,
				cd_prestador_convenio,
				nr_seq_classificacao,
				clock_timestamp(),
				nm_usuario_p
			from 	convenio_prestador
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_orig_p;
	elsif (nm_tabela_p = 'CONVENIO_AMB') then
		if (ie_excluir_p = 'S') then
			delete 	from 	convenio_amb
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		insert into convenio_amb(
				cd_estabelecimento,
				cd_convenio,
				cd_categoria,
				dt_inicio_vigencia,
				ie_prioridade,
				cd_edicao_amb,
				tx_ajuste_geral,
				dt_atualizacao,
				nm_usuario,
				vl_ch_honorarios,
				vl_ch_custo_oper,
				vl_filme,
				ie_situacao,
				dt_final_vigencia,
				nr_seq_tiss_tabela,
				nr_seq_cbhpm_edicao)
			SELECT	cd_estab_dest_w,
				cd_convenio_orig_p,
				cd_categoria,
				dt_inicio_vigencia,
				ie_prioridade,
				cd_edicao_amb,
				tx_ajuste_geral,
				clock_timestamp(),
				nm_usuario_p,
				vl_ch_honorarios,
				vl_ch_custo_oper,
				vl_filme,
				ie_situacao,
				dt_final_vigencia,
				nr_seq_tiss_tabela,
				nr_seq_cbhpm_edicao
			from 	convenio_amb
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_orig_p;
	elsif (nm_tabela_p = 'REGRA_AJUSTE_PROC') then
		if (ie_excluir_p = 'S') then
			delete	from 	regra_ajuste_proc_aviso
			where	nr_seq_regra in (SELECT nr_sequencia
						 from   regra_ajuste_proc
						 where 	cd_convenio = cd_convenio_orig_p
						 and	cd_estabelecimento = cd_estab_dest_w);
			delete 	from 	regra_ajuste_proc
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;
		begin
		open c016;
			loop
			fetch c016 into
				nr_seq_w;
			EXIT WHEN NOT FOUND; /* apply on c016 */
					begin
					select 	nextval('regra_ajuste_proc_seq')
					into STRICT	nr_sequencia_w
					;

					insert into regra_ajuste_proc(
						nr_sequencia,
						cd_estabelecimento,
						cd_convenio,
						dt_inicio_vigencia,
						ie_situacao,
						dt_atualizacao,
						nm_usuario,
						cd_categoria,
						cd_edicao_amb,
						cd_area_procedimento,
						cd_especialidade,
						cd_grupo_proc,
						cd_procedimento,
						ie_origem_proced,
						ie_preco_informado,
						vl_proc_ajustado,
						ie_glosa,
						cd_procedimento_esp,
						tx_ajuste,
						nr_seq_regra_preco,
						dt_final_vigencia,
						cd_tipo_acomodacao,
						ie_tipo_atendimento,
						cd_setor_atendimento,
						vl_medico,
						vl_custo_operacional,
						qt_filme,
						nr_auxiliares,
						qt_porte_anestesico,
						tx_ajuste_custo_oper,
						tx_ajuste_medico,
						tx_ajuste_filme,
						ie_credenciado,
						pr_glosa,
						cd_cid,
						qt_idade_min,
						qt_idade_max,
						nr_seq_proc_interno,
						nr_seq_exame,
						cd_plano,
						ie_clinica,
						cd_empresa_ref,
						cd_motivo_exc_conta,
						cd_medico,
						ds_observacao,
						tx_ajuste_partic,
						vl_glosa,
						ie_sexo,
						ie_atend_retorno,
						ie_autor_particular,
						cd_equipamento,
						cd_setor_atend_prescr,
						ie_ignora_ch_edicao_amb,
						ie_consiste_prescr,
						ie_utiliza_video,
						ie_spect,
						cd_usuario_convenio,
						qt_pos_inicial,
						qt_pos_final,
						cd_tabela_servico,
						NR_SEQ_AREA_INT,
						NR_SEQ_ESPEC_INT,
						NR_SEQ_GRUPO_INT,
						cd_dependente,
						nr_seq_origem,
						cd_convenio_glosa,
						cd_categoria_glosa,
						ie_origem_proc_ref,
						ie_proc_unico_sus,
						ie_prior_edicao_ajuste,
						ie_origem_proc_refer,
						ie_gerar_sem_proc_ref_sus,
						ie_consiste_edicao_prior,
						ie_tx_edicao_amb_regra,
						ie_paciente_deficiente,
						ie_estrangeiro,
						NR_SEQ_GRUPO_LAB,
						nr_seq_grupo,
						nr_seq_subgrupo,
						nr_seq_forma_org,
						ie_consider_level,
						ie_complexidade_sus,
						vl_filme,
						ie_proc_qt_zero_sus,
						tx_adm,
						tx_desconto,
						ie_vinculo_medico,
						ie_beira_leito,
						ie_tipo_atend_bpa,
						ie_entra_filme_neg,
						ie_edicao_convenio,
						vl_auxiliares,
						vl_anestesista,
						tx_ajuste_matmed,
						vl_maxproc_regra_sus,
						qt_dias_inter_inicio,
						qt_dias_inter_final,
						ie_carater_inter_sus,
						cd_especialidade_medica,
						nr_seq_estrutura)
					SELECT	nr_sequencia_w,
						cd_estab_dest_w,
						cd_convenio_orig_p,
						dt_inicio_vigencia,
						ie_situacao,
						clock_timestamp(),
						nm_usuario_p,
						cd_categoria,
						cd_edicao_amb,
						cd_area_procedimento,
						cd_especialidade,
						cd_grupo_proc,
						cd_procedimento,
						ie_origem_proced,
						ie_preco_informado,
						vl_proc_ajustado,
						ie_glosa,
						cd_procedimento_esp,
						tx_ajuste,
						nr_seq_regra_preco,
						dt_final_vigencia,
						cd_tipo_acomodacao,
						ie_tipo_atendimento,
						cd_setor_atendimento,
						vl_medico,
						vl_custo_operacional,
						qt_filme,
						nr_auxiliares,
						qt_porte_anestesico,
						tx_ajuste_custo_oper,
						tx_ajuste_medico,
						tx_ajuste_filme,
						ie_credenciado,
						pr_glosa,
						cd_cid,
						qt_idade_min,
						qt_idade_max,
						nr_seq_proc_interno,
						nr_seq_exame,
						cd_plano,
						ie_clinica,
						cd_empresa_ref,
						cd_motivo_exc_conta,
						cd_medico,
						ds_observacao,
						tx_ajuste_partic,
						vl_glosa,
						ie_sexo,
						ie_atend_retorno,
						ie_autor_particular,
						cd_equipamento,
						cd_setor_atend_prescr,
						ie_ignora_ch_edicao_amb,
						ie_consiste_prescr,
						ie_utiliza_video,
						ie_spect,
						cd_usuario_convenio,
						qt_pos_inicial,
						qt_pos_final,
						cd_tabela_servico,
						NR_SEQ_AREA_INT,
						NR_SEQ_ESPEC_INT,
						NR_SEQ_GRUPO_INT,
						cd_dependente,
						nr_seq_origem,
						cd_convenio_glosa,
						cd_categoria_glosa,
						ie_origem_proc_ref,
						ie_proc_unico_sus,
						ie_prior_edicao_ajuste,
						ie_origem_proc_refer,
						ie_gerar_sem_proc_ref_sus,
						ie_consiste_edicao_prior,
						ie_tx_edicao_amb_regra,
						ie_paciente_deficiente,
						ie_estrangeiro,
						NR_SEQ_GRUPO_LAB,
						nr_seq_grupo,
						nr_seq_subgrupo,
						nr_seq_forma_org,
						ie_consider_level,
						ie_complexidade_sus,
						vl_filme,
						ie_proc_qt_zero_sus,
						tx_adm,
						tx_desconto,
						ie_vinculo_medico,
						ie_beira_leito,
						ie_tipo_atend_bpa,
						ie_entra_filme_neg,
						ie_edicao_convenio,
						vl_auxiliares,
						vl_anestesista,
						tx_ajuste_matmed,
						vl_maxproc_regra_sus,
						qt_dias_inter_inicio,
						qt_dias_inter_final,
						ie_carater_inter_sus,
						cd_especialidade_medica,
						nr_seq_estrutura
					from 	regra_ajuste_proc
					where 	cd_convenio = cd_convenio_orig_p
					and	cd_estabelecimento = cd_estab_orig_p
					and 	nr_sequencia = nr_seq_w;

					insert into regra_ajuste_proc_aviso(
							nr_sequencia,
							nr_seq_regra,
							dt_atualizacao,
							nm_usuario,
							nm_usuario_aviso,
							cd_perfil_aviso,
							dt_atualizacao_nrec,
							nm_usuario_nrec)
						SELECT 	nextval('regra_ajuste_proc_aviso_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							nm_usuario_aviso,
							cd_perfil_aviso,
							clock_timestamp(),
							nm_usuario_p
						from	regra_ajuste_proc_aviso
						where	nr_seq_regra = nr_seq_w;
					end;
			end loop;
		close c016;
		end;
	elsif (nm_tabela_p = 'CONVENIO_REGRA_QTDE') then
		if (ie_excluir_p = 'S') then
			delete	from 	convenio_regra_qtde_tx
			where	nr_seq_regra in (SELECT nr_sequencia
						 from   convenio_regra_qtde
						 where 	cd_convenio = cd_convenio_orig_p
						 and	cd_estabelecimento = cd_estab_dest_w);
			delete 	from 	convenio_regra_qtde
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;
		begin
		open c017;
			loop
			fetch c017 into
				nr_seq_w;
			EXIT WHEN NOT FOUND; /* apply on c017 */
					begin
					select 	nextval('convenio_regra_qtde_seq')
					into STRICT	nr_sequencia_w
					;

					insert into convenio_regra_qtde(
						nr_sequencia,
						cd_estabelecimento,
						cd_convenio,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_procedimento,
						ie_origem_proced,
						cd_area_procedimento,
						cd_especialidade,
						cd_grupo_proc,
						ie_regra_execucao,
						nr_seq_proc_interno,
						dt_vigencia,
						qt_min_regra_per,
						cd_setor_atendimento,
						ie_regra_valor,
						ie_lado,
						cd_edicao_amb,
						ie_responsavel_credito,
						ie_tipo_atendimento,
						ie_tipo_guia,
						cd_cgc_prestador,
						cd_medico_executor,
						ie_via_acesso,
						ie_tipo_data,
						ie_situacao,
						cd_tipo_procedimento)
					SELECT	nr_sequencia_w,
						cd_estab_dest_w,
						cd_convenio_orig_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_procedimento,
						ie_origem_proced,
						cd_area_procedimento,
						cd_especialidade,
						cd_grupo_proc,
						ie_regra_execucao,
						nr_seq_proc_interno,
						dt_vigencia,
						qt_min_regra_per,
						cd_setor_atendimento,
						ie_regra_valor,
						ie_lado,
						cd_edicao_amb,
						ie_responsavel_credito,
						ie_tipo_atendimento,
						ie_tipo_guia,
						cd_cgc_prestador,
						cd_medico_executor,
						ie_via_acesso,
						ie_tipo_data,
						coalesce(ie_situacao,'A'),
						cd_tipo_procedimento
					from 	convenio_regra_qtde
					where 	cd_convenio = cd_convenio_orig_p
					and	cd_estabelecimento = cd_estab_orig_p
					and 	nr_sequencia = nr_seq_w;

					insert into convenio_regra_qtde_tx(
						nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						qt_exec_min,
						qt_exec_max,
						tx_procedimento,
						tx_custo_operacional,
						tx_medico,
						tx_auxiliar,
						tx_anestesista)
					SELECT 	nextval('convenio_regra_qtde_tx_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						qt_exec_min,
						qt_exec_max,
						tx_procedimento,
						tx_custo_operacional,
						tx_medico,
						tx_auxiliar,
						tx_anestesista
					from	convenio_regra_qtde_tx
					where	nr_seq_regra = nr_seq_w;
					end;
			end loop;
		close c017;
		end;
	elsif (nm_tabela_p = 'CONVENIO_SERVICO') then
		if (ie_excluir_p = 'S') then
			delete 	from 	convenio_servico
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		begin
		open c018;
		loop
			fetch c018 into
				cd_categoria_w,
				dt_liberacao_tabela_w,
				cd_tabela_servico_w,
				ie_situacao_w,
				nr_prioridade_w,
				dt_termino_w,
				tx_ajuste_geral_w,
				nr_seq_tiss_tabela_w;
			EXIT WHEN NOT FOUND; /* apply on c018 */
			begin

			qt_tabelas_w:= 0;

			select 	count(*)
			into STRICT	qt_tabelas_w
			from	tabela_servico
			where 	cd_tabela_servico = cd_tabela_servico_w
			and	cd_estabelecimento = cd_estab_dest_w;

			if (qt_tabelas_w > 0) then
				insert into convenio_servico(
					nr_sequencia,
					cd_estabelecimento,
					cd_convenio,
					cd_categoria,
					dt_liberacao_tabela,
					cd_tabela_servico,
					dt_atualizacao,
					nm_usuario,
					ie_situacao,
					nr_prioridade,
					dt_termino,
					tx_ajuste_geral,
					nr_seq_tiss_tabela)
				values ( nextval('convenio_servico_seq'),
					cd_estab_dest_w,
					cd_convenio_orig_p,
					cd_categoria_w,
					dt_liberacao_tabela_w,
					cd_tabela_servico_w,
					clock_timestamp(),
					nm_usuario_p,
					ie_situacao_w,
					nr_prioridade_w,
					dt_termino_w,
					tx_ajuste_geral_w,
					nr_seq_tiss_tabela_w);
			end if;

			end;
		end loop;
		close c018;
		end;
	elsif (nm_tabela_p = 'CONVENIO_PRECO_MAT') then
		if (ie_excluir_p = 'S') then
			delete 	from 	convenio_preco_mat
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		begin
		open c019;
		loop
			fetch c019 into
				cd_categoria_w,
				dt_liberacao_tabela_w,
				cd_tab_preco_mat_w,
				tx_ajuste_tabela_mat_w,
				ie_situacao_w,
				nr_prioridade_w,
				dt_inicio_vigencia_w,
				dt_final_vigencia_w,
				ie_tab_adicional_w,
				ie_integracao_opme_w;
			EXIT WHEN NOT FOUND; /* apply on c019 */
			begin

			qt_tabelas_w:= 0;

			select 	count(*)
			into STRICT	qt_tabelas_w
			from	tabela_preco_material
			where 	cd_tab_preco_mat = cd_tab_preco_mat_w
			and	cd_estabelecimento = cd_estab_dest_w;

			if (qt_tabelas_w > 0) then
				insert into convenio_preco_mat(
					cd_estabelecimento,
					cd_convenio,
					cd_categoria,
					dt_liberacao_tabela,
					cd_tab_preco_mat,
					dt_atualizacao,
					nm_usuario,
					tx_ajuste_tabela_mat,
					ie_situacao,
					nr_prioridade,
					dt_inicio_vigencia,
					dt_final_vigencia,
					ie_tab_adicional,
					ie_integracao_opme)
				values (cd_estab_dest_w,
					cd_convenio_orig_p,
					cd_categoria_w,
					dt_liberacao_tabela_w,
					cd_tab_preco_mat_w,
					clock_timestamp(),
					nm_usuario_p,
					tx_ajuste_tabela_mat_w,
					ie_situacao_w,
					nr_prioridade_w,
					dt_inicio_vigencia_w,
					dt_final_vigencia_w,
					ie_tab_adicional_w,
					ie_integracao_opme_w);
			end if;

			end;
		end loop;
		close c019;
		end;
	elsif (nm_tabela_p = 'CONVENIO_BRASINDICE') then
		if (ie_excluir_p = 'S') then
			delete from convenio_brasindice
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		insert into convenio_brasindice(
				cd_convenio,
				cd_categoria,
				dt_inicio_vigencia,
				tx_preco_fabrica,
				dt_atualizacao,
				nm_usuario,
				tx_brasindice_pmc,
				ie_situacao,
				qt_dia_fixo,
				dt_base_fixo,
				cd_estabelecimento,
				tx_pmc_neg,
				tx_pmc_pos,
				nr_sequencia,
				cd_grupo_material,
				cd_classe_material,
				cd_subgrupo_material,
				nr_seq_estrutura,
				ie_tipo_material,
				tx_pfb_neg,
				tx_pfb_pos,
				ie_dividir_indice_pmc,
				ie_dividir_indice_pfb,
				ie_tipo_atendimento,
				dt_final_vigencia,
				cd_plano,
				vl_minimo,
				vl_maximo,
				ie_solucao,
				ie_restrito)
		SELECT 		cd_convenio_orig_p,
				cd_categoria,
				dt_inicio_vigencia,
				tx_preco_fabrica,
				clock_timestamp(),
				nm_usuario_p,
				tx_brasindice_pmc,
				ie_situacao,
				qt_dia_fixo,
				dt_base_fixo,
				cd_estab_dest_w,
				tx_pmc_neg,
				tx_pmc_pos,
				nextval('convenio_brasindice_seq'),
				cd_grupo_material,
				cd_classe_material,
				cd_subgrupo_material,
				nr_seq_estrutura,
				ie_tipo_material,
				tx_pfb_neg,
				tx_pfb_pos,
				ie_dividir_indice_pmc,
				ie_dividir_indice_pfb,
				ie_tipo_atendimento,
				dt_final_vigencia,
				cd_plano,
				vl_minimo,
				vl_maximo,
				ie_solucao,
				ie_restrito
		from 		convenio_brasindice
		where 		cd_convenio 		= cd_convenio_orig_p
		and		cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'MEDICO_CONVENIO') then
		if (ie_excluir_p = 'S') then
			delete from medico_convenio
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		insert into medico_convenio(
				cd_pessoa_fisica,
				cd_convenio,
				dt_atualizacao,
				nm_usuario,
				ie_conveniado,
				ie_auditor,
				cd_medico_convenio,
				ie_plantonista,
				cd_estabelecimento,
				ie_tipo_servico_sus,
                cd_prestador,
                cd_especialidade,
                cd_categoria,
                cd_setor_atendimento,
                cd_plano_convenio,
                ie_tipo_atendimento,
                dt_inicio_vigencia,
                ie_funcao_medico,
                ie_carater_inter_sus,
				nr_sequencia)
		SELECT  cd_pessoa_fisica,
				cd_convenio_orig_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_conveniado,
				ie_auditor,
				cd_medico_convenio,
				ie_plantonista,
				cd_estab_dest_w,
				ie_tipo_servico_sus,
                cd_prestador,
                cd_especialidade,
                cd_categoria,
                cd_setor_atendimento,
                cd_plano_convenio,
                ie_tipo_atendimento,
                dt_inicio_vigencia,
                ie_funcao_medico,
                ie_carater_inter_sus,
				nextval('medico_convenio_seq')
		from 		medico_convenio
		where 		cd_convenio 		= cd_convenio_orig_p
		and		cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'PACOTE') then
		if (ie_excluir_p = 'S') then
			delete	from pacote_tipo_acomod_proc
			where	nr_seq_pac_acomod in ( 	SELECT	nr_sequencia
							from 	pacote_tipo_acomodacao
							where 	nr_seq_pacote in ( SELECT	nr_seq_pacote
										   from 	pacote
										   where	cd_convenio 		=

cd_convenio_orig_p
										   and		cd_estabelecimento	=

cd_estab_dest_w));
			delete from pacote a
			where	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w
			and	not exists (
				SELECT 1
				from	atendimento_pacote b
				where	a.nr_seq_pacote	= b.nr_seq_pacote);

		end if;
		open c006;
		loop
			fetch c006 into nr_seq_w;
			EXIT WHEN NOT FOUND; /* apply on c006 */

			select nextval('pacote_seq')
			into STRICT nr_sequencia_w
			;

			insert into pacote(
				nr_seq_pacote,
				cd_convenio,
				cd_proced_pacote,
				ie_origem_proced,
				ie_situacao,
				dt_atualizacao,
				nm_usuario,
				ds_observacao,
				cd_estabelecimento,
				ie_agendavel,
				ie_pacote_automatico,
				ie_prioridade,
				cd_moeda,
				ie_exclusivo)
			SELECT nr_sequencia_w,
				cd_convenio_orig_p,
				cd_proced_pacote,
				ie_origem_proced,
				ie_situacao,
				clock_timestamp(),
				nm_usuario_p,
				ds_observacao,
				cd_estab_dest_w,
				ie_agendavel,
				ie_pacote_automatico,
				ie_prioridade,
				cd_moeda,
				ie_exclusivo
			from 	pacote
			where 	nr_seq_pacote = nr_seq_w;

			insert into pacote_material(
				nr_seq_pacote,
				nr_sequencia,
				ie_inclui_exclui,
				dt_atualizacao,
				nm_usuario,
				ie_excedente,
				cd_grupo_material,
				cd_subgrupo_material,
				cd_classe_material,
				cd_material,
				qt_limite,
				ie_tipo_atendimento,
				cd_setor_atendimento,
				ie_valor,
				vl_minimo,
				vl_maximo,
				pr_desconto,
				nr_seq_pac_acomod,
				ie_tipo_setor,
				nr_seq_familia,
				cd_centro_custo,
				ie_ratear_item,
				vl_negociado,
				nr_seq_estrutura,
				ie_considera_generico,
				ie_consiste_limite_item,
				ie_objetivo,
				ie_setor_exclusivo,
				ie_sexo,
				ie_somente_sem_rla,
				pr_orcamento,
				qt_idade_max,
				qt_idade_min,
				cd_local_estoque)
			SELECT 	nr_sequencia_w,
				nr_sequencia,
				ie_inclui_exclui,
				clock_timestamp(),
				nm_usuario_p,
				ie_excedente,
				cd_grupo_material,
				cd_subgrupo_material,
				cd_classe_material,
				cd_material,
				qt_limite,
				ie_tipo_atendimento,
				cd_setor_atendimento,
				ie_valor,
				vl_minimo,
				vl_maximo,
				pr_desconto,
				nr_seq_pac_acomod,
				ie_tipo_setor,
				nr_seq_familia,
				cd_centro_custo,
				ie_ratear_item,
				vl_negociado,
				nr_seq_estrutura,
				ie_considera_generico,
				ie_consiste_limite_item,
				ie_objetivo,
				ie_setor_exclusivo,
				ie_sexo,
				ie_somente_sem_rla,
				pr_orcamento,
				qt_idade_max,
				qt_idade_min,
				cd_local_estoque
			from 	pacote_material
			where 	nr_seq_pacote = nr_seq_w;

			insert into pacote_procedimento(
				nr_seq_pacote,
				nr_sequencia,
				ie_inclui_exclui,
				dt_atualizacao,
				nm_usuario,
				ie_excedente,
				cd_area_proced,
				cd_especial_proced,
				cd_grupo_proced,
				cd_procedimento,
				ie_origem_proced,
				qt_limite,
				ie_considera_honorario,
				cd_setor_atendimento,
				ie_tipo_atendimento,
				ie_calcula_honorario,
				ie_calcula_custo_oper,
				pr_desconto,
				nr_seq_pac_acomod,
				cd_centro_custo,
				nr_seq_classif,
				qt_idade_min,
				qt_idade_max,
				vl_maximo,
				vl_minimo,
				ie_tipo_valor,
				ie_ratear_item,
				pr_desc,
				vl_negociado,
				ie_agendavel,
				ie_sexo,
				cd_medico,
				ie_setor_exclusivo,
				cd_moeda,
				nr_seq_proc_interno,
				cd_cgc_prestador,
				ie_valida_limite_proc,
				nr_seq_estrutura)
			SELECT 	nr_sequencia_w,
				nr_sequencia,
				ie_inclui_exclui,
				clock_timestamp(),
				nm_usuario_p,
				ie_excedente,
				cd_area_proced,
				cd_especial_proced,
				cd_grupo_proced,
				cd_procedimento,
				ie_origem_proced,
				qt_limite,
				ie_considera_honorario,
				cd_setor_atendimento,
				ie_tipo_atendimento,
				ie_calcula_honorario,
				ie_calcula_custo_oper,
				pr_desconto,
				nr_seq_pac_acomod,
				cd_centro_custo,
				nr_seq_classif,
				qt_idade_min,
				qt_idade_max,
				vl_maximo,
				vl_minimo,
				ie_tipo_valor,
				ie_ratear_item,
				pr_desc,
				vl_negociado,
				ie_agendavel,
				ie_sexo,
				cd_medico,
				ie_setor_exclusivo,
				cd_moeda,
				nr_seq_proc_interno,
				cd_cgc_prestador,
				ie_valida_limite_proc,
				nr_seq_estrutura
			from 	pacote_procedimento
			where 	nr_seq_pacote = nr_seq_w;

			begin
			open c014;
			loop
				fetch c014 into
					ie_tipo_doc_w,
					ds_documento_w;
				EXIT WHEN NOT FOUND; /* apply on c014 */
				begin
				insert	into pacote_doc(
					nr_sequencia,
					nr_seq_pacote,
					ie_tipo_doc,
					dt_atualizacao,
					nm_usuario,
					ds_documento,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				values (nextval('pacote_doc_seq'),
					nr_sequencia_w,
					ie_tipo_doc_w,
					clock_timestamp(),
					nm_usuario_p,
					ds_documento_w,
					clock_timestamp(),
					nm_usuario_p);
				end;
			end loop;
			close c014;
			end;


			begin
			open c008;
			loop
				fetch c008 into
						ie_tipo_acomod_w,
						qt_dias_pacote_w,
						qt_dias_hospital_w,
						qt_dias_uti_w,
						ie_excedente_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						vl_pacote_w,
						vl_honorario_w,
						qt_ponto_pacote_w,
						qt_ponto_honorario_w,
						cd_estrutura_conta_w,
						ie_classificacao_w,
						cd_categoria_w,
						cd_plano_w,
						dt_vigencia_w,
						dt_vigencia_final_w,
						ie_exige_gabarito_w,
						ie_regra_hora_inicio_w,
						ie_regra_hora_fim_w,
						ie_ratear_repasse_w,
						nr_seq_acomod_w,
						ie_tipo_atendimento_w,
						ie_gerar_proced_negativo_w,
						vl_anestesista_w,
						ie_atend_retorno_w,
						ie_atend_acomp_w,
						cd_setor_atendimento_w,
						nr_seq_proc_interno_w,
						cd_medico_executor_w,
						ie_clinica_w,
						vl_materiais_w,
						ie_consiste_cirurgia_w,
						ie_exige_item_conta_w,
						vl_auxiliares_w,
						ds_observacao_w,
						ie_sexo_w,
						pr_acrescimo_rn_w,
						ie_lado_w,
						ie_setor_lanc_exclusivo_w,
						qt_procedimento_w,
						ie_tipo_atend_conta_w,
						cd_centro_custo_w,
						ie_credenciado_w,
						qt_hora_w,
						acomod_qt_idade_min_w,
						acomod_qt_idade_max_w,
						acomod_qt_dias_inter_inicio_w,
						acomod_qt_dias_inter_final_w,
						ie_tipo_anestesia_w,
						hr_final_pacote_w,
						pr_faturar_pacote_w,
						ie_atualiza_medico_w,
						ie_atend_alta_w,
						ie_consiste_dias_inter_w,
						ie_data_consiste_idade_w,
                        ie_carater_inter_sus_w;
				EXIT WHEN NOT FOUND; /* apply on c008 */
						begin
						select nextval('pacote_tipo_acomodacao_seq')
						into STRICT nr_seq_tipo_acomodacao_w
						;

						insert into pacote_tipo_acomodacao(
							nr_seq_pacote,
							ie_tipo_acomod,
							dt_atualizacao,
							nm_usuario,
							qt_dias_pacote,
							qt_dias_hospital,
							qt_dias_uti,
							ie_excedente,
							cd_procedimento,
							ie_origem_proced,
							vl_pacote,
							vl_honorario,
							qt_ponto_pacote,
							qt_ponto_honorario,
							cd_estrutura_conta,
							ie_classificacao,
							nr_sequencia,
							cd_categoria,
							cd_plano,
							dt_vigencia,
							dt_vigencia_final,
							ie_exige_gabarito,
							ie_regra_hora_inicio,
							ie_regra_hora_fim,
							ie_situacao,
							ie_ratear_repasse,
							ie_tipo_atendimento,
							ie_gerar_proced_negativo,
							vl_anestesista,
							ie_atend_retorno,
							ie_atend_acomp,
							cd_setor_atendimento,
							nr_seq_proc_interno,
							cd_medico_executor,
							ie_clinica,
							vl_materiais,
							ie_consiste_cirurgia,
							ie_exige_item_conta,
							vl_auxiliares,
							ds_observacao,
							ie_sexo,
							pr_acrescimo_rn,
							ie_lado,
							ie_setor_lanc_exclusivo,
							qt_procedimento,
							ie_tipo_atend_conta,
							cd_centro_custo,
							ie_credenciado,
							qt_hora,
							qt_idade_min,
							qt_idade_max,
							qt_dias_inter_inicio,
							qt_dias_inter_final,
							ie_tipo_anestesia,
							hr_final_pacote,
							pr_faturar_pacote,
							ie_atualiza_medico,
							ie_atend_alta,
							ie_consiste_dias_inter,
							ie_data_consiste_idade,
                            ie_carater_inter_sus)
						values (
							nr_sequencia_w,
							ie_tipo_acomod_w,
							clock_timestamp(),
							nm_usuario_p,
							qt_dias_pacote_w,
							qt_dias_hospital_w,
							qt_dias_uti_w,
							ie_excedente_w,
							cd_procedimento_w,
							ie_origem_proced_w,
							vl_pacote_w,
							vl_honorario_w,
							qt_ponto_pacote_w,
							qt_ponto_honorario_w,
							cd_estrutura_conta_w,
							ie_classificacao_w,
							nr_seq_tipo_acomodacao_w,
							cd_categoria_w,
							cd_plano_w,
							dt_vigencia_w,
							dt_vigencia_final_w,
							ie_exige_gabarito_w,
							ie_regra_hora_inicio_w,
							ie_regra_hora_fim_w,
							'A',
							ie_ratear_repasse_w,
							ie_tipo_atendimento_w,
							ie_gerar_proced_negativo_w,
							vl_anestesista_w,
							ie_atend_retorno_w,
							ie_atend_acomp_w,
							cd_setor_atendimento_w,
							nr_seq_proc_interno_w,
							cd_medico_executor_w,
							ie_clinica_w,
							vl_materiais_w,
							ie_consiste_cirurgia_w,
							ie_exige_item_conta_w,
							vl_auxiliares_w,
							ds_observacao_w,
							ie_sexo_w,
							pr_acrescimo_rn_w,
							ie_lado_w,
							ie_setor_lanc_exclusivo_w,
							qt_procedimento_w,
							ie_tipo_atend_conta_w,
							cd_centro_custo_w,
							ie_credenciado_w,
							qt_hora_w,
							acomod_qt_idade_min_w,
							acomod_qt_idade_max_w,
							acomod_qt_dias_inter_inicio_w,
							acomod_qt_dias_inter_final_w,
							ie_tipo_anestesia_w,
							hr_final_pacote_w,
							pr_faturar_pacote_w,
							ie_atualiza_medico_w,
							ie_atend_alta_w,
							ie_consiste_dias_inter_w,
							ie_data_consiste_idade_w,
                            ie_carater_inter_sus_w);
						update	pacote_material
						set	nr_seq_pac_acomod = nr_seq_tipo_acomodacao_w
						where	(nr_seq_pac_acomod IS NOT NULL AND nr_seq_pac_acomod::text <> '')
						and 	nr_seq_pacote = nr_sequencia_w;

						update	pacote_procedimento
						set	nr_seq_pac_acomod = nr_seq_tipo_acomodacao_w
						where	(nr_seq_pac_acomod IS NOT NULL AND nr_seq_pac_acomod::text <> '')
						and 	nr_seq_pacote = nr_sequencia_w;

						insert into pacote_tipo_acomod_proc(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_pac_acomod,
							cd_procedimento,
							ie_origem_proced,
							dt_atualizacao_nrec,
							nm_usuario_nrec)
						SELECT 	nextval('pacote_tipo_acomod_proc_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_tipo_acomodacao_w,
							cd_procedimento,
							ie_origem_proced,
							clock_timestamp(),
							nm_usuario_p
						from 	pacote_tipo_acomod_proc
						where 	nr_seq_pac_acomod = nr_seq_acomod_w;

						end;
			end loop;
			close c008;
			end;
		end loop;
		close c006;

		open	c028;
		loop
		fetch	c028 into
			nr_sequencia_w,
			cd_doenca_w,
			nr_seq_w,
			ie_situacao_w;
		EXIT WHEN NOT FOUND; /* apply on c028 */
			begin

			select	nextval('pacote_cid_seq')
			into STRICT	nr_sequencia_w
			;

			insert	into pacote_cid(NR_SEQUENCIA,
				CD_DOENCA,
				NR_SEQ_PACOTE,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				IE_SITUACAO)
			values (nr_sequencia_w,
				cd_doenca_w,
				nr_seq_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_situacao_w);
			end;
		end loop;
		close c028;

	elsif (nm_tabela_p = 'CONVENIO_DOCUMENTO') then
		if (ie_excluir_p = 'S') then
			delete 	from 	convenio_documento
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;
		begin
		open c015;
			loop
			fetch c015 into
				ie_documento_w,
				dt_vigencia_w,
				ds_arquivo_w,
				dt_final_vigencia_ww,
				nr_seq_w,
				ds_documento_ww;
			EXIT WHEN NOT FOUND; /* apply on c015 */
					begin

					select	nextval('convenio_documento_seq')
					into STRICT	nr_sequencia_w
					;

					insert into convenio_documento(
						nr_sequencia,
						cd_convenio,
						ie_documento,
						dt_atualizacao,
						nm_usuario,
						cd_estabelecimento,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_vigencia,
						ds_arquivo,
						dt_final_vigencia,
						ds_documento)
					values (nr_sequencia_w,
						cd_convenio_orig_p,
						ie_documento_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_estab_dest_w,
						clock_timestamp(),
						nm_usuario_p,
						dt_vigencia_w,
						ds_arquivo_w,
						dt_final_vigencia_ww,
						ds_documento_ww);
					end;

					CALL copia_campo_long('CONVENIO_DOCUMENTO','DS_DOCUMENTO','WHERE NR_SEQUENCIA = :NR_SEQUENCIA',
								 'NR_SEQUENCIA='||nr_seq_w,'NR_SEQUENCIA='||nr_sequencia_w);

			end loop;
		close c015;
		end;
	elsif (nm_tabela_p = 'CONVENIO_DOC_ATEND') then
		if (ie_excluir_p = 'S') then
			delete 	from 	convenio_doc_atend
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		open c27;
		loop
		fetch c27 into
			c27_w;
		EXIT WHEN NOT FOUND; /* apply on c27 */
			begin

			select	nextval('convenio_doc_atend_seq')
			into STRICT	nr_sequencia_w
			;

			insert into convenio_doc_atend(
				nr_sequencia,
				cd_convenio,
				ie_documento,
				dt_atualizacao,
				nm_usuario,
				cd_estabelecimento,
				cd_plano,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_titulo,
				ds_documento)
			values (
				nr_sequencia_w,
				cd_convenio_orig_p,
				c27_w.ie_documento,
				clock_timestamp(),
				nm_usuario_p,
				cd_estab_dest_w,
				c27_w.cd_plano,
				clock_timestamp(),
				nm_usuario_p,
				c27_w.ds_titulo,
				' ');

			CALL copia_campo_long('CONVENIO_DOC_ATEND','DS_DOCUMENTO','WHERE NR_SEQUENCIA = :NR_SEQUENCIA',
									 'NR_SEQUENCIA=' || c27_w.nr_sequencia,'NR_SEQUENCIA=' ||

nr_sequencia_w);
			end;
		end loop;
		close c27;

	elsif (nm_tabela_p = 'PARAMETROS_CONTA_CONTABIL') then
		if (ie_excluir_p = 'S') then
			delete 	from parametros_conta_contabil
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		insert into parametros_conta_contabil(
			cd_sequencia_parametro,
			cd_estabelecimento,
			cd_empresa,
			cd_conta_receita,
			cd_conta_estoque,
			cd_conta_passag_direta,
			cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material,
			cd_material,
			cd_area_proced,
			cd_especial_proced,
			cd_grupo_proced,
			cd_procedimento,
			nm_usuario,
			dt_atualizacao,
			ie_origem_proced,
			cd_conta_despesa,
			cd_setor_atendimento,
			ie_tipo_atendimento,
			ie_classif_convenio,
			cd_convenio,
			cd_local_estoque,
			nr_seq_forma_org,
			nr_seq_grupo,
			nr_seq_subgrupo)
		SELECT nextval('parametros_conta_contabil_seq'),
			cd_estab_dest_w,
			cd_empresa,
			cd_conta_receita,
			cd_conta_estoque,
			cd_conta_passag_direta,
			cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material,
			cd_material,
			cd_area_proced,
			cd_especial_proced,
			cd_grupo_proced,
			cd_procedimento,
			nm_usuario_p,
			clock_timestamp(),
			ie_origem_proced,
			cd_conta_despesa,
			cd_setor_atendimento,
			ie_tipo_atendimento,
			ie_classif_convenio,
			cd_convenio_orig_p,
			cd_local_estoque,
			nr_seq_forma_org,
			nr_seq_grupo,
			nr_seq_subgrupo
		from 	parametros_conta_contabil
		where 	cd_convenio = cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'PROC_CRITERIO_HORARIO') then
		if (ie_excluir_p = 'S') then
			delete 	from proc_criterio_horario
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;

		insert into proc_criterio_horario(
			nr_sequencia,
			cd_estabelecimento,
			ie_prioridade,
			dt_atualizacao,
			nm_usuario,
			dt_dia_semana,
			ie_feriado,
			hr_inicial,
			hr_final,
			cd_setor_exclusivo,
			ie_tipo_atendimento,
			cd_convenio,
			cd_edicao_amb,
			cd_area_proced,
			cd_especial_proced,
			cd_grupo_proced,
			cd_procedimento,
			ie_origem_proced,
			tx_procedimento,
			tx_medico,
			tx_anestesista,
			tx_auxiliares,
			tx_materiais,
			tx_custo_operacional,
			ie_carater_inter_sus,
			ie_video,
			cd_categoria,
			cd_procedimento_calculo,
			cd_tipo_acomodacao,
			dt_final_vigencia,
			dt_inicio_vigencia,
			ie_carater_cirurgia,
			ie_credenciado,
			ie_hora_final_cirurgia,
			ie_origem_proced_calculo,
			ie_tipo_feriado,
			vl_adicional_medico,
			vl_adicional_proc,
			nr_seq_proc_interno)
		SELECT 	nextval('proc_criterio_horario_seq'),
			cd_estab_dest_w,
			ie_prioridade,
			clock_timestamp(),
			nm_usuario_p,
			dt_dia_semana,
			ie_feriado,
			hr_inicial,
			hr_final,
			cd_setor_exclusivo,
			ie_tipo_atendimento,
			cd_convenio_orig_p,
			cd_edicao_amb,
			cd_area_proced,
			cd_especial_proced,
			cd_grupo_proced,
			cd_procedimento,
			ie_origem_proced,
			tx_procedimento,
			tx_medico,
			tx_anestesista,
			tx_auxiliares,
			tx_materiais,
			tx_custo_operacional,
			ie_carater_inter_sus,
			ie_video,
			cd_categoria,
			cd_procedimento_calculo,
			cd_tipo_acomodacao,
			dt_final_vigencia,
			dt_inicio_vigencia,
			ie_carater_cirurgia,
			ie_credenciado,
			ie_hora_final_cirurgia,
			ie_origem_proced_calculo,
			ie_tipo_feriado,
			vl_adicional_medico,
			vl_adicional_proc,
			nr_seq_proc_interno
		from 	proc_criterio_horario
		where 	cd_convenio = cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'REGRA_ALOC_CUSTO_SETOR') then
		if (ie_excluir_p = 'S') then
			delete 	from regra_aloc_custo_setor
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		insert into regra_aloc_custo_setor(
			nr_sequencia,
			cd_setor_atendimento,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			ie_calculo_custo,
			pr_aplicar,
			vl_custo,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_procedimento,
			ie_origem_proced,
			cd_convenio,
			cd_proc_custo,
			ie_origem_proc_custo,
			cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material,
			cd_material,
			pr_custo_oper,
			pr_medico,
			pr_material,
			ds_criterio_aloc_mat,
			nr_seq_exame,
			ie_custo_hm,
			dt_inicio_vigencia,
			dt_fim_vigencia)
		SELECT 	nextval('regra_aloc_custo_setor_seq'),
			cd_setor_atendimento,
			cd_estab_dest_w,
			clock_timestamp(),
			nm_usuario_p,
			ie_calculo_custo,
			pr_aplicar,
			vl_custo,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_procedimento,
			ie_origem_proced,
			cd_convenio_orig_p,
			cd_proc_custo,
			ie_origem_proc_custo,
			cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material,
			cd_material,
			pr_custo_oper,
			pr_medico,
			pr_material,
			ds_criterio_aloc_mat,
			nr_seq_exame,
			ie_custo_hm,
			dt_inicio_vigencia,
			dt_fim_vigencia
		from 	regra_aloc_custo_setor
		where 	cd_convenio 		= cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'REGRA_HONORARIO_CRITERIO') then
		if (ie_excluir_p = 'S') then
			delete 	from regra_honorario_criterio
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento 	= cd_estab_dest_w;
		end if;
		insert into regra_honorario_criterio(
			nr_sequencia,
			cd_estabelecimento,
			cd_regra,
			dt_atualizacao,
			nm_usuario,
			cd_convenio,
			cd_edicao_amb,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_procedimento,
			ie_origem_proced,
			ie_tipo_atendimento,
			cd_setor_atendimento,
			ie_credenciado,
			cd_especialidade_medica,
			cd_medico,
			ie_corpo_clinico,
			ie_funcionario,
			ie_tipo_servico_sus,
			ie_tipo_ato_sus,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_cgc,
			cd_categoria,
			ie_tipo_convenio,
			ie_pacote,
			ie_vinculo_medico,
			ie_clinica,
			ie_situacao,
			cd_tipo_procedimento,
			cd_cbo,
			nr_seq_proc_interno,
			nr_seq_exame)
		SELECT 	nextval('regra_honorario_criterio_seq'),
			cd_estab_dest_w,
			cd_regra,
			clock_timestamp(),
			nm_usuario_p,
			cd_convenio_orig_p,
			cd_edicao_amb,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_procedimento,
			ie_origem_proced,
			ie_tipo_atendimento,
			cd_setor_atendimento,
			ie_credenciado,
			cd_especialidade_medica,
			cd_medico,
			ie_corpo_clinico,
			coalesce(ie_funcionario,'N'),
			ie_tipo_servico_sus,
			ie_tipo_ato_sus,
			clock_timestamp(),
			nm_usuario_p,
			cd_cgc,
			cd_categoria,
			ie_tipo_convenio,
			ie_pacote,
			ie_vinculo_medico,
			ie_clinica,
			coalesce(ie_situacao,'A'),
			cd_tipo_procedimento,
			cd_cbo,
			nr_seq_proc_interno,
			nr_seq_exame
		from 	regra_honorario_criterio
		where 	cd_convenio 		= cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'REGRA_LANC_AUTOMATICO') then
		if (ie_excluir_p = 'S') then
			delete 	from regra_lanc_automatico
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
			delete from regra_lanc_aut_pac
			where nr_seq_regra in ( SELECT nr_sequencia
						from regra_lanc_automatico
						where 	cd_convenio 		= cd_convenio_orig_p
						and	cd_estabelecimento	= cd_estab_dest_w);

		end if;
		open c005;
		loop
			fetch c005 into nr_seq_w;
			EXIT WHEN NOT FOUND; /* apply on c005 */

			select nextval('regra_lanc_automatico_seq')
			into STRICT nr_sequencia_w
			;

			insert into regra_lanc_automatico(
				nr_sequencia,
				cd_estabelecimento,
				ds_regra,
				dt_atualizacao,
				nm_usuario,
				cd_convenio,
				ie_tipo_atendimento,
				cd_setor_atendimento,
				cd_medico,
				nr_seq_evento,
				cd_area_procedimento,
				cd_especialidade_proc,
				cd_grupo_proc,
				cd_procedimento,
				ie_origem_proced,
				ie_tipo_convenio,
				ie_situacao,
				nr_seq_exame,
				cd_categoria,
				nr_seq_proc_interno, cd_motivo_alta, ie_clinica,
				cd_tipo_acomodacao, qt_ano_min, qt_ano_max,
				dt_atualizacao_nrec, nm_usuario_nrec, ie_via_aplicacao,
				cd_material, cd_classe_material, cd_subgrupo_material,
				cd_grupo_material, cd_especialidade, nr_seq_classificacao,
				cd_tipo_anestesia, cd_funcao, cd_espec_medic_atend, cd_plano_convenio,
				ie_evolucao_clinica, ie_conv_parametro, nr_seq_forma_org,
				nr_seq_subgrupo, nr_seq_grupo, ie_vincular_proc_princ,ie_dispara_kit_mat,
				ie_duplicar_proc_regra)
			SELECT 	nr_sequencia_w,
				cd_estab_dest_w,
				ds_regra,
				clock_timestamp(),
				nm_usuario_p,
				cd_convenio_orig_p,
				ie_tipo_atendimento,
				cd_setor_atendimento,
				cd_medico,
				nr_seq_evento,
				cd_area_procedimento,
				cd_especialidade_proc,
				cd_grupo_proc,
				cd_procedimento,
				ie_origem_proced,
				ie_tipo_convenio,
				ie_situacao,
				nr_seq_exame,
				cd_categoria,
				nr_seq_proc_interno, cd_motivo_alta, ie_clinica,
				cd_tipo_acomodacao, qt_ano_min, qt_ano_max,
				clock_timestamp(), nm_usuario_p, ie_via_aplicacao,
				cd_material, cd_classe_material, cd_subgrupo_material,
				cd_grupo_material, cd_especialidade, nr_seq_classificacao,
				cd_tipo_anestesia, cd_funcao, cd_espec_medic_atend, cd_plano_convenio,
				ie_evolucao_clinica, ie_conv_parametro, nr_seq_forma_org,
				nr_seq_subgrupo, nr_seq_grupo, ie_vincular_proc_princ,ie_dispara_kit_mat,
				coalesce(ie_duplicar_proc_regra,'N')
			from regra_lanc_automatico
			where nr_sequencia = nr_seq_w;

			insert into regra_lanc_aut_pac(
				nr_seq_regra,
				nr_seq_lanc,
				dt_atualizacao,
				nm_usuario,
				cd_procedimento,
				ie_origem_proced,
				cd_material,
				qt_lancamento,
				ie_medico_atendimento,
				ie_local_estoque,
				ie_quantidade,
				ie_retorno,
				nr_seq_exame,
				ie_funcao_medico,
				tx_procedimento,
				qt_ano_min,
				qt_ano_max,
				ie_regra_guia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_forma_func_medico,
				nr_seq_proc_interno,
				ie_consiste_item,
				ie_proc_princ_atend,
				cd_estab_item,
				cd_setor_item,
				nr_min_duracao,
				cd_cnpj_prestador,
				cd_cid_doenca,/*Geliard OS178910*/
				ie_acao,
				ie_adic_orcamento,
				cd_medico,
				ie_vinc_proc_princ_item,
				qt_dias_primeira_cir,
				qt_dias_primeira_prescr,
				ie_gera_conta_estab,
				ie_gerar_autor,
				ie_gera_se_item_exc_conta
				)
			SELECT 	nr_sequencia_w,
				nr_seq_lanc,
				clock_timestamp(),
				nm_usuario_p,
				cd_procedimento,
				ie_origem_proced,
				cd_material,
				qt_lancamento,
				ie_medico_atendimento,
				ie_local_estoque,
				ie_quantidade,
				ie_retorno,
				nr_seq_exame,
				ie_funcao_medico,
				tx_procedimento,
				qt_ano_min,
				qt_ano_max,
				ie_regra_guia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_forma_func_medico,
				nr_seq_proc_interno,
				ie_consiste_item,
				ie_proc_princ_atend,
				cd_estab_item,
				cd_setor_item,
				nr_min_duracao,
				cd_cnpj_prestador,
				cd_cid_doenca,/*Geliard OS178910*/
				ie_acao,
				coalesce(ie_adic_orcamento,'N'),
				cd_medico,
				ie_vinc_proc_princ_item,
				qt_dias_primeira_cir,
				qt_dias_primeira_prescr,
				ie_gera_conta_estab,
				ie_gerar_autor,
				ie_gera_se_item_exc_conta
			from	regra_lanc_aut_pac
			where	nr_seq_regra = nr_seq_w;
		end loop;
		close c005;
	elsif (nm_tabela_p = 'REGRA_ORIGEM_PROCED') then
		if (ie_excluir_p = 'S') then
			delete 	from regra_origem_proced
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		insert into regra_origem_proced(
			nr_sequencia,
			ds_regra,
			ie_origem_proced,
			dt_atualizacao,
			nm_usuario,
			cd_convenio,
			cd_categoria,
			ie_tipo_atendimento,
			ie_tipo_convenio,
			cd_estabelecimento)
		SELECT 	nextval('regra_origem_proced_seq'),
			ds_regra,
			ie_origem_proced,
			clock_timestamp(),
			nm_usuario_p,
			cd_convenio_orig_p,
			cd_categoria,
			ie_tipo_atendimento,
			ie_tipo_convenio,
			cd_estab_dest_w
		from 	regra_origem_proced
		where 	cd_convenio 		= cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'REGRA_RETORNO') then
		if (ie_excluir_p = 'S') then
			delete 	from regra_retorno
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		insert into regra_retorno(
			nr_sequencia,
			cd_estabelecimento,
			tx_valor,
			dt_atualizacao,
			nm_usuario,
			cd_convenio,
			cd_edicao_amb,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_procedimento,
			ie_origem_proced,
			ie_tipo_atendimento,
			cd_setor_atendimento,
			ie_credenciado,
			cd_especialidade_medica,
			cd_medico)
		SELECT 	nextval('regra_retorno_seq'),
			cd_estab_dest_w,
			tx_valor,
			clock_timestamp(),
			nm_usuario_p,
			cd_convenio_orig_p,
			cd_edicao_amb,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_procedimento,
			ie_origem_proced,
			ie_tipo_atendimento,
			cd_setor_atendimento,
			ie_credenciado,
			cd_especialidade_medica,
			cd_medico
		from 	regra_retorno
		where 	cd_convenio = cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'CONVENIO_TAXA_SERVICO') then
		if (ie_excluir_p = 'S') then
			delete 	from convenio_taxa_servico
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		insert into convenio_taxa_servico(
			cd_estabelecimento,
			cd_convenio,
			cd_categoria,
			ie_taxa_servico,
			cd_taxa_servico,
			dt_atualizacao,
			nm_usuario,
			qt_min_seghr_cirurgia,
			qt_min_tolerancia,
			ie_origem_proced,
			nr_seq_evento,
			nr_seq_proc_interno,
			ie_situacao)
		SELECT 	cd_estab_dest_w,
			cd_convenio_orig_p,
			cd_categoria,
			ie_taxa_servico,
			cd_taxa_servico,
			clock_timestamp(),
			nm_usuario_p,
			qt_min_seghr_cirurgia,
			qt_min_tolerancia,
			ie_origem_proced,
			nr_seq_evento,
			nr_seq_proc_interno,
			ie_situacao
		from 	convenio_taxa_servico
		where 	cd_convenio = cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'CONVENIO_TAXA_EXAME') then
		if (ie_excluir_p = 'S') then
			delete 	from convenio_taxa_exame
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		insert into convenio_taxa_exame(
			cd_estabelecimento,
			cd_convenio,
			cd_categoria,
			cd_procedimento,
			cd_taxa_exame,
			dt_atualizacao,
			nm_usuario,
			ie_origem_proced,
			tx_procedimento,
			ie_criterio_taxa,
			ie_evento_calculo,
			ie_origem_taxa,
			ie_regra_filme,
			nr_sequencia,
			cd_especialidade,
			cd_grupo_proc,
			cd_area_procedimento,
			ie_situacao)
		SELECT 	cd_estab_dest_w,
			cd_convenio_orig_p,
			cd_categoria,
			cd_procedimento,
			cd_taxa_exame,
			clock_timestamp(),
			nm_usuario_p,
			ie_origem_proced,
			tx_procedimento,
			ie_criterio_taxa,
			ie_evento_calculo,
			ie_origem_taxa,
			ie_regra_filme,
			nextval('convenio_taxa_exame_seq'),
			cd_especialidade,
			cd_grupo_proc,
			cd_area_procedimento,
			ie_situacao
		from 	convenio_taxa_exame
		where 	cd_convenio = cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'CONVENIO_TAXA_CIRURGIA') then
		if (ie_excluir_p = 'S') then
			delete 	from convenio_taxa_cirurgia
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		insert into convenio_taxa_cirurgia(
			cd_estabelecimento,
			cd_convenio,
			cd_categoria,
			nr_porte_anestesico,
			cd_taxa_cirurgia,
			dt_atualizacao,
			nm_usuario,
			ie_origem_proced,
			cd_setor_atendimento,
			ie_tipo_atendimento,
			nr_sequencia,
			ie_tipo_regra,
			cd_tipo_acomodacao,
			nr_seq_proc_interno,
			qt_procedimento)
		SELECT 	cd_estab_dest_w,
			cd_convenio_orig_p,
			cd_categoria,
			nr_porte_anestesico,
			cd_taxa_cirurgia,
			clock_timestamp(),
			nm_usuario_p,
			ie_origem_proced,
			cd_setor_atendimento,
			ie_tipo_atendimento,
			nextval('convenio_taxa_cirurgia_seq'),
			ie_tipo_regra,
			cd_tipo_acomodacao,
			nr_seq_proc_interno,
			qt_procedimento
		from 	convenio_taxa_cirurgia
		where 	cd_convenio = cd_convenio_orig_p
		and	cd_estabelecimento = cd_estab_orig_p;
	elsif (nm_tabela_p = 'CONV_REGRA_ATEND_SETOR') then
		if (ie_excluir_p = 'S') then
			delete 	from conv_regra_atend_setor
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		insert into conv_regra_atend_setor(
			nr_sequencia,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_convenio,
			cd_categoria,
			ie_tipo_atendimento,
			ie_libera_bloqueia,
			cd_setor_atendimento,
			ie_situacao,
			cd_plano,
			ds_mensagem,
			nr_seq_classificacao,
			ie_clinica,
			cd_empresa,
			cd_procedencia,
			nr_seq_cobertura,
			nr_seq_tipo_acidente,
			cd_tipo_acomodacao,
			cd_medico,
			qt_idade_min,
			qt_idade_max,
			nm_usuario_filtro,
			ie_tipo_convenio,
			nr_seq_queixa,
			dt_final_vigencia,
			dt_inicio_vigencia,
			cd_especialidade_medica,
			cd_pessoa_fisica)
		SELECT 	nextval('conv_regra_atend_setor_seq'),
			cd_estab_dest_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_convenio_orig_p,
			cd_categoria,
			ie_tipo_atendimento,
			ie_libera_bloqueia,
			cd_setor_atendimento,
			ie_situacao,
			cd_plano,
			ds_mensagem,
			nr_seq_classificacao,
			ie_clinica,
			cd_empresa,
			cd_procedencia,
			nr_seq_cobertura,
			nr_seq_tipo_acidente,
			cd_tipo_acomodacao,
			cd_medico,
			qt_idade_min,
			qt_idade_max,
			nm_usuario_filtro,
			ie_tipo_convenio,
			nr_seq_queixa,
			dt_final_vigencia,
			dt_inicio_vigencia,
			cd_especialidade_medica,
			cd_pessoa_fisica
		from 	conv_regra_atend_setor
		where 	cd_convenio = cd_convenio_orig_p
		and	cd_estabelecimento = cd_estab_orig_p;
	elsif (nm_tabela_p = 'MAT_CONVENIO_REGRA_QTDE') then
		if (ie_excluir_p = 'S') then
			delete	from 	mat_convenio_regra_qtde_tx
			where	nr_seq_regra in (SELECT nr_sequencia
						 from   mat_convenio_regra_qtde
						 where 	cd_convenio = cd_convenio_orig_p
						 and	cd_estabelecimento = cd_estab_dest_w);
			delete 	from 	mat_convenio_regra_qtde
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;
		begin
		open c020;
			loop
			fetch c020 into
				nr_seq_w;
			EXIT WHEN NOT FOUND; /* apply on c020 */
					begin
					select 	nextval('mat_convenio_regra_qtde_seq')
					into STRICT	nr_sequencia_w
					;

					insert into mat_convenio_regra_qtde(
						nr_sequencia,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_convenio,
						dt_vigencia,
						cd_material,
						cd_grupo_material,
						cd_subgrupo_material,
						cd_classe_material,
						ie_regra_execucao)
					SELECT	nr_sequencia_w,
						cd_estab_dest_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_convenio_orig_p,
						dt_vigencia,
						cd_material,
						cd_grupo_material,
						cd_subgrupo_material,
						cd_classe_material,
						ie_regra_execucao
					from 	mat_convenio_regra_qtde
					where 	cd_convenio = cd_convenio_orig_p
					and	cd_estabelecimento = cd_estab_orig_p
					and 	nr_sequencia = nr_seq_w;

					insert into mat_convenio_regra_qtde_tx(
						nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						qt_exec_min,
						qt_exec_max,
						tx_material)
					SELECT 	nextval('mat_convenio_regra_qtde_tx_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						qt_exec_min,
						qt_exec_max,
						tx_material
					from	mat_convenio_regra_qtde_tx
					where	nr_seq_regra = nr_seq_w;
					end;
			end loop;
		close c020;
		end;
	elsif (nm_tabela_p = 'TIPO_TAXA_CIRURGICA') then
		if (ie_excluir_p = 'S') then
			delete	from 	tipo_taxa_proced
			where	nr_seq_tipo_taxa in (SELECT nr_sequencia
						     from   tipo_taxa_cirurgica
						     where  cd_convenio = cd_convenio_orig_p
						     and    cd_estabelecimento = cd_estab_dest_w);
			delete 	from 	tipo_taxa_cirurgica
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;
		begin
		open c021;
			loop
			fetch c021 into
				nr_seq_w;
			EXIT WHEN NOT FOUND; /* apply on c021 */
					begin
					select 	nextval('tipo_taxa_cirurgica_seq')
					into STRICT	nr_sequencia_w
					;

					insert into tipo_taxa_cirurgica(
						nr_sequencia,
						cd_estabelecimento,
						cd_convenio,
						dt_atualizacao,
						nm_usuario,
						cd_procedimento,
						ie_origem_proced,
						dt_vigencia,
						ie_situacao,
						qt_porte,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_setor_atendimento,
						nr_seq_proc_interno)
					SELECT	nr_sequencia_w,
						cd_estab_dest_w,
						cd_convenio_orig_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_procedimento,
						ie_origem_proced,
						dt_vigencia,
						ie_situacao,
						qt_porte,
						clock_timestamp(),
						nm_usuario_p,
						cd_setor_atendimento,
						nr_seq_proc_interno
					from 	tipo_taxa_cirurgica
					where 	cd_convenio = cd_convenio_orig_p
					and	cd_estabelecimento = cd_estab_orig_p
					and 	nr_sequencia = nr_seq_w;

					insert into tipo_taxa_proced(
						nr_sequencia,
						nr_seq_tipo_taxa,
						dt_atualizacao,
						nm_usuario,
						cd_procedimento,
						ie_origem_proced,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_setor_atendimento)
					SELECT 	nextval('tipo_taxa_proced_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_procedimento,
						ie_origem_proced,
						clock_timestamp(),
						nm_usuario_p,
						cd_setor_atendimento
					from	tipo_taxa_proced
					where	nr_seq_tipo_taxa = nr_seq_w;
					end;
			end loop;
		close c021;
		end;
	elsif (nm_tabela_p = 'PARAMETRO_NFS') then
		if (ie_excluir_p = 'S') then
			delete	from parametro_nfs_lista
			where	cd_convenio		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
			delete	from parametro_nfs
			where	cd_convenio		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;

        insert into serie_nota_fiscal(CD_SERIE_NF, IE_SITUACAO, DT_ATUALIZACAO, NM_USUARIO, CD_ESTABELECIMENTO, IE_NUMERO_NOTA,
                                       NR_ULTIMA_NF, NR_MIN_CARACTERES, IE_COMPL_PAGO)
                  SELECT CD_SERIE_NF,
                         IE_SITUACAO,
                         clock_timestamp() DT_ATUALIZACAO,
                         nm_usuario_p NM_USUARIO,
                         cd_estab_dest_w,
                         IE_NUMERO_NOTA,
                         NR_ULTIMA_NF,
                         NR_MIN_CARACTERES,
                         IE_COMPL_PAGO
                    from serie_nota_fiscal serie_nf
                   where serie_nf.cd_estabelecimento = cd_estab_orig_p
                     and not exists (SELECT '1'
                                       from serie_nota_fiscal serie
                                      where serie.cd_estabelecimento = cd_estab_dest_w
                                        and serie.cd_serie_nf = serie_nf.cd_serie_nf);

		insert	into parametro_nfs(cd_estabelecimento,
			cd_convenio,
			dt_atualizacao,
			nm_usuario,
			cd_serie_nf,
			cd_natureza_operacao,
			cd_operacao_nf,
			cd_condicao_pagamento,
			ie_opcao,
			qt_item_maximo,
			ie_origem_proced,
			cd_procedimento,
			cd_proced_acrescimo,
			ie_origem_proc_acres,
			nr_seq_classif_prest)
		SELECT	cd_estab_dest_w,
			cd_convenio_orig_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_serie_nf,
			cd_natureza_operacao,
			cd_operacao_nf,
			cd_condicao_pagamento,
			ie_opcao,
			qt_item_maximo,
			ie_origem_proced,
			cd_procedimento,
			cd_proced_acrescimo,
			ie_origem_proc_acres,
			nr_seq_classif_prest
		from	parametro_nfs
		where	cd_convenio 		= cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;

		insert	into parametro_nfs_lista(nr_sequencia,
			cd_estabelecimento,
			cd_convenio,
			dt_atualizacao,
			nm_usuario,
			ds_sql,
			cd_material,
			cd_procedimento,
			ie_origem_proced,
			ie_ordenacao,
			ie_lista_itens)
		SELECT	nextval('parametro_nfs_lista_seq'),
			cd_estab_dest_w,
			cd_convenio_orig_p,
			clock_timestamp(),
			nm_usuario_p,
			ds_sql,
			cd_material,
			cd_procedimento,
			ie_origem_proced,
			ie_ordenacao,
			ie_lista_itens
		from	parametro_nfs_lista
		where	cd_convenio 		= cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;
	elsif (nm_tabela_p = 'REGRA_AJUSTE_MATERIAL') then
		if (ie_excluir_p = 'S') then
			delete	from regra_ajuste_material
			where	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;

		open c010;
			loop
			fetch c010 into	nr_sequencia_w,
					dt_inicio_vigencia_w,
					ie_situacao_w,
					cd_categoria_w,
					cd_grupo_material_w,
					cd_subgrupo_material_w,
					cd_classe_material_w,
					cd_material_w,
					tx_ajuste_w,
					vl_negociado_w,
					ie_preco_informado_w,
					ie_glosa_w,
					tx_brasindice_pfb_w,
					tx_brasindice_pmc_w,
					tx_afaturar_w,
					dt_final_vigencia_w,
					cd_tipo_acomodacao_w,
					ie_tipo_atendimento_w,
					cd_setor_atendimento_w,
					qt_idade_min_w,
					qt_idade_max_w,
					tx_simpro_pfb_w,
					tx_simpro_pmc_w,
					ie_origem_preco_w,
					ie_precedencia_preco_w,
					pr_glosa_w,
					ie_tipo_material_w,
					tx_pmc_neg_w,
					tx_pmc_pos_w,
					cd_cid_w,
					cd_tabela_preco_w,
					cd_motivo_exc_conta_w,
					ie_sexo_w,
					cd_plano_w,
					ie_autor_particular_w,
					ie_kit_material_w,
					cd_kit_material_w,
					tx_pfb_neg_w,
					tx_pfb_pos_w,
					nr_seq_estrutura_w,
					cd_tipo_baixa_w,
					ie_clinica_w,
					cd_convenio_glosa_w,
					cd_categoria_glosa_w,
					cd_proc_referencia_w,
					ie_origem_proced_w,
					nr_seq_proc_interno_w,
					ds_observacao_w,
					ie_data_referencia_vig_w,
					ie_atend_retorno_w,
					ie_tipo_kit_w,
					nr_seq_familia_w,
					ie_ignora_preco_venda_w,
					ie_ignora_divisao_bras_w,
					tx_simpro_pos_pfb_w,
					tx_simpro_neg_pfb_w,
					tx_simpro_pos_pmc_w,
					tx_simpro_neg_pmc_w,
					qt_dias_inter_inicio_w,
					qt_dias_inter_final_w,
					cd_usuario_convenio_w,
					qt_pos_inicial_w,
					qt_pos_final_w,
					ie_estrangeiro_w,
					ie_reconstituinte_w,
					ie_tipo_preco_autor_w;
			EXIT WHEN NOT FOUND; /* apply on c010 */

            insert into tabela_preco_material(CD_ESTABELECIMENTO, CD_TAB_PRECO_MAT, DS_TAB_PRECO_MAT, IE_SITUACAO,
                                               DT_ATUALIZACAO, NM_USUARIO, IE_ATUALIZA_NF, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC,
                                               IE_ULTIMA_COMPRA, IE_HOSP_PLS, CD_OPERACAO_NF, IE_ORDEM_COMPRA)
                  SELECT cd_estab_dest_w CD_ESTABELECIMENTO
                         ,CD_TAB_PRECO_MAT
                         ,DS_TAB_PRECO_MAT
                         ,IE_SITUACAO
                         ,DT_ATUALIZACAO
                         ,NM_USUARIO
                         ,IE_ATUALIZA_NF
                         ,DT_ATUALIZACAO_NREC
                         ,NM_USUARIO_NREC
                         ,IE_ULTIMA_COMPRA
                         ,IE_HOSP_PLS
                         ,CD_OPERACAO_NF
                         ,IE_ORDEM_COMPRA
                    from tabela_preco_material tab
                   where tab.cd_estabelecimento = cd_estab_orig_p
                     and tab.cd_tab_preco_mat = cd_tabela_preco_w
                     and not exists (SELECT '1'
                                       from tabela_preco_material tpm
                                      where tpm.cd_estabelecimento = cd_estab_dest_w
                                        and tpm.cd_tab_preco_mat = cd_tabela_preco_w);



			select	nextval('regra_ajuste_material_seq')
			into STRICT	nr_seq_w
			;


			insert	into regra_ajuste_material(
								nr_sequencia,
								dt_inicio_vigencia,
								ie_situacao,
								cd_categoria,
								cd_grupo_material,
								cd_subgrupo_material,
								cd_classe_material,
								cd_material,
								tx_ajuste,
								vl_negociado,
								ie_preco_informado,
								ie_glosa,
								tx_brasindice_pfb,
								tx_brasindice_pmc,
								tx_afaturar,
								dt_final_vigencia,
								cd_tipo_acomodacao,
								ie_tipo_atendimento,
								cd_setor_atendimento,
								qt_idade_min,
								qt_idade_max,
								tx_simpro_pfb,
								tx_simpro_pmc,
								ie_origem_preco,
								ie_precedencia_preco,
								pr_glosa,
								ie_tipo_material,
								tx_pmc_neg,
								tx_pmc_pos,
								cd_cid,
								cd_tabela_preco,
								cd_motivo_exc_conta,
								cd_estabelecimento,
								cd_convenio,
								dt_atualizacao,
								nm_usuario,
								ie_sexo,
								cd_plano,
								ie_autor_particular,
								ie_kit_material,
								cd_kit_material,
								tx_pfb_neg,
								tx_pfb_pos,
								nr_seq_estrutura,
								cd_tipo_baixa,
								ie_clinica,
								cd_convenio_glosa,
								cd_categoria_glosa,
								cd_proc_referencia,
								ie_origem_proced,
								nr_seq_proc_interno,
								ds_observacao,
								ie_data_referencia_vig,
								ie_atend_retorno,
								ie_tipo_kit,
								nr_seq_familia,
								ie_ignora_preco_venda,
								ie_ignora_divisao_bras,
								tx_simpro_pos_pfb,
								tx_simpro_neg_pfb,
								tx_simpro_pos_pmc,
								tx_simpro_neg_pmc,
								qt_dias_inter_inicio,
								qt_dias_inter_final,
								cd_usuario_convenio,
								qt_pos_inicial,
								qt_pos_final,
								ie_estrangeiro,
								ie_reconstituinte,
								ie_tipo_preco_autor
								)
				values (
								nr_seq_w,
								dt_inicio_vigencia_w,
								ie_situacao_w,
								cd_categoria_w,
								cd_grupo_material_w,
								cd_subgrupo_material_w,
								cd_classe_material_w,
								cd_material_w,
								tx_ajuste_w,
								vl_negociado_w,
								ie_preco_informado_w,
								ie_glosa_w,
								tx_brasindice_pfb_w,
								tx_brasindice_pmc_w,
								tx_afaturar_w,
								dt_final_vigencia_w,
								cd_tipo_acomodacao_w,
								ie_tipo_atendimento_w,
								cd_setor_atendimento_w,
								qt_idade_min_w,
								qt_idade_max_w,
								tx_simpro_pfb_w,
								tx_simpro_pmc_w,
								ie_origem_preco_w,
								ie_precedencia_preco_w,
								pr_glosa_w,
								ie_tipo_material_w,
								tx_pmc_neg_w,
								tx_pmc_pos_w,
								cd_cid_w,
								cd_tabela_preco_w,
								cd_motivo_exc_conta_w,
								cd_estab_dest_w,
								cd_convenio_orig_p,
								clock_timestamp(),
								nm_usuario_p,
								ie_sexo_w,
								cd_plano_w,
								ie_autor_particular_w,
								ie_kit_material_w,
								cd_kit_material_w,
								tx_pfb_neg_w,
								tx_pfb_pos_w,
								nr_seq_estrutura_w,
								cd_tipo_baixa_w,
								ie_clinica_w,
								cd_convenio_glosa_w,
								cd_categoria_glosa_w,
								cd_proc_referencia_w,
								ie_origem_proced_w,
								nr_seq_proc_interno_w,
								ds_observacao_w,
								ie_data_referencia_vig_w,
								ie_atend_retorno_w,
								ie_tipo_kit_w,
								nr_seq_familia_w,
								ie_ignora_preco_venda_w,
								ie_ignora_divisao_bras_w,
								tx_simpro_pos_pfb_w,
								tx_simpro_neg_pfb_w,
								tx_simpro_pos_pmc_w,
								tx_simpro_neg_pmc_w,
								qt_dias_inter_inicio_w,
								qt_dias_inter_final_w,
								cd_usuario_convenio_w,
								qt_pos_inicial_w,
								qt_pos_final_w,
								ie_estrangeiro_w,
								ie_reconstituinte_w,
								ie_tipo_preco_autor_w
								);

			select	count(*)
			into STRICT	qt_ajuste_w
			from	regra_ajuste_indice_dif
			where	nr_seq_regra = nr_sequencia_w;

			if (coalesce(qt_ajuste_w,0) > 0) then
				begin
				open c011;
					loop
					fetch c011 into	vl_inicial_w,
							vl_final_w,
							tx_ajustedif_w,
							ie_origem_preco_w;
					EXIT WHEN NOT FOUND; /* apply on c011 */

					select	nextval('regra_ajuste_indice_dif_seq')
					into STRICT	nr_seq_ajuste_w
					;

					insert	into regra_ajuste_indice_dif(
										nr_sequencia,
										vl_inicial,
										vl_final,
										tx_ajuste,
										nr_seq_regra,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										ie_origem_preco
										)
					values (
										nr_seq_ajuste_w,
										vl_inicial_w,
										vl_final_w,
										tx_ajustedif_w,
										nr_seq_w,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										ie_origem_preco_w
										);
					end loop;
				close c011;
				end;
			end if;
			end loop;
		close c010;

	elsif (nm_tabela_p	in ('TISS_REGRA_TABELA_MAT', 'TISS_SENHA_CONEXAO','TISS_REGRA_TABELA_PROC','TISS_REGRA_CAMPO_CONV',
				'TISS_PARAMETROS_CONVENIO','TISS_REGRA_PRESTADOR','TISS_REGRA_GUIA','TISS_REGRA_GUIA',
				'TISS_REGRA_HONOR_SPSADT','TISS_REGRA_VALOR_PROC','TISS_REGRA_GUIA_PRINC','TISS_REGRA_PRESTADOR_SOLIC',
				'TISS_REGRA_CAMPO_ESP','TISS_REGRA_PREST_EQUIPE','TISS_REGRA_PARTIC_ADIC','TISS_REGRA_ARQUIVO_ADIC',
				'TISS_REGRA_AGRUP','TISS_REGRA_PROC_XML','TISS_REGRA_MAT_OPM')) then
		CALL tiss_copia_param_conv_estab(cd_convenio_orig_p,cd_estab_orig_p,cd_estab_dest_w,nm_tabela_p,nm_usuario_p,ie_excluir_p);
	elsif (nm_tabela_p	= 'CONVENIO_ESTABELECIMENTO') then
		if (ie_excluir_p = 'S') then
			delete	from convenio_estabelecimento
			where	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		open c22;
		loop
		fetch c22 into
			c22_w;
		EXIT WHEN NOT FOUND; /* apply on c22 */
			begin
			insert into convenio_estabelecimento(
					nr_sequencia, dt_atualizacao, nm_usuario,
					cd_convenio, cd_estabelecimento, cd_conta_contabil,
					nr_seq_regra_funcao, nr_seq_conta, cd_conta_pre_fatur,
					dt_atualizacao_nrec, nm_usuario_nrec, ie_exige_data_ult_pagto,
					ie_exige_guia, ie_exige_orc_atend, ie_glosa_atendimento,
					ie_preco_medio_material, ie_agenda_consulta, ie_rep_cod_usuario,
					ie_exige_carteira_atend, ie_exige_validade_atend, ie_exige_plano,
					ie_separa_conta, ie_guia_unica_conta, ie_valor_contabil,
					ie_titulo_receber, ie_conversao_mat, ie_doc_convenio,
					ie_doc_retorno, qt_conta_protocolo, qt_dia_fim_conta,
					ie_exige_senha_atend, ie_partic_cirurgia, ie_exige_origem,
					cd_interno, cd_regional, ie_protocolo_conta,
					ie_gerar_nf_titulo, ie_cancelar_conta, ie_manter_zerado_edicao,
					nr_dec_unitario, ie_arredondamento, ie_exige_guia_princ,
					nr_seq_conta_banco, ie_exige_doc_conv_titulo, nr_seq_envio_prot,
					ie_exige_fim_vigencia, ie_origem_preco, ie_precedencia_preco,
					ie_partic_resp_cred, ie_doc_autorizacao, ie_fechar_atend_adiant,
					ie_conta_fim_mes, ie_repasse_proc, ie_repasse_mat,
					ie_atualiza_func_medico, ie_cgc_cih, ie_valor_filme_tab_preco,
					ie_regra_prior_edicao, ie_medico_cooperado, ie_doc_conv_part_func,
					ie_consiste_guia_atend, ie_exige_compl_usuario, nr_seq_trans_fin_conv_ret,
					ie_lib_repasse, ie_obter_preco_mat_autor, ie_gerar_nf,
					ie_retem_iss,
					ie_autorizacao_eup,  ie_exige_tempo_doenca, ie_pf_unica_nf_prot,
					ie_exige_gabarito, ie_lancto_auto_dt_alta, ie_motivo_glosa_conv,
					ie_repasse_gratuidade, ie_chamada_titulo, ie_substituir_guia,
					ie_titulo_sem_nf, ie_guia_transf_conta, qt_dia_conta_ret,
					ie_calcular_nf, ie_grava_guia_conta, ie_autor_generico, ie_exige_email,
					ie_exige_tipo_faturamento, ie_exige_cpf_paciente, ds_mascara_guia_proc,
					ie_exige_nr_conv, ie_consiste_pac_protocolo, ie_cons_duplic_cod_usu,
					ie_tit_ret_senha, ie_cons_dia_int_vig, ie_obter_fornec_mat_autor,
					ie_gera_nome_nf_convenio, ie_forma_geracao_nf, ie_forma_rateio_sadt,
					ie_indice_ajuste_filme, ie_obriga_titulo_partic, ie_glosa_adic_ret,
					ie_atualiza_serie_nf_saida, nr_dias_venc, ie_obriga_titulo_prot,
					ie_exige_passaporte_paciente , ie_tipo_glosa_ret,
					ie_obrigar_item_glosa, ie_preco_medio_bras, ie_forma_autor_quimioterapia,
					nr_seq_trans_tit_prot, ie_obriga_obs_desc_prot, ie_converte_ml_fr,
					ie_permite_cod_convenio_duplic, ie_trunc_vl_material, ie_consistir_tit,
					ie_exige_cpf_titulo, ie_fecha_conta_int, nr_seq_tf_cr_grc, nr_seq_tf_cp_grc,
					ie_gerar_desconto, ie_proc_tuss_autor, ie_partic_ret, ie_arred_multiplicado,
					ie_converte_itens_audit, ie_conta_fim_dia, ie_tit_prot_pf, cd_ans,
					ie_fixar_vig_brasindice, ie_conta_atual, ie_separa_partic_adic_hor, ie_vl_conta_autor,
					ie_ajustar_periodo_conta, ie_atual_qt_solic_autor, ie_lote_reap, ie_exige_cobertura,
					ie_altera_pj_tit, ie_regra_cart_usuario, ie_dt_prev_autor_quimio, ie_dt_vigencia_autor_quimio,
					dt_inicio_vig_tuss, qt_horas_inicio_ciclo, ie_valor_original_glosa, ie_considera_regra_data_preco,
					ie_contab_lote_consig, ie_verifica_proc_glosa, ie_valor_filme_apos_adic_hor, ie_pre_faturamento,
					ds_proc_retorno, ie_exige_cpf_pagador, ie_divide_vl_med_conv_glosa, hr_conta_fim_dia,
					ie_autor_mat_conta, nr_dias_gastos_rn, cd_proc_long_perm, ie_orig_proc_long_perm,
					nr_dias_venc_atend, nr_dias_alerta, ie_exige_desconto_conta, ie_imprime_data_rodape,
					ie_periodo_inicial_seg, ie_consid_proc_bilat_autor, ie_data_vig_cbhpm, ie_regra_moeda_ajuste,
					ie_trat_conta_rn, ds_mensagem_desfecho, ie_consiste_benef_ops, ie_conta_transitoria,
					ie_imprime_qtde, ie_lib_repasse_sem_tit, ie_arred_so_glosa_perc, qt_dia_venc_tit_grg, ie_grava_guia_taxa,
					dt_fim_contrato, ie_glosa_aceita_grg, ie_copia_senha_guia, ie_conv_categ_glosa, cd_estab_pls,
					ie_registro_pep, ie_exige_conv_glosa, ie_exige_usuario_glosa, ie_exige_compl_glosa,
					ie_exige_validade_glosa, qt_exame_prescr, ie_consid_conv_glosa_eup, ie_consiste_conta_prot,
					ie_conta_prot_ref, ie_tiss_tipo_saida, ie_funcao_medico, ie_glosa_mat_aut_neg, ie_dt_conta_tit_prot,
					ie_obriga_diagnostico, ie_nova_autor_item_fim_vig, ie_dividir_indice_pmc, ie_dividir_indice_pfb,
					ie_tit_liquido, nr_seq_trans_tit_conta, CD_CNPJ_CONV_ESTAB,
					CD_TIPO_RECEB_NEG_TIT, IE_TITULO_EMPRESA_RESP, IE_RET_OUTROS_CONV, IE_IPI_BRASINDICE,

CD_LOCALIZADOR_PACIENTE,
					DS_CAMINHO_EXEC, IE_TITULO_PACIENTE_PROT, IE_EXIGE_LETRA_CARTEIRA, ie_recalcular_conta,

ie_codigo_convenio,
					ds_mascara_guia, ie_aplicar_tx_co_cbhpm, IE_PRIORIDADE_BRASINDICE, IE_AUTOR_MAT_EXEC, IE_PRECO_MAT_ESP,
					IE_PLANO_CONSULTA_PRECO, IE_PERMITE_VINC_ORC, IE_GERAR_CIHA, IE_INC_CONTA_DEF_PROT,

IE_BLOQUEIA_PROC_SEM_AUTOR, IE_AUX_MAIOR_AUX_CIR, QT_DIAS_INTERNACAO,
					IE_COPIA_SENHA_GUIA_PRINC, IE_OBRIGA_NF_PROT, IE_GERAR_AUTOR_QUIMIOTERAPIA, IE_CONSISTE_SQL_NF,

IE_FECHAR_ANALISE_SALDO_REST, IE_ATUALIZA_AUTOR_SENHA,
					IE_VALOR_PAGO_GLOSA_GUIA, IE_REGRA_HORAS_ONC_CICLO, IE_UTILIZA_CONV_BO, IE_EXIGE_DOC_CONV,

IE_PERMITE_INTERNAR_EUP, IE_CALC_PORTE_ESTAB,
					QT_DIAS_REAPRE, QT_DIAS_AUTORIZACAO, QT_DIAS_AUTOR_PROC, IE_CONSISTE_CNS_CONTA, IE_CH_ANESTESISTA,

IE_VALOR_PAGO_RET, IE_EXIGE_LIB_BRAS,
					IE_VALOR_INF_REVERSAO, DS_PROC_GRG, IE_DATA_AUTOR_PRORROG, IE_LIB_REPASSE_PROT_TIT, IE_FORMA_PROC_PRINC,

IE_EXIGE_DT_VENC_PROT,
					IE_GERAR_NF_DESDOB, IE_AUTOR_MAT_ESP_CIRURGIA, IE_QT_MAT_AUTOR, IE_EXIGE_EMPRESA_CONS,

IE_OBRIGA_NF_TIT_REC, QT_DIAS_AUTOR_QUIMIO,
					IE_GUIA_AUTOR_QUIMIO, IE_CALC_VL_AUX_CONV, IE_CONV_MEDIDA_AUTOR_QUIMIO, IE_TRIB_TITULO_RETORNO,

IE_TOMADOR_NF_DESDOB, IE_CONSIS_INICIO_CONTA_PROT,
					IE_IGNORA_PARTIC,IE_VINC_ADIANT_PROT_PJ, IE_PRIORIDADE_SIMPRO, CD_REGRA_HON_SOM_FILME_IPE,

IE_BIOMETRIA_ATEND, IE_REGRA_APRES_AUTOR_QUIMIO, IE_ORIGEM_FAT_DIRETO,
					IE_AUTOR_PRESCR_SALDO, IE_AUTOR_DESDOB_CONTA, IE_CONSISTE_SEQ_CONTA, IE_CONSISTE_REGRA_IPASGO,

IE_TAXA_TEMPO_UNIDADE, QT_DIA_DESDOB_CONTA, IE_VALOR_PAGO_COBRADO_RET,
					IE_CONSIDERA_DT_ENTRADA, IE_CONSIDERA_DT_ENTRADA_ANAM, IE_FIXAR_VIG_SIMPRO, IE_PERMITE_DESD_PLANSERV,

IE_PROTOCOLO_INDIVIDUAL, IE_ATUALIZA_JUST_ANL_ANT,
					IE_EXIBE_TITULAR_CONV, IE_PERMITE_INTEGRACAO, IE_BLOQ_LANCTO_GUIA_ANL_GRG, IE_VALOR_COSEGURO,

NR_SEQ_EVENTO_INTEGRACAO, IE_CONVERSAO_CONV_ITEM, IE_PRIORIDADE_PACOTE_JOB, IE_COPIAR_ETAPA_DESDOB, IE_REGRA_ORDEM_PACOTE,
IE_REMUN_POR_DIAGNOSTICO, IE_PRIOR_FORM_PACOTE
					)
					 values (
					nextval('convenio_estabelecimento_seq'), clock_timestamp(), nm_usuario_p,
					c22_w.cd_convenio, cd_estab_dest_w, c22_w.cd_conta_contabil,
					c22_w.nr_seq_regra_funcao, c22_w.nr_seq_conta, c22_w.cd_conta_pre_fatur,
					clock_timestamp(), nm_usuario_p, c22_w.ie_exige_data_ult_pagto,
					c22_w.ie_exige_guia, c22_w.ie_exige_orc_atend, c22_w.ie_glosa_atendimento,
					c22_w.ie_preco_medio_material, c22_w.ie_agenda_consulta, c22_w.ie_rep_cod_usuario,
					c22_w.ie_exige_carteira_atend, c22_w.ie_exige_validade_atend, c22_w.ie_exige_plano,
					c22_w.ie_separa_conta, c22_w.ie_guia_unica_conta, c22_w.ie_valor_contabil,
					c22_w.ie_titulo_receber, c22_w.ie_conversao_mat, c22_w.ie_doc_convenio,
					c22_w.ie_doc_retorno, c22_w.qt_conta_protocolo, c22_w.qt_dia_fim_conta,
					c22_w.ie_exige_senha_atend, c22_w.ie_partic_cirurgia, c22_w.ie_exige_origem,
					c22_w.cd_interno, c22_w.cd_regional, c22_w.ie_protocolo_conta,
					c22_w.ie_gerar_nf_titulo, c22_w.ie_cancelar_conta, c22_w.ie_manter_zerado_edicao,
					c22_w.nr_dec_unitario, c22_w.ie_arredondamento, c22_w.ie_exige_guia_princ,
					c22_w.nr_seq_conta_banco, c22_w.ie_exige_doc_conv_titulo, c22_w.nr_seq_envio_prot,
					c22_w.ie_exige_fim_vigencia, c22_w.ie_origem_preco, c22_w.ie_precedencia_preco,
					c22_w.ie_partic_resp_cred, c22_w.ie_doc_autorizacao, c22_w.ie_fechar_atend_adiant,
					c22_w.ie_conta_fim_mes, c22_w.ie_repasse_proc, c22_w.ie_repasse_mat,
					c22_w.ie_atualiza_func_medico, c22_w.ie_cgc_cih, c22_w.ie_valor_filme_tab_preco,
					c22_w.ie_regra_prior_edicao, c22_w.ie_medico_cooperado, c22_w.ie_doc_conv_part_func,
					c22_w.ie_consiste_guia_atend, c22_w.ie_exige_compl_usuario, c22_w.nr_seq_trans_fin_conv_ret,
					c22_w.ie_lib_repasse, c22_w.ie_obter_preco_mat_autor, c22_w.ie_gerar_nf,
					c22_w.ie_retem_iss,
					c22_w.ie_autorizacao_eup,  c22_w.ie_exige_tempo_doenca, c22_w.ie_pf_unica_nf_prot,
					c22_w.ie_exige_gabarito, c22_w.ie_lancto_auto_dt_alta, c22_w.ie_motivo_glosa_conv,
					c22_w.ie_repasse_gratuidade, c22_w.ie_chamada_titulo, c22_w.ie_substituir_guia,
					c22_w.ie_titulo_sem_nf, c22_w.ie_guia_transf_conta, c22_w.qt_dia_conta_ret,
					c22_w.ie_calcular_nf, c22_w.ie_grava_guia_conta, c22_w.ie_autor_generico, c22_w.ie_exige_email,
					c22_w.ie_exige_tipo_faturamento, c22_w.ie_exige_cpf_paciente, c22_w.ds_mascara_guia_proc,
					c22_w.ie_exige_nr_conv, c22_w.ie_consiste_pac_protocolo, c22_w.ie_cons_duplic_cod_usu,
					c22_w.ie_tit_ret_senha, c22_w.ie_cons_dia_int_vig, c22_w.ie_obter_fornec_mat_autor,
					c22_w.ie_gera_nome_nf_convenio, c22_w.ie_forma_geracao_nf, c22_w.ie_forma_rateio_sadt,
					c22_w.ie_indice_ajuste_filme, c22_w.ie_obriga_titulo_partic, c22_w.ie_glosa_adic_ret,
					c22_w.ie_atualiza_serie_nf_saida, c22_w.nr_dias_venc, c22_w.ie_obriga_titulo_prot,
					c22_w.ie_exige_passaporte_paciente , c22_w.ie_tipo_glosa_ret,
					c22_w.ie_obrigar_item_glosa, c22_w.ie_preco_medio_bras, c22_w.ie_forma_autor_quimioterapia,
					c22_w.nr_seq_trans_tit_prot, c22_w.ie_obriga_obs_desc_prot, c22_w.ie_converte_ml_fr,
					c22_w.ie_permite_cod_convenio_duplic, c22_w.ie_trunc_vl_material, c22_w.ie_consistir_tit,
					c22_w.ie_exige_cpf_titulo, c22_w.ie_fecha_conta_int, c22_w.nr_seq_tf_cr_grc, c22_w.nr_seq_tf_cp_grc,
					c22_w.ie_gerar_desconto, c22_w.ie_proc_tuss_autor, c22_w.ie_partic_ret, c22_w.ie_arred_multiplicado,
					c22_w.ie_converte_itens_audit, c22_w.ie_conta_fim_dia, c22_w.ie_tit_prot_pf, c22_w.cd_ans,
					c22_w.ie_fixar_vig_brasindice, c22_w.ie_conta_atual, c22_w.ie_separa_partic_adic_hor,

c22_w.ie_vl_conta_autor,
					c22_w.ie_ajustar_periodo_conta, c22_w.ie_atual_qt_solic_autor, c22_w.ie_lote_reap,

c22_w.ie_exige_cobertura,
					c22_w.ie_altera_pj_tit, c22_w.ie_regra_cart_usuario, c22_w.ie_dt_prev_autor_quimio,

c22_w.ie_dt_vigencia_autor_quimio,
					c22_w.dt_inicio_vig_tuss, c22_w.qt_horas_inicio_ciclo, c22_w.ie_valor_original_glosa,

c22_w.ie_considera_regra_data_preco,
					c22_w.ie_contab_lote_consig, c22_w.ie_verifica_proc_glosa, c22_w.ie_valor_filme_apos_adic_hor,

c22_w.ie_pre_faturamento,
					c22_w.ds_proc_retorno, c22_w.ie_exige_cpf_pagador, c22_w.ie_divide_vl_med_conv_glosa,

c22_w.hr_conta_fim_dia,
					c22_w.ie_autor_mat_conta, c22_w.nr_dias_gastos_rn, c22_w.cd_proc_long_perm, c22_w.ie_orig_proc_long_perm,
					c22_w.nr_dias_venc_atend, c22_w.nr_dias_alerta, c22_w.ie_exige_desconto_conta,

c22_w.ie_imprime_data_rodape,
					c22_w.ie_periodo_inicial_seg, c22_w.ie_consid_proc_bilat_autor, c22_w.ie_data_vig_cbhpm,

c22_w.ie_regra_moeda_ajuste,
					c22_w.ie_trat_conta_rn, c22_w.ds_mensagem_desfecho, c22_w.ie_consiste_benef_ops,

c22_w.ie_conta_transitoria,
					c22_w.ie_imprime_qtde, c22_w.ie_lib_repasse_sem_tit, c22_w.ie_arred_so_glosa_perc,

c22_w.qt_dia_venc_tit_grg, c22_w.ie_grava_guia_taxa,
					c22_w.dt_fim_contrato, c22_w.ie_glosa_aceita_grg, c22_w.ie_copia_senha_guia, c22_w.ie_conv_categ_glosa,

c22_w.cd_estab_pls,
					c22_w.ie_registro_pep, c22_w.ie_exige_conv_glosa, c22_w.ie_exige_usuario_glosa,

c22_w.ie_exige_compl_glosa,
					c22_w.ie_exige_validade_glosa, c22_w.qt_exame_prescr, c22_w.ie_consid_conv_glosa_eup,

c22_w.ie_consiste_conta_prot,
					c22_w.ie_conta_prot_ref, c22_w.ie_tiss_tipo_saida, c22_w.ie_funcao_medico, c22_w.ie_glosa_mat_aut_neg,

c22_w.ie_dt_conta_tit_prot,
					c22_w.ie_obriga_diagnostico, c22_w.ie_nova_autor_item_fim_vig, c22_w.ie_dividir_indice_pmc,

c22_w.ie_dividir_indice_pfb,
					c22_w.ie_tit_liquido, c22_w.nr_seq_trans_tit_conta, c22_w.CD_CNPJ_CONV_ESTAB,
					c22_w.CD_TIPO_RECEB_NEG_TIT, c22_w.IE_TITULO_EMPRESA_RESP, c22_w.IE_RET_OUTROS_CONV,

c22_w.IE_IPI_BRASINDICE, c22_w.CD_LOCALIZADOR_PACIENTE,
					c22_w.DS_CAMINHO_EXEC, c22_w.IE_TITULO_PACIENTE_PROT,  c22_w.IE_EXIGE_LETRA_CARTEIRA,

c22_w.IE_RECALCULAR_CONTA, c22_w.ie_codigo_convenio,
					c22_w.ds_mascara_guia, c22_w.ie_aplicar_tx_co_cbhpm, c22_w.IE_PRIORIDADE_BRASINDICE,

c22_w.IE_AUTOR_MAT_EXEC, c22_w.IE_PRECO_MAT_ESP,
					c22_w.IE_PLANO_CONSULTA_PRECO,
					c22_w.IE_PERMITE_VINC_ORC,
					c22_w.IE_GERAR_CIHA,
					c22_w.IE_INC_CONTA_DEF_PROT,
					c22_w.IE_BLOQUEIA_PROC_SEM_AUTOR,
					c22_w.IE_AUX_MAIOR_AUX_CIR,
					c22_w.QT_DIAS_INTERNACAO,
					c22_w.IE_COPIA_SENHA_GUIA_PRINC,
					c22_w.IE_OBRIGA_NF_PROT,
					c22_w.IE_GERAR_AUTOR_QUIMIOTERAPIA,
					c22_w.IE_CONSISTE_SQL_NF,
					c22_w.IE_FECHAR_ANALISE_SALDO_REST,
					c22_w.IE_ATUALIZA_AUTOR_SENHA,
					c22_w.IE_VALOR_PAGO_GLOSA_GUIA,
					c22_w.IE_REGRA_HORAS_ONC_CICLO,
					c22_w.IE_UTILIZA_CONV_BO,
					c22_w.IE_EXIGE_DOC_CONV,
					c22_w.IE_PERMITE_INTERNAR_EUP,
					c22_w.IE_CALC_PORTE_ESTAB,
					c22_w.QT_DIAS_REAPRE,
					c22_w.QT_DIAS_AUTORIZACAO,
					c22_w.QT_DIAS_AUTOR_PROC,
					c22_w.IE_CONSISTE_CNS_CONTA,
					c22_w.IE_CH_ANESTESISTA,
					c22_w.IE_VALOR_PAGO_RET,
					c22_w.IE_EXIGE_LIB_BRAS,
					c22_w.IE_VALOR_INF_REVERSAO,
					c22_w.DS_PROC_GRG,
					c22_w.IE_DATA_AUTOR_PRORROG,
					c22_w.IE_LIB_REPASSE_PROT_TIT,
					c22_w.IE_FORMA_PROC_PRINC,
					c22_w.IE_EXIGE_DT_VENC_PROT,
					c22_w.IE_GERAR_NF_DESDOB,
					c22_w.IE_AUTOR_MAT_ESP_CIRURGIA,
					c22_w.IE_QT_MAT_AUTOR,
					c22_w.IE_EXIGE_EMPRESA_CONS,
					c22_w.IE_OBRIGA_NF_TIT_REC,
					c22_w.QT_DIAS_AUTOR_QUIMIO,
					c22_w.IE_GUIA_AUTOR_QUIMIO,
					c22_w.IE_CALC_VL_AUX_CONV,
					c22_w.IE_CONV_MEDIDA_AUTOR_QUIMIO,
					c22_w.IE_TRIB_TITULO_RETORNO,
					c22_w.IE_TOMADOR_NF_DESDOB,
					c22_w.IE_CONSIS_INICIO_CONTA_PROT,
					c22_w.IE_IGNORA_PARTIC,
					c22_w.IE_VINC_ADIANT_PROT_PJ,
					c22_w.IE_PRIORIDADE_SIMPRO,
					c22_w.CD_REGRA_HON_SOM_FILME_IPE,
					c22_w.IE_BIOMETRIA_ATEND,
					c22_w.IE_REGRA_APRES_AUTOR_QUIMIO,
					c22_w.IE_ORIGEM_FAT_DIRETO,
					c22_w.IE_AUTOR_PRESCR_SALDO,
					c22_w.IE_AUTOR_DESDOB_CONTA,
					c22_w.IE_CONSISTE_SEQ_CONTA,
					c22_w.IE_CONSISTE_REGRA_IPASGO,
					c22_w.IE_TAXA_TEMPO_UNIDADE,
					c22_w.QT_DIA_DESDOB_CONTA,
					c22_w.IE_VALOR_PAGO_COBRADO_RET,
					c22_w.IE_CONSIDERA_DT_ENTRADA,
					c22_w.IE_CONSIDERA_DT_ENTRADA_ANAM,
					c22_w.IE_FIXAR_VIG_SIMPRO,
					c22_w.IE_PERMITE_DESD_PLANSERV,
					c22_w.IE_PROTOCOLO_INDIVIDUAL,
					c22_w.IE_ATUALIZA_JUST_ANL_ANT,
					c22_w.IE_EXIBE_TITULAR_CONV,
					c22_w.IE_PERMITE_INTEGRACAO,
					c22_w.IE_BLOQ_LANCTO_GUIA_ANL_GRG,
					c22_w.IE_VALOR_COSEGURO,
					c22_w.NR_SEQ_EVENTO_INTEGRACAO,
					c22_w.IE_CONVERSAO_CONV_ITEM,
					c22_w.IE_PRIORIDADE_PACOTE_JOB,
          			c22_w.IE_COPIAR_ETAPA_DESDOB,
					c22_w.IE_REGRA_ORDEM_PACOTE,
					c22_w.IE_REMUN_POR_DIAGNOSTICO,
					c22_w.IE_PRIOR_FORM_PACOTE
					);
			end;
		end loop;
		close c22;

	elsif (nm_tabela_p	= 'CONVERSAO_MATERIAL_CONVENIO') then
		if (ie_excluir_p = 'S') then
			delete	from conversao_material_convenio
			where	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		open c23;
		loop
		fetch c23 into
			c23_w;
		EXIT WHEN NOT FOUND; /* apply on c23 */
			begin
			insert into conversao_material_convenio(
				nr_sequencia, cd_convenio, cd_material_convenio,
				dt_atualizacao, nm_usuario, cd_grupo_material,
				cd_subgrupo_material, cd_classe_material, cd_material,
				ds_material_convenio, cd_grupo, tx_conversao_qtde,
				cd_unidade_convenio, cd_setor_atendimento, cd_cgc,
				ie_classif_acomod, dt_inicio_vigencia, dt_final_vigencia,
				cd_estabelecimento, dt_dia_semana, ie_situacao,
				hr_inicial, hr_final, ie_feriado,
				ie_tipo_material_conv, cd_categoria, ie_tipo_atendimento,
				nr_seq_marca, ie_tipo_material, ie_tipo_preco_autor, nr_proc_interno)
				values (
				nextval('conversao_mat_convenio_seq'), c23_w.cd_convenio, c23_w.cd_material_convenio,
				clock_timestamp(), nm_usuario_p, c23_w.cd_grupo_material,
				c23_w.cd_subgrupo_material, c23_w.cd_classe_material, c23_w.cd_material,
				c23_w.ds_material_convenio, c23_w.cd_grupo, c23_w.tx_conversao_qtde,
				c23_w.cd_unidade_convenio, c23_w.cd_setor_atendimento, c23_w.cd_cgc,
				c23_w.ie_classif_acomod, c23_w.dt_inicio_vigencia, c23_w.dt_final_vigencia,
				cd_estab_dest_w, c23_w.dt_dia_semana, c23_w.ie_situacao,
				c23_w.hr_inicial, c23_w.hr_final, c23_w.ie_feriado,
				c23_w.ie_tipo_material_conv, c23_w.cd_categoria, c23_w.ie_tipo_atendimento,
				c23_w.nr_seq_marca , c23_w.ie_tipo_material, c23_w.ie_tipo_preco_autor, c23_w.nr_proc_interno);
			end;
		end loop;
		close c23;

	elsif (nm_tabela_p	= 'CONVERSAO_PROC_CONVENIO') then
		if (ie_excluir_p = 'S') then
			delete	from conversao_proc_convenio
			where	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;
		open c26;
		loop
		fetch c26 into
			nr_seq_conversao_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c26 */
			begin
			insert into conversao_proc_convenio(
				nr_sequencia, cd_convenio, cd_proc_convenio, dt_atualizacao, nm_usuario, cd_area_proced, cd_especial_proced,

cd_grupo_proced, cd_procedimento, ie_origem_proced,
				ds_proc_convenio, cd_grupo, tx_conversao_qtde, cd_unidade_convenio, ie_situacao, cd_especialidade_medica,

ie_tipo_atendimento, cd_setor_atendimento,
				ie_classif_acomod, nr_seq_proc_interno, dt_inicio_vigencia, dt_vigencia_final, cd_estabelecimento, dt_dia_semana,

ie_feriado, hr_inicial, hr_final, ie_pacote,
				cd_plano, cd_categoria, ie_clinica, vl_proc_inicial, vl_proc_final, ie_funcao_medico, cd_tipo_acomodacao,

cd_tipo_acomod_conv, qt_ano_min, qt_ano_max,
				qt_ano_min_mes, qt_ano_min_dia, qt_ano_max_mes, qt_ano_max_dia, ie_sexo, cd_empresa_ref, ie_carater_inter_sus,

nr_seq_pacote, nr_seq_exame, ie_credenciado,
				ie_tipo_atend_tiss, cd_dependente, ds_observacao, nr_proc_interno)
			SELECT	nextval('conversao_proc_convenio_seq'), cd_convenio, cd_proc_convenio, clock_timestamp(), nm_usuario_p, cd_area_proced,

cd_especial_proced, cd_grupo_proced, cd_procedimento, ie_origem_proced,
				ds_proc_convenio, cd_grupo, tx_conversao_qtde, cd_unidade_convenio, ie_situacao, cd_especialidade_medica,

ie_tipo_atendimento, cd_setor_atendimento,
				ie_classif_acomod, nr_seq_proc_interno, dt_inicio_vigencia, dt_vigencia_final, cd_estab_dest_w, dt_dia_semana,

ie_feriado, hr_inicial, hr_final, ie_pacote,
				cd_plano, cd_categoria, ie_clinica, vl_proc_inicial, vl_proc_final, ie_funcao_medico, cd_tipo_acomodacao,

cd_tipo_acomod_conv, qt_ano_min, qt_ano_max,
				qt_ano_min_mes, qt_ano_min_dia, qt_ano_max_mes, qt_ano_max_dia, ie_sexo, cd_empresa_ref, ie_carater_inter_sus,

nr_seq_pacote, nr_seq_exame, ie_credenciado,
				ie_tipo_atend_tiss, cd_dependente, ds_observacao, nr_proc_interno
			from	conversao_proc_convenio
			where	nr_sequencia = nr_seq_conversao_proc_w;
			end;
		end loop;
		close c26;

	elsif ( nm_tabela_p = 'CONV_REGRA_SEQ_CONTA') then
		if (ie_excluir_p = 'S') then
			delete	from conv_regra_seq_conta
			where	cd_convenio		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;

		open c24;
		loop
		fetch c24 into
			nr_seq_regra_seq_conta_w;
		EXIT WHEN NOT FOUND; /* apply on c24 */
			begin
			insert into conv_regra_seq_conta(
				nr_sequencia, cd_convenio, cd_estabelecimento, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_inicial, qt_incremento,
				ie_situacao, ie_tipo_atend_conta)
			SELECT	nextval('conv_regra_seq_conta_seq'), cd_convenio, cd_estab_dest_w, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p, nr_seq_inicial, qt_incremento,
				ie_situacao, ie_tipo_atend_conta
			from	conv_regra_seq_conta
			where	nr_sequencia = nr_seq_regra_seq_conta_w;
			end;
		end loop;
		close c24;

	elsif ( nm_tabela_p = 'CONV_REGRA_USUARIO_CATEG') then
		if (ie_excluir_p = 'S') then
			delete	from conv_regra_usuario_categ
			where	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		open c25;
		loop
		fetch c25 into
			nr_seq_regra_usuario_categ_w;
		EXIT WHEN NOT FOUND; /* apply on c25 */
			begin
			insert into conv_regra_usuario_categ(
				nr_sequencia, cd_estabelecimento, cd_convenio, cd_categoria, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_pos_inicial, nr_pos_final,
				cd_usuario_padrao, ie_tipo_atendimento, ie_regra_bloqueio, ds_observacao, ie_clinica)
			SELECT	nextval('conv_regra_usuario_categ_seq'), cd_estab_dest_w, cd_convenio, cd_categoria, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p, nr_pos_inicial, nr_pos_final,
				cd_usuario_padrao, ie_tipo_atendimento, ie_regra_bloqueio, ds_observacao, ie_clinica
			from	conv_regra_usuario_categ
			where	nr_sequencia = nr_seq_regra_usuario_categ_w;

			end;
		end loop;
		close c25;

	elsif ( nm_tabela_p = 'CONVENIO_COBERTURA') then
		if (ie_excluir_p = 'S') then
			delete from convenio_cobertura
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;

		insert into convenio_cobertura(
			nr_sequencia,
			cd_convenio,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_cobertura,
			ie_situacao,
			cd_estabelecimento)
		SELECT 	nextval('convenio_cobertura_seq'),
			cd_convenio_orig_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ds_cobertura,
			ie_situacao,
			cd_estab_dest_w
		from 	convenio_cobertura
		where 	cd_convenio 		= cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;

	elsif ( nm_tabela_p = 'CONV_REGRA_TX_TEMPO_SETOR') then
		if (ie_excluir_p = 'S') then
			delete from conv_regra_tx_tempo_setor
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;

		insert into conv_regra_tx_tempo_setor(
			nr_sequencia,
			cd_convenio,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_proc_interno,
			cd_setor_atendimento,
			cd_procedimento,
			ie_origem_proced,
			qt_tolerancia,
			ie_situacao,
			qt_min_cobranca,
			dt_inicio_vigencia,
			dt_final_vigencia,
			cd_estabelecimento,
			cd_unidade_basica, -- askono
			cd_unidade_compl
		)
		SELECT 	nextval('conv_regra_tx_tempo_setor_seq'),
			cd_convenio_orig_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_proc_interno,
			cd_setor_atendimento,
			cd_procedimento,
			ie_origem_proced,
			qt_tolerancia,
			ie_situacao,
			qt_min_cobranca,
			dt_inicio_vigencia,
			dt_final_vigencia,
			cd_estab_dest_w,
			cd_unidade_basica, -- askono
			cd_unidade_compl
		from 	conv_regra_tx_tempo_setor
		where 	cd_convenio 		= cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;

	elsif ( nm_tabela_p = 'CONVENIO_REGRA_TAXA_CIR') then
		if (ie_excluir_p = 'S') then
			delete from convenio_regra_taxa_cir
			where 	cd_convenio 		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;

		insert into convenio_regra_taxa_cir(
			nr_sequencia,
			cd_convenio,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_min_inicial,
			nr_min_final,
			cd_procedimento,
			ie_origem_proced,
			ie_situacao,
			nr_min_excesso,
			cd_proc_alternativo,
			ie_orig_proced_alt,
			ie_porte,
			cd_tipo_anestesia,
			qt_procedimento,
			cd_estabelecimento,
			qt_porte_inicial,
			qt_porte_final,
			nr_seq_classificacao,
			ie_certificate_type
		)
		SELECT 	nextval('convenio_regra_taxa_cir_seq'),
			cd_convenio_orig_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_min_inicial,
			nr_min_final,
			cd_procedimento,
			ie_origem_proced,
			ie_situacao,
			nr_min_excesso,
			cd_proc_alternativo,
			ie_orig_proced_alt,
			ie_porte,
			cd_tipo_anestesia,
			qt_procedimento,
			cd_estab_dest_w,
			qt_porte_inicial,
			qt_porte_final,
			nr_seq_classificacao,
			ie_certificate_type
		from 	convenio_regra_taxa_cir
		where 	cd_convenio 		= cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;

	elsif ( nm_tabela_p = 'CONV_REGRA_FATUR_MAT') then
		begin
		if (ie_excluir_p = 'S') then
			delete from conv_regra_fatur_mat
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		insert into conv_regra_fatur_mat(
			cd_classe_material,
			cd_convenio,
			cd_estabelecimento,
			cd_grupo_material,
			cd_material,
			cd_perfil,
			cd_setor_atendimento,
			cd_subgrupo_material,
			dt_atualizacao,
			dt_atualizacao_nrec,
			ie_alterar_conta,
			ie_excluir_conta,
			ie_incluir_conta,
			ie_situacao,
			ie_tipo_atendimento,
			ie_tipo_valor,
			ie_utiliza_valor_inf,
			nm_usuario,
			nm_usuario_filtro,
			nm_usuario_nrec,
			nr_seq_etapa_filtro,
			nr_sequencia,
			vl_maximo,
			vl_minimo)
		SELECT	 cd_classe_material,
			cd_convenio_orig_p,
			cd_estab_dest_w,
			cd_grupo_material,
			cd_material,
			cd_perfil,
			cd_setor_atendimento,
			cd_subgrupo_material,
			clock_timestamp(),
			clock_timestamp(),
			ie_alterar_conta,
			ie_excluir_conta,
			ie_incluir_conta,
			ie_situacao,
			ie_tipo_atendimento,
			ie_tipo_valor,
			ie_utiliza_valor_inf,
			nm_usuario_p,
			nm_usuario_filtro,
			nm_usuario_p,
			nr_seq_etapa_filtro,
			nextval('conv_regra_fatur_mat_seq'),
			vl_maximo,
			vl_minimo
		from 	conv_regra_fatur_mat
		where 	cd_convenio = cd_convenio_orig_p
		and	cd_estabelecimento = cd_estab_orig_p;
		end;
	elsif ( nm_tabela_p = 'CONV_REGRA_FATUR_PROC') then
		if (ie_excluir_p = 'S') then
			delete from conv_regra_fatur_proc
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;


		insert into conv_regra_fatur_proc(
			cd_area_procedimento,
			cd_convenio,
			cd_especialidade,
			cd_estabelecimento,
			cd_grupo_proc,
			cd_perfil,
			cd_procedimento,
			cd_setor_atendimento,
			dt_atualizacao,
			dt_atualizacao_nrec,
			ie_alterar_conta,
			ie_excluir_conta,
			ie_incluir_conta,
			ie_origem_proced,
			ie_situacao,
			ie_tipo_atendimento,
			ie_utiliza_valor_inf,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_etapa_filtro,
			nr_sequencia,
			vl_maximo,
			vl_minimo)
		SELECT	cd_area_procedimento,
			cd_convenio_orig_p,
			cd_especialidade,
			cd_estab_dest_w,
			cd_grupo_proc,
			cd_perfil,
			cd_procedimento,
			cd_setor_atendimento,
			clock_timestamp(),
			clock_timestamp(),
			ie_alterar_conta,
			ie_excluir_conta,
			ie_incluir_conta,
			ie_origem_proced,
			ie_situacao,
			ie_tipo_atendimento,
			ie_utiliza_valor_inf,
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_etapa_filtro,
			nextval('conv_regra_fatur_proc_seq'),
			vl_maximo,
			vl_minimo
		from 	conv_regra_fatur_proc
		where 	cd_convenio = cd_convenio_orig_p
		and	cd_estabelecimento = cd_estab_orig_p;

	elsif (nm_tabela_p = 'CONV_REGRA_CALCULO_CONTA') then
		if (ie_excluir_p = 'S') then
			delete from conv_regra_calculo_conta
			where 	cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		insert into conv_regra_calculo_conta(
			nr_sequencia,
			cd_estabelecimento,
			cd_convenio,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_proc_coseg_honor,
			ie_orig_coseg_honor,
			cd_proc_coseg_hosp,
			ie_orig_coseg_hosp,
			cd_proc_deduzido,
			ie_orig_proc_deduzido,
			dt_inicio_vigencia,
			dt_final_vigencia,
			ie_imposto_total_conta,
			ie_imposto_deduzido,
			ie_considera_valor_bruto,
			vl_desconto_deduzido,
			cd_tributo,
			ie_situacao,
			cd_proc_calculo,
			ie_orig_proc_calculo,
			ds_calculo,
			ie_tipo_calculo,
			nm_regra,
			ds_regra,
			pr_imposto)
		SELECT	nextval('conv_regra_calculo_conta_seq'),
			cd_estab_dest_w,
			cd_convenio_orig_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_proc_coseg_honor,
			ie_orig_coseg_honor,
			cd_proc_coseg_hosp,
			ie_orig_coseg_hosp,
			cd_proc_deduzido,
			ie_orig_proc_deduzido,
			dt_inicio_vigencia,
			dt_final_vigencia,
			ie_imposto_total_conta,
			ie_imposto_deduzido,
			ie_considera_valor_bruto,
			vl_desconto_deduzido,
			cd_tributo,
			ie_situacao,
			cd_proc_calculo,
			ie_orig_proc_calculo,
			ds_calculo,
			ie_tipo_calculo,
			nm_regra,
			ds_regra,
			pr_imposto
		from	conv_regra_calculo_conta
		where	cd_convenio		= cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_dest_w;

    elsif (nm_tabela_p = 'AGENDA_REGRA') then
		if (ie_excluir_p = 'S') then
			delete	from agenda_regra
			where	cd_convenio		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;

		open c047;
		loop
		fetch c047 into
			nr_seq_agenda_regra_w;
		EXIT WHEN NOT FOUND; /* apply on c047 */

			select	nextval('agenda_regra_seq')
			into STRICT	nr_seq_next_agenda_regra_w
			;

			insert into agenda_regra(
				nr_sequencia,
				cd_estabelecimento,
				cd_agenda,
				dt_atualizacao,
				nm_usuario,
				ie_permite,
				cd_convenio,
				cd_area_proc,
				cd_especialidade,
				cd_grupo_proc,
				cd_procedimento,
				ie_origem_proced,
				cd_medico,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_proc_interno,
				nr_seq_regra,
				nr_seq_grupo,
				nr_seq_subgrupo,
				nr_seq_forma_org,
				cd_plano_convenio,
				ie_agenda)
			SELECT	nr_seq_next_agenda_regra_w,
				cd_estab_dest_w,
				cd_agenda,
				dt_atualizacao,
				nm_usuario_p,
				ie_permite,
				cd_convenio_orig_p,
				cd_area_proc,
				cd_especialidade,
				cd_grupo_proc,
				cd_procedimento,
				ie_origem_proced,
				cd_medico,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_proc_interno,
				nr_seq_regra,
				nr_seq_grupo,
				nr_seq_subgrupo,
				nr_seq_forma_org,
				cd_plano_convenio,
				ie_agenda
			from	agenda_regra
			where	nr_sequencia	= nr_seq_agenda_regra_w;
			
			if (nr_seq_agenda_regra_w IS NOT NULL AND nr_seq_agenda_regra_w::text <> '') and (nr_seq_next_agenda_regra_w IS NOT NULL AND nr_seq_next_agenda_regra_w::text <> '') then
				CALL ageint_gerar_info_tabela('AGENDA_REGRA_PROC', nr_seq_agenda_regra_w, nr_seq_next_agenda_regra_w);
			end if;
		end loop;
		close c047;

	elsif (nm_tabela_p = 'CONVENIO_SIMPRO') then

		if (ie_excluir_p = 'S') then
			delete	from CONVENIO_SIMPRO
			where	cd_convenio		= cd_convenio_orig_p
			and	cd_estabelecimento	= cd_estab_dest_w;
		end if;

		insert into CONVENIO_SIMPRO(
			nr_sequencia,
			cd_convenio,
			cd_categoria,
			dt_inicio_vigencia,
			dt_atualizacao,
			nm_usuario,
			tx_preco_fabrica,
			tx_pmc,
			ie_situacao,
			qt_dia_fixo,
			dt_base_fixo,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_tipo_preco,
			cd_estabelecimento,
			cd_grupo_material,
			cd_classe_material,
			cd_subgrupo_material,
			TX_PFB_POS,
			TX_PMC_POS,
			TX_PFB_NEG,
			TX_PMC_NEG,
			vl_minimo,
			vl_maximo,
			DT_FINAL_VIGENCIA,
			IE_DIVIDIR_INDICE_PMC,
			IE_DIVIDIR_INDICE_PFB,
			IE_TIPO_MATERIAL,
			IE_PRIORIDADE,
			IE_PRIMEIRA_VERSAO)
		SELECT
			nextval('convenio_simpro_seq'),
			cd_convenio_orig_p,
			cd_categoria,
			dt_inicio_vigencia,
			clock_timestamp(),
			nm_usuario_p,
			tx_preco_fabrica,
			tx_pmc,
			ie_situacao,
			qt_dia_fixo,
			dt_base_fixo,
			clock_timestamp(),
			nm_usuario_p,
			ie_tipo_preco,
			cd_estab_dest_w,
			cd_grupo_material,
			cd_classe_material,
			cd_subgrupo_material,
			TX_PFB_POS,
			TX_PMC_POS,
			TX_PFB_NEG,
			TX_PMC_NEG,
			vl_minimo,
			vl_maximo,
			DT_FINAL_VIGENCIA,
			IE_DIVIDIR_INDICE_PMC,
			IE_DIVIDIR_INDICE_PFB,
			IE_TIPO_MATERIAL,
			IE_PRIORIDADE,
			IE_PRIMEIRA_VERSAO
		from 	convenio_simpro
		where 	cd_convenio	= cd_convenio_orig_p
		and	cd_estabelecimento	= cd_estab_orig_p;

	elsif (nm_tabela_p = 'HEALTH_FUND_DRG') then
		if (ie_excluir_p = 'S') then
			delete
			from health_fund_drg
			where cd_health_fund = cd_convenio_orig_p
			and cd_estabelecimento = cd_estab_dest_w;
		end if;

	insert into health_fund_drg(
                nr_sequencia,
                cd_estabelecimento,
                cd_health_fund,
        		nm_usuario,
                dt_atualizacao,
                dt_start_validity,
                dt_end_validity,
                nr_seq_edition )
			SELECT nextval('health_fund_drg_seq'),
                cd_estab_dest_w,
                cd_convenio_orig_p,
                nm_usuario_p,
                clock_timestamp(),
				dt_start_validity,
				dt_end_validity,
				nr_seq_edition
			from   health_fund_drg
			where  cd_health_fund = cd_convenio_orig_p
			and    cd_estabelecimento = cd_estab_orig_p;

	elsif (nm_tabela_p = 'HEALTH_FUND_PRICE_LEVEL') then
		if (ie_excluir_p = 'S') then
			delete
			from health_fund_price_level
			where cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

	insert into health_fund_price_level(
                nr_sequencia,
                cd_convenio,
        		nm_usuario,
                dt_atualizacao,
                cd_level,
                dt_start_validity,
                dt_end_validity,
                vl_price,
				cd_estabelecimento)
			SELECT nextval('health_fund_price_level_seq'),
                cd_convenio_orig_p,
                nm_usuario_p,
                clock_timestamp(),
                cd_level,
				dt_start_validity,
				dt_end_validity,
				vl_price,
				cd_estab_dest_w
			from   health_fund_price_level
			where  cd_convenio = cd_convenio_orig_p
			and    cd_estabelecimento = cd_estab_orig_p;

    elsif (nm_tabela_p = 'AGENDA_CONS_REGRA_PROC') then

		if (ie_excluir_p = 'S') then
			delete
            from agenda_cons_regra_proc
			where cd_convenio = cd_convenio_orig_p
			and	cd_estabelecimento = cd_estab_dest_w;
		end if;

		open c048;
		loop
            fetch c048 into
                nr_seq_agend_cons_reg_proc_w;
            EXIT WHEN NOT FOUND; /* apply on c048 */

        	insert into agenda_cons_regra_proc(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_proc_interno,
				cd_agenda,
				cd_procedimento,
				ie_origem_proced,
				cd_area_procedimento,
				cd_especialidade,
				cd_grupo_proc,
				cd_convenio,
				cd_categoria,
				cd_plano_convenio,
				ie_permite,
				cd_estabelecimento,
				nr_seq_grupo_ageint,
				nr_seq_area_ageint,
				ie_agenda)
            SELECT	
                nextval('agenda_cons_regra_proc_seq'),
				dt_atualizacao,
				nm_usuario_p,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_proc_interno,
				cd_agenda,
				cd_procedimento,
				ie_origem_proced,
				cd_area_procedimento,
				cd_especialidade,
				cd_grupo_proc,
				cd_convenio_orig_p,
				cd_categoria,
				cd_plano_convenio,
				ie_permite,
				cd_estab_dest_w,
				nr_seq_grupo_ageint,
				nr_seq_area_ageint,
				ie_agenda
			from
                agenda_cons_regra_proc
			where	
                nr_sequencia = nr_seq_agend_cons_reg_proc_w;

		end loop;
		close c048;

	end if;
	end;
end loop;
close c000;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copia_param_convenio_estab ( cd_convenio_orig_p bigint, cd_estab_orig_p bigint, cd_estab_dest_p text, nm_tabela_p text, nm_usuario_p text, ie_excluir_p text, ie_tipo_acao_p text) FROM PUBLIC;

