-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE forcar_horario_livre_age_exa ( dt_agenda_forc_p timestamp, cd_agenda_p bigint, nr_minuto_duracao_p bigint, nm_paciente_p text, hr_agenda_forc_p timestamp, nr_classif_agenda_p bigint) AS $body$
DECLARE


nm_usuario_w varchar(255);
hr_agenda_w timestamp;
hr_agenda_seg_w timestamp;
nr_seq_turno_w agenda_horario.nr_sequencia%type;
cd_medicao_w agenda_horario.cd_medico%type;
cd_medicao_exec_w agenda_paciente.cd_medico_exec%type;
nr_seq_agenda_w agenda_paciente.nr_Sequencia%type;


BEGIN

nm_usuario_w := obter_usuario_ativo;
hr_agenda_w := to_date(to_char(dt_agenda_forc_p, 'dd/mm/yyyy') || ' ' || to_char(hr_agenda_forc_p, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss');

select max(hr_inicio)
into STRICT hr_agenda_seg_w
from agenda_paciente
where to_char(hr_inicio, 'dd/mm/yyyy hh24:mi') = to_char(hr_agenda_w, 'dd/mm/yyyy hh24:mi')
and cd_agenda = cd_agenda_p;

if (hr_agenda_seg_w IS NOT NULL AND hr_agenda_seg_w::text <> '') then

  hr_agenda_w := hr_agenda_seg_w + (1 / 86400);

end if;

nr_seq_turno_w := obter_turno_encaixe_ageexame(cd_agenda_p, hr_agenda_w);

if (nr_seq_turno_w IS NOT NULL AND nr_seq_turno_w::text <> '') then

  select a.cd_medico,
      (select max(b.cd_medico) from agenda_medico b where b.nr_sequencia = a.nr_seq_medico_exec)
  into STRICT cd_medicao_w,
      cd_medicao_exec_w
  from agenda_horario a
  where a.nr_sequencia = nr_seq_turno_w;

end if;
select nextval('agenda_paciente_seq')
into STRICT	nr_seq_agenda_w
;

insert into agenda_paciente(
  nr_sequencia,
  dt_agenda,
  dt_atualizacao,
  hr_inicio,
  cd_agenda,
  nm_usuario,
  nr_minuto_duracao,
  ie_equipamento,
  nr_seq_horario,
  cd_medico,
  nr_seq_classif_agenda,
  ie_status_agenda,
  nm_paciente,
  cd_medico_exec
) values (
  nr_seq_agenda_w,
  dt_agenda_forc_p,
  clock_timestamp(),
  hr_agenda_w,
  cd_agenda_p,
  nm_usuario_w,
  coalesce(nr_minuto_duracao_p, 0),
  'N',
  nr_seq_turno_w,
  cd_medicao_w,
  nr_classif_agenda_p,
  'LF',
  nm_paciente_p,
  cd_medicao_exec_w
);

insert into agenda_paciente_auxiliar(nr_sequencia,
dt_atualizacao,
nm_usuario,
ie_horario_forcado,
nr_seq_agenda)
values (nextval('agenda_paciente_auxiliar_seq'),
clock_timestamp(),
nm_usuario_w,
'S',
nr_seq_agenda_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE forcar_horario_livre_age_exa ( dt_agenda_forc_p timestamp, cd_agenda_p bigint, nr_minuto_duracao_p bigint, nm_paciente_p text, hr_agenda_forc_p timestamp, nr_classif_agenda_p bigint) FROM PUBLIC;

