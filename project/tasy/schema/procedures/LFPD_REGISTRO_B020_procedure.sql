-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lfpd_registro_b020 ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


contador_w		bigint	:= 0;
ds_arquivo_w		varchar(4000);
ds_arquivo_compl_w	varchar(4000);
ds_linha_w		varchar(8000);
nr_linha_w		bigint	:= qt_linha_p;
nr_seq_registro_w	bigint	:= nr_sequencia_p;
sep_w			varchar(1)	:= ds_separador_p;

cd_cgc_w		varchar(14);
cd_municipio_w		varchar(10);

c01 CURSOR FOR
	SELECT	'B020'																				cd_registro,
		n.nr_sequencia																				nr_seq_nota,
		substr(CASE WHEN Obter_se_nota_entrada_saida(n.nr_sequencia)='E' THEN 0 WHEN Obter_se_nota_entrada_saida(n.nr_sequencia)='S' THEN 1 END ,1,1) 												ie_operacao,
		substr(CASE WHEN Obter_se_nota_entrada_saida(n.nr_sequencia)='E' THEN 1 WHEN Obter_se_nota_entrada_saida(n.nr_sequencia)='S' THEN 0 END ,1,1) 												ie_emissao_nf,
		coalesce(n.cd_pessoa_fisica, n.cd_cgc) 														cd_participante,
		'01' 																					cd_modelo_doc, -- nota fiscal
		substr(CASE WHEN n.ie_situacao=1 THEN  '00' WHEN n.ie_situacao=2 THEN  '02' WHEN n.ie_situacao=3 THEN  '02' WHEN n.ie_situacao=9 THEN  '02' END ,1,2) 													cd_situacao,
		n.cd_serie_nf 																		cd_serie_nf,
		n.cd_serie_rps 																		cd_subserie_nf,
		coalesce(n.nr_nfe_imp, n.nr_nota_fiscal) 															nr_nota_fiscal,
		substr(to_char(n.dt_emissao, 'ddmmyyyy'),1,8) 																dt_emissao,
		substr(ELIMINA_CARACTERE_ESPECIAL(a.cd_cfps), 1, 4)																					cd_cfps,
		'0' 																					nr_lcto_contabil,
		obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc,'CDMDV')															cd_municipio_ibge,
		obter_dados_pf_pj('', cd_cgc_w, 'UF')																	sg_uf,
		replace(campo_mascara(n.vl_mercadoria,2),'.',',')															vl_contabil_nota,
		'0' 																					vl_terceiros,
		'0' 																					vl_subempreitada,
		replace(Campo_Mascara(n.vl_mercadoria - obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'ISS'),2),'.',',') 			vl_operacoes_isentas,
		obter_valor_tipo_tributo_nota(n.nr_sequencia, 'C', 'ISS') 																vl_deducao_base_calculo,
		replace(Campo_Mascara(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'ISS'),2),'.',',')									vl_base_calculo,
		replace(Campo_Mascara(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'ISSST'),2),'.',',')             vl_base_calculo_ret,
		replace(Campo_Mascara(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'V', 'ISSST'),2),'.',',')							vl_retido,
		replace(Campo_Mascara(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'V', 'ISS'),2),'.',',') 									vl_destacado,
		CASE WHEN n.ds_observacao='' THEN  ''  ELSE n.nr_sequencia END 																ds_observacao
	FROM operacao_nota o, natureza_operacao a, nota_fiscal n
LEFT OUTER JOIN modelo_nota_fiscal m ON (n.nr_seq_modelo = m.nr_sequencia)
WHERE n.cd_operacao_nf	= o.cd_operacao_nf  and o.ie_servico		= 'S' and n.ie_situacao		= 1 and n.vl_total_nota > 0 and (n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '') and (coalesce(Obter_se_nota_entrada_saida(n.nr_sequencia),'E') = 'S') and to_char(n.dt_emissao,'dd/MM/yy') between to_date(dt_inicio_p,'dd/MM/yy') and to_date(dt_fim_p,'dd/MM/yy') and n.cd_estabelecimento = cd_estabelecimento_p and (m.cd_modelo_nf <> '3A' or coalesce(m.cd_modelo_nf::text, '') = '') and exists (SELECT 1
					from	nota_fiscal_item x
					where	x.nr_sequencia = n.nr_sequencia
					and		a.cd_natureza_operacao = x.cd_natureza_operacao
					and ((x.cd_material IS NOT NULL AND x.cd_material::text <> '') or (x.cd_procedimento IS NOT NULL AND x.cd_procedimento::text <> ''))  LIMIT 1)
	
union

	select	'B020'															cd_registro,
		n.nr_sequencia															nr_seq_nota,
		substr(CASE WHEN Obter_se_nota_entrada_saida(n.nr_sequencia)='E' THEN 0 WHEN Obter_se_nota_entrada_saida(n.nr_sequencia)='S' THEN 1 END ,1,1) 							ie_operacao,
		substr(CASE WHEN Obter_se_nota_entrada_saida(n.nr_sequencia)='E' THEN 1 WHEN Obter_se_nota_entrada_saida(n.nr_sequencia)='S' THEN 0 END ,1,1) 							ie_emissao_nf,
		coalesce(n.cd_pessoa_fisica, n.cd_cgc) 									cd_participante,
		'01' cd_modelo_doc, -- nota fiscal
		substr(CASE WHEN n.ie_situacao=1 THEN  '00' WHEN n.ie_situacao=2 THEN  '02' WHEN n.ie_situacao=3 THEN  '02' WHEN n.ie_situacao=9 THEN  '02' END ,1,2) 								cd_situacao,
		n.cd_serie_nf 													cd_serie_nf,
		n.cd_serie_rps 													cd_subserie_nf,
		coalesce(n.nr_nfe_imp, n.nr_nota_fiscal) 										nr_nota_fiscal,
		substr(to_char(n.dt_emissao, 'ddmmyyyy'),1,8) 											dt_emissao,
		substr(ELIMINA_CARACTERE_ESPECIAL(a.cd_cfps), 1, 4)																cd_cfps,
		'0' 																nr_lcto_contabil,
		obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc,'CDMDV')										cd_municipio_ibge,
		obter_dados_pf_pj('', cd_cgc_w, 'UF')												sg_uf,
		replace(Campo_Mascara(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'ISS'),2),'.',',')				vl_contabil_nota,
		'0' 																vl_terceiros,
		'0' 																vl_subempreitada,
		replace(Campo_Mascara(n.vl_mercadoria - obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'ISS'),2),'.',',')	vl_operacoes_isentas,
		obter_valor_tipo_tributo_nota(n.nr_sequencia, 'C', 'ISS') 																vl_deducao_base_calculo,
		'0,00'																									vl_base_calculo,
		replace(Campo_Mascara(Obter_Valor_tipo_Trib_Retido(n.nr_sequencia, 'B', 'ISS'),2),'.',',')				vl_base_calculo_ret,
		replace(Campo_Mascara(Obter_Valor_tipo_Trib_Retido(n.nr_sequencia, 'V', 'ISS'),2),'.',',') 				vl_retido,
		'0,00'																									vl_destacado,
		CASE WHEN n.ds_observacao='' THEN  ''  ELSE n.nr_sequencia END 														 	ds_observacao
	FROM operacao_nota o, natureza_operacao a, nota_fiscal n
LEFT OUTER JOIN modelo_nota_fiscal m ON (n.nr_seq_modelo = m.nr_sequencia)
WHERE n.cd_operacao_nf	= o.cd_operacao_nf  and o.ie_servico		= 'S' and n.ie_situacao		= 1 and n.cd_estabelecimento	= cd_estabelecimento_p and n.vl_total_nota > 0 and (n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '') and coalesce(Obter_se_nota_entrada_saida(n.nr_sequencia),'E') = 'E' and to_char(n.dt_emissao,'dd/MM/yy') between to_date(dt_inicio_p,'dd/MM/yy') and to_date(dt_fim_p,'dd/MM/yy') and (m.cd_modelo_nf <> '3A' or coalesce(m.cd_modelo_nf::text, '') = '') and exists (select 1
				from	nota_fiscal_item x
				where	x.nr_sequencia = n.nr_sequencia
				and		a.cd_natureza_operacao = x.cd_natureza_operacao
				and ((x.cd_material IS NOT NULL AND x.cd_material::text <> '') or (x.cd_procedimento IS NOT NULL AND x.cd_procedimento::text <> ''))  LIMIT 1);

vet01	c01%RowType;


BEGIN

select	cd_cgc
into STRICT	cd_cgc_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_p;

open C01;
loop
fetch C01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	contador_w := contador_w + 1;

	cd_municipio_w := vet01.cd_municipio_ibge;

	if (	vet01.cd_cfps <> '9104')then
		cd_municipio_w := '5300108';
	else
		cd_municipio_w := '';
	end if;

	ds_linha_w := substr(	sep_w	||	vet01.cd_registro		|| sep_w ||
						vet01.ie_operacao		|| sep_w ||
						vet01.ie_emissao_nf		|| sep_w ||
						vet01.cd_participante		|| sep_w ||
						vet01.cd_modelo_doc		|| sep_w ||
						vet01.cd_situacao		|| sep_w ||
						vet01.cd_serie_nf		|| sep_w ||
						vet01.cd_subserie_nf		|| sep_w ||
						vet01.nr_nota_fiscal		|| sep_w ||
						vet01.dt_emissao		|| sep_w ||
						vet01.cd_cfps			|| sep_w ||
						vet01.nr_lcto_contabil		|| sep_w ||
						cd_municipio_w			|| sep_w ||
						vet01.vl_contabil_nota		|| sep_w ||
						vet01.vl_terceiros		|| sep_w ||
						vet01.vl_subempreitada		|| sep_w ||
						vet01.vl_operacoes_isentas	|| sep_w ||
						vet01.vl_deducao_base_calculo	|| sep_w ||
						vet01.vl_base_calculo		|| sep_w ||
						vet01.vl_base_calculo_ret	|| sep_w ||
						vet01.vl_retido			|| sep_w ||
						vet01.vl_destacado		|| sep_w ||
						vet01.ds_observacao	|| sep_w, 1, 8000);

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_lfpd_arquivo(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_linha,
		ds_arquivo,
		ds_arquivo_compl,
		cd_registro,
		nr_seq_controle_lfpd)
	values (nextval('fis_lfpd_arquivo_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_linha_w,
		ds_arquivo_w,
		ds_arquivo_compl_w,
		vet01.cd_registro,
		nr_seq_controle_p);

	if (mod(contador_w,100) = 0) then
		commit;
	end if;

	SELECT * FROM lfpd_registro_B025(nr_seq_controle_p, vet01.nr_seq_nota, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, sep_w, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;

	end;
end loop;
close C01;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lfpd_registro_b020 ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

