-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tit_pag_comissao_pf ( nr_seq_lote_p bigint, dt_vencimento_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
nr_seq_comissao_pf_w		bigint;
nr_titulo_w			bigint;
cd_moeda_w			smallint;
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(100);
vl_vencimento_w			double precision;
nr_seq_trans_fin_baixa_vend_w	bigint;
cd_conta_financ_w		bigint;
nr_seq_classif_w		bigint;
ie_mes_fechado_w		varchar(2);

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_pessoa_fisica, 
		cd_cgc, 
		vl_indicacao 
	from	pls_comissao_pf 
	where	nr_seq_lote	= nr_seq_lote_p;


BEGIN 
select	pls_obter_se_mes_fechado(dt_referencia,'T',cd_estabelecimento_p) 
into STRICT	ie_mes_fechado_w 
from	pls_lote_comissao_pf 
where	nr_sequencia	= nr_seq_lote_p;
 
if (ie_mes_fechado_w	= 'S') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 267304, null ); /* O mês de competência ou contabilidade do mês está fechado. Verifique! */
end if;
 
select	max(nr_seq_trans_fin_baixa_vend), 
	max(cd_conta_financ) 
into STRICT	nr_seq_trans_fin_baixa_vend_w, 
	cd_conta_financ_w 
from	pls_parametros 
where	cd_estabelecimento = cd_estabelecimento_p;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_comissao_pf_w, 
	cd_pessoa_fisica_w, 
	cd_cgc_w, 
	vl_vencimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	 
	cd_moeda_w	:= 1;
	 
	select	nextval('titulo_pagar_seq') 
	into STRICT	nr_titulo_w 
	;
	 
	insert into titulo_pagar(nr_titulo, cd_estabelecimento, dt_atualizacao, 
		nm_usuario, dt_emissao, dt_vencimento_original, 
		dt_vencimento_atual, vl_titulo, vl_saldo_titulo, 
		vl_saldo_juros, vl_saldo_multa, cd_moeda, 
		tx_juros, tx_multa, cd_tipo_taxa_juro, 
		cd_tipo_taxa_multa, ie_situacao, ie_origem_titulo, 
		ie_tipo_titulo, cd_pessoa_fisica, cd_cgc, 
		nr_seq_trans_fin_baixa) 
	values (	nr_titulo_w, cd_estabelecimento_p, clock_timestamp(), 
		nm_usuario_p, clock_timestamp(), dt_vencimento_p, 
		dt_vencimento_p, vl_vencimento_w, vl_vencimento_w, 
		0, 0, cd_moeda_w, 
		0, 0, 1, 
		1, 'A', '8', 
		10, cd_pessoa_fisica_w, cd_cgc_w, 
		nr_seq_trans_fin_baixa_vend_w);
	 
	CALL atualizar_inclusao_tit_pagar(nr_titulo_w,nm_usuario_p);
	 
	if (coalesce(cd_conta_financ_w,0) <> 0) then 
		select	coalesce(max(nr_sequencia),0) + 1 
		into STRICT	nr_seq_classif_w 
		from	titulo_pagar_classif 
		where	nr_titulo	= nr_titulo_w;
		 
		insert into titulo_pagar_classif(nr_titulo, nr_sequencia, vl_titulo, 
			dt_atualizacao, nm_usuario, cd_conta_contabil, 
			cd_centro_custo, nr_seq_conta_financ, nr_seq_trans_fin, 
			nr_contrato, vl_desconto, vl_original, 
			vl_acrescimo) 
		values (	nr_titulo_w, nr_seq_classif_w, vl_vencimento_w, 
			clock_timestamp(), nm_usuario_p, null, 
			null, cd_conta_financ_w, null, 
			null, null, null, 
			null);
	end if;
	 
	update	pls_comissao_pf 
	set	nr_titulo	= nr_titulo_w 
	where	nr_sequencia	= nr_seq_comissao_pf_w;
	 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tit_pag_comissao_pf ( nr_seq_lote_p bigint, dt_vencimento_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

