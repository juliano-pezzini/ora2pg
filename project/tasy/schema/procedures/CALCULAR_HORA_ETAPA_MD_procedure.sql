-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_hora_etapa_md ( ie_horario_continuo_P text, ie_hemodialise_p text, nr_horarios_p bigint, nr_horas_intervalo_p bigint, ds_mascara_p text, ie_horario_solucao_p text, ie_etapa_esp_p text, qt_tempo_aplicacao_p bigint, qt_hora_p INOUT timestamp, ds_horario_p INOUT text ) AS $body$
DECLARE


qt_hora_ww		double precision;
BEGIN
	if (ie_horario_continuo_P <> 'S' or coalesce(ie_hemodialise_p,'N') = 'S') then
		begin
		For i in 1.. nr_horarios_p LOOP
			begin
				if (ie_horario_continuo_p = 'S') then
					qt_hora_ww	:= dividir_sem_round_md(ceil(nr_horas_intervalo_p) , 24);
				else
					qt_hora_ww	:= dividir_sem_round_md((nr_horas_intervalo_p) , 24);
				end if;
			ds_horario_p 	:= substr(ds_horario_p || to_char(trunc(qt_hora_p,'mi'),ds_mascara_p) ||' ',1,2000);
			qt_hora_p	:= trunc(qt_hora_p,'mi') + qt_hora_ww;
			end;
		END LOOP;
		end;
	else
		begin
		For i in 1.. nr_horarios_p LOOP
			begin

			if (coalesce(ie_horario_solucao_p,'N') = 'N') then
				ds_horario_p 	:= substr(ds_horario_p || ' ' || wheb_mensagem_pck.get_texto(307054, 'NR_PRIM_HOR=' ||  to_char(trunc(qt_hora_p,'mi'),ds_mascara_p)) || ' ' || -- das #@NR_PRIM_HOR#@ as
							to_char(trunc(qt_hora_p,'mi') + (dividir_sem_round_md(nr_horas_intervalo_p , 24)),ds_mascara_p) || '; ',1,2000);

				if (coalesce(ie_etapa_esp_p,'N') = 'N') then
					qt_hora_p	:= trunc(qt_hora_p,'mi') + dividir_sem_round_md((dividir_sem_round_md(qt_tempo_aplicacao_p , nr_horarios_p)) , 24);
				else
					if (nr_horarios_p = 1) then
						qt_hora_p	:= trunc(qt_hora_p,'mi') + dividir_sem_round_md(dividir_sem_round_md(qt_tempo_aplicacao_p , nr_horarios_p) , 24);
					else
						qt_hora_p	:= trunc(qt_hora_p,'mi') + dividir_sem_round_md((dividir_sem_round_md(qt_tempo_aplicacao_p , nr_horarios_p - 1)) , 24);
					end if;
				end if;

			else
				ds_horario_p 	:= substr(ds_horario_p || ' ' || wheb_mensagem_pck.get_texto(307054, 'NR_PRIM_HOR=' ||  to_char(trunc(qt_hora_p,'mi'),ds_mascara_p)) || ' ' || -- das #@NR_PRIM_HOR#@ as
							to_char(trunc(qt_hora_p,'mi') + (dividir_sem_round_md(nr_horas_intervalo_p , 24)),ds_mascara_p) || '; ',1,2000);
				qt_hora_p	:= trunc(qt_hora_p,'mi') + (dividir_sem_round_md(nr_horas_intervalo_p , 24));
			end if;

			end;
		END LOOP;
		end;
	end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_hora_etapa_md ( ie_horario_continuo_P text, ie_hemodialise_p text, nr_horarios_p bigint, nr_horas_intervalo_p bigint, ds_mascara_p text, ie_horario_solucao_p text, ie_etapa_esp_p text, qt_tempo_aplicacao_p bigint, qt_hora_p INOUT timestamp, ds_horario_p INOUT text ) FROM PUBLIC;

