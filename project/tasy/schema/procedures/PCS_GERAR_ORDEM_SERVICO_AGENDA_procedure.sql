-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pcs_gerar_ordem_servico_agenda ( nm_usuario_p text) AS $body$
DECLARE

 
	 
nr_seq_grupamento_w		bigint;
cd_responsavel_w		varchar(10);	
nr_seq_agenda_w			bigint;
nm_responsavel_w		varchar(15);
nr_ordem_Servico_w		bigint;
qt_existe_w				bigint;
ds_dano_w				varchar(4000);
ds_dano_breve_w			varchar(80);
nr_seq_regra_w			bigint;
nr_grupo_planej_w		bigint;
nr_grupo_trabalho_w 	bigint;
ie_estagio_padrao_w		varchar(15);
qt_dias_antecipacao_w	integer;
dt_inicio_w				timestamp;
dt_fim_w				timestamp;
qt_dias_entre_datas_w	integer;
dt_prevista_w			timestamp;
qt_min_prev_w			integer;
nr_seq_ativ_exec_w		bigint;
nr_seq_estagio_w		bigint;
ds_atividade_w			varchar(255);
cd_empresa_w			smallint;
cd_estabelecimento_w	smallint;
ie_feriado_w			varchar(1);
dt_util_posterior_w		timestamp;
dt_util_anterior_w		timestamp;
nr_seq_regional_w		bigint;
nr_seq_atividade_w		bigint;
ds_grupamento_w			varchar(255);
ds_regra_w				varchar(255);
nr_seq_lista_w			bigint;
nr_seq_localizacao_w		man_ordem_servico.nr_seq_localizacao%type;
nr_seq_equipamento_w		pcs_regra_ordem_servico.nr_seq_equipamento%type;

 
 
	 
C01 CURSOR FOR 
	SELECT	b.nr_seq_grupamento, 
			obter_usuario_pf(b.cd_responsavel), 
			b.nr_sequencia, 
			b.cd_responsavel, 
			b.nr_seq_regra, 
			b.dt_inicio, 
			b.dt_fim, 
			b.qt_minutos, 
			a.cd_empresa, 
			b.ie_feriado, 
			b.nr_seq_regional, 
			b.nr_seq_atividade, 
			b.cd_estabelecimento 
	from	pcs_regra_atividades a, 
			pcs_agenda_atividades b 
	where	a.nr_sequencia = b.nr_seq_regra 
	and		b.dt_inicio >= trunc(clock_timestamp()) 
	and		a.ie_situacao = 'A'	 
	and		b.ie_situacao = 'A' 
	and		coalesce(b.nr_ordem_servico::text, '') = '' 
	and 	(b.cd_responsavel IS NOT NULL AND b.cd_responsavel::text <> '') 
	and	Obter_dados_usuario_opcao(obter_usuario_pf(b.cd_responsavel),'T') = 'A';

BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_grupamento_w, 
	nm_responsavel_w, 
	nr_seq_agenda_w, 
	cd_responsavel_w, 
	nr_seq_regra_w, 
	dt_inicio_w, 
	dt_fim_w, 
	qt_min_prev_w, 
	cd_empresa_w, 
	ie_feriado_w, 
	nr_seq_regional_w, 
	nr_seq_atividade_w, 
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	select		ie_estagio_padrao, 
			coalesce(qt_dias_antecipacao,0), 
			substr(obter_descricao_padrao('PCS_ATIVIDADES', 'DS_ATIVIDADE', NR_SEQ_ATIVIDADE),1,255), 
			substr(obter_descricao_padrao('PCS_GRUPAMENTOS', 'DS_GRUPAMENTO', NR_SEQ_GRUPAMENTO),1,255), 
			ds_atividade, 
			CASE WHEN coalesce(nr_seq_grupamento::text, '') = '' THEN nr_seq_lista  ELSE pcs_obter_dados_grupamento(nr_seq_grupamento,'NL') END  
	into STRICT		ie_estagio_padrao_w, 
			qt_dias_antecipacao_w, --Serve para estipular um tempo de antecipação para criar as OS.  Se existr uma atividade para o dia 15 e for informado 5 no qt_dias_antecipacao, a OS será gerada no dia 10. 
			ds_atividade_w, 
			ds_grupamento_w, 
			ds_regra_w, 
			nr_seq_lista_w 
	from	pcs_regra_atividades 
	where	nr_sequencia = nr_seq_regra_w;		
	 
	 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	pcs_regra_ordem_servico 
	where	cd_estab_regra = cd_estabelecimento_w;
	 
	if (qt_existe_w > 0) then 
		select	(pcs_obter_regra_ordem_servico('NE',cd_estabelecimento_w))::numeric , 
			(pcs_obter_regra_ordem_servico('NL',cd_estabelecimento_w))::numeric , 
			(pcs_obter_regra_ordem_servico('GT',cd_estabelecimento_w))::numeric , 
			(pcs_obter_regra_ordem_servico('GP',cd_estabelecimento_w))::numeric , 
			(pcs_obter_regra_ordem_servico('NT',cd_estabelecimento_w))::numeric  
		into STRICT	nr_seq_equipamento_w, 
			nr_seq_localizacao_w, 
			nr_grupo_trabalho_w, 
			nr_grupo_planej_w, 
			nr_seq_estagio_w 
		;
	else 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(350257);
	end if;		
 
	--ds_dano_w := substr('PCS - ' || ds_atividade_w || chr(10) || chr(13) || ' Regra = ' || nr_seq_regra_w || ' - ' || ds_regra_w,1,4000); 
	ds_dano_w := substr('PCS - ' || ds_atividade_w || chr(10) || chr(13) || ' ' || wheb_mensagem_pck.get_texto(310345) || ' = ' || nr_seq_regra_w || ' - ' || ds_regra_w,1,4000);
	 
	 
	ds_dano_breve_w := substr('PCS - ' || ds_atividade_w || ' - ' || ds_grupamento_w,1,80);
 
	nr_ordem_Servico_w := null;		
	 
	if ((trunc(dt_inicio_w) - qt_dias_antecipacao_w) = trunc(clock_timestamp())) then		 
	 
		select	nextval('man_ordem_servico_seq') 
		into STRICT	nr_ordem_Servico_w 
		;				
				 
		if (Obter_Se_Dia_Util(dt_inicio_w,cd_estabelecimento_w) = 'N') then 
					 
			if (ie_feriado_w = 'A') then --ie_feriado_w = Caso o dia não for útil, está variável irá verifica se posterga ou antece o dia de criação da OS			 
				select	obter_dia_util_anterior(cd_estabelecimento_w,dt_inicio_w) 
				into STRICT 	dt_util_anterior_w 
				;				
				 
				dt_inicio_w := dt_util_anterior_w;
				 
			elsif (ie_feriado_w = 'P') then			 
				select	obter_proximo_dia_util(cd_estabelecimento_w,dt_inicio_w) 
				into STRICT 	dt_util_posterior_w 
				;							
				 
				dt_inicio_w := dt_util_posterior_w;				
				 
			end if;
 
		end if;			
		 
		dt_fim_w := dt_inicio_w + qt_min_prev_w/1440;
 
			 
		insert	into man_ordem_servico( 
				nr_sequencia, 
				nr_seq_localizacao, 
				nr_seq_equipamento, 
				cd_pessoa_solicitante, 
				dt_ordem_servico, 
				ie_prioridade, 
				ie_parado, 
				ds_dano_breve, 
				dt_atualizacao, 
				nm_usuario, 
				dt_inicio_desejado, 
				dt_conclusao_desejada, 
				ds_dano, 
				dt_inicio_previsto, 
				dt_fim_previsto, 
				dt_inicio_real, 
				dt_fim_real, 
				ie_tipo_ordem, 
				ie_status_ordem, 
				nr_grupo_planej, 
				nr_grupo_trabalho, 
				nr_seq_tipo_solucao, 
				ds_solucao, 
				nm_usuario_exec, 
				qt_contador, 
				nr_seq_planej, 
				nr_seq_tipo_contador, 
				nr_seq_estagio, 
				cd_projeto, 
				nr_seq_etapa_proj, 
				dt_reabertura, 
				cd_funcao, 
				nm_tabela, 
				ie_classificacao, 
				nr_seq_origem, 
				nr_seq_projeto, 
				ie_grau_satisfacao, 
				nr_seq_indicador, 
				nr_seq_causa_dano, 
				ie_forma_receb, 
				nr_seq_cliente, 
				nr_seq_grupo_des, 
				nr_seq_grupo_sup, 
				nr_seq_superior, 
				ie_eficacia, 
				dt_prev_eficacia, 
				cd_pf_eficacia, 
				nr_seq_nao_conform, 
				nr_seq_complex, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				ie_obriga_news, 
				nr_seq_meta_pe, 
				nr_seq_classif, 
				nr_seq_nivel_valor, 
				nm_usuario_lib_news, 
				dt_libera_news, 
				dt_envio_wheb, 
				ds_contato_solicitante, 
				ie_prioridade_desen, 
				ie_prioridade_sup, 
				ie_origem_os, 
				nr_seq_regional, 
				nr_seq_atividade, 
				nr_Seq_grupamento, 
				ie_origem_pcs, 
				nr_seq_regra_ativ, 
				nr_seq_lista) 
		values ( nr_ordem_Servico_w,				-- nr_ordem 
				nr_seq_localizacao_w,							-- nr_seq_localizacao, 
				nr_seq_equipamento_w,							-- nr_seq_equipamento, 
				cd_responsavel_w,				-- cd_pessoa_solicitante, 
				clock_timestamp(),		-- dt_ordem_servico, 
				'M',								-- ie_prioridade, 
				'N',							-- ie_parado, 
				ds_dano_breve_w,	-- ds_dano_breve, 
				clock_timestamp(),						-- dt_atualizacao, 
				nm_usuario_p,					-- nm_usuario, 
				coalesce(dt_inicio_w,clock_timestamp()),						-- dt_inicio_desejado, 
				dt_fim_w,					-- dt_conclusao_desejada, 
				ds_dano_w,						-- ds_dano, 
				coalesce(dt_inicio_w,clock_timestamp()),		-- dt_inicio_previsto, 
				dt_fim_w,							-- dt_fim_previsto, 
				null,							-- dt_inicio_real, 
				null,							-- dt_fim_real, 
				8,								-- ie_tipo_ordem, 
				CASE WHEN ie_estagio_padrao_w='A' THEN 1 WHEN ie_estagio_padrao_w='E' THEN 2 WHEN ie_estagio_padrao_w='R' THEN 3 END , -- ie_status_ordem, 
				nr_grupo_planej_w,				-- nr_grupo_planej, 
				nr_grupo_trabalho_w,			-- nr_grupo_trabalho, 
				null,							-- nr_seq_tipo_solucao, 
				null,							-- ds_solucao, 
				nm_responsavel_w, 				-- nm_usuario_exec, 
				null,							-- qt_contador, 
				null,							-- nr_seq_planej, 
				null,							-- nr_seq_tipo_contador, 
				nr_seq_estagio_w,				-- nr_seq_estagio, --Peguei a maior sequencia da tabela MAN_ESTAGIO_PROCESSO, pois é um campo obrigatório, por isso fiz desta forma paliativamente. 
				null,							-- cd_projeto, 
				null,							-- nr_seq_etapa_proj, 
				null,							-- dt_reabertura, 
				982,							-- cd_funcao, 
				null,							-- nm_tabela, 
				'S',							-- ie_classificacao, 
				null,							-- nr_seq_origem, 
				null,							-- nr_seq_projeto, 
				null,							-- ie_grau_satisfacao, 
				null,							-- nr_seq_indicador, 
				null,							-- nr_seq_causa_dano, 
				null,							-- ie_forma_receb, 
				null,							-- nr_seq_cliente, 
				null,							-- nr_seq_grupo_des, 
				null,							-- nr_seq_grupo_sup, 
				null,							-- nr_seq_superior, 
				null,							-- ie_eficacia, 
				null,							-- dt_prev_eficacia, 
				null,							-- cd_pf_eficacia, 
				null,							-- nr_seq_nao_conform, 
				null,							-- nr_seq_complex, 
				null,							-- dt_atualizacao_nrec, 
				nm_usuario_p,					-- nm_usuario_nrec, 
				null,							-- ie_obriga_news, 
				null,							-- nr_seq_meta_pe, 
				null,							-- nr_seq_classif, 
				null,							-- nr_seq_nivel_valor, 
				null,							-- nm_usuario_lib_news, 
				null,							-- dt_libera_news, 
				null,							-- dt_envio_wheb, 
				null,							-- ds_contato_solicitante, 
				null,							-- ie_prioridade_desen, 
				null,							-- ie_prioridade_sup 
				'4',							--ie_origem_os 
				nr_seq_regional_w,				--nr_seq_regional, 
				nr_seq_atividade_w,				--nr_seq_atividade 
				nr_seq_grupamento_w,			--nr_seq_grupamento 
				'C', 
				nr_seq_regra_w, 
				nr_seq_lista_w);							
				 
			update	pcs_agenda_atividades 
			set		nr_ordem_servico = nr_ordem_Servico_w			 
			where 	nr_seq_regra = nr_seq_regra_w 
			and		nr_sequencia = nr_seq_agenda_w;				
				 
			qt_existe_w := 0;
		 
			select 	count(*) 
			into STRICT	qt_existe_w 
			from	man_ordem_servico_exec 
			where	nr_seq_ordem = nr_ordem_Servico_w 
			and		nm_usuario_exec = nm_responsavel_w;
 
		if (qt_existe_w = 0) then 
			insert into man_ordem_servico_exec( 
					nr_sequencia, 
					nr_seq_ordem, 
					dt_atualizacao, 
					nm_usuario, 
					nm_usuario_exec) 
				values (	nextval('man_ordem_servico_exec_seq'), 
					nr_ordem_Servico_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					nm_responsavel_w);
		end if;
 
		select	max(nr_sequencia) 
		into STRICT 	nr_seq_ativ_exec_w 
		from	des_ativ_exec;
 
		select	round(dt_fim_w - dt_inicio_w) 
		into STRICT	qt_dias_entre_datas_w 
		;
 
		for i in 0..qt_dias_entre_datas_w loop 
			begin 
 
			select	dt_inicio_w + i 
			into STRICT	dt_prevista_w 
			;
			 
			if (Obter_Se_Dia_Util(dt_prevista_w,cd_estabelecimento_w) = 'N') then 
						 
				if (ie_feriado_w = 'A') then --ie_feriado_w = Caso o dia não for útil, está variável irá verifica se posterga ou antece o dia de criação da OS			 
					select	obter_dia_util_anterior(cd_estabelecimento_w,(dt_prevista_w)) 
					into STRICT 	dt_util_anterior_w 
					;				
					 
					dt_prevista_w := dt_util_anterior_w;
					 
				elsif (ie_feriado_w = 'P') then			 
					select	obter_proximo_dia_util(cd_estabelecimento_w,(dt_prevista_w)) 
					into STRICT 	dt_util_posterior_w 
					;							
					 
					dt_prevista_w := dt_util_posterior_w;				
					 
				end if;
	 
			end if;					
											 
			insert into man_ordem_ativ_prev( 
				nr_sequencia, 
				nr_seq_ordem_serv, 
				dt_atualizacao, 
				nm_usuario, 
				ds_atividade, 
				dt_prevista, 
				qt_min_prev, 
				nm_usuario_prev, 
				nr_seq_funcao, 
				nr_seq_ativ_exec, 
				ie_prioridade_desen, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec) 
			values (	nextval('man_ordem_ativ_prev_seq'),	--nr_sequencia 
				nr_ordem_Servico_w, 					--nr_seq_ordem_serv 
				clock_timestamp(),								--dt_atualizacao 
				nm_usuario_p,							--nm_usuario 
				ds_atividade_w,							--ds_atividade 
				dt_prevista_w, 							--dt_prevista 
				qt_min_prev_w,							--qt_min_prev 
				nm_responsavel_w,						--nm_usuario_prev 
				null,									--nr_seq_funcao 
				nr_seq_ativ_exec_w,						--nr_seq_ativ_exec  --É o max da tabela (des_ativ_exec). É obrigatório, por isso foi feito paliativamente desta forma. 
				10,										--ie_prioridade_desen 
				nm_usuario_p,							--nm_usuario_nrec 
				clock_timestamp());								--dt_atualizacao_nrec 
				
			end;
		end loop;	
							 
	end if;
	end;
	end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pcs_gerar_ordem_servico_agenda ( nm_usuario_p text) FROM PUBLIC;

