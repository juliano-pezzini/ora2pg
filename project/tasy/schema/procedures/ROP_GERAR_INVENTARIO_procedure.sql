-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rop_gerar_inventario ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_estabelecimento_w		smallint;
cd_local_estoque_w		smallint;
cd_material_w			integer;
qt_saldo_estoque_w		double precision;
qt_inventario_w			double precision;
qt_estoque_maximo_w		double precision;
ie_requisicao_reposicao_w		varchar(1);
cd_local_atende_w			integer;
qt_diferenca_w			double precision;
dt_mesano_referencia_w		timestamp;
cd_unidade_medida_estoque_w	varchar(30);
cd_material_estoque_w		integer;
ie_tipo_entrada_w			varchar(1);
cd_operacao_estoque_w		smallint;
nr_movimento_w			bigint;
cd_pessoa_resp_w			varchar(10);
cd_operacao_transf_setor_w		smallint;
ie_gerou_item_w			varchar(1);
nr_requisicao_w			bigint;
nr_sequencia_w			integer;
qt_requisicao_w			double precision;


c01 CURSOR FOR
SELECT	rop_obter_material_roupa(b.nr_seq_roupa),
	b.qt_saldo_estoque,
	b.qt_inventario,
	b.qt_requisicao,
	b.qt_estoque_maximo
from	rop_inventario a,
	rop_inv_roupa b
where	a.nr_sequencia	= b.nr_seq_inv_roupa
and	a.nr_sequencia	= nr_sequencia_p;

BEGIN

dt_mesano_referencia_w		:= trunc(clock_timestamp(),'mm');
nr_requisicao_w			:= 0;
nr_sequencia_w			:= 0;
ie_gerou_item_w			:= 'N';

select	cd_estabelecimento,
	cd_local_estoque,
	ie_requisicao_reposicao,
	cd_local_atende,
	cd_pessoa_resp
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w,
	ie_requisicao_reposicao_w,
	cd_local_atende_w,
	cd_pessoa_resp_w
from	rop_inventario
where	nr_sequencia	= nr_sequencia_p;



if (ie_requisicao_reposicao_w = 'S') then
	begin

	select	nextval('requisicao_seq')
	into STRICT	nr_requisicao_w
	;

	select	coalesce(max(cd_operacao_transf_setor), 0)
	into STRICT 	cd_operacao_transf_setor_w
	from 	parametro_estoque
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (cd_operacao_transf_setor_w = 0) then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(372034); /*Não existe nenhuma operação de estoque padrão para realizar essa operação. Verifique nos parâmetros de estoque, no campo "Oper. Trans. Setor".*/
	end if;


	insert into requisicao_material(
		nr_requisicao,
		nr_seq_inv_roupa,
		cd_estabelecimento,
		cd_local_estoque,
		dt_solicitacao_requisicao,
		dt_atualizacao,
		nm_usuario,
		cd_operacao_estoque,
		cd_pessoa_requisitante,
		cd_estabelecimento_destino,
		cd_local_estoque_destino,
		ie_urgente,
		ie_geracao)
	values (	nr_requisicao_w,
		nr_sequencia_p,
		cd_estabelecimento_w,
		cd_local_atende_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
	      	cd_operacao_transf_setor_w,
		cd_pessoa_resp_w,
		cd_estabelecimento_w,
		cd_local_estoque_w,
		'N',
		'A');
	end;
end if;


/*Gera o inventario das roupas*/

open c01;
loop
fetch c01 into
	cd_material_w,
	qt_saldo_estoque_w,
	qt_inventario_w,
	qt_requisicao_w,
	qt_estoque_maximo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
		cd_material_estoque
	into STRICT	cd_unidade_medida_estoque_w,
		cd_material_estoque_w
	from	material
	where	cd_material = cd_material_w;

	if (ie_requisicao_reposicao_w = 'S') and (nr_requisicao_w > 0) and (coalesce(qt_estoque_maximo_w,0) > 0) then
		begin
		nr_sequencia_w	:= nr_sequencia_w + 1;


	      	insert into item_requisicao_material(
			nr_requisicao,
			nr_sequencia,
			cd_estabelecimento,
			cd_material,
			qt_material_requisitada,
			qt_material_atendida,
			vl_material,
			dt_atualizacao,
			nm_usuario,
			cd_unidade_medida,
			qt_estoque,
			cd_unidade_medida_estoque,
			ie_acao,
			cd_motivo_baixa)
      		values (	nr_requisicao_w,
			nr_sequencia_w,
			cd_estabelecimento_w,
			cd_material_w,
			qt_requisicao_w,
			0,
			0,
			clock_timestamp(),
			nm_usuario_p,
			cd_unidade_medida_estoque_w,
			qt_requisicao_w,
			cd_unidade_medida_estoque_w,
			'1',
			0);

		ie_gerou_item_w			:= 'S';
		end;
	end if;





	qt_diferenca_w	:= qt_inventario_w - qt_saldo_estoque_w;

	ie_tipo_entrada_w	:= 'E';
	if (qt_diferenca_w < 0) then
		begin
        	qt_diferenca_w	:= (qt_diferenca_w * -1);
         	ie_tipo_entrada_w	:= 'S';
		end;
	end if;


	if (qt_diferenca_w = 0) then
		CALL sup_atualizar_saldo_invent(
				cd_estabelecimento_w,
				dt_mesano_referencia_w,
				cd_local_estoque_w,
				cd_material_w,
				1,
				1,
				qt_diferenca_w,
				nm_usuario_p);

	end if;


	select	min(cd_operacao_estoque)
	into STRICT	cd_operacao_estoque_w
	from	operacao_estoque
	where	ie_tipo_requisicao	= 5
	and	ie_entrada_saida	= ie_tipo_entrada_w
	and	ie_consignado	= '0'
	and	ie_situacao	= 'A';

	if (qt_diferenca_w > 0) then
		begin

		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_w
		;

		insert into movimento_estoque(
			nr_movimento_estoque,
			cd_estabelecimento,
			cd_local_estoque,
			dt_movimento_estoque,
			cd_operacao_estoque,
			cd_acao,
			cd_material,
			dt_mesano_referencia,
			qt_movimento,
			dt_atualizacao,
			nm_usuario,
			ie_origem_documento,
			ie_origem_proced,
			nr_documento,
			cd_unidade_medida_estoque,
			qt_estoque,
			dt_processo,
			cd_unidade_med_mov,
			cd_material_estoque,
			qt_inventario,
			ie_movto_consignado,
			ds_observacao)
		values ( nr_movimento_w,
			cd_estabelecimento_w,
			cd_local_estoque_w,
			clock_timestamp(),
			cd_operacao_estoque_w,
			1,
			cd_material_w,
			dt_mesano_referencia_w,
			qt_diferenca_w,
			clock_timestamp(),
			nm_usuario_p,
			5,
			1,
			nr_sequencia_p,
			cd_unidade_medida_estoque_w,
			qt_diferenca_w,
			null,
			cd_unidade_medida_estoque_w,
			cd_material_estoque_w,
			qt_inventario_w,
			'N',
			wheb_mensagem_pck.get_texto(306828) /*'Inventário - Rouparia'*/
);
		end;
	end if;

	end;
end loop;
close c01;


if (ie_requisicao_reposicao_w = 'S') and (nr_requisicao_w > 0) and (ie_gerou_item_w = 'N') then
	delete
	from	requisicao_material
	where	nr_requisicao	= nr_requisicao_w;
end if;


update	rop_inventario
set	dt_geracao		= clock_timestamp(),
	nm_usuario_geracao	= nm_usuario_p
where	nr_sequencia		= nr_sequencia_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rop_gerar_inventario ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

