-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_lote_fornec_validade ( cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE


cd_material_estoque_w	integer;
cd_local_estoque_w		smallint;
cd_material_w			integer;
nr_seq_lote_w			bigint;

ie_estoque_lote_w		varchar(1);
qt_estoque_w			double precision;
dt_mesano_referencia_w	timestamp;
dt_final_w				timestamp;
ie_consignado_w			varchar(1);

C01 CURSOR FOR
	SELECT	cd_material,
		cd_local_estoque
	from	saldo_estoque
	where	cd_estabelecimento = cd_estabelecimento_p
	and	dt_mesano_referencia = dt_mesano_referencia_w
	
union

	SELECT	cd_material,
		cd_local_estoque
	from	fornecedor_mat_consignado
	where	cd_estabelecimento = cd_estabelecimento_p
	and	dt_mesano_referencia = dt_mesano_referencia_w;

C02 CURSOR FOR
	SELECT	a.nr_seq_lote,
		a.qt_estoque
	from	saldo_estoque_lote a,
		material_lote_fornec b
	where	nr_seq_lote = b.nr_sequencia
	and	b.dt_validade between coalesce(dt_inicial_p, b.dt_validade) and coalesce(dt_final_w, b.dt_validade)
	and	a.cd_material = cd_material_estoque_w
	and	a.cd_local_estoque = cd_local_estoque_w
	and	a.dt_mesano_referencia = dt_mesano_referencia_w;

C04 CURSOR FOR
	SELECT	a.nr_seq_lote,
		a.qt_estoque
	from	fornecedor_mat_consig_lote a,
		material_lote_fornec b
	where	nr_seq_lote = b.nr_sequencia
	and	b.dt_validade between coalesce(dt_inicial_p, b.dt_validade) and coalesce(dt_final_w, b.dt_validade)
	and	a.cd_material = cd_material_estoque_w
	and	a.cd_local_estoque = cd_local_estoque_w
	and	a.dt_mesano_referencia = dt_mesano_referencia_w;

C03 CURSOR FOR
	SELECT	a.cd_material,
		a.nr_sequencia
	from	material_lote_fornec a,
		material b
	where	a.cd_material = b.cd_material
	and	b.cd_material_estoque = cd_material_estoque_w
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.dt_validade between coalesce(dt_inicial_p, a.dt_validade) and coalesce(dt_final_w, a.dt_validade);


BEGIN
dt_mesano_referencia_w	:= trunc(clock_timestamp(),'mm');

if (dt_final_p IS NOT NULL AND dt_final_p::text <> '') then
	dt_final_w := (trunc(dt_final_p,'dd') + 86399/86400);
end if;

delete	FROM w_razao_estoque
where	nm_usuario = nm_usuario_p;

open C01;
loop
fetch C01 into
	cd_material_estoque_w,
	cd_local_estoque_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	coalesce(max(ie_estoque_lote),'N')
	into STRICT	ie_estoque_lote_w
	from	material_estab
	where	cd_material = cd_material_estoque_w
	and	cd_estabelecimento = cd_estabelecimento_p;

	if (ie_estoque_lote_w = 'S') then
		begin

		select ie_consignado
		into STRICT	ie_consignado_w
		from material
		where cd_material = cd_material_estoque_w;

		if (ie_consignado_w in (0,2)) then

		open C02;
		loop
		fetch C02 into
			nr_seq_lote_w,
			qt_estoque_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			insert into w_razao_estoque(
				cd_estabelecimento,
				cd_local_estoque,
				cd_material,
				dt_atualizacao,
				dt_mesano_referencia,
				ie_tipo_informacao,
				nm_usuario,
				nr_sequencia,
				nr_seq_lote,
				qt_estoque)
			values (cd_estabelecimento_p,
				cd_local_estoque_w,
				cd_material_estoque_w,
				clock_timestamp(),
				dt_mesano_referencia_w,
				'0',
				nm_usuario_p,
				nextval('w_razao_estoque_seq'),
				nr_seq_lote_w,
				qt_estoque_w);
			end;
		end loop;
		close C02;

		end if;

		if (ie_consignado_w in (1,2)) then
		open C04;
		loop
		fetch C04 into
			nr_seq_lote_w,
			qt_estoque_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			insert into w_razao_estoque(
				cd_estabelecimento,
				cd_local_estoque,
				cd_material,
				dt_atualizacao,
				dt_mesano_referencia,
				ie_tipo_informacao,
				nm_usuario,
				nr_sequencia,
				nr_seq_lote,
				qt_estoque)
			values (cd_estabelecimento_p,
				cd_local_estoque_w,
				cd_material_estoque_w,
				clock_timestamp(),
				dt_mesano_referencia_w,
				'0',
				nm_usuario_p,
				nextval('w_razao_estoque_seq'),
				nr_seq_lote_w,
				qt_estoque_w);
			end;
		end loop;
		close C04;

		end if;

		end;
	else
		begin
		open C03;
		loop
		fetch C03 into
			cd_material_w,
			nr_seq_lote_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			select	coalesce(sum(CASE WHEN 	c.ie_entrada_saida='E' THEN 	CASE WHEN b.cd_acao=1 THEN  b.qt_estoque  ELSE b.qt_estoque * -1 END   ELSE CASE WHEN b.cd_acao=1 THEN  b.qt_estoque * -1  ELSE b.qt_estoque END  END ),0)
			into STRICT	qt_estoque_w
			from	material_lote_fornec a,
					movimento_estoque b,
					operacao_estoque c
			where	a.nr_sequencia 			= b.nr_seq_lote_fornec
			and		b.cd_operacao_estoque 	= c.cd_operacao_estoque
			and		a.cd_estabelecimento 	= b.cd_estabelecimento
			and (coalesce(cd_local_estoque_w,0) 	= 0 or b.cd_local_estoque = cd_local_estoque_w)
			and		b.dt_mesano_referencia 	<= dt_mesano_referencia_w
			and		a.nr_sequencia 			= nr_seq_lote_w
			and		(b.dt_processo IS NOT NULL AND b.dt_processo::text <> '')
			and		a.cd_estabelecimento 	= cd_estabelecimento_p;

			insert into w_razao_estoque(
				cd_estabelecimento,
				cd_local_estoque,
				cd_material,
				dt_atualizacao,
				dt_mesano_referencia,
				ie_tipo_informacao,
				nm_usuario,
				nr_sequencia,
				nr_seq_lote,
				qt_estoque)
			values (cd_estabelecimento_p,
				cd_local_estoque_w,
				cd_material_w,
				clock_timestamp(),
				dt_mesano_referencia_w,
				'0',
				nm_usuario_p,
				nextval('w_razao_estoque_seq'),
				nr_seq_lote_w,
				qt_estoque_w);
			end;
		end loop;
		close C03;
		end;
	end if;
	end;
end loop;
close C01;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_lote_fornec_validade ( cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

