-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_barras_relatorio ( nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_dicom_um_w		varchar(20);			
ds_proc_um_w			varchar(255);
nr_seq_dicom_dois_w		varchar(20);			
ds_proc_dois_w			varchar(255);
nr_seq_dicom_tres_w		varchar(20);			
ds_proc_tres_w			varchar(255);
qt_registro_w			integer := 0;

nr_seq_dicom_w		varchar(20);
ds_proced_w		varchar(255);
			
 
	 
c01 CURSOR FOR 
SELECT nr_acesso_dicom, 
	ds_procedimento 
	from ( 
SELECT B.NR_ACESSO_DICOM, 
	substr(OBTER_DESC_PROC_INTERNO(B.nr_seq_proc_interno),1,255) DS_PROCEDIMENTO 
FROM atendimento_paciente d, prescr_medica c, procedimento a, prescr_procedimento b
LEFT OUTER JOIN agenda_paciente e ON (b.nr_seq_agenda = e.nr_sequencia)
LEFT OUTER JOIN agenda f ON (E.CD_AGENDA = F.CD_AGENDA)
WHERE B.NR_PRESCRICAO     = nr_prescricao_p AND A.CD_PROCEDIMENTO  	= B.CD_PROCEDIMENTO AND A.IE_ORIGEM_PROCED 	= B.IE_ORIGEM_PROCED AND B.NR_PRESCRICAO		= C.NR_PRESCRICAO and B.IE_SUSPENSO		<> 'S' and coalesce(B.DT_CANCELAMENTO::text, '') = '' AND C.NR_ATENDIMENTO	= D.NR_ATENDIMENTO   
union all
 
select '', 
	'' 
from	tabela_visao LIMIT 9) alias3 LIMIT 9;


BEGIN 
 
delete FROM W_RELATORIO_BARRA 
where nm_usuario = nm_usuario_p;
 
commit;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_dicom_w, 
	ds_proced_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	 
	 
	if (qt_registro_w = 0) then 
		 
		nr_seq_dicom_um_w		:=	nr_seq_dicom_w;
		ds_proc_um_w			:=	ds_proced_w;
		 
	end if;
	 
	 
		 
	if (qt_registro_w = 1) then 
		 
		nr_seq_dicom_dois_w		:=	nr_seq_dicom_w;
		ds_proc_dois_w			:=	ds_proced_w;
		 
	 
	end if;
	 
		 
	if (qt_registro_w = 2) then 
		 
		nr_seq_dicom_tres_w		:=	nr_seq_dicom_w;
		ds_proc_tres_w			:=	ds_proced_w;
		 
	 
	end if;
	qt_registro_w			:= 	qt_registro_w + 1;
		 
	if (qt_registro_w = 3) then 
 
		if (nr_seq_dicom_um_w > 0) then 
		 
		insert into w_relatorio_barra(	 
			nm_usuario, 
			nr_sequencia, 
			dt_atualizacao, 
			nr_barras_um, 
			ds_observacao_um, 
			nr_barras_dois, 
			ds_observacao_dois, 
			nr_barras_tres, 
			ds_observacao_tres)	 
			values (	 
			nm_usuario_p, 
			nextval('w_relatorio_barra_seq'), 
			clock_timestamp(), 
			nr_seq_dicom_um_w, 
			ds_proc_um_w, 
			nr_seq_dicom_dois_w, 
			ds_proc_dois_w, 
			nr_seq_dicom_tres_w, 
			ds_proc_tres_w);
 
		commit;
 
		end if;
	 
		nr_seq_dicom_um_w		:=	'';
		ds_proc_um_w			:=	'';
		nr_seq_dicom_dois_w		:=	'';
		ds_proc_dois_w			:=	'';
		nr_seq_dicom_tres_w		:=	'';
		ds_proc_tres_w			:=	'';
		qt_registro_w			:= 	0;
			 
	 
	end if;
	 
	 
	end;
end loop;
close C01;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_barras_relatorio ( nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

