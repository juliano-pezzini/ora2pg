-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_insere_aberrometria ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, nr_seq_consulta_form_ant_p bigint, vListaAberrometria strRecTypeFormOft) AS $body$
DECLARE


nr_sequencia_w						oft_aberrometria.nr_sequencia%type;
ds_observacao_w					oft_aberrometria.ds_observacao%type;
dt_exame_w							oft_aberrometria.dt_exame%type;
cd_profissional_w					oft_aberrometria.cd_profissional%type;	
nm_usuario_w						usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
ie_registrado_w					varchar(1) := 'N';
ds_erro_w							varchar(4000);
											
BEGIN
begin

if (coalesce(nr_seq_consulta_p,0) > 0) and (vListaAberrometria.count > 0) then
	for i in 1..vListaAberrometria.count loop
		begin
		if (vListaAberrometria[i](.ds_valor IS NOT NULL AND .ds_valor::text <> '')) or (vListaAberrometria[i](.nr_valor IS NOT NULL AND .nr_valor::text <> '')) then
			case upper(vListaAberrometria[i].nm_campo)
				when 'CD_PROFISSIONAL' then
					cd_profissional_w						:= vListaAberrometria[i].ds_valor;
				when 'DT_EXAME' then
					dt_exame_w 								:= pkg_date_utils.get_DateTime(vListaAberrometria[i].ds_valor);
				when 'DS_OBSERVACAO' then
					ds_observacao_w 						:= vListaAberrometria[i].ds_valor;					
					ie_registrado_w						:= 'S';
				else
					null;	
			end case;	
		end if;	
	end;
	end loop;
	
	select	max(nr_sequencia)
	into STRICT		nr_sequencia_w
	from		oft_aberrometria
	where		nr_seq_consulta_form = nr_seq_consulta_form_p
	and		nr_seq_consulta		= nr_seq_consulta_p
	and		coalesce(dt_liberacao::text, '') = ''
	and		nm_usuario				= nm_usuario_w;
	
	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		update	oft_aberrometria
		set		dt_atualizacao		=	clock_timestamp(),
					nm_usuario			=	nm_usuario_w,
					cd_profissional	= coalesce(cd_profissional_w,cd_profissional),	
					dt_exame				=	coalesce(dt_exame_w,dt_exame),
					ds_observacao		=	ds_observacao_w
		where		nr_sequencia		=	nr_sequencia_w;
		CALL wheb_usuario_pck.set_ie_commit('S');	
	else
		if (ie_registrado_w = 'S') then
			CALL wheb_usuario_pck.set_ie_commit('S');
			select	nextval('oft_aberrometria_seq')
			into STRICT		nr_sequencia_w	
			;

			insert	into oft_aberrometria(		nr_sequencia,
																dt_atualizacao, 
																nm_usuario, 
																dt_atualizacao_nrec, 
																nm_usuario_nrec, 
																cd_profissional, 
																dt_exame,
																nr_seq_consulta,
																ds_observacao,
                                                ie_situacao,
																nr_seq_consulta_form)
			values (		nr_sequencia_w, 
																clock_timestamp(), 
																nm_usuario_w, 
																clock_timestamp(), 
																nm_usuario_w, 
																coalesce(cd_profissional_w,obter_pf_usuario(nm_usuario_w,'C')), 
																coalesce(dt_exame_w,clock_timestamp()), 
																nr_seq_consulta_p,
																ds_observacao_w,
                                                'A',
																nr_seq_consulta_form_p);
																
			if (coalesce(nr_seq_consulta_form_ant_p,0) > 0) then
				insert	into oft_consulta_imagem(	nr_sequencia,
																dt_atualizacao, 
																nm_usuario, 
																dt_atualizacao_nrec, 
																nm_usuario_nrec, 
																ds_titulo, 
																ds_arquivo, 
																ds_arquivo_backup, 
																nr_seq_aberrometria)
																SELECT	nextval('oft_consulta_imagem_seq'),
																			clock_timestamp(), 
																			nm_usuario_w, 
																			clock_timestamp(), 
																			nm_usuario_w, 
																			ds_titulo, 
																			ds_arquivo, 
																			ds_arquivo_backup, 
																			nr_sequencia_w
																from		oft_consulta_imagem a,
																			oft_aberrometria b
																where		a.nr_seq_aberrometria 	   = 	b.nr_sequencia
																and		b.nr_seq_consulta_form		= 	nr_seq_consulta_form_ant_p
																and		b.nr_seq_consulta				=	nr_seq_consulta_p;
																
				insert	into oft_imagem_exame(	nr_sequencia,
																dt_atualizacao, 
																nm_usuario, 
																dt_atualizacao_nrec, 
																nm_usuario_nrec, 
																ds_titulo, 
																ds_arquivo, 
																nr_seq_consulta, 
																ie_lado, 
																nr_seq_aberrometria, 
																ie_situacao, 
																cd_profissional)
													SELECT	nextval('oft_imagem_exame_seq'),
																clock_timestamp(), 
																nm_usuario_w, 
																clock_timestamp(), 
																nm_usuario_w, 
																ds_titulo, 
																ds_arquivo, 
																nr_seq_consulta_p, 
																ie_lado, 
																nr_sequencia_w, 
																'A', 
																coalesce(cd_profissional_w,obter_pf_usuario(nm_usuario_w,'C'))
													from		oft_imagem_exame a,
																oft_aberrometria b
													where		a.nr_seq_aberrometria 	= 	b.nr_sequencia
													and		b.nr_seq_consulta_form	= 	nr_seq_consulta_form_ant_p
													and		b.nr_seq_consulta			=	nr_seq_consulta_p;																
			end if;																
		end if;														
	end if;														
end if;	

exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);
	update	OFT_CONSULTA_FORMULARIO
	set		ds_stack			=	substr(dbms_utility.format_call_stack||ds_erro_w,1,4000)
	where		nr_sequencia	= 	nr_seq_consulta_form_p;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_insere_aberrometria ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, nr_seq_consulta_form_ant_p bigint, vListaAberrometria strRecTypeFormOft) FROM PUBLIC;

