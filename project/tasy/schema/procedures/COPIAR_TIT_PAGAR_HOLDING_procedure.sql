-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_tit_pagar_holding ( nr_sequencia_p bigint, ie_operacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_empresa_w  grupo_emp_estrutura.cd_empresa%type;
cd_estab_destino_w  estabelecimento.cd_estabelecimento%type	:= 0;
classe_titulo_pagar_w  classe_titulo_pagar%rowtype;

c01 CURSOR FOR
	SELECT  g.cd_empresa, e.cd_estabelecimento
  	from  grupo_emp_estrutura g, estabelecimento e
  	where  g.cd_empresa = e.cd_empresa
  	and  g.nr_seq_grupo = holding_pck.get_grupo_emp_usuario_vigente(cd_empresa_w)
  	and  g.cd_empresa <> cd_empresa_w
  	and not exists (
		  SELECT 1
		  from  classe_titulo_pagar x
		  where x.cd_empresa  = g.cd_empresa
		  and x.nr_sequencia = nr_sequencia_p)
  	order by g.cd_empresa;
c01_w    c01%rowtype;

c02 CURSOR FOR
  SELECT t.nr_sequencia,
         t.cd_empresa,
         t.cd_estabelecimento
  from   classe_titulo_pagar t
  where  t.nr_sequencia_ref = nr_sequencia_p;
c02_w    c02%rowtype;


BEGIN

select  t.*
into STRICT  classe_titulo_pagar_w
from  classe_titulo_pagar t
where  nr_sequencia = nr_sequencia_p;

cd_empresa_w  :=  obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento);

if (ie_operacao_p = 1) then
	open c01;
  	loop
  		fetch c01 into c01_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
    	if (coalesce(classe_titulo_pagar_w.cd_estabelecimento, 0) <> 0) then
    		cd_estab_destino_w := c01_w.cd_estabelecimento;
    	end if;
    	CALL inserir_copia_tit_pagar(nr_sequencia_p,
                                c01_w.cd_empresa,
                                cd_estab_destino_w,
                                wheb_usuario_pck.get_cd_estabelecimento,
                                nm_usuario_p);
  	end loop;
  	close c01;
else
    open c02;
    loop
    fetch c02 into
      c02_w;
    EXIT WHEN NOT FOUND; /* apply on c02 */
      update classe_titulo_pagar ctp
      set	ctp.dt_atualizacao_nrec     = classe_titulo_pagar_w.dt_atualizacao_nrec,
            ctp.nm_usuario_nrec         = classe_titulo_pagar_w.nm_usuario_nrec,
            ctp.ds_classe               = classe_titulo_pagar_w.ds_classe,
            ctp.ie_situacao             = classe_titulo_pagar_w.ie_situacao,
            ctp.nr_seq_trans_fin_baixa =
                (SELECT max(tf.nr_sequencia) 
                 From transacao_financeira tf 
                 where tf.nr_seq_trans_fin_ref = classe_titulo_pagar_w.nr_seq_trans_fin_baixa 
                 and tf.cd_empresa = c02_w.cd_empresa 
                 and tf.cd_estabelecimento = c02_w.cd_estabelecimento),
            ctp.nr_seq_trans_fin_contab = 
                (select max(tf.nr_sequencia) 
                 From transacao_financeira tf 
                 where tf.nr_seq_trans_fin_ref = classe_titulo_pagar_w.nr_seq_trans_fin_contab 
                 and tf.cd_empresa = c02_w.cd_empresa 
                 and tf.cd_estabelecimento = c02_w.cd_estabelecimento),
            ctp.ie_permite_bordero      = classe_titulo_pagar_w.ie_permite_bordero,
            ctp.nr_sequencia_ref        = classe_titulo_pagar_w.nr_sequencia,
            ctp.dt_atualizacao          = clock_timestamp(),
			ctp.nm_usuario              = nm_usuario_p
      where ctp.nr_sequencia = c02_w.nr_sequencia
      and  ctp.cd_empresa  = c02_w.cd_empresa;
    end loop;
    close c02;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_tit_pagar_holding ( nr_sequencia_p bigint, ie_operacao_p bigint, nm_usuario_p text) FROM PUBLIC;

