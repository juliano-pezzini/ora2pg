-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_recalc_preco_benef_inter (nr_seq_segurado_p bigint, cd_motivo_recalculo_p text, ie_liberado_p text, dt_reajuste_p timestamp, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/*	cd_motivo_recalculo_p DOMINIO 1728 - PLS - Motivo reajuste da mensalidade */

ds_observacao_w			pls_segurado_preco.ds_observacao%type;
cd_motivo_recalculo_w		pls_segurado_preco.cd_motivo_reajuste%type;
dt_liberacao_w			pls_segurado_preco.dt_liberacao%type;
nm_usuario_liberacao_w		pls_segurado_preco.nm_usuario_liberacao%type;
nr_seq_seg_preco_ant_w		pls_segurado_preco.nr_sequencia%type;
dt_reajuste_w			timestamp;
dt_reajuste_trunc_w		timestamp;
qt_idade_w			bigint;
nr_seq_tabela_w			pls_segurado.nr_seq_tabela%type;
ie_preco_w			pls_plano.ie_preco%type;
nm_beneficiario_w		pessoa_fisica.nm_pessoa_fisica%type;
ie_grau_parentesco_w		varchar(5);
nr_seq_intercambio_w		pls_segurado.nr_seq_intercambio%type;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
vl_preco_ant_w			pls_segurado_preco.vl_preco_atual%type;
nr_seq_reajuste_w		pls_segurado_preco.nr_seq_reajuste%type;
vl_preco_nao_subsid_desc_ant_w	pls_segurado_preco.vl_preco_nao_subsid_desc%type;
nr_seq_preco_ant_w		pls_segurado_preco.nr_seq_preco%type;
nr_seq_tabela_ant_w		pls_segurado_preco.nr_seq_tabela%type;
ie_preco_vidas_contrato_w	pls_tabela_preco.ie_preco_vidas_contrato%type;
ie_calculo_vidas_w		pls_tabela_preco.ie_calculo_vidas%type;
qt_vidas_w			bigint	:= 0;
nr_seq_preco_w			pls_plano_preco.nr_sequencia%type;
vl_preco_atual_w		pls_plano_preco.vl_preco_atual%type;
vl_preco_nao_subsid_desc_w	pls_plano_preco.vl_preco_nao_subsid_atual%type;
vl_minimo_mensalidade_w		pls_plano_preco.vl_minimo%type;
vl_adaptacao_w			pls_plano_preco.vl_adaptacao%type;
nr_seq_reajuste_ww		pls_reajuste_preco.nr_sequencia%type;
tx_desconto_w			pls_preco_regra.tx_desconto%type;
nr_seq_regra_desconto_w		pls_regra_desconto.nr_sequencia%type;
vl_desconto_w			pls_segurado_preco.vl_desconto%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(vl_preco_atual,0),
		vl_preco_nao_subsid_atual,
		coalesce(vl_minimo,0),
		coalesce(vl_adaptacao,0)
	from	pls_plano_preco
	where	qt_idade_w	>= qt_idade_inicial
	and	qt_idade_w	<= qt_idade_final
	and	nr_seq_tabela	= nr_seq_tabela_w
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w
	and	qt_vidas_w between coalesce(qt_vidas_inicial,qt_vidas_w) and coalesce(qt_vidas_final,qt_vidas_w)
	order	by	coalesce(ie_grau_titularidade,' ');


BEGIN

ds_observacao_w	:= '';
cd_motivo_recalculo_w	:= cd_motivo_recalculo_p;

if (ie_liberado_p = 'S') then
	dt_liberacao_w		:= clock_timestamp();
	nm_usuario_liberacao_w	:= nm_usuario_p;
end if;

select	max(nr_sequencia)
into STRICT	nr_seq_seg_preco_ant_w
from	pls_segurado_preco
where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
and	nr_seq_segurado	= nr_seq_segurado_p
and	dt_reajuste = (	SELECT	max(dt_reajuste)
			from	pls_segurado_preco
			where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	nr_seq_segurado	= nr_seq_segurado_p);

if (dt_reajuste_p IS NOT NULL AND dt_reajuste_p::text <> '') then
	dt_reajuste_w	:= dt_reajuste_p;
else
	dt_reajuste_w	:= trunc(clock_timestamp(),'month');
end if;

dt_reajuste_trunc_w	:= trunc(dt_reajuste_w,'month');

select	(obter_idade(a.dt_nascimento,coalesce(dt_reajuste_p, trunc(clock_timestamp(),'dd')),'A'))::numeric ,
	b.nr_seq_tabela,
	d.ie_preco,
	a.nm_pessoa_fisica,
	coalesce(substr(pls_obter_garu_dependencia_seg(b.nr_sequencia,'C'),1,2),'X'),
	b.nr_seq_intercambio,
	b.nr_seq_titular
into STRICT	qt_idade_w,
	nr_seq_tabela_w,
	ie_preco_w,
	nm_beneficiario_w,
	ie_grau_parentesco_w,
	nr_seq_intercambio_w,
	nr_seq_titular_w
from	pessoa_fisica	a,
	pls_segurado	b,
	pls_plano	d
where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
and	b.nr_seq_plano		= d.nr_sequencia
and	b.cd_estabelecimento	= cd_estabelecimento_p
and	b.nr_sequencia		= nr_seq_segurado_p;

if	((coalesce(nr_seq_tabela_w::text, '') = '') and (ie_preco_w = '1')) then /* Somente é obrigatório existir tabela para produto com formação de preço pré estabelecido */
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 186268, 'NR_SEQ_SEGURADO='||nr_seq_segurado_p||';'||'NM_SEGURADO='||nm_beneficiario_w);
	/* Não existe tabela de preço informada para o beneficiário */

end if;

if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
	if (qt_idade_w > 999) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 186269, 'NR_SEQ_SEGURADO='||nr_seq_segurado_p||';'||'NM_SEGURADO='||nm_beneficiario_w||';'||'QT_IDADE='||qt_idade_w );
		/* O beneficiário 859507 - Gregory Clasen possui 1200 anos. Verifique. */

	end if;

	if (coalesce(nr_seq_seg_preco_ant_w,0) > 0) then
		select	vl_preco_atual,
			nr_seq_reajuste,
			vl_preco_nao_subsid_desc,
			nr_seq_preco,
			nr_seq_tabela
		into STRICT	vl_preco_ant_w,
			nr_seq_reajuste_w,
			vl_preco_nao_subsid_desc_ant_w,
			nr_seq_preco_ant_w,
			nr_seq_tabela_ant_w
		from	pls_segurado_preco
		where	nr_sequencia	= nr_seq_seg_preco_ant_w;

		if (nr_seq_tabela_ant_w <> nr_seq_tabela_w) then
			nr_seq_reajuste_w	:= null;
		end if;
	end if;

	begin
	select	coalesce(ie_preco_vidas_contrato,'N'),
		coalesce(ie_calculo_vidas,'A')
	into STRICT	ie_preco_vidas_contrato_w,
		ie_calculo_vidas_w
	from	pls_tabela_preco
	where	nr_sequencia	= nr_seq_tabela_w;
	exception
	when others then
		ie_calculo_vidas_w	:= 'A';
	end;

	if (ie_preco_vidas_contrato_w = 'S') then
		if (ie_calculo_vidas_w = 'A') then
			select	count(*)
			into STRICT	qt_vidas_w
			from	pls_segurado
			where	nr_seq_intercambio = nr_seq_intercambio_w
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	((coalesce(dt_rescisao::text, '') = '') or (trunc(dt_rescisao,'mm') > dt_reajuste_trunc_w));
		elsif (ie_calculo_vidas_w = 'T') then
			select	count(*)
			into STRICT	qt_vidas_w
			from	pls_segurado
			where	nr_seq_intercambio = nr_seq_intercambio_w
			and	coalesce(nr_seq_titular::text, '') = ''
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	((coalesce(dt_rescisao::text, '') = '') or (trunc(dt_rescisao,'mm') > dt_reajuste_trunc_w));
		elsif (ie_calculo_vidas_w = 'D') then
			select	count(*)
			into STRICT	qt_vidas_w
			from	pls_segurado
			where	nr_seq_intercambio = nr_seq_intercambio_w
			and	(nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '')
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	((coalesce(dt_rescisao::text, '') = '') or (trunc(dt_rescisao,'mm') > dt_reajuste_trunc_w));
		elsif (ie_calculo_vidas_w = 'TD') then
			select	count(*)
			into STRICT	qt_vidas_w
			from	pls_segurado a
			where	a.nr_seq_intercambio = nr_seq_intercambio_w
			and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and	((coalesce(a.dt_rescisao::text, '') = '') or (trunc(a.dt_rescisao,'mm') > dt_reajuste_trunc_w))
			and	((coalesce(nr_seq_titular::text, '') = '') or ((nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '') and ((SELECT	count(*)
												from	grau_parentesco x
												where	x.nr_sequencia = a.nr_seq_parentesco
												and	x.ie_tipo_parentesco = '1') > 0)));
		elsif (ie_calculo_vidas_w = 'F') then
			qt_vidas_w	:= coalesce(pls_obter_qt_vida_benef(nr_seq_segurado_p,nr_seq_titular_w,clock_timestamp()),0);
		end if;
	else
		qt_vidas_w	:= 1;
	end if;

	open c01;
	loop
	fetch c01 into
		nr_seq_preco_w,
		vl_preco_atual_w,
		vl_preco_nao_subsid_desc_w,
		vl_minimo_mensalidade_w,
		vl_adaptacao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	end loop;
	close c01;



	select	max(a.nr_sequencia)
	into STRICT	nr_seq_reajuste_ww
	from	pls_reajuste_preco a
	where	a.nr_seq_preco	= nr_seq_preco_w
	and	trunc(a.dt_reajuste, 'month') <= trunc(dt_reajuste_w, 'month');

	if (nr_seq_reajuste_ww IS NOT NULL AND nr_seq_reajuste_ww::text <> '') then
		select	coalesce(vl_reajustado,0)
		into STRICT	vl_preco_atual_w
		from	pls_reajuste_preco
		where	nr_sequencia	= nr_seq_reajuste_ww;
	end if;

	if (coalesce(nr_seq_reajuste_ww,0) > coalesce(nr_seq_reajuste_w,0)) then
		nr_seq_reajuste_w	:= nr_seq_reajuste_ww;
	end if;

	if (coalesce(vl_preco_ant_w,0) <> coalesce(vl_preco_atual_w,0)) or (coalesce(vl_preco_nao_subsid_desc_w,0) <> coalesce(vl_preco_nao_subsid_desc_ant_w,0)) or (nr_seq_preco_ant_w <> nr_seq_preco_w) then

		SELECT * FROM pls_obter_regra_desconto(nr_seq_segurado_p, 1, cd_estabelecimento_p, tx_desconto_w, nr_seq_regra_desconto_w) INTO STRICT tx_desconto_w, nr_seq_regra_desconto_w;

		vl_desconto_w := vl_preco_atual_w * (tx_desconto_w /100);

		insert	into pls_segurado_preco(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, dt_reajuste,
			nr_seq_segurado, vl_preco_atual, qt_idade,
			cd_motivo_reajuste, vl_preco_ant, ds_observacao,
			nr_seq_reajuste, nr_seq_preco, dt_liberacao,
			nm_usuario_liberacao, vl_desconto, vl_preco_nao_subsid_desc,
			nr_seq_tabela, vl_minimo_mensalidade, vl_adaptacao,
			ie_situacao)
		values (nextval('pls_segurado_preco_seq'), clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, trunc(dt_reajuste_w,'dd'),
			nr_seq_segurado_p, coalesce(vl_preco_atual_w,0), qt_idade_w,
			cd_motivo_recalculo_w, coalesce(vl_preco_ant_w,0), ds_observacao_w,
			nr_seq_reajuste_w, nr_seq_preco_w, dt_liberacao_w,
			nm_usuario_liberacao_w, vl_desconto_w, vl_preco_nao_subsid_desc_w,
			nr_seq_tabela_w, vl_minimo_mensalidade_w, vl_adaptacao_w,
			'A');
	end if;
end if;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_recalc_preco_benef_inter (nr_seq_segurado_p bigint, cd_motivo_recalculo_p text, ie_liberado_p text, dt_reajuste_p timestamp, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

