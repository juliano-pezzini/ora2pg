-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_status_agenda_ageserv ( ie_status_agenda_p text, cd_motivo_p bigint, ds_motivo_status_p text, nr_seq_motivo_bloq_p bigint, nr_seq_lista_p text, nr_atend_lista_p text, nr_sequencia_p bigint, nr_atendimento_p bigint, ie_desvincular_p text, nr_seq_lista_ret_p INOUT text, nr_atend_lista_ret_p INOUT text, nr_sequencia_ret_p INOUT text, nr_atendimento_ret_p INOUT text, ds_perg_desvincular_p INOUT text, qtd_linhas_p INOUT bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
ie_mostrar_motivo_bloq_w	varchar(1);
ie_regra_status_alta_w	varchar(1);
qtd_linhas_w		smallint;
nr_seq_lista_w		varchar(2000);
nr_atend_lista_w	varchar(2000);
nr_sequencia_w		bigint;
nr_atendimento_w	bigint;


BEGIN 
 
nr_seq_lista_w		:= nr_seq_lista_p;
nr_atend_lista_w	:= nr_atend_lista_p;
qtd_linhas_w		:= 0;
 
if (ie_desvincular_p = 'S') then 
	begin 
	CALL ageserv_desvincular_atend(nr_sequencia_p, nm_usuario_p);
	if (nr_seq_lista_w IS NOT NULL AND nr_seq_lista_w::text <> '') then 
		nr_seq_lista_w	 := nr_sequencia_p || ',' || nr_seq_lista_w;
		nr_atend_lista_w := nr_atendimento_p || ',' || nr_atend_lista_w;
	else 
		nr_seq_lista_w	:= nr_sequencia_p || ',';
		nr_atend_lista_w := nr_atendimento_p || ',';
	end if;
	end;
end if;
 
if (nr_seq_lista_w IS NOT NULL AND nr_seq_lista_w::text <> '') then 
	begin 
	if (position(',' in nr_seq_lista_w) = 0) then 
		nr_seq_lista_w	:= nr_seq_lista_w || ',';
	end if;
	end;
end if;
if (nr_atend_lista_w IS NOT NULL AND nr_atend_lista_w::text <> '') then 
	begin 
	if (position(',' in nr_atend_lista_w) = 0) then 
		nr_atend_lista_w := nr_atend_lista_w || ',';
	end if;
	end;
end if;
	 
	-- Agenda de Serviços - Parâmetro [79] - Solicitar o motivo ao realizar o bloqueio do horário da agenda 
	ie_mostrar_motivo_bloq_w := obter_param_usuario(866, 79, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_mostrar_motivo_bloq_w);
	 
	while((nr_seq_lista_w IS NOT NULL AND nr_seq_lista_w::text <> '') 
	and	coalesce(ds_perg_desvincular_p::text, '') = '') loop 
		begin 
		nr_sequencia_w	:= substr(nr_seq_lista_w, 1, position(',' in nr_seq_lista_w) - 1);
		nr_seq_lista_w	:= substr(nr_seq_lista_w, position(',' in nr_seq_lista_w) + 1, length(nr_seq_lista_w));
		 
		nr_atendimento_w := substr(nr_atend_lista_w, 1, position(',' in nr_atend_lista_w) - 1);
		nr_atend_lista_w := substr(nr_atend_lista_w, position(',' in nr_atend_lista_w) + 1, length(nr_atend_lista_w));
		 
		ie_regra_status_alta_w := ageserv_regra_status_alta(nr_atendimento_w, ie_status_agenda_p);
		if (ie_regra_status_alta_w = 'S') then 
			begin 
			ds_perg_desvincular_p	:= obter_texto_tasy(92704, wheb_usuario_pck.get_nr_seq_idioma);
			nr_seq_lista_ret_p	:= nr_seq_lista_w;
			nr_atend_lista_ret_p	:= nr_atend_lista_w;
			nr_sequencia_ret_p	:= nr_sequencia_w;
			if (nr_atendimento_w	= 0) then 
				nr_atendimento_ret_p	:= null;
			else 
				nr_atendimento_ret_p	:= nr_atendimento_w;
			end if;
			end;
		end if;
		 
		if (ie_status_agenda_p <> 'B') or (ie_mostrar_motivo_bloq_w <> 'S') then 
			begin 
			update	agenda_consulta 
			set	ie_status_agenda	= ie_status_agenda_p, 
				dt_atualizacao	= clock_timestamp(), 
				ds_motivo_status	= ds_motivo_status_p, 
				nr_seq_motivo_falta	= CASE WHEN ie_status_agenda_p='F' THEN  cd_motivo_p WHEN ie_status_agenda_p='I' THEN  cd_motivo_p  ELSE null END , 
				nm_usuario	= nm_usuario_p 
			where	nr_sequencia	= nr_sequencia_w;
			end;
		else 
			begin 
			update	agenda_consulta 
			set	ie_status_agenda	= ie_status_agenda_p, 
				dt_atualizacao	= clock_timestamp(), 
				ds_motivo_status	= ds_motivo_status_p, 
				nr_seq_motivo_bloq	= nr_seq_motivo_bloq_p, 
				nm_usuario	= nm_usuario_p 
			where	nr_sequencia	= nr_sequencia_w;
			end;
		end if;
		 
		if (ie_status_agenda_p = 'AD') then 
			update	agenda_consulta 
			set	dt_status_atendido	= clock_timestamp() 
			where	nr_sequencia		= nr_sequencia_w;
		end if;
		 
		qtd_linhas_w := qtd_linhas_w + 1;
		end;
	end loop;
qtd_linhas_p := qtd_linhas_w;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_status_agenda_ageserv ( ie_status_agenda_p text, cd_motivo_p bigint, ds_motivo_status_p text, nr_seq_motivo_bloq_p bigint, nr_seq_lista_p text, nr_atend_lista_p text, nr_sequencia_p bigint, nr_atendimento_p bigint, ie_desvincular_p text, nr_seq_lista_ret_p INOUT text, nr_atend_lista_ret_p INOUT text, nr_sequencia_ret_p INOUT text, nr_atendimento_ret_p INOUT text, ds_perg_desvincular_p INOUT text, qtd_linhas_p INOUT bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

