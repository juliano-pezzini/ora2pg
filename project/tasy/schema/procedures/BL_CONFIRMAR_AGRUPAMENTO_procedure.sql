-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE bl_confirmar_agrupamento ( nr_seq_agrupamento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_novo_frasco_w	varchar(1);
qt_volume_w		bigint;
nr_seq_status_leite_w	bigint;
nr_seq_frasco_w		bigint;
nr_seq_frasco_inutil_w	bigint;
qt_volume_ant_w		bigint;
nr_seq_motivo_inutil_w	bigint;

C01 CURSOR FOR
	SELECT	nr_seq_frasco
	from	bl_agrup_frasco
	where	nr_seq_agrupamento = nr_seq_agrupamento_p
	and	ie_frasco_padrao = 'N'
	order by 1;


BEGIN
if (nr_seq_agrupamento_p IS NOT NULL AND nr_seq_agrupamento_p::text <> '') then

	select	ie_novo_frasco
	into STRICT	ie_novo_frasco_w
	from	bl_agrupamento
	where	nr_sequencia = nr_seq_agrupamento_p;

	select	sum(b.qt_volume)
	into STRICT	qt_volume_w
	from	bl_agrup_frasco a,
		bl_frasco b
	where	a.nr_seq_frasco = b.nr_sequencia
	and	a.nr_seq_agrupamento = nr_seq_agrupamento_p;

	if (ie_novo_frasco_w = 'S') then

		select	max(nr_sequencia)
		into STRICT	nr_seq_status_leite_w
		from	bl_status_leite
		where	ie_status = 'C'
		and	coalesce(ie_situacao,'A') = 'A';

		select	nextval('bl_frasco_seq')
		into STRICT	nr_seq_frasco_w
		;

		insert into bl_frasco(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_coleta,
			dt_frasco,
			qt_volume,
			ds_observacao,
			qt_volume_inicial,
			nr_seq_motivo_inutil,
			nm_usuario_inutil,
			ie_local_inutilizacao,
			dt_utilizacao,
			nm_usuario_utilizacao,
			cd_frasco,
			cd_pessoa_dest,
			nr_seq_status_leite,
			nr_seq_origem,
			dt_inutilizacao,
			nr_seq_agrupamento,
			ie_situacao_processa)
		values (	nr_seq_frasco_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			null,
			clock_timestamp(),
			qt_volume_w,
			'',
			qt_volume_w,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			nr_seq_status_leite_w,
			null,
			null,
			nr_seq_agrupamento_p,
			'N');

		insert into bl_agrup_frasco(
			nr_sequencia,
			ie_frasco_padrao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_agrupamento,
			nr_seq_frasco)
		values (	nextval('bl_agrup_frasco_seq'),
			'S',
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_agrupamento_p,
			nr_seq_frasco_w);

	else

		select	max(nr_seq_frasco)
		into STRICT	nr_seq_frasco_w
		from	bl_agrup_frasco
		where	nr_seq_agrupamento = nr_seq_agrupamento_p
		and	ie_frasco_padrao = 'S';

		select	qt_volume
		into STRICT	qt_volume_ant_w
		from	bl_frasco
		where	nr_sequencia = nr_seq_frasco_w;

		update	bl_frasco
		set	qt_volume 	= qt_volume_w,
			dt_atualizacao 	= clock_timestamp(),
			nm_usuario 	= nm_usuario_p,
			ie_situacao_processa = 'N'
		where	nr_sequencia 	= nr_seq_frasco_w;

		insert into bl_alteracao_volume_frasco(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_frasco,
			qt_volume_ant,
			qt_volume_novo,
			ie_motivo_alteracao)
		values (	nextval('bl_alteracao_volume_frasco_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_frasco_w,
			qt_volume_ant_w,
			qt_volume_w,
			'A');
	end if;

	select 	max(nr_seq_mot_inutil_agrup)
	into STRICT	nr_seq_motivo_inutil_w
	from	bl_parametro
	where	coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p;

	open C01;
	loop
	fetch C01 into
		nr_seq_frasco_inutil_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		update	bl_frasco
		set	ie_situacao_processa = 'N',
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_frasco_inutil_w;

		CALL BL_inutilizar_frasco(nr_seq_frasco_inutil_w,'A',nr_seq_motivo_inutil_w,nm_usuario_p);
		end;
	end loop;
	close C01;

	update	bl_agrupamento
	set	dt_liberacao 	= clock_timestamp(),
		nm_usuario_lib 	= nm_usuario_p
	where	nr_sequencia 	= nr_seq_agrupamento_p;

	if (ie_novo_frasco_w = 'S') then
		CALL BL_gravar_codigo_frasco(nr_seq_frasco_w,'1',nm_usuario_p);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bl_confirmar_agrupamento ( nr_seq_agrupamento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

