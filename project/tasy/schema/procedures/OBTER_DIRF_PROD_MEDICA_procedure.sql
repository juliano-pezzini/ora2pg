-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dirf_prod_medica ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, cd_tributo_p bigint, cd_darf_p text, ie_tipo_data_p bigint, ie_consistir_retencao_p text, dt_mes_referencia_p timestamp, ie_trib_titulo_p text, cd_empresa_p bigint, ie_pf_pj_p text) AS $body$
DECLARE

				
nr_seq_pagamento_w	pls_pagamento_item.nr_seq_pagamento%type;	
nr_titulo_w		titulo_pagar.nr_titulo%type;
vl_rendimento_w		pls_pag_prest_venc_trib.vl_base_calculo%type;
vl_imposto_w		pls_pag_prest_venc_trib.vl_imposto%type;
cd_pessoa_fisica_w	pls_prestador.cd_pessoa_fisica%type;
cd_cgc_w		pls_prestador.cd_cgc%type;
dt_vencimento_w		pls_pag_prest_vencimento.dt_vencimento%type;
dt_mes_competencia_w	pls_lote_pagamento.dt_mes_competencia%type;
ie_lote_pagamento_w	varchar(5);

ds_union_w varchar(3);
nr_titulo_fechamento_w varchar(255);

C01 CURSOR FOR
	SELECT 	p.nr_sequencia,
		z.cd_pessoa_fisica,
		z.cd_cgc,
		CASE WHEN upper(ie_pf_pj_p)='PF' THEN			CASE WHEN ie_tipo_data_p=1 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=2 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=3 THEN  l.dt_venc_lote WHEN ie_tipo_data_p=4 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=5 THEN  l.dt_venc_lote WHEN ie_tipo_data_p=6 THEN  l.dt_venc_lote END   ELSE CASE WHEN cd_darf_p='1708' THEN  l.dt_mes_competencia  ELSE CASE WHEN ie_tipo_data_p=1 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=2 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=3 THEN  l.dt_venc_lote WHEN ie_tipo_data_p=4 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=5 THEN  l.dt_venc_lote WHEN ie_tipo_data_p=6 THEN  l.dt_venc_lote END  END  END  dt_mes_competencia,
		'A' ie_lote_pagamento
	from   	pls_lote_pagamento l,
		pls_pagamento_prestador p,
		pls_prestador z
	where  	l.nr_sequencia	= p.nr_seq_lote 
	and	z.nr_sequencia	= p.nr_seq_prestador 
	and	((l.cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento_p::text, '') = ''))
	and 	coalesce(p.ie_cancelamento::text, '') = ''
	and 	((	SELECT	max(y.vl_liquido) 
			from	pls_pag_prest_vencimento y 
			where	y.nr_seq_pag_prestador = p.nr_sequencia) <= 0)
	and 	CASE WHEN upper(ie_pf_pj_p)='PF' THEN  			CASE WHEN ie_tipo_data_p=1 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=2 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=3 THEN  fim_mes(l.dt_venc_lote) WHEN ie_tipo_data_p=4 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=5 THEN  fim_mes(l.dt_venc_lote) WHEN ie_tipo_data_p=6 THEN  fim_mes(l.dt_venc_lote) END   ELSE CASE WHEN cd_darf_p='1708' THEN  fim_mes(l.dt_mes_competencia)  ELSE CASE WHEN ie_tipo_data_p=1 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=2 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=3 THEN  fim_mes(l.dt_venc_lote) WHEN ie_tipo_data_p=4 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=5 THEN  fim_mes(l.dt_venc_lote) WHEN ie_tipo_data_p=6 THEN  fim_mes(l.dt_venc_lote) END  END  END  = fim_mes(dt_mes_referencia_p)
	and	CASE WHEN upper(ie_pf_pj_p)='PF' THEN  z.cd_pessoa_fisica  ELSE z.cd_cgc (END IS NOT NULL AND END::text <> '')
	
union all

	select 	p.nr_sequencia,
		z.cd_pessoa_fisica,
		z.cd_cgc,
		trunc(
		CASE WHEN upper(ie_pf_pj_p)='PF' THEN  			CASE WHEN ie_tipo_data_p=1 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=2 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=3 THEN  l.dt_vencimento_lote WHEN ie_tipo_data_p=4 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=5 THEN  l.dt_vencimento_lote WHEN ie_tipo_data_p=6 THEN  l.dt_vencimento_lote END   ELSE CASE WHEN cd_darf_p='1708' THEN  l.dt_mes_competencia  ELSE CASE WHEN ie_tipo_data_p=1 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=2 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=3 THEN  l.dt_vencimento_lote WHEN ie_tipo_data_p=4 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=5 THEN  l.dt_vencimento_lote WHEN ie_tipo_data_p=6 THEN  l.dt_vencimento_lote END  END  END , 'month') dt_mes_competencia,
		'N' ie_lote_pagamento
	from   	pls_pp_lote l,
		pls_pp_prestador p,
		pls_prestador z
	where  	l.nr_sequencia	= p.nr_seq_lote 
	and	z.nr_sequencia	= p.nr_seq_prestador 
	and	((l.cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento_p::text, '') = ''))
	and 	p.ie_cancelado	= 'N'
	and	(l.dt_fechamento IS NOT NULL AND l.dt_fechamento::text <> '')
	and	p.vl_liquido < 0
	and 	CASE WHEN upper(ie_pf_pj_p)='PF' THEN  			CASE WHEN ie_tipo_data_p=1 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=2 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=3 THEN  fim_mes(l.dt_vencimento_lote) WHEN ie_tipo_data_p=4 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=5 THEN  fim_mes(l.dt_vencimento_lote) WHEN ie_tipo_data_p=6 THEN  fim_mes(l.dt_vencimento_lote) END   ELSE CASE WHEN cd_darf_p='1708' THEN  fim_mes(l.dt_mes_competencia)  ELSE CASE WHEN ie_tipo_data_p=1 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=2 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=3 THEN  fim_mes(l.dt_vencimento_lote) WHEN ie_tipo_data_p=4 THEN  fim_mes(l.dt_mes_competencia) WHEN ie_tipo_data_p=5 THEN  fim_mes(l.dt_vencimento_lote) WHEN ie_tipo_data_p=6 THEN  fim_mes(l.dt_vencimento_lote) END  END  END  = fim_mes(dt_mes_referencia_p)
	and	CASE WHEN upper(ie_pf_pj_p)='PF' THEN  z.cd_pessoa_fisica  ELSE z.cd_cgc (END IS NOT NULL AND END::text <> '')
	and	exists (select	1
			from	pls_pp_valor_trib_pessoa t
			where	t.nr_seq_lote		= p.nr_seq_lote
			and	t.nr_seq_prestador	= p.nr_seq_prestador)
	group by z.cd_pessoa_fisica,p.nr_sequencia,
		z.cd_cgc,
		trunc(	CASE WHEN upper(ie_pf_pj_p)='PF' THEN  			CASE WHEN ie_tipo_data_p=1 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=2 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=3 THEN  l.dt_vencimento_lote WHEN ie_tipo_data_p=4 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=5 THEN  l.dt_vencimento_lote WHEN ie_tipo_data_p=6 THEN  l.dt_vencimento_lote END   ELSE CASE WHEN cd_darf_p='1708' THEN  l.dt_mes_competencia  ELSE CASE WHEN ie_tipo_data_p=1 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=2 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=3 THEN  l.dt_vencimento_lote WHEN ie_tipo_data_p=4 THEN  l.dt_mes_competencia WHEN ie_tipo_data_p=5 THEN  l.dt_vencimento_lote WHEN ie_tipo_data_p=6 THEN  l.dt_vencimento_lote END  END  END , 'month');
			
C02 CURSOR FOR	
	SELECT 	obter_ds_titulo_pagar((	SELECT	max(a.nr_sequencia)
					from 	pls_pag_prest_venc_trib a 
					where 	a.nr_seq_vencimento = v.nr_sequencia
					and 	obter_ds_titulo_pagar(a.nr_sequencia) > 0)) nr_titulo,
		(coalesce(t.vl_base_calculo, 0) - coalesce(t.vl_base_adic, 0) + (	select 	coalesce(sum(p.vl_imposto), 0) vl_imposto 
									from 	pls_pag_prest_vencimento x, 
										pls_pag_prest_venc_trib p, 
										tributo w 
									where 	x.nr_sequencia = p.nr_seq_vencimento 
									and 	x.nr_seq_pag_prestador = nr_seq_pagamento_w
									and 	obter_ds_titulo_pagar(p.nr_sequencia) > 0 
									and 	w.cd_tributo = p.cd_tributo 
									and 	w.ie_tipo_tributo = 'INSS' 
									and 	w.cd_tributo <> t.cd_tributo) + coalesce(t.vl_desc_base , 0)) vl_rendimento, 
		coalesce(t.vl_imposto, 0) vl_imposto	,
		'S1' ds_union 
	from   	pls_pag_prest_vencimento v,
		pls_pag_prest_venc_trib t
	where  	v.nr_sequencia		= t.nr_seq_vencimento
	and	v.nr_seq_pag_prestador	= nr_seq_pagamento_w
	and	t.cd_tributo		= cd_tributo_p
	and 	v.dt_vencimento		<= fim_ano(dt_mes_referencia_p)
	and 	t.cd_darf		= cd_darf_p
	and 	obter_ds_titulo_pagar(t.nr_sequencia) > 0
	and	ie_lote_pagamento_w	= 'A'
	
union all

	select 	coalesce(pls_pp_tributacao_pck.obter_tit_pag_trib(v.nr_sequencia), nr_titulo_fechamento_w) nr_titulo,
		(coalesce(v.vl_base_calculo, 0) - coalesce(v.vl_base_adic, 0) + (	select 	coalesce(sum(p.vl_tributo),0) vl_imposto 
									from 	pls_pp_valor_trib_pessoa p
									where 	p.nr_seq_prestador	= t.nr_seq_prestador
									and	p.nr_seq_lote		= t.nr_seq_lote
									and 	pls_pp_tributacao_pck.obter_tit_pag_trib(p.nr_sequencia) > 0 
									and 	p.ie_tipo_tributo = 'INSS' 
									and 	p.cd_tributo <> v.cd_tributo)) vl_rendimento, 
		coalesce(v.vl_tributo, 0) vl_imposto,
		'S2' ds_union
	from   	pls_pp_valor_trib_pessoa v,
		pls_pp_prestador t
	where	t.nr_seq_prestador	= v.nr_seq_prestador
	and	t.nr_seq_lote		= v.nr_seq_lote
	and	t.nr_sequencia		= nr_seq_pagamento_w
	and	v.cd_tributo		= cd_tributo_p
	and	t.dt_venc_titulo	<= fim_ano(dt_mes_referencia_p)
	and 	v.cd_darf		= cd_darf_p
	and (pls_pp_tributacao_pck.obter_tit_pag_trib(v.nr_sequencia) > 0
	or 	nr_titulo_fechamento_w > 0)
	and	ie_lote_pagamento_w	= 'N';
	

BEGIN
	
  open C01;
  loop
  fetch C01 into	
    nr_seq_pagamento_w,
    cd_pessoa_fisica_w,
    cd_cgc_w,
    dt_mes_competencia_w,
    ie_lote_pagamento_w;
  EXIT WHEN NOT FOUND; /* apply on C01 */
    begin		

    select	to_char(coalesce(max(b.nr_titulo_pagar), 0)) nr_titulo
    into STRICT	nr_titulo_fechamento_w
    from	pls_pp_lr_trib_pessoa b,
        pls_pp_lr_lote a
    where	a.nr_sequencia = b.nr_seq_lote_ret
    and		b.cd_tributo = cd_tributo_p
    and		trunc(a.dt_mes_competencia, 'mm') = trunc(dt_mes_referencia_p, 'mm')
    and 	b.cd_darf = cd_darf_p
    and		coalesce(b.nr_titulo_pagar, 0) > 0
    and exists (	SELECT	1
          from   	pls_pp_valor_trib_pessoa v,
            pls_pp_prestador t
          where	t.nr_seq_prestador		= v.nr_seq_prestador
          and	t.nr_seq_lote			= v.nr_seq_lote
          and	t.nr_sequencia			= nr_seq_pagamento_w
          and	v.cd_tributo 			= b.cd_tributo
          and	t.dt_venc_titulo		<= fim_ano(dt_mes_referencia_p)
          and	v.cd_darf			= b.cd_darf
          and 	coalesce(pls_pp_tributacao_pck.obter_tit_pag_trib(v.nr_sequencia), 0) = 0
          and	ie_lote_pagamento_w		= 'N'
          and	v.cd_pessoa_fisica 		= b.cd_pessoa_fisica);

    open C02;
    loop
    fetch C02 into	
      nr_titulo_w,
      vl_rendimento_w,
      vl_imposto_w,
      ds_union_w;
    EXIT WHEN NOT FOUND; /* apply on C02 */
      begin	

      if cd_darf_p = '0588' then
        vl_rendimento_w := 0;
      end if;

      insert into dirf_titulo_pagar(nr_sequencia,				dt_atualizacao,			nm_usuario,
        dt_atualizacao_nrec,			nm_usuario_nrec,		nr_seq_lote_dirf,
        nr_titulo,				vl_rendimento,			vl_imposto,
        cd_tributo,				cd_darf,			dt_base_titulo,
        ie_origem,				cd_pessoa_fisica,		cd_cgc)
      values (nextval('dirf_titulo_pagar_seq'),		clock_timestamp(),			'Tasy3',
        clock_timestamp(),				'Tasy3',			nr_sequencia_p,
        nr_titulo_w,				vl_rendimento_w,		vl_imposto_w,
        cd_tributo_p,				cd_darf_p,			dt_mes_competencia_w,
        'SP',			cd_pessoa_fisica_w,		cd_cgc_w);
      end;
    end loop;
    close C02;

    end;
  end loop;
  close C01;

  commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dirf_prod_medica ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, cd_tributo_p bigint, cd_darf_p text, ie_tipo_data_p bigint, ie_consistir_retencao_p text, dt_mes_referencia_p timestamp, ie_trib_titulo_p text, cd_empresa_p bigint, ie_pf_pj_p text) FROM PUBLIC;

