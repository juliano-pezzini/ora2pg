-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajuste_tabela_reajuste () AS $body$
DECLARE

 
nr_seq_reajuste_w		bigint;
cd_estabelecimento_w		bigint;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
dt_reajuste_w			timestamp;
nr_seq_tabela_w			bigint;
nr_seq_plano_w			bigint;
dt_contrato_w			timestamp;
qt_registros_w			bigint;
qt_registros_ww			bigint;
ds_erro_w			varchar(4000);
nr_seq_contrato_w		bigint;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		trunc(a.dt_reajuste,'month'), 
		last_day(trunc(a.dt_reajuste,'month')), 
		a.dt_reajuste, 
		a.cd_estabelecimento 
	from	pls_reajuste a 
	where	a.nr_sequencia	in (218, 241, 247, 260, 263, 278, 282, 287, 296) 
	order by 1;

C02 CURSOR FOR 
	SELECT	distinct b.nr_sequencia, 
		c.nr_sequencia, 
		null, 
		a.nr_sequencia 
	from	pls_contrato a, 
		pls_tabela_preco b, 
		pls_plano c, 
		pls_contrato_plano d 
	where	c.nr_sequencia	= b.nr_seq_plano 
	and	c.nr_sequencia	= d.nr_seq_plano 
	and	b.nr_sequencia	= d.nr_seq_tabela 
	and	a.nr_sequencia	= d.nr_seq_contrato 
	and	c.cd_estabelecimento	= cd_estabelecimento_w 
	and	b.ie_tabela_base	= 'N' 
	and	c.ie_tipo_contratacao	= 'I' 
	and	pls_obter_se_aniver_periodo(a.dt_contrato,dt_periodo_inicial_w,dt_periodo_final_w)	= 'S' 
	and	trunc(a.dt_contrato,'month')	<> trunc(dt_periodo_inicial_w,'month') 
	and	b.nr_sequencia not in (	SELECT	x.nr_seq_tabela 
					from	pls_reajuste_tabela x, 
						pls_reajuste y 
					where	x.nr_seq_reajuste = y.nr_sequencia 
					and (trunc(dt_periodo_inicial_w,'dd') between y.dt_periodo_inicial and fim_dia(y.dt_periodo_final) 
					or	trunc(dt_periodo_final_w,'dd') between y.dt_periodo_inicial and fim_dia(y.dt_periodo_final))) 
	and	not exists (	select	1 
				from	pls_segurado z 
				where	z.nr_seq_tabela	= b.nr_sequencia);


BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_reajuste_w, 
	dt_periodo_inicial_w, 
	dt_periodo_final_w, 
	dt_reajuste_w, 
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_tabela_w, 
		nr_seq_plano_w, 
		dt_contrato_w, 
		nr_seq_contrato_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	pls_reajuste_tabela 
		where	nr_seq_reajuste	= nr_seq_reajuste_w 
		and	nr_seq_tabela	= nr_seq_tabela_w;
		 
		if (qt_registros_w	= 0) then 
			select	count(*) 
			into STRICT	qt_registros_ww 
			from	pls_reajuste a, 
				pls_reajuste_tabela b 
			where	a.nr_sequencia	= b.nr_seq_reajuste 
			and	b.nr_seq_tabela	= nr_seq_tabela_w 
			and	trunc(a.dt_reajuste,'month')	= dt_periodo_inicial_w;
			 
			if (qt_registros_ww	= 0) then 
				--insert into bo values (nr_seq_reajuste_w || '-' || nr_seq_tabela_w); 
				 
				insert into pls_reajuste_tabela(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						nr_seq_reajuste, 
						nr_seq_tabela, 
						nr_seq_plano, 
						dt_contrato, 
						dt_inicio_vigencia) 
					values (nextval('pls_reajuste_tabela_seq'), 
						clock_timestamp(), 
						'Tasy', 
						nr_seq_reajuste_w, 
						nr_seq_tabela_w, 
						nr_seq_plano_w, 
						dt_contrato_w, 
						dt_periodo_inicial_w);
			end if;
		end if;
		end;
	end loop;
	close C02;
	 
	begin 
	CALL pls_gerar_reajuste_preco(nr_seq_reajuste_w, 'C', 'N', cd_estabelecimento_w, 'Tasy');
	exception 
	when others then 
		ds_erro_w	:= ds_erro_w || 'Erro ao atualizar a tabela ' || nr_seq_tabela_w || ', ';
	end;
	 
	begin 
	CALL pls_aplicar_reajuste(nr_seq_reajuste_w,'N',nr_seq_contrato_w,'N','Tasy',cd_estabelecimento_w);
	exception 
	when others then 
		ds_erro_w	:= ds_erro_w || 'Erro ao liberar a tabela ' || nr_seq_tabela_w || ', ';
	end;
	 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajuste_tabela_reajuste () FROM PUBLIC;

