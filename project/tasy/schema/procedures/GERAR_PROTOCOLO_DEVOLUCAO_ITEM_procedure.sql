-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_protocolo_devolucao_item ( nr_seq_protocolo_p bigint, nm_usuario_p text, nr_seq_item_p bigint, nr_seq_novo_protocolo_p bigint, nr_seq_item_anterior_p bigint, cd_estabelecimento_p bigint, nr_seq_motivo_dev_p bigint default null) AS $body$
DECLARE


nr_seq_item_w			integer;
nr_documento_w			bigint;
ds_documento_w			varchar(2000);
nr_seq_interno_w			bigint;
nr_seq_tipo_item_w			bigint;
qt_documento_w			bigint;
ie_descartado_w			varchar(1);
cd_convenio_w			bigint;
nr_doc_item_w			varchar(20);
nr_seq_motivo_dev_w		bigint;
nr_doc_outros_w			varchar(255);
dt_inclusao_item_w			timestamp;
nr_documento_ext_w		varchar(20);
vl_documento_ext_w		double precision;
cd_pessoa_fisica_w		varchar(10);
cd_cnpj_w			varchar(14);
ds_observacao_w			varchar(4000);
dt_retirada_w			timestamp;
nm_usuario_retirada_w		varchar(15);
cd_setor_atendimento_w		integer;
cd_setor_atend_proced_w		integer;
nr_seq_contrato_w			bigint;
nm_usuario_receb_w		varchar(15);

nr_interno_conta_w			bigint;
cd_setor_destino_w			integer;
cd_pessoa_destino_w		varchar(10);
ie_conta_existe_w			varchar(10);
ie_tipo_protocolo_w			varchar(3);
nr_seq_etapa_w			bigint;
ds_motivo_w			varchar(255);

c01 CURSOR FOR
	SELECT	nr_seq_interno,
		ds_documento
	from	protocolo_doc_item
	where	nr_sequencia = nr_seq_novo_protocolo_p
	and 	nr_seq_item  = nr_seq_item_p
	and	(nr_seq_interno IS NOT NULL AND nr_seq_interno::text <> '')
	order by 	nr_seq_item;


BEGIN

nr_seq_etapa_w := obter_param_usuario(290, 68, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, nr_seq_etapa_w);

select	nr_seq_item,
	nr_documento,
	ds_documento,
	nr_seq_interno,
	nr_seq_tipo_item,
	qt_documento,
	ie_descartado,
	nm_usuario_receb,
	cd_convenio,
	nr_doc_item,
	nr_seq_motivo_dev_p,
	nr_doc_outros,
	dt_inclusao_item,
	nr_documento_ext,
	vl_documento_ext,
	cd_pessoa_fisica,
	cd_cnpj,
	ds_observacao,
	dt_retirada,
	nm_usuario_retirada,
	cd_setor_atendimento,
	cd_setor_atend_procedencia,
	nr_seq_contrato
into STRICT	nr_seq_item_w,
	nr_documento_w,
	ds_documento_w,
	nr_seq_interno_w ,
	nr_seq_tipo_item_w,
	qt_documento_w,
	ie_descartado_w,
	nm_usuario_receb_w,
	cd_convenio_w,
	nr_doc_item_w,
	nr_seq_motivo_dev_w,
	nr_doc_outros_w,
	dt_inclusao_item_w,
	nr_documento_ext_w,
	vl_documento_ext_w,
	cd_pessoa_fisica_w,
	cd_cnpj_w,
	ds_observacao_w,
	dt_retirada_w,
	nm_usuario_retirada_w,
	cd_setor_atendimento_w,
	cd_setor_atend_proced_w,
	nr_seq_contrato_w
from	protocolo_doc_item
where	nr_sequencia = nr_seq_protocolo_p
and	nr_seq_item = nr_seq_item_anterior_p;

insert into protocolo_doc_item(	nr_sequencia,
				nr_seq_item,
				dt_atualizacao,
				nm_usuario,
				nr_documento,
				ds_documento,
				nr_seq_interno,
				nr_seq_tipo_item,
				dt_conferencia,
				dt_recebimento,
				qt_documento,
				ie_descartado,
				nm_usuario_receb,
				cd_convenio,
				nr_doc_item,
				nr_seq_motivo_dev,
				nr_doc_outros,
				dt_inclusao_item,
				nr_documento_ext,
				vl_documento_ext,
				cd_pessoa_fisica,
				cd_cnpj,
				ds_observacao,
				dt_retirada,
				nm_usuario_retirada,
				cd_setor_atendimento,
				cd_setor_atend_procedencia,
				nr_seq_contrato)
			values (nr_seq_novo_protocolo_p,
				nr_seq_item_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_documento_w,
				ds_documento_w,
				nr_seq_interno_w,
				nr_seq_tipo_item_w,
				null,
				null,
				qt_documento_w,
				ie_descartado_w,
				null,
				cd_convenio_w,
				nr_doc_item_w,
				nr_seq_motivo_dev_w,
				nr_doc_outros_w,
				dt_inclusao_item_w,
				nr_documento_ext_w,
				vl_documento_ext_w,
				cd_pessoa_fisica_w,
				cd_cnpj_w,
				ds_observacao_w,
				dt_retirada_w,
				nm_usuario_retirada_w,
				cd_setor_atendimento_w,
				cd_setor_atend_proced_w,
				nr_seq_contrato_w);

update 	protocolo_doc_item
set	nr_protocolo_devolucao = nr_seq_novo_protocolo_p
where	nr_sequencia = nr_seq_protocolo_p
and	nr_seq_item = nr_seq_item_anterior_p;

commit;

select 	max(cd_setor_destino),
	max(cd_pessoa_destino),
	coalesce(max(ie_tipo_protocolo),'0')
into STRICT	cd_setor_destino_w,
	cd_pessoa_destino_w,
	ie_tipo_protocolo_w
from 	protocolo_documento
where 	nr_sequencia = nr_seq_novo_protocolo_p;

if (coalesce(nr_seq_motivo_dev_w,0) <> 0) then

	select	ds_motivo
	into STRICT	ds_motivo_w
	from	motivo_dev_doc_item
	where	nr_sequencia = nr_seq_motivo_dev_w;

else
	ds_motivo_w	:= substr(wheb_mensagem_pck.get_texto(315726),1,255);
end if;

if (ie_tipo_protocolo_w = '5') and (nr_seq_etapa_w <> 0) then

	open C01;
	loop
	fetch C01 into
		nr_interno_conta_w,
		ds_documento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		ie_conta_existe_w := inserir_conta_etapa(	nr_interno_conta_w, nm_usuario_p, nr_seq_etapa_w, cd_setor_destino_w, 0, cd_pessoa_destino_w, substr(wheb_mensagem_pck.get_texto(315721,'DS_DOCUMENTO=' || ds_documento_w || ';DS_MOTIVO=' || ds_motivo_w),1,255), 0, nr_seq_novo_protocolo_p, ie_conta_existe_w);
		end;
	end loop;
	close C01;

end if;

CALL gerar_envio_comunic_prot_doc(nr_seq_novo_protocolo_p,4, obter_estabelecimento_ativo,nm_usuario_p,nr_seq_item_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_protocolo_devolucao_item ( nr_seq_protocolo_p bigint, nm_usuario_p text, nr_seq_item_p bigint, nr_seq_novo_protocolo_p bigint, nr_seq_item_anterior_p bigint, cd_estabelecimento_p bigint, nr_seq_motivo_dev_p bigint default null) FROM PUBLIC;

