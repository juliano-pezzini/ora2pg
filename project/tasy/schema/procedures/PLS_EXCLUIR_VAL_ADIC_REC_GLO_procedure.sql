-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_excluir_val_adic_rec_glo ( nr_seq_rec_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type, nr_seq_rec_conta_p pls_rec_glosa_conta.nr_sequencia%type) AS $body$
DECLARE


qt_lote_pgto_w		integer;
qt_lote_fat_w		integer;

C01 CURSOR(	nr_seq_rec_protocolo_pc		pls_rec_glosa_protocolo.nr_sequencia%type,
		nr_seq_rec_conta_pc		pls_rec_glosa_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	pls_rec_glosa_conta
	where	nr_seq_protocolo = nr_seq_rec_protocolo_pc
	and	coalesce(nr_seq_rec_conta_pc::text, '') = ''
	
union all

	SELECT	nr_sequencia
	from	pls_rec_glosa_conta
	where	nr_sequencia = nr_seq_rec_conta_pc
	and	coalesce(nr_seq_rec_protocolo_pc::text, '') = '';

BEGIN

if (nr_seq_rec_protocolo_p IS NOT NULL AND nr_seq_rec_protocolo_p::text <> '') then
	-- verifica se já tem lote de pagamento
	select 	count(1)
	into STRICT	qt_lote_pgto_w
	from 	pls_rec_glosa_conta a,
		pls_conta_rec_resumo_item b
	where  	a.nr_seq_protocolo = nr_seq_rec_protocolo_p
	and    	b.nr_seq_conta_rec = a.nr_sequencia
	and 	(b.nr_seq_lote_pgto IS NOT NULL AND b.nr_seq_lote_pgto::text <> '')
	and	b.ie_situacao = 'A';

	-- Verifica se está em lote de faturamento
	select	count(1)
	into STRICT	qt_lote_fat_w
	from	pls_conta_pos_estabelecido a,
		pls_rec_glosa_conta b
	where	b.nr_sequencia = a.nr_seq_conta_rec
	and	b.nr_seq_protocolo = nr_seq_rec_protocolo_p
	and	(nr_seq_lote_fat IS NOT NULL AND nr_seq_lote_fat::text <> '');

elsif (nr_seq_rec_conta_p IS NOT NULL AND nr_seq_rec_conta_p::text <> '') then
	-- verifica se já tem lote de pagamento
	select 	count(1)
	into STRICT	qt_lote_pgto_w
	from 	pls_conta_rec_resumo_item b
	where  	b.nr_seq_conta_rec = nr_seq_rec_conta_p
	and 	(b.nr_seq_lote_pgto IS NOT NULL AND b.nr_seq_lote_pgto::text <> '')
	and	b.ie_situacao = 'A';

	-- Verifica se está em lote de faturamento
	select	count(1)
	into STRICT	qt_lote_fat_w
	from	pls_conta_pos_estabelecido a
	where	a.nr_seq_conta_rec = nr_seq_rec_conta_p
	and	(a.nr_seq_lote_fat IS NOT NULL AND a.nr_seq_lote_fat::text <> '');
end if;

/*O pagamento dos itens do recurso já foram gerados. Não é possível desfazer a liberação do pagamento do protocolo!*/

if (qt_lote_pgto_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(292775);
end if;

--Este protocolo possui valores de pós-estabelecido em lote de faturamento, favor verificar.
if (qt_lote_fat_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(447088);
end if;

for r_C01_w in C01(nr_seq_rec_protocolo_p, nr_seq_rec_conta_p) loop

	delete	FROM pls_conta_pos_estab_aprop
	where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
						from	pls_conta_pos_estabelecido
						where	nr_seq_conta_rec	= r_C01_w.nr_sequencia);

	delete	FROM pls_conta_pos_estab_taxa
	where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
						from	pls_conta_pos_estabelecido
						where	nr_seq_conta_rec	= r_C01_w.nr_sequencia);

	delete	FROM pls_conta_pos_estabelecido
	where	nr_seq_conta_rec	= r_C01_w.nr_sequencia;

	delete	FROM pls_conta_copartic_contab
	where	nr_seq_conta_copartic in (	SELECT	b.nr_sequencia
						from	pls_conta_coparticipacao	b,
							pls_rec_glosa_proc		a
						where	b.nr_seq_proc_rec		= a.nr_sequencia
						and	a.nr_seq_conta_rec		= r_C01_w.nr_sequencia
						
union all

						SELECT	b.nr_sequencia
						from	pls_conta_coparticipacao	b,
							pls_rec_glosa_mat		a
						where	b.nr_seq_mat_rec		= a.nr_sequencia
						and	a.nr_seq_conta_rec		= r_C01_w.nr_sequencia);

	delete	FROM pls_conta_copartic_aprop
	where	nr_seq_conta_coparticipacao in (	SELECT	b.nr_sequencia
							from	pls_conta_coparticipacao	b,
								pls_rec_glosa_proc		a
							where	b.nr_seq_proc_rec		= a.nr_sequencia
							and	a.nr_seq_conta_rec		= r_C01_w.nr_sequencia
							
union all

							SELECT	b.nr_sequencia
							from	pls_conta_coparticipacao	b,
								pls_rec_glosa_mat		a
							where	b.nr_seq_mat_rec		= a.nr_sequencia
							and	a.nr_seq_conta_rec		= r_C01_w.nr_sequencia);

	delete	FROM pls_conta_coparticipacao
	where	nr_seq_proc_rec	in (	SELECT	nr_sequencia
					from	pls_rec_glosa_proc
					where	nr_seq_conta_rec	= r_C01_w.nr_sequencia);

	delete	FROM pls_conta_coparticipacao
	where	nr_seq_mat_rec	in (	SELECT	nr_sequencia
					from	pls_rec_glosa_mat
					where	nr_seq_conta_rec	= r_C01_w.nr_sequencia);

	delete	FROM pls_conta_co_aprop
	where	nr_seq_conta_co in (	SELECT	a.nr_sequencia
					from	pls_conta_co a,
						pls_rec_glosa_proc b
					where	b.nr_sequencia 		= a.nr_seq_proc_rec
					and	b.nr_seq_conta_rec	= r_C01_w.nr_sequencia
					
union all

					SELECT	a.nr_sequencia
					from	pls_conta_co a,
						pls_rec_glosa_mat b
					where	b.nr_sequencia 		= a.nr_seq_mat_rec
					and	b.nr_seq_conta_rec	= r_C01_w.nr_sequencia);

	delete	FROM pls_conta_co
	where	nr_seq_proc_rec in (	SELECT	nr_sequencia
					from	pls_rec_glosa_proc
					where	nr_seq_conta_rec	= r_C01_w.nr_sequencia);

	delete	FROM pls_conta_co
	where	nr_seq_mat_rec in (	SELECT	nr_sequencia
					from	pls_rec_glosa_mat
					where	nr_seq_conta_rec	= r_C01_w.nr_sequencia);

	delete	FROM pls_conta_proc_aprop
	where	nr_seq_proc_rec	in ( SELECT	nr_sequencia
					from	pls_rec_glosa_proc
					where	nr_seq_conta_rec	= r_C01_w.nr_sequencia);

	delete	FROM pls_conta_mat_aprop
	where	nr_seq_mat_rec	in ( SELECT	nr_sequencia
					from	pls_rec_glosa_mat
					where	nr_seq_conta_rec	= r_C01_w.nr_sequencia);
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_excluir_val_adic_rec_glo ( nr_seq_rec_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type, nr_seq_rec_conta_p pls_rec_glosa_conta.nr_sequencia%type) FROM PUBLIC;

