-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agenda_paciente_afterpost_js2 ( nr_seq_agenda_p bigint, cd_agenda_p bigint, cd_procedimento_p bigint, nr_seq_proc_interno_p bigint, cd_convenio_p bigint, cd_medico_p bigint, dt_final_agendamento_p timestamp, dt_nascimento_pac_p timestamp, cd_estabelecimento_p bigint, cd_perfil_p bigint, ie_exec_ins_opme_p text, nm_usuario_p text, ds_final_agendamento_p INOUT text, ds_email_orientacao_p INOUT text, ie_necessita_int_p INOUT text, cd_estab_agenda_p INOUT bigint) AS $body$
DECLARE


ie_lancar_proc_assoc_w		varchar(255);
ie_acao_final_w			varchar(255);
ie_salvar_enviar_email_w	varchar(255);
ds_final_agendamento_w		varchar(255);
ds_email_orientacao_w		varchar(255);
ie_necessita_internacao_w	varchar(1);
cd_estabelecimento_w		smallint;


BEGIN

ie_lancar_proc_assoc_w := Obter_Param_Usuario(820, 121, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_lancar_proc_assoc_w);
if (ie_lancar_proc_assoc_w <> 'N') then
	CALL Gerar_Proc_Assoc_Agenda_Exame(nr_seq_agenda_p, cd_estabelecimento_p, nr_seq_proc_interno_p, nm_usuario_p);
end if;
	
ie_acao_final_w := Obter_Param_Usuario(820, 158, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_acao_final_w);
if (ie_acao_final_w = 'S') and (coalesce(dt_final_agendamento_p::text, '') = '') then
	ds_final_agendamento_w	:= substr(obter_texto_tasy(49252, wheb_usuario_pck.get_nr_seq_idioma),1,255);
end if;

ie_salvar_enviar_email_w := Obter_Param_Usuario(820, 160, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_salvar_enviar_email_w);
if (ie_salvar_enviar_email_w = 'S') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
	ds_email_orientacao_w	:= substr(obter_texto_tasy(49253, wheb_usuario_pck.get_nr_seq_idioma),1,255);
end if;

ie_necessita_internacao_w	:= substr(obter_se_proc_internacao(nr_seq_proc_interno_p, dt_nascimento_pac_p),1,1);

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	agenda
where	cd_agenda = cd_agenda_p;

if (ie_exec_ins_opme_p = 'S') then
	begin
	CALL inserir_opme_proc_agenda_exame(
			nr_seq_agenda_p,
			nr_seq_proc_interno_p,
			cd_convenio_p, 
			cd_medico_p, 
			cd_estabelecimento_p,
			nm_usuario_p);
	end;
end if;

ds_final_agendamento_p	:= ds_final_agendamento_w;
ds_email_orientacao_p	:= ds_email_orientacao_w;
ie_necessita_int_p	:= ie_necessita_internacao_w;
cd_estab_agenda_p	:= cd_estabelecimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agenda_paciente_afterpost_js2 ( nr_seq_agenda_p bigint, cd_agenda_p bigint, cd_procedimento_p bigint, nr_seq_proc_interno_p bigint, cd_convenio_p bigint, cd_medico_p bigint, dt_final_agendamento_p timestamp, dt_nascimento_pac_p timestamp, cd_estabelecimento_p bigint, cd_perfil_p bigint, ie_exec_ins_opme_p text, nm_usuario_p text, ds_final_agendamento_p INOUT text, ds_email_orientacao_p INOUT text, ie_necessita_int_p INOUT text, cd_estab_agenda_p INOUT bigint) FROM PUBLIC;

