-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_solicitacao_compra ( CD_LOCAL_ESTOQUE_P bigint, CD_CLASSE_MATERIAL_P bigint, CD_PESSOA_SOLICITANTE_P text, NM_USUARIO_P text) AS $body$
DECLARE


DT_ATUALIZACAO_W		timestamp		:= clock_timestamp();
DT_SOLICITACAO_COMPRA_W	timestamp	 	:= clock_timestamp();
DT_AUTORIZACAO_W		timestamp	 	:= clock_timestamp();
DT_SOLIC_ITEM_W		timestamp	 	:= clock_timestamp();
DT_MESANO_REFERENCIA_W	timestamp;
CD_MATERIAL_W			integer    	:= 0;
CD_CLASSE_MATERIAL_W		integer    	:= 0;
CD_ESTABELECIMENTO_W		smallint    	:= 0;
CD_LOCAL_ESTOQUE_W		smallint    	:= 0;
QT_ESTOQUE_MINIMO_W		double precision 	:= 0;
QT_ESTOQUE_MAXIMO_W		double precision 	:= 0;
QT_PONTO_PEDIDO_W		double precision 	:= 0;
QT_MATERIAL_W			double precision 	:= 0;
QT_ESTOQUE_W			double precision 	:= 0;
CD_UNIDADE_MEDIDA_COMPRA_W	varchar(30)  	:= '';
NR_SOLIC_COMPRA_W		bigint   	:= 0;
QT_CONV_COMPRA_ESTOQUE_W	bigint   	:= 0;
NR_SEQUENCIA_W		smallint		:= 0;


C01 CURSOR FOR
	SELECT	a.cd_material,
             	substr(obter_dados_material_estab(a.cd_material,b.cd_estabelecimento,'UMC'),1,255) cd_unidade_medida_compra,
             	a.cd_classe_material,
/*		nvl(a.qt_estoque_minimo,1),
		nvl(a.qt_estoque_maximo,1),
		nvl(a.qt_ponto_pedido,1), Fabio 28/05/2004 - alterado o select para buscar da function*/
		coalesce(Obter_mat_estabelecimento(b.cd_estabelecimento, 0, a.cd_material, 'MI'),1),
		coalesce(Obter_mat_estabelecimento(b.cd_estabelecimento, 0, a.cd_material, 'MA'),1),
		coalesce(Obter_mat_estabelecimento(b.cd_estabelecimento, 0, a.cd_material, 'PP'),1),
		coalesce(a.qt_conv_compra_estoque,1),
		b.cd_estabelecimento,
		(b.qt_estoque + coalesce((c.qt_material * a.qt_conv_compra_estoque) ,0) +
                             coalesce((d.qt_material * a.qt_conv_compra_estoque) ,0)  ) qt_compra
	FROM saldo_estoque b, (d, (c, material a
LEFT OUTER JOIN ordem_compra_item c ON (a.cd_material = c.cd_material)
LEFT OUTER JOIN solic_compra_item d ON (a.cd_material = d.cd_material)
WHERE (b.cd_local_estoque     	= CD_LOCAL_ESTOQUE_P) and (b.dt_mesano_referencia 	= DT_MESANO_REFERENCIA_W) and (a.cd_material_estoque  	= b.cd_material) and (b.cd_material          	= a.cd_material) and (a.cd_classe_material   	= CD_CLASSE_MATERIAL_P)     and ((b.qt_estoque + coalesce((c.qt_material * a.qt_conv_compra_estoque) ,0)
                            + coalesce((d.qt_material * a.qt_conv_compra_estoque) ,0))  <

				coalesce(Obter_mat_estabelecimento(b.cd_estabelecimento, 0, a.cd_material, 'PP'),1));

BEGIN

OPEN C01;
LOOP
    FETCH C01 into
          CD_MATERIAL_W,
          CD_UNIDADE_MEDIDA_COMPRA_W,
          CD_CLASSE_MATERIAL_W,
          QT_ESTOQUE_MINIMO_W,
          QT_ESTOQUE_MAXIMO_W,
          QT_PONTO_PEDIDO_W,
          QT_CONV_COMPRA_ESTOQUE_W,
          CD_ESTABELECIMENTO_W,
          QT_ESTOQUE_W;

    if    C01%FOUND then
		begin
		begin
		SELECT DT_MESANO_VIGENTE
		INTO STRICT DT_MESANO_REFERENCIA_W
		FROM PARAMETRO_ESTOQUE
		where cd_estabelecimento = cd_estabelecimento_w;
		exception
			when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(266055);
			--'NÃ£o encontrado parametro de estoque');
		end;
		if	NR_SOLIC_COMPRA_W = 0 then
			begin
			select nextval('solic_compra_seq')
			into STRICT nr_solic_compra_w
			;

			INSERT INTO SOLIC_COMPRA(
				NR_SOLIC_COMPRA, CD_ESTABELECIMENTO, DT_SOLICITACAO_COMPRA,
				DT_ATUALIZACAO, NM_USUARIO, IE_SITUACAO, CD_PESSOA_SOLICITANTE,
				CD_LOCAL_ESTOQUE, CD_CENTRO_CUSTO, CD_CONTA_CONTABIL,
				CD_SETOR_ATENDIMENTO, DS_OBSERVACAO, CD_MOTIVO_BAIXA,
				DT_BAIXA, DT_LIBERACAO, CD_PESSOA_AUTORIZA, DT_AUTORIZACAO,
				DT_IMPRESSAO, ie_aviso_chegada, ie_aviso_aprov_oc, ie_urgente,ie_tipo_solicitacao, ie_comodato, ie_semanal,
				nm_usuario_nrec,	dt_atualizacao_nrec)
			VALUES (
				NR_SOLIC_COMPRA_W, CD_ESTABELECIMENTO_W, DT_SOLICITACAO_COMPRA_W,
				DT_ATUALIZACAO_W,  NM_USUARIO_P, '1', CD_PESSOA_SOLICITANTE_P,
				CD_LOCAL_ESTOQUE_P, NULL, NULL,
				NULL, NULL, NULL,
				NULL, NULL, CD_PESSOA_SOLICITANTE_P, DT_AUTORIZACAO_W,
				NULL, 'N', 'N', 'N',0,'N','N',
				nm_usuario_p,		clock_timestamp());
			exception
				when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(266056);
				--'Erro ao gravar solicitacao'
			end;
		end if;
		QT_MATERIAL_W := round((QT_ESTOQUE_MAXIMO_W - QT_ESTOQUE_W) / QT_CONV_COMPRA_ESTOQUE_W);
		NR_SEQUENCIA_W   := (NR_SEQUENCIA_W + 1);

		INSERT INTO SOLIC_COMPRA_ITEM(
			NR_SOLIC_COMPRA,          NR_ITEM_SOLIC_COMPRA,   CD_MATERIAL,
			CD_UNIDADE_MEDIDA_COMPRA, QT_MATERIAL,            DT_ATUALIZACAO,
			NM_USUARIO,               IE_SITUACAO,            DS_MATERIAL_DIRETO,
			DS_OBSERVACAO,            NR_COT_COMPRA,          NR_ITEM_COT_COMPRA,
			CD_MOTIVO_BAIXA,          DT_BAIXA,               DT_SOLIC_ITEM,
			ie_geracao,		qt_conv_compra_est_orig,
			qt_saldo_disp_estoque 	)
		VALUES (
			NR_SOLIC_COMPRA_W, NR_SEQUENCIA_W, CD_MATERIAL_W,
			CD_UNIDADE_MEDIDA_COMPRA_W, QT_MATERIAL_W, DT_ATUALIZACAO_W,
			'Tasy', '1', NULL,
			NULL, NULL, NULL,
			NULL, NULL, DT_SOLIC_ITEM_W, 'S',obter_dados_material(CD_MATERIAL_W,'QCE'),
			obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm')));

		INSERT INTO SOLIC_COMPRA_ITEM_ENTREGA(
			NR_SOLIC_COMPRA,          NR_ITEM_SOLIC_COMPRA,   NR_ITEM_SOLIC_COMPRA_ENTR,
			QT_ENTREGA_SOLICITADA,    DT_ENTREGA_SOLICITADA,  DT_ATUALIZACAO,
			NM_USUARIO,               DS_OBSERVACAO)
		VALUES (
			NR_SOLIC_COMPRA_W, NR_SEQUENCIA_W, 1,
			QT_MATERIAL_W,     clock_timestamp(),  DT_ATUALIZACAO_W,
			'Tasy', NULL);
		end;
    else
         exit;
    end if;
END LOOP;
CLOSE C01;
COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_solicitacao_compra ( CD_LOCAL_ESTOQUE_P bigint, CD_CLASSE_MATERIAL_P bigint, CD_PESSOA_SOLICITANTE_P text, NM_USUARIO_P text) FROM PUBLIC;

