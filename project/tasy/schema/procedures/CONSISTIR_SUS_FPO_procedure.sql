-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_sus_fpo ( dt_parametro_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, nr_atendimento_p bigint, ie_tipo_atendimento_p bigint, ie_opcao_p text, cd_setor_atendimento_p bigint, cd_procedencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_tipo_agendamento_p text, nr_seq_ageint_item_p bigint, cd_pessoa_fisica_p text, ds_retorno_p INOUT text, dt_retorno_p INOUT timestamp) AS $body$
DECLARE

 
	 
qt_meses_sus_fpo_w		bigint;
dt_parametro_w			timestamp;
count_aux_w			bigint := 1;
ds_retorno_w			varchar(255) := '@#@';
ds_Retorno_princ_w		varchar(255);
cd_procedimento_w		bigint;				
ie_origem_proced_w		bigint;
cd_convenio_w			bigint;
cd_categoria_w			bigint;
cd_plano_w			bigint;
nr_seq_regra_w			bigint;
nr_seq_proc_interno_w		bigint;
cd_procedimento_ww		bigint;
ie_origem_proced_ww		bigint;
cd_cbo_w 			varchar(6);

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	regra_lanc_automatico 
	where	ie_tipo_convenio	= 3 
	and	nr_seq_evento		= 352 
	and	coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p,0))	= coalesce(ie_tipo_atendimento_p,0) 
	AND	coalesce(cd_convenio, coalesce(cd_convenio_w,0))		= coalesce(cd_convenio_w,0) 
	AND	coalesce(cd_categoria, coalesce(cd_categoria_w,0))	= coalesce(cd_categoria_w,0) 
	AND	coalesce(cd_plano_convenio, coalesce(cd_plano_w,0))	= coalesce(cd_plano_w,0) 
	order by coalesce(ie_tipo_atendimento,0), 
		coalesce(cd_convenio,0), 
		coalesce(cd_categoria,0),	 
		coalesce(cd_plano_convenio,0);

	 

BEGIN 
 
cd_procedimento_w := cd_procedimento_p;
ie_origem_proced_w := ie_origem_proced_p;
dt_parametro_w := dt_parametro_p;
 
select 	max(cd_convenio), 
		max(cd_categoria), 
		max(cd_plano) 
into STRICT	cd_convenio_w, 
		cd_categoria_w, 
		cd_plano_w 
from 	agenda_integrada a, 
		agenda_integrada_item b 
where 	a.nr_sequencia = b.nr_seq_agenda_int 
and		b.nr_sequencia = nr_seq_ageint_item_p;
 
if (coalesce(cd_procedimento_p,0) = 0) then 
	begin 
	 
	open C01;
	loop 
		fetch C01 into	 
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
	 
	end loop;
	close C01;
	 
	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then 
	 
		select 	max(nr_seq_proc_interno), 
			max(cd_procedimento), 
			max(ie_origem_proced) 
		into STRICT	nr_seq_proc_interno_w, 
			cd_procedimento_ww, 
			ie_origem_proced_ww 
		from 	regra_lanc_aut_pac 
		where 	nr_seq_regra = nr_seq_regra_w;
		 
		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then 
		 
			SELECT * FROM obter_proc_tab_interno_conv( 
						nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		elsif (cd_procedimento_ww IS NOT NULL AND cd_procedimento_ww::text <> '') and (ie_origem_proced_ww IS NOT NULL AND ie_origem_proced_ww::text <> '') then				 
				cd_procedimento_w := cd_procedimento_ww;
				ie_origem_proced_w := ie_origem_proced_ww;			
		end if;
	end if;
	end;	
end if;		
 
cd_cbo_w := sus_obter_cbo_medico(cd_pessoa_fisica_p, cd_procedimento_w, dt_parametro_p, '0');
 
select 	coalesce(max(qt_meses_sus_fpo),0) 
into STRICT	qt_meses_sus_fpo_w 
from 	parametro_agenda_integrada 
where	coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p;
 
ds_Retorno_princ_w := sus_consiste_fpo_unif(dt_parametro_w, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_p, nr_atendimento_p, cd_estabelecimento_p, ie_tipo_atendimento_p, cd_cbo_w, ie_opcao_p, ds_Retorno_princ_w, cd_setor_atendimento_p, cd_procedencia_p, nm_usuario_p);
 
if (ds_Retorno_princ_w IS NOT NULL AND ds_Retorno_princ_w::text <> '') and (qt_meses_sus_fpo_w	> 0) then 
	 
	select 	trunc(add_months(dt_parametro_w,1),'month') 
	into STRICT	dt_parametro_w 
	;	
		 
	while count_aux_w <= qt_meses_sus_fpo_w and 	 
		(ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') 
		loop 
	 
		ds_retorno_w := sus_consiste_fpo_unif(dt_parametro_w, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_p, nr_atendimento_p, cd_estabelecimento_p, ie_tipo_atendimento_p, cd_cbo_w, ie_opcao_p, ds_retorno_w, cd_setor_atendimento_p, cd_procedencia_p, nm_usuario_p);
		 
		if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then 
			select 	trunc(add_months(dt_parametro_w,1),'month') 
			into STRICT	dt_parametro_w 
			;	
		end if;
		 
		count_aux_w := count_aux_w + 1;
	end loop;
end if;
 
if (ds_Retorno_princ_w IS NOT NULL AND ds_Retorno_princ_w::text <> '') then 
	dt_retorno_p := trunc(dt_parametro_w);
end if;
 
ds_retorno_p	:= ds_Retorno_princ_w;	
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_sus_fpo ( dt_parametro_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, nr_atendimento_p bigint, ie_tipo_atendimento_p bigint, ie_opcao_p text, cd_setor_atendimento_p bigint, cd_procedencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_tipo_agendamento_p text, nr_seq_ageint_item_p bigint, cd_pessoa_fisica_p text, ds_retorno_p INOUT text, dt_retorno_p INOUT timestamp) FROM PUBLIC;

