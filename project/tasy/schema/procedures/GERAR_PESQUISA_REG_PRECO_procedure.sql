-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_pesquisa_reg_preco ( nr_seq_reg_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_itens_w			integer;
nr_cot_compra_w			bigint;
cd_estabelecimento_w		smallint;
nr_seq_licitacao_w			bigint;
nr_seq_reg_compra_item_w		bigint;
cd_comprador_w			varchar(10);
qt_dias_retorno_w			integer;
dt_retorno_prev_w			timestamp;
nr_seq_lic_item_w			integer;
cd_material_w			integer;
cd_unid_medida_w			varchar(30);
qt_item_w			double precision;
ds_historico_w			varchar(4000);
qt_dias_prazo_entrega_w  reg_licitacao.qt_dias_prazo_entrega%TYPE;
dt_entrega_com_prazo_entrega_w  cot_compra.dt_entrega%TYPE;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_seq_lic_item,
	a.cd_material,
	b.cd_unid_medida,
	a.qt_item
from	reg_compra_item a,
	reg_lic_item b
where	a.nr_seq_licitacao	= b.nr_seq_licitacao
and	a.nr_seq_lic_item	= b.nr_seq_lic_item
and	a.nr_seq_reg_compra	= nr_seq_reg_compra_p
and coalesce(a.dt_cancelamento::text, '') = '';


BEGIN

select	count(*)
into STRICT	qt_itens_w
from	reg_compra_item a,
	reg_lic_item b
where	a.nr_seq_licitacao		= b.nr_seq_licitacao
and	a.nr_seq_lic_item		= b.nr_seq_lic_item
and	a.nr_seq_reg_compra	= nr_seq_reg_compra_p;
if (qt_itens_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266027);
	--'E necessario existir itens no registro de preco para gerar uma pesquisa de preco.'
end if;

select	nr_seq_licitacao
into STRICT	nr_seq_licitacao_w
from	reg_compra
where	nr_sequencia	= nr_seq_reg_compra_p;

select	cd_estabelecimento,
		qt_dias_prazo_entrega
into STRICT	cd_estabelecimento_w,
		qt_dias_prazo_entrega_w
from	reg_licitacao
where	nr_sequencia	= nr_seq_licitacao_w;

if (qt_dias_prazo_entrega_w IS NOT NULL AND qt_dias_prazo_entrega_w::text <> '') then
	dt_entrega_com_prazo_entrega_w := clock_timestamp() + qt_dias_prazo_entrega_w;
end if;

begin
select	cd_comprador_padrao
into STRICT	cd_comprador_w
from	parametro_compras
where	cd_estabelecimento	= cd_estabelecimento_w;
exception when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266028);
	--'Nao encontrado o comprador padrao nos parametros de compras.'
end;

select	obter_valor_param_usuario(915, 2, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)
into STRICT	qt_dias_retorno_w
;
dt_retorno_prev_w	:= clock_timestamp() + qt_dias_retorno_w;
dt_retorno_prev_w	:= trunc(dt_retorno_prev_w, 'dd');

select	nextval('cot_compra_seq')
into STRICT	nr_cot_compra_w
;

insert into cot_compra(
	nr_cot_compra,
	dt_cot_compra,
	dt_atualizacao,
	cd_comprador,
	nm_usuario,
	ds_observacao,
	cd_pessoa_solicitante,
	cd_estabelecimento,
	dt_retorno_prev,
	nr_seq_reg_compra,
	ie_finalidade_cotacao,
	dt_entrega)
values (	nr_cot_compra_w,
	clock_timestamp(),
	clock_timestamp(),
	cd_comprador_w,
	nm_usuario_p,
	null,
	cd_comprador_w,
	cd_estabelecimento_w,
	dt_retorno_prev_w,
	nr_seq_reg_compra_p,
	'P',
	dt_entrega_com_prazo_entrega_w);


open c01;
loop
fetch c01 into
	nr_seq_reg_compra_item_w,
	nr_seq_lic_item_w,
	cd_material_w,
	cd_unid_medida_w,
	qt_item_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	insert into cot_compra_item(
		nr_cot_compra,
		nr_item_cot_compra,
		cd_material,
		qt_material,
		cd_unidade_medida_compra,
		dt_atualizacao,
		dt_limite_entrega,
		nm_usuario,
		ie_situacao,
		cd_estab_item,
		nr_seq_reg_compra,
		nr_seq_reg_compra_item)
	values (	nr_cot_compra_w,
		nr_seq_lic_item_w,
		cd_material_w,
		qt_item_w,
		cd_unid_medida_w,
		clock_timestamp(),
		dt_retorno_prev_w,
		nm_usuario_p,
		'A',
		cd_estabelecimento_w,
		nr_seq_reg_compra_p,
		nr_seq_reg_compra_item_w);

	CALL gerar_cot_compra_item_entrega(
			nr_cot_compra_w,
			nr_seq_lic_item_w,
			nm_usuario_p);


	end;
end loop;
close c01;


ds_historico_w := 	substr(WHEB_MENSAGEM_PCK.get_texto(301900,'NR_COT_COMPRA_W='||nr_cot_compra_w),1,4000);
			
CALL lic_gerar_historico_reg_preco(nr_seq_reg_compra_p, ds_historico_w, 'S', nm_usuario_p);


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_pesquisa_reg_preco ( nr_seq_reg_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

