-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE suspender_prescricao ( nr_prescricao_p bigint, nr_seq_motivo_susp_p bigint, ds_motivo_susp_p text, nm_usuario_p text, ie_alta_paciente_p text) AS $body$
DECLARE


nm_usuario_original_w			varchar(15);
cont_w							bigint;
nr_sequencia_w					bigint;
nr_sequencia_cih_w				bigint;
nr_sequencia_autor_w			bigint;
nr_seq_autor_destino_w			bigint;
nr_seq_item_autor_w				bigint;
qt_solicitada_w					bigint;
cd_procedimento_w				bigint;
ie_origem_proced_w				bigint;
nr_seq_estagio_w				bigint;
nr_prescr_orig_fut_w			bigint;
nr_prescricao_w					bigint;
Ie_susp_futuro_w				varchar(1);
cd_pessoa_Fisica_w				varchar(50);
cd_material_w					bigint;
cd_material_ww					prescr_material.cd_material%type;
cd_dieta_w						bigint;
ie_suspenso_w					varchar(1);
ie_cancelar_autor_prescr_w		varchar(1);
cd_estabelecimento_w			smallint;
nr_atendimento_w				bigint;
ie_cancelar_laudo_suspensao_w 	varchar(10);
ie_desfazer_conduta_w			varchar(1);
ie_verifica_envio_w				bigint;
cd_funcao_w						integer;
ie_desvincula_presc_w			varchar(1);
nr_prescricao_original_w		bigint;
cd_motivo_exclusao_w			varchar(20);
ie_limpar_data_integracao_w		varchar(1)	:=	'N';
qt_laudo_w						bigint;
ie_bloquear_susp_com_laudo_w	varchar(1);
nr_seq_item_cpoe_w				numeric(30);
ie_agrupador_w					smallint;
nr_seq_cpoe_vinculo_w			cpoe_dieta.NR_SEQ_CPOE_VINCULO%type;
nr_seq_solic_sangue_cpoe_w		prescr_procedimento.nr_seq_solic_sangue%type;
nr_seq_npt_cpoe_w				nut_pac.nr_seq_npt_cpoe%type;
nr_seq_interno_w				bigint;
ie_prescricao_alta_w			varchar(1);
dt_liberacao_w					timestamp;
ie_status_unidade_ant_w			varchar(3);
ie_retornar_status_leito_w		varchar(1);
nr_prescricao_anterior_w		prescr_medica.nr_prescricao%type;
nr_sequencia_anterior_w			prescr_material.nr_sequencia%type;
ie_tipo_proced_w				proc_interno.ie_tipo%type;
ie_susp_itens_pend_w			varchar(1);
nr_seq_interno_ww				prescr_material.nr_seq_interno%type;
reg_integracao_w				gerar_int_padrao.reg_integracao;
nr_seq_exame_w					prescr_procedimento.nr_seq_exame%type;
cd_procedimento_ww				prescr_procedimento.cd_procedimento%type;
nr_seq_processo_w prescr_mat_hor.nr_seq_processo%type;
qt_processo_w     integer;
nr_seq_item_w     prescr_material.nr_sequencia%type;



c00 CURSOR FOR
SELECT	nr_prescricao,
		cd_pessoa_Fisica
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p

union

SELECT	nr_prescricao,
		cd_pessoa_Fisica
from	prescr_medica
where	nr_prescricao		> nr_prescricao_p
and	(nr_prescr_orig_fut IS NOT NULL AND nr_prescr_orig_fut::text <> '')
and	coalesce(Ie_susp_futuro_w,'N')	= 'S'
and	nr_prescr_orig_fut	= nr_prescr_orig_fut_w
order by 1;

c01 CURSOR FOR
SELECT	nr_sequencia
from	prescr_procedimento
where	nr_prescricao	= nr_prescricao_w
and	coalesce(nm_usuario_susp,'X') <> obter_desc_expressao(726025)/*'Nao suspender'*/;

c02 CURSOR FOR
SELECT	nr_sequencia
from	prescr_material
where	nr_prescricao	= nr_prescricao_w;

c03 CURSOR FOR
SELECT	cd_dieta
from	prescr_dieta
where	nr_prescricao	= nr_prescricao_w
and	coalesce(ie_suspenso,'N') = 'N';

c04 CURSOR FOR
SELECT	nr_sequencia
from	prescr_material
where	nr_prescricao	= nr_prescricao_w
and	coalesce(ie_suspenso,'N') = 'S';

c05 CURSOR FOR
SELECT	nr_prescricao_anterior,
	nr_sequencia_anterior
from	prescr_material
where	nr_prescricao	= nr_prescricao_w
and	coalesce(ie_suspenso,'N') = 'S';

c051 CURSOR FOR
SELECT	nr_prescricao_anterior,
	nr_seq_anterior
from	prescr_material
where	nr_prescricao	= nr_prescricao_w
and	coalesce(ie_suspenso,'N') = 'S';

c06 CURSOR FOR
SELECT	nr_prescricao_original,
	nr_seq_anterior
from	prescr_recomendacao
where	nr_prescricao	= nr_prescricao_w
and	coalesce(ie_suspenso,'N') = 'S';

c07 CURSOR FOR
SELECT	nr_prescricao_original,
	nr_seq_anterior
from	prescr_dieta
where	nr_prescricao	= nr_prescricao_w
and	coalesce(ie_suspenso,'N') = 'S';

c08 CURSOR FOR
SELECT	nr_prescricao_original,
	nr_seq_anterior
from	prescr_procedimento
where	nr_prescricao	= nr_prescricao_w
and	coalesce(ie_suspenso,'N') = 'S';

-- Cursor for check if there is CPOE record to suspend
cpoedieta CURSOR FOR
SELECT	nr_seq_dieta_cpoe
from	prescr_dieta
where	nr_prescricao = nr_prescricao_p;

cpoedietajejum CURSOR FOR
SELECT	nr_seq_dieta_cpoe
from	rep_jejum
where	nr_prescricao = nr_prescricao_p;

cpoedialise CURSOR FOR
SELECT 	nr_seq_dialise_cpoe
from	prescr_solucao b
where	nr_prescricao = nr_prescricao_p;

cpoematerial CURSOR FOR
SELECT	ie_agrupador,
        coalesce(nr_seq_mat_cpoe,nr_seq_dieta_cpoe)
from	prescr_material
where	nr_prescricao	= nr_prescricao_p;

cpoesolucao CURSOR FOR
SELECT	nr_seq_mat_cpoe
from	prescr_material
where	nr_prescricao	= nr_prescricao_p
and     ie_agrupador    = 4;

cpoeprocedimento CURSOR FOR
SELECT	nr_seq_proc_cpoe,
        coalesce(nr_seq_solic_sangue,0),
		coalesce(ie_tipo_proced,'XPTO')
from	prescr_procedimento
where	nr_prescricao	= nr_prescricao_p;

cpoerecomendacao CURSOR FOR
SELECT	nr_seq_rec_cpoe
from	prescr_recomendacao
where	nr_prescricao	= nr_prescricao_p;

cpoegas CURSOR FOR   
SELECT	nr_seq_gas_cpoe
from	prescr_gasoterapia
where	nr_prescricao	= nr_prescricao_p;

C09 CURSOR FOR
SELECT	nr_seq_interno,
	cd_material
from 	prescr_material
where 	nr_prescricao = nr_prescricao_w
and		ie_agrupador = 1
and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');

C10 CURSOR FOR
SELECT	nr_seq_interno,
		cd_procedimento,
		nr_seq_exame
from 	prescr_procedimento
where 	nr_prescricao = nr_prescricao_w
and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');

c12 CURSOR FOR
SELECT nr_seq_processo
FROM   prescr_mat_hor
WHERE  nr_prescricao   = nr_prescricao_W
and    ie_agrupador in (1,2,8,12,16);


BEGIN

ie_desfazer_conduta_w := coalesce(obter_valor_param_usuario(924, 867, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
ie_retornar_status_leito_w := coalesce(obter_valor_param_usuario(924,1169, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
cd_funcao_w := Obter_Funcao_Ativa;


select	coalesce(max(ie_limpar_data_integracao),'N')
into STRICT	ie_limpar_data_integracao_w
from	parametro_integracao_pacs
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;


select	max(cd_estabelecimento),
	max(nr_prescr_orig_fut)
into STRICT	cd_estabelecimento_w,
	nr_prescr_orig_fut_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

select	coalesce(max(ie_cancelar_autor_prescr),'N')
into STRICT	ie_cancelar_autor_prescr_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(ie_cancelar_laudo_suspensao),'N')
into STRICT	ie_cancelar_laudo_suspensao_w
from	parametro_medico
where	cd_estabelecimento	= cd_estabelecimento_w;

Ie_susp_futuro_w := obter_param_usuario(924, 676, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, Ie_susp_futuro_w);
ie_desvincula_presc_w := obter_param_usuario(924, 1022, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, ie_desvincula_presc_w);
ie_bloquear_susp_com_laudo_w := obter_param_usuario(916, 851, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, ie_bloquear_susp_com_laudo_w);
ie_susp_itens_pend_w := Obter_param_Usuario(1113, 205, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_susp_itens_pend_w);


select 	count(*)
into STRICT 	qt_laudo_w
from 	laudo_paciente a
where	coalesce(a.dt_cancelamento::text, '') = ''
and	a.nr_prescricao = nr_prescricao_p;

if (qt_laudo_w > 0) and (coalesce(ie_bloquear_susp_com_laudo_w,'N') in ('A','P')) then
	begin
	/*Nao e possivel suspender o item ou a prescricao, pois a mesma ja possui laudo. 
	Verificar parametro 851 da Entrada Unica de Paciente.*/
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(240227);	
	end;
end if;

open C00;
loop
fetch C00 into	
	nr_prescricao_w,
	cd_pessoa_Fisica_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	
	/* Francisco - OS 51719 - 02/03/07 */

	select	count(*)
	into STRICT	cont_w
	from	autorizacao_convenio
	where	nr_prescricao	= nr_prescricao_w;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_estagio_w
	from	estagio_autorizacao
	where	ie_situacao	= 'A'
	and	ie_interno	= '70'
	and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;
	
	if (ie_cancelar_laudo_suspensao_w	= 'S') then
		open C01;
		loop
		fetch C01 into	
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
				
			update	laudo_paciente
			set	dt_cancelamento	= clock_timestamp()
			where	nr_prescricao	= nr_prescricao_w
			and	nr_seq_prescricao = nr_sequencia_w;

			end;
		end loop;
		close C01;
	end if;


	if (cont_w	> 0) and (nr_seq_estagio_w > 0) and (ie_cancelar_autor_prescr_w <> 'N') then
		open c01;
		loop
		fetch c01 into
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			/* Francisco - OS 79511 - 08/04/2008 - Troquei para tratar na procedure */

			CALL suspender_autor_convenio(nr_prescricao_w,nr_sequencia_w,null,nm_usuario_p);
			
			
		end loop;
		close c01;

		open c02;
		loop
		fetch c02 into
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			/* Francisco - OS 79511 - 08/04/2008 - Troquei para tratar na procedure */

			CALL suspender_autor_convenio(nr_prescricao_w,null,nr_sequencia_w,nm_usuario_p);
		end loop;
		close c02;
	end if;
	/* Fim - Francisco - OS 51719 - 02/03/07 */

	
	open C03;
	loop
	fetch C03 into	
		cd_dieta_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		CALL Enviar_CI_prescr_dieta(nr_prescricao_w, nm_usuario_p, 'S', cd_dieta_w);
	end loop;
	close C03;

	update	prescr_dieta
	set	ie_suspenso	= 'S',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp(),
		dt_suspensao	= clock_timestamp(),
		nm_usuario_susp	= nm_usuario_p
	where	nr_prescricao	= nr_prescricao_w
	and	coalesce(ie_suspenso,'N') = 'N';

	nr_prescricao_anterior_w := null;
	nr_sequencia_anterior_w := null;

	open C07;
	loop
	fetch C07 into	
		nr_prescricao_anterior_w,
		nr_sequencia_anterior_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */

		update	prescr_dieta
		set	dt_extensao  = NULL
		where 	(dt_extensao IS NOT NULL AND dt_extensao::text <> '')
		and	nr_prescricao = nr_prescricao_anterior_w
		and	nr_sequencia = nr_sequencia_anterior_w;

	end loop;
	close C07;
	
    -- Check if there is CPOE record to suspend 
    open cpoedieta;
    loop
	fetch cpoedieta into
        nr_seq_item_cpoe_w;
    EXIT WHEN NOT FOUND; /* apply on cpoedieta */
        begin
        if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
        update	cpoe_dieta
        set		dt_suspensao = clock_timestamp(),
                dt_lib_suspensao = clock_timestamp(),
                nm_usuario_susp = nm_usuario_p
        where	nr_sequencia = nr_seq_item_cpoe_w;
        end if;
        end;
    end loop;
	close cpoedieta;
	
	select	coalesce(max(nr_seq_npt_cpoe),0)
	into STRICT    nr_seq_npt_cpoe_w
	from 	nut_pac
	where	nr_prescricao = nr_prescricao_p;
	
	if (nr_seq_npt_cpoe_w > 0 ) then
		update	cpoe_dieta
		set		dt_suspensao 	 = clock_timestamp(),
				dt_lib_suspensao = clock_timestamp(),
				nm_usuario_susp  = nm_usuario_p
		where	nr_sequencia = nr_seq_npt_cpoe_w;		
	end if;		

	update	prescr_dieta_hor
	set	dt_atualizacao	= clock_timestamp(),
		dt_suspensao	= clock_timestamp(),
		nm_usuario_susp	= nm_usuario_p
	where	nr_prescricao	= nr_prescricao_w
	and	coalesce(dt_suspensao::text, '') = ''
	and	coalesce(dt_fim_horario::text, '') = '';
	

	update	prescr_solucao
	set	ie_suspenso	= 'S',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp(),
		dt_suspensao	= clock_timestamp(),
		nm_usuario_susp	= nm_usuario_p
	where	nr_prescricao	= nr_prescricao_w
	and	coalesce(ie_suspender,'S') = 'S'
	and	coalesce(ie_suspenso,'N') = 'N';

	update	prescr_material
	set		nr_seq_atendimento  = NULL,
			nr_seq_material  = NULL
	where	nr_prescricao = nr_prescricao_w
	and ((nr_seq_atendimento IS NOT NULL AND nr_seq_atendimento::text <> '') or (nr_seq_material IS NOT NULL AND nr_seq_material::text <> ''))
	and		coalesce(ie_suspenso, 'N') = 'S';
	
	-- Check if there is CPOE record to suspend 
    open cpoedietajejum;
    loop
	fetch cpoedietajejum into
        nr_seq_item_cpoe_w;
    EXIT WHEN NOT FOUND; /* apply on cpoedietajejum */
        begin
        if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
			update	cpoe_dieta
			set		dt_suspensao = clock_timestamp(),
					dt_lib_suspensao = clock_timestamp(),
					nm_usuario_susp = nm_usuario_p
			where	nr_sequencia = nr_seq_item_cpoe_w;
		end if;
        end;
    end loop;
	close cpoedietajejum;
	
	update	rep_jejum
	set	ie_suspenso	= 'S',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_prescricao	= nr_prescricao_w
	and	coalesce(ie_suspenso,'N') = 'N';
	
    -- Check if there is CPOE record to suspend 
    open cpoedialise;
    loop
	fetch cpoedialise into
        nr_seq_item_cpoe_w;
    EXIT WHEN NOT FOUND; /* apply on cpoedialise */
        begin
            if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
                if (nr_seq_item_cpoe_w > 0 and (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '')) then			
                update	cpoe_dialise
                set		dt_suspensao = clock_timestamp(),
                        dt_lib_suspensao = clock_timestamp(),
                        nm_usuario_susp = nm_usuario_p
                where	nr_sequencia = nr_seq_item_cpoe_w;			
                end if;	
            end if;	
        end;
    end loop;
   close cpoedialise;

	update	prescr_material
	set	ie_suspenso	= 'S',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp(),
		dt_suspensao	= clock_timestamp(),
		nm_usuario_susp	= nm_usuario_p,
		NR_SEQ_ATENDIMENTO	 = NULL,
		NR_SEQ_MATERIAL	 = NULL
	where	nr_prescricao	= nr_prescricao_w
	and	coalesce(ie_suspenso,'N') = 'N';
	
	nr_prescricao_anterior_w := null;
	nr_sequencia_anterior_w := null;

	open C05;
	loop
	fetch C05 into	
		nr_prescricao_anterior_w,
		nr_sequencia_anterior_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */

		update	prescr_material
		set	dt_extensao  = NULL
		where 	(dt_extensao IS NOT NULL AND dt_extensao::text <> '')
		and	nr_prescricao = nr_prescricao_anterior_w
		and	nr_sequencia = nr_sequencia_anterior_w;

	end loop;
	close C05;

	nr_prescricao_anterior_w := null;
	nr_sequencia_anterior_w := null;

	open C051;
	loop
	fetch C051 into	
		nr_prescricao_anterior_w,
		nr_sequencia_anterior_w;
	EXIT WHEN NOT FOUND; /* apply on C051 */

		update	prescr_material
		set	dt_extensao  = NULL
		where 	(dt_extensao IS NOT NULL AND dt_extensao::text <> '')
		and	nr_prescricao = nr_prescricao_anterior_w
		and	nr_sequencia = nr_sequencia_anterior_w;

	end loop;
	close C051;

	open C04;
	loop
	fetch C04 into	
		nr_sequencia_cih_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		CALL suspender_ciclo_cih(nr_prescricao_w, nr_sequencia_cih_w);
	end loop;
	close C04;

    -- Check if there is CPOE record to suspend 
    open cpoematerial;
    loop
	fetch cpoematerial into
        ie_agrupador_w,
        nr_seq_item_cpoe_w;
    EXIT WHEN NOT FOUND; /* apply on cpoematerial */
        begin        
            if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
                if (ie_agrupador_w in (8,10,11,12,16,17)) then
                    update	cpoe_dieta
                    set		dt_suspensao = clock_timestamp(),
                            dt_lib_suspensao = clock_timestamp(),
                            nm_usuario_susp = nm_usuario_p
                    where	nr_sequencia = nr_seq_item_cpoe_w;

                    SELECT coalesce(MAX(NR_SEQ_CPOE_VINCULO),0)
                    into STRICT nr_seq_cpoe_vinculo_w
                    FROM cpoe_dieta
                    WHERE nr_sequencia = nr_seq_item_cpoe_w;

                    if (nr_seq_cpoe_vinculo_w > 0) then
                        
                            update	cpoe_dieta
                            set		dt_suspensao = clock_timestamp(),
                                    dt_lib_suspensao = clock_timestamp(),
                                    nm_usuario_susp = nm_usuario_p
                            where	nr_sequencia = nr_seq_cpoe_vinculo_w;

                    end if;	

                else
                    update	cpoe_material
                    set		dt_suspensao = clock_timestamp(),
                            dt_lib_suspensao = clock_timestamp(),
                            nm_usuario_susp = nm_usuario_p
                    where	nr_sequencia = nr_seq_item_cpoe_w;
                end if;
            end if;
        end;
    end loop;
	close cpoematerial;

    -- Check if there is CPOE record to suspend  
    open cpoesolucao;
    loop
	fetch cpoesolucao into
        nr_seq_item_cpoe_w;
    EXIT WHEN NOT FOUND; /* apply on cpoesolucao */
        begin
            if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
                update	cpoe_material
                set		dt_suspensao = clock_timestamp(),
                        dt_lib_suspensao = clock_timestamp(),
                        nm_usuario_susp = nm_usuario_p
                where	nr_sequencia = nr_seq_item_cpoe_w;	
            end if;
        end;
    end loop;
	close cpoesolucao;
	
	CALL lib_material_pac_susp_prescr(cd_pessoa_Fisica_w, nr_prescricao_w, nm_usuario_p);

	if (ie_susp_itens_pend_w not in ('S','N') or ie_alta_paciente_p = 'N') then
		
		update	prescr_procedimento
		set	ie_suspenso	= 'S',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			dt_suspensao	= clock_timestamp(),
			nm_usuario_susp	= nm_usuario_p,
			dt_integracao = CASE WHEN ie_limpar_data_integracao_w='S' THEN null  ELSE dt_integracao END
		where	nr_prescricao	= nr_prescricao_w
		  and	coalesce(nm_usuario_susp,'X') <> obter_desc_expressao(726025)/*'Nao suspender'*/
		  and	coalesce(ie_suspenso,'N') = 'N';

	end if;

	nr_prescricao_anterior_w := null;
	nr_sequencia_anterior_w := null;

	open C08;
	loop
	fetch C08 into	
		nr_prescricao_anterior_w,
		nr_sequencia_anterior_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */

		update	prescr_procedimento
		set	dt_extensao  = NULL
		where 	(dt_extensao IS NOT NULL AND dt_extensao::text <> '')
		and	nr_prescricao = nr_prescricao_anterior_w
		and	nr_sequencia = nr_sequencia_anterior_w;

	end loop;
	close C08;

    -- Check if there is CPOE record to suspend
    open cpoeprocedimento;
    loop
	fetch cpoeprocedimento into
        nr_seq_item_cpoe_w,
        nr_seq_solic_sangue_cpoe_w,
		ie_tipo_proced_w;
    EXIT WHEN NOT FOUND; /* apply on cpoeprocedimento */
        begin
            if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
                if (nr_seq_solic_sangue_cpoe_w > 0) then
                    update	cpoe_hemoterapia
                    set		dt_suspensao = clock_timestamp(),
                            dt_lib_suspensao = clock_timestamp(),
                            nm_usuario_susp = nm_usuario_p
                    where	nr_sequencia = nr_seq_item_cpoe_w;
                else
				
					if (ie_tipo_proced_w in ('AP','APH','APC')) then
						
						update	cpoe_anatomia_patologica
						set		dt_suspensao = clock_timestamp(),
								dt_lib_suspensao = clock_timestamp(),
								nm_usuario_susp = nm_usuario_p
						where	nr_sequencia = nr_seq_item_cpoe_w;
					
					else
						update	cpoe_procedimento
						set		dt_suspensao = clock_timestamp(),
								dt_lib_suspensao = clock_timestamp(),
								nm_usuario_susp = nm_usuario_p
						where	nr_sequencia = nr_seq_item_cpoe_w;
						
					end if;
				

                end if;
            end if;
        end;
    end loop;
	close cpoeprocedimento;	
	  
	update	prescr_recomendacao
	set	ie_suspenso	= 'S',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp(),
		dt_suspensao	= clock_timestamp(),
		nm_usuario_susp	= nm_usuario_p
	where	nr_prescricao	= nr_prescricao_w
	and	coalesce(ie_suspenso,'N') = 'N';

	nr_prescricao_anterior_w := null;
	nr_sequencia_anterior_w := null;

	open C06;
	loop
	fetch C06 into	
		nr_prescricao_anterior_w,
		nr_sequencia_anterior_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */

		update	prescr_recomendacao
		set	dt_extensao  = NULL
		where 	(dt_extensao IS NOT NULL AND dt_extensao::text <> '')
		and	nr_prescricao = nr_prescricao_anterior_w
		and	nr_sequencia = nr_sequencia_anterior_w;

	end loop;
	close C06;

    -- Check if there is CPOE record to suspend
    open cpoerecomendacao;
    loop
	fetch cpoerecomendacao into
        nr_seq_item_cpoe_w;
    EXIT WHEN NOT FOUND; /* apply on cpoerecomendacao */
        begin
            if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
                update	cpoe_recomendacao
                set		dt_suspensao = clock_timestamp(),
                        dt_lib_suspensao = clock_timestamp(),
                        nm_usuario_susp = nm_usuario_p
                where	nr_sequencia = nr_seq_item_cpoe_w;
            end if;
        end;
    end loop;
	close cpoerecomendacao;

	update	prescr_medica
	set	dt_suspensao		= clock_timestamp(),
		nm_usuario_susp		= nm_usuario_p,
		nr_seq_motivo_susp	= CASE WHEN nr_seq_motivo_susp_p=0 THEN null  ELSE nr_seq_motivo_susp_p END ,
		ds_motivo_susp          = ds_motivo_susp_p
	where	nr_prescricao	= nr_prescricao_w;

	update	prescr_gasoterapia
	set	ie_suspenso	= 'S',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp(),
		dt_suspensao = clock_timestamp()
	where	nr_prescricao	= nr_prescricao_w
	and	coalesce(ie_suspenso,'N') = 'N';

    -- Check if there is CPOE record to suspend  
    open cpoegas;
    loop
	fetch cpoegas into
        nr_seq_item_cpoe_w;
    EXIT WHEN NOT FOUND; /* apply on cpoegas */
        begin
            if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
                update	cpoe_gasoterapia
                set		dt_suspensao = clock_timestamp(),
                        dt_lib_suspensao = clock_timestamp(),
                        nm_usuario_susp = nm_usuario_p
                where	nr_sequencia = nr_seq_item_cpoe_w;
            end if;
        end;
    end loop;
	close cpoegas;
	
	cd_motivo_exclusao_w := Obter_Param_Usuario(924, 130, obter_perfil_ativo, nm_usuario_p, 0, cd_motivo_exclusao_w);
	if (cd_motivo_exclusao_w IS NOT NULL AND cd_motivo_exclusao_w::text <> '') and ((cd_motivo_exclusao_w)::numeric  > 0) then
		update	procedimento_paciente a
		set		a.cd_motivo_exc_conta		= (cd_motivo_exclusao_w)::numeric ,
				a.nr_interno_conta		 = NULL
		where	exists (	SELECT	1
							from	conta_paciente b
							where	a.nr_interno_conta	= b.nr_interno_conta
							and		b.ie_status_acerto	= 1)
		and		(a.nr_sequencia_gas IS NOT NULL AND a.nr_sequencia_gas::text <> '')
		and		a.nr_prescricao		= nr_prescricao_w;
	end if;

	update	can_ordem_prod a
	set	a.ie_cancelada	= 'S'
	where	coalesce(a.dt_inicio_preparo::text, '') = ''
	and	nr_prescricao	= nr_prescricao_w;

	update	nut_paciente
	set	dt_suspensao		 = clock_timestamp(),
		nm_usuario_susp		= nm_usuario_p,
		ie_suspenso		= 'S'	
	where	nr_prescricao		= nr_prescricao_w;

	update	NUT_PAC
	set	dt_suspensao		 = clock_timestamp(),
		nm_usuario_susp		= nm_usuario_p,
		ie_suspenso		= 'S'	
	where	nr_prescricao		= nr_prescricao_w;
	
	if (coalesce(ie_desvincula_presc_w,'N') = 'S') then
		update	paciente_atendimento
		set	nr_prescricao 		 = NULL,
			dt_geracao_prescricao  	 = NULL
		where	nr_prescricao		= nr_prescricao_w; /*OS 451950*/
	end if;
	

	/* Rafael em 06/07/2007 OS61944 - Gerar evento ADEP */

	select	obter_atendimento_prescr(nr_prescricao_w)
	into STRICT	nr_atendimento_w
	;

	CALL gerar_alter_prescr_adep(nr_atendimento_w, nr_prescricao_w, ds_motivo_susp_p, nr_seq_motivo_susp_p, nm_usuario_p);
	
	if (ie_desfazer_conduta_w = 'S') then
		CALL nut_desfazer_prescr_nut_susp(nr_prescricao_w, 'TODOS', null, nm_usuario_p);
	end if;
	
	select  coalesce(max(ie_prescricao_alta),'N'),
			max(dt_liberacao)
	into STRICT	ie_prescricao_alta_w,
			dt_liberacao_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_w;
	
	select	coalesce(max(nr_seq_interno),0)
	into STRICT	nr_seq_interno_w
	from	unidade_atendimento
	where	nr_atendimento = nr_atendimento_w;
		
	if (coalesce(ie_prescricao_alta_w,'N') = 'S') and (nr_seq_interno_w > 0) and (ie_retornar_status_leito_w = 'S') and (Wheb_assist_pck.obterParametroFuncao(924,1102) = 'S') then
		
		select 	max(ie_status_unidade)
		into STRICT	ie_status_unidade_ant_w
		from	unidade_atend_hist
		where 	nr_sequencia = (	SELECT	max(nr_sequencia)
									from 	unidade_atend_hist
									where	dt_historico < coalesce(dt_liberacao_w,clock_timestamp())									
									and		ie_status_unidade <> 'A'
									and		nr_seq_unidade = nr_seq_interno_w
								)
		and		nr_seq_unidade = nr_seq_interno_w;
								
		if (ie_status_unidade_ant_w IS NOT NULL AND ie_status_unidade_ant_w::text <> '') then
			update	unidade_atendimento
			set		ie_status_unidade = ie_status_unidade_ant_w
			where	nr_seq_interno = nr_seq_interno_w;
		end if;
		
	end if;
	
	select	count(b.nr_sequencia)
	into STRICT	cont_w
	from	intpd_eventos a,
			intpd_eventos_sistema b
	where	a.nr_sequencia = b.nr_seq_evento
	and		a.ie_evento = 72
	and		a.ie_situacao = 'A'
	and		b.ie_situacao = 'A'  LIMIT 1;
	
	if (cont_w = 1) then
	
		select	count(nr_seq_interno)
		into STRICT	cont_w
		from 	prescr_material
		where 	nr_prescricao = nr_prescricao_w
		and		ie_agrupador = 1
		and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '')  LIMIT 1;
		
		if (cont_w = 1) then
			open C09;
			loop
			fetch C09 into	
				nr_seq_interno_ww,
				cd_material_ww;
			EXIT WHEN NOT FOUND; /* apply on C09 */
				begin
					reg_integracao_w.cd_estab_documento := wheb_usuario_pck.get_cd_estabelecimento;
					select	max(cd_categoria),
						max(cd_convenio)
					into STRICT	reg_integracao_w.cd_convenio,
						reg_integracao_w.cd_categoria
					from	atend_categoria_convenio
					where	nr_seq_interno = obter_atecaco_atendimento(nr_atendimento_w);
					reg_integracao_w.cd_material := cd_material_ww;
					reg_integracao_w.ie_tipo_atendimento := obter_tipo_atendimento(nr_atendimento_w);
					reg_integracao_w := gerar_int_padrao.gravar_integracao('72', nr_seq_interno_ww, nm_usuario_p, reg_integracao_w);
				end;
			end loop;
			close C09;
		end if;
	end if;
	
	select	count(b.nr_sequencia)
	into STRICT	cont_w
	from	intpd_eventos a,
			intpd_eventos_sistema b
	where	a.nr_sequencia = b.nr_seq_evento
	and		a.ie_evento = 126
	and		a.ie_situacao = 'A'
	and		b.ie_situacao = 'A'  LIMIT 1; 	
	
	if (cont_w = 1) then
	
		select	count(nr_seq_interno)
		into STRICT	cont_w
		from 	prescr_procedimento
		where 	nr_prescricao = nr_prescricao_w
		and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '')  LIMIT 1;
		
		if (cont_w = 1) then
			open C10;
			loop
			fetch C10 into	
				nr_seq_interno_ww,
				cd_procedimento_ww,
				nr_seq_exame_w;
			EXIT WHEN NOT FOUND; /* apply on C10 */
				begin
					reg_integracao_w.cd_estab_documento := wheb_usuario_pck.get_cd_estabelecimento;
					select	max(cd_categoria),
						max(cd_convenio)
					into STRICT	reg_integracao_w.cd_convenio,
						reg_integracao_w.cd_categoria
					from	atend_categoria_convenio
					where	nr_seq_interno = obter_atecaco_atendimento(nr_atendimento_w);
					reg_integracao_w.cd_procedimento := cd_procedimento_ww;
					reg_integracao_w.nr_seq_exame := nr_seq_exame_w;
					reg_integracao_w.ie_tipo_atendimento := obter_tipo_atendimento(nr_atendimento_w);
					reg_integracao_w := gerar_int_padrao.gravar_integracao('126', nr_seq_interno_ww, nm_usuario_p, reg_integracao_w);
				end;
			end loop;
			close C10;
		end if;
	end if;	
	
	CALL integracao_dispensario_pck.esteira_enviar_cancel_completa(nr_prescricao_w, nm_usuario_p);
	
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end loop;
close C00;

CALL suspender_servico_nutricao(nr_prescricao_p,nm_usuario_p);
--- Verifica se existe alguma mensagem cadastrada
select	count(*)
into STRICT	ie_verifica_envio_w
from 	rep_ci_suspensao;
--- Se existir envia a mensagem via CI
if (ie_verifica_envio_w > 0) then
	CALL enviar_ci_suspensao_prescricao(nr_prescricao_p,nm_usuario_p);
end if;


/*update	prescr_medica
set	DS_ITENS_PRESCR	= substr(obter_itens_prescr(NR_PRESCRICAO),1,255)
where	nr_prescricao	= nr_prescricao_p;*/
select	max(nr_prescricao_original)
into STRICT	nr_prescricao_original_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

if (nr_prescricao_original_w IS NOT NULL AND nr_prescricao_original_w::text <> '') then
	CALL PLT_ajustar_extensao_prescr(nr_prescricao_original_w,nm_usuario_p);
end if;	

CALL alterar_dt_entrega_prescr(nr_prescricao_p,obter_perfil_ativo,nm_usuario_p);

open c12;
loop
fetch c12 into
  nr_seq_processo_w;
EXIT WHEN NOT FOUND; /* apply on c12 */
  begin

    select coalesce(count(*), 0)
    into STRICT   qt_processo_w
    from   prescr_mat_hor
    where  nr_seq_processo = nr_seq_processo_w
    and    coalesce(dt_suspensao::text, '') = '';
                  
    if (qt_processo_w = 0) then
      update	adep_processo
      set		ie_inconsistencia = 'S',
              dt_cancelamento = clock_timestamp(),
              nm_usuario_cancelamento = nm_usuario_p,
              dt_suspensao = clock_timestamp(),
              nm_usuario_susp = nm_usuario_p
      where	nr_sequencia = nr_seq_processo_w;
    end if;
  end;
end loop;
close c12;

if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'es_CO') then
  CALL suspender_prescr_mipres(
    nr_prescricao_p => nr_prescricao_p,
    nr_seq_item_cpoe_p => null,
    nr_atendimento_p => nr_atendimento_w,
    nr_seq_receita_amb_p => null,
    ie_funcao_origem_p => 'O');
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE suspender_prescricao ( nr_prescricao_p bigint, nr_seq_motivo_susp_p bigint, ds_motivo_susp_p text, nm_usuario_p text, ie_alta_paciente_p text) FROM PUBLIC;

