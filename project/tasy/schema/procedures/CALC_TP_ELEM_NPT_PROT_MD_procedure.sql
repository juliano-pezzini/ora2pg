-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calc_tp_elem_npt_prot_md (ie_Tipo_Elemento_p text, qt_Diaria_p bigint, qt_Elemento_p bigint, qt_Formula_Carb_p bigint, qt_Formula_Lipideo_P bigint, qt_Elem_KgDia_p bigint, ie_Glutamina_p text, qt_Volume_p bigint, qt_Nitrogenio_p bigint, qt_Kcal_Carboidrato_p INOUT bigint, pr_Conc_Glic_Solucao_p INOUT bigint, qt_Nitrogenio_Total_p INOUT bigint, qt_Grama_Proteina_KgDia_p INOUT bigint, qt_Kcal_Proteina_p INOUT bigint, pr_Conc_Proteina_Solucao_p INOUT bigint, qt_Kcal_Lipidio_p INOUT bigint, pr_Conc_Lipidio_Solucao_p INOUT bigint, qt_Kcal_p OUT bigint, qt_Grama_Nitrogenio_p OUT bigint ) IS EXEC_W varchar(200) AS $body$
BEGIN
       if (qtd_Diaria_p IS NOT NULL AND qtd_Diaria_p::text <> '') then
         return;
       else
         return;
       end if;
    end;
BEGIN
      if upper(ie_Tipo_Elemento_p) = 'C' then
          qt_Kcal_p              :=  coalesce(obter_diaria_elemento(qt_Diaria_p,qt_Elemento_p),0) * qt_Formula_Carb_p;

          qt_Kcal_Carboidrato_p  := coalesce(qt_Kcal_Carboidrato_p,0) + coalesce(qt_Kcal_p,0);
          pr_Conc_Glic_Solucao_p := coalesce(pr_Conc_Glic_Solucao_p,0) + coalesce(obter_diaria_elemento(qt_Diaria_p,qt_Elemento_p),0);

      elsif upper(ie_Tipo_Elemento_p) = 'P' then

          if upper(ie_Glutamina_p) = 'S' then
            begin
              EXEC_W := 'CALL OBTER_CHECK_DIV_DIVID_MD(:1,:2) INTO :result';

              EXECUTE EXEC_W USING IN coalesce(obter_diaria_elemento(qt_Diaria_p,qt_Elemento_p),0),
                                             IN 6.25,
                                             OUT qt_Grama_Nitrogenio_p;
              exception
                when others then
                    qt_Grama_Nitrogenio_p := null;
            end;

            qt_Kcal_p := coalesce(obter_diaria_elemento(qt_Diaria_p,qt_Elemento_p),0) * 4;

          else
             if qt_Nitrogenio_p = 0 then
                dividendo_w := qt_Volume_p * 1.6;
             else
                dividendo_w := qt_Volume_p * qt_Nitrogenio_p;
             end if;
            
             begin
                EXEC_W := 'CALL OBTER_CHECK_DIV_DIVID_MD(:1,:2) INTO :result';

                EXECUTE EXEC_W USING IN dividendo_w,
                                               IN 100,
                                               OUT qt_Grama_Nitrogenio_p;
             exception
                when others then
                    qt_Grama_Nitrogenio_p := null;
             end;

              qt_Kcal_p := qt_Grama_Nitrogenio_p * 6.25 * 4;
          end if;

          qt_Nitrogenio_Total_p      := coalesce(qt_Nitrogenio_Total_p,0) + coalesce(qt_Grama_Nitrogenio_p,0);
          qt_Grama_Proteina_KgDia_p  := coalesce(qt_Grama_Proteina_KgDia_p,0) + coalesce(qt_Elem_KgDia_p,0);
          qt_Kcal_Proteina_p         := coalesce(qt_Kcal_Proteina_p,0) + coalesce(qt_Kcal_p,0);
          pr_Conc_Proteina_Solucao_p := coalesce(pr_Conc_Proteina_Solucao_p,0) + coalesce(obter_diaria_elemento(qt_Diaria_p,qt_Elemento_p),0);

      elsif upper(ie_Tipo_Elemento_p) = 'L' then
          qt_Kcal_p	                := qt_Elemento_p * qt_Formula_Lipideo_P;

          qt_Kcal_Lipidio_p         := coalesce(qt_Kcal_Lipidio_p,0) + coalesce(qt_Kcal_p,0);
          pr_Conc_Lipidio_Solucao_p := coalesce(pr_Conc_Lipidio_Solucao_p,0) + coalesce(qt_Elemento_p,0);
      end if;

      qt_Kcal_p             := coalesce(qt_Kcal_p,0);
      qt_Grama_Nitrogenio_p := coalesce(qt_Grama_Nitrogenio_p,0);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calc_tp_elem_npt_prot_md (ie_Tipo_Elemento_p text, qt_Diaria_p bigint, qt_Elemento_p bigint, qt_Formula_Carb_p bigint, qt_Formula_Lipideo_P bigint, qt_Elem_KgDia_p bigint, ie_Glutamina_p text, qt_Volume_p bigint, qt_Nitrogenio_p bigint, qt_Kcal_Carboidrato_p INOUT bigint, pr_Conc_Glic_Solucao_p INOUT bigint, qt_Nitrogenio_Total_p INOUT bigint, qt_Grama_Proteina_KgDia_p INOUT bigint, qt_Kcal_Proteina_p INOUT bigint, pr_Conc_Proteina_Solucao_p INOUT bigint, qt_Kcal_Lipidio_p INOUT bigint, pr_Conc_Lipidio_Solucao_p INOUT bigint, qt_Kcal_p OUT bigint, qt_Grama_Nitrogenio_p OUT bigint ) IS EXEC_W varchar(200) FROM PUBLIC;

