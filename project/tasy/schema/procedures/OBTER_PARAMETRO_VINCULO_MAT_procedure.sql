-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function obter_parametro_vinculo_mat as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE obter_parametro_vinculo_mat ( cd_material_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ie_tipo_p text, ie_opcao_p bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'SELECT * FROM obter_parametro_vinculo_mat_atx ( ' || quote_nullable(cd_material_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(ds_erro_p) || ',' || quote_nullable(ie_tipo_p) || ',' || quote_nullable(ie_opcao_p) || ' )';
	SELECT v_ret INTO ds_erro_p FROM dblink(v_conn_str, v_query) AS p (v_ret text);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE obter_parametro_vinculo_mat_atx ( cd_material_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ie_tipo_p text, ie_opcao_p bigint) AS $body$
DECLARE


ie_incluir_w			varchar(1):= 'S';
ie_alterar_w			varchar(1):= 'S';
ie_excluir_w			varchar(1):= 'S';
ds_erro_w			varchar(255) := '';
qt_existe_regra_w		varchar(1);
cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w		integer;

c01 CURSOR FOR
	SELECT	coalesce(ie_incluir,'N'),
		coalesce(ie_alterar,'N'),
		coalesce(ie_excluir,'N')
	from	conv_regra_vinc_mat
	where	ie_situacao = 'A'
	and	coalesce(cd_perfil, coalesce(obter_perfil_ativo,0)) = coalesce(obter_perfil_ativo,0)
	and	((coalesce(cd_grupo_material::text, '') = '') or (coalesce(cd_grupo_material,0) = coalesce(cd_grupo_material_w,0)))
	and	((coalesce(cd_subgrupo_material::text, '') = '') or (coalesce(cd_subgrupo_material,0) = coalesce(cd_subgrupo_material_w,0)))
	and	((coalesce(cd_classe_material::text, '') = '') or (coalesce(cd_classe_material,0) = coalesce(cd_classe_material_w,0)))
	and	((coalesce(cd_material::text, '') = '') or (coalesce(cd_material,0) = coalesce(cd_material_p,0)))
	and	coalesce(nm_usuario_filtro, coalesce(nm_usuario_p,'0')) = coalesce(nm_usuario_p,'0')
	and	((ie_tipo = 'A') or (ie_tipo = ie_tipo_p))
	order by
		coalesce(nm_usuario_filtro,' '),
		coalesce(cd_perfil,0),
		coalesce(cd_material,0),
		coalesce(cd_classe_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_grupo_material,0);
BEGIN

select	coalesce(max('S'),'N')
into STRICT	qt_existe_regra_w
from	conv_regra_vinc_mat;

if (qt_existe_regra_w = 'S') then

	select	coalesce(cd_grupo_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_classe_material,0)
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w
	from	estrutura_material_v
	where	cd_material = cd_material_p;

	open c01;
	loop
		fetch c01 into
			ie_incluir_w,
			ie_alterar_w,
			ie_excluir_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			ie_incluir_w	:= ie_incluir_w;
			ie_alterar_w	:= ie_alterar_w;
			ie_excluir_w	:= ie_excluir_w;

			end;
	end loop;
	close c01;

	if (ie_opcao_p = 1) and (ie_incluir_w = 'N') then
		ds_erro_w	:= wheb_mensagem_pck.get_texto(279934);
	elsif (ie_opcao_p = 2) and (ie_alterar_w = 'N') then
		ds_erro_w	:= wheb_mensagem_pck.get_texto(279936);
	elsif (ie_opcao_p = 3) and (ie_excluir_w = 'N') then
		ds_erro_w	:= wheb_mensagem_pck.get_texto(279938);
	end if;

end if;

ds_erro_p := ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_parametro_vinculo_mat ( cd_material_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ie_tipo_p text, ie_opcao_p bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE obter_parametro_vinculo_mat_atx ( cd_material_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ie_tipo_p text, ie_opcao_p bigint) FROM PUBLIC;

