-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tributo_venc_repasse (nr_seq_venc_p bigint) AS $body$
DECLARE


cd_estabelecimento_w		integer;
vl_tributo_w			double precision;
vl_repasse_w			double precision;
vl_base_calculo_w		double precision;
vl_minimo_tributo_w		double precision;
vl_base_retido_outro_w		double precision;
cd_tributo_w			bigint;
nr_seq_venc_trib_w		bigint;
cont_w				smallint;
dt_emissao_w			timestamp;
dt_base_trib_w			timestamp;
dt_vencimento_w			timestamp;
dt_venc_titulo_w		timestamp;
pr_aliquota_w			double precision;
pr_base_calculo_w		double precision;
cd_beneficiario_w		varchar(14);
cd_conta_contabil_w		varchar(20);
cd_cond_pagto_w			bigint;
nm_usuario_w			varchar(15);
ds_erro_w			varchar(255);
ie_tipo_tributacao_w		varchar(255);
ie_pago_prev_rep_w		varchar(255);
cd_cgc_repasse_w		varchar(14);
qt_venc_w			integer;
ds_venc_w			varchar(2000);
vl_trib_acum_w			double precision;
nr_seq_trans_reg_w		bigint;
nr_seq_trans_baixa_w		bigint;
cd_conta_financ_w		bigint;
nr_repasse_terceiro_w		bigint;
vl_pago_w			double precision;
vl_base_calculo_paga_w		double precision;
cd_pessoa_fisica_w		varchar(10);
vl_nao_retido_w			double precision		:= 0;
vl_menor_minimo_w		double precision		:= 0;
vl_total_trib_w			double precision		:= 0;
nr_seq_terceiro_w		bigint;
ie_vencimento_w			varchar(01);
ie_tipo_tributo_w		varchar(15);
ie_acumulativo_w		varchar(1);
vl_soma_trib_nao_retido_w	double precision;
vl_soma_base_nao_retido_w	double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_adic_w		double precision;
vl_tributo_a_reter_w		double precision;
vl_minimo_base_w		double precision;
vl_trib_adic_w			double precision;
vl_base_a_reter_w		double precision;
vl_trib_nao_retido_w		double precision;
vl_base_adic_w			double precision;
vl_base_nao_retido_w		double precision;
vl_teto_base_w			double precision;
vl_trib_anterior_w		double precision;
vl_vencimento_w			double precision;
vl_total_base_w			double precision;
vl_inss_w			double precision	:= 0;
vl_total_vencimentos_w		double precision;
ie_irpf_w			varchar(3);
ie_apuracao_piso_w		varchar(3);
dt_tributo_w			timestamp;
vl_reducao_w			double precision;
vl_desc_dependente_w		double precision;
qt_dependente_w			smallint;
cd_darf_w			varchar(20);
dt_referencia_w			timestamp;
cd_variacao_w			varchar(50);
ie_periodicidade_w		varchar(50);
ie_cnpj_w			varchar(50);
cd_cnpj_raiz_w			varchar(50);
vl_base_pago_adic_base_w	double precision;
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
cd_tributo_pf_w			varchar(10);
vl_base_tributo_pf_w		double precision;
vl_tributo_pf_w			double precision;
cd_pessoa_fisica_pf_w		varchar(10);
qt_registro_w			integer;
ie_vencimento_pf_w		varchar(01);
ds_emp_retencao_w		varchar(255);
ie_tipo_data_w			varchar(5);
nr_ccm_w			bigint	:= null;
ds_irrelevante_w		varchar(4000);
nr_seq_tipo_repasse_w		bigint;
vl_item_sem_trib_w		double precision;
vl_vencimento_mat_w		double precision;
nr_seq_regra_w			bigint;
ie_mat_repasse_w		varchar(5);
ie_restringe_estab_w		varchar(1);
ie_venc_repasse_w		varchar(255);
qt_pago_outros_w		bigint;
vl_adiantamento_w		double precision;
nr_seq_classe_w			bigint;
cd_tipo_baixa_neg_w		integer;
ds_venc_ww			varchar(2000);
cd_empresa_w			smallint;
ie_tributo_pessoa_w		varchar(1);
ie_gerou_trib_pf_w		varchar(1)	:= 'N';
dt_venc_tributo_w		timestamp;
cd_estab_regra_w		bigint;
cd_empresa_regra_w		bigint;
vl_trib_cad_pf_w		pessoa_fisica_trib.vl_tributo%type;
vl_teto_base_calc_w		double precision;
ie_considera_valor_pf_w		tributo.ie_considera_valor_pf%type;
nr_seq_regra_irpf_w		regra_calculo_irpf.nr_sequencia%type;
--vl_base_calculo_tirbuto_w	number(15,2);
ie_desc_desp_cartao_w		tributo.ie_desc_desp_cartao%type;
vl_desp_cartao_w		repasse_terceiro_venc.vl_desp_cartao%type;
dt_dados_trib_w			timestamp;

C01 CURSOR FOR
SELECT	cd_tributo,
	ie_vencimento,
	ie_tipo_tributo,
	IE_APURACAO_PISO,
	ie_cnpj,
	ie_restringe_estab,
	coalesce(ie_venc_repasse, 'N'),
	coalesce(ie_considera_valor_pf,'N'),
	coalesce(ie_desc_desp_cartao, 'S')
from	Tributo
where	ie_conta_pagar	= 'S'
and	ie_situacao		= 'A'
and	((ie_pf_pj = 'A') or
	(ie_pf_pj = 'PF' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or
	(ie_pf_pj = 'PJ' AND cd_cgc_repasse_w IS NOT NULL AND cd_cgc_repasse_w::text <> ''))
and (coalesce(nr_ccm_w::text, '') = '' or coalesce(ie_ccm,'S') = 'S')
and	((coalesce(IE_TIPO_TRIBUTACAO_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
and	coalesce(IE_BAIXA_TITULO,'N') = 'N'
order	by CASE WHEN ie_tipo_tributo='INSS' THEN 1  ELSE 2 END;

C02 CURSOR FOR
SELECT	b.cd_tributo,
	b.vl_base_calculo,
	b.vl_tributo,
	b.dt_inicio_vigencia,
	b.dt_fim_vigencia,
	b.cd_pessoa_fisica,
	a.ie_vencimento,
	b.ds_emp_retencao,
	b.ie_tipo_data,
	coalesce(b.ie_pago_prev_rep, 'P')
from	pessoa_fisica_trib b,
	tributo a
where	b.cd_tributo 		= a.cd_tributo
and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_w
and	((b.cd_estabelecimento = cd_estabelecimento_w) or (coalesce(b.cd_estabelecimento::text, '') = ''))
and	CASE WHEN b.ie_tipo_data='E' THEN dt_emissao_w WHEN b.ie_tipo_data='V' THEN dt_venc_titulo_w END  between b.dt_inicio_vigencia and dt_fim_vigencia
and (coalesce(nr_ccm_w::text, '') = '' or coalesce(a.ie_ccm,'S') = 'S');


BEGIN

select	a.vl_vencimento,
	b.cd_estabelecimento,
	a.dt_vencimento,
	b.dt_mesano_referencia,
	c.cd_cgc,
	c.cd_pessoa_fisica,
	a.nm_usuario,
	b.nr_seq_terceiro,
	b.nr_repasse_terceiro,
	a.dt_vencimento,
	obter_cnpj_raiz(c.cd_cgc),
	b.nr_seq_tipo,
	coalesce(a.vl_repasse_mat,0),
	coalesce(a.vl_adiantamento,0),
	coalesce(b.dt_base_trib, clock_timestamp()),
	d.cd_empresa,
	coalesce(a.vl_desp_cartao,0)
into STRICT	vl_vencimento_w,
	cd_estabelecimento_w,
	dt_venc_titulo_w,
	dt_emissao_w,
	cd_cgc_repasse_w,
	cd_pessoa_fisica_w,
	nm_usuario_w,
	nr_seq_terceiro_w,
	nr_repasse_terceiro_w,
	dt_tributo_w,
	cd_cnpj_raiz_w,
	nr_seq_tipo_repasse_w,
	vl_vencimento_mat_w,
	vl_adiantamento_w,
	dt_base_trib_w,
	cd_empresa_w,
	vl_desp_cartao_w
from	estabelecimento d,
	terceiro c,
	Repasse_terceiro b,
	repasse_terceiro_venc a
where	b.cd_estabelecimento	= d.cd_estabelecimento
and	a.nr_sequencia		= nr_seq_venc_p
and	a.nr_repasse_terceiro	= b.nr_repasse_terceiro
and	b.nr_seq_terceiro	= c.nr_sequencia;

select	coalesce(max(a.ie_tributo_pessoa),'S')
into STRICT	ie_tributo_pessoa_w
from	parametro_faturamento a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

vl_vencimento_w	:= coalesce(vl_vencimento_w,0) + vl_adiantamento_w;

select	max(IE_TIPO_TRIBUTACAO)
into STRICT	IE_TIPO_TRIBUTACAO_w
from	pessoa_juridica
where	cd_cgc	= cd_cgc_repasse_w;

/* Francisco - OS 166441 - 17/09/2009 */

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	select	max(nr_ccm)
	into STRICT	nr_ccm_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
end if;

select	sum(a.vl_vencimento)
into STRICT	vl_total_vencimentos_w
from	repasse_terceiro_venc a
where	a.nr_repasse_terceiro	= nr_repasse_terceiro_w;

-- dsantos em 01/03/2011 - OS290975. Criado o campo "Somar a base de calculo de tributos" nos itens de repasse.
select	coalesce(sum(a.vl_repasse),0)
into STRICT	vl_item_sem_trib_w
from	repasse_terceiro_item a
where	a.nr_repasse_terceiro	= nr_repasse_terceiro_w
and	coalesce(a.ie_partic_tributo,'S')	= 'N';

if (vl_item_sem_trib_w <> 0) and (vl_total_vencimentos_w <> 0) then
	vl_item_sem_trib_w	:= vl_vencimento_w * (vl_item_sem_trib_w/vl_total_vencimentos_w);
	vl_vencimento_w		:= vl_vencimento_w - vl_item_sem_trib_w;
end if;

open C02;
loop
fetch C02 into
	cd_tributo_pf_w,
	vl_base_tributo_pf_w,
	vl_tributo_pf_w,
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	cd_pessoa_fisica_pf_w,
	ie_vencimento_pf_w,
	ds_emp_retencao_w,
	ie_tipo_data_w,
	ie_pago_prev_rep_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	repasse_terc_venc_trib a,
		repasse_terceiro_venc b,
		repasse_terceiro c,
		terceiro d
	where	a.nr_seq_rep_venc			= b.nr_sequencia
	and	b.nr_repasse_terceiro			= c.nr_repasse_terceiro
	and	c.nr_seq_terceiro			= d.nr_sequencia
	and	((c.cd_estabelecimento = cd_estabelecimento_w) or (coalesce(c.cd_estabelecimento::text, '') = ''))
	and	a.cd_tributo				= cd_tributo_pf_w
	and	d.cd_pessoa_fisica			= cd_pessoa_fisica_pf_w
	and	pkg_date_utils.start_of(c.dt_mesano_referencia, 'MONTH', 0) = pkg_date_utils.start_of(CASE WHEN ie_tipo_Data_w='E' THEN dt_emissao_w WHEN ie_tipo_Data_w='V' THEN dt_venc_titulo_w END , 'MONTH', 0);
		
	if (qt_registro_w = 0) then

		ie_gerou_trib_pf_w	:= 'S';

		insert	into repasse_terc_venc_trib(nr_sequencia,
				cd_tributo,
				dt_atualizacao, 
				dt_atualizacao_nrec,
				ie_pago_prev,
				nm_usuario,
				nm_usuario_nrec,
				dt_imposto, 
				nr_seq_rep_venc,
				pr_tributo,
				vl_base_adic,
				vl_base_calculo,
				vl_base_nao_retido, 
				vl_imposto,
				vl_nao_retido,
				vl_trib_adic)
			values (nextval('repasse_terc_venc_trib_seq'), 
				cd_tributo_pf_w,
				clock_timestamp(),
				clock_timestamp(),
				ie_pago_prev_rep_w,
				nm_usuario_w,
				nm_usuario_w,
				trunc(CASE WHEN ie_tipo_data_w='E' THEN dt_emissao_w WHEN ie_tipo_data_w='V' THEN dt_venc_titulo_w END ,'dd'), 
				nr_seq_venc_p,
				0,
				0,
				vl_base_tributo_pf_w,
				0,
				vl_tributo_pf_w,
				0,
				0);	
		
	end if;
	end;
end loop;
close c02;

vl_trib_acum_w			:= 0;

if (coalesce(ie_gerou_trib_pf_w,'N') = 'N') or (coalesce(ie_tributo_pessoa_w,'S') = 'S') then

	OPEN C01;
	LOOP
	FETCH C01 into
		cd_tributo_w,
		ie_vencimento_w,
		ie_tipo_tributo_w,
		ie_apuracao_piso_w,
		ie_cnpj_w,
		ie_restringe_estab_w,
		ie_venc_repasse_w,
		ie_considera_valor_pf_w,
		ie_desc_desp_cartao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		vl_base_calculo_w		:= vl_vencimento_w;
		if (ie_desc_desp_cartao_w = 'N') then	/* Edgar  13/07/2015, OS 858764,  calcular o tributo do repasse com a despesa de cartao imbutida */
			vl_base_calculo_w	:= vl_vencimento_w + vl_desp_cartao_w;
		end if;
		
		pr_aliquota_w		:= 0;

		select	count(*)
		into STRICT	qt_pago_outros_w
		from	repasse_terc_venc_trib
		where	nr_seq_rep_venc	= nr_seq_venc_p
		and	cd_tributo	= cd_tributo_w
		and	ie_pago_prev	= 'P';

		--[INICIO]>>>>>>>>>> DATA PARA GERACAO DE TRIBUTO <<<<<<<<<<--
		/* 
		Opcoes: 
			V = Vencimento titulo
			R = Registro compromisso
			C = Data contabil ou Reg. compromisso
			B = Data da baixa (quando o tributo for gerado pela baixa)
			S = Data da baixa (quando trib gerado na baixa) ou Vencimento titulo
		Local no sistema = Shift+f11 > Aplicacao principal > Cadastro Gerais > Tributos
		Tabela = TRIBUTO
		Atributo = IE_VENCIMENTO
		*/
		if (ie_vencimento_w	= 'V') then
			dt_venc_tributo_w	:= dt_tributo_w;
		elsif (ie_vencimento_w	= 'C') then
			dt_venc_tributo_w	:= coalesce(dt_tributo_w,dt_emissao_w);
		else
			dt_venc_tributo_w	:= dt_emissao_w;
		end if;
		--[FIM]>>>>>>>>>> DATA PARA GERACAO DE TRIBUTO <<<<<<<<<<--
		
			
		SELECT * FROM OBTER_DADOS_TRIB_TIT_PAGAR(
				cd_tributo_w, cd_estabelecimento_w, cd_cgc_repasse_w, cd_pessoa_fisica_w, cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, dt_venc_tributo_w, cd_variacao_w, ie_periodicidade_w, 'R', null, null, null, null, nr_seq_tipo_repasse_w, nr_seq_regra_w, null, qt_pago_outros_w, nr_seq_classe_w, cd_tipo_baixa_neg_w, vl_base_calculo_w, 'N', null, null, null, null) INTO STRICT cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_regra_w, nr_seq_classe_w, cd_tipo_baixa_neg_w;

		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then

			select	coalesce(max(ie_mat_repasse),'S'),
				coalesce(max(PR_BASE_CALCULO),0),
				max(cd_estabelecimento),
				max(cd_empresa)
			into STRICT	ie_mat_repasse_w,
				PR_BASE_CALCULO_w,
				cd_estab_regra_w,
				cd_empresa_regra_w
			from 	tributo_conta_pagar
			where	nr_sequencia	= nr_seq_regra_w;

			if (coalesce(ie_mat_repasse_w,'S') = 'N') then
				vl_base_calculo_w	:= vl_base_calculo_w - vl_vencimento_mat_w;
			end if;

			if (coalesce(PR_BASE_CALCULO_w,0) <> 0) then	-- Edgar 02/12/2011, OS 386178, incluido este tratamento wheb nao recomenda
				vl_base_calculo_w	:= vl_base_calculo_w * (PR_BASE_CALCULO_w / 100);
			end if;
		end if;

		if (pr_aliquota_w > 0) then

			/*Anderson 17/08/2005 - OS 22146 */

			ie_irpf_w		:= 'N';
			if (ie_tipo_tributo_w = 'IR') then	-- Calcular Reducao base IRPF e saldo menos INSS  
				if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then

					ie_irpf_w	:= 'S';

					select	coalesce(qt_dependente,0)
					into STRICT	qt_dependente_w
					from	pessoa_fisica
					where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

					select	coalesce(sum(a.VL_IMPOSTO),0)
					into STRICT	vl_inss_w
					from	tributo b,
						repasse_terc_venc_trib a
					where	a.cd_tributo		= b.cd_tributo
					and	b.ie_tipo_tributo	= 'INSS'
					and	a.nr_seq_rep_venc	= nr_seq_venc_p
					and	a.ie_pago_prev	= 'V';

				end if;
				
				vl_base_calculo_w		:= vl_base_calculo_w - vl_inss_w;

			elsif (ie_tipo_tributo_w = 'ISRDOM') then
				if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
					select	coalesce(qt_dependente,0)
					into STRICT	qt_dependente_w
					from	pessoa_fisica
					where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
					
					ie_irpf_w	:= 'S';
				end if;
			end if;
			 /*Fim alteracao 17/08/2005 - OS 22146 */

			vl_tributo_w			:= vl_base_calculo_w * pr_aliquota_w / 100;
			
			--Esta data e utilizada para retornar os dados da obter_valores_tributo
			--Nao podemos utilizar o dt_vencimento_w, pois antes de chamar a obter_valores_tributo ele passa pela calcular_vencimento
			dt_dados_trib_w	:= null;
			
			if (IE_VENC_REPASSE_w = 'S') then
				dt_vencimento_w		:= dt_base_trib_w;
			else
				if (ie_vencimento_w = 'V') then
					dt_vencimento_w	:= coalesce(dt_venc_titulo_w,clock_timestamp());
				elsif (ie_vencimento_w = 'C') then
					/* dt_vencimento_w	:= nvl(dt_venc_titulo_w,nvl(dt_emissao_w,sysdate)); Edgar 18/03/2010, OS 203326, troquei pela linha de baixo para tratar pela data de emissao "Registro de compromissso" */

					dt_vencimento_w		:= coalesce(dt_emissao_w,clock_timestamp());
				else
					dt_vencimento_w	:= coalesce(dt_emissao_w,clock_timestamp());
				end if;
			end if;
			
			dt_dados_trib_w	:= dt_vencimento_w;
			
			if (cd_cond_pagto_w IS NOT NULL AND cd_cond_pagto_w::text <> '') then
	--			calcular_vencimento(cd_estabelecimento_w, cd_cond_pagto_w, dt_venc_titulo_w, qt_venc_w, ds_venc_w); Edgar 07/12/2006 OS 46069
				SELECT * FROM calcular_vencimento(cd_estabelecimento_w, cd_cond_pagto_w, dt_vencimento_w, qt_venc_w, ds_venc_w) INTO STRICT qt_venc_w, ds_venc_w;	
				
				if (qt_venc_w = 1) then
					ds_venc_ww := ds_venc_w;
					if (substr(ds_venc_w,4,2) = '02') and (substr(ds_venc_w,1,2) > '28')then
						ds_venc_ww	:= '28/' || substr(ds_venc_w,4,7);
					end if;
					dt_vencimento_w	:= to_date(substr(ds_venc_ww,1,10),'dd/mm/yyyy');
				end if;

			end if;
			
			select	/*+ USE_CONCAT */			-- Edgar 08/09/2009, OS 160898, coloquei o use_concat para transformar os OR em UNION
				coalesce(sum(VL_SOMA_TRIB_NAO_RETIDO),0),
				coalesce(sum(VL_SOMA_BASE_NAO_RETIDO),0),
				coalesce(sum(VL_SOMA_TRIB_ADIC),0),
				coalesce(sum(VL_SOMA_BASE_ADIC),0),
				coalesce(sum(vl_tributo),0),
				coalesce(sum(vl_total_base),0),
				coalesce(sum(vl_reducao),0)
			into STRICT	vl_soma_trib_nao_retido_w,
				vl_soma_base_nao_retido_w,
				vl_soma_trib_adic_w,
				vl_soma_base_adic_w,
				vl_trib_anterior_w,
				vl_total_base_w,
				vl_reducao_w
			from	VALORES_TRIBUTO_V
			where	coalesce(cd_empresa,coalesce(cd_empresa_w,0)) = coalesce(cd_empresa_w,0)
			and	cd_tributo			= cd_tributo_w
			and (ie_origem_valores		= 'RT'  or IE_APURACAO_PISO_w = 'S')
			and	coalesce(cd_pessoa_fisica, CASE WHEN ie_cnpj_w=Wheb_mensagem_pck.get_texto(800047) THEN  cd_cgc  ELSE cd_cnpj_raiz END )	= coalesce(cd_pessoa_fisica_w, CASE WHEN ie_cnpj_w=Wheb_mensagem_pck.get_texto(800047) THEN  cd_cgc_repasse_w  ELSE cd_cnpj_raiz_w END )
			and	pkg_date_utils.start_of(dt_tributo, 'MONTH', 0)	= pkg_date_utils.start_of(dt_venc_tributo_w, 'MONTH', 0)
			and	((ie_restringe_estab_w		= 'N') or (cd_estabelecimento		= cd_estabelecimento_w) or (cd_estab_financeiro		= cd_estabelecimento_w) or (coalesce(cd_estab_regra_w::text, '') = '' and cd_empresa = cd_empresa_regra_w))
			and (IE_APURACAO_PISO_w		= 'N' or
				IE_APURACAO_PISO_w		= ie_base_calculo)
			and	ie_baixa_titulo			= 'N';

			select	coalesce(sum(vl_imposto),0),
				coalesce(sum(vl_base_calculo),0)
			into STRICT	vl_pago_w,
				vl_base_calculo_paga_w
			from	repasse_terc_venc_trib
			where	nr_seq_rep_venc	= nr_seq_venc_p
			and	cd_tributo	= cd_tributo_w
			and	ie_pago_prev	= 'P';

			select	coalesce(sum(vl_base_calculo),0)
			into STRICT	VL_BASE_RETIDO_OUTRO_w
			from	repasse_terc_venc_trib
			where	nr_seq_rep_venc	= nr_seq_venc_p
			and	cd_tributo	= cd_tributo_w
			and	ie_pago_prev	= 'R';

			select	coalesce(sum(vl_base_calculo),0)
			into STRICT	vl_base_pago_adic_base_w
			from	repasse_terc_venc_trib
			where	nr_seq_rep_venc	= nr_seq_venc_p
			and	cd_tributo	= cd_tributo_w
			and	ie_pago_prev	= 'S';
			
			/*828431 -  Alterado para nao somar as bases ja retidas em outras empresas, considerar somente o valor do repasse como base na REPASSE_TERC_VENC_TRIB*/

			--vl_base_calculo_tirbuto_w	:= nvl(vl_base_calculo_w,0);
			
			SELECT * FROM obter_valores_tributo(	ie_acumulativo_w, pr_aliquota_w, vl_minimo_base_w, vl_minimo_tributo_w, vl_soma_trib_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_nao_retido_w, vl_soma_base_adic_w, vl_base_calculo_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_teto_base_w, vl_trib_anterior_w, ie_irpf_w, vl_total_base_w, vl_reducao_w, vl_desc_dependente_w, qt_dependente_w, vl_base_calculo_paga_w, vl_base_pago_adic_base_w, vl_base_retido_outro_w, obter_outras_reducoes_irpf(cd_pessoa_fisica_w, cd_estabelecimento_w, dt_vencimento_w), dt_dados_trib_w, nr_seq_regra_irpf_w, cd_tributo_w) INTO STRICT pr_aliquota_w, vl_base_calculo_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_reducao_w, vl_desc_dependente_w, nr_seq_regra_irpf_w;
			
			
			if (ie_considera_valor_pf_w	= 'S') then
				
				select	obter_valor_pf_trib(cd_tributo_w,cd_pessoa_fisica_w,dt_tributo_w,cd_estabelecimento_w,nr_seq_venc_p)
				into STRICT	vl_trib_cad_pf_w
				;
				
				if (vl_trib_cad_pf_w	<> 0) then
					vl_teto_base_calc_w	:=	(vl_teto_base_w * dividir_sem_round((pr_aliquota_w)::numeric,100));
					if (vl_trib_cad_pf_w	>= vl_teto_base_calc_w) then
						vl_tributo_w	:= 0;
					elsif	((vl_trib_cad_pf_w + vl_tributo_w) > vl_teto_base_calc_w) then
						vl_tributo_w	:= vl_tributo_w	- ((vl_trib_cad_pf_w + vl_tributo_w) - vl_teto_base_calc_w);
					end if;
					
				end if;
			end if;			
		
			if (vl_tributo_w >= 0) then

				insert into Repasse_terc_venc_trib(nr_sequencia,
					nr_seq_rep_venc,
					cd_tributo,
					dt_atualizacao,
					nm_usuario,
					dt_imposto,
					vl_base_calculo,
					vl_imposto,
					pr_tributo,
					cd_beneficiario,
					cd_conta_financ,
					nr_seq_trans_reg,
					nr_seq_trans_baixa,
					vl_nao_retido,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_base_adic,
					ie_pago_prev,
					vl_reducao,
					vl_desc_base,
					cd_darf,
					dt_atualizacao_nrec,
					nm_usuario_nrec,				/* Rafael. 15/01/07. OS48099 */
					ie_periodicidade,
					cd_variacao)
				values (nextval('repasse_terc_venc_trib_seq'),
					nr_seq_venc_p,
					cd_tributo_w,
					clock_timestamp(),
					nm_usuario_w,
					dt_vencimento_w,
					--decode(ie_tipo_tributo_w, 'IR', vl_base_calculo_tirbuto_w,vl_base_calculo_w),
					vl_base_calculo_w,
					vl_tributo_w,
					pr_aliquota_w,
					cd_beneficiario_w,
					cd_conta_financ_w,
					nr_seq_trans_reg_w,
					nr_seq_trans_baixa_w,
					vl_trib_nao_retido_w,
					vl_base_nao_retido_w,
					vl_trib_adic_w,
					vl_base_adic_w,
					'V',
					vl_reducao_w,
					vl_desc_dependente_w,
					cd_darf_w,
					clock_timestamp(),
					nm_usuario_w,
					ie_periodicidade_w,
					cd_variacao_w);


				select	coalesce(sum(CASE WHEN a.ie_soma_diminui='S' THEN (coalesce(vl_tributo_w,0) * - 1) WHEN a.ie_soma_diminui='D' THEN  coalesce(vl_tributo_w,0)  ELSE 0 END ),0)
				into STRICT	vl_tributo_w
				from	tributo a
				where	a.cd_tributo		= cd_tributo_w;

				vl_trib_acum_w	:= vl_trib_acum_w + vl_tributo_w;
			end if;
		end if;
	END LOOP;
	CLOSE C01;

end if;

update	repasse_terceiro_venc
set	vl_liquido	= vl_vencimento - vl_ir - vl_imposto_munic - vl_trib_acum_w
where	nr_sequencia	= nr_seq_venc_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tributo_venc_repasse (nr_seq_venc_p bigint) FROM PUBLIC;

