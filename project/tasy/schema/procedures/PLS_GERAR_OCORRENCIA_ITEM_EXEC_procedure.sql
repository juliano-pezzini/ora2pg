-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ocorrencia_item_exec ( ie_tipo_item_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, nr_seq_segurado_p bigint, nr_seq_exec_item_p bigint, nr_seq_proc_p bigint, nr_seq_mat_p bigint, ie_exige_medico_p text, nr_seq_grupo_contrato_p bigint, dt_referencia_p timestamp, qt_item_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_ocorrencia_p INOUT text) AS $body$
DECLARE


nr_seq_regra_item_w		bigint;
ie_nao_informado_w		varchar(10);
nr_seq_ocorrencia_w		bigint;
nr_seq_motivo_glosa_w		bigint;
ie_tipo_item_w			varchar(10);
ie_tipo_conta_w			varchar(10);
vl_item_w				double precision;
ie_tipo_despesa_w			varchar(1)	:= null;
ie_nota_fiscal_w			varchar(1)	:= null;
ie_fornecedor_w			varchar(1)	:= null;
nr_seq_estrutura_w			bigint;
ie_estrutura_w			varchar(1)	:= 'S';
cd_procedimento_w		bigint;
nr_seq_restricao_w			bigint;
qt_minima_w			bigint;
qt_maxima_w			bigint;
ie_consiste_qtd_w			varchar(1)	:= 'N';
ie_consiste_sexo_w			varchar(1)	:= 'N';
ie_consiste_idade_w		varchar(1)	:= 'N';
ie_sexo_seg_w			varchar(1);
ie_idade_seg_w			integer;
ie_sexo_mat_w			varchar(2);
qt_idade_min_mat_w		integer;
qt_idade_max_mat_w		integer;
ie_bloqueia_custo_op_w		varchar(5)	:= 'N';
ie_bloqueia_pre_pag_w		varchar(5)	:= 'N';
ie_bloqueia_intercambio_w	varchar(5)	:= 'N';
ie_bloqueia_prod_nao_reg_w	varchar(5)	:= 'N';
ie_bloqueia_prod_reg_w		varchar(5)	:= 'N';
ie_classif_sip_w		varchar(5)	:= 'N';
ie_pacote_w			varchar(1);
nr_seq_conta_princ_w		bigint;
ie_gerar_oc_pacote_w		varchar(1)	:= 'N';
ie_nao_utilizado_w		varchar(1);
qt_item_autorizado_w		bigint;
qt_item_solic_w			bigint;
ds_observacao_w			varchar(255)	:= '';
ie_autorizacao_especial_w	varchar(1)	:= 'N';
cd_guia_ref_w			varchar(20);
nr_seq_guia_w			bigint;
ie_mat_espec_aut_w		varchar(1);
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
cd_grupo_proc_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_estrut_mat_w		bigint;
nr_seq_grupo_rec_w		bigint;
ie_via_acesso_w			varchar(1);
nr_nota_fiscal_mat_w		numeric(20);
ie_calculo_coparticipacao_w	varchar(10);
ie_coparticipacao_w		varchar(10);
ie_co_preco_operadora_w		varchar(10);

vl_calculado_w			double precision;
vl_apresentado_w		double precision;
vl_max_item_w			double precision;
vl_minimo_item_w		double precision;
ie_consistencia_valor_w		varchar(1);
ie_tipo_segurado_w		varchar(3);
ie_sexo_w			varchar(2);
qt_idade_min_w			integer;
qt_idade_max_w			integer;
ie_unid_tempo_idade_w		varchar(2);
qt_idade_w			varchar(5);
qt_idade_meses_w		integer;
ie_sem_evento_w			varchar(2);
qt_eventos_pagto_w		bigint;
qt_ocorrencia_w			bigint;
qt_idade_minima_w		integer;
qt_idade_maxima_w		integer;
ie_sexo_exclusivo_w		varchar(1);
ie_auditoria_w			varchar(1);
ie_ocorrencia_w			varchar(1) := 'N';
nr_seq_grupo_produto_w		integer;
nr_seq_plano_w			integer;
nr_seq_regra_duplic_w		bigint;
ie_duplicidade_w		varchar(2);
nr_seq_grupo_material_w		bigint;
ie_grupo_material_w		varchar(1)	:= 'S';
nr_seq_execucao_w		bigint;
nr_seq_tipo_acomod_conta_w	bigint;
nr_seq_tipo_acomodacao_w	bigint;
ie_exige_hora_item_w		varchar(1);
dt_inicio_proc_w		timestamp;
dt_fim_proc_w			timestamp;
ie_alterado_analise_w 		varchar(1) := 'N';
nr_seq_ocorrencia_benef_w	bigint;
nr_seq_estrut_regra_w		bigint;
ie_estrut_mat_w			varchar(1);
ie_restringe_estab_w		varchar(2);
ie_ocor_estab_w			pls_controle_estab.ie_ocorrencia%type := pls_obter_se_controle_estab('GO');

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_nao_informado,
		a.nr_seq_ocorrencia,
		b.nr_seq_motivo_glosa,
		nr_seq_estrutura,
		a.vl_max_item,
		coalesce(a.vl_minimo_item,0),
		coalesce(a.ie_nao_utilizado,'N'),
		a.qt_idade_min,
		a.qt_idade_max,
		a.ie_unid_tempo_idade,
		coalesce(b.ie_auditoria,'S'),
		ie_sem_evento,
		nr_seq_regra_duplic,
		a.nr_seq_grupo_material,
		a.ie_exige_hora_item,
		a.nr_seq_estrutura_mat
	from	pls_ocorrencia_regra_item	a,
		pls_ocorrencia			b
	where	a.nr_seq_ocorrencia	= b.nr_sequencia
	and	trunc(dt_referencia_p) between trunc(coalesce(a.dt_inicio_vigencia, clock_timestamp())) and trunc(fim_dia(coalesce(a.dt_fim_vigencia,dt_referencia_p)))
	and	a.ie_situacao = 'A'
	and	b.ie_situacao = 'A'
	and	((a.ie_tipo_item = ie_tipo_item_w) or (ie_tipo_item = 'A'))
	and (a.ie_execucao_requisicao = 'S')
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento = coalesce(cd_procedimento_p,0)
	and (a.ie_origem_proced = coalesce(ie_origem_proced_p,0))))
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento = coalesce(cd_area_procedimento_w,0)))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = coalesce(cd_especialidade_w,0)))
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (a.cd_grupo_proc = coalesce(cd_grupo_proc_w,0)))
	and	((coalesce(a.nr_seq_material::text, '') = '') or (a.nr_seq_material = coalesce(nr_seq_material_p,0)))
	and	((coalesce(ie_exige_medico,'N') = 'N')	or (coalesce(ie_exige_medico,'N') <> ie_exige_medico_p))
	and	((coalesce(nr_seq_grupo_contrato,0) = coalesce(nr_seq_grupo_contrato_p,0))or (coalesce(nr_seq_grupo_contrato::text, '') = ''))
	and	((ie_consiste_qtd = 'N')   or (ie_consiste_qtd = ie_consiste_qtd_w))
	and	((ie_consiste_sexo = 'N')  or (ie_consiste_sexo = ie_consiste_sexo_w))
	and	((ie_consiste_idade = 'N') or (ie_consiste_idade = ie_consiste_idade_w))
	and	((coalesce(a.nr_seq_grupo_rec::text, '') = '') or (a.nr_seq_grupo_rec = nr_seq_grupo_rec_w))
	and	((coalesce(a.ie_tipo_segurado::text, '') = '') or (a.ie_tipo_segurado = ie_tipo_segurado_w ))
	and	((coalesce(a.ie_sexo::text, '') = '') or ( a.ie_sexo = ie_sexo_w))
	and	((coalesce(a.ie_bloqueio_mat::text, '') = '') or (a.ie_bloqueio_mat in (	ie_bloqueia_custo_op_w,
									ie_bloqueia_pre_pag_w,
									ie_bloqueia_intercambio_w,
									ie_bloqueia_prod_nao_reg_w,
									ie_bloqueia_prod_reg_w )))

	and	((coalesce(ie_regra_valor_co,'N') = 'N') or coalesce(ie_regra_valor_co,'N') = 'S' and coalesce(ie_co_preco_operadora_w,'N') = 'N')
	and	((coalesce(a.nr_seq_plano::text, '') = '') or ( a.nr_seq_plano = nr_seq_plano_w ))
	and	((coalesce(a.nr_seq_grupo_produto::text, '') = '') or (a.nr_seq_grupo_produto = nr_seq_grupo_produto_w ))
	and	((ie_ocor_estab_w = 'N') or (ie_ocor_estab_w = 'S' and b.cd_estabelecimento = cd_estabelecimento_p))
	order by
		coalesce(ie_tipo_item,'A'),
		coalesce(nr_seq_grupo_contrato_p,0);


BEGIN

/*askono - produto e grupo de produto*/

if (coalesce(nr_seq_segurado_p,0) > 0  ) then
	/*obter dados do segurado*/

	if (nr_seq_exec_item_p IS NOT NULL AND nr_seq_exec_item_p::text <> '') then
		begin
		select	a.nr_seq_plano
		into STRICT	nr_seq_plano_w
		from	pls_execucao_req_item b,
			pls_requisicao a
		where	a.nr_sequencia = b.nr_seq_requisicao
		and	b.nr_sequencia = nr_seq_exec_item_p;
		exception
		when others then
			nr_seq_plano_w	:= null;
		end;
	else
		begin
		--select	nr_seq_plano
		select	pls_obter_produto_benef(nr_sequencia,dt_referencia_p)
		into STRICT	nr_seq_plano_w
		from  	pls_segurado
		where	nr_sequencia = nr_seq_segurado_p;
		exception
		when others then
			nr_seq_plano_w	:= null;
		end;
	end if;

	/*dados do produto -- OS362870 - 17/10/2011*/

	begin
	select	nr_seq_tipo_acomodacao
	into STRICT	nr_seq_tipo_acomodacao_w
	from 	pls_plano_acomodacao
	where	nr_seq_plano = nr_seq_plano_w;
	exception
	when others then
		nr_seq_tipo_acomodacao_w	:= null;
	end;

	/*grupo do produto*/

	begin
	select 	a.nr_seq_grupo
	into STRICT	nr_seq_grupo_produto_w
	from	pls_preco_produto 	a
	where	a.nr_seq_plano 	= nr_seq_plano_w;
	exception
	when others then
		nr_seq_grupo_produto_w	:= null;
	end;
end if;

/* Obter parâmetros da conta médica */

ie_restringe_estab_w	:= pls_obter_se_controle_estab('CO');

select	coalesce(max(ie_calculo_coparticipacao),'P')
into STRICT	ie_calculo_coparticipacao_w
from	pls_parametros
where	((ie_restringe_estab_w	= 'S' AND cd_estabelecimento	= cd_estabelecimento_p)
or (ie_restringe_estab_w	= 'N'));

if (coalesce(nr_seq_proc_p,0) <> 0) then
	ie_tipo_item_w	:= 'P';

elsif (coalesce(nr_seq_mat_p,0) <> 0) then
	ie_tipo_item_w	:= 'M';

	nr_seq_restricao_w := pls_obter_mat_restricao_data(nr_seq_material_p, dt_referencia_p, nr_seq_restricao_w);

	if (coalesce(nr_seq_restricao_w,0) > 0) then

		select	qt_minima,
			qt_maxima,
			CASE WHEN ie_bloqueia_custo_op='S' THEN 'BCO' END ,
			CASE WHEN ie_bloqueia_pre_pag='S' THEN 'BPP' END ,
			CASE WHEN ie_bloqueia_intercambio='S' THEN 'BI' END ,
			CASE WHEN ie_bloqueia_prod_nao_reg='S' THEN 'BNR' END ,
			CASE WHEN ie_bloqueia_prod_reg='S' THEN 'BR' END ,
			coalesce(ie_autorizacao,'N'),
			coalesce(ie_nota_fiscal,'N'),
			qt_idade_minima,
			qt_idade_maxima,
			ie_sexo_exclusivo
		into STRICT	qt_minima_w,
			qt_maxima_w,
			ie_bloqueia_custo_op_w,
			ie_bloqueia_pre_pag_w,
			ie_bloqueia_intercambio_w,
			ie_bloqueia_prod_nao_reg_w,
			ie_bloqueia_prod_reg_w,
			ie_autorizacao_especial_w,
			ie_nota_fiscal_w,
			qt_idade_minima_w,
			qt_idade_maxima_w,
			ie_sexo_exclusivo_w
		from	pls_material_restricao
		where	nr_sequencia	= nr_seq_restricao_w;

		if	((qt_item_p <qt_minima_w) or (qt_item_p > qt_maxima_w)) then
			ie_consiste_qtd_w	:= 'S';
		end if;
	end if;

	if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then


		select	a.ie_sexo,
			obter_idade(a.dt_nascimento, clock_timestamp(), 'A')
		into STRICT	ie_sexo_seg_w,
			ie_idade_seg_w
		from	pessoa_fisica a,
			pls_segurado b
		where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
		and	b.nr_sequencia		= nr_seq_segurado_p;

		if (ie_sexo_seg_w	<> ie_sexo_exclusivo_w /*ie_sexo_mat_w*/
) then
			ie_consiste_sexo_w	:= 'S';
		end if;

		if (ie_idade_seg_w > qt_idade_maxima_w /*qt_idade_max_mat_w*/
 or ie_idade_seg_w < qt_idade_minima_w /*qt_idade_min_mat_w*/
) then
			ie_consiste_idade_w	:= 'S';
		end if;

	end if;

end if;

if (coalesce(cd_procedimento_p,0) <> 0) then
	SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;

	begin
		select	nr_seq_grupo_rec
		into STRICT	nr_seq_grupo_rec_w
		from	procedimento
		where	cd_procedimento		= cd_procedimento_p
		and	ie_origem_proced	= ie_origem_proced_p;
	exception
	when others then
		nr_seq_grupo_rec_w := null;
	end;
end if;
if (coalesce(nr_seq_material_p,0) <> 0) then
	select	max(nr_seq_estrut_mat)
	into STRICT	nr_seq_estrut_mat_w
	from	pls_material
	where	nr_sequencia	= nr_seq_material_p;
end if;


/*dados do segurado*/

begin
select	b.ie_tipo_segurado,
	a.ie_sexo,
	substr(obter_idade_pf(a.cd_pessoa_fisica, clock_timestamp(), 'A'),1,10),
	substr(obter_idade_pf(a.cd_pessoa_fisica, clock_timestamp(), 'M'),1,10)
into STRICT	ie_tipo_segurado_w,
	ie_sexo_w,
	qt_idade_w,
	qt_idade_meses_w
from	pls_segurado	b,
	pessoa_fisica	a
where	b.nr_sequencia		= nr_seq_segurado_p
and	b.cd_pessoa_fisica	= a.cd_pessoa_fisica;
exception
when others then
	ie_tipo_segurado_w	:= '0';
end;

select	nr_seq_execucao
into STRICT	nr_seq_execucao_w
from	pls_execucao_req_item
where	nr_sequencia = nr_seq_exec_item_p;

open C01;
loop
fetch C01 into
	nr_seq_regra_item_w,
	ie_nao_informado_w,
	nr_seq_ocorrencia_w,
	nr_seq_motivo_glosa_w,
	nr_seq_estrutura_w,
	vl_max_item_w,
	vl_minimo_item_w,
	ie_nao_utilizado_w,
	qt_idade_min_w,
	qt_idade_max_w,
	ie_unid_tempo_idade_w,
	ie_auditoria_w,
	ie_sem_evento_w,
	nr_seq_regra_duplic_w,
	nr_seq_grupo_material_w,
	ie_exige_hora_item_w,
	nr_seq_estrut_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_ocorrencia_w := 0;
	ds_observacao_w := '';
	ie_estrut_mat_w	:= 'S';

	if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
		if (pls_obter_se_mat_estrutura(nr_seq_material_p, nr_seq_estrut_regra_w) = 'N') then
			ie_estrut_mat_w	:= 'N';
		end if;
	end if;

	if (ie_estrut_mat_w = 'S') then
		/*Diego 02/05/2011
		    Caso já tenha sido gerado a ocorrência da regra que se esta verificando não é necessário continuar as verificações das demais regras.*/
		if (ie_tipo_item_p = 10) then
			select	count(*)
			into STRICT	qt_ocorrencia_w
			from	pls_ocorrencia_benef
			where	nr_seq_ocorrencia	= nr_seq_ocorrencia_w
			and	nr_seq_execucao		= nr_seq_execucao_w
			and	nr_seq_proc 		= nr_seq_proc_p;
		elsif (ie_tipo_item_p = 11) then
			select	count(*)
			into STRICT	qt_ocorrencia_w
			from	pls_ocorrencia_benef
			where	nr_seq_ocorrencia	= nr_seq_ocorrencia_w
			and	nr_seq_execucao		= nr_seq_execucao_w
			and	nr_seq_mat		= nr_seq_mat_p;
		end if;

		if (qt_ocorrencia_w > 0) then
			goto final;
		end if;

		if (coalesce(nr_seq_estrutura_w,0)	<> 0) then
			ie_estrutura_w := pls_obter_se_estrutura(cd_procedimento_p, ie_origem_proced_p, nr_seq_mat_p, nr_seq_estrutura_w);
		end if;

		/* Verificar se for regra de quantidade de idade minima ou maxima da regra, sendo "A" por ano e "M" por meses*/

		if (ie_unid_tempo_idade_w = 'A') then
			if	(qt_idade_min_w IS NOT NULL AND qt_idade_min_w::text <> '' AND qt_idade_min_w > qt_idade_w) or
				(qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '' AND qt_idade_max_w < qt_idade_w) then
				goto final;
			end if;
		elsif (ie_unid_tempo_idade_w = 'M') then
			if	(qt_idade_min_w IS NOT NULL AND qt_idade_min_w::text <> '' AND qt_idade_min_w > qt_idade_meses_w) or
				(qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '' AND qt_idade_max_w < qt_idade_meses_w) then
				goto final;
			end if;
		end if;

		/* Grupo de material */

		if (coalesce(nr_seq_grupo_material_w,0) > 0) and (coalesce(nr_seq_material_p,0) > 0) then
			ie_grupo_material_w	:= pls_se_grupo_preco_material(nr_seq_grupo_material_w, nr_seq_material_p);

			if (ie_grupo_material_w	= 'N') then
				goto final;
			end if;
		end if;

		if (ie_estrutura_w <> 'N') then
			if (ie_auditoria_w = 'S') then
				ie_ocorrencia_w := 'S';
			end if;

			nr_seq_ocorrencia_benef_w := pls_inserir_ocorrencia(nr_seq_segurado_p, nr_seq_ocorrencia_w, null, null, null, nr_seq_proc_p, nr_seq_mat_p, nr_seq_regra_item_w, nm_usuario_p, null, nr_seq_motivo_glosa_w, ie_tipo_item_p, cd_estabelecimento_p, 'N', nr_seq_execucao_w, nr_seq_ocorrencia_benef_w, null, null, null, null);

		end if;

		<<final>>
		ie_estrutura_w	:= ie_estrutura_w;-- esta linha não faz nada, apenas para não gerar erro de sql.
	end if;
	end;
end loop;
close C01;

--Diego 11/05/2011 - Chamado dentro da consistir conta portanto não pode existir commit
--commit;
ie_ocorrencia_p := ie_ocorrencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ocorrencia_item_exec ( ie_tipo_item_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, nr_seq_segurado_p bigint, nr_seq_exec_item_p bigint, nr_seq_proc_p bigint, nr_seq_mat_p bigint, ie_exige_medico_p text, nr_seq_grupo_contrato_p bigint, dt_referencia_p timestamp, qt_item_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_ocorrencia_p INOUT text) FROM PUBLIC;

