-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_glosas_lote_hist (nr_seq_lote_hist_p bigint, nr_seq_guia_p bigint, dt_recebimento_p timestamp, ie_acao_p text, nm_usuario_p text) AS $body$
DECLARE


/* ie_acao_p
'B'	= baixar
'E'	= estornar/desfazer baixa
*/
cd_estabelecimento_w		smallint;
cd_tipo_recebimento_w		bigint;
nr_titulo_w			bigint;
vl_saldo_w			double precision;
vl_saldo_original_w		double precision;
nr_seq_guia_w			bigint;
vl_glosa_w			double precision;
vl_baixa_w			double precision;
qt_pendente_w			bigint;
nr_seq_lote_hist_w		bigint;
nr_seq_liq_w			bigint;
nr_seq_lote_audit_w		bigint;
nr_analise_w			bigint;
nr_seq_trans_financ_w		bigint;
vl_adicional_w			double precision;
nr_seq_trans_receb_w		bigint;
qt_reversao_w			bigint;
nr_interno_conta_w		bigint;
cd_tipo_receb_rev_w		integer;
nr_seq_hist_guia_w		bigint;
vl_amenor_w			double precision;
vl_acatado_w			double precision;
nr_documento_w			varchar(20);
cd_tipo_receb_glosa_grg_w	integer;
cd_convenio_w			bigint;

cd_tipo_receb_amenor_regra_w	bigint;
nr_seq_trans_amenor_regra_w	bigint;
cd_tipo_receb_glosa_regra_w	bigint;
nr_seq_trans_glosa_regra_w	bigint;
cd_tipo_receb_acatado_regra_w	bigint;
nr_seq_trans_acatado_regra_w	bigint;
vl_saldo_guia_w			double precision;
ie_guia_sem_saldo_w		varchar(10);
ds_texto_w			varchar(255);
nr_seq_mot_glosa_w		regra_baixa_titulo_conv.nr_seq_mot_glosa%type;
nr_seq_tf_cr_grc_w		convenio_estabelecimento.nr_seq_tf_cr_grc%type;

cd_motivo_glosa_w		lote_audit_hist_item.cd_motivo_glosa%type;
vl_saldo_orig_guia_w    double precision;

GRG_C			constant varchar(3) := 'GRG';
VL_AMENOR_C 		constant varchar(9) := 'VL_AMENOR';
VL_GLOSA_C 		constant varchar(8) := 'VL_GLOSA';
VL_ACATADO_C 		constant varchar(10) := 'VL_ACATADO';

c01 CURSOR FOR
SELECT	(obter_titulo_conta_guia(a.nr_interno_conta,a.cd_autorizacao,null,null))::numeric  nr_titulo,
	a.vl_saldo_guia,
	(obter_valores_guia_grc(a.nr_seq_lote_hist,a.nr_interno_conta,a.cd_autorizacao,'VG'))::numeric  vl_glosa,
	a.nr_sequencia,
	(obter_valores_guia_grc(a.nr_seq_lote_hist,a.nr_interno_conta,a.cd_autorizacao,'VM'))::numeric  vl_adicional,
	a.nr_interno_conta,
	a.cd_autorizacao,
	(obter_valores_guia_grc(a.nr_seq_lote_hist,a.nr_interno_conta,a.cd_autorizacao,'VA'))::numeric  vl_amenor,
	(obter_valores_guia_grc(a.nr_seq_lote_hist,a.nr_interno_conta,a.cd_autorizacao,'VAC'))::numeric  vl_acatado,
	(obter_valor_conpaci_guia(nr_interno_conta,cd_autorizacao,1))::numeric  vl_saldo_origin,
	(SELECT max(x.cd_motivo_glosa) from lote_audit_hist_item x where x.nr_seq_guia = a.nr_sequencia) cd_motivo_glosa,
	a.vl_saldo_original
from	lote_audit_hist_guia a
where	coalesce((obter_titulo_conta_guia(a.nr_interno_conta,a.cd_autorizacao,null,null))::numeric ,0) <> 0
and	exists
	(select	1
	from	lote_audit_hist_item x
	where	x.nr_seq_guia	= a.nr_sequencia
	and	((x.vl_glosa	> 0) or (x.vl_acatado > 0)))
and	((ie_acao_p = 'B' and coalesce(a.dt_baixa_glosa::text, '') = '') or (ie_acao_p = 'E' and (a.dt_baixa_glosa IS NOT NULL AND a.dt_baixa_glosa::text <> '')))
and (coalesce(a.vl_saldo_guia,0)	<> 0 or ie_acao_p = 'E')
and (coalesce(nr_seq_guia_p,0) = 0 or a.nr_sequencia = nr_seq_guia_p)
and	a.nr_seq_lote_hist	= nr_seq_lote_hist_w;

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	(obter_valores_guia_grc(a.nr_seq_lote_hist,a.nr_interno_conta,a.cd_autorizacao,'VG'))::numeric  vl_glosa,	
	(obter_valores_guia_grc(a.nr_seq_lote_hist,a.nr_interno_conta,a.cd_autorizacao,'VA'))::numeric  vl_amenor,
	(obter_valores_guia_grc(a.nr_seq_lote_hist,a.nr_interno_conta,a.cd_autorizacao,'VAC'))::numeric  vl_acatado,
	coalesce(a.vl_saldo_original,0) vl_saldo_original
from	lote_audit_hist_guia a
where	coalesce((obter_titulo_conta_guia(a.nr_interno_conta,a.cd_autorizacao,null,null))::numeric ,0) <> 0
and	exists (SELECT	1
	from	lote_audit_hist_item x
	where	x.nr_seq_guia	= a.nr_sequencia
	and (x.vl_glosa	> 0 or x.vl_amenor > 0 or x.vl_acatado > 0))
and (coalesce(nr_seq_guia_p,0) = 0 or a.nr_sequencia = nr_seq_guia_p)
and	a.nr_seq_lote_hist	= nr_seq_lote_hist_w;


BEGIN

if (nr_seq_lote_hist_p IS NOT NULL AND nr_seq_lote_hist_p::text <> '') then
	nr_seq_lote_hist_w	:= nr_seq_lote_hist_p;
else
	select	max(a.nr_seq_lote_hist)
	into STRICT	nr_seq_lote_hist_w
	from	lote_audit_hist_guia a
	where	a.nr_sequencia	= nr_seq_guia_p;
end if;

select	max(b.cd_estabelecimento),
	max(b.nr_sequencia),
	max(a.nr_analise),
	max(d.nr_seq_trans_fin_audit),
	max(d.cd_tipo_receb_rev),
	max(d.cd_tipo_receb_glosa_grg),
	max(b.cd_convenio)
into STRICT	cd_estabelecimento_w,
	nr_seq_lote_audit_w,
	nr_analise_w,
	nr_seq_trans_financ_w,
	cd_tipo_receb_rev_w,
	cd_tipo_receb_glosa_grg_w,
	cd_convenio_w
from	parametro_contas_receber d,
	lote_auditoria b,
	lote_audit_hist a
where	b.cd_estabelecimento	= d.cd_estabelecimento
and	a.nr_seq_lote_audit	= b.nr_sequencia
and	a.nr_sequencia		= nr_seq_lote_hist_w;

select	max(a.cd_tipo_recebimento)
into STRICT	cd_tipo_recebimento_w
from	tipo_recebimento a
where	ie_situacao = 'A'	/* apenas glosas com situacao ativa */
and	a.ie_tipo_consistencia	= 6	/* tipo Glosa Convenio */
and     ((a.cd_estabelecimento = cd_estabelecimento_w) or (coalesce(a.cd_estabelecimento::text, '') = ''));

select	max(nr_seq_tf_cr_grc)
into STRICT	nr_seq_tf_cr_grc_w
from	convenio_estabelecimento
where	cd_estabelecimento 	= cd_estabelecimento_w
and	cd_convenio	 	= cd_convenio_w;

open c01;
loop
fetch c01 into
	nr_titulo_w,
	vl_saldo_w,
	vl_glosa_w,
	nr_seq_guia_w,
	vl_adicional_w,
	nr_interno_conta_w,
	nr_documento_w,
	vl_amenor_w,
	vl_acatado_w,
	vl_saldo_original_w,
	cd_motivo_glosa_w,
	vl_saldo_orig_guia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	count(*)
	into STRICT	qt_reversao_w
	from	conta_paciente x
	where	x.nr_seq_conta_origem	= nr_interno_conta_w;

	if (qt_reversao_w > 0) and (cd_tipo_receb_rev_w IS NOT NULL AND cd_tipo_receb_rev_w::text <> '') then
		cd_tipo_recebimento_w	:= cd_tipo_receb_rev_w;
	end if;
	
	if (cd_tipo_receb_glosa_grg_w IS NOT NULL AND cd_tipo_receb_glosa_grg_w::text <> '') then
		cd_tipo_recebimento_w	:= cd_tipo_receb_glosa_grg_w;
	end if;
	
	/* ahoffelder - OS 379605 - 14/11/2011 */

	select	max(a.nr_seq_trans_fin)
	into STRICT	nr_seq_trans_receb_w
	from	tipo_recebimento a
	where	a.cd_tipo_recebimento	= cd_tipo_recebimento_w;

	/* se a glosa for maior do que o saldo, baixa so ate o valor do saldo, para o resto o usuario gera nota de credito */

	if (vl_saldo_w > 0) and (vl_glosa_w > vl_saldo_w) and (ie_acao_p = 'B') then --Apenas se e baixa, o valor da baixa sera o saldo. Para os casos do estorno a baixa deve ser sempre o valor da glosa
		vl_baixa_w	:= vl_saldo_w;
	elsif (vl_glosa_w > vl_saldo_original_w) then --OS 1800339 - se a glosa aceita superar o valor de saldo original da guia
		vl_baixa_w	:= vl_saldo_w;	
	else
		vl_baixa_w	:= vl_glosa_w;
	end if;
	
		if (coalesce(cd_tipo_recebimento_w,0) = 0) then
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(259288);
			
		end if;	

	if (ie_acao_p	= 'B') then
	
		SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> GRG_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_AMENOR_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_amenor_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_amenor_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_motivo_glosa_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> nr_documento_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_amenor_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_amenor_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;
						
		if (cd_tipo_receb_amenor_regra_w IS NOT NULL AND cd_tipo_receb_amenor_regra_w::text <> '') and (nr_seq_trans_amenor_regra_w IS NOT NULL AND nr_seq_trans_amenor_regra_w::text <> '') and (vl_amenor_w <> 0) then
			
			CALL GRG_BAIXA_TITULO_RECEBER(cd_estabelecimento_w,
						cd_tipo_receb_amenor_regra_w, 
						nr_titulo_w, 
						nr_seq_trans_amenor_regra_w, 
						trunc(coalesce(dt_recebimento_p,clock_timestamp()),'dd'), 
						nm_usuario_p, 
						0, 
						0, 
						0,
						vl_amenor_w,
						0,
						nr_seq_mot_glosa_w);	

			update	titulo_receber_liq
			set 	nr_documento 	= nr_documento_w
			where	nr_titulo 	= nr_titulo_w
			and	nr_sequencia 	= (SELECT max(nr_sequencia) from titulo_receber_liq where nr_titulo = nr_titulo_w);					
			
			vl_amenor_w	:= 0;			
		end if;
		
		SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> GRG_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_GLOSA_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_glosa_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_glosa_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_motivo_glosa_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> nr_documento_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_glosa_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_glosa_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

		if (cd_tipo_receb_glosa_regra_w IS NOT NULL AND cd_tipo_receb_glosa_regra_w::text <> '') and (nr_seq_trans_glosa_regra_w IS NOT NULL AND nr_seq_trans_glosa_regra_w::text <> '') and (vl_baixa_w <> 0) then --vl_baixa_w = valor de glosa
			
			CALL GRG_BAIXA_TITULO_RECEBER(cd_estabelecimento_w,
						cd_tipo_receb_glosa_regra_w, 
						nr_titulo_w, 
						nr_seq_trans_glosa_regra_w, 
						trunc(coalesce(dt_recebimento_p,clock_timestamp()),'dd'), 
						nm_usuario_p, 
						vl_baixa_w, 
						vl_adicional_w, 
						0,
						0,
						0,
						nr_seq_mot_glosa_w);
			update	titulo_receber_liq
			set 	nr_documento 	= nr_documento_w
			where	nr_titulo 	= nr_titulo_w
			and	nr_sequencia 	= (SELECT max(nr_sequencia) from titulo_receber_liq where nr_titulo = nr_titulo_w);
						
			vl_baixa_w	:= 0;		
		end if;

		SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> GRG_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_ACATADO_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_acatado_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_acatado_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_motivo_glosa_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> nr_documento_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_acatado_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_acatado_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

		if (cd_tipo_receb_acatado_regra_w IS NOT NULL AND cd_tipo_receb_acatado_regra_w::text <> '') and (nr_seq_trans_acatado_regra_w IS NOT NULL AND nr_seq_trans_acatado_regra_w::text <> '') and (vl_acatado_w <> 0) then --vl_baixa_w = valor de glosa
			
			CALL GRG_BAIXA_TITULO_RECEBER(cd_estabelecimento_w,
						cd_tipo_receb_acatado_regra_w, 
						nr_titulo_w, 
						nr_seq_trans_acatado_regra_w, 
						trunc(coalesce(dt_recebimento_p,clock_timestamp()),'dd'), 
						nm_usuario_p, 
						0, 
						0, 
						0,
						0,
						vl_acatado_w,
						nr_seq_mot_glosa_w);
						
			update	titulo_receber_liq
			set 	nr_documento 	= nr_documento_w
			where	nr_titulo 	= nr_titulo_w
			and	nr_sequencia 	= (SELECT max(nr_sequencia) from titulo_receber_liq where nr_titulo = nr_titulo_w);
						
			vl_acatado_w	:= 0;		
		end if;			
		
		if (vl_baixa_w <> 0) or (vl_adicional_w <> 0) then


			CALL baixa_titulo_receber(	cd_estabelecimento_w,
						cd_tipo_recebimento_w, 
						nr_titulo_w, 
						coalesce(nr_seq_tf_cr_grc_w,coalesce(nr_seq_trans_receb_w,nr_seq_trans_financ_w)), 
						0, --vl_baixa_p
						trunc(coalesce(dt_recebimento_p,clock_timestamp()),'dd'), --dt_recebimento_p
						nm_usuario_p, 
						vl_baixa_w, --vl_glosa_p
						null, --nr_bordero_p
						null, --nr_seq_conta_banco_p
						vl_adicional_w, --vl_rec_maior_p
						0, --vl_perdas_p
						null, --nr_seq_movto_trans_fin_p 
						null, --vl_baixa_pend_estrang_p
						null, --vl_cotacao_pend_p
						null, --cd_moeda_pend_p
						null, --nr_seq_lote_enc_p
						null, --nr_seq_movto_bco_pend_p
						null, --ie_gerar_baixa_trib_p
						nr_seq_guia_w);
						
			update	titulo_receber_liq
			set 	nr_documento 	= nr_documento_w
			where	nr_titulo 	= nr_titulo_w
			and	nr_sequencia 	= (SELECT max(nr_sequencia) from titulo_receber_liq where nr_titulo = nr_titulo_w);
		end if;	

		update	lote_audit_hist_guia
		set	dt_baixa_glosa		= trunc(coalesce(dt_recebimento_p,clock_timestamp()),'dd'),
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia		= nr_seq_guia_w;
		
		--gerar_baixa_lote_grg(null, nr_seq_guia_w, 0, vl_baixa_w, 0, nm_usuario_p,trunc(nvl(dt_recebimento_p,sysdate),'dd'));
	elsif (ie_acao_p	= 'E') then

  	if (PKG_I18N.GET_USER_LOCALE = 'es_AR') then 	
			if (vl_saldo_w <= 0) and (vl_saldo_orig_guia_w > 0) and (vl_glosa_w > vl_saldo_orig_guia_w) then
				vl_baixa_w := vl_saldo_orig_guia_w;
			end if;
		end if;
		
		SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> GRG_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_AMENOR_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_amenor_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_amenor_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_motivo_glosa_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> nr_documento_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_amenor_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_amenor_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

		if (cd_tipo_receb_amenor_regra_w IS NOT NULL AND cd_tipo_receb_amenor_regra_w::text <> '') and (nr_seq_trans_amenor_regra_w IS NOT NULL AND nr_seq_trans_amenor_regra_w::text <> '') and (vl_amenor_w <> 0) then
			
			CALL GRG_BAIXA_TITULO_RECEBER(cd_estabelecimento_w,
						cd_tipo_receb_amenor_regra_w, 
						nr_titulo_w, 
						nr_seq_trans_amenor_regra_w, 
						trunc(coalesce(dt_recebimento_p,clock_timestamp()),'dd'), 
						nm_usuario_p, 
						0, 
						0, 
						0,
						vl_amenor_w * -1,
						0,
						nr_seq_mot_glosa_w);			
			vl_amenor_w	:= 0;			
		end if;
		
		SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> GRG_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_GLOSA_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_glosa_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_glosa_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_motivo_glosa_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> nr_documento_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_glosa_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_glosa_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

		if (cd_tipo_receb_glosa_regra_w IS NOT NULL AND cd_tipo_receb_glosa_regra_w::text <> '') and (nr_seq_trans_glosa_regra_w IS NOT NULL AND nr_seq_trans_glosa_regra_w::text <> '') and (vl_baixa_w <> 0) then --vl_baixa_w = valor de glosa
			
			CALL GRG_BAIXA_TITULO_RECEBER(cd_estabelecimento_w,
						cd_tipo_receb_glosa_regra_w, 
						nr_titulo_w, 
						nr_seq_trans_glosa_regra_w, 
						trunc(coalesce(dt_recebimento_p,clock_timestamp()),'dd'), 
						nm_usuario_p, 
						vl_baixa_w * -1, 
						vl_adicional_w * -1, 
						0,
						0,
						0,
						nr_seq_mot_glosa_w);			
			vl_baixa_w	:= 0;		
		end if;	
		
		SELECT * FROM OBTER_REGRA_BAIXA_TITULO_CONV(	
						ie_origem_baixa_p 	=> GRG_C, cd_estabelecimento_p 	=> cd_estabelecimento_w, cd_convenio_p 		=> cd_convenio_w, nr_titulo_p 		=> nr_titulo_w, ie_campo_p 		=> VL_ACATADO_C, cd_tipo_recebimento_p 	=> cd_tipo_receb_acatado_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_acatado_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w, cd_motivo_glosa_p 	=> cd_motivo_glosa_w, nr_interno_conta_p 	=> nr_interno_conta_w, cd_autorizacao_p 	=> nr_documento_w
						) INTO STRICT cd_tipo_recebimento_p 	=> cd_tipo_receb_acatado_regra_w, nr_seq_trans_financ_p 	=> nr_seq_trans_acatado_regra_w, nr_seq_mot_glosa_p 	=> nr_seq_mot_glosa_w;

		if (cd_tipo_receb_acatado_regra_w IS NOT NULL AND cd_tipo_receb_acatado_regra_w::text <> '') and (nr_seq_trans_acatado_regra_w IS NOT NULL AND nr_seq_trans_acatado_regra_w::text <> '') and (vl_acatado_w <> 0) then
			
			CALL GRG_BAIXA_TITULO_RECEBER(cd_estabelecimento_w, 
						cd_tipo_receb_acatado_regra_w, 
						nr_titulo_w, 
						nr_seq_trans_acatado_regra_w, 
						trunc(coalesce(dt_recebimento_p,clock_timestamp()),'dd'), 
						nm_usuario_p, 
						0, 
						0, 
						0,
						0,
						vl_acatado_w * -1,
						nr_seq_mot_glosa_w);			
			vl_acatado_w	:= 0;		
		end if;			

		if (vl_baixa_w <> 0) or (vl_adicional_w <> 0) then

			CALL baixa_titulo_receber(	cd_estabelecimento_w,
						cd_tipo_recebimento_w, 
						nr_titulo_w, 
						coalesce(nr_seq_tf_cr_grc_w,coalesce(nr_seq_trans_receb_w,nr_seq_trans_financ_w)), 
						0,  --vl_baixa_p
						trunc(coalesce(dt_recebimento_p,clock_timestamp()),'dd'), --dt_recebimento_p 
						nm_usuario_p, 
						coalesce(vl_baixa_w,0) * -1,  --vl_glosa_p
						null, --nr_bordero_p
						null, --nr_seq_conta_banco_p 
						coalesce(vl_adicional_w,0) * -1, --vl_rec_maior_p 
						0, --vl_perdas_p
						null, --nr_seq_movto_trans_fin_p
						null, --vl_baixa_pend_estrang_p
						null, --vl_cotacao_pend_p
						null, --cd_moeda_pend_p
						null, --nr_seq_lote_enc_p
						null, --nr_seq_movto_bco_pend_p
						null, --ie_gerar_baixa_trib_p
						nr_seq_guia_w);		
		end if;

		update	lote_audit_hist_guia
		set	dt_baixa_glosa	 = NULL,
			VL_SALDO_GUIA	= VL_SALDO_ORIGINAL,--Quando desfazer a baixa deve retornar ao saldo original.
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_guia_W;
		
		--gerar_baixa_lote_grg(null, nr_seq_guia_w, 0, vl_baixa_w * -1, 0, nm_usuario_p,trunc(nvl(dt_recebimento_p,sysdate),'dd'));
	end if;

	CALL atualizar_saldo_tit_rec(nr_titulo_w, nm_usuario_p);	

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_liq_w
	from	titulo_receber_liq a
	where	a.nr_titulo	= nr_titulo_w;
	
	--Baixa gerada a partir da guia #@NR_SEQ_GUIA#@ da #@NR_ANALISE#@  analise do lote de recurso #@NR_SEQ_LOTE_AUDIT#@ .
	ds_texto_w := substr(wheb_mensagem_pck.get_texto(303095,'NR_SEQ_GUIA='|| nr_seq_guia_w ||
							';NR_ANALISE='|| nr_analise_w ||
							';NR_SEQ_LOTE_AUDIT='|| nr_seq_lote_audit_w ),1,255);

	update	titulo_receber_liq
	set	ds_observacao		= ds_texto_w,
		nr_seq_lote_hist_guia	= nr_seq_guia_w
	where	nr_sequencia		= nr_seq_liq_w
	and	nr_titulo		= nr_titulo_w;
	
	if (ie_acao_p	= 'B') then
	
		vl_saldo_guia_w	:= (obter_saldo_conpaci(nr_interno_conta_w,nr_documento_w))::numeric;
		
		if (vl_saldo_guia_w = 0) then
			ie_guia_sem_saldo_w	:= 'S';
		else
			ie_guia_sem_saldo_w	:= 'N';
		end if;
		
		/*Guardar o saldo original da guia*/

		update	lote_audit_hist_guia
		set	vl_saldo_original	= vl_saldo_guia
		where	nr_sequencia		= nr_seq_guia_w;

		update	lote_audit_hist_guia
		set	vl_saldo_guia		= coalesce(vl_saldo_guia_w,vl_saldo_guia),
			ie_guia_sem_saldo	= ie_guia_sem_saldo_w,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia		= nr_seq_guia_w;
	end if;
	
end loop;
close c01;

open C02;
loop
fetch C02 into	
	nr_seq_hist_guia_w,
	vl_glosa_w,	
	vl_amenor_w,
	vl_acatado_w,
  vl_saldo_orig_guia_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	if (ie_acao_p = 'E') then
		vl_glosa_w	:= vl_glosa_w * -1;
		vl_amenor_w	:= vl_amenor_w * -1;
		vl_acatado_w	:= vl_acatado_w * -1;
	end if;
	
	CALL gerar_baixa_lote_grg(	null,
				nr_seq_hist_guia_w, 
				0,
				vl_glosa_w, 
				vl_amenor_w, 
				vl_acatado_w, 
				nm_usuario_p,
				dt_recebimento_p);
	
	end;
end loop;
close C02;

commit;

/* apos baixar a glosa das guias, tratar a data de baixa da analise */

select	count(*)
into STRICT	qt_pendente_w
from	lote_audit_hist_guia a
where	coalesce((obter_titulo_conta_guia(a.nr_interno_conta,a.cd_autorizacao,null,null))::numeric ,0) <> 0
and	exists
	(SELECT	1
	from	lote_audit_hist_item x
	where	x.nr_seq_guia	= a.nr_sequencia
	and	((x.vl_glosa > 0) or (x.vl_acatado > 0)))
and	coalesce(a.dt_baixa_glosa::text, '') = ''
and	a.nr_seq_lote_hist	= nr_seq_lote_hist_w;

if (ie_acao_p = 'B') and ((coalesce(nr_seq_guia_p,0) = 0) or (qt_pendente_w = 0)) then

	update	lote_audit_hist
	set	dt_baixa_glosa	= trunc(coalesce(dt_recebimento_p,clock_timestamp()),'dd'),
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_hist_w;

elsif (ie_acao_p = 'E') and (qt_pendente_w > 0) then

	update	lote_audit_hist
	set	dt_baixa_glosa	 = NULL,
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_hist_w;

end if;

CALL gerar_dashboard_regra(null, null, nr_seq_lote_hist_w);
							
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_glosas_lote_hist (nr_seq_lote_hist_p bigint, nr_seq_guia_p bigint, dt_recebimento_p timestamp, ie_acao_p text, nm_usuario_p text) FROM PUBLIC;

