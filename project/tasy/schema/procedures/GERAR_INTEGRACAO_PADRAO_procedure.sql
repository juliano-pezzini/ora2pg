-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_integracao_padrao ( ie_evento_p text, nr_seq_documento_p text, nm_usuario_p text, ie_material_estoque_p text default 'S', ie_padronizado_p text default 'S', ie_operacao_p text default 'I', cd_tipo_pessoa_p text default null) AS $body$
DECLARE



nr_seq_evento_sistema_w		intpd_eventos_sistema.nr_sequencia%type;
ie_integra_w			varchar(1) := 'S';
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_grupo_material_w		grupo_material.cd_grupo_material%type;
cd_subgrupo_material_w		subgrupo_material.cd_subgrupo_material%type;
cd_classe_material_w		classe_material.cd_classe_material%type;
nr_seq_familia_w			material.nr_seq_familia%type;
ie_padronizado_w			material_estab.ie_padronizado%type;
ie_material_estoque_w		material_estab.ie_material_estoque%type;
qt_registros_w			bigint;

c01 CURSOR FOR
SELECT	b.nr_sequencia
from	intpd_eventos a,
	intpd_eventos_sistema b
where	a.nr_sequencia = b.nr_seq_evento
and	a.ie_evento = ie_evento_p
and	a.ie_situacao = 'A'
and	b.ie_situacao = 'A';

c02 CURSOR FOR
SELECT	coalesce(ie_integrar,'S')
from	intpd_eventos_sistema_rest
where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
and (coalesce(cd_material, nr_seq_documento_p) 			= nr_seq_documento_p or nr_seq_documento_p = 0)
and	((coalesce(nr_seq_familia, nr_seq_familia_w)			= nr_seq_familia_w) or (coalesce(nr_seq_familia::text, '') = ''))
and	((coalesce(ie_material_estoque,'A') = 'A') or
	((coalesce(ie_material_estoque,'A') = 'S') and (ie_material_estoque_w = 'S')) or
	((coalesce(ie_material_estoque,'A') = 'N') and (ie_material_estoque_w = 'N')))
and	((coalesce(ie_padronizado,'A') = 'A') or
	((coalesce(ie_padronizado,'A') = 'S') and (ie_padronizado_w = 'S')) or
	((coalesce(ie_padronizado,'A') = 'N') and (ie_padronizado_w = 'N')))
order by
	coalesce(cd_material, 0),
	coalesce(nr_seq_familia,0),
	coalesce(cd_classe_material, 0),
	coalesce(cd_subgrupo_material, 0),
	coalesce(cd_grupo_material, 0);

C03 CURSOR FOR
SELECT 	coalesce(ie_integrar,'S')
from 	intpd_eventos_sistema_rest
where 	nr_seq_evento_sistema = nr_seq_evento_sistema_w
and 	cd_tipo_pessoa = cd_tipo_pessoa_p;



BEGIN

cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

open C01;
loop
fetch C01 into
	nr_seq_evento_sistema_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	count(*)
	into STRICT	qt_registros_w
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w;

	/*Se não tem nenhum filtro, integra todos*/

	if (qt_registros_w = 0) then
		ie_integra_w := 'S';
	elsif (ie_evento_p = '1') then /*Enviar cadastro de materiais*/
		/*Se tem regra recebe N, e abaixo faz a verificação se integra ou não*/

		ie_integra_w := 'N';

		select	a.cd_grupo_material,
			a.cd_subgrupo_material,
			a.cd_classe_material,
			a.nr_seq_familia
		into STRICT	cd_grupo_material_w,
			cd_subgrupo_material_w,
			cd_classe_material_w,
			nr_seq_familia_w
		from	estrutura_material_v a
		where	a.cd_material = nr_seq_documento_p;


		begin
		select	ie_padronizado,
			ie_material_estoque
		into STRICT	ie_padronizado_w,
			ie_material_estoque_w
		from	material_estab
		where	cd_material = nr_seq_documento_p
		and	cd_estabelecimento = cd_estabelecimento_w;
		exception
		when others then
			ie_padronizado_w 	:= coalesce(ie_padronizado_p,'S');
			ie_material_estoque_w	:= coalesce(ie_material_estoque_p,'S');
		end;

		open C02;
		loop
		fetch C02 into
			ie_integra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ie_integra_w := ie_integra_w;
			end;
		end loop;
		close C02;

	elsif (ie_evento_p = '7') then

		open C03;
		loop
		fetch C03 into
			ie_integra_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			ie_integra_w := ie_integra_w;
			end;
		end loop;
		close C03;

	elsif (ie_evento_p = '12') then

			if (nr_seq_evento_sistema_w IS NOT NULL AND nr_seq_evento_sistema_w::text <> '') then
				ie_integra_w 	:= 'S';
			else
				ie_integra_w 	:= 'N';
			end if;

	end if;


	select	count(*)
	into STRICT	qt_registros_w
	from	intpd_fila_transmissao
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	nr_seq_documento = nr_seq_documento_p
	and	ie_evento = ie_evento_p
	and	ie_status = 'P';

	/*Caso já tenha uma pendência na fila com o mesmo evento, mesmo documento ... ele não gera outro registro na fila, para nao ter integraçoes duplicadas.*/

	if (qt_registros_w > 0) then
		ie_integra_w := 'N';
	end if;


	if (ie_integra_w = 'S') then
		insert into intpd_fila_transmissao(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_evento,
			nr_seq_documento,
			nr_seq_evento_sistema,
			ie_status,
			ie_operacao)
		values (	nextval('intpd_fila_transmissao_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ie_evento_p,
			nr_seq_documento_p,
			nr_seq_evento_sistema_w,
			'P',
			ie_operacao_p);
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_integracao_padrao ( ie_evento_p text, nr_seq_documento_p text, nm_usuario_p text, ie_material_estoque_p text default 'S', ie_padronizado_p text default 'S', ie_operacao_p text default 'I', cd_tipo_pessoa_p text default null) FROM PUBLIC;

