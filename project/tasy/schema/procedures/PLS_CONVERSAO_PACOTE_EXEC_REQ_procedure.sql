-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_conversao_pacote_exec_req ( nr_seq_execucao_p bigint, nr_seq_prestador_p bigint, cd_estabelecimento_p bigint, dt_execucao_p timestamp, nm_usuario_p text, nr_seq_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Executar a convercao de um procedimento em um pacote na execucao da requisicao
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_execucao_w		bigint;
ie_tipo_guia_w			varchar(255);
nr_seq_grupo_exec_w		bigint;
nr_seq_segurado_w		bigint;
qt_item_w				pls_execucao_req_item.qt_item%type;
nr_seq_req_proc_w		bigint;
nr_seq_req_mat_w		bigint;
cd_medico_requisitante_w	varchar(255);
ie_tipo_processo_w		varchar(255);
nr_seq_requisicao_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proc_w		bigint;
ie_origem_proced_w		bigint;
cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
nr_seq_tipo_acomod_w		bigint;
nr_seq_conversao_w		bigint;
nr_seq_pacote_w			bigint;
cd_proc_pacote_w		bigint;
ie_origem_pacote_w		bigint;
nr_seq_exec_item_w		bigint;
nr_seq_ret_abert_w		varchar(255);
nr_seq_regra_w			bigint;
qt_registro_w			bigint;
ie_excluir_item_w		varchar(2);
ie_restringe_estab_w		varchar(2);
	
C01 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(ie_excluir_item,'N')
	from	pls_regra_conversao_pacote
	where	((ie_restringe_estab_w	= 'N')
	or	(ie_restringe_estab_w	= 'S' AND cd_estabelecimento = cd_estabelecimento_p))
	and	ie_situacao		= 'A'
	and (coalesce(nr_seq_prestador::text, '') = ''	or nr_seq_prestador 		= nr_seq_prestador_p)	
	and (coalesce(cd_procedimento::text, '') = ''	or cd_procedimento		= cd_procedimento_w)
	and (coalesce(ie_origem_proced::text, '') = '' or ie_origem_proced		= ie_origem_proced_w)
	and (coalesce(cd_grupo_proc::text, '') = '' or cd_grupo_proc		= cd_grupo_proc_w)
	and (coalesce(cd_especialidade::text, '') = '' or cd_especialidade		= cd_especialidade_w)
	and (coalesce(cd_area_procedimento::text, '') = ''	or cd_area_procedimento		= cd_area_procedimento_w)
	and (coalesce(ie_tipo_guia::text, '') = '' or ie_tipo_guia			= ie_tipo_guia_w)
	and (coalesce(nr_seq_tipo_acomodacao::text, '') = ''	or nr_seq_tipo_acomodacao	= nr_seq_tipo_acomod_w)
	and	ie_exec_requisicao	= 'S'
	order by coalesce(nr_seq_grupo_proc,0),
		coalesce(cd_area_procedimento,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_procedimento,0),
		coalesce(nr_seq_prestador,0);

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_pacote
	from	pls_conversao_pacote
	where	nr_seq_regra	= nr_seq_regra_w
	and	ie_situacao	= 'A'
	and	(((coalesce(dt_inicio_vigencia::text, '') = '') or (dt_inicio_vigencia < dt_execucao_p))
	and 	((coalesce(dt_fim_vigencia::text, '') = '') or (dt_fim_vigencia > dt_execucao_p)));
	

BEGIN

begin
select	cd_procedimento,
	ie_origem_proced,
	nr_seq_execucao,
	ie_tipo_guia,
	nr_seq_grupo_exec,
	nr_seq_segurado,
	qt_item,
	nr_seq_req_proc,
	nr_seq_req_mat,
	cd_medico_requisitante,
	ie_tipo_processo,
	nr_seq_requisicao
into STRICT	cd_procedimento_w,
	ie_origem_proc_w,
	nr_seq_execucao_w,
	ie_tipo_guia_w,
	nr_seq_grupo_exec_w,
	nr_seq_segurado_w,
	qt_item_w,
	nr_seq_req_proc_w,
	nr_seq_req_mat_w,
	cd_medico_requisitante_w,
	ie_tipo_processo_w,
	nr_seq_requisicao_w
from	pls_execucao_req_item
where	nr_sequencia	= nr_seq_execucao_p
and	coalesce(nr_seq_pacote::text, '') = '';
exception
when others then
	cd_procedimento_w		:= null;
	ie_origem_proc_w		:= null;
	nr_seq_execucao_w		:= null;
	ie_tipo_guia_w			:= '';
	nr_seq_grupo_exec_w		:= null;
	nr_seq_segurado_w		:= null;
	qt_item_w			:= null;
	nr_seq_req_proc_w		:= null;
	nr_seq_req_mat_w		:= null;
	cd_medico_requisitante_w	:= '';
	ie_tipo_processo_w		:= '';
	nr_seq_requisicao_w		:= null;
end;

begin
select	nr_seq_tipo_acomodacao
into STRICT	nr_seq_tipo_acomod_w
from	pls_requisicao
where	nr_sequencia		= nr_seq_requisicao_w;
exception
when others then
	nr_seq_tipo_acomod_w	:= null;
end;

SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proc_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;

ie_restringe_estab_w	:= pls_obter_se_controle_estab('GP');

open C01;
loop
fetch C01 into	
	nr_seq_regra_w,
	ie_excluir_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

if (coalesce(nr_seq_regra_w,0) > 0) then
	open C02;
	loop
	fetch C02 into	
		nr_seq_conversao_w,
		nr_seq_pacote_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		begin
		select	cd_procedimento,
			ie_origem_proced
		into STRICT	cd_proc_pacote_w,
			ie_origem_pacote_w
		from	pls_pacote
		where	nr_sequencia	= nr_seq_pacote_w;
		exception
		when others then
			cd_proc_pacote_w	:= null;
			ie_origem_pacote_w	:= null;
		end;
		
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_execucao_req_item
		where	nr_seq_requisicao	= nr_seq_requisicao_w
		and	cd_procedimento		= cd_proc_pacote_w
		and	ie_origem_proced	= ie_origem_pacote_w;
		exception
		when others then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w	= 0) then
			select	nextval('pls_execucao_req_item_seq')
			into STRICT	nr_seq_exec_item_w
			;
			
			insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia, nr_seq_grupo_exec,
				nr_seq_segurado, dt_atualizacao, nm_usuario,
				cd_procedimento, ie_origem_proced, nr_seq_material,
				qt_item, nr_seq_req_proc, nr_seq_req_mat,
				cd_medico_requisitante, ie_tipo_processo, nr_seq_requisicao,
				nr_seq_execucao, nr_seq_pacote,	ie_situacao)
			values (nr_seq_exec_item_w, ie_tipo_guia_w, nr_seq_grupo_exec_w,
				nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
				cd_proc_pacote_w, ie_origem_pacote_w, null,
				1, null, null,
				cd_medico_requisitante_w, ie_tipo_processo_w, nr_seq_requisicao_w,
				nr_seq_execucao_w, nr_seq_pacote_w, 'U');
				
			/* Adicionar o item selecionada na lista temporaria de execucao */

			CALL pls_carregar_itens_exec(nr_seq_segurado_w, nr_seq_exec_item_w, nr_seq_execucao_w, nm_usuario_p);
			CALL pls_atualiza_valor_pacote(nr_seq_exec_item_w,'E',nm_usuario_p, 'S', 'N');
			nr_seq_ret_abert_w := pls_abrir_pacote_execucao_req(nr_seq_exec_item_w, nr_seq_prestador_p, dt_execucao_p, nm_usuario_p, nr_seq_ret_abert_w);
			
			if (nr_seq_ret_abert_w IS NOT NULL AND nr_seq_ret_abert_w::text <> '') then
				nr_seq_retorno_p	:= substr(nr_seq_retorno_p||' '||nr_seq_exec_item_w||' '||nr_seq_ret_abert_w||' ', 1, 255);
			else
				nr_seq_retorno_p	:= substr(nr_seq_retorno_p||' '||nr_seq_exec_item_w||' ', 1, 255);
			end if;
		end if;
		end;
	end loop;
	close C02;

	if (ie_excluir_item_w	= 'S') then
		update	pls_execucao_req_item
		set	ie_situacao	= 'C'
		where	nr_sequencia	= nr_seq_execucao_p;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conversao_pacote_exec_req ( nr_seq_execucao_p bigint, nr_seq_prestador_p bigint, cd_estabelecimento_p bigint, dt_execucao_p timestamp, nm_usuario_p text, nr_seq_retorno_p INOUT text) FROM PUBLIC;

