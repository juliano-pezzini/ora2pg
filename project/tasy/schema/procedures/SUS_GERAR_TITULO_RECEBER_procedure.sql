-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_titulo_receber ( cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_pessoa_juridica_p text, vl_fatura_p bigint, nr_seq_protocolo_p bigint, nr_seq_trans_fin_contab_p bigint, cd_tipo_portador_p bigint, cd_portador_p bigint, dt_emissao_p timestamp, dt_vencimento_p timestamp, dt_contabil_p timestamp, cd_conta_financ_p bigint, ds_observacao_titulo_p text, cd_regra_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_titulo_w        	bigint;
cd_moeda_w        	integer;
tx_juros_w        	double precision;
tx_multa_w        	double precision;
cd_tipo_taxa_juro_w    	bigint;
cd_tipo_taxa_multa_w   	bigint;
tx_desc_antecipacao_w   	double precision;
ie_situacao_w			varchar(1) 	:= '1';
ie_tipo_emissao_titulo_w 	integer 	:= 1;
ie_origem_titulo_w		varchar(10)	:= '2';
ie_tipo_titulo_w		varchar(5)	:= '1';
ie_tipo_inclusao_w		varchar(1)	:= '2';
dt_liquidacao_w			timestamp;
nr_seq_classe_w			bigint	:= null;
cd_estab_financeiro_w		bigint;
cd_convenio_conta_w		bigint	:= null;
nr_seq_classif_w		bigint 	:= 1;
nr_seq_trans_fin_baixa_w	bigint;
nr_seq_fatura_tit_w		bigint;
nr_seq_trans_fin_bx_classe_w	classe_titulo_receber.nr_seq_trans_fin_baixa%type;
nr_seq_trans_fin_cont_clas_w	classe_titulo_receber.nr_seq_trans_fin_contab%type;


BEGIN 
 
select 	coalesce(max(cd_moeda_padrao),1), 
	max(cd_tipo_taxa_juro), 
	max(cd_tipo_taxa_multa), 
	max(pr_juro_padrao), 
	max(pr_multa_padrao), 
	max(nr_seq_trans_fin_baixa) 
into STRICT 	cd_moeda_w, 
	cd_tipo_taxa_juro_w, 
	cd_tipo_taxa_multa_w, 
	tx_juros_w, 
	tx_multa_w, 
	nr_seq_trans_fin_baixa_w 
from 	parametro_contas_receber 
where	cd_estabelecimento = cd_estabelecimento_p;
 
select	max(cd_convenio) 
into STRICT	cd_convenio_conta_w 
from	protocolo_convenio 
where	nr_seq_protocolo	= nr_seq_protocolo_p;
 
select	coalesce(cd_estab_financeiro, cd_estabelecimento) 
into STRICT	cd_estab_financeiro_w 
from	estabelecimento 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
if (vl_fatura_p = 0) then 
  	begin 
  	dt_liquidacao_w 	:= clock_timestamp();
  	ie_situacao_w  	:= '2';
  	end;
end if;
 
select	nextval('titulo_seq') 
	into STRICT nr_titulo_w
;
 
insert into titulo_receber( 
	nr_titulo, 
	cd_estabelecimento, dt_atualizacao, nm_usuario, 
	dt_emissao, dt_vencimento, dt_pagamento_previsto, 
	vl_titulo, vl_saldo_titulo, vl_saldo_juros, 
	vl_saldo_multa, cd_moeda, cd_portador, cd_tipo_portador, 
	ie_situacao, ie_tipo_emissao_titulo, 
	ie_origem_titulo, ie_tipo_titulo, ie_tipo_inclusao, 
	cd_pessoa_fisica, cd_cgc, nr_interno_conta, nr_atendimento, 
	cd_serie, nr_documento, nr_sequencia_doc,	 cd_banco, 
	cd_agencia_bancaria, nr_bloqueto, dt_liquidacao, 
	nr_lote_contabil, ds_observacao_titulo, dt_contabil, 
		nr_seq_protocolo, tx_juros, cd_tipo_taxa_juro, tx_multa, 
	cd_tipo_taxa_multa, tx_desc_antecipacao, nr_seq_classe, 
	nr_guia, nr_nota_fiscal, nr_seq_nf_saida, cd_estab_financeiro, 
	cd_convenio_conta, nr_seq_trans_fin_contab, nr_seq_trans_fin_baixa, 
	nr_seq_conta_banco, nr_seq_carteira_cobr, nm_usuario_orig, dt_inclusao) 
values ( 
	nr_titulo_w, cd_estabelecimento_p, clock_timestamp(), nm_usuario_p, 
	dt_emissao_p, dt_vencimento_p, dt_vencimento_p, vl_fatura_p,vl_fatura_p, 
	0, 0, cd_moeda_w, cd_portador_p, cd_tipo_portador_p, 
	ie_situacao_w, ie_tipo_emissao_titulo_w, 
	ie_origem_titulo_w, ie_tipo_titulo_w, ie_tipo_inclusao_w, 
	cd_pessoa_fisica_p, cd_pessoa_juridica_p, null, 
		null, null, null, 0, 
	null, null, null, 
	dt_liquidacao_w, null, ds_observacao_titulo_p, dt_contabil_p, nr_seq_protocolo_p, 
	tx_juros_w, cd_tipo_taxa_juro_w, tx_multa_w, cd_tipo_taxa_multa_w, 
	0, nr_seq_classe_w, null, null, null, cd_estab_financeiro_w, 
	cd_convenio_conta_w, nr_seq_trans_fin_contab_p, nr_seq_trans_fin_baixa_w, 
	null, null, nm_usuario_p, clock_timestamp());
	 
	select	obter_classe_titulo_receber(null, nr_seq_protocolo_p, nr_titulo_w) 
	into STRICT	nr_seq_classe_w 
	;
	/*AAMFIRMO OS 884850. Obter tf fin e tf baixa da classe para apresentar no título*/
 
	if (nr_seq_classe_w IS NOT NULL AND nr_seq_classe_w::text <> '') then 
		 
		select	max(a.nr_seq_trans_fin_baixa), 
				max(a.nr_seq_trans_fin_contab) 
		into STRICT	nr_seq_trans_fin_bx_classe_w, 
				nr_seq_trans_fin_cont_clas_w 
		from	classe_titulo_receber a 
		where	a.nr_sequencia = nr_seq_classe_w;
 
	end if;
	 
	update	titulo_receber 
	set		nr_seq_classe				= nr_seq_classe_w, 
			nr_seq_trans_fin_contab		= CASE WHEN nr_seq_trans_fin_cont_clas_w = NULL THEN nr_seq_trans_fin_contab  ELSE nr_seq_trans_fin_cont_clas_w END , /*AAMFIRMO OS 884850. Obter tf fin e tf baixa da classe para apresentar no título*/
 
			nr_seq_trans_fin_baixa		= CASE WHEN nr_seq_trans_fin_bx_classe_w = NULL THEN nr_seq_trans_fin_baixa  ELSE nr_seq_trans_fin_bx_classe_w END  /*AAMFIRMO OS 884850. Obter tf fin e tf baixa da classe para apresentar no título*/
	 
	where	nr_titulo	= nr_titulo_w;
	 
insert into titulo_receber_classif(nr_titulo, 
	nr_sequencia, 
	vl_classificacao, 
	dt_atualizacao, 
	nm_usuario, 
	cd_conta_financ, 
	cd_centro_custo, 
	vl_desconto, 
	vl_original, 
	nr_seq_contrato, 
	cd_conta_contabil) 
values (	nr_titulo_w, 
	nr_seq_classif_w, 
	vl_fatura_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	cd_conta_financ_p, 
	null, 
	0, 
	vl_fatura_p, 
	null, 
	null);
	 
select 	nextval('sus_prot_conv_fatura_tit_seq') 
into STRICT	nr_seq_fatura_tit_w
;
 
insert into sus_prot_conv_fatura_tit(DT_ATUALIZACAO, 
	NM_USUARIO, 
	NR_SEQ_PROTOCOLO, 
	NR_SEQ_REGRA_FATURA, 
	NR_SEQUENCIA, 
	NR_TITULO, 
	DT_ATUALIZACAO_NREC, 
	NM_USUARIO_NREC) 
values (	clock_timestamp(), 
	nm_usuario_p, 
	nr_seq_protocolo_p, 
	cd_regra_p, 
	nr_seq_fatura_tit_w, 
	nr_titulo_w, 
	clock_timestamp(), 
	nm_usuario_p);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_titulo_receber ( cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_pessoa_juridica_p text, vl_fatura_p bigint, nr_seq_protocolo_p bigint, nr_seq_trans_fin_contab_p bigint, cd_tipo_portador_p bigint, cd_portador_p bigint, dt_emissao_p timestamp, dt_vencimento_p timestamp, dt_contabil_p timestamp, cd_conta_financ_p bigint, ds_observacao_titulo_p text, cd_regra_p bigint, nm_usuario_p text) FROM PUBLIC;

