-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobr_bradesco_febra_150 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

/*	Versão 05 
	Data: 11/11/2011	 
OS - 421020 */
 
 
/* Geral */
 
ds_conteudo_w			varchar(150);
nr_seq_registro_w			bigint	:= 0;
nr_seq_apres_w			bigint	:= 0;
vl_total_w			bigint	:= 0;

/* Header A*/
 
nm_empresa_w			varchar(20);
dt_geracao_w			varchar(8);
nr_seq_arquivo_w			varchar(6);
nm_banco_w			varchar(20);
cd_convenio_w			varchar(20);
cd_banco_w			varchar(3);

/* Transações C - D - E */
 
cd_agencia_bancaria_w		varchar(4);
ds_ocorrencia_1_w			varchar(40);
ds_ocorrencia_2_w			varchar(40);
ds_ocorrencia_w			varchar(60);
dt_vencimento_w			varchar(8);
vl_titulo_w			varchar(15);
ds_mensagen_w			varchar(26);
ds_uso_empresa_w			varchar(60);
ds_ident_cliente_emp_w		varchar(25);
ds_ident_cliente_emp_atual_w	varchar(25);
ds_ident_cliente_banco_w		varchar(14);
ie_tipo_inscricao_w			varchar(1);
nr_inscricao_w			varchar(15);
nr_carteira_benef_w		varchar(25);
nr_seq_pagador_w			bigint;

/* Brancos */
 
ds_brancos_52_w			varchar(52);
ds_brancos_25_w			varchar(25);
ds_brancos_20_w			varchar(20);
ds_brancos_126_w			varchar(126);
ds_brancos_8_w			varchar(8);
ds_brancos_4_w			varchar(4);

C01 CURSOR FOR 
	SELECT	lpad(substr(CASE WHEN coalesce(g.cd_agencia_bancaria::text, '') = '' THEN f.cd_agencia_bancaria  ELSE g.cd_agencia_bancaria END ,1,4),4,'0') cd_agencia_bancaria, 
		lpad(' ',40,' ') ds_ocorrencia_1, 
		lpad(' ',40,' ') ds_ocorrencia_2, 
		lpad(' ',60,' ') ds_ocorrencia, 
		substr(to_char(b.dt_vencimento,'YYYYMMDD'),1,8) dt_vencimento, 
		lpad(replace(to_char(b.vl_titulo, 'fm00000000000.00'),'.',''),15,'0') vl_titulo, 
		rpad(b.nr_titulo,60,' ') ds_uso_empresa, 
		lpad(' ',26,' ') ds_mensagen, 
		lpad(' ',25,' ') ds_ident_cliente_emp, /* identificacao do cliente na empresa */
 
		lpad(' ',25,' ') ds_ident_cliente_emp_atual, /* identificacao do cliente na empresa atual */
 
		rpad(coalesce(substr(pls_obter_dados_pagador_fin(d.nr_seq_pagador,'C'),1,8) || 
			substr(pls_obter_dados_pagador_fin(d.nr_seq_pagador,'DC'),1,1), ' '),14,' '), /* falta o código da operação da conta */
			 
		CASE WHEN coalesce(b.cd_cgc::text, '') = '' THEN '1'  ELSE '2' END  ie_tipo_inscricao, 
		lpad(coalesce(b.cd_cgc_cpf,'0'),15,'0') nr_inscricao, 
		coalesce(substr(pls_obter_dados_segurado(pls_obter_segurado_pagador(d.nr_seq_pagador),'C'),1,25),'0') nr_carteira_benef, 
		d.nr_seq_pagador 
	FROM banco_estabelecimento x, titulo_receber_cobr c, cobranca_escritural a, titulo_receber_v b
LEFT OUTER JOIN pls_mensalidade d ON (b.nr_seq_mensalidade = d.nr_sequencia)
LEFT OUTER JOIN banco_carteira e ON (b.nr_seq_carteira_cobr = e.nr_sequencia)
LEFT OUTER JOIN pls_contrato_pagador f ON (d.nr_seq_pagador = f.nr_sequencia)
LEFT OUTER JOIN pls_contrato_pagador_fin g ON (d.nr_seq_pagador = g.nr_seq_pagador)
WHERE a.nr_sequencia		= c.nr_seq_cobranca and c.nr_titulo			= b.nr_titulo and a.nr_seq_conta_banco	= x.nr_sequencia     and a.nr_sequencia		= nr_seq_cobr_escrit_p;


BEGIN 
delete from w_envio_banco where nm_usuario = nm_usuario_p;
 
select	lpad(' ',52,' '), 
	lpad(' ',25,' '), 
	lpad(' ',20,' '), 
	lpad(' ',126,' '), 
	lpad(' ',8,' '), 
	lpad(' ',4,' ') 
into STRICT	ds_brancos_52_w, 
	ds_brancos_25_w, 
	ds_brancos_20_w, 
	ds_brancos_126_w, 
	ds_brancos_8_w, 
	ds_brancos_4_w
;
 
/* Header */
 
select	rpad(upper(elimina_acentuacao(substr(obter_nome_pf_pj(null, b.cd_cgc),1,20))),20,' '), 
	to_char(clock_timestamp(),'YYYYMMDD'), 
	lpad(to_char(coalesce(a.nr_remessa,a.nr_sequencia)),6,'0'), 
	rpad(substr(obter_nome_banco(a.cd_banco),1,20),20,' ') nm_banco, 
	rpad(coalesce(substr(coalesce(c.cd_conv_banco_deb,c.cd_convenio_banco),1,20),' '),20,' ') cd_convenio,   /* precisa verificar */
 
	lpad(coalesce(substr(a.cd_banco,1,3),'0'),3,'0') cd_banco 
into STRICT	nm_empresa_w, 
	dt_geracao_w, 
	nr_seq_arquivo_w, 
	nm_banco_w, 
	cd_convenio_w, 
	cd_banco_w 
from	estabelecimento		b, 
	cobranca_escritural	a, 
	banco_estabelecimento	c 
where	a.cd_estabelecimento	= b.cd_estabelecimento 
and	a.nr_seq_conta_banco	= c.nr_sequencia 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p;
 
ds_conteudo_w	:= 	'A'|| '1' || cd_convenio_w || nm_empresa_w || cd_banco_w || nm_banco_w || dt_geracao_w || lpad(nr_seq_arquivo_w,6,'0') || '05' || 
			rpad('DEBITO AUTOMATICO',17,' ') || ds_brancos_52_w;
	 
nr_seq_apres_w	:= nr_seq_apres_w + 1;
	 
insert into w_envio_banco(	nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_estabelecimento, 
			ds_conteudo, 
			nr_seq_apres) 
	values (	nextval('w_envio_banco_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_estabelecimento_p, 
			ds_conteudo_w, 
			nr_seq_apres_w);
/* Fim Header */
 
 
/* Transação */
 
 
open C01;
loop 
fetch C01 into	 
	cd_agencia_bancaria_w, 
	ds_ocorrencia_1_w, 
	ds_ocorrencia_2_w, 
	ds_ocorrencia_w, 
	dt_vencimento_w, 
	vl_titulo_w, 
	ds_uso_empresa_w, 
	ds_mensagen_w, 
	ds_ident_cliente_emp_w, 
	ds_ident_cliente_emp_atual_w, 
	ds_ident_cliente_banco_w, 
	ie_tipo_inscricao_w, 
	nr_inscricao_w, 
	nr_carteira_benef_w, 
	nr_seq_pagador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	/* Caso o pagador não tenha carteira, buscar a carteira do titular */
 
	if (coalesce(nr_carteira_benef_w,'0') = '0') then		 
		select	coalesce(max(b.cd_usuario_plano),'0') 
		into STRICT	nr_carteira_benef_w 
		from	pls_segurado_carteira	b, 
			pls_segurado		a 
		where	a.nr_sequencia	 = b.nr_seq_segurado 
		and	coalesce(a.nr_seq_titular::text, '') = '' 
		and	a.nr_seq_pagador = nr_seq_pagador_w;
	end if;
	 
	nr_carteira_benef_w	:= rpad(nr_carteira_benef_w,25,'0');
	 
	nr_seq_apres_w	:= nr_seq_apres_w + 1;
	 
	/* TIPO E */
 
	ds_conteudo_w	:= 	'E' || nr_carteira_benef_w || cd_agencia_bancaria_w || ds_ident_cliente_banco_w || dt_vencimento_w || 
				vl_titulo_w || '03' || ds_uso_empresa_w || ie_tipo_inscricao_w || nr_inscricao_w || ds_brancos_4_w || '0';
	 
	insert into w_envio_banco(	nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				cd_estabelecimento, 
				ds_conteudo, 
				nr_seq_apres) 
		values (	nextval('w_envio_banco_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_estabelecimento_p, 
				ds_conteudo_w, 
				nr_seq_apres_w);
	/* FIM TIPO E */
 
	 
	vl_total_w := vl_total_w + vl_titulo_w;
	end;				
end loop;
close C01;
/* Fim Transação */
 
 
/* Trailler */
 
select	nextval('w_envio_banco_seq') 
into STRICT	nr_seq_registro_w
;
 
nr_seq_apres_w	:= nr_seq_apres_w + 1;
 
ds_conteudo_w	:= 	'Z' || lpad(nr_seq_apres_w,6,'0') || lpad(vl_total_w,17,'0') || ds_brancos_126_w;
 
insert into w_envio_banco(	nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_estabelecimento, 
			ds_conteudo, 
			nr_seq_apres) 
	values (	nextval('w_envio_banco_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_estabelecimento_p, 
			ds_conteudo_w, 
			nr_seq_apres_w);
/* Fim Trailler*/
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobr_bradesco_febra_150 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

