-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE grava_item_ordem_compra_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nr_ordem_compra_p bigint, ie_atualiza_avisa_solic_p text, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w			smallint;
nr_item_solic_compra_w			integer;
cd_material_w				integer;
cd_unidade_medida_compra_w		varchar(30);
qt_material_w				double precision;
ds_observacao_w				varchar(255);
ds_observacao_solic_w			varchar(255);
ds_marca_w				varchar(30);
nr_seq_marca_w				bigint;
nr_item_oci_w				integer;
cd_pessoa_solicitante_w			varchar(10);
cd_local_estoque_w			smallint;
ds_material_direto_w			varchar(255);
cd_centro_custo_w			bigint;
cd_conta_contabil_w			varchar(20);
ie_tipo_conta_w				integer	:= 2;
dt_ordem_compra_w			timestamp;
qt_data_entrega_item_w			bigint;
dt_entrega_w				timestamp;
qt_entrega_w				double precision;
ie_aviso_chegada_w			varchar(1);
ie_urgente_w				varchar(1);
ie_regra_local_w				varchar(15);
nr_seq_criterio_rateio_w			bigint;
ie_gravar_rateio_solic_w			varchar(1);

nr_seq_rateio_w				bigint;
cd_centro_rat_solic_w			integer;
cd_conta_rat_solic_w			varchar(20);
cd_conta_fin_rat_solic_w			bigint;
vl_rateio_w				double precision;
vl_frete_rat_solic_w			double precision;
vl_desconto_rat_solic_w			double precision;
vl_seguro_rat_solic_w			double precision;
vl_despesa_rat_solic_w			double precision;
ie_situacao_rat_solic_w			varchar(1);
nr_seq_crit_rat_solic_w			double precision;
qt_rateio_w				double precision;
ie_tipo_ordem_w				ordem_compra.ie_tipo_ordem%type;
nr_seq_proj_rec_w			ordem_compra_item.nr_seq_proj_rec%type;
ie_visualizar_conta_ban_w varchar(1);
nr_seq_conta_bco_w          projeto_recurso.nr_seq_conta_bco%type;

c01 CURSOR FOR				
SELECT	a.cd_local_estoque,
	a.cd_centro_custo,
	a.cd_conta_contabil,
	b.nr_item_solic_compra,
	b.cd_material,
	b.cd_unidade_medida_compra,
	b.qt_material,
	b.ds_observacao,
	substr(obter_marca_material(b.cd_material,'D'),1,20),
	b.ds_material_direto,
	b.nr_seq_criterio_rateio,
	b.nr_seq_proj_rec
from	solic_compra a,
	solic_compra_item b
join material m on m.cd_material = b.cd_material and m.ie_situacao = 'A'
where	a.nr_solic_compra = b.nr_solic_compra
and	b.nr_solic_compra = nr_solic_compra_p
and	coalesce(b.dt_baixa::text, '') = ''
and	coalesce(a.dt_baixa::text, '') = ''
and	coalesce(b.dt_reprovacao::text, '') = ''
and	coalesce(b.dt_reprovacao::text, '') = ''
and	(b.dt_autorizacao IS NOT NULL AND b.dt_autorizacao::text <> '')
and	coalesce(b.nr_seq_motivo_cancel::text, '') = ''
and	((nr_item_solic_compra_p = 0) or
	((nr_item_solic_compra_p > 0) and (b.nr_item_solic_compra = nr_item_solic_compra_p) and (obter_se_solic_vinc_ordem_item(nr_ordem_compra_p,nr_solic_compra_p,nr_item_solic_compra_p) = 'N'))); --Para evitar inclusao em duplicidade pelo usuario. OS 935814
c02 CURSOR FOR
SELECT	qt_entrega_solicitada,
	dt_entrega_solicitada,
	ds_observacao
from	solic_compra_item_entrega
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_w;

c03 CURSOR FOR
SELECT	cd_centro_custo,
	cd_conta_contabil,
	cd_conta_financ,
	vl_rateio,
	vl_frete,
	vl_desconto,
	vl_seguro,
	vl_despesa_acessoria,
	ie_situacao,
	nr_seq_criterio_rateio,
	qt_rateio
from	solic_compra_item_rateio
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_w
order by	nr_sequencia;


BEGIN


if (nr_item_solic_compra_p = 0) and
	substr(obter_se_solic_vinc_ordem(nr_ordem_compra_p,nr_solic_compra_p),1,1) = 'S' then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(355410);
end if;


open C01;
loop
fetch C01 into	
	cd_local_estoque_w,
	cd_centro_custo_w,
	cd_conta_contabil_w,
	nr_item_solic_compra_w,
	cd_material_w,
	cd_unidade_medida_compra_w,
	qt_material_w,
	ds_observacao_w,
	ds_marca_w,
	ds_material_direto_w,
	nr_seq_criterio_rateio_w,
	nr_seq_proj_rec_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	cd_estabelecimento,
		cd_pessoa_solicitante,
		ie_tipo_ordem
	into STRICT	cd_estabelecimento_w,
		cd_pessoa_solicitante_w,
		ie_tipo_ordem_w
	from	ordem_compra
	where	nr_ordem_compra = nr_ordem_compra_p;

	ie_gravar_rateio_solic_w	:= coalesce((obter_valor_param_usuario(917, 184, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N');
	ie_visualizar_conta_ban_w	:= coalesce((obter_valor_param_usuario(917, 61, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N');
	
	select	coalesce(max(nr_sequencia),null)
	into STRICT	nr_seq_marca_w
	from	marca
	where	elimina_acentuacao(upper(ds_marca)) = elimina_acentuacao(upper(ds_marca_w));
	
	select	coalesce(max(nr_item_oci),0) + 1
	into STRICT	nr_item_oci_w
	from	ordem_compra_item
	where	nr_ordem_compra = nr_ordem_compra_p;
	
	if (coalesce(cd_conta_contabil_w::text, '') = '') then
		if (coalesce(cd_centro_custo_w::text, '') = '') then
			ie_tipo_conta_w	:= 2;
		else
			ie_tipo_conta_w	:= 3;
		end if;

		select	dt_ordem_compra
		into STRICT	dt_ordem_compra_w
		from	ordem_compra
		where	nr_ordem_compra = nr_ordem_compra_p;

		SELECT * FROM define_conta_material(	cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, null, 0, null, null, 0, 0, 0, cd_local_estoque_w, 0, dt_ordem_compra_w, cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
	end if;	
	
	
	
	--Pega o local de estoque da regra 'Regra de local e centro de custo para o compras'
	select (max(obter_valor_param_usuario(917, 133, obter_perfil_ativo,nm_usuario_p, cd_estabelecimento_w)))
	into STRICT	ie_regra_local_w
	;
	
	if	((ie_regra_local_w = 'S') or
		((ie_regra_local_w = 'A') and (coalesce(cd_local_estoque_w::text, '') = ''))) then
	
	
		select coalesce(obter_regra_local_material(cd_estabelecimento_w,cd_material_w,'O',ie_tipo_ordem_w),cd_local_estoque_w)
		into STRICT  cd_local_estoque_w	
		;
		
		select	coalesce(obter_regra_centro_custo_mat(cd_estabelecimento_w,cd_material_w,'O',ie_tipo_ordem_w),cd_centro_custo_w)
		into STRICT	cd_centro_custo_w
		;
	end if;
	
    if (ie_visualizar_conta_ban_w = 'S') and (nr_seq_proj_rec_w IS NOT NULL AND nr_seq_proj_rec_w::text <> '') then
	
	     select   max(nr_seq_conta_bco)nr_seq_conta_bco
		 into STRICT   nr_seq_conta_bco_w
         from   projeto_recurso
         where  nr_sequencia  = nr_seq_proj_rec_w;
		
	end if;


	insert into ordem_compra_item(	
		nr_ordem_compra,		nr_item_oci,				cd_material,
		cd_unidade_medida_compra,	vl_unitario_material,			qt_material,
		dt_atualizacao,			nm_usuario,				ie_situacao,
		cd_pessoa_solicitante,		pr_descontos,				cd_local_estoque,
		ds_material_direto,		ds_observacao,				ds_marca,
		vl_item_liquido,		cd_centro_custo,			cd_conta_contabil,
		nr_solic_compra,		nr_item_solic_compra,			ie_geracao_solic,
		pr_desc_financ,			nr_seq_marca,				vl_desconto,
		nr_seq_criterio_rateio,		qt_original,			vl_total_item,
		nr_seq_proj_rec,        nr_seq_conta_bco, cd_sequencia_parametro)
	values (nr_ordem_compra_p,		nr_item_oci_w,				cd_material_w,
		cd_unidade_medida_compra_w,	0,					qt_material_w,
		clock_timestamp(),			nm_usuario_p,				'A',
		cd_pessoa_solicitante_w,	0,					cd_local_estoque_w,
		ds_material_direto_w,		ds_observacao_w,			ds_marca_w,
		0,				cd_centro_custo_w,			cd_conta_contabil_w,
		nr_solic_compra_p,		nr_item_solic_compra_w,			'U',
		0,				nr_seq_marca_w,				0,
		nr_seq_criterio_rateio_w,	qt_material_w,				round((qt_material_w * 0)::numeric,4),
		nr_seq_proj_rec_w,           nr_seq_conta_bco_w, philips_contabil_pck.get_parametro_conta_contabil);

	open C02;
	loop
	fetch C02 into	
		qt_entrega_w,
		dt_entrega_w,
		ds_observacao_solic_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		select	count(*)
		into STRICT	qt_data_entrega_item_w
		from	ordem_compra_item_entrega
		where	nr_ordem_compra	= nr_ordem_compra_p
		and	nr_item_oci	= nr_item_oci_w
		and	dt_prevista_entrega	= dt_entrega_w
		and	coalesce(dt_cancelamento::text, '') = '';

		if (qt_data_entrega_item_w = 0) then

			insert into ordem_compra_item_entrega(
				nr_sequencia,				nr_ordem_compra,			nr_item_oci,
				dt_prevista_entrega,			dt_entrega_original,			dt_real_entrega,
				dt_entrega_limite,				qt_prevista_entrega,		qt_real_entrega,
				dt_atualizacao,				nm_usuario,			ds_observacao)
			values (	nextval('ordem_compra_item_entrega_seq'),	nr_ordem_compra_p,		nr_item_oci_w,
				dt_entrega_w,				dt_entrega_w,			null,
				dt_entrega_w,					qt_entrega_w,			null,
				clock_timestamp(),					nm_usuario_p,			ds_observacao_solic_w);
		else
			update	ordem_compra_item_entrega
			set	qt_prevista_entrega 	= qt_prevista_entrega + qt_entrega_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()			
			where	nr_ordem_compra 		= nr_ordem_compra_p
			and	nr_item_oci		= nr_item_oci_w
			and	dt_prevista_entrega 	= dt_entrega_w
			and	coalesce(dt_cancelamento::text, '') = '';
		end if;	
		end;
	end loop;
	close C02;

	if (ie_gravar_rateio_solic_w = 'S') then
		begin

		open c03;
		loop
		fetch c03 into
			cd_centro_rat_solic_w,
			cd_conta_rat_solic_w,
			cd_conta_fin_rat_solic_w,
			vl_rateio_w,
			vl_frete_rat_solic_w,
			vl_desconto_rat_solic_w,
			vl_seguro_rat_solic_w,
			vl_despesa_rat_solic_w,
			ie_situacao_rat_solic_w,
			nr_seq_crit_rat_solic_w,
			qt_rateio_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin

			select	nextval('ordem_compra_item_rateio_seq')
			into STRICT	nr_seq_rateio_w
			;

			insert into ordem_compra_item_rateio(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_ordem_compra,
				nr_item_oci,
				cd_centro_custo,
				cd_conta_contabil,
				cd_conta_financ,
				vl_rateio,
				vl_frete,
				vl_desconto,
				vl_seguro,
				vl_despesa_acessoria,
				nr_seq_criterio_rateio,
				ie_situacao,
				qt_rateio)
			values (
				nr_seq_rateio_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_ordem_compra_p,
				nr_item_oci_w,
				cd_centro_rat_solic_w,
				cd_conta_rat_solic_w,
				cd_conta_fin_rat_solic_w,
				vl_rateio_w,
				vl_frete_rat_solic_w,
				vl_desconto_rat_solic_w,
				vl_seguro_rat_solic_w,
				vl_despesa_rat_solic_w,
				nr_seq_crit_rat_solic_w,
				ie_situacao_rat_solic_w,
				qt_rateio_w);				

			end;
		end loop;
		close c03;

		end;
	end if;
		
	end;
end loop;
close C01;

if (coalesce(ie_atualiza_avisa_solic_p,'N') = 'S') then
	begin

	select	ie_aviso_chegada,
		ie_urgente
	into STRICT	ie_aviso_chegada_w,
		ie_urgente_w
	from	solic_compra
	where	nr_solic_compra = nr_solic_compra_p;

	update	ordem_compra
	set	ie_aviso_chegada = ie_aviso_chegada_w,
		ie_urgente = ie_urgente_w
	where	nr_ordem_compra = nr_ordem_compra_p;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE grava_item_ordem_compra_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nr_ordem_compra_p bigint, ie_atualiza_avisa_solic_p text, nm_usuario_p text) FROM PUBLIC;

