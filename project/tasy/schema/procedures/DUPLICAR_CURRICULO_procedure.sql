-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_curriculo ( nr_seq_curriculo_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_curriculo_w	bigint;
/* pf_curriculo_formacao */

ie_formacao_curso_w	varchar(1);
ie_formacao_w		varchar(15);
ds_instituicao_w	varchar(80);
ds_curso_w		varchar(80);
cd_ano_w		smallint;
ds_observacao_w		varchar(4000);
/* pf_curriculo_prof */

nm_empresa_w		varchar(80);
ds_cidade_w		varchar(80);
sg_estado_w		valor_dominio.vl_dominio%type;
dt_entrada_w		timestamp;
dt_saida_w		timestamp;
ds_cargo_w		varchar(4000);
ds_atividade_w		varchar(4000);
/* pf_curriculo_idioma */

nr_seq_idioma_w		bigint;
ie_escrita_w		varchar(15);
ie_leitura_w		varchar(15);
ie_conversacao_w	varchar(15);
/* pf_curriculo_inf_adic */

nr_seq_inf_w		bigint;
ds_informacao_w		varchar(32000);
nr_seq_apres_w		bigint;


C01 CURSOR FOR
	SELECT	ie_formacao_curso,
		ie_formacao,
		ds_instituicao,
		ds_curso,
		cd_ano,
		ds_observacao
	from	pf_curriculo_formacao
	where	nr_seq_curriculo = nr_seq_curriculo_p;

C02 CURSOR FOR
	SELECT	nm_empresa,
		ds_cidade,
		sg_estado,
		dt_entrada,
		dt_saida,
		ds_cargo,
		ds_atividade,
		ds_observacao
	from	pf_curriculo_prof
	where	nr_seq_curriculo = nr_seq_curriculo_p;

C03 CURSOR FOR
	SELECT	nr_seq_idioma,
		ie_escrita,
		ie_leitura,
		ie_conversacao
	from	pf_curriculo_idioma
	where	nr_seq_curriculo = nr_seq_curriculo_p;

C04 CURSOR FOR
	SELECT	nr_seq_inf,
		ds_informacao,
		nr_seq_apres
	from	pf_curriculo_inf_adic
	where	nr_seq_curriculo = nr_seq_curriculo_p;

BEGIN

select	nextval('pf_curriculo_seq')
into STRICT	nr_seq_curriculo_w
;

insert	into pf_curriculo(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_curriculo,
				cd_pessoa_fisica,
				dt_liberacao,
				ie_situacao)
			(SELECT	nr_seq_curriculo_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				dt_curriculo,
				cd_pessoa_fisica,
				null,
				'A'
			from	pf_curriculo
			where	nr_sequencia	= nr_seq_curriculo_p);

open C01;
loop
fetch C01 into
	ie_formacao_curso_w,
	ie_formacao_w,
	ds_instituicao_w,
	ds_curso_w,
	cd_ano_w,
	ds_observacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert into pf_curriculo_formacao(	nr_sequencia,
						nr_seq_curriculo,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_formacao_curso,
						ie_formacao,
						ds_instituicao,
						ds_curso,
						cd_ano,
						ds_observacao)
					values (	nextval('pf_curriculo_formacao_seq'),
						nr_seq_curriculo_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ie_formacao_curso_w,
						ie_formacao_w,
						ds_instituicao_w,
						ds_curso_w,
						cd_ano_w,
						ds_observacao_w);
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nm_empresa_w,
	ds_cidade_w,
	sg_estado_w,
	dt_entrada_w,
	dt_saida_w,
	ds_cargo_w,
	ds_atividade_w,
	ds_observacao_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	insert into pf_curriculo_prof(	NR_SEQUENCIA,
					NR_SEQ_CURRICULO,
					DT_ATUALIZACAO,
					NM_USUARIO,
					DT_ATUALIZACAO_NREC,
					NM_USUARIO_NREC,
					NM_EMPRESA,
					DS_CIDADE,
					SG_ESTADO,
					DT_ENTRADA,
					DT_SAIDA,
					DS_CARGO,
					DS_ATIVIDADE,
					DS_OBSERVACAO)
				values (	nextval('pf_curriculo_prof_seq'),
					nr_seq_curriculo_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nm_empresa_w,
					ds_cidade_w,
					sg_estado_w,
					dt_entrada_w,
					dt_saida_w,
					ds_cargo_w,
					ds_atividade_w,
					ds_observacao_w);
	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_seq_idioma_w,
	ie_escrita_w,
	ie_leitura_w,
	ie_conversacao_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	insert into pf_curriculo_idioma(nr_sequencia,
					nr_seq_curriculo,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_idioma,
					ie_escrita,
					ie_leitura,
					ie_conversacao)
				values (	nextval('pf_curriculo_idioma_seq'),
					nr_seq_curriculo_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_idioma_w,
					ie_escrita_w,
					ie_leitura_w,
					ie_conversacao_w);
	end;
end loop;
close C03;

open C04;
loop
fetch C04 into
	nr_seq_inf_w,
	ds_informacao_w,
	nr_seq_apres_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin
	insert into pf_curriculo_inf_adic(	NR_SEQUENCIA,
						NR_SEQ_CURRICULO,
						DT_ATUALIZACAO,
						NM_USUARIO,
						DT_ATUALIZACAO_NREC,
						NM_USUARIO_NREC,
						NR_SEQ_INF,
						DS_INFORMACAO,
						nr_seq_apres)
					values (	nextval('pf_curriculo_inf_adic_seq'),
						nr_seq_curriculo_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_inf_w,
						ds_informacao_w,
						nr_seq_apres_w);
	end;
end loop;
close C04;

/*update	pf_curriculo
set	ie_situacao	= 'I'
where	nr_sequencia	= nr_seq_curriculo_p;*/
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_curriculo ( nr_seq_curriculo_p bigint, nm_usuario_p text) FROM PUBLIC;

