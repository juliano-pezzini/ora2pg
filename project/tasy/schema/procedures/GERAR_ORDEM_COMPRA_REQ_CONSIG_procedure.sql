-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordem_compra_req_consig ( cd_estabelecimento_p bigint, cd_fornecedor_p text, cd_local_entrega_p bigint, cd_material_p bigint, qt_material_p bigint, nm_usuario_p text, nr_requisicao_p bigint, cd_acao_p text, nr_sequencia_p bigint) AS $body$
DECLARE


nr_ordem_compra_w		bigint;
nr_item_oci_w			integer;
nr_item_oci_ww			integer;
cd_comprador_w			varchar(10);
cd_moeda_w			bigint;
cd_cond_pagto_w  			bigint;
qt_dias_entrega_w			bigint;
cd_local_estoque_w		smallint;
cd_centro_custo_w			integer;
cd_pessoa_solic_w	      		 varchar(10);
cd_unid_med_compra_w		varchar(30)  	:= '';
ds_observacao_w			varchar(4000)	:= '';
ds_observacao_req_w		varchar(255)	:= '';
ds_local_estoque_w		varchar(60);
nm_pessoa_fisica_w		varchar(60);
ds_centro_custo_w			varchar(80);
qt_conv_compra_estoque_w		double precision;
qt_conv_estoque_consumo_w	double precision;
qt_compra_w			double precision;
ie_aprova_auto_w			varchar(01);
cd_local_entrega_w		integer;
nm_pessoa_contato_w		varchar(255);
tx_desc_ordem_w			double precision;
pr_desc_financeiro_w		double precision;
dt_aprovacao_w			timestamp;
ie_agrupa_oc_novo_item_w		varchar(1);
ie_atualizou_item_w			varchar(1);
nr_seq_entrega_w			bigint;
vl_preco_tabela_w			double precision;
vl_unitario_material_w		double precision	:= 0;
ie_tipo_conta_w			integer;
cd_conta_contabil_w		varchar(20);
ie_tipo_perda_w			operacao_estoque.ie_tipo_perda%type;
nr_seq_lote_fornec_w    ordem_compra_item.nr_seq_lote_fornec%type;


BEGIN

select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMC'),1,30) cd_unidade_medida_compra,
	qt_conv_compra_estoque,
	qt_conv_estoque_consumo
into STRICT	cd_unid_med_compra_w,
	qt_conv_compra_estoque_w,
	qt_conv_estoque_consumo_w
from	material
where	cd_material = cd_material_p;

qt_compra_w	:= dividir(dividir(qt_material_p, qt_conv_compra_estoque_w), qt_conv_estoque_consumo_w);

select	max(a.cd_pessoa_requisitante),
	max(a.cd_local_estoque),
	max(a.cd_centro_custo),
	max(SUBSTR(OBTER_NOME_PF(b.CD_PESSOA_FISICA), 0, 60)),
	max(c.ds_local_estoque),
	max(obter_desc_centro_custo(a.cd_centro_custo)),
	max(a.ds_observacao)
into STRICT	cd_pessoa_solic_w,
	cd_local_estoque_w,
	cd_centro_custo_w,
	nm_pessoa_fisica_w,
	ds_local_estoque_w,
	ds_centro_custo_w,
	ds_observacao_req_w
from	Local_estoque c,
	pessoa_fisica b,
	requisicao_material a
where	a.nr_requisicao	= nr_requisicao_p
and	a.cd_local_estoque	= c.cd_local_estoque
and	b.cd_pessoa_fisica	= a.cd_pessoa_requisitante;

select	cd_comprador_padrao,
	cd_moeda_padrao,
	cd_condicao_pagamento_padrao,
	ie_aprova_ordem_consig,
	coalesce(cd_local_entrega_consig, cd_local_estoque_w),
	coalesce(cd_local_consig, cd_local_estoque_w),
	coalesce(ie_agrupa_oc_novo_item,'N')
into STRICT	cd_comprador_w,
	cd_moeda_w,
	cd_cond_pagto_w,
	ie_aprova_auto_w,
	cd_local_entrega_w,
	cd_local_estoque_w,
	ie_agrupa_oc_novo_item_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_p;

ds_observacao_w	:= 	wheb_mensagem_pck.get_texto(302180,
				'NM_REQUISITANTE=' || nm_pessoa_fisica_w || 
				';DS_LOCAL_ESTOQUE=' || ds_local_estoque_w ||
				';DS_CENTRO_CUSTO=' || ds_centro_custo_w);
ds_observacao_w	:= 	substr(ds_observacao_w || ds_observacao_req_w,1,4000);


select	coalesce(obter_ordem_atend_consignado(cd_estabelecimento_p, cd_fornecedor_p, cd_local_entrega_p, nr_requisicao_p, 0, 0,'Q'),0)
into STRICT	nr_ordem_compra_w
;

if (nr_ordem_compra_w = 0) then
	begin

	if (coalesce(cd_moeda_w::text, '') = '') or (coalesce(cd_cond_pagto_w::text, '') = '') or (coalesce(cd_comprador_w::text, '') = '') then
		/*'Os parametros de compra estao incompletos!' || chr(13) || chr(10) ||
		'Verifique se os campos Comprador, Moeda e Condicao de Pagamento estao informados!');*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(196448);
	end if;

	select	substr(obter_dados_pf_pj_estab(cd_estabelecimento_p, null, cd_fornecedor_p, 'ENC'),1,255),
		obter_dados_pf_pj_estab(cd_estabelecimento_p, null, cd_fornecedor_p, 'TDO'),
		obter_dados_pf_pj_estab(cd_estabelecimento_p, null, cd_fornecedor_p, 'TDF')
	into STRICT	nm_pessoa_contato_w,
		tx_desc_ordem_w,
		pr_desc_financeiro_w
	;	
	
	select	nextval('ordem_compra_seq')
	into STRICT	nr_ordem_compra_w
	;

        insert into ordem_compra(
		nr_ordem_compra,
		cd_estabelecimento,
		cd_cgc_fornecedor,
		cd_comprador,
		dt_ordem_compra,
		dt_atualizacao,
		nm_usuario,
		cd_moeda,
		ie_situacao,
		dt_inclusao,
		cd_pessoa_solicitante,
		cd_cgc_transportador,
		ie_frete,
		vl_frete,
		pr_multa_atraso,
		pr_desconto,
		pr_desc_financeiro,
		pr_desc_pgto_antec,
		pr_juros_negociado,
		dt_emissao,
		ds_pessoa_contato,
		ds_observacao,
		cd_motivo_alteracao,
		cd_local_entrega,
		dt_entrega,
		nr_requisicao,
		dt_aprovacao,
		dt_baixa,
		cd_condicao_pagamento,
		ie_aviso_chegada,
		ie_emite_obs,
		ie_urgente,
		ie_somente_pagto,
		ie_tipo_ordem)
	values (	nr_ordem_compra_w,
		cd_estabelecimento_p,
		cd_fornecedor_p,
		cd_comprador_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		cd_moeda_w,
		'A',
		clock_timestamp(),
		cd_pessoa_solic_w,
		null,
		'C',
		null,
		null,
		tx_desc_ordem_w,
		pr_desc_financeiro_w,
		null,
		null,
		null,
		nm_pessoa_contato_w,
		ds_observacao_w,
		null,
		cd_local_entrega_w,
		clock_timestamp(),
		nr_requisicao_p,
		null,
		null,
		cd_cond_pagto_w,
		'N',
		'S',
		'N',
		'N',
		'Q');
	end;
end if;

select	coalesce(max(nr_item_oci) + 1,1)
into STRICT	nr_item_oci_w
from	ordem_compra_item
where	nr_ordem_compra = nr_ordem_compra_w;

ie_atualizou_item_w := 'N';

if (ie_agrupa_oc_novo_item_w = 'S') then
	begin
	select	coalesce(max(nr_item_oci),0)
	into STRICT	nr_item_oci_ww
	from	ordem_compra_item
	where	nr_ordem_compra = nr_ordem_compra_w
	and	cd_material = cd_material_p;
	
	if (nr_item_oci_ww > 0) then
		begin
		update	ordem_compra_item
		set	qt_material = (qt_material + qt_compra_w),
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp(),
			vl_total_item = round(( (qt_material + qt_compra_w) * vl_unitario_material),4)
		where	nr_ordem_compra = nr_ordem_compra_w
		and	nr_item_oci = nr_item_oci_ww;
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_entrega_w
		from	ordem_compra_item_entrega
		where	nr_ordem_compra = nr_ordem_compra_w
		and	nr_item_oci = nr_item_oci_ww;		
		
		update	ordem_compra_item_entrega
		set	qt_prevista_entrega = (qt_prevista_entrega + qt_compra_w),
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p
		where	nr_ordem_compra = nr_ordem_compra_w
		and	nr_item_oci = nr_item_oci_ww
		and	nr_sequencia = nr_seq_entrega_w;
		
		ie_atualizou_item_w	:= 'S';
		end;
	end if;
	end;
end if;

if (ie_atualizou_item_w = 'N') then


	vl_unitario_material_w := obter_valor_mat_ordem_consig(	cd_estabelecimento_p, cd_fornecedor_p, cd_material_p, 0, 0, 0, null, 0, clock_timestamp(), 0, 0, 0, clock_timestamp(), vl_unitario_material_w);


	ie_tipo_conta_w		:= 3;
	if (coalesce(cd_centro_custo_w::text, '') = '') then
		ie_tipo_conta_w	:= 2;
	end if;
	
	SELECT * FROM define_conta_material(cd_estabelecimento_p, cd_material_p, ie_tipo_conta_w, null, null, null, null, null, null, null, cd_local_estoque_w, Null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

	select	substr(max(ds_observacao),1,255)
	into STRICT	ds_observacao_w
	from	item_requisicao_material
	where	nr_requisicao = nr_requisicao_p
	and	cd_material = cd_material_p;
	
	/*Rotina para garantir que  o local de estoque nao seja preenchido no item da ordem de compra, se a operacao de estoque nao for do tipo perda*/

	select	coalesce(max(b.ie_tipo_perda),'0')
	into STRICT	ie_tipo_perda_w
	FROM	requisicao_material a,
		operacao_estoque b
	WHERE	a.cd_operacao_estoque = b.cd_operacao_estoque
	AND	nr_requisicao = nr_requisicao_p;
	
	if (ie_tipo_perda_w <> '0') then
		
		select	min(cd_local_estoque)
		into STRICT	cd_local_estoque_w
		from	local_estoque
		where	cd_estabelecimento = cd_estabelecimento_p
		and	ie_situacao = 'A'
		and	ie_tipo_local = 8;
	end if;
	
	/*insere no item da ordem de compra, o lote fornecedor obtido da item da requisicao*/

	select	max(nr_seq_lote_fornec)
	into STRICT	nr_seq_lote_fornec_w
	from	item_requisicao_material
	where	nr_requisicao = nr_requisicao_p;
	
	insert into ordem_compra_item(
		nr_ordem_compra,
		nr_item_oci,
		cd_material,
		cd_unidade_medida_compra,
		vl_unitario_material,
		qt_material,
		qt_original,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		cd_pessoa_solicitante,
		qt_material_entregue,
		pr_descontos,
		cd_local_estoque,
		ds_material_direto,
		ds_observacao,
		cd_motivo_alteracao,
		nr_cot_compra,
		nr_item_cot_compra,
		cd_centro_custo,
		cd_conta_contabil,
		nr_seq_lote_fornec,
		vl_total_item,
		cd_sequencia_parametro)
	values (	nr_ordem_compra_w,
		nr_item_oci_w,
		cd_material_p,
		cd_unid_med_compra_w,
		vl_unitario_material_w,
		qt_compra_w,
		qt_compra_w,
		clock_timestamp(),
		nm_usuario_p,
		'A',
		cd_pessoa_solic_w,
		null,
		null,
		cd_local_estoque_w,
		null,
		ds_observacao_w,
		null,
		null,
		null,
		cd_centro_custo_w,
		cd_conta_contabil_w,
		nr_seq_lote_fornec_w,
		round((qt_compra_w * vl_unitario_material_w)::numeric,4),
		philips_contabil_pck.get_parametro_conta_contabil);

	insert	into ordem_compra_item_entrega(
		nr_sequencia,
		nr_ordem_compra,
		nr_item_oci,
		dt_prevista_entrega,
		dt_real_entrega,
		dt_entrega_original,
		dt_entrega_limite,
		qt_prevista_entrega,
		qt_real_entrega,
		dt_atualizacao,
		nm_usuario,
		ds_observacao)
	values (	nextval('ordem_compra_item_entrega_seq'),
		nr_ordem_compra_w,
		nr_item_oci_w,
		clock_timestamp(),
		null,
		clock_timestamp(),
		clock_timestamp(),
		qt_compra_w,
		null,
		clock_timestamp(),
		nm_usuario_p,
		null);
end if;

Calcular_Liquido_Ordem_Compra(nr_ordem_compra_w, nm_usuario_p);

if (ie_aprova_auto_w = 'S') then
	begin
	select	dt_aprovacao
	into STRICT	dt_aprovacao_w
	from	ordem_compra
	where	nr_ordem_compra = nr_ordem_compra_w;
	
	if (coalesce(dt_aprovacao_w::text, '') = '') then
		CALL Gerar_Aprov_Ordem_Compra(nr_ordem_compra_w, null, 'S', nm_usuario_p);
	end if;
	end;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordem_compra_req_consig ( cd_estabelecimento_p bigint, cd_fornecedor_p text, cd_local_entrega_p bigint, cd_material_p bigint, qt_material_p bigint, nm_usuario_p text, nr_requisicao_p bigint, cd_acao_p text, nr_sequencia_p bigint) FROM PUBLIC;

