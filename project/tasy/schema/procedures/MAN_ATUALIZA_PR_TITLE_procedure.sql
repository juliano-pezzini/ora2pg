-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_atualiza_pr_title ( nr_seq_impacto_p bigint, nm_usuario_p text ) AS $body$
DECLARE


nr_product_requirement_w 	reg_product_requirement.nr_sequencia%type;
ds_new_title_w 		reg_product_requirement.ds_title%type;
ds_ret_w 			varchar(2);


BEGIN

/* Atualiza título do requisito de produto para OSs do tipo Ajuste de Documentação */

select 	max(c.nr_product_requirement),
	max(c.ds_new_title)
into STRICT 	nr_product_requirement_w,
	ds_new_title_w
from 	man_ordem_serv_impacto a,
	man_ordem_servico b,
	man_ordem_serv_imp_pr c
where 	a.nr_sequencia 	= nr_seq_impacto_p
and 	b.nr_sequencia 	= a.nr_seq_ordem_serv
and 	b.ie_tipo_ordem 	= 28
and 	b.ie_classificacao = 'E'
and 	b.ie_classificacao_cliente = 'A'
and 	c.nr_seq_impacto 	= a.nr_sequencia;

if (nr_product_requirement_w IS NOT NULL AND nr_product_requirement_w::text <> '' AND ds_new_title_w IS NOT NULL AND ds_new_title_w::text <> '') then
	/* Desfazer Lançamento */

	CALL reg_set_requirement_release(
		nr_seq_requirement_p 	=> nr_product_requirement_w,
		ie_requirement_type_p 	=> 'P',
		ie_release_p 		=> 'N',
		nm_usuario_p 		=> nm_usuario_p
	);

	/* Desfazer Aprovação */

	select	CASE WHEN qt_reg=0 THEN  'IR'  ELSE CASE WHEN qt_doc=0 THEN  'NV'  ELSE (			select	ie_situacao			from	reg_product_requirement			where	nr_sequencia = nr_seq_product_req ) END  END  ret
	into STRICT 	ds_ret_w
	from ( 	SELECT 	count(nr_seq_product_req) qt_reg,
			count(nr_seq_reg_version_rev) qt_doc,
			max(nr_seq_product_req) nr_seq_product_req
		from ( 	SELECT 	nr_seq_product_req,
				nr_seq_reg_version_rev
			from 	reg_product_req_hist
			where	nr_seq_product_req = nr_product_requirement_w ) alias4) alias5;
	
	if (ds_ret_w <> 'NV') then
		CALL REG_VALIDATE_PRS_CCB(
			NR_SEQ_PRODUCT_REC_P 	=> nr_product_requirement_w,
			IE_OPCAO_P 			=> 'A',
			NM_USUARIO_P 			=> nm_usuario_p
		);
	end if;
	
	CALL REG_INSERT_ARTIFACTS_LOG(
		NR_SEQ_OBJECT_P 	=> nr_product_requirement_w,
		DS_REASON_P 		=> 'Ajuste de documentação identificado a partir de uma anomalia',
		IE_CHANGE_TYPE_P 	=> 'DA', -- Desfazer Aprovação
		DS_OBJECT_TABLE_P 	=> 'REG_PRODUCT_REQUIREMENT',
		NM_USUARIO_P 		=> nm_usuario_p
	);
	
	CALL REG_TOGGLE_PR_MANAGER_APPROVAL(
		NR_SEQ_PR_P 	=> nr_product_requirement_w,
		NM_USUARIO_P 	=> nm_usuario_p,
		IE_APROVAR_P 	=> 'N'
	);
	/* Fim Desfazer Aprovação */


	
	/* Desfazer Liberação */

	CALL reg_approve_item(
		ds_table_name 		=> 'reg_product_requirement',
		nr_seq_item 		=> nr_product_requirement_w,
		nm_user_p 		=> nm_usuario_p,
		nm_dt_approving_field_p 	=> 'dt_liberacao_dev',
		nm_user_column_p 		=> 'NM_ANALISTA_LIBEROU'
	);

	/* Atualiza título do requisito de produto */

	update 	reg_product_requirement
	set 	ds_title = ds_new_title_w
	where 	nr_sequencia = nr_product_requirement_w;

	/* Liberar */

	CALL reg_approve_item(
		ds_table_name 		=> 'reg_product_requirement',
		nr_seq_item 		=> nr_product_requirement_w,
		nm_user_p 		=> nm_usuario_p,
		nm_dt_approving_field_p 	=> 'dt_liberacao_dev',
		nm_user_column_p 		=> 'NM_ANALISTA_LIBEROU'
	);

	/* Aprovar */

	select	CASE WHEN qt_reg=0 THEN  'IR'  ELSE CASE WHEN qt_doc=0 THEN  'NV'  ELSE (			select	ie_situacao			from	reg_product_requirement			where	nr_sequencia = nr_seq_product_req ) END  END  ret
	into STRICT 	ds_ret_w
	from ( 	SELECT 	count(nr_seq_product_req) qt_reg,
			count(nr_seq_reg_version_rev) qt_doc,
			max(nr_seq_product_req) nr_seq_product_req
		from ( 	SELECT 	nr_seq_product_req,
				nr_seq_reg_version_rev
			from 	reg_product_req_hist
			where	nr_seq_product_req = nr_product_requirement_w ) alias4) alias5;
	
	if (ds_ret_w <> 'NV') then
		if (ds_ret_w = 'IR') then
			ds_ret_w := 'I';
		end if;
		
		CALL REG_VALIDATE_PRS_CCB(
			NR_SEQ_PRODUCT_REC_P 	=> nr_product_requirement_w,
			IE_OPCAO_P 			=> ds_ret_w,
			NM_USUARIO_P 			=> nm_usuario_p
		);
	end if;
	
	CALL REG_TOGGLE_PR_MANAGER_APPROVAL(
		NR_SEQ_PR_P 	=> nr_product_requirement_w,
		NM_USUARIO_P 	=> nm_usuario_p,
		IE_APROVAR_P 	=> 'S'
	);
	/* Fim Aprovar */


	
	/* Lançar */

	CALL reg_set_requirement_release(
		nr_seq_requirement_p 	=> nr_product_requirement_w,
		ie_requirement_type_p 	=> 'P',
		ie_release_p 		=> 'S',
		nm_usuario_p 		=> nm_usuario_p
	);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_atualiza_pr_title ( nr_seq_impacto_p bigint, nm_usuario_p text ) FROM PUBLIC;

