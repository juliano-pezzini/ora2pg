-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_requisicao_material ( cd_estabelecimento_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_local_estoque_p bigint, cd_local_atende_p bigint, cd_setor_atendimento_p bigint, cd_pessoa_requisitante_p text, nm_usuario_p text, ie_prescr_cirurgia_p text, ie_lancado_cirurgia_p text, ie_agenda_cirurgica_p text, ie_material_comercial_p text, ie_saldo_maior_minimo_p text, ie_multiplo_minimo_p text, ie_mult_forn_ult_compra_p text, ie_considera_req_pend_p text, ie_consignado_p text, ie_curva_p text, ds_familia_p text, ds_material_p text, ds_grupo_mat_p text, ds_subgrupo_mat_p text, ds_classe_mat_p text, ds_localizacao_p text, ie_receita_p text, ie_padronizado_p text, ie_somente_zerados_p text, ie_forma_requisicao_p text, ie_considera_emprestimo_p text, ie_considera_reg_kit_p text, cd_unidade_medida_p text, ds_local_estoque_loc_p text, ie_arredonda_abaixo_mult_min_p text, ie_multiplo_estoque_consumo_p text, qt_itens_desdobra_req_p bigint, ds_unidade_p text, ie_montagem_kit_p text, ie_saldo_generico_p text, nr_requisicao_p INOUT bigint) AS $body$
DECLARE


dt_atualizacao_w            		timestamp         := clock_timestamp();
dt_mesano_referencia_w      		timestamp;
cd_material_w               		integer    := 0;
cd_operacao_transf_setor_w  	smallint    := 0;
nr_requisicao_w             		bigint    := 0;
nr_sequencia_w              		integer    := 0;
qt_estoque_minimo_w         		double precision := 0;
qt_estoque_maximo_w         		double precision := 0;
qt_estoque_w                		item_requisicao_material.qt_saldo_estoque_dest%type := 0;
qt_estoque_req_w            		double precision := 0;
qt_multiplo_w			double precision := 0;
qt_minimo_multiplo_solic_w  		double precision := 0;
qt_minimo_multiplo_solic_ww  		double precision := 0;
qt_requisitada_w            		double precision := 0;
qt_requisicao_pendente_w            	double precision := 0;
qt_prescr_cirurgia_w           		double precision := 0;
qt_lancado_cirurgia_w		double precision := 0;
qt_agenda_cirurgia_w		double precision := 0;
qt_conv_estoque_consumo_w   	double precision := 0;
qt_reg_kit_w			double precision := 0;
qt_montagem_kit_w			double precision := 0;
cd_unidade_medida_consumo_w 	varchar(30)  := '';
cd_unidade_medida_estoque_w 	varchar(30)  := '';
cd_unidade_medida_solic_w		varchar(30)  := '';
ie_situacao_op_w			varchar(1);
ds_operacao_w			varchar(40);
nr_seq_req_w			bigint;
	
ie_gerar_familia_w			varchar(01) := 'S';
nr_seq_familia_w			bigint;
qt_diferente_w			smallint;
ds_familia_w			varchar(500);
ie_gerar_local_w			varchar(01) := 'S';
nr_seq_localizacao_w		bigint;
qt_dif_local_w			smallint;
ds_localizacao_w			varchar(500);

qt_dif_materiais_w			bigint;		
ds_material_w			varchar(2000);
ie_gerar_mat_w			varchar(1) := 'S';

qt_dif_grupo_mat_w		bigint;
ds_grupo_mat_w			varchar(2000);
cd_grupo_material_w		integer;
ie_gerar_grupo_w			varchar(1) := 'S';

qt_dif_subgrupo_mat_w		bigint;
ds_subgrupo_mat_w		varchar(2000);
cd_subgrupo_material_w		integer;
ie_gerar_subgrupo_w		varchar(1) := 'S';

qt_dif_classe_mat_w		bigint;
ds_classe_mat_w			varchar(2000);
cd_classe_material_w		integer;
ie_gerar_classe_w			varchar(1) := 'S';

nr_seq_local_estoque_loc_w		bigint;
ie_gerar_local_estoque_loc_w	varchar(01) := 'S';
qt_dif_local_estoque_loc_w		smallint;
ds_local_estoque_loc_w		varchar(500);

cd_fornec_ult_compra_w		varchar(14);
nr_seq_material_fornec_w	bigint;
qt_conv_compra_est_w		double precision;

cd_fornecedor_w			varchar(14);
qt_saldo_fornec_w			double precision;
qt_estoque_req_acum_w		double precision;
ie_gerar_conta_contabil_mat_w	varchar(01);
cd_conta_contabil_w		varchar(20) := '';
ie_tipo_conta_w			varchar(01);
cd_centro_custo_w			bigint;
qt_emprestimo_w			double precision := 0;
qt_itens_desdobra_req_w		bigint;
qt_itens_gerados_w			bigint;
ds_requisicoes_geradas_w		varchar(4000);

/* Shift  + F11 = 'Regra para consistência do item disp. mercado' */

qt_existe_regra_disp_mer_w		bigint;
ie_acao_disp_mercado_w		varchar(1) := 'N';

ds_unidade_w			varchar(2000);
qt_dif_um_w			numeric(20);
ie_gerar_um_w			varchar(1) := 'S';
ie_momento_gerar_vl_item_req_w	varchar(1);
ie_valor_gerar_para_item_req_w	varchar(1);
vl_item_w				double precision;
ie_mat_consignado_w		material.ie_consignado%type;
ie_regra_saldo_consig_w		parametro_estoque.ie_regra_saldo_consig%type;

c01 CURSOR FOR
SELECT	a.cd_material,
	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	obter_regra_padrao_local(a.cd_material,a.cd_local_estoque,a.cd_estabelecimento,'qt_min') qt_minimo,
	obter_regra_padrao_local(a.cd_material,a.cd_local_estoque,a.cd_estabelecimento,'qt_max') qt_maximo,
	c.qt_minimo_multiplo_solic,
	coalesce(c.qt_conv_estoque_consumo,1),
	c.cd_unidade_medida_solic,
	substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
	substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
	c.nr_seq_familia,
	c.nr_seq_localizacao,
	c.ie_consignado
from	estrutura_material_v e,
	material c,
	padrao_estoque_local a
where (a.cd_material		= c.cd_material)
and (a.cd_material		= e.cd_material)
and (e.cd_grupo_material	= cd_grupo_material_p or coalesce(cd_grupo_material_p, 0) = 0)
and (e.cd_subgrupo_material	= cd_subgrupo_material_p or coalesce(cd_subgrupo_material_p, 0) = 0)
and (e.cd_classe_material	= cd_classe_material_p or coalesce(cd_classe_material_p, 0) = 0)
and (substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) = cd_unidade_medida_p or coalesce(cd_unidade_medida_p, '0') = '0')
and (a.cd_estabelecimento	= cd_estabelecimento_p)
and (a.cd_local_estoque	= cd_local_estoque_p)
and (a.cd_local_atende	= cd_local_atende_p)
and (c.ie_consignado in ('0','2'))
and (a.ie_situacao		= 'A')
and (c.ie_situacao		= 'A')
and (c.ie_receita		= ie_receita_p or ie_receita_p = 'A')
and (obter_se_material_padronizado(a.cd_estabelecimento, a.cd_material) = ie_padronizado_p or ie_padronizado_p = 'A')
and	((coalesce(ie_curva_p, 'X') = 'X') or (ie_curva_p = obter_curva_abc_estab(a.cd_estabelecimento, a.cd_material, 'N', pkg_date_utils.start_of(clock_timestamp(), 'MONTH', 0))))
order by c.ds_material;


c02 CURSOR FOR
SELECT	a.cd_material,
	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	obter_regra_padrao_local(a.cd_material,a.cd_local_estoque,a.cd_estabelecimento,'qt_min') qt_minimo,
	obter_regra_padrao_local(a.cd_material,a.cd_local_estoque,a.cd_estabelecimento,'qt_max') qt_maximo,
	c.qt_minimo_multiplo_solic,
	coalesce(c.qt_conv_estoque_consumo,1),
	c.cd_unidade_medida_solic,
	substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
	substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
	c.nr_seq_familia,
	c.nr_seq_localizacao
from	estrutura_material_v e,
	material c,
	padrao_estoque_local a
where (a.cd_material		= c.cd_material)
and (a.cd_material		= e.cd_material)
and (e.cd_grupo_material	= cd_grupo_material_p or coalesce(cd_grupo_material_p, 0) = 0)
and (e.cd_subgrupo_material	= cd_subgrupo_material_p or coalesce(cd_subgrupo_material_p, 0) = 0)
and (e.cd_classe_material	= cd_classe_material_p or coalesce(cd_classe_material_p, 0) = 0)
and (substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) = cd_unidade_medida_p or coalesce(cd_unidade_medida_p, '0') ='0')
and (a.cd_estabelecimento	= cd_estabelecimento_p)
and (a.cd_local_estoque	= cd_local_estoque_p)
and (a.cd_local_atende		= cd_local_atende_p)
and (c.ie_consignado in ('1','2'))
and (a.ie_situacao		= 'A')
and (c.ie_situacao		= 'A')
and (c.ie_receita		= ie_receita_p or ie_receita_p = 'A')
and (obter_se_material_padronizado(a.cd_estabelecimento, a.cd_material) = ie_padronizado_p or ie_padronizado_p = 'A')
and	((coalesce(ie_curva_p, 'X') = 'X') or (ie_curva_p = obter_curva_abc_estab(a.cd_estabelecimento, a.cd_material, 'N', pkg_date_utils.start_of(clock_timestamp(), 'MONTH', 0))))
order by c.ds_material;


c03 CURSOR FOR
SELECT	cd_fornecedor,
	qt_estoque
from	fornecedor_mat_consignado
where	cd_estabelecimento = cd_estabelecimento_p
and	cd_material = cd_material_w
and	cd_local_estoque = cd_local_atende_p
and	dt_mesano_referencia = pkg_date_utils.start_of(clock_timestamp(), 'MONTH', 0)
and	qt_estoque > 0
order by qt_estoque desc;


BEGIN
delete from w_requisicao_material
where nm_usuario = nm_usuario_p;
commit;	

/* Shift  + F11 = 'Regra para consistência do item disp. mercado' */

delete from w_consist_disp_mercado
where nm_usuario = nm_usuario_p
and   cd_funcao = 919;
commit;

ie_gerar_conta_contabil_mat_w := Obter_Param_Usuario(919, 15, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_conta_contabil_mat_w);
ie_valor_gerar_para_item_req_w := Obter_Param_Usuario(919, 82, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_valor_gerar_para_item_req_w);
ie_momento_gerar_vl_item_req_w := Obter_Param_Usuario(919, 83, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_momento_gerar_vl_item_req_w);

qt_itens_desdobra_req_w := coalesce(qt_itens_desdobra_req_p,0);

if (ie_consignado_p = 'N') then
	select	coalesce(max(cd_operacao_transf_setor), 0)
	into STRICT 	cd_operacao_transf_setor_w
	from 	parametro_estoque
	where	cd_estabelecimento	= cd_estabelecimento_p;
	if (cd_operacao_transf_setor_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266051);
		--'A requisição não pode ser gerada!' || chr(13) || 'Deve estar definido a operação de transferencia de setor nos parametros de estoque.');
	end if;
elsif (ie_consignado_p = 'S') then
	select	coalesce(max(cd_operacao_transf_setor_consi), 0)
	into STRICT 	cd_operacao_transf_setor_w
	from 	parametro_estoque
	where	cd_estabelecimento	= cd_estabelecimento_p;
	if (cd_operacao_transf_setor_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266052);
		--'A requisição não pode ser gerada!' || chr(13) || 'Deve estar definido a operação de transferencia de setor consignado nos parametros de estoque.');
	end if;
end if;

if (cd_operacao_transf_setor_w > 0) then
	select	coalesce(max(ie_situacao),'I'),
		coalesce(max(ds_operacao),'')
	into STRICT 	ie_situacao_op_w,
		ds_operacao_w
	from 	operacao_estoque
	where	cd_operacao_estoque = cd_operacao_transf_setor_w;
	if (ie_situacao_op_w = 'I') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266053,'CD_OPER_TRANSF_SETOR=' || cd_operacao_transf_setor_w || ';DS_OPERACAO=' || ds_operacao_w);
		--'A operação ' || cd_operacao_transf_setor_w || ' - ' || ds_operacao_w || chr(13) ||

		--'Informada no parâmetro de estoque está inativa.' || chr(13) || 	'A mesma deve ser alterada.');
	end if;
end if;

select	ie_regra_saldo_consig
into STRICT	ie_regra_saldo_consig_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_forma_requisicao_p = 'D') then
	begin

	select	nextval('requisicao_seq')
	into STRICT	nr_requisicao_w
	;
	
	begin
	insert into requisicao_material(
		nr_requisicao,
		cd_estabelecimento,
		cd_local_estoque,
		dt_solicitacao_requisicao,
		dt_atualizacao,
		nm_usuario,
		cd_operacao_estoque,
		cd_pessoa_requisitante,
		cd_estabelecimento_destino,
		cd_local_estoque_destino,
		cd_setor_atendimento,
		ie_urgente,
		ie_geracao)
	values (	nr_requisicao_w,
		cd_estabelecimento_p,
		cd_local_atende_p,
		dt_atualizacao_w,
		dt_atualizacao_w,
		nm_usuario_p,
	      	cd_operacao_transf_setor_w,
		cd_pessoa_requisitante_p,
		cd_estabelecimento_p,
		cd_local_estoque_p,
		cd_setor_atendimento_p,
		'N',
		'A');
	exception when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266050);
	        --'erro ao gravar requisicao');
	end;
	
	ds_requisicoes_geradas_w := nr_requisicao_w;
	end;
end if;
	
select	CASE WHEN ie_tipo_requisicao='2' THEN  '2'  ELSE '3' END
into STRICT	ie_tipo_conta_w
from	operacao_estoque
where	cd_operacao_estoque = cd_operacao_transf_setor_w;

qt_diferente_w			:= position('NOT' in upper(ds_familia_p));
ds_familia_w			:= substr(ds_familia_p,position('(' in ds_familia_p),500);
ds_familia_w			:= replace(ds_familia_w,', ',',');

qt_dif_materiais_w		:= position('NOT' in upper(ds_material_p));
ds_material_w			:= substr(ds_material_p,position('(' in ds_material_p),2000);
ds_material_w			:= replace(ds_material_w,', ',',');

qt_dif_grupo_mat_w		:= position('NOT' in upper(ds_grupo_mat_p));
ds_grupo_mat_w			:= substr(ds_grupo_mat_p,position('(' in ds_grupo_mat_p),2000);
ds_grupo_mat_w			:= replace(ds_grupo_mat_w,', ',',');

qt_dif_subgrupo_mat_w		:= position('NOT' in upper(ds_subgrupo_mat_p));
ds_subgrupo_mat_w		:= substr(ds_subgrupo_mat_p,position('(' in ds_subgrupo_mat_p),2000);
ds_subgrupo_mat_w		:= replace(ds_subgrupo_mat_w,', ',',');

qt_dif_classe_mat_w		:= position('NOT' in upper(ds_classe_mat_p));
ds_classe_mat_w			:= substr(ds_classe_mat_p,position('(' in ds_classe_mat_p),2000);
ds_classe_mat_w			:= replace(ds_classe_mat_w,', ',',');

qt_dif_local_w			:= position('NOT' in upper(ds_localizacao_p));
ds_localizacao_w		:= substr(ds_localizacao_p,position('(' in ds_localizacao_p),500);
ds_localizacao_w		:= replace(ds_localizacao_w,', ',',');

qt_dif_local_estoque_loc_w	:= position('NOT' in upper(ds_local_estoque_loc_p));
ds_local_estoque_loc_w		:= substr(ds_local_estoque_loc_p,position('(' in ds_local_estoque_loc_p),500);
ds_local_estoque_loc_w		:= replace(ds_local_estoque_loc_w,', ',',');

qt_dif_um_w			:= position('NOT' in upper(ds_unidade_p));
ds_unidade_w			:= substr(ds_unidade_p,position('(' in ds_unidade_p),500);
ds_unidade_w			:= replace(ds_unidade_w,', ',',');

if (ie_consignado_p = 'N') then
	begin
	
	open c01;
	loop
	fetch	c01 into
		cd_material_w,
		cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w,
		qt_estoque_minimo_w,
		qt_estoque_maximo_w,
		qt_minimo_multiplo_solic_w,
		qt_conv_estoque_consumo_w,
		cd_unidade_medida_solic_w,
		cd_unidade_medida_consumo_w,
		cd_unidade_medida_estoque_w,
		nr_seq_familia_w,
		nr_seq_localizacao_w,
		ie_mat_consignado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */	
		begin

		qt_requisicao_pendente_w := 0;
		
		
		if (ds_familia_w IS NOT NULL AND ds_familia_w::text <> '') then
			if (qt_diferente_w	= 0) then
				ie_gerar_familia_w	:= substr(obter_se_contido(nr_seq_familia_w, ds_familia_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(nr_seq_familia_w, ds_familia_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(nr_seq_familia_w, ds_familia_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_familia_w
				;
			end if;
		end if;

		if (ds_material_w IS NOT NULL AND ds_material_w::text <> '') then
			if (qt_dif_materiais_w = 0) then
				ie_gerar_mat_w	:= substr(obter_se_contido(cd_material_w, ds_material_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(cd_material_w, ds_material_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(cd_material_w, ds_material_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_mat_w
				;
			end if;
		end if;

		if (ds_grupo_mat_w IS NOT NULL AND ds_grupo_mat_w::text <> '') then
			if (qt_dif_grupo_mat_w = 0) then
				ie_gerar_grupo_w	:= substr(obter_se_contido(cd_grupo_material_w, ds_grupo_mat_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(cd_grupo_material_w, ds_grupo_mat_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(cd_grupo_material_w, ds_grupo_mat_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_grupo_w
				;
			end if;
		end if;
		
		
		if (ds_unidade_w IS NOT NULL AND ds_unidade_w::text <> '') then
			if (qt_dif_um_w = 0) then
				ie_gerar_um_w	:= substr(obter_se_contido_char(cd_unidade_medida_estoque_w, ds_unidade_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido_char(cd_unidade_medida_estoque_w, ds_unidade_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido_char(cd_unidade_medida_estoque_w, ds_unidade_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_um_w
				;
			end if;
		end if;
		

		if (ds_subgrupo_mat_w IS NOT NULL AND ds_subgrupo_mat_w::text <> '') then
			if (qt_dif_subgrupo_mat_w = 0) then
				ie_gerar_subgrupo_w	:= substr(obter_se_contido(cd_subgrupo_material_w, ds_subgrupo_mat_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(cd_subgrupo_material_w, ds_subgrupo_mat_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(cd_subgrupo_material_w, ds_subgrupo_mat_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_subgrupo_w
				;
			end if;
		end if;

		if (ds_classe_mat_w IS NOT NULL AND ds_classe_mat_w::text <> '') then
			if (qt_dif_classe_mat_w = 0) then
				ie_gerar_classe_w	:= substr(obter_se_contido(cd_classe_material_w, ds_classe_mat_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(cd_classe_material_w, ds_classe_mat_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(cd_classe_material_w, ds_classe_mat_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_classe_w
				;
			end if;
		end if;

		if (ds_localizacao_w IS NOT NULL AND ds_localizacao_w::text <> '') then
			if (qt_dif_local_w	= 0) then
				ie_gerar_local_w	:= substr(obter_se_contido(nr_seq_localizacao_w, ds_localizacao_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(nr_seq_localizacao_w, ds_localizacao_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(nr_seq_localizacao_w, ds_localizacao_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_local_w
				;
			end if;
		end if;

		if (ds_local_estoque_loc_w IS NOT NULL AND ds_local_estoque_loc_w::text <> '') then
			begin
			/*Pega as localizações do material conforme pasta 'Estoque' subpasta 'Localização' */

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_local_estoque_loc_w
			from	localizacao_estoque_local
			where	cd_local_estoque = cd_local_estoque_p
			and	cd_material = cd_material_w;

			if (qt_dif_local_estoque_loc_w	= 0) then
				ie_gerar_local_estoque_loc_w	:= substr(obter_se_contido(nr_seq_local_estoque_loc_w, ds_local_estoque_loc_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(nr_seq_local_estoque_loc_w, ds_local_estoque_loc_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(nr_seq_local_estoque_loc_w, ds_local_estoque_loc_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_local_estoque_loc_w
				;
			end if;

			end;
		end if;
		
		if (ie_mat_consignado_w = '2') and (ie_regra_saldo_consig_w IS NOT NULL AND ie_regra_saldo_consig_w::text <> '') then
			qt_estoque_w := obter_saldo_total_consig(cd_estabelecimento_p, cd_material_w, cd_local_estoque_p);
		else
			qt_estoque_w := obter_saldo_estoque_req(cd_estabelecimento_p, cd_material_w, cd_local_estoque_p, null, null, ie_consignado_p, ie_saldo_generico_p);
		end if;
		
		qt_prescr_cirurgia_w	:= 0;
		qt_lancado_cirurgia_w	:= 0;

		if (ie_prescr_cirurgia_p = 'S') then
			begin
			select /*+ index(a presmat_i1) */				coalesce(sum(qt_total_dispensar),0)
			into STRICT 	qt_prescr_cirurgia_w
			from 	setor_atendimento c,
				cirurgia b,
				prescr_material a,
				prescr_medica m
			where	a.cd_motivo_baixa	= 0
			and	a.cd_material		= cd_material_w
			and	m.nr_prescricao		= b.nr_prescricao
			and	m.nr_prescricao		= a.nr_prescricao
			and	b.cd_setor_atendimento	= c.cd_setor_atendimento
			and	c.cd_local_estoque	= cd_local_estoque_p
			and	a.ie_status_cirurgia	in ('CB','AD');

			qt_prescr_cirurgia_w		:= dividir(qt_prescr_cirurgia_w, qt_conv_estoque_consumo_w);

			end;
		end if;
		
		/*para identificar a quantidade que ja existe em requisições pedentes de transferencia*/

		if (ie_considera_req_pend_p = 'S') then
			begin
			select	coalesce(sum(b.qt_material_requisitada),0)
			into STRICT	qt_requisicao_pendente_w
			from	requisicao_material a,
				item_requisicao_material b,
				operacao_estoque o				
			where	a.nr_requisicao = b.nr_requisicao
			and	o.cd_operacao_estoque = a.cd_operacao_estoque
			and	b.cd_material = cd_material_w
			and	a.cd_local_estoque_destino = cd_local_estoque_p
			and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and	coalesce(a.dt_baixa::text, '') = ''
			and	o.ie_tipo_requisicao in ('2','21')
			and	coalesce(b.qt_material_atendida,0) = 0;
			
			qt_requisicao_pendente_w	:= dividir(qt_requisicao_pendente_w, qt_conv_estoque_consumo_w);
			
			end;
		end if;
		
		qt_emprestimo_w := 0;
		/*para identificar a quantidade de empréstimo*/

		if (ie_considera_emprestimo_p = 'S') then
			select	/*+ index(b empmate_i1) index (c emprest_pk) */				coalesce(sum(CASE WHEN c.ie_tipo='S' THEN  qt_material * -1  ELSE qt_material END ),0)
			into STRICT	qt_emprestimo_w
			from	emprestimo c,
				emprestimo_material b			
			where	c.cd_local_estoque		= cd_local_estoque_p
			and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
			and	b.nr_emprestimo		= c.nr_emprestimo
			and	b.qt_material		> 0
			and	exists (
				SELECT 1 from material a
				where	a.cd_material_estoque	= cd_material_w
			  	and	a.cd_material 		= b.cd_material);
		end if;		

		/*para identificar as quantidades que estejam em cirurgia, porém ainda não consistidas por barras, ou seja: forãm somente lançados*/

		if (ie_lancado_cirurgia_p = 'S') then
			begin
			select /*+ index(a presmat_i1) */				coalesce(sum(qt_total_dispensar),0)
			into STRICT 	qt_lancado_cirurgia_w
			from 	setor_atendimento c,
				cirurgia b,
				prescr_material a,
				prescr_medica m
			where	a.cd_motivo_baixa		= 0
			and	a.cd_material		= cd_material_w
			and	m.nr_prescricao		= b.nr_prescricao
			and	m.nr_prescricao		= a.nr_prescricao
			and	b.cd_setor_atendimento	= c.cd_setor_atendimento
			and	c.cd_local_estoque		= cd_local_estoque_p
			and	a.ie_status_cirurgia	in ('GI');

			qt_lancado_cirurgia_w		:= dividir(qt_lancado_cirurgia_w , qt_conv_estoque_consumo_w);

			end;
		end if;

		/*para identificar as quantidades lançadas e consistidas na gestão da agenda cirurgica*/

		if (ie_agenda_cirurgica_p = 'S') then
			select	coalesce(sum(qt_total_dispensar),0)
			into STRICT	qt_agenda_cirurgia_w
			from	setor_atendimento c,
				material x,
				prescr_medica b,
				prescr_material a
			where	a.cd_motivo_baixa		= 0
			and	a.cd_material		= x.cd_material
			and	x.cd_material_estoque	= cd_material_w
			and	a.nr_prescricao		= b.nr_prescricao
			and	b.cd_setor_atendimento	= c.cd_setor_atendimento
			and	c.cd_local_estoque		= cd_local_estoque_p
			and	a.ie_status_cirurgia		= 'CB'
			and	(b.nr_seq_agenda IS NOT NULL AND b.nr_seq_agenda::text <> '')
			and	coalesce(b.nr_cirurgia::text, '') = ''
			and not exists (
				SELECT	1
				from 	cirurgia c
				where	c.nr_prescricao = a.nr_prescricao);
			
			qt_agenda_cirurgia_w		:= dividir(qt_agenda_cirurgia_w , qt_conv_estoque_consumo_w);
			
		end if;
	
		/*para identificar as quantidades lançadas e consistidas no registro do kit (adm. estoques)*/

		if (ie_considera_reg_kit_p = 'S') then
			select	coalesce(sum(a.qt_material), 0)
			into STRICT	qt_reg_kit_w
			from	kit_estoque_reg c,
				kit_estoque b,
				kit_estoque_comp a
			where	c.nr_sequencia		= b.nr_seq_reg_kit
			and	c.ie_situacao		<> 'I'
			and	a.nr_seq_kit_estoque	= b.nr_sequencia
			and	b.cd_local_estoque	= cd_local_estoque_p
			and	b.cd_estabelecimento	= cd_estabelecimento_p
			and	a.ie_gerado_barras	= 'S'
			and	coalesce(a.nr_seq_motivo_exclusao::text, '') = ''
			and	coalesce(b.dt_utilizacao::text, '') = ''	
			and	coalesce(c.dt_utilizacao::text, '') = ''	
			and	a.cd_material in (
				SELECT	x.cd_material
				from	material x
				where	x.cd_material_estoque = cd_material_w);	
				
			qt_reg_kit_w		:= dividir(qt_reg_kit_w , qt_conv_estoque_consumo_w);	
		end if;
		
		if (ie_montagem_kit_p = 'S') then
			begin
			select	coalesce(sum(a.qt_material), 0)
			into STRICT	qt_montagem_kit_w
			from	kit_estoque b,
				kit_estoque_comp a
			where	a.nr_seq_kit_estoque	= b.nr_sequencia
			and	b.cd_local_estoque	= cd_local_estoque_p
			and	b.cd_estabelecimento	= cd_estabelecimento_p
			and	coalesce(b.dt_utilizacao::text, '') = ''
			and	coalesce(b.nr_seq_reg_kit::text, '') = ''
			and	a.cd_material in (
				SELECT	x.cd_material
				from	material x
				where	x.cd_material_estoque = cd_material_w);
				
			qt_montagem_kit_w	:= dividir(qt_montagem_kit_w , qt_conv_estoque_consumo_w);
			end;
		end if;
	
		qt_estoque_w	:= qt_estoque_w - (qt_prescr_cirurgia_w + qt_lancado_cirurgia_w + qt_reg_kit_w + qt_montagem_kit_w + qt_agenda_cirurgia_w - qt_requisicao_pendente_w - qt_emprestimo_w);
		
		if (qt_estoque_w < qt_estoque_minimo_w) or
			((qt_estoque_w >= qt_estoque_minimo_w) and (qt_estoque_w < qt_estoque_maximo_w) and (ie_saldo_maior_minimo_p = 'S')) or
			/* fabio 18/01/2006 os27240 adicionei a linha acima */

			(qt_estoque_w = qt_estoque_minimo_w AND ie_saldo_maior_minimo_p = 'I') then
			begin	
			
			qt_estoque_req_w := qt_estoque_maximo_w - qt_estoque_w;
			
			if (qt_estoque_req_w	= 0) then
				qt_estoque_req_w	:= 1;
			end if;
			
			if (ie_somente_zerados_p = 'S') then
				begin
				if (qt_estoque_w = 0) then
					qt_estoque_req_w	:=	qt_estoque_maximo_w;
				else
					qt_estoque_req_w	:= 0;
				end if;
				end;
			end if;

			/*para gerar a quantidade pelo multiplo do minimo do cadastro de materiais*/

			if (ie_multiplo_minimo_p = 'S') then
				begin
				qt_minimo_multiplo_solic_ww := coalesce(obter_qdade_regra_solic(cd_material_w, cd_local_estoque_p, '919x'),0);
				
				if (qt_minimo_multiplo_solic_ww > 0) then
					qt_minimo_multiplo_solic_w := qt_minimo_multiplo_solic_ww;
				end if;
				
				if (cd_unidade_medida_consumo_w <> cd_unidade_medida_estoque_w) then
					qt_minimo_multiplo_solic_w	:= dividir(qt_minimo_multiplo_solic_w, qt_conv_estoque_consumo_w);
				end if;

				/*decode((trunc(dividir(:qt, 5)) * 5), :qt, :qt, ((trunc(dividir(:qt, 5)) * 5)) + 5) qt_comprar*/

				select (trunc(dividir(qt_estoque_req_w, qt_minimo_multiplo_solic_w)) * qt_minimo_multiplo_solic_w)
				into STRICT	qt_multiplo_w
				;

				if (qt_multiplo_w = qt_estoque_req_w) or (coalesce(ie_arredonda_abaixo_mult_min_p,'N') = 'S') then
					qt_estoque_req_w	:= qt_multiplo_w;
				else
					qt_estoque_req_w	:= qt_multiplo_w + qt_minimo_multiplo_solic_w;
				end if;
				end;
			end if;
			
			if (ie_mult_forn_ult_compra_p = 'S') then
				begin
				cd_fornec_ult_compra_w := obter_dados_ultima_compra(cd_estabelecimento_p, cd_material_w, 'PJ');
				
				if (cd_fornec_ult_compra_w IS NOT NULL AND cd_fornec_ult_compra_w::text <> '') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_material_fornec_w
					from	material_fornec
					where	cd_estabelecimento = cd_estabelecimento_p
					and	cd_fornec_ult_compra_w = cd_cgc
					and	ie_consignado in ('0','2')
					and	cd_material = cd_material_w;
					
					select	max(qt_conv_compra_est)
					into STRICT	qt_conv_compra_est_w
					from	material_fornec
					where	nr_sequencia = nr_seq_material_fornec_w;
				
					select (trunc(dividir(qt_estoque_req_w, qt_conv_compra_est_w)) * qt_conv_compra_est_w)
					into STRICT	qt_multiplo_w
					;

					qt_estoque_req_w	:= qt_multiplo_w + qt_conv_compra_est_w;
				end if;
				end;
			end if;

			qt_requisitada_w	:= qt_estoque_req_w * qt_conv_estoque_consumo_w;
			
			if (ie_multiplo_estoque_consumo_p = 'S') then
				begin					
				qt_requisitada_w := coalesce((trunc(dividir(qt_requisitada_w, qt_conv_estoque_consumo_w)) * qt_conv_estoque_consumo_w),0);
				qt_estoque_req_w := coalesce(dividir(qt_requisitada_w, qt_conv_estoque_consumo_w),0);
				end;
			end if;

			/*Para considerar as regras de consumo por dia, EX: Na sexta-feira faremos os pedidos multiplicado por 3*/

			qt_requisitada_w	:= qt_requisitada_w * obter_regra_multiplo_req_auto(cd_estabelecimento_p, cd_material_w);
		
			qt_requisitada_w := trunc(qt_requisitada_w,4);
			qt_estoque_req_w := coalesce(dividir(qt_requisitada_w, qt_conv_estoque_consumo_w),0);
		
			if (qt_estoque_req_w > 0) and
				((ie_gerar_familia_w = 'S') and (ie_gerar_local_w = 'S') and (ie_gerar_local_estoque_loc_w = 'S') and (ie_gerar_mat_w = 'S') and (ie_gerar_grupo_w = 'S') and (ie_gerar_subgrupo_w = 'S') and (ie_gerar_classe_w = 'S')and (ie_gerar_um_w = 'S')) then
				begin
				if (ie_material_comercial_p = 'S') then
					cd_material_w	:= obter_mat_comercial(cd_material_w,'C');
				end if;
          			nr_sequencia_w   	:= (nr_sequencia_w + 1);

				if (ie_gerar_conta_contabil_mat_w = 'S') then
					SELECT * FROM Define_Conta_Material(
							cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, 0, 0, '0', 0, 0, 0, '', cd_local_atende_p, null, dt_atualizacao_w, cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
				end if;

				/* Verifica se possui evento na 'Regra para consistência do item disp. mercado' */

				select	count(*)
				into STRICT	qt_existe_regra_disp_mer_w
				from	consiste_disp_mercado
				where	cd_evento = 'RA';

				if (qt_existe_regra_disp_mer_w > 0) and (ie_forma_requisicao_p = 'D') then
					begin
					/* Verifica se possui evento na 'Regra para consistência do item disp. mercado', e se o material está disponível no mercado */

					select  substr(obter_acao_regra_disp_mercado('RA', cd_material_w, null, cd_estabelecimento_p),1,1) ie_acao_regra
					into STRICT	ie_acao_disp_mercado_w
					;

					if (ie_acao_disp_mercado_w <> 'N') then
						begin
						CALL grava_consiste_disp_mercado( 919,
									     cd_material_w,
									     nm_usuario_p,
									     ie_acao_disp_mercado_w);
						end;
					end if;

					end;
				end if;

				if (ie_forma_requisicao_p = 'D') and (ie_acao_disp_mercado_w in ('M', 'N')) then
					begin
						if (qt_itens_desdobra_req_w > 0) and (qt_itens_gerados_w = qt_itens_desdobra_req_w) then
							begin
							CALL gravar_estoque_requisicao_lib(nr_requisicao_w, nm_usuario_p);
							
							select	nextval('requisicao_seq')
							into STRICT	nr_requisicao_w
							;
								
							begin
							insert into requisicao_material(
								nr_requisicao,
								cd_estabelecimento,
								cd_local_estoque,
								dt_solicitacao_requisicao,
								dt_atualizacao,
								nm_usuario,
								cd_operacao_estoque,
								cd_pessoa_requisitante,
								cd_estabelecimento_destino,
								cd_local_estoque_destino,
								cd_setor_atendimento,
								ie_urgente,
								ie_geracao)
							values (	nr_requisicao_w,
								cd_estabelecimento_p,
								cd_local_atende_p,
								dt_atualizacao_w,
								dt_atualizacao_w,
								nm_usuario_p,
							      	cd_operacao_transf_setor_w,
								cd_pessoa_requisitante_p,
								cd_estabelecimento_p,
								cd_local_estoque_p,
								cd_setor_atendimento_p,
								'N',
								'A');
							exception when others then
							        CALL wheb_mensagem_pck.exibir_mensagem_abort(266050);
								--'erro ao gravar requisicao');
							end;
							ds_requisicoes_geradas_w := substr(ds_requisicoes_geradas_w || ', ' || nr_requisicao_w,1,4000);
							nr_sequencia_w	:= 1;
							
							qt_itens_gerados_w := 0;
							end;
						end if;
											
		      			insert into item_requisicao_material(
						nr_requisicao,
						nr_sequencia,
						cd_estabelecimento,
						cd_material,
						qt_material_requisitada,
						qt_material_atendida,
						qt_material_req_auto,
						vl_material,
						dt_atualizacao,
						nm_usuario,
						cd_unidade_medida,
						qt_estoque,
						cd_unidade_medida_estoque,
						ie_acao,
						cd_motivo_baixa,
						cd_conta_contabil,
						qt_saldo_estoque_dest)
	      				values (	nr_requisicao_w,
						nr_sequencia_w,
						cd_estabelecimento_p,
						cd_material_w,
						qt_requisitada_w,
						0,
						qt_requisitada_w,
						0,
						dt_atualizacao_w,
						nm_usuario_p,
						cd_unidade_medida_consumo_w,
						qt_estoque_req_w,
						cd_unidade_medida_estoque_w,
						'1',
						0,
						cd_conta_contabil_w,
						qt_estoque_w);
						
						qt_itens_gerados_w	:= coalesce(qt_itens_gerados_w,0) + 1;

					if (coalesce(ie_momento_gerar_vl_item_req_w,'L') = 'S') and (coalesce(ie_valor_gerar_para_item_req_w, 'U') <> 'N') then
						begin
						vl_item_w := coalesce(sup_obter_valores_material_req(nr_requisicao_w, nr_sequencia_w, ie_valor_gerar_para_item_req_w),0);

						update	item_requisicao_material
						set	vl_unit_previsto = vl_item_w
						where	nr_requisicao = nr_requisicao_w
						and	nr_sequencia = nr_sequencia_w;
						
						end;
					end if;
					
					end;
				end if;
					
				if (ie_forma_requisicao_p = 'C') then					
					begin
					
					select	coalesce(max(nr_sequencia),0) +1
					into STRICT	nr_seq_req_w
					from	w_requisicao_material
					where	nm_usuario = nm_usuario_p;
					
					insert into w_requisicao_material(
							nr_sequencia,
							cd_estabelecimento,
							cd_material,
							qt_material_requisitada,
							dt_atualizacao,
							nm_usuario,
							cd_unidade_medida,
							ie_acao,
							cd_motivo_baixa,
							qt_estoque,
							cd_unidade_medida_estoque,
							cd_conta_contabil)
					values (	nr_seq_req_w,
							cd_estabelecimento_p,
							cd_material_w,
							qt_requisitada_w,
							dt_atualizacao_w,
							nm_usuario_p,
							cd_unidade_medida_consumo_w,
							'1',
							0,
							qt_estoque_req_w,
							cd_unidade_medida_estoque_w,
							cd_conta_contabil_w);	
					end;						
				end if;
				end;
			end if;
			end;
	       	end if;
	       	end;
	end loop;
	close c01;
	end;
elsif (ie_consignado_p = 'S') then
	begin
	open c02;
	loop
	fetch	c02 into
		cd_material_w,
		cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w,
		qt_estoque_minimo_w,
		qt_estoque_maximo_w,
		qt_minimo_multiplo_solic_w,
		qt_conv_estoque_consumo_w,
		cd_unidade_medida_solic_w,
		cd_unidade_medida_consumo_w,
		cd_unidade_medida_estoque_w,
		nr_seq_familia_w,
		nr_seq_localizacao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		if (ds_familia_w IS NOT NULL AND ds_familia_w::text <> '') then
			if (qt_diferente_w	= 0) then
				ie_gerar_familia_w	:= substr(obter_se_contido(nr_seq_familia_w, ds_familia_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(nr_seq_familia_w, ds_familia_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(nr_seq_familia_w, ds_familia_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_familia_w
				;
			end if;
		end if;

		if (ds_material_w IS NOT NULL AND ds_material_w::text <> '') then
			if (qt_dif_materiais_w = 0) then
				ie_gerar_mat_w	:= substr(obter_se_contido(cd_material_w, ds_material_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(cd_material_w, ds_material_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(cd_material_w, ds_material_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_mat_w
				;
			end if;
		end if;

		if (ds_grupo_mat_w IS NOT NULL AND ds_grupo_mat_w::text <> '') then
			if (qt_dif_grupo_mat_w = 0) then
				ie_gerar_grupo_w	:= substr(obter_se_contido(cd_grupo_material_w, ds_grupo_mat_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(cd_grupo_material_w, ds_grupo_mat_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(cd_grupo_material_w, ds_grupo_mat_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_grupo_w
				;
			end if;
		end if;
		
		
		if (ds_unidade_w IS NOT NULL AND ds_unidade_w::text <> '') then
			if (qt_dif_um_w = 0) then
				ie_gerar_um_w	:= substr(obter_se_contido_char(cd_unidade_medida_estoque_w, ds_unidade_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido_char(cd_unidade_medida_estoque_w, ds_unidade_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido_char(cd_unidade_medida_estoque_w, ds_unidade_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_um_w
				;
			end if;
		end if;
		
		if (ds_subgrupo_mat_w IS NOT NULL AND ds_subgrupo_mat_w::text <> '') then
			if (qt_dif_subgrupo_mat_w = 0) then
				ie_gerar_subgrupo_w	:= substr(obter_se_contido(cd_subgrupo_material_w, ds_subgrupo_mat_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(cd_subgrupo_material_w, ds_subgrupo_mat_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(cd_subgrupo_material_w, ds_subgrupo_mat_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_subgrupo_w
				;
			end if;
		end if;
		
		

		if (ds_classe_mat_w IS NOT NULL AND ds_classe_mat_w::text <> '') then
			if (qt_dif_classe_mat_w = 0) then
				ie_gerar_classe_w	:= substr(obter_se_contido(cd_classe_material_w, ds_classe_mat_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(cd_classe_material_w, ds_classe_mat_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(cd_classe_material_w, ds_classe_mat_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_classe_w
				;
			end if;
		end if;

		if (ds_localizacao_w IS NOT NULL AND ds_localizacao_w::text <> '') then
			if (qt_dif_local_w	= 0) then
				ie_gerar_local_w	:= substr(obter_se_contido(nr_seq_localizacao_w, ds_localizacao_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(nr_seq_localizacao_w, ds_localizacao_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(nr_seq_localizacao_w, ds_localizacao_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_local_w
				;
			end if;
		end if;

		if (ds_local_estoque_loc_w IS NOT NULL AND ds_local_estoque_loc_w::text <> '') then
			begin
			/*Pega as localizações do material conforme pasta 'Estoque' subpasta 'Localização' */

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_local_estoque_loc_w
			from	localizacao_estoque_local
			where	cd_local_estoque = cd_local_estoque_p
			and	cd_material = cd_material_w;

			if (qt_dif_local_estoque_loc_w	= 0) then
				ie_gerar_local_estoque_loc_w	:= substr(obter_se_contido(nr_seq_local_estoque_loc_w, ds_local_estoque_loc_w),1,1);
			else	/* Tratamento NOT IN*/
				select	CASE WHEN substr(obter_se_contido(nr_seq_local_estoque_loc_w, ds_local_estoque_loc_w),1,1)='N' THEN 'S' WHEN substr(obter_se_contido(nr_seq_local_estoque_loc_w, ds_local_estoque_loc_w),1,1)='S' THEN 'N' END
				into STRICT	ie_gerar_local_estoque_loc_w
				;
			end if;

			end;
		end if;

		--qt_estoque_w	:= obter_saldo_estoque_consig(cd_estabelecimento_p, null, cd_material_w, cd_local_estoque_p);
		qt_estoque_w := obter_saldo_estoque_req(cd_estabelecimento_p, cd_material_w, cd_local_estoque_p, null, null, ie_consignado_p, ie_saldo_generico_p);
		qt_prescr_cirurgia_w	:= 0;
		qt_lancado_cirurgia_w	:= 0;

		if (ie_prescr_cirurgia_p = 'S') then
			begin
			select /*+ index(a presmat_i1) */				coalesce(sum(qt_total_dispensar),0)
			into STRICT 	qt_prescr_cirurgia_w
			from 	setor_atendimento c,
				cirurgia b,
				prescr_material a,
				prescr_medica m
			where	a.cd_motivo_baixa	= 0
			and	a.cd_material		= cd_material_w
			and	m.nr_prescricao		= b.nr_prescricao
			and	m.nr_prescricao		= a.nr_prescricao
			and	b.cd_setor_atendimento	= c.cd_setor_atendimento
			and	c.cd_local_estoque	= cd_local_estoque_p
			and	a.ie_status_cirurgia	in ('CB','AD');

			qt_prescr_cirurgia_w		:= dividir(qt_prescr_cirurgia_w, qt_conv_estoque_consumo_w);

			end;
		end if;
		
		/*para identificar a quantidade que ja existe em requisições pedentes de transferencia*/

		if (ie_considera_req_pend_p = 'S') then
			begin
			select	coalesce(sum(b.qt_material_requisitada),0)
			into STRICT	qt_requisicao_pendente_w
			from	requisicao_material a,
				item_requisicao_material b,
				operacao_estoque o				
			where	a.nr_requisicao = b.nr_requisicao
			and	o.cd_operacao_estoque = a.cd_operacao_estoque
			and	b.cd_material = cd_material_w
			and	a.cd_local_estoque_destino = cd_local_estoque_p
			and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and	coalesce(a.dt_baixa::text, '') = ''
			and	o.ie_tipo_requisicao in ('2','21')
			and	coalesce(b.qt_material_atendida,0) = 0;
			end;
			
			qt_requisicao_pendente_w := dividir(qt_requisicao_pendente_w, qt_conv_estoque_consumo_w);
		end if;
		
		qt_emprestimo_w := 0;
		/*para identificar a quantidade de empréstimo*/

		if (ie_considera_emprestimo_p = 'S') then
			select	/*+ index(b empmate_i1) index (c emprest_pk) */				coalesce(sum(CASE WHEN c.ie_tipo='S' THEN  qt_material * -1  ELSE qt_material END ),0)
			into STRICT	qt_emprestimo_w
			from	emprestimo c,
				emprestimo_material b			
			where	c.cd_local_estoque		= cd_local_estoque_p
			and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
			and	b.nr_emprestimo		= c.nr_emprestimo
			and	b.qt_material		> 0
			and	exists (
				SELECT 1 from material a
				where	a.cd_material_estoque	= cd_material_w
			  	and	a.cd_material 		= b.cd_material);
		end if;

		/*para identificar as quantidades que estejam em cirurgia, porém ainda não consistidas por barras, ou seja: forãm somente lançados*/

		if (ie_lancado_cirurgia_p = 'S') then
			begin
			select /*+ index(a presmat_i1) */				coalesce(sum(qt_total_dispensar),0)
			into STRICT 	qt_lancado_cirurgia_w
			from 	setor_atendimento c,
				cirurgia b,
				prescr_material a,
				prescr_medica m
			where	a.cd_motivo_baixa	= 0
			and	a.cd_material		= cd_material_w
			and	m.nr_prescricao		= b.nr_prescricao
			and	m.nr_prescricao		= a.nr_prescricao
			and	b.cd_setor_atendimento	= c.cd_setor_atendimento
			and	c.cd_local_estoque	= cd_local_estoque_p
			and	a.ie_status_cirurgia	in ('GI');

			qt_lancado_cirurgia_w		:= dividir(qt_lancado_cirurgia_w, qt_conv_estoque_consumo_w);

			end;
		end if;
		
		/*para identificar as quantidades lançadas e consistidas no registro do kit (adm. estoques)*/

		if (ie_considera_reg_kit_p = 'S') then
			select	coalesce(sum(a.qt_material), 0)
			into STRICT	qt_reg_kit_w
			from	kit_estoque_reg c,
				kit_estoque b,
				kit_estoque_comp a
			where	c.nr_sequencia		= b.nr_seq_reg_kit
			and	c.ie_situacao		<> 'I'
			and	a.nr_seq_kit_estoque	= b.nr_sequencia
			and	b.cd_local_estoque	= cd_local_estoque_p
			and	b.cd_estabelecimento	= cd_estabelecimento_p
			and	a.ie_gerado_barras	= 'S'
			and	coalesce(a.nr_seq_motivo_exclusao::text, '') = ''
			and	coalesce(b.dt_utilizacao::text, '') = ''	
			and	coalesce(c.dt_utilizacao::text, '') = ''	
			and	a.cd_material in (
				SELECT	x.cd_material
				from	material x
				where	x.cd_material_estoque = cd_material_w);	
				
			qt_reg_kit_w		:= dividir(qt_reg_kit_w , qt_conv_estoque_consumo_w);	
		end if;
		
		if (ie_montagem_kit_p = 'S') then
			begin
			select	coalesce(sum(a.qt_material), 0)
			into STRICT	qt_montagem_kit_w
			from	kit_estoque b,
				kit_estoque_comp a
			where	a.nr_seq_kit_estoque	= b.nr_sequencia
			and	b.cd_local_estoque	= cd_local_estoque_p
			and	b.cd_estabelecimento	= cd_estabelecimento_p
			and	coalesce(b.dt_utilizacao::text, '') = ''
			and	coalesce(b.nr_seq_reg_kit::text, '') = ''
			and	a.cd_material in (
				SELECT	x.cd_material
				from	material x
				where	x.cd_material_estoque = cd_material_w);
				
			qt_montagem_kit_w	:= dividir(qt_montagem_kit_w , qt_conv_estoque_consumo_w);				
			end;
		end if;

		qt_estoque_w	:= qt_estoque_w - (qt_prescr_cirurgia_w + qt_reg_kit_w + qt_montagem_kit_w + qt_lancado_cirurgia_w - qt_requisicao_pendente_w - qt_emprestimo_w);

		if (qt_estoque_w < qt_estoque_minimo_w) or
			((qt_estoque_w >= qt_estoque_minimo_w) and (qt_estoque_w < qt_estoque_maximo_w) and (ie_saldo_maior_minimo_p = 'S')) or
			(qt_estoque_w = qt_estoque_minimo_w AND ie_saldo_maior_minimo_p = 'I') then
      		begin
			qt_estoque_req_w	 	:= round((qt_estoque_maximo_w - qt_estoque_w)::numeric,0);
			if (qt_estoque_req_w	= 0) then
				qt_estoque_req_w	:= 1;
			end if;
			
			/*para gerar a quantidade pelo multiplo do minimo do cadastro de materiais*/

			if (ie_multiplo_minimo_p = 'S') then
				begin
				qt_minimo_multiplo_solic_ww := coalesce(obter_qdade_regra_solic(cd_material_w, cd_local_estoque_p, '919x'),0);
				
				if (qt_minimo_multiplo_solic_ww > 0) then
					qt_minimo_multiplo_solic_w := qt_minimo_multiplo_solic_ww;
				end if;
				
				if (cd_unidade_medida_consumo_w <> cd_unidade_medida_estoque_w) then
					qt_minimo_multiplo_solic_w	:= dividir(qt_minimo_multiplo_solic_w, qt_conv_estoque_consumo_w);
				end if;

				/*decode((trunc(dividir(:qt, 5)) * 5), :qt, :qt, ((trunc(dividir(:qt, 5)) * 5)) + 5) qt_comprar*/

				select (trunc(dividir(qt_estoque_req_w, qt_minimo_multiplo_solic_w)) * qt_minimo_multiplo_solic_w)
				into STRICT	qt_multiplo_w
				;

				if (qt_multiplo_w = qt_estoque_req_w) or (coalesce(ie_arredonda_abaixo_mult_min_p,'N') = 'S') then
					qt_estoque_req_w	:= qt_multiplo_w;
				else
					qt_estoque_req_w	:= qt_multiplo_w + qt_minimo_multiplo_solic_w;
				end if;
				end;
			elsif (ie_multiplo_estoque_consumo_p = 'S') then
				begin				
				qt_estoque_req_w := (trunc(dividir(qt_estoque_req_w, qt_conv_estoque_consumo_w)) * qt_conv_estoque_consumo_w);
				end;
			end if;

			if (qt_estoque_req_w > 0) and
				((ie_gerar_familia_w = 'S') and (ie_gerar_local_w = 'S') and (ie_gerar_local_estoque_loc_w = 'S') and (ie_gerar_mat_w = 'S') and (ie_gerar_grupo_w = 'S') and (ie_gerar_subgrupo_w = 'S') and (ie_gerar_classe_w = 'S') and (ie_gerar_um_w = 'S')) then
				begin

				qt_estoque_req_acum_w	:= 0;
				open c03;
				loop
				fetch	c03 into
					cd_fornecedor_w,
					qt_saldo_fornec_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					begin

					if (qt_estoque_req_acum_w < qt_estoque_req_w) then
						begin
						if	((qt_estoque_req_acum_w + qt_saldo_fornec_w) < qt_estoque_req_w) then
							qt_estoque_req_acum_w	:= qt_estoque_req_acum_w + qt_saldo_fornec_w;
						else
							qt_saldo_fornec_w	:= qt_estoque_req_w - qt_estoque_req_acum_w;
							qt_estoque_req_acum_w	:= qt_estoque_req_w;
						end if;						
				
						qt_requisitada_w	:= qt_saldo_fornec_w * qt_conv_estoque_consumo_w;

						if (ie_material_comercial_p = 'S') then
							cd_material_w	:= obter_mat_comercial(cd_material_w,'C');
						end if;

		          			nr_sequencia_w   	:= (nr_sequencia_w + 1);

						if (ie_gerar_conta_contabil_mat_w = 'S') then
							SELECT * FROM Define_Conta_Material(	cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, 0, 0, '0', 0, 0, 0, '', cd_local_atende_p, null, dt_atualizacao_w, cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
						end if;

						/* Verifica se possui evento na 'Regra para consistência do item disp. mercado' */

						select	count(*)
						into STRICT	qt_existe_regra_disp_mer_w
						from	consiste_disp_mercado
						where	cd_evento = 'RA';

						if (qt_existe_regra_disp_mer_w > 0) and (ie_forma_requisicao_p = 'D') then
							begin
							/* Verifica se possui evento na 'Regra para consistência do item disp. mercado', e se o material está disponível no mercado */

							select  substr(obter_acao_regra_disp_mercado('RA', cd_material_w, null, cd_estabelecimento_p),1,1) ie_acao_regra
							into STRICT	ie_acao_disp_mercado_w
							;

							if (ie_acao_disp_mercado_w <> 'N') then
								begin
								CALL grava_consiste_disp_mercado( 919,
											     cd_material_w,
											     nm_usuario_p,
											     ie_acao_disp_mercado_w);
								end;
							end if;

							end;
						end if;

						if (ie_forma_requisicao_p = 'D') and (ie_acao_disp_mercado_w in ('M', 'N')) then
							begin
							if (qt_itens_desdobra_req_w > 0) and (qt_itens_gerados_w = qt_itens_desdobra_req_w) then
								begin
								CALL gravar_estoque_requisicao_lib(nr_requisicao_w, nm_usuario_p);
								
								select	nextval('requisicao_seq')
								into STRICT	nr_requisicao_w
								;
		
								begin
								insert into requisicao_material(
									nr_requisicao,
									cd_estabelecimento,
									cd_local_estoque,
									dt_solicitacao_requisicao,
									dt_atualizacao,
									nm_usuario,
									cd_operacao_estoque,
									cd_pessoa_requisitante,
									cd_estabelecimento_destino,
									cd_local_estoque_destino,
									cd_setor_atendimento,
									ie_urgente,
									ie_geracao)
								values (	nr_requisicao_w,
									cd_estabelecimento_p,
									cd_local_atende_p,
									dt_atualizacao_w,
									dt_atualizacao_w,
									nm_usuario_p,
								      	cd_operacao_transf_setor_w,
									cd_pessoa_requisitante_p,
									cd_estabelecimento_p,
									cd_local_estoque_p,
									cd_setor_atendimento_p,
									'N',
									'A');
								exception when others then
								        CALL wheb_mensagem_pck.exibir_mensagem_abort(266050);
									--'erro ao gravar requisicao');
								end;
								ds_requisicoes_geradas_w := substr(ds_requisicoes_geradas_w || ', ' || nr_requisicao_w,1,4000);
								nr_sequencia_w := 1;
								
								qt_itens_gerados_w := 0;
								end;
							end if;
							
							insert	into item_requisicao_material(
	           						nr_requisicao,
								nr_sequencia,
								cd_estabelecimento,
								cd_material,
								cd_cgc_fornecedor,
		                  				qt_material_requisitada,
								qt_material_atendida,
								qt_material_req_auto,
								vl_material,
	               	  					dt_atualizacao,
								nm_usuario,
								cd_unidade_medida,
								qt_estoque,
	        	          				cd_unidade_medida_estoque,
								ie_acao,
								cd_motivo_baixa,
								cd_conta_contabil,
								qt_saldo_estoque_dest)
		      					values (	nr_requisicao_w,
								nr_sequencia_w,
								cd_estabelecimento_p,
	               						cd_material_w,
								cd_fornecedor_w,
								qt_requisitada_w,
								0,
								qt_requisitada_w,
								0,
								dt_atualizacao_w,
								nm_usuario_p,
								cd_unidade_medida_consumo_w,
								qt_saldo_fornec_w,
			               				cd_unidade_medida_estoque_w,
								'1',
								0,
								cd_conta_contabil_w,
								qt_estoque_w);
							
							qt_itens_gerados_w	:= coalesce(qt_itens_gerados_w,0) + 1;
							
							if (coalesce(ie_momento_gerar_vl_item_req_w, 'L') = 'S') and (coalesce(ie_valor_gerar_para_item_req_w, 'U') <> 'N') then
								begin
								vl_item_w := coalesce(sup_obter_valores_material_req(nr_requisicao_w, nr_sequencia_w, ie_valor_gerar_para_item_req_w),0);
						
								update	item_requisicao_material
								set	vl_unit_previsto = vl_item_w
								where	nr_requisicao = nr_requisicao_w
								and	nr_sequencia = nr_sequencia_w;
						
								end;
							end if;
							
							end;
						end if;

				if (ie_forma_requisicao_p = 'C') then					
					begin
					insert into w_requisicao_material(
						nr_sequencia,
						cd_estabelecimento,
						cd_material,
						qt_material_requisitada,
						dt_atualizacao,
						nm_usuario,
						cd_unidade_medida,
						ie_acao,
						cd_motivo_baixa,
						qt_estoque,
						cd_unidade_medida_estoque,
						cd_conta_contabil,
						cd_fornecedor)
					values (	nr_sequencia_w,
						cd_estabelecimento_p,
						cd_material_w,
						qt_requisitada_w,
						dt_atualizacao_w,
						nm_usuario_p,
						cd_unidade_medida_consumo_w,
						'1',
						0,
						qt_estoque_req_w,
						cd_unidade_medida_estoque_w,
						cd_conta_contabil_w,
						cd_fornecedor_w);
					end;			
				end if;		
						end;
					end if;
					end;
				end loop;
				close c03;
				end;
			end if;
			end;
	       	end if;
		end;
	end loop;
	close c02;
	end;	
end if;

if (ie_forma_requisicao_p = 'D') and (qt_itens_desdobra_req_w > 0) then
	begin
	update	requisicao_material
	set	ds_observacao = substr(wheb_mensagem_pck.get_texto(302766,'DS_REQUISICOES_GERADAS_W='||ds_requisicoes_geradas_w),1,255)
	where	substr(obter_se_contido(nr_requisicao,ds_requisicoes_geradas_w),1,1) = 'S';
	end;
end if;
	
if (coalesce(qt_itens_gerados_w,0) = 0) then
	delete from requisicao_material
	where nr_requisicao 	= nr_requisicao_w;
	nr_requisicao_w		:= 0;
else
	CALL gravar_estoque_requisicao_lib(nr_requisicao_w, nm_usuario_p);
end if;

commit;
nr_requisicao_p			:= nr_requisicao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_requisicao_material ( cd_estabelecimento_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_local_estoque_p bigint, cd_local_atende_p bigint, cd_setor_atendimento_p bigint, cd_pessoa_requisitante_p text, nm_usuario_p text, ie_prescr_cirurgia_p text, ie_lancado_cirurgia_p text, ie_agenda_cirurgica_p text, ie_material_comercial_p text, ie_saldo_maior_minimo_p text, ie_multiplo_minimo_p text, ie_mult_forn_ult_compra_p text, ie_considera_req_pend_p text, ie_consignado_p text, ie_curva_p text, ds_familia_p text, ds_material_p text, ds_grupo_mat_p text, ds_subgrupo_mat_p text, ds_classe_mat_p text, ds_localizacao_p text, ie_receita_p text, ie_padronizado_p text, ie_somente_zerados_p text, ie_forma_requisicao_p text, ie_considera_emprestimo_p text, ie_considera_reg_kit_p text, cd_unidade_medida_p text, ds_local_estoque_loc_p text, ie_arredonda_abaixo_mult_min_p text, ie_multiplo_estoque_consumo_p text, qt_itens_desdobra_req_p bigint, ds_unidade_p text, ie_montagem_kit_p text, ie_saldo_generico_p text, nr_requisicao_p INOUT bigint) FROM PUBLIC;

