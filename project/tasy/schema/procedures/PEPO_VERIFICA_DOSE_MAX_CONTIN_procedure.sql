-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pepo_verifica_dose_max_contin (NR_SEQUENCIA_P CIRURGIA_AGENTE_ANESTESICO.NR_SEQUENCIA%TYPE, NR_ATENDIMENTO_P ATENDIMENTO_PACIENTE.NR_ATENDIMENTO%TYPE, DT_INICIO_P CIRURGIA_AGENTE_ANEST_OCOR.DT_INICIO_ADM%TYPE, QT_DOSE_P CIRURGIA_AGENTE_ANEST_OCOR.QT_TOTAL_DOSE%TYPE, QT_DOSE_ISOL_P CIRURGIA_AGENTE_ANEST_OCOR.QT_DOSE_ATAQUE%TYPE, QT_DOSE_TOTAL_P CIRURGIA_AGENTE_ANEST_OCOR.QT_DOSE_TOTAL%TYPE, DS_DOSE_P CIRURGIA_AGENTE_ANESTESICO.CD_UNID_MEDIDA_ADM%TYPE, NR_MAT_PRESCR_P INOUT MATERIAL_PRESCR.NR_SEQUENCIA%TYPE, IE_JUSTIFICATIVA_P INOUT MATERIAL_PRESCR.IE_JUSTIFICATIVA%TYPE) AS $body$
DECLARE


cd_material_w          CIRURGIA_AGENTE_ANESTESICO.CD_MATERIAL%TYPE;
ie_via_aplicacao_w     CIRURGIA_AGENTE_ANESTESICO.IE_VIA_APLICACAO%TYPE;
cd_prescritor_w        PESSOA_FISICA.CD_PESSOA_FISICA%TYPE;
cd_paciente_w          PESSOA_FISICA.CD_PESSOA_FISICA%TYPE;
cd_setor_atendimento_w ATEND_PACIENTE_UNIDADE.CD_SETOR_ATENDIMENTO%TYPE;
nr_seq_agrupamento_w   MATERIAL_PRESCR.NR_SEQ_AGRUPAMENTO%TYPE;
qt_peso_w              ATENDIMENTO_SINAL_VITAL.QT_PESO%TYPE;
qt_dose_w              CIRURGIA_AGENTE_ANESTESICO.QT_DOSE%TYPE;
qt_dose_max_w          MATERIAL_PRESCR.QT_LIMITE_PESSOA%TYPE;
cd_unid_cons_w         MATERIAL.CD_UNIDADE_MEDIDA_CONSUMO%TYPE;
qt_dose_ww              CIRURGIA_AGENTE_ANESTESICO.QT_DOSE%TYPE;

c01 CURSOR FOR
  SELECT nr_sequencia,
         qt_limite_pessoa,
         cd_unid_med_limite,
         coalesce(ie_dose_limite,'DOSE') ie_dose_limite,
         coalesce(ie_justificativa,'N') ie_justificativa,
         ds_observacao,
         ds_mensagem_regra,
         substr(obter_desc_unid_med(cd_unid_med_limite),1,255) ds_unid_med_limite,
         substr(obter_valor_dominio(1851, coalesce(ie_dose_limite,'DOSE')),1,255) ds_dose_limite,
         CASE WHEN coalesce(cd_doenca_cid::text, '') = '' THEN  null  ELSE wheb_mensagem_pck.get_texto(1028448,'DS_CID='||obter_desc_cid(cd_doenca_cid)) END  ds_inf_cid,
		 qt_intervalo_horas
    from material_prescr
   where cd_material = cd_material_w
     and coalesce(qt_limite_pessoa, 0) > 0
     and coalesce(ie_via_aplicacao, ie_via_aplicacao_w, '0') = coalesce(ie_via_aplicacao_w, '0')
     and coalesce(cd_setor_atendimento, cd_setor_atendimento_w, 0) = coalesce(cd_setor_atendimento_w, 0)
     and coalesce(trunc(obter_idade_pf(cd_paciente_w, clock_timestamp(), 'DIA')),1) between
         coalesce(Obter_idade_param_prescr2(coalesce(qt_idade_min,0),coalesce(qt_idade_min_mes,0),coalesce(qt_idade_min_dia,0),coalesce(qt_idade_max,0),coalesce(qt_idade_max_mes,0),coalesce(qt_idade_max_dia,0),'MIN'),0) and
         coalesce(Obter_idade_param_prescr2(coalesce(qt_idade_min,0),coalesce(qt_idade_min_mes,0),coalesce(qt_idade_min_dia,0),coalesce(qt_idade_max,0),coalesce(qt_idade_max_mes,0),coalesce(qt_idade_max_dia,0),'MAX'),9999999)
     and (coalesce(nr_seq_agrupamento::text, '') = '' or nr_seq_agrupamento = nr_seq_agrupamento_w)
     and (qt_peso_w = 0 or qt_peso_w between coalesce(qt_peso_min,0) and coalesce(qt_peso_max,999))
     and ie_tipo = '2'
     and coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
     and obter_se_setor_regra_prescr(nr_sequencia, cd_setor_atendimento_w) = 'S'
     and (coalesce(cd_especialidade::text, '') = '' or obter_se_especialidade_medico(cd_prescritor_w, cd_especialidade) = 'S')
     and (coalesce(cd_doenca_cid::text, '') = '' or obter_se_cid_atend_vig(nr_atendimento_p, cd_doenca_cid) = 'S')
   order by coalesce(ie_justificativa,'N'), qt_peso_max, qt_peso_min, qt_idade_max_dia, qt_idade_min_dia, qt_idade_max_mes, qt_idade_min_mes,
            qt_idade_max, qt_idade_min, ie_via_aplicacao, cd_setor_atendimento, nr_seq_agrupamento, cd_especialidade,
            cd_doenca_cid, cd_estabelecimento, nr_sequencia;

type t01 is table of c01%rowtype index by integer;
r01 t01;



BEGIN

  NR_MAT_PRESCR_P    := NULL;
  IE_JUSTIFICATIVA_P := NULL;
  QT_DOSE_W          := coalesce(QT_DOSE_P, 0) + coalesce(QT_DOSE_ISOL_P, 0) + coalesce(QT_DOSE_TOTAL_P, 0);

  IF coalesce(NR_SEQUENCIA_P, 0) > 0 AND QT_DOSE_W > 0 THEN
    BEGIN
      select cd_material,
             ie_via_aplicacao
        into STRICT cd_material_w,
             ie_via_aplicacao_w
        from cirurgia_agente_anestesico
       where nr_sequencia = nr_sequencia_p;
    EXCEPTION
      WHEN no_data_found THEN
        cd_material_w := null;
        ie_via_aplicacao_w := null;
      WHEN too_many_rows THEN
        cd_material_w := null;
        ie_via_aplicacao_w := null;
    END;

    IF (cd_material_w IS NOT NULL AND cd_material_w::text <> '') THEN
      cd_prescritor_w  := obter_pessoa_fisica_usuario(wheb_usuario_pck.get_nm_usuario, 'C');
      cd_paciente_w := obter_pf_atendimento(nr_atendimento_p, 'C');
      cd_setor_atendimento_w := obter_setor_atendimento(nr_atendimento_p);
      nr_seq_agrupamento_w := obter_agrupamento_setor(cd_setor_atendimento_w);
      qt_peso_w  := coalesce(obter_ultimo_sinal_vital_pf(cd_paciente_w,'Peso'), 0);

      OPEN c01;
        LOOP
        FETCH c01 BULK COLLECT INTO r01 LIMIT 100;
        EXIT WHEN r01.count = 0;

          FOR i IN 1..r01.count LOOP
            IF coalesce(NR_MAT_PRESCR_P::text, '') = '' THEN

              qt_dose_max_w := obter_dose_convertida(cd_material_w, r01[i].qt_limite_pessoa, r01[i].cd_unid_med_limite, 'ml');

              IF r01[i].ie_dose_limite = 'DIA' or (qt_peso_w > 0 and r01[i].ie_dose_limite = 'KG/DIA') THEN
                select sum(qt_dose) + qt_dose_w
                  into STRICT qt_dose_w
                  from (SELECT coalesce(sum(coalesce(b.qt_total_dose, 0) +
                                       coalesce(b.qt_dose_ataque, 0) +
                                       coalesce(b.qt_dose_total, 0)),
                                   0) qt_dose
                          from cirurgia_agente_anestesico a,
                               cirurgia_agente_anest_ocor b
                         where a.nr_sequencia = b.nr_seq_cirur_agente
                           and a.cd_material = cd_material_w
                           and obter_pessoa_fisica_cirurgia(a.nr_cirurgia) = cd_paciente_w
                           and coalesce(a.ie_situacao, 'A') = 'A'
                           and coalesce(b.ie_situacao, 'A') = 'A'
                           and (b.dt_final_adm IS NOT NULL AND b.dt_final_adm::text <> '')
                           and trunc(b.dt_inicio_adm, 'dd') = trunc(dt_inicio_p, 'dd')

union

                        SELECT coalesce(sum(obter_dose_convertida(b.cd_material,
                                                             c.qt_dose,
                                                             c.cd_unidade_medida,
                                                             'ml')),
                                   0) qt_dose
                          from prescr_medica a, prescr_material b, prescr_mat_hor c
                         where a.nr_prescricao = b.nr_prescricao
                           and a.cd_pessoa_fisica = cd_paciente_w
                           and b.cd_material = cd_material_w
                           and b.nr_prescricao = c.nr_prescricao
                           and b.nr_sequencia = c.nr_seq_material
                           and coalesce(a.dt_suspensao::text, '') = ''
                           and coalesce(b.ie_suspenso, 'N') = 'N'
                           and coalesce(c.dt_suspensao::text, '') = ''
                           and coalesce(c.ie_situacao, 'A') = 'A'
                           and trunc(c.dt_horario, 'dd') = trunc(dt_inicio_p, 'dd')) alias22;
              ELSIF r01[i].ie_dose_limite = 'AT' THEN
                select sum(qt_dose) + qt_dose_w
                  into STRICT qt_dose_w
                  from (SELECT coalesce(sum(coalesce(b.qt_total_dose, 0) +
                                       coalesce(b.qt_dose_ataque, 0) +
                                       coalesce(b.qt_dose_total, 0)),
                                   0) qt_dose
                          from cirurgia_agente_anestesico a,
                               cirurgia_agente_anest_ocor b,
                               cirurgia c
                         where a.nr_sequencia = b.nr_seq_cirur_agente
                           and a.nr_cirurgia = c.nr_cirurgia
                           and c.nr_atendimento = nr_atendimento_p
                           and a.cd_material = cd_material_w
                           and coalesce(a.ie_situacao, 'A') = 'A'
                           and coalesce(b.ie_situacao, 'A') = 'A'
                           and (b.dt_final_adm IS NOT NULL AND b.dt_final_adm::text <> '')

union

                        SELECT coalesce(sum(obter_dose_convertida(b.cd_material,
                                                             c.qt_dose,
                                                             c.cd_unidade_medida,
                                                             'ml')),
                                   0) qt_dose
                          from prescr_medica a, prescr_material b, prescr_mat_hor c
                         where a.nr_prescricao = b.nr_prescricao
                           and a.nr_atendimento = nr_atendimento_p
                           and b.cd_material = cd_material_w
                           and b.nr_prescricao = c.nr_prescricao
                           and b.nr_sequencia = c.nr_seq_material
                           and coalesce(a.dt_suspensao::text, '') = ''
                           and coalesce(b.ie_suspenso, 'N') = 'N'
                           and coalesce(c.dt_suspensao::text, '') = ''
                           and coalesce(c.ie_situacao, 'A') = 'A') alias16;
              ELSIF r01[i].ie_dose_limite = 'PF' THEN
                select sum(qt_dose) + qt_dose_w
                  into STRICT qt_dose_w
                  from (SELECT coalesce(sum(coalesce(b.qt_total_dose, 0) +
                                       coalesce(b.qt_dose_ataque, 0) +
                                       coalesce(b.qt_dose_total, 0)),
                                   0) qt_dose
                          from cirurgia_agente_anestesico a,
                               cirurgia_agente_anest_ocor b
                         where a.nr_sequencia = b.nr_seq_cirur_agente
                           and a.cd_material = cd_material_w
                           and obter_pessoa_fisica_cirurgia(a.nr_cirurgia) = cd_paciente_w
                           and coalesce(a.ie_situacao, 'A') = 'A'
                           and coalesce(b.ie_situacao, 'A') = 'A'
                           and (b.dt_final_adm IS NOT NULL AND b.dt_final_adm::text <> '')

union

                        SELECT coalesce(sum(obter_dose_convertida(b.cd_material,
                                                             c.qt_dose,
                                                             c.cd_unidade_medida,
                                                             'ml')),
                                   0) qt_dose
                          from prescr_medica a, prescr_material b, prescr_mat_hor c
                         where a.nr_prescricao = b.nr_prescricao
                           and a.cd_pessoa_fisica = cd_paciente_w
                           and b.cd_material = cd_material_w
                           and b.nr_prescricao = c.nr_prescricao
                           and b.nr_sequencia = c.nr_seq_material
                           and coalesce(a.dt_suspensao::text, '') = ''
                           and coalesce(b.ie_suspenso, 'N') = 'N'
                           and coalesce(c.dt_suspensao::text, '') = ''
                           and coalesce(c.ie_situacao, 'A') = 'A') alias17;
              END IF;

              IF r01[i].IE_DOSE_LIMITE in ('DOSE', 'AT', 'DIA', 'PF') THEN
                IF qt_dose_max_w > 0 and qt_dose_w > qt_dose_max_w THEN
                  NR_MAT_PRESCR_P    := r01[i].nr_sequencia;
                  IE_JUSTIFICATIVA_P := r01[i].ie_justificativa;
                END IF;
              ELSIF qt_peso_w > 0 and r01[i].ie_dose_limite in ('KG', 'KG/D', 'KG/DIA') THEN
                qt_dose_max_w := qt_peso_w * qt_dose_max_w;

                IF qt_dose_max_w > 0 and qt_dose_w > qt_dose_max_w THEN
                  NR_MAT_PRESCR_P    := r01[i].nr_sequencia;
                  IE_JUSTIFICATIVA_P := r01[i].ie_justificativa;
                END IF;
              END IF;

            END IF;
			
			IF (coalesce(IE_JUSTIFICATIVA_P::text, '') = '' and r01[i](.qt_intervalo_horas IS NOT NULL AND .qt_intervalo_horas::text <> '')) THEN	
			
	            select sum(qt_dose) + qt_dose_w
                  into STRICT qt_dose_ww
                  from (SELECT coalesce(sum(coalesce(b.qt_total_dose, 0) +
                                       coalesce(b.qt_dose_ataque, 0) +
                                       coalesce(b.qt_dose_total, 0)),
                                   0) qt_dose
                          from cirurgia_agente_anestesico a,
                               cirurgia_agente_anest_ocor b
                         where a.nr_sequencia = b.nr_seq_cirur_agente
                           and a.cd_material = cd_material_w
                           and obter_pessoa_fisica_cirurgia(a.nr_cirurgia) = cd_paciente_w
                           and coalesce(a.ie_situacao, 'A') = 'A'
                           and coalesce(b.ie_situacao, 'A') = 'A'
                           and (b.dt_final_adm IS NOT NULL AND b.dt_final_adm::text <> '')
                           and b.dt_inicio_adm between(dt_inicio_p - interval '1' hour * r01[i].qt_intervalo_horas) and dt_inicio_p

union

                        SELECT coalesce(sum(obter_dose_convertida(b.cd_material,
                                                             c.qt_dose,
                                                             c.cd_unidade_medida,
                                                             'ml')),
                                   0) qt_dose
                          from prescr_medica a, prescr_material b, prescr_mat_hor c
                         where a.nr_prescricao = b.nr_prescricao
                           and a.cd_pessoa_fisica = cd_paciente_w
                           and b.cd_material = cd_material_w
                           and b.nr_prescricao = c.nr_prescricao
                           and b.nr_sequencia = c.nr_seq_material
                           and coalesce(a.dt_suspensao::text, '') = ''
                           and coalesce(b.ie_suspenso, 'N') = 'N'
                           and coalesce(c.dt_suspensao::text, '') = ''
                           and coalesce(c.ie_situacao, 'A') = 'A'
                           and c.dt_horario between(dt_inicio_p - interval '1' hour * r01[i].qt_intervalo_horas) and dt_inicio_p) alias22;
		
				IF (qt_dose_max_w < qt_dose_ww) THEN
					NR_MAT_PRESCR_P    := r01[i].nr_sequencia;
					select CASE WHEN r01[i].ie_justificativa='S' THEN 'JT'  ELSE 'BT' END
					  into STRICT IE_JUSTIFICATIVA_P 
					;
				END IF;
			END IF;
          END LOOP;
        END LOOP;
      CLOSE c01;
    END IF;
  END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pepo_verifica_dose_max_contin (NR_SEQUENCIA_P CIRURGIA_AGENTE_ANESTESICO.NR_SEQUENCIA%TYPE, NR_ATENDIMENTO_P ATENDIMENTO_PACIENTE.NR_ATENDIMENTO%TYPE, DT_INICIO_P CIRURGIA_AGENTE_ANEST_OCOR.DT_INICIO_ADM%TYPE, QT_DOSE_P CIRURGIA_AGENTE_ANEST_OCOR.QT_TOTAL_DOSE%TYPE, QT_DOSE_ISOL_P CIRURGIA_AGENTE_ANEST_OCOR.QT_DOSE_ATAQUE%TYPE, QT_DOSE_TOTAL_P CIRURGIA_AGENTE_ANEST_OCOR.QT_DOSE_TOTAL%TYPE, DS_DOSE_P CIRURGIA_AGENTE_ANESTESICO.CD_UNID_MEDIDA_ADM%TYPE, NR_MAT_PRESCR_P INOUT MATERIAL_PRESCR.NR_SEQUENCIA%TYPE, IE_JUSTIFICATIVA_P INOUT MATERIAL_PRESCR.IE_JUSTIFICATIVA%TYPE) FROM PUBLIC;

