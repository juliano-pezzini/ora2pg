-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_grupo_aud_master ( nr_seq_grupo_p bigint, nr_seq_auditoria_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_ordem_w			bigint;
nr_seq_grupo_w			bigint;
nr_seq_requisicao_w		bigint;
qt_grupo_ordem_w		integer;
ie_tipo_auditoria_w		smallint;
ie_status_w			varchar(3);


BEGIN 
begin 
	select	ie_status 
	into STRICT	ie_status_w 
	from	pls_auditoria 
	where	nr_sequencia	= nr_seq_auditoria_p;
exception 
when others then 
	ie_status_w	:= null;
end;
 
if (ie_status_w	in ('F','C')) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(230314);
end if;
 
/* Verificado o tipo de auditoria pois existe a opção de assumir totalmente a análise pelo portal no acesso do estipulante/contratante */
 
begin 
select	max(ie_tipo_auditoria) 
into STRICT	ie_tipo_auditoria_w 
from	pls_grupo_auditor 
where	nr_sequencia	= nr_seq_grupo_p;
exception 
when others then 
	ie_tipo_auditoria_w	:= null;
end;
 
begin 
select	max(nr_seq_ordem) + 1 
into STRICT	nr_seq_ordem_w 
from	pls_auditoria_grupo 
where	nr_seq_auditoria	= nr_seq_auditoria_p 
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
exception 
when others then 
	nr_seq_ordem_w	:= null;
end;
 
if (coalesce(nr_seq_ordem_w,0) = 0) then 
	begin 
	select	min(nr_seq_ordem) 
	into STRICT	nr_seq_ordem_w 
	from	pls_auditoria_grupo 
	where	nr_seq_auditoria	= nr_seq_auditoria_p;
	exception 
	when others then 
		nr_seq_ordem_w	:= 1;
	end;
end if;
 
select	nextval('pls_auditoria_grupo_seq') 
into STRICT	nr_seq_grupo_w
;
 
insert into pls_auditoria_grupo(nr_sequencia, 
	nr_seq_auditoria, 
	nr_seq_grupo, 
	dt_atualizacao, 
	nm_usuario, 
	dt_atualizacao_nrec, 
	nm_usuario_nrec, 
	nr_seq_ordem, 
	ie_status, 
	ie_manual) 
values (nr_seq_grupo_w, 
	nr_seq_auditoria_p, 
	nr_seq_grupo_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	nr_seq_ordem_w, 
	'U', 
	'S');
 
select	count(*) 
into STRICT	qt_grupo_ordem_w 
from	pls_auditoria_grupo 
where	nr_seq_ordem		= nr_seq_ordem_w 
and	nr_seq_auditoria	= nr_seq_auditoria_p;	
	 
if (qt_grupo_ordem_w > 1) then 
	CALL pls_reorg_ordem_grupos_aud(nr_seq_ordem_w, nr_seq_grupo_w, nr_seq_auditoria_p, nm_usuario_p);
end if;
 
/* Verificado o tipo de auditoria pois existe a opção de assumir totalmente a análise pelo portal no acesso do estipulante/contratante */
 
if (ie_tipo_auditoria_w = 3) then 
	update	pls_auditoria 
	set	ie_status			= 'AE', 
		ie_auditoria_estipulante	= 'S', 
		nm_usuario			= nm_usuario_p, 
		dt_atualizacao			= clock_timestamp() 
	where	nr_sequencia			= nr_seq_auditoria_p;
else 
	update	pls_auditoria 
	set	ie_status	= 'A', 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp() 
	where	nr_sequencia	= nr_seq_auditoria_p;
end if;
 
update	pls_auditoria_item 
set	ie_status		= 'P', 
	nm_usuario		= nm_usuario_p, 
	dt_atualizacao		= clock_timestamp() 
where	nr_seq_auditoria	= nr_seq_auditoria_p 
and	ie_status		= 'J';
 
commit;
 
if (ie_tipo_auditoria_w <> 3) then 
	CALL pls_assumir_grupo_auditoria(nr_seq_grupo_w, nm_usuario_p);
end if;
 
begin 
select	nr_seq_requisicao 
into STRICT	nr_seq_requisicao_w 
from	pls_auditoria 
where	nr_sequencia	= nr_seq_auditoria_p;
exception 
when others then 
	nr_seq_requisicao_w	:= null;
end;
 
if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
	/* Verificado o tipo de auditoria pois existe a opção de assumir totalmente a análise pelo portal no acesso do estipulante/contratante */
 
	if (ie_tipo_auditoria_w = 3) then 
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', 'O usuário ' || nm_usuario_p || ' assumiu totalmente a análise pelo portal do Plano de Saúde.', null, nm_usuario_p);
	else 
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', 'O auditor ' || pls_obter_nome_usuario(nm_usuario_p) || ' assumiu totalmente a análise.', null, nm_usuario_p);
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_grupo_aud_master ( nr_seq_grupo_p bigint, nr_seq_auditoria_p bigint, nm_usuario_p text) FROM PUBLIC;

