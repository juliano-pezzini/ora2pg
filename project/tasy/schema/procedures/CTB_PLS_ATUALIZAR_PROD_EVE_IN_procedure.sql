-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_prod_eve_in ( nr_seq_lote_evento_p bigint, nr_seq_movimento_p bigint, nr_seq_atualizacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, qt_movimento_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Atualizar as contas contábeis das ocorrências financeiras dos prestadores
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_tipo_relacao_w		pls_prestador.ie_tipo_relacao%type;
nr_seq_esquema_w		pls_evento_movimento.nr_seq_esquema%type;
cd_conta_credito_w		pls_evento_movimento.cd_conta_credito%type;
cd_conta_debito_w		pls_evento_movimento.cd_conta_debito%type;
cd_historico_padrao_w		pls_esquema_contabil.cd_historico_padrao%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
ie_codificacao_w		pls_esquema_contabil_seg.ie_codificacao%type;
vl_fixo_w			pls_esquema_contabil_seg.vl_fixo%type;
cd_conta_contabil_w		pls_esquema_contabil_seg.cd_conta_contabil%type;
ie_debito_credito_w		pls_esquema_contabil_seg.ie_debito_credito%type;
nr_seq_tipo_prestador_w		pls_prestador.nr_seq_tipo_prestador%type;
ie_tipo_prestador_w		pls_tipo_prestador.ie_tipo_ptu%type;
ds_mascara_w			pls_esquema_contabil_seg.ds_mascara%type;
nr_seq_evento_w			pls_evento_movimento.nr_seq_evento%type;
nr_seq_evento_mvto_w		pls_evento_movimento.nr_sequencia%type;
ie_consiste_evento_w		pls_evento.ie_consiste_ctb%type;
ie_status_w			pls_movimento_contabil.ie_status%type;
cd_cgc_prestador_w		pls_prestador.cd_cgc%type;
cd_pf_prestador_w		pls_prestador.cd_pessoa_fisica%type;
cd_empresa_w			empresa.cd_empresa%type;
cd_classificacao_credito_w	varchar(255);
cd_classificacao_debito_w	varchar(255);
cd_classificacao_item_w		varchar(30);
qt_movimento_w			bigint	:= 0;
dt_referencia_w			timestamp;
ie_forma_pagto_w		pls_evento_movimento.ie_forma_pagto%type;

c_eventos CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_evento,
		b.ie_tipo_relacao,
		b.nr_sequencia,
		b.nr_seq_tipo_prestador,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		coalesce(c.ie_consiste_ctb, 'S') ie_consiste_ctb,
		coalesce(a.ie_forma_pagto,'P')
	FROM pls_evento c, pls_evento_movimento a
LEFT OUTER JOIN pls_prestador b ON (a.nr_seq_prestador = b.nr_sequencia)
WHERE c.nr_sequencia		= a.nr_seq_evento and a.nr_seq_lote		= nr_seq_lote_evento_p and ((a.nr_sequencia = nr_seq_movimento_p) or (coalesce(nr_seq_movimento_p::text, '') = '')) and coalesce(a.nr_lote_contabil,0) = 0;

c_esquema CURSOR FOR
	SELECT	nr_sequencia,
		cd_historico_padrao
	from	pls_esquema_contabil
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	ie_tipo_regra		= 'PM'
	and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_referencia_w)
	and	((nr_seq_prestador = nr_seq_prestador_w) or (coalesce(nr_seq_prestador::text, '') = ''))
	and	((nr_seq_tipo_prestador = nr_seq_tipo_prestador_w) or (coalesce(nr_seq_tipo_prestador::text, '') = ''))
	and	((ie_tipo_ptu = ie_tipo_prestador_w) or (coalesce(ie_tipo_ptu::text, '') = ''))
	and	((ie_tipo_relacao = ie_tipo_relacao_w) or (coalesce(ie_tipo_relacao::text, '') = ''))
	and	((nr_seq_evento = nr_seq_evento_w) or (coalesce(nr_seq_evento::text, '') = ''))
	and	ie_tipo_movimentacao = 13
	and	((ie_forma_pagto = ie_forma_pagto_w) or (coalesce(ie_forma_pagto::text, '') = ''))
	order by
		coalesce(nr_seq_evento,0),
		coalesce(nr_seq_prestador,0),
		coalesce(ie_tipo_relacao,' '),
		coalesce(nr_seq_tipo_prestador,0),
		coalesce(ie_tipo_ptu,' '),
		coalesce(dt_inicio_vigencia,clock_timestamp());

c_segmentacao CURSOR FOR
	SELECT	ie_codificacao,
		vl_fixo,
		cd_conta_contabil,
		ie_debito_credito,
		ds_mascara
	from	pls_esquema_contabil_seg
	where	nr_seq_regra_esquema	= nr_seq_esquema_w
	order by
		ie_debito_credito,
		nr_seq_apresentacao;


BEGIN

select	trunc(a.dt_competencia,'month')
into STRICT	dt_referencia_w
from	pls_lote_evento	a
where	a.nr_sequencia	= nr_seq_lote_evento_p;

select	max(cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

qt_movimento_w	:= qt_movimento_p;

CALL wheb_usuario_pck.set_ie_atualizacao_contabil('S');

open c_eventos;
loop
fetch c_eventos into
	nr_seq_evento_mvto_w,
	nr_seq_evento_w,
	ie_tipo_relacao_w,
	nr_seq_prestador_w,
	nr_seq_tipo_prestador_w,
	cd_pf_prestador_w,
	cd_cgc_prestador_w,
	ie_consiste_evento_w,
	ie_forma_pagto_w;
EXIT WHEN NOT FOUND; /* apply on c_eventos */
	begin
	cd_classificacao_credito_w	:= null;
	cd_classificacao_debito_w	:= null;
	cd_conta_credito_w		:= null;
	cd_conta_debito_w		:= null;
	nr_seq_esquema_w		:= null;
	cd_historico_padrao_w		:= null;

	if (nr_seq_tipo_prestador_w IS NOT NULL AND nr_seq_tipo_prestador_w::text <> '') then
		select	max(ie_tipo_ptu)
		into STRICT	ie_tipo_prestador_w
		from	pls_tipo_prestador
		where	nr_sequencia	= nr_seq_tipo_prestador_w;
	end if;

	open c_esquema;
	loop
	fetch c_esquema into
		nr_seq_esquema_w,
		cd_historico_padrao_w;
	EXIT WHEN NOT FOUND; /* apply on c_esquema */
	end loop;
	close c_esquema;

	open c_segmentacao;
	loop
	fetch c_segmentacao into
		ie_codificacao_w,
		vl_fixo_w,
		cd_conta_contabil_w,
		ie_debito_credito_w,
		ds_mascara_w;
	EXIT WHEN NOT FOUND; /* apply on c_segmentacao */
		begin
		cd_classificacao_item_w	:= null;

		if (ie_debito_credito_w = 'C') then /* Classificação CRÉDITO */
			if (ie_codificacao_w = 'CR') then /* Código reduzido */
				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_credito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'FX') then /* Fixo */
				cd_classificacao_item_w	:= vl_fixo_w;
			elsif (ie_codificacao_w = 'TR') then /* Tipo de relação com a OPS */
				cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
			elsif (ie_codificacao_w = 'JP') then
				if (cd_cgc_prestador_w IS NOT NULL AND cd_cgc_prestador_w::text <> '') then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_jur_conta_cont a
					where	a.cd_cgc		= cd_cgc_prestador_w
					and	a.cd_empresa	 	= cd_empresa_w
					and	a.ie_tipo_conta		= 'P'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);

				elsif (cd_pf_prestador_w IS NOT NULL AND cd_pf_prestador_w::text <> '') then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_fisica_conta_ctb	a
					where	a.cd_pessoa_fisica	= cd_pf_prestador_w
					and	a.cd_empresa	 	= cd_empresa_w
					and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
					and	a.ie_tipo_conta		= 'P'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
				end if;

				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_credito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'RP') then
				if (coalesce(cd_cgc_prestador_w,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_jur_conta_cont a
					where	a.cd_cgc	= cd_cgc_prestador_w
					and	a.cd_empresa	= cd_empresa_w
					and	a.ie_tipo_conta	= 'R'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);

				elsif (coalesce(cd_pf_prestador_w,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_fisica_conta_ctb	a
					where	a.cd_pessoa_fisica 	= cd_pf_prestador_w
					and	a.cd_empresa		= cd_empresa_w
					and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
					and	a.ie_tipo_conta	= 'R'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
				end if;

				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil = cd_conta_contabil_w;

				cd_conta_credito_w	:= cd_conta_contabil_w;
			end if;

			if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
				if (ds_mascara_w = '00') then
					cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
				elsif (ds_mascara_w = '0.0') then
					cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
				elsif (ds_mascara_w = '0_') then
					cd_classificacao_item_w	:= cd_classificacao_item_w;
				else
					cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
				end if;

				cd_classificacao_credito_w	:= cd_classificacao_credito_w || cd_classificacao_item_w;
			end if;
		elsif (ie_debito_credito_w = 'D') then /* Classificação DÉBITO */
			if (ie_codificacao_w = 'CR') then /* Código reduzido */
				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_debito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'FX') then /* Fixo */
				cd_classificacao_item_w	:= vl_fixo_w;
			elsif (ie_codificacao_w = 'TR') then /* Tipo de relação com a OPS */
				cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
			elsif (ie_codificacao_w = 'JP') then
				if (cd_cgc_prestador_w IS NOT NULL AND cd_cgc_prestador_w::text <> '') then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_jur_conta_cont a
					where	a.cd_cgc	= cd_cgc_prestador_w
					and	a.cd_empresa	= cd_empresa_w
					and	a.ie_tipo_conta	= 'P'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
				elsif (cd_pf_prestador_w IS NOT NULL AND cd_pf_prestador_w::text <> '') then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_fisica_conta_ctb	a
					where	a.cd_pessoa_fisica	= cd_pf_prestador_w
					and	a.cd_empresa		= cd_empresa_w
					and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
					and	a.ie_tipo_conta		= 'P'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
				end if;

				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_debito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'RP') then
				if (coalesce(cd_cgc_prestador_w,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_jur_conta_cont a
					where	a.cd_cgc	= cd_cgc_prestador_w
					and	a.cd_empresa	= cd_empresa_w
					and	a.ie_tipo_conta	= 'R'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
				elsif (coalesce(cd_pf_prestador_w,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_fisica_conta_ctb	a
					where	a.cd_pessoa_fisica	= cd_pf_prestador_w
					and	a.cd_empresa		= cd_empresa_w
					and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
					and	a.ie_tipo_conta	= 'R'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
				end if;

				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_debito_w	:= cd_conta_contabil_w;
			end if;

			if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
				if (ds_mascara_w = '00') then
					cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
				elsif (ds_mascara_w = '0.0') then
					cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
				elsif (ds_mascara_w = '0_') then
					cd_classificacao_item_w	:= cd_classificacao_item_w;
				else
					cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
				end if;

				cd_classificacao_debito_w	:= cd_classificacao_debito_w || cd_classificacao_item_w;
			end if;
		end if;
		end;
	end loop;
	close c_segmentacao;

	/* Remover o último ponto da classificação */

	if (substr(cd_classificacao_credito_w,length(cd_classificacao_credito_w),length(cd_classificacao_credito_w)) = '.') then
		cd_classificacao_credito_w	:= substr(cd_classificacao_credito_w,1,length(cd_classificacao_credito_w)-1);
	end if;

	if (substr(cd_classificacao_debito_w,length(cd_classificacao_debito_w),length(cd_classificacao_debito_w)) = '.') then
		cd_classificacao_debito_w	:= substr(cd_classificacao_debito_w,1,length(cd_classificacao_debito_w)-1);
	end if;

	if (coalesce(cd_conta_credito_w::text, '') = '') then
		cd_conta_credito_w	:= ctb_obter_conta_classif(cd_classificacao_credito_w,dt_referencia_w,cd_estabelecimento_p);
	end if;

	if (coalesce(cd_conta_debito_w::text, '') = '') then
		cd_conta_debito_w	:= ctb_obter_conta_classif(cd_classificacao_debito_w,dt_referencia_w,cd_estabelecimento_p);
	end if;

	if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
		if (coalesce(nr_seq_esquema_w::text, '') = '') then
			if (ie_consiste_evento_w = 'N') then
				ie_status_w	:= 6;
			else
				ie_status_w	:= 1;
			end if;

			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
						ie_status_w,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nr_seq_evento_mvto_w,
						null,
						null,
						null,
						null,
						nm_usuario_p,
						nr_seq_esquema_w);
		elsif	((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) then
			if (ie_consiste_evento_w = 'N') then
				ie_status_w	:= 6;
			else
				ie_status_w	:= 2;
			end if;

			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
						ie_status_w,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nr_seq_evento_mvto_w,
						null,
						null,
						null,
						null,
						nm_usuario_p,
						nr_seq_esquema_w);
		end if;
	end if;

	update	pls_evento_movimento
	set	cd_conta_credito	= cd_conta_credito_w,
		cd_conta_debito		= cd_conta_debito_w,
		nr_seq_esquema		= nr_seq_esquema_w,
		cd_historico		= cd_historico_padrao_w,
		cd_classif_cred		= cd_classificacao_credito_w,
		cd_classif_deb		= cd_classificacao_debito_w
	where	nr_sequencia		= nr_seq_evento_mvto_w;

	qt_movimento_w	:= qt_movimento_w + 1;

	if (mod(qt_movimento_w, 200) = 0) then
		commit;
	end if;
	end;
end loop;
close c_eventos;

CALL wheb_usuario_pck.set_ie_atualizacao_contabil('N');

qt_movimento_p	:= qt_movimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_prod_eve_in ( nr_seq_lote_evento_p bigint, nr_seq_movimento_p bigint, nr_seq_atualizacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, qt_movimento_p INOUT bigint) FROM PUBLIC;

