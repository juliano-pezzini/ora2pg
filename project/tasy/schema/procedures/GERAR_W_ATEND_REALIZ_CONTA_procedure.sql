-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_atend_realiz_conta (dt_inicial_p timestamp, dt_final_p timestamp, ie_data_p text, nm_paciente_p text default '', nr_atendimento_p bigint default 0) AS $body$
DECLARE


-- Tabela: Atendimento_paciente	w_rel_atend_filantropia
ds_categoria_w			varchar(80);
cd_categoria_w			varchar(10);
ds_plano_w			varchar(80);
ds_projeto_w			varchar(40);
nr_atendimento_w		bigint;
cd_convenio_parametro_w		varchar(10);
ie_cancelamento_w		varchar(5);
nr_prontuario_w			bigint;
dt_entrada_w			timestamp;
dt_saida_w			timestamp;
nm_paciente_w			varchar(100);
nm_medico_w			varchar(100);
ds_tipo_atendimento_w		varchar(100);
ie_tipo_atendimento_w		varchar(5);
cd_cgc_w			varchar(15);
ds_razao_social_w		pessoa_juridica.ds_razao_social%type;
ds_sexo_w			varchar(15);
dt_nascimento_w			timestamp;
nr_anos_w			bigint;
cd_cep_w			varchar(20);
ds_endereco_w			varchar(130);
ds_cidade_w			varchar(150);
ds_UF_w				varchar(100);
ds_setor_atendimento_w  	varchar(110);
nm_unidade_basica_w 		varchar(30);
nm_unidade_compl_w		varchar(30);
nm_unidade_w			varchar(60);
ds_estabelecimento_w		varchar(60);
dt_mesano_contabil_w    	timestamp;
dt_mesano_referencia_w  	timestamp;
dt_emissao_w			timestamp;
cd_cartao_nac_sus_w		numeric(30);
cd_estabelecimento_w		integer;
cd_plano_convenio_w		varchar(10);
nr_sequencia_w			bigint;
nr_sequencia_pm_w		bigint;
nr_seq_indicacao_w		bigint;
ds_indicacao_w			varchar(10);
cd_pessoa_fisica_w		varchar(10);
cd_medico_w			varchar(10);
cd_municipio_ibge_w		varchar(6);
sg_estado_w			compl_pessoa_fisica.sg_estado%type;
nr_cartao_nac_sus_w		varchar(20);
cd_cbo_sus_w			integer;
ds_cbo_sus_w			varchar(80);
--Procedimento/Material  w_rel_proc_mat_filantropia
nr_interno_conta_w		bigint;
ie_classif_w			varchar(1);
cd_proc_mat_w			bigint;
ds_proc_mat_w			varchar(255);
qt_proc_mat_w			bigint;
vl_proc_mat_w			varchar(10);
ds_proced_interno_w		varchar(110);
cd_procedimento_sus_w		bigint;
ds_lancamento_w			varchar(255);
ds_estrutura_w			varchar(255);
cd_categoria_parametro_w	varchar(255);
dt_inicial_conta_w		varchar(20);
dt_final_conta_w		varchar(20);



C01 CURSOR FOR  -- Atendimento
	SELECT	distinct
		q.ds_categoria,
		p.cd_categoria,
		max(h.ds_plano),
		coalesce(substr(z.ds_observacao,1,35),'PROJETO IMAGEM') ds_projeto,
		a.nr_atendimento,
		max(c.CD_CONVENIO_PARAMETRO) CD_CONVENIO_PARAMETRO,
		c.ie_cancelamento,		
		b.nr_prontuario,
		a.dt_entrada,
		a.dt_alta dt_saida,
		SUBSTR(OBTER_NOME_PF(b.CD_PESSOA_FISICA),0,100) nm_paciente,
		SUBSTR(OBTER_NOME_PF(x.CD_PESSOA_FISICA),0,100) nm_medico,
		substr(obter_nome_tipo_atend(a.ie_tipo_atendimento),1,30) ds_tipo_atendimento,
		a.ie_tipo_atendimento,
		z.cd_cgc,
		z.ds_razao_social,
		substr(obter_valor_dominio(4,b.ie_sexo),1,50) ds_sexo,
		b.dt_nascimento,
		Trunc((clock_timestamp() - b.dt_nascimento)/365.25) nr_anos,
		substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CEP'),1,255) cd_cep,
		substr(obter_compl_pf(a.cd_pessoa_fisica,1,'ENCB'),1,255) ds_endereco,
		substr(obter_compl_pf(a.cd_pessoa_fisica,1,'DM'),1,150) ds_cidade,
		substr(obter_compl_pf(a.cd_pessoa_fisica, 1,'DS_UF'),1,100) ds_UF,
		k.ds_setor_atendimento,
		s.cd_unidade_basica,
		s.cd_unidade_compl,
		s.cd_unidade_basica || ' ' ||s.cd_unidade_compl nm_unidade,
		e.nm_fantasia_estab ds_estabelecimento,
		(b.nr_cartao_nac_sus)::numeric ,
		a.cd_estabelecimento,
		max(p.cd_plano_convenio),
		a.nr_seq_indicacao,
		substr(Obter_Desc_Indicacao(a.nr_seq_indicacao),1,150) ds_indicacao,
		a.cd_pessoa_fisica,
		a.cd_medico_resp,
		substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CDM'),1,255) cd_municipio_ibge,
		substr(obter_compl_pf(a.cd_pessoa_fisica, 1,'UF'),1,2) ds_uf,
		x.nr_cartao_nac_sus,
		x.cd_cbo_sus,
		substr(obter_desc_cbo_red(x.cd_cbo_sus),1,80) ds_cbo_sus,
		max(c.cd_categoria_parametro) cd_categoria_parametro
	FROM pessoa_fisica x, atend_paciente_unidade s, categoria_convenio q, atend_categoria_convenio p, setor_atendimento k, convenio_plano h, estabelecimento e, conta_paciente c, pessoa_fisica b, atendimento_paciente a
LEFT OUTER JOIN (SELECT t.ds_observacao,
			t.cd_cgc,
			j.ds_razao_social,
			x.cd_pessoa_fisica
		from 	Terceiro t,
			Pessoa_Juridica j,
			Terceiro_Pessoa_Fisica x
		where   t.nr_sequencia = x.nr_seq_terceiro
		and 	t.cd_cgc = j.cd_cgc
		and 	(t.ds_observacao IS NOT NULL AND t.ds_observacao::text <> '')) z ON (a.cd_medico_resp = z.cd_pessoa_Fisica)
WHERE to_date(to_char(CASE WHEN ie_data_p='DA' THEN  a.dt_alta WHEN ie_data_p='DE' THEN  a.dt_entrada WHEN ie_data_p='DC' THEN  c.dt_mesano_contabil END ,'dd/mm/yyyy'),'dd/mm/yyyy')
   	between  to_date(to_char(dt_inicial_p,'dd/mm/yyyy'),'dd/mm/yyyy') and to_date(to_char(fim_dia(dt_final_p),'dd/mm/yyyy'),'dd/mm/yyyy') and p.cd_convenio 	      =  984 AND coalesce(c.ie_cancelamento::text, '') = '' and e.cd_estabelecimento  = a.cd_estabelecimento  and s.cd_setor_atendimento= k.cd_setor_atendimento and h.cd_plano	      = p.cd_plano_convenio and h.cd_convenio	      = p.cd_convenio and p.cd_convenio	      = q.cd_convenio and p.cd_categoria	      = q.cd_categoria and a.cd_medico_resp      = x.cd_pessoa_fisica and (s.nr_seq_interno     = obter_atepacu_paciente(a.nr_atendimento, 'A')) and a.nr_atendimento      = s.nr_atendimento and a.nr_atendimento      = p.nr_atendimento and a.cd_pessoa_fisica    = b.cd_pessoa_fisica and a.nr_atendimento      = c.nr_atendimento group by 	q.ds_categoria,
			p.cd_categoria,
			coalesce(substr(z.ds_observacao,1,35),'PROJETO IMAGEM'),
			a.nr_atendimento,
    		c.ie_cancelamento,	
			b.nr_prontuario,
			a.dt_entrada,
			a.dt_alta,
      SUBSTR(OBTER_NOME_PF(b.CD_PESSOA_FISICA),0,100),
      SUBSTR(OBTER_NOME_PF(x.CD_PESSOA_FISICA),0,100),
			substr(obter_nome_tipo_atend(a.ie_tipo_atendimento),1,30),
			a.ie_tipo_atendimento,
			z.cd_cgc,
			z.ds_razao_social,
			substr(obter_valor_dominio(4,b.ie_sexo),1,50),
			b.dt_nascimento,
			k.ds_setor_atendimento,
			s.cd_unidade_basica,
			s.cd_unidade_compl,
			e.nm_fantasia_estab,
			(b.nr_cartao_nac_sus)::numeric ,
			a.cd_estabelecimento,
			a.nr_seq_indicacao,
			a.cd_pessoa_fisica,
			a.cd_medico_resp,
			x.nr_cartao_nac_sus,
			x.cd_cbo_sus;


C02 CURSOR FOR  -- Procedimento/Material
		SELECT 	a.nr_interno_conta,
		a.ie_classif,
		a.cd_procedimento,
		a.ds_procedimento,
		sum(a.qt_proced) qt_proced,
		sum(a.vl_proced) vl_proced,
		a.ds_proced_interno,
		a.cd_procedimento_sus,
		a.ds_lancamento,
		a.ds_estrutura,
		obter_dt_emissao_nf(a.nr_interno_conta) dt_emissao,
		a.dt_mesano_contabil,
		a.dt_mesano_referencia,
		a.dt_inicial_conta,
		a.dt_final_conta
	from (SELECT	c.nr_interno_conta,
			'P' ie_classif,
			i.cd_procedimento,
			i.ds_procedimento,
			sum(DISTINCT p.qt_procedimento) qt_proced,
			sum(DISTINCT p.vl_procedimento) vl_proced,
			coalesce(pi.ds_proc_exame,el.nm_exame) ds_proced_interno,
			pcs.cd_procedimento_sus,
			CASE WHEN coalesce(p.nr_seq_proc_pacote::text, '') = '' THEN wheb_mensagem_pck.get_texto(802941)  ELSE CASE WHEN p.nr_seq_proc_pacote=p.nr_sequencia THEN wheb_mensagem_pck.get_texto(802940)  ELSE wheb_mensagem_pck.get_texto(802937) END  END  ds_lancamento,
			substr(OBTER_ESTRUT_CONTA_CONV(p.NR_SEQUENCIA,p.IE_EMITE_CONTA,'D'),1,255) ds_estrutura,
			max(c.dt_mesano_contabil) dt_mesano_contabil,
			max(c.dt_mesano_referencia) dt_mesano_referencia,
			substr(obter_dados_conta_paciente(c.nr_interno_conta,'DPI'),1,100) dt_inicial_conta,
			substr(obter_dados_conta_paciente(c.nr_interno_conta,'DPF'),1,100) dt_final_conta
		FROM conta_paciente_estrutura t, procedimento i, conta_paciente c, procedimento_paciente p
LEFT OUTER JOIN procedimento_conv_sus pcs ON (p.cd_procedimento = pcs.cd_procedimento AND p.ie_origem_proced = pcs.ie_origem_proced)
LEFT OUTER JOIN proc_interno pi ON (p.nr_seq_proc_interno = pi.nr_sequencia)
LEFT OUTER JOIN exame_laboratorio el ON (p.nr_seq_exame = el.nr_seq_exame)
WHERE p.cd_procedimento 	= i.cd_procedimento and p.ie_origem_proced 	= i.ie_origem_proced and c.nr_atendimento	=  nr_atendimento_w and p.nr_interno_conta 	= c.nr_interno_conta group by c.nr_interno_conta,
			'P',
			i.cd_procedimento,
			i.ds_procedimento,
			pi.ds_proc_exame,
			el.nm_exame,
			pcs.cd_procedimento_sus,
			p.nr_seq_proc_pacote,
			p.nr_seq_proc_pacote,
			p.nr_sequencia,
			p.IE_EMITE_CONTA,
			c.dt_mesano_contabil,
			c.dt_mesano_referencia) a
	GROUP BY
	a.nr_interno_conta,
	a.ie_classif,
	a.cd_procedimento,
	a.ds_procedimento,
	a.ds_proced_interno,
	a.cd_procedimento_sus,
	a.ds_lancamento,
	a.ds_estrutura,
	a.dt_mesano_contabil,
	a.dt_mesano_referencia,
	a.dt_inicial_conta,
	a.dt_final_conta
	
union

	select	a.nr_interno_conta,
		a.ie_classif,
		a.cd_material,
		a.ds_material,
		sum(a.qt_material) qt_material,
		sum(a.vl_material) vl_material,
		'',
		0,
		a.ds_lancamento,
		a.ds_estrutura,
		obter_dt_emissao_nf(a.nr_interno_conta) dt_emissao,
		a.dt_mesano_contabil,
		a.dt_mesano_referencia,
		a.dt_inicial_conta,
		a.dt_final_conta
	from (select c.nr_interno_conta,
			'M' ie_classif,
			i.cd_material,
			i.ds_material,
			sum(distinct p.qt_material) qt_material,
			sum(distinct p.vl_material) vl_material,
			CASE WHEN coalesce(p.nr_seq_proc_pacote::text, '') = '' THEN wheb_mensagem_pck.get_texto(802941)  ELSE CASE WHEN p.nr_seq_proc_pacote=p.nr_sequencia THEN  wheb_mensagem_pck.get_texto(802940)  ELSE wheb_mensagem_pck.get_texto(802937) END  END  ds_lancamento,
			substr(OBTER_ESTRUT_CONTA_CONV(p.NR_SEQUENCIA,p.IE_EMITE_CONTA,'D'),1,255) ds_estrutura,
			max(c.dt_mesano_contabil) dt_mesano_contabil,
			max(c.dt_mesano_referencia) dt_mesano_referencia,
			substr(obter_dados_conta_paciente(c.nr_interno_conta,'DPI'),1,100) dt_inicial_conta,
			substr(obter_dados_conta_paciente(c.nr_interno_conta,'DPF'),1,100) dt_final_conta
		from	material_atend_paciente p,
			material i,
			conta_Paciente c
		where	coalesce(p.cd_motivo_exc_conta::text, '') = ''
			and	p.cd_material 	   = i.cd_material
			and	c.nr_atendimento   = nr_atendimento_w
			and	p.nr_interno_conta = c.nr_interno_conta
		group by c.nr_interno_conta,
			'M',
			i.cd_material,
			i.ds_material,
			p.qt_material,
			p.vl_material,
			'',
			0,
			p.nr_seq_proc_pacote,
			p.nr_seq_proc_pacote,
			p.nr_sequencia,
			p.IE_EMITE_CONTA,
			c.dt_mesano_contabil,
			c.dt_mesano_referencia)a
	group by
	a.nr_interno_conta,
	a.ie_classif,
	a.cd_material,
	a.ds_material,
	a.ds_lancamento,
	a.ds_estrutura,
	a.dt_mesano_contabil,
	a.dt_mesano_referencia,
	a.dt_inicial_conta,
	a.dt_final_conta;


BEGIN

delete	FROM w_hsl_rel_atendimento;
delete	FROM w_hsl_rel_proc_mat;
commit;


open C01;
loop
fetch C01 into
	ds_categoria_w,
	cd_categoria_w,
	ds_plano_w,
	ds_projeto_w,
	nr_atendimento_w,
	ie_cancelamento_w,
	cd_convenio_parametro_w,
	nr_prontuario_w,
	dt_entrada_w,
	dt_saida_w,
	nm_paciente_w,
	nm_medico_w,
	ds_tipo_atendimento_w,
	ie_tipo_atendimento_w,
	cd_cgc_w,
	ds_razao_social_w,
	ds_sexo_w,
	dt_nascimento_w,
	nr_anos_w,
	cd_cep_w,
	ds_endereco_w,
	ds_cidade_w,
	ds_UF_w,
	ds_setor_atendimento_w,
	nm_unidade_basica_w,
	nm_unidade_compl_w,
	nm_unidade_w,
	ds_estabelecimento_w,
	cd_cartao_nac_sus_w,
	cd_estabelecimento_w,
	cd_plano_convenio_w,
	nr_seq_indicacao_w,
	ds_indicacao_w,
	cd_pessoa_fisica_w,
	cd_medico_w,
	cd_municipio_ibge_w,
	sg_estado_w,
	nr_cartao_nac_sus_w,
	cd_cbo_sus_w,
	ds_cbo_sus_w,
	cd_categoria_parametro_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	nextval('w_hsl_rel_atendimento_seq')
	into STRICT	nr_sequencia_w
	;

	insert into w_hsl_rel_atendimento(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		ds_categoria,
		cd_categoria,
		ds_plano,
		ds_projeto,
		nr_atendimento,
		nr_prontuario,
		dt_entrada,
		dt_saida,
		nm_paciente,
		nm_medico,
		ds_tipo_atendimento,
		ie_tipo_atendimento,
		cd_cgc,
		ds_razao_social,
		ds_sexo,
		dt_nascimento,
		nr_anos,
		cd_cep,
		ds_endereco,
		ds_cidade,
		ds_UF,
		ds_setor_atendimento,
		nm_unidade_basica,
		nm_unidade_compl,
		nm_unidade,
		ds_estabelecimento,
		cd_cartao_nac_sus,
		cd_estabelecimento,
		cd_plano,
		nr_seq_indicacao,
		ds_indicacao,
		cd_pessoa_fisica,
		cd_medico,
		cd_municipio,
		sg_estado,
		nr_cartao_nac_sus,
		cd_cbo_sus,
		ds_cbo_sus,
		cd_convenio_parametro,
		cd_categoria_parametro)
	values (	nr_sequencia_w,
		obter_usuario_ativo,
		clock_timestamp(),
		ds_categoria_w,
		cd_categoria_w,
		ds_plano_w,
		ds_projeto_w,
		nr_atendimento_w,
		nr_prontuario_w,
		dt_entrada_w,
		dt_saida_w,
		nm_paciente_w,
		nm_medico_w,
		ds_tipo_atendimento_w,
		ie_tipo_atendimento_w,
		cd_cgc_w,
		ds_razao_social_w,
		ds_sexo_w,
		dt_nascimento_w,
		nr_anos_w,
		cd_cep_w,
		ds_endereco_w,
		ds_cidade_w,
		ds_UF_w,
		ds_setor_atendimento_w,
		nm_unidade_basica_w,
		nm_unidade_compl_w,
		nm_unidade_w,
		ds_estabelecimento_w,
		cd_cartao_nac_sus_w,
		cd_estabelecimento_w,
		cd_plano_convenio_w,
		nr_seq_indicacao_w,
		ds_indicacao_w,
		cd_pessoa_fisica_w,
		cd_medico_w,
		cd_municipio_ibge_w,
		sg_estado_w,
		nr_cartao_nac_sus_w,
		cd_cbo_sus_w,
		ds_cbo_sus_w,
		cd_convenio_parametro_w,
		cd_categoria_parametro_w);

		if (nr_atendimento_w > 0) then
			open C02;
			loop
			fetch C02 into
				nr_interno_conta_w,
				ie_classif_w,
				cd_proc_mat_w,
				ds_proc_mat_w,
				qt_proc_mat_w,
				vl_proc_mat_w,
				ds_proced_interno_w,
				cd_procedimento_sus_w,
				ds_lancamento_w,
				ds_estrutura_w,
				dt_emissao_w,
				dt_mesano_contabil_w,
				dt_mesano_referencia_w,
				dt_inicial_conta_w,
				dt_final_conta_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				select	nextval('w_hsl_rel_proc_mat_seq')
				into STRICT	nr_sequencia_pm_w
				;

				insert into w_hsl_rel_proc_mat(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nr_interno_conta,
					ie_classif,
					cd_proc_mat,
					ds_proc_mat,
					qt_proc_mat,
					vl_proc_mat,
					ds_proced_interno,
					cd_procedimento_sus,
					ds_lancamento,
					nr_atendimento,
					ds_estrutura,
					dt_periodo_inicial,
					dt_periodo_final)
				values (	nr_sequencia_pm_w,
					obter_usuario_ativo,
					clock_timestamp(),
					nr_interno_conta_w,
					ie_classif_w,
					cd_proc_mat_w,
					ds_proc_mat_w,
					qt_proc_mat_w,
					vl_proc_mat_w,
					ds_proced_interno_w,
					cd_procedimento_sus_w,
					ds_lancamento_w,
					nr_atendimento_w,
					ds_estrutura_w,
					dt_inicial_conta_w,
					dt_final_conta_w);
					
				update 	w_hsl_rel_atendimento
				set 	dt_emissao = dt_emissao_w,
					dt_mesano_referencia = dt_mesano_referencia_w,
					dt_mesano_contabil = dt_mesano_contabil_w
				where 	nr_sequencia = nr_sequencia_w;

				end;
			end loop;
			close C02;
		end if;
	end;
end loop;
close C01;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_atend_realiz_conta (dt_inicial_p timestamp, dt_final_p timestamp, ie_data_p text, nm_paciente_p text default '', nr_atendimento_p bigint default 0) FROM PUBLIC;

