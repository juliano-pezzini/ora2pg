-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_saldo_lote ( cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, dt_mesano_referencia_p timestamp, nr_seq_lote_p bigint, cd_operacao_estoque_p bigint, qt_estoque_p bigint, cd_acao_p text, nm_usuario_p text, ie_erro_p INOUT text) AS $body$
DECLARE


ie_atualiza_estoque_w		varchar(1)	:= '0';
ie_entrada_saida_w			varchar(1)	:= '0';
qt_estoque_w			double precision	:= 0;
qt_emprestimo_entrada_w		double precision;
ie_permite_estoque_negativo_w	varchar(5);
qt_saldo_w			double precision;
ie_grava_saldo_w			varchar(1)	:= 'N';
qt_estoque_saldo_w		double precision	:= 0;
vl_estoque_w			double precision	:= 0;
vl_custo_medio_w			double precision   	:= 0;
dt_atualizacao_w			timestamp 		:= clock_timestamp();
ds_local_estoque_w		varchar(100);
ds_material_w			varchar(255);
cd_material_w			integer;


BEGIN
ie_erro_p				:= 'N';

select	cd_material_estoque
into STRICT	cd_material_w
from	material
where	cd_material = cd_material_p;

/*  obter os indicadores se atualiza estoque, e se a operacao é de ent.sai*/

if (cd_operacao_estoque_p = 0) then
	ie_entrada_saida_w		:= 'E';
	ie_atualiza_estoque_w	:= 'S';
elsif (cd_operacao_estoque_p > 0) then
	begin
	select	ie_entrada_saida,
		ie_atualiza_estoque
	into STRICT	ie_entrada_saida_w,
		ie_atualiza_estoque_w
	from	operacao_estoque
	where	cd_operacao_estoque  = cd_operacao_estoque_p;
	exception
		when others then
			ie_entrada_saida_w := 'N';
	end;
end if;

/* controla a atualizacao do saldo de estoque*/

begin
qt_estoque_w		:= qt_estoque_p;
if (cd_acao_p = 2) then
	qt_estoque_w	:= qt_estoque_w * -1;
end if;
if (ie_entrada_saida_w = 'S') then
	qt_estoque_w	:= qt_estoque_w * -1;
end if;
end;

/*      Rotina para testar se existe estoque para o local e material especificado */

if (qt_estoque_w < 0) then
	select	coalesce(max(ie_permite_estoque_negativo),'S')
	into STRICT	ie_permite_estoque_negativo_w
	from	parametro_estoque
	where	cd_estabelecimento	= cd_estabelecimento_p;

	if (ie_permite_estoque_negativo_w = 'L') then
		select	coalesce(max(ie_permite_estoque_negativo),'S')
		into STRICT	ie_permite_estoque_negativo_w
		from	local_estoque
		where	cd_local_estoque = cd_local_estoque_p;
	end if;

	if (ie_permite_estoque_negativo_w in ('N','EE')) and (ie_atualiza_estoque_w = 'S') then
		select	coalesce(max(qt_estoque),0)
		into STRICT	qt_saldo_w
		from	saldo_estoque_lote
		where	cd_estabelecimento		= cd_estabelecimento_p
		and	cd_local_estoque		= cd_local_estoque_p
		and	cd_material		= cd_material_w
		and	dt_mesano_referencia	= dt_mesano_referencia_p
		and	nr_seq_lote		= nr_seq_lote_p;
		if (qt_saldo_w < abs(qt_estoque_w)) then
			select	substr(obter_desc_material(cd_material_w),1,255)
			into STRICT	ds_material_w
			;

			select	obter_desc_local_estoque(cd_local_estoque_p)
			into STRICT	ds_local_estoque_w
			;

			CALL wheb_mensagem_pck.exibir_mensagem_abort(265579,	'CD_MATERIAL=' || cd_material_p ||
									';DS_MATERIAL=' || ds_material_w ||
									';CD_LOCAL_ESTOQUE=' || cd_local_estoque_p ||
									';DS_LOCAL_ESTOQUE=' || ds_local_estoque_w);
			--Não existe saldo para o lote fornecedor do material: ' || chr(10) ||
			--cd_material_w || ' ' || ds_material_w || chr(10) ||
			--Local de estoque: ' || cd_local_estoque_p || ' ' || ds_local_estoque_w || chr(10));
		end if;
	end if;
end if;

/* atualizacao do saldo de estoque*/

if (ie_atualiza_estoque_w = 'S') then
	begin
	update	saldo_estoque_lote
	set	qt_estoque 		= (qt_estoque + qt_estoque_w),
		dt_atualizacao		= dt_atualizacao_w,
		nm_usuario		= nm_usuario_p
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	cd_local_estoque	= cd_local_estoque_p
	and	cd_material		= cd_material_w
	and	dt_mesano_referencia	= dt_mesano_referencia_p
	and	nr_seq_lote		= nr_seq_lote_p;
	if	NOT FOUND then
		ie_grava_saldo_w 	   := 'S';
	end if;
	exception
		when others then
			ie_erro_p := 'S';
	end;
end if;

/* buscar saldo anterior*/

if (ie_grava_saldo_w = 'S') then
	begin
	select	qt_estoque
	into STRICT	qt_estoque_saldo_w
	from	saldo_estoque_lote
	where	cd_estabelecimento		= cd_estabelecimento_p
	and	cd_local_estoque		= cd_local_estoque_p
	and	cd_material		= cd_material_w
	and	nr_seq_lote		= nr_seq_lote_p
	and	dt_mesano_referencia	= (
		SELECT	max(dt_mesano_referencia)
	        from	saldo_estoque_lote
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	cd_local_estoque    = cd_local_estoque_p
		and	cd_material	= cd_material_w
		and	nr_seq_lote	= nr_seq_lote_p
		and	dt_mesano_referencia < dt_mesano_referencia_p);
	exception
		when no_data_found then
		qt_estoque_saldo_w := 0;
	end;
end if;

/* gravar saldo atual*/

if (ie_grava_saldo_w = 'S') then
begin
insert	into saldo_estoque_lote(
	cd_estabelecimento,
	cd_local_estoque,
	cd_material,
	dt_mesano_referencia,
	nr_seq_lote,
	qt_estoque,
	dt_atualizacao,
	nm_usuario)
values (	cd_estabelecimento_p,
	cd_local_estoque_p,
	cd_material_w,
	dt_mesano_referencia_p,
	nr_seq_lote_p,
	qt_estoque_saldo_w + qt_estoque_w,
	dt_atualizacao_w,
	nm_usuario_p);
exception
	when others then
        	ie_erro_p := 'S';
end;

end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_saldo_lote ( cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, dt_mesano_referencia_p timestamp, nr_seq_lote_p bigint, cd_operacao_estoque_p bigint, qt_estoque_p bigint, cd_acao_p text, nm_usuario_p text, ie_erro_p INOUT text) FROM PUBLIC;

