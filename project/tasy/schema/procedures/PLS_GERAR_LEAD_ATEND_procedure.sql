-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lead_atend ( nr_seq_atendimento_p bigint, nr_seq_evento_atend_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
nm_pessoa_fisica_w		varchar(255);
nr_ddi_telefone_w		varchar(3);
nr_ddd_telefone_w		varchar(3);
nr_telefone_w			varchar(40);
nr_telefone_adic_w		varchar(40);
cd_cep_w			varchar(15);
nr_endereco_w			integer;
ds_bairro_w			varchar(40);
ds_complemento_w		varchar(40);
cd_municipio_ibge_w		varchar(6);
sg_estado_w			compl_pessoa_fisica.sg_estado%type;
ds_email_w			varchar(255);
nr_cpf_w			varchar(11);
cd_cgc_w			varchar(14);
ie_tipo_pessoa_w		varchar(3);
ds_endereco_w			varchar(100);
cd_pessoa_fisica_w		varchar(10);
nr_seq_agente_motivador_w	bigint;
qt_registros_w			bigint;
dt_nascimento_w			timestamp;
qt_idade_w			bigint;
qt_pessoas_w			bigint;
ds_erro_w			varchar(255);
nr_celular_w			varchar(40);
ie_consiste_telefone_w		varchar(1);


BEGIN 
 
ie_consiste_telefone_w := coalesce(obter_valor_param_usuario(1237, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'S');
 
select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN CASE WHEN coalesce(cd_cgc::text, '') = '' THEN 'C'  ELSE 'PJ' END   ELSE 'PF' END , 
	nr_seq_agente_motivador 
into STRICT	ie_tipo_pessoa_w, 
	nr_seq_agente_motivador_w 
from	pls_atendimento 
where	nr_sequencia = nr_seq_atendimento_p;
 
if (ie_tipo_pessoa_w = 'PF') then 
	select	count(*) 
	into STRICT	qt_registros_w 
	from	compl_pessoa_fisica	c, 
		pessoa_fisica		b, 
		pls_atendimento		a 
	where	a.nr_sequencia		= nr_seq_atendimento_p 
	and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica 
	and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica 
	and	c.ie_tipo_complemento	= 1;
	 
	select	distinct a.cd_pessoa_fisica, 
		substr(obter_nome_pf(a.cd_pessoa_fisica),1,60), 
		coalesce(c.nr_ddi_telefone,' '), 
		coalesce(c.nr_ddd_telefone,' '), 
		coalesce(c.nr_telefone,' '), 
		coalesce(c.cd_cep,''), 
		coalesce(c.nr_endereco,0), 
		substr(coalesce(c.ds_bairro,''),1,40), 
		coalesce(c.ds_complemento,''), 
		c.cd_municipio_ibge, 
		coalesce(c.sg_estado,''), 
		coalesce(c.ds_email,''), 
		coalesce(b.nr_cpf,0), 
		c.ds_endereco, 
		b.dt_nascimento, 
		b.nr_telefone_celular, 
		c.ds_fone_adic 
	into STRICT	cd_pessoa_fisica_w, 
		nm_pessoa_fisica_w, 
		nr_ddi_telefone_w, 
		nr_ddd_telefone_w, 
		nr_telefone_w, 
		cd_cep_w, 
		nr_endereco_w, 
		ds_bairro_w, 
		ds_complemento_w, 
		cd_municipio_ibge_w, 
		sg_estado_w, 
		ds_email_w, 
		nr_cpf_w, 
		ds_endereco_w, 
		dt_nascimento_w, 
		nr_celular_w, 
		nr_telefone_adic_w 
	FROM pls_atendimento a, pessoa_fisica b
LEFT OUTER JOIN compl_pessoa_fisica c ON (b.cd_pessoa_fisica = c.cd_pessoa_fisica)
WHERE a.nr_sequencia		= nr_seq_atendimento_p and a.cd_pessoa_fisica	= b.cd_pessoa_fisica  and ((qt_registros_w	= 0) 
	or	((qt_registros_w	<> 0) 
	and (c.ie_tipo_complemento = 1 or coalesce(c.ie_tipo_complemento::text, '') = '')));
elsif (ie_tipo_pessoa_w = 'PJ') then 
	select	a.cd_cgc, 
		substr(obter_nome_pf_pj(null,a.cd_cgc),1,60), 
		coalesce(b.nr_ddi_telefone,' '), 
		coalesce(b.nr_ddd_telefone,' '), 
		coalesce(b.nr_telefone,' '), 
		coalesce(b.cd_cep,''), 
		coalesce(b.ds_bairro,''), 
		coalesce(b.ds_complemento,''), 
		b.cd_municipio_ibge, 
		coalesce(b.sg_estado,''), 
		coalesce(b.ds_email,''), 
		ds_endereco 
	into STRICT	cd_cgc_w, 
		nm_pessoa_fisica_w, 
		nr_ddi_telefone_w, 
		nr_ddd_telefone_w, 
		nr_telefone_w, 
		cd_cep_w, 
		ds_bairro_w, 
		ds_complemento_w, 
		cd_municipio_ibge_w, 
		sg_estado_w, 
		ds_email_w, 
		ds_endereco_w 
	from	pessoa_juridica b, 
		pls_atendimento	a 
	where	a.nr_sequencia = nr_seq_atendimento_p 
	and	a.cd_cgc = b.cd_cgc;
	 
	begin 
	select	coalesce(b.nr_endereco,'') 
	into STRICT	nr_endereco_w 
	from	pessoa_juridica	b, 
		pls_atendimento	a 
	where	a.nr_sequencia	= nr_seq_atendimento_p 
	and	a.cd_cgc	= b.cd_cgc;
	exception 
	when others then 
		nr_endereco_w := null;
	end;
elsif (ie_tipo_pessoa_w = 'C') then 
	select	coalesce(nm_contato,''), 
		'', 
		'', 
		coalesce(nr_telefone,''), 
		'', 
		'', 
		'', 
		'', 
		'', 
		'', 
		'' 
	into STRICT	nm_pessoa_fisica_w, 
		nr_ddi_telefone_w, 
		nr_ddd_telefone_w, 
		nr_telefone_w, 
		cd_cep_w, 
		ds_bairro_w, 
		ds_complemento_w, 
		cd_municipio_ibge_w, 
		sg_estado_w, 
		ds_email_w, 
		ds_endereco_w 
	from	pls_atendimento	a 
	where	nr_sequencia	= nr_seq_atendimento_p;
end if;
 
/*aaschlote 10/06/2011 OS - 326278*/
 
if (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') then 
	qt_idade_w	:= 	obter_idade(dt_nascimento_w, clock_timestamp(),'A');
else 
	qt_idade_w	:= 0;
end if;
 
-- Esta parte foi comentada no dia 23/07/2015 porque esta rotina (PLS_GERAR_LEAD_ATEND) não está mais sendo utilizada e esta parte estava deixando a rotina inválida no banco. 
/*if	(ie_consiste_telefone_w in ('S','A')) then 
	pls_consistir_solicitacao_lead(0,nr_telefone_w, nr_celular_w, nr_telefone_adic_w, dt_nascimento_w, null, null, null, null, null, nm_usuario_p, cd_estabelecimento_p, qt_pessoas_w, ds_erro_w); 
	 
	if	(ds_erro_w is not null) then 
		wheb_mensagem_pck.exibir_mensagem_abort( 240980, 'DS_ERRO=' || ds_erro_w ); 
	end if; 
end if;*/
 
 
insert into	pls_solicitacao_comercial(nr_sequencia, nm_pessoa_fisica, nr_ddi, 
	nr_ddd, nr_telefone, dt_solicitacao, 
	ie_tipo_contratacao, nr_seq_agente_motivador, nr_atend_pls, 
	nm_usuario, dt_atualizacao, nm_usuario_nrec, 
	dt_atualizacao_nrec, cd_estabelecimento, ie_status, 
	cd_cep, nr_endereco, ds_bairro, 
	ds_complemento, cd_municipio_ibge, sg_uf_municipio, 
	ds_email, nr_cpf, cd_cgc, 
	nr_seq_evento_atend,ds_endereco,cd_pf_vinculado,ie_origem_solicitacao, 
	dt_nascimento,qt_idade, ie_etapa_solicitacao) 
values (nextval('pls_solicitacao_comercial_seq'), nm_pessoa_fisica_w, nr_ddi_telefone_w, 
	nr_ddd_telefone_w, nr_telefone_w, clock_timestamp(), 
	'I', nr_seq_agente_motivador_w, nr_seq_atendimento_p, 
	nm_usuario_p, clock_timestamp(), nm_usuario_p, 
	clock_timestamp(), cd_estabelecimento_p, 'PE', 
	cd_cep_w, nr_endereco_w, ds_bairro_w, 
	ds_complemento_w, cd_municipio_ibge_w, sg_estado_w, 
	ds_email_w, nr_cpf_w, cd_cgc_w, 
	nr_seq_evento_atend_p,ds_endereco_w,cd_pessoa_fisica_w,'C', 
	dt_nascimento_w,qt_idade_w, 'T');
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lead_atend ( nr_seq_atendimento_p bigint, nr_seq_evento_atend_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

