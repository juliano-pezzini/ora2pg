-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lanc_prog_indicacao ( nr_seq_proposta_p bigint, ie_parcelas_pagas_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segurado_w	bigint;
nr_seq_bonificacao_w	bigint;
dt_referencia_w		timestamp;
nr_seq_indicacao_w	bigint;
qt_meses_bonificacao_w	bigint;
qt_interv_meses_w	bigint;
dt_referencia_lanc_w	timestamp;

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.nr_seq_segurado,
		b.nr_seq_bonificacao,
		coalesce(b.qt_meses_bonificacao,0)
	from	pls_proposta_beneficiario	a,
		pls_indicacao_venda		b,
		pls_proposta_adesao		c
	where	b.nr_seq_segurado_prop	= a.nr_sequencia
	and	a.nr_seq_proposta	= c.nr_sequencia
	and	(b.nr_seq_segurado IS NOT NULL AND b.nr_seq_segurado::text <> '')
	and	c.nr_sequencia		= nr_seq_proposta_p
	and	(((ie_parcelas_pagas_p = 'N') and (coalesce(b.qt_parcela_paga::text, '') = '')) or (ie_parcelas_pagas_p = 'S' AND b.qt_parcela_paga IS NOT NULL AND b.qt_parcela_paga::text <> ''))
	group by	b.nr_seq_bonificacao,
			b.nr_seq_segurado,
			b.nr_sequencia,
			b.qt_meses_bonificacao
	
union all

	SELECT	b.nr_sequencia,
		b.nr_seq_segurado,
		b.nr_seq_bonificacao,
		coalesce(b.qt_meses_bonificacao,0)
	from	pls_proposta_beneficiario	a,
		pls_indicacao_venda		b,
		pls_proposta_adesao		c
	where	b.nr_seq_proposta	= c.nr_sequencia
	and	a.nr_seq_proposta	= c.nr_sequencia
	and	(b.nr_seq_segurado IS NOT NULL AND b.nr_seq_segurado::text <> '')
	and	c.nr_sequencia		= nr_seq_proposta_p
	and	not exists (select	1
				from	pls_proposta_beneficiario	x,
					pls_indicacao_venda		y,
					pls_proposta_adesao		z
				where	y.nr_seq_segurado_prop	= x.nr_sequencia
				and	x.nr_seq_proposta	= z.nr_sequencia
				and	z.nr_sequencia		= nr_seq_proposta_p
				and	x.nr_sequencia		= a.nr_sequencia)
	and	(((ie_parcelas_pagas_p = 'N') and (coalesce(b.qt_parcela_paga::text, '') = '')) or (ie_parcelas_pagas_p = 'S' AND b.qt_parcela_paga IS NOT NULL AND b.qt_parcela_paga::text <> ''))
	group by	b.nr_seq_bonificacao,
			b.nr_seq_segurado,
			b.nr_sequencia,
			b.qt_meses_bonificacao;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_indicacao_w,
	nr_seq_segurado_w,
	nr_seq_bonificacao_w,
	qt_meses_bonificacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	begin
	select	add_months(max(c.dt_mesano_referencia),1)
	into STRICT	dt_referencia_w
	from	pls_mensalidade_segurado	a,
		pls_mensalidade			b,
		pls_lote_mensalidade		c
	where	a.nr_seq_mensalidade	= b.nr_sequencia
	and	b.nr_seq_lote		= c.nr_sequencia
	and	a.nr_seq_segurado	= nr_seq_segurado_w;
	exception
	when others then
		dt_referencia_w	:= trunc(add_months(clock_timestamp(),1), 'month');
	end;

	if (coalesce(dt_referencia_w::text, '') = '') then
		dt_referencia_w	:= trunc(add_months(clock_timestamp(),1), 'month');
	end if;

	qt_interv_meses_w	:= 0;
	while(qt_meses_bonificacao_w > 0) or (qt_interv_meses_w = 0) loop
		dt_referencia_lanc_w	:= add_months(dt_referencia_w,qt_interv_meses_w);

		insert	into	pls_segurado_mensalidade(	nr_sequencia, nr_seq_segurado, cd_estabelecimento,
				dt_referencia, ie_tipo_item, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_bonificacao, ie_situacao, ie_tipo_lanc,
				nr_seq_indicacao_venda)
			values (	nextval('pls_segurado_mensalidade_seq'), nr_seq_segurado_w, cd_estabelecimento_p,
				dt_referencia_lanc_w, '14', clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_bonificacao_w, 'A', 'B',
				nr_seq_indicacao_w);
		qt_meses_bonificacao_w	:= qt_meses_bonificacao_w - 1;
		qt_interv_meses_w	:= qt_interv_meses_w + 1;
	end loop;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lanc_prog_indicacao ( nr_seq_proposta_p bigint, ie_parcelas_pagas_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

