-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_recalcular_vencimentos ( nr_seq_pag_prestador_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_parametro_w			varchar(1);
nr_titulo_w			bigint;
qt_baixas_w			bigint;
nr_lote_contabil_w		bigint;
nr_seq_vencimento_w		bigint;
nr_seq_lote_w			bigint;
qt_sem_fatura_w			bigint;
cd_estabelecimento_w		smallint;
vl_titulo_w			double precision;
vl_saldo_titulo_w		double precision;
ie_data_lote_prod_med_w		pls_parametro_contabil.ie_data_lote_prod_med%type;
nr_lote_contabilizado_w		lote_contabil.nr_lote_contabil%type;
nr_sequencia_w			pls_pagamento_prestador.nr_sequencia%type;
vl_liquido_w			pls_pag_prest_vencimento.vl_liquido%type;

C01 CURSOR FOR 
	SELECT	nr_titulo 
	from	pls_pag_prest_vencimento 
	where	nr_seq_pag_prestador	= nr_seq_pag_prestador_p 
	and	(nr_titulo IS NOT NULL AND nr_titulo::text <> '');


BEGIN 
 
select	max(nr_seq_lote), 
	max(nr_sequencia) 
into STRICT	nr_seq_lote_w, 
	nr_sequencia_w 
from	pls_pagamento_prestador 
where	nr_sequencia	= nr_seq_pag_prestador_p;
 
select	max(coalesce(ie_data_lote_prod_med,'C')) 
into STRICT	ie_data_lote_prod_med_w 
from	pls_parametro_contabil 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
if (ie_data_lote_prod_med_w = 'T') then	 
	select	max(coalesce(nr_lote_contabil,0)) nr_lote_contabil 
	into STRICT	nr_lote_contabilizado_w 
	from	pls_lote_pagamento 
	where	nr_sequencia = nr_seq_lote_w 
	and	coalesce(nr_lote_contabil,0) <> 0;
	 
	if (coalesce(nr_lote_contabilizado_w, 0) > 0) then		 
		/* O pagamento de produção já foi contabilizado no lote #@NR_LOTE_CONTABILIZADO#@. */
 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(326581, 'NR_LOTE_CONTABILIZADO=' || nr_lote_contabilizado_w);	
	end if;
end if;
 
open C01;
loop 
fetch C01 into	 
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	a.vl_titulo - coalesce(obter_dados_tit_pagar(a.nr_titulo,'VTA'),0), 
		a.vl_saldo_titulo 
	into STRICT	vl_titulo_w, 
		vl_saldo_titulo_w 
	from	titulo_pagar a 
	where	a.nr_titulo	= nr_titulo_w;
	 
	select	max(nr_lote_contabil) 
	into STRICT	nr_lote_contabil_w 
	from	titulo_pagar 
	where	nr_titulo	= nr_titulo_w;
	 
	if (vl_titulo_w <> vl_saldo_titulo_w) or 
		(nr_lote_contabil_w IS NOT NULL AND nr_lote_contabil_w::text <> '' AND nr_lote_contabil_w <> 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(215374,'NR_TITULO_W=' || nr_titulo_w);
	end if;
	end;
end loop;
close C01;
 
CALL pls_cancelar_tit_pgto_prest(nr_seq_pag_prestador_p, 'S', clock_timestamp(), nm_usuario_p);
 
update pls_conta_medica_resumo a 
set	nr_seq_prest_venc_trib  = NULL 
where	exists (SELECT	1 
		from	pls_pag_prest_vencimento y, 
			pls_pag_prest_venc_trib x 
		where	x.nr_seq_vencimento	= y.nr_sequencia 
		and	y.nr_seq_pag_prestador	= nr_seq_pag_prestador_p 
		and	x.nr_sequencia		= a.nr_seq_prest_venc_trib) 
and	a.ie_situacao = 'A';
 
delete	from pls_pag_venc_trib_prev a 
where	exists (SELECT	1 
		from	pls_pag_prest_vencimento x 
		where	x.nr_sequencia	= a.nr_seq_vencimento 
		and	x.nr_seq_pag_prestador = nr_seq_pag_prestador_p);
		 
delete	from pls_pag_prest_venc_trib a 
where	exists (SELECT	1 
		from	pls_pag_prest_vencimento x 
		where	x.nr_sequencia	= a.nr_seq_vencimento 
		and	x.nr_seq_pag_prestador = nr_seq_pag_prestador_p);
		 
delete	from pls_pag_prest_vencimento a 
where	a.nr_seq_pag_prestador	= nr_seq_pag_prestador_p;
 
CALL pls_gerar_venc_pag_prest(nr_seq_pag_prestador_p, cd_estabelecimento_p, nm_usuario_p);
 
select	count(1) 
into STRICT	qt_sem_fatura_w 
from	pls_pagamento_prestador 
where	nr_seq_lote	= nr_seq_lote_w 
and	coalesce(nr_nota_fiscal::text, '') = ''  LIMIT 1;
 
ie_parametro_w	:= coalesce(Obter_Valor_Param_Usuario(1282, 1, Obter_Perfil_Ativo, nm_usuario_p, 0), 'S');
 
if (coalesce(qt_sem_fatura_w,0) <> 0)	and (coalesce(ie_parametro_w,'S')	= 'N') 	then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(215375);
end if;
 
CALL pls_gerar_titulo_venc_lote_pag(nr_seq_pag_prestador_p, nm_usuario_p);
 
select	sum(coalesce(vl_liquido,0)) 
into STRICT	vl_liquido_w 
from	pls_pag_prest_vencimento 
where	nr_seq_pag_prestador	= nr_seq_pag_prestador_p;
 
update	pls_pagamento_prestador 
set	vl_pagamento	= vl_liquido_w 
where	nr_sequencia	= nr_seq_pag_prestador_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_recalcular_vencimentos ( nr_seq_pag_prestador_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

