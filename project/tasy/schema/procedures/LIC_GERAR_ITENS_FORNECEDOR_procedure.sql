-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lic_gerar_itens_fornecedor ( cd_estabelecimento_p bigint, nr_sequencia_p bigint, ie_opcao_p bigint, nr_seq_lic_item_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* ie_opcao_p
0 = Somente os itens que foram selecionados na lista
1 = Todos os itens da licitação
2 = Somente os itens da regra do fornecedor*/
nr_seq_licitacao_w			bigint;
nr_seq_lic_item_w			integer;
nr_seq_lic_item_ww			integer;
cd_material_w			integer;
qt_item_w			double precision;
cd_material_ww			integer;
qt_item_ww			double precision;
qt_existe_w			bigint;
nr_seq_parecer_w			bigint;
nr_seq_reg_lic_fornec_w		bigint;
cd_cgc_fornec_w			varchar(14);
nr_lote_compra_w			varchar(80);

c01 CURSOR FOR
SELECT	nr_seq_lic_item,
	cd_material,
	qt_item,
	nr_lote_compra
from	reg_lic_item
where	nr_seq_licitacao	= nr_seq_licitacao_w
and	ie_opcao_p	= 1
and	coalesce(nr_seq_lote::text, '') = ''

union all

select	nr_seq_lic_item,
	cd_material,
	qt_item,
	nr_lote_compra
from	reg_lic_item
where	nr_seq_licitacao	= nr_seq_licitacao_w
and	ie_opcao_p	= 2
and	coalesce(nr_seq_lote::text, '') = ''
and	obter_se_item_regra_fornec(cd_estabelecimento_p, cd_cgc_fornec_w, cd_material) = 'S';

c02 CURSOR FOR
SELECT	cd_material,
	qt_item,
	nr_seq_lic_item
from	reg_lic_item
where	nr_seq_licitacao = nr_seq_licitacao_w
and	nr_lote_compra = nr_lote_compra_w
and	(cd_material IS NOT NULL AND cd_material::text <> '');


BEGIN

select	nr_seq_licitacao,
	cd_cgc_fornec
into STRICT	nr_seq_licitacao_w,
	cd_cgc_fornec_w
from	reg_lic_fornec
where	nr_sequencia = nr_sequencia_p;

if (ie_opcao_p = 0) then
	begin

	select	max(cd_material),
		max(qt_item),
		max(nr_lote_compra)
	into STRICT	cd_material_w,
		qt_item_w,
		nr_lote_compra_w
	from	reg_lic_item
	where	nr_seq_licitacao	= nr_seq_licitacao_w
	and	nr_seq_lic_item	= nr_seq_lic_item_p;

	select	nextval('reg_lic_item_fornec_seq')
	into STRICT	nr_seq_reg_lic_fornec_w
	;

	insert into reg_lic_item_fornec(
		nr_sequencia,				dt_atualizacao,			nm_usuario,
		nr_seq_fornec,				nr_seq_lic_item,			nr_seq_parecer,
		ie_vencedor,				vl_item,				vl_original,
		dt_atualizacao_nrec,			nm_usuario_nrec,			cd_material,
		nr_seq_licitacao,				ie_qualificado,			ie_qualif_lance_fornec,
		qt_item)
	values (	nr_seq_reg_lic_fornec_w,			clock_timestamp(),				nm_usuario_p,
		nr_sequencia_p,				nr_seq_lic_item_p,			'',
		'N',					0,				0,
		clock_timestamp(),					nm_usuario_p,			cd_material_w,
		nr_seq_licitacao_w,				'S',				'S',
		qt_item_w);

	if (coalesce(cd_material_w::text, '') = '') and (nr_lote_compra_w IS NOT NULL AND nr_lote_compra_w::text <> '') then

		open C02;
		loop
		fetch C02 into
			cd_material_ww,
			qt_item_ww,
			nr_seq_lic_item_ww;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			insert into reg_lic_item_fornec_lote(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_lic_item_fornec,
				nr_lote_compra,
				cd_material,
				qt_item,
				vl_item,
				nr_seq_licitacao,
				nr_seq_lic_item)
			values (	nextval('reg_lic_item_fornec_lote_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_reg_lic_fornec_w,
				nr_lote_compra_w,
				cd_material_ww,
				qt_item_ww,
				0,
				nr_seq_licitacao_w,
				nr_seq_lic_item_ww);

			end;
		end loop;
		close C02;

	end if;

	end;
elsif (ie_opcao_p in (1,2)) then
	begin
	open C01;
	loop
	fetch C01 into
		nr_seq_lic_item_w,
		cd_material_w,
		qt_item_w,
		nr_lote_compra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	count(*)
		into STRICT	qt_existe_w
		from	reg_lic_item_fornec
		where	nr_seq_licitacao	= nr_seq_licitacao_w
		and	nr_seq_lic_item	= nr_seq_lic_item_w
		and	nr_seq_fornec	= nr_sequencia_p;

		if (qt_existe_w = 0) then

			select	nextval('reg_lic_item_fornec_seq')
			into STRICT	nr_seq_reg_lic_fornec_w
			;

			insert into reg_lic_item_fornec(
				nr_sequencia,				dt_atualizacao,			nm_usuario,
				nr_seq_fornec,				nr_seq_lic_item,			nr_seq_parecer,
				ie_vencedor,				vl_item,				vl_original,
				dt_atualizacao_nrec,			nm_usuario_nrec,			cd_material,
				nr_seq_licitacao,				ie_qualificado,			ie_qualif_lance_fornec,
				qt_item)
			values (	nr_seq_reg_lic_fornec_w,			clock_timestamp(),				nm_usuario_p,
				nr_sequencia_p,				nr_seq_lic_item_w,			'',
				'N',					0,				0,
				clock_timestamp(),					nm_usuario_p,			cd_material_w,
				nr_seq_licitacao_w,				'S',				'S',
				qt_item_w);

			if (coalesce(cd_material_w::text, '') = '') and (nr_lote_compra_w IS NOT NULL AND nr_lote_compra_w::text <> '') then

				open C02;
				loop
				fetch C02 into
					cd_material_ww,
					qt_item_ww,
					nr_seq_lic_item_ww;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin

					insert into reg_lic_item_fornec_lote(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_lic_item_fornec,
						nr_lote_compra,
						cd_material,
						qt_item,
						vl_item,
						nr_seq_licitacao,
						nr_seq_lic_item)
					values (	nextval('reg_lic_item_fornec_lote_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_reg_lic_fornec_w,
						nr_lote_compra_w,
						cd_material_ww,
						qt_item_ww,
						0,
						nr_seq_licitacao_w,
						nr_seq_lic_item_ww);

					end;
				end loop;
				close C02;
			end if;
		end if;
		end;
	end loop;
	close C01;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lic_gerar_itens_fornecedor ( cd_estabelecimento_p bigint, nr_sequencia_p bigint, ie_opcao_p bigint, nr_seq_lic_item_p bigint, nm_usuario_p text) FROM PUBLIC;

