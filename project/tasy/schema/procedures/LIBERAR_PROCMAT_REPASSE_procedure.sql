-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_procmat_repasse ( nr_seq_proc_repasse_p bigint, nr_seq_mat_repasse_p bigint, ie_status_p text, vl_liberado_p bigint, ie_status_pend_p text, dt_liberacao_p timestamp, ds_observacao_p text, nm_usuario_p text, nr_repasse_terceiro_p bigint) AS $body$
DECLARE


/*
Tipo Liberacao
L - Liberado pelo usuário
G - Glosado	
D - Auditado
*/
ie_status_w		varchar(01);
vl_repasse_w		double precision;
vl_repasse_ww		double precision;
nr_seq_proc_rep_novo_w	bigint := null;
nr_seq_mat_rep_novo_w	bigint := null;
ie_glosa_parcial_w		varchar(1);
vl_liberado_w		double precision;
ie_rep_prot_def_w	varchar(1);
ie_status_protocolo_w	bigint;
cont_w			bigint;
nr_seq_terceiro_w	bigint;
nr_seq_terc_w	bigint;


BEGIN
ie_rep_prot_def_w := Obter_Param_Usuario(89, 151, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_rep_prot_def_w);

if (coalesce(nr_repasse_terceiro_p,0) <> 0) then
	select nr_seq_terceiro
	into STRICT nr_seq_terc_w
	from repasse_terceiro
	where nr_repasse_terceiro = nr_repasse_terceiro_p;
end if;

if (coalesce(ie_rep_prot_def_w,'S') = 'N') then
	if (nr_seq_proc_repasse_p IS NOT NULL AND nr_seq_proc_repasse_p::text <> '') and (nr_seq_proc_repasse_p > 0) then
		begin
		select	count(*)
		into STRICT	cont_w
		from	protocolo_convenio d,
			conta_paciente c,
			procedimento_paciente b,
			procedimento_repasse a
		where	a.nr_seq_procedimento	= b.nr_sequencia
		and	b.nr_interno_conta	= c.nr_interno_conta
		and	c.nr_seq_protocolo	= d.nr_seq_protocolo
		and	a.nr_sequencia		= nr_seq_proc_repasse_p;
		end;
	elsif (nr_seq_mat_repasse_p IS NOT NULL AND nr_seq_mat_repasse_p::text <> '') and (nr_seq_mat_repasse_p > 0) then
		begin
		select	count(*)
		into STRICT	cont_w
		from	protocolo_convenio d,
			conta_paciente c,
			material_atend_paciente b,
			material_repasse a
		where	a.nr_seq_material	= b.nr_sequencia
		and	b.nr_interno_conta	= c.nr_interno_conta
		and	c.nr_seq_protocolo	= d.nr_seq_protocolo	
		and	a.nr_sequencia		= nr_seq_mat_repasse_p;
		end;
	end if;
	
	if (coalesce(cont_w,0)	= 0) then
		/*A conta paciente deste repasse não está em um protocolo.  Verifique o parâmetro [151].*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(244796);
	end if;
	
end if;

vl_liberado_w	:= vl_liberado_p;
ie_glosa_parcial_w	:= 'N';

if (ie_status_p <> 'G') and (vl_liberado_w = 0 ) then
	/*Repasse não pode ser liberado com valor zerado !*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(183631);
end if;

if (nr_seq_proc_repasse_p IS NOT NULL AND nr_seq_proc_repasse_p::text <> '') and (nr_seq_proc_repasse_p > 0) then
	begin
	begin
	select	coalesce(ie_status,'A'),
		vl_repasse,
		nr_seq_terceiro
	into STRICT	ie_status_w,
		vl_repasse_w,
		nr_seq_terceiro_w
	from	procedimento_repasse
	where	nr_sequencia	= nr_seq_proc_repasse_p;
	exception
		when no_data_found then
			/*'Repasse não encontrado !'*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(183636);
	end;

	if (nr_seq_terc_w <> nr_seq_terceiro_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1075680, 'NR_SEQ_REPASSE_P='||nr_repasse_terceiro_p);
	end if;

	if (ie_status_p = 'G') then
		vl_repasse_ww	:= vl_repasse_w;
		if (vl_liberado_w > 0 ) then
			ie_glosa_parcial_w		:= 'S';
			vl_repasse_ww		:= vl_liberado_w;
			vl_liberado_w		:= 0;
		end if;
	end if;

	if (ie_status_w = 'A') or (ie_status_w = 'U') or (ie_status_w = 'D') then
		update	procedimento_repasse
		set	vl_liberado		= vl_liberado_w,
			vl_repasse		= CASE WHEN ie_status_p='G' THEN  vl_repasse_ww  ELSE CASE WHEN greatest(vl_repasse, vl_liberado_w)=vl_repasse THEN  vl_liberado_w  ELSE vl_repasse END  END ,
			ie_status		= ie_status_p,
			dt_liberacao		= dt_liberacao_p,
			nm_usuario_lib		= nm_usuario_p,
			ds_observacao		= substr(ds_observacao_p,1,255),
			nr_repasse_terceiro	= coalesce(nr_repasse_terceiro, nr_repasse_terceiro_p)
		where	nr_sequencia		= nr_seq_proc_repasse_p;

	elsif (ie_status_w = 'E') then

		update	procedimento_repasse
		set	vl_liberado		= vl_liberado_w,
			vl_repasse		= vl_repasse,
			ie_status		= ie_status_p,
			dt_liberacao		= dt_liberacao_p,
			nm_usuario_lib		= nm_usuario_p,
			ds_observacao		= substr(ds_observacao_p,1,255),
			nr_repasse_terceiro	= coalesce(nr_repasse_terceiro, nr_repasse_terceiro_p)
		where	nr_sequencia		= nr_seq_proc_repasse_p;

	end if;

	end;
elsif (nr_seq_mat_repasse_p IS NOT NULL AND nr_seq_mat_repasse_p::text <> '') and (nr_seq_mat_repasse_p > 0) then
	begin

	begin
	select	coalesce(ie_status,'A'),
		vl_repasse,
		nr_seq_terceiro
	into STRICT	ie_status_w,
		vl_repasse_w,
		nr_seq_terceiro_w
	from	material_repasse
	where	nr_sequencia	= nr_seq_mat_repasse_p;
	exception
		when no_data_found then
			/*Repasse não encontrado !*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(183636);		
	end;

	if (nr_seq_terc_w <> nr_seq_terceiro_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1075680, 'NR_SEQ_REPASSE_P='||nr_repasse_terceiro_p);
	end if;

	if (ie_status_p	= 'G') then
		vl_repasse_ww		:= vl_repasse_w;
		if (vl_liberado_w	> 0 ) then
			ie_glosa_parcial_w	:= 'S';
			vl_repasse_ww		:= vl_liberado_w;
			vl_liberado_w		:= 0;
		end if;
	end if;

	if (ie_status_w = 'A') or (ie_status_w = 'U') or (ie_status_w = 'D') then
		update	material_repasse
		set	vl_liberado		= vl_liberado_w,
			vl_repasse		= CASE WHEN ie_status_p='G' THEN  vl_repasse_ww  ELSE CASE WHEN greatest(vl_repasse, vl_liberado_w)=vl_repasse THEN  vl_liberado_w  ELSE vl_repasse END  END ,
			ie_status		= ie_status_p,
			dt_liberacao		= dt_liberacao_p,
			nm_usuario_lib		= nm_usuario_p,
			ds_observacao		= substr(ds_observacao_p,1,255),
			nr_repasse_terceiro	= coalesce(nr_Repasse_terceiro, nr_Repasse_terceiro_p)
		where	nr_sequencia		= nr_seq_mat_repasse_p;	

	elsif (ie_status_w = 'E') then
		update	material_repasse
		set	vl_liberado		= vl_liberado_w,
			vl_repasse		= CASE WHEN ie_status_p='G' THEN  vl_repasse_ww  ELSE vl_liberado_w END ,
			ie_status		= ie_status_p,
			dt_liberacao		= dt_liberacao_p,
			nm_usuario_lib		= nm_usuario_p,
			ds_observacao		= substr(ds_observacao_p,1,255),
			nr_repasse_terceiro	= coalesce(nr_repasse_terceiro, nr_repasse_terceiro_p)
		where	nr_sequencia		= nr_seq_mat_repasse_p;		

	end if;

	end;
end if;

vl_liberado_w	:= vl_liberado_p;

if	((coalesce(nr_seq_proc_repasse_p,0) > 0) or (coalesce(nr_seq_mat_repasse_p,0) > 0)) and (vl_repasse_w > vl_liberado_w) and
	((ie_status_p <> 'G') or (ie_glosa_parcial_w = 'S')) then
	begin
	SELECT * FROM Desdobrar_ProcMat_Repasse(nr_seq_proc_repasse_p, nr_seq_mat_repasse_p, ie_status_pend_p, vl_repasse_w - vl_liberado_w, nm_usuario_p, nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_w) INTO STRICT nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_w;
	exception
		when others then
			/*Erro ao tentar desdobrar repasse!*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(182138,'SQLERRM_P='||sqlerrm);
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_procmat_repasse ( nr_seq_proc_repasse_p bigint, nr_seq_mat_repasse_p bigint, ie_status_p text, vl_liberado_p bigint, ie_status_pend_p text, dt_liberacao_p timestamp, ds_observacao_p text, nm_usuario_p text, nr_repasse_terceiro_p bigint) FROM PUBLIC;

