-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_solucao_rotina ( ds_lista_solucao_p text, cd_protocolo_p bigint default null, nr_seq_solucao_p bigint default null, nr_sequencia_p bigint default null, cd_intervalo_p text default null, qt_dosagem_p bigint DEFAULT NULL, ie_tipo_dosagem_p text DEFAULT NULL, nr_prescricao_p bigint DEFAULT NULL, nm_usuario_p text DEFAULT NULL, nr_etapas_p bigint DEFAULT NULL, cd_funcao_p bigint DEFAULT NULL, ds_orientacao_p text DEFAULT NULL, qt_tempo_aplicacao_p text default null, qt_tempo_hora_p text DEFAULT NULL, qt_tempo_minuto_p text DEFAULT NULL) AS $body$
DECLARE


nr_sequencia_w				bigint;
nr_seq_solucao_w			integer;
ie_tipo_dosagem_w			varchar(3);
qt_dosagem_w				double precision;
qt_solucao_total_w			double precision;
qt_volume_sol_w				double precision;
qt_tempo_aplicacao_w		double precision;
Nr_Etapa_W					smallint;
qt_volume_w					double precision;
nr_etapas_w					smallint;
nr_intervalos_w				smallint;
nr_etapas_sol_w				smallint;
ie_bomba_infusao_w			varchar(1);
ie_solucao_especial_w		varchar(1);
VarRegraPrimHorarioSol_w    varchar(15);
nr_agrupamento_w			double precision;
nr_agrup_solucao_w			double precision;
ie_esquema_alternado_w		varchar(1);
ie_calculo_aut_w			varchar(1);
ie_acm_w					varchar(1);
ds_justificativa_w			varchar(2000);
ds_horarios_ww				varchar(2000);
ie_gera_horarios_ACM_w		varchar(1);
ie_gera_horarios_SNE_w		varchar(1);
ds_horarios_2w				varchar(255);
qt_hora_fase_w				double precision;
qt_itens_w					bigint;
qt_min_intervalo_w			bigint;
ds_horarios_w				varchar(255);
dt_prescricao_w				timestamp;
dt_primeiro_horario_w		timestamp;
hr_primeiro_hoario_w		varchar(5);
ie_tipo_sol_w				varchar(5);
nr_seq_material_w			bigint;
nr_seq_material_ww			bigint;		
qt_conversao_dose_w			double precision;
qt_dose_ataque_w			double precision;
qt_conversao_ml_w			double precision;
qt_unitaria_w   			double precision;
qt_dispensar_w				double precision;
qt_total_etapa_w			double precision;
ie_loop_w					varchar(10);
qt_dosagem_final_w			double precision;
qt_material_w   			double precision;
cd_setor_atendimento_w		bigint;
ie_se_necessario_w			varchar(1);
varGerarKitSol_w			varchar(1);

CD_MATERIAL_w				integer;
CD_UNIDADE_MEDIDA_w			varchar(30);
QT_DOSE_w					double precision;
qt_dose_ml_w				double precision;
QT_SOLUCAO_w				double precision;
IE_AGRUPADOR_w				smallint;
DS_DOSE_DIFERENCIADA_w		varchar(50);
cd_unid_med_consumo_w		varchar(30);
QT_MINIMO_MULTIPLO_SOLIC_w 	double precision;
ds_erro_w					varchar(255);
ds_erro_ww					varchar(2000);
cd_intervalo_w         		varchar(7);
nr_seq_solucao_ww			bigint;
cd_estabelecimento_w		smallint;
ie_via_aplicacao_w			varchar(5);
ds_recomendacao_w			varchar(2000);
ds_solucao_W				varchar(100);
vl_retorno_w				bigint;
qt_dose_peso_w				double precision;
qt_peso_w					real;
ie_regra_disp_w				varchar(1);/* Rafael em 15/3/8 OS86206 */
lista_informacao_w			varchar(1000);
ie_contador_w				bigint	:= 0;
tam_lista_w					bigint;
ie_pos_virgula_w			smallint;
ie_pos_traco_w				bigint;
lista_inf_w					varchar(100);

cd_protocolo_w				bigint;
cd_protocolo_ww				bigint;
nr_seq_prot_rotina_w		bigint;
nr_seq_medic_w				bigint;
nr_seq_sol_w				bigint;

ie_etapa_sol_acm_w			varchar(1);
ie_gerar_etapa_w			varchar(1);
ie_solucao_pca_w			varchar(1);
ie_tipo_analgesia_w			varchar(15);
ie_pca_modo_prog_w			varchar(15);
qt_dose_inicial_pca_w		double precision;
qt_vol_infusao_pca_w		double precision;
qt_bolus_pca_w				double precision;
qt_intervalo_bloqueio_w		double precision;
qt_limite_quatro_hora_w		double precision;
qt_limite_uma_hora_w		double precision;
ds_orientacao_w				varchar(2000);
ie_informa_prim_hor_w		varchar(1);
ie_prescr_mat_sem_lib_w		varchar(255);
ie_arredondar_w				varchar(1);
ie_urgencia_presc_w			varchar(1);
ds_material_w				varchar(255);
ds_unid_med_w				varchar(100);
ie_um_dose_inicio_pca_w		varchar(15);
ie_um_limite_pca_w			varchar(15);
ie_um_limite_hora_pca_w		varchar(15);
ie_um_fluxo_pca_w			varchar(15);
ie_um_bolus_pca_w			varchar(15);
nr_horas_validade_w			integer;
ie_etapa_interv_w			varchar(1);
cd_intervalo_ww				varchar(7);
ie_tempo_total_sol_w		varchar(1);
ie_agora_acm_sn_w			varchar(255);
Ie_Check_Intervalo_w		varchar(1);
Ie_arredonda_w				varchar(1);
VarGerarDiluicaoSol_w		varchar(1) := 'N';
nr_horas_intervalo_w		double precision;
ie_horario_solucao_w		varchar(10);
ie_calcular_etapas_w		varchar(10);
ie_calcula_volume_vel_w		varchar(10);
ie_calcula_total_w			varchar(10);
qt_tempo_sol_w				double precision;
ie_etapa_espec_sol_w		varchar(2);
ie_perm_etapa_espec_w		varchar(1);
ie_etapa_especial_w			varchar(1);
ieRecomendacao_w			varchar(1);
dt_status_w					timestamp;
ie_nova_calc_sol_w	    	varchar(1);
dt_validade_prescr_w 		timestamp;	
ie_vel_conforme_etapa_w		varchar(1);
ie_fator_correcao_w			varchar(1);
cd_perfil_w					integer := obter_perfil_ativo;
ie_calc_etapas_total_w		varchar(1)	:= 'N';
ie_calc_etapas_total_ww		varchar(1)	:= 'N';
Ie_limpa_titulo_w			varchar(1);
ie_limpa_w					varchar(1);
VarChecarAgoraPA_w			varchar(2);
ie_marcar_agora_w 			varchar(2);
ie_cal_vol_automatico_w 	varchar(1);
ie_acm_ww					varchar(1);
ds_observa_farm_w			varchar(2000);
ie_aberta_w					varchar(1);
ie_existe_prot_esq_w		smallint := 0;
VarDispositivoPadrao_w      varchar(1);
qt_hora_infusao_w			protocolo_medic_solucao.qt_hora_infusao%type;
qt_tempo_infusao_w			protocolo_medic_solucao.qt_tempo_infusao%type;
ie_sol_intermitente_w		prescr_solucao.ie_sol_intermitente%type := 'N';
cd_material_gen_w			integer;
qt_tempo_aplic_w			bigint;
qt_dose_rotina_w			prescr_material.qt_dose%type;
qt_dose_comp_w				prescr_material.qt_dose%type;
ie_controle_limpa_titulo_w	varchar(1)	:= 'N';
qt_tempo_aplicacao_ww		prescr_solucao.qt_tempo_aplicacao%type;	
cd_pessoa_fisica_w			prescr_medica.cd_pessoa_fisica%type;

C01 CURSOR FOR
SELECT	a.nr_seq_material,
		a.cd_material,
		coalesce(obter_UM_w_item_prescr_sol(a.cd_protocolo, a.nr_sequencia, nr_prescricao_p,  a.nr_seq_material, a.nr_seq_solucao, 'SOL', nm_usuario_p),a.cd_unidade_medida),
		coalesce(obter_dose_w_item_prescr_sol(a.cd_protocolo, a.nr_sequencia, nr_prescricao_p,  a.nr_seq_material, a.nr_seq_solucao, 'SOL', nm_usuario_p),a.qt_dose),
		a.qt_solucao,
		a.ie_agrupador,
		a.ds_dose_diferenciada,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		b.qt_minimo_multiplo_solic,
		coalesce(a.ie_se_necessario,'N'),
		coalesce(a.ie_via_aplicacao,coalesce(ie_via_aplicacao_w, upper(obter_via_usuario('IV')))),
		a.ds_recomendacao,
		coalesce(a.qt_dose_peso,0),
		a.ds_justificativa,
		coalesce(a.ie_acm,'N'),
		a.qt_dose,
		obter_dose_w_item_prescr_sol(a.cd_protocolo, a.nr_sequencia, nr_prescricao_p,  a.nr_seq_material, a.nr_seq_solucao, 'SOL', nm_usuario_p)
from 	material b,
		Protocolo_medic_material a
where a.cd_protocolo	 	= cd_protocolo_w
  and a.nr_sequencia		= nr_seq_medic_w
  and a.nr_seq_solucao		= nr_seq_sol_w
  and b.ie_situacao		= 'A'
  --and nvl(a.ie_gerar_solucao,'S') = 'S'
  and   not exists (SELECT   1
                  from     REP_item_excl_protocolo x
                  where    x.nr_prescricao   = nr_prescricao_p
                  and      x.cd_protocolo    = cd_protocolo_w
                  and      x.nr_seq_item     = nr_seq_medic_w
                  and      x.nr_seq_material = a.nr_seq_material)
  and a.cd_material 		= b.cd_material
  order by a.nr_seq_apresentacao;

C02 CURSOR FOR
SELECT	nr_seq_solucao
from	prescr_solucao
where	nr_prescricao	=  nr_prescricao_p
and		coalesce(nr_seq_dialise::text, '') = '';

C03 CURSOR FOR
SELECT	nr_sequencia
from	prescr_material
where	nr_prescricao 	     =  nr_prescricao_p
and	nr_sequencia_solucao =  nr_seq_solucao_ww
and	ie_agrupador 	     = 4;


BEGIN

select	coalesce(max(cd_estabelecimento),1),
		coalesce(max(qt_peso),0),
		coalesce(max(nr_horas_validade),24),
		max(cd_setor_atendimento),
		max(cd_pessoa_fisica)
into STRICT	cd_estabelecimento_w,
		qt_peso_w,
		nr_horas_validade_w,
		cd_setor_atendimento_w,
		cd_pessoa_fisica_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

Nr_Etapa_W := obter_param_usuario(924, 25, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, Nr_Etapa_W);
ieRecomendacao_w := obter_param_usuario(924, 48, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ieRecomendacao_w);
ie_etapa_sol_acm_w := obter_param_usuario(924, 226, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_etapa_sol_acm_w);
ie_informa_prim_hor_w := obter_param_usuario(924, 204, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_informa_prim_hor_w);
ie_horario_solucao_w := obter_param_usuario(924, 284, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_horario_solucao_w);
ie_gera_horarios_ACM_w := obter_param_usuario(924, 338, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gera_horarios_ACM_w);
ie_calcula_total_w := obter_param_usuario(924, 394, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_calcula_total_w);
ie_gera_horarios_SNE_w := obter_param_usuario(924, 431, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gera_horarios_SNE_w);
ie_calcular_etapas_w := obter_param_usuario(924, 461, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_calcular_etapas_w);
ie_prescr_mat_sem_lib_w := obter_param_usuario(924, 530, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_prescr_mat_sem_lib_w);
ie_arredondar_w := obter_param_usuario(924, 560, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_arredondar_w);
ie_perm_etapa_espec_w := obter_param_usuario(924, 583, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_perm_etapa_espec_w);
if (coalesce(cd_funcao_p,924)	= 950) then
	ie_etapa_interv_w := obter_param_usuario(950, 42, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_etapa_interv_w);
	ie_calc_etapas_total_w := obter_param_usuario(950, 199, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_calc_etapas_total_w);
else
	ie_etapa_interv_w := obter_param_usuario(924, 590, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_etapa_interv_w);
end if;	
ie_tempo_total_sol_w := obter_param_usuario(924, 322, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_tempo_total_sol_w);
VarRegraPrimHorarioSol_w := obter_param_usuario(924, 332, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, VarRegraPrimHorarioSol_w);
ie_calcula_volume_vel_w := obter_param_usuario(924, 636, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_calcula_volume_vel_w);
Ie_arredonda_w := obter_param_usuario(924, 742, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, Ie_arredonda_w);
Ie_limpa_titulo_w := obter_param_usuario(924, 784, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, Ie_limpa_titulo_w);
Ie_Check_Intervalo_w := obter_param_usuario(924, 809, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, Ie_Check_Intervalo_w);
VarChecarAgoraPA_w := obter_param_usuario(924, 831, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, VarChecarAgoraPA_w);
ie_vel_conforme_etapa_w := obter_param_usuario(924, 855, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_vel_conforme_etapa_w);
VarGerarDiluicaoSol_w := obter_param_usuario(924, 601, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, VarGerarDiluicaoSol_w);
ie_fator_correcao_w := obter_param_usuario(924, 1082, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_fator_correcao_w);
varGerarKitSol_w := obter_param_usuario(924, 1098, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, varGerarKitSol_w);
ie_etapa_espec_sol_w := Obter_Param_Usuario(924, 1138, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_etapa_espec_sol_w);
ie_nova_calc_sol_w := Obter_Param_Usuario(924, 1151, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_nova_calc_sol_w);
ie_cal_vol_automatico_w := Obter_Param_Usuario(924, 805, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_cal_vol_automatico_w);
VarDispositivoPadrao_w := Obter_Param_Usuario(924, 299, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, VarDispositivoPadrao_w);

if (DS_LISTA_SOLUCAO_P IS NOT NULL AND DS_LISTA_SOLUCAO_P::text <> '') then

	lista_informacao_w	:= ds_lista_solucao_p;

	while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or
		ie_contador_w > 200 loop
		begin
		tam_lista_w			:= length(lista_informacao_w);
		ie_pos_virgula_w		:= position(',' in lista_informacao_w);
		ie_pos_traco_w			:= position('-' in lista_informacao_w);
		lista_inf_w			:= substr(lista_informacao_w,1,ie_pos_virgula_w - 1);
		
		/* Obter a sequencia lida */

		if (ie_pos_virgula_w <> 0) then
			begin
			cd_protocolo_w		:= substr(lista_inf_w,1,(ie_pos_traco_w - 1));
			lista_inf_w		:= substr(lista_inf_w,ie_pos_traco_w + 1,100);
			ie_pos_traco_w		:= position('-' in lista_inf_w);
			nr_seq_medic_w		:= substr(lista_inf_w,1,(ie_pos_traco_w - 1));
			nr_seq_sol_w		:= substr(lista_inf_w,position('-' in lista_inf_w) + 1,100);
			lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
			end;
		end if;
		
		if (nr_prescricao_p > 0) then
			begin
			select	coalesce(max(nr_seq_solucao),0),
				coalesce(max(nr_agrupamento),0)
			into STRICT	nr_sequencia_w,
				nr_agrup_solucao_w
			from	prescr_solucao
			where	nr_prescricao = nr_prescricao_p;

			Select	dt_prescricao,
				coalesce(dt_inicio_prescr,dt_primeiro_horario),
				dt_validade_prescr
			into STRICT	dt_prescricao_w,
				dt_primeiro_horario_w,
				dt_validade_prescr_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;

			select	coalesce(max(nr_sequencia),1)
			into STRICT	nr_seq_material_w
			from	prescr_material
			where	nr_prescricao = nr_prescricao_p; 	
			
			end;
		end if;
		
		qt_tempo_aplicacao_w	:= campo_numerico(qt_tempo_aplicacao_p);
		
		
		select	nr_seq_solucao,
			coalesce(coalesce(ie_tipo_dosagem_p, ie_tipo_dosagem),'gtm'),
			coalesce(qt_dosagem_p, qt_dosagem),
			qt_solucao_total,
			CASE WHEN qt_tempo_aplicacao_w=0 THEN qt_tempo_aplicacao  ELSE qt_tempo_aplicacao_w END ,--nvl(qt_tempo_aplicacao_w, qt_tempo_aplicacao),
			coalesce(qt_volume,0),
			CASE WHEN nr_etapas_p=0 THEN nr_etapas  ELSE nr_etapas_p END ,
			ie_bomba_infusao,
			coalesce(nr_agrupamento,0),
			coalesce(ie_esquema_alternado,'N'),
			coalesce(ie_calc_aut,'N'),
			coalesce(ie_acm,'N'),
			qt_hora_fase,
			ds_solucao,
			ie_solucao_pca,
			ie_tipo_analgesia,
			ie_pca_modo_prog,
			qt_dose_inicial_pca,
			qt_vol_infusao_pca,
			qt_bolus_pca,
			qt_intervalo_bloqueio,
			qt_limite_quatro_hora,
			qt_dose_ataque,
			coalesce(ie_se_necessario,'N'),
			ds_orientacao,
			ie_tipo_sol,
			qt_limite_uma_hora,
			ie_urgencia,
			ie_um_dose_inicio_pca,
			ie_um_limite_pca,
			ie_um_limite_hora_pca,
			ie_um_fluxo_pca,
			ie_um_bolus_pca,
			ie_via_aplicacao,
			cd_intervalo,
			hr_prim_horario,
			cd_protocolo,
			nr_seq_interno,
			coalesce(ie_aberta,'N'),
			coalesce( qt_tempo_hora_p, qt_hora_infusao),
			coalesce(qt_tempo_minuto_p, qt_tempo_infusao)
		into STRICT	nr_seq_solucao_w,
			ie_tipo_dosagem_w,
			qt_dosagem_w,
			qt_solucao_total_w,
			qt_tempo_aplicacao_w,
			qt_volume_w,
			nr_etapas_w,
			ie_bomba_infusao_w,
			nr_agrupamento_w,
			ie_esquema_alternado_w,
			ie_calculo_aut_w,
			ie_acm_w,
			qt_hora_fase_w,
			ds_solucao_w,
			ie_solucao_pca_w,
			ie_tipo_analgesia_w,
			ie_pca_modo_prog_w,
			qt_dose_inicial_pca_w,
			qt_vol_infusao_pca_w,
			qt_bolus_pca_w,
			qt_intervalo_bloqueio_w,
			qt_limite_quatro_hora_w,
			qt_dose_ataque_w,
			ie_se_necessario_w,
			ds_orientacao_w,
			ie_tipo_sol_w,
			qt_limite_uma_hora_w,
			ie_urgencia_presc_w,
			ie_um_dose_inicio_pca_w,
			ie_um_limite_pca_w,
			ie_um_limite_hora_pca_w,
			ie_um_fluxo_pca_w,
			ie_um_bolus_pca_w,
			ie_via_aplicacao_w,
			cd_intervalo_w,
			hr_primeiro_hoario_w,
			cd_protocolo_ww,
			nr_seq_prot_rotina_w,
			ie_aberta_w,
			qt_hora_infusao_w,
			qt_tempo_infusao_w
		from	protocolo_medic_solucao
		where	cd_protocolo	 = cd_protocolo_w
		  and	nr_sequencia	 = nr_seq_medic_w
		  and	nr_seq_solucao	 = nr_seq_sol_w
		  and	coalesce(ie_solucao_rotina, 'S') = 'S';
		
		  
		if	((ie_tempo_total_sol_w = 'S') or
		     ((ie_tempo_total_sol_w = 'C') and (coalesce(qt_tempo_aplicacao_w::text, '') = ''))) then
			begin
			qt_tempo_aplicacao_w	:=	 nr_horas_validade_w;
			end;
		end if;
		 
		if (ie_etapa_interv_w = 'S')  then
			cd_intervalo_ww := cd_intervalo_w;
			if (Ie_arredonda_w = 'S') then
				nr_etapas_w := ceil(Obter_ocorrencia_intervalo(cd_intervalo_w,qt_tempo_aplicacao_w,'O'));
			else
				nr_etapas_w := trunc(Obter_ocorrencia_intervalo(cd_intervalo_w,qt_tempo_aplicacao_w,'O'));
			end if;			
		end if;
		
		if ((coalesce(cd_intervalo_p,cd_intervalo_w) IS NOT NULL AND (coalesce(cd_intervalo_p,cd_intervalo_w))::text <> '')) then
			if (Ie_Check_Intervalo_w = 'S') then
				ie_agora_acm_sn_w := obter_se_interv_agora_acm_sn(coalesce(cd_intervalo_p,cd_intervalo_w));
				if (ie_agora_acm_sn_w <> '') then
					if (ie_agora_acm_sn_w = 'AGORA') then
						ie_acm_w		:= 'N';
						ie_se_necessario_w	:= 'N';
						ie_urgencia_presc_w	:= 'S';
					elsif (ie_agora_acm_sn_w = 'SN') then
						ie_acm_w		:= 'N';
						ie_se_necessario_w	:= 'S';
						ie_urgencia_presc_w	:= 'N';
					elsif (ie_agora_acm_sn_w = 'ACM') then
						ie_acm_w		:= 'S';
						ie_se_necessario_w	:= 'N';
						ie_urgencia_presc_w	:= 'N';
					end if;
				end if;
			end if;
		end if;
		
	if (ie_urgencia_presc_w = 'N') and (coalesce(ie_se_necessario_w,'N') = 'N') and (coalesce(ie_acm_w,'N') = 'N') then
		ie_marcar_agora_w	:= Obter_Se_marca_Agora(cd_setor_atendimento_w);
		
		if	((VarChecarAgoraPA_w = 'S') or
			 (VarChecarAgoraPA_w = 'D' AND ie_marcar_agora_w = 'S')) and (coalesce(obter_classif_setor(cd_setor_atendimento_w), 0) = 1) then
			if (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then
				ie_urgencia_presc_w := obter_se_intervalo_agora(cd_intervalo_p);				
			else				
				ie_urgencia_presc_w := 'S';
			end if;
		end if;
	end if;
		
		ds_horarios_w	:= '';
		if (ie_etapa_sol_acm_w = 'N') and (ie_acm_w = 'S') then
			ie_gerar_etapa_w := 'N';
		else
			ie_gerar_etapa_w := 'S';
		end if;
		
		if (coalesce(hr_primeiro_hoario_w::text, '') = '') or (hr_primeiro_hoario_w = '  :  ') then
			if (VarRegraPrimHorarioSol_w = 'P') then
				hr_primeiro_hoario_w   := to_char(dt_primeiro_horario_w,'hh24:mi');
			elsif (VarRegraPrimHorarioSol_w = 'R') then
				select	Obter_prim_horario_solucao(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'))
				into STRICT	hr_primeiro_hoario_w
				;
			elsif	((VarRegraPrimHorarioSol_w = 'I') or (VarRegraPrimHorarioSol_w = 'T')) and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
				select	obter_primeiro_horario(cd_intervalo_w,nr_prescricao_p,null,null)
				into STRICT	hr_primeiro_hoario_w
				;
			else
				Select	Obter_prim_horario_Sol_regra(CASE WHEN ie_gerar_etapa_w='N' THEN  null  ELSE nr_etapas_w END , dt_prescricao_w, hr_primeiro_hoario_w)
				into STRICT	hr_primeiro_hoario_w 
				;
			end if;
		end if;	

		IF (coalesce(ie_urgencia_presc_w,'N') = 'S') THEN
			if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
				select	max(coalesce(a.QT_MIN_AGORA, a.qt_min_intervalo))
				into STRICT	qt_min_intervalo_w
				from	intervalo_prescricao a
				where	a.cd_intervalo = cd_intervalo_w;
			end if;	
			
			if (qt_min_intervalo_w IS NOT NULL AND qt_min_intervalo_w::text <> '') then
				hr_primeiro_hoario_w	:= to_char(clock_timestamp() + (qt_min_intervalo_w/1440),'hh24:mi');
			else
				hr_primeiro_hoario_w	:= to_char(clock_timestamp(),'hh24:mi');
			end if;	
		end if;
		
		if (ie_perm_etapa_espec_w	= 'S') and (ie_etapa_espec_sol_w	= 'S') and (coalesce(ie_acm_w,'N')	<> 'S') and (coalesce(ie_se_necessario_w,'N') <> 'S') and (coalesce(ie_urgencia_presc_w,'N')	<> 'S') and (coalesce(ie_esquema_alternado_w,'N') <> 'S') and (nr_horas_validade_w	> 24) and (nr_horas_validade_w	> coalesce(qt_tempo_aplicacao_w,0)) and (coalesce(ie_tipo_sol_w,0)	<> 2) then
			ie_etapa_especial_w	:= 'S';
			nr_intervalos_w	:= nr_etapas_w + 1;
		elsif (ie_perm_etapa_espec_w	= 'S') and (ie_etapa_espec_sol_w	= 'SA') and (coalesce(ie_acm_w,'N')	<> 'S') and (coalesce(ie_se_necessario_w,'N') <> 'S') and (coalesce(ie_urgencia_presc_w,'N')	<> 'S') and (coalesce(ie_esquema_alternado_w,'N') <> 'S') and (nr_horas_validade_w	> 24) and (nr_horas_validade_w	> coalesce(qt_tempo_aplicacao_w,0)) and (coalesce(qt_tempo_aplicacao_w,0) >= 24) and (coalesce(ie_tipo_sol_w,0)	<> 2) then
			ie_etapa_especial_w	:= 'S';
			nr_intervalos_w	:= nr_etapas_w + 1;
		else
			ie_etapa_especial_w	:= 'N';
			nr_intervalos_w	:= nr_etapas_w;
		end if;			
		
		if (ie_calculo_aut_w = 'S') or
			(hr_primeiro_hoario_w IS NOT NULL AND hr_primeiro_hoario_w::text <> '' AND hr_primeiro_hoario_w	<> '  :  ') then
			
			if (ie_gerar_etapa_w	<> 'N') and
				((cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') or (ie_horario_solucao_w	= 'N')) and (coalesce(cd_intervalo_p::text, '') = '') then
				nr_horas_intervalo_w	:= qt_hora_fase_w;
			else
				nr_horas_intervalo_w	:= dividir(qt_tempo_aplicacao_w,nr_etapas_w);
			end if;
			
			qt_tempo_aplicacao_ww := null;
			
			if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and (coalesce(nr_horas_intervalo_w,0) > 0) and (coalesce(nr_etapas_w,0) > 0) and (coalesce(ie_etapa_interv_w,'N') = 'S') and (coalesce(Ie_arredonda_w,'N') = 'S') and (coalesce(ie_horario_solucao_w,'N') = 'N') then
			
			   qt_tempo_aplicacao_ww := nr_horas_intervalo_w * nr_etapas_w;
			end if;
														
			SELECT * FROM Calcula_Horarios_Etapas(to_date(to_char(dt_primeiro_horario_w,'dd/mm/yyyy ')||hr_primeiro_hoario_w,'dd/mm/yyyy hh24:mi'), nr_intervalos_w, nr_horas_intervalo_w, nm_usuario_p, ie_horario_solucao_w, coalesce(qt_tempo_aplicacao_ww,qt_tempo_aplicacao_w), ds_horarios_w, ds_horarios_2w, ie_etapa_especial_w, 'N') INTO STRICT ds_horarios_w, ds_horarios_2w;
			
		end if;
		if (ie_gera_horarios_ACM_w = 'N')	and (ie_acm_w	= 'S') then
			hr_primeiro_hoario_w	:= null;
			ds_horarios_w		:= null;
		end if;
		
		if (ie_gera_horarios_SNE_w = 'N')	and (ie_se_necessario_w	= 'S') then
			hr_primeiro_hoario_w	:= null;
			ds_horarios_w		:= null;
		end if;
		
		if (VarDispositivoPadrao_w IS NOT NULL AND VarDispositivoPadrao_w::text <> '') and (ie_tipo_dosagem_w = 'mlh') and (coalesce(ie_bomba_infusao_w::text, '') = '') then
			ie_bomba_infusao_w := VarDispositivoPadrao_w;
		elsif (coalesce(ie_bomba_infusao_w::text, '') = '') then
			ie_bomba_infusao_w := Obter_dispositivo_solucao(cd_setor_atendimento_w, cd_perfil_w);
		end if;
		
		if (clock_timestamp() between dt_primeiro_horario_w and dt_validade_prescr_w) then
			dt_status_w := clock_timestamp();
		else
			dt_status_w :=  dt_primeiro_horario_w;
		end if;
		
		if (ie_tipo_sol_w = 1) and
			((coalesce(qt_hora_infusao_w,0) > 0) or (coalesce(qt_tempo_infusao_w,0) > 0)) then
			 ie_sol_intermitente_w := 'S';
			 if (coalesce(qt_tempo_infusao_w,0) > 0) then
				qt_hora_fase_w	:= coalesce(qt_hora_infusao_w,0) + coalesce(qt_tempo_infusao_w,0) / 60;
			 else	
				qt_hora_fase_w  := coalesce(qt_hora_infusao_w,0);
			 end if;	
		end if;
		
		insert into prescr_solucao(
			nr_prescricao,
			nr_seq_solucao,
			ie_via_aplicacao,
			dt_atualizacao,
			nm_usuario,
			cd_unidade_medida,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_solucao_total,
			qt_tempo_aplicacao,
			qt_volume,
			nr_etapas,
			ie_bomba_infusao,
			ie_suspenso,
			nr_agrupamento,
			ie_esquema_alternado,
			ie_calc_aut,
			ie_acm,
			qt_hora_fase,
			ds_horarios,
			hr_prim_horario,
			ie_urgencia,
			ds_solucao,
			ie_solucao_especial,
			ie_solucao_pca,
			ie_tipo_analgesia,
			ie_pca_modo_prog,
			qt_dose_inicial_pca,
			qt_vol_infusao_pca,
			qt_bolus_pca,
			qt_intervalo_bloqueio,
			qt_limite_quatro_hora,
			qt_dose_ataque,
			ie_se_necessario,
			ds_orientacao,
			ie_tipo_sol,
			ie_status,
			dt_status,
			qt_limite_uma_hora,
			ie_um_limite_hora_pca,
			ie_um_dose_inicio_pca,
			ie_um_limite_pca,
			ie_um_fluxo_pca,
			ie_um_bolus_pca,
			cd_intervalo,
			IE_CLASSIF_AGORA,
			cd_protocolo,
			nr_seq_prot_rotina,
			ie_etapa_especial,
			ie_fator_correcao,
			ie_aberto,
			ie_sol_intermitente,
			qt_hora_infusao,
			qt_tempo_infusao)
		Values (		
			nr_prescricao_p,
			nr_seq_solucao_w + nr_sequencia_w,
			coalesce(ie_via_aplicacao_w, upper(obter_via_usuario('IV'))),
			clock_timestamp(),
			nm_usuario_p,
			obter_unid_med_usua('ml'),
			ie_tipo_dosagem_w,
			qt_dosagem_w,
			qt_solucao_total_w,
			qt_tempo_aplicacao_w,
			qt_volume_w,
			CASE WHEN ie_gerar_etapa_w='N' THEN  null  ELSE nr_etapas_w END ,
			ie_bomba_infusao_w,
			'N',
			nr_agrupamento_w + nr_agrup_solucao_w,
			ie_esquema_alternado_w,
			ie_calculo_aut_w,
			ie_acm_w,
			CASE WHEN ie_gerar_etapa_w='N' THEN  null  ELSE qt_hora_fase_w END ,
			CASE WHEN coalesce(ie_informa_prim_hor_w,'S')='S' THEN ds_horarios_w  ELSE null END ,
			CASE WHEN coalesce(ie_urgencia_presc_w,'N')='S' THEN  hr_primeiro_hoario_w  ELSE CASE WHEN ie_informa_prim_hor_w='S' THEN  hr_primeiro_hoario_w  ELSE null END  END ,
			coalesce(ie_urgencia_presc_w,'N'),
			ds_solucao_W,
			'N',
			ie_solucao_pca_w,
			ie_tipo_analgesia_w,
			ie_pca_modo_prog_w,
			qt_dose_inicial_pca_w,
			qt_vol_infusao_pca_w,
			qt_bolus_pca_w,
			qt_intervalo_bloqueio_w,
			qt_limite_quatro_hora_w,
			qt_dose_ataque_w,
			ie_se_necessario_w,
			substr(ds_orientacao_w,1,2000),
			ie_tipo_sol_w,
			'P',
			dt_status_w,
			qt_limite_uma_hora_w,
			coalesce(ie_um_limite_hora_pca_w,obter_unid_med_usua('ml')),
			ie_um_dose_inicio_pca_w,
			ie_um_limite_pca_w,
			ie_um_fluxo_pca_w,
			ie_um_bolus_pca_w,
			cd_intervalo_w,
			cd_intervalo_w,
			cd_protocolo_ww,
			nr_seq_prot_rotina_w,
			ie_etapa_especial_w,
			ie_fator_correcao_w,
			ie_aberta_w,
			coalesce(ie_sol_intermitente_w,'N'),
			CASE WHEN coalesce(ie_sol_intermitente_w,'N')='S' THEN  coalesce(qt_hora_infusao_w,0)  ELSE null END ,
			CASE WHEN coalesce(ie_sol_intermitente_w,'N')='S' THEN  coalesce(qt_tempo_infusao_w,0)  ELSE null END );

		insert into prescr_solucao_esquema(
			nr_sequencia,
			nr_prescricao,
			nr_seq_solucao,
			dt_atualizacao,
			nm_usuario,
			qt_volume,
			qt_dosagem,
			ds_horario)
		SELECT	
			nextval('prescr_solucao_esquema_seq'),
			nr_prescricao_p,
			nr_seq_solucao_w + nr_sequencia_w,
			clock_timestamp(),
			NM_USUARIO_P,
			qt_volume,
			qt_dosagem,
			ds_horario
		from	protocolo_medic_sol_esq
		where	cd_protocolo	= cd_protocolo_w
		and	nr_seq_subitem	= nr_seq_medic_w
		and	nr_seq_solucao	= nr_seq_sol_w;		
		
		cd_material_gen_w := coalesce(Obter_Subst_Generic_Medic(cd_protocolo_w, nr_seq_medic_w, nr_prescricao_p, nr_seq_sol_w), 0);
		
		qt_total_etapa_w	:= 0;
		OPEN C01;
		LOOP
		FETCH C01 into
			nr_seq_material_ww,
			CD_MATERIAL_w,
			CD_UNIDADE_MEDIDA_w,
			QT_DOSE_w,
			QT_SOLUCAO_w,
			IE_AGRUPADOR_w,
			DS_DOSE_DIFERENCIADA_w,
			cd_unid_med_consumo_w,
			QT_MINIMO_MULTIPLO_SOLIC_w,
			ie_se_necessario_w,
			ie_via_aplicacao_w,
			ds_recomendacao_w,
			qt_dose_peso_w,
			ds_justificativa_w,
			ie_acm_w,
			qt_dose_comp_w,
			qt_dose_rotina_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			BEGIN
			
			if (qt_dose_rotina_w IS NOT NULL AND qt_dose_rotina_w::text <> '') and (coalesce(qt_dose_comp_w, 0) <> coalesce(qt_dose_rotina_w, 0)) and (coalesce(ie_controle_limpa_titulo_w, 'N') = 'N') then				
				ie_controle_limpa_titulo_w := 'S';
			end if;
			
			if (cd_material_gen_w > 0) and (obter_regra_subst_com(nr_prescricao_p,cd_material_w) = cd_material_gen_w) then
				cd_material_w := cd_material_gen_w;
			end if;
			
			if (qt_dose_peso_w > 0) and (qt_peso_w > 0) then /* Oraci em 21/09/2007 OS69262 */
				qt_dose_w:= qt_dose_peso_w * qt_peso_w;
			end if;

			if (ie_esquema_alternado_w = 'S') then
				QT_DOSE_w := obter_valor_dinamico('select ('|| replace(DS_DOSE_DIFERENCIADA_w,'-','+')||') from dual ', QT_DOSE_w);
			end if;	

			if (qt_dose_peso_w > 0) and (coalesce(qt_peso_w,0) = 0) and (coalesce(qt_dose_w::text, '') = '') then
				--Para esta solucao voce deve informar o peso do paciente na prescricao!
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(181329);
			end if;
			
			qt_conversao_dose_w	:= obter_conversao_unid_med(cd_material_w,cd_unidade_medida_w);
			if (qt_conversao_dose_w = 0) then
				ds_material_w := obter_desc_material(cd_material_w);
				ds_unid_med_w := obter_desc_unid_med(cd_unidade_medida_w);	
				--'O medicamento '||ds_material_w||chr(13)||' nao possui valor cadastrado para  conversao em '||ds_unid_med_w);
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(181330,'DS_MATERIAL='||ds_material_w || ';DS_UNID='||ds_unid_med_w);
			end if;
			qt_unitaria_w		:= (trunc(qt_dose_w * 1000 / qt_conversao_dose_w)/ 1000);	

			/*
			Obter_Quant_Dispensar(1,cd_material_w, NR_PRESCRICAO_P, nr_seq_material_w + nr_seq_material_ww, 
						cd_intervalo_w,	ie_via_aplicacao_w, qt_unitaria_w, 0, nvl(nr_etapas_w,1),     
						'', '1', CD_UNIDADE_MEDIDA_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w); 
						
			Dalcastagne em 19/03/2009 OS 133289 */
			
						
			SELECT * FROM Obter_Quant_Dispensar(1, cd_material_w, nr_prescricao_p, nr_seq_material_w + nr_seq_material_ww, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, 1, '', '1', CD_UNIDADE_MEDIDA_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
			
			qt_dose_ml_w		:= obter_conversao_ml(cd_material_w,qt_dose_w,cd_unidade_medida_w);
			qt_solucao_w		:= qt_dose_ml_w;	
			qt_total_etapa_w	:= qt_total_etapa_w + qt_dose_ml_w;
			
			ie_loop_w	:= 'S';
			while(ie_loop_w = 'S') loop
				select	count(*)
				into STRICT	qt_itens_w
				from	prescr_material
				where	nr_prescricao	= nr_prescricao_p
				and	nr_sequencia	= nr_seq_material_w + nr_seq_material_ww;
				if (qt_itens_w	= 0) then
					ie_loop_w	:= 'N';
				else	
					nr_seq_material_w	:= nr_seq_material_w + 1;
				end if;
			end loop;		
			
			if (coalesce(Obter_se_apres_orient_mat(cd_material_w, cd_pessoa_fisica_w),'S') = 'S') then
				if (ieRecomendacao_w = 'G') then
					if (ds_recomendacao_w IS NOT NULL AND ds_recomendacao_w::text <> '') then
						ds_recomendacao_w := substr(ds_recomendacao_w ||chr(13)|| substr(obter_orientacao_medic(CD_MATERIAL_w),1,4000),1,4000);
					else
						ds_recomendacao_w := substr(obter_orientacao_medic(CD_MATERIAL_w),1,4000);
					end if;
				elsif (ieRecomendacao_w = 'F') then
					ds_observa_farm_w := substr(obter_orientacao_medic(CD_MATERIAL_w),1,2000);
				end if;
			end if;
						
			Insert into prescr_material(
				nr_prescricao,
				nr_sequencia,
				ie_origem_inf,
				cd_material,	
				cd_unidade_medida,
				cd_unidade_medida_dose,
				qt_dose,
				qt_unitaria,
				qt_material,
				dt_atualizacao,
				nm_usuario,
				cd_intervalo,
				nr_ocorrencia,
				qt_total_dispensar,
				nr_sequencia_solucao,
				qt_solucao,
				ie_agrupador,
				ds_dose_diferenciada,
				qt_conversao_dose,
				cd_motivo_baixa,
				ie_utiliza_kit,
				ie_via_aplicacao,
				ie_se_necessario,
				ds_observacao,
				ie_recons_diluente_fixo,
				cd_protocolo,
				nr_seq_protocolo,
				nr_seq_mat_protocolo,
				ie_regra_disp,
				nr_seq_sol_prot,
				ds_justificativa,
				ds_observacao_far)
			values (	
				nr_prescricao_p,
				nr_seq_material_w + nr_seq_material_ww,
				'1',
				CD_MATERIAL_w,
				cd_unid_med_consumo_w,
				CD_UNIDADE_MEDIDA_w,
				coalesce(QT_DOSE_w,0),
				coalesce(qt_unitaria_w,0),
				coalesce(qt_material_w,0),
				clock_timestamp(),
				NM_USUARIO_P,
				cd_intervalo_w,
				1,
				qt_dispensar_w,
				nr_seq_solucao_w + nr_sequencia_w,
				QT_SOLUCAO_w,
				IE_AGRUPADOR_w,
				DS_DOSE_DIFERENCIADA_w,
				qt_conversao_dose_w,
				0,
				'N',
				ie_via_aplicacao_w,
				ie_se_necessario_w,
				ds_recomendacao_w,
				'N',
				cd_protocolo_w,
				nr_seq_medic_w,
				nr_seq_material_ww,
				ie_regra_disp_w,
				nr_seq_solucao_w,
				ds_justificativa_w,
				ds_observa_farm_w);
		
			if (VarGerarDiluicaoSol_w = 'S') then	
			      CALL Gerar_Reconst_Diluicao_Sol(nr_prescricao_p,nr_seq_material_w + nr_seq_material_ww,nr_seq_solucao_w + nr_sequencia_w,'A');
			end if;	
			
			if (varGerarKitSol_w = 'S') then
				CALL Gerar_Kit_Medic_Prescricao(cd_estabelecimento_w, nr_prescricao_p, nr_seq_material_w + nr_seq_material_ww, nm_usuario_p, 'N', 'N');
			end if;
			
			if (ie_prescr_mat_sem_lib_w = 'S') then
				CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_seq_material_w + nr_seq_material_ww,cd_perfil_w,'N',nm_usuario_p,null);
			end if;			
			
			END;
		ds_recomendacao_w := '';		
		END LOOP;
		CLOSE C01;
		
		/*update	Protocolo_medic_material
		set	ie_gerar_solucao	= 'S'
		where	ie_gerar_solucao	= 'N';*/
		if (ie_limpa_titulo_w	= 'S') then
			select	CASE WHEN count(a.nr_sequencia)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_limpa_w
			from	REP_item_excl_protocolo x,
					Protocolo_medic_material a
			where	a.nr_seq_material 	= x.nr_seq_material
			and		a.cd_protocolo	 	= x.cd_protocolo
			and		a.nr_sequencia		= x.nr_seq_item
			and		a.nr_sequencia		= nr_seq_medic_w
			and		a.nr_seq_solucao	= nr_seq_sol_w
			and		a.cd_protocolo    	= cd_protocolo_w
			and		x.nr_prescricao   	= nr_prescricao_p;

			if (ie_limpa_w	= 'S' or ie_controle_limpa_titulo_w = 'S') then
				ds_solucao_W	:= '';
			end if;
		end if;
		
		update	prescr_solucao
		set		qt_volume	= qt_total_etapa_w,
				ds_solucao	= ds_solucao_w
		where	nr_prescricao	= nr_prescricao_p
		and		nr_seq_solucao	= nr_seq_solucao_w + nr_sequencia_w;
		
		if (ie_calculo_aut_w	= 'S') then
			if (ie_gerar_etapa_w <> 'N') then
				if (ie_etapa_interv_w = 'S') then
					qt_hora_fase_w := ceil(Obter_ocorrencia_intervalo(cd_intervalo_ww,qt_tempo_aplicacao_w,'H'));
				else
					qt_hora_fase_w := dividir(qt_tempo_aplicacao_w,nr_etapas_w);
				end if;
			else
				qt_hora_fase_w := '';
			end if; 			
			if (coalesce(ie_sol_intermitente_w,'N') = 'S') then
				 if (coalesce(qt_tempo_infusao_w,0) > 0) then
					qt_hora_fase_w	:= coalesce(qt_hora_infusao_w,0) + coalesce(qt_tempo_infusao_w,0) / 60;
				 else	
					qt_hora_fase_w  := coalesce(qt_hora_infusao_w,0);
				 end if;	
			end if;
			if (qt_dosagem_w IS NOT NULL AND qt_dosagem_w::text <> '') then
		
				if (ie_calc_etapas_total_w	= 'S') and (ie_etapa_interv_w	= 'N') and (ie_tipo_sol_w = '3') then
					ie_calc_etapas_total_ww	:= 'S';
				else
					ie_calc_etapas_total_ww	:= 'N';
				end if;
		
				SELECT * FROM Calcular_Valores_Solucao(nr_prescricao_p, nr_seq_solucao_w + nr_sequencia_w, qt_dosagem_w, ie_tipo_dosagem_w, ie_calcular_etapas_w, ie_calcula_volume_vel_w, ie_calcula_total_w, Ie_arredonda_w, nm_usuario_p, qt_tempo_aplicacao_w, qt_volume_sol_w, nr_etapas_sol_w, qt_tempo_sol_w, ie_calc_etapas_total_ww) INTO STRICT qt_volume_sol_w, nr_etapas_sol_w, qt_tempo_sol_w;
							
				if (qt_volume_sol_w IS NOT NULL AND qt_volume_sol_w::text <> '') then
					qt_solucao_total_w	:= qt_volume_sol_w;
				end if;
				if (nr_etapas_sol_w IS NOT NULL AND nr_etapas_sol_w::text <> '') then
					nr_etapas_w		:= nr_etapas_sol_w;
				end if;
				if (qt_tempo_sol_w IS NOT NULL AND qt_tempo_sol_w::text <> '') then
					qt_tempo_aplicacao_w	:= qt_tempo_sol_w;	
				end if;
				
				update	prescr_solucao
				set	qt_volume		= qt_total_etapa_w,
					qt_solucao_total	= qt_solucao_total_w,
					qt_hora_fase		= qt_hora_fase_w,
					qt_dosagem		= qt_dosagem_w,
					qt_tempo_aplicacao	= qt_tempo_aplicacao_w,
					nr_etapas		= nr_etapas_w
				where	nr_prescricao 		= nr_prescricao_p
				and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;			
			
			else
				update	prescr_solucao
				set	qt_volume		= qt_total_etapa_w,
					qt_solucao_total	= CASE WHEN ie_esquema_alternado_w='S' THEN qt_total_etapa_w  ELSE qt_total_etapa_w * nr_etapas_w END ,
					qt_hora_fase		= qt_hora_fase_w
				where	nr_prescricao 		= nr_prescricao_p
				and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;

				qt_dosagem_final_w := Calcular_volume_total_solucao(upper(ie_tipo_dosagem_w), qt_tempo_aplicacao_w, qt_total_etapa_w * nr_etapas_w, coalesce(qt_dosagem_w,0), nr_prescricao_p, nr_seq_solucao_w + nr_sequencia_w, 1, qt_dosagem_final_w, ie_arredondar_w, nr_etapas_w, ie_vel_conforme_etapa_w, qt_hora_fase_w);
				update	prescr_solucao
				set	qt_dosagem		= qt_dosagem_final_w,
					qt_hora_fase	= qt_hora_fase_w
				where	nr_prescricao 		= nr_prescricao_p
				and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;
							
				-- Recalcular o numero de etapas de acordo com o intervalo selecionado depois de definido o tempo total da solucao.			
				if (qt_dosagem_final_w IS NOT NULL AND qt_dosagem_final_w::text <> '')  and (ie_etapa_interv_w = 'S') and (Ie_arredonda_w = 'S')	then
					SELECT * FROM Calcular_etapas_interv_solucao(cd_intervalo_ww, qt_tempo_aplicacao_w, 'S', qt_hora_fase_w, nr_etapas_w, qt_total_etapa_w, qt_dosagem_final_w) INTO STRICT qt_hora_fase_w, nr_etapas_w;
												
					update prescr_solucao
					set	  nr_etapas 		= nr_etapas_w,
						  qt_hora_fase		= qt_hora_fase_w
					where	nr_prescricao 	= nr_prescricao_p
					and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;
				end if;
					
			end if;
			commit;						
											  
		
			select	coalesce(max(nr_etapas),0),
					coalesce(max(qt_hora_fase),0),
					coalesce(max(qt_tempo_aplicacao),0),
					coalesce(max(ie_acm),'N'),
					coalesce(max(ie_se_necessario),'N'),
					coalesce(max(hr_prim_horario),to_char(clock_timestamp(),'hh24:mi')),
					coalesce(max(ie_etapa_especial),'N')
			into STRICT	nr_etapas_w,
					nr_horas_intervalo_w,
					qt_tempo_aplicacao_w,
					ie_acm_w,
					ie_se_necessario_w,
					hr_primeiro_hoario_w,
					ie_etapa_especial_w
			from	prescr_solucao
			where	nr_prescricao 	= nr_prescricao_p
			and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;	
					
			if (ie_etapa_especial_w	= 'S') then
				nr_intervalos_w	:= nr_etapas_w + 1;
			else
				nr_intervalos_w	:= nr_etapas_w;
			end if;	
			
			qt_tempo_aplicacao_ww := null;

			if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and (coalesce(nr_horas_intervalo_w,0) > 0) and (coalesce(nr_etapas_w,0) > 0) and (coalesce(ie_etapa_interv_w,'N') = 'S') and (coalesce(Ie_arredonda_w,'N') = 'S') and (coalesce(ie_horario_solucao_w,'N') = 'N') then
			
			   qt_tempo_aplicacao_ww := nr_horas_intervalo_w * nr_etapas_w;
			end if;		
					
			SELECT * FROM Calcula_Horarios_Etapas(to_date(to_char(dt_primeiro_horario_w,'dd/mm/yyyy ')|| hr_primeiro_hoario_w,'dd/mm/yyyy hh24:mi'), nr_intervalos_w, nr_horas_intervalo_w, nm_usuario_p, ie_horario_solucao_w, coalesce(qt_tempo_aplicacao_ww,qt_tempo_aplicacao_w), ds_horarios_w, ds_horarios_2w, ie_etapa_especial_w, 'N') INTO STRICT ds_horarios_w, ds_horarios_2w;
				
			if (ie_gera_horarios_ACM_w = 'N')	and (ie_acm_w	= 'S') then
				hr_primeiro_hoario_w	:= null;
				ds_horarios_w		:= null;
				ds_horarios_2w		:= null;
			end if;
		
			if (ie_gera_horarios_SNE_w = 'N')	and (ie_se_necessario_w	= 'S') then
				hr_primeiro_hoario_w	:= null;
				ds_horarios_w		:= null;
				ds_horarios_2w		:= null;
			end if;

			if (coalesce(ie_informa_prim_hor_w,'S') = 'N') then
				ds_horarios_w		:= null;
				ds_horarios_2w		:= null;
			end if;

			ds_horarios_ww := substr(ds_horarios_w ||ds_horarios_2w,1,2000);
			
			update	prescr_solucao
			set		ds_horarios		= ds_horarios_ww
			where	nr_prescricao 	= nr_prescricao_p
			and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;	
			commit;	
			
		end if;

		if (coalesce(ie_aberta_w,'N') = 'S') then
			update	prescr_solucao
			set	nr_etapas		    	 = 1,
				qt_tempo_aplicacao		= '',
				qt_hora_fase			= ''
			where	nr_prescricao 		= nr_prescricao_p
			and		nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;
		end if;
		
		CALL Reordenar_Solucoes(nr_prescricao_p);

		OPEN C02;
		LOOP
		FETCH C02 into
			nr_seq_solucao_ww;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			CALL Ajustar_Prescr_Mat_Solucao(nr_prescricao_p, nr_seq_solucao_ww);
		END LOOP;
		CLOSE C02;
		end;
	end loop;



else

--lista_informacao_w	:= ds_lista_solucao_p;


/*while	lista_informacao_w is not null or
	ie_contador_w > 200 loop
	begin
	tam_lista_w			:= length(lista_informacao_w);
	ie_pos_virgula_w		:= instr(lista_informacao_w,',');
	ie_pos_traco_w			:= instr(lista_informacao_w,'-');
	lista_inf_w			:= substr(lista_informacao_w,1,ie_pos_virgula_w - 1);*/

	
	/* Obter a sequencia lida */


	/*
	if	(ie_pos_virgula_w <> 0) then
		begin
		cd_protocolo_w		:= substr(lista_inf_w,1,(ie_pos_traco_w - 1));
		lista_inf_w		:= substr(lista_inf_w,ie_pos_traco_w + 1,100);
		ie_pos_traco_w		:= instr(lista_inf_w,'-');
		nr_seq_medic_w		:= substr(lista_inf_w,1,(ie_pos_traco_w - 1));
		nr_seq_sol_w		:= substr(lista_inf_w,instr(lista_inf_w,'-') + 1,100);
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end;
	end if;*/
	cd_protocolo_w		:= cd_protocolo_p;
	nr_seq_medic_w		:= nr_sequencia_p;
	nr_seq_sol_w		:= nr_seq_solucao_p;
	
	if (nr_prescricao_p > 0) then
		begin
		select	coalesce(max(nr_seq_solucao),0),
			coalesce(max(nr_agrupamento),0)
		into STRICT	nr_sequencia_w,
			nr_agrup_solucao_w
		from	prescr_solucao
		where	nr_prescricao = nr_prescricao_p;

		Select	dt_prescricao,
			coalesce(dt_inicio_prescr,dt_primeiro_horario),
			dt_validade_prescr
		into STRICT	dt_prescricao_w,
			dt_primeiro_horario_w,
			dt_validade_prescr_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;

		select	coalesce(max(nr_sequencia),1)
		into STRICT	nr_seq_material_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p; 	
		
		end;
	end if;

	begin
	
	qt_tempo_aplicacao_w	:= campo_numerico(qt_tempo_aplicacao_p);
	
	select	nr_seq_solucao,
			coalesce(coalesce(ie_tipo_dosagem_p,ie_tipo_dosagem),'gtm'),
			coalesce(qt_dosagem_p, qt_dosagem),
			qt_solucao_total,
			CASE WHEN qt_tempo_aplicacao_w=0 THEN qt_tempo_aplicacao  ELSE qt_tempo_aplicacao_w END , --nvl(qt_tempo_aplicacao_w,qt_tempo_aplicacao),
			coalesce(qt_volume,0),
			CASE WHEN 	ie_etapa_interv_w='S' THEN ceil(Obter_ocorrencia_intervalo(coalesce(cd_intervalo_p,cd_intervalo),nr_horas_validade_w,'O'))  ELSE CASE WHEN nr_etapas_p=0 THEN nr_etapas  ELSE nr_etapas_p END  END ,
			ie_bomba_infusao,
			coalesce(nr_agrupamento,0),
			coalesce(ie_esquema_alternado,'N'),
			coalesce(ie_calc_aut,'N'),
			coalesce(ie_acm,'N'),
			qt_hora_fase,
			ds_solucao,
			ie_solucao_pca,
			ie_tipo_analgesia,
			ie_pca_modo_prog,
			qt_dose_inicial_pca,
			qt_vol_infusao_pca,
			qt_bolus_pca,
			qt_intervalo_bloqueio,
			qt_limite_quatro_hora,
			qt_dose_ataque,
			coalesce(ie_se_necessario,'N'),
			coalesce(ds_orientacao_p, ds_orientacao),
			ie_tipo_sol,
			qt_limite_uma_hora,
			ie_urgencia,
			ie_um_dose_inicio_pca,
			ie_um_limite_pca,
			ie_um_limite_hora_pca,
			ie_um_fluxo_pca,
			ie_um_bolus_pca,
			ie_via_aplicacao,
			CASE WHEN 	ie_etapa_interv_w='N' THEN  null  ELSE coalesce(cd_intervalo_p,cd_intervalo) END ,
			hr_prim_horario,
			ie_sol_especial,
			cd_protocolo,
			nr_seq_interno,
			coalesce(ie_aberta,'N'),
			coalesce(qt_tempo_hora_p, qt_hora_infusao),
			coalesce(qt_tempo_minuto_p, qt_tempo_infusao)
	into STRICT	nr_seq_solucao_w,
			ie_tipo_dosagem_w,
			qt_dosagem_w,
			qt_solucao_total_w,
			qt_tempo_aplicacao_w,
			qt_volume_w,
			nr_etapas_w,
			ie_bomba_infusao_w,
			nr_agrupamento_w,
			ie_esquema_alternado_w,
			ie_calculo_aut_w,
			ie_acm_w,
			qt_hora_fase_w,
			ds_solucao_w,
			ie_solucao_pca_w,
			ie_tipo_analgesia_w,
			ie_pca_modo_prog_w,
			qt_dose_inicial_pca_w,
			qt_vol_infusao_pca_w,
			qt_bolus_pca_w,
			qt_intervalo_bloqueio_w,
			qt_limite_quatro_hora_w,
			qt_dose_ataque_w,
			ie_se_necessario_w,
			ds_orientacao_w,
			ie_tipo_sol_w,
			qt_limite_uma_hora_w,
			ie_urgencia_presc_w,
			ie_um_dose_inicio_pca_w,
			ie_um_limite_pca_w,
			ie_um_limite_hora_pca_w,
			ie_um_fluxo_pca_w,
			ie_um_bolus_pca_w,
			ie_via_aplicacao_w,
			cd_intervalo_w,
			hr_primeiro_hoario_w,
			ie_solucao_especial_w,
			cd_protocolo_ww,
			nr_seq_prot_rotina_w,
			ie_aberta_w,
			qt_hora_infusao_w,
			qt_tempo_infusao_w
	from	protocolo_medic_solucao
	where	cd_protocolo	 = cd_protocolo_w
	  and	nr_sequencia	 = nr_seq_medic_w
	  and	nr_seq_solucao	 = nr_seq_sol_w
	  and	coalesce(ie_solucao_rotina, 'S') = 'S';
	
	exception
	when others then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(190439);		
	end;
	
	if ((coalesce(cd_intervalo_p,cd_intervalo_w) IS NOT NULL AND (coalesce(cd_intervalo_p,cd_intervalo_w))::text <> '')) then
		if (Ie_Check_Intervalo_w = 'S') then
			ie_agora_acm_sn_w := obter_se_interv_agora_acm_sn(coalesce(cd_intervalo_p,cd_intervalo_w));
			if (ie_agora_acm_sn_w IS NOT NULL AND ie_agora_acm_sn_w::text <> '') then
				if (ie_agora_acm_sn_w = 'AGORA') then
					ie_acm_w		:= 'N';
					ie_se_necessario_w	:= 'N';
					ie_urgencia_presc_w	:= 'S';
				elsif (ie_agora_acm_sn_w = 'SN') then
					ie_acm_w		:= 'N';
					ie_se_necessario_w	:= 'S';
					ie_urgencia_presc_w	:= 'N';
				elsif (ie_agora_acm_sn_w = 'ACM') then
					ie_acm_w		:= 'S';
					ie_se_necessario_w	:= 'N';
					ie_urgencia_presc_w	:= 'N';
				end if;
			end if;
		end if;
	end if;
	
	if (ie_urgencia_presc_w = 'N') and (coalesce(ie_se_necessario_w,'N') = 'N') and (coalesce(ie_acm_w,'N') = 'N') then
		ie_marcar_agora_w	:= Obter_Se_marca_Agora(cd_setor_atendimento_w);
		
		if	((VarChecarAgoraPA_w = 'S') or
			 (VarChecarAgoraPA_w = 'D' AND ie_marcar_agora_w = 'S')) and (coalesce(obter_classif_setor(cd_setor_atendimento_w), 0) = 1) then
			if (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then
				ie_urgencia_presc_w := obter_se_intervalo_agora(cd_intervalo_p);				
			else				
				ie_urgencia_presc_w := 'S';
			end if;
		end if;
	end if;

	if	((ie_tempo_total_sol_w = 'S') or
	     ((ie_tempo_total_sol_w = 'C') and (coalesce(qt_tempo_aplicacao_w::text, '') = ''))) then
		begin
		qt_tempo_aplicacao_w	:=	 nr_horas_validade_w;
		end;
	end if;	
	
	if (ie_etapa_interv_w = 'S')  then
		cd_intervalo_ww := cd_intervalo_w;
		if (Ie_arredonda_w = 'S') then
			nr_etapas_w := ceil(Obter_ocorrencia_intervalo(cd_intervalo_w,qt_tempo_aplicacao_w,'O'));
		else
			nr_etapas_w := trunc(Obter_ocorrencia_intervalo(cd_intervalo_w,qt_tempo_aplicacao_w,'O'));
		end if;			
	end if;

	ds_horarios_w	:= '';
	
	if (ie_etapa_sol_acm_w <> 'S') and (ie_acm_w = 'S') then
		ie_gerar_etapa_w := 'N';
	else
		ie_gerar_etapa_w := 'S';
	end if;
	
	if (coalesce(hr_primeiro_hoario_w::text, '') = '') or (hr_primeiro_hoario_w = '  :  ') then
		if (VarRegraPrimHorarioSol_w = 'P') then
			hr_primeiro_hoario_w   := to_char(dt_primeiro_horario_w,'hh24:mi');
		elsif (VarRegraPrimHorarioSol_w = 'R') then
			select	Obter_prim_horario_solucao(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'))
			into STRICT	hr_primeiro_hoario_w
			;
		elsif	((VarRegraPrimHorarioSol_w = 'I') or (VarRegraPrimHorarioSol_w = 'T')) and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
			select	obter_primeiro_horario(cd_intervalo_w,nr_prescricao_p,null,null)
			into STRICT	hr_primeiro_hoario_w
			;			
		else
			Select	Obter_prim_horario_Sol_regra(CASE WHEN ie_gerar_etapa_w='N' THEN  null  ELSE nr_etapas_w END , dt_prescricao_w, hr_primeiro_hoario_w)
			into STRICT	hr_primeiro_hoario_w 
			;
		end if;
	end if;
	
	IF (coalesce(ie_urgencia_presc_w,'N') = 'S') THEN
		if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
			select	max(coalesce(a.QT_MIN_AGORA, a.qt_min_intervalo))
			into STRICT	qt_min_intervalo_w
			from	intervalo_prescricao a
			where	a.cd_intervalo = cd_intervalo_w;

		end if;	
		if (qt_min_intervalo_w IS NOT NULL AND qt_min_intervalo_w::text <> '') then
			hr_primeiro_hoario_w	:= to_char(clock_timestamp() + (qt_min_intervalo_w/1440),'hh24:mi');
		else
			hr_primeiro_hoario_w	:= to_char(clock_timestamp(),'hh24:mi');
		end if;	
		
	end if;
	
	
	
	if (ie_perm_etapa_espec_w	= 'S') and (ie_etapa_espec_sol_w	= 'S') and (coalesce(ie_acm_w,'N')	<> 'S') and (coalesce(ie_se_necessario_w,'N') <> 'S') and (coalesce(ie_urgencia_presc_w,'N')	<> 'S') and (coalesce(ie_esquema_alternado_w,'N') <> 'S') and (nr_horas_validade_w	> 24) and (nr_horas_validade_w	> coalesce(qt_tempo_aplicacao_w,0)) and (coalesce(ie_tipo_sol_w,0)	<> 2) then
		ie_etapa_especial_w	:= 'S';
		nr_intervalos_w		:= nr_etapas_w + 1;
	elsif (ie_perm_etapa_espec_w	= 'S') and (ie_etapa_espec_sol_w	= 'SA') and (coalesce(ie_acm_w,'N')	<> 'S') and (coalesce(ie_se_necessario_w,'N') <> 'S') and (coalesce(ie_urgencia_presc_w,'N')	<> 'S') and (coalesce(ie_esquema_alternado_w,'N') <> 'S') and (nr_horas_validade_w	> 24) and (nr_horas_validade_w	> coalesce(qt_tempo_aplicacao_w,0)) and (coalesce(qt_tempo_aplicacao_w,0) >= 24) and (coalesce(ie_tipo_sol_w,0)	<> 2) then
		ie_etapa_especial_w	:= 'S';
		nr_intervalos_w	:= nr_etapas_w + 1;
	else
		ie_etapa_especial_w	:= 'N';
		nr_intervalos_w		:= nr_etapas_w;
	end if;
	
	
	if (ie_calculo_aut_w = 'S') or
		(hr_primeiro_hoario_w IS NOT NULL AND hr_primeiro_hoario_w::text <> '' AND hr_primeiro_hoario_w	<> '  :  ') then
		if (ie_gerar_etapa_w	<> 'N') and
			((cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') or (ie_horario_solucao_w	= 'N')) and (coalesce(cd_intervalo_p::text, '') = '') then
			nr_horas_intervalo_w	:= coalesce(qt_hora_fase_w,0);
		else
			nr_horas_intervalo_w	:= dividir(qt_tempo_aplicacao_w,nr_etapas_w);
		end if;
		
	if (ie_horario_solucao_w = 'S') then		
		if (ie_sol_intermitente_w = 'S') then
				qt_tempo_aplic_w := qt_tempo_aplicacao_w;
		else
			qt_tempo_aplic_w := 24;
	end if;
	else
		qt_tempo_aplic_w := qt_tempo_aplicacao_w;
	end if;
	
		qt_tempo_aplicacao_ww := null;
	
		if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and (coalesce(nr_horas_intervalo_w,0) > 0) and (coalesce(nr_etapas_w,0) > 0) and (coalesce(ie_etapa_interv_w,'N') = 'S') and (coalesce(Ie_arredonda_w,'N') = 'S') and (coalesce(ie_horario_solucao_w,'N') = 'N') then
		
		   qt_tempo_aplicacao_ww := nr_horas_intervalo_w * nr_etapas_w;
		end if;
		
		SELECT * FROM Calcula_Horarios_Etapas(to_date(to_char(dt_primeiro_horario_w,'dd/mm/yyyy ')|| hr_primeiro_hoario_w,'dd/mm/yyyy hh24:mi'), nr_intervalos_w, nr_horas_intervalo_w, nm_usuario_p, ie_horario_solucao_w, coalesce(qt_tempo_aplicacao_ww,qt_tempo_aplic_w), ds_horarios_w, ds_horarios_2w, ie_etapa_especial_w, 'N') INTO STRICT ds_horarios_w, ds_horarios_2w;
	
	end if;
			
	if (ie_gera_horarios_ACM_w = 'N')	and (ie_acm_w	= 'S') then
		hr_primeiro_hoario_w	:= null;
		ds_horarios_w		:= null;
	end if;
	
	if (ie_gera_horarios_SNE_w = 'N')	and (ie_se_necessario_w	= 'S') then
		hr_primeiro_hoario_w	:= null;
		ds_horarios_w		:= null;
	end if;
	
	if (VarDispositivoPadrao_w IS NOT NULL AND VarDispositivoPadrao_w::text <> '') and (coalesce(ie_bomba_infusao_w::text, '') = '') and (ie_tipo_dosagem_w = 'mlh') then	
		ie_bomba_infusao_w := VarDispositivoPadrao_w;
	elsif (coalesce(ie_bomba_infusao_w::text, '') = '') then		
		ie_bomba_infusao_w := Obter_dispositivo_solucao(cd_setor_atendimento_w, cd_perfil_w);
	end if;	
	
	if (clock_timestamp() between dt_primeiro_horario_w and dt_validade_prescr_w) then
		dt_status_w := clock_timestamp();
	else
		dt_status_w :=  dt_primeiro_horario_w;
	end if;
	
	--Calcular o qt_hora_fase
	if (coalesce(nr_etapas_w,0) > 0) and (coalesce(qt_tempo_aplicacao_w,0) > 0) and (ie_calculo_aut_w  = 'S') then
		qt_hora_fase_w := dividir_sem_round(qt_tempo_aplicacao_w,nr_etapas_w);		
	end if;
		
	if (ie_tipo_sol_w = 1) and
		((coalesce(qt_hora_infusao_w,0) > 0) or (coalesce(qt_tempo_infusao_w,0) > 0)) then
		 ie_sol_intermitente_w := 'S';
		 if (coalesce(qt_tempo_infusao_w,0) > 0) then
			qt_hora_fase_w	:= coalesce(qt_hora_infusao_w,0) + coalesce(qt_tempo_infusao_w,0) / 60;
		 else	
			qt_hora_fase_w  := coalesce(qt_hora_infusao_w,0);
		 end if;	
	end if;
	
	insert into prescr_solucao(
		nr_prescricao,
		nr_seq_solucao,
		ie_via_aplicacao,
		dt_atualizacao,
		nm_usuario,
		cd_unidade_medida,
		ie_tipo_dosagem,
		qt_dosagem,
		qt_solucao_total,
		qt_tempo_aplicacao,
		qt_volume,
		nr_etapas,
		ie_bomba_infusao,
		ie_suspenso,
	    nr_agrupamento,
		ie_esquema_alternado,
		ie_calc_aut,
		ie_acm,
		qt_hora_fase,
		ds_horarios,
		hr_prim_horario,
		ie_urgencia,
		ds_solucao,
		ie_solucao_especial,
		ie_solucao_pca,
		ie_tipo_analgesia,
		ie_pca_modo_prog,
		qt_dose_inicial_pca,
		qt_vol_infusao_pca,
		qt_bolus_pca,
		qt_intervalo_bloqueio,
		qt_limite_quatro_hora,
		qt_dose_ataque,
		ie_se_necessario,
		ds_orientacao,
		ie_tipo_sol,
		ie_status,
		dt_status,
		qt_limite_uma_hora,
		ie_um_limite_hora_pca,
		ie_um_dose_inicio_pca,
		ie_um_limite_pca,
		ie_um_fluxo_pca,
		ie_um_bolus_pca,
		cd_intervalo,
		ie_classif_agora,
		cd_protocolo,
		nr_seq_prot_rotina,
		ie_etapa_especial,
		ie_fator_correcao,
		ie_aberto,
		ie_sol_intermitente,
		qt_hora_infusao,
		qt_tempo_infusao)
	Values (		
		nr_prescricao_p,
		nr_seq_solucao_w + nr_sequencia_w,
		coalesce(ie_via_aplicacao_w,  upper(obter_via_usuario('IV'))),
		clock_timestamp(),
		nm_usuario_p,
		obter_unid_med_usua('ml'),
		ie_tipo_dosagem_w,
		qt_dosagem_w,
		qt_solucao_total_w,
		qt_tempo_aplicacao_w,
		qt_volume_w,
		CASE WHEN ie_gerar_etapa_w='N' THEN  null  ELSE nr_etapas_w END ,
		ie_bomba_infusao_w,
		'N',
		nr_agrupamento_w + nr_agrup_solucao_w,
		ie_esquema_alternado_w,
		ie_calculo_aut_w,
		ie_acm_w,
		CASE WHEN ie_gerar_etapa_w='N' THEN  null  ELSE qt_hora_fase_w END ,
		CASE WHEN coalesce(ie_informa_prim_hor_w,'S')='S' THEN ds_horarios_w  ELSE null END ,
		CASE WHEN coalesce(ie_urgencia_presc_w,'N')='S' THEN  hr_primeiro_hoario_w  ELSE CASE WHEN ie_informa_prim_hor_w='S' THEN  hr_primeiro_hoario_w  ELSE null END  END ,
		coalesce(ie_urgencia_presc_w,'N'),
		ds_solucao_W,
		coalesce(ie_solucao_especial_w,'N'),
		ie_solucao_pca_w,
		ie_tipo_analgesia_w,
		ie_pca_modo_prog_w,
		qt_dose_inicial_pca_w,
		qt_vol_infusao_pca_w,
		qt_bolus_pca_w,
		qt_intervalo_bloqueio_w,
		qt_limite_quatro_hora_w,
		qt_dose_ataque_w,
		ie_se_necessario_w,
		substr(ds_orientacao_w,1,2000),
		ie_tipo_sol_w,
		'P',
		dt_status_w,
		qt_limite_uma_hora_w,
		coalesce(ie_um_limite_hora_pca_w, obter_unid_med_usua('ml')),
		ie_um_dose_inicio_pca_w,
		ie_um_limite_pca_w,
		ie_um_fluxo_pca_w,
		ie_um_bolus_pca_w,
		cd_intervalo_w,
		cd_intervalo_w,
		cd_protocolo_ww,
		nr_seq_prot_rotina_w,
		ie_etapa_especial_w,
		ie_fator_correcao_w,
		ie_aberta_w,
		coalesce(ie_sol_intermitente_w,'N'),
		CASE WHEN coalesce(ie_sol_intermitente_w,'N')='S' THEN  coalesce(qt_hora_infusao_w,0)  ELSE null END ,
		CASE WHEN coalesce(ie_sol_intermitente_w,'N')='S' THEN  coalesce(qt_tempo_infusao_w,0)  ELSE null END );

	select	count(*)
	into STRICT 	ie_existe_prot_esq_w	
	from	protocolo_medic_sol_esq
	where	cd_protocolo	= cd_protocolo_w
	and		nr_seq_subitem	= nr_seq_medic_w
	and		nr_seq_solucao	= nr_seq_sol_w;
	
	if (ie_existe_prot_esq_w > 0) then
		insert into prescr_solucao_esquema(
			nr_sequencia,
			nr_prescricao,
			nr_seq_solucao,
			dt_atualizacao,
			nm_usuario,
			qt_volume,
			qt_dosagem,
			ds_horario)
		SELECT	
			nextval('prescr_solucao_esquema_seq'),
			nr_prescricao_p,
			nr_seq_solucao_w + nr_sequencia_w,
			clock_timestamp(),
			NM_USUARIO_P,
			qt_volume,
			qt_dosagem,
			ds_horario
		from	protocolo_medic_sol_esq
		where	cd_protocolo	= cd_protocolo_w
		and		nr_seq_subitem	= nr_seq_medic_w
		and		nr_seq_solucao	= nr_seq_sol_w; 		
	end if;
		
	qt_total_etapa_w	:= 0;
	
	cd_material_gen_w := coalesce(Obter_Subst_Generic_Medic(cd_protocolo_w, nr_seq_medic_w, nr_prescricao_p, nr_seq_sol_w), 0);
	
	OPEN C01;
	LOOP
	FETCH C01 into
		nr_seq_material_ww,
		CD_MATERIAL_w,
		CD_UNIDADE_MEDIDA_w,
		QT_DOSE_w,
		QT_SOLUCAO_w,
		IE_AGRUPADOR_w,
		DS_DOSE_DIFERENCIADA_w,
		cd_unid_med_consumo_w,
		QT_MINIMO_MULTIPLO_SOLIC_w,
		ie_se_necessario_w,
		ie_via_aplicacao_w,
		ds_recomendacao_w,
		qt_dose_peso_w,
		ds_justificativa_w,
		ie_acm_w,
		qt_dose_comp_w,
		qt_dose_rotina_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		
		if (qt_dose_rotina_w IS NOT NULL AND qt_dose_rotina_w::text <> '') and (coalesce(qt_dose_comp_w, 0) <> coalesce(qt_dose_rotina_w, 0)) and (coalesce(ie_controle_limpa_titulo_w, 'N') = 'N') then
			ie_controle_limpa_titulo_w := 'S';
		end if;

		if (cd_material_gen_w > 0) and (obter_regra_subst_com(nr_prescricao_p,cd_material_w) = cd_material_gen_w) then
			cd_material_w := cd_material_gen_w;
		end if;
		
		if (qt_dose_peso_w > 0) and (qt_peso_w > 0) then /* Oraci em 21/09/2007 OS69262 */
			qt_dose_w:= qt_dose_peso_w * qt_peso_w;
		end if;

		if (ie_esquema_alternado_w = 'S') then
			QT_DOSE_w := obter_valor_dinamico('select ('|| replace(DS_DOSE_DIFERENCIADA_w,'-','+')||') from dual ', QT_DOSE_w);
		end if;	
		
		if (qt_dose_peso_w > 0) and (coalesce(qt_peso_w,0) = 0) and (coalesce(qt_dose_w::text, '') = '') then
			--'Para esta solucao voce deve informar o peso do paciente na prescricao!');
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(181329);
		end if;

		qt_conversao_dose_w	:= obter_conversao_unid_med(cd_material_w,cd_unidade_medida_w);
		if (coalesce(qt_conversao_dose_w,0) = 0) then
			ds_material_w := obter_desc_material(cd_material_w);
			ds_unid_med_w := obter_desc_unid_med(cd_unidade_medida_w);	
			--'O medicamento '||ds_material_w||chr(13)||' nao possui valor cadastrado para  conversao em '||ds_unid_med_w);
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(181330,'DS_MATERIAL='||ds_material_w || ';DS_UNID='||ds_unid_med_w);
		end if;
		qt_unitaria_w		:= (trunc(qt_dose_w * 1000 / qt_conversao_dose_w)/ 1000);	

		/*
		Obter_Quant_Dispensar(1,cd_material_w, NR_PRESCRICAO_P, nr_seq_material_w + nr_seq_material_ww, 
					cd_intervalo_w,	ie_via_aplicacao_w, qt_unitaria_w, 0, nvl(nr_etapas_w,1),     
					'', '1', CD_UNIDADE_MEDIDA_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w); 
					
		Dalcastagne em 19/03/2009 OS 133289 */
		
					
		SELECT * FROM Obter_Quant_Dispensar(1, cd_material_w, nr_prescricao_p, nr_seq_material_w + nr_seq_material_ww, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, 1, '', '1', CD_UNIDADE_MEDIDA_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
		
		qt_dose_ml_w		:= obter_conversao_ml(cd_material_w,qt_dose_w,cd_unidade_medida_w);
		qt_solucao_w		:= qt_dose_ml_w;	
		qt_total_etapa_w	:= qt_total_etapa_w + qt_dose_ml_w;
		
		ie_loop_w	:= 'S';
		while(ie_loop_w = 'S') loop
			select	count(*)
			into STRICT	qt_itens_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_material_w + nr_seq_material_ww;
			if (qt_itens_w	= 0) then
				ie_loop_w	:= 'N';
			else	
				nr_seq_material_w	:= nr_seq_material_w + 1;
			end if;
		end loop;

		if (coalesce(qt_unitaria_w::text, '') = '') and
			((ie_solucao_especial_w = 'N') or
			 (ie_solucao_especial_w = 'S' AND ie_nova_calc_sol_w = 'N')) then
			--Nao foi informada a dose do componente e/ou a conversao de unidade do mesmo no cadastro do material!
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(181328);			
		end if;
		
		if (coalesce(Obter_se_apres_orient_mat(cd_material_w, cd_pessoa_fisica_w),'S') = 'S') then
			if (ieRecomendacao_w = 'G') then
					if (ds_recomendacao_w IS NOT NULL AND ds_recomendacao_w::text <> '') then
						ds_recomendacao_w := substr(ds_recomendacao_w ||chr(13)|| substr(obter_orientacao_medic(CD_MATERIAL_w),1,4000),1,4000);
					else
						ds_recomendacao_w := substr(obter_orientacao_medic(CD_MATERIAL_w),1,4000);
					end if;
				elsif (ieRecomendacao_w = 'F') then
					ds_observa_farm_w := substr(obter_orientacao_medic(CD_MATERIAL_w),1,2000);
			end if;	
		end if;	

		begin
		Insert into prescr_material(
			nr_prescricao,
			nr_sequencia,
			ie_origem_inf,
			cd_material,	
			cd_unidade_medida,
			cd_unidade_medida_dose,
			qt_dose,
			qt_unitaria,
			qt_material,
			dt_atualizacao,
			nm_usuario,
			cd_intervalo,
			nr_ocorrencia,
			qt_total_dispensar,
			nr_sequencia_solucao,
			qt_solucao,
			ie_agrupador,
			ds_dose_diferenciada,
			qt_conversao_dose,
			cd_motivo_baixa,
			ie_utiliza_kit,
			ie_via_aplicacao,
			ie_se_necessario,
			ds_observacao,
			ie_recons_diluente_fixo,
			cd_protocolo,
			nr_seq_protocolo,
			nr_seq_mat_protocolo,
			ie_regra_disp,
			nr_seq_sol_prot,
			ds_justificativa,
			ds_observacao_far)
		values (	
			nr_prescricao_p,
			nr_seq_material_w + nr_seq_material_ww,
			'1',
			CD_MATERIAL_w,
			cd_unid_med_consumo_w,
			CD_UNIDADE_MEDIDA_w,
			coalesce(QT_DOSE_w,0),
			coalesce(qt_unitaria_w,0),
			coalesce(qt_material_w,0),
			clock_timestamp(),
			NM_USUARIO_P,
			cd_intervalo_w,
			1,
			qt_dispensar_w,
			nr_seq_solucao_w + nr_sequencia_w,
			QT_SOLUCAO_w,
			IE_AGRUPADOR_w,
			DS_DOSE_DIFERENCIADA_w,
			qt_conversao_dose_w,
			0,
			'N',
			ie_via_aplicacao_w,
			ie_se_necessario_w,
			ds_recomendacao_w,
			'N',
			cd_protocolo_w,
			nr_seq_medic_w,
			nr_seq_material_ww,
			ie_regra_disp_w,
			nr_seq_solucao_w,
			ds_justificativa_w,
			ds_observa_farm_w);
		exception
		when others then
			if (position('PRESMAT_VIAAPLI_FK' in SQLERRM) > 0) then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(378121);		
			end if;
		end;
		
		if (VarGerarDiluicaoSol_w = 'S') then	
		      CALL Gerar_Reconst_Diluicao_Sol(nr_prescricao_p,nr_seq_material_w + nr_seq_material_ww,nr_seq_solucao_w + nr_sequencia_w,'A');
		end if;
		
		if (varGerarKitSol_w = 'S') then
			CALL Gerar_Kit_Medic_Prescricao(cd_estabelecimento_w, nr_prescricao_p, nr_seq_material_w + nr_seq_material_ww, nm_usuario_p, 'N', 'N');
		end if;
		
		if (ie_prescr_mat_sem_lib_w = 'S') then
			CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_seq_material_w + nr_seq_material_ww,cd_perfil_w,'N',nm_usuario_p,null);
		end if;			
		ds_recomendacao_w := '';
		END;	
	END LOOP;
	CLOSE C01;
	
	if (coalesce(ie_existe_prot_esq_w,0) = 0) and (ie_esquema_alternado_w = 'S') then	
		CALL Calcular_Etapas_Esquema(nr_prescricao_p, nr_seq_solucao_w + nr_sequencia_w);
	end if;
	
	/*update	Protocolo_medic_material
	set	ie_gerar_solucao	= 'S'
	where	ie_gerar_solucao	= 'N';*/
	
	if (ie_limpa_titulo_w	= 'S') then
		select	CASE WHEN count(a.nr_sequencia)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_limpa_w
		from	REP_item_excl_protocolo x,
				Protocolo_medic_material a
		where	a.nr_seq_material 	= x.nr_seq_material
		and		a.cd_protocolo	 	= x.cd_protocolo
		and		a.nr_sequencia		= x.nr_seq_item
		and		a.nr_sequencia		= nr_seq_medic_w
		and		a.nr_seq_solucao	= nr_seq_sol_w
		and		a.cd_protocolo    	= cd_protocolo_w
		and		x.nr_prescricao   	= nr_prescricao_p;

		if (ie_limpa_w	= 'S' or ie_controle_limpa_titulo_w = 'S') then
			ds_solucao_W	:= '';
		end if;
	end if;
	
	update	prescr_solucao
	set	qt_volume	= qt_total_etapa_w,
			ds_solucao	= ds_solucao_W
	where	nr_prescricao	= nr_prescricao_p
	and	nr_seq_solucao	= nr_seq_solucao_w + nr_sequencia_w;
	
	select	coalesce(max(ie_acm),'N')			
	into STRICT	ie_acm_ww
	from	prescr_solucao
	where	nr_prescricao 		= nr_prescricao_p
	and		nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;	
	
	if	((ie_acm_ww <> 'S' ) or
		(cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '' AND ie_etapa_interv_w = 'S')) and
		((ie_calculo_aut_w	= 'S') or
		(ie_cal_vol_automatico_w = 'S' AND ie_calcula_total_w <> 'A')) then

		if (qt_dosagem_w IS NOT NULL AND qt_dosagem_w::text <> '') then
	
			if (ie_calc_etapas_total_w	= 'S') and (ie_etapa_interv_w	= 'N') and (ie_tipo_sol_w = '3') then
				ie_calc_etapas_total_ww	:= 'S';
			else
				ie_calc_etapas_total_ww	:= 'N';
			end if;	
	
			SELECT * FROM Calcular_Valores_Solucao(nr_prescricao_p, nr_seq_solucao_w + nr_sequencia_w, qt_dosagem_w, ie_tipo_dosagem_w, ie_calcular_etapas_w, ie_calcula_volume_vel_w, ie_calcula_total_w, Ie_arredonda_w, nm_usuario_p, qt_tempo_aplicacao_w, qt_volume_sol_w, nr_etapas_sol_w, qt_tempo_sol_w, ie_calc_etapas_total_ww) INTO STRICT qt_volume_sol_w, nr_etapas_sol_w, qt_tempo_sol_w;
						
			if (qt_volume_sol_w IS NOT NULL AND qt_volume_sol_w::text <> '') then
				qt_solucao_total_w	:= qt_volume_sol_w;
			end if;
			if (nr_etapas_sol_w IS NOT NULL AND nr_etapas_sol_w::text <> '') then
				nr_etapas_w		:= nr_etapas_sol_w;
			end if;
			if (qt_tempo_sol_w IS NOT NULL AND qt_tempo_sol_w::text <> '') then
				qt_tempo_aplicacao_w	:= qt_tempo_sol_w;	
			end if;
			
			if (ie_gerar_etapa_w <> 'N') then
				if (ie_etapa_interv_w = 'S') then
					qt_hora_fase_w := ceil(Obter_ocorrencia_intervalo(cd_intervalo_ww,qt_tempo_aplicacao_w,'H'));
				else
					qt_hora_fase_w := dividir(qt_tempo_aplicacao_w,nr_etapas_w);
				end if;
			else
				qt_hora_fase_w := '';
			end if;
			
			if (coalesce(ie_sol_intermitente_w,'N') = 'S') then
				 if (coalesce(qt_tempo_infusao_w,0) > 0) then
					qt_hora_fase_w	:= coalesce(qt_hora_infusao_w,0) + coalesce(qt_tempo_infusao_w,0) / 60;
				 else	
					qt_hora_fase_w  := coalesce(qt_hora_infusao_w,0);
				 end if;	
			end if;
			update	prescr_solucao
			set	qt_volume		= qt_total_etapa_w,
				qt_solucao_total	= qt_solucao_total_w,
				qt_hora_fase		= qt_hora_fase_w,
				qt_dosagem		= qt_dosagem_w,
				qt_tempo_aplicacao	= qt_tempo_aplicacao_w,
				nr_etapas		= nr_etapas_w
			where	nr_prescricao 		= nr_prescricao_p
			and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;		
		
		else	
			if (ie_gerar_etapa_w <> 'N') then
				if (ie_etapa_interv_w = 'S') then
					qt_hora_fase_w := ceil(Obter_ocorrencia_intervalo(cd_intervalo_ww,qt_tempo_aplicacao_w,'H'));
				else
					qt_hora_fase_w := dividir(qt_tempo_aplicacao_w,nr_etapas_w);
				end if;
			else
				qt_hora_fase_w := '';
			end if;
			
			if (coalesce(ie_sol_intermitente_w,'N') = 'S') then
				 if (coalesce(qt_tempo_infusao_w,0) > 0) then
					qt_hora_fase_w	:= coalesce(qt_hora_infusao_w,0) + coalesce(qt_tempo_infusao_w,0) / 60;
				 else	
					qt_hora_fase_w  := coalesce(qt_hora_infusao_w,0);
				 end if;	
			end if;
			update	prescr_solucao
			set	qt_volume		= qt_total_etapa_w,
				qt_solucao_total	= CASE WHEN ie_esquema_alternado_w='S' THEN qt_total_etapa_w  ELSE qt_total_etapa_w * nr_etapas_w END ,
				qt_hora_fase		= qt_hora_fase_w
			where	nr_prescricao 		= nr_prescricao_p
			and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;

			qt_dosagem_final_w := Calcular_volume_total_solucao(	upper(ie_tipo_dosagem_w), qt_tempo_aplicacao_w, qt_total_etapa_w * nr_etapas_w, coalesce(qt_dosagem_w,0), nr_prescricao_p, nr_seq_solucao_w + nr_sequencia_w, 1, qt_dosagem_final_w, ie_arredondar_w, nr_etapas_w, ie_vel_conforme_etapa_w, qt_hora_fase_w);
			update	prescr_solucao
			set	qt_dosagem		= qt_dosagem_final_w,
				qt_hora_fase	= qt_hora_fase_w
			where	nr_prescricao 		= nr_prescricao_p
			and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;
					
		end if;	
		commit;
		
		-- Recalcular o numero de etapas de acordo com o intervalo selecionado depois de definido o tempo total da solucao.			
			if (qt_dosagem_final_w IS NOT NULL AND qt_dosagem_final_w::text <> '')  and (ie_etapa_interv_w = 'S') and (Ie_arredonda_w = 'S')	then
				SELECT * FROM Calcular_etapas_interv_solucao(cd_intervalo_ww, qt_tempo_aplicacao_w, 'S', qt_hora_fase_w, nr_etapas_w, qt_total_etapa_w, qt_dosagem_final_w) INTO STRICT qt_hora_fase_w, nr_etapas_w;
											
				update prescr_solucao
				set	  nr_etapas 		= nr_etapas_w,
					  qt_hora_fase		= qt_hora_fase_w
				where	nr_prescricao 	= nr_prescricao_p
				and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;
			end if;
		commit;
		
		select	coalesce(max(nr_etapas),0),
				coalesce(max(qt_hora_fase),0),
				coalesce(max(qt_tempo_aplicacao),0),
				coalesce(max(ie_acm),'N'),
				coalesce(max(ie_se_necessario),'N'),
				coalesce(max(hr_prim_horario),to_char(clock_timestamp(),'hh24:mi')),
				coalesce(max(ie_etapa_especial),'N')
		into STRICT	nr_etapas_w,
				nr_horas_intervalo_w,
				qt_tempo_aplicacao_w,
				ie_acm_w,
				ie_se_necessario_w,
				hr_primeiro_hoario_w,
				ie_etapa_especial_w
		from	prescr_solucao
		where	nr_prescricao 	= nr_prescricao_p
		and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;	
				
		if (ie_etapa_especial_w	= 'S') then
				nr_intervalos_w := nr_etapas_w	+ 1;
		else
				nr_intervalos_w := nr_etapas_w;		
		end if;	
				
		if (ie_horario_solucao_w = 'S') then
			if (ie_sol_intermitente_w = 'S') then
				qt_tempo_aplic_w := qt_tempo_aplicacao_w;
			else
				qt_tempo_aplic_w := 24;
			end if;
		else
			qt_tempo_aplic_w := qt_tempo_aplicacao_w;
		end if;
		
		qt_tempo_aplicacao_ww := null;
		
		if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and (coalesce(nr_horas_intervalo_w,0) > 0) and (coalesce(nr_etapas_w,0) > 0) and (coalesce(ie_etapa_interv_w,'N') = 'S') and (coalesce(Ie_arredonda_w,'N') = 'S') and (coalesce(ie_horario_solucao_w,'N') = 'N') then
		
		   qt_tempo_aplicacao_ww := nr_horas_intervalo_w * nr_etapas_w;
		end if;
		
		SELECT * FROM Calcula_Horarios_Etapas(to_date(to_char(dt_primeiro_horario_w,'dd/mm/yyyy ')|| hr_primeiro_hoario_w,'dd/mm/yyyy hh24:mi'), nr_intervalos_w, nr_horas_intervalo_w, nm_usuario_p, ie_horario_solucao_w, coalesce(qt_tempo_aplicacao_ww,qt_tempo_aplic_w), ds_horarios_w, ds_horarios_2w, ie_etapa_especial_w, 'N') INTO STRICT ds_horarios_w, ds_horarios_2w;
											
		if (ie_gera_horarios_ACM_w = 'N')	and (ie_acm_w	= 'S') then
			hr_primeiro_hoario_w	:= null;
			ds_horarios_w		:= null;
			ds_horarios_2w		:= null;
		end if;
	
		if (ie_gera_horarios_SNE_w = 'N')	and (ie_se_necessario_w	= 'S') then
			hr_primeiro_hoario_w	:= null;
			ds_horarios_w		:= null;
			ds_horarios_2w		:= null;
		end if;	

		if (coalesce(ie_informa_prim_hor_w,'S') = 'N') then
			ds_horarios_w		:= null;
			ds_horarios_2w		:= null;
		end if;	

		ds_horarios_ww := substr(ds_horarios_w ||ds_horarios_2w,1,2000);
		
		update	prescr_solucao
		set		ds_horarios		= ds_horarios_ww
		where	nr_prescricao 	= nr_prescricao_p
		and	nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;	
		commit;						
		
	end if;
	
	
	if (coalesce(ie_aberta_w,'N') = 'S') then
		update	prescr_solucao
		set	nr_etapas		     	= 1,
			qt_tempo_aplicacao		= '',
			qt_hora_fase			= ''
		where	nr_prescricao 		= nr_prescricao_p
		and		nr_seq_solucao		= nr_seq_solucao_w + nr_sequencia_w;
	end if;
		
	CALL Reordenar_Solucoes(nr_prescricao_p);

	open C02;
	loop
	fetch C02 into
		nr_seq_solucao_ww;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		CALL Ajustar_Prescr_Mat_Solucao(nr_prescricao_p, nr_seq_solucao_ww);
	end loop;
	close C02;
	--end;

--end loop;
end if;

open C02;
loop
fetch C02 into	
	nr_seq_solucao_ww;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	ds_erro_ww := Consistir_prescr_solucao(nr_prescricao_p, nr_seq_solucao_ww, cd_estabelecimento_w, cd_perfil_w, nm_usuario_p, ds_erro_ww);
				
	open c03;
	loop
	fetch c03 into	
		nr_seq_material_ww;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		ds_erro_ww := Consistir_prescr_material(nr_prescricao_p, nr_seq_material_ww, nm_usuario_p, cd_perfil_w, ds_erro_ww);
		end;
	end loop;
	close c03;
	end;
end loop;
close C02;
commit;

/* Alan OS 275735
delete from W_Item_prescr
where 	nr_prescricao	= nr_prescricao_p
and 	ie_origem_inf	= 'SOL';

commit;*/
if (ie_solucao_pca_w = 'S') then
	update	prescr_solucao
	set	qt_volume	       = NULL,
		qt_solucao_total	       = NULL,
		qt_hora_fase	       = NULL,
		qt_tempo_aplicacao       = NULL,
		nr_etapas		       = NULL,
		ie_solucao_especial      = 'N',
		ie_esquema_alternado  = 'N',
		ie_calc_aut	      = 'N',
		ie_bomba_infusao	      = 'P'
	where	nr_prescricao 	      = nr_prescricao_p
	and	nr_seq_solucao	      = nr_seq_solucao_w + nr_sequencia_w;	
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_solucao_rotina ( ds_lista_solucao_p text, cd_protocolo_p bigint default null, nr_seq_solucao_p bigint default null, nr_sequencia_p bigint default null, cd_intervalo_p text default null, qt_dosagem_p bigint DEFAULT NULL, ie_tipo_dosagem_p text DEFAULT NULL, nr_prescricao_p bigint DEFAULT NULL, nm_usuario_p text DEFAULT NULL, nr_etapas_p bigint DEFAULT NULL, cd_funcao_p bigint DEFAULT NULL, ds_orientacao_p text DEFAULT NULL, qt_tempo_aplicacao_p text default null, qt_tempo_hora_p text DEFAULT NULL, qt_tempo_minuto_p text DEFAULT NULL) FROM PUBLIC;

