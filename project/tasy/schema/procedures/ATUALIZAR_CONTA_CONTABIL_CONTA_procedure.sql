-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_conta_contabil_conta ( nr_interno_conta_p bigint, ie_somente_nula_p text) AS $body$
DECLARE


dt_atualizacao_w				timestamp := clock_timestamp();
nr_sequencia_w				bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
cd_estabelecimento_w			smallint;
cd_estab_setor_w				smallint;
cd_setor_atendimento_w			integer;
cd_material_w				integer;
ie_tipo_atendimento_w			smallint;
cd_conta_contabil_w			varchar(40);
cd_centro_custo_w				bigint;
ie_classif_contabil_w			varchar(01);
ie_estabelecimento_conta_w			varchar(01);
cd_convenio_w				integer;
cd_categoria_w				varchar(10);
ie_clinica_w				integer;
cd_local_estoque_w			smallint;
dt_atendimento_w				timestamp;
dt_procedimento_w				timestamp;
ie_tipo_convenio_w				smallint;
cd_plano_w				varchar(10);
cd_estab_logado_w			smallint;
ie_regra_pacote_ctb_w			varchar(1);
ie_complexidade_sus_w		varchar(2);
ie_tipo_financ_sus_w		varchar(4);
ie_contab_rec_proc_aih_w	varchar(1);
nr_aih_w			bigint;
cd_proced_aih_unif_w		varchar(255);
cd_conta_contab_aih_w		varchar(20);
nr_seq_proc_interno_w	procedimento_paciente.nr_seq_proc_interno%type;
cd_sequencia_parametro_w	procedimento_paciente.cd_sequencia_parametro%type;
cd_sequencia_parametro_ww   procedimento_paciente.cd_sequencia_parametro%type;

c01 CURSOR FOR
SELECT	nr_sequencia,
	cd_procedimento,
	ie_origem_proced,
	cd_setor_atendimento,
	cd_convenio,
	cd_categoria,
	dt_procedimento,
	substr(CASE WHEN coalesce(nr_seq_proc_pacote,0)=0 THEN 'N'  ELSE 'S' END ,1,1) ie_regra_pacote,
	nr_seq_proc_interno
from	procedimento_paciente
where	nr_interno_conta = nr_interno_conta_p
and	((ie_somente_nula_p = 'N') or (coalesce(cd_conta_contabil::text, '') = ''));

c02 CURSOR FOR
SELECT	nr_sequencia,
	cd_material,
	cd_setor_atendimento,
	cd_convenio,
	cd_categoria,
	dt_atendimento,
	substr(CASE WHEN coalesce(nr_seq_proc_pacote,0)=0 THEN 'N'  ELSE 'S' END ,1,1) ie_regra_pacote
from	material_atend_paciente
where	nr_interno_conta = nr_interno_conta_p
and	((ie_somente_nula_p = 'N') or (coalesce(cd_conta_contabil::text, '') = ''));


BEGIN

begin
select	b.cd_estabelecimento,
	b.ie_tipo_atendimento,
	c.ie_classif_contabil,
	b.ie_clinica,
	c.ie_tipo_convenio
into STRICT	cd_estabelecimento_w,
	ie_tipo_atendimento_w,
	ie_classif_contabil_w,
	ie_clinica_w,
	ie_tipo_convenio_w
from	Convenio c,
	atendimento_paciente b,
	conta_paciente a
where	a.nr_atendimento 		= b.nr_atendimento
and	a.nr_interno_conta		= nr_interno_conta_p
and	a.cd_convenio_parametro	= c.cd_convenio;
exception when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(173182,nr_interno_conta_p);

	/*antiga msg 'Nao existe os dados Estabelecimento/Tipo Atendimento/Classificacao contabil/Clinica' || chr(13) ||
					'no atendimento da conta: ' || nr_interno_conta_p);*/
end;

select 	wheb_usuario_pck.get_cd_estabelecimento
into STRICT	cd_estab_logado_w
;
	
select	coalesce(max(ie_estabelecimento_conta), 'A'),
	coalesce(max(ie_contab_rec_proc_aih),'N')
into STRICT	ie_estabelecimento_conta_w,
	ie_contab_rec_proc_aih_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estab_logado_w;

if (ie_estabelecimento_conta_w = 'L') then
	cd_estabelecimento_w:= cd_estab_logado_w;
end if;

select	coalesce(max(ie_estabelecimento_conta), 'A'),
	coalesce(max(ie_contab_rec_proc_aih),'N')
into STRICT	ie_estabelecimento_conta_w,
	ie_contab_rec_proc_aih_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

select	max(cd_plano_convenio)
into STRICT	cd_plano_w
from	conta_paciente b,
	atend_categoria_convenio a
where	a.nr_atendimento	= b.nr_atendimento
and	b.nr_interno_conta	= nr_interno_conta_p
and	obter_atecaco_atendimento(b.nr_atendimento) = a.nr_seq_interno;

cd_conta_contab_aih_w	:= '';

open c01;
loop
	fetch c01 into
		nr_sequencia_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		cd_setor_atendimento_w,
		cd_convenio_w,
		cd_categoria_w,
		dt_procedimento_w,
		ie_regra_pacote_ctb_w,
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	cd_sequencia_parametro_w := null;
	
	select	max(cd_estabelecimento_base)
	into STRICT	cd_estab_setor_w
	from	setor_atendimento
	where	cd_setor_atendimento = cd_setor_atendimento_w;	
	
	/* Matheus OS96255  12/06/08  Deve considerar a regra porque se o estab da conta for diferente do estab atendimento contabiliza no estab errado*/

	if (ie_estabelecimento_conta_w = 'S') and (cd_estab_setor_w <> cd_estabelecimento_w) then
		cd_estabelecimento_w	:= cd_estab_setor_w;
	end if;
	
	cd_centro_custo_w	:= null;
	
	begin
	/*APAC*/

	ie_complexidade_sus_w	:= substr(sus_obter_dados_apac_conta(nr_interno_conta_p, 'CX','C'),1,2);
	ie_tipo_financ_sus_w	:= substr(sus_obter_dados_apac_conta(nr_interno_conta_p, 'TF','C'),1,4);
	/*AIH*/

	if (coalesce(ie_complexidade_sus_w::text, '') = '') and (coalesce(ie_tipo_financ_sus_w::text, '') = '') then
		ie_complexidade_sus_w	:= substr(sus_obter_complexidade_aih(nr_interno_conta_p),1,2);
		ie_tipo_financ_sus_w	:= substr(sus_obter_tipo_financ_aih(nr_interno_conta_p),1,4);
		
		select	max(ie_complexidade),
			max(ie_tipo_financiamento)
		into STRICT	ie_complexidade_sus_w,
			ie_tipo_financ_sus_w
		from	sus_aih_unif
		where	nr_interno_conta	= nr_interno_conta_p;
		
	end if;
	/*Demais procedimentos*/

	if (coalesce(ie_complexidade_sus_w::text, '') = '') and (coalesce(ie_tipo_financ_sus_w::text, '') = '') then
		select	ie_complexidade,
			ie_tipo_financiamento
		into STRICT	ie_complexidade_sus_w,
			ie_tipo_financ_sus_w
		from	sus_procedimento
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w  LIMIT 1;
	end if;
	exception when others then
		ie_complexidade_sus_w	:= null;
		ie_tipo_financ_sus_w	:= null;
	end;
	
	SELECT * FROM define_conta_procedimento(
		cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_contabil_w, ie_tipo_atendimento_w, ie_tipo_convenio_w, cd_convenio_w, cd_categoria_w, dt_procedimento_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, ie_regra_pacote_ctb_w, ie_complexidade_sus_w, ie_tipo_financ_sus_w, null, null, null, null, null, nr_seq_proc_interno_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
	
	cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();
		
	if (ie_contab_rec_proc_aih_w = 'S') then
		nr_aih_w	:= sus_obter_aihunif_conta(nr_interno_conta_p);
	end if;
	
	if (ie_contab_rec_proc_aih_w = 'S') and (coalesce(nr_aih_w,0) <> 0) then
		begin
		cd_proced_aih_unif_w	:= sus_obter_proced_aih_unif(nr_interno_conta_P,2,'C');
		end;
	end if;
	
	if (ie_contab_rec_proc_aih_w = 'S') and (coalesce(nr_aih_w,0) <> 0) and (cd_procedimento_w = cd_proced_aih_unif_w) and (coalesce(cd_conta_contabil_w,'X') <> 'X') then
		begin
		cd_conta_contab_aih_w	:= cd_conta_contabil_w;
		end;
	end if;
	
	update	procedimento_paciente
	set	cd_conta_contabil 	= cd_conta_contabil_w,
		cd_centro_custo_receita	= CASE WHEN cd_centro_custo_w=0 THEN null  ELSE cd_centro_custo_w END ,
		cd_sequencia_parametro = cd_sequencia_parametro_w
	where	nr_sequencia 	= nr_sequencia_w;
	end;
	
end loop;
close c01;

if (ie_contab_rec_proc_aih_w = 'S') and (coalesce(cd_conta_contab_aih_w,'X') <> 'X') then
	begin
	update	procedimento_paciente
	set	cd_conta_contabil	= cd_conta_contab_aih_w,
	cd_sequencia_parametro  = cd_sequencia_parametro_w
	where	nr_interno_conta	= nr_interno_conta_p
	and	((ie_somente_nula_p = 'N') or (coalesce(cd_conta_contabil::text, '') = ''));
	end;
end if;

open c02;
loop
	fetch c02 into
		nr_sequencia_w,
		cd_material_w,
		cd_setor_atendimento_w,
		cd_convenio_w,
		cd_categoria_w,
		dt_atendimento_w,
		ie_regra_pacote_ctb_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	cd_sequencia_parametro_ww := null;
	
	SELECT * FROM Define_Conta_Material(
		cd_estabelecimento_w, cd_material_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_contabil_w, ie_tipo_atendimento_w, ie_tipo_convenio_w, cd_convenio_w, cd_categoria_w, cd_local_estoque_w, null, dt_atendimento_w, cd_conta_Contabil_w, cd_centro_custo_w, cd_plano_w, ie_regra_pacote_ctb_w) INTO STRICT cd_conta_Contabil_w, cd_centro_custo_w;
	
	cd_sequencia_parametro_ww := philips_contabil_pck.get_parametro_conta_contabil();

	update	material_atend_paciente
	set	cd_conta_contabil 	= cd_conta_contabil_w,
	cd_sequencia_parametro  = cd_sequencia_parametro_ww
	where	nr_sequencia 	= nr_sequencia_w;
	end;
end loop;
close c02;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_conta_contabil_conta ( nr_interno_conta_p bigint, ie_somente_nula_p text) FROM PUBLIC;

