-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_status_agecons ( cd_agenda_p bigint, nr_seq_agenda_p bigint, ie_status_p text, cd_motivo_p text, ds_motivo_p text, ie_agenda_dia_p text, nm_usuario_p text, nr_seq_forma_conf_p bigint, ie_before_cons_allowed_p text default 'N') AS $body$
DECLARE


dt_agenda_w					timestamp;
dt_agenda_prox_w					timestamp;
dt_agenda_prox_ww				timestamp;
dt_agenda_aux_w					timestamp;
nr_minuto_w					bigint;
ie_status_w					varchar(3);
cd_pf_w						varchar(10);
ds_erro_w					varchar(255);
ie_motivo_col_pac_w			varchar(03);	
cd_estabelecimento_w		smallint;				
ie_cancelar_agend_bloq_w	varchar(1);
nr_atendimento_w			bigint;
ie_permite_exec_atend_w		varchar(1);
ie_exige_motivo_canc_w		varchar(1);
ie_gerar_alerta_falta_w		varchar(1);
cd_tipo_agenda_w			bigint;
qt_horario_w				bigint;
qt_hor_cancel_w				bigint;
qt_hor_falta_w				bigint;
qt_registros_w				bigint;
ie_agenda_web_w				varchar(1);
ie_classif_agenda_w			varchar(5);
cd_agenda_w					bigint;
nm_medico_w					varchar(60);
ds_mensagem_w				varchar(255);
ie_gerar_lanc_aut_exec_w	varchar(1)	:= 'N';
ie_encaixe_w				varchar(1);
nr_seq_agenda_w				agenda_consulta.nr_sequencia%type;
cd_procedimento_w			bigint;
qt_total_secao_w			smallint;
nr_secao_atual_w			smallint;
nr_controle_secao_w			bigint;
ie_recalcula_sessao_atual_w	varchar(1);
ds_especialidade_w		varchar(40);
ie_falta_w			varchar(30);
dt_atend_medico_w		timestamp;
nr_seq_motivo_falta_w	agenda_consulta.nr_seq_motivo_falta%type;
ie_canc_autor_agen_cons_w	parametro_Faturamento.ie_canc_autor_agen_cons%type;
nr_seq_estagio_cancel_w		estagio_autorizacao.nr_sequencia%type;
nr_sequencia_autor_w		autorizacao_convenio.nr_sequencia%type;
ie_cancela_ageint_w	varchar(1);
nr_seq_status_w		bigint;
nr_seq_agenda_int_w	bigint;
nr_seq_opm_w bigint;
dt_prov_ter_w	timestamp;
ie_atualizar_dt_fim_cons_w	varchar(1);	
ie_status_old_w				varchar(50);
dt_inicio_observacao_w		timestamp;
dt_fim_observacao_w			timestamp;
ds_insert_w 		varchar(1);

nm_paciente_w			agenda_consulta.nm_paciente%type;
ie_altera_status_confirmada_w parametro_agenda.ie_altera_status_confirmada%type;
nr_conta_w      bigint;
ie_diario_w	 			agenda_consulta.IE_SESSAO_DIARIAMENTE%type;
ie_final_semana_w		agenda_consulta.IE_SESSAO_FINAL_SEMANA%type;
qt_intervalo_w			agenda_consulta.QT_SESSAO_INTERVALO%type;
ds_dias_w				varchar(255);
ie_copiar_proced_w		agenda_consulta.IE_SESSAO_COPIAR_PROCED%type;
ie_copiar_proced_adic_w	agenda_consulta.IE_SESSAO_COPIAR_PROCED_ADIC%type;
ie_cancel_evolucao_schedule_w     varchar(1);
ie_pre_cons_del_allowed_w         varchar(1);
cd_evolucao_w                     bigint;

--Recalcular as sessoes do paciente, caso algum agendamento tiver seu status definido como Falta/Falta justificada
C01 CURSOR FOR
	SELECT	a.nr_sequencia,
			coalesce(a.nr_secao, 0)
	from	agenda_consulta a,
			agenda b
	where	a.cd_agenda				= b.cd_agenda
	and		b.cd_tipo_agenda		= 5
	and		b.ie_situacao			= 'A'
	and		b.cd_estabelecimento	= cd_estabelecimento_w
	and		a.cd_pessoa_fisica		= cd_pf_w
	and		a.dt_agenda				> dt_agenda_w
	and		((a.cd_procedimento		= cd_procedimento_w) or (coalesce(a.cd_procedimento::text, '') = ''))
	and		(a.qt_total_secao IS NOT NULL AND a.qt_total_secao::text <> '')
	and		(a.nr_secao IS NOT NULL AND a.nr_secao::text <> '')
	and		a.qt_total_secao		<= qt_total_secao_w
	and		a.nr_controle_secao		= nr_controle_secao_w
	and		a.nr_sequencia			<> nr_seq_agenda_p
	and		a.ie_status_agenda		not in ('C', 'B', 'L', 'II')
	order by 1;


BEGIN

select	max(cd_estabelecimento),
		max(cd_tipo_agenda),
		coalesce(max(a.ie_lanc_aut_exec),'N'),
		coalesce(max(b.ie_encaixe),'N')
into STRICT	cd_estabelecimento_w,
		cd_tipo_agenda_w,
		ie_gerar_lanc_aut_exec_w,
		ie_encaixe_w
from	agenda a,
		agenda_consulta b
where 	a.cd_agenda	= b.cd_agenda
and		b.nr_sequencia	= nr_seq_agenda_p;

ie_motivo_col_pac_w := Obter_Param_Usuario(821, 75, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_motivo_col_pac_w);
ie_cancelar_agend_bloq_w := Obter_Param_Usuario(821, 134, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cancelar_agend_bloq_w);
ie_permite_exec_atend_w := Obter_Param_Usuario(821, 175, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_exec_atend_w);
ie_exige_motivo_canc_w := Obter_Param_Usuario(821, 15, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_exige_motivo_canc_w);
ie_gerar_alerta_falta_w := Obter_Param_Usuario(821, 363, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_alerta_falta_w);
ie_recalcula_sessao_atual_w := Obter_Param_Usuario(866, 244, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_recalcula_sessao_atual_w);
ie_atualizar_dt_fim_cons_w := obter_param_usuario(281, 817, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualizar_dt_fim_cons_w);
ie_cancel_evolucao_schedule_w := obter_param_usuario(281, 1646, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_cancel_evolucao_schedule_w);
ie_pre_cons_del_allowed_w := obter_param_usuario(49, 2314, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_pre_cons_del_allowed_w);

if (cd_tipo_agenda_w = 5) then
	ie_exige_motivo_canc_w	:= 'N';
end if;

select	coalesce(max(ie_canc_autor_agen_cons),'N')
into STRICT	ie_canc_autor_agen_cons_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_status_p in ('AC','RC','RA')) then
	select 	coalesce(max(ie_altera_status_confirmada),'N')
	into STRICT 	ie_altera_status_confirmada_w
	from 	parametro_agenda
	where	cd_estabelecimento = obter_estabelecimento_ativo;
end if;

if (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (ie_status_p IS NOT NULL AND ie_status_p::text <> '') then
	
	if (ie_status_p = 'B') then

		select	max(dt_agenda),
			max(nr_minuto_duracao),
			coalesce(max(ie_status_agenda),ie_status_p),
			max(cd_pessoa_fisica),
			max(nr_atendimento)
		into STRICT	dt_agenda_w,
				nr_minuto_w,
				ie_status_w,
				cd_pf_w,
				nr_atendimento_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;

		if (ie_status_w = 'B') then

			update	agenda_consulta
			set	ie_status_agenda	= 'L',
				dt_status		 = NULL,
				nm_usuario_status	 = NULL,
				ds_motivo_status	 = NULL,
				nr_seq_motivo_transf	 = NULL,
				ie_bloqueado_manual	= 'N',
				nm_usuario		= nm_usuario_p,
				nm_paciente		 = NULL,
				dt_agendamento		 = NULL
			where	nr_sequencia	= nr_seq_agenda_p
			and	coalesce(dt_horario_forcado::text, '') = '';

			update	agenda_consulta
			set	ie_status_agenda	= 'LF',
				dt_status		 = NULL,
				nm_usuario_status	 = NULL,
				ds_motivo_status	 = NULL,
				nr_seq_motivo_transf	 = NULL,
				ie_bloqueado_manual	= 'N',
				nm_usuario		= nm_usuario_p,
				nm_paciente		 = NULL,
				dt_agendamento		 = NULL
			where	nr_sequencia	= nr_seq_agenda_p
			and	(dt_horario_forcado IS NOT NULL AND dt_horario_forcado::text <> '');
			
			
			if (ie_cancelar_agend_bloq_w = 'S') and
				((obter_existe_agend_esp(cd_agenda_p,dt_agenda_w,nr_minuto_w) = 'S') or (obter_existe_agend_turno_cons(cd_agenda_p,dt_agenda_w,nr_minuto_w) = 'S')) then
				
				update	agenda_consulta
				set	ie_status_agenda		= 'C',
					nm_usuario_status		= nm_usuario_p,
					dt_status			= clock_timestamp(),
					ds_motivo_status		= ds_motivo_p,
					cd_motivo_cancelamento		= cd_motivo_p,
					nm_usuario			= nm_usuario_p
				where	nr_sequencia			= nr_seq_agenda_p;

				if (ie_pre_cons_del_allowed_w = 'S' and ie_before_cons_allowed_p = 'S') then
					CALL cpoe_exam_update_delete(nr_seq_agenda_p);
				end if;

			end if;
			
		else

			update	agenda_consulta
			set	ie_status_agenda	= 'B',
				dt_status		= clock_timestamp(),
				nm_usuario_status	= nm_usuario_p,
				ds_motivo_status	= ds_motivo_p,				
				nr_seq_motivo_transf	= cd_motivo_p,
				nm_usuario		= nm_usuario_p,
        nm_paciente		= substr(CASE WHEN ie_motivo_col_pac_w='S' THEN  obter_desc_expressao(302715) || ' (' || ds_motivo_p || ')'  ELSE obter_desc_expressao(343191) END ,1,80),
				ie_bloqueado_manual	= 'S'
			where	nr_sequencia	= nr_seq_agenda_p
			and	ie_status_agenda	in ('L','LF');

		end if;

	elsif (ie_status_p = 'C') then

		select	max(dt_agenda),
			max(nr_minuto_duracao),
			coalesce(max(ie_status_agenda),ie_status_p),
			max(cd_pessoa_fisica),
			coalesce(max(ie_agenda_web),'N'),
			coalesce(max(nr_seq_opm),0)
		into STRICT	dt_agenda_w,
			nr_minuto_w,
			ie_status_w,
			cd_pf_w,
			ie_agenda_web_w,
			nr_seq_opm_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;
		
		select	count(*)
		into STRICT	qt_registros_w
		from	agenda_integrada_item
		where	nr_seq_agenda_cons = nr_seq_agenda_p;
		

		if (ie_status_w = 'C') then

			ds_erro_w := consistir_horario_agecons(cd_agenda_p, dt_agenda_w, nr_minuto_w, 'S', ds_erro_w);

			if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
				--rais1e1r1ror(-20011,ds_erro_w||'#@#@');
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199345,'DS_MSG=' || ds_erro_w);
			else
		
				select	coalesce(max(PKG_DATE_UTILS.extract_field('SECOND', dt_agenda)),0)+1
				into STRICT	qt_hor_cancel_w
				from	agenda_consulta
				where	cd_agenda = cd_agenda_p
				and	to_date(to_char(dt_agenda,'dd/mm/yyyy hh24:mi') || ':00', 'dd/mm/yyyy hh24:mi:ss') = to_date(to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi') || ':00', 'dd/mm/yyyy hh24:mi:ss')
				and	ie_status_agenda = 'C';
		
				update	agenda_consulta
				set	ie_status_agenda		= 'N',
					dt_agenda			= to_date(to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi') || ':00','dd/mm/yyyy hh24:mi:ss'),
					nm_usuario_status		 = NULL,
					dt_status			 = NULL,
					ds_motivo_status		 = NULL,
					cd_motivo_cancelamento	 = NULL,
					nm_usuario			= nm_usuario_p,
					nm_usuario_cancelamento		 = NULL,
					dt_cancelamento			 = NULL
				where	nr_sequencia			= nr_seq_agenda_p;
				
                if (nr_seq_opm_w > 0) then
					select count(*)
					  into STRICT nr_conta_w 
					  from agenda_consulta ac
					where ac.IE_STATUS_AGENDA = 'C'
					  and ac.NR_SEQ_OPM = nr_seq_opm_w
				      and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(ac.dt_Agenda) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_w)
					  and ac.nr_sequencia <> nr_seq_agenda_p;
					if (nr_conta_w = 0) then
						CALL gravar_status_op_opm(nr_seq_opm_w,'RCA',cd_agenda_p ,nm_usuario_p, cd_estabelecimento_w);			
					end if;
				end if;
				
			end if;

			CALL cancelar_lista_espera(nr_seq_agenda_p, nm_usuario_p, null, 'S');
		
		else
			if (ie_exige_motivo_canc_w = 'S') and
				((cd_motivo_p IS NOT NULL AND cd_motivo_p::text <> '') or (qt_registros_w > 0) or (ie_agenda_web_w = 'S')) then
			
				update	agenda_consulta
				set	dt_agenda	 = dt_agenda + 1/86400
				where	cd_agenda	 = cd_agenda_p
				--and	trunc(dt_agenda) = trunc(dt_agenda_w)
               	and   	dt_agenda between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_w) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_agenda_w)
				and	to_char(dt_agenda,'hh24:mi') = to_char(dt_agenda_w,'hh24:mi')
				and	ie_status_agenda = 'C';
				
				select	coalesce(max(PKG_DATE_UTILS.extract_field('SECOND', dt_Agenda)),0)+1
				into STRICT	qt_hor_cancel_w
				from	agenda_consulta
				where	cd_agenda = cd_agenda_p
				and   	dt_agenda between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_w) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_agenda_w)
				and	to_date(to_char(dt_agenda,'dd/mm/yyyy hh24:mi') || ':00', 'dd/mm/yyyy hh24:mi:ss') = to_date(to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi') || ':00', 'dd/mm/yyyy hh24:mi:ss')
				and	ie_status_agenda = 'C';
			
				update	agenda_consulta
				set	ie_status_agenda		= 'C',
					dt_Agenda			= dt_agenda + qt_hor_cancel_w / 86400,
					nm_usuario_status		= nm_usuario_p,
					dt_status			= clock_timestamp(),
					ds_motivo_status		= ds_motivo_p,
					cd_motivo_cancelamento	= cd_motivo_p,
					nm_usuario			= nm_usuario_p,
					nm_usuario_cancelamento		= nm_usuario_p,
					dt_cancelamento			= clock_timestamp()
				where	nr_sequencia			= nr_seq_agenda_p;
				if ( ie_cancel_evolucao_schedule_w = 'S') then
                        select coalesce(max(cd_evolucao),0) into STRICT cd_evolucao_w
                        from AGENDA_CONSULTA_ADIC where NR_SEQ_AGENDA = nr_seq_agenda_p;
                        if (cd_evolucao_w > 0) then
                        delete from clinical_note_soap_data where cd_evolucao = cd_evolucao_w and ie_med_rec_type ='CONS_SCHD' and ie_stage = 1 and ie_soap_type = 'P' and nr_seq_med_item = nr_seq_agenda_p;
                        CALL clinical_notes_pck.SOAP_DATA_AFTER_DELETE(cd_evolucao_w);
                        end if;
                end if;
				if (ie_pre_cons_del_allowed_w = 'S' and ie_before_cons_allowed_p = 'S') then
					CALL cpoe_exam_update_delete(nr_seq_agenda_p);
				end if;
				CALL cancelar_lista_espera(nr_seq_agenda_p, nm_usuario_p, cd_motivo_p);
				
                if (nr_seq_opm_w > 0) then
					select count(*)
					  into STRICT nr_conta_w 
					  from agenda_consulta ac
					where ac.IE_STATUS_AGENDA <> 'C'
					  and ac.NR_SEQ_OPM = nr_seq_opm_w
					  and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(ac.dt_Agenda) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_w)
					  and ac.nr_sequencia <> nr_seq_agenda_p;
					if (nr_conta_w = 0)  then
						CALL gravar_status_op_opm(nr_seq_opm_w,'CAA',cd_agenda_p ,nm_usuario_p, cd_estabelecimento_w);			
					end if;
				end if;

				if (ie_canc_autor_agen_cons_w = 'S') then
					
					select	coalesce(max(a.nr_sequencia),0)
					into STRICT	nr_sequencia_autor_w
					from	autorizacao_convenio a
					where	a.nr_seq_agenda_consulta = nr_seq_agenda_p;
					
					if (nr_sequencia_autor_w > 0) then
						
						select	coalesce(max(x.nr_sequencia),0)
						into STRICT	nr_seq_estagio_cancel_w
						from	estagio_autorizacao x
						where	x.ie_interno = '70'
						and	coalesce(x.ie_situacao,'A') = 'A'
						and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = x.cd_empresa;
						
						if (nr_seq_estagio_cancel_w > 0) then
							CALL atualizar_autorizacao_convenio(nr_sequencia_autor_w,nm_usuario_p,nr_seq_estagio_cancel_w,'N','N','S');
						end if;
						
					end if;
					
				end if; 				
				select	count(*)
				into STRICT	qt_registros_w
				from	agenda_integrada_item
				where	nr_seq_agenda_cons = nr_seq_agenda_p;
				
				if (qt_registros_w	> 0) then
					begin
					
					select	max(nr_seq_agenda_int)
					into STRICT	nr_seq_agenda_int_w
					from	agenda_integrada_item
					where	nr_seq_agenda_cons = nr_seq_agenda_p;

					ie_cancela_ageint_w := Ageint_Obter_Se_Cancel_Agenda(nr_seq_agenda_int_w);			
					if (ie_cancela_ageint_w = 'S') then
						select	min(nr_sequencia)
						into STRICT	nr_seq_status_w
						from 	agenda_integrada_status 
						where	ie_situacao = 'A' 
						and 	ie_Status_tasy = 'CA';

						update	agenda_integrada
						set		nr_seq_status	= nr_seq_status_w,
								dt_cancelamento	= clock_timestamp()
						where	nr_sequencia	= nr_seq_agenda_int_w;
						
					end if;	

					delete	FROM ageint_marcacao_usuario
					where	nr_seq_agenda	= nr_seq_agenda_p;					
					end;
				end if;		
				
			
			elsif (ie_exige_motivo_canc_w = 'N') then
			
				update	agenda_consulta
				set	dt_agenda	 = dt_agenda + 1/86400
				where	cd_agenda	 = cd_agenda_p
				--and	trunc(dt_agenda) = trunc(dt_agenda_w)
    			and   	dt_agenda between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_w) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_agenda_w)
				and	to_char(dt_agenda,'hh24:mi') = to_char(dt_agenda_w,'hh24:mi')
				and	ie_status_agenda = 'C';
				
				select	coalesce(max(PKG_DATE_UTILS.extract_field('SECOND', dt_Agenda)),0)+1
				into STRICT	qt_hor_cancel_w
				from	agenda_consulta
				where	cd_agenda = cd_agenda_p
				and   	dt_agenda between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_w) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_agenda_w)
				and	to_date(to_char(dt_agenda,'dd/mm/yyyy hh24:mi') || ':00', 'dd/mm/yyyy hh24:mi:ss') = to_date(to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi') || ':00', 'dd/mm/yyyy hh24:mi:ss')
				and	ie_status_agenda = 'C';
			
				update	agenda_consulta
				set	ie_status_agenda		= 'C',
					dt_Agenda			= dt_agenda + qt_hor_cancel_w / 86400,
					nm_usuario_status		= nm_usuario_p,
					dt_status			= clock_timestamp(),
					ds_motivo_status		= ds_motivo_p,
					cd_motivo_cancelamento	= cd_motivo_p,
					nm_usuario			= nm_usuario_p,
					nm_usuario_cancelamento		= nm_usuario_p,
					dt_cancelamento			= clock_timestamp()
				where	nr_sequencia			= nr_seq_agenda_p;
                if ( ie_cancel_evolucao_schedule_w = 'S') then
                    select coalesce(max(cd_evolucao),0) into STRICT cd_evolucao_w
                    from AGENDA_CONSULTA_ADIC where NR_SEQ_AGENDA = nr_seq_agenda_p;
                    if (cd_evolucao_w > 0) then
                    delete from clinical_note_soap_data where cd_evolucao = cd_evolucao_w and ie_med_rec_type ='CONS_SCHD' and ie_stage = 1 and ie_soap_type = 'P' and nr_seq_med_item = nr_seq_agenda_p;
                    CALL clinical_notes_pck.SOAP_DATA_AFTER_DELETE(cd_evolucao_w);
                    end if;
		end if;
				if (ie_pre_cons_del_allowed_w = 'S' and ie_before_cons_allowed_p = 'S') then
					CALL cpoe_exam_update_delete(nr_seq_agenda_p);
				end if;
				CALL cancelar_lista_espera(nr_seq_agenda_p, nm_usuario_p, cd_motivo_p);
				
                if (nr_seq_opm_w > 0) then
					select count(*)
					  into STRICT nr_conta_w 
					  from agenda_consulta ac
					where ac.IE_STATUS_AGENDA <> 'C'
					  and ac.NR_SEQ_OPM = nr_seq_opm_w
					  and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(ac.dt_Agenda) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_w)
					  and ac.nr_sequencia <> nr_seq_agenda_p;
					if (nr_conta_w = 0) then
						CALL gravar_status_op_opm(nr_seq_opm_w,'CAA',cd_agenda_p ,nm_usuario_p, cd_estabelecimento_w);
					end if;
				end if;

				if (ie_canc_autor_agen_cons_w = 'S') then
					
					select	coalesce(max(a.nr_sequencia),0)
					into STRICT	nr_sequencia_autor_w
					from	autorizacao_convenio a
					where	a.nr_seq_agenda_consulta = nr_seq_agenda_p;
					
					if (nr_sequencia_autor_w > 0) then
						
						select	coalesce(max(x.nr_sequencia),0)
						into STRICT	nr_seq_estagio_cancel_w
						from	estagio_autorizacao x
						where	x.ie_interno = '70'
						and	coalesce(x.ie_situacao,'A') = 'A'
						and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = x.cd_empresa;
						
						if (nr_seq_estagio_cancel_w > 0) then
							CALL atualizar_autorizacao_convenio(nr_sequencia_autor_w,nm_usuario_p,nr_seq_estagio_cancel_w,'N','N','S');
						end if;
						
					end if;
					
				end if;
			
				select	count(*)
				into STRICT	qt_registros_w
				from	agenda_integrada_item
				where	nr_seq_agenda_cons = nr_seq_agenda_p;
				
				if (qt_registros_w	> 0) then
					begin
					delete	FROM ageint_marcacao_usuario
					where	nr_seq_agenda	= nr_seq_agenda_p;					
					end;
				end if;			
			
			end if;		
		
		end if;
	
	elsif (ie_status_p in ('F','FJ','I')) then
		select	max(dt_agenda),
				max(nr_minuto_duracao),
				coalesce(max(ie_status_agenda),ie_status_p),
				max(cd_pessoa_fisica),
				coalesce(max(ie_agenda_web),'N'),
				max(cd_agenda),
				max(cd_procedimento),
				max(qt_total_secao),
				max(nr_controle_secao),
				max(nm_paciente)
		into STRICT	dt_agenda_w,
				nr_minuto_w,
				ie_status_w,
				cd_pf_w,
				ie_agenda_web_w,
				cd_agenda_w,
				cd_procedimento_w,
				qt_total_secao_w,
				nr_controle_secao_w,
				nm_paciente_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;
		
		select	coalesce(max(PKG_DATE_UTILS.extract_field('SECOND', dt_agenda)),0)+1
		into STRICT	qt_hor_falta_w
		from	agenda_consulta
		where	cd_agenda = cd_agenda_p
		and		to_date(to_char(dt_agenda,'dd/mm/yyyy hh24:mi') || ':00', 'dd/mm/yyyy hh24:mi:ss') = to_date(to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi') || ':00', 'dd/mm/yyyy hh24:mi:ss');
		
		if (cd_tipo_agenda_w	= 5) then
			update	agenda_consulta
			set		ie_status_agenda		= ie_status_p,
					dt_status				= clock_timestamp(),
					ds_motivo_status		= ds_motivo_p,
					nm_usuario_status		= nm_usuario_p,
					nm_usuario				= nm_usuario_p,
					nr_seq_motivo_falta		= CASE WHEN ie_status_p='F' THEN  cd_motivo_p WHEN ie_status_p='I' THEN  cd_motivo_p  ELSE null END
			where	nr_sequencia		= nr_seq_agenda_p;
			
			--INICIO - Recalcular as sessoes geradas para o agendamento, caso seja registrado a falta para o agendamento atual, ficando assim a ultima sessao pendente para agendamento manual
			if (ie_recalcula_sessao_atual_w in ('S','A','C')) then
				open C01;
				loop
				fetch C01 into	
					nr_seq_agenda_w,
					nr_secao_atual_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					begin
					if (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') and (nr_secao_atual_w > 1)then
						begin
						
						update	agenda_consulta
						set	nr_secao	= nr_secao_atual_w - 1
						where	nr_sequencia	= nr_seq_agenda_w;
												
						exception
						when others then
							ds_erro_w := '';						
							
						if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
						end;					
					end if;																
					end;
				end loop;
				close C01;
				
				-- Ultima sessao e agendada automaticamente para o proximo dia com agenda disponivel.
				if (ie_recalcula_sessao_atual_w in ('A','C'))then
					
					if (nr_controle_secao_w IS NOT NULL AND nr_controle_secao_w::text <> '')  then
						begin
																
						select	max(dt_agenda),
							max(nr_sequencia),
							max(ie_sessao_diariamente),
							max(ie_sessao_final_semana),
							max(qt_sessao_intervalo),
							max(ds_sessao_dias_semana),
							max(ie_sessao_copiar_proced),
							max(ie_sessao_copiar_proced_adic)
						into STRICT	dt_agenda_prox_w,
								nr_seq_agenda_w,
								ie_diario_w,
								ie_final_semana_w,
								qt_intervalo_w,
								ds_dias_w,
								ie_copiar_proced_w,
								ie_copiar_proced_adic_w
						from	agenda_consulta
						where	nr_controle_secao = nr_controle_secao_w						
						and	ie_status_agenda <> 'C';
						if (dt_agenda_prox_w IS NOT NULL AND dt_agenda_prox_w::text <> '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_agenda_w
							from	agenda_consulta
							where	nr_controle_secao = nr_controle_secao_w
							and	dt_agenda >= dt_agenda_prox_w
							and	ie_status_agenda <> 'C';
						end if;
						
						nr_secao_atual_w := coalesce(nr_secao_atual_w, qt_total_secao_w);
										
						select 	ie_classif_agenda
						into STRICT	ie_classif_agenda_w
						from 	agenda_consulta
						where 	nr_sequencia = nr_seq_agenda_p;
						
						if (ie_recalcula_sessao_atual_w = 'C') then
							-- obter a proxima data apos a ultima secao
							dt_agenda_prox_w := obter_dados_secao_per_agenda_2( nr_seq_agenda_w, ie_diario_w, ie_final_semana_w, 'D', replace(ds_dias_w,' ','') );
						end if;
						
						dt_agenda_prox_ww := dt_agenda_prox_w;
						dt_agenda_aux_w := dt_agenda_prox_w;
						
						while dt_agenda_prox_ww = dt_agenda_aux_w
						loop
							dt_agenda_prox_w := dt_agenda_prox_w + 1;
							CALL Gerar_Horario_Agenda_Servico(cd_estabelecimento_w, cd_agenda_p, dt_agenda_prox_w, nm_usuario_p);
						
							select	min(dt_agenda)	
							into STRICT	dt_agenda_prox_ww						
							from	agenda_consulta a,
								agenda b
							where	a.cd_agenda		= b.cd_agenda
							and	b.cd_tipo_agenda	= 5
							and	b.ie_situacao		= 'A'
							and	b.cd_estabelecimento	= cd_estabelecimento_w
							and	a.ie_status_agenda	= 'L'  
							and	a.dt_agenda		> ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_prox_w)
							and	a.cd_agenda 		= cd_agenda_p
							and 	a.ie_classif_agenda	= ie_classif_agenda_w;	
														
						end loop;	

									
						if (ie_recalcula_sessao_atual_w = 'A') then
							SELECT * FROM gerar_agenda_con_semana_per(nr_seq_agenda_w, ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_prox_ww), nm_usuario_p, 'S', 'S', null, '1,2,3,4,5,6,7,', 'S', 'S', ds_erro_w, cd_estabelecimento_w, qt_total_secao_w, nr_secao_atual_w, 'S', ds_insert_w) INTO STRICT ds_erro_w, ds_insert_w;
						elsif (ie_recalcula_sessao_atual_w = 'C') then
							SELECT * FROM gerar_agenda_con_semana_per(nr_seq_agenda_w, ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_prox_ww) -1, nm_usuario_p, coalesce(ie_diario_w,'S'), coalesce(ie_final_semana_w,'S'), qt_intervalo_w, coalesce(ds_dias_w,'1,2,3,4,5,6,7,'), coalesce(ie_copiar_proced_w,'S'), coalesce(ie_copiar_proced_adic_w,'S'), ds_erro_w, cd_estabelecimento_w, qt_total_secao_w, nr_secao_atual_w, 'S', ds_insert_w) INTO STRICT ds_erro_w, ds_insert_w;
						end if;
						
						select 	max(dt_agenda)
						into STRICT	dt_prov_ter_w
						from 	agenda_consulta
						where	nr_controle_secao = nr_controle_secao_w
						and	((cd_pessoa_fisica = cd_pf_w)
							or (nm_paciente = nm_paciente_w))
						and	((cd_procedimento  = cd_procedimento_w) or (coalesce(cd_procedimento_w::text, '') = ''));
	
						update	agenda_consulta
						set	dt_provavel_term = dt_prov_ter_w
						where	nr_controle_secao = nr_controle_secao_w
						and	((cd_pessoa_fisica = cd_pf_w)
							or (nm_paciente = nm_paciente_w))
						and	((cd_procedimento  = cd_procedimento_w) or (coalesce(cd_procedimento_w::text, '') = ''));
						
						if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	
						end;
					end if;
				end if;
			end if;
			--FIM - Recalcular as sessoes geradas para o agendamento, caso seja registrado a falta para o agendamento atual, ficando assim a ultima sessao pendente para agendamento manual
		else
			if (cd_tipo_agenda_w	= 3) then
				update	agenda_consulta
				set		ie_status_agenda	= ie_status_p,
						dt_agenda		= dt_agenda + qt_hor_falta_w/86400,
						dt_status		= clock_timestamp(),
						ds_motivo_status	= ds_motivo_p,
						nm_usuario_status	= nm_usuario_p,
						nm_usuario		= nm_usuario_p,
						nr_seq_motivo_falta	= CASE WHEN ie_status_p='F' THEN  cd_motivo_p WHEN ie_status_p='I' THEN  cd_motivo_p  ELSE null END 
				where	nr_sequencia		= nr_seq_agenda_p;
			else
				update	agenda_consulta
				set		ie_status_agenda	= ie_status_p,
						dt_status		= clock_timestamp(),
						ds_motivo_status	= ds_motivo_p,
						nm_usuario_status	= nm_usuario_p,
						nm_usuario		= nm_usuario_p
				where	nr_sequencia		= nr_seq_agenda_p;
			end if;
		end if;
		
		if (ie_gerar_alerta_falta_w = 'S') and (cd_tipo_agenda_w = 3) and (cd_pf_w IS NOT NULL AND cd_pf_w::text <> '') then
			
			PERFORM	max(substr(obter_nome_pf(c.cd_pessoa_fisica),1,60)),
				max(substr(obter_desc_espec_agenda(a.cd_especialidade),1,40)),
				max(CASE WHEN ie_status_p='I' THEN wheb_mensagem_pck.get_texto(455650)  ELSE 'F', obter_desc_expressao(320051)))		--455650 'Falta nao justificada

			into	nm_medico_w,
				ds_especialidade_w,
				ie_falta_w
			from	agenda a,
				agenda_consulta b,
				pessoa_fisica c
			where	a.cd_agenda = b.cd_agenda
			and	a.cd_pessoa_fisica = c.cd_pessoa_fisica
			and	b.nr_sequencia = nr_seq_agenda_p;
			
			
			ds_mensagem_w	:=	substr(wheb_mensagem_pck.get_texto(455657, 'NM_MEDICO_W='|| nm_medico_w ||';DS_ESPECIALIDADE_W='|| ds_especialidade_w ||';IE_FALTA_W='|| ie_falta_w ||';DS_MOTIVO_P='|| ds_motivo_p ||';'),1,255); --455657 Paciente faltou! Medico: #@NM_MEDICO_W#@. Especialidade: #@DS_ESPECIALIDADE_W#@. #@IE_FALTA_W#@. OBS.: #@DS_MOTIVO_P#@
			insert into alerta_paciente(nr_sequencia,       
						cd_estabelecimento,     
						cd_pessoa_fisica,       
						dt_alerta,              
						dt_atualizacao,         
						nm_usuario,             
						ds_alerta,              
						ie_situacao,            
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_funcao)
					values( alerta_paciente_seq.nextval,
						cd_estabelecimento_w,
						cd_pf_w,
						dt_agenda_w,
						sysdate,
						nm_usuario_p,
						ds_mensagem_w,
						'A',
						sysdate,
						nm_usuario_p,
						821);
		end if;

		altera_lista_esp_aguard(nr_seq_agenda_p, nm_usuario_p);

	elsif	(ie_status_p = 'RF') then

		if	(cd_tipo_agenda_w	= 5) then
			update	agenda_consulta
			set	ie_status_agenda	= 'N',
				dt_status		= null,
				ds_motivo_status	= null,
				nm_usuario_status	= null,
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_seq_agenda_p;				
		else
			select	max(dt_agenda)
			into	dt_agenda_w
			from	agenda_consulta
			where	nr_sequencia = nr_seq_agenda_p;
			
			
			if	(ie_encaixe_w = 'S') then			
				select	count(*)
				into	qt_horario_w
				from	agenda_consulta
				where	cd_agenda = cd_agenda_p 				
				and		dt_agenda = dt_agenda_w +10/86400				
				and		ie_status_agenda not in ('C','L','F','FJ','I');				
			end if;	

			if	(qt_horario_w > 0) then
				--O status de falta deste horario nao pode ser revertido pois o mesmo ja encontra-se ocupado no momento
				Wheb_mensagem_pck.exibir_mensagem_abort(217758);
			end if;

			update	agenda_consulta
			set	ie_status_agenda	= 'N',
				dt_agenda		= to_date(to_char(dt_agenda,'dd/mm/yyyy hh24:mi') ||'$00','dd/mm/yyyy hh24:mi:ss'),
				dt_status		= null,
				ds_motivo_status	= null,
				nm_usuario_status	= null,
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_seq_agenda_p;		
		end if;	

		altera_lista_esp_aguard(nr_seq_agenda_p, nm_usuario_p, 'S');

	elsif	(ie_status_p = 'AC') then	
		
		update	agenda_consulta
		set	dt_confirmacao				= sysdate,
			nm_usuario_confirm			= nm_usuario_p,
			nm_usuario					= nm_usuario_p,
			nr_seq_forma_confirmacao	= decode(nr_seq_forma_conf_p, 0, nr_seq_forma_confirmacao, nvl(nr_seq_forma_conf_p,nr_seq_forma_confirmacao)),
			ds_confirmacao				= nvl(ds_motivo_p, ds_confirmacao),
			ie_status_agenda			= decode(ie_altera_status_confirmada_w,'S','CN',ie_status_agenda)
		where	nr_sequencia = nr_seq_agenda_p;

	elsif	(ie_status_p = 'RC') then
		
		update	agenda_consulta
		set	dt_confirmacao				= null,
			nm_usuario_confirm			= null,
			nm_usuario					= nm_usuario_p,
			nr_seq_forma_confirmacao	= null,
			ds_confirmacao				= null,
			ie_status_agenda			= decode(ie_altera_status_confirmada_w,'S','N',ie_status_agenda)
		where	nr_sequencia = nr_seq_agenda_p;

	elsif	(ie_status_p = 'A') then

		update	agenda_consulta
		set	ie_status_agenda	= 'A',
      dt_atendido		= null,
      nm_usuario_atendido	= null,    
			dt_aguardando		= sysdate,
			dt_chegada		= sysdate,
			nm_usuario_aguardando	= nm_usuario_p,
			nm_usuario		= nm_usuario_p			
		where	nr_sequencia		= nr_seq_agenda_p
		and 	ie_status_agenda <> 'E';
		
		select 	max(nr_atendimento),
			max(ie_classif_agenda)
		into	nr_atendimento_w,
			ie_classif_agenda_w
		from 	agenda_consulta
		where 	nr_sequencia = nr_seq_agenda_p;
		
		if	(nvl(nr_atendimento_w,0) > 0) then
			gerar_lancamento_automatico(nr_atendimento_w, null, 352, nm_usuario_p, null, null, null, null, ie_classif_agenda_w, null);
		end if;				

	elsif	(ie_status_p = 'RA') then
		
		update	agenda_consulta
		set	ie_status_agenda	= decode(ie_altera_status_confirmada_w,'N','N',decode(dt_confirmacao,null,'N','CN')),
			dt_aguardando		= null,
			dt_chegada		= null,
			nm_usuario_aguardando	= null,
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p;

	elsif	(ie_status_p = 'AD') then

		update	agenda_consulta
		set	ie_status_agenda = 'AD',			
			nm_usuario = nm_usuario_p,
			dt_status_atendido	= sysdate
		where	nr_sequencia = nr_seq_agenda_p;
		
		select	max(nr_atendimento)
		into	nr_atendimento_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;
		
		update	atendimento_paciente
		set	dt_inicio_observacao = null
		where	nr_atendimento = nr_atendimento_w;
		
		if	(ie_atualizar_dt_fim_cons_w = 'S') then
			update	atendimento_paciente
			set	dt_fim_consulta = sysdate
			where	nr_atendimento = nr_atendimento_w;
		end if;

	elsif	(ie_status_p = 'ADR') then
	
		select	max(nr_atendimento)
		into	nr_atendimento_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;
	
		select	dt_inicio_observacao
		into	dt_inicio_observacao_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w;
		
		if (dt_inicio_observacao_w is null) then
			update	agenda_consulta
			set	ie_status_agenda = 'AD',			
				nm_usuario = nm_usuario_p,
				dt_status_atendido = sysdate
			where	nr_sequencia = nr_seq_agenda_p;
		else
			update	agenda_consulta
			set	ie_status_agenda = 'EO',			
				nm_usuario = nm_usuario_p,
				dt_atualizacao = sysdate
			where	nr_sequencia = nr_seq_agenda_p;

			update	atendimento_paciente
			set	dt_inicio_observacao = sysdate
			where	nr_atendimento = nr_atendimento_w;
		end if;

		if	(ie_atualizar_dt_fim_cons_w = 'S') then
			update	atendimento_paciente
			set	dt_fim_consulta = sysdate
			where	nr_atendimento = nr_atendimento_w;
		end if;

	elsif	(ie_status_p = 'RAD') then

		update	agenda_consulta
		set	ie_status_agenda	= 'O',			
			nm_usuario		= nm_usuario_p,
			dt_status_atendido	= null
		where	nr_sequencia		= nr_seq_agenda_p;		
		
		select	max(nr_atendimento)
		into	nr_atendimento_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;
		
		update	atendimento_paciente
		set		dt_fim_consulta	= null
		where	nr_atendimento	= nr_atendimento_w;
		
	elsif	(ie_status_p = 'O') then

		update	agenda_consulta
		set	ie_status_agenda	= 'O',
			dt_consulta		= sysdate,
			nm_usuario_consulta	= nm_usuario_p,
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p;
		
		select 	max(nr_atendimento)
		into	nr_atendimento_w
		from 	agenda_consulta
		where 	nr_sequencia = nr_seq_agenda_p;

		if ((nvl(nr_atendimento_w,0) > 0)  and (wheb_assist_pck.get_nivel_atencao_perfil = 'P')) then

			select	max(dt_atend_medico)
			into	dt_atend_medico_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w;

			if (dt_atend_medico_w is null) then
				update	atendimento_paciente
				set	dt_atend_medico = sysdate
				where	nr_atendimento = nr_atendimento_w;
			end if;
		end if;

		
		if	(nvl(nr_atendimento_w,0) > 0) then
			gerar_lancamento_automatico(nr_atendimento_w, null, 535, nm_usuario_p, null, null, null, null, null, null);
		end if;

	elsif	(ie_status_p = 'RO') then

		update	agenda_consulta
		set	ie_status_agenda	= 'A',
			dt_consulta		= null,
			nm_usuario_consulta	= null,
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p;

		select 	max(nr_atendimento)
		into	nr_atendimento_w
		from 	agenda_consulta
		where 	nr_sequencia = nr_seq_agenda_p;

		if (nvl(nr_atendimento_w,0) > 0) then

			select	max(dt_atend_medico)
			into	dt_atend_medico_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w;

			if (dt_atend_medico_w is not null) then
				update	atendimento_paciente
				set	dt_atend_medico = null
				where	nr_atendimento = nr_atendimento_w;
			end if;
		end if;

	elsif	(ie_status_p = 'E') then
	
		select 	max(nr_atendimento),
			max(ie_classif_agenda),
      max(cd_pessoa_fisica)
		into	nr_atendimento_w,
			ie_classif_agenda_w,
      cd_pf_w
		from 	agenda_consulta
		where 	nr_sequencia = nr_seq_agenda_p;
	

		if	(ie_permite_exec_atend_w = 'N') and
			(cd_tipo_agenda_w in (3,4)) and
			(nr_atendimento_w is null) then			
			--R1ai1seor(-20011,'Para este agendamento nao tem um atendimento vinculado #@#@');
		Wheb_mensagem_pck.exibir_mensagem_abort(217759);
		end if;

		update	agenda_consulta
		set	ie_status_agenda	= 'E',
			dt_atendido		= sysdate,
			nm_usuario_atendido	= nm_usuario_p,
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p;
		
		if	(ie_gerar_lanc_aut_exec_w	= 'S') and
			(nvl(nr_atendimento_w,0) > 0) then
			gerar_lancamento_automatico(nr_atendimento_w, null, 539, nm_usuario_p, nr_seq_agenda_p, null, null, null, ie_classif_agenda_w, null);
		end if;
		
		agend_executado_list_esp(nr_seq_agenda_p, nm_usuario_p);
    ATUALIZAR_EV_LINHA_CUIDADO('AG', 'AGENDA_CONSULTA', nr_seq_agenda_p, 'C', cd_pf_w, nm_usuario_p);

	elsif	(ie_status_p = 'RE') then

		update	agenda_consulta
		set	ie_status_agenda	= 'O',
			dt_atendido		= null,
			nm_usuario_atendido	= null,
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p;

		agend_executado_list_esp(nr_seq_agenda_p, nm_usuario_p, 'S');

	elsif   (ie_status_p = 'PA') then

		update  agenda_consulta
		set     ie_status_agenda        = 'PA',
			nm_usuario              = nm_usuario_p
		where   nr_sequencia            = nr_seq_agenda_p;
	elsif	(ie_status_p = 'R') then

		update	agenda_consulta
		set	ie_status_agenda		= 'R',
			dt_status			= null,
			ds_motivo_status		= null,
			nm_usuario_status		= null,
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p;		
	elsif	(ie_status_p = 'L') then

		update	agenda_consulta
		set	ie_status_agenda		= 'L',
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p; 
	elsif	(ie_status_p = 'ET') then

		update	agenda_consulta
		set	ie_status_agenda		= 'ET',
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p; 		
	elsif	(ie_status_p = 'AR') then

		update	agenda_consulta
		set	ie_status_agenda		= 'AR',
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p; 		
	elsif	(ie_status_p = 'AGC') then

		update	agenda_consulta
		set	ie_status_agenda	= 'AC',
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p; 		
	elsif	(ie_status_p = 'RAC') then

		update	agenda_consulta
		set	ie_status_agenda	= 'AR',
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_agenda_p; 		
	elsif	(ie_status_p = 'N') then
		
		update	agenda_consulta      
		set     ie_status_agenda  	= 'N',
			dt_atualizacao   	= sysdate,
			nm_usuario       	= nm_usuario_p
		where   nr_sequencia      	= nr_seq_agenda_p;
	elsif	(ie_status_p = 'EO') then
		
		select	max(nr_atendimento)
		into	nr_atendimento_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;
		
		update	atendimento_paciente
		set		dt_inicio_observacao = sysdate
		where	nr_atendimento	= nr_atendimento_w;
		
		update	agenda_consulta      
		set     ie_status_agenda  	= 'EO',
				dt_atualizacao   	= sysdate,
				nm_usuario       	= nm_usuario_p
		where   nr_sequencia      	= nr_seq_agenda_p;
		
	elsif	(ie_status_p = 'AG') then
		
		select	max(nr_atendimento)
		into	nr_atendimento_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;
		
		select	max(dt_inicio_observacao),
				max(dt_fim_observacao)
		into	dt_inicio_observacao_w,
				dt_fim_observacao_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w;
		
		if	(dt_inicio_observacao_w is not null) and
			(dt_fim_observacao_w is null) then
			
			update	atendimento_paciente
			set		dt_fim_observacao = sysdate
			where	nr_atendimento	= nr_atendimento_w;
			
		end if;
		
		update	agenda_consulta      
		set     ie_status_agenda  	= 'AG',
				dt_atualizacao   	= sysdate,
				nm_usuario       	= nm_usuario_p
		where   nr_sequencia      	= nr_seq_agenda_p;
		
	elsif	(ie_status_p = 'ER') then
		
		select	max(nr_atendimento)
		into	nr_atendimento_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;
		
		update	atendimento_paciente
		set		dt_inicio_reavaliacao = sysdate
		where	nr_atendimento	= nr_atendimento_w;
		
		update	agenda_consulta      
		set     ie_status_agenda  	= 'ER',
				dt_atualizacao   	= sysdate,
				nm_usuario       	= nm_usuario_p
		where   nr_sequencia      	= nr_seq_agenda_p;
	
	elsif	(ie_status_p = 'ERD') then
	
		select	max(nr_atendimento)
		into	nr_atendimento_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;
	
		update	atendimento_paciente
		set		dt_inicio_reavaliacao = null
		where	nr_atendimento	= nr_atendimento_w;
		
		update	agenda_consulta
		set		ie_status_agenda	= 'AG',			
				nm_usuario			= nm_usuario_p,
				dt_status_atendido	= sysdate
		where	nr_sequencia		= nr_seq_agenda_p;
		
	end if;

	if	(nvl(ie_agenda_dia_p,'N') = 'S') and
		(ie_status_p in ('A','O','AC','F','I')) then

		select	max(dt_agenda),
			max(cd_pessoa_fisica)
		into	dt_agenda_w,
			cd_pf_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;

		alterar_status_agecons_dia(nr_seq_agenda_p, dt_agenda_w, ie_status_p, cd_pf_w, ds_motivo_p, nm_usuario_p);

	end if;
	
	if	(ie_status_p not in('F', 'I'))then
		select	max(nr_seq_motivo_falta)
		into	nr_seq_motivo_falta_w
		from	agenda_consulta
		where	nr_sequencia = nr_seq_agenda_p;
		
		if	(nr_seq_motivo_falta_w is not null)then
			update	agenda_consulta
			set		nr_seq_motivo_falta = null
			where	nr_sequencia = nr_seq_agenda_p;		
		end if;
	
	end if;
	
	Gerar_comunicacao_alter_status(ie_status_p, nr_seq_agenda_p, nm_usuario_p, cd_estabelecimento_w);

end if;

if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S' END  then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_status_agecons ( cd_agenda_p bigint, nr_seq_agenda_p bigint, ie_status_p text, cd_motivo_p text, ds_motivo_p text, ie_agenda_dia_p text, nm_usuario_p text, nr_seq_forma_conf_p bigint, ie_before_cons_allowed_p text default 'N') FROM PUBLIC;

