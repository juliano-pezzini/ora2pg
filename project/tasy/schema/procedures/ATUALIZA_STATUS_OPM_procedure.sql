-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_status_opm ( nr_seq_ordem_opm_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_seq_op_comp_opm_w			ordem_producao_comp_opm.nr_sequencia%type;
nr_solic_compra_w			solic_compra_item.nr_solic_compra%type;
nr_item_solic_compra_w			solic_compra_item.nr_item_solic_compra%type;
nr_ordem_compra_w			ordem_compra_item.nr_ordem_compra%type;
nr_item_oci_w				ordem_compra_item.nr_item_oci%type;
nr_requisicao_w				item_requisicao_material.nr_requisicao%type;
nr_item_requisicao_w			item_requisicao_material.nr_sequencia%type;
qt_material_w				double precision;
qt_material_atendida_w			double precision;

ie_pendente_w				varchar(1);

/*Select dos componentes da ordem de produção*/

c01 CURSOR FOR
SELECT	nr_sequencia
from	ordem_producao_comp_opm
where	nr_seq_ordem_opm = nr_seq_ordem_opm_p;


/*Select dos itens da solicitação de compras vinculada com a ordem de produção*/

c02 CURSOR FOR
SELECT	nr_solic_compra,
	nr_item_solic_compra,
	qt_material
from	solic_compra_item
where	nr_seq_op_comp_opm = nr_seq_op_comp_opm_w;

/*Select dos itens da ordem de compra de transferencia vinculada com a ordem de produção*/

c03 CURSOR FOR
SELECT	nr_ordem_compra,
	nr_item_oci,
	qt_material
from	ordem_compra_item
where	nr_seq_op_comp_opm = nr_seq_op_comp_opm_w;

/*Select dos itens da requisição de transferencia de estoque vinculada com a ordem de produção*/

c04 CURSOR FOR
SELECT	nr_requisicao,
	nr_sequencia,
	qt_material_requisitada,
	coalesce(qt_material_atendida,0)
from	item_requisicao_material
where	nr_seq_op_comp_opm = nr_seq_op_comp_opm_w;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_op_comp_opm_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	ie_pendente_w := 'N';

	open C02;
	loop
	fetch C02 into
		nr_solic_compra_w,
		nr_item_solic_compra_w,
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		/*Se ainda está pendente de entrega, atribui S para a variável e já sai do cursor*/

		if	((qt_material_w - coalesce(obter_qt_entregue_solic_nf(nr_solic_compra_w,nr_item_solic_compra_w),0)) > 0) then
			ie_pendente_w := 'S';
			exit;
		end if;
		end;
	end loop;
	close C02;

	/*Atualiza o status da ordem de produção caso a solicitação de compras esteja pendente de entrega*/

	if (ie_pendente_w = 'S') then
		CALL gravar_status_op_opm(nr_seq_ordem_opm_p, 'COM', null, nm_usuario_p, cd_estabelecimento_p);

	elsif (ie_pendente_w = 'N') then

		open C03;
		loop
		fetch C03 into
			nr_ordem_compra_w,
			nr_item_oci_w,
			qt_material_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			/*Se ainda está pendente de entrega, atribui S para a variável e já sai do cursor*/

			if	((qt_material_w - coalesce(obter_qt_entregue_item_oci(nr_ordem_compra_w, nr_item_oci_w, 'N'),0)) > 0) then
				ie_pendente_w := 'S';
				exit;
			end if;
			end;
		end loop;
		close C03;

		/*Atualiza o status da ordem de produção caso a transferencia entre estabelecimento esteja pendente de entrega*/

		if (ie_pendente_w = 'S') then
			CALL gravar_status_op_opm(nr_seq_ordem_opm_p, 'RES', null, nm_usuario_p, cd_estabelecimento_p);

		elsif (ie_pendente_w = 'N') then

			open C04;
			loop
			fetch C04 into
				nr_requisicao_w,
				nr_item_requisicao_w,
				qt_material_w,
				qt_material_atendida_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				/*Se ainda está pendente de entrega, atribui S para a variável e já sai do cursor*/

				if	((qt_material_w - qt_material_atendida_w) > 0) then
					ie_pendente_w := 'S';
					exit;
				end if;
				end;
			end loop;
			close C04;

			/*Atualiza o status da ordem de produção caso a transferencia de estoque esteja pendente de entrega*/

			if (ie_pendente_w = 'S') then
				CALL gravar_status_op_opm(nr_seq_ordem_opm_p, 'RES', null, nm_usuario_p, cd_estabelecimento_p);
			end if;
		end if;
	end if;
	end;
end loop;
close C01;


/*Se nenhum item esteja pendente, altera o status para NF*/

if (ie_pendente_w = 'N') then
	CALL gravar_status_op_opm(nr_seq_ordem_opm_p, 'NF', null, nm_usuario_p, cd_estabelecimento_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_status_opm ( nr_seq_ordem_opm_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

