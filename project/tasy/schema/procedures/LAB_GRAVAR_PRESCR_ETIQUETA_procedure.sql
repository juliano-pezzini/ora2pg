-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_gravar_prescr_etiqueta ( nr_prescricao_p bigint, ds_etiqueta_p text, nm_usuario_p text) AS $body$
DECLARE



qt_prescricao_w		bigint;
ds_etiqueta_w		text;
ds_campo_clob_w		text;


ds_param_w		varchar(2000);
ds_conteudo_1_w		varchar(32764);
ds_conteudo_2_w		varchar(32764);
c001			integer;

nr_sequencia_w		bigint;
qt_registro_w		bigint;

retorno_w		integer;
ds_sql_w		varchar(500);
nr_controle_w	bigint;


BEGIN

select	count(*)
into STRICT	qt_prescricao_w
from	prescr_etiqueta
where	nr_prescricao = nr_prescricao_p;


select 	max(nr_controle)
into STRICT	nr_controle_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

if 	not(qt_prescricao_w > 0) then

	insert into 	prescr_etiqueta(
			nr_prescricao,
			ds_etiqueta,
			dt_atualizacao,
			nm_usuario,
			nr_controle
			)
	values (
			nr_prescricao_p,
			ds_etiqueta_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_controle_w
			);
else

	/*
	select	ds_etiqueta
	into	ds_etiqueta_w
	from	prescr_etiqueta
	where	nr_prescricao = nr_prescricao_p;

	ds_conteudo_1_w := dbms_lob.SUBSTR(ds_etiqueta_w,32764,1);
	ds_conteudo_2_w := dbms_lob.SUBSTR(ds_etiqueta_w,32764,32765);

	/*
	ds_etiqueta_w := ds_conteudo_1_w||ds_conteudo_2_w||ds_etiqueta_p;

	update 	prescr_etiqueta
	set	ds_etiqueta 	= (ds_conteudo_1_w||ds_conteudo_2_w||ds_etiqueta_p),
		dt_atualizacao 	= sysdate,
		nm_usuario 	= nm_usuario_p
	where	nr_prescricao 	= nr_prescricao_p;
	*/
	/*INICIO - VERIFICAR SE TABELA TEMPORÁRIO EXISTE SE NÃO EXISTIR CRIA*/

	SELECT 	COUNT(*)
	INTO STRICT	qt_registro_w
	FROM	user_tables
	WHERE	table_name = 'W_COPIA_CAMPO_LONG';

	IF ( qt_registro_w = 0 ) THEN
		CALL exec_sql_dinamico('','create table w_copia_campo_long (nr_sequencia number(10), ds_texto clob)');
	END IF;
	/*FIM - VERIFICAR SE TABELA TEMPORÁRIO EXISTE SE NÃO EXISTIR CRIA*/

	/*INICIO - TRANSFERE CONTEUDO DO CAMPO LONG DA TABELA DE ORIGEM PARA O CAMPO CLOB DA TABELA TEMPORARIO*/

	nr_sequencia_w := obter_valor_dinamico('select	(nvl(max(nr_sequencia),0) + 1) from w_copia_campo_long', nr_sequencia_w);
	ds_sql_w   := 'insert into w_copia_campo_long select :SEQUENCE, to_lob(ds_etiqueta) from  prescr_etiqueta where nr_prescricao = ' || nr_prescricao_p;
	ds_param_w := 'SEQUENCE='|| TO_CHAR(NR_SEQUENCIA_W);
	CALL exec_sql_dinamico_bv('',ds_sql_w,ds_param_w);

	/*FIM - TRANSFERE CONTEUDO DO CAMPO LONG DA TABELA DE ORIGEM PARA O CAMPO CLOB DA TABELA TEMPORARIO*/

	/*INICIO - RECUPERA O VALOR DO CAMPO CLOB PARA A VARIAVEL DA PROCEDURE*/

	ds_sql_w	:= ' select ds_texto from w_copia_campo_long where nr_sequencia = :sequence ';

	C001 := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C001, ds_sql_w, dbms_sql.Native);
	DBMS_SQL.DEFINE_COLUMN(C001, 1, ds_campo_clob_w);
	DBMS_SQL.BIND_VARIABLE(C001, 'SEQUENCE', nr_sequencia_w);
	retorno_w := DBMS_SQL.EXECUTE(c001);
	retorno_w := DBMS_SQL.fetch_rows(c001);
	DBMS_SQL.COLUMN_VALUE(C001, 1, ds_campo_clob_w );
	DBMS_SQL.CLOSE_CURSOR(C001);

	/*FIM - RECUPERA O VALOR DO CAMPO CLOB PARA A VARIAVEL DA PROCEDURE*/

	/*INICIO - QUEBRA O VALOR DO CONTEUDO CLOB EM VARIOS VARCHAR PARA PODER INSERIR NA TABELA DE ORIGEM*/

	ds_conteudo_1_w := substr(ds_campo_clob_w,32764,1);
	ds_conteudo_2_w := substr(ds_campo_clob_w,32764,32765);
	/*FIM QUEBRA O VALOR DO CONTEUDO CLOB EM VARIOS VARCHAR PARA PODER INSERIR NA TABELA DE ORIGEM*/

	C001 := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C001, ' update prescr_etiqueta set ds_etiqueta = :ds_etiqueta, dt_atualizacao = sysdate, nm_usuario = :nm_usuario where nr_prescricao = :nr_prescricao ', dbms_sql.Native);
	--
	DBMS_SQL.BIND_VARIABLE(C001, 'ds_etiqueta', (ds_conteudo_1_w||ds_conteudo_2_w||ds_etiqueta_p));
	DBMS_SQL.BIND_VARIABLE(C001, 'nm_usuario', nm_usuario_p);
	DBMS_SQL.BIND_VARIABLE(C001, 'nr_prescricao', nr_prescricao_p);

	retorno_w := DBMS_SQL.EXECUTE(c001);
	DBMS_SQL.CLOSE_CURSOR(C001);


end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_gravar_prescr_etiqueta ( nr_prescricao_p bigint, ds_etiqueta_p text, nm_usuario_p text) FROM PUBLIC;

