-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_autor_conv_agenda ( nr_seq_agenda_p bigint, nr_seq_estagio_p bigint, ie_commit_p text) AS $body$
DECLARE


ie_autor_agenda_w		varchar(3);
qt_autorizacao_aprov_w	integer;
qt_autor_agenda_w		integer;
cd_estabelecimento_w	smallint;
ie_autor_compl_agenda_w	varchar(1)	:= 'N';
nm_usuario_w		varchar(15)	:= wheb_usuario_pck.get_nm_usuario;
ie_atual_agenda_nn_w	varchar(1)	:= 'S';


BEGIN

ie_atual_agenda_nn_w	:= coalesce(obter_valor_param_usuario(3004, 157, obter_perfil_ativo, nm_usuario_w, wheb_usuario_pck.get_cd_estabelecimento),'S');

if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (nr_seq_estagio_p IS NOT NULL AND nr_seq_estagio_p::text <> '') then

	/* obter autorizacao agenda x estagio */

	select	coalesce(max(ie_autor_agenda),'0')
	into STRICT	ie_autor_agenda_w
	from	estagio_autorizacao
	where	nr_sequencia = nr_seq_estagio_p
	and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;

	/* atualizar status autorizacao agenda x estagio */

	if (ie_autor_agenda_w <> '0') then

		select	count(*)
		into STRICT	qt_autor_agenda_w
		from	autorizacao_convenio
		where	nr_seq_agenda	= nr_seq_agenda_p;

		select	coalesce(max(b.cd_estabelecimento),1),
			coalesce(nm_usuario_w, max(b.nm_usuario))
		into STRICT	cd_estabelecimento_w,
			nm_usuario_w
		from	agenda b,
			agenda_paciente a
		where	a.cd_agenda	= b.cd_agenda
		and	a.nr_sequencia	= nr_seq_agenda_p;

		select	coalesce(max(ie_autor_compl_agenda),'N')
		into STRICT	ie_autor_compl_agenda_w
		from	parametro_faturamento
		where	cd_estabelecimento	= cd_estabelecimento_w;

		if (qt_autor_agenda_w > 1) and (ie_autor_compl_agenda_w = 'S') then

			select	count(*)
			into STRICT	qt_autorizacao_aprov_w
			from	estagio_autorizacao b,
				autorizacao_convenio a
			where	a.nr_seq_estagio	= b.nr_sequencia
			and	b.nr_sequencia		= nr_seq_estagio_p
			and	a.nr_seq_agenda		= nr_seq_agenda_p;

			if (qt_autorizacao_aprov_w = qt_autor_agenda_w) then

				update	agenda_paciente
				set	ie_autorizacao 	= coalesce(obter_estagio_autor_agenda(nr_seq_agenda_p),ie_autor_agenda_w),
					nm_usuario	= coalesce(nm_usuario_w,nm_usuario)
				where	nr_sequencia 	= nr_seq_agenda_p
				and	((ie_atual_agenda_nn_w = 'S') or
					(ie_atual_agenda_nn_w = 'N' AND ie_autorizacao <> 'NN'));

			end if;
		else

			update	agenda_paciente
			set	ie_autorizacao	= coalesce(obter_estagio_autor_agenda(nr_seq_agenda_p),ie_autor_agenda_w),
				nm_usuario	= coalesce(nm_usuario_w,nm_usuario)
			where	nr_sequencia 	= nr_seq_agenda_p
			and	((ie_atual_agenda_nn_w = 'S') or
				(ie_atual_agenda_nn_w = 'N' AND ie_autorizacao <> 'NN'));

		end if;
	end if;
end if;

if (ie_commit_p	= 'S') then
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_autor_conv_agenda ( nr_seq_agenda_p bigint, nr_seq_estagio_p bigint, ie_commit_p text) FROM PUBLIC;

