-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_consiste_questionario ( nr_seq_doacao_p bigint, ie_inconsistencia_p INOUT text, ds_mensagem_p INOUT text) AS $body$
DECLARE




ds_impedimento_w	varchar(255);
ds_mensagem_w		varchar(10000);
ie_consiste_w		varchar(1):= 'N';
qt_resposta_nula_w	smallint;
ds_parametro_w		varchar(10) := obter_valor_param_usuario(450,228,obter_perfil_ativo,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);

C01 CURSOR FOR
	SELECT 	a.ds_impedimento
	FROM   	san_impedimento a,
		san_questionario b
	WHERE  	a.nr_sequencia 	 	= b.nr_seq_impedimento
	AND	b.nr_seq_doacao 	= nr_seq_doacao_p
	AND	coalesce(a.ie_resposta_correta,'N') <> b.ie_resposta
	AND	a.ie_definitivo 	= 'N'
	AND	coalesce(b.dt_ocorrencia::text, '') = ''
	AND	coalesce(a.ie_pergunta,'N') = 'N'  LIMIT 1;


BEGIN

SELECT 	count(*)
into STRICT	qt_resposta_nula_w
FROM   	san_impedimento a,
	san_questionario b,
	san_doacao d
WHERE  	a.nr_sequencia 	 	= b.nr_seq_impedimento
AND	b.nr_seq_doacao = d.nr_sequencia
AND	b.nr_seq_doacao 	= nr_seq_doacao_p
AND	coalesce(b.ie_resposta::text, '') = ''
AND	coalesce(a.ie_situacao,'A') = 'A'
AND	coalesce(a.ie_questionario,'S') = 'S'
and	(((san_verif_tipo_doacao_auto_dir(d.nr_seq_tipo) = 'A') and (coalesce(a.ie_auto_transfusao,'N') = 'S')) or (coalesce(a.ie_auto_transfusao,'N') = 'N'))
AND	((san_obter_sexo_pf_doador(d.cd_pessoa_fisica) = a.ie_sexo) OR (a.ie_sexo = 'A') OR (coalesce(a.ie_sexo::text, '') = ''))
AND 	(((a.nr_seq_imped_pai IS NOT NULL AND a.nr_seq_imped_pai::text <> '') AND
	EXISTS (SELECT 1
		FROM	san_questionario x
		WHERE	x.nr_seq_impedimento = a.nr_seq_imped_pai
		AND	x.nr_seq_doacao	 = b.nr_seq_doacao
		AND	coalesce(x.ie_resposta,'N') = 'S')) OR (coalesce(a.nr_seq_imped_pai::text, '') = ''));

ds_mensagem_w := wheb_mensagem_pck.get_texto(309904) || ':'||chr(13);-- Você deve informar a data de ocorrência do impedimento temporário
if (nr_seq_doacao_p IS NOT NULL AND nr_seq_doacao_p::text <> '') then

	open C01;
	loop
	fetch C01 into
		ds_impedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_consiste_w := 'S';
		ds_mensagem_w := ds_mensagem_w ||ds_impedimento_w ||chr(13);
		end;
	end loop;
	close C01;

end if;

commit;

if (ie_consiste_w = 'S') then
	ds_mensagem_p := ds_mensagem_w;
	ie_inconsistencia_p := ie_consiste_w;
elsif ((nr_seq_doacao_p IS NOT NULL AND nr_seq_doacao_p::text <> '') and (qt_resposta_nula_w <> 0) and (ds_parametro_w = 'N')) then
	ds_mensagem_p := wheb_mensagem_pck.get_texto(309905); -- Você deve responder a todas as questões do questionário!
	ie_inconsistencia_p := 'S';
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_consiste_questionario ( nr_seq_doacao_p bigint, ie_inconsistencia_p INOUT text, ds_mensagem_p INOUT text) FROM PUBLIC;

