-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajustar_estorno_mens () AS $body$
DECLARE


nr_seq_lote_w			bigint;
nr_seq_mensalidade_w		bigint;
nr_seq_pagador_w		bigint;

nr_seq_mensalidade_canc_w	bigint;
nr_seq_mensalidade_seg_canc_w	bigint;
nr_seq_mens_item_canc_w		bigint;

nr_seq_mens_seg_novo_w		bigint;

nr_seq_regra_ctb_mensal_deb_w	bigint;
nr_seq_regra_ctb_mensal_w	bigint;
cd_conta_estorno_deb_w		varchar(20);
cd_historico_estorno_deb_w	varchar(20);
cd_conta_estorno_rec_w		varchar(20);
cd_historico_estorno_rec_w	varchar(20);

nr_seq_mens_item_w		bigint;
cd_conta_rec_w			varchar(20);
cd_conta_deb_w			varchar(20);

C01 CURSOR FOR
	SELECT	a.nr_seq_lote,
		a.nr_sequencia,
		a.nr_seq_pagador
	from	pls_mensalidade a
	where	a.ie_cancelamento	= 'E'
	and	a.vl_mensalidade	= 0;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_mensalidade_segurado
	where	nr_seq_mensalidade	= nr_seq_mensalidade_canc_w;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_mensalidade_seg_item
	where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_canc_w;


BEGIN

rollback;

open C01;
loop
fetch C01 into
	nr_seq_lote_w,
	nr_seq_mensalidade_w,
	nr_seq_pagador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	max(nr_sequencia)
	into STRICT	nr_seq_mensalidade_canc_w
	from	pls_mensalidade
	where	nr_seq_lote	= nr_seq_lote_w
	and	ie_cancelamento	= 'C'
	and	nr_seq_pagador	= nr_seq_pagador_w;

	open C02;
	loop
	fetch C02 into
		nr_seq_mensalidade_seg_canc_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	nextval('pls_mensalidade_segurado_seq')
		into STRICT	nr_seq_mens_seg_novo_w
		;

		insert into pls_mensalidade_segurado(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_segurado,
							vl_mensalidade,
							nr_seq_mensalidade,
							qt_idade,
							dt_mesano_referencia,
							nr_parcela,
							nr_seq_contrato,
							nr_parcela_contrato)
						(SELECT	nr_seq_mens_seg_novo_w,
							clock_timestamp(),
							'Tasy',
							clock_timestamp(),
							'Tasy',
							nr_seq_segurado,
							(vl_mensalidade * -1),
							nr_seq_mensalidade_w,
							qt_idade,
							dt_mesano_referencia,
							nr_parcela,
							nr_seq_contrato,
							nr_parcela_contrato
						from	pls_mensalidade_segurado
						where	nr_sequencia = nr_seq_mensalidade_seg_canc_w);

		open C03;
		loop
		fetch C03 into
			nr_seq_mens_item_canc_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			select	nr_sequencia,
				nr_seq_regra_ctb_mensal_deb,
				nr_seq_regra_ctb_mensal,
				cd_conta_rec,
				cd_conta_deb
			into STRICT	nr_seq_mens_item_w,
				nr_seq_regra_ctb_mensal_deb_w,
				nr_seq_regra_ctb_mensal_w,
				cd_conta_rec_w,
				cd_conta_deb_w
			from	pls_mensalidade_seg_item
			where	nr_sequencia	= nr_seq_mens_item_canc_w;

			if (nr_seq_regra_ctb_mensal_deb_w <> 0) then
				begin
				select	cd_conta_estorno,
					cd_historico_estorno
				into STRICT	cd_conta_estorno_deb_w,
					cd_historico_estorno_deb_w
				from	pls_regra_ctb_mensal
				where	nr_sequencia = nr_seq_regra_ctb_mensal_deb_w;
				exception
				when others then
					select	max(cd_conta_estorno),
						max(cd_historico_estorno)
					into STRICT	cd_conta_estorno_deb_w,
						cd_historico_estorno_deb_w
					from	pls_regra_ctb_mensal
					where	cd_conta_contabil	= cd_conta_deb_w
					and	ie_debito_credito	= 'D';
				end;
			end if;
			if (nr_seq_regra_ctb_mensal_w <> 0) then
				begin
				select	cd_conta_estorno,
					cd_historico_estorno
				into STRICT	cd_conta_estorno_rec_w,
					cd_historico_estorno_rec_w
				from	pls_regra_ctb_mensal
				where	nr_sequencia = nr_seq_regra_ctb_mensal_w;
				exception
				when others then
					select	max(cd_conta_estorno),
						max(cd_historico_estorno)
					into STRICT	cd_conta_estorno_rec_w,
						cd_historico_estorno_rec_w
					from	pls_regra_ctb_mensal
					where	cd_conta_contabil	= cd_conta_rec_w
					and	ie_debito_credito	= 'C';
				end;
			end if;

			insert into pls_mensalidade_seg_item(	nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_mensalidade_seg,
								ie_tipo_item,
								vl_item,
								nr_seq_preco,
								nr_seq_reajuste,
								nr_seq_protocolo,
								nr_seq_conta,
								ds_observacao,
								cd_conta_rec,
								cd_conta_deb,
								cd_historico,
								ie_tipo_mensalidade)
						(SELECT		nextval('pls_mensalidade_seg_item_seq'),
								clock_timestamp(),
								'Tasy',
								clock_timestamp(),
								'Tasy',
								nr_seq_mens_seg_novo_w,
								ie_tipo_item,
								(vl_item * -1),
								nr_seq_preco,
								nr_seq_reajuste,
								nr_seq_protocolo,
								nr_seq_conta,
								ds_observacao,
								cd_conta_estorno_rec_w,
								cd_conta_estorno_deb_w,
								cd_historico_estorno_rec_w,
								ie_tipo_mensalidade
						from		pls_mensalidade_seg_item
						where		nr_sequencia = nr_seq_mens_item_canc_w);
			end;
		end loop;
		close C03;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajustar_estorno_mens () FROM PUBLIC;

