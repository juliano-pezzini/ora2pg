-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_kit_estoque_execucao ( cd_estabelecimento_p bigint, cd_pessoa_fisica_p bigint, nm_usuario_p text, nr_sequencia_p bigint, ds_retorno_p INOUT text, -- para registro de kit_estoque_reg
 ds_retorno_2_p INOUT text) AS $body$
 -- para kit kit_estoque
DECLARE


cd_kit_material_w		integer;
nr_seq_kit_w			bigint;
nr_seq_kit_estoque_w		bigint;
nr_seq_kit_estoque_novo_w	bigint;
cd_material_w			integer;
cd_material_kit_w		integer;
cd_local_estoque_kit_w		smallint;
cd_local_estoque_reg_w		smallint;
qt_material_w			double precision;
nr_seq_kit_estoque_comp_w 	bigint;
nr_seq_lote_fornec_w		bigint;
nr_seq_lote_fornec_kit_w	bigint;
qt_material_atendido_w		double precision;
cd_material_atendido_w		integer;
nr_seq_lote_fornec_atendido_w	bigint;
qt_material_consistido_w	double precision;
nr_seq_reg_kit_w		bigint;
nr_seq_reg_kit_novo_w		bigint;
ds_retorno_w			varchar(255):= null;
ds_retorno_ww			varchar(255):= null;
nr_seq_item_kit_w		integer;
ds_registro_kit_w		varchar(255);
nr_atendimento_w		bigint;
nr_sequencia_w			bigint;

c01 CURSOR FOR
SELECT	distinct a.nr_sequencia,
	a.cd_material,
	coalesce(a.nr_seq_lote_fornec,0),
	a.nr_seq_kit_estoque
from 	material_atend_paciente a
where	a.nr_seq_kit_estoque = nr_seq_kit_w
and	a.nr_atendimento = nr_atendimento_w
and 	(a.nr_seq_kit_estoque IS NOT NULL AND a.nr_seq_kit_estoque::text <> '')
order by 1;

c02 CURSOR FOR
SELECT 	a.cd_material,
	max(a.nr_seq_item_kit),
	sum(a.qt_material),
	coalesce(max(a.nr_seq_lote_fornec),0)
from 	kit_estoque_comp a
where	a.nr_seq_kit_estoque = nr_seq_kit_estoque_w
and	cd_material = cd_material_kit_w
and	coalesce(nr_seq_lote_fornec,0) = nr_seq_lote_fornec_kit_w
group by a.cd_material,
	a.nr_seq_lote_fornec;


BEGIN

select	nr_atendimento,
	nr_seq_kit_estoque
into STRICT	nr_atendimento_w,
	nr_seq_kit_w
from	material_atend_paciente
where	nr_sequencia = nr_sequencia_p;

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	cd_material_kit_w,
	nr_seq_lote_fornec_kit_w,
	nr_seq_kit_estoque_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	coalesce(max(nr_seq_reg_kit),0)
	into STRICT	nr_seq_reg_kit_w
	from	kit_estoque
	where	nr_sequencia = nr_seq_kit_estoque_w;

	if (nr_seq_reg_kit_w > 0) and (coalesce(nr_seq_reg_kit_novo_w::text, '') = '') then
		begin

		select	ds_registro_kit,
			cd_local_estoque
		into STRICT	ds_registro_kit_w,
			cd_local_estoque_reg_w
		from	kit_estoque_reg
		where	nr_sequencia = nr_seq_reg_kit_w;

		select	nextval('kit_estoque_reg_seq')
		into STRICT	nr_seq_reg_kit_novo_w
		;

		if (coalesce(ds_retorno_w::text, '') = '') then
			ds_retorno_w := nr_seq_reg_kit_novo_w;
		else
			ds_retorno_w := ds_retorno_w ||','|| nr_seq_reg_kit_novo_w;
		end if;

		insert 	into kit_estoque_reg(
			nr_sequencia,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_resp,
			dt_liberacao,
			nm_usuario_lib,
			ds_registro_kit,
			dt_utilizacao,
			nm_usuario_util,
			ie_situacao,
			ie_excluido,
			nr_seq_motivo_exclusao,
			nr_seq_pedido_agenda,
			ie_basico,
			cd_local_estoque,
			ie_origem,
			nr_seq_reg_origem)
		values ( nr_seq_reg_kit_novo_w,
			cd_estabelecimento_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_fisica_p,
			null,
			null,
			ds_registro_kit_w,
			null,
			null,
			'A',
			'N',
			null,
			null,
			'N',
			cd_local_estoque_reg_w,
			'S',
			nr_seq_reg_kit_w);
		end;

	end if;

	select	cd_kit_material,
		cd_local_estoque
	into STRICT	cd_kit_material_w,
		cd_local_estoque_kit_w
	from 	kit_estoque
	where 	nr_sequencia = nr_seq_kit_estoque_w;

	if (coalesce(nr_seq_kit_estoque_novo_w::text, '') = '') then

		select	nextval('kit_estoque_seq')
		into STRICT	nr_seq_kit_estoque_novo_w
		;

		if (coalesce(ds_retorno_ww::text, '') = '') then
			ds_retorno_ww := nr_seq_kit_estoque_novo_w;
		else
			ds_retorno_ww := ds_retorno_ww ||','|| nr_seq_kit_estoque_novo_w;
		end if;

		insert 	into kit_estoque(
			nr_sequencia,
			cd_kit_material,
			dt_atualizacao,
			nm_usuario,
			dt_montagem,
			nm_usuario_montagem,
			dt_utilizacao,
			nm_usuario_util,
			nr_cirurgia,
			cd_estabelecimento,
			cd_medico,
			nr_prescricao,
			nr_atendimento,
			cd_local_estoque,
			nr_seq_reg_kit,
			ie_status,
			nr_seq_kit_origem)
		values ( nr_seq_kit_estoque_novo_w,
			cd_kit_material_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			null,
			null,
			null,
			cd_estabelecimento_p,
			null,
			null,
			null,
			cd_local_estoque_kit_w,
			nr_seq_reg_kit_novo_w,
			null,
			nr_seq_kit_estoque_w);

	end if;

	open c02;
	loop
	fetch c02 into
		cd_material_w,
		nr_seq_item_kit_w,
		qt_material_w,
		nr_seq_lote_fornec_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		select 	coalesce(sum(qt_material),0) qt_material,
			coalesce(max(cd_material),0) cd_material,
			coalesce(max(nr_seq_lote_fornec),0) nr_seq_lote_fornec
		into STRICT	qt_material_atendido_w,
			cd_material_atendido_w,
			nr_seq_lote_fornec_atendido_w
		from 	material_atend_paciente
		where 	nr_sequencia = nr_sequencia_w
		and	nr_seq_kit_estoque = nr_seq_kit_estoque_w
		and	cd_material = cd_material_w
		and	coalesce(nr_seq_lote_fornec,0) = nr_seq_lote_fornec_w
		and 	(nr_seq_kit_estoque IS NOT NULL AND nr_seq_kit_estoque::text <> '');

		if (cd_material_w > 0) then
			begin
			if (qt_material_atendido_w = 0) then
				begin

				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_kit_estoque_comp_w
				from	kit_estoque_comp
				where	nr_seq_kit_estoque = nr_seq_kit_estoque_novo_w;

				insert into kit_estoque_comp(
					nr_seq_kit_estoque,
					nr_sequencia,
					cd_material,
					dt_atualizacao,
					nm_usuario,
					qt_material,
					ie_gerado_barras,
					nr_seq_lote_fornec,
					nr_seq_item_kit)
				values (	nr_seq_kit_estoque_novo_w,
					nr_seq_kit_estoque_comp_w,
					cd_material_w,
					clock_timestamp(),
					nm_usuario_p,
					qt_material_w,
					'S',
					CASE WHEN nr_seq_lote_fornec_w=0 THEN null  ELSE nr_seq_lote_fornec_w END ,
					nr_seq_item_kit_w);
				end;
			end if;

			if (coalesce(qt_material_w,0) > 0) and (coalesce(qt_material_atendido_w,0) > 0) then
				begin
				qt_material_consistido_w := 0;

				if (cd_material_atendido_w = cd_material_w) and (nr_seq_lote_fornec_w = nr_seq_lote_fornec_atendido_w) then
					qt_material_consistido_w := (qt_material_w - qt_material_atendido_w);
				end if;

				if (qt_material_consistido_w > 0) then
					begin
					select	coalesce(max(nr_sequencia),0) + 1
					into STRICT	nr_seq_kit_estoque_comp_w
					from	kit_estoque_comp
					where	nr_seq_kit_estoque = nr_seq_kit_estoque_novo_w;

					insert into kit_estoque_comp(
						nr_seq_kit_estoque,
						nr_sequencia,
						cd_material,
						dt_atualizacao,
						nm_usuario,
						qt_material,
						ie_gerado_barras,
						nr_seq_lote_fornec,
						nr_seq_item_kit)
					values (	nr_seq_kit_estoque_novo_w,
						nr_seq_kit_estoque_comp_w,
						cd_material_w,
						clock_timestamp(),
						nm_usuario_p,
						qt_material_consistido_w,
						'S',
						CASE WHEN nr_seq_lote_fornec_w=0 THEN null  ELSE nr_seq_lote_fornec_w END ,
						nr_seq_item_kit_w);
					end;
				end if;
				end;
			end if;

			if (qt_material_atendido_w > 0) then
				begin
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_kit_estoque_comp_w
				from	kit_estoque_comp
				where	nr_seq_kit_estoque = nr_seq_kit_estoque_novo_w;

				insert into kit_estoque_comp(
					nr_seq_kit_estoque,
					nr_sequencia,
					cd_material,
					dt_atualizacao,
					nm_usuario,
					qt_material,
					ie_gerado_barras,
					nr_seq_lote_fornec,
					nr_seq_item_kit)
				values (	nr_seq_kit_estoque_novo_w,
					nr_seq_kit_estoque_comp_w,
					cd_material_w,
					clock_timestamp(),
					nm_usuario_p,
					qt_material_atendido_w,
					'N',
					CASE WHEN nr_seq_lote_fornec_w=0 THEN null  ELSE nr_seq_lote_fornec_w END ,
					nr_seq_item_kit_w);
				end;
			end if;

			end;
		end if;
		end;
	end loop;
	close c02;

	end;
end loop;
close c01;

commit;

ds_retorno_p 	:= ds_retorno_w;
ds_retorno_2_p	:= ds_retorno_ww;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_kit_estoque_execucao ( cd_estabelecimento_p bigint, cd_pessoa_fisica_p bigint, nm_usuario_p text, nr_sequencia_p bigint, ds_retorno_p INOUT text, ds_retorno_2_p INOUT text) FROM PUBLIC;

