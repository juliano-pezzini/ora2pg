-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_preco_benef_sca ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_tabela_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_reajuste_w		bigint;
vl_reajustado_w			double precision;
nr_seq_plano_w			bigint;
nr_seq_segurado_w		bigint;
cd_estabelecimento_w		smallint;
dt_reajuste_w			timestamp;
nr_seq_preco_w			bigint;
qt_idade_w			bigint;
vl_preco_ant_w			double precision;
nr_seq_reajuste_preco_w		bigint;
nr_seq_seg_preco_sca_w		bigint;
dt_nascimento_w			timestamp;
dt_reajuste_fim_mes_w		timestamp;
nr_seq_vinculo_sca_w		bigint;
ie_grau_parentesco_w		varchar(2);
nr_seq_preco_ww			pls_plano_preco.nr_sequencia%type;
ie_calculo_vidas_w		pls_tabela_preco.ie_calculo_vidas%type;
ie_preco_vidas_contrato_w	pls_tabela_preco.ie_preco_vidas_contrato%type;
qt_vidas_inicial_w		pls_plano_preco.qt_vidas_inicial%type;
qt_vidas_final_w		pls_plano_preco.qt_vidas_final%type;
ie_gerar_preco_sca_w		varchar(1);
qt_vidas_w			bigint;

C01 CURSOR FOR
	SELECT	a.nr_seq_tabela,
		f.vl_reajustado,
		b.nr_sequencia,
		a.nr_seq_plano,
		d.cd_estabelecimento,
		e.nr_sequencia,
		g.dt_nascimento,
		f.vl_base,
		f.nr_sequencia,
		a.nr_sequencia,
		coalesce(substr(pls_obter_garu_dependencia_seg(b.nr_sequencia,'C'),1,2),'X') ie_grau_parentesco,
		c.ie_calculo_vidas,
		c.ie_preco_vidas_contrato,
		e.qt_vidas_inicial,
		e.qt_vidas_final
	from	pls_sca_vinculo		a,
		pessoa_fisica		g,
		pls_segurado		b,
		pls_reajuste_preco	f,
		pls_plano_preco		e,
		pls_tabela_preco	c,
		pls_contrato		d
	where	b.cd_pessoa_fisica	= g.cd_pessoa_fisica
	and	a.nr_seq_segurado	= b.nr_sequencia
	and	a.nr_seq_tabela		= c.nr_sequencia
	and	f.nr_seq_preco		= e.nr_sequencia
	and	e.nr_seq_tabela		= c.nr_sequencia
	and	b.nr_seq_contrato	= d.nr_sequencia
	and	d.nr_sequencia		= nr_seq_contrato_w
	and	f.nr_seq_reajuste	= nr_seq_reajuste_w
	and	trunc(months_between(dt_reajuste_fim_mes_w,g.dt_nascimento) / 12) between e.qt_idade_inicial and e.qt_idade_final;


BEGIN

select	nr_seq_contrato,
	nr_seq_reajuste
into STRICT	nr_seq_contrato_w,
	nr_seq_reajuste_w
from	pls_lote_reaj_segurado
where	nr_sequencia	= nr_seq_lote_p;

select	dt_reajuste,
	fim_mes(dt_reajuste)
into STRICT	dt_reajuste_w,
	dt_reajuste_fim_mes_w
from	pls_reajuste
where	nr_sequencia	= nr_seq_reajuste_w;

open C01;
loop
fetch C01 into
	nr_seq_tabela_w,
	vl_reajustado_w,
	nr_seq_segurado_w,
	nr_seq_plano_w,
	cd_estabelecimento_w,
	nr_seq_preco_w,
	dt_nascimento_w,
	vl_preco_ant_w,
	nr_seq_reajuste_preco_w,
	nr_seq_vinculo_sca_w,
	ie_grau_parentesco_w,
	ie_calculo_vidas_w,
	ie_preco_vidas_contrato_w,
	qt_vidas_inicial_w,
	qt_vidas_final_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	ie_gerar_preco_sca_w	:= 'S';

	if (coalesce(ie_preco_vidas_contrato_w, 'N') = 'S') then
		qt_vidas_w := pls_obter_qt_vidas_tab_preco(nr_seq_segurado_w, ie_calculo_vidas_w, null);

		if (qt_vidas_w not between coalesce(qt_vidas_inicial_w,qt_vidas_w) and coalesce(qt_vidas_final_w,qt_vidas_w)) then
			ie_gerar_preco_sca_w := 'N';
		end if;
	end if;

	select	max(nr_sequencia)
	into STRICT	nr_seq_preco_ww
	from	pls_plano_preco
	where	nr_sequencia	= nr_seq_preco_w
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w;

	if	(nr_seq_preco_ww IS NOT NULL AND nr_seq_preco_ww::text <> '' AND ie_gerar_preco_sca_w = 'S') then
		qt_idade_w	:= trunc(months_between(dt_reajuste_fim_mes_w,dt_nascimento_w) / 12);

		select	nextval('pls_segurado_preco_origem_seq')
		into STRICT	nr_seq_seg_preco_sca_w
		;

		insert	into	pls_segurado_preco_origem(	nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_segurado,
				vl_preco_atual, nr_seq_lote_reajuste,nr_seq_tabela,
				nr_seq_plano,ie_origem_preco,cd_estabelecimento,dt_liberacao,
				nm_usuario_liberacao, cd_motivo_reajuste, dt_reajuste, nr_seq_preco,
				qt_idade, vl_preco_ant, nr_seq_reajuste_preco, nr_seq_reajuste,
				nr_seq_vinculo_sca)
			values (	nr_seq_seg_preco_sca_w,clock_timestamp(),nm_usuario_p,
				clock_timestamp(),nm_usuario_p,nr_seq_segurado_w,
				vl_reajustado_w,nr_seq_lote_p, nr_seq_tabela_w,
				nr_seq_plano_w,'SB',cd_estabelecimento_w,clock_timestamp(),
				nm_usuario_p, 'I', dt_reajuste_w, nr_seq_preco_w,
				qt_idade_w, vl_preco_ant_w, nr_seq_reajuste_preco_w, nr_seq_reajuste_w,
				nr_seq_vinculo_sca_w);
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_preco_benef_sca ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

