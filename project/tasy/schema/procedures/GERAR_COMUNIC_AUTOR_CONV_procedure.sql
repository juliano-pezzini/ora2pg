-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_comunic_autor_conv ( nr_sequencia_autor_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_regra_w		bigint;
cd_estabelecimento_w	smallint;
qt_registro_w		integer;
ie_tipo_autorizacao_w	regra_comunic_autor_conv.ie_tipo_autorizacao%type;
nr_seq_estagio_w	bigint;
nr_atendimento_w	bigint;
nr_seq_agenda_w		autorizacao_convenio.nr_seq_agenda%type;
nm_paciente_w		varchar(80);
nm_usuario_dest_w	varchar(15);
cd_perfil_destino_w	integer;
ie_gerar_comunic_w	varchar(1)	:= 'N';
ds_lista_usuario_w	varchar(4000)	:= null;
ds_lista_perfil_w	varchar(4000)	:= null;

dt_validade_guia_w timestamp;
cd_area_proc_regra_w		bigint;
cd_especialidade_proc_regra_w	bigint;
cd_grupo_proc_regra_w		bigint;
cd_procedimento_regra_w		bigint;
ie_origem_proced_regra_w	bigint;
cd_grupo_mat_regra_w		integer;
cd_subgrupo_mat_regra_w		integer;
cd_classe_mat_regra_w		integer;
cd_material_regra_w		integer;
cd_material_w			integer;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_procedimento_w		estrutura_procedimento_v.cd_area_procedimento%type;
cd_especialidade_medica_w	estrutura_procedimento_v.cd_especialidade_medica%type;
cd_grupo_proc_w			estrutura_procedimento_v.cd_grupo_proc%type;
cd_grupo_material_w		estrutura_material_v.cd_grupo_material%type;
cd_subgrupo_material_w	estrutura_material_v.cd_subgrupo_material%type;
cd_classe_material_w	estrutura_material_v.cd_classe_material%type;
cd_medico_atend_w		bigint;
nm_usuario_medico_w		varchar(255);
ie_medico_atend_w		varchar(3);

ds_titulo_w			varchar(255);
ds_comunicado_w			text;
nr_seq_classif_w		bigint;
nr_seq_classif_regra_w		bigint;
nm_medico_solicitante_w		varchar(255);
cd_pessoa_fisica_w		varchar(10);
ds_observacao_w			varchar(2000);

nr_seq_paciente_setor_w		bigint;
nr_seq_paciente_w		bigint;
qt_tempo_medic_w		varchar(100);
ds_convenio_w			varchar(255);
nm_protocolo_w			varchar(255);
cd_protocolo_w			bigint;
nr_ciclo_w			smallint;
ds_dia_ciclo_w			varchar(5);
ds_titulo_regra_w		varchar(255);
ds_mensagem_regra_w		text;
ie_prescr_sae_w			varchar(1);
ie_forma_envio_w		varchar(2);
ds_email_destino_w		varchar(4000);
ds_email_usuario_w		varchar(255);
ds_email_origem_w		varchar(255);
ds_comunicado_ww		text;
ds_long_w			text		:= null;
ds_varchar2_w			varchar(4000)	:= null;
ds_consulta_w			varchar(255);
ds_email_destino_regra_w	varchar(2000);
ie_medico_autor_w		varchar(1);
cd_medico_solicitante_w		varchar(10);
ds_email_med_w			varchar(255);
ds_email_pac_w			varchar(255);
ie_comunic_paciente_w		varchar(1);
cd_convenio_w			integer;
ds_email_destino_padrao_w		varchar(255);
ie_converte_rtf_w			varchar(1) := 'S';

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_area_procedimento,
	a.cd_especialidade_proc,
	a.cd_grupo_proc,
	a.cd_procedimento,
	a.ie_origem_proced,
	a.cd_grupo_material,
	a.cd_subgrupo_material,
	a.cd_classe_material,
	a.cd_material,
	a.nr_seq_classif,
	a.ds_observacao,
	a.ds_titulo,
	a.ds_mensagem,
	a.ie_forma_envio,
	a.ds_email_origem,
	a.ds_email_destino_padrao
from	regra_comunic_autor_conv a
where	a.ie_situacao	= 'A'
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	coalesce(a.ie_tipo_autorizacao,ie_tipo_autorizacao_w)	= ie_tipo_autorizacao_w
and	coalesce(a.nr_seq_estagio,coalesce(nr_seq_estagio_w,0))		= coalesce(nr_seq_estagio_w,0)
and	coalesce(a.cd_convenio,coalesce(cd_convenio_w,0))			= coalesce(cd_convenio_w,0)
and (coalesce(a.ie_prescr_sae,'N') = 'N' or ie_prescr_sae_w = 'S')
and	((coalesce(IE_AUTOR_ATEND,'A') = 'A') or (coalesce(IE_AUTOR_ATEND,'A') = 'S' and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')) or (coalesce(IE_AUTOR_ATEND,'A') = 'N' and coalesce(nr_atendimento_w::text, '') = ''));

c02 CURSOR FOR
SELECT	a.nm_usuario_dest,
	a.cd_perfil_destino,
	a.ie_medico_atend,
	a.ds_email_destino,
	a.ie_medico_autor,
	a.ie_comunic_paciente
from	regra_com_aut_conv_dest a
where	a.nr_seq_regra	= nr_seq_regra_w;

c03 CURSOR FOR
SELECT	a.cd_procedimento,
	a.ie_origem_proced
from	procedimento_autorizado a
where	a.nr_sequencia_autor	= nr_sequencia_autor_p;

c04 CURSOR FOR
SELECT	a.cd_material
from	material_autorizado a
where	a.nr_sequencia_autor	= nr_sequencia_autor_p;


BEGIN

if (nr_sequencia_autor_p IS NOT NULL AND nr_sequencia_autor_p::text <> '') then

	select	a.ie_tipo_autorizacao,
		a.nr_seq_estagio,
		a.nr_atendimento,
		a.nr_seq_agenda,
		a.nr_seq_classif,
		substr(obter_nome_medico(a.cd_medico_solicitante, 'C'),1,250),
		a.cd_pessoa_fisica,
		nr_seq_paciente_setor,
		nr_seq_paciente,
		substr(obter_nome_convenio(a.cd_convenio),1,255) ds_convenio,
		nr_ciclo,
		ds_dia_ciclo,
		a.cd_medico_solicitante,
		a.cd_convenio,
		a.dt_validade_guia
	into STRICT	ie_tipo_autorizacao_w,
		nr_seq_estagio_w,
		nr_atendimento_w,
		nr_seq_agenda_w,
		nr_seq_classif_w,
		nm_medico_solicitante_w,
		cd_pessoa_fisica_w,
		nr_seq_paciente_setor_w,
		nr_seq_paciente_w,
		ds_convenio_w,
		nr_ciclo_w,
		ds_dia_ciclo_w,
		cd_medico_solicitante_w,
		cd_convenio_w,
		dt_validade_guia_w
	from	autorizacao_convenio a
	where	a.nr_sequencia	= nr_sequencia_autor_p;

	begin
		select	'S'
		into STRICT	ie_prescr_sae_w
		from	autorizacao_convenio a,
			pe_prescricao b
		where	a.nr_prescricao	= b.nr_prescricao
		and	a.nr_sequencia	= nr_sequencia_autor_p  LIMIT 1;
	exception
	when others then
		ie_prescr_sae_w	:= 'N';
	end;

	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
		select	a.cd_estabelecimento,
			obter_pessoa_atendimento(a.nr_atendimento,'N'),
			a.cd_medico_resp
		into STRICT	cd_estabelecimento_w,
			nm_paciente_w,
			cd_medico_atend_w
		from	atendimento_paciente a
		where	a.nr_atendimento	= nr_atendimento_w;
	elsif (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		select	b.cd_estabelecimento,
			substr(obter_nome_pessoa_fisica(a.cd_pessoa_fisica,null),1,255)
		into STRICT	cd_estabelecimento_w,
			nm_paciente_w
		from	agenda b,
			agenda_paciente a
		where	a.cd_agenda	= b.cd_agenda
		and	a.nr_sequencia	= nr_seq_agenda_w;
	elsif (nr_seq_paciente_setor_w IS NOT NULL AND nr_seq_paciente_setor_w::text <> '') or (nr_seq_paciente_w IS NOT NULL AND nr_seq_paciente_w::text <> '') then

		select	max(substr(obter_nome_pf(a.cd_pessoa_fisica),1,60)),
			max(a.cd_protocolo),
			max(substr(obter_nome_pf(a.cd_medico_resp),1,60)),
			max(coalesce(coalesce(b.qt_tempo_agenda,a.qt_tempo_medic), qt_obter_dur_aplicacao(b.ds_dia_ciclo,a.nr_seq_medicacao,a.cd_protocolo,b.nr_seq_atendimento,
			coalesce(b.dt_real, b.dt_prevista),b.nr_seq_pend_agenda,b.nm_usuario,b.cd_estabelecimento))) qt_tempo_medic,
			max(a.cd_estabelecimento)
		into STRICT	nm_paciente_w,
			cd_protocolo_w,
			nm_medico_solicitante_w,
			qt_tempo_medic_w,
			cd_estabelecimento_w
		from	paciente_setor a,
			paciente_atendimento b
		where	a.nr_seq_paciente = b.nr_seq_paciente
		and	a.nr_seq_paciente = nr_seq_paciente_setor_w
		and	((b.nr_seq_atendimento = nr_seq_paciente_w) or (b.nr_ciclo  = nr_ciclo_w));

		select	max(substr(a.nm_protocolo || '/' || b.nm_medicacao,1,255))
		into STRICT	nm_protocolo_w
		from	protocolo a,
			protocolo_medicacao b
		where	a.cd_protocolo = cd_protocolo_w
		and	a.cd_protocolo = b.cd_protocolo;

	elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		select	substr(obter_nome_pessoa_fisica(cd_pessoa_fisica_w,null),1,255),
			wheb_usuario_pck.get_cd_estabelecimento
		into STRICT	nm_paciente_w,
			cd_estabelecimento_w
		;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	regra_comunic_autor_conv a
	where	a.cd_estabelecimento	= cd_estabelecimento_w
	and	a.ie_situacao		= 'A';

	if (qt_registro_w > 0) then
		open c01;
		loop
		fetch c01 into
			nr_seq_regra_w,
			cd_area_proc_regra_w,
			cd_especialidade_proc_regra_w,
			cd_grupo_proc_regra_w,
			cd_procedimento_regra_w,
			ie_origem_proced_regra_w,
			cd_grupo_mat_regra_w,
			cd_subgrupo_mat_regra_w,
			cd_classe_mat_regra_w,
			cd_material_regra_w,
			nr_seq_classif_regra_w,
			ds_observacao_w,
			ds_titulo_regra_w,
			ds_mensagem_regra_w,
			ie_forma_envio_w,
			ds_email_origem_w,
			ds_email_destino_padrao_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			if (coalesce(nr_seq_classif_w,-1) = coalesce(coalesce(nr_seq_classif_regra_w,nr_seq_classif_w),-1)) then


				ds_titulo_w	:= 	wheb_mensagem_pck.get_Texto(311885); /*'Mudanca de estagio de autorizacao convenio';*/
				ds_comunicado_w	:=	substr(wheb_mensagem_pck.get_texto(311889,
								'NR_SEQUENCIA_AUTOR_P='|| NR_SEQUENCIA_AUTOR_P ||
								';NR_ATENDIMENTO_W='|| NR_ATENDIMENTO_W ||
								';DS_CONVENIO_W='|| DS_CONVENIO_W ||
								';NM_PACIENTE_W='|| NM_PACIENTE_W ||
								';NM_MEDICO_SOLICITANTE_W='|| NM_MEDICO_SOLICITANTE_W ||
								';DS_ESTAGIO_W='|| obter_estagio_autor(nr_seq_estagio_w,'D')),1,4000);


				if (qt_tempo_medic_w IS NOT NULL AND qt_tempo_medic_w::text <> '') then
					ds_comunicado_w := substr(ds_comunicado_w || wheb_mensagem_pck.get_Texto(311890) ||qt_tempo_medic_w  || chr(13) || chr(10),1,4000);
											/*'Duracao(Min.)		'*/

				end if;
				if (coalesce(nm_protocolo_w,'X') <> 'X') then
					ds_comunicado_w := substr(ds_comunicado_w || wheb_mensagem_pck.get_Texto(311891) ||nm_protocolo_w  || chr(13) || chr(10),1,4000);
											/*'Protocolo/Medicacao	'*/

				end if;

				ie_gerar_comunic_w	:= 'N';
				ds_lista_usuario_w	:= null;
				ds_lista_perfil_w	:= null;
				ds_email_destino_w	:= null;				

				open c03;
				loop
				fetch c03 into
					cd_procedimento_w,
					ie_origem_proced_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					begin /* Exception */
					select	cd_area_procedimento,
						cd_especialidade_medica,
						cd_grupo_proc
					into STRICT	cd_area_procedimento_w,
						cd_especialidade_medica_w,
						cd_grupo_proc_w
					from	estrutura_procedimento_v
					where	cd_procedimento		= cd_procedimento_w
					and	ie_origem_proced	= ie_origem_proced_w;
					exception
						when others then
						null;
					end;

					ds_comunicado_w	:= substr(ds_comunicado_w || chr(13) || chr(10) || wheb_mensagem_pck.get_Texto(311892) ||
								obter_descricao_procedimento(cd_procedimento_w,ie_origem_proced_w),1,4000);

					if (cd_area_procedimento_w	= cd_area_proc_regra_w) then
						ie_gerar_comunic_w	:= 'S';
						exit;
					elsif (cd_especialidade_medica_w = cd_especialidade_proc_regra_w) then
						ie_gerar_comunic_w	:= 'S';
						exit;
					elsif (cd_grupo_proc_w = cd_grupo_proc_regra_w) then
						ie_gerar_comunic_w	:= 'S';
						exit;
					elsif (cd_procedimento_w = cd_procedimento_regra_w) and (ie_origem_proced_w = ie_origem_proced_regra_w) then
						ie_gerar_comunic_w	:= 'S';
						exit;
					end if;
				end loop;
				close c03;

				ds_comunicado_w	:= substr(ds_comunicado_w || chr(13) || chr(10),1,4000);

				open c04;
				loop
				fetch c04 into
					cd_material_w;
				EXIT WHEN NOT FOUND; /* apply on c04 */
					begin
					select	cd_grupo_material,
						cd_subgrupo_material,
						cd_classe_material
					into STRICT	cd_grupo_material_w,
						cd_subgrupo_material_w,
						cd_classe_material_w
					from	estrutura_material_v a
					where	a.cd_material	= cd_material_w;
					exception
						when others then
						null;
					end;

					ds_comunicado_w	:= substr(ds_comunicado_w || chr(13) || chr(10) || wheb_mensagem_pck.get_Texto(311893) ||
								obter_desc_material(cd_material_w),1,4000);

					if (cd_grupo_material_w = cd_grupo_mat_regra_w) then
						ie_gerar_comunic_w	:= 'S';
						exit;
					elsif (cd_subgrupo_material_w = cd_subgrupo_mat_regra_w) then
						ie_gerar_comunic_w	:= 'S';
						exit;
					elsif (cd_classe_material_w = cd_classe_mat_regra_w) then
						ie_gerar_comunic_w	:= 'S';
						exit;
					elsif (cd_material_w = cd_material_regra_w) then
						ie_gerar_comunic_w	:= 'S';
						exit;
					end if;

				end loop;
				close c04;

				/* Se nao tem estrutura na regra sempre gera */

				if (coalesce(cd_area_proc_regra_w::text, '') = '') and (coalesce(cd_grupo_proc_regra_w::text, '') = '') and (coalesce(cd_especialidade_proc_regra_w::text, '') = '') and (coalesce(cd_procedimento_regra_w::text, '') = '') and (coalesce(cd_grupo_mat_regra_w::text, '') = '') and (coalesce(cd_subgrupo_mat_regra_w::text, '') = '') and (coalesce(cd_classe_mat_regra_w::text, '') = '') and (coalesce(cd_material_regra_w::text, '') = '') then --Troquei o material da autorizacao pelo material da regra. OS 402865
					ie_gerar_comunic_w	:= 'S';
				end if;

				if (ie_gerar_comunic_w = 'S') then
					open c02;
					loop
					fetch c02 into
						nm_usuario_dest_w,
						cd_perfil_destino_w,
						ie_medico_atend_w,
						ds_email_destino_regra_w,
						ie_medico_autor_w,
						ie_comunic_paciente_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
						begin
						if (coalesce(ie_forma_envio_w,'CI') = 'CI') then

							if (nm_usuario_dest_w IS NOT NULL AND nm_usuario_dest_w::text <> '') then
								ds_lista_usuario_w	:= ds_lista_usuario_w || nm_usuario_dest_w || ', ';
							end if;
							if (coalesce(ie_medico_atend_w,'N')	= 'S') then
								select 	max(obter_usuario_pessoa(cd_medico_atend_w))
								into STRICT 	nm_usuario_medico_w
								;
								if (nm_usuario_medico_w IS NOT NULL AND nm_usuario_medico_w::text <> '') then
									ds_lista_usuario_w	:= ds_lista_usuario_w || nm_usuario_medico_w || ', ';
								end if;
							end if;
							
							if (coalesce(ie_medico_autor_w,'N') = 'S') and (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
								select 	max(obter_usuario_pessoa(cd_medico_solicitante_w))
								into STRICT 	nm_usuario_medico_w
								;
								if (nm_usuario_medico_w IS NOT NULL AND nm_usuario_medico_w::text <> '') then
									ds_lista_usuario_w	:= ds_lista_usuario_w || nm_usuario_medico_w || ', ';
								end if;
							end if;
							if (cd_perfil_destino_w IS NOT NULL AND cd_perfil_destino_w::text <> '') then
								ds_lista_perfil_w	:= ds_lista_perfil_w || cd_perfil_destino_w || ', ';
							end if;
						elsif (coalesce(ie_forma_envio_w,'CI') = 'E') then

							if (nm_usuario_dest_w IS NOT NULL AND nm_usuario_dest_w::text <> '') then
								select	max(ds_email)
								into STRICT	ds_email_usuario_w
								from	usuario
								where	nm_usuario = nm_usuario_dest_w;

								if (ds_email_usuario_w IS NOT NULL AND ds_email_usuario_w::text <> '') then
									if (coalesce(ds_email_destino_w::text, '') = '') then
										ds_email_destino_w := ds_email_usuario_w;
									else
										ds_email_destino_w	:= substr(ds_email_destino_w||';'||ds_email_usuario_w,1,3999);
									end if;
								end if;
							end if;
							
							if (ds_email_destino_regra_w IS NOT NULL AND ds_email_destino_regra_w::text <> '') and (coalesce(ds_email_destino_w::text, '') = '') then
								ds_email_destino_w	:= ds_email_destino_regra_w;
							elsif (ds_email_destino_regra_w IS NOT NULL AND ds_email_destino_regra_w::text <> '') and (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then
								ds_email_destino_w	:= substr(ds_email_destino_w||';'||ds_email_destino_regra_w,1,3999);
							end if;	

							if (coalesce(ie_medico_autor_w,'N') = 'S') and (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
								
								select	max(substr(obter_compl_pf(cd_medico_solicitante_w,1,'M'),1,100))
								into STRICT	ds_email_med_w
								;
								
								if (ds_email_med_w IS NOT NULL AND ds_email_med_w::text <> '') and (coalesce(ds_email_destino_w::text, '') = '') then
									ds_email_destino_w	:= ds_email_med_w;
								elsif (ds_email_med_w IS NOT NULL AND ds_email_med_w::text <> '') and (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then
									ds_email_destino_w	:= substr(ds_email_destino_w||';'||ds_email_med_w,1,3999);
								end if;	
								
							end if;
							
							if (coalesce(ie_comunic_paciente_w,'N') = 'S') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
								
								select	max(substr(obter_compl_pf(cd_pessoa_fisica_w,1,'M'),1,100))
								into STRICT	ds_email_pac_w
								;
								
								if (ds_email_pac_w IS NOT NULL AND ds_email_pac_w::text <> '') and (coalesce(ds_email_destino_w::text, '') = '') then
									ds_email_destino_w	:= ds_email_pac_w;
								elsif (ds_email_pac_w IS NOT NULL AND ds_email_pac_w::text <> '') and (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then
									ds_email_destino_w	:= substr(ds_email_destino_w||';'||ds_email_pac_w,1,3999);
								end if;	
								
							end if;
							
						end if;

						end;
					end loop;
					close c02;
				end if;

				if (ds_titulo_regra_w IS NOT NULL AND ds_titulo_regra_w::text <> '') then
					--ds_titulo_w 	:= OBTER_TEXTO_CI_AUTOR(nr_sequencia_autor_p,nr_seq_regra_w,'T');
					SELECT * FROM OBTER_TEXTO_CI_AUTOR_2(nr_sequencia_autor_p, nr_seq_regra_w, 'T', ds_titulo_w, ds_long_w) INTO STRICT ds_titulo_w, ds_long_w;
				end if;	

				RAISE NOTICE 'ie_forma_envio_w: %', ie_forma_envio_w;
				RAISE NOTICE 'ds_email_destino_w: %', ds_email_destino_w;
				RAISE NOTICE 'ds_email_origem_w: %', ds_email_origem_w;
				RAISE NOTICE 'nr_seq_regra_w: %', nr_seq_regra_w;

				if (coalesce(ie_forma_envio_w,'CI') = 'CI') and
					((ds_lista_usuario_w IS NOT NULL AND ds_lista_usuario_w::text <> '') or (ds_lista_perfil_w IS NOT NULL AND ds_lista_perfil_w::text <> '')) then
					
					if (ds_mensagem_regra_w IS NOT NULL AND ds_mensagem_regra_w::text <> '') then						
						SELECT * FROM OBTER_TEXTO_CI_AUTOR_2(nr_sequencia_autor_p, nr_seq_regra_w, 'C', ds_varchar2_w, ds_mensagem_regra_w) INTO STRICT ds_varchar2_w, ds_mensagem_regra_w;
						ds_comunicado_w	:= ds_mensagem_regra_w;
					end if;

					if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
						ds_comunicado_w	:= substr(ds_comunicado_w || chr(13) || chr(10) || wheb_mensagem_pck.get_Texto(311894) || ds_observacao_w,1,4000);
					end if;
          if (position('<html' in lower(ds_comunicado_w)) > 0 and position('</html>' in lower(ds_comunicado_w)) > 0) then
            ie_converte_rtf_w := 'N';
          end if;

					CALL gerar_comunic_padrao(	clock_timestamp(),
								ds_titulo_w,
								ds_comunicado_w,
								nm_usuario_p,
								'N',
								ds_lista_usuario_w,
								'N',
								null,
								ds_lista_perfil_w,
								cd_estabelecimento_w,
								null,
								clock_timestamp(),
								null,
                							null,
								ie_converte_rtf_w);

				elsif (coalesce(ie_forma_envio_w,'CI') = 'E') and
					((ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') or (ds_email_destino_padrao_w IS NOT NULL AND ds_email_destino_padrao_w::text <> '')) then


					/*
						Only convert RTF to HTML when the rule's message does not contain <HTML> tags on itself.
					*/
					if (position('<html' in lower(ds_mensagem_regra_w)) = 0
					        and position('</html>' in lower(ds_mensagem_regra_w)) = 0) then
					
						ds_consulta_w := converte_rtf_html('select ds_mensagem from regra_comunic_autor_conv where nr_sequencia = :nr_sequencia', nr_seq_regra_w, nm_usuario_p, ds_consulta_w);					
					
						if ((ds_consulta_w)::numeric  > 0) then
							select	ds_texto
							into STRICT	ds_comunicado_ww
							from	tasy_conversao_rtf
							where	nr_sequencia = (ds_consulta_w)::numeric;
						end if;	
					
					end if;
					
					if (ds_mensagem_regra_w IS NOT NULL AND ds_mensagem_regra_w::text <> '') then
						SELECT * FROM OBTER_TEXTO_CI_AUTOR_2(nr_sequencia_autor_p, nr_seq_regra_w, 'C', ds_varchar2_w, ds_comunicado_ww) INTO STRICT ds_varchar2_w, ds_comunicado_ww;
					end if;
	
					if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
						ds_comunicado_ww	:= substr(ds_comunicado_ww || chr(13) || chr(10) || wheb_mensagem_pck.get_Texto(311894) || ds_observacao_w,1,4000);
					end if;

					if (coalesce(ds_email_destino_w::text, '') = '') then
						ds_titulo_w := OBTER_DESC_EXPRESSAO(727586);
					end if;
					
					/*
						If after the conversion the message has a tag '<html>', replace it with '<html tasy="html5">'.
						For some reason, this 'tasy' attribute makes the e-mail to be rendered correctly.
					*/
					if position('<html>' in lower(ds_comunicado_ww)) > 0 then
						ds_comunicado_ww := replace(ds_comunicado_ww, '<html>', '<html tasy="html5">');
					end if;
					
					CALL autor_conv_enviar_email_html(	ds_titulo_w,
									ds_comunicado_ww,
									ds_email_origem_w,
									coalesce(ds_email_destino_w,ds_email_destino_padrao_w),
									nm_usuario_p,
									'M',
									null);

				end if;
			end if;
			end;
		end loop;
		close c01;
	end if;
end if;

/* Nao pode dar commit nesta procedure */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_comunic_autor_conv ( nr_sequencia_autor_p bigint, nm_usuario_p text) FROM PUBLIC;

