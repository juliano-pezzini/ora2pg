-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_adiant_caixa_rec (cd_estabelecimento_p bigint, nr_seq_saldo_caixa_p bigint, nr_adiantamento_p bigint, nm_usuario_p text, ds_lista_adiant_p text, nr_seq_caixa_receb_p INOUT bigint) AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
nr_sequencia_w			bigint;
nr_seq_trans_rec_w		bigint;
vl_especie_w			double precision;
nr_seq_rec_aberto_w		bigint;
nr_adiantamento_w		bigint;
i				bigint;
ie_cartao_cheque_w		varchar(1);
/* Projeto Multimoeda - Variaveis */

qnt_moeda_adiant_w		bigint;
ie_moeda_estrang_w		varchar(1);
vl_especie_estrang_w		double precision;
vl_complemento_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
cd_moeda_w			integer;
dt_cotacao_w			timestamp;
ie_cotacao_caixa_w		varchar(1);
ie_caixa_estrang_w		varchar(1);
vl_adto_estrang_w		double precision;
qnt_receb_estrang_w		bigint;

C01 CURSOR FOR
SELECT	cd_pessoa_fisica,
	cd_cgc,
	coalesce(vl_especie,0),
	nr_adiantamento,
	vl_adto_estrang,
	cd_moeda
from	adiantamento
where	nr_adiantamento = nr_adiantamento_p
and	nr_adiantamento_p > 0

union

SELECT	cd_pessoa_fisica,
	cd_cgc,
	coalesce(vl_especie,0),
	nr_adiantamento,
	vl_adto_estrang,
	cd_moeda
from	adiantamento
where	' ' || ds_lista_adiant_p || ' ' like '% ' || nr_adiantamento || ' %'
and	(ds_lista_adiant_p IS NOT NULL AND ds_lista_adiant_p::text <> '')
order by 5;


BEGIN

if (nr_adiantamento_p IS NOT NULL AND nr_adiantamento_p::text <> '') and (nr_seq_saldo_caixa_p IS NOT NULL AND nr_seq_saldo_caixa_p::text <> '') then

	/* Consistencias */

	select	max(nr_sequencia)
	into STRICT	nr_seq_rec_aberto_w
	from	caixa_receb a
	where	nr_seq_saldo_caixa	= nr_seq_saldo_caixa_p
	and	coalesce(a.dt_fechamento::text, '') = ''
	and	coalesce(a.dt_cancelamento::text, '') = '';

	if (nr_seq_rec_aberto_w IS NOT NULL AND nr_seq_rec_aberto_w::text <> '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(193612);
	end if;

	select	max(nr_seq_trans_rec_adiant_caixa)
	into STRICT	nr_seq_trans_rec_w
	from	parametro_contas_receber
	where	cd_estabelecimento	= cd_estabelecimento_p;

	if (coalesce(nr_seq_trans_rec_w::text, '') = '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(193613);
	end if;
	
	/* Projeto Multimoeda - Busca a data do saldo para buscar a cotacao */

	select	max(dt_saldo),
		max(obter_se_caixa_estrang(nr_seq_caixa))
	into STRICT	dt_cotacao_w,
		ie_caixa_estrang_w
	from	caixa_saldo_diario
	where	nr_sequencia = nr_seq_saldo_caixa_p;
	-- Verifica se os adiantamentos selecionados estao em moeda nao liberada para o caixa
	select	count(*)
	into STRICT	qnt_moeda_adiant_w
	from 	adiantamento a
	where	((a.nr_adiantamento = nr_adiantamento_p	and	nr_adiantamento_p > 0)
	or (' ' || ds_lista_adiant_p || ' ' like '% ' || a.nr_adiantamento || ' %' and (ds_lista_adiant_p IS NOT NULL AND ds_lista_adiant_p::text <> '')))
	and	a.cd_moeda not in (SELECT	b.cd_moeda
				from	caixa_saldo_estrang b
				where	b.nr_seq_caixa_saldo = nr_seq_saldo_caixa_p
				
union

				SELECT	obter_moeda_padrao_empresa(a.cd_estabelecimento,'E')
				);
				
	if (coalesce(qnt_moeda_adiant_w,0) > 0) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(352320);
	end if;
	
	-- Verifica se tem cotacao cadastrada para as moedas do caixa
	if (coalesce(ie_caixa_estrang_w,'N') = 'S') then
		select	max(verifica_cotacao_moeda_caixa(nr_seq_caixa,dt_saldo))
		into STRICT	ie_cotacao_caixa_w
		from	caixa_saldo_diario
		where	nr_sequencia = nr_seq_saldo_caixa_p;
		if (coalesce(ie_cotacao_caixa_w,'N') = 'N') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(351678);
		end if;
	end if;

	ie_cartao_cheque_w := obter_param_usuario(813, 149, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_cartao_cheque_w);

	/* Fim consistencias */

	i := 1;
	open C01;
	loop
	fetch C01 into
		cd_pessoa_fisica_w,
		cd_cgc_w,
		vl_especie_w,
		nr_adiantamento_w,
		vl_adto_estrang_w,
		cd_moeda_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		/* Projeto Multimoeda - Verifica se o adiantamento e em moeda estrangeira, caso positivo identifica para gerar o recebimento em moeda estrangeira */

		if (coalesce(vl_adto_estrang_w,0) <> 0) then
			ie_moeda_estrang_w := 'S';
			select	obter_cotacao_moeda_paralelo(cd_moeda_w,dt_cotacao_w)
			into STRICT	vl_cotacao_w
			;
		else
			ie_moeda_estrang_w := 'N';
		end if;
		
		if (i	= 1) then
			select	nextval('caixa_receb_seq')
			into STRICT	nr_sequencia_w
			;

			insert into caixa_receb(nr_sequencia,
				dt_atualizacao, 
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_pessoa_fisica,
				cd_cgc,
				nr_seq_saldo_caixa,
				nr_seq_trans_financ,
				dt_recebimento,
				vl_especie)
			values (nr_sequencia_w,
				clock_timestamp(), 
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_pessoa_fisica_w,
				cd_cgc_w,
				nr_seq_saldo_caixa_p,
				nr_seq_trans_rec_w,
				clock_timestamp(),
				CASE WHEN ie_moeda_estrang_w='S' THEN 0  ELSE vl_especie_w END );
			nr_seq_caixa_receb_p := nr_sequencia_w;
		end if;
		
		/* Cria o recebimento em moeda estrangeira */

		if (ie_moeda_estrang_w = 'S' and coalesce(vl_cotacao_w,0) <> 0) then
			select	count(*)
			into STRICT	qnt_receb_estrang_w
			from	caixa_receb_estrang
			where	nr_seq_caixa_receb = nr_sequencia_w
			and	cd_moeda = cd_moeda_w;
			if (qnt_receb_estrang_w > 0) then
				update	caixa_receb_estrang
				set	vl_especie_estrang = coalesce(vl_especie_estrang,0) + (vl_especie_w / vl_cotacao_w),
					vl_complemento = (coalesce(vl_especie,0) + vl_especie_w) - (coalesce(vl_especie_estrang,0) + (vl_especie_w / vl_cotacao_w)),
					vl_especie = coalesce(vl_especie,0) + vl_especie_w
				where	nr_seq_caixa_receb = nr_sequencia_w
				and	cd_moeda = cd_moeda_w;
			else
				insert into caixa_receb_estrang(
						nr_sequencia,
						nr_seq_caixa_receb,
						cd_moeda,
						vl_especie_estrang,
						vl_cotacao,
						vl_especie,
						vl_complemento,
						dt_atualizacao,
						nm_usuario)
				values	(nextval('caixa_receb_estrang_seq'),
					nr_sequencia_w,
					cd_moeda_w,
					(vl_especie_w / vl_cotacao_w),
					vl_cotacao_w,
					vl_especie_w,
					vl_especie_w - (vl_especie_w / vl_cotacao_w),
					clock_timestamp(),
					nm_usuario_p);
			end if;
			qnt_receb_estrang_w := 0;
			ie_moeda_estrang_w := 'N';
			vl_cotacao_w := null;
		end if;

		update	adiantamento
		set	nr_seq_caixa_rec	= nr_sequencia_w,
			nr_seq_trans_caixa	= nr_seq_trans_rec_w
		where	nr_adiantamento		= nr_adiantamento_w;

		if (coalesce(ie_cartao_cheque_w,'N')	= 'S') then

			update	cheque_cr a
			set	a.nr_seq_caixa_rec	= nr_sequencia_w
			where (a.nr_adiantamento = nr_adiantamento_w or
				exists (SELECT	1
				from	adiantamento_cheque_cr x
				where	x.nr_adiantamento	= nr_adiantamento_w
				and	x.nr_seq_cheque		= a.nr_seq_cheque));

			update	movto_cartao_cr
			set	nr_seq_caixa_rec	= nr_sequencia_w
			where	nr_adiantamento		= nr_adiantamento_w;

		end if;

		i	:= i + 1;

		end;
	end loop;
	close C01;

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_adiant_caixa_rec (cd_estabelecimento_p bigint, nr_seq_saldo_caixa_p bigint, nr_adiantamento_p bigint, nm_usuario_p text, ds_lista_adiant_p text, nr_seq_caixa_receb_p INOUT bigint) FROM PUBLIC;

