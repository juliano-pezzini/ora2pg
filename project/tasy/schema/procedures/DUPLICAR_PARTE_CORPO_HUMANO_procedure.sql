-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_parte_corpo_humano ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE




nr_seq_parte_corpo_w	bigint;
nr_seq_parte_corpo_old_w	bigint;
nr_seq_articulacao_w		bigint;
nr_seq_articulacao_old_w	bigint;
nr_seq_ARTIC_MOV_MUSCULO_w	bigint;
nr_seq_ARTIC_MOV_MUSCULO_old_w	bigint;

C01 CURSOR FOR
	SELECT	*
	from	PARTE_CORPO_HUMANO
	where	nr_sequencia	= nr_sequencia_p;

c02 CURSOR FOR
	SELECT	*
	from	ARTICULACAO
	where	NR_SEQ_PARTE = nr_seq_parte_corpo_old_w;

c03 CURSOR FOR
	SELECT	*
	from	ARTIC_MOV_MUSCULO
	where	NR_SEQ_ARTICULACAO = nr_seq_articulacao_old_w;


c04 CURSOR FOR
	SELECT	*
	from	ARTIC_MOV_MUSCULO_REGRA
	where	NR_SEQ_ART_MOV_MUSCULO = nr_seq_ARTIC_MOV_MUSCULO_old_w;


c01_w	c01%rowtype;
c02_w	c02%rowtype;
c03_w	c03%rowtype;
c04_w	c04%rowtype;



BEGIN
open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	nextval('parte_corpo_humano_seq')
	into STRICT	nr_seq_parte_corpo_w
	;

	nr_seq_parte_corpo_old_w	:= c01_w.nr_sequencia;

	insert into PARTE_CORPO_HUMANO(
				 NR_SEQUENCIA,
				 DT_ATUALIZACAO,
				 NM_USUARIO,
				 DT_ATUALIZACAO_NREC,
				 NM_USUARIO_NREC,
				 DS_PARTE_CORPO,
				 IE_SITUACAO,
				 NR_SEQ_APRES,
				 IE_QUADRO_CLINICO)
			values (
				 nr_seq_parte_corpo_w,
				clock_timestamp(),
				 nm_usuario_p,
				 clock_timestamp(),
				 nm_usuario_p,
				 c01_w.DS_PARTE_CORPO,
				 c01_w.IE_SITUACAO,
				 c01_w.NR_SEQ_APRES,
				 c01_w.IE_QUADRO_CLINICO);


	open C02;
	loop
	fetch C02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		nr_seq_articulacao_old_w	:= c02_w.nr_sequencia;

		select	nextval('articulacao_seq')
		into STRICT	nr_seq_articulacao_w
		;

		insert into ARTICULACAO(
					 NR_SEQUENCIA,
					 DS_ARTICULACAO,
					 DT_ATUALIZACAO,
					 NM_USUARIO,
					 DT_ATUALIZACAO_NREC,
					 NM_USUARIO_NREC,
					 IE_SITUACAO,
					 NR_SEQ_PARTE,
					 NR_SEQ_APRES)
				values (
					 nr_seq_articulacao_w,
					 c02_w.DS_ARTICULACAO,
					 clock_timestamp(),
					 nm_usuario_p,
					 clock_timestamp(),
					 nm_usuario_p,
					 c02_w.IE_SITUACAO,
					 nr_seq_parte_corpo_w,
					 c02_w.NR_SEQ_APRES);



			open C03;
			loop
			fetch C03 into
				c03_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin

				select	nextval('artic_mov_musculo_seq')
				into STRICT	nr_seq_ARTIC_MOV_MUSCULO_w
				;

				nr_seq_ARTIC_MOV_MUSCULO_old_w	:= c03_w.nr_sequencia;

				insert into ARTIC_MOV_MUSCULO(
							 NR_SEQUENCIA,
							 DT_ATUALIZACAO,
							 NM_USUARIO,
							 DT_ATUALIZACAO_NREC,
							 NM_USUARIO_NREC,
							 IE_SITUACAO,
							 NR_SEQ_ARTICULACAO,
							 NR_SEQ_MOVIMENTO,
							 NR_SEQ_MUSCULO,
							 IE_MUSCULATURA,
							 NR_SEQ_APRES)
						values (
							 nr_seq_ARTIC_MOV_MUSCULO_w,
							clock_timestamp(),
							 nm_usuario_p,
							 clock_timestamp(),
							 nm_usuario_p,
							 c03_w.IE_SITUACAO,
							 nr_seq_articulacao_w,
							 c03_w.NR_SEQ_MOVIMENTO,
							 c03_w.NR_SEQ_MUSCULO,
							 c03_w.IE_MUSCULATURA,
							 c03_w.NR_SEQ_APRES);




				open C04;
				loop
				fetch C04 into
					c04_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					insert into ARTIC_MOV_MUSCULO_REGRA(
								 NR_SEQUENCIA,
								 DT_ATUALIZACAO,
								 NM_USUARIO,
								 DT_ATUALIZACAO_NREC,
								 NM_USUARIO_NREC,
								 QT_IDADE_MIN,
								 QT_IDADE_MAX,
								 QT_DOSE_MIN,
								 QT_DOSE_MAX,
								 QT_DOSE_PADRAO,
								 NR_SEQ_ART_MOV_MUSCULO,
								 QT_PONTOS_PADRAO,
								 QT_PONTOS_MIN,
								 QT_PONTOS_MAX,
								 QT_PESO_MIN,
								 QT_PESO_MAX,
								 QT_MULTIPLO,
								 IE_FORMA_CALCULO,
								 NR_SEQ_TOXINA)
							values (
								 nextval('artic_mov_musculo_regra_seq'),
								 clock_timestamp(),
								 nm_usuario_p,
								 clock_timestamp(),
								 nm_usuario_p,
								 c04_w.QT_IDADE_MIN,
								 c04_w.QT_IDADE_MAX,
								 c04_w.QT_DOSE_MIN,
								 c04_w.QT_DOSE_MAX,
								 c04_w.QT_DOSE_PADRAO,
								 nr_seq_ARTIC_MOV_MUSCULO_w,
								 c04_w.QT_PONTOS_PADRAO,
								 c04_w.QT_PONTOS_MIN,
								 c04_w.QT_PONTOS_MAX,
								 c04_w.QT_PESO_MIN,
								 c04_w.QT_PESO_MAX,
								 c04_w.QT_MULTIPLO,
								 c04_w.IE_FORMA_CALCULO,
								 c04_w.NR_SEQ_TOXINA);

					end;
				end loop;
				close C04;


				end;
			end loop;
			close C03;



		end;
	end loop;
	close C02;


	end;
end loop;
close C01;



commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_parte_corpo_humano ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

