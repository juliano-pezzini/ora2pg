-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE buscar_exames_pendentes ( nr_prescricao_p bigint, nm_usuario_banco_p text, cd_estabelecimento_p bigint, cd_equipamento_p text, resultado INOUT REFCURSOR ) AS $body$
BEGIN
    OPEN resultado FOR

 SELECT distinct
	a.nr_prescricao,
	a.cd_protocolo,
	a.nr_seq_protocolo,
	a.nr_sequencia,
	a.cd_procedimento,
	p.ds_procedimento,
	a.qt_procedimento,
	a.dt_atualizacao,
	a.nm_usuario,
	a.ds_observacao,
	a.ie_origem_proced,
	a.ie_urgencia,
	a.ds_dado_clinico,
	a.ie_suspenso,
	a.cd_setor_atendimento,
	a.nr_atendimento,
	a.cd_medico,
	a.dt_prescricao,
	a.dt_liberacao,
	a.dt_liberacao_medico,
	a.ie_recem_nato,
	to_char(t.dt_entrada, 'dd/mm/yyyy hh24:mi:ss') dt_entrada,
	g.cd_setor_atendimento cd_setor_paciente,
	CASE WHEN coalesce(a.cd_recem_nato::text, '') = '' THEN  c.nm_pessoa_fisica  ELSE substr(obter_nome_pf(a.cd_recem_nato), 1, 80) || 'RN de '|| c.nm_pessoa_fisica END  nm_paciente,
	elimina_acentuacao(upper(CASE WHEN coalesce(a.cd_recem_nato::text, '') = '' THEN  c.nm_pessoa_fisica  ELSE substr(obter_nome_pf(a.cd_recem_nato), 1, 80) || 'RN de '|| c.nm_pessoa_fisica END )) nm_paciente_sem_acento,
	c.dt_nascimento,
	to_char(a.dt_mestruacao, 'dd/mm/yyyy hh24:mi:ss ') dt_mestruacao,
	c.ie_sexo,
	a.qt_peso,
	substr(obter_nome_pessoa_fisica(t.cd_pessoa_responsavel, null), 1, 40) nm_pessoa_responsavel,
	CASE WHEN a.ie_env_cpf_resp_ws='S' THEN  r.nr_cpf END  nr_cpf_resp,
	c.nr_cpf,
	substr(obter_descricao_padrao('PESSOA_FISICA', 'NR_TELEFONE_CELULAR', t.cd_pessoa_responsavel), 1, 20) nr_telefone_resp,
	c.nr_prontuario,
	t.cd_procedencia,
	a.ds_observacao_coleta,
	t.ds_senha,
	d.nm_pessoa_fisica nm_medico,
	d.nr_cpf nr_cpf_medico,
	e.nr_crm,
	a.dt_resultado dt_resultado,
	a.hr_resultado hr_resultado,
	e.uf_crm,
	f.cd_convenio,
	a.qt_altura_cm,
	to_char(lab_obter_data_coleta_amostra(a.nr_prescricao, a.nr_sequencia), 'dd/mm/yyyy hh24:mi:ss') dt_coleta,
	f.cd_categoria,
	lab_obter_dados_pac_med_uso(c.cd_pessoa_fisica, 'Q') qt_dose,
	lab_obter_dados_pac_med_uso(c.cd_pessoa_fisica, 'D') dt_ultima_dose,
	f.cd_usuario_convenio,
	f.dt_validade_carteira,
	f.nr_doc_convenio,
	f.ie_tipo_guia,
	v.ds_convenio,
	v.cd_cgc cd_cgc_conv,
	v.cd_regional cd_regional_conv,
	a.cd_material_exame,
	m.ds_material_exame,
	y.cd_exame,
	y.nm_exame,
	a.ds_material_especial,
	coalesce(a.ie_amostra, 'N') ie_amostra_entregue,
	a.ds_horarios,
	a.nr_seq_exame,
	z.ds_endereco,
	z.nr_endereco,
	z.ds_complemento,
	z.ds_bairro,
	z.ds_municipio,
	z.sg_estado,
	Lab_obter_dados_pac_prescricao(a.nr_prescricao,z.cd_pessoa_fisica)nr_telefone,
	z.cd_cep,
	a.dt_prev_execucao ,
	s.ds_setor_atendimento ds_setor_paciente,
	g.cd_unidade_basica || cd_unidade_compl cd_unidade,
	CASE WHEN coalesce(a.ie_envia_vl_proced_ws, 'S')='S' THEN  obter_preco_procedimento(t.cd_estabelecimento, f.cd_convenio, f.cd_categoria, a.dt_prescricao, a.cd_procedimento, a.ie_origem_proced, f.cd_tipo_acomodacao, t.ie_tipo_atendimento, g.cd_setor_atendimento, a.cd_medico, null, f.cd_usuario_convenio, f.cd_plano_convenio, t.ie_clinica, f.cd_empresa, 'P')  ELSE null END  vl_procedimento,
	a.ie_executar_leito,
	a.cd_recem_nato,
	substr(obter_nome_pf(a.cd_recem_nato), 1, 80) nm_recem_nato,
	y.nr_seq_grupo,
	coalesce(substr(obter_estab_integracao(a.cd_estabelecimento, 19), 1, 20), a.cd_estabelecimento) cd_estabelecimento,
	a.nr_seq_proc_interno,
	substr(obter_proc_interno(a.nr_seq_proc_interno, 'CI'), 1, 20) cd_interno_integracao,
	y.cd_exame_integracao cd_exame_integracao, m.cd_material_integracao,
	a.nr_controle_exame nr_controle_exame,
	substr(obter_medic_hist_saude_atend(t.nr_atendimento), 1, 2000) ds_medicamento_uso,
	substr(obter_compl_pf(a.cd_pessoa_fisica, 5, 'N'), 1, 255) nm_mae,
	t.ie_tipo_atendimento,
	obter_desc_cor_pele(c.nr_seq_cor_pele) cor_pele,
	c.nm_social,
	substr(obter_triagem_atendimento(t.nr_atendimento, 'C'), 1, 255) ds_classific_pa,
	a.ds_senha_fila ds_senha_fila,
	CASE WHEN a.ie_env_senha_ws='S' THEN  t.dt_inicio_atendimento END  dt_inicio_atendimento,
	CASE WHEN a.ie_env_email_ws='S' THEN  z.ds_email END  ds_email,
	CASE WHEN a.ie_env_obs_ws='S' THEN  a.ds_prescr_obs END  ds_prescr_obs,
   c.CD_RFC,
   (SELECT ELIMINA_ACENTUACAO(nm_sobrenome_pai) from pessoa_fisica where cd_pessoa_fisica = c.cd_pessoa_fisica) paciente_sobrenome_pai,
   (select ELIMINA_ACENTUACAO(nm_sobrenome_mae) from pessoa_fisica where cd_pessoa_fisica = c.cd_pessoa_fisica) paciente_sobrenome_mae,
   (select ELIMINA_ACENTUACAO(NM_PRIMEIRO_NOME) from pessoa_fisica where cd_pessoa_fisica = c.cd_pessoa_fisica) paciente_primeiro_nome,
   a.medico_sobrenome_pai,
   a.medico_sobrenome_mae,
   a.medico_primeiro_nome,
   c.cd_pessoa_fisica,
   a.codigo_medico,
   f.cd_complemento,
   t.ie_clinica,
   obter_dados_unidade(a.cd_setor_atendimento,g.cd_unidade_basica, g.cd_unidade_compl, 'NRSI') nr_seq_interno,
   a.cid_atendimento
FROM dual x, convenio v, setor_atendimento s, procedimento p, atend_paciente_unidade g, atend_categoria_convenio f, pessoa_fisica d, pessoa_fisica c, atendimento_paciente t
LEFT OUTER JOIN pessoa_fisica r ON (t.cd_pessoa_responsavel = r.cd_pessoa_fisica)
, (	select distinct
		a.nr_controle_exame,
		a.nr_prescricao,
		a.nr_sequencia,
		a.ie_amostra,
		to_char(a.dt_resultado, 'dd/mm/yyyy hh24:mi:ss') dt_resultado,
		to_char(a.dt_resultado, 'hh24:mi:ss') hr_resultado,
		a.dt_prev_execucao ,
		b.nr_atendimento,
		b.dt_mestruacao,
		b.dt_liberacao_medico,
		b.qt_peso,
		b.ie_recem_nato,
		b.dt_prescricao,
		a.ie_se_necessario,
		a.nm_usuario,
		a.dt_atualizacao,
		a.ds_horarios,
		a.cd_protocolo,
		a.nr_seq_protocolo,
		b.cd_estabelecimento,
		a.ds_observacao_coleta,
		a.cd_setor_atendimento,
		a.ds_dado_clinico,
		b.dt_liberacao,
		a.ie_suspenso,
		a.ie_executar_leito,
		a.qt_procedimento,
		a.cd_material_exame,
		a.nr_seq_proc_interno,
		a.ie_urgencia,
		a.nr_seq_exame,
		b.cd_medico,
		b.cd_pessoa_fisica,
		a.cd_procedimento,
		a.ds_material_especial,
		a.ds_observacao,
		b.qt_altura_cm,
		b.cd_recem_nato,
		a.ie_origem_proced,
		l.ie_envia_vl_proced_ws,
		CASE WHEN l.ie_env_senha_ws='S' THEN (			select upper(substr(obter_letra_verifacao_senha(coalesce(psf.nr_seq_fila_senha_origem, psf.nr_seq_fila_senha)),1,10) || psf.cd_senha_gerada)			from paciente_senha_fila psf				inner join atendimento_paciente ap ON (ap.nr_seq_pac_senha_fila = psf.nr_sequencia)			where ap.nr_atendimento = b.nr_atendimento)  ELSE null END  ds_senha_fila,
		l.ie_env_senha_ws ie_env_senha_ws,
      b.ds_observacao ds_prescr_obs,
      l.ie_env_email_ws,
      l.ie_env_obs_ws,
	   l.ie_env_cpf_resp_ws,
     (select ELIMINA_ACENTUACAO(nm_sobrenome_pai) from pessoa_fisica where cd_pessoa_fisica = b.CD_MEDICO) medico_sobrenome_pai,
     (select ELIMINA_ACENTUACAO(nm_sobrenome_mae) from pessoa_fisica where cd_pessoa_fisica = b.CD_MEDICO) medico_sobrenome_mae,
     (select ELIMINA_ACENTUACAO(NM_PRIMEIRO_NOME) from pessoa_fisica where cd_pessoa_fisica = b.CD_MEDICO) medico_primeiro_nome,
     b.cd_medico codigo_medico,
     coalesce(Obter_Cid_Atendimento(b.nr_atendimento,'P'), Obter_Cid_Atendimento(b.nr_atendimento,'S')) cid_atendimento
	FROM setor_atendimento c, prescr_procedimento a, prescr_medica b
LEFT OUTER JOIN lab_parametro l ON (b.cd_estabelecimento = l.cd_estabelecimento)
WHERE a.nr_prescricao = b.nr_prescricao and a.cd_setor_atendimento = c.cd_setor_atendimento  and coalesce(a.dt_integracao::text, '') = '' and a.cd_motivo_baixa = 0 and coalesce(a.ie_suspenso, 'N') = 'N' and ((coalesce(l.qt_dias_int_webs, 0) = 0) OR (coalesce(b.dt_liberacao_medico, b.dt_liberacao) > clock_timestamp() - l.qt_dias_int_webs)) and a.nr_prescricao = nr_prescricao_p and upper(c.nm_usuario_banco) = upper(nm_usuario_banco_p) and ((cd_estabelecimento_p = 0) OR (coalesce(substr(obter_estab_integracao(b.cd_estabelecimento, 19), 1, 20), b.cd_estabelecimento) = cd_estabelecimento_p))
	 ) a
LEFT OUTER JOIN compl_pessoa_fisica z ON (a.cd_pessoa_fisica = z.cd_pessoa_fisica AND 1 = z.ie_tipo_complemento)
LEFT OUTER JOIN medico e ON (a.cd_medico = e.cd_pessoa_fisica)
LEFT OUTER JOIN prescr_proc_hor i ON (a.nr_prescricao = i.nr_prescricao AND a.nr_sequencia = i.nr_seq_procedimento)
LEFT OUTER JOIN material_exame_lab m ON (a.cd_material_exame = m.cd_material_exame)
, coalesce(a
LEFT OUTER JOIN exame_laboratorio y ON (coalesce(a.nr_seq_exame, obter_exame_lab_proc_int(a.nr_seq_proc_interno)) = y.nr_seq_exame)
WHERE a.cd_procedimento = p.cd_procedimento and a.ie_origem_proced = p.ie_origem_proced and a.cd_pessoa_fisica = c.cd_pessoa_fisica   and a.cd_medico = d.cd_pessoa_fisica      and g.nr_seq_interno = obter_atepacu_paciente(a.nr_atendimento, 'A') and g.cd_setor_atendimento = s.cd_setor_atendimento and f.nr_atendimento = a.nr_atendimento and t.nr_atendimento = a.nr_atendimento and (
		(
			(
				a.ie_se_necessario = 'S'
				and exists (
					select 1
					from empresa_integr_dados i
					where
						a.cd_estabelecimento = coalesce(i.cd_estabelecimento, a.cd_estabelecimento)
						and i.nr_seq_empresa_integr = 19
						and ie_gerar_exame_se_necessario = 'S'
					)
				and (i.nm_usuario_reaprazamento IS NOT NULL AND i.nm_usuario_reaprazamento::text <> '')
			) OR (
				coalesce(a.ie_se_necessario, 'N') = 'N'
			)
		) OR (
			not exists (
				select 1 from empresa_integr_dados i
				where a.cd_estabelecimento = coalesce(i.cd_estabelecimento, a.cd_estabelecimento)
				and i.nr_seq_empresa_integr = 19
				and ie_gerar_exame_se_necessario = 'S'
			)
		)
	) and f.dt_inicio_vigencia in (
		select w.dt_inicio_vigencia
		from atend_categoria_convenio W
		where w.nr_atendimento = a.nr_atendimento
	) and f.cd_convenio = v.cd_convenio and lab_valida_realiza_integracao(a.nr_prescricao, a.nr_sequencia) = 'S'  and ((cd_equipamento_p IS NOT NULL AND cd_equipamento_p::text <> '') and exists (
                select 1 
                from lab_exame_equip eq, 
                     equipamento_lab e 
                where eq.nr_seq_exame = a.nr_seq_exame 
                  and eq.cd_equipamento = e.cd_equipamento 
                  and e.ds_sigla = cd_equipamento_p)
     or coalesce(cd_equipamento_p::text, '') = ''
      ) order by
	a.nr_atendimento, a.nr_prescricao;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE buscar_exames_pendentes ( nr_prescricao_p bigint, nm_usuario_banco_p text, cd_estabelecimento_p bigint, cd_equipamento_p text, resultado INOUT REFCURSOR ) FROM PUBLIC;

