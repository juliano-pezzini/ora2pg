-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ajustar_solucao_dialise ( nr_prescricao_p bigint, nr_seq_dialise_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_ciclos_w				smallint;
ie_tipo_peritoneal_w	hd_prescricao.ie_tipo_peritoneal%type;
qt_volume_ciclo_w		hd_prescricao.qt_volume_ciclo%type;
qt_volume_w				prescr_solucao.qt_volume%type;
nr_seq_solucao_w		prescr_solucao.nr_seq_solucao%type;
nr_etapas_dialise_w		hd_prescricao.nr_etapas%type;
qt_hora_duracao_w		hd_prescricao.qt_hora_duracao%type;
qt_min_duracao_w		hd_prescricao.qt_min_duracao%type;
nr_horas_validade_w		prescr_medica.nr_horas_validade%type;
qt_tempo_ciclo_w		integer;
qt_horas_etapa_w		integer;
qt_volume_total_w		hd_prescricao.qt_volume_total%type;
qt_min_sessao_w			hd_prescricao.qt_min_sessao%type;


BEGIN

select	max(a.nr_ciclos),
		max(a.ie_tipo_peritoneal),
		max(a.qt_volume_ciclo),
		max(a.nr_etapas),
		max(coalesce(a.qt_hora_duracao,0)),
		max(coalesce(a.qt_min_duracao,0)),
		max(coalesce(a.qt_hora_sessao, b.nr_horas_validade)),
		max(coalesce(a.qt_min_sessao, 0))
into STRICT	nr_ciclos_w,
		ie_tipo_peritoneal_w,
		qt_volume_ciclo_w,
		nr_etapas_dialise_w,
		qt_hora_duracao_w,
		qt_min_duracao_w,
		nr_horas_validade_w,
		qt_min_sessao_w
from	hd_prescricao a,
		prescr_medica b
where	a.nr_prescricao	= nr_prescricao_p
and		a.nr_sequencia	= nr_seq_dialise_p
and		a.nr_prescricao = b.nr_prescricao;

	-- Removido cursor e c√°lculo exclusivo para a DPI, conforme OS 1262559
if (coalesce(nr_ciclos_w::text, '') = '') then
	nr_ciclos_w	:= 1;
end if;

select	sum(b.qt_solucao)
into STRICT 	qt_volume_w
from	prescr_solucao a,
		prescr_material b
where	b.nr_sequencia_solucao 	= a.nr_seq_solucao
and		b.nr_prescricao 		= a.nr_prescricao
and		a.nr_prescricao 		= nr_prescricao_p
and		a.nr_seq_dialise 		= nr_seq_dialise_p;

if (qt_volume_ciclo_w IS NOT NULL AND qt_volume_ciclo_w::text <> '') then
	nr_ciclos_w	:= ceil(dividir(qt_volume_w,qt_volume_ciclo_w));
end if;

qt_tempo_ciclo_w	:= (qt_hora_duracao_w * 60) + qt_min_duracao_w;

if (coalesce(qt_tempo_ciclo_w,0) = 0) then
	qt_volume_total_w	:= 0;
else
	qt_volume_total_w	:= round((((nr_horas_validade_w * 60) + (qt_min_sessao_w)) / qt_tempo_ciclo_w) * qt_volume_ciclo_w);
end if;

if (coalesce(qt_volume_w,0) = 0) then
	nr_etapas_dialise_w	:= 0;
else
	nr_etapas_dialise_w	:= ceil(qt_volume_total_w / qt_volume_w);
end if;

--qt_tempo_ciclo_w	:= (qt_hora_duracao_w * 60) + qt_min_duracao_w;
--qt_horas_etapa_w	:= qt_tempo_ciclo_w * nr_ciclos_w;
--nr_etapas_dialise_w	:= ceil(dividir(nr_horas_validade_w * 60, qt_horas_etapa_w));
update	hd_prescricao
set		nr_etapas			= nr_etapas_dialise_w,
		nr_ciclos			= nr_ciclos_w,
		--qt_volume_total		= trunc(qt_volume_w * dividir(nr_horas_validade_w * 60, qt_horas_etapa_w)),
		qt_volume_total		= qt_volume_total_w,
		qt_hora_sessao		= nr_horas_validade_w
where	nr_prescricao		= nr_prescricao_p;

update	prescr_solucao
set		qt_solucao_total 	= qt_volume_w,
		nr_etapas 			= nr_etapas_dialise_w
where	nr_prescricao 		= nr_prescricao_p
and		nr_seq_dialise 		= nr_seq_dialise_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ajustar_solucao_dialise ( nr_prescricao_p bigint, nr_seq_dialise_p bigint, nm_usuario_p text) FROM PUBLIC;

