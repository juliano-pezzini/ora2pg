-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_cot_mat_autor_cir ( nr_seq_autor_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_mat_autor_cir_w		bigint;
cd_material_w			integer;
qt_material_w			double precision;
vl_preco_w			double precision;
cd_fornecedor_w			varchar(14);
cd_cond_pagto_w			bigint;
ie_consignado_w			varchar(1);
cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
nr_seq_agenda_w			autorizacao_cirurgia.nr_seq_agenda%type;
nr_atendimento_w		bigint;
cd_categoria_w			varchar(10);
cd_plano_w			varchar(10);
ie_tipo_atendimento_w		smallint;
cd_tipo_acomodacao_w		smallint;
cd_setor_atendimento_w		integer;
cd_cgc_fornec_w			varchar(14);
dt_ult_vigencia_w		timestamp;
cd_tabela_preco_w		smallint;
ie_origem_preco_w		bigint;
qt_registro_w			bigint;
ie_usa_tabela_mat_especial_w	varchar(1)	:= 'N';
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
ie_preco_mat_esp_w		varchar(1)	:= '0';
nr_seq_ajuste_mat_w		bigint;
nr_seq_classif_atend_w		atendimento_paciente.nr_seq_classificacao%type;

c01 CURSOR FOR
SELECT	nr_sequencia
from	material_autor_cirurgia
where	nr_seq_autorizacao	= nr_seq_autor_p;

c02 CURSOR FOR
SELECT	cd_cgc
from	material_autor_cir_cot
where	nr_sequencia		= nr_seq_mat_autor_cir_w;


BEGIN

open c01;
loop
fetch c01 into
	nr_seq_mat_autor_cir_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	a.cd_material,
		coalesce(a.qt_solicitada,1),
		b.nr_seq_agenda,
		b.nr_atendimento,
		b.cd_estabelecimento
	into STRICT	cd_material_w,
		qt_material_w,
		nr_seq_agenda_w,
		nr_atendimento_w,
		cd_estabelecimento_w
	from	autorizacao_cirurgia b,
		material_autor_cirurgia a
	where	a.nr_seq_autorizacao	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_mat_autor_cir_w;

	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
		select	a.cd_convenio,
			a.cd_categoria,
			a.cd_plano_convenio,
			b.ie_tipo_atendimento,
			(obter_tipo_acomod_atend(a.nr_atendimento,'C'))::numeric ,
			obter_setor_atendimento(a.nr_atendimento),
			b.nr_seq_classificacao
		into STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_plano_w,
			ie_tipo_atendimento_w,
			cd_tipo_acomodacao_w,
			cd_setor_atendimento_w,
			nr_seq_classif_atend_w
		from	atendimento_paciente b,
			atend_categoria_convenio a
		where	a.nr_atendimento	= b.nr_atendimento
		and	a.nr_atendimento	= nr_atendimento_w
		and	a.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento);

	elsif (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then

		select	cd_convenio,
			cd_categoria,
			cd_plano,
			ie_tipo_atendimento,
			cd_tipo_acomodacao,
			cd_setor_atendimento
		into STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_plano_w,
			ie_tipo_atendimento_w,
			cd_tipo_acomodacao_w,
			cd_setor_atendimento_w
		from	agenda_paciente
		where	nr_sequencia	= nr_seq_agenda_w;

	else

		select	max(a.cd_convenio),
			max(c.cd_categoria),
			max(c.cd_plano_convenio)
		into STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_plano_w
		from	autorizacao_cirurgia b,
			autorizacao_convenio_tiss c,
			autorizacao_convenio a
		where	a.nr_sequencia = b.nr_seq_autor_conv
		and	a.nr_sequencia = c.nr_sequencia_autor
		and	b.nr_sequencia = nr_seq_autor_p;

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	convenio_preco_fornec
	where	cd_convenio	= cd_convenio_w;

	select	coalesce(max(ie_preco_mat_esp), '0')
	into STRICT	ie_preco_mat_esp_w
	from	convenio_estabelecimento
	where	cd_convenio = cd_convenio_w
	and	cd_estabelecimento = cd_estabelecimento_w;

	if (qt_registro_w > 0) then
		ie_usa_tabela_mat_especial_w	:= 'S';
	else
		ie_usa_tabela_mat_especial_w	:= 'N';
	end if;

	open c02;
	loop
	fetch c02 into
		cd_cgc_fornec_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		if (ie_usa_tabela_mat_especial_w = 'S') and (ie_preco_mat_esp_w <> '1') then
			vl_preco_w := obter_preco_conv_mat_fornec(cd_convenio_w, cd_cgc_fornec_w, cd_material_w, clock_timestamp(), vl_preco_w);
		else			
			SELECT * FROM define_preco_material(	cd_estabelecimento_w, 		-- cd_estabelecimento_p		number,
						cd_convenio_w,                   -- cd_convenio_p          	number,
						cd_categoria_w,                  -- cd_categoria_p         	varchar2,
						clock_timestamp(),                         -- dt_vigencia_p          	date,
						cd_material_w,                   -- cd_material_p          	number,
						coalesce(cd_tipo_acomodacao_w,0),     -- cd_tipo_acomodacao_p   	number,
						coalesce(ie_tipo_atendimento_w,0),    -- ie_tipo_atendimento_p  	number,
						coalesce(cd_setor_atendimento_w,0),   -- cd_setor_atendimento_p 	number,
						cd_cgc_fornec_w,                 -- cd_cgc_fornecedor_p		varchar2,
						0,                               -- qt_idade_p			number,
						0,                               -- nr_sequencia_p		number,
						cd_plano_w,                      -- cd_plano_p			varchar2,
						null,                            -- cd_proc_referencia_p		number,
						null,                            -- ie_origem_proc_p		number,
						null,                            -- nr_seq_marca_p		number,
						null,                            -- ie_clinica_p			number,
						nr_seq_classif_atend_w,          -- nr_seq_classif_atend_p	number,
						nr_atendimento_w,      		-- nr_atendimento_p		number,
						null,                            -- ie_vago_4_p			varchar2,
						vl_preco_w,                      -- vl_material_p      	 out 	number,
						dt_ult_vigencia_w,               -- dt_ult_vigencia_p  	 out 	date,
						cd_tabela_preco_w,               -- cd_tab_preco_mat_p 	 out 	number,
						ie_origem_preco_w,               -- ie_origem_preco_p  	 out 	number,
						nr_seq_bras_preco_w,             -- nr_seq_bras_preco_p	 out	number,
						nr_seq_mat_bras_w,               -- nr_seq_mat_bras_p	 out	number,
						nr_seq_conv_bras_w,              -- nr_seq_conv_bras_p	 out	number,
						nr_seq_conv_simpro_w,            -- nr_seq_conv_simpro_p	 out	number,
						nr_seq_mat_simpro_w,             -- nr_seq_mat_simpro_p	 out	number,
						nr_seq_simpro_preco_w,           -- nr_seq_simpro_preco_p out	number,
						nr_seq_ajuste_mat_w) INTO STRICT 
						vl_preco_w, 
						dt_ult_vigencia_w, 
						cd_tabela_preco_w, 
						ie_origem_preco_w, 
						nr_seq_bras_preco_w, 
						nr_seq_mat_bras_w, 
						nr_seq_conv_bras_w, 
						nr_seq_conv_simpro_w, 
						nr_seq_mat_simpro_w, 
						nr_seq_simpro_preco_w, 
						nr_seq_ajuste_mat_w;           -- nr_seq_ajuste_mat_p	 out	number
		end if;

		select	(obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_cgc_fornec_w, 'ECP'))::numeric
		into STRICT	cd_cond_pagto_w
		;

		if (vl_preco_w > 0) then

			update	material_autor_cir_cot
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				vl_cotado		= (qt_material_w * vl_preco_w),
				vl_unitario_cotado	= vl_preco_w,
				cd_condicao_pagamento	= cd_cond_pagto_w,
				ie_aprovacao		= 'N'
			where	nr_sequencia		= nr_seq_mat_autor_cir_w
			and	cd_cgc			= cd_cgc_fornec_w;

		end if;
	end loop;
	close c02;

end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_cot_mat_autor_cir ( nr_seq_autor_p bigint, nm_usuario_p text) FROM PUBLIC;

