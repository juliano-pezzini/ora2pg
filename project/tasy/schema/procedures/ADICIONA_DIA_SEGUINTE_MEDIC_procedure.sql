-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adiciona_dia_seguinte_medic ( nr_prescricao_p bigint, nr_seq_material_p bigint) AS $body$
DECLARE

 
ds_horarios_www				varchar(2000);
dt_inicio_prescricao_w		timestamp;
cd_intervalo_w				varchar(7);
ds_horarios_w				varchar(2000);
ds_horarios_ww				varchar(2000);
qt_hora_intervalo_w			smallint;
qt_min_intervalo_w			integer;
ds_dose_diferenciada_w		varchar(50);
nr_horas_validade_w			integer;
hr_prim_horario_w			varchar(5);
cd_material_w				bigint;
nr_intervalo_w				bigint;
dt_inicio_medic_w			timestamp;
dt_inicio_medic_ww			timestamp;
qt_unitaria_w				double precision;
qt_material_w				double precision;
qt_dose_especial_w			double precision;
qt_dose_especial_ww			double precision;
ie_origem_inf_w				varchar(1);
qt_dispensar_w				double precision;
ds_erro_w					varchar(2000);			
cd_unidade_medida_dose_w	varchar(30);
qt_dose_w    			double precision;
qt_operacao_w				double precision;
ie_regra_disp_w				varchar(1);
ie_via_aplicacao_w			varchar(10);
ie_se_necessario_w			varchar(1);
ie_acm_w				varchar(1);
cd_setor_atendimento_w		bigint;
nr_atendimento_w			bigint;
ie_mesmo_zerado_w			varchar(1);


BEGIN 
 
nr_intervalo_w := 0;
 
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then 
	 
	select	max(cd_setor_atendimento), 
			max(nr_atendimento) 
	into STRICT	cd_setor_atendimento_w, 
			nr_atendimento_w 
	from	prescr_medica 
	where	nr_prescricao = nr_prescricao_p;
 
	/* Busca os valores necessários da tabela de prescrição */
 
	select	max(dt_inicio_prescr), 
			max(nr_horas_validade), 
			max(dt_inicio_prescr)+1 
	into STRICT		dt_inicio_prescricao_w, 
			nr_horas_validade_w, 
			dt_inicio_medic_w 
	from		prescr_medica 
	where	nr_prescricao = nr_prescricao_p;
 
	/* Busca os valores necessários da tabela de material */
 
	select	max(cd_material), 
			max(cd_intervalo), 
			max(ds_horarios), 
			max(qt_hora_intervalo), 
			max(qt_min_intervalo), 
			max(ds_dose_diferenciada), 
			max(hr_prim_horario), 
			max(ie_via_aplicacao), 
			max(ie_origem_inf), 
			coalesce(max(qt_dose_especial_ww),0), 
			coalesce(max(qt_unitaria),0), 
			coalesce(max(qt_material),0), 
			max(cd_unidade_medida_dose), 
			coalesce(max(qt_dose),0), 
			coalesce(max(ie_se_necessario),'N'), 
			coalesce(max(ie_acm),'N') 
	into STRICT		cd_material_w, 
			cd_intervalo_w, 
			ds_horarios_w, 
			qt_hora_intervalo_w, 
			qt_min_intervalo_w, 
			ds_dose_diferenciada_w, 
			hr_prim_horario_w, 
			ie_via_aplicacao_w, 
			ie_origem_inf_w, 
			qt_dose_especial_w, 
			qt_unitaria_w, 
			qt_material_w, 
			cd_unidade_medida_dose_w, 
			qt_dose_w, 
			ie_se_necessario_w, 
			ie_acm_w			 
	from		prescr_material 
	where	nr_prescricao 	= nr_prescricao_p 
	and		nr_sequencia 	= nr_seq_material_p;
 
	/* Gera novamente os horarios do medicamento principal caso tenha algum primeiro horário */
	 
	if (hr_prim_horario_w <> ' : ') and (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then 
		dt_inicio_medic_ww := to_date(to_char(dt_inicio_medic_w,'dd/mm/yyyy')||' '||hr_prim_horario_w||':00','dd/mm/yyyy hh24:mi:ss');
		SELECT * FROM Calcular_Hor_Prescr_Dia( 
					nr_prescricao_p, cd_intervalo_w, dt_inicio_prescricao_w, dt_inicio_medic_ww, nr_horas_validade_w, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_intervalo_w, ds_horarios_w, ds_horarios_ww, 'N', ds_dose_diferenciada_w, 1) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_horarios_ww;
		ds_horarios_www := ds_horarios_w||ds_horarios_ww;
		qt_operacao_w		:= nr_intervalo_w;
	else 
		ds_horarios_www := ds_horarios_w;
		qt_operacao_w		:= nr_intervalo_w;
	end if;
	 
	if (ie_acm_w = 'S') or (ie_se_necessario_w = 'S') then 
		 
		select	coalesce(max(b.qt_se_necessario),0), 
				coalesce(max(b.ie_mesmo_zerado),'N') 
		into STRICT	qt_operacao_w, 
				ie_mesmo_zerado_w 
		from	intervalo_setor b, 
				intervalo_prescricao a 
		where	a.cd_intervalo 		= b.cd_intervalo 
		and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w 
		and		coalesce(b.cd_estab, wheb_usuario_pck.get_cd_estabelecimento)			= wheb_usuario_pck.get_cd_estabelecimento 
		and		((b.cd_material = cd_material_w) or (coalesce(b.cd_material::text, '') = '')) 
		and		((b.ie_via_aplicacao = coalesce(ie_via_aplicacao_w,b.ie_via_aplicacao)) or (coalesce(b.ie_via_aplicacao::text, '') = '')) 
		and		((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_w,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = '')) 
		and		a.cd_intervalo 		= cd_intervalo_w;
		 
		if (coalesce(qt_operacao_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then 
			Select	coalesce(max(qt_se_necessario),1) 
			into STRICT	qt_operacao_w 
			from	intervalo_prescricao 
			where	cd_intervalo = cd_intervalo_w;
		end if;
	end if;
	 
	if (qt_dose_especial_w > 0) then 
		qt_dose_especial_ww	:= obter_conversao_unid_med_cons(cd_material_w,cd_unidade_medida_dose_w,qt_dose_w);
	end if;	
	SELECT * FROM Obter_Quant_Dispensar(wheb_usuario_pck.get_cd_estabelecimento, cd_material_w, nr_prescricao_p, nr_seq_material_p, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, qt_dose_especial_ww, qt_operacao_w, null, ie_origem_inf_w, cd_unidade_medida_dose_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
	 
	/* Atualiza os horarios do medicamento principal */
 
	update	prescr_material 
	set		ds_horarios 	= ds_horarios_www, 
			dt_inicio_medic = dt_inicio_medic_w, 
			qt_dia_prim_hor = 1, 
			nr_ocorrencia	= qt_operacao_w, 
			qt_total_dispensar	= qt_dispensar_w, 
			qt_unitaria		= coalesce(qt_unitaria_w,1), 
			qt_material		= qt_material_w 
	where	nr_prescricao 	= nr_prescricao_p 
	and		nr_sequencia	= nr_seq_material_p;
	/* Para materiais vinculados */
 
	update	prescr_material 
	set		ds_horarios 	= ds_horarios_www, 
			dt_inicio_medic = dt_inicio_medic_w, 
			qt_dia_prim_hor = 1, 
			nr_ocorrencia	= qt_operacao_w, 
			qt_total_dispensar	= qt_dispensar_w, 
			qt_unitaria		= coalesce(qt_unitaria_w,1), 
			qt_material		= qt_material_w 
	where	nr_prescricao 		= nr_prescricao_p 
	and		nr_sequencia_diluicao	= nr_seq_material_p 
	and		ie_agrupador in (3,7,9);
 
	/* Para kits do medicamento */
 
	update	prescr_material 
	set		ds_horarios 	= ds_horarios_www, 
			dt_inicio_medic = dt_inicio_medic_w, 
			qt_dia_prim_hor = 1, 
			nr_ocorrencia	= qt_operacao_w, 
			qt_total_dispensar	= qt_dispensar_w, 
			qt_unitaria		= coalesce(qt_unitaria_w,1), 
			qt_material		= qt_material_w 
	where	nr_prescricao 	= nr_prescricao_p 
	and		nr_seq_kit 	= nr_seq_material_p;
	 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adiciona_dia_seguinte_medic ( nr_prescricao_p bigint, nr_seq_material_p bigint) FROM PUBLIC;

