-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_inserir_atend_eup ( nr_seq_atend_mprev_p bigint, nr_seq_regra_eup_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_atend_eup_p INOUT bigint) AS $body$
DECLARE

										
					
cd_procedencia_w		atendimento_paciente.cd_procedencia%type;
ie_tipo_atendimento_w	atendimento_paciente.ie_tipo_atendimento%type;
ie_carater_inter_sus_w	atendimento_paciente.ie_carater_inter_sus%type;
nr_seq_classificacao_w	atendimento_paciente.nr_seq_classificacao%type;
ie_tipo_atend_tiss_w	atendimento_paciente.ie_tipo_atend_tiss%type;
cd_setor_atendimento_w	atend_paciente_unidade.cd_setor_atendimento%type;
cd_tipo_acomodacao_w	atend_paciente_unidade.cd_tipo_acomodacao%type;
cd_unidade_basica_w		atend_paciente_unidade.cd_unidade_basica%type;
cd_unidade_compl_w		atend_paciente_unidade.cd_unidade_compl%type;
nr_atend_eup_w			atendimento_paciente.nr_atendimento%type;
cd_profissional_w		mprev_atendimento.cd_profissional%type;
/* Dados convenio */

cd_convenio_w			atend_categoria_convenio.cd_convenio%type;
cd_categoria_w			atend_categoria_convenio.cd_categoria%type;
cd_plano_convenio_w		atend_categoria_convenio.cd_plano_convenio%type;
cd_usuario_convenio_w	atend_categoria_convenio.cd_usuario_convenio%type;
dt_validade_carteira_w	atend_categoria_convenio.dt_validade_carteira%type;
cd_municipio_convenio_w	atend_categoria_convenio.cd_municipio_convenio%type;
cd_empresa_w			atend_categoria_convenio.cd_empresa%type;
cd_convenio_titular_w			atend_categoria_convenio.cd_convenio%type;
cd_categoria_titular_w			atend_categoria_convenio.cd_categoria%type;
cd_plano_convenio_titular_w		atend_categoria_convenio.cd_plano_convenio%type;
cd_usuario_convenio_titular_w	atend_categoria_convenio.cd_usuario_convenio%type;
dt_validade_carteira_titular_w	atend_categoria_convenio.dt_validade_carteira%type;
cd_empresa_titular_w			atend_categoria_convenio.cd_empresa%type;
dt_liberacao_w			pls_segurado.dt_liberacao%type;
dt_rescisao_w			pls_segurado.dt_rescisao%type;
dt_inicio_atend_w		mprev_atendimento.dt_inicio%type;/*Data informada na execucao do agendamento ( data de execucao informada no wdlg)*/
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
nr_seq_interno_w		bigint;
nr_sequencia_w			bigint;
nr_seq_participante_w	mprev_participante.nr_sequencia%type;
nr_sequencia_convenio_w	bigint;
ds_mensagem_retorno_w	varchar(255);
ie_tipo_mensagem_w		varchar(3);
nr_count_pls_segurado_w bigint;
cd_perfil_w					perfil.cd_perfil%type;
ie_cat_lib_pf_w			varchar(1);
cd_medico_resp_w	mprev_regra_ger_atend.cd_medico_resp%type;


BEGIN
select	cd_estabelecimento,
		cd_profissional,
		coalesce(dt_inicio, clock_timestamp())
into STRICT	cd_estabelecimento_w,
		cd_profissional_w,
		dt_inicio_atend_w
from	mprev_atendimento a
where	a.nr_sequencia	= nr_seq_atend_mprev_p;

/* Obter campos da regra que foi encontrada, para gerar o atendimento */

select	cd_procedencia,
		ie_tipo_atendimento,
		ie_carater_inter_sus,
		nr_seq_classificacao,
		ie_tipo_atend_tiss,
		cd_setor_atendimento,
		cd_tipo_acomodacao,
		cd_unidade_basica,
		cd_unidade_compl,
    cd_medico_resp
into STRICT	cd_procedencia_w,
		ie_tipo_atendimento_w,
		ie_carater_inter_sus_w,
		nr_seq_classificacao_w,
		ie_tipo_atend_tiss_w,
		cd_setor_atendimento_w,
		cd_tipo_acomodacao_w,
		cd_unidade_basica_w,
		cd_unidade_compl_w,
    cd_medico_resp_w
from	mprev_regra_ger_atend
where	nr_sequencia = nr_seq_regra_eup_p;

select	nextval('atendimento_paciente_seq')
into STRICT	nr_atend_eup_w
;

/* Atendimento */

insert into atendimento_paciente(nr_atendimento,
	cd_pessoa_fisica,
	cd_procedencia,
	ie_tipo_atendimento,
	ie_carater_inter_sus,
	ie_tipo_atend_tiss,
	nr_seq_classificacao,
	nm_usuario,
	dt_atualizacao,
	cd_estabelecimento,
	dt_entrada,
	cd_medico_resp,
	ie_permite_visita)
values (nr_atend_eup_w,
	cd_pessoa_fisica_p,
	cd_procedencia_w,
	ie_tipo_atendimento_w,
	ie_carater_inter_sus_w,
	ie_tipo_atend_tiss_w,
	nr_seq_classificacao_w,
	nm_usuario_p,
	clock_timestamp(),
	cd_estabelecimento_w,
	dt_inicio_atend_w,
	coalesce(cd_medico_resp_w, cd_profissional_w),
	'S');
	
/* Obter beneficiario da pessoa fisica, pode ter mais de um, pegar o primeiro ativo que achar */

select	max(nr_sequencia)
into STRICT	nr_seq_participante_w
from	mprev_participante a
where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p;

if (nr_seq_participante_w IS NOT NULL AND nr_seq_participante_w::text <> '') then
	
	--nr_seq_segurado_w	:= mprev_obter_benef_partic(nr_seq_participante_w);
	
	if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
		/* Dados do convenio  segurado*/

		cd_convenio_w		    := obter_dados_seg_entrada_unica(nr_seq_segurado_p,'CV');
		cd_categoria_w		    := obter_dados_seg_entrada_unica(nr_seq_segurado_p,'CA');
		cd_plano_convenio_w	    := obter_dados_seg_entrada_unica(nr_seq_segurado_p,'PLC');
		cd_usuario_convenio_w	:= obter_dados_seg_entrada_unica(nr_seq_segurado_p,'CI');
		dt_validade_carteira_w	:= obter_dados_seg_entrada_unica(nr_seq_segurado_p,'VC');
		cd_empresa_w		    := obter_dados_seg_entrada_unica(nr_seq_segurado_p,'ER');
		
		if (coalesce(cd_convenio_w::text, '') = '') or (coalesce(cd_categoria_w::text, '') = '') then
			/*Nao foi possivel obter o convenio e categoria do beneficiario para gerar o atendimento na Entrada unica de Pacientes.
			Por favor verifique em OPS - Cadastro de Regras/Produtos/OPS x Convenio (Convenio/Tasy) e OPS - Cadastro de Regras/Produtos/OPS x Categ*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(292606);
		end if;
		
	else
        begin
			select max(nr_sequencia)
			into STRICT nr_sequencia_convenio_w
			from	pessoa_titular_convenio
            where	cd_pessoa_fisica = 	cd_pessoa_fisica_p
            and	((trunc(clock_timestamp())	<= 	trunc(dt_fim_vigencia)) or (coalesce(dt_fim_vigencia::text, '') = ''))
            and	((trunc(clock_timestamp())	>= 	trunc(dt_inicio_vigencia)) or (coalesce(dt_inicio_vigencia::text, '') = ''));
		
			if (nr_sequencia_convenio_w IS NOT NULL AND nr_sequencia_convenio_w::text <> '') then
				select cd_convenio,
					cd_categoria,
					cd_plano_convenio,
					cd_usuario_convenio,
					dt_validade_carteira,
					cd_empresa_refer
				into STRICT cd_convenio_titular_w,
					cd_categoria_titular_w,
					cd_plano_convenio_titular_w,
					cd_usuario_convenio_titular_w,
					dt_validade_carteira_titular_w,
					cd_empresa_titular_w 
				from	pessoa_titular_convenio
				where nr_sequencia = nr_sequencia_convenio_w;
			else
				cd_convenio_titular_w           := null;
				cd_categoria_titular_w          := null;
				cd_plano_convenio_titular_w     := null;
				cd_usuario_convenio_titular_w   := null;
				dt_validade_carteira_titular_w  := null;
				cd_empresa_titular_w            := null;
			end if;
        end;

    	if (nr_sequencia_convenio_w IS NOT NULL AND nr_sequencia_convenio_w::text <> '') then
      		/* Dados do convenio  do titular*/

      		cd_convenio_w		:= cd_convenio_titular_w;
      		cd_categoria_w		:= cd_categoria_titular_w;
      		cd_plano_convenio_w	:= cd_plano_convenio_titular_w;
    		cd_usuario_convenio_w	:= cd_usuario_convenio_titular_w;
      		dt_validade_carteira_w	:= dt_validade_carteira_titular_w;
      		cd_empresa_w		:= cd_empresa_titular_w;
    	else
            if (obter_utiliza_nom(wheb_usuario_pck.get_cd_estabelecimento) = 'S') then
				select count(*)
				into STRICT nr_count_pls_segurado_w
				from pls_segurado
				where cd_pessoa_fisica = cd_pessoa_fisica_p;

				if (nr_count_pls_segurado_w = 0) then
				  CALL wheb_mensagem_pck.exibir_mensagem_abort(1072227);
				end if;
			end if;

			/* Dados do convenio  particular*/

            SELECT * FROM Obter_Convenio_Particular(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w) INTO STRICT cd_convenio_w, cd_categoria_w;

      		if (coalesce(cd_convenio_w::text, '') = '') or (coalesce(cd_categoria_w::text, '') = '') then
        		--A pessoa nm_pessoa_fisica nao e beneficiario, nao sendo possivel obter o convenio e categoria da mesma de forma automatica.

        		--Sistema ira considerar como convenio particular, para isso deve estar preenchido o convenio e categoria particular nos parametros do faturamento.
       			CALL wheb_mensagem_pck.exibir_mensagem_abort(338742, 'nm_pessoa_fisica='|| obter_nome_pf(cd_pessoa_fisica_p));
      		end if;
    	end if;

	end if;
else	
	-- A pessoa selecionada nao e participante da Medicina Preventiva, por favor, selecione um participante valido.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(254982);
end if;

cd_perfil_w := wheb_usuario_pck.get_cd_perfil;

select obter_se_categoria_lib_perf(cd_convenio_w,cd_categoria_w,cd_perfil_w)
into STRICT ie_cat_lib_pf_w
;

if (ie_cat_lib_pf_w = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1108453);
end if;

insert into atend_categoria_convenio(nr_seq_interno,
	nr_atendimento,
	cd_convenio,
	cd_categoria,
	cd_plano_convenio,
	cd_usuario_convenio,
	dt_validade_carteira,
	dt_inicio_vigencia,
	cd_empresa,
	nm_usuario_original,
	cd_municipio_convenio,
	nm_usuario,
	dt_atualizacao,
  cd_tipo_acomodacao)
values (nextval('atend_categoria_convenio_seq'),
	nr_atend_eup_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_convenio_w,
	cd_usuario_convenio_w,
	dt_validade_carteira_w,
	dt_inicio_atend_w,
	cd_empresa_w,
	nm_usuario_p,
	cd_municipio_convenio_w,
	nm_usuario_p,
	clock_timestamp(),
  cd_tipo_acomodacao_w);

/* Dados setor */

select	nextval('atend_paciente_unidade_seq')
into STRICT	nr_seq_interno_w
;

select 	coalesce(max(nr_sequencia),0) + 1
into STRICT 	nr_sequencia_w
from 	atend_paciente_unidade
where 	nr_atendimento = nr_atend_eup_w;

insert into atend_paciente_unidade(nr_sequencia,
	nr_seq_interno,
	nr_atendimento,
	cd_setor_atendimento,
	cd_tipo_acomodacao,
	cd_unidade_basica,
	cd_unidade_compl,
	dt_entrada_unidade,	
	nm_usuario,
	dt_atualizacao,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	dt_saida_interno)
values (nr_sequencia_w,
	nr_seq_interno_w,
	nr_atend_eup_w,
	cd_setor_atendimento_w,
	cd_tipo_acomodacao_w,
	cd_unidade_basica_w,
	cd_unidade_compl_w,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	to_date('30/12/2999','dd/mm/yyyy'));
	
nr_atend_eup_p	:= nr_atend_eup_w;

begin
CALL gerar_lancamento_automatico(nr_atend_eup_p, null, 26, nm_usuario_p, null, null, null, null, null, null);
exception
when others then
	null;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_inserir_atend_eup ( nr_seq_atend_mprev_p bigint, nr_seq_regra_eup_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_atend_eup_p INOUT bigint) FROM PUBLIC;

