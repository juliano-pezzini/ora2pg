-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE carregar_dados_paciente_js (nr_cirurgia_p bigint, nr_sequencia_p bigint, nr_atendimento_p bigint, nm_pessoa_fisica_p INOUT text, qt_idade_p INOUT text, qt_peso_p INOUT text, qt_altura_p INOUT text, ds_procedimento_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

 
c01 CURSOR FOR 
SELECT substr(converte_pri_letra_maiusculo(obter_desc_procedimento(cd_procedimento_princ,ie_origem_proced)),1,255) ds_procedimento 
from	cirurgia 
where	((nr_cirurgia_p > 0 AND nr_cirurgia = nr_cirurgia_p) or 
		 (nr_sequencia_p > 0 AND nr_seq_pepo = nr_sequencia_p)) 
and		ie_status_cirurgia <> 3 
order by nr_cirurgia;
					
qtd_w				bigint;
ds_procedimento_w 	varchar(255);

			 

BEGIN 
 
if (nr_cirurgia_p > 0) then 
	select	substr(obter_nome_pf(b.cd_pessoa_fisica),1,255), 
		substr(obter_idade(b.dt_nascimento, clock_timestamp(), 'A'),1,100) qt_idade 
	into STRICT	nm_pessoa_fisica_p, 
		qt_idade_p 
    from	cirurgia a, pessoa_fisica b 
    where	a.nr_cirurgia = nr_cirurgia_p 
    and 	a.cd_pessoa_fisica = b.cd_pessoa_fisica;
else 
	select	b.nm_pessoa_fisica, 
		substr(obter_idade(b.dt_nascimento, clock_timestamp(), 'A'),1,100) qt_idade 
	into STRICT	nm_pessoa_fisica_p, 
		qt_idade_p 
    from	pepo_cirurgia a, pessoa_fisica b 
    where	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
	and	a.nr_sequencia = nr_sequencia_p;
end if;
 
 
 
if (nr_cirurgia_p > 0) then 
 
	select	max(obter_sinal_vital_grafico(nr_atendimento_p,nr_cirurgia_p,'Peso')) 
	into STRICT	qt_peso_p 
	;
 
	select 	max(obter_sinal_vital_grafico(nr_atendimento_p,nr_cirurgia_p,obter_desc_expressao(283402)/*'Altura'*/
)) 
	into STRICT	qt_altura_p 
	;
 
	select	 
		substr(converte_pri_letra_maiusculo(obter_desc_procedimento(c.cd_procedimento_princ,c.ie_origem_proced)),1,255) ds_procedimento 
	into STRICT 
		ds_procedimento_p 
		from cirurgia c 
		where c.nr_cirurgia = nr_cirurgia_p;
else 
	select	max(obter_sinal_vital_grafico(nr_atendimento_p,0,'Peso')) 
	into STRICT	qt_peso_p 
	;
 
	select 	max(obter_sinal_vital_grafico(nr_atendimento_p,0,obter_desc_expressao(283402)/*'Altura'*/
)) 
	into STRICT	qt_altura_p 
	;
	select 
		max(substr(converte_pri_letra_maiusculo(obter_desc_procedimento(c.cd_procedimento_princ,c.ie_origem_proced)),1,255)) ds_procedimento 
	into STRICT 
		ds_procedimento_p 
		from cirurgia c , pepo_cirurgia p 
		where p.nr_cirurgia_principal = c.nr_cirurgia 
		and c.nr_seq_pepo = nr_sequencia_p;	
	 
	/*OS 858471 - Ajustado para caso o atendimento não possua uma cirurgia principal, o sistema busque o procedimento da cirurgia(caso tenha apenas uma cirurgia)*/
 
	/*OS 1002702 - Ajustado para apresentar o primeiro procedimento da árvorem, caso não tenha principal selecionado e tenha mais de um*/
 
	if (coalesce(ds_procedimento_p::text, '') = '') then		 
					 
		open c01;
		loop 
		fetch c01 into ds_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
				ds_procedimento_p := ds_procedimento_w;
			end;
		end loop;
		close c01;
	end if;	
end if;
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE carregar_dados_paciente_js (nr_cirurgia_p bigint, nr_sequencia_p bigint, nr_atendimento_p bigint, nm_pessoa_fisica_p INOUT text, qt_idade_p INOUT text, qt_peso_p INOUT text, qt_altura_p INOUT text, ds_procedimento_p INOUT text, nm_usuario_p text) FROM PUBLIC;

