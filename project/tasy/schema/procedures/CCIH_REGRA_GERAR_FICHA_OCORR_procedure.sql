-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ccih_regra_gerar_ficha_ocorr (nr_atendimento_p bigint, cd_medico_resp_p text, cd_estabelecimento_p bigint, ie_opcao_p text, cd_setor_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

-- Campos da regra
ie_gerar_ficha_alta_w 		varchar(1);
ie_importar_cirurgia_w		varchar(1);
ie_importar_cultura_w		varchar(1);
ie_importar_medicamento_w	varchar(1);
ie_importar_procedimento_w	varchar(1);
ie_liberar_ficha_na_alta_w	varchar(1);

-- Parametros buscados da função ficha de ocorrencia
ie_importar_medic_w		varchar(1);
ie_importar_propaci_w		varchar(1);
ie_vincular_medic_conta_w	varchar(1);

-- Verifica se já não há registros
ie_existe_cirurgia_w		varchar(1);
ie_existe_cultura_w		varchar(1);
ie_existe_medicamento_w		varchar(1);

ds_erro_w			varchar(500);

nr_ficha_ocorrencia_w		bigint;
ie_liberar_ficha_w		varchar(1);
ie_tipo_atendimento_w		smallint;
ie_clinica_w			integer;

C01 CURSOR FOR
SELECT  coalesce(ie_gerar_ficha_alta,'N'),
        coalesce(ie_importar_cirurgia,'N'),
        coalesce(ie_importar_cultura,'N'),
        coalesce(ie_importar_medicamento,'N'),
        coalesce(ie_importar_procedimento,'N'),
	coalesce(ie_liberar_ficha,'N')
from    regra_geracao_ccih_alta
where   cd_estabelecimento = cd_estabelecimento_p
and (coalesce(cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p)
and     ie_gerar_ficha_alta = ie_opcao_p
and (coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w)
order by coalesce(cd_setor_atendimento,0) desc,
        coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) desc;


BEGIN
ie_liberar_ficha_w := Obter_param_Usuario(7043, 23, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_liberar_ficha_w);

select	coalesce(max(ie_tipo_atendimento),0),
	max(ie_clinica)
into STRICT	ie_tipo_atendimento_w,
	ie_clinica_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

open C01;
loop
fetch C01 into
        ie_gerar_ficha_alta_w,
        ie_importar_cirurgia_w,
        ie_importar_cultura_w,
        ie_importar_medicamento_w,
        ie_importar_procedimento_w,
	ie_liberar_ficha_na_alta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
        begin
        ie_gerar_ficha_alta_w           := ie_gerar_ficha_alta_w;
        ie_importar_cirurgia_w          := ie_importar_cirurgia_w;
        ie_importar_cultura_w           := ie_importar_cultura_w;
        ie_importar_medicamento_w       := ie_importar_medicamento_w;
        ie_importar_procedimento_w      := ie_importar_procedimento_w;
	ie_liberar_ficha_na_alta_w	:= ie_liberar_ficha_na_alta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
        end;
end loop;
close C01;


select 	max(nr_ficha_ocorrencia)
into STRICT	nr_ficha_ocorrencia_w
from 	cih_ficha_ocorrencia
where 	nr_atendimento = nr_atendimento_p;

if (coalesce(nr_ficha_ocorrencia_w::text, '') = '') then
	if (ie_liberar_ficha_w = 'S') then
		CALL ccih_gerar_ficha_ocorrencia(nr_atendimento_p,null,cd_medico_resp_p, nm_usuario_p,'S',ie_clinica_w);
	else
		CALL ccih_gerar_ficha_ocorrencia(nr_atendimento_p,null,cd_medico_resp_p, nm_usuario_p,'N',ie_clinica_w);
	end if;

	select 	max(nr_ficha_ocorrencia)
	into STRICT	nr_ficha_ocorrencia_w
	from 	cih_ficha_ocorrencia
	where 	nr_atendimento = nr_atendimento_p;
end if;

if (nr_ficha_ocorrencia_w IS NOT NULL AND nr_ficha_ocorrencia_w::text <> '') then

	if (ie_importar_cirurgia_w = 'S') then
		select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_existe_cirurgia_w
		from 	cih_cirurgia
		where	nr_ficha_ocorrencia = nr_ficha_ocorrencia_w;

		if (ie_existe_cirurgia_w = 'N') then
			ie_importar_medic_w := obter_param_usuario(936, 11, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_importar_medic_w);
			ie_importar_propaci_w := obter_param_usuario(936, 23, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_importar_propaci_w);
			ds_erro_w := CIH_Importar_Cirurgia(nr_ficha_ocorrencia_w, nm_usuario_p, ie_importar_medic_w, ie_importar_propaci_w, null, ds_erro_w);
			if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') or (ds_erro_w <> '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(188896,'ds_retorno= '||ds_erro_w);
			end if;
		end if;
	end if;

	if (ie_importar_cultura_w = 'S') then
		select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_existe_cultura_w
		from 	cih_cultura
		where	nr_ficha_ocorrencia = nr_ficha_ocorrencia_w;

		if (ie_existe_cultura_w = 'N') then
			CALL CIH_Importar_Cultura(nr_ficha_ocorrencia_w,nm_usuario_p);
		end if;
	end if;

	if (ie_importar_medicamento_w = 'S') then
		select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_existe_medicamento_w
		from 	cih_medic_utilizado
		where	nr_ficha_ocorrencia = nr_ficha_ocorrencia_w;

		if (ie_existe_medicamento_w = 'N') then
			ie_vincular_medic_conta_w := obter_param_usuario(936, 23, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_vincular_medic_conta_w);
			CALL CIH_Importar_Medicamento(nr_ficha_ocorrencia_w,nm_usuario_p,ie_vincular_medic_conta_w,null);
		end if;
	end if;

	if (ie_importar_procedimento_w = 'S') then
		CALL CIH_Importar_Procedimentos(nr_ficha_ocorrencia_w,nm_usuario_p);
	end if;

	--  Se liberar ficha na alta
	if (ie_liberar_ficha_na_alta_w = 'S') then

		update	cih_ficha_ocorrencia
		set	dt_liberacao = clock_timestamp()
		where	nr_ficha_ocorrencia = nr_ficha_ocorrencia_w;

		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end if;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ccih_regra_gerar_ficha_ocorr (nr_atendimento_p bigint, cd_medico_resp_p text, cd_estabelecimento_p bigint, ie_opcao_p text, cd_setor_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

