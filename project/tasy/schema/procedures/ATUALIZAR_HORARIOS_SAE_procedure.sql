-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_horarios_sae ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

					
					
nr_sequencia_w	bigint;
cd_intervalo_w	varchar(30);	
hr_prim_horario_w		timestamp;
nr_intervalo_w		real;
ds_horarios_w		varchar(2000);	
ie_se_necessario_w	varchar(10);	
vl_prim_hor_w		varchar(15);
qt_horas_validade_w	bigint;	
dt_prescricao_w		timestamp;	
ds_prim_horario_w	varchar(255);
ie_agora_w			varchar(10);
IE_INTERV_ESPEC_AGORA_w	varchar(10)	:= 'N';
HR_HORARIO_ESPEC_w		varchar(10);
DT_PRIMEIRO_HORARIO_w	varchar(10);
ie_Interv_Aut_w			varchar(10)	:= 'S';	
ie_limpar_w				char(1) := 'N';


					
C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_intervalo
	from	PE_PRESCR_PROC
	where	nr_seq_prescr	= nr_sequencia_p
	and	(cd_intervalo IS NOT NULL AND cd_intervalo::text <> '');
	

BEGIN
select	max(qt_horas_validade),
	max(dt_prescricao),
	max(ie_agora),
		max(to_char(DT_PRIMEIRO_HORARIO,'hh24:mi')),
	max(DT_PRIMEIRO_HORARIO_w)
into STRICT	qt_horas_validade_w,
	dt_prescricao_w,
	ie_agora_w,
	HR_HORARIO_ESPEC_w,
	DT_PRIMEIRO_HORARIO_w
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_p;


if (ie_agora_w	= 'S') then
	IE_INTERV_ESPEC_AGORA_w	:= 'S';
--	HR_HORARIO_ESPEC_w		:= to_char(DT_PRIMEIRO_HORARIO_w,'hh24:mi');
else
	HR_HORARIO_ESPEC_w	:= null;
end if;

vl_prim_hor_w := obter_param_usuario(281, 325, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, vl_prim_hor_w);
ie_Interv_Aut_w := obter_param_usuario(281, 735, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_Interv_Aut_w);
open C01;
loop
fetch C01 into	
	nr_sequencia_w,
	cd_intervalo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	

	IF (vl_prim_hor_w = '1') or (ie_Interv_Aut_w	= 'S')THEN
		hr_prim_horario_w	:= pkg_date_utils.get_time(clock_timestamp(), obter_primeiro_horario_sae(cd_intervalo_w, nr_sequencia_p), 0);
	ELSIF (vl_prim_hor_w = '2') THEN
		hr_prim_horario_w 	:= PKG_DATE_UTILS.start_of(dt_prescricao_w + (1/24), 'hh24', 0);
	END IF;
	
	
	IF (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') THEN
		ds_prim_horario_w	:= TO_CHAR(hr_prim_horario_w,'hh24:mi');
		--calcular_horario_intervencao(cd_intervalo_w, hr_prim_horario_w, NVL(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w,ds_prim_horario_w,ie_se_necessario_w,nr_sequencia_p);
		SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, coalesce(dt_primeiro_horario_w,hr_prim_horario_w), coalesce(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w, nr_sequencia_p) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w;
		
		
		ie_limpar_w := obter_se_limpa_prim_hor_sae(cd_intervalo_w);
		
		if	((ie_interv_espec_agora_w = 'S') and (coalesce(cd_intervalo_w::text, '') = '')) or (ie_limpar_w = 'S') then
			hr_prim_horario_w	:= null;
			ds_horarios_w := null;
		end if;			
	
	
		update	pe_prescr_proc
		set		HR_PRIM_HORARIO	= TO_CHAR(hr_prim_horario_w,'hh24:mi'),
				DS_HORARIOS	= ds_horarios_w,
				IE_INTERV_ESPEC_AGORA	= IE_INTERV_ESPEC_AGORA_w,
				HR_HORARIO_ESPEC		= HR_HORARIO_ESPEC_w
		where	nr_sequencia	= nr_sequencia_w;
		
	END IF;	
	
	
	end;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_horarios_sae ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

