-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE scheduler_save_tasks ( NR_SEQUENCIA_P NICU_SCHEDULE_PATIENT.nr_sequencia%type, NR_SEQ_PATIENT_P NICU_SCHEDULE_PATIENT.NR_SEQ_PATIENT%type, NR_SEQ_TASK_P NICU_SCHEDULE_PATIENT.NR_SEQ_TASK%type, DT_SCHEDULE_P NICU_SCHEDULE_PATIENT.DT_SCHEDULE%type, ID_STATUS_P NICU_SCHEDULE_PATIENT.ID_STATUS%type, NM_USUARIO_p NICU_SCHEDULE_PATIENT.NM_USUARIO%type, NR_SEQ_SCHEDULE_SUP_P NICU_SCHEDULE_PATIENT.NM_USUARIO%type, RESP_P INOUT text ) AS $body$
DECLARE

	 NR_SEQUENCIA_W bigint;
	 insert_or_up varchar(1);
	 exeption_w exception;
	 NR_PATIENT_W bigint;


BEGIN
	select nr_seq_patient into STRICT NR_PATIENT_W
	from nicu_encounter 
	where nr_sequencia = NR_SEQ_PATIENT_P 
	order by nr_seq_patient desc;

	if (coalesce(NR_SEQUENCIA_p::text, '') = '') then
		insert_or_up := 'i';
		select nextval('nicu_schedule_patient_seq')
		into STRICT NR_SEQUENCIA_W
		;
	else
		insert_or_up := 'u';
		NR_SEQUENCIA_W := NR_SEQUENCIA_P;
	end if;
	IF insert_or_up = 'i' THEN
		INSERT INTO NICU_SCHEDULE_PATIENT(NR_SEQUENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			NR_SEQ_PATIENT,
			NR_SEQ_TASK,
			DT_SCHEDULE,
			DT_COMPLETE,
			NM_USER_COMPLETE,
			NR_SEQ_SCHEDULE_SUP,
			ID_STATUS)
		VALUES (NR_SEQUENCIA_W,
			clock_timestamp(),
			NM_USUARIO_P,
			NULL,
			NULL,
			NR_PATIENT_W,
			NR_SEQ_TASK_P,
			DT_SCHEDULE_P,
			CASE WHEN ID_STATUS_P = '1' THEN DT_SCHEDULE_P ELSE NULL END,
			NULL,
			NR_SEQ_SCHEDULE_SUP_P,
			ID_STATUS_P);
    END IF;
	IF insert_or_up = 'u' AND ID_STATUS_P = '1' THEN
		UPDATE NICU_SCHEDULE_PATIENT
		SET
			DT_ATUALIZACAO_NREC = clock_timestamp(),
			NM_USUARIO_NREC = NM_USUARIO_P,
			DT_SCHEDULE = DT_SCHEDULE_P,
			ID_STATUS = ID_STATUS_P,
			NR_SEQ_TASK = NR_SEQ_TASK_P, 
			DT_COMPLETE = clock_timestamp()
		WHERE  NR_SEQUENCIA = NR_SEQUENCIA_W;
    END IF;
	IF insert_or_up = 'u' AND ID_STATUS_P <> '1' THEN
		UPDATE NICU_SCHEDULE_PATIENT
		SET
			DT_ATUALIZACAO_NREC = clock_timestamp(),
			NM_USUARIO_NREC = NM_USUARIO_P,
			DT_SCHEDULE = DT_SCHEDULE_P,
			ID_STATUS = ID_STATUS_P,
			NR_SEQ_TASK = NR_SEQ_TASK_P 
        WHERE  NR_SEQUENCIA = NR_SEQUENCIA_W;
	END IF;
	COMMIT;
	RESP_P := TO_CHAR(NR_SEQUENCIA_W);

EXCEPTION
	when exeption_w then
		ROLLBACK;
        RESP_P := 'FAIL';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE scheduler_save_tasks ( NR_SEQUENCIA_P NICU_SCHEDULE_PATIENT.nr_sequencia%type, NR_SEQ_PATIENT_P NICU_SCHEDULE_PATIENT.NR_SEQ_PATIENT%type, NR_SEQ_TASK_P NICU_SCHEDULE_PATIENT.NR_SEQ_TASK%type, DT_SCHEDULE_P NICU_SCHEDULE_PATIENT.DT_SCHEDULE%type, ID_STATUS_P NICU_SCHEDULE_PATIENT.ID_STATUS%type, NM_USUARIO_p NICU_SCHEDULE_PATIENT.NM_USUARIO%type, NR_SEQ_SCHEDULE_SUP_P NICU_SCHEDULE_PATIENT.NM_USUARIO%type, RESP_P INOUT text ) FROM PUBLIC;

