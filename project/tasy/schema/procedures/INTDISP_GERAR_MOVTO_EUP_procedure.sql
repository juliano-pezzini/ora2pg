-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intdisp_gerar_movto_eup ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, dt_entrada_unidade_p timestamp, ie_tipo_movimento_p text) AS $body$
DECLARE

				

nm_pessoa_fisica_w      	varchar(60);
nr_atendimento_w       		bigint;
ds_setor_atendimento_w		varchar(100);
ds_unidade_atendimento_w	varchar(100);
dt_entrada_w           		timestamp;
ie_sexo_w               	varchar(1);
dt_nascimento_w			timestamp;
cd_estabelecimento_w		smallint;
nm_usuario_w			varchar(15);
cd_setor_atendimento_w		integer;
cd_unidade_basica_w		varchar(20);
cd_medico_atendimento_w		varchar(10);
nr_crm_medico_w			varchar(20);
cd_pessoa_usuario_w		varchar(10);
nm_pessoa_usuario_w		varchar(60);
nr_prontuario_w			bigint;
dt_entrada_unidade_w		timestamp;
nr_sequencia_w			bigint;
qt_existe_w			bigint;

c02 CURSOR FOR
	SELECT	substr(c.nm_pessoa_fisica,1,60) nm_pessoa_fisica,
		b.nr_atendimento,
		b.dt_entrada,
		c.ie_sexo,
		c.dt_nascimento,
		b.cd_medico_atendimento,
		obter_crm_medico(b.cd_medico_atendimento),
		obter_prontuario_atendimento(b.nr_atendimento)
	from    atendimento_paciente b,
		pessoa_fisica c
	where   b.cd_pessoa_fisica = c.cd_pessoa_fisica
	and	b.nr_atendimento = nr_atendimento_p
	and	qt_existe_w = 0
	order by c.nm_pessoa_fisica;


BEGIN

select	coalesce(max(cd_estabelecimento),wheb_usuario_pck.get_cd_estabelecimento),
	max(nm_usuario)
into STRICT	cd_estabelecimento_w,
	nm_usuario_w
from	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

cd_pessoa_usuario_w := obter_pessoa_fisica_usuario(nm_usuario_w,'C');
nm_pessoa_usuario_w := obter_pessoa_fisica_usuario(nm_usuario_w,'X');

select	count(*)
into STRICT	qt_existe_w
from	int_disp_movt_pac
where	nr_atendimento = nr_atendimento_p
and 	coalesce(nr_cirurgia::text, '') = '';

open c02;
loop
fetch c02 into	
	nm_pessoa_fisica_w,
	nr_atendimento_w,
	dt_entrada_w,
	ie_sexo_w,
	dt_nascimento_w,
	cd_medico_atendimento_w,
	nr_crm_medico_w,
	nr_prontuario_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	int_disp_movt_pac;
	
	if (ie_tipo_movimento_p IS NOT NULL AND ie_tipo_movimento_p::text <> '') then
		begin
		insert into int_disp_movt_pac(
			nr_sequencia,
			nr_atendimento,
			nm_pessoa_fisica,
			cd_setor_internacao,
			cd_unidade_basica,
			cd_estabelecimento,
			dt_entrada,
			ie_tipo_movimentacao,
			dt_movimento,
			ie_sexo,
			dt_nascimento,
			cd_medico,
			crm_medico,
			cd_usuario,
			nm_usuario,
			ds_setor,
			dt_atendimento,
			nr_prontuario,
			dt_entrada_unidade)
		values (nr_sequencia_w,
			nr_atendimento_w,
			nm_pessoa_fisica_w,
			cd_setor_atendimento_p,
			cd_unidade_basica_p,
			cd_estabelecimento_w,
			dt_entrada_w,
			ie_tipo_movimento_p,
			clock_timestamp(),
			ie_sexo_w,
			dt_nascimento_w,
			cd_medico_atendimento_w,
			nr_crm_medico_w,
			cd_pessoa_usuario_w,
			nm_pessoa_usuario_w,
			substr(obter_ds_descricao_setor(cd_setor_atendimento_p),1,100),
			clock_timestamp(),
			nr_prontuario_w,
			dt_entrada_unidade_p);
		end;
	end if;	
	end;
end loop;
close c02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intdisp_gerar_movto_eup ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, dt_entrada_unidade_p timestamp, ie_tipo_movimento_p text) FROM PUBLIC;

