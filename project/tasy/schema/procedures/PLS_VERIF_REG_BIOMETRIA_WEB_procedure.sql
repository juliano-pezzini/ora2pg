-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verif_reg_biometria_web ( nr_seq_segurado_p bigint, cd_pessoa_fisica_p INOUT text, ie_permite_cadastro_p INOUT text, ie_digital_padrao_p INOUT bigint, ie_digital_cad_p INOUT text) AS $body$
DECLARE


/*
ie_permite_cadastro_p	= (S/N) retorna se o usuario pode ou nao cadastrar mais uma digital
ie_digital_padrao_p	=  retorna a digital padrao da regra
ie_digital_cad_p	=  (S/N) se existir uma digital cadastrada e se a mesma for igual a digital padrao da regra.
*/
				
				
qt_biometria_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(10);
qt_max_cadastro_w		bigint;
ie_digital_padrao_w		bigint;
qt_max_cadastro_ww		bigint := null;
ie_digital_padrao_ww		bigint := null;
ie_permite_cadastro_w		varchar(2) := 'N';
ie_digital_cad_w		varchar(2) := 'N';	
ie_digital_cad_ww		bigint;

C01 CURSOR FOR
	SELECT	qt_max_cadastro,
		ie_dedo_padrao
	from	pls_regra_cad_biometria
	where	ie_situacao = 'A'
	and (coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento and pls_obter_se_controle_estab('RE') = 'S')
	
union all

	SELECT	qt_max_cadastro,
		ie_dedo_padrao
	from	pls_regra_cad_biometria
	where	ie_situacao = 'A'
	and 	pls_obter_se_controle_estab('RE') = 'N';

BEGIN

cd_pessoa_fisica_w := cd_pessoa_fisica_p;

if (cd_pessoa_fisica_w is  null) then
	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pls_segurado
	where	nr_sequencia = nr_seq_segurado_p;
end if;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then

	select	count(1)
	into STRICT	qt_biometria_segurado_w
	from 	pessoa_fisica_biometria
	where	cd_pessoa_fisica = cd_pessoa_fisica_w;

	open C01;
	loop
	fetch C01 into	
		qt_max_cadastro_ww,
		ie_digital_padrao_ww;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
			if (coalesce(qt_max_cadastro_ww,0) > coalesce(qt_max_cadastro_w,0)) then
				qt_max_cadastro_w := qt_max_cadastro_ww;	
				ie_digital_padrao_w := ie_digital_padrao_ww;
			end if;
		end;
	end loop;
	close C01;
	
	if (ie_digital_padrao_w IS NOT NULL AND ie_digital_padrao_w::text <> '') then
		select	count(1)
		into STRICT	ie_digital_cad_ww
		from 	pessoa_fisica_biometria
		where	cd_pessoa_fisica = cd_pessoa_fisica_w
		and	ie_dedo  = ie_digital_padrao_w;
		
		if (ie_digital_cad_ww > 0) then
			ie_digital_cad_w := 'S';
		end if;
	end if;
	
	if	(( qt_biometria_segurado_w < coalesce(qt_max_cadastro_w,0)  and  (qt_max_cadastro_w IS NOT NULL AND qt_max_cadastro_w::text <> '') ) or coalesce(qt_max_cadastro_w::text, '') = '') then
		ie_permite_cadastro_w := 'S';	
	end if;
	
end if;

ie_permite_cadastro_p := ie_permite_cadastro_w;
ie_digital_padrao_p := ie_digital_padrao_w;
ie_digital_cad_p := ie_digital_cad_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verif_reg_biometria_web ( nr_seq_segurado_p bigint, cd_pessoa_fisica_p INOUT text, ie_permite_cadastro_p INOUT text, ie_digital_padrao_p INOUT bigint, ie_digital_cad_p INOUT text) FROM PUBLIC;

