-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desdobrar_lote_alterado ( nr_seq_lote_p bigint, cd_material_p bigint, qt_dispensar_hor_p bigint, qt_dispensar_p bigint, nm_usuario_p text, nr_seq_material_p bigint, nr_motivo_p bigint, ds_motivo_p text) AS $body$
DECLARE


nr_seq_turno_w			bigint;
ie_urgente_w			varchar(1);
cd_material_w			integer;
nr_seq_mat_hor_w			bigint;
ds_horario_w			varchar(15);
cd_unidade_medida_w		varchar(30);
cd_unidade_medida_dose_w		varchar(30);
nr_sequencia_w			bigint;
qt_dose_w			double precision;
qt_dispensar_hor_w			double precision;
qt_restante_w			double precision;
qt_dispensar_w			double precision;
qt_dispensar_hor_ww		double precision := 0;
nr_seq_historico_w 		bigint;

c00 CURSOR FOR
SELECT	sum(b.qt_dispensar_hor) qt_dispensar_hor
from	ap_lote_item a,
	prescr_mat_hor b, 
	ap_lote c
where	a.nr_seq_mat_hor = b.nr_sequencia
and	c.nr_sequencia = a.nr_seq_lote
and	a.nr_seq_lote = nr_seq_lote_p
and	a.cd_material = cd_material_p
and	b.nr_seq_material = nr_seq_material_p
and	coalesce(a.dt_supensao::text, '') = ''
and	c.ie_status_lote = 'G'
and	Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
group by	b.nr_seq_turno,
	substr(obter_desc_turno_disp(b.nr_seq_turno),1,255),        
	b.ie_urgente,
	a.cd_material,
	a.nr_seq_mat_hor,
	b.cd_unidade_medida,
	a.nr_sequencia,
	b.ds_horario,         
	b.cd_unidade_medida_dose
having	sum(a.qt_dispensar) > 0;

c01 CURSOR FOR
SELECT	b.nr_seq_turno,
	b.ie_urgente,
	a.cd_material,
	a.nr_seq_mat_hor,
	b.ds_horario,
	b.cd_unidade_medida, 
	b.cd_unidade_medida_dose,
	a.nr_sequencia,
	sum(b.qt_dose) qt_dose,	
	sum(b.qt_dispensar_hor) qt_dispensar_hor
from	ap_lote_item a, 
	prescr_mat_hor b, 
	ap_lote c
where	a.nr_seq_mat_hor = b.nr_sequencia
and	c.nr_sequencia = a.nr_seq_lote
and	a.nr_seq_lote = nr_seq_lote_p
and	a.cd_material = cd_material_p
and	b.nr_seq_material = nr_seq_material_p
and	coalesce(a.dt_supensao::text, '') = ''
and	c.ie_status_lote = 'G'
and	Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
group by	b.nr_seq_turno,
	substr(obter_desc_turno_disp(b.nr_seq_turno),1,255),        
	b.ie_urgente,
	a.cd_material,
	a.nr_seq_mat_hor,
	b.cd_unidade_medida,
	a.nr_sequencia,
	b.ds_horario,         
	b.cd_unidade_medida_dose
having	sum(a.qt_dispensar) > 0
order by	b.ds_horario;		


BEGIN

open C00;
loop
fetch C00 into	
	qt_dispensar_hor_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin
	qt_dispensar_hor_ww := qt_dispensar_hor_ww + qt_dispensar_hor_w;
	end;
end loop;
close C00;

qt_restante_w := qt_dispensar_hor_ww - qt_dispensar_p;

delete from w_grava_lote_alterado;

open C01;
loop
fetch C01 into	
	nr_seq_turno_w,
	ie_urgente_w,
	cd_material_w,
	nr_seq_mat_hor_w,
	ds_horario_w,
	cd_unidade_medida_w,
	cd_unidade_medida_dose_w,
	nr_sequencia_w,
	qt_dose_w,
	qt_dispensar_hor_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (qt_restante_w > 0) then
		qt_dispensar_w 	:= qt_dispensar_hor_w - qt_restante_w;
		qt_restante_w	:= qt_restante_w - qt_dispensar_hor_w;
		
		if (qt_dispensar_w < 0) then
			qt_dispensar_w := 0;
		end if;
		
	else
		qt_dispensar_w := qt_dispensar_hor_w;
	end if;	
		
	insert into w_grava_lote_alterado(
		nr_seq_turno,
		cd_material,
		dt_atualizacao,
		nm_usuario,
		ie_urgente,
		nr_seq_mat_hor,
		ds_horario,
		cd_unidade_medida,
		cd_unidade_medida_dose,
		nr_seq_lote_item,
		qt_dose,
		qt_dispensar_hor,
		qt_dispensar,
		nr_seq_material)
	values (nr_seq_turno_w,
		cd_material_w,
		clock_timestamp(),
		nm_usuario_p,
		ie_urgente_w,
		nr_seq_mat_hor_w,
		ds_horario_w,
		cd_unidade_medida_w,
		cd_unidade_medida_dose_w,
		nr_sequencia_w,
		qt_dose_w,
		qt_dispensar_hor_p,
		qt_dispensar_w,
		nr_seq_material_p);
	end;
end loop;
close C01;

if (ds_motivo_p IS NOT NULL AND ds_motivo_p::text <> '') and (nr_motivo_p <> 0)then
				
	select	nextval('ap_lote_historico_seq')
	into STRICT	nr_seq_historico_w
	;

	insert into ap_lote_historico(
				nr_sequencia,			
				dt_atualizacao,
				nm_usuario,
				nr_seq_lote,
				nr_seq_mot_desdobrar,
				ds_evento,
				ds_log)
		values (	nr_seq_historico_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_lote_p,
				nr_motivo_p,
				substr(wheb_mensagem_pck.get_texto(790862),1,255),
				ds_motivo_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desdobrar_lote_alterado ( nr_seq_lote_p bigint, cd_material_p bigint, qt_dispensar_hor_p bigint, qt_dispensar_p bigint, nm_usuario_p text, nr_seq_material_p bigint, nr_motivo_p bigint, ds_motivo_p text) FROM PUBLIC;

