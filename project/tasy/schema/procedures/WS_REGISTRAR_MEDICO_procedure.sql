-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ws_registrar_medico ( cd_pessoa_fisica_p text, nm_guerra_p text, nr_crm_p text, uf_crm_p text, ie_vinculo_medico_p text, ie_corpo_clinico_p text, ie_corpo_assistencial_p text, nm_usuario_p text, cd_erro_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE


/*
0 - SUCESSO
1 - Dados não informados
	1.1 - Paciente não informado
	1.2 - Nome de guerra não informado
	1.3 - CRM não informado
	1.4 - UF CRM não informado
	1.5 - Vínculo médico não informado
	1.6 - Corpo clínico não informado
	1.7 - Corpo assistencial não informado
2 - Dados inconsistentes
	2.1 - Paciente não cadastrado
3 - Erro ao registrar o médico
*/
ie_existe_w		varchar(1);


BEGIN

cd_erro_p	:= 0;

if (coalesce(cd_pessoa_fisica_p::text, '') = '') then
	cd_erro_p	:= 1.1;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278061,null);
elsif (coalesce(nm_guerra_p::text, '') = '') then
	cd_erro_p	:= 1.2;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278062,null);
elsif (coalesce(nr_crm_p::text, '') = '') then
	cd_erro_p	:= 1.3;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278063,null);
elsif (coalesce(uf_crm_p::text, '') = '') then
	cd_erro_p	:= 1.4;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278064,null);
elsif (coalesce(ie_vinculo_medico_p::text, '') = '') then
	cd_erro_p	:= 1.5;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278065,null);
elsif (coalesce(ie_corpo_clinico_p::text, '') = '') then
	cd_erro_p	:= 1.6;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278066,null);
elsif (coalesce(ie_corpo_assistencial_p::text, '') = '') then
	cd_erro_p	:= 1.7;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278067,null);
end if;

if (cd_erro_p = 0) then

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_w
	from	pessoa_fisica a
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_p;

	if (ie_existe_w = 'N') then
		cd_erro_p	:= 2.1;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278069,null);
	else
		begin
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_existe_w
		from	medico a
		where	a.cd_pessoa_fisica = cd_pessoa_fisica_p;

		if (ie_existe_w = 'N') then
			insert into medico(	cd_pessoa_fisica,
								nm_guerra,
								nr_crm,
								uf_crm,
								ie_vinculo_medico,
								ie_corpo_clinico,
								ie_corpo_assist,
								dt_atualizacao,
								dt_atualizacao_nrec,
								nm_usuario,
								nm_usuario_nrec,
								ie_situacao)
					values (		cd_pessoa_fisica_p,
								nm_guerra_p,
								nr_crm_p,
								uf_crm_p,
								ie_vinculo_medico_p,
								ie_corpo_clinico_p,
								ie_corpo_assistencial_p,
								clock_timestamp(),
								clock_timestamp(),
								nm_usuario_p,
								nm_usuario_p,
								'A');
		else
			update	medico
			set		nm_guerra			= nm_guerra_p,
					nr_crm              = nr_crm_p,
					uf_crm              = uf_crm_p,
					ie_vinculo_medico   = ie_vinculo_medico_p,
					ie_corpo_clinico    = ie_corpo_clinico_p,
					ie_corpo_assist     = ie_corpo_assistencial_p,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario          = nm_usuario_p
			where	cd_pessoa_fisica = cd_pessoa_fisica_p;
		end if;

		commit;

		exception
			when others then
				cd_erro_p	:= 3;
				ds_erro_p	:= substr(sqlerrm,1,2000);
			end;
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ws_registrar_medico ( cd_pessoa_fisica_p text, nm_guerra_p text, nr_crm_p text, uf_crm_p text, ie_vinculo_medico_p text, ie_corpo_clinico_p text, ie_corpo_assistencial_p text, nm_usuario_p text, cd_erro_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

