-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_medico_agecirur ( cd_medico_p text, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_Atendimento_p bigint, ds_permissao_p text, cd_convenio_p bigint default null, cd_categoria_p text default null, cd_plano_p text default null, dt_referencia_p timestamp default null, ie_tipo_atendimento_p bigint default null, ds_erro_p INOUT text DEFAULT NULL) AS $body$
DECLARE

 
ds_erro_w			varchar(255);
ie_corpo_clinico_w		varchar(1);
ie_pf_credenciada_w		varchar(2);
qt_regra_medico_atend_w		integer;
qt_regra_medico_atend_assist_w	integer;
qt_credenciamento_w       integer;
cd_funcao_w			bigint;
ie_permite_cirurgiao_w		varchar(2);
ie_medico_credenciado_w		varchar(2);
cd_setor_atendimento_w		bigint;
cd_especialidade_w			bigint;


BEGIN 
 
ie_permite_cirurgiao_w := obter_param_usuario(871, 146, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_cirurgiao_w); /*[146] - Permite somente cirurgião do corpo clínico ou credenciado*/
 
select	Obter_Funcao_Ativa 
into STRICT	cd_funcao_w
;
 
ie_corpo_clinico_w := obter_se_corpo_clinico(cd_medico_p);
 
if (ie_corpo_clinico_w = 'N') or 
	(ds_permissao_p = 'R' AND cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then 
	ie_pf_credenciada_w := consistir_credenciamento_pf(coalesce(cd_estabelecimento_p,0), coalesce(obter_especialidade_medico(cd_medico_p,'C'),0), cd_pessoa_fisica_p, clock_timestamp(), cd_medico_p, nr_Atendimento_p, null, ie_pf_credenciada_w);
	if (ie_pf_credenciada_w = 'N') then 
		ds_erro_w	:= wheb_mensagem_pck.get_texto(280000, 'NM_MEDICO_P=' || substr(obter_nome_pf(cd_medico_p),1,60));
	else 
		select count(*) 
		into STRICT  qt_credenciamento_w 
		from  pf_credenciamento 
		where  cd_pf_credenciamento  = cd_medico_p 
		and   ((cd_estabelecimento  = cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = ''));
		if (qt_credenciamento_w = 0) then 
			ds_erro_w    := wheb_mensagem_pck.get_texto(280000, 'NM_MEDICO_P=' || substr(obter_nome_pf(cd_medico_p),1,60));
		end if;
	end if;
else 
	ie_pf_credenciada_w := 'S';
end if;
 
if (coalesce(ds_erro_w, 'XPTP') = 'XPTP') and (ie_permite_cirurgiao_w = 'CC') and (cd_funcao_w <> 872) 	then			/*Colocado para não interferir no processo na função PEPO */
 
	begin 
	cd_setor_atendimento_w	:= wheb_usuario_pck.get_cd_setor_atendimento;
	cd_especialidade_w		:= coalesce(obter_especialidade_medico(cd_medico_p,'C'),0);
	 
	ie_medico_credenciado_w := obter_se_medico_credenciado(cd_estabelecimento_p, 
															cd_medico_p, 
															cd_convenio_p, 			 
															null,					/* cd_prestador_p */
 
															cd_especialidade_w, 
															cd_categoria_p, 		 
															cd_setor_atendimento_w, 
															cd_plano_p,				 
															dt_referencia_p,		 
															ie_tipo_atendimento_p,	 
															null,					/* ie_funcao_medico_p */
 
															null); 					/* ie_carater_inter_sus_p */
 
	if (ie_medico_credenciado_w = 'N') then 
		/* O médico #@NM_MEDICO_P#@ não está credenciado pelo convênio.*/
 
		ds_erro_w := wheb_mensagem_pck.get_texto(384954, 'NM_MEDICO_P=' || substr(obter_nome_pf(cd_medico_p),1,60));
	end if;
	 
	end;
end if;
 
if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') and (cd_funcao_w = 872) then 
	ds_erro_w    := wheb_mensagem_pck.get_texto(280001, 'NM_MEDICO_P=' || substr(obter_nome_pf(cd_medico_p),1,60));
 
end if;
 
 
if (ds_permissao_p = 'S') then 
	ds_erro_p	:= ds_erro_w;
elsif (ds_permissao_p = 'CC') and /*Quando o parametro de entrada "ds_permissao_p" for o 146 e o mesmo estiver como 'CC'*/ 
	(ie_permite_cirurgiao_w = 'CC') then 
	ds_erro_p	:= ds_erro_w;	
elsif (ds_permissao_p = 'C') and (ie_corpo_clinico_w = 'N') then 
	ds_erro_p	:= wheb_mensagem_pck.get_texto(280001, 'NM_MEDICO_P=' || substr(obter_nome_pf(cd_medico_p),1,60));
	 
elsif (ds_permissao_p = 'R') and (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '')	then 
	ds_erro_p	:= ds_erro_w;
	 
else 	ds_erro_p 	:= null;
 
 
end if;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_medico_agecirur ( cd_medico_p text, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_Atendimento_p bigint, ds_permissao_p text, cd_convenio_p bigint default null, cd_categoria_p text default null, cd_plano_p text default null, dt_referencia_p timestamp default null, ie_tipo_atendimento_p bigint default null, ds_erro_p INOUT text DEFAULT NULL) FROM PUBLIC;

