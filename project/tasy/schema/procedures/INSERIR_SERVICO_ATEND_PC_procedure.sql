-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_servico_atend_pc (nr_atendimento_p bigint, ds_lista_tipo_serv_p text) AS $body$
DECLARE


ds_lista_tipo_serv_w	varchar(1000);
nr_pos_virgula_w		integer;
nr_seq_servico_w		atendimento_servico.nr_seq_servico%type;
ie_tipo_servico_w		varchar(2);
nm_usuario_w			varchar(15);
nr_seq_agenda_w			agenda_consulta.nr_sequencia%type;


BEGIN

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '' AND ds_lista_tipo_serv_p IS NOT NULL AND ds_lista_tipo_serv_p::text <> '') then

	nm_usuario_w := wheb_usuario_pck.get_nm_usuario;

	ds_lista_tipo_serv_w := ds_lista_tipo_serv_p;
	
	if (substr(ds_lista_tipo_serv_w, length(ds_lista_tipo_serv_w)) <> ',') then
		ds_lista_tipo_serv_w := ds_lista_tipo_serv_w ||',';
	end if;

	delete from atendimento_servico where nr_atendimento = nr_atendimento_p;
	
	while(ds_lista_tipo_serv_w IS NOT NULL AND ds_lista_tipo_serv_w::text <> '') loop
		begin
					
			nr_pos_virgula_w := position(',' in ds_lista_tipo_serv_w);
			
			if (nr_pos_virgula_w <> 0) then
				nr_seq_servico_w		:= substr(ds_lista_tipo_serv_w, 1, (nr_pos_virgula_w - 1));
				ds_lista_tipo_serv_w	:= substr(ds_lista_tipo_serv_w, (nr_pos_virgula_w + 1), length(ds_lista_tipo_serv_w));
			end if;
			
			if (nr_seq_servico_w IS NOT NULL AND nr_seq_servico_w::text <> '') then
			
				insert into atendimento_servico(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_servico,
								nr_atendimento
							) values (
								nextval('atendimento_servico_seq'),
								clock_timestamp(),
								nm_usuario_w,
								clock_timestamp(),
								nm_usuario_w,
								nr_seq_servico_w,
								nr_atendimento_p
							);

			  	select max(ie_tipo_servico)
				into STRICT	ie_tipo_servico_w
				from	TIPO_SERVICO_ATEND
				where	nr_sequencia = nr_seq_servico_w;
				


				if ( ie_tipo_servico_w = 'VI') then
				
					CALL Inserir_pac_lista_espera_atend(nr_atendimento_p,wheb_usuario_pck.get_cd_estabelecimento,obter_pessoa_atendimento(nr_atendimento_p,'C'),nm_usuario_w);
				
				end if;		
				
				if ( ie_tipo_servico_w = 'EI') then
				
					select max(nr_sequencia)
					into STRICT	nr_seq_agenda_w
					from	agenda_consulta
					where	nr_atendimento = nr_atendimento_p
					and		ie_status_agenda = 'O';


					if (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
						CALL executar_evento_agenda('AGA', 'C', nr_seq_agenda_w, wheb_usuario_pck.get_cd_estabelecimento, nm_usuario_w);
					end if;
				end if;

			end if;			
		end;
	end loop;
		
	commit;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_servico_atend_pc (nr_atendimento_p bigint, ds_lista_tipo_serv_p text) FROM PUBLIC;

