-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nova_cotacao_ordem ( nr_ordem_compra_p bigint, nr_item_oci_p bigint, nr_sequencia_p bigint, /*sequencia da tabela ordem_compra_item_entrega*/
 nm_usuario_p text, nr_cot_compra_p INOUT bigint, nr_item_cot_compra_p INOUT bigint) AS $body$
DECLARE


qt_dias_param_w				integer;
nr_cot_compra_w				bigint;
nr_cot_compra_orig_w			bigint;
nr_solic_compra_orig_w				ordem_compra_item.nr_solic_compra%type;
nr_item_solic_compra_orig_w			ordem_compra_item.nr_item_solic_compra%type;
nr_item_w				integer;
nr_item_cot_compra_existente_w		integer;
nr_item_cot_compra_w			integer;
cd_material_w				integer;
cd_unidade_medida_compra_w		varchar(30);
qt_material_w				double precision;
nr_item_cot_compra_orig_w		integer;
dt_limite_entrega_w			timestamp;
cd_cgc_fornecedor_w			varchar(14);
cd_cgc_fornecedor_ww			varchar(14);
nr_seq_fornec_orig_w			bigint;
nr_seq_cot_fornec_w			bigint;
nr_seq_cot_forn_item_orig_w		bigint;
nr_seq_cot_forn_item_w			bigint;
dt_retorno_prev_w			timestamp;
cd_estabelecimento_w			smallint;
qt_dias_w				bigint;
qt_prevista_entrega_w			double precision;
qt_prevista_entrega_ww			double precision;
qt_real_entrega_w			double precision;
dt_prevista_entrega_w			timestamp;

C01 CURSOR FOR
SELECT	nr_item_cot_compra
from	ordem_compra_item
where	nr_ordem_compra	= nr_ordem_compra_p
and	nr_item_oci = coalesce(nr_item_oci_p,nr_item_oci)
and	(nr_item_cot_compra IS NOT NULL AND nr_item_cot_compra::text <> '');


BEGIN

nr_cot_compra_w	:= nr_cot_compra_p;

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

select	coalesce(Obter_Valor_Param_Usuario(915, 2, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),3)
into STRICT	qt_dias_w
;

select	coalesce(max(nr_cot_compra), 0),
		max(nr_solic_compra),
		max(nr_item_solic_compra)
into STRICT	nr_cot_compra_orig_w,
		nr_solic_compra_orig_w,
		nr_item_solic_compra_orig_w
from	ordem_compra_item
where	nr_ordem_compra = nr_ordem_compra_p
and	nr_item_oci = coalesce(nr_item_oci_p,nr_item_oci);

if (nr_cot_compra_orig_w > 0) then

	if (nr_cot_compra_p = 0) then
		select	nextval('cot_compra_seq')
		into STRICT	nr_cot_compra_w
		;

		select	obter_dia_hora_util_periodo(cd_estabelecimento_w,clock_timestamp(),qt_dias_w)
		into STRICT	dt_retorno_prev_w
		;

		insert into cot_compra(
			nr_cot_compra,
			dt_cot_compra,
			dt_atualizacao,
			cd_comprador,
			nm_usuario,
			ds_observacao,
			cd_pessoa_solicitante,
			cd_estabelecimento,
			dt_retorno_prev,
			dt_entrega,
			nr_classif_interno,
			nr_seq_subgrupo_compra,
			ie_finalidade_cotacao)
		SELECT	nr_cot_compra_w,
			clock_timestamp(),
			clock_timestamp(),
			cd_comprador,
			nm_usuario_p,
			CASE WHEN coalesce(ds_observacao::text, '') = '' THEN Wheb_mensagem_pck.get_Texto(301889, 'NR_ORDEM_COMPRA_P='|| NR_ORDEM_COMPRA_P )  ELSE substr(ds_observacao,1,3700) || chr(13) || chr(10) || Wheb_mensagem_pck.get_Texto(301889, 'NR_ORDEM_COMPRA_P='|| NR_ORDEM_COMPRA_P) END , /*Gerada no cancelamento da Ordem de compra número #@NR_ORDEM_COMPRA_P#@.*/
			cd_pessoa_solicitante,
			cd_estabelecimento,
			dt_retorno_prev_w,
			dt_entrega,
			nr_classif_interno,
			nr_seq_subgrupo_compra,
			'C'
		from	cot_compra
		where	nr_cot_compra = nr_cot_compra_orig_w;
	else
		nr_cot_compra_w := nr_cot_compra_p;
	end if;

	open C01;
	loop
	fetch C01 into
		nr_item_cot_compra_orig_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (nr_cot_compra_p > 0) then
			select	coalesce(max(nr_item_cot_compra),0) +1
			into STRICT	nr_item_cot_compra_existente_w
			from	cot_compra_item
			where	nr_cot_compra = nr_cot_compra_w;
		end if;

		if (nr_sequencia_p > 0) then

			select	trunc(dt_prevista_entrega)
			into STRICT	dt_prevista_entrega_w
			from	ordem_compra_item_entrega
			where	nr_sequencia = nr_sequencia_p;

			select	coalesce(sum(qt_prevista_entrega),0),
				coalesce(sum(qt_real_entrega),0)
			into STRICT	qt_prevista_entrega_w,
				qt_real_entrega_w
			from	ordem_compra_item_entrega
			where	nr_ordem_compra = nr_ordem_compra_p
			and	nr_item_oci = nr_item_oci_p
			and	trunc(dt_prevista_entrega) = dt_prevista_entrega_w;

			qt_prevista_entrega_ww := (qt_prevista_entrega_w - qt_real_entrega_w);
		end if;

		nr_item_cot_compra_w := coalesce(nr_item_cot_compra_existente_w, nr_item_cot_compra_orig_w);

		insert into cot_compra_item(
			nr_cot_compra,
			nr_item_cot_compra,
			cd_material,
			qt_material,
			cd_unidade_medida_compra,
			dt_atualizacao,
			dt_limite_entrega,
			nm_usuario,
			ie_situacao,
			ds_material_direto_w,
			nr_solic_compra,
			nr_item_solic_compra,
			cd_estab_item,
			nr_seq_proj_rec)
		SELECT	nr_cot_compra_w,
			nr_item_cot_compra_w,
			cd_material,
			coalesce(qt_prevista_entrega_ww,qt_material),
			cd_unidade_medida_compra,
			clock_timestamp(),
			dt_limite_entrega,
			nm_usuario_p,
			ie_situacao,
			ds_material_direto_w,
			nr_solic_compra_orig_w,
			nr_item_solic_compra_orig_w,
			cd_estab_item,
			nr_seq_proj_rec
		from	cot_compra_item
		where	nr_cot_compra		= nr_cot_compra_orig_w
		and	nr_item_cot_compra	= nr_item_cot_compra_orig_w;

		-- Para gerar uma nova cotacao a partir de item da OC, deve-se estornar baixa em ambos item e solicitacao de compra.
		-- O numero da nova cotacao deve ser substituido na solicitação de compras
		update	solic_compra_item
		set	nr_cot_compra		= nr_cot_compra_w,
			nr_item_cot_compra	= nr_item_cot_compra_w,
			cd_motivo_baixa		 = NULL,
			dt_baixa		 = NULL
		where	nr_solic_compra	= nr_solic_compra_orig_w
		and 	nr_item_solic_compra = nr_item_solic_compra_orig_w;

		update	solic_compra
		set	cd_motivo_baixa		 = NULL,
			dt_baixa		 = NULL
		where	nr_solic_compra = nr_solic_compra_orig_w;

		insert into cot_compra_item_entrega(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_cot_compra,
			nr_item_cot_compra,
			dt_entrega,
			qt_entrega)
		values (nextval('cot_compra_item_entrega_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_cot_compra_w,
			nr_item_cot_compra_w,
			coalesce(dt_prevista_entrega_w, (SELECT dt_limite_entrega from cot_compra_item where	nr_cot_compra = nr_cot_compra_w and nr_item_cot_compra = nr_item_cot_compra_w)),
			coalesce(qt_prevista_entrega_ww,(select qt_material from cot_compra_item where	nr_cot_compra = nr_cot_compra_w and nr_item_cot_compra = nr_item_cot_compra_w)));
		end;
	end loop;
	close C01;

	CALL gerar_hist_cotacao_sem_commit(
		nr_cot_compra_w,
		Wheb_mensagem_pck.get_Texto(301895), /*'Cotação gerada pelo cancelamento de uma Ordem de compra',*/
		Wheb_mensagem_pck.get_Texto(301896, 'NR_ORDEM_COMPRA_P='|| NR_ORDEM_COMPRA_P ),/*	'Essa cotação de compras foi gerada a partir do cancelamento da ordem de compra número: ' || NR_ORDEM_COMPRA_P || '.' || chr(13) || chr(10) ||		'Os itens desta cotação são os mesmo itens da ordem de compra.',*/
		'S',nm_usuario_p);

end if;

nr_cot_compra_p		:= nr_cot_compra_w;
nr_item_cot_compra_p	:= nr_item_cot_compra_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nova_cotacao_ordem ( nr_ordem_compra_p bigint, nr_item_oci_p bigint, nr_sequencia_p bigint,  nm_usuario_p text, nr_cot_compra_p INOUT bigint, nr_item_cot_compra_p INOUT bigint) FROM PUBLIC;

