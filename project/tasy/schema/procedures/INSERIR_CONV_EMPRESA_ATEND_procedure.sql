-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_conv_empresa_atend ( nr_atendimento_p bigint, cd_cgc_p text) AS $body$
DECLARE


cd_categoria_w				atend_categoria_convenio.cd_categoria%type;
cd_pessoa_fisica_w			atendimento_paciente.cd_pessoa_fisica%type;
ds_pais_usuario_w			varchar(15);
nr_seq_tipo_admissao_fat_w	atendimento_paciente.nr_seq_tipo_admissao_fat%type;
ie_tipo_atendimento_w			atendimento_paciente.ie_tipo_atendimento%type;
dt_nascimento_w				pessoa_fisica.dt_nascimento%type;
cd_convenio_w				convenio.cd_convenio%type;
ie_convenio_atend_w			varchar(1);
cd_tipo_empresa_w			pessoa_juridica.cd_tipo_pessoa%type;
cd_cgc_w					atendimento_paciente_inf.cd_cgc_empregador%type;
dt_entrada_w				atendimento_paciente.dt_entrada%type;
nr_seq_episodio_w			atendimento_paciente.nr_seq_episodio%type;
nr_seq_interno_w			atend_categoria_convenio.nr_seq_interno%type;
nr_prioridade_w				atend_categoria_convenio.nr_prioridade%type;

procedure obter_convenio_pj(cd_cgc_p	text) is
  atendCategoriaConvenio_w RECORD;

BEGIN

select	max(j.cd_tipo_pessoa)
into STRICT		cd_tipo_empresa_w
from	pessoa_juridica j
where	j.cd_cgc = cd_cgc_p;

select	max(ce.cd_convenio)
into STRICT	cd_convenio_w
from	convenio_empresa ce
where	ce.cd_tipo_pessoa = cd_tipo_empresa_w
and	ce.nr_seq_tipo_admissao_fat = nr_seq_tipo_admissao_fat_w;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
    select coalesce(max('S'),'N')
    into STRICT   ie_convenio_atend_w
    from   atend_categoria_convenio
    where  nr_atendimento = nr_atendimento_p
    and    cd_convenio = cd_convenio_w;

    if (ie_convenio_atend_w = 'S') then
       cd_convenio_w := null;
    end if;
end if;

end;

procedure	atualiza_prioridade(	nr_prioridade_w	in atend_categoria_convenio.nr_prioridade%type,
									nr_seq_interno_p in atend_categoria_convenio.nr_seq_interno%type) is
begin
    update	atend_categoria_convenio
    set		nr_prioridade = nr_prioridade_w
    where	nr_seq_interno = nr_seq_interno_p
    and		nr_seq_interno <> nr_seq_interno_w;
end;

begin

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then

	select	max(ap.cd_pessoa_fisica),
			max(ap.nr_seq_tipo_admissao_fat),
			max(ap.ie_tipo_atendimento),
			max(ap.dt_entrada),
			max(ap.nr_seq_episodio)
	into STRICT	cd_pessoa_fisica_w,
			nr_seq_tipo_admissao_fat_w,
			ie_tipo_atendimento_w,
			dt_entrada_w,
			nr_seq_episodio_w
	from	atendimento_paciente ap
	where	ap.nr_atendimento = nr_atendimento_p;
	

	if (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') then
		select 	max(pfe.cd_cgc_empregador)
		into STRICT	cd_cgc_w
		from  	ATENDIMENTO_PACIENTE_INF pfe
		where  	pfe.nr_atendimento in (	SELECT 	apt.nr_atendimento
										from   	atendimento_paciente apt
										where  	apt.nr_seq_episodio in (nr_seq_episodio_w)
		and 	(pfe.cd_cgc_empregador IS NOT NULL AND pfe.cd_cgc_empregador::text <> ''));
		
		if (coalesce(cd_cgc_w::text, '') = '') then

			select	max(pfe.cd_cgc)
			into STRICT 	cd_cgc_w
			from	pessoa_fisica_empregador pfe
			where 	pfe.cd_pessoa_fisica = cd_pessoa_fisica_w
			and		((dt_entrada_w between trunc(pfe.dt_inicio_trabalho) and trunc(pfe.dt_fim_trabalho)) or (dt_entrada_w >= trunc(pfe.dt_inicio_trabalho) and coalesce(pfe.dt_fim_trabalho::text, '') = ''))
			and	0	=	(SELECT	count(*)
						from 	episodio_paciente ep,
								atendimento_paciente ap
						where	ep.nr_sequencia = ap.nr_seq_episodio
						and		ep.nr_sequencia = (	select  ap2.nr_seq_episodio
													from    atendimento_paciente ap2
													where   ap2.nr_atendimento = nr_atendimento_p
												)
						and	ap.nr_atendimento <> nr_atendimento_p)
			and	'S' 	=	(select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END 
							from	tipo_admissao_fat ta
							where	ta.nr_sequencia = nr_seq_tipo_admissao_fat_w
							and     ta.ie_tipo_bg = 'S');
		end if;
	end if;	

	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		obter_convenio_pj(cd_cgc_w);
	end if;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then

		select	max(cc.cd_categoria)
		into STRICT		cd_categoria_w
		from	categoria_convenio cc
		where	cc.cd_convenio = cd_convenio_w;

		if (cd_categoria_w IS NOT NULL AND cd_categoria_w::text <> '') then

			select	max(pf.dt_nascimento)
			into STRICT	dt_nascimento_w
			from	pessoa_fisica pf
			where	pf.cd_pessoa_fisica = cd_pessoa_fisica_w
			and exists ( SELECT	1
					from	tipo_admissao_fat	taf
					where 	taf.ie_tipo_atendimento = ie_tipo_atendimento_w
					and	taf.nr_sequencia = nr_seq_tipo_admissao_fat_w
					and		taf.ie_tipo_bg = 'S'
					and		taf.ie_situacao = 'A'
					and		coalesce(pkg_i18n.get_user_locale, 'pt_BR') in ('de_DE', 'de_AT'));
					
			select	nextval('atend_categoria_convenio_seq')
			into STRICT 	nr_seq_interno_w
			;

			nr_prioridade_w := 1;

			insert into atend_categoria_convenio(nr_seq_interno,
				nr_atendimento,
				cd_convenio,
				cd_categoria,
				dt_inicio_vigencia,
				dt_atualizacao,
				nm_usuario,
				nr_prioridade,
				ie_tipo_conveniado)
			values (nr_seq_interno_w,
				nr_atendimento_p,
				cd_convenio_w,
				cd_categoria_w,
				coalesce(dt_nascimento_w, clock_timestamp()),
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				nr_prioridade_w,
				CASE WHEN coalesce(dt_nascimento_w::text, '') = '' THEN  null  ELSE 1 END
			);

			for atendCategoriaConvenio_w in (	SELECT  acc.nr_seq_interno,
                                                        acc.nr_prioridade
												from    atend_categoria_convenio acc
												where   acc.nr_atendimento = nr_atendimento_p
												and     acc.nr_prioridade > 0
												and     acc.nr_seq_interno <> nr_seq_interno_w) loop
												
				if (atendCategoriaConvenio_w.nr_prioridade = 97 and coalesce(pkg_i18n.get_user_locale, 'pt_BR') in ('de_DE')) then
                    nr_prioridade_w := nr_prioridade_w + 2;
                elsif (atendCategoriaConvenio_w.nr_prioridade = 98 and coalesce(pkg_i18n.get_user_locale, 'pt_BR') in ('de_DE')) then
                    nr_prioridade_w := 98;
                else
                    nr_prioridade_w := nr_prioridade_w + 1;
                end if;
												
               atualiza_prioridade(	nr_prioridade_w,	atendCategoriaConvenio_w.nr_seq_interno);
									
			end loop;

			commit;

	      end if;

	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_conv_empresa_atend ( nr_atendimento_p bigint, cd_cgc_p text) FROM PUBLIC;

