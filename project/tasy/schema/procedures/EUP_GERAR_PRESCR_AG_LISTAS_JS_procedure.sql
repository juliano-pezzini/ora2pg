-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eup_gerar_prescr_ag_listas_js ( ds_lista_agenda_cons_p text, ds_lista_agenda_serv_p text, cd_setor_usuario_p bigint, ie_setor_prescricao_p text, nr_seq_agenda_p bigint, dt_prescricao_p timestamp, nr_atendimento_p bigint, ds_lista_agenda_exame_p text, nm_usuario_p text) AS $body$
DECLARE

 
						 
nr_sequencia_w		bigint;
nr_atendimento_w	bigint;
ds_lista_w		varchar(1000);
tam_lista_w		bigint;
ie_pos_virgula_w	smallint;

						 

BEGIN 
 
if (ds_lista_agenda_exame_p IS NOT NULL AND ds_lista_agenda_exame_p::text <> '') then 
	ds_lista_w := ds_lista_agenda_exame_p;
 
	if (substr(ds_lista_w,length(ds_lista_w) - 1, length(ds_lista_w))	<> ',') then 
		ds_lista_w	:= ds_lista_w ||',';
	end if;
 
	while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') loop 
		begin 
		 
		tam_lista_w		:= length(ds_lista_w);
		ie_pos_virgula_w	:= position(',' in ds_lista_w);
		 
		if (ie_pos_virgula_w <> 0) then 
			nr_sequencia_w		:= (substr(ds_lista_w,1,(ie_pos_virgula_w - 1)))::numeric;
			ds_lista_w		:= substr(ds_lista_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;	
		if (coalesce(nr_sequencia_w,0) > 0) and (coalesce(nr_sequencia_w,0) <> nr_seq_agenda_p) then 
			CALL gerar_prescricao_atend_exame(nr_atendimento_p, dt_prescricao_p, nr_sequencia_w, nm_usuario_p, cd_setor_usuario_p, ie_setor_prescricao_p);
		end if;
		end;
	end loop;
end if;
 
if (ds_lista_agenda_serv_p IS NOT NULL AND ds_lista_agenda_serv_p::text <> '') then 
	ds_lista_w := ds_lista_agenda_serv_p;
 
	if (substr(ds_lista_w,length(ds_lista_w) - 1, length(ds_lista_w))	<> ',') then 
		ds_lista_w	:= ds_lista_w ||',';
	end if;
	 
	while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') loop 
		begin 
		 
		tam_lista_w		:= length(ds_lista_w);
		ie_pos_virgula_w	:= position(',' in ds_lista_w);
		 
		if (ie_pos_virgula_w <> 0) then 
			nr_sequencia_w		:= (substr(ds_lista_w,1,(ie_pos_virgula_w - 1)))::numeric;
			ds_lista_w		:= substr(ds_lista_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;	
		if (coalesce(nr_sequencia_w,0) > 0) and (coalesce(nr_sequencia_w,0) <> nr_seq_agenda_p) then 
			CALL Gerar_Prescr_Agenda_Servico(nr_sequencia_w, nm_usuario_p);
		end if;
		end;
	end loop;
end if;
if (ds_lista_agenda_cons_p IS NOT NULL AND ds_lista_agenda_cons_p::text <> '') then 
	ds_lista_w := ds_lista_agenda_cons_p;
 
	if (substr(ds_lista_w,length(ds_lista_w) - 1, length(ds_lista_w))	<> ',') then 
		ds_lista_w	:= ds_lista_w ||',';
	end if;
 
	while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') loop 
		begin 
		 
		tam_lista_w		:= length(ds_lista_w);
		ie_pos_virgula_w	:= position(',' in ds_lista_w);
		 
		if (ie_pos_virgula_w <> 0) then 
			nr_sequencia_w		:= (substr(ds_lista_w,1,(ie_pos_virgula_w - 1)))::numeric;
			ds_lista_w		:= substr(ds_lista_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;	
		if (coalesce(nr_sequencia_w,0) > 0) and (coalesce(nr_sequencia_w,0) <> nr_seq_agenda_p) then 
			CALL gerar_prescr_agenda_consulta(nr_sequencia_w, nm_usuario_p);
		end if;
		end;
	end loop;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eup_gerar_prescr_ag_listas_js ( ds_lista_agenda_cons_p text, ds_lista_agenda_serv_p text, cd_setor_usuario_p bigint, ie_setor_prescricao_p text, nr_seq_agenda_p bigint, dt_prescricao_p timestamp, nr_atendimento_p bigint, ds_lista_agenda_exame_p text, nm_usuario_p text) FROM PUBLIC;

