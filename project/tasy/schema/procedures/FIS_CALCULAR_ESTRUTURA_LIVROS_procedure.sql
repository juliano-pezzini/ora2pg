-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_calcular_estrutura_livros ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


cd_centro_custo_w		      centro_custo.cd_centro_custo%type;
cd_classif_centro_w		    centro_custo.cd_classificacao%type;
ie_tipo_centro_w		      centro_custo.ie_tipo%type;
cd_classif_w			        conta_contabil.cd_classificacao%type;
cd_conta_contabil_w		    conta_contabil.cd_conta_contabil%type;
ie_tipo_conta_w			      conta_contabil.ie_tipo%type;
cd_empresa_w			        empresa.cd_empresa%type;
vl_item_w			            fis_calculo_estrut.vl_item%type;
vl_mes_01_w			          fis_calculo_estrut.vl_mes_01%type;
vl_mes_02_w			          fis_calculo_estrut.vl_mes_02%type;
vl_mes_03_w			          fis_calculo_estrut.vl_mes_03%type;
vl_mes_04_w			          fis_calculo_estrut.vl_mes_04%type;
vl_mes_05_w			          fis_calculo_estrut.vl_mes_05%type;
vl_mes_06_w			          fis_calculo_estrut.vl_mes_06%type;
vl_mes_07_w			          fis_calculo_estrut.vl_mes_07%type;
vl_mes_08_w			          fis_calculo_estrut.vl_mes_08%type;
vl_mes_09_w			          fis_calculo_estrut.vl_mes_09%type;
vl_mes_10_w			          fis_calculo_estrut.vl_mes_10%type;
vl_mes_11_w			          fis_calculo_estrut.vl_mes_11%type;
vl_mes_12_w			          fis_calculo_estrut.vl_mes_12%type;
vl_anual_w			          fis_calculo_estrut.vl_anual%type;
nr_seq_item_w				      fis_estrutura_item.nr_sequencia%type;
ie_origem_valor_w			    fis_estrutura_item.ie_origem_valor%type;
ds_termo_w			          fis_estrutura_item.ds_origem%type;
ds_origem_w			          fis_estrutura_item.ds_origem%type;
nr_seq_rubrica_w		      fis_estrutura_item.nr_sequencia%type;
ie_scp_w			            fis_estrutura_calculo.ie_scp%type;
cd_estabelecimento_scp_w	fis_estrutura_calculo.cd_estabelecimento_scp%type;
ds_operacao_w				      fis_ecf_valor_contabil_w.ds_operacao%type;
nr_seq_estrut_calc_w	    fis_lote_apuracao.nr_seq_estrutura%type;
nr_seq_lote_ant_w		      fis_lote_apuracao.nr_sequencia%type;
ie_encerramento_w		      varchar(2) := 'N';
ie_forma_apuracao_w 	    varchar(2);
ie_anual_trimestral_w	    varchar(2);
ie_lalur_lacs_w			      varchar(2);
ds_mes_w			            smallint;
nr_pos_inicio_w			      integer;
nr_pos_fim_w			        integer;
nr_pos_centro_w			      integer;
dt_inicial_w			        timestamp;
dt_final_w			          timestamp;
dt_referencia_w			      timestamp;
dt_mes_ant_ini_w		      timestamp;
dt_mes_ant_fim_w		      timestamp;

c01 CURSOR FOR
SELECT	a.nr_sequencia nr_seq_item,
	      a.ie_origem_valor,
	      replace(a.ds_origem, '.', '') ds_origem,
	      a.ie_gerar_conta
from	  fis_estrutura_item a
where	  a.nr_seq_estrutura = nr_seq_estrut_calc_w
and	  ((a.ie_receita_anual = ie_encerramento_w)
or (a.ie_receita_anual =  'N' and ie_forma_apuracao_w = 'B')
or (ie_encerramento_w =  'S' and ie_forma_apuracao_w = 'I'))
order by  a.nr_seq_apres,
          a.nr_seq_somat, 
          a.nr_sequencia;
vet01	c01%RowType;

c02 CURSOR(cd_conta_contabil_p  conta_contabil.cd_conta_contabil%type,
           cd_classificacao_p   conta_contabil.cd_classificacao%type) FOR
SELECT  CASE WHEN ie_origem_valor_w='S' THEN 	  coalesce(sum(vl_saldo),    0) - coalesce(sum(vl_encerramento), 0) WHEN ie_origem_valor_w='SC' THEN    coalesce(sum(vl_saldo),    0) WHEN ie_origem_valor_w='M' THEN 	  coalesce(sum(vl_movimento),0) WHEN ie_origem_valor_w='MA' THEN 	  coalesce(sum(vl_movimento),0) WHEN ie_origem_valor_w='MD' THEN    coalesce(sum(vl_debito),   0) WHEN ie_origem_valor_w='MC' THEN    coalesce(sum(vl_credito),  0) WHEN ie_origem_valor_w='MAD' THEN   coalesce(sum(vl_debito),   0) WHEN ie_origem_valor_w='MAC' THEN   coalesce(sum(vl_credito),  0) WHEN ie_origem_valor_w='MASE' THEN  coalesce(sum(vl_movimento),0) - coalesce(sum(vl_encerramento), 0) WHEN ie_origem_valor_w='MCSE' THEN  coalesce(sum(vl_movimento),0) - coalesce(sum(vl_encerramento), 0) WHEN ie_origem_valor_w='OM' THEN    coalesce(sum(vl_orcado),   0) WHEN ie_origem_valor_w='OA' THEN    coalesce(sum(vl_orcado),   0) END  vl_item,
        max(cd_conta_contabil) cd_conta_contabil,
        cd_centro_custo
from (
  SELECT	a.vl_saldo vl_saldo,
          a.vl_encerramento vl_encerramento,
          a.vl_movimento vl_movimento,
          a.vl_debito vl_debito,
          a.vl_credito vl_credito,
          0 vl_orcado,
          a.cd_conta_contabil cd_conta_contabil,
          a.cd_centro_custo cd_centro_custo
  from	conta_contabil c,
        ctb_saldo a,
        ctb_mes_ref d,
        estabelecimento e
  where	a.nr_seq_mes_ref	= d.nr_sequencia
  and	  a.cd_conta_contabil	= c.cd_conta_contabil
  and 	a.cd_estabelecimento	= e.cd_estabelecimento
  and 	((ie_scp_w = 'S' AND e.cd_estabelecimento = cd_estabelecimento_scp_w) 
  or    (ie_scp_w = 'N' AND e.ie_scp = 'N'))
  and	  c.cd_empresa = cd_empresa_w
  and	  d.cd_empresa = c.cd_empresa
  and	  a.cd_conta_contabil	= cd_conta_contabil_p
  and	  d.dt_referencia between dt_inicial_w and dt_final_w
  and   coalesce(cd_centro_custo_w::text, '') = ''
  and   ie_origem_valor_w not in ('OM', 'OA')
  
union all

  select	a.vl_saldo vl_saldo,
          a.vl_encerramento vl_encerramento, 
          a.vl_movimento vl_movimento,
          a.vl_debito vl_debito,
          a.vl_credito vl_credito,
          0 vl_orcado,
          a.cd_conta_contabil cd_conta_contabil,
          a.cd_centro_custo cd_centro_custo
  FROM estabelecimento e, ctb_mes_ref d, conta_contabil c, ctb_saldo a
LEFT OUTER JOIN centro_custo b ON (a.cd_centro_custo = b.cd_centro_custo)
WHERE a.nr_seq_mes_ref	= d.nr_sequencia and a.cd_conta_contabil	= c.cd_conta_contabil  and a.cd_estabelecimento	= e.cd_estabelecimento and ((ie_scp_w = 'S' AND e.cd_estabelecimento = cd_estabelecimento_scp_w) 
  or    (ie_scp_w = 'N' AND e.ie_scp = 'N')) and c.cd_empresa		= cd_empresa_w and d.cd_empresa		= c.cd_empresa and d.dt_referencia between dt_inicial_w and dt_final_w and a.cd_conta_contabil	= cd_conta_contabil_p and CASE WHEN ie_tipo_conta_w='A' THEN  a.cd_classificacao WHEN ie_tipo_conta_w='T' THEN  a.cd_classif_sup END 	= cd_classificacao_p and b.cd_centro_custo = cd_centro_custo_w and (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') and ie_origem_valor_w not in ('OM', 'OA')
   
union all

  select	0 vl_saldo,
          0 vl_encerramento, 
          0 vl_movimento,
          0 vl_debito,
          0 vl_credito,
          a.vl_orcado vl_orcado,
          a.cd_conta_contabil cd_conta_contabil,
          a.cd_centro_custo cd_centro_custo
  from	conta_contabil c,
        ctb_orcamento a,
        ctb_mes_ref d,
        estabelecimento e
  where	a.nr_seq_mes_ref	= d.nr_sequencia
  and	  a.cd_conta_contabil	= c.cd_conta_contabil
  and 	a.cd_estabelecimento = e.cd_estabelecimento
  and 	((ie_scp_w = 'S' AND e.cd_estabelecimento = cd_estabelecimento_scp_w) 
  or    (ie_scp_w = 'N' AND e.ie_scp = 'N'))
  and	  c.cd_empresa = cd_empresa_w
  and	  d.cd_empresa = c.cd_empresa
  and	  a.cd_conta_contabil = cd_conta_contabil_p
  and	  d.dt_referencia between dt_inicial_w and dt_final_w
  and   coalesce(cd_centro_custo_w::text, '') = ''
  and   ie_origem_valor_w in ('OM', 'OA')
  
union all

  select	0 vl_saldo,
          0 vl_encerramento, 
          0 vl_movimento,
          0 vl_debito,
          0 vl_credito,
          a.vl_orcado vl_orcado,
          a.cd_conta_contabil cd_conta_contabil,
          a.cd_centro_custo cd_centro_custo
  from	conta_contabil c,
        centro_custo b,
        ctb_orcamento a,
        ctb_mes_ref d,
        estabelecimento e
  where	a.nr_seq_mes_ref	= d.nr_sequencia
  and	  a.cd_centro_custo	= b.cd_centro_custo
  and	  a.cd_conta_contabil	= c.cd_conta_contabil
  and 	a.cd_estabelecimento	= e.cd_estabelecimento
  and 	((ie_scp_w = 'S' AND e.cd_estabelecimento = cd_estabelecimento_scp_w) 
  or    (ie_scp_w = 'N' AND e.ie_scp = 'N'))
  and	  c.cd_empresa = cd_empresa_w
  and	  d.cd_empresa = c.cd_empresa
  and	  a.cd_conta_contabil = cd_conta_contabil_p
  and	  a.cd_centro_custo	= cd_centro_custo_w
  and	  d.dt_referencia between dt_inicial_w and dt_final_w
  and   (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '')
  and   ie_origem_valor_w in ('OM', 'OA')
) alias52 group by cd_centro_custo;
vet02	c02%RowType;

c03 CURSOR FOR
SELECT  cd_conta_contabil_w     cd_conta_contabil,
        cd_classif_w            cd_classificacao,
        coalesce(ds_operacao_w, '+') ds_operacao,
        null                    cd_conta_superior

where   ie_tipo_conta_w = 'A'

union

select  a.cd_conta_contabil       cd_conta_contabil,
        a.cd_classificacao_atual  cd_classificacao,
        coalesce(ds_operacao_w, '+')   ds_operacao,
        cd_conta_contabil_w       cd_conta_superior
from    conta_contabil a
where   substr(tax_get_ecf_classification(a.cd_classif_superior_atual, a.cd_conta_contabil, dt_inicial_w), 1, 40) like cd_classif_w || '%'
and 	  a.ie_situacao = 'A'
and 	  a.ie_tipo = 'A'
and 	  ((a.dt_fim_vigencia >= dt_inicial_w) 
or (coalesce(a.dt_fim_vigencia::text, '') = ''))
and     exists (  SELECT  1 
                  from    conta_contabil x 
                  where   x.cd_conta_contabil = cd_conta_contabil_w
                  and (x.dt_fim_vigencia >= dt_inicial_w or coalesce(x.dt_fim_vigencia::text, '') = ''))
and     a.cd_empresa = cd_empresa_w
and     ie_tipo_conta_w = 'T';
vet03	c03%RowType;


BEGIN
delete	FROM fis_calculo_estrut
where	nr_seq_lote	= nr_seq_lote_p;
commit;

delete	FROM fis_livros_parte_b
where	nr_seq_lote	= nr_seq_lote_p;
commit;

update fis_estrutura_calculo set ie_scp = 'N' where coalesce(ie_scp::text, '') = '';
update fis_controle_ecf set ie_scp = 'N' where coalesce(ie_scp::text, '') = '';
update estabelecimento set ie_scp = 'N' where coalesce(ie_scp::text, '') = '';
commit;

CALL fis_del_ecf_valor_contabil(cd_estabelecimento_p, nr_seq_lote_p);

select	max(nr_seq_estrutura),
	max(ie_lote_anual)
into STRICT	nr_seq_estrut_calc_w,
	ie_encerramento_w
from	fis_lote_apuracao
where	nr_sequencia = nr_seq_lote_p;

select	max(dt_mes_apuracao)
into STRICT	dt_referencia_w
from	fis_lote_apuracao
where	nr_sequencia = nr_seq_lote_p;

select	b.ie_forma_apuracao,
	b.ie_anual_trimestral,
	b.ie_lalur_lacs,
	coalesce(b.ie_scp, 'N') ie_scp,
	b.cd_estabelecimento_scp
into STRICT 	ie_forma_apuracao_w,
	ie_anual_trimestral_w,
	ie_lalur_lacs_w,
	ie_scp_w,
	cd_estabelecimento_scp_w
from	fis_estrutura_calculo b
where	b.nr_sequencia	= nr_seq_estrut_calc_w;

open C01;
loop
fetch C01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	cd_empresa_w		  := obter_empresa_estab(cd_estabelecimento_p);
	ds_origem_w		    := vet01.ds_origem;
	vl_item_w		      := 0;
	nr_seq_item_w		  := vet01.nr_seq_item;
	ie_origem_valor_w	:= vet01.ie_origem_valor;
	nr_pos_inicio_w		:= null;
	nr_pos_fim_w		  := null;

	while(ds_origem_w IS NOT NULL AND ds_origem_w::text <> '') loop
		begin
      -- Inicializcao de variaveis
      cd_centro_custo_w	  := null;
      cd_conta_contabil_w	:= '';
      ds_termo_w		      := '';
      nr_seq_rubrica_w	  := null;
      vl_item_w		        := 0;

      --  Obter o termo
      nr_pos_inicio_w		:= coalesce(position('#' in ds_origem_w),0);
      ds_operacao_w 		:= substr(ds_origem_w, 0, nr_pos_inicio_w - 1);
      nr_pos_fim_w		  := coalesce(position('@' in ds_origem_w),0);
      ds_termo_w		    := substr(ds_origem_w, nr_pos_inicio_w, (nr_pos_fim_w - nr_pos_inicio_w + 1));

      --  Verifica centro 
      nr_pos_centro_w		:= coalesce(position('$' in ds_termo_w),0);

      --  Decodifica conta/centro 
      if (nr_pos_centro_w > 0) then
        cd_conta_contabil_w	:= substr(ds_termo_w, 2, nr_pos_centro_w - 2);
        cd_centro_custo_w	:= substr(ds_termo_w, nr_pos_centro_w + 1, length(ds_termo_w) - (nr_pos_centro_w + 1));
      else
        cd_conta_contabil_w	:= substr(ds_termo_w, 2, length(ds_termo_w) - 2);
      end if;

      -- Decodifica rubrica
      if (substr(ds_termo_w,1,2) = '#R') and (coalesce(position('R@' in ds_termo_w),0) > 0) then
        nr_seq_rubrica_w	:= coalesce(somente_numero(substr(ds_termo_w, 3, position('R@' in ds_termo_w) - 3)),0);
      end if;

      if (nr_seq_rubrica_w IS NOT NULL AND nr_seq_rubrica_w::text <> '') then
        begin
          select	coalesce(vl_item,0)
          into STRICT	vl_item_w
          from	fis_calculo_estrut
          where	nr_seq_lote	= nr_seq_lote_p
          and	nr_seq_estrut	= nr_seq_estrut_calc_w
          and	nr_seq_item	= nr_seq_rubrica_w;
        exception when others then
          vl_item_w	:= 0;
        end;

        begin
          CALL fis_ins_ecf_valor_contabil(nm_usuario_p, cd_estabelecimento_p, nr_seq_lote_p, nr_seq_rubrica_w, null, null, null, null, vl_item_w, null);
        exception
        when others then
          CALL wheb_mensagem_pck.exibir_mensagem_abort(1129082, 'NR_ITEM='|| nr_seq_rubrica_w || ';NR_MODELO=' || nr_seq_estrut_calc_w);
        end;

      elsif (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then
        begin
        if (ie_forma_apuracao_w = 'B' or ie_forma_apuracao_w = 'I') then
          begin
            if (ie_anual_trimestral_w = 'T') then
              begin
                dt_inicial_w	:= TRUNC(dt_referencia_w, 'Q');
                dt_final_w	:= fim_mes(pkg_date_utils.add_month(dt_inicial_w, 2,0));
              end;
            elsif (ie_anual_trimestral_w = 'A') then
              begin
                dt_inicial_w	:= pkg_date_utils.start_of(dt_referencia_w,'YEAR',0);
                dt_final_w	:= fim_mes(dt_referencia_w);
              end;
            end if;
          end;
        elsif (ie_forma_apuracao_w = 'R') then
          begin
            dt_inicial_w	:= pkg_date_utils.start_of(dt_referencia_w,'MONTH',0);
            dt_final_w	:= fim_mes(dt_referencia_w);
          end;
        elsif (ie_forma_apuracao_w = 'P') then
          begin
            dt_inicial_w	:= TRUNC(dt_referencia_w, 'Q');
            dt_final_w	:= fim_mes(pkg_date_utils.add_month(dt_inicial_w, 2,0));
          end;
        end if;

        cd_classif_w		    := substr(tax_get_ecf_classification(null, cd_conta_contabil_w, dt_referencia_w), 1, 40);
        cd_classif_centro_w	:= '';
        ie_tipo_centro_w	  := '';

        begin
          select	ie_tipo
          into STRICT	ie_tipo_conta_w
          from	conta_contabil
          where	cd_conta_contabil	= cd_conta_contabil_w;
        exception when others then
          ie_tipo_conta_w	:= '';
        end;

        if (coalesce(cd_centro_custo_w,0) <> 0) then
          begin
            select	ie_tipo,
                    cd_classificacao
            into STRICT	  ie_tipo_centro_w,
                    cd_classif_centro_w
            from	  centro_custo
            where	  cd_centro_custo	= cd_centro_custo_w;
          exception when others then
            ie_tipo_centro_w	  := '';
            cd_classif_centro_w	:= '';
          end;
        end if;
			end;
		end if;

    begin
      if (nr_pos_fim_w = 0) then
        -- valor manual
        CALL fis_ins_ecf_valor_contabil(nm_usuario_p, cd_estabelecimento_p, nr_seq_lote_p, nr_seq_item_w, ie_origem_valor_w, null, null, null, ds_origem_w, null);
      else
        -- valor calculado automaticamente
        open c03;
          loop
          fetch c03 into vet03;
          EXIT WHEN NOT FOUND; /* apply on c03 */
            begin
              open c02(vet03.cd_conta_contabil, vet03.cd_classificacao);
                loop
                fetch c02 into vet02;
                EXIT WHEN NOT FOUND; /* apply on c02 */
                  begin
                    vl_item_w := coalesce(vet02.vl_item, 0);
                    CALL fis_ins_ecf_valor_contabil(nm_usuario_p, cd_estabelecimento_p, nr_seq_lote_p, nr_seq_item_w, ie_origem_valor_w, vet02.cd_conta_contabil, vet02.cd_centro_custo, vl_item_w, vet03.ds_operacao, vet03.cd_conta_superior);
                  end;
                end loop;
              close c02;
            end;
          end loop;
        close c03;
      end if;
    exception
    when others then
      CALL wheb_mensagem_pck.exibir_mensagem_abort(1129082, 'NR_ITEM='|| nr_seq_item_w || ';NR_MODELO=' || nr_seq_estrut_calc_w);
    end;
		
		if (nr_pos_fim_w = 0) then
			ds_origem_w	:= null;
		else
			ds_origem_w	:= substr(ds_origem_w, nr_pos_fim_w + 1, 4000);
		end if;

		end;
	end loop;
	
	vl_item_w := fis_obter_ecf_total_valor(cd_estabelecimento_p, nr_seq_item_w, nr_seq_lote_p);

	if (ie_anual_trimestral_w = 'A') then
		begin
 		ds_mes_w := pkg_date_utils.extract_field('MONTH', dt_referencia_w);

		if (ds_mes_w <> 1) then
			begin

			select CASE WHEN ie_encerramento_w='N' THEN pkg_date_utils.start_of(pkg_date_utils.add_month(dt_referencia_w,-1,0), 'MONTH',0)  ELSE pkg_date_utils.start_of(dt_referencia_w, 'MONTH',0) END
			into STRICT dt_mes_ant_ini_w
			;

			dt_mes_ant_fim_w := fim_mes(dt_mes_ant_ini_w);

      select  max(l.nr_sequencia)
      into STRICT    nr_seq_lote_ant_w
      from    fis_lote_apuracao l,
              fis_estrutura_calculo m
      where   l.nr_seq_estrutura = nr_seq_estrut_calc_w
      and     m.nr_sequencia = l.nr_seq_estrutura
      and     m.ie_lalur_lacs = ie_lalur_lacs_w
      and     m.ie_forma_apuracao = ie_forma_apuracao_w
      and 	  l.ie_lote_anual = 'N'
      and     l.nr_sequencia <> nr_seq_lote_p
      and   l.dt_mes_apuracao <= dt_mes_ant_fim_w;

			if ( coalesce(nr_seq_lote_ant_w::text, '') = '' ) then
				begin
				select	coalesce(CASE WHEN ds_mes_w=1 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=2 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=3 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=4 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=5 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=6 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=7 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=8 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=9 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=10 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=11 THEN vl_item_w  ELSE 0 END ,0),
					coalesce(CASE WHEN ds_mes_w=12 THEN CASE WHEN ie_encerramento_w='N' THEN vl_item_w  ELSE 0 END   ELSE 0 END ,0),
					coalesce(CASE WHEN ie_encerramento_w='S' THEN vl_item_w  ELSE 0 END ,0)
				into STRICT	vl_mes_01_w,
					vl_mes_02_w,
					vl_mes_03_w,
					vl_mes_04_w,
					vl_mes_05_w,
					vl_mes_06_w,
					vl_mes_07_w,
					vl_mes_08_w,
					vl_mes_09_w,
					vl_mes_10_w,
					vl_mes_11_w,
					vl_mes_12_w,
					vl_anual_w
				;
				end;
			else
				begin
				select	coalesce(max(CASE WHEN ds_mes_w=1 THEN vl_item_w  ELSE vl_mes_01 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=2 THEN vl_item_w  ELSE vl_mes_02 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=3 THEN vl_item_w  ELSE vl_mes_03 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=4 THEN vl_item_w  ELSE vl_mes_04 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=5 THEN vl_item_w  ELSE vl_mes_05 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=6 THEN vl_item_w  ELSE vl_mes_06 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=7 THEN vl_item_w  ELSE vl_mes_07 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=8 THEN vl_item_w  ELSE vl_mes_08 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=9 THEN vl_item_w  ELSE vl_mes_09 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=10 THEN vl_item_w  ELSE VL_MES_10 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=11 THEN vl_item_w  ELSE VL_MES_11 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=12 THEN CASE WHEN ie_encerramento_w='N' THEN vl_item_w  ELSE VL_MES_12 END   ELSE VL_MES_12 END ),0),
					coalesce(max(CASE WHEN ie_encerramento_w='S' THEN vl_item_w  ELSE VL_ANUAL END ),0)
				into STRICT	vl_mes_01_w,
					vl_mes_02_w,
					vl_mes_03_w,
					vl_mes_04_w,
					vl_mes_05_w,
					vl_mes_06_w,
					vl_mes_07_w,
					vl_mes_08_w,
					vl_mes_09_w,
					vl_mes_10_w,
					vl_mes_11_w,
					vl_mes_12_w,
					vl_anual_w
				from	fis_calculo_estrut
				where	nr_seq_lote = nr_seq_lote_ant_w
				and 	nr_seq_item = vet01.nr_seq_item;
				end;
			end if;

			if (ie_forma_apuracao_w = 'R' and ie_encerramento_w = 'S') then
				begin
				vl_anual_w := vl_item_w;
				end;
			end if;
			end;
		else
			begin
			vl_mes_01_w := coalesce(vl_item_w,0);
			vl_mes_02_w := 0;
			vl_mes_03_w := 0;
			vl_mes_04_w := 0;
			vl_mes_05_w := 0;
			vl_mes_06_w := 0;
			vl_mes_07_w := 0;
			vl_mes_08_w := 0;
			vl_mes_09_w := 0;
			vl_mes_10_w := 0;
			vl_mes_11_w := 0;
			vl_mes_12_w := 0;
			vl_anual_w := 0;
			end;
		end if;
		end;
	elsif (ie_anual_trimestral_w = 'T') then
		begin
		if (ie_forma_apuracao_w = 'B' or ie_forma_apuracao_w = 'P' or ie_forma_apuracao_w = 'I') then
			begin
			-- ds_mes_w = 1 2 3 4 Quarter
			ds_mes_w := (to_char(dt_referencia_w,'q'))::numeric;

			if (ds_mes_w = 1) then
				begin
				vl_mes_03_w := coalesce(vl_item_w,0);
				vl_mes_06_w := 0;
				vl_mes_09_w := 0;
				vl_mes_12_w := 0;
				end;
			else
				begin
				dt_mes_ant_ini_w := pkg_date_utils.add_month(trunc(dt_referencia_w, 'q'),-3,0);
				dt_mes_ant_fim_w := fim_dia(trunc(dt_referencia_w, 'q')-1);

				select	max(nr_sequencia)
				into STRICT	nr_seq_lote_ant_w
				from	fis_lote_apuracao
				where	dt_mes_apuracao between dt_mes_ant_ini_w and dt_mes_ant_fim_w
				and 	nr_seq_estrutura = nr_seq_estrut_calc_w;

				select	coalesce(max(CASE WHEN ds_mes_w=1 THEN vl_item_w  ELSE vl_mes_03 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=2 THEN vl_item_w  ELSE vl_mes_06 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=3 THEN vl_item_w  ELSE vl_mes_09 END ),0),
					coalesce(max(CASE WHEN ds_mes_w=4 THEN vl_item_w  ELSE vl_mes_12 END ),0)
				into STRICT	vl_mes_03_w,
					vl_mes_06_w,
					vl_mes_09_w,
					vl_mes_12_w
				from	fis_calculo_estrut
				where	nr_seq_lote = nr_seq_lote_ant_w
				and	nr_seq_item = vet01.nr_seq_item;
				end;
			end if;
			end;
		end if;
		end;
	end if;

	insert into fis_calculo_estrut(
		nr_sequencia,
		nr_seq_estrut,
		nr_seq_item,
		nr_seq_lote,
		nr_seq_tributo,
		vl_item,
		ie_lalur_lacs,
		ie_anual_trimestral,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_referencia,
		vl_mes_01,
		vl_mes_02,
		vl_mes_03,
		vl_mes_04,
		vl_mes_05,
		vl_mes_06,
		vl_mes_07,
		vl_mes_08,
		vl_mes_09,
		vl_mes_10,
		vl_mes_11,
		vl_mes_12,
		vl_anual,
		ds_origem)
	values (	nextval('fis_calculo_estrut_seq'),
		nr_seq_estrut_calc_w,
		vet01.nr_seq_item,
		nr_seq_lote_p,
		249, 		
		vl_item_w,
		ie_lalur_lacs_w,
		ie_anual_trimestral_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		dt_referencia_w,
		vl_mes_01_w,
		vl_mes_02_w,
		vl_mes_03_w,
		vl_mes_04_w,
		vl_mes_05_w,
		vl_mes_06_w,
		vl_mes_07_w,
		vl_mes_08_w,
		vl_mes_09_w,
		vl_mes_10_w,
		vl_mes_11_w,
		vl_mes_12_w,
		vl_anual_w,
		vet01.ds_origem);
	end;
end loop;
close C01;

update fis_lote_apuracao set dt_geracao = clock_timestamp() where nr_sequencia = nr_seq_lote_p;
commit;

if (ie_lalur_lacs_w = 'LC') then
	begin
	if (ie_forma_apuracao_w = 'B') then
		begin
		CALL fis_calc_lacs_balancete(nr_seq_lote_p);
		end;
	elsif (ie_forma_apuracao_w = 'R') then
		begin
		CALL fis_calc_lacs_receita(nr_seq_lote_p);
		end;
	end if;
	end;
elsif (ie_lalur_lacs_w = 'LL') then
	begin
	if (ie_forma_apuracao_w = 'B') then
		begin
		CALL fis_calc_lalur_balancete(nr_seq_lote_p);
		end;
	elsif (ie_forma_apuracao_w = 'R') then
		begin
		CALL fis_calc_lalur_receita(nr_seq_lote_p);
		end;
	end if;
	end;
elsif (ie_lalur_lacs_w = 'CS') then
	begin
	if (ie_forma_apuracao_w = 'P') then
		begin
		CALL fis_calc_csll_receita(nr_seq_lote_p);
		end;
	elsif (ie_forma_apuracao_w = 'I') then
		begin
		CALL fis_calc_csll_imune(nr_seq_lote_p);
		end;
	end if;
	end;
elsif (ie_lalur_lacs_w = 'IR') then
	begin
	if (ie_forma_apuracao_w = 'P') then
		begin
		CALL fis_calc_irpj_receita(nr_seq_lote_p);
		end;
	elsif (ie_forma_apuracao_w = 'I') then
		begin
		CALL fis_calc_irpj_imune(nr_seq_lote_p);
		end;
	end if;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_calcular_estrutura_livros ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

