-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE diops_fin_gerar_fluxo_caixa ( nr_seq_operadora_p bigint, nr_seq_transacao_p bigint, nr_seq_periodo_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar as informações de fluxo de caixa referentes ao período do DIOPS levando
em conta as regras de conta financeira contidas na função OPS - Geração de DIOPS, pasta
Regras geração DIOPS -> Conta financeira
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção: Trazer somente informações do estabelecimento do período
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_descricao_conta_w		varchar(255);
ds_conta_w			varchar(60);
ie_acao_conta_w			varchar(2)	:= 'SO';
ie_acao_trans_conta_w		varchar(2)	:= 'SO';
ie_tipo_atividade_w		varchar(1);
ie_forma_valor_w		varchar(1);
vl_fluxo_w			double precision;
cd_conta_financ_w		bigint;
nr_seq_apresentacao_w		bigint;
cd_conta_saldo_w		bigint;
cd_conta_saldo_ant_w		bigint;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_estabelecimento_ww		estabelecimento.cd_estabelecimento%type;
cd_empresa_w                    empresa.cd_empresa%type;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
	
/* O UNION é para inserir todos os tipos de contas financeiras da ANS existentes, caso contrário da erro no XML*/
	
C01 CURSOR FOR
	SELECT	substr(a.ds_conta, 1, 60) ds_conta,
		b.cd_conta_financ cd_conta_financ,
		CASE WHEN 	obter_se_totaliza_cf(d.cd_conta_financ)='S' THEN			CASE WHEN 	d.cd_conta_financ=cd_conta_saldo_w THEN 				obter_valor_fluxo_saldo(d.cd_estabelecimento, 'P', 'D', dt_periodo_inicial_w,							dt_periodo_final_w, null, 2) WHEN 	d.cd_conta_financ=cd_conta_saldo_ant_w THEN 				obter_valor_fluxo_saldo(d.cd_estabelecimento, 'P', 'D', dt_periodo_inicial_w,							dt_periodo_final_w, null, 1)  ELSE sum(d.vl_fluxo) END   ELSE 0 END ,
		--abs(d.vl_fluxo),
		a.ie_tipo_atividade,
		a.ds_desc_conta,
		coalesce(a.nr_seq_apresentacao,100),
		coalesce(b.ie_acao_conta, 'SO'),
		coalesce(a.ie_acao_conta, 'SO')
	from	fluxo_caixa			d,
		conta_financeira		c,
		diops_trans_conta_financ	b,
		diops_trans_conta		a
	where	a.nr_sequencia			= b.nr_seq_trans_conta
	and	b.cd_conta_financ		= c.cd_conta_financ
	and	c.cd_conta_financ		= d.cd_conta_financ	
	and	a.nr_seq_transacao		= nr_seq_transacao_p
	and	d.dt_referencia between dt_periodo_inicial_w and dt_periodo_final_w
	and	a.ie_tipo_conta			= 'F'
	and	d.ie_classif_fluxo		= 'P'
	and	d.ie_periodo			= 'D'
	and	a.cd_estabelecimento 		= cd_estabelecimento_w
	and	d.cd_estabelecimento 		in (    SELECT  x.cd_estabelecimento
							from	empresa z,
								estabelecimento y,
								diops_estab_adicional x
							where	x.cd_estabelecimento = y.cd_estabelecimento
							and	y.cd_empresa = z.cd_empresa
							and	z.cd_empresa = cd_empresa_w
							
union

							select	cd_estabelecimento_w
							)
	and	ie_forma_valor_w		= 'S'
	group by
		a.ds_conta, 
		b.cd_conta_financ, 
		a.ie_tipo_atividade,
		d.cd_estabelecimento,
		a.ds_desc_conta, 
		d.cd_conta_financ,
		coalesce(a.nr_seq_apresentacao,100),
		coalesce(b.ie_acao_conta, 'SO'), 
		coalesce(a.ie_acao_conta, 'SO')
	
union all

	select	substr(a.ds_conta, 1, 60) ds_conta,
		b.cd_conta_financ cd_conta_financ,
		abs(d.vl_fluxo),
		a.ie_tipo_atividade,
		a.ds_desc_conta,
		coalesce(a.nr_seq_apresentacao,100),
		coalesce(b.ie_acao_conta, 'SO'),
		coalesce(a.ie_acao_conta, 'SO')
	from	fluxo_caixa			d,
		conta_financeira		c,
		diops_trans_conta_financ	b,
		diops_trans_conta		a
	where	a.nr_sequencia			= b.nr_seq_trans_conta
	and	b.cd_conta_financ		= c.cd_conta_financ
	and	c.cd_conta_financ		= d.cd_conta_financ	
	and	a.nr_seq_transacao		= nr_seq_transacao_p
	and	d.dt_referencia between dt_periodo_inicial_w and dt_periodo_final_w
	and	a.ie_tipo_conta			= 'F'
	and	d.ie_classif_fluxo		= 'P'
	and	d.ie_periodo			= 'D'
	and	a.cd_estabelecimento 		= cd_estabelecimento_w
	and	d.cd_estabelecimento 		in (    select  x.cd_estabelecimento  -- Traz todos os estabelecimentos que pertencem à mesma empresa do estabelecimento que consta na diops_periodo
							from	empresa z,
								estabelecimento y,
								diops_estab_adicional x
							where	x.cd_estabelecimento = y.cd_estabelecimento
							and	y.cd_empresa = z.cd_empresa
							and	z.cd_empresa = cd_empresa_w
							
union

							select	cd_estabelecimento_w
							)
	and	ie_forma_valor_w		= 'V'
	
union all

	select	substr(ds_conta, 1, 60) ds_conta,
		null cd_conta_financ,
		0,
		ie_tipo_atividade,
		ds_desc_conta,
		coalesce(nr_seq_apresentacao, 100),
		'S0',
		coalesce(ie_acao_conta, 'SO')
	from	diops_trans_conta
	where	nr_seq_transacao		= nr_seq_transacao_p
	and	ie_tipo_conta			= 'F'
	and	cd_estabelecimento		= cd_estabelecimento_w
	order by 
		ds_conta,
		cd_conta_financ;

C02 CURSOR FOR
	SELECT	ds_conta,
		ds_descricao_conta,
		ie_tipo_atividade,
		coalesce(sum(vl_fluxo), 0),
		coalesce(nr_seq_apresentacao, 100),
		coalesce(ie_acao_conta, 'SO'),
		cd_estabelecimento
	from	w_diops_fin_fluxo_caixa
	where	nr_seq_periodo	= nr_seq_periodo_p
	group by
		ds_conta,
		ds_descricao_conta,
		ie_tipo_atividade,
		cd_estabelecimento,
		coalesce(nr_seq_apresentacao, 100),
		coalesce(ie_acao_conta, 'SO');


BEGIN
begin /* Obter o período trimestral do DIOPS */
select	coalesce(dt_periodo_inicial, ''),
	coalesce(dt_periodo_final, ''),
	cd_estabelecimento
into STRICT	dt_periodo_inicial_w,
	dt_periodo_final_w,
	cd_estabelecimento_w
from	diops_periodo
where	nr_sequencia	= nr_seq_periodo_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183308, 'NR_SEQ_OPERADORA=' || nr_seq_operadora_p || ';NR_SEQ_PERIODO=' || nr_seq_periodo_p);
end;

select	max(cd_conta_financ_saldo),
	max(cd_conta_financ_sant)
into STRICT 	cd_conta_saldo_w,
	cd_conta_saldo_ant_w
from 	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_w;

begin
select	b.cd_empresa
into STRICT	cd_empresa_w
from	empresa b,
	estabelecimento a
where	b.cd_empresa = a.cd_empresa
and	a.cd_estabelecimento = cd_estabelecimento_w;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183309,'NR_SEQ_OPERADORA='|| nr_seq_operadora_p);
end;

ie_forma_valor_w := Obter_Param_Usuario(1227, 6, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_forma_valor_w);

ie_forma_valor_w	:= coalesce(ie_forma_valor_w, 'V');
open C01;
loop
fetch C01 into	
	ds_conta_w,
	cd_conta_financ_w,
	vl_fluxo_w,
	ie_tipo_atividade_w,
	ds_descricao_conta_w,
	nr_seq_apresentacao_w,
	ie_acao_conta_w,
	ie_acao_trans_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_acao_conta_w = 'SB') then
		vl_fluxo_w	:= (vl_fluxo_w * -1);
	end if;	
	
	insert into w_diops_fin_fluxo_caixa(nr_sequencia,
		nr_seq_operadora,
		nr_seq_transacao,
		ds_conta,
		vl_fluxo,
		cd_conta_financ,
		dt_atualizacao,
		nm_usuario,
		nr_seq_periodo,
		ie_tipo_atividade,
		cd_estabelecimento,
		ds_descricao_conta,
		nr_seq_apresentacao,
		ie_acao_conta)
	values (nextval('w_diops_fin_fluxo_caixa_seq'),
		nr_seq_operadora_p,
		nr_seq_transacao_p,
		ds_conta_w,
		vl_fluxo_w,
		cd_conta_financ_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_periodo_p,
		ie_tipo_atividade_w,
		cd_estabelecimento_w,
		ds_descricao_conta_w,
		nr_seq_apresentacao_w,
		ie_acao_trans_conta_w);
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into	
	ds_conta_w,
	ds_descricao_conta_w,
	ie_tipo_atividade_w,
	vl_fluxo_w,
	nr_seq_apresentacao_w,
	ie_acao_trans_conta_w,
	cd_estabelecimento_ww;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	if (vl_fluxo_w < 0) then
		vl_fluxo_w	:= vl_fluxo_w * -1;
	end if;
	
	insert into diops_fin_fluxo_caixa(nr_sequencia,
		cd_estabelecimento,
		nr_seq_periodo,
		ds_conta,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		vl_fluxo,
		ie_tipo_atividade,
		ds_descricao_conta,
		nr_seq_operadora,
		nr_seq_apresentacao,
		ie_acao_conta)
	values (nextval('diops_fin_fluxo_caixa_seq'),
		cd_estabelecimento_ww,
		nr_seq_periodo_p,
		ds_conta_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		vl_fluxo_w,
		ie_tipo_atividade_w,
		ds_descricao_conta_w,
		nr_seq_operadora_p,
		nr_seq_apresentacao_w,
		ie_acao_trans_conta_w);
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE diops_fin_gerar_fluxo_caixa ( nr_seq_operadora_p bigint, nr_seq_transacao_p bigint, nr_seq_periodo_p bigint, nm_usuario_p text) FROM PUBLIC;

