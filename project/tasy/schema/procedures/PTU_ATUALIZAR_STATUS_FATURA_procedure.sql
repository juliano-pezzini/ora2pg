-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_atualizar_status_fatura ( nr_seq_fatura_p bigint, ie_status_p text, ie_historico_p text, nm_usuario_p text, ie_param_37_a500_p text default 'N') AS $body$
DECLARE
 is  -- Sempre manter este parametro por ultimo pois o mesmo so e passado na rotina PTU_ACEITAR_FATURA drquadros 608912

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Alterar o status da analise conforme parametro, e gerar historico desta alteracao
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Nao permitir alterar o status para "Analise finalizada" se o status ainda 
for "Em validacao"
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_call_stack_w		varchar(4000);
ie_status_w		varchar(10);
ie_alterar_status_w	varchar(1)	:= 'S';
qt_historico_w		bigint;
qt_analise_val_w	integer;
qt_conta_nao_glosada_w	integer	:=0;
qt_item_nao_glosado_w	integer	:=0;
nr_titulo_w		titulo_pagar.nr_titulo%type;
nr_titulo_ndc_w		titulo_pagar.nr_titulo%type;
ie_situacao_w		titulo_pagar.ie_situacao%type;
ie_param_37_a500_w	varchar(2);
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
ie_status_atual_w	ptu_fatura.ie_status%type;


BEGIN

CALL pls_grava_log_proces_imp_a500('Inicio ptu_atualizar_status_fatura', nr_seq_fatura_p, nm_usuario_p);

if (ie_status_p = 'AF') then /* Nao permitir alterar o status para "Analise finalizada" se o status ainda for "Em validacao" */
	
	select	max(cd_estabelecimento),
		max(ie_status)
	into STRICT	cd_estabelecimento_w,
		ie_status_atual_w
	from	ptu_fatura
	where	nr_sequencia = nr_seq_fatura_p;
	
	-- Alterado para sempre considerar o parametro 37, indiferente a rotina que esta alterando o status da fatura - aedemuth
	ie_param_37_a500_w := Obter_Param_Usuario(1293, 37, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_param_37_a500_w);
	
	if (ie_param_37_a500_w = 'S') then
		select	count(a.nr_sequencia)
		into STRICT	qt_analise_val_w	
		from	pls_analise_conta	a,
			pls_conta		b
		where	a.nr_sequencia	= b.nr_seq_analise
		and	b.nr_seq_fatura	= nr_seq_fatura_p
		and	a.ie_status	<> 'T'; -- Atendimento encerrado
		
		if (qt_analise_val_w > 0) then
			ie_alterar_status_w := 'N';
			
		elsif (ie_status_atual_w = 'V') then
			-- Verifica se existe algum item nao glosada, se existir, fica caracterizado que o atendimento inteiro foi glosado
			select	sum(t.contador)
			into STRICT	qt_item_nao_glosado_w
			from (	SELECT	count(1) contador
				from	pls_conta	a,
					pls_conta_proc	b
				where	b.nr_seq_conta	= a.nr_sequencia
				and	a.nr_seq_fatura	= nr_seq_fatura_p
				and	b.ie_glosa	= 'N'
				
union all

				SELECT	count(1) contador
				from	pls_conta	a,
					pls_conta_proc	b
				where	b.nr_seq_conta	= a.nr_sequencia
				and	a.nr_seq_fatura	= nr_seq_fatura_p
				and	coalesce(b.ie_glosa::text, '') = ''
				
union all

				select	count(1) contador
				from	pls_conta	a,
					pls_conta_mat	b
				where	b.nr_seq_conta	= a.nr_sequencia
				and	a.nr_seq_fatura	= nr_seq_fatura_p
				and	b.ie_glosa	= 'N'
				
union all

				select	count(1) contador
				from	pls_conta	a,
					pls_conta_mat	b
				where	b.nr_seq_conta	= a.nr_sequencia
				and	a.nr_seq_fatura	= nr_seq_fatura_p
				and	coalesce(b.ie_glosa::text, '') = '') t;
				
			-- Se possui itens nao glosados, ainda verifica se existe alguma conta nao glosada, se existir, fica caracterizado que o atendimento inteiro foi glosado
			if (qt_item_nao_glosado_w > 0) then
				select	sum(t.contador)		
				into STRICT	qt_conta_nao_glosada_w	
				from (	SELECT	count(1) contador
					from	pls_conta		a
					where	a.nr_seq_fatura	= nr_seq_fatura_p
					and	a.ie_glosa	= 'N'
					
union all

					SELECT	count(1) contador
					from	pls_conta		a
					where	a.nr_seq_fatura	= nr_seq_fatura_p
					and	coalesce(a.ie_glosa::text, '') = '') t;
			end if;
			
			-- seainda tem analise pendentes ou se o atendimento foi completamente glosado
			if (qt_conta_nao_glosada_w = 0) or (qt_item_nao_glosado_w = 0) then
				ie_alterar_status_w	:= 'N';
			end if;
		end if;
	end if;
end if;

if (ie_alterar_status_w = 'S') then
	update	ptu_fatura
	set	ie_status		= ie_status_p,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_fatura_p;
	
	-- Se mudar a fatura para inconsistente, cancelar os titulos vinculados
	if (ie_status_p = 'I') then
		select	max(nr_titulo),
			max(nr_titulo_ndc)
		into STRICT	nr_titulo_w,
			nr_titulo_ndc_w
		from	ptu_fatura
		where	nr_sequencia	= nr_seq_fatura_p;
		
		-- Cancelar titulo fatura
		if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
			select	max(ie_situacao)
			into STRICT	ie_situacao_w
			from	titulo_pagar
			where	nr_titulo	= nr_titulo_w;
			
			if (ie_situacao_w = 'A') then
				CALL cancelar_titulo_pagar( nr_titulo_w, nm_usuario_p, clock_timestamp());
				
				update	titulo_pagar
				set	ds_observacao_titulo	= substr('Fatura de intercambio inconsistente.' || chr(13) || ds_observacao_titulo,1,4000)
				where	nr_titulo		= nr_titulo_w;
			end if;
		end if;		
		
		-- Cancelar titulo fatura NDR
		if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
			select	max(ie_situacao)
			into STRICT	ie_situacao_w
			from	titulo_pagar
			where	nr_titulo	= nr_titulo_ndc_w;

			if (ie_situacao_w = 'A') then
				CALL cancelar_titulo_pagar( nr_titulo_ndc_w, nm_usuario_p, clock_timestamp());
				
				update	titulo_pagar
				set	ds_observacao_titulo	= substr('Fatura de intercambio inconsistente.' || chr(13) || ds_observacao_titulo,1,4000)
				where	nr_titulo		= nr_titulo_ndc_w;
			end if;
		end if;
	end if;

	select	count(*)
	into STRICT	qt_historico_w
	from	ptu_fatura_historico
	where	nr_seq_fatura		= nr_seq_fatura_p
	and	ie_tipo_historico	= CASE WHEN ie_status_p='A' THEN  8 WHEN ie_status_p='AF' THEN  4 WHEN ie_status_p='C' THEN  1 WHEN ie_status_p='CA' THEN  2 WHEN ie_status_p='E' THEN  3 WHEN ie_status_p='I' THEN  1 WHEN ie_status_p='R' THEN  7 WHEN ie_status_p='V' THEN  1 END;

	ds_call_stack_w := substr(sqlerrm || ' ' || DBMS_UTILITY.FORMAT_CALL_STACK,1,4000);
	
	if (qt_historico_w = 0) and (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') then
		insert into ptu_fatura_historico(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_fatura,
			dt_historico,
			nm_usuario_historico,
			ie_tipo_historico,
			ie_acao_executada,
			ds_call_stack)
		values (nextval('ptu_fatura_historico_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_fatura_p,
			clock_timestamp(),
			nm_usuario_p,
			CASE WHEN ie_status_p='A' THEN  8 WHEN ie_status_p='AF' THEN  4 WHEN ie_status_p='C' THEN  1 WHEN ie_status_p='CA' THEN  2 WHEN ie_status_p='E' THEN  3 WHEN ie_status_p='I' THEN  1 WHEN ie_status_p='R' THEN  7 WHEN ie_status_p='V' THEN  1 END ,
			'S',
			ds_call_stack_w);
	else
		update	ptu_fatura_historico
		set	dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			ds_call_stack		= ds_call_stack_w
		where	nr_seq_fatura		= nr_seq_fatura_p
		and	ie_tipo_historico	= CASE WHEN ie_status_p='A' THEN  8 WHEN ie_status_p='AF' THEN  4 WHEN ie_status_p='C' THEN  1 WHEN ie_status_p='CA' THEN  2 WHEN ie_status_p='E' THEN  3 WHEN ie_status_p='I' THEN  1 WHEN ie_status_p='R' THEN  7 WHEN ie_status_p='V' THEN  1 END;
	end if;
end if;

--Nao pode commitar nesta rotina!!!
CALL pls_grava_log_proces_imp_a500('Fim ptu_atualizar_status_fatura', nr_seq_fatura_p, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_atualizar_status_fatura ( nr_seq_fatura_p bigint, ie_status_p text, ie_historico_p text, nm_usuario_p text, ie_param_37_a500_p text default 'N') FROM PUBLIC;

