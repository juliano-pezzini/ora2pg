-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_transfere_kit_mat_local ( nr_seq_kit_estoque_p bigint, nr_seq_reg_kit_p bigint, cd_local_destino_p bigint, cd_operacao_estoque_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_local_origem_w		smallint;
nr_seq_log_w			bigint;
cd_operacao_correspondente_w	smallint;
cd_material_w			integer;
qt_material_w			double precision;
nr_seq_lote_w			bigint;
nr_sequencia_comp_w		bigint;

nr_movimento_estoque_w		bigint;
nr_movimento_estoque_ww		bigint;
dt_mesano_referencia_w		timestamp;
cd_unidade_medida_consumo_w	varchar(30);
cd_material_estoque_w		integer;
ds_lote_w			varchar(20);
dt_validade_w			timestamp;
ie_local_valido_w		varchar(1);
ds_material_w			material.ds_material%type;
cd_fornec_consignado_w  kit_estoque_comp.cd_fornec_consignado%type;

nr_seq_regra_w			bigint;
qt_diferenca_w			bigint := 0;
ie_continua				varchar(1)	:= 'S';
qt_baixado_proprio_w	double precision;
qt_baixado_consignado_w	double precision;
qt_material_baixar		double precision;
qt_estoque_w			double precision;
ie_consignado_w			varchar(1);
ie_tipo_saldo_w			varchar(1);
cd_operacao_estoque_w	smallint := null;

c01 CURSOR FOR
SELECT	cd_material,
	qt_material,
	coalesce(nr_seq_lote_fornec,0),
	nr_sequencia,
	cd_fornec_consignado
from	kit_estoque_comp
where	nr_seq_kit_estoque = nr_seq_kit_estoque_p
and	coalesce(dt_exclusao::text, '') = '';


BEGIN

select	cd_local_estoque
into STRICT	cd_local_origem_w
from	kit_estoque
where	nr_sequencia = nr_seq_kit_estoque_p;

select	coalesce(max(IE_REGRA_SALDO_CONSIG),0)
into STRICT	nr_seq_regra_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

open c01;
loop
fetch c01 into
	cd_material_w,
	qt_material_w,
	nr_seq_lote_w,
	nr_sequencia_comp_w,
	cd_fornec_consignado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ie_local_valido_w := Obter_Local_Valido(cd_estabelecimento_p, cd_local_destino_p, cd_material_w, null, ie_local_valido_w);
	qt_baixado_proprio_w 	:= 0;
	qt_baixado_consignado_w := 0;
	qt_material_baixar := qt_material_w;
	qt_diferenca_w := 0;
	ie_continua := 'S';
	
	select	max(ie_consignado)
	into STRICT	ie_consignado_w
	from	material
	where	cd_material = cd_material_w;
			
	if (ie_local_valido_w = 'N') then
		begin
		select	ds_material
		into STRICT	ds_material_w
		from	material
		where	cd_material = cd_material_w;
		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(896471,'CD_MATERIAL=' || cd_material_w || ';DS_MATERIAL=' || ds_material_w);
		-- Material: #@CD_MATERIAL#@ - #@DS_MATERIAL#@

		-- nao liberado para o local de estoque!
		end;
	end if;
	
	while(qt_diferenca_w > 0 or ie_continua = 'S')loop
	begin	
		select	nextval('movimento_estoque_seq')
		into STRICT	nr_movimento_estoque_w
		;

		select	dt_mesano_vigente
		into STRICT	dt_mesano_referencia_w
		from	parametro_estoque
		where	cd_estabelecimento = cd_estabelecimento_p;

		select	cd_material_estoque
		into STRICT	cd_material_estoque_w
		from	material
		where	cd_material = cd_material_w;
		
		cd_unidade_medida_consumo_w	:=	obter_dados_material_estab(cd_material_w, cd_estabelecimento_p, 'UMS');

		ds_lote_w	:= '';
		dt_validade_w	:= null;
		if (coalesce(nr_seq_lote_w,0) > 0) then

			select	ds_lote_fornec,
				dt_validade
			into STRICT	ds_lote_w,
				dt_validade_w
			from	material_lote_fornec
			where	nr_sequencia = nr_seq_lote_w;
		end if;	
		
		if(ie_consignado_w = '2' AND nr_seq_regra_w > 0)then				
		
			SELECT * FROM obter_fornec_consig_ambos(cd_estabelecimento_p, cd_material_w, coalesce(nr_seq_lote_w,0), cd_local_origem_w, ie_tipo_saldo_w, cd_fornec_consignado_w) INTO STRICT ie_tipo_saldo_w, cd_fornec_consignado_w;
			
			if (ie_tipo_saldo_w = 'N') then
				cd_operacao_estoque_w := cd_operacao_estoque_p;
			
				select	coalesce(max(cd_operacao_correspondente),0)
				into STRICT	cd_operacao_correspondente_w
				from	operacao_estoque
				where	cd_operacao_estoque = cd_operacao_estoque_p;

				qt_estoque_w := obter_saldo_estoque(cd_estabelecimento_p, cd_material_w, cd_local_origem_w, PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0), qt_estoque_w);
			elsif (ie_tipo_saldo_w = 'C')then
			begin
				select	coalesce(sum(qt_estoque),0)
				into STRICT	qt_estoque_w
				from	fornecedor_mat_consignado
				where	cd_estabelecimento	= cd_estabelecimento_p
				and	cd_local_estoque		= cd_local_origem_w
				and	cd_fornecedor			= cd_fornec_consignado_w
				and	cd_material				= cd_material_w
				and	dt_mesano_referencia	= trunc(clock_timestamp(),'mm');	

				select	cd_operacao_transf_setor_consi
				into STRICT	cd_operacao_estoque_w
				from	parametro_estoque
				where	cd_estabelecimento = cd_estabelecimento_p;
				
				select	cd_operacao_correspondente
				into STRICT	cd_operacao_correspondente_w
				from	operacao_estoque
				where	cd_operacao_estoque  = cd_operacao_estoque_w;
			end;
			end if;

			if ((ie_tipo_saldo_w = 'N') or (ie_tipo_saldo_w = 'C'))then
			begin
				if (qt_diferenca_w > 0)then
					qt_material_w := qt_diferenca_w;
				end if;
										
				if (qt_estoque_w >= qt_material_w)then
				begin
					qt_diferenca_w := 0;
					ie_continua    := 'N';
					
					if (ie_tipo_saldo_w = 'N')then
						qt_baixado_proprio_w := qt_baixado_proprio_w + qt_material_w;
					else									
						qt_baixado_consignado_w := qt_baixado_consignado_w + qt_material_w;
					end if;									
				end;
				else
				begin
					qt_diferenca_w := qt_material_w - qt_estoque_w;
					qt_material_w  := qt_estoque_w;
					ie_continua    := 'S';
					
					if (ie_tipo_saldo_w = 'N')then
						qt_baixado_proprio_w := qt_baixado_proprio_w + qt_material_w;
					else									
						qt_baixado_consignado_w := qt_baixado_consignado_w + qt_material_w;
					end if;
				end;
				end if;
			end;
			else
			begin
				qt_diferenca_w := 0;
				ie_continua    := 'N';
			end;
			end if;
		else
		begin
			qt_diferenca_w := 0;
			ie_continua    := 'N';
		
			if (ie_consignado_w = '1') or (ie_consignado_w = '2' and (cd_fornec_consignado_w IS NOT NULL AND cd_fornec_consignado_w::text <> '')) then
				select	coalesce(max(cd_operacao_transf_setor_consi), 0)
				into STRICT	cd_operacao_estoque_w
				from	parametro_estoque
				where	cd_estabelecimento = cd_estabelecimento_p;
				
				select	coalesce(max(cd_operacao_correspondente),0)
				into STRICT	cd_operacao_correspondente_w
				from	operacao_estoque
				where	cd_operacao_estoque  = cd_operacao_estoque_w;
			else
				cd_operacao_estoque_w := cd_operacao_estoque_p;
			
				select	coalesce(max(cd_operacao_correspondente),0)
				into STRICT	cd_operacao_correspondente_w
				from	operacao_estoque
				where	cd_operacao_estoque = cd_operacao_estoque_p;
			end if;
		end;
		end if;
			
		insert into movimento_estoque(
			nr_movimento_estoque,		cd_estabelecimento,
			cd_local_estoque,		dt_movimento_estoque,
			cd_operacao_estoque, 		cd_acao,
			cd_material,	 		dt_mesano_referencia,
			qt_movimento,	 		dt_atualizacao,
			nm_usuario,	 		ie_origem_documento,
			nr_documento,	 		nr_sequencia_item_docto,
			cd_cgc_emitente,		cd_serie_nf,
			nr_sequencia_documento,		vl_movimento,
			cd_unidade_medida_estoque,	cd_procedimento,
			cd_setor_atendimento, 		cd_conta,
			dt_contabil,	 		cd_lote_fabricacao,
			dt_validade,			qt_estoque,
			dt_processo,	 		cd_local_estoque_destino,
			cd_centro_custo,		cd_unidade_med_mov,
			nr_movimento_estoque_corresp,	cd_conta_contabil,
			cd_material_estoque,		ie_origem_proced,
			cd_fornecedor,	 		nr_lote_contabil,
			nr_seq_tab_orig,		nr_seq_lote_fornec)
				values (
				nr_movimento_estoque_w,		cd_estabelecimento_p,
				cd_local_origem_w,		clock_timestamp(),
				coalesce(cd_operacao_estoque_w,cd_operacao_estoque_p),		'1',
				cd_material_w,			dt_mesano_referencia_w,
				qt_material_w,			clock_timestamp(),
				nm_usuario_p,			'2',
				to_char(nr_seq_kit_estoque_p),	nr_sequencia_comp_w,
				null,				null,
				nr_seq_kit_estoque_p,		null,
				cd_unidade_medida_consumo_w,	null,
				cd_setor_atendimento_p,		null,
				null,				ds_lote_w,
				dt_validade_w,			qt_material_w,
				null,				cd_local_destino_p,
				null,				cd_unidade_medida_consumo_w,
				null,				null,
				cd_material_estoque_w,		null,
				cd_fornec_consignado_w,				null,
				nr_sequencia_comp_w,		CASE WHEN nr_seq_lote_w=0 THEN  null  ELSE nr_seq_lote_w END );

		if (cd_operacao_correspondente_w > 0) then
			begin

			select	nextval('movimento_estoque_seq')
			into STRICT	nr_movimento_estoque_ww
			;

			insert into movimento_estoque(
				nr_movimento_estoque,		cd_estabelecimento,
				cd_local_estoque,		dt_movimento_estoque,
				cd_operacao_estoque, 		cd_acao,
				cd_material,	 		dt_mesano_referencia,
				qt_movimento,	 		dt_atualizacao,
				nm_usuario,	 		ie_origem_documento,
				nr_documento,	 		nr_sequencia_item_docto,
				cd_cgc_emitente,		cd_serie_nf,
				nr_sequencia_documento,		vl_movimento,
				cd_unidade_medida_estoque,	cd_procedimento,
				cd_setor_atendimento, 		cd_conta,
				dt_contabil,	 		cd_lote_fabricacao,
				dt_validade,			qt_estoque,
				dt_processo,	 		cd_local_estoque_destino,
				cd_centro_custo,		cd_unidade_med_mov,
				nr_movimento_estoque_corresp,	cd_conta_contabil,
				cd_material_estoque,		ie_origem_proced,
				cd_fornecedor,	 		nr_lote_contabil,
				nr_seq_tab_orig,		nr_seq_lote_fornec)
					values (
					nr_movimento_estoque_ww,	cd_estabelecimento_p,
					cd_local_destino_p,		clock_timestamp(),
					cd_operacao_correspondente_w,	'1',
					cd_material_w,			dt_mesano_referencia_w,
					qt_material_w,			clock_timestamp(),
					nm_usuario_p,			'2',
					to_char(nr_seq_kit_estoque_p),	nr_sequencia_comp_w,
					null,				null,
					nr_seq_kit_estoque_p,		null,
					cd_unidade_medida_consumo_w,	null,
					cd_setor_atendimento_p,		null,
					null,				ds_lote_w,
					dt_validade_w,			qt_material_w,
					null,				cd_local_origem_w,
					null,				cd_unidade_medida_consumo_w,
					nr_movimento_estoque_w,		null,
					cd_material_estoque_w,		null,
					cd_fornec_consignado_w,				null,
					nr_sequencia_comp_w,		CASE WHEN nr_seq_lote_w=0 THEN  null  ELSE nr_seq_lote_w END );
			end;
		end if;
		
		
		if (((qt_diferenca_w > 0) and (qt_material_baixar = (qt_baixado_consignado_w + qt_baixado_proprio_w))) or (qt_diferenca_w = 0) or (ie_continua = 'N') and (ie_consignado_w = '2' AND nr_seq_regra_w > 0))then
		begin
			qt_diferenca_w := 0;
			ie_continua := 'N';
		end;
		elsif (ie_consignado_w = '2' AND nr_seq_regra_w > 0)then
		begin
			ie_continua := 'S';
			qt_material_w := qt_diferenca_w;
		end;
		else
			ie_continua := 'N';
			qt_diferenca_w := 0;
		end if;
	end;												
	end loop;
	end;
end loop;
close c01;

select	nextval('kit_estoque_log_transf_seq')
into STRICT	nr_seq_log_w
;

insert into kit_estoque_log_transf(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	nr_seq_kit_estoque,
	nr_seq_reg_kit,
	cd_local_origem,
	cd_local_destino) values (
		nr_seq_log_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_kit_estoque_p,
		nr_seq_reg_kit_p,
		cd_local_origem_w,
		cd_local_destino_p);

update	kit_estoque
set	cd_local_estoque = cd_local_destino_p
where	nr_sequencia = nr_seq_kit_estoque_p;

commit;
		
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_transfere_kit_mat_local ( nr_seq_kit_estoque_p bigint, nr_seq_reg_kit_p bigint, cd_local_destino_p bigint, cd_operacao_estoque_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

