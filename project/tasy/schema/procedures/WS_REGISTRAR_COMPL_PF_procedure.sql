-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ws_registrar_compl_pf (cd_pessoa_fisica_p text, ie_tipo_complemento_p bigint, nm_nome_p text, nr_ddd_celular_p text, nr_telefone_celular_p text, cd_cep_p text, ds_endereco_p text, nr_numero_p text, ds_bairro_p text, ds_municipio_p text, ds_email_p text, cd_municipio_ibge_p bigint, sg_estado_p text, nm_usuario_p text, cd_erro_p INOUT text, ds_erro_p INOUT text ) AS $body$
DECLARE


/*
0 - SUCESSO
1 - Dados não informados
	1.1 - Paciente não informado
	1.2 - Complemento não informado
2 - Dados inconsistentes
	2.1 - Paciente não cadastrado
3 - Erro ao inserir os complemento de pessoa física
*/
ie_paciente_existe_w	varchar(1);
nr_sequencia_w		compl_pessoa_fisica.nr_sequencia%type;


BEGIN

cd_erro_p	:= 0;

if (coalesce(cd_pessoa_fisica_p::text, '') = '') then
	cd_erro_p	:= 1.1;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278061,null);
elsif (coalesce(ie_tipo_complemento_p::text, '') = '') then
	cd_erro_p	:= 1.2;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278761,null);
end if;

if (cd_erro_p = 0) then

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_paciente_existe_w
	from 	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;

	if (ie_paciente_existe_w = 'N') then
		cd_erro_p	:= 2.1;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278069,null);
	end if;

	if (cd_erro_p = 0) then

		begin

		select	max(a.nr_sequencia)
		into STRICT	nr_sequencia_w
		from	compl_pessoa_fisica a
		where	a.cd_pessoa_fisica = cd_pessoa_fisica_p
		and		a.ie_tipo_complemento = ie_tipo_complemento_p;

		if (coalesce(nr_sequencia_w::text, '') = '') then

			select	coalesce(max(a.nr_sequencia),0)+1
			into STRICT	nr_sequencia_w
			from	compl_pessoa_fisica a
			where	a.cd_pessoa_fisica = cd_pessoa_fisica_p;

			insert into compl_pessoa_fisica(	nr_sequencia,
							cd_pessoa_fisica,
							ie_tipo_complemento,
							nm_contato,
							nr_ddd_celular,
							nr_telefone_celular,
							cd_cep,
							ds_endereco,
							nr_endereco,
							ds_bairro,
							ds_municipio,
							ds_email,
							cd_municipio_ibge,
							sg_estado,
							dt_atualizacao,
							dt_atualizacao_nrec,
							nm_usuario,
							nm_usuario_nrec)
			values (nr_sequencia_w,
							cd_pessoa_fisica_p,
							ie_tipo_complemento_p,
							nm_nome_p,
							nr_ddd_celular_p,
							nr_telefone_celular_p,
							cd_cep_p,
							ds_endereco_p,
							nr_numero_p,
							ds_bairro_p,
							ds_municipio_p,
							ds_email_p,
							cd_municipio_ibge_p,
							sg_estado_p,
							clock_timestamp(),
							clock_timestamp(),
							nm_usuario_p,
							nm_usuario_p
							);
		else

			update	compl_pessoa_fisica
			set	nm_contato		= nm_nome_p,
				nr_ddd_celular		= nr_ddd_celular_p,
				nr_telefone_celular	= nr_telefone_celular_p,
				cd_cep			= cd_cep_p,
				ds_endereco		= ds_endereco_p,
				nr_endereco		= nr_numero_p,
				ds_bairro		= ds_bairro_p,
				ds_municipio		= ds_municipio_p,
				ds_email		= ds_email_p,
				cd_municipio_ibge	= cd_municipio_ibge_p,
				sg_estado		= sg_estado_p,
				dt_atualizacao		= clock_timestamp(),
				dt_atualizacao_nrec	= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				nm_usuario_nrec		= nm_usuario_p
			where	cd_pessoa_fisica	= cd_pessoa_fisica_p
			and	ie_tipo_complemento	= ie_tipo_complemento_p;

		end if;

		commit;

		exception
		when others then
			cd_erro_p	:= 3;
			ds_erro_p	:= substr(sqlerrm,1,2000);
		end;

	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ws_registrar_compl_pf (cd_pessoa_fisica_p text, ie_tipo_complemento_p bigint, nm_nome_p text, nr_ddd_celular_p text, nr_telefone_celular_p text, cd_cep_p text, ds_endereco_p text, nr_numero_p text, ds_bairro_p text, ds_municipio_p text, ds_email_p text, cd_municipio_ibge_p bigint, sg_estado_p text, nm_usuario_p text, cd_erro_p INOUT text, ds_erro_p INOUT text ) FROM PUBLIC;

