-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_gerar_transf_agendamento (nr_seq_tranferencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


--variaveis da transferencia
dt_inicial_w		timestamp;
dt_final_w		timestamp;
cd_agenda_origem_w	mprev_transferencia_agenda.cd_agenda_origem%type;
cd_agenda_destino_w	mprev_transferencia_agenda.cd_agenda_destino%type;

nr_conflito_w		bigint;

--variavel com a sequencia da agendamento
nr_sequencia_agend_w	mprev_agendamento.nr_sequencia%type;
dt_agenda_w		mprev_agendamento.dt_agenda%type;
nr_minuto_duracao_w	mprev_agendamento.nr_minuto_duracao%type;
qt_registros_w		bigint;

nr_seq_transferencia_w	mprev_transf_agenda_item.nr_sequencia%type;

--dados do agendamento de origem
C01 CURSOR FOR
	SELECT 	nr_sequencia,
		dt_agenda,
		nr_minuto_duracao
	from	mprev_agendamento
	where	cd_agenda = cd_agenda_origem_w
	and (ie_status_agenda <> 'C' or coalesce(ie_status_agenda::text, '') = '')
	and	coalesce(dt_confirmacao::text, '') = ''
	and	dt_agenda between inicio_dia(dt_inicial_w) and fim_dia(dt_final_w);

--dados do agendamento conflitante
C02 CURSOR FOR
	SELECT 	nr_sequencia
	from 	mprev_agendamento
	where 	cd_agenda = cd_agenda_destino_w
	and (ie_status_agenda <> 'C' or coalesce(ie_status_agenda::text, '') = '')
	and	((dt_agenda between dt_agenda_w and dt_agenda_w + (nr_minuto_duracao_w/1440) - 1/86400) or
		(dt_agenda + (nr_minuto_duracao/1440) - 1/86400 /* Considerar último segundo, pois senao vai dar conflito indevido*/
		between dt_agenda_w and dt_agenda_w + (nr_minuto_duracao_w/1440) - 1/86400)
		);


BEGIN
if (nr_seq_tranferencia_p IS NOT NULL AND nr_seq_tranferencia_p::text <> '') then

	--capta os dados da transferencia
	select 	dt_inicial,
		dt_final,
		cd_agenda_origem,
		cd_agenda_destino
	into STRICT	dt_inicial_w,
		dt_final_w,
		cd_agenda_origem_w,
		cd_agenda_destino_w
	from   	mprev_transferencia_agenda
	where	nr_sequencia = nr_seq_tranferencia_p;

	--limpa os valores para poder re-inserir
	delete FROM mprev_transf_agenda_item where nr_seq_transferencia = nr_seq_tranferencia_p;

	-- Atualiza a tranferêcia para status "Pendente".
	update	mprev_transferencia_agenda a
	set	a.ie_status_transferencia = 'P'
	where	a.nr_sequencia = nr_seq_tranferencia_p;

--preenche com os dados do agendamento origem
open C01;
loop
fetch C01 into
	nr_sequencia_agend_w,
	dt_agenda_w,
	nr_minuto_duracao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		select	nextval('mprev_transf_agenda_item_seq')
		into STRICT	nr_seq_transferencia_w
		;

		insert into mprev_transf_agenda_item(nr_sequencia,
			nr_seq_transferencia,
			nr_seq_agendamento_origem,
			ie_status_transferencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec)
		values (nr_seq_transferencia_w,
			nr_seq_tranferencia_p,
			nr_sequencia_agend_w,
			'P',
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p);

		open C02;
		loop
		fetch C02 into
			nr_conflito_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			insert into mprev_transf_agenda_conf(nr_sequencia,
				nr_seq_transf_item,
				nr_seq_agendamento_dest,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (nextval('mprev_transf_agenda_conf_seq'),
				nr_seq_transferencia_w,
				nr_conflito_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p);

			-- Atualiza a tranferêcia para status "Conflito".
			update	mprev_transferencia_agenda a
			set	a.ie_status_transferencia = 'C'
			where	a.nr_sequencia = nr_seq_tranferencia_p;

			--Atualiza os agendamentos para transferencia para Conflito quando o horário para qual será trnaferido conter agendamento.
			update	mprev_transf_agenda_item a
			set	a.ie_status_transferencia = 'C'
			where	a.nr_sequencia = nr_seq_transferencia_w;

			end;
		end loop;
		close C02;
	end;
end loop;
close C01;
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_gerar_transf_agendamento (nr_seq_tranferencia_p bigint, nm_usuario_p text) FROM PUBLIC;

