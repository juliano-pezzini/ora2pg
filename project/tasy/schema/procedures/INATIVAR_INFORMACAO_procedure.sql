-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inativar_informacao ( nm_tabela_p text, nm_chave_p text, qt_chave_p bigint, ds_justificativa_p text, nm_usuario_p text) AS $body$
DECLARE


ds_sep_bv_w		varchar(10);
ds_comando_w		varchar(300);
nr_atendimento_w	bigint;
qt_isol_w		integer;
ie_libera_isol_w	varchar(2);
ds_observacao_w		varchar(255);
nr_sequencia_w		bigint;
ie_tipo_w		varchar(10);
nr_interno_conta_w	bigint;
cd_motivo_exc_conta_w	bigint;
cd_estabelecimento_w	bigint;
qt_ie_situacao_w		bigint;
ds_parametros_w		varchar(4000);
QT_TAMANHO_w		bigint;
ds_justificativa_w	varchar(4000)	:= ds_justificativa_p;
qt_worklist_w		varchar(1);
qt_regulacao_w		varchar(1);
cd_pessoa_fisica_w		wl_worklist.cd_pessoa_fisica%type;
ie_escala_w				wl_worklist.ie_escala%type;
nr_seq_regra_w			wl_worklist.nr_seq_regra%type;
ie_tipo_diagnostico_w	wl_worklist.ie_tipo_diagnostico%type;
nr_seq_classif_diag_w	wl_worklist.nr_seq_classif_diag%type;
cd_doenca_w				diagnostico_doenca.cd_doenca%type;
dt_diagnostico_w		diagnostico_doenca.dt_diagnostico%type;
ie_gerar_aprovacao_w smallint;

c01 CURSOR FOR
	SELECT	'P' ie_tipo,
		a.nr_sequencia,
		a.nr_interno_conta
	from	procedimento_paciente a,
		conta_paciente b
	where	a.nr_interno_conta 	= b.nr_interno_conta
	and	b.nr_Atendimento	= nr_atendimento_w
	and	b.ie_status_acerto	= 1
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.ds_observacao = 'PEP PROC:'||qt_chave_p;




BEGIN


select	coalesce(max(QT_TAMANHO),0)
into STRICT	QT_TAMANHO_w
from	tabela_atributo
where	nm_tabela	= nm_tabela_p
and	nm_atributo	= 'DS_JUSTIFICATIVA';

if (QT_TAMANHO_w	> 0) then
	ds_justificativa_w	:= substr(ds_justificativa_w,1,QT_TAMANHO_w);
end if;


select 	obter_separador_bv
into STRICT	ds_sep_bv_w
;

if (QT_TAMANHO_w	> 0) then
	ds_parametros_w	:= 'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								   'nm_usuario='|| nm_usuario_p || ds_sep_bv_w ||
								   'ds_justificativa='||ds_justificativa_w|| ds_sep_bv_w;
else
	ds_parametros_w	:= 'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								   'nm_usuario='|| nm_usuario_p || ds_sep_bv_w;
end if;


ie_libera_isol_w := obter_param_usuario(281, 963, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_libera_isol_w);

if (nm_tabela_p = 'CIH_HIGIENIZACAO_MAOS') then
	ds_comando_w :=	' update ' || nm_tabela_p ||
		' set dt_inativacao = sysdate, ' ||
		' nm_usuario_inativo = :nm_usuario ' ||
		' where ' || nm_chave_p || ' = :qt_chave ';
	ds_parametros_w	:= 'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w ||
			    'nm_usuario='|| nm_usuario_p || ds_sep_bv_w;
elsif (QT_TAMANHO_w =  0) then

        ds_comando_w :=	' update ' || nm_tabela_p ||
			' set dt_inativacao = sysdate, ' ||
			' ie_situacao = ' || '''I''' || ',' ||
			' nm_usuario_inativacao = :nm_usuario ' ||
			' where ' || nm_chave_p || ' = :qt_chave ';

elsif (nm_tabela_p = 'POSICAO_CIRURGIA') or (nm_tabela_p = 'CIRURGIA_ITEM_CONTROLE') or (nm_tabela_p = 'AVAL_PRE_ANESTESICA') then
	ds_comando_w :=	' update ' || nm_tabela_p ||
			' set ie_situacao = ' || '''I''' || ',' ||
			' dt_inativacao = sysdate, ' ||
			' nm_usuario_inativacao = :nm_usuario, ' ||
			' ds_justificativa_inativacao = :ds_justificativa ' ||
			' where ' || nm_chave_p || ' = :qt_chave ';
	ds_parametros_w	:= 'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w ||
				 'nm_usuario='|| nm_usuario_p || ds_sep_bv_w ||
				 'ds_justificativa='||ds_justificativa_w|| ds_sep_bv_w;
elsif (nm_tabela_p = 'PACIENTE_JUSTIFICATIVA') then
	ds_comando_w :=	' update ' || nm_tabela_p ||
			' set ie_situacao = ' || '''I''' || ',' ||
			' dt_inativacao = sysdate, ' ||
			' nm_usuario_inativacao = :nm_usuario, ' ||
			' ds_justificativa_inativacao = :ds_justificativa ' ||
			' where ' || nm_chave_p || ' = :qt_chave ';
	ds_parametros_w	:= 'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w ||
								   'nm_usuario='|| nm_usuario_p || ds_sep_bv_w ||
								   'ds_justificativa='||ds_justificativa_w|| ds_sep_bv_w;


elsif (nm_tabela_p = 'CIH_PAC_FAT_RISCO') then
	ds_comando_w :=	' update ' || nm_tabela_p ||
			' set dt_inativacao = sysdate, ' ||
			' nm_usuario_inativacao = :nm_usuario, ' ||
			' ds_justificativa = :ds_justificativa ' ||
			' where ' || nm_chave_p || ' = :qt_chave ';

elsif (nm_tabela_p = 'CIRURGIA_PARTICIPANTE') then
	ds_comando_w :=	' update ' || nm_tabela_p ||
            ' set ie_situacao = ' || '''I''' || ',' ||
			' dt_inativacao = sysdate, ' ||
			' nm_usuario_inativacao = :nm_usuario, ' ||
			' ds_justificativa = :ds_justificativa ' ||
			' where ' || nm_chave_p || ' = :qt_chave ';

elsif (nm_tabela_p = 'EV_EVENTO_PACIENTE')   then
	ds_comando_w :=	' update ' || nm_tabela_p ||
				' set ie_situacao = ' || '''I'''   ||
				' where ' || nm_chave_p || ' = :qt_chave ';
	ds_parametros_w	:= 'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w;
elsif (nm_tabela_p = 'TX_ENCAMINHAMENTO')   then
	ds_comando_w :=	' update ' || nm_tabela_p ||
		' set dt_inativacao = sysdate, ' ||
		' nm_usuario_inativacao = :nm_usuario ' ||
		' where ' || nm_chave_p || ' = :qt_chave ';
	ds_parametros_w	:= 'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w ||
			    'nm_usuario='|| nm_usuario_p || ds_sep_bv_w;
elsif (nm_tabela_p = 'TX_LIBERACAO_LISTA')   then
	ds_comando_w :=	' update ' || nm_tabela_p ||
		' set dt_inativacao = sysdate, ' ||' ie_situacao = ' || '''I'''   || ','||
		' nm_usuario_inativacao = :nm_usuario ' ||
		' where ' || nm_chave_p || ' = :qt_chave ';
	ds_parametros_w	:= 'qt_chave='|| to_char(qt_chave_p) 	|| ds_sep_bv_w ||
			    'nm_usuario='|| nm_usuario_p || ds_sep_bv_w;
elsif (nm_tabela_p = 'AGENDA_CONS_HIST')  then
	ds_comando_w :=	' update ' || nm_tabela_p ||
			' set ie_situacao = ' || '''I''' || ',' ||
			' dt_inativacao = sysdate, ' ||
			' nm_usuario_inativacao = :nm_usuario ' ||
			' where ' || nm_chave_p || ' = :qt_chave ';
elsif (upper(nm_tabela_p)	= 'ATEND_ESCUTA_INICIAL') then

	ds_comando_w :=	' update ' || nm_tabela_p ||
			' set ie_situacao = ' || '''I''' || ',' ||
			' dt_inativacao = sysdate, ' ||
			' ds_justificativa = :ds_justificativa, ' ||
			' nm_usuario_inativacao = :nm_usuario ' ||
			' where ' || nm_chave_p || ' = :qt_chave ';

	CALL Liberar_inativar_acolhimento(qt_chave_p, nm_usuario_p, 'I',ds_justificativa_p);
elsif (nm_tabela_p = 'MPREV_REGRA_CUBO')  then
	ds_comando_w :=	' update ' || nm_tabela_p ||
			' set dt_inativacao = sysdate, ' ||
			' nm_usuario_inativacao = :nm_usuario ' ||
			' where ' || nm_chave_p || ' = :qt_chave ';

elsif (upper(nm_tabela_p)	= 'DIRETRIZ_ATENDIMENTO') then
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_inativacao = sysdate, ' ||
				' ie_status = :ie_status, ' ||
                ' ie_situacao = ' || '''I''' || ',' ||
				' ds_justificativa = :ds_justificativa, ' ||
				' dt_atualizacao = sysdate, ' ||
				' nm_usuario_inativacao = :nm_usuario, ' ||
				' nm_usuario = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_chave ';

	ds_parametros_w := 'ie_status='|| 'I' || ds_sep_bv_w ||
				'ds_justificativa='|| ds_justificativa_w || ds_sep_bv_w ||
				'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w ||
				'nm_usuario='|| nm_usuario_p || ds_sep_bv_w;

elsif (upper(nm_tabela_p)	= 'DOCUMENTO_FARMACIA') then
	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_inativacao = sysdate, ' ||
				' ie_situacao = ' || '''I''' || ',' ||
				' dt_atualizacao = sysdate, ' ||
				' nm_usuario_inativacao = :nm_usuario, ' ||
				' nm_usuario = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_chave ';

	ds_parametros_w := 	'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w ||
				'nm_usuario='|| nm_usuario_p || ds_sep_bv_w;

elsif (upper(nm_tabela_p)	= 'OFT_ACUIDADE_VISUAL') or (upper(nm_tabela_p)	= 'OFT_DNP') or (upper(nm_tabela_p)	= 'OFT_ANGIO_RETINO') or (upper(nm_tabela_p)	= 'OFT_BIOMICROSCOPIA') or (upper(nm_tabela_p)	= 'OFT_AUTO_REFRACAO') or (upper(nm_tabela_p)	= 'OFT_OLHO_SECO') or (upper(nm_tabela_p)	= 'OFT_CAMPIMETRIA') or (upper(nm_tabela_p)	= 'OFT_CORRECAO_ATUAL') or (upper(nm_tabela_p)	= 'OFT_DALTONISMO') or (upper(nm_tabela_p)	= 'OFT_FOTOCOAGULACAO_LASER') or (upper(nm_tabela_p)	= 'OFT_FUNDOSCOPIA') or (upper(nm_tabela_p)	= 'OFT_POTENCIAL_ACUIDADE') or (upper(nm_tabela_p)	= 'OFT_GONIOSCOPIA') or (upper(nm_tabela_p)	= 'OFT_IRIDECTOMIA') or (upper(nm_tabela_p)	= 'OFT_MICROSCOPIA_ESPECULAR') or (upper(nm_tabela_p)	= 'OFT_MOTILIDADE_OCULAR') or (upper(nm_tabela_p)	= 'OFT_PAQUIMETRIA') or (upper(nm_tabela_p)	= 'OFT_BIOMETRIA') or (upper(nm_tabela_p)	= 'OFT_EXAME_EXTERNO') or (upper(nm_tabela_p)	= 'OFT_TONOMETRIA') or (upper(nm_tabela_p)	= 'OFT_CAPSULOTOMIA') or (upper(nm_tabela_p)	= 'OFT_CERASTOCOPIA') or (upper(nm_tabela_p)	= 'OFT_TOMOGRAFIA_OLHO') or (upper(nm_tabela_p)	= 'OFT_PUPILOMETRIA') or (upper(nm_tabela_p)	= 'OFT_CURVA_TENCIONAL') or (upper(nm_tabela_p)	= 'OFT_TOPOGRAFIA_CORNEANA') or (upper(nm_tabela_p)	= 'OFT_OCT') or (upper(nm_tabela_p)	= 'OFT_REFRACAO') then

	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_inativacao = sysdate, ' ||
				' ie_situacao = ' || '''I''' || ',' ||
				' nm_usuario_inativacao = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_chave ';

	ds_parametros_w := 'nm_usuario='|| nm_usuario_p || ds_sep_bv_w ||
				'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w;

elsif (upper(nm_tabela_p)	= 'PRE_PESSOA_JURIDICA') then

	ds_comando_w	:=	' update ' || nm_tabela_p ||
				' set dt_inativacao = sysdate, ' ||
				' ie_situacao = ' || '''I''' || ',' ||
				' nm_usuario_inativacao = :nm_usuario ' ||
				' where ' || nm_chave_p || ' = :qt_chave ';

	ds_parametros_w := 'nm_usuario='|| nm_usuario_p || ds_sep_bv_w ||
				'qt_chave='|| to_char(qt_chave_p) || ds_sep_bv_w;

else
	select	count(1)
	into STRICT	qt_ie_situacao_w
	from	user_tab_columns a
	where	a.table_name = nm_tabela_p
	and		a.column_name = 'IE_SITUACAO';

	if (qt_ie_situacao_w = 0) then
		ds_comando_w :=	' update ' || nm_tabela_p ||
				' set dt_inativacao = sysdate, ' ||
				' nm_usuario_inativacao = :nm_usuario, ' ||
				' ds_justificativa = :ds_justificativa ' ||
				' where ' || nm_chave_p || ' = :qt_chave ';
	else
		ds_comando_w :=	' update ' || nm_tabela_p ||
				' set ie_situacao = ' || '''I''' || ',' ||
				' dt_inativacao = sysdate, ' ||
				' nm_usuario_inativacao = :nm_usuario, ' ||
				' ds_justificativa = :ds_justificativa ' ||
				' where ' || nm_chave_p || ' = :qt_chave ';
	end if;
end if;

if (ie_libera_isol_w in ('S','I')) and (nm_tabela_p = 'ATENDIMENTO_PRECAUCAO') then

	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	atendimento_precaucao
	where	nr_sequencia = qt_chave_p;

	select	count(*)
	into STRICT	qt_isol_w
	from	atendimento_precaucao a
	where	a.nr_atendimento = nr_atendimento_w
	and	coalesce(a.dt_final_precaucao::text, '') = ''
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	coalesce(a.dt_inativacao::text, '') = ''
	and	((coalesce(a.dt_termino::text, '') = '') or (clock_timestamp() between coalesce(a.dt_inicio,clock_timestamp() - interval '1 days') and a.dt_termino))
	and	a.nr_sequencia	<> qt_chave_p;

	CALL gerar_motivo_isolamento(nr_atendimento_w,0,nm_usuario_p,'T',null,null,null,null,null,null,qt_chave_p);

	if (qt_isol_w = 0) then
		update	atendimento_paciente
		set	ie_paciente_isolado	= 'N'
		where	nr_atendimento = nr_atendimento_w;

		if (ie_libera_isol_w = 'I') then
			update	atend_paciente_hist
			set		dt_inativacao = clock_timestamp(),
					nm_usuario_inativacao = nm_usuario_p
			where	nr_sequencia = (SELECT	max(nr_sequencia)
									from	atend_paciente_hist
									where	nr_atendimento = nr_atendimento_w
									and		(dt_final IS NOT NULL AND dt_final::text <> '')
									and		ie_evento = 'I');

		end if;
	end if;
elsif (nm_tabela_p = 'PACIENTE_PFLEGEGRAD') then

	update 	paciente_pflegegrad
	set 	dt_inativacao = clock_timestamp(),
		nm_usuario_inativacao = nm_usuario_p,
		ds_justificativa = ds_justificativa_w,
		ie_situacao = 'I'
	where 	nr_sequencia = qt_chave_p;

	update 	procedimento_pac_medico
	set	dt_inativacao = clock_timestamp(),
		nm_usuario_inativacao = nm_usuario_p,
		ds_justificativa = ds_justificativa_w,
		ie_situacao = 'I'
	where 	nr_seq_pflegegrad = qt_chave_p;

	select	max(a.nr_interno_conta),
			max(a.nr_sequencia),
			max(b.nr_atendimento)
	into STRICT	nr_interno_conta_w,
			nr_sequencia_w,
			nr_atendimento_w
	from	procedimento_paciente a,
			procedimento_pac_medico b
	where	b.nr_seq_propaci	= a.nr_sequencia
	and		b.nr_seq_pflegegrad	= qt_chave_p;

	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_w;

	select	max(cd_motivo_exc_conta)
	into STRICT	cd_motivo_exc_conta_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		CALL excluir_matproc_conta(nr_sequencia_w,nr_interno_conta_w,cd_motivo_exc_conta_w, obter_desc_expressao(726883), 'P', wheb_usuario_pck.get_nm_usuario);
	end if;

elsif (nm_tabela_p	= 'PROC_PAC_DESCRICAO') then

	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	PROC_PAC_DESCRICAO
	where	nr_sequencia = qt_chave_p;

	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_w;

	select	max(cd_motivo_exc_conta)
	into STRICT	cd_motivo_exc_conta_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;

	open C01;
	loop
	fetch C01 into
		ie_tipo_w,
		nr_sequencia_w,
		nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		CALL excluir_matproc_conta(nr_sequencia_w,nr_interno_conta_w,cd_motivo_exc_conta_w, obter_desc_expressao(726883), ie_tipo_w,nm_usuario_p);   --'Inativacao Proc PEP'
		end;
	end loop;
	close C01;

elsif (nm_tabela_p	= 'PROCEDIMENTO_PAC_MEDICO') then

	select	max(a.nr_interno_conta),
		max(a.nr_sequencia),
		max(b.nr_atendimento)
	into STRICT	nr_interno_conta_w,
		nr_sequencia_w,
		nr_atendimento_w
	from	procedimento_paciente a,
		procedimento_pac_medico b
	where	b.nr_seq_propaci	= a.nr_sequencia
	and	b.nr_sequencia		= qt_chave_p;

	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_w;

	select	max(cd_motivo_exc_conta)
	into STRICT	cd_motivo_exc_conta_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		CALL excluir_matproc_conta(nr_sequencia_w,nr_interno_conta_w,cd_motivo_exc_conta_w, obter_desc_expressao(726883), 'P',nm_usuario_p);
	end if;

	CALL INATIVAR_DRG_EPISODIO_PACIENTE(nr_atendimento_w, qt_chave_p, upper(nm_tabela_p), nm_usuario_p, 'IN');

end if;

if (upper(nm_tabela_p)	= 'EHR_REGISTRO') then
	CALL inativar_registro_template(qt_chave_p,nm_usuario_p,ds_justificativa_p);
elsif (upper(nm_tabela_p)	= 'GPI_PROJETO_HIST') then
	CALL GPI_INATIVAR_HISTORICO(qt_chave_p,nm_usuario_p);
else
	/*Inativacao itens PEP*/

	CALL exec_sql_dinamico_bv(Wheb_mensagem_pck.get_Texto(303954), ds_comando_w, ds_parametros_w);

	delete
	from	w_jornada_pac_problema
	where	NR_SEQ_REGISTRO in (SELECT 	nr_sequencia
								from	w_jornada_pac_registro
								where	nr_seq_origem = qt_chave_p);
	commit;

	delete
	from	w_jornada_pac_registro
	where	nr_seq_origem = qt_chave_p;

	commit;
end if;


select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
into STRICT	qt_worklist_w
from	wl_worklist;

if (qt_worklist_w = 'S') then
	-- Clinical notes
	select	(CASE WHEN (max(nr_sequencia) IS NOT NULL AND (max(nr_sequencia))::text <> '') THEN 'S' ELSE 'N' END),
			max(nr_atendimento),
			max(cd_pessoa_fisica)
	into STRICT 	qt_worklist_w,
			nr_atendimento_w,
			cd_pessoa_fisica_w
	from	wl_worklist
	where	cd_evolucao = qt_chave_p;

	if (qt_worklist_w = 'S') then
		CALL wl_gerar_finalizar_tarefa('CN','R',nr_atendimento_w,cd_pessoa_fisica_w,nm_usuario_p,clock_timestamp(),'S',null,null,null,null,null,null,null,null,null,null,null,null,null,qt_chave_p);
	end if;

	-- Scores
	select	(CASE WHEN (max(nr_sequencia) IS NOT NULL AND (max(nr_sequencia))::text <> '') THEN 'S' ELSE 'N' END),
			max(nr_atendimento),
			max(cd_pessoa_fisica),
			max(ie_escala)
	into STRICT 	qt_worklist_w,
			nr_atendimento_w,
			cd_pessoa_fisica_w,
			ie_escala_w
	from	wl_worklist
	where	nr_seq_escala = qt_chave_p
	and		nm_tabela_escala = nm_tabela_p;

	if (qt_worklist_w = 'S') then
		CALL wl_gerar_finalizar_tarefa('S','R',nr_atendimento_w,cd_pessoa_fisica_w,nm_usuario_p,null,'S',null,null,null,null,null,null,ie_escala_w,null,null,null,null,null,qt_chave_p,null,null,nm_tabela_p);
	end if;

	-- Estimated discharge
	select	(CASE WHEN (max(nr_sequencia) IS NOT NULL AND (max(nr_sequencia))::text <> '') THEN 'S' ELSE 'N' END),
			max(nr_atendimento),
			max(cd_pessoa_fisica),
			max(nr_seq_regra)
	into STRICT 	qt_worklist_w,
			nr_atendimento_w,
			cd_pessoa_fisica_w,
			nr_seq_regra_w
	from	wl_worklist
	where	nr_seq_prev_alta = qt_chave_p;

	if (qt_worklist_w = 'S') then
		CALL wl_gerar_finalizar_tarefa('ED','R',nr_atendimento_w,cd_pessoa_fisica_w,nm_usuario_p,clock_timestamp(),'S',null,null,null,null,null,null,null,null,null,nr_seq_regra_w,null,null,null,null,qt_chave_p);
	end if;

	-- Diagnosis
	select	(CASE WHEN (max(nr_sequencia) IS NOT NULL AND (max(nr_sequencia))::text <> '') THEN 'S' ELSE 'N' END),
			max(nr_atendimento),
			max(cd_pessoa_fisica),
			max(ie_tipo_diagnostico),
			max(nr_seq_classif_diag)
	into STRICT 	qt_worklist_w,
			nr_atendimento_w,
			cd_pessoa_fisica_w,
			ie_tipo_diagnostico_w,
			nr_seq_classif_diag_w
	from	wl_worklist
	where	nr_seq_diagnostico = qt_chave_p;

	if (qt_worklist_w = 'S') then
		CALL wl_gerar_finalizar_tarefa('DG','R',nr_atendimento_w,cd_pessoa_fisica_w,nm_usuario_p,clock_timestamp(),'S',null,null,null,null,null,null,null,null,qt_chave_p,null,ie_tipo_diagnostico_w,null,null,null,null,null,nr_seq_classif_diag_w);
	end if;

	-- Workload
	select	(CASE WHEN (max(nr_sequencia) IS NOT NULL AND (max(nr_sequencia))::text <> '') THEN 'S' ELSE 'N' END),
			max(nr_atendimento),
			max(cd_pessoa_fisica)
	into STRICT 	qt_worklist_w,
			nr_atendimento_w,
			cd_pessoa_fisica_w
	from	wl_worklist
	where	nr_seq_sae = qt_chave_p;

	if (qt_worklist_w = 'S') then
		CALL wl_gerar_finalizar_tarefa('WO','R',nr_atendimento_w,cd_pessoa_fisica_w,nm_usuario_p,clock_timestamp(),'S',null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,qt_chave_p);
	end if;

end if;

CALL delete_assinat_inativa(nm_tabela_p,nm_chave_p,qt_chave_p);

begin
select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
into STRICT	qt_regulacao_w
from	regulacao_atend;

if ( qt_regulacao_w = 'S') then

	CALL gerar_conv_status_regulacao(qt_chave_p, nm_tabela_p, 'CA', nm_usuario_p, ds_justificativa_p);

end if;

if (upper(nm_tabela_p) in ('ESCALA_SAPS','TISS_INTERV_TERAPEUTICA_10')) then
	begin
	ie_escala_w := obter_item_escala(nm_tabela_p);
    CALL mdc_gerar_episodio_pac_escala(null, qt_chave_p, ie_escala_w, nm_usuario_p, 'S');
    end;
end if;

if (upper(nm_tabela_p) = 'DIAGNOSTICO_DOENCA') THEN

	select	max(nr_atendimento),
			max(cd_doenca),
			max(dt_diagnostico)
	into STRICT	nr_atendimento_w,
			cd_doenca_w,
			dt_diagnostico_w
	from	diagnostico_doenca
	where	nr_seq_interno	= qt_chave_p;

	CALL INATIVAR_DRG_EPISODIO_PACIENTE(nr_atendimento_w, qt_chave_p, upper(nm_tabela_p), nm_usuario_p, 'IN');

		CALL controlar_diag_pac_filho(cd_doenca_w,null,nr_atendimento_w,dt_diagnostico_w,null,nm_usuario_p,'INATIVAR','S');
end if;

select count(1)
  into STRICT ie_gerar_aprovacao_w
  from mult_aprov_funcao
 where ie_situacao = 'A'
 and cd_funcao = wheb_usuario_pck.get_cd_funcao;

if (ie_gerar_aprovacao_w > 0) then
	CALL inativar_aprovacao_documento(nm_tabela_p, nm_chave_p,qt_chave_p, nm_usuario_p);
end if;

if (upper(nm_tabela_p) = 'EVENTO_CIRURGIA_PACIENTE') THEN

CALL inativar_dependencias_evento(qt_chave_p, ds_justificativa_w, nm_usuario_p);

end if;

exception
	when others then
		qt_regulacao_w := 0;
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inativar_informacao ( nm_tabela_p text, nm_chave_p text, qt_chave_p bigint, ds_justificativa_p text, nm_usuario_p text) FROM PUBLIC;

