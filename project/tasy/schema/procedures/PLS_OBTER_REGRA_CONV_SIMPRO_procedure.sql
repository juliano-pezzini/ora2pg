-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_regra_conv_simpro ( nr_seq_material_p bigint, cd_unidade_medida_fed_p text, cd_unidade_medida_simpro_p text, dt_referencia_p timestamp, cd_estabelecimento_p bigint, ie_aplicar_conv_fed_sc_p INOUT text, qt_conversao_simpro_p INOUT bigint) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter a regra de conversão para o material que está sendo vinculado
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
	PLS_VINCULAR_MAT_UNIMED_FED_SC
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ds_unid_medida_fed_sc_w		varchar(255);
ie_regra_w			varchar(255)	:= null;
ds_unid_medida_simpro_w		varchar(255);
ie_aplicar_conv_fed_sc_w	varchar(5);
qt_conversao_simpro_w		double precision;
nr_seq_material_w		bigint;
dt_referencia_w			timestamp;

C01 CURSOR FOR
	SELECT	ie_aplicar_conv_fed_sc,
		qt_conversao_simpro,
		replace(ds_unid_medida_fed_sc, ' ', ''),
		replace(ds_unid_medida_simpro, ' ', ''),
		nr_seq_material
	from	pls_regra_mat_uni_sc_conv
	where	dt_referencia_w between trunc(dt_inicio_vigencia, 'dd') and coalesce(trunc(dt_fim_vigencia, 'dd'), dt_referencia_w)
	order by
		coalesce(nr_seq_material, 0),
		coalesce(ds_unid_medida_fed_sc, ' '),
		coalesce(ds_unid_medida_simpro, ' '),
		dt_inicio_vigencia;


BEGIN
ie_aplicar_conv_fed_sc_p	:= null;
qt_conversao_simpro_p		:= null;
dt_referencia_w			:= trunc(dt_referencia_p, 'dd');

open C01;
loop
fetch C01 into
	ie_aplicar_conv_fed_sc_w,
	qt_conversao_simpro_w,
	ds_unid_medida_fed_sc_w,
	ds_unid_medida_simpro_w,
	nr_seq_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if	(('%,' || upper(ds_unid_medida_fed_sc_w) || ',%' like '%,' || upper(cd_unidade_medida_fed_p) || ',%') or (coalesce(ds_unid_medida_fed_sc_w::text, '') = '')) then
		ie_regra_w	:= 'S';
	else
		ie_regra_w	:= 'N';
	end if;

	if	(('%,' || upper(ds_unid_medida_simpro_w) || ',%' like '%,' || upper(cd_unidade_medida_simpro_p) || ',%') or (coalesce(ds_unid_medida_simpro_w::text, '') = '')) and (ie_regra_w = 'S') then
		ie_regra_w	:= 'S';
	else
		ie_regra_w	:= 'N';
	end if;


	if	((nr_seq_material_w = nr_seq_material_p) or (coalesce(nr_seq_material_w::text, '') = '')) and (ie_regra_w = 'S') then
		ie_regra_w	:= 'S';
	else
		ie_regra_w	:= 'N';
	end if;

	if (ie_regra_w = 'S') then
		ie_aplicar_conv_fed_sc_p	:= ie_aplicar_conv_fed_sc_w;

		if (ie_aplicar_conv_fed_sc_w = 'FX') then
			qt_conversao_simpro_p	:= qt_conversao_simpro_w;
		else
			qt_conversao_simpro_p	:= null;
		end if;
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_regra_conv_simpro ( nr_seq_material_p bigint, cd_unidade_medida_fed_p text, cd_unidade_medida_simpro_p text, dt_referencia_p timestamp, cd_estabelecimento_p bigint, ie_aplicar_conv_fed_sc_p INOUT text, qt_conversao_simpro_p INOUT bigint) FROM PUBLIC;

