-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_comissao_mensal ( nr_seq_lote_p bigint, nr_seq_canal_venda_p bigint, nr_seq_comissao_p bigint, ie_canal_grupo_p text, nr_seq_regra_mens_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* ie_canal_grupo_p 
	'S' : o canal de venda faz parte de um grupo para a geração de lote de outro vendedor; 
	'N' : o canal de venda não faz parte de um grupo, o lote será gerado para ele mesmo. 
*/
 
 
dt_referencia_w			timestamp;
qt_meta_w			bigint;
vl_meta_fatur_w			double precision;

/* Campos do cursor 1 */
 
nr_seq_contrato_w		bigint;
nr_seq_mensalidade_seg_w	bigint;
nr_parcela_w			bigint;
ie_acao_contrato_w		varchar(2);
ie_tipo_pessoa_w		varchar(2);
ie_preco_w			varchar(2);
nr_seq_segurado_w		bigint;
dt_contratacao_w		timestamp;
nr_seq_plano_w			bigint;
nr_seq_tipo_comercial_w		bigint;
nr_seq_proposta_w		bigint;
ie_nascido_plano_w		varchar(1);
nr_seq_classificacao_w		bigint;
nr_titulo_w			pls_comissao_beneficiario.nr_titulo%type;
nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;
nr_seq_pagador_w		pls_mensalidade.nr_seq_pagador%type;
ie_mens_atraso_w		varchar(1);
ie_situacao_titulo_w		titulo_receber.ie_situacao%type;
dt_liquidacao_w			titulo_receber.dt_liquidacao%type;
nr_seq_vendedor_pf_w		pls_comissao_beneficiario.nr_seq_vendedor_pf%type;
nr_proposta_adesao_w		pls_segurado.nr_proposta_adesao%type;
cd_pessoa_fisica_w		pls_segurado.cd_pessoa_fisica%type;
nr_seq_motivo_inclusao_w	pls_regra_adic_mensal.nr_seq_motivo_inclusao%type;

/* Campos do cursor 2 */
 
qt_vidas_min_w			bigint;
pr_incremento_w			double precision;
qt_vidas_max_w			bigint;
vl_incremento_w			double precision;
qt_limite_max_vidas_w		bigint;
ie_preco_regra_w		varchar(2);
ie_tipo_item_mensalidade_w	varchar(50);
pr_meta_maximo_w		double precision;
nr_parcela_inicial_w		bigint;
nr_parcela_final_w		bigint;
ie_tipo_pessoa_regra_w		varchar(2);
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
pr_meta_fatur_minimo_w		double precision;
pr_meta_fatur_maximo_w		double precision;
ie_nascido_plano_regra_w	varchar(1);
nr_seq_proposta_regra_w		bigint;
nr_seq_plano_regra_w		bigint;
nr_seq_grupo_produto_regra_w	bigint;
qt_idade_inicial_regra_w	bigint;
qt_idade_final_regra_w		bigint;
nr_seq_classificacao_regra_w	bigint;
pr_limite_meta_w		double precision;

/* Campos do cursor 2 e 4 */
 
nr_seq_regra_w			bigint;
pr_meta_minimo_w		double precision;
ie_acao_contrato_regra_w	varchar(15);
ie_dt_base_ref_comissao_w	varchar(2);
nr_seq_tipo_benef_comercial_w	bigint;
qt_dias_contrato_adesao_w	bigint;
qt_idade_w			bigint;

/* Campos do cursor 3 e 7*/
 
nr_seq_benef_comissao_w		bigint;
vl_mensalidade_benef_w		double precision;
ie_tipo_item_ww			bigint;
nr_seq_vinculo_sca_w		bigint;
nr_seq_bonificacao_vinculo_w	bigint;

/* Campos do cursor 4 */
 
vl_base_meta_composta_w		double precision;
pr_limite_pagamento_base_w	double precision;
nr_parcela_inicial_meta_w	bigint;
nr_parcela_final_meta_w		bigint;
nr_seq_proposta_meta_w		bigint;
nr_seq_plano_meta_w		bigint;
nr_seq_grupo_produto_meta_w	bigint;
qt_dias_contrato_meta_w		bigint;
qt_dias_contrato_fim_meta_w	bigint;
qt_idade_inicial_meta_w		bigint;
qt_idade_final_meta_w		bigint;

/* Campos do cursor 5 */
 
ie_metodo_comissionamento_w	varchar(2);
qt_meta_regra_w			bigint;
vl_peso_w			double precision;
nr_seq_grupo_produto_w		bigint;
nr_seq_motivo_inclusao_regra_w	bigint;

/* Campos do cursor 6 */
 
nr_seq_comissao_benef_total_w	bigint;

ie_gerar_comissao_w		varchar(1);
qt_vidas_w			bigint;
pr_meta_w			double precision;
qt_vidas_incluidas_w		bigint;
vl_comissao_w			double precision;
vl_preco_segurado_w		double precision;
pr_incremento_ww		double precision;
qt_tot_vidas_w			bigint;
nr_seq_meta_w			bigint;
vl_comissionamento_w		double precision;
vl_total_comissao_w		double precision;
pr_total_peso_w			double precision;
qt_benef_comissao_w		bigint;
vl_comissao_benef_w		double precision;
vl_comissao_mens_benef_w	double precision;
vl_comissao_total_benef_w	double precision;
vl_comissao_total_w		double precision;
dt_ref_comissao_w		timestamp;
calculo_composicao_w		varchar(2);
vl_incremento_item_w		double precision;
vl_total_item_mens_w		double precision;
nr_seq_comissao_benef_w		bigint;
qt_estornos			bigint;
nr_seq_plano_item_w		bigint;
nr_seq_sca_w			bigint;
nr_seq_bonificacao_w		bigint;
pr_meta_fatur_w			double precision;
vl_mensalidade_meta_w		double precision;
ie_proporcional_w		pls_mensalidade.ie_proporcional%type;
ie_primeira_parc_integral_w	pls_contrato_pagador.ie_calc_primeira_mens%type;
dt_reajuste_w			pls_segurado_preco.dt_reajuste%type;
ie_limite_atingido_w		varchar(1);
qt_reg_repasse_w		integer;
ie_permite_rapasse_tit_abert_w	varchar(2);
qt_baixa_negociacao_w		integer;
ie_gerar_juro_mult_tit_w	varchar(1);
vl_juros_multa_w		double precision := 0;
vl_origem_w			pls_comissao_benef_item.vl_origem%type;
vl_origem_comis_w		pls_comissao_beneficiario.vl_origem%type;	
nr_seq_regra_ww			bigint;

C01 CURSOR FOR	/* Filtrando beneficiários por comissão */
 
	/* Mensalidades pagas sem atraso */
 
	SELECT	c.nr_seq_contrato, 
		b.nr_sequencia, 
		b.nr_parcela, 
		c.ie_acao_contrato, 
		CASE WHEN coalesce(e.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END , 
		d.ie_preco, 
		c.nr_sequencia, 
		c.dt_contratacao, 
		d.nr_sequencia, 
		c.nr_seq_tipo_comercial, 
		e.nr_seq_proposta, 
		coalesce(c.ie_nascido_plano, 'N'), 
		e.nr_seq_classificacao, 
		f.nr_titulo, 
		a.nr_sequencia nr_seq_mensalidade, 
		a.nr_seq_pagador, 
		'N' ie_mens_atraso, 
		f.ie_situacao ie_situacao_titulo, 
		f.dt_liquidacao, 
		c.nr_seq_vendedor_pf, 
		c.nr_proposta_adesao, 
		c.cd_pessoa_fisica, 
		c.nr_seq_motivo_inclusao 
	from	pls_mensalidade			a, 
		pls_mensalidade_segurado	b, 
		pls_segurado			c, 
		pls_plano			d, 
		pls_contrato			e, 
		titulo_receber			f 
	where	a.nr_sequencia		= b.nr_seq_mensalidade 
	and	b.nr_seq_segurado	= c.nr_sequencia 
	and	c.nr_seq_plano		= d.nr_sequencia 
	and	c.nr_seq_contrato	= e.nr_sequencia 
	and	a.nr_sequencia		= f.nr_seq_mensalidade 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	coalesce(c.nr_seq_intercambio::text, '') = '' /* Os lotes de comissão não são gerados para contratos de intercâmbio*/
 
	and	c.nr_seq_vendedor_canal = nr_seq_canal_venda_p 
	and (c.nr_seq_tipo_comercial = nr_seq_tipo_benef_comercial_w or coalesce(nr_seq_tipo_benef_comercial_w,0) = 0) 
	and	((trunc(c.dt_contratacao,'month') = trunc(dt_referencia_w,'month')) or (trunc(c.dt_liberacao,'month') = trunc(dt_referencia_w,'month'))) 
	and	((e.nr_seq_proposta = nr_seq_proposta_meta_w) or (coalesce(nr_seq_proposta_meta_w,0) = 0)) 
	and	((nr_seq_plano_meta_w = d.nr_sequencia) or (coalesce(nr_seq_plano_meta_w::text, '') = '')) 
	and	(((nr_seq_grupo_produto_meta_w IS NOT NULL AND nr_seq_grupo_produto_meta_w::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_meta_w,d.nr_sequencia) = 'S') 
	or (coalesce(nr_seq_grupo_produto_meta_w::text, '') = '')) 
	and (obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato) between coalesce(qt_dias_contrato_meta_w, obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato)) 
									and coalesce(qt_dias_contrato_fim_meta_w, obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato))) 
	and	b.qt_idade between coalesce(qt_idade_inicial_meta_w,b.qt_idade) and coalesce(qt_idade_final_meta_w,b.qt_idade) 
	
union all
 
	/* Mensalidades pagas sem atraso */
 
	SELECT	c.nr_seq_contrato, 
		b.nr_sequencia, 
		b.nr_parcela, 
		c.ie_acao_contrato, 
		CASE WHEN coalesce(e.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END , 
		d.ie_preco, 
		c.nr_sequencia, 
		c.dt_contratacao, 
		d.nr_sequencia, 
		c.nr_seq_tipo_comercial, 
		e.nr_seq_proposta, 
		coalesce(c.ie_nascido_plano, 'N'), 
		e.nr_seq_classificacao, 
		f.nr_titulo, 
		a.nr_sequencia nr_seq_mensalidade, 
		a.nr_seq_pagador, 
		'N' ie_mens_atraso, 
		f.ie_situacao ie_situacao_titulo, 
		f.dt_liquidacao, 
		g.nr_seq_vendedor_vinculado, 
		c.nr_proposta_adesao, 
		c.cd_pessoa_fisica, 
		c.nr_seq_motivo_inclusao 
	from	pls_mensalidade			a, 
		pls_mensalidade_segurado	b, 
		pls_segurado			c, 
		pls_plano			d, 
		pls_contrato			e, 
		titulo_receber			f, 
		pls_segurado_canal_compl	g 
	where	a.nr_sequencia		= b.nr_seq_mensalidade 
	and	b.nr_seq_segurado	= c.nr_sequencia 
	and	c.nr_seq_plano		= d.nr_sequencia 
	and	c.nr_seq_contrato	= e.nr_sequencia 
	and	a.nr_sequencia		= f.nr_seq_mensalidade 
	and	g.nr_seq_segurado	= c.nr_sequencia 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	coalesce(c.nr_seq_intercambio::text, '') = '' /* Os lotes de comissão não são gerados para contratos de intercâmbio*/
 
	and	g.nr_seq_vendedor_canal = nr_seq_canal_venda_p 
	and (c.nr_seq_tipo_comercial = nr_seq_tipo_benef_comercial_w or coalesce(nr_seq_tipo_benef_comercial_w,0) = 0) 
	and	((trunc(c.dt_contratacao,'month') = trunc(dt_referencia_w,'month')) or (trunc(c.dt_liberacao,'month') = trunc(dt_referencia_w,'month'))) 
	and	((e.nr_seq_proposta = nr_seq_proposta_meta_w) or (coalesce(nr_seq_proposta_meta_w,0) = 0)) 
	and	((nr_seq_plano_meta_w = d.nr_sequencia) or (coalesce(nr_seq_plano_meta_w::text, '') = '')) 
	and	(((nr_seq_grupo_produto_meta_w IS NOT NULL AND nr_seq_grupo_produto_meta_w::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_meta_w,d.nr_sequencia) = 'S') 
	or (coalesce(nr_seq_grupo_produto_meta_w::text, '') = '')) 
	and (obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato) between coalesce(qt_dias_contrato_meta_w, obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato)) 
									and coalesce(qt_dias_contrato_fim_meta_w, obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato))) 
	and	b.qt_idade between coalesce(qt_idade_inicial_meta_w,b.qt_idade) and coalesce(qt_idade_final_meta_w,b.qt_idade) 
	
union all
 
	/* Mensalidades pagas em atraso */
 
	select	c.nr_seq_contrato, 
		b.nr_sequencia, 
		b.nr_parcela, 
		c.ie_acao_contrato, 
		CASE WHEN coalesce(e.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END , 
		d.ie_preco, 
		c.nr_sequencia, 
		c.dt_contratacao, 
		d.nr_sequencia, 
		c.nr_seq_tipo_comercial, 
		e.nr_seq_proposta, 
		coalesce(c.ie_nascido_plano, 'N'), 
		e.nr_seq_classificacao, 
		f.nr_titulo, 
		a.nr_sequencia nr_seq_mensalidade, 
		a.nr_seq_pagador, 
		'S' ie_mens_atraso, 
		f.ie_situacao ie_situacao_titulo, 
		f.dt_liquidacao, 
		c.nr_seq_vendedor_pf, 
		c.nr_proposta_adesao, 
		c.cd_pessoa_fisica, 
		c.nr_seq_motivo_inclusao 
	from	pls_mensalidade			a, 
		pls_mensalidade_segurado	b, 
		pls_segurado			c, 
		pls_plano			d, 
		pls_contrato			e, 
		titulo_receber			f 
	where	a.nr_sequencia		= b.nr_seq_mensalidade 
	and	b.nr_seq_segurado	= c.nr_sequencia 
	and	c.nr_seq_plano		= d.nr_sequencia 
	and	c.nr_seq_contrato	= e.nr_sequencia 
	and	a.nr_sequencia		= f.nr_seq_mensalidade 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	coalesce(c.nr_seq_intercambio::text, '') = '' /* Os lotes de comissão não são gerados para contratos de intercâmbio*/
 
	and	c.nr_seq_vendedor_canal = nr_seq_canal_venda_p 
	and (c.nr_seq_tipo_comercial = nr_seq_tipo_benef_comercial_w or coalesce(nr_seq_tipo_benef_comercial_w,0) = 0) 
	and	not ((trunc(c.dt_contratacao,'month') = trunc(dt_referencia_w,'month')) or (trunc(c.dt_liberacao,'month') = trunc(dt_referencia_w,'month'))) 
	and	f.dt_liquidacao > coalesce(f.dt_pagamento_previsto,f.dt_vencimento) -- dt_pagamento_previsto = data de prorrogação 
	and	trunc(f.dt_liquidacao,'month') = trunc(dt_referencia_w,'month') 
	and	((e.nr_seq_proposta = nr_seq_proposta_meta_w) or (coalesce(nr_seq_proposta_meta_w,0) = 0)) 
	and	((nr_seq_plano_meta_w = d.nr_sequencia) or (coalesce(nr_seq_plano_meta_w::text, '') = '')) 
	and	(((nr_seq_grupo_produto_meta_w IS NOT NULL AND nr_seq_grupo_produto_meta_w::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_meta_w,d.nr_sequencia) = 'S') 
	or (coalesce(nr_seq_grupo_produto_meta_w::text, '') = '')) 
	and (obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato) between coalesce(qt_dias_contrato_meta_w, obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato)) 
									and coalesce(qt_dias_contrato_fim_meta_w, obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato))) 
	and	b.qt_idade between coalesce(qt_idade_inicial_meta_w,b.qt_idade) and coalesce(qt_idade_final_meta_w,b.qt_idade) 
	
union all
 
	/* Mensalidades pagas em atraso */
 
	select	c.nr_seq_contrato, 
		b.nr_sequencia, 
		b.nr_parcela, 
		c.ie_acao_contrato, 
		CASE WHEN coalesce(e.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END , 
		d.ie_preco, 
		c.nr_sequencia, 
		c.dt_contratacao, 
		d.nr_sequencia, 
		c.nr_seq_tipo_comercial, 
		e.nr_seq_proposta, 
		coalesce(c.ie_nascido_plano, 'N'), 
		e.nr_seq_classificacao, 
		f.nr_titulo, 
		a.nr_sequencia nr_seq_mensalidade, 
		a.nr_seq_pagador, 
		'S' ie_mens_atraso, 
		f.ie_situacao ie_situacao_titulo, 
		f.dt_liquidacao, 
		g.nr_seq_vendedor_vinculado, 
		c.nr_proposta_adesao, 
		c.cd_pessoa_fisica, 
		c.nr_seq_motivo_inclusao 
	from	pls_mensalidade			a, 
		pls_mensalidade_segurado	b, 
		pls_segurado			c, 
		pls_plano			d, 
		pls_contrato			e, 
		titulo_receber			f, 
		pls_segurado_canal_compl	g 
	where	a.nr_sequencia		= b.nr_seq_mensalidade 
	and	b.nr_seq_segurado	= c.nr_sequencia 
	and	c.nr_seq_plano		= d.nr_sequencia 
	and	c.nr_seq_contrato	= e.nr_sequencia 
	and	a.nr_sequencia		= f.nr_seq_mensalidade 
	and	g.nr_seq_segurado	= c.nr_sequencia 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	coalesce(c.nr_seq_intercambio::text, '') = '' /* Os lotes de comissão não são gerados para contratos de intercâmbio*/
 
	and	g.nr_seq_vendedor_canal = nr_seq_canal_venda_p 
	and (c.nr_seq_tipo_comercial = nr_seq_tipo_benef_comercial_w or coalesce(nr_seq_tipo_benef_comercial_w,0) = 0) 
	and	not ((trunc(c.dt_contratacao,'month') = trunc(dt_referencia_w,'month')) or (trunc(c.dt_liberacao,'month') = trunc(dt_referencia_w,'month'))) 
	and	f.dt_liquidacao > coalesce(f.dt_pagamento_previsto,f.dt_vencimento) -- dt_pagamento_previsto = data de prorrogação 
	and	trunc(f.dt_liquidacao,'month') = trunc(dt_referencia_w,'month') 
	and	((e.nr_seq_proposta = nr_seq_proposta_meta_w) or (coalesce(nr_seq_proposta_meta_w,0) = 0)) 
	and	((nr_seq_plano_meta_w = d.nr_sequencia) or (coalesce(nr_seq_plano_meta_w::text, '') = '')) 
	and	(((nr_seq_grupo_produto_meta_w IS NOT NULL AND nr_seq_grupo_produto_meta_w::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_meta_w,d.nr_sequencia) = 'S') 
	or (coalesce(nr_seq_grupo_produto_meta_w::text, '') = '')) 
	and (obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato) between coalesce(qt_dias_contrato_meta_w, obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato)) 
									and coalesce(qt_dias_contrato_fim_meta_w, obter_dias_entre_datas(c.dt_contratacao,e.dt_contrato))) 
	and	b.qt_idade between coalesce(qt_idade_inicial_meta_w,b.qt_idade) and coalesce(qt_idade_final_meta_w,b.qt_idade);

C02 CURSOR FOR	/* Filtrando beneficiários que se encaixam na regra mensal */
 
	SELECT	a.nr_sequencia, 
		pr_incremento, 
		qt_vidas_min, 
		qt_vidas_max, 
		vl_incremento, 
		qt_limite_max_vidas, 
		ie_preco, 
		ie_tipo_item_mensalidade, 
		pr_meta_minimo, 
		pr_meta_maximo, 
		nr_parcela_inicial, 
		nr_parcela_final, 
		ie_tipo_pessoa, 
		ie_acao_contrato, 
		coalesce(dt_inicio_vigencia,dt_referencia_w), 
		coalesce(dt_fim_vigencia,dt_referencia_w), 
		CASE WHEN coalesce(ie_dt_base_ref_comissao::text, '') = '' THEN 'A'  ELSE ie_dt_base_ref_comissao END , 
		b.nr_seq_tipo_benef_comercial, 
		a.pr_meta_fatur_minimo, 
		a.pr_meta_fatur_maximo, 
		a.ie_nascido_plano, 
		a.nr_seq_proposta, 
		a.nr_seq_plano, 
		a.nr_seq_grupo_produto, 
		a.qt_idade_inicial, 
		a.qt_idade_final, 
		a.nr_seq_classif_contrato, 
		coalesce(a.pr_limite_meta,0) 
	FROM pls_regra_adic_mensal a
LEFT OUTER JOIN pls_regra_mensal_benef b ON (a.nr_sequencia = b.nr_seq_regra_adic)
WHERE ((ie_canal_grupo_p = 'N' and nr_seq_vendedor = nr_seq_canal_venda_p and coalesce(ie_calculo_grupo,'N') = 'N') or (ie_canal_grupo_p = 'S' and a.nr_sequencia = nr_seq_regra_mens_p and coalesce(ie_calculo_grupo,'N') = 'S')) and (b.nr_seq_tipo_benef_comercial = nr_seq_tipo_comercial_w or coalesce(b.nr_seq_tipo_benef_comercial,0) = 0) and ie_situacao = 'A' and dt_contratacao_w between dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_contratacao_w) and position(ie_acao_contrato_w in coalesce(a.ie_acao_contrato,ie_acao_contrato_w)) > 0 and (coalesce(ie_tipo_pessoa,coalesce(ie_tipo_pessoa_w,'0')) = coalesce(ie_tipo_pessoa_w,'0') or (ie_tipo_pessoa = 'A')) and (coalesce(a.ie_nascido_plano, ie_nascido_plano_w) = ie_nascido_plano_w or (a.ie_nascido_plano = 'A')) and nr_parcela_w between coalesce(nr_parcela_inicial,nr_parcela_w) and coalesce(nr_parcela_final,nr_parcela_w) and coalesce(ie_preco,coalesce(ie_preco_w,'0')) = coalesce(ie_preco_w,'0') and coalesce(ie_calculo_comp_meta,'N') = 'N' and ((a.nr_seq_proposta = nr_seq_proposta_w) or (coalesce(a.nr_seq_proposta::text, '') = '')) and ((a.nr_seq_plano = nr_seq_plano_w) or (coalesce(nr_seq_plano::text, '') = '')) and (((a.nr_seq_grupo_produto IS NOT NULL AND a.nr_seq_grupo_produto::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') and pls_se_grupo_preco_produto(a.nr_seq_grupo_produto,nr_seq_plano_w) = 'S') 
	or (coalesce(a.nr_seq_grupo_produto::text, '') = '')) and (qt_dias_contrato_adesao_w between coalesce(qt_dias_contrato, qt_dias_contrato_adesao_w) and coalesce(qt_dias_contrato_fim, qt_dias_contrato_adesao_w)) and qt_idade_w between coalesce(a.qt_idade_inicial,qt_idade_w) and coalesce(a.qt_idade_final,qt_idade_w) and ((a.nr_seq_classif_contrato = nr_seq_classificacao_w) or (coalesce(a.nr_seq_classif_contrato::text, '') = '')) and ((coalesce(a.nr_seq_contrato::text, '') = '') or (a.nr_seq_contrato = nr_seq_contrato_w)) and (coalesce(a.ie_gerar_mens_atraso,'N') = 'S' or ( coalesce(a.ie_gerar_mens_atraso,'N') = 'N' and ie_mens_atraso_w = 'N')) and ((a.nr_seq_motivo_inclusao = nr_seq_motivo_inclusao_w) or (coalesce(a.nr_seq_motivo_inclusao::text, '') = '')) order by	coalesce(a.nr_seq_proposta,'-1'), 
			coalesce(ie_preco,'-1'), 
			coalesce(ie_tipo_item_mensalidade,'-1'), 
			coalesce(ie_acao_contrato,'-1');

C03 CURSOR FOR	/* Filtrando itens de mensalidade */
 
	SELECT	CASE WHEN ie_limite_atingido_w='S' THEN  0  ELSE a.vl_item END  vl_item, 
		a.ie_tipo_item, 
		a.nr_seq_vinculo_sca, 
		a.nr_seq_bonificacao_vinculo 
	from	pls_mensalidade_seg_item	a, 
		pls_mensalidade_segurado	b, 
		pls_comissao_beneficiario	c 
	where	pls_obter_item_mens(ie_tipo_item_mensalidade_w,a.ie_tipo_item) = 'S' 
	and	b.nr_parcela between coalesce(nr_parcela_inicial_w, b.nr_parcela_contrato) and coalesce(nr_parcela_final_w, b.nr_parcela_contrato) 
	and	b.nr_sequencia = nr_seq_mensalidade_seg_w 
	and	a.nr_seq_mensalidade_seg = b.nr_sequencia 
	and	c.nr_seq_comissao = nr_seq_comissao_p 
	and	b.nr_sequencia = c.nr_seq_segurado_mens 
	order by b.nr_sequencia, 
		 a.ie_tipo_item;

C04 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		pr_meta_minimo, 
		vl_base_meta_composta, 
		coalesce(pr_limite_pagamento_base,0), 
		ie_acao_contrato, 
		CASE WHEN coalesce(ie_dt_base_ref_comissao::text, '') = '' THEN 'A'  ELSE ie_dt_base_ref_comissao END , 
		b.nr_seq_tipo_benef_comercial, 
		a.nr_parcela_inicial, 
		a.nr_parcela_final, 
		a.nr_seq_proposta, 
		a.nr_seq_plano, 
		a.nr_seq_grupo_produto, 
		a.qt_dias_contrato, 
		a.qt_dias_contrato_fim, 
		a.qt_idade_inicial, 
		a.qt_idade_final 
	FROM pls_regra_adic_mensal a
LEFT OUTER JOIN pls_regra_mensal_benef b ON (a.nr_sequencia = b.nr_seq_regra_adic)
WHERE ((ie_canal_grupo_p = 'N' and nr_seq_vendedor = nr_seq_canal_venda_p and coalesce(ie_calculo_grupo,'N') = 'N') or (ie_canal_grupo_p = 'S' and a.nr_sequencia = nr_seq_regra_mens_p and coalesce(ie_calculo_grupo,'N') = 'S')) and ie_situacao = 'A' and dt_referencia_w	between dt_inicio_vigencia and fim_dia(dt_fim_vigencia) and coalesce(ie_calculo_comp_meta,'N') = 'S';

C05 CURSOR FOR 
	SELECT	ie_metodo_comissionamento, 
		coalesce(qt_meta,0), 
		coalesce(vl_peso,10), 
		nr_seq_grupo_produto, 
		nr_seq_motivo_inclusao 
	from	pls_vendedor_meta_regra 
	where	nr_seq_meta = nr_seq_meta_w 
	order by ie_metodo_comissionamento;

C06 CURSOR FOR	/* Filtrando beneficiários por comissão */
 
	SELECT	nr_sequencia 
	from	pls_comissao_beneficiario 
	where	nr_seq_comissao = nr_seq_comissao_p 
	and	coalesce(nr_seq_comissao_benef::text, '') = '' 
	and	coalesce(vl_estorno::text, '') = '';
	
C08 CURSOR FOR	/* Filtrando beneficiários por comissão que ainda não possuem valor de comissão */
 
	SELECT	nr_sequencia, 
		vl_incremento 
	from	pls_comissao_beneficiario 
	where	nr_seq_comissao = nr_seq_comissao_p 
	and	coalesce(nr_seq_comissao_benef::text, '') = '' 
	and	coalesce(vl_estorno::text, '') = '' 
	and	coalesce(vl_comissao_benef,0) = 0;

C07 CURSOR FOR	/* Filtrando itens de mensalidade */
 
	SELECT	c.nr_sequencia, 
		a.vl_item, 
		a.ie_tipo_item, 
		a.nr_seq_vinculo_sca, 
		a.nr_seq_bonificacao_vinculo 
	from	pls_mensalidade_seg_item	a, 
		pls_mensalidade_segurado	b, 
		pls_comissao_beneficiario	c 
	where	b.nr_sequencia = nr_seq_mensalidade_seg_w 
	and	a.nr_seq_mensalidade_seg = b.nr_sequencia 
	and	c.nr_seq_comissao = nr_seq_comissao_p 
	and	b.nr_sequencia = c.nr_seq_segurado_mens 
	order by b.nr_sequencia, 
		 a.ie_tipo_item;
		

BEGIN 
 
ie_permite_rapasse_tit_abert_w := Obter_Param_Usuario(1206, 16, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_rapasse_tit_abert_w);
 
pr_incremento_w		:= 0;
qt_vidas_incluidas_w	:= 0;
qt_tot_vidas_w		:= 0;
calculo_composicao_w	:= 'N';
 
select	dt_referencia 
into STRICT	dt_referencia_w 
from	pls_lote_comissao 
where	nr_sequencia = nr_seq_lote_p;
 
begin 
select	max(coalesce(qt_meta,0)), 
	max(coalesce(vl_meta_faturamento,0)) 
into STRICT	qt_meta_w, 
	vl_meta_fatur_w 
from	pls_vendedor_meta 
where	trunc(dt_mesano_referencia,'month') = trunc(dt_referencia_w,'month') 
and	nr_seq_vendedor	= nr_seq_canal_venda_p;
exception 
when others then 
	qt_meta_w	:= 0;
	vl_meta_fatur_w	:= 0;
end;
 
ie_gerar_juro_mult_tit_w := pls_obter_se_gera_juro_mult(cd_estabelecimento_p);
 
open C01;
loop 
fetch C01 into 
	nr_seq_contrato_w, 
	nr_seq_mensalidade_seg_w, 
	nr_parcela_w, 
	ie_acao_contrato_w, 
	ie_tipo_pessoa_w, 
	ie_preco_w, 
	nr_seq_segurado_w, 
	dt_contratacao_w, 
	nr_seq_plano_w, 
	nr_seq_tipo_comercial_w, 
	nr_seq_proposta_w, 
	ie_nascido_plano_w, 
	nr_seq_classificacao_w, 
	nr_titulo_w, 
	nr_seq_mensalidade_w, 
	nr_seq_pagador_w, 
	ie_mens_atraso_w, 
	ie_situacao_titulo_w, 
	dt_liquidacao_w, 
	nr_seq_vendedor_pf_w, 
	nr_proposta_adesao_w, 
	cd_pessoa_fisica_w, 
	nr_seq_motivo_inclusao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	nr_seq_regra_ww		:= 0;
	ie_gerar_comissao_w	:= 'N';
	 
	/*Obter a quantidade de dias entre a data de contratação e a data de adesão do beneficiário. */
 
	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
		select	b.dt_contratacao - a.dt_contrato 
		into STRICT	qt_dias_contrato_adesao_w 
		from	pls_segurado	b, 
			pls_contrato	a 
		where	a.nr_sequencia = b.nr_seq_contrato 
		and	b.nr_sequencia = nr_seq_segurado_w;
	end if;	
	 
	select	trunc(months_between(dt_referencia_w, b.dt_nascimento) / 12) 
	into STRICT	qt_idade_w 
	from	pls_segurado	a, 
		pessoa_fisica	b 
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica 
	and	a.nr_sequencia		= nr_seq_segurado_w;
	 
	select	count(1) 
	into STRICT	qt_baixa_negociacao_w 
	from	titulo_receber_liq 
	where	nr_titulo = nr_titulo_w 
	and	cd_tipo_recebimento = 22; -- 22 = Negociação 
	if (coalesce(ie_permite_rapasse_tit_abert_w,'S') = 'S') or 
		((coalesce(ie_permite_rapasse_tit_abert_w,'S') = 'N') and (dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '') and (ie_situacao_titulo_w = '2') and (qt_baixa_negociacao_w = 0)) then			 
		begin	 
		 
		if (ie_gerar_juro_mult_tit_w = 'S') then 
			vl_juros_multa_w := pls_obter_vl_juros_mult_titulo(nr_titulo_w);
		end if;	
		 
		open C02;
		loop 
		fetch C02 into 
			nr_seq_regra_w, 
			pr_incremento_w, 
			qt_vidas_min_w, 
			qt_vidas_max_w, 
			vl_incremento_w, 
			qt_limite_max_vidas_w, 
			ie_preco_regra_w, 
			ie_tipo_item_mensalidade_w, 
			pr_meta_minimo_w, 
			pr_meta_maximo_w, 
			nr_parcela_inicial_w, 
			nr_parcela_final_w, 
			ie_tipo_pessoa_regra_w, 
			ie_acao_contrato_regra_w, 
			dt_inicio_vigencia_w, 
			dt_fim_vigencia_w, 
			ie_dt_base_ref_comissao_w, 
			nr_seq_tipo_benef_comercial_w, 
			pr_meta_fatur_minimo_w, 
			pr_meta_fatur_maximo_w, 
			ie_nascido_plano_regra_w, 
			nr_seq_proposta_regra_w, 
			nr_seq_plano_regra_w, 
			nr_seq_grupo_produto_regra_w, 
			qt_idade_inicial_regra_w, 
			qt_idade_final_regra_w, 
			nr_seq_classificacao_regra_w, 
			pr_limite_meta_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		 
			if (ie_dt_base_ref_comissao_w = 'L') then 
				select	dt_liberacao 
				into STRICT	dt_ref_comissao_w 
				from	pls_segurado 
				where	nr_sequencia = nr_seq_segurado_w;
			elsif (ie_dt_base_ref_comissao_w = 'A') then 
				select	dt_contratacao 
				into STRICT	dt_ref_comissao_w 
				from	pls_segurado 
				where	nr_sequencia = nr_seq_segurado_w;
			elsif (ie_dt_base_ref_comissao_w = 'AC') then 
				select	max(dt_aprovacao) 
				into STRICT	dt_ref_comissao_w 
				from	pls_contrato 
				where	nr_sequencia	= nr_seq_contrato_w;
			end if;
			 
			if (trunc(dt_ref_comissao_w,'month') = trunc(dt_referencia_w,'month')) or (ie_mens_atraso_w = 'S') then 
				begin				 
				 
				select	sum(qt_vidas), 
					sum(vl_mensalidade) 
				into STRICT	qt_vidas_w, 
					vl_mensalidade_meta_w 
				from	(SELECT	count(1) qt_vidas, 
						sum(b.vl_mensalidade) vl_mensalidade 
					from	pls_mensalidade			a, 
						pls_mensalidade_segurado	b, 
						pls_segurado			c, 
						pls_plano			d, 
						pls_contrato			e, 
						pessoa_fisica			f, 
						titulo_receber			g 
					where	a.nr_sequencia		= b.nr_seq_mensalidade 
					and	b.nr_seq_segurado	= c.nr_sequencia 
					and	c.nr_seq_contrato	= e.nr_sequencia 
					and	d.nr_sequencia		= c.nr_seq_plano 
					and	c.cd_pessoa_fisica	= f.cd_pessoa_fisica 
					and	a.nr_sequencia		= g.nr_seq_mensalidade 
					and	c.nr_seq_vendedor_canal = nr_seq_canal_venda_p 
					and	((ie_dt_base_ref_comissao_w = 'A' and trunc(c.dt_contratacao,'month') = trunc(dt_referencia_w,'month') and (trunc(c.dt_contratacao,'month') between dt_inicio_vigencia_w and dt_fim_vigencia_w)) or (ie_dt_base_ref_comissao_w = 'L' and trunc(c.dt_liberacao,'month') = trunc(dt_referencia_w,'month') and trunc(c.dt_liberacao,'month') between dt_inicio_vigencia_w and dt_fim_vigencia_w) or (ie_dt_base_ref_comissao_w = 'AC' and trunc(e.dt_aprovacao,'month') = trunc(dt_referencia_w,'month') and trunc(e.dt_aprovacao,'month') between dt_inicio_vigencia_w and dt_fim_vigencia_w))				 
					and (coalesce(a.ie_cancelamento::text, '') = '') 
					and	b.nr_parcela between coalesce(nr_parcela_inicial_w,b.nr_parcela) and coalesce(nr_parcela_final_w,b.nr_parcela) 
					and	position(c.ie_acao_contrato in coalesce(ie_acao_contrato_regra_w,c.ie_acao_contrato)) > 0 
					and	((CASE WHEN coalesce(e.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END  = ie_tipo_pessoa_regra_w) or (ie_tipo_pessoa_regra_w = 'A')) 
					and	coalesce(c.nr_seq_intercambio::text, '') = '' 
					and (nr_seq_tipo_benef_comercial_w = c.nr_seq_tipo_comercial or coalesce(nr_seq_tipo_benef_comercial_w,0) = 0) 
					and (coalesce(ie_nascido_plano_regra_w, coalesce(c.ie_nascido_plano,'N')) = coalesce(c.ie_nascido_plano,'N') or (ie_nascido_plano_regra_w = 'A')) 
					and	coalesce(ie_preco_regra_w,coalesce(d.ie_preco,'0')) = coalesce(d.ie_preco,'0') 
					and	((nr_seq_proposta_regra_w = e.nr_seq_proposta) or (coalesce(nr_seq_proposta_regra_w::text, '') = '')) 
					and	((nr_seq_plano_regra_w = d.nr_sequencia) or (coalesce(nr_seq_plano_regra_w::text, '') = '')) 
					and	(((nr_seq_grupo_produto_regra_w IS NOT NULL AND nr_seq_grupo_produto_regra_w::text <> '') and (d.nr_sequencia IS NOT NULL AND d.nr_sequencia::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_regra_w,d.nr_sequencia) = 'S') 
					or (coalesce(nr_seq_grupo_produto_regra_w::text, '') = '')) 
					and	trunc(months_between(b.dt_mesano_referencia, f.dt_nascimento) / 12) between coalesce(qt_idade_inicial_regra_w,trunc(months_between(b.dt_mesano_referencia, f.dt_nascimento) / 12)) and coalesce(qt_idade_final_regra_w,trunc(months_between(b.dt_mesano_referencia, f.dt_nascimento) / 12)) 
					and	((nr_seq_classificacao_regra_w = e.nr_seq_classificacao) or (coalesce(nr_seq_classificacao_regra_w::text, '') = '')) 
					and	((coalesce(ie_permite_rapasse_tit_abert_w,'S') = 'S') or 
						((coalesce(ie_permite_rapasse_tit_abert_w,'S') = 'N') and (g.dt_liquidacao IS NOT NULL AND g.dt_liquidacao::text <> '') and (g.ie_situacao = '2') and 
						((select count(1)							 
						 from	 titulo_receber_liq	x 
						 where	 x.nr_titulo = g.nr_titulo 
						 and	 x.cd_tipo_recebimento = 22) = 0)))	 
					
union all
 
					SELECT	count(1) qt_vidas, 
						sum(b.vl_mensalidade) vl_mensalidade 
					from	pls_mensalidade			a, 
						pls_mensalidade_segurado	b, 
						pls_segurado			c, 
						pls_plano			d, 
						pls_contrato			e, 
						pessoa_fisica			f, 
						titulo_receber			g, 
						pls_segurado_canal_compl	h 
					where	a.nr_sequencia		= b.nr_seq_mensalidade 
					and	b.nr_seq_segurado	= c.nr_sequencia 
					and	c.nr_seq_contrato	= e.nr_sequencia 
					and	d.nr_sequencia		= c.nr_seq_plano 
					and	c.cd_pessoa_fisica	= f.cd_pessoa_fisica 
					and	a.nr_sequencia		= g.nr_seq_mensalidade 
					and	c.nr_sequencia 		= h.nr_seq_segurado 
					and	h.nr_seq_vendedor_canal = nr_seq_canal_venda_p 
					and	((ie_dt_base_ref_comissao_w = 'A' and trunc(c.dt_contratacao,'month') = trunc(dt_referencia_w,'month') and (trunc(c.dt_contratacao,'month') between dt_inicio_vigencia_w and dt_fim_vigencia_w)) or (ie_dt_base_ref_comissao_w = 'L' and trunc(c.dt_liberacao,'month') = trunc(dt_referencia_w,'month') and trunc(c.dt_liberacao,'month') between dt_inicio_vigencia_w and dt_fim_vigencia_w) or (ie_dt_base_ref_comissao_w = 'AC' and trunc(e.dt_aprovacao,'month') = trunc(dt_referencia_w,'month') and trunc(e.dt_aprovacao,'month') between dt_inicio_vigencia_w and dt_fim_vigencia_w))				 
					and (coalesce(a.ie_cancelamento::text, '') = '') 
					and	b.nr_parcela between coalesce(nr_parcela_inicial_w,b.nr_parcela) and coalesce(nr_parcela_final_w,b.nr_parcela) 
					and	position(c.ie_acao_contrato in coalesce(ie_acao_contrato_regra_w,c.ie_acao_contrato)) > 0 
					and	((CASE WHEN coalesce(e.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END  = ie_tipo_pessoa_regra_w) or (ie_tipo_pessoa_regra_w = 'A')) 
					and	coalesce(c.nr_seq_intercambio::text, '') = '' 
					and (nr_seq_tipo_benef_comercial_w = c.nr_seq_tipo_comercial or coalesce(nr_seq_tipo_benef_comercial_w,0) = 0) 
					and (coalesce(ie_nascido_plano_regra_w, coalesce(c.ie_nascido_plano,'N')) = coalesce(c.ie_nascido_plano,'N') or (ie_nascido_plano_regra_w = 'A')) 
					and	coalesce(ie_preco_regra_w,coalesce(d.ie_preco,'0')) = coalesce(d.ie_preco,'0') 
					and	((nr_seq_proposta_regra_w = e.nr_seq_proposta) or (coalesce(nr_seq_proposta_regra_w::text, '') = '')) 
					and	((nr_seq_plano_regra_w = d.nr_sequencia) or (coalesce(nr_seq_plano_regra_w::text, '') = '')) 
					and	(((nr_seq_grupo_produto_regra_w IS NOT NULL AND nr_seq_grupo_produto_regra_w::text <> '') and (d.nr_sequencia IS NOT NULL AND d.nr_sequencia::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_regra_w,d.nr_sequencia) = 'S') 
					or (coalesce(nr_seq_grupo_produto_regra_w::text, '') = '')) 
					and	trunc(months_between(b.dt_mesano_referencia, f.dt_nascimento) / 12) between coalesce(qt_idade_inicial_regra_w,trunc(months_between(b.dt_mesano_referencia, f.dt_nascimento) / 12)) and coalesce(qt_idade_final_regra_w,trunc(months_between(b.dt_mesano_referencia, f.dt_nascimento) / 12)) 
					and	((nr_seq_classificacao_regra_w = e.nr_seq_classificacao) or (coalesce(nr_seq_classificacao_regra_w::text, '') = '')) 
					and	((coalesce(ie_permite_rapasse_tit_abert_w,'S') = 'S') or 
						((coalesce(ie_permite_rapasse_tit_abert_w,'S') = 'N') and (g.dt_liquidacao IS NOT NULL AND g.dt_liquidacao::text <> '') and (g.ie_situacao = '2') and 
						((select count(1)							 
						 from	 titulo_receber_liq	x 
						 where	 x.nr_titulo = g.nr_titulo 
						 and	 x.cd_tipo_recebimento = 22) = 0)))) alias156;
				 
				/* Cálculo pela meta por quantidade de vidas vendidas */
 
				if (coalesce(qt_meta_w,0) > 0) then 
					pr_meta_w	:= coalesce(round((qt_vidas_w * 100) / coalesce(qt_meta_w,1),2),0);
					if (pr_meta_w > pr_limite_meta_w) and (pr_limite_meta_w > 0) then 
						pr_meta_w := pr_limite_meta_w;
					end if;
				else	 
					pr_meta_w	:= 0;
				end if;
				 
				/* Cálculo pela meta por faturamento obtido */
 
				if (coalesce(vl_meta_fatur_w,0) > 0) then 
					pr_meta_fatur_w	:= coalesce(round((vl_mensalidade_meta_w * 100) / coalesce(vl_meta_fatur_w,1),2),0);
				else	 
					pr_meta_fatur_w	:= 0;
				end if;
					 
				if (qt_vidas_w >= coalesce(qt_vidas_min_w,qt_vidas_w)) and (qt_vidas_w <= coalesce(qt_vidas_max_w,qt_vidas_w)) and (pr_meta_w >= coalesce(pr_meta_minimo_w,pr_meta_w)) and (pr_meta_w <= coalesce(pr_meta_maximo_w,pr_meta_w)) and (pr_meta_fatur_w >= coalesce(pr_meta_fatur_minimo_w,pr_meta_fatur_w)) and (pr_meta_fatur_w <= coalesce(pr_meta_fatur_maximo_w,pr_meta_fatur_w)) then 
					ie_gerar_comissao_w	:= 'S';
							 
					qt_vidas_incluidas_w 	:= qt_vidas_incluidas_w + 1; /* Realizar a verificação de quantas vidas foram incluídas no repasse para não ultrapassar o limite informado no campo "Limite vidas repasse" */
					pr_incremento_ww	:= coalesce(pr_incremento_w,0);
					vl_preco_segurado_w	:= 0;
					vl_comissao_w		:= 0;
					nr_seq_regra_ww		:= nr_seq_regra_w;
					 
					if (coalesce(ie_preco_regra_w,ie_preco_w) = ie_preco_w) then 
						select	sum(a.vl_item) 
						into STRICT	vl_preco_segurado_w 
						from	pls_mensalidade_seg_item	a, 
							pls_mensalidade_segurado	b 
						where	pls_obter_item_mens(ie_tipo_item_mensalidade_w,a.ie_tipo_item) = 'S' 
						/*Ana Oberziner - OS 577344 - 16/04/2013 (O tratamento de comparação de parcela já é feito dentro do cursor 02) 
						and	b.nr_parcela between nvl(nr_parcela_inicial_w,b.nr_parcela_contrato) and nvl(nr_parcela_final_w,b.nr_parcela_contrato)*/
 
						and	b.nr_sequencia = nr_seq_mensalidade_seg_w 
						and	a.nr_seq_mensalidade_seg = b.nr_sequencia;
					else						 
						select	coalesce(vl_mensalidade,0) 
						into STRICT	vl_preco_segurado_w 
						from	pls_mensalidade_segurado 
						where	nr_sequencia	= nr_seq_mensalidade_seg_w;
					end if;
					 
					if (nr_parcela_w = 1) then 
						begin 
						select	CASE WHEN a.ie_proporcional='S' THEN 'P' WHEN a.ie_proporcional='N' THEN 'I' END  
						into STRICT	ie_proporcional_w 
						from	pls_mensalidade		a 
						where	a.nr_sequencia = nr_seq_mensalidade_w;
						exception 
						when others then 
							ie_proporcional_w := null;
						end;
						 
						if (ie_proporcional_w IS NOT NULL AND ie_proporcional_w::text <> '') then 
							ie_primeira_parc_integral_w := ie_proporcional_w;
						else 
							begin 
							select	a.ie_calc_primeira_mens 
							into STRICT	ie_primeira_parc_integral_w 
							from	pls_mensalidade_segurado	c, 
								pls_mensalidade			b, 
								pls_contrato_pagador		a 
							where	a.nr_sequencia		= b.nr_seq_pagador 
							and	b.nr_sequencia		= c.nr_seq_mensalidade 
							and	a.nr_sequencia		= nr_seq_pagador_w 
							and	c.nr_seq_segurado	= nr_seq_segurado_w 
							and	c.nr_parcela	= 1 
							group by a.ie_calc_primeira_mens;
							exception 
							when others then 
								ie_primeira_parc_integral_w := 'I';
							end;
						end if;
											 
						if (ie_primeira_parc_integral_w = 'P') then 
							select	min(dt_reajuste) 
							into STRICT	dt_reajuste_w 
							from	pls_segurado_preco 
							where	nr_seq_segurado = nr_seq_segurado_w;
							 
							select	sum(vl_preco_atual) 
							into STRICT	vl_preco_segurado_w 
							from	pls_segurado_preco 
							where	nr_seq_segurado = nr_seq_segurado_w 
							and	dt_reajuste = dt_reajuste_w;
						end if;
					end if;				
					 
					if (qt_vidas_incluidas_w <= coalesce(qt_limite_max_vidas_w,qt_vidas_incluidas_w)) then					 
						if (ie_primeira_parc_integral_w = 'P') then 
							vl_comissao_w := round(((vl_preco_segurado_w * coalesce(pr_incremento_w,0)) / 100) + coalesce(vl_incremento_w,0),2);
							vl_origem_comis_w := vl_comissao_w;
							vl_origem_w := vl_comissao_w - coalesce(vl_incremento_w,0);
						 
							if (vl_juros_multa_w > 0) then								 
								vl_comissao_w := 0;
							end if;	
						end if;
						ie_limite_atingido_w := 'N';
					else 
						vl_comissao_w := 0;
						ie_limite_atingido_w := 'S';
					end if;
				end if;
				 
				/* Não gerar comissão duas vezes para o beneficiário. */
 
				select	count(1) 
				into STRICT	qt_benef_comissao_w 
				from	pls_comissao_beneficiario	b, 
					pls_comissao			a 
				where	a.nr_sequencia = b.nr_seq_comissao 
				and	b.nr_seq_segurado_mens = nr_seq_mensalidade_seg_w 
				and	coalesce(a.ie_cancelado,'N') = 'N';
				 
				/* Não gerar comissão se o repasse para o beneficiário já foi gerado. */
 
				select	count(1) 
				into STRICT	qt_reg_repasse_w 
				from	pls_repasse_mens	a, 
					pls_repasse_vend	b 
				where	a.nr_seq_repasse = b.nr_sequencia 
				and	a.nr_seq_mens_seg = nr_seq_mensalidade_seg_w 
				and	b.ie_status <> 'C';
						 
				if	((ie_gerar_comissao_w = 'S') and (qt_benef_comissao_w = 0) and (qt_reg_repasse_w = 0) and (vl_preco_segurado_w IS NOT NULL AND vl_preco_segurado_w::text <> '')) then 
					select	nextval('pls_comissao_beneficiario_seq') 
					into STRICT	nr_seq_comissao_benef_w 
					;
					 
					insert	into pls_comissao_beneficiario( nr_sequencia, nr_seq_comissao, nr_seq_segurado_mens, nr_seq_segurado, 
							vl_incremento, nr_seq_vendedor, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, 
							nm_usuario_nrec, nr_titulo, vl_comissao_benef, vl_origem, nr_seq_regra_mensal, 
							nr_seq_vendedor_pf, nr_seq_proposta, cd_pessoa_fisica ) 
						values (	nr_seq_comissao_benef_w, nr_seq_comissao_p, nr_seq_mensalidade_seg_w, nr_seq_segurado_w, 
							vl_incremento_w, nr_seq_canal_venda_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), 
							nm_usuario_p, nr_titulo_w, vl_comissao_w, vl_origem_comis_w, nr_seq_regra_ww, 
							nr_seq_vendedor_pf_w, nr_proposta_adesao_w, cd_pessoa_fisica_w );
					 
					qt_tot_vidas_w	:= qt_tot_vidas_w + 1;
					 
					if (coalesce(ie_primeira_parc_integral_w,'I') = 'I') then 
						vl_origem_comis_w := 0;
					 
						open C03;
						loop 
						fetch C03 into 
							vl_mensalidade_benef_w, 
							ie_tipo_item_ww, 
							nr_seq_vinculo_sca_w, 
							nr_seq_bonificacao_vinculo_w;
						EXIT WHEN NOT FOUND; /* apply on C03 */
							 
							nr_seq_plano_item_w	:= null;
							nr_seq_sca_w		:= null;
							nr_seq_bonificacao_w	:= null;
							 
							if (ie_tipo_item_ww = '15') then 
								select	max(nr_seq_plano) 
								into STRICT	nr_seq_sca_w 
								from	pls_sca_vinculo 
								where	nr_sequencia = nr_seq_vinculo_sca_w;
							elsif (ie_tipo_item_ww in ('1','12')) then 
								nr_seq_plano_item_w := nr_seq_plano_w;
							end if;
							 
							if	((coalesce(nr_seq_bonificacao_vinculo_w,0) <> 0) and (ie_tipo_item_ww ='14')) then 
								select	nr_seq_bonificacao 
								into STRICT	nr_seq_bonificacao_w 
								from	pls_bonificacao_vinculo 
								where	nr_sequencia = nr_seq_bonificacao_vinculo_w;
							end if;
													 
							vl_comissao_mens_benef_w := round((vl_mensalidade_benef_w * coalesce(pr_incremento_w,0)) / 100,2);	
							vl_origem_w := vl_comissao_mens_benef_w;
							 
							if (vl_juros_multa_w > 0) then								 
								vl_comissao_mens_benef_w := 0;
								vl_origem_comis_w := vl_origem_comis_w + vl_origem_w;
							end if;
							 
							insert	into	pls_comissao_benef_item( nr_sequencia, nr_seq_comissao_benef, ie_tipo_item, 
									vl_item_mensalidade, tx_comissao, vl_comissao, vl_origem, 
									nr_seq_plano, nr_seq_plano_sca, nr_seq_bonificacao, dt_atualizacao, 
									nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec) 
								values (	nextval('pls_comissao_benef_item_seq'), nr_seq_comissao_benef_w, ie_tipo_item_ww, 
									vl_mensalidade_benef_w, pr_incremento_w, vl_comissao_mens_benef_w, vl_origem_w, 
									nr_seq_plano_item_w, nr_seq_sca_w, nr_seq_bonificacao_w, clock_timestamp(), 
									nm_usuario_p, clock_timestamp(), nm_usuario_p);
						end loop;
						close C03;
						 
						update	pls_comissao_beneficiario 
						set	vl_origem = vl_origem_comis_w + coalesce(vl_incremento_w,0) 
						where	nr_sequencia = nr_seq_comissao_benef_w;						
					else	 
						begin 
						 
						if (vl_juros_multa_w > 0) then								 
							vl_comissao_w := 0;
						end if;							
					 
						insert	into	pls_comissao_benef_item( nr_sequencia, nr_seq_comissao_benef, ie_tipo_item, 
								vl_item_mensalidade, tx_comissao, vl_comissao, vl_origem, 
								nr_seq_plano, nr_seq_plano_sca, nr_seq_bonificacao, dt_atualizacao, 
								nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec) 
							values (	nextval('pls_comissao_benef_item_seq'), nr_seq_comissao_benef_w, 1, 
								vl_preco_segurado_w, pr_incremento_w, vl_comissao_w, vl_origem_w, 
								nr_seq_plano_w, null, null, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p);
						end;
					end if;
				end if;
				end;
			end if;
		end loop;
		close C02;
		end;
	end if;
end loop;
close C01;
 
if (ie_gerar_juro_mult_tit_w = 'S') then 
	CALL pls_acrescentar_juros_multa(null, nr_seq_comissao_p, 'CM', nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
end if;
 
CALL pls_acrescentar_valor_fixo(null, nr_seq_comissao_p, 'CM', nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
 
open C04;
loop 
fetch C04 into 
	nr_seq_regra_w, 
	pr_meta_minimo_w, 
	vl_base_meta_composta_w, 
	pr_limite_pagamento_base_w, 
	ie_acao_contrato_regra_w, 
	ie_dt_base_ref_comissao_w, 
	nr_seq_tipo_benef_comercial_w, 
	nr_parcela_inicial_meta_w, 
	nr_parcela_final_meta_w, 
	nr_seq_proposta_meta_w, 
	nr_seq_plano_meta_w, 
	nr_seq_grupo_produto_meta_w, 
	qt_dias_contrato_meta_w, 
	qt_dias_contrato_fim_meta_w, 
	qt_idade_inicial_meta_w, 
	qt_idade_final_meta_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin 
	 
	calculo_composicao_w 	:= 'S';
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_meta_w 
	from	pls_vendedor_meta 
	where	trunc(dt_mesano_referencia,'month') = trunc(dt_referencia_w,'month') 
	and	nr_seq_vendedor	= nr_seq_canal_venda_p 
	and	ie_meta_composta = 'S';
	 
	open C05;
	loop 
	fetch C05 into 
		ie_metodo_comissionamento_w, 
		qt_meta_regra_w, 
		vl_peso_w, 
		nr_seq_grupo_produto_w, 
		nr_seq_motivo_inclusao_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		 
		vl_comissionamento_w := (vl_base_meta_composta_w / 10) * vl_peso_w;
		 
		if (ie_metodo_comissionamento_w = 'M') then 
			select	sum(qt_vidas) 
			into STRICT	qt_vidas_w 
			from  (SELECT	count(1) qt_vidas 
				from	pls_segurado	a, 
					pls_contrato	b 
				where	a.nr_seq_contrato = b.nr_sequencia 
				and	a.nr_seq_vendedor_canal	= nr_seq_canal_venda_p 
				and	((ie_dt_base_ref_comissao_w = 'A' and trunc(a.dt_contratacao,'month') = trunc(dt_referencia_w,'month')) or (ie_dt_base_ref_comissao_w = 'L' and trunc(a.dt_liberacao,'month') = trunc(dt_referencia_w,'month')) or (ie_dt_base_ref_comissao_w = 'AC' and trunc(b.dt_aprovacao,'month') = trunc(dt_referencia_w,'month'))) 
				and	position(a.ie_acao_contrato in coalesce(ie_acao_contrato_regra_w,a.ie_acao_contrato)) > 0 
				and	a.ie_acao_contrato = 'M' 
				and (coalesce(nr_seq_tipo_benef_comercial_w,0) = 0 or (a.nr_seq_tipo_comercial IS NOT NULL AND a.nr_seq_tipo_comercial::text <> '')) 
				and	(((nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') and (a.nr_seq_plano IS NOT NULL AND a.nr_seq_plano::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_w,a.nr_seq_plano) = 'S') 
				or (coalesce(nr_seq_grupo_produto_w::text, '') = '')) 
				and	((a.nr_seq_motivo_inclusao = nr_seq_motivo_inclusao_regra_w) or (coalesce(nr_seq_motivo_inclusao_regra_w::text, '') = '')) 
				and	exists (select 1 
						from	pls_mensalidade_segurado	x, 
							pls_mensalidade			z, 
							titulo_receber			y 
						where	x.nr_seq_mensalidade	= z.nr_sequencia 
						and	x.nr_seq_segurado	= a.nr_sequencia 
						and	y.nr_seq_mensalidade	= z.nr_sequencia 
						and	coalesce(z.ie_cancelamento::text, '') = '') 
				
union all
 
				SELECT	count(1) qt_vidas 
				from	pls_contrato			c, 
					pls_segurado_canal_compl	b, 
					pls_segurado			a 
				where	a.nr_seq_contrato = a.nr_sequencia 
				and	a.nr_sequencia = b.nr_seq_segurado 
				and	b.nr_seq_vendedor_canal = nr_seq_canal_venda_p 
				and	((ie_dt_base_ref_comissao_w = 'A' and trunc(a.dt_contratacao,'month') = trunc(dt_referencia_w,'month')) or (ie_dt_base_ref_comissao_w = 'L' and trunc(a.dt_liberacao,'month') = trunc(dt_referencia_w,'month')) or (ie_dt_base_ref_comissao_w = 'AC' and trunc(c.dt_aprovacao,'month') = trunc(dt_referencia_w,'month'))) 
				and	position(a.ie_acao_contrato in coalesce(ie_acao_contrato_regra_w,a.ie_acao_contrato)) > 0 
				and	a.ie_acao_contrato = 'M' 
				and (coalesce(nr_seq_tipo_benef_comercial_w,0) = 0 or (a.nr_seq_tipo_comercial IS NOT NULL AND a.nr_seq_tipo_comercial::text <> '')) 
				and	(((nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') and (a.nr_seq_plano IS NOT NULL AND a.nr_seq_plano::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_w,a.nr_seq_plano) = 'S') 
				or (coalesce(nr_seq_grupo_produto_w::text, '') = '')) 
				and	((a.nr_seq_motivo_inclusao = nr_seq_motivo_inclusao_regra_w) or (coalesce(nr_seq_motivo_inclusao_regra_w::text, '') = '')) 
				and	exists (select 1 
						from	pls_mensalidade_segurado	x, 
							pls_mensalidade			z, 
							titulo_receber			y 
						where	x.nr_seq_mensalidade	= z.nr_sequencia 
						and	x.nr_seq_segurado	= a.nr_sequencia 
						and	y.nr_seq_mensalidade	= z.nr_sequencia 
						and	coalesce(z.ie_cancelamento::text, '') = '')) alias60;
			 
			pr_meta_w	:= round((qt_vidas_w * 100) / qt_meta_regra_w);
			 
			if (pr_meta_w > pr_limite_pagamento_base_w) and (pr_limite_pagamento_base_w > 0) then 
				pr_meta_w	:= pr_limite_pagamento_base_w;
			end if;
			 
			if (pr_meta_w >= coalesce(pr_meta_minimo_w,0)) then 
				vl_total_comissao_w	:= coalesce(vl_total_comissao_w,0) + ((vl_comissionamento_w / 100) * pr_meta_w);
				ie_gerar_comissao_w	:= 'S';
				pr_total_peso_w		:= (coalesce(pr_total_peso_w,0) + (pr_meta_w * vl_peso_w)) / 10;
			end if;
		elsif (ie_metodo_comissionamento_w = 'N') then 
			select	sum(qt_vidas) 
			into STRICT	qt_vidas_w 
			from	(SELECT	count(1) qt_vidas 
				from	pls_segurado	a, 
					pls_contrato	b 
				where	a.nr_seq_contrato = b.nr_sequencia 
				and	a.nr_seq_vendedor_canal	= nr_seq_canal_venda_p 
				and	((ie_dt_base_ref_comissao_w = 'A' and trunc(a.dt_contratacao,'month') = trunc(dt_referencia_w,'month')) or (ie_dt_base_ref_comissao_w = 'L' and trunc(a.dt_liberacao,'month') = trunc(dt_referencia_w,'month')) or (ie_dt_base_ref_comissao_w = 'AC' and trunc(b.dt_aprovacao,'month') = trunc(dt_referencia_w,'month'))) 
				and	position(a.ie_acao_contrato in coalesce(ie_acao_contrato_regra_w,a.ie_acao_contrato)) > 0 
				and	a.ie_acao_contrato <> 'M' 
				and (coalesce(nr_seq_tipo_benef_comercial_w,0) = 0 or (a.nr_seq_tipo_comercial IS NOT NULL AND a.nr_seq_tipo_comercial::text <> '')) 
				and	(((nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') and (a.nr_seq_plano IS NOT NULL AND a.nr_seq_plano::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_w,a.nr_seq_plano) = 'S') 
				or (coalesce(nr_seq_grupo_produto_w::text, '') = '')) 
				and	((a.nr_seq_motivo_inclusao = nr_seq_motivo_inclusao_regra_w) or (coalesce(nr_seq_motivo_inclusao_regra_w::text, '') = '')) 
				and	exists (select 1 
						from	pls_mensalidade_segurado	x, 
							pls_mensalidade			z, 
							titulo_receber			y 
						where	x.nr_seq_mensalidade	= z.nr_sequencia 
						and	x.nr_seq_segurado	= a.nr_sequencia 
						and	y.nr_seq_mensalidade	= z.nr_sequencia 
						and	coalesce(z.ie_cancelamento::text, '') = '') 
				
union all
 
				SELECT	count(1) qt_vidas 
				from	pls_contrato			c, 
					pls_segurado_canal_compl	b, 
					pls_segurado			a 
				where	a.nr_seq_contrato = c.nr_sequencia 
				and	a.nr_sequencia = b.nr_seq_segurado 
				and	b.nr_seq_vendedor_canal = nr_seq_canal_venda_p 
				and	((ie_dt_base_ref_comissao_w = 'A' and trunc(a.dt_contratacao,'month') = trunc(dt_referencia_w,'month')) or (ie_dt_base_ref_comissao_w = 'L' and trunc(a.dt_liberacao,'month') = trunc(dt_referencia_w,'month')) or (ie_dt_base_ref_comissao_w = 'AC' and trunc(c.dt_aprovacao,'month') = trunc(dt_referencia_w,'month'))) 
				and	position(a.ie_acao_contrato in coalesce(ie_acao_contrato_regra_w,a.ie_acao_contrato)) > 0 
				and	a.ie_acao_contrato <> 'M' 
				and (coalesce(nr_seq_tipo_benef_comercial_w,0) = 0 or (a.nr_seq_tipo_comercial IS NOT NULL AND a.nr_seq_tipo_comercial::text <> '')) 
				and	(((nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') and (a.nr_seq_plano IS NOT NULL AND a.nr_seq_plano::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_w,a.nr_seq_plano) = 'S') 
				or (coalesce(nr_seq_grupo_produto_w::text, '') = '')) 
				and	((a.nr_seq_motivo_inclusao = nr_seq_motivo_inclusao_regra_w) or (coalesce(nr_seq_motivo_inclusao_regra_w::text, '') = '')) 
				and	exists (select 1 
						from	pls_mensalidade_segurado	x, 
							pls_mensalidade			z, 
							titulo_receber			y 
						where	x.nr_seq_mensalidade	= z.nr_sequencia 
						and	x.nr_seq_segurado	= a.nr_sequencia 
						and	y.nr_seq_mensalidade	= z.nr_sequencia 
						and	coalesce(z.ie_cancelamento::text, '') = '')) alias60;
			 
			pr_meta_w	:= round((qt_vidas_w * 100) / coalesce(qt_meta_regra_w,0));
			 
			if (pr_meta_w > pr_limite_pagamento_base_w) and (pr_limite_pagamento_base_w > 0) then 
				pr_meta_w	:= pr_limite_pagamento_base_w;
			end if;
			 
			if (pr_meta_w >= pr_meta_minimo_w) then 
				vl_total_comissao_w	:= coalesce(vl_total_comissao_w,0) + ((vl_comissionamento_w / 100) * pr_meta_w);
				ie_gerar_comissao_w	:= 'S';
				pr_total_peso_w		:= (coalesce(pr_total_peso_w,0) + (pr_meta_w * vl_peso_w)) / 10;
			end if;
		end if;
		end;
	end loop;
	close C05;
	 
	if (pr_total_peso_w >= pr_meta_minimo_w) then 
		open C01;
		loop 
		fetch C01 into 
			nr_seq_contrato_w, 
			nr_seq_mensalidade_seg_w, 
			nr_parcela_w, 
			ie_acao_contrato_w, 
			ie_tipo_pessoa_w, 
			ie_preco_w, 
			nr_seq_segurado_w, 
			dt_contratacao_w, 
			nr_seq_plano_w, 
			nr_seq_tipo_comercial_w, 
			nr_seq_proposta_w, 
			ie_nascido_plano_w, 
			nr_seq_classificacao_w, 
			nr_titulo_w, 
			nr_seq_mensalidade_w, 
			nr_seq_pagador_w, 
			ie_mens_atraso_w, 
			ie_situacao_titulo_w, 
			dt_liquidacao_w, 
			nr_seq_vendedor_pf_w, 
			nr_proposta_adesao_w, 
			cd_pessoa_fisica_w, 
			nr_seq_motivo_inclusao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
 
			select	count(1) 
			into STRICT	qt_baixa_negociacao_w 
			from	titulo_receber_liq 
			where	nr_titulo = nr_titulo_w 
			and	cd_tipo_recebimento = 22; -- 22 = Negociação 			 
			
			if (coalesce(ie_permite_rapasse_tit_abert_w,'S') = 'S') or 
				((coalesce(ie_permite_rapasse_tit_abert_w,'S') = 'N') and (dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '') and (ie_situacao_titulo_w = '2') and (qt_baixa_negociacao_w = 0)) then			 
				begin 
			 
				if (ie_dt_base_ref_comissao_w = 'L') then 
					select	dt_liberacao 
					into STRICT	dt_ref_comissao_w 
					from	pls_segurado 
					where	nr_sequencia = nr_seq_segurado_w;
				elsif (ie_dt_base_ref_comissao_w = 'A') then 
					select	dt_contratacao 
					into STRICT	dt_ref_comissao_w 
					from	pls_segurado 
					where	nr_sequencia = nr_seq_segurado_w;
				elsif (ie_dt_base_ref_comissao_w = 'AC') then 
					select	max(dt_aprovacao) 
					into STRICT	dt_ref_comissao_w 
					from	pls_contrato 
					where	nr_sequencia	= nr_seq_contrato_w;
				end if;
				 
				if (trunc(dt_ref_comissao_w,'month') = trunc(dt_referencia_w,'month')) or (ie_mens_atraso_w = 'S') then 
					begin 
					 
					select	count(1) 
					into STRICT	qt_benef_comissao_w 
					from	pls_comissao_beneficiario 
					where	nr_seq_segurado	= nr_seq_segurado_w 
					and	nr_seq_comissao = nr_seq_comissao_p;
					 
					if	(ie_gerar_comissao_w	= 'S' AND qt_benef_comissao_w = 0) then 
						select	nextval('pls_comissao_beneficiario_seq') 
						into STRICT	nr_seq_comissao_benef_w 
						;
						 
						insert	into pls_comissao_beneficiario( nr_sequencia, nr_seq_comissao, nr_seq_segurado_mens, nr_seq_segurado, 
							vl_comissao_benef, vl_origem, vl_incremento, nr_seq_vendedor, dt_atualizacao, 
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_titulo, nr_seq_regra_mensal, 
							nr_seq_vendedor_pf, nr_seq_proposta, cd_pessoa_fisica ) 
						values (	nr_seq_comissao_benef_w, nr_seq_comissao_p, nr_seq_mensalidade_seg_w, nr_seq_segurado_w, 
							vl_total_comissao_w, vl_total_comissao_w, 0, nr_seq_canal_venda_p, clock_timestamp(), 
							nm_usuario_p, clock_timestamp(), nm_usuario_p, nr_titulo_w, nr_seq_regra_w, 
							nr_seq_vendedor_pf_w, nr_proposta_adesao_w, cd_pessoa_fisica_w );
						 
						qt_tot_vidas_w	:= qt_tot_vidas_w + 1;
						 
						open C07;
						loop 
						fetch C07 into 
							nr_seq_benef_comissao_w, 
							vl_mensalidade_benef_w, 
							ie_tipo_item_ww, 
							nr_seq_vinculo_sca_w, 
							nr_seq_bonificacao_vinculo_w;
						EXIT WHEN NOT FOUND; /* apply on C07 */
							 
							nr_seq_plano_item_w	:= null;
							nr_seq_sca_w		:= null;
							nr_seq_bonificacao_w	:= null;
							 
							if (ie_tipo_item_ww = '15') then 
								select	max(nr_seq_plano) 
								into STRICT	nr_seq_sca_w 
								from	pls_sca_vinculo 
								where	nr_sequencia = nr_seq_vinculo_sca_w;
							elsif (ie_tipo_item_ww in ('1','12')) then 
								nr_seq_plano_item_w := nr_seq_plano_w;
							end if;
							 
							if	((coalesce(nr_seq_bonificacao_vinculo_w,0) <> 0) and (ie_tipo_item_ww ='14')) then 
								select	nr_seq_bonificacao 
								into STRICT	nr_seq_bonificacao_w 
								from	pls_bonificacao_vinculo 
								where	nr_sequencia = nr_seq_bonificacao_vinculo_w;
							end if;
							 
							insert	into	pls_comissao_benef_item( nr_sequencia, nr_seq_comissao_benef, ie_tipo_item, 
									vl_item_mensalidade, tx_comissao, nr_seq_plano, nr_seq_plano_sca, 
									nr_seq_bonificacao, dt_atualizacao, nm_usuario, 
									dt_atualizacao_nrec, nm_usuario_nrec) 
								values (	nextval('pls_comissao_benef_item_seq'), nr_seq_benef_comissao_w, ie_tipo_item_ww, 
									vl_mensalidade_benef_w, pr_incremento_w, nr_seq_plano_item_w, nr_seq_sca_w, 
									nr_seq_bonificacao_w, clock_timestamp(), nm_usuario_p, 
									clock_timestamp(), nm_usuario_p);
						end loop;
						close C07;
					end if;
				end;
				end if;
				end;
			end if;
		end loop;
		close C01;
	end if;
	 
	if (qt_tot_vidas_w = 0 or coalesce(qt_tot_vidas_w::text, '') = '') then 
		qt_tot_vidas_w := 1;
	end if;
	 
	update	pls_comissao_beneficiario 
	set	vl_comissao_benef = coalesce(vl_comissao_benef,0) / coalesce(qt_tot_vidas_w,1), 
		vl_origem = coalesce(vl_comissao_benef,0) / coalesce(qt_tot_vidas_w,1) 
	where	nr_seq_comissao = nr_seq_comissao_p;
	end;
end loop;
close C04;
 
if (calculo_composicao_w = 'N') then 
	open C08;
	loop 
	fetch C08 into 
		nr_seq_comissao_benef_total_w, 
		vl_incremento_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */
		begin 
		 
		select	sum(vl_comissao) 
		into STRICT	vl_comissao_total_benef_w 
		from	pls_comissao_benef_item 
		where	nr_seq_comissao_benef = nr_seq_comissao_benef_total_w;
		 
		if (vl_comissao_total_benef_w > 0) or (vl_incremento_w > 0) then		 
			update	pls_comissao_beneficiario 
			set	vl_comissao_benef = vl_comissao_total_benef_w + coalesce(vl_incremento,0) 
			--	vl_origem = vl_comissao_total_benef_w + nvl(vl_incremento,0) 
			where	nr_sequencia = nr_seq_comissao_benef_total_w;
		end if;
		 
		end;
	end loop;
	close C08;
end if;
 
if (calculo_composicao_w = 'S') then 
	open C06;
	loop 
	fetch C06 into 
		nr_seq_comissao_benef_total_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin 
		 
		select	sum(vl_item_mensalidade) 
		into STRICT	vl_total_item_mens_w 
		from	pls_comissao_benef_item 
		where	nr_seq_comissao_benef = nr_seq_comissao_benef_total_w 
		and	vl_item_mensalidade > 0;
		 
		select	vl_comissao_benef 
		into STRICT	vl_comissao_benef_w 
		from	pls_comissao_beneficiario 
		where	nr_sequencia = nr_seq_comissao_benef_total_w;
				 
		update	pls_comissao_benef_item 
		set	vl_comissao = (((vl_item_mensalidade * 100) / coalesce(vl_total_item_mens_w,1)) / 100) * vl_comissao_benef_w 
		--	vl_origem = (((vl_item_mensalidade * 100) / nvl(vl_total_item_mens_w,1)) / 100) * vl_comissao_benef_w 
		where	nr_seq_comissao_benef = nr_seq_comissao_benef_total_w 
		and	vl_item_mensalidade > 0;
		 
		end;
	end loop;
	close C06;
end if;
 
select	sum(vl_comissao_benef) 
into STRICT	vl_comissao_total_w 
from	pls_comissao_beneficiario 
where	nr_seq_comissao = nr_seq_comissao_p;
 
select	count(1) -- Verificando a quantidade de estornos pendentes 
into STRICT	qt_estornos 
from	pls_estorno_comissao 
where	nr_seq_canal_venda = nr_seq_canal_venda_p 
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
and	coalesce(nr_seq_comissao_benef::text, '') = '';
 
if (qt_estornos > 0) then 
	CALL pls_gerar_comissao_estornada(nr_seq_canal_venda_p, nr_seq_comissao_p, coalesce(vl_comissao_total_w,0), nm_usuario_p);
else 
	update	pls_comissao 
	set	vl_comissao_canal = coalesce(vl_comissao_total_w,0) 
	where	nr_sequencia = nr_seq_comissao_p;
end if;
 
--commit; 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_comissao_mensal ( nr_seq_lote_p bigint, nr_seq_canal_venda_p bigint, nr_seq_comissao_p bigint, ie_canal_grupo_p text, nr_seq_regra_mens_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

