-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_envio_troca_tipo_case ( nr_seq_episodio_p bigint) AS $body$
DECLARE


qt_reg_w			smallint;
nr_seq_documento_w		intpd_fila_transmissao.nr_seq_documento%type;
nr_atendimento_w		bigint;
nm_usuario_w			usuario.nm_usuario%type;
reg_integracao_p		gerar_int_padrao.reg_integracao;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_episodio_w		atendimento_paciente.nr_seq_episodio%type;
nr_seq_fila_tipo_case_w		bigint;
ds_separador_w			varchar(10)	:= ish_param_pck.get_separador;
ie_status_w			episodio_paciente.ie_status%type;

c01 CURSOR FOR
SELECT	nr_atendimento,
        nr_seq_interno,
        cd_convenio,
        nr_prioridade
from	atend_categoria_convenio
where	nr_atendimento	= nr_atendimento_w;

c01_w	c01%rowtype;

	procedure agendar_envio_egk(
			nr_atendimento_p		bigint,
			nm_usuario_p			text,
			reg_integracao_p	 out	gerar_int_padrao.reg_integracao) is

	cd_pessoa_fisica_w	pessoa_fisica_egk.cd_pessoa_fisica%type;
	nr_seq_pf_egk_w		bigint;
	qt_registros_fila_w	bigint	:= 0;
	nr_seq_documento_w	intpd_fila_transmissao.nr_seq_documento%type;

	
BEGIN
	begin
	select	a.cd_pessoa_fisica
	into STRICT	cd_pessoa_fisica_w
	from	atendimento_paciente a
	where	a.nr_atendimento	= nr_atendimento_p;
	exception
	when others then
		cd_pessoa_fisica_w	:= null;
	end;

	nr_seq_pf_egk_w	:= egk_get_person_sequence(cd_pessoa_fisica_w, '1');
	
	if (nr_seq_pf_egk_w IS NOT NULL AND nr_seq_pf_egk_w::text <> '') then	
	
		nr_seq_documento_w	:= nr_seq_episodio_w||ds_separador_w||nr_seq_pf_egk_w;
		
		begin
		select	1
		into STRICT	qt_registros_fila_w
		from	intpd_fila_transmissao a
		where	a.nr_seq_documento	= nr_seq_documento_w
		and	a.ie_evento	= '360';
		exception
		when others then
			qt_registros_fila_w	:= 0;
		end;

		if (qt_registros_fila_w = 0) then
			reg_integracao_p.nr_seq_agrupador	:= cd_pessoa_fisica_w;
			reg_integracao_p.cd_pessoa_fisica	:= cd_pessoa_fisica_w;
			reg_integracao_p.ie_status		:= 'P';
			reg_integracao_p.ie_operacao		:= 'I';
			reg_integracao_p := gerar_int_padrao.gravar_integracao('360', nr_seq_documento_w, nm_usuario_p, reg_integracao_p);
		end if;
	end if;		
	end;
begin

begin
select	1
into STRICT	qt_reg_w
from	intpd_eventos a,
	intpd_eventos_sistema b
where	a.nr_sequencia = b.nr_seq_evento
and	a.ie_evento = '220'
and	a.ie_situacao = 'A'
and	b.ie_situacao = 'A'  LIMIT 1;
exception
when others then
	qt_reg_w	:=	0;
end;

if (qt_reg_w > 0) then
	begin
	nr_seq_documento_w	:=	nr_seq_episodio_p;
	
	begin
	select	nr_sequencia
	into STRICT	nr_seq_fila_tipo_case_w
	from	intpd_fila_transmissao
	where	nr_seq_documento	= nr_seq_documento_w
	and	ie_status		= 'A'
	and	ie_evento		= '220'  LIMIT 1;
	exception
	when others then
		nr_seq_fila_tipo_case_w := null;
	end;
	
	if (coalesce(nr_seq_fila_tipo_case_w,0) > 0) then
	
		update	intpd_fila_transmissao
		set	ie_status 	= 'S',
			ds_log 		= 'CANCELED'
		where	ie_status 	= 'A'
		and	ie_evento 	= '220'
		and	nr_seq_documento = nr_seq_documento_w;

		begin
		select	nr_atendimento,
			nm_usuario_nrec,
			cd_pessoa_fisica,
			ie_tipo_atendimento,
			nr_seq_episodio
		into STRICT	nr_atendimento_w,
			nm_usuario_w,
			cd_pessoa_fisica_w,
			ie_tipo_atendimento_w,
			nr_seq_episodio_w
		from	atendimento_paciente a
		where	a.nr_atendimento =
			(SELECT	max(x.nr_atendimento) 
			from	atendimento_paciente x
			where	x.nr_seq_episodio = nr_seq_episodio_p)  LIMIT 1;
		exception
		when others then
			nr_atendimento_w := null;
		end;
		
		if (get_case_encounter_type(nr_seq_episodio_p, null, nr_atendimento_w, ie_tipo_atendimento_w) = '1') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
					
			/*update	intpd_fila_transmissao
			set	ie_status 		= 'S',
				ds_log 			= 'CANCELED'
			where	ie_status 		<> 'S'
			and	ie_evento 		= '106'
			and	nr_seq_documento 	= nr_seq_documento_w;
			
			update	intpd_fila_transmissao
			set	ie_status 			= 'S',
				ds_log 				= 'CANCELED'
			where	ie_status 			<> 'S'
			and	ie_evento 			= '135'
			and	to_chaR(nr_atendimento_w) 	= obter_valor_campo_separador(nr_seq_documento,1,ds_separador_w);*/
		
			reg_integracao_p.cd_pessoa_fisica 	:= cd_pessoa_fisica_w;
			reg_integracao_p.ie_operacao		:= 'I';
			
			agendar_envio_egk(nr_atendimento_w, coalesce(nm_usuario_w,obter_usuario_ativo), reg_integracao_p);
		
			open C01;
			loop
			fetch C01 into
				c01_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
			
				reg_integracao_p.nr_seq_agrupador	:= nr_atendimento_w;
				reg_integracao_p.nr_atendimento		:= nr_atendimento_w;
				nr_seq_documento_w			:= nr_atendimento_w || ds_separador_w || c01_w.nr_seq_interno || ds_separador_w || nr_seq_episodio_p;
				
				--Quando mandar um novo convenio, verificar se este convenio ja nao foi integrado para o mesmo case, se sim, enviar como update.
				if (ISH_RZV_INSURANCE_PCK.get_se_conv_integrado_case(nr_seq_episodio_p, c01_w.cd_convenio) = 'S') then
					reg_integracao_p.ie_operacao	:= 'A';
				end if;
				reg_integracao_p := gerar_int_padrao.gravar_integracao('135', nr_seq_documento_w, coalesce(nm_usuario_w,obter_usuario_ativo), reg_integracao_p);
                reg_integracao_p := ish_send_kv_insurance(c01_w.nr_seq_interno, reg_integracao_p, nr_atendimento_w, c01_w.nr_prioridade, c01_w.cd_convenio);
				
				update	atend_categoria_convenio
				set	dt_atualizacao = dt_atualizacao
				where	nr_seq_interno = c01_w.nr_seq_interno;
			
			end loop;
			close C01;
			
			--agenda uma nova mensagem para troca do tipo do case.
			reg_integracao_p.ie_operacao		:= 'I';			
			reg_integracao_p := gerar_int_padrao.gravar_integracao('220', nr_seq_episodio_p, coalesce(nm_usuario_w,obter_usuario_ativo), reg_integracao_p);
			
			--Agenda o envio do case do inpatient.
			reg_integracao_p.ie_operacao		:= 'A';	
			reg_integracao_p := gerar_int_padrao.gravar_integracao('106', nr_seq_episodio_p, coalesce(nm_usuario_w,obter_usuario_ativo), reg_integracao_p);

			update	episodio_paciente
			set	dt_atualizacao = dt_atualizacao
			where	nr_sequencia = nr_seq_episodio_p;
			
			update	atendimento_paciente
			set	dt_atualizacao = dt_atualizacao
			where	nr_atendimento = nr_atendimento_w;
			
			update	atend_paciente_unidade
			set	dt_atualizacao = dt_atualizacao
			where	nr_atendimento = nr_atendimento_w;
			
			select  max(ie_status)
			into STRICT	ie_status_w
			from	episodio_paciente
			where	nr_sequencia = nr_seq_episodio_p;
			
			reg_integracao_p.nr_atendimento	:= null;				
			
			reg_integracao_p.ie_operacao		:= 'A';
			reg_integracao_p.ie_status_episodio	:= ie_status_w;
			reg_integracao_p := gerar_int_padrao.gravar_integracao('401', nr_seq_episodio_p, coalesce(nm_usuario_w,obter_usuario_ativo), reg_integracao_p);
			
			update	episodio_paciente
			set	dt_atualizacao = dt_atualizacao
			where	nr_sequencia = nr_seq_episodio_p;
		end if;
	end if;	
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_envio_troca_tipo_case ( nr_seq_episodio_p bigint) FROM PUBLIC;

