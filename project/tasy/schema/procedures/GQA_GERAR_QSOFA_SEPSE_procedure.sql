-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_gerar_qsofa_sepse (( nr_atendimento_p bigint, nr_seq_sepsis_p bigint, dt_referencia_p timestamp, nm_usuario_p text) is nr_sequencia_w bigint) RETURNS varchar AS $body$
DECLARE


		qt_fr_w			bigint;

		
BEGIN
		/* ie_opcao_p
		1 menos
		2 mais
		0 meio   */
		if (ie_opcao_p	= 1) then
			select	count(*)
			into STRICT	qt_fr_w
			from	atendimento_sinal_vital
			where	nr_atendimento = nr_atendimento_p
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and		coalesce(dt_inativacao::text, '') = ''
			and		trunc(dt_sinal_vital) = trunc(dt_referencia_p - qt_dia_p)
			and		qt_freq_resp > 22;
		elsif (ie_opcao_p	= 2) then
			select	count(*)
			into STRICT	qt_fr_w
			from	atendimento_sinal_vital
			where	nr_atendimento = nr_atendimento_p
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and		coalesce(dt_inativacao::text, '') = ''
			and		trunc(dt_sinal_vital) = trunc(dt_referencia_p + qt_dia_p)
			and		qt_freq_resp > 22;
		elsif (ie_opcao_p	= 0) then
			select	count(*)
			into STRICT	qt_fr_w
			from	atendimento_sinal_vital
			where	nr_atendimento = nr_atendimento_p
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and		coalesce(dt_inativacao::text, '') = ''
			and		trunc(dt_sinal_vital) = trunc(dt_referencia_p)
			and		qt_freq_resp > 22;
		end if;

		return qt_fr_w;

		end;


	function obter_PAS(qt_dia_p number, ie_opcao_p number)
					return varchar2 is

		qt_pas_w			number(10);

		begin
		/* ie_opcao_p
		1 menos
		2 mais
		0 meio   */
		if (ie_opcao_p	= 1) then
			select	count(*)
			into STRICT	qt_pas_w
			from	atendimento_sinal_vital
			where	nr_atendimento = nr_atendimento_p
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and		coalesce(dt_inativacao::text, '') = ''
			and		trunc(dt_sinal_vital) = trunc(dt_referencia_p - qt_dia_p)
			and		qt_pa_sistolica < 100;
		elsif (ie_opcao_p	= 2) then
			select	count(*)
			into STRICT	qt_pas_w
			from	atendimento_sinal_vital
			where	nr_atendimento = nr_atendimento_p
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and		coalesce(dt_inativacao::text, '') = ''
			and		trunc(dt_sinal_vital) = trunc(dt_referencia_p + qt_dia_p)
			and		qt_pa_sistolica < 100;
		elsif (ie_opcao_p	= 0) then
			select	count(*)
			into STRICT	qt_pas_w
			from	atendimento_sinal_vital
			where	nr_atendimento = nr_atendimento_p
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and		coalesce(dt_inativacao::text, '') = ''
			and		trunc(dt_sinal_vital) = trunc(dt_referencia_p)
			and		qt_pa_sistolica < 100;
		end if;

		return qt_pas_w;

		end;

	function obter_nivel_cons(qt_dia_p number, ie_opcao_p number)
							return varchar2 is

		qt_nivel_w			number(10);

		begin
		/* ie_opcao_p
		1 menos
		2 mais
		0 meio   */
		if (ie_opcao_p	= 1) then
			select	count(*)
			into STRICT	qt_nivel_w
			from	atendimento_sinal_vital
			where	nr_atendimento = nr_atendimento_p
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and		coalesce(dt_inativacao::text, '') = ''
			and		trunc(dt_sinal_vital) = trunc(dt_referencia_p - qt_dia_p)
			and		ie_nivel_consciencia > 0;
		elsif (ie_opcao_p	= 2) then
			select	count(*)
			into STRICT	qt_nivel_w
			from	atendimento_sinal_vital
			where	nr_atendimento = nr_atendimento_p
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and		coalesce(dt_inativacao::text, '') = ''
			and		trunc(dt_sinal_vital) = trunc(dt_referencia_p + qt_dia_p)
			and		ie_nivel_consciencia > 0;
		elsif (ie_opcao_p	= 0) then
			select	count(*)
			into STRICT	qt_nivel_w
			from	atendimento_sinal_vital
			where	nr_atendimento = nr_atendimento_p
			and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and		coalesce(dt_inativacao::text, '') = ''
			and		trunc(dt_sinal_vital) = trunc(dt_referencia_p)
			and		ie_nivel_consciencia > 0;
		end if;

		return qt_nivel_w;

		end;

begin

select	nextval('w_gestao_sepsis_sofa_seq')
into STRICT	nr_sequencia_w
;

ds_fr_1_w := obter_FR(3,1);
ds_fr_2_w := obter_FR(2,1);
ds_fr_3_w := obter_FR(1,1);
ds_fr_4_w := obter_FR(0,0);
ds_fr_5_w := obter_FR(1,2);
ds_fr_6_w := obter_FR(2,2);
ds_fr_7_w := obter_FR(3,2);

select	CASE WHEN ds_fr_1_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: '|| ds_fr_1_w,
		CASE WHEN ds_fr_2_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: '|| ds_fr_2_w,
		CASE WHEN ds_fr_3_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: '|| ds_fr_3_w,
		CASE WHEN ds_fr_4_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: '|| ds_fr_4_w,
		CASE WHEN ds_fr_5_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: '|| ds_fr_5_w,
		CASE WHEN ds_fr_6_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: '|| ds_fr_6_w,
		CASE WHEN ds_fr_7_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: '|| ds_fr_7_w
into STRICT	ds_fr_1_w,
        ds_fr_2_w,
        ds_fr_3_w,
        ds_fr_4_w,
        ds_fr_5_w,
        ds_fr_6_w,
        ds_fr_7_w
;

ds_pas_1_w := obter_PAS(3,1);
ds_pas_2_w := obter_PAS(2,1);
ds_pas_3_w := obter_PAS(1,1);
ds_pas_4_w := obter_PAS(0,0);
ds_pas_5_w := obter_PAS(1,2);
ds_pas_6_w := obter_PAS(2,2);
ds_pas_7_w := obter_PAS(3,2);

select	CASE WHEN ds_pas_1_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_pas_1_w,
		CASE WHEN ds_pas_2_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_pas_2_w,
		CASE WHEN ds_pas_3_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_pas_3_w,
		CASE WHEN ds_pas_4_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_pas_4_w,
		CASE WHEN ds_pas_5_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_pas_5_w,
		CASE WHEN ds_pas_6_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_pas_6_w,
		CASE WHEN ds_pas_7_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_pas_7_w
into STRICT	ds_pas_1_w,
        ds_pas_2_w,
        ds_pas_3_w,
        ds_pas_4_w,
        ds_pas_5_w,
        ds_pas_6_w,
        ds_pas_7_w
;

ds_nivel_cons_1_w := obter_nivel_cons(3,1);
ds_nivel_cons_2_w := obter_nivel_cons(2,1);
ds_nivel_cons_3_w := obter_nivel_cons(1,1);
ds_nivel_cons_4_w := obter_nivel_cons(0,0);
ds_nivel_cons_5_w := obter_nivel_cons(1,2);
ds_nivel_cons_6_w := obter_nivel_cons(2,2);
ds_nivel_cons_7_w := obter_nivel_cons(3,2);

select	CASE WHEN ds_nivel_cons_1_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_nivel_cons_1_w,
		CASE WHEN ds_nivel_cons_2_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_nivel_cons_2_w,
		CASE WHEN ds_nivel_cons_3_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_nivel_cons_3_w,
		CASE WHEN ds_nivel_cons_4_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_nivel_cons_4_w,
		CASE WHEN ds_nivel_cons_5_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_nivel_cons_5_w,
		CASE WHEN ds_nivel_cons_6_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_nivel_cons_6_w,
		CASE WHEN ds_nivel_cons_7_w='0' THEN 'N'  ELSE 'S' END  || ' Qtde: ' || ds_nivel_cons_7_w
into STRICT	ds_nivel_cons_1_w,
        ds_nivel_cons_2_w,
        ds_nivel_cons_3_w,
        ds_nivel_cons_4_w,
        ds_nivel_cons_5_w,
        ds_nivel_cons_6_w,
        ds_nivel_cons_7_w
;

insert into w_gestao_sepsis_sofa(	nr_sequencia,
									nr_seq_sepsis,
									nr_atendimento,
									dt_atualizacao,
									dt_atualizacao_nrec,
									nm_usuario,
									nm_usuario_nrec,
									ie_qsofa,
									ds_sv_fr_menos_3,
									ds_sv_fr_menos_2,
									ds_sv_fr_menos_1,
									ds_sv_fr_zero,
									ds_sv_fr_mais_1,
									ds_sv_fr_mais_2,
									ds_sv_fr_mais_3,
									ds_sv_as_menos_3,
									ds_sv_as_menos_2,
									ds_sv_as_menos_1,
									ds_sv_as_zero,
									ds_sv_as_mais_1,
									ds_sv_as_mais_2,
									ds_sv_as_mais_3,
									ds_sv_nc_menos_3,
									ds_sv_nc_menos_2,
									ds_sv_nc_menos_1,
									ds_sv_nc_zero,
									ds_sv_nc_mais_1,
									ds_sv_nc_mais_2,
									ds_sv_nc_mais_3)
					values (			nr_sequencia_w,
									nr_seq_sepsis_p,
									nr_atendimento_p,
									clock_timestamp(),
									clock_timestamp(),
									nm_usuario_p,
									nm_usuario_p,
									'S',
									ds_fr_1_w,
									ds_fr_2_w,
									ds_fr_3_w,
									ds_fr_4_w,
									ds_fr_5_w,
									ds_fr_6_w,
									ds_fr_7_w,
									ds_pas_1_w,
									ds_pas_2_w,
									ds_pas_3_w,
									ds_pas_4_w,
									ds_pas_5_w,
									ds_pas_6_w,
                                    ds_pas_7_w,
									ds_nivel_cons_1_w,
									ds_nivel_cons_2_w,
									ds_nivel_cons_3_w,
									ds_nivel_cons_4_w,
									ds_nivel_cons_5_w,
									ds_nivel_cons_6_w,
									ds_nivel_cons_7_w);
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_gerar_qsofa_sepse (( nr_atendimento_p bigint, nr_seq_sepsis_p bigint, dt_referencia_p timestamp, nm_usuario_p text) is nr_sequencia_w bigint) FROM PUBLIC;

