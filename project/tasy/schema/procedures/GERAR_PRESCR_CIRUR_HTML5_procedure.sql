-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_cirur_html5 (nr_seq_agenda_p bigint) AS $body$
DECLARE


--tabela agenda_paciente
nr_cirurgia_w 				bigint;
cd_medico_w					varchar(10);
cd_pessoa_fisica_w			varchar(10);
cd_procedimento_w			bigint;
dt_agenda_w					timestamp;
ie_status_agenda_w			varchar(3);
--params
ie_gerar_cirur_dia_w		varchar(2);
ie_gera_prescr_pat_w		varchar(2);
ie_gera_prescr_opme_w		varchar(2);
--outros
cd_perfil_w					bigint;
cd_estabelecimento_w		bigint;
nm_usuario_w				varchar(255);
nr_seq_prescricao_w			bigint;
cd_pessoa_usuario_w			bigint;
ie_tipo_pessoa_w			varchar(2);
ie_usuario_medico			varchar(2);


BEGIN

cd_perfil_w				:= wheb_usuario_pck.get_cd_perfil;
nm_usuario_w			:= wheb_usuario_pck.get_nm_usuario;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

ie_gerar_cirur_dia_w := obter_param_usuario(871, 185, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_gerar_cirur_dia_w);
ie_gera_prescr_pat_w := obter_param_usuario(871, 405, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_gera_prescr_pat_w);
ie_gera_prescr_opme_w := obter_param_usuario(871, 171, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_gera_prescr_opme_w);

select	max(substr(obter_pessoa_fisica_usuario(nm_usuario_w, 'C'),1,10))
into STRICT	cd_pessoa_usuario_w
;

select	max(obter_tipo_pessoa(cd_pessoa_usuario_w))
into STRICT	ie_tipo_pessoa_w
;

SELECT max(obter_se_usuario_medico(nm_usuario_w))
into STRICT ie_usuario_medico
;

if (ie_usuario_medico = 'S') then
	ie_tipo_pessoa_w := 1;
end if;

SELECT max(nr_cirurgia),
	   max(cd_medico),
	   max(cd_pessoa_fisica),
	   max(cd_procedimento),
	   max(dt_agenda),
	   max(ie_status_agenda)
into STRICT   nr_cirurgia_w,
	   cd_medico_w,
	   cd_pessoa_fisica_w,
	   cd_procedimento_w,
	   dt_agenda_w,
	   ie_status_agenda_w
from   agenda_paciente
where  nr_sequencia = nr_seq_agenda_p;

if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '')then

	if (ie_status_agenda_w = 'C') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(1018311);---Não é possível gerar prescrições para agendamentos cancelados.
	end if;

	if (ie_gerar_cirur_dia_w = 'S') and (dt_agenda_w <> trunc(clock_timestamp())) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(83591);---Somente é possível gerar a cirurgia/prescrição na data do agendamento.
	else
		begin
			nr_seq_prescricao_w := Gerar_Prescricao_Agenda(nr_seq_agenda_p, nm_usuario_w, nr_seq_prescricao_w, cd_estabelecimento_w);
		exception
		when others then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(168870);
		end;

		CALL Gerar_Proc_Agenda_Cirurgia(nr_seq_agenda_p, nr_seq_prescricao_w, nm_usuario_w);

		CALL Gerar_Prescricao_Cirurgia(0, 0, coalesce(nr_cirurgia_w, 0), nr_seq_agenda_p,ie_tipo_pessoa_w, nm_usuario_w, nr_seq_prescricao_w, 0, 0, 871, 	cd_perfil_w, null, 0, null, null, null);

		if (ie_gera_prescr_pat_w = 'S') then
			CALL gerar_prescr_patologia_cirur(nr_seq_agenda_p, nm_usuario_w, cd_estabelecimento_w);
		end if;

		if (ie_gera_prescr_opme_w <> 'S') then
			CALL gerar_opme_prescr_cirurgia(nr_seq_agenda_p, ie_tipo_pessoa_w, nm_usuario_w, nr_seq_prescricao_w, cd_estabelecimento_w);
		end if;

	end if;

	Commit;
else
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(82741);---Campos obrigatórios não foram informados!
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_cirur_html5 (nr_seq_agenda_p bigint) FROM PUBLIC;

