-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copia_macro_desig_congelacao ( nr_prescricao_p bigint, nr_seq_lab_p text, nr_seq_peca_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_peca_w				bigint;
nr_seq_macroscopia_w		bigint;
nr_seq_macro_desig_w		bigint;
nr_seq_macroscopia_novo_w	bigint;
nr_seq_amostra_princ_w		bigint;

c001				integer;
retorno_w			integer;

c01 CURSOR FOR
	SELECT 	a.nr_sequencia
	from   	prescr_proc_peca a,
		tipo_amostra b,
		prescr_procedimento c
	where  	a.nr_seq_tipo 	= b.nr_sequencia
	and	a.nr_prescricao = c.nr_prescricao
	and	a.nr_seq_prescr	= c.nr_sequencia
	and	obter_atendimento_prescr(a.nr_prescricao) = obter_atendimento_prescr(nr_prescricao_p)
	and	b.ie_tipo_exame = 5
	and	c.nr_seq_lab	= nr_seq_lab_p
	and	a.nr_seq_amostra_princ = nr_seq_amostra_princ_w
	order	by nr_sequencia;


c02 CURSOR FOR
	SELECT	nr_sequencia
	from	prescr_proc_macroscopia
	where	nr_seq_peca 	= nr_seq_peca_w
	and	coalesce(dt_inativacao::text, '') = ''
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order	by nr_sequencia;


c03 CURSOR FOR
	SELECT	nr_sequencia
	from	prescr_proc_macro_desig
	where	nr_seq_macroscopia = nr_seq_macroscopia_w
	and	coalesce(dt_inativacao::text, '') = ''
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order	by nr_sequencia;


BEGIN

select	max(nr_seq_amostra_princ)
into STRICT	nr_seq_amostra_princ_w
from	prescr_proc_peca
where	nr_sequencia = nr_seq_peca_p;


open c01;
loop
fetch c01 into
	nr_seq_peca_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	open c02;
	loop
	fetch c02 into
		nr_seq_macroscopia_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		select	nextval('prescr_proc_macroscopia_seq')
		into STRICT	nr_seq_macroscopia_novo_w
		;

		insert	into prescr_proc_macroscopia(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_peca,
			dt_liberacao,
			--ds_macroscopia,
			cd_profissional
			)
			(
			SELECT	nr_seq_macroscopia_novo_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_peca_p,
				null,
				--ds_macroscopia,
				cd_profissional
			from	prescr_proc_macroscopia
			where	nr_sequencia = nr_seq_macroscopia_w
			);


		CALL copia_campo_long_de_para(	'prescr_proc_macroscopia',
						'ds_macroscopia',
						'where	nr_sequencia = :nr_sequencia',
						'nr_sequencia='||to_char(nr_seq_macroscopia_w),
						'prescr_proc_macroscopia',
						'ds_macroscopia',
						'where	nr_sequencia = :nr_sequencia',
						'nr_sequencia='||to_char(nr_seq_macroscopia_novo_w));


		open c03;
		loop
		fetch c03 into
			nr_seq_macro_desig_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin


			insert	into prescr_proc_macro_desig(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_macroscopia,
				nr_seq_apresent,
				nr_seq_amostra_princ,
				nr_fragmentos,
				ds_designacao,
				qt_macroscopia,
				nm_usuario_liberacao,
				dt_liberacao,
				ie_tipo_designacao,
				ie_gerar_lamina,
				ie_total_incluido,
				dt_inativacao,
				nm_usuario_inativacao,
				ie_alterar_desc
				)
				(

				SELECT	nextval('prescr_proc_macro_desig_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_macroscopia_novo_w,
					nr_seq_apresent,
					nr_seq_amostra_princ,
					nr_fragmentos,
					ds_designacao,
					qt_macroscopia,
					null,
					null,
					ie_tipo_designacao,
					ie_gerar_lamina,
					ie_total_incluido,
					null,
					null,
					ie_alterar_desc
				from	prescr_proc_macro_desig
				where	nr_sequencia = nr_seq_macro_desig_w


				);

			end;
		end loop;
		close c03;

		end;
	end loop;
	close c02;

	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copia_macro_desig_congelacao ( nr_prescricao_p bigint, nr_seq_lab_p text, nr_seq_peca_p bigint, nm_usuario_p text) FROM PUBLIC;

