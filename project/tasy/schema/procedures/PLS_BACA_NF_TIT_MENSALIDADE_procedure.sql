-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_baca_nf_tit_mensalidade () AS $body$
DECLARE


nr_seq_nota_fiscal_w		bigint;
cd_estabelecimento_w		bigint;
cd_conta_financ_cre_w		bigint;
nr_seq_classif_w		bigint;
vl_classif_total_w		double precision;
cd_conta_contabil_w		varchar(20);
cd_centro_custo_w		integer;
cd_conta_financ_w		bigint;
vl_classificacao_w		double precision;
nr_seq_contrato_w		bigint;
vl_vencimento_w			double precision;
dt_vencimento_w			timestamp;
vl_total_nota_w			double precision;
qt_registros_w			bigint;
nr_titulo_w			bigint;
nm_usuario_w			varchar(15);

nr_seq_classif_atual_w		integer;
vl_classif_atual_w		double precision;
cd_conta_financ_atual_w		bigint;
vl_desconto_atual_w		double precision;
vl_original_atual_w		double precision;
cd_conta_contabil_atual_w	varchar(20);

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_estabelecimento,
		c.nr_titulo,
		a.nm_usuario
	from	nota_fiscal a,
		pls_mensalidade b,
		titulo_receber c
	where	a.nr_seq_mensalidade	= b.nr_sequencia
	and	b.nr_sequencia	= c.nr_seq_mensalidade
	and	(a.nr_seq_mensalidade IS NOT NULL AND a.nr_seq_mensalidade::text <> '');

C02 CURSOR FOR
	SELECT	vl_vencimento,
		dt_vencimento
	from	nota_fiscal_venc
	where	nr_sequencia = nr_seq_nota_fiscal_w
	order	by 1;

C03 CURSOR FOR
	SELECT	a.cd_conta_contabil,
		a.cd_centro_custo,
		coalesce(a.nr_seq_conta_financ, cd_conta_financ_cre_w),
		sum(a.vl_liquido),
		a.nr_contrato
	from 	nota_fiscal_item a
	where	a.nr_sequencia		= nr_seq_nota_fiscal_w
	and	coalesce(a.nr_seq_conta_financ, cd_conta_financ_cre_w) > 0
	and	not exists (	SELECT	1
				from	nota_fiscal_item_rateio b
				where	b.nr_seq_nota	= a.nr_sequencia)
	group	by a.cd_conta_contabil,
		a.cd_centro_custo,
		a.nr_seq_conta_financ,
		a.nr_contrato
	
union all

	select	a.cd_conta_contabil,
		a.cd_centro_custo,
		coalesce(a.cd_conta_financ, coalesce(b.nr_seq_conta_financ, cd_conta_financ_cre_w)),
		sum(a.vl_rateio),
		b.nr_contrato
	from 	nota_fiscal_item_rateio a,
		nota_fiscal_item b
	where	b.nr_sequencia		= nr_seq_nota_fiscal_w
	and	b.nr_sequencia		= a.nr_seq_nota
	and	coalesce(a.cd_conta_financ, coalesce(b.nr_seq_conta_financ, cd_conta_financ_cre_w)) > 0
	group	by a.cd_conta_contabil,
		a.cd_centro_custo,
		a.cd_conta_financ,
		b.nr_seq_conta_financ,
		b.nr_contrato;

C04 CURSOR FOR
	SELECT	nr_sequencia,
		vl_classificacao,
		cd_conta_financ,
		vl_desconto,
		vl_original,
		cd_conta_contabil
	from	titulo_receber_classif
	where	nr_titulo	= nr_titulo_w;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_nota_fiscal_w,
	cd_estabelecimento_w,
	nr_titulo_w,
	nm_usuario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	/*
	open C04;
	loop
	fetch C04 into
		nr_seq_classif_atual_w,
		vl_classif_atual_w,
		cd_conta_financ_atual_w,
		vl_desconto_atual_w,
		vl_original_atual_w,
		cd_conta_contabil_atual_w;
	exit when C04%notfound;
		begin
		insert into log_tasy(		DT_ATUALIZACAO,
					NM_USUARIO,
					CD_LOG,
					DS_LOG)
				values(	sysdate,
					'bollaga',
					5900,
					'Nr. título: ' || nr_titulo_w || chr(13) || chr(10) ||
					'Nr. classif: ' || nr_seq_classif_atual_w || chr(13) || chr(10) ||
					'Vl. classif.: ' || vl_classif_atual_w || chr(13) || chr(10) ||
					'Cód conta financ.: ' || cd_conta_financ_atual_w || chr(13) || chr(10) ||
					'Vl. desconto: ' || vl_desconto_atual_w || chr(13) || chr(10) ||
					'Vl. original: ' || vl_original_atual_w || chr(13) || chr(10) ||
					'Cód. conta contábil ' || cd_conta_contabil_atual_w);
		end;
	end loop;
	close C04;
	*/
	select	coalesce(max(cd_conta_financ_cre),0)
	into STRICT	cd_conta_financ_cre_w
	from	parametro_fluxo_caixa
	where	cd_estabelecimento = cd_estabelecimento_w;

	select	vl_total_nota
	into STRICT	vl_total_nota_w
	from	nota_fiscal
	where	nr_sequencia	= nr_seq_nota_fiscal_w;

	delete	from titulo_receber_classif
	where	nr_titulo = nr_titulo_w;

	open C02;
	loop
	fetch C02 into
		vl_vencimento_w,
		dt_vencimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		vl_classif_total_w	:= 0;
		open c03;
		loop
		fetch c03 into
			cd_conta_contabil_w,
			cd_centro_custo_w,
			cd_conta_financ_w,
			vl_classificacao_w,
			nr_seq_contrato_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */

			select	count(*)
			into STRICT	qt_registros_w
			from	titulo_receber_classif
			where	nr_titulo	= nr_titulo_w
			and	cd_conta_contabil	= cd_conta_contabil_w
			and	cd_conta_financ	= cd_conta_financ_w;

			if (qt_registros_w = 0) then
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_classif_w
				from	titulo_receber_classif
				where	nr_titulo = nr_titulo_w;

				vl_classificacao_w	:= vl_classificacao_w * (vl_vencimento_w / vl_total_nota_w);

				insert into titulo_receber_classif(nr_titulo,
					nr_sequencia,
					vl_classificacao,
					dt_atualizacao,
					nm_usuario,
					cd_conta_financ,
					cd_centro_custo,
					vl_desconto,
					vl_original,
					nr_seq_contrato,
					cd_conta_contabil)
				values (nr_titulo_w,
					nr_seq_classif_w,
					vl_classificacao_w,
					clock_timestamp(),
					'TASY',
					cd_conta_financ_w,
					cd_centro_custo_w,
					0,
					vl_classificacao_w,
					nr_seq_contrato_w,
					cd_conta_contabil_w);
				vl_classif_total_w		:= vl_classificacao_w + vl_classif_total_w;
			end if;
		end loop;
		close c03;

		IF (vl_vencimento_w <> vl_classif_total_w) THEN
			/*insert into log_tasy(	DT_ATUALIZACAO,
						NM_USUARIO,
						CD_LOG,
						DS_LOG)
					values(	sysdate,
						'bollaga',
						5901,
						nr_titulo_w || ' - ' || vl_vencimento_w || ' - ' ||  vl_classif_total_w);*/
			UPDATE	titulo_receber_classif
			SET	vl_classificacao	= vl_classificacao + vl_vencimento_w - vl_classif_total_w,
				vl_original		= vl_original + vl_vencimento_w - vl_classif_total_w
			WHERE	nr_titulo		= nr_titulo_w
			AND	nr_sequencia		= nr_seq_classif_w;
		END IF;

		end;
	end loop;
	close C02;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_baca_nf_tit_mensalidade () FROM PUBLIC;

