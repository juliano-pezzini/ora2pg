-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_val_guia_med_prestador ( ie_insere_p INOUT text, ie_opcao_p text, nr_seq_prestador_p pls_prestador.nr_sequencia%type, ie_instituicao_acred_p text, ie_nivel_acreditacao_p text, ie_odontologico_p text, ie_filtro_carater_int_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: VALIDAR CONDIÇÕES DE PRESTADOR
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

	UTILIZAR O IE_OPCAO_P
	"IA" - Validação de instituição de acreditação
	"NA" - Validação de nível de acreditação
	"TO" - Validação de tipo odontológico
	"CI" - Validação de carater de internação (Atendimento)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_instituicao_acred_ptu_w	pls_prestador.ie_instituicao_acred_ptu%type;
ie_nivel_acreditacao_ptu_w	pls_prestador.ie_nivel_acreditacao_ptu%type;
qt_registro_w			integer := 0;


BEGIN
if (ie_opcao_p = 'IA') and (ie_instituicao_acred_p IS NOT NULL AND ie_instituicao_acred_p::text <> '') then
	ie_insere_p := 'S';

	select	max(ie_instituicao_acred_ptu)
	into STRICT	ie_instituicao_acred_ptu_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_p;

	if (ie_instituicao_acred_p <> ie_instituicao_acred_ptu_w) or (coalesce(ie_instituicao_acred_ptu_w::text, '') = '') then
		ie_insere_p := 'N';
	end if;

elsif (ie_opcao_p = 'NA') and (ie_nivel_acreditacao_p IS NOT NULL AND ie_nivel_acreditacao_p::text <> '') then
	ie_insere_p := 'S';

	select	max(ie_nivel_acreditacao_ptu)
	into STRICT	ie_nivel_acreditacao_ptu_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_p;

	if (ie_nivel_acreditacao_p <> ie_nivel_acreditacao_ptu_w) or (coalesce(ie_nivel_acreditacao_ptu_w::text, '') = '') then
		ie_insere_p := 'N';
	end if;

elsif (ie_opcao_p = 'TO') and (ie_odontologico_p IS NOT NULL AND ie_odontologico_p::text <> '') then
	ie_insere_p := 'S';

	-- Tipos adicionais , tipo prestadores, ie_odontologico_p = 'S' apenas  odontológicos, 'N' não odontológicos,  'T' todos tipos
	if (ie_odontologico_p <> 'T') then
		select	count(1)
		into STRICT	qt_registro_w
		FROM pls_prestador x
LEFT OUTER JOIN pls_tipo_prestador y ON (x.nr_seq_tipo_prestador = y.nr_sequencia)
WHERE x.nr_sequencia		= nr_seq_prestador_p and y.ie_odontologico	= ie_odontologico_p;

		if (qt_registro_w = 0) then
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_tipo_prestador y,
				pls_prestador_tipo x
			where	x.nr_seq_tipo		= y.nr_sequencia
			and	x.nr_seq_prestador	= nr_seq_prestador_p
			and	y.ie_odontologico	= ie_odontologico_p;
		end if;

		if (qt_registro_w = 0) then
			ie_insere_p := 'N';
		end if;

	end if;

elsif (ie_opcao_p = 'CI') and (ie_filtro_carater_int_p IS NOT NULL AND ie_filtro_carater_int_p::text <> '') then
	ie_insere_p := 'S';

	if (ie_filtro_carater_int_p <> '0') then
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_prestador_car_int	z
		where	z.nr_seq_prestador	= nr_seq_prestador_p
		and	z.ie_carater_internacao	= ie_filtro_carater_int_p;

		if (qt_registro_w = 0) then
			ie_insere_p := 'N';
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_val_guia_med_prestador ( ie_insere_p INOUT text, ie_opcao_p text, nr_seq_prestador_p pls_prestador.nr_sequencia%type, ie_instituicao_acred_p text, ie_nivel_acreditacao_p text, ie_odontologico_p text, ie_filtro_carater_int_p text) FROM PUBLIC;

