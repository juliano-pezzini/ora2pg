-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_opme ( nr_interno_conta_p bigint, cd_opm_p bigint, qt_gerar_p bigint, nm_usuario_p text, cd_material_p bigint) AS $body$
DECLARE


cd_opm_w		bigint;
ie_origem_proc_opm_w	bigint;
cd_material_w		bigint;
qt_max_opm_w		integer	:= 0;
qt_gerar_w		integer	:= 0;
qt_executado_w		integer	:= 0;
nr_seq_proc_real_w	bigint;
nr_sequencia_ww		bigint;
nr_seq_lote_fornec_w	bigint;
nr_nota_fiscal_w	material_lote_fornec.nr_nota_fiscal%type;
cd_cgc_fornec_w		material_lote_fornec.cd_cgc_fornec%type;
cd_estabelecimento_w	integer;
ds_lote_fornec_w	material_lote_fornec.ds_lote_fornec%type;
ie_proc_pronc_w		varchar(10) := 'N';
nr_seq_proc_princ_w	bigint;
ie_mantem_setor_mat_w	varchar(10) := 'N';
cd_setor_atendimento_w	integer;
ie_obter_prest_mat_w	varchar(10) := 'N';
cd_cgc_prestador_w	varchar(14);
cd_procedimento_real_w	bigint;
ie_sem_aih_laudo_w	varchar(15) := 'N';
nr_seq_marca_w		material_lote_fornec.nr_seq_marca%type;
nr_reg_anvisa_w		sus_aih_opm.nr_reg_anvisa%type;
ie_reg_anv_marca_w	varchar(15) := 'N';
ie_dados_lot_forn_w	varchar(15) := 'N';
ie_operacao_nota_w	varchar(255) := 'X';
nr_sequencia_nf_w	material_lote_fornec.nr_sequencia_nf%type;
qt_nota_oper_w		bigint := 0;


BEGIN

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;

ie_proc_pronc_w		:= coalesce(obter_valor_param_usuario(1123, 38, obter_perfil_ativo, nm_usuario_p,coalesce(cd_estabelecimento_w,0)),'N');
ie_dados_lot_forn_w	:= coalesce(Obter_Valor_Param_Usuario(1123, 55, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estabelecimento_w,0)),'N');
ie_mantem_setor_mat_w	:= coalesce(obter_valor_param_usuario(1123, 128, obter_perfil_ativo, nm_usuario_p,coalesce(cd_estabelecimento_w,0)),'N');
ie_obter_prest_mat_w	:= coalesce(obter_valor_param_usuario(1123, 173, obter_perfil_ativo, nm_usuario_p,coalesce(cd_estabelecimento_w,0)),'N');
ie_sem_aih_laudo_w	:= coalesce(obter_valor_param_usuario(1123, 228, obter_perfil_ativo, nm_usuario_p,coalesce(cd_estabelecimento_w,0)),'N');
ie_reg_anv_marca_w	:= coalesce(obter_valor_param_usuario(1123, 238, obter_perfil_ativo, nm_usuario_p,coalesce(cd_estabelecimento_w,0)),'N');
ie_operacao_nota_w	:= coalesce(obter_valor_param_usuario(1123, 239, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estabelecimento_w,0)),'X');

begin
cd_procedimento_real_w	:= (coalesce(Sus_Obter_Proced_Aih_Unif(nr_interno_conta_p,2,'C'),'0'))::numeric;
exception
when others then
	cd_procedimento_real_w := 0;
end;

if (cd_procedimento_real_w = 0) then
	begin	
	begin
	select	cd_procedimento_solic
	into STRICT	cd_procedimento_real_w
	from	sus_laudo_paciente
	where	nr_seq_interno = (	SELECT	max(x.nr_seq_interno)
					from	sus_laudo_paciente x
					where	x.nr_interno_conta	= nr_interno_conta_p
					and	x.ie_classificacao 	= 1
					and	x.ie_tipo_laudo_sus in (0,1));	
	exception
	when others then
		cd_procedimento_real_w := 0;
	end;	
	end;
end if;

cd_material_w	:= cd_material_p;

if (cd_opm_p > 0) and (qt_gerar_p > 0) then
	
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_proc_real_w
	from	procedimento_paciente
	where	cd_procedimento = cd_procedimento_real_w
	and	nr_interno_conta	= nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = '';
	
	if (nr_seq_proc_real_w = 0) and (ie_sem_aih_laudo_w = 'S') then
		begin
		
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_proc_real_w
		from	procedimento_paciente
		where	nr_interno_conta	= nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	ie_origem_proced	= 7;
		
		end;
	end if;
	
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_proc_princ_w
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''             
	and	((cd_procedimento_real_w = cd_procedimento and 
		Sus_Obter_se_Proc_Compativel(cd_opm_p,7,cd_procedimento) = 'S') or (Sus_Obter_se_Proc_Compativel(cd_opm_p,7,cd_procedimento) = 'S'));

	if (nr_seq_proc_real_w > 0) then
		nr_sequencia_ww := Duplicar_Proc_Paciente(nr_seq_proc_real_w, nm_usuario_p, nr_sequencia_ww);
		
		if (coalesce(ie_obter_prest_mat_w,'N') = 'S') then
			
			begin
			select	max(cd_cgc_prestador)
			into STRICT	cd_cgc_prestador_w
			from	material_atend_paciente
			where	nr_interno_conta	= nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	cd_material		= cd_material_w;
			exception
			when others then
				cd_cgc_prestador_w := null;
			end;			
			
		end if;		
		
		update	procedimento_paciente
		set	cd_procedimento		= cd_opm_p,
			cd_medico_executor	 = NULL,
			cd_pessoa_fisica	 = NULL,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ds_observacao		= Wheb_mensagem_pck.get_Texto(301534), /*'G.AIH - sus_gerar_opme',*/
			qt_procedimento		= qt_gerar_p,
			cd_cbo			 = NULL,
			nr_seq_proc_interno	 = NULL,
			nr_seq_proc_princ	= CASE WHEN ie_proc_pronc_w='S' THEN CASE WHEN nr_seq_proc_princ_w=0 THEN null  ELSE nr_seq_proc_princ_w END   ELSE null END ,
			cd_cgc_prestador	= coalesce(cd_cgc_prestador_w,cd_cgc_prestador),
			nr_seq_servico		 = NULL,
			nr_seq_servico_classif	 = NULL,
			nr_seq_exame		 = NULL,
			nr_prescricao		 = NULL,
			dt_prescricao		 = NULL,
			nr_sequencia_prescricao	 = NULL
		where	nr_sequencia		= nr_sequencia_ww;
	
		if (coalesce(ie_dados_lot_forn_w,'N') = 'S') then
			begin
			if (coalesce(cd_material_w,0) = 0) then
				select	b.cd_material
				into STRICT	cd_material_w
				from	sus_material_opm	b,
					sus_proc_compativel	a
				where	a.cd_proc_principal	= cd_procedimento_real_w
				and	a.cd_proc_secundario	= b.cd_procedimento
				and	a.ie_origem_proc_sec	= b.ie_origem_proced
				and	a.cd_proc_secundario	= cd_opm_p
				and	a.ie_tipo_compatibilidade in (1,4,5)
				and	Obter_Qtmax_Procedimento(a.cd_proc_secundario,a.ie_origem_proc_sec)	>=
						coalesce(Obter_Qt_Procedimento_Conta(nr_interno_conta_p, a.cd_proc_secundario, a.ie_origem_proc_sec),0)
				and	0 <= coalesce(Obter_Qt_Material_Conta(nr_interno_conta_p, b.cd_material),0);
			end if;
			
			select	coalesce(max(nr_seq_lote_fornec),0)
			into STRICT	nr_seq_lote_fornec_w
			from	material_atend_paciente
			where	nr_interno_conta	= nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	cd_material		= cd_material_w;
			
			select	coalesce(max(nr_nota_fiscal),0),
				max(cd_cgc_fornec),
				max(ds_lote_fornec),						
				coalesce(max(nr_seq_marca),0),
				max(nr_sequencia_nf)
			into STRICT	nr_nota_fiscal_w, --20 tab 255
				cd_cgc_fornec_w,
				ds_lote_fornec_w,
				nr_seq_marca_w,
				nr_sequencia_nf_w
			from	material_lote_fornec
			where	nr_sequencia	= nr_seq_lote_fornec_w;
					
			if (nr_seq_marca_w > 0) and (ie_reg_anv_marca_w = 'S') then
				nr_reg_anvisa_w	:= substr(obter_reg_anvisa_mat(cd_estabelecimento_w, cd_material_w, nr_seq_marca_w, 'RA'),1,20);
			else
				nr_reg_anvisa_w := substr(obter_dados_material_estab(cd_material_w,cd_estabelecimento_w,'RA'),1,20);
			end if;
			
			if (coalesce(ie_operacao_nota_w,'X') <> 'X') and (coalesce(nr_sequencia_nf_w,0) <> 0)then
				begin
				
				begin
				select	count(1)
				into STRICT	qt_nota_oper_w
				from	nota_fiscal
				where	nr_sequencia = nr_sequencia_nf_w
				and	obter_se_contido(cd_operacao_nf,ie_operacao_nota_w) = 'S'  LIMIT 1;						
				exception
				when others then
					qt_nota_oper_w := 1;
				end;
				
				if (qt_nota_oper_w = 0) then
					nr_nota_fiscal_w := '0';
				end if;
				
				end;
			end if;
			
			insert	into sus_aih_opm(	nr_sequencia,
							nr_seq_procedimento,
							nr_nota_fiscal,
							dt_atualizacao,
							nm_usuario,       
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_lote,
							nr_serie,
							cd_cgc_fabricante,
							nr_reg_anvisa)
				values (	nextval('sus_aih_opm_seq'),
							nr_sequencia_ww,
							substr(nr_nota_fiscal_w,1,20),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							ds_lote_fornec_w,
							null,
							cd_cgc_fornec_w,
							nr_reg_anvisa_w);
								
			end;
		end if;
		
		if (ie_mantem_setor_mat_w = 'S') then
			begin
			
			begin
			select	coalesce(max(cd_setor_atendimento),0)
			into STRICT	cd_setor_atendimento_w
			from	material_atend_paciente
			where	nr_interno_conta	= nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	cd_material		= cd_material_w;
			exception
				when others then
				cd_setor_atendimento_w := 0;
				end;
			
			if (cd_setor_atendimento_w <> 0) then
				begin
				
				update	procedimento_paciente
				set	cd_setor_atendimento	= cd_setor_atendimento_w
				where	nr_sequencia		= nr_sequencia_ww;
				
				end;
			end if;
			end;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_opme ( nr_interno_conta_p bigint, cd_opm_p bigint, qt_gerar_p bigint, nm_usuario_p text, cd_material_p bigint) FROM PUBLIC;

