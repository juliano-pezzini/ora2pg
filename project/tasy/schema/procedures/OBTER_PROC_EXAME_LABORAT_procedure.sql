-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_proc_exame_laborat (cd_exame_p text, cd_convenio_p bigint, cd_estabelecimento_p bigint, cd_categoria_p text, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, nr_seq_exame_p INOUT bigint, ie_tipo_atendimento_p bigint, dt_conta_p timestamp default null, nr_seq_material_p bigint default null) AS $body$
DECLARE


nr_seq_convenio_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_exame_w			bigint;
ie_prioridade_edicao_w		varchar(01);
IE_PRIORIDADE_AJUSTE_PROC_w	varchar(01);
CD_EDICAO_AMB_W		bigint;
VL_CH_HONORARIOS_W		double precision	:= 1;
VL_CH_CUSTO_OPER_W		double precision	:= 1;
VL_M2_FILME_W			double precision	:= 0;
tx_ajuste_geral_w			double precision	:= 1;
dt_inicio_vigencia_w		timestamp;
cd_proc_exame_w			bigint;
ie_origem_proc_exame_w		bigint;
nr_seq_exame_proc_w		bigint;
cd_categoria_w			varchar(10);
nr_seq_cbhpm_edicao_w		bigint;
ie_tipo_convenio_w			integer;
ie_origem_proced_sus_w		bigint;
ie_origem_proced_cursor_w		bigint;
ie_origem_proc_filtro_w		bigint;
cd_edicao_ajuste_w		integer;
cd_convenio_glosa_ww		integer;
cd_categoria_glosa_ww		varchar(10);
nr_seq_ajuste_proc_ww		bigint;
ie_autor_particular_w		varchar(1);
ie_preco_informado_w		varchar(10);
ie_glosa_w			varchar(10);
vl_retorno_w			double precision;
dt_vigencia_w			timestamp;
ie_data_exame_lab_w		varchar(1);
ie_exame_lab_conv_w		varchar(1);
ie_prioridade_conv_w		bigint;
dt_inicio_vig_conv_w		timestamp;
cd_edicao_amb_prior_w		integer;
ie_encontrou_edicao_w		varchar(1);
qt_proc_edicao_w		bigint;
ie_regra_prior_edicao_w		varchar(3);
nr_seq_proc_conv_w		bigint;
nr_seq_material_w		bigint := 0;


c01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	exame_lab_convenio A,
		exame_laboratorio b
	where	coalesce(a.cd_convenio, cd_convenio_p)		= cd_convenio_p
	and	coalesce(a.cd_categoria, cd_categoria_w)		= cd_categoria_w
	and	coalesce(a.cd_edicao_amb, coalesce(cd_edicao_amb_w,0)) 	= coalesce(cd_edicao_amb_w,0)
	and	a.nr_seq_exame					= b.nr_seq_exame
	and	coalesce(a.nr_seq_material, coalesce(nr_seq_material_w,0))	= coalesce(nr_seq_material_w,0)
	and	b.cd_exame					= cd_exame_p
	and	coalesce(a.ie_tipo_convenio,ie_tipo_convenio_w) = ie_tipo_convenio_w
	and	coalesce(dt_inicio_vigencia,dt_vigencia_w) <= dt_vigencia_w
	and	coalesce(dt_fim_vigencia,dt_vigencia_w) 	>= dt_vigencia_w
	and	coalesce(a.ie_situacao,'A') 		= 'A'
	and	coalesce(a.ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p,0)) = coalesce(ie_tipo_atendimento_p,0)
	and	((((ie_origem_proced_sus_w	not in (2,3))  or (a.ie_origem_proced = ie_origem_proced_sus_w)) and (coalesce(a.ie_origem_proced_regra::text, '') = '')) or
		(a.ie_origem_proced_regra IS NOT NULL AND a.ie_origem_proced_regra::text <> '' AND a.ie_origem_proced_regra = ie_origem_proced_cursor_w))
	and ((a.ie_origem_proc_filtro = ie_origem_proc_filtro_w) or (coalesce(a.ie_origem_proc_filtro::text, '') = ''))
	order by coalesce(cd_categoria,0),
		coalesce(cd_convenio, 0),
		coalesce(cd_edicao_amb, 0),
		coalesce(a.ie_tipo_convenio,0),
		coalesce(a.nr_seq_material,0),
		coalesce(dt_inicio_vigencia,dt_vigencia_w);

c02 CURSOR FOR
	SELECT	x.ie_prioridade,
		x.dt_inicio_vigencia,
		x.cd_edicao_amb
	from	edicao_amb y,
		convenio_amb x
	where	x.cd_edicao_amb = y.cd_edicao_amb
	and	x.cd_estabelecimento = cd_estabelecimento_p
	and	x.cd_convenio = cd_convenio_p
	and	((x.cd_categoria = coalesce(cd_categoria_p,cd_categoria)) or (coalesce(cd_categoria_p,'0') = '0'))
	and	coalesce(x.ie_situacao,'A')	= 'A'
	and	ie_regra_prior_edicao_w	= 'DT'
	and	(x.dt_inicio_vigencia =	(SELECT	max(dt_inicio_vigencia)
					from	convenio_amb a
					where	a.cd_estabelecimento = cd_estabelecimento_p
					and	a.cd_convenio = cd_convenio_p
					and	((a.cd_categoria = coalesce(cd_categoria_p,cd_categoria)) or (coalesce(cd_categoria_p,'0') = '0'))
					and	coalesce(a.ie_situacao,'A')= 'A'
					and	dt_vigencia_w between a.dt_inicio_vigencia and coalesce(a.dt_final_vigencia,dt_vigencia_w)))
	
union

	select 	x.ie_prioridade,
		x.dt_inicio_vigencia,
		x.cd_edicao_amb
	from	edicao_amb y,
		convenio_amb x
	where	x.cd_edicao_amb = y.cd_edicao_amb
	and	x.cd_estabelecimento = cd_estabelecimento_p
	and	x.cd_convenio = cd_convenio_p
	and	((x.cd_categoria = coalesce(cd_categoria_p,cd_categoria)) or (coalesce(cd_categoria_p,'0') = '0'))
	and 	coalesce(x.ie_situacao,'A')	= 'A'
	and	ie_regra_prior_edicao_w	= 'PR'
	and	((coalesce(x.dt_final_vigencia::text, '') = '') or (dt_vigencia_w <= x.dt_final_vigencia))
	order by	1, 2;


BEGIN

cd_categoria_w	:= cd_categoria_p;
dt_vigencia_w	:= clock_timestamp();

select	MAX(cd_procedimento),
	max(ie_origem_proced),
	max(nr_seq_exame)
into STRICT	cd_proc_exame_w,
	ie_origem_proc_exame_w,
	nr_seq_exame_proc_w
from	exame_laboratorio
where	cd_exame	= cd_exame_p;

nr_seq_material_w:= coalesce(nr_seq_material_p,0);


if (coalesce(cd_categoria_w::text, '') = '') then
	select	coalesce(min(cd_categoria), '0')
	into STRICT	cd_categoria_w
	from 	categoria_convenio
	where 	cd_convenio	= cd_convenio_p;
end if;

select 	max(ie_tipo_convenio)
into STRICT	ie_tipo_convenio_w
from 	convenio
where 	cd_convenio = cd_convenio_p;

ie_origem_proced_sus_w	:= obter_origem_proced_cat(cd_estabelecimento_p, ie_tipo_atendimento_p, ie_tipo_convenio_w, cd_convenio_p, cd_categoria_p);
ie_origem_proc_filtro_w	:= ie_origem_proced_sus_w;

select	coalesce(max(ie_prioridade_edicao_amb), 'N'),
	coalesce(max(IE_PRIORIDADE_AJUSTE_PROC), 'N'),
	coalesce(max(ie_data_exame_lab),'N'),
	coalesce(max(ie_exame_lab_conv),'N')
into STRICT	ie_prioridade_edicao_w,
	IE_PRIORIDADE_AJUSTE_PROC_w,
	ie_data_exame_lab_w,
	ie_exame_lab_conv_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_p;

select	coalesce(max(ie_regra_prior_edicao), 'DT')
into STRICT	ie_regra_prior_edicao_w
from	convenio_estabelecimento
where	cd_estabelecimento = cd_estabelecimento_p
and	cd_convenio = cd_convenio_p;

if (ie_data_exame_lab_w = 'S') then
	dt_vigencia_w	:= trunc(coalesce(dt_conta_p,clock_timestamp()));
end if;

if (ie_prioridade_edicao_w = 'N') then
	SELECT	coalesce(max(CD_EDICAO_AMB),0)
	INTO STRICT	CD_EDICAO_AMB_W
	FROM 	CONVENIO_AMB
	WHERE (CD_ESTABELECIMENTO     = cd_estabelecimento_p)
	AND (CD_CONVENIO            = cd_convenio_p)
	AND (coalesce(IE_SITUACAO,'A')   = 'A')
	AND 	(DT_INICIO_VIGENCIA     =
			(SELECT	MAX(DT_INICIO_VIGENCIA)
			FROM 	CONVENIO_AMB A
			WHERE (A.CD_ESTABELECIMENTO  	= cd_estabelecimento_p)
			AND (A.CD_CONVENIO         	= CD_CONVENIO_p)
			AND (coalesce(A.IE_SITUACAO,'A')	= 'A')
			AND (A.DT_INICIO_VIGENCIA 	<=  dt_vigencia_w)));
else

	if (ie_exame_lab_conv_w = 'S') then

		ie_encontrou_edicao_w	:= 'N';

		open C02;
		loop
		fetch C02 into
			ie_prioridade_conv_w,
			dt_inicio_vig_conv_w,
			cd_edicao_amb_prior_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			select	count(*)
			into STRICT	qt_proc_edicao_w
			from	exame_lab_convenio
			where	nr_seq_exame = nr_seq_exame_proc_w
			and	cd_edicao_amb = cd_edicao_amb_prior_w;

			if (qt_proc_edicao_w > 0) and (ie_encontrou_edicao_w = 'N') then
				ie_encontrou_edicao_w	:= 'S';

				select	max(nr_sequencia)
				into STRICT	nr_seq_proc_conv_w
				from	exame_lab_convenio
				where	nr_seq_exame = nr_seq_exame_proc_w
				and	cd_edicao_amb = cd_edicao_amb_prior_w;

				select	coalesce(max(cd_procedimento),cd_procedimento_w),
					coalesce(max(ie_origem_proced),ie_origem_proced_w)
				into STRICT	cd_proc_exame_w,
					ie_origem_proced_w
				from	exame_lab_convenio
				where	nr_sequencia = nr_seq_proc_conv_w
				and	nr_seq_exame = nr_seq_exame_proc_w;
			end if;

			end;
		end loop;
		close C02;

	end if;

	SELECT * FROM Obter_Edicao_Proc_Conv(cd_estabelecimento_p, CD_CONVENIO_p, cd_categoria_w, dt_vigencia_w, cd_proc_exame_w, CD_EDICAO_AMB_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT CD_EDICAO_AMB_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;

	if (coalesce(cd_edicao_amb_w,0) = 0) then
		SELECT	coalesce(max(CD_EDICAO_AMB),0)
		INTO STRICT	CD_EDICAO_AMB_W
		FROM 	CONVENIO_AMB
		WHERE (CD_ESTABELECIMENTO     = cd_estabelecimento_p)
		AND (CD_CONVENIO            = cd_convenio_p)
		AND (coalesce(IE_SITUACAO,'A')   = 'A')
		AND 	(DT_INICIO_VIGENCIA     =
			(SELECT	MAX(DT_INICIO_VIGENCIA)
			FROM 	CONVENIO_AMB A
			WHERE (A.CD_ESTABELECIMENTO  	= cd_estabelecimento_p)
			AND (A.CD_CONVENIO         	= CD_CONVENIO_p)
			AND (coalesce(A.IE_SITUACAO,'A')	= 'A')
			AND (A.DT_INICIO_VIGENCIA 	<=  dt_vigencia_w)));
	end if;
end if;

begin
SELECT * FROM obter_regra_ajuste_proc(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_procedimento_w, ie_origem_proced_w, null, dt_vigencia_w, 0, 0, 0, null, 0, 0, nr_seq_exame_proc_w, null, null, null, null, null, null, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_preco_informado_w, ie_glosa_w, vl_retorno_w, vl_retorno_w, cd_edicao_ajuste_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, null, 0, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, null, null, null, null, null, null, null, null, vl_retorno_w, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_preco_informado_w, ie_glosa_w, vl_retorno_w, vl_retorno_w, cd_edicao_ajuste_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, vl_retorno_w;
exception
when others then
	cd_edicao_ajuste_w	:= 0;
end;

if (cd_edicao_ajuste_w IS NOT NULL AND cd_edicao_ajuste_w::text <> '') and (cd_edicao_ajuste_w <> 0) then
	cd_edicao_amb_w		:= cd_edicao_ajuste_w;
end if;

/*begin
select	nvl(c.cd_procedimento, a.cd_procedimento),
	nvl(c.ie_origem_proced, a.ie_origem_proced),
	a.nr_seq_exame
into	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_exame_w
from	procedimento b,
	exame_lab_convenio c,
	exame_laboratorio a
where	a.cd_procedimento		  = b.cd_procedimento
and	a.ie_origem_proced	     	  = b.ie_origem_proced
and	a.nr_seq_exame		  	  = c.nr_seq_exame (+)
and	nvl(c.cd_convenio, cd_convenio_p) = cd_convenio_p
and	nvl(c.cd_edicao_amb, nvl(cd_edicao_amb_w,0)) = nvl(cd_edicao_amb_w,0)
and	a.cd_exame		= cd_exame_p;
exception
	when others then
	cd_procedimento_w	:= cd_proc_exame_w;
	ie_origem_proced_w	:= ie_origem_proc_exame_w;
	nr_seq_exame_w		:= nr_seq_exame_proc_w;
end; Bruna comentado 17/12 OS76341*/
select	max(ie_origem_proced)
into STRICT	ie_origem_proced_cursor_w
from	edicao_amb
where	cd_edicao_amb	= cd_edicao_amb_w;

if (coalesce(ie_origem_proced_cursor_w::text, '') = '') then
	ie_origem_proced_cursor_w := ie_origem_proced_sus_w;
end if;

open c01;
loop
	fetch c01 into nr_seq_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

if (nr_seq_convenio_w IS NOT NULL AND nr_seq_convenio_w::text <> '') then
	begin
	select	MAX(a.cd_procedimento),
		MAX(a.ie_origem_proced),
		MAX(a.nr_seq_exame)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_exame_w
	from	procedimento b,
		exame_lab_convenio a
	where	a.nr_seq_exame		= nr_seq_exame_proc_w
	and	a.cd_procedimento	= b.cd_procedimento
	and	a.ie_origem_proced	= b.ie_origem_proced
	and	a.nr_sequencia		= nr_seq_convenio_w;
	end;
else
	cd_procedimento_w	:= cd_proc_exame_w;
	ie_origem_proced_w	:= ie_origem_proc_exame_w;
	nr_seq_exame_w		:= nr_seq_exame_proc_w;
end if;



cd_procedimento_p		:= cd_procedimento_w;
ie_origem_proced_p		:= ie_origem_proced_w;
nr_seq_exame_p			:= nr_seq_exame_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_proc_exame_laborat (cd_exame_p text, cd_convenio_p bigint, cd_estabelecimento_p bigint, cd_categoria_p text, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, nr_seq_exame_p INOUT bigint, ie_tipo_atendimento_p bigint, dt_conta_p timestamp default null, nr_seq_material_p bigint default null) FROM PUBLIC;

