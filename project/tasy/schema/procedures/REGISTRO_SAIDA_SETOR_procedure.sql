-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registro_saida_setor ( nr_seq_interno_p bigint, dt_saida_p timestamp, nm_usuario_p text) AS $body$
DECLARE


qt_reg_w				integer;
cd_estabelecimento_w	smallint;
qt_reg_saida_setor_w	smallint;
qt_regra_w				smallint;
nr_atendimento_w		bigint;
nr_seq_interno_w		bigint;
cd_setor_atendimento_w	bigint;
ie_saida_internacao_w	varchar(1);
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
dt_saida_w				timestamp;


BEGIN

dt_saida_w := coalesce(dt_saida_p,clock_timestamp());

select 	MAX(cd_estabelecimento),
		MAX(a.cd_setor_atendimento),
		MAX(a.cd_unidade_basica),
		MAX(a.cd_unidade_compl)
into STRICT	cd_estabelecimento_w,
		cd_setor_atendimento_w,
		cd_unidade_basica_w,
		cd_unidade_compl_w
from	setor_atendimento b,
		atend_paciente_unidade a
where	a.cd_setor_atendimento = b.cd_setor_atendimento
and		a.nr_seq_interno	= nr_seq_interno_p;


ie_saida_internacao_w := Obter_Param_Usuario(3111, 66, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_saida_internacao_w);


select count(*)
into STRICT	qt_reg_w
from	setor_atendimento b,
		atend_paciente_unidade a
where	a.cd_setor_atendimento = b.cd_setor_atendimento
and		b.cd_classif_setor in (2,5)
and		a.nr_seq_interno	= nr_seq_interno_p;

if (ie_saida_internacao_w = 'S') and (qt_reg_w = 0)	 then

	select 	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	atend_paciente_unidade
	where	nr_seq_interno	= nr_seq_interno_p;

	select 	count(*)
	into STRICT	qt_reg_saida_setor_w
	from	setor_atendimento b,
			atend_paciente_unidade a
	where	a.cd_setor_atendimento = b.cd_setor_atendimento
	and		coalesce(dt_saida_unidade::text, '') = ''
	and		a.nr_seq_interno	<> nr_seq_interno_p
	and		a.nr_atendimento	= nr_atendimento_w;

	if (qt_reg_saida_setor_w > 0) then

		select 	count(*)
		into STRICT    qt_regra_w
		from	regra_saida_setor_int;

		if (qt_regra_w > 0) then

			select 	count(*)
			into STRICT	qt_reg_w
			from	regra_saida_setor_int c,
					setor_atendimento b,
					atend_paciente_unidade a
			where	a.cd_setor_atendimento = b.cd_setor_atendimento
			and		c.cd_setor_atendimento = b.cd_setor_atendimento
			and		b.cd_classif_setor in (4,3,1)
			and		a.nr_seq_interno	= nr_seq_interno_p;	

		else
			select 	count(*)
			into STRICT	qt_reg_w
			from	setor_atendimento b,
					atend_paciente_unidade a
			where	a.cd_setor_atendimento = b.cd_setor_atendimento
			and		b.cd_classif_setor in (4,3,1)
			and		a.nr_seq_interno	= nr_seq_interno_p;	
		end if;
	else
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(213742);
	end if;
end if;

if (qt_reg_w > 0) then
							
	update	atend_paciente_unidade
	set		dt_saida_unidade	= dt_saida_w,
			nm_usuario			= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
	where	nr_seq_interno		= nr_seq_interno_p;
	
	select	max(nr_seq_interno)
	into STRICT	nr_seq_interno_w
	from	unidade_atendimento
	where	cd_unidade_basica		= cd_unidade_basica_w
	and		cd_unidade_compl		= cd_unidade_compl_w
	and		cd_setor_atendimento	= cd_setor_atendimento_w;
	
	if (nr_seq_interno_w IS NOT NULL AND nr_seq_interno_w::text <> '') then
		CALL gerar_higienizacao_leito_unid(dt_saida_w, nm_usuario_p, cd_estabelecimento_w, 'RSS', nr_seq_interno_w, null, null);
	end if;
	
	if (coalesce(cd_estabelecimento_w,0) > 0) and (coalesce(nr_atendimento_w,0) > 0) then
		update	ap_lote
		set		cd_setor_ant = cd_setor_atendimento_w
		where	ie_status_lote = 'G'
		and		obter_atendimento_prescr(nr_prescricao) = nr_atendimento_w
		and		dt_geracao_lote > (clock_timestamp() - interval '30 days');
	end if;
	
	commit;
	
	CALL call_bifrost_content('patient.transfer','encounter_json_pck.get_transf_message_clob('||nr_seq_interno_p||')', nm_usuario_p);
	CALL susp_itens_prescr_transfer(nr_seq_interno_p, nm_usuario_p);
else
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(213743);
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registro_saida_setor ( nr_seq_interno_p bigint, dt_saida_p timestamp, nm_usuario_p text) FROM PUBLIC;

