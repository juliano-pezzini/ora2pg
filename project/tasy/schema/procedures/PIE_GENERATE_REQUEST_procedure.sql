-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pie_generate_request ( nr_seq_message_p pie_message.nr_sequencia%type default null, nr_professional_p pie_message_request.nr_professional_requested%type DEFAULT NULL, nr_professional_list_p text DEFAULT NULL, nr_seq_pie_rule_p pie_message.nr_seq_pie_rule%type default null, cd_estabelecimento_p bigint DEFAULT NULL, ds_bifrost_flow_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, nr_seq_msg_generated_p INOUT pie_message.nr_sequencia%type DEFAULT NULL) AS $body$
DECLARE

	ds_param_integ_res_w 	text;
	pie_message_seq_w	pie_message.nr_sequencia%type;
	json_request_w		varchar(4000);
	nr_professional_w	pie_message_request.nr_professional_requested%type;
	count_w			smallint:=0;WITH RECURSIVE cte AS (

	
	c01 CURSOR FOR
	SELECT trim(both substr(regexp_substr(nr_professional_list_p, '[^,]+', 1, level),22, length(regexp_substr(nr_professional_list_p, '[^,]+', 1, level))-23))
	
	instr(nr_professional_list_p, ',', 1, level - 1) > 0  UNION ALL

	
	c01 CURSOR FOR
	SELECT trim(both substr(regexp_substr(nr_professional_list_p, '[^,]+', 1, level),22, length(regexp_substr(nr_professional_list_p, '[^,]+', 1, level))-23))
	
	instr(nr_professional_list_p, ',', 1, level - 1) > 0 JOIN cte c ON ()

) SELECT * FROM cte;
;
	

BEGIN
	
	if ((nr_professional_p IS NOT NULL AND nr_professional_p::text <> '') 
	and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '')
	and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> ''))  then 
	
		if (coalesce(nr_seq_message_p::text, '') = '') then
		
		select 	nextval('pie_message_seq') 
		into STRICT 	pie_message_seq_w
		;
		
			insert into pie_message( nr_sequencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_atualizacao,
				nm_usuario,
				ds_method,
				nr_seq_pie_rule
				)
				values ( pie_message_seq_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'searchRequest',
				nr_seq_pie_rule_p
				);
					
			insert into pie_message_request( nr_sequencia,
				nr_professional_requested,
				nr_seq_message
				)
				values ( nextval('pie_message_request_seq'),
				nr_professional_p,
				pie_message_seq_w
				);
		else
		
			insert into pie_message_request( nr_sequencia,
				nr_professional_requested,
				nr_seq_message
				)
				values ( nextval('pie_message_request_seq'),
				nr_professional_p,
				nr_seq_message_p
				);
		end if;
	commit;
	json_request_w := '{"professionallist":[{'||'"professionnumber":"'||nr_professional_p||'"}],"messageid":"'||coalesce(nr_seq_message_p,pie_message_seq_w)||'"}';
	begin
		ds_param_integ_res_w := bifrost.send_integration_content(ds_bifrost_flow_p, json_request_w, nm_usuario_p);
	exception
		when others then
		rollback;
	end;
	nr_seq_msg_generated_p:= coalesce(nr_seq_message_p,pie_message_seq_w);
	else
		if((nr_professional_list_p IS NOT NULL AND nr_professional_list_p::text <> '')
		and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '')
		and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '')) then
		
			if (coalesce(nr_seq_message_p::text, '') = '') then
		
			select 	nextval('pie_message_seq') 
			into STRICT 	pie_message_seq_w
			;
		
			insert into pie_message( nr_sequencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_atualizacao,
				nm_usuario,
				ds_method,
				nr_seq_pie_rule
				)
				values ( pie_message_seq_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'searchRequest',
				nr_seq_pie_rule_p
				);
				
				open c01;
				loop
				fetch c01 into nr_professional_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
				
				count_w := count_w + 1;
				if ( count_w = c01%ROWCOUNT) then
					nr_professional_w := substr(nr_professional_w, 1, length(nr_professional_w));
				end if;
				
				insert into pie_message_request( nr_sequencia,
					nr_professional_requested,
					nr_seq_message
					)
					values ( nextval('pie_message_request_seq'),
					nr_professional_w,
					pie_message_seq_w
					);
				end loop;
				close c01;
			end if;
			commit;
			json_request_w := '{"professionallist":['||nr_professional_list_p||'],"messageid":"'||coalesce(nr_seq_message_p,pie_message_seq_w)||'"}';
			begin
				ds_param_integ_res_w := bifrost.send_integration_content(ds_bifrost_flow_p, json_request_w, nm_usuario_p);
				CALL create_pie_update_message(coalesce(nr_seq_message_p,pie_message_seq_w), nm_usuario_p => nm_usuario_p,cd_estabelecimento_p => cd_estabelecimento_p);
			exception
				when others then
				rollback;
			end;
			nr_seq_msg_generated_p:= coalesce(nr_seq_message_p,pie_message_seq_w);
		end if;
	end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pie_generate_request ( nr_seq_message_p pie_message.nr_sequencia%type default null, nr_professional_p pie_message_request.nr_professional_requested%type DEFAULT NULL, nr_professional_list_p text DEFAULT NULL, nr_seq_pie_rule_p pie_message.nr_seq_pie_rule%type default null, cd_estabelecimento_p bigint DEFAULT NULL, ds_bifrost_flow_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, nr_seq_msg_generated_p INOUT pie_message.nr_sequencia%type DEFAULT NULL) FROM PUBLIC;

