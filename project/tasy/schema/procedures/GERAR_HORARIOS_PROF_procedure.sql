-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (nm_coluna_w varchar(255));


CREATE OR REPLACE PROCEDURE gerar_horarios_prof (cd_estabelecimento_p bigint, cd_perfil_p bigint, cd_setor_usuario_p bigint, nr_atendimento_p bigint, nr_seq_dialise_p bigint, qt_hora_anterior_p bigint, qt_hora_adicional_p bigint, qt_hora_prescricao_p bigint, ie_horario_realizado_p text, ie_horario_suspenso_p text, ie_proc_setor_user_p text, ie_interv_setor_user_p text, nm_usuario_p text) AS $body$
DECLARE

 
/* vetor */
type vetor is table of colunas index by integer;

/* globais */
 
vetor_w			vetor;
ivet			integer;
ind			integer;
nr_seq_adep_w		bigint;
ds_update_w		varchar(1000);
dt_inicial_w		timestamp;
dt_final_w		timestamp;
cd_setor_atend_w		integer;

/* itens */
 
dt_order_by_w		timestamp;
ds_horario_w		varchar(19);
ie_exibe_suspenso_w	varchar(3);
ie_tipo_item_w		varchar(3);
ie_acm_sn_w		varchar(1);
ie_suspenso_w		varchar(1);
ie_status_item_w		varchar(15);
nr_prescricao_w		bigint;
nr_seq_item_w		bigint;
cd_item_w		varchar(255);
ds_item_w		varchar(240);
cd_intervalo_w		varchar(7);
qt_item_w		double precision;
ds_prescricao_w		varchar(240);
ds_diluicao_w		varchar(2000);
nr_dia_util_w		bigint;
ie_diferenciado_w		varchar(1);
ie_classif_adep_w		varchar(15);
nr_seq_proc_interno_w	bigint;

/* horários */
 
nr_seq_hor_w		bigint;
ie_status_w		varchar(1);
ds_sep_bv_w		varchar(10);
/* evento */
ds_param_proc_w		varchar(2000);

ie_data_proc_w		varchar(15);
ie_agrupar_acm_sn_w	varchar(15);
ie_agrupar_de_w		varchar(15);
ie_verifica_dif_w	varchar(2);

dt_validade_w		timestamp;
ie_exibe_dose_glicemia_w	varchar(2);
ie_data_lib_prescr_w	varchar(15);
cd_pessoa_fisica_w	varchar(10);
cd_setor_pac_w		integer;
dt_suspensao_w		timestamp;

/* obter horários itens */
 
c01 CURSOR FOR 
SELECT	to_char(c.dt_horario,'dd/mm/yyyy hh24:mi:ss') ds_horario, /* procedimentos */
 
	c.dt_horario dt_order_by 
from	prescr_proc_hor c, 
	prescr_procedimento b, 
	prescr_medica a 
where	c.nr_prescricao = b.nr_prescricao 
and	c.nr_seq_procedimento = b.nr_sequencia 
and	b.nr_prescricao = a.nr_prescricao 
and	(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '') 
and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S' 
and	coalesce(a.ie_adep,'S') = 'S' 
and	coalesce(b.nr_seq_solic_sangue::text, '') = '' 
and	coalesce(b.nr_seq_derivado::text, '') = '' 
and	coalesce(c.ie_situacao,'A') = 'A' 
and	a.nr_atendimento = nr_atendimento_p 
and	a.dt_validade_prescr > dt_validade_w 
and	c.dt_horario between dt_inicial_w and dt_final_w 
and	((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) 
and	(((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S')) 
and	(((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S')) 
and	((ie_proc_setor_user_p = 'N') or (adep_obter_se_setor_proc_user(nm_usuario_p,b.cd_setor_atendimento) = 'S')) 
and	((adep_obter_regra_inclusao(	'PROC', 
									cd_estabelecimento_p, 
									cd_setor_usuario_p, 
									cd_perfil_p, 
									null, 
									b.cd_procedimento, 
									b.ie_origem_proced, 
									b.nr_seq_proc_interno, 
									a.cd_setor_Atendimento, 
									b.cd_setor_Atendimento, 
									null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
									b.nr_seq_exame) = 'S') or  -- nr_seq_exame 
	 (adep_obter_regra_inclusao(	'LAB', 
									cd_estabelecimento_p, 
									cd_setor_usuario_p, 
									cd_perfil_p, 
									null, 
									b.cd_procedimento, 
									b.ie_origem_proced, 
									b.nr_seq_proc_interno, 
									a.cd_setor_Atendimento, 
									b.cd_setor_Atendimento, 
									null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
									b.nr_seq_exame) = 'S') or  -- nr_seq_exame_p 
	 (adep_obter_regra_inclusao(	'CCG', 
									cd_estabelecimento_p, 
									cd_setor_usuario_p, 
									cd_perfil_p, 
									null, 
									b.cd_procedimento, 
									b.ie_origem_proced, 
									b.nr_seq_proc_interno, 
									a.cd_setor_Atendimento, 
									b.cd_setor_Atendimento, 
									null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
									b.nr_seq_exame) = 'S') or  -- nr_seq_exame_p 
	 (adep_obter_regra_inclusao(	'CIG', 
									cd_estabelecimento_p, 
									cd_setor_usuario_p, 
									cd_perfil_p, 
									null, 
									b.cd_procedimento, 
									b.ie_origem_proced, 
									b.nr_seq_proc_interno, 
									a.cd_setor_Atendimento, 
									b.cd_setor_Atendimento, 
									null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
									b.nr_seq_exame) = 'S')) -- nr_seq_exame_p 
and 	obter_se_prof_gestao(a.nr_prescricao,b.nr_sequencia,null,null,nm_usuario_p) = 'S' 
and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 

union
 
SELECT	to_char(c.dt_horario,'dd/mm/yyyy hh24:mi:ss') ds_horario, /* SAE */
 
	c.dt_horario dt_order_by 
FROM pe_procedimento y, pe_prescr_proc_hor c, pe_prescricao a, pe_prescr_proc x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
WHERE y.nr_sequencia = x.nr_seq_proc and y.nr_sequencia = c.nr_seq_proc and x.nr_seq_prescr = c.nr_seq_pe_prescr and x.nr_sequencia = c.nr_seq_pe_proc and x.nr_seq_prescr = a.nr_sequencia and c.nr_seq_pe_prescr = a.nr_sequencia and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and obter_se_exibir_adep_suspensos(x.dt_suspensao, ie_exibe_suspenso_w) = 'S' and coalesce(x.ie_adep,'S') = 'S' and coalesce(a.ie_situacao,'A') = 'A' and a.nr_atendimento = nr_atendimento_p and a.dt_validade_prescr > dt_validade_w and c.dt_horario between dt_inicial_w and dt_final_w and ((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) and (((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S')) and (((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S')) and ((ie_proc_setor_user_p = 'N') or (adep_obter_se_setor_proc_user(nm_usuario_p,a.cd_setor_atendimento) = 'S')) --and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
  and (adep_obter_regra_inclusao(	'SAE', 
								cd_estabelecimento_p, 
								cd_setor_usuario_p, 
								cd_perfil_p, 
								null, 
								null, 
								null, 
								null, 
								null, 
								null, 
								null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
								null) = 'S')  -- nr_seq_exame_p 
  and obter_se_prof_gestao(a.nr_prescricao,null,x.nr_sequencia,a.nr_sequencia,nm_usuario_p) = 'S' group by 
	c.dt_horario 
order by 
	2;

/* obter itens */
 
c02 CURSOR FOR 
SELECT	ie_tipo_item, 
	--decode(ie_acm_sn, 'S', nr_prescricao, null) nr_prescricao, 
	--decode(ie_acm_sn, 'S', nr_seq_item, null) nr_seq_item, 
	--null nr_prescricao, 
	--null nr_seq_item,	 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_item,ie_agrupar_acm_sn_w)='N' THEN  nr_prescricao  ELSE null END   ELSE null END  nr_prescricao, 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_item,ie_agrupar_acm_sn_w)='N' THEN  nr_seq_item  ELSE null END   ELSE null END  nr_seq_item,	 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_item,ie_agrupar_acm_sn_w)='N' THEN  CASE WHEN ie_suspenso='S' THEN 'S'  ELSE null END   ELSE null END   ELSE null END  ie_status_item, 
	ie_acm_sn, 
	cd_item, 
	ds_item, 
	cd_intervalo, 
	qt_item, 
	ds_prescricao, 
	CASE WHEN ie_tipo_item='M' THEN  CASE WHEN ie_acm_sn='S' THEN  substr(adep_obter_inf_dil_obs(nr_prescricao,nr_seq_item),1,2000)  ELSE null END   ELSE null END  ds_diluicao, 
	ie_classif_adep, 
	nr_seq_proc_interno 
from	(	 
	SELECT	'P' ie_tipo_item, /* procedimentos */
 
		a.nr_prescricao nr_prescricao, 
		b.nr_sequencia nr_seq_item, 
		CASE WHEN coalesce(b.ie_acm,'N')='S' THEN  'S'  ELSE CASE WHEN coalesce(b.ie_se_necessario,'N')='S' THEN  'S'  ELSE 'N' END  END  ie_acm_sn, 
		to_char(b.cd_procedimento) cd_item, 
		substr(obter_desc_prescr_proc(b.cd_procedimento, b.ie_origem_proced, b.nr_seq_proc_interno),1,240) ds_item, 
		b.cd_intervalo cd_intervalo, 
		b.qt_procedimento qt_item, 
		CASE WHEN b.ie_se_necessario='S' THEN  'SN ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL','S'),1,100)  ELSE CASE WHEN b.ie_acm='S' THEN  'ACM ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL','S'),1,100)  ELSE substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL','S'),1,100) END  END  ds_prescricao, 
		substr(obter_classif_proc_adep(b.nr_seq_proc_interno),1,15) ie_classif_adep, 
		coalesce(b.nr_seq_proc_interno,0) nr_seq_proc_interno, 
		null ie_suspenso 
	from	prescr_proc_hor c, 
		prescr_procedimento b, 
		prescr_medica a 
	where	c.nr_prescricao = b.nr_prescricao 
	and	c.nr_seq_procedimento = b.nr_sequencia 
	and	b.nr_prescricao = a.nr_prescricao 
	and	(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '') 
	and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S' 
	and	coalesce(a.ie_adep,'S') = 'S' 
	and	coalesce(b.nr_seq_solic_sangue::text, '') = '' 
	and	coalesce(b.nr_seq_derivado::text, '') = '' 
	and	coalesce(b.nr_seq_exame::text, '') = '' 
	and	coalesce(b.nr_seq_prot_glic::text, '') = '' 
	and	substr(obter_ctrl_glic_proc(b.nr_seq_proc_interno),1,3) <> 'CIG' 
	and	obter_se_proc_IVC(b.nr_seq_proc_interno) <> 'S' 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	and	a.nr_atendimento = nr_atendimento_p 
	and	a.dt_validade_prescr > dt_validade_w 
	and	((c.dt_horario between dt_inicial_w and dt_final_w) or 
		(((coalesce(b.ie_acm,'N') = 'S') or (coalesce(b.ie_se_necessario,'N') = 'S')) and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_w,dt_final_w) = 'S'))) 
	and	(((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S')) 
	and	(((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S')) 
	and	((ie_proc_setor_user_p = 'N') or (adep_obter_se_setor_proc_user(nm_usuario_p,b.cd_setor_atendimento) = 'S')) 
	and	adep_obter_regra_inclusao(	'PROC', 
									cd_estabelecimento_p, 
									cd_setor_usuario_p, 
									cd_perfil_p, 
									null, 
									b.cd_procedimento, 
									b.ie_origem_proced, 
									b.nr_seq_proc_interno, 
									a.cd_setor_Atendimento, 
									b.cd_setor_Atendimento, 
									null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
									b.nr_seq_exame) = 'S' -- nr_seq_exame_p 
	and 	obter_se_prof_gestao(a.nr_prescricao,b.nr_sequencia,null,null,nm_usuario_p) = 'S' 
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
	group by 
		'P', 
		a.nr_prescricao, 
		b.nr_sequencia, 
		b.cd_procedimento, 
		b.ie_origem_proced, 
		b.nr_seq_proc_interno, 
		b.cd_intervalo, 
		b.qt_procedimento, 
		b.ie_acm, 
		b.ie_se_necessario, 
		b.cd_intervalo 
	
union
 
	select	'G' ie_tipo_item, /* controle de glicemia */
 
		a.nr_prescricao nr_prescricao, 
		b.nr_sequencia nr_seq_item, 
		CASE WHEN coalesce(b.ie_acm,'N')='S' THEN  'S'  ELSE CASE WHEN coalesce(b.ie_se_necessario,'N')='S' THEN  'S'  ELSE 'N' END  END  ie_acm_sn, 
		to_char(b.cd_procedimento) cd_item, 
		substr(obter_nome_prot_glic(b.nr_seq_prot_glic),1,80) ds_item, 
		b.cd_intervalo cd_intervalo, 
		b.qt_procedimento qt_item, 
		CASE WHEN b.ie_se_necessario='S' THEN  'SN ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100)  ELSE CASE WHEN b.ie_acm='S' THEN  'ACM ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100)  ELSE substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100) END  END  ds_prescricao,				 
		null ie_classif_adep, 
		coalesce(b.nr_seq_proc_interno,0) nr_seq_proc_interno, 
		null ie_suspenso 
	from	prescr_proc_hor c, 
		prescr_procedimento b, 
		prescr_medica a, 
		pep_protocolo_glicemia d 
	where	c.nr_prescricao = b.nr_prescricao 
	and	c.nr_seq_procedimento = b.nr_sequencia 
	and	b.nr_prescricao = a.nr_prescricao 
	and	d.nr_sequencia	= b.nr_seq_prot_glic 
	and	d.ie_tipo	= 'C' 
	and	(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '') 
	and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S' 
	and	coalesce(a.ie_adep,'S') = 'S' 
	and	coalesce(b.nr_seq_solic_sangue::text, '') = '' 
	and	coalesce(b.nr_seq_derivado::text, '') = '' 
	and	coalesce(b.nr_seq_exame::text, '') = '' 
	and	(b.nr_seq_proc_interno IS NOT NULL AND b.nr_seq_proc_interno::text <> '') 
	and	(b.nr_seq_prot_glic IS NOT NULL AND b.nr_seq_prot_glic::text <> '') 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	and	a.nr_atendimento = nr_atendimento_p 
	and	a.dt_validade_prescr >= dt_validade_w 
	and	((c.dt_horario between dt_inicial_w and dt_final_w) or 
		(((coalesce(b.ie_acm,'N') = 'S') or (coalesce(b.ie_se_necessario,'N') = 'S')) and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_w,dt_final_w) = 'S'))) 
	and	(((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S')) 
	and	(((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S')) 
	and	ie_proc_setor_user_p = 'N' 
	and	adep_obter_regra_inclusao(	'CCG', 
									cd_estabelecimento_p, 
									cd_setor_usuario_p, 
									cd_perfil_p, 
									null, 
									b.cd_procedimento, 
									b.ie_origem_proced, 
									b.nr_seq_proc_interno, 
									a.cd_setor_Atendimento, 
									b.cd_setor_Atendimento, 
									null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
									b.nr_seq_exame) = 'S' -- nr_seq_exame_p 
	and 	obter_se_prof_gestao(a.nr_prescricao,b.nr_sequencia,null,null,nm_usuario_p) = 'S' 
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
	group by 
		'G', 
		a.nr_prescricao, 
		b.nr_sequencia, 
		b.cd_procedimento, 
		b.nr_seq_prot_glic, 
		b.cd_intervalo, 
		b.qt_procedimento, 
		b.ie_acm, 
		b.ie_se_necessario, 
		b.cd_intervalo, 
		null, 
		b.nr_seq_proc_interno 
	
union
 
	select	'C' ie_tipo_item, /* cig */
 
		a.nr_prescricao nr_prescricao, 
		b.nr_sequencia nr_seq_item, 
		CASE WHEN coalesce(b.ie_acm,'N')='S' THEN  'S'  ELSE CASE WHEN coalesce(b.ie_se_necessario,'N')='S' THEN  'S'  ELSE 'N' END  END  ie_acm_sn, 
		to_char(b.cd_procedimento) cd_item, 
		substr(obter_valor_dominio(1903,substr(obter_ctrl_glic_proc(b.nr_seq_proc_interno),1,3)),1,240) ds_item, 
		b.cd_intervalo cd_intervalo, 
		b.qt_procedimento qt_item, 
		CASE WHEN b.ie_se_necessario='S' THEN  'SN ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100)  ELSE CASE WHEN b.ie_acm='S' THEN  'ACM ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100)  ELSE substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100) END  END  ds_prescricao,				 
		null ie_classif_adep, 
		coalesce(b.nr_seq_proc_interno,0) nr_seq_proc_interno, 
		null ie_suspenso 
	from	prescr_proc_hor c, 
		prescr_procedimento b, 
		prescr_medica a 
	where	c.nr_prescricao = b.nr_prescricao 
	and	c.nr_seq_procedimento = b.nr_sequencia 
	and	b.nr_prescricao = a.nr_prescricao 
	and	(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '') 
	and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S' 
	and	coalesce(a.ie_adep,'S') = 'S' 
	and	coalesce(b.nr_seq_solic_sangue::text, '') = '' 
	and	coalesce(b.nr_seq_derivado::text, '') = '' 
	and	coalesce(b.nr_seq_exame::text, '') = '' 
	and	(b.nr_seq_proc_interno IS NOT NULL AND b.nr_seq_proc_interno::text <> '') 
	and	substr(obter_ctrl_glic_proc(b.nr_seq_proc_interno),1,3) = 'CIG' 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	and	a.nr_atendimento = nr_atendimento_p 
	and	a.dt_validade_prescr >= dt_validade_w 
	and	((c.dt_horario between dt_inicial_w and dt_final_w) or 
		(((coalesce(b.ie_acm,'N') = 'S') or (coalesce(b.ie_se_necessario,'N') = 'S')) and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_w,dt_final_w) = 'S'))) 
	and	(((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S')) 
	and	(((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S')) 
	and	ie_proc_setor_user_p = 'N' 
	and	adep_obter_regra_inclusao(	'CIG', 
									cd_estabelecimento_p, 
									cd_setor_usuario_p, 
									cd_perfil_p, 
									null, 
									b.cd_procedimento, 
									b.ie_origem_proced, 
									b.nr_seq_proc_interno, 
									a.cd_setor_Atendimento, 
									b.cd_setor_Atendimento, 
									null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
									b.nr_seq_exame) = 'S' -- nr_seq_exame_p 
	and 	obter_se_prof_gestao(a.nr_prescricao,b.nr_sequencia,null,null,nm_usuario_p) = 'S' 
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
	group by 
		'C', 
		a.nr_prescricao, 
		b.nr_sequencia, 
		b.cd_procedimento, 
		b.nr_seq_proc_interno, 
		b.cd_intervalo, 
		b.qt_procedimento, 
		b.ie_acm, 
		b.ie_se_necessario, 
		b.cd_intervalo, 
		null	 
	
union
		 
	select	'E' ie_tipo_item, /* sae */
 
		a.nr_sequencia nr_prescricao, 
		x.nr_sequencia nr_seq_item, 
		x.ie_se_necessario ie_acm_sn, 
		to_char(y.nr_sequencia) cd_item, 
		y.ds_procedimento ds_item, 
		x.cd_intervalo cd_intervalo, 
		x.qt_intervencao qt_item, 
		substr(obter_desc_inf_sae_adep(x.ie_se_necessario,w.ds_prescricao),1,240) ds_prescricao, 
		null ie_classif_adep, 
		0 nr_seq_proc_interno, 
		coalesce(x.ie_suspenso,'N') ie_suspenso 
	FROM pe_procedimento y, pe_prescr_proc_hor c, pe_prescricao a, pe_prescr_proc x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
WHERE y.nr_sequencia = x.nr_seq_proc and y.nr_sequencia = c.nr_seq_proc and x.nr_seq_prescr = c.nr_seq_pe_prescr and x.nr_sequencia = c.nr_seq_pe_proc and x.nr_seq_prescr = a.nr_sequencia and c.nr_seq_pe_prescr = a.nr_sequencia and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and obter_se_exibir_adep_suspensos(x.dt_suspensao, ie_exibe_suspenso_w) = 'S' and coalesce(x.ie_adep,'S') = 'S' and coalesce(c.ie_situacao,'A') = 'A' and a.nr_atendimento = nr_atendimento_p and a.dt_validade_prescr >= dt_validade_w and coalesce(a.ie_situacao,'A') <> 'I' and ((c.dt_horario between dt_inicial_w and dt_final_w) or 
		((coalesce(x.ie_se_necessario,'N') = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_w,dt_final_w) = 'S'))) and (((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S')) and (((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S')) and ie_proc_setor_user_p = 'N' and obter_se_prof_gestao(a.nr_prescricao,null,x.nr_sequencia,a.nr_sequencia,nm_usuario_p) = 'S' --and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'		 		 
 group by 
		'E', 
		a.nr_sequencia, 
		x.nr_sequencia, 
		x.ie_se_necessario, 
		y.nr_sequencia, 
		y.ds_procedimento, 
		x.cd_intervalo, 
		x.qt_intervencao, 
		x.ie_se_necessario, 
		w.ds_prescricao, 
		null, 
		0, 
		x.ie_suspenso 
	order by 
		1, 2, 3, 6, 7 
	) alias192 
group by 
	ie_tipo_item, 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_item,ie_agrupar_acm_sn_w)='N' THEN  nr_prescricao  ELSE null END   ELSE null END , 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_item,ie_agrupar_acm_sn_w)='N' THEN  nr_seq_item  ELSE null END   ELSE null END , 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_item,ie_agrupar_acm_sn_w)='N' THEN  CASE WHEN ie_suspenso='S' THEN 'S'  ELSE null END   ELSE null END   ELSE null END , 
	ie_acm_sn, 
	cd_item, 
	ds_item, 
	cd_intervalo, 
	qt_item, 
	ds_prescricao, 
	CASE WHEN ie_tipo_item='M' THEN  CASE WHEN ie_acm_sn='S' THEN  substr(adep_obter_inf_dil_obs(nr_prescricao,nr_seq_item),1,2000)  ELSE null END   ELSE null END , 
	ie_classif_adep, 
	nr_seq_proc_interno;

/* obter itens x horários */
 
c03 CURSOR FOR 
SELECT	CASE WHEN coalesce(b.nr_seq_exame::text, '') = '' THEN 'P'  ELSE 'L' END  ie_tipo_item, /* procedimentos */
 
	a.nr_prescricao nr_prescricao, 
	b.nr_sequencia nr_seq_item, 
	to_char(b.cd_procedimento) cd_item, 
	c.nr_sequencia nr_seq_hor, 
	to_char(c.dt_horario,'dd/mm/yyyy hh24:mi:ss') ds_horario, 
	substr(obter_status_hor_prescr(c.nr_sequencia, 'P'),1,1) ie_status, 
	CASE WHEN coalesce(b.nr_seq_exame::text, '') = '' THEN CASE WHEN b.ie_se_necessario='S' THEN  'SN ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL','S'),1,100)  ELSE CASE WHEN b.ie_acm='S' THEN  'ACM ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL','S'),1,100)  ELSE substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL','S'),1,100) END  END   ELSE substr(obter_material_exame_lab(null, b.cd_material_exame,3),1,240) END  ds_prescricao,							 
	'N' ie_diferenciado, 
	substr(obter_mat_med_assoc_proc(a.nr_prescricao,b.nr_sequencia, 'S'),1,2000) ds_diluicao, 
	null nr_dia_util, 
	coalesce(b.nr_seq_proc_interno,0) nr_seq_proc_interno, 
	b.cd_intervalo, 
	c.dt_suspensao dt_suspensao 
from	prescr_proc_hor c, 
	prescr_procedimento b, 
	prescr_medica a 
where	c.nr_prescricao = b.nr_prescricao 
and	c.nr_seq_procedimento = b.nr_sequencia 
and	b.nr_prescricao = a.nr_prescricao 
and	(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '') 
and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S' 
and	coalesce(a.ie_adep,'S') = 'S' 
and	coalesce(c.ie_situacao,'A') = 'A' 
and	coalesce(b.nr_seq_solic_sangue::text, '') = '' 
and	coalesce(b.nr_seq_derivado::text, '') = '' 
and	coalesce(b.nr_seq_prot_glic::text, '') = '' 
and	substr(obter_ctrl_glic_proc(b.nr_seq_proc_interno),1,3) <> 'CIG' 
and	obter_se_proc_IVC(b.nr_seq_proc_interno) <> 'S' 
and	a.nr_atendimento = nr_atendimento_p 
and	a.dt_validade_prescr > dt_validade_w 
and	((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) 
and	(((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S')) 
and	(((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S')) 
and	c.dt_horario = to_date(vetor_w[ind].nm_coluna_w,'dd/mm/yyyy hh24:mi:ss') 
and	((ie_proc_setor_user_p = 'N') or (adep_obter_se_setor_proc_user(nm_usuario_p,b.cd_setor_atendimento) = 'S')) 
and	((adep_obter_regra_inclusao(	'PROC', 
									cd_estabelecimento_p, 
									cd_setor_usuario_p, 
									cd_perfil_p, 
									null, 
									b.cd_procedimento, 
									b.ie_origem_proced, 
									b.nr_seq_proc_interno, 
									a.cd_setor_Atendimento, 
									b.cd_setor_Atendimento, 
									null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
									b.nr_seq_exame) = 'S') or  -- nr_seq_exame_p 
	 (adep_obter_regra_inclusao(	'LAB', 
									cd_estabelecimento_p, 
									cd_setor_usuario_p, 
									cd_perfil_p, 
									null, 
									b.cd_procedimento, 
									b.ie_origem_proced, 
									b.nr_seq_proc_interno, 
									a.cd_setor_Atendimento, 
									b.cd_setor_Atendimento, 
									null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
									b.nr_seq_exame) = 'S')) -- nr_seq_exame_p 
and 	obter_se_prof_gestao(a.nr_prescricao,b.nr_sequencia,null,null,nm_usuario_p) = 'S' 
and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 

union
 
SELECT	'G' ie_tipo_item, /* controle de glicemia */
 
	a.nr_prescricao nr_prescricao, 
	b.nr_sequencia nr_seq_item, 
	to_char(b.cd_procedimento) cd_item, 
	c.nr_sequencia nr_seq_hor, 
	to_char(c.dt_horario,'dd/mm/yyyy hh24:mi:ss') ds_horario, 
	substr(obter_status_hor_prescr(c.nr_sequencia, 'P'),1,1) ie_status, 
	CASE WHEN b.ie_se_necessario='S' THEN  'SN ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100)  ELSE CASE WHEN b.ie_acm='S' THEN  'ACM ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100)  ELSE substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100) END  END  ds_prescricao,			 
	'N' ie_diferenciado, 
	obter_mat_med_assoc_proc(b.nr_prescricao, b.nr_sequencia, ie_exibe_dose_glicemia_w) ds_diluicao, 
	null nr_dia_util, 
	coalesce(b.nr_seq_proc_interno,0) nr_seq_proc_interno, 
	b.cd_intervalo, 
	c.dt_suspensao dt_suspensao 
from	prescr_proc_hor c, 
	prescr_procedimento b, 
	prescr_medica a 
where	c.nr_prescricao = b.nr_prescricao 
and	c.nr_seq_procedimento = b.nr_sequencia 
and	b.nr_prescricao = a.nr_prescricao 
and	(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '') 
and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S' 
and	coalesce(a.ie_adep,'S') = 'S' 
and	coalesce(b.nr_seq_solic_sangue::text, '') = '' 
and	coalesce(b.nr_seq_derivado::text, '') = '' 
and	coalesce(b.nr_seq_exame::text, '') = '' 
and	(b.nr_seq_proc_interno IS NOT NULL AND b.nr_seq_proc_interno::text <> '') 
and	(b.nr_seq_prot_glic IS NOT NULL AND b.nr_seq_prot_glic::text <> '') 
and	coalesce(c.ie_situacao,'A') = 'A' 
and	a.nr_atendimento = nr_atendimento_p 
and	a.dt_validade_prescr >= dt_validade_w 
and	((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) 
and	(((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S')) 
and	(((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S')) 
and	c.dt_horario = to_date(vetor_w[ind].nm_coluna_w,'dd/mm/yyyy hh24:mi:ss') 
and	ie_proc_setor_user_p = 'N' 
and	adep_obter_regra_inclusao(	'CCG', 
								cd_estabelecimento_p, 
								cd_setor_usuario_p, 
								cd_perfil_p, 
								null, 
								b.cd_procedimento, 
								b.ie_origem_proced, 
								b.nr_seq_proc_interno, 
								a.cd_setor_Atendimento, 
								b.cd_setor_Atendimento, 
								null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
								b.nr_seq_exame) = 'S' -- nr_seq_exame_p 
and 	obter_se_prof_gestao(a.nr_prescricao,b.nr_sequencia,null,null,nm_usuario_p) = 'S' 
and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 

union
 
select	'C' ie_tipo_item, /* cig */
 
	a.nr_prescricao nr_prescricao, 
	b.nr_sequencia nr_seq_item, 
	to_char(b.cd_procedimento) cd_item, 
	c.nr_sequencia nr_seq_hor, 
	to_char(c.dt_horario,'dd/mm/yyyy hh24:mi:ss') ds_horario, 
	substr(obter_status_hor_prescr(c.nr_sequencia, 'P'),1,1) ie_status, 
	CASE WHEN b.ie_se_necessario='S' THEN  'SN ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100)  ELSE CASE WHEN b.ie_acm='S' THEN  'ACM ' || substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100)  ELSE substr(obter_dados_prescr_proc(a.nr_prescricao, b.nr_sequencia, 'QIL',ie_exibe_dose_glicemia_w),1,100) END  END  ds_prescricao,			 
	'N' ie_diferenciado, 
	obter_mat_med_assoc_proc(a.nr_prescricao, b.nr_sequencia, ie_exibe_dose_glicemia_w) ds_diluicao, 
	null nr_dia_util, 
	coalesce(b.nr_seq_proc_interno,0) nr_seq_proc_interno, 
	b.cd_intervalo	, 
	c.dt_suspensao dt_suspensao 
from	prescr_proc_hor c, 
	prescr_procedimento b, 
	prescr_medica a 
where	c.nr_prescricao = b.nr_prescricao 
and	c.nr_seq_procedimento = b.nr_sequencia 
and	b.nr_prescricao = a.nr_prescricao 
and	(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '') 
and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S' 
and	coalesce(a.ie_adep,'S') = 'S' 
and	coalesce(b.nr_seq_solic_sangue::text, '') = '' 
and	coalesce(b.nr_seq_derivado::text, '') = '' 
and	coalesce(b.nr_seq_exame::text, '') = '' 
and	(b.nr_seq_proc_interno IS NOT NULL AND b.nr_seq_proc_interno::text <> '') 
and	substr(obter_ctrl_glic_proc(b.nr_seq_proc_interno),1,3) = 'CIG' 
and	coalesce(c.ie_situacao,'A') = 'A' 
and	a.nr_atendimento = nr_atendimento_p 
and	a.dt_validade_prescr >= dt_validade_w 
and	((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) 
and	(((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S')) 
and	(((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S')) 
and	c.dt_horario = to_date(vetor_w[ind].nm_coluna_w,'dd/mm/yyyy hh24:mi:ss') 
and	ie_proc_setor_user_p = 'N' 
and	adep_obter_regra_inclusao(	'CIG', 
								cd_estabelecimento_p, 
								cd_setor_usuario_p, 
								cd_perfil_p, 
								null, 
								b.cd_procedimento, 
								b.ie_origem_proced, 
								b.nr_seq_proc_interno, 
								a.cd_setor_Atendimento, 
								b.cd_setor_Atendimento, 
								null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
								b.nr_seq_exame) = 'S' -- nr_seq_exame_p 
and 	obter_se_prof_gestao(a.nr_prescricao,b.nr_sequencia,null,null,nm_usuario_p) = 'S' 
and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 

union
 
select	'E' ie_tipo_item, /* sae */
 
	a.nr_sequencia nr_prescricao, 
	x.nr_sequencia nr_seq_item, 
	to_char(y.nr_sequencia) cd_item, 
	c.nr_sequencia nr_seq_hor, 
	to_char(c.dt_horario,'dd/mm/yyyy hh24:mi:ss') ds_horario,	 
	substr(obter_status_hor_prescr(c.nr_sequencia, 'E'),1,1) ie_status,	 
	substr(obter_desc_inf_sae_adep(x.ie_se_necessario,w.ds_prescricao),1,240) ds_prescricao, 
	'N' ie_diferenciado, 
	null ds_diluicao, 
	null nr_dia_util, 
	0 nr_seq_proc_interno, 
	x.cd_intervalo, 
	x.dt_suspensao dt_suspensao	 
FROM pe_procedimento y, pe_prescr_proc_hor c, pe_prescricao a, pe_prescr_proc x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
WHERE y.nr_sequencia = x.nr_seq_proc and y.nr_sequencia = c.nr_seq_proc and x.nr_seq_prescr = c.nr_seq_pe_prescr and x.nr_sequencia = c.nr_seq_pe_proc and x.nr_seq_prescr = a.nr_sequencia and c.nr_seq_pe_prescr = a.nr_sequencia and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and obter_se_exibir_adep_suspensos(x.dt_suspensao, ie_exibe_suspenso_w) = 'S' and coalesce(x.ie_adep,'S') = 'S' and coalesce(c.ie_situacao,'A') = 'A' and a.nr_atendimento = nr_atendimento_p and a.dt_validade_prescr >= dt_validade_w and (((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S')) and (((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S')) and ie_proc_setor_user_p = 'N' and adep_obter_regra_inclusao(	'SAE', 
								cd_estabelecimento_p, 
								cd_setor_usuario_p, 
								cd_perfil_p, 
								null, 
								null, 
								null, 
								null, 
								null, 
								null, 
								null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
								null) = 'S' -- nr_seq_exame_p 
  and obter_se_prof_gestao(a.nr_prescricao,null,x.nr_sequencia,a.nr_sequencia,nm_usuario_p) = 'S' --and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'	 
  and c.dt_horario = to_date(vetor_w[ind].nm_coluna_w,'dd/mm/yyyy hh24:mi:ss') order by nr_prescricao, dt_suspensao desc;


BEGIN 
 
ie_data_proc_w := obter_param_usuario(924, 223, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_data_proc_w);
ie_agrupar_acm_sn_w := obter_param_usuario(1113, 74, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_agrupar_acm_sn_w);
ie_agrupar_de_w := obter_param_usuario(1113, 99, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_agrupar_de_w);
ie_verifica_dif_w := obter_param_usuario(1113, 111, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_verifica_dif_w);
ie_exibe_dose_glicemia_w := obter_param_usuario(1113, 114, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_exibe_dose_glicemia_w);
ie_data_lib_prescr_w := obter_param_usuario(1113, 115, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_data_lib_prescr_w);
ie_exibe_suspenso_w := obter_param_usuario(1113, 117, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_exibe_suspenso_w);
 
select 	obter_separador_bv 
into STRICT	ds_sep_bv_w
;
 
select	cd_pessoa_fisica 
into STRICT	cd_pessoa_fisica_w 
from	usuario 
where 	nm_usuario = nm_usuario_p;
 
select	max(obter_setor_atendimento(nr_atendimento_p)), 
	max(Obter_Unidade_Atendimento(nr_atendimento_p, 'IA', 'CS')) 
into STRICT	cd_setor_atend_w, 
	cd_setor_pac_w
;
 
dt_validade_w		:= clock_timestamp() - qt_hora_prescricao_p / 24;
 
/* limpar tabela temporária x usuário */
 
delete	from w_adep 
where	nm_usuario = nm_usuario_p;
 
/* obter período datas (data inicial) */
 
if (qt_hora_anterior_p > 0) then 
	select	to_date(to_char(trunc(clock_timestamp() - qt_hora_anterior_p/24, 'hh24'), 'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
	into STRICT	dt_inicial_w 
	;
else 
	select	to_date(to_char(trunc(clock_timestamp(), 'hh24'), 'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
	into STRICT	dt_inicial_w 
	;
end if;
 
/* obter período datas (data final) */
 
if (qt_hora_adicional_p > 0) then 
	select	to_date(to_char(trunc(clock_timestamp() + qt_hora_adicional_p/24, 'hh24'), 'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
	into STRICT	dt_final_w 
	;
else 
	select	to_date(to_char(trunc(clock_timestamp(), 'hh24'), 'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
	into STRICT	dt_final_w 
	;
end if;
 
/* carregar vetor horários */
 
ivet := 0;
open c01;
loop 
fetch c01 into 	ds_horario_w, 
		dt_order_by_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin	 
	ivet := ivet + 1;
	vetor_w[ivet].nm_coluna_w := ds_horario_w;
	end;
end loop;
close c01;
 
/* completar vetor horários (se necessário) */
 
ind := ivet;
while(ind < 40) loop 
	begin 
	ind := ind + 1;
	vetor_w[ind].nm_coluna_w := null;
	end;
end loop;
 
/* gerar horários */
 
select	nextval('w_adep_seq') 
into STRICT	nr_seq_adep_w
;
 
insert into w_adep( 
			nr_sequencia, 
			nm_usuario, 
			ie_tipo_item, 
			ie_acm_sn, 
			ie_suspenso, 
			ie_status_item, 
			nr_prescricao, 
			nr_seq_item, 
			cd_item, 
			ds_item, 
			ds_prescricao, 
			nr_prescricoes, 
			hora1, hora2, hora3, hora4, hora5, hora6, hora7, hora8, hora9, hora10, 
			hora11, hora12, hora13, hora14, hora15, hora16, hora17, hora18, hora19, hora20, 
			hora21, hora22, hora23, hora24, hora25, hora26, hora27, hora28, hora29, hora30, 
			hora31, hora32, hora33, hora34, hora35, hora36, hora37, hora38, hora39, hora40 
			) 
		values ( 
			nr_seq_adep_w, 
			nm_usuario_p, 
			'H', 
			'N', 
			'N', 
			'N', 
			1, 
			1, 
			1, 
			'HORÁRIOS', 
			'HORÁRIOS', 
			'1', 
			vetor_w[1].nm_coluna_w, 
			vetor_w[2].nm_coluna_w, 
			vetor_w[3].nm_coluna_w, 
			vetor_w[4].nm_coluna_w, 
			vetor_w[5].nm_coluna_w, 
			vetor_w[6].nm_coluna_w, 
			vetor_w[7].nm_coluna_w, 
			vetor_w[8].nm_coluna_w, 
			vetor_w[9].nm_coluna_w, 
			vetor_w[10].nm_coluna_w, 
			vetor_w[11].nm_coluna_w, 
			vetor_w[12].nm_coluna_w, 
			vetor_w[13].nm_coluna_w, 
			vetor_w[14].nm_coluna_w, 
			vetor_w[15].nm_coluna_w, 
			vetor_w[16].nm_coluna_w, 
			vetor_w[17].nm_coluna_w, 
			vetor_w[18].nm_coluna_w, 
			vetor_w[19].nm_coluna_w, 
			vetor_w[20].nm_coluna_w, 
			vetor_w[21].nm_coluna_w, 
			vetor_w[22].nm_coluna_w, 
			vetor_w[23].nm_coluna_w, 
			vetor_w[24].nm_coluna_w, 
			vetor_w[25].nm_coluna_w, 
			vetor_w[26].nm_coluna_w, 
			vetor_w[27].nm_coluna_w, 
			vetor_w[28].nm_coluna_w, 
			vetor_w[29].nm_coluna_w, 
			vetor_w[30].nm_coluna_w, 
			vetor_w[31].nm_coluna_w, 
			vetor_w[32].nm_coluna_w, 
			vetor_w[33].nm_coluna_w, 
			vetor_w[34].nm_coluna_w, 
			vetor_w[35].nm_coluna_w, 
			vetor_w[36].nm_coluna_w, 
			vetor_w[37].nm_coluna_w, 
			vetor_w[38].nm_coluna_w, 
			vetor_w[39].nm_coluna_w, 
			vetor_w[40].nm_coluna_w 
			);
 
/* gerar itens */
 
open c02;
loop 
fetch c02 into 
	ie_tipo_item_w, 
	nr_prescricao_w, 
	nr_seq_item_w, 
	ie_status_item_w, 
	ie_acm_sn_w, 
	cd_item_w, 
	ds_item_w, 
	cd_intervalo_w, 
	qt_item_w, 
	ds_prescricao_w, 
	ds_diluicao_w, 
	ie_classif_adep_w, 
	nr_seq_proc_interno_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin 
	select	nextval('w_adep_seq') 
	into STRICT	nr_seq_adep_w 
	;
 
	insert into w_adep( 
				nr_sequencia, 
				nm_usuario, 
				ie_tipo_item, 
				ie_acm_sn, 
				ie_suspenso, 
				ie_status_item, 
				nr_prescricao, 
				nr_seq_item, 
				cd_item, 
				ds_item, 
				cd_intervalo, 
				qt_item, 
				ds_prescricao, 
				ds_diluicao, 
				nr_dia_util, 
				nr_prescricoes, 
				ie_classif_adep, 
				ie_diferenciado, 
				nr_seq_proc_interno 
				) 
			values ( 
				nr_seq_adep_w, 
				nm_usuario_p, 
				ie_tipo_item_w, 
				ie_acm_sn_w, 
				null, 
				CASE WHEN ie_tipo_item_w='SOL' THEN ie_status_item_w WHEN ie_tipo_item_w='L' THEN ie_status_item_w WHEN ie_tipo_item_w='M' THEN ie_status_item_w WHEN ie_tipo_item_w='ME' THEN ie_status_item_w  ELSE null END , 
				nr_prescricao_w, 
				nr_seq_item_w, 
				cd_item_w, 
				ds_item_w, 
				cd_intervalo_w, 
				qt_item_w, 
				ds_prescricao_w, 
				ds_diluicao_w, 
				null, 
				CASE WHEN ie_acm_sn_w='S' THEN nr_prescricao_w  ELSE null END , 
				ie_classif_adep_w, 
				CASE WHEN coalesce(ds_diluicao_w::text, '') = '' THEN  'N'  ELSE 'S' END , 
				nr_seq_proc_interno_w 
				);
	end;
end loop;
close c02;
 
/* gerar itens x horários */
 
ind := 0;
while(ind < 40) loop 
	begin 
	ind := ind + 1;
	open c03;
	loop 
	fetch c03 into 
		ie_tipo_item_w, 
		nr_prescricao_w, 
		nr_seq_item_w, 
		cd_item_w, 
		nr_seq_hor_w, 
		ds_horario_w, 
		ie_status_w, 
		ds_prescricao_w, 
		ie_diferenciado_w, 
		ds_diluicao_w, 
		nr_dia_util_w, 
		nr_seq_proc_interno_w, 
		cd_intervalo_w, 
		dt_suspensao_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
		 
		if (ie_tipo_item_w <> 'D') then 
		 
			if (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_seq_item_w,0) > 0) then 
				ds_update_w :=' update w_adep	' || 
					' set hora' || to_char(ind) || ' = :vl_hora, ' || 
					' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' || 
					' ie_diferenciado = :ie_diferenciado, ' || 
					' ds_diluicao = :ds_diluicao, ' || 
					' nr_dia_util = :nr_dia_util ' || 
					' where nm_usuario 	= :nm_usuario ' || 
					' and ie_tipo_item 	= :ie_tipo ' || 
					' and cd_item 		= :cd_item ' || 
					' and nvl(nr_seq_proc_interno,0) = nvl(:nr_seq_proc_interno,0) ' || 
					' and nvl(cd_intervalo,0) = nvl(:cd_intervalo,0) ' || 
					' and ((ds_prescricao = :ds_prescricao) or (ds_prescricao is null)) ' || 
					' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' || 
					' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ';		
			else 
				ds_update_w :=' update w_adep	' || 
					' set hora' || to_char(ind) || ' = :vl_hora, ' || 
					' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' || 
					' ie_diferenciado = :ie_diferenciado, ' || 
					' ds_diluicao = :ds_diluicao, ' || 
					' nr_dia_util = :nr_dia_util ' || 
					' where nm_usuario = :nm_usuario ' || 
					' and ie_tipo_item = :ie_tipo ' || 
					' and cd_item = :cd_item ' || 
					' and nvl(nr_seq_proc_interno,0) = nvl(:nr_seq_proc_interno,0) ' || 
					' and nvl(cd_intervalo,0) = nvl(:cd_intervalo,0) ' || 
					' and ((ds_prescricao = :ds_prescricao) or (ds_prescricao is null)) ' || 
					' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ';			
			end if;
		else 
			ds_update_w :=' update w_adep	' || 
					' set hora' || to_char(ind) || ' = :vl_hora, ' || 
					' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' || 
					' ie_diferenciado = :ie_diferenciado, ' || 
					' ds_diluicao = :ds_diluicao, ' || 
					' nr_dia_util = :nr_dia_util ' || 
					' where nm_usuario = :nm_usuario ' || 
					' and ie_tipo_item = :ie_tipo ' || 
					' and cd_item = :cd_item ';			
		end if;
		 
		if (ie_tipo_item_w <> 'D') then 
			CALL exec_sql_dinamico_bv('ADEP', ds_update_w,'vl_hora=S' || to_char(nr_seq_hor_w) || 'H' || ie_status_w			|| ds_sep_bv_w || 
								'nr_prescricao=' || to_char(nr_prescricao_w)			|| ds_sep_bv_w || 
								'ie_diferenciado=' || ie_diferenciado_w				|| ds_sep_bv_w || 
								'ds_diluicao=' || ds_diluicao_w					|| ds_sep_bv_w || 
								'nr_dia_util=' || to_char(nr_dia_util_w)				|| ds_sep_bv_w || 
								'nm_usuario=' || nm_usuario_p					|| ds_sep_bv_w || 
								'ie_tipo=' || ie_tipo_item_w					|| ds_sep_bv_w || 
								'cd_item=' || cd_item_w					|| ds_sep_bv_w || 
								'nr_seq_proc_interno=' || to_char(nr_seq_proc_interno_w)		|| ds_sep_bv_w || 
								'cd_intervalo=' || cd_intervalo_w				|| ds_sep_bv_w || 
								'ds_prescricao=' || ds_prescricao_w				|| ds_sep_bv_w || 
								'nr_seq_item=' || to_char(nr_seq_item_w)				|| ds_sep_bv_w );		
		else 
			CALL exec_sql_dinamico_bv('ADEP', ds_update_w,'vl_hora=S' || to_char(nr_seq_hor_w) || 'H' || ie_status_w			|| ds_sep_bv_w || 
								'nr_prescricao=' || to_char(nr_prescricao_w)			|| ds_sep_bv_w || 
								'ie_diferenciado=' || ie_diferenciado_w				|| ds_sep_bv_w || 
								'ds_diluicao=' || ds_diluicao_w					|| ds_sep_bv_w || 
								'nr_dia_util=' || to_char(nr_dia_util_w)				|| ds_sep_bv_w ||								 
								'nm_usuario=' || nm_usuario_p					|| ds_sep_bv_w || 
								'ie_tipo=' || ie_tipo_item_w					|| ds_sep_bv_w || 
								'cd_item=' || cd_item_w					|| ds_sep_bv_w );		
		end if;
		 
		end;
	end loop;
	close c03;
	end;
end loop;
 
update	w_adep 
set	nr_prescricoes	= adep_obter_prescricoes(nr_atendimento_p, ie_tipo_item, cd_item, nr_seq_proc_interno, cd_intervalo, qt_item, ie_data_proc_w, ie_data_lib_prescr_w, ie_exibe_suspenso_w, dt_validade_w,cd_setor_pac_w,null) 
where	nm_usuario	= nm_usuario_p 
and	coalesce(nr_prescricoes::text, '') = '';
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_horarios_prof (cd_estabelecimento_p bigint, cd_perfil_p bigint, cd_setor_usuario_p bigint, nr_atendimento_p bigint, nr_seq_dialise_p bigint, qt_hora_anterior_p bigint, qt_hora_adicional_p bigint, qt_hora_prescricao_p bigint, ie_horario_realizado_p text, ie_horario_suspenso_p text, ie_proc_setor_user_p text, ie_interv_setor_user_p text, nm_usuario_p text) FROM PUBLIC;

