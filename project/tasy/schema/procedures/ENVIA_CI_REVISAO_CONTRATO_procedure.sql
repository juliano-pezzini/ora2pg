-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_ci_revisao_contrato ( cd_estabelecimento_p bigint) AS $body$
DECLARE

 
 
 
/* 
 
ESSA JOB SÓ DEVE SER UTILIZADA NOS CLIENTES QUE UTILIZAM O CAMPO DT_REVISAO COMO SENDO A DATA DA ULTIMA REVISAO DO CONTRATO. 
QUANDO CRIARAM ESSA JOB, CRIARAM DESSA FORMA. MAS ESTA ERRADO. 
DECIDIMOS MANTER ESSA JOB PARA QUEM JA UTILIZA DESSA FORMA. 
 
MAS O CORRETO PARA O CAMPO DT_REVISAO É INFORMAR A DATA DA PROXIMA REVISÃO. E NO CAMPO QT_DIAS_REVISAO INFORMAR A QUANTIDADE DE DIAS COM ANTECEDENCIA QUE DEVE SER ENVIADO O COMUNICADO. 
PARA ISSO, É CORRETO UTILIZAR A JOB ENVIA_CI_PROX_REVISAO_CONTRATO. 
 
*/
 
 
 
--c01 
nr_seq_contrato_w		bigint;
dt_revisao_w			timestamp;
qt_dias_revisao_w 			bigint;
ds_objeto_w			varchar(3800);
ds_titulo_w			varchar(300);
cd_contratado_w	     		varchar(255);
nm_contratado_w			varchar(255);

--c02 
nm_usu_lib_w			varchar(255);
cd_setor_w			bigint;
cd_perfil_w			bigint;
ie_aviso_revisao_w			varchar(2);

--ci e email 
ds_mensagem_w			varchar(4000);
nr_sequencia_w			bigint;
ds_email_destino_w		varchar(1500);
ds_email_w			varchar(255);
nm_usuarios_w			varchar(1500);
ds_email_origem_w			varchar(255);
nr_seq_classif_w			bigint;
ds_email_remet_rev_contr_w	varchar(255);

--c03 
cd_estabelecimento_w		smallint;

c01 CURSOR FOR 
SELECT	nr_sequencia, 
	dt_revisao, 
	qt_dias_revisao, --quantidade de dias para a próxima revisão 
	ds_objeto_contrato, 
	ds_titulo_contrato, 
	CASE WHEN cd_cgc_contratado='' THEN  cd_pessoa_contratada  ELSE cd_cgc_contratado END , 
	substr(obter_nome_pf_pj(cd_pessoa_contratada, cd_cgc_contratado),1,200)	 
from	contrato 
where	cd_estabelecimento = cd_estabelecimento_w 
and	ie_situacao = 'A' 
and	obter_dias_entre_datas(clock_timestamp(), dt_revisao + qt_dias_revisao) between 0 and 30 
and	dt_revisao < clock_timestamp() + interval '15 days' 
and	(qt_dias_revisao IS NOT NULL AND qt_dias_revisao::text <> '') 
and	clock_timestamp() >= (dt_revisao + qt_dias_revisao) - 15 
and	coalesce(ie_finalizado,'N') = 'N';
	
c02 CURSOR FOR 
SELECT	nm_usuario_lib, 
	cd_setor, 
	cd_perfil, 
	ie_aviso_revisao 
from	contrato_usuario_lib 
where	nr_seq_contrato = nr_seq_contrato_w;

C03 CURSOR FOR 
	SELECT	cd_estabelecimento 
	from 	estabelecimento 
	where	ie_situacao = 'A' 
	and 	cd_estabelecimento_p = 0 
	
union all
 
	SELECT	cd_estabelecimento_p 
	 
	where	cd_estabelecimento_p > 0;


BEGIN 
 
open C03;
loop 
fetch C03 into	 
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	 
	begin 
	select	Obter_dados_usuario_opcao(obter_usuario_pessoa(cd_pessoa_remet_rev_contr),'E') 
	into STRICT	ds_email_remet_rev_contr_w 
	from	parametro_compras 
	where	cd_estabelecimento = cd_estabelecimento_w; 	
	exception 
	when others then 
		ds_email_remet_rev_contr_w := null;
	end;
	 
	 
	select	substr(coalesce(coalesce(ds_email_remet_rev_contr_w,obter_dados_pf_pj('',cd_cgc,'M')),'X'),1,255) 
	into STRICT	ds_email_origem_w 
	from	estabelecimento 
	where	cd_estabelecimento = cd_estabelecimento_w;
	 
	if (ds_email_origem_w = 'X') then 
		begin 
	 
		select	coalesce(substr(obter_dados_pf_pj_estab(cd_estabelecimento_w, '', cd_cgc, 'M'),1,255),'X') 
		into STRICT	ds_email_origem_w 
		from	estabelecimento 
		where	cd_estabelecimento = cd_estabelecimento_w;
		 
		end;
	end if;
	 
	select	obter_classif_comunic('F') 
	into STRICT	nr_seq_classif_w 
	;
	 
	open c01;
	loop 
	fetch c01 into 
		nr_seq_contrato_w, 
		dt_revisao_w, 
		qt_dias_revisao_w, 
		ds_objeto_w, 
		ds_titulo_w, 
		cd_contratado_w, 
		nm_contratado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		 
		ds_email_w			:= null;
		ds_email_destino_w	:= null;
 
		nm_usuarios_w 		:= null;
		 
		open c02;
		loop 
		fetch c02 into 
			nm_usu_lib_w, 
			cd_setor_w,		 
			cd_perfil_w,		 
			ie_aviso_revisao_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
			 
			if (nm_usu_lib_w <> 'X') then 
				begin 
	 
				select	coalesce(max(nm_usuario),'X') 
				into STRICT	nm_usu_lib_w 
				from	usuario 
				where	nm_usuario	= nm_usu_lib_w 
				and	ie_situacao	= 'A';
				 
				end;
			end if;
				 
			if (nm_usu_lib_w <> 'X') and (position(nm_usu_lib_w in coalesce(nm_usuarios_w,'X')) = 0) then 
				begin 
	 
				if	((ie_aviso_revisao_w = 'S') or (ie_aviso_revisao_w = 'A')) then 
					nm_usuarios_w := substr(nm_usuarios_w || ',' || nm_usu_lib_w,1,255);
				end if;
	 
				end;
			end if;
	 
			if	((ie_aviso_revisao_w = 'E') or (ie_aviso_revisao_w = 'A') and (coalesce(nm_usu_lib_w,'X') <> 'X')) then 
				begin 
	 
				select	coalesce(substr(obter_dados_usuario_opcao(nm_usu_lib_w,'E'),1,255),'X') 
				into STRICT	ds_email_w 
				;
	 
				if (ds_email_w <> 'X') then 
					ds_email_destino_w := substr(ds_email_destino_w || ds_email_w || ';',1,2000);
				end if;
	 
				end;
			end if;
				 
			end;
		end loop;
		close c02;
	 
		 
		if (nm_usuarios_w IS NOT NULL AND nm_usuarios_w::text <> '') or (cd_setor_w IS NOT NULL AND cd_setor_w::text <> '') or (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
			begin 
		 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_sequencia_w 
			;
				 
			ds_mensagem_w	:= substr(wheb_mensagem_pck.get_texto(313076, 
						'NR_SEQ_CONTRATO_W='|| NR_SEQ_CONTRATO_W || 
						';DS_TITULO_W='|| DS_TITULO_W || 
						';NM_CONTRATADO_W='|| NM_CONTRATADO_W || 
						';DS_OBJETO_W='|| DS_OBJETO_W || 
						';DT_REVISAO_W='|| DT_REVISAO_W || 
						';QT_DIAS_W='|| obter_dias_entre_datas(clock_timestamp(), dt_revisao_w + qt_dias_revisao_w)),1,1200);
						 
						/*Contrato:#@NR_SEQ_CONTRATO_W#@ - #@DS_TITULO_W#@ 
						Contratado: #@NM_CONTRATADO_W#@ 
						Objeto do contrato: #@DS_OBJETO_W#@ 
						Data de revisão: #@DT_REVISAO_W#@ 
						Quantidade de dias para a revisão #@QT_DIAS_W#@ 
						Ação: Revisar o contrato antes do fim do prazo pré-estipulado.*/
 
			 
			insert into comunic_interna( 
				dt_comunicado, 
				ds_titulo, 
				ds_comunicado, 
				nm_usuario, 
				dt_atualizacao, 
				ie_geral, 
				nm_usuario_destino, 
				nr_sequencia, 
				ie_gerencial, 
				nr_seq_classif, 
				dt_liberacao, 
				ds_setor_adicional, 
				ds_perfil_adicional) 
			values (	clock_timestamp() + interval '1 days'/86400, 
				wheb_mensagem_pck.get_Texto(313080), /*'Revisão de contrato',*/
 
				ds_mensagem_w, 
				'Tasy', 
				clock_timestamp(), 
				'N', 
				nm_usuarios_w || ',', 
				nr_sequencia_w, 
				'N', 
				nr_seq_classif_w, 
				clock_timestamp(), 
				cd_setor_w, 
				cd_perfil_w);
					 
			if	((ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') and (coalesce(ds_email_origem_w,'X') <> 'X'))then 
				 
				begin 
		 
				if (substr(ds_email_destino_w,1,1) = ';') then 
					ds_email_destino_w := substr(ds_email_destino_w,2,255);
				end if;
				 
 
				CALL enviar_email( 
					wheb_mensagem_pck.get_Texto(313081), /*'Aviso de revisão de contrato',*/
 
					ds_mensagem_w, 
					ds_email_origem_w, 
					ds_email_destino_w, 
					'Aviso_Tasy', 
					'A');
								 
					 
				end;
			end if;
	 
			end;					
		end if;
		 
		end;
	end loop;
	close c01;
 
	end;
end loop;
close C03;	
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_ci_revisao_contrato ( cd_estabelecimento_p bigint) FROM PUBLIC;

