-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE DoseDiferenciada AS (qt_dose_diferenciada double precision, ie_gerar_disp boolean);


CREATE OR REPLACE PROCEDURE gerar_prescr_mat_hor (nr_prescricao_p prescr_medica.nr_prescricao%type, nr_seq_item_p prescr_material.nr_sequencia%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type, ie_lib_parc_p text default null, ie_somente_agora_p text default 'N', nr_seq_regra_p bigint default null, ie_dose_especial_p text default 'N') AS $body$
DECLARE


_ora2pg_r RECORD;
ds_horarios_w    varchar(2000);
ds_horarios_padr_w    varchar(2000);
ds_horarios_padr_comp_w  varchar(2000);
ds_hora_w    varchar(2000);
dt_liberacao_w    timestamp;
dt_horario_w    timestamp;
k      integer;
y      integer;
nr_sequencia_w    bigint;
nr_seq_prescr_w    integer;
qt_dose_w    double precision;
qt_total_dispensar_w  double precision;
cd_material_w    integer;
qt_hor_esp_w    integer;
dt_primeiro_horario_w  timestamp;
dt_libe_w    timestamp;
dt_suspensao_w    timestamp;
dt_fim_horario_w  timestamp;
dt_liberacao_medico_w  timestamp;
ie_agrupador_w    smallint;
nr_atendimento_w  bigint;
nr_seq_horario_w  bigint;
cd_unidade_medida_w  varchar(30);
cd_unid_med_dose_w  varchar(30);
cd_unid_med_dose_esp_w  varchar(30);
ds_horario_w    varchar(4000);
ie_copia_status_hor_w  varchar(1);
ie_gerar_especial_w  varchar(1);
cd_intervalo_w    varchar(7);
ie_dose_espec_agora_w  varchar(1);
ie_prescricao_dieta_w  varchar(1);
ie_etapa_esp_w    varchar(1);
ie_agora_especial_w  varchar(1);
qt_reg_w      bigint;
ie_etapa_especial_w  varchar(1);
nr_ocorrencia_w    double precision;
ie_esquema_alternado_w  varchar(1);
nr_seq_solucao_w    integer;

ie_agrupador_dil_w    smallint;
nr_sequencia_dil_w    bigint;
qt_dose_dil_w    double precision;
qt_total_disp_dil_w    double precision;
qt_dose_www      double precision;
cd_unidade_medida_dil_w  varchar(30);
cd_unid_med_dose_dil_w  varchar(30);
nr_ocorrencia_dil_w    double precision;
cd_material_dil_w    integer;
hr_prim_horario_w    varchar(5);
ie_urgente_w    varchar(1);
ie_urgente_ant_w    varchar(1);
qt_conversao_w    double precision;
qt_dose_especial_w  double precision;
qt_dose_especial_ww  double precision;
hr_dose_especial_w  varchar(5);
ie_acm_ww      varchar(1);
ie_se_necessario_ww varchar(1);
/* Rafael em 12/09/06 Funcionalidades da Administracao da Prescricao (ATEPAC_PG) */

nr_seq_procedimento_w  integer;
cd_procedimento_w  bigint;
ie_origem_proced_w  bigint;
nr_seq_proc_interno_w  bigint;
nr_ocor_proc_w    double precision;
ie_proc_urgente_w    varchar(1);
dt_prev_execucao_w  timestamp;
ds_hora_proc_w    varchar(2000);
dt_horario_proc_w  timestamp;
ds_horarios_proc_w    varchar(2000);
ds_horarios_padrao_proc_w  varchar(2000);
cd_material_exame_w  varchar(20);

nr_seq_recomendacao_w  integer;
cd_recomendacao_w  bigint;
ds_hora_rec_w    varchar(2000);
dt_horario_rec_w    timestamp;
nr_seq_classif_rec_w  bigint;
ds_horarios_rec_w    varchar(2000);
ds_horarios_padrao_rec_w  varchar(2000);
/* Fim Rafael em 12/09/06 */



/* Rafael em 07/10/2006 Funcionalidades da Administracao da Prescricao -> Identificar horarios especiais (SN, ACM e sem Horario) */

ie_se_necessario_w  varchar(1);
ie_se_necessario_dil_w  varchar(1);
ie_acm_w    varchar(1);
ie_acm_dil_w    varchar(1);
ds_diluicao_w    varchar(2000);
ie_horario_especial_w  varchar(1) := 'N';
qt_dieta_w    bigint;
cd_setor_atendimento_w  integer;
cd_estabelecimento_w  smallint;
dt_prescricao_w    timestamp;
dt_prescricao_ww    timestamp;
qT_dia_adic_w    bigint := 0;
qt_registro_w    bigint;
dt_inicio_prescr_w    timestamp;

nr_seq_procedimento_novo_w  integer;
nr_seq_exame_w    bigint;
ie_status_atend_w    smallint;
ie_status_execucao_w  varchar(3);
cd_setor_atendimento_proc_w  integer;
cd_setor_coleta_w    integer;
cd_setor_entrega_w          integer;
cd_setor_exec_fim_w         integer;
cd_setor_exec_inic_w        integer;
nr_seq_lab_w    varchar(20);
ie_gerar_proc_intervalo_w  varchar(1);
ie_suspenso_w    varchar(1);
ds_observacao_w    varchar(2000);
ds_dado_clinico_w    varchar(2000);
ds_material_especial_w  varchar(255);
ie_controlado_w    varchar(1);
ie_controlado_dil_w    varchar(1);

nr_seq_prescr_hor_w  integer;
dt_horario_proc_prev_w  timestamp;
ie_proc_atual_w    varchar(1);
qt_min_agora_w    bigint;
qt_min_especial_w    bigint;
ie_classif_urgente_w  varchar(3);
dt_limite_agora_w    timestamp;
dt_limite_especial_w  timestamp;
nr_seq_classif_w    bigint;
dt_liberacao_farmacia_w  timestamp;
ie_momento_lote_w    varchar(15) := 'E';
ajustar_disp_hor_farm_w  varchar(1) := 'N';
ie_padronizado_w    varchar(1);
ie_padronizado_dil_w  varchar(1);
ie_classif_nao_padrao_w  varchar(15);
ie_regra_disp_w    varchar(1);
ie_regra_disp_dil_w    varchar(1);
ie_lib_farm_w    varchar(1);
nr_agrupamento_w    double precision;
nr_agrupamento_dil_w  double precision;
cd_protocolo_w    bigint;
cd_protocolo_dil_w    bigint;
ie_material_adep_w    varchar(1);
ie_gerar_adep_w    varchar(1);
ie_componente_composto_w  varchar(1);
ds_dose_diferenciada_w  varchar(50);
ds_dose_diferenciada_ww  varchar(50);
ie_ctrl_loop_w    smallint := 0;
ie_loop_w    smallint := 0;
ie_ctrl_loop_ww    smallint := 0;
h      integer;
w      integer;
qt_dose_diferenciada_w  double precision;
qt_dose_hor_w    double precision;
cd_unid_med_dose_hor_w  varchar(30);

ie_usuario_medico_w  varchar(1);
ie_adep_w    varchar(15);
ie_adep_param_w    varchar(15);
ie_rep_adep_w    varchar(1);
cd_local_estoque_w  smallint;
cd_local_estoque_dil_w  smallint;
nr_seq_lote_w    bigint;
cd_motivo_baixa_w    smallint;
cd_motivo_baixa_dd_zero_w  smallint;
cd_motivo_baixa_dil_w  smallint;
qt_dispensar_hor_w    double precision;
qt_dispensar_w    double precision;
qt_unitaria_w    double precision;
qt_unitaria_dil_w    double precision;
nr_seq_kit_w    bigint;
qt_solucao_w    bigint;
ie_horario_acm_w    varchar(1);
ie_horario_sn_w    varchar(1);
nr_seq_turno_hor_esp_w  bigint;
qt_jejum_w    bigint;

/* varPrescrNaoMedicaADEP_w  varchar2(15); */

VarIdentPrescrADEP_w    varchar(15);
sqlerrm_w        varchar(2000);
nr_seq_solucao_old_w    integer  := 0;
nr_etapa_sol_w      smallint   := 0;
ie_gerar_associdos_ccg  varchar(1);

hr_turno_especial_w  varchar(15);
ie_classif_lote_w  varchar(15);

ie_agora_impressao_w  varchar(15);
nr_seq_turno_hor_ag_w  bigint;
hr_turno_agora_w  varchar(15);
hr_final_turno_agora_w  varchar(15);
qt_min_antes_atend_w  integer;

dt_lib_medico_w    timestamp;
ie_gerar_hr_dose_especial_w   varchar(1);

ds_horarios_ww    varchar(2000);
dt_ref_inicio_w    timestamp;
ie_operacao_interv_w  varchar(5);
ie_reordena_fixo_w  varchar(5);
ie_altera_dt_proxima_dose_w  varchar(1);

ie_gerar_hor_zerado_dd_w  varchar(1);
ie_gerar_dispensacao_w    varchar(1);
ie_local_estoque_mat_hor_w  varchar(1);
ie_contem_jejum_nut_w    varchar(1);
ie_gerar_horarios_susp_w  varchar(1);
ie_lib_individual_w    varchar(1);
nm_usuario_susp_w    varchar(15);
dt_suspensao_progr_w    timestamp;
dt_suspensao_ww      timestamp;
ie_atualiza_proximo_w    varchar(1);
ie_quimio_w      varchar(1);

--cursosr c21
nr_seq_classif_param_w    bigint;
ie_dose_especial_w    varchar(1);
dt_lib_horario_w    timestamp;

ie_dialise_w      varchar(2);
ie_motivo_prescricao_w  varchar(5);
dt_lib_hor_aux_w      timestamp  := clock_timestamp();
ie_cursor_w          varchar(1);
ie_gerar_proc_gedipa_job_w  varchar(1);
ie_define_agora_w    regra_tempo_disp.ie_define_agora%type;
nr_seq_mat_cpoe_w    prescr_material.nr_seq_mat_cpoe%type;

cd_funcao_origem_w      funcao.cd_funcao%type;

dt_suspensao_prescr_w    timestamp;
qt_hor_w          bigint;

ie_info_rastre_prescr_w    varchar(1);
ds_alteracao_rastre_w    varchar(1800);
ie_gerar_dil_supl_w    varchar(1);
ie_dose_esp_arrend_cima_w  varchar(1);
ie_via_aplicacao_w			prescr_material.ie_via_aplicacao%type;

ie_classif_normal_acm_sn_w  varchar(1);

/*Medical Device - Andeson Almeida*/

sql_w                varchar(2000);
ie_tipo_regra_disp_w varchar(10);
ie_regra_w			material_regra_disp.ie_regra%type;
type VetorDD is table of DoseDiferenciada index by integer;
vt_dose_diferenciada_w  vetorDD;

C01 CURSOR FOR
  SELECT  b.ie_agrupador,
      b.nr_sequencia,
      b.qt_dose,
      b.qt_total_dispensar,
      b.cd_unidade_medida,
      b.cd_unidade_medida_dose,
      b.nr_ocorrencia,
      b.cd_material,
      b.ds_horarios,
      padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
      --padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
      b.hr_prim_horario,
      coalesce(b.ie_urgencia,'N'),
      b.qt_dose_especial,
      b.hr_dose_especial,
      coalesce(b.ie_se_necessario,'N'),
      coalesce(b.ie_acm,'N'),
      substr(Obter_se_medic_controlado(b.cd_material),1,1),
      substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
      CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
      b.nr_agrupamento,
      b.cd_protocolo,
      substr(obter_se_componente_composto(b.nr_prescricao, b.nr_sequencia, b.nr_agrupamento),1,1) ie_componente_composto,
      b.ds_dose_diferenciada,
      b.cd_local_estoque,
      b.qt_unitaria,
      coalesce(b.cd_motivo_baixa,0),
      b.nr_seq_kit,
      b.ie_dose_espec_agora,
      a.dt_liberacao_medico,
      to_date(CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ,'dd/mm/yyyy hh24:mi:ss'),
      b.cd_unid_med_dose_esp,
      b.nr_seq_mat_cpoe,
      b.nr_seq_recomendacao,
	  b.ie_via_aplicacao
  from  prescr_material b,
      prescr_medica a
  where  a.nr_prescricao  = b.nr_prescricao
  and  ((b.nr_sequencia = nr_seq_item_p) or (b.nr_seq_kit  = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
  and    not exists (  SELECT  1
            from  prescr_mat_hor x
            where  x.nr_prescricao    = a.nr_prescricao
            and    x.nr_seq_material  = b.nr_sequencia
            and    coalesce(x.qt_minutos_agora::text, '') = ''
            and    Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S')
  and  b.ie_agrupador  = 1
  and  coalesce(b.ie_administrar,'S') = 'S'
  and  coalesce(dt_suspensao_prescr_w::text, '') = ''
  and  coalesce(b.ie_gerar_horario,'S') <> 'N'
  and  ((coalesce(b.dt_proxima_dose, dt_inicio_prescr_w) >= dt_inicio_prescr_w) or
     ((ie_altera_dt_proxima_dose_w = 'S') and (b.dt_proxima_dose IS NOT NULL AND b.dt_proxima_dose::text <> '') and (b.dt_proxima_dose <= dt_inicio_prescr_w)) or
     ((b.dt_proxima_dose IS NOT NULL AND b.dt_proxima_dose::text <> '') and (b.dt_proxima_dose <= dt_inicio_prescr_w) and (obter_ocorrencia_intervalo(b.cd_intervalo,24,'H') <= 24)))
  and  coalesce(b.ie_suspenso,'N') <> 'S'
  and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                          from   prescr_material_incon_farm y
                          where   b.nr_prescricao = y.nr_prescricao
                          and   b.nr_sequencia   = y.nr_seq_material
                          and  coalesce(y.ie_situacao,'A') = 'A'))
                      and not exists (  select  1
                          from   prescr_material_incon_farm z
                          where   b.nr_prescricao = z.nr_prescricao
                          and   b.nr_sequencia_solucao   = z.nr_seq_solucao
                          and  coalesce(z.ie_situacao,'A') = 'A'))
  and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
     ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')))
  and  ((coalesce(nr_seq_regra_p::text, '') = '') or (Obter_momento_lib_item(nr_seq_regra_p,b.cd_material,a.cd_setor_atendimento,b.cd_intervalo,b.ie_acm,b.ie_se_necessario,b.ie_dose_espec_agora,b.ie_urgencia,'N') = 'N'))
  and  a.nr_prescricao  = nr_prescricao_p
  order by
    coalesce(b.nr_seq_kit, 0), coalesce(b.nr_sequencia_diluicao, 0), coalesce(b.nr_sequencia_solucao, 0), b.nr_agrupamento, b.nr_sequencia;

C02 CURSOR FOR
SELECT  ie_agrupador,
  nr_sequencia,
  qt_dose,
  qt_total_dispensar,
  cd_unidade_medida,
  cd_unidade_medida_dose,
  nr_ocorrencia,
  cd_material,
  ds_horarios,
  padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
  --padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
  hr_prim_horario,
  coalesce(ie_urgencia,'N'),
  qt_dose_especial,
  hr_dose_especial,
  coalesce(ie_se_necessario,'N'),
  coalesce(ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  coalesce(substr(adep_obter_regra_inclusao(  'MAT',
                      a.cd_estabelecimento,
                      cd_setor_atendimento_w,
                      cd_perfil_p,
                      b.cd_material,
                      null,
                      null,
                      null,
                      a.cd_setor_atendimento,
                      null,
                      nr_prescricao_p,
                      null),1,1),'S'), -- nr_seq_exame_p
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0),
  b.nr_seq_kit,
  b.nr_seq_recomendacao
from  prescr_material b,
  prescr_medica a
where  a.nr_prescricao  = b.nr_prescricao
and  ((b.nr_sequencia = nr_seq_item_p) or (b.nr_seq_kit  = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao    = a.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and  coalesce(b.dt_proxima_dose, dt_inicio_prescr_w) >= dt_inicio_prescr_w
and  coalesce(b.ie_administrar,'S') = 'S'
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  coalesce(b.ie_suspenso,'N') <> 'S'
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ie_agrupador  = 2
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')))
and  ((coalesce(nr_seq_regra_p::text, '') = '') or (Obter_momento_lib_item(nr_seq_regra_p,b.cd_material,a.cd_setor_atendimento,b.cd_intervalo,b.ie_acm,b.ie_se_necessario,b.ie_dose_espec_agora,b.ie_urgencia,'N') = 'N'))
and  a.nr_prescricao  = nr_prescricao_p;

C03 CURSOR FOR
SELECT  b.ie_agrupador,
  b.nr_sequencia,
  b.qt_dose,
  b.qt_total_dispensar,
  b.cd_unidade_medida,
  b.cd_unidade_medida_dose,
  b.nr_ocorrencia,
  b.cd_material,
  coalesce(b.ie_se_necessario,'N'),
  coalesce(b.ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0),
  b.qt_unitaria,
  coalesce(b.qt_dose_especial,qt_dose_especial_w)
from  prescr_material b
where  b.nr_prescricao    = nr_prescricao_p
and  ((b.nr_sequencia_diluicao = nr_seq_item_p) or (coalesce(nr_seq_item_p,0)  = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao  = b.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  x.dt_horario  = dt_horario_w
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and  coalesce(b.dt_proxima_dose, dt_inicio_prescr_w) >= dt_inicio_prescr_w
and  coalesce(b.ie_administrar,'S') = 'S'
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  coalesce(b.ie_suspenso,'N') <> 'S'
and  b.nr_sequencia_diluicao  = nr_seq_prescr_w
and  b.ie_agrupador in (3,7,9)
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')));

C04 CURSOR FOR
SELECT  b.ie_agrupador,
  b.nr_sequencia,
  b.qt_dose,
  b.qt_total_dispensar,
  b.cd_unidade_medida,
  b.cd_unidade_medida_dose,
  b.nr_ocorrencia,
  b.cd_material,
  coalesce(a.ds_horarios,a.hr_prim_horario),
  coalesce(a.ie_esquema_alternado,'N'),
  a.nr_seq_solucao,
  coalesce(a.ie_urgencia,'N'),
  coalesce(a.ie_se_necessario,'N'),
  coalesce(a.ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0),
  coalesce(a.ie_etapa_especial,'N'),
  a.hr_prim_horario,
  CASE WHEN coalesce(a.nr_seq_dialise,0)=0 THEN 'N'  ELSE 'S' END
from  prescr_material b,
  prescr_solucao a
where  a.nr_prescricao  = nr_prescricao_p
and  ((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao    = a.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and  a.nr_prescricao  = b.nr_prescricao
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  coalesce(b.ie_suspenso,'N') <> 'S'
and  a.nr_seq_solucao = b.nr_sequencia_solucao
and  ((coalesce(a.ie_acm,'N')    = 'N') or (coalesce(ie_etapa_especial,'N')  = 'S') or (coalesce(ie_horario_acm_w,'S')  = 'S'))
and  ((coalesce(a.ie_se_necessario,'N')  = 'N') or (coalesce(ie_etapa_especial,'N')  = 'S') or (coalesce(ie_horario_sn_w,'S')  = 'S'))
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')))
and  ((coalesce(nr_seq_regra_p::text, '') = '') or (Obter_momento_lib_item(nr_seq_regra_p,b.cd_material,cd_setor_atendimento_w,b.cd_intervalo,b.ie_acm,b.ie_se_necessario,b.ie_dose_espec_agora,b.ie_urgencia,'N') = 'N'));

C004 CURSOR FOR
SELECT  CASE WHEN position(obter_desc_expressao(618483) in b.ds_horario)=0 THEN substr(b.ds_horario,4,position(' as' in b.ds_horario)+1-4)  ELSE substr(b.ds_horario,4,position(obter_desc_expressao(618483) in b.ds_horario)-4) END
from  prescr_solucao_esquema b
where  b.nr_prescricao    = nr_prescricao_p
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and    b.nr_seq_solucao  = nr_seq_solucao_w;

C05 CURSOR FOR
SELECT  b.ie_agrupador,
  b.nr_sequencia,
  b.qt_dose,
  b.qt_total_dispensar,
  b.cd_unidade_medida,
  b.cd_unidade_medida_dose,
  b.nr_ocorrencia,
  b.cd_material,
  b.ds_horarios,
  padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
  --padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
  b.hr_prim_horario,
  coalesce(b.ie_urgencia,'N'),
  coalesce(b.ie_se_necessario,'N'),
  coalesce(b.ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0)
from  prescr_procedimento c,
  prescr_material b,
  prescr_medica a
where  c.nr_prescricao = a.nr_prescricao
and  c.nr_prescricao = b.nr_prescricao
and  c.nr_sequencia = b.nr_sequencia_proc
and   a.nr_prescricao  = b.nr_prescricao
and  a.nr_prescricao  = nr_prescricao_p
and  ((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao    = a.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and  coalesce(b.dt_proxima_dose, dt_inicio_prescr_w) >= dt_inicio_prescr_w
and  coalesce(b.ie_administrar,'S') = 'S'
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  coalesce(b.ie_suspenso,'N') <> 'S'
and  ((ie_gerar_associdos_ccg = 'S') or
  ((ie_gerar_associdos_ccg = 'N') and (obter_se_ctrl_glic_proc(c.nr_seq_proc_interno) = 'N')))
and  ie_agrupador  = 5
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')));

C06 CURSOR FOR
SELECT  b.ie_agrupador,
  b.nr_sequencia,
  b.qt_dose,
  b.qt_total_dispensar,
  b.cd_unidade_medida,
  b.cd_unidade_medida_dose,
  b.nr_ocorrencia,
  b.cd_material,
  coalesce(b.ie_urgencia,'N'),
  coalesce(b.ie_se_necessario,'N'),
  coalesce(b.ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0)
from  prescr_material b,
  prescr_medica a
where  b.nr_prescricao  = nr_prescricao_p
and  ((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao    = b.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and   b.nr_prescricao = a.nr_prescricao
and  coalesce(b.dt_proxima_dose, dt_inicio_prescr_w) >= dt_inicio_prescr_w
and  coalesce(b.ie_administrar,'S') = 'S'
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  coalesce(b.ie_suspenso,'N') <> 'S'
and  b.ie_agrupador  = 6
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')));

C08 CURSOR FOR
SELECT  ie_agrupador,
  nr_sequencia,
  qt_dose,
  qt_total_dispensar,
  cd_unidade_medida,
  cd_unidade_medida_dose,
  nr_ocorrencia,
  cd_material,
  ds_horarios,
  coalesce(padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ), b.hr_prim_horario),
  --padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
  cd_intervalo,
  hr_prim_horario,
  coalesce(ie_urgencia,'N'),
  coalesce(ie_se_necessario,'N'),
  coalesce(ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0),
  qt_dose_especial,
  hr_dose_especial
from  prescr_material b,
  prescr_medica a
where  a.nr_prescricao  = b.nr_prescricao
and  a.nr_prescricao  = nr_prescricao_p
and  ((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao    = a.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  coalesce(b.ie_suspenso,'N') <> 'S'
and  ie_agrupador  = 8
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')));

C10 CURSOR FOR
SELECT  b.ie_agrupador,
  b.nr_sequencia,
  b.qt_dose,
  b.qt_total_dispensar,
  b.cd_unidade_medida,
  b.cd_unidade_medida_dose,
  b.nr_ocorrencia,
  b.cd_material,
  coalesce(b.ie_urgencia,'N'),
  coalesce(b.ie_se_necessario,'N'),
  coalesce(b.ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0)
from  prescr_material b
where  b.nr_prescricao  = nr_prescricao_p
and  ((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao    = b.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  coalesce(b.ie_suspenso,'N') <> 'S'
and  b.ie_agrupador  = 10
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')));

C11 CURSOR FOR
SELECT  b.ie_agrupador,
  b.nr_sequencia,
  b.qt_dose,
  b.qt_total_dispensar,
  b.cd_unidade_medida,
  b.cd_unidade_medida_dose,
  b.nr_ocorrencia,
  b.cd_material,
  coalesce(b.ie_urgencia,'N'),
  coalesce(b.ie_se_necessario,'N'),
  coalesce(b.ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(cd_estabelecimento_w,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0)
from  prescr_material b
where  b.nr_prescricao  = nr_prescricao_p
and  ((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao    = b.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  coalesce(b.ie_suspenso,'N') <> 'S'
and  b.ie_agrupador  = 11
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')));

C12 CURSOR FOR
SELECT  ie_agrupador,
  nr_sequencia,
  qt_dose,
  qt_total_dispensar,
  cd_unidade_medida,
  cd_unidade_medida_dose,
  nr_ocorrencia,
  cd_material,
  ds_horarios,
  padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
  --padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
  hr_prim_horario,
  coalesce(ie_urgencia,'N'),
  qt_dose_especial,
  hr_dose_especial,
  coalesce(ie_se_necessario,'N'),
  coalesce(ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0)
from  prescr_material b,
  prescr_medica a
where  a.nr_prescricao  = b.nr_prescricao
and  a.nr_prescricao  = nr_prescricao_p
and  ((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao    = a.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  coalesce(b.ie_suspenso,'N') <> 'S'
and  ie_agrupador  = 12
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')));

C13 CURSOR FOR
SELECT  ie_agrupador,
  nr_sequencia,
  qt_dose,
  qt_total_dispensar,
  cd_unidade_medida,
  cd_unidade_medida_dose,
  nr_ocorrencia,
  cd_material,
  ds_horarios,
  padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ),
  --padroniza_horario_prescr(b.ds_horarios, decode(substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1),'N','01/01/2000 23:59:59', to_char(nvl(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss'))),
  hr_prim_horario,
  coalesce(ie_urgencia,'N'),
  qt_dose_especial,
  hr_dose_especial,
  coalesce(ie_se_necessario,'N'),
  coalesce(ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0)
from  prescr_material b,
  prescr_medica a
where  a.nr_prescricao  = b.nr_prescricao
and  a.nr_prescricao  = nr_prescricao_p
and  ((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao    = a.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and    coalesce(dt_suspensao_prescr_w::text, '') = ''
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  coalesce(b.ie_suspenso,'N') <> 'S'
and  ie_agrupador  = 15
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')));

C15 CURSOR FOR
SELECT  b.ie_agrupador,
  b.nr_sequencia,
  b.qt_dose,
  b.qt_total_dispensar,
  b.cd_unidade_medida,
  b.cd_unidade_medida_dose,
  b.nr_ocorrencia,
  b.cd_material,
  b.ds_horarios,
  coalesce(padroniza_horario_prescr(b.ds_horarios, CASE WHEN coalesce(b.qt_dia_prim_hor,0)=0 THEN CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,b.hr_prim_horario),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END   ELSE '01/01/2000 23:59:59' END ), b.hr_prim_horario),
  b.cd_intervalo,
  b.hr_prim_horario,
  coalesce(b.ie_urgencia,'N'),
  coalesce(b.ie_se_necessario,'N'),
  coalesce(b.ie_acm,'N'),
  substr(Obter_se_medic_controlado(b.cd_material),1,1),
  substr(obter_se_material_padronizado(a.cd_estabelecimento,b.cd_material),1,1),
  CASE WHEN coalesce(b.ie_regra_disp,'S')='N' THEN 'N'  ELSE 'S' END ,
  b.nr_agrupamento,
  b.cd_protocolo,
  b.cd_local_estoque,
  coalesce(b.cd_motivo_baixa,0),
  c.qt_dose_especial,
  c.hr_dose_especial,
  b.dt_suspensao_progr,
  b.dt_suspensao,
  b.nm_usuario_susp
from  prescr_material b,
  prescr_medica a,
  prescr_leite_deriv c
where  a.nr_prescricao  = b.nr_prescricao
and  b.nr_prescricao = c.nr_prescricao
and  b.nr_seq_leite_deriv = c.nr_sequencia
and  a.nr_prescricao  = nr_prescricao_p
and  ((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and (not exists (  SELECT  1
      from  prescr_mat_hor x
      where  x.nr_prescricao    = a.nr_prescricao
      and  x.nr_seq_material  = b.nr_sequencia
      and  Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'))
and  (((coalesce(dt_suspensao_prescr_w::text, '') = '') and (coalesce(b.ie_suspenso,'N') <> 'S')) or (ie_gerar_horarios_susp_w  = 'S'))
and  coalesce(b.ie_gerar_horario,'S') <> 'N'
and  ie_agrupador  = 16
and  ((coalesce(ie_lib_parc_p,'N') = 'N') or ((coalesce(b.nr_seq_inconsistencia::text, '') = '') and not exists (  select  1
                        from   prescr_material_incon_farm y
                        where   b.nr_prescricao = y.nr_prescricao
                        and   b.nr_sequencia   = y.nr_seq_material
                        and  coalesce(y.ie_situacao,'A') = 'A')))
and  ((coalesce(ie_somente_agora_p,'N') = 'N') or (coalesce(b.ie_urgencia,'N') = 'S') or (coalesce(b.ie_se_Necessario,'N') = 'S') or (coalesce(b.ie_acm,'N') = 'S') or
   ((ie_dose_especial_p = 'E') and (coalesce(b.ie_dose_espec_agora,'N') = 'S')));

C016 CURSOR FOR
  SELECT  nr_sequencia,
    ie_classif_urgente,
    ie_controlado,
    ie_padronizado
  from  classif_lote_disp_far
  where  cd_estabelecimento = cd_estabelecimento_w
  and  ie_situacao = 'A'
  order by ie_classif_urgente,
    ie_controlado desc,
    ie_padronizado desc;

C20 CURSOR FOR
  SELECT  ie_momento_lote
  from  regra_disp_lote_farm
  where  ((ie_motivo_prescricao = ie_motivo_prescricao_w) or (coalesce(ie_motivo_prescricao::text, '') = ''))
  and  clock_timestamp() between PKG_DATE_UTILS.get_DateTime(clock_timestamp(), coalesce(dt_hora_inicio,clock_timestamp())) and PKG_DATE_UTILS.get_DateTime(clock_timestamp(), coalesce(dt_hora_fim,clock_timestamp()))
  and    ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia) and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_fim_vigencia,clock_timestamp()))
  and    coalesce(cd_setor_atendimento,cd_setor_atendimento_w)  = cd_setor_atendimento_w
  and    nr_sequencia  = coalesce(nr_seq_regra_p, nr_sequencia)
  and    ie_situacao = 'A'
  and   ((ie_quimio_w <> 'S' and coalesce(ie_quimioterapicas,'N') <> 'S') or (ie_quimio_w = 'S'))
  order by CASE WHEN ie_quimioterapicas='S' THEN 'Z'  ELSE CASE WHEN ie_quimioterapicas='N' THEN 'C'  ELSE 'B' END  END ,coalesce(cd_setor_atendimento,0), coalesce(ie_motivo_prescricao,0);

C21 CURSOR FOR
  SELECT  a.nr_sequencia,
    b.cd_local_estoque,
    a.ds_horario
  from  prescr_mat_hor a,
    prescr_material b
  where  a.nr_prescricao  = nr_prescricao_p
  and  a.nr_prescricao = b.nr_prescricao
  and  a.nr_seq_material = b.nr_sequencia
  and  (a.dt_lib_horario IS NOT NULL AND a.dt_lib_horario::text <> '')
  and  ((a.nr_seq_material = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
  order by b.nr_sequencia;

c25 CURSOR FOR
SELECT  'M' ie_cursor,
    a.nr_sequencia,
    b.nr_sequencia
from  prescr_material a,
    prescr_mat_hor b
where  a.nr_prescricao = b.nr_prescricao
and    a.nr_sequencia  = b.nr_seq_material
and    a.nr_prescricao  = nr_prescricao_p
and    b.nr_prescricao  = nr_prescricao_p
and    (b.dt_lib_horario IS NOT NULL AND b.dt_lib_horario::text <> '')
and    b.dt_lib_horario >= dt_lib_hor_aux_w
and    a.ie_agrupador not in (4,13)

union all

SELECT  'S' ie_cursor,
    a.nr_sequencia_solucao,
    b.nr_sequencia
from  prescr_material a,
    prescr_mat_hor b
where  a.nr_prescricao = b.nr_prescricao
and    a.nr_sequencia  = b.nr_seq_material
and    a.nr_prescricao  = nr_prescricao_p
and    b.nr_prescricao  = nr_prescricao_p
and    (b.dt_lib_horario IS NOT NULL AND b.dt_lib_horario::text <> '')
and    b.dt_lib_horario >= dt_lib_hor_aux_w
and    a.ie_agrupador in (4,13)
and    (a.nr_sequencia_solucao IS NOT NULL AND a.nr_sequencia_solucao::text <> '');

procedure gerar_reconst_dil_hor is
;
BEGIN
    open C03;
    loop
    fetch C03 into
      ie_agrupador_dil_w,
      nr_sequencia_dil_w,
      qt_dose_dil_w,
      qt_total_disp_dil_w,
      cd_unidade_medida_dil_w,
      cd_unid_med_dose_dil_w,
      nr_ocorrencia_dil_w,
      cd_material_dil_w,
      ie_se_necessario_dil_w,
      ie_acm_dil_w,
      ie_controlado_dil_w,
      ie_padronizado_dil_w,
      ie_regra_disp_dil_w,
      nr_agrupamento_dil_w,
      cd_protocolo_dil_w,
      cd_local_estoque_dil_w,
      cd_motivo_baixa_dil_w,
      qt_unitaria_w,
      qt_dose_especial_w;
    EXIT WHEN NOT FOUND; /* apply on C03 */

      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_sequencia_w
;
    --- Inicio MD1
      begin
        sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
        EXECUTE sql_w using in 0,
									  in ie_se_necessario_dil_w,
									  in ie_acm_dil_w,
									  in ie_se_necessario_w,
									  in ie_acm_w,
									  in qt_dose_especial_w,
									  in hr_dose_especial_w,
									  in  ie_gerar_especial_w,
									  out ie_horario_especial_w;
      exception
        when others then
          ie_horario_especial_w := null;
      end;

    --- Fim MD1

    
    --- Inicio MD2
    
      begin
        sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
        EXECUTE sql_w using in 0,
                                      in ie_classif_nao_padrao_w,
									  in ie_padronizado_dil_w,
									  in ie_padronizado_w,
									  in ie_classif_normal_acm_sn_w,
									  in ie_se_necessario_dil_w,
									  in ie_se_necessario_w,
									  in ie_acm_dil_w,
									  in ie_acm_w,
									  in dt_horario_w,
									  in dt_limite_agora_w,
									  in ie_urgente_w,
									  in ie_agora_impressao_w,
									  in ie_define_agora_w,
									  in qt_min_antes_atend_w,
									  in dt_limite_especial_w,
									  out ie_classif_urgente_w;
      exception
        when others then
          ie_classif_urgente_w := null;
      end;

    --- Fim MD2

    
    --- Inicio MD3
	  
	  SELECT * FROM obter_dose_um_horario_pmh(cd_material_dil_w, qt_dose_dil_w, cd_unid_med_dose_dil_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w; -- Nao precisa levar pro MD
	  BEGIN
	    sql_w := 'BEGIN calcular_ocor_dil_dispensar_md(:1, :2, :3, :4, :5, :6, :7); END;';
		EXECUTE sql_w USING IN 0,
		                              IN qt_total_disp_dil_w,
									  IN OUT nr_ocorrencia_dil_w,
									  IN ie_agrupador_dil_w,
									  IN nr_ocorrencia_w,
									  IN qt_unitaria_w,
									  OUT qt_dispensar_hor_w;
	  EXCEPTION
	    WHEN others THEN
		  nr_ocorrencia_dil_w := null;
		  qt_dispensar_hor_w := null;
	  END;
	
      --- Fim MD3
	  
      begin

        dt_suspensao_w    := null;
        dt_fim_horario_w  := null;
        if (ie_copia_status_hor_w  = 'S') then
          select  max(CASE WHEN a.ie_suspenso_adep='S' THEN a.dt_suspensao  ELSE null END ),
            max(a.dt_fim_horario)
          into STRICT  dt_suspensao_w,
            dt_fim_horario_w
          from  prescr_medica b,
            prescr_mat_hor a
          where  a.nr_prescricao    = b.nr_prescricao
          and  b.nr_atendimento  = nr_atendimento_w
          and  a.ie_agrupador    = ie_agrupador_dil_w
          and  a.dt_horario    = dt_horario_w
          and  a.cd_material    = cd_material_dil_w
          and  a.qt_dose    = qt_dose_dil_w
          and  a.nr_prescricao    <> nr_prescricao_p
          and  a.cd_unidade_medida_dose = cd_unid_med_dose_dil_w;
        end if;

        select  count(*)
        into STRICT  qt_hor_w
        from  prescr_mat_hor where nr_prescricao   = nr_prescricao_p
        and  nr_seq_material  = nr_sequencia_dil_w
        and  coalesce(ie_dose_especial,'N') = 'S' LIMIT 1;

        if (qt_hor_w = 0) then
          select  count(*)
          into STRICT  qt_hor_w
          from  prescr_medica b,
            prescr_mat_hor x where   x.nr_prescricao    = nr_prescricao_p
          and  b.nr_prescricao    = x.nr_prescricao
          and  x.nr_seq_material  = nr_sequencia_dil_w
          and  (x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
          and  (b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
          and  (clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
          and  coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
        end if;

        if (qt_hor_w = 0) then
          insert into prescr_mat_hor(
            nr_sequencia,
            nr_seq_digito,
            nr_prescricao,
            nr_seq_material,
            ie_agrupador,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            ds_horario,
            dt_horario,
            qt_dose,
            qt_dispensar,
            cd_unidade_medida,
            cd_unidade_medida_dose,
            cd_material,
            nr_ocorrencia,
            qt_dispensar_hor,
            ie_urgente,
            ie_horario_especial,
            nr_seq_turno,
            ie_aprazado,
            ie_controlado,
            ie_padronizado,
            ie_classif_urgente,
            ie_dispensar_farm,
            nr_seq_superior,
            nr_agrupamento,
            ie_adep,
            qt_horario,
            cd_unid_med_hor,
            cd_motivo_baixa,
            dt_lib_horario,
            dt_suspensao,
            dt_fim_horario,
            nr_atendimento,
            ie_dose_especial)
          values (  nr_sequencia_w,
            calcula_digito('MODULO11',nr_sequencia_w),
            nr_prescricao_p,
            nr_sequencia_dil_w,
            ie_agrupador_dil_w,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            to_char(dt_horario_w,'hh24:mi'),
            dt_horario_w,
            qt_dose_dil_w,
            CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
            cd_unidade_medida_dil_w,
            cd_unid_med_dose_dil_w,
            cd_material_dil_w,
            nr_ocorrencia_dil_w,
            CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
            ie_urgente_w,
            coalesce(ie_horario_especial_w,'N'),
            Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_dil_w),
            'N',
            ie_controlado_dil_w,
            ie_padronizado_dil_w,
            ie_classif_urgente_w,
            ie_regra_disp_dil_w,
            nr_seq_prescr_w,
            nr_agrupamento_w,
            ie_adep_w,
            qt_dose_hor_w,
            cd_unid_med_dose_hor_w,
            cd_motivo_baixa_dil_w,
            clock_timestamp(),
            dt_suspensao_w,
            dt_fim_horario_w,
            nr_atendimento_w,
            'S');

          CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_dil_w, nr_sequencia_w, nm_usuario_p);
        end if;

      exception when others then
        CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_dil_w, ie_agrupador_dil_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
        sqlerrm_w := substr(sqlerrm,1,2000);
      end;
    end loop;
    close C03;
  end;

begin

select   coalesce(max('S'),'N')
into STRICT  ie_quimio_w
from  paciente_atendimento
where  nr_prescricao = nr_prescricao_p;

delete
from   prescr_mat_hor
where  nr_prescricao = nr_prescricao_p
and  coalesce(dt_lib_horario::text, '') = ''
and  coalesce(dt_suspensao::text, '') = ''
and  (((nr_seq_material = nr_seq_item_p) or (nr_seq_superior = nr_seq_item_p)) or (coalesce(nr_seq_item_p,0) = 0));

VarIdentPrescrADEP_w := obter_param_usuario(924, 246, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, VarIdentPrescrADEP_w);
ie_agora_especial_w := obter_param_usuario(924, 519, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_agora_especial_w);
ie_gerar_associdos_ccg := obter_param_usuario(1113, 191, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_associdos_ccg);
ie_gerar_hr_dose_especial_w := obter_param_usuario(924, 596, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_hr_dose_especial_w);
ie_altera_dt_proxima_dose_w := obter_param_usuario(924, 694, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_altera_dt_proxima_dose_w);
ie_copia_status_hor_w := obter_param_usuario(924, 714, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_copia_status_hor_w);
ie_gerar_hor_zerado_dd_w := obter_param_usuario(924, 791, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_hor_zerado_dd_w);
ie_local_estoque_mat_hor_w := obter_param_usuario(924, 851, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_local_estoque_mat_hor_w);
ie_contem_jejum_nut_w := obter_param_usuario(924, 854, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_contem_jejum_nut_w);
ie_gerar_dil_supl_w := obter_param_usuario(924, 296, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_dil_supl_w);
ie_dose_esp_arrend_cima_w := obter_param_usuario(924, 1132, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_dose_esp_arrend_cima_w);

ie_info_rastre_prescr_w  := 'N';

Select  coalesce(max(cd_tipo_baixa),0)
into STRICT  cd_motivo_baixa_dd_zero_w
from  tipo_baixa_prescricao
where  ie_prescricao_devolucao = 'P'
and  coalesce(ie_atualiza_estoque,'S') = 'N'
and  coalesce(ie_conta_paciente,'S') = 'N';

select  max(dt_liberacao),
    max(dt_primeiro_horario),
    max(cd_setor_atendimento),
    max(cd_local_estoque),
    coalesce(max(cd_estabelecimento),1),
    PKG_DATE_UTILS.start_of(max(dt_prescricao),'mi', 0),
    max(dt_inicio_prescr),
    max(dt_liberacao_farmacia),
    coalesce(max(ie_lib_farm),'N'),
    coalesce(max(ie_adep),obter_se_setor_adep(max(cd_setor_atendimento))),
    max(ie_adep),
    max(nr_atendimento),
    max(dt_liberacao_medico),
    max(ie_motivo_prescricao),
    coalesce(max(cd_funcao_origem),924),
    max(dt_suspensao)
into STRICT  dt_liberacao_w,
    dt_primeiro_horario_w,
    cd_setor_atendimento_w,
    cd_local_estoque_w,
    cd_estabelecimento_w,
    dt_prescricao_w,
    dt_inicio_prescr_w,
    dt_liberacao_farmacia_w,
    ie_lib_farm_w,
    ie_rep_adep_w,
    ie_adep_param_w,
    nr_atendimento_w,
    dt_liberacao_medico_w,
    ie_motivo_prescricao_w,
    cd_funcao_origem_w,
    dt_suspensao_prescr_w
from  prescr_medica
where  nr_prescricao  = nr_prescricao_p;

qt_registro_w  := 0;

if (coalesce(nr_seq_item_p,0) > 0) then
  select  max(dt_lib_material),
      max(dt_lib_farmacia)
  into STRICT  dt_liberacao_w,
      dt_liberacao_farmacia_w
  from  prescr_material
  where  nr_prescricao  = nr_prescricao_p
  and  nr_sequencia  = nr_seq_item_p;
end if;

open C20;
loop
fetch C20 into
  ie_momento_lote_w;
EXIT WHEN NOT FOUND; /* apply on C20 */
  begin
  ie_momento_lote_w  := ie_momento_lote_w;
  end;
end loop;
close C20;

if  ((((ie_momento_lote_w = 'E') or (ie_lib_farm_w = 'N')) and (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') and (qt_registro_w = 0)) or
  (ie_momento_lote_w = 'M' AND dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') or
  ((ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') and (qt_registro_w = 0))) or (coalesce(ie_lib_parc_p,'N') = 'S') or (ie_somente_agora_p = 'S') then
  begin
  if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
    dt_liberacao_w  := dt_liberacao_farmacia_w;
  elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
    dt_liberacao_w  := dt_liberacao_medico_w;
  else dt_liberacao_w  :=  PKG_DATE_UTILS.get_DateTime(clock_timestamp(),clock_timestamp());--to_date(sysdate,'dd/mm/yyyy hh24:mi:ss');
  end if;


  ie_gerar_proc_intervalo_w := obter_Param_Usuario(924, 192, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_proc_intervalo_w);
  /* obter_param_usuario(924, 217, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, varPrescrNaoMedicaADEP_w); */

  ie_usuario_medico_w := obter_se_usuario_medico(nm_usuario_p);

  select  coalesce(max(qt_min_agora),0),
    coalesce(max(qt_min_especial),0),
    max(ie_classif_urgencia),
    coalesce(max(ie_horario_acm),'S'),
    coalesce(max(ie_horario_sn),'S'),
    coalesce(max(ie_classif_lote), 'N'),
    coalesce(max(ie_forma_agora), 'N'),
    coalesce(max(ie_gerar_proc_gedipa_job),'S'),
    coalesce(max(ie_classif_normal_acm_sn),'N')
  into STRICT  qt_min_agora_w,
    qt_min_especial_w,
    ie_classif_nao_padrao_w,
    ie_horario_acm_w,
    ie_horario_sn_w,
    ie_classif_lote_w,
    ie_agora_impressao_w,
    ie_gerar_proc_gedipa_job_w,
    ie_classif_normal_acm_sn_w
  from  parametros_farmacia
  where  cd_estabelecimento  = cd_estabelecimento_w;

  --- Inicio MD4
  
  begin
    sql_w := 'begin obter_data_limite_md(:1, :2, :3, :4, :5); end;';
    EXECUTE sql_w using in dt_liberacao_w,
                                  in qt_min_agora_w,
								  in qt_min_especial_w,
								  out dt_limite_agora_w,
								  out dt_limite_especial_w;
  exception
    when others then
      dt_limite_agora_w := null;
      dt_limite_especial_w := null;
  end;

  --- Fim MD4
  
  if (ie_classif_lote_w  = 'S' ) then
    nr_seq_turno_hor_esp_w   := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_limite_especial_w,'hh24:mi'), cd_local_estoque_w);

    if (coalesce(nr_seq_turno_hor_esp_w,0) > 0) then
      begin

      select  to_char(b.hr_final,'hh24:mi')
      into STRICT  hr_turno_especial_w
      from  regra_turno_disp_param b,
        regra_turno_disp a
      where  a.nr_sequencia    = b.nr_seq_turno
      and  a.cd_estabelecimento  = cd_estabelecimento_w
      and  a.nr_sequencia    = nr_seq_turno_hor_esp_w
      and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0))
      order by coalesce(b.cd_setor_atendimento,0),
      to_char(b.hr_final,'hh24:mi');

      dt_limite_especial_w  := PKG_DATE_UTILS.get_Time(dt_limite_especial_w, hr_turno_especial_w);
      if (hr_turno_especial_w = '00:00') then
        dt_limite_especial_w  := PKG_DATE_UTILS.get_Time(dt_limite_especial_w, 23, 59, 59);
      end if;

      /*Esse IF existe para que se:
        A data de limite especial ficar menor que a liberacao pelo fato de concatenar horario e o horario for 01:00 por exemplo...*/
      if (dt_liberacao_w > dt_limite_especial_w) then
        dt_limite_especial_w  := dt_limite_especial_w + 1;
      end if;
      end;
    end if;
  end if;

  If (coalesce(dt_primeiro_horario_w::text, '') = '') then
    dt_primeiro_horario_w  := dt_prescricao_w;
  end if;

  open C01;
  loop
  fetch C01 into
    ie_agrupador_w,
    nr_seq_prescr_w,
    qt_dose_w,
    qt_total_dispensar_w,
    cd_unidade_medida_w,
    cd_unid_med_dose_w,
    nr_ocorrencia_w,
    cd_material_w,
    ds_horarios_w,
    ds_horarios_padr_w,
    hr_prim_horario_w,
    ie_urgente_w,
    qt_dose_especial_w,
    hr_dose_especial_w,
    ie_se_necessario_w,
    ie_acm_w,
    ie_controlado_w,
    ie_padronizado_w,
    ie_regra_disp_w,
    nr_agrupamento_w,
    cd_protocolo_w,
    ie_componente_composto_w,
    ds_dose_diferenciada_w,
    cd_local_estoque_w,
    qt_unitaria_w,
    cd_motivo_baixa_w,
    nr_seq_kit_w,
    ie_dose_espec_agora_w,
    dt_lib_medico_w,
    dt_ref_inicio_W,
    cd_unid_med_dose_esp_w,
    nr_seq_mat_cpoe_w,
    nr_seq_recomendacao_w,
	ie_via_aplicacao_w;
  EXIT WHEN NOT FOUND; /* apply on C01 */

    -- CPOE_ITEM_AGORA: Tratamento para que somente 1 horario do item seja de classificacao "Urgente"
    if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
      select  coalesce(max('N'),'S')
      into STRICT  ie_urgente_w
      from  prescr_mat_hor x
      where  x.nr_prescricao    = nr_prescricao_p
      and    x.nr_seq_material  = nr_seq_prescr_w
      and    Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
      and    coalesce(x.ie_dose_especial,'N')  = 'N'
      and    coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
    end if;

    select  max(c.ie_operacao),
        max(c.ie_reordenar_fixo)
    into STRICT  ie_operacao_interv_w,
        ie_reordena_fixo_w
    from  intervalo_prescricao c
    where  c.cd_intervalo = cd_intervalo_w;

    if (ie_gerar_hor_zerado_dd_w = 'S') and (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then
      ds_horarios_padr_w := Obter_horarios_zerados_dd(nr_prescricao_p, nr_seq_prescr_w, dt_ref_inicio_W, ds_horarios_w, hr_prim_horario_w, ds_dose_diferenciada_w);
    end if;

    if (ie_operacao_interv_w = 'F') and (ie_reordena_fixo_w = 'S') and (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then
      ds_horarios_ww  := ds_horarios_w;
      SELECT * FROM Obter_horario_padrao_dd(dt_ref_inicio_w, ie_operacao_interv_w, ie_reordena_fixo_w, ds_horarios_ww, ds_dose_diferenciada_w) INTO STRICT _ora2pg_r;
 ds_horarios_ww := _ora2pg_r.ds_horario_p; ds_dose_diferenciada_w := _ora2pg_r.ds_dose_dif_p;
      ds_horarios_padr_w  := ds_horarios_ww;
    end if;
    ie_ctrl_loop_w    := 0;
    ie_ctrl_loop_ww    := 0;
    ie_loop_w    := 0;
    qt_dose_especial_ww  := qt_dose_especial_w;
    vt_dose_diferenciada_w.delete;
    if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then
      ds_dose_diferenciada_ww  := ds_dose_diferenciada_w;
      while(ds_dose_diferenciada_ww IS NOT NULL AND ds_dose_diferenciada_ww::text <> '') and (ie_loop_w < 101) LOOP
        begin
        h  := position('-' in ds_dose_diferenciada_ww);
        if (h > 0) then
          qt_dose_diferenciada_w  := replace(substr(ds_dose_diferenciada_ww, 1, h-1),'/',',');
          ds_dose_diferenciada_ww  := substr(ds_dose_diferenciada_ww, h+1, 50);
        else
          qt_dose_diferenciada_w  := replace(ds_dose_diferenciada_ww,'/',',');
          ds_dose_diferenciada_ww  := null;
        end if;
        if (coalesce(qt_dose_diferenciada_w,0) > 0) or (ie_gerar_hor_zerado_dd_w = 'S') then
          vt_dose_diferenciada_w[ie_ctrl_loop_w].qt_dose_diferenciada  := coalesce(qt_dose_diferenciada_w,0);
          vt_dose_diferenciada_w[ie_ctrl_loop_w].ie_gerar_disp := not(coalesce(qt_dose_diferenciada_w,0) > 0);
          ie_ctrl_loop_w := ie_ctrl_loop_w + 1;
        end if;
        ie_loop_w  :=  ie_loop_w + 1;
        end;
      end loop;
    end if;

    qt_dia_adic_w  := 0;

    dt_prescricao_ww  := dt_prescricao_w;
    if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
      dt_prescricao_ww  := dt_inicio_prescr_w;
    end if;

    if (qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> '') then

      --- Inicio MD5
	  
		qt_dose_especial_w := obter_conversao_unid_med_cons(cd_material_w,coalesce(cd_unid_med_dose_esp_w,cd_unid_med_dose_w),qt_dose_especial_w);

		ie_regra_w := obter_regra_dispensacao(
			cd_estabelecimento_p	=> cd_estabelecimento_w,
			cd_material_p			=> cd_material_w,
			cd_unid_med_dose_p		=> coalesce(cd_unid_med_dose_esp_w, cd_unid_med_dose_w),
			ie_via_aplicacao_p		=> ie_via_aplicacao_w,
			cd_intervalo_p			=> cd_intervalo_w,
			nr_atendimento_p		=> nr_atendimento_w,
			ie_opcao_p				=> 'P',
			nr_prescricao_p			=> nr_prescricao_p,
			nr_sequencia_p			=> nr_seq_prescr_w
		);

	  ie_tipo_regra_disp_w := obter_tipo_regra_disp(cd_estabelecimento_w, nr_atendimento_w, nr_prescricao_p, cd_material_w, cd_material_w);

      begin
        
        sql_w := 'begin obter_tot_dose_especial_md(:1, :2, :3, :4, :5, :6, :7); end;';
        EXECUTE sql_w using in out qt_dose_especial_w,
									  in ie_dose_esp_arrend_cima_w,
									  in ie_tipo_regra_disp_w,
									  in cd_funcao_origem_w,
									  in out qt_total_dispensar_w,
									  in nr_ocorrencia_w,
									  in ie_regra_w;
      exception
        when others then
          qt_dose_especial_w := null;
          qt_total_dispensar_w := null;
      end;

      --- Fim MD5
      
      if (ie_gerar_hr_dose_especial_w = 'N') then
        dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_w, hr_dose_especial_w);
      else
        dt_horario_w  := PKG_DATE_UTILS.get_Time(coalesce(dt_lib_medico_w, dt_prescricao_w), hr_dose_especial_w);
      end if;

      /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

      if (ie_agora_impressao_w = 'S') then
        nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
        select  max(to_char(b.hr_inicial,'hh24:mi')),
          max(to_char(b.hr_final,'hh24:mi'))
        into STRICT  hr_turno_agora_w,
          hr_final_turno_agora_w
        from  regra_turno_disp_param b,
          regra_turno_disp a
        where  a.nr_sequencia    = b.nr_seq_turno
        and  a.cd_estabelecimento  = cd_estabelecimento_w
        and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
        and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

        select  coalesce(max(qt_min_antes_atend), 0),
          coalesce(max(ie_define_agora), 'N')
        into STRICT  qt_min_antes_atend_w,
          ie_define_agora_w
        from  regra_tempo_disp
        where  cd_estabelecimento  = cd_estabelecimento_w
        and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
        and  nr_seq_turno = nr_seq_turno_hor_ag_w
        and  ie_situacao = 'A';

        --- Inicio MD6
                
        begin
          sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
          EXECUTE sql_w using in hr_turno_agora_w,
										in hr_final_turno_agora_w,
										in dt_inicio_prescr_w,
										in qt_min_antes_atend_w,
										in dt_horario_w,
										out dt_limite_agora_w;
        exception
          when others then
            dt_limite_agora_w := null;
        end;

        --- Fim MD6
        
      end if;
      /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_sequencia_w
;

      hr_dose_especial_w  := replace(hr_dose_especial_w,'A','');
      ie_horario_especial_w  := 'N';

      if (dt_horario_w < dt_prescricao_w) and (ie_urgente_w = 'N') then
        dt_horario_w  := dt_horario_w + 1;
      end if;
      --- Inicio MD7 Verificar MD2
        begin
		  sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 1,
										in ie_classif_nao_padrao_w,
										in ie_padronizado_dil_w,
										in ie_padronizado_w,
										in ie_classif_normal_acm_sn_w,
										in ie_se_necessario_dil_w,
										in ie_se_necessario_w,
										in ie_acm_dil_w,
										in ie_acm_w,
										in dt_horario_w,
										in dt_limite_agora_w,
										in ie_urgente_w,
										in ie_agora_impressao_w,
										in ie_define_agora_w,
										in qt_min_antes_atend_w,
										in dt_limite_especial_w,
										out ie_classif_urgente_w;
        exception
          when others then
            ie_classif_urgente_w := null;
        end;

      --- Fim MD7


      /* Dalcastagne em 25/09/2008 OS 107843 */

      if (VarIdentPrescrADEP_w = 'DS') then
        ie_adep_w := ie_rep_adep_w;
      elsif (VarIdentPrescrADEP_w = 'NV') then
        ie_adep_w := 'N';
      elsif (VarIdentPrescrADEP_w = 'SV') then
        ie_adep_w := 'S';
      elsif (VarIdentPrescrADEP_w = 'PV') or (VarIdentPrescrADEP_w = 'PNV') then
        ie_adep_w := ie_adep_param_w;
      end if;

      SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_especial_ww, coalesce(cd_unid_med_dose_esp_w, cd_unid_med_dose_w), qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

      begin

      dt_suspensao_w    := null;
      dt_fim_horario_w  := null;
      if (ie_copia_status_hor_w  = 'S') then
        select  max(CASE WHEN a.ie_suspenso_adep='S' THEN a.dt_suspensao  ELSE null END ),
          max(a.dt_fim_horario)
        into STRICT  dt_suspensao_w,
          dt_fim_horario_w
        from  prescr_medica b,
          prescr_mat_hor a
        where  a.nr_prescricao    = b.nr_prescricao
        and  b.nr_atendimento  = nr_atendimento_w
        and  a.ie_agrupador    = ie_agrupador_w
        and  a.dt_horario    = dt_horario_w
        and  a.cd_material    = cd_material_w
        and  a.qt_dose    = qt_dose_especial_ww
        and  a.nr_prescricao    <> nr_prescricao_p
        and  a.cd_unidade_medida_dose = coalesce(cd_unid_med_dose_esp_w, cd_unid_med_dose_w);
      end if;

      insert into prescr_mat_hor(
        nr_sequencia,
        nr_seq_digito,
        nr_prescricao,
        nr_seq_material,
        ie_agrupador,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        ds_horario,
        dt_horario,
        qt_dose,
        qt_dispensar,
        cd_unidade_medida,
        cd_unidade_medida_dose,
        cd_material,
        nr_ocorrencia,
        qt_dispensar_hor,
        ie_urgente,
        ie_horario_especial,
        nr_seq_turno,
        ie_aprazado,
        ie_dose_especial,
        ie_controlado,
        ie_padronizado,
        ie_classif_urgente,
        ie_dispensar_farm,
        nr_agrupamento,
        ie_adep,
        qt_horario,
        cd_unid_med_hor,
        cd_motivo_baixa,
        nr_seq_superior,
        dt_lib_horario,
        dt_suspensao,
        dt_fim_horario,
        nr_atendimento)
      values (  nr_sequencia_w,
        calcula_digito('MODULO11',nr_sequencia_w),
        nr_prescricao_p,
        nr_seq_prescr_w,
        ie_agrupador_w,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        hr_dose_especial_w,
        dt_horario_w,
        qt_dose_especial_ww,
        qt_dose_especial_w,
        cd_unidade_medida_w,
        coalesce(cd_unid_med_dose_esp_w, cd_unid_med_dose_w),
        cd_material_w,
        1,
        CASE WHEN cd_motivo_baixa_w=0 THEN  qt_dose_especial_w  ELSE 0 END ,
        ie_urgente_w,
        coalesce(ie_horario_especial_w,'N'),
        Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_w),
        'N',
        'S',
        ie_controlado_w,
        ie_padronizado_w,
        ie_classif_urgente_w,
        ie_regra_disp_w,
        nr_agrupamento_w,
        ie_adep_w,
        qt_dose_hor_w,
        cd_unid_med_dose_hor_w,
        cd_motivo_baixa_w,
        nr_seq_kit_w,
        clock_timestamp(),
        dt_suspensao_w,
        dt_fim_horario_w,
        nr_atendimento_w);

      CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);

      exception when others then
        sqlerrm_w  := substr(sqlerrm,1,2000);
      end;

      open C03;
      loop
      fetch C03 into
        ie_agrupador_dil_w,
        nr_sequencia_dil_w,
        qt_dose_dil_w,
        qt_total_disp_dil_w,
        cd_unidade_medida_dil_w,
        cd_unid_med_dose_dil_w,
        nr_ocorrencia_dil_w,
        cd_material_dil_w,
        ie_se_necessario_dil_w,
        ie_acm_dil_w,
        ie_controlado_dil_w,
        ie_padronizado_dil_w,
        ie_regra_disp_dil_w,
        nr_agrupamento_dil_w,
        cd_protocolo_dil_w,
        cd_local_estoque_dil_w,
        cd_motivo_baixa_dil_w,
        qt_unitaria_dil_w,
        qt_dose_especial_w;
      EXIT WHEN NOT FOUND; /* apply on C03 */


        select  nextval('prescr_mat_hor_seq')
        into STRICT  nr_sequencia_w
;
        --- Inicio MD7 ver MD1
        begin
          sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
          EXECUTE sql_w using in 2,
										in ie_se_necessario_dil_w,
										in ie_acm_dil_w,
										in ie_se_necessario_w,
										in ie_acm_w,
										in qt_dose_especial_w,
										in hr_dose_especial_w,
										in  ie_gerar_especial_w,
										out ie_horario_especial_w;
        exception
          when others then
            ie_horario_especial_w := null;
        end;

        --- Fim MD7

    
		--- Inicio MD8
        
        begin
          sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 0,
										in ie_classif_nao_padrao_w,
										in ie_padronizado_dil_w,
										in ie_padronizado_w,
										in ie_classif_normal_acm_sn_w,
										in ie_se_necessario_dil_w,
										in ie_se_necessario_w,
										in ie_acm_dil_w,
										in ie_acm_w,
										in dt_horario_w,
										in dt_limite_agora_w,
										in ie_urgente_w,
										in ie_agora_impressao_w,
										in ie_define_agora_w,
										in qt_min_antes_atend_w,
										in dt_limite_especial_w,
										out ie_classif_urgente_w;
        exception
          when others then
            ie_classif_urgente_w := null;
        end;

		--- Inicio MD8


		--- Inicio MD9
    
        SELECT * FROM obter_dose_um_horario_pmh(cd_material_dil_w, qt_dose_dil_w, cd_unid_med_dose_dil_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;
        begin
          sql_w := 'begin calcular_dispensar_hora_md(:1, :2, :3, :4, :5); end;';
          EXECUTE sql_w using in qt_dose_especial_w,
                                        in ie_agrupador_dil_w,
										in out nr_ocorrencia_dil_w,
										in qt_total_disp_dil_w,
										out qt_dispensar_hor_w;
        exception
          when others then
            nr_ocorrencia_dil_w := null;
            qt_dispensar_hor_w := null;
        end;

        
		--- Fim MD9
    
        begin

        dt_suspensao_w    := null;
        dt_fim_horario_w  := null;
        if (ie_copia_status_hor_w  = 'S') then
          select  max(CASE WHEN a.ie_suspenso_adep='S' THEN a.dt_suspensao  ELSE null END ),
            max(a.dt_fim_horario)
          into STRICT  dt_suspensao_w,
            dt_fim_horario_w
          from  prescr_medica b,
            prescr_mat_hor a
          where  a.nr_prescricao    = b.nr_prescricao
          and  b.nr_atendimento  = nr_atendimento_w
          and  a.ie_agrupador    = ie_agrupador_dil_w
          and  a.dt_horario    = dt_horario_w
          and  a.cd_material    = cd_material_dil_w
          and  a.qt_dose    = qt_dose_dil_w
          and  a.nr_prescricao    <> nr_prescricao_p
          and  a.cd_unidade_medida_dose = cd_unid_med_dose_dil_w;
        end if;

        select  count(*)
        into STRICT  qt_hor_w
        from  prescr_mat_hor where nr_prescricao   = nr_prescricao_p
        and  nr_seq_material  = nr_sequencia_dil_w
        and  coalesce(ie_dose_especial,'N') = 'S' LIMIT 1;

        if (qt_hor_w = 0) then
          select  count(*)
          into STRICT  qt_hor_w
          from  prescr_medica b,
            prescr_mat_hor x where   x.nr_prescricao    = nr_prescricao_p
          and  b.nr_prescricao    = x.nr_prescricao
          and  x.nr_seq_material  = nr_sequencia_dil_w
          and  (x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
          and  (b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
          and  (clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
          and  coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
        end if;

        if (qt_hor_w = 0) then
          insert into prescr_mat_hor(
            nr_sequencia,
            nr_seq_digito,
            nr_prescricao,
            nr_seq_material,
            ie_agrupador,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            ds_horario,
            dt_horario,
            qt_dose,
            qt_dispensar,
            cd_unidade_medida,
            cd_unidade_medida_dose,
            cd_material,
            nr_ocorrencia,
            qt_dispensar_hor,
            ie_urgente,
            ie_horario_especial,
            nr_seq_turno,
            ie_aprazado,
            ie_controlado,
            ie_padronizado,
            ie_classif_urgente,
            ie_dispensar_farm,
            nr_seq_superior,
            nr_agrupamento,
            ie_adep,
            qt_horario,
            cd_unid_med_hor,
            cd_motivo_baixa,
            dt_lib_horario,
            dt_suspensao,
            dt_fim_horario,
            nr_atendimento,
            ie_dose_especial)
          values (  nr_sequencia_w,
            calcula_digito('MODULO11',nr_sequencia_w),
            nr_prescricao_p,
            nr_sequencia_dil_w,
            ie_agrupador_dil_w,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            to_char(dt_horario_w,'hh24:mi'),
            dt_horario_w,
            qt_dose_dil_w,
            CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
            cd_unidade_medida_dil_w,
            cd_unid_med_dose_dil_w,
            cd_material_dil_w,
            nr_ocorrencia_dil_w,
            CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
            ie_urgente_w,
            coalesce(ie_horario_especial_w,'N'),
            Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_dil_w),
            'N',
            ie_controlado_dil_w,
            ie_padronizado_dil_w,
            ie_classif_urgente_w,
            ie_regra_disp_dil_w,
            nr_seq_prescr_w,
            nr_agrupamento_w,
            ie_adep_w,
            qt_dose_hor_w,
            cd_unid_med_dose_hor_w,
            cd_motivo_baixa_dil_w,
            clock_timestamp(),
            dt_suspensao_w,
            dt_fim_horario_w,
            nr_atendimento_w,
            'S');

          CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_dil_w, nr_sequencia_w, nm_usuario_p);
        end if;

        exception when others then
          sqlerrm_w  := substr(sqlerrm,1,2000);
        end;
      end loop;
      close C03;
    end if;

    if (ie_componente_composto_w = 'S') then
      ds_horarios_padr_w  := ds_horarios_padr_comp_w;
    end if;

    if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
      ds_horarios_padr_comp_w  := ds_horarios_padr_w;
      while  (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
        k  := position(' ' in ds_horarios_padr_w);

        if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
          ds_hora_w    := substr(ds_horarios_padr_w, 1, k-1);
          ds_hora_w    := replace(ds_hora_w, ' ','');
          ds_horarios_padr_w  := substr(ds_horarios_padr_w, k + 1, 2000);
        elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
          ds_hora_w     := replace(ds_horarios_padr_w,' ','');
          ds_horarios_padr_w  := '';
        end if;

        if  ((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314) or
           (ie_agora_especial_w = 'S' AND ie_dose_espec_agora_w = 'S')) then
          if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
            qt_dia_adic_w  := 1;
          elsif (position('AA' in ds_hora_w) > 0) then
            qt_dia_adic_w  := qt_dia_adic_w + 1;
          end if;
        end if;

        ds_hora_w  := replace(ds_hora_w,'A','');
        ds_hora_w  := replace(ds_hora_w,'A','');
        if (ie_urgente_w  = 'S') and
          (not (ie_agora_especial_w  = 'S' AND ie_dose_espec_agora_w  = 'S')) then
          dt_libe_w  := dt_liberacao_w;
          if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
            select  max(dt_liberacao)
            into STRICT  dt_libe_w
            from  prescr_medica
            where  nr_prescricao  = nr_prescricao_p;
          end if;
          dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
        else
          dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);
        end if;

        dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''));
        --to_date(to_char('31/03/2013 23:37:57' + qt_dia_adic_w,'dd/mm/yyyy')||' '||replace(ds_hora_w,'A','')||':00','dd/mm/yyyy hh24:mi:ss');
        if (ie_urgente_w = 'S') and (ie_agrupador_w = 1) and (dt_horario_w > dt_prescricao_ww) and (nr_seq_mat_cpoe_w IS NOT NULL AND nr_seq_mat_cpoe_w::text <> '') then
          dt_horario_w := PKG_DATE_UTILS.get_Time(clock_timestamp(), replace(ds_hora_w,'A',''));
        end if;

        /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

        if (ie_agora_impressao_w = 'S') then
          nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
          select  max(to_char(b.hr_inicial,'hh24:mi')),
            max(to_char(b.hr_final,'hh24:mi'))
          into STRICT  hr_turno_agora_w,
            hr_final_turno_agora_w
          from  regra_turno_disp_param b,
            regra_turno_disp a
          where  a.nr_sequencia    = b.nr_seq_turno
          and  a.cd_estabelecimento  = cd_estabelecimento_w
          and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
          and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

          select  coalesce(max(qt_min_antes_atend), 0),
            coalesce(max(ie_define_agora), 'N')
          into STRICT  qt_min_antes_atend_w,
            ie_define_agora_w
          from  regra_tempo_disp
          where  cd_estabelecimento  = cd_estabelecimento_w
          and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
          and  nr_seq_turno = nr_seq_turno_hor_ag_w
          and  ie_situacao = 'A';

          --- Inicio MD10
                    
          begin
            sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
            EXECUTE sql_w using in hr_turno_agora_w,
										  in hr_final_turno_agora_w,
										  in dt_inicio_prescr_w,
										  in qt_min_antes_atend_w,
										  in dt_horario_w,
										  out dt_limite_agora_w;
          exception
            when others then
              dt_limite_agora_w := null;
          end;

          --- Fim MD10
          
        end if;
        /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

        select  nextval('prescr_mat_hor_seq')
        into STRICT  nr_sequencia_w
;

        --- Inicio MD11 ver md1

        /* Rafael em 07/10/2006 Identificar horarios especiais */

        
        begin
          sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7) into :ie_horario_especial_w';
          EXECUTE sql_w using in 1,
										in ie_se_necessario_dil_w,
										in ie_acm_dil_w,
										in ie_se_necessario_w,
										in ie_acm_w,
										in qt_dose_especial_w,
										in hr_dose_especial_w,
										out ie_horario_especial_w;
        exception
          when others then
            ie_horario_especial_w := null;
        end;

        --- Fim MD11
        if (dt_horario_w < dt_prescricao_ww) and
          ((ie_urgente_w = 'N') or
           (ie_agora_especial_w  = 'S' AND ie_dose_espec_agora_w  = 'S')) then
          dt_horario_w  := dt_horario_w + 1;
        end if;

        /* Rotina para quando o medicamento e AGORA e a prescricao esta sendo criada antes da meia noite. O horario estava ficando para o dia atual quando era meia noite do dia seguinte OS 552485  */

        if (dt_horario_w < dt_prescricao_w) and
          /*(dt_prescricao_ww <> dt_libe_w) and   Corrigir OS  1522373*/

          (ie_urgente_w = 'S') and (PKG_DATE_UTILS.extract_field('HOUR', dt_prescricao_ww) = 23) then
          dt_horario_w  := dt_horario_w + 1;
        end if;

		--- Inicio MD12
        begin
          sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 1,
										in ie_classif_nao_padrao_w,
										in ie_padronizado_dil_w,
										in ie_padronizado_w,
										in ie_classif_normal_acm_sn_w,
										in ie_se_necessario_dil_w,
										in ie_se_necessario_w,
										in ie_acm_dil_w,
										in ie_acm_w,
										in dt_horario_w,
										in dt_limite_agora_w,
										in ie_urgente_w,
										in ie_agora_impressao_w,
										in ie_define_agora_w,
										in qt_min_antes_atend_w,
										in dt_limite_especial_w,
										out ie_classif_urgente_w;
        exception
          when others then
            ie_classif_urgente_w := null;
        end;
		--- Fim MD12

    
        /* Dalcastagne em 25/09/2008 OS 107843 */

        if (VarIdentPrescrADEP_w = 'DS') then
          ie_adep_w := ie_rep_adep_w;
        elsif (VarIdentPrescrADEP_w = 'NV') then
          ie_adep_w := 'N';
        elsif (VarIdentPrescrADEP_w = 'SV') then
          ie_adep_w := 'S';
        elsif (VarIdentPrescrADEP_w = 'PV') or (VarIdentPrescrADEP_w = 'PNV') then
          ie_adep_w := ie_adep_param_w;
        end if;

        ie_gerar_dispensacao_w := 'S'; -- Cuidado ao alterar esta variavel! Ela como NAO significa que o horario nao podera ser dispensado.
        if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') and (vt_dose_diferenciada_w[ie_ctrl_loop_ww](.qt_dose_diferenciada IS NOT NULL AND .qt_dose_diferenciada::text <> '')) then
          qt_dose_w  := vt_dose_diferenciada_w[ie_ctrl_loop_ww].qt_dose_diferenciada;
          if vt_dose_diferenciada_w[ie_ctrl_loop_ww].ie_gerar_disp then
            ie_gerar_dispensacao_w := 'N';
          end if;
        end if;

        SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

        begin

        dt_suspensao_w    := null;
        dt_fim_horario_w  := null;
        if (ie_copia_status_hor_w  = 'S') and (ie_gerar_dispensacao_w = 'S') then
          select  max(CASE WHEN a.ie_suspenso_adep='S' THEN a.dt_suspensao  ELSE null END ),
            max(a.dt_fim_horario)
          into STRICT  dt_suspensao_w,
            dt_fim_horario_w
          from  prescr_medica b,
            prescr_mat_hor a
          where  a.nr_prescricao    = b.nr_prescricao
          and  b.nr_atendimento  = nr_atendimento_w
          and  a.ie_agrupador    = ie_agrupador_w
          and  a.dt_horario    = dt_horario_w
          and  a.cd_material    = cd_material_w
          and  a.qt_dose    = qt_dose_w
          and  a.nr_prescricao    <> nr_prescricao_p
          and  a.cd_unidade_medida_dose  = cd_unid_med_dose_w;
        end if;

        if (ie_dose_especial_p = 'N') or
           ((ie_dose_especial_p = 'E') and (ie_somente_agora_p = 'S') and
          ((coalesce(ie_se_necessario_w,'N') = 'S') or (coalesce(ie_acm_w,'N') = 'S') or (coalesce(ie_urgente_w,'N') = 'S'))) then
          dt_lib_horario_w  := clock_timestamp();
        else
          dt_lib_horario_w  := null;
        end if;

        select  count(*)
        into STRICT  qt_hor_w
        from  prescr_mat_hor where    nr_prescricao   = nr_prescricao_p
        and    nr_seq_material  = nr_seq_prescr_w
        and  coalesce(ie_dose_especial,'N') = 'S' LIMIT 1;

        if (qt_hor_w = 0) then
          select  count(*)
          into STRICT  qt_hor_w
          from  prescr_medica b,
              prescr_mat_hor x where x.nr_prescricao    = nr_prescricao_p
          and  b.nr_prescricao    = x.nr_prescricao
          and  x.nr_seq_material  = nr_seq_prescr_w
          and  (x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
          and  (b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
          and  (clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
          and  coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
        end if;

        if (qt_hor_w = 0) then
          insert into prescr_mat_hor(
            nr_sequencia,
            nr_seq_digito,
            nr_prescricao,
            nr_seq_material,
            ie_agrupador,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            ds_horario,
            dt_horario,
            qt_dose,
            qt_dispensar,
            cd_unidade_medida,
            cd_unidade_medida_dose,
            cd_material,
            nr_ocorrencia,
            qt_dispensar_hor,
            ie_urgente,
            ie_horario_especial,
            nr_seq_turno,
            ie_aprazado,
            ie_controlado,
            ie_padronizado,
            ie_classif_urgente,
            ie_dispensar_farm,
            nr_agrupamento,
            ie_adep,
            qt_horario,
            cd_unid_med_hor,
            cd_motivo_baixa,
            nr_seq_superior,
            dt_lib_horario,
            dt_suspensao,
            dt_fim_horario,
            nr_atendimento)
          values (  nr_sequencia_w,
            calcula_digito('MODULO11',nr_sequencia_w),
            nr_prescricao_p,
            nr_seq_prescr_w,
            ie_agrupador_w,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            ds_hora_w,
            dt_horario_w,
            qt_dose_w,
            qt_total_dispensar_w,
            cd_unidade_medida_w,
            cd_unid_med_dose_w,
            cd_material_w,
            nr_ocorrencia_w,
            CASE WHEN cd_motivo_baixa_w=0 THEN  CASE WHEN ie_gerar_dispensacao_w='N' THEN  0  ELSE dividir(qt_total_dispensar_w,nr_ocorrencia_w) END   ELSE 0 END ,
            ie_urgente_w,
            CASE WHEN ie_gerar_dispensacao_w='N' THEN  'S'  ELSE coalesce(ie_horario_especial_w,'N') END ,
            Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
            'N',
            ie_controlado_w,
            ie_padronizado_w,
            ie_classif_urgente_w,
            ie_regra_disp_w,
            nr_agrupamento_w,
            ie_adep_w,
            qt_dose_hor_w,
            cd_unid_med_dose_hor_w,
            CASE WHEN ie_gerar_dispensacao_w='N' THEN  cd_motivo_baixa_dd_zero_w  ELSE cd_motivo_baixa_w END ,
            CASE WHEN nr_seq_recomendacao_w=nr_seq_kit_w THEN null  ELSE nr_seq_kit_w END ,
            dt_lib_horario_w,
            dt_suspensao_w,
            dt_fim_horario_w,
            nr_atendimento_w);
        end if;
        /*if  (ie_local_estoque_mat_hor_w  = 'S') then
          define_disp_prescr_mat_hor(nr_sequencia_w, nr_prescricao_p, nr_seq_item_p, cd_perfil_p, nm_usuario_p);

          select  nvl(max(cd_local_estoque),cd_local_estoque_w)
          into  cd_local_estoque_w
          from  prescr_mat_hor
          where  nr_sequencia  = nr_sequencia_w;

          update  prescr_mat_hor
          set  nr_seq_turno  = nvl(Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_w),nr_seq_turno)
          where  nr_sequencia  = nr_sequencia_w;
        end if;*/
        if (coalesce(ie_gerar_dispensacao_w,'S') <> 'N') then
          CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
        end if;

        exception when others then
          sqlerrm_w  := substr(sqlerrm,1,2000);
        end;

        open C03;
        loop
        fetch C03 into
          ie_agrupador_dil_w,
          nr_sequencia_dil_w,
          qt_dose_dil_w,
          qt_total_disp_dil_w,
          cd_unidade_medida_dil_w,
          cd_unid_med_dose_dil_w,
          nr_ocorrencia_dil_w,
          cd_material_dil_w,
          ie_se_necessario_dil_w,
          ie_acm_dil_w,
          ie_controlado_dil_w,
          ie_padronizado_dil_w,
          ie_regra_disp_dil_w,
          nr_agrupamento_dil_w,
          cd_protocolo_dil_w,
          cd_local_estoque_dil_w,
          cd_motivo_baixa_dil_w,
          qt_unitaria_dil_w,
          qt_dose_especial_w;
        EXIT WHEN NOT FOUND; /* apply on C03 */

          select  nextval('prescr_mat_hor_seq')
          into STRICT  nr_sequencia_w
;

          --- Inicio MD13 ver MD1
                  
          begin
            sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
            EXECUTE sql_w using in 2,
										  in ie_se_necessario_dil_w,
										  in ie_acm_dil_w,
										  in ie_se_necessario_w,
										  in ie_acm_w,
										  in qt_dose_especial_w,
										  in hr_dose_especial_w,
										  in  ie_gerar_especial_w,
										  out ie_horario_especial_w;
          exception
            when others then
              ie_horario_especial_w := null;
          end;

          --- Fim MD13
          
          if (dt_horario_w < dt_prescricao_ww) and
            ((ie_urgente_w = 'N') or
             (ie_agora_especial_w  = 'S' AND ie_dose_espec_agora_w  = 'S')) then
            dt_horario_w  := dt_horario_w + 1;
          end if;

          /* Rotina para quando o medicamento e AGORA e a prescricao esta sendo criada antes da meia noite. O horario estava ficando para o dia atual quando era meia noite do dia seguinte OS 552485  */

          if (dt_horario_w < dt_prescricao_w) and
            /*(dt_prescricao_ww <> dt_libe_w)  and  Corrigir OS 1522373 */

            (ie_urgente_w = 'S') and (PKG_DATE_UTILS.extract_field('HOUR', dt_prescricao_ww) = 23) then
            dt_horario_w  := dt_horario_w + 1;
          end if;

           --- Inicio MD14 ver md2
          
            begin
            sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
            EXECUTE sql_w using in 0,
										  in ie_classif_nao_padrao_w,
										  in ie_padronizado_dil_w,
										  in ie_padronizado_w,
										  in ie_classif_normal_acm_sn_w,
										  in ie_se_necessario_dil_w,
										  in ie_se_necessario_w,
										  in ie_acm_dil_w,
										  in ie_acm_w,
										  in dt_horario_w,
										  in dt_limite_agora_w,
										  in ie_urgente_w,
										  in ie_agora_impressao_w,
										  in ie_define_agora_w,
										  in qt_min_antes_atend_w,
										  in dt_limite_especial_w,
										  out ie_classif_urgente_w;
          exception
            when others then
              ie_classif_urgente_w := null;
          end;

          --- Fim MD14
          
          if (coalesce(qt_dose_especial_w,0) > 0) and (ie_agrupador_dil_w = 3) then
            nr_ocorrencia_dil_w  := nr_ocorrencia_dil_w +1;
          end if;
          --- Inicio MD15
          begin
            sql_w := 'begin calcular_tot_disp_diluicao_md(:1, :2, :3, :4, :5, :6); end;';
            EXECUTE sql_w using in 0,
                                          in out qt_total_disp_dil_w,
										  in out nr_ocorrencia_dil_w,
										  in qt_dose_especial_w,
										  in ie_agrupador_dil_w,
										  in out qt_unitaria_dil_w;
          exception
            when others then
              qt_total_disp_dil_w := null;
              nr_ocorrencia_dil_w := null;
			  qt_unitaria_dil_w	  := null;
          end;

          --- Fim MD15
          ds_diluicao_w  := null;
          if (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') and (vt_dose_diferenciada_w[ie_ctrl_loop_ww](.qt_dose_diferenciada IS NOT NULL AND .qt_dose_diferenciada::text <> '')) then
            ds_diluicao_w  := Obter_Diluicao_Medic_dose(nr_seq_prescr_w, nr_prescricao_p, vt_dose_diferenciada_w[ie_ctrl_loop_ww].qt_dose_diferenciada);
          end if;

          SELECT * FROM obter_dose_um_horario_pmh(cd_material_dil_w, qt_dose_dil_w, cd_unid_med_dose_dil_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

          --- Inicio MD16
          
          begin
          
            sql_w := 'begin calcular_ocorr_disp_hora_md(:1, :2, :3, :4, :5, :6, :7); end;';
            EXECUTE sql_w using in 0,
                                          in qt_unitaria_dil_w,
										  in ie_agrupador_dil_w,
										  in nr_ocorrencia_w,
										  in qt_unitaria_w,
										  out qt_dispensar_hor_w,
										  out nr_ocorrencia_dil_w;
		  exception
			when others then
			  qt_dispensar_hor_w := null;
			  nr_ocorrencia_dil_w := null;
		  end;

          ---- Fim MD16
          
          begin

          dt_suspensao_w    := null;
          dt_fim_horario_w  := null;
          if (ie_copia_status_hor_w  = 'S') then
            select  max(CASE WHEN a.ie_suspenso_adep='S' THEN a.dt_suspensao  ELSE null END ),
              max(a.dt_fim_horario)
            into STRICT  dt_suspensao_w,
              dt_fim_horario_w
            from  prescr_medica b,
              prescr_mat_hor a
            where  a.nr_prescricao    = b.nr_prescricao
            and  b.nr_atendimento  = nr_atendimento_w
            and  a.ie_agrupador    = ie_agrupador_dil_w
            and  a.dt_horario    = dt_horario_w
            and  a.cd_material    = cd_material_dil_w
            and  a.qt_dose    = qt_dose_dil_w
            and  a.nr_prescricao    <> nr_prescricao_p
            and  a.cd_unidade_medida_dose  = cd_unid_med_dose_dil_w;
          end if;

          if (ie_dose_especial_p = 'N') or
             ((ie_dose_especial_p = 'E') and (ie_somente_agora_p = 'S') and
            ((coalesce(ie_se_necessario_w,'N') = 'S') or (coalesce(ie_acm_w,'N') = 'S') or (coalesce(ie_urgente_w,'N') = 'S'))) then
            dt_lib_horario_w  := clock_timestamp();
          else
            dt_lib_horario_w  := null;
          end if;

          insert into prescr_mat_hor(
            nr_sequencia,
            nr_seq_digito,
            nr_prescricao,
            nr_seq_material,
            ie_agrupador,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            ds_horario,
            dt_horario,
            qt_dose,
            qt_dispensar,
            cd_unidade_medida,
            cd_unidade_medida_dose,
            cd_material,
            nr_ocorrencia,
            qt_dispensar_hor,
            ie_urgente,
            ie_horario_especial,
            nr_seq_turno,
            ie_aprazado,
            ie_controlado,
            ie_padronizado,
            ie_classif_urgente,
            ie_dispensar_farm,
            nr_seq_superior,
            nr_agrupamento,
            ie_adep,
            qt_horario,
            cd_unid_med_hor,
            cd_motivo_baixa,
            ds_diluicao,
            dt_lib_horario,
            dt_suspensao,
            dt_fim_horario,
            nr_atendimento)
          values (  nr_sequencia_w,
            calcula_digito('MODULO11',nr_sequencia_w),
            nr_prescricao_p,
            nr_sequencia_dil_w,
            ie_agrupador_dil_w,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            ds_hora_w,
            dt_horario_w,
            qt_dose_dil_w,
            qt_total_disp_dil_w,
            cd_unidade_medida_dil_w,
            cd_unid_med_dose_dil_w,
            cd_material_dil_w,
            nr_ocorrencia_dil_w,
            CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
            ie_urgente_w,
            coalesce(ie_horario_especial_w,'N'),
            Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_dil_w),
            'N',
            ie_controlado_dil_w,
            ie_padronizado_dil_w,
            ie_classif_urgente_w,
            ie_regra_disp_dil_w,
            nr_seq_prescr_w,
            nr_agrupamento_w,
            ie_adep_w,
            qt_dose_hor_w,
            cd_unid_med_dose_hor_w,
            cd_motivo_baixa_dil_w,
            ds_diluicao_w,
            dt_lib_horario_w,
            dt_suspensao_w,
            dt_fim_horario_w,
            nr_atendimento_w);

          CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_dil_w, nr_sequencia_w, nm_usuario_p);

          exception when others then
            sqlerrm_w  := substr(sqlerrm,1,2000);
          end;

        end loop;
        close C03;

        ie_ctrl_loop_ww  := ie_ctrl_loop_ww + 1;

        -- CPOE_ITEM_AGORA: Tratamento para que somente 1 horario do item seja de classificacao "Urgente"
        if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
          ds_horarios_padr_w  := '';
        end if;

      end loop;
    elsif  ((ie_urgente_w      <> 'S') or (coalesce(ie_dose_espec_agora_w,'N')  <> 'S')) and
      (not (cd_funcao_origem_w = 2314 AND qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> ''))then
      ds_horarios_padr_comp_w  := null;

      if (hr_prim_horario_w = '  :  ') then
        hr_prim_horario_w := null;
      end if;

      if (ie_urgente_w  = 'S') then
        dt_libe_w  := dt_liberacao_w;
        if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
          select  max(dt_liberacao)
          into STRICT  dt_libe_w
          from  prescr_medica
          where  nr_prescricao  = nr_prescricao_p;
        end if;
        dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
      else
        dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);
      end if;

      begin
      if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') and
        ((coalesce(ie_urgente_w,'N') = 'S') or (length(ds_horarios_w) = length(somente_numero(ds_horarios_w)))) then
        if (position(':' in ds_horarios_w) > 0) then
          ds_hora_w  := substr(ds_horarios_w,1,5);
        else
          ds_hora_w  := substr(ds_horarios_w,1,2);
        end if;
      else
        ds_hora_w  := coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
      end if;

      if (coalesce(ds_hora_w::text, '') = '') then
        ds_hora_w  := coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
      end if;

      dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww, ds_hora_w);

      /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

      if (ie_agora_impressao_w = 'S') then
        nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
        select  max(to_char(b.hr_inicial,'hh24:mi')),
          max(to_char(b.hr_final,'hh24:mi'))
        into STRICT  hr_turno_agora_w,
          hr_final_turno_agora_w
        from  regra_turno_disp_param b,
          regra_turno_disp a
        where  a.nr_sequencia    = b.nr_seq_turno
        and  a.cd_estabelecimento  = cd_estabelecimento_w
        and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
        and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

        select  coalesce(max(qt_min_antes_atend), 0),
          coalesce(max(ie_define_agora), 'N')
        into STRICT  qt_min_antes_atend_w,
          ie_define_agora_w
        from  regra_tempo_disp
        where  cd_estabelecimento  = cd_estabelecimento_w
        and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
        and  nr_seq_turno = nr_seq_turno_hor_ag_w
        and  ie_situacao = 'A';
		
		begin
		  sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
		  EXECUTE sql_w using in hr_turno_agora_w,
								        in hr_final_turno_agora_w,
									    in dt_inicio_prescr_w,
									    in qt_min_antes_atend_w,
									    in dt_horario_w,
									    out dt_limite_agora_w;
	    exception
		  when others then
		    dt_limite_agora_w := null;
	    end;

      end if;
      /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_sequencia_w
;

      /* Rafael em 07/10/2006 Identificar horarios especiais */

      ie_horario_especial_w  := 'S';

      if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
        dt_horario_w  := dt_horario_w + 1;
      end if;
    --- Inicio MD17  ver md2
      begin
        sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
        EXECUTE sql_w using in 1,
									  in ie_classif_nao_padrao_w,
									  in ie_padronizado_dil_w,
									  in ie_padronizado_w,
									  in ie_classif_normal_acm_sn_w,
									  in ie_se_necessario_dil_w,
									  in ie_se_necessario_w,
									  in ie_acm_dil_w,
									  in ie_acm_w,
									  in dt_horario_w,
									  in dt_limite_agora_w,
									  in ie_urgente_w,
									  in ie_agora_impressao_w,
									  in ie_define_agora_w,
									  in qt_min_antes_atend_w,
									  in dt_limite_especial_w,
									  out ie_classif_urgente_w;
      exception
        when others then
          ie_classif_urgente_w := null;
      end;

    --- Fim MD17

      /*
      if  (ie_rep_adep_w = 'N') or ((varPrescrNaoMedicaADEP_w = 'NMP') and (ie_usuario_medico_w = 'N') and (cd_protocolo_w is not null)) then
        ie_adep_w := 'N';
      else
        ie_adep_w := 'S';
      end if;
      */


      /* Dalcastagne em 25/09/2008 OS 107843 */

      if (VarIdentPrescrADEP_w = 'DS') then
        ie_adep_w := ie_rep_adep_w;
      elsif (VarIdentPrescrADEP_w = 'NV') then
        ie_adep_w := 'N';
      elsif (VarIdentPrescrADEP_w = 'SV') then
        ie_adep_w := 'S';
      elsif (VarIdentPrescrADEP_w = 'PV') or (VarIdentPrescrADEP_w = 'PNV') then
        ie_adep_w := ie_adep_param_w;
      end if;

      SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

      dt_suspensao_w    := null;
      dt_fim_horario_w  := null;
      if (ie_copia_status_hor_w  = 'S') then
        select  max(CASE WHEN a.ie_suspenso_adep='S' THEN a.dt_suspensao  ELSE null END ),
          max(a.dt_fim_horario)
        into STRICT  dt_suspensao_w,
          dt_fim_horario_w
        from  prescr_medica b,
          prescr_mat_hor a
        where  a.nr_prescricao    = b.nr_prescricao
        and  b.nr_atendimento  = nr_atendimento_w
        and  a.ie_agrupador    = ie_agrupador_w
        and  a.dt_horario    = dt_horario_w
        and  a.cd_material    = cd_material_w
        and  a.qt_dose    = qt_dose_w
        and  a.nr_prescricao    <> nr_prescricao_p
        and  a.cd_unidade_medida_dose  = cd_unid_med_dose_w;
      end if;

      if (ie_dose_especial_p = 'N') or
         ((ie_dose_especial_p = 'E') and (ie_somente_agora_p = 'S') and
        ((coalesce(ie_se_necessario_w,'N') = 'S') or (coalesce(ie_acm_w,'N') = 'S') or (coalesce(ie_urgente_w,'N') = 'S'))) then
        dt_lib_horario_w  := clock_timestamp();
      else
        dt_lib_horario_w  := null;
      end if;

      insert into prescr_mat_hor(
        nr_sequencia,
        nr_seq_digito,
        nr_prescricao,
        nr_seq_material,
        ie_agrupador,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        ds_horario,
        dt_horario,
        qt_dose,
        qt_dispensar,
        cd_unidade_medida,
        cd_unidade_medida_dose,
        cd_material,
        nr_ocorrencia,
        qt_dispensar_hor,
        ie_urgente,
        ie_horario_especial,
        nr_seq_turno,
        ie_aprazado,
        ie_controlado,
        ie_padronizado,
        ie_classif_urgente,
        ie_dispensar_farm,
        nr_agrupamento,
        ie_adep,
        qt_horario,
        cd_unid_med_hor,
        cd_motivo_baixa,
        nr_seq_superior,
        dt_lib_horario,
        dt_suspensao,
        dt_fim_horario,
        nr_atendimento)
      values (  nr_sequencia_w,
        calcula_digito('MODULO11',nr_sequencia_w),
        nr_prescricao_p,
        nr_seq_prescr_w,
        ie_agrupador_w,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        ds_hora_w,
        dt_horario_w,
        qt_dose_w,
        qt_total_dispensar_w,
        cd_unidade_medida_w,
        cd_unid_med_dose_w,
        cd_material_w,
        nr_ocorrencia_w,
        CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
        ie_urgente_w,
        coalesce(ie_horario_especial_w,'S'),
        Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
        'N',
        ie_controlado_w,
        ie_padronizado_w,
        ie_classif_urgente_w,
        ie_regra_disp_w,
        nr_agrupamento_w,
        ie_adep_w,
        qt_dose_hor_w,
        cd_unid_med_dose_hor_w,
        cd_motivo_baixa_w,
        nr_seq_kit_w,
        dt_lib_horario_w,
        dt_suspensao_w,
        dt_fim_horario_w,
        nr_atendimento_w);


      CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);

      exception when others then
        sqlerrm_w  := substr(sqlerrm,1,2000);
      end;

      open C03;
      loop
        fetch C03 into
          ie_agrupador_dil_w,
          nr_sequencia_dil_w,
          qt_dose_dil_w,
          qt_total_disp_dil_w,
          cd_unidade_medida_dil_w,
          cd_unid_med_dose_dil_w,
          nr_ocorrencia_dil_w,
          cd_material_dil_w,
          ie_se_necessario_dil_w,
          ie_acm_dil_w,
          ie_controlado_dil_w,
          ie_padronizado_dil_w,
          ie_regra_disp_dil_w,
          nr_agrupamento_w,
          cd_protocolo_dil_w,
          cd_local_estoque_dil_w,
          cd_motivo_baixa_dil_w,
          qt_unitaria_dil_w,
          qt_dose_especial_w;
        EXIT WHEN NOT FOUND; /* apply on C03 */

        select  nextval('prescr_mat_hor_seq')
        into STRICT  nr_sequencia_w
;

        --- Inicio MD18
        begin
          sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
          EXECUTE sql_w using in 2,
										in ie_se_necessario_dil_w,
										in ie_acm_dil_w,
										in ie_se_necessario_w,
										in ie_acm_w,
										in qt_dose_especial_w,
										in hr_dose_especial_w,
										in  ie_gerar_especial_w,
										out ie_horario_especial_w;
        exception
          when others then
            ie_horario_especial_w := null;
        end;
        --- Fim MD18
        if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
          dt_horario_w  := dt_horario_w + 1;
        end if;

        --- Inicio MD19
        begin
          sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 0,
										in ie_classif_nao_padrao_w,
										in ie_padronizado_dil_w,
										in ie_padronizado_w,
										in ie_classif_normal_acm_sn_w,
										in ie_se_necessario_dil_w,
										in ie_se_necessario_w,
										in ie_acm_dil_w,
										in ie_acm_w,
										in dt_horario_w,
										in dt_limite_agora_w,
										in ie_urgente_w,
										in ie_agora_impressao_w,
										in ie_define_agora_w,
										in qt_min_antes_atend_w,
										in dt_limite_especial_w,
										out ie_classif_urgente_w;
        exception
          when others then
            ie_classif_urgente_w := null;
        end;
        --- Fim MD19
        SELECT * FROM obter_dose_um_horario_pmh(cd_material_dil_w, qt_dose_dil_w, cd_unid_med_dose_dil_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

        begin

        dt_suspensao_w    := null;
        dt_fim_horario_w  := null;
        if (ie_copia_status_hor_w  = 'S') then
          select  max(CASE WHEN a.ie_suspenso_adep='S' THEN a.dt_suspensao  ELSE null END ),
            max(a.dt_fim_horario)
          into STRICT  dt_suspensao_w,
            dt_fim_horario_w
          from  prescr_medica b,
            prescr_mat_hor a
          where  a.nr_prescricao    = b.nr_prescricao
          and  b.nr_atendimento  = nr_atendimento_w
          and  a.ie_agrupador    = ie_agrupador_dil_w
          and  a.dt_horario    = dt_horario_w
          and  a.cd_material    = cd_material_dil_w
          and  a.qt_dose    = qt_dose_dil_w
          and  a.nr_prescricao    <> nr_prescricao_p
          and  a.cd_unidade_medida_dose  = cd_unid_med_dose_dil_w;
        end if;

        if (ie_dose_especial_p = 'N') or
           ((ie_dose_especial_p = 'E') and (ie_somente_agora_p = 'S') and
          ((coalesce(ie_se_necessario_w,'N') = 'S') or (coalesce(ie_acm_w,'N') = 'S') or (coalesce(ie_urgente_w,'N') = 'S'))) then
          dt_lib_horario_w  := clock_timestamp();
        else
          dt_lib_horario_w  := null;
        end if;

        insert into prescr_mat_hor(
          nr_sequencia,
          nr_seq_digito,
          nr_prescricao,
          nr_seq_material,
          ie_agrupador,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ds_horario,
          dt_horario,
          qt_dose,
          qt_dispensar,
          cd_unidade_medida,
          cd_unidade_medida_dose,
          cd_material,
          nr_ocorrencia,
          qt_dispensar_hor,
          ie_urgente,
          ie_horario_especial,
          nr_seq_turno,
          ie_aprazado,
          ie_controlado,
          ie_padronizado,
          ie_classif_urgente,
          ie_dispensar_farm,
          nr_seq_superior,
          nr_agrupamento,
          ie_adep,
          qt_horario,
          cd_unid_med_hor,
          cd_motivo_baixa,
          dt_lib_horario,
          dt_suspensao,
          dt_fim_horario,
          nr_atendimento)
        values (  nr_sequencia_w,
          calcula_digito('MODULO11',nr_sequencia_w),
          nr_prescricao_p,
          nr_sequencia_dil_w,
          ie_agrupador_dil_w,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          ds_hora_w,
          dt_horario_w,
          qt_dose_dil_w,
          CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_total_disp_dil_w  ELSE 0 END ,
          cd_unidade_medida_dil_w,
          cd_unid_med_dose_dil_w,
          cd_material_dil_w,
          nr_ocorrencia_dil_w,
          CASE WHEN cd_motivo_baixa_dil_w=0 THEN  dividir(qt_total_disp_dil_w, nr_ocorrencia_dil_w)  ELSE 0 END ,
          ie_urgente_w,
          coalesce(ie_horario_especial_w,'N'),
          Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_dil_w),
          'N',
          ie_controlado_dil_w,
          ie_padronizado_dil_w,
          ie_classif_urgente_w,
          ie_regra_disp_dil_w,
          nr_seq_prescr_w,
          nr_agrupamento_w,
          ie_adep_w,
          qt_dose_hor_w,
          cd_unid_med_dose_hor_w,
          cd_motivo_baixa_dil_w,
          dt_lib_horario_w,
          dt_suspensao_w,
          dt_fim_horario_w,
          nr_atendimento_w);

        CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_dil_w, nr_sequencia_w, nm_usuario_p);

        exception when others then
          sqlerrm_w  := substr(sqlerrm,1,2000);
        end;
      end loop;
      close C03;
    end if;
    CALL cpoe_susp_medication_hor(  nr_prescricao_p => nr_prescricao_p,
            nr_seq_material_p => nr_seq_prescr_w,
            nm_usuario_p => nm_usuario_p);
  end loop;
  close C01;

  qt_dia_adic_w  := 0;

  open C02;
  loop
  fetch C02 into
    ie_agrupador_w,
    nr_seq_prescr_w,
    qt_dose_w,
    qt_total_dispensar_w,
    cd_unidade_medida_w,
    cd_unid_med_dose_w,
    nr_ocorrencia_w,
    cd_material_w,
    ds_horarios_w,
    ds_horarios_padr_w,
    hr_prim_horario_w,
    ie_urgente_w,
    qt_dose_especial_w,
    hr_dose_especial_w,
    ie_se_necessario_w,
    ie_acm_w,
    ie_controlado_w,
    ie_padronizado_w,
    ie_regra_disp_w,
    nr_agrupamento_w,
    cd_protocolo_w,
    ie_material_adep_w,
    cd_local_estoque_w,
    cd_motivo_baixa_w,
    nr_seq_kit_w,
    nr_seq_recomendacao_w;
  EXIT WHEN NOT FOUND; /* apply on C02 */

    -- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
    if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
      select  coalesce(max('N'),'S')
      into STRICT  ie_urgente_w
      from  prescr_mat_hor x
      where  x.nr_prescricao    = nr_prescricao_p
      and    x.nr_seq_material  = nr_seq_prescr_w
      and    Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
      and    coalesce(x.ie_dose_especial,'N')  = 'N'
      and    coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
    end if;

    qt_solucao_w := 0;
    /*Verificar se gerar horario para kit de uma solucao.*/

    if (coalesce(nr_seq_kit_w,0) <> 0) then
          select  max(b.ie_acm),
          max(b.ie_se_necessario)
      into STRICT  ie_acm_ww,
          ie_se_necessario_ww
      from  prescr_solucao b,
          prescr_material a where    a.nr_sequencia_solucao  = b.nr_seq_solucao
      and  a.nr_prescricao    = b.nr_Prescricao
      and  a.nr_sequencia    = nr_seq_kit_w
      and  a.ie_agrupador    = 4
      and  a.nr_prescricao    = nr_prescricao_p LIMIT 1;
      if (((ie_acm_ww = 'S') and (coalesce(ie_horario_acm_w,'S') = 'N')) or
          ((ie_se_necessario_ww = 'S') and (coalesce(ie_horario_sn_w,'S')  = 'N'))) then
        qt_solucao_w := 1;
      end if;
    end if;

    if (ie_rep_adep_w = 'S') and (ie_material_adep_w = 'N') then
      ie_gerar_adep_w  := 'N';
    else
      ie_gerar_adep_w  := ie_rep_adep_w;
    end if;

    qt_dia_adic_w  := 0;

    dt_prescricao_ww  := dt_prescricao_w;
    if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
      dt_prescricao_ww  := dt_inicio_prescr_w;
    end if;

    if (qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> '') and (coalesce(qt_solucao_w,0)  = 0) then

      select  coalesce(max(qt_conversao),1)
      into STRICT  qt_conversao_w
      from  material_conversao_unidade
      where  cd_material    = cd_material_w
      and  cd_unidade_medida  = cd_unid_med_dose_w;
      --- Inicio MD20
      begin
        sql_w := 'begin calcular_dose_tot_dispensar_md(:1, :2, :3, :4, :5); end;';
        EXECUTE sql_w using in 0,
                                      in qt_conversao_w,
                                      in out qt_dose_especial_w,
                                      in out qt_total_dispensar_w,
                                      out qt_dose_www;
      exception
        when others then
          qt_dose_especial_w := null;
		  qt_total_dispensar_w := null;
          qt_dose_www := null;
      end;

      --- Fim MD20
      dt_horario_w := PKG_DATE_UTILS.get_Time(dt_prescricao_w, hr_dose_especial_w);

      /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

      if (ie_agora_impressao_w = 'S') then
        nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
        select  max(to_char(b.hr_inicial,'hh24:mi')),
          max(to_char(b.hr_final,'hh24:mi'))
        into STRICT  hr_turno_agora_w,
          hr_final_turno_agora_w
        from  regra_turno_disp_param b,
          regra_turno_disp a
        where  a.nr_sequencia    = b.nr_seq_turno
        and  a.cd_estabelecimento  = cd_estabelecimento_w
        and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
        and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

        select  coalesce(max(qt_min_antes_atend), 0),
          coalesce(max(ie_define_agora), 'N')
        into STRICT  qt_min_antes_atend_w,
          ie_define_agora_w
        from  regra_tempo_disp
        where  cd_estabelecimento  = cd_estabelecimento_w
        and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
        and  nr_seq_turno = nr_seq_turno_hor_ag_w
        and  ie_situacao = 'A';

        --- Inicio MD21
        
        begin
          sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
          EXECUTE sql_w using in hr_turno_agora_w,
										in hr_final_turno_agora_w,
										in dt_inicio_prescr_w,
										in qt_min_antes_atend_w,
										in dt_horario_w,
										out dt_limite_agora_w;
        exception
          when others then
            dt_limite_agora_w := null;
        end;

        --- Fim MD21
        
      end if;
      /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_sequencia_w
;

      hr_dose_especial_w  := replace(hr_dose_especial_w,'A','');

      /* Rafael em 07/10/2006 Identificar horarios especiais */

      ie_horario_especial_w := 'N';

      if (dt_horario_w < dt_prescricao_w) and (ie_urgente_w = 'N') then
        dt_horario_w  := dt_horario_w + 1;
      end if;
    --- Incio MD22 ver md2
      begin
        sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
        EXECUTE sql_w using in 1,
									  in ie_classif_nao_padrao_w,
									  in ie_padronizado_dil_w,
									  in ie_padronizado_w,
									  in ie_classif_normal_acm_sn_w,
									  in ie_se_necessario_dil_w,
									  in ie_se_necessario_w,
									  in ie_acm_dil_w,
									  in ie_acm_w,
									  in dt_horario_w,
									  in dt_limite_agora_w,
									  in ie_urgente_w,
									  in ie_agora_impressao_w,
									  in ie_define_agora_w,
									  in qt_min_antes_atend_w,
									  in dt_limite_especial_w,
									  out ie_classif_urgente_w;
      exception
        when others then
          ie_classif_urgente_w := null;
      end;
    --- Fim MD22
      SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_especial_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

      begin
      insert into prescr_mat_hor(
        nr_sequencia,
        nr_seq_digito,
        nr_prescricao,
        nr_seq_material,
        ie_agrupador,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        ds_horario,
        dt_horario,
        qt_dose,
        qt_dispensar,
        cd_unidade_medida,
        cd_unidade_medida_dose,
        cd_material,
        nr_ocorrencia,
        qt_dispensar_hor,
        ie_urgente,
        ie_horario_especial,
        nr_seq_turno,
        ie_aprazado,
        ie_dose_especial,
        ie_controlado,
        ie_padronizado,
        ie_classif_urgente,
        ie_dispensar_farm,
        nr_agrupamento,
        ie_adep,
        qt_horario,
        cd_unid_med_hor,
        cd_motivo_baixa,
        nr_seq_superior,
        dt_lib_horario,
          nr_atendimento)
      values (  nr_sequencia_w,
        calcula_digito('MODULO11',nr_sequencia_w),
        nr_prescricao_p,
        nr_seq_prescr_w,
        ie_agrupador_w,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        hr_dose_especial_w,
        dt_horario_w,
        qt_dose_especial_w,
        qt_dose_especial_w,
        cd_unidade_medida_w,
        cd_unid_med_dose_w,
        cd_material_w,
        1,
        CASE WHEN cd_motivo_baixa_w=0 THEN  qt_dose_especial_w  ELSE 0 END ,
        ie_urgente_w,
        coalesce(ie_horario_especial_w,'N'),
        Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_w),
        'N',
        'S',
        ie_controlado_w,
        ie_padronizado_w,
        ie_classif_urgente_w,
        ie_regra_disp_w,
        nr_agrupamento_w,
        --ie_rep_adep_w);
        ie_gerar_adep_w,
        qt_dose_hor_w,
        cd_unid_med_dose_hor_w,
        cd_motivo_baixa_w,
        nr_seq_kit_w,
        clock_timestamp(),
          nr_atendimento_w);


      CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);

      exception when others then
        sqlerrm_w  := substr(sqlerrm,1,2000);
      end;

    end if;

    if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') and (coalesce(qt_solucao_w,0)  = 0) then
      while  (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
        k  := position(' ' in ds_horarios_padr_w);

        if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
          ds_hora_w    := substr(ds_horarios_padr_w, 1, k-1);
          ds_hora_w    := replace(ds_hora_w, ' ','');
          ds_horarios_padr_w  := substr(ds_horarios_padr_w, k + 1, 2000);
        elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
          ds_hora_w     := replace(ds_horarios_padr_w,' ','');
          ds_horarios_padr_w  := '';
        end if;

        if  ((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
          if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
            qt_dia_adic_w  := 1;
          elsif (position('AA' in ds_hora_w) > 0) then
            qt_dia_adic_w  := qt_dia_adic_w + 1;
          end if;
        end if;

        ds_hora_w  := replace(ds_hora_w,'A','');
        ds_hora_w  := replace(ds_hora_w,'A','');

        if (ie_urgente_w  = 'S') then
          dt_libe_w  := dt_liberacao_w;
          if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
            select  max(dt_liberacao)
            into STRICT  dt_libe_w
            from  prescr_medica
            where  nr_prescricao  = nr_prescricao_p;
          end if;
          dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
        else
          dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);
        end if;

        dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''));


        /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

        if (ie_agora_impressao_w = 'S') then
          nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
          select  max(to_char(b.hr_inicial,'hh24:mi')),
            max(to_char(b.hr_final,'hh24:mi'))
          into STRICT  hr_turno_agora_w,
            hr_final_turno_agora_w
          from  regra_turno_disp_param b,
            regra_turno_disp a
          where  a.nr_sequencia    = b.nr_seq_turno
          and  a.cd_estabelecimento  = cd_estabelecimento_w
          and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
          and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

          select  coalesce(max(qt_min_antes_atend), 0),
            coalesce(max(ie_define_agora), 'N')
          into STRICT  qt_min_antes_atend_w,
            ie_define_agora_w
          from  regra_tempo_disp
          where  cd_estabelecimento  = cd_estabelecimento_w
          and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
          and  nr_seq_turno = nr_seq_turno_hor_ag_w
          and  ie_situacao = 'A';
          --- Inicio MD23
          begin
            sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
            EXECUTE sql_w using in hr_turno_agora_w,
										  in hr_final_turno_agora_w,
										  in dt_inicio_prescr_w,
										  in qt_min_antes_atend_w,
										  in dt_horario_w,
										  out dt_limite_agora_w;
          exception
            when others then
              dt_limite_agora_w := null;
          end;

          --- Fim MD23
        end if;
        /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

        select  nextval('prescr_mat_hor_seq')
        into STRICT  nr_sequencia_w
;

        --- Inicio MD24

        
        /* Rafael em 07/10/2006 Identificar horarios especiais */

        
        begin
          sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
          EXECUTE sql_w using in 1,
										in ie_se_necessario_dil_w,
										in ie_acm_dil_w,
										in ie_se_necessario_w,
										in ie_acm_w,
										in qt_dose_especial_w,
										in hr_dose_especial_w,
										in  ie_gerar_especial_w,
										out ie_horario_especial_w;
        exception
          when others then
            ie_horario_especial_w := null;
        end;

        --- Fim MD24
      
        if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
          dt_horario_w  := dt_horario_w + 1;
        end if;

        --- Inicio MD25
        
        begin
          sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 1,
										in ie_classif_nao_padrao_w,
										in ie_padronizado_dil_w,
										in ie_padronizado_w,
										in ie_classif_normal_acm_sn_w,
										in ie_se_necessario_dil_w,
										in ie_se_necessario_w,
										in ie_acm_dil_w,
										in ie_acm_w,
										in dt_horario_w,
										in dt_limite_agora_w,
										in ie_urgente_w,
										in ie_agora_impressao_w,
										in ie_define_agora_w,
										in qt_min_antes_atend_w,
										in dt_limite_especial_w,
										out ie_classif_urgente_w;
        exception
          when others then
            ie_classif_urgente_w := null;
        end;

        --- Fim MD25
        
        SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

        if (ie_dose_especial_p = 'N') or
           ((ie_dose_especial_p = 'E') and (ie_somente_agora_p = 'S') and
          ((coalesce(ie_se_necessario_w,'N') = 'S') or (coalesce(ie_acm_w,'N') = 'S') or (coalesce(ie_urgente_w,'N') = 'S'))) then
          dt_lib_horario_w  := clock_timestamp();
        else
          dt_lib_horario_w  := null;
        end if;

        begin
        insert into prescr_mat_hor(
          nr_sequencia,
          nr_seq_digito,
          nr_prescricao,
          nr_seq_material,
          ie_agrupador,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ds_horario,
          dt_horario,
          qt_dose,
          qt_dispensar,
          cd_unidade_medida,
          cd_unidade_medida_dose,
          cd_material,
          nr_ocorrencia,
          qt_dispensar_hor,
          ie_urgente,
          ie_horario_especial,
          nr_seq_turno,
          ie_aprazado,
          ie_controlado,
          ie_padronizado,
          ie_classif_urgente,
          ie_dispensar_farm,
          nr_agrupamento,
          ie_adep,
          qt_horario,
          cd_unid_med_hor,
          cd_motivo_baixa,
          nr_seq_superior,
          dt_lib_horario,
          nr_atendimento)
        values (  nr_sequencia_w,
          calcula_digito('MODULO11',nr_sequencia_w),
          nr_prescricao_p,
          nr_seq_prescr_w,
          ie_agrupador_w,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          ds_hora_w,
          dt_horario_w,
          qt_dose_w,
          qt_total_dispensar_w,
          cd_unidade_medida_w,
          cd_unid_med_dose_w,
          cd_material_w,
          nr_ocorrencia_w,
          CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w, nr_ocorrencia_w)  ELSE 0 END ,
          ie_urgente_w,
          coalesce(ie_horario_especial_w,'N'),
          Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
          'N',
          ie_controlado_w,
          ie_padronizado_w,
          ie_classif_urgente_w,
          ie_regra_disp_w,
          nr_agrupamento_w,
          --ie_rep_adep_w);
          ie_gerar_adep_w,
          qt_dose_hor_w,
          cd_unid_med_dose_hor_w,
          cd_motivo_baixa_w,
          CASE WHEN nr_seq_recomendacao_w=nr_seq_kit_w THEN null  ELSE nr_seq_kit_w END ,
          dt_lib_horario_w,
          nr_atendimento_w);


        CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);

        exception when others then
          sqlerrm_w  := substr(sqlerrm,1,2000);
        end;

        -- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
        if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
          ds_horarios_padr_w  := '';
        end if;
      end loop;

      elsif (coalesce(qt_solucao_w,0) = 0 and cd_funcao_origem_w <> 2314)    then
      if (hr_prim_horario_w = '  :  ') then
        hr_prim_horario_w := null;
      end if;

      if (ie_urgente_w  = 'S') then
        dt_libe_w  := dt_liberacao_w;
        if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
          select  max(dt_liberacao)
          into STRICT  dt_libe_w
          from  prescr_medica
          where  nr_prescricao  = nr_prescricao_p;
        end if;

        dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
      else
        dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);
      end if;

      begin
      ds_hora_w  := coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
      dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww, ds_hora_w);

      /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

      if (ie_agora_impressao_w = 'S') then
        nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
        select  max(to_char(b.hr_inicial,'hh24:mi')),
          max(to_char(b.hr_final,'hh24:mi'))
        into STRICT  hr_turno_agora_w,
          hr_final_turno_agora_w
        from  regra_turno_disp_param b,
          regra_turno_disp a
        where  a.nr_sequencia    = b.nr_seq_turno
        and  a.cd_estabelecimento  = cd_estabelecimento_w
        and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
        and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

        select  coalesce(max(qt_min_antes_atend), 0),
          coalesce(max(ie_define_agora), 'N')
        into STRICT  qt_min_antes_atend_w,
          ie_define_agora_w
        from  regra_tempo_disp
        where  cd_estabelecimento  = cd_estabelecimento_w
        and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
        and  nr_seq_turno = nr_seq_turno_hor_ag_w
        and  ie_situacao = 'A';

        --- Inicio Md26
        
        begin
          sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
          EXECUTE sql_w using in hr_turno_agora_w,
										in hr_final_turno_agora_w,
										in dt_inicio_prescr_w,
										in qt_min_antes_atend_w,
										in dt_horario_w,
										out dt_limite_agora_w;
        exception
          when others then
            dt_limite_agora_w := null;
        end;

        --- Fim MD26
        
      end if;
      /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_sequencia_w
;

      --- Inicio Md27

      /* Rafael em 07/10/2006 Identificar horarios especiais */

      
      if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') or (hr_dose_especial_w IS NOT NULL AND hr_dose_especial_w::text <> '' AND qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> '') then
        ie_horario_especial_w  := 'S';
      else
        ie_horario_especial_w  := 'N';
      end if;

      begin
        sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
        EXECUTE sql_w using in 3,
									  in ie_se_necessario_dil_w,
									  in ie_acm_dil_w,
									  in ie_se_necessario_w,
									  in ie_acm_w,
									  in qt_dose_especial_w,
									  in hr_dose_especial_w,
									  in  ie_gerar_especial_w,
									  out ie_horario_especial_w;
      exception
        when others then
          ie_horario_especial_w := null;
      end;

      --- Fim Md27
      
      if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
        dt_horario_w  := dt_horario_w + 1;
      end if;

      --- Inicio MD28
      begin
        sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
        EXECUTE sql_w using in 1,
									  in ie_classif_nao_padrao_w,
									  in ie_padronizado_dil_w,
									  in ie_padronizado_w,
									  in ie_classif_normal_acm_sn_w,
									  in ie_se_necessario_dil_w,
									  in ie_se_necessario_w,
									  in ie_acm_dil_w,
									  in ie_acm_w,
									  in dt_horario_w,
									  in dt_limite_agora_w,
									  in ie_urgente_w,
									  in ie_agora_impressao_w,
									  in ie_define_agora_w,
									  in qt_min_antes_atend_w,
									  in dt_limite_especial_w,
									  out ie_classif_urgente_w;
      exception
        when others then
          ie_classif_urgente_w := null;
      end;
      --- Fim MD28
      SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

      insert into prescr_mat_hor(
        nr_sequencia,
        nr_seq_digito,
        nr_prescricao,
        nr_seq_material,
        ie_agrupador,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        ds_horario,
        dt_horario,
        qt_dose,
        qt_dispensar,
        cd_unidade_medida,
        cd_unidade_medida_dose,
        cd_material,
        nr_ocorrencia,
        qt_dispensar_hor,
        ie_urgente,
        ie_horario_especial,
        nr_seq_turno,
        ie_aprazado,
        ie_controlado,
        ie_padronizado,
        ie_classif_urgente,
        ie_dispensar_farm,
        nr_agrupamento,
        ie_adep,
        qt_horario,
        cd_unid_med_hor,
        cd_motivo_baixa,
        nr_seq_superior,
        dt_lib_horario,
          nr_atendimento)
      values (  nr_sequencia_w,
        calcula_digito('MODULO11',nr_sequencia_w),
        nr_prescricao_p,
        nr_seq_prescr_w,
        ie_agrupador_w,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        ds_hora_w,
        dt_horario_w,
        qt_dose_w,
        qt_total_dispensar_w,
        cd_unidade_medida_w,
        cd_unid_med_dose_w,
        cd_material_w,
        nr_ocorrencia_w,
        CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w, nr_ocorrencia_w)  ELSE 0 END ,
        ie_urgente_w,
        coalesce(ie_horario_especial_w,'S'),
        Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
        'N',
        ie_controlado_w,
        ie_padronizado_w,
        ie_classif_urgente_w,
        ie_regra_disp_w,
        nr_agrupamento_w,
        --ie_rep_adep_w);
        ie_gerar_adep_w,
        qt_dose_hor_w,
        cd_unid_med_dose_hor_w,
        cd_motivo_baixa_w,
        nr_seq_kit_w,
        clock_timestamp(),
        nr_atendimento_w);

      CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
      exception when others then
        sqlerrm_w  := substr(sqlerrm,1,2000);
      end;
    end if;

  end loop;
  close C02;

  qt_dia_adic_w  := 0;
  qt_reg_w  := 0;
  open C04;
  loop
  fetch C04 into
    ie_agrupador_w,
    nr_seq_prescr_w,
    qt_dose_w,
    qt_total_dispensar_w,
    cd_unidade_medida_w,
    cd_unid_med_dose_w,
    nr_ocorrencia_w,
    cd_material_w,
    ds_horarios_w,
    ie_esquema_alternado_w,
    nr_seq_solucao_w,
    ie_urgente_w,
    ie_se_necessario_w,
    ie_acm_w,
    ie_controlado_w,
    ie_padronizado_w,
    ie_regra_disp_w,
    nr_agrupamento_w,
    cd_protocolo_w,
    cd_local_estoque_w,
    cd_motivo_baixa_w,
    ie_etapa_especial_w,
    hr_prim_horario_w,
    ie_dialise_w;
  EXIT WHEN NOT FOUND; /* apply on C04 */

    -- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
    if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
      select  coalesce(max('N'),'S')
      into STRICT  ie_urgente_w
      from  prescr_mat_hor x
      where  x.nr_prescricao    = nr_prescricao_p
      and    x.nr_seq_material  = nr_seq_prescr_w
      and    Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
      and    coalesce(x.ie_dose_especial,'N')  = 'N'
      and    coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
    end if;

    dt_prescricao_ww  := dt_prescricao_w;
    if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
      dt_prescricao_ww  := dt_inicio_prescr_w;
    end if;

    qt_dia_adic_w  := 0;
    if (ie_esquema_alternado_w = 'N') then
      while(position(obter_desc_expressao(618483) in ds_horarios_w) > 0) or (position(' as' in ds_horarios_w) > 0) loop
        k  := position(obter_desc_expressao(618483) in ds_horarios_w);
        if (k = 0) then
          k  := position(' as' in ds_horarios_w) +1;
        end if;
        y  := position(';' in ds_horarios_w);
        if (y > 0) then
          ds_horarios_w  := substr(ds_horarios_w,1,k-1) ||substr(ds_horarios_w,y+1,length(ds_horarios_w));
        else
          ds_horarios_w  := substr(ds_horarios_w,1,k-1);
        end if;
      end loop;
    else
      ds_horarios_w  := '';
      open C004;
      loop
        fetch C004 into
          ds_hora_w;
        EXIT WHEN NOT FOUND; /* apply on C004 */
        ds_horarios_w  := substr(ds_horarios_w ||' '||ds_hora_w, 1,2000);
      end loop;
      close C004;
    end if;

    if (coalesce(ds_horarios_w::text, '') = '') then
      ds_horarios_w  := to_char(dt_inicio_prescr_w,'hh24:mi');
    end if;

    select  max(padroniza_horario_prescr(ds_horarios_w, CASE WHEN substr(Obter_Se_horario_hoje(dt_prescricao_w,dt_primeiro_horario_w,hr_prim_horario_w),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(dt_primeiro_horario_w,dt_prescricao_w),'dd/mm/yyyy hh24:mi:ss') END ))
    into STRICT  ds_horarios_padr_w
;

    ie_urgente_ant_w  := ie_urgente_w;

    if (ie_urgente_ant_w = 'N') then
      ie_urgente_ant_w  := coalesce(ie_etapa_especial_w,'N');
    end if;

    if (coalesce(ie_etapa_especial_w,'N')  = 'S') and
      (((coalesce(ie_acm_w,'N')    = 'S') and (coalesce(ie_horario_acm_w,'S')  = 'N')) or
      ((coalesce(ie_se_necessario_w,'N')  = 'S') and (coalesce(ie_horario_sn_w,'S')  = 'N'))) then
      if (position(':' in substr(ds_horarios_padr_w,1,5)) > 0) then
        ds_horarios_padr_w  := substr(ds_horarios_padr_w,1,5);
      else
        ds_horarios_padr_w  := substr(ds_horarios_padr_w,1,2);
      end if;
    end if;

    if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
      ie_atualiza_proximo_w  := 'N';
      while  (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
        k  := position(' ' in ds_horarios_padr_w);

        if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
          ds_hora_w    := substr(ds_horarios_padr_w, 1, k-1);
          ds_hora_w    := replace(ds_hora_w, ' ','');
          ds_horarios_padr_w  := substr(ds_horarios_padr_w, k + 1, 2000);
        elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
          ds_hora_w     := replace(ds_horarios_padr_w,' ','');
          ds_horarios_padr_w  := '';
        end if;

        if  ((ie_urgente_ant_w = 'N') or (cd_funcao_origem_w = 2314)) then
          if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
            qt_dia_adic_w  := 1;
          elsif (position('AA' in ds_hora_w) > 0) then
            qt_dia_adic_w  := qt_dia_adic_w + 1;
          end if;
        end if;

        ie_urgente_ant_w  := 'N';

        ds_hora_w  := replace(ds_hora_w,'A','');
        ds_hora_w  := replace(ds_hora_w,'A','');

        if (ie_urgente_w  = 'S') then
          dt_libe_w  := dt_liberacao_w;
          if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
            select  max(dt_liberacao)
            into STRICT  dt_libe_w
            from  prescr_medica
            where  nr_prescricao  = nr_prescricao_p;
          end if;

          dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
        else
          dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);
        end if;

        dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''));

        select  nextval('prescr_mat_hor_seq')
        into STRICT  nr_sequencia_w
;

        ie_gerar_especial_w  := 'S';
        if (ie_etapa_especial_w = 'S') and (coalesce(ds_horarios_padr_w::text, '') = '') then
          ie_gerar_especial_w  := 'N';
        end if;

        --- Inicio MD29

        /* Rafael em 07/10/2006 Identificar horarios especiais */

        begin
          sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
          EXECUTE sql_w using in 1,
                        in ie_se_necessario_dil_w,
                        in ie_acm_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_w,
                        in qt_dose_especial_w,
                        in hr_dose_especial_w,
                        in ie_gerar_especial_w,
                        out ie_horario_especial_w;
        exception
          when others then
          ie_horario_especial_w := null;
        end;
        --- Fim MD29
        if  ((dt_horario_w < dt_prescricao_ww) or (ie_atualiza_proximo_w = 'S')) and (ie_urgente_w = 'N') and (coalesce(ie_etapa_especial_w,'N') = 'N') then
          if  ((dt_horario_w < dt_prescricao_ww) or (ie_atualiza_proximo_w = 'S')) then
            ie_atualiza_proximo_w  := 'S';
          end if;
          dt_horario_w  := dt_horario_w + 1;
        end if;

        /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

        if (ie_agora_impressao_w = 'S') then
          nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
          select  max(to_char(b.hr_inicial,'hh24:mi')),
            max(to_char(b.hr_final,'hh24:mi'))
          into STRICT  hr_turno_agora_w,
            hr_final_turno_agora_w
          from  regra_turno_disp_param b,
            regra_turno_disp a
          where  a.nr_sequencia    = b.nr_seq_turno
          and  a.cd_estabelecimento  = cd_estabelecimento_w
          and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
          and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

          select  coalesce(max(qt_min_antes_atend), 0),
            coalesce(max(ie_define_agora), 'N')
          into STRICT  qt_min_antes_atend_w,
            ie_define_agora_w
          from  regra_tempo_disp
          where  cd_estabelecimento  = cd_estabelecimento_w
          and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
          and  nr_seq_turno = nr_seq_turno_hor_ag_w
          and  ie_situacao = 'A';

          --- Inicio MD30
          
          begin
            sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
            EXECUTE sql_w using in hr_turno_agora_w,
                          in hr_final_turno_agora_w,
                          in dt_inicio_prescr_w,
                          in qt_min_antes_atend_w,
                          in dt_horario_w,
                          out dt_limite_agora_w;
          exception
            when others then
            dt_limite_agora_w := null;
          end;

          --- Fim Md30
        end if;
        /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/


        
        --- Inicio MD31
        begin
          sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 1,
                        in ie_classif_nao_padrao_w,
                        in ie_padronizado_dil_w,
                        in ie_padronizado_w,
                        in ie_classif_normal_acm_sn_w,
                        in ie_se_necessario_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_dil_w,
                        in ie_acm_w,
                        in dt_horario_w,
                        in dt_limite_agora_w,
                        in ie_urgente_w,
                        in ie_agora_impressao_w,
                        in ie_define_agora_w,
                        in qt_min_antes_atend_w,
                        in dt_limite_especial_w,
                        out ie_classif_urgente_w;
        exception
          when others then
          ie_classif_urgente_w := null;
        end;

        --- Fim MD31
        
        ie_etapa_esp_w  := 'N';
        qt_reg_w  := qt_reg_w + 1;
        if (ie_etapa_especial_w  = 'S') and (qt_reg_w    = 1) then
          ie_etapa_esp_w  := 'S';
        end if;

        if (nr_seq_solucao_old_w  <> 0) and (nr_seq_solucao_w  <> nr_seq_solucao_old_w) then
          qt_reg_w  := 0;
        end if;

        SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

        if (ie_dialise_w = 'S') and (ie_acm_w = 'S') then
          nr_etapa_sol_w  := 0;
        elsif (nr_seq_solucao_old_w = 0) then
          begin
          nr_etapa_sol_w  := nr_etapa_sol_w + 1;
          end;
        elsif (nr_seq_solucao_w = nr_seq_solucao_old_w) then
          begin
          select  coalesce(max(nr_etapa_sol),nr_etapa_sol_w + 1)
          into STRICT  nr_etapa_sol_w
          from  prescr_mat_hor
          where  nr_prescricao   = nr_prescricao_p
          and  nr_seq_solucao  = nr_seq_solucao_w
          and  dt_horario  = dt_horario_w
          and  Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';
          end;
        else
          begin
          nr_etapa_sol_w  := 1;
          end;
        end if;

        insert into prescr_mat_hor(
          nr_sequencia,
          nr_seq_digito,
          nr_prescricao,
          nr_seq_material,
          ie_agrupador,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ds_horario,
          dt_horario,
          qt_dose,
          qt_dispensar,
          cd_unidade_medida,
          cd_unidade_medida_dose,
          cd_material,
          nr_ocorrencia,
          qt_dispensar_hor,
          ie_urgente,
          ie_horario_especial,
          nr_seq_turno,
          ie_aprazado,
          ie_controlado,
          ie_padronizado,
          ie_classif_urgente,
          ie_dispensar_farm,
          nr_agrupamento,
          ie_adep,
          qt_horario,
          cd_unid_med_hor,
          cd_motivo_baixa,
          nr_seq_solucao,
          nr_etapa_sol,
          ie_etapa_especial,
          dt_lib_horario,
          nr_atendimento)
        values (  nr_sequencia_w,
          calcula_digito('MODULO11',nr_sequencia_w),
          nr_prescricao_p,
          nr_seq_prescr_w,
          ie_agrupador_w,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          ds_hora_w,
          dt_horario_w,
          qt_dose_w,
          qt_total_dispensar_w,
          cd_unidade_medida_w,
          cd_unid_med_dose_w,
          cd_material_w,
          nr_ocorrencia_w,
          CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
          ie_urgente_w,
          coalesce(ie_horario_especial_w,'N'),
          Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
          'N',
          ie_controlado_w,
          ie_padronizado_w,
          ie_classif_urgente_w,
          ie_regra_disp_w,
          nr_agrupamento_w,
          ie_rep_adep_w,
          qt_dose_hor_w,
          cd_unid_med_dose_hor_w,
          cd_motivo_baixa_w,
          nr_seq_solucao_w,
          nr_etapa_sol_w,
          ie_etapa_esp_w,
          clock_timestamp(),
          nr_atendimento_w);


      CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
      nr_seq_solucao_old_w := nr_seq_solucao_w;

      -- CPOE_ITEM_AGORA: Tratamento para que somente 1 horario do item seja de classificacao "Urgente"
      if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
        ds_horarios_padr_w := '';
      end if;

      end loop;
    end if;
  end loop;
  close C04;

  qt_dia_adic_w  := 0;

  open C05;
  loop
    fetch C05 into
      ie_agrupador_w,
      nr_seq_prescr_w,
      qt_dose_w,
      qt_total_dispensar_w,
      cd_unidade_medida_w,
      cd_unid_med_dose_w,
      nr_ocorrencia_w,
      cd_material_w,
      ds_horarios_w,
      ds_horarios_padr_w,
      hr_prim_horario_w,
      ie_urgente_w,
      ie_se_necessario_w,
      ie_acm_w,
      ie_controlado_w,
      ie_padronizado_w,
      ie_regra_disp_w,
      nr_agrupamento_w,
      cd_protocolo_w,
      cd_local_estoque_w,
      cd_motivo_baixa_w;
    EXIT WHEN NOT FOUND; /* apply on C05 */

    -- CPOE_ITEM_AGORA: Tratamento para que somente 1 horario do item seja de classificacao "Urgente"
    if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
      select  coalesce(max('N'),'S')
      into STRICT  ie_urgente_w
      from  prescr_mat_hor x
      where  x.nr_prescricao    = nr_prescricao_p
      and    x.nr_seq_material  = nr_seq_prescr_w
      and    Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
      and    coalesce(x.ie_dose_especial,'N')  = 'N'
      and    coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
    end if;

    qt_dia_adic_w  := 0;

    dt_prescricao_ww  := dt_prescricao_w;
    if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
      dt_prescricao_ww  := dt_inicio_prescr_w;
    end if;

    if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
      while  (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
        k  := position(' ' in ds_horarios_padr_w);

        if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
          ds_hora_w    := substr(ds_horarios_padr_w, 1, k-1);
          ds_hora_w    := replace(ds_hora_w, ' ','');
          ds_horarios_padr_w  := substr(ds_horarios_padr_w, k + 1, 2000);
          elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
          ds_hora_w     := replace(ds_horarios_padr_w,' ','');
          ds_horarios_padr_w  := '';
        end if;

        if  ((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
          if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
            qt_dia_adic_w  := 1;
          elsif (position('AA' in ds_hora_w) > 0) then
            qt_dia_adic_w  := qt_dia_adic_w + 1;
          end if;
        end if;

        ds_hora_w  := replace(ds_hora_w,'A','');
        ds_hora_w  := replace(ds_hora_w,'A','');

        if (ie_urgente_w  = 'S') then
          dt_libe_w  := dt_liberacao_w;
          if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
            select  max(dt_liberacao)
            into STRICT  dt_libe_w
            from  prescr_medica
            where  nr_prescricao  = nr_prescricao_p;
          end if;
          dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
        else
          dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);
        end if;

        dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''));

        /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

        if (ie_agora_impressao_w = 'S') then
          nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
          select  max(to_char(b.hr_inicial,'hh24:mi')),
            max(to_char(b.hr_final,'hh24:mi'))
          into STRICT  hr_turno_agora_w,
            hr_final_turno_agora_w
          from  regra_turno_disp_param b,
            regra_turno_disp a
          where  a.nr_sequencia    = b.nr_seq_turno
          and  a.cd_estabelecimento  = cd_estabelecimento_w
          and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
          and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

          select  coalesce(max(qt_min_antes_atend), 0),
            coalesce(max(ie_define_agora), 'N')
          into STRICT  qt_min_antes_atend_w,
            ie_define_agora_w
          from  regra_tempo_disp
          where  cd_estabelecimento  = cd_estabelecimento_w
          and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
          and  nr_seq_turno = nr_seq_turno_hor_ag_w
          and  ie_situacao = 'A';

          begin
            sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
            EXECUTE sql_w using in hr_turno_agora_w,
                                          in hr_final_turno_agora_w,
                                          in dt_inicio_prescr_w,
                                          in qt_min_antes_atend_w,
                                          in dt_horario_w,
                                          out dt_limite_agora_w;
          exception
            when others then
              dt_limite_agora_w := null;
          end;
		

        end if;
        /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

        select  nextval('prescr_mat_hor_seq')
        into STRICT  nr_sequencia_w
;

        --- Inicio MD32

        /* Rafael em 07/10/2006 Identificar horarios especiais */

        begin
          sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
          EXECUTE sql_w using in 1,
                        in ie_se_necessario_dil_w,
                        in ie_acm_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_w,
                        in qt_dose_especial_w,
                        in hr_dose_especial_w,
                        in ie_gerar_especial_w,
                        out ie_horario_especial_w;
        exception
          when others then
          ie_horario_especial_w := null;
        end;

        --- Fim MD32
        
        if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
          dt_horario_w  := dt_horario_w + 1;
        end if;

        --- Inicio MD33
        begin
          sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 1,
                        in ie_classif_nao_padrao_w,
                        in ie_padronizado_dil_w,
                        in ie_padronizado_w,
                        in ie_classif_normal_acm_sn_w,
                        in ie_se_necessario_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_dil_w,
                        in ie_acm_w,
                        in dt_horario_w,
                        in dt_limite_agora_w,
                        in ie_urgente_w,
                        in ie_agora_impressao_w,
                        in ie_define_agora_w,
                        in qt_min_antes_atend_w,
                        in dt_limite_especial_w,
                        out ie_classif_urgente_w;
        exception
          when others then
          ie_classif_urgente_w := null;
        end;
        --- Inicio MD33
        SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;


        insert into prescr_mat_hor(
          nr_sequencia,
          nr_seq_digito,
          nr_prescricao,
          nr_seq_material,
          ie_agrupador,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ds_horario,
          dt_horario,
          qt_dose,
          qt_dispensar,
          cd_unidade_medida,
          cd_unidade_medida_dose,
          cd_material,
          nr_ocorrencia,
          qt_dispensar_hor,
          ie_urgente,
          ie_horario_especial,
          nr_seq_turno,
          ie_aprazado,
          ie_controlado,
          ie_padronizado,
          ie_classif_urgente,
          ie_dispensar_farm,
          nr_agrupamento,
          ie_adep,
          qt_horario,
          cd_unid_med_hor,
          cd_motivo_baixa,
          dt_lib_horario,
          nr_atendimento)
        values (  nr_sequencia_w,
          calcula_digito('MODULO11',nr_sequencia_w),
          nr_prescricao_p,
          nr_seq_prescr_w,
          ie_agrupador_w,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          ds_hora_w,
          dt_horario_w,
          qt_dose_w,
          qt_total_dispensar_w,
          cd_unidade_medida_w,
          cd_unid_med_dose_w,
          cd_material_w,
          nr_ocorrencia_w,
          CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
          ie_urgente_w,
          coalesce(ie_horario_especial_w,'N'),
          Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
          'N',
          ie_controlado_w,
          ie_padronizado_w,
          ie_classif_urgente_w,
          ie_regra_disp_w,
          nr_agrupamento_w,
          ie_rep_adep_w,
          qt_dose_hor_w,
          cd_unid_med_dose_hor_w,
          cd_motivo_baixa_w,
          clock_timestamp(),
          nr_atendimento_w);

        /* GERACAO DE LOTE PARA DILUENTE/REDILUENTE/RECONSTITUENTE DE ITENS AGORA - COPIA DO PROCESSO DE MEDICAMENTOS */

        if (cd_funcao_origem_w = 2314) then
          open C03;
          loop
          fetch C03 into
            ie_agrupador_dil_w,
            nr_sequencia_dil_w,
            qt_dose_dil_w,
            qt_total_disp_dil_w,
            cd_unidade_medida_dil_w,
            cd_unid_med_dose_dil_w,
            nr_ocorrencia_dil_w,
            cd_material_dil_w,
            ie_se_necessario_dil_w,
            ie_acm_dil_w,
            ie_controlado_dil_w,
            ie_padronizado_dil_w,
            ie_regra_disp_dil_w,
            nr_agrupamento_dil_w,
            cd_protocolo_dil_w,
            cd_local_estoque_dil_w,
            cd_motivo_baixa_dil_w,
            qt_unitaria_w,
            qt_dose_especial_w;
          EXIT WHEN NOT FOUND; /* apply on C03 */

            select  nextval('prescr_mat_hor_seq')
            into STRICT  nr_sequencia_w
;
            --- Inicio MD34
            begin
              sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
              EXECUTE sql_w using in 0,
                            in ie_se_necessario_dil_w,
                            in ie_acm_dil_w,
                            in ie_se_necessario_w,
                            in ie_acm_w,
                            in qt_dose_especial_w,
                            in hr_dose_especial_w,
                            in ie_gerar_especial_w,
                            out ie_horario_especial_w;
            exception
              when others then
              ie_horario_especial_w := null;
            end;

            --- Fim MD34

            
            --- Inicio MD35
            begin
              sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
              EXECUTE sql_w using in 0,
                            in ie_classif_nao_padrao_w,
                            in ie_padronizado_dil_w,
                            in ie_padronizado_w,
                            in ie_classif_normal_acm_sn_w,
                            in ie_se_necessario_dil_w,
                            in ie_se_necessario_w,
                            in ie_acm_dil_w,
                            in ie_acm_w,
                            in dt_horario_w,
                            in dt_limite_agora_w,
                            in ie_urgente_w,
                            in ie_agora_impressao_w,
                            in ie_define_agora_w,
                            in qt_min_antes_atend_w,
                            in dt_limite_especial_w,
                            out ie_classif_urgente_w;
            exception
              when others then
              ie_classif_urgente_w := null;
            end;
            --- Inicio MD35

            
            --- Inicio MD36
            SELECT * FROM obter_dose_um_horario_pmh(cd_material_dil_w, qt_dose_dil_w, cd_unid_med_dose_dil_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

            begin
              sql_w := 'begin calcular_ocor_dil_dispensar_md(:1, :2, :3, :4, :5, :6, :7); end;';
              EXECUTE sql_w using in 0,
                            in qt_total_disp_dil_w,
                            in out nr_ocorrencia_dil_w,
                            in ie_agrupador_dil_w,
                            in nr_ocorrencia_w,
                            in qt_unitaria_w,
                            out qt_dispensar_hor_w;
            exception
              when others then
                nr_ocorrencia_dil_w := null;
              qt_dispensar_hor_w := null;
            end;

            --- Fim MD36
            begin

              dt_suspensao_w    := null;
              dt_fim_horario_w  := null;
              if (ie_copia_status_hor_w  = 'S') then
                select  max(CASE WHEN a.ie_suspenso_adep='S' THEN a.dt_suspensao  ELSE null END ),
                  max(a.dt_fim_horario)
                into STRICT  dt_suspensao_w,
                  dt_fim_horario_w
                from  prescr_medica b,
                  prescr_mat_hor a
                where  a.nr_prescricao    = b.nr_prescricao
                and  b.nr_atendimento  = nr_atendimento_w
                and  a.ie_agrupador    = ie_agrupador_dil_w
                and  a.dt_horario    = dt_horario_w
                and  a.cd_material    = cd_material_dil_w
                and  a.qt_dose    = qt_dose_dil_w
                and  a.nr_prescricao    <> nr_prescricao_p
                and  a.cd_unidade_medida_dose = cd_unid_med_dose_dil_w;
              end if;

              select  count(*)
              into STRICT  qt_hor_w
              from  prescr_mat_hor where nr_prescricao   = nr_prescricao_p
              and  nr_seq_material  = nr_sequencia_dil_w
              and  coalesce(ie_dose_especial,'N') = 'S' LIMIT 1;

              if (qt_hor_w = 0) then
                select  count(*)
                into STRICT  qt_hor_w
                from  prescr_medica b,
                  prescr_mat_hor x where   x.nr_prescricao    = nr_prescricao_p
                and  b.nr_prescricao    = x.nr_prescricao
                and  x.nr_seq_material  = nr_sequencia_dil_w
                and  (x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
                and  (b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '')
                and  (clock_timestamp() + (x.qt_minutos_agora/1440)) > dt_horario_w
                and  coalesce(x.qt_minutos_agora,0) > 0 LIMIT 1;
              end if;

              if (qt_hor_w = 0) then
                insert into prescr_mat_hor(
                  nr_sequencia,
                  nr_seq_digito,
                  nr_prescricao,
                  nr_seq_material,
                  ie_agrupador,
                  dt_atualizacao,
                  nm_usuario,
                  dt_atualizacao_nrec,
                  nm_usuario_nrec,
                  ds_horario,
                  dt_horario,
                  qt_dose,
                  qt_dispensar,
                  cd_unidade_medida,
                  cd_unidade_medida_dose,
                  cd_material,
                  nr_ocorrencia,
                  qt_dispensar_hor,
                  ie_urgente,
                  ie_horario_especial,
                  nr_seq_turno,
                  ie_aprazado,
                  ie_controlado,
                  ie_padronizado,
                  ie_classif_urgente,
                  ie_dispensar_farm,
                  nr_seq_superior,
                  nr_agrupamento,
                  ie_adep,
                  qt_horario,
                  cd_unid_med_hor,
                  cd_motivo_baixa,
                  dt_lib_horario,
                  dt_suspensao,
                  dt_fim_horario,
                  nr_atendimento,
                  ie_dose_especial)
                values (  nr_sequencia_w,
                  calcula_digito('MODULO11',nr_sequencia_w),
                  nr_prescricao_p,
                  nr_sequencia_dil_w,
                  ie_agrupador_dil_w,
                  clock_timestamp(),
                  nm_usuario_p,
                  clock_timestamp(),
                  nm_usuario_p,
                  to_char(dt_horario_w,'hh24:mi'),
                  dt_horario_w,
                  qt_dose_dil_w,
                  CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
                  cd_unidade_medida_dil_w,
                  cd_unid_med_dose_dil_w,
                  cd_material_dil_w,
                  nr_ocorrencia_dil_w,
                  CASE WHEN cd_motivo_baixa_dil_w=0 THEN  qt_dispensar_hor_w  ELSE 0 END ,
                  ie_urgente_w,
                  coalesce(ie_horario_especial_w,'N'),
                  Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_dil_w),
                  'N',
                  ie_controlado_dil_w,
                  ie_padronizado_dil_w,
                  ie_classif_urgente_w,
                  ie_regra_disp_dil_w,
                  nr_seq_prescr_w,
                  nr_agrupamento_w,
                  ie_adep_w,
                  qt_dose_hor_w,
                  cd_unid_med_dose_hor_w,
                  cd_motivo_baixa_dil_w,
                  clock_timestamp(),
                  dt_suspensao_w,
                  dt_fim_horario_w,
                  nr_atendimento_w,
                  'S');

                CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_dil_w, nr_sequencia_w, nm_usuario_p);
              end if;

            exception when others then
              CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_dil_w, ie_agrupador_dil_w, null, null, substr(sqlerrm,1,2000), nm_usuario_p, 17039, 'S');
              sqlerrm_w := substr(sqlerrm,1,2000);
            end;
          end loop;
          close C03;
        end if;
        /* FIM DA GERACAO DE LOTE PARA DILUENTE/REDILUENTE/RECONSTITUENTE DE ITENS AGORA */

        CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);

        -- CPOE_ITEM_AGORA: Tratamento para que somente 1 horario do item seja de classificacao "Urgente"
        if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
          ds_horarios_padr_w  := '';
        end if;
      end loop;
    else
      if (hr_prim_horario_w = '  :  ') then
        hr_prim_horario_w := null;
      end if;

      begin
      ds_hora_w  := coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
      dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww, ds_hora_w);

      /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

      if (ie_agora_impressao_w = 'S') then
        nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
        select  max(to_char(b.hr_inicial,'hh24:mi')),
          max(to_char(b.hr_final,'hh24:mi'))
        into STRICT  hr_turno_agora_w,
          hr_final_turno_agora_w
        from  regra_turno_disp_param b,
          regra_turno_disp a
        where  a.nr_sequencia    = b.nr_seq_turno
        and  a.cd_estabelecimento  = cd_estabelecimento_w
        and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
        and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

        select  coalesce(max(qt_min_antes_atend), 0),
          coalesce(max(ie_define_agora), 'N')
        into STRICT  qt_min_antes_atend_w,
          ie_define_agora_w
        from  regra_tempo_disp
        where  cd_estabelecimento  = cd_estabelecimento_w
        and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
        and  nr_seq_turno = nr_seq_turno_hor_ag_w
        and  ie_situacao = 'A';

        --- Inicio MD37
        begin
          sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
          EXECUTE sql_w using in hr_turno_agora_w,
                                                in hr_final_turno_agora_w,
                                                in dt_inicio_prescr_w,
                                                in qt_min_antes_atend_w,
                                                in dt_horario_w,
                        out dt_limite_agora_w;
        exception
          when others then
            dt_limite_agora_w := null;
        end;
        --- Fim MD37
      end if;
      /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_sequencia_w
;

      /* Rafael em 07/10/2006 Identificar horarios especiais */

      ie_horario_especial_w  := 'S';

      if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
        dt_horario_w  := dt_horario_w + 1;
      end if;
      --- Inicio MD38
      begin
        sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
        EXECUTE sql_w using in 1,
                      in ie_classif_nao_padrao_w,
                      in ie_padronizado_dil_w,
                      in ie_padronizado_w,
                      in ie_classif_normal_acm_sn_w,
                      in ie_se_necessario_dil_w,
                      in ie_se_necessario_w,
                      in ie_acm_dil_w,
                      in ie_acm_w,
                      in dt_horario_w,
                      in dt_limite_agora_w,
                      in ie_urgente_w,
                      in ie_agora_impressao_w,
                      in ie_define_agora_w,
                      in qt_min_antes_atend_w,
                      in dt_limite_especial_w,
                      out ie_classif_urgente_w;
      exception
        when others then
        ie_classif_urgente_w := null;
      end;
      --- Fim MD38
      SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;


      insert into prescr_mat_hor(
        nr_sequencia,
        nr_seq_digito,
        nr_prescricao,
        nr_seq_material,
        ie_agrupador,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        ds_horario,
        dt_horario,
        qt_dose,
        qt_dispensar,
        cd_unidade_medida,
        cd_unidade_medida_dose,
        cd_material,
        nr_ocorrencia,
        qt_dispensar_hor,
        ie_urgente,
        ie_horario_especial,
        nr_seq_turno,
        ie_aprazado,
        ie_controlado,
        ie_padronizado,
        ie_classif_urgente,
        ie_dispensar_farm,
        nr_agrupamento,
        ie_adep,
        qt_horario,
        cd_unid_med_hor,
        cd_motivo_baixa,
        dt_lib_horario,
        nr_atendimento)
      values (  nr_sequencia_w,
        calcula_digito('MODULO11',nr_sequencia_w),
        nr_prescricao_p,
        nr_seq_prescr_w,
        ie_agrupador_w,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        ds_hora_w,
        dt_horario_w,
        qt_dose_w,
        qt_total_dispensar_w,
        cd_unidade_medida_w,
        cd_unid_med_dose_w,
        cd_material_w,
        nr_ocorrencia_w,
        CASE WHEN cd_motivo_baixa_w=0 THEN  qt_total_dispensar_w  ELSE 0 END ,
        ie_urgente_w,
        coalesce(ie_horario_especial_w,'S'),
        Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
        'N',
        ie_controlado_w,
        ie_padronizado_w,
        ie_classif_urgente_w,
        ie_regra_disp_w,
        nr_agrupamento_w,
        ie_rep_adep_w,
        qt_dose_hor_w,
        cd_unid_med_dose_hor_w,
        cd_motivo_baixa_w,
        clock_timestamp(),
        nr_atendimento_w);


        CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
      exception when others then
        sqlerrm_w  := substr(sqlerrm,1,2000);
      end;

    end if;

  end loop;
  close C05;

  qt_dia_adic_w  := 0;

  open C06;
  loop
    fetch C06 into
      ie_agrupador_w,
      nr_seq_prescr_w,
      qt_dose_w,
      qt_total_dispensar_w,
      cd_unidade_medida_w,
      cd_unid_med_dose_w,
      nr_ocorrencia_w,
      cd_material_w,
      ie_urgente_w,
      ie_se_necessario_w,
      ie_acm_w,
      ie_controlado_w,
      ie_padronizado_w,
      ie_regra_disp_w,
      nr_agrupamento_w,
      cd_protocolo_w,
      cd_local_estoque_w,
      cd_motivo_baixa_w;
    EXIT WHEN NOT FOUND; /* apply on C06 */

    dt_prescricao_ww  := dt_prescricao_w;
    if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
      dt_prescricao_ww  := dt_inicio_prescr_w;
    end if;

    if (ie_urgente_w  = 'S') then
      dt_libe_w  := dt_liberacao_w;
      if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
        select  max(dt_liberacao)
        into STRICT  dt_libe_w
        from  prescr_medica
        where  nr_prescricao  = nr_prescricao_p;
      end if;
      dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
    end if;

    ds_hora_w  := to_char(dt_primeiro_horario_w,'hh24:mi');
    dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww, ds_hora_w);

    /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

    if (ie_agora_impressao_w = 'S') then
      nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
      select  max(to_char(b.hr_inicial,'hh24:mi')),
        max(to_char(b.hr_final,'hh24:mi'))
      into STRICT  hr_turno_agora_w,
        hr_final_turno_agora_w
      from  regra_turno_disp_param b,
        regra_turno_disp a
      where  a.nr_sequencia    = b.nr_seq_turno
      and  a.cd_estabelecimento  = cd_estabelecimento_w
      and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
      and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

      select  coalesce(max(qt_min_antes_atend), 0),
        coalesce(max(ie_define_agora), 'N')
      into STRICT  qt_min_antes_atend_w,
        ie_define_agora_w
      from  regra_tempo_disp
      where  cd_estabelecimento  = cd_estabelecimento_w
      and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
      and  nr_seq_turno = nr_seq_turno_hor_ag_w
      and  ie_situacao = 'A';

      --- Inicio MD40
      begin
        sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
        EXECUTE sql_w using in hr_turno_agora_w,
                      in hr_final_turno_agora_w,
                      in dt_inicio_prescr_w,
                      in qt_min_antes_atend_w,
                      in dt_horario_w,
                      out dt_limite_agora_w;
      exception
        when others then
        dt_limite_agora_w := null;
      end;
      --- Fim MD40
    end if;
    /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

    select  nextval('prescr_mat_hor_seq')
    into STRICT  nr_sequencia_w
;

    --- Inicio MD41

    /* Rafael em 07/10/2006 Identificar horarios especiais */

    begin
      sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
      EXECUTE sql_w using in 1,
                    in ie_se_necessario_dil_w,
                    in ie_acm_dil_w,
                    in ie_se_necessario_w,
                    in ie_acm_w,
                    in qt_dose_especial_w,
                    in hr_dose_especial_w,
                    in ie_gerar_especial_w,
                    out ie_horario_especial_w;
    exception
      when others then
      ie_horario_especial_w := null;
    end;
    --- Fim MD41
    if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
      dt_horario_w  := dt_horario_w + 1;
    end if;

    --- Inicio MD42
    begin
      sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
      EXECUTE sql_w using in 1,
                    in ie_classif_nao_padrao_w,
                    in ie_padronizado_dil_w,
                    in ie_padronizado_w,
                    in ie_classif_normal_acm_sn_w,
                    in ie_se_necessario_dil_w,
                    in ie_se_necessario_w,
                    in ie_acm_dil_w,
                    in ie_acm_w,
                    in dt_horario_w,
                    in dt_limite_agora_w,
                    in ie_urgente_w,
                    in ie_agora_impressao_w,
                    in ie_define_agora_w,
                    in qt_min_antes_atend_w,
                    in dt_limite_especial_w,
                    out ie_classif_urgente_w;
    exception
      when others then
      ie_classif_urgente_w := null;
    end;
    --- Fim mD42
    SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;


    insert into prescr_mat_hor(
      nr_sequencia,
      nr_seq_digito,
      nr_prescricao,
      nr_seq_material,
      ie_agrupador,
      dt_atualizacao,
      nm_usuario,
      dt_atualizacao_nrec,
      nm_usuario_nrec,
      ds_horario,
      dt_horario,
      qt_dose,
      qt_dispensar,
      cd_unidade_medida,
      cd_unidade_medida_dose,
      cd_material,
      nr_ocorrencia,
      qt_dispensar_hor,
      ie_urgente,
      ie_horario_especial,
      nr_seq_turno,
      ie_aprazado,
      ie_controlado,
      ie_padronizado,
      ie_classif_urgente,
      ie_dispensar_farm,
      nr_agrupamento,
      ie_adep,
      qt_horario,
      cd_unid_med_hor,
      cd_motivo_baixa,
      dt_lib_horario,
      nr_atendimento)
    values (  nr_sequencia_w,
      calcula_digito('MODULO11',nr_sequencia_w),
      nr_prescricao_p,
      nr_seq_prescr_w,
      ie_agrupador_w,
      clock_timestamp(),
      nm_usuario_p,
      clock_timestamp(),
      nm_usuario_p,
      ds_hora_w,
      dt_horario_w,
      qt_dose_w,
      qt_total_dispensar_w,
      cd_unidade_medida_w,
      cd_unid_med_dose_w,
      cd_material_w,
      nr_ocorrencia_w,
      CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
      ie_urgente_w,
      coalesce(ie_horario_especial_w,'N'),
      Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
      'N',
      ie_controlado_w,
      ie_padronizado_w,
      ie_classif_urgente_w,
      ie_regra_disp_w,
      nr_agrupamento_w,
      ie_rep_adep_w,
      qt_dose_hor_w,
      cd_unid_med_dose_hor_w,
      cd_motivo_baixa_w,
      clock_timestamp(),
      nr_atendimento_w);

    CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
  end loop;
  close C06;

  qt_dia_adic_w  := 0;
  nr_etapa_sol_w  := 1;
  open C08;
  loop
  fetch C08 into
    ie_agrupador_w,
    nr_seq_prescr_w,
    qt_dose_w,
    qt_total_dispensar_w,
    cd_unidade_medida_w,
    cd_unid_med_dose_w,
    nr_ocorrencia_w,
    cd_material_w,
    ds_horarios_w,
    ds_horarios_padr_w,
    cd_intervalo_w,
    hr_prim_horario_w,
    ie_urgente_w,
    ie_se_necessario_w,
    ie_acm_w,
    ie_controlado_w,
    ie_padronizado_w,
    ie_regra_disp_w,
    nr_agrupamento_w,
    cd_protocolo_w,
    cd_local_estoque_w,
    cd_motivo_baixa_w,
    qt_dose_especial_w,
    hr_dose_especial_w;
  EXIT WHEN NOT FOUND; /* apply on C08 */

    -- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
    if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
      select  coalesce(max('N'),'S')
      into STRICT  ie_urgente_w
      from  prescr_mat_hor x
      where  x.nr_prescricao    = nr_prescricao_p
      and    x.nr_seq_material  = nr_seq_prescr_w
      and    Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
      and    coalesce(x.ie_dose_especial,'N')  = 'N'
      and    coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
    end if;

    nr_etapa_sol_w := 1;
    dt_prescricao_ww  := dt_prescricao_w;
    if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
      dt_prescricao_ww  := dt_inicio_prescr_w;
    end if;

    qt_dia_adic_w  := 0;

    if (qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> '') then
      select  coalesce(max(qt_conversao),1)
      into STRICT  qt_conversao_w
      from  material_conversao_unidade
      where  cd_material    = cd_material_w
      and  cd_unidade_medida  = cd_unid_med_dose_w;

      --- Inicio MD43
      
      begin
        sql_w := 'begin calcular_dose_tot_dispensar_md(:1, :2, :3, :4, :5); end;';
        EXECUTE sql_w using in 1,
                                      in qt_conversao_w,
                                      in out qt_dose_especial_w,
                                      in out qt_total_dispensar_w,
                                      out qt_dose_www;
      exception
        when others then
          qt_dose_especial_w := null;
          qt_total_dispensar_w := null;
          qt_dose_www := null;
      end;

      --- Fim MD43
      dt_horario_w    := PKG_DATE_UTILS.get_Time(dt_prescricao_w, hr_dose_especial_w);


      /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

      if (ie_agora_impressao_w = 'S') then
        nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
        select  max(to_char(b.hr_inicial,'hh24:mi')),
          max(to_char(b.hr_final,'hh24:mi'))
        into STRICT  hr_turno_agora_w,
          hr_final_turno_agora_w
        from  regra_turno_disp_param b,
          regra_turno_disp a
        where  a.nr_sequencia    = b.nr_seq_turno
        and  a.cd_estabelecimento  = cd_estabelecimento_w
        and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
        and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

        select  coalesce(max(qt_min_antes_atend), 0),
          coalesce(max(ie_define_agora), 'N')
        into STRICT  qt_min_antes_atend_w,
          ie_define_agora_w
        from  regra_tempo_disp
        where  cd_estabelecimento  = cd_estabelecimento_w
        and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
        and  nr_seq_turno = nr_seq_turno_hor_ag_w
        and  ie_situacao = 'A';

        --- Inicio MD44
        
        begin
          sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
          EXECUTE sql_w using in hr_turno_agora_w,
                                                in hr_final_turno_agora_w,
                                                in dt_inicio_prescr_w,
                                                in qt_min_antes_atend_w,
                                                in dt_horario_w,
                        out dt_limite_agora_w;
        exception
          when others then
            dt_limite_agora_w := null;
        end;

        --- Fim MD44
        
      end if;
      /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_sequencia_w
;

      ie_horario_especial_w := 'N';

      if (dt_horario_w < dt_prescricao_w) and (ie_urgente_w = 'N') then
        dt_horario_w  := dt_horario_w + 1;
      end if;

      --- Inicio MD45
      begin
        sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
        EXECUTE sql_w using in 1,
                      in ie_classif_nao_padrao_w,
                      in ie_padronizado_dil_w,
                      in ie_padronizado_w,
                      in ie_classif_normal_acm_sn_w,
                      in ie_se_necessario_dil_w,
                      in ie_se_necessario_w,
                      in ie_acm_dil_w,
                      in ie_acm_w,
                      in dt_horario_w,
                      in dt_limite_agora_w,
                      in ie_urgente_w,
                      in ie_agora_impressao_w,
                      in ie_define_agora_w,
                      in qt_min_antes_atend_w,
                      in dt_limite_especial_w,
                      out ie_classif_urgente_w;
      exception
        when others then
        ie_classif_urgente_w := null;
      end;
      --- Fim MD45
      SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_www, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;


      select  count(*)
      into STRICT  qt_jejum_w
      from  rep_jejum a,
          prescr_medica b where    dt_horario_w between dt_inicio and dt_fim -1/1440
      and    a.nr_prescricao    = b.nr_prescricao
      and    coalesce(b.dt_suspensao::text, '') = ''
      and    b.nr_atendimento  = nr_atendimento_w LIMIT 1;

      if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then

        insert into prescr_mat_hor(
          nr_sequencia,
          nr_seq_digito,
          nr_prescricao,
          nr_seq_material,
          ie_agrupador,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ds_horario,
          dt_horario,
          qt_dose,
          qt_dispensar,
          cd_unidade_medida,
          cd_unidade_medida_dose,
          cd_material,
          nr_ocorrencia,
          qt_dispensar_hor,
          ie_urgente,
          ie_horario_especial,
          nr_seq_turno,
          ie_aprazado,
          ie_dose_especial,
          ie_controlado,
          ie_padronizado,
          ie_classif_urgente,
          ie_dispensar_farm,
          nr_agrupamento,
          ie_adep,
          qt_horario,
          cd_unid_med_hor,
          cd_motivo_baixa,
          dt_lib_horario,
          NR_ETAPA_SOL,
          nr_atendimento)
        values (  nr_sequencia_w,
          calcula_digito('MODULO11',nr_sequencia_w),
          nr_prescricao_p,
          nr_seq_prescr_w,
          ie_agrupador_w,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          hr_dose_especial_w,
          dt_horario_w,
          qt_dose_www,
          qt_dose_especial_w,
          cd_unidade_medida_w,
          cd_unid_med_dose_w,
          cd_material_w,
          1,
          CASE WHEN cd_motivo_baixa_w=0 THEN  qt_dose_especial_w  ELSE 0 END ,
          ie_urgente_w,
          coalesce(ie_horario_especial_w,'N'),
          Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_w),
          'N',
          'S',
          ie_controlado_w,
          ie_padronizado_w,
          ie_classif_urgente_w,
          ie_regra_disp_w,
          nr_agrupamento_w,
          ie_rep_adep_w,
          qt_dose_hor_w,
          cd_unid_med_dose_hor_w,
          cd_motivo_baixa_w,
          clock_timestamp(),
          nr_etapa_sol_w,
          nr_atendimento_w);

          nr_etapa_sol_w := nr_etapa_sol_w +1;

        CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
      end if;
    end if;

    select  coalesce(max(ie_prescricao_dieta),'I')
    into STRICT  ie_prescricao_dieta_w
    from  intervalo_prescricao
    where  cd_intervalo  = cd_intervalo_w;

    if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
      while  (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
        k  := position(' ' in ds_horarios_padr_w);

        if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
          ds_hora_w    := substr(ds_horarios_padr_w, 1, k-1);
          ds_hora_w    := replace(ds_hora_w, ' ','');
          ds_horarios_padr_w  := substr(ds_horarios_padr_w, k + 1, 2000);
        elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
          ds_hora_w     := replace(ds_horarios_padr_w,' ','');
          ds_horarios_padr_w  := '';
        end if;

        if  ((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
          if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
            qt_dia_adic_w  := 1;
          elsif (position('AA' in ds_hora_w) > 0) then
            qt_dia_adic_w  := qt_dia_adic_w + 1;
          end if;
        end if;

        ds_hora_w  := replace(ds_hora_w,'A','');
        ds_hora_w  := replace(ds_hora_w,'A','');

        if (ie_urgente_w  = 'S') then
          dt_libe_w  := dt_liberacao_w;
          if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
            select  max(dt_liberacao)
            into STRICT  dt_libe_w
            from  prescr_medica
            where  nr_prescricao  = nr_prescricao_p;
          end if;
          dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
        else
          dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);
        end if;

        dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''));

        if (ie_prescricao_dieta_w not in ('I','H')) then
          ds_horarios_padr_w  := '';
        end if;

        /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

        if (ie_agora_impressao_w = 'S') then
          nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
          select  max(to_char(b.hr_inicial,'hh24:mi')),
            max(to_char(b.hr_final,'hh24:mi'))
          into STRICT  hr_turno_agora_w,
            hr_final_turno_agora_w
          from  regra_turno_disp_param b,
            regra_turno_disp a
          where  a.nr_sequencia    = b.nr_seq_turno
          and  a.cd_estabelecimento  = cd_estabelecimento_w
          and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
          and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

          select  coalesce(max(qt_min_antes_atend), 0),
            coalesce(max(ie_define_agora), 'N')
          into STRICT  qt_min_antes_atend_w,
            ie_define_agora_w
          from  regra_tempo_disp
          where  cd_estabelecimento  = cd_estabelecimento_w
          and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
          and  nr_seq_turno = nr_seq_turno_hor_ag_w
          and  ie_situacao = 'A';

          --- Inicio MD46
          
          begin
            sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
            EXECUTE sql_w using in hr_turno_agora_w,
                          in hr_final_turno_agora_w,
                          in dt_inicio_prescr_w,
                          in qt_min_antes_atend_w,
                          in dt_horario_w,
                          out dt_limite_agora_w;
          exception
            when others then
            dt_limite_agora_w := null;
          end;

          --- Fim MD46
          
        end if;
        /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

        select  nextval('prescr_mat_hor_seq')
        into STRICT  nr_sequencia_w
;

        --- Inicio MD47

        /* Rafael em 07/10/2006 Identificar horarios especiais */

        begin
          sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
          EXECUTE sql_w using in 1,
                        in ie_se_necessario_dil_w,
                        in ie_acm_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_w,
                        in qt_dose_especial_w,
                        in hr_dose_especial_w,
                        in ie_gerar_especial_w,
                        out ie_horario_especial_w;
        exception
          when others then
          ie_horario_especial_w := null;
        end;
        --- Fim MD47
        if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
          dt_horario_w  := dt_horario_w + 1;
        end if;
        --- Inicio MD48
        begin
          sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 1,
                        in ie_classif_nao_padrao_w,
                        in ie_padronizado_dil_w,
                        in ie_padronizado_w,
                        in ie_classif_normal_acm_sn_w,
                        in ie_se_necessario_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_dil_w,
                        in ie_acm_w,
                        in dt_horario_w,
                        in dt_limite_agora_w,
                        in ie_urgente_w,
                        in ie_agora_impressao_w,
                        in ie_define_agora_w,
                        in qt_min_antes_atend_w,
                        in dt_limite_especial_w,
                        out ie_classif_urgente_w;
        exception
          when others then
          ie_classif_urgente_w := null;
        end;

        --- Fim MD48
        SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

        select  count(*)
        into STRICT  qt_jejum_w
        from  rep_jejum a,
            prescr_medica b where    dt_horario_w between dt_inicio and dt_fim -1/1440
        and    a.nr_prescricao    = b.nr_prescricao
        and    coalesce(b.dt_suspensao::text, '') = ''
        and    b.nr_atendimento  = nr_atendimento_w LIMIT 1;

        if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then

          insert into prescr_mat_hor(
            nr_sequencia,
            nr_seq_digito,
            nr_prescricao,
            nr_seq_material,
            ie_agrupador,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            ds_horario,
            dt_horario,
            qt_dose,
            qt_dispensar,
            cd_unidade_medida,
            cd_unidade_medida_dose,
            cd_material,
            nr_ocorrencia,
            qt_dispensar_hor,
            ie_urgente,
            ie_horario_especial,
            nr_seq_turno,
            ie_aprazado,
            ie_controlado,
            ie_padronizado,
            ie_classif_urgente,
            ie_dispensar_farm,
            nr_agrupamento,
            ie_adep,
            qt_horario,
            cd_unid_med_hor,
            cd_motivo_baixa,
            dt_lib_horario,
            NR_ETAPA_SOL,
            nr_atendimento)
          values (  nr_sequencia_w,
            calcula_digito('MODULO11',nr_sequencia_w),
            nr_prescricao_p,
            nr_seq_prescr_w,
            ie_agrupador_w,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            ds_hora_w,
            dt_horario_w,
            qt_dose_w,
            qt_total_dispensar_w,
            cd_unidade_medida_w,
            cd_unid_med_dose_w,
            cd_material_w,
            nr_ocorrencia_w,
            CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
            ie_urgente_w,
            coalesce(ie_horario_especial_w,'N'),
            Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
            'N',
            ie_controlado_w,
            ie_padronizado_w,
            ie_classif_urgente_w,
            ie_regra_disp_w,
            nr_agrupamento_w,
            ie_rep_adep_w,
            qt_dose_hor_w,
            cd_unid_med_dose_hor_w,
            cd_motivo_baixa_w,
            clock_timestamp(),
            nr_etapa_sol_w,
            nr_atendimento_w);

          nr_etapa_sol_w := nr_etapa_sol_w +1;

          CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
        end if;

        -- CPOE_ITEM_AGORA: Tratamento para que somente 1 horario do item seja de classificacao "Urgente"
        if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
          ds_horarios_padr_w  := '';
        end if;
      end loop;
    end if;

  end loop;
  close C08;

  nr_etapa_sol_w  := 0;

  open C10;
  loop
  fetch C10 into
    ie_agrupador_w,
    nr_seq_prescr_w,
    qt_dose_w,
    qt_total_dispensar_w,
    cd_unidade_medida_w,
    cd_unid_med_dose_w,
    nr_ocorrencia_w,
    cd_material_w,
    ie_urgente_w,
    ie_se_necessario_w,
    ie_acm_w,
    ie_controlado_w,
    ie_padronizado_w,
    ie_regra_disp_w,
    nr_agrupamento_w,
    cd_protocolo_w,
    cd_local_estoque_w,
    cd_motivo_baixa_w;
  EXIT WHEN NOT FOUND; /* apply on C10 */

    dt_prescricao_ww  := dt_prescricao_w;
    if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
      dt_prescricao_ww  := dt_inicio_prescr_w;
    end if;

    if (ie_urgente_w  = 'S') then
      dt_libe_w  := dt_liberacao_w;
      if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
        select  max(dt_liberacao)
        into STRICT  dt_libe_w
        from  prescr_medica
        where  nr_prescricao  = nr_prescricao_p;
      end if;
      dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
    else
      dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);
    end if;

    ds_hora_w  := to_char(dt_primeiro_horario_w,'hh24:mi');
    dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww, ds_hora_w);

    /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

    if (ie_agora_impressao_w = 'S') then
      nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
      select  max(to_char(b.hr_inicial,'hh24:mi')),
        max(to_char(b.hr_final,'hh24:mi'))
      into STRICT  hr_turno_agora_w,
        hr_final_turno_agora_w
      from  regra_turno_disp_param b,
        regra_turno_disp a
      where  a.nr_sequencia    = b.nr_seq_turno
      and  a.cd_estabelecimento  = cd_estabelecimento_w
      and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
      and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

      select  coalesce(max(qt_min_antes_atend), 0),
        coalesce(max(ie_define_agora), 'N')
      into STRICT  qt_min_antes_atend_w,
        ie_define_agora_w
      from  regra_tempo_disp
      where  cd_estabelecimento  = cd_estabelecimento_w
      and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
      and  nr_seq_turno = nr_seq_turno_hor_ag_w
      and  ie_situacao = 'A';
      --- Inicio MD49
      begin
        sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
        EXECUTE sql_w using in hr_turno_agora_w,
                      in hr_final_turno_agora_w,
                      in dt_inicio_prescr_w,
                      in qt_min_antes_atend_w,
                      in dt_horario_w,
                      out dt_limite_agora_w;
      exception
        when others then
        dt_limite_agora_w := null;
      end;
      --- Fim MD49
    end if;
    /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

    select  nextval('prescr_mat_hor_seq')
    into STRICT  nr_sequencia_w
;

    --- Inicio MD50

    /* Rafael em 07/10/2006 Identificar horarios especiais */

    begin
      sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
      EXECUTE sql_w using in 1,
                    in ie_se_necessario_dil_w,
                    in ie_acm_dil_w,
                    in ie_se_necessario_w,
                    in ie_acm_w,
                    in qt_dose_especial_w,
                    in hr_dose_especial_w,
                    in ie_gerar_especial_w,
                    out ie_horario_especial_w;
    exception
      when others then
      ie_horario_especial_w := null;
    end;
    --- Fim MD50
    if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
      dt_horario_w  := dt_horario_w + 1;
    end if;

    --- Incio MD51
    begin
      sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
      EXECUTE sql_w using in 1,
                    in ie_classif_nao_padrao_w,
                    in ie_padronizado_dil_w,
                    in ie_padronizado_w,
                    in ie_classif_normal_acm_sn_w,
                    in ie_se_necessario_dil_w,
                    in ie_se_necessario_w,
                    in ie_acm_dil_w,
                    in ie_acm_w,
                    in dt_horario_w,
                    in dt_limite_agora_w,
                    in ie_urgente_w,
                    in ie_agora_impressao_w,
                    in ie_define_agora_w,
                    in qt_min_antes_atend_w,
                    in dt_limite_especial_w,
                    out ie_classif_urgente_w;
    exception
      when others then
      ie_classif_urgente_w := null;
    end;
    --- Fim MD51
    SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;


    insert into prescr_mat_hor(
      nr_sequencia,
      nr_seq_digito,
      nr_prescricao,
      nr_seq_material,
      ie_agrupador,
      dt_atualizacao,
      nm_usuario,
      dt_atualizacao_nrec,
      nm_usuario_nrec,
      ds_horario,
      dt_horario,
      qt_dose,
      qt_dispensar,
      cd_unidade_medida,
      cd_unidade_medida_dose,
      cd_material,
      nr_ocorrencia,
      qt_dispensar_hor,
      ie_urgente,
      ie_horario_especial,
      nr_seq_turno,
      ie_aprazado,
      ie_controlado,
      ie_padronizado,
      ie_classif_urgente,
      ie_dispensar_farm,
      nr_agrupamento,
      ie_adep,
      qt_horario,
      cd_unid_med_hor,
      cd_motivo_baixa,
      dt_lib_horario,
      nr_atendimento)
    values (  nr_sequencia_w,
      calcula_digito('MODULO11',nr_sequencia_w),
      nr_prescricao_p,
      nr_seq_prescr_w,
      ie_agrupador_w,
      clock_timestamp(),
      nm_usuario_p,
      clock_timestamp(),
      nm_usuario_p,
      ds_hora_w,
      dt_horario_w,
      qt_dose_w,
      qt_total_dispensar_w,
      cd_unidade_medida_w,
      cd_unid_med_dose_w,
      cd_material_w,
      nr_ocorrencia_w,
      CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
      ie_urgente_w,
      coalesce(ie_horario_especial_w,'N'),
      Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
      'N',
      ie_controlado_w,
      ie_padronizado_w,
      ie_classif_urgente_w,
      ie_regra_disp_w,
      nr_agrupamento_w,
      ie_rep_adep_w,
      qt_dose_hor_w,
      cd_unid_med_dose_hor_w,
      cd_motivo_baixa_w,
      clock_timestamp(),
      nr_atendimento_w);

    CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
  end loop;
  close C10;

  open C11;
  loop
  fetch C11 into
    ie_agrupador_w,
    nr_seq_prescr_w,
    qt_dose_w,
    qt_total_dispensar_w,
    cd_unidade_medida_w,
    cd_unid_med_dose_w,
    nr_ocorrencia_w,
    cd_material_w,
    ie_urgente_w,
    ie_se_necessario_w,
    ie_acm_w,
    ie_controlado_w,
    ie_padronizado_w,
    ie_regra_disp_w,
    nr_agrupamento_w,
    cd_protocolo_w,
    cd_local_estoque_w,
    cd_motivo_baixa_w;
  EXIT WHEN NOT FOUND; /* apply on C11 */

    dt_prescricao_ww  := dt_prescricao_w;
    if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
      dt_prescricao_ww  := dt_inicio_prescr_w;
    end if;

    select  coalesce(max(hr_prim_horario),to_char(dt_primeiro_horario_w,'hh24:mi'))
    into STRICT  ds_hora_w
    from  nut_pac
    where  nr_prescricao  = nr_prescricao_p;

    if (ie_urgente_w  = 'S') then
      dt_libe_w  := dt_liberacao_w;
      if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
        select  max(dt_liberacao)
        into STRICT  dt_libe_w
        from  prescr_medica
        where  nr_prescricao  = nr_prescricao_p;
      end if;
      dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
    else
      dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);
    end if;

    dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww, ds_hora_w);

    /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

    if (ie_agora_impressao_w = 'S') then
      nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
      select  max(to_char(b.hr_inicial,'hh24:mi')),
        max(to_char(b.hr_final,'hh24:mi'))
      into STRICT  hr_turno_agora_w,
        hr_final_turno_agora_w
      from  regra_turno_disp_param b,
        regra_turno_disp a
      where  a.nr_sequencia    = b.nr_seq_turno
      and  a.cd_estabelecimento  = cd_estabelecimento_w
      and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
      and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));

      select  coalesce(max(qt_min_antes_atend), 0),
        coalesce(max(ie_define_agora), 'N')
      into STRICT  qt_min_antes_atend_w,
        ie_define_agora_w
      from  regra_tempo_disp
      where  cd_estabelecimento  = cd_estabelecimento_w
      and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
      and  nr_seq_turno = nr_seq_turno_hor_ag_w
      and  ie_situacao = 'A';

      --- Inicio MD53
      begin
        sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
        EXECUTE sql_w using in hr_turno_agora_w,
                      in hr_final_turno_agora_w,
                      in dt_inicio_prescr_w,
                      in qt_min_antes_atend_w,
                      in dt_horario_w,
                      out dt_limite_agora_w;
      exception
        when others then
        dt_limite_agora_w := null;
      end;
      --- Fim MD53
    end if;
    /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

    select  nextval('prescr_mat_hor_seq')
    into STRICT  nr_sequencia_w
;

    --- Inicio MD54

    /* Rafael em 07/10/2006 Identificar horarios especiais */

    begin
      sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
      EXECUTE sql_w using in 1,
                    in ie_se_necessario_dil_w,
                    in ie_acm_dil_w,
                    in ie_se_necessario_w,
                    in ie_acm_w,
                    in qt_dose_especial_w,
                    in hr_dose_especial_w,
                    in ie_gerar_especial_w,
                    out ie_horario_especial_w;
    exception
      when others then
      ie_horario_especial_w := null;
    end;
    --- Fim MD54
    if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
      dt_horario_w  := dt_horario_w + 1;
    end if;

    --- Inicio MD55
    begin
      sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
      EXECUTE sql_w using in 1,
                    in ie_classif_nao_padrao_w,
                    in ie_padronizado_dil_w,
                    in ie_padronizado_w,
                    in ie_classif_normal_acm_sn_w,
                    in ie_se_necessario_dil_w,
                    in ie_se_necessario_w,
                    in ie_acm_dil_w,
                    in ie_acm_w,
                    in dt_horario_w,
                    in dt_limite_agora_w,
                    in ie_urgente_w,
                    in ie_agora_impressao_w,
                    in ie_define_agora_w,
                    in qt_min_antes_atend_w,
                    in dt_limite_especial_w,
                    out ie_classif_urgente_w;
    exception
      when others then
      ie_classif_urgente_w := null;
    end;
    --- Fim MD55
    SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;


    insert into prescr_mat_hor(
      nr_sequencia,
      nr_seq_digito,
      nr_prescricao,
      nr_seq_material,
      ie_agrupador,
      dt_atualizacao,
      nm_usuario,
      dt_atualizacao_nrec,
      nm_usuario_nrec,
      ds_horario,
      dt_horario,
      qt_dose,
      qt_dispensar,
      cd_unidade_medida,
      cd_unidade_medida_dose,
      cd_material,
      nr_ocorrencia,
      qt_dispensar_hor,
      ie_urgente,
      ie_horario_especial,
      nr_seq_turno,
      ie_aprazado,
      ie_controlado,
      ie_padronizado,
      ie_classif_urgente,
      ie_dispensar_farm,
      nr_agrupamento,
      ie_adep,
      qt_horario,
      cd_unid_med_hor,
      cd_motivo_baixa,
      dt_lib_horario,
      nr_atendimento)
    values (  nr_sequencia_w,
      calcula_digito('MODULO11',nr_sequencia_w),
      nr_prescricao_p,
      nr_seq_prescr_w,
      ie_agrupador_w,
      clock_timestamp(),
      nm_usuario_p,
      clock_timestamp(),
      nm_usuario_p,
      ds_hora_w,
      dt_horario_w,
      qt_dose_w,
      qt_total_dispensar_w,
      cd_unidade_medida_w,
      cd_unid_med_dose_w,
      cd_material_w,
      nr_ocorrencia_w,
      CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
      ie_urgente_w,
      coalesce(ie_horario_especial_w,'N'),
      Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
      'N',
      ie_controlado_w,
      ie_padronizado_w,
      ie_classif_urgente_w,
      ie_regra_disp_w,
      nr_agrupamento_w,
      ie_rep_adep_w,
      qt_dose_hor_w,
      cd_unid_med_dose_hor_w,
      cd_motivo_baixa_w,
      clock_timestamp(),
      nr_atendimento_w);

    CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
  end loop;
  close C11;

  qt_dia_adic_w  := 0;

  open C12;
  loop
  fetch C12 into
    ie_agrupador_w,
    nr_seq_prescr_w,
    qt_dose_w,
    qt_total_dispensar_w,
    cd_unidade_medida_w,
    cd_unid_med_dose_w,
    nr_ocorrencia_w,
    cd_material_w,
    ds_horarios_w,
    ds_horarios_padr_w,
    hr_prim_horario_w,
    ie_urgente_w,
    qt_dose_especial_w,
    hr_dose_especial_w,
    ie_se_necessario_w,
    ie_acm_w,
    ie_controlado_w,
    ie_padronizado_w,
    ie_regra_disp_w,
    nr_agrupamento_w,
    cd_protocolo_w,
    cd_local_estoque_w,
    cd_motivo_baixa_w;
  EXIT WHEN NOT FOUND; /* apply on C12 */

    -- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
    if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
      select  coalesce(max('N'),'S')
      into STRICT  ie_urgente_w
      from  prescr_mat_hor x
      where  x.nr_prescricao    = nr_prescricao_p
      and    x.nr_seq_material  = nr_seq_prescr_w
      and    Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
      and    coalesce(x.ie_dose_especial,'N')  = 'N'
      and    coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;
    end if;

    dt_prescricao_ww  := dt_prescricao_w;
    if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
      dt_prescricao_ww  := dt_inicio_prescr_w;
    end if;

    qt_dia_adic_w  := 0;

    if (qt_dose_especial_w IS NOT NULL AND qt_dose_especial_w::text <> '') then
      select  coalesce(max(qt_conversao),1)
      into STRICT  qt_conversao_w
      from  material_conversao_unidade
      where  cd_material    = cd_material_w
      and  cd_unidade_medida  = cd_unid_med_dose_w;

      --- Inicio MD56
      
      begin
        sql_w := 'begin calcular_dose_tot_dispensar_md(:1, :2, :3, :4, :5); end;';
        EXECUTE sql_w using in 1,
                                      in qt_conversao_w,
                                      in out qt_dose_especial_w,
                                      in out qt_total_dispensar_w,
                                      out qt_dose_www;

      exception
        when others then
          qt_dose_especial_w := null;
          qt_total_dispensar_w := null;
          qt_dose_www := null;

      end;


      --- Fim MD56
      
      dt_horario_w := PKG_DATE_UTILS.get_Time(dt_prescricao_w, hr_dose_especial_w);

      /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

      if (ie_agora_impressao_w = 'S') then
        nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
        select  max(to_char(b.hr_inicial,'hh24:mi')),
          max(to_char(b.hr_final,'hh24:mi'))
        into STRICT  hr_turno_agora_w,
          hr_final_turno_agora_w
        from  regra_turno_disp_param b,
          regra_turno_disp a
        where  a.nr_sequencia    = b.nr_seq_turno
        and  a.cd_estabelecimento  = cd_estabelecimento_w
        and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
        and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));


        select  coalesce(max(qt_min_antes_atend), 0),
          coalesce(max(ie_define_agora), 'N')
        into STRICT  qt_min_antes_atend_w,
          ie_define_agora_w
        from  regra_tempo_disp
        where  cd_estabelecimento  = cd_estabelecimento_w
        and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
        and  nr_seq_turno = nr_seq_turno_hor_ag_w
        and  ie_situacao = 'A';


        --- Inicio MD57
        
        begin
          sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
          EXECUTE sql_w using in hr_turno_agora_w,
                        in hr_final_turno_agora_w,
                        in dt_inicio_prescr_w,
                        in qt_min_antes_atend_w,
                        in dt_horario_w,
                        out dt_limite_agora_w;
        exception
          when others then
          dt_limite_agora_w := null;

        end;


        --- Fim MD57
        
      end if;

      /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_sequencia_w
;


      ie_horario_especial_w := 'N';

      if (dt_horario_w < dt_prescricao_w) and (ie_urgente_w = 'N') then
        dt_horario_w  := dt_horario_w + 1;
      end if;

      --- Inicio MD58
      begin
        sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
        EXECUTE sql_w using in 1,
                      in ie_classif_nao_padrao_w,
                      in ie_padronizado_dil_w,
                      in ie_padronizado_w,
                      in ie_classif_normal_acm_sn_w,
                      in ie_se_necessario_dil_w,
                      in ie_se_necessario_w,
                      in ie_acm_dil_w,
                      in ie_acm_w,
                      in dt_horario_w,
                      in dt_limite_agora_w,
                      in ie_urgente_w,
                      in ie_agora_impressao_w,
                      in ie_define_agora_w,
                      in qt_min_antes_atend_w,
                      in dt_limite_especial_w,
                      out ie_classif_urgente_w;
      exception
        when others then
        ie_classif_urgente_w := null;

      end;

      --- Fim MD58
      SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_especial_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

      select  count(*)
      into STRICT  qt_jejum_w
      from  rep_jejum a,
          prescr_medica b where    dt_horario_w between dt_inicio and dt_fim -1/1440
      and    a.nr_prescricao    = b.nr_prescricao
      and    coalesce(b.dt_suspensao::text, '') = ''
      and    b.nr_atendimento  = nr_atendimento_w LIMIT 1;


      if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then

        insert into prescr_mat_hor(
          nr_sequencia,
          nr_seq_digito,
          nr_prescricao,
          nr_seq_material,
          ie_agrupador,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ds_horario,
          dt_horario,
          qt_dose,
          qt_dispensar,
          cd_unidade_medida,
          cd_unidade_medida_dose,
          cd_material,
          nr_ocorrencia,
          qt_dispensar_hor,
          ie_urgente,
          ie_horario_especial,
          nr_seq_turno,
          ie_aprazado,
          ie_dose_especial,
          ie_controlado,
          ie_padronizado,
          ie_classif_urgente,
          ie_dispensar_farm,
          nr_agrupamento,
          ie_adep,
          qt_horario,
          cd_unid_med_hor,
          cd_motivo_baixa,
          dt_lib_horario,
          nr_atendimento)
        values (  nr_sequencia_w,
          calcula_digito('MODULO11',nr_sequencia_w),
          nr_prescricao_p,
          nr_seq_prescr_w,
          ie_agrupador_w,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          hr_dose_especial_w,
          dt_horario_w,
          qt_dose_especial_w,
          qt_dose_especial_w,
          cd_unidade_medida_w,
          cd_unid_med_dose_w,
          cd_material_w,
          1,
          CASE WHEN cd_motivo_baixa_w=0 THEN  qt_dose_especial_w  ELSE 0 END ,
          ie_urgente_w,
          coalesce(ie_horario_especial_w,'N'),
          Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,hr_dose_especial_w,cd_local_estoque_w),
          'N',
          'S',
          ie_controlado_w,
          ie_padronizado_w,
          ie_classif_urgente_w,
          ie_regra_disp_w,
          nr_agrupamento_w,
          ie_rep_adep_w,
          qt_dose_hor_w,
          cd_unid_med_dose_hor_w,
          cd_motivo_baixa_w,
          clock_timestamp(),
          nr_atendimento_w);


        CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);

        if (cd_funcao_origem_w = 2314) and (ie_gerar_dil_supl_w = 'S') then
          gerar_reconst_dil_hor;
        end if;

      end if;

    end if;


    if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
      while  (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
        k  := position(' ' in ds_horarios_padr_w);

        if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
          ds_hora_w    := substr(ds_horarios_padr_w, 1, k-1);
          ds_hora_w    := replace(ds_hora_w, ' ','');
          ds_horarios_padr_w  := substr(ds_horarios_padr_w, k + 1, 2000);
        elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
          ds_hora_w     := replace(ds_horarios_padr_w,' ','');
          ds_horarios_padr_w  := '';

        end if;


        if  ((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
          if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
            qt_dia_adic_w  := 1;
          elsif (position('AA' in ds_hora_w) > 0) then
            qt_dia_adic_w  := qt_dia_adic_w + 1;

          end if;

        end if;


        ds_hora_w  := replace(ds_hora_w,'A','');
        ds_hora_w  := replace(ds_hora_w,'A','');

        if (ie_urgente_w  = 'S') then
          dt_libe_w  := dt_liberacao_w;
          if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
            select  max(dt_liberacao)
            into STRICT  dt_libe_w
            from  prescr_medica
            where  nr_prescricao  = nr_prescricao_p;

          end if;

          dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
        else
          dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);

        end if;


        dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''));

        /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

        if (ie_agora_impressao_w = 'S') then
          nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
          select  max(to_char(b.hr_inicial,'hh24:mi')),
            max(to_char(b.hr_final,'hh24:mi'))
          into STRICT  hr_turno_agora_w,
            hr_final_turno_agora_w
          from  regra_turno_disp_param b,
            regra_turno_disp a
          where  a.nr_sequencia    = b.nr_seq_turno
          and  a.cd_estabelecimento  = cd_estabelecimento_w
          and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
          and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));


          select  coalesce(max(qt_min_antes_atend), 0),
            coalesce(max(ie_define_agora), 'N')
          into STRICT  qt_min_antes_atend_w,
            ie_define_agora_w
          from  regra_tempo_disp
          where  cd_estabelecimento  = cd_estabelecimento_w
          and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
          and  nr_seq_turno = nr_seq_turno_hor_ag_w
          and  ie_situacao = 'A';


          --- Inicio MD59
          
          begin
            sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
            EXECUTE sql_w using in hr_turno_agora_w,
                          in hr_final_turno_agora_w,
                          in dt_inicio_prescr_w,
                          in qt_min_antes_atend_w,
                          in dt_horario_w,
                          out dt_limite_agora_w;
          exception
            when others then
            dt_limite_agora_w := null;

          end;


          --- Fim MD59
          
        end if;

        /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

        select  nextval('prescr_mat_hor_seq')
        into STRICT  nr_sequencia_w
;


        --- Inicio MD60

        /* Rafael em 07/10/2006 Identificar horarios especiais */

        begin
          sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
          EXECUTE sql_w using in 1,
                        in ie_se_necessario_dil_w,
                        in ie_acm_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_w,
                        in qt_dose_especial_w,
                        in hr_dose_especial_w,
                        in ie_gerar_especial_w,
                        out ie_horario_especial_w;
        exception
          when others then
          ie_horario_especial_w := null;

        end;

        --- Fim MD60
        if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
          dt_horario_w  := dt_horario_w + 1;
        end if;


        ---- Inicio MD61
        begin
          sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 1,
                        in ie_classif_nao_padrao_w,
                        in ie_padronizado_dil_w,
                        in ie_padronizado_w,
                        in ie_classif_normal_acm_sn_w,
                        in ie_se_necessario_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_dil_w,
                        in ie_acm_w,
                        in dt_horario_w,
                        in dt_limite_agora_w,
                        in ie_urgente_w,
                        in ie_agora_impressao_w,
                        in ie_define_agora_w,
                        in qt_min_antes_atend_w,
                        in dt_limite_especial_w,
                        out ie_classif_urgente_w;
        exception
          when others then
          ie_classif_urgente_w := null;

        end;

        --- Fim MD61
        if (1 = 1) then
          nr_seq_turno_hor_esp_w   := Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_limite_especial_w,'hh24:mi'),cd_local_estoque_w);
          if ( nr_seq_turno_hor_esp_w = Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w)) and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_horario_w) < ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_limite_especial_w)) then
              ie_classif_urgente_w  := 'E';
          end if;

        end if;


        SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

        select  count(*)
        into STRICT  qt_jejum_w
        from  rep_jejum a,
            prescr_medica b where    dt_horario_w between dt_inicio and dt_fim -1/1440
        and    a.nr_prescricao    = b.nr_prescricao
        and    coalesce(b.dt_suspensao::text, '') = ''
        and    b.nr_atendimento  = nr_atendimento_w LIMIT 1;


        if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then

          insert into prescr_mat_hor(
            nr_sequencia,
            nr_seq_digito,
            nr_prescricao,
            nr_seq_material,
            ie_agrupador,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            ds_horario,
            dt_horario,
            qt_dose,
            qt_dispensar,
            cd_unidade_medida,
            cd_unidade_medida_dose,
            cd_material,
            nr_ocorrencia,
            qt_dispensar_hor,
            ie_urgente,
            ie_horario_especial,
            nr_seq_turno,
            ie_aprazado,
            ie_controlado,
            ie_padronizado,
            ie_classif_urgente,
            ie_dispensar_farm,
            nr_agrupamento,
            ie_adep,
            qt_horario,
            cd_unid_med_hor,
            cd_motivo_baixa,
            dt_lib_horario,
            nr_atendimento)
          values (  nr_sequencia_w,
            calcula_digito('MODULO11',nr_sequencia_w),
            nr_prescricao_p,
            nr_seq_prescr_w,
            ie_agrupador_w,
            clock_timestamp(),
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            ds_hora_w,
            dt_horario_w,
            qt_dose_w,
            qt_total_dispensar_w,
            cd_unidade_medida_w,
            cd_unid_med_dose_w,
            cd_material_w,
            nr_ocorrencia_w,
            CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
            ie_urgente_w,
            coalesce(ie_horario_especial_w,'N'),
            Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
            'N',
            ie_controlado_w,
            ie_padronizado_w,
            ie_classif_urgente_w,
            ie_regra_disp_w,
            nr_agrupamento_w,
            ie_rep_adep_w,
            qt_dose_hor_w,
            cd_unid_med_dose_hor_w,
            cd_motivo_baixa_w,
            clock_timestamp(),
            nr_atendimento_w);


          CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);

          if (cd_funcao_origem_w = 2314) and (ie_gerar_dil_supl_w = 'S') then
            gerar_reconst_dil_hor;
          end if;

        end if;


        -- CPOE_ITEM_AGORA: Tratamento para que somente 1 horario do item seja de classificacao "Urgente"
        if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
          ds_horarios_padr_w  := '';
        end if;

      end loop;

    else
      if (hr_prim_horario_w = '  :  ') then
        hr_prim_horario_w := null;
      end if;


      if (ie_urgente_w  = 'S') then
        dt_libe_w  := dt_liberacao_w;
        if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
          select  max(dt_liberacao)
          into STRICT  dt_libe_w
          from  prescr_medica
          where  nr_prescricao  = nr_prescricao_p;

        end if;

        dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
      else
        dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);

      end if;


      begin
      ds_hora_w  := coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
      dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww, ds_hora_w);

      /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

      if (ie_agora_impressao_w = 'S') then
        nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
        select  max(to_char(b.hr_inicial,'hh24:mi')),
          max(to_char(b.hr_final,'hh24:mi'))
        into STRICT  hr_turno_agora_w,
          hr_final_turno_agora_w
        from  regra_turno_disp_param b,
          regra_turno_disp a
        where  a.nr_sequencia    = b.nr_seq_turno
        and  a.cd_estabelecimento  = cd_estabelecimento_w
        and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
        and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));


        select  coalesce(max(qt_min_antes_atend), 0),
          coalesce(max(ie_define_agora), 'N')
        into STRICT  qt_min_antes_atend_w,
          ie_define_agora_w
        from  regra_tempo_disp
        where  cd_estabelecimento  = cd_estabelecimento_w
        and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
        and  nr_seq_turno = nr_seq_turno_hor_ag_w
        and  ie_situacao = 'A';


        --- Inicio Md62
        begin
          sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
          EXECUTE sql_w using in hr_turno_agora_w,
                        in hr_final_turno_agora_w,
                        in dt_inicio_prescr_w,
                        in qt_min_antes_atend_w,
                        in dt_horario_w,
                        out dt_limite_agora_w;
        exception
          when others then
          dt_limite_agora_w := null;

        end;

        --- Fim MD62
      end if;

      /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_sequencia_w
;


      /* Rafael em 07/10/2006 Identificar horarios especiais */

      ie_horario_especial_w  := 'S';

      if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
        dt_horario_w  := dt_horario_w + 1;
      end if;


      --- Inicio Md63
      begin
        sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
        EXECUTE sql_w using in 1,
                      in ie_classif_nao_padrao_w,
                      in ie_padronizado_dil_w,
                      in ie_padronizado_w,
                      in ie_classif_normal_acm_sn_w,
                      in ie_se_necessario_dil_w,
                      in ie_se_necessario_w,
                      in ie_acm_dil_w,
                      in ie_acm_w,
                      in dt_horario_w,
                      in dt_limite_agora_w,
                      in ie_urgente_w,
                      in ie_agora_impressao_w,
                      in ie_define_agora_w,
                      in qt_min_antes_atend_w,
                      in dt_limite_especial_w,
                      out ie_classif_urgente_w;
      exception
        when others then
        ie_classif_urgente_w := null;

      end;

      --- Fim MD63
      SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

      select  count(*)
      into STRICT  qt_jejum_w
      from  rep_jejum a,
          prescr_medica b where    dt_horario_w between dt_inicio and dt_fim -1/1440
      and    a.nr_prescricao    = b.nr_prescricao
      and    coalesce(b.dt_suspensao::text, '') = ''
      and    b.nr_atendimento  = nr_atendimento_w LIMIT 1;


      if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then

        insert into prescr_mat_hor(
          nr_sequencia,
          nr_seq_digito,
          nr_prescricao,
          nr_seq_material,
          ie_agrupador,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ds_horario,
          dt_horario,
          qt_dose,
          qt_dispensar,
          cd_unidade_medida,
          cd_unidade_medida_dose,
          cd_material,
          nr_ocorrencia,
          qt_dispensar_hor,
          ie_urgente,
          ie_horario_especial,
          nr_seq_turno,
          ie_aprazado,
          ie_controlado,
          ie_padronizado,
          ie_classif_urgente,
          ie_dispensar_farm,
          nr_agrupamento,
          ie_adep,
          qt_horario,
          cd_unid_med_hor,
          cd_motivo_baixa,
          dt_lib_horario,
          nr_atendimento)
        values (  nr_sequencia_w,
          calcula_digito('MODULO11',nr_sequencia_w),
          nr_prescricao_p,
          nr_seq_prescr_w,
          ie_agrupador_w,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          ds_hora_w,
          dt_horario_w,
          qt_dose_w,
          qt_total_dispensar_w,
          cd_unidade_medida_w,
          cd_unid_med_dose_w,
          cd_material_w,
          nr_ocorrencia_w,
          CASE WHEN cd_motivo_baixa_w=0 THEN  qt_total_dispensar_w  ELSE 0 END ,
          ie_urgente_w,
          coalesce(ie_horario_especial_w,'S'),
          Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
          'N',
          ie_controlado_w,
          ie_padronizado_w,
          ie_classif_urgente_w,
          ie_regra_disp_w,
          nr_agrupamento_w,
          ie_rep_adep_w,
          qt_dose_hor_w,
          cd_unid_med_dose_hor_w,
          cd_motivo_baixa_w,
          clock_timestamp(),
          nr_atendimento_w);


        CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);

        if (cd_funcao_origem_w = 2314) and (ie_gerar_dil_supl_w = 'S') then
          gerar_reconst_dil_hor;
        end if;

      end if;


      exception when others then
        sqlerrm_w  := substr(sqlerrm,1,2000);

      end;


    end if;


  end loop;

  close C12;

  open C13;
  loop
  fetch C13 into
    ie_agrupador_w,
    nr_seq_prescr_w,
    qt_dose_w,
    qt_total_dispensar_w,
    cd_unidade_medida_w,
    cd_unid_med_dose_w,
    nr_ocorrencia_w,
    cd_material_w,
    ds_horarios_w,
    ds_horarios_padr_w,
    hr_prim_horario_w,
    ie_urgente_w,
    qt_dose_especial_w,
    hr_dose_especial_w,
    ie_se_necessario_w,
    ie_acm_w,
    ie_controlado_w,
    ie_padronizado_w,
    ie_regra_disp_w,
    nr_agrupamento_w,
    cd_protocolo_w,
    cd_local_estoque_w,
    cd_motivo_baixa_w;
  EXIT WHEN NOT FOUND; /* apply on C13 */

    -- CPOE_ITEM_AGORA: Tratamento para que somente 1 horario do item seja de classificacao "Urgente"
    if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
      select  coalesce(max('N'),'S')
      into STRICT  ie_urgente_w
      from  prescr_mat_hor x
      where  x.nr_prescricao    = nr_prescricao_p
      and    x.nr_seq_material  = nr_seq_prescr_w
      and    Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
      and    coalesce(x.ie_dose_especial,'N')  = 'N'
      and    coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;

    end if;


    dt_prescricao_ww  := dt_prescricao_w;
    if (ie_urgente_w = 'N') and (cd_funcao_origem_w <> 2314) then
      dt_prescricao_ww  := dt_inicio_prescr_w;
    end if;


    qt_dia_adic_w  := 0;

    if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
      while  (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
        k  := position(' ' in ds_horarios_padr_w);

        if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
          ds_hora_w    := substr(ds_horarios_padr_w, 1, k-1);
          ds_hora_w    := replace(ds_hora_w, ' ','');
          ds_horarios_padr_w  := substr(ds_horarios_padr_w, k + 1, 2000);
        elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
          ds_hora_w     := replace(ds_horarios_padr_w,' ','');
          ds_horarios_padr_w  := '';

        end if;


        if  ((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
          if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
            qt_dia_adic_w  := 1;
          elsif (position('AA' in ds_hora_w) > 0) then
            qt_dia_adic_w  := qt_dia_adic_w + 1;

          end if;

        end if;


        ds_hora_w  := replace(ds_hora_w,'A','');
        ds_hora_w  := replace(ds_hora_w,'A','');

        if (ie_urgente_w  = 'S') then
          dt_libe_w  := dt_liberacao_w;
          if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
            select  max(dt_liberacao)
            into STRICT  dt_libe_w
            from  prescr_medica
            where  nr_prescricao  = nr_prescricao_p;

          end if;

          dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
        else
          dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);

        end if;


        dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''));

        /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

        if (ie_agora_impressao_w = 'S') then
          nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
          select  max(to_char(b.hr_inicial,'hh24:mi')),
            max(to_char(b.hr_final,'hh24:mi'))
          into STRICT  hr_turno_agora_w,
            hr_final_turno_agora_w
          from  regra_turno_disp_param b,
            regra_turno_disp a
          where  a.nr_sequencia    = b.nr_seq_turno
          and  a.cd_estabelecimento  = cd_estabelecimento_w
          and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
          and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));


          select  coalesce(max(qt_min_antes_atend), 0),
            coalesce(max(ie_define_agora), 'N')
          into STRICT  qt_min_antes_atend_w,
            ie_define_agora_w
          from  regra_tempo_disp
          where  cd_estabelecimento  = cd_estabelecimento_w
          and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
          and  nr_seq_turno = nr_seq_turno_hor_ag_w
          and  ie_situacao = 'A';


          --- Inicio MD64
          
          begin
            sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
            EXECUTE sql_w using in hr_turno_agora_w,
                          in hr_final_turno_agora_w,
                          in dt_inicio_prescr_w,
                          in qt_min_antes_atend_w,
                          in dt_horario_w,
                          out dt_limite_agora_w;
          exception
            when others then
            dt_limite_agora_w := null;

          end;


          --- Fim MD64
          
        end if;

        /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

        select  nextval('prescr_mat_hor_seq')
        into STRICT  nr_sequencia_w
;


        --- Inicio MD65

        /* Rafael em 07/10/2006 Identificar horarios especiais */

        begin
          sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
          EXECUTE sql_w using in 1,
                        in ie_se_necessario_dil_w,
                        in ie_acm_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_w,
                        in qt_dose_especial_w,
                        in hr_dose_especial_w,
                        in ie_gerar_especial_w,
                        out ie_horario_especial_w;
        exception
          when others then
          ie_horario_especial_w := null;

        end;

        --- Fim MD65

        
        --- Inicio MD66
        begin
          sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 1,
                        in ie_classif_nao_padrao_w,
                        in ie_padronizado_dil_w,
                        in ie_padronizado_w,
                        in ie_classif_normal_acm_sn_w,
                        in ie_se_necessario_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_dil_w,
                        in ie_acm_w,
                        in dt_horario_w,
                        in dt_limite_agora_w,
                        in ie_urgente_w,
                        in ie_agora_impressao_w,
                        in ie_define_agora_w,
                        in qt_min_antes_atend_w,
                        in dt_limite_especial_w,
                        out ie_classif_urgente_w;
        exception
          when others then
          ie_classif_urgente_w := null;

        end;

        --- Fim MD66
        if (1 = 1) then
          nr_seq_turno_hor_esp_w   := Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_limite_especial_w,'hh24:mi'),cd_local_estoque_w);
          if ( nr_seq_turno_hor_esp_w = Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w)) and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_horario_w) < ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_limite_especial_w)) then
              ie_classif_urgente_w  := 'E';
          end if;

        end if;


        SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;


        insert into prescr_mat_hor(
          nr_sequencia,
          nr_seq_digito,
          nr_prescricao,
          nr_seq_material,
          ie_agrupador,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ds_horario,
          dt_horario,
          qt_dose,
          qt_dispensar,
          cd_unidade_medida,
          cd_unidade_medida_dose,
          cd_material,
          nr_ocorrencia,
          qt_dispensar_hor,
          ie_urgente,
          ie_horario_especial,
          nr_seq_turno,
          ie_aprazado,
          ie_controlado,
          ie_padronizado,
          ie_classif_urgente,
          ie_dispensar_farm,
          nr_agrupamento,
          ie_adep,
          qt_horario,
          cd_unid_med_hor,
          cd_motivo_baixa,
          dt_lib_horario,
          nr_atendimento)
        values (  nr_sequencia_w,
          calcula_digito('MODULO11',nr_sequencia_w),
          nr_prescricao_p,
          nr_seq_prescr_w,
          ie_agrupador_w,
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          ds_hora_w,
          dt_horario_w,
          qt_dose_w,
          qt_total_dispensar_w,
          cd_unidade_medida_w,
          cd_unid_med_dose_w,
          cd_material_w,
          nr_ocorrencia_w,
          CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
          ie_urgente_w,
          coalesce(ie_horario_especial_w,'N'),
          Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
          'N',
          ie_controlado_w,
          ie_padronizado_w,
          ie_classif_urgente_w,
          ie_regra_disp_w,
          nr_agrupamento_w,
          ie_rep_adep_w,
          qt_dose_hor_w,
          cd_unid_med_dose_hor_w,
          cd_motivo_baixa_w,
          clock_timestamp(),
          nr_atendimento_w);


        CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);

        -- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
        if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
          ds_horarios_padr_w  := '';
        end if;

      end loop;

    else
      if (hr_prim_horario_w = '  :  ') then
        hr_prim_horario_w := null;
      end if;


      if (ie_urgente_w  = 'S') then
        dt_libe_w  := dt_liberacao_w;
        if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
          select  max(dt_liberacao)
          into STRICT  dt_libe_w
          from  prescr_medica
          where  nr_prescricao  = nr_prescricao_p;

        end if;

        dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
      else
        dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);

      end if;


      begin
      ds_hora_w  := coalesce(hr_prim_horario_w, substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5));
      dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww, ds_hora_w);


      /*Fabio e Jonas - 19/01/2010 = Para gerar os lotes como AGORA dependendo do horario final do turno, e nao mais pelo minutos de agora*/

      if (ie_agora_impressao_w = 'S') then
        nr_seq_turno_hor_ag_w  := obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'), cd_local_estoque_w);
        select  max(to_char(b.hr_inicial,'hh24:mi')),
          max(to_char(b.hr_final,'hh24:mi'))
        into STRICT  hr_turno_agora_w,
          hr_final_turno_agora_w
        from  regra_turno_disp_param b,
          regra_turno_disp a
        where  a.nr_sequencia    = b.nr_seq_turno
        and  a.cd_estabelecimento  = cd_estabelecimento_w
        and  a.nr_sequencia    = nr_seq_turno_hor_ag_w
        and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))  = coalesce(cd_setor_atendimento_w,0));


        select  coalesce(max(qt_min_antes_atend), 0),
          coalesce(max(ie_define_agora), 'N')
        into STRICT  qt_min_antes_atend_w,
          ie_define_agora_w
        from  regra_tempo_disp
        where  cd_estabelecimento  = cd_estabelecimento_w
        and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
        and  nr_seq_turno = nr_seq_turno_hor_ag_w
        and  ie_situacao = 'A';


        ---- inicio MD67
        
        begin
          sql_w := 'call calcular_dt_limite_agora_md(:1, :2, :3, :4, :5) into :dt_limite_agora_w';
          EXECUTE sql_w using in hr_turno_agora_w,
                        in hr_final_turno_agora_w,
                        in dt_inicio_prescr_w,
                        in qt_min_antes_atend_w,
                        in dt_horario_w,
                        out dt_limite_agora_w;
        exception
          when others then
          dt_limite_agora_w := null;

        end;


        --- Fim MD67
      end if;

      /*Fabio e Jonas - 19/01/2010 = Final da alteracao*/

      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_sequencia_w
;


      /* Rafael em 07/10/2006 Identificar horarios especiais */

      ie_horario_especial_w  := 'S';

      if (dt_horario_w < dt_prescricao_ww) and (ie_urgente_w = 'N') then
        dt_horario_w  := dt_horario_w + 1;
      end if;


      --- Inicio mD68
      begin
        sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
        EXECUTE sql_w using in 1,
                      in ie_classif_nao_padrao_w,
                      in ie_padronizado_dil_w,
                      in ie_padronizado_w,
                      in ie_classif_normal_acm_sn_w,
                      in ie_se_necessario_dil_w,
                      in ie_se_necessario_w,
                      in ie_acm_dil_w,
                      in ie_acm_w,
                      in dt_horario_w,
                      in dt_limite_agora_w,
                      in ie_urgente_w,
                      in ie_agora_impressao_w,
                      in ie_define_agora_w,
                      in qt_min_antes_atend_w,
                      in dt_limite_especial_w,
                      out ie_classif_urgente_w;
      exception
        when others then
        ie_classif_urgente_w := null;

      end;

      --- Fim MD68
      SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;


      insert into prescr_mat_hor(
        nr_sequencia,
        nr_seq_digito,
        nr_prescricao,
        nr_seq_material,
        ie_agrupador,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        ds_horario,
        dt_horario,
        qt_dose,
        qt_dispensar,
        cd_unidade_medida,
        cd_unidade_medida_dose,
        cd_material,
        nr_ocorrencia,
        qt_dispensar_hor,
        ie_urgente,
        ie_horario_especial,
        nr_seq_turno,
        ie_aprazado,
        ie_controlado,
        ie_padronizado,
        ie_classif_urgente,
        ie_dispensar_farm,
        nr_agrupamento,
        ie_adep,
        qt_horario,
        cd_unid_med_hor,
        cd_motivo_baixa,
        dt_lib_horario,
        nr_atendimento)
      values (  nr_sequencia_w,
        calcula_digito('MODULO11',nr_sequencia_w),
        nr_prescricao_p,
        nr_seq_prescr_w,
        ie_agrupador_w,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        ds_hora_w,
        dt_horario_w,
        qt_dose_w,
        qt_total_dispensar_w,
        cd_unidade_medida_w,
        cd_unid_med_dose_w,
        cd_material_w,
        nr_ocorrencia_w,
        CASE WHEN cd_motivo_baixa_w=0 THEN  qt_total_dispensar_w  ELSE 0 END ,
        ie_urgente_w,
        coalesce(ie_horario_especial_w,'S'),
        Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
        'N',
        ie_controlado_w,
        ie_padronizado_w,
        ie_classif_urgente_w,
        ie_regra_disp_w,
        nr_agrupamento_w,
        ie_rep_adep_w,
        qt_dose_hor_w,
        cd_unid_med_dose_hor_w,
        cd_motivo_baixa_w,
        clock_timestamp(),
        nr_atendimento_w);


      CALL Gerar_Gedi_Medic_atend(cd_estabelecimento_w, nr_prescricao_p, nr_seq_prescr_w, nr_sequencia_w, nm_usuario_p);
      exception when others then
        sqlerrm_w  := substr(sqlerrm,1,2000);

      end;

    end if;


  end loop;

  close C13;

  open C15;
  loop
  fetch C15 into
    ie_agrupador_w,
    nr_seq_prescr_w,
    qt_dose_w,
    qt_total_dispensar_w,
    cd_unidade_medida_w,
    cd_unid_med_dose_w,
    nr_ocorrencia_w,
    cd_material_w,
    ds_horarios_w,
    ds_horarios_padr_w,
    cd_intervalo_w,
    hr_prim_horario_w,
    ie_urgente_w,
    ie_se_necessario_w,
    ie_acm_w,
    ie_controlado_w,
    ie_padronizado_w,
    ie_regra_disp_w,
    nr_agrupamento_w,
    cd_protocolo_w,
    cd_local_estoque_w,
    cd_motivo_baixa_w,
    qt_dose_especial_w,
    hr_dose_especial_w,
    dt_suspensao_progr_w,
    dt_suspensao_ww,
    nm_usuario_susp_w;
  EXIT WHEN NOT FOUND; /* apply on C15 */

    -- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
    if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
      select  coalesce(max('N'),'S')
      into STRICT  ie_urgente_w
      from  prescr_mat_hor x
      where  x.nr_prescricao    = nr_prescricao_p
      and    x.nr_seq_material  = nr_seq_prescr_w
      and    Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S'
      and    coalesce(x.ie_dose_especial,'N')  = 'N'
      and    coalesce(x.dt_suspensao::text, '') = '' LIMIT 1;

    end if;


    dt_prescricao_ww  := dt_prescricao_w;
    qt_dia_adic_w  := 0;
    if (hr_dose_especial_w IS NOT NULL AND hr_dose_especial_w::text <> '') then
      ds_horarios_padr_w := hr_dose_especial_w || ' ' ||ds_horarios_padr_w;
    end if;


    if (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
      while  (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
        k  := position(' ' in ds_horarios_padr_w);

        if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
          ds_hora_w    := substr(ds_horarios_padr_w, 1, k-1);
          ds_hora_w    := replace(ds_hora_w, ' ','');
          ds_horarios_padr_w  := substr(ds_horarios_padr_w, k + 1, 2000);
        elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
          ds_hora_w     := replace(ds_horarios_padr_w,' ','');
          ds_horarios_padr_w  := '';

        end if;


        if (coalesce(hr_dose_especial_w::text, '') = '') and
          ((ie_urgente_w = 'N') or (cd_funcao_origem_w = 2314)) then
          if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w = 0) then
            qt_dia_adic_w  := 1;
          elsif (position('AA' in ds_hora_w) > 0)  then
            qt_dia_adic_w  := qt_dia_adic_w + 1;

          end if;

        end if;


        ds_hora_w  := replace(ds_hora_w,'A','');
        ds_hora_w  := replace(ds_hora_w,'A','');

        if (ie_urgente_w  = 'S') then
          dt_libe_w  := dt_liberacao_w;
          if (ie_momento_lote_w = 'F') and (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '') then
            select  max(dt_liberacao)
            into STRICT  dt_libe_w
            from  prescr_medica
            where  nr_prescricao  = nr_prescricao_p;

          elsif (ie_momento_lote_w = 'M') and (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> '') then
            dt_liberacao_w  := dt_liberacao_medico_w;

          end if;

          dt_prescricao_ww  := coalesce(dt_libe_w,dt_prescricao_ww);
        else
          dt_prescricao_ww  := coalesce(dt_inicio_prescr_w,dt_prescricao_w);

        end if;


        dt_horario_w  := PKG_DATE_UTILS.get_Time(dt_prescricao_ww + qt_dia_adic_w, replace(ds_hora_w,'A',''));

        select  nextval('prescr_mat_hor_seq')
        into STRICT  nr_sequencia_w
;


        --- Inicio MD70
        
        begin
          sql_w := 'call obter_horario_especial_md(:1, :2, :3, :4, :5, :6, :7, :8) into :ie_horario_especial_w';
          EXECUTE sql_w using in 1,
                        in ie_se_necessario_dil_w,
                        in ie_acm_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_w,
                        in qt_dose_especial_w,
                        in hr_dose_especial_w,
                        in ie_gerar_especial_w,
                        out ie_horario_especial_w;
        exception
          when others then
          ie_horario_especial_w := null;

        end;


        --- Fim MD70
        
        if (dt_horario_w < dt_prescricao_ww) and (coalesce(hr_dose_especial_w::text, '') = '') and (ie_urgente_w = 'N') then
          dt_horario_w  := dt_horario_w + 1;
        end if;


        hr_dose_especial_w := null;

        if (dt_suspensao_progr_w > dt_horario_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then

        --- Inicio MD71
        
          begin
          sql_w := 'call obter_classif_urgente_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16) into :ie_classif_urgente_w';
          EXECUTE sql_w using in 1,
                        in ie_classif_nao_padrao_w,
                        in ie_padronizado_dil_w,
                        in ie_padronizado_w,
                        in ie_classif_normal_acm_sn_w,
                        in ie_se_necessario_dil_w,
                        in ie_se_necessario_w,
                        in ie_acm_dil_w,
                        in ie_acm_w,
                        in dt_horario_w,
                        in dt_limite_agora_w,
                        in ie_urgente_w,
                        in ie_agora_impressao_w,
                        in ie_define_agora_w,
                        in qt_min_antes_atend_w,
                        in dt_limite_especial_w,
                        out ie_classif_urgente_w;
        exception
          when others then
          ie_classif_urgente_w := null;

        end;


        --- Fim MD71
    
          SELECT * FROM obter_dose_um_horario_pmh(cd_material_w, qt_dose_w, cd_unid_med_dose_w, qt_dose_hor_w, cd_unid_med_dose_hor_w) INTO STRICT qt_dose_hor_w, cd_unid_med_dose_hor_w;

          select  count(*)
          into STRICT  qt_jejum_w
          from  rep_jejum a,
            prescr_medica b
          where  dt_horario_w between dt_inicio and dt_fim -1/1440
          and  a.nr_prescricao    = b.nr_prescricao
          and  coalesce(a.ie_suspenso,'N')  <> 'S'
          and  coalesce(b.dt_suspensao::text, '') = ''
          and  1 = 2
          and  b.nr_atendimento  = nr_atendimento_w;


          if (qt_jejum_w = 0) or (ie_contem_jejum_nut_w = 'S') or (qt_dose_especial_w > 0) then

            insert into prescr_mat_hor(
              nr_sequencia,
              nr_seq_digito,
              nr_prescricao,
              nr_seq_material,
              ie_agrupador,
              dt_atualizacao,
              nm_usuario,
              dt_atualizacao_nrec,
              nm_usuario_nrec,
              ds_horario,
              dt_horario,
              qt_dose,
              qt_dispensar,
              cd_unidade_medida,
              cd_unidade_medida_dose,
              cd_material,
              nr_ocorrencia,
              qt_dispensar_hor,
              ie_urgente,
              ie_horario_especial,
              nr_seq_turno,
              ie_aprazado,
              ie_controlado,
              ie_padronizado,
              ie_classif_urgente,
              ie_dispensar_farm,
              nr_agrupamento,
              ie_adep,
              qt_horario,
              cd_unid_med_hor,
              cd_motivo_baixa,
              dt_suspensao,
              nm_usuario_susp,
              nr_atendimento
              )
            values (  nr_sequencia_w,
              calcula_digito('MODULO11',nr_sequencia_w),
              nr_prescricao_p,
              nr_seq_prescr_w,
              ie_agrupador_w,
              clock_timestamp(),
              nm_usuario_p,
              clock_timestamp(),
              nm_usuario_p,
              ds_hora_w,
              dt_horario_w,
              qt_dose_w,
              qt_total_dispensar_w,
              cd_unidade_medida_w,
              cd_unid_med_dose_w,
              cd_material_w,
              nr_ocorrencia_w,
              CASE WHEN cd_motivo_baixa_w=0 THEN  dividir(qt_total_dispensar_w,nr_ocorrencia_w)  ELSE 0 END ,
              ie_urgente_w,
              coalesce(ie_horario_especial_w,'N'),
              Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atendimento_w,ds_hora_w,cd_local_estoque_w),
              'N',
              ie_controlado_w,
              ie_padronizado_w,
              ie_classif_urgente_w,
              ie_regra_disp_w,
              nr_agrupamento_w,
              ie_rep_adep_w,
              qt_dose_hor_w,
              cd_unid_med_dose_hor_w,
              cd_motivo_baixa_w,
              dt_suspensao_ww,
              nm_usuario_susp_w,
              nr_atendimento_w);

          end if;

        end if;


        -- CPOE_ITEM_AGORA: Tratamento para que somente primeiro horario do item seja de classificacao "Urgente"
        if (cd_funcao_origem_w = 2314) and (ie_urgente_w = 'S') then
          ds_horarios_padr_w  := '';
        end if;

      end loop;

    end if;

  end loop;

  close C15;

  open C016;
  loop
  fetch C016 into
    nr_seq_classif_w,
    ie_classif_urgente_w,
    ie_controlado_w,
    ie_padronizado_w;
  EXIT WHEN NOT FOUND; /* apply on C016 */
    begin
    if (ie_controlado_w = 'A') and (ie_padronizado_w = 'A') then
      update  prescr_mat_hor
      set  nr_seq_classif    = nr_seq_classif_w
      where  nr_prescricao    = nr_prescricao_p
      and  ie_classif_urgente  = ie_classif_urgente_w;

    elsif (ie_controlado_w = 'A') and (ie_padronizado_w = 'S') then
      update  prescr_mat_hor
      set  nr_seq_classif    = nr_seq_classif_w
      where  nr_prescricao    = nr_prescricao_p
      and  ie_padronizado    = 'S'
      and  ie_classif_urgente  = ie_classif_urgente_w;

    elsif (ie_controlado_w = 'A') and (ie_padronizado_w = 'N') then
      update  prescr_mat_hor
      set  nr_seq_classif    = nr_seq_classif_w
      where  nr_prescricao    = nr_prescricao_p
      and  ie_padronizado    = 'N'
      and  ie_classif_urgente  = ie_classif_urgente_w;

    elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'A') then
      update  prescr_mat_hor
      set  nr_seq_classif    = nr_seq_classif_w
      where  nr_prescricao    = nr_prescricao_p
      and  ie_controlado    = 'N'
      and  ie_classif_urgente  = ie_classif_urgente_w;

    elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'N') then
      update  prescr_mat_hor
      set  nr_seq_classif    = nr_seq_classif_w
      where  nr_prescricao    = nr_prescricao_p
      and  ie_controlado    = 'N'
      and  ie_padronizado    = 'N'
      and  ie_classif_urgente  = ie_classif_urgente_w;

    elsif (ie_controlado_w = 'N') and (ie_padronizado_w = 'S') then
      update  prescr_mat_hor
      set  nr_seq_classif    = nr_seq_classif_w
      where  nr_prescricao    = nr_prescricao_p
      and  ie_controlado    = 'N'
      and  ie_padronizado    = 'S'
      and  ie_classif_urgente  = ie_classif_urgente_w;

    elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'A') then
      update  prescr_mat_hor
      set  nr_seq_classif    = nr_seq_classif_w
      where  nr_prescricao    = nr_prescricao_p
      and  ie_controlado    = 'S'
      and  ie_classif_urgente  = ie_classif_urgente_w;

    elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'N') then
      update  prescr_mat_hor
      set  nr_seq_classif    = nr_seq_classif_w
      where  nr_prescricao    = nr_prescricao_p
      and  ie_controlado    = 'S'
      and  ie_padronizado    = 'N'
      and  ie_classif_urgente  = ie_classif_urgente_w;

    elsif (ie_controlado_w = 'S') and (ie_padronizado_w = 'S') then
      update  prescr_mat_hor
      set  nr_seq_classif    = nr_seq_classif_w
      where  nr_prescricao    = nr_prescricao_p
      and  ie_controlado    = 'S'
      and  ie_padronizado    = 'S'
      and  ie_classif_urgente  = ie_classif_urgente_w;

    end if;

    end;

  end loop;

  close C016;

  open C21;
  loop
  fetch C21 into
    nr_seq_horario_w,
    cd_local_estoque_w,
    ds_horario_w;
  EXIT WHEN NOT FOUND; /* apply on C21 */
    if (ie_local_estoque_mat_hor_w  = 'S') then

      select  max(nr_seq_classif)
      into STRICT  nr_seq_classif_param_w
      from  parametros_farmacia
      where  cd_estabelecimento  = cd_estabelecimento_w;


      if (coalesce(nr_seq_classif_param_w,0) > 0)  then
        select  max(ie_dose_especial)
        into STRICT  ie_dose_especial_w
        from  prescr_mat_hor
        where  nr_sequencia = nr_seq_horario_w;


        if (coalesce(ie_dose_especial_w,'N') = 'S') then
          begin
          update  prescr_mat_hor
          set  nr_seq_classif  = nr_seq_classif_param_w
          where  nr_prescricao  = nr_prescricao_p
          and  nr_sequencia  = nr_seq_horario_w;

          end;

        end if;

      end if;


      CALL define_disp_prescr_mat_hor(nr_seq_horario_w, nr_prescricao_p, nr_seq_item_p, cd_perfil_p, nm_usuario_p);

      select  coalesce(max(cd_local_estoque),cd_local_estoque_w)
      into STRICT  cd_local_estoque_w
      from  prescr_mat_hor
      where  nr_sequencia  = nr_seq_horario_w;


      update  prescr_mat_hor
      set  nr_seq_turno  = coalesce(Obter_turno_horario_prescr(cd_estabelecimento_w, cd_setor_atendimento_w, ds_horario_w, cd_local_estoque_w),nr_seq_turno)
      where  nr_sequencia  = nr_seq_horario_w;

    end if;

  end loop;

  close C21;


  begin
    ajustar_disp_hor_farm_w  := coalesce(obter_valor_param_usuario(924, 179, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w),'N');
  exception when others then
    ajustar_disp_hor_farm_w := 'N';

  end;


  begin
    if (ajustar_disp_hor_farm_w <> 'N') then
      CALL calcular_dispensar_horario(nr_prescricao_p,0);
    end if;

  exception when others then
    ajustar_disp_hor_farm_w := 'N';

  end;


  if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;



  begin
    CALL adep_gerar_area_prep(nr_prescricao_p, nr_seq_item_p, nm_usuario_p);

    ie_info_rastre_prescr_w := obter_se_info_rastre_prescr( 'L', nm_usuario_p, cd_perfil_p, cd_estabelecimento_w);

        if (ie_info_rastre_prescr_w = 'S') then
      ds_alteracao_rastre_w := substr('Gerar log Rastreabilidade Alteracoes / Gerar_prescr_mat_hor = ' || 'NR_PRESCRICAO_P: ' || nr_prescricao_p || ' IE_DOSE_ESPECIAL_P: ' ||  ie_dose_especial_p || ' NR_SEQ_ITEM_P: ' || coalesce(nr_seq_item_p,0),1,1800);
      CALL Gerar_log_prescr_mat(nr_prescricao_p, nr_seq_item_p, null, null, null, ds_alteracao_rastre_w, nm_usuario_p, 'N');
    end if;



    if (ie_dose_especial_p <> 'E') then
      if (coalesce(nr_seq_item_p,0) = 0) then
        CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_p, 0, 0, 'N', nm_usuario_p, 'GPMH');
      else
        CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_p, nr_seq_item_p, 0, 'N', nm_usuario_p, 'GPMH');

      end if;

    end if;

  exception when others then
    sqlerrm_w  := substr(sqlerrm,1,2000);

  end;

  end;


  if (ie_gerar_proc_gedipa_job_w  = 'N') then
    open C25;
    loop
    fetch C25 into
      ie_cursor_w,
      nr_sequencia_w,
      nr_seq_horario_w;
    EXIT WHEN NOT FOUND; /* apply on C25 */
      begin
      if (ie_cursor_w  = 'M') then
        CALL Gedipa_Gerar_Proc_Instantaneo(nr_prescricao_p,nr_sequencia_w,null,nr_seq_horario_w);
      else
        CALL Gedipa_Gerar_Proc_Instantaneo(nr_prescricao_p,null,nr_sequencia_w,nr_seq_horario_w);

      end if;

      end;

    end loop;

    close C25;
  end if;

end if;


exception
  when others then
  sqlerrm_w := substr(sqlerrm,1,2000);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_mat_hor (nr_prescricao_p prescr_medica.nr_prescricao%type, nr_seq_item_p prescr_material.nr_sequencia%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type, ie_lib_parc_p text default null, ie_somente_agora_p text default 'N', nr_seq_regra_p bigint default null, ie_dose_especial_p text default 'N') FROM PUBLIC;

