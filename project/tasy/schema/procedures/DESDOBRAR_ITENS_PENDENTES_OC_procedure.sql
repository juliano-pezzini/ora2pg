-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desdobrar_itens_pendentes_oc ( nr_ordem_compra_p bigint, nm_usuario_p text, nr_seq_motivo_cancel_p bigint, ds_justificativa_p text, nr_ordem_compra_nova_p INOUT bigint) AS $body$
DECLARE

 
					 
cd_estabelecimento_w		bigint;
nr_ordem_compra_nova_w		bigint;
nr_item_oci_w			integer;
nr_sequencia_w			bigint;
dt_prevista_entrega_w		timestamp;
qt_prevista_entrega_w		double precision;
qt_real_entrega_w			double precision;
qt_pendente_w			double precision;
qt_existe_w			bigint;
ie_aprova_oc_w			varchar(1);
ds_observacao_w			varchar(255);
ds_motivo_w			varchar(255);

c01 CURSOR FOR 
SELECT	a.nr_item_oci 
from	ordem_compra_pendente_v a 
where	a.nr_ordem_compra = nr_ordem_compra_p;

c02 CURSOR FOR	 
SELECT	a.nr_sequencia, 
	a.dt_prevista_entrega, 
	a.qt_prevista_entrega, 
	a.qt_real_entrega, 
	a.qt_pendente 
from	ordem_compra_pendente_v a 
where	a.nr_ordem_compra = nr_ordem_compra_p 
and	a.nr_item_oci = nr_item_oci_w;


BEGIN 
 
select	cd_estabelecimento 
into STRICT	cd_estabelecimento_w 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_compra_p;
 
select	coalesce(obter_valor_param_usuario(917, 168, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S') 
into STRICT	ie_aprova_oc_w
;
 
select	nextval('ordem_compra_seq') 
into STRICT	nr_ordem_compra_nova_w
;
 
if (nr_seq_motivo_cancel_p > 0) then 
	select	ds_motivo 
	into STRICT	ds_motivo_w 
	from	motivo_cancel_sc_oc 
	where	nr_sequencia = nr_seq_motivo_cancel_p;
	 
	ds_observacao_w := wheb_mensagem_pck.get_texto(299477,'DS_RETORNO1='||ds_motivo_w||';DS_RETORNO2='||ds_justificativa_p);
		 
end if;
 
insert into ordem_compra( 
	nr_ordem_compra, 
	cd_estabelecimento, 
	cd_cgc_fornecedor, 
	cd_condicao_pagamento, 
	cd_comprador, 
	dt_ordem_compra, 
	dt_atualizacao, 
	nm_usuario, 
	cd_moeda, 
	ie_situacao, 
	dt_inclusao, 
	cd_pessoa_solicitante, 
	cd_cgc_transportador, 
	ie_frete, 
	vl_frete, 
	pr_multa_atraso, 
	pr_desconto, 
	pr_desc_pgto_antec, 
	pr_juros_negociado, 
	ds_pessoa_contato, 
	ds_observacao, 
	cd_local_entrega, 
	dt_entrega, 
	nr_prescricao, 
	dt_aprovacao, 
	dt_liberacao, 
	nm_usuario_lib, 
	ie_aviso_chegada, 
	nr_requisicao, 
	cd_pessoa_fisica, 
	nr_ordem_agrup, 
	ie_emite_obs, 
	ie_urgente, 
	nr_atendimento, 
	nm_usuario_imp, 
	ie_somente_pagto, 
	vl_despesa_acessoria, 
	cd_setor_atendimento, 
	nr_seq_subgrupo_compra, 
	pr_desc_financeiro, 
	dt_aceite, 
	nm_usuario_aceite, 
	nr_seq_forma_pagto, 
	nr_documento_externo, 
	vl_desconto, 
	dt_faturamento, 
	cd_convenio, 
	ie_tipo_ordem, 
	cd_estab_transf, 
	ie_forma_exportar, 
	nr_seq_ressup_fornec, 
	nr_cirurgia, 
	nr_seq_reg_lic_compra, 
	ie_liberacao_portal, 
	nr_seq_nf_repasse, 
	nr_seq_licitacao, 
	nr_documento_interno, 
	nr_processo_interno, 
	nr_seq_tipo_compra, 
	nr_seq_agenda_pac, 
	nr_seq_mod_compra, 
	nr_controle_edital, 
	ds_dados_importacao, 
	nr_seq_motivo_urgente, 
	cd_centro_custo, 
	ie_origem_imp, 
	dt_envio_integracao_opme, 
	dt_confirma_entrega, 
	nm_usuario_conf_entr, 
	cd_local_transf) 
SELECT	nr_ordem_compra_nova_w, 
	cd_estabelecimento, 
	cd_cgc_fornecedor, 
	cd_condicao_pagamento, 
	cd_comprador, 
	dt_ordem_compra, 
	clock_timestamp(), 
	nm_usuario_p, 
	cd_moeda, 
	ie_situacao, 
	clock_timestamp(), 
	cd_pessoa_solicitante, 
	cd_cgc_transportador, 
	ie_frete, 
	vl_frete, 
	pr_multa_atraso, 
	pr_desconto, 
	pr_desc_pgto_antec, 
	pr_juros_negociado, 
	ds_pessoa_contato, 
	CASE WHEN  coalesce(ds_observacao::text, '') = '' THEN  wheb_mensagem_pck.get_texto(299496,'DS_RETORNO='||nr_ordem_compra_p)  ELSE ds_observacao || chr(13) || chr(10) || wheb_mensagem_pck.get_texto(299496,'DS_RETORNO='||nr_ordem_compra_p) END , 
	cd_local_entrega, 
	dt_entrega, 
	nr_prescricao, 
	CASE WHEN ie_aprova_oc_w='S' THEN dt_aprovacao  ELSE null END , 
	CASE WHEN ie_aprova_oc_w='S' THEN dt_liberacao  ELSE null END , 
	CASE WHEN ie_aprova_oc_w='S' THEN nm_usuario_lib  ELSE null END , 
	ie_aviso_chegada, 
	nr_requisicao, 
	cd_pessoa_fisica, 
	nr_ordem_agrup, 
	ie_emite_obs, 
	ie_urgente, 
	nr_atendimento, 
	nm_usuario_imp, 
	ie_somente_pagto, 
	vl_despesa_acessoria, 
	cd_setor_atendimento, 
	nr_seq_subgrupo_compra, 
	pr_desc_financeiro, 
	dt_aceite, 
	nm_usuario_aceite, 
	nr_seq_forma_pagto, 
	nr_documento_externo, 
	vl_desconto, 
	dt_faturamento, 
	cd_convenio, 
	ie_tipo_ordem, 
	cd_estab_transf, 
	ie_forma_exportar, 
	nr_seq_ressup_fornec, 
	nr_cirurgia, 
	nr_seq_reg_lic_compra, 
	ie_liberacao_portal, 
	nr_seq_nf_repasse, 
	nr_seq_licitacao, 
	nr_documento_interno, 
	nr_processo_interno, 
	nr_seq_tipo_compra, 
	nr_seq_agenda_pac, 
	nr_seq_mod_compra, 
	nr_controle_edital, 
	ds_dados_importacao, 
	nr_seq_motivo_urgente, 
	cd_centro_custo, 
	ie_origem_imp, 
	dt_envio_integracao_opme, 
	dt_confirma_entrega, 
	nm_usuario_conf_entr, 
	cd_local_transf 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_compra_p;
 
open C01;
loop 
fetch C01 into	 
	nr_item_oci_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	select	coalesce(sum(qt_pendente),0) 
	into STRICT	qt_pendente_w 
	from	ordem_compra_pendente_v 
	where	nr_ordem_compra = nr_ordem_compra_p 
	and	nr_item_oci = nr_item_oci_w;
	 
	if (qt_pendente_w > 0) then 
	 
		insert into ordem_compra_item( 
			nr_ordem_compra, 
			nr_item_oci, 
			cd_material, 
			cd_unidade_medida_compra, 
			vl_unitario_material, 
			qt_material, 
			dt_atualizacao, 
			nm_usuario, 
			ie_situacao, 
			cd_pessoa_solicitante, 
			qt_material_entregue, 
			pr_descontos, 
			cd_local_estoque, 
			ds_material_direto, 
			ds_observacao, 
			nr_cot_compra, 
			nr_item_cot_compra, 
			ds_marca, 
			vl_item_liquido, 
			nr_seq_aprovacao, 
			dt_aprovacao, 
			cd_centro_custo, 
			cd_conta_contabil, 
			nr_solic_compra, 
			nr_item_solic_compra, 
			qt_conv_unid_fornec, 
			ie_geracao_solic, 
			nr_seq_proj_rec, 
			pr_desc_financ, 
			nr_seq_lic_item, 
			nr_seq_conta_financ, 
			qt_original, 
			dt_validade, 
			nr_seq_marca, 
			nr_seq_ordem_serv, 
			vl_ultima_compra, 
			vl_dif_ultima_compra, 
			pr_dif_ultima_compra, 
			nr_seq_unidade_adic, 
			nr_seq_criterio_rateio, 
			nr_serie_material, 
			vl_desconto, 
			nr_seq_lote_fornec, 
			nr_seq_proj_gpi, 
			nr_seq_etapa_gpi, 
			nr_seq_conta_gpi, 
			nr_contrato, 
			dt_inicio_garantia, 
			dt_fim_garantia, 
			nr_id_integracao, 
			nr_seq_reg_lic_item, 
			nr_seq_conta_bco, 
			nr_seq_prescr_item, 
			nr_empenho, 
			dt_empenho, 
			nr_ordem_agrup, 
			nr_seq_orc_item_gpi, 
			vl_unit_mat_original, 
			nr_atendimento, 
			qt_dias_garantia, 
			vl_total_item) 
		SELECT	nr_ordem_compra_nova_w, 
			nr_item_oci, 
			cd_material, 
			cd_unidade_medida_compra, 
			vl_unitario_material, 
			qt_pendente_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			ie_situacao, 
			cd_pessoa_solicitante, 
			0, 
			pr_descontos, 
			cd_local_estoque, 
			ds_material_direto, 
			ds_observacao, 
			nr_cot_compra, 
			nr_item_cot_compra, 
			ds_marca, 
			0, 
			CASE WHEN ie_aprova_oc_w='S' THEN nr_seq_aprovacao  ELSE null END , 
			CASE WHEN ie_aprova_oc_w='S' THEN dt_aprovacao  ELSE null END , 
			cd_centro_custo, 
			cd_conta_contabil, 
			nr_solic_compra, 
			nr_item_solic_compra, 
			qt_conv_unid_fornec, 
			ie_geracao_solic, 
			nr_seq_proj_rec, 
			pr_desc_financ, 
			nr_seq_lic_item, 
			nr_seq_conta_financ, 
			qt_pendente_w, 
			dt_validade, 
			nr_seq_marca, 
			nr_seq_ordem_serv, 
			0, 
			0, 
			0, 
			nr_seq_unidade_adic, 
			nr_seq_criterio_rateio, 
			nr_serie_material, 
			vl_desconto, 
			nr_seq_lote_fornec, 
			nr_seq_proj_gpi, 
			nr_seq_etapa_gpi, 
			nr_seq_conta_gpi,			 
			nr_contrato, 
			dt_inicio_garantia, 
			dt_fim_garantia, 
			nr_id_integracao, 
			nr_seq_reg_lic_item, 
			nr_seq_conta_bco, 
			nr_seq_prescr_item, 
			nr_empenho, 
			dt_empenho, 
			nr_ordem_agrup, 
			nr_seq_orc_item_gpi, 
			vl_unit_mat_original, 
			nr_atendimento, 
			qt_dias_garantia, 
			round((qt_pendente_w * vl_unitario_material)::numeric,4) 
		from	ordem_compra_item 
		where	nr_ordem_compra = nr_ordem_compra_p 
		and	nr_item_oci = nr_item_oci_w;
		 
		open C02;
		loop 
		fetch C02 into	 
			nr_sequencia_w, 
			dt_prevista_entrega_w, 
			qt_prevista_entrega_w, 
			qt_real_entrega_w, 
			qt_pendente_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
 
			/*Ajustes na ordem de compra original*/
 
			if (qt_real_entrega_w = 0) then 
				 
				update	ordem_compra_item_entrega 
				set	dt_cancelamento	= clock_timestamp()					 
				where	nr_sequencia = nr_sequencia_w;
				 
				if (nr_seq_motivo_cancel_p > 0) then 
					update	ordem_compra_item_entrega 
					set	ds_observacao	= substr(CASE WHEN ds_observacao = NULL THEN ds_observacao_w  ELSE ds_observacao || chr(13) || chr(10) || ds_observacao_w END ,1,255) 
					where	nr_sequencia = nr_sequencia_w;				
				end if;
				 
			else 
				update	ordem_compra_item_entrega 
				set	qt_prevista_entrega = qt_real_entrega 
				where	nr_sequencia = nr_sequencia_w;
				 
				insert into ordem_compra_item_entrega( 
					nr_sequencia, 
					nr_ordem_compra, 
					nr_item_oci, 
					dt_prevista_entrega, 
					qt_prevista_entrega, 
					dt_cancelamento, 
					dt_atualizacao, 
					nm_usuario, 
					dt_entrega_original, 
					ds_observacao) 
				values (	nextval('ordem_compra_item_entrega_seq'), 
					nr_ordem_compra_p, 
					nr_item_oci_w, 
					dt_prevista_entrega_w, 
					qt_pendente_w, 
					clock_timestamp(), 
					clock_timestamp(), 
					nm_usuario_p, 
					dt_prevista_entrega_w, 
					ds_observacao_w);
				 
			end if;
			/*Fim dos ajustes*/
 
			 
			insert into ordem_compra_item_entrega( 
				nr_sequencia, 
				nr_ordem_compra, 
				nr_item_oci, 
				dt_prevista_entrega, 
				qt_prevista_entrega, 
				dt_atualizacao, 
				nm_usuario,					 
				dt_entrega_original) 
			values (	nextval('ordem_compra_item_entrega_seq'), 
				nr_ordem_compra_nova_w, 
				nr_item_oci_w, 
				dt_prevista_entrega_w, 
				qt_pendente_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				dt_prevista_entrega_w);			
			end;
		end loop;
		close C02;	
	end if;
	end;
end loop;
close C01;
 
update	ordem_compra 
set	dt_baixa = clock_timestamp(), 
	ds_observacao = CASE WHEN ds_observacao = NULL THEN wheb_mensagem_pck.get_texto(299497,'DS_RETORNO='|| nr_ordem_compra_nova_w)  ELSE ds_observacao || chr(13) || chr(10) || wheb_mensagem_pck.get_texto(299497,'DS_RETORNO='|| nr_ordem_compra_nova_w) END  
where	nr_ordem_compra = nr_ordem_compra_p;
 
calcular_liquido_ordem_compra(nr_ordem_compra_nova_w, nm_usuario_p);
 
CALL inserir_historico_ordem_compra( 
	nr_ordem_compra_nova_w, 
	'S', 
	wheb_mensagem_pck.get_texto(299498,'DS_RETORNO='||nr_ordem_compra_p), 
	wheb_mensagem_pck.get_texto(299499,'DS_RETORNO='||nr_ordem_compra_p), 
	nm_usuario_p);
 
nr_ordem_compra_nova_p := nr_ordem_compra_nova_w;
 
select	count(*) 
into STRICT	qt_existe_w 
from	sup_parametro_integracao a 
where	a.ie_evento = 'OC' 
and	a.ie_forma = 'E' 
and	a.ie_situacao = 'A' 
and	exists (SELECT	1 
		from	sup_int_regra_oc x 
		where	x.nr_seq_integracao = a.nr_sequencia 
		and	ie_situacao = 'A');
 
if (qt_existe_w > 0) then 
	CALL envia_integracao_ordem_compra(nr_ordem_compra_nova_w,nm_usuario_p);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desdobrar_itens_pendentes_oc ( nr_ordem_compra_p bigint, nm_usuario_p text, nr_seq_motivo_cancel_p bigint, ds_justificativa_p text, nr_ordem_compra_nova_p INOUT bigint) FROM PUBLIC;

