-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desfazer_cotacao_contrato ( nr_cot_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE



qt_existe_w				bigint;
dt_geracao_ordem_compra_w		timestamp;
nr_contrato_w				bigint;
nr_item_cot_compra_w			integer;
dt_limite_entrega_w				timestamp;
qt_material_w				double precision;
ds_lista_contrato_w				varchar(2000);
ds_erro_w				varchar(2000);
ds_hist_solic_compra_w			solic_compra_hist.ds_historico%type;
ds_titulo_w				solic_compra_hist.ds_titulo%type;
nr_solic_compra_w			bigint;
nr_item_solic_compra_w			bigint;

c01 CURSOR FOR
SELECT	distinct
	nr_seq_contrato
from	cot_compra_forn_item
where	nr_cot_compra = nr_cot_compra_p
and	(nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '');

c02 CURSOR FOR
SELECT	distinct
	a.dt_limite_entrega,
	a.qt_material,
	a.nr_item_cot_compra
from	cot_compra b,
	cot_compra_item a
where	b.nr_cot_compra = a.nr_cot_compra
and	b.nr_cot_compra = nr_cot_compra_p
and	not exists (select	1
		from	cot_compra_item_entrega x
		where	x.nr_cot_compra = a.nr_cot_compra
		and	x.nr_item_cot_compra = a.nr_item_cot_compra);

c03 CURSOR FOR
SELECT	distinct nr_solic_compra
from	solic_compra_item_agrup_v
where	nr_cot_compra = nr_cot_compra_p;

c04 CURSOR FOR
SELECT	nr_item_solic_compra
from	solic_compra_item_agrup_v
where	nr_solic_compra = nr_solic_compra_w
and	nr_cot_compra	= nr_cot_compra_p;


BEGIN

open C01;
loop
fetch C01 into
	nr_contrato_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	count(*)
	into STRICT	qt_existe_w
	from	solic_compra_item
	where	nr_contrato = nr_contrato_w;

	if (qt_existe_w > 0) then
		/*Não é permitido desfazer essa cotação, porque o contrato #@NR_CONTRATO_P#@ já está vinculado com alguma solicitação de compras.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(186176,'NR_CONTRATO_P='||NR_CONTRATO_W);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	cot_compra_item
	where	nr_contrato = nr_contrato_w
	and	nr_cot_compra <> nr_cot_compra_p;

	if (qt_existe_w > 0) then
		/*Não é permitido desfazer essa cotação, porque o contrato #@NR_CONTRATO_P#@ já está vinculado com alguma outra cotação de compras.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(186177,'NR_CONTRATO_P='||NR_CONTRATO_W);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	ordem_compra_item
	where	nr_contrato = nr_contrato_w;

	if (qt_existe_w > 0) then
		/*Não é permitido desfazer essa cotação, porque o contrato #@NR_CONTRATO_P#@ já está vinculado com alguma ordem de compra.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(186175,'NR_CONTRATO_P='||NR_CONTRATO_W);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	nota_fiscal_item
	where	nr_contrato = nr_contrato_w;

	if (qt_existe_w > 0) then
		/*Não é permitido desfazer essa cotação, porque o contrato #@NR_CONTRATO_P#@ já está vinculado com alguma nota fiscal.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(186167,'NR_CONTRATO_P='||NR_CONTRATO_W);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	titulo_pagar
	where	nr_seq_contrato = nr_contrato_w;

	if (qt_existe_w > 0) then
		/*Não é permitido desfazer essa cotação, porque o contrato #@NR_CONTRATO_P#@ já está vinculado com algum título à pagar.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(186172,'NR_CONTRATO_P='||NR_CONTRATO_W);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	titulo_pagar_classif
	where	nr_contrato = nr_contrato_w;

	if (qt_existe_w > 0) then
		/*Não é permitido desfazer essa cotação, porque o contrato #@NR_CONTRATO_P#@ já está vinculado com algum título à pagar.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(186172,'NR_CONTRATO_P='||NR_CONTRATO_W);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	titulo_receber
	where	nr_seq_contrato = nr_contrato_w;

	if (qt_existe_w > 0) then
		/*Não é permitido desfazer essa cotação, porque o contrato #@NR_CONTRATO_P#@ já está vinculado com algum título à receber.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(186174,'NR_CONTRATO_P='||NR_CONTRATO_W);
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	titulo_receber_classif
	where	nr_seq_contrato = nr_contrato_w;

	if (qt_existe_w > 0) then
		/*Não é permitido desfazer essa cotação, porque o contrato #@NR_CONTRATO_P#@ já está vinculado com algum título à receber.*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(186174,'NR_CONTRATO_P='||NR_CONTRATO_W);
	end if;

	ds_lista_contrato_w := substr(ds_lista_contrato_w || nr_contrato_w || ', ',1,2000);

	end;
end loop;
close C01;

ds_lista_contrato_w := substr(ds_lista_contrato_w,1,length(ds_lista_contrato_w)-2);

select	dt_geracao_ordem_compra
into STRICT 	dt_geracao_ordem_compra_w
from	cot_compra
where	nr_cot_compra	 = nr_cot_compra_p;

if (dt_geracao_ordem_compra_w IS NOT NULL AND dt_geracao_ordem_compra_w::text <> '') then
	begin
	update	cot_compra
	set	dt_geracao_ordem_compra  = NULL,
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_cot_compra	= nr_cot_compra_p;

	update	cot_compra_forn_item
	set	nr_seq_contrato	 = NULL,
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where 	nr_cot_compra	= nr_cot_compra_p;

	begin
	delete FROM contrato a
	where exists (
		SELECT	1
		from	contrato_regra_nf b
		where	a.nr_sequencia = b.nr_seq_contrato
		and	b.nr_cot_compra = nr_cot_compra_p);
	exception
	when others then
		ds_erro_w := sqlerrm;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(186181,'DS_ERRO_P='||ds_erro_w);
	end;

	end;

	CALL gerar_historico_cotacao(nr_cot_compra_p,
				wheb_mensagem_pck.get_texto(299453),
				/*A cotação de compra foi desfeita pelo usuário #@NM_USUARIO#@ no dia #@DS_DATA#@, e excluiu os seguintes contratos: #@DS_LISTA#@.*/

				substr(wheb_mensagem_pck.get_texto(299454, 	'NM_USUARIO=' || nm_usuario_p ||
										';DS_DATA=' || to_char(clock_timestamp(),'dd/mm/yyyy') ||
										';DS_LISTA=' || ds_lista_contrato_w),1,2000), 'S', nm_usuario_p);
end if;

update	cot_compra_item
set	nr_seq_cot_item_forn	 = NULL,
	nr_cot_venc_sis		 = NULL,
	nr_item_cot_venc_sis	 = NULL,
	cd_cgc_fornecedor_venc_sis	 = NULL,
	cd_cgc_fornecedor_venc_alt	 = NULL,
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p
where	nr_cot_compra		= nr_cot_compra_p;

update	cot_compra_forn_item
set 	vl_preco_liquido		 = NULL,
	vl_total_liquido_item		 = NULL,
	vl_presente		 = NULL,
	nr_ordem_compra		 = NULL,
	nr_seq_contrato		 = NULL,
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p
where	nr_cot_compra		= nr_cot_compra_p;

OPEN C02;
LOOP
FETCH C02 INTO
	dt_limite_entrega_w,
	qt_material_w,
	nr_item_cot_compra_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	insert into cot_compra_item_entrega(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_cot_compra,
			nr_item_cot_compra,
			dt_entrega,
			qt_entrega,
			ds_observacao)
		values (nextval('cot_compra_item_entrega_seq'),
			clock_timestamp(),
			'Tasy',
			clock_timestamp(),
			'Tasy',
			nr_cot_compra_p,
			nr_item_cot_compra_w,
			dt_limite_entrega_w,
			qt_material_w,
			null);
	end;

END LOOP;
CLOSE C02;

open c03;
loop
fetch c03 into
	nr_solic_compra_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin

	update	solic_compra
	set	cd_motivo_baixa	 = NULL,
		dt_baixa	 = NULL
	where	nr_solic_compra	= nr_solic_compra_w;

	ds_titulo_w		:= substr(wheb_mensagem_pck.get_texto(336232),1,80);
	ds_hist_solic_compra_w	:= substr(wheb_mensagem_pck.get_texto(336313, 'NR_COT_COMPRA='||to_char(nr_cot_compra_p)),1,2000);

	insert into solic_compra_hist(
			nr_sequencia,
			ds_historico,
			ds_titulo,
			dt_atualizacao,
			dt_historico,
			nm_usuario)
		values (nextval('solic_compra_hist_seq'),
			ds_hist_solic_compra_w,
			ds_titulo_w,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p);


	open c04;
	loop
	fetch c04 into
		nr_item_solic_compra_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		update	solic_compra_item
		set	cd_motivo_baixa		 = NULL,
			dt_baixa		 = NULL
		where	nr_solic_compra		= nr_solic_compra_w
		and	nr_item_solic_compra	= nr_item_solic_compra_w;

		end;
	end loop;
	close c04;
	end;
end loop;
close c03;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desfazer_cotacao_contrato ( nr_cot_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

