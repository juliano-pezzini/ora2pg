-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE bft_insert_vital_sign ( ie_interface_p text, cd_pessoa_fisica_p text, dt_sinal_vital_p text, ds_lista_parametros_p text, ds_lista_parametros2_p text, nm_usuario_p text, cd_setor_atendimento_p text default null, cd_unidade_basica_p text default null, cd_unidade_compl_p text default null, ie_integracao_extra_p text default 'N', nr_seq_log_integracao_p bigint default null, nr_atendimento_p bigint default null, ie_codigo_pessoa_p text default null, ie_verifica_leito_monitorado_p text default null, ie_verifica_pront_ext text default null, cd_professional_p text default null, ds_locale_p text default 'en_US', ie_trend_upload_p text default 'N', IE_AUTOCHARTING_P text DEFAULT 'N') AS $body$
DECLARE

  cd_pessoa_fisica_w		    varchar(10) := cd_pessoa_fisica_p;
  cd_professional_w   	    varchar(10);
  ie_codigo_pessoa_w   	    varchar(10) := ie_codigo_pessoa_p;
  ie_exists_professional_w  smallint;
  leito_atual_monit_w       varchar(2) := 'N';
  nr_atendimento_leito_w    varchar(10);
  cd_pessoa_leito_w         varchar(10);
  nr_atendimento_w          atendimento_paciente.nr_atendimento%type;
  NR_SEQ_AUTOCHART_W        AUTO_CHART_PARAM.NR_SEQUENCIA%TYPE;
  DT_SINAL_VITAL_W          timestamp;


BEGIN
  IF (coalesce(IE_TREND_UPLOAD_P, 'N') = 'N' AND
     coalesce(IE_AUTOCHARTING_P, 'N') = 'S') THEN
    SELECT nextval('auto_chart_param_seq') INTO STRICT NR_SEQ_AUTOCHART_W;

    BEGIN
      DT_SINAL_VITAL_W := TO_DATE(DT_SINAL_VITAL_P, 'yyyymmddhh24miss');
    EXCEPTION
      WHEN OTHERS THEN
        DT_SINAL_VITAL_W := clock_timestamp();
    END;

    INSERT INTO AUTO_CHART_PARAM(NR_SEQUENCIA,
       DT_ATUALIZACAO,
       NM_USUARIO,
       DT_ATUALIZACAO_NREC,
       NM_USUARIO_NREC,
       IE_INTERFACE,
       CD_PESSOA_FISICA,
       DT_SINAL_VITAL,
       DS_LISTA_PARAMETROS,
       DS_LISTA_PARAMETROS2,
       NM_USUARIO_PROC,
       CD_SETOR_ATENDIMENTO,
       CD_UNIDADE_BASICA,
       CD_UNIDADE_COMPL,
       IE_INTEGRACAO_EXTRA,
       NR_ATENDIMENTO,
       IE_CODIGO_PESSOA,
       IE_VERIFICA_LEITO_MONIT,
       IE_VERIFICA_PRONT_EXT,
       CD_PROFESSIONAL,
       DS_LOCALE)
    VALUES (NR_SEQ_AUTOCHART_W,
       clock_timestamp(),
       coalesce(WHEB_USUARIO_PCK.GET_NM_USUARIO, NM_USUARIO_P),
       clock_timestamp(),
       coalesce(WHEB_USUARIO_PCK.GET_NM_USUARIO, NM_USUARIO_P),
       IE_INTERFACE_P,
       CD_PESSOA_FISICA_P,
       DT_SINAL_VITAL_W,
       DS_LISTA_PARAMETROS_P,
       DS_LISTA_PARAMETROS2_P,
       NM_USUARIO_P,
       CD_SETOR_ATENDIMENTO_P,
       CD_UNIDADE_BASICA_P,
       CD_UNIDADE_COMPL_P,
       IE_INTEGRACAO_EXTRA_P,
       --NR_SEQ_LOG_INTEGRACAO_P,
       NR_ATENDIMENTO_P,
       IE_CODIGO_PESSOA_P,
       IE_VERIFICA_LEITO_MONITORADO_P,
       IE_VERIFICA_PRONT_EXT,
       CD_PROFESSIONAL_P,
       DS_LOCALE_P);

  ELSE
    if (cd_professional_p IS NOT NULL AND cd_professional_p::text <> '') and (ie_interface_p		= 'WH') then
      begin

      select	max(cd_pessoa_fisica)
      into STRICT    cd_professional_w
      from	pessoa_fisica b
      where	ltrim(b.cd_funcionario,'0') = cd_professional_p;
      exception
        when others then
        cd_professional_w		:= null;
      end;

    end if;

    if (ie_codigo_pessoa_w	= 'MR') then --Medical Record / Prontuario

        --INICIO validacao do parametro MR
        if (ie_verifica_pront_ext = 'S') then

         select	coalesce(max(cd_pessoa_fisica),cd_pessoa_fisica_p)
         into STRICT	cd_pessoa_fisica_w
         from	pessoa_fisica
         where	nr_pront_ext = cd_pessoa_fisica_p;

        else

         select	coalesce(max(cd_pessoa_fisica),cd_pessoa_fisica_p)
         into STRICT	cd_pessoa_fisica_w
         from	pessoa_fisica
         where	nr_prontuario = cd_pessoa_fisica_p;

         end if;
        --FIM validacao do parametro MR
    elsif (ie_codigo_pessoa_w = 'VN') then --Visit Number/ Atendimento
      select	coalesce(max(cd_pessoa_fisica),cd_pessoa_fisica_p)
      into STRICT 	cd_pessoa_fisica_w
      from 	atendimento_paciente
      where 	nr_atendimento = cd_pessoa_fisica_p;

      nr_atendimento_w := cd_pessoa_fisica_p;

    elsif (ie_codigo_pessoa_w = 'MRB') then --Medical Record and Patient Location / Prontuario e Leito de Integracao

        --INICIO validacao do parametro MR
        if (ie_verifica_pront_ext = 'S') then

         select	coalesce(max(cd_pessoa_fisica),cd_pessoa_fisica_p)
         into STRICT	cd_pessoa_fisica_w
         from	pessoa_fisica
         where	nr_pront_ext = cd_pessoa_fisica_p;

        else

         select	coalesce(max(cd_pessoa_fisica),cd_pessoa_fisica_p)
         into STRICT	cd_pessoa_fisica_w
         from	pessoa_fisica
         where	nr_prontuario = cd_pessoa_fisica_p;

         end if;
        --FIM validacao do parametro MR

        --INICIO validacao do parametro Patient Location
        if (cd_unidade_compl_p IS NOT NULL AND cd_unidade_compl_p::text <> '') then

            select coalesce(max(a.nr_atendimento),null)
            into STRICT nr_atendimento_leito_w
            from atend_paciente_unidade a,
                 unidade_atendimento b
            where a.cd_unidade_basica   = b.cd_unidade_basica
            and  a.cd_unidade_compl   = b.cd_unidade_compl
            and a.cd_setor_atendimento = b.cd_setor_atendimento
            and b.nm_leito_integracao = cd_unidade_compl_p
            and coalesce(a.dt_saida_unidade::text, '') = '';

            if (nr_atendimento_leito_w IS NOT NULL AND nr_atendimento_leito_w::text <> '') then

                    select coalesce(max(cd_pessoa_fisica),null)
                    into STRICT cd_pessoa_leito_w
                    from atendimento_paciente
                    where coalesce(dt_alta::text, '') = ''
                    and nr_atendimento = nr_atendimento_leito_w;

            end if;
        end if;

        if (cd_pessoa_fisica_w <> cd_pessoa_leito_w) then
            --INICIO Envio de notificao caso houver divergencia entre paciente e leito informado.
            CALL INT_NOTIFICATION_RECORD('SV', 'PLD', expressao_pck.obter_desc_expressao(1042864, ds_locale_p) --1042864 - Paciente e leito nao vinculados.
                                           ||' '||expressao_pck.obter_desc_expressao(1042858, ds_locale_p)||' '||coalesce(cd_pessoa_fisica_p, 'N/D') --1042858 - Prontuario recebido:
                                           ||' '||expressao_pck.obter_desc_expressao(1042860, ds_locale_p)||' '||coalesce(cd_unidade_compl_p, 'N/D')); --1042860 - Leito recebido:
            --FIM Envio de notificao caso houver divergencia entre paciente e leito informado.

            --INICIO Invalidar Variaveis para nao integrar
             nr_atendimento_w := null;
             cd_pessoa_fisica_w := null;
            --FIM Invalidar Variaveis para nao integrar
        end if;
        --FIM validacao do parametro Patient Location
    elsif (ie_codigo_pessoa_w = 'BED') then --Patient Location / Leito de Integracao

        --INICIO validacao do parametro Patient Location
        if (cd_unidade_compl_p IS NOT NULL AND cd_unidade_compl_p::text <> '') then

            select coalesce(max(a.nr_atendimento),null)
            into STRICT nr_atendimento_w
            from atend_paciente_unidade a,
                 unidade_atendimento b
            where a.cd_unidade_basica   = b.cd_unidade_basica
            and  a.cd_unidade_compl   = b.cd_unidade_compl
            and b.nm_leito_integracao = cd_unidade_compl_p
            and coalesce(a.dt_saida_unidade::text, '') = '';

            if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

                select coalesce(max(cd_pessoa_fisica),null)
                into STRICT cd_pessoa_fisica_w
                from atendimento_paciente
                where coalesce(dt_alta::text, '') = ''
                and nr_atendimento = nr_atendimento_w;

            end if;

        end if;
        --FIM validacao do parametro Patient Location

        --INICIO Envio de notificacao caso nao tenha sido encontrado atendimento para no leito informado;
        if (coalesce(nr_atendimento_w::text, '') = '' ) then

           --Leito Vazio- NAO deve integrar- ;
           CALL INT_NOTIFICATION_RECORD('SV','LVZ', expressao_pck.obter_desc_expressao(1042854, ds_locale_p)||' - ' --1042854 - Leito vazio ou nao encontrado:
                                             ||expressao_pck.obter_desc_expressao(1042860, ds_locale_p)||' '||coalesce(cd_unidade_compl_p, 'N/D')); --1042860 - Leito recebido:
        end if;
        --FIM Envio de notificacao caso nao tenha sido encontrado atendimento para no leito informado;
    end if;

    --INICIO Verificarse encontra em um leito monitorado e se paciente null.
    if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then

      select	coalesce(obter_pf_leito_atual_monit(cd_pessoa_fisica_w),'N')
      into STRICT	leito_atual_monit_w
;
    --INICIO Verificar se o paciente encontrado esta em um leito monitorado.
        if (leito_atual_monit_w = 'N' and ie_verifica_leito_monitorado_p = 'S') then

        --Leito Nao Monitorado- NAO deve integrar- ;
          CALL INT_NOTIFICATION_RECORD('SV','LVZ', expressao_pck.obter_desc_expressao(1042856, ds_locale_p)||' - ' --1042856 - Leito nao monitorado.
                                         ||' '||expressao_pck.obter_desc_expressao(1042858, ds_locale_p)||' '||coalesce(cd_pessoa_fisica_p, 'N/D') --1042858 - Prontuario recebido:
                                         ||' '||expressao_pck.obter_desc_expressao(1042860, ds_locale_p)||' '||coalesce(cd_unidade_compl_p, 'N/D')); --1042860 - Leito recebido:
        end if;
    --FIM Verificar se o paciente encontrado esta em um leito monitorado.
    else
         -- Pessoa Fisica Nao Encontrada - NAO deve integrar -;
          CALL INT_NOTIFICATION_RECORD('SV','PNE',  expressao_pck.obter_desc_expressao(935708, ds_locale_p)||' - ' -- Paciente nao encontrado:
                                        ||' '||expressao_pck.obter_desc_expressao(1042858, ds_locale_p)||' '||coalesce(cd_unidade_compl_p, 'N/D')); --1042858 - Prontuario recebido:
    end if;
    --FIM Verificar se paciente e null e se encontra em um leito monitorado.
    if (ie_interface_p	= 'PH') then --Philips
      CALL gerar_sinal_vital_philips(	cd_pessoa_fisica_w,
              dt_sinal_vital_p,
              ds_lista_parametros_p,
              ds_lista_parametros2_p,
              nm_usuario_p,
              cd_setor_atendimento_p,
              cd_unidade_basica_p,
              cd_unidade_compl_p,
              ie_integracao_extra_p,
              nr_seq_log_integracao_p,
              nr_atendimento_w);
    elsif (ie_interface_p	= 'GE') then --GE
      CALL gerar_sinal_vital_ge(		cd_pessoa_fisica_w,
              dt_sinal_vital_p,
              ds_lista_parametros_p,
              ds_lista_parametros2_p,
              nm_usuario_p,
              cd_setor_atendimento_p ,
              cd_unidade_compl_p,
              cd_unidade_basica_p,
              nr_atendimento_w);
    elsif (ie_interface_p	= 'WH') then --welch allyn
      CALL GERAR_SINAL_VITAL_WELCH(	cd_pessoa_fisica_w,
              dt_sinal_vital_p,
              ds_lista_parametros_p,
              ds_lista_parametros2_p,
              nm_usuario_p,
              cd_professional_w,
              nr_atendimento_w);
    elsif (ie_interface_p	= 'DX') then --Dixtal
      CALL gerar_sinal_vital_dixtal(	cd_pessoa_fisica_w,
              dt_sinal_vital_p,
              ds_lista_parametros_p,
              nm_usuario_p,
              cd_setor_atendimento_p,
              cd_unidade_basica_p,
              cd_unidade_compl_p);
    elsif (ie_interface_p	= 'DR') then --Draeger
      CALL gerar_sinal_vital_drager(	cd_pessoa_fisica_w,
              dt_sinal_vital_p,
              ds_lista_parametros_p||ds_lista_parametros2_p,
              nm_usuario_p);
    elsif (ie_interface_p	= 'FK') then --Fukuda
      CALL gerar_sinal_vital_fukuda(	cd_pessoa_fisica_w,
              dt_sinal_vital_p,
              ds_lista_parametros_p,
              ds_lista_parametros2_p,
              nm_usuario_p,
              cd_setor_atendimento_p ,
              cd_unidade_compl_p,
              nr_atendimento_w);
    elsif (ie_interface_p	= 'IHE') then --IHE
      CALL gerar_sinal_vital_ihe(		cd_pessoa_fisica_w,
              dt_sinal_vital_p,
              ds_lista_parametros_p,
              ds_lista_parametros2_p,
              nm_usuario_p,
              ie_integracao_extra_p);
    elsif (ie_interface_p	= 'ALFA') then --Alfamed
      CALL gerar_sinal_vital_alfamed(	cd_pessoa_fisica_w,
              dt_sinal_vital_p,
              ds_lista_parametros_p||ds_lista_parametros2_p,
              nm_usuario_p);
	elsif (ie_interface_p = 'Glucometer') then
		CALL gera_glicosimetro_hl7( cd_pessoa_fisica_w,
                                    dt_sinal_vital_p,
                                    ds_lista_parametros_p,
                                    ds_lista_parametros2_p,
									nm_usuario_p,
									ie_trend_upload_p,
									nr_atendimento_w);
    else	--Generic Interface based on the Core table settings
      CALL gerar_sinal_vital_hl7(		cd_pessoa_fisica_w,
              dt_sinal_vital_p,
              ds_lista_parametros_p,
              ds_lista_parametros2_p,
              nm_usuario_p,
              ie_trend_upload_p);
    end if;
END IF;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bft_insert_vital_sign ( ie_interface_p text, cd_pessoa_fisica_p text, dt_sinal_vital_p text, ds_lista_parametros_p text, ds_lista_parametros2_p text, nm_usuario_p text, cd_setor_atendimento_p text default null, cd_unidade_basica_p text default null, cd_unidade_compl_p text default null, ie_integracao_extra_p text default 'N', nr_seq_log_integracao_p bigint default null, nr_atendimento_p bigint default null, ie_codigo_pessoa_p text default null, ie_verifica_leito_monitorado_p text default null, ie_verifica_pront_ext text default null, cd_professional_p text default null, ds_locale_p text default 'en_US', ie_trend_upload_p text default 'N', IE_AUTOCHARTING_P text DEFAULT 'N') FROM PUBLIC;

