-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_bonific_restricao ( nr_seq_bonificacao_p bigint, nr_seq_segurado_p bigint, nr_seq_mensalidade_seg_p bigint, dt_mes_referencia_p timestamp, nm_usuario_p text, ie_restricao_p INOUT text, ds_obs_p INOUT text) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
qt_cobertura_w			bigint;
nr_seq_cobertura_w		bigint;
dt_inicio_w			timestamp;
dt_contratacao_w		timestamp;
dt_atual_w			timestamp;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
qt_cobertura_ww			bigint;
qt_dias_inadimplencia_w		integer;
qt_meses_restricao_w		integer;
nr_seq_tipo_restricao_w		bigint;
dt_vencimento_w			timestamp;
qt_vencida_w			bigint;
nr_seq_pagador_w		bigint;
qt_valor_producao_w		double precision;
qt_periodo_producao_w		integer;
ie_cooperado_w			varchar(1);
cd_pessoa_fisica_w		varchar(10);
vl_producao_medico_w		double precision;
ie_afastamento_w		varchar(2);
nr_seq_cooperado_w		bigint;
qt_afastamento_w		bigint;
pr_resultado_w			double precision;
qt_meses_resultado_w		integer;
ie_tipo_contrato_w		varchar(2);
nr_seq_contrato_w		bigint;
pr_resultado_contrato_w		double precision;
dt_inicial_resultado_w		timestamp;
dt_final_resultado_w		timestamp;
nr_seq_grupo_relacionamento_w	bigint;
dt_mens_vencida_w		timestamp;
ie_tipo_data_w			varchar(10);
ie_situacao_trabalhista_w	varchar(10);
ie_situacao_trabalhista_seg_w	varchar(10);

C01 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		c.qt_dias_inadimplencia,
		c.qt_meses_restricao,
		c.nr_seq_tipo_restricao,
		c.qt_valor_producao,
		c.qt_periodo_producao,
		c.ie_afastamento,
		coalesce(c.pr_resultado,0),
		coalesce(c.qt_meses_resultado,0),
		c.ie_tipo_contrato,
		c.ie_situacao_trabalhista,
		coalesce(c.ie_tipo_data,'P')
	from	pls_bonificacao_v a,
		pls_bonificacao b,
		pls_bonificacao_restricao c
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_bonificacao
	and	a.nr_seq_bonificacao	= nr_seq_bonificacao_p
	and	a.nr_seq_segurado	= nr_seq_segurado_p;

C02 CURSOR FOR
	SELECT	c.cd_procedimento,
		c.ie_origem_proced
	from	pls_conta_proc c,
		pls_conta b,
		pls_protocolo_conta a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_seq_segurado	= nr_seq_segurado_w
	and	a.ie_situacao in ('D','T')
	and	a.dt_mes_competencia	between dt_inicial_w and dt_final_w
	and	ie_tipo_data_w		= 'P'
	
union all

	SELECT	c.cd_procedimento,
		c.ie_origem_proced
	from	pls_conta_proc c,
		pls_conta b,
		pls_mensalidade_segurado d,
		pls_conta_coparticipacao a
	where	b.nr_sequencia			= c.nr_seq_conta
	and	a.nr_seq_conta_proc		= c.nr_sequencia
	and	a.nr_seq_mensalidade_seg	= d.nr_sequencia
	and	b.nr_seq_segurado		= nr_seq_segurado_w
	and	d.dt_mesano_referencia	between dt_inicial_w and dt_final_w
	and	ie_tipo_data_w		= 'CO';

C03 CURSOR FOR
	SELECT	count(*)
	from	pls_bonific_restr_regra a
	where	a.nr_seq_tipo_restricao	= nr_seq_tipo_restricao_w
	and	coalesce(a.cd_procedimento, cd_procedimento_w)	= cd_procedimento_w
	and	coalesce(a.ie_origem_proced, ie_origem_proced_w) 	= ie_origem_proced_w
	and	coalesce(a.cd_grupo_proc, cd_grupo_proc_w)		= cd_grupo_proc_w
	and	coalesce(a.cd_especialidade, cd_especialidade_w)	= cd_especialidade_w
	and	coalesce(a.cd_area_procedimento, cd_area_procedimento_w) 	= cd_area_procedimento_w
	and	coalesce(a.ie_liberado,'N')	= 'S'
	order by
		a.cd_area_procedimento,
		a.cd_especialidade,
		a.cd_grupo_proc,
		a.cd_procedimento,
		CASE WHEN a.ie_liberado='S' THEN  0  ELSE 1 END;


BEGIN
ie_restricao_p	:= 'S';

select	max(nr_seq_pagador),
	max(cd_pessoa_fisica),
	max(nr_seq_contrato),
	max(ie_situacao_trabalhista)
into STRICT	nr_seq_pagador_w,
	cd_pessoa_fisica_w,
	nr_seq_contrato_w,
	ie_situacao_trabalhista_seg_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;

open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	qt_dias_inadimplencia_w,
	qt_meses_restricao_w,
	nr_seq_tipo_restricao_w,
	qt_valor_producao_w,
	qt_periodo_producao_w,
	ie_afastamento_w,
	pr_resultado_w,
	qt_meses_resultado_w,
	ie_tipo_contrato_w,
	ie_situacao_trabalhista_w,
	ie_tipo_data_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (coalesce(qt_dias_inadimplencia_w,0) <> 0) then
		select	count(*)
		into STRICT	qt_vencida_w
		from	titulo_receber		a,
			pls_mensalidade		b
		where	a.nr_seq_mensalidade	= b.nr_sequencia
		and	b.nr_seq_pagador	= nr_seq_pagador_w
		and	trunc(a.dt_pagamento_previsto,'dd') <= trunc(clock_timestamp()-qt_dias_inadimplencia_w,'dd')
		and	a.ie_situacao = 1;

		if (qt_vencida_w > 0) then
			select	max(b.dt_referencia)
			into STRICT	dt_mens_vencida_w
			from	titulo_receber		a,
				pls_mensalidade		b
			where	a.nr_seq_mensalidade	= b.nr_sequencia
			and	b.nr_seq_pagador	= nr_seq_pagador_w
			and	trunc(a.dt_pagamento_previsto,'dd') <= trunc(clock_timestamp()-qt_dias_inadimplencia_w,'dd')
			and	a.ie_situacao = 1;

			ie_restricao_p	:= 'N';
			ds_obs_p	:= 'Bonificação não gerada pois o pagador está com mensalidade pendente para o mês ' || to_char(dt_mens_vencida_w,'dd/mm/yyyy')|| '!';
		end if;
	end if;

	if (ie_situacao_trabalhista_w = ie_situacao_trabalhista_seg_w) and (ie_situacao_trabalhista_w IS NOT NULL AND ie_situacao_trabalhista_w::text <> '') and (ie_situacao_trabalhista_seg_w IS NOT NULL AND ie_situacao_trabalhista_seg_w::text <> '') then
		ie_restricao_p	:= 'N';
		ds_obs_p	:= 'Bonificação não gerada para o beneficiário '||obter_valor_dominio(3840,ie_situacao_trabalhista_seg_w) ||'!';
	end if;

	if (coalesce(qt_meses_restricao_w,0) <> 0) then /* restrição por data */
		select	trunc(add_months(dt_mes_referencia_p, -qt_meses_restricao_w),'mm'),
			last_day(add_months(dt_mes_referencia_p, -1))
		into STRICT	dt_inicial_w,
			dt_final_w
		;

		open C02;
		loop
		fetch C02 into
			cd_procedimento_w,
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
				select	cd_grupo_proc,
					cd_especialidade,
					cd_area_procedimento
				into STRICT	cd_grupo_proc_w,
					cd_especialidade_w,
					cd_area_procedimento_w
				from	estrutura_procedimento_v
				where	cd_procedimento		= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;

				open C03;
				loop
				fetch C03 into
					qt_cobertura_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					ie_restricao_p	:= 'N';
					ds_obs_p	:= 'Bonificação não gerada pois o beneficiário utilizou procedimentos restritos à essa bonificação.';
					end;
				end loop;
				close C03;
			end if;
			end;
		end loop;
		close C02;
	end if;

	/* Verificar se o beneficiário é cooperado */

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_cooperado_w
	from	pls_cooperado	a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;

	if (ie_cooperado_w = 'S') then
		if (ie_afastamento_w = 'S') then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_cooperado_w
			from	pls_cooperado	a
			where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;

			select	count(*)
			into STRICT	qt_afastamento_w
			from	pls_cooperado_ausencia
			where	nr_seq_cooperado	= nr_seq_cooperado_w
			and	coalesce(ie_atestado,'N')	= 'S'
			and	dt_mes_referencia_p	between dt_inicio and add_months(coalesce(dt_fim,dt_mes_referencia_p),qt_periodo_producao_w);
		end if;

		select	sum(vl_liberado)
		into STRICT	vl_producao_medico_w
		from	pls_conta_medica_resumo
		where	cd_pessoa_fisica = cd_pessoa_fisica_w
		and	trunc(dt_competencia,'month') > trunc(add_months(clock_timestamp(),-qt_periodo_producao_w),'month')
		and	((ie_situacao != 'I') or (coalesce(ie_situacao::text, '') = ''));

		if	((ie_afastamento_w = 'N') or (ie_afastamento_w = 'S' AND qt_afastamento_w = 0)) then
			if (coalesce(vl_producao_medico_w,0) < qt_valor_producao_w) then
				ie_restricao_p	:= 'N';
				ds_obs_p	:= 'Bonificação não gerada pois o beneficiário cooperado não atingiu a média de produção de R$'||qt_valor_producao_w||'. Valor alcançado pelo cooperado nos últimos '||qt_periodo_producao_w||' meses foi R$'||coalesce(vl_producao_medico_w,0)||'.';
			end if;
		end if;
	end if;

	if (pr_resultado_w <> 0) then
		qt_meses_resultado_w	:= qt_meses_resultado_w * -1;

		select	trunc(add_months(dt_mes_referencia_p,qt_meses_resultado_w),'month'),
			last_day(add_months(dt_mes_referencia_p,-1))
		into STRICT	dt_inicial_resultado_w,
			dt_final_resultado_w
		;

		if (ie_tipo_contrato_w = 'C') then
			select	avg(pr_resultado)
			into STRICT	pr_resultado_contrato_w
			from (SELECT	sum(dividir(coalesce(pls_obter_valor_resultado(nr_sequencia,8),0),coalesce(CASE WHEN ie_tipo_valor=1 THEN vl_resultado END ,0))*100) pr_resultado
				from	pls_resultado
				where	nr_seq_contrato	= nr_seq_contrato_w
				and	trunc(dt_mes_referencia,'month') between trunc(to_date(dt_inicial_resultado_w),'month') and trunc(to_date(dt_final_resultado_w),'month')
				group by	dt_mes_referencia) alias12;

			if (coalesce(pr_resultado_contrato_w,0) < pr_resultado_w) then
				ie_restricao_p	:= 'N';
				ds_obs_p	:= 'Bonificação não gerada pois o resultado do contrato ('||coalesce(pr_resultado_contrato_w,0)||'%) é inferior ao mínimo exigido para a bonificação ('||pr_resultado_w||'%).';
			end if;
		elsif (ie_tipo_contrato_w = 'G') then
			select	avg(pr_resultado)
			into STRICT	pr_resultado_contrato_w
			from	(SELECT	sum(dividir(coalesce(pls_obter_valor_resultado(a.nr_sequencia,8),0),coalesce(CASE WHEN a.ie_tipo_valor=1 THEN a.vl_resultado END ,0))*100) pr_resultado
				from	pls_resultado	a,
					pls_contrato	b
				where	a.nr_seq_contrato	= b.nr_sequencia
				and	((b.nr_sequencia = nr_seq_contrato_w) or (b.nr_contrato_principal = nr_seq_contrato_w))
				and	trunc(a.dt_mes_referencia,'month') between trunc(to_date(dt_inicial_resultado_w),'month') and trunc(to_date(dt_final_resultado_w),'month')
				group by	a.dt_mes_referencia) alias15;

			if (coalesce(pr_resultado_contrato_w,0) < pr_resultado_w) then
				ie_restricao_p	:= 'N';
				ds_obs_p	:= 'Bonificação não gerada pois o resultado do grupo de contratos ('||coalesce(pr_resultado_contrato_w,0)||'%) é inferior ao mínimo exigido para a bonificação ('||pr_resultado_w||'%).';
			end if;
		elsif (ie_tipo_contrato_w = 'R') then
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_grupo_relacionamento_w
			from	pls_contrato_grupo	a,
				pls_grupo_contrato	b
			where	a.nr_seq_grupo		= b.nr_sequencia
			and	b.ie_tipo_relacionamento = '1'
			and	a.nr_seq_contrato	= nr_seq_contrato_w;

			select	avg(pr_resultado)
			into STRICT	pr_resultado_contrato_w
			from (SELECT	avg(dividir(coalesce(pls_obter_valor_resultado(a.nr_sequencia,8),0),coalesce(CASE WHEN a.ie_tipo_valor=1 THEN a.vl_resultado END ,0))*100) pr_resultado
				from	pls_resultado		a,
					pls_contrato		b,
					pls_contrato_grupo	c
				where	a.nr_seq_contrato	= b.nr_sequencia
				and	c.nr_seq_contrato	= b.nr_sequencia
				and	c.nr_seq_grupo		= nr_seq_grupo_relacionamento_w
				and	trunc(a.dt_mes_referencia,'month') between trunc(to_date(dt_inicial_resultado_w),'month') and trunc(to_date(dt_final_resultado_w),'month')
				group by	a.dt_mes_referencia) alias11;

			if (coalesce(pr_resultado_contrato_w,0) < pr_resultado_w) then
				ie_restricao_p	:= 'N';
				ds_obs_p	:= 'Bonificação não gerada pois o resultado do grupo de relacionamento de contratos ('||coalesce(pr_resultado_contrato_w,0)||'%) é inferior ao mínimo exigido para a bonificação ('||pr_resultado_w||'%).';
			end if;
		end if;
	end if;
	end;
end loop;
close C01;

/* Não pode dar commit
commit; */
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_bonific_restricao ( nr_seq_bonificacao_p bigint, nr_seq_segurado_p bigint, nr_seq_mensalidade_seg_p bigint, dt_mes_referencia_p timestamp, nm_usuario_p text, ie_restricao_p INOUT text, ds_obs_p INOUT text) FROM PUBLIC;

