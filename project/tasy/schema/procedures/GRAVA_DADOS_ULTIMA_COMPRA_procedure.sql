-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE grava_dados_ultima_compra ( nr_seq_nota_p bigint, cd_acao_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w			integer;
ie_inf_ultima_compra_w	varchar(1);
qt_existe_w			bigint;
cd_estabelecimento_w		smallint;
nm_usuario_w			varchar(15);
nr_item_nf_w			integer;
nr_seq_nota_w			bigint;
ie_devolucao_w			varchar(1)	:= 'N';
nr_sequencia_ref_w		bigint;
nr_seq_nf_orig_w			bigint;
nr_sequencia_ref_ww		bigint;

c01 CURSOR FOR
SELECT	nr_item_nf,
	a.cd_material,
	a.cd_estabelecimento,
	a.nm_usuario,
	coalesce(a.nr_seq_nf_orig,0)
from	nota_fiscal_item a
where	a.nr_sequencia = nr_seq_nota_p
and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
and	(nr_seq_nota_p IS NOT NULL AND nr_seq_nota_p::text <> '');


BEGIN

select	coalesce(max(a.nr_sequencia_ref),0),
	coalesce(max(o.ie_devolucao),'N')
into STRICT	nr_sequencia_ref_w,
	ie_devolucao_w
from	operacao_nota o,
	nota_fiscal a
where	a.nr_sequencia = nr_seq_nota_p
and	a.cd_operacao_nf = o.cd_operacao_nf;

open c01;
loop
fetch c01 into
	nr_item_nf_w,
	cd_material_w,
	cd_estabelecimento_w,
	nm_usuario_w,
	nr_seq_nf_orig_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	select	coalesce(a.ie_inf_ultima_compra,'S')
	into STRICT	ie_inf_ultima_compra_w
	from	material a
	where	a.cd_material = cd_material_w;

	if (ie_inf_ultima_compra_w = 'S') and (cd_acao_p = 1) and (ie_devolucao_w = 'N') then

		select	count(*)
		into STRICT	qt_existe_w
		from	sup_dados_ultima_compra a
		where	a.cd_material = cd_material_w
		and	a.cd_estabelecimento = cd_estabelecimento_w;

		if (qt_existe_w = 0) then

			insert into sup_dados_ultima_compra(
				nr_sequencia,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_nota,
				nr_seq_item,
				cd_material)
			values (nextval('sup_dados_ultima_compra_seq'),
				cd_estabelecimento_w,
				clock_timestamp(),
				nm_usuario_w,
				clock_timestamp(),
				nm_usuario_w,
				nr_seq_nota_p,
				nr_item_nf_w,
				cd_material_w);

		else
			update	sup_dados_ultima_compra
			set	nr_seq_nota = nr_seq_nota_p,
				nr_seq_item = nr_item_nf_w
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w;
		end if;
	end if;


	if (ie_inf_ultima_compra_w = 'S') and
		((cd_acao_p = 2) or (ie_devolucao_w = 'S')) then

		begin
		select	nr_sequencia
		into STRICT	nr_seq_nota_w
		from (
			SELECT /*+ FIRST_ROWS */				a.nr_sequencia
			from	nota_fiscal a,
				nota_fiscal_item b,
				natureza_operacao n,
				operacao_nota o
			where	a.dt_atualizacao_estoque <= clock_timestamp()
			and	a.nr_sequencia = b.nr_sequencia
			and	n.cd_natureza_operacao = a.cd_natureza_operacao
			and	a.cd_operacao_nf = o.cd_operacao_nf
			and	n.ie_entrada_saida = 'E'
			and	a.ie_situacao = '1'
			and	coalesce(o.ie_devolucao,'N') = 'N'
			and	a.ie_acao_nf = 1
			and	coalesce(o.ie_ultima_compra, 'S') = 'S'
			and	b.cd_material	= cd_material_w
			and	b.cd_estabelecimento = cd_estabelecimento_w
			and	b.nr_sequencia <> nr_seq_nota_p
			and not exists (
				SELECT	1
				from	nota_fiscal x,
					nota_fiscal_item y
				where	x.nr_sequencia = y.nr_sequencia
				and	x.nr_sequencia_ref = a.nr_sequencia
				and	y.nr_item_nf = b.nr_item_nf
				
union

				select	1
				from	nota_fiscal_item y
				where	y.nr_seq_nf_orig = a.nr_sequencia
				and	y.nr_seq_item_nf_orig = b.nr_item_nf)
			order by a.nr_sequencia desc) alias8 LIMIT 1;
		exception
		when others then
			nr_seq_nota_w := 0;
		end;

		if (nr_seq_nota_w > 0) then

			select	coalesce(max(nr_item_nf),0)
			into STRICT	nr_item_nf_w
			from	nota_fiscal_item
			where	cd_material = cd_material_w
			and	nr_sequencia = nr_seq_nota_w;
		end if;

		if (nr_item_nf_w > 0) and (nr_seq_nota_w > 0) then

			update	sup_dados_ultima_compra
			set	nr_seq_nota = nr_seq_nota_w,
				nr_seq_item = nr_item_nf_w
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w;
		else
			delete from sup_dados_ultima_compra
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w;
		end if;
	end if;
	end;
end loop;
close 	c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE grava_dados_ultima_compra ( nr_seq_nota_p bigint, cd_acao_p bigint, nm_usuario_p text) FROM PUBLIC;

