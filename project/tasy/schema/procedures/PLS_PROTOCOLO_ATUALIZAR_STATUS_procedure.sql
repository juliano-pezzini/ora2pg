-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_protocolo_atualizar_status ( nr_titulo_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_protocolo_w		bigint;
nr_seq_lote_protocolo_w		bigint;
nr_seq_pag_prestador_w		bigint;
vl_saldo_titulos_w		double precision;
ie_status_w			varchar(2);
nr_seq_reembolso_w		bigint;
nr_seq_lote_w			bigint;
qt_contas_fechadas_w		bigint;
ie_origem_titulo_w		titulo_pagar.ie_origem_titulo%type;
nr_seq_fatura_w			ptu_fatura.nr_sequencia%type;
nr_titulo_fat_w			ptu_fatura.nr_titulo%type;
nr_titulo_fat_ndc_w		ptu_fatura.nr_titulo_ndc%type;
vl_saldo_titulos_ndc_w		titulo_pagar.vl_saldo_titulo%type;
nr_titulo_original_w		titulo_pagar.nr_titulo_original%type;
nr_titulo_orig_conta_w		titulo_pagar.nr_titulo_original%type;
vl_saldo_tit_desd_w		titulo_pagar.vl_saldo_titulo%type;
nr_titulo_w			titulo_pagar.nr_titulo%type;

C01 CURSOR FOR
	SELECT	b.nr_seq_protocolo,
		a.nr_seq_lote
	from	pls_lote_protocolo_venc	a,
		pls_prot_conta_titulo	b
	where	a.nr_seq_lote	= b.nr_seq_lote
	and	a.nr_titulo	= nr_titulo_p;
	

BEGIN

nr_titulo_w := nr_titulo_p;

if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
	select	max(a.nr_seq_lote_res_pls),
		max(a.nr_seq_pls_pag_prest),
		max(a.nr_seq_reembolso),
		max(a.ie_origem_titulo),
		max(a.nr_titulo_original)
	into STRICT	nr_seq_lote_protocolo_w,
		nr_seq_pag_prestador_w,
		nr_seq_reembolso_w,
		ie_origem_titulo_w,
		nr_titulo_original_w
	from	titulo_pagar a
	where	a.nr_titulo	= nr_titulo_w;
	
	if (coalesce(nr_seq_lote_protocolo_w::text, '') = '') and (coalesce(nr_seq_pag_prestador_w::text, '') = '') and (coalesce(nr_seq_reembolso_w::text, '') = '') and (ie_origem_titulo_w <> '16') and (nr_titulo_original_w IS NOT NULL AND nr_titulo_original_w::text <> '') then
		
		select	coalesce(sum(vl_saldo_titulo),0)
		into STRICT	vl_saldo_tit_desd_w
		from	titulo_pagar
		where	nr_titulo_original = nr_titulo_original_w;
		
		if (vl_saldo_tit_desd_w = 0) then
			
			select	max(nr_titulo)
			into STRICT	nr_titulo_orig_conta_w
			from	titulo_pagar
			where	nr_titulo_transf = nr_titulo_original_w;
			
			if (nr_titulo_orig_conta_w IS NOT NULL AND nr_titulo_orig_conta_w::text <> '') then
				nr_titulo_w := nr_titulo_orig_conta_w;
			else
				nr_titulo_w := nr_titulo_original_w;
			end if;	
			
			select	max(a.nr_seq_lote_res_pls),
				max(a.nr_seq_pls_pag_prest),
				max(a.nr_seq_reembolso),
				max(a.ie_origem_titulo)
			into STRICT	nr_seq_lote_protocolo_w,
				nr_seq_pag_prestador_w,
				nr_seq_reembolso_w,
				ie_origem_titulo_w
			from	titulo_pagar a
			where	a.nr_titulo	= nr_titulo_w;
		end if;
	end if;
	
	/* Se for de lote de pagamento */

	if (nr_seq_lote_protocolo_w IS NOT NULL AND nr_seq_lote_protocolo_w::text <> '') then
		
		vl_saldo_titulos_w := 0;
		
		select	coalesce(sum(b.vl_saldo_titulo),0)
		into STRICT	vl_saldo_titulos_w
		from	titulo_pagar b
		where	b.nr_seq_lote_res_pls = nr_seq_lote_protocolo_w;
			
		if (vl_saldo_titulos_w = 0) then
			ie_status_w	:= '6'; -- Pago
		else
			ie_status_w	:= '3'; --Liberado pagamento
		end if;
		
		/* Cursor dos protocolos de conta do lote */

		open C01;
		loop
		fetch C01 into	
			nr_seq_protocolo_w,
			nr_seq_lote_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			update	pls_protocolo_conta
			set	ie_status	= CASE WHEN ie_status_w=4 THEN  4  ELSE ie_status_w END , --Se estiver encerrado sem pagamento, mantém o protocolo nesse status
				nr_seq_lote	= nr_seq_lote_w
			where	nr_sequencia	= nr_seq_protocolo_w;
			end;
		end loop;
		close C01;
	
	/* Se for de pagamento de produção */

	elsif (nr_seq_pag_prestador_w IS NOT NULL AND nr_seq_pag_prestador_w::text <> '') then
		--aaschlote 18/03/2016 OS 1034279 - Criei uma nova rotina com as mesmas caracteristicas, para aproveitar em outros lugares e não ter a mesma rotina em diversos fazendo a mesma ação
		CALL pls_atualiza_prot_pag_prod(nr_titulo_w,null,nm_usuario_p);
		
	elsif (ie_origem_titulo_w = '25') then -- Origem OPS - Pagamentos de Prestadores
		CALL pls_pp_gerar_titulo_pck.atualiza_status_prot_pag_prest(nr_titulo_w,null,null,null,nm_usuario_p);
	
	/*Se for pagamento de Reembolso*/

	elsif (nr_seq_reembolso_w IS NOT NULL AND nr_seq_reembolso_w::text <> '') then
	
		select	coalesce(sum(b.vl_saldo_titulo),0)
		into STRICT	vl_saldo_titulos_w
		from	titulo_pagar b
		where	b.nr_seq_reembolso = nr_seq_reembolso_w;
		
		if (vl_saldo_titulos_w = 0) then
			ie_status_w	:= '6'; -- Pago
		else
			ie_status_w	:= '3'; --Liberado pagamento
		end if;
		
		/*Atualizar o protocolo com status*/

		update	pls_protocolo_conta
		set	ie_status 	= ie_status_w
		where	nr_sequencia 	= nr_seq_reembolso_w
		and	ie_status	<> '4';
	--Se o título a pagar for OPS - Intercâmbio
	elsif (ie_origem_titulo_w	= '16') then
		--Busca a fatura do título
		select	max(nr_sequencia)
		into STRICT	nr_seq_fatura_w
		from	ptu_fatura
		where	nr_titulo	= nr_titulo_w;
		
		if (coalesce(nr_seq_fatura_w::text, '') = '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_fatura_w
			from	ptu_fatura
			where	nr_titulo_ndc	= nr_titulo_w;
		end if;
		
		--Se tiver fatura, então busca os títulos
		if (nr_seq_fatura_w IS NOT NULL AND nr_seq_fatura_w::text <> '') then
		
			select	nr_titulo,
				nr_titulo_ndc
			into STRICT	nr_titulo_fat_w,
				nr_titulo_fat_ndc_w
			from	ptu_fatura
			where	nr_sequencia	= nr_seq_fatura_w;
		
			if (nr_titulo_fat_w IS NOT NULL AND nr_titulo_fat_w::text <> '') then
				select	coalesce(sum(b.vl_saldo_titulo),0)
				into STRICT	vl_saldo_titulos_w
				from	titulo_pagar b
				where	b.nr_titulo = nr_titulo_fat_w;
			else
				vl_saldo_titulos_w	:= 0;
			end if;
			
			if (nr_titulo_fat_ndc_w IS NOT NULL AND nr_titulo_fat_ndc_w::text <> '') then
				select	coalesce(sum(b.vl_saldo_titulo),0)
				into STRICT	vl_saldo_titulos_ndc_w
				from	titulo_pagar b
				where	b.nr_titulo = nr_titulo_fat_ndc_w;
			else
				vl_saldo_titulos_ndc_w	:= 0;
			end if;
			
			--Busca o protocolo da fatura
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_protocolo_w
			from	pls_protocolo_conta	a,
				ptu_fatura		b
			where	b.nr_seq_protocolo = a.nr_sequencia
			and	coalesce(a.nr_seq_prestador::text, '') = ''
			and	(a.nr_seq_congenere IS NOT NULL AND a.nr_seq_congenere::text <> '')
			and	b.nr_sequencia = nr_seq_fatura_w;
			
			if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
				select	count(1)
				into STRICT	qt_contas_fechadas_w
				from	pls_conta
				where	nr_seq_protocolo	= nr_seq_protocolo_w
				and	ie_status		not in ('F','C','S');
				
				--Não permite mudar o status para pago caso tenha contas que não estejam fechadas, canceladas ou A700 finalizado
				if (qt_contas_fechadas_w = 0) then
					if (vl_saldo_titulos_w = 0) and (vl_saldo_titulos_ndc_w = 0) then
						ie_status_w	:= '6'; -- Pago
					else
						ie_status_w	:= '3'; --Liberado pagamento
					end if;
					
					update	pls_protocolo_conta
					set	ie_status 	= ie_status_w
					where	nr_sequencia 	= nr_seq_protocolo_w
					and	ie_status	<> '4';
				end if;
			end if;	
		end if;
	
	end if;	
end if;

/* Não pode ter commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_protocolo_atualizar_status ( nr_titulo_p bigint, nm_usuario_p text) FROM PUBLIC;

