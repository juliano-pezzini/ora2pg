-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_autoriz_ordem_serv ( nr_seq_req_ord_serv_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Atualizar os dados da guia/requisicao com os dados da ordem de servico

UTILIZADA NA FUNCAO OPS - ORDEM DE SERVICO INTERCAMBIO - SE FOR ALTERAR, VERIFICAR COM O ANALISTA RESPONSAVEL POR ESTA FUNCAO

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


/*  ie_opcao_p
  PA - Pedido de Autorizacao  -> Deve inserir os itens na guia/requisicao.
          -> Deve atualizar o pedido de ordem de servico com a guia/requisicao gerada.
          -> Deve atualizar a guia/requisicao com os dados da ordem de servico.
          
  GR - Gerar Guia/Requisicao  -> Deve inserir os itens na guia/requisicao e atualizar o status para liberado.
          -> Deve atualizar o pedido de ordem de servico com a guia/requisicao gerada.
          -> Deve atualizar a guia/requisicao com os dados da ordem de servico e liberar a guia.
*/
nr_seq_segurado_w      ptu_requisicao_ordem_serv.nr_seq_segurado%type;
cd_unimed_executora_w    ptu_requisicao_ordem_serv.cd_unimed_beneficiario%type;
cd_doenca_cid_w        ptu_requisicao_ordem_serv.cd_doenca_cid%type;
nr_seq_uni_exec_w      pls_guia_plano.nr_seq_uni_exec%type;
nr_seq_plano_w        pls_plano.nr_sequencia%type;
nr_transacao_solicitante_w  ptu_requisicao_ordem_serv.nr_transacao_solicitante%type;
cd_unimed_solicitante_w    ptu_requisicao_ordem_serv.cd_unimed_solicitante%type;
nr_seq_ordem_w        ptu_requisicao_ordem_serv.nr_sequencia%type;
ie_origem_servico_w      ptu_req_ord_serv_servico.ie_origem_servico%type;
ie_recem_nascido_w	ptu_requisicao_ordem_serv.ie_recem_nascido%type;

nr_seq_req_proc_w      pls_requisicao_proc.nr_sequencia%type;
nr_seq_req_mat_w      pls_requisicao_mat.nr_sequencia%type;
nr_seq_guia_proc_w      pls_guia_plano_proc.nr_sequencia%type;
nr_seq_guia_mat_w      pls_guia_plano_mat.nr_sequencia%type;

c_itens_ord_serv CURSOR FOR
  SELECT  ie_tipo_tabela,
    cd_servico,
    qt_servico_aut,
    nr_seq_item
  from  ptu_resposta_req_servico
  where  nr_seq_resp_req_ord  = nr_seq_ordem_w
  and  ie_status_requisicao  = 2;

BEGIN

begin
  select  nr_transacao_solicitante,
    cd_unimed_solicitante
  into STRICT  nr_transacao_solicitante_w,
    cd_unimed_solicitante_w
  from  ptu_requisicao_ordem_serv
  where  nr_sequencia  = nr_seq_req_ord_serv_p;

  select  max(nr_sequencia)
  into STRICT  nr_seq_ordem_w
  from  ptu_resposta_req_ord_serv
  where  nr_seq_origem    = nr_transacao_solicitante_w
  and  cd_unimed_solicitante  = cd_unimed_solicitante_w;
exception
when others then
  nr_transacao_solicitante_w  := null;
  cd_unimed_solicitante_w    := null;
  nr_seq_ordem_w      := null;
end;

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') and (nr_seq_ordem_w IS NOT NULL AND nr_seq_ordem_w::text <> '') then
  select  nr_seq_segurado,
    cd_unimed_executora,
    cd_doenca_cid,
    ie_recem_nascido
  into STRICT  nr_seq_segurado_w,
    cd_unimed_executora_w,
    cd_doenca_cid_w,
    ie_recem_nascido_w
  from  ptu_requisicao_ordem_serv
  where  nr_sequencia  = nr_seq_req_ord_serv_p;

  select  nr_seq_plano
  into STRICT  nr_seq_plano_w
  from  pls_segurado
  where  nr_sequencia  = nr_seq_segurado_w;

  select  max(nr_sequencia)
  into STRICT  nr_seq_uni_exec_w
  From  Pls_Congenere
  where  (cd_cooperativa)::numeric   = cd_unimed_executora_w;

  for  r_itens_ord_serv_w in c_itens_ord_serv loop
    if (r_itens_ord_serv_w.ie_tipo_tabela  in (0,1,4)) then
      begin
        select  ie_origem_servico
        into STRICT  ie_origem_servico_w
        from  ptu_req_ord_serv_servico
        where  nr_seq_req_ord = nr_seq_req_ord_serv_p
        and  coalesce(cd_servico_consersao, cd_servico) = r_itens_ord_serv_w.cd_servico
        and  nr_seq_item = r_itens_ord_serv_w.nr_seq_item;
      exception
      when others then
        ie_origem_servico_w  := null;
      end;

      insert   into pls_guia_plano_proc(nr_sequencia, dt_atualizacao, nm_usuario,
         nr_seq_guia, ie_origem_proced, cd_procedimento,
         qt_solicitada, ie_status)
      values (nextval('pls_guia_plano_proc_seq'), clock_timestamp(), nm_usuario_p,
         nr_seq_guia_p, ie_origem_servico_w, r_itens_ord_serv_w.cd_servico,
         r_itens_ord_serv_w.qt_servico_aut, 'I') returning nr_sequencia into nr_seq_guia_proc_w;

      CALL pls_inserir_obs_regra_intercam(null, nr_seq_guia_proc_w, 'P', nm_usuario_p);

    elsif (r_itens_ord_serv_w.ie_tipo_tabela  in (2,3)) then
    
      insert  into pls_guia_plano_mat(nr_sequencia, dt_atualizacao, nm_usuario,
         nr_seq_guia, qt_solicitada, nr_seq_material,
         ie_status)
      values (nextval('pls_guia_plano_mat_seq'), clock_timestamp(), nm_usuario_p,
         nr_seq_guia_p, r_itens_ord_serv_w.qt_servico_aut, r_itens_ord_serv_w.cd_servico,
         'I') returning nr_sequencia into nr_seq_guia_mat_w;

      CALL pls_inserir_obs_regra_intercam(null, nr_seq_guia_mat_w, 'M', nm_usuario_p);

    end if;
  end loop;

  if (ie_opcao_p  = 'PA') then
    update  pls_guia_plano
    set  nr_seq_segurado    = nr_seq_segurado_w,
      nr_seq_plano    = nr_seq_plano_w,
      nr_seq_uni_exec    = nr_seq_uni_exec_w,
      cd_guia      = to_char(nr_seq_guia_p),
      ie_estagio    = 12,
      ie_tipo_processo  = 'I',
      ie_tipo_intercambio  = 'I',
      ie_origem_solic    = 'M',
      ie_recem_nascido = ie_recem_nascido_w
    where  nr_sequencia    = nr_seq_guia_p;

  elsif (ie_opcao_p  = 'GR') then
    update  pls_guia_plano
    set  nr_seq_segurado    = nr_seq_segurado_w,
      nr_seq_plano    = nr_seq_plano_w,
      nr_seq_uni_exec    = nr_seq_uni_exec_w,
      cd_guia      = to_char(nr_seq_guia_p),
      ie_status    = 1,
      ie_estagio    = 6,
      ie_tipo_processo  = 'I',
      ie_tipo_intercambio  = 'I',
      ie_origem_solic    = 'M',
      ie_recem_nascido = ie_recem_nascido_w
    where  nr_sequencia    = nr_seq_guia_p;
  end if;

  insert  into pls_diagnostico(nr_sequencia, dt_atualizacao, nm_usuario,
     nr_seq_guia, cd_doenca)
  values (nextval('pls_diagnostico_seq'), clock_timestamp(), nm_usuario_p,
     nr_seq_guia_p, cd_doenca_cid_w);

  update  ptu_requisicao_ordem_serv
  set  nr_seq_guia    = nr_seq_guia_p,
    ie_estagio    = 7
  where  nr_sequencia    = nr_seq_req_ord_serv_p;

  if (ie_opcao_p  = 'GR') then
    update  pls_guia_plano_proc
    set  ie_status  = 'S'
    where  nr_seq_guia  = nr_seq_guia_p;

    update  pls_guia_plano_mat
    set  ie_status  = 'S'
    where  nr_seq_guia  = nr_seq_guia_p;
  end if;

elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') and (nr_seq_ordem_w IS NOT NULL AND nr_seq_ordem_w::text <> '') then

  select  nr_seq_segurado,
    cd_unimed_executora,
    cd_doenca_cid,
    ie_recem_nascido
  into STRICT  nr_seq_segurado_w,
    cd_unimed_executora_w,
    cd_doenca_cid_w,
    ie_recem_nascido_w
  from  ptu_requisicao_ordem_serv
  where  nr_sequencia  = nr_seq_req_ord_serv_p;

  select  nr_seq_plano
  into STRICT  nr_seq_plano_w
  from  pls_segurado
  where  nr_sequencia  = nr_seq_segurado_w;

  select  max(nr_sequencia)
  into STRICT  nr_seq_uni_exec_w
  From  pls_congenere
  where  (cd_cooperativa)::numeric   = cd_unimed_executora_w;

  for  r_itens_ord_serv_w in c_itens_ord_serv loop
    if (r_itens_ord_serv_w.ie_tipo_tabela  in (0,1,4)) then
      begin
        select  ie_origem_servico
        into STRICT  ie_origem_servico_w
        from  ptu_req_ord_serv_servico
        where  nr_seq_req_ord = nr_seq_req_ord_serv_p
        and  coalesce(cd_servico_consersao, cd_servico) = r_itens_ord_serv_w.cd_servico
        and  nr_seq_item = r_itens_ord_serv_w.nr_seq_item;
      exception
      when others then
        ie_origem_servico_w  := null;
      end;

      insert   into pls_requisicao_proc(nr_sequencia, dt_atualizacao, nm_usuario,
         nr_seq_requisicao, ie_origem_proced, cd_procedimento,
         qt_solicitado, ie_estagio, ie_status)
      values (nextval('pls_requisicao_proc_seq'), clock_timestamp(), nm_usuario_p,
         nr_seq_requisicao_p, ie_origem_servico_w, r_itens_ord_serv_w.cd_servico,
         r_itens_ord_serv_w.qt_servico_aut, 'N', 'I') returning nr_sequencia into nr_seq_req_proc_w;

      CALL pls_inserir_obs_regra_intercam(nr_seq_req_proc_w, null, 'P', nm_usuario_p);

    elsif (r_itens_ord_serv_w.ie_tipo_tabela  in (2,3)) then
      
      insert  into pls_requisicao_mat(nr_sequencia, dt_atualizacao, nm_usuario,
         nr_seq_requisicao, qt_solicitado, nr_seq_material,
         ie_estagio, ie_status)
      values (nextval('pls_requisicao_mat_seq'), clock_timestamp(), nm_usuario_p,
         nr_seq_requisicao_p, r_itens_ord_serv_w.qt_servico_aut, r_itens_ord_serv_w.cd_servico,
         'N', 'I') returning nr_sequencia into nr_seq_req_mat_w;

      CALL pls_inserir_obs_regra_intercam(nr_seq_req_mat_w, null, 'M', nm_usuario_p);

    end if;
  end loop;

  if (ie_opcao_p  = 'PA') then
    update  pls_requisicao
    set  nr_seq_segurado    = nr_seq_segurado_w,
      nr_seq_plano    = nr_seq_plano_w,
      nr_seq_uni_exec    = nr_seq_uni_exec_w,
      ie_estagio    = 1,
      ie_tipo_processo  = 'I',
      ie_tipo_intercambio  = 'I',
      ie_origem_solic    = 'M',
      ie_recem_nascido = ie_recem_nascido_w
    where  nr_sequencia    = nr_seq_requisicao_p;

  elsif (ie_opcao_p  = 'GR') then    
    update  pls_requisicao
    set  nr_seq_segurado    = nr_seq_segurado_w,
      nr_seq_plano    = nr_seq_plano_w,
      nr_seq_uni_exec    = nr_seq_uni_exec_w,
      ie_status    = 'L',
      ie_estagio    = 2,
      ie_tipo_processo  = 'I',
      ie_tipo_intercambio  = 'I',
      ie_origem_solic    = 'M',
      ie_recem_nascido = ie_recem_nascido_w
    where  nr_sequencia    = nr_seq_requisicao_p;
  end if;

  insert  into pls_requisicao_diagnostico(nr_sequencia, dt_atualizacao, nm_usuario,
     nr_seq_requisicao, cd_doenca)
  values (nextval('pls_requisicao_diagnostico_seq'), clock_timestamp(), nm_usuario_p,
     nr_seq_requisicao_p, cd_doenca_cid_w);

  update  ptu_requisicao_ordem_serv
  set  nr_seq_requisicao  = nr_seq_requisicao_p,
    ie_estagio    = 7
  where  nr_sequencia    = nr_seq_req_ord_serv_p;

  if (ie_opcao_p  = 'GR') then
    update  pls_requisicao_proc
    set  ie_status  = 'S'
    where  nr_seq_requisicao  = nr_seq_requisicao_p;

    update  pls_requisicao_mat
    set  ie_status  = 'S'
    where  nr_seq_requisicao  = nr_seq_requisicao_p;
  end if;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_autoriz_ordem_serv ( nr_seq_req_ord_serv_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

