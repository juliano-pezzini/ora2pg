-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE regra_ajuste_tempo_dispensacao ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_setor_atendimento_w		setor_atendimento.cd_setor_atendimento%type;
nr_seq_turno_w			regra_turno_disp.nr_sequencia%type;
nr_seq_classif_w		classif_lote_disp_far.nr_sequencia%type;
qt_min_antes_atend_w		regra_tempo_disp.qt_min_antes_atend%type;
qt_min_receb_setor_w		regra_tempo_disp.qt_min_receb_setor%type;
qt_min_entr_setor_w		regra_tempo_disp.qt_min_entr_setor%type;
qt_min_disp_farm_w		regra_tempo_disp.qt_min_disp_farm%type;
qt_min_atend_farm_w		regra_tempo_disp.qt_min_atend_farm%type;
qt_min_inicio_atend_w		regra_tempo_disp.qt_min_inicio_atend%type;
ie_hora_antes_w			regra_tempo_disp.ie_hora_antes%type;
dt_inicio_turno_w		ap_lote.dt_inicio_turno%type;
dt_prim_horario_w		ap_lote.dt_prim_horario%type;
hr_hora_w			varchar(5);
hr_inicio_turno_w			varchar(5);
cd_setor_lote_w			setor_atendimento.cd_setor_atendimento%type;

c01 CURSOR FOR
	SELECT	a.cd_setor_atendimento,
		a.nr_seq_turno,
		a.nr_seq_classif,
		a.qt_min_antes_atend,
		a.qt_min_receb_setor,
		a.qt_min_entr_setor,
		a.qt_min_disp_farm,
		a.qt_min_atend_farm,
		a.qt_min_inicio_atend,
		coalesce(a.ie_hora_antes,'H')
	from	regra_tempo_disp a
	where	a.cd_estabelecimento	= cd_estabelecimento_p
	and	coalesce(a.ie_situacao, 'A')	= 'A'
	and	exists (	SELECT	1
			from	ap_lote b
			where	b.nr_sequencia = nr_seq_lote_p
			and	b.nr_seq_turno = coalesce(a.nr_seq_turno, b.nr_seq_turno)
			and	b.nr_seq_classif = coalesce(a.nr_seq_classif, b.nr_seq_classif)
			and	b.cd_setor_atendimento = coalesce(a.cd_setor_atendimento, b.cd_setor_atendimento))
	order by coalesce(a.nr_seq_classif,0),
		coalesce(a.nr_seq_turno,0),
		coalesce(a.cd_setor_atendimento,0);
		
C02 CURSOR FOR
	SELECT	to_char(b.hr_inicial,'hh24:mi')
	from	regra_turno_disp_param b,
		regra_turno_disp a
	where	a.nr_sequencia		= b.nr_seq_turno
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	a.nr_sequencia		= nr_seq_turno_w
	and (coalesce(b.cd_setor_atendimento,cd_setor_lote_w)	= cd_setor_lote_w)
	order by coalesce(b.cd_setor_atendimento,0),
		to_char(b.hr_inicial,'hh24:mi');


BEGIN

select	to_char(max(dt_prim_horario),'hh24:mi'),
	max(dt_prim_horario),
	max(cd_setor_atendimento)
into STRICT	hr_hora_w,
	dt_prim_horario_w,
	cd_setor_lote_w
from	ap_lote
where	nr_sequencia = nr_seq_lote_p;

open c01;
loop
fetch c01 into
	cd_setor_atendimento_w,
	nr_seq_turno_w,
	nr_seq_classif_w,
	qt_min_antes_atend_w,
	qt_min_receb_setor_w,
	qt_min_entr_setor_w,
	qt_min_disp_farm_w,
	qt_min_atend_farm_w,
	qt_min_inicio_atend_w,
	ie_hora_antes_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (ie_hora_antes_w = 'H') then
		begin
		update	ap_lote
		set	dt_atend_lote		= round(dt_prim_horario - dividir(qt_min_antes_atend_w,1440),'mi'),
			dt_limite_inicio_atend	= round(dt_prim_horario - dividir(qt_min_inicio_atend_w,1440),'mi'),
			dt_limite_atend		= round(dt_prim_horario - dividir(qt_min_atend_farm_w,1440),'mi'),
			dt_limite_disp_farm	= round(dt_prim_horario - dividir(qt_min_disp_farm_w,1440),'mi'),
			dt_limite_entrega_setor	= round(dt_prim_horario - dividir(qt_min_entr_setor_w,1440),'mi'),
			dt_limite_receb_setor	= round(dt_prim_horario - dividir(qt_min_receb_setor_w,1440),'mi')
		where	nr_sequencia	= nr_seq_lote_p
		and	ie_status_lote		= 'G'
		and	coalesce(cd_setor_atendimento_w,coalesce(cd_setor_atendimento,0))	= coalesce(cd_setor_atendimento,0)
		and	coalesce(nr_seq_turno_w,nr_seq_turno)			= nr_seq_turno
		and	coalesce(nr_seq_classif_w,nr_seq_classif)			= nr_seq_classif;
		end;
	elsif (ie_hora_antes_w = 'I') then
		begin
		update	ap_lote
		set	dt_atend_lote		= round(dt_inicio_turno - dividir(qt_min_antes_atend_w,1440),'mi'),
			dt_limite_inicio_atend	= round(dt_prim_horario - dividir(qt_min_inicio_atend_w,1440),'mi'),
			dt_limite_atend		= round(dt_prim_horario - dividir(qt_min_atend_farm_w,1440),'mi'),
			dt_limite_disp_farm	= round(dt_prim_horario - dividir(qt_min_disp_farm_w,1440),'mi'),
			dt_limite_entrega_setor	= round(dt_prim_horario - dividir(qt_min_entr_setor_w,1440),'mi'),
			dt_limite_receb_setor	= round(dt_prim_horario - dividir(qt_min_receb_setor_w,1440),'mi')
		where	nr_sequencia	= nr_seq_lote_p
		and	ie_status_lote		= 'G'
		and	coalesce(cd_setor_atendimento_w,coalesce(cd_setor_atendimento,0))	= coalesce(cd_setor_atendimento,0)
		and	coalesce(nr_seq_turno_w,nr_seq_turno)			= nr_seq_turno
		and	coalesce(nr_seq_classif_w,nr_seq_classif)			= nr_seq_classif;
		end;
	elsif (ie_hora_antes_w = 'T') then
		begin
		open C02;
		loop
		fetch C02 into	
			hr_inicio_turno_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			hr_inicio_turno_w := hr_inicio_turno_w;
			end;
		end loop;
		close C02;
		
		if (hr_hora_w < hr_inicio_turno_w) then
			dt_inicio_turno_w	:= PKG_DATE_UTILS.get_Time(dt_prim_horario_w - 1, replace(hr_inicio_turno_w,'24:','00:'));
		else
			dt_inicio_turno_w	:= PKG_DATE_UTILS.get_Time(dt_prim_horario_w, replace(hr_inicio_turno_w,'24:','00:'));
		end if;
		
		update	ap_lote
		set	dt_inicio_turno		= dt_inicio_turno_w
		where	nr_sequencia	= nr_seq_lote_p
		and	ie_status_lote		= 'G'
		and	coalesce(cd_setor_atendimento_w,coalesce(cd_setor_atendimento,0))	= coalesce(cd_setor_atendimento,0)
		and	coalesce(nr_seq_turno_w,nr_seq_turno)		= nr_seq_turno
		and	coalesce(nr_seq_classif_w,nr_seq_classif)	= nr_seq_classif;
		
		update	ap_lote
		set	dt_atend_lote		= CASE WHEN to_char(round(dt_inicio_turno - dividir(qt_min_antes_atend_w,1440),'mi'), 'hh24:mi:ss')='00:00:00' THEN  --OS186690
			round(dt_inicio_turno - dividir(qt_min_antes_atend_w,1440),'mi') + 1/86400  ELSE round(dt_inicio_turno - dividir(qt_min_antes_atend_w,1440),'mi') END ,
			dt_limite_inicio_atend	= CASE WHEN to_char(round(dt_inicio_turno - dividir(qt_min_inicio_atend_w,1440),'mi'), 'hh24:mi:ss')='00:00:00' THEN			round(dt_inicio_turno - dividir(qt_min_inicio_atend_w,1440),'mi') + 1/86400  ELSE round(dt_inicio_turno - dividir(qt_min_inicio_atend_w,1440),'mi') END , 
			dt_limite_atend		= round(dt_inicio_turno - dividir(qt_min_atend_farm_w,1440),'mi'),
			dt_limite_disp_farm	= round(dt_inicio_turno - dividir(qt_min_disp_farm_w,1440),'mi'),
			dt_limite_entrega_setor	= round(dt_inicio_turno - dividir(qt_min_entr_setor_w,1440),'mi'),
			dt_limite_receb_setor	= round(dt_inicio_turno - dividir(qt_min_receb_setor_w,1440),'mi')
		where	nr_sequencia	= nr_seq_lote_p
		and	ie_status_lote		= 'G'
		and	coalesce(cd_setor_atendimento_w,coalesce(cd_setor_atendimento,0))	= coalesce(cd_setor_atendimento,0)
		and	coalesce(nr_seq_turno_w,nr_seq_turno)			= nr_seq_turno
		and	coalesce(nr_seq_classif_w,nr_seq_classif)			= nr_seq_classif;
		end;
	end if;
	end;
end loop;
close c01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE regra_ajuste_tempo_dispensacao ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

