-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_isolamento_agrupamento ( ds_lista_unidade_agrup_p text, cd_setor_atendimento_p integer, nm_usuario_p text, nr_seq_precaucao_p bigint, nr_seq_motivo_p bigint, ie_opcao_iso_p text, ds_motivo_p text, ds_motivos_isolamento_p text, ie_tipo_isolamento_p text, nr_seq_tipo_isolamento_cih_p bigint, dt_inicio_isolamento_p timestamp, dt_fim_isolamento_p timestamp, nr_seq_mot_isol_p bigint, cd_responsavel_p text default null) AS $body$
DECLARE

 
ds_lista_unidade_agrup_w	varchar(1000);
ds_lista_atend_agrup_w		varchar(1000);
nr_atendimento_w		bigint;
tam_lista_w			bigint;
tam_unidades_w			bigint;
tam_unidades2_w			bigint;
ie_pos_virgula_w		integer;
ie_pos_espaco_w			integer;
ie_pos_espaco2_w		integer;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
ds_unidades_w			varchar(255);
VarMotivoIsolamento_w		varchar(20);
ie_paciente_isolado_w		varchar(1);
ie_opcao_w			varchar(3);
ie_status_unidade_w		varchar(3);
ds_perfil_autorizado_w		varchar(255);
ie_informa_precaucao_w		varchar(1);
nr_seq_atend_precaucao_w	bigint;
qt_precaucao_isol_w			bigint;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	atendimento_precaucao a , 
			cih_precaucao b 
	where	a.nr_atendimento = nr_atendimento_w 
	and		b.nr_sequencia	= a.nr_seq_precaucao 
	and		coalesce(a.dt_inativacao::text, '') = '' 
	and		((coalesce(a.dt_termino::text, '') = '') or (clock_timestamp() between coalesce(a.DT_INICIO,clock_timestamp() - interval '1 days') and a.DT_TERMINO)) 
	and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and		coalesce(a.dt_final_precaucao::text, '') = '' 
	order by coalesce(b.nr_seq_prioridade,0),a.nr_sequencia;


BEGIN 
 
if (ds_lista_unidade_agrup_p IS NOT NULL AND ds_lista_unidade_agrup_p::text <> '') and (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then 
	ds_lista_unidade_agrup_w := ds_lista_unidade_agrup_p;
 
	VarMotivoIsolamento_w := Obter_Param_Usuario(44, 80, obter_perfil_ativo, nm_usuario_p, obter_estab_atend(nr_atendimento_w), VarMotivoIsolamento_w);	
	 
	while (ds_lista_unidade_agrup_w IS NOT NULL AND ds_lista_unidade_agrup_w::text <> '') loop 
		begin 
		tam_lista_w		:= length(ds_lista_unidade_agrup_w);
		ie_pos_virgula_w	:= position(',' in ds_lista_unidade_agrup_w);
 
		if (ie_pos_virgula_w <> 0) then 
			ds_unidades_w			:= substr(ds_lista_unidade_agrup_w,1,(ie_pos_virgula_w - 1));
			ie_pos_espaco_w			:= position('#@' in ds_unidades_w);
			if (ie_pos_espaco_w IS NOT NULL AND ie_pos_espaco_w::text <> '') then 
				tam_unidades_w		:= length(ds_unidades_w);
				cd_unidade_basica_w	:= substr(ds_unidades_w,1,(ie_pos_espaco_w - 1));
				ds_unidades_w		:= substr(ds_unidades_w,(ie_pos_espaco_w + 2), tam_unidades_w);
				tam_unidades2_w		:= length(ds_unidades_w);
				ie_pos_espaco2_w	:= position('#@' in ds_unidades_w);
				cd_unidade_compl_w	:= substr(ds_unidades_w,1,(ie_pos_espaco2_w - 1));
				ie_opcao_w		:= substr(ds_unidades_w,(ie_pos_espaco2_w + 2), tam_unidades2_w);
			end if;
 
 
			ds_lista_unidade_agrup_w	:= substr(ds_lista_unidade_agrup_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;
 
		/* Verifica status da unidade */
 
		select	ie_status_unidade 
		into STRICT	ie_status_unidade_w 
		from	unidade_atendimento 
		where	cd_setor_atendimento = cd_setor_atendimento_p 
		and	cd_unidade_basica = cd_unidade_basica_w 
		and	cd_unidade_compl = cd_unidade_compl_w;
 
 
		/* Verifica ILP - Isolamento de leito e ou paciente */
 
		if (ie_opcao_w = 'ILP') then 
			if (ie_status_unidade_w = 'L') then 
				 
				update	unidade_atendimento 
				set	ie_status_unidade	= 'O', 
					nm_usuario		= nm_usuario_p, 
					dt_atualizacao		= clock_timestamp(), 
					nr_seq_mot_isol 	= nr_seq_mot_isol_p 
				where	cd_unidade_basica	= cd_unidade_basica_w 
				and	cd_unidade_compl	= cd_unidade_compl_w 
				and	cd_setor_atendimento	= cd_setor_atendimento_p;
 
			elsif (ie_status_unidade_w = 'P') then 
 
				select	nr_atendimento 
				into STRICT	nr_atendimento_w 
				from	unidade_atendimento 
				where	cd_setor_atendimento = cd_setor_atendimento_p 
				and	cd_unidade_basica = cd_unidade_basica_w 
				and	cd_unidade_compl = cd_unidade_compl_w;
 
 
				if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
				 
					update	atendimento_paciente 
					set	ie_paciente_isolado	= 'S', 
						dt_atualizacao		= clock_timestamp(), 
						nm_usuario		= nm_usuario_p 
					where	nr_atendimento		= nr_atendimento_w;
 
					select	max(nr_sequencia) 
					into STRICT	nr_seq_atend_precaucao_w 
					from	atendimento_precaucao 
					where	nr_atendimento = nr_atendimento_w;
								 
					ie_informa_precaucao_w := obter_param_usuario(44, 75, obter_perfil_ativo, nm_usuario_p, obter_estab_atend(nr_atendimento_w), ie_informa_precaucao_w);										
					if (ie_informa_precaucao_w = 'S') and (nr_seq_precaucao_p > 0) then 
						CALL gerar_atendimento_precaucao(nr_seq_precaucao_p, nr_atendimento_w, 'I', nr_seq_motivo_p , nm_usuario_p, null, ds_motivos_isolamento_p, ds_motivo_p, null, cd_responsavel_p, dt_inicio_isolamento_p);
					end if;
					 
					--Cornetet inserir select para pegar a precaucao gerada e passar para o motivo de isolamento 
 
					select	max(nr_sequencia) 
					into STRICT	nr_seq_atend_precaucao_w 
					from	atendimento_precaucao 
					where	nr_atendimento = nr_atendimento_w;
 
					if (VarMotivoIsolamento_w = 'S') then 
						CALL gerar_motivo_isolamento(nr_atendimento_w, nr_seq_motivo_p, nm_usuario_p, ie_opcao_iso_p,ds_motivo_p,ie_tipo_isolamento_p,nr_seq_tipo_isolamento_cih_p,dt_inicio_isolamento_p,dt_fim_isolamento_p,null,nr_seq_atend_precaucao_w);		
					end if;
					 
					select	obter_valor_param_usuario(44, 29, obter_perfil_ativo, nm_usuario_p, obter_estab_atend(nr_atendimento_w)) 
					into STRICT	ds_perfil_autorizado_w 
					;
 
					select	coalesce(max(ie_paciente_isolado),'N') 
					into STRICT	ie_paciente_isolado_w 
					from	atendimento_paciente 
					where	nr_atendimento = nr_atendimento_w;
 
					if (trim(both ds_perfil_autorizado_w) <> '0') and (ie_paciente_isolado_w = 'S') then 
						CALL comunic_paciente_isolamento(ds_perfil_autorizado_w, nr_atendimento_w, nm_usuario_p, obter_estab_atend(nr_atendimento_w));
					end if;
				end if;
			end if;
 
		/* Verifica LLP - Liberação de isolamento de leito e ou paciente */
 
		elsif (ie_opcao_w = 'LLP') then 
			if (ie_status_unidade_w = 'O') then 
				update	unidade_atendimento 
				set	ie_status_unidade	= 'G', 
					nm_usuario		= nm_usuario_p, 
					dt_atualizacao		= clock_timestamp(), 
					nr_seq_mot_isol 	 = NULL 
				where	cd_unidade_basica	= cd_unidade_basica_w 
				and	cd_unidade_compl	= cd_unidade_compl_w 
				and	cd_setor_atendimento	= cd_setor_atendimento_p;
 
			elsif (ie_status_unidade_w = 'P') then 
 
				select	nr_atendimento 
				into STRICT	nr_atendimento_w 
				from	unidade_atendimento 
				where	cd_setor_atendimento = cd_setor_atendimento_p 
				and	cd_unidade_basica = cd_unidade_basica_w 
				and	cd_unidade_compl = cd_unidade_compl_w;
 
				if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then					 
 
					open C01;
					loop 
					fetch C01 into	 
						nr_seq_atend_precaucao_w;
					EXIT WHEN NOT FOUND; /* apply on C01 */
					end loop;
					close C01;
 
					ie_informa_precaucao_w := obter_param_usuario(44, 75, obter_perfil_ativo, nm_usuario_p, obter_estab_atend(nr_atendimento_w), ie_informa_precaucao_w);
					if (ie_informa_precaucao_w = 'S') or (ie_informa_precaucao_w = 'F') then 
						 
						update 	atendimento_precaucao 
						set		dt_final_precaucao = coalesce(dt_fim_isolamento_p,clock_timestamp()), 
								dt_atualizacao = clock_timestamp(), 
								nm_usuario = nm_usuario_p, 
								NM_USUARIO_LIB_ISO = nm_usuario_p 
						where	nr_sequencia = nr_seq_atend_precaucao_w;		
 
 
						CALL gerar_atendimento_precaucao(0 , nr_atendimento_w, 'T', null ,nm_usuario_p,nr_seq_atend_precaucao_w, '', '', '', '', dt_fim_isolamento_p);					
					end if;	
 
					select count(*) 
					into STRICT	qt_precaucao_isol_w 
					from  atendimento_precaucao a, 
							cih_precaucao b 
					where  a.nr_seq_precaucao = b.nr_sequencia 
					and   a.nr_atendimento = nr_atendimento_w 
					and   coalesce(a.dt_final_precaucao::text, '') = '' 
					and   coalesce(a.dt_inativacao::text, '') = '' 
					and   (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
					and   coalesce(b.ie_isolamento,'N') = 'S';
					 
					if (qt_precaucao_isol_w = 0) then 
 
						update	atendimento_paciente 
						set		ie_paciente_isolado	= 'N', 
								dt_atualizacao		= clock_timestamp(), 
								nm_usuario			= nm_usuario_p 
						where	nr_atendimento		= nr_atendimento_w;					
 
					end if;
					 
					 
					 
					if (VarMotivoIsolamento_w = 'S') then 
						CALL gerar_motivo_isolamento(nr_atendimento_w, nr_seq_motivo_p, nm_usuario_p, ie_opcao_iso_p,ds_motivo_p,ie_tipo_isolamento_p,nr_seq_tipo_isolamento_cih_p,dt_inicio_isolamento_p,dt_fim_isolamento_p,null,nr_seq_atend_precaucao_w);
					end if;
				end if;
			end if;
 
		end if;		
		end;
	end loop;
	 
	if (ie_opcao_iso_p = 'I') then 
		update	 atendimento_precaucao 
		set	      dt_inicio	     = dt_inicio_isolamento_p 
		where	      nr_sequencia   = nr_seq_precaucao_p;
	end if;
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_isolamento_agrupamento ( ds_lista_unidade_agrup_p text, cd_setor_atendimento_p integer, nm_usuario_p text, nr_seq_precaucao_p bigint, nr_seq_motivo_p bigint, ie_opcao_iso_p text, ds_motivo_p text, ds_motivos_isolamento_p text, ie_tipo_isolamento_p text, nr_seq_tipo_isolamento_cih_p bigint, dt_inicio_isolamento_p timestamp, dt_fim_isolamento_p timestamp, nr_seq_mot_isol_p bigint, cd_responsavel_p text default null) FROM PUBLIC;

