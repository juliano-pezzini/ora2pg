-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_atendimento_mat ( dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE

dt_parametro_fim_w		timestamp;
dt_parametro_w		timestamp;
cd_setor_atendimento_w	integer;
ie_periodo_w		varchar(1);
ie_ocorrencia_w		varchar(1);
ie_tipo_operacao_w	varchar(1);
vl_parametro_w		varchar(255);

 

BEGIN 
 
 
/*Insert into Log_XXTasy values (sysdate, 'Tasy', 601, 'Atendimento_Material'); 
commit; */
 
 
dt_parametro_fim_w		:= (to_date((to_char(dt_parametro_p,'dd/mm/yyyy') || ' 23:59:59'), 'dd/mm/yyyy hh24:mi:ss'));
dt_parametro_w		:= (to_date((to_char(dt_parametro_p,'dd/mm/yyyy') || ' 00:00:00'), 'dd/mm/yyyy hh24:mi:ss'));
ie_periodo_w		:= 'D';
 
delete 
from	Eis_Atendimento_Mat 
where	dt_referencia 	= dt_parametro_w 
and	ie_periodo	= 'D';	
commit;
 
/* OS 51772 - Jerusa */
 
select	substr(obter_Valor_Param_Usuario(122, 22, obter_perfil_ativo, nm_usuario_p, null),1,255) 
into STRICT	vl_parametro_w
;
 
/* acumular Prescrição Médica */
 
ie_ocorrencia_w		:= 'P';
ie_tipo_operacao_w	:= 'C';
insert into eis_atendimento_mat( 
	ie_periodo, 
	dt_referencia, 
	cd_estabelecimento, 
	ie_ocorrencia, 
	ie_tipo_operacao, 
	cd_setor_solicitante, 
	ie_origem_inf, 
	ie_urgente, 
	ie_tipo_material, 
	cd_classe_material, 
	cd_grupo_material, 
	cd_subgrupo_material, 
	hr_atendimento, 
	qt_itens, 
	qt_minutos, 
	cd_medico, 
	cd_motivo_baixa, 
	nm_usuario, 
	dt_atualizacao, 
	cd_centro_custo, 
	cd_local_estoque, 
	cd_pessoa_atendente, 
	cd_pessoa_fisica, 
	cd_material, 
	qt_atendido, 
	nm_usuario_atend, 
	cd_unidade_medida_estoque) 
SELECT	max(ie_periodo_w), 
	dt_parametro_w, 
	c.cd_estabelecimento, 
	ie_ocorrencia_w, 
	ie_tipo_operacao_w, 
	a.cd_setor_atendimento, 
	CASE WHEN coalesce(a.ie_origem_inf,'S')='1' THEN 	'M' WHEN coalesce(a.ie_origem_inf,'S')='3' THEN 	'E'  ELSE 'S' END , 
	coalesce(b.ie_urgencia,'N'), 
	m.ie_tipo_material, 
	m.cd_classe_material, 
	e.cd_grupo_material, 
	e.cd_subgrupo_material, 
	to_char(b.dt_baixa, 'hh24'), 
	count(*) qt_itens, 
	coalesce(CASE WHEN vl_parametro_w='N' THEN  dividir(trunc(trunc((a.dt_baixa - a.dt_emissao_farmacia) * 86400)), 3600) WHEN vl_parametro_w='S' THEN  dividir(trunc(trunc((b.dt_baixa - b.dt_emissao_setor_atend) * 86400)), 3600) END ,0) qt_minutos, 
	a.cd_medico, 
	b.cd_motivo_baixa, 
	nm_usuario_p, 
	clock_timestamp(), 
	s.cd_centro_custo, 
	b.cd_local_estoque, 
	Obter_Dados_Usuario_opcao(b.nm_usuario,'C'), 
	c.cd_pessoa_fisica, 
	e.cd_material, 
	0 qt_atendido, 
	null nm_usuario_atend, 
	m.cd_unidade_medida_estoque 
from	estrutura_material_v e, 
	material m, 
	setor_atendimento s, 
	atendimento_paciente c, 
	prescr_medica a, 
	prescr_material b 
where 	b.nr_prescricao 		= a.nr_prescricao 
and 	a.nr_atendimento		= c.nr_atendimento 
and 	a.cd_setor_atendimento	= s.cd_setor_atendimento 
and 	b.cd_material		= m.cd_material 
and 	b.cd_material		= e.cd_material 
and	b.dt_baixa between dt_parametro_w and dt_parametro_fim_w 
and not exists ( 
	SELECT	1 
	from	material_atend_paciente x 
	where	x.nr_prescricao		= b.nr_prescricao 
	and	x.nr_sequencia_prescricao	= b.nr_sequencia) 
group by dt_parametro_w, 
	c.cd_estabelecimento, 
	ie_ocorrencia_w, 
	ie_tipo_operacao_w, 
	a.cd_setor_atendimento, 
	CASE WHEN coalesce(a.ie_origem_inf,'S')='1' THEN 	'M' WHEN coalesce(a.ie_origem_inf,'S')='3' THEN 	'E'  ELSE 'S' END , 
	b.ie_urgencia, 
	m.ie_tipo_material, 
	m.cd_classe_material, 
	e.cd_grupo_material, 
	e.cd_subgrupo_material, 
	to_char(b.dt_baixa, 'hh24'), 
	a.cd_medico, 
	b.cd_motivo_baixa, 
	s.cd_centro_custo, 
	b.cd_local_estoque, 
	Obter_Dados_Usuario_opcao(b.nm_usuario,'C'), 
	CASE WHEN vl_parametro_w='N' THEN  dividir(trunc(trunc((a.dt_baixa - a.dt_emissao_farmacia) * 86400)), 3600) WHEN vl_parametro_w='S' THEN  dividir(trunc(trunc((b.dt_baixa - b.dt_emissao_setor_atend) * 86400)), 3600) END , 
	c.cd_pessoa_fisica, 
	e.cd_material, 
	m.cd_unidade_medida_estoque 

union all
 
select	max(ie_periodo_w), 
	dt_parametro_w, 
	c.cd_estabelecimento, 
	ie_ocorrencia_w, 
	ie_tipo_operacao_w, 
	a.cd_setor_atendimento, 
	CASE WHEN coalesce(a.ie_origem_inf,'S')='1' THEN 	'M' WHEN coalesce(a.ie_origem_inf,'S')='3' THEN 	'E'  ELSE 'S' END , 
	coalesce(b.ie_urgencia,'N'), 
	m.ie_tipo_material, 
	m.cd_classe_material, 
	e.cd_grupo_material, 
	e.cd_subgrupo_material, 
	to_char(b.dt_baixa, 'hh24'), 
	count(*) qt_itens, 
	coalesce(CASE WHEN vl_parametro_w='N' THEN  dividir(trunc(trunc((a.dt_baixa - a.dt_emissao_farmacia) * 86400)), 3600) WHEN vl_parametro_w='S' THEN  dividir(trunc(trunc((b.dt_baixa - b.dt_emissao_setor_atend) * 86400)), 3600) END ,0) qt_minutos, 
	a.cd_medico, 
	b.cd_motivo_baixa, 
	nm_usuario_p, 
	clock_timestamp(), 
	s.cd_centro_custo, 
	x.cd_local_estoque, 
	Obter_Dados_Usuario_opcao(b.nm_usuario,'C'), 
	c.cd_pessoa_fisica, 
	e.cd_material, 
	sum(x.qt_executada) qt_atendido, 
	x.nm_usuario nm_usuario_atend, 
	m.cd_unidade_medida_estoque 
from	estrutura_material_v e, 
	material m, 
	setor_atendimento s, 
	atendimento_paciente c, 
	prescr_medica a, 
	prescr_material b, 
	material_atend_paciente x 
where 	b.nr_prescricao 		= a.nr_prescricao 
and 	a.nr_atendimento		= c.nr_atendimento 
and 	a.cd_setor_atendimento	= s.cd_setor_atendimento 
and	x.nr_prescricao		= b.nr_prescricao 
and	x.nr_sequencia_prescricao	= b.nr_sequencia 
and 	b.cd_material		= m.cd_material 
and 	b.cd_material		= e.cd_material 
and	b.dt_baixa between dt_parametro_w and dt_parametro_fim_w 
and	(x.dt_prescricao IS NOT NULL AND x.dt_prescricao::text <> '') 
and	(x.nr_prescricao IS NOT NULL AND x.nr_prescricao::text <> '') 
and	(x.nr_sequencia_prescricao IS NOT NULL AND x.nr_sequencia_prescricao::text <> '') 
group by dt_parametro_w, 
	c.cd_estabelecimento, 
	ie_ocorrencia_w, 
	ie_tipo_operacao_w, 
	a.cd_setor_atendimento, 
	CASE WHEN coalesce(a.ie_origem_inf,'S')='1' THEN 	'M' WHEN coalesce(a.ie_origem_inf,'S')='3' THEN 	'E'  ELSE 'S' END , 
	b.ie_urgencia, 
	m.ie_tipo_material, 
	m.cd_classe_material, 
	e.cd_grupo_material, 
	e.cd_subgrupo_material, 
	to_char(b.dt_baixa, 'hh24'), 
	a.cd_medico, 
	b.cd_motivo_baixa, 
	s.cd_centro_custo, 
	x.cd_local_estoque, 
	Obter_Dados_Usuario_opcao(b.nm_usuario,'C'), 
	CASE WHEN vl_parametro_w='N' THEN  dividir(trunc(trunc((a.dt_baixa - a.dt_emissao_farmacia) * 86400)), 3600) WHEN vl_parametro_w='S' THEN  dividir(trunc(trunc((b.dt_baixa - b.dt_emissao_setor_atend) * 86400)), 3600) END , 
	c.cd_pessoa_fisica, 
	e.cd_material, 
	x.nm_usuario, 
	m.cd_unidade_medida_estoque;
			 
commit;
 
 
/* acumular Execução da Prescrição */
 
ie_ocorrencia_w		:= 'E';
ie_tipo_operacao_w	:= 'C';
insert into eis_atendimento_mat( 
	ie_periodo, 
	dt_referencia, 
	cd_estabelecimento, 
	ie_ocorrencia, 
	ie_tipo_operacao, 
	cd_setor_solicitante, 
	ie_origem_inf, 
	ie_urgente, 
	ie_tipo_material, 
	cd_classe_material, 
	cd_grupo_material, 
	cd_subgrupo_material, 
	hr_atendimento, 
	qt_itens, 
	qt_minutos, 
	cd_medico, 
	cd_motivo_baixa, 
	nm_usuario, 
	dt_atualizacao, 
	cd_centro_custo, 
	cd_local_estoque, 
	cd_pessoa_atendente, 
	cd_pessoa_fisica, 
	cd_material, 
	qt_atendido, 
	nm_usuario_atend, 
	cd_unidade_medida_estoque) 
SELECT	max(ie_periodo_w), 
	dt_parametro_w, 
	obter_estab_atend(x.nr_atendimento), 
	ie_ocorrencia_w, 
	ie_tipo_operacao_w, 
	x.cd_setor_atendimento, 
	'S', 
	'N', --porque na execução não tem o registro de urgente 
	m.ie_tipo_material, 
	m.cd_classe_material, 
	e.cd_grupo_material, 
	e.cd_subgrupo_material, 
	to_char(x.dt_atendimento, 'hh24'), 
	count(*) qt_itens, 
	0 qt_minutos, -- zero porque na execução o atendimento é no mesmo momento  
	c.cd_medico_resp, 
	null cd_motivo_baixa, -- nulo porque na execução não tem motivo de baixa 
	nm_usuario_p, 
	clock_timestamp(), 
	s.cd_centro_custo, 
	x.cd_local_estoque, 
	Obter_Dados_Usuario_Opcao(x.nm_usuario,'C'), 
	c.cd_pessoa_fisica, 
	e.cd_material, 
	sum(x.qt_executada) qt_atendido, 
	x.nm_usuario nm_usuario_atend, 
	m.cd_unidade_medida_estoque 
FROM material m, estrutura_material_v e, atendimento_paciente c, material_atend_paciente x
LEFT OUTER JOIN setor_atendimento s ON (x.cd_setor_atendimento = s.cd_setor_atendimento)
WHERE coalesce(x.dt_prescricao::text, '') = '' -- porque na execução não tem data da prescricao 
  and coalesce(x.nr_prescricao::text, '') = '' and coalesce(x.nr_sequencia_prescricao::text, '') = '' and x.dt_atendimento between dt_parametro_w and dt_parametro_fim_w and x.cd_material		= e.cd_material and x.nr_atendimento		= c.nr_atendimento and x.cd_material		= m.cd_material  group by 
	dt_parametro_w, 
	obter_estab_atend(x.nr_atendimento), 
	ie_ocorrencia_w, 
	ie_tipo_operacao_w, 
	x.cd_setor_atendimento, 
	'S', 
	m.ie_tipo_material, 
	m.cd_classe_material, 
	e.cd_grupo_material, 
	e.cd_subgrupo_material, 
	to_char(x.dt_atendimento, 'hh24'), 
	c.cd_medico_resp, 
	s.cd_centro_custo, 
	x.cd_local_estoque, 
	Obter_Dados_Usuario_Opcao(x.nm_usuario,'C'), 
	c.cd_pessoa_fisica, 
	e.cd_material, 
	x.nm_usuario, 
	m.cd_unidade_medida_estoque;
commit;
 
 
/* acumular Requisição Material consumo por setor */
 
ie_ocorrencia_w		:= 'R';
ie_tipo_operacao_w	:= 'C';
insert into eis_atendimento_mat( 
	ie_periodo, 
	dt_referencia, 
	cd_estabelecimento, 
	ie_ocorrencia, 
	ie_tipo_operacao, 
	cd_setor_solicitante, 
	ie_origem_inf, 
	ie_urgente, 
	ie_tipo_material, 
	cd_classe_material,	 
	cd_grupo_material, 
	cd_subgrupo_material, 
	hr_atendimento, 
	qt_itens, 
	qt_minutos, 
	cd_medico, 
	cd_motivo_baixa, 
	nm_usuario, 
	dt_atualizacao, 
	cd_centro_custo, 
	cd_local_estoque, 
	cd_pessoa_atendente, 
	cd_material, 
	cd_operacao_estoque) 
SELECT	ie_periodo_w, 
	dt_parametro_w, 
	b.cd_estabelecimento, 
	ie_ocorrencia_w, 
	ie_tipo_operacao_w, 
	b.cd_setor_atendimento, 
	'S', 
	coalesce(b.ie_urgente,'N'), 
	m.ie_tipo_material, 
	e.cd_classe_material, 
	e.cd_grupo_material, 
	e.cd_subgrupo_material, 
	to_char(a.dt_atendimento, 'hh24'), 
	count(*) qt_itens, 
	coalesce(dividir(trunc(trunc((b.dt_baixa - b.dt_emissao_loc_estoque) * 86400)), 3600),0) qt_minutos, 
	null, 
	a.cd_motivo_baixa, 
	nm_usuario_p, 
	clock_timestamp(), 
	b.cd_centro_custo, 
	b.cd_local_estoque, 
	a.cd_pessoa_atende, 
	e.cd_material, 
	b.cd_operacao_estoque 
from 	estrutura_Material_v e, 
	Material m, 
	Requisicao_material b, 
	Item_Requisicao_Material a 
where	a.nr_requisicao 		= b.nr_requisicao 
and	a.cd_material		= e.cd_material 
and	a.cd_material		= m.cd_material 
and	a.dt_atendimento between dt_parametro_w and dt_parametro_fim_w 
and	(b.cd_centro_custo IS NOT NULL AND b.cd_centro_custo::text <> '') 
group by	b.cd_estabelecimento, 
	b.cd_setor_atendimento, 
	coalesce(b.ie_urgente,'N'), 
	m.ie_tipo_material, 
	e.cd_classe_material, 
	e.cd_grupo_material, 
	e.cd_subgrupo_material, 
	to_char(a.dt_atendimento, 'hh24'), 
	a.cd_motivo_baixa, 
	b.cd_centro_custo, 
	b.cd_local_estoque, 
	a.cd_pessoa_atende, 
	b.dt_baixa, 
	b.dt_emissao_loc_estoque, 
	e.cd_material, 
	b.cd_operacao_estoque;
commit;
 
/* acumular Requisição Material Transferencias */
 
ie_ocorrencia_w		:= 'R';
ie_tipo_operacao_w	:= 'T';
insert into eis_atendimento_mat( 
	ie_periodo, 
	dt_referencia, 
	cd_estabelecimento, 
	ie_ocorrencia, 
	ie_tipo_operacao, 
	cd_setor_solicitante, 
	ie_origem_inf, 
	ie_urgente, 
	ie_tipo_material, 
	cd_classe_material,	 
	cd_grupo_material, 
	cd_subgrupo_material, 
	hr_atendimento, 
	qt_itens, 
	qt_minutos, 
	cd_medico, 
	cd_motivo_baixa, 
	nm_usuario, 
	dt_atualizacao, 
	cd_centro_custo, 
	cd_local_estoque, 
	cd_local_destino, 
	cd_pessoa_atendente, 
	cd_material, 
	cd_operacao_estoque) 
SELECT	ie_periodo_w, 
	dt_parametro_w, 
	b.cd_estabelecimento, 
	ie_ocorrencia_w, 
	ie_tipo_operacao_w, 
	b.cd_setor_atendimento, 
	'S', 
	coalesce(b.ie_urgente,'N'), 
	m.ie_tipo_material, 
	e.cd_classe_material, 
	e.cd_grupo_material, 
	e.cd_subgrupo_material, 
	to_char(a.dt_atendimento, 'hh24'), 
	count(*) qt_itens, 
	coalesce(dividir(trunc(trunc((b.dt_baixa - b.dt_emissao_loc_estoque) * 86400)), 3600),0) qt_minutos, 
	null, 
	a.cd_motivo_baixa, 
	nm_usuario_p, 
	clock_timestamp(), 
	b.cd_centro_custo, 
	b.cd_local_estoque, 
	b.cd_local_estoque_destino, 
	a.cd_pessoa_atende, 
	e.cd_material, 
	b.cd_operacao_estoque 
from	Estrutura_Material_v e, 
	Material m, 
	operacao_estoque o, 
	Requisicao_material b, 
	Item_Requisicao_Material a 
where	a.nr_requisicao 		= b.nr_requisicao 
and	a.cd_material		= e.cd_material 
and	a.cd_material		= m.cd_material 
and	a.dt_atendimento between dt_parametro_w and dt_parametro_fim_w 
and	b.cd_operacao_estoque	= o.cd_operacao_estoque 
and	o.ie_entrada_saida	= 'S' 
and	(b.cd_local_estoque_destino IS NOT NULL AND b.cd_local_estoque_destino::text <> '') 
group by	b.cd_estabelecimento, 
	b.cd_setor_atendimento, 
	coalesce(b.ie_urgente,'N'), 
	m.ie_tipo_material, 
	e.cd_classe_material, 
	e.cd_grupo_material, 
	e.cd_subgrupo_material, 
	to_char(a.dt_atendimento, 'hh24'), 
	a.cd_motivo_baixa, 
	b.cd_local_estoque, 
	b.cd_centro_custo, 
	a.cd_pessoa_atende, 
	b.cd_local_estoque_destino, 
	b.dt_baixa, 
	b.dt_emissao_loc_estoque, 
	e.cd_material, 
	b.cd_operacao_estoque;
commit;
 
 
/* acumular para o mes */
 
if (NM_USUARIO_P <> 'CARGA') or (dt_parametro_w = last_day(dt_parametro_w)) then 
	begin 
	dt_parametro_w		:= Trunc(dt_parametro_w,'month');
	ie_periodo_w		:= 'M';
	delete 
	from	Eis_Atendimento_Mat 
	where	dt_referencia 	= dt_parametro_w 
	and	ie_periodo	= ie_periodo_w;
 
	commit;
 
	insert into Eis_Atendimento_Mat( 
		ie_periodo, 
		dt_referencia, 
		cd_estabelecimento, 
		ie_ocorrencia, 
		ie_tipo_operacao, 
		cd_setor_solicitante, 
		ie_origem_inf, 
		ie_urgente, 
		ie_tipo_material, 
		cd_classe_material, 
		cd_grupo_material, 
		cd_subgrupo_material, 
		hr_atendimento, 
		qt_itens, 
		qt_minutos, 
		cd_medico, 
		cd_motivo_baixa, 
		nm_usuario, 
		dt_atualizacao, 
		cd_centro_custo, 
		cd_local_estoque, 
		cd_local_destino, 
		cd_pessoa_atendente, 
		cd_material, 
		qt_atendido, 
		nm_usuario_atend, 
		cd_unidade_medida_estoque, 
		cd_operacao_estoque, 
		cd_pessoa_fisica) 
	SELECT	ie_periodo_w, 
		dt_parametro_w, 
		cd_estabelecimento, 
		ie_ocorrencia, 
		ie_tipo_operacao, 
		cd_setor_solicitante, 
		ie_origem_inf, 
		ie_urgente, 
		ie_tipo_material, 
		cd_classe_material, 
		cd_grupo_material, 
		cd_subgrupo_material, 
		hr_atendimento, 
		sum(qt_itens), 
		sum(qt_minutos), 
		cd_medico, 
		cd_motivo_baixa, 
		nm_usuario_p, 
		clock_timestamp(), 
		cd_centro_custo, 
		cd_local_estoque, 
		cd_local_destino, 
		cd_pessoa_atendente, 
		cd_material, 
		sum(qt_atendido), 
		nm_usuario_atend, 
		cd_unidade_medida_estoque, 
		cd_operacao_estoque, 
		cd_pessoa_fisica 
   	from 	Eis_Atendimento_Mat 
   	where	ie_periodo 		= 'D' 
	and	dt_referencia between dt_parametro_w and last_Day(dt_parametro_w) 
	group by 
		cd_estabelecimento, 
		ie_ocorrencia, 
		ie_tipo_operacao, 
		cd_setor_solicitante, 
		ie_origem_inf, 
		ie_urgente, 
		ie_tipo_material, 
		cd_classe_material, 
		cd_grupo_material, 
		cd_subgrupo_material, 
		hr_atendimento, 
		cd_medico, 
		cd_motivo_baixa, 
		cd_centro_custo, 
		cd_local_estoque, 
		cd_local_destino, 
		cd_pessoa_atendente, 
		cd_material, 
		nm_usuario_atend, 
		cd_unidade_medida_estoque, 
		cd_operacao_estoque, 
		cd_pessoa_fisica;
	commit;
	end;
end if;
/*if	(NM_USUARIO_P <> 'CARGA') then 
	begin 
	delete from eis_atendimento_mat 
	where ie_periodo = 'D' 
	and dt_referencia < sysdate - 90; 
	end; 
end if; 
*/
 
--Insert into Log_xxxTasy values (sysdate, 'Tasy', 602, 'Atendimento_Material'); 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_atendimento_mat ( dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

