-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_gerar_ciclo_atend_ativ ( nr_seq_partic_ciclo_item_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Inserir registro na tabela - MPREV_PART_CIC_ITEM_ATIV
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------

Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_atividade_w		mprev_atividade_plano.nr_sequencia%type;
nr_seq_ativ_plano_aval_w	mprev_ativ_plano_aval.nr_sequencia%type;
nr_seq_ativ_plano_exame_w	mprev_ativ_plano_exame.nr_sequencia%type;
nr_seq_proc_interno_w		mprev_ativ_plano_proc.nr_sequencia%type;
ie_tipo_atividade_w		mprev_atividade_plano.ie_tipo_atividade%type;
nr_seq_atividade_plano_w	mprev_atividade_plano.nr_sequencia%type;
nr_seq_plano_atend_item_w	mprev_plano_atend_item.nr_sequencia%type;

c00 CURSOR FOR
	SELECT	y.nr_seq_atividade_plano,
		z.ie_tipo_atividade
	from	mprev_plano_atend_it_ativ y,
		mprev_atividade_plano z
	where	y.nr_seq_atividade_plano = z.nr_sequencia
	and	y.nr_seq_plano_atend_item = nr_seq_plano_atend_item_w;

c02 CURSOR FOR
	SELECT	nr_sequencia
	from	mprev_ativ_plano_exame
	where	nr_seq_atividade = nr_seq_atividade_plano_w;

c03 CURSOR FOR
	SELECT	nr_sequencia		
	from	mprev_ativ_plano_aval
	where	nr_seq_atividade = nr_seq_atividade_plano_w;
	
c04 CURSOR FOR
	SELECT	nr_seq_proc_interno
	from	mprev_ativ_plano_proc
	where 	nr_seq_atividade = nr_seq_atividade_plano_w;


BEGIN

select	nr_seq_plano_atend_item
into STRICT	nr_seq_plano_atend_item_w
from	mprev_partic_ciclo_item
where	nr_sequencia = nr_seq_partic_ciclo_item_p;

open c00;
loop
fetch c00 into	
	nr_seq_atividade_plano_w,
	ie_tipo_atividade_w;
EXIT WHEN NOT FOUND; /* apply on c00 */	
	if (ie_tipo_atividade_w = 'E') then
		open c02;
		loop
		fetch c02 into
			nr_seq_ativ_plano_exame_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */	
			insert into	mprev_part_cic_item_ativ(nr_sequencia,
					nm_usuario, 
					dt_atualizacao,
					dt_executado_sistema, 
					ie_gerado_sistema, 
					nr_seq_partic_ciclo_item,
					nr_seq_atividade, 
					nr_seq_ativ_plano_aval, 
					nr_seq_ativ_plano_exame,
					nr_seq_proc_interno)
			values (nextval('mprev_part_cic_item_ativ_seq'), 
					nm_usuario_p, 
					clock_timestamp(),
					null,
					'S', 
					nr_seq_partic_ciclo_item_p,
					nr_seq_atividade_plano_w, 
					null, 
					nr_seq_ativ_plano_exame_w,
					null);
		end loop;
		close c02;
	elsif (ie_tipo_atividade_w = 'A') then
		open c03;
		loop
		fetch c03 into
			nr_seq_ativ_plano_aval_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */	
			insert into mprev_part_cic_item_ativ(nr_sequencia,
						nm_usuario,
						dt_atualizacao,
						dt_executado_sistema,
						ie_gerado_sistema, 
						nr_seq_partic_ciclo_item,
						nr_seq_atividade, 
						nr_seq_ativ_plano_aval, 
						nr_seq_ativ_plano_exame,
						nr_seq_proc_interno)
			values (nextval('mprev_part_cic_item_ativ_seq'), 
						nm_usuario_p,
						clock_timestamp(),
						null, 
						'S', 
						nr_seq_partic_ciclo_item_p,
						nr_seq_atividade_plano_w, 
						nr_seq_ativ_plano_aval_w,
						null,
						null);
		end loop;
		close c03;	
	elsif (ie_tipo_atividade_w = 'O') then
		insert into	mprev_part_cic_item_ativ(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				dt_executado_sistema,
				ie_gerado_sistema, 
				nr_seq_partic_ciclo_item,
				nr_seq_atividade, 
				nr_seq_ativ_plano_aval, 
				nr_seq_ativ_plano_exame,
				nr_seq_proc_interno)
		values (nextval('mprev_part_cic_item_ativ_seq'), 
					nm_usuario_p, 
					clock_timestamp(),
					null, 
					'S', 
					nr_seq_partic_ciclo_item_p,
					nr_seq_atividade_plano_w, 
					null, 
					null,
					null);
	elsif (ie_tipo_atividade_w = 'P') then
		open c04;
		loop
		fetch c04 into
			nr_seq_proc_interno_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */	
		insert into mprev_part_cic_item_ativ(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				dt_executado_sistema,
				ie_gerado_sistema, 
				nr_seq_partic_ciclo_item,
				nr_seq_atividade, 
				nr_seq_ativ_plano_aval, 
				nr_seq_ativ_plano_exame,
				nr_seq_proc_interno)
		values (nextval('mprev_part_cic_item_ativ_seq'),
				nm_usuario_p,
				clock_timestamp(),
				null,
				'S',
				nr_seq_partic_ciclo_item_p,
				nr_seq_atividade_plano_w,
				null,
				null,
				nr_seq_proc_interno_w);
		end loop;
		close c04;
	end if;
end loop;
close c00;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_gerar_ciclo_atend_ativ ( nr_seq_partic_ciclo_item_p bigint, nm_usuario_p text) FROM PUBLIC;

