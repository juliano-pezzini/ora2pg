-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_proc_regra_agenda_cons ( cd_agenda_p bigint, nr_seq_agenda_p bigint, ie_classif_agenda_p text, cd_convenio_p bigint, cd_categoria_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_proc_interno_w	bigint;
nr_sequencia_w		bigint;
cd_agenda_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_proc_gerado_w	bigint;
qt_procedimento_w	bigint;
ie_executar_proc_w	agenda_regra_proced.ie_executar_proc%type;
ie_gerar_ind_w		agenda_regra_proced.IE_GERAR_INDIVIDUAL%type;
counter_w			bigint;

c01 CURSOR FOR
	SELECT	nr_seq_proc_interno,
		qt_proced,
		ie_executar_proc,
		coalesce(IE_GERAR_INDIVIDUAL,'N')
	from	agenda_regra_proced
	where	cd_agenda = cd_agenda_p
	and		coalesce(coalesce(cd_convenio,cd_convenio_p),'0') = coalesce(cd_convenio_p,'0')
	and		coalesce(coalesce(ie_classif_agenda,ie_classif_agenda_p),'X') = coalesce(ie_classif_agenda_p,'X')
    order by cd_convenio;


BEGIN

open c01;
loop
fetch c01 into nr_seq_proc_interno_w,
		qt_procedimento_w,
		ie_executar_proc_w,
		ie_gerar_ind_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		/* verificar se procedimento ja gerado */

		select	count(*)
		into STRICT	qt_proc_gerado_w
		from	agenda_consulta_proc
		where	nr_seq_agenda 		= nr_seq_agenda_p
		and	nr_seq_proc_interno 	= nr_seq_proc_interno_w;

		if (qt_proc_gerado_w = 0) then
			/* Codigo do procedimento e origem */

			SELECT * FROM obter_proc_tab_interno_conv(
						nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, null, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;

			

			
			if (ie_gerar_ind_w = 'S') and (qt_procedimento_w > 1) and (qt_procedimento_w < 11) then

				counter_w := 0;					
				while(counter_w < qt_procedimento_w) loop

				/* Sequencia da tabela agenda_consulta_proc */

				select	nextval('agenda_consulta_proc_seq')
				into STRICT	nr_sequencia_w
			;

				insert into agenda_consulta_proc(
					nr_sequencia,
					nr_seq_agenda,
					cd_procedimento,
					ie_origem_proced,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_proc_interno,
					ie_executar_proc,
					qt_procedimento,
          				ie_gerado_regra)
				values (
					nr_sequencia_w,
					nr_seq_agenda_p,
					cd_procedimento_w,
					ie_origem_proced_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_proc_interno_w,
					coalesce(ie_executar_proc_w,'S'),
					1,
          				'S');

				counter_w := counter_w + 1;
				end loop;

			else
				/* Sequencia da tabela agenda_consulta_proc */

				select	nextval('agenda_consulta_proc_seq')
				into STRICT	nr_sequencia_w
				;

				/* Inserir dados na tabela agenda_consulta_proc */

				insert into agenda_consulta_proc(
					nr_sequencia,
					nr_seq_agenda,
					cd_procedimento,
					ie_origem_proced,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_proc_interno,
					ie_executar_proc,
					qt_procedimento,
          				ie_gerado_regra)
				values (
					nr_sequencia_w,
					nr_seq_agenda_p,
					cd_procedimento_w,
					ie_origem_proced_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_proc_interno_w,
					coalesce(ie_executar_proc_w,'S'),
					qt_procedimento_w,
          				'S');

			end if;
		end if;
	end if;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_proc_regra_agenda_cons ( cd_agenda_p bigint, nr_seq_agenda_p bigint, ie_classif_agenda_p text, cd_convenio_p bigint, cd_categoria_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

