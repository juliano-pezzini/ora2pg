-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_imp_fatura_v110a ( ds_conteudo_p text, ie_tipo_arquivo_p bigint, cd_estabelecimento_p bigint, nr_linha_p bigint, nm_usuario_p text, nr_seq_fatura_p INOUT bigint, nr_seq_fat_imp_p INOUT ptu_fatura.nr_sequencia%type) AS $body$
DECLARE

/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	ESTA ROTINA FAZ A IMPORTACAO DOS DADOS DO A500 PTU 10.0a
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[X]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ds_registro_w			varchar(3);
--'501'
cd_unimed_destino_w		varchar(4);
cd_unimed_origem_w		varchar(4);
cd_unimed_origem_numb_w		bigint;
vl_total_fatura_w		double precision;
vl_ir_w				double precision;
nr_fatura_w			ptu_fatura.nr_fatura%type;
nr_seq_fatura_exist_w		bigint;
cd_unimed_operadora_w		bigint;
nr_competencia_w		smallint;
nr_versao_transacao_w		smallint;
dt_geracao_w			timestamp;
dt_vencimento_fatura_w		timestamp;
dt_emissao_fatura_w		timestamp;
dt_recebimento_w		timestamp;
dt_recebimento_fat_w		timestamp;
ie_classif_cobranca_w		varchar(1);
nr_nota_credito_debito_w	varchar(30);
dt_vencimento_ndc_w		timestamp;
dt_emissao_ndc_w		timestamp;
vl_total_ndc_w			double precision;
tp_documento_1_w		smallint;
tp_documento_2_w		smallint;
doc_fiscal_1_w			ptu_fatura.doc_fiscal_1%type;
doc_fiscal_2_w			ptu_fatura.doc_fiscal_2%type;

--'502'
nm_beneficiario_w		varchar(25);
cd_usuario_plano_w		varchar(13);
cd_cid_w			varchar(6);
ie_tipo_atendimento_w		varchar(2);
cd_excecao_w			varchar(1);
ie_carater_atendimento_w	varchar(1);
ie_paciente_w			varchar(1);
ie_tipo_saida_spdat_w		varchar(1);
nr_nota_w			ptu_nota_cobranca.nr_nota%type;
nr_guia_principal_w		ptu_nota_cobranca.nr_guia_principal%type;
nr_seq_fatura_w			bigint	:= null;
nr_lote_w			integer;
cd_unimed_w			smallint;
dt_atendimento_w		timestamp;
dt_atendimento_ww		timestamp;
tp_consulta_w			ptu_nota_cobranca.tp_consulta%type;

dt_internacao_w			timestamp;
dt_alta_w			timestamp;
dt_ultima_autoriz_w		timestamp;
tp_nota_w			smallint;
id_nota_principal_w		varchar(1);
nr_ver_tiss_w			varchar(7);
nr_guia_tiss_prestador_w	varchar(20);
nr_guia_tiss_principal_w	varchar(20);
nr_guia_tiss_operadora_w	varchar(20);
tp_ind_acidente_w		varchar(1);
motivo_encerram_w		varchar(2);
nr_cnpj_cpf_req_w		varchar(14);
nm_prest_req_w			varchar(60);
sg_cons_prof_req_w		varchar(12);
nr_cons_prof_req_w		varchar(15);
sg_uf_cons_req_w		varchar(2);
nr_cbo_req_w			integer;
nr_fatura_glosada_w		ptu_nota_cobranca.nr_fatura_glosada%type;
nr_ndr_glosada_w		ptu_nota_cobranca.nr_ndr_glosada%type;
nr_lote_glosado_w		integer;
nr_nota_glosada_w		varchar(20);
dt_protocolo_w			timestamp;
id_rn_w				varchar(1);
tp_pessoa_w			ptu_nota_cobranca.tp_pessoa%type;
nr_cnpj_cpf_w			ptu_nota_cobranca.nr_cnpj_cpf%type;
cd_cnes_cont_exec_w		ptu_nota_cobranca.cd_cnes_cont_exec%type;
cd_munic_cont_exec_w		ptu_nota_cobranca.cd_munic_cont_exec%type;
id_liminar_w			ptu_nota_cobranca.id_liminar%type;
tipo_rede_min_w			ptu_nota_cobranca.tipo_rede_min%type;

nm_prest_exec_w			ptu_nota_cobranca.nm_prest_exec%type;
tp_prest_exec_w			ptu_nota_cobranca.tp_prest_exec%type;
nr_lote_prest_w			ptu_nota_cobranca.nr_lote_prest%type;
dt_conhecimento_w		ptu_nota_cobranca.dt_conhecimento%type;
cd_cid_obito_cobr_w		ptu_nota_cobranca.cd_cid_obito%type;
id_rec_proprio_w		ptu_nota_cobranca.id_rec_proprio%type;
id_continuado_w			ptu_nota_cobranca.id_continuado%type;
id_aviso_w			ptu_nota_cobranca.id_aviso%type;
nr_seq_aviso_conta_w		ptu_aviso_conta.nr_sequencia%type;
nr_seq_aviso_procedimento_w	ptu_aviso_procedimento.nr_sequencia%type;
nr_seq_aviso_material_w		ptu_aviso_material.nr_sequencia%type;

--'503'
nm_hospital_w			varchar(60);
nr_declara_obito_w		varchar(17);
nr_declara_obito_1_w		varchar(17);
nr_declara_obito_2_w		varchar(17);
nr_declara_obito_3_w		varchar(17);
nr_declara_obito_4_w		varchar(17);
nr_declara_obito_5_w		varchar(17);
nr_declara_vivo_1_w		varchar(15);
nr_declara_vivo_2_w		varchar(15);
nr_declara_vivo_3_w		varchar(15);
nr_declara_vivo_4_w		varchar(15);
nr_declara_vivo_5_w		varchar(15);
cd_cid_obito_w			varchar(6);
cd_cid_obito_1_w		varchar(6);
cd_cid_obito_2_w		varchar(6);
cd_cid_obito_3_w		varchar(6);
cd_cid_obito_4_w		varchar(6);
cd_cid_obito_5_w		varchar(6);
ie_tipo_acomodacao_w		varchar(2);
ie_faturamento_w		varchar(1);
cd_cgc_hospital_w		bigint;
nr_nota_503_w			ptu_nota_hospitalar.nr_nota%type;
nr_seq_hospitalar_w		bigint;
nr_seq_cobranca_w		bigint;
nr_lote_503_w			integer;
cd_hospital_w			integer;
tx_mult_amb_w			real;
cd_unimed_hospital_w 		smallint;
ie_tipo_internacao_w		smallint;
reg_internacao_w		smallint;
nm_medico_auditor_w		varchar(40);
nr_crm_auditor_w		varchar(15);
nm_enfer_auditor_w		varchar(40);
nr_coren_auditor_w		varchar(15);
cd_uf_crm_w			varchar(2);
cd_uf_coren_w			varchar(2);
qt_nasc_vivos_w			smallint;
qt_nasc_mortos_w		smallint;
qt_nasc_vivos_pre_w		smallint;
qt_obito_precoce_w		smallint;
qt_obito_tardio_w		smallint;
ie_int_gestacao_w		varchar(1);
ie_int_aborto_w			varchar(1);
ie_int_transtorno_w		varchar(1);
ie_int_comp_puerperio_w		varchar(1);
ie_int_atend_parto_w		varchar(1);
ie_int_compl_neonatal_w		varchar(1);
ie_int_baixo_peso_w		varchar(1);
ie_int_parto_cesaria_w		varchar(1);
ie_int_parto_normal_w		varchar(1);

--'504'
ds_servico_w			varchar(80);
nm_prestador_w			varchar(70);
nm_profissional_prestador_w 	varchar(60);
nr_cons_prof_prest_w		varchar(15);
sg_cons_prof_prest_w		varchar(12);
ds_hora_procedimento_w		varchar(10);
cd_cnes_prest_w			varchar(7);
ie_tipo_prestador_w		varchar(2);
sg_uf_cons_prest_w		varchar(2);
ie_tipo_participacao_w		varchar(1);
cd_porte_anestesico_w		varchar(1);
cd_unimed_autorizadora_w	varchar(1);
ie_rede_propria_w		varchar(1);
ie_tipo_pessoa_prestador_w	varchar(1);
ie_pacote_w			varchar(1);
cd_ato_w			varchar(1);
ie_reembolso_w			varchar(1);
nr_cgc_cpf_w			varchar(14);
vl_procedimento_w		double precision;
vl_custo_operacional_w		double precision;
vl_filme_w			double precision;
vl_adic_procedimento_w		double precision;
vl_adic_co_w			double precision;
vl_adic_filme_w			double precision;
vl_pago_prest_w			ptu_nota_servico.vl_pago_prest%type;
nr_nota_504_w			ptu_nota_servico.nr_nota%type;
nr_seq_nota_w			bigint;
ie_origem_proced_w		bigint;
nr_autorizacao_w		bigint;
nr_seq_a500_w			bigint;
ie_origem_proced_conv_w		bigint;
ie_origem_proced_padrao_w	procedimento.ie_origem_proced%type;
nr_seq_regra_conv_w		bigint;
nr_seq_material_w		bigint;
qt_material_w			bigint;
nr_lote_504_w			integer;
cd_prestador_w			integer;
cd_procedimento_w		integer;
qt_procedimento_w		ptu_nota_servico.qt_procedimento%type;
cd_prestador_req_w		integer;
cd_proc_conversao_w		integer;
cd_pacote_w			integer;
cd_servico_w			ptu_nota_servico.cd_servico%type;
cd_unimed_prestador_w		smallint;
cd_unimed_pre_req_w		smallint;
tx_procedimento_w		double precision;
ie_via_acesso_w			smallint;
cd_especialidade_w		smallint;
ie_tipo_tabela_w		smallint;
tp_autoriz_w			smallint;
dt_procedimento_w		timestamp;
ie_alto_custo_w			varchar(1) := 'N';
hr_final_w			varchar(8);
id_acres_urg_emer_w		varchar(1);
nr_cbo_exec_w			integer;
tec_utilizada_w			smallint;
dt_autoriz_w			timestamp;
dt_solicitacao_w		timestamp;
unidade_medida_w		varchar(3);
nr_reg_anvisa_w			varchar(15);
cd_munic_w			varchar(7);
cd_ref_material_fab_w		ptu_nota_servico.cd_ref_material_fab%type;
cd_rec_prestador_w		ptu_nota_servico.cd_rec_prestador%type;
dt_pgto_prestador_w		timestamp;
qt_regra_w			bigint := 0;

nr_seq_nota_servico_w		bigint;
nr_seq_prest_inter_w		pls_prestador_intercambio.nr_sequencia%type;
nr_seq_prestador_w   		pls_prestador.nr_sequencia%type;
cd_cgc_prestador_w		varchar(14);
nr_cpf_prestador_w		varchar(11);
nr_cnpj_fornecedor_w		varchar(14);

id_pag_forn_w			ptu_nota_servico.id_pag_forn%type;
nm_fornecedor_w			ptu_nota_servico.nm_fornecedor%type;
det_reg_anvisa_w		ptu_nota_servico.det_reg_anvisa%type;
nr_nota_fiscal_forn_w		ptu_nota_servico.nr_nota_fiscal_forn%type;
cd_ref_material_fab_opme_w	ptu_nota_servico.cd_ref_material_fab_opme%type;
id_aviso_item_w			ptu_nota_servico.id_aviso_item%type;

--'505'
ds_complemento_w		varchar(100);
nr_nota_505_w			ptu_nota_complemento.nr_nota%type;
nr_lote_505_w			integer;
ie_tipo_complemento_w		smallint;
especif_material_w		varchar(500);

--'506'
ds_link_nfe_w			varchar(120);
nr_nota_fiscal_w		varchar(20);
nr_nota_fiscal_doc2_w		ptu_nota_fiscal.nr_nota_fiscal_doc2%type;
ds_link_nfe_doc2_w		ptu_nota_fiscal.ds_link_nfe_doc2%type;

-- '507'
nr_lote_507_w			ptu_nota_cobranca_rrs.nr_lote%type;
nr_nota_507_w			ptu_nota_cobranca_rrs.nr_nota%type;
cd_unimed_507_w			ptu_nota_cobranca_rrs.cd_unimed%type;
id_benef_507_w			ptu_nota_cobranca_rrs.id_benef%type;
nm_beneficiario_507_w		ptu_nota_cobranca_rrs.nm_beneficiario%type;
dt_nasc_507_w			ptu_nota_cobranca_rrs.dt_nasc%type;
tp_sexo_507_w			ptu_nota_cobranca_rrs.tp_sexo%type;
id_rn_507_w			ptu_nota_cobranca_rrs.id_rn%type;
dt_reembolso_507_w		ptu_nota_cobranca_rrs.dt_reembolso%type;
tp_carater_atend_507_w		ptu_nota_cobranca_rrs.tp_carater_atend%type;
tp_pessoa_507_w			ptu_nota_cobranca_rrs.tp_pessoa%type;
nr_cnpj_cpf_507_w		ptu_nota_cobranca_rrs.nr_cnpj_cpf%type;
nm_prestador_507_w		ptu_nota_cobranca_rrs.nm_prestador%type;
id_reembolso_sus_507_w		ptu_nota_cobranca_rrs.id_reembolso_sus%type;
nr_seq_cobranca_rrs_w		ptu_nota_cobranca_rrs.nr_sequencia%type;
id_reem_par_int_w		ptu_nota_cobranca_rrs.id_reem_par_int%type;
cd_cnes_w			ptu_nota_cobranca_rrs.cd_cnes%type;

-- 508
nr_lote_508_w			ptu_nota_servico_rrs.nr_lote%type;
nr_nota_508_w			ptu_nota_servico_rrs.nr_nota%type;
dt_servico_508_w		ptu_nota_servico_rrs.dt_servico%type;
nm_profissional_508_w		ptu_nota_servico_rrs.nm_profissional%type;
sg_cons_prof_508_w		ptu_nota_servico_rrs.sg_cons_prof%type;
nr_cons_prof_508_w		ptu_nota_servico_rrs.nr_cons_prof%type;
sg_uf_cons_prof_508_w		ptu_nota_servico_rrs.sg_uf_cons_prof%type;
tp_particip_508_w		ptu_nota_servico_rrs.tp_particip%type;
tp_tabela_508_w			ptu_nota_servico_rrs.tp_tabela%type;
cd_servico_508_w		ptu_nota_servico_rrs.cd_servico%type;
qt_cobrada_508_w		ptu_nota_servico_rrs.qt_cobrada%type;
vl_dif_vl_inter_508_w		ptu_nota_servico_rrs.vl_dif_vl_inter%type;
vl_serv_cob_508_w		ptu_nota_servico_rrs.vl_serv_cob%type;
nr_autoriz_508_w		ptu_nota_servico_rrs.nr_autoriz%type;
nr_seq_a500_508_w		ptu_nota_servico_rrs.nr_seq_a500%type;
ds_servico_508_w		ptu_nota_servico_rrs.ds_servico%type;
vl_pago_benef_w			ptu_nota_servico_rrs.vl_pago_benef%type;

vl_parametro_w			varchar(255);
vl_parametro_32_w		varchar(255);
ie_material_intercambio_w	varchar(2);
qt_proced_origem_w		bigint;
qt_proc_valido_w		bigint;
nr_seq_fatura_dev_w		bigint;
dt_devolucao_w			timestamp;

ie_parametro_21_w		varchar(255);
ie_parametro_33_w		varchar(255);
cd_mat_number_inter_w		numeric(30) := null;
ie_origem_proc_valido_w		pls_parametros.ie_origem_proc_valido%type;
ie_situacao_material_w		pls_parametros.ie_situacao_material%type;
ie_data_conv_mat_unimed_w	pls_parametros.ie_data_conv_mat_unimed%type;
dt_ref_conv_mat_unimed_w	timestamp;
cd_servico_mat_w		varchar(50);
nr_seq_congenere_w		pls_congenere.nr_sequencia%type;
sg_estado_w			pessoa_juridica.sg_estado%type;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
ie_tipo_intercambio_w		pls_conversao_proc.ie_tipo_intercambio%type;
nm_id_sid_w			pls_cta_lote_processo.nm_id_sid%type;
nm_id_serial_w			pls_cta_lote_processo.nm_id_serial%type;
ie_somente_codigo_w		pls_regra_conv_mat_interc.ie_somente_codigo%type;
nr_carteira_benef_w		ptu_aviso_conta.nr_carteira_benef%type;

cd_interface_w			ptu_regra_interface.cd_interface%type;
ie_versao_w			bigint;
ie_pacote_intercambio_w 	pls_conversao_proc.ie_pacote_intercambio%type := 'N';
ie_priorizar_conv_pct_int_w	pls_parametros.ie_priorizar_conv_pct_int%type;


BEGIN

begin
select 	coalesce(max(ie_material_intercambio),'S'),
	coalesce(max(ie_origem_proc_valido),'N'),
	coalesce(max(ie_situacao_material),'N'),
	coalesce(max(ie_data_conv_mat_unimed),'DA'),
	coalesce(max(ie_priorizar_conv_pct_int),'N')
into STRICT	ie_material_intercambio_w,
	ie_origem_proc_valido_w,
	ie_situacao_material_w,
	ie_data_conv_mat_unimed_w,
	ie_priorizar_conv_pct_int_w
from 	pls_parametros
where 	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(182468);
end;

ds_registro_w	:= substr(ds_conteudo_p,9,3);
if (coalesce(nr_seq_fat_imp_p::text, '') = '') and (ds_registro_w = '501') then
	select	max(sid),
		max(serial#)
	into STRICT	nm_id_sid_w,
		nm_id_serial_w
	from	v$session
	where 	audsid = userenv('SESSIONID');
end if;

cd_interface_w	:= pls_obter_interf_ptu(cd_estabelecimento_p,null,trunc(clock_timestamp()),'A500');
ie_versao_w 	:= somente_numero(ptu_obter_versao_dominio('A500', cd_interface_w));


if (ds_registro_w	= '501') then

	nr_competencia_w := null;
	if ((substr(ds_conteudo_p,28,4))::numeric  > 0) then
		nr_competencia_w := (substr(ds_conteudo_p,28,4))::numeric;
	end if;

	nr_versao_transacao_w := null;
	if ((substr(ds_conteudo_p,115,2))::numeric  > 0) then
		nr_versao_transacao_w := (substr(ds_conteudo_p,115,2))::numeric;
	end if;

	vl_total_fatura_w	:= substr(ds_conteudo_p,59,12) || ',' || substr(ds_conteudo_p,71,2);
	vl_ir_w			:= substr(ds_conteudo_p,73,12) || ',' || substr(ds_conteudo_p,85,2);
	cd_unimed_destino_w	:= substr(ds_conteudo_p,12,4);
	cd_unimed_origem_w	:= substr(ds_conteudo_p,16,4);
	cd_unimed_origem_numb_w	:= somente_numero(cd_unimed_origem_w);
	nr_fatura_w		:= trim(both substr(ds_conteudo_p,159,20));
	doc_fiscal_1_w		:= trim(both substr(ds_conteudo_p,201,20));
	doc_fiscal_2_w		:= trim(both substr(ds_conteudo_p,221,20));

	-- jtonon - OS 824747 - No A550 deve ir exatamente os dados que estao no arquivo, mesmo que os valores sejam 0 (zeros)

	/*if	(somente_numero(nr_fatura_w) = 0) then
		nr_fatura_w	:= null;
	end if;*/
	begin
	tp_documento_1_w	:= (substr(ds_conteudo_p,199,1))::numeric;
	exception
	when others then
		tp_documento_1_w := null;
	end;

	begin
	tp_documento_2_w	:= (substr(ds_conteudo_p,200,1))::numeric;
	exception
	when others then
		tp_documento_2_w := null;
	end;
	begin
	dt_geracao_w		:= to_date(	substr(ds_conteudo_p,26,2) ||
						substr(ds_conteudo_p,24,2) ||
						substr(ds_conteudo_p,20,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_geracao_w	:= null;
	end;

	begin
	dt_vencimento_fatura_w	:= to_date(	substr(ds_conteudo_p,49,2) ||
						substr(ds_conteudo_p,47,2) ||
						substr(ds_conteudo_p,43,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_vencimento_fatura_w	:= null;
	end;
	begin
	dt_emissao_fatura_w	:= to_date(	substr(ds_conteudo_p,57,2) ||
						substr(ds_conteudo_p,55,2) ||
						substr(ds_conteudo_p,51,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_emissao_fatura_w	:= null;
	end;
	begin
	ie_classif_cobranca_w	 := substr(ds_conteudo_p,117,1);
	exception
	when others then
		ie_classif_cobranca_w := null;
	end;

	begin
	nr_nota_credito_debito_w := trim(both substr(ds_conteudo_p,179,20));
	exception
	when others then
		nr_nota_credito_debito_w := null;
	end;

	-- jtonon - OS 824747 - No A550 deve ir exatamente os dados que estao no arquivo, mesmo que os valores sejam 0 (zeros)

	/*if	(somente_numero(nr_nota_credito_debito_w) = 0) then
		nr_nota_credito_debito_w	:= null;
	end if;*/
	begin
	dt_vencimento_ndc_w	 := to_date(	substr(ds_conteudo_p,135,2) ||
						substr(ds_conteudo_p,133,2) ||
						substr(ds_conteudo_p,129,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_vencimento_ndc_w := null;
	end;

	begin
	dt_emissao_ndc_w	 := to_date(	substr(ds_conteudo_p,143,2) ||
						substr(ds_conteudo_p,141,2) ||
						substr(ds_conteudo_p,137,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_emissao_ndc_w := null;
	end;

	begin
	vl_total_ndc_w		 := substr(ds_conteudo_p,145,12) || ',' || substr(ds_conteudo_p,157,2);
	exception
	when others then
		vl_total_ndc_w := 0;
	end;

	if (ie_classif_cobranca_w = '1') and (vl_total_fatura_w <= 0) then
		vl_total_fatura_w := 0;
	end if;

	if (ie_classif_cobranca_w = '2') and (vl_total_ndc_w <= 0) then
		vl_total_ndc_w := 0;
	end if;

	/* Verifica se a fatura esta em duplicidade */

	select	max(nr_sequencia)
	into STRICT	nr_seq_fatura_exist_w
	from	ptu_fatura
	where	nr_fatura		= nr_fatura_w
	and	cd_unimed_origem	= cd_unimed_origem_w
	and	ie_operacao		= 'R'
	and	ie_status		not in ('CA','I')
	and	coalesce(dt_devolucao::text, '') = '';

	if (coalesce(nr_seq_fatura_exist_w::text, '') = '') and (somente_numero(nr_nota_credito_debito_w) > 0) then
		select	max(nr_sequencia)
		into STRICT	nr_seq_fatura_exist_w
		from	ptu_fatura
		where	nr_nota_credito_debito	= nr_nota_credito_debito_w
		and	cd_unimed_origem	= cd_unimed_origem_w
		and	ie_operacao		= 'R'
		and	ie_status		not in ('CA','I')
		and	coalesce(dt_devolucao::text, '') = '';
	end if;

	if (nr_seq_fatura_exist_w IS NOT NULL AND nr_seq_fatura_exist_w::text <> '') then
		/*Mostrar data de rececimento*/

		select	max(dt_recebimento_fatura)
		into STRICT	dt_recebimento_w
		from	ptu_fatura
		where	nr_sequencia	= nr_seq_fatura_exist_w;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182470,	'DT_RECEBIMENTO=' || to_char(dt_recebimento_w,'DD/MM/YYYY') || ';' ||
								'NR_SEQ_FATURA_EXIST=' || nr_seq_fatura_exist_w);
	end if;

	cd_unimed_operadora_w	:= pls_obter_unimed_estab(cd_estabelecimento_p);

	if (cd_unimed_destino_w <> cd_unimed_operadora_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182469);
	end if;

	vl_parametro_32_w := Obter_Param_Usuario(1293, 32, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, vl_parametro_32_w);

	-- parametro [32] - Permite importar faturas devolvidas - OS 473542
	if (vl_parametro_32_w = 'N') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_fatura_dev_w
		from	ptu_fatura
		where	nr_fatura		= nr_fatura_w
		and	cd_unimed_origem	= cd_unimed_origem_w
		and	ie_operacao		= 'R'
		and	ie_status		= 'R';
		if (coalesce(nr_seq_fatura_dev_w::text, '') = '') and (somente_numero(nr_nota_credito_debito_w) > 0) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_fatura_dev_w
			from	ptu_fatura
			where	nr_nota_credito_debito	= nr_nota_credito_debito_w
			and	cd_unimed_origem	= cd_unimed_origem_w
			and	ie_operacao		= 'R'
			and	ie_status		= 'R';
		end if;

		if (nr_seq_fatura_dev_w IS NOT NULL AND nr_seq_fatura_dev_w::text <> '') then
			select	max(dt_devolucao)
			into STRICT	dt_devolucao_w
			from	ptu_fatura
			where	nr_sequencia	= nr_seq_fatura_dev_w;
			CALL wheb_mensagem_pck.exibir_mensagem_abort(198155,	'DT_DEVOLUCAO=' || to_char(dt_devolucao_w,'DD/MM/YYYY') || ';' ||
									'NR_SEQ_FATURA_DEV=' || nr_seq_fatura_dev_w);
		end if;
	end if;

	vl_parametro_w := Obter_Param_Usuario(1293, 17, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, vl_parametro_w);

	if (coalesce(nr_seq_fat_imp_p::text, '') = '') then
		select	nextval('ptu_fatura_seq')
		into STRICT	nr_seq_fatura_w
		;
	else
		nr_seq_fatura_w := nr_seq_fat_imp_p;
	end if;

	insert into ptu_fatura(nr_sequencia,
		cd_estabelecimento,
		cd_unimed_destino,
		cd_unimed_origem,
		dt_geracao,
		nr_competencia,
		nr_fatura,
		dt_vencimento_fatura,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_emissao_fatura,
		vl_total_fatura,
		nr_versao_transacao,
		vl_ir,
		ie_tipo_fatura,
		ie_operacao,
		dt_recebimento_fatura,
		ie_fatura_fisica,
		nr_linha,
		ie_status,
		dt_mes_competencia,
		ie_lib_import,
		ie_classif_cobranca,
		nr_nota_credito_debito,
		dt_vencimento_ndc,
		dt_emissao_ndc,
		vl_total_ndc,
		dt_venc_fatura_original,
		tp_documento_1,
		tp_documento_2,
		ds_sid_processo,
		ds_serial_processo,
		doc_fiscal_1,
		doc_fiscal_2,
		ie_tipo_exportacao,
		ie_tipo_cobranca_fatura)
	values (nr_seq_fatura_w,
		cd_estabelecimento_p,
		cd_unimed_destino_w,
		cd_unimed_origem_w,
		dt_geracao_w,
		nr_competencia_w,
		nr_fatura_w,
		dt_vencimento_fatura_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		dt_emissao_fatura_w,
		vl_total_fatura_w,
		nr_versao_transacao_w,
		vl_ir_w,
		ie_tipo_arquivo_p,
		'R',
		clock_timestamp(),
		'N',
		nr_linha_p,
		'EI',
		CASE WHEN vl_parametro_w='S' THEN  dt_recebimento_w  ELSE to_date(nr_competencia_w, 'yymm') END ,
		'N',
		ie_classif_cobranca_w,
		nr_nota_credito_debito_w,
		dt_vencimento_ndc_w,
		dt_emissao_ndc_w,
		vl_total_ndc_w,
		dt_vencimento_fatura_w,
		tp_documento_1_w,
		tp_documento_2_w,
		nm_id_sid_w,
		nm_id_serial_w,
		doc_fiscal_1_w,
		doc_fiscal_2_w,
		'TXT',
		'C');
end if;

if (coalesce(nr_seq_fatura_w::text, '') = '') and (nr_linha_p = 1) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(190912);
end if;

if (coalesce(nr_seq_fat_imp_p::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_fatura_w
	from	ptu_fatura
	where	ie_status		= 'EI'
	and	nm_usuario		= nm_usuario_p
	and	ds_sid_processo		= nm_id_sid_w
	and	ds_serial_processo	= nm_id_serial_w;

	if (coalesce(nr_seq_fatura_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_fatura_w
		from	ptu_fatura
		where	nm_usuario	= nm_usuario_p;
	end if;
else
	nr_seq_fatura_w := nr_seq_fat_imp_p;
end if;

nr_seq_fatura_p 	:= nr_seq_fatura_w;

begin
select	nr_sequencia
into STRICT	nr_seq_congenere_w
from	pls_congenere
where	cd_cooperativa_number	= cd_unimed_origem_numb_w;
exception
when others then
	nr_seq_congenere_w	:= null;
end;

ie_tipo_intercambio_w	:= 'A';

if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
	-- Obter a UF da operadora  - Tasy
	select	coalesce(max(sg_estado),'X')
	into STRICT	sg_estado_w
	from	pessoa_juridica
	where	cd_cgc	=	(SELECT	max(cd_cgc_outorgante)
				from	pls_outorgante
				where	cd_estabelecimento	= cd_estabelecimento_p);

	-- Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo
	select	coalesce(max(a.sg_estado),'X')
	into STRICT	sg_estado_int_w
	from	pessoa_juridica	a,
		pls_congenere	b
	where	a.cd_cgc	= b.cd_cgc
	and	b.nr_sequencia	= nr_seq_congenere_w;

	if (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
		if (sg_estado_w	= sg_estado_int_w) then
			ie_tipo_intercambio_w	:= 'E';
		else
			ie_tipo_intercambio_w	:= 'N';
		end if;
	else
		ie_tipo_intercambio_w	:= 'A';
	end if;
end if;
if (ds_registro_w	= '502') then
	nr_lote_w := null;
	if ((substr(ds_conteudo_p,12,8))::numeric  > 0) then
		nr_lote_w := (substr(ds_conteudo_p,12,8))::numeric;
	end if;

	cd_unimed_w := null;
	if ((substr(ds_conteudo_p,32,4))::numeric  > 0) then
		cd_unimed_w := (substr(ds_conteudo_p,32,4))::numeric;
	end if;
	nr_guia_principal_w		:= trim(both substr(ds_conteudo_p,157,20));
	nr_nota_w			:= trim(both substr(ds_conteudo_p,137,20));
	cd_excecao_w			:= trim(both substr(ds_conteudo_p,98,1));
	cd_usuario_plano_w		:= trim(both substr(ds_conteudo_p,39,13));
	nm_beneficiario_w		:= trim(both substr(ds_conteudo_p,52,25));

	if (somente_numero(nr_guia_principal_w) = 0) then
		nr_guia_principal_w := null;
	end if;

	begin
	dt_atendimento_w		:= to_date(	substr(ds_conteudo_p,85,2)||
							substr(ds_conteudo_p,81,4)||
							substr(ds_conteudo_p,77,4)|| ' ' ||
							substr(ds_conteudo_p,87,8), 'dd/mm/yyyy hh24:mi:ss');
	exception
	when others then
		dt_atendimento_w := null;
	end;

	cd_cid_w			:= trim(both substr(ds_conteudo_p,102,6));
	ie_paciente_w			:= trim(both substr(ds_conteudo_p,122,1));
	ie_tipo_saida_spdat_w		:= trim(both substr(ds_conteudo_p,123,1));
	ie_tipo_atendimento_w		:= trim(both substr(ds_conteudo_p,124,2));
	begin
	dt_internacao_w			:= to_date(	substr(ds_conteudo_p,185,2)||
							substr(ds_conteudo_p,181,4)||
							substr(ds_conteudo_p,177,4)|| ' ' ||
							substr(ds_conteudo_p,187,8), 'dd/mm/yyyy hh24:mi:ss');
	exception
	when others then
		dt_internacao_w := null;
	end;

	begin
	dt_alta_w			:= to_date(	substr(ds_conteudo_p,206,2)||
							substr(ds_conteudo_p,202,4)||
							substr(ds_conteudo_p,198,4)|| ' ' ||
							substr(ds_conteudo_p,208,8), 'dd/mm/yyyy hh24:mi:ss');
	exception
	when others then
		dt_alta_w := null;
	end;
	begin
	dt_ultima_autoriz_w		:= to_date(	substr(ds_conteudo_p,229,2) ||
							substr(ds_conteudo_p,227,2) ||
							substr(ds_conteudo_p,223,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_ultima_autoriz_w := null;
	end;

	tp_nota_w			:= (trim(both substr(ds_conteudo_p,227,1)))::numeric;
	id_nota_principal_w		:= trim(both substr(ds_conteudo_p,228,1));
	nr_ver_tiss_w			:= trim(both substr(ds_conteudo_p,229,7));
	nr_guia_tiss_prestador_w	:= trim(both substr(ds_conteudo_p,236,20));
	nr_guia_tiss_principal_w	:= trim(both substr(ds_conteudo_p,256,20));
	nr_guia_tiss_operadora_w	:= trim(both substr(ds_conteudo_p,276,20));
	tp_ind_acidente_w		:= trim(both substr(ds_conteudo_p,296,1));
	motivo_encerram_w		:= trim(both substr(ds_conteudo_p,297,2));
	nr_cnpj_cpf_req_w		:= trim(both substr(ds_conteudo_p,299,14));
	sg_cons_prof_req_w		:= trim(both substr(ds_conteudo_p,353,12));

	if 	trim(both upper(sg_cons_prof_req_w)) = 'CRESS' then
		sg_cons_prof_req_w := 'CRAS';
	end if;

	if 	trim(both upper(sg_cons_prof_req_w)) = 'CREFONO' then
		sg_cons_prof_req_w := 'CRFA';
	end if;

	nr_cons_prof_req_w		:= trim(both substr(ds_conteudo_p,365,15));
	sg_uf_cons_req_w		:= trim(both substr(ds_conteudo_p,380,2));
	nr_cbo_req_w			:= (trim(both substr(ds_conteudo_p,382,6)))::numeric;
	nr_fatura_glosada_w		:= trim(both substr(ds_conteudo_p,447,20));
	nr_ndr_glosada_w		:= trim(both substr(ds_conteudo_p,467,20));
	nr_lote_glosado_w		:= (trim(both substr(ds_conteudo_p,410,8)))::numeric;
	nr_nota_glosada_w		:= trim(both substr(ds_conteudo_p,418,20));

	begin
	dt_protocolo_w			:= to_date(	substr(ds_conteudo_p,444,2) ||
							substr(ds_conteudo_p,442,2) ||
							substr(ds_conteudo_p,438,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_protocolo_w := null;
	end;

	id_rn_w				:= trim(both substr(ds_conteudo_p,446,1));
	ie_carater_atendimento_w	:= trim(both substr(ds_conteudo_p,487,1));
	tp_consulta_w			:= trim(both substr(ds_conteudo_p,488,1));

	id_liminar_w			:= trim(both substr(ds_conteudo_p,489,1));
	tp_pessoa_w			:= trim(both substr(ds_conteudo_p,490,1));
	nr_cnpj_cpf_w			:= trim(both substr(ds_conteudo_p,491,14));
	cd_cnes_cont_exec_w		:= trim(both substr(ds_conteudo_p,505,7));
	cd_munic_cont_exec_w		:= trim(both substr(ds_conteudo_p,512,6));
	nm_prest_req_w			:= trim(both substr(ds_conteudo_p,519,60));
	tipo_rede_min_w			:= trim(both substr(ds_conteudo_p,589,1));

	id_aviso_w			:= trim(both substr(ds_conteudo_p,590,1));
	id_continuado_w			:= trim(both substr(ds_conteudo_p,591,1));
	nr_lote_prest_w			:= trim(both substr(ds_conteudo_p,592,12));
	begin
	dt_conhecimento_w		:= to_date(	substr(ds_conteudo_p,610,2) ||
							substr(ds_conteudo_p,608,2) ||
							substr(ds_conteudo_p,604,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_conhecimento_w := null;
	end;

	nm_prest_exec_w			:= trim(both substr(ds_conteudo_p,612,60));
	tp_prest_exec_w			:= trim(both substr(ds_conteudo_p,682,2));
	id_rec_proprio_w		:= trim(both substr(ds_conteudo_p,684,1));
	cd_cid_obito_cobr_w		:= trim(both substr(ds_conteudo_p,685,6));

	-- tenta realizar o vinculo com a guia do A520, caso existir
	if (id_aviso_w = 'S') then
		select	max(cd_unimed_destino),
			max(cd_unimed_origem)
		into STRICT	cd_unimed_destino_w,
			cd_unimed_origem_w
		from	ptu_fatura
		where	nr_sequencia = nr_seq_fatura_w;

		-- Montar a carteirinha do beneficiario
		nr_carteira_benef_w := cd_unimed_destino_w||cd_usuario_plano_w;

		select	max(ac.nr_sequencia)
		into STRICT	nr_seq_aviso_conta_w
		from	ptu_aviso_arquivo	aa,
			ptu_aviso_protocolo	ap,
			ptu_aviso_conta		ac
		where	aa.nr_sequencia		= ap.nr_seq_arquivo
		and	ap.nr_sequencia		= ac.nr_seq_aviso_protocolo
		and	aa.cd_unimed_origem	= cd_unimed_origem_w
		and	aa.dt_transacao		= dt_conhecimento_w
		and	aa.nr_lote		= nr_lote_prest_w
		and	ac.nr_guia_prestador	= nr_guia_tiss_prestador_w
		and	ac.nr_carteira_benef	= nr_carteira_benef_w
		and	ac.nr_guia_operadora	= nr_nota_w; -- Ainda fico na duvida se devia ter essa linha
	end if;
	insert into ptu_nota_cobranca(nr_sequencia,
		nr_seq_fatura,
		nr_lote,
		nr_nota,
		cd_unimed,
		cd_usuario_plano,
		dt_atendimento,
		cd_excecao,
		ie_carater_atendimento,
		ie_paciente,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_tipo_saida_spdat,
		ie_tipo_atendimento,
		nm_beneficiario,
		cd_cid,
		nr_guia_principal,
		nr_linha,
		dt_internacao,
		dt_alta,
		dt_ultima_autoriz,
		tp_nota,
		id_nota_principal,
		nr_ver_tiss,
		nr_guia_tiss_prestador,
		nr_guia_tiss_principal,
		nr_guia_tiss_operadora,
		tp_ind_acidente,
		motivo_encerram,
		nr_cnpj_cpf_req,
		nm_prest_req,
		sg_cons_prof_req,
		nr_cons_prof_req,
		sg_uf_cons_req,
		nr_cbo_req,
		nr_fatura_glosada,
		nr_ndr_glosada,
		nr_lote_glosado,
		nr_nota_glosada,
		dt_protocolo,
		id_rn,
		tp_consulta,
		tp_pessoa,
		nr_cnpj_cpf,
		cd_cnes_cont_exec,
		cd_munic_cont_exec,
		id_liminar,
		tipo_rede_min,
		nm_prest_exec,
		tp_prest_exec,
		nr_lote_prest,
		dt_conhecimento,
		cd_cid_obito,
		id_rec_proprio,
		id_continuado,
		id_aviso,
		nr_seq_aviso_conta)
	values (nextval('ptu_nota_cobranca_seq'),
		nr_seq_fatura_w,
		nr_lote_w,
		nr_nota_w,
		cd_unimed_w,
		cd_usuario_plano_w,
		dt_atendimento_w,
		cd_excecao_w,
		ie_carater_atendimento_w,
		ie_paciente_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		ie_tipo_saida_spdat_w,
		(ie_tipo_atendimento_w)::numeric ,
		nm_beneficiario_w,
		cd_cid_w,
		nr_guia_principal_w,
		nr_linha_p,
		dt_internacao_w,
		dt_alta_w,
		dt_ultima_autoriz_w,
		tp_nota_w,
		id_nota_principal_w,
		nr_ver_tiss_w,
		nr_guia_tiss_prestador_w,
		nr_guia_tiss_principal_w,
		nr_guia_tiss_operadora_w,
		tp_ind_acidente_w,
		motivo_encerram_w,
		nr_cnpj_cpf_req_w,
		nm_prest_req_w,
		sg_cons_prof_req_w,
		nr_cons_prof_req_w,
		sg_uf_cons_req_w,
		nr_cbo_req_w,
		nr_fatura_glosada_w,
		nr_ndr_glosada_w,
		nr_lote_glosado_w,
		nr_nota_glosada_w,
		dt_protocolo_w,
		id_rn_w,
		tp_consulta_w,
		tp_pessoa_w,
		nr_cnpj_cpf_w,
		cd_cnes_cont_exec_w,
		cd_munic_cont_exec_w,
		id_liminar_w,
		tipo_rede_min_w,
		nm_prest_exec_w,
		tp_prest_exec_w,
		nr_lote_prest_w,
		dt_conhecimento_w,
		cd_cid_obito_cobr_w,
		id_rec_proprio_w,
		id_continuado_w,
		id_aviso_w,
		nr_seq_aviso_conta_w);

	update	ptu_fatura
	set	ie_tipo_arquivo_cob	= '502'
	where	nr_sequencia		= nr_seq_fatura_w;
end if;

if (ds_registro_w	in ('505','506')) then
	select	max(z.nr_sequencia)
	into STRICT	nr_seq_cobranca_w
	from	ptu_fatura		x,
		ptu_nota_cobranca	z
	where	x.nr_sequencia	= z.nr_seq_fatura
	and	x.ie_status	= 'EI'
	and	z.nm_usuario	= nm_usuario_p;
end if;

if (ds_registro_w = '503') then

	nr_lote_503_w := '0';
	if ((substr(ds_conteudo_p,12,8))::numeric  > 0) then
		nr_lote_503_w := (substr(ds_conteudo_p,12,8))::numeric;
	end if;

	cd_unimed_hospital_w := '0';
	if ((substr(ds_conteudo_p,31,4))::numeric  > 0) then
		cd_unimed_hospital_w := (substr(ds_conteudo_p,31,4))::numeric;
	end if;

	cd_hospital_w := '0';
	if ((substr(ds_conteudo_p,35,8))::numeric  > 0) then
		cd_hospital_w := (substr(ds_conteudo_p,35,8))::numeric;
	end if;

	ie_tipo_internacao_w := '0';
	if ((substr(ds_conteudo_p,133,1))::numeric  > 0) then
		ie_tipo_internacao_w := (substr(ds_conteudo_p,133,1))::numeric;

		if (ie_versao_w >= 113) then
			if (ie_tipo_internacao_w = 6) then
				ie_tipo_internacao_w	:= 4;
			end if;

			if (ie_tipo_internacao_w = 7) then
				ie_tipo_internacao_w	:= 5;
			end if;
		end if;
	end if;

	ie_faturamento_w := null;
	if ((substr(ds_conteudo_p,153,1))::numeric  > 0) then
		ie_faturamento_w := (substr(ds_conteudo_p,153,1))::numeric;
	end if;

	nr_nota_503_w		:= trim(both substr(ds_conteudo_p,375,20));

	if (coalesce(nr_seq_fat_imp_p::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_cobranca_w
		from	ptu_nota_cobranca
		where	nm_usuario	= nm_usuario_p
		and	nr_nota		= nr_nota_503_w;
	else
		select	max(nr_sequencia)
		into STRICT	nr_seq_cobranca_w
		from	ptu_nota_cobranca
		where	nr_seq_fatura	= nr_seq_fat_imp_p
		and	nr_nota		= nr_nota_503_w;
	end if;

	tx_mult_amb_w		:= trunc(substr(ds_conteudo_p,112,2)||','||substr(ds_conteudo_p,114,2));
	ie_tipo_acomodacao_w	:= trim(both substr(ds_conteudo_p,68,2));

	cd_cgc_hospital_w	:= trim(both substr(ds_conteudo_p,119,14));
	--cd_cid_obito_w		:= trim(substr(ds_conteudo_p,154,6));
	nr_declara_vivo_1_w	:= trim(both substr(ds_conteudo_p,167,15));
	nr_declara_vivo_2_w	:= trim(both substr(ds_conteudo_p,182,15));
	nr_declara_vivo_3_w	:= trim(both substr(ds_conteudo_p,197,15));
	nr_declara_vivo_4_w	:= trim(both substr(ds_conteudo_p,212,15));
	nr_declara_vivo_5_w	:= trim(both substr(ds_conteudo_p,227,15));
	nr_declara_obito_w	:= trim(both substr(ds_conteudo_p,243,17));
	cd_cid_obito_1_w	:= trim(both substr(ds_conteudo_p,260,6));
	cd_cid_obito_2_w	:= trim(both substr(ds_conteudo_p,266,6));
	cd_cid_obito_3_w	:= trim(both substr(ds_conteudo_p,272,6));
	cd_cid_obito_4_w	:= trim(both substr(ds_conteudo_p,278,6));
	cd_cid_obito_5_w	:= trim(both substr(ds_conteudo_p,284,6));
	nr_declara_obito_1_w	:= trim(both substr(ds_conteudo_p,290,17));
	nr_declara_obito_2_w	:= trim(both substr(ds_conteudo_p,307,17));
	nr_declara_obito_3_w	:= trim(both substr(ds_conteudo_p,324,17));
	nr_declara_obito_4_w	:= trim(both substr(ds_conteudo_p,341,17));
	nr_declara_obito_5_w	:= trim(both substr(ds_conteudo_p,358,17));

	reg_internacao_w	:= (trim(both substr(ds_conteudo_p,395,1)))::numeric;

	nm_medico_auditor_w	:= trim(both substr(ds_conteudo_p,396,40));
	nr_crm_auditor_w	:= trim(both substr(ds_conteudo_p,436,15));
	nm_enfer_auditor_w	:= trim(both substr(ds_conteudo_p,451,40));
	nr_coren_auditor_w	:= trim(both substr(ds_conteudo_p,491,15));
	cd_uf_crm_w		:= trim(both substr(ds_conteudo_p,506,2));
	cd_uf_coren_w		:= trim(both substr(ds_conteudo_p,508,2));
	nm_hospital_w		:= trim(both substr(ds_conteudo_p,510,60));

	-- Versao PTU 11.0 foram descartados
	qt_nasc_vivos_w			:= null;  --QT_NASC_VIVOS
	qt_nasc_mortos_w		:= null;  --QT_NASC_MORTOS
	qt_nasc_vivos_pre_w		:= null;  --QT_NASC_VIVOS_PRE
	qt_obito_precoce_w		:= null;  --QT_OBITO_PRECOCE
	qt_obito_tardio_w		:= null;  --QT_OBITO_TARDIO
	ie_int_gestacao_w		:= null;  -- ID_INT_OBSTETRICIA_1
	ie_int_aborto_w			:= null;  -- ID_INT_OBSTETRICIA_2
	ie_int_transtorno_w		:= null;  -- ID_INT_OBSTETRICIA_3
	ie_int_comp_puerperio_w		:= null;  -- ID_INT_OBSTETRICIA_4
	ie_int_atend_parto_w		:= null;  -- ID_INT_OBSTETRICIA_5
	ie_int_compl_neonatal_w		:= null;  -- ID_INT_OBSTETRICIA_6
	ie_int_baixo_peso_w		:= null;  -- ID_INT_OBSTETRICIA_7
	ie_int_parto_cesaria_w		:= null;  -- ID_INT_OBSTETRICIA_8
	ie_int_parto_normal_w		:= null;  -- ID_INT_OBSTETRICIA_9
	insert into ptu_nota_hospitalar(nr_sequencia,
		nr_seq_nota_cobr,
		nr_lote,
		nr_nota,
		cd_unimed_hospital,
		cd_hospital,
		nm_hospital,
		ie_tipo_acomodacao,
		dt_internacao,
		dt_alta,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		tx_mult_amb,
		cd_cgc_hospital,
		ie_tipo_internacao,
		ie_faturamento,
		ie_ind_acidente,
		cd_motivo_saida,
		qt_nasc_vivos,
		qt_nasc_mortos,
		qt_nasc_vivos_pre,
		qt_obito_precoce,
		qt_obito_tardio,
		ie_int_gestacao,
		ie_int_aborto,
		ie_int_transtorno,
		ie_int_puerperio,
		ie_int_recem_nascido,
		ie_int_neonatal,
		ie_int_baixo_peso,
		ie_int_parto_cesarea,
		ie_int_parto_normal,
		cd_cid_obito,
		ie_obito_mulher,
		nr_declara_obito,
		nr_linha,
		reg_internacao,
		nm_medico_auditor,
		nr_crm_auditor,
		nm_enfer_auditor,
		nr_coren_auditor,
		cd_uf_crm,
		cd_uf_coren)
	values (nextval('ptu_nota_hospitalar_seq'),
		nr_seq_cobranca_w,
		nr_lote_503_w,
		nr_nota_503_w,
		cd_unimed_hospital_w,
		cd_hospital_w,
		nm_hospital_w,
		ie_tipo_acomodacao_w,
		null, --dt_internacao
		null, --dt_alta
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		tx_mult_amb_w,
		cd_cgc_hospital_w,
		ie_tipo_internacao_w,
		ie_faturamento_w,
		null, --ie_ind_acidente
		null, --cd_motivo_saida
		qt_nasc_vivos_w, --qt_nasc_vivos
		qt_nasc_mortos_w, --qt_nasc_mortos
		qt_nasc_vivos_pre_w, --qt_nasc_vivos_pre
		qt_obito_precoce_w, --qt_obito_precoce
		qt_obito_tardio_w, --qt_obito_tardio
		ie_int_gestacao_w, --ie_int_gestacao
		ie_int_aborto_w, --ie_int_aborto
		ie_int_transtorno_w, --ie_int_transtorno
		ie_int_comp_puerperio_w, --ie_int_puerperio
		ie_int_atend_parto_w, --ie_int_recem_nascido
		ie_int_compl_neonatal_w, --ie_int_neonatal
		ie_int_baixo_peso_w, --ie_int_baixo_peso
		ie_int_parto_cesaria_w, --ie_int_parto_cesarea
		ie_int_parto_normal_w, --ie_int_parto_normal
		cd_cid_obito_w,
		null, --ie_obito_mulher
		nr_declara_obito_w,
		nr_linha_p,
		reg_internacao_w,
		nm_medico_auditor_w,
		nr_crm_auditor_w,
		nm_enfer_auditor_w,
		nr_coren_auditor_w,
		cd_uf_crm_w,
		cd_uf_coren_w) returning nr_sequencia into nr_seq_hospitalar_w;

	--	COMPLEMENTO HOSPITALAR	1
	if	((nr_declara_vivo_1_w IS NOT NULL AND nr_declara_vivo_1_w::text <> '') or (cd_cid_obito_1_w IS NOT NULL AND cd_cid_obito_1_w::text <> '') or (nr_declara_obito_1_w IS NOT NULL AND nr_declara_obito_1_w::text <> '')) then
		insert into ptu_nota_hosp_compl(nr_sequencia,
			nr_seq_nota_hosp,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_declara_vivo,
			cd_cid_obito,
			nr_declara_obito)
		values (nextval('ptu_nota_hosp_compl_seq'),
			nr_seq_hospitalar_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_declara_vivo_1_w,
			cd_cid_obito_1_w,
			nr_declara_obito_1_w);
	end if;

	--	COMPLEMENTO HOSPITALAR	2
	if	((nr_declara_vivo_2_w IS NOT NULL AND nr_declara_vivo_2_w::text <> '') or (cd_cid_obito_2_w IS NOT NULL AND cd_cid_obito_2_w::text <> '') or (nr_declara_obito_2_w IS NOT NULL AND nr_declara_obito_2_w::text <> '')) then
		insert into ptu_nota_hosp_compl(nr_sequencia,
			nr_seq_nota_hosp,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_declara_vivo,
			cd_cid_obito,
			nr_declara_obito)
		values (nextval('ptu_nota_hosp_compl_seq'),
			nr_seq_hospitalar_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_declara_vivo_2_w,
			cd_cid_obito_2_w,
			nr_declara_obito_2_w);
	end if;

	--	COMPLEMENTO HOSPITALAR	3
	if	((nr_declara_vivo_3_w IS NOT NULL AND nr_declara_vivo_3_w::text <> '') or (cd_cid_obito_3_w IS NOT NULL AND cd_cid_obito_3_w::text <> '') or (nr_declara_obito_3_w IS NOT NULL AND nr_declara_obito_3_w::text <> '')) then
		insert into ptu_nota_hosp_compl(nr_sequencia,
			nr_seq_nota_hosp,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_declara_vivo,
			cd_cid_obito,
			nr_declara_obito)
		values (nextval('ptu_nota_hosp_compl_seq'),
			nr_seq_hospitalar_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_declara_vivo_3_w,
			cd_cid_obito_3_w,
			nr_declara_obito_3_w);
	end if;

	--	COMPLEMENTO HOSPITALAR	4
	if	((nr_declara_vivo_4_w IS NOT NULL AND nr_declara_vivo_4_w::text <> '') or (cd_cid_obito_4_w IS NOT NULL AND cd_cid_obito_4_w::text <> '') or (nr_declara_obito_4_w IS NOT NULL AND nr_declara_obito_4_w::text <> '')) then
		insert into ptu_nota_hosp_compl(nr_sequencia,
			nr_seq_nota_hosp,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_declara_vivo,
			cd_cid_obito,
			nr_declara_obito)
		values (nextval('ptu_nota_hosp_compl_seq'),
			nr_seq_hospitalar_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_declara_vivo_4_w,
			cd_cid_obito_4_w,
			nr_declara_obito_4_w);
	end if;

	--	COMPLEMENTO HOSPITALAR	5
	if	((nr_declara_vivo_5_w IS NOT NULL AND nr_declara_vivo_5_w::text <> '') or (cd_cid_obito_5_w IS NOT NULL AND cd_cid_obito_5_w::text <> '') or (nr_declara_obito_5_w IS NOT NULL AND nr_declara_obito_5_w::text <> '')) then
		insert into ptu_nota_hosp_compl(nr_sequencia,
			nr_seq_nota_hosp,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_declara_vivo,
			cd_cid_obito,
			nr_declara_obito)
		values (nextval('ptu_nota_hosp_compl_seq'),
			nr_seq_hospitalar_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_declara_vivo_5_w,
			cd_cid_obito_5_w,
			nr_declara_obito_5_w);
	end if;
end if;

if (ds_registro_w = '504') then

	nr_seq_a500_w := null;
	if ((substr(ds_conteudo_p,1,8))::numeric  > 0) then
		nr_seq_a500_w := (substr(ds_conteudo_p,1,8))::numeric;
	end if;

	nr_lote_504_w := null;
	if ((substr(ds_conteudo_p,12,8))::numeric  > 0) then
		nr_lote_504_w := (substr(ds_conteudo_p,12,8))::numeric;
	end if;

	cd_unimed_prestador_w := null;
	if ((substr(ds_conteudo_p,31,4))::numeric  > 0) then
		cd_unimed_prestador_w := (substr(ds_conteudo_p,31,4))::numeric;
	end if;

	cd_prestador_w := null;
	if ((substr(ds_conteudo_p,35,8))::numeric  > 0) then
		cd_prestador_w := (substr(ds_conteudo_p,35,8))::numeric;
	end if;

	cd_servico_w := null;
	if ((substr(ds_conteudo_p,93,8))::numeric  > 0) then
		cd_servico_w := (substr(ds_conteudo_p,93,8))::numeric;
	end if;

	qt_procedimento_w := 0;
	if ((substr(ds_conteudo_p,101,8))::numeric  > 0) then
		qt_procedimento_w := (substr(ds_conteudo_p,101,8))::numeric;
	end if;
	vl_procedimento_w := 0;
	if ((substr(ds_conteudo_p,109,14))::numeric  > 0) then
		vl_procedimento_w := (substr(ds_conteudo_p,109,12)||','|| substr(ds_conteudo_p,121,2))::numeric;
	end if;

	vl_custo_operacional_w := 0;
	if ((substr(ds_conteudo_p,123,14))::numeric  > 0) then
		vl_custo_operacional_w := (substr(ds_conteudo_p,123,12)||','|| substr(ds_conteudo_p,135,2))::numeric;
	end if;

	vl_filme_w := 0;
	if ((substr(ds_conteudo_p,137,14))::numeric  > 0) then
		vl_filme_w := (substr(ds_conteudo_p,137,12)||','|| substr(ds_conteudo_p,149,2))::numeric;
	end if;

	cd_unimed_autorizadora_w := null;
	if ((substr(ds_conteudo_p,152,1))::numeric  > 0) then
		cd_unimed_autorizadora_w := (substr(ds_conteudo_p,152,1))::numeric;
	end if;

	cd_unimed_pre_req_w := null;
	--if	(to_number(substr(ds_conteudo_p,165,4)) > 0) then

	--	cd_unimed_pre_req_w := to_number(substr(ds_conteudo_p,165,4));

	--end if;
	cd_prestador_req_w := null;
	--if	(to_number(substr(ds_conteudo_p,169,8)) > 0) then

	--	cd_prestador_req_w := to_number(substr(ds_conteudo_p,169,8));

	--end if;
	ie_via_acesso_w := null;
	if ((substr(ds_conteudo_p,177,2))::(numeric IS NOT NULL AND numeric::text <> '')) then
		ie_via_acesso_w := (substr(ds_conteudo_p,177,2))::numeric;
	end if;

	vl_adic_procedimento_w := 0;
	if ((substr(ds_conteudo_p,179,14))::numeric  > 0) then
		vl_adic_procedimento_w := (substr(ds_conteudo_p,179,12)||','|| substr(ds_conteudo_p,191,2))::numeric;
	end if;

	vl_adic_co_w := 0;
	if ((substr(ds_conteudo_p,193,14))::numeric  > 0) then
		vl_adic_co_w := (substr(ds_conteudo_p,193,12)||','|| substr(ds_conteudo_p,205,2))::numeric;
	end if;

	vl_adic_filme_w := 0;
	if ((substr(ds_conteudo_p,207,14))::numeric  > 0) then
		vl_adic_filme_w := (substr(ds_conteudo_p,207,12)||','|| substr(ds_conteudo_p,219,2))::numeric;
	end if;

	cd_especialidade_w := null; -- cd_especialidade_w := to_number(substr(ds_conteudo_p,221,2));
	nr_cgc_cpf_w := null;
	if ((substr(ds_conteudo_p,227,14) IS NOT NULL AND (substr(ds_conteudo_p,227,14))::text <> '')) then
		nr_cgc_cpf_w := substr(ds_conteudo_p,227,14);
	end if;

	tx_procedimento_w := null;
	if ((substr(ds_conteudo_p,243,3))::numeric  > 0) then
		tx_procedimento_w := to_number((substr(ds_conteudo_p,243,3))/100);
	end if;

	nr_seq_nota_w := null;
	if ((substr(ds_conteudo_p,246,11))::numeric  > 0) then
		nr_seq_nota_w := (substr(ds_conteudo_p,246,11))::numeric;
	end if;

	nr_autorizacao_w := null;
	if ((substr(ds_conteudo_p,427,10))::numeric  > 0) then
		nr_autorizacao_w := (substr(ds_conteudo_p,427,10))::numeric;
	end if;
	cd_pacote_w := null;
	if ((substr(ds_conteudo_p,451,8))::numeric  > 0) then
		cd_pacote_w := (substr(ds_conteudo_p,451,8))::numeric;
	end if;
	tp_autoriz_w := (substr(ds_conteudo_p,479,1))::numeric;

	ds_servico_w := null;
	if ((substr(ds_conteudo_p,480,80) IS NOT NULL AND (substr(ds_conteudo_p,480,80))::text <> '')) then
		ds_servico_w := substr(ds_conteudo_p,480,80);
	end if;
	nr_nota_504_w		:= trim(both substr(ds_conteudo_p,561,20));

	if (coalesce(nr_seq_fat_imp_p::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_cobranca_w
		from	ptu_nota_cobranca
		where	nm_usuario	= nm_usuario_p
		and	nr_nota 	= nr_nota_504_w;
	else
		select	max(nr_sequencia)
		into STRICT	nr_seq_cobranca_w
		from	ptu_nota_cobranca
		where	nr_seq_fatura	= nr_seq_fat_imp_p
		and	nr_nota 	= nr_nota_504_w;
	end if;

	select	max(a.cd_unimed_origem),
		max(a.cd_unimed_destino),
		max(b.nr_ver_tiss),
		max(b.nr_seq_aviso_conta)
	into STRICT	cd_unimed_origem_w,
		cd_unimed_destino_w,
		nr_ver_tiss_w,
		nr_seq_aviso_conta_w
	from	ptu_nota_cobranca	b,
		ptu_fatura		a
	where	a.nr_sequencia	= b.nr_seq_fatura
	and	b.nr_sequencia	= nr_seq_cobranca_w;
	qt_procedimento_w	:= dividir_sem_round((qt_procedimento_w)::numeric, 10000);

	/*Para arquivo importados de versao 3.7*/

	if (length(substr(ds_conteudo_p,437,14)) <> 0) then
		vl_pago_prest_w := null;
		if ((substr(ds_conteudo_p,437,14))::numeric  > 0) then
			vl_pago_prest_w := (substr(ds_conteudo_p,437,12)||','|| substr(ds_conteudo_p,449,2))::numeric;
		end if;
	end if;

	-- Se houver prestador requisitante, e obrigatorio a informacao de Unimed requisitante
	if ((trim(both cd_prestador_req_w) IS NOT NULL AND (trim(both cd_prestador_req_w))::text <> '')) or ((trim(both cd_unimed_pre_req_w) IS NOT NULL AND (trim(both cd_unimed_pre_req_w))::text <> '')) then
		cd_unimed_pre_req_w := coalesce(trim(both cd_unimed_pre_req_w),cd_unimed_origem_w);
	end if;

	--ie_tipo_prestador_w		:= trim(substr(ds_conteudo_p,223,2));
	ie_tipo_tabela_w		:= trim(both substr(ds_conteudo_p,92,1));
	ie_tipo_participacao_w		:= trim(both substr(ds_conteudo_p,83,1));
	
	if (ie_tipo_tabela_w = 4) then
	     ie_pacote_intercambio_w := 'S';
	   else
	     ie_pacote_intercambio_w := 'N';
	   end if;

	begin
	dt_procedimento_w		:= to_date(	substr(ds_conteudo_p,90,2)||
							substr(ds_conteudo_p,88,2)||
							substr(ds_conteudo_p,84,4),'dd/mm/yyyy');
	exception
	when others then
		dt_procedimento_w := null;
	end;

	cd_porte_anestesico_w		:= trim(both substr(ds_conteudo_p,151,1));
	--ie_rede_propria_w		:= trim(substr(ds_conteudo_p,225,1));
	ie_tipo_pessoa_prestador_w	:= trim(both substr(ds_conteudo_p,226,1));
	ie_pacote_w			:= trim(both substr(ds_conteudo_p,241,1));
	cd_ato_w			:= trim(both substr(ds_conteudo_p,242,1));
	ds_hora_procedimento_w		:= substr(ds_conteudo_p,257,8);
	cd_cnes_prest_w			:= trim(both substr(ds_conteudo_p,265,7));
	sg_cons_prof_prest_w		:= trim(both substr(ds_conteudo_p,312,12));
	if 	trim(both upper(sg_cons_prof_prest_w)) = 'CRESS' then
		sg_cons_prof_prest_w := 'CRAS';
	end if;

	if 	trim(both upper(sg_cons_prof_prest_w)) = 'CREFONO' then
		sg_cons_prof_prest_w := 'CRFA';
	end if;


	nr_cons_prof_prest_w		:= trim(both substr(ds_conteudo_p,324,15));
	sg_uf_cons_prest_w		:= trim(both substr(ds_conteudo_p,339,2));
	ie_reembolso_w			:= trim(both substr(ds_conteudo_p,426,1));
	ie_alto_custo_w			:= coalesce(trim(both substr(ds_conteudo_p,560,1)),'N');
	qt_proc_valido_w := 0;

	if (ie_tipo_tabela_w in (2,3,5,6)) then
		if (coalesce(ie_material_intercambio_w,'S') = 'S') then
			nr_seq_material_w := cd_servico_w;
		elsif (coalesce(ie_material_intercambio_w,'S') = 'C') then
			nr_seq_material_w := null;
			 nr_seq_material_w := pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_w, 'O', ie_situacao_material_w, nr_ver_tiss_w);

			if (coalesce(nr_seq_material_w::text, '') = '') then
				nr_seq_material_w := 0;
			end if;
		elsif (coalesce(ie_material_intercambio_w,'S') = 'CI') then
			nr_seq_material_w := null;

			dt_ref_conv_mat_unimed_w := clock_timestamp();
			if (ie_data_conv_mat_unimed_w = 'DI') then
				dt_ref_conv_mat_unimed_w := dt_procedimento_w;
			end if;

			SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, dt_ref_conv_mat_unimed_w, cd_servico_w, nr_ver_tiss_w) INTO STRICT  nr_seq_material_w, cd_servico_w;

			if (coalesce(nr_seq_material_w::text, '') = '') then
				nr_seq_material_w := 0;
			end if;
		end if;

		select	count(1)
		into STRICT	qt_regra_w
		from	pls_conversao_proc
		where	(cd_material_imp IS NOT NULL AND cd_material_imp::text <> '')
		and	ie_situacao = 'A'
		and	ie_ptu = 'S';

		if (qt_regra_w > 0) then
			cd_mat_number_inter_w := somente_numero(cd_servico_w);
			SELECT * FROM pls_obter_proced_conversao(	null, null, null, cd_estabelecimento_p, 1, nr_seq_congenere_w, 3, 'R', null, null, null, cd_mat_number_inter_w, ie_tipo_intercambio_w, cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), null, null, null, ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w) INTO STRICT cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w;
		end if;
		if	((coalesce(nr_seq_material_w,0)) <> 0) then
			select	count(nr_sequencia)
			into STRICT	qt_material_w
			from	pls_material
			where	nr_sequencia	= nr_seq_material_w;
		end if;

		if (coalesce(qt_material_w,0) = 0) then
			SELECT * FROM ptu_obter_material_conversao(	cd_servico_w, ie_tipo_tabela_w, dt_procedimento_w, 'R', 'A', null, ie_tipo_intercambio_w, nr_seq_material_w, cd_servico_mat_w, ie_somente_codigo_w) INTO STRICT nr_seq_material_w, cd_servico_mat_w, ie_somente_codigo_w;
		end if;

		if (coalesce(nr_seq_material_w,0) = 0) then
			nr_seq_material_w	:= null;
		end if;

		if (coalesce(nr_seq_material_w::text, '') = '') then
			cd_mat_number_inter_w := somente_numero(cd_servico_w);

			-- A900
			 nr_seq_material_w := pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'A', 'N', nr_ver_tiss_w);
			-- FEDERACAO
			if (coalesce(nr_seq_material_w::text, '') = '') then
				 nr_seq_material_w := pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'F', 'N', nr_ver_tiss_w);
			end if;
		end if;

		if (cd_proc_conversao_w IS NOT NULL AND cd_proc_conversao_w::text <> '') then
			nr_seq_material_w := null;
		end if;
	else

		if ie_tipo_tabela_w = '4' then 
			/*A origem do procedimento e buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.*/

			SELECT * FROM pls_obter_proced_conversao(	cd_servico_w, 4, null, cd_estabelecimento_p, 1, nr_seq_congenere_w, 3, 'R', null, null, null, null, ie_tipo_intercambio_w, cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), null, null, null, ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w) INTO STRICT cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w;
		else
			/*A origem do procedimento e buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.*/

			SELECT * FROM pls_obter_proced_conversao(	cd_servico_w, null, null, cd_estabelecimento_p, 1, nr_seq_congenere_w, 3, 'R', null, null, null, null, ie_tipo_intercambio_w, cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), null, null, null, ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w) INTO STRICT cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w;
		end if;
		
		-- Obter a origem padrao para os itens conforme a regra.
		ie_origem_proced_padrao_w := pls_obter_origem_proced(cd_estabelecimento_p, null, 'R', dt_procedimento_w, null);

		if (coalesce(ie_origem_proced_conv_w::text, '') = '') then
			--jjung OS 483853 - 02/10/2012 - adicionado restricao para data de vigencia das regras cadastradas.
			ie_origem_proced_conv_w := ie_origem_proced_padrao_w;
		end if;
		--Criado tratamento para atender as OS 575917 que solicita que seja buscado a ultima origem valida e a OS 644869 onde indica que deve ser respeitada a origem padrao do sistema
		if (ie_origem_proc_valido_w	= 'S') then

			select	count(1)
			into STRICT	qt_proced_origem_w
			from	procedimento
			where	cd_procedimento = cd_proc_conversao_w
			and	ie_origem_proced = ie_origem_proced_conv_w
			and	ie_situacao = 'A';
			/*Se este procedimento nao existir na origem padrao e selecionado o max origem proced*/

			if (qt_proced_origem_w = 0) then
				-- Buscar a origem do procedimento ativo
				select	max(ie_origem_proced)
				into STRICT	ie_origem_proced_conv_w
				from	procedimento
				where	cd_procedimento = cd_proc_conversao_w
				and	ie_situacao = 'A';
				-- Se nao encontrar a origem em procedimentos ativos, busca em procedimentos que nao estiverem ativos.
				if (coalesce(ie_origem_proced_conv_w::text, '') = '') then
					select	max(ie_origem_proced)
					into STRICT	ie_origem_proced_conv_w
					from	procedimento
					where	cd_procedimento = cd_proc_conversao_w;
				end if;
			end if;
		else
			select	count(1)
			into STRICT	qt_proced_origem_w
			from	procedimento
			where	cd_procedimento = cd_proc_conversao_w
			and	ie_origem_proced = ie_origem_proced_conv_w;
			--OS667827

			/*Se este procedimento nao existir na origem padrao e selecionado o max origem proced
			OS 644869 Conforme solicitado foi realizado tratamento para caso nao */
			if (qt_proced_origem_w = 0) then
				-- Buscar a origem do procedimento ativo
				select	coalesce(max(ie_origem_proced),ie_origem_proced_conv_w)
				into STRICT	ie_origem_proced_conv_w
				from	procedimento
				where	cd_procedimento = cd_proc_conversao_w
				and	ie_origem_proced in (	SELECT	ie_origem_proced
								from	PLS_REGRA_ORIGEM_PROCED
								where	ie_origem_proced !=ie_origem_proced_conv_w );
			end if;
		end if;
		select	count(1)
		into STRICT	qt_proc_valido_w
		from	procedimento
		where	cd_procedimento	= cd_proc_conversao_w
		and	ie_origem_proced = ie_origem_proced_conv_w;
		-- Tem que deixar o item como NAO ENCONTRADO
		if (qt_proc_valido_w = 0) then
			cd_proc_conversao_w := null;
			ie_origem_proced_conv_w := null;
		end if;
	end if;

	hr_final_w			:= trim(both substr(ds_conteudo_p,581,8));
	id_acres_urg_emer_w		:= trim(both substr(ds_conteudo_p,589,1));
	nr_cbo_exec_w			:= (trim(both elimina_caractere_especial(substr(ds_conteudo_p,590,6))))::numeric;
	begin
	tec_utilizada_w			:= (trim(both substr(ds_conteudo_p,596,1)))::numeric;
	exception
	when others then
		tec_utilizada_w := null;
	end;

	begin
	dt_autoriz_w		:= to_date(	substr(ds_conteudo_p,603,2) ||
						substr(ds_conteudo_p,601,2) ||
						substr(ds_conteudo_p,597,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_autoriz_w := null;
	end;
	begin
	dt_solicitacao_w		:= to_date(	substr(ds_conteudo_p,611,2) ||
							substr(ds_conteudo_p,609,2) ||
							substr(ds_conteudo_p,605,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_solicitacao_w := null;
	end;
	unidade_medida_w		:= trim(both substr(ds_conteudo_p,613,3));
	nr_reg_anvisa_w			:= trim(both substr(ds_conteudo_p,616,15));
	cd_munic_w			:= trim(both substr(ds_conteudo_p,631,6));

	begin
	dt_pgto_prestador_w		:= to_date(	substr(ds_conteudo_p,674,2) ||
							substr(ds_conteudo_p,672,2) ||
							substr(ds_conteudo_p,668,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_pgto_prestador_w := null;
	end;

	nr_cnpj_fornecedor_w		:= trim(both substr(ds_conteudo_p,676,14));
	cd_rec_prestador_w		:= trim(both substr(ds_conteudo_p,690,10));
	cd_ref_material_fab_w		:= trim(both substr(ds_conteudo_p,700,60));

	id_pag_forn_w			:= trim(both substr(ds_conteudo_p,760,1));
	det_reg_anvisa_w		:= trim(both substr(ds_conteudo_p,801,50));
	nr_nota_fiscal_forn_w		:= trim(both substr(ds_conteudo_p,851,20));
	--cd_ref_material_fab_opme_w	:= trim(substr(ds_conteudo_p,871,60)); Este campo sumiu do manual do PTU 8.0...

	--tipo_rede_min_w			:= trim(substr(ds_conteudo_p,871,1));
	nm_prestador_w			:= null; --trim(substr(ds_conteudo_p,872,70));
	nm_profissional_prestador_w 	:= trim(both substr(ds_conteudo_p,942,60));
	nm_fornecedor_w			:= trim(both substr(ds_conteudo_p,1012,60));
	id_aviso_item_w			:= trim(both substr(ds_conteudo_p,1082,1));
	/* Tratamento da OS 411942 */

	if (coalesce(nm_profissional_prestador_w::text, '') = '') then
		nm_profissional_prestador_w := nm_prestador_w;
	end if;
	nr_seq_aviso_material_w := null;
	nr_seq_aviso_procedimento_w := null;
	-- Obter vinculo com o A520
	if (nr_seq_aviso_conta_w IS NOT NULL AND nr_seq_aviso_conta_w::text <> '') and (id_aviso_item_w = 'S') then
                -- OS 1882669
                if (ie_tipo_tabela_w not in (0,1,4)) then
                        select  max(nr_sequencia)
                        into STRICT    nr_seq_aviso_material_w
                        from    ptu_aviso_material
                        where   nr_seq_aviso_conta      = nr_seq_aviso_conta_w
                        and     cd_mat_envio            = cd_servico_w;
                else
                        select  max(nr_sequencia)
                        into STRICT    nr_seq_aviso_procedimento_w
                        from    ptu_aviso_procedimento
                        where   nr_seq_aviso_conta      = nr_seq_aviso_conta_w
                        and     cd_proc_envio           = cd_servico_w;
                end if;
	end if;

	insert into ptu_nota_servico(	nr_sequencia,nr_seq_nota_cobr,nr_lote, nr_nota,cd_unimed_prestador,
			cd_prestador, nm_prestador,ie_tipo_participacao,dt_procedimento,ie_tipo_tabela,
			dt_atualizacao,nm_usuario, dt_atualizacao_nrec,nm_usuario_nrec,cd_procedimento,
			ie_origem_proced,qt_procedimento,ie_tipo_prestador, ie_rede_propria,ie_tipo_pessoa_prestador,
			vl_procedimento, vl_custo_operacional,vl_filme,cd_porte_anestesico, cd_unimed_autorizadora,
			cd_unimed_pre_req,cd_prestador_req,ie_via_acesso,vl_adic_procedimento,vl_adic_co,
			vl_adic_filme,cd_especialidade,nr_seq_nota, ds_hora_procedimento,cd_cnes_prest,
			nm_profissional_prestador, sg_cons_prof_prest,nr_cons_prof_prest,sg_uf_cons_prest, nr_cgc_cpf_req,
			nm_prestador_requisitante,sg_cons_prof_req, nr_cons_prof_req,sg_uf_cons_req,ie_reembolso,
			nr_autorizacao,nr_cgc_cpf,ie_pacote, cd_ato,tx_procedimento,
			vl_pago_prest,nr_linha,nr_seq_a500,cd_pacote,nr_guia_tiss,
			tp_autoriz,ds_servico,cd_servico,nr_seq_material,ie_alto_custo,
			hr_final,id_acres_urg_emer,nr_cbo_exec,tec_utilizada,dt_autoriz,
			dt_solicitacao,unidade_medida,nr_reg_anvisa,cd_munic,cd_ref_material_fab,
			dt_pgto_prestador,nr_cnpj_fornecedor, cd_rec_prestador,
			id_pag_forn, nm_fornecedor, det_reg_anvisa, nr_nota_fiscal_forn, cd_ref_material_fab_opme,
			id_aviso_item,nr_seq_aviso_material,nr_seq_aviso_procedimento)
	values (	nextval('ptu_nota_servico_seq'),nr_seq_cobranca_w,nr_lote_504_w, nr_nota_504_w,cd_unimed_prestador_w,
			cd_prestador_w, nm_prestador_w,ie_tipo_participacao_w,dt_procedimento_w,ie_tipo_tabela_w,
			clock_timestamp(),nm_usuario_p, clock_timestamp(),nm_usuario_p,cd_proc_conversao_w,
			ie_origem_proced_conv_w,qt_procedimento_w,ie_tipo_prestador_w, ie_rede_propria_w,ie_tipo_pessoa_prestador_w,
			vl_procedimento_w, vl_custo_operacional_w,vl_filme_w,cd_porte_anestesico_w, coalesce(cd_unimed_autorizadora_w,cd_unimed_destino_w),
			cd_unimed_pre_req_w,cd_prestador_req_w,ie_via_acesso_w,vl_adic_procedimento_w,vl_adic_co_w,
			vl_adic_filme_w,cd_especialidade_w,nr_seq_nota_w, ds_hora_procedimento_w,cd_cnes_prest_w,
			nm_profissional_prestador_w, sg_cons_prof_prest_w,nr_cons_prof_prest_w,sg_uf_cons_prest_w, null, --nr_cgc_cpf_req
			null, --nm_prestador_requisitante
			null, --sg_cons_prof_req
			null, --nr_cons_prof_req
			null, --sg_uf_cons_req
			ie_reembolso_w,
			nr_autorizacao_w,nr_cgc_cpf_w,ie_pacote_w, cd_ato_w,tx_procedimento_w,
			vl_pago_prest_w,nr_linha_p,nr_seq_a500_w,cd_pacote_w,null, --nr_guia_tiss
			tp_autoriz_w,ds_servico_w,cd_servico_w,nr_seq_material_w,ie_alto_custo_w,
			hr_final_w,id_acres_urg_emer_w,nr_cbo_exec_w,tec_utilizada_w,dt_autoriz_w,
			dt_solicitacao_w,unidade_medida_w,nr_reg_anvisa_w,cd_munic_w,cd_ref_material_fab_w,
			dt_pgto_prestador_w,nr_cnpj_fornecedor_w, cd_rec_prestador_w,
			id_pag_forn_w, nm_fornecedor_w, det_reg_anvisa_w, nr_nota_fiscal_forn_w, cd_ref_material_fab_opme_w,
			id_aviso_item_w,nr_seq_aviso_material_w,nr_seq_aviso_procedimento_w) returning nr_sequencia into nr_seq_nota_servico_w;
	select	max(nr_seq_prest_inter),
		max(tp_pessoa),
		max(nr_cnpj_cpf),
		max(cd_cnes_cont_exec),
		max(cd_munic_cont_exec),
		max(nm_prest_exec)
	into STRICT	nr_seq_prest_inter_w,
		tp_pessoa_w,
		nr_cnpj_cpf_w,
		cd_cnes_cont_exec_w,
		cd_munic_cont_exec_w,
		nm_prestador_w
	from	ptu_nota_cobranca
	where	nr_sequencia		= nr_seq_cobranca_w;

	if (coalesce(nr_seq_prest_inter_w::text, '') = '') then
		if (tp_pessoa_w = 'J') then
			cd_cgc_prestador_w		:= nr_cnpj_cpf_w;
			nr_cpf_prestador_w		:= null;
		elsif (tp_pessoa_w = 'F') then
			cd_cgc_prestador_w		:= null;
			nr_cpf_prestador_w		:= substr(nr_cnpj_cpf_w,4,11);
		end if;
		SELECT * FROM pls_gerar_prest_intercambio(	nr_cpf_prestador_w, cd_cgc_prestador_w, nm_prestador_w, cd_cnes_cont_exec_w, cd_munic_cont_exec_w, nm_usuario_p, null, nr_cbo_exec_w, nr_seq_prest_inter_w, nr_seq_prestador_w) INTO STRICT nr_seq_prest_inter_w, nr_seq_prestador_w;

		if (nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '') then
			update	ptu_nota_cobranca
			set	nr_seq_prest_inter	= nr_seq_prest_inter_w
			where	nr_sequencia		= nr_seq_cobranca_w;
		end if;
	end if;
end if;

if (ds_registro_w = '505') then

	nr_lote_505_w := null;
	if ((substr(ds_conteudo_p,12,8))::numeric  > 0) then
		nr_lote_505_w := (substr(ds_conteudo_p,12,8))::numeric;
	end if;
	nr_nota_505_w		:= trim(both substr(ds_conteudo_p,132,20));
	ie_tipo_complemento_w	:= (substr(ds_conteudo_p,31,1))::numeric;
	ds_complemento_w	:= trim(both substr(ds_conteudo_p,32,100));
	especif_material_w	:= trim(both substr(ds_conteudo_p,152,500));
	insert into ptu_nota_complemento(nr_sequencia,
		nr_seq_nota_cobr,
		nr_lote,
		nr_nota,
		ie_tipo_complemento,
		ds_complemento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_linha,
		especif_material)
	values (nextval('ptu_nota_complemento_seq'),
		nr_seq_cobranca_w,
		nr_lote_505_w,
		nr_nota_505_w,
		ie_tipo_complemento_w,
		ds_complemento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_linha_p,
		especif_material_w);
end if;

if (ds_registro_w = '506') then
	nr_nota_fiscal_w	:= trim(both substr(ds_conteudo_p,12,20));
	ds_link_nfe_w		:= trim(both substr(ds_conteudo_p,32,120));
	nr_nota_fiscal_doc2_w	:= trim(both substr(ds_conteudo_p,152,20));
	ds_link_nfe_doc2_w	:= trim(both substr(ds_conteudo_p,172,120));

	insert into ptu_nota_fiscal(nr_sequencia,
		nr_seq_nota_cobr,
		ds_link_nfe,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_nota_fiscal,
		nr_linha,
		nr_seq_fatura,
		nr_nota_fiscal_doc2,
		ds_link_nfe_doc2)
	values (nextval('ptu_nota_fiscal_seq'),
		nr_seq_cobranca_w,
		ds_link_nfe_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_nota_fiscal_w,
		nr_linha_p,
		nr_seq_fatura_w,
		nr_nota_fiscal_doc2_w,
		ds_link_nfe_doc2_w);
end if;

if (ds_registro_w = '507') then
	nr_lote_507_w		:= (substr(ds_conteudo_p,12,8))::numeric;
	nr_nota_507_w		:= trim(both substr(ds_conteudo_p,20,20));
	cd_unimed_507_w		:= trim(both substr(ds_conteudo_p,40,4));
	id_benef_507_w		:= trim(both substr(ds_conteudo_p,44,13));
	nm_beneficiario_507_w	:= trim(both substr(ds_conteudo_p,57,25));

	begin
	dt_nasc_507_w		:= to_date(	substr(ds_conteudo_p,88,2) ||
						substr(ds_conteudo_p,86,2) ||
						substr(ds_conteudo_p,82,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_nasc_507_w	:= null;
	end;

	tp_sexo_507_w		:= trim(both substr(ds_conteudo_p,90,1));
	id_rn_507_w		:= trim(both substr(ds_conteudo_p,91,1));

	begin
	dt_reembolso_507_w	:= to_date(	substr(ds_conteudo_p,98,2) ||
						substr(ds_conteudo_p,96,2) ||
						substr(ds_conteudo_p,92,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_reembolso_507_w	:= null;
	end;

	tp_carater_atend_507_w	:= trim(both substr(ds_conteudo_p,100,1));
	tp_pessoa_507_w		:= trim(both substr(ds_conteudo_p,101,1));
	nr_cnpj_cpf_507_w	:= trim(both substr(ds_conteudo_p,102,14));
	id_reembolso_sus_507_w	:= trim(both substr(ds_conteudo_p,156,1));
	nm_prestador_507_w	:= trim(both substr(ds_conteudo_p,157,60));
	id_reem_par_int_w	:= trim(both substr(ds_conteudo_p,227,1));
	cd_cnes_w		:= trim(both substr(ds_conteudo_p,228,7));

	if (tp_pessoa_507_w = 'J') then
		cd_cgc_prestador_w		:= nr_cnpj_cpf_507_w;
		nr_cpf_prestador_w		:= null;
	elsif (tp_pessoa_507_w = 'F') then
		cd_cgc_prestador_w		:= null;
		nr_cpf_prestador_w		:= substr(nr_cnpj_cpf_507_w,4,11);
	end if;

	SELECT * FROM pls_gerar_prest_intercambio(	nr_cpf_prestador_w, cd_cgc_prestador_w, nm_prestador_507_w, cd_cnes_w, null, nm_usuario_p, null, null, nr_seq_prest_inter_w, nr_seq_prestador_w) INTO STRICT nr_seq_prest_inter_w, nr_seq_prestador_w;

	insert into ptu_nota_cobranca_rrs(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_fatura,
		nr_lote,
		nr_nota,
		nr_nota_numerico,
		cd_unimed,
		id_benef,
		nm_beneficiario,
		dt_nasc,
		id_rn,
		tp_sexo,
		dt_reembolso,
		tp_carater_atend,
		tp_pessoa,
		nr_cnpj_cpf,
		nm_prestador,
		id_reembolso_sus,
		nr_seq_conta,
		id_reem_par_int,
		nr_seq_prest_inter,
		cd_cnes)
	values (nextval('ptu_nota_cobranca_rrs_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_fatura_w,
		nr_lote_507_w,
		nr_nota_507_w,
		null,
		cd_unimed_507_w,
		id_benef_507_w,
		nm_beneficiario_507_w,
		dt_nasc_507_w,
		id_rn_507_w,
		tp_sexo_507_w,
		dt_reembolso_507_w,
		tp_carater_atend_507_w,
		tp_pessoa_507_w,
		nr_cnpj_cpf_507_w,
		nm_prestador_507_w,
		id_reembolso_sus_507_w,
		null,
		id_reem_par_int_w,
		nr_seq_prest_inter_w,
		cd_cnes_w);

	update	ptu_fatura
	set	ie_tipo_arquivo_cob	= '507'
	where	nr_sequencia		= nr_seq_fatura_w;
end if;

if (ds_registro_w = '508') then
	nr_lote_508_w		:= (substr(ds_conteudo_p,12,8))::numeric;
	nr_nota_508_w		:= trim(both substr(ds_conteudo_p,20,20));
	begin
	dt_servico_508_w	:= to_date(	substr(ds_conteudo_p,46,2) ||
						substr(ds_conteudo_p,44,2) ||
						substr(ds_conteudo_p,40,4), 'dd/mm/yyyy');
	exception
	when others then
		dt_servico_508_w	:= null;
	end;

	sg_cons_prof_508_w	:= trim(both substr(ds_conteudo_p,88,12));
	if 	trim(both upper(sg_cons_prof_508_w)) = 'CRESS' then
		sg_cons_prof_508_w := 'CRAS';
	end if;

	if 	trim(both upper(sg_cons_prof_508_w)) = 'CREFONO' then
		sg_cons_prof_508_w := 'CRFA';
	end if;

	nr_cons_prof_508_w	:= trim(both substr(ds_conteudo_p,100,15));
	sg_uf_cons_prof_508_w	:= trim(both substr(ds_conteudo_p,115,2));
	tp_particip_508_w	:= trim(both substr(ds_conteudo_p,117,1));
	tp_tabela_508_w		:= (substr(ds_conteudo_p,118,1))::numeric;
	if (tp_tabela_508_w = 4) then
	     ie_pacote_intercambio_w := 'S';
	else
	     ie_pacote_intercambio_w := 'N';
	end if;
	qt_cobrada_508_w	:= dividir_sem_round(((substr(ds_conteudo_p,127,8))::numeric )::numeric, 10000);
	vl_dif_vl_inter_508_w	:= (substr(ds_conteudo_p,135,12)||','|| substr(ds_conteudo_p,147,2))::numeric;
	vl_serv_cob_508_w	:= (substr(ds_conteudo_p,149,12)||','|| substr(ds_conteudo_p,161,2))::numeric;
	nr_autoriz_508_w	:= (substr(ds_conteudo_p,163,10))::numeric;
	ds_servico_508_w	:= trim(both substr(ds_conteudo_p,173,80));
	nr_seq_a500_508_w	:= (substr(ds_conteudo_p,1,8))::numeric;

	nm_profissional_508_w	:= trim(both substr(ds_conteudo_p,253,60));
	cd_servico_508_w	:= (substr(ds_conteudo_p,323,10))::numeric;

	begin
	vl_pago_benef_w		:= (substr(ds_conteudo_p,333,12)||','|| substr(ds_conteudo_p,345,2))::numeric;
	exception
	when others then
		vl_pago_benef_w := 0;
	end;

	if (tp_tabela_508_w not in (2,3,5,6)) then
		ie_origem_proced_padrao_w	:= null;
		ie_origem_proced_conv_w		:= null;
		cd_proc_conversao_w		:= null;

		--A origem do procedimento e buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.
		SELECT * FROM pls_obter_proced_conversao(	cd_servico_508_w, null, null, cd_estabelecimento_p, 1, nr_seq_congenere_w, 3, 'R', null, null, null, null, ie_tipo_intercambio_w, cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), null, null, null, ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w) INTO STRICT cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w;

						

		-- Obter a origem padrao para os itens conforme a regra.
		ie_origem_proced_padrao_w := pls_obter_origem_proced( cd_estabelecimento_p, null, 'R', dt_servico_508_w, null);

		if (coalesce(ie_origem_proced_conv_w::text, '') = '') then
			--jjung OS 483853 - 02/10/2012 - adicionado restricao para data de vigencia das regras cadastradas.
			ie_origem_proced_conv_w := ie_origem_proced_padrao_w;
		end if;

		--Criado tratamento para atender as OS 575917 que solicita que seja buscado a ultima origem valida e a OS 644869 onde indica que deve ser respeitada a origem padrao do sistema
		if (ie_origem_proc_valido_w	= 'S') then

			select	count(1)
			into STRICT	qt_proced_origem_w
			from	procedimento
			where	cd_procedimento		= cd_proc_conversao_w
			and	ie_origem_proced	= ie_origem_proced_conv_w
			and	ie_situacao 		= 'A';

			--Se este procedimento nao existir na origem padrao e selecionado o max origem proced
			if (qt_proced_origem_w = 0) then
				-- Buscar a origem do procedimento ativo
				select	max(ie_origem_proced)
				into STRICT	ie_origem_proced_conv_w
				from	procedimento
				where	cd_procedimento	= cd_proc_conversao_w
				and	ie_situacao	= 'A';

				-- Se nao encontrar a origem em procedimentos ativos, busca em procedimentos que nao estiverem ativos.
				if (coalesce(ie_origem_proced_conv_w::text, '') = '') then
					select	max(ie_origem_proced)
					into STRICT	ie_origem_proced_conv_w
					from	procedimento
					where	cd_procedimento = cd_proc_conversao_w;
				end if;
			end if;
		else
			select	count(1)
			into STRICT	qt_proced_origem_w
			from	procedimento
			where	cd_procedimento = cd_proc_conversao_w
			and	ie_origem_proced = ie_origem_proced_conv_w;
			--OS667827

			--Se este procedimento nao existir na origem padrao e selecionado o max origem proced

			-- OS 644869 Conforme solicitado foi realizado tratamento para caso nao
			if (qt_proced_origem_w = 0) then
				-- Buscar a origem do procedimento ativo
				select	coalesce(max(ie_origem_proced),ie_origem_proced_conv_w)
				into STRICT	ie_origem_proced_conv_w
				from	procedimento
				where	cd_procedimento = cd_proc_conversao_w
				and	ie_origem_proced in (	SELECT	ie_origem_proced
								from	pls_regra_origem_proced
								where	ie_origem_proced !=ie_origem_proced_conv_w );
			end if;
		end if;

		select	count(1)
		into STRICT	qt_proc_valido_w
		from	procedimento
		where	cd_procedimento		= cd_proc_conversao_w
		and	ie_origem_proced	= ie_origem_proced_conv_w;

		-- Tem que deixar o item como NAO ENCONTRADO
		if (qt_proc_valido_w = 0) then
			cd_proc_conversao_w	:= null;
			ie_origem_proced_conv_w := null;
		end if;
	elsif (tp_tabela_508_w in (2,3,5,6)) then

		if (coalesce(ie_material_intercambio_w,'S') = 'S') then
			nr_seq_material_w := cd_servico_508_w;

		elsif (coalesce(ie_material_intercambio_w,'S') = 'C') then
			nr_seq_material_w := null;

			 nr_seq_material_w := pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_508_w, 'O', ie_situacao_material_w, null);

			if (coalesce(nr_seq_material_w::text, '') = '') then
				nr_seq_material_w := 0;
			end if;

		elsif (coalesce(ie_material_intercambio_w,'S') = 'CI') then
			nr_seq_material_w := null;

			dt_ref_conv_mat_unimed_w := clock_timestamp();
			if (ie_data_conv_mat_unimed_w = 'DI') then
				dt_ref_conv_mat_unimed_w := dt_servico_508_w;
			end if;

			SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, dt_ref_conv_mat_unimed_w, cd_servico_508_w, null) INTO STRICT  nr_seq_material_w, cd_servico_508_w;

			if (coalesce(nr_seq_material_w::text, '') = '') then
				nr_seq_material_w := 0;
			end if;
		end if;

		select	count(1)
		into STRICT	qt_regra_w
		from	pls_conversao_proc
		where	(cd_material_imp IS NOT NULL AND cd_material_imp::text <> '')
		and	ie_situacao = 'A'
		and	ie_ptu = 'S';

		if (qt_regra_w > 0) then
			cd_mat_number_inter_w := somente_numero(cd_servico_508_w);

			SELECT * FROM pls_obter_proced_conversao(	null, null, null, cd_estabelecimento_p, 1, nr_seq_congenere_w, 3, 'R', null, null, null, cd_mat_number_inter_w, ie_tipo_intercambio_w, cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), null, null, null, ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w) INTO STRICT cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w;
		end if;

		if	((coalesce(nr_seq_material_w,0)) <> 0) then
			select	count(nr_sequencia)
			into STRICT	qt_material_w
			from	pls_material
			where	nr_sequencia	= nr_seq_material_w;
		end if;

		if (coalesce(qt_material_w,0) = 0) then
			SELECT * FROM ptu_obter_material_conversao(	cd_servico_508_w, tp_tabela_508_w, dt_servico_508_w, 'R', 'A', null, ie_tipo_intercambio_w, nr_seq_material_w, cd_servico_mat_w, ie_somente_codigo_w) INTO STRICT nr_seq_material_w, cd_servico_mat_w, ie_somente_codigo_w;
		end if;

		if (coalesce(nr_seq_material_w,0) = 0) then
			nr_seq_material_w	:= null;
		end if;
		if (coalesce(nr_seq_material_w::text, '') = '') then
			cd_mat_number_inter_w := somente_numero(cd_servico_508_w);

			-- A900
			 nr_seq_material_w := pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'A', 'N', null);
			-- FEDERACAO
			if (coalesce(nr_seq_material_w::text, '') = '') then
				 nr_seq_material_w := pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'F', 'N', null);
			end if;
		end if;

		if (cd_proc_conversao_w IS NOT NULL AND cd_proc_conversao_w::text <> '') then
			nr_seq_material_w := null;
		end if;
	end if;

	if (coalesce(nr_seq_fat_imp_p::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_cobranca_rrs_w
		from	ptu_nota_cobranca_rrs
		where	nm_usuario	= nm_usuario_p
		and	nr_nota 	= nr_nota_508_w;
	else
		select	max(nr_sequencia)
		into STRICT	nr_seq_cobranca_rrs_w
		from	ptu_nota_cobranca_rrs
		where	nr_seq_fatura	= nr_seq_fat_imp_p
		and	nr_nota 	= nr_nota_508_w;
	end if;

	insert into ptu_nota_servico_rrs(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_nota_cobr_rrs,
		nr_lote,
		nr_nota,
		nr_nota_numerico,
		dt_servico,
		nm_profissional,
		sg_cons_prof,
		nr_cons_prof,
		sg_uf_cons_prof,
		tp_particip,
		tp_tabela,
		cd_servico,
		qt_cobrada,
		vl_dif_vl_inter,
		vl_serv_cob,
		nr_autoriz,
		ds_servico,
		nr_seq_conta_proc,
		nr_seq_conta_mat,
		nr_seq_a500,
		nr_seq_proc_partic,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_material,
		vl_pago_benef)
	values (nextval('ptu_nota_servico_rrs_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_cobranca_rrs_w,
		nr_lote_508_w,
		nr_nota_508_w,
		null,
		dt_servico_508_w,
		nm_profissional_508_w,
		sg_cons_prof_508_w,
		nr_cons_prof_508_w,
		sg_uf_cons_prof_508_w,
		tp_particip_508_w,
		tp_tabela_508_w,
		cd_servico_508_w,
		qt_cobrada_508_w,
		vl_dif_vl_inter_508_w,
		vl_serv_cob_508_w,
		nr_autoriz_508_w,
		ds_servico_508_w,
		null,
		null,
		nr_seq_a500_508_w,
		null,
		cd_proc_conversao_w,
		ie_origem_proced_conv_w,
		nr_seq_material_w,
		vl_pago_benef_w);
end if;

if (ds_registro_w = '998') then
	update	ptu_fatura
	set	ds_hash		= trim(both substr(ds_conteudo_p,12,32))
	where	nr_sequencia	= nr_seq_fatura_w;
end if;
if (ds_registro_w = '999') then
	-- parametro [21] - Ao importar o arquivo, gravar na data de emissao, a mesma data do recebimento
	ie_parametro_21_w := obter_param_usuario(1293, 21, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_parametro_21_w);

	-- parametro [33] - Gerar data de recebimento do A500 conforme a data de postagem do mesmo
	ie_parametro_33_w := obter_param_usuario(1293, 33, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_parametro_33_w);

	begin
	dt_recebimento_fat_w	:= to_date(	substr(ds_conteudo_p,20,2)||
						substr(ds_conteudo_p,17,2)||
						substr(ds_conteudo_p,12,4)||
						substr(ds_conteudo_p,22,2)||
						substr(ds_conteudo_p,25,2)||
						substr(ds_conteudo_p,28,2),'dd/mm/yyyy hh24:mi:ss');
	exception
	when others then
		dt_recebimento_fat_w := null;
	end;
	update	ptu_fatura
	set	dt_postagem		= dt_recebimento_fat_w,
		dt_emissao_fatura	= CASE WHEN coalesce(ie_parametro_21_w,'N')='S' THEN dt_recebimento_fat_w  ELSE dt_emissao_fatura END ,
		dt_recebimento_fatura	= CASE WHEN coalesce(ie_parametro_33_w,'N')='S' THEN dt_recebimento_fat_w  ELSE dt_recebimento_fatura END
	where	nr_sequencia		= nr_seq_fatura_w;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_fatura_v110a ( ds_conteudo_p text, ie_tipo_arquivo_p bigint, cd_estabelecimento_p bigint, nr_linha_p bigint, nm_usuario_p text, nr_seq_fatura_p INOUT bigint, nr_seq_fat_imp_p INOUT ptu_fatura.nr_sequencia%type) FROM PUBLIC;

