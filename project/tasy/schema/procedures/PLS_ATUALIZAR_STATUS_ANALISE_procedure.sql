-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_status_analise ( nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_partic_proc_p bigint, nr_seq_analise_p bigint, ie_comitar_p text, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE



nr_seq_conta_proc_w	bigint;
nr_seq_conta_mat_w	bigint;
nr_seq_partic_proc_w	bigint;
ie_origem_analise_w	smallint;


BEGIN
/*incluído a atualização da análise, para que os valores de participante sejam atualizados após a pls_análise_status_pgto Diogo*/

select	max(ie_origem_analise)
into STRICT	ie_origem_analise_w
from	pls_analise_conta
where	nr_sequencia = nr_seq_analise_p;

if (coalesce(nr_seq_conta_proc_p,0) = 0) then
	nr_seq_conta_proc_w := null;
else
	nr_seq_conta_proc_w := nr_seq_conta_proc_p;

end if;

if (coalesce(nr_seq_conta_mat_p,0) = 0) then
	nr_seq_conta_mat_w := null;
else
	nr_seq_conta_mat_w := nr_seq_conta_mat_p;
end if;

if (coalesce(nr_seq_partic_proc_p,0) = 0) then
	nr_seq_partic_proc_w := null;
else
	nr_seq_partic_proc_w := nr_seq_partic_proc_p;
end if;
/*necessário rodar o status pgto antes do processo para que seja ajustado o valor liberado dos itens antes de recálcular a conta*/

CALL pls_analise_status_pgto(	nr_seq_conta_p, null, null,
				nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p,
				nr_seq_partic_proc_w, null, null,
				null	);
if (coalesce(nr_seq_conta_proc_p,0) > 0) then

	update	pls_conta_proc
	set	tx_item = CASE WHEN coalesce(ie_via_acesso,'X')='X' THEN 100  ELSE tx_item END
	where	nr_sequencia = nr_seq_conta_proc_w;
end if;
CALL pls_recalcular_conta(nr_seq_conta_p, nm_usuario_p,'C','S','N',null,null);

if (ie_origem_analise_w = 3) then
	CALL pls_atual_w_resumo_conta_ptu(	nr_seq_conta_p, null, null,
					null, nr_seq_analise_p, nm_usuario_p	);

else
	CALL pls_atualiza_w_resumo_conta(	nr_seq_conta_p, null, null,
					null, nr_seq_analise_p, nm_usuario_p	);
end if;

CALL pls_analise_status_item(	nr_seq_conta_p, nr_seq_conta_mat_w, nr_seq_conta_proc_w,
				nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p,
				nr_seq_partic_proc_w	);

CALL pls_analise_status_pgto(	nr_seq_conta_p, null, null,
				nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p,
				nr_seq_partic_proc_w, null, null,
				null	);


if (coalesce(nr_seq_conta_proc_p,0) > 0) then
	update	pls_conta_proc
	set	ie_status	= 'A'
	where	nr_sequencia	= nr_seq_conta_proc_w
	and	ie_status 	<> 'D';
end if;

if (coalesce(nr_seq_conta_mat_p,0) = 0) then
	Update	pls_conta_mat
	set	ie_status = 'A'
	where	nr_sequencia = nr_seq_conta_mat_p;
end if;

if (coalesce(ie_comitar_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_status_analise ( nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_partic_proc_p bigint, nr_seq_analise_p bigint, ie_comitar_p text, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

