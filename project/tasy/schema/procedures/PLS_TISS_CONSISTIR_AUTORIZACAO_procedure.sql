-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tiss_consistir_autorizacao ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, ds_parametro_um_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_proced_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realiza a consistencia  de Autorizacao.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

				
/* IE_TIPO_GLOSA_P
	C - Conta
	CP - Conta procedimento
	CM - Conta material
	A - Autorizacao
	AP - Autorizacao procedimento
	AM - Autorizacao material
*/
 

cd_procedimento_w		bigint;
ie_origem_proced_w		integer;
nr_seq_segurado_w		bigint;
qt_reg_w			integer;
nr_seq_conta_w			bigint;
ie_liberar_item_autor_w		varchar(1);
ie_autorizado_w			varchar(1) := 'S';
ie_existe_regra_w		varchar(1);
ie_tipo_despesa_w		varchar(1);
cd_guia_w			varchar(20);
nr_seq_guia_w			bigint;
qt_utilizada_w			double precision;
qt_autorizada_w			double precision;
nm_medico_solicitante_imp_w	varchar(255);
ie_medico_informado_w		varchar(1) := 'S';
cd_medico_solicitante_w		varchar(10);
ie_tipo_guia_w			varchar(2) := '0';
ie_proc_autorizado_w		varchar(1) := 'S';
dt_solicitacao_w		timestamp;
cd_senha_w			varchar(20);
cd_senha_imp_w			varchar(20);
cd_guia_referencia_w		varchar(20);
cd_guia_referencia_imp_w	varchar(20);
ie_senha_guia_w			varchar(1) := 'S';
cd_motivo_glosa_w		varchar(10);
nr_seq_motivo_glosa_w		bigint;
nr_seq_material_w		bigint;
cd_usuario_plano_imp_w		varchar(30);
nr_seq_protocolo_w		bigint;
ie_situacao_protocolo_w		varchar(1);
ie_tipo_conta_w			varchar(10);
nr_seq_guia_int_w		bigint;
nr_seq_outorgante_w		bigint;
nr_seq_congenere_w		bigint;
nr_seq_guia_conta_w		pls_guia_plano.nr_sequencia%type;
cd_versao_tiss_w		pls_protocolo_conta.cd_versao_tiss%type;
nr_seq_regra_autor_w		pls_regra_autorizacao.nr_sequencia%type;
ds_observacao_w			varchar(1000);
ds_log_call_w			varchar(1500);


BEGIN
if (ie_tipo_glosa_p = 'C') then
	begin
		select	a.cd_medico_solicitante,
			a.ie_tipo_guia,
			a.cd_senha,
			a.cd_senha_imp,
			coalesce(a.cd_guia_referencia,a.cd_guia),
			coalesce(a.cd_guia_solic_imp,a.cd_guia_imp),
			a.nr_seq_segurado,
			a.nr_seq_protocolo,
			coalesce(a.ie_tipo_conta,'X'),
			b.ie_situacao,
			b.nr_seq_congenere,
			a.nr_seq_guia,
			b.cd_versao_tiss
		into STRICT	cd_medico_solicitante_w,
			ie_tipo_guia_w,
			cd_senha_w,
			cd_senha_imp_w,
			cd_guia_referencia_w,
			cd_guia_referencia_imp_w,
			nr_seq_segurado_w,
			nr_seq_protocolo_w,
			ie_tipo_conta_w,
			ie_situacao_protocolo_w,
			nr_seq_congenere_w,
			nr_seq_guia_w,
			cd_versao_tiss_w
		from	pls_conta		a,
			pls_protocolo_conta 	b
		where	a.nr_seq_protocolo 	= b.nr_sequencia
		and	a.nr_sequencia 		= nr_sequencia_p;		
	exception
	when others then
		cd_medico_solicitante_w := null;
		nr_seq_protocolo_w	:= null;
		ie_situacao_protocolo_w := null;
		nr_seq_outorgante_w := null;
	end;

	if (ie_evento_p = 'IA') then
		cd_medico_solicitante_w := pls_obter_dados_gerar_conta(nr_sequencia_p, 'MS');
		cd_senha_w		:= cd_senha_imp_w;
		cd_guia_referencia_w	:= cd_guia_referencia_imp_w;
	end if;
	
	if (coalesce(cd_medico_solicitante_w,'0') = '0') and
		(((ie_tipo_guia_w = '3') and (ie_evento_p = 'CC') and (ie_situacao_protocolo_w = 'T') and ( cd_versao_tiss_w <= '3.01.00' )) or (ie_tipo_guia_w = '4')) then
		ie_medico_informado_w := 'N';
	end if;
	
	if (cd_senha_w IS NOT NULL AND cd_senha_w::text <> '') and (cd_guia_referencia_w IS NOT NULL AND cd_guia_referencia_w::text <> '') then	
		
		if (ie_tipo_conta_w = 'I') and (cd_senha_w IS NOT NULL AND cd_senha_w::text <> '') and (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
			if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
				select	count(1)
				into STRICT	qt_reg_w
				from	pls_guia_plano	a
				where	a.cd_senha		 = cd_senha_w
				and	a.nr_seq_segurado	 = nr_seq_segurado_w
				and	((coalesce(a.nr_seq_uni_exec::text, '') = '') or (a.nr_seq_uni_exec = coalesce(nr_seq_congenere_w,0)));
				
				/*Tratamento realizado para nao gerar a glosa 1406,  se nao existir uma guia autorizada para a conta drquadros  O.S 588263*/

				if (qt_reg_w = 0)			then
					select	count(1)
					into STRICT	qt_reg_w
					from	pls_execucao_requisicao		exe
					where	pls_obter_req_trans_intercamb(null, exe.nr_seq_requisicao, 'O')	= cd_senha_w	
					and	exe.nr_seq_guia			= nr_seq_guia_w;
					
					if (qt_reg_w =  0) then
						ie_senha_guia_w := 'N';
					end if;
				end if;
			end if;
		else
			select	count(1)
			into STRICT	qt_reg_w
			from	pls_guia_plano
			where	cd_guia		= cd_guia_referencia_w
			and	cd_senha	= cd_senha_w
			and	nr_seq_segurado	= nr_seq_segurado_w;		
			
			/*Tratamento realizado para nao gerar a glosa 1406,  se nao existir uma guia autorizada para a conta drquadros  O.S 588263*/

			if (qt_reg_w = 0)			and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '')	then
				ie_senha_guia_w := 'N';
			end if;	
		end if;
	end if;

elsif (ie_tipo_glosa_p = 'CP') then
	ie_autorizado_w := 'N';
	/* obter dados da conta e conta_proc */

	begin	
	select	coalesce(a.cd_procedimento,a.cd_procedimento_imp),
		coalesce(a.ie_origem_proced,ie_origem_proced_p),
		b.nr_sequencia,
		a.ie_tipo_despesa,
		(b.cd_guia),
		b.nr_seq_segurado,
		coalesce(b.ie_tipo_conta,'X'),
		b.cd_senha,
		b.nr_seq_protocolo,
		b.nr_seq_guia
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_conta_w,
		ie_tipo_despesa_w,
		cd_guia_w,
		nr_seq_segurado_w,
		ie_tipo_conta_w,
		cd_senha_w,
		nr_seq_protocolo_w,
		nr_seq_guia_conta_w
	from	pls_conta	b,
		pls_conta_proc	a
	where	a.nr_sequencia	= nr_sequencia_p
	and	a.nr_seq_conta	= b.nr_sequencia;
	exception
	when others then
		cd_guia_w	:= null;
	end;	

	select	max(nr_seq_congenere)
	into STRICT	nr_seq_congenere_w
	from	pls_protocolo_conta
	where	nr_sequencia = nr_seq_protocolo_w;

	if (ie_tipo_conta_w = 'I') and (cd_senha_w IS NOT NULL AND cd_senha_w::text <> '') and (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_guia_int_w
		from	pls_guia_plano	a
		where	a.cd_senha		= cd_senha_w
		and	a.nr_seq_segurado	= nr_seq_segurado_w
		and	coalesce(nr_seq_uni_exec,0) = coalesce(nr_seq_congenere_w,0);
	end if;
	
	if (ie_evento_p = 'IA') then		
		begin
		select	coalesce(cd_guia_solic_imp,cd_guia_imp),
			elimina_caracteres_especiais(cd_usuario_plano_imp)
		into STRICT	cd_guia_w,
			cd_usuario_plano_imp_w
		from	pls_conta	b,
			pls_conta_proc	a
		where	a.nr_sequencia	= nr_sequencia_p
		and	a.nr_seq_conta	= b.nr_sequencia;
		exception
		when others then
			cd_guia_w	:= null;
		end;
		
		if (coalesce(nr_seq_segurado_w::text, '') = '') then
			select	coalesce(max(nr_seq_segurado),0)
			into STRICT	nr_seq_segurado_w
			from	pls_segurado_carteira
			where	cd_usuario_plano	= cd_usuario_plano_imp_w;
		end if;
	end if;
	
	/* Somente procurar qual a guia caso nao tenha gravado na conta */

	if (coalesce(nr_seq_guia_conta_w::text, '') = '') then
		/*Se for intercambio verifica o congenere*/

		if (ie_tipo_conta_w = 'I') then
			select	coalesce(max(a.nr_sequencia),0)
			into STRICT	nr_seq_guia_w
			from	pls_guia_plano	a
			where	a.cd_guia		= cd_guia_w
			and	a.nr_seq_segurado	= nr_seq_segurado_w
			and	coalesce(nr_seq_uni_exec,0) = coalesce(nr_seq_congenere_w,0)
			and	a.ie_status <> '3';
			
			if (coalesce(nr_seq_guia_w,0) = 0)	then
				/*Tratamento para buscar a sequencia da guia conforme feito na trigger PLS_CONTA_ATUAL
				para guias de intercambio 588663 drquadros*/
		
				select	max(e.nr_seq_guia)
				into STRICT	nr_seq_guia_w
				from	pls_execucao_requisicao  e,
					ptu_resposta_autorizacao d,
					ptu_nota_servico	 c
				where	d.nr_seq_origem		= c.nr_autorizacao
				and	d.nr_seq_requisicao	= e.nr_seq_requisicao
				and	c.nr_seq_conta_proc 	in ( SELECT	a.nr_sequencia
									  from		pls_conta_proc a
									  where		a.nr_sequencia = nr_sequencia_p);
			end if;
		
		else
			select	coalesce(max(a.nr_sequencia),0)
			into STRICT	nr_seq_guia_w
			from	pls_guia_plano	a
			where	a.cd_guia		= cd_guia_w
			and	a.nr_seq_segurado	= nr_seq_segurado_w
			and	a.ie_status <> '3';
		
		end if;
		
		if (coalesce(nr_seq_guia_w,0) = 0) and (coalesce(nr_seq_guia_int_w,0) <> 0) then
			nr_seq_guia_w := nr_seq_guia_int_w;
		end if;
	else
		nr_seq_guia_w	:= nr_seq_guia_conta_w;
	end if;	
	
	SELECT * FROM pls_consiste_proced_autor(	nr_seq_conta_w, nr_sequencia_p, nm_usuario_p, cd_estabelecimento_p, nr_seq_prestador_p, ie_evento_p, ie_origem_proced_p, ie_liberar_item_autor_w, ie_existe_regra_w, nr_seq_motivo_glosa_w, nr_seq_regra_autor_w) INTO STRICT ie_liberar_item_autor_w, ie_existe_regra_w, nr_seq_motivo_glosa_w, nr_seq_regra_autor_w;
	
	if (ie_liberar_item_autor_w = 'S') and (ie_tipo_despesa_w in ('1','2','4')) then
		select  coalesce(max(qt_autorizada),0)
		into STRICT	qt_autorizada_w
		from 	table(pls_conta_autor_pck.obter_dados(nr_seq_guia_w,'P', cd_estabelecimento_p, ie_origem_proced_w, cd_procedimento_w));
	
		if (qt_autorizada_w > 0) then
			ie_autorizado_w := 'S';
				
		end if;
	else
		ie_autorizado_w := 'S';
	end if;
	
	if (ie_autorizado_w = 'N') then
		ds_observacao_w := ' Regra de autorizacao: ' || nr_seq_regra_autor_w;
	end if;
	/* Foi retirado um tratamento que o Demitrius havia feito na OS455745 para guia de referencia
	agora a guia de referencia ja e tratada na pls_conta_autor_pck */
elsif (ie_tipo_glosa_p = 'CM') then	
	ie_autorizado_w := 'N';
	/* obter dados da conta e conta_mat */

	begin	
	select	a.nr_seq_material,
		b.nr_sequencia,
		a.ie_tipo_despesa,
		b.cd_guia,
		b.nr_seq_segurado,
		coalesce(b.ie_tipo_conta,'X'),
		b.cd_senha,
		b.nr_seq_guia
	into STRICT	nr_seq_material_w,
		nr_seq_conta_w,
		ie_tipo_despesa_w,
		cd_guia_w,
		nr_seq_segurado_w,
		ie_tipo_conta_w,
		cd_senha_w,
		nr_seq_guia_conta_w
	from	pls_conta	b,
		pls_conta_mat	a
	where	a.nr_sequencia	= nr_sequencia_p
	and	a.nr_seq_conta	= b.nr_sequencia;
	exception
	when others then
		cd_guia_w	:= null;
	end;	
	
	begin
		select	nr_seq_outorgante
		into STRICT	nr_seq_outorgante_w
		from	pls_protocolo_conta
		where	nr_sequencia = nr_seq_protocolo_w;
	exception
	when others then
		nr_seq_outorgante_w := null;
	end;
	
	if (ie_tipo_conta_w = 'I') and (cd_senha_w IS NOT NULL AND cd_senha_w::text <> '') and (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_guia_int_w
		from	pls_guia_plano	a
		where	a.cd_senha		= cd_senha_w
		and	a.nr_seq_segurado	= nr_seq_segurado_w
		and	coalesce(nr_seq_uni_exec,0) = coalesce(nr_seq_outorgante_w,0);
	end if;
	
	if (ie_evento_p = 'IA') then
		
		begin
		select	coalesce(cd_guia_solic_imp,cd_guia_imp)
		into STRICT	cd_guia_w						
		from	pls_conta	b,
			pls_conta_mat	a
		where	a.nr_sequencia	= nr_sequencia_p
		and	a.nr_seq_conta	= b.nr_sequencia;
		exception
		when others then
			cd_guia_w	:= null;
		end;
	end if;

	/* Somente procurar qual a guia caso nao tenha gravado na conta */

	if (coalesce(nr_seq_guia_conta_w::text, '') = '') then
		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_guia_w
		from	pls_guia_plano	a
		where	a.cd_guia		= cd_guia_w
		and	a.nr_seq_segurado	= nr_seq_segurado_w
		and	a.ie_status <> '3';	
	else
		nr_seq_guia_w	:= nr_seq_guia_conta_w;	
	end if;
		
	SELECT * FROM pls_consiste_mat_autor(	nr_seq_conta_w, nr_sequencia_p, nm_usuario_p, cd_estabelecimento_p, nr_seq_prestador_p, ie_liberar_item_autor_w, ie_existe_regra_w, nr_seq_regra_autor_w) INTO STRICT ie_liberar_item_autor_w, ie_existe_regra_w, nr_seq_regra_autor_w;
	
	if (ie_liberar_item_autor_w = 'S') then
		if (nr_seq_guia_w <> 0) then	
			select  coalesce(max(qt_autorizada),0)
			into STRICT	qt_autorizada_w
			from 	table(pls_conta_autor_pck.obter_dados(nr_seq_guia_w,'M', cd_estabelecimento_p, null, null, nr_seq_material_w));
			
			
			if (qt_autorizada_w > 0) then
				ie_autorizado_w := 'S';
			end if;
			
			if (coalesce(ie_autorizado_w,'N') = 'N') then					
				if (ie_tipo_despesa_w	= '7') then /* OPM */
				
					ie_autorizado_w := 'N';				
				else
					ie_autorizado_w := 'S';
				end if;
			end if;		
		end if;
	else
		ie_autorizado_w := 'S';
	end if;
	
	if (ie_autorizado_w = 'N') then
		ds_observacao_w := ' Regra de autorizacao: ' || nr_seq_regra_autor_w;
	end if;
	
	/* Foi retirado um tratamento que o Demitrius havia feito na OS455745 para guia de referencia
	agora a guia de referencia ja e tratada na pls_conta_autor_pck */
	
elsif (ie_tipo_glosa_p = 'A') then

	begin
	select	nm_medico_solicitante_imp,
		cd_medico_solicitante,
		ie_tipo_guia
	into STRICT	nm_medico_solicitante_imp_w,
		cd_medico_solicitante_w,
		ie_tipo_guia_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_sequencia_p;
	exception
	when others then
		nm_medico_solicitante_imp_w := null;
	end;	

	if (ie_evento_p = 'IG') and (coalesce(nm_medico_solicitante_imp_w,'X') = 'X') and (ie_tipo_guia_w <> '3') then
		ie_medico_informado_w := 'N';
	end if;

	if (ie_evento_p = 'CG') and (coalesce(cd_medico_solicitante_w,'0') = '0') then
		ie_medico_informado_w := 'N';
	end if;	
elsif (ie_tipo_glosa_p = 'AP') then
	
	/*Obter dados do procedimento da autorizacao*/

	begin
		select	cd_procedimento,
			ie_origem_proced,
			nr_seq_guia	
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_guia_w
		from	pls_guia_plano_proc
		where	nr_sequencia = nr_sequencia_p;
	exception
	when others then
		cd_procedimento_w := null;
	end;
	
	/*Obter dados da guia */

	begin
		select	nr_seq_segurado,
			dt_solicitacao
		into STRICT	nr_seq_segurado_w,
			dt_solicitacao_w
		from	pls_guia_plano		
		where	nr_sequencia = nr_seq_guia_w;
	exception
	when others then
		nr_seq_segurado_w := null;
	end;
		
	ie_proc_autorizado_w := pls_obter_se_proc_autorizado(cd_procedimento_w,ie_origem_proced_w,nr_seq_guia_w,nr_seq_segurado_w,dt_solicitacao_w);
	
end if;

/*2206 -  OPM informado nao autorizado*/

if (ie_autorizado_w = 'N') and (ie_tipo_despesa_w = 7) then
	CALL pls_gravar_glosa_tiss('2206',
		ds_observacao_w, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, nr_seq_conta_w);	
end if;


/* 1402 - Procedimento nao autorizado*/

if (ie_autorizado_w = 'N') and (ie_tipo_despesa_w <> 7) then
	CALL pls_gravar_glosa_tiss('1402',
		ds_observacao_w, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, nr_seq_conta_w);
end if;

/* 1815 - Procedimento nao autorizado -> alterado para 1402 OS 757971	*/
	
if (ie_autorizado_w = 'N') and (ie_tipo_despesa_w <> 7) then
	update	pls_conta
	set	ie_exige_autorizacao = 'S'
	where	nr_sequencia = nr_seq_conta_w;
		
	if (coalesce(nr_seq_motivo_glosa_w,0) > 0) then
		cd_motivo_glosa_w	:= tiss_obter_motivo_glosa(nr_seq_motivo_glosa_w,'C');
		CALL pls_gravar_glosa_tiss(cd_motivo_glosa_w, 
			ds_observacao_w, ie_evento_p,
			nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
			nr_seq_ocorrencia_p, '', nm_usuario_p,
			cd_estabelecimento_p, nr_seq_conta_w);
	else	
		CALL pls_gravar_glosa_tiss('1402',
			ds_observacao_w, ie_evento_p,
			nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
			nr_seq_ocorrencia_p, '', nm_usuario_p,
			cd_estabelecimento_p, nr_seq_conta_w);
	end if;
end if;

/* 1411 - Solicitante nao Informado*/


/*Diego 30/09/2011 	Removido o evento de importacao do aquivo conta.
		Para este evento existe a glosa 9906 */
if (ie_medico_informado_w = 'N') then
	CALL pls_gravar_glosa_tiss('1411',
		null, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, nr_seq_conta_w);
end if;

/* 1419 - Servico solicitado ja autorizado*/

if (ie_proc_autorizado_w = 'N') then
	CALL pls_gravar_glosa_tiss('1419',
		null, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, nr_seq_conta_w);
end if;

/* 1406 - Numero da Senha informado diferente do liberado*/

if (ie_senha_guia_w = 'N') then
	CALL pls_gravar_glosa_tiss('1406',
		null, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, nr_seq_conta_w);
end if;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_consistir_autorizacao ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, ds_parametro_um_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_proced_p bigint) FROM PUBLIC;

