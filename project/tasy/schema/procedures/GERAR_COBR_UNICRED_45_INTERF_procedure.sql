-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobr_unicred_45_interf ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_conteudo_w		varchar(500);
ds_numero_doc_w 		varchar(9);
nr_seq_apres_w		bigint := 0;

/* Header de arquivo */

dt_remessa_retorno_w	timestamp;
qt_registro_w		bigint;
vl_total_remessa_w		double precision;

/* Registro */

nr_conta_w		titulo_receber_cobr.nr_conta%type;
vl_cobranca_w		titulo_receber_cobr.vl_cobranca%type;
dt_pagamento_previsto_w	titulo_receber.dt_pagamento_previsto%type;

c01 CURSOR FOR
SELECT	CASE WHEN length(pls_obter_dados_pagador_fin(b.nr_seq_pagador,'C'))=6 THEN  substr(pls_obter_dados_pagador_fin(b.nr_seq_pagador,'C'), 2,5)  ELSE substr(pls_obter_dados_pagador_fin(b.nr_seq_pagador,'C'), 1,8) END  || '-' || substr(pls_obter_dados_pagador_fin(b.nr_seq_pagador,'DC'),1,1),
	--c.vl_cobranca,
  b.VL_SALDO_TITULO vl_cobranca,
	b.dt_pagamento_previsto,
	c.nr_titulo
from	cobranca_escritural a,
	titulo_receber_v b,
	titulo_receber_cobr c
where	a.nr_sequencia		= c.nr_seq_cobranca
and	c.nr_titulo			= b.nr_titulo
and	a.nr_sequencia		= nr_seq_cobr_escrit_p;


BEGIN

delete	from w_envio_banco
where	nm_usuario	= nm_usuario_p;

/* Header do arquivo */

select	coalesce(max(a.dt_remessa_retorno),clock_timestamp())
into STRICT	dt_remessa_retorno_w
from	cobranca_escritural a
where	a.nr_sequencia	= nr_seq_cobr_escrit_p;

select	count(*),
	sum(a.vl_cobranca)
into STRICT	qt_registro_w,
	vl_total_remessa_w
from	titulo_receber_cobr a
where	a.nr_seq_cobranca	= nr_seq_cobr_escrit_p;

ds_conteudo_w	:=	to_char(dt_remessa_retorno_w,'yymmdd') ||
			lpad(qt_registro_w,4,'0') ||
			lpad('0',9,'0') ||
			lpad(somente_numero(to_char(coalesce(vl_total_remessa_w,0),'99999999999990.00')),16,'0');

nr_seq_apres_w	:= nr_seq_apres_w + 1;

insert into w_envio_banco(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_estabelecimento,
			ds_conteudo,
			nr_seq_apres)
	values (	nextval('w_envio_banco_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_estabelecimento_p,
			ds_conteudo_w,
			nr_seq_apres_w);

/* Fim Header */


/* Detalhe */

open	c01;
loop
fetch	c01 into
	nr_conta_w,
	vl_cobranca_w,
	dt_pagamento_previsto_w,
	ds_numero_doc_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	ds_conteudo_w	:=	Substr(
					lpad(nr_conta_w,10,0) ||
					'244' ||
					lpad(ds_numero_doc_w,9,0) ||
					lpad(somente_numero(to_char(coalesce(vl_cobranca_w,0),'99999999999990.00')),16,'0') ||
					to_char(dt_pagamento_previsto_w ,'yymmdd')
				,0,44);

	nr_seq_apres_w	:= nr_seq_apres_w + 1;

	insert into w_envio_banco(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_estabelecimento,
				ds_conteudo,
				nr_seq_apres)
		values (	nextval('w_envio_banco_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_estabelecimento_p,
				ds_conteudo_w,
				nr_seq_apres_w);

end	loop;
close	c01;

/* Fim  Detalhe */

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobr_unicred_45_interf ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

