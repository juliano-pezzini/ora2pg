-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_atualizar_retlaudo_aih ( nr_seq_laudo_p bigint, nr_aih_retorno_p bigint, dt_retorno_secr_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
 
nr_aih_antiga_w		bigint;
nr_seq_aih_ant_w	bigint;
cd_pessoa_fisica_w	varchar(10);
ds_erro_w		varchar(255);
ie_origem_proced_w	bigint;
nr_sequencia_w		bigint;
ie_atualiza_laudos_aih_w	varchar(10);


BEGIN 
 
/* Obter dados do laudo */
 
begin 
select	nr_aih, 
	nr_seq_aih, 
	substr(obter_pessoa_atendimento(nr_atendimento, 'C'),1,10), 
	ie_origem_proced 
into STRICT	nr_aih_antiga_w, 
	nr_seq_aih_ant_w, 
	cd_pessoa_fisica_w, 
	ie_origem_proced_w 
from	sus_laudo_paciente 
where	nr_seq_interno	= nr_seq_laudo_p;
exception 
	when others then 
	nr_aih_antiga_w		:= 0;
	nr_seq_aih_ant_w	:= 0;
end;
 
begin 
update	sus_laudo_paciente 
set	dt_retorno_secr	= dt_retorno_secr_p, 
	nr_aih		= nr_aih_retorno_p, 
	nr_seq_aih	= 0, 
	nm_usuario	= nm_usuario_p, 
	dt_atualizacao	= clock_timestamp() 
where	nr_seq_interno	= nr_seq_laudo_p;
exception 
	when no_data_found then 
		nr_aih_antiga_w	:= nr_aih_antiga_w;
	when others then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(263427, 'NR_AIH_ANTIGA_W=' || nr_aih_antiga_w);
 
end;
 
ie_atualiza_laudos_aih_w	 := coalesce(Obter_Valor_Param_Usuario(1006,10,Obter_Perfil_Ativo,nm_usuario_p,0),'S');
begin 
update	sus_laudo_paciente 
set	dt_retorno_secr	= dt_retorno_secr_p, 
	nr_aih		= nr_aih_retorno_p, 
	nr_seq_aih	= 0, 
	nm_usuario	= nm_usuario_p, 
	dt_atualizacao	= clock_timestamp() 
where	nr_aih		= nr_aih_antiga_w 
and	nr_seq_aih	= nr_seq_aih_ant_w 
and	nr_seq_interno	<> nr_seq_laudo_p 
and	ie_atualiza_laudos_aih_w	= 'S';
exception 
	when no_data_found then 
		nr_aih_antiga_w	:= nr_aih_antiga_w;
	when others then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(263427, 'NR_AIH_ANTIGA_W=' || nr_aih_antiga_w);
end;
 
if (nr_aih_antiga_w	> 0) then 
	 
	if (ie_origem_proced_w <> 7 ) then 
		begin 
		insert into sus_aih(nr_aih, nr_atendimento, dt_emissao, cd_orgao_emissor, ie_identificacao, cd_medico_responsavel, 
			cd_procedimento_solic, ie_origem_proced, dt_atualizacao, nm_usuario, nr_protocolo, vl_total_aih, 
			cd_motivo_cobranca, ie_especialidade_aih, qt_dia_uti_mes_ini, qt_dia_uti_mes_ant, qt_dia_uti_mes_alta, 
			qt_nascidos_vivos, qt_nascidos_mortos, nr_anterior_aih, cd_cid_notificacao, ie_gestacao_risco, 
			ie_infeccao_hospitalar, qt_dia_acompanhante, dt_autorizacao_acomp, qt_nasc_sai_alta, qt_nasc_sai_trans, 
			qt_nasc_sai_obito, vl_ponto_sp, cd_medico_gestor, dt_autorizacao_gestor, ie_autorizacao_gestor, qt_permanencia_sus, 
			qt_permanencia_real, qt_longa_permanencia, nr_gestante_pre_natal, nr_proxima_aih, qt_filho, ie_grau_instrucao, 
			ie_contraceptivo_um, ie_contraceptivo_dois, ie_motivo_alta_uti_neo, qt_peso_grama, qt_mes_gestacao, nr_interno_conta, 
			cd_motivo_alta, nr_cat, dt_inicial, dt_final, ie_clinica, ie_carater_inter_sus, cd_cid_principal, cd_cid_secundario, 
			nr_sequencia, nr_seq_faec, qt_ponto_sp, vl_tot_sp, cd_cid_causas_assoc, cd_cid_causa_morte, cd_cep, cd_municipio_ibge, 
			ds_endereco) 
		SELECT	nr_aih_retorno_p, nr_atendimento, dt_emissao, cd_orgao_emissor, ie_identificacao, cd_medico_responsavel, 
			cd_procedimento_solic, ie_origem_proced, dt_atualizacao, nm_usuario, nr_protocolo, vl_total_aih, 
			cd_motivo_cobranca, ie_especialidade_aih, qt_dia_uti_mes_ini, qt_dia_uti_mes_ant, qt_dia_uti_mes_alta, 
			qt_nascidos_vivos, qt_nascidos_mortos, nr_anterior_aih, cd_cid_notificacao, ie_gestacao_risco, 
			ie_infeccao_hospitalar, qt_dia_acompanhante, dt_autorizacao_acomp, qt_nasc_sai_alta, qt_nasc_sai_trans, 
			qt_nasc_sai_obito, vl_ponto_sp, cd_medico_gestor, dt_autorizacao_gestor, ie_autorizacao_gestor, qt_permanencia_sus, 
			qt_permanencia_real, qt_longa_permanencia, nr_gestante_pre_natal, nr_proxima_aih, qt_filho, ie_grau_instrucao, 
			ie_contraceptivo_um, ie_contraceptivo_dois, ie_motivo_alta_uti_neo, qt_peso_grama, qt_mes_gestacao, nr_interno_conta, 
			cd_motivo_alta, nr_cat, dt_inicial, dt_final, ie_clinica, ie_carater_inter_sus, cd_cid_principal, cd_cid_secundario, 
			0, nr_seq_faec, qt_ponto_sp, vl_tot_sp, cd_cid_causas_assoc, cd_cid_causa_morte, cd_cep, cd_municipio_ibge, 
			ds_endereco 
		from	sus_aih 
		where	nr_aih		= nr_aih_antiga_w 
		and	nr_sequencia	= nr_seq_aih_ant_w;
		exception 
			when no_data_found then 
				nr_aih_antiga_w	:= nr_aih_antiga_w;
			when others then 
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(279042);
		end;
 
		/* Atualizar tabelas dependentes */
 
		begin 
		update	sus_aih_reg_civil 
		set	nr_aih		= nr_aih_retorno_p 
		where	nr_aih		= nr_aih_antiga_w;
		exception 
			when no_data_found then 
				nr_aih_antiga_w	:= nr_aih_antiga_w;
			when others then 
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(263428);
		end;	
		 
		begin 
		update	sus_leito_movto 
		set	nr_aih		= nr_aih_retorno_p 
		where	nr_aih		= nr_aih_antiga_w;
		exception 
			when no_data_found then 
				nr_aih_antiga_w	:= nr_aih_antiga_w;
			when others then 
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(279044);
		end;
		 
		begin 
		update	material_atend_paciente 
		set	nr_aih		= nr_aih_retorno_p 
		where	nr_aih		= nr_aih_antiga_w;
		exception 
			when no_data_found then 
				nr_aih_antiga_w	:= nr_aih_antiga_w;
			when others then 
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(279046);
		end;
		 
		/* Excluir AIH antiga */
 
		begin 
		delete	from sus_aih 
		where	nr_aih	= nr_aih_antiga_w;
		exception 
			when others then 
				ds_erro_w	:= SQLERRM(SQLSTATE);
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(263585, 'DS_ERRO_W=' || ds_erro_w);		
		end;
		 
	 
	else 
	 
		select	coalesce(max(nr_sequencia)+1,0) 
		into STRICT	nr_sequencia_w 
		from	sus_aih_unif 
		where	nr_aih		= nr_aih_retorno_p;
		 
		begin 
		insert into sus_aih_unif( 
			nr_aih, 
			nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_estabelecimento, 
			ie_identificacao_aih, 
			nr_proxima_aih, 
			nr_anterior_aih, 
			dt_emissao, 
			ie_mudanca_proc, 
			cd_procedimento_solic, 
			ie_origem_proc_solic, 
			cd_procedimento_real, 
			ie_origem_proc_real, 
			cd_medico_solic,    
			cd_cid_principal, 
			cd_cid_secundario, 
			cd_cid_causa_compl, 
			cd_cid_causa_morte, 
			nr_interno_conta, 
			nr_atendimento, 
			cd_medico_responsavel, 
			cd_modalidade, 
			cd_motivo_cobranca, 
			cd_especialidade_aih, 
			ie_codigo_autorizacao, 
			qt_nascido_vivo, 
			qt_nascido_morto, 
			qt_saida_alta, 
			qt_saida_transferencia, 
			qt_saida_obito, 
			nr_gestante_prenatal, 
			cd_orgao_emissor_aih, 
			cd_carater_internacao, 
			dt_inicial, 
			dt_final,    
			nr_proc_interno_solic, 
			nr_proc_interno_real) 
		SELECT	nr_aih_retorno_p, 
			nr_sequencia_w, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_estabelecimento, 
			ie_identificacao_aih, 
			nr_proxima_aih, 
			nr_anterior_aih, 
			dt_emissao, 
			ie_mudanca_proc, 
			cd_procedimento_solic, 
			ie_origem_proc_solic, 
			cd_procedimento_real, 
			ie_origem_proc_real, 
			cd_medico_solic,    
			cd_cid_principal, 
			cd_cid_secundario, 
			cd_cid_causa_compl, 
			cd_cid_causa_morte, 
			nr_interno_conta, 
			nr_atendimento, 
			cd_medico_responsavel, 
			cd_modalidade, 
			cd_motivo_cobranca, 
			cd_especialidade_aih, 
			ie_codigo_autorizacao, 
			qt_nascido_vivo, 
			qt_nascido_morto, 
			qt_saida_alta, 
			qt_saida_transferencia, 
			qt_saida_obito, 
			nr_gestante_prenatal, 
			cd_orgao_emissor_aih, 
			cd_carater_internacao, 
			dt_inicial, 
			dt_final,    
			nr_proc_interno_solic, 
			nr_proc_interno_real 
		from	sus_aih_unif 
		where	nr_sequencia	= nr_seq_aih_ant_w 
		and	nr_aih		= nr_aih_antiga_w;
		exception 
			when no_data_found then 
				nr_aih_antiga_w	:= nr_aih_antiga_w;
			when others then 
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(279051);
		end;
		 
		begin 
		update	sus_laqueadura_vasectomia 
		set	nr_aih		= nr_aih_retorno_p, 
			nr_seq_aih	= nr_sequencia_w 
		where	nr_aih		= nr_aih_antiga_w		 
		and	nr_seq_aih	= nr_seq_aih_ant_w;
		exception 
			when no_data_found then 
				nr_aih_antiga_w	:= nr_aih_antiga_w;
			when others then 
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(279052);
		end;	
		 
		begin 
		update	sus_registro_civil 
		set	nr_aih		= nr_aih_retorno_p, 
			nr_seq_aih	= nr_sequencia_w 
		where	nr_aih		= nr_aih_antiga_w		 
		and	nr_seq_aih	= nr_seq_aih_ant_w;
		exception 
			when no_data_found then 
				nr_aih_antiga_w	:= nr_aih_antiga_w;
			when others then 
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(263428);
		end;	
			 
		begin 
		delete	from sus_aih_unif 
		where	nr_aih	= nr_aih_antiga_w;
		exception 
			when others then 
				ds_erro_w	:= SQLERRM(SQLSTATE);
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(263585, 'DS_ERRO_W=' || ds_erro_w);		
		end;
			 
	end if;
	 
	begin 
	update	procedimento_paciente 
	set	nr_aih		= nr_aih_retorno_p 
	where	nr_aih		= nr_aih_antiga_w;
	exception 
		when no_data_found then 
			nr_aih_antiga_w	:= nr_aih_antiga_w;
		when others then 
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(263429);
	end;	
	 
 
else 
	CALL Sus_Gerar_Aih_Lote(dt_retorno_secr_p, nr_aih_retorno_p, cd_pessoa_fisica_w, nr_seq_laudo_p, nm_usuario_p);
end if;
 
commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_atualizar_retlaudo_aih ( nr_seq_laudo_p bigint, nr_aih_retorno_p bigint, dt_retorno_secr_p timestamp, nm_usuario_p text) FROM PUBLIC;

