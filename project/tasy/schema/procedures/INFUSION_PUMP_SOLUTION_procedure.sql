-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE infusion_pump_solution ( seq_bomba_infusao_p bigint, ie_alteracao_p bigint, ds_retorno_p INOUT text, qt_vel_infusao_p bigint default null) AS $body$
DECLARE

    cd_estabelecimento_w smallint;
    nr_atendimento_w  bigint;
    nr_prescricao_w   bigint;
    nr_seq_solucao_w  integer;
    dt_alteracao_w   timestamp;
    ie_forma_infusao_w  varchar(255);
    nr_seq_dispositivo_w bigint;
    ie_tipo_dosagem_w  varchar(3);
    qt_vol_fase_w   double precision;
    qt_vel_infusao_w  double precision;
    qt_vol_parcial_w double precision;
    qt_volume_w  double precision := 0;
    nm_usuario_w   varchar(15);
    ie_exige_aprazamento_w varchar(255);
    ie_consiste_inicio_w varchar(255);
    ie_fator_consiste_w  varchar(255);
    nr_seq_motivo_adm_w  bigint;

    nr_seq_bomba_interface_w bigint;
    nr_seq_mat_cpoe_w bigint;
    nr_seq_agente_w bigint;
    ie_status_w varchar(3);
    ds_retorno_iniciada_w varchar(255);
    ds_retorno_finalizada_w varchar(255);
    ds_retorno_alterada_w varchar(255);

BEGIN
    SELECT
      nr_atendimento,  
      nr_seq_bomba_interface, 
      nr_seq_mat_cpoe,
      nr_seq_agente,
      nr_seq_solucao, 
      nm_usuario,
	  dt_bomba_infusao
    INTO STRICT 
      nr_atendimento_w, 
      nr_seq_bomba_interface_w, 
      nr_seq_mat_cpoe_w,
      nr_seq_agente_w,
      nr_seq_solucao_w, 
      nm_usuario_w,
      dt_alteracao_w	  
    FROM bomba_infusao 
    WHERE nr_sequencia = seq_bomba_infusao_p;
	
	select  coalesce(max(a.nr_prescricao), 0)
	into STRICT    nr_prescricao_w
	from	  prescr_medica a,
			    prescr_material b			
	where   a.nr_prescricao = b.nr_prescricao
	and   	a.nr_atendimento = nr_atendimento_w
	and	    b.nr_seq_mat_cpoe = nr_seq_mat_cpoe_w
	and   	a.dt_validade_prescr >= clock_timestamp()
	and     a.dt_inicio_prescr <= clock_timestamp();
	
	if (nr_prescricao_w = 0) then
		select  a.nr_prescricao
		into STRICT    nr_prescricao_w
		from    prescr_medica a,
				    prescr_material b			
		where   a.nr_prescricao = b.nr_prescricao
		and   	a.nr_atendimento = nr_atendimento_w
		and	    b.nr_seq_mat_cpoe = nr_seq_mat_cpoe_w
		and   	a.dt_validade_prescr < clock_timestamp()
		order by a.dt_validade_prescr desc LIMIT 1;
	
	end if;
	
	    SELECT DISTINCT
            ie_status_solucao, 
            nr_seq_dispositivo, 
            ie_tipo_dosagem, 
            qt_volume_adep
      INTO STRICT 
            ie_status_w, 
            nr_seq_dispositivo_w, 
            ie_tipo_dosagem_w, 
            qt_vol_fase_w
      FROM TABLE(valores_adep_pck.get_solucao(null, nr_prescricao_w, nr_seq_solucao_w));
		
    IF (nr_seq_agente_w IS NOT NULL AND nr_seq_agente_w::text <> '') THEN
        IF (ie_alteracao_p = 1 ) THEN
            BEGIN
                ds_retorno_iniciada_w := WHEB_MENSAGEM_PCK.get_texto(1172757);
                IF ie_status_w = 'I' THEN
                    ds_retorno_p := ds_retorno_iniciada_w;
                    RETURN;
                END IF;

                ds_retorno_alterada_w := WHEB_MENSAGEM_PCK.get_texto(1172759) ||': '|| ie_status_w;
                IF ie_status_w <> 'N' THEN
                    ds_retorno_p := ds_retorno_alterada_w;
                    RETURN;
                END IF;
            END;
        END IF;
        IF (ie_alteracao_p = 4 ) THEN
            BEGIN
                ds_retorno_finalizada_w := WHEB_MENSAGEM_PCK.get_texto(1172758);
                IF ie_status_w = 'F' THEN
                    ds_retorno_p := ds_retorno_finalizada_w;
                    RETURN;
                END IF;
            END;
        END IF;
        IF (ie_alteracao_p = 5 ) THEN
            BEGIN
                qt_vel_infusao_w := qt_vel_infusao_p;
                UPDATE bomba_infusao_interface
                   SET qt_velocidade = qt_vel_infusao_w
                 WHERE nr_sequencia = nr_seq_bomba_interface_w;
            END;

            BEGIN
                CALL registrar_solucao_pepo(
                    'AJUSTE_VELOCIDADE',
                    nm_usuario_w,
                    nr_seq_bomba_interface_w,
                    NULL,
                    nr_seq_agente_w);
            END;
        END IF;

    ELSE
    
    SELECT
           cd_estabelecimento 
      INTO STRICT
           cd_estabelecimento_w
      FROM prescr_medica 
     WHERE nr_prescricao = nr_prescricao_w;

        IF ie_alteracao_p = 1 THEN
            BEGIN
                SELECT qt_velocidade 
                  INTO STRICT qt_vel_infusao_w 
                  FROM bomba_infusao_interface 
                 WHERE nr_sequencia = nr_seq_bomba_interface_w;
            END;

            BEGIN
                IF ie_status_w = 'I' THEN
                    RETURN;
                END IF;

                ds_retorno_alterada_w := WHEB_MENSAGEM_PCK.get_texto(1172759) ||': '|| ie_status_w;
                IF ie_status_w <> 'N' THEN
                    ds_retorno_p := ds_retorno_alterada_w;
                    RETURN;
                END IF;
            END;

              
            SELECT
                   obter_valor_param_usuario(1113, 401, NULL, nm_usuario_w, cd_estabelecimento_w) 
              INTO STRICT ie_forma_infusao_w 
;

            SELECT coalesce(MAX(nr_sequencia), 0) 
              INTO STRICT nr_seq_motivo_adm_w 
              FROM adep_motivo_admnistracao
             WHERE ie_solucao = 'S' AND ie_motivo_padrao = 'S';

        ELSIF ie_alteracao_p = 4 THEN
            BEGIN
                ds_retorno_finalizada_w := WHEB_MENSAGEM_PCK.get_texto(1172758);
                IF ie_status_w = 'F' THEN
                    ds_retorno_p := ds_retorno_finalizada_w;
                    RETURN;
                ELSE
                    SELECT obter_valor_param_usuario(1113, 401, NULL, nm_usuario_w, cd_estabelecimento_w) 
                      INTO STRICT ie_forma_infusao_w 
;
                END IF;
            END;
            BEGIN
                SELECT qt_velocidade
                  INTO STRICT qt_vel_infusao_w
                  FROM bomba_infusao_interface 
                 WHERE nr_sequencia = nr_seq_bomba_interface_w;
            END;
            BEGIN
                SELECT GET_DT_FINAL_BOMBA_TRANSICAO(nr_seq_bomba_interface_w),
                       GET_VOLUME_FINAL_INTERFACE(nr_seq_bomba_interface_w),
                       0
                  INTO STRICT dt_alteracao_w,
                       qt_volume_w,
                       qt_vol_parcial_w
;
            END;
        ELSIF ie_alteracao_p = 5 THEN
            BEGIN
                qt_vel_infusao_w := qt_vel_infusao_p;
                UPDATE bomba_infusao_interface
                   SET qt_velocidade = qt_vel_infusao_w
                 WHERE nr_sequencia = nr_seq_bomba_interface_w;
            END;

            dt_alteracao_w := clock_timestamp();
            ie_forma_infusao_w := '';
            nr_seq_dispositivo_w := null;
            qt_vol_fase_w := 0;
            nr_seq_motivo_adm_w := null;
            qt_vol_parcial_w := GET_VOLUME_PARCIAL_INTERFACE(nr_seq_mat_cpoe_w);

        END IF;

        ds_retorno_p => ds_retorno_p := gerar_alteracao_sol_prescr( 
            cd_estabelecimento_p => cd_estabelecimento_w, nr_atendimento_p => nr_atendimento_w, ie_tipo_solucao_p => 1, nr_prescricao_p => nr_prescricao_w, nr_seq_solucao_p => nr_seq_solucao_w, ie_alteracao_p => ie_alteracao_p, dt_alteracao_p => dt_alteracao_w, ie_forma_infusao_p => ie_forma_infusao_w, nr_seq_dispositivo_p => nr_seq_dispositivo_w, ie_tipo_dosagem_p => ie_tipo_dosagem_w, qt_vol_fase_p => qt_vol_fase_w, qt_vel_infusao_p => qt_vel_infusao_w, qt_vol_infundido_p => qt_volume_w, qt_vol_desprezado_p => 0, qt_vol_parcial_p => qt_vol_parcial_w, nr_seq_motivo_p => null, ds_observacao_p => null, nm_usuario_p => nm_usuario_w, nr_etapa_evento_p => null, ie_exige_aprazamento_p => ie_exige_aprazamento_w, ie_consiste_inicio_p => ie_consiste_inicio_w, ie_fator_consiste_p => ie_fator_consiste_w, ds_retorno_p => ds_retorno_p, nr_seq_assinatura_p => 0, nr_seq_motivo_adm_p => nr_seq_motivo_adm_w, seq_bomba_infusao_p => seq_bomba_infusao_p);

    END IF;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE infusion_pump_solution ( seq_bomba_infusao_p bigint, ie_alteracao_p bigint, ds_retorno_p INOUT text, qt_vel_infusao_p bigint default null) FROM PUBLIC;

