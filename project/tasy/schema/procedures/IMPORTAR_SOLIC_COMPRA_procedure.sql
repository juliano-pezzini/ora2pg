-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_solic_compra ( nr_solic_importacao_p text, dt_solicitacao_compra_p timestamp, cd_pessoa_solicitante_p text, cd_local_estoque_p bigint, cd_centro_custo_p bigint, ie_urgente_p text, cd_material_p bigint, cd_unidade_medida_compra_p text, qt_material_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


nm_usuario_w				solic_compra.nm_usuario%type;
dt_liberacao_w				solic_compra.dt_liberacao%type;
nr_solic_compra_w			solic_compra.nr_solic_compra%type;
cd_local_estoque_w			solic_compra.cd_local_estoque%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_item_solic_compra_w		solic_compra_item.nr_item_solic_compra%type;
cd_pessoa_solicitante_w		solic_compra.cd_pessoa_solicitante%type;
cd_unidade_medida_compra_w	solic_compra_item.cd_unidade_medida_compra%type;
qt_erro_w 					integer := 0;


BEGIN
nm_usuario_w := nm_usuario_p;
cd_local_estoque_w := cd_local_estoque_p;
cd_estabelecimento_w := cd_estabelecimento_p;
cd_pessoa_solicitante_w := cd_pessoa_solicitante_p;
cd_unidade_medida_compra_w := cd_unidade_medida_compra_p;


/* Verifica se o solicitante foi informado */

if (coalesce(cd_pessoa_solicitante_w::text, '') = '') then
	select cd_pessoa_solic_padrao
	into STRICT	cd_pessoa_solicitante_w
	from parametro_compras
	where cd_estabelecimento = cd_estabelecimento_w;
end if;

/* Verifica se o centro de custo ou local de estoque foram informados */

if (coalesce(cd_centro_custo_p::text, '') = '' and coalesce(cd_local_estoque_w::text, '') = '') then
	select cd_local_estoque_padrao
	into STRICT	cd_local_estoque_w
	from parametro_compras
	where cd_estabelecimento = cd_estabelecimento_w;
end if;

/* Verifica se as informacoes necessarias foram preenchidas */

if (coalesce(nr_solic_importacao_p::text, '') = '') or (coalesce(cd_material_p::text, '') = '') or (coalesce(qt_material_p::text, '') = '') or (coalesce(cd_pessoa_solicitante_w::text, '') = '') or (coalesce(cd_centro_custo_p::text, '') = '' and coalesce(cd_local_estoque_w::text, '') = '') then
	
	qt_erro_w := qt_erro_w + 1;
end if;

if (qt_erro_w  = 0) then
	
	select max(nr_solic_compra)
	into STRICT nr_solic_compra_w
	from solic_compra
	where nr_solic_importacao = nr_solic_importacao_p;

	if (coalesce(nr_solic_compra_w::text, '') = '') then
		select	nextval('solic_compra_seq')
		into STRICT	nr_solic_compra_w
		;
		
		begin
			insert into solic_compra(
					nr_solic_compra,
					nr_solic_importacao,
					dt_solicitacao_compra,
					ie_aviso_aprov_oc,
					cd_pessoa_solicitante,
					cd_local_estoque,
					cd_centro_custo,
					ie_urgente,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					ie_situacao)
				values (nr_solic_compra_w,
					nr_solic_importacao_p,
					coalesce(dt_solicitacao_compra_p,clock_timestamp()),
					'N',
					cd_pessoa_solicitante_w,
					cd_local_estoque_w,
					cd_centro_custo_p,
					coalesce(ie_urgente_p,'N'),
					cd_estabelecimento_w,
					clock_timestamp(),
					nm_usuario_w,
					'A');
		exception
			when others then
			qt_erro_w := qt_erro_w + 1;
		end;
	end if;
	
	if (qt_erro_w = 0) then
	
		select max(dt_liberacao)
		into STRICT dt_liberacao_w
		from solic_compra
		where nr_solic_compra = nr_solic_compra_w;
		
		if (coalesce(dt_liberacao_w::text, '') = '') then
			select 	coalesce(max(nr_item_solic_compra),0)+1
			into STRICT	nr_item_solic_compra_w
			from 	solic_compra_item
			where 	nr_solic_compra = nr_solic_compra_w;
			
			/* Verifica se a unidade de medida de compra foi informada */

			if (coalesce(cd_unidade_medida_compra_w::text, '') = '') then
				begin 
					select	max(cd_unidade_medida_compra)
					into STRICT	cd_unidade_medida_compra_w
					from	material
					where	cd_material = cd_material_p;
				exception
				when others then
				qt_erro_w := qt_erro_w + 1;
				end;
			end if;
			
			begin		
				insert into solic_compra_item(
						nr_solic_compra,
						nr_item_solic_compra,
						cd_material,
						cd_unidade_medida_compra,
						qt_material,
						dt_atualizacao,
						nm_usuario,
						ie_situacao,
						ie_geracao)
					values (nr_solic_compra_w,
						nr_item_solic_compra_w,
						cd_material_p,
						cd_unidade_medida_compra_w,
						qt_material_p,
						clock_timestamp(),
						nm_usuario_w,
						'A',
						'S');
			exception
				when others then
				qt_erro_w := qt_erro_w + 1;
			end;
		else
			qt_erro_w := qt_erro_w + 1;
		end if;
	end if;
end if;
if (qt_erro_w > 0) then
	rollback;
	ds_erro_p := wheb_mensagem_pck.get_texto(302196)|| ' ' || wheb_mensagem_pck.get_texto(800325)
	|| ' ' || nr_solic_importacao_p || ' - ' || wheb_mensagem_pck.get_texto(791832) || ' ' || cd_material_p;
else
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_solic_compra ( nr_solic_importacao_p text, dt_solicitacao_compra_p timestamp, cd_pessoa_solicitante_p text, cd_local_estoque_p bigint, cd_centro_custo_p bigint, ie_urgente_p text, cd_material_p bigint, cd_unidade_medida_compra_p text, qt_material_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

