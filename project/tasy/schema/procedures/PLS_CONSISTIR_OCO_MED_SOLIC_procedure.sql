-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_oco_med_solic ( ie_medico_cooperado_p text, cd_medico_regra_p bigint, nr_seq_conselho_p bigint, nr_seq_proc_espec_p bigint,	-- Procedimento X Especialidade
 nr_seq_ocorrencia_p bigint, cd_medico_solicitante_p text, --O da conta
 dt_referencia_p timestamp, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, ie_tipo_item_p bigint, cd_espec_medica_p bigint, ie_gerar_ocorrencia_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


nr_seq_conselho_w	bigint;
nr_seq_conta_proc_w	bigint;
qt_espec_med_w		bigint;
ie_regra_cooperado_w	varchar(2):= 'S';
ie_regra_medico_w	varchar(2):= 'S';
ie_regra_conselho_w	varchar(2):= 'S';
ie_regra_proc_espec_w	varchar(2):= 'S';
ie_regra_espec_w	varchar(1):= 'S';
ie_cursor_w		varchar(1):= 'N';

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta_proc
	where	((nr_sequencia = nr_seq_conta_proc_p)
	or (nr_seq_conta = nr_seq_conta_p and coalesce(nr_seq_conta_proc_p::text, '') = ''))
	order by 1;


BEGIN

ie_gerar_ocorrencia_p := 'N';

if (coalesce(nr_seq_proc_espec_p,0) > 0) then

	if (ie_tipo_item_p <> 4) then

		open C01;
		loop
		fetch C01 into
			nr_seq_conta_proc_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			if (pls_obter_se_espec_solic_oc(nr_seq_conta_proc_w, nr_seq_proc_espec_p, cd_medico_solicitante_p) = 'N') then
				/*Se for para gerar a ocorrência já gera e para o cursor.
				   No caso de ser consistência de proc não tem alteração no caso de conta pouoa tempo (tendo um procedimento que entra na regra ara gerar ocorrência já gera e não consiste todos,*/
				/*retirado o goto pois não era verificado o conjunto de informações e verificado se o mesmo se encaichava em todos os itens  OS424163 Diogo*/

				ie_regra_proc_espec_w := 'S';
				ie_cursor_w	:=  'S';
			elsif (ie_cursor_w = 'N') then
				ie_regra_proc_espec_w := 'N';
			end if;

			end;
		end loop;
		close C01;

	else
		/*Se for material a regra não é válida*/

		goto final;
	end if;

end if;

if (coalesce(ie_medico_cooperado_p,'A') <> 'A') then
	if (coalesce(ie_medico_cooperado_p,'A') = 'C') then

		/*Se a regra é para cooperados e o participante não é cooperado a regra não é valida*/

		if (pls_obter_se_cooperado_ativo(cd_medico_solicitante_p,dt_referencia_p,null) = 'N') then
			ie_regra_cooperado_w := 'N';
		end if;
	else
		/*Se a regra é para não cooperados e o participante é cooperado a regra não é valida*/

		if (pls_obter_se_cooperado_ativo(cd_medico_solicitante_p,dt_referencia_p,null) = 'S') then
			ie_regra_cooperado_w := 'N';
		end if;
	end if;
end if;

if (coalesce(cd_medico_regra_p,0) > 0) then
	/*Se a regra for de um médico especifico e o solicitante não for o mesmo*/

	if (cd_medico_regra_p <> cd_medico_solicitante_p) then
		ie_regra_medico_w := 'N';
	end if;
end if;

if (coalesce(nr_seq_conselho_p,0) > 0) then
	begin
	select	nr_seq_conselho
	into STRICT	nr_seq_conselho_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_medico_solicitante_p;
	exception
	when others then
		nr_seq_conselho_w := null;
	end;

	if (nr_seq_conselho_w <> nr_seq_conselho_p) then
		ie_regra_conselho_w := 'N';
	end if;
end if;

/*Se o médico possui a especiidade passada por parâmetro*/

if (coalesce(cd_espec_medica_p,0) > 0) then

	select	count(cd_especialidade)
	into STRICT	qt_espec_med_w
	from	medico_especialidade
	where	cd_pessoa_fisica = cd_medico_solicitante_p
	and	cd_especialidade = cd_espec_medica_p  LIMIT 1;

	if (qt_espec_med_w = 0) then
		ie_regra_espec_w	:= 'N';
	end if;

end if;

if (ie_regra_cooperado_w 	= 'S') and (ie_regra_medico_w 	= 'S') and (ie_regra_conselho_w 	= 'S') and (ie_regra_proc_espec_w	= 'S') and (ie_regra_espec_w	= 'S') then
	ie_gerar_ocorrencia_p := 'S';
else
	ie_gerar_ocorrencia_p := 'N';
end if;
<<final>>
if (ie_gerar_ocorrencia_p <> 'S') then
	ie_gerar_ocorrencia_p := 'N';
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_oco_med_solic ( ie_medico_cooperado_p text, cd_medico_regra_p bigint, nr_seq_conselho_p bigint, nr_seq_proc_espec_p bigint, nr_seq_ocorrencia_p bigint, cd_medico_solicitante_p text, dt_referencia_p timestamp, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, ie_tipo_item_p bigint, cd_espec_medica_p bigint, ie_gerar_ocorrencia_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

