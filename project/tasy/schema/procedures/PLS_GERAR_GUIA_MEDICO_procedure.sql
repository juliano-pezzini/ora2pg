-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_guia_medico ( nr_seq_prestador_p bigint, cd_medico_p text, cd_item_p bigint, ie_origem_proced_p bigint, cd_municipio_ibge_p text, cd_especialidade_p bigint, ie_proc_especialidade_p text, nr_seq_tipo_prestador_p bigint, ie_tipo_p bigint, ie_origem_p text, -- W - Portal, T - Tasy
 nr_seq_tipo_guia_p text, nr_seq_plano_p bigint, sg_estado_p text, nr_seq_bairro_p bigint, ie_filtro_portal_p text, -- No portal e sempre 'N' e no Tasy depende do filtro
 nr_seq_regiao_p text, ie_sem_tipo_guia_p text, -- Apenas no Tasy
 ie_instituicao_acred_p text, ie_nivel_acreditacao_p bigint, cd_prestador_p text, ie_cd_prestador_p text, nm_prestador_p text, nm_medico_p text, nm_usuario_p text, ie_carater_internacao_p text, cd_estabelecimento_p bigint, ie_endereco_espec_p text, nr_seq_area_atuacao_p bigint, ie_odontologico_p text, ie_ausentes_p w_pls_guia_medico.ie_ausente%type, ie_tipo_relacao_p text, nr_seq_grupo_servico_p pls_prest_grupo_serv_gm.nr_seq_grupo_servico%type, nm_medico_ou_prestador_p text, ds_logradouro_p text, ie_guia_medico_web_p pls_controle_estab.ie_guia_medico_web%type default 'N', nr_seq_classific_prestador_p pls_prestador.nr_seq_classificacao%type default null) AS $body$
DECLARE

				
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar as informacoes de Guia Medico no Tasy (Desktop), no Portal e em relatorios
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [X] Tasy (Delphi/Java) [X] Portal [X]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

	QUANDO FOR COLOCAR ALGUMA RESTRICAO CONVERSAR COM
	PESSOAL DA OPS - REDE CREDENCIADA
	
	SEMPRE RESTRINGIR SE VAI SER UTILIZADO NO TASY OU NO PORTAL
	ATRAVES DO IE_ORIGEM_P - W - Portal, T - Tasy (se for apenas utilizado em uma aplicacao)

Se for validar informacao de COOPERADO:	PLS_VAL_GUIA_MED_COOPERADO
Se for validar informacao de PRESTADOR:	PLS_VAL_GUIA_MED_PRESTADOR
Se for validar informacao de ESPECIALIDADE:	PLS_OBTER_ESPEC_PREST_MEDICO

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_especialidades_w		varchar(4000) := null;
ds_especialidades_med_w		varchar(4000);
ds_espec_medico_w		varchar(4000);
cd_especialidades_w		varchar(4000);
ds_tipo_prestador_w		varchar(4000);
ds_tipo_estab_cnes_w		varchar(4000);
ds_area_atuacao_med_w		varchar(4000) := null;
ds_endereco_w			varchar(255);
ds_complemento_w		varchar(255);
ds_bairro_w			varchar(255);
cd_cep_w			varchar(255);
ds_email_w			varchar(255);
ds_website_w			varchar(255);
nm_prestador_w			varchar(255);
ie_odontologico_w		varchar(255);
ie_filtro_portal_w		varchar(255);
ie_entra_portal_w		varchar(255);
ie_sem_tipo_guia_w		varchar(255);
ie_filtro_ausentes_w		varchar(255);
ie_filtro_carater_int_w		varchar(255);
ds_fone_adic_w			varchar(255);
ds_fax_w			varchar(80);
ds_municipio_w			varchar(40);
nr_telefone_w			varchar(30);
nr_tel_simples_w		varchar(30);
cd_prestador_w			varchar(30);
cd_prestador_param_w		varchar(30);
nr_crm_w			varchar(20);
cd_municipio_ibge_w		varchar(20);
cd_municipio_ibge_prest_w	varchar(20);
cd_cep_ww			varchar(15)	:= null;
cd_cgc_prestador_w		varchar(14);
cd_pf_prestador_w		varchar(10);
cd_medico_w			varchar(10);
ie_filtro_produto_w		varchar(10);
nr_ddi_telefone_w		varchar(6);
nr_ddd_telefone_w		varchar(6);
nr_endereco_w			varchar(5);
ie_tipo_endereco_w		varchar(4);
ie_tipo_endereco_ww		varchar(4);
ie_tipo_prestador_w		varchar(3);
ie_tipo_compl_prest_w		varchar(3);
nr_ddd_simples_w		varchar(3);
nr_ddd_fax_w			varchar(3);
ie_cd_prestador_w		varchar(2);
ie_insere_w			varchar(1);
ie_insere_c03_w			varchar(1);
ie_prestador_w			varchar(1);
ie_notivisa_w			varchar(1);
ie_pos_grad_360_w		varchar(1);
ie_residencia_saude_w		varchar(1);
ie_particip_qualiss_ans_w	varchar(1);
ie_apalc_w			varchar(1);
ie_adicq_w			varchar(1);
ie_aona_w			varchar(1);
ie_acba_w			varchar(1);
ie_aiqg_w			varchar(1);
ie_especialista_w		varchar(1);
ie_agrupar_especialidade_w	varchar(1)	:= 'S';
ie_estrutura_w			varchar(1)	:= 'N';
ie_gera_apenas_espec_prest_w	varchar(1)	:= 'N';
cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_end_guia_medico_w	bigint;
nr_seq_compl_pf_tel_adic_ww	bigint;
nr_seq_compl_pj_w		bigint;
qt_vinculo_w			bigint;
cd_especialidades_med_w		bigint;
nr_seq_guia_medico_w		bigint;
qt_registros_w			bigint	:= 0;
qt_registro_w			bigint	:= 0;
nr_seq_compl_pf_tel_adic_w	bigint	:= null;
nr_ramal_w			integer;
ie_tipo_complemento_w		smallint	:= 0;
ie_tipo_prest_c01_w		smallint;
ie_tem_grupo_servico_w		smallint	:= 0;
qt_especialidade_w		integer;
qt_tipo_guia_med_w		integer;
contador_w			integer;
dt_referencia_w			timestamp;
sg_estado_w			pessoa_juridica.sg_estado%type;
nr_seq_tipo_compl_adic_w	pls_prestador.nr_seq_tipo_compl_adic%type;
nr_seq_tipo_compl_adic_guia_w	pls_endereco_guia_medico.nr_seq_tipo_compl_adic%type;
ie_ausente_w			w_pls_guia_medico.ie_ausente%type := 'N';
nm_medico_ou_prestador_w	varchar(2000);
ie_historico_guia_medico_w	w_pls_guia_medico.ie_historico_guia_medico%type;
qt_profissional_residente_w	integer;
nr_seq_tipo_prestador_w		pls_prestador.nr_seq_tipo_prestador%type;
ie_consultorio_w		pls_tipo_prestador.ie_consultorio%type;
qt_espec_w			integer;
ds_espec_w			varchar(255);
ie_gera_especialidade_w		varchar(1);
-- Controla o estabelecimento do guia medico Web
ie_guia_medico_web_w		pls_controle_estab.ie_guia_medico_web%type;
qt_profissional_ativos_w	integer;
ie_doutorado_pos_w		pls_prestador.ie_doutorado_pos%type;
ie_acred_rn405_w		pls_web_param_guia_medico.ie_acred_rn405%type;
ie_mestrado_w			pls_prestador.ie_mestrado%type;
nm_busca_guia_prest_w		pls_prestador.nm_busca_guia_medico%type;
ds_bairro_filtro_w		cep_bairro.ds_bairro%type;
cd_cnes_w			cnes_identificacao.cd_cnes%type;
ie_filtra_estab_w		varchar(5) := 'N';
cd_estab_restr_w		estabelecimento.cd_estabelecimento%type := 0;
nr_ddd_whatsapp_w    		varchar(6);
nr_fone_whatapp_w    		varchar(30);

c01 CURSOR FOR
	--PRESTADOR ATIVO, ORIGEM FISICO, ESPECIALIDADE AGRUPADA
	SELECT	1 ie_tipo_prest_c01,
		'PF' ie_tipo_prestador,
		a.nr_sequencia,
		null cd_cgc_prestador,
		cd_pessoa_fisica,
		ie_tipo_endereco,
		nr_seq_compl_pf_tel_adic,
		cd_prestador,
		null nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360,
		coalesce(a.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		null ds_especialidade,
		null cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when c.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico,
		a.ie_doutorado_pos,
		coalesce(a.ie_mestrado,'N') ie_mestrado,
		coalesce(a.ie_fone_whats_guia_medico,'N') ie_whatsapp,
		null nr_seq_cbo_saude
	FROM pls_prestador a
LEFT OUTER JOIN pls_prestador_historico b ON (a.nr_sequencia = b.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador c ON (b.nr_seq_tipo_hist = c.nr_sequencia)
WHERE a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w 	= 'S'   and ((a.cd_estabelecimento		= cd_estab_restr_w) or (cd_estab_restr_w = 0)) and (cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '') and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and ((cd_pessoa_fisica	= cd_medico_p) 		or (coalesce(cd_medico_p::text, '') = '')) and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_param_w)	or coalesce(cd_prestador_param_w,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) -- Adicionado o UPPER, pois o usuario pode digitar maiusculas e minusculas, bem como a operadore pode cadastrar o prestador da mesma forma, 

	-- Atualmente o campo nm_busca_guia_medico nao possui index, quando for criado um indice para o mesmo, tem que criar o function indice para upper.
  and ((upper(a.nm_busca_guia_medico) like upper(nm_medico_ou_prestador_w)) or coalesce(nm_medico_ou_prestador_p::text, '') = '') and ((a.nr_seq_classificacao = nr_seq_classific_prestador_p) or (coalesce(nr_seq_classific_prestador_p::text, '') = '')) group by	a.nr_sequencia, cd_pessoa_fisica, ie_tipo_endereco, nr_seq_compl_pf_tel_adic, cd_prestador,
			coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(a.ie_residencia_saude, 'N'), coalesce(a.ie_particip_qualiss_ans, 'N'),
			a.nr_seq_tipo_compl_adic, a.ie_doutorado_pos, a.ie_mestrado, coalesce(a.ie_fone_whats_guia_medico,'N')

	
union

	-- PRESTADOR ATIVO, ORIGEM FISICO, ESPECIALIDADE NAO AGRUPADA
	SELECT	2 ie_tipo_prest_c01,
		'PF' ie_tipo_prestador,
		a.nr_sequencia,
		null cd_cgc_prestador,
		a.cd_pessoa_fisica,
		a.ie_tipo_endereco,
		a.nr_seq_compl_pf_tel_adic,
		a.cd_prestador,
		null nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360,
		coalesce(a.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		coalesce(b.ds_espec_guia_medico, b.ds_especialidade) ds_especialidade,
		b.cd_especialidade cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when e.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico,
		a.ie_doutorado_pos,
		coalesce(a.ie_mestrado,'N') ie_mestrado,
		coalesce(a.ie_fone_whats_guia_medico,'N') ie_whatsapp,
		b.nr_seq_cbo_saude
	FROM pls_prestador a
LEFT OUTER JOIN pls_prestador_historico d ON (a.nr_sequencia = d.nr_seq_prestador)
LEFT OUTER JOIN pls_prestador_med_espec c ON (a.nr_sequencia = c.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador e ON (d.nr_seq_tipo_hist = e.nr_sequencia)
LEFT OUTER JOIN especialidade_medica b ON (c.cd_especialidade = b.cd_especialidade)
WHERE a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w 	= 'N'   and ((a.cd_estabelecimento		= cd_estab_restr_w) or (cd_estab_restr_w = 0)) and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and ((a.cd_pessoa_fisica	= cd_medico_p) 		or (coalesce(cd_medico_p::text, '') = '')) and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_param_w)	or coalesce(cd_prestador_param_w,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) and coalesce(c.ie_guia_medico,'S')	= 'S'   -- NAO E NECESSARIO O '(+)' POIS NAO PODE EXISTIR ESPECIALIDADE  EM PRESTADOR QUE NAO ESTA CADASTRADO NA ESPECIALIDADE MEDICA
  and (c.cd_especialidade = cd_especialidade_p or coalesce(cd_especialidade_p::text, '') = '') and clock_timestamp() between trunc(coalesce(c.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(c.dt_fim_vigencia, clock_timestamp())) -- Adicionado o UPPER, pois o usuario pode digitar maiusculas e minusculas, bem como a operadore pode cadastrar o prestador da mesma forma, 

	-- Atualmente o campo nm_busca_guia_medico nao possui index, quando for criado um indice para o mesmo, tem que criar o function indice para upper.
  and ((upper(a.nm_busca_guia_medico) like upper(nm_medico_ou_prestador_w)) or coalesce(nm_medico_ou_prestador_p::text, '') = '') and ((a.nr_seq_classificacao = nr_seq_classific_prestador_p) or (coalesce(nr_seq_classific_prestador_p::text, '') = '')) group by	a.nr_sequencia, a.cd_pessoa_fisica, a.ie_tipo_endereco, a.nr_seq_compl_pf_tel_adic,
			a.cd_prestador,	coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(a.ie_residencia_saude, 'N'),
			coalesce(a.ie_particip_qualiss_ans, 'N'), coalesce(b.ds_espec_guia_medico, b.ds_especialidade),
			b.cd_especialidade, a.nr_seq_tipo_compl_adic, a.ie_doutorado_pos, a.ie_mestrado, coalesce(a.ie_fone_whats_guia_medico,'N'), b.nr_seq_cbo_saude
	
union

	-- PRESTADOR ATIVO, ORIGEM JURIDICO, ESPECIALIDADE AGRUPADA
	select	3 ie_tipo_prest_c01,
		'PJ1' ie_tipo_prestador,
		a.nr_sequencia,
		cd_cgc cd_cgc_prestador,
		null,
		ie_tipo_endereco,
		nr_seq_compl_pf_tel_adic,
		cd_prestador,
		nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360,
		coalesce(a.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		null ds_especialidade,
		null cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when c.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico,
		a.ie_doutorado_pos,
		coalesce(a.ie_mestrado,'N') ie_mestrado,
		coalesce(a.ie_fone_whats_guia_medico,'N') ie_whatsapp,
		null nr_seq_cbo_saude
	FROM pls_prestador a
LEFT OUTER JOIN pls_prestador_historico b ON (a.nr_sequencia = b.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador c ON (b.nr_seq_tipo_hist = c.nr_sequencia)
WHERE a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w	= 'S' and ie_tipo_p			<> 2   and ((a.cd_estabelecimento		= cd_estab_restr_w) or (cd_estab_restr_w = 0)) and coalesce(cd_pessoa_fisica::text, '') = '' and coalesce(cd_medico_p::text, '') = '' and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_param_w)	or coalesce(cd_prestador_param_w,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) -- Adicionado o UPPER, pois o usuario pode digitar maiusculas e minusculas, bem como a operadore pode cadastrar o prestador da mesma forma, 

	-- Atualmente o campo nm_busca_guia_medico nao possui index, quando for criado um indice para o mesmo, tem que criar o function indice para upper.
  and ((upper(a.nm_busca_guia_medico) like upper(nm_medico_ou_prestador_w)) or coalesce(nm_medico_ou_prestador_p::text, '') = '') and ((a.nr_seq_classificacao = nr_seq_classific_prestador_p) or (coalesce(nr_seq_classific_prestador_p::text, '') = '')) group by	a.nr_sequencia, cd_cgc, ie_tipo_endereco, nr_seq_compl_pf_tel_adic, cd_prestador,
			nr_seq_compl_pj, coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(a.ie_residencia_saude, 'N'),
			coalesce(a.ie_particip_qualiss_ans, 'N'), a.nr_seq_tipo_compl_adic, a.ie_doutorado_pos, a.ie_mestrado, coalesce(a.ie_fone_whats_guia_medico,'N')
	
union

	-- PRESTADOR ATIVO, ORIGEM JURIDICO, ESPECIALIDADE NAO AGRUPADA
	select	4 ie_tipo_prest_c01,
		'PJ1' ie_tipo_prestador,
		a.nr_sequencia,
		a.cd_cgc cd_cgc_prestador,
		null,
		a.ie_tipo_endereco,
		a.nr_seq_compl_pf_tel_adic,
		a.cd_prestador,
		a.nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360,
		coalesce(a.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		coalesce(b.ds_espec_guia_medico, b.ds_especialidade) ds_especialidade,
		b.cd_especialidade cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when e.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico,
		a.ie_doutorado_pos,
		coalesce(a.ie_mestrado,'N') ie_mestrado,
		coalesce(a.ie_fone_whats_guia_medico,'N') ie_whatsapp,
		b.nr_seq_cbo_saude
	FROM pls_prestador_med_espec c, especialidade_medica b, pls_prestador a
LEFT OUTER JOIN pls_prestador_historico d ON (a.nr_sequencia = d.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador e ON (d.nr_seq_tipo_hist = e.nr_sequencia)
WHERE a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w 	= 'N' and ie_tipo_p			<> 2   and ((a.cd_estabelecimento		= cd_estab_restr_w) or (cd_estab_restr_w = 0)) and coalesce(a.cd_pessoa_fisica::text, '') = '' and coalesce(cd_medico_p::text, '') = '' and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_param_w)	or coalesce(cd_prestador_param_w,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) and coalesce(c.ie_guia_medico,'S')	= 'S' and c.cd_especialidade		= b.cd_especialidade and c.nr_seq_prestador		= a.nr_sequencia and coalesce(c.cd_pessoa_fisica::text, '') = '' and (c.cd_especialidade = cd_especialidade_p or coalesce(cd_especialidade_p::text, '') = '') and clock_timestamp() between trunc(coalesce(c.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(c.dt_fim_vigencia, clock_timestamp())) -- Adicionado o UPPER, pois o usuario pode digitar maiusculas e minusculas, bem como a operadore pode cadastrar o prestador da mesma forma, 

	-- Atualmente o campo nm_busca_guia_medico nao possui index, quando for criado um indice para o mesmo, tem que criar o function indice para upper.
  and ((upper(a.nm_busca_guia_medico) like upper(nm_medico_ou_prestador_w)) or coalesce(nm_medico_ou_prestador_p::text, '') = '') and ((a.nr_seq_classificacao = nr_seq_classific_prestador_p) or (coalesce(nr_seq_classific_prestador_p::text, '') = '')) group by	a.nr_sequencia,	a.cd_cgc, a.ie_tipo_endereco, a.nr_seq_compl_pf_tel_adic, a.cd_prestador,
			a.nr_seq_compl_pj, coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(a.ie_residencia_saude, 'N'),
			coalesce(a.ie_particip_qualiss_ans, 'N'), coalesce(b.ds_espec_guia_medico, b.ds_especialidade),
			b.cd_especialidade, a.nr_seq_tipo_compl_adic, a.ie_doutorado_pos, a.ie_mestrado, coalesce(a.ie_fone_whats_guia_medico,'N'), b.nr_seq_cbo_saude
	
union

	-- PROFISSIONAL DO PRESTADOR ATIVO, ORIGEM JURIDICO, ESPECIALIDADE AGRUPADA
	select	5 ie_tipo_prest_c01,
		'PJ2' ie_tipo_prestador,
		a.nr_sequencia,
		a.cd_cgc cd_cgc_prestador,
		b.cd_medico,
		coalesce(b.ie_tipo_endereco, a.ie_tipo_endereco),
		null nr_seq_compl_pf_tel_adic,
		cd_prestador,
		CASE WHEN coalesce(b.ie_tipo_endereco::text, '') = '' THEN  a.nr_seq_compl_pj  ELSE null END  nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360,
		coalesce(b.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		null ds_especialidade,
		null cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when d.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico,
		a.ie_doutorado_pos,
		coalesce(a.ie_mestrado,'N') ie_mestrado,
		coalesce(a.ie_fone_whats_guia_medico,'N') ie_whatsapp,
		null nr_seq_cbo_saude
	FROM pls_prestador_medico b, pls_prestador a
LEFT OUTER JOIN pls_prestador_historico c ON (a.nr_sequencia = c.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador d ON (c.nr_seq_tipo_hist = d.nr_sequencia)
WHERE a.nr_sequencia			= b.nr_seq_prestador and a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w	= 'S'   and ((a.cd_estabelecimento		= cd_estab_restr_w) or (cd_estab_restr_w = 0)) and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and ((b.cd_medico		= cd_medico_p) 		or (coalesce(cd_medico_p::text, '') = '')) and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_param_w)	or coalesce(cd_prestador_param_w,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) and b.ie_guia_medico		= 'S' and b.ie_situacao			= 'A' and dt_referencia_w between trunc(coalesce(b.dt_inclusao,clock_timestamp()),'dd') and trunc(coalesce(b.dt_exclusao,clock_timestamp()),'dd') -- Adicionado o UPPER, pois o usuario pode digitar maiusculas e minusculas, bem como a operadore pode cadastrar o prestador da mesma forma, 

	-- Atualmente o campo nm_busca_guia_medico nao possui index, quando for criado um indice para o mesmo, tem que criar o function indice para upper.
  and ((upper(b.nm_busca_guia_medico) like upper(nm_medico_ou_prestador_w)) or coalesce(nm_medico_ou_prestador_p::text, '') = '') and ((a.nr_seq_classificacao = nr_seq_classific_prestador_p) or (coalesce(nr_seq_classific_prestador_p::text, '') = '')) group by	a.nr_sequencia, a.cd_cgc, b.cd_medico, coalesce(b.ie_tipo_endereco, a.ie_tipo_endereco),
			cd_prestador, coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(b.ie_residencia_saude, 'N'),
			coalesce(a.ie_particip_qualiss_ans, 'N'), a.nr_seq_tipo_compl_adic, CASE WHEN coalesce(b.ie_tipo_endereco::text, '') = '' THEN  a.nr_seq_compl_pj  ELSE null END , a.ie_doutorado_pos, a.ie_mestrado, coalesce(a.ie_fone_whats_guia_medico,'N')
	
union

	-- PROFISSIONAL DO PRESTADOR ATIVO, ORIGEM JURIDICO, ESPECIALIDADE NAO AGRUPADA
	select	6 ie_tipo_prest_c01,
		'PJ2' ie_tipo_prestador,
		a.nr_sequencia,
		a.cd_cgc cd_cgc_prestador,
		b.cd_medico,
		coalesce(b.ie_tipo_endereco, a.ie_tipo_endereco),
		null nr_seq_compl_pf_tel_adic,
		cd_prestador,
		CASE WHEN coalesce(b.ie_tipo_endereco::text, '') = '' THEN  a.nr_seq_compl_pj  ELSE null END  nr_seq_compl_pj,
		coalesce(a.ie_notivisa, 'N') ie_notivisa,
		a.ie_pos_grad_360,
		coalesce(b.ie_residencia_saude, 'N') ie_residencia_saude,
		coalesce(a.ie_particip_qualiss_ans, 'N') ie_particip_qualiss_ans,
		coalesce(c.ds_espec_guia_medico,c.ds_especialidade) ds_especialidade,
		c.cd_especialidade cd_especialidade,
		a.nr_seq_tipo_compl_adic,
		(case when sum(case when f.ie_guia_medico = 'S' then 1 else 0 end) = 0 then 'N' else 'S' end) ie_historico_guia_medico,
		a.ie_doutorado_pos,
		coalesce(a.ie_mestrado,'N') ie_mestrado,
		coalesce(a.ie_fone_whats_guia_medico,'N') ie_whatsapp,
		c.nr_seq_cbo_saude
	FROM pls_prestador_med_espec d, especialidade_medica c, pls_prestador_medico b, pls_prestador a
LEFT OUTER JOIN pls_prestador_historico e ON (a.nr_sequencia = e.nr_seq_prestador)
LEFT OUTER JOIN pls_tipo_hist_prestador f ON (e.nr_seq_tipo_hist = f.nr_sequencia)
WHERE a.nr_sequencia			= b.nr_seq_prestador and a.ie_guia_medico		= 'S' and a.ie_situacao			= 'A' and ie_agrupar_especialidade_w 	= 'N'   and ((a.cd_estabelecimento		= cd_estab_restr_w) or (cd_estab_restr_w = 0)) and dt_referencia_w <= trunc(coalesce(a.dt_exclusao,clock_timestamp()),'dd') and ((b.cd_medico		= cd_medico_p)		or (coalesce(cd_medico_p::text, '') = '')) and (((a.nr_sequencia	= nr_seq_prestador_p)	or coalesce(nr_seq_prestador_p,0) = 0) or
		((((a.cd_prestador	= cd_prestador_param_w)	or coalesce(cd_prestador_param_w,'0') = '0')) and ie_cd_prestador_w = 'S')) and ((a.ie_tipo_relacao	= ie_tipo_relacao_p) 	or (coalesce(ie_tipo_relacao_p::text, '') = '')) and a.nr_sequencia			= d.nr_seq_prestador and d.cd_pessoa_fisica		= b.cd_medico and d.cd_especialidade		= c.cd_especialidade and b.ie_guia_medico		= 'S' and b.ie_situacao			= 'A' and d.ie_guia_medico 		= 'S' and (d.cd_especialidade		= cd_especialidade_p or coalesce(cd_especialidade_p::text, '') = '') and dt_referencia_w between trunc(coalesce(b.dt_inclusao,clock_timestamp()),'dd') and trunc(coalesce(b.dt_exclusao,clock_timestamp()),'dd') and clock_timestamp() between trunc(coalesce(d.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(d.dt_fim_vigencia, clock_timestamp())) -- Adicionado o UPPER, pois o usuario pode digitar maiusculas e minusculas, bem como a operadore pode cadastrar o prestador da mesma forma, 

	-- Atualmente o campo nm_busca_guia_medico nao possui index, quando for criado um indice para o mesmo, tem que criar o function indice para upper.
  and ((upper(b.nm_busca_guia_medico) like upper(nm_medico_ou_prestador_w)) or coalesce(nm_medico_ou_prestador_p::text, '') = '') and ((a.nr_seq_classificacao = nr_seq_classific_prestador_p) or (coalesce(nr_seq_classific_prestador_p::text, '') = '')) group by 	a.nr_sequencia, a.cd_cgc, b.cd_medico, coalesce(b.ie_tipo_endereco, a.ie_tipo_endereco),
			cd_prestador, coalesce(a.ie_notivisa, 'N'), a.ie_pos_grad_360, coalesce(b.ie_residencia_saude, 'N'),
			coalesce(a.ie_particip_qualiss_ans, 'N'), c.ds_especialidade, c.cd_especialidade, a.nr_seq_tipo_compl_adic, c.ds_espec_guia_medico,
			CASE WHEN coalesce(b.ie_tipo_endereco::text, '') = '' THEN  a.nr_seq_compl_pj  ELSE null END , a.ie_doutorado_pos, a.ie_mestrado, coalesce(a.ie_fone_whats_guia_medico,'N'), c.nr_seq_cbo_saude;

-- Cursor de estrutura do procedimento filtrado
c02 CURSOR FOR
	SELECT	a.ie_estrutura
	from	pls_proced_especialidade	a
	where	((coalesce(a.cd_procedimento::text, '') = '') or (coalesce(cd_item_p::text, '') = '') or (a.cd_procedimento = cd_item_p))
	and	((coalesce(a.ie_origem_proced::text, '') = '') or (coalesce(ie_origem_proced_p::text, '') = '') or (a.ie_origem_proced = ie_origem_proced_p))
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (coalesce(cd_grupo_w::text, '') = '') or (a.cd_grupo_proc = cd_grupo_w))
	and	((coalesce(a.cd_especialidade_proc::text, '') = '') or (coalesce(cd_especialidade_w::text, '') = '') or (a.cd_especialidade_proc = cd_especialidade_w))
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (coalesce(cd_area_w::text, '') = '') or (a.cd_area_procedimento = cd_area_w))
	and	((exists (SELECT	1
				from	pls_prestador_med_espec	x
				where	x.cd_especialidade	= a.cd_especialidade
				and	x.nr_seq_prestador	= nr_seq_prestador_w
				and	x.cd_pessoa_fisica	= cd_medico_w
				and	clock_timestamp() between coalesce(x.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(x.dt_fim_vigencia, clock_timestamp())))) or (exists (select	1
				from	pls_prestador_med_espec x
				where	x.cd_especialidade	= a.cd_especialidade
				and	x.nr_seq_prestador	= nr_seq_prestador_w
				and	coalesce(x.cd_pessoa_fisica::text, '') = ''
				and	clock_timestamp() between coalesce(x.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(x.dt_fim_vigencia, clock_timestamp())))))
	order by a.cd_area_procedimento,
		a.cd_especialidade_proc,
		a.cd_grupo_proc,
		a.cd_procedimento;

-- Cursor para buscar os enderecos adicionais dos profissionais PF ou o endereco do prestador 
c03 CURSOR(nr_seq_prestador_pc		pls_prestador.nr_sequencia%type,
		cd_medico_pc			medico.cd_pessoa_fisica%type,
		cd_municipio_ibge_pc		pls_endereco_guia_medico.cd_municipio_ibge%type,
		cd_especialidades_med_pc	pls_end_guia_med_espec.cd_especialidade%type) FOR
	SELECT	a.ie_tipo_endereco,
		a.nr_sequencia nr_seq_end_guia_medico
	FROM pls_endereco_guia_medico a
LEFT OUTER JOIN pls_end_guia_med_espec b ON (a.nr_sequencia = b.nr_seq_endereco)
WHERE a.nr_seq_prestador		= nr_seq_prestador_pc and a.cd_pessoa_fisica		= cd_medico_pc and b.cd_especialidade		= cd_especialidades_med_pc and ((coalesce(cd_municipio_ibge_pc::text, '') = '') or (a.cd_municipio_ibge = cd_municipio_ibge_pc));

-- Cursor para retornar os enderecos adicionais do guia medico
c04 CURSOR(nr_seq_prestador_pc		pls_prestador.nr_sequencia%type,
		cd_municipio_ibge_pc		pls_endereco_guia_medico.cd_municipio_ibge%type) FOR
	SELECT	ie_tipo_endereco,
		CASE WHEN nr_seq_compl_pj=0 THEN  null  ELSE nr_seq_compl_pj END  nr_seq_end_guia_medico
	from	pls_endereco_guia_medico
	where	nr_seq_prestador	= nr_seq_prestador_pc
	and	((coalesce(cd_municipio_ibge_pc::text, '') = '') or (cd_municipio_ibge = cd_municipio_ibge_pc))
	and	coalesce(cd_pessoa_fisica::text, '') = '';

-- CURSORES 'C05' E 'C06' FORAM RETIRADOS, POIS EXISTE UMA PROCEDURE QUE REALIZA A JUNCAO DE TODAS AS ESPECIALIDADES


-- Cursor para listar as especialidades medica
c07 CURSOR(nr_seq_end_guia_medico_pc	pls_end_guia_med_espec.nr_seq_endereco%type,
		cd_medico_pc			medico.cd_pessoa_fisica%type,
		nr_seq_prestador_pc		pls_prestador.nr_sequencia%type,
		cd_especialidade_pc		especialidade_medica.cd_especialidade%type,
		nr_seq_area_atuacao_pc		pls_prestador_med_espec.nr_seq_area_atuacao%type,
		ie_agrupar_especialidade_pc	text) FOR	
	SELECT	distinct
		d.cd_especialidade
	from	especialidade_medica 	d,
		pls_end_guia_med_espec	c,
		pls_prestador_med_espec a
	where	a.cd_especialidade	= d.cd_especialidade
	and	c.cd_especialidade	= a.cd_especialidade
	and	c.nr_seq_endereco	= nr_seq_end_guia_medico_pc
	and	a.cd_pessoa_fisica	= cd_medico_pc
	and	a.nr_seq_prestador	= nr_seq_prestador_pc
	and	((coalesce(cd_especialidade_pc::text, '') = '') or (a.cd_especialidade = cd_especialidade_pc))
	and (a.nr_seq_area_atuacao = nr_seq_area_atuacao_pc or coalesce(nr_seq_area_atuacao_pc::text, '') = '')
	and	coalesce(a.ie_guia_medico,'S')	= 'S'
	and	ie_agrupar_especialidade_pc = 'S'
	order by
		cd_especialidade;
	
-- Cursor para listar as especialidades medica
c08 CURSOR(nr_seq_prestador_pc		pls_prestador.nr_sequencia%type,
		cd_especialidade_pc		especialidade_medica.cd_especialidade%type,
		nr_seq_area_atuacao_pc		pls_prestador_med_espec.nr_seq_area_atuacao%type,
		nr_seq_guia_medico_pc		w_pls_guia_medico.nr_sequencia%type,
		ie_agrupar_especialidade_pc	text) FOR
	SELECT	distinct
		b.cd_especialidade
	from	especialidade_medica 	b,
		pls_prestador_med_espec	a
	where	a.cd_especialidade 	= b.cd_especialidade
	and	a.nr_seq_prestador	= nr_seq_prestador_w
	and	((coalesce(cd_especialidade_p::text, '') = '') or (a.cd_especialidade = cd_especialidade_p))
	and (a.nr_seq_area_atuacao = nr_seq_area_atuacao_p or coalesce(nr_seq_area_atuacao_p::text, '') = '')
	and	coalesce(a.ie_endereco_principal,'N') = 'S'
	and	coalesce(a.ie_guia_medico,'S')	= 'S'
	and	not exists (	SELECT	1
				from	w_pls_guia_med_espec x
				where	x.cd_especialidade = b.cd_especialidade
				and	nr_seq_guia_medico = nr_seq_guia_medico_w)
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
	and	ie_agrupar_especialidade_w = 'S';

-- Cursor para listar as especialidades medica
c09 CURSOR(nr_seq_prestador_pc		pls_prestador.nr_sequencia%type,
		nr_seq_guia_medico_pc		w_pls_guia_medico.nr_sequencia%type,
		cd_medico_pc			medico.cd_pessoa_fisica%type,
		ie_agrupar_especialidade_pc	text ) FOR
	SELECT	distinct
		b.cd_especialidade
	from	especialidade_medica	b,
		pls_prestador_med_espec	a
	where	a.cd_especialidade	= b.cd_especialidade
	and	coalesce(a.cd_pessoa_fisica::text, '') = ''
	and	coalesce(trim(both cd_medico_pc)::text, '') = ''
	and	a.nr_seq_prestador	= nr_seq_prestador_pc
	and	coalesce(a.ie_guia_medico,'S') = 'S'
	and	not exists (	SELECT	1
				from	w_pls_guia_med_espec x
				where	x.cd_especialidade = b.cd_especialidade
				and	nr_seq_guia_medico = nr_seq_guia_medico_pc)
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
	and	ie_agrupar_especialidade_pc = 'S'
	
union all

	select	distinct
		b.cd_especialidade
	from	especialidade_medica b,
		pls_prestador_med_espec a
	where	a.cd_especialidade	= b.cd_especialidade
	and	a.cd_pessoa_fisica	= coalesce(trim(both cd_medico_pc), a.cd_pessoa_fisica)
	and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
	and	a.nr_seq_prestador	= nr_seq_prestador_pc
	and	coalesce(a.ie_guia_medico,'S')	= 'S'
	and	not exists (	select	1
				from	w_pls_guia_med_espec x
				where	x.cd_especialidade = b.cd_especialidade
				and	nr_seq_guia_medico = nr_seq_guia_medico_pc)
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
	and	ie_agrupar_especialidade_pc = 'S'
	order by
		cd_especialidade;
		
c10 CURSOR(	nm_usuario_pc			text,
		cd_estabelecimento_pc		bigint) FOR
	SELECT	max(nr_sequencia) nr_sequencia,		cd_cep,			cd_cgc_prestador,
		cd_estabelecimento,			cd_medico,		cd_municipio_ibge,
		cd_pf_prestador,			cd_prestador,		cd_procedimento,
		ds_area_atuacao_med,			ds_bairro,		ds_complemento,
		ds_email,				ds_endereco,		ds_especialidades_med,
		ds_fax,					ds_fone_adic,		ds_tipo_estab_cnes,
		ds_tipo_prestador,			ds_website,		ie_acba,
		ie_adicq,				ie_aiqg,		ie_aona,
		ie_apalc,				ie_ausente,		ie_especialista,
		ie_historico_guia_medico,		ie_notivisa,		ie_origem_proced,
		ie_pos_grad_360,			ie_qualiss,		ie_residencia,
		nm_usuario,				nr_crm,			nr_ddd,
		nr_ddd_fax,				nr_ddi,			nr_endereco,
		nr_ramal,				nr_seq_prestador,	nr_telefone,
		nr_telefone_prest,			sg_estado
	from	w_pls_guia_medico
	where	nm_usuario 		= nm_usuario_pc
	GROUP BY cd_cep,		cd_cgc_prestador,		cd_estabelecimento,
		cd_medico,		cd_municipio_ibge,		cd_pf_prestador,
		cd_prestador,		cd_procedimento,		ds_area_atuacao_med,
		ds_bairro,		ds_complemento,			ds_email,
		ds_endereco,		ds_especialidades_med,		ds_fax,
		ds_fone_adic,		ds_tipo_estab_cnes,		ds_tipo_prestador,
		ds_website,		ie_acba,			ie_adicq,
		ie_aiqg,		ie_aona,			ie_apalc,
		ie_ausente,		ie_especialista,		ie_historico_guia_medico,
		ie_notivisa,		ie_origem_proced,		ie_pos_grad_360,
		ie_qualiss,		ie_residencia,			nm_usuario,
		nr_crm,			nr_ddd,				nr_ddd_fax,
		nr_ddi,			nr_endereco,			nr_ramal,
		nr_seq_prestador,	nr_telefone,			nr_telefone_prest,
		sg_estado
	 HAVING	count(1) > 1
	order by nr_sequencia;
	
c11 CURSOR(	nr_sequencia_pc			w_pls_guia_medico.nr_sequencia%type,
		nm_usuario_pc			usuario.nm_usuario%type,
		cd_estabelecimento_pc		estabelecimento.cd_estabelecimento%type,
		cd_cep_pc			w_pls_guia_medico.cd_cep%type,
		cd_cgc_prestador_pc		w_pls_guia_medico.cd_cgc_prestador%type,
		cd_medico_pc			w_pls_guia_medico.cd_medico%type,
		cd_municipio_ibge_pc		w_pls_guia_medico.cd_municipio_ibge%type,
		cd_pf_prestador_pc		w_pls_guia_medico.cd_pf_prestador%type,
		cd_prestador_pc			w_pls_guia_medico.cd_prestador%type,
		cd_procedimento_pc		w_pls_guia_medico.cd_procedimento%type,
		ds_area_atuacao_med_pc		w_pls_guia_medico.ds_area_atuacao_med%type,
		ds_bairro_pc			w_pls_guia_medico.ds_bairro%type,
		ds_complemento_pc		w_pls_guia_medico.ds_complemento%type,
		ds_email_pc			w_pls_guia_medico.ds_email%type,
		ds_endereco_pc			w_pls_guia_medico.ds_endereco%type,
		ds_especialidades_med_pc	w_pls_guia_medico.ds_especialidades_med%type,
		ds_fax_pc			w_pls_guia_medico.ds_fax%type,
		ds_fone_adic_pc			w_pls_guia_medico.ds_fone_adic%type,
		ds_tipo_estab_cnes_pc		w_pls_guia_medico.ds_tipo_estab_cnes%type,
		ds_tipo_prestador_pc		w_pls_guia_medico.ds_tipo_prestador%type,
		ds_website_pc			w_pls_guia_medico.ds_website%type,
		ie_acba_pc			w_pls_guia_medico.ie_acba%type,
		ie_adicq_pc			w_pls_guia_medico.ie_adicq%type,
		ie_aiqg_pc			w_pls_guia_medico.ie_aiqg%type,
		ie_aona_pc			w_pls_guia_medico.ie_aona%type,
		ie_apalc_pc			w_pls_guia_medico.ie_apalc%type,
		ie_ausente_pc			w_pls_guia_medico.ie_ausente%type,
		ie_especialista_pc		w_pls_guia_medico.ie_especialista%type,
		ie_historico_guia_medico_pc	w_pls_guia_medico.ie_historico_guia_medico%type,
		ie_notivisa_pc			w_pls_guia_medico.ie_notivisa%type,
		ie_origem_proced_pc		w_pls_guia_medico.ie_origem_proced%type,
		ie_pos_grad_360_pc		w_pls_guia_medico.ie_pos_grad_360%type,
		ie_qualiss_pc			w_pls_guia_medico.ie_qualiss%type,
		ie_residencia_pc		w_pls_guia_medico.ie_residencia%type,
		nr_crm_pc			w_pls_guia_medico.nr_crm%type,
		nr_ddd_pc			w_pls_guia_medico.nr_ddd%type,
		nr_ddd_fax_pc			w_pls_guia_medico.nr_ddd_fax%type,
		nr_ddi_pc			w_pls_guia_medico.nr_ddi%type,
		nr_endereco_pc			w_pls_guia_medico.nr_endereco%type,
		nr_ramal_pc			w_pls_guia_medico.nr_ramal%type,
		nr_seq_prestador_pc		w_pls_guia_medico.nr_seq_prestador%type,
		nr_telefone_pc			w_pls_guia_medico.nr_telefone%type,
		nr_telefone_prest_pc		w_pls_guia_medico.nr_telefone_prest%type,
		sg_estado_pc			w_pls_guia_medico.sg_estado%type ) FOR
	SELECT	nr_sequencia
	from	w_pls_guia_medico
	where	nm_usuario 		= nm_usuario_pc		
	and	cd_estabelecimento	= cd_estabelecimento_pc
	and	nr_sequencia		!= nr_sequencia_pc
	and	((cd_cep		= cd_cep_pc)			or (coalesce(coalesce(cd_cep,cd_cep_pc)::text, '') = ''))
	and	((cd_cgc_prestador	= cd_cgc_prestador_pc)		or (coalesce(coalesce(cd_cgc_prestador,cd_cgc_prestador_pc)::text, '') = ''))
	and	((cd_medico		= cd_medico_pc)			or (coalesce(coalesce(cd_medico,cd_medico_pc)::text, '') = ''))
	and	((cd_municipio_ibge	= cd_municipio_ibge_pc)		or (coalesce(coalesce(cd_municipio_ibge,cd_municipio_ibge_pc)::text, '') = ''))
	and	((cd_pf_prestador	= cd_pf_prestador_pc)		or (coalesce(coalesce(cd_pf_prestador,cd_pf_prestador_pc)::text, '') = ''))
	and	((cd_prestador		= cd_prestador_pc)		or (coalesce(coalesce(cd_prestador,cd_prestador_pc)::text, '') = ''))
	and	((cd_procedimento	= cd_procedimento_pc)		or (coalesce(coalesce(cd_procedimento,cd_procedimento_pc)::text, '') = ''))
	and	((ds_area_atuacao_med	= ds_area_atuacao_med_pc)	or (coalesce(coalesce(ds_area_atuacao_med,ds_area_atuacao_med_pc)::text, '') = ''))
	and	((ds_bairro		= ds_bairro_pc)			or (coalesce(coalesce(ds_bairro,ds_bairro_pc)::text, '') = ''))
	and	((ds_complemento	= ds_complemento_pc)		or (coalesce(coalesce(ds_complemento,ds_complemento_pc)::text, '') = ''))
	and	((ds_email		= ds_email_pc)			or (coalesce(coalesce(ds_email,ds_email_pc)::text, '') = ''))
	and	((ds_endereco		= ds_endereco_pc)		or (coalesce(coalesce(ds_endereco,ds_endereco_pc)::text, '') = ''))
	and	((ds_especialidades_med	= ds_especialidades_med_pc)	or (coalesce(coalesce(ds_especialidades_med,ds_especialidades_med_pc)::text, '') = ''))
	and	((ds_fax		= ds_fax_pc)			or (coalesce(coalesce(ds_fax,ds_fax_pc)::text, '') = ''))
	and	((ds_fone_adic		= ds_fone_adic_pc)		or (coalesce(coalesce(ds_fone_adic,ds_fone_adic_pc)::text, '') = ''))
	and	((ds_tipo_estab_cnes	= ds_tipo_estab_cnes_pc)	or (coalesce(coalesce(ds_tipo_estab_cnes,ds_tipo_estab_cnes_pc)::text, '') = ''))
	and	((ds_tipo_prestador	= ds_tipo_prestador_pc)		or (coalesce(coalesce(ds_tipo_prestador,ds_tipo_prestador_pc)::text, '') = ''))
	and	((ds_website		= ds_website_pc)		or (coalesce(coalesce(ds_website,ds_website_pc)::text, '') = ''))
	and	((ie_acba		= ie_acba_pc)			or (coalesce(coalesce(ie_acba,ie_acba_pc)::text, '') = ''))
	and	((ie_adicq		= ie_adicq_pc)			or (coalesce(coalesce(ie_adicq,ie_adicq_pc)::text, '') = ''))
	and	((ie_aiqg		= ie_aiqg_pc)			or (coalesce(coalesce(ie_aiqg,ie_aiqg_pc)::text, '') = ''))
	and	((ie_aona		= ie_aona_pc)			or (coalesce(coalesce(ie_aona,ie_aona_pc)::text, '') = ''))
	and	((ie_apalc		= ie_apalc_pc)			or (coalesce(coalesce(ie_apalc,ie_apalc_pc)::text, '') = ''))
	and	((ie_ausente		= ie_ausente_pc)		or (coalesce(coalesce(ie_ausente,ie_ausente_pc)::text, '') = ''))
	and	((ie_especialista	= ie_especialista_pc)		or (coalesce(coalesce(ie_especialista,ie_especialista_pc)::text, '') = ''))
	and	((ie_historico_guia_medico= ie_historico_guia_medico_pc)or (coalesce(coalesce(ie_historico_guia_medico,ie_historico_guia_medico_pc)::text, '') = ''))
	and	((ie_notivisa		= ie_notivisa_pc)		or (coalesce(coalesce(ie_notivisa,ie_notivisa_pc)::text, '') = ''))
	and	((ie_origem_proced	= ie_origem_proced_pc)		or (coalesce(coalesce(ie_origem_proced,ie_origem_proced_pc)::text, '') = ''))
	and	((ie_pos_grad_360	= ie_pos_grad_360_pc)		or (coalesce(coalesce(ie_pos_grad_360,ie_pos_grad_360_pc)::text, '') = ''))
	and	((ie_qualiss		= ie_qualiss_pc)		or (coalesce(coalesce(ie_qualiss,ie_qualiss_pc)::text, '') = ''))
	and	((ie_residencia		= ie_residencia_pc)		or (coalesce(coalesce(ie_residencia,ie_residencia_pc)::text, '') = ''))
	and	((nm_usuario		= nm_usuario_pc)		or (coalesce(coalesce(nm_usuario,nm_usuario_pc)::text, '') = ''))
	and	((nr_crm		= nr_crm_pc)			or (coalesce(coalesce(nr_crm,nr_crm_pc)::text, '') = ''))
	and	((nr_ddd		= nr_ddd_pc)			or (coalesce(coalesce(nr_ddd,nr_ddd_pc)::text, '') = ''))
	and	((nr_ddd_fax		= nr_ddd_fax_pc)		or (coalesce(coalesce(nr_ddd_fax,nr_ddd_fax_pc)::text, '') = ''))
	and	((nr_ddi		= nr_ddi_pc)			or (coalesce(coalesce(nr_ddi,nr_ddi_pc)::text, '') = ''))
	and	((nr_endereco		= nr_endereco_pc)		or (coalesce(coalesce(nr_endereco,nr_endereco_pc)::text, '') = ''))
	and	((nr_ramal		= nr_ramal_pc)			or (coalesce(coalesce(nr_ramal,nr_ramal_pc)::text, '') = ''))
	and	((nr_seq_prestador	= nr_seq_prestador_pc)		or (coalesce(coalesce(nr_seq_prestador,nr_seq_prestador_pc)::text, '') = ''))
	and	((nr_telefone		= nr_telefone_pc)		or (coalesce(coalesce(nr_telefone,nr_telefone_pc)::text, '') = ''))
	and	((nr_telefone_prest	= nr_telefone_prest_pc)		or (coalesce(coalesce(nr_telefone_prest,nr_telefone_prest_pc)::text, '') = ''))
	and	((sg_estado		= sg_estado_pc)			or (coalesce(coalesce(sg_estado,sg_estado_pc)::text, '') = ''));
	
-- Cursor das Certificacoes e Acreditacoes
c99 CURSOR(nr_seq_prestador_pc	pls_prestador.nr_sequencia%type,
		ie_acred_rn405_pc	pls_web_param_guia_medico.ie_acred_rn405%type ) FOR
	SELECT	a.ie_acreditacao,
		null nr_seq_instituicao_acred,
		null nr_seq_prest_qualif,
		null ie_atrib_qualif,
		null ds_atrib_qualif,
		null ds_observacao,
		null ds_instituicao_acred
	from	pls_prestador_qualif	a
	where	a.nr_seq_prestador	= nr_seq_prestador_pc
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and coalesce(a.dt_fim_vigencia, clock_timestamp() + interval '1 days')
	and	(a.ie_acreditacao IS NOT NULL AND a.ie_acreditacao::text <> '')
	and	ie_acred_rn405_pc	= 'N'
	
union all

	-- Certificacoes - R405
	SELECT	null ie_acreditacao,
		a.nr_seq_instituicao_acred,
		a.nr_sequencia nr_seq_prest_qualif,
		c.ie_atrib_qualif,
		c.ds_atrib_qualif,
		c.ds_observacao,
		b.ds_instituicao_acred
	from	pls_prestador_qualif	a,
		pls_instituicao_acred	b,
		pls_atrib_qualif_prest	c
	where	c.nr_sequencia	= b.nr_seq_atrib_qualif_prest
	and	b.nr_sequencia	= a.nr_seq_instituicao_acred
	and	a.nr_seq_prestador	= nr_seq_prestador_pc
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and coalesce(a.dt_fim_vigencia, clock_timestamp() + interval '1 days')
	and	(a.nr_seq_instituicao_acred IS NOT NULL AND a.nr_seq_instituicao_acred::text <> '')
	and	ie_acred_rn405_pc	= 'S';

BEGIN
-- Limpar as tabelas por tempo
delete FROM w_pls_guia_med_qualif where dt_atualizacao < clock_timestamp() - interval '1 days';
delete FROM w_pls_guia_med_espec where dt_atualizacao < clock_timestamp() - interval '1 days';
delete FROM w_pls_guia_medico where dt_atualizacao < clock_timestamp() - interval '1 days';
commit;

-- Limpar as tabelas por usuario
delete FROM w_pls_guia_med_qualif where nm_usuario = nm_usuario_p;
delete FROM w_pls_guia_med_espec where nm_usuario = nm_usuario_p;
delete FROM w_pls_guia_medico where nm_usuario = nm_usuario_p;
commit;

dt_referencia_w			:= trunc(clock_timestamp(),'dd');
cd_prestador_param_w		:= cd_prestador_p;
ie_cd_prestador_w		:= ie_cd_prestador_p;
ie_odontologico_w		:= coalesce(ie_odontologico_p,'T');
ie_filtro_portal_w		:= coalesce(ie_filtro_portal_p,'A');
ie_sem_tipo_guia_w		:= coalesce(ie_sem_tipo_guia_p,'A');
ie_filtro_ausentes_w		:= coalesce(ie_ausentes_p,'N');
ie_filtro_carater_int_w		:= coalesce(ie_carater_internacao_p,'0');
nm_medico_ou_prestador_w	:= elimina_acentuacao('%'||regexp_replace(nm_medico_ou_prestador_p,'[^[:alnum:]'''']', '%')||'%');
ds_bairro_filtro_w		:= null;

if (nr_seq_bairro_p IS NOT NULL AND nr_seq_bairro_p::text <> '') then
	select	max(a.ds_bairro)
	into STRICT	ds_bairro_filtro_w
	from	cep_bairro	a
	where	a.nr_sequencia	= nr_seq_bairro_p;
end if;

if (cd_item_p IS NOT NULL AND cd_item_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then
	select	max(cd_area_procedimento),
		max(cd_especialidade),
		max(cd_grupo_proc)
	into STRICT	cd_area_w,
		cd_especialidade_w,
		cd_grupo_w
	from	estrutura_procedimento_v
	where	cd_procedimento		= cd_item_p
	and	ie_origem_proced	= ie_origem_proced_p;
end if;

--  Obter o valor do parametro "Gerar apenas especialidades do prestador no guia medico" 
ie_gera_apenas_espec_prest_w	:= coalesce(obter_valor_param_usuario(1230, 17, obter_perfil_ativo, nm_usuario_p, 0), 'N');

select	coalesce(max(ie_agrupar_especialidade),'S'),
	coalesce(max(ie_acred_rn405),'N')
into STRICT	ie_agrupar_especialidade_w,
	ie_acred_rn405_w
from	pls_web_param_guia_medico;

-- Obter o valor do parametro para identificar se e mostrado o prestador quando for feita uma consulta por profissional  
if (ie_origem_p = 'T') then
	ie_prestador_w		:= coalesce(obter_valor_param_usuario(1230, 3, obter_perfil_ativo, nm_usuario_p, 0), 'N');
	ie_filtro_produto_w	:= coalesce(obter_valor_param_usuario(1230, 16, obter_perfil_ativo, nm_usuario_p, 0), 'PP');
	ie_filtra_estab_w	:= coalesce(obter_valor_param_usuario(1230, 19, obter_perfil_ativo, nm_usuario_p, 0), 'N');
	
elsif (ie_origem_p = 'W') then
	ie_prestador_w		:= coalesce(pls_obter_param_padrao_funcao(4, 1256), 'N');
	ie_cd_prestador_w	:= coalesce(pls_obter_param_padrao_funcao(12, 1256), 'N');
	ie_filtro_produto_w	:= pls_parametro_operadora_web('FPGM', cd_estabelecimento_p);
	ie_filtra_estab_w	:= coalesce(ie_guia_medico_web_p,'N');
	
	if (coalesce(cd_prestador_param_w::text, '') = '' and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '')) then
		select	max(cd_prestador)
		into STRICT	cd_prestador_param_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_p;
	end if;
end if;

if (ie_filtra_estab_w = 'S') then
	cd_estab_restr_w := coalesce(cd_estabelecimento_p,0);
end if;

for r_c01_w in c01 loop
	ie_tipo_prest_c01_w		:= r_c01_w.ie_tipo_prest_c01;
	ie_tipo_prestador_w		:= r_c01_w.ie_tipo_prestador;
	nr_seq_prestador_w		:= r_c01_w.nr_sequencia;
	cd_cgc_prestador_w		:= r_c01_w.cd_cgc_prestador;
	cd_medico_w			:= r_c01_w.cd_pessoa_fisica;
	ie_tipo_endereco_ww		:= r_c01_w.ie_tipo_endereco;
	nr_seq_compl_pf_tel_adic_ww	:= r_c01_w.nr_seq_compl_pf_tel_adic;
	cd_prestador_w			:= r_c01_w.cd_prestador;
	nr_seq_compl_pj_w		:= r_c01_w.nr_seq_compl_pj;
	ie_notivisa_w			:= r_c01_w.ie_notivisa;
	ie_pos_grad_360_w		:= r_c01_w.ie_pos_grad_360;
	ie_residencia_saude_w		:= r_c01_w.ie_residencia_saude;
	ie_particip_qualiss_ans_w	:= r_c01_w.ie_particip_qualiss_ans;
	ds_especialidades_w		:= r_c01_w.ds_especialidade;
	cd_especialidades_med_w		:= r_c01_w.cd_especialidade;
	nr_seq_tipo_compl_adic_w	:= r_c01_w.nr_seq_tipo_compl_adic;
	ie_historico_guia_medico_w	:= r_c01_w.ie_historico_guia_medico;
	ie_doutorado_pos_w		:= r_c01_w.ie_doutorado_pos;
	ie_mestrado_w			:= r_c01_w.ie_mestrado;
	cd_cnes_w 			:= pls_obter_cnes_prestador(r_c01_w.nr_sequencia);
	
	if (cd_cnes_w IS NOT NULL AND cd_cnes_w::text <> '') then
		if (cd_cgc_prestador_w IS NOT NULL AND cd_cgc_prestador_w::text <> '') then
			select	max(substr(obter_valor_dominio(3246,c.ie_tipo_estabelecimento),1,255))
			into STRICT	ds_tipo_estab_cnes_w
			from	cnes_identificacao c
			where	c.cd_cnes	= cd_cnes_w
			and	c.cd_cgc	= cd_cgc_prestador_w;
			
		elsif (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
			select	max(substr(obter_valor_dominio(3246,c.ie_tipo_estabelecimento),1,255))
			into STRICT	ds_tipo_estab_cnes_w
			from	cnes_identificacao c
			where	c.cd_cnes		= cd_cnes_w
			and	c.cd_pessoa_fisica	= cd_medico_w;
		end if;
	end if;
	
	-- CONTADORES DE PROFISSIONAIS
	qt_profissional_ativos_w := 0;
	qt_profissional_residente_w := 0;
	
	if (ie_tipo_prestador_w = 'PJ2') then
		-- VERIFICA QUANTOS PROFISSIONAIS ATIVOS ESTAO CADASTRADOS PARA O PRESTADOR
		select	count(1)
		into STRICT	qt_profissional_ativos_w
		from	pls_prestador_medico
		where	nr_seq_prestador = nr_seq_prestador_w
		and	ie_situacao = 'A';
		
		-- SE HA PROFISSIONAIS ATIVOS ESTAO CADASTRADOS PARA O PRESTADOR
		if (qt_profissional_ativos_w > 0) then
			-- VERIFICA QUANTOS PROFISSIONAIS ATIVOS ESTAO CADASTRADOS PARA O PRESTADOR E QUE ESTAO COM O CAMPO 'IE_RESIDENCIA_SAUDE' MARCADO
			select	count(1)
			into STRICT	qt_profissional_residente_w
			from	pls_prestador_medico
			where	nr_seq_prestador = nr_seq_prestador_w
			and	ie_situacao = 'A'
			and	coalesce(ie_residencia_saude, 'N') = 'S';
			
			-- VERIFICA SE TODOS OS PROFISSIONAIS ESTAO COM O CAMPO 'IE_RESIDENCIA_SAUDE' MARCADO
			if (qt_profissional_ativos_w = qt_profissional_residente_w) then
				ie_residencia_saude_w := 'S';
			end if;
		end if;
		
		-- SE NAO TEM PROFISSIONAIS OU TODOS OS PROFISSIONAIS NAO SAO RESIDENTES VERIFICA SE O PROPRIO PRESTADOR E RESIDENTE
		if (qt_profissional_ativos_w = 0) or (qt_profissional_residente_w = 0) then
			select 	coalesce(ie_residencia_saude, 'N')
			into STRICT 	ie_residencia_saude_w
			from	pls_prestador
			where	nr_sequencia = nr_seq_prestador_w;
		end if;
	end if;
	
	qt_espec_w := 0;
	ie_gera_especialidade_w := null;
	
	if (ie_tipo_prestador_w in ('PJ1', 'PJ2')) then
		select 	count(1)
		into STRICT	qt_espec_w
		from	pls_prestador_medico
		where	nr_seq_prestador = nr_seq_prestador_w;
		
		if (qt_espec_w = 1) then
			select 	max(nr_seq_tipo_prestador)
			into STRICT	nr_seq_tipo_prestador_w
			from	pls_prestador
			where	nr_sequencia = nr_seq_prestador_w;
			
			select	coalesce(max(ie_consultorio), 'N')
			into STRICT	ie_consultorio_w
			from	pls_tipo_prestador
			where	nr_sequencia = nr_seq_tipo_prestador_w;
			
			begin
			select	substr(coalesce(pls_obter_rqe_especialidade(cd_pessoa_fisica, cd_especialidade), 'X'), 1, 255)
			into STRICT	ds_espec_w
			from	pls_prestador_med_espec		
			where	nr_seq_prestador = nr_seq_prestador_w
			and	(cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '')
			and   	ie_especialidade_princ = 'S'  LIMIT 1;				
			exception
			when others then
				ds_espec_w := 'X';
			end;
			
			if (ds_espec_w = 'X') then
				begin
				select	substr(coalesce(pls_obter_rqe_especialidade(cd_pessoa_fisica, cd_especialidade), 'X'), 1, 255)
				into STRICT	ds_espec_w
				from	pls_prestador_med_espec		
				where	nr_seq_prestador = nr_seq_prestador_w  LIMIT 1;				
				exception
				when others then
					ds_espec_w := 'X';
				end;
			end if;
			
			if (ie_consultorio_w = 'S') and (ds_espec_w <> 'X') then
				ie_gera_especialidade_w := 'S';
			end if;	
			
		end if;
	end if;
	
	if (nr_seq_grupo_servico_p IS NOT NULL AND nr_seq_grupo_servico_p::text <> '') then
		select	count(1)
		into STRICT	ie_tem_grupo_servico_w
		
		where	(exists	(	SELECT	1
					from	pls_prest_grupo_serv_gm	a
					where	a.nr_seq_prestador	= nr_seq_prestador_w
					and	a.nr_seq_grupo_servico	= nr_seq_grupo_servico_p
					and	exists(	select 1
							from	pls_preco_grupo_servico	b
							where	b.nr_sequencia 		= a.nr_seq_grupo_servico
							and	((b.ie_guia_medico	= 'S') or (coalesce(b.ie_guia_medico::text, '') = ''))
							and	((b.ie_cad_prestador	= 'S') or (coalesce(b.ie_cad_prestador::text, '') = '')))));
		
		if (ie_tem_grupo_servico_w = 0) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;
	
	-- Validar AUSENCIA do COOPERADO
	SELECT * FROM pls_val_guia_med_cooperado( ie_insere_w, ie_ausente_w, 'A', ie_filtro_ausentes_w, cd_cgc_prestador_w, cd_medico_w, null) INTO STRICT  ie_insere_w, ie_ausente_w;
	
	if (ie_insere_w = 'N') then
		goto final;
	end if;
	
	-- Filtro utilizado pelo TASY
	if (ie_origem_p = 'T') then
		-- Validar INSTITUICAO DE ACREDITACAO do PRESTADOR
		 ie_insere_w := pls_val_guia_med_prestador( ie_insere_w, 'IA', nr_seq_prestador_w, ie_instituicao_acred_p, null, null, null);
		
		if (ie_insere_w = 'N') then
			goto final;
		end if;
	
		-- Validar NIVEL DE ACREDITACAO do PRESTADOR
		 ie_insere_w := pls_val_guia_med_prestador( ie_insere_w, 'NA', nr_seq_prestador_w, null, ie_nivel_acreditacao_p, null, null);
		
		if (ie_insere_w = 'N') then
			goto final;
		end if;
	end if;
	
	-- Validar TIPO ODONTOLOGICO do PRESTADOR
	 ie_insere_w := pls_val_guia_med_prestador( ie_insere_w, 'TO', nr_seq_prestador_w, null, null, ie_odontologico_w, null);
	
	if (ie_insere_w = 'N') then
		goto final;
	end if;	
	
	-- Validar CARATER DE INTERNACAO (ATENDIMENTO) do PRESTADOR
	 ie_insere_w := pls_val_guia_med_prestador( ie_insere_w, 'CI', nr_seq_prestador_w, null, null, null, ie_filtro_carater_int_w);
	
	if (ie_insere_w = 'N') then
		goto final;
	end if;	
	
	ie_insere_w		:= 'S';

	if (ie_tipo_prestador_w = 'PF') then
		if (ie_agrupar_especialidade_w = 'S') then
				ds_especialidades_w := pls_obter_espec_prest_medico(	ds_especialidades_w, 3, nr_seq_prestador_w, cd_medico_w, cd_especialidade_p, null, nr_seq_area_atuacao_p, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
		
		elsif (pls_obter_se_espec_tipo_guia( nr_seq_tipo_guia_p, nr_seq_prestador_w, cd_especialidades_med_w, ie_origem_p) = 'N') then
			ie_insere_w	:= 'N';
			goto final;
		end if;
		
	elsif (ie_tipo_prestador_w = 'PJ1') then
		if (ie_agrupar_especialidade_w = 'S') then
			if (ie_gera_apenas_espec_prest_w = 'S') then
					ds_especialidades_w := pls_obter_espec_prest_medico(	ds_especialidades_w, 5, nr_seq_prestador_w, null, null, null, null, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
			else
					ds_especialidades_w := pls_obter_espec_prest_medico(	ds_especialidades_w, 6, nr_seq_prestador_w, null, null, null, null, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
			end if;
			
		elsif (pls_obter_se_espec_tipo_guia( nr_seq_tipo_guia_p, nr_seq_prestador_w, cd_especialidades_med_w, ie_origem_p) = 'N') then
			ie_insere_w	:= 'N';
			goto final;
		end if;
		
	elsif (ie_tipo_prestador_w = 'PJ2') then
		if (ie_agrupar_especialidade_w = 'S') then
			if (ie_gera_apenas_espec_prest_w = 'S') then
				ds_especialidades_w	:= null;
				
			else
				-- OS 779930 - pitdelling - 02/10/2014 - O comando a baixo foi criado para saber se o prestador naquela especialidade e Pos-Doutorado.
				ie_pos_grad_360_w	:= coalesce(pls_obter_dados_medico_prest(cd_medico_w, cd_especialidades_med_w, 'PG'), ie_pos_grad_360_w);
				
					ds_especialidades_w := pls_obter_espec_prest_medico(	ds_especialidades_w, 3, nr_seq_prestador_w, cd_medico_w, cd_especialidade_p, null, nr_seq_area_atuacao_p, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
			end if;
			
		elsif (pls_obter_se_espec_tipo_guia( nr_seq_tipo_guia_p, nr_seq_prestador_w, cd_especialidades_med_w, ie_origem_p) = 'N') then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;
	
	if (cd_especialidades_med_w IS NOT NULL AND cd_especialidades_med_w::text <> '') and (ie_agrupar_especialidade_w = 'N') and (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
		select	max(coalesce(ie_pos_grad_360, ie_pos_grad_360_w)),
			max(coalesce(ie_residencia_saude, ie_residencia_saude_w))
		into STRICT	ie_pos_grad_360_w,
			ie_residencia_saude_w
		from	medico_especialidade
		where	cd_pessoa_fisica	= cd_medico_w
		and	cd_especialidade	= cd_especialidades_med_w;
	end if;	
	
	-- OS 694884 - jtonon - 21/05/2014 - Criado tratamento para que se utilizado o filtro pelo produto o sistema deve trazer os tipos cadastrados em OPS - Prestador > Prestadores > Produtos/SCA
	ds_tipo_prestador_w := null;
	if (coalesce(nr_seq_plano_p::text, '') = '') then
		 ds_tipo_prestador_w := pls_obter_tipo_prest_gm( ds_tipo_prestador_w, 1, nr_seq_prestador_w, nr_seq_tipo_guia_p, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
	else
		 ds_tipo_prestador_w := pls_obter_tipo_prest_gm( ds_tipo_prestador_w, 2, nr_seq_prestador_w, nr_seq_tipo_guia_p, nr_seq_plano_p, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
	end if;
	
	nm_prestador_w		:= substr(pls_obter_dados_prestador(nr_seq_prestador_w, 'NGM'),1,255);
	nm_busca_guia_prest_w	:= coalesce(substr(pls_obter_dados_prestador(nr_seq_prestador_w, 'DGM'),1,255),nm_prestador_w);
	cd_especialidades_w	:= substr(pls_obter_cod_espec_prest(nr_seq_prestador_w, cd_medico_w),1,4000);

	if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') and (pls_obter_se_item_lista(cd_especialidades_w,to_char(cd_especialidade_p)) = 'N') then
		--(ds_especialidades_w is null)) then -- OS 754372 - wcbernardino - Quando esta sendo filtrado o Prestador (PJ2), Medico e Especialdiade nao estava gerando no guia medico
		ie_insere_w	:= 'N';
		goto final;
	end if;
	
	if (nr_crm_w IS NOT NULL AND nr_crm_w::text <> '') and (nm_medico_p IS NOT NULL AND nm_medico_p::text <> '') and (nm_prestador_w not like('%' || nm_medico_p || '%')) then		
		ie_insere_w	:= 'N';
		goto final;
		
	elsif (nm_prestador_p IS NOT NULL AND nm_prestador_p::text <> '') and (upper(nm_prestador_w) not like('%' || upper(nm_prestador_p) || '%')) and (upper(nm_busca_guia_prest_w) not like('%' || upper(nm_prestador_p) || '%')) then
		ie_insere_w	:= 'N';
		goto final;		
	end if;
	
	if (sg_estado_p IS NOT NULL AND sg_estado_p::text <> '') or (cd_municipio_ibge_p IS NOT NULL AND cd_municipio_ibge_p::text <> '') or (nr_seq_bairro_p IS NOT NULL AND nr_seq_bairro_p::text <> '') or (nr_seq_regiao_p IS NOT NULL AND nr_seq_regiao_p::text <> '') or (ds_logradouro_p IS NOT NULL AND ds_logradouro_p::text <> '') then
		ie_insere_w	:=	pls_obter_se_prest_endereco(	cd_medico_w, cd_cgc_prestador_w, ie_tipo_endereco_ww,
									coalesce(nr_seq_compl_pf_tel_adic_ww,nr_seq_tipo_compl_adic_w),
									cd_municipio_ibge_p, sg_estado_p, cd_cep_ww, nr_seq_regiao_p, ds_logradouro_p);
	end if;	
	
	if (ie_insere_w = 'N') then
		-- CD_MUNICIPIO_IBGE_P 
		if (cd_municipio_ibge_p IS NOT NULL AND cd_municipio_ibge_p::text <> '') and (coalesce(nr_seq_regiao_p::text, '') = '') and (coalesce(nr_seq_bairro_p::text, '') = '') then
			select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
			into STRICT	ie_insere_w
			from	pls_prestador_area a
			where	nr_seq_prestador	= nr_seq_prestador_w
			and	((cd_municipio_ibge	= cd_municipio_ibge_p) or
				((coalesce(cd_municipio_ibge::text, '') = '') and (sg_estado = obter_uf_ibge(cd_municipio_ibge_p))) or
				(exists	(SELECT	1
					from	pls_regiao_local x
					where	x.nr_seq_regiao	= a.nr_seq_regiao
					and	((x.cd_municipio_ibge = cd_municipio_ibge_p) or
						((coalesce(x.cd_municipio_ibge::text, '') = '') and (x.sg_uf_municipio = obter_uf_ibge(cd_municipio_ibge_p)))
						)
					)
				))  LIMIT 1;

			if (ie_insere_w = 'N') then
				goto final;
			end if;
		else
			goto final;
		end if;
	end if;
	
	-- O filtro IE_FILTRO_PORTAL e so utilizado no Tasy (Desktop)
	if (ie_origem_p = 'T') and (ie_filtro_portal_w <> 'A') then
		if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
			select	coalesce(max(a.ie_entra_portal), 'S')
			into STRICT	ie_entra_portal_w
			from	pls_tipo_guia_med_partic	a
			where	a.nr_seq_tipo_guia	= nr_seq_tipo_guia_p
			and	a.nr_seq_prestador	= nr_seq_prestador_w;
			
		else
			select	coalesce(max(a.ie_entra_portal), 'S')
			into STRICT	ie_entra_portal_w
			from	pls_tipo_guia_med_partic	a
			where	a.nr_seq_prestador	= nr_seq_prestador_w;
		end if;
		
		-- Verifica se o filtro corresponde com o cadastro
		if (ie_filtro_portal_w <> ie_entra_portal_w) then
			ie_insere_w := 'N';
			goto final;
		end if;
	end if;
	
	if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') then
		ie_insere_w := pls_obter_se_plano_prest_gm( nr_seq_prestador_w, nr_seq_plano_p, nr_seq_tipo_guia_p, ie_filtro_produto_w, nm_usuario_p );
		
		if (ie_insere_w = 'N') then
			goto final;
		end if;
	end if;
	
	if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
		if (ie_origem_p = 'W') then
			ie_insere_w := pls_obter_se_prest_tipo_guia( nr_seq_prestador_w, nr_seq_tipo_guia_p, nr_seq_plano_p, 'S', cd_especialidades_med_w);
		else
			ie_insere_w := pls_obter_se_prest_tipo_guia( nr_seq_prestador_w, nr_seq_tipo_guia_p, nr_seq_plano_p, 'N', cd_especialidades_med_w);
		end if;
		
		if (ie_insere_w = 'N') then
			goto final;
		end if;
	end if;

	-- CD_ITEM_P 
	if (cd_item_p IS NOT NULL AND cd_item_p::text <> '') then	
		ie_insere_w	:= pls_obter_se_proc_prestador(nr_seq_prestador_w, null, cd_item_p, ie_origem_proced_p, null, clock_timestamp(), null, null, null, null, null, null, null, cd_especialidade_p, r_c01_w.nr_seq_cbo_saude);

		if (ie_proc_especialidade_p	= 'S') then
			for r_c02_w in c02 loop
				ie_estrutura_w := r_c02_w.ie_estrutura;
			end loop;
			
			if (ie_estrutura_w	= 'N') then
				ie_insere_w	:= 'N';
				goto final;
			end if;
		end if;
		
		if (ie_insere_w = 'N') and (ie_proc_especialidade_p = 'N') then
			goto final;
		end if;
	end if;

	-- CD_ESPECIALIDADE_P 
	if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') then
		begin
		select	'S'
		into STRICT	ie_insere_w
		from	pls_prestador_med_espec a
		where	a.cd_pessoa_fisica	= cd_medico_w
		and	a.cd_especialidade	= cd_especialidade_p
		and	a.nr_seq_prestador	= nr_seq_prestador_w
		and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
		and	coalesce(a.ie_guia_medico,'S') = 'S' LIMIT 1;
		exception
		when others then
			ie_insere_w	:= 'N';
		end;

		if (ie_insere_w = 'N') then
			begin
			select	'S'
			into STRICT	ie_insere_w
			from	pls_prestador_med_espec a
			where	coalesce(a.cd_pessoa_fisica::text, '') = ''
			and	a.cd_especialidade	= cd_especialidade_p
			and	a.nr_seq_prestador	= nr_seq_prestador_w
			and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
			and	coalesce(a.ie_guia_medico,'S') = 'S' LIMIT 1;
			exception
			when others then
				ie_insere_w	:= 'N';
				goto final;
			end;
		end if;
	end if;
	
	-- aaschlote 29/10/2013 OS 620041
	if (nr_seq_area_atuacao_p IS NOT NULL AND nr_seq_area_atuacao_p::text <> '') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_prestador_med_espec
		where	nr_seq_prestador	= nr_seq_prestador_w
		and	nr_seq_area_atuacao	= nr_seq_area_atuacao_p
		and	clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(dt_fim_vigencia, clock_timestamp()))  LIMIT 1;
		
		if (qt_registros_w = 0) then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_prestador_med_espec		b,
				pls_prest_med_espec_adic	a
			where	a.nr_seq_prest_med_espec	= b.nr_sequencia
			and	b.nr_seq_prestador		= nr_seq_prestador_w
			and	a.nr_seq_area_atuacao		= nr_seq_area_atuacao_p
			and	clock_timestamp() between coalesce(b.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(b.dt_fim_vigencia, clock_timestamp()))  LIMIT 1;
		else
			ie_insere_w	:= 'S';
		end if;
		
		if (qt_registros_w	= 0) then
			ie_insere_w	:= 'N';
			goto final;
		end if;
	end if;
	
	qt_registros_w := 0;
	-- NR_SEQ_TIPO_PRESTADOR 
	if (coalesce(nr_seq_tipo_prestador_p,0) > 0) then
		begin
			select	'S'
			into STRICT	ie_insere_w
			from	pls_prestador		b,
				pls_tipo_prestador	a
			where	a.nr_sequencia		= b.nr_seq_tipo_prestador
			and	b.nr_sequencia		= nr_seq_prestador_w
			and	a.nr_sequencia		= nr_seq_tipo_prestador_p
			and	coalesce(a.ie_guia_medico_portal,'S') = 'S'
			and	coalesce(a.ie_situacao,'A')	= 'A';
		exception
		when others then
			ie_insere_w := 'N';
		end;
		
		if (ie_insere_w = 'N') then
			begin
				select	'S'
				into STRICT	ie_insere_w
				from	pls_prestador_tipo	b,
					pls_tipo_prestador	a
				where	a.nr_sequencia		= b.nr_seq_tipo
				and	b.nr_seq_prestador	= nr_seq_prestador_w
				and	a.nr_sequencia		= nr_seq_tipo_prestador_p
				and	coalesce(a.ie_guia_medico_portal,'S') = 'S'
				and	coalesce(a.ie_situacao,'A')	= 'A'
				and	clock_timestamp() between trunc(coalesce(b.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(b.dt_fim_vigencia, clock_timestamp()));
			exception
			when others then
				ie_insere_w := 'N';
				goto final;
			end;
		end if;
	end if;
	
	-- Verifica se o prestador corresponde com o tipo de guia medico vinculado
	if (ie_sem_tipo_guia_w <> 'A') then		
		select	count(1)
		into STRICT	qt_vinculo_w
		from	pls_tipo_guia_med_partic	b
		where	b.nr_seq_prestador	= nr_seq_prestador_w
		and	b.ie_entra_portal	= 'S'
		and	b.ie_entra_guia_medico	= 'S'  LIMIT 1;
		
		if	(qt_vinculo_w > 0 AND ie_sem_tipo_guia_w = 'S') or
			(qt_vinculo_w = 0 AND ie_sem_tipo_guia_w = 'N') then
			ie_insere_w := 'N';
			goto final;
		end if;
	end if;

	if (ie_tipo_p = 1) and (ie_tipo_prestador_w = 'PJ2') then
		ie_insere_w	:= 'N';
		goto final;
		
	elsif (ie_tipo_p = 2) then
		if (ie_tipo_prestador_w = 'PJ1') then
			ie_insere_w	:= 'N';
			goto final;
		end if;
		
		if (ie_prestador_w	= 'N') then
			nr_seq_prestador_w	:= null;
		end if;
	end if;

	if (ie_tipo_prestador_w	= 'PF') and (ie_agrupar_especialidade_w = 'S') then
		select	count(1)
		into STRICT	qt_registros_w
		from	w_pls_guia_medico
		where	nr_seq_prestador = nr_seq_prestador_w
		and	((nm_usuario	= nm_usuario_p) or (dt_atualizacao < clock_timestamp() - interval '7 days'))  LIMIT 1;
		
	elsif	((ie_tipo_prestador_w	= 'PJ1') or (ie_tipo_prestador_w	= 'PJ2')) and (ie_agrupar_especialidade_w = 'S') then
		select	count(1)
		into STRICT	qt_registros_w
		from	w_pls_guia_medico
		where	nr_seq_prestador	= nr_seq_prestador_w
		and	((nm_usuario = nm_usuario_p) or (dt_atualizacao	< clock_timestamp() - interval '7 days'))
		and	cd_medico	= cd_medico_w  LIMIT 1;
	end if;
	
	cd_cep_w := null;
	if (qt_registros_w	= 0) then	
		if (ie_tipo_prestador_w = 'PJ1') then
		
			for r_c04_w in c04( nr_seq_prestador_w, cd_municipio_ibge_p ) loop
				ie_tipo_compl_prest_w		:= r_c04_w.ie_tipo_endereco;
				nr_seq_end_guia_medico_w	:= r_c04_w.nr_seq_end_guia_medico;
				ie_insere_w 			:= 'S';
				
				SELECT * FROM pls_obter_dados_end_prest_gm(	null, cd_cgc_prestador_w, ie_tipo_compl_prest_w, 'N', nr_seq_end_guia_medico_w, null, ie_origem_p, ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w) INTO STRICT ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w;

				if	((ie_tipo_prestador_w in ('PJ1','PJ2')) and (coalesce(ds_website_w::text, '') = '')) then
					select	max(a.ds_site_internet)
					into STRICT	ds_website_w
					from	pessoa_juridica a
					where	a.cd_cgc = (	SELECT	b.cd_cgc
								from	pls_prestador b
								where	b.nr_sequencia	= nr_seq_prestador_w);
				end if;

				if (nr_seq_bairro_p IS NOT NULL AND nr_seq_bairro_p::text <> '') and (ie_insere_w = 'S') then
					ie_insere_w	:= pls_obter_se_cep_bairro( nr_seq_bairro_p, cd_cep_w);
					
					-- se o bairro esta informado no endereco e contido no CEP, ainda valida o nome,

					-- caso nao possua o nome do bairro no prestador, ira permanecer o resultado da validacao do cep
					if (ie_insere_w = 'S') and (ds_bairro_w IS NOT NULL AND ds_bairro_w::text <> '') then
					
						if (upper(ds_bairro_filtro_w) = upper(ds_bairro_w)) then
							ie_insere_w := 'S';
						else
							ie_insere_w := 'N';
						end if;
					end if;
				end if;
				
				if (coalesce(cd_municipio_ibge_p, cd_municipio_ibge_w) <> cd_municipio_ibge_w) then
					ie_insere_w := 'N';
				end if;	

				ds_area_atuacao_med_w := pls_obter_area_atuac_guia_med( nr_seq_prestador_w, null, nr_seq_area_atuacao_p, nm_usuario_p, cd_estabelecimento_p, cd_especialidades_med_w, ie_agrupar_especialidade_w);

				if (nr_seq_area_atuacao_p IS NOT NULL AND nr_seq_area_atuacao_p::text <> '') and (coalesce(ds_area_atuacao_med_w::text, '') = '') then
					ie_insere_w := 'N';
				end if;
				
				if (ie_insere_w = 'S') then
					ie_apalc_w	:= 'N';
					ie_adicq_w	:= 'N';
					ie_aona_w	:= 'N';
					ie_acba_w	:= 'N';
					ie_aiqg_w	:= 'N';
					
					-- Certificacoes
					for r_c99_w in c99( nr_seq_prestador_w, ie_acred_rn405_w ) loop
						if (r_c99_w.ie_acreditacao = 'ACBA') then
							ie_acba_w	:= 'S';
							
						elsif (r_c99_w.ie_acreditacao = 'ADICQ') then
							ie_adicq_w	:= 'S';
							
						elsif (r_c99_w.ie_acreditacao = 'AIQG') then
							ie_aiqg_w	:= 'S';
							
						elsif (r_c99_w.ie_acreditacao = 'AONA') then
							ie_aona_w	:= 'S';
							
						elsif (r_c99_w.ie_acreditacao = 'APALC') then
							ie_apalc_w	:= 'S';
						end if;					
					end loop;

					nr_ddi_telefone_w := null;
					nr_fone_whatapp_w := null;
	
					-- se estiver configurado como whatsapp
					if r_c01_w.ie_whatsapp = 'S' then
						select 	trim(both substr(pls_obter_tel_prest(cd_pessoa_fisica, cd_cgc, 'DDT', ie_tipo_endereco, nr_seq_compl_pj,nr_seq_compl_pf_tel_adic,nr_seq_tipo_compl_adic), 1, 255)),
							trim(both substr(pls_obter_tel_prest(cd_pessoa_fisica, cd_cgc, 'T', ie_tipo_endereco, nr_seq_compl_pj,nr_seq_compl_pf_tel_adic,nr_seq_tipo_compl_adic), 1, 255))
						into STRICT 	nr_ddd_whatsapp_w,
							nr_fone_whatapp_w
						from 	pls_prestador pp
						where 	pp.nr_sequencia = nr_seq_prestador_w;
					
					else
						select 	pp.nr_ddd_fone_whatsapp,
							pp.nr_fone_whatsapp
						into STRICT 	nr_ddd_whatsapp_w,
							nr_fone_whatapp_w
						from 	pls_prestador pp
						where 	pp.nr_sequencia = nr_seq_prestador_w;
					end if;

					insert into w_pls_guia_medico(nr_sequencia, nr_seq_prestador, cd_medico,
						cd_municipio_ibge, dt_atualizacao, nm_usuario,
						cd_cgc_prestador, cd_pf_prestador, nr_crm,
						ds_endereco, nr_endereco, ds_complemento,
						ds_bairro, cd_cep, nr_telefone_prest,
						ds_especialidades_med, ds_email, ds_website,
						nr_ramal, sg_estado, nr_ddd, nr_telefone,nr_ddd_fax,ds_fax,ds_fone_adic,
						cd_prestador, ds_tipo_prestador, ds_tipo_estab_cnes, cd_estabelecimento,
						ie_notivisa, ie_pos_grad_360, ie_residencia, ie_qualiss,
						ie_apalc, ie_adicq, ie_aona, ie_acba, ie_aiqg,
						ie_especialista, ie_ausente, ds_area_atuacao_med, ie_historico_guia_medico,
						nr_ddi,nr_ddd_whatsapp, ds_fone_whatsapp)
					values (nextval('w_pls_guia_medico_seq'), nr_seq_prestador_w, null,
						cd_municipio_ibge_w, clock_timestamp(), nm_usuario_p,
						cd_cgc_prestador_w, null, null,
						ds_endereco_w, obter_somente_numero(nr_endereco_w), ds_complemento_w,
						ds_bairro_w, cd_cep_w, nr_telefone_w,
						ds_especialidades_w, ds_email_w, ds_website_w,
						nr_ramal_w, sg_estado_w, substr(nr_ddd_telefone_w, 2, 2), nr_tel_simples_w,nr_ddd_fax_w,ds_fax_w,ds_fone_adic_w,
						cd_prestador_w, ds_tipo_prestador_w, ds_tipo_estab_cnes_w, cd_estabelecimento_p,
						ie_notivisa_w, ie_pos_grad_360_w, ie_residencia_saude_w, ie_particip_qualiss_ans_w,
						ie_apalc_w, ie_adicq_w, ie_aona_w, ie_acba_w, ie_aiqg_w,
						coalesce(ie_gera_especialidade_w, 'N'), ie_ausente_w, ds_area_atuacao_med_w, ie_historico_guia_medico_w,
						obter_somente_numero(nr_ddi_telefone_w), obter_somente_numero(nr_ddd_whatsapp_w), obter_somente_numero(nr_fone_whatapp_w)) returning nr_sequencia into nr_seq_guia_medico_w;
						
					-- Certificacoes - R405
					if (ie_acred_rn405_w = 'S') then
						-- A - Programa de acreditacao

						-- G - Certificacoes de Entidades Gestoras de Outros Programas de Qualidade

						-- I - Certificacao ISO9001
						for r_c99_w in c99( nr_seq_prestador_w, ie_acred_rn405_w ) loop
							CALL pls_gerar_w_guia_med_qualif(	nm_usuario_p, nr_seq_guia_medico_w, r_c99_w.nr_seq_instituicao_acred, r_c99_w.nr_seq_prest_qualif,
											r_c99_w.ie_atrib_qualif, r_c99_w.ds_atrib_qualif, r_c99_w.ds_observacao, r_c99_w.ds_instituicao_acred);
						end loop;
						
						-- N - Comunicacao de eventos adversos
						if (ie_notivisa_w = 'S') then
							CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'N', null, null, null);
						end if;
						
						-- P - Profissional com especializacao
						if (ie_pos_grad_360_w = 'S') then
							CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'P', null, null, null);
						end if;
						
						-- R - Profissional com residencia
						if (ie_residencia_saude_w = 'S') then
							CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'R', null, null, null);
						end if;
						
						-- E - Titulo de Especialista
						if (ie_gera_especialidade_w = 'S') then
							CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'E', null, null, null);
						end if;
						
						-- Q - Qualidade monitorada
						if (ie_particip_qualiss_ans_w = 'S') then
							CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'Q', null, null, null);
						end if;
						
						-- D - Profissional com Doutorado ou PosDoutorado
						if (ie_doutorado_pos_w IS NOT NULL AND ie_doutorado_pos_w::text <> '') then
							CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'D', null, null, null);
						end if;
						
						-- M - Mestrado
						if (ie_mestrado_w = 'S') then
							CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'M', null, null, null);
						end if;
					end if;
					-- Certificacoes - R405

						
					-- Gravar especialidade do guia medico
					if (ie_agrupar_especialidade_w = 'N') and (cd_especialidades_med_w IS NOT NULL AND cd_especialidades_med_w::text <> '') then						
						CALL pls_gerar_w_guia_med_espec( nm_usuario_p, nr_seq_guia_medico_w, cd_especialidades_med_w);
					end if;
					
					if (ds_especialidades_w IS NOT NULL AND ds_especialidades_w::text <> '') then
						-- Gravar especialidade do guia medico
						for r_c09_w in c09( nr_seq_prestador_w, nr_seq_guia_medico_w, cd_medico_w, ie_agrupar_especialidade_w ) loop
							CALL pls_gerar_w_guia_med_espec( nm_usuario_p, nr_seq_guia_medico_w, r_c09_w.cd_especialidade);
						end loop;
					end if;
				end if;
			end loop;
		end if;
		
		cd_cep_w	:= null;
		cd_municipio_ibge_w	:= null; -- Limpa para utilizar no cursor
		for r_c03_w in c03( nr_seq_prestador_w, cd_medico_w, cd_municipio_ibge_w, cd_especialidades_med_w ) loop
			ie_tipo_endereco_w	:= r_c03_w.ie_tipo_endereco;
			nr_seq_end_guia_medico_w:= r_c03_w.nr_seq_end_guia_medico;
			ie_insere_c03_w		:= 'S';
			cd_municipio_ibge_w	:= null; -- limpa para utilizar abaixo
			
			select	max(nr_seq_compl_pf_tel_adic),
				max(nr_seq_tipo_compl_adic)
			into STRICT	nr_seq_compl_pf_tel_adic_w,
				nr_seq_tipo_compl_adic_guia_w
			from	pls_endereco_guia_medico
			where	nr_sequencia	 = nr_seq_end_guia_medico_w;
			
			SELECT * FROM pls_obter_dados_end_prest_gm(	cd_medico_w, cd_cgc_prestador_w, ie_tipo_endereco_w, 'N', nr_seq_compl_pf_tel_adic_w, nr_seq_tipo_compl_adic_guia_w, ie_origem_p, ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w) INTO STRICT ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w;

			if	((ie_tipo_prestador_w in ('PJ1','PJ2')) and (coalesce(ds_website_w::text, '') = '')) then
				select	max(a.ds_site_internet)
				into STRICT	ds_website_w
				from	pessoa_juridica a
				where	a.cd_cgc = (	SELECT	b.cd_cgc
							from	pls_prestador b
							where	b.nr_sequencia	= nr_seq_prestador_w);
			end if;
			
			if (nr_seq_bairro_p IS NOT NULL AND nr_seq_bairro_p::text <> '') and (ie_insere_c03_w = 'S') then
				ie_insere_c03_w		:= pls_obter_se_cep_bairro( nr_seq_bairro_p, cd_cep_w);
				
				-- se o bairro esta informado no endereco e contido no CEP, ainda valida o nome,

				-- caso nao possua o nome do bairro no prestador, ira permanecer o resultado da validacao do cep
				if (ie_insere_c03_w = 'S') and (ds_bairro_w IS NOT NULL AND ds_bairro_w::text <> '') then
				
					if (upper(ds_bairro_filtro_w) = upper(ds_bairro_w)) then
						ie_insere_c03_w := 'S';
					else
						ie_insere_c03_w := 'N';
					end if;
				end if;
			end if;
			
			if (ie_tipo_prestador_w = 'PF') then
				ds_especialidades_med_w	:= null;
				
					ds_especialidades_med_w := pls_obter_espec_prest_medico(	ds_especialidades_med_w, 1, nr_seq_prestador_w, cd_medico_w, cd_especialidade_p, nr_seq_end_guia_medico_w, nr_seq_area_atuacao_p, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
								
				if (ie_agrupar_especialidade_w = 'S') then
					select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_especialista_w
					from	medico_especialidade	a
					where	a.cd_pessoa_fisica	= cd_medico_w
					and	(nr_rqe IS NOT NULL AND nr_rqe::text <> '');
					
				-- aaschlote 11/04/2014 - OS - 725593 - Verificar a RQE do medico por especialidade
				elsif (ie_agrupar_especialidade_w = 'N') then
					begin
					select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_especialista_w
					from	medico_especialidade	a
					where	a.cd_pessoa_fisica	= cd_medico_w
					and	a.cd_especialidade	= cd_especialidades_med_w
					and	(a.nr_rqe IS NOT NULL AND a.nr_rqe::text <> '');
					exception
					when others then
						ie_especialista_w	:= 'N';
					end;
				end if;
				
			else
				if (ie_tipo_prestador_w = 'PJ2') then
						ds_especialidades_w := pls_obter_espec_prest_medico(	ds_especialidades_w, 3, nr_seq_prestador_w, cd_medico_w, cd_especialidade_p, nr_seq_end_guia_medico_w, nr_seq_area_atuacao_p, nr_seq_tipo_guia_p, null, null, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);
									
					if (coalesce(ds_especialidades_w::text, '') = '') and (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') then
						ie_insere_c03_w	 := 'N';
					end if;
				end if;
				
				ds_especialidades_med_w	:= ds_especialidades_w;
				ie_especialista_w	:= 'N';
				if (ie_agrupar_especialidade_w = 'S') then
					select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_especialista_w
					from	medico_especialidade	a
					where	a.cd_pessoa_fisica	= cd_medico_w
					and	(nr_rqe IS NOT NULL AND nr_rqe::text <> '');
					
				-- aaschlote 11/04/2014 - OS - 725593 - Verificar a RQE do medico por especialidade
				elsif (ie_agrupar_especialidade_w = 'N') then
					begin
					select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_especialista_w
					from	medico_especialidade	a
					where	a.cd_pessoa_fisica	= cd_medico_w
					and	a.cd_especialidade	= cd_especialidades_med_w
					and	(a.nr_rqe IS NOT NULL AND a.nr_rqe::text <> '');
					exception
					when others then
						ie_especialista_w	:= 'N';
					end;
				end if;
			end if;	
			
			if (coalesce(cd_municipio_ibge_p,cd_municipio_ibge_w) <> cd_municipio_ibge_w) then
				ie_insere_c03_w	 := 'N';
			end if;	
			
			if (coalesce(ie_endereco_espec_p, 'N') = 'S') and (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') and (ie_tipo_prestador_w = 'PF') then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_endereco_guia_medico a,
					pls_end_guia_med_espec b
				where	a.nr_sequencia		= b.nr_seq_endereco
				and	a.nr_seq_prestador	= nr_seq_prestador_w
				and	a.ie_tipo_endereco	= ie_tipo_endereco_ww
				and	((coalesce(cd_especialidade_p::text, '') = '') or (b.cd_especialidade = cd_especialidade_p));
				
				if (qt_registro_w = 0) then
					ie_insere_c03_w		:= 'N';
				end if;
				
				if (qt_registro_w = 0) then
					select	count(1)
					into STRICT	qt_registro_w
					from	especialidade_medica 	d,
						pls_end_guia_med_espec	c,
						pls_prestador_med_espec a
					where	a.cd_especialidade	= d.cd_especialidade
					and	c.cd_especialidade 	= a.cd_especialidade
					and	c.nr_seq_endereco	= nr_seq_end_guia_medico_w
					and	a.cd_pessoa_fisica	= cd_medico_w
					and	a.nr_seq_prestador	= nr_seq_prestador_w
					and	((coalesce(cd_especialidade_p::text, '') = '') or (a.cd_especialidade = cd_especialidade_p))
					and	coalesce(a.ie_guia_medico,'S')	= 'S'
					and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()));
					
					if (qt_registro_w > 0) then
						ie_insere_c03_w		:= 'S';
					end if;
				end if;
			end if;
			
			ds_area_atuacao_med_w := pls_obter_area_atuac_guia_med(nr_seq_prestador_w, cd_medico_w, nr_seq_area_atuacao_p, nm_usuario_p, cd_estabelecimento_p, cd_especialidades_med_w, ie_agrupar_especialidade_w);

			if (nr_seq_area_atuacao_p IS NOT NULL AND nr_seq_area_atuacao_p::text <> '') and (coalesce(ds_area_atuacao_med_w::text, '') = '') then
				ie_insere_c03_w := 'N';
			end if;
			
			if (ie_insere_c03_w = 'S') then		
				ie_apalc_w	:= 'N';
				ie_adicq_w	:= 'N';
				ie_aona_w	:= 'N';
				ie_acba_w	:= 'N';
				ie_aiqg_w	:= 'N';
				
				-- Certificacoes
				for r_c99_w in c99( nr_seq_prestador_w, ie_acred_rn405_w ) loop
					if (r_c99_w.ie_acreditacao = 'ACBA') then
						ie_acba_w	:= 'S';
						
					elsif (r_c99_w.ie_acreditacao = 'ADICQ') then
						ie_adicq_w	:= 'S';
						
					elsif (r_c99_w.ie_acreditacao = 'AIQG') then
						ie_aiqg_w	:= 'S';
						
					elsif (r_c99_w.ie_acreditacao = 'AONA') then
						ie_aona_w	:= 'S';
						
					elsif (r_c99_w.ie_acreditacao = 'APALC') then
						ie_apalc_w	:= 'S';
					end if;
				end loop;
				
				nr_crm_w := null;
				if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
					begin
					nr_crm_w := substr(obter_crm_medico(cd_medico_w),1,20);
					exception
					when others then
						null;
					end;
				end if;

				nr_ddi_telefone_w := null;
				nr_fone_whatapp_w := null;

				-- se estiver configurado como whatsapp
				if r_c01_w.ie_whatsapp = 'S' then
					select 	trim(both substr(pls_obter_tel_prest(cd_pessoa_fisica, cd_cgc, 'DDT', ie_tipo_endereco, nr_seq_compl_pj,nr_seq_compl_pf_tel_adic,nr_seq_tipo_compl_adic), 1, 255)),
						trim(both substr(pls_obter_tel_prest(cd_pessoa_fisica, cd_cgc, 'T', ie_tipo_endereco, nr_seq_compl_pj,nr_seq_compl_pf_tel_adic,nr_seq_tipo_compl_adic), 1, 255))
					into STRICT 	nr_ddd_whatsapp_w,
						nr_fone_whatapp_w
					from 	pls_prestador pp
					where 	pp.nr_sequencia = nr_seq_prestador_w;
				
				else
					select 	pp.nr_ddd_fone_whatsapp,
						pp.nr_fone_whatsapp
					into STRICT 	nr_ddd_whatsapp_w,
						nr_fone_whatapp_w
					from 	pls_prestador pp
					where 	pp.nr_sequencia = nr_seq_prestador_w;
				end if;

				insert into w_pls_guia_medico(nr_sequencia, nr_seq_prestador, cd_medico,
					cd_municipio_ibge, dt_atualizacao, nm_usuario,
					cd_cgc_prestador, cd_pf_prestador, nr_crm,
					ds_endereco, nr_endereco, ds_complemento,
					ds_bairro, cd_cep, nr_telefone_prest,
					ds_especialidades_med, ds_email, ds_website,
					nr_ramal, sg_estado, nr_ddd, nr_telefone,nr_ddd_fax,ds_fax,ds_fone_adic,
					cd_prestador, ds_tipo_prestador, ds_tipo_estab_cnes, cd_estabelecimento,
					ie_notivisa, ie_pos_grad_360, ie_residencia, ie_qualiss,
					ie_apalc, ie_adicq, ie_aona, ie_acba, ie_aiqg,
					ie_especialista, ie_ausente, ds_area_atuacao_med, ie_historico_guia_medico,
					nr_ddi,nr_ddd_whatsapp, ds_fone_whatsapp)
				values (nextval('w_pls_guia_medico_seq'), nr_seq_prestador_w, cd_medico_w,
					coalesce(cd_municipio_ibge_w,cd_municipio_ibge_p), clock_timestamp(), nm_usuario_p,
					cd_cgc_prestador_w, cd_pf_prestador_w, nr_crm_w,
					ds_endereco_w, obter_somente_numero(nr_endereco_w), ds_complemento_w,
					ds_bairro_w, cd_cep_w, nr_telefone_w,
					ds_especialidades_med_w, ds_email_w, ds_website_w,
					nr_ramal_w, sg_estado_w, substr(nr_ddd_telefone_w, 2, 2), nr_tel_simples_w,nr_ddd_fax_w,ds_fax_w,ds_fone_adic_w,
					cd_prestador_w, ds_tipo_prestador_w, ds_tipo_estab_cnes_w, cd_estabelecimento_p,
					ie_notivisa_w, ie_pos_grad_360_w, ie_residencia_saude_w, ie_particip_qualiss_ans_w,
					ie_apalc_w, ie_adicq_w, ie_aona_w, ie_acba_w, ie_aiqg_w,
					coalesce(ie_gera_especialidade_w, ie_especialista_w), ie_ausente_w, ds_area_atuacao_med_w, ie_historico_guia_medico_w,
					obter_somente_numero(nr_ddi_telefone_w), obter_somente_numero(nr_ddd_whatsapp_w), obter_somente_numero(nr_fone_whatapp_w)) returning nr_sequencia into nr_seq_guia_medico_w;
					
				-- Certificacoes - R405
				if (ie_acred_rn405_w = 'S') then
					-- A - Programa de acreditacao

					-- G - Certificacoes de Entidades Gestoras de Outros Programas de Qualidade

					-- I - Certificacao ISO9001
					for r_c99_w in c99( nr_seq_prestador_w, ie_acred_rn405_w ) loop
						CALL pls_gerar_w_guia_med_qualif(	nm_usuario_p, nr_seq_guia_medico_w, r_c99_w.nr_seq_instituicao_acred, r_c99_w.nr_seq_prest_qualif,
										r_c99_w.ie_atrib_qualif, r_c99_w.ds_atrib_qualif, r_c99_w.ds_observacao, r_c99_w.ds_instituicao_acred);
					end loop;
					
					-- N - Comunicacao de eventos adversos
					if (ie_notivisa_w = 'S') then
						CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'N', null, null, null);
					end if;
					
					-- P - Profissional com especializacao
					if (ie_pos_grad_360_w = 'S') then
						CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'P', null, null, null);
					end if;
					
					-- R - Profissional com residencia
					if (ie_residencia_saude_w = 'S') then
						CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'R', null, null, null);
					end if;
					
					-- E - Titulo de Especialista
					if (coalesce(ie_gera_especialidade_w, ie_especialista_w) = 'S') then
						CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'E', null, null, null);
					end if;
					
					-- Q - Qualidade monitorada
					if (ie_particip_qualiss_ans_w = 'S') then
						CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'Q', null, null, null);
					end if;
					
					-- D - Profissional com Doutorado ou PosDoutorado
					if (ie_doutorado_pos_w IS NOT NULL AND ie_doutorado_pos_w::text <> '') then
						CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'D', null, null, null);
					end if;
					
					-- M - Mestrado
					if (ie_mestrado_w = 'S') then
						CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'M', null, null, null);
					end if;
				end if;
				-- Certificacoes - R405


				-- Gravar especialidade do guia medico
				if (ie_agrupar_especialidade_w = 'N') and (cd_especialidades_med_w IS NOT NULL AND cd_especialidades_med_w::text <> '') then
					CALL pls_gerar_w_guia_med_espec( nm_usuario_p, nr_seq_guia_medico_w, cd_especialidades_med_w);
				end if;
				
				if (ds_especialidades_med_w IS NOT NULL AND ds_especialidades_med_w::text <> '') then
					if (ie_tipo_prestador_w = 'PF') then
						-- Gravar especialidade do guia medico
						for r_c07_w in c07( nr_seq_end_guia_medico_w, cd_medico_w, nr_seq_prestador_w, cd_especialidade_p, nr_seq_area_atuacao_p, ie_agrupar_especialidade_w ) loop
							cd_especialidades_med_w := r_c07_w.cd_especialidade;
							CALL pls_gerar_w_guia_med_espec( nm_usuario_p, nr_seq_guia_medico_w, cd_especialidades_med_w);
						end loop;
					else
						-- Gravar especialidade do guia medico
						for r_c09_w in c09( nr_seq_prestador_w, nr_seq_guia_medico_w, cd_medico_w, ie_agrupar_especialidade_w ) loop
							CALL pls_gerar_w_guia_med_espec( nm_usuario_p, nr_seq_guia_medico_w, r_c09_w.cd_especialidade);
						end loop;
					end if;
				end if;
				
			end if;
			
			nr_seq_compl_pf_tel_adic_w := null;
			
			if (ie_insere_c03_w = 'S') then
				ie_insere_c03_w := null;
				ie_insere_w := null;
			end if;
		end loop;
		
		cd_cep_w := null;
		SELECT * FROM pls_obter_dados_end_prest_gm(	cd_medico_w, cd_cgc_prestador_w, ie_tipo_endereco_ww, 'S', coalesce(nr_seq_compl_pf_tel_adic_ww, nr_seq_compl_pj_w), nr_seq_tipo_compl_adic_w, ie_origem_p, ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w) INTO STRICT ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w;

		if (ie_tipo_prestador_w in ('PJ1','PJ2')) and (coalesce(ds_website_w::text, '') = '') then
			select	max(a.ds_site_internet)
			into STRICT	ds_website_w
			from	pessoa_juridica a
			where	a.cd_cgc = (	SELECT	b.cd_cgc
						from	pls_prestador b
						where	b.nr_sequencia = nr_seq_prestador_w);
		end if;
		
		if (nr_seq_bairro_p IS NOT NULL AND nr_seq_bairro_p::text <> '') and (ie_insere_w = 'S') then
			ie_insere_w	:= pls_obter_se_cep_bairro( nr_seq_bairro_p, cd_cep_w);
									
			-- se o bairro esta informado no endereco e contido no CEP, ainda valida o nome,

			-- caso nao possua o nome do bairro no prestador, ira permanecer o resultado da validacao do cep
			if (ie_insere_w = 'S') and (ds_bairro_w IS NOT NULL AND ds_bairro_w::text <> '') then
			
				if (upper(ds_bairro_filtro_w) = upper(ds_bairro_w)) then
					ie_insere_w := 'S';
				else
					ie_insere_w := 'N';
				end if;
				
			end if;
			
		end if;
		
		if (ie_agrupar_especialidade_w = 'S') then
			ds_especialidades_med_w	:= null;
				ds_especialidades_med_w := pls_obter_espec_prest_medico(	ds_especialidades_med_w, 2, nr_seq_prestador_w, cd_medico_w, cd_especialidade_p, null, nr_seq_area_atuacao_p, nr_seq_tipo_guia_p, ie_tipo_prestador_w, ie_gera_apenas_espec_prest_w, ie_origem_p, nm_usuario_p, cd_estabelecimento_p);

			if (ds_especialidades_med_w <> ' ') then
				ds_especialidades_w	:= ds_especialidades_med_w;
			end if;
		end if;
		
		if (coalesce(cd_municipio_ibge_p,cd_municipio_ibge_w) <> cd_municipio_ibge_w) then
			ie_insere_w	:= 'N';
		end if;
		
		if (coalesce(ie_endereco_espec_p, 'N') = 'S') and (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') and (ie_tipo_prestador_w = 'PF') then
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_endereco_guia_medico a,
				pls_end_guia_med_espec b
			where	a.nr_sequencia		= b.nr_seq_endereco
			and	a.nr_seq_prestador	= nr_seq_prestador_w
			and	a.ie_tipo_endereco	= ie_tipo_endereco_ww
			and	((coalesce(cd_especialidade_p::text, '') = '') or (b.cd_especialidade = cd_especialidade_p));
			
			if (qt_registro_w = 0) then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_prestador_med_espec a
				where	a.nr_seq_prestador	= nr_seq_prestador_w
				and	coalesce(a.ie_endereco_principal,' N') = 'S'
				and	((coalesce(cd_especialidade_p::text, '') = '') or (a.cd_especialidade = cd_especialidade_p))
				and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()));
				
				if (qt_registro_w = 0) then
					ie_insere_w	:= 'N';
				else
					ie_insere_w	:= 'S';
				end if;
			end if;
		end if;	

		ds_area_atuacao_med_w := pls_obter_area_atuac_guia_med(nr_seq_prestador_w, cd_medico_w, nr_seq_area_atuacao_p, nm_usuario_p, cd_estabelecimento_p, cd_especialidades_med_w, ie_agrupar_especialidade_w);

		if (nr_seq_area_atuacao_p IS NOT NULL AND nr_seq_area_atuacao_p::text <> '') and (coalesce(ds_area_atuacao_med_w::text, '') = '') then
			ie_insere_w := 'N';
		end if;
			
		if (ie_insere_w = 'S') then		
			ie_apalc_w	:= 'N';
			ie_adicq_w	:= 'N';
			ie_aona_w	:= 'N';
			ie_acba_w	:= 'N';
			ie_aiqg_w	:= 'N';
			
			-- Certificacoes
			for r_c99_w in c99( nr_seq_prestador_w, ie_acred_rn405_w ) loop
				if (r_c99_w.ie_acreditacao = 'ACBA') then
					ie_acba_w	:= 'S';
					
				elsif (r_c99_w.ie_acreditacao = 'ADICQ') then
					ie_adicq_w	:= 'S';
					
				elsif (r_c99_w.ie_acreditacao = 'AIQG') then
					ie_aiqg_w	:= 'S';
					
				elsif (r_c99_w.ie_acreditacao = 'AONA') then
					ie_aona_w	:= 'S';
					
				elsif (r_c99_w.ie_acreditacao = 'APALC') then
					ie_apalc_w	:= 'S';
				end if;
			end loop;
			
			if (ie_tipo_prestador_w = 'PF') then
				if (ie_agrupar_especialidade_w = 'S') then
					select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_especialista_w
					from	medico_especialidade	a
					where	a.cd_pessoa_fisica	= cd_medico_w
					and	(nr_rqe IS NOT NULL AND nr_rqe::text <> '');
					
				elsif (ie_agrupar_especialidade_w = 'N') then
					-- aaschlote 11/04/2014 - OS - 725593 - Verificar a RQE do medico por especialidade
					begin
					select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_especialista_w
					from	medico_especialidade	a
					where	a.cd_pessoa_fisica	= cd_medico_w
					and	a.cd_especialidade	= cd_especialidades_med_w
					and	(a.nr_rqe IS NOT NULL AND a.nr_rqe::text <> '');
					exception
					when others then
						ie_especialista_w	:= 'N';
					end;
				end if;
			else
				select	count(1)
				into STRICT	qt_especialidade_w
				from	especialidade_medica	a,
					medico_especialidade	b,
					pessoa_fisica		c
				where	a.cd_especialidade = b.cd_especialidade
				and	b.cd_pessoa_fisica = c.cd_pessoa_fisica
				and	c.cd_pessoa_fisica = cd_medico_w
				and	(b.nr_rqe IS NOT NULL AND b.nr_rqe::text <> '');
			
				if (coalesce(qt_especialidade_w, 0) > 0) then
					ie_especialista_w	:= 'S';
				else
					ie_especialista_w	:= 'N';
				end if;
			end if;
			
			nr_crm_w := null;
			if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
				begin
				nr_crm_w := substr(obter_crm_medico(cd_medico_w),1,20);
				exception
				when others then
					null;
				end;
			end if;

			nr_ddi_telefone_w := null;
			nr_fone_whatapp_w := null;
			
			-- se estiver configurado como whatsapp
			if r_c01_w.ie_whatsapp = 'S' then
				select 	trim(both substr(pls_obter_tel_prest(cd_pessoa_fisica, cd_cgc, 'DDT', ie_tipo_endereco, nr_seq_compl_pj,nr_seq_compl_pf_tel_adic,nr_seq_tipo_compl_adic), 1, 255)),
					trim(both substr(pls_obter_tel_prest(cd_pessoa_fisica, cd_cgc, 'T', ie_tipo_endereco, nr_seq_compl_pj,nr_seq_compl_pf_tel_adic,nr_seq_tipo_compl_adic), 1, 255))
				into STRICT 	nr_ddd_whatsapp_w,
					nr_fone_whatapp_w
				from 	pls_prestador pp
				where 	pp.nr_sequencia = nr_seq_prestador_w;
			
			else
				select 	pp.nr_ddd_fone_whatsapp,
					pp.nr_fone_whatsapp
				into STRICT 	nr_ddd_whatsapp_w,
					nr_fone_whatapp_w
				from 	pls_prestador pp
				where 	pp.nr_sequencia = nr_seq_prestador_w;
			end if;

			insert into w_pls_guia_medico(nr_sequencia, nr_seq_prestador, cd_medico,
				cd_municipio_ibge, dt_atualizacao, nm_usuario,
				cd_cgc_prestador, cd_pf_prestador, nr_crm,
				ds_endereco, nr_endereco, ds_complemento,
				ds_bairro, cd_cep, nr_telefone_prest,
				ds_especialidades_med, ds_email, ds_website,
				nr_ramal, sg_estado, nr_ddd, nr_telefone,nr_ddd_fax,ds_fax,ds_fone_adic,
				cd_prestador, ds_tipo_prestador, ds_tipo_estab_cnes, cd_estabelecimento,
				ie_notivisa, ie_pos_grad_360, ie_residencia, ie_qualiss,
				ie_apalc, ie_adicq, ie_aona, ie_acba, ie_aiqg,
				ie_especialista, ie_ausente, ds_area_atuacao_med, ie_historico_guia_medico,
				nr_ddi,nr_ddd_whatsapp, ds_fone_whatsapp)
			values (nextval('w_pls_guia_medico_seq'), nr_seq_prestador_w, cd_medico_w,
				coalesce(cd_municipio_ibge_w,cd_municipio_ibge_p), clock_timestamp(), nm_usuario_p,
				cd_cgc_prestador_w, cd_pf_prestador_w, nr_crm_w,
				ds_endereco_w, obter_somente_numero(nr_endereco_w), ds_complemento_w,
				ds_bairro_w, cd_cep_w, nr_telefone_w,
				ds_especialidades_w, ds_email_w, ds_website_w,
				nr_ramal_w, sg_estado_w, substr(nr_ddd_telefone_w, 2, 2), nr_tel_simples_w,nr_ddd_fax_w,substr(ds_fax_w, 1, 20),ds_fone_adic_w,
				cd_prestador_w, ds_tipo_prestador_w, ds_tipo_estab_cnes_w, cd_estabelecimento_p,
				ie_notivisa_w, ie_pos_grad_360_w, ie_residencia_saude_w, ie_particip_qualiss_ans_w,
				ie_apalc_w, ie_adicq_w, ie_aona_w, ie_acba_w, ie_aiqg_w,
				coalesce(ie_gera_especialidade_w, ie_especialista_w), ie_ausente_w, ds_area_atuacao_med_w, ie_historico_guia_medico_w,
				obter_somente_numero(nr_ddi_telefone_w),obter_somente_numero(nr_ddd_whatsapp_w), obter_somente_numero(nr_fone_whatapp_w)) returning nr_sequencia into nr_seq_guia_medico_w;
				
			-- Certificacoes - R405
			if (ie_acred_rn405_w = 'S') then
				-- A - Programa de acreditacao

				-- G - Certificacoes de Entidades Gestoras de Outros Programas de Qualidade

				-- I - Certificacao ISO9001
				for r_c99_w in c99( nr_seq_prestador_w, ie_acred_rn405_w ) loop
					CALL pls_gerar_w_guia_med_qualif(	nm_usuario_p, nr_seq_guia_medico_w, r_c99_w.nr_seq_instituicao_acred, r_c99_w.nr_seq_prest_qualif,
									r_c99_w.ie_atrib_qualif, r_c99_w.ds_atrib_qualif, r_c99_w.ds_observacao, r_c99_w.ds_instituicao_acred);
				end loop;
				
				-- N - Comunicacao de eventos adversos
				if (ie_notivisa_w = 'S') then
					CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'N', null, null, null);
				end if;
				
				-- P - Profissional com especializacao
				if (ie_pos_grad_360_w = 'S') then
					CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'P', null, null, null);
				end if;
				
				-- R - Profissional com residencia
				if (ie_residencia_saude_w = 'S') then
					CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'R', null, null, null);
				end if;
				
				-- E - Titulo de Especialista
				if (coalesce(ie_gera_especialidade_w, ie_especialista_w) = 'S') then
					CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'E', null, null, null);
				end if;
				
				-- Q - Qualidade monitorada
				if (ie_particip_qualiss_ans_w = 'S') then
					CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'Q', null, null, null);
				end if;
				
				-- D - Profissional com Doutorado ou PosDoutorado
				if (ie_doutorado_pos_w IS NOT NULL AND ie_doutorado_pos_w::text <> '') then
					CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'D', null, null, null);
				end if;
				
				-- M - Mestrado
				if (ie_mestrado_w = 'S') then
					CALL pls_gerar_w_guia_med_qualif( nm_usuario_p, nr_seq_guia_medico_w, null, null, 'M', null, null, null);
				end if;
				-- Certificacoes - R405

				
				-- Gravar especialidade do guia medico
				if (ie_agrupar_especialidade_w = 'N') and (cd_especialidades_med_w IS NOT NULL AND cd_especialidades_med_w::text <> '') then
					CALL pls_gerar_w_guia_med_espec( nm_usuario_p, nr_seq_guia_medico_w, cd_especialidades_med_w);
				end if;
			end if;

			if (ds_especialidades_w IS NOT NULL AND ds_especialidades_w::text <> '') then
				cd_especialidades_med_w := null;

				-- Gravar especialidade do guia medico
				for r_c08_w in c08( nr_seq_prestador_w, cd_especialidade_p, nr_seq_area_atuacao_p, nr_seq_guia_medico_w, ie_agrupar_especialidade_w ) loop
					cd_especialidades_med_w := r_c08_w.cd_especialidade;
					CALL pls_gerar_w_guia_med_espec( nm_usuario_p, nr_seq_guia_medico_w, cd_especialidades_med_w);
				end loop;
				
				if (coalesce(cd_especialidades_med_w::text, '') = '') then
					-- Gravar especialidade do guia medico
					for r_c09_w in c09( nr_seq_prestador_w, nr_seq_guia_medico_w, cd_medico_w, ie_agrupar_especialidade_w ) loop
						CALL pls_gerar_w_guia_med_espec( nm_usuario_p, nr_seq_guia_medico_w, r_c09_w.cd_especialidade);
					end loop;
				end if;
			end if;
		end if;
	end if;

	<<final>>
	ie_insere_w	:= ie_insere_w; -- Deve existir uma linha apos o <<Final>> 
end loop;

for r_c10_w in c10( nm_usuario_p , cd_estabelecimento_p ) loop
	for r_c11_w in c11( r_c10_w.nr_sequencia,		nm_usuario_p,			cd_estabelecimento_p,
			r_c10_w.cd_cep,				r_c10_w.cd_cgc_prestador,	r_c10_w.cd_medico,
			r_c10_w.cd_municipio_ibge,		r_c10_w.cd_pf_prestador,	r_c10_w.cd_prestador,
			r_c10_w.cd_procedimento,		r_c10_w.ds_area_atuacao_med,	r_c10_w.ds_bairro,
			r_c10_w.ds_complemento,			r_c10_w.ds_email,		r_c10_w.ds_endereco,
			r_c10_w.ds_especialidades_med,		r_c10_w.ds_fax,			r_c10_w.ds_fone_adic,
			r_c10_w.ds_tipo_estab_cnes,		r_c10_w.ds_tipo_prestador,	r_c10_w.ds_website,
			r_c10_w.ie_acba,			r_c10_w.ie_adicq,		r_c10_w.ie_aiqg,
			r_c10_w.ie_aona,			r_c10_w.ie_apalc,		r_c10_w.ie_ausente,
			r_c10_w.ie_especialista,		r_c10_w.ie_historico_guia_medico, r_c10_w.ie_notivisa,
			r_c10_w.ie_origem_proced,		r_c10_w.ie_pos_grad_360,	r_c10_w.ie_qualiss,
			r_c10_w.ie_residencia,			r_c10_w.nr_crm,			r_c10_w.nr_ddd,
			r_c10_w.nr_ddd_fax,			r_c10_w.nr_ddi,			r_c10_w.nr_endereco,
			r_c10_w.nr_ramal,			r_c10_w.nr_seq_prestador,	r_c10_w.nr_telefone,
			r_c10_w.nr_telefone_prest,		r_c10_w.sg_estado ) loop

		delete	FROM w_pls_guia_med_qualif
		where	nr_seq_guia_medico = r_c10_w.nr_sequencia;
		
		delete	FROM w_pls_guia_med_espec
		where	nr_seq_guia_medico = r_c10_w.nr_sequencia;
		
		delete	FROM w_pls_guia_medico
		where	nr_sequencia = r_c10_w.nr_sequencia;
	end loop;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_guia_medico ( nr_seq_prestador_p bigint, cd_medico_p text, cd_item_p bigint, ie_origem_proced_p bigint, cd_municipio_ibge_p text, cd_especialidade_p bigint, ie_proc_especialidade_p text, nr_seq_tipo_prestador_p bigint, ie_tipo_p bigint, ie_origem_p text, nr_seq_tipo_guia_p text, nr_seq_plano_p bigint, sg_estado_p text, nr_seq_bairro_p bigint, ie_filtro_portal_p text, nr_seq_regiao_p text, ie_sem_tipo_guia_p text, ie_instituicao_acred_p text, ie_nivel_acreditacao_p bigint, cd_prestador_p text, ie_cd_prestador_p text, nm_prestador_p text, nm_medico_p text, nm_usuario_p text, ie_carater_internacao_p text, cd_estabelecimento_p bigint, ie_endereco_espec_p text, nr_seq_area_atuacao_p bigint, ie_odontologico_p text, ie_ausentes_p w_pls_guia_medico.ie_ausente%type, ie_tipo_relacao_p text, nr_seq_grupo_servico_p pls_prest_grupo_serv_gm.nr_seq_grupo_servico%type, nm_medico_ou_prestador_p text, ds_logradouro_p text, ie_guia_medico_web_p pls_controle_estab.ie_guia_medico_web%type default 'N', nr_seq_classific_prestador_p pls_prestador.nr_seq_classificacao%type default null) FROM PUBLIC;

