-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nut_consistir_mat_conta_pac ( nr_sequencia_p bigint, nr_atendimento_p text, nr_seq_dispositivo_p bigint, nr_prescricao_p bigint) AS $body$
DECLARE
	

cd_setor_atendimento_w	atend_paciente_unidade.cd_setor_Atendimento%type;
dt_entrada_unidade_w	atend_paciente_unidade.dt_entrada_unidade%type;
nr_seq_local_estoque_w	nut_local_estoque.nr_seq_local_estoque%type;
cd_material_w           nut_prod_lac_item.cd_material%type;
ds_material_w		material.ds_material%type;
qt_dose_w		double precision;
cd_unidade_medida_w	material_atend_paciente.cd_unidade_medida%type;
ie_possui_estoque_w	varchar(10);
nr_seq_prod_principal_w bigint;
nr_seq_lote_fornec_w bigint;
qt_dose_w2		double precision;
qt_estoque_locais_w	saldo_estoque.qt_estoque%type := 0;
qt_estoque_maior_w	saldo_estoque.qt_estoque%type := 0;
nr_local_aux_estoque_w	nut_local_estoque.nr_seq_local_estoque%type;

C01 CURSOR FOR
	SELECT	b.cd_material		
	from	nut_prod_lac_item b
	where	b.nr_sequencia = nr_sequencia_p	
	and 	nut_verifica_material_estoque(b.cd_material) = 'S'
	
union

	SELECT	m.cd_material		
	from	nut_prod_lac_item_adic a,
		prescr_material m
	where	a.nr_seq_prod_item = nr_sequencia_p
	and 	nut_verifica_material_estoque(m.cd_material) = 'S'	
	and	m.nr_sequencia = a.nr_seq_material
	and	m.nr_prescricao = a.nr_prescricao
	
union

	select	a.cd_material		
	from	dispositivo_succao_mat a,
		material b
	where	a.nr_seq_dispositivo = nr_seq_dispositivo_p	
	and 	nut_verifica_material_estoque(a.cd_material) = 'S'
	and	a.cd_material = b.cd_material
	and	a.ie_opcao = 'H'
	and	a.ie_situacao = 'A'
	
union

	select	a.cd_material		
	from	dispositivo_succao_mat a,
		material b
	where	a.nr_seq_dispositivo = nr_seq_dispositivo_p
	and 	nut_verifica_material_estoque(a.cd_material) = 'S'
	and	a.cd_material = b.cd_material
	and	a.ie_opcao = 'P'
	and	a.ie_situacao = 'A'
	and		not exists (select	1
				   from		nut_prod_lactario_fat c
			           where	c.nr_prescricao = nr_prescricao_p	
				   and 		nut_verifica_material_estoque(c.cd_material) = 'S'				
				   and	   	c.cd_material = a.cd_material);
						
						
C02 CURSOR FOR
	SELECT  b.cd_material,
			SUM(b.qt_dose),
			CASE WHEN coalesce(MAX(qt_po)::text, '') = '' THEN b.cd_unidade_medida  ELSE 'g' END ,
			b.nr_seq_prod_princ
	FROM	nut_prod_lac_item b,
			nut_prod_principal c
	WHERE	c.nr_sequencia = (SELECT MAX(x.nr_seq_prod_princ)
						   	 FROM	 nut_prod_lac_item x
							 WHERE	 x.nr_sequencia = nr_sequencia_p)
	AND	c.nr_sequencia = b.nr_seq_prod_princ
	and     nut_verifica_material_estoque(b.cd_material) = 'S'
	GROUP BY b.cd_material,
					 b.cd_unidade_medida, 
					 b.nr_seq_prod_princ
	
union all

	SELECT	m.cd_material ,
			SUM(a.qt_dose) ,
			a.cd_unidade_medida,
			d.nr_seq_prod_princ
	FROM	nut_prod_lac_item_adic a,
			nut_prod_lac_item d,
			prescr_material m,
			nut_prod_principal c
	WHERE	a.nr_seq_prod_item = d.nr_sequencia
	AND	m.nr_sequencia = a.nr_seq_material
	AND	m.nr_prescricao = a.nr_prescricao
	AND	d.nr_seq_prod_princ = c.nr_sequencia
	and           nut_verifica_material_estoque(m.cd_material) = 'S'
	AND	c.nr_sequencia = (SELECT MAX(x.nr_seq_prod_princ)
					   	FROM	 nut_prod_lac_item x
						WHERE	 x.nr_sequencia = nr_sequencia_p)
	GROUP BY m.cd_material,
					 a.cd_unidade_medida,
					 d.nr_seq_prod_princ
	
union all
		
	select	a.cd_material,
		1,
		b.cd_unidade_medida_consumo,
		null as nr_seq_prod_princ
	from	dispositivo_succao_mat a,
			material b 
	where	a.nr_seq_dispositivo = nr_seq_dispositivo_p
	and     nut_verifica_material_estoque(a.cd_material) = 'S'
	and	a.cd_material = b.cd_material
	and	a.ie_opcao = 'H'
	and	a.ie_situacao = 'A'
	
union all

	select	a.cd_material,
		1,
		b.cd_unidade_medida_consumo,
		null as nr_seq_prod_princ
	from	dispositivo_succao_mat a,
			material b
	where	a.nr_seq_dispositivo = nr_seq_dispositivo_p
	and   	nut_verifica_material_estoque(a.cd_material) = 'S'
	and	a.cd_material = b.cd_material
	and	a.ie_opcao = 'P'
	and	a.ie_situacao = 'A'
	and	not exists (select	1
					from	nut_prod_lactario_fat c
					where	c.nr_prescricao = nr_prescricao_p
					and	nut_verifica_material_estoque(c.cd_material) = 'S'
					and	c.cd_material = a.cd_material)
	ORDER BY 1 DESC;

C03 CURSOR FOR
	SELECT	a.nr_seq_lote_fornec,
				a.qt_material								
	from	nut_prod_princ_lote a
	where a.nr_seq_prod_principal = nr_seq_prod_principal_w
		and a.cd_material = cd_material_w;

C04 CURSOR FOR
	SELECT 	a.nr_seq_local_estoque
	from 	nut_local_estoque a
	where 	exists ( SELECT  1
			from 	nut_local_estoque_mat b
			where 	b.nr_seq_local = a.nr_sequencia
			and 	b.cd_material = cd_material_w);		
		

BEGIN
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	
		select 	max(cd_setor_Atendimento),
			max(dt_entrada_unidade)
		into STRICT 	cd_setor_atendimento_w,
			dt_entrada_unidade_w
		from 	atend_paciente_unidade
		where 	nr_seq_interno = obter_atepacu_paciente(nr_atendimento_p, 'A');
		
		if (coalesce(cd_setor_atendimento_w::text, '') = '')then
			CALL Wheb_Mensagem_Pck.exibir_mensagem_abort(757877,'NR_ATENDIMENTO='||TO_CHAR(nr_atendimento_p));		
		end if;
		
		open C01;
		loop
		fetch C01 into			
			cd_material_w;					
		EXIT WHEN NOT FOUND; /* apply on C01 */
		begin			
		        if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
				select 	max(a.nr_seq_local_estoque)
				into STRICT	nr_seq_local_estoque_w
				from 	nut_local_estoque a
				where 	exists ( SELECT  1
						from 	nut_local_estoque_mat b
						where 	b.nr_seq_local = a.nr_sequencia
						and 	b.cd_material = cd_material_w);

				if (coalesce(nr_seq_local_estoque_w::text, '') = '')then
				
					select 	 max(ds_material)
					into STRICT     ds_material_w
					from 	 material
					where    cd_material = cd_material_w;
					
					CALL Wheb_Mensagem_Pck.exibir_mensagem_abort(757878,'DS_MATERIAL='||ds_material_w);
				end if;
			end if;			
		end;
		end loop;
		close C01;
		
		open C02;
		loop
		fetch C02 into	
			cd_material_w,
			qt_dose_w,
			cd_unidade_medida_w,
			nr_seq_prod_principal_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin		
				
				open C04;
				loop
				fetch C04 into	
					nr_local_aux_estoque_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					
						select	max(qt_estoque)
							into STRICT qt_estoque_locais_w
						from 	saldo_estoque
						where 	cd_material = cd_material_w  
						and 	cd_local_estoque = nr_local_aux_estoque_w;

						if (qt_estoque_locais_w > qt_estoque_maior_w) then
							qt_estoque_maior_w := qt_estoque_locais_w;
							nr_seq_local_estoque_w := nr_local_aux_estoque_w;
						end if;
					end;
				end loop;
				close C04;
			
				open C03;
				loop
				fetch C03 into										
					nr_seq_lote_fornec_w,
					qt_dose_w2;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
											
						SELECT 	max(fa_consistir_estoque_medic(cd_material_w,qt_dose_w2,cd_unidade_medida_w,nr_seq_local_estoque_w,wheb_usuario_pck.get_cd_estabelecimento, nr_seq_lote_fornec_w))
						into STRICT	ie_possui_estoque_w
						;
					
						if (ie_possui_estoque_w = 'N') then
							select 	 max(ds_material)
							into STRICT     ds_material_w
							from 	 material
							where    cd_material = cd_material_w;
							CALL Wheb_Mensagem_Pck.exibir_mensagem_abort(1050875,'DS_MATERIAL_W='||ds_material_w||';NR_SEQ_LOTE_W='||nr_seq_lote_fornec_w);
						end if;
						
						qt_dose_w := qt_dose_w - qt_dose_w2;
							
					end;
				end loop;
				close C03;
			
				if (qt_dose_w > 0 ) then
			
					SELECT 	max(fa_consistir_estoque_medic(cd_material_w,qt_dose_w,cd_unidade_medida_w,nr_seq_local_estoque_w,wheb_usuario_pck.get_cd_estabelecimento)) 
					into STRICT	ie_possui_estoque_w
					;
										
					if (ie_possui_estoque_w = 'N') then
						select 	 max(ds_material)
						into STRICT     ds_material_w
						from 	 material
						where    cd_material = cd_material_w;
						CALL Wheb_Mensagem_Pck.exibir_mensagem_abort(760801,'DS_MATERIAL_W='||ds_material_w);
					end if;
				end if;					
			end;
		end loop;
		close C02;
	end if;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nut_consistir_mat_conta_pac ( nr_sequencia_p bigint, nr_atendimento_p text, nr_seq_dispositivo_p bigint, nr_prescricao_p bigint) FROM PUBLIC;

