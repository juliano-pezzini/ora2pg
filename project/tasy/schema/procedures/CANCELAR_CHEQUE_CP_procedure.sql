-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancelar_cheque_cp (nr_seq_cheque_p bigint, nm_usuario_p text, dt_cancelamento_p timestamp, ds_observacao_p text, ie_estornar_baixa_tit_p text) AS $body$
DECLARE

			 
			 
/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Registrar o cancelamento do cheque e estornar a baixa gerada no título a pagar pelo cheque, se parametrizado 
-------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------- 
Pontos de atenção: 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++*/			 
 
 
nr_titulo_w		titulo_pagar.nr_titulo%type;
nr_seq_baixa_tit_w	titulo_pagar_baixa.nr_sequencia%type;
nr_seq_baixa_tit_est_w	titulo_pagar_baixa.nr_sequencia%type;
ds_observacao_w		titulo_pagar_baixa.ds_observacao%type;

c01 CURSOR FOR			 
SELECT	a.nr_titulo 
from	cheque_bordero_titulo b, 
	titulo_pagar a 
where	a.nr_titulo	= b.nr_titulo 
and	b.nr_seq_cheque	= nr_seq_cheque_p 
group by a.nr_titulo;
			

BEGIN 
 
update	cheque 
set	dt_cancelamento	= coalesce(dt_cancelamento_p,clock_timestamp()), 
	ds_observacao	= coalesce(ds_observacao_p,ds_observacao), 
	dt_atualizacao	= clock_timestamp(), 
	nm_usuario	= nm_usuario_p 
where	nr_sequencia	= nr_seq_cheque_p;
 
if (ie_estornar_baixa_tit_p = 'S') then 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select	max(a.nr_sequencia) 
		into STRICT	nr_seq_baixa_tit_w 
		from	titulo_pagar_baixa a 
		where	a.nr_titulo		= nr_titulo_w 
		and	a.nr_seq_cheque_cp	= nr_seq_cheque_p 
		and	a.ie_acao		= 'I' 
		and	not exists /*Verificar se a baixa já não foi estornada*/
	 
			(SELECT	1 
			from	titulo_pagar_baixa x 
			where	x.nr_titulo		= a.nr_titulo 
			and	x.nr_seq_baixa_origem	= a.nr_sequencia);
			 
		if (nr_seq_baixa_tit_w IS NOT NULL AND nr_seq_baixa_tit_w::text <> '') then -- Somente estornar se encontrar baixa vinculada ao cheque. OS 723559 
			CALL Estornar_tit_pagar_baixa(nr_titulo_w, nr_seq_baixa_tit_w, trunc(coalesce(dt_cancelamento_p,clock_timestamp())), nm_usuario_p,'S');
		end if;
		 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_baixa_tit_est_w 
		from	titulo_pagar_baixa 
		where	nr_titulo		= nr_titulo_w 
		and	nr_seq_baixa_origem	= nr_seq_baixa_tit_w;
 
		if (nr_seq_baixa_tit_est_w IS NOT NULL AND nr_seq_baixa_tit_est_w::text <> '') then 
			/*'Baixa gerada pelo cancelamento do cheque de sequência '||nr_seq_cheque_p*/
 
			ds_observacao_w	:= substr(wheb_mensagem_pck.get_texto(303114,'NR_SEQ_CHEQUE=' || nr_seq_cheque_p),1,255);
			update	titulo_pagar_baixa 
			set	nr_seq_cheque_cp	= nr_seq_cheque_p, 
				ds_observacao		= ds_observacao_w 
			where	nr_titulo		= nr_titulo_w 
			and	nr_sequencia		= nr_seq_baixa_tit_est_w;
		 
		end if;	
		 
		end;
	end loop;
	close C01;
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_cheque_cp (nr_seq_cheque_p bigint, nm_usuario_p text, dt_cancelamento_p timestamp, ds_observacao_p text, ie_estornar_baixa_tit_p text) FROM PUBLIC;

