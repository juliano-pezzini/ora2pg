-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tratar_json_rec_facial ( json_data_p text, ie_status_p INOUT text, ie_codigo_p INOUT text, ds_mensagem_p INOUT text, ds_token_p INOUT text, ds_url_p INOUT text, ds_erro_p INOUT text, ds_elegibilidade_p INOUT text) AS $body$
DECLARE

  json_data_w		philips_json;
  json_data_ww		philips_json;
  ie_json_valido_w	varchar(1);

BEGIN
ie_status_p := '';
ie_codigo_p := '';
ds_mensagem_p := '';
ds_token_p := '';
ds_url_p := '';
ds_erro_p := '';
ds_elegibilidade_p	:= '';

begin
	select	CASE WHEN substr(to_char(coalesce(json_data_p,'{}')),1,255)='{}' THEN  'N'  ELSE 'S' END
	into STRICT	ie_json_valido_w
	;
exception
when others then
	ie_json_valido_w := 'N';
end;
begin
	if (ie_json_valido_w = 'S') then
		JSON_DATA_W := PHILIPS_JSON(json_data_p);
		if ((json_data_w.get('dados') IS NOT NULL AND (json_data_w.get('dados'))::text <> '')) then
			json_data_ww := PHILIPS_JSON(json_data_w.get('dados'));
		end if;
		if ((json_data_w IS NOT NULL AND json_data_w::text <> '') and json_data_w.count > 0) then

			if ((json_data_w.get('status') IS NOT NULL AND (json_data_w.get('status'))::text <> ''))then
				ie_status_p := json_data_w.get['status'].get_string();
			end if;

			if ((json_data_w.get('codigo') IS NOT NULL AND (json_data_w.get('codigo'))::text <> ''))then
				ie_codigo_p := json_data_w.get['codigo'].get_number();
			end if;

			if ((json_data_w.get('mensagem') IS NOT NULL AND (json_data_w.get('mensagem'))::text <> ''))then
				ds_mensagem_p := json_data_w.get['mensagem'].get_string();
			end if;
			
			if ((json_data_w.get('erros') IS NOT NULL AND (json_data_w.get('erros'))::text <> ''))then
				ds_erro_p := json_data_w.get['erros'].get_string();
			end if;
		
			if ((json_data_ww.get('token') IS NOT NULL AND (json_data_ww.get('token'))::text <> ''))then
				ds_token_p := json_data_ww.get['token'].get_string();
			end if;

			if ((json_data_ww.get('url') IS NOT NULL AND (json_data_ww.get('url'))::text <> ''))then
				ds_url_p := json_data_ww.get['url'].get_string();
			end if;

			if ((json_data_ww.get('elegibilidade') IS NOT NULL AND (json_data_ww.get('elegibilidade'))::text <> ''))then
				ds_elegibilidade_p := json_data_ww.get['elegibilidade'].get_string();
			end if;
			
		end if;
	else
		ie_codigo_p := '3';
	end if;
exception
when others then
ie_codigo_p := '3';	
end;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tratar_json_rec_facial ( json_data_p text, ie_status_p INOUT text, ie_codigo_p INOUT text, ds_mensagem_p INOUT text, ds_token_p INOUT text, ds_url_p INOUT text, ds_erro_p INOUT text, ds_elegibilidade_p INOUT text) FROM PUBLIC;

