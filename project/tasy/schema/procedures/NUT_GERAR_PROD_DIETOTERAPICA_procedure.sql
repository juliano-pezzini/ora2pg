-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nut_gerar_prod_dietoterapica ( dt_producao_p timestamp, nr_seq_turno_p bigint, nr_seq_prod_p bigint, nr_seq_servico_p bigint default 0, nr_seq_setor_p bigint default 0) AS $body$
DECLARE


cd_material_w		nut_atend_serv_dia_dieta.cd_material%type;
dt_servico_w		timestamp;
nr_atendimento_w	nut_atend_serv_dia.nr_atendimento%type;
qt_dose_w			nut_atend_serv_dia_dieta.qt_dose%type;
nr_seq_dieta_w		nut_atend_serv_dieta.nr_sequencia%type;
nr_seq_dia_w		nut_atend_serv_dia.nr_sequencia%type;

ie_reg_anterior_w	varchar(1);
nr_sequencia_w		nut_producao_conduta_item.nr_sequencia%type;

nr_seq_adicional_ww	nut_atend_serv_dia_dieta.nr_sequencia%type;
cd_material_ww		nut_atend_serv_dia_dieta.cd_material%type;
qt_dose_ww		nut_atend_serv_dia_dieta.qt_dose%type;
qt_porcentagem_ww	nut_atend_serv_dia_dieta.qt_porcentagem%type;


c01 CURSOR FOR
	SELECT
			a.cd_material,
			b.dt_servico,
			b.nr_atendimento,
			a.qt_dose,
			a.nr_sequencia,
			b.nr_sequencia
	from 		nut_atend_serv_dia_dieta a,
			nut_atend_serv_dia b,
			nut_atend_serv_dieta c
	where		a.nr_sequencia = c.nr_seq_dieta
	and		b.nr_sequencia = c.nr_seq_servico
	and (a.ie_tipo_nutricao = 'SMP' or a.ie_tipo_nutricao = 'SNE')
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and 		b.dt_servico 	between nutr_obter_dt_inicio_prod(dt_producao_p,nr_seq_turno_p,'I') and nutr_obter_dt_inicio_prod(dt_producao_p,nr_seq_turno_p,'F')
	and		((b.nr_seq_servico = nr_seq_servico_p) or (nr_seq_servico_p = 0))
	and		((b.cd_setor_atendimento = nr_seq_setor_p) or (nr_seq_setor_p = 0))
	and		(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and not exists (SELECT	1
			from 	nut_producao_conduta_item
			where	nr_seq_serv_dia = b.nr_sequencia);

c02 CURSOR FOR
	SELECT 	nr_sequencia,
		cd_material,
		qt_dose,
		qt_porcentagem
	from  	nut_atend_serv_dia_dieta
	where 	nr_sequencia_diluicao = nr_seq_dieta_w;

c03 CURSOR FOR
	SELECT 	nr_sequencia
	from 	nut_producao_conduta_item
	where	nr_seq_prod_cond = nr_seq_prod_p;


BEGIN

if (dt_producao_p IS NOT NULL AND dt_producao_p::text <> '' AND nr_seq_turno_p IS NOT NULL AND nr_seq_turno_p::text <> '') then

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_reg_anterior_w
	from	nut_producao_conduta_item
	where	nr_seq_prod_cond = nr_seq_prod_p;

	if (ie_reg_anterior_w = 'S') then

	open c03;
	loop
	fetch c03 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
			delete FROM nut_prod_cond_item_adic where nr_seq_prod_item = nr_sequencia_w;
		end;
	end loop;
	close c03;

		delete FROM nut_producao_conduta_item where	nr_seq_prod_cond = nr_seq_prod_p;
		commit;

	end if;

open c01;
loop
fetch c01 into
		cd_material_w,
		dt_servico_w,
		nr_atendimento_w,
		qt_dose_w,
		nr_seq_dieta_w,
		nr_seq_dia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (qt_dose_w > 0 ) then

	select 	nextval('nut_producao_conduta_item_seq')
	into STRICT	nr_sequencia_w
	;

	insert into nut_producao_conduta_item(
											nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_atendimento,
											cd_material,
											nr_seq_prod_cond,
											nr_seq_dieta,
											nr_seq_serv_dia,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											qt_dose,
											dt_servico)
									values (
											nr_sequencia_w,
											clock_timestamp(),
											wheb_usuario_pck.get_nm_usuario,
											nr_atendimento_w,
											cd_material_w,
											nr_seq_prod_p,
											nr_seq_dieta_w,
											nr_seq_dia_w,
											clock_timestamp(),
											wheb_usuario_pck.get_nm_usuario,
											qt_dose_w,
											dt_servico_w);
	open c02;
	loop
	fetch c02 into
		nr_seq_adicional_ww,
		cd_material_ww,
		qt_dose_ww,
		qt_porcentagem_ww;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		if (cd_material_ww IS NOT NULL AND cd_material_ww::text <> '') then

			insert into nut_prod_cond_item_adic(
												nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												cd_material,
												nr_seq_dieta,
												nr_seq_serv_dia,
												nr_seq_prod_item,
												dt_atualizacao_nrec,
												nm_usuario_nrec,
												qt_dose,
												qt_porcentagem)
										values (
												nextval('nut_prod_cond_item_adic_seq'),
												clock_timestamp(),
												wheb_usuario_pck.get_nm_usuario,
												cd_material_ww,
												nr_seq_adicional_ww,
												nr_seq_dia_w,
												nr_sequencia_w,
												clock_timestamp(),
												wheb_usuario_pck.get_nm_usuario,
												qt_dose_ww,
												qt_porcentagem_ww);
		end if;
		end;
	end loop;
	close c02;

	end if;

	end;
end loop;
close c01;
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nut_gerar_prod_dietoterapica ( dt_producao_p timestamp, nr_seq_turno_p bigint, nr_seq_prod_p bigint, nr_seq_servico_p bigint default 0, nr_seq_setor_p bigint default 0) FROM PUBLIC;

