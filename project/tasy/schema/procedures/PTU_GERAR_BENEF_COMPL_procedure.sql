-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_benef_compl ( nr_seq_segurado_p bigint, nr_seq_beneficiario_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) is ds_endereco_w varchar(100) RETURNS varchar AS $body$
DECLARE

ds_retorno_w	varchar(255);
C01 CURSOR FOR
	SELECT	cd_intercambio
	from	pls_interc_tipo_logradouro
	where (cd_tipo_logradouro = cd_tipo_logradouro_p or coalesce(cd_tipo_logradouro::text, '') = '')
	order by coalesce(cd_tipo_logradouro,0);
BEGIN
ds_retorno_w	:= null;
for r_c01_w in C01 loop
	begin
	ds_retorno_w	:= r_c01_w.cd_intercambio;
	end;
end loop;
return	ds_retorno_w;
end;

begin

ie_utilizar_ender_empresa_w	:= coalesce(obter_valor_param_usuario(1286, 5, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');

select	cd_pessoa_fisica
into STRICT	cd_pessoa_fisica_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

select	nr_seq_empresa
into STRICT	nr_seq_empresa_w
from	ptu_intercambio_benef
where	nr_sequencia	= nr_seq_beneficiario_p;

select	count(1)
into STRICT	qt_registros_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica	= cd_pessoa_fisica_w
and	ie_tipo_complemento	= 1
and	(cd_municipio_ibge IS NOT NULL AND cd_municipio_ibge::text <> '');

if (qt_registros_w > 0) then
	begin
	open C01;
	loop
	fetch C01 into
		ie_tipo_endereco_w,
		cd_tipo_logradouro_w,
		ds_endereco_w,
		nr_endereco_w,
		cd_cep_w,
		ds_municipio_w,
		sg_estado_w,
		ds_bairro_w,
		nr_ddd_telefone_w,
		nr_telefone_w,
		nr_ramal_w,
		ds_complemento_w,
		cd_municipio_ibge_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			cd_tipo_logradouro_w	:= obter_cd_tipo_logradouro(cd_tipo_logradouro_w);
			
			ds_municipio_w	:= PTU_SOMENTE_CARACTER_PERMITIDO(Elimina_Acentuacao(ds_municipio_w),'AN');
			ds_endereco_w	:= PTU_SOMENTE_CARACTER_PERMITIDO(Elimina_Acentuacao(ds_endereco_w),'AN');
			ds_bairro_w	:= replace(ds_bairro_w,'/',' ');
			ds_bairro_w	:= Elimina_Acentuacao(ds_bairro_w);
			ds_bairro_w	:= PTU_SOMENTE_CARACTER_PERMITIDO(elimina_caractere_especial(ds_bairro_w),'AN');
			ds_complemento_w:= PTU_SOMENTE_CARACTER_PERMITIDO(elimina_caractere_especial(ds_complemento_w),'AN');
			
			begin
			insert into ptu_beneficiario_compl(nr_sequencia, nr_seq_beneficiario, ds_endereco,
				cd_cep, nm_municipio, sg_uf,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
				nm_usuario_nrec, ds_bairro, nr_ddd,
				nr_fone, nr_ramal, nr_endereco,
				ds_complemento, cd_municipio_ibge, ie_tipo_endereco,
				cd_tipo_logradouro )
			values (nextval('ptu_beneficiario_compl_seq'), nr_seq_beneficiario_p, ds_endereco_w,
				cd_cep_w, ds_municipio_w, sg_estado_w,
				clock_timestamp(), nm_usuario_p, clock_timestamp(),
				nm_usuario_p, ds_bairro_w, nr_ddd_telefone_w,
				nr_telefone_w, nr_ramal_w, nr_endereco_w,
				ds_complemento_w, cd_municipio_ibge_w, ie_tipo_endereco_w,
				cd_tipo_logradouro_w );
			exception
			when others then
				if (coalesce(cd_cep_w::text, '') = '') then
					CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Falta dados do complemento obrigatórios para o beneficiário','Beneficiário sem CEP informado.',cd_estabelecimento_p,nm_usuario_p);
				end if;
				
				if (coalesce(ds_municipio_w::text, '') = '') then
					CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Falta dados do complemento obrigatórios para o beneficiário','Beneficiário sem município informado.',cd_estabelecimento_p,nm_usuario_p);
				end if;
				
				if (coalesce(sg_estado_w::text, '') = '') then
					CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Falta dados do complemento obrigatórios para o beneficiário','Beneficiário sem estado informado.',cd_estabelecimento_p,nm_usuario_p);
				end if;
				
				if (coalesce(ds_endereco_w::text, '') = '') then
					CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Falta dados do complemento obrigatórios para o beneficiário','Beneficiário sem endereço informado.',cd_estabelecimento_p,nm_usuario_p);
				end if;
				
				CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Falta dados do complemento obrigatórios para o beneficiário',sqlerrm(SQLSTATE),cd_estabelecimento_p,nm_usuario_p);
			end;
		end;
	end loop;
	exception
	when others then
	CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Beneficiário com cadastro complementar errado',sqlerrm(SQLSTATE),cd_estabelecimento_p,nm_usuario_p);
	end;
	close C01;
elsif (qt_registros_w = 0) and (ie_utilizar_ender_empresa_w = 'S') then
	
	select	cd_tipo_logradouro,
		substr(ds_endereco,1,40),
		nr_endereco,
		substr(cd_cep,1,8),
		substr(obter_desc_municipio_ibge(substr(cd_municipio_ibge,1,6)),1,30),
		substr(sg_uf,1,2),
		substr(ds_bairro,1,30),
		substr(nr_ddd,1,4),
		somente_numero(substr(nr_telefone,1,9)),
		cd_municipio_ibge,
		ds_complemento
	into STRICT	cd_tipo_logradouro_w,
		ds_endereco_w,
		nr_endereco_w,
		cd_cep_w,
		ds_municipio_w,
		sg_estado_w,
		ds_bairro_w,
		nr_ddd_telefone_w,
		nr_telefone_w,
		cd_municipio_ibge_w,
		ds_complemento_w
	from	ptu_intercambio_empresa
	where	nr_sequencia	= nr_seq_empresa_w;
	
	cd_tipo_logradouro_w	:= obter_cd_tipo_logradouro(cd_tipo_logradouro_w);
	
	ds_municipio_w	:= PTU_SOMENTE_CARACTER_PERMITIDO(Elimina_Acentuacao(ds_municipio_w),'AN');
	ds_endereco_w	:= PTU_SOMENTE_CARACTER_PERMITIDO(Elimina_Acentuacao(ds_endereco_w),'AN');
	ds_bairro_w	:= PTU_SOMENTE_CARACTER_PERMITIDO(replace(ds_bairro_w,'/',' '),'AN');
	ds_bairro_w	:= Elimina_Acentuacao(ds_bairro_w);
	ds_bairro_w	:= PTU_SOMENTE_CARACTER_PERMITIDO(elimina_caractere_especial(ds_bairro_w),'AN');
	ds_complemento_w:= PTU_SOMENTE_CARACTER_PERMITIDO(elimina_caractere_especial(ds_complemento_w),'AN');
	
	begin
	insert into ptu_beneficiario_compl(nr_sequencia, nr_seq_beneficiario, ds_endereco,
		cd_cep, nm_municipio, sg_uf,
		dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
		nm_usuario_nrec, ds_bairro, nr_ddd, 
		nr_fone, nr_ramal, nr_endereco,
		ie_tipo_endereco, cd_municipio_ibge, ds_complemento,
		cd_tipo_logradouro )
	values (nextval('ptu_beneficiario_compl_seq'), nr_seq_beneficiario_p, ds_endereco_w,
		cd_cep_w, ds_municipio_w, sg_estado_w,
		clock_timestamp(), nm_usuario_p, clock_timestamp(),
		nm_usuario_p, ds_bairro_w, nr_ddd_telefone_w,
		nr_telefone_w, nr_ramal_w, nr_endereco_w,
		2, cd_municipio_ibge_w, ds_complemento_w,
		cd_tipo_logradouro_w );
	exception
	when others then
		if (coalesce(cd_cep_w::text, '') = '') then
			CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Falta dados do complemento obrigatórios para o beneficiário','Beneficiário sem CEP informado.',cd_estabelecimento_p,nm_usuario_p);
		end if;
		
		if (coalesce(ds_municipio_w::text, '') = '') then
			CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Falta dados do complemento obrigatórios para o beneficiário','Beneficiário sem município informado.',cd_estabelecimento_p,nm_usuario_p);
		end if;
		
		if (coalesce(sg_estado_w::text, '') = '') then
			CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Falta dados do complemento obrigatórios para o beneficiário','Beneficiário sem estado informado.',cd_estabelecimento_p,nm_usuario_p);
		end if;
		
		if (coalesce(ds_endereco_w::text, '') = '') then
			CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Falta dados do complemento obrigatórios para o beneficiário','Beneficiário sem endereço informado.',cd_estabelecimento_p,nm_usuario_p);
		end if;
		
		CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Falta dados do complemento obrigatórios para o beneficiário',sqlerrm(SQLSTATE),cd_estabelecimento_p,nm_usuario_p);
	
		CALL ptu_gravar_incon_benef_envio(nr_seq_beneficiario_p,null,'Faltam dados para os dados complementar da empresa do beneficiário',sqlerrm(SQLSTATE),cd_estabelecimento_p,nm_usuario_p);
	end;
end if;

--Informações de contato - Telefone residencial
begin
select	nr_ddd_telefone,
	somente_numero(substr(nr_telefone,1,9))

into STRICT	nr_ddd_telefone_w,
	nr_telefone_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w
and	ie_tipo_complemento = 1;
exception
when others then
	nr_ddd_telefone_w	:= null;
	nr_telefone_w		:= null;
end;

if (nr_ddd_telefone_w IS NOT NULL AND nr_ddd_telefone_w::text <> '') and (nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') then
	insert	into	ptu_beneficiario_contato(	nr_sequencia, nr_seq_beneficiario, ie_tipo_contato,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ie_tipo_telefone, nr_ddd, nr_telefone)
		values (	nextval('ptu_beneficiario_contato_seq'), nr_seq_beneficiario_p, 'T',
			clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
			'1', nr_ddd_telefone_w, nr_telefone_w);
end if;

--Informações de contato - Telefone profissional
begin
select	nr_ddd_telefone,
	somente_numero(substr(nr_telefone,1,9))

into STRICT	nr_ddd_telefone_w,
	nr_telefone_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w
and	ie_tipo_complemento = 2;
exception
when others then
	nr_ddd_telefone_w	:= null;
	nr_telefone_w		:= null;
end;

if (nr_ddd_telefone_w IS NOT NULL AND nr_ddd_telefone_w::text <> '') and (nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') then
	insert	into	ptu_beneficiario_contato(	nr_sequencia, nr_seq_beneficiario, ie_tipo_contato,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ie_tipo_telefone, nr_ddd, nr_telefone)
		values (	nextval('ptu_beneficiario_contato_seq'), nr_seq_beneficiario_p, 'T',
			clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
			'2', nr_ddd_telefone_w, nr_telefone_w);
end if;

--Informações de contato - Celular
begin
select	nr_ddd_celular,
	somente_numero(substr(nr_telefone_celular,1,9))
into STRICT	nr_ddd_celular_w,
	nr_telefone_celular_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w;
exception
when others then
	nr_ddd_celular_w	:= null;
	nr_telefone_celular_w	:= null;
end;

if (nr_ddd_celular_w IS NOT NULL AND nr_ddd_celular_w::text <> '') and (nr_telefone_celular_w IS NOT NULL AND nr_telefone_celular_w::text <> '') then
	insert	into	ptu_beneficiario_contato(	nr_sequencia, nr_seq_beneficiario, ie_tipo_contato,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ie_tipo_telefone, nr_ddd, nr_telefone)
		values (	nextval('ptu_beneficiario_contato_seq'), nr_seq_beneficiario_p, 'T',
			clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
			'3', nr_ddd_celular_w, nr_telefone_celular_w);
end if;

--Informações de contato - E-mail principal
begin
select	ds_email
into STRICT	ds_email_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w
and	ie_tipo_complemento = 1;
exception
when others then
	ds_email_w	:= null;
end;

if (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then
	insert	into	ptu_beneficiario_contato(	nr_sequencia, nr_seq_beneficiario, ie_tipo_contato,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ie_tipo_email, ds_email)
		values (	nextval('ptu_beneficiario_contato_seq'), nr_seq_beneficiario_p, 'E',
			clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
			'1', ds_email_w);
end if;

--Informações de contato - E-mail alternativo
begin
select	ds_email
into STRICT	ds_email_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w
and	ie_tipo_complemento = 2;
exception
when others then
	ds_email_w	:= null;
end;

if (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then
	insert	into	ptu_beneficiario_contato(	nr_sequencia, nr_seq_beneficiario, ie_tipo_contato,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ie_tipo_email, ds_email)
		values (	nextval('ptu_beneficiario_contato_seq'), nr_seq_beneficiario_p, 'E',
			clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
			'2', ds_email_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_benef_compl ( nr_seq_segurado_p bigint, nr_seq_beneficiario_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) is ds_endereco_w varchar(100) FROM PUBLIC;

