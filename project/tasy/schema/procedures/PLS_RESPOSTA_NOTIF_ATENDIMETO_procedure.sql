-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_resposta_notif_atendimeto ( nr_seq_auditoria_p bigint, nr_seq_notificacao_p bigint, ds_historico_notif_p text, ie_status_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_guia_w			bigint;
nr_seq_requisicao_w		bigint;
nr_seq_notificacao_w		bigint;
ie_status_w			varchar(3);
dt_liberacao_w			timestamp;
qt_atend_evento_w		bigint;
nr_seq_auditoria_w		pls_notificacao_atend.nr_seq_auditoria%type;
nr_seq_auditoria_ww		pls_notificacao_atend.nr_seq_auditoria%type;


BEGIN
select 	max(nr_seq_auditoria)
into STRICT	nr_seq_auditoria_w
from	pls_notificacao_atend
where	nr_sequencia	= nr_seq_notificacao_p;

if (coalesce(nr_seq_auditoria_p::text, '') = '') then
	nr_seq_auditoria_ww	:= nr_seq_auditoria_w;
else
	nr_seq_auditoria_ww	:= nr_seq_auditoria_p;
end if;

if (coalesce(nr_seq_notificacao_p,0) > 0) then
	nr_seq_notificacao_w := nr_seq_notificacao_p;
else
	select	max(nr_sequencia)
	into STRICT	nr_seq_notificacao_w
	from	pls_notificacao_atend
	where	nr_seq_auditoria 	= nr_seq_auditoria_ww;
end if;

update	pls_notificacao_atend
set	ie_status 	= ie_status_p,
	dt_atualizacao	= clock_timestamp(),
	dt_fim_solicitacao = clock_timestamp(),
	nm_usuario	= nm_usuario_p
where	nr_sequencia	= nr_seq_notificacao_w;

if (nr_seq_auditoria_ww IS NOT NULL AND nr_seq_auditoria_ww::text <> '') then
	select	ie_status,
		dt_liberacao
	into STRICT	ie_status_w,
		dt_liberacao_w
	from	pls_auditoria
	where	nr_sequencia = nr_seq_auditoria_ww;

	if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
		update	pls_auditoria
		set	ie_status	= 'F',
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where 	nr_sequencia 	= nr_seq_auditoria_ww;

		ie_status_w	:= 'F';
	end if;

	if (ie_status_w not in ('F','C')) then
		update	pls_auditoria
		set	ie_status	= 'A',
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where 	nr_sequencia 	= nr_seq_auditoria_ww;
	end if;

	begin
	select	coalesce(nr_seq_guia,0),
		coalesce(nr_seq_requisicao,0)
	into STRICT	nr_seq_guia_w,
		nr_seq_requisicao_w
	from	pls_auditoria
	where	nr_sequencia	= nr_seq_auditoria_ww;
	exception
	when others then
		nr_seq_guia_w		:= 0;
		nr_seq_requisicao_w	:= 0;
	end;
end if;

if (nr_seq_guia_w	<> 0) then
	insert	into pls_guia_plano_historico(nr_sequencia, nr_seq_guia, dt_historico,
		 dt_atualizacao, nm_usuario, ds_observacao,
		 ie_origem_historico, ie_tipo_historico)
	values (nextval('pls_guia_plano_historico_seq'), nr_seq_guia_w, clock_timestamp(),
		 clock_timestamp(), nm_usuario_p, ds_historico_notif_p,
		 'M', 'NR');
elsif (nr_seq_requisicao_w	<> 0) then
	insert	into pls_requisicao_historico(nr_sequencia, nr_seq_requisicao, ie_tipo_historico,
		 ds_historico, dt_atualizacao, nm_usuario,
		 dt_historico, ie_origem_historico)
	values (nextval('pls_requisicao_historico_seq'), nr_seq_requisicao_w, 'NR',
		 ds_historico_notif_p, clock_timestamp(), nm_usuario_p,
		 clock_timestamp(), 'M');
end if;

CALL pls_grava_historico_notific(nr_seq_notificacao_w,ds_historico_notif_p,null,null,nm_usuario_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_resposta_notif_atendimeto ( nr_seq_auditoria_p bigint, nr_seq_notificacao_p bigint, ds_historico_notif_p text, ie_status_p text, nm_usuario_p text) FROM PUBLIC;

