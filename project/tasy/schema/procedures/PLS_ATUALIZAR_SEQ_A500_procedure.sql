-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_seq_a500 ( nr_seq_pls_fatura_p pls_fatura.nr_sequencia%type, ie_commit_p text) AS $body$
DECLARE


nr_seq_ptu_fatura_w			ptu_fatura.nr_sequencia%type;
qt_seq_a500_w				integer := 0;
qt_nota_hospitalar_w			integer := 0;
qt_nota_complemento_w			integer := 0;
qt_nota_fiscal_w			integer := 0;
nr_seq_a500_w				integer := 0;

-- Ler as cobranças PTU (A502)
c01 CURSOR( nr_seq_ptu_fatura_pc		ptu_fatura.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_nota_cobr
	from	ptu_nota_cobranca	c
	where	nr_seq_fatura	= nr_seq_ptu_fatura_pc;

-- Ler os serviços PTU (A504)
c02 CURSOR( nr_seq_nota_cobr_pc		ptu_nota_cobranca.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_nota_serv
	from	ptu_nota_servico	s
	where	nr_seq_nota_cobr	= nr_seq_nota_cobr_pc;
BEGIN
-- Obter a fatura PTU
select	max(nr_sequencia)
into STRICT	nr_seq_ptu_fatura_w
from	ptu_fatura
where	nr_seq_pls_fatura	= nr_seq_pls_fatura_p;

if (nr_seq_ptu_fatura_w IS NOT NULL AND nr_seq_ptu_fatura_w::text <> '') then

	-- Contar se existe Seq A500 informado na base para aquela fatura PTU
	select	count(1)
	into STRICT	qt_seq_a500_w
	from	ptu_nota_cobranca	c,
		ptu_nota_servico	s
	where	c.nr_sequencia	= s.nr_seq_nota_cobr
	and	(s.nr_seq_a500 IS NOT NULL AND s.nr_seq_a500::text <> '')
	and	c.nr_seq_fatura	= nr_seq_ptu_fatura_w;

	if (qt_seq_a500_w = 0) then
		-- Linha fatura (A501)
		nr_seq_a500_w := 1;

		for r_c01_w in c01( nr_seq_ptu_fatura_w ) loop
			-- Linha cobrança (A502)
			nr_seq_a500_w := nr_seq_a500_w + 1;

			-- Contar as notas hospitalares
			select	count(1)
			into STRICT	qt_nota_hospitalar_w
			from	ptu_nota_hospitalar
			where	nr_seq_nota_cobr	= r_c01_w.nr_seq_nota_cobr;

			-- Linha hospitalar (A503)
			nr_seq_a500_w := nr_seq_a500_w + qt_nota_hospitalar_w;

			for r_c02_w in c02( r_c01_w.nr_seq_nota_cobr ) loop
				-- Linha serviço (A504)
				nr_seq_a500_w := nr_seq_a500_w + 1;

				update	ptu_nota_servico
				set	nr_seq_a500	= nr_seq_a500_w
				where	nr_sequencia	= r_c02_w.nr_seq_nota_serv;
			end loop;

			-- Contas as notas complementares
			select	count(1)
			into STRICT	qt_nota_complemento_w
			from	ptu_nota_complemento
			where	nr_seq_nota_cobr	= r_c01_w.nr_seq_nota_cobr;

			-- Linha complemento (A505)
			nr_seq_a500_w := nr_seq_a500_w + qt_nota_complemento_w;

			-- Contas as notas fiscais
			select	count(1)
			into STRICT	qt_nota_fiscal_w
			from	ptu_nota_fiscal
			where	nr_seq_nota_cobr	= r_c01_w.nr_seq_nota_cobr;

			-- Linha fiscal (A506)
			nr_seq_a500_w := nr_seq_a500_w + qt_nota_fiscal_w;
		end loop;

		if (coalesce(ie_commit_p,'N') = 'S') then
			commit;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_seq_a500 ( nr_seq_pls_fatura_p pls_fatura.nr_sequencia%type, ie_commit_p text) FROM PUBLIC;

