-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_enviar_sms ( ds_remetente_p text, ds_destinatario_p text, ds_mensagem_p text, nr_seq_ageint_p bigint, dt_agenda_p timestamp, cd_agenda_p bigint, Cd_Estabelecimento_P bigint, Nm_Usuario_P text, agendamento_coletivo_p text default 'N') AS $body$
DECLARE

				
nr_sequencia_w			bigint;
id_sms_w				bigint;

nr_seq_agenda_w			agenda_consulta.nr_sequencia%type;
cd_agenda_w				bigint;
ie_tipo_agendamento_w	varchar(15);
ie_confirm_sms_w		varchar(1);
cd_tipo_agenda_w	bigint;
ie_agendamento_coletivo_w	varchar(1):= 'N';
nr_telefone_w			varchar(255);
cd_pessoa_fisica_w		varchar(10);
ds_destinatario_w varchar(40);

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.cd_agenda,
		a.ie_tipo_agendamento
	from	agenda_integrada_item a,
		agenda_paciente b
	where	a.nr_seq_agenda_exame	= b.nr_sequencia
	and	a.nr_seq_agenda_int	= nr_seq_ageint_p
	and	b.ie_status_Agenda	<> 'C'
	
union all

	SELECT	b.nr_sequencia,
		b.cd_agenda,
		a.ie_tipo_agendamento
	from	agenda_integrada_item a,
		agenda_consulta b
	where	a.nr_seq_agenda_cons	= b.nr_sequencia
	and	a.nr_seq_agenda_int	= nr_seq_ageint_p
	and	b.ie_status_Agenda	<> 'C';
	
c02 CURSOR FOR
	SELECT 	distinct cd_pessoa_fisica,
		nr_telefone
	from 	agendamento_coletivo 
	where 	nr_seq_ag_integrada = nr_seq_ageint_p;


BEGIN

 if agendamento_coletivo_p = 'S' then
 ds_destinatario_w := 'S';
else
  ds_destinatario_w := ds_destinatario_p;
end if;

if (ds_remetente_p IS NOT NULL AND ds_remetente_p::text <> '') and (ds_destinatario_w IS NOT NULL AND ds_destinatario_w::text <> '') and (ds_mensagem_p IS NOT NULL AND ds_mensagem_p::text <> '') and
	--(nr_seq_ageint_p is not null) and
	(nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	ie_confirm_sms_w	:= Obter_Valor_Param_Usuario(869, 193, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

	if (agendamento_coletivo_p = 'S') then 		
		open c02;
		loop
		fetch c02 into	
			cd_pessoa_fisica_w,
			nr_telefone_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
				id_sms_w := wheb_sms.enviar_sms(ds_remetente_p, nr_telefone_w, ds_mensagem_p, nm_usuario_p, id_sms_w);				
			end;
		end loop;
		close c02;		
	else

		id_sms_w := wheb_sms.enviar_sms(ds_remetente_p, ds_destinatario_p, ds_mensagem_p, nm_usuario_p, id_sms_w);
	end if;

	if (nr_seq_ageint_p IS NOT NULL AND nr_seq_ageint_p::text <> '') then
		open C01;
		loop
		fetch C01 into	
			nr_seq_agenda_w,
			cd_agenda_w,
			ie_tipo_agendamento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			if (ie_confirm_sms_w	= 'S') then
				CALL Ageint_Alterar_Status_Agendas(cd_Agenda_w, nr_seq_Agenda_w, 'AC', null, '', 'N', ie_tipo_agendamento_w, nm_usuario_p);
			end if;
			
			select	nextval('log_envio_sms_seq')
			into STRICT	nr_sequencia_w
			;

			insert into log_envio_sms(
				nr_sequencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,	
				dt_atualizacao,
				nm_usuario,
				dt_envio,
				cd_agenda,
				nr_seq_agenda,
				nr_telefone,
				ds_mensagem,
				id_sms,
				nr_seq_ageint)
			values (
				nr_sequencia_w,
				clock_timestamp(), 
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				cd_agenda_w,
				nr_seq_agenda_w,
				ds_destinatario_p,
				ds_mensagem_p,
				id_sms_w,
				nr_seq_ageint_p);
			end;
		end loop;
		close C01;
	else
		select	max(cd_tipo_agenda)
		into STRICT	cd_tipo_agenda_w
		from	agenda
		where	cd_agenda = cd_agenda_p;
		
		if (cd_tipo_agenda_w = 2) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_agenda_w
			from	agenda_paciente
			where	cd_agenda = cd_agenda_p
			and	hr_inicio = dt_agenda_p;
			
			ie_tipo_agendamento_w	:= 'E';
		else
			select	max(nr_sequencia)
			into STRICT	nr_seq_agenda_w
			from	agenda_consulta
			where	cd_agenda = cd_agenda_p
			and	dt_agenda = dt_agenda_p;
			
			ie_tipo_agendamento_w	:= 'C';
		end if;
		
		(if (nr_seq_agenda_w) IS NOT NULL AND (if (nr_seq_agenda_w))::text <> '') then
		
			if (ie_confirm_sms_w	= 'S') then
				CALL Ageint_Alterar_Status_Agendas(cd_agenda_p, nr_seq_Agenda_w, 'AC', null, '', 'N', ie_tipo_agendamento_w, nm_usuario_p);
			end if;
		
			select	nextval('log_envio_sms_seq')
			into STRICT	nr_sequencia_w
			;
			
			insert into log_envio_sms(
				nr_sequencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,	
				dt_atualizacao,
				nm_usuario,
				dt_envio,
				cd_agenda,
				nr_seq_agenda,
				nr_telefone,
				ds_mensagem,
				id_sms,
				nr_seq_ageint)
			values (
				nr_sequencia_w,
				clock_timestamp(), 
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				cd_agenda_p,
				nr_seq_agenda_w,
				ds_destinatario_p,
				ds_mensagem_p,
				id_sms_w,
				nr_seq_ageint_p);	
		
		end if;
		
	end if;
end if;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_enviar_sms ( ds_remetente_p text, ds_destinatario_p text, ds_mensagem_p text, nr_seq_ageint_p bigint, dt_agenda_p timestamp, cd_agenda_p bigint, Cd_Estabelecimento_P bigint, Nm_Usuario_P text, agendamento_coletivo_p text default 'N') FROM PUBLIC;

