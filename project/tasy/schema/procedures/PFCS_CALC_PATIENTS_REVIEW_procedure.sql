-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calc_patients_review ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text ) AS $body$
DECLARE


ie_active_w 							      varchar(1) := '1';
ie_telemetria 						      varchar(5) := 'S';
ie_rec_status 						      varchar(5) := 'S';
ie_started_status					      varchar(5) := 'S';
nr_red_alarm_count				      bigint := 0;
nr_yellow_alarm_count			      bigint := 0;
device_type 							      varchar(10) := 'TL';
battery_status 						      varchar(10);
pfcs_flag_settings 		          smallint := 0;
ds_pat									        varchar(15) := 'Patient';
ds_prac									        varchar(15) := 'Practitioner';
ds_tele_req_status				      varchar(15) := 'R';
ds_active_status_w				      varchar(15) := 'ACTIVE';
ds_inactive_status				      varchar(15) := 'INACTIVE';
ds_planned_status					      varchar(15) := 'PLANNED';
ds_arrived_status					      varchar(15) := 'ARRIVED';
ds_monitor_dev_type 			      varchar(10) := 'Monitor';
ds_red_battery_alert_code				varchar(15) := 'A0401';
ds_yellow_battery_alert_code		varchar(15) := 'A0402';
ds_service_completed_w					varchar(10) := 'E0404';
ds_service_status_w						  varchar(15) := 'COMPLETED';
cd_attending_role						    varchar(20) := '405279007';
ds_department_code 						  varchar(15) := 'Department';
ds_room_bed_code						    varchar(10) := 'Room-Bed';
qt_time_telemetry_rule_w				pfcs_telemetry_config.qt_time_on_tele__rule%type;
qt_time_alarms_rule_w					  pfcs_telemetry_config.qt_time_alarm_trend_rule%type;
qt_total_w								      bigint := 0;
pfcs_panel_detail_seq_w					pfcs_panel_detail.nr_sequencia%type;
nr_seq_panel_w							    pfcs_panel.nr_sequencia%type;

cur_get_tot_tele_unit CURSOR FOR
	SELECT	loc.ds_department,
			count(1) qt_unit
	  from	pfcs_service_request sr,
			pfcs_encounter enc,
			pfcs_patient pat,
			pfcs_encounter_identifier eid,
			pfcs_device pd,
			pfcs_organization org,
			pfcs_encounter_location el,
			pfcs_location loc
	where 	sr.si_status = 'COMPLETED'
	  and	sr.cd_service = 'E0404'
	  and	sr.nr_seq_encounter = enc.nr_sequencia
	  and	enc.si_status in ('PLANNED', 'ARRIVED')
	  and	eid.nr_seq_encounter = enc.nr_sequencia
	  and	enc.nr_seq_patient = pat.nr_sequencia
	  and	pat.ie_active = '1'
	  and	pat.nr_seq_organization = org.nr_sequencia
	  and	org.cd_estabelecimento = (cd_estabelecimento_p)::numeric
	  and	pat.nr_sequencia = pd.nr_seq_patient
	  and	pd.si_status = 'ACTIVE'
	  and	pd.ds_device_type = 'Monitor'
	  and	el.nr_seq_encounter = enc.nr_sequencia
	  and	el.nr_seq_location = loc.nr_sequencia
	  and	pfcs_get_tele_time(pd.nr_sequencia, 'S') > (qt_time_telemetry_rule_w * 60)
	group by loc.ds_department;

cur_get_tot_tele_pfcs CURSOR(ds_department_p text) FOR
	SELECT eid.ds_value nr_encounter,
		pat.patient_id id_patient,
		pfcs_get_human_name(enc.nr_seq_patient, ds_pat) nm_patient,
		pfcs_get_tele_time(pd.nr_sequencia, 'S') dt_recommendation_time,
		enc.ds_reason ds_diagnosis,
		pat.birthdate dt_dob,
		trunc(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)/12) qt_idade_paciente,
		pat.gender ds_gender,
		enc.ds_classification ds_classification,
		enc.period_start dt_entrance,
		pfcs_get_human_name(pfcs_get_practitioner_seq(enc.nr_sequencia, cd_attending_role), ds_prac) ds_attending_physician,
		pfcs_get_code_status_tl(pat.nr_sequencia,'S') ds_dnr_status,
		pfcs_get_location(enc.nr_sequencia, ds_department_code) ds_department,
		pfcs_get_location(enc.nr_sequencia, ds_room_bed_code) ds_bed,
		pd.ds_device_name ds_equipamento,
		pd.id_device cd_equipamento,
		pfcs_get_alarms_count(pat.nr_sequencia, ds_yellow_battery_alert_code, qt_time_alarms_rule_w) nr_yellow_alarm_count,
		pfcs_get_alarms_count(pat.nr_sequencia, ds_red_battery_alert_code, qt_time_alarms_rule_w) nr_red_alarm_count,
		pfcs_get_battery_status(pat.nr_sequencia) battery_status,
		pfcs_get_edi_score(enc.nr_sequencia) as nr_edi_score,
		pfcs_get_alarms_trends(pat.nr_sequencia, enc.nr_sequencia, 'TREND') ds_alarms_trends
	from	pfcs_service_request sr,
			pfcs_encounter enc,
			pfcs_patient pat,
			pfcs_encounter_identifier eid,
			pfcs_device pd,
			pfcs_organization org,
			pfcs_encounter_location el,
			pfcs_location loc
	where 	sr.si_status = ds_service_status_w
    and sr.cd_service = ds_service_completed_w
	and sr.nr_seq_encounter = enc.nr_sequencia
	and enc.si_status in (ds_planned_status, ds_arrived_status)
	and eid.nr_seq_encounter = enc.nr_sequencia
	and enc.nr_seq_patient = pat.nr_sequencia
	and pat.ie_active = ie_active_w
	and pat.nr_seq_organization = org.nr_sequencia
	and org.cd_estabelecimento = (cd_estabelecimento_p)::numeric
	and pat.nr_sequencia = pd.nr_seq_patient
	and pd.si_status = ds_active_status_w
	and pd.ds_device_type = ds_monitor_dev_type
	and el.nr_seq_encounter = enc.nr_sequencia
	and el.nr_seq_location = loc.nr_sequencia
	and	loc.ds_department = ds_department_p
	and pfcs_get_tele_time(pd.nr_sequencia, 'S') > (qt_time_telemetry_rule_w * 60);
BEGIN
-- Get hours configurable from telemetry settings
	select	qt_time_on_tele__rule,
			qt_time_alarm_trend_rule
	into STRICT	qt_time_telemetry_rule_w,
			qt_time_alarms_rule_w
	from	pfcs_telemetry_config;

	for r_c01 in cur_get_tot_tele_unit loop
	begin
		for r_c02 in cur_get_tot_tele_pfcs(r_c01.ds_department) loop
		begin
			select nextval('pfcs_panel_detail_seq') into STRICT pfcs_panel_detail_seq_w;

			CALL pfcs_pck_v2.pfcs_insert_details(
					nr_seq_indicator_p => nr_seq_indicator_p,
					nr_seq_operational_level_p	=> (cd_estabelecimento_p)::numeric ,
					nm_usuario_p => nm_usuario_p,
					nr_panel_detail_seq_p => pfcs_panel_detail_seq_w,
					nr_encounter_p => r_c02.nr_encounter,
					id_patient_p => r_c02.id_patient,
					nm_patient_p => r_c02.nm_patient,
					dt_birthdate_p => r_c02.dt_dob,
					ds_primary_diagnosis_p => r_c02.ds_diagnosis,
					ds_gender_p => r_c02.ds_gender,
					ds_dnr_status_p => r_c02.ds_dnr_status,
					qt_time_telemetry_p => r_c02.dt_recommendation_time,
					ds_classification_p => r_c02.ds_classification,
					dt_entrance_p => r_c02.dt_entrance,
					ds_service_line_p => r_c02.ds_attending_physician,
					cd_department_p => r_c02.ds_department,
					ds_department_p => r_c02.ds_department,
					ds_bed_location_p => r_c02.ds_bed,
					qt_red_alarms_p => r_c02.nr_red_alarm_count,
					qt_yellow_alarms_p => r_c02.nr_yellow_alarm_count,
					cd_equipamento_p => r_c02.cd_equipamento,
					ds_device_p => r_c02.ds_equipamento,
					ds_battery_status_p => r_c02.battery_status,
					ds_age_range_p => r_c02.qt_idade_paciente,
					ds_alarms_trends_p => r_c02.ds_alarms_trends,
					nr_edi_score_p =>r_c02.nr_edi_score);
		end;
		end loop;
	
		 := pfcs_pck_v2.pfcs_generate_results(
				vl_indicator_p => r_c01.qt_unit, ds_reference_value_p => r_c01.ds_department, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => (cd_estabelecimento_p)::numeric , nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);
	end;
	end loop;

    commit;

	CALL pfcs_pck_v2.pfcs_update_detail(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => (cd_estabelecimento_p)::numeric ,
		nm_usuario_p => nm_usuario_p );

	CALL pfcs_pck_v2.pfcs_activate_records(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_operational_level_p => (cd_estabelecimento_p)::numeric ,
		nm_usuario_p => nm_usuario_p );

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calc_patients_review ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text ) FROM PUBLIC;

