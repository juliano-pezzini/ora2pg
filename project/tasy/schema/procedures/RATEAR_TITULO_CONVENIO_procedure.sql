-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ratear_titulo_convenio (nr_seq_retorno_p bigint, nr_titulo_p bigint, nr_seq_cobranca_p bigint, nm_usuario_p text, ie_acao_p text) AS $body$
DECLARE

/*	NÃO DAR COMMIT NESTA PROCEDURE */
 
 
/* ie_acao_p 
I - Inclusão 
E - Estorno 
*/
 
 
vl_desconto_w		double precision	:= 0;
vl_juros_W		double precision	:= 0;
vl_guia_w		double precision	:= 0;
vl_total_w		double precision	:= 0;
vl_total_desc_w		double precision	:= 0;
vl_total_juros_w	double precision	:= 0;
vl_desc_item_w		double precision	:= 0;
vl_juros_item_w		double precision	:= 0;
nr_seq_prot_tit_w	bigint	:= -1;
nr_interno_conta_tit_w	bigint	:= -1;
nr_documento_w		numeric(22)	:= -1;
nr_seq_ret_item_w	bigint	:= -1;
vl_multa_item_w		double precision	:= 0;
vl_total_multa_w	double precision	:= 0;
vl_multa_w		double precision	:= 0;
vl_nota_credito_w	double precision	:= 0;
vl_nc_item_w		double precision	:= 0;
vl_total_nc_w		double precision	:= 0;
nr_titulo_w		bigint;

/* ahoffelder - 20/05/2010 - títulos do retorno - 
  coloquei este cursor para o rateio feito pelo Retorno Convênio (bt direito Ratear notas de crédito para as guias) */
 
c01 CURSOR FOR 
SELECT	distinct 
	coalesce(a.nr_titulo,(obter_titulo_conta_guia(a.nr_interno_conta,a.cd_autorizacao,a.nr_seq_retorno,null))::numeric ) nr_titulo 
from	convenio_retorno_item a 
where	a.nr_seq_retorno	= nr_seq_retorno_p 
and (coalesce(nr_titulo_p::text, '') = '' or nr_titulo_p = 
			coalesce(a.nr_titulo,(obter_titulo_conta_guia(a.nr_interno_conta,a.cd_autorizacao,a.nr_seq_retorno,null))::numeric ));

/* guias do título */
 
c02 CURSOR FOR 
SELECT	coalesce(obter_saldo_conpaci(b.nr_interno_conta,a.cd_autorizacao),0), 
	a.nr_sequencia 
from	conta_paciente_guia b, 
	convenio_retorno_item a 
where	coalesce(a.cd_autorizacao,'Não Informada') = coalesce(b.cd_autorizacao,'Não Informada') 
and	a.nr_interno_conta	= b.nr_interno_conta 
and	a.nr_seq_retorno	= nr_seq_retorno_p 
and	coalesce(a.nr_titulo,(obter_titulo_conta_guia(a.nr_interno_conta,a.cd_autorizacao,a.nr_seq_retorno,null))::numeric )	= nr_titulo_w 
order by	a.vl_guia;


BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
 
	select	max(a.nr_seq_protocolo), 
		max(a.nr_interno_conta), 
		max(a.nr_documento) 
	into STRICT	nr_seq_prot_tit_w, 
		nr_interno_conta_tit_w, 
		nr_documento_w 
	from	titulo_receber a 
	where	a.nr_titulo	= nr_titulo_w;
 
	/* soma dos saldos das guias do título */
 
	select	coalesce(sum(coalesce(vl_guia,0)),0) 
	into STRICT	vl_total_w 
	from (SELECT	b.cd_autorizacao, 
			a.nr_interno_conta, 
			coalesce(obter_saldo_conpaci(b.nr_interno_conta,a.cd_autorizacao),0) vl_guia 
		from	conta_paciente_guia a, 
			conta_paciente b 
		where	a.nr_interno_conta	= b.nr_interno_conta 
		and	b.nr_seq_protocolo	= nr_seq_prot_tit_w 
		
union
 
		SELECT	b.cd_autorizacao, 
			a.nr_interno_conta, 
			coalesce(obter_saldo_conpaci(b.nr_interno_conta,a.cd_autorizacao),0) vl_guia 
		from	conta_paciente b, 
			conta_paciente_guia a 
		where	a.nr_interno_conta	= b.nr_interno_conta 
		and	a.nr_interno_conta	= nr_interno_conta_tit_w 
		and	coalesce(nr_seq_prot_tit_w,-1) <> -1 
		and	to_char(a.nr_interno_conta)	= coalesce(nr_documento_w,to_char(nr_interno_conta_tit_w)) 
		
union
 
		select	b.cd_autorizacao, 
			a.nr_interno_conta, 
			coalesce(obter_saldo_conpaci(b.nr_interno_conta,a.cd_autorizacao),0) vl_guia 
		from	conta_paciente b, 
			conta_paciente_guia a 
		where	a.nr_interno_conta	= b.nr_interno_conta 
		and	a.nr_interno_conta	= nr_interno_conta_tit_w 
		and	a.cd_autorizacao	= to_char(nr_documento_w) 
		and	coalesce(nr_seq_prot_tit_w,-1) <> -1 
		and	a.cd_autorizacao	<> to_char(nr_interno_conta_tit_w) 
		
union
 
		select	b.cd_autorizacao, 
			a.nr_interno_conta, 
			coalesce(obter_saldo_conpaci(b.nr_interno_conta,a.cd_autorizacao),0) vl_guia 
		from	conta_paciente_guia a, 
			conta_paciente b 
		where	b.nr_interno_conta		= nr_interno_conta_tit_w 
		and	b.nr_interno_conta		= a.nr_interno_conta 
		and	coalesce(nr_seq_prot_tit_w,-1) 	= -1) alias19;
 
	if (coalesce(nr_seq_cobranca_p::text, '') = '') then	/* ahoffelder - OS 267650 - 18/11/2010 */
 
 
		select	coalesce((obter_dados_titulo_receber(a.nr_titulo,'VNC'))::numeric ,0) 
		into STRICT	vl_nota_credito_w 
		from	titulo_receber a 
		where	a.nr_titulo	= nr_titulo_w;
 
	else	/* desconto e juros da cobrança */
 
		select	coalesce(max(a.vl_desconto),0) - coalesce((obter_valor_nc_titulo_cobr(max(a.nr_sequencia)))::numeric ,0), 
			coalesce(max(a.vl_juros),0), 
			coalesce(max(a.vl_multa),0), 
			coalesce((obter_valor_nc_titulo_cobr(max(a.nr_sequencia)))::numeric ,0) 
		into STRICT	vl_desconto_w, 
			vl_juros_w, 
			vl_multa_w, 
			vl_nota_credito_w 
		from	titulo_receber_cobr a 
		where	a.nr_seq_cobranca	= nr_seq_cobranca_p 
		and	a.nr_titulo		= nr_titulo_w;
	end if;
 
	if (ie_acao_p	<> 'I') then 
		vl_desconto_w		:= vl_desconto_w * -1;
		vl_juros_w		:= vl_juros_w * -1;
		vl_multa_w		:= vl_multa_w * -1;
		vl_nota_credito_w	:= vl_nota_credito_w * -1;
	end if;
 
	vl_total_desc_w		:= 0;
	vl_total_juros_w	:= 0;
	vl_total_multa_w	:= 0;
	vl_total_nc_w		:= 0;
 
	open C02;
	loop 
	fetch C02 into	 
		vl_guia_w, 
		nr_seq_ret_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		/* para a baixa manual pelo Retorno Convênio, atualiza somente o valor da nota de crédito */
 
		if (nr_seq_cobranca_p IS NOT NULL AND nr_seq_cobranca_p::text <> '') then 
			vl_desc_item_w		:= (dividir(vl_desconto_w * vl_guia_w , vl_total_w));
			vl_total_desc_w		:= vl_total_desc_w + vl_desc_item_w;
			vl_juros_item_w		:= (dividir(vl_juros_w * vl_guia_w , vl_total_w));
			vl_total_juros_w	:= vl_total_juros_w + vl_juros_item_w;
			vl_multa_item_w		:= (dividir(vl_multa_w * vl_guia_w , vl_total_w));
			vl_total_multa_w	:= vl_total_multa_w + vl_multa_item_w;
 
			update	convenio_retorno_item 
			set	vl_desconto	= vl_desc_item_w, 
				vl_juros_cobr	= vl_juros_item_w, 
				dt_atualizacao	= clock_timestamp(), 
				nm_usuario	= nm_usuario_p, 
				vl_pago		= coalesce(vl_pago,0) - coalesce(vl_desc_item_w,0), 
				vl_multa_cobr	= vl_multa_item_w 
			where	nr_sequencia	= nr_seq_ret_item_w;
		end if;
 
		vl_nc_item_w		:= (dividir(vl_nota_credito_w * vl_guia_w , vl_total_w));
		vl_total_nc_w		:= vl_total_nc_w + vl_nc_item_w;
 
		update	convenio_retorno_item 
		set	vl_nota_credito	= vl_nc_item_w, 
			vl_pago		= coalesce(vl_pago,0) - coalesce(vl_nc_item_w,0) 
		where	nr_sequencia	= nr_seq_ret_item_w;
 
	end loop;
	close c02;
 
	/* adicionar a sobra do arredondamento à última guia do retorno */
 
	update	convenio_retorno_item 
	set	vl_desconto	= coalesce(vl_desconto,0) + (coalesce(vl_desconto_w,0) - coalesce(vl_total_desc_w,0)), 
		vl_juros_cobr	= coalesce(vl_juros_cobr,0) + (coalesce(vl_juros_w,0) - coalesce(vl_total_juros_w,0)), 
		vl_multa_cobr	= coalesce(vl_multa_cobr,0) + (coalesce(vl_multa_w,0) - coalesce(vl_total_multa_w,0)), 
		vl_nota_credito	= coalesce(vl_nota_credito,0) + (coalesce(vl_nota_credito_w,0) - coalesce(vl_total_nc_w,0)), 
		dt_atualizacao	= clock_timestamp(), 
		nm_usuario	= nm_usuario_p, 
		vl_pago		= coalesce(vl_pago,0) - (coalesce(vl_desconto_w,0) - coalesce(vl_total_desc_w,0)) - (coalesce(vl_nota_credito_w,0) - coalesce(vl_total_nc_w,0)) 
	where	nr_sequencia	= nr_seq_ret_item_w;
 
end loop;
close c01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ratear_titulo_convenio (nr_seq_retorno_p bigint, nr_titulo_p bigint, nr_seq_cobranca_p bigint, nm_usuario_p text, ie_acao_p text) FROM PUBLIC;

