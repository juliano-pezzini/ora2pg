-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_baca_ajus_cd_senha_exter () AS $body$
DECLARE


nr_seq_congenere_w	pls_congenere.nr_sequencia%type;
cd_senha_externa_w	pls_guia_plano.cd_senha_externa%type;
nr_seq_guia_w		pls_guia_plano.nr_sequencia%type;
nr_seq_req_w		pls_requisicao.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.cd_senha_externa,
		c.nr_sequencia,
		a.nr_sequencia
	from	pls_guia_plano		c,
		pls_execucao_requisicao	b,
		pls_requisicao		a
	where	a.nr_sequencia		= b.nr_seq_requisicao
	and	c.nr_sequencia		= b.nr_seq_guia
	and	(a.cd_senha_externa IS NOT NULL AND a.cd_senha_externa::text <> '')
	and	coalesce(c.cd_senha_externa::text, '') = ''
	and	a.nr_seq_uni_exec	= nr_seq_congenere_w
	and	a.dt_requisicao between to_date('01/01/2017') and clock_timestamp()
	and	a.ie_tipo_processo = 'I'
	order by 2 desc;

C02 CURSOR FOR
	SELECT	z.nr_sequencia nr_seq_conta,
		c.cd_senha_externa
	from	pls_guia_plano		c,
		pls_execucao_requisicao	b,
		pls_requisicao		a,
		pls_conta		z
	where	c.nr_sequencia		= z.nr_seq_guia
	and	a.nr_sequencia		= b.nr_seq_requisicao
	and	c.nr_sequencia		= b.nr_seq_guia
	and	(c.cd_senha_externa IS NOT NULL AND c.cd_senha_externa::text <> '')
	and	a.nr_seq_uni_exec	= nr_seq_congenere_w
	and	a.dt_requisicao between to_date('01/01/2017') and clock_timestamp()
	and	a.ie_tipo_processo 	= 'I'
	and exists (	SELECT	1
			from	pls_conta		y
			where	y.nr_sequencia 		= z.nr_sequencia
			and	coalesce(y.cd_senha_externa, 00000) <> c.cd_senha_externa
			
union all

			select	1
			from	pls_conta_pos_cabecalho	y
			where	y.nr_seq_conta		= z.nr_sequencia
			and	coalesce(y.cd_senha_externa, 00000) <> c.cd_senha_externa);

BEGIN

select	max(nr_seq_uni_exec)
into STRICT	nr_seq_congenere_w
from	pls_requisicao
where	ie_tipo_processo = 'I'
and	ie_tipo_intercambio = 'I'  LIMIT 1;

if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
	open C01;
	loop
	fetch C01 into
		cd_senha_externa_w,
		nr_seq_guia_w,
		nr_seq_req_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		update	pls_guia_plano
		set	cd_senha_externa	= cd_senha_externa_w
		where	nr_sequencia		= nr_seq_guia_w;

		CALL pls_guia_gravar_historico(nr_seq_guia_w, null, 'Repassado a senha externa da requisição nº' || nr_seq_req_w || ' para a guia nº' || nr_seq_guia_w, null, 'Philips-SCS');

		commit;
		end;
	end loop;
	close C01;

	for r_C02_w in C02 loop
		begin
			update	pls_conta
			set	cd_senha_externa 	= r_C02_w.cd_senha_externa
			where	nr_sequencia 		= r_C02_w.nr_seq_conta;

			update	pls_conta_pos_cabecalho	a
			set	a.cd_senha_externa 	= r_C02_w.cd_senha_externa
			where exists (	SELECT	1
					from	pls_conta	b
					where	b.nr_sequencia	= a.nr_seq_conta
					and	b.nr_sequencia	= r_C02_w.nr_seq_conta
					and	(b.cd_senha_externa IS NOT NULL AND b.cd_senha_externa::text <> '')
					and	coalesce(a.cd_senha_externa, 00000) <> b.cd_senha_externa);
			commit;
		end;
	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_baca_ajus_cd_senha_exter () FROM PUBLIC;

