-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_audit_protocolo (nr_seq_lote_hist_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text, qt_resultado_p INOUT text, ds_consistencia_p INOUT text) AS $body$
DECLARE

 
cd_convenio_w		integer;
cd_convenio_prot_w	integer;
nr_interno_conta_w	bigint;
cd_autorizacao_w	varchar(20);
vl_saldo_w		double precision;
qt_guias_w		bigint	:= 0;
qt_consistencia_w	bigint;
ds_consistencia_w	varchar(4000);
nr_seq_lote_audit_w	bigint;
cd_estabelecimento_w		bigint;
ie_guias_lote_diferente_w	varchar(10)	:= 'N';

c01 CURSOR FOR 
SELECT	w.nr_interno_conta, 
	w.cd_autorizacao, 
	w.vl_saldo 
from (SELECT	b.nr_interno_conta, 
		b.cd_autorizacao, 
		(obter_saldo_conpaci(a.nr_interno_conta,b.cd_autorizacao))::numeric  vl_saldo 
	from	conta_paciente_guia b, 
		conta_paciente a 
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p 
	and	a.nr_interno_conta	= b.nr_interno_conta 
	and	a.cd_convenio_parametro	= cd_convenio_w 
	and	coalesce(a.dt_cancelamento::text, '') = '' 
	and	exists (select	1 
		from	procedimento_paciente x 
		where	x.nr_interno_conta	= a.nr_interno_conta 
		
union
 
		select	1 
		from	material_atend_paciente x 
		where	x.nr_interno_conta	= a.nr_interno_conta) 
	) w 
where	not exists (select	1 
	from	lote_audit_hist_guia x 
	where	x.nr_seq_lote_hist	= nr_seq_lote_hist_p 
	and	x.nr_interno_conta	= w.nr_interno_conta 
	and	x.cd_autorizacao	= w.cd_autorizacao);


BEGIN 
 
select	max(b.cd_convenio), 
	max(b.nr_sequencia), 
	max(b.cd_estabelecimento) 
into STRICT	cd_convenio_w, 
	nr_seq_lote_audit_w, 
	cd_estabelecimento_w 
from	lote_auditoria b, 
	lote_audit_hist a 
where	a.nr_sequencia		= nr_seq_lote_hist_p 
and	a.nr_seq_lote_audit	= b.nr_sequencia;
 
select	max(a.cd_convenio) 
into STRICT	cd_convenio_prot_w 
from	protocolo_convenio a 
where	a.nr_seq_protocolo	= nr_seq_protocolo_p;
 
if (cd_convenio_w	<> cd_convenio_prot_w) then 
	qt_resultado_p	:= 'C';
end if;
 
ie_guias_lote_diferente_w := obter_param_usuario(69, 46, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_guias_lote_diferente_w);
 
if (coalesce(qt_resultado_p,'X') <> 'C') and (nr_seq_lote_hist_p IS NOT NULL AND nr_seq_lote_hist_p::text <> '') then 
 
	open c01;
	loop 
	fetch c01 into 
		nr_interno_conta_w, 
		cd_autorizacao_w, 
		vl_saldo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
 
		select	count(*) 
		into STRICT	qt_consistencia_w 
		from	lote_audit_hist b, 
			lote_audit_hist_guia x 
		where	x.nr_interno_conta	= nr_interno_conta_w 
		and	x.nr_seq_lote_hist	= b.nr_sequencia 
		and	coalesce(ie_guias_lote_diferente_w,'N') 	= 'N' 
		and	((x.cd_autorizacao = cd_autorizacao_w and x.nr_seq_lote_hist = nr_seq_lote_hist_p) or b.nr_seq_lote_audit <> nr_seq_lote_audit_w);
 
		if (qt_consistencia_w > 0) then 
			if (coalesce(ds_consistencia_w::text, '') = '') then 
				ds_consistencia_w 	:= nr_interno_conta_w;
			elsif (position(to_char(nr_interno_conta_w) in ds_consistencia_w) = 0) then 
				ds_consistencia_w	:= (ds_consistencia_w || ', ' || nr_interno_conta_w);
			end if;
		else 
			insert into lote_audit_hist_guia(cd_autorizacao, 
				dt_atualizacao, 
				nm_usuario, 
				nr_interno_conta, 
				nr_seq_lote_hist, 
				nr_sequencia, 
				vl_saldo_guia) 
			values (cd_autorizacao_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_interno_conta_w, 
				nr_seq_lote_hist_p, 
				nextval('lote_audit_hist_guia_seq'), 
				vl_saldo_w);
 
			qt_guias_w	:= qt_guias_w + 1;
		end if;
 
	end loop;
	close c01;
 
	qt_resultado_p		:= qt_guias_w;
	ds_consistencia_p	:= ds_consistencia_w;
 
	commit;
 
end if;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_audit_protocolo (nr_seq_lote_hist_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text, qt_resultado_p INOUT text, ds_consistencia_p INOUT text) FROM PUBLIC;

