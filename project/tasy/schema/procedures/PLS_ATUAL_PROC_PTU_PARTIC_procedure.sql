-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atual_proc_ptu_partic ( nr_seq_conta_proc_p bigint, nr_seq_grupo_atual_p bigint, nr_seq_analise_p bigint, ie_comitar_p text, nm_usuario_p text, cd_estabelecimento_p bigint ) AS $body$
DECLARE

 
ie_tipo_despesa_w	varchar(1);
nr_seq_conta_w		bigint;
nr_seq_item_criado_w	bigint;
nr_seq_item_w		bigint;
cd_medico_w		bigint;
nr_seq_conselho_w	bigint;
nr_seq_grau_partic_w	bigint;
nr_seq_prestador_w	bigint;
nr_seq_prestador_pgto_w	bigint;
ie_tipo_item_w		varchar(1);
nm_participante_w	varchar(255);
ds_grau_participacao_w	varchar(255);
nr_seq_apres_w		bigint;
nr_ordem_w		bigint;
qt_item_w		bigint;
dt_inicio_proc_w	timestamp;
dt_procedimento_w	timestamp;


BEGIN 
 
select	a.ie_tipo_despesa, 
	a.nr_seq_conta, 
	a.dt_procedimento, 
	a.dt_inicio_proc 
into STRICT	ie_tipo_despesa_w, 
	nr_seq_conta_w, 
	dt_procedimento_w, 
	dt_inicio_proc_w 
from	pls_conta_proc	a 
where	a.nr_sequencia = nr_seq_conta_proc_p;
 
if (ie_tipo_despesa_w = '1') then /* Atualizar o valor do procedimento */
 
	CALL pls_atualiza_valor_proc(nr_seq_conta_proc_p, 'S', nm_usuario_p,'S',null,null);
elsif (ie_tipo_despesa_w in ('2','3')) then /* Atualizar os valores das taxas e diarias */
 
	CALL pls_atualiza_valor_servico(nr_seq_conta_proc_p, 'S', nm_usuario_p,'S');
elsif (ie_tipo_despesa_w = '4') then /* Atualizar os valores dos pacotes */
 
	CALL pls_atualiza_valor_pacote(nr_seq_conta_proc_p, 'C', nm_usuario_p, 'S', 'N');
end if;
 
CALL pls_atualizar_proc_ref(nr_seq_conta_proc_p, cd_estabelecimento_p, nm_usuario_p);
 
CALL pls_consistir_conta_proc(nr_seq_conta_proc_p, cd_estabelecimento_p,'N', nm_usuario_p);
 
/*Rotina para vincular regra de liberacao de valores para conta no procedimento, quando inserido manualmente pela analise. */
 
CALL pls_obter_regra_valor_conta(nr_seq_conta_w, nr_seq_conta_proc_p,null,null,nm_usuario_p);
 
CALL pls_atualizar_glosa_oc_analise(	nr_seq_conta_proc_p, null, nr_seq_analise_p, 
				cd_estabelecimento_p, nm_usuario_p);				
				 
select	max(nr_sequencia) 
into STRICT	nr_seq_item_w 
from	w_pls_resumo_conta 
where	nr_seq_item	= nr_seq_conta_proc_p 
and	ie_tipo_item	in ('P', 'R');
 
/*Para os casos em que o procedimento ja existe so vai ser incluido os participante*/
 
if (coalesce(nr_seq_item_w,0) > 0) then 
				 
	/*Se ja existir o registro eh so atualizar para conter o partic.*/
 
	select	a.cd_medico,				 
		a.nr_seq_conselho,		 
		a.nr_seq_grau_partic,				 
		a.nr_seq_prestador, 
		a.nr_seq_prestador_pgto,		 
		'R',				 
		CASE WHEN coalesce(a.nr_seq_prestador::text, '') = '' THEN coalesce(Obter_nome_medico(a.cd_medico,'N'), a.nm_medico_executor_imp)  ELSE pls_obter_dados_prestador(a.nr_Seq_prestador,'N') END , 
		pls_obter_grau_participacao(a.nr_seq_grau_partic),				 
		b.nr_seq_apres, 
		c.dt_procedimento, 
		c.dt_inicio_proc 
	into STRICT	cd_medico_w, 
		nr_seq_conselho_w,			 
		nr_seq_grau_partic_w, 
		nr_seq_prestador_w, 
		nr_seq_prestador_pgto_w, 
		ie_tipo_item_w, 
		nm_participante_w, 
		ds_grau_participacao_w, 
		nr_seq_apres_w, 
		dt_procedimento_w, 
		dt_inicio_proc_w 
	FROM pls_conta_proc c, pls_proc_participante a
LEFT OUTER JOIN pls_grau_participacao b ON (a.nr_seq_grau_partic = b.nr_sequencia)
WHERE a.nr_seq_conta_proc	= c.nr_sequencia and c.nr_sequencia		= nr_seq_conta_proc_p;
 
	select	CASE WHEN ie_tipo_item_w || ie_tipo_despesa_w='P1' THEN '1' WHEN ie_tipo_item_w || ie_tipo_despesa_w='P2' THEN '3' WHEN ie_tipo_item_w || ie_tipo_despesa_w='P3' THEN '2' WHEN ie_tipo_item_w || ie_tipo_despesa_w='P4' THEN '4' WHEN ie_tipo_item_w || ie_tipo_despesa_w='M1' THEN '6' WHEN ie_tipo_item_w || ie_tipo_despesa_w='M2' THEN '5' WHEN ie_tipo_item_w || ie_tipo_despesa_w='M3' THEN '7' WHEN ie_tipo_item_w || ie_tipo_despesa_w='M7' THEN '8' WHEN ie_tipo_item_w || ie_tipo_despesa_w='R1' THEN '1' WHEN ie_tipo_item_w || ie_tipo_despesa_w='R2' THEN '3' WHEN ie_tipo_item_w || ie_tipo_despesa_w='R3' THEN '2' WHEN ie_tipo_item_w || ie_tipo_despesa_w='R4' THEN '4' END  
	into STRICT	nr_ordem_w 
	;
	 
	update	w_pls_resumo_conta 
	set	ie_tipo_item		= 'R', 
		nr_seq_apres_prof	= nr_seq_apres_w, 
		ds_grau_participacao	= ds_grau_participacao_w, 
		nm_participante		= nm_participante_w, 
		ds_tipo_despesa		= ie_tipo_item_w || ie_tipo_despesa_w,		 
		nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w, 
		nr_seq_grau_partic	= nr_seq_grau_partic_w,	 
		nr_ordem		= nr_ordem_w, 
		dt_inicio_item		= dt_inicio_proc_w, 
		dt_item			= dt_procedimento_w 
	where	nr_sequencia		= nr_seq_item_w;
else		 
	/*Gerar os dados do resumo para ser usado na funcao OPS - Analise de Producao Medica */
 
	nr_seq_item_criado_w := pls_gerar_w_resumo_conta_ptu(	nr_seq_conta_w, nr_seq_conta_proc_p, null, null, nr_seq_analise_p, nm_usuario_p, nr_seq_item_criado_w);
 
end if;
			 
update	pls_conta_proc 
set	ie_status = 'A' 
where	nr_sequencia = nr_seq_conta_proc_p 
and	ie_status <> 'D';
 
update	w_pls_resumo_conta 
set	nr_seq_grupo_item 	= nr_seq_grupo_atual_p 
where	nr_sequencia 		= nr_seq_item_criado_w;
		 
if (coalesce(ie_comitar_p,'S') = 'S') then 
	commit;		
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atual_proc_ptu_partic ( nr_seq_conta_proc_p bigint, nr_seq_grupo_atual_p bigint, nr_seq_analise_p bigint, ie_comitar_p text, nm_usuario_p text, cd_estabelecimento_p bigint ) FROM PUBLIC;

