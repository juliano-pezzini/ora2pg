-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_109_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Irá validar se o código ANS informado no arquivo XML é condizente com o código da operadora.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_valido_w		pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;

-- Informações sobre a Regra
c01 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	ie_valida_operadora
	from	pls_oc_cta_val_oper_inv
	where	nr_seq_oc_cta_comb = nr_seq_oc_cta_comb_pc;

c02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	a.nr_sequencia 	nr_seq_selecao,
		'S' 		ie_valido,
		'Operadora inválida' ds_observacao
	from	pls_oc_cta_selecao_imp 	a,
		pls_conta_imp		b,
		pls_protocolo_conta_imp c
	where	a.nr_id_transacao 	= nr_id_transacao_pc
	and	a.ie_valido 		= 'S'
	and	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo 	= c.nr_sequencia
	and not exists (SELECT 	1
			from	pls_outorgante d
			where	d.cd_ans = c.cd_ans
			and	d.cd_estabelecimento = c.cd_estabelecimento);

BEGIN

if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', ie_regra_excecao_p, nr_id_transacao_p, null);
	-- Incializar as listas para cada regra.
	SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

	-- Carrega as regras
	for r_c01_w in c01(nr_seq_combinada_p) loop

		-- Só executa a regra se ela não for de tipos de prestadores iguais
		if (r_c01_w.ie_valida_operadora = 'S') then

			open c02(nr_id_transacao_p);
			loop
				fetch 	c02 bulk collect
				into	tb_seq_selecao_w, tb_valido_w, tb_observacao_w
				limit pls_util_cta_pck.qt_registro_transacao_w;
				exit when tb_seq_selecao_w.count = 0;

				CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w,
										nr_id_transacao_p, 'SEQ');
			end loop;
			close c02;

		end if;
	end loop;

	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N', ie_regra_excecao_p, null, nr_id_transacao_p, null);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_109_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

