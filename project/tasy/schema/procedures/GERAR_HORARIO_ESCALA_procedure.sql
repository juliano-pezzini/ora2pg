-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE reg_gera_escala AS (cd_pessoa_fisica		pessoa_fisica.cd_pessoa_fisica%type,
	ie_gerar_escala			boolean);


CREATE OR REPLACE PROCEDURE gerar_horario_escala ( nr_seq_escala_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_forma_tratar_horario_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_gerar_escala_w		boolean := false;
ie_alternar_dias_w		varchar(1);
ie_dia_semana_w		smallint;
ie_dia_semana_ww		smallint;
ie_dia_semana_mes_w	varchar(5);
cont_fds_w		smallint := 0;
cd_estabelecimento_w	integer;
dt_inicial_w		timestamp;
dt_final_w		timestamp;
dt_escala_w		timestamp;
hr_atual_w		timestamp;
hr_inicial_w		timestamp;
hr_final_w		timestamp;
dt_atual_ww		timestamp;
qt_escala_w		integer;
nr_sequencia_w		bigint := 0;
ie_completa_w		varchar(1);
ie_feriado_w		varchar(1);
ie_gerar_todos_hor_w	varchar(1);
cd_pessoa_fisica_w	varchar(10);
qt_escala_dup_w		integer;
cd_cbo_sus_w		integer;
cd_profissional_w		varchar(10);
nr_seq_escala_horario_w	bigint;
qt_dias_periodo_p		bigint;
nr_indice_w		bigint	:= 0;
ie_possui_w		varchar(255)	:= 'N';
ds_bloq_alt_escala_inativa_w varchar(255) := obter_valor_param_usuario(3009, 40, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);

type vetor_gera_escala is table of reg_gera_escala index by integer;

gera_escala_w			vetor_gera_escala;


c01 CURSOR FOR
SELECT	hr_inicial,
	hr_final,
	cd_pessoa_fisica,
	cd_cbo_sus,
	nr_sequencia,
	coalesce(ie_alternar_dias,'N'),
	ie_dia_semana
from 	escala_horario
where 	nr_seq_escala	= nr_seq_escala_p
and (ie_dia_semana = 0 or ie_dia_semana = ie_dia_semana_w or (ie_dia_semana = 10 and ie_dia_semana_w in (7,1)))
and	coalesce(ie_dia_semana_mes,ie_dia_semana_mes_w) = ie_dia_semana_mes_w
and	CASE WHEN ie_feriado='N' THEN ie_feriado_w WHEN ie_feriado='F' THEN 'N'  ELSE ie_feriado END  = ie_feriado_w
and	trunc(coalesce(dt_inicio_vigencia,dt_escala_w-1),'dd') <= dt_escala_w
and ((coalesce(ds_bloq_alt_escala_inativa_w, 'N') = 'S' and coalesce(ie_situacao, 'A') = 'A')
or (coalesce(ds_bloq_alt_escala_inativa_w, 'N') <> 'S'))

union

SELECT	hr_inicial,
	hr_final,
	cd_pessoa_fisica,
	cd_cbo_sus,
	nr_sequencia,
	coalesce(ie_alternar_dias,'N'),
	ie_dia_semana
from 	escala_horario	a
where 	nr_seq_escala	= nr_seq_escala_p
and	ie_dia_semana	= 9
and	ie_dia_semana_w between 2 and 6
and	coalesce(ie_dia_semana_mes,ie_dia_semana_mes_w) = ie_dia_semana_mes_w
and	CASE WHEN ie_feriado='N' THEN ie_feriado_w WHEN ie_feriado='F' THEN 'N'  ELSE ie_feriado END  = ie_feriado_w
and	trunc(coalesce(dt_inicio_vigencia,dt_escala_w-1),'dd') <= dt_escala_w
and ((coalesce(ds_bloq_alt_escala_inativa_w, 'N') = 'S' and coalesce(ie_situacao, 'A') = 'A')
or (coalesce(ds_bloq_alt_escala_inativa_w, 'N') <> 'S'))
and (not exists (
	select	1
	from	escala_horario x
	where	x.nr_seq_escala	= nr_seq_escala_p
	and	x.cd_pessoa_fisica = a.cd_pessoa_fisica
	and (x.ie_dia_semana = 0 or x.ie_dia_semana = ie_dia_semana_w)) or ie_gerar_todos_hor_w = 'S')
order by 1,2;

c02 CURSOR FOR
SELECT	dt_inicio,
	dt_fim
from 	escala_diaria
where 	nr_seq_escala		= nr_seq_escala_p
and	dt_inicio between dt_inicial_w and dt_final_w
and	ie_completa_w		= 'S'
order by 1,2;

C03 CURSOR FOR
	SELECT	cd_profissional
	from	escala_horario_adic
	where	nr_seq_escala = nr_seq_escala_horario_w
	order by cd_profissional;

BEGIN

dt_inicial_w		:= trunc(dt_inicial_p,'dd');
dt_final_w		:= fim_dia(dt_final_p);

select	coalesce(max(ie_completa),'N'),
	coalesce(max(ie_gerar_todos_hor),'N')
into STRICT	ie_completa_w,
	ie_gerar_todos_hor_w
from	escala
where	nr_sequencia	= nr_seq_escala_p;

begin
 	select	c.cd_estabelecimento
 	into STRICT	cd_estabelecimento_w
	from	escala_classif c,
		escala_grupo b,
		escala a
 	where	a.nr_sequencia	= nr_seq_escala_p
	and	a.nr_seq_grupo	= b.nr_sequencia
 	and	b.nr_seq_classif = c.nr_sequencia;
exception
when others then
	cd_estabelecimento_w  := obter_estabelecimento_ativo;
end;

delete	from escala_diaria
where	nr_seq_escala	= nr_seq_escala_p
and	coalesce(cd_pessoa_fisica::text, '') = ''
and	dt_inicio between dt_inicial_w and dt_final_w
and	ie_forma_tratar_horario_p = 1;

commit;

dt_escala_w	:= dt_inicial_w;

while dt_escala_w <= dt_final_w loop
	begin
	select	pkg_date_utils.get_WeekDay(dt_escala_w),
		substr(obter_semana_mes(dt_escala_w),1,255),
		CASE WHEN obter_se_feriado(cd_estabelecimento_w,trunc(dt_escala_w,'dd'))=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_dia_semana_w,
		ie_dia_semana_mes_w,
		ie_feriado_w
	;

	open c01;
	loop
	fetch c01 into
		hr_inicial_w,
		hr_final_w,
		cd_pessoa_fisica_w,
		cd_cbo_sus_w,
		nr_seq_escala_horario_w,
		ie_alternar_dias_w,
		ie_dia_semana_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	coalesce(qt_dias_periodo_escala,0)
		into STRICT	qt_dias_periodo_p
		from	escala_horario
		where	nr_sequencia = nr_seq_escala_horario_w;

		hr_inicial_w	:= to_date(to_char(dt_escala_w,'dd/mm/yyyy') || ' ' ||
				to_char(hr_inicial_w,'hh24:mi:ss'),
				'dd/mm/yyyy hh24:mi:ss');

		hr_final_w	:= to_date(to_char(dt_escala_w,'dd/mm/yyyy') || ' ' ||
				to_char(hr_final_w,'hh24:mi:ss'),
				'dd/mm/yyyy hh24:mi:ss');

		if (qt_dias_periodo_p > 0) then
			hr_final_w := hr_final_w + qt_dias_periodo_p;
		end if;

		select	count(*)
		into STRICT	qt_escala_w
		from	escala_diaria a
		where	nr_seq_escala		= nr_seq_escala_p
		and	dt_inicio		= hr_inicial_w
		and	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	(cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '');

		if (hr_final_w < hr_inicial_w) then
			hr_final_w	:= hr_final_w + 1;
		end if;

		qt_escala_dup_w	:= 0;

		if (ie_forma_tratar_horario_p = 0) then
			select	count(*)
			into STRICT	qt_escala_dup_w
			from	escala_diaria a
			where	nr_seq_escala		= nr_seq_escala_p
			and	dt_inicio		= hr_inicial_w
			and	dt_fim			= hr_final_w
			and	ie_feriado		= coalesce(ie_feriado_w,'N')
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;

		if (qt_escala_w = 0) and (qt_escala_dup_w = 0) then
			if (coalesce(gera_escala_w.first::text, '') = '') then
				nr_indice_w	:= nr_indice_w + 1;

				gera_escala_w[nr_indice_w].cd_pessoa_fisica		:= cd_pessoa_fisica_w;
				gera_escala_w[nr_indice_w].ie_gerar_escala		:= false;

				ie_gerar_escala_w					:= false;
			else
				ie_possui_w	:= 'N';

				for i in gera_escala_w.first..gera_escala_w.last loop
					begin
					if (gera_escala_w[i].cd_pessoa_fisica = cd_pessoa_fisica_w) then
						ie_gerar_escala_w	:= gera_escala_w[i].ie_gerar_escala;

						ie_possui_w		:= 'S';
					end if;
					end;
				end loop;

				if (ie_possui_w = 'N') then
					nr_indice_w	:= nr_indice_w + 1;

					gera_escala_w[nr_indice_w].cd_pessoa_fisica		:= cd_pessoa_fisica_w;
					gera_escala_w[nr_indice_w].ie_gerar_escala		:= false;

					ie_gerar_escala_w					:= false;
				end if;
			end if;

			if (ie_alternar_dias_w = 'S') then
				ie_gerar_escala_w	:= not ie_gerar_escala_w;

				if (ie_dia_semana_ww = 10) then
					ie_gerar_escala_w	:= true;
					cont_fds_w		:= cont_fds_w + 1;

					if (cont_fds_w > 2) then
						ie_gerar_escala_w	:= false;

						if (cont_fds_w = 4) then
							cont_fds_w	:= 0;
						end if;
					end if;
				end if;
			end if;

			if	(ie_alternar_dias_w = 'S' AND ie_gerar_escala_w) or (ie_alternar_dias_w = 'N') then
				begin
				select	nextval('escala_diaria_seq')
				into STRICT	nr_sequencia_w
				;

				insert into escala_diaria(	nr_sequencia,
						nr_seq_escala,
						dt_atualizacao,
						nm_usuario,
						dt_inicio,
						dt_fim,
						ie_feriado,
						cd_pessoa_fisica,
						cd_cbo_sus,
						ie_profis_aleatorio,
						dt_atualizacao_nrec,
						nm_usuario_nrec)
				values (	nr_sequencia_w,
						nr_seq_escala_p,
						clock_timestamp(),
						nm_usuario_p,
						hr_inicial_w,
						hr_final_w,
						coalesce(ie_feriado_w,'N'),
						cd_pessoa_fisica_w,
						cd_cbo_sus_w,
						'N',
						clock_timestamp(),
						nm_usuario_p);

				open C03;
				loop
				fetch C03 into
					cd_profissional_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					insert	into escala_diaria_adic(	cd_pessoa_fisica,
							dt_atualizacao,
							dt_atualizacao_nrec,
							nm_usuario,
							nm_usuario_nrec,
							nr_seq_escala_diaria,
							nr_sequencia)
					values (	cd_profissional_w,
							clock_timestamp(),
							clock_timestamp(),
							nm_usuario_p,
							nm_usuario_p,
							nr_sequencia_w,
							nextval('escala_diaria_adic_seq'));
					end;
				end loop;
				close C03;
				end;

			end if;

			for i in gera_escala_w.first..gera_escala_w.last loop
				begin
				if (gera_escala_w[i].cd_pessoa_fisica = cd_pessoa_fisica_w) then
					gera_escala_w[i].ie_gerar_escala	:= ie_gerar_escala_w;
				end if;
				end;
			end loop;
		end if;
		end;
	end loop;
	close c01;

	dt_escala_w		:= dt_escala_w + 1;
	end;
end loop;

commit;

hr_atual_w		:= trunc(dt_inicial_w,'dd');

open c02;
loop
fetch c02 into
	hr_inicial_w,
	hr_final_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	qt_escala_dup_w := 0;

	if (ie_forma_tratar_horario_p = 0) then
		select	count(*)
		into STRICT	qt_escala_dup_w
		from	escala_diaria a
		where	nr_seq_escala	= nr_seq_escala_p
		and	dt_inicio		= coalesce(dt_atual_ww,hr_atual_w)
		and	dt_fim		= hr_inicial_w
		and	ie_feriado		= coalesce(ie_feriado_w,'N');
	end if;

	if (hr_atual_w < hr_inicial_w)and (qt_escala_dup_w = 0)  then
		begin
		select	nextval('escala_diaria_seq')
		into STRICT	nr_sequencia_w
		;

		insert into escala_diaria(
			nr_sequencia,
			nr_seq_escala,
			dt_atualizacao,
			nm_usuario,
			dt_inicio,
			dt_fim,
			ie_feriado,
			ie_profis_aleatorio,
			dt_atualizacao_nrec,
			nm_usuario_nrec)
		values (	nr_sequencia_w,
			nr_seq_escala_p,
			clock_timestamp(),
			nm_usuario_p,
			coalesce(dt_atual_ww,hr_atual_w),
			hr_inicial_w,
			coalesce(ie_feriado_w,'N'),
			'N',
			clock_timestamp(),
			nm_usuario_p);
		end;
	end if;

	hr_atual_w			  := hr_inicial_w;
	dt_atual_ww			  := to_date(to_char(hr_atual_w,'dd/mm/yyyy') || ' ' ||	to_char(hr_final_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
	end;
end loop;
close c02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_horario_escala ( nr_seq_escala_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_forma_tratar_horario_p bigint, nm_usuario_p text) FROM PUBLIC;

