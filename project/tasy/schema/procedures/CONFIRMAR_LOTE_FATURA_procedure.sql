-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE confirmar_lote_fatura (nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
qt_inconsistencias_w  bigint;

 
-- OS 733520/1982 
 
-- ALTERAÇÃO REALIZADA POR JULIANA LANA - FSFX 25/03/2015 POIS A ORIGINAL NÃO ESTAVA GERANDO OS TRIBUTOS 
-- CHAMADA A PROC GERAR_IMPOSTO_NF 
 
 
nr_seq_nota_w    w_imp_nota_fiscal.nr_sequencia%type;
cd_estabelecimento_w  nota_fiscal.cd_estabelecimento%type;
dt_fatura_w    w_imp_nota_fiscal.dt_fatura%type;
dt_fiscal_w    w_imp_nota_fiscal.dt_fiscal%type;
cd_tipo_operacao_w  nota_fiscal.cd_operacao_nf%type;
dt_saida_w    w_imp_nota_fiscal.dt_saida%type;
cd_cliente_fornec_w  varchar(14);
cd_condicao_pagto_w  nota_fiscal.cd_condicao_pagamento%type;
dt_vencimento_w    w_imp_nota_fiscal.dt_vencimento%type;
ie_cliente_fornec_w  w_imp_nota_fiscal.ie_cliente_fornec%type;
nr_nota_fiscal_w  w_imp_nota_fiscal.nr_nota_fiscal%type;
cd_pessoa_fisica_w  nota_fiscal.cd_pessoa_fisica%type;
cd_cgc_w    nota_fiscal.cd_cgc%type;
nr_seq_nota_fiscal_w  nota_fiscal.nr_sequencia%type;
qt_peso_bruto_w    w_imp_nota_fiscal.qt_peso_bruto%type;
qt_peso_liquido_w  w_imp_nota_fiscal.qt_peso_liquido%type;
cd_especie_w    w_imp_nota_fiscal.cd_especie%type;
cd_moeda_w    nota_fiscal.cd_moeda%type;
nr_nota_fiscal_int_w  nota_fiscal.nr_nota_fiscal%type;
vl_total_nota_w    nota_fiscal_item.vl_unitario_item_nf%type;

nr_titulo_w    titulo_receber.nr_titulo%type;
cd_tipo_cobranca_w  classe_titulo_receber.nr_sequencia%type;
nr_titulo_externo_w  titulo_receber.nr_titulo_externo%type;
nr_documento_w    titulo_receber.nr_documento%type;

nr_seq_item_w    w_imp_nota_fiscal_item.nr_sequencia%type;
cd_material_w    nota_fiscal_item.cd_material%type;
cd_unidade_medida_w  nota_fiscal_item.cd_unidade_medida_estoque%type;
vl_unitario_w    w_imp_nota_fiscal_item.vl_unitario%type;
cd_centro_custo_w  nota_fiscal_item.cd_centro_custo%type;
nr_atendimento_w  w_imp_nota_fiscal_item.nr_atendimento%type;
cd_paciente_w    varchar(10);
nr_item_nf_w    nota_fiscal_item.nr_item_nf%type;
qt_material_w    w_imp_nota_fiscal_item.qt_material%type;
qt_peso_item_w    w_imp_nota_fiscal_item.qt_peso_item%type;
vl_desconto_w    w_imp_nota_fiscal_item.vl_desconto%type;
ds_observacao_w    w_imp_nota_fiscal_item.ds_observacao%type;
vl_base_icms_w    w_imp_nota_fiscal_item.vl_base_icms%type;
vl_base_ipi_w    w_imp_nota_fiscal_item.vl_base_ipi%type;
vl_icms_w    w_imp_nota_fiscal_item.vl_icms%type;
vl_inss_w    w_imp_nota_fiscal_item.vl_inss%type;
vl_ipi_w    w_imp_nota_fiscal_item.vl_ipi%type;
vl_iss_w    w_imp_nota_fiscal_item.vl_iss%type;

vl_total_base_icms_w  w_imp_nota_fiscal_item.vl_base_icms%type;
vl_total_base_ipi_w  w_imp_nota_fiscal_item.vl_base_ipi%type;
vl_total_icms_w    w_imp_nota_fiscal_item.vl_icms%type;
vl_total_inss_w    w_imp_nota_fiscal_item.vl_inss%type;
vl_total_ipi_w    w_imp_nota_fiscal_item.vl_ipi%type;
vl_total_iss_w    w_imp_nota_fiscal_item.vl_iss%type;
vl_base_calculo_w  double precision;

cd_procedimento_w    procedimento.cd_procedimento%type;
ie_origem_proced_w    procedimento.ie_origem_proced%type;
nr_sequencia_nf_w    nota_fiscal_item.nr_sequencia_nf%type;
cd_cgc_emitente_w    pessoa_juridica.cd_cgc%type;
sg_estado_estab_w    pessoa_juridica.sg_estado%type;
sg_estado_fornec_w    pessoa_juridica.sg_estado%type;
cd_natureza_operacao_w    nota_fiscal_item.cd_natureza_operacao%type;
cd_natureza_operacao_ne_w  parametro_compras.cd_nat_oper_compra_ne%type;
cd_natureza_operacao_fe_w  parametro_compras.cd_nat_oper_compra_fe%type;
cd_serie_nf_w      nota_fiscal_item.cd_serie_nf%type;
vl_total_item_nf_w    nota_fiscal_item.vl_total_item_nf%type;
vl_desc_financ_w    nota_fiscal_item.vl_desc_financ%type;
vl_liquido_w      double precision;
pr_desconto_pagto_w    double precision;
cd_portador_w      titulo_receber.cd_portador%type;
nr_item_nf_seq_w    nota_fiscal_item.nr_item_nf%type;
vl_desc_financ_tit_w  nota_fiscal_item.vl_desc_financ%type;
cd_portador_tit_w    titulo_receber.cd_portador%type;
cd_tipo_portador_w    portador.cd_tipo_portador%type;
ie_tipo_titulo_w    titulo_receber.ie_tipo_titulo%type;

 
ds_mensagem_w    w_imp_mensagem_boleto.ds_mensagem%type;

c01 CURSOR FOR 
SELECT  a.nr_sequencia, 
  (obter_w_imp_conversao(a.nr_sequencia,null,'CD_ESTABELECIMENTO'))::numeric  cd_estabelecimento, 
  a.dt_fatura, 
  a.dt_fiscal, 
  (obter_w_imp_conversao(a.nr_sequencia,null,'CD_TIPO_OPERACAO'))::numeric  cd_tipo_operacao, 
  a.dt_saida, 
  substr(obter_w_imp_conversao(a.nr_sequencia,null,'CD_CLIENTE_FORNEC'),1,14) cd_cliente_fornec, 
  (obter_w_imp_conversao(a.nr_sequencia,null,'CD_CONDICAO_PAGTO'))::numeric  cd_condicao_pagto, 
  a.dt_vencimento, 
  trim(both a.ie_cliente_fornec) ie_cliente_fornec, 
  trim(both a.nr_nota_fiscal) nr_nota_fiscal, 
  a.qt_peso_bruto, 
  a.qt_peso_liquido, 
  trim(both a.cd_especie) cd_especie, 
  (obter_w_imp_conversao(a.nr_sequencia,null,'CD_MOEDA'))::numeric  cd_moeda, 
  (obter_w_imp_conversao(a.nr_sequencia,null,'CD_TIPO_COBRANCA'))::numeric  cd_tipo_cobranca, 
  substr(a.nr_titulo,1,255) nr_titulo, 
  somente_numero(substr(a.nr_titulo,1,22)) nr_documento, 
  (coalesce(obter_w_imp_conversao(a.nr_sequencia,null,'PR_DESCONTO_PAGTO'),0))::numeric , 
  (obter_w_imp_conversao(a.nr_sequencia,null,'CD_PORTADOR'))::numeric  cd_portador, 
  (obter_w_imp_conversao(a.nr_sequencia,null,'IE_TIPO_TITULO'))::numeric  ie_tipo_titulo 
from  w_imp_nota_fiscal a 
where  coalesce(a.nr_seq_nota_fiscal::text, '') = '' 
and  a.nr_seq_lote    = nr_seq_lote_p;

c02 CURSOR FOR 
SELECT  a.nr_sequencia, 
  (obter_w_imp_conversao(null,a.nr_sequencia,'CD_PROCEDIMENTO'))::numeric  cd_procedimento, 
  substr(obter_w_imp_conversao(null,a.nr_sequencia,'CD_UNIDADE_MEDIDA'),1,30) cd_unidade_medida, 
  a.vl_unitario, 
  (obter_w_imp_conversao(null,a.nr_sequencia,'CD_CENTRO_CUSTO'))::numeric  cd_centro_custo, 
  a.nr_atendimento, 
  substr(a.cd_paciente,1,10) cd_paciente, 
  a.qt_material, 
  a.qt_peso_item, 
  a.vl_desconto, 
  a.ds_observacao, 
  a.vl_base_icms, 
  a.vl_base_ipi, 
  a.vl_icms, 
  a.vl_inss, 
  a.vl_ipi, 
  a.vl_iss 
from  w_imp_nota_fiscal_item a 
where  a.nr_seq_nota  = nr_seq_nota_w;

c03 CURSOR FOR 
SELECT  a.ds_mensagem 
from  w_imp_mensagem_boleto a 
where  a.nr_seq_nota  = nr_seq_nota_w 
-- add Juliana Lana FSFX - 06/04/2015 
order by a.nr_sequencia;


BEGIN 
 
/* 733520 - Definido com Cliente que vai ser 4 - Padrao */
 
ie_origem_proced_w := 4;
 
select  count(*) 
into STRICT  qt_inconsistencias_w 
from  w_imp_ocorrencias a 
where  exists (SELECT  1 
  from  w_imp_nota_fiscal x 
  where  x.nr_sequencia  = a.nr_seq_nota 
  and  x.nr_seq_lote  = nr_seq_lote_p 
  
union
 
  SELECT  1 
  from  w_imp_nota_fiscal_item y, 
    w_imp_nota_fiscal x 
  where  y.nr_sequencia  = a.nr_seq_item 
  and  x.nr_sequencia  = y.nr_seq_nota 
  and  x.nr_seq_lote  = nr_seq_lote_p);
 
if (coalesce(qt_inconsistencias_w,0)  > 10) then 
 
  /* Foram identificadas qt_inconsistencias_w inconsistências neste lote! 
  Ele não pode ser confirmado enquanto houver inconsistências. */
 
 
  CALL wheb_mensagem_pck.exibir_mensagem_abort(317037,'QT_INCONSISTENCIAS_W='||qt_inconsistencias_w);
 
end if;
 
open  c01;
loop 
fetch  c01 into 
  nr_seq_nota_w, 
  cd_estabelecimento_w, 
  dt_fatura_w, 
  dt_fiscal_w, 
  cd_tipo_operacao_w, 
  dt_saida_w, 
  cd_cliente_fornec_w, 
  cd_condicao_pagto_w, 
  dt_vencimento_w, 
  ie_cliente_fornec_w, 
  nr_nota_fiscal_w, 
  qt_peso_bruto_w, 
  qt_peso_liquido_w, 
  cd_especie_w, 
  cd_moeda_w, 
  cd_tipo_cobranca_w, 
  nr_titulo_externo_w, 
  nr_documento_w, 
  pr_desconto_pagto_w, 
  cd_portador_tit_w, 
  ie_tipo_titulo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
  if (ie_cliente_fornec_w  = 'C') then 
 
    cd_pessoa_fisica_w  := cd_cliente_fornec_w;
    cd_cgc_w    := null;
 
  else 
 
    cd_cgc_w    := cd_cliente_fornec_w;
    cd_pessoa_fisica_w  := null;
 
  end if;
 
  nr_seq_nota_fiscal_w := gerar_nota_fiscal_es(  cd_estabelecimento_w, nr_nota_fiscal_w, null, nm_usuario_p, cd_tipo_operacao_w, null, dt_fatura_w, dt_fiscal_w, null, cd_pessoa_fisica_w, cd_cgc_w, cd_condicao_pagto_w, ds_observacao_w, qt_peso_bruto_w, qt_peso_liquido_w, cd_especie_w, cd_moeda_w, 'N', nr_seq_nota_fiscal_w);
 
  select  max(a.nr_nota_fiscal) 
  into STRICT  nr_nota_fiscal_int_w 
  from  nota_fiscal a 
  where  a.nr_sequencia  = nr_seq_nota_fiscal_w;
 
  vl_total_base_icms_w  := 0;
  vl_total_base_ipi_w  := 0;
  vl_total_icms_w    := 0;
  vl_total_inss_w    := 0;
  vl_total_ipi_w    := 0;
  vl_total_iss_w    := 0;
 
  open  c02;
  loop 
  fetch  c02 into 
    nr_seq_item_w, 
    cd_procedimento_w, 
    cd_unidade_medida_w, 
    vl_unitario_w, 
    cd_centro_custo_w, 
    nr_atendimento_w, 
    cd_paciente_w, 
    qt_material_w, 
    qt_peso_item_w, 
    vl_desconto_w, 
    ds_observacao_w, 
    vl_base_icms_w, 
    vl_base_ipi_w, 
    vl_icms_w, 
    vl_inss_w, 
    vl_ipi_w, 
    vl_iss_w;
  EXIT WHEN NOT FOUND; /* apply on c02 */
     
    /* 
    gerar_nota_fiscal_item(  nr_seq_nota_fiscal_w, 
          cd_centro_custo_w, 
          null, 
          cd_estabelecimento_w, 
          cd_material_w, 
          cd_tipo_operacao_w, 
          null, 
          cd_cgc_w, 
          cd_paciente_w, 
          null, 
          cd_unidade_medida_w, 
          nr_atendimento_w, 
          nr_nota_fiscal_int_w, 
          qt_material_w, 
          qt_peso_item_w, 
          qt_peso_item_w, 
          trunc(vl_desconto_w,2), 
          trunc(vl_unitario_w,2), 
          ds_observacao_w, 
          nm_usuariO_p, 
          'N', 
          nr_item_nf_w); 
    */
 
    select  max(b.cd_cgc), 
      max(b.sg_estado) 
    into STRICT  cd_cgc_emitente_w, 
      sg_estado_estab_w 
    from  pessoa_juridica b, 
      estabelecimento a 
    where  a.cd_cgc    = b.cd_cgc 
    and  a.cd_estabelecimento  = cd_estabelecimento_w;
     
 
    select  coalesce(max(a.cd_natureza_operacao), 0) 
    into STRICT  cd_natureza_operacao_w 
    from  operacao_nota a 
    where  a.cd_operacao_nf  = cd_tipo_operacao_w;
 
    if (coalesce(cd_natureza_operacao_w::text, '') = '') then 
 
      select  coalesce(max(a.cd_nat_oper_compra_ne),1102), 
        coalesce(max(a.cd_nat_oper_compra_fe),2102) 
      into STRICT  cd_natureza_operacao_ne_w, 
        cd_natureza_operacao_fe_w 
      from  parametro_compras a 
      where  a.cd_estabelecimento  = cd_estabelecimento_w;
 
      if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then 
 
        select  max(a.sg_estado) 
        into STRICT  sg_estado_fornec_w 
        from  pessoa_juridica a 
        where  a.cd_cgc  = cd_cgc_w;
 
        if (sg_estado_fornec_w  <> sg_estado_estab_w) then 
 
          cd_natureza_operacao_w  := cd_natureza_operacao_fe_w;
 
        else 
 
          cd_natureza_operacao_w  := cd_natureza_operacao_ne_w;
 
        end if;
 
      else 
 
        cd_natureza_operacao_w  := cd_natureza_operacao_ne_w;
 
      end if;
 
    end if;
 
     
    select  max(a.cd_serie_nf) 
    into STRICT  cd_serie_nf_w 
    from  parametro_compras a 
    where  a.cd_estabelecimento  = cd_estabelecimento_w;
 
    if (coalesce(cd_serie_nf_w::text, '') = '') then 
 
      cd_serie_nf_w := obter_param_usuario(40, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_serie_nf_w);
 
    end if;
     
    select  coalesce(max(a.nr_item_nf),0) + 1 
    into STRICT  nr_item_nf_w 
    from  nota_fiscal_item a 
    where  a.nr_sequencia  = nr_seq_nota_fiscal_w;
 
    select  coalesce(max(a.nr_sequencia_nf),0) + 1 
    into STRICT  nr_sequencia_nf_w 
    from  nota_fiscal a 
    where  a.cd_estabelecimento  = cd_estabelecimento_w 
    and  a.cd_serie_nf    = cd_serie_nf_w 
    and  a.nr_nota_fiscal  = nr_nota_fiscal_int_w;
     
    if (coalesce(qt_material_w,0)    = 0) or (coalesce(trunc(vl_unitario_w,2),0)  = 0) then 
 
      vl_liquido_w  := trunc(vl_unitario_w,2);
 
    else 
 
      vl_liquido_w  := coalesce(trunc(vl_unitario_w,2),0) * coalesce(qt_material_w,0);
 
    end if;
     
    vl_total_item_nf_w := coalesce(vl_liquido_w,0);
     
    vl_desc_financ_w := 0;
    if (nr_item_nf_w = 1) then 
      if (pr_desconto_pagto_w > 0) and (vl_total_item_nf_w > 0) then 
        begin 
        vl_desc_financ_w := coalesce(trunc(((pr_desconto_pagto_w * vl_total_item_nf_w) / 100),2),0);
        end;
      else 
        pr_desconto_pagto_w := 0;
      end if;
    else 
      pr_desconto_pagto_w := 0;
    end if;
     
    insert  into nota_fiscal_item(cd_centro_custo, 
      cd_cgc_emitente, 
      cd_estabelecimento, 
      cd_material, 
      cd_procedimento, 
      ie_origem_proced, 
      cd_natureza_operacao, 
      cd_paciente, 
      cd_serie_nf, 
      cd_unidade_medida_estoque, 
      ds_observacao, 
      dt_atualizacao, 
      dt_atualizacao_estoque, 
      nm_usuario, 
      nr_atendimento, 
      nr_item_nf, 
      nr_nota_fiscal, 
      nr_sequencia, 
      nr_sequencia_nf, 
      qt_item_nf, 
      qt_peso_bruto, 
      qt_peso_liquido, 
      pr_desc_financ, 
      vl_desc_financ, 
      vl_desconto, 
      vl_desconto_rateio, 
      vl_despesa_acessoria, 
      vl_frete, 
      vl_liquido, 
      vl_seguro, 
      vl_total_item_nf, 
      vl_unitario_item_nf) 
    values (cd_centro_custo_w, 
      cd_cgc_emitente_w, 
      cd_estabelecimento_w, 
      null, 
      cd_procedimento_w, 
      ie_origem_proced_w, 
      cd_natureza_operacao_w, 
      cd_paciente_w, 
      cd_serie_nf_w, 
      cd_unidade_medida_w, 
      ds_observacao_w, 
      clock_timestamp(), 
      clock_timestamp(), 
      nm_usuario_p, 
      nr_atendimento_w, 
      nr_item_nf_w, 
      nr_nota_fiscal_int_w, 
      nr_seq_nota_fiscal_w, 
      nr_sequencia_nf_w, 
      coalesce(qt_material_w,0), 
      qt_peso_item_w, 
      qt_peso_item_w, 
      coalesce(pr_desconto_pagto_w,0), 
      coalesce(vl_desc_financ_w,0), 
      coalesce(trunc(vl_desconto_w,2),0), 
      0, 
      0, 
      0, 
      coalesce(vl_liquido_w,0), 
      0, 
      coalesce(vl_total_item_nf_w,0), 
      coalesce(trunc(vl_unitario_w,2),0));
   
    vl_total_base_icms_w  := coalesce(vl_total_base_icms_w,0) + coalesce(vl_base_icms_w,0);
    vl_total_base_ipi_w  := coalesce(vl_total_base_ipi_w,0) + coalesce(vl_base_ipi_w,0);
    vl_total_icms_w    := coalesce(vl_total_icms_w,0) + coalesce(vl_icms_w,0);
    vl_total_inss_w    := coalesce(vl_total_inss_w,0) + coalesce(vl_inss_w,0);
    vl_total_ipi_w    := coalesce(vl_total_ipi_w,0) + coalesce(vl_ipi_w,0);
    vl_total_iss_w    := coalesce(vl_total_iss_w,0) + coalesce(vl_iss_w,0);
 
  end  loop;
  close  c02;
 
  select  coalesce(sum(a.vl_unitario_item_nf),0) 
  into STRICT  vl_total_nota_w 
  from  nota_fiscal_item a 
  where  a.nr_sequencia    = nr_seq_nota_fiscal_w;
 
  if (coalesce(vl_total_icms_w,0)  <> 0) then 
 
    if (coalesce(vl_total_base_icms_w,0)  = 0) then 
 
      vl_base_calculo_w  := vl_total_nota_w;
 
    else 
 
      vl_base_calculo_w  := vl_total_base_icms_w;
 
    end if;
 
    CALL gerar_nota_fiscal_trib(  nr_seq_nota_fiscal_w, 
          'ICMS', 
          vl_base_calculo_w, 
          vl_total_icms_w, 
          nm_usuario_p, 
          'N');
 
  end if;
 
  if (coalesce(vl_total_inss_w,0)  <> 0) then 
 
    vl_base_calculo_w  := vl_total_nota_w;
 
    CALL gerar_nota_fiscal_trib(  nr_seq_nota_fiscal_w, 
          'INSS', 
          vl_base_calculo_w, 
          vl_total_inss_w, 
          nm_usuario_p, 
          'N');
 
  end if;
 
  if (coalesce(vl_total_ipi_w,0)  <> 0) then 
 
    if (coalesce(vl_total_base_ipi_w,0)  = 0) then 
 
      vl_base_calculo_w  := vl_total_nota_w;
 
    else 
 
      vl_base_calculo_w  := vl_total_base_ipi_w;
 
    end if;
 
    CALL gerar_nota_fiscal_trib(  nr_seq_nota_fiscal_w, 
          'IPI', 
          vl_base_calculo_w, 
          vl_total_ipi_w, 
          nm_usuario_p, 
          'N');
 
  end if;
 
  if (coalesce(vl_total_iss_w,0)  <> 0) then 
 
    vl_base_calculo_w  := vl_total_nota_w;
 
    CALL gerar_nota_fiscal_trib(  nr_seq_nota_fiscal_w, 
          'ISS', 
          vl_base_calculo_w, 
          vl_total_iss_w, 
          nm_usuario_p, 
          'N');
 
  end if;
 
  update  nota_fiscal 
  set  vl_total_nota    = vl_total_nota_w, 
    vl_mercadoria    = vl_total_nota_w, 
    dt_atualizacao_estoque  = clock_timestamp() 
  where  nr_sequencia    = nr_seq_nota_fiscal_w;
 
  update  w_imp_nota_fiscal 
  set  nr_seq_nota_fiscal  = nr_seq_nota_fiscal_w 
  where  nr_sequencia    = nr_seq_nota_w;
 
  CALL gerar_vencimento_nota_fiscal(nr_seq_nota_fiscal_w,nm_usuario_p);
 
  CALL gerar_titulo_receber_nfs(nr_seq_nota_fiscal_w,nm_usuario_p);
 
  select  max(a.nr_titulo) 
  into STRICT  nr_titulo_w 
  from  titulo_receber a 
  where  a.nr_seq_nf_saida  = nr_seq_nota_fiscal_w;
 
  update  titulo_receber 
  set    nr_seq_classe      = cd_tipo_cobranca_w, 
      nr_documento      = nr_documento_w, 
      nr_titulo_externo    = trim(both nr_titulo_externo_w), 
      dt_vencimento      = coalesce(dt_vencimento_w,dt_vencimento), 
      dt_pagamento_previsto  = coalesce(dt_vencimento_w,dt_pagamento_previsto) 
  where  nr_titulo        = nr_titulo_w;
  
 
  if (cd_portador_tit_w IS NOT NULL AND cd_portador_tit_w::text <> '') and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then 
   
    select  max(a.cd_tipo_portador) 
    into STRICT  cd_tipo_portador_w 
    from  portador a 
    where  a.cd_portador = cd_portador_tit_w;
     
    if (cd_tipo_portador_w IS NOT NULL AND cd_tipo_portador_w::text <> '') then 
     
      update  titulo_receber 
      set    cd_tipo_portador  = cd_tipo_portador_w, 
          cd_portador      = cd_portador_tit_w 
      where  nr_titulo      = nr_titulo_w;
       
      if (ie_tipo_titulo_w IS NOT NULL AND ie_tipo_titulo_w::text <> '') then 
       
        update  titulo_receber 
        set    ie_tipo_titulo  = ie_tipo_titulo_w 
        where  nr_titulo    = nr_titulo_w;
       
      end if;
     
    end if;
   
  end if;
   
  if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then 
   
    select  min(a.nr_item_nf) 
    into STRICT  nr_item_nf_seq_w 
    from  nota_fiscal_item a 
    where  a.nr_sequencia  = nr_seq_nota_fiscal_w 
    and    a.vl_desc_financ <> 0;
     
    if (nr_item_nf_seq_w IS NOT NULL AND nr_item_nf_seq_w::text <> '') then 
     
      select  max(a.vl_desc_financ) 
      into STRICT  vl_desc_financ_tit_w 
      from  nota_fiscal_item a 
      where  a.nr_sequencia  = nr_seq_nota_fiscal_w 
      and    a.nr_item_nf  = nr_item_nf_seq_w;
       
      if (vl_desc_financ_tit_w IS NOT NULL AND vl_desc_financ_tit_w::text <> '') then 
 
        update  titulo_receber 
        set    vl_desc_previsto  = vl_desc_financ_tit_w, 
            dt_limite_desconto  = dt_vencimento 
        where  nr_titulo      = nr_titulo_w;
       
      end if;
     
    end if;
   
  -- add juliana lana em 25/03/2015 gera tributos! 
   CALL GERAR_IMPOSTO_NF( nr_seq_nota_fiscal_w, 
  nm_usuario_p, null, null, null, 'C' );
  
  end if;
 
  open  c03;
  loop 
  fetch  c03 into 
    ds_mensagem_w;
  EXIT WHEN NOT FOUND; /* apply on c03 */
 
    CALL gerar_mensagem_tit_rec(  nr_titulo_w, 
          ds_mensagem_w, 
          null, 
          nm_usuario_p, 
          'N');
 
  end  loop;
  close  c03;
 
end  loop;
close  c01;
 
update  w_imp_lote_nota_fiscal 
set  dt_confirmacao  = clock_timestamp(), 
  dt_atualizacao  = clock_timestamp(), 
  nm_usuario  = nm_usuario_p 
where  nr_sequencia  = nr_seq_lote_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE confirmar_lote_fatura (nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

