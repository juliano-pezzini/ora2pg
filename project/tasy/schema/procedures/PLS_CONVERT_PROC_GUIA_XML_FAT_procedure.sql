-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_convert_proc_guia_xml_fat (nr_seq_conta_p pls_conta.nr_sequencia%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, cd_procedimento_conv_p INOUT pls_conv_proc_fat_xml.cd_proc_envio%type, ds_procedimento_conv_p INOUT pls_conv_proc_fat_xml.ds_proc_envio%type, nr_seq_regra_p INOUT pls_conv_proc_fat_xml.nr_sequencia%type, cd_tab_item_p INOUT pls_conv_proc_fat_xml.cd_tab_item%type) AS $body$
DECLARE


cd_grupo_proc_w			procedimento.cd_grupo_proc%type;
nr_seq_plano_w			pls_segurado.nr_seq_plano%type;
nr_seq_contrato_w		pls_segurado.nr_seq_contrato%type;
nr_seq_intercambio_w		pls_segurado.nr_seq_intercambio%type;
cd_area_procedimento_w		especialidade_proc.cd_area_procedimento%type;
cd_especialidade_w		grupo_proc.cd_especialidade%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
nr_seq_congenere_w		pls_protocolo_conta.nr_seq_congenere%type;

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Gerar a conversão dos procedimentos na geração das guias em XML na mensalidade
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
C01 CURSOR FOR
	SELECT	/*+USE_CONCAT*/		nr_sequencia,
		cd_proc_envio,
		ds_proc_envio,
		cd_tab_item
	from	pls_conv_proc_fat_xml
	where	clock_timestamp() between dt_inicio_vigencia_ref and dt_fim_vigencia_ref
	and	ie_situacao = 'A'
	and	((nr_seq_congenere	= nr_seq_congenere_w) 		or (coalesce(nr_seq_congenere::text, '') = ''))
	and	((cd_area_procedimento	= cd_area_procedimento_w) 	or (coalesce(cd_area_procedimento::text, '') = ''))
	and	((cd_especialidade	= cd_especialidade_w)		or (coalesce(cd_especialidade::text, '') = ''))
	and	((cd_grupo_proc		= cd_grupo_proc_w)		or (coalesce(cd_grupo_proc::text, '') = ''))
	and	((cd_procedimento	= cd_procedimento_p)		or (coalesce(cd_procedimento::text, '') = ''))
	and	((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced::text, '') = '') or (ie_origem_proced = ie_origem_proced_w))
	and	((nr_seq_prestador	= nr_seq_prestador_p)		or (coalesce(nr_seq_prestador::text, '') = ''))
	and	((nr_seq_plano	        = nr_seq_plano_w)		or (coalesce(nr_seq_plano::text, '') = ''))
	and	((nr_seq_contrato       = nr_seq_contrato_w)		or (coalesce(nr_seq_contrato::text, '') = ''))
	and	((nr_seq_intercambio    = nr_seq_intercambio_w)		or (coalesce(nr_seq_intercambio::text, '') = ''))
	and	((nr_seq_pagador        = nr_seq_pagador_p)		or (coalesce(nr_seq_pagador::text, '') = ''))
	and 	((pls_se_grupo_preco_contrato(nr_seq_grupo_contrato, nr_seq_contrato_w,nr_seq_intercambio_w) = 'S') or (coalesce(nr_seq_grupo_contrato::text, '') = ''))
	and	((exists (SELECT	1
				from	pls_preco_grupo_prestador	a,
					pls_preco_prestador		b
				where	b.nr_seq_grupo		= a.nr_sequencia
				and	a.nr_sequencia		= nr_seq_grupo_prestador
				and	b.nr_seq_prestador	= nr_seq_prestador_p
				and	a.ie_situacao		= 'A')) or (coalesce(nr_seq_grupo_prestador::text, '') = ''))
	order by coalesce(nr_seq_congenere,0) desc,
		coalesce(cd_area_procedimento,0) desc,
		coalesce(cd_especialidade,0) desc,
		coalesce(cd_grupo_proc,0) desc,
		coalesce(cd_procedimento,0) desc,
		coalesce(nr_seq_prestador,0) desc,
		coalesce(nr_seq_plano,0) desc,
		coalesce(nr_seq_contrato,0) desc,
		coalesce(nr_seq_intercambio,0) desc,
		coalesce(nr_seq_pagador,0) desc,
		coalesce(nr_seq_grupo_contrato,0) desc;

BEGIN

select	max(nr_seq_plano),
	max(nr_seq_contrato),
	max(nr_seq_intercambio)
into STRICT	nr_seq_plano_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;

SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;


select	max(a.nr_seq_congenere)
into STRICT	nr_seq_congenere_w
from	pls_conta_proc c,
	pls_conta b,
	pls_protocolo_conta a
where	a.nr_sequencia = b.nr_seq_protocolo
and	b.nr_sequencia = c.nr_seq_conta
and	b.nr_sequencia = nr_seq_conta_p;

for r_c01_w in c01 loop

	cd_tab_item_p := r_c01_w.cd_tab_item;
	nr_seq_regra_p := r_c01_w.nr_sequencia;
	cd_procedimento_conv_p := r_c01_w.cd_proc_envio;
	ds_procedimento_conv_p := r_c01_w.ds_proc_envio;

	exit;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_convert_proc_guia_xml_fat (nr_seq_conta_p pls_conta.nr_sequencia%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, cd_procedimento_conv_p INOUT pls_conv_proc_fat_xml.cd_proc_envio%type, ds_procedimento_conv_p INOUT pls_conv_proc_fat_xml.ds_proc_envio%type, nr_seq_regra_p INOUT pls_conv_proc_fat_xml.nr_sequencia%type, cd_tab_item_p INOUT pls_conv_proc_fat_xml.cd_tab_item%type) FROM PUBLIC;

