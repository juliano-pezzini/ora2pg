-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agserv_atualiza_agendmto_orc ( nr_seq_orc_pac_p bigint, nr_seq_agenda_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text) AS $body$
DECLARE


ie_reservado_w			varchar(1);
cd_convenio_w			integer;
cd_categoria_w			bigint;
cd_pessoa_fisica_w		varchar(10);
cd_procedimento_w		bigint;
qt_procedimento_w		double precision;
nr_seq_agenda_cons_proc_w	bigint;
cd_plano_w			varchar(10);
nr_seq_proc_interno_w		bigint;
nr_Seq_agenda_w         	agenda_consulta.nr_sequencia%type;
ie_status_Agenda_w      	varchar(3);
ie_origem_proced_w		bigint;
nr_seq_exame_w			bigint;
cd_material_exame_w		orcamento_paciente_proc.cd_material_exame%type;
cd_procedencia_w		orcamento_paciente.cd_procedencia%type;
ie_atualizar_w			varchar(1) := 'N';
cd_tipo_acomodacao_w		orcamento_paciente. cd_tipo_acomodacao %type;
ie_tipo_atendimento_w		orcamento_paciente. ie_tipo_atendimento %type;
cd_medico_w			orcamento_paciente. cd_medico %type;
ie_carater_inter_sus_w		orcamento_paciente. ie_carater_inter_sus %type;
cd_doenca_cid_w			orcamento_paciente. cd_doenca_cid %type;
cd_pessoa_responsavel_w		orcamento_paciente. cd_pessoa_responsavel %type;
cd_usuario_convenio_w		orcamento_paciente. cd_usuario_convenio %type;
nr_doc_guia_w			orcamento_paciente. nr_doc_guia %type;

C01 CURSOR FOR
	SELECT	b.cd_procedimento,
		b.qt_procedimento,
		b.nr_seq_proc_interno,
		b.ie_origem_proced,
		b.nr_seq_exame,
		b.cd_material_exame
	FROM	orcamento_paciente a,
		orcamento_paciente_proc b
	WHERE	a.nr_sequencia_orcamento = b.nr_sequencia_orcamento
	AND	a.nr_sequencia_orcamento = nr_seq_orc_pac_p;


BEGIN

/*SELECT  NVL(MAX(a.nr_sequencia),0),
        MAX(a.ie_status_agenda)
INTO    nr_seq_agenda_w,
        ie_status_Agenda_w
FROM    agenda_consulta a
WHERE   a.cd_agenda        = cd_agenda_p
AND     a.dt_agenda = dt_agenda_p;*/
ie_reservado_w := Reservar_horario_agecons(	nr_seq_agenda_p, nm_usuario_p, ie_reservado_w);

IF (ie_reservado_w = 'N')	THEN
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(262556);
END IF;

IF (nr_seq_orc_pac_p IS NOT NULL AND nr_seq_orc_pac_p::text <> '') THEN
	SELECT	max(a.cd_convenio),
			max(a.cd_categoria),
			max(a.cd_pessoa_fisica),
			max(a.cd_plano),
			max(a.cd_procedencia)
	INTO STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_pessoa_fisica_w,
			cd_plano_w,
			cd_procedencia_w
	FROM	orcamento_paciente a
	WHERE	a.nr_sequencia_orcamento = nr_seq_orc_pac_p;

	UPDATE	agenda_consulta a
	SET	a.cd_convenio	 	= cd_convenio_w,
		a.cd_categoria 	 	= cd_categoria_w,
		a.cd_pessoa_fisica	= cd_pessoa_fisica_w,
		a.cd_plano			= cd_plano_w,
		a.ie_status_agenda	= 'N',
		a.nm_usuario		= nm_usuario_p,
		a.dt_atualizacao	= clock_timestamp(),
		a.nm_usuario_acesso  = NULL,
		a.cd_procedencia	= cd_procedencia_w
	WHERE	a.nr_sequencia	= nr_seq_agenda_p;
	
	COMMIT;
END IF;	

OPEN C01;
LOOP
FETCH C01 INTO
	cd_procedimento_w,
	qt_procedimento_w,
	nr_seq_proc_interno_w,
	ie_origem_proced_w,
	nr_seq_exame_w,
	cd_material_exame_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	BEGIN
	IF (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '')	THEN
		ie_atualizar_w := 'S';

		SELECT		nextval('agenda_consulta_proc_seq')
		INTO STRICT		nr_seq_agenda_cons_proc_w
		;

		INSERT	INTO	agenda_consulta_proc(	nr_sequencia,
							nr_seq_agenda,
							cd_procedimento,
							ie_origem_proced,
							dt_atualizacao,
							nm_usuario,
							ie_executar_proc,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc_interno,
							nr_seq_exame,
							qt_procedimento,
							cd_material_exame,
							ie_regra,
							ie_glosa,
							nr_seq_regra
							)
		VALUES (
							nr_seq_agenda_cons_proc_w,
							nr_seq_agenda_p,
							cd_procedimento_w,
							ie_origem_proced_w,
							clock_timestamp(),
							nm_usuario_p,
							'S',
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_interno_w,
							nr_seq_exame_w,
							qt_procedimento_w,
							cd_material_exame_w,
							NULL,
							NULL,
							NULL);
	END IF;

	END;
END LOOP;
CLOSE C01;

if (ie_atualizar_w = 'S') then
	select 	max(a.CD_TIPO_ACOMODACAO),
		max(a.IE_TIPO_ATENDIMENTO),
		max(a.CD_MEDICO),
		max(a.IE_CARATER_INTER_SUS),
		max(a.CD_DOENCA_CID),
		max(a.CD_PESSOA_RESPONSAVEL),
		max(a.CD_USUARIO_CONVENIO),
		max(a.NR_DOC_GUIA)
	into STRICT	cd_tipo_acomodacao_w,
	        ie_tipo_atendimento_w,
	        cd_medico_w,
	        ie_carater_inter_sus_w,
	        cd_doenca_cid_w,
	        cd_pessoa_responsavel_w,
	        cd_usuario_convenio_w,
	        nr_doc_guia_w
	from 	orcamento_paciente a
	where	a.nr_sequencia_orcamento = nr_seq_orc_pac_p;

	update 	agenda_consulta
	set	cd_tipo_acomodacao	= coalesce(cd_tipo_acomodacao_w, cd_tipo_acomodacao),
	        ie_tipo_atendimento	= coalesce(ie_tipo_atendimento_w, ie_tipo_atendimento),
	        cd_medico		= coalesce(cd_medico_w, cd_medico),
	        ie_carater_inter_sus	= coalesce(ie_carater_inter_sus_w, ie_carater_inter_sus),
	        cd_cid			= coalesce(cd_doenca_cid_w, cd_cid),
	        cd_pessoa_responsavel	= coalesce(cd_pessoa_responsavel_w, cd_pessoa_responsavel),
		nm_pessoa_responsavel	= CASE WHEN cd_pessoa_responsavel_w = NULL THEN  cd_pessoa_responsavel  ELSE obter_nome_pf(cd_pessoa_responsavel_w) END ,
	        cd_usuario_convenio	= coalesce(cd_usuario_convenio_w, cd_usuario_convenio),
	        nr_doc_convenio		= coalesce(nr_doc_guia_w, nr_doc_convenio),
		dt_atualizacao 		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where 	nr_sequencia = nr_seq_agenda_p;
end if;

COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agserv_atualiza_agendmto_orc ( nr_seq_orc_pac_p bigint, nr_seq_agenda_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text) FROM PUBLIC;

