-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_conciliar_movto (nr_seq_concil_p bigint, cd_conta_contabil_p text) AS $body$
DECLARE




i			integer;



ds_compl_historico_w	ctb_movimento.ds_compl_historico%type;
dt_movimento_final_w	timestamp;
dt_movimento_inicial_w	timestamp;
dt_movimento_w		timestamp;
nr_lote_contabil_w	lote_contabil.nr_lote_contabil%type;
nr_seq_agrupamento_w	ctb_movimento.nr_seq_agrupamento%type;
nr_seq_movimento_w 		ctb_movimento.nr_sequencia%type;
nr_documento_w			ctb_movimento.nr_documento%type;
nr_seq_reg_concil_w		ctb_movimento.nr_seq_reg_concil%type;
vl_movimento_w			ctb_movimento.vl_movimento%type;



c_movimentos CURSOR FOR
	SELECT	a.nr_sequencia,
			a.nr_lote_contabil,
			a.dt_movimento,
			a.cd_conta_debito,
			a.cd_conta_credito,
			a.cd_historico,
			a.ds_compl_historico,
			a.nr_seq_agrupamento,
			a.vl_movimento,
			a.nr_documento,
			a.nr_seq_reg_concil
	from	ctb_movimento a
	where	a.nr_seq_reg_concil	= nr_seq_concil_p
	and		a.ie_status_concil	= 'NC'
	and		coalesce(cd_conta_debito,cd_conta_credito) = cd_conta_contabil_p
	order by a.nr_lote_contabil,a.dt_movimento;



c_contrapartida_agrup CURSOR FOR
	SELECT	a.nr_sequencia
	from	ctb_movimento a
	where	a.nr_lote_contabil		= nr_lote_contabil_w
	and		a.nr_seq_agrupamento	= nr_seq_agrupamento_w
	and		a.nr_sequencia		<> nr_seq_movimento_w
	and		a.dt_movimento between dt_movimento_inicial_w and dt_movimento_final_w;



c_contrapartida_hist CURSOR FOR
	SELECT	a.nr_sequencia
	from	ctb_movimento a
	where	a.nr_lote_contabil		= nr_lote_contabil_w
	and		a.ds_compl_historico	= ds_compl_historico_w
	and		a.nr_sequencia		<> nr_seq_movimento_w
	and		a.dt_movimento between dt_movimento_inicial_w and dt_movimento_final_w;



c_contrapartida_doc CURSOR FOR
		SELECT	a.nr_sequencia
		from	ctb_movimento a
		where	a.nr_lote_contabil		= nr_lote_contabil_w
		and		a.nr_documento			= nr_documento_w
		and		a.nr_sequencia		<> nr_seq_movimento_w
		and		a.dt_movimento between dt_movimento_inicial_w and dt_movimento_final_w;



type reg_movto is table of c_movimentos%RowType index by integer;

type reg_c_movimentos is table of c_movimentos%RowType;
vetMovto 		reg_c_movimentos;
movimento_w		reg_movto;
BEGIN

i	:= 0;

open c_movimentos;
loop
fetch c_movimentos bulk collect into vetMovto limit 1000;

	for j in 1..vetMovto.Count loop

		begin
		i	:= i +1;

		movimento_w[i].nr_sequencia		:= vetMovto[j].nr_sequencia;
		movimento_w[i].nr_lote_contabil	:= vetMovto[j].nr_lote_contabil;
		movimento_w[i].dt_movimento		:= vetMovto[j].dt_movimento;
		movimento_w[i].cd_conta_debito	:= vetMovto[j].cd_conta_debito;
		movimento_w[i].cd_conta_credito	:= vetMovto[j].cd_conta_credito;
		movimento_w[i].cd_historico		:= vetMovto[j].cd_historico;
		movimento_w[i].ds_compl_historico	:= vetMovto[j].ds_compl_historico;
		movimento_w[i].nr_seq_agrupamento	:= vetMovto[j].nr_seq_agrupamento;
		movimento_w[i].vl_movimento		:= vetMovto[j].vl_movimento;
		movimento_w[i].nr_documento		:= vetMovto[j].nr_documento;
		movimento_w[i].nr_seq_reg_concil		:= vetMovto[j].nr_seq_reg_concil;

		end;
	end loop;
EXIT WHEN NOT FOUND; /* apply on c_movimentos */
end loop;
close c_movimentos;


for i in 1..movimento_w.Count loop

	begin
	nr_seq_movimento_w 		:= movimento_w[i].nr_sequencia;
	nr_lote_contabil_w		:= movimento_w[i].nr_lote_contabil;
	nr_seq_agrupamento_w	:= movimento_w[i].nr_seq_agrupamento;
	ds_compl_historico_w	:= movimento_w[i].ds_compl_historico;
	dt_movimento_w			:= movimento_w[i].dt_movimento;
	dt_movimento_inicial_w	:= trunc(dt_movimento_w,'dd');
	dt_movimento_final_w	:= fim_dia(dt_movimento_w);
	nr_documento_w			:= movimento_w[i].nr_documento;
	nr_seq_reg_concil_w		:= movimento_w[i].nr_seq_reg_concil;

	for vet in c_contrapartida_agrup loop
		begin

		update	ctb_movimento
		set		nr_seq_movto_partida	= movimento_w[i].nr_sequencia,
				ie_status_concil		= 'C',
				nr_seq_reg_concil		=	nr_seq_reg_concil_w
		where	nr_sequencia			= vet.nr_sequencia
		and		coalesce(nr_seq_movto_partida::text, '') = '';
		end;

		commit;

	end loop;

	for vet in c_contrapartida_hist loop

		begin

		update	ctb_movimento
		set		nr_seq_movto_partida	= movimento_w[i].nr_sequencia,
				ie_status_concil		= 'C',
				nr_seq_reg_concil		= nr_seq_reg_concil_w
		where	nr_sequencia			= vet.nr_sequencia
		and		coalesce(nr_seq_movto_partida::text, '') = '';
		end;

		commit;

	end loop;

	for vet in c_contrapartida_doc loop
		begin

		update	ctb_movimento
		set		nr_seq_movto_partida	= movimento_w[i].nr_sequencia,
				ie_status_concil		= 'C',
				nr_seq_reg_concil		= nr_seq_reg_concil_w
		where	nr_sequencia			= vet.nr_sequencia
		and		coalesce(nr_seq_movto_partida::text, '') = '';
		end;

		commit;

	end loop;

	select 	sum(vl_movimento)
	into STRICT	vl_movimento_w
	from	ctb_movimento
	where	nr_seq_movto_partida = movimento_w[i].nr_sequencia;

	if (vl_movimento_w = movimento_w[i].vl_movimento)then
		update	ctb_movimento
		set		ie_status_concil		= 'C'
		where	nr_sequencia			= movimento_w[i].nr_sequencia;
	end if;

	end;
end loop;


commit;

CALL ctb_atualizar_concil(nr_seq_concil_p);


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_conciliar_movto (nr_seq_concil_p bigint, cd_conta_contabil_p text) FROM PUBLIC;

