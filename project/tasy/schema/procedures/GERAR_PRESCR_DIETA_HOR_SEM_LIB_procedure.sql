-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_dieta_hor_sem_lib ( nr_prescricao_p bigint, nr_seq_item_p bigint, cd_perfil_p bigint, ie_liberacao_p text, cd_refeicao_p text, ie_modificar_p text, nm_usuario_p text, ie_tipo_item_p text default null) AS $body$
DECLARE


cd_refeicao_w			varchar(15);
ds_horario_w			varchar(255);
nr_atendimento_w		bigint;
dt_inicio_prescr_w		timestamp;
dt_inicio_prescr_aux_w 		timestamp;
dt_validade_prescr_w		timestamp;
dt_horario_ref_w		timestamp;
dt_fim_w			timestamp;
dt_inicio_w			timestamp;
ie_gerar_horario_w		varchar(1) := 'S';
qt_horario_w			bigint;
ie_tipo_item_w			varchar(5);
nr_seq_horario_w		bigint;
nr_seq_dieta_w			bigint;
ds_observacao_w			varchar(4000);
ie_lib_individual_w		varchar(1);
VarGerarHorDieta_w		varchar(1);
ie_urgencia_w			varchar(1);
dt_suspensao_progr_w		timestamp;
ie_inclusao_mod_w		varchar(1) := 'N';
ie_inclusao_subs_w		varchar(1) := 'N';
nr_seq_alter_w			bigint;
ds_obs_evento_w			varchar(2000);
ie_conforme_intervalo_w		varchar(1);
k				integer;
ds_horarios_padr_w		varchar(2000);
cd_dieta_w			bigint;
ie_dose_espec_agora_w		varchar(1);
hr_dose_especial_w		varchar(5);
dt_lib_medico_w			timestamp;
dt_prescricao_w			timestamp;
qt_jejum_w			bigint;
ie_contem_jejum_nut_w		varchar(1);
qt_dia_adic_w			bigint := 0;
ie_horarios_servico_w		varchar(1);
nr_seq_servico_w		bigint;
dt_fim_zona_cinza_w		timestamp;
dt_inicio_prescr_dia_w		timestamp;
ie_zona_cinza_w			varchar(1);
ie_gera_horario_serv_w		varchar(1):= 'S';
nr_horas_validade_w		integer;
cd_funcao_origem_w		funcao.cd_funcao%type;
ie_gerar_proc_gedipa_job_w	parametros_farmacia.ie_gerar_proc_gedipa_job%type;
ie_gerar_proc_dieta_w		parametros_farmacia.ie_gerar_proc_dieta%type;

c01 CURSOR FOR
SELECT	a.cd_refeicao,
	padroniza_horario(a.ds_horarios),
	b.nr_sequencia,
	substr(b.ds_observacao,1,255),
	b.dt_suspensao_progr
from	horario_refeicao_dieta a,
	prescr_dieta b,
	prescr_medica k
where	((b.cd_dieta = a.cd_dieta) or ((coalesce(a.cd_dieta::text, '') = '') and (obter_se_dieta_hor_excl_ref(b.cd_dieta,a.cd_refeicao) = 'N')))
and	k.nr_prescricao = nr_prescricao_p
and	((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
and	k.nr_prescricao	= b.nr_prescricao
and	coalesce(k.dt_suspensao::text, '') = ''
and (VarGerarHorDIeta_w = 'N')
and	coalesce(b.ie_suspenso,'N') <> 'S'
and	coalesce(cd_refeicao_p,a.cd_refeicao) = a.cd_refeicao
and	((ie_conforme_intervalo_w = 'N') or (exists (	SELECT	1
			from	horario_refeicao_dieta y
			where	y.cd_dieta = b.cd_dieta)) or (coalesce(b.ds_horarios::text, '') = ''))
and	((ie_tipo_item_w = 'D') or (coalesce(ie_tipo_item_w::text, '') = ''))
and		coalesce(b.ie_gerar_horario, 'S') <> 'N'
order by
	a.nr_sequencia;

c02 CURSOR FOR	
SELECT	padroniza_horario_prescr(b.ds_horarios, CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,to_char(a.dt_inicio_prescr,'hh24:mi')),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END ),
	b.nr_sequencia,
	substr(b.ds_observacao,1,255),
	b.dt_suspensao_progr,
	b.ie_dose_espec_agora,
	b.hr_dose_especial,
	a.dt_liberacao_medico,
	trunc(dt_prescricao,'mi'),
	coalesce(b.ie_urgencia,'N')
FROM prescr_medica a, prescr_dieta b
LEFT OUTER JOIN intervalo_prescricao c ON (b.cd_intervalo = c.cd_intervalo)
WHERE a.nr_prescricao	= b.nr_prescricao  and a.nr_prescricao	= nr_prescricao_p and ((b.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0)) and (not exists (	SELECT	1
			from	horario_refeicao_dieta y
			where	y.cd_dieta = b.cd_dieta) or (VarGerarHorDieta_w = 'S')) and (not exists (	select	1
			from	prescr_dieta_hor x
			where	x.nr_prescricao		= a.nr_prescricao
			and	x.nr_seq_dieta		= b.nr_sequencia
			and	coalesce(x.dt_suspensao::text, '') = ''
			and	Obter_se_horario_liberado(x.dt_lib_horario, x.dt_horario) = 'S')) and coalesce(b.ie_suspenso,'N') <> 'S' and coalesce(a.dt_suspensao::text, '') = '' and ie_conforme_intervalo_w = 'S' and (b.ds_horarios IS NOT NULL AND b.ds_horarios::text <> '') and ((ie_tipo_item_w = 'D') or (coalesce(ie_tipo_item_w::text, '') = '')) and coalesce(b.ie_gerar_horario, 'S') <> 'N' order by
	b.nr_sequencia;	
	
c03 CURSOR FOR
SELECT	dt_horario,
	nr_sequencia,
	ie_zona_cinza
from	rep_servico
where	nr_prescricao 	= nr_prescricao_p
and	nr_seq_dieta	= nr_seq_dieta_w
and	((dt_suspensao_progr_w > dt_horario) or (coalesce(dt_suspensao_progr_w::text, '') = ''))
and	dt_horario	between dt_inicio_prescr_aux_w and dt_validade_prescr_w;

c_diet_process CURSOR FOR
SELECT	a.nr_sequencia nr_seq_dieta_w
from	prescr_dieta a,
		prescr_dieta_hor b
where	a.nr_prescricao = b.nr_prescricao
and		a.nr_sequencia	= b.nr_seq_dieta
and		a.nr_prescricao	= nr_prescricao_p
and		b.nr_prescricao	= nr_prescricao_p
and		(b.dt_lib_horario IS NOT NULL AND b.dt_lib_horario::text <> '');

BEGIN

ie_contem_jejum_nut_w := obter_param_usuario(924, 854, cd_perfil_p, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_contem_jejum_nut_w);
VarGerarHorDieta_w := obter_param_usuario(924, 1123, cd_perfil_p, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, VarGerarHorDieta_w);

select	coalesce(max(a.ie_gerar_proc_gedipa_job), 'N') ie_gerar_proc_gedipa_job,
		coalesce(max(a.ie_gerar_proc_dieta),'N') ie_gerar_proc_dieta
into STRICT	ie_gerar_proc_gedipa_job_w,
		ie_gerar_proc_dieta_w
from	parametros_farmacia a
where	a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	/* obter dados prescricao */

	if (ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '') then
		ie_tipo_item_w := ie_tipo_item_p;
	else
		ie_tipo_item_w := 'D';
	end if;
	select	coalesce(max(b.nr_sequencia),0)
	into STRICT	nr_seq_alter_w
	from	prescr_dieta_hor a,
		prescr_mat_alteracao b
	where	a.nr_prescricao = nr_prescricao_p
	and	a.nr_sequencia	= b.nr_seq_horario_dieta
	and	b.nr_prescricao	= a.nr_prescricao
	and	b.ie_alteracao	= 33
	and	((a.nr_seq_dieta = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
	and	coalesce(a.dt_lib_horario::text, '') = ''
	and	((a.cd_refeicao = cd_refeicao_p) or (coalesce(cd_refeicao_p,0) = 0));
	
	if (nr_seq_alter_w > 0) then
		
		select	max(ds_observacao)
		into STRICT	ds_obs_evento_w
		from	prescr_mat_alteracao
		where	nr_sequencia = nr_seq_alter_w;
		
		ie_inclusao_mod_w := 'S';
		
	else

		select	coalesce(max(b.nr_sequencia),0)
		into STRICT	nr_seq_alter_w
		from	prescr_dieta_hor a,
			prescr_mat_alteracao b
		where	a.nr_prescricao = nr_prescricao_p
		and	a.nr_sequencia	= b.nr_seq_horario_dieta
		and	b.nr_prescricao	= a.nr_prescricao
		and	b.ie_alteracao	= 32
		and	((a.nr_seq_dieta = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
		and	coalesce(a.dt_lib_horario::text, '') = ''
		and	((a.cd_refeicao = cd_refeicao_p) or (coalesce(cd_refeicao_p,0) = 0));
		
		if (nr_seq_alter_w > 0) then
		
			select	max(ds_observacao)
			into STRICT	ds_obs_evento_w
			from	prescr_mat_alteracao
			where	nr_sequencia = nr_seq_alter_w;
		
			ie_inclusao_subs_w := 'S';
		end if;	
		
	end if;	
	
	delete	
	from	prescr_dieta_hor
	where	nr_prescricao = nr_prescricao_p
	and	((nr_seq_dieta = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
	and	coalesce(dt_lib_horario::text, '') = ''
	and	coalesce(dt_suspensao::text, '') = ''
	and	coalesce(coalesce(cd_refeicao_p,cd_refeicao),'XPTO') = coalesce(cd_refeicao,'XPTO');
	
	select	nr_atendimento,
		dt_inicio_prescr,
		dt_validade_prescr,
		nr_horas_validade,
		cd_funcao_origem
	into STRICT	nr_atendimento_w,
		dt_inicio_prescr_w,
		dt_validade_prescr_w,
		nr_horas_validade_w,
		cd_funcao_origem_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;
	
	if (nr_horas_validade_w	> 24) then
		dt_fim_zona_cinza_w	:= (dt_validade_prescr_w - 1);
		dt_inicio_prescr_dia_w	:= dt_fim_zona_cinza_w + 1/1440;
	else
		dt_inicio_prescr_dia_w	:= dt_inicio_prescr_w;
	end if;	
	
	ie_lib_individual_w := obter_param_usuario(924, 530, cd_perfil_p, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_lib_individual_w);
	ie_conforme_intervalo_w := obter_param_usuario(924, 710, cd_perfil_p, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_conforme_intervalo_w);	
	

	/* obter horarios */

	open c01;
	loop
	fetch c01 into	
		cd_refeicao_w,
		ds_horario_w,
		nr_seq_dieta_w,
		ds_observacao_w,
		dt_suspensao_progr_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		dt_inicio_prescr_aux_w	:= dt_inicio_prescr_w;
		if (position('A' in ds_horario_w) > 0) then
			dt_inicio_prescr_aux_w := dt_inicio_prescr_w + 1;
			ds_horario_w	:= replace(ds_horario_w,'A','');
		end if;
		/* gerar horario refeicao */

		dt_horario_ref_w := pkg_date_utils.get_time(dt_inicio_prescr_aux_w, ds_horario_w, 0);

		/* validar data x data atual */

		if (dt_horario_ref_w < clock_timestamp()) and (dt_horario_ref_w+1<= dt_validade_prescr_w) then
			dt_horario_ref_w := dt_horario_ref_w + 1;
		/*elsif	(dt_horario_ref_w < sysdate) then
			ie_gerar_horario_w := 'N';*/
		elsif (dt_horario_ref_w > clock_timestamp()) and (dt_horario_ref_w < dt_inicio_prescr_aux_w) then /* Rafael 6/6/8 OS94873  */
			dt_horario_ref_w 	:= dt_horario_ref_w + 1;
			ie_gerar_horario_w 	:= 'S';
		else
			ie_gerar_horario_w := 'S';
		end if;

		if (dt_suspensao_progr_w > dt_horario_ref_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
		
			/* validar horario x horarios ja gerados */

			select	count(*)
			into STRICT	qt_horario_w
			from	prescr_dieta_hor a,
				prescr_medica b
			where	a.nr_prescricao	= b.nr_prescricao
			and	a.dt_horario = dt_horario_ref_w
			and	coalesce(a.dt_suspensao::text, '') = ''
			and	coalesce(b.dt_suspensao::text, '') = ''
			and 	b.nr_prescricao	= nr_prescricao_p
			and	not exists (SELECT 1 from prescr_dieta x where x.nr_prescricao = b.nr_prescricao and (x.dt_suspensao IS NOT NULL AND x.dt_suspensao::text <> ''))			
			and	b.nr_atendimento	= nr_Atendimento_w
			and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

			/* gerar horario */

			if (ie_gerar_horario_w = 'S') and
				((qt_horario_w = 0) or (ie_modificar_p = 'S')) and (dt_horario_ref_w < dt_validade_prescr_w) and (dt_horario_ref_w >= dt_inicio_prescr_aux_w) then
				/* obter sequencia */

				

				select	nextval('prescr_dieta_hor_seq')
				into STRICT	nr_seq_horario_w
				;
				
				select	max(a.nr_sequencia)

				into STRICT	qt_jejum_w
				from	rep_jejum a,
					prescr_medica b
				where	dt_horario_ref_w between dt_inicio and (dt_fim - 1/1440)
				and	a.nr_prescricao		= b.nr_prescricao
				and	coalesce(b.dt_suspensao::text, '') = ''
				and	ie_liberacao_p = 'S'
				and	coalesce(a.ie_suspenso,'N') <> 'S'
				and	b.nr_atendimento	= nr_atendimento_w;
				



				insert into prescr_dieta_hor(
					nr_sequencia,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_atualizacao,
					nm_usuario,
					nr_prescricao,
					cd_refeicao,
					dt_horario,
					dt_fim_horario,
					dt_suspensao,
					nm_usuario_reaprazamento,
					qt_hor_reaprazamento,
					ie_aprazado,
					nr_seq_dieta,
					ds_observacao
					)
				values (
					nr_seq_horario_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_p,
					cd_refeicao_w,
					dt_horario_ref_w,
					null,
					null,
					null,
					null,
					'N',
					nr_seq_dieta_w,
					ds_observacao_w
					);				
			
				if (ie_contem_jejum_nut_w = 'N') and (coalesce(qt_jejum_w,0) > 0) then
					CALL REP_SUSPENDER_DIETA_VIGENTE(nr_atendimento_w, qt_jejum_w, nm_usuario_p);
				end if;	
			end if;
		end if;	
		end;
	end loop;
	close c01;	

	/* obter horarios */

	open c02;
	loop
	fetch c02 into
		ds_horarios_padr_w,
		nr_seq_dieta_w,
		ds_observacao_w,
		dt_suspensao_progr_w,
		ie_dose_espec_agora_w,
		hr_dose_especial_w,
		dt_lib_medico_w,
		dt_prescricao_w,
		ie_urgencia_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		dt_inicio_prescr_aux_w	:= dt_inicio_prescr_w;
		

		if (ie_dose_espec_agora_w = 'S') then
			begin
			dt_horario_ref_w	:= pkg_date_utils.get_time(dt_prescricao_w, hr_dose_especial_w, 0);
			

			/* validar data x data atual */

			if (dt_horario_ref_w < coalesce(dt_prescricao_w,clock_timestamp())) and (dt_horario_ref_w+1 <= dt_validade_prescr_w) then
				dt_horario_ref_w := dt_horario_ref_w + 1;
			/*elsif	(dt_horario_ref_w < nvl(dt_prescricao_w,sysdate)) then
				ie_gerar_horario_w := 'N';
/*			elsif	(dt_horario_ref_w > nvl(dt_prescricao_w,sysdate)) and
				(dt_horario_ref_w < dt_inicio_prescr_aux_w) then 
				dt_horario_ref_w 	:= dt_horario_ref_w + 1;
				ie_gerar_horario_w 	:= 'S';*/
			else
				ie_gerar_horario_w := 'S';
			end if;
			
			if (dt_suspensao_progr_w > dt_horario_ref_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then

				/* validar horario x horarios ja gerados */

				select	count(*)
				into STRICT	qt_horario_w
				from	prescr_dieta_hor a,
					prescr_dieta c,
					prescr_medica b
				where	a.nr_prescricao	= b.nr_prescricao
				and	a.dt_horario = dt_horario_ref_w
				and	c.nr_sequencia = a.nr_seq_dieta
				and	c.nr_Prescricao = b.nr_prescricao
				and	c.cd_dieta = cd_dieta_w
				and	coalesce(a.dt_suspensao::text, '') = ''
				and	coalesce(b.dt_suspensao::text, '') = ''
				and	b.nr_atendimento	= nr_atendimento_w
				and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';
							
				/* gerar horario */

				if (ie_gerar_horario_w = 'S') and
					((qt_horario_w = 0) or (ie_modificar_p = 'S')) and (dt_horario_ref_w >= coalesce(dt_prescricao_w,dt_inicio_prescr_aux_w)) then
					/* obter sequencia */

					select	nextval('prescr_dieta_hor_seq')
					into STRICT	nr_seq_horario_w
					;
					
					select	max(a.nr_sequencia)

					into STRICT	qt_jejum_w
					from	rep_jejum a,
						prescr_medica b
					where	dt_horario_ref_w between dt_inicio and (dt_fim - 1/1440)
					and	a.nr_prescricao		= b.nr_prescricao
					and	coalesce(b.dt_suspensao::text, '') = ''
					and	ie_liberacao_p = 'S'
					and	coalesce(a.ie_suspenso,'N') <> 'S'
					and	b.nr_atendimento	= nr_atendimento_w;
					
					select	max(dt_fim),
						max(dt_inicio)
					into STRICT	dt_fim_w,
						dt_inicio_w
					from	rep_jejum a,
						prescr_medica b
					where	dt_horario_ref_w between dt_inicio and dt_fim
					and	a.nr_prescricao		= b.nr_prescricao
					and	coalesce(b.dt_suspensao::text, '') = ''
					and	ie_liberacao_p = 'S'
					and	coalesce(a.ie_suspenso,'N') <> 'S'
					and	b.nr_atendimento	= nr_atendimento_w;
					begin
					if (dt_horario_ref_w < dt_fim_w) and (dt_horario_ref_w > dt_inicio_w) then
						dt_horario_ref_w := 	pkg_date_utils.get_DateTime(dt_fim_w, dt_horario_ref_w);
					end if;
					exception when others then
						dt_horario_ref_w	:= dt_horario_ref_w;
					end;
					



					insert into prescr_dieta_hor(
						nr_sequencia,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_atualizacao,
						nm_usuario,
						nr_prescricao,
						dt_horario,
						dt_fim_horario,
						dt_suspensao,
						nm_usuario_reaprazamento,
						qt_hor_reaprazamento,
						ie_aprazado,
						nr_seq_dieta,
						ds_observacao
						)
					values (
						nr_seq_horario_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_prescricao_p,
						dt_horario_ref_w,
						null,
						null,
						null,
						null,
						'N',
						nr_seq_dieta_w,
						ds_observacao_w
						);					
					
					if (ie_contem_jejum_nut_w = 'N') and (coalesce(qt_jejum_w,0) > 0) then
						CALL REP_SUSPENDER_DIETA_VIGENTE(nr_atendimento_w, qt_jejum_w, nm_usuario_p);
					end if;						

				end if;
			end if;
			end;
		else
			ds_horario_w	:= 	trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_lib_medico_w, dt_prescricao_w), clock_timestamp()), 'mi');
		end if;
		
		select	CASE WHEN count(nr_sequencia)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_horarios_servico_w
		from	rep_servico
		where	nr_prescricao 	= nr_prescricao_p
		and	nr_seq_dieta	= nr_seq_dieta_w;
		
		if (ie_horarios_servico_w = 'S') then
		
			open C03;
			loop
			fetch C03 into	
				dt_horario_ref_w,
				nr_seq_servico_w,
				ie_zona_cinza_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				ie_gera_horario_serv_w := 'S';
				
				/* validar horario x horarios ja gerados */

				select	count(*)
				into STRICT	qt_horario_w
				from	prescr_dieta_hor a,
					prescr_dieta c,
					prescr_medica b
				where	a.nr_prescricao	= b.nr_prescricao
				and	a.dt_horario = dt_horario_ref_w
				and	c.nr_sequencia = a.nr_seq_dieta
				and	c.nr_Prescricao = b.nr_prescricao
				and	c.cd_dieta = cd_dieta_w
				and	coalesce(a.dt_suspensao::text, '') = ''
				and	coalesce(b.dt_suspensao::text, '') = ''
				and	b.nr_atendimento	= nr_atendimento_w
				and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';
				
				if (qt_horario_w > 0) and (ie_modificar_p <> 'S') then
					ie_gera_horario_serv_w := 'N';
				else	
					select	count(*)
					into STRICT	qt_jejum_w
					from	rep_jejum a,
						prescr_medica b
					where	dt_horario_ref_w between dt_inicio and (dt_fim - 1/1440)
					and	a.nr_prescricao		= b.nr_prescricao
					and	coalesce(b.dt_suspensao::text, '') = ''
					and	ie_liberacao_p = 'S'
					and	coalesce(a.ie_suspenso,'N') <> 'S'
					and	b.nr_atendimento	= nr_atendimento_w;
					
					if (qt_jejum_w > 0) and (ie_contem_jejum_nut_w = 'N') then
						ie_gera_horario_serv_w := 'N';
					elsif	((ie_zona_cinza_w	= 'S' AND dt_horario_ref_w	between dt_inicio_prescr_w and dt_fim_zona_cinza_w) or
						 (ie_zona_cinza_w	= 'N' AND dt_horario_ref_w	between dt_inicio_prescr_dia_w and dt_validade_prescr_w)) then
						/* obter sequencia */

						select	nextval('prescr_dieta_hor_seq')
						into STRICT	nr_seq_horario_w
						;

						/* gerar registro */

						insert into prescr_dieta_hor(
							nr_sequencia,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							dt_atualizacao,
							nm_usuario,
							nr_prescricao,
							dt_horario,
							dt_fim_horario,
							dt_suspensao,
							nm_usuario_reaprazamento,
							qt_hor_reaprazamento,
							ie_aprazado,
							nr_seq_dieta,
							ds_observacao
							)
						values (
							nr_seq_horario_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_p,
							dt_horario_ref_w,
							null,
							null,
							null,
							null,
							'N',
							nr_seq_dieta_w,
							ds_observacao_w
							);
					else
						ie_gera_horario_serv_w	:= 'N';
					end if;	
				end if;
				
				if (ie_gera_horario_serv_w	= 'N') then
					delete	FROM rep_servico
					where	nr_sequencia	= nr_seq_servico_w;
				end if;
				
				end;
			end loop;
			close C03;
		
		elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
			qt_dia_adic_w	:= 0;
			while	(ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') LOOP
				select	position(' ' in ds_horarios_padr_w)
				into STRICT	k
				;
	
				if (k > 1) and ((substr(ds_horarios_padr_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_padr_w, 1, k -1))::text <> '')) then
					ds_horario_w		:= substr(ds_horarios_padr_w, 1, k-1);
					ds_horario_w		:= replace(ds_horario_w, ' ','');
					ds_horarios_padr_w	:= substr(ds_horarios_padr_w, k + 1, 2000);
				elsif (ds_horarios_padr_w IS NOT NULL AND ds_horarios_padr_w::text <> '') then
					ds_horario_w 		:= replace(ds_horarios_padr_w,' ','');
					ds_horarios_padr_w	:= '';
				end if;		
		
				if (position('A' in ds_horario_w) > 0) and (ie_urgencia_w = 'N') and (qt_dia_adic_w = 0) then
					qt_dia_adic_w	:= 1;
				elsif (position('AA' in ds_horario_w) > 0) and (ie_urgencia_w = 'N') then
					qt_dia_adic_w	:= qt_dia_adic_w + 1;
				end if;		
		
				ds_horario_w	:= replace(ds_horario_w,'A','');

				/* gerar horario refeicao */

				dt_horario_ref_w := pkg_date_utils.get_time(dt_inicio_prescr_aux_w + qt_dia_adic_w, ds_horario_w, 0);

				/* validar data x data atual */

				if (ie_urgencia_w <> 'S') then
					if (dt_horario_ref_w < clock_timestamp()) and (dt_horario_ref_w+1<= dt_validade_prescr_w) then
						dt_horario_ref_w := dt_horario_ref_w + 1;
					/*elsif	(dt_horario_ref_w < sysdate) then
						ie_gerar_horario_w := 'N';*/
					elsif (dt_horario_ref_w > clock_timestamp()) and (dt_horario_ref_w < dt_inicio_prescr_aux_w) then /* Rafael 6/6/8 OS94873  */
						dt_horario_ref_w 	:= dt_horario_ref_w + 1;
						ie_gerar_horario_w 	:= 'S';
					else
						ie_gerar_horario_w := 'S';
					end if;
				else
					ie_gerar_horario_w := 'S';
				end if;

				if (dt_suspensao_progr_w > dt_horario_ref_w) or (coalesce(dt_suspensao_progr_w::text, '') = '') then
				
					/* validar horario x horarios ja gerados */

					select	count(*)
					into STRICT	qt_horario_w
					from	prescr_dieta_hor a,
						prescr_dieta c,
						prescr_medica b
					where	a.nr_prescricao	= b.nr_prescricao
					and	a.dt_horario = dt_horario_ref_w
					and	c.nr_sequencia = a.nr_seq_dieta
					and	c.nr_Prescricao = b.nr_prescricao
					and	c.cd_dieta = cd_dieta_w
					and	((coalesce(a.dt_suspensao::text, '') = '') or (c.nr_sequencia	= nr_seq_dieta_w))
					and	coalesce(b.dt_suspensao::text, '') = ''
					and	b.nr_atendimento	= nr_atendimento_w
					and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';
										
					/* gerar horario */

					if (ie_gerar_horario_w = 'S') and
						((qt_horario_w = 0) or (ie_modificar_p = 'S')) and (dt_horario_ref_w < dt_validade_prescr_w) and
						((dt_horario_ref_w >= dt_inicio_prescr_aux_w) or (ie_urgencia_w = 'S')) then
						/* obter sequencia */

						select	nextval('prescr_dieta_hor_seq')
						into STRICT	nr_seq_horario_w
						;
						
						begin
							select	max(a.nr_sequencia)
							into STRICT	qt_jejum_w
							from	rep_jejum a,
								prescr_medica b
							where	dt_horario_ref_w between dt_inicio and (dt_fim - 1/1440)
							and	a.nr_prescricao		= b.nr_prescricao
							and	coalesce(b.dt_suspensao::text, '') = ''
							and	ie_liberacao_p = 'S'
							and	coalesce(a.ie_suspenso,'N') <> 'S'
							and	b.nr_atendimento	= nr_atendimento_w;
						exception when others then
							qt_jejum_w := 0;
						end;

						/* gerar registro */

						insert into prescr_dieta_hor(
							nr_sequencia,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							dt_atualizacao,
							nm_usuario,
							nr_prescricao,
							dt_horario,
							dt_fim_horario,
							dt_suspensao,
							nm_usuario_reaprazamento,
							qt_hor_reaprazamento,
							ie_aprazado,
							nr_seq_dieta,
							ds_observacao
							)
						values (
							nr_seq_horario_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_p,
							dt_horario_ref_w,
							null,
							null,
							null,
							null,
							'N',
							nr_seq_dieta_w,
							ds_observacao_w
							);
									
						-- Only first hour may be processed as urgent in CPOE
						if (ie_urgencia_w = 'S') and (cd_funcao_origem_w = 2314) then 	
							ie_urgencia_w := 'N';
						end if;

						if (ie_contem_jejum_nut_w = 'N') and (coalesce(qt_jejum_w,0) > 0) then
							CALL REP_SUSPENDER_DIETA_VIGENTE(nr_atendimento_w, qt_jejum_w, nm_usuario_p);
						end if;	

					end if;
				end if;					
			end loop;
		end if;	
		end;
	end loop;
	close c02;	
	
	if (ie_inclusao_mod_w = 'S') then
		nr_Seq_alter_w := PLT_atualizar_gerar_evento('D', nr_prescricao_p, nr_seq_item_p, '', 'IM', ds_obs_evento_w, nr_Seq_alter_w, nm_usuario_p);
	elsif (ie_inclusao_subs_w = 'S') then
		nr_Seq_alter_w := PLT_atualizar_gerar_evento('D', nr_prescricao_p, nr_seq_item_p, '', 'IS', ds_obs_evento_w, nr_Seq_alter_w, nm_usuario_p);				
	end if;	
	
	if (ie_lib_individual_w = 'S') and (ie_liberacao_p = 'S') then
		
		select	max(cd_dieta)
		into STRICT	cd_dieta_w
		from	prescr_dieta
		where	nr_prescricao	= nr_prescricao_p
		and	((nr_sequencia	= nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0));
		
		update	prescr_dieta_hor
		set	dt_lib_horario = clock_timestamp()
		where	nr_prescricao = nr_prescricao_p
		and	((nr_seq_dieta = nr_seq_item_p) or (coalesce(nr_seq_item_p,0) = 0))
		and	coalesce(dt_lib_horario::text, '') = ''
		and	((coalesce(coalesce(cd_refeicao_p,cd_refeicao),'XPTO') = coalesce(cd_refeicao,'XPTO')) or (to_char(cd_dieta_w) = cd_refeicao_p));
	end if;
	
	if (ie_gerar_proc_gedipa_job_w = 'N') and (ie_gerar_proc_dieta_w = 'S') then
		for c_diet_process_w in c_diet_process
		loop
			CALL Gedipa_Gerar_Proc_Instantaneo(	nr_prescricao_p 	=>	nr_prescricao_p,
											nr_sequencia_p 		=>	c_diet_process_w.nr_seq_dieta_w,
											nr_seq_solucao_p	=>	null,
											nr_seq_horario_p	=>	null);
		end loop;
	end if;
	
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_dieta_hor_sem_lib ( nr_prescricao_p bigint, nr_seq_item_p bigint, cd_perfil_p bigint, ie_liberacao_p text, cd_refeicao_p text, ie_modificar_p text, nm_usuario_p text, ie_tipo_item_p text default null) FROM PUBLIC;

