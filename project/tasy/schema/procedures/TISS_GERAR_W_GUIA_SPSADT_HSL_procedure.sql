-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_w_guia_spsadt_hsl (nr_atendimento_p bigint, ds_dir_padrao_p text, nm_usuario_p text) AS $body$
DECLARE

 
cd_ans_w		varchar(100);
nr_atendimento_w		bigint;
cd_autorizacao_w		varchar(100);
cd_procedimento_w	varchar(20);
qt_proc_guia_w		smallint;
ie_tipo_atendimento_w	smallint;
cd_senha_w		varchar(100);
dt_inicio_vigencia_w	timestamp;
dt_final_vigencia_w		timestamp;
nr_seq_guia_w		bigint;
cd_edicao_amb_w		varchar(20);
qt_procedimento_w		double precision;
ds_procedimento_w		varchar(255);
dt_procedimento_w		timestamp;
cont_w			integer := 0;
qt_solicitada_w		double precision;
qt_autorizada_w		double precision;
dt_autorizacao_w		timestamp;
cd_doenca_cid_w		varchar(20);
ds_observacao_w		varchar(255);
ds_arquivo_logo_w		varchar(140);
cd_setor_atendimento_w	integer;
ie_carater_inter_sus_w	varchar(2);
cd_convenio_w		integer;
cd_categoria_conv_w	varchar(100);
cd_estabelecimento_w	bigint;

c01 CURSOR FOR 
SELECT	distinct 
	coalesce(b.cd_setor_atendimento,0) 
from	prescr_procedimento a, 
	prescr_medica b 
where	a.nr_prescricao		= b.nr_prescricao 
and	b.nr_atendimento		= nr_atendimento_p;

c02 CURSOR FOR 
SELECT	a.cd_procedimento, 
	obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced), 
	a.qt_procedimento, 
	a.qt_procedimento, 
	b.dt_prescricao 
from	prescr_procedimento a, 
	prescr_medica b 
where	a.nr_prescricao			= b.nr_prescricao 
and	b.nr_atendimento			= nr_atendimento_p 
and	coalesce(b.cd_setor_atendimento,0)		= cd_setor_atendimento_w 
group by a.cd_procedimento, 
	obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced), 
	a.qt_procedimento, 
	a.qt_procedimento, 
	dt_prescricao;


BEGIN 
 
delete	from w_tiss_guia 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_dados_atendimento 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_beneficiario 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_proc_paciente 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_contratado_exec 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_totais 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_proc_solic 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_solicitacao 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_contratado_solic 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_relatorio 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_opm 
where	nm_usuario		= nm_usuario_p;
 
commit;
 
if (coalesce(nr_atendimento_p,0) > 0) then 
 
	select	max(cd_ans), 
		max(b.ds_arquivo_logo_tiss), 
		max(a.cd_categoria) 
	into STRICT	cd_ans_w, 
		ds_arquivo_logo_w, 
		cd_categoria_conv_w 
	from	pessoa_juridica c, 
		convenio b, 
		atend_categoria_convenio a 
	where	a.cd_convenio		= b.cd_convenio 
	and	b.cd_cgc		= c.cd_cgc 
	and	a.nr_atendimento	= nr_atendimento_p;
 
	select	max(cd_senha), 
		max(dt_inicio_vigencia), 
		max(dt_final_vigencia) 
	into STRICT	cd_senha_w, 
		dt_inicio_vigencia_w, 
		dt_final_vigencia_w 
	from	atend_categoria_convenio 
	where	nr_atendimento					= nr_atendimento_p 
	and	obter_atecaco_atendimento(nr_atendimento) 	= nr_seq_interno;
 
	insert	into w_tiss_relatorio(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ds_arquivo_logo) 
	values (nextval('w_tiss_relatorio_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_dir_padrao_p || '\' || ds_arquivo_logo_w);
 
	open c01;
	loop 
	fetch c01 into 
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
 
		qt_proc_guia_w 	:= 0;
		open c02;
		loop 
		fetch c02 into 
			cd_procedimento_w, 
			ds_procedimento_w, 
			qt_solicitada_w, 
			qt_autorizada_w, 
			dt_autorizacao_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
 
			qt_proc_guia_w		:= qt_proc_guia_w + 1;
			if (qt_proc_guia_w = 1) then 
 
				select	nextval('w_tiss_guia_seq') 
				into STRICT	nr_seq_guia_w 
				;
 
				insert	into w_tiss_guia(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					cd_ans, 
					cd_autorizacao, 
					dt_autorizacao, 
					cd_senha, 
					dt_validade_senha, 
					dt_emissao_guia, 
					nr_interno_conta, 
					nr_seq_protocolo, 
					nr_sequencia_autor, 
					nr_atendimento) 
				values (nr_seq_guia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					cd_ans_w, 
					null, 
					dt_inicio_vigencia_w, 
					cd_senha_w, 
					dt_final_vigencia_w, 
					dt_autorizacao_w, 
					null, 
					null, 
					null, 
					nr_atendimento_p);
 
				insert	into w_tiss_beneficiario(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_guia, 
					cd_pessoa_fisica, 
					nm_pessoa_fisica, 
					nr_cartao_nac_sus, 
					ds_plano, 
					dt_validade_carteira, 
					cd_usuario_convenio) 
				SELECT	nextval('w_tiss_beneficiario_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_guia_w, 
					cd_pessoa_fisica, 
					nm_pessoa_fisica, 
					nr_cartao_nac_sus, 
					ds_plano, 
					dt_validade_carteira, 
					cd_usuario_convenio 
				from	tiss_dados_paciente_v 
				where	ds_versao		= '2.01.01' 
				and	nr_atendimento		= nr_atendimento_p 
				and	ie_origem		= 'AP';
 
				insert into w_tiss_contratado_solic(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_guia, 
					cd_cgc, 
					cd_interno, 
					nr_cpf, 
					nm_contratado, 
					nm_solicitante, 
					cd_cnes, 
					sg_conselho, 
					nr_crm, 
					uf_crm, 
					cd_cbo_saude) 
				SELECT	nextval('w_tiss_contratado_solic_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_guia_w, 
					cd_cgc, 
					cd_interno, 
					nr_cpf, 
					ds_razao_social, 
					nm_medico_solicitante, 
					cd_cnes, 
					sg_conselho, 
					nr_crm, 
					uf_crm, 
					cd_cbo_saude 
				from	tiss_dados_solicitante_v 
				where	nr_atendimento		= nr_atendimento_p 
				and	ds_versao		= '2.01.01' 
				and	ie_origem		= 'AP';
 
				select	max(cd_doenca), 
					max(ds_diagnostico) 
				into STRICT	cd_doenca_cid_w, 
					ds_observacao_w 
				from	diagnostico_doenca 
				where	nr_atendimento		= nr_atendimento_p 
				and	ie_classificacao_doenca = 'P';
 
				select	max(CASE WHEN ie_carater_inter_sus='1' THEN  'E'  ELSE 'U' END ), 
					max(ie_tipo_atendimento), 
					max(cd_estabelecimento) 
				into STRICT	ie_carater_inter_sus_w, 
					ie_tipo_atendimento_w, 
					cd_estabelecimento_w 
				from	atendimento_paciente a 
				where	a.nr_atendimento	= nr_atendimento_p;
 
				insert into w_tiss_solicitacao(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_guia, 
					dt_solicitacao, 
					ie_carater_solic, 
					cd_cid, 
					ds_indicacao) 
				values (nextval('w_tiss_solicitacao_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_guia_w, 
					dt_autorizacao_w, 
					ie_carater_inter_sus_w, 
					tiss_obter_regra_campo(2, 'CD_DOENCA_CID', CD_CONVENIO_W, cd_doenca_cid_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, null, null, null), 
					ds_observacao_w);
 
			end if;
 
			insert into w_tiss_proc_solic(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_guia, 
				cd_procedimento, 
				cd_edicao_amb, 
				ds_procedimento, 
				qt_solicitada, 
				qt_autorizada) 
			values (nextval('w_tiss_proc_solic_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w, 
				cd_procedimento_w, 
				cd_edicao_amb_w, 
				ds_procedimento_w, 
				qt_solicitada_w, 
				qt_autorizada_w);
 
			if (qt_proc_guia_w = 5) then 
 
				insert into w_tiss_contratado_exec(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_guia) 
				values (nextval('w_tiss_contratado_exec_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_guia_w);
 
				insert	into w_tiss_totais(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_guia) 
				values (nextval('w_tiss_totais_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_guia_w);
 
				cont_w	:= 1;
				while(cont_w <= 5) loop 
					insert	into w_tiss_proc_paciente(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						nr_seq_guia) 
					values (nextval('w_tiss_proc_paciente_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_guia_w);
					cont_w		:= cont_w + 1;
				end loop;
 
				cont_w	:= 1;
 
				while(cont_w < 9) loop 
 
					insert	into w_tiss_opm(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						nr_seq_guia) 
					values (nextval('w_tiss_opm_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_guia_w);
 
					cont_w		:= cont_w + 1;
 
				end loop;
 
				qt_proc_guia_w	:= 0;
			end if;
 
		end loop;
		close c02;
 
		if (qt_proc_guia_w > 0) and (qt_proc_guia_w < 5) then 
 
			insert into w_tiss_contratado_exec(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_guia) 
			values (nextval('w_tiss_contratado_exec_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w);
 
			insert	into w_tiss_totais(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_guia) 
			values (nextval('w_tiss_totais_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w);
 
			cont_w	:= 1;
			while(cont_w <= 5) loop 
				insert	into w_tiss_proc_paciente(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_guia) 
				values (nextval('w_tiss_proc_paciente_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_guia_w);
				cont_w		:= cont_w + 1;
			end loop;
 
			select	count(*) 
			into STRICT	cont_w 
			from	w_tiss_proc_solic 
			where	nr_seq_guia	= nr_seq_guia_w;
 
			while(cont_w < 5) loop 
 
				insert	into w_tiss_proc_solic(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_guia) 
				values (nextval('w_tiss_proc_solic_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_guia_w);
 
				cont_w		:= cont_w + 1;
 
			end loop;
 
		end if;
 
		if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
	 
			cont_w	:= 1;
 
			while(cont_w < 9) loop 
 
				insert	into w_tiss_opm(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_guia) 
				values (nextval('w_tiss_opm_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_guia_w);
 
				cont_w		:= cont_w + 1;
 
			end loop;
 
		end if;
 
	end loop;
	close c01;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_w_guia_spsadt_hsl (nr_atendimento_p bigint, ds_dir_padrao_p text, nm_usuario_p text) FROM PUBLIC;

