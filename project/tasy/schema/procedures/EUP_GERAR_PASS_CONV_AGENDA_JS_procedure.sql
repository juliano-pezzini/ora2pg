-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eup_gerar_pass_conv_agenda_js ( ie_lanc_automatico_p text, dt_entrada_p timestamp, nr_atendimento_p bigint, ie_utiliza_unid_age_serv_p text, cd_tipo_agenda_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, ie_atualiza_unidade_p INOUT text) AS $body$
DECLARE

cd_setor_atendimento_w	integer;
qt_setor_w		bigint;
nr_seq_unidade_w	bigint;
nr_seq_interno_w	bigint;
ie_existe_conta_rla_w procedimento_paciente.nr_sequencia%type;
					

BEGIN

if (coalesce(nr_atendimento_p,0) > 0) then

	cd_setor_atendimento_w := coalesce(obter_dados_agendas(coalesce(cd_tipo_agenda_p,0), coalesce(nr_seq_agenda_p,0), 'CS'),0);

	select	count(*)
	into STRICT	qt_setor_w
	from	atend_paciente_unidade 
	where	nr_atendimento = nr_atendimento_p;

	if (ie_utiliza_unid_age_serv_p = 'S') and (coalesce(cd_tipo_agenda_p,0) = 5) and (cd_setor_atendimento_w > 0) and (qt_setor_w = 0) then
		
		select  max(nr_seq_unidade)     
		into STRICT	nr_seq_unidade_w
		from    agenda_consulta                  
		where   nr_atendimento = nr_atendimento_p;
			
		CALL Ageserv_Gerar_Pass_Setor_Atend(nr_atendimento_p, cd_setor_atendimento_w, dt_entrada_p, 'S', nr_seq_unidade_w, nm_usuario_p);
		ie_atualiza_unidade_p := 'S';
		
	elsif (cd_setor_atendimento_w > 0) and (qt_setor_w = 0) then
		CALL gerar_passagem_setor_atend(nr_atendimento_p, cd_setor_atendimento_w, dt_entrada_p, 'S', nm_usuario_p);
		
		select	coalesce(max(nr_seq_interno),0)
		into STRICT	nr_seq_interno_w
		from 	atend_paciente_unidade 
		where 	nr_atendimento = nr_atendimento_p;
		if (nr_seq_interno_w > 0) then
			CALL Atend_Paciente_Unid_AfterPost(nr_seq_interno_w, 'I', nm_usuario_p);
		end if;
		ie_atualiza_unidade_p := 'S';
	end if;
end if;

select coalesce(max(a.nr_sequencia),0)
into STRICT ie_existe_conta_rla_w
from procedimento_paciente a
where a.nr_atendimento = nr_atendimento_p
and a.nr_seq_regra_lanc in (SELECT b.nr_sequencia from regra_lanc_automatico b where b.nr_seq_evento = 26)  LIMIT 1;

if (ie_lanc_automatico_p = 'S') and (ie_existe_conta_rla_w = 0) then
		CALL gerar_lancamento_automatico(nr_atendimento_p, null, 26, nm_usuario_p, null, null, null, null, null, null);
end if;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eup_gerar_pass_conv_agenda_js ( ie_lanc_automatico_p text, dt_entrada_p timestamp, nr_atendimento_p bigint, ie_utiliza_unid_age_serv_p text, cd_tipo_agenda_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text, ie_atualiza_unidade_p INOUT text) FROM PUBLIC;

