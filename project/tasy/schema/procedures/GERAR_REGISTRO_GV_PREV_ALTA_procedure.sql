-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_registro_gv_prev_alta (nr_atendimento_p bigint, cd_setor_desejado_p bigint, dt_previsto_alta_p timestamp, ie_tipo_status_alta_p text, ie_tipo_alta_p text, ie_tipo_vaga_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_regra_w		bigint;
ie_solicitacao_w	varchar(15);
ie_tipo_alta_w		varchar(5);
ie_tipo_status_alta_w	varchar(5);
cd_convenio_w		bigint;
cd_pessoa_fisica_w	varchar(15);
ie_tipo_vaga_w		varchar(15);
ds_obs_prev_alta_w	varchar(255);
ie_possui_w		varchar(1);
cd_setor_desejado_w	bigint;
cd_tipo_acomod_desej_w	bigint;
atepacu_w		numeric(20);
cd_setor_internacao_w	bigint;
cd_categoria_conv_w  	varchar(10);
cd_plano_convenio_w	varchar(10);
cd_medico_resp_w	varchar(10);
dt_previsao_alta_w	timestamp;
nr_sequencia_gv_w	bigint;
ie_consistencia_w	varchar(255);
ie_espec_valid_w	varchar(255);
ie_cid_valid_w		varchar(255);
ie_tipo_atend_w		atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_classif_atend_w	atendimento_paciente.nr_seq_classificacao%type;


BEGIN

select 	greatest(dt_previsto_alta_p, clock_timestamp())
into STRICT	dt_previsao_alta_w
;	

select	max(nr_sequencia)
into STRICT	nr_seq_regra_w
from	regra_gerar_vaga_prob_alta
where	coalesce(ie_tipo_status_alta, ie_tipo_status_alta_p) = ie_tipo_status_alta_p
and	coalesce(ie_tipo_alta, ie_tipo_alta_p) = ie_tipo_alta_p
and	coalesce(ie_tipo_vaga, ie_tipo_vaga_p) = ie_tipo_vaga_p
and	ie_situacao = 'A';

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_possui_w
from	gestao_vaga
where	nr_atendimento = nr_atendimento_p
and	coalesce(IE_STATUS,'X') = 'A';

if (coalesce(nr_seq_regra_w,0) > 0) and (coalesce(nr_atendimento_p,0) > 0) and (coalesce(ie_possui_w,'S') = 'N') then
	
  select  max(ie_tipo_atendimento),
  max(nr_seq_classificacao)
  into STRICT  ie_tipo_atend_w,
  nr_seq_classif_atend_w
  from  atendimento_paciente
  where nr_atendimento = nr_atendimento_p;

	if (coalesce(cd_setor_desejado_p,0) = 0) then
		cd_setor_desejado_w := null;
	else
		cd_setor_desejado_w := cd_setor_desejado_p;
	end if;
	select	max(ie_solicitacao),
		max(ie_tipo_alta), 
		max(ie_tipo_status_alta),
		max(ie_tipo_vaga)
	into STRICT	ie_solicitacao_w,
		ie_tipo_alta_w,
		ie_tipo_status_alta_w,
		ie_tipo_vaga_w
	from	regra_gerar_vaga_prob_alta
	where	nr_sequencia = nr_seq_regra_w;
	
	select	max(obter_convenio_atendimento(nr_atendimento_p)),
		max(obter_pessoa_atendimento(nr_atendimento_p,'C'))
	into STRICT	cd_convenio_w,
		cd_pessoa_fisica_w
	;
	
	if (coalesce(cd_convenio_w,0) > 0) and (ie_solicitacao_w IS NOT NULL AND ie_solicitacao_w::text <> '') and (ie_tipo_vaga_w IS NOT NULL AND ie_tipo_vaga_w::text <> '') then
		
		select	substr(max(ds_obs_prev_alta),1,255),
			max(cd_tipo_acomod_desej),
			max(cd_medico_resp)
		into STRICT	ds_obs_prev_alta_w,
			cd_tipo_acomod_desej_w,
			cd_medico_resp_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;
		
		select 	max(obter_atepacu_paciente(nr_atendimento_p, 'IA'))
		into STRICT	atepacu_w
		;
		
		select	max(cd_categoria),
			max(cd_plano_convenio)	
		into STRICT	cd_categoria_conv_w,
			cd_plano_convenio_w
		from	atend_categoria_convenio
		where	nr_atendimento = nr_atendimento_p
		and	cd_convenio = cd_convenio_w;
		
		if (coalesce(atepacu_w,0) > 0) then
			
			select	max(cd_setor_atendimento)
			into STRICT	cd_setor_internacao_w
			from	atend_paciente_unidade
			where	nr_seq_interno = atepacu_w;
		end if;

		select	nextval('gestao_vaga_seq')
		into STRICT	nr_sequencia_gv_w	
		;
		
		insert into	gestao_vaga(
				nr_sequencia,
				cd_estabelecimento, 
				dt_atualizacao, 
				nm_usuario, 
				dt_solicitacao, 
				ie_solicitacao, 
				cd_convenio, 
				ie_status, 
				ie_tipo_vaga,
				cd_pessoa_fisica,
				nr_atendimento,
				cd_setor_desejado,
				dt_prevista,
				ds_observacao,
				cd_tipo_acomod_desej,
				cd_setor_atual,
				cd_categoria,
				cd_plano_convenio,
				cd_medico,
				ie_tipo_atendimento,
				nr_seq_classif_atend)
			values (
				nr_sequencia_gv_w,
				obter_estabelecimento_ativo,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				ie_solicitacao_w,
				cd_convenio_w,
				'A',
				ie_tipo_vaga_w,
				cd_pessoa_fisica_w,
				nr_atendimento_p,
				cd_setor_desejado_w,
				dt_previsao_alta_w,
				ds_obs_prev_alta_w,
				cd_tipo_acomod_desej_w,
				cd_setor_internacao_w,
				cd_categoria_conv_w,
				cd_plano_convenio_w,
				cd_medico_resp_w,
				ie_tipo_atend_w,
				nr_seq_classif_atend_w);

			SELECT * FROM obter_reg_regulacao_gest_vagas(ie_solicitacao_w, ie_tipo_vaga_w, ie_espec_valid_w, ie_cid_valid_w) INTO STRICT ie_espec_valid_w, ie_cid_valid_w;

			if (coalesce(ie_espec_valid_w, 'N') = 'N') and (coalesce(ie_cid_valid_w, 'N') = 'N') then
				ie_consistencia_w := CONSISTIR_REGULACAO(nr_atendimento_p, nr_sequencia_gv_w, 'GESTAO_VAGA', ie_consistencia_w);
			end if;
	end if;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_registro_gv_prev_alta (nr_atendimento_p bigint, cd_setor_desejado_p bigint, dt_previsto_alta_p timestamp, ie_tipo_status_alta_p text, ie_tipo_alta_p text, ie_tipo_vaga_p text, nm_usuario_p text) FROM PUBLIC;

