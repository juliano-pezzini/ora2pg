-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_horario_med_encaixe ( cd_medico_p text, nr_minuto_duracao_p bigint, hr_inicio_p timestamp, dt_agenda_p timestamp, ds_erro_p INOUT text) AS $body$
DECLARE


dt_inicial_w			timestamp;
dt_final_w			timestamp;
nr_seq_agenda_w			agenda_paciente.nr_sequencia%type;
nm_paciente_w			varchar(60);
ds_agenda_w			varchar(50);
dt_agenda_w			timestamp;
nm_medico_w			varchar(60);
cd_agenda_w			bigint;
cd_estabelecimento_w		integer;
ie_forma_cons_hor_medic_w	varchar(1);
cd_pessoa_fisica_w		varchar(10);
ie_somente_cirur_w		varchar(1);
cd_tipo_agenda_w		bigint;


BEGIN

ie_somente_cirur_w := obter_param_usuario(871, 266, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_somente_cirur_w);

cd_pessoa_fisica_w := cd_medico_p;
dt_inicial_w := pkg_date_utils.get_DateTime(dt_agenda_p, hr_inicio_p);
dt_final_w := dt_inicial_w + ((nr_minuto_duracao_p / 1440) - (1/86400));

SELECT	MAX(cd_estabelecimento)
INTO STRICT	cd_estabelecimento_w
FROM	agenda
WHERE	cd_agenda = cd_agenda_w;

SELECT	coalesce(MAX(ie_forma_cons_hor_medic),'R')
INTO STRICT	ie_forma_cons_hor_medic_w
FROM	parametro_agenda
WHERE	cd_estabelecimento = cd_estabelecimento_w;

SELECT	coalesce(MAX(nr_sequencia),0)
INTO STRICT	nr_seq_agenda_w
FROM	agenda_paciente
WHERE	((hr_inicio BETWEEN dt_inicial_w AND dt_final_w) OR
	(hr_inicio + (nr_minuto_duracao / 1440) - (1/86400) BETWEEN dt_inicial_w AND dt_final_w) OR
	((hr_inicio < dt_inicial_w) AND (hr_inicio + (nr_minuto_duracao / 1440) - (1/86400) > dt_final_w)))
and (coalesce(cd_medico_exec, cd_medico) = cd_pessoa_fisica_w)
--AND	NVL(cd_medico_exec,cd_medico)	= cd_pessoa_fisica_w
AND	ie_status_agenda NOT IN ('C','L')
AND	ie_forma_cons_hor_medic_w = 'R';

if (nr_seq_agenda_w = 0) then
	SELECT	coalesce(MAX(nr_sequencia),0)
	INTO STRICT	nr_seq_agenda_w
	FROM	agenda_paciente
	WHERE	((hr_inicio BETWEEN dt_inicial_w AND dt_final_w) OR
		(hr_inicio + (nr_minuto_duracao / 1440) - (1/86400) BETWEEN dt_inicial_w AND dt_final_w) OR
		((hr_inicio < dt_inicial_w) AND (hr_inicio + (nr_minuto_duracao / 1440) - (1/86400) > dt_final_w)))
	AND	cd_medico_exec	= cd_pessoa_fisica_w
	AND	ie_status_agenda NOT IN ('C','L')
	AND	ie_forma_cons_hor_medic_w = 'E';
end if;

IF (nr_seq_agenda_w > 0) THEN
	BEGIN
	SELECT	SUBSTR(obter_nome_pf(cd_pessoa_fisica),1,60),
		hr_inicio,
		SUBSTR(obter_nome_agenda(cd_agenda),1,50),
		SUBSTR(obter_nome_pf(coalesce(cd_medico_exec,cd_medico)),1,60),
		obter_tipo_agenda(cd_agenda)
	INTO STRICT	nm_paciente_w,
		dt_agenda_w,
		ds_agenda_w,
		nm_medico_w,
		cd_tipo_agenda_w
	FROM	agenda_paciente
	WHERE	nr_sequencia	= nr_seq_agenda_w;
	EXCEPTION
	WHEN OTHERS THEN
		nm_medico_w := NULL;
	END;

	if (ie_somente_cirur_w = 'S') and (cd_tipo_agenda_w <> 1) then
		nm_medico_w := null;
	end if;
	
	IF (nm_medico_w IS NOT NULL AND nm_medico_w::text <> '') THEN
		ds_erro_p := wheb_mensagem_pck.get_texto(278367, 'NM_MEDICO_P=' || nm_medico_w ||
								';NM_PACIENTE_P=' || nm_paciente_w ||
								';DT_AGENDA_P=' ||  TO_CHAR(dt_agenda_w,'dd/mm/yyyy hh24:mi') ||
								';DS_AGENDA_P=' || ds_agenda_w);
	END IF;
ELSE

	SELECT	coalesce(MAX(nr_sequencia),0)
	INTO STRICT	nr_seq_agenda_w
	FROM	agenda b,
		agenda_consulta a
	WHERE	a.cd_agenda = b.cd_agenda
	and	((dt_agenda BETWEEN dt_inicial_w AND dt_final_w) OR
		(dt_agenda + (nr_minuto_duracao / 1440) - (1/86400) BETWEEN dt_inicial_w AND dt_final_w) OR
		((dt_agenda < dt_inicial_w) AND (dt_agenda + (nr_minuto_duracao / 1440) - (1/86400) > dt_final_w)))
	AND	B.cd_pessoa_FISica	= cd_pessoa_fisica_w
	AND	ie_status_agenda NOT IN ('C','L')
	AND	ie_forma_cons_hor_medic_w IN ('E','R')
	and	coalesce(ie_somente_cirur_w,'N') = 'N';

	IF (nr_seq_agenda_w > 0) THEN
		BEGIN
		SELECT	SUBSTR(obter_nome_pf(a.cd_pessoa_fisica),1,60),
			dt_agenda,
			SUBSTR(obter_nome_agenda(b.cd_agenda),1,50),
			SUBSTR(obter_nome_pf(b.cd_pessoa_fisica),1,60)
		INTO STRICT	nm_paciente_w,
			dt_agenda_w,
			ds_agenda_w,
			nm_medico_w
		FROM	agenda_consulta a,
			agenda b
		WHERE	a.cd_agenda = b.cd_agenda
		and	nr_sequencia	= nr_seq_agenda_w;
		EXCEPTION
		WHEN OTHERS THEN
			nm_medico_w := NULL;
		END;

		IF (nm_medico_w IS NOT NULL AND nm_medico_w::text <> '') THEN
			ds_erro_p := wheb_mensagem_pck.get_texto(278367, 'NM_MEDICO_P=' || nm_medico_w ||
									';NM_PACIENTE_P=' || nm_paciente_w ||
									';DT_AGENDA_P=' ||  TO_CHAR(dt_agenda_w,'dd/mm/yyyy hh24:mi') ||
									';DS_AGENDA_P=' || ds_agenda_w);
		END IF;
	END IF;
END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_horario_med_encaixe ( cd_medico_p text, nr_minuto_duracao_p bigint, hr_inicio_p timestamp, dt_agenda_p timestamp, ds_erro_p INOUT text) FROM PUBLIC;

