-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_sint_oper ( nm_usuario_p text, cd_estab_p bigint, dt_mesano_referencia_p timestamp, ie_consignado_p text, cd_operacao_estoque_p bigint, cd_material_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_local_estoque_p bigint, ie_tipo_local_p text, ie_dif_saldo_p text, ie_dif_valor_p text, ie_geral_p text, ie_Grupo_p text, ie_subgrupo_p text, ie_Classe_p text, ie_material_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;
ds_descricao_w		varchar(100);
cd_grupo_w			smallint;
cd_subgrupo_w			smallint;
cd_operacao_estoque_w	smallint;
ie_entrada_saida_w		varchar(1);
ie_nivel_w			smallint;
cd_classe_w			integer;
cd_material_w			integer;
qt_movto_w			double precision;
vl_movto_w			double precision;
qt_quant_w			bigint;
cd_local_estoque_w		smallint;
cd_estabelecimento_w		smallint;

c01 CURSOR FOR
/* Primeiro select para as operacoes*/

SELECT	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	a.cd_operacao_estoque,
	a.cd_local_estoque,
	a.ie_entrada_saida,
	coalesce(sum(qt_estoque),0) qt_estoque,
   	coalesce(sum(vl_estoque),0) vl_estoque
from	local_estoque c,
	estrutura_material_v e,
	movto_estoque_operacao_v a
where	a.dt_mesano_referencia	= dt_mesano_referencia_p
and	a.cd_material 		= e.cd_material
and	a.ie_consignado         = ie_consignado_p
and	((cd_estabelecimento_w = 0) or
	(cd_estabelecimento_w > 0 AND a.cd_estabelecimento	= cd_estabelecimento_w))
and	a.cd_local_estoque	= c.cd_local_estoque
and	c.ie_proprio		= CASE WHEN ie_tipo_local_p='P' THEN 'S' WHEN ie_tipo_local_p='T' THEN 'N'  ELSE c.ie_proprio END
and	a.cd_operacao_estoque 	= coalesce(cd_operacao_estoque_p, a.cd_operacao_estoque)
and	a.cd_material		= coalesce(cd_material_p, a.cd_material)
and	e.cd_grupo_material	= coalesce(cd_grupo_material_p, e.cd_grupo_material)
and	e.cd_subgrupo_material	= coalesce(cd_subgrupo_material_p, e.cd_subgrupo_material)
and	e.cd_classe_material	= coalesce(cd_classe_material_p, e.cd_classe_material)
and	a.cd_local_estoque	= coalesce(cd_local_estoque_p, a.cd_local_estoque)
group by
	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	a.cd_local_estoque,
	a.cd_operacao_estoque,
	a.ie_entrada_saida

union

/* segundo select para o valor anterior*/

select	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	0,
	a.cd_local_estoque,
	'A',
	coalesce(sum(qt_estoque),0) qt_estoque,
   	coalesce(sum(vl_estoque),0) vl_estoque
from	local_estoque c,
	estrutura_material_v e,
	saldo_estoque a
where	a.dt_mesano_referencia	= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_p,-1,0)
and	((cd_estabelecimento_w = 0) or
	(cd_estabelecimento_w > 0 AND a.cd_estabelecimento	= cd_estabelecimento_w))
and	a.cd_local_estoque	= c.cd_local_estoque
and	c.ie_proprio		= CASE WHEN ie_tipo_local_p='P' THEN 'S' WHEN ie_tipo_local_p='T' THEN 'N'  ELSE c.ie_proprio END 
and	a.cd_material		= e.cd_material
and	a.cd_material		= coalesce(cd_material_p, a.cd_material)
and	e.cd_grupo_material	= coalesce(cd_grupo_material_p, e.cd_grupo_material)
and	e.cd_subgrupo_material	= coalesce(cd_subgrupo_material_p, e.cd_subgrupo_material)
and	e.cd_classe_material	= coalesce(cd_classe_material_p, e.cd_classe_material)
and	a.cd_local_estoque	= coalesce(cd_local_estoque_p, a.cd_local_estoque)
group by
	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	a.cd_local_estoque

union

/* terceiro select para o valor atual*/

select	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	0,
	a.cd_local_estoque,
	'X',
	coalesce(sum(qt_estoque),0) qt_estoque,
   	coalesce(sum(vl_estoque),0) vl_estoque
from	local_estoque c,
	estrutura_material_v e,
	saldo_estoque a
where	a.dt_mesano_referencia	= dt_mesano_referencia_p
and	((cd_estabelecimento_w = 0) or
	(cd_estabelecimento_w > 0 AND a.cd_estabelecimento	= cd_estabelecimento_w))
and	a.cd_local_estoque	= c.cd_local_estoque
and	c.ie_proprio		= CASE WHEN ie_tipo_local_p='P' THEN 'S' WHEN ie_tipo_local_p='T' THEN 'N'  ELSE c.ie_proprio END 
and	a.cd_material		= e.cd_material
and	a.cd_material		= coalesce(cd_material_p, a.cd_material)
and	e.cd_grupo_material	= coalesce(cd_grupo_material_p, e.cd_grupo_material)
and	e.cd_subgrupo_material	= coalesce(cd_subgrupo_material_p, e.cd_subgrupo_material)
and	e.cd_classe_material	= coalesce(cd_classe_material_p, e.cd_classe_material)
and	a.cd_local_estoque	= coalesce(cd_local_estoque_p, a.cd_local_estoque)
group by
	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	a.cd_local_estoque;

c02 CURSOR FOR
/* Primeiro select para as operacoes*/

SELECT	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	a.cd_operacao_estoque,
	a.cd_local_estoque,
	a.ie_entrada_saida,
	coalesce(sum(qt_estoque),0) qt_estoque,
   	coalesce(sum(vl_estoque),0) vl_estoque
from	local_estoque c,
	estrutura_material_v e,
	movto_estoque_operacao_v a
where	a.dt_mesano_referencia	= dt_mesano_referencia_p
and	a.cd_material 		= e.cd_material
and	a.ie_consignado         = ie_consignado_p
and	((cd_estabelecimento_w = 0) or
	(cd_estabelecimento_w > 0 AND a.cd_estabelecimento	= cd_estabelecimento_w))
and	a.cd_local_estoque	= c.cd_local_estoque
and	c.ie_proprio		= CASE WHEN ie_tipo_local_p='P' THEN 'S' WHEN ie_tipo_local_p='T' THEN 'N'  ELSE c.ie_proprio END
and	a.cd_operacao_estoque 	= coalesce(cd_operacao_estoque_p, a.cd_operacao_estoque)
and	a.cd_material		= coalesce(cd_material_p, a.cd_material)
and	e.cd_grupo_material	= coalesce(cd_grupo_material_p, e.cd_grupo_material)
and	e.cd_subgrupo_material	= coalesce(cd_subgrupo_material_p, e.cd_subgrupo_material)
and	e.cd_classe_material	= coalesce(cd_classe_material_p, e.cd_classe_material)
and	a.cd_local_estoque	= coalesce(cd_local_estoque_p, a.cd_local_estoque)
group by
	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	a.cd_local_estoque,
	a.cd_operacao_estoque,
	a.ie_entrada_saida

union

/* segundo select para o valor anterior*/

select	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	0,
	a.cd_local_estoque,
	'A',
	coalesce(sum(qt_estoque),0) qt_estoque,
   	coalesce(sum(vl_estoque),0) vl_estoque
from	local_estoque c,
	estrutura_material_v e,
	fornecedor_mat_consignado a
where	a.dt_mesano_referencia	= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_p,-1,0)
and	((cd_estabelecimento_w = 0) or
	(cd_estabelecimento_w > 0 AND a.cd_estabelecimento	= cd_estabelecimento_w))
and	a.cd_local_estoque	= c.cd_local_estoque
and	c.ie_proprio		= CASE WHEN ie_tipo_local_p='P' THEN 'S' WHEN ie_tipo_local_p='T' THEN 'N'  ELSE c.ie_proprio END 
and	a.cd_material		= e.cd_material
and	a.cd_material		= coalesce(cd_material_p, a.cd_material)
and	e.cd_grupo_material	= coalesce(cd_grupo_material_p, e.cd_grupo_material)
and	e.cd_subgrupo_material	= coalesce(cd_subgrupo_material_p, e.cd_subgrupo_material)
and	e.cd_classe_material	= coalesce(cd_classe_material_p, e.cd_classe_material)
and	a.cd_local_estoque	= coalesce(cd_local_estoque_p, a.cd_local_estoque)
group by
	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	a.cd_local_estoque

union

/* terceiro select para o valor atual*/

select	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	0,
	a.cd_local_estoque,
	'X',
	coalesce(sum(qt_estoque),0) qt_estoque,
   	coalesce(sum(vl_estoque),0) vl_estoque
from	local_estoque c,
	estrutura_material_v e,
	fornecedor_mat_consignado a
where	a.dt_mesano_referencia	= dt_mesano_referencia_p
and	((cd_estabelecimento_w = 0) or
	(cd_estabelecimento_w > 0 AND a.cd_estabelecimento	= cd_estabelecimento_w))
and	a.cd_local_estoque	= c.cd_local_estoque
and	c.ie_proprio		= CASE WHEN ie_tipo_local_p='P' THEN 'S' WHEN ie_tipo_local_p='T' THEN 'N'  ELSE c.ie_proprio END 
and	a.cd_material		= e.cd_material
and	a.cd_material		= coalesce(cd_material_p, a.cd_material)
and	e.cd_grupo_material	= coalesce(cd_grupo_material_p, e.cd_grupo_material)
and	e.cd_subgrupo_material	= coalesce(cd_subgrupo_material_p, e.cd_subgrupo_material)
and	e.cd_classe_material	= coalesce(cd_classe_material_p, e.cd_classe_material)
and	a.cd_local_estoque	= coalesce(cd_local_estoque_p, a.cd_local_estoque)
group by
	e.cd_grupo_material,
	e.cd_subgrupo_material,
	e.cd_classe_material,
	e.cd_material,
	a.cd_local_estoque;




BEGIN

cd_estabelecimento_w := coalesce(cd_estab_p,0);

delete from w_movto_sint_oper;

if (ie_dif_saldo_p = 'S') then
	CALL Verifica_Dif_Saldo(	dt_mesano_referencia_p, 0);
end if;
if (ie_dif_valor_p = 'S') then
	CALL Verifica_Dif_Valor(dt_mesano_referencia_p,0);
end if;

if (coalesce(ie_consignado_p,'X') = 'N') then

OPEN c01;
LOOP
FETCH c01 into
	cd_grupo_w,
	cd_subgrupo_w,
	cd_classe_w,
	cd_material_w,
	cd_operacao_estoque_w,
	cd_local_estoque_w,
	ie_entrada_saida_w,
	qt_movto_w,
	vl_movto_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	/* Verifica se o material existe na tabela w_saldo_estoque
	quando informado itens com diferenÃ§a de saldo ou valor*/
	qt_quant_w	:= 1;
	if (ie_dif_saldo_p = 'S') or (ie_dif_valor_p = 'S') then
		select	count(*)
		into STRICT	qt_quant_w
		from	w_saldo_estoque
		where	cd_material = cd_material_w;
	end if;

	if (qt_quant_w > 0) then
		begin
		FOR	ie_nivel_w in 1 .. 5 LOOP
		    	begin
			if	(ie_nivel_w = 5 AND ie_material_p = 'S') or
				(ie_nivel_w = 4 AND ie_classe_p = 'S') or
				(ie_nivel_w = 3 AND ie_subgrupo_p = 'S') or
				(ie_nivel_w = 2 AND ie_grupo_p = 'S') or
				(ie_nivel_w = 1 AND ie_geral_p = 'S')then
				begin

				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_sequencia_w
				from	w_movto_sint_oper
				where	cd_grupo		= cd_grupo_w
				and	cd_subgrupo		= cd_subgrupo_w
				and	cd_classe		= cd_classe_w
				and	cd_material		= cd_material_w
				and	cd_operacao_estoque	= cd_operacao_estoque_w
				and	ie_nivel		= ie_nivel_w
				and	ie_entrada_saida	= ie_entrada_saida_w;

				if (nr_sequencia_w = 0) then
					begin

					select	CASE WHEN 	ie_nivel_w=1 THEN wheb_mensagem_pck.get_Texto(310771) WHEN 	ie_nivel_w=/*'Total Geral',*/
						2 THEN substr(obter_desc_estrut_mat(cd_grupo_w,'','',''),1,100) WHEN 	ie_nivel_w=3 THEN substr(obter_desc_estrut_mat('',cd_subgrupo_w,'',''),1,100) WHEN 	ie_nivel_w=4 THEN substr(obter_desc_estrut_mat('','',cd_classe_w,''),1,100) WHEN 	ie_nivel_w=5 THEN substr(obter_desc_estrut_mat('','','',cd_material_w),1,100) END
					into STRICT	ds_descricao_w
					;

					insert into w_movto_sint_oper(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						ie_nivel,
						cd_grupo,
						cd_subgrupo,
						cd_classe,
						cd_material,
						ds_descricao,
						cd_operacao_estoque,
						cd_local_estoque,
						ie_entrada_saida,
						qt_movto,
						vl_movto)
					values (	nextval('w_movto_sint_oper_seq'),
						clock_timestamp(),
						nm_usuario_p,
						ie_nivel_w,
						cd_grupo_w,
						cd_subgrupo_w,
						cd_classe_w,
						cd_material_w,
						ds_descricao_w,
						cd_operacao_estoque_w,
						cd_local_estoque_w,
						ie_entrada_saida_w,
						qt_movto_w,
						vl_movto_w);
					end;
				else
					update	w_movto_sint_oper
					set	qt_movto	= qt_movto + qt_movto_w,
						vl_movto	= vl_movto + vl_movto_w
					where	nr_sequencia	= nr_sequencia_w;
				end if;
				end;
			end if;
			end;
		end loop;
		end;
	end if;
	end;
END LOOP;
CLOSE c01;

else

OPEN c02;
LOOP
FETCH c02 into
	cd_grupo_w,
	cd_subgrupo_w,
	cd_classe_w,
	cd_material_w,
	cd_operacao_estoque_w,
	cd_local_estoque_w,
	ie_entrada_saida_w,
	qt_movto_w,
	vl_movto_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	begin

	/* Verifica se o material existe na tabela w_saldo_estoque
	quando informado itens com diferenÃ§a de saldo ou valor*/
	qt_quant_w	:= 1;
	if (ie_dif_saldo_p = 'S') or (ie_dif_valor_p = 'S') then
		select	count(*)
		into STRICT	qt_quant_w
		from	w_saldo_estoque
		where	cd_material = cd_material_w;
	end if;

	if (qt_quant_w > 0) then
		begin
		FOR	ie_nivel_w in 1 .. 5 LOOP
		    	begin
			if	(ie_nivel_w = 5 AND ie_material_p = 'S') or
				(ie_nivel_w = 4 AND ie_classe_p = 'S') or
				(ie_nivel_w = 3 AND ie_subgrupo_p = 'S') or
				(ie_nivel_w = 2 AND ie_grupo_p = 'S') or
				(ie_nivel_w = 1 AND ie_geral_p = 'S')then
				begin

				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_sequencia_w
				from	w_movto_sint_oper
				where	cd_grupo		= cd_grupo_w
				and	cd_subgrupo		= cd_subgrupo_w
				and	cd_classe		= cd_classe_w
				and	cd_material		= cd_material_w
				and	cd_operacao_estoque	= cd_operacao_estoque_w
				and	ie_nivel		= ie_nivel_w
				and	ie_entrada_saida	= ie_entrada_saida_w;

				if (nr_sequencia_w = 0) then
					begin

					select	CASE WHEN 	ie_nivel_w=1 THEN wheb_mensagem_pck.get_Texto(310771) WHEN 	ie_nivel_w=/*'Total Geral',*/
						2 THEN substr(obter_desc_estrut_mat(cd_grupo_w,'','',''),1,100) WHEN 	ie_nivel_w=3 THEN substr(obter_desc_estrut_mat('',cd_subgrupo_w,'',''),1,100) WHEN 	ie_nivel_w=4 THEN substr(obter_desc_estrut_mat('','',cd_classe_w,''),1,100) WHEN 	ie_nivel_w=5 THEN substr(obter_desc_estrut_mat('','','',cd_material_w),1,100) END
					into STRICT	ds_descricao_w
					;

					insert into w_movto_sint_oper(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						ie_nivel,
						cd_grupo,
						cd_subgrupo,
						cd_classe,
						cd_material,
						ds_descricao,
						cd_operacao_estoque,
						cd_local_estoque,
						ie_entrada_saida,
						qt_movto,
						vl_movto)
					values (	nextval('w_movto_sint_oper_seq'),
						clock_timestamp(),
						nm_usuario_p,
						ie_nivel_w,
						cd_grupo_w,
						cd_subgrupo_w,
						cd_classe_w,
						cd_material_w,
						ds_descricao_w,
						cd_operacao_estoque_w,
						cd_local_estoque_w,
						ie_entrada_saida_w,
						qt_movto_w,
						vl_movto_w);
					end;
				else
					update	w_movto_sint_oper
					set	qt_movto	= qt_movto + qt_movto_w,
						vl_movto	= vl_movto + vl_movto_w
					where	nr_sequencia	= nr_sequencia_w;
				end if;
				end;
			end if;
			end;
		end loop;
		end;
	end if;
	end;
END LOOP;
CLOSE c02;

end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_sint_oper ( nm_usuario_p text, cd_estab_p bigint, dt_mesano_referencia_p timestamp, ie_consignado_p text, cd_operacao_estoque_p bigint, cd_material_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_local_estoque_p bigint, ie_tipo_local_p text, ie_dif_saldo_p text, ie_dif_valor_p text, ie_geral_p text, ie_Grupo_p text, ie_subgrupo_p text, ie_Classe_p text, ie_material_p text) FROM PUBLIC;

