-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE auto_atend_atualizar_cad (cd_pessoa_fisica_p text, nr_telefone_celular_p text, cd_cep_p text, ds_email_p text, nr_endereco_p text, nr_telefone_p text, ds_complemento_p text) AS $body$
DECLARE


qt_acomp_w              smallint;
ie_cep_internet_w       varchar(2);
ds_tipo_logradouro_w	  varchar(125);
nm_logradouro_w         compl_pessoa_fisica.ds_endereco%type;
nm_localidade_w         compl_pessoa_fisica.ds_municipio%type;
nm_bairro_w             compl_pessoa_fisica.ds_bairro%type;
cd_unidade_federacao_w  compl_pessoa_fisica.sg_estado%type;
cd_tipo_logradouro_w    compl_pessoa_fisica.cd_tipo_logradouro%type;
cd_municipio_ibge_w     compl_pessoa_fisica.cd_municipio_ibge%type;
nr_seq_compl_w		compl_pessoa_fisica.nr_sequencia%type;

BEGIN

  if (cd_cep_p IS NOT NULL AND cd_cep_p::text <> '') and (cd_cep_p <> 'LIMPAR') then
    ie_cep_internet_w := Obter_Param_Usuario(0, 25, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_cep_internet_w);

    if (ie_cep_internet_w = 'S') then

      select	max(a.nm_logradouro),
          max(a.nm_localidade),
          max(a.nm_bairro),
          max(a.cd_unidade_federacao)
      into STRICT	nm_logradouro_w,
            nm_localidade_w,
            nm_bairro_w,
            cd_unidade_federacao_w
      from	cep_logradouro a
      where	a.cd_logradouro = cd_cep_p;

    else
    
      select max(a.nm_logradouro),
            max(b.nm_localidade),
            max(c.ds_bairro),
            max(a.ds_uf)
      into STRICT	nm_logradouro_w,
            nm_localidade_w,
            nm_bairro_w,
            cd_unidade_federacao_w
      from	cep_loc b,          
            cep_bairro c,       
            cep_log a           
      where	b.nr_sequencia = c.nr_seq_loc  
      and	a.cd_bairro_inicial = c.nr_sequencia
      and	b.nr_sequencia = a.nr_seq_loc 
      and	a.cd_cep = cd_cep_p;

    end if;

    cd_municipio_ibge_w := obter_municipio_ibge(ELIMINA_CARACTERE_ESPECIAL(cd_cep_p));
    if cd_municipio_ibge_w = 0 then
      cd_municipio_ibge_w := null;
    end if;

    select	max(ds_tipo_logradouro)
    into STRICT	ds_tipo_logradouro_w
    from	cep_logradouro_v
    where	cd_cep = cd_cep_p;

    select	max(cd_tipo_logradouro)
    into STRICT	cd_tipo_logradouro_w
    from	sus_tipo_logradouro
    where	upper(ds_tipo_logradouro) = upper(coalesce(ds_tipo_logradouro_w, ' '));

  end if;

  select count(1)
  into STRICT qt_acomp_w
  from compl_pessoa_fisica
  where ie_tipo_complemento = 1
  and cd_pessoa_fisica  = cd_pessoa_fisica_p;

  if qt_acomp_w > 0 then
  
    update compl_pessoa_fisica
    set ds_email =    CASE WHEN ds_email_p='LIMPAR' THEN  null  ELSE coalesce(ds_email_p,ds_email) END ,
        nr_endereco = CASE WHEN nr_endereco_p='LIMPAR' THEN  null  ELSE coalesce(nr_endereco_p,nr_endereco) END ,
        nr_telefone = CASE WHEN nr_telefone_p='LIMPAR' THEN  null  ELSE coalesce(nr_telefone_p,nr_telefone) END ,
        ds_complemento = CASE WHEN ds_complemento_p='LIMPAR' THEN  null  ELSE coalesce(ds_complemento_p,ds_complemento) END ,
        cd_cep =      CASE WHEN cd_cep_p='LIMPAR' THEN  null  ELSE coalesce(cd_cep_p, cd_cep) END ,
        ds_endereco = CASE WHEN cd_cep_p='LIMPAR' THEN  null  ELSE coalesce(nm_logradouro_w, ds_endereco) END ,
        ds_bairro =   CASE WHEN cd_cep_p='LIMPAR' THEN  null  ELSE coalesce(nm_bairro_w, ds_bairro) END ,
        cd_tipo_logradouro = CASE WHEN cd_cep_p='LIMPAR' THEN  null  ELSE coalesce(cd_tipo_logradouro_w, cd_tipo_logradouro) END ,
        ds_municipio =       CASE WHEN cd_cep_p='LIMPAR' THEN  null  ELSE coalesce(nm_localidade_w, ds_municipio) END ,
        cd_municipio_ibge = CASE WHEN cd_cep_p='LIMPAR' THEN  null  ELSE coalesce(cd_municipio_ibge_w, cd_municipio_ibge) END ,
        sg_estado =         CASE WHEN cd_cep_p='LIMPAR' THEN  null  ELSE coalesce(cd_unidade_federacao_w, sg_estado) END ,
        nm_usuario = 'autoAtend',
        dt_atualizacao = clock_timestamp()
    where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	ie_tipo_complemento = 1;

  else

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_seq_compl_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	
    insert into compl_pessoa_fisica(
      nr_sequencia,
      ds_email,
      nr_endereco,
      nr_telefone,
      ds_complemento,
      cd_cep,
      ds_endereco,
      ds_bairro,
      cd_tipo_logradouro,
      ds_municipio,
      cd_municipio_ibge,
      sg_estado,
      nm_usuario,
      nm_usuario_nrec,
      dt_atualizacao,
      dt_atualizacao_nrec,
      cd_pessoa_fisica,
      ie_tipo_complemento
    ) values (
      nr_seq_compl_w,
      CASE WHEN ds_email_p='LIMPAR' THEN  null  ELSE ds_email_p END ,
      CASE WHEN nr_endereco_p='LIMPAR' THEN  null  ELSE nr_endereco_p END ,
      CASE WHEN nr_telefone_p='LIMPAR' THEN  null  ELSE nr_telefone_p END ,
      CASE WHEN ds_complemento_p='LIMPAR' THEN  null  ELSE ds_complemento_p END ,
      CASE WHEN cd_cep_p='LIMPAR' THEN  null  ELSE cd_cep_p END ,
      nm_logradouro_w,
      nm_bairro_w,
      cd_tipo_logradouro_w,
      nm_localidade_w,
      cd_municipio_ibge_w,
      cd_unidade_federacao_w,
      'autoAtend',
      'autoAtend',
      clock_timestamp(),
      clock_timestamp(),
      cd_pessoa_fisica_p,
      1
    );
  end if;

  if (nr_telefone_celular_p IS NOT NULL AND nr_telefone_celular_p::text <> '') then
  
    update pessoa_fisica
    set nr_telefone_celular = CASE WHEN nr_telefone_celular_p='LIMPAR' THEN  null  ELSE nr_telefone_celular_p END ,
        nm_usuario = 'autoAtend',
        dt_atualizacao = clock_timestamp()
    where cd_pessoa_fisica = cd_pessoa_fisica_p;

  end if;

  commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE auto_atend_atualizar_cad (cd_pessoa_fisica_p text, nr_telefone_celular_p text, cd_cep_p text, ds_email_p text, nr_endereco_p text, nr_telefone_p text, ds_complemento_p text) FROM PUBLIC;

