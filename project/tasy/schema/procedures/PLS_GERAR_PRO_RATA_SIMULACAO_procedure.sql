-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_pro_rata_simulacao ( nr_seq_simulacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_resumo_w			bigint;
nr_seq_segurado_simul_w		bigint;
dt_simulacao_w			timestamp;
qt_dias_dividir_w		bigint;
qt_dias_adesao_w		bigint;
qt_dias_mes_mensalidade_w	bigint;
qt_dias_pro_rata_w		bigint;
qt_dias_antecipado_w		bigint;
nr_seq_item_resumo_w		bigint;
vl_antecipacao_w		double precision;
vl_pro_rata_dia_w		double precision;
vl_resumo_w			double precision;
nr_seq_ordem_w			bigint;
ie_tipo_item_w			varchar(5);
qt_regra_pro_rata_w		bigint;
ie_data_base_proporcional_w	varchar(1);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_segurado_simul
	from	pls_simulacao_resumo
	where	nr_seq_simulacao	= nr_seq_simulacao_p
	and	nr_seq_ordem		= 1;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_ordem,
		vl_resumo,
		ie_tipo_item
	from	pls_simulacao_resumo
	where	nr_seq_segurado_simul = nr_seq_segurado_simul_w;


BEGIN
select	dt_simulacao
into STRICT	dt_simulacao_w
from	pls_simulacao_preco
where	nr_sequencia	= nr_seq_simulacao_p;

select	Obter_Dias_Entre_Datas(dt_simulacao_w,add_months(dt_simulacao_w,1)),
	to_char(to_date(dt_simulacao_w),'dd'),
	to_char(trunc(last_day(dt_simulacao_w),'dd'),'dd')
into STRICT	qt_dias_dividir_w,
	qt_dias_adesao_w,
	qt_dias_mes_mensalidade_w
;

select	max(ie_data_base_proporcional)
into STRICT	ie_data_base_proporcional_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(ie_data_base_proporcional_w,'U') = 'T') then
	qt_dias_dividir_w	:= 30;
	/* tratamento fevereiro */

	if (to_char(dt_simulacao_w,'mm') = 02 ) then
		qt_dias_dividir_w	:= to_char(last_day(dt_simulacao_w),'dd');
	end if;
end if;

qt_dias_pro_rata_w	:= qt_dias_mes_mensalidade_w - qt_dias_adesao_w+1;
qt_dias_antecipado_w	:= qt_dias_mes_mensalidade_w - qt_dias_pro_rata_w;

open C01;
loop
fetch C01 into
	nr_seq_resumo_w,
	nr_seq_segurado_simul_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open C02;
	loop
	fetch C02 into
		nr_seq_item_resumo_w,
		nr_seq_ordem_w,
		vl_resumo_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		if (coalesce(ie_tipo_item_w::text, '') = '') then
			if (nr_seq_ordem_w = 2) then
				ie_tipo_item_w	:= '1';
			elsif (nr_seq_ordem_w = 3) then
				ie_tipo_item_w	:= '14';
			elsif (nr_seq_ordem_w	= 4) then
				ie_tipo_item_w	:= '15';
			end if;
		end if;

		select	count(*)
		into STRICT	qt_regra_pro_rata_w
		from	pls_regra_pro_rata_dia
		where	ie_tipo_item_mensalidade = ie_tipo_item_w;

		if (qt_regra_pro_rata_w > 0) then
			vl_antecipacao_w 	:= dividir(vl_resumo_w,qt_dias_dividir_w) * qt_dias_antecipado_w;
			vl_pro_rata_dia_w	:= dividir(vl_resumo_w,qt_dias_dividir_w) * qt_dias_pro_rata_w;

			if	(vl_resumo_w <> (coalesce(vl_pro_rata_dia_w,0) + coalesce(vl_antecipacao_w,0))) then
				vl_antecipacao_w	:= vl_resumo_w - coalesce(vl_pro_rata_dia_w,0);
			end if;
		else
			vl_antecipacao_w 	:= 0;
			vl_pro_rata_dia_w	:= 0;
		end if;

		update	pls_simulacao_resumo
		set	vl_pro_rata_dia	= vl_pro_rata_dia_w,
			vl_antecipacao	= vl_antecipacao_w
		where	nr_sequencia	= nr_seq_item_resumo_w;
		end;
	end loop;
	close C02;

	select	sum(vl_antecipacao),
		sum(vl_pro_rata_dia)
	into STRICT	vl_antecipacao_w,
		vl_pro_rata_dia_w
	from	pls_simulacao_resumo
	where	nr_seq_segurado_simul	= nr_seq_segurado_simul_w
	and	nr_seq_ordem	<> 1;

	update	pls_simulacao_resumo
	set	vl_antecipacao	= vl_antecipacao_w,
		vl_pro_rata_dia	= vl_pro_rata_dia_w
	where	nr_sequencia	= nr_seq_resumo_w;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_pro_rata_simulacao ( nr_seq_simulacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

