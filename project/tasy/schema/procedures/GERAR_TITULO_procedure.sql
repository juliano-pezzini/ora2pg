-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_titulo (cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, cd_condicao_pagamento_p bigint, dt_primeiro_vencimento_p timestamp, dt_emissao_p timestamp, vl_total_conta_p bigint, vl_conta_p bigint, tx_juros_p bigint, cd_tipo_taxa_juro_p bigint, tx_multa_p bigint, cd_tipo_taxa_multa_p bigint, tx_desc_antecip_p bigint, nr_documento_p bigint, nr_sequencia_doc_p bigint, nr_nota_fiscal_p bigint, cd_serie_p text, nm_usuario_p text, ie_commit_p text, nr_seq_trans_financ_p bigint default null, cd_moeda_p bigint default null, vl_cotacao_p bigint default null) AS $body$
DECLARE


dt_baixa_adiant_w		timestamp;
ie_dt_baixa_adiant_w		varchar(2);
ie_cursor_w			smallint;
ie_titulo_receber_w			varchar(1)	:= 'P';
nr_seq_protocolo_w		bigint;
nr_interno_conta_w			bigint;
nr_interno_conta_prot_w		bigint;
vl_item_prot_w			double precision;
vl_conta_w			double precision;
vl_total_conta_w			double precision;
nr_documento_w			numeric(22);
nr_seq_baixa_w			integer;
nr_adiantamento_w			bigint;
vl_adiantamento_w			double precision;
nr_titulo_w			bigint;
nr_guia_w			varchar(20);
nr_seq_protoc_w			bigint 	:= Null;
ie_forma_pagamento_w		smallint;
vl_total_adiantamentos_w		double precision;
vl_titulo_gerado_w			double precision;
vl_total_guias_w			double precision	:= 0;
vl_guias_w			double precision;
cd_tipo_recebimento_w		integer;
nr_seq_trans_financ_adiant_w	bigint;
nr_atendimento_w			bigint;
ie_tipo_convenio_w			smallint;
ds_erro_valor_w			varchar(4000)	:= '';
nr_interno_conta_ww		varchar(4000)	:= '';
nr_atendimento_ww			varchar(4000)	:= '';
ds_titulo_prot_conta_w		varchar(4000)	:= '';
nr_seq_nf_saida_w			bigint;
cont_w				bigint;
ie_cancelamento_w			varchar(3);
ie_franquia_w			varchar(1)	:= 'N';
ie_tit_conta_canc_w		varchar(10);
vl_vencimento_w			double precision;
nr_nota_fiscal_w			varchar(255);
nr_seq_lote_protocolo_w		bigint;
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_fisica_atend_w	varchar(10);
cd_cgc_w			varchar(14);
ie_titulo_paciente_prot_w	varchar(10);
ds_erro_w			varchar(4000);
nr_tit_conta_proc_w		bigint;
ie_classif_tit_w		varchar(1);
ie_gerar_titulo_rec_w		varchar(1);
ds_titulo_conta_w		varchar(4000) := '';
nr_titulo_saldo_w		titulo_receber.nr_titulo%type;
ie_status_protocolo_w		protocolo_convenio.ie_status_protocolo%type;
ie_obrigar_titulo_w		varchar(10);
vl_adiantamento_ww		conta_paciente_adiant.vl_adiantamento%type;
cd_tipo_receb_adiant_pac_w parametro_contas_receber.cd_tipo_receb_adiant_conta_pac%type;
/*Processo de cartas de compromisso de pagamento*/

ie_carta_compromisso_w 	parametro_contas_receber.ie_carta_compromisso%type;
qt_carta_compromisso_w 	bigint;
vl_total_carta_w 		carta_compromisso.vl_editado%type;
vl_saldo_tit_rec_w 		titulo_receber.vl_saldo_titulo%type;
vl_conta_adiant_w		conta_paciente_adiant.vl_adiantamento%type;
nr_conta_adiant_w		conta_paciente_adiant.nr_interno_conta%type;
cd_moeda_w 				adiantamento.CD_MOEDA%type;
vl_cotacao_w 			adiantamento.VL_COTACAO%type;
vl_adto_estrang_w		adiantamento.VL_ADTO_ESTRANG%type;
cd_cgc_pagador_w        atendimento_pagador.cd_cgc%type;
cd_pessoa_pagador_w     atendimento_pagador.cd_pessoa_fisica%type;
cd_responsavel_w        atendimento_paciente.cd_pessoa_responsavel%type;
cd_pessoa_atendimento_w atendimento_pagador.cd_pessoa_fisica%type;
idade_w                 regra_pessoa_tit_nf.qt_idade_max%type;
param_37_gerar_w        varchar(10);
param_38_gerar_w        varchar(10);
param_32_gerar_w        varchar(10);
vl_titulo_w             titulo_receber.vl_titulo%type;
cd_tipo_portador_w      titulo_receber.cd_tipo_portador%type;
cd_portador_w           titulo_receber.cd_portador%type;
ie_param_113_w		    varchar(10);

C04 CURSOR FOR
	SELECT	distinct a.nr_interno_conta
	from	titulo_receber b,
		conta_paciente a
	where a.nr_interno_conta = b.nr_interno_conta
	  and a.nr_seq_protocolo = nr_seq_protoc_w
	  and coalesce(b.nr_seq_protocolo::text, '') = ''
	and	((ie_tit_conta_canc_w = 'S')
		 or (coalesce(a.ie_cancelamento::text, '') = ''));

C03 CURSOR FOR
	SELECT	coalesce(sum(a.vl_item),0),
		a.nr_interno_conta
	from	protocolo_convenio_item_v a
	where	a.nr_seq_protocolo	= nr_seq_protoc_w
	and (coalesce(nr_seq_proc_pacote::text, '') = '' or nr_sequencia <> nr_seq_proc_pacote)
	and 	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	not exists ( SELECT 1 from conta_paciente_adiant x where x.nr_interno_conta = a.nr_interno_conta )
	group	by a.nr_interno_conta;

C02 CURSOR FOR
	SELECT	a.nr_adiantamento,
		a.vl_adiantamento,
		a.nr_interno_conta
	from	conta_paciente_adiant a
	where	(a.nr_interno_conta	= nr_interno_conta_p AND nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '')
	
union	all
  --tem que ser union all pois se deixar so union, vai agrupar 
	PERFORM	a.nr_adiantamento,
		a.vl_adiantamento,
		a.nr_interno_conta
	from	conta_paciente_adiant a, conta_paciente b
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	(b.nr_seq_protocolo	= nr_seq_protocolo_p AND nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '');

C01 CURSOR FOR
	SELECT 	1,
		nr_seq_protoc_w,	/* Total do Protocolo Nao SUS*/
		nr_interno_conta_p,
		nr_documento_p,
		null,
		vl_conta_p,
		vl_total_conta_p,
		0
	from 	protocolo_convenio
	where	(nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '')
	and	nr_seq_protocolo 	= nr_seq_protoc_w
	and	ie_titulo_receber_w	in ('P','T')
	and	ie_tipo_convenio_w	<> 3
	
union

	SELECT 	2,
		nr_seq_protoc_w,	/* Total do Protocolo SUS, Edgar OS 06/05/2005*/
		nr_interno_conta_p,
		nr_documento_p,
		null,
		coalesce(sum(b.vl_conta),0),
		coalesce(sum(b.vl_conta),0),
		0
	from 	conta_paciente b,
		protocolo_convenio a
	where	b.nr_seq_protocolo		= a.nr_seq_protocolo
	and	ie_tipo_convenio_w	= 3
	and	(nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '')
	and	a.nr_seq_protocolo 	= nr_seq_protoc_w
	and	ie_titulo_receber_w	in ('P','T')
	and	((ie_tit_conta_canc_w = 'S')
		 or (coalesce(b.ie_cancelamento::text, '') = ''))
	having	coalesce(sum(b.vl_conta),0) > 0	-- nao retirar, problema do oracle
	
union

	select 	3,
		nr_seq_protoc_w,	/* Total da Conta */
		nr_interno_conta_p,
		nr_documento_p,
		null,
		vl_conta_p,
		vl_total_conta_p,
		nr_atendimento
	from 	Conta_paciente
	where	(nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '')
	  and	nr_interno_conta 	= nr_interno_conta_p
	  and	ie_titulo_receber_w	<> 'T'
	and	((ie_tit_conta_canc_w = 'S')
		 or (coalesce(ie_cancelamento::text, '') = ''))
	
union

	select 	4,
		nr_seq_protoc_w,	/* Contas do Protocolo */
		b.nr_interno_conta,
		b.nr_interno_conta,
		to_char(b.nr_interno_conta),
		sum(vl_guia),
		sum(vl_guia),
		b.nr_atendimento
	from 	Conta_Paciente_Guia c,
		Conta_paciente b,
		protocolo_convenio a
	where	a.nr_seq_protocolo	= nr_seq_protoc_w
	  and	a.nr_seq_protocolo	= b.nr_seq_protocolo
	  and	(nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '')
	  and 	b.nr_interno_conta	= c.nr_interno_conta
	  and	ie_titulo_receber_w	= 'C'
	and	((ie_tit_conta_canc_w = 'S')
		 or (coalesce(b.ie_cancelamento::text, '') = ''))
	group by
		nr_seq_protoc_w,
		b.nr_interno_conta,
		b.nr_interno_conta,
		to_char(b.nr_interno_conta),
		b.nr_atendimento
	
union

	select 	5,
		nr_seq_protoc_w,	/* Guias do Protocolo */
		b.nr_interno_conta,
		CASE WHEN somente_numero(c.cd_autorizacao)=0 THEN  b.nr_interno_conta  ELSE somente_numero(c.cd_autorizacao) END ,
		c.cd_autorizacao,
		sum(vl_guia),
		sum(vl_guia),
		b.nr_atendimento
	from 	Conta_Paciente_Guia c,
		Conta_paciente b,
		protocolo_convenio a
	where	a.nr_seq_protocolo	= nr_seq_protoc_w
	and	a.nr_seq_protocolo	= b.nr_seq_protocolo
	and	(nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '')
	and 	b.nr_interno_conta	= c.nr_interno_conta
	and	ie_titulo_receber_w	= 'G'
	and  	coalesce(c.vl_guia,0) > 0
	and	((ie_tit_conta_canc_w = 'S')
		 or (coalesce(b.ie_cancelamento::text, '') = ''))
	group by
		nr_seq_protoc_w,
		b.nr_interno_conta,
		CASE WHEN somente_numero(c.cd_autorizacao)=0 THEN  b.nr_interno_conta  ELSE somente_numero(c.cd_autorizacao) END ,
		c.cd_autorizacao,
		b.nr_atendimento;

c05 CURSOR FOR
SELECT	nr_titulo
from	titulo_receber
where	nr_interno_conta	= nr_interno_conta_w
and	(nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '')

union

SELECT	nr_titulo
from	titulo_receber
where	nr_seq_protocolo	= nr_seq_protoc_w
and	(nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '');


BEGIN

ie_param_113_w := obter_param_usuario(-80, 113, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_param_113_w);
cd_pessoa_fisica_w	:= cd_pessoa_fisica_p;
cd_cgc_w		:= cd_cgc_p;

select	coalesce(max(ie_tit_conta_canc),'S'),
	coalesce(max(ie_data_baixa_adiant),'N')
into STRICT	ie_tit_conta_canc_w,
	ie_dt_baixa_adiant_w
from	parametro_contas_receber
where	cd_estabelecimento	= cd_estabelecimento_p;

/* Francisco - OS 53269 - 30/03/07 - Inclui para gravar a seq da nota */

select	max(nr_sequencia),
	max(nr_nota_fiscal)
into STRICT	nr_seq_nf_saida_w,
	nr_nota_fiscal_w
from	nota_fiscal
where	ie_situacao		<> '9'
and	nr_interno_conta	= nr_interno_conta_p;

if (coalesce(nr_seq_nf_saida_w::text, '') = '') then
	select	max(nr_sequencia),
		max(nr_nota_fiscal)
	into STRICT	nr_seq_nf_saida_w,
		nr_nota_fiscal_w
	from	nota_fiscal
	where	ie_situacao		<> '9'
	and	nr_seq_protocolo	= nr_seq_protocolo_p;
end if;

/* Fim alteracao Francisco 30/03/07 */

if (nr_seq_protocolo_p > 0) or (coalesce(nr_seq_protocolo_p::text, '') = '') then
	nr_seq_protoc_w		:= nr_seq_protocolo_p;
end if;

select	max(IE_FORMA_PAGAMENTO)
into STRICT	ie_forma_pagamento_w
from	condicao_pagamento
where	cd_condicao_pagamento = cd_condicao_pagamento_p;

if (ie_forma_pagamento_w = 10) and ((coalesce(nr_interno_conta_p, 0) > 0) or (coalesce(nr_seq_protocolo_p, 0) > 0)) then

	select	coalesce(sum(VL_VENCIMENTO),0)
	into STRICT	vl_vencimento_w
	from	vencimento_titulo
	where	((nr_interno_conta = nr_interno_conta_p) and (nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '')
	or (nr_seq_protocolo = nr_seq_protocolo_p) and (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> ''));

	select	coalesce(sum(x.vl_adiantamento),0)
	into STRICT	vl_adiantamento_ww
	from	(
		SELECT	coalesce(sum(a.vl_adiantamento),0) vl_adiantamento
		from	conta_paciente_adiant a
		where	(a.nr_interno_conta	= nr_interno_conta_p AND nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '')
		
union

		SELECT	coalesce(sum(a.vl_adiantamento),0) vl_adiantamento
		from	conta_paciente_adiant a, conta_paciente b
		where	a.nr_interno_conta	= b.nr_interno_conta
		and	(b.nr_seq_protocolo	= nr_seq_protocolo_p AND nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '')
	) x;

	if (vl_vencimento_w > 0) and ((vl_vencimento_w + vl_adiantamento_ww) <> vl_total_conta_p) then
		/*(-20011, 'O valor dos vencimentos digitados nao confere com o valor da conta paciente!' ||chr(13) || chr(10) ||
						'Vl conta: ' || vl_total_conta_p ||chr(13) || chr(10) ||
						'Vl vencimentos: ' || vl_vencimento_w);*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(206545,
						'VL_TOTAL_CONTA_P='||vl_total_conta_p||';'||
						'VL_VENCIMENTO_W='||vl_vencimento_w);
	end if;
end if;

/*if	(ie_forma_pagamento_w not in (2,10)) then
	select	count(*)
	into	cont_w
	from	vencimento_titulo
	where	((nr_seq_protocolo	= nr_seq_protoc_w) or
		 (nr_interno_conta	= nr_interno_conta_p));
	if	(cont_w > 0) then
		ra.ise_application_error(-20011, 'A condicao de pagamento selecionada nao permite vencimentos digitados manualmente!' || chr(13) ||
						'Exclua os vencimentos digitados antes de gerar o titulo.');
	end if;
end if;*/
select	coalesce(max(b.ie_tipo_convenio),0),
	max(a.nr_seq_lote_protocolo)
into STRICT	ie_tipo_convenio_w,
	nr_seq_lote_protocolo_w
from	convenio b,
	protocolo_convenio a
where	a.cd_convenio		= b.cd_convenio
and	a.nr_seq_protocolo	= nr_seq_protocolo_p;

if (coalesce(nr_seq_nf_saida_w::text, '') = '') and (nr_seq_lote_protocolo_w IS NOT NULL AND nr_seq_lote_protocolo_w::text <> '') then

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_nf_saida_w
	from	nota_fiscal a
	where	a.nr_seq_lote_prot	= nr_seq_lote_protocolo_w
	and	a.ie_situacao		<> '9';

end if;

if (nr_seq_protoc_w > 0) and (nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '') and (philips_param_pck.get_cd_pais <> 2) and 	-- OS 1833094 - o valor da guia soma os tributos da conta, entao sera diferente do valor da conta
	(ie_tipo_convenio_w <> 3) then			-- Edgar 06/05/2005, OS 16915, Segundo Adelson nao consistir SUS
	begin

	open	c03;
	LOOP
	FETCH 	c03 into
		vl_item_prot_w,
		nr_interno_conta_prot_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		select	coalesce(sum(a.vl_guia),0)
		into STRICT	vl_guias_w
		from	conta_paciente_guia a
		where	a.nr_interno_conta	= nr_interno_conta_prot_w;


		if (vl_guias_w <> vl_item_prot_w) and (length(coalesce(ds_erro_valor_w, ' ')) < 1900) then

			vl_total_guias_w := vl_total_guias_w + vl_guias_w;

			ds_erro_valor_w := wheb_mensagem_pck.get_texto(307906,	'NR_INTERNO_CONTA_PROT='||nr_interno_conta_prot_w||
										';VL_ITEM_PROT='||vl_item_prot_w||
										';VL_GUIAS='||vl_guias_w);
		end if;

		end;
	end loop;

	close c03;

	if (ds_erro_valor_w IS NOT NULL AND ds_erro_valor_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(206567,'VL_TOTAL_CONTA_P='||vl_total_conta_p||';'||
								'VL_TOTAL_GUIAS_W='||vl_total_guias_w||';'||
								'DS_ERRO_VALOR_W='||ds_erro_valor_w);
	end if;
	end;
end if;

if (nr_interno_conta_p > 0) then
	begin
	select	ie_tipo_convenio
	into STRICT	ie_tipo_convenio_w
	from	convenio c,
		conta_paciente x
	where	c.cd_convenio 		= x.cd_convenio_parametro
	and	x.nr_interno_conta	= nr_interno_conta_p;

	select	coalesce(sum(a.vl_guia),0)
	into STRICT	vl_guias_w
	from	conta_paciente_guia a
	where	a.nr_interno_conta	= nr_interno_conta_p;


		if (philips_param_pck.get_cd_pais <> 2 and philips_param_pck.get_cd_pais <> 9 and philips_param_pck.get_cd_pais <> 7 and philips_param_pck.get_cd_pais <> 12) and /*Lhalves OS 879765 em 23/06/2015 - Incluido tratamento para o pais, pois no 2 - Medixo, o valor da guia soma os tributos da conta, entao sera diferente do valor da conta*/
		(vl_guias_w	<> round((vl_total_conta_p)::numeric,2)) and /* Elemar 25/05/04 o dephi passa as vezes com 1.000000000001 */
		(ie_tipo_convenio_w <> 3) then	/*Anderson em 10/05/2010 - OS215681*/

		/*-20011,' O valor do titulo ' || vl_total_conta_p || ' nao bate com o valor das guias '

			|| vl_total_guias_w || chr(13) || ds_erro_valor_w);*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(206567,'VL_TOTAL_CONTA_P='||vl_total_conta_p||';'||
								'VL_TOTAL_GUIAS_W='||vl_guias_w||';'||
								'DS_ERRO_VALOR_W='||ds_erro_valor_w);
	end if;

	/* Francisco - OS 70660 - 08/10/2007 - Nao deixar gerar titulo quando a conta ja estiver cancelada! */

	select	ie_cancelamento
	into STRICT	ie_cancelamento_w
	from	conta_paciente
	where	nr_interno_conta	= nr_interno_conta_p;

	if (ie_cancelamento_w IS NOT NULL AND ie_cancelamento_w::text <> '') then
	/*(-20011,'A conta ' || nr_interno_conta_p || ' esta cancelada!');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(206655,'NR_INTERNO_CONTA_P='||ds_erro_valor_w);
	end if;

	end;
end if;

if (nr_interno_conta_p > 0) then

	ds_titulo_prot_conta_w	:= null;

	if (nr_seq_protoc_w > 0) then
		begin
		select	obter_titulo_conta_protocolo(nr_seq_protocolo,null)
		into STRICT	ds_titulo_prot_conta_w
		from 	conta_paciente
		where	nr_interno_conta	= nr_interno_conta_p;

		exception
			when others then
			ds_titulo_prot_conta_w	:= null;
		end;

		if (ds_titulo_prot_conta_w IS NOT NULL AND ds_titulo_prot_conta_w::text <> '')  then
			/*(-20011,' Este protocolo ja possui titulo gerado. ');*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(206659);
		end if;
	else
		begin
		select	obter_titulo_conta(nr_interno_conta_p)
		into STRICT	ds_titulo_conta_w
		;
		exception
			when others then
			ds_titulo_conta_w	:= null;
		end;

		if (ds_titulo_conta_w IS NOT NULL AND ds_titulo_conta_w::text <> '') then
			/*(-20011,' Conta ja possui titulo gerado. ');*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(273543);
		end if;
	end if;
elsif (nr_seq_protoc_w > 0) then

	begin
	select	obter_titulo_conta_protocolo(nr_seq_protoc_w,null)
	into STRICT	ds_titulo_prot_conta_w
	;

	exception
		when others then
		ds_titulo_prot_conta_w	:= null;
	end;
	if (ds_titulo_prot_conta_w IS NOT NULL AND ds_titulo_prot_conta_w::text <> '')  then
		/*(-20011,' Este protocolo ja possui titulo gerado. ');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(206659);
	end if;

	select	max(ie_status_protocolo)
	into STRICT	ie_status_protocolo_w
	from	protocolo_convenio
	where	nr_seq_protocolo = nr_seq_protoc_w;

	ie_obrigar_titulo_w := Obter_Param_Usuario(85, 29, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_obrigar_titulo_w);

	if (ie_obrigar_titulo_w = 'D') then
		select	coalesce(max(ie_obriga_titulo_prot),'N')
		into STRICT	ie_obrigar_titulo_w
		from	convenio_estabelecimento a,
			protocolo_convenio b
		where	a.cd_estabelecimento	= b.cd_estabelecimento
		and	a.cd_convenio		= b.cd_convenio
		and	b.nr_seq_protocolo	= nr_seq_protoc_w;

	end if;

	if (ie_status_protocolo_w <> 2) and (ie_obrigar_titulo_w = 'N') then
		--Nao e permitido gerar o titulo para um protocolo com status Provisorio.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(338789);
	end if;

end if;

if (nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '') then
	select	coalesce(max(Obter_Valor_Conv_Estab(b.cd_convenio, cd_estabelecimento_p, 'IE_TITULO_RECEBER')),'P')
	into STRICT	ie_titulo_receber_w
	from 	convenio b,
		protocolo_convenio a
	where	a.cd_convenio		= b.cd_convenio
	  and	a.nr_seq_protocolo 	= nr_seq_protoc_w;

	select	coalesce(max(a.ie_titulo_paciente_prot),'N')
	into STRICT	ie_titulo_paciente_prot_w
	from	convenio_estabelecimento a,
		protocolo_convenio b
	where	a.cd_convenio		= b.cd_convenio
	and	a.cd_estabelecimento	= b.cd_estabelecimento
	and	b.nr_seq_protocolo	= nr_seq_protoc_w;


	if (ie_titulo_receber_w in ('C','G')) then
		select	count(*)
		into STRICT	cont_w
		from	vencimento_titulo
		where	nr_seq_protocolo	= nr_seq_protoc_w
		and	vl_vencimento		<> 0;
		if (cont_w > 0) then
			/*(-20011, 'A geracao dos titulos deste convenio sao por conta ou por guia!' || chr(13) ||
							'Nao e possivel gerar o titulo com vencimentos em valores.');*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(206661);
		end if;
	end if;

	begin
	nr_interno_conta_ww	:= null;
	nr_atendimento_ww	:= null;
	open	c04;
	LOOP
	FETCH	c04 into
		nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin

		nr_interno_conta_ww	:= substr(nr_interno_conta_ww || nr_interno_conta_w || ', ', 1, 255);

		if (nr_interno_conta_w > 0) then
			begin

			select	nr_atendimento
			into STRICT	nr_atendimento_w
			from	conta_paciente
			where 	nr_interno_conta = nr_interno_conta_w;

			nr_atendimento_ww	:= substr(nr_atendimento_ww || nr_atendimento_w || ', ', 1, 255);

			end;
		end if;
		end;
	end loop;
	close c04;

	end;
	if (nr_interno_conta_ww IS NOT NULL AND nr_interno_conta_ww::text <> '') then
		/*(-20011,	' Contas ja possuem titulo. Verifique !' || chr(13) ||
						'N Conta = ' || nr_interno_conta_wW || chr(13) ||
						'N Atendimento = ' || nr_atendimento_Ww);*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(206665,'NR_INTERNO_CONTA_WW='||nr_interno_conta_wW||';'||
								'NR_ATENDIMENTO_WW='||nr_atendimento_Ww);

	end if;
end if;

OPEN  	c01;
LOOP
FETCH 	c01 into
		ie_cursor_w,
		nr_seq_protocolo_w,
		nr_interno_conta_w,
		nr_documento_w,
		nr_guia_w,
		vl_conta_w,
		vl_total_conta_w,
		nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	/* Francisco - OS 70660 - 08/10/2007 - Nao deixar gerar titulo quando a conta ja estiver cancelada! */

	if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
		select	ie_cancelamento
		into STRICT	ie_cancelamento_w
		from	conta_paciente
		where	nr_interno_conta	= nr_interno_conta_w;

		if (ie_cancelamento_w IS NOT NULL AND ie_cancelamento_w::text <> '') and (ie_tit_conta_canc_w = 'N') then
			--(-20011,'A conta ' || nr_interno_conta_p || ' esta cancelada!');
			CALL wheb_mensagem_pck.exibir_mensagem_abort(206666,'NR_INTERNO_CONTA_P='||nr_interno_conta_p);
		end if;
	end if;
	
	if (ie_titulo_receber_w = 'G') and (ie_cursor_w = '5') and (coalesce(vl_conta_w,0) = 0) and (coalesce(nr_documento_w,0) > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(901324,'CD_AUTORIZACAO='||nr_documento_w);
	end if;

	/*lhalves OS412265 em 13/02/2012 - Gerar o titulo no nome do paciente para cada conta do protocolo*/

	if (coalesce(ie_titulo_paciente_prot_w,'N') = 'S') and (ie_cursor_w = '4') and (ie_titulo_receber_w = 'C') and (coalesce(nr_atendimento_w,0) > 0) then

        select	max(b.cd_cgc),
                max(b.cd_pessoa_fisica)
        into STRICT    cd_cgc_pagador_w,
                cd_pessoa_pagador_w
        from	atendimento_pagador b,
                conta_paciente a
        where	a.nr_atendimento = b.nr_atendimento
        and	a.nr_interno_conta = nr_interno_conta_w;

        select	max(x.cd_pessoa_responsavel)
        into STRICT    cd_responsavel_w
        from	atendimento_paciente x,
                conta_paciente a
        where	x.nr_atendimento = a.nr_atendimento
        and	    a.nr_interno_conta = nr_interno_conta_w;

        select	obter_pessoa_atendimento((select distinct nr_atendimento 
                                          from conta_paciente
                                          where nr_interno_conta = nr_interno_conta_w), 'C') cd_pessoa
        into STRICT    cd_pessoa_atendimento_w
;

        select	coalesce(substr(obter_idade(a.dt_nascimento, clock_timestamp(), 'A'),1,3),100) idade
        into STRICT idade_w
        from	pessoa_fisica a, atendimento_paciente b, conta_paciente c
        where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
        and	b.nr_atendimento	= c.nr_atendimento
        and	c.nr_interno_conta	= nr_interno_conta_w;

        param_37_gerar_w := Obter_Param_Usuario(-80, 37, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, param_37_gerar_w);
        param_38_gerar_w := Obter_Param_Usuario(-80, 38, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, param_38_gerar_w);
        param_32_gerar_w := Obter_Param_Usuario(-80, 32, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, param_32_gerar_w);

        if (((cd_pessoa_pagador_w IS NOT NULL AND cd_pessoa_pagador_w::text <> '') or (cd_cgc_pagador_w IS NOT NULL AND cd_cgc_pagador_w::text <> '')) and (param_37_gerar_w != 'N') and (param_38_gerar_w = 'N')) then
            if (param_37_gerar_w = 'S') or (param_37_gerar_w = 'E' and idade_w < 18) then
                cd_pessoa_fisica_w	:= cd_pessoa_pagador_w;
                cd_cgc_w := cd_cgc_pagador_w;
            elsif (param_37_gerar_w = 'J' and idade_w < 18) then
                if (cd_cgc_pagador_w IS NOT NULL AND cd_cgc_pagador_w::text <> '') then
                    cd_pessoa_fisica_w	:= cd_pessoa_pagador_w;
                    cd_cgc_w := cd_cgc_pagador_w;
                else
                    cd_pessoa_fisica_w	:= cd_pessoa_atendimento_w;
                    cd_cgc_w := null;
                end if;
            end if;
        elsif (param_32_gerar_w != 'N' and param_38_gerar_w = 'N') then
            if (param_32_gerar_w = 'S') then
                cd_pessoa_fisica_w := cd_responsavel_w;
            elsif ((param_32_gerar_w = 'E') or (param_32_gerar_w = 'F' and idade_w < 18)) then
                if (cd_responsavel_w IS NOT NULL AND cd_responsavel_w::text <> '') then
                    cd_pessoa_fisica_w := cd_responsavel_w;
                else
                    cd_pessoa_fisica_w	:= cd_pessoa_atendimento_w;
                end if;
            else
                cd_pessoa_fisica_w	:= cd_pessoa_atendimento_w;
            end if;
        else
            select	max(cd_pessoa_fisica)
            into STRICT	cd_pessoa_fisica_atend_w
            from	atendimento_paciente
            where	nr_atendimento	= nr_atendimento_w;

            if (cd_pessoa_fisica_atend_w IS NOT NULL AND cd_pessoa_fisica_atend_w::text <> '') then
                cd_pessoa_fisica_w	:= cd_pessoa_fisica_atend_w;
                cd_cgc_w		:= null;
            end if;
        end if;

	end if;

	if (nr_atendimento_w = 0) then
		nr_atendimento_w	:= null;
	end if;
	vl_adiantamento_w	:= (vl_total_conta_p - vl_conta_p);
	if (coalesce(vl_adiantamento_w,0) > 0) then
		begin

		select 	coalesce(max(ie_forma_pagamento),3)
		into STRICT 	ie_forma_pagamento_w
 		from 	condicao_pagamento
 		where 	cd_condicao_pagamento = cd_condicao_pagamento_p
	          and 	ie_situacao           = 'A';
					
		vl_conta_adiant_w := 0;

		if ie_titulo_receber_w = 'C' and coalesce(nr_seq_protocolo_p, 0) > 0 then
			select 	sum(x.vl_adiantamento)
			into STRICT	vl_conta_adiant_w
			from	conta_paciente_adiant x
			where	x.nr_interno_conta = nr_interno_conta_w;
		end if;

		if (ie_forma_pagamento_w in (2,10)) then
			vl_titulo_gerado_w := vl_conta_w - coalesce(vl_conta_adiant_w, 0);
		else
			vl_titulo_gerado_w := vl_total_conta_w;
		end if;

		if (coalesce(somente_numero(nr_nota_fiscal_p),0) <> 0) then
			nr_nota_fiscal_w	:= nr_nota_fiscal_p;
		end if;

		select	CASE WHEN coalesce(nr_nota_fiscal_p,0)=0 THEN  nr_nota_fiscal_w  ELSE nr_nota_fiscal_p END
		into STRICT	nr_nota_fiscal_w
		;
		/*lhalves OS 340792 em 21/07/2011 - Se a forma de geracao do titulo for por conta, vincula ao titulo a NF gerada para a conta*/

		if (ie_titulo_receber_w = 'C') and (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
			select	max(nr_sequencia),
				max(nr_nota_fiscal)
			into STRICT	nr_seq_nf_saida_w,
				nr_nota_fiscal_w
			from	nota_fiscal
			where	nr_interno_conta	= nr_interno_conta_w
			and	ie_situacao		<> '9';
			if (coalesce(nr_seq_nf_saida_w::text, '') = '') and (coalesce(nr_nota_fiscal_w::text, '') = '')  and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '')then
				/*Para os casos onde gera unica nota para o protocolo*/

				select	max(nr_sequencia),
					max(nr_nota_fiscal)
				into STRICT	nr_seq_nf_saida_w,
					nr_nota_fiscal_w
				from	nota_fiscal
				where	nr_seq_protocolo	= nr_seq_protocolo_w
				and	ie_situacao		<> '9';

				if (coalesce(nr_seq_nf_saida_w::text, '') = '') and (coalesce(nr_nota_fiscal_w::text, '') = '')  and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '')then
					/*Para os casos onde gera unica nota para o lote de protocolo*/

					select	max(nf.nr_sequencia),
						max(nf.nr_nota_fiscal)
					into STRICT	nr_seq_nf_saida_w,
						nr_nota_fiscal_w
					from	nota_fiscal nf,
						protocolo_convenio pc
					where	nf.nr_seq_lote_prot	= pc.nr_seq_lote_protocolo
					and	pc.nr_seq_protocolo	= nr_seq_protocolo_w
					and	nf.ie_situacao		<> '9';
				end if;				
			end if;
		end if;

		CALL gerar_titulo_Receber(
			cd_estabelecimento_p,
			cd_pessoa_fisica_w,
			cd_cgc_w,
			nr_atendimento_w,
			nr_interno_conta_w,
			nr_seq_protoc_w,
			cd_condicao_pagamento_p,
			dt_primeiro_vencimento_p,
			dt_emissao_p,
			vl_titulo_gerado_w,
			vl_titulo_gerado_w,
			tx_juros_p,
			cd_tipo_taxa_juro_p,
			tx_multa_p,
			cd_tipo_taxa_multa_p,
			tx_desc_antecip_p,
			nr_documento_w,
			nr_guia_w,
			0,
			nr_nota_fiscal_w,
			cd_serie_p,
			nm_usuario_p,
			nr_seq_nf_saida_w,
			cd_moeda_p,
			vl_cotacao_p);--Francisco - OS 53269 - 30/03/07 - Inclui para gravar a seq da nota
		begin
			select	max(a.nr_titulo), max(a.vl_titulo), max(a.vl_saldo_titulo), max(a.cd_tipo_portador), max(a.cd_portador)
			into STRICT	nr_titulo_w, vl_titulo_w, vl_saldo_tit_rec_w, cd_tipo_portador_w, cd_portador_w
			from	titulo_receber a
			where	a.nr_interno_conta = nr_interno_conta_w
			and	a.dt_vencimento	   =
					(SELECT min(x.dt_vencimento)
					from 	titulo_receber x
					where x.nr_interno_conta = nr_interno_conta_w);
		exception
		when others then
			select	max(a.nr_titulo), max(a.vl_titulo), max(a.vl_saldo_titulo), max(a.cd_tipo_portador), max(a.cd_portador)
			into STRICT	nr_titulo_w, vl_titulo_w, vl_saldo_tit_rec_w, cd_tipo_portador_w, cd_portador_w
			from	titulo_receber a
			where	a.nr_seq_protocolo	= nr_seq_protoc_w
			and	(nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '');
		end;					

        if (coalesce(ie_param_113_w,'N') = 'S')then
			CALL gerar_cobranca_titulo(	
				0,                      -- nr_seq_cobranca_p 
				cd_estabelecimento_p,   -- cd_estabelecimento_p
				nr_titulo_w,            -- nr_titulo_p
				vl_titulo_w,            -- vl_original_p
				vl_saldo_tit_rec_w,     -- vl_acobrar_p
				clock_timestamp(),                -- dt_inclusao_p
				cd_tipo_portador_w,     -- cd_tipo_portador_p
				null,                   -- nr_seq_cobrador_p		
				cd_portador_w,		    -- cd_portador_p
				nm_usuario_p            -- nm_usuario_p
			);
        end if;		

		if (ie_forma_pagamento_w in (2,10)) then
			begin
			
			/* RONALDO
			ADICIONEI A CONDICAO DE PAGAMENTO 10 POR CAUSA DA OS 1285988
			Verificado na linha 275 existe uma consistencia que proibe que o adiantamento esteja incluso nas parcelas (vencimento).
			Entao, deve ser adicionado apos geracao do titulo.
			
			*/
			select	sum(x.vl)
			into STRICT	vl_total_adiantamentos_w
			from	(
				SELECT	sum(a.vl_adiantamento) vl
				from	conta_paciente_adiant a
				where	(a.nr_interno_conta	= nr_interno_conta_w AND nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '')
				
union

				SELECT	sum(a.vl_adiantamento) vl
				from	conta_paciente_adiant a, conta_paciente b
				where	a.nr_interno_conta	= b.nr_interno_conta
				and	(b.nr_seq_protocolo	= nr_seq_protoc_w AND nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '')
			) x;
			
			update	titulo_receber
			set	vl_titulo		= vl_titulo + vl_total_adiantamentos_w
			where	nr_titulo		= nr_titulo_w;

			end;
		end if;

		if (nr_seq_trans_financ_p IS NOT NULL AND nr_seq_trans_financ_p::text <> '') then
			update	titulo_receber
			set	nr_seq_trans_fin_contab = nr_seq_trans_financ_p
			where	nr_titulo 		= nr_titulo_w;
		end if;



		OPEN  	c02;
		LOOP
		FETCH 	c02 into
				nr_adiantamento_w,
				vl_adiantamento_w,
				nr_conta_adiant_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			dt_baixa_adiant_w := null;
			
			if nr_conta_adiant_w = nr_interno_conta_w then

				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_baixa_w
				from	titulo_receber_liq
				where	nr_titulo = nr_titulo_w;

				select	coalesce(max(ie_franquia),'N')
				into STRICT	ie_franquia_w
				from	adiantamento
				where	nr_adiantamento	= nr_adiantamento_w;

				select	max(cd_tipo_receb_adiant_conta_pac)
				into STRICT	cd_tipo_receb_adiant_pac_w
				from	parametro_contas_receber
				where	cd_estabelecimento	= cd_estabelecimento_p;
				
				if (coalesce(cd_tipo_receb_adiant_pac_w::text, '') = '') then
				
					if (ie_franquia_w = 'S') then
						select	max(cd_tipo_recebimento)
						into STRICT	cd_tipo_recebimento_w
						from	tipo_recebimento
						where	ie_tipo_consistencia	= 10
						and	ie_situacao = 'A'
						and     ((cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = ''));

						if (coalesce(cd_tipo_recebimento_w::text, '') = '') then
						/*(-20011,'E necessario cadastrar um tipo de recebimento com o tipo de consistencia "Franquia" ' ||
										' para gerar titulos com baixa por franquia.')*/
							CALL wheb_mensagem_pck.exibir_mensagem_abort(206671);
						end if;
					else
						select	max(cd_tipo_recebimento)
						into STRICT	cd_tipo_recebimento_w
						from	tipo_recebimento
						where	ie_tipo_consistencia	= 7
						and	ie_situacao = 'A'
						and     ((cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = ''));

						if (coalesce(cd_tipo_recebimento_w::text, '') = '') then
							/*(-20011,'E necessario cadastrar um tipo de recebimento com o tipo de consistencia "Adiantamento" ' ||
										' para gerar titulos com adiantamentos vinculados.');*/
							CALL wheb_mensagem_pck.exibir_mensagem_abort(206672);
						end if;
					end if;
				end if;
				
				select	nr_seq_trans_fin_baixa_adiant
				into STRICT		nr_seq_trans_financ_adiant_w
				from		parametro_contas_receber
				where	cd_estabelecimento = cd_estabelecimento_p;


				if (ie_dt_baixa_adiant_w = 'S') then
					select 	max(dt_baixa)
					into STRICT	dt_baixa_adiant_w
					from	adiantamento
					where	nr_adiantamento = nr_adiantamento_w;
				end if;
				select 	max(CD_MOEDA),max(VL_COTACAO),max(VL_ADTO_ESTRANG)
					into STRICT	cd_moeda_w, vl_cotacao_w, vl_adto_estrang_w
					from	adiantamento
					where	nr_adiantamento = nr_adiantamento_w;
				insert into titulo_receber_liq(NR_TITULO,
					NR_SEQUENCIA,
					DT_RECEBIMENTO,
					VL_RECEBIDO,
					VL_DESCONTOS,
					VL_JUROS,
					VL_MULTA,
					CD_MOEDA,
					DT_ATUALIZACAO,
					NM_USUARIO,
					CD_TIPO_RECEBIMENTO,
					IE_ACAO,
					NR_ADIANTAMENTO,
					CD_SERIE_NF_DEVOL,
					NR_NOTA_FISCAL_DEVOL,
					CD_BANCO,
					CD_AGENCIA_BANCARIA,
					NR_DOCUMENTO,
					NR_LOTE_BANCO,
					CD_CGC_EMP_CRED,
					NR_CARTAO_CRED,
					NR_LOTE_CONTABIL,
					VL_REC_MAIOR,
					VL_GLOSA,
					NR_SEQ_TRANS_FIN,
					ie_lib_caixa,
					nr_lote_contab_antecip,
					nr_lote_contab_pro_rata,
					VL_COTACAO,
					VL_RECEBIDO_ESTRANG)
				values (nr_titulo_w,
					nr_seq_baixa_w,
					coalesce(dt_baixa_adiant_w,dt_primeiro_vencimento_p),
					vl_adiantamento_w,
					0,
					0,
					0,
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					coalesce(cd_tipo_receb_adiant_pac_w,cd_tipo_recebimento_w), 'I',
					nr_adiantamento_w,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					0,
					0,
					nr_seq_trans_financ_adiant_w,
					'S',
					0,
					0,
					vl_cotacao_w, 
					vl_adto_estrang_w);

				CALL Atualizar_Adiantamento_saldo(cd_estabelecimento_p,
						nr_interno_conta_p,
						nr_adiantamento_w,
						nm_usuario_p,
						nr_titulo_w);
						
				CALL Atualizar_Saldo_Adiantamento(nr_adiantamento_w, nm_usuario_p, nr_titulo_w);

				CALL Atualizar_Saldo_Tit_Rec(nr_titulo_w, nm_usuario_p);
				
				begin
					CALL executar_evento_agenda_atend(nr_atendimento_w,'CR',obter_estabelecimento_ativo,nm_usuario_p);
				exception
				when others then
					null;
				end;

			end if;
			end;
		end loop;
		close c02;

		end;
	else
		begin

		select	CASE WHEN coalesce(nr_nota_fiscal_p,0)=0 THEN  nr_nota_fiscal_w  ELSE nr_nota_fiscal_p END
		into STRICT	nr_nota_fiscal_w
		;
		/*lhalves OS 340792 em 21/07/2011 - Se a forma de geracao do titulo for por conta, vincula ao titulo a NF gerada para a conta*/

		if (ie_titulo_receber_w = 'C') and (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
			select	max(nr_sequencia),
				max(nr_nota_fiscal)
			into STRICT	nr_seq_nf_saida_w,
				nr_nota_fiscal_w
			from	nota_fiscal
			where	nr_interno_conta	= nr_interno_conta_w
			and	ie_situacao		<> '9';
			if (coalesce(nr_seq_nf_saida_w::text, '') = '') and (coalesce(nr_nota_fiscal_w::text, '') = '')  and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '')then
				/*Para os casos onde gera unica nota para o protocolo*/

				select	max(nr_sequencia),
					max(nr_nota_fiscal)
				into STRICT	nr_seq_nf_saida_w,
					nr_nota_fiscal_w
				from	nota_fiscal
				where	nr_seq_protocolo	= nr_seq_protocolo_w
				and	ie_situacao		<> '9';

				if (coalesce(nr_seq_nf_saida_w::text, '') = '') and (coalesce(nr_nota_fiscal_w::text, '') = '')  and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '')then
					/*Para os casos onde gera unica nota para o lote de protocolo*/

					select	max(nf.nr_sequencia),
						max(nf.nr_nota_fiscal)
					into STRICT	nr_seq_nf_saida_w,
						nr_nota_fiscal_w
					from	nota_fiscal nf,
						protocolo_convenio pc
					where	nf.nr_seq_lote_prot	= pc.nr_seq_lote_protocolo
					and	pc.nr_seq_protocolo	= nr_seq_protocolo_w
					and	nf.ie_situacao		<> '9';
				end if;				
			end if;
		end if;

		CALL gerar_titulo_Receber(
			cd_estabelecimento_p,
			cd_pessoa_fisica_w,
			cd_cgc_w,
			nr_atendimento_w,
			nr_interno_conta_w,
			nr_seq_protoc_w,
			cd_condicao_pagamento_p,
			dt_primeiro_vencimento_p,
			dt_emissao_p,
			vl_conta_w,
			vl_conta_w,
			tx_juros_p,
			cd_tipo_taxa_juro_p,
			tx_multa_p,
			cd_tipo_taxa_multa_p,
			tx_desc_antecip_p,
			nr_documento_w,
			nr_guia_w,
			nr_sequencia_doc_p,
			nr_nota_fiscal_w,
			cd_serie_p,
			nm_usuario_p,
			nr_seq_nf_saida_w,
			cd_moeda_p,
			vl_cotacao_p); --Francisco - OS 53269 - 30/03/07 - Inclui para gravar a seq da nota

            /*buscar o titulo que acabou de ser gerado para atualizar o saldo*/

			select	max(a.nr_titulo), max(a.vl_titulo), max(a.vl_saldo_titulo), max(a.cd_tipo_portador), max(a.cd_portador)
			into STRICT	nr_titulo_saldo_w, vl_titulo_w, vl_saldo_tit_rec_w, cd_tipo_portador_w, cd_portador_w
			from	titulo_receber a
			where	a.nr_interno_conta	= nr_interno_conta_w
			and		(nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '');

			if (coalesce(nr_titulo_saldo_w::text, '') = '') then /*se nao encontrar titulo vinculado a conta, procurar pelo ultimo titulo gerado para esse procotocolo*/
				select	max(a.nr_titulo), max(a.vl_titulo), max(a.vl_saldo_titulo), max(a.cd_tipo_portador), max(a.cd_portador)
                into STRICT	nr_titulo_saldo_w, vl_titulo_w, vl_saldo_tit_rec_w, cd_tipo_portador_w, cd_portador_w
				from	titulo_receber a
				where	a.nr_seq_protocolo	= nr_seq_protoc_w
				and		(nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '');

			end if;

			if (nr_titulo_saldo_w IS NOT NULL AND nr_titulo_saldo_w::text <> '') then
				CALL Atualizar_Saldo_Tit_Rec(nr_titulo_saldo_w, nm_usuario_p); /*aamfirmo OS 789301 atualizar o saldo do titulo apos a inclusao, pois dentro da gerar_titulo_Receber pode gerar tributos que deduzem do saldo. */
				
				if (coalesce(ie_param_113_w,'N') = 'S')then
					CALL gerar_cobranca_titulo(	
						0,                      -- nr_seq_cobranca_p 
						cd_estabelecimento_p,   -- cd_estabelecimento_p
						nr_titulo_saldo_w,      -- nr_titulo_p
						vl_titulo_w,            -- vl_original_p
						vl_saldo_tit_rec_w,     -- vl_acobrar_p
						clock_timestamp(),                -- dt_inclusao_p
						cd_tipo_portador_w,     -- cd_tipo_portador_p
						null,                   -- nr_seq_cobrador_p		
						cd_portador_w,		    -- cd_portador_p
						nm_usuario_p            -- nm_usuario_p
					);
				end if;
				
			end if;

			if (nr_seq_trans_financ_p IS NOT NULL AND nr_seq_trans_financ_p::text <> '') then
				/*select	a.nr_titulo
				into	nr_titulo_w
				from	titulo_receber a
				where	a.nr_interno_conta	= nr_interno_conta_w
				and	a.dt_vencimento	  	=
						(select	min(x.dt_vencimento)
						from	titulo_receber x
						where	x.nr_interno_conta = nr_interno_conta_w);

				update	titulo_receber
				set	nr_seq_trans_fin_contab = nr_seq_trans_financ_p
				where	nr_titulo 		= nr_titulo_w;*/

				/*lhalves OS 563120 em 12/03/2013 - Substituido o update acima pelo cursor */

				open C05;
				loop
				fetch C05 into
					nr_tit_conta_proc_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin

					update	titulo_receber
					set	nr_seq_trans_fin_contab = nr_seq_trans_financ_p
					where	nr_titulo 		= nr_tit_conta_proc_w;

					end;
				end loop;
				close C05;

			end if;

		exception
			when others then
				ds_erro_w := sqlerrm(SQLSTATE);
				/*(-20011, sqlerrm || chr(13) || 'ie_cursor_w = ' || ie_cursor_w || chr(13) ||
								'vl_conta_w = ' || vl_conta_w || chr(13) ||
								'ie_tipo_convenio_w = ' || ie_tipo_convenio_w);*/
				CALL wheb_mensagem_pck.exibir_mensagem_abort(206675,'DS_ERRO_W='||ds_erro_w||';'||
										'IE_CURSOR_W='||ie_cursor_w||';'||
										'VL_CONTA_W='||vl_conta_w||';'||
										'IE_TIPO_CONVENIO_W='||ie_tipo_convenio_w);
		end;
	end if;

	if ((nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') and ((nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') or (nr_titulo_saldo_w IS NOT NULL AND nr_titulo_saldo_w::text <> ''))) then
		begin
		
		select	max(ie_carta_compromisso)
		into STRICT	ie_carta_compromisso_w
		from	parametro_contas_receber
		where	cd_estabelecimento = cd_estabelecimento_p;
		
		if (coalesce(ie_carta_compromisso_w, 'N') = 'S') then
			
			select 	count(*),
				sum(vl_editado)
			into STRICT	qt_carta_compromisso_w,
				vl_total_carta_w
			from	carta_compromisso
			where	ie_situacao = 'A'
			and	coalesce(dt_inativacao::text, '') = ''
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	coalesce(nr_titulo_gerado::text, '') = ''
			and	coalesce(nr_titulo_baixa::text, '') = ''
			and	nr_interno_conta = nr_interno_conta_p;
			
			if (qt_carta_compromisso_w > 0 ) then
						
				select 	vl_saldo_titulo
				into STRICT	vl_saldo_tit_rec_w
				from	titulo_receber
				where	nr_titulo = coalesce(nr_titulo_w, nr_titulo_saldo_w);
				
				if (vl_total_carta_w > vl_saldo_tit_rec_w) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1086603); /*Expressao 948106: Os valores das cartas vinculadas superam o saldo do titulo a receber do paciente*/
				end if;
			
				CALL efetivar_carta_compromisso(nr_interno_conta_p, coalesce(nr_titulo_w, nr_titulo_saldo_w), 'C', cd_estabelecimento_p, nm_usuario_p);
				
			end if;
			
		end if;
		
		end;
	end if;

	end;
END LOOP;
CLOSE c01;

if (nr_seq_protoc_w IS NOT NULL AND nr_seq_protoc_w::text <> '') then
	update protocolo_convenio
	set dt_integracao_cr = clock_timestamp()
	where nr_seq_protocolo = nr_seq_protoc_w;
end if;

ie_classif_tit_w := Obter_Param_Usuario(-80, 97, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_classif_tit_w);
ie_gerar_titulo_rec_w := Obter_Param_Usuario(-80, 5, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_gerar_titulo_rec_w);

if ( coalesce(ie_classif_tit_w,'N') = 'S') and ( coalesce(ie_gerar_titulo_rec_w,'N') = 'S' ) and (nr_seq_nf_saida_w IS NOT NULL AND nr_seq_nf_saida_w::text <> '')  then
	CALL gerar_classif_tit_rec_nf(nr_seq_nf_saida_w,nm_usuario_p);
else
	CALL gerar_classif_titulo_receber(nr_interno_conta_p, nr_seq_protoc_w, nm_usuario_p, null);
end if;

CALL LIBERAR_REPASSE_PROT_CONTA(cd_estabelecimento_p,nr_seq_protoc_w,nr_interno_conta_p,nm_usuario_p);

if (coalesce(ie_commit_p, 'S') = 'S') then
	commit;
end if;

if coalesce(nr_seq_protoc_w,0) > 0 then
	CALL gerar_dashboard_regra(nr_seq_protoc_w);
end if;
					
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_titulo (cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, cd_condicao_pagamento_p bigint, dt_primeiro_vencimento_p timestamp, dt_emissao_p timestamp, vl_total_conta_p bigint, vl_conta_p bigint, tx_juros_p bigint, cd_tipo_taxa_juro_p bigint, tx_multa_p bigint, cd_tipo_taxa_multa_p bigint, tx_desc_antecip_p bigint, nr_documento_p bigint, nr_sequencia_doc_p bigint, nr_nota_fiscal_p bigint, cd_serie_p text, nm_usuario_p text, ie_commit_p text, nr_seq_trans_financ_p bigint default null, cd_moeda_p bigint default null, vl_cotacao_p bigint default null) FROM PUBLIC;

