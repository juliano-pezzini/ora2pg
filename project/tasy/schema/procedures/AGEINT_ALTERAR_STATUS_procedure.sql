-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_alterar_status ( nr_seq_status_p bigint, nr_seq_Ageint_p bigint, ds_motivo_p text default null, nm_usuario_p text DEFAULT NULL, cd_Estabelecimento_p bigint DEFAULT NULL) AS $body$
DECLARE

			

ie_Status_tasy_w		varchar(2);
nr_seq_agenda_exame_w	bigint;
nr_seq_agenda_cons_w	bigint;
cd_agenda_w				bigint;
qt_agenda_exec_w		bigint;
nr_seq_autor_w			bigint;
nr_seq_estagio_w		bigint;
ie_status_agenda_w		varchar(10);
nr_seq_ageint_item_w	bigint;
cd_pessoa_usuario_w		usuario.cd_pessoa_fisica%type;
nr_seq_status_w			agenda_integrada.nr_seq_status%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
			0,
			coalesce(a.nr_seq_agenda_cons,0)
	from	agenda_integrada_item a,
			agenda_consulta b
	where	a.nr_seq_agenda_int		= nr_seq_ageint_p
	and		a.nr_seq_agenda_cons	= b.nr_sequencia	
	and		b.ie_Status_agenda not in ('C')
	
union

	SELECT	a.nr_sequencia,
			coalesce(a.nr_seq_agenda_exame,0),
			0
	from	agenda_integrada_item a,
			agenda_paciente b
	where	a.nr_seq_agenda_int		= nr_seq_ageint_p
	and		a.nr_seq_agenda_exame	= b.nr_sequencia
	and		b.ie_Status_agenda not in ('C');
			

c02 CURSOR FOR
	SELECT 	coalesce(nr_sequencia,0)
	from   	autorizacao_convenio
	where  	nr_seq_agenda  = nr_seq_agenda_exame_w;	

c03 CURSOR FOR
	SELECT 	coalesce(nr_sequencia,0)
	from   	autorizacao_convenio
	where  	nr_seq_agenda_consulta = nr_seq_agenda_cons_w;	
	

BEGIN

if (nr_seq_status_p IS NOT NULL AND nr_seq_status_p::text <> '') and (nr_seq_ageint_p IS NOT NULL AND nr_seq_ageint_p::text <> '') then
	

	select	max(ie_status_tasy)
	into STRICT	ie_status_tasy_w
	from	agenda_integrada_status
	where	nr_sequencia	= nr_seq_status_p;
	

	if (ie_Status_tasy_w in ('CA','AG','RS')) then
		if (ie_status_tasy_w	= 'CA') then
			select	count(*)
			into STRICT	qt_agenda_exec_w
			from	agenda_integrada_item a,
				agenda_paciente b
			where	a.nr_seq_agenda_exame	= b.nr_sequencia
			and	(a.nr_seq_agenda_exame IS NOT NULL AND a.nr_seq_agenda_exame::text <> '')
			and	a.nr_seq_agenda_int	= nr_seq_ageint_p
			and	b.ie_status_agenda	in ('E','L','B','F','I','A','O');
			

			if (qt_agenda_exec_w	> 0) then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(262390);
			end if;
			

			select	count(*)
			into STRICT	qt_agenda_exec_w
			from	agenda_integrada_item a,
				agenda_consulta b
			where	a.nr_seq_agenda_cons	= b.nr_sequencia
			and	(a.nr_seq_agenda_cons IS NOT NULL AND a.nr_seq_agenda_cons::text <> '')
			and	a.nr_seq_agenda_int	= nr_seq_ageint_p
			and	b.ie_status_agenda	in ('E','L','B','F','I','A','O');
			

			if (qt_agenda_exec_w	> 0) then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(262390);
			end if;
						
			open C01;
			loop
			fetch C01 into	
				nr_seq_ageint_item_w,
				nr_seq_agenda_exame_w,
				nr_seq_agenda_cons_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				CALL AGEINT_CANCELAR_ITEM(nr_seq_ageint_p, nr_seq_ageint_item_w, ds_motivo_p, null, nm_usuario_p, cd_Estabelecimento_p);				
				end;
			end loop;
			close C01;
			
			update	agenda_integrada
			set	nr_seq_status		= nr_seq_status_p,
				dt_cancelamento	        = clock_timestamp()
			where	nr_sequencia		= nr_seq_ageint_p;
			
			CALL Ageint_gravar_log(wheb_mensagem_pck.get_texto(791208), 'S', nr_seq_ageint_p, nm_usuario_p);
			
			CALL Limpar_Marcacao_Ageint(nr_seq_ageint_p, nm_usuario_p);
		elsif (ie_status_tasy_w	= 'AG') then
			update	agenda_integrada
			set	nr_seq_status		= nr_seq_status_p,
				dt_fim_Agendamento	= clock_timestamp()
			where	nr_sequencia		= nr_seq_ageint_p;
			
			CALL Ageint_gravar_log(wheb_mensagem_pck.get_texto(791210), 'S', nr_seq_ageint_p, nm_usuario_p);
		
		elsif (ie_status_tasy_w	= 'RS') then
			update	agenda_integrada
			set	nr_seq_status		= nr_seq_status_p,
				dt_fim_Agendamento	= clock_timestamp()
			where	nr_sequencia		= nr_seq_ageint_p;
			
			CALL Ageint_gravar_log(wheb_mensagem_pck.get_texto(791211), 'S', nr_seq_ageint_p, nm_usuario_p);
		end if;
	--Pre-agendamento
	elsif (ie_Status_tasy_w = 'PA') then
			
			select	obter_pf_usuario(nm_usuario_p, 'C')
			into STRICT	cd_pessoa_usuario_w
			;
			
			update	agenda_integrada
			set		nr_seq_status		= nr_seq_status_p,
					cd_profissional		= cd_pessoa_usuario_w
			where	nr_sequencia		= nr_seq_ageint_p;
			
			CALL Ageint_gravar_log(wheb_mensagem_pck.get_texto(791212), 'S', nr_seq_ageint_p, nm_usuario_p);
	--Em agendamento
	elsif (ie_Status_tasy_w = 'EA') then
	
			select	nr_seq_status
			into STRICT	nr_seq_status_w
			from	agenda_integrada
			where	nr_sequencia = nr_seq_ageint_p;
			
			if (nr_seq_status_w IS NOT NULL AND nr_seq_status_w::text <> '') then
				select	max(ie_status_tasy)
				into STRICT	ie_status_tasy_w
				from	agenda_integrada_status
				where	nr_sequencia	= nr_seq_status_w;
			end if;
			
			if (ie_status_tasy_w = 'PA') then
				update	agenda_integrada
				set		nr_seq_status		= nr_seq_status_p,
						cd_profissional		 = NULL,
						dt_fim_agendamento	 = NULL
				where	nr_sequencia		= nr_seq_ageint_p;			
				
				CALL Ageint_gravar_log(wheb_mensagem_pck.get_texto(791213), 'S', nr_seq_ageint_p, nm_usuario_p);	
				commit;
			elsif (ie_status_tasy_w = 'AG')then
				update	agenda_integrada
				set		nr_seq_status		= nr_seq_status_p,
						cd_profissional		 = NULL,
						dt_fim_agendamento	 = NULL
				where	nr_sequencia		= nr_seq_ageint_p;			
				
				CALL Ageint_gravar_log(wheb_mensagem_pck.get_texto(791213), 'S', nr_seq_ageint_p, nm_usuario_p);			
				commit;
			end if;			
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_alterar_status ( nr_seq_status_p bigint, nr_seq_Ageint_p bigint, ds_motivo_p text default null, nm_usuario_p text DEFAULT NULL, cd_Estabelecimento_p bigint DEFAULT NULL) FROM PUBLIC;

