-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_se_seg_portabilidade ( nr_seq_mensalidade_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, qt_meses_portab_p bigint, nr_seq_tipo_portabilidade_p bigint, ds_segurados_p INOUT text, ds_valores_pre_p INOUT text) AS $body$
DECLARE

 
dt_contratacao_w		timestamp;
ie_regulamentacao_w		varchar(2);
ie_tipo_contratacao_w		varchar(2);
qt_dias_permanencia_w		integer;
qt_dias_permanencia_cpt_w	integer;
nr_seq_segurado_w		bigint;
nr_seq_portabilidade_w		bigint;
nr_mes_aniversario_w		smallint;
ds_segurados_w			varchar(2000);
ds_valores_pre_w		varchar(2000);
qt_dias_cpt_w			bigint;
qt_dias_carencia_w		bigint;
ie_situacao_trabalhista_w	pls_segurado.ie_situacao_trabalhista%type;
qt_dias_permanencia_fim_w	pls_portab_regra_direito.qt_dias_permanencia_fim%type;
qt_dias_permanencia_cpt_fim_w	pls_portab_regra_direito.qt_dias_permanencia_cpt_fim%type;
dt_rescisao_w			pls_segurado.dt_rescisao%type;
qt_meses_rescisao_w		pls_portab_regra_direito.qt_meses_rescisao%type;
ie_titularidade_w		varchar(1);
vl_pre_estabelecido_w		pls_mensalidade_segurado.vl_pre_estabelecido%type;

C01 CURSOR FOR 
	SELECT	b.nr_sequencia nr_seq_segurado, 
		d.dt_contrato, 
		c.ie_regulamentacao, 
		c.ie_tipo_contratacao, 
		b.nr_seq_portabilidade, 
		b.ie_situacao_trabalhista, 
		b.dt_rescisao, 
		CASE WHEN coalesce(b.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END  ie_titularidade, 
		a.vl_pre_estabelecido 
	from	pls_mensalidade_segurado a, 
		pls_segurado	b, 
		pls_plano	c, 
		pls_contrato	d 
	where	d.nr_sequencia		= b.nr_seq_contrato 
	and	a.nr_seq_segurado	= b.nr_sequencia 
	and	b.nr_seq_plano		= c.nr_sequencia 
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_p 
	and	((coalesce(b.dt_rescisao::text, '') = '') or (b.dt_rescisao >= dt_referencia_p));

C02 CURSOR FOR 
	SELECT	qt_dias_permanencia, 
		qt_dias_permanencia_cpt, 
		qt_dias_permanencia_fim, 
		qt_dias_permanencia_cpt_fim, 
		qt_meses_rescisao 
	from	pls_portab_regra_direito 
	where (dt_referencia_p between trunc(coalesce(dt_inicio_vigencia,dt_referencia_p),'dd') and fim_dia(coalesce(dt_fim_vigencia,dt_referencia_p))) 
	and	coalesce(ie_regulamentacao,ie_regulamentacao_w)	= ie_regulamentacao_w 
	and	coalesce(ie_tipo_contratacao,ie_tipo_contratacao_w)	= ie_tipo_contratacao_w 
	and	cd_estabelecimento				= cd_estabelecimento_p 
	and (to_date(add_months(dt_referencia_p,qt_meses_rescisao))	= trunc(dt_rescisao_w,'month') or coalesce(qt_meses_rescisao::text, '') = '') 
	and (coalesce(nr_seq_tipo_portabilidade, nr_seq_tipo_portabilidade_p) = nr_seq_tipo_portabilidade_p or coalesce(nr_seq_tipo_portabilidade_p::text, '') = '') 
	and	((coalesce(ie_segunda_portab,'N') = 'S' and (nr_seq_portabilidade_w IS NOT NULL AND nr_seq_portabilidade_w::text <> '')) or (coalesce(ie_segunda_portab,'N') = 'N')) 
	and	((coalesce(ie_sit_trab_informada, 'N') = 'S' and (ie_situacao_trabalhista_w IS NOT NULL AND ie_situacao_trabalhista_w::text <> '')) or (coalesce(ie_sit_trab_informada,'N') = 'N')) 
	and	((ie_titularidade = ie_titularidade_w) or (coalesce(ie_titularidade,'A') = 'A'));

BEGIN 
ds_segurados_p 	:= '';
ds_valores_pre_p	:= '';
 
open C01;
loop 
fetch C01 into 
	nr_seq_segurado_w, 
	dt_contratacao_w, 
	ie_regulamentacao_w, 
	ie_tipo_contratacao_w, 
	nr_seq_portabilidade_w, 
	ie_situacao_trabalhista_w, 
	dt_rescisao_w, 
	ie_titularidade_w, 
	vl_pre_estabelecido_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	nr_mes_aniversario_w		:= to_char(dt_contratacao_w,'mm');
	qt_dias_permanencia_w		:= null;
	qt_dias_permanencia_cpt_w	:= null;
	qt_dias_permanencia_fim_w	:= null;
	qt_dias_permanencia_cpt_fim_w	:= null;
	qt_meses_rescisao_w		:= null;
	 
	for r_c02_w in C02 loop 
		begin 
		qt_dias_permanencia_w		:= r_c02_w.qt_dias_permanencia;
		qt_dias_permanencia_cpt_w	:= r_c02_w.qt_dias_permanencia_cpt;
		qt_dias_permanencia_fim_w	:= r_c02_w.qt_dias_permanencia_fim;
		qt_dias_permanencia_cpt_fim_w	:= r_c02_w.qt_dias_permanencia_cpt_fim;
		qt_meses_rescisao_w		:= r_c02_w.qt_meses_rescisao;
		end;
	end loop;
	 
	if (qt_dias_permanencia_w IS NOT NULL AND qt_dias_permanencia_w::text <> '') and (qt_dias_permanencia_cpt_w IS NOT NULL AND qt_dias_permanencia_cpt_w::text <> '') then 
		--Obter quantidade de dias da carÃªncia e CPT mais atual 
		SELECT * FROM pls_obter_qt_dias_carencia_seg(nr_seq_segurado_w, dt_referencia_p, qt_dias_cpt_w, qt_dias_carencia_w) INTO STRICT qt_dias_cpt_w, qt_dias_carencia_w;
		 
		select	substr(ds_segurados_p	|| CASE WHEN coalesce(ds_segurados_p::text, '') = '' THEN ''  ELSE ', ' END 	|| pls_obter_dados_segurado(nr_seq_segurado_w,'N'),1,2000), 
			substr(ds_valores_pre_p	|| CASE WHEN coalesce(ds_valores_pre_p::text, '') = '' THEN ''  ELSE ', ' END  || 'R$'||campo_mascara_virgula(vl_pre_estabelecido_w),1,2000) 
		into STRICT	ds_segurados_w, 
			ds_valores_pre_w 
		;
		 
		if (qt_dias_cpt_w > qt_dias_permanencia_cpt_w) and (qt_dias_cpt_w <= coalesce(qt_dias_permanencia_fim_w, qt_dias_cpt_w)) and (to_char(add_months(dt_referencia_p,qt_meses_portab_p),'mm') = nr_mes_aniversario_w) then 
			ds_segurados_p 		:= ds_segurados_w;
			ds_valores_pre_p	:= ds_valores_pre_w;
		elsif (qt_dias_carencia_w > qt_dias_permanencia_w) and (qt_dias_carencia_w <= coalesce(qt_dias_permanencia_fim_w, qt_dias_carencia_w)) and (to_char(add_months(dt_referencia_p,qt_meses_portab_p),'mm') = nr_mes_aniversario_w) then 
			ds_segurados_p 		:= ds_segurados_w;
			ds_valores_pre_p	:= ds_valores_pre_w;
		else 
			ds_segurados_p		:= null;
			ds_valores_pre_p	:= null;
		end if;
	end if;
	end;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_se_seg_portabilidade ( nr_seq_mensalidade_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, qt_meses_portab_p bigint, nr_seq_tipo_portabilidade_p bigint, ds_segurados_p INOUT text, ds_valores_pre_p INOUT text) FROM PUBLIC;

