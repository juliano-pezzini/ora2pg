-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_kit_proced_manual ( cd_estabelecimento_p bigint, nr_prescricao_p bigint, nr_seq_procedimento_p bigint, cd_kit_material_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_atualizacao_w        timestamp          := clock_timestamp();
nr_sequencia_w            bigint;
nr_ocorrencia_w            bigint    := 1;
nr_agrupamento_w        double precision;
cd_material_w            integer;
qt_material_kit_w        double precision;
qt_material_w            double precision;
qt_material_w2            double precision;
ie_origem_inf_w            varchar(1)       := 'K';
cd_unidade_medida_w        varchar(30);
cd_intervalo_w            varchar(7);
ie_urgencia_w            varchar(1);
ie_suspenso_w            varchar(1)        := 'N';
ie_se_necessario_w        varchar(1)        := 'N';
ie_medicacao_paciente_w    varchar(1)        := 'N';
nr_seq_proc_w            integer        := 0;
ds_horarios_w            varchar(2000);
ie_kit_prescr_cir_w        varchar(001);
nr_cirurgia_w            bigint;
cd_procedimento_w        bigint;
ie_origem_proced_w        bigint;
nr_seq_proc_interno_w    bigint;
cd_kit_material_w        bigint;
cd_kit_w                bigint;
cd_setor_atendimento_w    bigint;
ie_agrupador_w            smallint;
qt_procedimento_w        double precision;
cd_convenio_w            integer;
ie_tipo_convenio_w        smallint;
cd_medico_w                varchar(10);
cd_medico_prescr_w        varchar(10);
ie_via_aplicacao_w        varchar(10);
ie_gerar_kit_setor_w    varchar(10);
ie_recem_nato_w            varchar(1);
ie_lancar_kit_princ_w    varchar(1);
nr_atendimento_w        bigint;
cd_motivo_baixa_w        integer;
ie_kit_gerado_w            varchar(1)    := 'N';
qt_dose_w                double precision	:= 1;
ie_checar_kit_adep_w    varchar(1);
qt_conversao_w			prescr_material.qt_conversao_dose%type	:= 1;
ie_acm_w				prescr_material.ie_acm%type	:= 'N';
ds_erro_w				varchar(2000);
ie_regra_disp_w			prescr_material.ie_regra_disp%type;
qt_total_disp_w			prescr_material.qt_total_dispensar%type	:= 1;
qt_idade_paciente_w		integer;
nr_seq_item_w integer;


c01 CURSOR FOR
    SELECT  nr_agrupamento,
            ie_urgencia,
            cd_intervalo,
            ds_horarios,
            cd_procedimento,
            ie_origem_proced,
            nr_seq_proc_interno,
            cd_setor_atendimento,
            nr_sequencia,
            qt_procedimento,
            coalesce(cd_medico_exec,cd_medico_prescr_w),
			nr_ocorrencia,
            coalesce(ie_acm, 'N')
    from    prescr_procedimento
    where    coalesce(ie_kit_gerado,'N')    = 'N'
    and        nr_sequencia        = nr_seq_procedimento_p
    and        nr_prescricao        = nr_Prescricao_p;

c02 CURSOR FOR
    SELECT    distinct c.cd_material,
            CASE WHEN coalesce(c.ie_multiplica_dose,'N')='S' THEN c.qt_material * qt_procedimento_w  ELSE c.qt_material END ,
            coalesce(c.cd_unidade_medida_prescr, substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_p,'UMS'),1,30)),
            Obter_Classif_Material_Proced(c.cd_material,null,null) ie_agrupador,
            c.ie_via_aplicacao,
            c.cd_motivo_baixa
    from    componente_kit c,
            kit_material x
    where    coalesce(c.cd_convenio,0) =     (    SELECT    coalesce(max(y.cd_convenio), 0)
                                        from    componente_kit y
                                        where    y.cd_kit_material = c.cd_kit_material
                                        and        y.cd_material      = c.cd_material
                                        and        y.cd_convenio     = cd_convenio_w
                                        and        ((coalesce(y.cd_estab_regra::text, '') = '') or (y.cd_estab_regra = cd_estabelecimento_p)))
    and    coalesce(c.ie_tipo_convenio,0) =     (    select    coalesce(max(y.ie_tipo_convenio), 0)
                            from    componente_kit y
                            where    y.cd_kit_material = c.cd_kit_material
                            and        y.cd_material      = c.cd_material
                            and        y.ie_tipo_convenio     = ie_tipo_convenio_w
                            and        ((coalesce(y.cd_estab_regra::text, '') = '') or (y.cd_estab_regra = cd_estabelecimento_p)))
    and (obter_se_comp_kit_rep(c.cd_kit_material,c.nr_sequencia,cd_medico_w) = 'S')
    and    ((c.ie_recem_nato =  coalesce(ie_recem_nato_w, 'A')) or (coalesce(c.ie_recem_nato, 'A') = 'A'))
    and    ((coalesce(c.cd_estab_regra::text, '') = '') or (c.cd_estab_regra = cd_estabelecimento_p))
	and (qt_idade_paciente_w between coalesce(c.qt_idade_minima,-1) and coalesce(c.qt_idade_maxima,999))
    and    c.ie_situacao        = 'A'
    and    x.cd_kit_material    = c.cd_kit_material
    and    x.ie_situacao        = 'A'
    and    x.cd_kit_material    = cd_kit_material_w;

C03 CURSOR FOR
    SELECT    qt_dose,
            cd_material,
			cd_unidade_medida
    from    w_item_prescr
    where    cd_kit_material    = cd_kit_material_p
    and        nm_usuario        = nm_usuario_p
    and        nr_prescricao    = nr_prescricao_p;


BEGIN

cd_kit_material_w := cd_kit_material_p;

select    coalesce(max(ie_kit_prescr_cir), 'N')
into STRICT    ie_kit_prescr_cir_w
from    parametro_estoque
where    cd_estabelecimento    = cd_estabelecimento_p;

select    coalesce(max(nr_cirurgia),0)
into STRICT    nr_cirurgia_w
from    cirurgia
where    nr_prescricao        = nr_prescricao_p;

select    coalesce(max(obter_convenio_atendimento(nr_atendimento)),0),
        max(cd_medico),
        coalesce(max(ie_recem_nato), 'A'),
        max(cd_setor_atendimento),
        max(nr_atendimento),
		coalesce(max(obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A')),0)
into STRICT    cd_convenio_w,
        cd_medico_prescr_w,
        ie_recem_nato_w,
        cd_setor_atendimento_w,
        nr_atendimento_w,
		qt_idade_paciente_w
from    prescr_medica
where    nr_prescricao    = nr_prescricao_p;

if (cd_convenio_w > 0) then
    select  max(ie_tipo_convenio)
    into STRICT    ie_tipo_convenio_w
    from    convenio
    where    cd_convenio = cd_convenio_w;
end if;

select    coalesce(max(ie_gerar_kit_proced),'S')
into STRICT    ie_gerar_kit_setor_w
from    setor_atendimento
where    cd_setor_atendimento    = cd_setor_atendimento_w;

ie_lancar_kit_princ_w := obter_param_usuario(924, 725, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_lancar_kit_princ_w);

if    ((nr_cirurgia_w    = 0) or (ie_kit_prescr_cir_w = 'S')) and (coalesce(ie_gerar_kit_setor_w,'S')    = 'S') then
    begin

    open c01;
    loop
    fetch c01 into
        nr_agrupamento_w,
        ie_urgencia_w,
        cd_intervalo_w,
        ds_horarios_w,
        cd_procedimento_w,
        ie_origem_proced_w,
        nr_seq_proc_interno_w,
        cd_setor_atendimento_w,
        nr_seq_proc_w,
        qt_procedimento_w,
        cd_medico_w,
		nr_ocorrencia_w,
        ie_acm_w;
    EXIT WHEN NOT FOUND; /* apply on c01 */
        begin
        
        if (ie_lancar_kit_princ_w = 'N') then
            select    coalesce(max(cd_kit_material),0)
            into STRICT    cd_kit_w
            from    proc_interno
            where    nr_sequencia    = nr_seq_proc_interno_w;

            if (cd_kit_w = cd_kit_material_w) then
                cd_kit_material_w    := null;
            end if;
        end if;
        
        select    coalesce(max(ie_checar_kit_adep), 'N')
        into STRICT    ie_checar_kit_adep_w
        from    proc_interno
        where    nr_sequencia    = nr_seq_proc_interno_w;

        open c02;
        loop
        fetch c02 into
            cd_material_w,
            qt_material_kit_w,
            cd_unidade_medida_w,
            ie_agrupador_w,
            ie_via_aplicacao_w,
            cd_motivo_baixa_w;
        EXIT WHEN NOT FOUND; /* apply on c02 */
            begin
            select    coalesce(max(nr_sequencia),0) + 1
            into STRICT    nr_sequencia_w
            from    prescr_material
            where    nr_prescricao = nr_prescricao_p;

            qt_material_w := qt_material_kit_w * nr_ocorrencia_w;
			qt_material_w2 := qt_material_kit_w / coalesce(obter_conversao_unid_med(cd_material_w, cd_unidade_medida_w),1);

            if (ie_agrupador_w <> 1) then
                ie_agrupador_w := 1;
            else
                ie_agrupador_w := 2;
            end if;

            if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then
                ie_agrupador_w := 5;
            end if;

            insert into prescr_material(
                            nr_prescricao, 
                            nr_sequencia, 
                            ie_origem_inf,
                            cd_material, 
                            cd_unidade_medida, 
                            qt_dose,
                            qt_unitaria, 
                            qt_material, 
                            dt_atualizacao,
                            nm_usuario, 
                            cd_intervalo, 
                            nr_agrupamento,
                            ie_urgencia, 
                            nr_ocorrencia, 
                            qt_total_dispensar,
                            ie_suspenso, 
                            cd_unidade_medida_dose,
                            ie_se_necessario, 
                            ie_medicacao_paciente,
                            nr_sequencia_proc,
                            cd_motivo_baixa, 
                            ie_agrupador,
                            ie_bomba_infusao, 
                            ie_aplic_bolus, 
                            ie_aplic_lenta,
                            ie_acm, 
                            ds_horarios, 
                            ie_recons_diluente_fixo, 
                            ie_sem_aprazamento, 
                            cd_kit_material, 
                            ie_via_aplicacao,
                            ie_checar_adep
                        ) values (
                            nr_prescricao_p, 
                            nr_sequencia_w, 
                            ie_origem_inf_w,
                            cd_material_w, 
                            cd_unidade_medida_w, 
                            qt_material_kit_w,
                            qt_material_kit_w, 
                            qt_material_w, 
                            dt_atualizacao_w,
                            nm_usuario_p,
                            cd_intervalo_w,
                            nr_agrupamento_w,
                            ie_urgencia_w,
                            nr_ocorrencia_w, 
                            qt_material_w,
                            ie_suspenso_w,
                            cd_unidade_medida_w,
                            ie_se_necessario_w,
                            ie_medicacao_paciente_w,
                            nr_seq_proc_w,
                            cd_motivo_baixa_w, 
                            ie_agrupador_w,
                            'N',
                            'N',
                            'N',
                            ie_acm_w, 
                            ds_horarios_w,
                            'N',
                            'N',
                            cd_kit_material_w, 
                            ie_via_aplicacao_w,
                            ie_checar_kit_adep_w);
							
							qt_total_disp_w	:= 1;							
							
							SELECT * FROM Obter_Quant_Dispensar(	cd_estabelecimento_p, cd_material_w, NR_PRESCRICAO_P, nr_sequencia_w, cd_intervalo_w, ie_via_aplicacao_w, qt_material_w2, 0, nr_ocorrencia_w, null, '1', cd_unidade_medida_w, 1, qt_material_kit_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_kit_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w;
				

							update    	prescr_material							
							set        	ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END ,
										qt_material			= qt_material_kit_w,
										qt_total_dispensar	= qt_total_disp_w,
										nr_ocorrencia		= nr_ocorrencia_w
							where    	cd_material    = cd_material_w
							and        	nr_sequencia    = nr_sequencia_w
							and       	nr_prescricao    = nr_prescricao_p;
							
			CALL Gerar_Reconst_Diluicao(nr_prescricao_p, nr_sequencia_w,'A');
							
            ie_kit_gerado_w    := 'S';
            if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

            
            open C03;
            loop
            fetch C03 into
                qt_dose_w,
                cd_material_w,
				cd_unidade_medida_w;
            EXIT WHEN NOT FOUND; /* apply on C03 */
                begin

                select     max(nr_sequencia)
                into STRICT    nr_sequencia_w
                from    prescr_material
                where    cd_material      = cd_material_w
                and        nr_prescricao    = nr_prescricao_p;

                update    	prescr_material
                set        	qt_dose        			= qt_dose_w,
							qt_unitaria    			= qt_dose_w,
							cd_unidade_medida_dose 	= cd_unidade_medida_w
                where    cd_material    = cd_material_w
                and        nr_sequencia    = nr_sequencia_w
                and        nr_prescricao    = nr_prescricao_p;

                end;
            end loop;
            close c03;

            end;
        end loop;
        close c02;

        CALL atualizar_ie_kit_gerado(ie_kit_gerado_w,nr_prescricao_p,nr_seq_proc_w,'PRESCR_PROCEDIMENTO');
        end;
    end loop;
    close c01;

    end;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_kit_proced_manual ( cd_estabelecimento_p bigint, nr_prescricao_p bigint, nr_seq_procedimento_p bigint, cd_kit_material_p bigint, nm_usuario_p text) FROM PUBLIC;

