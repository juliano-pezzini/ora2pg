-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_receb_negociacao_cr (nr_seq_caixa_rec_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_vencimento_w		timestamp;
vl_cheque_w		double precision;
ie_tipo_cartao_w	varchar(1);
vl_transacao_w		double precision;
qt_parcela_w		double precision;
qt_registro_w		bigint;
nr_seq_negociacao_w	bigint;
ds_tipo_w		varchar(255);
cd_moeda_w		integer;
vl_especie_w		double precision;
vl_convertido_w		double precision;
vl_total_especie_w	double precision;
cd_moeda_padrao_w	integer;
cd_estabelecimento_w	smallint;
vl_especie_receb_w	double precision;

c01 CURSOR FOR
SELECT	a.dt_vencimento,
	a.vl_cheque
from	negociacao_cr_cheque a
where	a.nr_seq_negociacao	= nr_seq_negociacao_w
and	coalesce(a.nr_seq_cheque::text, '') = ''
order by
	a.dt_vencimento;

c02 CURSOR FOR
SELECT	a.ie_tipo_cartao,
	a.vl_transacao,
	a.qt_parcela,
	CASE WHEN ie_tipo_cartao_w='C' THEN obter_desc_expressao(286364)  ELSE obter_desc_expressao(287331) END
from	negociacao_cr_cartao a
where	a.nr_seq_negociacao	= nr_seq_negociacao_w
and	coalesce(a.nr_seq_movto_cartao::text, '') = ''
order by
	a.ie_tipo_cartao;

c03 CURSOR FOR
SELECT	a.cd_moeda,
	a.vl_especie
from	negociacao_cr_especie a
where	a.nr_seq_negociacao	= nr_seq_negociacao_w;


BEGIN

if (nr_seq_caixa_rec_p IS NOT NULL AND nr_seq_caixa_rec_p::text <> '') then
	select	a.nr_seq_negociacao_cr,
		c.cd_estabelecimento,
		a.vl_especie
	into STRICT	nr_seq_negociacao_w,
		cd_estabelecimento_w,
		vl_especie_receb_w
	from	caixa c,
		caixa_saldo_diario b,
		caixa_receb a
	where	a.nr_seq_saldo_caixa	= b.nr_sequencia
	and	b.nr_seq_caixa		= c.nr_sequencia
	and	a.nr_sequencia	= nr_seq_caixa_rec_p;

	/* Verificar se os valores monetários conferem */

	/* Verificar cheques */

	open c01;
	loop
	fetch c01 into
		dt_vencimento_w,
		vl_cheque_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	cheque_cr a
		where	a.nr_seq_caixa_rec	= nr_seq_caixa_rec_p
		and	a.dt_vencimento_atual <> dt_vencimento_w;

		if (qt_registro_w > 0) then
			/* Não foi encontrado um cheque com data de vencimento igual ao negociado!
			Data de vencimento: #@DT_VENCIMENTO#@ */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(267130, 'DT_VENCIMENTO=' || dt_vencimento_w);
		end if;

		select	count(*)
		into STRICT	qt_registro_w
		from	cheque_cr a
		where	a.nr_seq_caixa_rec	= nr_seq_caixa_rec_p
		and	a.vl_cheque <> vl_cheque_w;

		if (qt_registro_w > 0) then
			/* Não foi encontrado um cheque com valor igual ao negociado!
			Valor: #@VL_CHEQUE#@ */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(267131, 'VL_CHEQUE=' || vl_cheque_w);
		end if;

		end;
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into
		ie_tipo_cartao_w,
		vl_transacao_w,
		qt_parcela_w,
		ds_tipo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	movto_cartao_cr a
		where	a.nr_seq_caixa_rec	= nr_seq_caixa_rec_p
		and	a.ie_tipo_cartao	 <> ie_tipo_cartao_w;

		if (qt_registro_w > 0) then
			/* Não foi encontrado um tipo de cartão igual ao negociado!
			Tipo de cartão: #@DS_TIPO#@ */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(267132, 'DS_TIPO=' || ds_tipo_w);
		end if;

		select	count(*)
		into STRICT	qt_registro_w
		from	movto_cartao_cr a
		where	a.nr_seq_caixa_rec	= nr_seq_caixa_rec_p
		and	a.vl_transacao 		<> vl_transacao_w;

		if (qt_registro_w > 0) then
			/* Não foi encontrado um cartão com valor igual ao negociado!
			Valor: #@VL_TRANSACAO#@ */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(267133, 'VL_TRANSACAO=' || vl_transacao_w);
		end if;

		select	count(*)
		into STRICT	qt_registro_w
		from	movto_cartao_cr a
		where	a.nr_seq_caixa_rec	= nr_seq_caixa_rec_p
		and	a.qt_parcela 		<> qt_parcela_w;

		if (qt_registro_w > 0) then
			/* Não foi encontrado um cartão com quantidade de parcelas igual ao negociado!
			Valor: #@QT_PARCELA#@ */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(267134, 'QT_PARCELA=' || qt_parcela_w);
		end if;

		end;
	end loop;
	close c02;

	/* Verificar espécie */

	select	max(cd_moeda_padrao)
	into STRICT	cd_moeda_padrao_w
	from	parametro_contas_receber
	where	cd_estabelecimento	= cd_estabelecimento_w;

	vl_total_especie_w	:= 0;
	open c03;
	loop
	fetch c03 into
		cd_moeda_w,
		vl_especie_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		vl_convertido_w	:= vl_especie_w;
		if (cd_moeda_w <> cd_moeda_padrao_w) then
			vl_convertido_w	:= obter_conversao_moeda(vl_especie_w,cd_moeda_w,clock_timestamp(),'EN');
		end if;
		vl_total_especie_w	:= vl_total_especie_w + vl_convertido_w;
		end;
	end loop;
	close c03;

	if (vl_total_especie_w <> vl_especie_receb_w) then
		/* O valor em espécie não confere com o valor negociado!
		Valor negociado: #@VL_NEGOCIADO#@ */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(267135, 'VL_NEGOCIADO=' || vl_total_especie_w);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_receb_negociacao_cr (nr_seq_caixa_rec_p bigint, nm_usuario_p text) FROM PUBLIC;

