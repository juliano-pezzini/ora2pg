-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_vincular_conta_contab_ifrs (cd_conta_contabil_p conta_contabil_ifrs.cd_conta_contabil%type, nr_seq_conta_ifrs_p conta_contabil_ifrs.nr_seq_conta_ifrs%type, nm_usuario_p conta_contabil_ifrs.nm_usuario%type, dt_inicio_vigencia_p conta_contabil_ifrs.dt_inicio_vigencia%type, dt_fim_vigencia_p conta_contabil_ifrs.dt_fim_vigencia%type, ie_somente_conta_selec_p text default 'N') AS $body$
DECLARE

                
qt_registro_w				smallint;
cd_empresa_w				conta_contabil.cd_empresa%type;
ie_tipo_w				conta_contabil.ie_tipo%type;
cd_conta_contabil_w			conta_contabil.cd_conta_contabil%type;
cd_conta_ref_w				conta_contabil.cd_conta_contabil%type;
dt_atual_w				constant conta_contabil_ifrs.dt_atualizacao%type := clock_timestamp();

c_conta_analitica CURSOR FOR
SELECT	a.cd_conta_contabil
from	conta_contabil a
where	a.cd_empresa	= cd_empresa_w
and	a.ie_tipo	= 'A'
and	substr(CTB_Obter_Se_Conta_Classif_Sup(a.cd_conta_contabil, ctb_obter_classif_conta(cd_conta_contabil_p, null, dt_atual_w)),1,1) = 'S'
and 	coalesce(ie_somente_conta_selec_p, 'N') = 'N'

union all

select	a.cd_conta_contabil
from	conta_contabil a
where	a.cd_conta_contabil = cd_conta_contabil_p
and	coalesce(ie_somente_conta_selec_p, 'N') = 'S'
order by cd_conta_contabil;

c_conta_referencia CURSOR(cd_conta_ref_p  conta_contabil.cd_conta_contabil%type) FOR
SELECT	a.cd_conta_contabil
from	conta_contabil a
where	a.cd_conta_referencia = cd_conta_ref_p
order by a.cd_conta_contabil;

procedure inserir_conta_contabil_ifrs(cd_conta_contab_p	in conta_contabil_ifrs.cd_conta_contabil%type) is
;
BEGIN
	insert into conta_contabil_ifrs(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_conta_contabil,
		nr_seq_conta_ifrs,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		ie_situacao)
	values (	nextval('conta_contabil_ifrs_seq'),
		dt_atual_w,
		nm_usuario_p,
		dt_atual_w,
		nm_usuario_p,
		cd_conta_contab_p,
		nr_seq_conta_ifrs_p,
		dt_inicio_vigencia_p,
		dt_fim_vigencia_p,
		'A');
end;

begin

CALL ctb_consistir_vigencia_cc_ifrs(nr_seq_conta_ifrs_p, dt_inicio_vigencia_p, dt_fim_vigencia_p);
	
begin
  select	cd_empresa,
    ie_tipo
  into STRICT	cd_empresa_w,
    ie_tipo_w
  from	conta_contabil
  where	cd_conta_contabil	= cd_conta_contabil_p;
  exception
  when no_data_found then
    cd_empresa_w	:= null;
    ie_tipo_w	:= null;
  when too_many_rows then
    cd_empresa_w	:= null;
    ie_tipo_w	:= null;
end;

if (cd_empresa_w IS NOT NULL AND cd_empresa_w::text <> '' AND ie_tipo_w IS NOT NULL AND ie_tipo_w::text <> '') then

  if (ie_tipo_w = 'A') then
    begin
      inserir_conta_contabil_ifrs(cd_conta_Contabil_p);
    end;

    open c_conta_referencia(cd_conta_Contabil_p);
    loop
    fetch c_conta_referencia into	cd_conta_contabil_w;
    EXIT WHEN NOT FOUND; /* apply on c_conta_referencia */
      begin
        inserir_conta_contabil_ifrs(cd_conta_Contabil_w);
      end;
    end loop;
    close c_conta_referencia;

  elsif (ie_tipo_w = 'T') then
    begin
    open c_conta_analitica;
    loop
    fetch c_conta_analitica into	
      cd_conta_contabil_w;
    EXIT WHEN NOT FOUND; /* apply on c_conta_analitica */
      begin

      begin
      select	1
      into STRICT	qt_registro_w
      
      where	exists (
        SELECT 	1
        from	conta_contabil_ifrs a
        where	a.cd_conta_contabil	= cd_conta_contabil_w
        and	a.nr_seq_conta_ifrs	= nr_seq_conta_ifrs_p
      );
      exception
      when no_data_found then
        qt_registro_w := 0;
      end;

      if (qt_registro_w = 0) then
        inserir_conta_contabil_ifrs(cd_conta_Contabil_w);

        open c_conta_referencia(cd_conta_Contabil_w);
        loop
        fetch c_conta_referencia into	cd_conta_ref_w;
        EXIT WHEN NOT FOUND; /* apply on c_conta_referencia */
          begin
            inserir_conta_contabil_ifrs(cd_conta_ref_w);
          end;
        end loop;
        close c_conta_referencia;	
      end if;
      end;
    end loop;
    close c_conta_analitica;

    end;

  end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_vincular_conta_contab_ifrs (cd_conta_contabil_p conta_contabil_ifrs.cd_conta_contabil%type, nr_seq_conta_ifrs_p conta_contabil_ifrs.nr_seq_conta_ifrs%type, nm_usuario_p conta_contabil_ifrs.nm_usuario%type, dt_inicio_vigencia_p conta_contabil_ifrs.dt_inicio_vigencia%type, dt_fim_vigencia_p conta_contabil_ifrs.dt_fim_vigencia%type, ie_somente_conta_selec_p text default 'N') FROM PUBLIC;

