-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobranca_desdobramento ( nr_titulo_p bigint, nr_titulo_origem_p bigint, ie_historico_p text, ie_terceiros_p text, ie_orgao_cobranca_p text, ie_etapa_p text, ie_responsavel_p text, ie_anexos_p text, ie_juridicos_p text, nm_usuario_p text) AS $body$
DECLARE


--historico
dt_historico_w 			cobranca_historico.dt_historico%type;
nr_tipo_historico_w 		cobranca_historico.nr_seq_historico%type;
vl_historico_w			cobranca_historico.vl_historico%type;
ds_historico_w			cobranca_historico.ds_historico%type;

--terceiros
nr_seq_terceiro_w 		cobranca_valor_terc.nr_seq_terceiro%type;
vl_terceiro_w			cobranca_valor_terc.vl_terceiro%type;
nr_seq_tipo_terc_w		cobranca_valor_terc.nr_seq_tipo_terc%type;
nr_seq_tipo_w			cobranca_valor_terc.nr_seq_tipo_terc%type;

--cobrança orgão
cd_orgao_w			cobranca_orgao.nr_seq_orgao%type;
dt_inclusao_w			timestamp;
dt_pedido_retirada_w		timestamp;
dt_retirada_w			timestamp;
dt_prevista_retirada_w		cobranca_orgao.nr_sequencia%type;
ds_observacao_orgao_w		cobranca_orgao.ds_observacao%type;

--etapa
dt_etapa_w			timestamp;
cd_etapa_w			cobranca_etapa.nr_seq_etapa%type;
ds_observacao_etapa_w		varchar(255);

--responsavel cobrança
dt_alteracao_w			timestamp;
cd_reponsavel_anterior_w	cobranca_alt_cobrador.nr_seq_cobr_ant%type;
cd_reponsavel_atual_w		cobranca_alt_cobrador.nr_seq_cobr_novo%type;
ds_observacao_responsavel	varchar(255);

--anexos
ds_arquivo_w			cobranca_arq.ds_arquivo%type;
ie_anexar_email_w		cobranca_arq.ie_anexar_email%type;

-- juridicos
cd_pessoa_fisica_w		cobranca_valor_terc.cd_pessoa_fisica%type;
cd_pessoa_juridica_w		cobranca_valor_terc.cd_cgc%type;
vl_juridico_w			cobranca_valor_juridico.vl_juridico%type;
dt_recebimento_w		timestamp;

--parametros
cd_tipo_portador_w		cobranca.cd_tipo_portador%type;
cd_portador_w			cobranca.cd_portador%type;
nr_seq_cobrador_w		cobranca.nr_seq_cobrador%type;
nr_seq_cobr_origem_w		cobranca.nr_seq_tipo_cobranca%type;
nr_seq_cobranca_w		cobranca.nr_sequencia%type;
cd_estabelecimento_w		titulo_receber.cd_estabelecimento%type;
vl_titulo_w			titulo_receber.vl_titulo%type;
ie_acao_valor_w			cobranca_valor_terc.ie_acao_valor%type;
dt_atualizacao_w		cobranca_historico.dt_atualizacao%type;
nm_usuario_w			cobranca_historico.nm_usuario%type;


c01 CURSOR FOR  --historico
	SELECT 	to_date(to_char(a.dt_historico, 'dd/MM/yyyy hh24:mi:ss'),'dd/MM/yyyy hh24:mi:ss') dt_historico,
		coalesce(a.nr_seq_historico,0) nr_tipo_historico,
		coalesce(a.vl_historico,0),
		a.ds_historico ds_historico,
		to_char(a.dt_atualizacao,'dd/mm/yyyy') dt_atualizacao,
		substr(a.nm_usuario,1,15) nm_usuario
	from	cobranca_historico a,
		cobranca b
	where 	a.nr_seq_cobranca 	= b.nr_sequencia
	and	b.nr_titulo 		= nr_titulo_origem_p;

c02 CURSOR FOR  --terceiros
	SELECT 	a.nr_seq_terceiro nr_terceiro,
		coalesce(a.vl_terceiro,0) nr_terceiro_valor,
		to_date(to_char(a.dt_recebimento,'dd/MM/yyyy hh24:mi:ss'),'dd/MM/yyyy hh24:mi:ss') dt_recebimento,
		a.cd_cgc cd_pessoa_juridica,
		a.cd_pessoa_fisica cd_pessoa_fisica,
		nr_seq_tipo_terc nr_seq_tipo,
		a.ie_acao_valor
	from 	cobranca_valor_terc a,
		cobranca b
	where 	a.nr_seq_cobranca 	= b.nr_sequencia
	and	b.nr_titulo 		= nr_titulo_origem_p;

c03 CURSOR FOR  --orgão cobranca
	SELECT 	coalesce(a.nr_seq_orgao,0) cd_orgao,
		a.dt_inclusao dt_inclusao,
		a.dt_pedido_retirada dt_pedito_retirada,
		to_date(to_char(a.dt_retirada,'dd/MM/yyyy hh24:mi:ss'),'dd/MM/yyyy hh24:mi:ss') dt_retirada,
		a.ds_observacao ds_observacao
	from 	cobranca_orgao a,
		cobranca b
	where 	a.nr_seq_cobranca 	= b.nr_sequencia
	and	b.nr_titulo 		= nr_titulo_origem_p;

c04 CURSOR FOR  -- etapa
	SELECT 	to_date(to_char(a.dt_etapa,'dd/MM/yyyy hh24:mi:ss'),'dd/MM/yyyy hh24:mi:ss') dt_etapa,
		a.nr_seq_etapa cd_padrao,
		substr(a.ds_observacao,1,255) ds_observacao
	from 	cobranca_etapa a,
		cobranca b
	where 	a.nr_seq_cobranca 	= b.nr_sequencia
	and	b.nr_titulo 		= nr_titulo_origem_p
	order by a.dt_etapa;

c05 CURSOR FOR  --Responsável Cobrança
	SELECT	to_date(to_char(a.dt_alteracao,'dd/MM/yyyy hh24:mi:ss'),'dd/MM/yyyy hh24:mi:ss') dt_alteracao,
		a.nr_seq_cobr_ant ds_cobrador_ant,
		a.nr_seq_cobr_novo ds_cobrador_novo,
		substr(a.ds_observacao,1,255) ds_observacao
	from 	cobranca_alt_cobrador a,
		cobranca b
	where 	a.nr_seq_cobranca 	= b.nr_sequencia
	and	b.nr_titulo 		= nr_titulo_origem_p;

c06 CURSOR FOR  --anexos
	SELECT	a.ds_arquivo ds_arquivo,
		a.ie_anexar_email ie_email
	from 	cobranca_arq a,
		cobranca b
	where 	a.nr_seq_cobranca 	= b.nr_sequencia
	and	b.nr_titulo 		= nr_titulo_origem_p;

c07 CURSOR FOR  --juridico
	SELECT 	a.cd_pessoa_fisica nm_pessoa_fisica,
		a.cd_cgc nm_pessa_juridica,
		a.vl_juridico vl_juridico,
		to_date(to_char(a.dt_recebimento,'dd/MM/yyyy hh24:mi:ss'),'dd/MM/yyyy hh24:mi:ss') dt_recebimento
	from 	cobranca_valor_juridico a,
		cobranca b
	where 	a.nr_seq_cobranca 	= b.nr_sequencia
	and	b.nr_titulo 		= nr_titulo_origem_p;


BEGIN

select 	coalesce(max(a.cd_tipo_portador),0) cd_tipo_portador,
	coalesce(max(a.cd_portador),0) cd_portador,
	max(a.nr_seq_cobrador) nr_portador,
	max(a.nr_seq_tipo_cobranca) nr_cobranca
into STRICT 	cd_tipo_portador_w,
	cd_portador_w,
	nr_seq_cobrador_w,
	nr_seq_cobr_origem_w
from 	cobranca a
where 	a.nr_titulo = nr_titulo_origem_p;

select	coalesce(max(a.cd_estabelecimento),0) cd_estabelecimento,
	coalesce(max(a.vl_titulo),0) vl_titulo
into STRICT	cd_estabelecimento_w,
	vl_titulo_w
from	titulo_receber a
where	a.nr_titulo	= nr_titulo_p;

select	nextval('cobranca_seq') nr_sequencia
into STRICT	nr_seq_cobranca_w
;

insert	into cobranca(
	nr_sequencia,
	cd_estabelecimento,
	dt_atualizacao,
	nm_usuario,
	nr_titulo,
	ie_status,
	vl_original,
	vl_acobrar,
	dt_previsao_cobranca,
	dt_inclusao,
	cd_tipo_portador,
	nr_seq_cobrador,
	cd_portador)
values (nr_seq_cobranca_w,
	cd_estabelecimento_w,
	clock_timestamp(),
	nm_usuario_p,
	nr_titulo_p,
	'P',
	vl_titulo_w,
	vl_titulo_w,
	trunc(clock_timestamp(),'dd'),
	trunc(clock_timestamp(),'dd'),
	cd_tipo_portador_w,
	nr_seq_cobrador_w,
	cd_portador_w);

if (ie_historico_p = 'S') then

	open	c01; -- Histórico
	loop
	fetch	c01 into
		dt_historico_w,
		nr_tipo_historico_w,
		vl_historico_w,
		ds_historico_w,
		dt_atualizacao_w,
		nm_usuario_w;

	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		insert	into cobranca_historico(nr_sequencia,
			dt_historico,
			nr_seq_historico,
			vl_historico,
			ds_historico,
			nr_seq_cobranca,
			dt_atualizacao,
			nm_usuario)
		VALUES (nextval('cobranca_historico_seq'),
			dt_historico_w,
			nr_tipo_historico_w,
			vl_historico_w,
			ds_historico_w,
			nr_seq_cobranca_w,
			dt_atualizacao_w,
			nm_usuario_w);

		end;
	end	loop;
	close	C01;

end if;

if (ie_terceiros_p = 'S') then

	open c02; -- Terceiros
	loop
	fetch c02 into

		nr_seq_terceiro_w,
		vl_terceiro_w,
		dt_recebimento_w,
		cd_pessoa_juridica_w,
		cd_pessoa_fisica_w,
		nr_seq_tipo_w,
		ie_acao_valor_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		insert into cobranca_valor_terc(	nr_sequencia,
			nr_seq_terceiro,
			vl_terceiro,
			dt_recebimento,
			cd_cgc,
			cd_pessoa_fisica,
			nr_seq_tipo_terc,
			nr_seq_cobranca,
			dt_atualizacao,
			ie_acao_valor,
			nm_usuario)
		VALUES (nextval('cobranca_valor_terc_seq'),
			nr_seq_terceiro_w,
			vl_terceiro_w,
			dt_recebimento_w,
			cd_pessoa_juridica_w,
			cd_pessoa_fisica_w,
			nr_seq_tipo_w,
			nr_seq_cobranca_w,
			clock_timestamp(),
			ie_acao_valor_w,
			nm_usuario_p);
		end;
	end 	loop;
	close 	C02;

end if;

if (ie_orgao_cobranca_p = 'S') then

	open c03; -- Orgão cobrança
	loop
	fetch c03 into

		cd_orgao_w,
		dt_inclusao_w,
		dt_pedido_retirada_w,
		dt_retirada_w,
		ds_observacao_orgao_w;

		EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		insert into cobranca_orgao(	nr_sequencia,
			nr_seq_orgao,
			dt_inclusao,
			dt_pedido_retirada,
			dt_retirada,
			ds_observacao,
			nm_usuario,
			dt_atualizacao,
			nr_seq_cobranca)
		VALUES (nextval('cobranca_orgao_seq'),
			cd_orgao_w,
			dt_inclusao_w,
			dt_pedido_retirada_w,
			dt_retirada_w,
			ds_observacao_orgao_w,
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_cobranca_w);

		end;
	end 	loop;
	close 	C03;

end if;

if (ie_etapa_p = 'S') then

	open c04; -- etapa
	loop
	fetch c04 into

		dt_etapa_w,
		cd_etapa_w,
		ds_observacao_etapa_w;

		EXIT WHEN NOT FOUND; /* apply on C04 */
		begin

			insert into cobranca_etapa(	nr_sequencia,
			dt_etapa,
			nr_seq_etapa,
			ds_observacao,
			nr_seq_cobranca,
			nm_usuario,
			dt_atualizacao)
		VALUES (nextval('cobranca_etapa_seq'),
			dt_etapa_w,
			cd_etapa_w,
			ds_observacao_etapa_w,
			nr_seq_cobranca_w,
			nm_usuario_p,
			clock_timestamp());

		end;
	end 	loop;
	close 	C04;

end if;

if (ie_responsavel_p = 'S') then

	open c05; ---Responsável Cobrança
	loop
	fetch c05 into

		dt_alteracao_w,
		cd_reponsavel_anterior_w,
		cd_reponsavel_atual_w,
		ds_observacao_responsavel;

		EXIT WHEN NOT FOUND; /* apply on C05 */
		begin

		insert into cobranca_alt_cobrador(	nr_sequencia,
			dt_alteracao,
			nr_seq_cobr_ant,
			nr_seq_cobr_novo,
			ds_observacao,
			nr_seq_cobranca,
			nm_usuario,
			dt_atualizacao)
		VALUES (nextval('cobranca_alt_cobrador_seq'),
			dt_alteracao_w,
			cd_reponsavel_anterior_w,
			cd_reponsavel_atual_w,
			ds_observacao_responsavel,
			nr_seq_cobranca_w,
			nm_usuario_p,
			clock_timestamp());

		end;
	end 	loop;
	close 	C05;

end if;

if (ie_anexos_p = 'S') then

	open c06; ---Anexox
	loop
	fetch c06 into

		ds_arquivo_w,
		ie_anexar_email_w;

		EXIT WHEN NOT FOUND; /* apply on C06 */
		begin

		insert into cobranca_arq(	nr_sequencia,
			ds_arquivo,
			ie_anexar_email,
			nr_seq_cobranca,
			dt_atualizacao,
			nm_usuario)
		VALUES (nextval('cobranca_arq_seq'),
			ds_arquivo_w,
			ie_anexar_email_w,
			nr_seq_cobranca_w,
			clock_timestamp(),
			nm_usuario_p);

		end;
	end 	loop;
	close 	C06;

end if;

if (ie_juridicos_p = 'S') then

	open c07; ---juridico
	loop
	fetch c07 into

		cd_pessoa_fisica_w,
		cd_pessoa_juridica_w,
		vl_juridico_w,
		dt_recebimento_w;

		EXIT WHEN NOT FOUND; /* apply on C07 */
		begin

		insert into cobranca_valor_juridico(	nr_sequencia,
			cd_pessoa_fisica,
			cd_cgc,
			vl_juridico,
			dt_recebimento,
			nr_seq_cobranca,
			nm_usuario,
			dt_atualizacao)
		VALUES (nextval('cobranca_valor_juridico_seq'),
			cd_pessoa_fisica_w,
			cd_pessoa_juridica_w,
			vl_juridico_w,
			dt_recebimento_w,
			nr_seq_cobranca_w,
			nm_usuario_p,
			clock_timestamp());

		end;
	end 	loop;
	close 	C07;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobranca_desdobramento ( nr_titulo_p bigint, nr_titulo_origem_p bigint, ie_historico_p text, ie_terceiros_p text, ie_orgao_cobranca_p text, ie_etapa_p text, ie_responsavel_p text, ie_anexos_p text, ie_juridicos_p text, nm_usuario_p text) FROM PUBLIC;

