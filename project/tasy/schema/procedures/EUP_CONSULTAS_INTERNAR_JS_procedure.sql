-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eup_consultas_internar_js ( cd_convenio_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_reserva_leito_p text, dt_entrada_p timestamp, nm_usuario_p text, ds_titulo_117037_p INOUT text, ds_titulo_117038_p INOUT text, ds_titulo_117039_p INOUT text, ds_mensagem_88938_p INOUT text, ds_mensagem_88939_p INOUT text, ds_mgs_data_confir_int_p INOUT text, nr_seq_solic_vaga_p INOUT text, ie_alta_gerada_p INOUT text, dt_internacao_p INOUT timestamp, cd_setor_reserva_pac_p INOUT bigint, ds_msg_reserva_pac_p INOUT text, cd_uni_basica_p INOUT text, cd_unid_compl_p INOUT text, ds_msg_reserva_isol_p INOUT text, cd_setor_reserva_conv_p INOUT bigint, cd_setor_p INOUT bigint, cd_basica_p INOUT text, cd_compl_p INOUT text, cd_medico_p INOUT text, ie_medico_ciente_p INOUT text, cd_medico_vaga_p INOUT text) AS $body$
DECLARE


qt_motivo_alta_w	bigint;
cd_estabelecimento_w 	smallint;
qt_minutos_int_w	numeric(20);


BEGIN

cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

qt_minutos_int_w := Obter_param_Usuario(916, 142, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_minutos_int_w);

ds_titulo_117037_p := obter_texto_tasy(117037,wheb_usuario_pck.get_nr_seq_idioma);
ds_titulo_117038_p := obter_texto_tasy(117038,wheb_usuario_pck.get_nr_seq_idioma);
ds_titulo_117039_p := obter_texto_tasy(117039,wheb_usuario_pck.get_nr_seq_idioma);
ds_mensagem_88938_p := obter_texto_tasy(88938,wheb_usuario_pck.get_nr_seq_idioma);
ds_mensagem_88939_p := obter_texto_tasy(88939,wheb_usuario_pck.get_nr_seq_idioma);

if (trunc(dt_entrada_p) <>  trunc(clock_timestamp())) then

	ds_mgs_data_confir_int_p := substr(obter_texto_dic_objeto(88664, wheb_usuario_pck.get_nr_seq_idioma, 'DT_ENTRADA='||to_char(dt_entrada_p, 'dd/mm/yyyy')),1,255);
end if;


nr_seq_solic_vaga_p := obter_se_leito_livre_reservado(cd_pessoa_fisica_p, 'V', 'L', 'PS', nr_atendimento_p);

if (coalesce(nr_seq_solic_vaga_p,0) > 0) then

	cd_setor_p := obter_se_leito_livre_reservado(cd_pessoa_fisica_p,'S','L','PS', nr_atendimento_p);
        cd_basica_p := obter_se_leito_livre_reservado(cd_pessoa_fisica_p,'UB','L','PS',nr_atendimento_p);
        cd_compl_p := obter_se_leito_livre_reservado(cd_pessoa_fisica_p,'UC','L','PS',nr_atendimento_p);

end if;


select	coalesce(max(cd_motivo_alta),0)
into STRICT	qt_motivo_alta_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

if (qt_motivo_alta_w = 0) then
	ie_alta_gerada_p := 'N';
else
	ie_alta_gerada_p := 'S';
end if;

if (coalesce(qt_minutos_int_w,0) > 0) then
	dt_internacao_p := dt_entrada_p + (qt_minutos_int_w/1440);
else
	dt_internacao_p := clock_timestamp();
end if;

if (cd_reserva_leito_p = 'S') then
	select	coalesce(max(cd_setor_atendimento),0)
	into STRICT	cd_setor_reserva_pac_p
	from    ocupacao_unidade_v
	where    cd_paciente_reserva = cd_pessoa_fisica_p
	and      ie_status_unidade in ('L','R')
	and  	cd_setor_atendimento in (SELECT x.cd_setor_atendimento from setor_atendimento x where x.cd_estabelecimento = cd_estabelecimento_w);
else
	select	coalesce(max(cd_setor_atendimento),0)
	into STRICT	cd_setor_reserva_pac_p
	from    ocupacao_unidade_v
	where    cd_paciente_reserva = cd_pessoa_fisica_p
	and      ie_status_unidade in ('L','R');
end if;

if (cd_setor_reserva_pac_p > 0) then
	if (cd_reserva_leito_p = 'S') then
		select	max(cd_unidade_basica),
			max(cd_unidade_compl)
		into STRICT	cd_uni_basica_p,
			cd_unid_compl_p
		from    ocupacao_unidade_v
		where   cd_paciente_reserva = cd_pessoa_fisica_p
		and     ie_status_unidade in ('L','R')
		and  	cd_setor_atendimento in (SELECT x.cd_setor_atendimento from setor_atendimento x where x.cd_estabelecimento = cd_estabelecimento_w);
	else
		select	max(cd_unidade_basica),
			max(cd_unidade_compl)
		into STRICT	cd_uni_basica_p,
			cd_unid_compl_p
		from    ocupacao_unidade_v
		where   cd_paciente_reserva = cd_pessoa_fisica_p
		and     ie_status_unidade in ('L','R');
	end if;

	ds_msg_reserva_pac_p := substr(obter_texto_tasy(88938, wheb_usuario_pck.get_nr_seq_idioma),1,255);

	ds_msg_reserva_isol_p := obter_necessita_isol_reserva(cd_pessoa_fisica_p, ds_msg_reserva_isol_p);
elsif (cd_reserva_leito_p = 'S') then

	select	coalesce(max(cd_setor_atendimento),0)
	into STRICT	cd_setor_reserva_conv_p
	from    ocupacao_unidade_v
        where   cd_convenio_reserva = cd_convenio_p
        and     coalesce(cd_paciente_reserva::text, '') = ''
        and     ie_status_unidade in ('L','R')
	and  cd_setor_atendimento in (SELECT x.cd_setor_atendimento from setor_atendimento x where x.cd_estabelecimento = cd_estabelecimento_w);
else
	select	coalesce(max(cd_setor_atendimento),0)
	into STRICT	cd_setor_reserva_conv_p
	from    ocupacao_unidade_v
		where   cd_convenio_reserva = cd_convenio_p
		and     coalesce(cd_paciente_reserva::text, '') = ''
		and     ie_status_unidade in ('L','R');

	if (cd_setor_reserva_conv_p > 0) then
		ds_msg_reserva_pac_p := substr(obter_texto_tasy(88939, wheb_usuario_pck.get_nr_seq_idioma),1,255);

		select  max(cd_unidade_basica),
			max(cd_unidade_compl)
		into STRICT	cd_uni_basica_p,
			cd_unid_compl_p
		from    ocupacao_unidade_v
		where   cd_convenio_reserva = cd_convenio_p
                and     coalesce(cd_paciente_reserva::text, '') = ''
		and     ie_status_unidade in ('L','R');

	end if;

end if;

select	max(cd_medico_dest),
	coalesce(max(ie_medico_ciente), 'N')
into STRICT 	cd_medico_p,
	ie_medico_ciente_p
from	atendimento_alta a, parametro_medico p
where	nr_atendimento = nr_atendimento_p
and     p.cd_estabelecimento = cd_estabelecimento_w
and     ((ie_tipo_orientacao <> 'P')
or      ((a.ie_tipo_orientacao = 'P') and (coalesce(p.ie_liberar_desfecho,'N') = 'N')
or 		((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and (coalesce(a.dt_inativacao::text, '') = ''))));

select	max(cd_medico)
into STRICT 	cd_medico_vaga_p
from	gestao_vaga
where	nr_atendimento = nr_atendimento_p
and		nr_sequencia = (SELECT	max(nr_sequencia)
						from	gestao_vaga
						where	nr_atendimento = nr_atendimento_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eup_consultas_internar_js ( cd_convenio_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_reserva_leito_p text, dt_entrada_p timestamp, nm_usuario_p text, ds_titulo_117037_p INOUT text, ds_titulo_117038_p INOUT text, ds_titulo_117039_p INOUT text, ds_mensagem_88938_p INOUT text, ds_mensagem_88939_p INOUT text, ds_mgs_data_confir_int_p INOUT text, nr_seq_solic_vaga_p INOUT text, ie_alta_gerada_p INOUT text, dt_internacao_p INOUT timestamp, cd_setor_reserva_pac_p INOUT bigint, ds_msg_reserva_pac_p INOUT text, cd_uni_basica_p INOUT text, cd_unid_compl_p INOUT text, ds_msg_reserva_isol_p INOUT text, cd_setor_reserva_conv_p INOUT bigint, cd_setor_p INOUT bigint, cd_basica_p INOUT text, cd_compl_p INOUT text, cd_medico_p INOUT text, ie_medico_ciente_p INOUT text, cd_medico_vaga_p INOUT text) FROM PUBLIC;

