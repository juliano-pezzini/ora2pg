-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_contact_with_patient ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


pfcs_panel_detail_seq_w		pfcs_panel_detail.nr_sequencia%type;
nr_seq_panel_w			pfcs_panel.nr_sequencia%type;
qt_total_w			bigint := 0;
nr_encounter_w			atendimento_paciente.nr_atendimento%type;
id_patient_with_covid_w		atendimento_paciente.cd_pessoa_fisica%type;
nr_seq_operational_level_w  pfcs_operational_level.nr_sequencia%type;

c01 CURSOR FOR
SELECT  a.nr_atendimento, a.cd_pessoa_fisica
from    atendimento_paciente a
where (dt_alta > to_date('01/01/2020','DD/MM/YYYY') or coalesce(dt_alta::text, '') = '')
and (
		exists (	select	1
                from atend_paciente_adic b
                    join atendimento_paciente c ON b.nr_atendimento = c.nr_atendimento
                    join paciente_exame d ON c.cd_pessoa_fisica = d.cd_pessoa_fisica
                where   coalesce(d.dt_inativacao::text, '') = ''
                    and     c.nr_atendimento = a.nr_atendimento
                    and		coalesce(b.ie_atend_covid_posit , 'N') = 'S')
		or exists (	select	1
					from	pfcs_diagnosis d,
							diagnostico_doenca c
					where	REPLACE(c.cd_doenca,'.','') = REPLACE(d.cd_doenca,'.','')
					and 	c.nr_atendimento = a.nr_atendimento
					and		coalesce(d.ie_positivo, 'N') = 'S')
        or exists (	SELECT 1
                    FROM
                        prescr_procedimento   pp
                        INNER JOIN prescr_medica pm ON pp.nr_prescricao = pm.nr_prescricao
                        INNER JOIN exame_lab_result_item elri ON pp.nr_sequencia = elri.nr_seq_prescr
                        INNER JOIN exame_lab_resultado elr ON pm.nr_prescricao = elr.nr_prescricao AND elri.nr_seq_resultado = elr.nr_seq_resultado
                    WHERE
                        pfcs_lab_obter_se_exame_covid(pp.nr_seq_exame) = 'S'
                        AND pm.nr_atendimento =  a.nr_atendimento
                        AND pp.ie_status_atend >= 35
                        AND (pm.dt_liberacao IS NOT NULL AND pm.dt_liberacao::text <> '')
                        AND substr(UPPER(coalesce(elri.ds_resultado, 'ND')),1,7) =  substr(UPPER(obter_desc_expressao(296109)),1,7))
		)
and	cd_estabelecimento = cd_estabelecimento_p;

c02 CURSOR FOR
SELECT  distinct b.nr_atendimento nr_encounter,
        b.cd_pessoa_fisica id_patient,
        coalesce(get_formatted_person_name(b.cd_pessoa_fisica, 'list'), obter_nome_pf(b.cd_pessoa_fisica)) nm_patient,
        obter_sexo_pf(b.cd_pessoa_fisica, 'D') ds_gender,
    	obter_data_nascto_pf(b.cd_pessoa_fisica) dt_birthdate,
	obter_ds_setor_atendimento(c.cd_setor_atendimento) ds_care_department,
	a.dt_entrada_unidade dt_first_contact
from (
select	distinct z.nr_atendimento, z.nr_sequencia, z.dt_entrada_unidade
from	atend_paciente_unidade x,
        unidade_atendimento b,
        atend_paciente_unidade z,
		setor_atendimento s
where 	x.nr_atendimento 	= nr_encounter_w
and	x.cd_setor_atendimento 	= b.cd_setor_atendimento
and	x.cd_unidade_basica 	= b.cd_unidade_basica
and	x.cd_unidade_compl 	= b.cd_unidade_compl
and     z.cd_setor_Atendimento  = x.cd_setor_atendimento
and	z.cd_unidade_basica 	= x.cd_unidade_basica
and z.cd_setor_atendimento = s.cd_setor_atendimento
and s.cd_estabelecimento = cd_estabelecimento_p
and     z.nr_atendimento != x.nr_atendimento
and (z.dt_entrada_unidade between x.dt_entrada_unidade and coalesce(x.dt_saida_unidade,clock_timestamp()))
and 	x.dt_entrada_unidade > to_date('01/01/2020','DD/MM/YYYY')

union all

select	distinct z.nr_atendimento, z.nr_sequencia, x.dt_entrada_unidade
from	atend_paciente_unidade x,
        unidade_atendimento b,
        atend_paciente_unidade z,
		setor_atendimento s
where 	x.nr_atendimento 	= nr_encounter_w
and	x.cd_setor_atendimento 	= b.cd_setor_atendimento
and	x.cd_unidade_basica 	= b.cd_unidade_basica
and	x.cd_unidade_compl 	= b.cd_unidade_compl
and     z.cd_setor_Atendimento  = x.cd_setor_atendimento
and	z.cd_unidade_basica 	= x.cd_unidade_basica
and z.cd_setor_atendimento = s.cd_setor_atendimento
and s.cd_estabelecimento = cd_estabelecimento_p
and     z.nr_atendimento != x.nr_atendimento
and (x.dt_entrada_unidade between z.dt_entrada_unidade and coalesce(z.dt_saida_unidade,clock_timestamp()))
and 	x.dt_entrada_unidade > to_date('01/01/2020','DD/MM/YYYY')

union all

select	distinct z.nr_atendimento, z.nr_sequencia, z.dt_entrada_unidade
from	atend_paciente_unidade x,
        unidade_atendimento b,
        atend_paciente_unidade z,
		setor_atendimento s,
	unidade_atendimento y
where 	x.nr_atendimento 	= nr_encounter_w
and	x.cd_setor_atendimento 	= b.cd_setor_atendimento
and	x.cd_unidade_basica 	= b.cd_unidade_basica
and	x.cd_unidade_compl 	= b.cd_unidade_compl
and	z.cd_setor_atendimento 	= y.cd_setor_atendimento
and	z.cd_unidade_basica 	= y.cd_unidade_basica
and	z.cd_unidade_compl 	= y.cd_unidade_compl
and	(b.nr_agrupamento IS NOT NULL AND b.nr_agrupamento::text <> '')
and	(y.nr_agrupamento IS NOT NULL AND y.nr_agrupamento::text <> '')
and	b.nr_agrupamento	= y.nr_agrupamento
and	b.cd_setor_atendimento	= y.cd_setor_atendimento
and z.cd_setor_atendimento = s.cd_setor_atendimento
and s.cd_estabelecimento = cd_estabelecimento_p
and     z.nr_atendimento != x.nr_atendimento
and (z.dt_entrada_unidade between x.dt_entrada_unidade and coalesce(x.dt_saida_unidade,clock_timestamp()))
and 	x.dt_entrada_unidade > to_date('01/01/2020','DD/MM/YYYY')

union all

select	distinct z.nr_atendimento, z.nr_sequencia, x.dt_entrada_unidade
from	atend_paciente_unidade x,
        unidade_atendimento b,
        atend_paciente_unidade z,
		setor_atendimento s,
	unidade_atendimento y
where 	x.nr_atendimento 	= nr_encounter_w
and	x.cd_setor_atendimento 	= b.cd_setor_atendimento
and	x.cd_unidade_basica 	= b.cd_unidade_basica
and	x.cd_unidade_compl 	= b.cd_unidade_compl
and	z.cd_setor_atendimento 	= y.cd_setor_atendimento
and	z.cd_unidade_basica 	= y.cd_unidade_basica
and	z.cd_unidade_compl 	= y.cd_unidade_compl
and	(b.nr_agrupamento IS NOT NULL AND b.nr_agrupamento::text <> '')
and	(y.nr_agrupamento IS NOT NULL AND y.nr_agrupamento::text <> '')
and	b.nr_agrupamento	= y.nr_agrupamento
and	b.cd_setor_atendimento	= y.cd_setor_atendimento
and z.cd_setor_atendimento = s.cd_setor_atendimento
and s.cd_estabelecimento = cd_estabelecimento_p
and     z.nr_atendimento != x.nr_atendimento
and (x.dt_entrada_unidade between z.dt_entrada_unidade and coalesce(z.dt_saida_unidade,clock_timestamp()))
and 	x.dt_entrada_unidade > to_date('01/01/2020','DD/MM/YYYY')

union all

select	distinct z.nr_atendimento, z.nr_sequencia, z.dt_entrada_unidade
from	atend_paciente_unidade x,
        unidade_atendimento b,
        atend_paciente_unidade z,
		setor_atendimento s,
	unidade_atendimento y
where 	x.nr_atendimento 	= nr_encounter_w
and	x.cd_setor_atendimento 	= b.cd_setor_atendimento
and	x.cd_unidade_basica 	= b.cd_unidade_basica
and	x.cd_unidade_compl 	= b.cd_unidade_compl
and	z.cd_setor_atendimento 	= y.cd_setor_atendimento
and	z.cd_unidade_basica 	= y.cd_unidade_basica
and	z.cd_unidade_compl 	= y.cd_unidade_compl
and	(b.ds_agrupamento IS NOT NULL AND b.ds_agrupamento::text <> '')
and	(y.ds_agrupamento IS NOT NULL AND y.ds_agrupamento::text <> '')
and	b.ds_agrupamento	= y.ds_agrupamento
and	b.cd_setor_atendimento	= y.cd_setor_atendimento
and z.cd_setor_atendimento = s.cd_setor_atendimento
and s.cd_estabelecimento = cd_estabelecimento_p
and     z.nr_atendimento != x.nr_atendimento
and (z.dt_entrada_unidade between x.dt_entrada_unidade and coalesce(x.dt_saida_unidade,clock_timestamp()))
and 	x.dt_entrada_unidade > to_date('01/01/2020','DD/MM/YYYY')

union all

select	distinct z.nr_atendimento, z.nr_sequencia, x.dt_entrada_unidade
from	atend_paciente_unidade x,
        unidade_atendimento b,
        atend_paciente_unidade z,
		setor_atendimento s,
	unidade_atendimento y
where 	x.nr_atendimento 	= nr_encounter_w
and	x.cd_setor_atendimento 	= b.cd_setor_atendimento
and	x.cd_unidade_basica 	= b.cd_unidade_basica
and	x.cd_unidade_compl 	= b.cd_unidade_compl
and	z.cd_setor_atendimento 	= y.cd_setor_atendimento
and	z.cd_unidade_basica 	= y.cd_unidade_basica
and	z.cd_unidade_compl 	= y.cd_unidade_compl
and	(b.ds_agrupamento IS NOT NULL AND b.ds_agrupamento::text <> '')
and	(y.ds_agrupamento IS NOT NULL AND y.ds_agrupamento::text <> '')
and	b.ds_agrupamento	= y.ds_agrupamento
and	b.cd_setor_atendimento	= y.cd_setor_atendimento
and z.cd_setor_atendimento = s.cd_setor_atendimento
and s.cd_estabelecimento = cd_estabelecimento_p
and     z.nr_atendimento != x.nr_atendimento
and (x.dt_entrada_unidade between z.dt_entrada_unidade and coalesce(z.dt_saida_unidade,clock_timestamp()))
and 	x.dt_entrada_unidade > to_date('01/01/2020','DD/MM/YYYY')) a ,
	atendimento_paciente b,
	atend_paciente_unidade c
where 	a.nr_atendimento = b.nr_atendimento
and	b.nr_atendimento = c.nr_atendimento
and	c.nr_sequencia = a.nr_sequencia;


BEGIN
nr_seq_operational_level_w := pfcs_get_structure_level(
    cd_establishment_p => cd_estabelecimento_p,
    ie_level_p => 'O',
    ie_info_p => 'C');

	open c01;
	loop
	fetch c01
	into	nr_encounter_w, id_patient_with_covid_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

		for c02_w in c02 loop
		begin

			qt_total_w	:= qt_total_w + 1;

			select	nextval('pfcs_panel_detail_seq')
			into STRICT	pfcs_panel_detail_seq_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level)
			values (
				pfcs_panel_detail_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				'T',
				nr_seq_indicator_p,
				nr_seq_operational_level_w);

			insert into pfcs_detail_patient(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				id_patient,
				nm_patient,
				ds_gender,
				dt_birthdate,
				nr_encounter,
				dt_entrance,
				ds_clinic,
				nr_encounter_varchar)
			values (
				nextval('pfcs_detail_patient_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c02_w.id_patient,
				c02_w.nm_patient,
				c02_w.ds_gender,
				c02_w.dt_birthdate,
				c02_w.nr_encounter,
				c02_w.dt_first_contact,
				c02_w.ds_care_department,
				id_patient_with_covid_w);
		end;
		end loop;
	end;
	end loop;
	close c01;

commit;

 := pfcs_pck.pfcs_generate_results(
		vl_indicator_p => qt_total_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

CALL pfcs_pck.pfcs_update_detail(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

CALL pfcs_pck.pfcs_activate_records(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_contact_with_patient ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

