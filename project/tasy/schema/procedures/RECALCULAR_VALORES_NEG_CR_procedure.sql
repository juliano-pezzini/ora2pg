-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recalcular_valores_neg_cr ( nr_seq_negociacao_p bigint, nr_seq_parcela_p bigint, dt_parcela_anterior_p timestamp, nm_usuario_p text) AS $body$
DECLARE



ie_forma_pagto_w		varchar(5);
vl_parcela_w			double precision;
vl_total_w			double precision;
vl_parcela_alterada_w		double precision	:= 0;
vl_soma_parcelas_w		double precision;
vl_parcelas_anteriores_w	double precision	:= 0;
nr_seq_parcela_w		bigint	:= null;
nr_seq_ultima_parcela_w		bigint;
pr_parcela_w			double precision;
pr_parcela_alterada_w		double precision	:= 0;
pr_soma_parcelas_w		double precision;
qt_parcela_w			integer;
nr_parcela_w			integer;
nr_parcela_alterada_w		integer	:= null;
dt_vencimento_w			timestamp;
dt_negociacao_w			timestamp;
dt_parcela_w			timestamp	:= null;
dt_parcela_alterada_w		timestamp	:= null;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_forma_pagto,
		a.dt_vencimento,
		a.vl_parcela,
		a.pr_parcela,
		a.nr_parcela
	from	negociacao_cr_parcela a
	where	a.nr_seq_negociacao	= nr_seq_negociacao_p
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	(a.vl_parcela IS NOT NULL AND a.vl_parcela::text <> '')
	and	((a.nr_parcela > nr_parcela_alterada_w) or
		 coalesce(nr_seq_parcela_p::text, '') = '')
	and	coalesce(nr_seq_ultima_parcela_w::text, '') = ''
	order by
		a.nr_parcela;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_forma_pagto,
		a.dt_vencimento,
		a.vl_parcela,
		a.pr_parcela,
		a.nr_parcela
	from	negociacao_cr_parcela a
	where	a.nr_seq_negociacao	= nr_seq_negociacao_p
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	(a.vl_parcela IS NOT NULL AND a.vl_parcela::text <> '')
	and	((a.nr_parcela >= nr_parcela_alterada_w) or
		 coalesce(nr_seq_parcela_p::text, '') = '')
	and	(nr_seq_ultima_parcela_w IS NOT NULL AND nr_seq_ultima_parcela_w::text <> '')
	order by
		a.nr_parcela desc;




BEGIN
/* Se não for  passado a parcela deve gerar os valores */

if (nr_seq_negociacao_p IS NOT NULL AND nr_seq_negociacao_p::text <> '') then
	select	a.dt_negociacao,
		obter_valores_negociacao_cr(a.nr_sequencia,'VT')
	into STRICT	dt_negociacao_w,
		vl_total_w
	from	negociacao_cr a
	where	a.nr_sequencia	= nr_seq_negociacao_p;

	if (nr_seq_parcela_p IS NOT NULL AND nr_seq_parcela_p::text <> '') then
		select	sum(a.vl_parcela)
		into STRICT	vl_soma_parcelas_w
		from	negociacao_cr_parcela a
		where	a.nr_seq_negociacao = nr_seq_negociacao_p;

		select	a.vl_parcela,
			a.pr_parcela,
			a.dt_vencimento,
			a.nr_parcela
		into STRICT	vl_parcela_alterada_w,
			pr_parcela_alterada_w,
			dt_parcela_alterada_w,
			nr_parcela_alterada_w
		from	negociacao_cr_parcela a
		where	a.nr_sequencia	= nr_seq_parcela_p;

		select	max(nr_sequencia)
		into STRICT	nr_seq_ultima_parcela_w
		from	negociacao_cr_parcela
		where	nr_seq_negociacao	= nr_seq_negociacao_p
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	(vl_parcela IS NOT NULL AND vl_parcela::text <> '');

		if (nr_seq_ultima_parcela_w <> nr_seq_parcela_p) then
			nr_seq_ultima_parcela_w	:= null;
		end if;

		/* Se o valor das parcelas não bate com o valor da negociação é porque está alterando o valor */

		if (vl_soma_parcelas_w <> vl_total_w) then
			pr_parcela_alterada_w	:= dividir_sem_round(vl_parcela_alterada_w,vl_total_w) * 100;

			update	negociacao_cr_parcela
			set	pr_parcela	= pr_parcela_alterada_w
			where	nr_sequencia	= nr_seq_parcela_p;
		else
			select	sum(a.pr_parcela)
			into STRICT	pr_soma_parcelas_w
			from	negociacao_cr_parcela a
			where	a.nr_seq_negociacao	= nr_seq_negociacao_p;

			/* Se o percentual das parcelas não for 100 é porque está alterando o percentual */

			if (pr_soma_parcelas_w <> 100) then
				vl_parcela_alterada_w	:= (vl_total_w * pr_parcela_alterada_w) / 100;

				update	negociacao_cr_parcela
				set	vl_parcela	= vl_parcela_alterada_w
				where	nr_sequencia	= nr_seq_parcela_p;
			end if;
		end if;

		select	coalesce(sum(a.vl_parcela),0)
		into STRICT	vl_parcelas_anteriores_w
		from	negociacao_cr_parcela a
		where	a.nr_seq_negociacao	= nr_seq_negociacao_p
		and	a.nr_parcela		<= nr_parcela_alterada_w;
	end if;

	select	count(*)
	into STRICT	qt_parcela_w
	from	negociacao_cr_parcela a
	where	a.nr_seq_negociacao	= nr_seq_negociacao_p
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	(a.vl_parcela IS NOT NULL AND a.vl_parcela::text <> '')
	and	((a.nr_parcela > nr_parcela_alterada_w) or coalesce(nr_seq_parcela_p::text, '') = '');

	open C01;
	loop
	fetch C01 into
		nr_seq_parcela_w,
		ie_forma_pagto_w,
		dt_vencimento_w,
		vl_parcela_w,
		pr_parcela_w,
		nr_parcela_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		vl_parcela_w	:= dividir_sem_round(vl_total_w - vl_parcelas_anteriores_w,qt_parcela_w);
		pr_parcela_w	:= dividir_sem_round(vl_parcela_w,vl_total_w) * 100;


		if (coalesce(nr_parcela_alterada_w::text, '') = '') and (nr_parcela_w = 1) then
			dt_parcela_w	:= PKG_DATE_UTILS.start_of(dt_negociacao_w,'dd',0);
		elsif (nr_parcela_w < nr_parcela_alterada_w) and (dt_parcela_alterada_w <> dt_parcela_anterior_p) then
			dt_parcela_w	:= dt_vencimento_w;
		elsif (nr_parcela_w = nr_parcela_alterada_w + 1) then
			dt_parcela_w	:= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_parcela_alterada_w,'dd',0),1,0);
		else
			dt_parcela_w	:= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_parcela_w,'dd',0),1,0);
		end if;

		update	negociacao_cr_parcela
		set	dt_vencimento	= dt_parcela_w,
			vl_parcela	= vl_parcela_w,
			pr_parcela	= pr_parcela_w
		where	nr_sequencia	= nr_seq_parcela_w;

		end;
	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		nr_seq_parcela_w,
		ie_forma_pagto_w,
		dt_vencimento_w,
		vl_parcela_w,
		pr_parcela_w,
		nr_parcela_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		vl_parcela_w	:= dividir_sem_round(vl_total_w - vl_parcelas_anteriores_w,qt_parcela_w);
		pr_parcela_w	:= dividir_sem_round(vl_parcela_w,vl_total_w) * 100;

		if (coalesce(nr_parcela_alterada_w::text, '') = '') and (nr_parcela_w = 1) then
			dt_parcela_w	:= PKG_DATE_UTILS.start_of(dt_negociacao_w,'dd',0);
		elsif (nr_parcela_w < nr_parcela_alterada_w) and (dt_parcela_alterada_w <> dt_parcela_anterior_p) then
			dt_parcela_w	:= dt_vencimento_w;
		elsif (nr_parcela_w = nr_parcela_alterada_w + 1) then
			dt_parcela_w	:= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_parcela_alterada_w,'dd',0),1,0);
		else
			dt_parcela_w	:= PKG_DATE_UTILS.start_of(dt_parcela_alterada_w,'dd',0);
		end if;

		update	negociacao_cr_parcela
		set	dt_vencimento	= dt_parcela_w,
			vl_parcela	= vl_parcela_w,
			pr_parcela	= pr_parcela_w
		where	nr_sequencia	= nr_seq_parcela_w;

		end;
	end loop;
	close C02;

	select	sum(a.vl_parcela)
	into STRICT	vl_soma_parcelas_w
	from	negociacao_cr_parcela a
	where	a.nr_seq_negociacao = nr_seq_negociacao_p;

	/* Arredondamento */

	if (vl_total_w <> vl_soma_parcelas_w) then
		vl_parcela_w	:= vl_parcela_w + (vl_total_w - vl_soma_parcelas_w);
		pr_parcela_w	:= dividir_sem_round(vl_parcela_w,vl_total_w) * 100;

		update	negociacao_cr_parcela
		set	vl_parcela	= vl_parcela_w,
			pr_parcela	= pr_parcela_w
		where	nr_sequencia	= nr_seq_parcela_w;
	end if;
end if;

if (nr_seq_parcela_p IS NOT NULL AND nr_seq_parcela_p::text <> '') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recalcular_valores_neg_cr ( nr_seq_negociacao_p bigint, nr_seq_parcela_p bigint, dt_parcela_anterior_p timestamp, nm_usuario_p text) FROM PUBLIC;

