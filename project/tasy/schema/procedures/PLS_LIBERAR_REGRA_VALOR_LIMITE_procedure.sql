-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_regra_valor_limite ( nr_seq_regra_p pls_regra_limite_copartic.nr_sequencia%type, ie_opcao_p text, dt_fim_vigencia_p pls_regra_limite_copartic.dt_fim_vigencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/*
ie_opcao_p
L	Liberar
D	Desfazer
F	Finalizar
*/
nr_seq_regra_w		pls_regra_limite_copartic.nr_sequencia%type;
nr_seq_contrato_w	pls_contrato.nr_sequencia%type;
dt_contrato_w		pls_contrato.dt_contrato%type;
ie_tipo_item_w		pls_mensalidade_seg_item.ie_tipo_item%type;
dt_inicio_vigencia_w	pls_regra_limite_copartic.dt_inicio_vigencia%type;
dt_fim_w		pls_regra_limite_copartic.dt_fim_vigencia%type;
dt_liberacao_w		timestamp;
dt_fim_vigencia_w	pls_regra_limite_copartic.dt_fim_vigencia%type;
nr_seq_plano_w		pls_regra_limite_copartic.nr_seq_plano%type;
qt_itens_regra_w	bigint;

C01 CURSOR(	nr_seq_contrato_pc	pls_contrato.nr_sequencia%type,
		nr_seq_plano_pc		pls_plano.nr_sequencia%type,
		nr_seq_regra_pc		pls_regra_limite_copartic.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_regra,
		b.ie_tipo_item,
		a.dt_inicio_vigencia,
		a.dt_fim_vigencia
	from	pls_regra_limite_copartic	a,
		pls_regra_limite_mens_item	b
	where	a.nr_sequencia	  = b.nr_seq_regra
	and	a.nr_seq_contrato = nr_seq_contrato_pc
	and	a.nr_sequencia	<> nr_seq_regra_pc
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	exists	(SELECT	1
			from	pls_regra_limite_mens_item	x,
				pls_regra_limite_copartic	y
			where	y.nr_sequencia	= x.nr_seq_regra
			and	x.nr_seq_regra	= nr_seq_regra_pc
			and	((y.nr_seq_plano_contrato = a.nr_seq_plano_contrato) or (coalesce(a.nr_seq_plano_contrato::text, '') = '') or (coalesce(y.nr_seq_plano_contrato::text, '') = ''))
			and	x.ie_tipo_item	= b.ie_tipo_item
			and (coalesce(b.nr_seq_tipo_lanc::text, '') = '' or coalesce(x.nr_seq_tipo_lanc::text, '') = '' or b.nr_seq_tipo_lanc = x.nr_seq_tipo_lanc))
	
union

	select	a.nr_sequencia nr_seq_regra,
		b.ie_tipo_item,
		a.dt_inicio_vigencia,
		a.dt_fim_vigencia
	from	pls_regra_limite_copartic	a,
		pls_regra_limite_mens_item	b
	where	a.nr_sequencia	  = b.nr_seq_regra
	and	a.nr_seq_plano = nr_seq_plano_pc
	and	a.nr_sequencia	<> nr_seq_regra_pc
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	exists (select	1
			from	pls_regra_limite_mens_item	x,
				pls_regra_limite_copartic	y
			where	y.nr_sequencia	= x.nr_seq_regra
			and	x.nr_seq_regra	= nr_seq_regra_pc
			and	x.ie_tipo_item	= b.ie_tipo_item
			and (coalesce(b.nr_seq_tipo_lanc::text, '') = '' or coalesce(x.nr_seq_tipo_lanc::text, '') = '' or b.nr_seq_tipo_lanc = x.nr_seq_tipo_lanc));

BEGIN

if (ie_opcao_p = 'F') then
	dt_fim_vigencia_w	:= dt_fim_vigencia_p;
elsif (ie_opcao_p = 'L') then
	select	count(1)
	into STRICT	qt_itens_regra_w
	from	pls_regra_limite_mens_item
	where	nr_seq_regra = nr_seq_regra_p;

	if (qt_itens_regra_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1038724);
	end if;

	select	max(a.nr_seq_contrato),
		max(a.dt_inicio_vigencia),
		max(a.dt_fim_vigencia),
		max(a.nr_seq_plano)
	into STRICT	nr_seq_contrato_w,
		dt_inicio_vigencia_w,
		dt_fim_w,
		nr_seq_plano_w
	from	pls_regra_limite_copartic	a
	where	a.nr_sequencia	= nr_seq_regra_p;

	for r_c01_w in C01(	nr_seq_contrato_w,
				nr_seq_plano_w,
				nr_seq_regra_p) loop
		begin
		if	((coalesce(dt_inicio_vigencia_w::text, '') = '' and coalesce(r_c01_w.dt_inicio_vigencia::text, '') = '') or (coalesce(dt_fim_w::text, '') = '' and coalesce(r_c01_w.dt_fim_vigencia::text, '') = '')) then
			nr_seq_regra_w	:= r_c01_w.nr_seq_regra;
		elsif	(((dt_inicio_vigencia_w IS NOT NULL AND dt_inicio_vigencia_w::text <> '') or (dt_fim_w IS NOT NULL AND dt_fim_w::text <> '')) and (coalesce(r_c01_w.dt_inicio_vigencia::text, '') = '' and coalesce(r_c01_w.dt_fim_vigencia::text, '') = '')) then
			nr_seq_regra_w	:= r_c01_w.nr_seq_regra;
		elsif	((dt_inicio_vigencia_w <= r_c01_w.dt_fim_vigencia) or (r_c01_w.dt_inicio_vigencia <= dt_fim_w)) then
			nr_seq_regra_w	:= r_c01_w.nr_seq_regra;
		end if;

		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
			--Para liberação da regra, é necessário que todos os itens das regras deste contrato sejam distintos. Verificar regra #@NR_SEQ_REGRA#@ e item de #@DS_ITEM#@.
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1028598, 'NR_SEQ_REGRA=' || nr_seq_regra_w || ';DS_ITEM=' || substr(obter_valor_dominio(1930, r_c01_w.ie_tipo_item),1,255));
		end if;
		end;
	end loop;

	dt_liberacao_w	:= clock_timestamp();
end if;

update 	pls_regra_limite_copartic
set	dt_liberacao	= CASE WHEN 'D'=ie_opcao_p THEN  null  ELSE coalesce(dt_liberacao_w, dt_liberacao) END ,
	nm_usuario	= nm_usuario_p,
	dt_atualizacao	= clock_timestamp(),
	dt_fim_vigencia = coalesce(dt_fim_vigencia_w, dt_fim_vigencia)
where	nr_sequencia	= nr_seq_regra_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_regra_valor_limite ( nr_seq_regra_p pls_regra_limite_copartic.nr_sequencia%type, ie_opcao_p text, dt_fim_vigencia_p pls_regra_limite_copartic.dt_fim_vigencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

