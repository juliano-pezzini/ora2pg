-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_deletar_itens_sem_horario ( nr_prescricao_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_horarios_dietas_orais_w		varchar(15);
nr_sequencia_w				bigint;
ie_prescr_vazia_w			varchar(1);
ds_item_w				varchar(255);
cd_intervalo_w				varchar(255);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	b.ds_material,
	a.cd_intervalo
from	prescr_material a,
	material b
where	a.nr_prescricao = nr_prescricao_p
and	a.cd_material = b.cd_material
and	(a.dt_suspensao_progr IS NOT NULL AND a.dt_suspensao_progr::text <> '')
and	coalesce(a.ie_se_necessario,'N') 	<> 'S'
and	coalesce(a.ie_acm,'N') 		<> 'S'
and	not exists (	select	1
			from	prescr_mat_hor b
			where	a.nr_prescricao 	= b.nr_prescricao
			and	b.nr_seq_material 	= a.nr_sequencia);

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	substr(obter_desc_proced_prescr(a.nr_prescricao,a.nr_sequencia),1,255),
	a.cd_intervalo
from	prescr_procedimento a
where	a.nr_prescricao = nr_prescricao_p
and	(a.dt_suspensao_progr IS NOT NULL AND a.dt_suspensao_progr::text <> '')
and	not exists (	select	1
			from	prescr_proc_hor b
			where	a.nr_prescricao 	= b.nr_prescricao
			and	b.nr_seq_procedimento 	= a.nr_sequencia);

c03 CURSOR FOR
SELECT	a.nr_sequencia,
	b.nm_dieta,
	a.cd_intervalo
from	prescr_dieta a,
	dieta b
where	a.nr_prescricao = nr_prescricao_p
and	a.cd_dieta = b.cd_dieta
and	(a.dt_suspensao_progr IS NOT NULL AND a.dt_suspensao_progr::text <> '')
and	not exists (	select	1
			from	prescr_dieta_hor b
			where	a.nr_prescricao 	= b.nr_prescricao);

c04 CURSOR FOR
SELECT	a.nr_sequencia,
	substr(coalesce(b.ds_tipo_recomendacao,a.ds_recomendacao),1,255)	,
	a.cd_intervalo
FROM prescr_recomendacao a
LEFT OUTER JOIN tipo_recomendacao b ON (a.cd_recomendacao = b.cd_tipo_recomendacao)
WHERE a.nr_prescricao = nr_prescricao_p  and (a.dt_suspensao_progr IS NOT NULL AND a.dt_suspensao_progr::text <> '') and not exists (	select	1
			from	prescr_rec_hor b
			where	a.nr_prescricao 	= b.nr_prescricao
			and	b.nr_seq_recomendacao 	= a.nr_sequencia);


BEGIN

ie_horarios_dietas_orais_w := Obter_Param_Usuario(1113, 148, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_horarios_dietas_orais_w);

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	ds_item_w,
	cd_intervalo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	delete	FROM prescr_material
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_sequencia_w;

	CALL plt_avisar_nao_copiado(ds_item_w, 'IS','GM',nr_prescricao_p,0,nm_usuario_p,null,null,'N', cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);

	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_sequencia_w,
	ds_item_w,
	cd_intervalo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	delete	FROM prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_sequencia_w;

	CALL plt_avisar_nao_copiado(ds_item_w, 'IS','GP',nr_prescricao_p,0,nm_usuario_p,null,null,'N', cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);

	end;
end loop;
close C02;

if (ie_horarios_dietas_orais_w = 'S') then

	open C03;
	loop
	fetch C03 into
		nr_sequencia_w,
		ds_item_w,
		cd_intervalo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		delete	FROM prescr_dieta
		where	nr_prescricao	= nr_prescricao_p;

		CALL plt_avisar_nao_copiado(ds_item_w, 'IS','D',nr_prescricao_p,0,nm_usuario_p,null,null,'N', cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);

		end;
	end loop;
	close C03;

end if;

open C04;
loop
fetch C04 into
	nr_sequencia_w,
	ds_item_w,
	cd_intervalo_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	delete	FROM prescr_recomendacao
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_sequencia_w;

	CALL plt_avisar_nao_copiado(ds_item_w, 'IS','R',nr_prescricao_p,0,nm_usuario_p,null,null,'N',cd_intervalo_w,cd_perfil_p,cd_estabelecimento_p);

	end;
end loop;
close C04;

if (obter_se_prescr_vazia(nr_prescricao_p) = 'S') then
	CALL excluir_prescr_copia(nr_prescricao_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_deletar_itens_sem_horario ( nr_prescricao_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

