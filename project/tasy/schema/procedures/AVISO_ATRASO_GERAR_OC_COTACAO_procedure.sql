-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE aviso_atraso_gerar_oc_cotacao ( cd_estabelecimento_p bigint, qt_dias_p bigint, nm_usuario_p text) AS $body$
DECLARE

						 
cd_comprador_w			varchar(10);
nm_comprador_w			varchar(100);
nr_cot_compra_w			bigint;
ds_lista_cotacao_w			varchar(4000) := '';
nr_seq_regra_w			bigint;
qt_regra_usuario_w			bigint;
nm_usuario_destino_w		varchar(255) := '';
nr_sequencia_w			bigint;
nr_seq_classif_w			bigint;
ds_titulo_w			varchar(80);
ds_comunicado_w			varchar(4000);
cd_perfil_w			varchar(10);
ie_ci_lida_w			varchar(1);
/* Se tiver setor na regra, envia CI para os setores */
ds_setor_adicional_w          	 varchar(2000) := '';
/* Campos da regra Usuário da Regra */
cd_setor_regra_usuario_w		integer;
cd_perfil_ativo_w			integer;

c01 CURSOR FOR 
SELECT	distinct 
	cd_comprador, 
	substr(obter_nome_pf_pj(cd_comprador, null),1,100) nm_comprador 
from	cot_compra 
where	cd_estabelecimento = cd_estabelecimento_p 
and	coalesce(nr_seq_motivo_cancel::text, '') = '' 
and	coalesce(dt_geracao_ordem_compra::text, '') = '' 
and	trunc(dt_cot_compra,'dd') <= trunc(clock_timestamp(),'dd') - coalesce(qt_dias_p,7) 
order by cd_comprador;

c02 CURSOR FOR 
SELECT	distinct 
	nr_cot_compra	 
from	cot_compra 
where	cd_estabelecimento = cd_estabelecimento_p 
and	coalesce(nr_seq_motivo_cancel::text, '') = '' 
and	coalesce(dt_geracao_ordem_compra::text, '') = '' 
and	trunc(dt_cot_compra,'dd') <= trunc(clock_timestamp(),'dd') - coalesce(qt_dias_p,7) 
and	cd_comprador = cd_comprador_w 
order by nr_cot_compra;

c05 CURSOR FOR 
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento 
from	regra_envio_comunic_usu a 
where	a.nr_seq_evento = nr_seq_regra_w;


BEGIN 
 
select	obter_classif_comunic('F') 
into STRICT	nr_seq_classif_w
;
 
begin 
select	obter_perfil_ativo 
into STRICT	cd_perfil_ativo_w
;
exception when others then 
	cd_perfil_ativo_w := 0;
end;
 
select	coalesce(max(b.nr_sequencia),0), 
	max(cd_perfil) 
into STRICT	nr_seq_regra_w, 
	cd_perfil_w 
from	regra_envio_comunic_compra a, 
	regra_envio_comunic_evento b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_funcao = 915 
and	b.cd_evento = 17 
and	b.ie_situacao = 'A' 
and	cd_estabelecimento = cd_estabelecimento_p 
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,0,'CC',cd_perfil_ativo_w,nm_usuario_p,null),1,1) = 'S';
 
if (nr_seq_regra_w > 0) then 
 
	open C05;
	loop 
	fetch C05 into	 
		cd_setor_regra_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then 
			ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
		end if;
		end;
	end loop;
	close C05;
 
	open C01;
	loop 
	fetch C01 into	 
		cd_comprador_w, 
		nm_comprador_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		ds_lista_cotacao_w := '';
		open C02;
		loop 
		fetch C02 into	 
			nr_cot_compra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			ds_lista_cotacao_w := substr(ds_lista_cotacao_w || nr_cot_compra_w || ', ',1,4000);
			end;
		end loop;
		close C02;
		 
		select	substr(ds_titulo,1,80), 
			ds_comunicacao 
		into STRICT	ds_titulo_w, 
			ds_comunicado_w 
		from	regra_envio_comunic_evento 
		where	nr_sequencia = nr_seq_regra_w;
 
		ds_comunicado_w := substr(replace_macro(ds_comunicado_w,'@comprador', nm_comprador_w),1,4000);
		ds_comunicado_w := substr(replace_macro(ds_comunicado_w,'@lista_cotacao', substr(ds_lista_cotacao_w,1,length(ds_lista_cotacao_w)-2)),1,4000);
 
		select	count(*) 
		into STRICT	qt_regra_usuario_w 
		from	regra_envio_comunic_compra a, 
			regra_envio_comunic_evento b, 
			regra_envio_comunic_usu c 
		where	a.nr_sequencia = b.nr_seq_regra 
		and	b.nr_sequencia = c.nr_seq_evento 
		and	b.nr_sequencia = nr_seq_regra_w;
 
		select	coalesce(ie_ci_lida,'N') 
		into STRICT	ie_ci_lida_w 
		from 	regra_envio_comunic_evento 
		where 	nr_sequencia = nr_seq_regra_w;
 
		if (qt_regra_usuario_w > 0) then 
			nm_usuario_destino_w := obter_usuarios_comunic_compras(nr_cot_compra_w,null,17,nr_seq_regra_w,'');
		end if;
		 
		if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then 
				 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_sequencia_w 
			;
			 
			if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
				cd_perfil_w := cd_perfil_w ||',';
			end if;
 
			insert into comunic_interna( 
				dt_comunicado,			ds_titulo,				ds_comunicado, 
				nm_usuario,			dt_atualizacao,			ie_geral, 
				nm_usuario_destino,		nr_sequencia,			ie_gerencial, 
				nr_seq_classif,			dt_liberacao,			ds_perfil_adicional, 
				ds_setor_adicional) 
			values (	clock_timestamp(),				ds_titulo_w,			ds_comunicado_w, 
				nm_usuario_p,			clock_timestamp(),				'N', 
				nm_usuario_destino_w,		nr_sequencia_w,			'N', 
				nr_seq_classif_w,			clock_timestamp(),		cd_perfil_w, 
				ds_setor_adicional_w);
 
			/*Para que a comunicação seja gerada como lida ao próprio usuário */
 
			if (ie_ci_lida_w = 'S') then 
				insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_sequencia_w,nm_usuario_p,clock_timestamp());
			end if;
 
		end if;
		end;		
	end loop;
	close C01;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aviso_atraso_gerar_oc_cotacao ( cd_estabelecimento_p bigint, qt_dias_p bigint, nm_usuario_p text) FROM PUBLIC;

