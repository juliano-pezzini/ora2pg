-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordem_compra_integracao ( nr_sequencia_p bigint, nm_usuario_p text, cd_estab_p bigint, cd_cgc_fornecedor_p text, cd_condicao_pagamento_p bigint, cd_comprador_p text, cd_moeda_p bigint, cd_pessoa_solicitante_p text, cd_cgc_transportador_p text, ie_frete_p text, vl_frete_p bigint, pr_desconto_p bigint, pr_desc_pgto_antec_p bigint, pr_juros_negociado_p bigint, ds_pessoa_contato_p text, ds_observacao_p text, cd_local_entrega_p bigint, dt_entrega_p timestamp, ie_aviso_chegada_p text, vl_despesa_acessoria_p bigint, nr_seq_subgrupo_compra_p bigint, pr_desc_financeiro_p bigint, cd_pessoa_fisica_p text, ie_urgente_p text, nr_seq_forma_pagto_p bigint, nr_documento_externo_p bigint, vl_desconto_p bigint, cd_centro_custo_p bigint, nr_ordem_compra_p INOUT bigint) AS $body$
DECLARE




cd_centro_custo_w				bigint;
nr_ordem_compra_w			bigint;
nr_item_oci_w				integer;
cd_material_w				integer;
cd_unidade_medida_compra_w		varchar(30);
vl_unitario_material_w			double precision;
qt_material_w				double precision;
ds_material_direto_w			varchar(255);
ds_observacao_w				varchar(255);
cd_conta_contabil_w			varchar(20);
ie_de_para_unid_med_w			varchar(15);
ie_de_para_material_w			varchar(15);
nr_solic_compra_w				bigint;
nr_item_solic_compra_w			integer;
nr_cot_compra_w				bigint;
nr_item_cot_compra_w			integer;
vl_ipi_w					double precision;
tx_ipi_w					double precision;
vl_item_liquido_w				double precision;
cd_ipi_w					bigint;
vl_desconto_w				double precision;
pr_descontos_w				double precision;
nr_seq_marca_w				sup_int_oc_item.nr_seq_marca%type;
nr_seq_marca_ww				marca.nr_sequencia%type;
qt_existe_w				bigint;

C01 CURSOR FOR
SELECT	nr_item_oci,
	cd_material,
	cd_unidade_medida_compra,
	vl_unitario_material,
	qt_material,
	ds_material_direto,
	ds_observacao,
	cd_centro_custo,
	cd_conta_contabil,
	nr_solic_compra,
	nr_item_solic_compra,
	nr_cot_compra,
	nr_item_cot_compra,
	coalesce(vl_ipi,0),
	coalesce(tx_ipi,0),
	coalesce(pr_descontos,0),
	coalesce(vl_desconto,0),
	nr_seq_marca
from	sup_int_oc_item
where	nr_sequencia = nr_sequencia_p;


BEGIN

select	obter_ie_de_para_sup_integr('OC','R','UNIDADE_MEDIDA'),
	obter_ie_de_para_sup_integr('OC','R','MATERIAL')
into STRICT	ie_de_para_unid_med_w,
	ie_de_para_material_w
;

select	nextval('ordem_compra_seq')
into STRICT	nr_ordem_compra_w
;

insert into ordem_compra(
	nr_ordem_compra,
	cd_estabelecimento,
	cd_cgc_fornecedor,
	cd_condicao_pagamento,
	cd_comprador,
	dt_ordem_compra,
	dt_atualizacao,
	nm_usuario,
	cd_moeda,
	ie_situacao,
	dt_inclusao,
	cd_pessoa_solicitante,
	cd_cgc_transportador,
	ie_frete,
	vl_frete,
	pr_multa_atraso,
	pr_desconto,
	pr_desc_pgto_antec,
	pr_juros_negociado,
	ds_pessoa_contato,
	ds_observacao,
	cd_local_entrega,
	dt_entrega,
	ie_aviso_chegada,
	cd_pessoa_fisica,
	ie_emite_obs,
	ie_urgente,
	ie_somente_pagto,
	vl_despesa_acessoria,
	nr_seq_subgrupo_compra,
	pr_desc_financeiro,
	nr_seq_forma_pagto,
	nr_documento_externo,
	vl_desconto,
	ie_tipo_ordem,
	cd_centro_custo)
values (	nr_ordem_compra_w,
	cd_estab_p,
	cd_cgc_fornecedor_p,
	cd_condicao_pagamento_p,
	cd_comprador_p,
	clock_timestamp(),
	clock_timestamp(),
	nm_usuario_p,
	cd_moeda_p,
	'A',
	clock_timestamp(),
	cd_pessoa_solicitante_p,
	cd_cgc_transportador_p,
	ie_frete_p,
	vl_frete_p,
	0,
	pr_desconto_p,
	pr_desc_pgto_antec_p,
	pr_juros_negociado_p,
	ds_pessoa_contato_p,
	ds_observacao_p,
	cd_local_entrega_p,
	dt_entrega_p,
	ie_aviso_chegada_p,
	cd_pessoa_fisica_p,
	'N',
	ie_urgente_p,
	'N',
	vl_despesa_acessoria_p,
	nr_seq_subgrupo_compra_p,
	pr_desc_financeiro_p,
	nr_seq_forma_pagto_p,
	nr_documento_externo_p,
	vl_desconto_p,
	'E',
	cd_centro_custo_p);

open C01;
loop
fetch C01 into
	nr_item_oci_w,
	cd_material_w,
	cd_unidade_medida_compra_w,
	vl_unitario_material_w,
	qt_material_w,
	ds_material_direto_w,
	ds_observacao_w,
	cd_centro_custo_w,
	cd_conta_contabil_w,
	nr_solic_compra_w,
	nr_item_solic_compra_w,
	nr_cot_compra_w,
	nr_item_cot_compra_w,
	vl_ipi_w,
	tx_ipi_w,
	pr_descontos_w,
	vl_desconto_w,
	nr_seq_marca_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	/*Conversao para unidade de medida*/

	if (ie_de_para_unid_med_w = 'C') then
		cd_unidade_medida_compra_w	:= coalesce(Obter_Conversao_interna(null,'UNIDADE_MEDIDA','CD_UNIDADE_MEDIDA',cd_unidade_medida_compra_w),cd_unidade_medida_compra_w);
	elsif (ie_de_para_unid_med_w = 'S') then
		cd_unidade_medida_compra_w	:= coalesce(obter_unid_med_sist_ant(cd_unidade_medida_compra_w),cd_unidade_medida_compra_w);
	end if;
	/*Fim*/

	/*Conversao para material*/

	if (ie_de_para_material_w = 'C') then
		cd_material_w	:= coalesce(Obter_Conversao_interna(null,'MATERIAL','CD_MATERIAL',cd_material_w),cd_material_w);
	elsif (ie_de_para_material_w = 'S') then
		cd_material_w	:= coalesce(obter_material_sistema_ant(cd_material_w),cd_material_w);
	end if;
	/*Fim*/

	if (coalesce(pr_descontos_w,0) > 0) then
		vl_desconto_w := dividir((qt_material_w * vl_unitario_material_w * pr_descontos_w),100);
	else
		vl_desconto_w := pr_descontos_w;
	end if;

	vl_item_liquido_w	:= round((qt_material_w * vl_unitario_material_w)::numeric,4);

	select	count(*)
	into STRICT	qt_existe_w
	from	marca
	where	cd_sistema_ant = to_char(nr_seq_marca_w);

	if (qt_existe_w > 0)then
	begin
		select	nr_sequencia
		into STRICT	nr_seq_marca_ww
		from	marca
		where	cd_sistema_ant = to_char(nr_seq_marca_w);
	end;
	else
	begin
		nr_seq_marca_ww := null;
	end;
	end if;

	insert into ordem_compra_item(
		nr_ordem_compra,
		nr_item_oci,
		cd_material,
		cd_unidade_medida_compra,
		vl_unitario_material,
		qt_material,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		cd_pessoa_solicitante,
		pr_descontos,
		cd_local_estoque,
		ds_material_direto,
		ds_observacao,
		vl_item_liquido,
		cd_centro_custo,
		cd_conta_contabil,
		ie_geracao_solic,
		pr_desc_financ,
		qt_original,
		vl_desconto,
		nr_solic_compra,
		nr_item_solic_compra,
		nr_cot_compra,
		nr_item_cot_compra,
		vl_total_item,
		nr_seq_marca)
	values (	nr_ordem_compra_w,
		nr_item_oci_w,
		cd_material_w,
		cd_unidade_medida_compra_w,
		vl_unitario_material_w,
		qt_material_w,
		clock_timestamp(),
		nm_usuario_p,
		'A',
		cd_pessoa_solicitante_p,
		pr_descontos_w,
		cd_local_entrega_p,
		ds_material_direto_w,
		ds_observacao_w,
		vl_item_liquido_w,
		cd_centro_custo_w,
		cd_conta_contabil_w,
		'S',
		0,
		qt_material_w,
		vl_desconto_w,
		nr_solic_compra_w,
		nr_item_solic_compra_w,
		nr_cot_compra_w,
		nr_item_cot_compra_w,
		round((qt_material_w * vl_unitario_material_w)::numeric,4),
		nr_seq_marca_ww);

	insert into ordem_compra_item_entrega(
		nr_sequencia,
		nr_ordem_compra,
		nr_item_oci,
		dt_prevista_entrega,
		qt_prevista_entrega,
		dt_atualizacao,
		nm_usuario,
		dt_entrega_original,
		dt_entrega_limite)
	values (	nextval('ordem_compra_item_entrega_seq'),
		nr_ordem_compra_w,
		nr_item_oci_w,
		dt_entrega_p,
		qt_material_w,
		clock_timestamp(),
		nm_usuario_p,
		dt_entrega_p,
		dt_entrega_p);

	calcular_liquido_ordem_compra(nr_ordem_compra_w,nm_usuario_p);

	select	vl_item_liquido
	into STRICT	vl_item_liquido_w
	from	ordem_compra_item
	where	nr_ordem_compra = nr_ordem_compra_w
	and	nr_item_oci = nr_item_oci_w;

	if (vl_ipi_w <> 0) or (tx_ipi_w <> 0) then
		begin

		if (vl_ipi_w <> 0) and (tx_ipi_w <> 0) then
			vl_ipi_w	:= vl_ipi_w;
			tx_ipi_w	:= tx_ipi_w;
		elsif (vl_ipi_w <> 0) then
			vl_ipi_w	:= vl_ipi_w;
			tx_ipi_w	:= (dividir((vl_ipi_w * 100),vl_item_liquido_w));
		elsif (tx_ipi_w <> 0) then
			vl_ipi_w	:= (dividir(tx_ipi_w,100) * vl_item_liquido_w);
			tx_ipi_w	:= tx_ipi_w;
		end if;

		select	coalesce(max(cd_tributo),0)
		into STRICT	cd_ipi_w
		from	tributo
		where	ie_corpo_item = 'I'
		and	ie_situacao = 'A'
		and (coalesce(cd_estabelecimento, cd_estab_p) = cd_estab_p)
		and	ie_tipo_tributo = 'IPI';

		if (cd_ipi_w <> 0) then
			begin

			insert into ordem_compra_item_trib(
				nr_ordem_compra,
				nr_item_oci,
				cd_tributo,
				pr_tributo,
				vl_tributo,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec) values (
					nr_ordem_compra_w,
					nr_item_oci_w,
					cd_ipi_w,
					tx_ipi_w,
					vl_ipi_w,
					clock_timestamp(),
					'INTEGRACAO',
					clock_timestamp(),
					'INTEGRACAO');

			end;
		end if;

		end;
	end if;

	end;
end loop;
close C01;

nr_ordem_compra_p := nr_ordem_compra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordem_compra_integracao ( nr_sequencia_p bigint, nm_usuario_p text, cd_estab_p bigint, cd_cgc_fornecedor_p text, cd_condicao_pagamento_p bigint, cd_comprador_p text, cd_moeda_p bigint, cd_pessoa_solicitante_p text, cd_cgc_transportador_p text, ie_frete_p text, vl_frete_p bigint, pr_desconto_p bigint, pr_desc_pgto_antec_p bigint, pr_juros_negociado_p bigint, ds_pessoa_contato_p text, ds_observacao_p text, cd_local_entrega_p bigint, dt_entrega_p timestamp, ie_aviso_chegada_p text, vl_despesa_acessoria_p bigint, nr_seq_subgrupo_compra_p bigint, pr_desc_financeiro_p bigint, cd_pessoa_fisica_p text, ie_urgente_p text, nr_seq_forma_pagto_p bigint, nr_documento_externo_p bigint, vl_desconto_p bigint, cd_centro_custo_p bigint, nr_ordem_compra_p INOUT bigint) FROM PUBLIC;

