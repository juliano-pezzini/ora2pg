-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consiste_regra_autorizacao ( nr_sequencia_p bigint, ie_tipo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realiza a consistencia  de regra de autorizacao.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
				
				
/* IE_TIPO_P
	1 - Autorizacao
	2 - Contas medicas
*/
ie_auditoria_w			varchar(1) := 'N';
nr_seq_regra_w			bigint;
ie_status_w			varchar(2);
ie_tipo_regra_w			varchar(3);
qt_liberada_regra_w		double precision	:= 0;
qt_executada_regra_w		double precision	:= 0;
ie_tipo_qtde_w			varchar(2);
nr_seq_segurado_w		bigint;
nr_seq_conta_medica_w		bigint;
dt_procedimento_w		timestamp;
qt_executada_dia_w		pls_guia_plano_proc.qt_autorizada%type;
qt_executada_mes_w		pls_guia_plano_proc.qt_autorizada%type;
qt_executada_conta_w		pls_guia_plano_proc.qt_autorizada%type;
dt_liberacao_w			timestamp;
qt_liberacao_dia_w		pls_guia_plano_proc.qt_autorizada%type;
qt_liberacao_mes_w		pls_guia_plano_proc.qt_autorizada%type;
qt_liberacao_conta_w		pls_guia_plano_proc.qt_autorizada%type;
vl_procedimento_w		double precision	:= 0;
qt_tipo_quantidade_w		pls_guia_plano_proc.qt_autorizada%type;
ie_tipo_guia_w			varchar(2);
ie_tipo_guia_conta_regra_w	varchar(2);
qt_dias_vencido_w		integer	:= 0;
ie_tipo_processo_w		varchar(1)	:= 'M';
ie_tipo_pagador_w		varchar(2)	:= 'A';
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
ie_tipo_item_w			varchar(2);
ie_valida_ano_contratual_w	varchar(2);


BEGIN

if (ie_tipo_p = 1) then
	ie_tipo_regra_w	:= 'A';
	ie_tipo_item_w := 'P';

	/* Obter dados do procedimento autorizado */

	select	b.nr_seq_segurado,
		a.dt_liberacao,
		b.ie_tipo_guia,
		coalesce(b.ie_tipo_processo,'M'),
		a.cd_procedimento,
		a.ie_origem_proced
	into STRICT	nr_seq_segurado_w,
		dt_liberacao_w,
		ie_tipo_guia_w,
		ie_tipo_processo_w,
		cd_procedimento_w,
		ie_origem_proced_w
	from	pls_guia_plano		b,
		pls_guia_plano_proc	a
	where	a.nr_sequencia	= nr_sequencia_p
	and	a.nr_seq_guia	= b.nr_sequencia;
elsif (ie_tipo_p	= 2) then
	ie_tipo_regra_w	:= 'C';

	/* Obter dados do procedimento executado */

	select	a.vl_procedimento,
		a.dt_procedimento,
		b.nr_seq_segurado,
		b.nr_sequencia,
		b.ie_tipo_guia,
		a.cd_procedimento,
		a.ie_origem_proced
	into STRICT	vl_procedimento_w,
		dt_procedimento_w,
		nr_seq_segurado_w,
		nr_seq_conta_medica_w,
		ie_tipo_guia_w,
		cd_procedimento_w,
		ie_origem_proced_w
	from	pls_conta	b,
		pls_conta_proc	a
	where	a.nr_sequencia	= nr_sequencia_p
	and	a.nr_seq_conta	= b.nr_sequencia;
elsif (ie_tipo_p	= 3) then
	ie_tipo_regra_w	:= 'ADM';

	/* Obter dados da guia autorizada */

	select	nr_seq_segurado,
		ie_tipo_guia,
		coalesce(ie_tipo_processo,'M')
	into STRICT	nr_seq_segurado_w,
		ie_tipo_guia_w,
		ie_tipo_processo_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_sequencia_p;

	qt_dias_vencido_w	:= pls_obter_dias_inadimplencia(nr_seq_segurado_w);
elsif (ie_tipo_p	= 4) then
	ie_tipo_regra_w := 'A';
	ie_tipo_item_w := 'M';
	
	/* Obter dados  do material autorizado */

	select	b.nr_seq_segurado,
		a.dt_liberacao,
		b.ie_tipo_guia,
		coalesce(b.ie_tipo_processo,'M'),
		a.nr_seq_material		
	into STRICT	nr_seq_segurado_w,
		dt_liberacao_w,
		ie_tipo_guia_w,
		ie_tipo_processo_w,
		nr_seq_material_w
	from	pls_guia_plano		b,
		pls_guia_plano_mat	a
	where	a.nr_sequencia	= nr_sequencia_p
	and	a.nr_seq_guia	= b.nr_sequencia;
end if;

/* Obter o tipo de pagador do beneficiario */

begin
select	CASE WHEN b.cd_cgc='' THEN 'PF'  ELSE 'PJ' END
into STRICT	ie_tipo_pagador_w
from	pls_contrato_pagador	b,
	pls_segurado		a
where	a.nr_sequencia		= nr_seq_segurado_w
and	a.nr_seq_pagador	= b.nr_sequencia;
exception
	when others then
	ie_tipo_pagador_w	:= 'A';
end;

SELECT * FROM pls_obter_regra_auditoria(	cd_estabelecimento_p, cd_procedimento_w, ie_origem_proced_w, ie_tipo_regra_w, ie_tipo_guia_w, ie_tipo_processo_w, vl_procedimento_w, qt_dias_vencido_w, ie_tipo_pagador_w, nr_seq_material_w, nr_seq_regra_w, ie_status_w, qt_executada_regra_w, qt_liberada_regra_w, ie_tipo_qtde_w, qt_tipo_quantidade_w, ie_tipo_guia_conta_regra_w, ie_valida_ano_contratual_w) INTO STRICT nr_seq_regra_w, ie_status_w, qt_executada_regra_w, qt_liberada_regra_w, ie_tipo_qtde_w, qt_tipo_quantidade_w, ie_tipo_guia_conta_regra_w, ie_valida_ano_contratual_w;

if (ie_status_w	= 'A') then
	if (ie_tipo_regra_w	= 'A') and (ie_tipo_item_w = 'P') then
		if (coalesce(qt_liberada_regra_w,0) > 0) then			
			if (ie_tipo_qtde_w	= 'D') then
				select 	coalesce(sum(a.qt_autorizada),0)
				into STRICT	qt_liberacao_dia_w
				from	pls_guia_plano		b,
					pls_guia_plano_proc	a
				where	a.nr_seq_guia		= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.cd_procedimento	= cd_procedimento_w
				and	a.ie_origem_proced	= ie_origem_proced_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0))
				and	trunc(a.dt_liberacao) between trunc(dt_liberacao_w - qt_tipo_quantidade_w)
					and trunc(dt_liberacao_w)
				and	((trunc(a.dt_liberacao) between trunc(pls_obter_data_contratual(nr_seq_segurado_w)) and trunc(dt_liberacao_w))
				or (coalesce(ie_valida_ano_contratual_w,'S')	= 'N'))
				and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
				and	b.ie_status		<> 3;

				if (qt_liberacao_dia_w	>= qt_liberada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			elsif (ie_tipo_qtde_w	= 'M') then
				select 	coalesce(sum(a.qt_autorizada),0)
				into STRICT	qt_liberacao_mes_w
				from	pls_guia_plano		b,
					pls_guia_plano_proc	a
				where	a.nr_seq_guia		= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.cd_procedimento	= cd_procedimento_w
				and	a.ie_origem_proced	= ie_origem_proced_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0))
				and	trunc(a.dt_liberacao) between trunc(add_months(dt_liberacao_w, -qt_tipo_quantidade_w))
					and trunc(dt_liberacao_w)
				and	((trunc(a.dt_liberacao) between trunc(pls_obter_data_contratual(nr_seq_segurado_w)) and trunc(dt_liberacao_w))
				or (coalesce(ie_valida_ano_contratual_w,'S')	= 'N'))
				and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
				and	b.ie_status		<> 3;

				if (qt_liberacao_mes_w	>= qt_liberada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			elsif (ie_tipo_qtde_w	= 'G') then
				select 	coalesce(sum(a.qt_autorizada),0)
				into STRICT	qt_liberacao_conta_w
				from	pls_guia_plano		b,
					pls_guia_plano_proc	a
				where	a.nr_seq_guia		= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.cd_procedimento	= cd_procedimento_w
				and	a.ie_origem_proced	= ie_origem_proced_w
				and	b.nr_sequencia		= nr_seq_conta_medica_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0))
				and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
				and	b.ie_status		<> 3;

				if (qt_liberacao_conta_w	>= qt_liberada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			end if;
		else
			ie_auditoria_w	:= 'S';
		end if;
	elsif (ie_tipo_regra_w	= 'C') then
		if (coalesce(qt_liberada_regra_w,0) > 0) then
			if (ie_tipo_qtde_w	= 'D') then
				select 	coalesce(sum(a.qt_procedimento),0)
				into STRICT	qt_executada_dia_w
				from	pls_conta	b,
					pls_conta_proc	a
				where	a.nr_seq_conta			= b.nr_sequencia
				and	b.nr_seq_segurado		= nr_seq_segurado_w
				and	a.cd_procedimento		= cd_procedimento_w
				and	a.ie_origem_proced		= ie_origem_proced_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0))
				and	trunc(a.dt_procedimento) between trunc(dt_procedimento_w - qt_tipo_quantidade_w)
					and trunc(dt_procedimento_w);

				if (qt_executada_dia_w	>= qt_executada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			elsif (ie_tipo_qtde_w	= 'M') then
				select 	coalesce(sum(a.qt_procedimento),0)
				into STRICT	qt_executada_mes_w
				from	pls_conta	b,
					pls_conta_proc	a
				where	a.nr_seq_conta			= b.nr_sequencia
				and	b.nr_seq_segurado		= nr_seq_segurado_w
				and	a.cd_procedimento		= cd_procedimento_w
				and	a.ie_origem_proced		= ie_origem_proced_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0))
				and	trunc(a.dt_procedimento, 'month') between trunc(add_months(dt_procedimento_w, -qt_tipo_quantidade_w),'month')
					and trunc(dt_procedimento_w);

				if (qt_executada_mes_w	>= qt_executada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			elsif (ie_tipo_qtde_w	= 'C') then
				select 	coalesce(sum(a.qt_procedimento),0)
				into STRICT	qt_executada_conta_w
				from	pls_conta	b,
					pls_conta_proc	a
				where	a.nr_seq_conta		= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.cd_procedimento	= cd_procedimento_w
				and	a.ie_origem_proced	= ie_origem_proced_w
				and	b.nr_sequencia		= nr_seq_conta_medica_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0));

				if (qt_executada_conta_w	>= qt_executada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			end if;
		else
			ie_auditoria_w	:= 'S';
		end if;
	elsif (ie_tipo_regra_w	= 'A') and (ie_tipo_item_w = 'M')  then	
		if (coalesce( qt_liberada_regra_w,0) > 0) then			
			if (ie_tipo_qtde_w	= 'D') then
				select 	coalesce(sum(a.qt_autorizada),0)
				into STRICT	qt_liberacao_dia_w
				from	pls_guia_plano		b,
					pls_guia_plano_mat	a
				where	a.nr_seq_guia		= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.nr_seq_material	= nr_seq_material_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0))
				and	trunc(a.dt_liberacao) between trunc(dt_liberacao_w - qt_tipo_quantidade_w)
					and trunc(dt_liberacao_w)
				and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
				and	b.ie_status		<> 3;

				if (qt_liberacao_dia_w	>= qt_liberada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			elsif (ie_tipo_qtde_w	= 'M') then
				select 	coalesce(sum(a.qt_autorizada),0)
				into STRICT	qt_liberacao_mes_w
				from	pls_guia_plano		b,
					pls_guia_plano_mat	a
				where	a.nr_seq_guia		= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.nr_seq_material	= nr_seq_material_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0))
				and	trunc(a.dt_liberacao, 'month') between trunc(add_months(dt_liberacao_w, -qt_tipo_quantidade_w),'month')
					and trunc(dt_liberacao_w)
				and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
				and	b.ie_status		<> 3;

				if (qt_liberacao_mes_w	>= qt_liberada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			elsif (ie_tipo_qtde_w	= 'G') then
				select 	coalesce(sum(a.qt_autorizada),0)
				into STRICT	qt_liberacao_conta_w
				from	pls_guia_plano		b,
					pls_guia_plano_mat	a
				where	a.nr_seq_guia		= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.nr_seq_material	= nr_seq_material_w
				and	b.nr_sequencia		= nr_seq_conta_medica_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0))
				and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
				and	b.ie_status		<> 3;

				if (qt_liberacao_conta_w	>= qt_liberada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			end if;
		else
			ie_auditoria_w	:= 'S';
		end if;
	elsif (ie_tipo_regra_w	= 'ADM') then
		ie_auditoria_w	:= 'S';
	end if;
end if;

if (ie_auditoria_w	= 'S') then
	if (ie_tipo_regra_w	= 'A') then
		if (ie_tipo_item_w = 'P') then
			update	pls_guia_plano_proc
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				qt_autorizada		= coalesce(qt_solicitada,0),
				dt_liberacao		= clock_timestamp(),
				nm_usuario_liberacao	= nm_usuario_p,
				ie_status		= ie_status_w,
				nr_seq_regra_liberacao	= nr_seq_regra_w
			where	nr_sequencia		= nr_sequencia_p;
		elsif (ie_tipo_item_w = 'M') then		
			update	pls_guia_plano_mat
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				qt_autorizada		= coalesce(qt_solicitada,0),
				dt_liberacao		= clock_timestamp(),
				nm_usuario_liberacao	= nm_usuario_p,
				ie_status		= ie_status_w,
				nr_seq_regra_liberacao	= nr_seq_regra_w
			where	nr_sequencia		= nr_sequencia_p;
		end if;
	elsif (ie_tipo_regra_w	= 'C') then
		update	pls_conta_proc
		set	dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			dt_liberacao		= clock_timestamp(),
			nm_usuario_liberacao	= nm_usuario_p,
			ie_status		= ie_status_w,
			nr_seq_regra_liberacao	= nr_seq_regra_w,
			ds_log			= 'pls_consiste_regra_autorizacao'
		where	nr_sequencia		= nr_sequencia_p
		and	ie_status		<> 'D';
	elsif (ie_tipo_regra_w	= 'ADM') then
		update	pls_guia_plano
		set	dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			ie_status		= CASE WHEN ie_status_w='A' THEN '2' END ,
			nr_seq_regra_liberacao	= nr_seq_regra_w,
			ds_log			= 'pls_consiste_regra_autorizacao'
		where	nr_sequencia		= nr_sequencia_p;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consiste_regra_autorizacao ( nr_sequencia_p bigint, ie_tipo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

