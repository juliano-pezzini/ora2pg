-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_98_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
i			integer;
ie_gera_ocorrencia_w	varchar(1);
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_valido_w		pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;
ds_observacao_1_w	varchar(255);
ds_observacao_2_w	varchar(255);



-- Dados  da regra
C01 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	coalesce(ie_protocolo_distinto,'N') ie_protocolo_distinto,
		coalesce(ie_faturamento,'N') ie_faturamento
	from	pls_oc_cta_val_guia_vinc
	where	nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_pc
	-- tem que ter pelo menos uma validação marcada na regra
	and ((coalesce(ie_protocolo_distinto,'N') = 'S') or (coalesce(ie_faturamento,'N') = 'S'));

-- Dados da guia
C02 CURSOR(	nr_id_transacao_pc		pls_oc_cta_selecao_imp.nr_id_transacao%type,
		ie_protocolo_distinto_pc	pls_oc_cta_val_guia_vinc.ie_protocolo_distinto%type,
		ie_faturamento_pc		pls_oc_cta_val_guia_vinc.ie_faturamento%type) FOR
	SELECT	b.nr_sequencia nr_seq_conta,
		b.cd_guia_ok,
		b.nr_seq_protocolo,
		c.cd_guia cd_guia_vinculada,
		c.nr_seq_protocolo nr_seq_protocolo_vinc
	from	pls_oc_cta_selecao_imp	a,
		pls_conta		b,
		pls_conta		c
	where	b.nr_sequencia		= a.nr_seq_conta
	and	c.cd_guia_referencia	= b.cd_guia_referencia
	and	c.nr_seq_segurado	= b.nr_seq_segurado
	and	c.ie_status		!= 'C'
	and	b.ie_status		!= 'C'
	and	coalesce(b.ie_glosa,'N')	= 'N'
	and	coalesce(c.ie_glosa,'N')	= 'N'
	-- se foi marcado para validar os protocolos, verifica se os protocolo são diferentes, senão não aplica a validaçao
	and	((ie_protocolo_distinto_pc = 'S' AND b.nr_seq_protocolo <> c.nr_seq_protocolo) or (ie_protocolo_distinto_pc = 'N'))
	-- se foi marcado para validar o stauts de faturamento, verifica se está liberado para fat (ie_status = L) , senão não aplica a validação
	and	((ie_faturamento_pc = 'S' AND c.ie_status_fat ='L') or (ie_faturamento_pc = 'N'))
	and	a.nr_id_transacao	= nr_id_transacao_pc
	and	a.ie_valido 		= 'S'
	
union all

	SELECT	b.nr_sequencia nr_seq_conta,
		b.cd_guia_ok_conv cd_guia_ok,
		b.nr_seq_protocolo,
		c.cd_guia_prestador cd_guia_vinculada,
		c.nr_seq_protocolo nr_seq_protocolo_vinc
	from	pls_oc_cta_selecao_imp	a,
		pls_conta_imp		b,
		pls_conta_imp		c
	where	b.nr_sequencia		= a.nr_seq_conta
	and	c.cd_guia_principal	= b.cd_guia_principal
	and	c.nr_seq_segurado_conv	= b.nr_seq_segurado_conv
	-- se foi marcado para validar os protocolos, verifica se os protocolo são diferentes, senão não aplica a validaçao
	and	((ie_protocolo_distinto_pc = 'S' AND b.nr_seq_protocolo <> c.nr_seq_protocolo) or (ie_protocolo_distinto_pc = 'N'))
	-- se foi marcado para validar o stauts de faturamento, verifica se está liberado para fat (ie_status = L) , senão não aplica a validação
	and	((ie_faturamento_pc = 'S') or (ie_faturamento_pc = 'N'))
	and	a.nr_id_transacao	= nr_id_transacao_pc
	and	a.ie_valido 		= 'S';
BEGIN

-- somente executa se tem regra
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '')  then

	--A conta vinculada já está faturada
	ds_observacao_1_w:= wheb_mensagem_pck.get_texto(795834);

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'V',
							'N',
							nr_id_transacao_p,
							null);

	--limpa as variáveis
	SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
	i := 0;

	-- carrega a regra
	for	r_C01_w in C01( nr_seq_combinada_p) loop

		-- se existe regra valida, carrega as contas
		for	r_C02_w in C02(	nr_id_transacao_p,
					r_C01_w.ie_protocolo_distinto,
					r_C01_w.ie_faturamento) loop

			ie_gera_ocorrencia_w := 'N';

			-- se é para validar o protocolo, e são diferentes
			if (r_C01_w.ie_protocolo_distinto = 'S') and (r_C02_w.nr_seq_protocolo <> r_C02_w.nr_seq_protocolo_vinc) then

				ie_gera_ocorrencia_w	:= 'S';
				tb_seq_selecao_w(i)	:= r_C02_w.nr_seq_conta;
				--O protocolo da conta vinculada #@DS_PROC#@ é diferente do protocolo da conta #@DS_PROC_VINC#@
				tb_observacao_w(i)	:= wheb_mensagem_pck.get_texto(795832,'DS_PROC=' || r_c02_w.nr_seq_protocolo || ';' || 'DS_PROC_VINC=' || r_C02_w.nr_seq_protocolo_vinc);
				tb_valido_w(i) 		:= 'S';

			end if;

			if (ie_gera_ocorrencia_w = 'S') then
				if ( i >= pls_util_pck.qt_registro_transacao_w) then

					--Grava as informações na tabela de seleção
					CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
											tb_valido_w,
											tb_observacao_w,
											nr_id_transacao_p,
											'SEQ_CONTA');

					--limpa as variáveis
					SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
					i := 0;
				else
					i := i + 1;
				end if;
			end if;
		end loop; -- loop contas
	end loop; -- loop da regra
if (tb_seq_selecao_w.count > 0) then

	--Grava o que restar nas variáveis na tabela
	CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
							tb_valido_w,
							tb_observacao_w,
							nr_id_transacao_p,
							'SEQ_CONTA');

end if;

-- seta os registros que serão válidos ou inválidos após o processamento
CALL pls_ocor_imp_pck.atualiza_campo_valido('V',
					'N',
					ie_regra_excecao_p,
					null,
					nr_id_transacao_p,
					null);
end if; -- end executa se tem regra
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_98_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

