-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_retorno_unicred_200 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_reg_T_w			bigint;
nr_seq_reg_U_w			bigint;
nr_titulo_w				bigint;
cd_banco_w				integer;
vl_titulo_w				double precision;
vl_acrescimo_w			double precision := 0;
vl_desconto_w			double precision := 0;
vl_abatimento_w			double precision := 0;
vl_liquido_w			double precision := 0;
vl_juros_w			double precision := 0;
vl_multa_w			double precision := 0;
vl_outras_despesas_w	double precision := 0;
dt_liquidacao_w			varchar(8);
ds_titulo_w				varchar(255);
vl_cobranca_w			double precision;
vl_alterar_w			double precision := 0;
cd_ocorrencia_w			bigint;
ie_ocorrencia_w			varchar(1);
nr_seq_ocorrencia_ret_w	bigint;

c01 CURSOR FOR
SELECT distinct somente_numero(substr(ds_string,34,10))	nr_titulo,
	substr(ds_string,28,6)			ds_dt_liquidacao,
	somente_numero(substr(ds_string,137,13))/100	ds_vl_liquidacao,
	CASE WHEN substr(ds_string,26,2)='03' THEN 'S'  ELSE 'L' END  ie_ocorrencias,
	somente_numero(substr(ds_string,150,13))/100	ds_vl_juros,
	somente_numero(substr(ds_string,163,13))/100	ds_vl_multa,
	substr(ds_string,19,2)	cd_ocorrencias
	from	w_retorno_banco
	where	nr_seq_cobr_escrit	= nr_seq_cobr_escrit_p
	and	substr(ds_string,1,1)	= '1';

BEGIN

open C01;
loop
fetch C01 into
	ds_titulo_w,
	dt_liquidacao_w,
	vl_liquido_w,
	ie_ocorrencia_w,
	vl_juros_w,
	vl_multa_w,
	cd_ocorrencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	vl_acrescimo_w := 0;
	vl_desconto_w := 0;
	vl_alterar_w	:= 0;

	select	max(nr_titulo)
	into STRICT	nr_titulo_w
	from	titulo_receber
	where	nr_titulo	= somente_numero(ds_titulo_w);

	/* Se encontrou o título importa, senão grava no log */

	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then

		select	max(a.vl_titulo),
				coalesce(max(b.cd_banco),0)
		into STRICT	vl_titulo_w,
				cd_banco_w
		FROM titulo_receber a
LEFT OUTER JOIN banco_estabelecimento b ON (a.nr_seq_conta_banco = b.nr_sequencia)
WHERE a.nr_titulo	= nr_titulo_w;


		select 	coalesce(to_char(max(a.nr_sequencia)),0)
		into STRICT	nr_seq_ocorrencia_ret_w
		from	banco_ocorr_escrit_ret a,
				titulo_receber b,
				banco_estabelecimento c
		where	a.cd_banco = c.cd_banco
		and b.nr_seq_conta_banco = c.nr_sequencia
		and b.nr_titulo = nr_titulo_w
		and	a.cd_ocorrencia = cd_ocorrencia_w
		and a.ie_rejeitado = ie_ocorrencia_w;

		/* Tratar acrescimos/descontos */

		if	(vl_titulo_w <> ( coalesce(vl_liquido_w,0) - coalesce(vl_juros_w,0) - coalesce(vl_multa_w,0) )) then
			vl_alterar_w	:= vl_liquido_w - vl_titulo_w;

			if (vl_alterar_w > 0) then
				vl_acrescimo_w	:= vl_alterar_w;
			else
				vl_desconto_w	:= abs(vl_alterar_w);
			end if;
		end if;

		insert	into titulo_receber_cobr(	NR_SEQUENCIA,
							NR_TITULO,
							CD_BANCO,
							VL_COBRANCA,
							VL_DESCONTO,
							VL_ACRESCIMO,
							VL_DESPESA_BANCARIA,
							VL_LIQUIDACAO,
							VL_JUROS,
							VL_MULTA,
							DT_LIQUIDACAO,
							DT_ATUALIZACAO,
							NM_USUARIO,
							NR_SEQ_COBRANCA,
							nr_seq_ocorrencia_ret)
					values (	nextval('titulo_receber_cobr_seq'),
							nr_titulo_w,
							cd_banco_w,
							vl_titulo_w,
							vl_desconto_w,
							vl_acrescimo_w,
							vl_outras_despesas_w,
							vl_liquido_w,
							vl_juros_w,
							vl_multa_w,
							coalesce(to_Date(dt_liquidacao_w,'ddmmyy'),clock_timestamp()),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_cobr_escrit_p,
							nr_seq_ocorrencia_ret_w);
	else
		CALL fin_gerar_log_controle_banco(3,substr('Não foi importado o título ' || ds_titulo_w || ', pois não foi encontrado no Tasy',1,4000),nm_usuario_p,'N');

	end if;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_retorno_unicred_200 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

