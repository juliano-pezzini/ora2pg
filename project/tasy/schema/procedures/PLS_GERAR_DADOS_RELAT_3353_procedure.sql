-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_dados_relat_3353 ( nr_titulo_p bigint, nr_seq_mensalidade_p bigint, nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Geracao dos dados do relatorio CPLS - 3533 - "OPS - Boleto Bancqrio Unimed USJRP
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [ X]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


/*ie_banda
C - Cabecalho - Apenas para o PJ
I - Informacoes dos sacados
D - Dados dos itens
A - Atos
B - Bloqueto
MA - Mensagem ANS
*/


--Somente gravar o NR_SEQ_MENSALIDADE caso o nao exisitr o numero do titulo, para imprimir apenas o espelho da fatura.
ds_procedimento_w		varchar(4000);
nr_titulo_w			bigint;
ie_pf_pj_w			varchar(255);
----------------------------------------------------------------------------------------------------
qt_idade_inicial_w		bigint;
qt_idade_final_w		bigint;
----------------------------------------------------------------------------------------------------
nr_seq_plano_w			bigint;
ds_plano_w			varchar(255);
----------------------------------------------------------------------------------------------------
nr_contrato_w			bigint;
dt_referencia_w			timestamp;
dt_emissao_w			timestamp;
dt_vencimento_w			timestamp;
nr_nota_fiscal_e_w		varchar(255);
cd_agencia_bancaria_w		varchar(255);
nr_numero_w			varchar(255);
nr_nota_fiscal_w		varchar(255);
nr_bloqueto_w			varchar(44);
tx_juros_w			double precision;
tx_multa_w			double precision;
cd_banco_dig_w			varchar(255);
cd_banco_w			integer;
VL_TITULo_w			double precision;
VL_TOTAL_ITEM_w			double precision;
vl_saldo_juros_w		double precision;
vl_saldo_multa_w		double precision;
nr_seq_pagador_w		bigint;
dt_liquidacao_w			timestamp;
vl_saldo_juros_tit_w		double precision;
vl_saldo_multa_tit_w		double precision;
----------------------------------------------------------------------------------------------------
nm_pagador_w			varchar(255);
ds_endereco_w			varchar(255);
ds_bairro_w			varchar(255);
cd_cep_w			varchar(255);
ds_municipio_w			varchar(255);
ds_estado_w			compl_pessoa_fisica.sg_estado%type;
nr_telefone_w			varchar(255);
nr_inscricao_estadual_w		varchar(255);
cd_cgc_w			varchar(255);
nr_cpf_w			varchar(255);
cd_usuario_plano_w		varchar(255);
cd_ans_w			varchar(255);
----------------------------------------------------------------------------------------------------
qt_registros_w			bigint;
vl_mensalidade_total_w		double precision;
vl_mensalidade_uni_w		double precision;
qt_linhas_w			bigint;
ds_item_w			varchar(255);
ds_sca_w			varchar(255);
qt_sca_w			bigint;
ds_lancamento_programada_w	varchar(255);
nr_seq_mensalidade_w		bigint;
ie_origem_titulo_w		varchar(10);
nr_seq_nf_saida_w		bigint;
vl_unitario_w			double precision;
vl_total_w			double precision;
ie_tipo_compl_pj_w		smallint := null;
dt_ano_w			timestamp;
dt_ano_final_w			timestamp;
----------------------------------------------------------------------------------------------------
dt_pag_previsto_w		titulo_receber.dt_pagamento_previsto%type;
nr_titulo_ww			titulo_receber.nr_titulo%type;
nr_seq_lote_w			pls_lote_mensalidade.nr_sequencia%type;
qt_tit_lote_mens_w		bigint;
nr_seq_mensalidade_ww		pls_mensalidade.nr_sequencia%type;
nr_seq_contrato_inter_w		pls_intercambio.nr_sequencia%type;
nr_seq_contrato_w		pls_contrato.nr_contrato%type;
cd_portador_w			portador.cd_portador%type;
nr_seq_conta_banco_w		pls_mensalidade.nr_seq_conta_banco%type;
vl_mens_w			double precision;
cd_carteira_cobranca_w		banco_carteira.cd_carteira%type;
qt_nota_fiscal_item_w		bigint;

C00 CURSOR FOR
	SELECT	CASE WHEN ds_tit_dep='X' THEN ds_plano  ELSE CASE WHEN sum(qt_titular)=0 THEN  CASE WHEN sum(qt_dependente)=0 THEN  null  ELSE (lpad(sum(qt_dependente),4,'0')||'  '||ds_tit_dep||'  '||ds_plano||'  '||qt_faixa) END   ELSE (lpad(sum(qt_titular),4,'0')||'  '||ds_tit_dep||'  '||ds_plano||'  '||qt_faixa) END  END  ds_tit_depend,
		vl_mensalidade,
		sum(vl_mensalidade) vl_total
	from (SELECT	qt_titular,
			qt_dependente,
			ds_plano,
			ds_tit_dep,
			qt_faixa,
			vl_mensalidade
		from	pls_mens_relat_110_v
		where	nr_titulo	= nr_titulo_w) alias9
	where	vl_mensalidade <> 0
	group by qt_titular,
		 qt_dependente,
		 ds_plano,
		 ds_tit_dep,
		 qt_faixa,
		 vl_mensalidade,
		 ds_tit_dep
	order by ds_tit_dep||'(s)  '||ds_plano||'  '||qt_faixa;

C01 CURSOR FOR
	SELECT	b.nr_titulo nr_tit_rec,
		'PF' ie_pf_pj_p,
		a.nr_sequencia nr_seq_mensalidade_w,
		b.ie_origem_titulo
	from	pessoa_fisica	c,
		titulo_receber	b,
		pls_mensalidade	a
	where	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	b.nr_seq_mensalidade = a.nr_sequencia
	and	a.nr_seq_lote = nr_seq_lote_w
	and	CASE WHEN coalesce(nr_seq_lote_w::text, '') = '' THEN 0  ELSE nr_seq_lote_w END  <> 0
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and 	coalesce(nr_titulo_ww::text, '') = ''
	
union all

	SELECT	a.nr_titulo nr_tit_rec,
		'PF' ie_pf_pj_p,
		a.nr_seq_mensalidade nr_seq_mensalidade_w,
		a.ie_origem_titulo
	from	pessoa_fisica	b,
		titulo_receber	a
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	nr_titulo = nr_titulo_ww
	and	CASE WHEN coalesce(nr_titulo_ww::text, '') = '' THEN 0  ELSE nr_titulo_ww END  <> 0
	
union all

	select	b.nr_titulo nr_tit_rec,
		'PJ' ie_pf_pj_p,
		a.nr_sequencia nr_seq_mensalidade_w,
		b.ie_origem_titulo
	from	pls_mensalidade	a,
		titulo_receber	b
	where	a.nr_sequencia = b.nr_seq_mensalidade
	and	a.nr_seq_lote = nr_seq_lote_w
	and	coalesce(nr_seq_lote_w,0) <> 0
	and	(b.cd_cgc IS NOT NULL AND b.cd_cgc::text <> '')
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and 	coalesce(nr_titulo_ww::text, '') = ''
	
union all

	select	nr_titulo nr_tit_rec,
		'PJ' ie_pf_pj_p,
		nr_seq_mensalidade nr_seq_mensalidade_w,
		ie_origem_titulo
	from	titulo_receber
	where	nr_titulo in (nr_titulo_ww)
	and	CASE WHEN coalesce(nr_titulo_ww::text, '') = '' THEN 0  ELSE nr_titulo_ww END  <> 0
	and	(cd_cgc IS NOT NULL AND cd_cgc::text <> '');

C02 CURSOR FOR
	-- MENSALIDADES
	SELECT	upper(d.ds_razao_social) nm_pagador,
		upper(c.ds_endereco) || ' ' || c.nr_endereco || ' ' || upper(c.ds_complemento) ds_endereco,
		c.ds_bairro ds_bairro,
		c.cd_cep,
		c.ds_municipio ds_municipio,
		c.sg_estado ds_estado,
		d.nr_telefone,
		d.nr_inscricao_estadual,
		d.cd_cgc
	from	titulo_receber		e,
		pessoa_juridica		d,
		pessoa_juridica_compl 	c,
		pls_contrato_pagador	b,
		pls_mensalidade		a
	where	a.nr_seq_pagador	= b.nr_sequencia
	and	b.cd_cgc 		= d.cd_cgc
	and	d.cd_cgc 		= c.cd_cgc
	and	a.nr_sequencia		= e.nr_seq_mensalidade
	and	e.nr_titulo		= nr_titulo_w
	and	((((b.ie_endereco_boleto = 'PJC' and c.ie_tipo_complemento = 1) or (b.ie_endereco_boleto = 'PJF' AND c.ie_tipo_complemento = 2)) and (coalesce(ie_tipo_compl_pj_w::text, '') = '')) or (c.ie_tipo_complemento = ie_tipo_compl_pj_w))
	and	b.ie_endereco_boleto	<> 'PJ'
	
UNION ALL

	SELECT	upper(d.ds_razao_social) nm_pagador,
		upper(D.ds_endereco) || ' ' || D.nr_endereco || ' ' || upper(D.ds_complemento) ds_endereco,
		D.ds_bairro ds_bairro,
		D.cd_cep,
		D.ds_municipio ds_municipio,
		D.sg_estado ds_estado,
		d.nr_telefone,
		d.nr_inscricao_estadual,
		d.cd_cgc
	from	titulo_receber		e,
		pessoa_juridica		d,
		pls_contrato_pagador	b,
		pls_mensalidade		a
	where	a.nr_seq_pagador	= b.nr_sequencia
	and	b.cd_cgc 		= d.cd_cgc
	and	a.nr_sequencia		= e.nr_seq_mensalidade
	and	e.nr_titulo		= nr_titulo_w
	and	b.ie_endereco_boleto	= 'PJ' 
	
union all

	-- TITULO IMPORTADO DE MENSALIDADE
	select	upper(d.ds_razao_social) nm_pagador,
		upper(c.ds_endereco) || ' ' || c.nr_endereco || ' ' || upper(c.ds_complemento) ds_endereco,
		c.ds_bairro ds_bairro,
		c.cd_cep,
		c.ds_municipio ds_municipio,
		c.sg_estado ds_estado,
		d.nr_telefone,
		d.nr_inscricao_estadual,
		d.cd_cgc
	from	titulo_receber		e,
		pessoa_juridica		d,
		pessoa_juridica_compl	c,
		pls_contrato_pagador	b
	where	e.nr_seq_pagador	= b.nr_sequencia
	and	b.cd_cgc		= d.cd_cgc
	and	d.cd_cgc		= c.cd_cgc
	and	e.nr_titulo			= nr_titulo_w
	and	((((b.ie_endereco_boleto	= 'PJC' and c.ie_tipo_complemento = 1) or (b.ie_endereco_boleto = 'PJF' AND c.ie_tipo_complemento = 2))
		and (coalesce(ie_tipo_compl_pj_w::text, '') = '')) or (c.ie_tipo_complemento = ie_tipo_compl_pj_w))
	and	b.ie_endereco_boleto	<> 'PJ'
	and	coalesce(nr_seq_mensalidade_w::text, '') = ''
	and	ie_origem_titulo_w = '3' 
	
UNION ALL

	select	upper(d.ds_razao_social) nm_pagador,
		upper(D.ds_endereco) || ' ' || D.nr_endereco || ' ' || upper(D.ds_complemento) ds_endereco,
		D.ds_bairro ds_bairro,
		D.cd_cep,
		D.ds_municipio ds_municipio,
		D.sg_estado ds_estado,
		d.nr_telefone,
		d.nr_inscricao_estadual,
		d.cd_cgc
	from	titulo_receber		e,
		pessoa_juridica		d,
		pls_contrato_pagador	b
	where	e.nr_seq_pagador	= b.nr_sequencia
	and	b.cd_cgc	= d.cd_cgc
	and	e.nr_titulo		= nr_titulo_w
	and	b.IE_ENDERECO_BOLETO	= 'PJ'
	and	coalesce(nr_seq_mensalidade_w::text, '') = ''
	and	ie_origem_titulo_w = '3' 
	
union all

	-- OUTROS TITULOS
	select	upper(d.ds_razao_social) nm_pagador,
		upper(c.ds_endereco) || ' ' || c.nr_endereco || ' ' || upper(c.ds_complemento) ds_endereco,
		c.ds_bairro ds_bairro,
		c.cd_cep,
		c.ds_municipio ds_municipio,
		c.sg_estado ds_estado,
		d.nr_telefone,
		d.nr_inscricao_estadual,
		d.cd_cgc
	from	titulo_receber		e,
		pessoa_juridica		d,
		pessoa_juridica_compl	c
	where	e.cd_cgc		= d.cd_cgc
	and	d.cd_cgc		= c.cd_cgc
	and	e.nr_titulo		= nr_titulo_w
	and	coalesce(nr_seq_mensalidade_w::text, '') = ''
	and	ie_origem_titulo_w <> '3'
	and	(((c.ie_tipo_complemento = 1 or c.ie_tipo_complemento = 2) and (coalesce(ie_tipo_compl_pj_w::text, '') = '')) or (c.ie_tipo_complemento	= ie_tipo_compl_pj_w)) 
	
UNION ALL

	select	upper(d.ds_razao_social) nm_pagador,
		upper(D.ds_endereco) || ' ' || D.nr_endereco || ' ' || upper(D.ds_complemento) ds_endereco,
		D.ds_bairro ds_bairro,
		D.cd_cep,
		D.ds_municipio ds_municipio,
		D.sg_estado ds_estado,
		d.nr_telefone,
		d.nr_inscricao_estadual,
		d.cd_cgc
	from	titulo_receber		e,
		pessoa_juridica		d
	where	e.cd_cgc		= d.cd_cgc
	and	e.nr_titulo		= nr_titulo_w
	and	coalesce(nr_seq_mensalidade_w::text, '') = ''
	and	ie_origem_titulo_w <> '3'
	and	not exists (	select	1
				from	pessoa_juridica_compl w
				where	w.cd_cgc	= d.cd_cgc)  LIMIT 1;

C03 CURSOR FOR
	-- MENSALIDADES
	SELECT	c.nm_pessoa_fisica nm_cliente,
		upper(d.ds_endereco) || ' ' ||coalesce(d.nr_endereco, d.ds_compl_end) || ' ' || d.ds_complemento ds_rua,
		d.cd_cep,
		upper(d.ds_municipio) ds_municipio,
		upper(d.sg_estado) sg_estado,
		upper(d.ds_bairro) ds_bairro,
		c.nr_cpf,
		d.nr_telefone,
		'' cd_ans,
		--decode(pls_obter_dados_produto(e.nr_seq_plano,'ANS'),'','','Contrato regulamentado codigo ANS:' || pls_obter_dados_produto(e.nr_seq_plano,'ANS')) cd_ans,
		CASE WHEN pls_carteira_pag_se_seg(b.nr_sequencia,c.cd_pessoa_fisica)='' THEN ''  ELSE substr(pls_carteira_pag_se_seg(b.nr_sequencia,c.cd_pessoa_fisica),1,30) END  cd_usuario_plano
	from	compl_pessoa_fisica	d,
		pessoa_fisica		c,
		pls_contrato_pagador	b,
		pls_mensalidade		a,
		titulo_receber		h
	where	a.nr_sequencia	= h.nr_seq_mensalidade
	and	h.cd_pessoa_fisica = c.cd_pessoa_fisica
	and	c.cd_pessoa_fisica = d.cd_pessoa_fisica
	and	b.nr_sequencia	= a.nr_seq_pagador
	and	h.nr_titulo	= nr_titulo_w
	and	((b.ie_endereco_boleto = 'PFR' AND d.ie_tipo_complemento = 1)
	or	(b.ie_endereco_boleto = 'PFC' AND d.ie_tipo_complemento = 2)
	or	(b.ie_endereco_boleto = 'PFV' AND d.ie_tipo_complemento = 3)
	or	(b.ie_endereco_boleto = 'PFP' AND d.ie_tipo_complemento = 4)
	or	(b.ie_endereco_boleto = 'PFM' AND d.ie_tipo_complemento = 5)
	or	(b.ie_endereco_boleto = 'PFJ' AND d.ie_tipo_complemento = 6))
	
union

	-- TITULO IMPORTADO DE MENSALIDADE
	SELECT	c.nm_pessoa_fisica nm_cliente,
		upper(d.ds_endereco) || ' ' ||coalesce(d.nr_endereco, d.ds_compl_end) || ' ' || d.ds_complemento ds_rua,
		d.cd_cep,
		upper(d.ds_municipio) ds_municipio,
		upper(d.sg_estado) sg_estado,
		upper(d.ds_bairro) ds_bairro,
		c.nr_cpf,
		d.nr_telefone,
		'' cd_ans,
		--decode(pls_obter_dados_produto(e.nr_seq_plano,'ANS'),'','','Contrato regulamentado codigo ANS:' || pls_obter_dados_produto(e.nr_seq_plano,'ANS')) cd_ans,
		CASE WHEN pls_carteira_pag_se_seg(b.nr_sequencia,c.cd_pessoa_fisica)='' THEN ''  ELSE substr(pls_carteira_pag_se_seg(b.nr_sequencia,c.cd_pessoa_fisica),1,30) END  cd_usuario_plano
	from	compl_pessoa_fisica	d,
		pessoa_fisica		c,
		pls_contrato_pagador	b,
		titulo_receber		h
	where	h.nr_seq_pagador	= b.nr_sequencia
	and	h.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	c.cd_pessoa_fisica	= d.cd_pessoa_fisica
	and	h.nr_titulo	= nr_titulo_w
	and	coalesce(nr_seq_mensalidade_w::text, '') = ''
	and	ie_origem_titulo_w = '3'
	and	((b.ie_endereco_boleto = 'PFR' AND d.ie_tipo_complemento = 1)
	or	(b.ie_endereco_boleto = 'PFC' AND d.ie_tipo_complemento = 2)
	or	(b.ie_endereco_boleto = 'PFV' AND d.ie_tipo_complemento = 3)
	or	(b.ie_endereco_boleto = 'PFP' AND d.ie_tipo_complemento = 4)
	or	(b.ie_endereco_boleto = 'PFM' AND d.ie_tipo_complemento = 5)
	or	(b.ie_endereco_boleto = 'PFJ' AND d.ie_tipo_complemento = 6))
	
union

	-- OUTROS TITULOS
	select	c.nm_pessoa_fisica nm_cliente,
		upper(d.ds_endereco) || ' ' ||coalesce(d.nr_endereco, d.ds_compl_end) || ' ' || d.ds_complemento ds_rua,
		d.cd_cep,
		upper(d.ds_municipio) ds_municipio,
		upper(d.sg_estado) sg_estado,
		upper(d.ds_bairro) ds_bairro,
		c.nr_cpf,
		d.nr_telefone,
		'' cd_ans,
		'' cd_usuario_plano
	from	compl_pessoa_fisica	d,
		pessoa_fisica		c,
		titulo_receber		h
	where	h.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	c.cd_pessoa_fisica	= d.cd_pessoa_fisica
	and	h.nr_titulo		= nr_titulo_w
	and	coalesce(nr_seq_mensalidade_w::text, '') = ''
	and	ie_origem_titulo_w <> '3'
	and (d.ie_tipo_complemento = 2 or d.ie_tipo_complemento = 1)  LIMIT 1;

C04 CURSOR FOR
	SELECT	obter_desc_estrut_proc(null, null, null, cd_procedimento, ie_origem_proced),
		coalesce(vl_unitario_item_nf,0)
	from	nota_fiscal_item
	where	nr_sequencia = nr_seq_nf_saida_w
	and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '');

C05 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_mensalidade,
		'PF' ie_pf_pj,
		b.nr_sequencia nr_seq_pagador,
		a.dt_referencia dt_referencia,
		b.nr_seq_pagador_intercambio nr_seq_contrato_inter,
		b.nr_seq_contrato nr_seq_contrato,
		a.nr_seq_conta_banco nr_seq_conta_banco
	from	pls_mensalidade a,
		pls_contrato_pagador b
	where	a.nr_seq_pagador = b.nr_sequencia
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	a.nr_sequencia = nr_seq_mensalidade_ww
	and	coalesce(nr_seq_mensalidade_ww,0) <> 0
	and	(b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> '')
	
union all

	SELECT	a.nr_sequencia nr_seq_mensalidade,
		'PJ' ie_pf_pj,
		b.nr_sequencia nr_seq_pagador,
		a.dt_referencia dt_referencia,
		b.nr_seq_pagador_intercambio nr_seq_contrato_inter,
		b.nr_seq_contrato nr_seq_contrato,
		a.nr_seq_conta_banco nr_seq_conta_banco
	from	pls_mensalidade a,
		pls_contrato_pagador b
	where	a.nr_seq_pagador = b.nr_sequencia
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	a.nr_sequencia = nr_seq_mensalidade_ww
	and	coalesce(nr_seq_mensalidade_ww,0) <> 0
	and	(b.cd_cgc IS NOT NULL AND b.cd_cgc::text <> '')
	
union all

	select	a.nr_sequencia nr_seq_mensalidade,
		'PF' ie_pf_pj,
		b.nr_sequencia nr_seq_pagador,
		a.dt_referencia dt_referencia,
		b.nr_seq_pagador_intercambio nr_seq_contrato_inter,
		b.nr_seq_contrato nr_seq_contrato,
		a.nr_seq_conta_banco nr_seq_conta_banco
	from	pls_mensalidade a,
		pls_contrato_pagador b
	where	a.nr_seq_pagador = b.nr_sequencia
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	a.nr_seq_lote = nr_seq_lote_w
	and	coalesce(nr_seq_mensalidade_ww,0) = 0
	and	coalesce(nr_seq_lote_w,0) <> 0
	and	(b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> '')
	
union all

	select	a.nr_sequencia nr_seq_mensalidade,
		'PJ' ie_pf_pj,
		b.nr_sequencia nr_seq_pagador,
		a.dt_referencia dt_referencia,
		b.nr_seq_pagador_intercambio nr_seq_contrato_inter,
		b.nr_seq_contrato nr_seq_contrato,
		a.nr_seq_conta_banco nr_seq_conta_banco
	from	pls_mensalidade a,
		pls_contrato_pagador b
	where	a.nr_seq_pagador = b.nr_sequencia
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	a.nr_seq_lote = nr_seq_lote_w
	and	coalesce(nr_seq_mensalidade_ww,0) = 0
	and	coalesce(nr_seq_lote_w,0) <> 0
	and	(b.cd_cgc IS NOT NULL AND b.cd_cgc::text <> '');

C06 CURSOR FOR
	SELECT	upper(d.ds_razao_social) nm_pagador,
		upper(c.ds_endereco) || ' ' || c.nr_endereco || ' ' || upper(c.ds_complemento) ds_endereco,
		c.ds_bairro ds_bairro,
		c.cd_cep,
		c.ds_municipio ds_municipio,
		c.sg_estado ds_estado,
		d.nr_telefone,
		d.nr_inscricao_estadual,
		d.cd_cgc
	from	pessoa_juridica		d,
		pessoa_juridica_compl	c,
		pls_contrato_pagador	b,
		pls_mensalidade		a
	where	a.nr_seq_pagador	= b.nr_sequencia
	and	b.cd_cgc 		= d.cd_cgc
	and	d.cd_cgc 		= c.cd_cgc
	and	a.nr_sequencia		= nr_seq_mensalidade_w
	and	((b.ie_endereco_boleto = 'PJC' and c.ie_tipo_complemento = 1) or (b.ie_endereco_boleto = 'PJF' and c.ie_tipo_complemento = 2))
	and	b.ie_endereco_boleto	<> 'PJ'
	
union all

	SELECT	upper(d.ds_razao_social) nm_pagador,
		upper(d.ds_endereco) || ' ' || d.nr_endereco || ' ' || upper(d.ds_complemento) ds_endereco,
		d.ds_bairro ds_bairro,
		d.cd_cep,
		d.ds_municipio ds_municipio,
		d.sg_estado ds_estado,
		d.nr_telefone,
		d.nr_inscricao_estadual,
		d.cd_cgc
	from	pessoa_juridica		d,
		pls_contrato_pagador	b,
		pls_mensalidade		a
	where	a.nr_seq_pagador	= b.nr_sequencia
	and	b.cd_cgc 		= d.cd_cgc
	and	a.nr_sequencia		= nr_seq_mensalidade_w
	and	b.ie_endereco_boleto	= 'PJ'  LIMIT 1;

C07 CURSOR FOR
	SELECT	CASE WHEN ds_tit_dep='X' THEN ds_plano  ELSE CASE WHEN sum(qt_titular)=0 THEN  CASE WHEN sum(qt_dependente)=0 THEN  null  ELSE (lpad(sum(qt_dependente),4,'0')||'  '||ds_tit_dep||'  '||ds_plano||'  '||qt_faixa) END   ELSE (lpad(sum(qt_titular),4,'0')||'  '||ds_tit_dep||'  '||ds_plano||'  '||qt_faixa) END  END  ds_tit_depend,
		vl_mensalidade,
		sum(vl_mensalidade) vl_total
	from (SELECT	qt_titular,
			qt_dependente,
			ds_plano,
			ds_tit_dep,
			qt_faixa,
			vl_mensalidade
		from	pls_mens_relat_3533_v
		where	nr_seq_mensalidade = nr_seq_mensalidade_w) alias9
	where	vl_mensalidade <> 0
	group by
		qt_titular,
		qt_dependente,
		ds_plano,
		ds_tit_dep,
		qt_faixa,
		vl_mensalidade,
		ds_tit_dep;


BEGIN

--Tratamento para gerar o relatorio pela funcao OPS - Mensalidade
if (nr_titulo_p = 0) then
	nr_titulo_ww := null;
else
	nr_titulo_ww := nr_titulo_p;
end if;

if (nr_seq_lote_p = 0) then
	nr_seq_lote_w := null;
else
	nr_seq_lote_w := nr_seq_lote_p;
end if;

if (nr_seq_mensalidade_p = 0) then
	nr_seq_mensalidade_ww := null;
else
	nr_seq_mensalidade_ww := nr_seq_mensalidade_p;
end if;

delete	FROM w_pls_relat_boleto
where	nm_usuario	= nm_usuario_p;

if (coalesce(nr_seq_lote_p,0) > 0) then
	select	count(1)
	into STRICT	qt_tit_lote_mens_w
	from	pls_mensalidade a,
		titulo_receber b
	where	a.nr_sequencia = b.nr_seq_mensalidade
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	a.nr_seq_lote = nr_seq_lote_p;
end if;

qt_linhas_w	:= 0;

if	((coalesce(nr_titulo_p,0) > 0) or
	 ((coalesce(nr_seq_lote_p,0) > 0) and (coalesce(qt_tit_lote_mens_w,0) > 0))) then
	open C01;
	loop
	fetch C01 into
		nr_titulo_w,
		ie_pf_pj_w,
		nr_seq_mensalidade_w,
		ie_origem_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	max(cd_banco_estab)
		into STRICT	cd_banco_w
		from	titulo_receber_bloq_v
		where	nr_titulo	= nr_titulo_w;

		select	max(a.cd_carteira)
		into STRICT	cd_carteira_cobranca_w
		from	banco_carteira	a,
			titulo_receber	b
		where	a.nr_sequencia	= b.nr_seq_carteira_cobr
		and	b.nr_titulo	= nr_titulo_w;

		qt_linhas_w	:= 0;

		nm_pagador_w		:= '';
		ds_endereco_w		:= '';
		cd_cep_w		:= '';
		ds_municipio_w		:= '';
		ds_estado_w		:= '';
		ds_bairro_w		:= '';
		nr_cpf_w		:= '';
		nr_telefone_w		:= '';
		cd_ans_w		:= '';
		cd_usuario_plano_w	:= '';
		nr_contrato_w		:= null;
		dt_referencia_w		:= null;
		dt_emissao_w		:= null;
		dt_vencimento_w		:= null;
		nr_nota_fiscal_e_w	:= '';
		cd_agencia_bancaria_w	:= '';
		nr_numero_w		:= '';
		nr_nota_fiscal_w	:= '';
		nr_inscricao_estadual_w	:= '';

		-- MENSALIDADE
		if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then
			select	CASE WHEN ie_pf_pj_w='PF' THEN substr(pls_carteira_pag_se_seg(c.nr_sequencia,c.cd_pessoa_fisica),5,10) WHEN ie_pf_pj_w='PJ' THEN				coalesce(b.cd_grupo_intercambio,pls_obter_dados_contrato(c.nr_seq_contrato,'N')) END  nr_contrato,
				b.dt_referencia,
				a.dt_emissao,
				a.dt_vencimento dt_vencimento,
				b.nr_serie_mensalidade || ' - ' || a.nr_titulo nr_nota_fiscal_e,
				/* Alterado para exibir corretamente a conta bancaria no boleto */

				be.cd_agencia_bancaria ||'/'||be.cd_conta||'-'||be.ie_digito_conta cd_agencia_bancaria,
				coalesce(a.nr_nosso_numero, CASE WHEN ie_pf_pj_w='PF' THEN obter_nosso_numero_pagador(c.nr_sequencia, a.nr_titulo) WHEN ie_pf_pj_w='PJ' THEN 				'09' ||'/' || obter_nosso_numero_banco(cd_banco_w,a.nr_titulo) END ) nr_numero,
				e.nr_nfe_imp nr_nota_fiscal,
				a.nr_bloqueto,
				a.tx_juros,
				a.tx_multa,
				a.vl_titulo,
				a.vl_saldo_titulo,
				a.nr_seq_nf_saida,
				a.vl_saldo_juros,
				a.vl_saldo_multa,
				c.nr_sequencia,
				CASE WHEN a.ie_situacao='2' THEN a.dt_liquidacao  ELSE null END ,
				a.dt_pagamento_previsto,
				a.vl_saldo_juros,
				a.vl_saldo_multa
			into STRICT	nr_contrato_w,
				dt_referencia_w,
				dt_emissao_w,
				dt_vencimento_w,
				nr_nota_fiscal_e_w,
				cd_agencia_bancaria_w,
				nr_numero_w,
				nr_nota_fiscal_w,
				nr_bloqueto_w,
				tx_juros_w,
				tx_multa_w,
				vl_titulo_w,
				VL_TOTAL_ITEM_w,
				nr_seq_nf_saida_w,
				vl_saldo_juros_w,
				vl_saldo_multa_w,
				nr_seq_pagador_w,
				dt_liquidacao_w,
				dt_pag_previsto_w,
				vl_saldo_juros_tit_w,
				vl_saldo_multa_tit_w
			FROM pls_contrato_pagador_fin f, pls_contrato_pagador c, banco_estabelecimento be, titulo_receber a, pls_mensalidade b
LEFT OUTER JOIN nota_fiscal e ON (b.nr_sequencia = e.nr_seq_mensalidade)
WHERE b.nr_seq_pagador	= c.nr_sequencia and a.nr_seq_mensalidade	= b.nr_sequencia  and f.nr_seq_pagador	= c.nr_sequencia AND B.nr_seq_pagador_fin	= f.nr_sequencia and be.nr_sequencia		= coalesce(a.nr_seq_conta_banco,21)  --Alterado para exibir corretamente a conta bancaria no boleto. NVL adicionado por solicitacao do cliente na OS 1715959
  and a.nr_titulo		= nr_titulo_w;

		-- TITULO IMPORTADO DE MENSALIDADE
		elsif (coalesce(nr_seq_mensalidade_w::text, '') = '') and (ie_origem_titulo_w = '3') then
			select	coalesce(substr(obter_dados_titulo_receber(a.nr_titulo,'CA'),5,10),
					substr(pls_obter_dados_contrato(c.nr_seq_contrato,'N'),5,10)) nr_contrato,
				a.dt_emissao,
				a.dt_emissao,
				a.dt_vencimento,
				a.nr_titulo nr_nota_fiscal_e,
				f.cd_agencia_bancaria ||'/'||f.cd_conta || '-' || f.ie_digito_conta cd_agencia_bancaria,
				coalesce(a.nr_nosso_numero, CASE WHEN ie_pf_pj_w='PF' THEN obter_nosso_numero_pagador(c.nr_sequencia, a.nr_titulo) WHEN ie_pf_pj_w='PJ' THEN				'09' ||'/' || obter_nosso_numero_banco(cd_banco_w,a.nr_titulo) END ) nr_numero,
				null nr_nota_fiscal,
				a.nr_bloqueto,
				a.tx_juros,
				a.tx_multa,
				a.vl_titulo,
				a.vl_saldo_titulo,
				a.nr_seq_nf_saida,
				a.dt_pagamento_previsto,
				a.vl_saldo_juros,
				a.vl_saldo_multa
			into STRICT	nr_contrato_w,
				dt_referencia_w,
				dt_emissao_w,
				dt_vencimento_w,
				nr_nota_fiscal_e_w,
				cd_agencia_bancaria_w,
				nr_numero_w,
				nr_nota_fiscal_w,
				nr_bloqueto_w,
				tx_juros_w,
				tx_multa_w,
				vl_titulo_w,
				VL_TOTAL_ITEM_w,
				nr_seq_nf_saida_w,
				dt_pag_previsto_w,
				vl_saldo_juros_tit_w,
				vl_saldo_multa_tit_w
			from	pls_contrato_pagador_fin	f,
				pls_contrato_pagador	c,
				titulo_receber		a
			where	a.nr_seq_pagador	= c.nr_sequencia
			and	c.nr_sequencia	= f.nr_seq_pagador
			and	a.nr_titulo		= nr_titulo_w
			and	(f.dt_inicio_vigencia	= (	SELECT	max(z.dt_inicio_vigencia)
								from	pls_contrato_pagador_fin z
								where	z.nr_seq_pagador	= a.nr_seq_pagador));

		-- OUTROS TITULOS
		elsif (coalesce(nr_seq_mensalidade_w::text, '') = '') and (ie_origem_titulo_w <> '3') then
			begin
			select	null nr_contrato,
				a.dt_emissao,
				a.dt_emissao,
				a.dt_vencimento,
				a.nr_titulo nr_nota_fiscal_e,
				x.cd_agencia_bancaria ||'/'||x.cd_conta || '-' || x.ie_digito_conta cd_agencia_bancaria,
				CASE WHEN ie_pf_pj_w='PF' THEN x.nr_nosso_numero WHEN ie_pf_pj_w='PJ' THEN '09' ||'/' || obter_nosso_numero_banco(x.cd_banco_estab,x.nr_titulo) END  nr_numero,
				null nr_nota_fiscal,
				x.nr_bloqueto,
				a.tx_juros,
				a.tx_multa,
				a.vl_titulo,
				x.vl_saldo_titulo,
				a.nr_seq_nf_saida,
				a.dt_pagamento_previsto,
				a.vl_saldo_juros,
				a.vl_saldo_multa
			into STRICT	nr_contrato_w,
				dt_referencia_w,
				dt_emissao_w,
				dt_vencimento_w,
				nr_nota_fiscal_e_w,
				cd_agencia_bancaria_w,
				nr_numero_w,
				nr_nota_fiscal_w,
				nr_bloqueto_w,
				tx_juros_w,
				tx_multa_w,
				vl_titulo_w,
				vl_total_item_w,
				nr_seq_nf_saida_w,
				dt_pag_previsto_w,
				vl_saldo_juros_tit_w,
				vl_saldo_multa_tit_w
			from	titulo_receber_bloq_v	x,
				titulo_receber		a
			where	a.nr_titulo	= x.nr_titulo
			and	a.nr_titulo	= nr_titulo_w;
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(229560,'NR_TITULO='||nr_titulo_w);
			end;
		end if;

		if (ie_pf_pj_w = 'PJ') then
			insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_titulo,ie_banda,ie_pf_pj,nr_contrato,dt_referencia_mens,
					dt_emissao_titulo,dt_vencimento,cd_agencia_bancaria,nr_nosso_numero,nr_nfe_imp,
					nr_linha,nr_nota_fiscal_e,cd_banco, cd_carteira_cobranca)
			values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_titulo_w,'C',ie_pf_pj_w,nr_contrato_w,dt_referencia_w,
					dt_emissao_w,dt_vencimento_w,cd_agencia_bancaria_w,nr_numero_w,nr_nota_fiscal_w,
					1,nr_nota_fiscal_e_w,cd_banco_w, cd_carteira_cobranca_w);

			-- Se for vacina (titulo NF) deve ser enviado boleto para o endereco "Recebimento de NF, Nfe ou NFSe"
			if (nr_seq_nf_saida_w IS NOT NULL AND nr_seq_nf_saida_w::text <> '') and (coalesce(nr_seq_mensalidade_w::text, '') = '') then
				ie_tipo_compl_pj_w := 7;
			else
				ie_tipo_compl_pj_w := null;
			end if;

			open C02;
			loop
			fetch C02 into
				nm_pagador_w,
				ds_endereco_w,
				ds_bairro_w,
				cd_cep_w,
				ds_municipio_w,
				ds_estado_w,
				nr_telefone_w,
				nr_inscricao_estadual_w,
				cd_cgc_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
			end loop;
			close C02;

			insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_titulo,ie_banda,ie_pf_pj,nm_pessoa,ds_endereco,
					ds_bairro,cd_cep,ds_municipio,sg_estado,nr_telefone,
					nr_inscricao_estadual,cd_cgc,cd_banco,cd_carteira_cobranca)
			values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_titulo_w,'I',ie_pf_pj_w,nm_pagador_w,ds_endereco_w,
					ds_bairro_w,cd_cep_w,ds_municipio_w,ds_estado_w,nr_telefone_w,
					nr_inscricao_estadual_w,cd_cgc_w,cd_banco_w,cd_carteira_cobranca_w);
		elsif (ie_pf_pj_w = 'PF') then

			open C03;
			loop
			fetch C03 into
				nm_pagador_w,
				ds_endereco_w,
				cd_cep_w,
				ds_municipio_w,
				ds_estado_w,
				ds_bairro_w,
				nr_cpf_w,
				nr_telefone_w,
				cd_ans_w,
				cd_usuario_plano_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
			end loop;
			close C03;

			nr_contrato_w	:= lpad(nr_contrato_w,10,'0');

			insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_titulo,ie_banda,ie_pf_pj,nm_pessoa,ds_endereco,
					ds_bairro,cd_cep,ds_municipio,sg_estado,nr_telefone,
					nr_cpf,dt_referencia_mens,dt_emissao_titulo,dt_vencimento,cd_agencia_bancaria,
					nr_nosso_numero,cd_usuario_plano,nr_linha,nr_contrato,NR_NOTA_FISCAL_E,cd_banco,
					cd_carteira_cobranca)
			values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_titulo_w,'I',ie_pf_pj_w,nm_pagador_w,ds_endereco_w,
					ds_bairro_w,cd_cep_w,ds_municipio_w,ds_estado_w,nr_telefone_w,
					nr_cpf_w,dt_referencia_w,dt_emissao_w,dt_vencimento_w,cd_agencia_bancaria_w,
					nr_numero_w,cd_usuario_plano_w,1,nr_contrato_w,nr_nota_fiscal_e_w,cd_banco_w,
					cd_carteira_cobranca_w);
		end if;

		-- MENSALIDADE
		if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') and (ie_pf_pj_w = 'PJ') then
			open c00;
			loop
			fetch c00 into
				ds_item_w,
				vl_mensalidade_uni_w,
				vl_mensalidade_total_w;
			EXIT WHEN NOT FOUND; /* apply on c00 */
				begin

				qt_linhas_w	:= qt_linhas_w +1;

				insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_titulo,ie_banda,ie_pf_pj,vl_item,vl_total_item,
						ds_item,nr_linha,ie_tipo_lote,cd_carteira_cobranca)
				values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_titulo_w,'D',ie_pf_pj_w,vl_mensalidade_uni_w,vl_mensalidade_total_w,
						ds_item_w,qt_linhas_w,'A',cd_carteira_cobranca_w);
				end;
			end loop;
			close C00;
		-- OUTROS TITULOS
		else
			ds_item_w := upper(obter_desc_expressao(300097));

			-- Utilizado para titulos de VACINA
			if (nr_seq_nf_saida_w IS NOT NULL AND nr_seq_nf_saida_w::text <> '') and (coalesce(nr_seq_mensalidade_w::text, '') = '') then
				select	count(1)
				into STRICT	qt_nota_fiscal_item_w
				from	nota_fiscal_item
				where	nr_sequencia = nr_seq_nf_saida_w
				and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '');
				
				open C04;
				loop
				fetch C04 into
					ds_procedimento_w,
					vl_unitario_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					ds_item_w	:= upper(obter_desc_expressao(300097));
					
					if (ds_procedimento_w IS NOT NULL AND ds_procedimento_w::text <> '') then
						ds_item_w := substr(ds_procedimento_w,1,255);
					end if;

					if (qt_nota_fiscal_item_w = 1) then
						insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
								nr_titulo,ie_banda,ie_pf_pj,vl_item,vl_total_item,
								ds_item,nr_linha,ie_tipo_lote,cd_banco,cd_carteira_cobranca)
						values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
								nr_titulo_w,'D',ie_pf_pj_w,vl_titulo_w,vl_titulo_w,
								ds_item_w,qt_linhas_w,'I',cd_banco_w,cd_carteira_cobranca_w);			
					else
						insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
								nr_titulo,ie_banda,ie_pf_pj,vl_item,vl_total_item,
								ds_item,nr_linha,ie_tipo_lote,cd_banco,cd_carteira_cobranca)
						values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
								nr_titulo_w,'D',ie_pf_pj_w,vl_unitario_w,vl_total_item_w,
								ds_item_w,qt_linhas_w,'I',cd_banco_w,cd_carteira_cobranca_w);
					end if;
					end;
				end loop;
				close C04;
			else
				vl_unitario_w := vl_total_item_w;

				insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_titulo,ie_banda,ie_pf_pj,vl_item,vl_total_item,
						ds_item,nr_linha,ie_tipo_lote,cd_banco,cd_carteira_cobranca)
				values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_titulo_w,'D',ie_pf_pj_w,vl_unitario_w,vl_total_item_w,
						ds_item_w,qt_linhas_w,'I',cd_banco_w,cd_carteira_cobranca_w);
			end if;
		end if;

		select	max(cd_banco_dig)
		into STRICT	cd_banco_dig_w
		from	titulo_receber_bloq_v
		where	nr_titulo	= nr_titulo_w;

		if (coalesce(cd_usuario_plano_w::text, '') = '') and (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then
			select	max(substr(pls_obter_dados_cart_segurado(h.nr_seq_segurado,'C'),1,8)) cd_usuario_plano
			into STRICT	cd_usuario_plano_w
			from	pls_mensalidade_segurado	h
			where	h.nr_seq_mensalidade		= nr_seq_mensalidade_w;
		end if;

		/* Se houver prorrogacao nao cobrar juros e multa */

		if (dt_vencimento_w = dt_pag_previsto_w) then
			if (coalesce(vl_saldo_juros_w,0) = 0) then
				vl_saldo_juros_w	:= obter_juros_multa_titulo(nr_titulo_w,clock_timestamp(),'R','J');
			end if;

			if (coalesce(vl_saldo_multa_w,0) = 0) then
				vl_saldo_multa_w	:= obter_juros_multa_titulo(nr_titulo_w,clock_timestamp(),'R','M');
			end if;
		else
			dt_vencimento_w := dt_pag_previsto_w;
			vl_saldo_juros_w := coalesce(vl_saldo_juros_tit_w,0);
			vl_saldo_multa_w := coalesce(vl_saldo_multa_tit_w,0);
		end if;
		/* Retirado este tratamento pois estava apresentando valor nulo no relatorio
		if	(nvl(vl_saldo_juros_w,0) = 0) then
			vl_saldo_juros_w	:= null;
		end if;

		if	(nvl(vl_saldo_multa_w,0) = 0) then
			vl_saldo_multa_w	:= null;
		end if;*/
		insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_titulo,ie_banda,ie_pf_pj,nm_pessoa,ds_endereco,
				ds_bairro,cd_cep,ds_municipio,sg_estado,nr_telefone,
				nr_cpf,dt_referencia_mens,dt_emissao_titulo,dt_vencimento,cd_agencia_bancaria,
				nr_nosso_numero,CD_USUARIO_PLANO,nr_linha,nr_contrato,nr_nota_fiscal_e,
				cd_banco_dig,nr_bloqueto,tx_juros,tx_multa,vl_titulo,vl_total_item, cd_banco,
				vl_juros,vl_multa,dt_liquidacao,cd_carteira_cobranca)
		values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_titulo_w,'B',ie_pf_pj_w,nm_pagador_w,ds_endereco_w,
				ds_bairro_w,cd_cep_w,ds_municipio_w,ds_estado_w,nr_telefone_w,
				nr_cpf_w,dt_referencia_w,dt_emissao_w,dt_vencimento_w,cd_agencia_bancaria_w,
				nr_numero_w,cd_usuario_plano_w,1,nr_contrato_w,nr_nota_fiscal_e_w,
				cd_banco_dig_w,nr_bloqueto_w,tx_juros_w,tx_multa_w,vl_titulo_w,VL_TOTAL_ITEM_w, cd_banco_w,
				vl_saldo_juros_w,vl_saldo_multa_w,dt_liquidacao_w,cd_carteira_cobranca_w);

		if (to_char(coalesce(dt_referencia_w,clock_timestamp()),'mm') = '05') then

			dt_ano_w		:= to_date('01/01'||to_char(add_months(dt_referencia_w,-12),'yyyy'));
			dt_ano_final_w		:= to_date('31/12'||to_char(add_months(dt_referencia_w,-12),'yyyy'));

			select	count(1)
			into STRICT	qt_registros_w
			from	titulo_receber
			where	coalesce(dt_liquidacao::text, '') = ''
			and	dt_vencimento between dt_ano_w and dt_ano_final_w
			and	ie_origem_titulo in ('3','17','18')
			and	nr_seq_pagador = nr_seq_pagador_w;

			if (qt_registros_w = 0) then
				insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_titulo,ie_banda,ie_pf_pj,DS_OBSERVACAO_MENSALIDADE)
				values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_titulo_w,'MA',ie_pf_pj_w,wheb_mensagem_pck.get_texto(1151720,'DS_ANO='||to_char(dt_ano_w,'yyyy')));
			end if;
		end if;

		/* Atualiza o valor de juros e multas do boleto */

		CALL gerar_bloqueto_tit_rec(nr_titulo_w, 'PW');

		end;
	end loop;
	close C01;
elsif (coalesce(nr_seq_mensalidade_p,0) > 0) or ((coalesce(nr_seq_lote_p,0) > 0) and (coalesce(qt_tit_lote_mens_w,0) = 0)) then
	open C05;
	loop
	fetch C05 into
		nr_seq_mensalidade_w,
		ie_pf_pj_w,
		nr_seq_pagador_w,
		dt_referencia_w,
		nr_seq_contrato_inter_w,
		nr_seq_contrato_w,
		nr_seq_conta_banco_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then
			select	sum(a.vl_item)
			into STRICT	vl_mens_w
			from	pls_mensalidade_seg_item a,
				pls_mensalidade_segurado b,
				pls_mensalidade c
			where	a.nr_seq_mensalidade_seg = b.nr_sequencia
			and	b.nr_seq_mensalidade = c.nr_sequencia
			and 	c.nr_sequencia 	= nr_seq_mensalidade_w;
		end if;

		qt_linhas_w		:= 0;
		nm_pagador_w		:= null;
		ds_endereco_w		:= null;
		cd_cep_w		:= null;
		ds_municipio_w		:= null;
		ds_estado_w		:= null;
		ds_bairro_w		:= null;
		nr_cpf_w		:= null;
		nr_telefone_w		:= null;
		cd_usuario_plano_w	:= null;
		nr_contrato_w		:= null;

		if (nr_seq_conta_banco_w IS NOT NULL AND nr_seq_conta_banco_w::text <> '') then
			select	cd_agencia_bancaria ||'/'||cd_conta||'-'||ie_digito_conta
			into STRICT	cd_agencia_bancaria_w
			from	banco_estabelecimento
			where	nr_sequencia = nr_seq_conta_banco_w;
		end if;

		if (coalesce(nr_seq_contrato_inter_w,0) <> 0) then
			nr_contrato_w := nr_seq_contrato_inter_w;
		elsif (coalesce(nr_seq_contrato_w,0) <> 0) then
			select	nr_contrato
			into STRICT	nr_contrato_w
			from	pls_contrato
			where	nr_sequencia = nr_seq_contrato_w;
		end if;

		if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
			select	max(cd_portador)
			into STRICT	cd_portador_w
			from	pls_contrato_pagador_fin
			where	nr_seq_pagador = nr_seq_pagador_w;

			if (cd_portador_w IS NOT NULL AND cd_portador_w::text <> '') then
				select	max(cd_banco)
				into STRICT	cd_banco_w
				from	portador
				where	cd_portador = cd_portador_w;
			end if;
		end if;

		if (ie_pf_pj_w = 'PF') then
			select	b.nm_pessoa_fisica nm_cliente,
				upper(c.ds_endereco)|| ' ' ||coalesce(c.nr_endereco, c.ds_compl_end)|| ' ' ||c.ds_complemento ds_rua,
				c.cd_cep,
				upper(c.ds_municipio) ds_municipio,
				upper(c.sg_estado) sg_estado,
				upper(c.ds_bairro) ds_bairro,
				b.nr_cpf,
				c.nr_telefone,
				CASE WHEN pls_carteira_pag_se_seg(a.nr_sequencia,b.cd_pessoa_fisica)='' THEN ''  ELSE substr(pls_carteira_pag_se_seg(a.nr_sequencia,b.cd_pessoa_fisica),1,30) END  cd_usuario_plano
			into STRICT	nm_pagador_w,
				ds_endereco_w,
				cd_cep_w,
				ds_municipio_w,
				ds_estado_w,
				ds_bairro_w,
				nr_cpf_w,
				nr_telefone_w,
				cd_usuario_plano_w
			from	compl_pessoa_fisica	c,
				pessoa_fisica		b,
				pls_contrato_pagador	a
			where	a.nr_sequencia		= nr_seq_pagador_w
			and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
			and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
			and	((a.ie_endereco_boleto = 'PFR' AND c.ie_tipo_complemento = 1)
			or	(a.ie_endereco_boleto = 'PFC' AND c.ie_tipo_complemento = 2)
			or	(a.ie_endereco_boleto = 'PFV' AND c.ie_tipo_complemento = 3)
			or	(a.ie_endereco_boleto = 'PFP' AND c.ie_tipo_complemento = 4)
			or	(a.ie_endereco_boleto = 'PFM' AND c.ie_tipo_complemento = 5)
			or	(a.ie_endereco_boleto = 'PFJ' AND c.ie_tipo_complemento = 6));

			insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_mensalidade,ie_banda,ie_pf_pj,nm_pessoa,ds_endereco,
					ds_bairro,cd_cep,ds_municipio,sg_estado,nr_telefone,
					nr_cpf, dt_referencia_mens, cd_usuario_plano, nr_linha, nr_contrato,
					cd_banco)
			values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_mensalidade_w,'I',ie_pf_pj_w,nm_pagador_w,ds_endereco_w,
					ds_bairro_w,cd_cep_w,ds_municipio_w,ds_estado_w,nr_telefone_w,
					nr_cpf_w, dt_referencia_w,cd_usuario_plano_w, 1, nr_contrato_w,
					cd_banco_w);

		elsif (ie_pf_pj_w = 'PJ') then
			insert into	w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_mensalidade,ie_banda,ie_pf_pj,nr_contrato,dt_referencia_mens,
					cd_agencia_bancaria,nr_linha,cd_banco)
			values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_mensalidade_w,'C',ie_pf_pj_w,nr_contrato_w,dt_referencia_w,
					cd_agencia_bancaria_w,1,cd_banco_w);

			open C06;
			loop
			fetch C06 into
				nm_pagador_w,
				ds_endereco_w,
				ds_bairro_w,
				cd_cep_w,
				ds_municipio_w,
				ds_estado_w,
				nr_telefone_w,
				nr_inscricao_estadual_w,
				cd_cgc_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
			end loop;
			close C06;

			insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_mensalidade,ie_banda,ie_pf_pj,nm_pessoa,ds_endereco,
					ds_bairro,cd_cep,ds_municipio,sg_estado,nr_telefone,
					nr_inscricao_estadual,cd_cgc,cd_banco)
			values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_mensalidade_w,'I',ie_pf_pj_w,nm_pagador_w,ds_endereco_w,
					ds_bairro_w,cd_cep_w,ds_municipio_w,ds_estado_w,nr_telefone_w,
					nr_inscricao_estadual_w,cd_cgc_w,cd_banco_w);

			open C07;
			loop
			fetch C07 into
				ds_item_w,
				vl_mensalidade_uni_w,
				vl_mensalidade_total_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin
				qt_linhas_w	:= qt_linhas_w +1;

				insert into w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_seq_mensalidade,ie_banda,ie_pf_pj,vl_item,vl_total_item,
						ds_item,nr_linha,ie_tipo_lote)
				values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_seq_mensalidade_w,'D',ie_pf_pj_w,vl_mensalidade_uni_w,vl_mensalidade_total_w,
						ds_item_w,qt_linhas_w,'A');
				end;
			end loop;
			close C07;
		end if;

		if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') and (coalesce(cd_usuario_plano_w::text, '') = '') then
			select	max(substr(pls_obter_dados_cart_segurado(nr_seq_segurado,'C'),1,8)) cd_usuario_plano
			into STRICT	cd_usuario_plano_w
			from	pls_mensalidade_segurado
			where	nr_seq_mensalidade = nr_seq_mensalidade_w;
		end if;

		insert into 	w_pls_relat_boleto(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_mensalidade,ie_banda,ie_pf_pj,nm_pessoa,ds_endereco,
				ds_bairro,cd_cep,ds_municipio,sg_estado,nr_telefone,
				nr_cpf,dt_referencia_mens,cd_agencia_bancaria,cd_usuario_plano,nr_linha,
				nr_contrato,vl_titulo,vl_total_item, cd_banco, cd_cgc)
		values (	nextval('w_pls_relat_boleto_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_mensalidade_w,'B',ie_pf_pj_w,nm_pagador_w,ds_endereco_w,
				ds_bairro_w,cd_cep_w,ds_municipio_w,ds_estado_w,nr_telefone_w,
				nr_cpf_w,dt_referencia_w,cd_agencia_bancaria_w,cd_usuario_plano_w,1,
				nr_contrato_w,vl_mens_w,vl_mens_w,cd_banco_w, cd_cgc_w);
		end;
	end loop;
	close C05;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_dados_relat_3353 ( nr_titulo_p bigint, nr_seq_mensalidade_p bigint, nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

