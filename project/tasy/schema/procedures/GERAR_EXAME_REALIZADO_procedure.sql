-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_exame_realizado ( IE_TIPO_EXAME_P bigint, NR_SEQUENCIA_P bigint, NR_SEQ_RESERVA_P bigint, CD_PF_REALIZOU_P text, NM_USUARIO_P text, IE_IRRADIADO_P text, IE_LAVADO_P text, IE_FILTRADO_P text, IE_ALIQUOTADO_P text, nr_seq_derivado_p bigint, nr_Seq_doacao_p bigint, nr_seq_emp_ent_p bigint, ie_realiza_nat_p text, ie_aferese_p text default 'N', cd_estabelecimento_p bigint DEFAULT NULL) AS $body$
DECLARE



nr_seq_exame_w			bigint := null;
nr_seq_lote_w			bigint := null;
nr_seq_lote_doacao_w		bigint := null;
nr_exames_w			smallint;
nr_seq_producao_w		bigint;
ie_resultado_w			varchar(2);
ds_padrao_w			varchar(20);
dt_realizacao_exame_w		timestamp;
ie_data_exame_emp_w		varchar(1);
nr_seq_derivado_w		bigint := null;
ie_exame_derivado_w		varchar(1);
nr_seq_doacao_w			bigint := null;
vl_resultado_w			double precision;
ds_resultado_w			varchar(255);
ie_atualiza_result_doacao_w	varchar(1);
cd_setor_padrao_w		integer;
ie_atualizar_tipo_sangue_w	varchar(1);
ie_fator_rh_w			varchar(20);
ie_tipo_sangue_w		varchar(2);
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_fisica_doador_w	varchar(10);
nr_seq_exame_rh_param_w 	bigint;
nr_seq_exame_tipo_param_w       bigint;
qtd_w				bigint;
ie_valor_padrao_emp_ent_w	varchar(1);
ie_amostra_reteste_w		varchar(1);
nr_seq_doacao_amostra_w		bigint;
ie_exames_amostra_w		varchar(1);
dt_liberacao_w			timestamp;
ie_inseri_reagente_w		varchar(1);
ie_atualizar_exames_w		varchar(1);
qt_exames_nao_del_w		bigint;
dt_liberacao_doacao_w		san_doacao.dt_liberacao%type;
ie_inserir_w                	varchar(1);
ie_primeira_doacao_w		varchar(1);
ie_aferese_w			varchar(1);
nr_seq_metodo_padrao_w		san_exame_realizado.nr_seq_metodo%type;
ds_mascara_w			varchar(100);
ds_erro_w			varchar(4000);
nr_kit_lote_w san_exame_realizado.nr_kit_lote%type := null;
ds_lote_kit_w san_exame_realizado.ds_lote_kit%type;
ds_fabricante_w san_exame_realizado.ds_fabricante%type;
dt_vencimento_lote_w san_exame_realizado.dt_vencimento_lote%type;

/*ie_tipo_exame_p = 4 (Reserva)
ie_tipo_exame_p = 9 (Item reservado)*/
C001 CURSOR FOR
SELECT	nr_sequencia,
	ie_resultado,
	ds_padrao,
	ie_atualiza_result_doacao,
	cd_setor_atendimento,
	ie_valor_padrao_emp_ent,
	coalesce(ie_primeira_doacao,'N')
from san_exame a
where ie_situacao = 'A'
  and CASE WHEN ie_tipo_exame_p=0 THEN ie_emprestimo WHEN ie_tipo_exame_p=1 THEN ie_doacao WHEN ie_tipo_exame_p=2 THEN coalesce(ie_sangue_trans,ie_producao) WHEN ie_tipo_exame_p=3 THEN ie_transfusao WHEN ie_tipo_exame_p=4 THEN ie_reserva WHEN ie_tipo_exame_p=5 THEN ie_emprestimo_saida WHEN ie_tipo_exame_p=9 THEN coalesce(ie_sangue_res,ie_producao) WHEN ie_tipo_exame_p=10 THEN ie_realiza_nat_p WHEN ie_tipo_exame_p=12 THEN ie_doadores_inaptos WHEN ie_tipo_exame_p=31 THEN ie_sangria_terapeutica WHEN ie_tipo_exame_p=46 THEN ie_auditoria END  = 'S'
  and ie_irradiado	= 'N'
  and ie_lavado		= 'N'
  and ie_filtrado	= 'N'
  and ie_aliquotado	= 'N'
  and coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
  and ((ie_tipo_exame_p not in (2,3,4,9)) or ((ie_tipo_exame_p in (3,4)) and (coalesce(ie_restricao_exame,'A') in ('P','A')))
       or ((ie_tipo_exame_p in (2,9)) and (coalesce(ie_restricao_exame,'A') in ('B','A'))))
  and (ie_tipo_exame_p <> 1 or ie_exames_amostra_w <> 'R' or ie_amostra_reteste_w = 'N'
	or exists (	SELECT	1
			from	san_impedimento_sorologia b
			where	b.nr_seq_exame 	  = a.nr_sequencia
			and	b.nr_seq_doacao   = nr_seq_doacao_amostra_w
			and	b.ie_nova_amostra = 'S'))
  and 	((ie_tipo_exame_p = 10 and coalesce(ie_tipo_exame,0) = 4) or (ie_tipo_exame_p <> 10 and coalesce(ie_tipo_exame,0) <> 4) or
	(ie_tipo_exame_p = 0 AND ie_realiza_nat_p = 'S'))
  and (coalesce(ie_gerar_exame_nat,'S') = 'S' or coalesce(ie_realiza_nat_p,'N') = 'N')

union

select	nr_sequencia,
	ie_resultado,
	ds_padrao,
	ie_atualiza_result_doacao,
	cd_setor_atendimento,
	ie_valor_padrao_emp_ent,
	coalesce(ie_primeira_doacao,'N') 
from san_exame a
where ie_situacao = 'A'
  and CASE WHEN ie_tipo_exame_p=0 THEN ie_emprestimo WHEN ie_tipo_exame_p=1 THEN ie_doacao WHEN ie_tipo_exame_p=2 THEN coalesce(ie_sangue_trans,ie_producao) WHEN ie_tipo_exame_p=3 THEN ie_transfusao WHEN ie_tipo_exame_p=4 THEN ie_reserva WHEN ie_tipo_exame_p=5 THEN ie_emprestimo_saida WHEN ie_tipo_exame_p=9 THEN coalesce(ie_sangue_res,ie_producao) WHEN ie_tipo_exame_p=10 THEN ie_realiza_nat_p WHEN ie_tipo_exame_p=12 THEN ie_doadores_inaptos WHEN ie_tipo_exame_p=31 THEN ie_sangria_terapeutica WHEN ie_tipo_exame_p=46 THEN ie_auditoria END  = 'S'
  and ((ie_tipo_exame_p not in (2,3,4,9)) or ((ie_tipo_exame_p in (3,4)) and (coalesce(ie_restricao_exame,'A') in ('P','A'))) or ((ie_tipo_exame_p in (2,9)) and (coalesce(ie_restricao_exame,'A') in ('B','A'))))
  and ((ie_tipo_exame_p not in (0,2,9))
	or (ie_irradiado = ie_irradiado_p and ie_lavado = ie_lavado_p and ie_filtrado  = ie_filtrado_p  and ie_aliquotado = ie_aliquotado_p) or (ie_irradiado = ie_irradiado_p and ie_irradiado_p = 'S') or (ie_lavado =  ie_lavado_p and  ie_lavado_p = 'S') or (ie_filtrado  = ie_filtrado_p and ie_filtrado_p = 'S') or (ie_aliquotado = ie_aliquotado_p and ie_aliquotado_p = 'S'))
  and coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
  and (ie_tipo_exame_p <> 1 or ie_exames_amostra_w <> 'R' or ie_amostra_reteste_w = 'N'
	or exists (	select	1
			from	san_impedimento_sorologia b
			where	b.nr_seq_exame 	  = a.nr_sequencia
			and	b.nr_seq_doacao   = nr_seq_doacao_amostra_w
			and	b.ie_nova_amostra = 'S'))
  and 	((ie_tipo_exame_p = 10 and coalesce(ie_tipo_exame,0) = 4) or (ie_tipo_exame_p <> 10 and coalesce(ie_tipo_exame,0) <> 4) or
	(ie_tipo_exame_p = 0 AND ie_realiza_nat_p = 'S'))
  and (coalesce(ie_gerar_exame_nat,'S') = 'S' or coalesce(ie_realiza_nat_p,'N') = 'N');


C002 CURSOR FOR
	SELECT	b.nr_seq_exame_lote,
		b.nr_seq_exame
	from  	san_exame_lote a,
		san_exame_realizado b,
		san_exame c
	where	a.nr_sequencia = b.nr_Seq_exame_lote
	and	b.nr_seq_exame = c.nr_sequencia
	and	a.nr_seq_doacao = nr_seq_doacao_p
	and	coalesce(b.dt_liberacao::text, '') = ''
	and	coalesce(b.ds_resultado::text, '') = ''
	and	c.ie_tipo_exame = 4;
	
C003 CURSOR FOR
	SELECT	b.nr_seq_exame_lote,
		b.nr_seq_exame
	from  	san_exame_lote a,
		san_exame_realizado b,
		san_exame c
	where	a.nr_sequencia = b.nr_Seq_exame_lote
	and	b.nr_seq_exame = c.nr_sequencia
	and	a.nr_seq_doacao = nr_seq_doacao_p
	and	coalesce(b.dt_liberacao::text, '') = ''
	and	coalesce(b.ds_resultado::text, '') = ''
	and	coalesce(c.ie_gerar_exame_nat,'S') = 'N';


BEGIN

ie_exames_amostra_w := obter_valor_param_usuario(450, 323, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_inseri_reagente_w := obter_valor_param_usuario(450, 386, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

ds_mascara_w := pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p));

begin
select 	'S'
into STRICT	ie_amostra_reteste_w
from	san_doacao
where	nr_sequencia 	= nr_seq_doacao_p
and	ie_tipo_coleta 	= 2
and	(nr_seq_doacao_amostra IS NOT NULL AND nr_seq_doacao_amostra::text <> '')  LIMIT 1;
exception when others then
	ie_amostra_reteste_w := 'N';
end;

if (ie_amostra_reteste_w = 'S') then
	select	nr_seq_doacao_amostra
	into STRICT	nr_seq_doacao_amostra_w
	from	san_doacao
	where	nr_sequencia = nr_seq_doacao_p;
end if;

select	max(dt_liberacao)
into STRICT	dt_liberacao_doacao_w
from	san_doacao
where	nr_sequencia = nr_seq_doacao_p;

begin
select max(nr_sequencia)
	into STRICT	 nr_seq_lote_w
from san_exame_lote
where CASE WHEN ie_tipo_exame_p=0 THEN nr_seq_producao WHEN ie_tipo_exame_p=1 THEN nr_seq_doacao WHEN ie_tipo_exame_p=2 THEN nr_seq_producao WHEN ie_tipo_exame_p=3 THEN nr_seq_transfusao WHEN ie_tipo_exame_p=4 THEN nr_seq_reserva WHEN ie_tipo_exame_p=5 THEN nr_seq_emprestimo_saida WHEN ie_tipo_exame_p=9 THEN nr_seq_res_prod WHEN ie_tipo_exame_p=10 THEN nr_seq_doacao WHEN ie_tipo_exame_p=12 THEN nr_seq_doador_inapto WHEN ie_tipo_exame_p=31 THEN nr_seq_sangria WHEN ie_tipo_exame_p=46 THEN nr_seq_auditoria END  = nr_sequencia_p
  and (coalesce(CASE WHEN ie_origem='E' THEN 0 WHEN ie_origem='R' THEN ie_tipo_exame_p WHEN ie_origem='T' THEN 2  ELSE null END ,ie_tipo_exame_p) = ie_tipo_exame_p or ie_tipo_exame_p = 9)
  and nr_amostra = 1
having (max(nr_sequencia) IS NOT NULL AND (max(nr_sequencia))::text <> '');
exception
	when no_data_found then
	begin

	RAISE NOTICE '%,%', ie_tipo_exame_p, nr_sequencia_p;

	if (ie_tipo_exame_p = 3) then
		select coalesce(max(nr_sequencia),null)
		into STRICT nr_seq_lote_w
		from san_exame_lote
		where nr_seq_reserva = (SELECT nr_seq_reserva
						from san_transfusao
						where nr_sequencia = nr_sequencia_p);

		if (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then

			update	san_exame_lote
			set	nr_seq_transfusao = nr_sequencia_p
			where	nr_sequencia = nr_seq_lote_w;

		end if;
	end if;

	if (coalesce(nr_seq_lote_w::text, '') = '') then
		select nextval('san_exame_lote_seq')
		into STRICT nr_seq_lote_w
		;

		insert into san_exame_lote(nr_sequencia, cd_pf_realizou, dt_atualizacao, nm_usuario,
					ie_origem, ie_tipagem,
					nr_seq_doacao,
					nr_seq_producao,
					nr_seq_transfusao,
					nr_seq_reserva,
					nr_seq_emprestimo_saida,
					nr_seq_res_prod,
					nr_seq_doador_inapto,
					nr_seq_sangria,
					nr_seq_auditoria,
					nr_amostra)
		values (nr_seq_lote_w, cd_pf_realizou_p, clock_timestamp(), nm_usuario_p,
			  CASE WHEN ie_tipo_exame_p=0 THEN 'E' WHEN ie_tipo_exame_p=2 THEN 'T' WHEN ie_tipo_exame_p=9 THEN  'R'  ELSE null END , 'N',
			  CASE WHEN ie_tipo_exame_p=1 THEN nr_sequencia_p WHEN ie_tipo_exame_p=10 THEN nr_sequencia_p  ELSE null END ,
			  CASE WHEN ie_tipo_exame_p=0 THEN nr_sequencia_p WHEN ie_tipo_exame_p=2 THEN nr_sequencia_p  ELSE null END ,
			  CASE WHEN ie_tipo_exame_p=3 THEN nr_sequencia_p  ELSE null END ,
			  CASE WHEN ie_tipo_exame_p=4 THEN nr_sequencia_p  ELSE null END ,
			  CASE WHEN ie_tipo_exame_p=5 THEN nr_Sequencia_p  ELSE null END ,
			  CASE WHEN ie_tipo_exame_p=9 THEN nr_sequencia_p  ELSE null END ,
			  CASE WHEN ie_tipo_exame_p=12 THEN nr_sequencia_p  ELSE null END ,
			  CASE WHEN ie_tipo_exame_p=31 THEN nr_sequencia_p  ELSE null END ,
			  CASE WHEN ie_tipo_exame_p=46 THEN nr_sequencia_p  ELSE null END ,
			  1);
	end if;
	end;
end;

select count(*)
into STRICT nr_exames_w
from san_exame_realizado
where nr_seq_exame_lote = nr_seq_lote_w;

select	coalesce(max(ie_data_exame_emp),'A')
into STRICT	ie_data_exame_emp_w
from 	san_parametro;

dt_realizacao_exame_w	:= clock_timestamp();

if (ie_tipo_exame_p = 0 ) then

	select	nr_seq_producao
	into STRICT	nr_seq_producao_w
	from	san_exame_lote
	where	nr_sequencia = nr_seq_lote_w;

	select	coalesce(max(nr_seq_derivado),0)
	into STRICT	nr_seq_derivado_w
	from	san_producao
	where	nr_sequencia = nr_seq_producao_w;

	if (ie_data_exame_emp_w = 'P') then

		select	coalesce(max(dt_producao),clock_timestamp())
		into STRICT	dt_realizacao_exame_w
		from	san_producao
		where	nr_sequencia = nr_seq_producao_w;

	end if;
end if;
if (coalesce(nr_seq_derivado_p,0) > 0) then
	nr_seq_derivado_w := nr_seq_derivado_p;
end if;

if (ie_tipo_exame_p = 9) and (coalesce(nr_seq_derivado_p,0) = 0) then

	select 	coalesce(max(nr_seq_producao),0)
	into STRICT	nr_seq_producao_w
	from	san_reserva_prod
	where	nr_sequencia = nr_sequencia_p;

	select	coalesce(max(nr_seq_derivado),0)
	into STRICT	nr_seq_derivado_w
	from	san_producao
	where	nr_sequencia = nr_seq_producao_w;

end if;

nr_seq_doacao_w	:= nr_Seq_doacao_p;

if (ie_tipo_exame_p = 9) and (coalesce(nr_Seq_doacao_p,0) = 0) then

	select 	coalesce(max(nr_seq_producao),0)
	into STRICT	nr_seq_producao_w
	from	san_reserva_prod
	where	nr_sequencia = nr_sequencia_p;

	select	coalesce(max(nr_seq_doacao),0)
	into STRICT	nr_seq_doacao_w
	from	san_producao
	where	nr_sequencia = nr_seq_producao_w;
end if;

SELECT 	max(nr_seq_exame_RH),
	max(nr_seq_exame_tipo),
	max(ie_atualizar_tipo_sangue),
	coalesce(max(ie_atualizar_exames),'N')
into STRICT	nr_seq_exame_rh_param_w,
	nr_seq_exame_tipo_param_w,
	ie_atualizar_tipo_sangue_w,
	ie_atualizar_exames_w
FROM 	san_parametro
where	cd_estabelecimento = cd_estabelecimento_p;

if	((ie_atualizar_tipo_sangue_w = 'S') and ((ie_tipo_exame_p = 4) or (ie_tipo_exame_p = 3))) then

	if (ie_tipo_exame_p = 3) then --Transfusao
		SELECT	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		FROM	atendimento_paciente
		WHERE	nr_atendimento = (SELECT max(nr_atendimento)
				   	  FROM 	 san_transfusao
					  WHERE	 nr_sequencia = nr_sequencia_p);

	elsif (ie_tipo_exame_p = 4) then --reserva
		select 	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from   	san_reserva
		where  	nr_sequencia = nr_sequencia_p;

	end if;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		-- Fator RH
		select 	coalesce(obter_dados_pf(cd_pessoa_fisica_w,'RH'),'N')
		into STRICT	ie_fator_rh_w
		;

		select 	coalesce(obter_dados_pf(cd_pessoa_fisica_w,'TS'),'N')
		into STRICT	ie_tipo_sangue_w
		;
	else
		ie_fator_rh_w		:= 'N';
		ie_tipo_sangue_w 	:= 'N';
	end if;

	if (ie_fator_rh_w <> 'N') then --insere o exame de fator rh
		select 	count(*)
		into STRICT	qtd_w
		from	san_exame_realizado
		where	nr_seq_exame_lote 	= nr_seq_lote_w
		and	nr_seq_exame		= nr_seq_exame_rh_param_w;
		
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_metodo_padrao_w
		from	san_exame_metodo_util a,
			san_metodo_exame b
		where	a.nr_seq_metodo	= b.nr_sequencia
		and	ie_padrao	= 'S'
		and	b.ie_situacao	= 'A'
		and	a.nr_seq_exame	= nr_seq_exame_rh_param_w;
		
		select 	max(cd_setor_atendimento)
		into STRICT	cd_setor_padrao_w
		from  	san_exame
		where	nr_Sequencia = nr_seq_exame_rh_param_w;
		
		if ( qtd_w = 0) then

      if (ie_tipo_exame_p = 3) then
				select max(nr_sequencia),
					max(ds_lote_kit),
					max(ds_fabricante),
					max(dt_vigencia_final)
				into STRICT
					nr_kit_lote_w,
					ds_lote_kit_w,
					ds_fabricante_w,
					dt_vencimento_lote_w
				from san_kit_exame
				where ie_situacao = 'A'
				and nr_seq_exame = nr_seq_exame_rh_param_w
				and dt_realizacao_exame_w BETWEEN DT_VIGENCIA_INI AND DT_VIGENCIA_FINAL
        and ie_exame_interno = 'N';
			end if;
		
			insert into san_exame_realizado(
					nr_seq_exame_lote,
					nr_seq_exame,
					dt_atualizacao,
					nm_usuario,
					dt_realizado,
					vl_resultado,
					ds_resultado,
					cd_setor_atendimento,
					nr_seq_metodo,
					nr_kit_lote,
					ds_lote_kit,
					ds_fabricante,
					dt_vencimento_lote)
			values (	nr_seq_lote_w,
					nr_seq_exame_rh_param_w,
					clock_timestamp(),
					nm_usuario_p,
					dt_realizacao_exame_w,
					null,
					ie_fator_rh_w,
					cd_setor_padrao_w,
					nr_seq_metodo_padrao_w,
					nr_kit_lote_w,
					ds_lote_kit_w,
					ds_fabricante_w,
					dt_vencimento_lote_w);
			
			if (ie_tipo_exame_p in (2,3,4,9)) and (ie_inseri_reagente_w = 'S') then
				CALL san_inserir_reagente_realizado(nr_seq_lote_w,nr_seq_exame_rh_param_w,nm_usuario_p);
			end if;
		else
			update 	san_exame_realizado
			set	ds_resultado 		= ie_fator_rh_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				cd_setor_atendimento 	= cd_setor_padrao_w
			where 	nr_seq_exame_lote 	= nr_seq_lote_w
			and	nr_seq_exame		= nr_seq_exame_rh_param_w;
						
		end if;
	end if;
	
	if (ie_tipo_sangue_w <> 'N') then -- insere o exame de tipo de sangue
		select 	count(*)
		into STRICT	qtd_w
		from	san_exame_realizado
		where	nr_seq_exame_lote 	= nr_seq_lote_w
		and	nr_seq_exame		= nr_seq_exame_tipo_param_w;

		select 	max(cd_setor_atendimento)
		into STRICT	cd_setor_padrao_w
		from  	san_exame
		where	nr_Sequencia = nr_seq_exame_tipo_param_w;
		
		if ( qtd_w = 0) then

			select	max(a.nr_sequencia)
			into STRICT	nr_seq_metodo_padrao_w
			from	san_exame_metodo_util a,
				san_metodo_exame b
			where	a.nr_seq_metodo	= b.nr_sequencia
			and	ie_padrao	= 'S'
			and	b.ie_situacao	= 'A'
			and	a.nr_seq_exame	= nr_seq_exame_w;

      if (ie_tipo_exame_p = 3) then
				select max(nr_sequencia),
					max(ds_lote_kit),
					max(ds_fabricante),
					max(dt_vigencia_final)
				into STRICT
					nr_kit_lote_w,
					ds_lote_kit_w,
					ds_fabricante_w,
					dt_vencimento_lote_w
				from san_kit_exame
				where ie_situacao = 'A'
				and nr_seq_exame = nr_seq_exame_tipo_param_w
				and dt_realizacao_exame_w BETWEEN DT_VIGENCIA_INI AND DT_VIGENCIA_FINAL
        and ie_exame_interno = 'N';
			end if;
		
			insert into san_exame_realizado(
					nr_seq_exame_lote,
					nr_seq_exame,
					dt_atualizacao,
					nm_usuario,
					dt_realizado,
					vl_resultado,
					ds_resultado,
					cd_setor_atendimento,
					nr_seq_metodo,
					nr_kit_lote,
					ds_lote_kit,
					ds_fabricante,
					dt_vencimento_lote)
			values (	nr_seq_lote_w,
					nr_seq_exame_tipo_param_w,
					clock_timestamp(),
					nm_usuario_p,
					dt_realizacao_exame_w,
					null,
					ie_tipo_sangue_w,
					cd_setor_padrao_w,
					nr_seq_metodo_padrao_w,
					nr_kit_lote_w,
					ds_lote_kit_w,
					ds_fabricante_w,
					dt_vencimento_lote_w);

			if (ie_tipo_exame_p in (2,3,4,9)) and (ie_inseri_reagente_w = 'S') then
				CALL san_inserir_reagente_realizado(nr_seq_lote_w,nr_seq_exame_tipo_param_w,nm_usuario_p);
			end if;		
					
		else
			update 	san_exame_realizado
			set	ds_resultado 		= ie_tipo_sangue_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				cd_setor_atendimento	= cd_setor_padrao_w
			where 	nr_seq_exame_lote 	= nr_seq_lote_w
			and	nr_seq_exame		= nr_seq_exame_tipo_param_w;						
		end if;
	end if;
end if;

if (coalesce(nr_Seq_doacao_w,0) > 0) then

	if (ie_realiza_nat_p <> 'S') then
		select	count(*)
		into STRICT	qt_exames_nao_del_w
		from  	san_exame_lote a,
			san_exame_realizado b,
			san_exame c
		where	a.nr_sequencia = b.nr_Seq_exame_lote
		and	b.nr_seq_exame = c.nr_sequencia
		and	a.nr_seq_doacao = nr_seq_doacao_p
		and ((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
		or	(b.ds_resultado IS NOT NULL AND b.ds_resultado::text <> ''))
		and	c.ie_tipo_exame = 4;
	
		CALL gravar_log_tasy(1254, wheb_mensagem_pck.get_texto(803417) || '-002: '||qt_exames_nao_del_w||' '||wheb_mensagem_pck.get_texto(803419)||': '||nr_seq_doacao_p||' - '||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(clock_timestamp(), 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||' - '||wheb_mensagem_pck.get_texto(803421)||': '||ie_tipo_exame_p||' - NAT: '||ie_realiza_nat_p,nm_usuario_p);
		
		open c002;
		loop
		fetch c002 into nr_seq_lote_doacao_w, nr_seq_exame_w;
		EXIT WHEN NOT FOUND; /* apply on c002 */
			begin

			delete	FROM san_exame_realizado
			where	nr_seq_exame_lote 	= nr_seq_lote_doacao_w
			and	nr_seq_exame 		= nr_seq_exame_w
			and	coalesce(dt_liberacao::text, '') = ''
			and	coalesce(ds_resultado::text, '') = '';

			CALL gravar_log_tasy(1254, wheb_mensagem_pck.get_texto(803423)||'-002: '||nr_seq_lote_doacao_w||' - '||nr_seq_exame_w||' - '||nm_usuario_p||' - '||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(clock_timestamp(), 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone),nm_usuario_p);

			end;
		end loop;
		close c002;

	end if;

end if;

if (coalesce(nr_Seq_doacao_w,0) > 0) then

	if (ie_realiza_nat_p = 'S') then

		open c003;
		loop
		fetch c003 into nr_seq_lote_doacao_w, nr_seq_exame_w;
		EXIT WHEN NOT FOUND; /* apply on c003 */
			begin

			delete	FROM san_exame_realizado
			where	nr_seq_exame_lote 	= nr_seq_lote_doacao_w
			and	nr_seq_exame 		= nr_seq_exame_w
			and	coalesce(dt_liberacao::text, '') = ''
			and	coalesce(ds_resultado::text, '') = '';

			CALL gravar_log_tasy(1254, wheb_mensagem_pck.get_texto(803423)||'-003: '||nr_seq_lote_doacao_w||' - '||nr_seq_exame_w||' - '||nm_usuario_p||' - '||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(clock_timestamp(), 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone),nm_usuario_p);

			end;
		end loop;
		close c003;

	end if;

end if;

if (nr_exames_w <= 0) or (ie_tipo_exame_p in (10,2,3,4)) or
	((ie_tipo_exame_p = 1) and (ie_atualizar_exames_w = 'S') and (coalesce(dt_liberacao_doacao_w::text, '') = '')) or 
	(ie_tipo_exame_p = 0 AND ie_realiza_nat_p = 'S') or
	(ie_tipo_exame_p = 0 AND ie_aferese_p = 'S') then
	open c001;
	loop
		fetch c001 into nr_seq_exame_w,
				ie_resultado_w,
				ds_padrao_w,
				ie_atualiza_result_doacao_w,
				cd_setor_padrao_w,
				ie_valor_padrao_emp_ent_w,
				ie_primeira_doacao_w;
		EXIT WHEN NOT FOUND; /* apply on c001 */

		ie_exame_derivado_w	:= 'S';

		if (nr_seq_derivado_w > 0) then

			ie_exame_derivado_w := San_obter_se_derivado_exame(nr_seq_exame_w, nr_seq_derivado_w, 'B', ie_aferese_p);

		end if;
		
		ie_inserir_w := 'S';
		if (ie_tipo_exame_p = 1)  and (ie_primeira_doacao_w = 'S') then --doacao
			select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT ie_inserir_w 
			from san_doacao a,
			     san_exame_lote b,
			     san_exame_realizado c
			where a.nr_sequencia = b.nr_seq_doacao
			and b.nr_sequencia = c.nr_seq_exame_lote
			and c.nr_seq_exame = nr_seq_exame_w 
			and (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
			and a.cd_pessoa_fisica in (SELECT x.cd_pessoa_fisica 
					       from san_doacao x 
	  				       where x.nr_sequencia = nr_sequencia_p)  
                                                 and a.nr_sequencia <> nr_sequencia_p;
		
		end if;
		
		
		if (ie_tipo_exame_p = 4) then --reserva
			select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_exame_derivado_w
			from	san_exame_derivado a
			where	a.nr_seq_exame = nr_seq_exame_w
			and	a.ie_tipo_regra = 'R';
			
			if (ie_exame_derivado_w = 'N') then
				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_exame_derivado_w
				from	san_reserva_item a
				where	a.nr_seq_reserva = nr_sequencia_p
				and 	exists (	SELECT	1
						from	san_exame_derivado b
						where	b.nr_seq_exame = nr_seq_exame_w
						and	b.ie_tipo_regra = 'R'
						and	b.nr_seq_derivado = a.nr_seq_derivado);
			end if;
	
		end if;

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_lote_doacao_w
		from	san_exame_lote
		where	nr_seq_doacao = nr_Seq_doacao_w;

		vl_resultado_w	:= null;
		ds_resultado_w	:= null;
		dt_liberacao_w	:= null;

		if (ie_atualiza_result_doacao_w <> 'N') and (nr_seq_lote_doacao_w > 0) then

			select	max(vl_resultado),
				max(ds_resultado)
			into STRICT	vl_resultado_w,
				ds_resultado_w
			from 	san_exame_realizado
			where 	nr_seq_exame_lote	= nr_seq_lote_doacao_w
			and 	nr_seq_exame		= nr_seq_exame_w;
			
			if (ie_atualiza_result_doacao_w = 'L') and (ie_tipo_exame_p in (2,9)) then
				dt_liberacao_w := clock_timestamp();
			end if;
		end if;

		select count(*)
		into STRICT	nr_exames_w
		from san_exame_realizado
		where nr_seq_exame_lote		= nr_seq_lote_w
		  and nr_seq_exame		= nr_seq_exame_w;

		if (nr_exames_w = 0) and (ie_exame_derivado_w = 'S')  and (ie_inserir_w  = 'S') then

			if (ie_valor_padrao_emp_ent_w = 'S') and (coalesce(nr_seq_emp_ent_p::text, '') = '') then
				ds_padrao_w	:= null;
			end if;

			select	max(a.nr_sequencia)
			into STRICT	nr_seq_metodo_padrao_w
			from	san_exame_metodo_util a,
				san_metodo_exame b
			where	a.nr_seq_metodo = b.nr_sequencia
			and	ie_padrao	= 'S'
			and	b.ie_situacao	= 'A'
			and	a.nr_seq_exame	= nr_seq_exame_w;

      if (ie_tipo_exame_p = 3 or ie_tipo_exame_p = 4) then
				select max(nr_sequencia),
					max(ds_lote_kit),
					max(ds_fabricante),
					max(dt_vigencia_final)
				into STRICT
					nr_kit_lote_w,
					ds_lote_kit_w,
					ds_fabricante_w,
					dt_vencimento_lote_w
				from san_kit_exame
				where ie_situacao = 'A'
				and nr_seq_exame = nr_seq_exame_w
				and dt_realizacao_exame_w BETWEEN DT_VIGENCIA_INI AND DT_VIGENCIA_FINAL
        and ie_exame_interno = 'N';
			end if;
			
			begin
				insert into san_exame_realizado(nr_seq_exame_lote, nr_seq_exame, dt_atualizacao,
		  					     nm_usuario, dt_realizado, vl_resultado, ds_resultado, cd_setor_atendimento,
							     dt_liberacao, nr_seq_metodo, nr_kit_lote, ds_lote_kit, ds_fabricante, dt_vencimento_lote)
				values (nr_seq_lote_w, nr_seq_exame_w, clock_timestamp(), nm_usuario_p, dt_realizacao_exame_w,
					CASE WHEN ie_resultado_w='N' THEN coalesce(ds_padrao_w,vl_resultado_w)  ELSE vl_resultado_w END ,
					CASE WHEN ie_resultado_w='D' THEN coalesce(ds_padrao_w,ds_resultado_w)  ELSE ds_resultado_w END ,cd_setor_padrao_w,
					dt_liberacao_w, nr_seq_metodo_padrao_w, nr_kit_lote_w, ds_lote_kit_w, ds_fabricante_w, dt_vencimento_lote_w);
				
			exception when others then
				ds_erro_w := sqlerrm(SQLSTATE);
			end;

			CALL gravar_log_tasy(1254, substr('Insert-exame-001: ds_erro_w:' || ds_erro_w || ' - '||nr_seq_lote_w||' - '||nr_seq_exame_w||' - '||nm_usuario_p||' - ' ||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(clock_timestamp(), 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||' - '||wheb_mensagem_pck.get_texto(803421)||': '||ie_tipo_exame_p||' - NAT: '||ie_realiza_nat_p,1, 1999),nm_usuario_p);

			if (ie_tipo_exame_p in (2,3,4,9)) and (ie_inseri_reagente_w = 'S') then
				CALL san_inserir_reagente_realizado(nr_seq_lote_w,nr_seq_exame_w,nm_usuario_p);
			end if;	
		end if;
	end loop;
	close c001;
/*	commit; */

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_exame_realizado ( IE_TIPO_EXAME_P bigint, NR_SEQUENCIA_P bigint, NR_SEQ_RESERVA_P bigint, CD_PF_REALIZOU_P text, NM_USUARIO_P text, IE_IRRADIADO_P text, IE_LAVADO_P text, IE_FILTRADO_P text, IE_ALIQUOTADO_P text, nr_seq_derivado_p bigint, nr_Seq_doacao_p bigint, nr_seq_emp_ent_p bigint, ie_realiza_nat_p text, ie_aferese_p text default 'N', cd_estabelecimento_p bigint DEFAULT NULL) FROM PUBLIC;

