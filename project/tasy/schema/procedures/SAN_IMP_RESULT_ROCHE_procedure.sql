-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_imp_result_roche ( cd_pessoa_fisica_p text, cd_barras_p text, dt_resultado_p timestamp, cd_exame_p text, cd_resultado_p text, ds_res_qualitativo_p text, ds_res_quantitativo_p text, ie_tipo_integracao_p text, nm_usuario_p text, ds_invalidos_p INOUT text, dt_validade_p timestamp, ds_lote_kit_p text, ds_metsbs_p text, nr_cutoff_p bigint) AS $body$
DECLARE


nr_seq_exame_lote_w	bigint;
nr_seq_exame_w		bigint;
dt_liberacao_w		timestamp;
ds_res_qualitativo_w	san_exame_realizado.ds_resultado%type;
cd_barras_w		varchar(13);
nr_seq_metodo_w		san_metodo_integracao.nr_seq_metodo%type;
qt_metodos_exame_w	bigint;
dt_validade_w		timestamp := dt_validade_p;


BEGIN
	if (cd_barras_p IS NOT NULL AND cd_barras_p::text <> '') then
		ds_invalidos_p := '';
		cd_barras_w := substr(replace(cd_barras_p, '=', ''), 1, 13);

		select 	max(a.nr_sequencia)
		into STRICT	nr_seq_exame_lote_w
		from	san_exame_lote a,
			san_doacao b
		where	a.nr_seq_doacao = b.nr_sequencia
		and	obter_isbt_doador(a.nr_seq_doacao, NULL,'I')  = cd_barras_w
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_p;

		if (coalesce(nr_seq_exame_lote_w::text, '') = '') then
			ds_invalidos_p := '11=' || cd_barras_w;
			CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(793519) || ' ' || cd_barras_w, nm_usuario_p);

		else

			select	max(nr_seq_exame)
			into STRICT 	nr_seq_exame_w
			from 	san_exame_integracao
			where 	cd_exame_integracao = cd_exame_p
			and	cd_tipo_integracao = ie_tipo_integracao_p;

			if (coalesce(nr_seq_exame_w::text, '') = '') then
				ds_invalidos_p := ds_invalidos_p || '12=' || cd_exame_p || '//';
				CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(793972,
										'CD_EXAME='||cd_exame_p) || ' ' || cd_barras_w, nm_usuario_p);

			elsif (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

				if (ds_metsbs_p IS NOT NULL AND ds_metsbs_p::text <> '') then

					select	count(*)
					into STRICT	qt_metodos_exame_w
					from	san_metodo_integracao a,
						san_metodo_exame b
					where	a.nr_seq_metodo 	= b.nr_sequencia
					and	a.cd_tipo_integracao	= ie_tipo_integracao_p
					and	a.cd_metodo_integracao	= ds_metsbs_p
					and	b.ie_situacao		= 'A'
					and	exists (
						SELECT	1
						from	san_exame_metodo_util c
						where	c.nr_seq_metodo = b.nr_sequencia
						and	c.nr_seq_exame	= nr_seq_exame_w);

					if (qt_metodos_exame_w > 1) then

						CALL gravar_log_tasy(9245, obter_texto_dic_objeto(716741, wheb_usuario_pck.get_nr_seq_idioma, 'CD_METODO_INTEG=' || ds_metsbs_p), nm_usuario_p);

					elsif (qt_metodos_exame_w > 0) then

						select	max(a.nr_sequencia)
						into STRICT	nr_seq_metodo_w
						from	san_exame_metodo_util a,
							san_metodo_exame b,
							san_metodo_integracao c
						where	a.nr_seq_metodo		= b.nr_sequencia
						and	b.nr_sequencia		= c.nr_seq_metodo
						and	a.nr_seq_exame		= nr_seq_exame_w
						and	c.cd_tipo_integracao	= ie_tipo_integracao_p
						and	c.cd_metodo_integracao	= ds_metsbs_p
						and	b.ie_situacao		= 'A';

					else
						CALL gravar_log_tasy(9245, obter_texto_dic_objeto(716739, wheb_usuario_pck.get_nr_seq_idioma, 'CD_METODO_INTEG=' || ds_metsbs_p), nm_usuario_p);

					end if;

				end if;

				select	max(dt_liberacao)
				into STRICT 	dt_liberacao_w
				from	san_exame_realizado
				where 	nr_seq_exame_lote = nr_seq_exame_lote_w
				and	nr_seq_exame = nr_seq_exame_w;

				if (coalesce(nr_seq_exame_lote_w::text, '') = '') then
					ds_invalidos_p := ds_invalidos_p || '13=' || cd_exame_p || ',' || nr_seq_exame_lote_w || '//';
					CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(793521,
											'CD_EXAME='||cd_exame_p||
											';NR_SEQ_EXAME_LOTE='||nr_seq_exame_lote_w||
											';CD_BARRAS='||cd_barras_w), nm_usuario_p);
				elsif (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
					ds_invalidos_p := ds_invalidos_p || '04=' || cd_exame_p || ',' || dt_liberacao_w || '//';
					CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(793523,
											'CD_EXAME='||cd_exame_p||
											';CD_BARRAS='||cd_barras_w||
											';DT_LIBERACAO='||dt_liberacao_w), nm_usuario_p);
				else
					select	coalesce(max(a.ds_valor_tasy), ds_res_qualitativo_p)
					into STRICT	ds_res_qualitativo_w
					from	san_tabela_item_integ_imp a,
						san_tabela_integracao b
					where	a.nr_seq_tabela = b.nr_sequencia
					and	a.ds_valor_integracao = ds_res_qualitativo_p
					and	b.ie_tipo_integ_tasyger = '3'
					and	b.ie_tabela = 'RED';

					if (dt_validade_w IS NOT NULL AND dt_validade_w::text <> '') then
						dt_validade_w := pkg_date_utils.end_of(pkg_date_utils.end_of(dt_validade_w, 'MONTH'), 'DAY');
					end if;

					update	san_exame_realizado set
						ds_resultado 		= coalesce(ds_res_qualitativo_w, ds_resultado),
						ds_abs 			= coalesce(ds_res_quantitativo_p, ds_abs),
						dt_realizado 		= coalesce(dt_resultado_p, clock_timestamp()),
						dt_vencimento_lote	= dt_validade_w,
						nr_cutoff		= case when nr_cutoff_p < 1000000 then nr_cutoff_p else nr_cutoff end,
						ds_lote_kit		= substr(ds_lote_kit_p, 1, 20),
						nr_seq_metodo		= coalesce(nr_seq_metodo_w, nr_seq_metodo)
					where 	nr_seq_exame_lote = nr_seq_exame_lote_w
					and	nr_seq_exame = nr_seq_exame_w
					and	coalesce(dt_liberacao::text, '') = '';
				end if;

			end if;

		end if;

	end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_imp_result_roche ( cd_pessoa_fisica_p text, cd_barras_p text, dt_resultado_p timestamp, cd_exame_p text, cd_resultado_p text, ds_res_qualitativo_p text, ds_res_quantitativo_p text, ie_tipo_integracao_p text, nm_usuario_p text, ds_invalidos_p INOUT text, dt_validade_p timestamp, ds_lote_kit_p text, ds_metsbs_p text, nr_cutoff_p bigint) FROM PUBLIC;

