-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE item_row AS (
	nr_sequencia agenda_integrada_item.nr_sequencia%TYPE
);


CREATE OR REPLACE PROCEDURE ageint_inserir_carencia (cd_estabelecimento_lista_p text, cd_procedimento_lista_p text, dt_carencia_lista_p text, nm_usuario_p text, nr_seq_agenda_int_p text) AS $body$
DECLARE

TYPE item_table IS TABLE OF item_row INDEX BY integer;
													
cd_estabelecimento_lista_w varchar(4000);
cd_procedimento_lista_w	varchar(4000);
dt_carencia_lista_w	varchar(4000);

nr_seq_ageint_item_w ageint_cobertura_item.nr_seq_ageint_item%TYPE := NULL;
nr_seq_ageint_item_old_w ageint_cobertura_item.nr_seq_ageint_item%TYPE := 0;
cd_estabelecimento_w ageint_cobertura_item.cd_estabelecimento%TYPE;
cd_estabelecimento_old_w ageint_cobertura_item.cd_estabelecimento%TYPE := 0;
cd_procedimento_w ageint_exame_adic_item.cd_procedimento%TYPE;
cd_procedimento_old_w ageint_exame_adic_item.cd_procedimento%TYPE := 0;
dt_carencia_ww ageint_cobertura_item.dt_carencia%TYPE;
dt_carencia_w ageint_cobertura_item.dt_carencia%TYPE;
cd_estab_w ageint_cobertura_item.cd_estabelecimento%TYPE;
nr_seq_cobert_ww ageint_cobertura_item.nr_sequencia%TYPE := NULL;

dt_referencia_w timestamp := trunc(clock_timestamp());
item_t item_table;

  item_w RECORD;

BEGIN

FOR item_w IN (
    SELECT aii.nr_sequencia, aii.cd_procedimento
	FROM agenda_integrada_item aii
	WHERE aii.nr_seq_agenda_int = nr_seq_agenda_int_p
	AND (aii.cd_procedimento IS NOT NULL AND aii.cd_procedimento::text <> '')

UNION

	SELECT aii.nr_sequencia, aeai.cd_procedimento
	FROM agenda_integrada_item aii, ageint_exame_adic_item aeai
	WHERE aii.nr_sequencia = aeai.nr_seq_item
	AND aii.nr_seq_agenda_int = nr_seq_agenda_int_p
	AND (aeai.cd_procedimento IS NOT NULL AND aeai.cd_procedimento::text <> '')) LOOP
		item_t[item_w.cd_procedimento].nr_sequencia := item_w.nr_sequencia;
END LOOP;

cd_estabelecimento_lista_w := cd_estabelecimento_lista_p;
cd_procedimento_lista_w	:= cd_procedimento_lista_p;
dt_carencia_lista_w	:= dt_carencia_lista_p;

if (cd_estabelecimento_lista_p IS NOT NULL AND cd_estabelecimento_lista_p::text <> '') THEN                                    	
	WHILE (cd_estabelecimento_lista_w IS NOT NULL AND cd_estabelecimento_lista_w::text <> '') LOOP
		
		BEGIN
		
			BEGIN 
			cd_estabelecimento_w := substr(cd_estabelecimento_lista_w, 1, position(',' in cd_estabelecimento_lista_w) - 1);
			EXCEPTION
   		   		WHEN data_exception THEN
				cd_estabelecimento_w := NULL;
   			END;
		
			cd_procedimento_w := substr(cd_procedimento_lista_w, 1, position(',' in cd_procedimento_lista_w) - 1);
	
			cd_estabelecimento_lista_w := substr(cd_estabelecimento_lista_w, position(',' in cd_estabelecimento_lista_w) + 1, length(cd_estabelecimento_lista_w));
			cd_procedimento_lista_w	:= substr(cd_procedimento_lista_w, position(',' in cd_procedimento_lista_w) + 1, length(cd_procedimento_lista_w));
		
			IF (dt_carencia_lista_w IS NOT NULL AND dt_carencia_lista_w::text <> '') THEN
				dt_carencia_w := trunc(to_date(to_char(to_date(substr(dt_carencia_lista_w, 1, position(',' in dt_carencia_lista_w) - 1), 'DD/MM/YYYY'), 'YYYY-MM-DD'), 'YYYY-MM-DD'));
				dt_carencia_lista_w	:= substr(dt_carencia_lista_w, position(',' in dt_carencia_lista_w) + 1, length(dt_carencia_lista_w));
			END IF;
		
			IF (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') THEN
				
				IF (item_t.EXISTS(cd_procedimento_w)) THEN
					nr_seq_ageint_item_w := item_t[cd_procedimento_w].nr_sequencia;
				ELSE
					nr_seq_ageint_item_w := NULL;
				END IF;
			
			IF (nr_seq_ageint_item_w IS NOT NULL AND nr_seq_ageint_item_w::text <> '') THEN
					
				 IF (cd_estabelecimento_w <> cd_estabelecimento_old_w)
					OR (nr_seq_ageint_item_w <> nr_seq_ageint_item_old_w) THEN
					
					BEGIN
					
						nr_seq_ageint_item_old_w := nr_seq_ageint_item_w;
					    cd_estabelecimento_old_w := cd_estabelecimento_w;
					
						SELECT max(dt_carencia),
							   max(nr_sequencia)
						INTO STRICT   dt_carencia_ww,
							   nr_seq_cobert_ww
						FROM  ageint_cobertura_item
						WHERE nr_seq_ageint_item = nr_seq_ageint_item_w
						AND   cd_estabelecimento = cd_estabelecimento_w
						AND   trunc(dt_referencia) = dt_referencia_w;			
					EXCEPTION
						WHEN OTHERS THEN
							nr_seq_cobert_ww := NULL;
						    dt_carencia_ww := NULL;
				   END;
				 END IF;
				
					IF (coalesce(dt_carencia_ww::text, '') = '') AND (coalesce(nr_seq_cobert_ww::text, '') = '') THEN
					
						SELECT max(cd_estabelecimento)
						INTO STRICT   cd_estab_w
						FROM  estabelecimento
						WHERE cd_estabelecimento = cd_estabelecimento_w;
					
						IF (cd_estab_w IS NOT NULL AND cd_estab_w::text <> '') THEN
						
						INSERT INTO ageint_cobertura_item(nr_sequencia,
														  cd_estabelecimento,
														  nr_seq_ageint_item,
														  dt_referencia,
														  dt_carencia,
														  nm_usuario,
														  dt_atualizacao_nrec,
														  nm_usuario_nrec,
														  dt_atualizacao)
									VALUES (nextval('ageint_cobertura_item_seq'),
														  cd_estabelecimento_w,
														  nr_seq_ageint_item_w,
														  dt_referencia_w,
														  dt_carencia_w,
														  nm_usuario_p,
														  clock_timestamp(),
														  nm_usuario_p,
														  clock_timestamp());
						COMMIT;
						END IF;
				
					ELSIF (dt_carencia_w IS NOT NULL AND dt_carencia_w::text <> '') AND ((dt_carencia_ww < dt_carencia_w) OR (coalesce(dt_carencia_ww::text, '') = '')) THEN
						   UPDATE ageint_cobertura_item
						   SET dt_carencia     = dt_carencia_w,
							   nm_usuario      = nm_usuario_p,
							   dt_atualizacao  = clock_timestamp()
						   WHERE nr_seq_ageint_item = nr_seq_ageint_item_w
						   AND   cd_estabelecimento = cd_estabelecimento_w;
					COMMIT;
					END IF;
				end if;
			END IF;
		END;
	END LOOP;
END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_inserir_carencia (cd_estabelecimento_lista_p text, cd_procedimento_lista_p text, dt_carencia_lista_p text, nm_usuario_p text, nr_seq_agenda_int_p text) FROM PUBLIC;

