-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_devolucao_processo ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_processo_p bigint, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, nm_usuario_p text, nr_devolucao_p INOUT bigint) AS $body$
DECLARE

 
dt_entrada_unidade_w		timestamp;
dt_atendimento_w		timestamp;
cd_pessoa_fisica_devol_w	varchar(10) := '';
cd_unidade_medida_w		varchar(30);
cd_motivo_devolucao_w		varchar(3);
cd_setor_atendimento_w		integer;
cd_material_w			bigint;
cd_local_estoque_w		smallint;
nr_seq_lote_fornec_w		bigint;
nr_sequencia_prescricao_w	integer;
nr_sequencia_w			bigint;
nr_devolucao_w			bigint := 0;
nr_seq_atendimento_w		bigint;
qt_mat_w			double precision;
qt_material_w			double precision;

nr_atendimento_w		bigint;
nr_atendimento_ant_w		bigint := 0;
nr_prescricao_w			bigint;
nr_seq_processo_w		bigint;
nr_seq_material_w		prescr_mat_hor.nr_seq_material%type;
ds_erro_w				varchar(255);

c01 CURSOR FOR 
	SELECT	a.cd_material, 
		a.dt_atendimento, 
		a.cd_unidade_medida, 
		a.nr_sequencia_prescricao, 
		a.dt_entrada_unidade, 
		a.nr_sequencia, 
		a.cd_local_estoque, 
		sum(a.qt_material), 
		a.nr_seq_lote_fornec 
	FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and (a.nr_sequencia_prescricao = nr_seq_material_w or nr_seq_material_w = 0) and a.nr_seq_processo = nr_seq_processo_w and a.nr_atendimento = nr_atendimento_w and not exists (	SELECT	1 
				from	item_devolucao_material_pac x 
				where	x.nr_seq_processo = a.nr_seq_processo 
				and	x.nr_prescricao = a.nr_prescricao 
				and	x.nr_sequencia_prescricao = a.nr_sequencia_prescricao)   and ((a.qt_material < 0) or (a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '') or (c.ie_atualiza_estoque = 'N' AND c.ie_conta_paciente = 'S')) 
	having	sum(a.qt_material) > 0 group by a.cd_material, 
		a.dt_atendimento, 
		a.cd_unidade_medida, 
		a.nr_sequencia_prescricao, 
		a.dt_entrada_unidade, 
		a.nr_sequencia, 
		a.cd_local_estoque, 
		a.nr_seq_lote_fornec;

c02 CURSOR FOR 
	SELECT	nr_atendimento, 
		nr_prescricao, 
		nr_seq_processo, 
		nr_seq_material 
	from	w_dev_material_processo 
	where	nm_usuario = nm_usuario_p 
	group by nr_atendimento, 
		nr_prescricao, 
		nr_seq_processo, 
		nr_seq_material 
	order by nr_atendimento, 
		nr_prescricao, 
		nr_seq_processo, 
		nr_seq_material;


BEGIN 
 
cd_motivo_devolucao_w		:= coalesce(obter_valor_param_usuario(42, 15, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'0');
cd_pessoa_fisica_devol_w	:= obter_pessoa_fisica_usuario(nm_usuario_p,'C');
ds_erro_w := consiste_gerar_dev_processo(nr_atendimento_p, nr_prescricao_p, nr_seq_processo_p, cd_estabelecimento_p, cd_local_estoque_p, nm_usuario_p, ds_erro_w);
 
if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
end if;
 
if (cd_motivo_devolucao_w <> '0') then 
	 
	open c02;
	loop 
	fetch c02 into	 
		nr_atendimento_w, 
		nr_prescricao_w, 
		nr_seq_processo_w, 
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
 
		select	coalesce(cd_setor_atendimento,0) 
		into STRICT	cd_setor_atendimento_w 
		from	prescr_medica 
		where	nr_prescricao = nr_prescricao_w;
		 
		open c01;
		loop 
		fetch c01 into 
			cd_material_w, 
			dt_atendimento_w, 
			cd_unidade_medida_w, 
			nr_sequencia_prescricao_w, 
			dt_entrada_unidade_w, 
			nr_seq_atendimento_w, 
			cd_local_estoque_w, 
			qt_material_w, 
			nr_seq_lote_fornec_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			 
			if (nr_devolucao_w = 0) or (nr_atendimento_w <> nr_atendimento_ant_w) then 
				 
				select	nextval('devolucao_material_pac_seq') 
				into STRICT	nr_devolucao_w 
				;
			 
 
				insert into devolucao_material_pac( 
					nr_devolucao, 
					nr_atendimento, 
					dt_entrada_unidade, 
					dt_devolucao, 
					cd_pessoa_fisica_devol, 
					cd_setor_atendimento, 
					nm_usuario_devol, 
					dt_atualizacao, 
					nm_usuario_baixa, 
					dt_liberacao_baixa, 
					dt_baixa_total, 
					nm_usuario, 
					dt_impressao, 
					dt_entrega_fisica) 
				values (nr_devolucao_w, 
					nr_atendimento_w, 
					dt_entrada_unidade_w, 
					clock_timestamp(), 
					cd_pessoa_fisica_devol_w, 
					CASE WHEN cd_setor_atendimento_w=0 THEN null  ELSE cd_setor_atendimento_w END , 
					nm_usuario_p, 
					clock_timestamp(), 
					null, 
					null, 
					null, 
					nm_usuario_p, 
					null, 
					null);
			end if;
			 
			nr_atendimento_ant_w := nr_atendimento_w;
			 
			select	coalesce(max(nr_sequencia),0) + 1 
			into STRICT	nr_sequencia_w 
			from	item_devolucao_material_pac 
			where	nr_devolucao = nr_devolucao_w;
		 
			insert into item_devolucao_material_pac( 
				nr_devolucao, 
				nr_sequencia, 
				cd_material, 
				dt_atendimento, 
				cd_local_estoque, 
				cd_unidade_medida, 
				cd_motivo_devolucao, 
				dt_atualizacao, 
				nm_usuario_devol, 
				qt_material, 
				nr_prescricao, 
				nr_sequencia_prescricao, 
				ie_tipo_baixa_estoque, 
				dt_entrada_unidade, 
				nr_seq_atendimento, 
				nm_usuario, 
				nr_seq_processo, 
				nr_seq_lote_fornec) 
			values (	nr_devolucao_w, 
				nr_sequencia_w, 
				cd_material_w, 
				dt_atendimento_w, 
				CASE WHEN cd_local_estoque_p=0 THEN  coalesce(cd_local_estoque_w,0)   ELSE cd_local_estoque_p END , 
				cd_unidade_medida_w, 
				cd_motivo_devolucao_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				qt_material_w, 
				nr_prescricao_w, 
				nr_sequencia_prescricao_w, 
				0, 
				dt_entrada_unidade_w, 
				nr_seq_atendimento_w, 
				nm_usuario_p, 
				nr_seq_processo_w, 
				nr_seq_lote_fornec_w);
			 
			end;
		end loop;
		close c01;
		 
		end;
	end loop;
	close c02;
	 
end if;
 
delete	FROM w_dev_material_processo 
where	nm_usuario = nm_usuario_p;
 
nr_devolucao_p	:= nr_devolucao_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_devolucao_processo ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_processo_p bigint, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, nm_usuario_p text, nr_devolucao_p INOUT bigint) FROM PUBLIC;

