-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_copia_gasoterapia ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, dt_prescricao_p timestamp, nr_seq_regra_p bigint, nr_seq_material_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_gas_w			bigint;
nr_seq_gas_old_w		bigint;
nr_seq_gasoterapia_w	bigint;
dt_prev_execucao_w		timestamp;
dt_inicio_w				timestamp;
dt_final_w				timestamp;
qt_operacao_w			double precision;
dt_prescricao_w			timestamp;
ie_inicio_w				varchar(15);
ie_respiracao_w			varchar(15);
cd_modalidade_vent_w	varchar(15);
ie_disp_resp_esp_w		varchar(15);
cd_unidade_medida_w		varchar(30);
qt_gasoterapia_w		double precision;
cd_intervalo_w			varchar(7);
ie_fluxo_acm_w			varchar(1);
qt_limite_gas_min_w		double precision;
qt_limite_gas_max_w		double precision;
ds_observacao_w			varchar(2000);
ds_horarios_w			varchar(2000);
ds_horarios2_w			varchar(2000);
ie_suspenso_w			varchar(1);
ie_unidade_medida_w		varchar(15);
qt_freq_vent_w			double precision;
ie_modo_adm_w			varchar(15);
hr_inicio_setor_w		varchar(50);
nr_seq_item_rotina_w	bigint;
ie_copia_valid_igual_w	varchar(1);
dt_validade_origem_w	timestamp;
dt_validade_nova_w		timestamp;
dt_inicio_prescr_w		timestamp;
dt_prescricao_www		timestamp;
dt_primeiro_horario_w	timestamp;
nr_horas_validade_w		integer;
ie_prim_horario_setor_w	varchar(10);
ie_operacao_w			varchar(1);
hr_setor_w				varchar(10);
cd_setor_atendimento_w	bigint;
cd_estabelecimento_w	smallint;
nr_atendimento_w		bigint;
qt_vc_prog_w			double precision;
qt_pip_w				double precision;
qt_peep_w				double precision;
qt_ps_w					double precision;
qt_fluxo_insp_w			double precision;
qt_tempo_insp_w			double precision;
qt_acima_peep_w			double precision;
qt_ti_te_w				double precision;
qt_sensib_resp_w		double precision;
ie_copiar_w				varchar(1);
ie_regra_geral_w		varchar(15);
nr_seq_regra_copia_w	bigint;
ie_manter_intervalo_w	varchar(1);
nr_ocorrencia_w			bigint;

c01 CURSOR FOR 
SELECT	nr_sequencia, 
		--dt_prev_execucao, 
		ie_inicio, 
		ie_respiracao, 
		cd_modalidade_vent, 
		ie_disp_resp_esp, 
		nr_seq_gas, 
		cd_unidade_medida, 
		qt_gasoterapia, 
		cd_intervalo, 
		ie_fluxo_acm, 
		qt_limite_gas_min, 
		qt_limite_gas_max, 
		ds_observacao, 
		ie_suspenso, 
		ie_unidade_medida, 
		qt_freq_vent, 
		ie_modo_adm, 
		nr_seq_item_rotina, 
		ds_horarios, 
		qt_vc_prog, 
		qt_pip,	 
		qt_peep, 
		qt_ps, 
		qt_fluxo_insp, 
		qt_tempo_insp, 
		qt_acima_peep, 
		qt_ti_te, 
		qt_sensib_resp 
from	prescr_gasoterapia 
where	coalesce(ie_suspenso,'N')	<> 'S' 
and		nr_prescricao	= nr_prescricao_orig_p;

c02 CURSOR FOR 
SELECT	coalesce(ie_copiar, 'N'), 
		ie_regra_geral, 
		nr_sequencia, 
		coalesce(ie_manter_intervalo, 'N') 
from	rep_regra_copia_crit 
where	ie_tipo_item	= 'GAS' 
and		nr_seq_regra	= nr_seq_regra_p 
order by nr_seq_apres;


BEGIN 
 
select	max(cd_setor_atendimento), 
		coalesce(max(nr_horas_validade), 24), 
		max(dt_inicio_prescr) 
into STRICT	cd_setor_atendimento_w, 
		nr_horas_validade_w, 
		dt_inicio_prescr_w 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_p;
 
select	max(to_char(coalesce(hr_inicio_prescricao,clock_timestamp()),'hh24:mi')) 
into STRICT	hr_inicio_setor_w 
from	setor_atendimento 
where	cd_setor_atendimento = cd_setor_atendimento_w;
 
ie_copiar_w	:= 'S';
 
open c02;
loop 
fetch c02 into	 
	ie_copiar_w, 
	ie_regra_geral_w, 
	nr_seq_regra_copia_w, 
	ie_manter_intervalo_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
end loop;
close c02;
 
if (ie_copiar_w = 'S') then 
	begin 
 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_gas_old_w, 
		--dt_prev_execucao_w, 
		ie_inicio_w, 
		ie_respiracao_w, 
		cd_modalidade_vent_w, 
		ie_disp_resp_esp_w, 
		nr_seq_gas_w, 
		cd_unidade_medida_w, 
		qt_gasoterapia_w, 
		cd_intervalo_w, 
		ie_fluxo_acm_w, 
		qt_limite_gas_min_w, 
		qt_limite_gas_max_w, 
		ds_observacao_w, 
		ie_suspenso_w, 
		ie_unidade_medida_w, 
		qt_freq_vent_w, 
		ie_modo_adm_w, 
		nr_seq_item_rotina_w, 
		ds_horarios_w, 
		qt_vc_prog_w, 
		qt_pip_w,	 
		qt_peep_w, 
		qt_ps_w, 
		qt_fluxo_insp_w, 
		qt_tempo_insp_w, 
		qt_acima_peep_w, 
		qt_ti_te_w, 
		qt_sensib_resp_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
 
		dt_prev_execucao_w	:= null;
	 
		if (ie_regra_geral_w = 'H') then 
			if (ie_manter_intervalo_w = 'S') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then 
				 
				select	max(ie_operacao), 
						max(qt_operacao) 
				into STRICT	ie_operacao_w, 
						qt_operacao_w 
				from	intervalo_prescricao 
				where	cd_intervalo = cd_intervalo_w;
 
				select	max(ie_operacao), 
						max(qt_operacao) 
				into STRICT	ie_operacao_w, 
						qt_operacao_w 
				from	intervalo_prescricao 
				where	cd_intervalo = cd_intervalo_w;
				 
				dt_inicio_w := dt_inicio_prescr_w - 5;
				dt_final_w := clock_timestamp() + interval '5 days';
 
				dt_prev_execucao_w := dt_inicio_prescr_w - qt_operacao_w / 24;
 
				select	max(c.dt_horario) 
				into STRICT	dt_prev_execucao_w 
				from	prescr_gasoterapia_hor c, 
						prescr_gasoterapia b, 
						prescr_medica a 
				where	c.nr_seq_gasoterapia = b.nr_sequencia 
				and		c.nr_prescricao = b.nr_prescricao 
				--and		nvl(c.ie_situacao,'A') = 'A' 
				and		c.dt_horario >= dt_prev_execucao_w - 220/24 
				and		coalesce(b.dt_suspensao::text, '') = '' 
				and		coalesce(c.ie_horario_especial,'N') <> 'S' 
				and		b.cd_intervalo = coalesce(cd_intervalo_w, b.cd_intervalo) 
				and		coalesce(b.qt_gasoterapia,0) = coalesce(qt_gasoterapia_w, coalesce(b.qt_gasoterapia,0)) 
				and		coalesce(b.nr_seq_gas,0) = coalesce(nr_seq_gas_w,0) 
				and		b.nr_prescricao = a.nr_prescricao 
				and		coalesce(a.dt_suspensao::text, '') = '' 
				and		(coalesce(a.dt_liberacao_medico, a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico, a.dt_liberacao))::text <> '') 
				--and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
				and		a.dt_inicio_prescr between dt_inicio_w and dt_final_w 
				and		a.nr_atendimento = nr_atendimento_w;
				 
				if (coalesce(dt_prev_execucao_w::text, '') = '') then 
					select	max(dt_prev_execucao) 
					into STRICT	dt_prev_execucao_w 
					from	prescr_gasoterapia 
					where	nr_sequencia = nr_seq_gas_old_w 
					and		nr_prescricao = nr_prescricao_orig_p;
				end if;
 
				if (dt_prev_execucao_w IS NOT NULL AND dt_prev_execucao_w::text <> '') then 
					dt_prev_execucao_w := dt_prev_execucao_w + qt_operacao_w / 24;
				 
					if (coalesce(qt_operacao_w,0) > 0) then 
						 
						if (ie_operacao_w in ('H')) and (dt_prev_execucao_w not between dt_inicio_prescr_w and (dt_prev_execucao_w + qt_operacao_w)) then 
 
							while(dt_prev_execucao_w not between dt_inicio_prescr_w and (dt_prev_execucao_w + qt_operacao_w)) loop 
								dt_prev_execucao_w := dt_prev_execucao_w + qt_operacao_w/24;
							end loop;
						end if;
					end if;
				end if;
 
				nr_ocorrencia_w := 0;
				SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_inicio_prescr_w, coalesce(dt_prev_execucao_w, dt_inicio_prescr_w), nr_horas_validade_w, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', '') INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
				ds_horarios_w := ds_horarios_w || ds_horarios2_w;
			end if;
		end if;
		 
		if (coalesce(dt_prev_execucao_w::text, '') = '') then 
			begin 
			dt_prev_execucao_w	:= to_date(to_char(dt_prescricao_p,'dd/mm/yyyy ') || hr_inicio_setor_w || ':00','dd/mm/yyyy hh24:mi:ss');
			exception when others then 
			dt_prev_execucao_w	:= clock_timestamp();
			end;
		end if;
	 
		select	nextval('prescr_gasoterapia_seq') 
		into STRICT	nr_seq_gasoterapia_w 
		;
 
		insert into prescr_gasoterapia( 
			nr_sequencia, 
			nr_prescricao, 
			dt_atualizacao, 
			nm_usuario, 
			dt_prev_execucao, 
			ie_inicio, 
			ie_respiracao, 
			cd_modalidade_vent, 
			ie_disp_resp_esp, 
			nr_seq_gas, 
			cd_unidade_medida, 
			qt_gasoterapia, 
			cd_intervalo, 
			ie_fluxo_acm, 
			qt_limite_gas_min, 
			qt_limite_gas_max, 
			ds_observacao, 
			ie_suspenso, 
			ie_unidade_medida, 
			qt_freq_vent, 
			ie_modo_adm, 
			nr_seq_item_rotina, 
			nr_seq_anterior, 
			nr_prescricao_original, 
			ds_horarios, 
			qt_vc_prog, 
			qt_pip,	 
			qt_peep, 
			qt_ps, 
			qt_fluxo_insp, 
			qt_tempo_insp, 
			qt_acima_peep, 
			qt_ti_te, 
			qt_sensib_resp) 
		values (nr_seq_gasoterapia_w, 
			nr_prescricao_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			dt_prev_execucao_w, 
			ie_inicio_w, 
			ie_respiracao_w, 
			cd_modalidade_vent_w, 
			ie_disp_resp_esp_w, 
			nr_seq_gas_w, 
			cd_unidade_medida_w, 
			qt_gasoterapia_w, 
			cd_intervalo_w, 
			ie_fluxo_acm_w, 
			qt_limite_gas_min_w, 
			qt_limite_gas_max_w, 
			ds_observacao_w, 
			ie_suspenso_w, 
			ie_unidade_medida_w, 
			qt_freq_vent_w, 
			ie_modo_adm_w, 
			nr_seq_item_rotina_w, 
			nr_seq_gas_old_w, 
			nr_prescricao_orig_p, 
			ds_horarios_w, 
			qt_vc_prog_w, 
			qt_pip_w,	 
			qt_peep_w, 
			qt_ps_w, 
			qt_fluxo_insp_w, 
			qt_tempo_insp_w, 
			qt_acima_peep_w, 
			qt_ti_te_w, 
			qt_sensib_resp_w);
 
		commit;
		 
		CALL REP_copia_item_gas(nr_prescricao_orig_p, nr_prescricao_p, nr_seq_gas_old_w,nr_seq_gasoterapia_w, nr_seq_material_p, nm_usuario_p, null, nr_seq_regra_p);
		 
	end loop;
	close C01;
	end;
end if;
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_copia_gasoterapia ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, dt_prescricao_p timestamp, nr_seq_regra_p bigint, nr_seq_material_p bigint, nm_usuario_p text) FROM PUBLIC;

