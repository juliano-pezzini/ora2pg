-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_item_processo_adep (nr_seq_processo_p bigint, nr_seq_area_prep_p bigint, cd_material_original_p bigint, cd_material_p bigint, qt_material_p bigint, cd_unid_med_p text, nr_seq_lf_p bigint, ie_lanca_conta_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w		bigint;
ie_lanca_conta_w	varchar(1);
ie_baixa_estoque_w	varchar(1);
nr_seq_regra_w		bigint;
ie_regra_conta_w	varchar(1);
ie_regra_estoque_w	varchar(1);
cd_estabelecimento_w	smallint;
cd_setor_atendimento_w	integer;
cd_local_estoque_w	smallint;
cd_grupo_material_w	smallint;
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;

C01 CURSOR FOR 
SELECT	ie_lanca_conta, 
	ie_baixa_estoque, 
	nr_sequencia 
from	regra_disp_gedipa 
where	cd_estabelecimento					= cd_estabelecimento_w 
and	coalesce(cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w 
and	coalesce(cd_local_estoque,cd_local_estoque_w)		= cd_local_estoque_w 
and	((coalesce(ie_padronizado,'A') = 'A') or 
	 ((coalesce(ie_padronizado,'A') = 'S') and (obter_se_material_padronizado(cd_estabelecimento_w,cd_material_p)) = 'S') or 
	 ((coalesce(ie_padronizado,'A') = 'N') and (obter_se_material_padronizado(cd_estabelecimento_w,cd_material_p)) = 'N')) 
and	clock_timestamp() between dt_inicio_validade and coalesce(dt_fim_validade,clock_timestamp()) 
order by 
	coalesce(cd_setor_atendimento,0), 
	coalesce(cd_local_estoque,0), 
	dt_inicio_validade;
	

BEGIN 
if (nr_seq_processo_p IS NOT NULL AND nr_seq_processo_p::text <> '') and (cd_material_p IS NOT NULL AND cd_material_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	 
	select	obter_estab_atend(nr_atendimento), 
		cd_setor_atendimento, 
		cd_local_estoque 
	into STRICT	cd_estabelecimento_w, 
		cd_setor_atendimento_w, 
		cd_local_estoque_w 
	from	adep_processo 
	where	nr_sequencia = nr_seq_processo_p;
 
	open c01;
	loop 
	fetch c01 into	ie_lanca_conta_w, 
			ie_baixa_estoque_w, 
			nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin		 
		ie_lanca_conta_w	:= ie_lanca_conta_w;
		ie_baixa_estoque_w	:= ie_baixa_estoque_w;
		nr_seq_regra_w		:= nr_seq_regra_w;		
		end;
	end loop;
	close c01;
 
	select	nextval('adep_processo_item_seq') 
	into STRICT	nr_sequencia_w 
	;	
 
	insert into adep_processo_item( 
		nr_sequencia, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_processo, 
		cd_material, 
		qt_material, 
		cd_unidade_medida, 
		nr_seq_lote_fornec, 
		qt_conta, 
		cd_unidade_medida_conta, 
		qt_estoque, 
		cd_unidade_medida_estoque, 
		ie_lanca_conta, 
		ie_baixa_estoque, 
		cd_material_original, 
		ie_conta_paciente, 
		nr_seq_area_prep) 
	values ( 
		nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_processo_p, 
		cd_material_p, 
		qt_material_p, 
		cd_unid_med_p, 
		CASE WHEN nr_seq_lf_p=0 THEN  null  ELSE nr_seq_lf_p END , 
		qt_material_p, 
		cd_unid_med_p, 
		qt_material_p, 
		cd_unid_med_p, 
		CASE WHEN ie_lanca_conta_p='N' THEN  ie_lanca_conta_p  ELSE ie_lanca_conta_w END , 
		ie_baixa_estoque_w, 
		cd_material_original_p, 
		'N', 
		nr_seq_area_prep_p);
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_item_processo_adep (nr_seq_processo_p bigint, nr_seq_area_prep_p bigint, cd_material_original_p bigint, cd_material_p bigint, qt_material_p bigint, cd_unid_med_p text, nr_seq_lf_p bigint, ie_lanca_conta_p text, nm_usuario_p text) FROM PUBLIC;

