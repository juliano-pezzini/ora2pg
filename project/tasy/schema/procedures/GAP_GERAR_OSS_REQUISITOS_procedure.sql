-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gap_gerar_oss_requisitos (nr_seq_gap_p bigint, nm_usuario_p text, nr_seq_requisito_p bigint default null, nr_seq_grupo_des_p grupo_desenvolvimento.nr_sequencia%TYPE default null, ie_classificacao_p man_ordem_servico.ie_classificacao%TYPE default null, ds_descricao_p man_ordem_servico.ds_dano%TYPE default null, nr_seq_ordem_servico_p INOUT man_ordem_servico.nr_sequencia%type DEFAULT NULL) AS $body$
DECLARE


cd_requisito_w                 latam_requisito.cd_requisito%type;
ds_requisito_w                 latam_requisito.ds_requisito%type;
nr_seq_modulo_w                latam_requisito.nr_seq_modulo%type;
nr_sequencia_w                 latam_requisito.nr_sequencia%type;
cd_responsavel_w               latam_requisito.cd_responsavel%type;
cd_resp_consultor_w            latam_requisito.cd_consultor_resp%type;
cd_responsavel_ba_w            latam_requisito.cd_responsavel_ba%type;
ds_observacao_w                latam_requisito.ds_observacao%type;
ie_liberar_desenv_w            latam_requisito.ie_liberar_desenv%type;
dt_handover_w                  latam_requisito.dt_atualizacao_nrec%type;
ds_processo_w                  latam_requisito.ds_processo%type;
ds_sub_processo_w              latam_requisito.ds_sub_processo%type;
ie_situacao_req_w              latam_requisito.ie_situacao%type;

cd_requisito_agrup_w           latam_requisito.cd_requisito%type;
ds_requisito_agrup_w           latam_requisito.ds_requisito%type;
ie_liberar_desenv_old_w        latam_requisito.ie_liberar_desenv%type;

nr_seq_estagio_w               man_ordem_servico.nr_seq_estagio%type;
nr_seq_proj_cron_etapa_w       man_ordem_servico.nr_seq_proj_cron_etapa%type;
nr_seq_tipo_ordem_w            man_ordem_servico.nr_seq_tipo_ordem%type;

ds_modulo_w                    latam_cadastro_modulo.ds_modulo%type;

nm_usuario_exec_w              usuario.nm_usuario%type;
nm_usuario_consultor_w         usuario.nm_usuario%type;
nm_usuario_ba_w                usuario.nm_usuario%type;

ds_email_destino_w             usuario.ds_email%type;

const_aguardando_triagem_w     constant man_estagio_processo.nr_sequencia%type := 231;
const_aguardando_informacoes_w constant man_estagio_processo.nr_sequencia%type := 41;
const_sem_impacto_w            constant man_severidade.nr_sequencia%type := 7;
C01 CURSOR FOR
    SELECT  a.nr_sequencia,
            a.cd_requisito,
            a.ds_requisito,
            a.nr_seq_modulo,
            a.cd_responsavel,
            a.cd_consultor_resp,
            a.cd_responsavel_ba,
            coalesce(a.ds_observacao, ' ') ds_observacao,
            coalesce(a.ie_liberar_desenv,'N') ie_liberar_desenv,
            substr(obter_desc_expressao_idioma(c.cd_exp_modulo,c.ds_modulo,5),1,255) ds_modulo,
            a.vl_custo,
            a.dt_atualizacao_nrec,
            a.ds_processo,
            a.ds_sub_processo,
            a.ie_situacao
    from    latam_requisito a,
            latam_modulo b,
            latam_cadastro_modulo c
    where   a.nr_seq_modulo = b.nr_sequencia
    and     c.nr_sequencia = b.nr_seq_modulo
    and     coalesce(a.cd_requisito_agrup::text, '') = ''
    and     a.nr_seq_gap = nr_seq_gap_p
    and (coalesce(nr_seq_requisito_p::text, '') = '' or a.nr_sequencia = nr_seq_requisito_p);


BEGIN

    open C01;
    loop
    fetch C01 into
        nr_sequencia_w,
        cd_requisito_w,
        ds_requisito_w,
        nr_seq_modulo_w,
        cd_responsavel_w,
        cd_resp_consultor_w,
        cd_responsavel_ba_w,
        ds_observacao_w,
        ie_liberar_desenv_w,
        ds_modulo_w,
        nr_seq_proj_cron_etapa_w,
        dt_handover_w,
        ds_processo_w,
        ds_sub_processo_w,
        ie_situacao_req_w;
    EXIT WHEN NOT FOUND; /* apply on C01 */
        begin

    if (coalesce(cd_responsavel_ba_w::text, '') = '' or coalesce(ds_modulo_w::text, '') = '') then
      CALL wheb_mensagem_pck.exibir_mensagem_abort(obter_desc_expressao(1062392));
      exit;
    end if;

    if (ds_descricao_p IS NOT NULL AND ds_descricao_p::text <> '') then
        ds_requisito_w := ds_descricao_p;
    end if;

    select  max(nr_sequencia)
    into STRICT    nr_seq_tipo_ordem_w
    from    man_tipo_ordem_servico
    where   trim(both upper(ds_tipo)) = trim(both upper(ds_processo_w));

    select  nextval('man_ordem_servico_seq')
    into STRICT    nr_seq_ordem_servico_p
;

    insert  into man_ordem_servico(
        nr_sequencia,
        nr_seq_localizacao,
        nr_seq_equipamento,
        cd_pessoa_solicitante,
        dt_ordem_servico,
        ie_prioridade,
        ie_parado,
        ds_dano_breve,
        dt_atualizacao,
        nm_usuario,
        dt_inicio_desejado,
        dt_conclusao_desejada,
        ds_dano,
        dt_inicio_previsto,
        dt_fim_previsto,
        dt_inicio_real,
        dt_fim_real,
        ie_tipo_ordem,
        ie_status_ordem,
        nr_grupo_planej,
        nr_grupo_trabalho,
        nr_seq_tipo_solucao,
        ds_solucao,
        nm_usuario_exec,
        qt_contador,
        nr_seq_planej,
        nr_seq_tipo_contador,
        nr_seq_estagio,
        cd_projeto,
        nr_seq_etapa_proj,
        dt_reabertura,
        cd_funcao,
        nm_tabela,
        ie_classificacao,
        nr_seq_origem,
        nr_seq_projeto,
        ie_grau_satisfacao,
        nr_seq_indicador,
        nr_seq_causa_dano,
        ie_forma_receb,
        nr_seq_cliente,
        nr_seq_grupo_des,
        nr_seq_grupo_sup,
        nr_seq_superior,
        ie_eficacia,
        dt_prev_eficacia,
        cd_pf_eficacia,
        nr_seq_nao_conform,
        nr_seq_complex,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        ie_obriga_news,
        nr_seq_meta_pe,
        nr_seq_classif,
        nr_seq_nivel_valor,
        nm_usuario_lib_news,
        dt_libera_news,
        dt_envio_wheb,
        ds_contato_solicitante,
        ie_prioridade_desen,
        ie_prioridade_sup,
        ie_origem_os,
        ie_plataforma,
        nr_seq_proj_cron_etapa,
        nr_seq_tipo_ordem,
        ds_palavra_chave,
        nr_seq_severidade,
        ie_classificacao_cliente)
    values (nr_seq_ordem_servico_p,      
        41,             
        41,                 
        cd_responsavel_ba_w,            
        clock_timestamp(),                    
        'M',                    
        'N',                    
        substr(cd_requisito_w || ' - ' || ds_modulo_w,1,80),
        clock_timestamp(),                    
        nm_usuario_p,               
        clock_timestamp(),                    
        (clock_timestamp() + interval '15 days'),             
        ds_requisito_w,             
        clock_timestamp(),                
        null,
        clock_timestamp(),
        null,
        '4',
        '2',
        2,
        2,
        null,
        null,
        nm_usuario_p,
        null,
        null,
        null,
        4,
        null,
        null,
        null,
        null,
        null,
        ie_classificacao_p,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        nr_seq_grupo_des_p,
        null,
        null,
        null,
        null,
        null,
        null,
        2,
        null,
        nm_usuario_p,
        null,
        null,               
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        '4',
        'H',
        nr_seq_proj_cron_etapa_w,
        nr_seq_tipo_ordem_w,
        ds_sub_processo_w,
        const_sem_impacto_w,
        ie_classificacao_p
        );

        if (ie_situacao_req_w not in ('M')) then
            nr_seq_estagio_w := const_aguardando_triagem_w;
        elsif (ie_situacao_req_w = 'M') then
            nr_seq_estagio_w := const_aguardando_informacoes_w;
        end if;

        if (cd_responsavel_w IS NOT NULL AND cd_responsavel_w::text <> '') then
            begin
                select  max(b.nm_usuario),
                        max(b.ds_email)
                into STRICT    nm_usuario_exec_w,
                        ds_email_destino_w
                from    pessoa_fisica a,
                        usuario b
                where   a.cd_pessoa_fisica = b.cd_pessoa_fisica
                and     a.cd_pessoa_fisica = cd_responsavel_w;

                if (nm_usuario_exec_w IS NOT NULL AND nm_usuario_exec_w::text <> '') then
                    begin
                        insert into  man_ordem_servico_exec(
                                        nr_sequencia,
                                        nr_seq_ordem,
                                        dt_atualizacao,
                                        nm_usuario,
                                        nm_usuario_exec)
                                    values (
                                        nextval('man_ordem_servico_exec_seq'),
                                        nr_seq_ordem_servico_p,
                                        clock_timestamp(),
                                        nm_usuario_p,
                                        nm_usuario_exec_w);

                        insert into man_ordem_serv_tecnico(
                                        nr_sequencia,
                                        nr_seq_ordem_serv,
                                        dt_atualizacao,
                                        dt_historico,
                                        dt_liberacao,
                                        nm_usuario,
                                        nr_seq_tipo,
                                        ie_origem,
                                        ds_relat_tecnico)
                                    values (
                                        nextval('man_ordem_serv_tecnico_seq'),
                                        nr_seq_ordem_servico_p,
                                        clock_timestamp(),
                                        clock_timestamp(),
                                        clock_timestamp(),
                                        nm_usuario_exec_w,
                                        1,
                                        'I',
                                        ds_observacao_w);
                    end;
                end if;
            end;
        end if;

        if (cd_resp_consultor_w IS NOT NULL AND cd_resp_consultor_w::text <> '') then
            begin
                select  max(b.nm_usuario),
                        max(b.ds_email)
                into STRICT    nm_usuario_consultor_w,
                        ds_email_destino_w
                from    pessoa_fisica a,
                        usuario b
                where   a.cd_pessoa_fisica = b.cd_pessoa_fisica
                and     a.cd_pessoa_fisica = cd_resp_consultor_w;

                if (nm_usuario_consultor_w IS NOT NULL AND nm_usuario_consultor_w::text <> '') then                    
                    insert into  man_ordem_servico_exec(
                                    nr_sequencia,
                                    nr_seq_ordem,
                                    dt_atualizacao,
                                    nm_usuario,
                                    nm_usuario_exec)
                                values (
                                    nextval('man_ordem_servico_exec_seq'),
                                    nr_seq_ordem_servico_p,
                                    clock_timestamp(),
                                    nm_usuario_p,
                                    nm_usuario_consultor_w);
                end if;
            end;
        end if;

        if (cd_responsavel_ba_w IS NOT NULL AND cd_responsavel_ba_w::text <> '') then
            begin
                select  max(b.nm_usuario),
                        max(b.ds_email)
                into STRICT    nm_usuario_ba_w,
                        ds_email_destino_w
                from    pessoa_fisica a,
                        usuario b
                where   a.cd_pessoa_fisica = b.cd_pessoa_fisica
                and     a.cd_pessoa_fisica = cd_responsavel_ba_w;

                if (nm_usuario_ba_w IS NOT NULL AND nm_usuario_ba_w::text <> '') then
                    insert into  man_ordem_servico_exec(
                                    nr_sequencia,
                                    nr_seq_ordem,
                                    dt_atualizacao,
                                    nm_usuario,
                                    nm_usuario_exec)
                                values (
                                    nextval('man_ordem_servico_exec_seq'),
                                    nr_seq_ordem_servico_p,
                                    clock_timestamp(),
                                    nm_usuario_p,
                                    nm_usuario_ba_w);
                end if;
            end;
        end if;

        update  latam_requisito
        set nr_seq_ordem_serv = nr_seq_ordem_servico_p
        where   nr_sequencia = nr_sequencia_w;

        CALL generate_latam_log(nr_seq_requisito_p, ie_liberar_desenv_old_w, 317196);

        update  man_ordem_servico
        set     nr_seq_estagio = nr_seq_estagio_w
        where   nr_sequencia = nr_seq_ordem_servico_p;

        end;
    end loop;
    close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gap_gerar_oss_requisitos (nr_seq_gap_p bigint, nm_usuario_p text, nr_seq_requisito_p bigint default null, nr_seq_grupo_des_p grupo_desenvolvimento.nr_sequencia%TYPE default null, ie_classificacao_p man_ordem_servico.ie_classificacao%TYPE default null, ds_descricao_p man_ordem_servico.ds_dano%TYPE default null, nr_seq_ordem_servico_p INOUT man_ordem_servico.nr_sequencia%type DEFAULT NULL) FROM PUBLIC;

