-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcula_result_tp_elemento_md (ie_tipo_elemento_p text, qt_kcal_carboidrato_p bigint, qt_formula_carb_p bigint, qt_conversao_ml_p bigint, cd_unidade_medida_prod_p text, cd_obter_unid_med_usua_p text, cd_obter_unid_med_usua_g_p text, qt_kcal_proteina_p bigint, ie_glutamina_p text, qt_conversao_kcal_p bigint, qt_kcal_lipidio_p bigint, qt_elem_lipidio_p bigint, qt_formula_lipideo_p bigint, cd_unid_med_cons_p text, qt_conversao_und_ori_p bigint, qt_conversao_und_dest_p bigint, qt_kcal_p INOUT bigint, qt_diaria_p INOUT bigint, qt_vol_diaria_p INOUT bigint, qt_dose_diaria_p INOUT bigint, qt_conc_glic_solucao_p INOUT bigint, qt_grama_nitrogenio_p INOUT bigint, qt_nitrogenio_total_p INOUT bigint, qt_conc_proteina_solucao_p INOUT bigint, qt_lipidio_prop_p INOUT bigint, qt_conc_lipidio_solucao_p INOUT bigint ) AS $body$
DECLARE


exec_w                varchar(200);
qt_formula_lipideo_ww smallint;
qt_dose_conver_w      bigint;
qt_kcal_w double precision;
qt_diaria_w double precision;
qt_vol_diaria_w double precision;
qt_dose_diaria_w  double precision;
qt_conc_glic_solucao_w double precision;
qt_grama_nitrogenio_w double precision;
qt_nitrogenio_total_w double precision;
qt_conc_proteina_solucao_w double precision;
qt_lipidio_prop_w double precision;
qt_conc_lipidio_solucao_w double precision;


BEGIN

    
  if (ie_tipo_elemento_p = 'C') then
    qt_kcal_w := qt_kcal_carboidrato_p;
    qt_diaria_w := dividir_sem_round_md(qt_kcal_carboidrato_p, qt_formula_carb_p);
    qt_vol_diaria_w := qt_diaria_w * qt_conversao_ml_p;

    if upper(cd_unidade_medida_prod_p) = upper(cd_obter_unid_med_usua_p) then
      qt_dose_diaria_w	:= qt_vol_diaria_w;
    elsif (cd_unidade_medida_prod_p IS NOT NULL AND cd_unidade_medida_prod_p::text <> '') then

      begin
        EXEC_W := 'CALL OBTER_DOSE_CONVERTIDA_MD(:1,:2,:3,:4,:5,:6) INTO :RESULT';

        EXECUTE EXEC_W USING IN qt_vol_diaria_w,
                                       IN cd_obter_unid_med_usua_p,
                                       IN cd_unidade_medida_prod_p,
                                       IN cd_unid_med_cons_p,
                                       IN qt_conversao_und_ori_p,
                                       IN qt_conversao_und_dest_p,
                                       OUT qt_dose_diaria_w;
      exception
        when others then
          qt_dose_diaria_w := null;
      end;
    end if;

    
    qt_conc_glic_solucao_w := coalesce(qt_conc_glic_solucao_p,0) + coalesce(qt_diaria_w,0);
    
    qt_conc_glic_solucao_p := qt_conc_glic_solucao_w;
    qt_dose_diaria_p := qt_dose_diaria_w;
    qt_kcal_p := qt_kcal_w;
    qt_diaria_p := qt_diaria_w;
    qt_vol_diaria_p := qt_vol_diaria_w;

  elsif (ie_tipo_elemento_p = 'P') then
  
    qt_diaria_w := dividir_sem_round_md(qt_kcal_proteina_p, 4);
    qt_vol_diaria_w := qt_diaria_w * qt_conversao_ml_p;

    if upper(cd_unidade_medida_prod_p) = upper(cd_obter_unid_med_usua_p) then
      qt_dose_diaria_w	:= qt_vol_diaria_w;
    elsif (cd_unidade_medida_prod_p IS NOT NULL AND cd_unidade_medida_prod_p::text <> '') then
      begin
        EXEC_W := 'CALL OBTER_DOSE_CONVERTIDA_MD(:1,:2,:3,:4,:5,:6) INTO :RESULT';

        EXECUTE EXEC_W USING IN qt_vol_diaria_w,
                                       IN cd_obter_unid_med_usua_p,
                                       IN cd_unidade_medida_prod_p,
                                       IN cd_unid_med_cons_p,
                                       IN qt_conversao_und_ori_p,
                                       IN qt_conversao_und_dest_p,
                                       OUT qt_dose_diaria_w;
      exception
        when others then
          qt_dose_diaria_w := null;
      end;
    end if;


    if (ie_glutamina_p = 'S') then
      qt_grama_nitrogenio_w := dividir_sem_round_md(coalesce(qt_diaria_w,0), 6.25);
      qt_kcal_w := qt_diaria_w * 4;
    else
      qt_grama_nitrogenio_w := dividir_sem_round_md((qt_vol_diaria_w * 1.6),100);
      qt_kcal_w := qt_grama_nitrogenio_w * 6.25 * 4;
    end if;

    qt_nitrogenio_total_w := coalesce(qt_nitrogenio_total_p,0) + coalesce(qt_grama_nitrogenio_w,0);
    qt_conc_proteina_solucao_w := coalesce(qt_conc_proteina_solucao_p,0) + coalesce(qt_diaria_w,0);

    qt_kcal_p := qt_kcal_w;
    qt_diaria_p := qt_diaria_w;
    qt_vol_diaria_p := qt_vol_diaria_w;
    qt_grama_nitrogenio_p := qt_grama_nitrogenio_w;
    qt_nitrogenio_total_p := qt_nitrogenio_total_w;
    qt_conc_proteina_solucao_p := qt_conc_proteina_solucao_w;
    qt_dose_diaria_p := qt_dose_diaria_w;

  elsif (ie_tipo_elemento_p = 'L') then     

    if (qt_conversao_kcal_p	> 0) then
        qt_formula_lipideo_ww	:= qt_conversao_kcal_p;
      else
        qt_formula_lipideo_ww	:= qt_formula_lipideo_p;
      end if;

    qt_lipidio_prop_w	:= dividir_sem_round_md(qt_kcal_lipidio_p, qt_elem_lipidio_p);
    qt_kcal_w := qt_lipidio_prop_w;
    qt_diaria_w	:= dividir_sem_round_md(qt_lipidio_prop_w, qt_formula_lipideo_ww);
    qt_vol_diaria_w := qt_diaria_w * qt_conversao_ml_p;

    if	upper(cd_unidade_medida_prod_p) = upper(cd_obter_unid_med_usua_p) then
      qt_dose_diaria_w	:= qt_vol_diaria_w;
    elsif (cd_unidade_medida_prod_p IS NOT NULL AND cd_unidade_medida_prod_p::text <> '') then
      qt_dose_diaria_w	:= qt_diaria_w;
    end if;

    if upper(cd_unidade_medida_prod_p) = upper(cd_obter_unid_med_usua_g_p) then					
      qt_conc_lipidio_solucao_w	:=coalesce(qt_conc_lipidio_solucao_p,0) + coalesce(qt_diaria_w,0);
    else
      begin
        EXEC_W := 'CALL OBTER_DOSE_CONVERTIDA_MD(:1,:2,:3,:4,:5,:6) INTO :RESULT';

        EXECUTE EXEC_W USING IN qt_diaria_w,
                                       IN cd_obter_unid_med_usua_g_p,
                                       IN cd_unidade_medida_prod_p,
                                       IN cd_unid_med_cons_p,
                                       IN qt_conversao_und_ori_p,
                                       IN qt_conversao_und_dest_p,
                                       OUT qt_dose_conver_w;
      exception
        when others then
          qt_dose_conver_w := null;
      end;

      qt_conc_lipidio_solucao_w	:= coalesce(qt_conc_lipidio_solucao_p,0) + coalesce(qt_dose_conver_w,0);
    end if;

    qt_lipidio_prop_p := qt_lipidio_prop_w;
    qt_kcal_p :=  qt_kcal_w;
    qt_diaria_p:= qt_diaria_w;
    qt_vol_diaria_p:= qt_vol_diaria_w;
    qt_dose_diaria_p:= qt_dose_diaria_w;
    qt_conc_lipidio_solucao_p:= qt_conc_lipidio_solucao_w;

  end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcula_result_tp_elemento_md (ie_tipo_elemento_p text, qt_kcal_carboidrato_p bigint, qt_formula_carb_p bigint, qt_conversao_ml_p bigint, cd_unidade_medida_prod_p text, cd_obter_unid_med_usua_p text, cd_obter_unid_med_usua_g_p text, qt_kcal_proteina_p bigint, ie_glutamina_p text, qt_conversao_kcal_p bigint, qt_kcal_lipidio_p bigint, qt_elem_lipidio_p bigint, qt_formula_lipideo_p bigint, cd_unid_med_cons_p text, qt_conversao_und_ori_p bigint, qt_conversao_und_dest_p bigint, qt_kcal_p INOUT bigint, qt_diaria_p INOUT bigint, qt_vol_diaria_p INOUT bigint, qt_dose_diaria_p INOUT bigint, qt_conc_glic_solucao_p INOUT bigint, qt_grama_nitrogenio_p INOUT bigint, qt_nitrogenio_total_p INOUT bigint, qt_conc_proteina_solucao_p INOUT bigint, qt_lipidio_prop_p INOUT bigint, qt_conc_lipidio_solucao_p INOUT bigint ) FROM PUBLIC;

