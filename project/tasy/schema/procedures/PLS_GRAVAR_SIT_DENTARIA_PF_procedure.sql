-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gravar_sit_dentaria_pf (nr_seq_conta_p bigint, cd_pessoa_fisica_p bigint, ie_tipo_guia_p text, nm_usuario_p text) AS $body$
DECLARE

				 
qt_guia_odonto_w		smallint;
qt_pls_lote_anexo_cta_imp_w	smallint;
nr_seq_anexo_cta_imp_w		bigint;
nr_seq_anexo_odo_cta_imp_w	bigint;
cd_situacao_inicial_w		varchar(20);
cd_dente_w			varchar(20);
dt_autorizacao_w		timestamp;
ie_sinais_doenca_periodont_w	varchar(1);
ie_alter_tecido_mole_w		varchar(1);
nr_seq_fis_boca_sit_w		bigint;
nr_seq_fis_boca_situacao_w	bigint;
cd_regiao_boca_w		varchar(20);
cd_pessoa_fisica_w		bigint;
dt_situacao_final_w		bigint;
dt_atualizacao_w		timestamp;
qt_registro_w			bigint;
dt_fim_tratamento_w		timestamp;
dt_atendimento_w		timestamp;
dt_max_atendimento_w		timestamp;

C01 CURSOR FOR 
	SELECT 	nr_sequencia, 
		cd_dente, 
		cd_situacao_inicial 
	from	pls_lote_anexo_odo_cta_imp 
	where	nr_seq_anexo_cta_imp = nr_seq_anexo_cta_imp_w;
	
C02 CURSOR FOR 
	SELECT	distinct a.cd_regiao_boca 
	from	pls_conta_proc_v a 
	where	a.cd_pessoa_fisica_conta = cd_pessoa_fisica_w 
	and	a.dt_procedimento between dt_autorizacao_w and coalesce(dt_fim_tratamento_w,clock_timestamp());


BEGIN 
 
if (ie_tipo_guia_p = '11') then		 
	select	count(1) 
	into STRICT	qt_registro_w 
	from	pls_lote_anexo_cta_imp 
	where	nr_seq_conta	= nr_seq_conta_p;
	 
	if (qt_registro_w > 0) then 
		select	nr_sequencia, 
			dt_autorizacao, 
			ie_sinais_doenca_periodont, 
			ie_alter_tecido_mole, 
			dt_atualizacao 
		into STRICT	nr_seq_anexo_cta_imp_w, 
			dt_autorizacao_w, 
			ie_sinais_doenca_periodont_w, 
			ie_alter_tecido_mole_w, 
			dt_atualizacao_w 
		from	pls_lote_anexo_cta_imp 
		where	nr_seq_conta = nr_seq_conta_p;
 
		select	a.cd_pessoa_fisica_conta, 
			a.dt_atendimento, 
			a.dt_fim_tratamento 
		into STRICT	cd_pessoa_fisica_w, 
			dt_atendimento_w, 
			dt_fim_tratamento_w 
		from	pls_conta_v a 
		where	a.nr_sequencia	= nr_seq_conta_p;
		 
		select	max(dt_atendimento) 
		into STRICT	dt_max_atendimento_w 
		from	pls_conta_v 
		where	cd_pessoa_fisica_conta = cd_pessoa_fisica_w;
		 
		insert into pes_fis_boca_situacao(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_pes_fis_boca, 
				dt_inicio_vigencia, 
				dt_fim_vigencia, 
				ie_sinais_doenca_periodont, 
				ie_alter_tecido_mole) 
		values (	nextval('pes_fis_boca_situacao_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_anexo_cta_imp_w, 
				coalesce(dt_autorizacao_w,dt_atendimento_w), 
				dt_fim_tratamento_w, 
				ie_sinais_doenca_periodont_w, 
				ie_alter_tecido_mole_w) returning nr_sequencia into nr_seq_fis_boca_situacao_w;
		 
		/* Verificar a situação inicial conforme anexo de cada dente e incluir na situação*/
 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_anexo_odo_cta_imp_w, 
			cd_dente_w, 
			cd_situacao_inicial_w;			
		EXIT WHEN NOT FOUND; /* apply on C01 */
			insert into pes_fis_boca_sit_dente(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					nr_seq_pes_fis_boca_sit, 
					nr_seq_dente, 
					cd_situacao) 
			values (	nextval('pes_fis_boca_sit_dente_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_fis_boca_sit_w, 
					cd_dente_w, 
					cd_situacao_inicial_w) returning nr_sequencia into nr_seq_fis_boca_sit_w;
					 
			/* Atualizar a situação atual na boca da pessoa quando for a situação mais atual */
 
			if (dt_atendimento_w = dt_max_atendimento_w) then 
				update	pes_fis_boca_dente 
				set	cd_situacao_atual	= cd_situacao_inicial_w 
				where	nr_seq_pes_fis_boca	=	(SELECT	max(nr_sequencia) 
									from	pes_fis_boca x 
									where	x.cd_pessoa_fisica	= cd_pessoa_fisica_w) 
				and	cd_dente		= cd_dente_w;
			end if;
		end loop;
		close C01;
		 
		/* Alimentar as regiões da boca afetadas nesta situação */
 
		open C02;
		loop 
		fetch C02 into	 
			cd_regiao_boca_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			insert into pes_fis_boca_sit_regiao(nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							nr_seq_pes_fis_boca_sit, 
							cd_regiao_boca) 
			values (nextval('pes_fis_boca_sit_regiao_seq'), 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_seq_fis_boca_situacao_w, 
							cd_regiao_boca_w);
			end;
		end loop;
		close C02;
	end if;
end if;
--Não poderá conter commit pois esta procedure é chamada pela fechamento da conta; 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gravar_sit_dentaria_pf (nr_seq_conta_p bigint, cd_pessoa_fisica_p bigint, ie_tipo_guia_p text, nm_usuario_p text) FROM PUBLIC;

