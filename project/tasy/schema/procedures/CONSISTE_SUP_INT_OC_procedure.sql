-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_sup_int_oc ( nr_sequencia_p bigint, cd_estab_p bigint, cd_cgc_fornecedor_p text, cd_pessoa_fisica_p text, cd_condicao_pagamento_p bigint, cd_comprador_p text, cd_moeda_p bigint, cd_pessoa_solicitante_p text, cd_cgc_transportador_p text, ie_frete_p text, cd_local_entrega_p bigint, nr_seq_forma_pagto_p bigint, cd_centro_custo_p bigint, dt_entrega_p timestamp) AS $body$
DECLARE



cd_centro_custo_w			bigint;
qt_existe_w			bigint;
nr_item_oci_w			integer;
cd_material_w			integer;
cd_unidade_medida_compra_w	varchar(30);
cd_unidade_medida_compra_ww	varchar(30);
vl_unitario_material_w		double precision;
qt_material_w			double precision;
cd_conta_contabil_w		varchar(20);
ie_de_para_unid_med_w		varchar(15);
ie_de_para_material_w		varchar(15);
nr_seq_marca_w			sup_int_oc_item.nr_seq_marca%type;

C01 CURSOR FOR
SELECT	nr_item_oci,
	cd_material,
	cd_unidade_medida_compra,
	vl_unitario_material,
	qt_material,
	cd_centro_custo,
	cd_conta_contabil,
	nr_seq_marca
from	sup_int_oc_item
where	nr_sequencia = nr_sequencia_p;


BEGIN

delete 	from sup_int_oc_consist
where	nr_sequencia = nr_sequencia_p;

if (coalesce(dt_entrega_p::text, '') = '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313280));
end if;

if (dt_entrega_p IS NOT NULL AND dt_entrega_p::text <> '') and (trunc(dt_entrega_p,'dd') < trunc(clock_timestamp(),'dd')) then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313281));
end if;

/*Obriga informar CNPJ ou Pessoa Fisica*/

if (coalesce(cd_cgc_fornecedor_p::text, '') = '') and (coalesce(cd_pessoa_fisica_p::text, '') = '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313282));
end if;

/* Consiste Estabelecimemto */

if (coalesce(cd_estab_p::text, '') = '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313283));
end if;

select	count(*)
into STRICT	qt_existe_w
from	estabelecimento
where	cd_estabelecimento	= cd_estab_p
and	ie_situacao		= 'A';

if (qt_existe_w = 0) then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313284));
end if;

/* Consiste Fornecedor */

select	count(*)
into STRICT	qt_existe_w
from	pessoa_juridica
where	cd_cgc		= cd_cgc_fornecedor_p
and	ie_situacao	= 'A';

if (qt_existe_w = 0) and (cd_cgc_fornecedor_p IS NOT NULL AND cd_cgc_fornecedor_p::text <> '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313285));
end if;

/* Consiste Pessoa Fisica */

select	count(*)
into STRICT	qt_existe_w
from	pessoa_fisica
where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

if (qt_existe_w = 0) and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313286));
end if;

/* Consiste Condição de Pagamento */

if (coalesce(cd_condicao_pagamento_p::text, '') = '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313288));
end if;

select	count(*)
into STRICT	qt_existe_w
from	condicao_pagamento
where	cd_condicao_pagamento	= cd_condicao_pagamento_p
and	ie_situacao		= 'A';

if (qt_existe_w = 0) then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313289));
end if;

/* Consiste Comprador */

if (coalesce(cd_comprador_p::text, '') = '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313290));
end if;

select	count(*)
into STRICT	qt_existe_w
from	comprador
where	cd_pessoa_fisica	= cd_comprador_p
and	ie_situacao		= 'A'
and	cd_estabelecimento	= cd_estab_p;

if (qt_existe_w = 0) then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313291));
end if;

/* Consiste Moeda */

if (coalesce(cd_moeda_p::text, '') = '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313292));
end if;

select	count(*)
into STRICT	qt_existe_w
from	moeda
where	cd_moeda	= cd_moeda_p
and	ie_situacao	= 'A';

if (qt_existe_w = 0) then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313293));
end if;

/* Consiste Pessoa Solicitante */

if (coalesce(cd_pessoa_solicitante_p::text, '') = '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313294));
end if;

select	count(*)
into STRICT	qt_existe_w
from	pessoa_fisica
where	cd_pessoa_fisica	= cd_pessoa_solicitante_p;

if (qt_existe_w = 0) and (cd_pessoa_solicitante_p IS NOT NULL AND cd_pessoa_solicitante_p::text <> '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313295));
end if;

/* Consiste Transportador */

select	count(*)
into STRICT	qt_existe_w
from	pessoa_juridica
where	cd_cgc		= cd_cgc_transportador_p
and	ie_situacao	= 'A';

if (qt_existe_w = 0) and (cd_cgc_transportador_p IS NOT NULL AND cd_cgc_transportador_p::text <> '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313296));
end if;

/* Consiste o tipo do frete */

if	(ie_frete_p <> 'F' AND ie_frete_p <> 'C') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313297));
end if;

/* Consiste o local de entrega */

select	count(*)
into STRICT	qt_existe_w
from	local_estoque
where	cd_local_estoque	= cd_local_entrega_p
and	cd_estabelecimento	= cd_estab_p
and	ie_situacao	= 'A';

if (qt_existe_w = 0) and (cd_local_entrega_p IS NOT NULL AND cd_local_entrega_p::text <> '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313298));
end if;

/* Consiste a forma de pagamento */

select	count(*)
into STRICT	qt_existe_w
from	forma_pagamento
where	nr_sequencia		= nr_seq_forma_pagto_p
and	ie_situacao		= 'A';

if (qt_existe_w = 0) and (nr_seq_forma_pagto_p IS NOT NULL AND nr_seq_forma_pagto_p::text <> '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313299));
end if;

/* Consiste o centro de custo */

select	count(*)
into STRICT	qt_existe_w
from	centro_custo
where	cd_centro_custo		= cd_centro_custo_p
and	cd_estabelecimento		= cd_estab_p
and	ie_situacao		= 'A';

if (qt_existe_w = 0) and (cd_centro_custo_p IS NOT NULL AND cd_centro_custo_p::text <> '') then
	CALL grava_sup_int_oc_consist(
		nr_sequencia_p,
		wheb_mensagem_pck.get_texto(313300));
end if;

select	obter_ie_de_para_sup_integr('OC','R','UNIDADE_MEDIDA'),
	obter_ie_de_para_sup_integr('OC','R','MATERIAL')
into STRICT	ie_de_para_unid_med_w,
	ie_de_para_material_w
;

open C01;
loop
fetch C01 into
	nr_item_oci_w,
	cd_material_w,
	cd_unidade_medida_compra_w,
	vl_unitario_material_w,
	qt_material_w,
	cd_centro_custo_w,
	cd_conta_contabil_w,
	nr_seq_marca_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	/*Consiste caso tenha mais de um item com o mesmo NR_ITEM_OCI */

	select	count(*)
	into STRICT	qt_existe_w
	from	sup_int_oc_item
	where	nr_sequencia	= nr_sequencia_p
	and	nr_item_oci	= nr_item_oci_w;

	if (qt_existe_w > 1) then
		CALL grava_sup_int_oc_consist(
			nr_sequencia_p,
			wheb_mensagem_pck.get_texto(313301));
	end if;

	/* Consiste o material */

	if (coalesce(cd_material_w::text, '') = '') then
		CALL grava_sup_int_oc_consist(
			nr_sequencia_p,
			wheb_mensagem_pck.get_texto(313310,'CD_MATERIAL_W='||CD_MATERIAL_W));
	end if;

	/*Conversao para material*/

	if (ie_de_para_material_w = 'C') then
		cd_material_w	:= coalesce(Obter_Conversao_interna(null,'MATERIAL','CD_MATERIAL',cd_material_w),cd_material_w);
	elsif (ie_de_para_material_w = 'S') then
		cd_material_w	:= coalesce(obter_material_sistema_ant(cd_material_w),cd_material_w);
	end if;
	/*Fim*/

	select	count(*)
	into STRICT	qt_existe_w
	from	material
	where	cd_material		= cd_material_w
	and	ie_situacao		= 'A';

	if (qt_existe_w = 0) then
		CALL grava_sup_int_oc_consist(
			nr_sequencia_p,
			wheb_mensagem_pck.get_texto(313311,'CD_MATERIAL_W='||cd_material_w));
	end if;

	/*Consiste unidade de medida*/

	if (coalesce(cd_unidade_medida_compra_w::text, '') = '') then
		CALL grava_sup_int_oc_consist(
			nr_sequencia_p,
			wheb_mensagem_pck.get_texto(313312,'CD_MATERIAL_W='||cd_material_w));
	end if;

	/*Conversao para unidade de medida*/

	if (ie_de_para_unid_med_w = 'C') then
		cd_unidade_medida_compra_w	:= coalesce(Obter_Conversao_interna(null,'UNIDADE_MEDIDA','CD_UNIDADE_MEDIDA',cd_unidade_medida_compra_w),cd_unidade_medida_compra_w);
	elsif (ie_de_para_unid_med_w = 'S') then
		cd_unidade_medida_compra_w	:= coalesce(obter_unid_med_sist_ant(cd_unidade_medida_compra_w),cd_unidade_medida_compra_w);
	end if;
	/*Fim*/

	select	count(*)
	into STRICT	qt_existe_w
	from	unidade_medida
	where	cd_unidade_medida	= cd_unidade_medida_compra_w
	and	ie_situacao		= 'A';

	if (qt_existe_w = 0) then
		CALL grava_sup_int_oc_consist(
			nr_sequencia_p,
			wheb_mensagem_pck.get_texto(313314,'CD_MATERIAL_W='||cd_material_w));
	end if;

	/*Consiste se a unidade de medida de compra for diferente do que está cadastrado no Tasy*/

	select	count(*)
	into STRICT	qt_existe_w
	from	material
	where	cd_material		= cd_material_w
	and	cd_unidade_medida_compra	= cd_unidade_medida_compra_w;

	if (qt_existe_w = 0) then
		CALL grava_sup_int_oc_consist(
			nr_sequencia_p,
			wheb_mensagem_pck.get_texto(313315,'CD_MATERIAL_W='||cd_material_w));
	end if;

	/* Consiste o valor zero*/

	if (coalesce(vl_unitario_material_w,0) = 0) then
		CALL grava_sup_int_oc_consist(
			nr_sequencia_p,
			wheb_mensagem_pck.get_texto(313317,'CD_MATERIAL_W='||cd_material_w));
	end if;

	/*Consiste a quantidade zero*/

	if (coalesce(qt_material_w,0) = 0) then
		CALL grava_sup_int_oc_consist(
			nr_sequencia_p,
			wheb_mensagem_pck.get_texto(313318,'CD_MATERIAL_W='||cd_material_w));
	end if;

	/* Consiste o centro de custo */

	select	count(*)
	into STRICT	qt_existe_w
	from	centro_custo
	where	cd_centro_custo		= cd_centro_custo_w
	and	cd_estabelecimento		= cd_estab_p
	and	ie_situacao		= 'A';

	if (qt_existe_w = 0) and (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') then
		CALL grava_sup_int_oc_consist(
			nr_sequencia_p,
			wheb_mensagem_pck.get_texto(313319,'CD_MATERIAL_W='||cd_material_w));
	end if;

	/* Consiste o conta contabil */

	select	count(*)
	into STRICT	qt_existe_w
	from	conta_contabil
	where	cd_conta_contabil	= cd_conta_contabil_w
	and	ie_situacao	= 'A';

	if (qt_existe_w = 0) and (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then
		CALL grava_sup_int_oc_consist(
			nr_sequencia_p,
			wheb_mensagem_pck.get_texto(313320,'CD_MATERIAL_W='||cd_material_w));
	end if;

	/* Consiste a marca */

	select	count(*)
	into STRICT	qt_existe_w
	from	marca
	where	cd_sistema_ant = to_char(nr_seq_marca_w);

	if (qt_existe_w = 0) and (nr_seq_marca_w IS NOT NULL AND nr_seq_marca_w::text <> '') then
		CALL grava_sup_int_oc_consist(nr_sequencia_p, wheb_mensagem_pck.get_texto(729736, 'DS_MARCA_W='||nr_seq_marca_w||';CD_MATERIAL_W='||cd_material_w));
	end if;
	end;

end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_sup_int_oc ( nr_sequencia_p bigint, cd_estab_p bigint, cd_cgc_fornecedor_p text, cd_pessoa_fisica_p text, cd_condicao_pagamento_p bigint, cd_comprador_p text, cd_moeda_p bigint, cd_pessoa_solicitante_p text, cd_cgc_transportador_p text, ie_frete_p text, cd_local_entrega_p bigint, nr_seq_forma_pagto_p bigint, cd_centro_custo_p bigint, dt_entrega_p timestamp) FROM PUBLIC;

