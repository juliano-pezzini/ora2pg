-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verifica_regra_acesso_serv ( nr_seq_grupo_p pls_preco_grupo_servico.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Verificar se o usuário tem liberação para editar grupo de serviço 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ x] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
------------------------------------------------------------------------------------------------------------------- 
Pontos de atenção: 
 
Alterações: 
------------------------------------------------------------------------------------------------------------------- 
 
------------------------------------------------------------------------------------------------------------------- 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
qtd_regras_w		bigint;
qtd_grupo_regra_w	bigint;
nr_verifica_regra_w	bigint;

C01 CURSOR FOR 
	SELECT	ie_tipo_tabela 
	from	pls_regra_preco_proc 
	where	nr_seq_grupo_servico = nr_seq_grupo_p;

BEGIN 
 
--VERIFICA SE POSSUI REGRA CADASTRADA 
select	count(1) 
into STRICT	qtd_regras_w 
from	pls_regra_acesso_gp_serv;
 
--CASO POSSUA REGRA CADASTRADA, VERIFICA SE O GRUPO DE SERVIÇO POSSUI ALGUMA REGRA ATRELADA 
if (coalesce(qtd_regras_w,0) > 0) then 
	select 	count(1) 
	into STRICT	qtd_grupo_regra_w 
	from 	pls_regra_preco_proc 
	where	nr_seq_grupo_servico = nr_seq_grupo_p;
	 
	--CASO POSSUA REGRA PARA O GRUPO AUDITOR, VERIFICA SE O USUARIO POSSUI AUTORIZAÇÃO POR TIPO DE TABELA 
	if (coalesce(qtd_grupo_regra_w,0) > 0) then	 
		for r_C01_w in C01 loop 
			--PRESTADOR 
			if (r_C01_w.ie_tipo_tabela = 'P') then 
				select	count(1) 
				into STRICT	nr_verifica_regra_w 
				from 	pls_regra_acesso_gp_serv a 
				where (a.ie_regra_prestador = 'S') or (coalesce(a.ie_regra_prestador::text, '') = '') 
				and	exists (	SELECT	1 
						from	pls_membro_gp_acesso_serv b 
						where	a.nr_sequencia	= b.nr_seq_regra_acesso 
						and	b.nm_usuario_exec 	= nm_usuario_p);
						 
				if (coalesce(nr_verifica_regra_w,0) = 0) then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(355083); --USUÁRIO NÃO POSSUI AUTORIZAÇÃO PARA ALTERAR O GRUPO DE SERVIÇO. 
				end if;
			--REEMBOLSO			 
			elsif (r_C01_w.ie_tipo_tabela = 'R') then 
				select	count(1) 
				into STRICT	nr_verifica_regra_w 
				from 	pls_regra_acesso_gp_serv a 
				where (a.ie_regra_reembolso = 'S') or (coalesce(a.ie_regra_reembolso::text, '') = '') 
				and	exists (	SELECT	1 
						from	pls_membro_gp_acesso_serv b 
						where	a.nr_sequencia	= b.nr_seq_regra_acesso 
						and	b.nm_usuario_exec 	= nm_usuario_p);
						 
				if (coalesce(nr_verifica_regra_w,0) = 0) then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(355083); --USUÁRIO NÃO POSSUI AUTORIZAÇÃO PARA ALTERAR O GRUPO DE SERVIÇO. 
				end if;
			--FATURA			 
			elsif (r_C01_w.ie_tipo_tabela = 'O') then 
				select	count(1) 
				into STRICT	nr_verifica_regra_w 
				from 	pls_regra_acesso_gp_serv a 
				where (a.ie_regra_fatura = 'S') or (coalesce(a.ie_regra_fatura::text, '') = '') 
				and	exists (	SELECT	1 
						from	pls_membro_gp_acesso_serv b 
						where	a.nr_sequencia	= b.nr_seq_regra_acesso 
						and	b.nm_usuario_exec 	= nm_usuario_p);
						 
				if (coalesce(nr_verifica_regra_w,0) = 0) then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(355083); --USUÁRIO NÃO POSSUI AUTORIZAÇÃO PARA ALTERAR O GRUPO DE SERVIÇO. 
				end if;
			--COPARTICIPAÇÃO			 
			elsif (r_C01_w.ie_tipo_tabela = 'CO') then 
				select	count(1) 
				into STRICT	nr_verifica_regra_w 
				from 	pls_regra_acesso_gp_serv a 
				where (a.ie_regra_coparticipacao = 'S') or (coalesce(a.ie_regra_coparticipacao::text, '') = '') 
				and	exists (	SELECT	1 
						from	pls_membro_gp_acesso_serv b 
						where	a.nr_sequencia	= b.nr_seq_regra_acesso 
						and	b.nm_usuario_exec 	= nm_usuario_p);
						 
				if (coalesce(nr_verifica_regra_w,0) = 0) then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(355083); --USUÁRIO NÃO POSSUI AUTORIZAÇÃO PARA ALTERAR O GRUPO DE SERVIÇO. 
				end if;
			--AUTORIZAÇÃO			 
			elsif (r_C01_w.ie_tipo_tabela = 'A') then 
				select	count(1) 
				into STRICT	nr_verifica_regra_w 
				from 	pls_regra_acesso_gp_serv a 
				where (a.ie_regra_autorizacao = 'S') or (coalesce(a.ie_regra_autorizacao::text, '') = '') 
				and	exists (	SELECT	1 
						from	pls_membro_gp_acesso_serv b 
						where	a.nr_sequencia	= b.nr_seq_regra_acesso 
						and	b.nm_usuario_exec 	= nm_usuario_p);
						 
				if (coalesce(nr_verifica_regra_w,0) = 0) then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(355083); --USUÁRIO NÃO POSSUI AUTORIZAÇÃO PARA ALTERAR O GRUPO DE SERVIÇO. 
				end if;
			--FRANQUIA			 
			elsif (r_C01_w.ie_tipo_tabela = 'F') then 
				select	count(1) 
				into STRICT	nr_verifica_regra_w 
				from 	pls_regra_acesso_gp_serv a 
				where (a.ie_regra_franquia = 'S') or (coalesce(a.ie_regra_franquia::text, '') = '') 
				and	exists (	SELECT	1 
						from	pls_membro_gp_acesso_serv b 
						where	a.nr_sequencia		= b.nr_seq_regra_acesso 
						and	b.nm_usuario_exec 	= nm_usuario_p);
						 
				if (coalesce(nr_verifica_regra_w,0) = 0) then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(355083); --USUÁRIO NÃO POSSUI AUTORIZAÇÃO PARA ALTERAR O GRUPO DE SERVIÇO. 
				end if;
			--INTERCÂMBIO			 
			elsif (r_C01_w.ie_tipo_tabela in ('I','IP','IC')) then 
				select	count(1) 
				into STRICT	nr_verifica_regra_w 
				from 	pls_regra_acesso_gp_serv a 
				where (a.ie_regra_intercambio = 'S') or (coalesce(a.ie_regra_intercambio::text, '') = '') 
				and	exists (	SELECT	1 
						from	pls_membro_gp_acesso_serv b 
						where	a.nr_sequencia	= b.nr_seq_regra_acesso 
						and	b.nm_usuario_exec 	= nm_usuario_p);
						 
				if (coalesce(nr_verifica_regra_w,0) = 0) then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(355083); --USUÁRIO NÃO POSSUI AUTORIZAÇÃO PARA ALTERAR O GRUPO DE SERVIÇO. 
				end if;
			end if;							
		end loop;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verifica_regra_acesso_serv ( nr_seq_grupo_p pls_preco_grupo_servico.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

