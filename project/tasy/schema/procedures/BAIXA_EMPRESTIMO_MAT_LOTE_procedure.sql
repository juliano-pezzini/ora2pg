-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_emprestimo_mat_lote ( nr_emprestimo_p bigint, nr_sequencia_p bigint, cd_material_p bigint, qt_material_p bigint, ds_lote_fornec_p text, dt_validade_p timestamp, cd_cgc_p text, nm_usuario_p text, nr_seq_marca_p bigint) AS $body$
DECLARE


ie_tipo_w			varchar(1);
nr_seq_lote_w		bigint;
cd_estabelecimento_w	integer;
nr_seq_dev_w		integer;
cd_local_estoque_w	smallint;
cd_material_estoque_w	integer;
ie_estoque_lote_w 	material_estab.ie_estoque_lote%type;


BEGIN

select	cd_estabelecimento,
	cd_local_estoque
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w
from	emprestimo
where	nr_emprestimo	= nr_emprestimo_p;


select	substr(obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material_p),1,1)
into STRICT	ie_estoque_lote_w
;

/*Gera o lote de fornecedor do lote recebido*/

select	nextval('material_lote_fornec_seq')
into STRICT	nr_seq_lote_w
;

insert into material_lote_fornec(
	nr_sequencia,
	cd_material,
	nr_digito_verif,
	dt_atualizacao,
	nm_usuario,
	ds_lote_fornec,
	dt_validade,
	cd_cgc_fornec,
	qt_material,
	cd_estabelecimento,
	ie_validade_indeterminada,
	ie_situacao,
	ie_origem_lote,
	nr_seq_marca,
	ds_observacao,
	nr_emprestimo)
values (nr_seq_lote_w,
	cd_material_p,
	calcula_digito('Modulo11', nr_seq_lote_w),
	clock_timestamp(),
	nm_usuario_p,
	ds_lote_fornec_p,
	dt_validade_p,
	cd_cgc_p,
	qt_material_p,
	cd_estabelecimento_w,
	'N',
	'A',
	'E',
	nr_seq_marca_p,
	wheb_mensagem_pck.get_texto(303519, 'NR_EMPRESTIMO_P=' || nr_emprestimo_p),
	null); -- Gerado pelo emprestimo: #@NR_EMPRESTIMO_P#@

/*Faz o registro da baixa tambem vinculando com a sequencia do lote gerado*/

select	coalesce(max(nr_seq_dev),0) + 1
into STRICT	nr_seq_dev_w
from	emprestimo_material_dev
where	nr_emprestimo	= nr_emprestimo_p
and	nr_sequencia	= nr_sequencia_p;

insert into emprestimo_material_dev(
	nr_emprestimo,
	nr_sequencia,
	nr_seq_dev,
	cd_material,
	qt_material,
	dt_atualizacao,
	nm_usuario,
	ds_lote_fornec,
	dt_validade,
	nr_seq_lote,
	ds_observacao,
	nr_seq_marca)
values (nr_emprestimo_p,
	nr_sequencia_p,
	nr_seq_dev_w,
	cd_material_p,
	qt_material_p,
	clock_timestamp(),
	nm_usuario_p,
	ds_lote_fornec_p,
	dt_validade_p,
	nr_seq_lote_w,
	wheb_mensagem_pck.get_texto(303520),
	nr_seq_marca_p);

/*Atualiza o saldo do emprestimo*/

update	emprestimo_material
set	qt_material	= (qt_material - qt_material_p)
where	nr_emprestimo	= nr_emprestimo_p
and	nr_sequencia	= nr_sequencia_p;

select	cd_material_estoque
into STRICT	cd_material_estoque_w
from	material
where	cd_material = cd_material_p;

if (ie_estoque_lote_w = 'S') then
/*Gera o saldo de estoque para o lote gerado acima*/

	insert into saldo_estoque_lote(
		cd_estabelecimento,
		cd_local_estoque,
		cd_material,
		dt_mesano_referencia,
		nr_seq_lote,
		qt_estoque,
		dt_atualizacao,
		nm_usuario)
	values (cd_estabelecimento_w,
		cd_local_estoque_w,
		cd_material_estoque_w,
		trunc(clock_timestamp(),'mm'),
		nr_seq_lote_w,
		qt_material_p,
		clock_timestamp(),
		nm_usuario_p);
end if;	

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_emprestimo_mat_lote ( nr_emprestimo_p bigint, nr_sequencia_p bigint, cd_material_p bigint, qt_material_p bigint, ds_lote_fornec_p text, dt_validade_p timestamp, cd_cgc_p text, nm_usuario_p text, nr_seq_marca_p bigint) FROM PUBLIC;

