-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_fpo_resultados (dt_competencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


dt_competencia_w	timestamp;
qt_resultado_fisico_w	double precision;
vl_resul_orcamento_w	double precision;
qt_result_fisico_prot_w	double precision;
vl_resul_orc_prot_w	double precision;
vl_saldo_fisico_w	double precision;
vl_saldo_orcament_w	double precision;
qt_protocolo_w		double precision;
qt_execucao_w		double precision;
vl_protocolo_w		double precision;
vl_execucao_w		double precision;
vl_protocolo_cnes_w	double precision;
vl_execucao_cnes_w	double precision;

c_resultado CURSOR(dt_competencia_pc	timestamp) FOR
	SELECT	a.nr_sequencia nr_sequencia,
		a.qt_fisico,
		a.vl_orcamento
	from	sus_fpo_regra a
	where	trunc(dt_competencia,'dd') = dt_competencia_pc;

c_limite_aih CURSOR(dt_competencia_pc	timestamp) FOR
	SELECT	a.nr_sequencia nr_sequencia
	from	sus_limite_aih_comp a
	where	trunc(dt_competencia,'dd') = dt_competencia_pc;
BEGIN

dt_competencia_w	:= trunc(dt_competencia_p,'dd');

for r_c_resultado in c_resultado(dt_competencia_w) loop

qt_resultado_fisico_w	:= sus_obter_resultado_fpo(r_c_resultado.nr_sequencia,1,'E');
vl_resul_orcamento_w	:= sus_obter_resultado_fpo(r_c_resultado.nr_sequencia,2,'E');
qt_result_fisico_prot_w	:= sus_obter_resultado_fpo(r_c_resultado.nr_sequencia,1,'P');
vl_resul_orc_prot_w	:= sus_obter_resultado_fpo(r_c_resultado.nr_sequencia,2,'P');
vl_saldo_fisico_w	:= (r_c_resultado.qt_fisico - sus_obter_resultado_fpo(r_c_resultado.nr_sequencia,1,'E'));
vl_saldo_orcament_w	:= (r_c_resultado.vl_orcamento - sus_obter_resultado_fpo(r_c_resultado.nr_sequencia,2,'E'));

insert	into	w_resultado_fpo_aih(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_fpo_regra,
				qt_resultado_fisico,
				vl_resul_orcamento,
				qt_result_fisico_prot,
				vl_resul_orc_prot,
				vl_saldo_fisico,
				vl_saldo_orcament)
values (		nextval('w_resultado_fpo_aih_seq'),
				clock_timestamp(),
				nm_usuario_p,
				r_c_resultado.nr_sequencia,
				qt_resultado_fisico_w,
				vl_resul_orcamento_w,
				qt_result_fisico_prot_w,
				vl_resul_orc_prot_w,
				vl_saldo_fisico_w,
				vl_saldo_orcament_w);

end loop;

for r_c_limite_aih in c_limite_aih(dt_competencia_w) loop

qt_protocolo_w		:= sus_obter_aih_regra(r_c_limite_aih.nr_sequencia,'P','Q');
qt_execucao_w		:= sus_obter_aih_regra(r_c_limite_aih.nr_sequencia,'E','Q');
vl_protocolo_w		:= sus_obter_aih_regra(r_c_limite_aih.nr_sequencia,'P','V');
vl_execucao_w		:= sus_obter_aih_regra(r_c_limite_aih.nr_sequencia,'E','V');
vl_protocolo_cnes_w	:= sus_obter_aih_regra_cnes(r_c_limite_aih.nr_sequencia,'P','V');
vl_execucao_cnes_w	:= sus_obter_aih_regra_cnes(r_c_limite_aih.nr_sequencia,'E','V');

insert	into	w_resultado_fpo_aih(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_lim_aih_comp,
				qt_protocolo,
				qt_execucao,
				vl_protocolo,
				vl_execucao,
				vl_protocolo_cnes,
				vl_execucao_cnes)
values (		nextval('w_resultado_fpo_aih_seq'),
				clock_timestamp(),
				nm_usuario_p,
				r_c_limite_aih.nr_sequencia,
				qt_protocolo_w,
				qt_execucao_w,
				vl_protocolo_w,
				vl_execucao_w,
				vl_protocolo_cnes_w,
				vl_execucao_cnes_w);
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_fpo_resultados (dt_competencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

