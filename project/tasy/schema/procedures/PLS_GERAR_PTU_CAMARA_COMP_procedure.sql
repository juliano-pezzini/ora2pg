-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ptu_camara_comp ( nr_seq_lote_camara_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_ptu_camara_p INOUT bigint) AS $body$
DECLARE


nr_seq_ptu_camara_w		bigint;
dt_saldo_credor_w		timestamp;
cd_unimed_origem_w		varchar(20);
cd_unimed_destino_w		varchar(20);
cd_unimed_superior_w		varchar(20);
dt_lote_w			timestamp;
ie_tipo_camara_w		varchar(5);
nr_versao_transacao_w		smallint;
nr_fatura_w			ptu_camara_fatura.nr_fatura%type;
nr_documento_w			ptu_camara_fatura.nr_documento%type;
ie_tipo_fatura_w		varchar(5);
cd_unimed_devedora_w		varchar(20);
vl_total_fatura_w		double precision;
nr_seq_camara_w			bigint;
nr_seq_periodo_w		bigint;
nr_seq_congenere_w		bigint;
ie_tipo_w			varchar(20);
cd_cgc_w			varchar(14);
ie_origem_titulo_w		varchar(10);
nr_seq_pls_fatura_w		bigint;
ie_pcmso_w			varchar(1) := 'N';
ie_classif_cobranca_w		varchar(1) := '3';

c01 CURSOR FOR
	SELECT	a.nr_titulo_receber,
		b.vl_saldo_titulo
	from	titulo_receber b,
		pls_titulo_lote_camara a
	where	a.nr_titulo_receber	= b.nr_titulo
	and	a.nr_seq_lote_camara	= nr_seq_lote_camara_p;


BEGIN

if (nr_seq_lote_camara_p IS NOT NULL AND nr_seq_lote_camara_p::text <> '') and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_ptu_camara_w
	from	ptu_camara_compensacao a
	where	a.nr_seq_lote_camara	= nr_seq_lote_camara_p;

	if (coalesce(nr_seq_ptu_camara_w::text, '') = '') then

		-- Se não achou, Gerar lote
		select	nextval('ptu_camara_compensacao_seq')
		into STRICT	nr_seq_ptu_camara_w
		;

		select	pls_obter_unimed_estab(cd_estabelecimento_p)
		into STRICT	cd_unimed_origem_w
		;

		select	a.dt_lote,
			a.nr_seq_camara,
			a.nr_seq_periodo
		into STRICT	dt_lote_w,
			nr_seq_camara_w,
			nr_seq_periodo_w
		from	pls_lote_camara_comp a
		where	a.nr_sequencia	= nr_seq_lote_camara_p;

		select	coalesce(max(a.DT_LIMITE_A600),clock_timestamp())
		into STRICT	dt_saldo_credor_w
		from	pls_camara_calend_periodo a
		where	a.nr_sequencia	= nr_seq_periodo_w;

		-- Unimed destino precisa obter  unimed responsável pela câmara
		select	b.cd_cooperativa,
			a.ie_tipo_camara
		into STRICT	cd_unimed_destino_w,
			ie_tipo_camara_w
		from	pls_congenere b,
			pls_camara_compensacao a
		where	a.nr_seq_coop_resp	= b.nr_sequencia
		and	a.nr_sequencia		= nr_seq_camara_w;

		if (coalesce(cd_unimed_origem_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(457707);
		end if;

		insert into ptu_camara_compensacao(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			dt_geracao,
			dt_camara,
			ie_tipo_camara,
			nr_versao_transacao,
			nr_seq_lote_camara,
			cd_unimed_origem,
			cd_unimed_destino)
		values (nr_seq_ptu_camara_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			clock_timestamp(),
			dt_saldo_credor_w,
			ie_tipo_camara_w,
			4,
			nr_seq_lote_camara_p,
			cd_unimed_origem_w,
			cd_unimed_destino_w);

		-- Gerar faturas
		open c01;
		loop
		fetch c01 into
			nr_fatura_w,
			vl_total_fatura_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ie_tipo_w		:= null;
			cd_unimed_superior_w	:= null;
			nr_documento_w		:= nr_fatura_w;

			select	max(b.cd_cooperativa),
				max(b.cd_cgc),
				max(a.ie_origem_titulo)
			into STRICT	cd_unimed_devedora_w,
				cd_cgc_w,
				ie_origem_titulo_w
			from	pls_congenere b,
				titulo_receber a
			where	a.cd_cgc	= b.cd_cgc
			and	a.nr_titulo	= nr_fatura_w;

			if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
				select	max(a.ie_tipo),
					max(x.nr_seq_congenere)
				into STRICT	ie_tipo_w,
					nr_seq_congenere_w
				from	pls_congenere  x,
					pls_tipo_cooperativa a
				where	a.nr_sequencia		= x.nr_seq_tipo_coop
				and	x.cd_cgc		= cd_cgc_w
				and	x.ie_tipo_congenere	= 'CO';
			end if;

			if (ie_tipo_w = 'E') and (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
				select	(pls_obter_seq_codigo_coop( nr_seq_congenere_w, null))::numeric
				into STRICT	cd_unimed_superior_w
				;
			end if;

			ie_tipo_fatura_w := 1; -- 1 Pré-Pagamento
			if (ie_origem_titulo_w = '11') then -- Contestação
				ie_tipo_fatura_w := 3; -- 3 Contestação/Glosa
			elsif (ie_origem_titulo_w = '13') then -- Faturamento
				ie_tipo_fatura_w := 2; -- 2 Custo Operacional
				select	max(nr_sequencia)
				into STRICT	nr_seq_pls_fatura_w
				from	pls_fatura
				where	nr_titulo = nr_fatura_w;

				if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
					select	max(ie_pcmso),
						max(nr_fatura)
					into STRICT	ie_pcmso_w,
						nr_documento_w
					from	ptu_fatura
					where	nr_seq_pls_fatura = nr_seq_pls_fatura_w;

					if (coalesce(ie_pcmso_w,'N') = 'S') then
						ie_tipo_fatura_w := 5; -- 5 Fatura PCMSO
					end if;
				else
					select	max(nr_sequencia)
					into STRICT	nr_seq_pls_fatura_w
					from	pls_fatura
					where	nr_titulo_ndc = nr_fatura_w;

					if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
						select	max(ie_classif_cobranca),
							max(nr_fatura)
						into STRICT	ie_classif_cobranca_w,
							nr_documento_w
						from	ptu_fatura
						where	nr_seq_pls_fatura = nr_seq_pls_fatura_w;

						if (coalesce(ie_classif_cobranca_w,'3') = '1') then
							ie_tipo_fatura_w := 7; -- 7 NDR de Reembolso
						end if;
					end if;
				end if;

			elsif (ie_origem_titulo_w = '9') then -- Outros
				ie_tipo_fatura_w := 4; -- 4 Outros
			end if;

			if (cd_unimed_devedora_w IS NOT NULL AND cd_unimed_devedora_w::text <> '') then
				insert into ptu_camara_fatura(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_camara,
					ie_tipo_fatura,
					nr_fatura,
					cd_unimed_credora,
					cd_unimed_devedora,
					cd_unimed_superior,
					vl_total_fatura,
					nr_documento)
				values (nextval('ptu_camara_fatura_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_ptu_camara_w,
					ie_tipo_fatura_w,
					nr_fatura_w,
					cd_unimed_origem_w,
					cd_unimed_devedora_w,
					cd_unimed_superior_w,
					vl_total_fatura_w,
					nr_documento_w);
			end if;
			end;
		end loop;
		close c01;

		commit;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(257400,'NR_SEQ_PTU_CAMARA=' || nr_seq_ptu_camara_w);
	end if;
	nr_seq_ptu_camara_p	:= nr_seq_ptu_camara_w;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ptu_camara_comp ( nr_seq_lote_camara_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_ptu_camara_p INOUT bigint) FROM PUBLIC;

