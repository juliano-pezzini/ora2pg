-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_preco_material ( cd_estabelecimento_p bigint, cd_grupo_mat_p bigint, cd_subgrupo_mat_p bigint, cd_classe_mat_p bigint, dt_vigencia_p timestamp, dt_base_preco_p timestamp, ds_filtro_p text, ie_unidade_consumo_p text, ie_saldo_estoque_p text, ie_curva_abc_p text, ie_tipo_material_p text, cd_material_p text, cd_setor_atendimento_p bigint, ie_utilizados_p text) AS $body$
DECLARE

cd_material_w			integer;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
vl_material_w			double precision;
pr_margem_w			double precision;
pr_margem_cm_w			double precision;
dt_vigencia_w			timestamp;
cd_tab_peco_mat_w 		smallint;
ie_origem_preco_w		smallint;
vl_preco_ult_compra_w		double precision;
vl_custo_medio_w			double precision;
Ignore				integer;
ie_coluna_w			integer;
ie_situacao_w			varchar(1);
qt_conv_estoque_consumo_w	double precision;
cd_material_estoque_w		bigint;
C01				integer;
cd_mat_w			bigint;
qt_mat_w			bigint;
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
nr_seq_ajuste_mat_w		bigint;

c02 CURSOR FOR 
	SELECT 	cd_material 
	from	estrutura_material_v 
	where	coalesce(cd_grupo_mat_p, cd_grupo_material)	= cd_grupo_material 
	and	coalesce(cd_subgrupo_mat_p, cd_subgrupo_material) 	= cd_subgrupo_material 
	and	coalesce(cd_classe_mat_p, cd_classe_material)	= cd_classe_material 
	and	ie_situacao 				= 'A' 
	and (substr(obter_curva_abc_estab(cd_estabelecimento_p, cd_material, 'N', dt_vigencia_p),1,1) = ie_curva_abc_p or ie_curva_abc_p = 'T')	 
	and	(((ie_saldo_estoque_p	= 'C') and (Obter_Saldo_Disp_Estoque(cd_estabelecimento_p,cd_material,null,clock_timestamp()) >0)) or 
		((ie_saldo_estoque_p	= 'S') and (Obter_Saldo_Disp_Estoque(cd_estabelecimento_p,cd_material,null,clock_timestamp()) =0)) or (ie_saldo_estoque_p	= 'A'))	 
	and (Obter_Dados_Material(cd_material,'TIP') = ie_tipo_material_p or ie_tipo_material_p = '0') 
	and	((coalesce(cd_material_p::text, '') = '') or ((cd_material_p IS NOT NULL AND cd_material_p::text <> '') and (obter_se_contido(cd_material,cd_material_p) = 'S'))) 
	order by cd_material;
	
C06 CURSOR FOR 
	SELECT cd_material 
	from 	w_preco_material;	
	 

BEGIN 
ie_coluna_w	:= 0;
CALL Exec_sql_Dinamico('Gerar_W_Preco_Material', 'truncate table w_preco_material');
begin 
c01 := dbms_sql.open_cursor;
dbms_sql.parse(c01,	'select cd_convenio, cd_categoria ' || 
			'from  categoria_convenio ' || 
			'where 1 = 1 ' || 
			' and ie_situacao = ' || chr(39) || 'A' || chr(39) || 
			' ' || ds_filtro_p || 
			' order by 1, 2', DBMS_SQL.Native);
DBMS_SQL.DEFINE_COLUMN(C01, 1, cd_convenio_w);
DBMS_SQL.DEFINE_COLUMN(C01, 2, cd_categoria_w, 10);
ignore := DBMS_SQL.EXECUTE(C01);
loop 
ie_coluna_w		:= ie_coluna_w + 1;
 
	if (dbms_sql.fetch_rows(c01) > 0) then 
		dbms_sql.column_value(C01, 1, cd_convenio_w);
		dbms_sql.column_value(C01, 2, cd_categoria_w);
		open c02;
		loop 
			fetch c02 into cd_material_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
 
			select	max(qt_conv_estoque_consumo) 
			into STRICT	qt_conv_estoque_consumo_w 
			from	material 
			where	cd_material	= cd_material_w;
 
			SELECT * FROM define_preco_material(	cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, dt_vigencia_p, cd_material_w, 0, 0, coalesce(cd_setor_atendimento_p,0), '', 0, 0, null, null, null, null, null, null, null, null, vl_material_w, dt_vigencia_w, cd_tab_peco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_material_w, dt_vigencia_w, cd_tab_peco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
 
			/* Felipe Martini OS66968 05/09/2007, substitui pela function obter_valor_ultima_compra*/
 
			/* SELECT NVL(MAX(a.vl_custo),0) 
			INTO vl_preco_ult_compra_w 
			FROM custo_mensal_material a 
			WHERE a.cd_estabelecimento = cd_estabelecimento_p 
			 AND a.cd_material = cd_material_w 
			 AND a.ie_tipo_custo = 'R' 
			 AND a.dt_referencia = 
					(SELECT MAX(x.dt_referencia) 
					FROM	custo_mensal_material x 
					WHERE	x.cd_estabelecimento	= a.cd_estabelecimento 
					AND	x.cd_material		= a.cd_material 
					AND	x.ie_tipo_custo		= 'R' 
					AND	x.vl_custo 		IS NOT NULL 
					AND	x.dt_referencia BETWEEN 
					TRUNC(dt_base_preco_p - (3 * 30),'month') AND TRUNC(dt_base_preco_p,'month')); */
 
 
 
			select 	obter_valor_ultima_compra(cd_estabelecimento_p,365,cd_material_w,null,'N') 
			into STRICT 	vl_preco_ult_compra_w 
			;
			 
			/*Felipe Martini OS68608 14/09/2007, substitui pela function obter_custo_medio_material*/
 
			/*SELECT NVL(MAX(a.vl_custo),0) 
			INTO vl_custo_medio_w 
			FROM custo_mensal_material a 
			WHERE a.cd_estabelecimento = cd_estabelecimento_p 
			 AND a.cd_material = cd_material_w 
			 AND a.ie_tipo_custo = 'E' 
			 AND a.dt_referencia = 
					(SELECT MAX(x.dt_referencia) 
					FROM	custo_mensal_material x 
					WHERE	x.cd_estabelecimento	= a.cd_estabelecimento 
					AND	x.cd_material		= a.cd_material 
					AND	x.ie_tipo_custo		= 'E' 
					AND	x.vl_custo 		IS NOT NULL 
					AND	x.dt_referencia BETWEEN 
					TRUNC(dt_base_preco_p - (3 * 30),'month') AND TRUNC(dt_base_preco_p,'month')); */
 
 
			select	max(cd_material_estoque) 
			into STRICT	cd_material_estoque_w 
			from	material 
			where	cd_material	=cd_material_w;
 
			Select	obter_custo_medio_material(cd_estabelecimento_p,dt_base_preco_p,cd_material_estoque_w) 
			into STRICT	vl_custo_medio_w 
			;		
 
 
			if (ie_unidade_consumo_p = 'S') then 
				begin 
 
				select	dividir(vl_preco_ult_compra_w, qt_conv_estoque_consumo_w) 
				into STRICT	vl_preco_ult_compra_w 
				;
 
				select	dividir(vl_custo_medio_w, qt_conv_estoque_consumo_w) 
				into STRICT	vl_custo_medio_w 
				;
				 
				end;
			end if;
			 
 
			if (vl_material_w > 0) then 
				pr_margem_w 		:= 0;
				pr_margem_cm_w		:= 0;
				if (vl_preco_ult_compra_w <> 0) then 
					pr_margem_w 	:= (100 * (vl_material_w - vl_preco_ult_compra_w)) / vl_preco_ult_compra_w;
				end if;
				if (vl_custo_medio_w <> 0) then 
					pr_margem_cm_w 	:= (100 * (vl_material_w - vl_custo_medio_w)) / vl_custo_medio_w;
				end if;
				 
				insert into w_preco_material( 
					cd_convenio, cd_categoria, cd_material, 
					dt_ultima_vigencia, vl_preco_venda, 
					vl_preco_ult_compra, vl_custo_medio, 
					pr_margem, pr_margem_cm, ie_coluna, ie_origem_preco) 
				values (	 
					cd_convenio_w, cd_categoria_w, cd_material_w, 
					dt_vigencia_p, vl_material_w, 
					vl_preco_ult_compra_w, vl_custo_medio_w, 
					pr_margem_w, pr_margem_cm_w, ie_coluna_w, ie_origem_preco_w);
			end if;
		end loop;
		close c02;
	else 
		exit;
	end if;
end loop;
dbms_sql.close_cursor(c01);
exception 
	when others then 
		if	dbms_sql.is_open(c01) then 
			dbms_sql.close_cursor(c01);
		end if;
end;
 
if (ie_utilizados_p = 'S') then 
 
	open C06;
	loop 
	fetch C06 into	 
		cd_mat_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin 
		 
		select 	count(*) 
		into STRICT	qt_mat_w 
		from 	material_atend_paciente 
		where 	cd_material = cd_mat_w 
		and 	dt_atendimento > clock_timestamp() - interval '60 days';
		 
		if (qt_mat_w = 0) then 
		 
			delete 	from w_preco_material 
			where 	cd_material = cd_mat_w;
		 
		end if;
		 
		end;
	end loop;
	close C06;
 
end if;
 
 
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_preco_material ( cd_estabelecimento_p bigint, cd_grupo_mat_p bigint, cd_subgrupo_mat_p bigint, cd_classe_mat_p bigint, dt_vigencia_p timestamp, dt_base_preco_p timestamp, ds_filtro_p text, ie_unidade_consumo_p text, ie_saldo_estoque_p text, ie_curva_abc_p text, ie_tipo_material_p text, cd_material_p text, cd_setor_atendimento_p bigint, ie_utilizados_p text) FROM PUBLIC;

