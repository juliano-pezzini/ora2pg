-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tre_duplicar_agenda ( nr_seq_agenda_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;
nr_seq_modulo_w		bigint;
nr_seq_modulo_origem_w	bigint;

c01 CURSOR FOR
SELECT	nr_sequencia
from	tre_agenda_modulo
where	nr_seq_agenda = nr_seq_agenda_p;


BEGIN

select	nextval('tre_agenda_seq')
into STRICT	nr_sequencia_w
;

insert into tre_agenda(
		nr_sequencia,
		cd_estabelecimento,
		nr_seq_curso,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_inicio,
		dt_termino,
		ds_agenda,
		dt_liberacao,
		qt_min_pessoas,
		qt_max_pessoas,
		dt_inicio_real,
		dt_termino_real,
		nr_seq_motivo_cancel,
		dt_cancelamento,
		nr_seq_etapa_gpi,
		nr_atend_cobranca)
	SELECT	nr_sequencia_w,
		cd_estabelecimento,
		nr_seq_curso,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		dt_inicio,
		dt_termino,
		ds_agenda,
		null,
		qt_min_pessoas,
		qt_max_pessoas,
		dt_inicio_real,
		dt_termino_real,
		nr_seq_motivo_cancel,
		dt_cancelamento,
		nr_seq_etapa_gpi,
		nr_atend_cobranca
	from	tre_agenda
	where	nr_sequencia = nr_seq_agenda_p;

insert into tre_agenda_regra(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_agenda,
		cd_perfil,
		cd_setor_atendimento,
		cd_cargo,
		ie_situacao,
		nm_usuario_regra,
		ds_grupo)
	SELECT	nextval('tre_agenda_regra_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_w,
		cd_perfil,
		cd_setor_atendimento,
		cd_cargo,
		ie_situacao,
		nm_usuario_regra,
		ds_grupo
	from	tre_agenda_regra
	where	nr_seq_agenda = nr_seq_agenda_p;

	commit;

	delete from tre_agenda_modulo where nr_seq_agenda = nr_sequencia_w;

open c01;
loop
fetch c01 into
	nr_seq_modulo_origem_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	nextval('tre_agenda_modulo_seq')
	into STRICT	nr_seq_modulo_w
	;

	insert into tre_agenda_modulo(
			nr_sequencia,
			nr_seq_agenda,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_modulo,
			dt_inicio,
			dt_termino,
			qt_carga_horaria,
			cd_palestrante)
		SELECT	nr_seq_modulo_w,
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_modulo,
			dt_inicio,
			dt_termino,
			qt_carga_horaria,
			cd_palestrante
		from	tre_agenda_modulo
		where	nr_sequencia = nr_seq_modulo_origem_w;

	commit;

	insert into tre_candidato(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_fisica,
			nr_seq_agenda,
			nr_seq_modulo,
			cd_setor_usuario,
			cd_cargo,
			ie_funcionario,
			cd_cgc,
			ie_cancelamento,
			nr_pac_reabilitacao,
			nr_seq_motivo_desistencia,
			dt_desistencia,
			pr_aproveitamento)
		SELECT	nextval('tre_candidato_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_fisica,
			nr_sequencia_w,
			CASE WHEN coalesce(nr_seq_modulo::text, '') = '' THEN null  ELSE nr_seq_modulo_w END ,
			cd_setor_usuario,
			cd_cargo,
			ie_funcionario,
			cd_cgc,
			ie_cancelamento,
			nr_pac_reabilitacao,
			nr_seq_motivo_desistencia,
			dt_desistencia,
			pr_aproveitamento
		from	tre_candidato
		where	nr_seq_agenda = nr_seq_agenda_p
		and (nr_seq_modulo = nr_seq_modulo_origem_w or coalesce(nr_seq_modulo::text, '') = '');

	insert into tre_agenda_mod_anexo(
			nr_sequencia,
			nr_seq_modulo,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_arquivo)
		SELECT	nextval('tre_agenda_mod_anexo_seq'),
			nr_seq_modulo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ds_arquivo
		from	tre_agenda_mod_anexo
		where	nr_seq_modulo = nr_seq_modulo_origem_w;

end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tre_duplicar_agenda ( nr_seq_agenda_p bigint, nm_usuario_p text) FROM PUBLIC;

