-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eventos_externos_pac ( dt_inicio_p timestamp, dt_fim_p timestamp, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, ie_autorizacao_conta_p text, ie_restringe_regra_p text, nm_usuario_p text) AS $body$
DECLARE

 
cd_pessoa_fisica_w				pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_requisicao_w				pls_requisicao.nr_sequencia%type;
nr_seq_guia_plano_w				pls_guia_plano.nr_sequencia%type;
cd_guia_w						pls_conta.cd_guia%type;
cd_guia_referencia_w			pls_conta.cd_guia_referencia%type;
ds_status_w						varchar(255);
dt_evento_w						timestamp;
ie_tipo_guia_w					pls_conta.ie_tipo_guia%type;
ie_carater_internacao_w			pls_conta.ie_carater_internacao%type;
nr_seq_clinica_w				pls_conta.nr_seq_clinica%type;
ie_tipo_atend_tiss_w			varchar(3);
ds_prestador_exec_w				varchar(255);
ds_medico_solic_w				varchar(255);
ds_medico_exec_w				varchar(255);
qt_solicitado_w					double precision;
cd_procedimento_w				procedimento.cd_procedimento%type;
ie_origem_proced_w				procedimento.ie_origem_proced%type;
qt_solicitado_ww				double precision;
nr_seq_material_w				pls_material.nr_sequencia%type;
nr_seq_evento_externo_w			bigint;
nr_seq_conta_w					pls_conta.nr_sequencia%type;
dt_inicio_internacao_w			timestamp;
dt_fim_internacao_w				timestamp;
cd_cid_principal_w				varchar(10);
qt_procedimento_imp_w			pls_conta_proc.qt_procedimento_imp%type;
qt_material_imp_w				pls_conta_mat.qt_material_imp%type;
ie_controla_regra_w				varchar(1);
ie_tipo_guia_regra_w			pls_conta.ie_tipo_guia%type;
ie_tipo_atend_tiss_regra_w		mprev_regra_evento_externo.ie_tipo_atend_tiss%type;
ie_carater_internacao_regra_w	mprev_regra_evento_externo.ie_carater_internacao%type;
nr_seq_clinica_regra_w			mprev_regra_evento_externo.nr_seq_clinica%type;
dt_inicio_w						timestamp	:= dt_inicio_p;
dt_fim_w						timestamp	:= dt_fim_p;
ie_execucao_w					varchar(1);
ie_req_executada_w				mprev_regra_evento_externo.ie_req_executada%type;

C01 CURSOR FOR 
	SELECT	b.cd_pessoa_fisica, 
			a.nr_sequencia nr_seq_requisicao, 
			null nr_seq_guia_plano, 
			null cd_guia, 
			null cd_guia_referencia, 
			wheb_mensagem_pck.get_texto(803414) ds_status, 
			a.dt_requisicao dt_evento, 
			a.ie_tipo_guia ie_tipo_guia, 
			a.ie_carater_atendimento ie_carater_internacao, 
			a.nr_seq_clinica nr_seq_clinica, 
			a.ie_tipo_atendimento ie_tipo_atend_tiss, 
			substr(pls_obter_dados_prestador(a.nr_seq_prestador_exec,'N'),1,255) ds_prestador_exec, 
			substr(obter_nome_medico(a.cd_medico_solicitante,'C'),1,80) ds_medico_solic, 
			null ds_medico_exec, 
			'N' ie_executada 
	from	pls_requisicao a, 
			pls_segurado b 
	where	a.nr_seq_segurado	= b.nr_sequencia 
	and		not exists (SELECT	1 
						from	pls_execucao_requisicao x 
						where	x.nr_seq_requisicao = a.nr_sequencia 
						and	(x.nr_seq_guia IS NOT NULL AND x.nr_seq_guia::text <> '')) 
	and		b.cd_pessoa_fisica	= cd_pessoa_fisica_p 
	and		a.dt_requisicao between dt_inicio_w and dt_fim_w 
	
union all
 
	select	b.cd_pessoa_fisica, 
			null nr_seq_requisicao, 
			a.nr_sequencia nr_seq_guia_plano, 
			a.cd_guia cd_guia, 
			a.cd_guia_principal cd_guia_referencia, 
			substr(obter_valor_dominio(1747,ie_status),1,255) ds_status, 
			a.dt_solicitacao dt_evento, 
			a.ie_tipo_guia ie_tipo_guia, 
			a.ie_carater_internacao ie_carater_internacao, 
			a.nr_seq_clinica nr_seq_clinica, 
			a.ie_tipo_atend_tiss ie_tipo_atend_tiss, 
			substr(pls_obter_dados_prestador(a.nr_seq_prestador,'N'),1,255) ds_prestador_exec, 
			substr(obter_nome_medico(a.cd_medico_solicitante,'C'),1,80) ds_medico_solic, 
			null ds_medico_exec, 
			'S' ie_executada 
	from	pls_guia_plano a, 
			pls_segurado b 
	where	a.nr_seq_segurado	= b.nr_sequencia 
	and		b.cd_pessoa_fisica	= cd_pessoa_fisica_p 
	and		a.dt_solicitacao between dt_inicio_w and dt_fim_w;

C02 CURSOR FOR 
	SELECT	a.qt_solicitado, 
			a.cd_procedimento, 
			a.ie_origem_proced 
	from	pls_requisicao_proc a 
	where	a.nr_seq_requisicao	= nr_seq_requisicao_w 
	and		(nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') 
	
union all
 
	SELECT	a.qt_solicitada, 
			a.cd_procedimento, 
			a.ie_origem_proced 
	from	pls_guia_plano_proc a 
	where	a.nr_seq_guia	= nr_seq_guia_plano_w 
	and		(nr_seq_guia_plano_w IS NOT NULL AND nr_seq_guia_plano_w::text <> '');

C03 CURSOR FOR 
	SELECT	a.qt_solicitado, 
			a.nr_seq_material 
	from	pls_requisicao_mat a 
	where	a.nr_seq_requisicao	= nr_seq_requisicao_w 
	and		(nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') 
	
union all
 
	SELECT	a.qt_solicitada, 
			a.nr_seq_material 
	from	pls_guia_plano_mat a 
	where	a.nr_seq_guia	= nr_seq_guia_plano_w 
	and		(nr_seq_guia_plano_w IS NOT NULL AND nr_seq_guia_plano_w::text <> '');

C04 CURSOR FOR 
	SELECT	a.ie_tipo_guia, 
			a.ie_tipo_atend_tiss, 
			a.ie_carater_internacao, 
			a.nr_seq_clinica, 
			a.ie_req_executada 
	from	mprev_regra_evento_externo a;
	
C05 CURSOR FOR 
	SELECT	b.cd_pessoa_fisica, 
			a.nr_sequencia nr_seq_conta, 
			a.cd_guia, 
			a.cd_guia_referencia, 
			a.dt_atendimento dt_evento, 
			a.ie_tipo_guia ie_tipo_guia, 
			a.ie_carater_internacao ie_carater_internacao, 
			a.nr_seq_clinica nr_seq_clinica, 
			a.ie_tipo_internado ie_tipo_atend_tiss, 
			substr(pls_obter_dados_prestador(a.nr_seq_prestador_exec,'N'),1,255) ds_prestador_exec, 
			substr(obter_nome_medico(a.cd_medico_solicitante,'C'),1,80) ds_medico_solic, 
			substr(obter_nome_medico(a.cd_medico_executor,'C'),1,80) ds_medico_exec, 
			a.dt_entrada dt_inicio_internacao, 
			a.dt_alta dt_fim_internacao, 
			a.cd_cid_principal 
	from	pls_conta_v a, 
			pls_segurado b 
	where	a.nr_seq_segurado	= b.nr_sequencia 
	and	not exists (SELECT	1 
					from	pls_execucao_requisicao x 
					where	x.nr_seq_requisicao = a.nr_sequencia 
					and	(x.nr_seq_guia IS NOT NULL AND x.nr_seq_guia::text <> '')) 
	and		b.cd_pessoa_fisica	= cd_pessoa_fisica_p 
	and		a.dt_atendimento between dt_inicio_w and dt_fim_w;

C06 CURSOR FOR 
	SELECT	a.qt_procedimento_imp, 
			a.cd_procedimento, 
			a.ie_origem_proced 
	from	pls_conta_proc a 
	where	a.nr_seq_conta	= nr_seq_conta_w 
	and		(nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') 
	and		(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '') 
	and 	(a.qt_procedimento_imp IS NOT NULL AND a.qt_procedimento_imp::text <> '');

C07 CURSOR FOR 
	SELECT	a.qt_material_imp, 
			a.nr_seq_material 
	from	pls_conta_mat a 
	where	a.nr_seq_conta	= nr_seq_conta_w 
	and		(nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') 
	and		(a.qt_material IS NOT NULL AND a.qt_material::text <> '') 
	and		(a.cd_material IS NOT NULL AND a.cd_material::text <> '');


BEGIN 
 
if (ie_autorizacao_conta_p = 'A') then 
	begin 
	if (ie_restringe_regra_p = 'N') then 
		begin 
		delete	FROM w_evento_externo_pac_proc 
		where	nm_usuario = nm_usuario_p;
 
		delete	FROM w_evento_externo_pac_mat 
		where	nm_usuario = nm_usuario_p;
 
		delete	FROM w_evento_externo_paciente 
		where	nm_usuario = nm_usuario_p;
 
		dt_inicio_w	:= trunc(dt_inicio_p,'dd');
		dt_fim_w	:= fim_dia(dt_fim_p);
		open C01;
		loop 
		fetch C01 into 
			cd_pessoa_fisica_w, 
			nr_seq_requisicao_w, 
			nr_seq_guia_plano_w, 
			cd_guia_w, 
			cd_guia_referencia_w, 
			ds_status_w, 
			dt_evento_w, 
			ie_tipo_guia_w, 
			ie_carater_internacao_w, 
			nr_seq_clinica_w, 
			ie_tipo_atend_tiss_w, 
			ds_prestador_exec_w, 
			ds_medico_solic_w, 
			ds_medico_exec_w, 
			ie_execucao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			select	nextval('w_evento_externo_paciente_seq') 
			into STRICT	nr_seq_evento_externo_w 
			;
 
			/* Insere o evento externo */
 
			insert into w_evento_externo_paciente( 
				nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				ie_autorizacao_conta, 
				dt_evento, 
				cd_pessoa_fisica, 
				ie_tipo_guia, 
				ie_tipo_atend_tiss, 
				ie_carater_internacao, 
				ds_prestador_exec, 
				ds_medico_exec, 
				ds_medico_solic, 
				nr_seq_guia_plano, 
				nr_seq_requisicao, 
				cd_guia, 
				cd_guia_referencia, 
				nr_seq_clinica, 
				ds_status, 
				ie_req_executada) 
			values ( 
				nr_seq_evento_externo_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				ie_autorizacao_conta_p, 
				dt_evento_w, 
				cd_pessoa_fisica_w, 
				ie_tipo_guia_w, 
				ie_tipo_atend_tiss_w, 
				ie_carater_internacao_w, 
				ds_prestador_exec_w, 
				ds_medico_exec_w, 
				ds_medico_solic_w, 
				nr_seq_guia_plano_w, 
				nr_seq_requisicao_w, 
				cd_guia_w, 
				cd_guia_referencia_w, 
				nr_seq_clinica_w, 
				ds_status_w, 
				ie_req_executada_w);
 
			/* Insere o procedimento no evento */
 
			open C02;
			loop 
			fetch C02 into	 
				qt_solicitado_w, 
				cd_procedimento_w, 
				ie_origem_proced_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				insert into w_evento_externo_pac_proc( 
					nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_evento_externo, 
					dt_procedimento, 
					qt_procedimento, 
					cd_procedimento, 
					ie_origem_proced) 
				values ( 
					nextval('w_evento_externo_pac_proc_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_evento_externo_w, 
					clock_timestamp(), 
					qt_solicitado_w, 
					cd_procedimento_w, 
					ie_origem_proced_w);
				end;
			end loop;
			close C02;
 
			/* Insere o material no evento */
 
			open C03;
			loop 
			fetch C03 into	 
				qt_solicitado_ww, 
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin 
				if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then 
					insert into w_evento_externo_pac_mat( 
						nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						nr_seq_evento_externo, 
						dt_material, 
						cd_material, 
						ds_material, 
						qt_material) 
					values ( 
						nextval('w_evento_externo_pac_mat_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_evento_externo_w, 
						clock_timestamp(), 
						nr_seq_material_w, 
						substr(pls_obter_desc_material(nr_seq_material_w),1,255), 
						qt_solicitado_ww);
				end if;
				end;
			end loop;
			close C03;
			end;
		end loop;
		close C01;
		end;
	elsif (ie_restringe_regra_p = 'S') then 
		begin 
		dt_inicio_w	:= dt_inicio_p;
		dt_fim_w	:= dt_fim_p;
		open C01;
		loop 
		fetch C01 into	 
			cd_pessoa_fisica_w, 
			nr_seq_requisicao_w, 
			nr_seq_guia_plano_w, 
			cd_guia_w, 
			cd_guia_referencia_w, 
			ds_status_w, 
			dt_evento_w, 
			ie_tipo_guia_w, 
			ie_carater_internacao_w, 
			nr_seq_clinica_w, 
			ie_tipo_atend_tiss_w, 
			ds_prestador_exec_w, 
			ds_medico_solic_w, 
			ds_medico_exec_w, 
			ie_execucao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			ie_controla_regra_w := 'N';
 
			open C04;
			loop 
			fetch C04 into	 
				ie_tipo_guia_regra_w, 
				ie_tipo_atend_tiss_regra_w, 
				ie_carater_internacao_regra_w, 
				nr_seq_clinica_regra_w, 
				ie_req_executada_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				if ((coalesce(ie_tipo_guia_w,'0') = coalesce(ie_tipo_guia_regra_w,'0') or coalesce(ie_tipo_guia_regra_w,'0') = '0') and (coalesce(ie_tipo_atend_tiss_w,'0') = coalesce(ie_tipo_atend_tiss_regra_w,'0') or coalesce(ie_tipo_atend_tiss_regra_w,'0') = '0') and (coalesce(ie_carater_internacao_w,'0') = coalesce(ie_carater_internacao_regra_w,'0') or coalesce(ie_carater_internacao_regra_w,'0') = '0') and (coalesce(nr_seq_clinica_w,'0') = coalesce(nr_seq_clinica_regra_w,'0') or coalesce(nr_seq_clinica_regra_w,'0') = '0') and 
					((ie_execucao_w = coalesce(ie_req_executada_w, 'N')) or (coalesce(ie_req_executada_w, 'N') = 'N'))) then 
					ie_controla_regra_w := 'S';
				end if;
				end;
			end loop;
			close C04;
			end;
 
			if (ie_controla_regra_w = 'S') then 
				begin 
				select	nextval('w_evento_externo_paciente_seq') 
				into STRICT	nr_seq_evento_externo_w 
				;
 
				/* Insere o evento externo */
 
				insert into w_evento_externo_paciente( 
					nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					ie_autorizacao_conta, 
					dt_evento, 
					cd_pessoa_fisica, 
					ie_tipo_guia, 
					ie_tipo_atend_tiss, 
					ie_carater_internacao, 
					ds_prestador_exec, 
					ds_medico_exec, 
					ds_medico_solic, 
					nr_seq_guia_plano, 
					nr_seq_requisicao, 
					cd_guia, 
					cd_guia_referencia, 
					nr_seq_clinica, 
					ds_status, 
					ie_req_executada) 
				values ( 
					nr_seq_evento_externo_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					ie_autorizacao_conta_p, 
					dt_evento_w, 
					cd_pessoa_fisica_w, 
					ie_tipo_guia_w, 
					ie_tipo_atend_tiss_w, 
					ie_carater_internacao_w, 
					ds_prestador_exec_w, 
					ds_medico_exec_w, 
					ds_medico_solic_w, 
					nr_seq_guia_plano_w, 
					nr_seq_requisicao_w, 
					cd_guia_w, 
					cd_guia_referencia_w, 
					nr_seq_clinica_w, 
					ds_status_w, 
					ie_req_executada_w);
 
				/* Insere o procedimento no evento */
 
				open C02;
				loop 
				fetch C02 into	 
					qt_solicitado_w, 
					cd_procedimento_w, 
					ie_origem_proced_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin 
					insert into w_evento_externo_pac_proc( 
						nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						nr_seq_evento_externo, 
						dt_procedimento, 
						qt_procedimento, 
						cd_procedimento, 
						ie_origem_proced) 
					values ( 
						nextval('w_evento_externo_pac_proc_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_evento_externo_w, 
						clock_timestamp(), 
						qt_solicitado_w, 
						cd_procedimento_w, 
						ie_origem_proced_w);
					end;
				end loop;
				close C02;
 
				/* Insere o material no evento */
 
				open C03;
				loop 
				fetch C03 into	 
					qt_solicitado_ww, 
					nr_seq_material_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin 
					if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then 
						insert into w_evento_externo_pac_mat( 
							nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							nr_seq_evento_externo, 
							dt_material, 
							cd_material, 
							ds_material, 
							qt_material) 
						values ( 
							nextval('w_evento_externo_pac_mat_seq'), 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_seq_evento_externo_w, 
							clock_timestamp(), 
							nr_seq_material_w, 
							substr(pls_obter_desc_material(nr_seq_material_w),1,255), 
							qt_solicitado_ww);
					end if;
					end;
				end loop;
				close C03;
				end;
			end if;
		end loop;
		close C01;
		end;
	end if;
	end;
elsif (ie_autorizacao_conta_p = 'C') then 
	begin 
	if (ie_restringe_regra_p = 'N') then 
		begin 
		delete	FROM w_evento_externo_pac_proc 
		where	nm_usuario = nm_usuario_p;
 
		delete	FROM w_evento_externo_pac_mat 
		where	nm_usuario = nm_usuario_p;
 
		delete	FROM w_evento_externo_paciente 
		where	nm_usuario = nm_usuario_p;
 
		dt_inicio_w	:= trunc(dt_inicio_p,'dd');
		dt_fim_w	:= fim_dia(dt_fim_p);
		open C05;
		loop 
		fetch C05 into	 
			cd_pessoa_fisica_w, 
			nr_seq_conta_w, 
			cd_guia_w, 
			cd_guia_referencia_w, 
			dt_evento_w, 
			ie_tipo_guia_w, 
			ie_carater_internacao_w, 
			nr_seq_clinica_w, 
			ie_tipo_atend_tiss_w, 
			ds_prestador_exec_w, 
			ds_medico_solic_w, 
			ds_medico_exec_w, 
			dt_inicio_internacao_w, 
			dt_fim_internacao_w, 
			cd_cid_principal_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin 
			select	nextval('w_evento_externo_paciente_seq') 
			into STRICT	nr_seq_evento_externo_w 
			;
 
			/* Insere o evento externo */
 
			insert into w_evento_externo_paciente( 
				nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				ie_autorizacao_conta, 
				cd_pessoa_fisica, 
				nr_seq_conta, 
				cd_guia, 
				cd_guia_referencia, 
				dt_evento, 
				ie_tipo_guia, 
				ie_carater_internacao, 
				nr_seq_clinica, 
				ie_tipo_atend_tiss, 
				ds_prestador_exec, 
				ds_medico_solic, 
				ds_medico_exec, 
				dt_inicio_internacao, 
				dt_fim_internacao, 
				cd_cid_principal, 
				ie_req_executada) 
			values ( 
				nr_seq_evento_externo_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				ie_autorizacao_conta_p, 
				cd_pessoa_fisica_w, 
				nr_seq_conta_w, 
				cd_guia_w, 
				cd_guia_referencia_w, 
				dt_evento_w, 
				ie_tipo_guia_w, 
				ie_carater_internacao_w, 
				nr_seq_clinica_w, 
				ie_tipo_atend_tiss_w, 
				ds_prestador_exec_w, 
				ds_medico_solic_w, 
				ds_medico_exec_w, 
				dt_inicio_internacao_w, 
				dt_fim_internacao_w, 
				cd_cid_principal_w, 
				ie_req_executada_w);
			 
			/* Insere o procedimento no evento */
 
			open C06;
			loop 
			fetch C06 into	 
				qt_procedimento_imp_w, 
				cd_procedimento_w, 
				ie_origem_proced_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin 
				insert into w_evento_externo_pac_proc( 
					nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_evento_externo, 
					dt_procedimento, 
					qt_procedimento, 
					cd_procedimento, 
					ie_origem_proced) 
				values ( 
					nextval('w_evento_externo_pac_proc_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_evento_externo_w, 
					clock_timestamp(), 
					qt_procedimento_imp_w, 
					cd_procedimento_w, 
					ie_origem_proced_w);
				end;
			end loop;
			close C06;
			 
			/* Insere o material no evento */
 
			open C07;
			loop 
			fetch C07 into	 
				qt_material_imp_w, 
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin 
				if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then 
					insert into w_evento_externo_pac_mat( 
						nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						nr_seq_evento_externo, 
						dt_material, 
						cd_material, 
						ds_material, 
						qt_material) 
					values ( 
						nextval('w_evento_externo_pac_mat_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_evento_externo_w, 
						clock_timestamp(), 
						nr_seq_material_w, 
						substr(pls_obter_desc_material(nr_seq_material_w),1,255), 
						qt_material_imp_w);
				end if;
				end;
			end loop;
			close C07;
			end;
		end loop;
		close C05;
		end;
	end if;
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eventos_externos_pac ( dt_inicio_p timestamp, dt_fim_p timestamp, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, ie_autorizacao_conta_p text, ie_restringe_regra_p text, nm_usuario_p text) FROM PUBLIC;

