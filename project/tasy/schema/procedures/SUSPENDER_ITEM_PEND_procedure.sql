-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE suspender_item_pend ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_material_p bigint, ds_justificativa_p text, ie_tipo_item_p text, nm_usuario_p text, nr_seq_motivo_susp_p bigint, nr_seq_cpoe_p bigint default null) AS $body$
DECLARE


nr_agrupamento_w		double precision;
nr_sequencia_w			integer;
nr_seq_material_w		integer;
nr_sequencia_autor_w	bigint;
nr_seq_autor_destino_w	bigint;
nr_seq_item_autor_w		bigint;
qt_solicitada_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_estagio_w		bigint;
cd_material_w			bigint;
nr_seq_dieta_hor_w		bigint;
nr_seq_ordem_w			bigint;
nr_seq_solic_sangue_w	bigint;
nr_seq_derivado_w		bigint;
nr_horas_validade_w		integer;
cd_item_w				varchar(15);
ie_se_necessario_w		varchar(1);
cd_intervalo_w			varchar(7);
ie_inconsistencia_w		varchar(10);
ds_inconsistentes_w		varchar(10);
cd_refeicao_w			varchar(20);
ie_susp_ordem_medic_w	varchar(1);
ie_ctrl_glic_w			varchar(15);
ie_gas_separada_w		varchar(1);

ie_tipo_proced_w		prescr_procedimento.ie_tipo_proced%type;

qt_dose_w				prescr_material.qt_dose%type;
ie_agrupador_w			prescr_material.ie_agrupador%type;

cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;

nr_atendimento_w		atendimento_paciente.nr_atendimento%type;

cd_unidade_medida_w		unidade_medida.cd_unidade_medida%type;

nr_seq_item_cpoe_w		cpoe_material.nr_sequencia%type;

dt_primeiro_horario_w	timestamp;
ie_acm_w				char(1);
ie_possui_horario_w		char(1) := 'N';
ie_acm_sn_w				char(1) := 'N';

C02 CURSOR FOR
SELECT	nr_sequencia,
		cd_material,
		coalesce(ie_se_necessario,'N'),
		coalesce(ie_acm,'N')
from	prescr_material
where	ie_agrupador	= 1
and		nr_agrupamento	= nr_agrupamento_w
and		nr_sequencia 	<> nr_sequencia_w
and		nr_prescricao	= nr_prescricao_p;

C03 CURSOR FOR
SELECT	a.nr_sequencia,
		c.ie_suspensao
from	ordem_medica c,
		prescr_medica_ordem b,
		prescr_ordem_hor a
where	a.nr_seq_ordem	 = b.nr_sequencia
and		b.nr_seq_ordem   = c.nr_sequencia
and		b.nr_prescricao	 = nr_prescricao_p
and		b.nr_seq_solucao = nr_sequencia_p;


BEGIN

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

nr_atendimento_w	:= obter_atendimento_prescr(nr_prescricao_p);

if (ie_tipo_item_p in ('IAH', 'M', 'S', 'LD')) then

	select	coalesce(max(ie_se_necessario), 'N'),
			max(qt_dose),
			max(cd_intervalo),
			max(cd_material),
			coalesce(max(ie_acm),'N'),
			max(cd_unidade_medida_dose),
			max(nr_sequencia)
	into STRICT	ie_se_necessario_w,
			qt_dose_w,
			cd_intervalo_w,
			cd_item_w,
			ie_acm_w,
			cd_unidade_medida_w,
			nr_seq_material_w
	from	prescr_material
	where	nr_prescricao	= nr_prescricao_p
	and		nr_sequencia	= coalesce(nr_sequencia_p,nr_sequencia)
	and		cd_material = cd_material_p;

	select 	coalesce(max('S'),'N')
	into STRICT	ie_possui_horario_w
	from	prescr_mat_hor
	where	nr_prescricao	= nr_prescricao_p
	and		nr_seq_material	= coalesce(nr_sequencia_p,nr_seq_material_w)
	and		cd_material = cd_material_p  LIMIT 1;
	
	if (ie_se_necessario_w  = 'S') or (ie_acm_w = 'S') then
		ie_acm_sn_w :=  'S';
	else	
		ie_acm_sn_w := 'N';
	end if;
	
	if (ie_acm_sn_w = 'S') and (ie_possui_horario_w = 'N')then	
		
		select	coalesce(dt_inicio_prescr, clock_timestamp())
		into STRICT	dt_primeiro_horario_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		
		SELECT * FROM aprazar_item_prescr(	'N', cd_estabelecimento_w, nr_atendimento_w, 'M', 0, cd_material_p, cd_intervalo_w, qt_dose_w, dt_primeiro_horario_w, to_char(nr_prescricao_p), nr_prescricao_p, nr_sequencia_p, 'N', null, null, nm_usuario_p, ie_inconsistencia_w, ds_inconsistentes_w, null, null, 'S', null, null, 'N', null, null, cd_unidade_medida_w, null, '', null, null) INTO STRICT ie_inconsistencia_w, ds_inconsistentes_w;
		
	end if;

	nr_sequencia_w :=	nr_sequencia_p;
	
	if (ie_tipo_item_p in ('M', 'IAH')) and (coalesce(nr_sequencia_p::text, '') = '') then
		select	min(nr_sequencia)
		into STRICT	nr_sequencia_w
		from	prescr_material
		where	ie_agrupador = 1
		and		coalesce(ie_suspenso, 'N') = 'N'
		and		cd_material = cd_material_p
		and		nr_prescricao = nr_prescricao_p;
	end if;
	
	update	prescr_material
	set		ie_suspenso	= 'S',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			dt_suspensao	= clock_timestamp(),
			nm_usuario_susp	= nm_usuario_p,
			ds_motivo_susp	= ds_justificativa_p
	where	(((nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') and
			  ((nr_sequencia	= nr_sequencia_w) or (nr_sequencia_diluicao = nr_sequencia_w))) or
			 ((coalesce(nr_sequencia_p::text, '') = '') and (cd_material = cd_material_p)))
	and		nr_prescricao	= nr_prescricao_p;

	-- Check if there is CPOE record to suspend
	select	max(nr_seq_mat_cpoe)
	into STRICT	nr_seq_item_cpoe_w
	from	prescr_material
	where	(((nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') and
			  ((nr_sequencia	= nr_sequencia_w) or (nr_sequencia_diluicao = nr_sequencia_w))) or
			 ((coalesce(nr_sequencia_p::text, '') = '') and (cd_material = cd_material_p)))
	and		nr_prescricao	= nr_prescricao_p;
	
	if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
		update	cpoe_material
		set		dt_suspensao = clock_timestamp(),
				dt_lib_suspensao = clock_timestamp(),
				nm_usuario_susp = nm_usuario_p
		where	nr_sequencia = nr_seq_item_cpoe_w;
	end if;

	update	prescr_material
	set		ie_suspenso	= 'S',
			dt_suspensao	= clock_timestamp(),
			nm_usuario_susp	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			ds_motivo_susp	= ds_justificativa_p		
	where	nr_seq_kit	= nr_sequencia_w
	and		nr_prescricao	= nr_prescricao_p;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

	select	max(ie_agrupador),
			max(nr_agrupamento),
			coalesce(max(ie_se_necessario),'N'),
			coalesce(max(ie_acm),'N')
	into STRICT	ie_agrupador_w,
			nr_agrupamento_w,
			ie_se_necessario_w,
			ie_acm_w
	from	prescr_material
	where	nr_prescricao	= nr_prescricao_p
	and		nr_sequencia	= coalesce(nr_sequencia_w,nr_sequencia)
	and		cd_material	= cd_material_p;
	
	if (ie_se_necessario_w  = 'S') or (ie_acm_w = 'S') then
		ie_acm_sn_w :=  'S';
	else	
		ie_acm_sn_w := 'N';
	end if;

	update	can_ordem_prod a
	set		a.ie_cancelada	= 'S'
	where	coalesce(a.dt_inicio_preparo::text, '') = ''
	and	exists (SELECT	1
			from	can_ordem_item_prescr b
			where	a.nr_sequencia		= b.nr_seq_ordem
			and	b.nr_prescricao		= nr_prescricao_p
			and	b.nr_seq_prescricao	= nr_sequencia_p);
		
	CALL Gerar_evento_adep_pend(nr_prescricao_p, nr_sequencia_p, 13, ds_justificativa_p, ie_tipo_item_p, nr_atendimento_w, cd_material_p, nm_usuario_p, nr_seq_motivo_susp_p,ie_acm_sn_w);

	if (ie_agrupador_w = 1) then
		select	min(nr_sequencia)
		into STRICT	nr_sequencia_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and		nr_agrupamento	= nr_agrupamento_w;
		
		if (nr_sequencia_w = coalesce(nr_sequencia_p,nr_sequencia_w)) then
				open C02;
				loop
				fetch C02 into
					nr_seq_material_w,
					cd_material_w,
					ie_se_necessario_w,
					ie_acm_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					update	prescr_material
					set		ie_suspenso	= 'S',
							nm_usuario	= nm_usuario_p,
							dt_atualizacao	= clock_timestamp(),
							dt_suspensao	= clock_timestamp(),
							nm_usuario_susp	= nm_usuario_p,
							ds_motivo_susp	= ds_justificativa_p
					where	nr_prescricao	= nr_prescricao_p
					and		nr_sequencia	= nr_seq_material_w;
								
					update	prescr_material
					set		ie_suspenso	= 'S',
							nm_usuario	= nm_usuario_p,
							dt_atualizacao	= clock_timestamp(),
							dt_suspensao	= clock_timestamp(),
							nm_usuario_susp	= nm_usuario_p,
							ds_motivo_susp	= ds_justificativa_p
					where	nr_prescricao	= nr_prescricao_p
					and		nr_seq_kit		= nr_seq_material_w;
					
					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
					if (ie_se_necessario_w  = 'S') or (ie_acm_w = 'S') then
						ie_acm_sn_w :=  'S';
					else	
						ie_acm_sn_w := 'N';
					end if;
					CALL Gerar_evento_adep_pend(nr_prescricao_p, nr_seq_material_w, 13, ds_justificativa_p, ie_tipo_item_p, nr_atendimento_w, cd_material_w, nm_usuario_p, nr_seq_motivo_susp_p,ie_acm_sn_w);
					end;
				end loop;
				close C02;
		end if;
	end if;
	
elsif (ie_tipo_item_p in ('P', 'L', 'HM')) then

	update	prescr_procedimento
	set		ie_suspenso		= 'S',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			dt_suspensao		= clock_timestamp(),
			ds_motivo_susp  	= ds_justificativa_p,    		
			nm_usuario_susp		= nm_usuario_p
	where	nr_prescricao		= nr_prescricao_p
	and		cd_procedimento		= cd_material_p;

	-- Check if there is CPOE record to suspend
	select	max(nr_seq_proc_cpoe),
			max(coalesce(ie_tipo_proced,'XPTO'))
	into STRICT	nr_seq_item_cpoe_w,
			ie_tipo_proced_w
	from	prescr_procedimento
	where	nr_prescricao		= nr_prescricao_p
	and		cd_procedimento		= cd_material_p;
	
	if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
		if (ie_tipo_proced_w in ('AP','APH','APC')) then						
			
			update	cpoe_anatomia_patologica
			set		dt_suspensao = clock_timestamp(),
				dt_lib_suspensao = clock_timestamp(),
				nm_usuario_susp = nm_usuario_p
			where	nr_sequencia = nr_seq_item_cpoe_w;			
		else
		
			update	cpoe_procedimento
			set		dt_suspensao = clock_timestamp(),
				dt_lib_suspensao = clock_timestamp(),
				nm_usuario_susp = nm_usuario_p
			where	nr_sequencia = nr_seq_item_cpoe_w;
		end if;
	end if;
	
	select 	max(a.nr_sequencia)
	into STRICT	nr_sequencia_w
	from	prescr_procedimento a
	where	a.nr_prescricao = nr_prescricao_p
	and		a.cd_procedimento = cd_material_p
	and		not exists (	SELECT	1
						from	prescr_mat_alteracao b
						where	b.nr_prescricao = a.nr_prescricao
						and		b.ie_tipo_item = ie_tipo_item_p
						and		b.cd_item = cd_material_p
						and		b.nr_seq_prescricao = a.nr_sequencia);
				
	update	prescr_material
	set		ie_suspenso	= 'S',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			dt_suspensao	= clock_timestamp(),
			nm_usuario_susp	= nm_usuario_p,
			ds_motivo_susp  = ds_justificativa_p		
	where	nr_prescricao	= nr_prescricao_p
	and		nr_sequencia_proc = coalesce(nr_sequencia_w, nr_sequencia_proc);
	
	select	coalesce(max(ie_se_necessario),'N'),
			coalesce(max(ie_acm),'N')
	into STRICT	ie_se_necessario_w,
			ie_acm_w
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p
	and		nr_sequencia = coalesce(nr_sequencia_w, nr_sequencia)
	and		cd_procedimento = cd_material_p;
	
	if (ie_se_necessario_w  = 'S') or (ie_acm_w = 'S') then
		ie_acm_sn_w :=  'S';
	else	
		ie_acm_sn_w := 'N';
	end if;
						
	CALL Gerar_evento_adep_pend(nr_prescricao_p, null, 13, ds_justificativa_p, ie_tipo_item_p, nr_atendimento_w, cd_material_p, nm_usuario_p, nr_seq_motivo_susp_p,ie_acm_sn_w);
		
elsif (ie_tipo_item_p = 'SOL') then

	update	prescr_solucao
	set		ie_suspenso	= 'S',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			dt_suspensao	= clock_timestamp(),
			nm_usuario_susp	= nm_usuario_p,
			ds_motivo_susp  = ds_justificativa_p		
	where	nr_prescricao	= nr_prescricao_p
	and		nr_seq_solucao	= nr_sequencia_p;

	update	prescr_material
	set		ie_suspenso	= 'S',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			dt_suspensao	= clock_timestamp(),
			nm_usuario_susp	= nm_usuario_p,
			ds_motivo_susp  = ds_justificativa_p
	where	nr_prescricao	= nr_prescricao_p
	and		nr_sequencia_solucao = nr_sequencia_p;

	-- Check if there is CPOE record to suspend
	select	max(nr_seq_mat_cpoe)
	into STRICT	nr_seq_item_cpoe_w
	from	prescr_material
	where	nr_prescricao	= nr_prescricao_p
	and		nr_sequencia_solucao = nr_sequencia_p;
	
	if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
		update	cpoe_procedimento
		set		dt_suspensao = clock_timestamp(),
				dt_lib_suspensao = clock_timestamp(),
				nm_usuario_susp = nm_usuario_p
		where	nr_sequencia = nr_seq_item_cpoe_w;
	end if;

	open C03;
	loop
	fetch C03 into	
		nr_seq_ordem_w,
		ie_susp_ordem_medic_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		if (coalesce(ie_susp_ordem_medic_w,'N') = 'N') then
			begin
			update	prescr_ordem_hor
			set	dt_suspensao = clock_timestamp(),
				dt_atualizacao = clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p,
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_ordem_w
			and 	coalesce(dt_fim_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = '';
			end;
		else
			begin
			update	prescr_ordem_hor
			set	dt_fim_horario = clock_timestamp(),
				dt_atualizacao = clock_timestamp(),
				nm_usuario_susp	= nm_usuario_p,
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_ordem_w
			and 	coalesce(dt_fim_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = '';
			end;
		end if;	
		end;
	end loop;
	close C03;

	/* Rafael em 06/07/2007 OS61944 - Gerar evento ADEP */

	CALL gerar_alter_sol_prescr_adep(1, nr_prescricao_p, nr_sequencia_p, 10, null, nm_usuario_p, ds_justificativa_p);
elsif (ie_tipo_item_p = 'O') then
	
	ie_gas_separada_w := wheb_assist_pck.obterParametroFuncao(1113,704);
	
	--Identificar se a gasoterapia está em modo agrupado
	if (coalesce(nr_prescricao_p,0) = 0 and
		coalesce(nr_sequencia_p,0) = 0 and
		coalesce(nr_seq_cpoe_p,0) > 0 and
		ie_gas_separada_w = 'N') then
		update	prescr_gasoterapia	a
		set		a.ie_suspenso		= 'S',
				a.nm_usuario		= nm_usuario_p,
				a.dt_atualizacao	= clock_timestamp()
		where	a.nr_seq_gas_cpoe	= nr_seq_cpoe_p
		and		obter_se_prescr_vigente(a.nr_prescricao) = 'S';
		
		update	cpoe_gasoterapia	a
		set		a.dt_suspensao 		= clock_timestamp(),
				a.dt_lib_suspensao 	= clock_timestamp(),
				a.nm_usuario_susp 	= nm_usuario_p
		where	a.nr_sequencia 		= nr_seq_cpoe_p;
	else
		update	prescr_gasoterapia
		set		ie_suspenso	= 'S',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_sequencia_p;

		-- Check if there is CPOE record to suspend
		select	max(nr_seq_gas_cpoe)
		into STRICT	nr_seq_item_cpoe_w
		from	prescr_gasoterapia
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_sequencia_p;

		if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
			update	cpoe_gasoterapia
			set		dt_suspensao = clock_timestamp(),
					dt_lib_suspensao = clock_timestamp(),
					nm_usuario_susp = nm_usuario_p
			where	nr_sequencia = nr_seq_item_cpoe_w;
		end if;
	end if;
elsif (ie_tipo_item_p = 'R') then
	
	update	prescr_recomendacao
	set		ie_suspenso	= 'S',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			dt_suspensao	= clock_timestamp(),
			nm_usuario_susp	= nm_usuario_p,
			ds_motivo_susp  = ds_justificativa_p	
	where	nr_sequencia	= nr_sequencia_p
	and		nr_prescricao	= nr_prescricao_p;

	-- Check if there is CPOE record to suspend
	select	max(nr_seq_rec_cpoe)
	into STRICT	nr_seq_item_cpoe_w
	from	prescr_recomendacao
	where	nr_sequencia	= nr_sequencia_p
	and		nr_prescricao	= nr_prescricao_p;

	if (nr_seq_item_cpoe_w IS NOT NULL AND nr_seq_item_cpoe_w::text <> '') then
		update	cpoe_recomendacao
		set		dt_suspensao = clock_timestamp(),
				dt_lib_suspensao = clock_timestamp(),
				nm_usuario_susp = nm_usuario_p
		where	nr_sequencia = nr_seq_item_cpoe_w;
	end if;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE suspender_item_pend ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_material_p bigint, ds_justificativa_p text, ie_tipo_item_p text, nm_usuario_p text, nr_seq_motivo_susp_p bigint, nr_seq_cpoe_p bigint default null) FROM PUBLIC;

