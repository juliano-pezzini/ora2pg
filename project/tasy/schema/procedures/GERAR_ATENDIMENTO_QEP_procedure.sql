-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_atendimento_qep (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, nr_seq_que_atendimento_p INOUT bigint) AS $body$
DECLARE


nr_seq_que_atendimento_w	que_atendimento.nr_sequencia%type;
cd_perfil_w			que_questionario.cd_perfil%type;
nm_usuario_w			usuario.nm_usuario%type;
cd_pessoa_atendimento_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_sexo_pessoa_atend_w		pessoa_fisica.ie_sexo%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
ds_retorno_sql_w		varchar(4000);
qt_idade_pf_w			bigint;
qt_questoes_w			bigint;
ds_parametros_w			varchar(255);

C01 CURSOR FOR
	SELECT	c.cd_grupo_proc,
		c.cd_area_procedimento,
		c.cd_especialidade,
		a.nr_seq_exame,
		a.nr_seq_proc_interno,
		a.dt_baixa
	from 	prescr_procedimento a,
		prescr_medica b,
		estrutura_procedimento_v c
	where	a.nr_prescricao = b.nr_prescricao
	and	a.cd_procedimento = c.cd_procedimento
	and	b.nr_atendimento = nr_atendimento_p
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	--and	b.dt_liberacao_medico is not null
	and (coalesce(a.cd_setor_atendimento::text, '') = '' or a.cd_setor_atendimento = cd_setor_atendimento_p);
	--and	a.dt_baixa is null;
	
c01_w	c01%rowtype;

C02 CURSOR FOR
	SELECT	qa.nr_sequencia,
		q.ds_sql
	from	que_questao q,
		que_atendimento_questao qa
	where	q.nr_sequencia = qa.nr_seq_questao
	and	q.ie_tipo_resposta = 'D'
	and	(q.ds_sql IS NOT NULL AND q.ds_sql::text <> '')
	and	qa.nr_seq_que_atendimento = nr_seq_que_atendimento_w
	and	coalesce(q.ie_situacao,'A') = 'A'
	and not exists (	SELECT	1
				from	que_atendimento_questao_op x
				where	x.nr_seq_que_atend_questao = qa.nr_sequencia);

c02_w	c02%rowtype;

C03 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.ds_sql_observacao
	from	QUE_QUESTIONARIO a,
		QUE_QUESTAO b
	where	b.nr_seq_questionario = a.nr_sequencia	
	and (coalesce(a.ie_situacao,'A') = 'A')
	and (coalesce(b.ie_situacao,'A') = 'A')
	and (not exists (	SELECT	1
				from	que_questionario_liberacao y
				where (y.nr_seq_que_questionario = a.nr_sequencia))
		or exists (	select	1
				from	que_questionario_liberacao y
				where (y.nr_seq_que_questionario = a.nr_sequencia)
				and (coalesce(y.cd_setor_atendimento::text, '') = '' or y.cd_setor_atendimento = cd_setor_atendimento_p)
				and (coalesce(y.cd_perfil::text, '') = '' or y.cd_perfil = cd_perfil_w)
				and (coalesce(y.cd_grupo_proc::text, '') = '' or y.cd_grupo_proc = c01_w.cd_grupo_proc)
				and (coalesce(y.cd_area_proc::text, '') = '' or y.cd_area_proc = c01_w.cd_area_procedimento)
				and (coalesce(y.cd_especialidade::text, '') = '' or y.cd_especialidade = c01_w.cd_especialidade)
				and (coalesce(y.nr_seq_exame::text, '') = '' or y.nr_seq_exame = c01_w.nr_seq_exame)
				and (coalesce(y.nr_seq_proc_interno::text, '') = '' or y.nr_seq_proc_interno = c01_w.nr_seq_proc_interno)
				and (coalesce(y.cd_estabelecimento::text, '') = '' or y.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)))
	and (coalesce(b.ie_sexo::text, '') = '' or b.ie_sexo = coalesce(ie_sexo_pessoa_atend_w,b.ie_sexo))
	and (qt_idade_pf_w between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,999))
	and (coalesce(b.ie_tipo_atendimento::text, '') = '' or b.ie_tipo_atendimento = ie_tipo_atendimento_w)
	and not exists (	select	1
				from	que_atendimento_questao x
				where	x.nr_seq_que_atendimento = nr_seq_que_atendimento_w
				and	x.nr_seq_questao = b.nr_sequencia)
	and	((coalesce(a.ie_proc_executado,'N') = 'N' and coalesce(c01_w.dt_baixa::text, '') = '') or (a.ie_proc_executado = 'S' and (c01_w.dt_baixa IS NOT NULL AND c01_w.dt_baixa::text <> '')));

c03_w	c03%rowtype;


BEGIN

nm_usuario_w		:= wheb_usuario_pck.get_nm_usuario;
cd_perfil_w		:= wheb_usuario_pck.get_cd_perfil;

cd_pessoa_atendimento_w := obter_pessoa_atendimento(nr_atendimento_p,'C');
ie_sexo_pessoa_atend_w	:= obter_sexo_pf(cd_pessoa_atendimento_w,'C');
qt_idade_pf_w		:= Obter_Idade_PF(cd_pessoa_atendimento_w, clock_timestamp(), 'A');
ie_tipo_atendimento_w	:= Obter_Tipo_Atendimento(nr_atendimento_p);

begin

	select	max(nr_sequencia)
	into STRICT	nr_seq_que_atendimento_w
	from	que_atendimento
	where	nr_atendimento = nr_atendimento_p
	and	coalesce(cd_setor_atendimento, cd_setor_atendimento_p) = cd_setor_atendimento_p
	and	coalesce(dt_liberacao::text, '') = '';

exception
when others then
	nr_seq_que_atendimento_w	:= null;
end;

open C01;
loop
fetch C01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (coalesce(nr_seq_que_atendimento_w::text, '') = '') then
		select	nextval('que_atendimento_seq')
		into STRICT	nr_seq_que_atendimento_w
		;	

		insert into que_atendimento(
			NR_SEQUENCIA,
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			DT_ATUALIZACAO_NREC, 
			NM_USUARIO_NREC, 
			NR_ATENDIMENTO,
			CD_SETOR_ATENDIMENTO,
			IE_SITUACAO)
		values (
			nr_seq_que_atendimento_w,
			clock_timestamp(),
			nm_usuario_w,
			clock_timestamp(),
			nm_usuario_w,
			nr_atendimento_p,
			cd_setor_atendimento_p,
			'A');
	end if;

	open C03;
	loop
	fetch C03 into	
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		
		ds_parametros_w := null;
		
		if (position(':NR_ATENDIMENTO_P' in upper(c03_w.ds_sql_observacao)) > 0) then
			ds_parametros_w := 'NR_ATENDIMENTO_P='||nr_atendimento_p;
		end if;
		
		ds_retorno_sql_w := OBTER_VALOR_DINAMICO_4000_BV(c03_w.ds_sql_observacao, ds_parametros_w, ds_retorno_sql_w);
		
		insert into que_atendimento_questao(
			NR_SEQUENCIA,
			NR_SEQ_QUE_ATENDIMENTO, 
			NR_SEQ_QUESTAO, 
			DT_ATUALIZACAO, 
			NM_USUARIO,
			DS_OBSERVACAO)
		values (nextval('que_atendimento_questao_seq'),
			nr_seq_que_atendimento_w,
			c03_w.nr_sequencia,
			clock_timestamp(),
			nm_usuario_w,
			ds_retorno_sql_w);
		end;
	end loop;
	close C03;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into	
	c02_w;
EXIT WHEN NOT FOUND; /* apply on C02 */

	ds_parametros_w := null;
	
	if (position(':NR_ATENDIMENTO_P' in upper(c02_w.ds_sql)) > 0) then
		ds_parametros_w := 'NR_ATENDIMENTO_P='||nr_atendimento_p;
	end if;
	
	ds_retorno_sql_w := OBTER_VALOR_DINAMICO_4000_BV(c02_w.ds_sql, ds_parametros_w, ds_retorno_sql_w);
	
	if ((trim(both ds_retorno_sql_w) IS NOT NULL AND (trim(both ds_retorno_sql_w))::text <> '')) then
		insert into que_atendimento_questao_op(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_resposta,
			nr_seq_que_atend_questao,
			nr_seq_que_questao_opcao,
			ds_observacao,
			nr_seq_tasy_padrao_cor)
		values (
			nextval('que_atendimento_questao_op_seq'),
			clock_timestamp(),
			nm_usuario_w,
			clock_timestamp(),
			nm_usuario_w,
			ds_retorno_sql_w,
			c02_w.nr_sequencia,
			null,
			null,
			null);
	end if;

end loop;
close C02;
	
commit;

select	count(1)
into STRICT	qt_questoes_w
from	que_atendimento_questao
where	nr_seq_que_atendimento = nr_seq_que_atendimento_w;
	
if (qt_questoes_w > 0) then
	nr_seq_que_atendimento_p	:= nr_seq_que_atendimento_w;
else
	nr_seq_que_atendimento_p	:= null;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_atendimento_qep (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, nr_seq_que_atendimento_p INOUT bigint) FROM PUBLIC;

