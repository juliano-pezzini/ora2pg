-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_consistir_base (( ie_base_wheb_p text default 'N', nr_seq_versao_p bigint default 0 ) is /*
ie_base_wheb_w
N - Impede a execuaoo na base da Wheb. Na base do cliente consiste todas as tabelas do sistema
S - Ira consistir apenas as tabelas que o usuario alterou
T - Consiste todas as tabelas na base da WHEB.
*/
 TABELA_INEXISTENTE CONSTANT integer DEFAULT 1) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(1)	:= 'N';
nr_retorno_w			bigint	:= 0;
BEGIN

	begin

		DS_RETORNO_P	=>	nr_retorno_w := obter_valor_dinamico(
				DS_COMANDO_P 	=>	'select 1 qt from ' || nm_tabela_p || ' where rownum < 1', DS_RETORNO_P	=>	nr_retorno_w);
				
				
		if (coalesce(nr_retorno_w, 0) > 0) then		
			ds_retorno_w	:= 'S';
		end if;


	exception
		when others then
			ds_retorno_w	:= 'N';
	end;

return 	ds_retorno_w;	

end;

procedure gravar_inconsist_base_local(	NM_TABELA_P      VARCHAR2,
					NM_OBJETO_P      VARCHAR2,
					NM_USUARIO_P     VARCHAR2,
					DT_ATUALIZACAO_P DATE,
					DS_MOTIVO_P      VARCHAR2,
					NR_SEQ_MOTIVO_P  NUMBER,
					NR_SEQ_VERSAO_P  NUMBER) is
begin
	if (tabela_possui_registro(NM_TABELA_P) = 'S')	then
			CALL gravar_inconsistencia_base(
				NM_TABELA_P,
				NM_OBJETO_P,
				NM_USUARIO_P,
				DT_ATUALIZACAO_P,
				DS_MOTIVO_P,
				NR_SEQ_MOTIVO_P,
				NR_SEQ_VERSAO_P
				);
	end if;
end;



begin


if ( ie_base_wheb_w = 'N') then
	CALL abortar_se_base_wheb();
end if;

/*INICIO ALTERACAO COELHO -  IMPEDIR DUAS EXECUCOES DESTA PROCEDURE OU SIMULTANEA A VALIDA_OBJETOS_SISTEMA*/

CALL gravar_processo_longo('','TASY_CONSISTIR_BASE',null);

begin
	SELECT obter_desc_expressao(786650)/*'A procedure VALIDA_OBJETOS_SISTEMA esta em execucao.'*/
|| chr(10) ||
	    obter_desc_expressao(786652)/*'A execucao da procedure TASY_CONSISTIR_BASE foi cancelada!!!'*/
|| chr(10) ||
		obter_desc_expressao(648224)/*'Programa   :'*/
 || program || chr(10) ||
		obter_desc_expressao(618748)/*'Sid/Serial :'*/
 || sid     || ',' || serial# || chr(10) ||
	   	obter_desc_expressao(328225)/*'Usuario    :'*/
 || osuser  || CHR(10) ||
	   	obter_desc_expressao(618750)/*'Estacao    :'*/
 || machine
	INTO STRICT	ds_erro_w
	FROM 	v$session
	WHERE	audsid <> (SELECT userenv('sessionid') )
	AND	username = (select username from v$session where audsid = (select userenv('sessionid') ))
	AND	action like 'VALIDA_OBJETOS_SISTEMA%';
exception
when others then
	ds_erro_w := '';
end;

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	CALL gravar_processo_longo('','',0);
	CALL wheb_mensagem_pck.exibir_mensagem_abort(197652,'DS_ERRO_W='||DS_ERRO_W);
end if;

begin
	SELECT obter_desc_expressao(786654)/*'A procedure TASY_SINCRONIZAR_BASE ja esta em execucao.'*/
|| chr(10) ||
		obter_desc_expressao(786652)/*'A execucao da procedure TASY_CONSISTIR_BASE foi cancelada!!!'*/
|| chr(10) ||
		obter_desc_expressao(648224)/*'Programa   :'*/
 || program || chr(10) ||
		obter_desc_expressao(618748)/*'Sid/Serial :'*/
 || sid     || ',' || serial# || chr(10) ||
	   	obter_desc_expressao(328225)/*'Usuario    :'*/
 || osuser  || CHR(10) ||
	   	obter_desc_expressao(618750)/*'Estacao    :'*/
 || machine
	INTO STRICT	ds_erro_w
	FROM 	v$session
	WHERE	audsid <> (SELECT userenv('sessionid') )
	AND	username = (select username from v$session where audsid = (select userenv('sessionid') ))
	AND	action like 'TASY_SINCRONIZAR_BASE%'
	OR 	action like 'TASY_AJUSTAR_COLUNAS%'
	OR	action like 'TASY_ALTERAR_COLUNA%'
	OR	action like 'TASY_CRIAR_INDICE%'
	OR	action like 'TASY_CRIAR_INTEGRIDADE%'
	OR	action like 'TASY_CRIAR_ALTERAR_TABELA%';
exception
when others then
	ds_erro_w := '';
end;

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	CALL gravar_processo_longo('','',0);
	CALL wheb_mensagem_pck.exibir_mensagem_abort(197652,'DS_ERRO_W='||DS_ERRO_W);
end if;

begin
	SELECT	obter_desc_expressao(786672)/*'A procedure TASY_CONSISTIR_BASE esta em execucao. '*/
|| chr(10) ||
		obter_desc_expressao(648224)/*'Programa   :'*/
 || program || chr(10) ||
		obter_desc_expressao(618748)/*'Sid/Serial :'*/
 || sid     || ',' || serial# || chr(10) ||
	   	obter_desc_expressao(328225)/*'Usuario    :'*/
 || osuser  || CHR(10) ||
	   	obter_desc_expressao(618750)/*'Estacao    :'*/
 || machine
	INTO STRICT	ds_erro_w
	FROM 	v$session
	WHERE	audsid <> (SELECT userenv('sessionid') )
	AND	username = (select username from v$session where audsid = (select userenv('sessionid') ))
	AND	action like 'TASY_CONSISTIR_BASE%';
exception
when others then
	ds_erro_w := '';
end;

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	CALL gravar_processo_longo('','',null);
	CALL wheb_mensagem_pck.exibir_mensagem_abort(197652,'DS_ERRO_W='||DS_ERRO_W);
end if;

/*FIM ALTERACAO COELHO*/

/*INICIO ALTERACAO COELHO -  IMPEDIR DUAS EXECUCOES DESTA PROCEDURE OU SIMULTANEA A VALIDA_OBJETOS_SISTEMA*/

CALL gravar_processo_longo('','TASY_CONSISTIR_BASE',0);

if (coalesce(nr_seq_versao_p,0) = 0) then
	EXECUTE 'truncate table w_inconsistencia_base';
end if;

CALL gravar_processo_longo('Tabelas','TASY_CONSISTIR_BASE',-1);
for linha in C01 loop
	gravar_inconsist_base_local(
		linha.nm_tabela,
		linha.nm_objeto , 
		linha.nm_usuario, 
		linha.dt_atualizacao, 
		linha.ds_motivo,
		TABELA_INEXISTENTE,
		nr_seq_versao_p);
end loop;


CALL gravar_processo_longo('Campos','TASY_CONSISTIR_BASE',-1);
for linha in C02 loop
	gravar_inconsist_base_local(
		linha.nm_tabela,
		linha.nm_objeto , 
		linha.nm_usuario, 
		linha.dt_atualizacao, 
		linha.ds_motivo, 
		CAMPO_INEXISTENTE, 
		nr_seq_versao_p);
end loop;

CALL gravar_processo_longo('Tipos de campos','TASY_CONSISTIR_BASE',-1);
for linha in C03 loop
	gravar_inconsist_base_local(
		linha.nm_tabela,
		linha.nm_objeto,
		linha.nm_usuario,
		linha.dt_atualizacao,
		linha.ds_motivo,
		TIPO_CAMPO_INCONSISTENTE,
		nr_seq_versao_p);
end loop;

CALL gravar_processo_longo('Tamanho dos campos','TASY_CONSISTIR_BASE',-1);
for linha in C04 loop
	gravar_inconsist_base_local(
		linha.nm_tabela,
		linha.nm_objeto, 
		linha.nm_usuario,
		linha.dt_atualizacao,
		linha.ds_motivo,
		TAMANHO_PRECISAO_INCONSISTENTE,
		nr_seq_versao_p);
end loop;

CALL gravar_processo_longo('Obrig. dos campos','TASY_CONSISTIR_BASE',-1);
for linha in C05 loop
	gravar_inconsist_base_local(
		linha.nm_tabela,
		linha.nm_objeto,
		linha.nm_usuario,
		linha.dt_atualizacao,
		linha.ds_motivo,
		OBRIGATORIEDADE_INEXISTENTE,
		nr_seq_versao_p);
end loop;

CALL gravar_processo_longo('Integridades','TASY_CONSISTIR_BASE',-1);
for linha in C15 loop
	gravar_inconsist_base_local(
		linha.nm_tabela,
		linha.nm_objeto,
		linha.nm_usuario,
		linha.dt_atualizacao,
		linha.ds_motivo,
		INTEGRIDADES_DESABILITADAS,
		nr_seq_versao_p);
end loop;

CALL gravar_processo_longo('Constraints dos indices','TASY_CONSISTIR_BASE',-1);
for linha in C16 loop
	gravar_inconsist_base_local(
		linha.nm_tabela,
		linha.nm_objeto,
		linha.nm_usuario,
		linha.dt_atualizacao,
		linha.ds_motivo,
		INDICE_UNICO_SEM_CONSTRAINT,
		nr_seq_versao_p);
end loop;

CALL gravar_processo_longo('Triggers','TASY_CONSISTIR_BASE',-1);
for linha in C17 loop
	gravar_inconsist_base_local(
		linha.nm_tabela,
		linha.nm_objeto,
		linha.nm_usuario,
		linha.dt_atualizacao,
		linha.ds_motivo,
		TRIGGERS_DESABILITADAS,
		nr_seq_versao_p);
end loop;

CALL gravar_processo_longo('Contraint _UK com indice incorreto','TASY_CONSISTIR_BASE',-1);
for linha in C19 loop
	gravar_inconsist_base_local(
		linha.nm_tabela,
		linha.nm_objeto,
		linha.nm_usuario,
		linha.dt_atualizacao,
		linha.ds_motivo,
		CONSTRAINT_UK_INDICE_INCORRETO,
		nr_seq_versao_p);
end loop;

CALL gravar_processo_longo('Indices sem atributos','TASY_CONSISTIR_BASE',-1);
for linha in C20 loop
	gravar_inconsist_base_local(
		linha.nm_tabela,
		linha.nm_objeto,
		linha.nm_usuario,
		linha.dt_atualizacao,
		linha.ds_motivo,
		INDICES_SEM_ATRIBUTOS,
		nr_seq_versao_p);
end loop;


commit;

CALL gravar_processo_longo('','',0);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_consistir_base (( ie_base_wheb_p text default 'N', nr_seq_versao_p bigint default 0 ) is  TABELA_INEXISTENTE CONSTANT integer DEFAULT 1) FROM PUBLIC;

