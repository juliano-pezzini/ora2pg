-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_divergencia_inspecao ( nr_seq_registro_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
nr_seq_inspecao_w			inspecao_recebimento.nr_sequencia%type;
cd_material_w				material.cd_material%type;
dt_entrega_real_w			inspecao_recebimento.dt_entrega_real%type;
dt_entrega_prevista_w			inspecao_recebimento.dt_entrega_real%type;
nr_seq_tipo_w				inspecao_tipo_divergencia.nr_sequencia%type;
nr_seq_tipo_MA_w			inspecao_tipo_divergencia.nr_sequencia%type;
nr_seq_tipo_ML_w			inspecao_tipo_divergencia.nr_sequencia%type;
qt_inspecao_w				inspecao_recebimento.qt_inspecao%type;
qt_ordem_w				inspecao_recebimento.qt_inspecao%type;
cd_condicao_pagamento_w			condicao_pagamento.cd_condicao_pagamento%type;
cd_cond_pagto_ordem_w			condicao_pagamento.cd_condicao_pagamento%type;
ie_motivo_devolucao_w			inspecao_recebimento.ie_motivo_devolucao%type;
qt_existe_w				bigint;
nr_seq_marca_w				marca.nr_sequencia%type;
nr_seq_marca_oci_w			marca.nr_sequencia%type;
ie_passou_marca_MA_w			varchar(1);
ie_passou_marca_ML_w			varchar(1);
ie_consist_mot_dev_w			inspecao_tipo_divergencia.ie_consist_mot_dev%type;
vl_unitario_inspecao_w			inspecao_recebimento.vl_unitario_material%type;
vl_unitario_ordem_w			ordem_compra_item.vl_unitario_material%type;
nr_ordem_compra_w			ordem_compra_item.nr_ordem_compra%type;
nr_item_oci_w				ordem_compra_item.nr_item_oci%type;
ie_temperatura_w			inspecao_recebimento.ie_temperatura%type;
qt_temperatura_w			double precision;
qt_temp_max_transp_w			integer;
qt_temp_min_transp_w			integer;
qt_existe_diverg_w			bigint;

 
C01 CURSOR FOR 
SELECT	nr_sequencia, 
	cd_material, 
	dt_entrega_real, 
	obter_dt_prev_oci_inspecao(nr_sequencia), 
	qt_inspecao, 
	obter_qt_prev_oci_inspecao(nr_sequencia), 
	cd_condicao_pagamento, 
	obter_dados_ordem_compra(nr_ordem_compra,'CP'), 
	ie_motivo_devolucao, 
	vl_unitario_material, 
	nr_ordem_compra, 
	nr_item_oci, 
	ie_temperatura 
from	inspecao_recebimento 
where	nr_seq_registro	= nr_seq_registro_p 
and	(nr_ordem_compra IS NOT NULL AND nr_ordem_compra::text <> '');

c02 CURSOR FOR 
SELECT	distinct 
	nr_seq_marca 
from	inspecao_recebimento_lote 
where	nr_seq_inspecao = nr_seq_inspecao_w 
and	(nr_seq_marca IS NOT NULL AND nr_seq_marca::text <> '');


BEGIN 
 
delete 
from	inspecao_divergencia 
where	nr_seq_registro	= nr_seq_registro_p 
and	ie_motivo_aceite	= 'F' 
and	ie_geracao	= 'S';
 
open C01;
loop 
fetch C01 INTO 
	nr_seq_inspecao_w, 
	cd_material_w, 
	dt_entrega_real_w, 
	dt_entrega_prevista_w, 
	qt_inspecao_w, 
	qt_ordem_w, 
	cd_condicao_pagamento_w, 
	cd_cond_pagto_ordem_w, 
	ie_motivo_devolucao_w, 
	vl_unitario_inspecao_w, 
	nr_ordem_compra_w, 
	nr_item_oci_w, 
	ie_temperatura_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	begin 
		qt_temperatura_w:= (regexp_replace(replace(ie_temperatura_w, '.', ','), '[^0-9|,|-]', ''))::numeric;
	exception 
	when others then 
		qt_temperatura_w:=null;
	end;
	 
	 
	/*Busca as temperaturas para realizar as consistência*/
 
	begin 
	select	x.qt_temp_max_transp, 
		x.qt_temp_min_transp 
	into STRICT	qt_temp_max_transp_w, 
		qt_temp_min_transp_w 
	from	inspecao_regra_material x 
	where	x.cd_material		= cd_material_w 
	and	x.cd_estabelecimento	= cd_estabelecimento_p 
	and	x.ie_temperatura	= 'S';
	exception 
		when others then 
			qt_temp_max_transp_w	:= null;
			qt_temp_min_transp_w	:= null;			
	end;
	 
	 
	/*MA - Marcas não vinculadas com o material*/
 
	ie_passou_marca_MA_w := 'N';
	 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_tipo_MA_w 
	from	inspecao_tipo_divergencia 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_tipo_divergencia	= 'MA' 
	and	ie_situacao = 'A';
	 
	 
	/*ML - Marca do lote diferente da marca da ordem compra*/
 
	ie_passou_marca_ML_w := 'N';
	 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_tipo_ML_w 
	from	inspecao_tipo_divergencia 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_tipo_divergencia	= 'ML' 
	and	ie_situacao = 'A';
 
	if	((nr_seq_tipo_MA_w > 0) or (nr_seq_tipo_ML_w > 0))then 
	 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_marca_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			if (nr_seq_tipo_MA_w > 0) then 
			 
				select	count(*) 
				into STRICT	qt_existe_w 
				from	material_marca 
				where	cd_material = cd_material_w 
				and	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_p)) 
				and	nr_sequencia = nr_seq_marca_w;
				 
				select	count(*) 
				into STRICT	qt_existe_diverg_w 
				from	inspecao_divergencia 
				where	nr_seq_inspecao	= nr_seq_inspecao_w 
				and	nr_seq_tipo	= nr_seq_tipo_MA_w;
				 
				if (qt_existe_w = 0) and (qt_existe_diverg_w = 0) and (ie_passou_marca_MA_w = 'N') then 
					ie_passou_marca_MA_w := 'S';
					CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_MA_w, cd_material_w, nm_usuario_p);
				end if;
			end if;
			 
			if (nr_seq_tipo_ML_w > 0) then 
			 
				select	coalesce(max(nr_seq_marca),0) 
				into STRICT	nr_seq_marca_oci_w 
				from	ordem_compra_item 
				where	nr_ordem_compra = nr_ordem_compra_w 
				and	nr_item_oci = nr_item_oci_w;
				 
				select	count(*) 
				into STRICT	qt_existe_diverg_w 
				from	inspecao_divergencia 
				where	nr_seq_inspecao	= nr_seq_inspecao_w 
				and	nr_seq_tipo	= nr_seq_tipo_ML_w;
				 
				if (nr_seq_marca_oci_w > 0) and (qt_existe_diverg_w = 0) and (nr_seq_marca_oci_w <> nr_seq_marca_w) and (ie_passou_marca_ML_w = 'N') then 
					ie_passou_marca_ML_w := 'S';
					CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_ML_w, cd_material_w, nm_usuario_p);
				end if;
			end if;
			end;
		end loop;
		close C02;	
	end if;	
	 
	/*PE - Diferenças de prazo entrega (Entregou antes ou depois)*/
 
	if (dt_entrega_real_w IS NOT NULL AND dt_entrega_real_w::text <> '') and (dt_entrega_prevista_w IS NOT NULL AND dt_entrega_prevista_w::text <> '') and (dt_entrega_real_w <> dt_entrega_prevista_w) then 
		 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_seq_tipo_w 
		from	inspecao_tipo_divergencia 
		where	cd_estabelecimento	= cd_estabelecimento_p 
		and	ie_tipo_divergencia	= 'PE' 
		and	ie_situacao = 'A';
		 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	inspecao_divergencia 
		where	nr_seq_inspecao	= nr_seq_inspecao_w 
		and	nr_seq_tipo	= nr_seq_tipo_w;
		 
		if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
			CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
		end if;
	end if;
	 
	/*PD - Diferenças de prazo entrega (Entregou depois)*/
 
	if (dt_entrega_real_w IS NOT NULL AND dt_entrega_real_w::text <> '') and (dt_entrega_prevista_w IS NOT NULL AND dt_entrega_prevista_w::text <> '') and (dt_entrega_real_w > dt_entrega_prevista_w) then 
		 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_seq_tipo_w 
		from	inspecao_tipo_divergencia 
		where	cd_estabelecimento	= cd_estabelecimento_p 
		and	ie_tipo_divergencia	= 'PD' 
		and	ie_situacao = 'A';
		 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	inspecao_divergencia 
		where	nr_seq_inspecao	= nr_seq_inspecao_w 
		and	nr_seq_tipo	= nr_seq_tipo_w;
		 
		if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
			CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
		end if;
	end if;
	 
	/*PA - Diferenças de prazo entrega (Entregou antes)*/
 
	if (dt_entrega_real_w IS NOT NULL AND dt_entrega_real_w::text <> '') and (dt_entrega_prevista_w IS NOT NULL AND dt_entrega_prevista_w::text <> '') and (dt_entrega_real_w < dt_entrega_prevista_w) then 
		 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_seq_tipo_w 
		from	inspecao_tipo_divergencia 
		where	cd_estabelecimento	= cd_estabelecimento_p 
		and	ie_tipo_divergencia	= 'PA' 
		and	ie_situacao = 'A';
		 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	inspecao_divergencia 
		where	nr_seq_inspecao	= nr_seq_inspecao_w 
		and	nr_seq_tipo	= nr_seq_tipo_w;
		 
		if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
			CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
		end if;
	end if;
	 
	/*QT - Diferenças de quantidade*/
	 
	if (qt_inspecao_w IS NOT NULL AND qt_inspecao_w::text <> '') and (qt_ordem_w IS NOT NULL AND qt_ordem_w::text <> '') and (qt_inspecao_w <> qt_ordem_w) then 
	 
		select	coalesce(max(nr_sequencia),0), 
			coalesce(max(ie_consist_mot_dev),'S') 
		into STRICT	nr_seq_tipo_w, 
			ie_consist_mot_dev_w 
		from	inspecao_tipo_divergencia 
		where	cd_estabelecimento	= cd_estabelecimento_p 
		and	ie_tipo_divergencia	= 'QT' 
		and	ie_situacao = 'A';
		 
		if	((ie_consist_mot_dev_w = 'N') or 
			(ie_consist_mot_dev_w = 'S' AND ie_motivo_devolucao_w = 'Q')) then 
		 
			select	count(*) 
			into STRICT	qt_existe_w 
			from	inspecao_divergencia 
			where	nr_seq_inspecao	= nr_seq_inspecao_w 
			and	nr_seq_tipo	= nr_seq_tipo_w;
			 
			if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
				CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
			end if;
		end if;
	end if;
	 
	/*QTT - É quando a soma da quantidade das inspeções for maior que a quantidade do item da ordem*/
	 
	select	coalesce(max(nr_sequencia),0), 
		coalesce(max(ie_consist_mot_dev),'S') 
	into STRICT	nr_seq_tipo_w, 
		ie_consist_mot_dev_w 
	from	inspecao_tipo_divergencia 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_tipo_divergencia	= 'QTT' 
	and	ie_situacao = 'A';
	 
	 
	 
	if (nr_seq_tipo_w > 0) then 
 
		select	sum(qt_inspecao) 
		into STRICT	qt_inspecao_w 
		from	inspecao_recebimento 
		where	nr_ordem_compra = nr_ordem_compra_w 
		and	nr_item_oci = nr_item_oci_w;
		 
		if (qt_inspecao_w IS NOT NULL AND qt_inspecao_w::text <> '') and (qt_ordem_w IS NOT NULL AND qt_ordem_w::text <> '') and (qt_inspecao_w > qt_ordem_w) and	 
			((ie_consist_mot_dev_w = 'N') or 
			(ie_consist_mot_dev_w = 'S' AND ie_motivo_devolucao_w = 'Q')) then 
		 
			select	count(*) 
			into STRICT	qt_existe_w 
			from	inspecao_divergencia 
			where	nr_seq_inspecao	= nr_seq_inspecao_w 
			and	nr_seq_tipo	= nr_seq_tipo_w;
			 
			if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
				CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
			end if;
		end if;
	end if;
	 
	/*PG - Diferença na condição pagamento*/
 
	if (cd_condicao_pagamento_w IS NOT NULL AND cd_condicao_pagamento_w::text <> '') and (cd_cond_pagto_ordem_w IS NOT NULL AND cd_cond_pagto_ordem_w::text <> '') and (cd_condicao_pagamento_w <> cd_cond_pagto_ordem_w) then 
		 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_seq_tipo_w 
		from	inspecao_tipo_divergencia 
		where	cd_estabelecimento	= cd_estabelecimento_p 
		and	ie_tipo_divergencia	= 'PG' 
		and	ie_situacao = 'A';
		 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	inspecao_divergencia 
		where	nr_seq_inspecao	= nr_seq_inspecao_w 
		and	nr_seq_tipo	= nr_seq_tipo_w;
		 
		if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
			CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
		end if;
	end if;
	 
	/*ID - Devolução porque o item da inspecao está diferente do item da ordem*/
	 
	select	coalesce(max(nr_sequencia),0), 
		coalesce(max(ie_consist_mot_dev),'S') 
	into STRICT	nr_seq_tipo_w, 
		ie_consist_mot_dev_w 
	from	inspecao_tipo_divergencia 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_tipo_divergencia	= 'ID' 
	and	ie_situacao = 'A';
	 
	if	(ie_consist_mot_dev_w = 'S' AND ie_motivo_devolucao_w = 'D') then 
	 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	inspecao_divergencia 
		where	nr_seq_inspecao	= nr_seq_inspecao_w 
		and	nr_seq_tipo	= nr_seq_tipo_w;
	 
		if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
			CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
		end if;
	end if;
	 
	/*VL - Devolução com Diferenças de valores - valor unitário */
 
	select	coalesce(max(vl_unitario_material),0) 
	into STRICT	vl_unitario_ordem_w 
	from	ordem_compra_item 
	where	nr_ordem_compra = nr_ordem_compra_w 
	and	nr_item_oci = nr_item_oci_w;
	 
	if (vl_unitario_inspecao_w > 0) and (vl_unitario_ordem_w > 0) and (vl_unitario_inspecao_w <> vl_unitario_ordem_w) then 
	 
		select	coalesce(max(nr_sequencia),0), 
			coalesce(max(ie_consist_mot_dev),'S') 
		into STRICT	nr_seq_tipo_w, 
			ie_consist_mot_dev_w 
		from	inspecao_tipo_divergencia 
		where	cd_estabelecimento	= cd_estabelecimento_p 
		and	ie_tipo_divergencia	= 'VL' 
		and	ie_situacao = 'A';
		 
		if	((ie_consist_mot_dev_w = 'N') or 
			(ie_consist_mot_dev_w = 'S' AND ie_motivo_devolucao_w = 'P')) then 
			 
			select	count(*) 
			into STRICT	qt_existe_w 
			from	inspecao_divergencia 
			where	nr_seq_inspecao	= nr_seq_inspecao_w 
			and	nr_seq_tipo	= nr_seq_tipo_w;
			 
			if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
				CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
			end if;
		end if;
	end if;
	 
	/*VE - Devolução por validade expirada*/
 
	select	coalesce(max(nr_sequencia),0), 
		coalesce(max(ie_consist_mot_dev),'S') 
	into STRICT	nr_seq_tipo_w, 
		ie_consist_mot_dev_w 
	from	inspecao_tipo_divergencia 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_tipo_divergencia	= 'VE' 
	and	ie_situacao = 'A';
	 
	if	(ie_consist_mot_dev_w = 'S' AND ie_motivo_devolucao_w = 'V') then 
	 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	inspecao_divergencia 
		where	nr_seq_inspecao	= nr_seq_inspecao_w 
		and	nr_seq_tipo	= nr_seq_tipo_w;
		 
		if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
			CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
		end if;
	end if;	
	 
	if (qt_temperatura_w < qt_temp_min_transp_w) or (qt_temperatura_w > qt_temp_max_transp_w) then 
		/*TE - Temperatura fora padrão*/
 
		select	coalesce(max(nr_sequencia),0), 
		coalesce(max(ie_consist_mot_dev),'S') 
		into STRICT	nr_seq_tipo_w, 
			ie_consist_mot_dev_w 
		from	inspecao_tipo_divergencia 
		where	cd_estabelecimento	= cd_estabelecimento_p 
		and	ie_tipo_divergencia	= 'TE' 
		and	ie_situacao = 'A';
			 
		if	((ie_consist_mot_dev_w = 'N') or 
			(ie_consist_mot_dev_w = 'S' AND ie_motivo_devolucao_w = 'T')) then	 
	 
			select	count(*) 
			into STRICT	qt_existe_w 
			from	inspecao_divergencia 
			where	nr_seq_inspecao	= nr_seq_inspecao_w 
			and	nr_seq_tipo	= nr_seq_tipo_w;
			 
			if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
				CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
			end if;
		end if;
	end if;
	 
	/*IP - Integridade dos produtos*/
 
	select	coalesce(max(nr_sequencia),0), 
		coalesce(max(ie_consist_mot_dev),'S') 
	into STRICT	nr_seq_tipo_w, 
		ie_consist_mot_dev_w 
	from	inspecao_tipo_divergencia 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_tipo_divergencia	= 'IP' 
	and	ie_situacao = 'A';
	 
	if	(ie_consist_mot_dev_w = 'S' AND ie_motivo_devolucao_w = 'F') then	 
		 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	inspecao_divergencia 
		where	nr_seq_inspecao	= nr_seq_inspecao_w 
		and	nr_seq_tipo	= nr_seq_tipo_w;
		 
		if (nr_seq_tipo_w > 0) and (qt_existe_w = 0) then 
			CALL inserir_inspecao_divergencia(nr_seq_registro_p, nr_seq_inspecao_w, nr_seq_tipo_w, cd_material_w, nm_usuario_p);
		end if;
	end if;
	end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_divergencia_inspecao ( nr_seq_registro_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

