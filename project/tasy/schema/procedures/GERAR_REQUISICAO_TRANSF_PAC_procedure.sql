-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_requisicao_transf_pac ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, cd_setor_atual_p setor_atendimento.cd_setor_atendimento%type, cd_setor_destino_p setor_atendimento.cd_setor_atendimento%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_requisicao_w			requisicao_material.nr_requisicao%type;
cd_local_estoq_baixa_w		local_estoque.cd_local_estoque%type;
cd_local_destino_w			local_estoque.cd_local_estoque%type;
nr_prescricao_w			prescr_medica.nr_prescricao%type;
cd_material_w			material.cd_material%type;
qt_dispensar_hor_w			prescr_mat_hor.qt_dispensar_hor%type;
cd_unidade_medida_consumo_w	varchar(30);
cd_unidade_medida_estoque_w	varchar(30);
nr_sequencia_w			item_requisicao_material.nr_sequencia%type;
cd_pessoa_requisicao_w		requisicao_material.cd_pessoa_requisitante%type;
ie_status_lote_296_w		varchar(2);
ie_status_processo_297_w		varchar(2);
cd_operacao_movt_pac_w		parametro_estoque.cd_operacao_movt_pac%type;
ds_erro_w			varchar(1);

C01 CURSOR FOR
	SELECT	distinct
		a.nr_prescricao
	from	ap_lote c,
		prescr_mat_hor b,
		prescr_medica a
	where	a.nr_prescricao = b.nr_prescricao
	and	b.nr_prescricao = c.nr_prescricao
	and	b.nr_seq_lote = c.nr_sequencia
	and	a.nr_atendimento = nr_atendimento_p
	and	(a.nr_atendimento IS NOT NULL AND a.nr_atendimento::text <> '')
	and	b.qt_dispensar_hor > 0
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	coalesce(a.dt_suspensao::text, '') = ''
	--and	a.dt_liberacao_medico is not null
	and	coalesce(b.cd_motivo_baixa, 0) = 0
	and	((coalesce(ie_status_lote_296_w::text, '') = '') or (c.ie_status_lote in (ie_status_lote_296_w)))
	and	((coalesce(ie_status_processo_297_w::text, '') = '') or (substr(obter_status_processo(b.nr_seq_processo),1,20) in (ie_status_processo_297_w)) or (coalesce(b.nr_seq_processo::text, '') = ''));

C02 CURSOR FOR
	SELECT	cd_material,
		qt_dispensar_hor,
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque
	from	prescr_mat_hor
	where	nr_prescricao = nr_prescricao_w
	and	qt_dispensar_hor > 0;


BEGIN

begin

select	max(cd_local_estoque)
into STRICT	cd_local_estoq_baixa_w
from	setor_atendimento
where	cd_setor_atendimento = cd_setor_atual_p;

select	coalesce(max(cd_local_estoque), cd_local_estoq_baixa_w)
into STRICT	cd_local_estoq_baixa_w
from	setor_local
where	cd_setor_atendimento = cd_setor_atual_p
and	ie_loca_estoque_pac = 'S';

select	max(cd_local_estoque)
into STRICT	cd_local_destino_w
from	setor_atendimento
where	cd_setor_atendimento = cd_setor_destino_p;

select	coalesce(max(cd_local_estoque), cd_local_destino_w)
into STRICT	cd_local_destino_w
from	setor_local
where	cd_setor_atendimento = cd_setor_destino_p
and	ie_loca_estoque_pac = 'S';

select	max(obter_pessoa_fisica_usuario(nm_usuario_p, 'C'))
into STRICT	cd_pessoa_requisicao_w
;

select	max(cd_operacao_movt_pac)
into STRICT	cd_operacao_movt_pac_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

ie_status_lote_296_w := obter_param_usuario(3111, 296, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_status_lote_296_w);
ie_status_processo_297_w := obter_param_usuario(3111, 297, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_status_processo_297_w);

open C01;
loop
fetch C01 into
	nr_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	nextval('requisicao_seq')
	into STRICT	nr_requisicao_w
	;

	insert	into requisicao_material(
		nr_requisicao,
		cd_estabelecimento,
		cd_local_estoque,
		cd_setor_atendimento,
		dt_solicitacao_requisicao,
		dt_atualizacao,
		dt_liberacao,
		dt_aprovacao,
		nm_usuario,
		cd_operacao_estoque,
		cd_pessoa_requisitante,
		cd_estabelecimento_destino,
		cd_local_estoque_destino,
		cd_centro_custo,
		ie_urgente,
		nr_prescricao,
		nr_atendimento)
	values (	nr_requisicao_w,
		cd_estabelecimento_p,
		cd_local_estoq_baixa_w,
		cd_setor_destino_p,
		clock_timestamp(),
		clock_timestamp(),
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		cd_operacao_movt_pac_w,
		cd_pessoa_requisicao_w,
		cd_estabelecimento_p,
		cd_local_destino_w,
		null,
		'N',
		nr_prescricao_w,
		nr_atendimento_p);

	open C02;
	loop
	fetch C02 into
		cd_material_w,
		qt_dispensar_hor_w,
		cd_unidade_medida_consumo_w,
		cd_unidade_medida_estoque_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	coalesce(max(nr_sequencia),0) +1
		into STRICT	nr_sequencia_w
		from	item_requisicao_material
		where	nr_requisicao = nr_requisicao_w;

		insert into item_requisicao_material(nr_requisicao,
			nr_sequencia,
			cd_estabelecimento,
			cd_material,
			qt_material_requisitada,
			qt_material_atendida,
			vl_material,
			dt_atualizacao,
			nm_usuario,
			cd_unidade_medida,
			qt_estoque,
			cd_unidade_medida_estoque,
			ie_acao,
			cd_motivo_baixa)
		values (	nr_requisicao_w,
			nr_sequencia_w,
			cd_estabelecimento_p,
			cd_material_w,
			qt_dispensar_hor_w,
			0,
			0,
			clock_timestamp(),
			nm_usuario_p,
			cd_unidade_medida_consumo_w,
			0,
			cd_unidade_medida_estoque_w,
			'1',
			0);
		end;
	end loop;
	close C02;

	end;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

exception
when others then
	ds_erro_w := 'N';
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_requisicao_transf_pac ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, cd_setor_atual_p setor_atendimento.cd_setor_atendimento%type, cd_setor_destino_p setor_atendimento.cd_setor_atendimento%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

