-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_atualizar_result_item ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, cd_analito_p text, qt_resultado_p bigint, pr_resultado_p bigint, ds_resultado_p text, ds_observacao_p text, cd_material_exame_p text, ie_reenvio_p text, nm_usuario_p text, dt_coleta_p timestamp, ds_referencia_p text, ds_unidade_medida_p text, nr_doc_lab_p text, dt_resultado_p timestamp, ds_erro_p INOUT text, nr_seq_exame_atualiz_p bigint default null, ie_resultado_referencia_p text default null, ie_resultado_critico_p text default null, ds_regra_result_critico_p text default null, cd_metodo_p text default null, qt_minima_p bigint default null, qt_maxima_p bigint default null, pr_minimo_p bigint default null, pr_maximo_p bigint default null, ie_final_p text default null) AS $body$
DECLARE




nr_seq_exame_w		bigint;
cd_exame_w		varchar(20);
ie_formato_resultado_w	varchar(3);
nr_seq_conjunto_w		bigint	:= null;


qt_resultado_w		double precision	:= null;
pr_resultado_w		double precision	:= null;
ds_resultado_w		varchar(4000)	:= null;
nr_seq_resultado_w		exame_lab_result_item.nr_seq_resultado%type;
nr_sequencia_w		exame_lab_result_item.nr_sequencia%type;
ie_valor_numerico_w 	char(1);
nr_seq_exame_ww    exame_laboratorio.nr_seq_exame%type;



BEGIN

update	result_laboratorio
set	dt_coleta = dt_coleta_p
where	nr_prescricao = nr_prescricao_p
and	nr_seq_prescricao = nr_seq_prescr_p;

select	a.nr_seq_exame,
	coalesce(b.cd_exame_integracao, b.cd_exame),
	b.ie_formato_resultado
into STRICT	nr_seq_exame_w,
	cd_exame_w,
	ie_formato_resultado_w
from	exame_laboratorio b,
	prescr_procedimento a
where	a.nr_seq_exame	= b.nr_seq_exame
  and	a.nr_prescricao	= nr_prescricao_p
  and	a.nr_sequencia	= nr_seq_prescr_p;



ds_resultado_w	:= ds_resultado_p;



if (ds_resultado_p IS NOT NULL AND ds_resultado_p::text <> '') and (coalesce(qt_resultado_p::text, '') = '') and (coalesce(pr_resultado_p::text, '') = '') then
	if (cd_exame_w <> cd_exame_p) then

	
		if (replace(cd_exame_w,'URG','') <> replace(cd_exame_p,'URG','')) then

			begin


			select	c.nr_seq_exame
			into STRICT	nr_seq_conjunto_w
			from	exame_laboratorio c,
				exame_lab_format_item b,
				exame_lab_format a
			where	a.nr_seq_formato	= b.nr_seq_formato
			  and	b.nr_seq_exame		= c.nr_seq_exame
			  and	a.nr_seq_exame		= nr_seq_exame_w
			  and (coalesce(cd_exame_integracao, cd_exame) = cd_exame_p
			      	 or coalesce(cd_exame_integracao, cd_exame) = replace(cd_exame_p,'URG',''));
			exception
				when others then
					--'Exame nao encontrado!' || nr_seq_exame_w || chr(10) ||

									--'Prescricao:' || nr_prescricao_p || ' - Seq prescr' || nr_seq_prescr_p || ' - Exame:' || cd_exame_p);
					CALL wheb_mensagem_pck.exibir_mensagem_abort(264058,'NR_SEQ_EXAME='||nr_seq_exame_w||';NR_PRESCRICAO='||nr_prescricao_p||
																   ';NR_SEQ_PRESCR='||nr_seq_prescr_p||';CD_EXAME='||cd_exame_p);

			end;
		end if;WITH RECURSIVE cte AS (

		

		if (replace(cd_exame_w,'URG','') = replace(cd_exame_p,'URG','')) or (nr_seq_conjunto_w IS NOT NULL AND nr_seq_conjunto_w::text <> '') then


			begin
			select	ie_formato_resultado
			into STRICT	ie_formato_resultado_w
			from	exame_laboratorio WHERE nr_seq_superior = coalesce(nr_seq_conjunto_w, nr_seq_exame_w)
  UNION ALL

		

		if (replace(cd_exame_w,'URG','') = replace(cd_exame_p,'URG','')) or (nr_seq_conjunto_w IS NOT NULL AND nr_seq_conjunto_w::text <> '') then


			begin
			select	ie_formato_resultado
			into STRICT	ie_formato_resultado_w
			from	exame_laboratorio JOIN cte c ON (c.prior nr_seq_exame = nr_seq_superior)

) SELECT * FROM cte WHERE coalesce(cd_exame_integracao, cd_exame) = cd_analito_p
			      or	coalesce(cd_exame_integracao, cd_exame) = replace(cd_analito_p,'URG','');
;
					
			exception
			when no_data_found then
				--'Analito codigo '||cd_analito_p||' nao existe vinculado ao exame seq. '||nvl(nr_seq_conjunto_w, nr_seq_exame_w)||' - Prescricao:' || nr_prescricao_p||' - Exame:' || cd_exame_p||'#@#@');
				CALL wheb_mensagem_pck.exibir_mensagem_abort(264059,'CD_ANALITO='||cd_analito_p||';NR_SEQ_EXAME='||coalesce(nr_seq_conjunto_w, nr_seq_exame_w)||';NR_PRESCRICAO='||nr_prescricao_p||
																   ';NR_SEQ_PRESCR='||nr_seq_prescr_p||';CD_EXAME='||cd_exame_p);		
			end;

		end if;

	end if;



	begin
		if (ie_formato_resultado_w = 'V') then
			qt_resultado_w	:= (ds_resultado_w)::numeric;
			ds_resultado_w	:= '';
		elsif (ie_formato_resultado_w = 'P') then
			pr_resultado_w	:= (ds_resultado_w)::numeric;
			ds_resultado_w	:= '';
	
		elsif (ie_formato_resultado_w = 'DV') then

			select
			obter_se_somente_numero(replace(translate(ds_resultado_w,'.'',',' '), ' ', ''))
			into STRICT ie_valor_numerico_w
			;
	
			if (ie_valor_numerico_w = 'S') then			
				qt_resultado_w	:= (replace(ds_resultado_w, '.', ','))::numeric;
				ds_resultado_w	:= '';
			else
				ds_resultado_w	:= ds_resultado_w;
				qt_resultado_w	:= '';
			end if;
		end if;
	exception
		when data_exception then
			begin
				if (nr_seq_exame_atualiz_p IS NOT NULL AND nr_seq_exame_atualiz_p::text <> '')then
					select	b.nr_seq_exame,
						coalesce(b.cd_exame_integracao, b.cd_exame),
						b.ie_formato_resultado
					into STRICT	nr_seq_exame_w,
						cd_exame_w,
						ie_formato_resultado_w
					from	exame_laboratorio b
					where	b.nr_seq_exame	= nr_seq_exame_atualiz_p;	
					
					if (ie_formato_resultado_w = 'V') then
						qt_resultado_w	:= (ds_resultado_w)::numeric;
						ds_resultado_w	:= '';
					elsif (ie_formato_resultado_w = 'P') then
						pr_resultado_w	:= (ds_resultado_w)::numeric;
						ds_resultado_w	:= '';
						
					elsif (ie_formato_resultado_w = 'DV') then
							select
							obter_se_somente_numero(replace(translate(ds_resultado_w,'.'',',' '), ' ', ''))
							into STRICT ie_valor_numerico_w
							;
					
							if (ie_valor_numerico_w = 'S') then			
								qt_resultado_w	:= (replace(ds_resultado_w, '.', ','))::numeric;
								ds_resultado_w	:= '';
							else
								ds_resultado_w	:= ds_resultado_w;
								qt_resultado_w	:= '';
							end if;
					end if;
				end if;
			exception	
				when data_exception then	
				--'Nao foi possivel inserir o resultado no exame ' ||nvl(cd_analito_p,cd_exame_p)||' favor verificar o formato do mesmo #@#@');
				CALL wheb_mensagem_pck.exibir_mensagem_abort(264061,'CD_EXAME='||coalesce(cd_analito_p,cd_exame_p));
			end;
	end;

end if;

ds_erro_p := Atualizar_Lab_Result_Item(	nr_prescricao_p, nr_seq_prescr_p, coalesce(cd_analito_p,cd_exame_p), qt_resultado_w, pr_resultado_w, ds_resultado_w, ds_observacao_p, cd_material_exame_p, ie_reenvio_p, nm_usuario_p, dt_coleta_p, ds_referencia_p, ds_unidade_medida_p, nr_doc_lab_p, dt_resultado_p, ds_erro_p, nr_seq_exame_atualiz_p, cd_metodo_p, qt_minima_p, qt_maxima_p, pr_minimo_p, pr_maximo_p, ie_final_p => ie_final_p);

		
if ((Obter_Equipamento_Exame(nr_seq_exame_w, null, 'COVID19') IS NOT NULL AND (Obter_Equipamento_Exame(nr_seq_exame_w, null, 'COVID19'))::text <> '')) and (upper(nm_usuario_p) = upper('webservice') ) then
	
	begin
	select nr_seq_exame
	into STRICT   nr_seq_exame_ww
	from   prescr_procedimento
	where  nr_prescricao = nr_prescricao_p
	and     nr_sequencia = nr_seq_prescr_p
	and     ie_status_atend >= 35
	and    coalesce(dt_result_integracao::text, '') = '';

	exception
	when too_many_rows or no_data_found then
		nr_seq_exame_ww := null;
	end;
	if (nr_seq_exame_ww IS NOT NULL AND nr_seq_exame_ww::text <> '') then
		
		CALL send_Exam_Result_DataSus(nr_prescricao_p, nr_seq_exame_ww, nr_seq_prescr_p, 'COVID19');
		
		update 	prescr_procedimento
		set 	dt_result_integracao = clock_timestamp()
		where  	nr_prescricao = nr_prescricao_p
		and     nr_sequencia = nr_seq_prescr_p
		and     ie_status_atend >= 35;

	end if;
end if;
		
select 	coalesce(max(a.nr_seq_resultado),0),
		coalesce(max(b.nr_sequencia),0)
into STRICT	nr_seq_resultado_w,
		nr_sequencia_w
from	exame_lab_result_item b,
		exame_lab_resultado a
where 	nr_prescricao		= nr_prescricao_p
and 	b.nr_seq_prescr		= coalesce(nr_seq_prescr_p, nr_seq_prescr)
and 	a.nr_seq_resultado	= b.nr_seq_resultado
and 	b.nr_seq_exame		= nr_seq_exame_atualiz_p;				
		

update 	exame_lab_result_item
set 	ie_resultado_referencia = ie_resultado_referencia_p,
		ie_resultado_critico = ie_resultado_critico_p,
		ds_regra_result_critico = ds_regra_result_critico_p
where 	nr_seq_resultado = nr_seq_resultado_w
and		nr_sequencia = nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_atualizar_result_item ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, cd_analito_p text, qt_resultado_p bigint, pr_resultado_p bigint, ds_resultado_p text, ds_observacao_p text, cd_material_exame_p text, ie_reenvio_p text, nm_usuario_p text, dt_coleta_p timestamp, ds_referencia_p text, ds_unidade_medida_p text, nr_doc_lab_p text, dt_resultado_p timestamp, ds_erro_p INOUT text, nr_seq_exame_atualiz_p bigint default null, ie_resultado_referencia_p text default null, ie_resultado_critico_p text default null, ds_regra_result_critico_p text default null, cd_metodo_p text default null, qt_minima_p bigint default null, qt_maxima_p bigint default null, pr_minimo_p bigint default null, pr_maximo_p bigint default null, ie_final_p text default null) FROM PUBLIC;

