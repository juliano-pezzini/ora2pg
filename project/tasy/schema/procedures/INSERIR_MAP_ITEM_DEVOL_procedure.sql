-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_map_item_devol ( nr_devolucao_p bigint, nr_sequencia_p bigint, cd_tipo_baixa_p bigint, qt_material_estoque_p bigint, cd_local_estoque_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_atualizacao_w		timestamp		:= clock_timestamp();
nr_atendimento_w		bigint	:= 0;
nr_sequencia_w			bigint	:= 0;
cd_setor_atendimento_w		integer    	:= 0;
dt_entrada_unidade_w		timestamp;
cd_material_w			integer	:= 0;
qt_material_w			double precision	:= 0;
qt_material_disp_w		double precision	:= 0;
qt_material_conta_w		double precision	:= 0;
qt_material_liq_w		double precision	:= 0;
dt_recebimento_w		timestamp;
qt_mat_atend_w			bigint;
cd_unidade_medida_w		varchar(30)	:= '';
flag_ok_w			varchar(1)	:= 'S';
nr_prescricao_w			bigint	:= 0;
nr_seq_prescricao_w		bigint	:= 0;
cd_motivo_devolucao_w		varchar(03);
ie_conta_paciente_w		varchar(1);
ie_fim_conta_w			varchar(1);
cd_cgc_fornec_w			varchar(14);
nr_seq_atendimento_w		bigint;
ds_material_w			varchar(255);
nr_seq_lote_fornec_w		bigint;
dt_baixa_conta_w		timestamp;
ie_insere_w			varchar(1) := 'S';
nr_seq_item_dev_w		bigint;
ds_erro_w			varchar(2000);
cd_local_estoque_w		smallint;
cd_plano_convenio_w		varchar(10);
ie_cons_item_exc_w		varchar(1);
cd_convenio_parametro_w		convenio.cd_convenio%type;
cd_categoria_parametro_w	categoria_convenio.cd_categoria%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_material_prescricao_w	material.cd_material%type;
cd_material_conta_w		material.cd_material%type;
cd_material_exec_w		material.cd_material%type;
ie_conta_definitiva_w	varchar(1);
ie_status_acerto_w		conta_paciente.ie_status_acerto%type;

c01 CURSOR FOR
	SELECT	a.nr_atendimento,
		coalesce(b.dt_entrada_unidade, a.dt_entrada_unidade) dt_entrada_unidade,
		a.cd_setor_atendimento,
		b.cd_material,
		b.qt_material,
		b.cd_unidade_medida,
		b.nr_prescricao,
		CASE WHEN b.nr_sequencia_prescricao=0 THEN  null  ELSE b.nr_sequencia_prescricao END ,
		b.cd_motivo_devolucao,
		b.cd_cgc_fornec,
		b.nr_seq_atendimento,
		substr(obter_desc_material(b.cd_material),1,255),
		b.nr_seq_lote_fornec,
		dt_baixa_conta,
		b.nr_sequencia,
		b.cd_local_estoque
	from	devolucao_material_pac a,
		item_devolucao_material_pac b
	where	a.nr_devolucao  = nr_devolucao_p
	and	b.nr_devolucao  = a.nr_devolucao
	and	coalesce(dt_recebimento::text, '') = '';


BEGIN
flag_ok_w 			:= 'S';
dt_recebimento_w		:= clock_timestamp();

/* obter o registro da devolucao de material do paciente */

begin
select	a.ie_conta_paciente
into STRICT	ie_conta_paciente_w
from	tipo_baixa_prescricao a
where	a.ie_prescricao_devolucao = 'D'
and	a.cd_tipo_baixa = cd_tipo_baixa_p;
exception
	when others then
	flag_ok_w := 'N';
end;

if (flag_ok_w = 'N') then
	goto final;
end if;

ie_cons_item_exc_w := obter_param_usuario(42, 117, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_cons_item_exc_w);
ie_conta_definitiva_w := obter_param_usuario(42, 93, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_conta_definitiva_w);

open C01;
loop
fetch C01 into	
	nr_atendimento_w,
	dt_entrada_unidade_w,
	cd_setor_atendimento_w,
	cd_material_w,
	qt_material_w,
	cd_unidade_medida_w,
	nr_prescricao_w,
	nr_seq_prescricao_w,
	cd_motivo_devolucao_w,
	cd_cgc_fornec_w,
	nr_seq_atendimento_w,
	ds_material_w,
	nr_seq_lote_fornec_w,
	dt_baixa_conta_w,
	nr_seq_item_dev_w,
	cd_local_estoque_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (coalesce(ie_conta_definitiva_w,'N') = 'N') then
		
		select 	max(ie_status_acerto)
		into STRICT	ie_status_acerto_w
		from 	conta_paciente
		where 	nr_interno_conta = 	(SELECT	max(nr_interno_conta) 
									from	material_atend_paciente 
									where	nr_sequencia = nr_seq_atendimento_w);
		
		if (coalesce(ie_status_acerto_w,0) = 2) then
			ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(198154, 	'cd_material='||cd_material_w ||
																			';ds_material='||ds_material_w ||
																			';nr_seq_atendimento='||nr_seq_atendimento_W)|| chr(13);
		end if;
	end if;
	
	if (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_seq_prescricao_w,0) > 0) then

		select	count(*)
		into STRICT	qt_mat_atend_w
		from	material_atend_paciente
		where	nr_prescricao		= nr_prescricao_w
		and	nr_sequencia_prescricao	= nr_seq_prescricao_w;

		select	max(cd_material)
		into STRICT	cd_material_prescricao_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_w
		and	nr_sequencia = nr_seq_prescricao_w;

		if (qt_mat_atend_w = 0) then
			flag_ok_w := 'N';
			ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(267212,'ds_material='||ds_material_w) || chr(13);
			--'O material ' || ds_material_w || ' nao pode ser devolvido porque nao foi executado!
		end if;
	end if;
	
	/*   se o paciente ja teve o fim atendimento informado nao gerar nova conta */

	select	ie_fim_conta,
		coalesce(dt_alta, clock_timestamp()),
		cd_estabelecimento,
		obter_dados_categ_conv(nr_atendimento, 'P')
	into STRICT	ie_fim_conta_w,
		dt_recebimento_w,
		cd_estabelecimento_w,
		cd_plano_convenio_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_w;
	
	if (ie_fim_conta_w = 'F') and (ie_conta_paciente_w = 'S') then
		ie_conta_paciente_w := 'N';
	end if;
	
	qt_material_liq_w := qt_material_w;
	
	if (qt_material_liq_w < 0) then /*Identificar itens negativos*/
		flag_ok_w := 'N';
		ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(267232, 'cd_material='||cd_material_w||';'||'qt_material_liq='||qt_material_liq_w) || chr(13);
		--'Erro ao devolver o item: ' || cd_material_w || ' QTD: ' || qt_material_liq_w || chr(13) ||'Quantidade de devolucao invalida!');
	end if;
	
	select	max(b.cd_convenio_parametro),
		max(b.cd_categoria_parametro),
		max(a.cd_setor_atendimento),
		max(a.cd_material_exec)
	into STRICT	cd_convenio_parametro_w,
		cd_categoria_parametro_w,
		cd_setor_atendimento_w,
		cd_material_exec_w
	from	conta_paciente b,
		material_atend_paciente a
	where	a.nr_interno_conta = b.nr_interno_conta
	and	a.nr_sequencia = nr_seq_atendimento_w;
	
	cd_material_conta_w := obter_material_conta(cd_estabelecimento_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
			cd_material_prescricao_w, cd_material_w, cd_material_w, cd_plano_convenio_w, cd_setor_atendimento_w,
			dt_recebimento_w, null, nr_prescricao_w);

	if (ie_cons_item_exc_w = 'S') then
		select	coalesce(sum(a.qt_material),0)
		into STRICT	qt_material_disp_w
		from	material_atend_paciente a
		where	a.nr_atendimento = nr_atendimento_w
		and	((coalesce(nr_prescricao_w,0) = 0) or (nr_prescricao_w = a.nr_prescricao))
		and	((coalesce(nr_seq_prescricao_w,0) = 0) or (nr_seq_prescricao_w = a.nr_sequencia_prescricao))
		and	a.cd_material in ((SELECT x.cd_material from material x where x.cd_material_generico = cd_material_w
			
union
 select x.cd_material from material x where x.cd_material = cd_material_w
			
union
 select x.cd_material from material x where x.cd_material_generico = obter_material_generico(cd_material_w)
			
union
 select x.cd_material from material x where x.cd_material = cd_material_conta_w))
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and (coalesce(nr_seq_atendimento_w::text, '') = '' or a.nr_sequencia = nr_seq_atendimento_w);
	else
		select	coalesce(sum(a.qt_material),0)
		into STRICT	qt_material_disp_w
		from	material_atend_paciente a
		where	a.nr_atendimento = nr_atendimento_w
		and	((coalesce(nr_prescricao_w,0) = 0) or (nr_prescricao_w = a.nr_prescricao))
		and	((coalesce(nr_seq_prescricao_w,0) = 0) or (nr_seq_prescricao_w = a.nr_sequencia_prescricao))
		and	a.cd_material in ((SELECT x.cd_material from material x where x.cd_material_generico = cd_material_w
			
union
 select x.cd_material from material x where x.cd_material = cd_material_w
			
union
 select x.cd_material from material x where x.cd_material_generico = obter_material_generico(cd_material_w)
			
union
 select x.cd_material from material x where x.cd_material = cd_material_conta_w));
	end if;
	
	if (qt_material_w > qt_material_disp_w) then
		flag_ok_w := 'N';
		ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(267214,'ds_material='|| ds_material_w || ';qt_material_disp=' || qt_material_disp_w || ';' ||
									'qt_material_estoque=' || qt_material_w) || chr(13);
	end if;
	
	/*   inserir dados do material */

	if (flag_ok_w = 'S') and (ie_conta_paciente_w = 'S') and (dt_baixa_conta_w IS NOT NULL AND dt_baixa_conta_w::text <> '') then
		begin
		select	nextval('material_atend_paciente_seq')
		into STRICT	nr_sequencia_w
		;
		
		insert into material_atend_paciente(
			nr_sequencia,
			nr_atendimento,
			dt_entrada_unidade,
			cd_material,
			dt_atendimento,
			cd_unidade_medida,
			qt_material,
			dt_atualizacao,
			nm_usuario,
			cd_convenio,
			cd_categoria,
			dt_prescricao,
			cd_material_prescricao,
			ie_via_aplicacao,
			vl_material,
			cd_tab_preco_material,
			dt_vigencia_tabela,
			nr_prescricao,
			nr_sequencia_prescricao,
			cd_acao,
			cd_setor_atendimento,
			qt_devolvida,
			cd_motivo_devolucao,
			nr_cirurgia,
			nr_doc_convenio,
			qt_executada,
			dt_conta,
			vl_unitario,
			cd_proced_referencia,
			nr_aih,
			ie_valor_informado,
			nr_seq_autorizacao,
			cd_material_exec,
			nr_seq_atepacu,
			cd_cgc_fornecedor,
			ie_auditoria,
			cd_local_estoque,
			nr_seq_cor_exec,
			nr_seq_aih,
			nr_seq_lote_fornec,
			nr_devolucao,
			nr_seq_item_devol)
		SELECT	nr_sequencia_w,
			nr_atendimento_w,
			dt_entrada_unidade_w,
			cd_material_w,
			dt_recebimento_w,
			cd_unidade_medida_w,
			(0 - qt_material_liq_w),
			dt_atualizacao_w,
			nm_usuario_p,
			cd_convenio,
			cd_categoria,
			dt_prescricao,
			cd_material_prescricao,
			ie_via_aplicacao,
			(qt_material_liq_w * vl_unitario * -1),
			cd_tab_preco_material,
			dt_vigencia_tabela,
			nr_prescricao_w,
			coalesce(nr_seq_prescricao_w, nr_sequencia_prescricao) ,
			2,
			cd_setor_atendimento,
			qt_material_liq_w,
			cd_motivo_devolucao_w,
			nr_cirurgia,
			nr_doc_convenio,
			0,
			dt_conta,
			vl_unitario,
			cd_proced_referencia,
			nr_aih,
			'N',
			nr_seq_autorizacao,
			cd_material_w,
			nr_seq_atepacu,
			cd_cgc_fornec_w,
			ie_auditoria,
			null,
			100,
			nr_seq_aih,
			nr_seq_lote_fornec_w,
			nr_devolucao_p,
			nr_seq_item_dev_w
		from	material_atend_paciente
		where	nr_sequencia = nr_seq_atendimento_w;
		
		update	material_atend_paciente
		set	cd_local_estoque = cd_local_estoque_w
		where	nr_sequencia = nr_sequencia_w;
		
		exception
			when others then
				begin
				flag_ok_w := 'N';
				ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(267237,'DS_ERRO=' || sqlerrm);
				end;
		end;
		
		/*   recalcular o valor do material/conta devido alteracao da quantidade */

		if (nr_atendimento_w > 0) and (ie_conta_paciente_w = 'S') and (flag_ok_w = 'S')  then
			begin
			CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);
			end;
		end if;
		
		
	end if;

	end;
end loop;
close C01;
	
if (flag_ok_w = 'S') then
	commit;
else
	rollback;
end if;

<<final>>

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	CALL gravar_log_tasy(3232, flag_ok_w || ' - ' || ds_erro_w, nm_usuario_p);
	commit;
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(182482,'DS_ERRO_P='||ds_erro_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_map_item_devol ( nr_devolucao_p bigint, nr_sequencia_p bigint, cd_tipo_baixa_p bigint, qt_material_estoque_p bigint, cd_local_estoque_p bigint, nm_usuario_p text) FROM PUBLIC;

