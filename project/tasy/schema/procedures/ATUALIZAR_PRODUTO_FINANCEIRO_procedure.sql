-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_produto_financeiro (nr_seq_caixa_rec_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_tipo_documento_w	varchar(10);
nr_documento_w		bigint;
ie_tipo_doc_pagto_w	varchar(10);
vl_recebido_w		double precision;
nr_doc_pagto_w		bigint;
nr_seq_produto_w	bigint;
nr_seq_grupo_prod_w	bigint;
count_w			bigint;
cd_estabelecimento_w	bigint;
cd_cgc_w		varchar(14);


c01 CURSOR FOR
SELECT	'A', --Adiantamento,
	nr_adiantamento,
	vl_adiantamento
from	adiantamento
where	nr_seq_caixa_rec	= nr_seq_caixa_rec_p

union all

select	'T', --Titulo,
	nr_titulo,
	vl_recebido
from	titulo_receber_liq
where	nr_seq_caixa_rec	= nr_seq_caixa_rec_p

union all

select	'M',
	null,
	vl_transacao
from	movto_trans_financ
where	nr_seq_caixa_rec	= nr_seq_caixa_rec_p;

c02 CURSOR FOR
SELECT	'CH', --Cheque
	nr_seq_cheque
from	cheque_cr
where	nr_seq_caixa_rec	= nr_seq_caixa_rec_p

union all

select	'CA', --Cartão
	nr_sequencia
from	movto_cartao_cr
where	nr_seq_caixa_rec	= nr_seq_caixa_rec_p;


BEGIN

open C01;
loop
fetch C01 into
	ie_tipo_documento_w,
	nr_documento_w,
	vl_recebido_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	if (ie_tipo_documento_w = 'A') then --Adiantamento
		select	max(b.nr_seq_produto),
			max(a.nr_seq_grupo_prod)
		into STRICT	nr_seq_produto_w,
			nr_seq_grupo_prod_w
		from	adiantamento_classif b,
			adiantamento a
		where	a.nr_adiantamento	= b.nr_adiantamento
		and	a.nr_adiantamento	= nr_documento_w;
	elsif (ie_tipo_documento_w = 'T') then --Titulo
		select	max(b.nr_seq_produto),
			max(a.nr_seq_grupo_prod)
		into STRICT	nr_seq_produto_w,
			nr_seq_grupo_prod_w
		from	titulo_receber_classif b,
			titulo_receber a
		where	a.nr_titulo		= b.nr_titulo
		and	a.nr_titulo		= nr_documento_w;
	end if;

	if (nr_seq_produto_w IS NOT NULL AND nr_seq_produto_w::text <> '') or (ie_tipo_documento_w = 'M') then

		open C02;
		loop
		fetch C02 into
			ie_tipo_doc_pagto_w,
			nr_doc_pagto_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */

			if (coalesce(nr_seq_grupo_prod_w::text, '') = '') and /*Se o documento não tem grupo mas possui produto, busca o grupo do produto*/
				(nr_seq_produto_w IS NOT NULL AND nr_seq_produto_w::text <> '') then

				select	max(b.nr_seq_grupo_sup)
				into STRICT	nr_seq_grupo_prod_w
				from	produto_financeiro a,
					grupo_prod_financ b
				where	b.nr_sequencia	= a.nr_seq_grupo
				and	a.nr_sequencia	= nr_seq_produto_w;

			end if;

			if (ie_tipo_doc_pagto_w = 'CH') then --Cheque
				if (coalesce(nr_seq_produto_w::text, '') = '') then

					select	max(cd_estabelecimento),
						max(cd_cgc)
					into STRICT	cd_estabelecimento_w,
						cd_cgc_w
					from	cheque_cr
					where	nr_seq_cheque	= nr_doc_pagto_w;

					SELECT * FROM obter_produto_financeiro(cd_estabelecimento_w, null, cd_cgc_w, nr_seq_produto_w, null, null, nr_seq_grupo_prod_w) INTO STRICT nr_seq_produto_w, nr_seq_grupo_prod_w;

				end if;

				update	cheque_cr
				set	nr_seq_grupo_prod	= coalesce(nr_seq_grupo_prod_w,nr_seq_grupo_prod),
					nr_seq_produto		= coalesce(nr_seq_produto_w,nr_seq_produto)
				where	nr_seq_cheque		= nr_doc_pagto_w;

			elsif (ie_tipo_doc_pagto_w = 'CA') then --Cartão
				select	count(*)
				into STRICT	count_w
				from	movto_cartao_cr_classif
				where	nr_seq_movto	= nr_doc_pagto_w;

				if (count_w > 0) then
					update	movto_cartao_cr_classif
					set	nr_seq_produto	= nr_seq_produto_w
					where	nr_seq_movto	= nr_doc_pagto_w;
				else
					insert into movto_cartao_cr_classif(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_movto,
							cd_conta_financ,
							vl_classificacao,
							nr_seq_produto)
						values (nextval('movto_cartao_cr_classif_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_doc_pagto_w,
							null,
							vl_recebido_w,
							nr_seq_produto_w);
				end if;

				update	movto_cartao_cr
				set	nr_seq_grupo_prod	= nr_seq_grupo_prod_w
				where	nr_sequencia		= nr_doc_pagto_w;
			end if;

		end loop;
		close C02;
	end if;

end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_produto_financeiro (nr_seq_caixa_rec_p bigint, nm_usuario_p text) FROM PUBLIC;

