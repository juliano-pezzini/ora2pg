-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_coparticipacao_disc ( nr_seq_lote_disc_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
ie_tipo_segurado_w		pls_conta.ie_tipo_segurado%type;
ie_retorno_w			varchar(10);
nr_seq_disc_proc_w		pls_discussao_proc.nr_sequencia%type;
nr_seq_disc_mat_w		pls_discussao_mat.nr_sequencia%type;
nr_seq_lote_w			pls_contestacao_discussao.nr_seq_lote%type;
ie_tipo_despesa_w		pls_conta_proc.ie_tipo_despesa%type;
nr_seq_proc_w			pls_conta_proc.nr_sequencia%type;

-- Buscar os itens para a geração de coparticipação - C02 / C03
C02 CURSOR FOR
	SELECT	b.nr_seq_conta_proc,
		d.nr_sequencia,
		d.nr_seq_segurado,
		d.ie_tipo_segurado,
		b.nr_sequencia,
		a.nr_seq_lote,
		c.ie_tipo_despesa ie_tipo_despesa,
		c.nr_sequencia nr_seq_proc
	from	pls_conta			d,
		pls_conta_proc			c,
		pls_discussao_proc		b,
		pls_contestacao_discussao	a
	where	a.nr_sequencia		= b.nr_seq_discussao
	and	b.nr_seq_conta_proc 	= c.nr_sequencia
	and	c.nr_seq_conta		= d.nr_sequencia
	and	a.nr_seq_lote		= nr_seq_lote_disc_p
	and	exists (SELECT	1
			from	pls_contestacao_proc x
			where	x.nr_seq_contestacao	= a.nr_seq_contestacao
			and	x.nr_seq_conta_proc	= b.nr_seq_conta_proc
			and	x.vl_atual		= 0)
	
union all

	select	b.nr_seq_conta_proc,
		d.nr_sequencia,
		d.nr_seq_segurado,
		d.ie_tipo_segurado,
		b.nr_sequencia,
		a.nr_seq_lote,
		c.ie_tipo_despesa ie_tipo_despesa,
		c.nr_sequencia nr_seq_proc
	from	pls_conta			d,
		pls_conta_proc			c,
		pls_discussao_proc		b,
		pls_contestacao_discussao	a,
		pls_contestacao_proc	x,
		pls_contestacao			y,
		pls_lote_contestacao	z
	where	a.nr_sequencia		= b.nr_seq_discussao
	and	b.nr_seq_conta_proc 	= c.nr_sequencia
	and	c.nr_seq_conta			= d.nr_sequencia
	and	x.nr_seq_contestacao	= a.nr_seq_contestacao
	and	x.nr_seq_conta_proc		= b.nr_seq_conta_proc
	and	a.nr_seq_lote			= nr_seq_lote_disc_p
	and x.nr_seq_contestacao	= y.nr_sequencia
	and	y.nr_seq_lote 			= z.nr_sequencia
	and pls_obter_dados_lote_contest(z.nr_sequencia,'PC') = 'I'
	and	x.vl_atual		> 0
	order by nr_seq_proc, ie_tipo_despesa desc;

C03 CURSOR FOR
	SELECT	b.nr_seq_conta_mat,
		d.nr_sequencia,
		d.nr_seq_segurado,
		d.ie_tipo_segurado,
		b.nr_sequencia,
		a.nr_seq_lote
	from	pls_conta			d,
		pls_conta_mat			c,
		pls_discussao_mat		b,
		pls_contestacao_discussao	a
	where	a.nr_sequencia		= b.nr_seq_discussao
	and	b.nr_seq_conta_mat 	= c.nr_sequencia
	and	c.nr_seq_conta		= d.nr_sequencia
	and	a.nr_seq_lote		= nr_seq_lote_disc_p
	and	exists (SELECT	1
			from	pls_contestacao_mat x
			where	x.nr_seq_contestacao	= a.nr_seq_contestacao
			and	x.nr_seq_conta_mat	= b.nr_seq_conta_mat
			and	x.vl_atual		= 0);


BEGIN

-- Cursor para a geração da coparticipação - Procedimento
open C02;
loop
fetch C02 into
	nr_seq_conta_proc_w,
	nr_seq_conta_w,
	nr_seq_segurado_w,
	ie_tipo_segurado_w,
	nr_seq_disc_proc_w,
	nr_seq_lote_w,
	ie_tipo_despesa_w,
	nr_seq_proc_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	-- Verificar a regra e se ja não foi gerado coparticipação para o item
	ie_retorno_w := pls_verificar_regra_copartic( nr_seq_conta_proc_w, null, clock_timestamp(), nm_usuario_p, cd_estabelecimento_p, ie_retorno_w, nr_seq_lote_w);

	-- Se a regra retornar 'S', deve ser gerado a coparticipação
	if (ie_retorno_w = 'S') and (coalesce(ie_tipo_segurado_w,'X') in ('B','A','I','C','T','H')) then

		CALL pls_gerar_coparticipacao(nr_seq_conta_proc_w,
					nr_seq_segurado_w,
					nr_seq_conta_w,
					cd_estabelecimento_p,
					nm_usuario_p,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					nr_seq_disc_proc_w,
					null);
	end if;
	end;
end loop;
close C02;

-- Cursor para a geração da coparticipação - Material
open C03;
loop
fetch C03 into
	nr_seq_conta_mat_w,
	nr_seq_conta_w,
	nr_seq_segurado_w,
	ie_tipo_segurado_w,
	nr_seq_disc_mat_w,
	nr_seq_lote_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	-- Verificar a regra e se ja não foi gerado coparticipação para o item
	ie_retorno_w := pls_verificar_regra_copartic( null, nr_seq_conta_mat_w, clock_timestamp(), nm_usuario_p, cd_estabelecimento_p, ie_retorno_w, nr_seq_lote_w);

	-- Se a regra retornar 'S', deve ser gerado a coparticipação
	if (ie_retorno_w = 'S') and (ie_tipo_segurado_w in ('B','A','I','C','T','H')) then
		CALL pls_gerar_coparticipacao(null,
					nr_seq_segurado_w,
					nr_seq_conta_w,
					cd_estabelecimento_p,
					nm_usuario_p,
					nr_seq_conta_mat_w,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					nr_seq_disc_mat_w,
					null,
					null);
	end if;
	end;
end loop;
close C03;

-- OS 824259 (Dt fechamento) e OS 824256 (Status coparticipação)
CALL pls_atualizar_copart_discussao(	nr_seq_lote_disc_p, cd_estabelecimento_p ,nm_usuario_p, 'N');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_coparticipacao_disc ( nr_seq_lote_disc_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

