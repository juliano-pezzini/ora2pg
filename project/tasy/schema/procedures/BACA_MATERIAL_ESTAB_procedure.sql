-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_material_estab () AS $body$
DECLARE


count_w			smallint;
cd_estabelecimento_w		smallint;
cd_material_w			integer;
ie_baixa_estoq_pac_w		varchar(1);
ie_material_estoque_w	varchar(1);
qt_estoque_minimo_w		double precision;
qt_ponto_pedido_w		double precision;
qt_estoque_maximo_w		double precision;
qt_dia_interv_ressup_w	smallint;
qt_dia_ressup_forn_w		smallint;
qt_dia_estoque_minimo_w	smallint;
nr_minimo_cotacao_w		smallint;
qt_consumo_mensal_w		double precision;
cd_material_conta_w		integer;
cd_kit_material_w		integer;
ie_prescricao_w		varchar(1);
ie_padronizado_w		varchar(1);

C01 CURSOR FOR
	SELECT	cd_estabelecimento
	FROM	estabelecimento;

C02 CURSOR FOR
	SELECT	a.cd_material,
		a.ie_baixa_estoq_pac,
		a.ie_material_estoque,
		a.qt_estoque_minimo,
		a.qt_ponto_pedido,
		a.qt_estoque_maximo,
		a.qt_dia_interv_ressup,
		a.qt_dia_ressup_forn,
		a.qt_dia_estoque_minimo,
		coalesce(a.nr_minimo_cotacao,0),
		a.qt_consumo_mensal,
		a.cd_material_conta,
		a.cd_kit_material,
		a.ie_prescricao,
		a.ie_padronizado
	FROM	material a
	WHERE NOT EXISTS (
		SELECT	1
		FROM	material_estab b
		WHERE	b.cd_material = a.cd_material
		AND	b.cd_estabelecimento = cd_estabelecimento_w);

BEGIN

OPEN C01;
LOOP
FETCH c01 INTO
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	OPEN C02;
	LOOP
	FETCH c02 INTO
		cd_material_w,
		ie_baixa_estoq_pac_w,
		ie_material_estoque_w,
		qt_estoque_minimo_w,
		qt_ponto_pedido_w,
		qt_estoque_maximo_w,
		qt_dia_interv_ressup_w,
		qt_dia_ressup_forn_w,
		qt_dia_estoque_minimo_w,
		nr_minimo_cotacao_w,
		qt_consumo_mensal_w,
		cd_material_conta_w,
		cd_kit_material_w,
		ie_prescricao_w,
		ie_padronizado_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		BEGIN
		IF (count_w > 1000) THEN
			count_w	:= 0;
			COMMIT;
		END IF;
		INSERT INTO material_estab(
				nr_sequencia,
				cd_estabelecimento,
				cd_material,
				dt_atualizacao,
				nm_usuario,
				ie_baixa_estoq_pac,
				ie_material_estoque,
				qt_estoque_minimo,
				qt_ponto_pedido,
				qt_estoque_maximo,
				qt_dia_interv_ressup,
				qt_dia_ressup_forn,
				qt_dia_estoque_minimo,
				nr_minimo_cotacao,
				qt_consumo_mensal,
				cd_material_conta,
				cd_kit_material,
				qt_peso_kg,
				dt_atual_consumo,
				qt_mes_consumo,
				ie_ressuprimento,
				ie_classif_custo,
				ie_prescricao,
				ie_padronizado,
				ie_estoque_lote,
				ie_requisicao,
				ie_controla_serie)
			VALUES (nextval('material_estab_seq'),
				cd_estabelecimento_w,
				cd_material_w,
				clock_timestamp(),
				'TasyImportEstab',
				ie_baixa_estoq_pac_w,
				ie_material_estoque_w,
				qt_estoque_minimo_w,
				qt_ponto_pedido_w,
				qt_estoque_maximo_w,
				qt_dia_interv_ressup_w,
				qt_dia_ressup_forn_w,
				qt_dia_estoque_minimo_w,
				nr_minimo_cotacao_w,
				qt_consumo_mensal_w,
				cd_material_conta_w,
				cd_kit_material_w,
				NULL,
				NULL,
				NULL,
				'S','B',
				ie_prescricao_w,
				ie_padronizado_w,
				'N',
				'N',
				'N');
		END;
	END LOOP;
	CLOSE c02;
	END;
END LOOP;
CLOSE c01;

COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_material_estab () FROM PUBLIC;

