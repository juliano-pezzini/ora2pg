-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_imp_resp_autorizacao ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_tipo_tabela_w		varchar(2);
cd_servico_w			integer;
ds_servico_w			varchar(80);
qt_autorizada_w			smallint;
ie_autorizado_w			smallint;
cd_mens_espec_1			smallint;
cd_mens_espec_2			smallint;
cd_mens_espec_3			smallint;
cd_mens_espec_4			smallint;
cd_mens_espec_5			smallint;
ie_status_w			varchar(2);
ie_status_ww			varchar(2);
nr_seq_execucao_w		bigint;
cd_usuario_plano_w		bigint;
ds_conteudo_w			varchar(4000);
qt_registros_ww			smallint;
qt_registros_w			smallint;
ds_observacao_w			varchar(255);
qt_reg_aprov_w			smallint;
qt_reg_aprov_ww			smallint;
qt_reg_neg_w			smallint;
qt_reg_neg_ww			smallint;
cd_pessoa_fisica_w		varchar(20);
nr_seq_prestador_w		bigint;
nr_seq_requisicao_w		bigint;
dt_atendimento_w		timestamp;
dt_atendimento_ww		timestamp;
cd_transacao_w			varchar(5);
ie_tipo_cliente_w		varchar(15);
cd_unimed_exec_w		smallint;
cd_unimed_benef_w		smallint;
nr_seq_origem_w			bigint;
cd_unimed_w			smallint;
nm_beneficiario_w		varchar(25);
nr_seq_resp_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_prestador_req_w		bigint;
nr_seq_resp_novo_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_import_w			smallint;
nr_seq_transacao_w		bigint;
ie_tipo_transacao_w		varchar(3);
ie_tipo_resposta_w		varchar(2);
qt_reg_w			bigint;
nr_seq_material_w		bigint;
nr_seq_procedimento_w		bigint;
nr_seq_compl_serv_w		bigint;
nr_seq_pedido_compl_w		bigint;
nr_seq_pedido_aut_w		bigint;
cd_servico_conversao_w		bigint;
nr_seq_ped_aut_compl_serv_w	bigint;
ie_compara_desc_w		varchar(2)	:= 'N';
nr_seq_pedido_w			bigint;
ie_tipo_conversao_w		varchar(255);

c01 CURSOR FOR 
	SELECT	nr_seq_importacao, 
		ds_valores 
	from	w_scs_importacao 
	where	nm_usuario	= nm_usuario_p 
	order by nr_seq_importacao;

c02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_guia_plano_proc 
	where	cd_procedimento 	= coalesce(cd_servico_conversao_w,cd_servico_w) 
	and	nr_seq_guia		= nr_seq_guia_w 
	
union
 
	SELECT	nr_sequencia 
	from	pls_requisicao_proc 
	where	cd_procedimento 	= coalesce(cd_servico_conversao_w,cd_servico_w) 
	and	nr_seq_requisicao	= nr_seq_requisicao_w 
	and	((ie_compara_desc_w					= 'S' 
	and	Elimina_Acentuacao(upper(trim(both substr(obter_descricao_procedimento(cd_procedimento,ie_origem_proced),1,80))))	= Elimina_Acentuacao(upper(ds_servico_w))) 
	or (ie_compara_desc_w	= 'N'));

c03 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_guia_plano_mat 
	where (pls_obter_seq_codigo_material(nr_seq_material,'') 	= coalesce(cd_servico_conversao_w,cd_servico_w) 
	or	nr_seq_material						= coalesce(cd_servico_conversao_w,cd_servico_w)) 
	and	nr_seq_guia						= nr_seq_guia_w 
	
union
 
	SELECT	nr_sequencia 
	from	pls_requisicao_mat 
	where (pls_obter_seq_codigo_material(nr_seq_material,'') 	= coalesce(cd_servico_conversao_w,cd_servico_w) 
	or	nr_seq_material						= coalesce(cd_servico_conversao_w,cd_servico_w)) 
	and	nr_seq_requisicao					= nr_seq_requisicao_w 
	and	((ie_compara_desc_w					= 'S' 
	and	Elimina_Acentuacao(upper(trim(both substr(pls_obter_desc_material(nr_seq_material),1,80))))	= Elimina_Acentuacao(upper(ds_servico_w))) 
	or (ie_compara_desc_w	= 'N'));
	
C04 CURSOR FOR 
	SELECT	nr_sequencia 
	into STRICT	nr_seq_compl_serv_w 
	from	ptu_pedido_compl_aut_serv 
	where	nr_seq_pedido	= nr_seq_pedido_compl_w 
	and	cd_servico	= cd_servico_w;

C05 CURSOR FOR 
	SELECT	nr_sequencia, 
		CASE WHEN ds_opme='' THEN 'N'  ELSE 'S' END  
	from	ptu_pedido_aut_servico 
	where	nr_seq_pedido		= nr_seq_pedido_aut_w 
	
union
 
	SELECT	nr_sequencia, 
		CASE WHEN ds_opme='' THEN 'N'  ELSE 'S' END  
	from	ptu_pedido_compl_aut_serv 
	where	nr_seq_pedido	= nr_seq_pedido_compl_w;

BEGIN
 
open c01;
loop 
fetch c01 into 
	nr_seq_import_w, 
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	if (substr(ds_conteudo_w,1,4)	<> 'FIM$') then 
		if (nr_seq_import_w	= 1) then 
			select substr(ds_conteudo_w,1,5), 
				trim(both substr(ds_conteudo_w,6,15)), 
				CASE WHEN (substr(ds_conteudo_w,21,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,21,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,25,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,25,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,29,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,29,10))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,39,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,39,10))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,49,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,49,4))::numeric  END , 
				trim(both substr(ds_conteudo_w,53,13)), 
				trim(both substr(ds_conteudo_w,66,25)) 
			into STRICT	cd_transacao_w, 
				ie_tipo_cliente_w, 
				cd_unimed_exec_w, 
				cd_unimed_benef_w, 
				nr_seq_execucao_w, 
				nr_seq_origem_w, 
				cd_unimed_w, 
				cd_usuario_plano_w, 
				nm_beneficiario_w 
			;
 
			dt_atendimento_ww	:= substr(ds_conteudo_w,97,2)||substr(ds_conteudo_w,95,2)||substr(ds_conteudo_w,91,4);
			dt_atendimento_w	:= to_date(to_char(dt_atendimento_ww, 'dd/mm/yyyy'));
 
			select	coalesce(nr_seq_pedido_compl,0), 
				coalesce(nr_seq_pedido_aut,0) 
			into STRICT	nr_seq_pedido_compl_w, 
				nr_seq_pedido_aut_w 
			from	ptu_controle_execucao 
			where	nr_sequencia	= nr_seq_execucao_w;
						 
			if (nr_seq_pedido_compl_w	<> 0) then 
				select	nr_seq_guia, 
					nr_seq_requisicao 
				into STRICT	nr_seq_guia_w, 
					nr_seq_requisicao_w 
				from	ptu_pedido_compl_aut 
				where	nr_sequencia	= nr_seq_pedido_compl_w;
			 
				ie_tipo_resposta_w	:= 'PC';
				nr_seq_pedido_w		:= nr_seq_pedido_compl_w;
				ie_tipo_conversao_w	:= 'RAC';
			elsif (nr_seq_pedido_aut_w	<> 0) then 
				select	nr_seq_guia, 
					nr_seq_requisicao 
				into STRICT	nr_seq_guia_w, 
					nr_seq_requisicao_w 
				from	ptu_pedido_autorizacao 
				where	nr_sequencia	= nr_seq_pedido_aut_w;
			 
				ie_tipo_resposta_w	:= 'PA';
				nr_seq_pedido_w		:= nr_seq_pedido_aut_w;
				ie_tipo_conversao_w	:= 'RA';
			end if;
			 
			select	nextval('ptu_resposta_autorizacao_seq') 
			into STRICT	nr_seq_resp_novo_w 
			;
 
			if (ie_tipo_cliente_w	= 'UNIMED') then 
				ie_tipo_cliente_w	:= 'U';
			elsif (ie_tipo_cliente_w	= 'PORTAL') then 
				ie_tipo_cliente_w	:= 'P';
			elsif (ie_tipo_cliente_w	= 'PRESTADOR') then 
				ie_tipo_cliente_w	:= 'R';
			end if;
 
			insert	into ptu_resposta_autorizacao(nr_sequencia, cd_unimed_executora, cd_unimed_beneficiario, 
				 nr_seq_execucao, nr_seq_requisicao, cd_unimed, 
				 cd_usuario_plano, nm_beneficiario, dt_atualizacao, 
				 nm_usuario, dt_validade, ie_tipo_cliente, 
				 nr_seq_origem, nr_seq_guia, cd_transacao, 
				 ie_tipo_resposta, ds_arquivo_pedido) 
			values (nr_seq_resp_novo_w, cd_unimed_exec_w, cd_unimed_benef_w, 
				 nr_seq_execucao_w, nr_seq_requisicao_w, cd_unimed_w, 
				 cd_usuario_plano_w, nm_beneficiario_w, clock_timestamp(), 
				 nm_usuario_p, dt_atendimento_w, ie_tipo_cliente_w, 
				 coalesce(nr_seq_origem_w,0), nr_seq_guia_w, cd_transacao_w, 
				 ie_tipo_resposta_w, ds_arquivo_p);
		elsif (nr_seq_import_w	= 2) then 
			select	trim(both substr(ds_conteudo_w,1,255)) 
			into STRICT	ds_observacao_w 
			;
 
			update	ptu_resposta_autorizacao 
			set	ds_observacao	= ds_observacao_w 
			where	nr_sequencia	= nr_seq_resp_novo_w;
		elsif (substr(ds_conteudo_w,1,1) in ('0','1','2','3', '4')) then 
			select substr(ds_conteudo_w,1,1), 
				CASE WHEN (substr(ds_conteudo_w,2,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,2,8))::numeric  END , 
				trim(both substr(ds_conteudo_w,10,80)), 
				CASE WHEN (substr(ds_conteudo_w,90,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,90,8))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,98,1))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,98,1))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,99,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,99,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,103,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,103,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,107,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,107,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,111,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,111,4))::numeric  END , 
				CASE WHEN (substr(ds_conteudo_w,115,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,115,4))::numeric  END  
			into STRICT	ie_tipo_tabela_w, 
				cd_servico_w, 
				ds_servico_w, 
				qt_autorizada_w, 
				ie_autorizado_w, 
				cd_mens_espec_1, 
				cd_mens_espec_2, 
				cd_mens_espec_3, 
				cd_mens_espec_4, 
				cd_mens_espec_5 
			;
 
			if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '')then 
				nr_seq_transacao_w 	:= nr_seq_guia_w;
				ie_tipo_transacao_w	:= 'G';
			else 
				nr_seq_transacao_w	:= nr_seq_requisicao_w;
				ie_tipo_transacao_w	:= 'R';
			end if;
						 
			if (ie_autorizado_w	= 1) then 
				ie_status_w	:= 'N';
				ie_status_ww	:= 2;
			elsif (ie_autorizado_w	= 2) then 
				ie_status_w	:= 'S';
				ie_status_ww	:= 1;
			elsif (ie_autorizado_w	= 3) then 
				ie_status_w	:= 'A';
				ie_status_ww	:= 4;
			elsif (ie_autorizado_w	= 4) then 
				ie_status_w	:= 'A';
				ie_status_ww	:= 4;
			end if;
 
			if (ie_tipo_tabela_w	in ('0','1','4')) then 
				open C05;
				loop 
				fetch C05 into	 
					nr_seq_ped_aut_compl_serv_w, 
					ie_compara_desc_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin 
					cd_servico_conversao_w	:= ptu_obter_servico_conversao(	cd_servico_w,nr_seq_pedido_w,nr_seq_ped_aut_compl_serv_w, 
												ie_tipo_conversao_w);
					 
					open c02;
					loop 
					fetch c02 into 
						nr_seq_procedimento_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
						begin 
						if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
							if (ie_status_w	in ('A','N')) then 
								update	pls_guia_plano_proc 
								set	ie_status		= ie_status_w 
								where	nr_sequencia		= nr_seq_procedimento_w;
							else 
								update	pls_guia_plano_proc 
								set	ie_status		= ie_status_w, 
									qt_autorizada		= qt_autorizada_w 
								where	nr_sequencia		= nr_seq_procedimento_w;
							end if;
						elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
							if (ie_status_w	in ('A','N')) then 
								update	pls_requisicao_proc 
								set	ie_status		= ie_status_w 
								where	nr_sequencia		= nr_seq_procedimento_w;
							else 
								update	pls_requisicao_proc 
								set	ie_status		= ie_status_w, 
									qt_procedimento		= qt_autorizada_w 
								where	nr_sequencia		= nr_seq_procedimento_w;
							end if;
						end if;
						 
						if (cd_mens_espec_1	<> 0) then 
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_1,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w, 
											cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
						end if;
 
						if (cd_mens_espec_2	<> 0) then 
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_2,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w, 
											cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
						end if;
 
						if (cd_mens_espec_3	<> 0) then 
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_3,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w, 
											cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
						end if;
 
						if (cd_mens_espec_4	<> 0) then 
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_4,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w, 
											cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
						end if;
 
						if (cd_mens_espec_5	<> 0) then 
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_5,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w, 
											cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
						end if;
						end;
					end loop;
					close c02;
					end;
				end loop;
				close C05;
			elsif (ie_tipo_tabela_w	in ('2','3')) then 
				open C05;
				loop 
				fetch C05 into	 
					nr_seq_ped_aut_compl_serv_w, 
					ie_compara_desc_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin 
					cd_servico_conversao_w	:= ptu_obter_servico_conversao(	cd_servico_w, nr_seq_pedido_w, nr_seq_ped_aut_compl_serv_w, 
												ie_tipo_conversao_w);
					open c03;
					loop 
					fetch c03 into 
						nr_seq_material_w;
					EXIT WHEN NOT FOUND; /* apply on c03 */
						begin 
						if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
							if (ie_status_w	in ('A','N')) then 
								update	pls_guia_plano_mat 
								set	ie_status		= ie_status_w 
								where	nr_sequencia		= nr_seq_material_w;
							else 
								update	pls_guia_plano_mat 
								set	ie_status		= ie_status_w, 
									qt_autorizada		= qt_autorizada_w 
								where	nr_sequencia		= nr_seq_material_w;
							end if;
						elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
							if (ie_status_w	in ('A','N')) then 
								update	pls_requisicao_mat 
								set	ie_status		= ie_status_w 
								where	nr_sequencia		= nr_seq_material_w;
							else 
								update	pls_requisicao_mat 
								set	ie_status		= ie_status_w, 
									qt_material		= qt_autorizada_w 
								where	nr_sequencia		= nr_seq_material_w;
							end if;
						end if;
						 
						if (cd_mens_espec_1	<> 0) then 
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_1,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w, 
											cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
						end if;
 
						if (cd_mens_espec_2	<> 0) then 
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_2,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w, 
											cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
						end if;
 
						if (cd_mens_espec_3	<> 0) then 
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_3,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w, 
											cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
						end if;
 
						if (cd_mens_espec_4	<> 0) then 
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_4,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w, 
											cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
						end if;
 
						if (cd_mens_espec_5	<> 0) then 
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_5,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w, 
											cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
						end if;
						end;
					end loop;
					close c03;
					end;
				end loop;
				close C05;
			end if;
			 
			select	max(ie_origem_proced) 
			into STRICT	ie_origem_proced_w 
			from  procedimento 
			where  cd_procedimento	= cd_servico_w 
			and	ie_situacao	= 'A';
 
			insert	into ptu_resposta_aut_servico(nr_sequencia, nr_seq_pedido, ie_tipo_tabela, 
				 cd_servico, ds_servico, ie_autorizado, 
				 dt_atualizacao, nm_usuario, qt_autorizado, 
				 ie_origem_servico) 
			values (nextval('ptu_resposta_aut_servico_seq'), nr_seq_resp_novo_w, ie_tipo_tabela_w, 
				 cd_servico_w, coalesce(ds_servico_w,'Não informado'), ie_autorizado_w, 
				 clock_timestamp(), nm_usuario_p, qt_autorizada_w, 
				 ie_origem_proced_w);
		end if;
	end if;
 
	end;
end loop;
close c01;
 
if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
	select	count(1) 
	into STRICT	qt_registros_w 
	from	pls_guia_plano_proc 
	where	ie_status	= 'A' 
	and	nr_seq_guia	= nr_seq_guia_w;
 
	select	count(1) 
	into STRICT	qt_registros_ww 
	from	pls_guia_plano_mat 
	where	ie_status	= 'A' 
	and	nr_seq_guia	= nr_seq_guia_w;
 
	if	((qt_registros_w > 0) or (qt_registros_ww > 0)) then 
		update	pls_guia_plano 
		set	ie_estagio	= 1, 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_guia_w;
	elsif (qt_registros_w = 0) and (qt_registros_ww = 0) and (ie_autorizado_w = 3) then 
		update	pls_guia_plano 
		set	ie_estagio	= 9, 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_guia_w;
	elsif (qt_registros_w = 0) and (qt_registros_ww = 0) and (ie_autorizado_w <> 3) then 
		select	count(1) 
		into STRICT	qt_reg_neg_w 
		from	pls_guia_plano_proc 
		where	ie_status	= 'N' 
		and	nr_seq_guia	= nr_seq_guia_w;
 
		select	count(1) 
		into STRICT	qt_reg_neg_ww 
		from	pls_guia_plano_mat 
		where	ie_status		= 'N' 
		and	nr_seq_guia	= nr_seq_guia_w;
 
		qt_registros_w	:= qt_reg_neg_w + qt_reg_neg_ww;
 
		select	count(1) 
		into STRICT	qt_reg_aprov_w 
		from	pls_guia_plano_proc 
		where	ie_status	= 'S' 
		and	nr_seq_guia	= nr_seq_guia_w;
 
		select	count(1) 
		into STRICT	qt_reg_aprov_ww 
		from	pls_guia_plano_mat 
		where	ie_status	= 'S' 
		and	nr_seq_guia	= nr_seq_guia_w;
 
		qt_registros_ww	:= qt_reg_aprov_w + qt_reg_aprov_ww;
 
		if (qt_registros_w > 0) and (qt_registros_ww > 0) then 
			update	pls_guia_plano 
			set	ie_estagio	= 10, 
				ie_status	= 1, 
				dt_atualizacao	= clock_timestamp(), 
				nm_usuario	= nm_usuario_p 
			where	nr_sequencia	= nr_seq_guia_w;
		elsif (qt_registros_w > 0) and (qt_registros_ww = 0) then 
			update	pls_guia_plano 
			set	ie_estagio	= 4, 
				ie_status	= 3, 
				dt_atualizacao	= clock_timestamp(), 
				nm_usuario	= nm_usuario_p 
			where	nr_sequencia	= nr_seq_guia_w;
		elsif (qt_registros_w = 0) and (qt_registros_ww > 0) then 
			update	pls_guia_plano 
			set	ie_estagio	= 6, 
				ie_status	= 1, 
				dt_atualizacao	= clock_timestamp(), 
				nm_usuario	= nm_usuario_p 
			where	nr_sequencia	= nr_seq_guia_w;
		end if;
	end if;
	 
	CALL pls_guia_gravar_historico(nr_seq_guia_w,2,substr('Recebida e processada a resposta de pedido de autorização da Unimed '||cd_unimed_benef_w||' com a mensagem: '||chr(10)||ds_observacao_w,1,4000),'',nm_usuario_p);
elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
	select	count(1) 
	into STRICT	qt_registros_w 
	from	pls_requisicao_proc 
	where	ie_status	= 'A' 
	and	nr_seq_requisicao	= nr_seq_requisicao_w;
 
	select	count(1) 
	into STRICT	qt_registros_ww 
	from	pls_requisicao_mat 
	where	ie_status	= 'A' 
	and	nr_seq_requisicao	= nr_seq_requisicao_w;
 
	if	((qt_registros_w > 0) or (qt_registros_ww > 0)) then 
		update	pls_requisicao 
		set	ie_estagio	= 5, 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_requisicao_w;
		 
		CALL pls_gerar_auditoria_requisicao(nr_seq_requisicao_w, nm_usuario_p,'AE');
		CALL ptu_gerar_grupo_aud_padrao(null,nr_seq_requisicao_w,'GC',nm_usuario_p);
	elsif (qt_registros_w = 0) and (qt_registros_ww = 0) then 
		select	count(1) 
		into STRICT	qt_reg_neg_w 
		from	pls_requisicao_proc 
		where	ie_status		= 'N' 
		and	nr_seq_requisicao	= nr_seq_requisicao_w;
 
		select	count(1) 
		into STRICT	qt_reg_neg_ww 
		from	pls_requisicao_mat 
		where	ie_status		= 'N' 
		and	nr_seq_requisicao	= nr_seq_requisicao_w;
 
		qt_registros_w	:= qt_reg_neg_w + qt_reg_neg_ww;
 
		select	count(1) 
		into STRICT	qt_reg_aprov_w 
		from	pls_requisicao_proc 
		where	ie_status	= 'S' 
		and	nr_seq_requisicao	= nr_seq_requisicao_w;
 
		select	count(1) 
		into STRICT	qt_reg_aprov_ww 
		from	pls_requisicao_mat 
		where	ie_status	= 'S' 
		and	nr_seq_requisicao	= nr_seq_requisicao_w;
 
		qt_registros_ww	:= qt_reg_aprov_w + qt_reg_aprov_ww;
 
		if (qt_registros_w > 0) and (qt_registros_ww > 0) then 
			update	pls_requisicao 
			set	ie_estagio		= 6, 
				dt_valid_senha_ext	= dt_atendimento_w, 
				dt_validade_senha	= dt_atendimento_w, 
				cd_senha_externa	= nr_seq_origem_w, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_seq_requisicao_w;
		elsif (qt_registros_w > 0) and (qt_registros_ww = 0) then 
			update	pls_requisicao 
			set	ie_estagio		= 7, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_seq_requisicao_w;
		elsif (qt_registros_w = 0) and (qt_registros_ww > 0) then 
			update	pls_requisicao 
			set	ie_estagio		= 2, 
				dt_valid_senha_ext	= dt_atendimento_w, 
				dt_validade_senha	= dt_atendimento_w, 
				cd_senha_externa	= nr_seq_origem_w, 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_seq_requisicao_w;
		end if;
	end if;
	 
	CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L',substr('Recebida e processada a resposta de pedido de autorização da Unimed '||cd_unimed_benef_w||' com a mensagem: '||chr(10)||ds_observacao_w,1,4000),null,nm_usuario_p);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_resp_autorizacao ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

