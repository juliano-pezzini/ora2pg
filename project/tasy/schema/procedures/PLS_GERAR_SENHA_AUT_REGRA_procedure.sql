-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_senha_aut_regra ( nr_seq_regra_senha_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nm_usuario_p text, cd_senha_p INOUT text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Atualizar os itens da guia conforme a geração de ocorrência combinada.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_senha_w			varchar(20);
nr_seq_regra_numero_w		bigint;
nr_inicial_w			bigint;
nr_atual_w			bigint;
ie_tipo_campo_w			varchar(10);
ie_status_w			varchar(2);
ie_estagio_w			smallint;
nr_seq_controle_senha_w		bigint;
cd_estabelecimento_w		pls_aut_regra_gera_senha.cd_estabelecimento%type;

C01 CURSOR FOR
	SELECT	ie_tipo_campo
	from	pls_aut_gera_senha_campo
	where	nr_seq_regra_gera_senha	= nr_seq_regra_senha_p
	and	ie_situacao		= 'A'
	order by nr_sequencia;


BEGIN
if (nr_seq_regra_senha_p IS NOT NULL AND nr_seq_regra_senha_p::text <> '') then
	open C01;
	loop
	fetch C01 into	
		ie_tipo_campo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (ie_tipo_campo_w	= '1') then
			begin
				select	nr_sequencia,
					nr_inicial,
					nr_atual
				into STRICT	nr_seq_regra_numero_w,
					nr_inicial_w,
					nr_atual_w
				from	pls_aut_gera_senha_numero
				where	nr_seq_regra_gera_senha	= nr_seq_regra_senha_p;
			exception
			when others then
				nr_seq_regra_numero_w	:= null;
				nr_inicial_w		:= null;
				nr_atual_w		:= null;
			end;
			
			if (nr_seq_regra_numero_w IS NOT NULL AND nr_seq_regra_numero_w::text <> '') then
				if (coalesce(nr_atual_w::text, '') = '') then
					cd_senha_w	:= substr(cd_senha_w||nr_inicial_w,1,20);
					nr_atual_w	:= nr_inicial_w;
				else
					nr_atual_w	:= nr_atual_w + 1;
					cd_senha_w	:= substr(cd_senha_w||nr_atual_w,1,20);
				end if;
				
				update	pls_aut_gera_senha_numero
				set	nr_atual	= nr_atual_w,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_sequencia	= nr_seq_regra_numero_w;
			end if;
		elsif (ie_tipo_campo_w	= '2') then
			cd_senha_w	:= substr(cd_senha_w||Obter_Numero_Randomico,1,20);
		elsif (ie_tipo_campo_w	= '3') then
			select	nextval('pls_controle_senha_autor_seq')
			into STRICT	nr_seq_controle_senha_w
			;

			insert	into pls_controle_senha_autor(nr_sequencia, dt_atualizacao, nm_usuario,
				 dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_guia,
				 nr_seq_regra_gera_senha, nr_seq_requisicao)
			values (nr_seq_controle_senha_w, clock_timestamp(), nm_usuario_p,
				 clock_timestamp(), nm_usuario_p, nr_seq_guia_p,
				 nr_seq_regra_senha_p, nr_seq_requisicao_p);
				
			cd_senha_w	:= nr_seq_controle_senha_w;
		elsif (ie_tipo_campo_w	= '4') then
			cd_senha_w	:= coalesce(nr_seq_guia_p,nr_seq_requisicao_p);
		end if;
		end;
	end loop;
	close C01;

	begin
		select	cd_estabelecimento
		into STRICT	cd_estabelecimento_w
		from	pls_aut_regra_gera_senha
		where	nr_sequencia	= nr_seq_regra_senha_p;
	exception
	when others then
		if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
			select	max(cd_estabelecimento)
			into STRICT	cd_estabelecimento_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_p;
		else
			select	max(cd_estabelecimento)
			into STRICT	cd_estabelecimento_w
			from	pls_requisicao
			where	nr_sequencia = nr_seq_requisicao_p;
		end if;
	end;

	insert	into pls_log_regra_gera_senha(nr_sequencia, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_regra_gera_senha,
		cd_senha_regra, nr_seq_guia, cd_estabelecimento)
	values (nextval('pls_log_regra_gera_senha_seq'), clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, nr_seq_regra_senha_p,
		cd_senha_w, nr_seq_guia_p, coalesce(cd_estabelecimento_w,'1'));
end if;

cd_senha_p	:= cd_senha_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_senha_aut_regra ( nr_seq_regra_senha_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nm_usuario_p text, cd_senha_p INOUT text) FROM PUBLIC;

