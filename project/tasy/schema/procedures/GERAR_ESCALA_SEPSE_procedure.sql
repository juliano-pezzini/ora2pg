-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_escala_sepse ( nr_atendimento_p bigint, cd_profissional_p text, nr_seq_p bigint, nm_usuario_p text, nm_tabela_origem_p text default null) AS $body$
DECLARE


nr_sequencia_w              bigint;
dt_alta_w                   timestamp;
qt_var_suspeita_w           bigint;
qt_var_confirmada_w         bigint;
qt_total_w                  bigint;
cd_estabelecimento_w        smallint;
qt_horas_sepsis_w           bigint;
qt_reg_sepsis_w             bigint := 0;
existe_liberacao_sepsis_w   varchar(1);
ie_finaliza_manual_w        varchar(1);
nr_seq_origem_w             bigint := null;
nm_tabela_origem_w          varchar(50):= null;
nr_seq_sv_w                 bigint := null;
ie_status_sepsis_w			varchar(2);


BEGIN
	
if (coalesce(nr_atendimento_p,0) > 0) then

	Select 	max(dt_alta)
	into STRICT	dt_alta_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
	
	if (coalesce(dt_alta_w::text, '') = '') then		
			
			select obter_dados_atendimento(nr_atendimento_p,'EST'),
				   obter_se_sepse_liberada(nr_atendimento_p)
			into STRICT   cd_estabelecimento_w,
				   existe_liberacao_sepsis_w
			;

		if (existe_liberacao_sepsis_w <> 'N' ) then

			Select  max(QT_HORAS_SEPSIS)
			into STRICT	qt_horas_sepsis_w
			from 	parametro_medico
			where	cd_estabelecimento = cd_estabelecimento_w;
			
			nr_seq_origem_w    := nr_seq_p;
			nm_tabela_origem_w := nm_tabela_origem_p;
			if ((coalesce(nm_tabela_origem_w::text, '') = '') and (nr_seq_p > 0)) then
				nm_tabela_origem_w := 'ATENDIMENTO_SINAL_VITAL';
				nr_seq_origem_w    := nr_seq_p;
				nr_seq_sv_w        := nr_seq_p;
			end if;

			--- SEPSE PEDIATRICA
			if (existe_liberacao_sepsis_w = 'P') then
			
				ie_finaliza_manual_w := obter_se_sepse_liberada(nr_atendimento_p, 'F');
				
				if (ie_finaliza_manual_w = 'S') then
					Select  count(*)
					into STRICT	qt_reg_sepsis_w
					from	escala_sepse_infantil
					where 	nr_atendimento = nr_atendimento_p
					and     coalesce(dt_fim_protocolo::text, '') = ''
					and	    coalesce(ie_situacao,'A') = 'A';
					
				elsif (coalesce(qt_horas_sepsis_w,0) > 0) then
				
					Select  count(*)
					into STRICT	qt_reg_sepsis_w
					from	escala_sepse_infantil
					where 	nr_atendimento = nr_atendimento_p
					and	dt_atualizacao_nrec between (clock_timestamp()  - (1/24 * qt_horas_sepsis_w)) and clock_timestamp()
					and	coalesce(ie_situacao,'A') = 'A';
				
				end if;
				
				if (qt_reg_sepsis_w = 0) then						

					select  nextval('escala_sepse_infantil_seq')
					into STRICT    nr_sequencia_w
					;
					

					insert into escala_sepse_infantil(nr_sequencia,
											  dt_atualizacao,
											  nm_usuario,
											  nr_atendimento,
											  dt_avaliacao,
											  ie_situacao,
											  cd_profissional,
											  qt_pontuacao,
											  dt_liberacao,
											  nr_seq_sv,
											  nm_usuario_status,
											  dt_atualizacao_nrec,
											  nm_usuario_nrec, 
											  ie_padrao_variavel,
											  nm_tabela,
											  nr_seq_origem)
									  values (nr_sequencia_w,
											  clock_timestamp(),
											  nm_usuario_p,
											  nr_atendimento_p,
											  clock_timestamp(),
											  'A',
											  cd_profissional_p,
											  0,
											  clock_timestamp(),
											  nr_seq_sv_w,
											  nm_usuario_p,
											  clock_timestamp(),
											  nm_usuario_p, 
											  obter_padrao_deflagador_sepse,
											  nm_tabela_origem_w,
											  nr_seq_origem_w);
		
					commit;
					
					CALL gerar_itens_escala_sepse(nr_sequencia_w, nr_atendimento_p, nm_usuario_p);
					
					select count(1)
					into STRICT   qt_reg_sepsis_w
					from   escala_sepse_infantil
					where  nr_sequencia = nr_sequencia_w
					and    coalesce(ie_status_sepsis::text, '') = '';
		
					if (qt_reg_sepsis_w > 0) then
						delete from escala_sepse_infantil_item where nr_seq_escala = nr_sequencia_w;
						
						delete from	escala_sepse_infantil where	nr_sequencia = nr_sequencia_w;
							
						commit;
					
					end if;
				
				end if;
			
			--- SEPSE ADULTO				
			else
				if (existe_liberacao_sepsis_w = 'A' ) and (obter_se_gera_sepsis(nr_atendimento_p, cd_estabelecimento_w) = 'S')then
					
					select  nextval('escala_sepse_seq')
					into STRICT    nr_sequencia_w
					;
				
					insert into escala_sepse(nr_sequencia,
										  dt_atualizacao,
										  nm_usuario,
										  nr_atendimento,
										  dt_avaliacao,
										  ie_situacao,
										  cd_profissional,
										  qt_pontuacao,
										  dt_liberacao,
										  nr_seq_sv,
										  nm_usuario_status,
										  dt_atualizacao_nrec,
										  nm_usuario_nrec,
										  ie_padrao_variavel,
										  nm_tabela,
										  nr_seq_origem)
								  values (nr_sequencia_w,
										  clock_timestamp(),
										  nm_usuario_p,
										  nr_atendimento_p,
										  clock_timestamp(),
										  'A',
										  cd_profissional_p,
										  0,
										  clock_timestamp(),
										  nr_seq_sv_w,
										  nm_usuario_p,
										  clock_timestamp(),
										  nm_usuario_p, 
										  obter_padrao_deflagador_sepse,
										  nm_tabela_origem_w,
										  nr_seq_origem_w);

				commit;

				CALL gerar_itens_escala_sepse(nr_sequencia_w, nr_atendimento_p, nm_usuario_p);

				delete
				from	escala_sepse
				where	nr_sequencia = nr_sequencia_w
				and     coalesce(ie_status_sepsis::text, '') = '';
			
				delete
				from 	pep_item_pendente
				where	ie_escala = 168
				and nr_seq_escala = nr_sequencia_w;
					
				commit;
				
				end if;
			end if;
		end if;	
	end if;
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_escala_sepse ( nr_atendimento_p bigint, cd_profissional_p text, nr_seq_p bigint, nm_usuario_p text, nm_tabela_origem_p text default null) FROM PUBLIC;

