-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_requisicao_regulacao ( nr_sequencia_p bigint, ie_tipo_p text, cd_pessoa_fisica_p text, nr_atendimento_p bigint, nm_usuario_p text, ie_integracao_p text, nr_seq_prioridade_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_solicitado_p bigint, cd_material_p bigint, qt_material_p bigint) AS $body$
DECLARE



ds_retorno_integracao_w	varchar(4000);
nr_cpf_pf_w				varchar(20);
dt_nasc_benef_w			timestamp;
cd_nacionalidade_w		varchar(10);
nm_beneficiario_w		varchar(255);
ie_sexo_benef_w			varchar(1);
nm_mae_benef_w			varchar(255);
nr_seq_segurado_w		bigint;
cd_prestador_w			varchar(30);
cd_cgc_w				varchar(15);
ds_parecer_w			varchar(32000);
nr_parecer_w			bigint;
cd_cpf_medico_w			varchar(20);
nr_seq_requisicao_w		bigint;
nr_seq_inclusao_w		bigint;
cd_usuario_convenio_w	ATEND_CATEGORIA_CONVENIO.cd_usuario_convenio%type;
cd_convenio_w			ATEND_CATEGORIA_CONVENIO.cd_convenio%type;
nr_seq_congenere_w		pls_congenere.nr_sequencia%type;
cd_externo_w			bigint;



BEGIN

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then

	CALL Alterar_status_regulacao(nr_sequencia_p, 'EN', '', null,null,null,null,ie_integracao_p);

	if (nr_seq_prioridade_p IS NOT NULL AND nr_seq_prioridade_p::text <> '') then
		CALL Alterar_prioridade_regulacao(nr_sequencia_p, nr_seq_prioridade_p,' ',' ',null,null,null,null,null,null,null,ie_integracao_p,null);
	end if;

	if ( ie_integracao_p = 'S') then

		select BIFROST.SEND_INTEGRATION(
		'regulacao',
		'com.philips.tasy.integration.atepac.regulation.regulationRequest.RegulationRequest',
		'{"cdPessoaFisica" : '||cd_pessoa_fisica_p||' , '||
		'"nrAtendimento" : '||nr_atendimento_p||' , '||
		'"nrSeqRegulacao" : '||nr_sequencia_p||'}',
		nm_usuario_p)
		into STRICT ds_retorno_integracao_w
		;

	elsif ( ie_integracao_p  = 'N') then

		select	max(nr_cpf),
				max(dt_nascimento),
				max(cd_nacionalidade),
				max(nm_pessoa_fisica),
				max(ie_sexo),
				max(substr(obter_nome_mae_pf(cd_pessoa_fisica),1,255))
		into STRICT	nr_cpf_pf_w,
				dt_nasc_benef_w,
				cd_nacionalidade_w,
				nm_beneficiario_w,
				ie_sexo_benef_w,
				nm_mae_benef_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_segurado_w
		from	pls_segurado a
		where	a.cd_pessoa_fisica = cd_pessoa_fisica_p;
		
		if (coalesce(nr_seq_segurado_w::text, '') = '') then
		
			begin

			Select  max(cd_usuario_convenio),
					max(cd_convenio)
			into STRICT	cd_usuario_convenio_w,
					cd_convenio_w
			from 	ATEND_CATEGORIA_CONVENIO
			where   nr_atendimento = nr_atendimento_p;
			
			if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
			
				Select  max(a.nr_sequencia)
				into STRICT	nr_seq_congenere_w
				from	pls_congenere a,
						convenio b
				where 	b.cd_convenio = cd_convenio_w
				and		a.cd_cgc = b.cd_cgc;
				
				
				Select  (max(CD_INTERNO))::numeric 
				into STRICT	cd_externo_w
				from    CONVERSAO_MEIO_EXTERNO
				where	NM_TABELA = 'PLS_PLANO'
				and		NM_ATRIBUTO = 'NR_SEQUENCIA'
				and		CD_EXTERNO = 'CD_PLANO_REGULACAO';
			
			end if;
			
			
			
			
			select	nextval('pls_inclusao_beneficiario_seq')
			into STRICT	nr_seq_inclusao_w
			;	

			insert	into pls_inclusao_beneficiario(nr_sequencia, dt_nascimento, nm_usuario,
				 cd_estabelecimento, nm_pessoa_fisica, nr_seq_plano,
				 dt_atualizacao)
			values (nr_seq_inclusao_w, dt_nasc_benef_w, nm_usuario_p,
				 wheb_usuario_pck.get_cd_estabelecimento, nm_beneficiario_w, coalesce(cd_externo_w,820) , clock_timestamp());
				
			nr_seq_segurado_w := pls_gerar_segurado_congenere( cd_pessoa_fisica_p, nr_seq_inclusao_w, null, cd_usuario_convenio_w, null, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, null, null, 3, nr_seq_segurado_w);	
			exception
			when others then
				nr_seq_segurado_w	:= null;
			end;
			
		end if;
		

		select	max(cd_prestador),
				max(cd_cgc)
		into STRICT	cd_prestador_w,
				cd_cgc_w
		from	pls_prestador a
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;

		select	max(a.nr_parecer)
		into STRICT	nr_parecer_w
		from	parecer_medico_req a,
				regulacao_atend b
		where	b.nr_seq_parecer_ori = a.nr_parecer
		and		b.nr_sequencia = nr_sequencia_p;

		select	max(obter_dados_pf(cd_medico_resp, 'CPF'))
		into STRICT	cd_cpf_medico_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;

		select	substr(convert_long_to_varchar2('DS_MOTIVO_CONSULTA', 'PARECER_MEDICO_REQ', ' NR_PARECER = '|| nr_parecer_w ),1,4000)
		into STRICT	ds_parecer_w
		;
		
	
		nr_seq_requisicao_w := gerar_requisicao_reg_atend(	'N', nr_seq_segurado_w, nr_sequencia_p, cd_cpf_medico_w, nr_cpf_pf_w, nm_beneficiario_w, nm_mae_benef_w, dt_nasc_benef_w, ie_sexo_benef_w, cd_nacionalidade_w, cd_prestador_w, cd_cgc_w, ds_parecer_w, ds_parecer_w, obter_usuario_ativo, nr_seq_requisicao_w, ie_tipo_p, cd_procedimento_p, ie_origem_proced_p, coalesce(qt_solicitado_p,1), nr_seq_prioridade_p, cd_material_p, qt_material_p);
	end if;


end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_requisicao_regulacao ( nr_sequencia_p bigint, ie_tipo_p text, cd_pessoa_fisica_p text, nr_atendimento_p bigint, nm_usuario_p text, ie_integracao_p text, nr_seq_prioridade_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_solicitado_p bigint, cd_material_p bigint, qt_material_p bigint) FROM PUBLIC;

