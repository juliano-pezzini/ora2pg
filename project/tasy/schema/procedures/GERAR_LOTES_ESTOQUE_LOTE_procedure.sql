-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lotes_estoque_lote ( nr_emprestimo_p bigint, nm_usuario_p text, ie_commit_p text default 'S') AS $body$
DECLARE


--EMPRESTIMO
cd_estabelecimento_w	emprestimo.cd_estabelecimento%type;
cd_local_estoque_w	emprestimo.cd_local_estoque%type;

--EMPRESTIMO_MATERIAL
cd_material_w		emprestimo_material.cd_material%type;	
nr_seq_lote_w		emprestimo_material.nr_seq_lote%type;
qt_emprestimo_w		emprestimo_material.qt_emprestimo%type;
cd_cgc_lote_w		emprestimo_material.cd_cgc_lote%type;
ds_lote_fornec_w	emprestimo_material.ds_lote_fornec%type;
dt_validade_w		emprestimo_material.dt_validade_material%type;
nr_seq_marca_w		emprestimo_material.nr_seq_marca%type;
		
--MATERIAL
cd_material_estoque_w	material.cd_material_estoque%type;
		
--MATERIAL_ESTAB
ie_estoque_lote_w	material_estab.ie_estoque_lote%type;

--REGRA_NF_LOTE_FORNEC
ie_gerar_w		regra_nf_lote_fornec.ie_gerar_lote_emprestimo%type;
ie_quantidade_w		regra_nf_lote_fornec.ie_quantidade%type;
ie_gerar_desdobrado_w	regra_nf_lote_fornec.ie_gerar_desdobrado%type;
nr_seq_item_w		emprestimo_material.nr_sequencia%type;

--Controle
i			integer;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_material,
		nr_seq_lote,
		qt_emprestimo,
		ds_lote_fornec,
		dt_validade_material,
		cd_cgc_lote,
		substr(obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material),1,1),
		nr_seq_marca
	from	emprestimo_material
	where	(ds_lote_fornec IS NOT NULL AND ds_lote_fornec::text <> '')
	and	nr_emprestimo = nr_emprestimo_p
	and	coalesce(nr_seq_lote::text, '') = ''
	and	substr(obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material),1,1) = 'S';
		

BEGIN

select	cd_estabelecimento,
	cd_local_estoque
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w
from	emprestimo
where	nr_emprestimo = nr_emprestimo_p;

open c01;
loop
fetch c01 into	
	nr_seq_item_w,
	cd_material_w,
	nr_seq_lote_w,
	qt_emprestimo_w,
	ds_lote_fornec_w,
	dt_validade_w,
	cd_cgc_lote_w,
	ie_estoque_lote_w,
	nr_seq_marca_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	SELECT * FROM obter_regra_empr_lote_fornec(	cd_material_w, cd_estabelecimento_w, ie_gerar_w, ie_quantidade_w, ie_gerar_desdobrado_w) INTO STRICT ie_gerar_w, ie_quantidade_w, ie_gerar_desdobrado_w;
					
	select	cd_material_estoque
	into STRICT	cd_material_estoque_w
	from	material
	where	cd_material = cd_material_w;
					
	if (coalesce(ie_gerar_desdobrado_w,'N') = 'N') then
		begin
		/*Gera o lote de fornecedor do lote recebido*/

		select	nextval('material_lote_fornec_seq')
		into STRICT	nr_seq_lote_w
		;

		insert into material_lote_fornec(
			nr_sequencia,
			cd_material,
			ie_origem_lote,
			nr_digito_verif,
			dt_atualizacao,
			nm_usuario,
			ds_lote_fornec,
			dt_validade,
			cd_cgc_fornec,
			qt_material,
			cd_estabelecimento,
			ie_validade_indeterminada,
			ie_situacao,
			nr_seq_marca,
			nr_emprestimo)
		values (nr_seq_lote_w,
			cd_material_w,
			'E',
			calcula_digito('Modulo11', nr_seq_lote_w),
			clock_timestamp(),
			nm_usuario_p,
			ds_lote_fornec_w,
			dt_validade_w,
			cd_cgc_lote_w,
			qt_emprestimo_w,
			cd_estabelecimento_w,
			'N',
			'A',
			nr_seq_marca_w,
			nr_emprestimo_p);

		/*Gera o saldo de estoque para o lote gerado para o item*/

		if (ie_estoque_lote_w = 'S') then
			select	cd_material_estoque
			into STRICT	cd_material_estoque_w
			from	material
			where	cd_material = cd_material_w;

			insert into saldo_estoque_lote(
				cd_estabelecimento,
				cd_local_estoque,
				cd_material,
				dt_mesano_referencia,
				nr_seq_lote,
				qt_estoque,
				dt_atualizacao,
				nm_usuario)
			values ( cd_estabelecimento_w,
				cd_local_estoque_w,
				cd_material_estoque_w,
				PKG_DATE_UTILS.start_of(clock_timestamp(),'month',0),
				nr_seq_lote_w,
				qt_emprestimo_w,
				clock_timestamp(),
				nm_usuario_p);
		end if;
		end;
	else
		for i in 1..qt_emprestimo_w loop
			begin
			/*Gera o lote de fornecedor do lote recebido*/

			select	nextval('material_lote_fornec_seq')
			into STRICT	nr_seq_lote_w
			;

			insert into material_lote_fornec(
				nr_sequencia,
				cd_material,
				ie_origem_lote,
				nr_digito_verif,
				dt_atualizacao,
				nm_usuario,
				ds_lote_fornec,
				dt_validade,
				cd_cgc_fornec,
				qt_material,
				cd_estabelecimento,
				ie_validade_indeterminada,
				ie_situacao,
				nr_seq_marca,
				nr_emprestimo)
			values (nr_seq_lote_w,
				cd_material_w,
				'E',
				calcula_digito('Modulo11', nr_seq_lote_w),
				clock_timestamp(),
				nm_usuario_p,
				ds_lote_fornec_w,
				dt_validade_w,
				cd_cgc_lote_w,
				1,
				cd_estabelecimento_w,
				'N',
				'A',
				nr_seq_marca_w,
				nr_emprestimo_p);

			/*Gera o saldo de estoque para o lote gerado para o item*/

			if (ie_estoque_lote_w = 'S') then

				insert into saldo_estoque_lote(
					cd_estabelecimento,
					cd_local_estoque,
					cd_material,
					dt_mesano_referencia,
					nr_seq_lote,
					qt_estoque,
					dt_atualizacao,
					nm_usuario)
				values ( cd_estabelecimento_w,
					cd_local_estoque_w,
					cd_material_estoque_w,
					PKG_DATE_UTILS.start_of(clock_timestamp(),'month',0),
					nr_seq_lote_w,
					1,
					clock_timestamp(),
					nm_usuario_p);
			end if;
			end;
		end loop;
	end if;
	
	update	emprestimo_material
	set	nr_seq_lote = nr_seq_lote_w
	where	nr_emprestimo = nr_emprestimo_p
	and	nr_sequencia = nr_seq_item_w;
	end;
end loop;
close c01;


if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lotes_estoque_lote ( nr_emprestimo_p bigint, nm_usuario_p text, ie_commit_p text default 'S') FROM PUBLIC;

