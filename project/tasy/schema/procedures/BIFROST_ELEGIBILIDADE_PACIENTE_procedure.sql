-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE TP_PARAMETROS_ROW AS (
CD_PESSOA_FISICA     PESSOA_FISICA.CD_PESSOA_FISICA%TYPE,
NM_PESSOA_FISICA	 PESSOA_FISICA.NM_PESSOA_FISICA%TYPE,
CD_CONVENIO          PESSOA_TITULAR_CONVENIO.CD_CONVENIO%TYPE,
CD_CATEGORIA         PESSOA_TITULAR_CONVENIO.CD_CATEGORIA%TYPE,
CD_PLANO_CONVENIO    PESSOA_TITULAR_CONVENIO.CD_PLANO_CONVENIO%TYPE,
DT_VALIDADE_CARTEIRA PESSOA_TITULAR_CONVENIO.DT_VALIDADE_CARTEIRA%TYPE,
CD_CGC               ESTABELECIMENTO.CD_CGC%TYPE,
NR_SEQ_ELEG          varchar(20),
NR_SEQ_XML_PROJETO   bigint,
NR_SEQ_TISS_LOG      bigint,
NM_ARQUIVO           varchar(255),
NR_SEQ_LOG           bigint
);


CREATE OR REPLACE PROCEDURE bifrost_elegibilidade_paciente (COD_CARTEIRINHA_P text, CD_ESTABELECIMENTO_P bigint, NM_USUARIO_P text, NR_SEQUENCIA_PTC_P bigint, SERVIDOR_WS_P INOUT text, XML_PARAM_P INOUT text, XML_ENVIO_P INOUT text, NR_SEQ_PROJETO_P INOUT bigint, NR_SEQ_TISS_LOG_P INOUT bigint, cd_convenio_p bigint default null, cd_categoria_p text default null, cd_plano_p text default null, dt_validade_carteira_p timestamp default null, nm_pessoa_fisica_p text default null) AS $body$
DECLARE


TP_PARAMETROS_W TP_PARAMETROS_ROW;

BEGIN
	IF (NR_SEQUENCIA_PTC_P IS NOT NULL AND NR_SEQUENCIA_PTC_P::text <> '') AND (NR_SEQUENCIA_PTC_P <> 0) THEN
		-- Busca os dados do convenio cadastrado no Cadastro de Pessoa Fisica no Tasy..

		-- A classe (EligibilityIntegration.java) ja busca o registro correto e passa como parametro

		-- a sequencia so mesmo, para nao ser necessario passar mtos parametros para a procedure..
		SELECT PTC.CD_PESSOA_FISICA,
			NM_PESSOA_FISICA_P,
			PTC.CD_CONVENIO,
			PTC.CD_CATEGORIA,
			PTC.CD_PLANO_CONVENIO,
			PTC.DT_VALIDADE_CARTEIRA,
			(SELECT CD_CGC
			   FROM ESTABELECIMENTO
			  WHERE CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_P) CD_CGC,

			NULL NR_SEQ_ELEG,
			NULL NR_SEQ_XML_PROJETO,
			NULL NR_SEQ_TISS_LOG,
			NULL NM_ARQUIVO,
			NULL NR_SEQ_LOG
		INTO STRICT TP_PARAMETROS_W
		FROM PESSOA_TITULAR_CONVENIO PTC
		WHERE PTC.NR_SEQUENCIA = NR_SEQUENCIA_PTC_P;

		
	ELSE
		SELECT 	NULL,
				NM_PESSOA_FISICA_P,
				CD_CONVENIO_P,
				CD_CATEGORIA_P,
				CD_PLANO_P,
				DT_VALIDADE_CARTEIRA_P,
				(SELECT CD_CGC
				FROM ESTABELECIMENTO
				WHERE CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_P) CD_CGC,
				NULL NR_SEQ_ELEG,
				NULL NR_SEQ_XML_PROJETO,
				NULL NR_SEQ_TISS_LOG,
				NULL NM_ARQUIVO,
				NULL NR_SEQ_LOG
		INTO STRICT 	TP_PARAMETROS_W
		;
	END IF;
	
	IF (coalesce(TP_PARAMETROS_W.CD_CONVENIO::text, '') = '') THEN
	CALL wheb_mensagem_pck.exibir_mensagem_abort('Cod. convenio nao cadastrado para o paciente.');
	END IF;

	IF (TISS_OBTER_SE_COMUNIC_WS(TP_PARAMETROS_W.CD_CONVENIO, CD_ESTABELECIMENTO_P, '13') = 'N') THEN
	CALL wheb_mensagem_pck.exibir_mensagem_abort('Sem comunicacao cadastrada para convenio/estabelecimento. Verificar cadastro: Cadastro gerais > TISS > TISS - Convenio');
	END IF;

	IF (OBTER_SE_PROJETO_VERSAO(0, 4, TISS_OBTER_VERSAO(TP_PARAMETROS_W.CD_CONVENIO, CD_ESTABELECIMENTO_P), 0) <> 'S') THEN
	CALL wheb_mensagem_pck.exibir_mensagem_abort('Versao do TISS e invalida. Verificar cadastro: Cadastro gerais > TISS > TISS - Convenio');
	END IF;

	--Retorna o endereco do WS para a classe(EligibilityIntegration.java) fazer a requisicao..
	SERVIDOR_WS_P := TISS_OBTER_SERVIDOR_INT(CD_ESTABELECIMENTO_P, TP_PARAMETROS_W.CD_CONVENIO);

	IF (coalesce(trim(both SERVIDOR_WS_P)::text, '') = '') THEN
	CALL wheb_mensagem_pck.exibir_mensagem_abort('Servidor de integracao do TISS nao cadastrado. Verificar cadastro: Cadastro gerais > TISS > TISS - Servidor de integracao');
	END IF;
	
	TP_PARAMETROS_W.NR_SEQ_ELEG := TISS_GERAR_ELEG(CD_ESTABELECIMENTO_P, TP_PARAMETROS_W.CD_CONVENIO, TP_PARAMETROS_W.CD_PLANO_CONVENIO, TP_PARAMETROS_W.DT_VALIDADE_CARTEIRA, TP_PARAMETROS_W.CD_CGC, TP_PARAMETROS_W.CD_PESSOA_FISICA, COD_CARTEIRINHA_P, NM_USUARIO_P, null, TP_PARAMETROS_W.CD_CATEGORIA, null, null, TP_PARAMETROS_W.NR_SEQ_ELEG, TP_PARAMETROS_W.nm_pessoa_fisica
				);

	-- Gera o XML de envio..
	SELECT * FROM TISS_GERAR_XML_BANCO(CD_ESTABELECIMENTO_P => CD_ESTABELECIMENTO_P, CD_FUNCAO_ATIVA_P => NULL, NM_USUARIO_P => NM_USUARIO_P, IE_TIPO_TISS_P => '13', NR_SEQ_OUTORGANTE_P => 0, CD_CONVENIO_P => TP_PARAMETROS_W.CD_CONVENIO, NR_SEQ_XML_PROJETO_P => TP_PARAMETROS_W.NR_SEQ_XML_PROJETO, NR_SEQ_TISS_LOG_P => TP_PARAMETROS_W.NR_SEQ_TISS_LOG, NM_ARQUIVO_P => TP_PARAMETROS_W.NM_ARQUIVO, NR_SEQ_ELEG_P => TP_PARAMETROS_W.NR_SEQ_ELEG) INTO STRICT NR_SEQ_XML_PROJETO_P => TP_PARAMETROS_W.NR_SEQ_XML_PROJETO, NR_SEQ_TISS_LOG_P => TP_PARAMETROS_W.NR_SEQ_TISS_LOG, NM_ARQUIVO_P => TP_PARAMETROS_W.NM_ARQUIVO;

	-- Gera o XML de parametros..
	TP_PARAMETROS_W.NR_SEQ_LOG
					  := TISS_GERAR_XML_PARAM(CD_ESTABELECIMENTO_P, TP_PARAMETROS_W.CD_CONVENIO, '13', NULL, TP_PARAMETROS_W.NR_SEQ_TISS_LOG, TP_PARAMETROS_W.NR_SEQ_LOG
					 );

	COMMIT;

	-- Retorna para a classe(EligibilityIntegration.java) o XML de parametro e XML de envio para ser feita a requisicao ao WS..
	begin
		SELECT DS_XML
		INTO STRICT XML_PARAM_P
		FROM TASY_XML_BANCO
		WHERE NR_SEQUENCIA = TP_PARAMETROS_W.NR_SEQ_LOG;
	exception
	when no_data_found then
		XML_PARAM_P := null;
	end;
	
	begin
		SELECT DS_XML,
			   NR_SEQUENCIA
		INTO STRICT XML_ENVIO_P,
			 NR_SEQ_TISS_LOG_P
		FROM TISS_LOG
		WHERE NR_SEQUENCIA = TP_PARAMETROS_W.NR_SEQ_TISS_LOG;
	exception
	when no_data_found then
		XML_ENVIO_P := null;
		NR_SEQ_TISS_LOG_P := null;
	end;

	-- Retorna o Seq. Projeto para a classe(EligibilityIntegration.java)..
	NR_SEQ_PROJETO_P := TISS_OBTER_XML_PROJETO(TP_PARAMETROS_W.CD_CONVENIO,
											CD_ESTABELECIMENTO_P,
											13);
	-- A requisicao e retorno da mesma e feita pela classe(EligibilityIntegration.java)..
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bifrost_elegibilidade_paciente (COD_CARTEIRINHA_P text, CD_ESTABELECIMENTO_P bigint, NM_USUARIO_P text, NR_SEQUENCIA_PTC_P bigint, SERVIDOR_WS_P INOUT text, XML_PARAM_P INOUT text, XML_ENVIO_P INOUT text, NR_SEQ_PROJETO_P INOUT bigint, NR_SEQ_TISS_LOG_P INOUT bigint, cd_convenio_p bigint default null, cd_categoria_p text default null, cd_plano_p text default null, dt_validade_carteira_p timestamp default null, nm_pessoa_fisica_p text default null) FROM PUBLIC;

