-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_aprovacao_reg_lic ( nr_seq_licitacao_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

 
qt_existe_w			bigint;
ds_erro_w			varchar(255);
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_perfil_w			perfil.cd_perfil%type;
cd_processo_aprov_w		processo_aprov_estrut.cd_processo_aprov%type;
cd_material_w			material.cd_material%type;
nr_seq_proj_rec_w			projeto_recurso.nr_sequencia%type;
dt_lib_aprovacao_w		reg_licitacao.dt_lib_aprovacao%type;
dt_aprovacao_w			reg_licitacao.dt_aprovacao%type;

C01 CURSOR FOR 
SELECT	cd_material, 
	nr_seq_proj_rec 
from	reg_lic_item 
where	nr_seq_licitacao = nr_seq_licitacao_p;


BEGIN 
cd_perfil_w	:= obter_perfil_ativo;
ds_erro_w	:= '';
 
select	dt_lib_aprovacao, 
	dt_aprovacao, 
	cd_estabelecimento 
into STRICT	dt_lib_aprovacao_w, 
	dt_aprovacao_w, 
	cd_estabelecimento_w 
from	reg_licitacao 
where	nr_sequencia = nr_seq_licitacao_p;
 
select	count(*) 
into STRICT	qt_existe_w 
from	reg_lic_item 
where	nr_seq_licitacao = nr_seq_licitacao_p 
and	(dt_reprovacao IS NOT NULL AND dt_reprovacao::text <> '');
	 
if (qt_existe_w > 0) then 
	ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(281592);
end if;
	 
select	count(*) 
into STRICT	qt_existe_w 
from	processo_aprovacao a, 
	processo_aprov_resp b 
where	a.cd_processo_aprov = b.cd_processo_aprov 
and	a.ie_situacao = 'A' 
and	coalesce(b.ie_reg_licitacao,'N') = 'S';
			 
if (qt_existe_w > 0) then 
	 
	open C01;
	loop 
	fetch C01 into	 
		cd_material_w, 
		nr_seq_proj_rec_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		cd_processo_aprov_w := obter_processo_aprovacao( 
			cd_material_w, 0, 0, 0, 0, 0, 0, 0, 0, 'L', 'N', cd_estabelecimento_w, cd_perfil_w, nr_seq_proj_rec_w, null, cd_processo_aprov_w);
			 
		if (cd_processo_aprov_w > 0) and (coalesce(dt_lib_aprovacao_w::text, '') = '') then 
			ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(281593);
		elsif (cd_processo_aprov_w > 0) and (coalesce(dt_aprovacao_w::text, '') = '') then 
			ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(281594);
		end if;
		 
		end;
	end loop;
	close C01;
end if;
 
ds_erro_p	:= ds_erro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_aprovacao_reg_lic ( nr_seq_licitacao_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

