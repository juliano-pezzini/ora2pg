-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_copiar_transf_agenda_ex (cd_estabelecimento_p bigint, cd_medico_Exec_p text, nr_seq_origem_p bigint, nr_seq_destino_p bigint, ie_acao_p text, nr_seq_motivo_p bigint, ds_motivo_p text, nm_usuario_p text, nr_seq_ageint_p bigint default null, hr_Agenda_p timestamp default null, nr_duracao_item_p bigint default null) AS $body$
DECLARE


/* variaveis registros */

cd_agenda_w                     		bigint;
cd_pessoa_fisica_w              		varchar(10);
hr_inicio_w			timestamp;
nr_minuto_duracao_w		bigint;
cd_medico_w                     		varchar(10);
nm_pessoa_contato_w             	varchar(50);
cd_procedimento_w               		bigint;
ds_observacao_w                 		varchar(4000);
cd_convenio_w                   		integer;
qt_idade_paciente_w             		smallint;
ie_origem_proced_w              		bigint;
ie_status_agenda_w              		varchar(3);
ds_senha_w                      		varchar(20);
nm_paciente_w                   		varchar(60);
nr_atendimento_w                		bigint;
cd_usuario_convenio_w           	varchar(30);
dt_agendamento_w			timestamp;
nm_usuario_orig_w			varchar(15);
nm_usuario_ant_w			varchar(15);
qt_idade_mes_w                  		smallint;
cd_plano_w                      		varchar(10);
nr_telefone_w                   		varchar(255);
ie_autorizacao_w                		varchar(3);
vl_previsto_w                   		double precision;
nr_seq_age_cons_w	agenda_paciente.nr_seq_age_cons%type;
cd_medico_exec_w                		varchar(10);
nr_seq_classif_agenda_w         	bigint;
cd_procedencia_w                		integer;
cd_categoria_w                  		varchar(10);
cd_tipo_acomodacao_w            	smallint;
nr_doc_convenio_w             	  	varchar(20);
dt_validade_carteira_w          		timestamp;
nr_seq_proc_interno_w           	bigint;
nr_seq_status_pac_w           	  	bigint;
ie_lado_w                       		varchar(1);
ds_laboratorio_w                		varchar(80);
cd_doenca_cid_w                	 	varchar(10);
dt_nascimento_pac_w             	timestamp;
nr_seq_sala_w                  		bigint;
nm_medico_externo_w             	varchar(60);
ie_tipo_atendimento_w          		smallint;
cd_medico_req_w                 		varchar(10);
nr_seq_pq_proc_w                		bigint;
nr_seq_indicacao_w              		bigint;
cd_pessoa_indicacao_w           	varchar(10);
qt_prescricao_w			bigint;
nr_seq_proced_w			integer;
ds_cirurgia_w			varchar(500);
qt_peso_w			real;
nr_seq_status_pac_dest_w		bigint;
qt_altura_cm_w			real;
qt_autorizacoes_w			bigint;
cd_cnpj_prestador_w		varchar(14);
cd_unidade_externa_w		varchar(60);
ie_necessita_internacao_w		varchar(1);
ie_anestesia_w			varchar(1);
nr_seq_tipo_classif_pac_w		bigint;
nr_secao_w			bigint;
qt_total_secao_w			bigint;
cd_anestesista_w			varchar(10);
qt_anexo_w			bigint;
nr_seq_segurado_w   agenda_paciente.nr_seq_segurado%type;


/* variaveis parametros */

ie_manut_proced_w		varchar(1);
ie_duracao_copia_w		varchar(1);
ie_duracao_transf_w		varchar(1);
ie_user_orig_transf_w		varchar(1);
ie_atend_copia_w			varchar(1);
ie_atend_transf_w			varchar(1);
ie_status_copia_w			varchar(1);
ie_status_transf_w			varchar(1);
nr_seq_status_pac_copia_w		bigint;
nr_seq_status_pac_transf_w		bigint;
ie_classif_orig_transf_w		varchar(1);
ie_canc_agenda_transf_w		varchar(1)	:= 'N';
ie_medico_exec_transf_w		varchar(1);
ie_medico_exec_copia_w		varchar(1);
ie_observacao_copia_w		varchar(1);
nr_doc_convenio_copia_w		varchar(1);

/* variaveis complementares */

ie_manter_duracao_w		varchar(1) := 'N';
ie_manter_usuario_w		varchar(1) := 'N';
ie_manter_atend_w		varchar(1) := 'S';
ie_manter_status_w		varchar(1) := 'N';
cd_agenda_destino_w		bigint;
hr_destino_w			timestamp;

/* variaveis historico */

atrib_oldvalue_w			varchar(50);
atrib_newvalue_w			varchar(50);
IE_FORMA_AGENDAMENTO_w	bigint;

cd_empresa_ref_w		bigint;
cd_Setor_atendimento_w	integer;
dt_confirmacao_w		timestamp;

ie_setor_transf_w		varchar(1);
cd_setor_origem_w		integer;
cd_setor_destino_w		integer;
ds_motivo_transf_w		varchar(255);

ie_sala_transf_w		varchar(1);
ie_sala_copia_w		varchar(1);
ie_utiliza_agfa_w		varchar(1);
ie_lado_adic_w		varchar(1);
cd_medico_adic_w		varchar(10);
nr_seq_item_ageint_w	bigint;
ie_reserva_transf_w	varchar(1);
nr_reserva_w		varchar(20);
cd_estab_origem_w			smallint;
cd_estab_destino_w			smallint;
ie_modo_gerar_reserva_w			varchar(1);
nr_seq_agenda_princ_w		agenda_paciente_proc.nr_seq_agenda_princ%type;
nr_seq_item_adic_ageint_w		agenda_paciente_proc.nr_seq_item_adic_ageint%type;

ds_abrev_origem_w 	varchar(50);
ds_abrev_dest_w		varchar(50);
dt_agenda_w		timestamp;

/* variaveis confirmacao agendamento */

nm_usuario_confirm_w		usuario.nm_usuario%type;
ie_confirmacao_aut_w		varchar(1);
qt_dias_confirm_aut_w		bigint;

cd_medico_exec_ww agenda_paciente.cd_medico_exec%type;
qt_autor_evento_w bigint;
nr_seq_person_name_w        agenda_paciente.nr_seq_person_name%type;

cd_depto_medico_w 					agenda_paciente_auxiliar.cd_depto_medico%type;
cd_setor_atendimento_ww 				agenda_paciente_auxiliar.cd_setor_atendimento%type;
nr_seq_agenda_w 					agenda_paciente_auxiliar.nr_seq_agenda%type;
ie_posicao_w  						agenda_paciente_auxiliar.ie_posicao%type;
nr_seq_classif_atend_w 				agenda_paciente_auxiliar.nr_seq_classif_atend%type;
ie_adv_appointment_w 				agenda_paciente_auxiliar.ie_adv_appointment%type;
nr_seq_cpoe_procedimento_w 			agenda_paciente_auxiliar.nr_seq_cpoe_procedimento%type;
ie_reference_letter_w 				agenda_paciente_auxiliar.ie_reference_letter%type;
ie_emergency_response_req_w 	agenda_paciente_auxiliar.ie_emergency_response_required%type;
ds_procedencia_var_w 				agenda_paciente_auxiliar.ds_procedencia_var%type;
cd_evolucao_w 						agenda_paciente_auxiliar.cd_evolucao%type;
qt_aux_count_w                      smallint:= 0;
qt_aux_count_dest_w                 smallint:= 0;
vl_coparticipacao_w		agenda_paciente_auxiliar.vl_coparticipacao%type;
vl_coparticipacao_adic_w	agenda_paciente_proc.vl_coparticipacao%type;
cd_medico_exec_dest_w			agenda_paciente.cd_medico_exec%type;
qt_min_dur_tempo_proced_w		bigint := 0;
cd_procedimento_w_regra		agenda_paciente_proc.cd_procedimento%type;
ie_origem_proced_regra_w	bigint;
nr_seq_proc_interno_regra_w	bigint;
ie_lado_adic_regra_w		varchar(1);
qt_min_dur_tempo_proc_adic_w	bigint := 0;
qt_tot_min_dur_proc_adic_w 	bigint := 0;
qt_min_tot_agend_w		bigint := 0;
ie_se_hor_sobreposto_w		varchar(1);
ie_consistir_sobrep_w		varchar(1);
ie_cons_dur_proc_fim_turno_w	varchar(1) := 'N';
ds_consistencia_fim_turno_w	varchar(255) := '';
nr_min_dur_fim_turno_w				bigint;	
nr_minuto_duracao_www			bigint;
cd_medico_rec_adic_w			agenda_paciente_proc.cd_medico_req%type;
qt_tipo_guia_w					bigint;
ie_tipo_guia_w					agenda_paciente.ie_tipo_guia%type;

/* cursores */


/* obter procedimentos adicionais */

c01 CURSOR FOR
SELECT	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno,
	ie_lado,
	cd_medico,
	nr_seq_agenda_princ,	
	nr_seq_item_adic_ageint,
    vl_coparticipacao,
	cd_medico_req
from	agenda_paciente_proc
where	nr_sequencia = nr_seq_origem_p
order by
	nr_seq_agenda;


BEGIN
if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nr_seq_origem_p IS NOT NULL AND nr_seq_origem_p::text <> '') and (nr_seq_destino_p IS NOT NULL AND nr_seq_destino_p::text <> '') and (ie_acao_p IS NOT NULL AND ie_acao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	/* obter parametros */

	ie_manut_proced_w := obter_param_usuario(820, 12, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_manut_proced_w);
	
	ie_utiliza_agfa_w := Obter_Param_Usuario(869, 31, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_agfa_w);
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_DURACAO_COPIA', 'N')
	into STRICT	ie_duracao_copia_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_DURACAO_TRANSF', 'N')
	into STRICT	ie_duracao_transf_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_USUARIO_ORIG_TRANSF', 'N')
	into STRICT	ie_user_orig_transf_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_ATEND_COPIA', 'S')
	into STRICT	ie_atend_copia_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_ATEND_TRANSF', 'S')
	into STRICT	ie_atend_transf_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_STATUS_COPIA', 'N')
	into STRICT	ie_status_copia_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_STATUS_TRANSF', 'N')
	into STRICT	ie_status_transf_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'NR_SEQ_STATUS_PAC_COPIA', null)
	into STRICT	nr_seq_status_pac_copia_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'NR_SEQ_STATUS_PAC_TRANSF', null)
	into STRICT	nr_seq_status_pac_transf_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CLASSIF_ORIG_TRANSF', 'N')
	into STRICT	ie_classif_orig_transf_w
	;
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_SETOR_TRANSFERENCIA', 'N')
	into STRICT	ie_setor_transf_w
	;
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_MEDICO_EXEC_TRANSF', 'S')
	into STRICT	ie_medico_exec_transf_w
	;
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_MEDICO_EXEC_COPIA', 'S')
	into STRICT	ie_medico_exec_copia_w
	;
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_SALA_COPIA', 'S')
	into STRICT	ie_sala_copia_w
	;
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_SALA_TRANSF', 'S')
	into STRICT	ie_sala_transf_w
	;
	
	select 	obter_parametro_agenda(cd_estabelecimento_p, 'IE_DOC_CONV_COPIA', 'S')
	into STRICT	nr_doc_convenio_copia_w
	;

	select 	coalesce(max(obter_valor_param_usuario(869, 77, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), '0')
	into STRICT   	qt_dias_confirm_aut_w
	;
	
	select 	obter_parametro_agenda(cd_estabelecimento_p, 'IE_RESERVA_TRANSF', 'S')
	into STRICT	ie_reserva_transf_w
	;
	
	select 	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CONSISTE_DURACAO', 'I')
	into STRICT	ie_consistir_sobrep_w
	;

	ie_observacao_copia_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_OBS_COPIA', 'S');
	
	ie_modo_gerar_reserva_w := obter_param_usuario(869, 102, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_modo_gerar_reserva_w);	
	
	/* obter dados origem */

	select	a.cd_agenda,
		a.cd_pessoa_fisica,
		a.hr_inicio,
		a.nr_minuto_duracao,
		a.cd_medico,
		a.nm_pessoa_contato,
		a.cd_procedimento,
		a.ds_observacao,
		a.cd_convenio,
		a.qt_idade_paciente,
		a.ie_origem_proced,
		a.ie_status_agenda,
		a.ds_senha,
		a.nm_paciente,
		a.nr_atendimento,
		a.cd_usuario_convenio,
		a.dt_agendamento,
		a.nm_usuario_orig,
		a.qt_idade_mes,
		a.cd_plano,
		a.nr_telefone,
		a.ie_autorizacao,
		a.vl_previsto,
		a.nr_seq_age_cons,
		a.cd_medico_exec,
		a.nr_seq_classif_agenda,
		a.cd_procedencia,
		a.cd_categoria,
		a.cd_tipo_acomodacao,
		a.nr_doc_convenio,
		a.dt_validade_carteira,
		a.nr_seq_proc_interno,
		a.nr_seq_status_pac,
		a.ie_lado,
		a.ds_laboratorio,
		a.cd_doenca_cid,
		a.dt_nascimento_pac,
		a.nr_seq_sala,
		a.nm_medico_externo,
		a.ie_tipo_atendimento,
		a.cd_medico_req,
		a.nr_seq_pq_proc,
		a.nr_seq_indicacao,
		a.cd_pessoa_indicacao,
		a.ds_cirurgia,
		a.qt_peso,
		a.qt_altura_cm,
		a.IE_FORMA_AGENDAMENTO,
		a.cd_empresa_ref,
		a.cd_Setor_atendimento,
		a.dt_confirmacao,	
		a.cd_setor_origem,
		a.cd_setor_destino,
		a.cd_cnpj_prestador,
		a.cd_unidade_externa,
		a.ie_necessita_internacao,
		a.ie_anestesia,
		a.nr_seq_tipo_classif_pac,
		a.nr_secao,
		a.qt_total_secao,
		a.cd_anestesista,
		a.nm_usuario,
		a.nr_reserva,
		b.cd_estabelecimento,
		a.nr_seq_segurado,
		a.nr_seq_person_name
	into STRICT	cd_agenda_w,
		cd_pessoa_fisica_w,
		hr_inicio_w,
		nr_minuto_duracao_w,
		cd_medico_w,
		nm_pessoa_contato_w,
		cd_procedimento_w,
		ds_observacao_w,
		cd_convenio_w,
		qt_idade_paciente_w,
		ie_origem_proced_w,
		ie_status_agenda_w,
		ds_senha_w,
		nm_paciente_w,
		nr_atendimento_w,
		cd_usuario_convenio_w,
		dt_agendamento_w,
		nm_usuario_orig_w,
		qt_idade_mes_w,
		cd_plano_w,
		nr_telefone_w,
		ie_autorizacao_w,
		vl_previsto_w,
		nr_seq_age_cons_w,
		cd_medico_exec_w,
		nr_seq_classif_agenda_w,
		cd_procedencia_w,
		cd_categoria_w,
		cd_tipo_acomodacao_w,
		nr_doc_convenio_w,
		dt_validade_carteira_w,
		nr_seq_proc_interno_w,
		nr_seq_status_pac_w,
		ie_lado_w,
		ds_laboratorio_w,
		cd_doenca_cid_w,
		dt_nascimento_pac_w,
		nr_seq_sala_w,
		nm_medico_externo_w,
		ie_tipo_atendimento_w,
		cd_medico_req_w,
		nr_seq_pq_proc_w,
		nr_seq_indicacao_w,
		cd_pessoa_indicacao_w,
		ds_cirurgia_w,
		qt_peso_w,
		qt_altura_cm_w,
		IE_FORMA_AGENDAMENTO_w,
		cd_empresa_ref_w,
		cd_Setor_atendimento_w,
		dt_confirmacao_w,
		cd_setor_origem_w,
		cd_setor_destino_w,
		cd_cnpj_prestador_w,
		cd_unidade_externa_w,
		ie_necessita_internacao_w,
		ie_anestesia_w,
		nr_seq_tipo_classif_pac_w,
		nr_secao_w,
		qt_total_secao_w,
		cd_anestesista_w,
		nm_usuario_ant_w,
		nr_reserva_w,
		cd_estab_origem_w,
		nr_seq_segurado_w,
		nr_seq_person_name_w
	from	agenda_paciente a,
		agenda b
	where	a.cd_agenda 	= b.cd_agenda
	and	a.nr_sequencia 	= nr_seq_origem_p;

	/* obter dados destino */

	select	a.cd_agenda,
		a.hr_inicio,
		b.cd_estabelecimento,
		a.cd_medico_exec,
		a.nr_minuto_duracao
	into STRICT	cd_agenda_destino_w,
		hr_destino_w,
		cd_estab_destino_w,
		cd_medico_exec_dest_w,
		nr_minuto_duracao_www
	from	agenda_paciente a,
		agenda b
	where	a.cd_agenda	= b.cd_agenda
	and	a.nr_sequencia	= nr_seq_destino_p;

  if (qt_dias_confirm_aut_w > 0) and (Ageint_Obter_Qt_Dia_Util_Per(clock_timestamp(), hr_agenda_p, cd_estabelecimento_p) <= qt_dias_confirm_aut_w)
		and (ie_acao_p <> 'C') and (ie_manter_status_w <> 'S') then
		dt_confirmacao_w	    := clock_timestamp();
		nm_usuario_confirm_w	:= nm_usuario_p;
		ie_confirmacao_aut_w	:= 'S';
	else
		dt_confirmacao_w	    := null;
		nm_usuario_confirm_w	:= null;
		ie_confirmacao_aut_w	:= 'N';
	end if;
	
	if (cd_estab_origem_w	<> cd_estab_destino_w) then
		if (ie_modo_gerar_reserva_w	= '1') then			
			if (ie_acao_p = 'T') then
				ds_abrev_origem_w 	:= upper(obter_abrev_estabelecimento(cd_estab_origem_w));
				ds_abrev_dest_w		:= upper(obter_abrev_estabelecimento(cd_estab_destino_w));
				nr_reserva_w	:= substr(replace(nr_reserva_w,ds_abrev_origem_w,ds_abrev_dest_w),1,20);
			else
				nr_reserva_w	:= Ageint_Obter_Reserva_Pac(nr_seq_destino_p, hr_destino_w, cd_pessoa_fisica_w, cd_estab_destino_w,'E');
			end if;
		end if;
	end if;

	/* tratar parametros */

	if (ie_manut_proced_w = 'N') or
		(ie_manut_proced_w = 'C' AND ie_acao_p = 'T') or
		(ie_manut_proced_w = 'T' AND ie_acao_p = 'C') then
		cd_procedimento_w := null;
		ie_origem_proced_w := null;
		nr_seq_proc_interno_w := null;
	end if;

	if (ie_acao_p = 'C') then
	
		if (nr_doc_convenio_copia_w = 'N') then
			nr_doc_convenio_w := '';
		end if;		
		
		
		if (ie_sala_copia_w = 'N') then
			nr_seq_sala_w	:= '';
		end if;
		
		
		if (ie_medico_exec_copia_w = 'N') then
			cd_medico_exec_w 	:= '';
		end if;
		
		if (ie_duracao_copia_w = 'S') then
			ie_manter_duracao_w := 'S';
		elsif (ie_duracao_copia_w = 'P') then
			select	obter_se_mantem_duracao_agenda(cd_agenda_destino_w,nr_seq_destino_p,hr_destino_w,nr_minuto_duracao_w)
			into STRICT	ie_manter_duracao_w
			;
		else
			ie_manter_duracao_w := 'N';
		end if;
		ie_manter_atend_w := ie_atend_copia_w;

		if (ie_status_copia_w = 'S') then
			ie_manter_status_w := 'S';
		elsif (ie_status_copia_w = 'A') and (ie_manter_atend_w = 'S') and (nr_atendimento_w > 0) then
			ie_manter_status_w := 'S';
		end if;
		
		if (ie_observacao_copia_w = 'N') then
			ds_observacao_w	:= '';
		end if;
		
		nr_secao_w		:= '';
		qt_total_secao_w	:= '';
		
	elsif (ie_acao_p = 'T') then
				
		begin
		/* OS 96088 - Jerusa em 10/06/2008 */

		if (ie_status_agenda_w = 'C') then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(277350);
		end if;

		if (ie_duracao_transf_w = 'S') then
			ie_manter_duracao_w := 'S';
		elsif (ie_duracao_transf_w = 'P') then
			select	obter_se_mantem_duracao_agenda(cd_agenda_destino_w,nr_seq_destino_p,hr_destino_w,nr_minuto_duracao_w)
			into STRICT	ie_manter_duracao_w
			;
		else
			ie_manter_duracao_w := 'N';
		end if;
		ie_manter_usuario_w	:= ie_user_orig_transf_w;
		ie_manter_atend_w	:= ie_atend_transf_w;

		if (ie_status_transf_w = 'S') then
			ie_manter_status_w := 'S';
		elsif (ie_status_transf_w = 'A') and (ie_manter_atend_w = 'S') and (nr_atendimento_w > 0) then
			ie_manter_status_w := 'S';
		end if;
		
		if (ie_medico_exec_transf_w = 'N') then
			cd_medico_exec_w 	:= '';
		end if;
		
		if (ie_sala_transf_w = 'N') then
			nr_seq_sala_w	:= '';
		end if;
		
		
		select	count(*)
		into STRICT	qt_anexo_w
		from	anexo_agenda
		where	nr_seq_agenda	= nr_seq_origem_p;
		
		if (qt_anexo_w > 0) then
			
			update	anexo_agenda
			set	nr_seq_agenda	= nr_seq_destino_p
			where	nr_seq_agenda	= nr_seq_origem_p;
			
		end if;
		
		end;
	end if;

	/* OS 96088 - Jerusa em 10/06/2008 */

	select	CASE WHEN ie_acao_p='C' THEN  CASE WHEN coalesce(nr_seq_status_pac_copia_w::text, '') = '' THEN  nr_seq_status_pac_w  ELSE nr_seq_status_pac_copia_w END   ELSE CASE WHEN coalesce(nr_seq_status_pac_transf_w::text, '') = '' THEN  nr_seq_status_pac_w  ELSE nr_seq_status_pac_transf_w END  END
	into STRICT	nr_seq_status_pac_dest_w
	;

	/*Consistir a regra 'Tempo Proced' ao efetuar a copia/transferencia*/

	if (cd_agenda_destino_w IS NOT NULL AND cd_agenda_destino_w::text <> '')then
		begin		
		select	obter_tempo_duracao_proced(	cd_agenda_destino_w,
							cd_medico_exec_dest_w,
							cd_procedimento_w,
							ie_origem_proced_w,
							cd_pessoa_fisica_w,
							nr_seq_proc_interno_w,
							ie_lado_w,
							cd_convenio_w,
							cd_categoria_w,
							cd_plano_w,
							nr_seq_destino_p,
							null)
		into STRICT	qt_min_dur_tempo_proced_w
		;
		exception
		when others then
			qt_min_dur_tempo_proced_w := 0;	
		end;	
	end if;	

	/*Consistir a regra 'Tempo Proced' ao efetuar a copia/transferencia para os procedimentos adicionais*/

	open c01;
	loop
	fetch c01 into	cd_procedimento_w_regra,
			ie_origem_proced_regra_w,
			nr_seq_proc_interno_regra_w,
			ie_lado_adic_regra_w,
			cd_medico_adic_w,
			nr_seq_agenda_princ_w,
			nr_seq_item_adic_ageint_w,
			vl_coparticipacao_adic_w,
			cd_medico_rec_adic_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin						
		if (cd_agenda_destino_w IS NOT NULL AND cd_agenda_destino_w::text <> '')then
			begin		
			select	obter_tempo_duracao_proced(	cd_agenda_destino_w,
								coalesce(cd_medico_adic_w, cd_medico_exec_dest_w),
								cd_procedimento_w_regra,
								ie_origem_proced_regra_w,
								cd_pessoa_fisica_w,
								nr_seq_proc_interno_regra_w,
								ie_lado_adic_regra_w,
								cd_convenio_w,
								cd_categoria_w,
								cd_plano_w,
								nr_seq_destino_p,
								null)
			into STRICT	qt_min_dur_tempo_proc_adic_w
			;
			exception
			when others then
				qt_min_dur_tempo_proc_adic_w := 0;	
			end;	
			
		qt_tot_min_dur_proc_adic_w	:= qt_tot_min_dur_proc_adic_w + qt_min_dur_tempo_proc_adic_w;
		end if;			
		end;
	end loop;
	close c01;
	qt_min_tot_agend_w	:= qt_min_dur_tempo_proced_w + qt_tot_min_dur_proc_adic_w;	
	
	/*Consistir sobreposicao de horarios caso o proximo agendamento nao estiver livre*/

	if (ie_consistir_sobrep_w = 'I') then
		
		select	coalesce(obter_se_sobreposicao_horario(cd_agenda_destino_w, hr_destino_w, qt_min_tot_agend_w), 'N')
		into STRICT	ie_se_hor_sobreposto_w
		;
		
		if (ie_se_hor_sobreposto_w = 'S')then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(262523);
		end if;		
	end if;

	/*Consistir a duracao do exame principal/adicionais de acordo com a duracao do final do turno*/

	if (ie_cons_dur_proc_fim_turno_w = 'S')then
		begin
		
		select	coalesce(CASE WHEN coalesce(qt_min_tot_agend_w, 0)=0 THEN  CASE WHEN ie_manter_duracao_w='S' THEN nr_minuto_duracao_w  ELSE nr_minuto_duracao_www END   ELSE qt_min_tot_agend_w END ,0)
		into STRICT	nr_min_dur_fim_turno_w
		;
		
		ds_consistencia_fim_turno_w := Consistir_dur_marcacao_exames(	hr_destino_w, cd_agenda_destino_w, nm_usuario_p, nr_min_dur_fim_turno_w, nr_seq_destino_p, null, null, ds_consistencia_fim_turno_w);							
		exception
		when others then
			ds_consistencia_fim_turno_w := '';
		end;

		if (ds_consistencia_fim_turno_w IS NOT NULL AND ds_consistencia_fim_turno_w::text <> '') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262328 , 'DS_MENSAGEM='||ds_consistencia_fim_turno_w);			
		end if;
		
	end if;	
	
	if (ie_setor_transf_w	= 'A') then
		cd_Setor_atendimento_w	:= obter_setor_agenda(cd_agenda_destino_w);
	elsif (ie_setor_transf_w	= 'N') then
		cd_setor_atendimento_w	:= '';
	end if;
	
	select CASE WHEN count(*)=0 THEN  ''  ELSE cd_medico_Exec_p END
	into STRICT cd_medico_Exec_ww
	from medico
	where cd_pessoa_fisica = cd_medico_Exec_p;
	
	select	coalesce(max(1), 0)
    into STRICT	qt_tipo_guia_w
    from	tipo_guia_atend
    where	ie_tipo_atendimento = ie_tipo_atendimento_w;

    if (qt_tipo_guia_w > 0) then
        
		select	max(ie_tipo_guia)
        into STRICT	ie_tipo_guia_w
        from	tipo_guia_atend 
        where	ie_tipo_atendimento = ie_tipo_atendimento_w
        and   	cd_estabelecimento  = cd_estabelecimento_p;

        if (coalesce(ie_tipo_guia_w::text, '') = '') then
			select	max(ie_tipo_guia)
			into STRICT	ie_tipo_guia_w
			from	tipo_guia_atend
			where	ie_tipo_atendimento = ie_tipo_atendimento_w
			and   	coalesce(cd_estabelecimento::text, '') = '';
        end if;

	end if;
	
	/* gerar dados destino */

	update	agenda_paciente
	set	cd_pessoa_fisica		= cd_pessoa_fisica_w,
		nr_minuto_duracao		= CASE WHEN ie_manter_duracao_w='S' THEN nr_minuto_duracao_w  ELSE coalesce(nr_duracao_item_p, nr_minuto_duracao) END ,				
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		cd_medico		= cd_medico_w,
		nm_pessoa_contato	= nm_pessoa_contato_w,
		cd_procedimento		= cd_procedimento_w,
		ds_observacao		= ds_observacao_w,
		cd_convenio		= cd_convenio_w,
		qt_idade_paciente		= qt_idade_paciente_w,
		ie_origem_proced		= ie_origem_proced_w,
		ie_status_agenda		= CASE WHEN ie_manter_status_w='S' THEN  ie_status_agenda_w  ELSE 'N' END ,
		dt_confirmacao		= dt_confirmacao_w,
		nm_usuario_confirm	= nm_usuario_confirm_w,
		ie_confirmacao_aut	= ie_confirmacao_aut_w,
		ds_senha			= ds_senha_w,
		nm_paciente		= nm_paciente_w,
		nr_atendimento		= CASE WHEN ie_manter_atend_w='S' THEN nr_atendimento_w  ELSE null END ,
		cd_usuario_convenio	= cd_usuario_convenio_w,
		nm_usuario_orig		= CASE WHEN ie_manter_usuario_w='S' THEN nm_usuario_orig_w  ELSE nm_usuario_p END ,
		qt_idade_mes		= qt_idade_mes_w,
		cd_plano			= cd_plano_w,
		nr_telefone		= nr_telefone_w,
		dt_agendamento		= CASE WHEN ie_acao_p='T' THEN dt_agendamento_w  ELSE clock_timestamp() END ,
		ie_autorizacao		= ie_autorizacao_w,
		vl_previsto		= vl_previsto_w,
		nr_seq_age_cons		= nr_seq_age_cons_w,
		cd_medico_exec		= cd_medico_Exec_ww,
		cd_procedencia		= cd_procedencia_w,
		cd_categoria		= cd_categoria_w,
		cd_tipo_acomodacao	= cd_tipo_acomodacao_w,
		nr_doc_convenio		= nr_doc_convenio_w,
		dt_validade_carteira	= dt_validade_carteira_w,
		nr_seq_proc_interno	= nr_seq_proc_interno_w,
		nr_seq_status_pac		= nr_seq_status_pac_dest_w,
		ie_lado			= ie_lado_w,
		ds_laboratorio		= ds_laboratorio_w,
		cd_doenca_cid		= cd_doenca_cid_w,
		dt_nascimento_pac		= dt_nascimento_pac_w,
		nr_seq_sala		= nr_seq_sala_w,
		nm_medico_externo		= nm_medico_externo_w,
		ie_tipo_atendimento		= ie_tipo_atendimento_w,
		cd_medico_req		= cd_medico_req_w,
		nr_seq_pq_proc		= nr_seq_pq_proc_w,
		nr_seq_indicacao		= nr_seq_indicacao_w,
		cd_pessoa_indicacao	= cd_pessoa_indicacao_w,
		ds_cirurgia		= ds_cirurgia_w,
		nr_seq_motivo_transf	= nr_seq_motivo_p,
		ds_motivo_copia_trans	= ds_motivo_p,
		dt_copia_trans		= clock_timestamp(),
		nm_usuario_copia_trans	= nm_usuario_p,
		qt_peso			= qt_peso_w,
		qt_altura_cm		= qt_altura_cm_w,
		nr_seq_classif_agenda	= CASE WHEN ie_classif_orig_transf_w='S' THEN  nr_seq_classif_agenda_w  ELSE nr_seq_classif_agenda END ,
		IE_FORMA_AGENDAMENTO	= IE_FORMA_AGENDAMENTO_w,
		cd_empresa_ref		= cd_empresa_ref_w,
		cd_setor_atendimento	= cd_Setor_Atendimento_w,
		cd_setor_origem		= cd_setor_origem_w,
		cd_setor_destino	= cd_setor_destino_w,
		cd_cnpj_prestador	= cd_cnpj_prestador_w,
		cd_unidade_externa	= cd_unidade_externa_w,
		ie_necessita_internacao	= ie_necessita_internacao_w,
		ie_anestesia		= ie_anestesia_w,
		nr_seq_tipo_classif_pac	= nr_seq_tipo_classif_pac_w,
		nr_secao		= nr_secao_w,
		qt_total_secao		= qt_total_secao_w,
		cd_anestesista		= cd_anestesista_w,
		nr_reserva		= CASE WHEN ie_reserva_transf_w='S' THEN  nr_reserva_w  ELSE null END ,
		ie_transferido			= CASE WHEN ie_acao_p='T' THEN 'S'  ELSE 'N' END ,
		nr_seq_segurado         = nr_seq_segurado_w,
		nr_seq_person_name      = nr_seq_person_name_w,
		ie_tipo_guia			= ie_tipo_guia_w
	where	nr_sequencia		= nr_seq_destino_p;

	if (ie_acao_p = 'T') then
            select count(*)
            into STRICT qt_aux_count_w
            from agenda_paciente_auxiliar apa
            where apa.nr_seq_agenda=nr_seq_origem_p;

            if (qt_aux_count_w>0) then
                SELECT   
                    apa.cd_depto_medico,
                    apa.cd_setor_atendimento,
                    apa.nr_seq_agenda,
                    apa.ie_posicao,
                    apa.nr_seq_classif_atend,
                    apa.ie_adv_appointment,
                    apa.nr_seq_cpoe_procedimento,
                    apa.ie_reference_letter,
                    apa.ie_emergency_response_required,
                    apa.ds_procedencia_var,
                    apa.cd_evolucao,
		    apa.vl_coparticipacao
                into STRICT
                    cd_depto_medico_w,
                    cd_setor_atendimento_ww,
                    nr_seq_agenda_w,
                    ie_posicao_w,
                    nr_seq_classif_atend_w,
                    ie_adv_appointment_w,
                    nr_seq_cpoe_procedimento_w,
                    ie_reference_letter_w,
                    ie_emergency_response_req_w,
                    ds_procedencia_var_w,
                    cd_evolucao_w,
		    vl_coparticipacao_w
                from agenda_paciente_auxiliar apa
                where apa.nr_seq_agenda=nr_seq_origem_p;

                select count(*)
                into STRICT qt_aux_count_dest_w
                from agenda_paciente_auxiliar apa
                where apa.nr_seq_agenda=nr_seq_destino_p;

                
            
                if (qt_aux_count_dest_w=0)then
                
                    CALL tasy_posicionar_sequence('agenda_paciente_auxiliar', 'NR_SEQUENCIA', 'R');
                    INSERT INTO agenda_paciente_auxiliar(
                                                            nr_sequencia,
                                                            cd_depto_medico,
                                                            dt_atualizacao,
                                                            nm_usuario,
                                                            dt_atualizacao_nrec,
                                                            nm_usuario_nrec,
                                                            cd_setor_atendimento,
                                                            nr_seq_agenda,
                                                            ie_posicao,
                                                            nr_seq_classif_atend,
                                                            ie_adv_appointment,
                                                            nr_seq_cpoe_procedimento,
                                                            ie_reference_letter,
                                                            ie_emergency_response_required,
                                                            ds_procedencia_var,
                                                            cd_evolucao,
							    vl_coparticipacao
                                                        ) VALUES (
                                                            nextval('agenda_paciente_auxiliar_seq'),
                                                            cd_depto_medico_w,
                                                            clock_timestamp(),
                                                            nm_usuario_p,
                                                            clock_timestamp(),
                                                            nm_usuario_p,
                                                            cd_setor_atendimento_ww,
                                                            nr_seq_destino_p,
                                                            ie_posicao_w,
                                                            nr_seq_classif_atend_w,
                                                            ie_adv_appointment_w,
                                                            nr_seq_cpoe_procedimento_w,
                                                            ie_reference_letter_w,
                                                            ie_emergency_response_req_w,
                                                            ds_procedencia_var_w,
                                                            cd_evolucao_w,
							    vl_coparticipacao_w							
                                                        );
                end if;
            end if;
        end if;
		
	/* tratar parametros */

	if (ie_manut_proced_w = 'S') or
		(ie_manut_proced_w = 'C' AND ie_acao_p = 'C') or
		(ie_manut_proced_w = 'T' AND ie_acao_p = 'T') then
		/* gerar procedimentos adicionais */

		open c01;
		loop
		fetch c01 into	cd_procedimento_w,
					ie_origem_proced_w,
					nr_seq_proc_interno_w,
					ie_lado_adic_w,
					cd_medico_adic_w,
					nr_seq_agenda_princ_w,
					nr_seq_item_adic_ageint_w,
					vl_coparticipacao_adic_w,
					cd_medico_rec_adic_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			/* obter sequencia */

			select	coalesce(max(nr_seq_agenda),0)+1
			into STRICT	nr_seq_proced_w
			from	agenda_paciente_proc
			where	nr_sequencia = nr_seq_destino_p;

			insert into agenda_paciente_proc(
								nr_sequencia,
								nr_seq_agenda,
								cd_procedimento,
								ie_origem_proced,
								nr_seq_proc_interno,
								dt_atualizacao,
								nm_usuario,
								ie_lado,
								cd_medico,
								nr_seq_agenda_princ,
								nr_seq_item_adic_ageint,
								vl_coparticipacao,
								cd_medico_req
								)
							values (
								nr_seq_destino_p,
								nr_seq_proced_w,
								cd_procedimento_w,
								ie_origem_proced_w,
								nr_seq_proc_interno_w,
								clock_timestamp(),
								nm_usuario_p,
								ie_lado_adic_w,
								cd_medico_adic_w,
								CASE WHEN coalesce(nr_seq_agenda_princ_w::text, '') = '' THEN  null  ELSE nr_seq_destino_p END , -- somente insere se o nr_Seq_agenda_princ ter valor
								nr_seq_item_adic_ageint_w,
								vl_coparticipacao_adic_w,
								cd_medico_rec_adic_w
								);
			end;
		end loop;
		close c01;
	end if;

	if (ie_acao_p = 'T') then
		/* verificar prescricoes vinculadas */

		select	count(*)
		into STRICT	qt_prescricao_w
		from	prescr_medica
		where	nr_seq_agenda = nr_seq_origem_p;
		
		/* atualizar prescricoes vinculadas */

		if (qt_prescricao_w > 0) then
			update	prescr_medica
			set	nr_seq_agenda = nr_seq_destino_p
			where	nr_seq_agenda = nr_seq_origem_p;
		end if;
	
		if (ie_utiliza_agfa_w <> 'S') then
			/* verificar autorizacoes vinculadas */

			select	count(*)
			into STRICT	qt_autorizacoes_w
			from	autorizacao_convenio
			where	nr_seq_agenda = nr_seq_origem_p;
			
			begin
			select	dt_agenda
			into STRICT	dt_agenda_w
			from	agenda_paciente
			where	nr_sequencia = nr_seq_destino_p;
			exception
			when others then
				dt_agenda_w := null;
			end;

			/* atualizar autorizacoes vinculadas */

			if (qt_autorizacoes_w > 0) then
				update autorizacao_convenio
				set	   nr_seq_agenda = nr_seq_destino_p,
					   dt_agenda     = coalesce(dt_agenda_w,dt_agenda)
				where  nr_seq_agenda = nr_seq_origem_p;
				
				update procedimento_autorizado
				set	   nr_seq_agenda = nr_seq_destino_p
				where  nr_seq_agenda = nr_seq_origem_p;
			end if;	

			select count(*)
			into STRICT   qt_autor_evento_w
			from   autor_convenio_evento
			where  nr_seq_agenda = nr_seq_origem_p;

			if (qt_autor_evento_w > 0) then
				update autor_convenio_evento
				set    nr_seq_agenda = nr_seq_destino_p
				where  nr_seq_agenda = nr_seq_origem_p;
			end if;			
		end if;
		
		/* gerar historico */

		atrib_oldvalue_w := substr(obter_nome_agenda(cd_agenda_w),1,50);
		atrib_newvalue_w := substr(obter_nome_agenda(cd_agenda_destino_w),1,50);

		if (nr_seq_motivo_p > 0) then
			ds_motivo_transf_w	:= WHEB_MENSAGEM_PCK.get_texto(277352) || substr(obter_desc_motivo_agenda(nr_seq_motivo_p),1,255) || ' -';
		end if;
		
		CALL gerar_agenda_paciente_hist(cd_agenda_destino_w,nr_seq_origem_p,'T',nm_usuario_p,WHEB_MENSAGEM_PCK.get_texto(277353) || ' ' ||
												atrib_oldvalue_w || ' ' || wheb_mensagem_pck.get_texto(791380) || ' ' ||
												to_char(hr_inicio_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))) || ' ' ||
												WHEB_MENSAGEM_PCK.get_texto(277359) || ' ' ||
												atrib_newvalue_w || ' ' ||
												WHEB_MENSAGEM_PCK.get_texto(277358) || ' ' ||
												to_char(hr_destino_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))) || ' ' ||
												ds_motivo_transf_w || ' ' ||
												substr(ds_motivo_p,1,255) ||
												WHEB_MENSAGEM_PCK.get_texto(277355) || ' ' ||
												nm_usuario_ant_w, cd_pessoa_fisica_w, nm_paciente_w, hr_destino_w, obter_perfil_ativo);
		
		CALL gerar_agenda_paciente_hist(cd_agenda_destino_w,nr_seq_destino_p,'T',nm_usuario_p,WHEB_MENSAGEM_PCK.get_texto(277353) || ' ' ||
												atrib_oldvalue_w || ' ' || wheb_mensagem_pck.get_texto(791380) || ' ' ||
												to_char(hr_inicio_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))) || ' ' ||
												WHEB_MENSAGEM_PCK.get_texto(277359) || ' ' ||
												atrib_newvalue_w || ' ' ||
												WHEB_MENSAGEM_PCK.get_texto(277358) || ' ' || 
												to_char(hr_destino_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))) || ' ' ||
												ds_motivo_transf_w || ' ' ||
												substr(ds_motivo_p,1,255) ||
												WHEB_MENSAGEM_PCK.get_texto(277355) || ' ' ||
												nm_usuario_ant_w, cd_pessoa_fisica_w, nm_paciente_w, hr_destino_w, obter_perfil_ativo);
		
		/* excluir registro origem */

		ie_canc_agenda_transf_w := obter_param_usuario(820, 78, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_canc_agenda_transf_w);
		
		--Setar o agendamento antigo como 'Transferido'
		update	agenda_paciente
		set		ie_transferido = 'S'
		where	nr_sequencia = nr_seq_origem_p;
		
		--if	(ie_canc_agenda_transf_w = 'S') then
		CALL alterar_status_agenda(cd_Agenda_w, nr_seq_origem_p, 'C', '',WHEB_MENSAGEM_PCK.get_texto(277354), 'N', nm_usuario_p);		
		/*else
			delete from agenda_paciente
			where nr_sequencia = nr_seq_origem_p;
		end if;*/
		
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_copiar_transf_agenda_ex (cd_estabelecimento_p bigint, cd_medico_Exec_p text, nr_seq_origem_p bigint, nr_seq_destino_p bigint, ie_acao_p text, nr_seq_motivo_p bigint, ds_motivo_p text, nm_usuario_p text, nr_seq_ageint_p bigint default null, hr_Agenda_p timestamp default null, nr_duracao_item_p bigint default null) FROM PUBLIC;

