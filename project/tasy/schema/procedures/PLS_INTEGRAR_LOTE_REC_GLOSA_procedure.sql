-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_integrar_lote_rec_glosa ( nr_seq_lote_p pls_rec_glosa_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_usuario_p pls_usuario_web.nr_sequencia%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Realiza a integra??o do lote de recurso de glosa, e altera a situa??o dos protocolos pertinentes
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ ]  Objetos do dicion?rio [  ] Tasy (Delphi/Java) [  X] Portal [  ]  Relat?rios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de aten??o:
-------------------------------------------------------------------------------------------------------------------

Refer?ncias:
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_protocolo_recusado_w	integer;
ds_regra_bloqueio_w	varchar(4000);
nr_seq_prestador_w	pls_rec_glosa_protocolo.nr_seq_prestador%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
dt_competencia_lote_w	pls_rec_glosa_protocolo.dt_competencia_lote%type;
nr_seq_prot_w		pls_rec_glosa_protocolo.nr_sequencia%type;
dt_mes_competencia_w	timestamp;


BEGIN

-- Somente executa se foi informado um lote
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then

	-- verifica se tem algum protocolo recusado no lote
	select	count(1)
	into STRICT	qt_protocolo_recusado_w
	from	pls_rec_glosa_protocolo
	where	nr_seq_lote	= nr_seq_lote_p
	and	ie_situacao	= 'RE';
	
	-- Se n?o tiver nenhum recusado, realiza a integra??o
	if (qt_protocolo_recusado_w = 0) then
	
		-- Verifica se n?o tem nenhuma regra de bloqueio para o recurso
		select	max(nr_seq_prestador),
			max(cd_estabelecimento),
			max(dt_competencia_lote),
			max(nr_sequencia)
		into STRICT	nr_seq_prestador_w,
			cd_estabelecimento_w,
			dt_competencia_lote_w,
			nr_seq_prot_w
		from	pls_rec_glosa_protocolo
		where	nr_seq_lote	= nr_seq_lote_p;
		
		ds_regra_bloqueio_w := pls_obter_dados_regra_bloq_in(	nr_seq_prestador_w,
									null, -- atualmente o evento ? um dominio da origem da cta e n?o possui recurso de glosa
									'DS',
									'R',
									nr_seq_lote_p,
									null,
									'N',
									cd_estabelecimento_w);
		-- Se encontrou algo, ent?o gera a exception
		if (ds_regra_bloqueio_w IS NOT NULL AND ds_regra_bloqueio_w::text <> '') then
		
			CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_regra_bloqueio_w);
		end if;
		

		CALL pls_integrar_rec_glosa_prot(nr_seq_lote_p, null, nm_usuario_p);
		
		--nr_seq_prot_w pegando a maior sequencia do lote ja atende a necessidade de se utilizar o campo
		dt_mes_competencia_w	:= pls_obter_dataref_prot_imp(nr_seq_prestador_w, 'E', dt_competencia_lote_w,
								dt_competencia_lote_w, dt_competencia_lote_w, clock_timestamp(),
								null, nr_seq_prot_w, cd_estabelecimento_w, 'C', 'R');
								
		update	pls_rec_glosa_protocolo
		set	ie_situacao	= 'T', -- Integrado
			dt_competencia_lote = coalesce(dt_mes_competencia_w, dt_competencia_lote),
			nr_seq_usuario	= nr_seq_usuario_p
		where	nr_seq_lote	= nr_seq_lote_p;
		
		commit;
	end if; -- fim realiza a integra??o
	
end if; -- fim executa
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_integrar_lote_rec_glosa ( nr_seq_lote_p pls_rec_glosa_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_usuario_p pls_usuario_web.nr_sequencia%type) FROM PUBLIC;

