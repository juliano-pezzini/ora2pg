-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobr_unicred_45 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_conteudo_w		varchar(500);
ds_numero_doc_w 		varchar(9);
nr_seq_apres_w		bigint := 0;

/* Header de arquivo */
 
dt_remessa_retorno_w	timestamp;
qt_registro_w		bigint;
vl_total_remessa_w		double precision;

/* Registro */
 
nr_conta_w		titulo_receber_cobr.nr_conta%type;
vl_cobranca_w		titulo_receber_cobr.vl_cobranca%type;
dt_pagamento_previsto_w	titulo_receber.dt_pagamento_previsto%type;

/*UTL File*/
 
arq_texto_w			utl_file.file_type;
ds_erro_w			varchar(255);
ds_local_w			varchar(255);
nm_arquivo_w			varchar(255);
ds_mensagem_w			varchar(255);
ds_local_rede_w			varchar(255);

c01 CURSOR FOR 
SELECT	CASE WHEN length(pls_obter_dados_pagador_fin(b.nr_seq_pagador,'C'))=6 THEN  substr(pls_obter_dados_pagador_fin(b.nr_seq_pagador,'C'), 2,5)  ELSE substr(pls_obter_dados_pagador_fin(b.nr_seq_pagador,'C'), 1,5) END  || '-' || substr(pls_obter_dados_pagador_fin(b.nr_seq_pagador,'DC'),1,1), 
	c.vl_cobranca, 
	b.dt_pagamento_previsto, 
	c.nr_titulo 
from	cobranca_escritural a, 
	titulo_receber_v b, 
	titulo_receber_cobr c 
where	a.nr_sequencia		= c.nr_seq_cobranca 
and	c.nr_titulo			= b.nr_titulo 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p;


BEGIN 
delete	FROM cobranca_escrit_arq 
where	nr_seq_cobranca = nr_seq_cobr_escrit_p;
 
nm_arquivo_w	:= to_char(clock_timestamp(),'ddmmyyyy') || to_char(clock_timestamp(),'hh24') || to_char(clock_timestamp(),'mi') || to_char(clock_timestamp(),'ss') || nm_usuario_p || '.rem';
 
SELECT * FROM obter_evento_utl_file(1, null, ds_local_w, ds_erro_w) INTO STRICT ds_local_w, ds_erro_w;
SELECT * FROM pls_obter_dir_rede_utl_file(1, null, ds_local_rede_w, ds_erro_w) INTO STRICT ds_local_rede_w, ds_erro_w;	
 
begin 
arq_texto_w := utl_file.fopen(ds_local_w,nm_arquivo_w,'W');
exception 
when others then 
	if (SQLSTATE = -29289) then 
		ds_erro_w := 'O acesso ao arquivo foi negado pelo sistema operacional (access_denied).';
	elsif (SQLSTATE = -29298) then 
		ds_erro_w := 'O arquivo foi aberto usando FOPEN_NCHAR, mas efetuaram-se operações de I/O usando funções nonchar comos PUTF ou GET_LINE (charsetmismatch).';
	elsif (SQLSTATE = -29291) then 
		ds_erro_w := 'Não foi possível apagar o arquivo (delete_failed).';
	elsif (SQLSTATE = -29286) then 
		ds_erro_w := 'Erro interno desconhecido no package UTL_FILE (internal_error).';
	elsif (SQLSTATE = -29282) then 
		ds_erro_w := 'O handle do arquivo não existe (invalid_filehandle).';
	elsif (SQLSTATE = -29288) then 
		ds_erro_w := 'O arquivo com o nome especificado não foi encontrado neste local (invalid_filename).';
	elsif (SQLSTATE = -29287) then 
		ds_erro_w := 'O valor de MAX_LINESIZE para FOPEN() é inválido; deveria estar na faixa de 1 a 32767 (invalid_maxlinesize).';
	elsif (SQLSTATE = -29281) then 
		ds_erro_w := 'O parâmetro open_mode na chamda FOPEN é inválido (invalid_mode).';
	elsif (SQLSTATE = -29290) then 
		ds_erro_w := 'O parâmetro ABSOLUTE_OFFSET para a chamada FSEEK() é inválido; deveria ser maior do que 0 e menor do que o número total de bytes do arquivo (invalid_offset).';
	elsif (SQLSTATE = -29283) then 
		ds_erro_w := 'O arquivo não pôde ser aberto ou operado da forma desejada - ou o caminho não foi encontrado (invalid_operation).';
	elsif (SQLSTATE = -29280) then 
		ds_erro_w := 'O caminho especificado não existe ou não está visível ao Oracle (invalid_path).';
	elsif (SQLSTATE = -29284) then 
		ds_erro_w := 'Não é possível efetuar a leitura do arquivo (read_error).';
	elsif (SQLSTATE = -29292) then 
		ds_erro_w := 'Não é possível renomear o arquivo.';
	elsif (SQLSTATE = -29285) then 
		ds_erro_w := 'Não foi possível gravar no arquivo (write_error).';
	else 
		ds_erro_w := 'Erro desconhecido no package UTL_FILE.';
	end if;	
	CALL wheb_mensagem_pck.exibir_mensagem_abort(186768,'DS_ERRO_W=' || ds_erro_w);
end;
 
if (substr(ds_local_rede_w,length(ds_local_rede_w)-1,length(ds_local_rede_w)) <> '\') then 
	ds_local_rede_w := ds_local_rede_w||'\'; --' 
end if;
 
CALL pls_gravar_arq_utl_file_cobr(nr_seq_cobr_escrit_p,ds_local_rede_w||nm_arquivo_w,nm_usuario_p);
 
update	cobranca_escritural 
set		ds_arquivo		= ds_local_w || nm_arquivo_w 
where	nr_sequencia	= nr_seq_cobr_escrit_p;
 
commit;
 
/*delete	from w_envio_banco 
where	nm_usuario	= nm_usuario_p;*/
 
 
/* Header do arquivo */
 
 
select	coalesce(max(a.dt_remessa_retorno),clock_timestamp()) 
into STRICT	dt_remessa_retorno_w 
from	cobranca_escritural a 
where	a.nr_sequencia	= nr_seq_cobr_escrit_p;
 
select	count(*), 
	sum(a.vl_cobranca) 
into STRICT	qt_registro_w, 
	vl_total_remessa_w 
from	titulo_receber_cobr a 
where	a.nr_seq_cobranca	= nr_seq_cobr_escrit_p;
 
ds_conteudo_w	:=	to_char(dt_remessa_retorno_w,'yymmdd') || 
			lpad(qt_registro_w,4,'0') || 
			lpad('0',9,'0') || 
			lpad(somente_numero(to_char(coalesce(vl_total_remessa_w,0),'99999999999990.00')),16,'0');
			 
utl_file.put_line(arq_texto_w,ds_conteudo_w|| chr(13));
utl_file.fflush(arq_texto_w);
			 
/*nr_seq_apres_w	:= nr_seq_apres_w + 1; 
	 
insert into w_envio_banco 
		(	nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_estabelecimento, 
			ds_conteudo, 
			nr_seq_apres) 
	values	(	w_envio_banco_seq.nextval, 
			sysdate, 
			nm_usuario_p, 
			sysdate, 
			nm_usuario_p, 
			cd_estabelecimento_p, 
			ds_conteudo_w, 
			nr_seq_apres_w);*/
 
			 
/* Fim Header */
 
 
/* Detalhe */
 
 
open	c01;
loop 
fetch	c01 into 
	nr_conta_w, 
	vl_cobranca_w, 
	dt_pagamento_previsto_w, 
	ds_numero_doc_w;	
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	ds_conteudo_w	:=	lpad(nr_conta_w,7,0) || 
				'227' || 
				lpad(ds_numero_doc_w,9,0) || 
				lpad(somente_numero(to_char(coalesce(vl_cobranca_w,0),'99999999999990.00')),16,'0') ||				 
				to_char(dt_pagamento_previsto_w ,'yymmdd');
 
	utl_file.put_line(arq_texto_w,ds_conteudo_w|| chr(13));
	utl_file.fflush(arq_texto_w);
				 
	/*nr_seq_apres_w	:= nr_seq_apres_w + 1; 
	 
	insert into w_envio_banco 
			(	nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				cd_estabelecimento, 
				ds_conteudo, 
				nr_seq_apres) 
		values	(	w_envio_banco_seq.nextval, 
				sysdate, 
				nm_usuario_p, 
				sysdate, 
				nm_usuario_p, 
				cd_estabelecimento_p, 
				ds_conteudo_w, 
				nr_seq_apres_w);*/
 
 
end	loop;
close	c01;
 
/* Fim Detalhe */
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobr_unicred_45 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

