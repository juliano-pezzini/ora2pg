-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_a100_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar o registro A100, e calcular os valores  de PIS/COFINS pelo A170, o qual
retornara o somatorio de PIS/COFINS.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Parametro 5500 - [25] -  SPED PIS/COFINS - Ao gerar os dados,  de onde buscar as informacoes
da funcao Controle de Arrecadacoes, valores tratados
	N -  Nota Fiscal - C01
	A - Conta paciente. Se nao houver vinculo, busca da nota - C02
	C - Conta Paciente - C02
	
Situacao da Nota Fiscal
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
aliquota_pis_w			double precision;
aliquota_cofins_w		double precision;
aliquota_iss_w			double precision;
cd_tributo_pis_w		smallint;
cd_tributo_cofins_w		smallint;
cd_tributo_iss_w		smallint;
nr_seq_regra_efd_w		bigint;
nr_versao_efd_w			varchar(5);
tp_registro_w			varchar(4);
nr_linha_w			bigint	:= qt_linha_p;
nr_seq_registro_w		bigint	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;
nr_sequencia_w			bigint;
vl_material_incentivo_w		double precision;
vl_base_calculo_tributo_w	double precision;
vl_iss_retido_w			double precision;
vl_pis_retido_w			double precision;
vl_cofins_retido_w		double precision;
ie_local_gerar_sped_w		varchar(1);
ie_consistir_cpf_cnpj_w		varchar(1);
ie_nota_entrada_w		varchar(1);
ie_buscar_data_w		varchar(1);
ie_nota_cancelada_w		varchar(1);
ie_somar_trib_ent_w		varchar(1);
ie_somar_trib_sai_w		varchar(1);
vl_base_pis_w 			varchar(20);
vl_pis_w			varchar(20);
vl_base_cofins_w		varchar(20);
vl_cofins_w			varchar(20);
vl_pis_isento_w			varchar(20);
vl_cofins_isento_w		varchar(20);
vl_impostos_w			double precision;
vl_total_nota_w			varchar(20);
nr_interno_conta_w		bigint;
nr_seq_protocolo_w		bigint;
vl_base_trib_w			varchar(20);
nr_seq_lote_prot_w		bigint;
nr_seq_reg_nota_w		bigint;
nr_linha_nota_w			bigint;
vl_total_pis_w			varchar(20);
vl_total_cofins_w		varchar(20);
vl_total_base_pis_w		varchar(20);
vl_total_base_cofins_w		varchar(20);
vl_iss_w			double precision;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
ie_entrada_saida_w		varchar(255);
ie_obriga_motivo_canc_est_nf_w  varchar(1);

c01 CURSOR FOR
SELECT	'A100' tp_registro,
	SUBSTR(CASE WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='E' THEN 0 WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='S' THEN 1 END ,1,1) ie_operacao,
	SUBSTR(CASE WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='E' THEN 1 WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='S' THEN 0 END ,1,1) ie_emissao_nf,
	coalesce(a.cd_pessoa_fisica,a.cd_cgc) cd_participante,
	SUBSTR(CASE WHEN a.ie_situacao=1 THEN  '00' WHEN a.ie_situacao=2 THEN  '02' WHEN a.ie_situacao=3 THEN  '02' WHEN a.ie_situacao=9 THEN  '02' END ,1,2) cd_situacao,
	SUBSTR(a.cd_serie_nf, 1, 20) cd_serie_nf,
	SUBSTR(a.cd_serie_rps, 1, 20) cd_subserie_nf,
	SUBSTR(coalesce(a.nr_nfe_imp, a.nr_nota_fiscal), 1, 60) nr_nota_fiscal,
	a.nr_danfe nr_danfe,
	SUBSTR(TO_CHAR(a.dt_emissao, 'ddmmyyyy'),1,8) dt_emissao,
	SUBSTR(TO_CHAR(a.dt_emissao, 'ddmmyyyy'),1,8) dt_execucao,
	a.vl_mercadoria vl_total_nota,
	SUBSTR(CASE WHEN coalesce(a.cd_condicao_pagamento,0)=0 THEN  9  ELSE CASE WHEN obter_dados_nota_fiscal(a.nr_sequencia, '28')=1 THEN  0  ELSE 1 END  END , 1, 1)  ie_pagto,
	a.vl_descontos vl_descontos,
	a.vl_mercadoria vl_base_pis,
	sped_obter_vl_tributo(a.nr_sequencia,cd_tributo_pis_w,cd_estabelecimento_p,dt_inicio_p,dt_fim_p) vl_pis,
	a.vl_mercadoria vl_base_cofins,
	sped_obter_vl_tributo(a.nr_sequencia,cd_tributo_cofins_w,cd_estabelecimento_p,dt_inicio_p,dt_fim_p) vl_cofins,
	SUBSTR(REPLACE(campo_mascara((obter_vl_tributo(a.nr_sequencia,cd_tributo_pis_w,'VT','GERAL')),2),'.',','),1,15) vl_pis_retido_st,
	SUBSTR(REPLACE(campo_mascara((obter_vl_tributo(a.nr_sequencia,cd_tributo_cofins_w,'VT','GERAL')),2),'.',','),1,15) vl_cofins_retido_st,
	CASE WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='S' THEN  SUBSTR(REPLACE(campo_mascara((sped_obter_vl_tributo(a.nr_sequencia, cd_tributo_iss_w, cd_estabelecimento_p, dt_inicio_p, dt_fim_p)),2),'.',','),1,15)  ELSE 0 END  vl_iss,
	a.nr_sequencia
FROM operacao_nota b, nota_fiscal a
LEFT OUTER JOIN nota_fiscal_trib t ON (a.nr_sequencia = t.nr_sequencia)
LEFT OUTER JOIN lote_protocolo p ON (a.nr_seq_lote_prot = p.nr_sequencia)
LEFT OUTER JOIN conta_paciente x ON (a.nr_interno_conta = x.nr_interno_conta)
LEFT OUTER JOIN protocolo_convenio w ON (a.nr_seq_protocolo = w.nr_seq_protocolo)
LEFT OUTER JOIN protocolo_convenio z ON (x.nr_seq_protocolo = z.nr_seq_protocolo)
WHERE a.cd_operacao_nf	= b.cd_operacao_nf AND a.vl_total_nota > 0 AND a.cd_estabelecimento	= cd_estabelecimento_p AND ((b.ie_operacao_fiscal = 'S' AND ie_nota_entrada_w = 'N')
OR (ie_nota_entrada_w = 'S')) and (((a.ie_situacao = 2) and (trunc(a.dt_atualizacao_estoque) between trunc(dt_inicio_p) and trunc(dt_fim_p)))
or ((a.ie_situacao <> 2) and ((trunc(a.dt_emissao) BETWEEN trunc(dt_inicio_p) AND trunc(fim_dia(dt_fim_p)) AND (ie_buscar_data_w = 'N'))
or	((a.nr_seq_lote_prot IS NOT NULL AND a.nr_seq_lote_prot::text <> '') AND (TRUNC(p.dt_mesano_referencia,'mm') = TRUNC(dt_inicio_p,'mm') AND (ie_buscar_data_w = 'P')))
or	((x.nr_seq_protocolo IS NOT NULL AND x.nr_seq_protocolo::text <> '') AND (TRUNC(z.dt_mesano_referencia,'mm') = TRUNC(dt_inicio_p,'mm') AND (ie_buscar_data_w = 'P')))
or	((a.nr_seq_protocolo IS NOT NULL AND a.nr_seq_protocolo::text <> '') AND (TRUNC(w.dt_mesano_referencia,'mm') = TRUNC(dt_inicio_p,'mm') AND (ie_buscar_data_w = 'P')))
or	(((coalesce(a.nr_seq_lote_prot::text, '') = '') and (coalesce(x.nr_seq_protocolo::text, '') = '') and (coalesce(a.nr_seq_protocolo::text, '') = '')) and (trunc(a.dt_emissao) BETWEEN trunc(dt_inicio_p) AND trunc(fim_dia(dt_fim_p))) and (ie_buscar_data_w = 'P'))))) AND (b.ie_servico = 'S') AND (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '') AND ((a.ie_situacao = 1 AND ie_nota_cancelada_w = 'N')
OR  ((a.nr_nfe_imp IS NOT NULL AND a.nr_nfe_imp::text <> '') AND (a.ie_situacao = 2) AND (ie_nota_cancelada_w = 'S'))
OR	((a.ie_situacao IN (1, 3)) AND (ie_nota_cancelada_w = 'S') AND (coalesce(ie_obriga_motivo_canc_est_nf_w, 'N') = 'S') AND 
	(((SELECT coalesce(max(y.ie_tipo_estorno), 'E') from motivo_cancel_sc_oc y where y.nr_sequencia = a.nr_seq_motivo_cancel) = 'C')) OR (a.ie_situacao = 1)) 	
OR (a.ie_situacao IN (1, 3)) AND (ie_nota_cancelada_w = 'S') AND (coalesce(ie_obriga_motivo_canc_est_nf_w, 'N') = 'N')) AND (((ie_consistir_cpf_cnpj_w = 'S') AND (CASE WHEN a.cd_pessoa_fisica='' THEN obter_dados_pf_pj(NULL,a.cd_cgc,'C')  ELSE obter_dados_pf(a.cd_pessoa_fisica,'CPF') (END IS NOT NULL AND END::text <> '')))
OR (ie_consistir_cpf_cnpj_w = 'N')) GROUP BY	a.nr_sequencia,
	a.ie_emissao_nf,
	coalesce(a.cd_pessoa_fisica,a.cd_cgc),
	a.ie_situacao,
	a.cd_serie_nf,
	a.cd_serie_rps,
	coalesce(a.nr_nfe_imp, a.nr_nota_fiscal),
	a.nr_danfe,
	a.dt_emissao,
	a.vl_mercadoria,
	a.cd_condicao_pagamento,
	a.vl_descontos,
	a.vl_total_nota;

vet01	C01%ROWTYPE;

c02 CURSOR FOR
	SELECT	'A100' tp_registro,
		substr(CASE WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='E' THEN 0 WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='S' THEN 1 END ,1,1) ie_operacao,
		substr(CASE WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='E' THEN 1 WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='S' THEN 0 END ,1,1) ie_emissao_nf,
		coalesce(a.cd_pessoa_fisica,a.cd_cgc) cd_participante,
		substr(CASE WHEN a.ie_situacao=1 THEN  '00' WHEN a.ie_situacao=2 THEN  '02' WHEN a.ie_situacao=3 THEN  '02' WHEN a.ie_situacao=9 THEN  '02' END ,1,2) cd_situacao,
		substr(a.cd_serie_nf, 1, 3) cd_serie_nf,
		substr(a.cd_serie_rps, 1, 20) cd_subserie_nf,
		substr(coalesce(a.nr_nfe_imp,a.nr_nota_fiscal), 1, 9) nr_nota_fiscal,
		a.nr_danfe nr_danfe,
		substr(to_char(a.dt_emissao, 'ddmmyyyy'),1,8) dt_emissao,
		substr(to_char(a.dt_emissao, 'ddmmyyyy'),1,8) dt_execucao,
		a.vl_total_nota vl_total_nota,
		substr(CASE WHEN coalesce(a.cd_condicao_pagamento,0)=0 THEN  9  ELSE CASE WHEN obter_dados_nota_fiscal(a.nr_sequencia, '28')=1 THEN  0  ELSE 1 END  END , 1, 1)  ie_pagto,
		a.vl_descontos vl_descontos,
		a.vl_mercadoria vl_base_pis,
		substr(replace(campo_mascara((sped_obter_vl_tributo(a.nr_sequencia, cd_tributo_pis_w, cd_estabelecimento_p, dt_inicio_p, dt_fim_p)),2),'.',','),1,15) vl_pis,
		a.vl_mercadoria vl_base_cofins,
		substr(replace(campo_mascara((sped_obter_vl_tributo(a.nr_sequencia, cd_tributo_cofins_w, cd_estabelecimento_p, dt_inicio_p, dt_fim_p)),2),'.',','),1,15) vl_cofins,
		substr(replace(campo_mascara(0,2),'.',','),1,15) vl_pis_retido_st,
		substr(replace(campo_mascara(0,2),'.',','),1,15) vl_cofins_retido_st,
		CASE WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='S' THEN  substr(replace(campo_mascara((sped_obter_vl_tributo(a.nr_sequencia, cd_tributo_iss_w, cd_estabelecimento_p, dt_inicio_p, dt_fim_p)),2),'.',','),1,15)  ELSE 0 END  vl_iss,
		a.nr_sequencia
	from	nota_fiscal a,
		operacao_nota b
	where	a.cd_operacao_nf = b.cd_operacao_nf
	and	a.vl_total_nota > 0
	and (a.cd_estabelecimento = cd_estabelecimento_p)
	--or	(a.cd_estabelecimento = 13))
	and 	((a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '')
	or (a.nr_seq_protocolo IS NOT NULL AND a.nr_seq_protocolo::text <> ''))
	and	b.ie_operacao_fiscal = 'S'
	and	a.dt_emissao between dt_inicio_p and fim_dia(dt_fim_p)
	and (b.ie_servico = 'S')
	and	(a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '')
	and	a.ie_situacao = 1
	and	(((ie_consistir_cpf_cnpj_w = 'S') and (CASE WHEN a.cd_pessoa_fisica='' THEN obter_dados_pf_pj(null,a.cd_cgc,'C')  ELSE obter_dados_pf(a.cd_pessoa_fisica,'CPF') (END IS NOT NULL AND END::text <> '')))
	or (ie_consistir_cpf_cnpj_w = 'N'))
	
union

	SELECT	'A100' tp_registro,
		substr(CASE WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='E' THEN 0 WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='S' THEN 1 END ,1,1) ie_operacao,
		substr(CASE WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='E' THEN 1 WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='S' THEN 0 END ,1,1) ie_emissao_nf,
		coalesce(a.cd_pessoa_fisica,a.cd_cgc) cd_participante,
		substr(CASE WHEN a.ie_situacao=1 THEN  '00' WHEN a.ie_situacao=2 THEN  '02' WHEN a.ie_situacao=3 THEN  '02' WHEN a.ie_situacao=9 THEN  '02' END ,1,2) cd_situacao,
		substr(a.cd_serie_nf, 1, 3) cd_serie_nf,
		substr(a.cd_serie_rps, 1, 20) cd_subserie_nf,
		substr(coalesce(a.nr_nfe_imp, a.nr_nota_fiscal), 1, 9) nr_nota_fiscal,
		a.nr_danfe nr_danfe,
		substr(to_char(a.dt_emissao, 'ddmmyyyy'),1,8) dt_emissao,
		substr(to_char(a.dt_emissao, 'ddmmyyyy'),1,8) dt_execucao,
		a.vl_total_nota vl_total_nota,
		substr(CASE WHEN coalesce(a.cd_condicao_pagamento,0)=0 THEN  9  ELSE CASE WHEN obter_dados_nota_fiscal(a.nr_sequencia, '28')=1 THEN  0  ELSE 1 END  END , 1, 1)  ie_pagto,
		a.vl_descontos vl_descontos,
		a.vl_mercadoria vl_base_pis,
		substr(replace(campo_mascara((sped_obter_vl_tributo(a.nr_sequencia, cd_tributo_pis_w, cd_estabelecimento_p, dt_inicio_p, dt_fim_p)),2),'.',','),1,15) vl_pis,
		a.vl_mercadoria vl_base_cofins,
		substr(replace(campo_mascara((sped_obter_vl_tributo(a.nr_sequencia, cd_tributo_cofins_w, cd_estabelecimento_p, dt_inicio_p, dt_fim_p)),2),'.',','),1,15) vl_cofins,
		substr(replace(campo_mascara((obter_vl_tributo(a.nr_sequencia,cd_tributo_pis_w,'VT','GERAL')),2),'.',','),1,15) vl_pis_retido_st,
		substr(replace(campo_mascara((obter_vl_tributo(a.nr_sequencia,cd_tributo_cofins_w,'VT','GERAL')),2),'.',','),1,15) vl_cofins_retido_st,
		CASE WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='S' THEN  substr(replace(campo_mascara((sped_obter_vl_tributo(a.nr_sequencia, cd_tributo_iss_w, cd_estabelecimento_p, dt_inicio_p, dt_fim_p)),2),'.',','),1,15)  ELSE 0 END  vl_iss,
		a.nr_sequencia
	FROM operacao_nota b, nota_fiscal a
LEFT OUTER JOIN nota_fiscal_trib t ON (a.nr_sequencia = t.nr_sequencia)
WHERE a.cd_operacao_nf	= b.cd_operacao_nf and a.vl_total_nota > 0 and (a.cd_estabelecimento = cd_estabelecimento_p) --or	(a.cd_estabelecimento = 13))
  and b.ie_operacao_fiscal = 'S' and a.dt_emissao between dt_inicio_p and fim_dia(dt_fim_p) and b.ie_servico = 'S' and (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '') and a.ie_situacao  = 1 and (((ie_consistir_cpf_cnpj_w = 'S') and (CASE WHEN a.cd_pessoa_fisica='' THEN obter_dados_pf_pj(null,a.cd_cgc,'C')  ELSE obter_dados_pf(a.cd_pessoa_fisica,'CPF') (END IS NOT NULL AND END::text <> '')))
	or (ie_consistir_cpf_cnpj_w = 'N')) and coalesce(nr_interno_conta::text, '') = '' and coalesce(nr_seq_protocolo::text, '') = '';

vet02	C02%ROWTYPE;


BEGIN
select	ie_consistir_cpf_cnpj
into STRICT	ie_consistir_cpf_cnpj_w
from	fis_efd_controle
where	nr_sequencia	= nr_seq_controle_p;

select	nr_seq_regra_efd
into STRICT	nr_seq_regra_efd_w
from	fis_efd_controle
where	nr_sequencia	= nr_seq_controle_p;

select	cd_tributo_pis,
	cd_tributo_cofins,
	cd_tributo_iss
into STRICT	cd_tributo_pis_w,
	cd_tributo_cofins_w,
	cd_tributo_iss_w
from	fis_regra_efd
where	nr_sequencia	= nr_seq_regra_efd_w;

aliquota_pis_w 		:= obter_pr_imposto(cd_tributo_pis_w, cd_estabelecimento_p);
aliquota_cofins_w 	:= obter_pr_imposto(cd_tributo_cofins_w, cd_estabelecimento_p);
aliquota_iss_w 		:= obter_pr_imposto(cd_tributo_iss_w, cd_estabelecimento_p);

select	coalesce(max(ie_nota_entrada),'N'),
	coalesce(max(ie_buscar_data),'N'),
	coalesce(max(ie_nota_cancelada),'N'),
	coalesce(max(ie_somar_trib_ent),'N'),
	coalesce(max(ie_somar_trib_sai),'N')
into STRICT	ie_nota_entrada_w,
	ie_buscar_data_w,
	ie_nota_cancelada_w,
	ie_somar_trib_ent_w,
	ie_somar_trib_sai_w
from	fis_regra_efd_a100
where	nr_seq_regra_efd	= nr_seq_regra_efd_w;

ie_local_gerar_sped_w := obter_param_usuario(5500, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_local_gerar_sped_w);
ie_obriga_motivo_canc_est_nf_w := obter_param_usuario(40, 71, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_motivo_canc_est_nf_w);

if (ie_local_gerar_sped_w = 'N') then
	open c01;
	loop
	fetch c01 into
		vet01;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		nr_sequencia_w		:= vet01.nr_sequencia;
		ie_entrada_saida_w	:= obter_se_nota_entrada_saida(nr_sequencia_w);

		select	coalesce(sum(b.vl_total_item_nf),0)
		into STRICT	vl_pis_isento_w
		FROM operacao_nota o, nota_fiscal a, nota_fiscal_item b
LEFT OUTER JOIN material_fiscal c ON (b.cd_material = c.cd_material)
WHERE a.nr_sequencia 		= b.nr_sequencia  and a.cd_operacao_nf	= o.cd_operacao_nf and a.cd_estabelecimento	= cd_estabelecimento_p and o.ie_servico		= 'S' and a.nr_sequencia		= nr_sequencia_w and a.dt_emissao between dt_inicio_p and fim_dia(dt_fim_p) and b.vl_total_item_nf > 0 and (((c.ie_tributacao_pis = '06') or (c.ie_tributacao_pis = '98')) or
			((c.ie_tributacao_pis_saida = '06') or (c.ie_tributacao_pis_saida = '98')));

		select	coalesce(sum(b.vl_total_item_nf),0)
		into STRICT	vl_cofins_isento_w
		FROM operacao_nota o, nota_fiscal a, nota_fiscal_item b
LEFT OUTER JOIN material_fiscal c ON (b.cd_material = c.cd_material)
WHERE a.nr_sequencia		= b.nr_sequencia  and a.cd_operacao_nf	= o.cd_operacao_nf and a.cd_estabelecimento	= cd_estabelecimento_p and o.ie_servico		= 'S' and a.nr_sequencia		= nr_sequencia_w and a.dt_emissao between dt_inicio_p and fim_dia(dt_fim_p) and b.vl_total_item_nf > 0 and (((c.ie_tributacao_cofins = '06') or (c.ie_tributacao_cofins = '98')) or
			((c.ie_tribut_cofins_saida = '06') or (c.ie_tribut_cofins_saida = '98')));

		vl_base_pis_w		:= vet01.vl_base_pis;
		vl_base_cofins_w	:= vet01.vl_base_cofins;

		if 	(ie_entrada_saida_w = 'E' AND ie_somar_trib_ent_w = 'S') or
			(ie_entrada_saida_w = 'S' AND ie_somar_trib_sai_w = 'S') then
			select	coalesce(sum(c.vl_tributo),0)
			into STRICT	vl_impostos_w
			from	nota_fiscal_trib	c,
				tributo			t
			where	c.cd_tributo		= t.cd_tributo
			and	c.nr_sequencia		= nr_sequencia_w
			and	t.ie_soma_diminui	= 'D';

			vl_total_nota_w		:= vet01.vl_total_nota + vl_impostos_w;
			vl_base_pis_w		:= vl_total_nota_w;
			vl_base_cofins_w	:= vl_total_nota_w;
		else
			vl_total_nota_w	:= vet01.vl_total_nota;
		end if;

		vl_base_pis_w 		:= substr(sped_obter_campo_valor(vl_base_pis_w - vl_pis_isento_w), 1, 30);
		vl_pis_w		:= vet01.vl_pis - round((vl_pis_isento_w * aliquota_pis_w/100)::numeric,2);
		vl_base_cofins_w	:= substr(sped_obter_campo_valor(vl_base_cofins_w - vl_cofins_isento_w), 1, 30);
		vl_cofins_w		:= vet01.vl_cofins - round((vl_cofins_isento_w * aliquota_cofins_w/100)::numeric,2);
		
		if (abs(vl_pis_w - 0) < 0.05) and (vl_pis_isento_w > 0) then
			vl_pis_w	:= '0,00';
		end if;

		if (abs(vl_cofins_w - 0) < 0.05) and (vl_pis_isento_w > 0) then
			vl_cofins_w	:= '0,00';
		end if;

		vl_iss_w := round((vl_total_nota_w * aliquota_iss_w/100)::numeric,2);
		
		if	(((vet01.cd_situacao) <> '02') and
			((vet01.cd_situacao) <> '03')) then
			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;
			
			nr_seq_reg_nota_w	:= nr_seq_registro_w;
			nr_linha_nota_w		:= nr_linha_w;
		
			SELECT * FROM fis_gerar_reg_A170_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_sequencia_w, nr_linha_w, nr_seq_registro_w, vl_total_pis_w, vl_total_cofins_w, vl_total_base_pis_w, vl_total_base_cofins_w) INTO STRICT nr_linha_w, nr_seq_registro_w, vl_total_pis_w, vl_total_cofins_w, vl_total_base_pis_w, vl_total_base_cofins_w;
						
						
		
			ds_linha_w	:= substr(	sep_w || vet01.tp_registro	 							||
							sep_w || vet01.ie_operacao								||
							sep_w || vet01.ie_emissao_nf								||
							sep_w || vet01.cd_participante	 							||
							sep_w || vet01.cd_situacao								||
							sep_w || vet01.cd_serie_nf 								||
							sep_w || vet01.cd_subserie_nf 								||
							sep_w || vet01.nr_nota_fiscal	 							||
							sep_w || vet01.nr_danfe									||
							sep_w || vet01.dt_emissao								||
							sep_w || vet01.dt_execucao								||
							sep_w || substr(sped_obter_campo_valor(vl_total_nota_w), 1, 30)				||
							sep_w || vet01.ie_pagto									||
							sep_w || substr(sped_obter_campo_valor(vet01.vl_descontos), 1, 30) 			||
							sep_w || replace(campo_mascara(vl_total_base_pis_w,2),'.',',')				||
							sep_w || replace(campo_mascara(coalesce(vl_total_pis_w,0),2),'.',',')			||
							sep_w || replace(campo_mascara(vl_total_base_cofins_w,2),'.',',')			||
							sep_w || replace(campo_mascara(coalesce(vl_total_cofins_w,0),2),'.',',')			||
							sep_w || vet01.vl_pis_retido_st								||
							sep_w || vet01.vl_cofins_retido_st							||
							sep_w || replace(campo_mascara(vl_iss_w,2),'.',',')	||
							sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			
			select	max(a.cd_pessoa_fisica),
				max(a.cd_cgc)
			into STRICT	cd_pessoa_fisica_w,
				cd_cgc_w
			from	nota_fiscal	a
			where	a.nr_sequencia	= nr_sequencia_w;
		
			
			insert into fis_efd_nota_arq(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_pessoa_fisica,
				nr_seq_nota_fiscal,
				cd_cgc,
				vl_total_receita,
				vl_base_calculo,
				vl_pis,
				vl_cofins,
				vl_pis_retido,
				vl_cofins_retido,
				nr_seq_controle)
			values (nextval('fis_efd_nota_arq_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_pessoa_fisica_w,
				nr_sequencia_w,
				cd_cgc_w,
				vl_total_nota_w,
				CASE WHEN vl_total_base_pis_w='0' THEN vl_total_base_cofins_w  ELSE vl_total_base_pis_w END ,
				vl_total_pis_w,
				vl_total_cofins_w,
				0,
				0,
				nr_seq_controle_p);
			
			insert into fis_efd_arquivo(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_efd,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (nr_seq_reg_nota_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_nota_w,
				vet01.tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

		elsif	(((vet01.cd_situacao = '02') or (vet01.cd_situacao = '03')) and (vet01.ie_operacao <> 0)) then
			
			
			ds_linha_w	:= SUBSTR(	sep_w || vet01.tp_registro		||
							sep_w || vet01.ie_operacao		||
							sep_w || vet01.ie_emissao_nf		||
							sep_w || ''	 			||
							sep_w || vet01.cd_situacao 		||
							sep_w || vet01.cd_serie_nf 		||
							sep_w || vet01.cd_subserie_nf 		||
							sep_w || vet01.nr_nota_fiscal		||
							sep_w || ''				||
							sep_w || ''				||
							sep_w || ''				||
							sep_w || ''				||
							sep_w || ''				||
							sep_w || '' 				||
							sep_w || ''				||
							sep_w || ''				||
							sep_w || ''				||
							sep_w || ''				||
							sep_w || ''				||
							sep_w || ''				||
							sep_w || ''				|| sep_w,1,8000);
							
							

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_efd_arquivo(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_efd,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				vet01.tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);
		end if;
		end;
	end loop;
	close c01;
end if;

if (ie_local_gerar_sped_w = 'C') or (ie_local_gerar_sped_w = 'A') then
	open C02;
	loop
	fetch C02 into	
		vet02;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select 	coalesce(nr_interno_conta,0),
			coalesce(nr_seq_protocolo,0),
			coalesce(nr_seq_lote_prot,0)
		into STRICT	nr_interno_conta_w,
			nr_seq_protocolo_w,
			nr_seq_lote_prot_w
		from	nota_fiscal
		where	nr_sequencia	= vet02.nr_sequencia;

		nr_sequencia_w	:= vet02.nr_sequencia;
		
		vl_iss_w := round((vet02.vl_total_nota * aliquota_iss_w/100)::numeric,2);
		
		if (nr_interno_conta_w = 0) and (nr_seq_protocolo_w = 0) and (nr_seq_lote_prot_w = 0) then
			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w 		:= nr_linha_w + 1;
			nr_seq_reg_nota_w	:= nr_seq_registro_w;
			nr_linha_nota_w		:= nr_linha_w;
		
			SELECT * FROM fis_gerar_reg_A170_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_sequencia_w, nr_linha_w, nr_seq_registro_w, vl_total_pis_w, vl_total_cofins_w, vl_total_base_pis_w, vl_total_base_cofins_w) INTO STRICT nr_linha_w, nr_seq_registro_w, vl_total_pis_w, vl_total_cofins_w, vl_total_base_pis_w, vl_total_base_cofins_w;
						

			
			ds_linha_w	:= substr(	sep_w || vet02.tp_registro	 							||
							sep_w || vet02.ie_operacao								||
							sep_w || vet02.ie_emissao_nf								||
							sep_w || vet02.cd_participante	 							||
							sep_w || vet02.cd_situacao								||
							sep_w || vet02.cd_serie_nf 								||
							sep_w || vet02.cd_subserie_nf 								||
							sep_w || vet02.nr_nota_fiscal	 							||
							sep_w || vet02.nr_danfe									||
							sep_w || vet02.dt_emissao								||
							sep_w || vet02.dt_execucao								||
							sep_w || substr(sped_obter_campo_valor(vet02.vl_total_nota), 1, 30)			||
							sep_w || vet02.ie_pagto									||
							sep_w || substr(sped_obter_campo_valor(vet02.vl_descontos), 1, 30) 			||
							sep_w || replace(campo_mascara(vl_total_base_pis_w,2),'.',',')				||
							sep_w || replace(campo_mascara(vl_total_pis_w,2),'.',',')				||
							sep_w || replace(campo_mascara(vl_total_base_cofins_w,2),'.',',')			||
							sep_w || replace(campo_mascara(vl_total_cofins_w,2),'.',',')				||
							sep_w || vet02.vl_pis_retido_st								||
							sep_w || vet02.vl_cofins_retido_st							||
							sep_w || replace(campo_mascara(vl_iss_w,2),'.',',')	||
							sep_w,1,8000);
			
			insert into w_efd_dados_arq(vl_base_tributo)
			values (substr(sped_obter_campo_valor(vet02.vl_base_pis), 1, 20));
			
			commit;
			
			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			
			select	max(a.cd_pessoa_fisica),
				max(a.cd_cgc)
			into STRICT	cd_pessoa_fisica_w,
				cd_cgc_w
			from	nota_fiscal	a
			where	a.nr_sequencia	= nr_sequencia_w;
			
			insert into fis_efd_nota_arq(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_pessoa_fisica,
				nr_seq_nota_fiscal,
				cd_cgc,
				vl_total_receita,
				vl_base_calculo,
				vl_pis,
				vl_cofins,
				vl_pis_retido,
				vl_cofins_retido,
				nr_seq_controle)
			values (nextval('fis_efd_nota_arq_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_pessoa_fisica_w,
				nr_sequencia_w,
				cd_cgc_w,
				vl_total_nota_w,
				vl_total_base_pis_w,
				vl_total_pis_w,
				vl_total_cofins_w,
				0,
				0,
				nr_seq_controle_p);

			insert into fis_efd_arquivo(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_efd,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (nr_seq_reg_nota_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_nota_w,
				vet02.tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);	
		else
			nr_seq_registro_w 	:= nr_seq_registro_w + 1;
			nr_linha_w 		:= nr_linha_w + 1;
			nr_seq_reg_nota_w	:= nr_seq_registro_w;
			nr_linha_nota_w		:= nr_linha_w;

			SELECT * FROM fis_gerar_reg_A170_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_sequencia_w, nr_linha_w, nr_seq_registro_w, vl_total_pis_w, vl_total_cofins_w, vl_total_base_pis_w, vl_total_base_cofins_w) INTO STRICT nr_linha_w, nr_seq_registro_w, vl_total_pis_w, vl_total_cofins_w, vl_total_base_pis_w, vl_total_base_cofins_w;
		
			vl_iss_w := round((vet02.vl_total_nota * aliquota_iss_w/100)::numeric,2);
		
			if	(((vet02.cd_situacao) <> '02') and
				((vet02.cd_situacao) <> '03')) then

				ds_linha_w	:= substr(	sep_w || vet02.tp_registro	 							||
								sep_w || vet02.ie_operacao								||
								sep_w || vet02.ie_emissao_nf								||
								sep_w || vet02.cd_participante	 							||
								sep_w || vet02.cd_situacao								||
								sep_w || vet02.cd_serie_nf 								||
								sep_w || vet02.cd_subserie_nf 								||
								sep_w || vet02.nr_nota_fiscal	 							||
								sep_w || vet02.nr_danfe									||
								sep_w || vet02.dt_emissao								||
								sep_w || vet02.dt_execucao								||
								sep_w || replace(campo_mascara(vet02.vl_total_nota,2),'.',',')				||
								sep_w || vet02.ie_pagto		 							||
								sep_w || substr(sped_obter_campo_valor(vet02.vl_descontos), 1, 30) 			||
								sep_w || replace(campo_mascara(vl_total_base_pis_w,2),'.',',')				||
								sep_w || replace(campo_mascara(vl_total_pis_w,2),'.',',')				||
								sep_w || replace(campo_mascara(vl_total_base_cofins_w,2),'.',',')			||
								sep_w || replace(campo_mascara(vl_total_cofins_w,2),'.',',')				||
								sep_w || substr(sped_obter_campo_valor(vl_pis_retido_w), 1, 30)				||
								sep_w || substr(sped_obter_campo_valor(vl_cofins_retido_w), 1, 30)			||
								sep_w || replace(campo_mascara(vl_iss_w,2),'.',',')	||
								sep_w,1,8000);
				
				insert into w_efd_dados_arq(vl_base_tributo)
				values (substr(sped_obter_campo_valor(vl_base_calculo_tributo_w), 1, 20));
				
				commit;
				
				ds_arquivo_w		:= substr(ds_linha_w,1,4000);
				ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
				
				select	max(a.cd_pessoa_fisica),
					max(a.cd_cgc)
				into STRICT	cd_pessoa_fisica_w,
					cd_cgc_w
				from	nota_fiscal	a
				where	a.nr_sequencia	= nr_sequencia_w;
				
				insert into fis_efd_nota_arq(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_pessoa_fisica,
					nr_seq_nota_fiscal,
					cd_cgc,
					vl_total_receita,
					vl_base_calculo,
					vl_pis,
					vl_cofins,
					vl_pis_retido,
					vl_cofins_retido,
					nr_seq_controle)
				values (nextval('fis_efd_nota_arq_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_pessoa_fisica_w,
					nr_sequencia_w,
					cd_cgc_w,
					vl_total_nota_w,
					vl_total_base_pis_w,
					vl_total_pis_w,
					vl_total_cofins_w,
					0,
					0,
					nr_seq_controle_p);

				insert into fis_efd_arquivo(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_controle_efd,
					nr_linha,
					cd_registro,
					ds_arquivo,
					ds_arquivo_compl)
				values (nr_seq_reg_nota_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_controle_p,
					nr_linha_nota_w,
					vet02.tp_registro,
					ds_arquivo_w,
					ds_arquivo_compl_w);	
				
			elsif	(((vet02.cd_situacao = '02') or (vet02.cd_situacao = '03')) and (vet02.ie_operacao <> 0) ) then

				ds_linha_w	:= substr(	sep_w || vet02.tp_registro		||
								sep_w || vet02.ie_operacao		||
								sep_w || vet02.ie_emissao_nf		||
								sep_w || ''	 			||
								sep_w || vet02.cd_situacao 		||
								sep_w || vet02.cd_serie_nf 		||
								sep_w || vet02.cd_subserie_nf 		||
								sep_w || vet02.nr_nota_fiscal		||
								sep_w || ''				||
								sep_w || ''				||
								sep_w || ''				||
								sep_w || ''				||
								sep_w || ''				||
								sep_w || '' 				||
								sep_w || ''				||
								sep_w || ''				||
								sep_w || ''				||
								sep_w || ''				||
								sep_w || ''				||
								sep_w || ''				||
								sep_w || ''				||
								sep_w,1,8000);	
			
				ds_arquivo_w		:= substr(ds_linha_w,1,4000);
				ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
				nr_seq_registro_w	:= nr_seq_registro_w + 1;
				nr_linha_w		:= nr_linha_w + 1;

				insert into fis_efd_arquivo(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_controle_efd,
					nr_linha,
					cd_registro,
					ds_arquivo,
					ds_arquivo_compl)
				values (nr_seq_registro_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_controle_p,
					nr_linha_w,
					vet02.tp_registro,
					ds_arquivo_w,
					ds_arquivo_compl_w);	
			end if;
		end if;
		end;
	end loop;
	close C02;
end if;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_a100_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

