-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_simulacao_proc_repasse ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, cd_medico_atend_p text, nm_usuario_p text, cd_edicao_amb_p bigint, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, cd_regra_p INOUT bigint, nr_seq_criterio_p INOUT bigint) AS $body$
DECLARE

 
nr_seq_propaci_w		procedimento_paciente.nr_sequencia%type;
nr_seq_particip_w		procedimento_participante.nr_seq_partic%type;
ie_funcao_w			procedimento_paciente.ie_funcao_medico%type;
cd_regra_w			bigint	:= 0;
cd_medico_exec_w		procedimento_paciente.cd_medico_exec_conta%type;
ie_responsavel_credito_w	procedimento_paciente.ie_responsavel_credito%type;
cd_prestador_w			procedimento_paciente.cd_cgc_prestador%type;
ie_tipo_servico_sus_w		procedimento_paciente.ie_tipo_servico_sus%type;
ie_tipo_ato_sus_w		procedimento_paciente.ie_tipo_ato_sus%type;
ie_participou_sus_w		procedimento_participante.ie_participou_sus%type;
nr_seq_etapa_checkup_w		bigint;
ie_repasse_audit_w		parametro_repasse.ie_repasse_item_audit%type;
nr_seq_criterio_w		bigint;

C01 CURSOR FOR 
SELECT	a.nr_sequencia nr_seq_propaci, 
	0 nr_seq_particip, 
	coalesce(a.cd_medico_exec_conta, a.cd_medico_executor), 
	coalesce(ie_funcao_medico,'0') ie_funcao, 
	a.ie_responsavel_credito, 
	a.cd_cgc_prestador, 
	coalesce(a.ie_tipo_servico_sus,0), 
	coalesce(a.ie_tipo_ato_sus,0), 
	'A' ie_participou_sus, 
	OBTER_ETAPA_CHECKUP_PROC(a.nr_sequencia) 
from 	conta_paciente b, 
	procedimento_paciente a 
where	a.nr_sequencia   		= nr_sequencia_p 
and	a.nr_interno_conta		= b.nr_interno_conta 
and (coalesce(b.ie_cancelamento::text, '') = ''	or (b.nr_seq_ret_glosa IS NOT NULL AND b.nr_seq_ret_glosa::text <> '')) 
and	((ie_repasse_audit_w = 'S') or (ie_repasse_audit_w = 'N' and a.ie_auditoria <> 'S')) 

union
 
SELECT	a.nr_sequencia nr_seq_propaci, 
	0 nr_seq_particip, 
	coalesce(a.cd_medico_exec_conta, a.cd_medico_executor), 
	coalesce(ie_funcao_medico,'0') ie_funcao,	 
	a.ie_responsavel_credito, 
	a.cd_cgc_prestador, 
	coalesce(a.ie_tipo_servico_sus,0), 
	coalesce(a.ie_tipo_ato_sus,0), 
	'A' ie_participou_sus, 
	OBTER_ETAPA_CHECKUP_PROC(a.nr_sequencia) 
from 	conta_paciente b, 
	procedimento_paciente a 
where	a.nr_sequencia   		= nr_sequencia_p 
and	a.nr_interno_conta		= b.nr_interno_conta 
and (coalesce(b.ie_cancelamento::text, '') = ''	or (b.nr_seq_ret_glosa IS NOT NULL AND b.nr_seq_ret_glosa::text <> '')) 
and (ie_repasse_audit_w = 'N' and a.ie_auditoria = 'S' and coalesce(a.nr_seq_orig_audit::text, '') = '') 
and	coalesce(OBTER_VALOR_ITEM_AUDIT(a.nr_interno_conta,a.nr_sequencia,null,'Q'),0) > 0 

union
 
select	x.nr_sequencia, 
	x.nr_seq_partic, 
	coalesce(x.cd_medico_exec_conta, x.cd_pessoa_fisica), 
	x.ie_funcao,	 
	x.ie_responsavel_credito, 
	coalesce(x.cd_cgc,'0'), 
	coalesce(x.ie_tipo_servico_sus,0), 
	coalesce(x.ie_tipo_ato_sus,0), 
	ie_participou_sus, 
	OBTER_ETAPA_CHECKUP_PROC(y.nr_sequencia)	 
from 	conta_paciente z, 
	procedimento_paciente y, 
	procedimento_participante x 
where 	x.nr_sequencia   		= nr_sequencia_p 
and	x.nr_sequencia		= y.nr_sequencia 
and	y.nr_interno_conta		= z.nr_interno_conta 
and (coalesce(z.ie_cancelamento::text, '') = ''	or (z.nr_seq_ret_glosa IS NOT NULL AND z.nr_seq_ret_glosa::text <> '')) -- Edgar 27/07/2006 OS 36638, n√£o gerar repasse de contas canceladas 
order by 4;


BEGIN 
 
select	coalesce(max(ie_repasse_item_audit),'S') 
into STRICT	ie_repasse_audit_w 
from	parametro_repasse 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
open	c01;
loop 
fetch	c01 into 
	nr_seq_propaci_w, 
	nr_seq_particip_w, 
	cd_medico_exec_w, 
	ie_funcao_w,	 
	ie_responsavel_credito_w, 
	cd_prestador_w, 
	ie_tipo_servico_sus_w, 
	ie_tipo_ato_sus_w, 
	ie_participou_sus_w, 
	nr_seq_etapa_checkup_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	nr_seq_criterio_w	:= null;
	cd_regra_w		:= 0;
	 
	SELECT * FROM obter_regra_proc_repasse(	cd_convenio_p, cd_edicao_amb_p, cd_estabelecimento_p, cd_medico_atend_p, cd_medico_exec_w, cd_prestador_w, ie_funcao_w, ie_participou_sus_w, ie_responsavel_credito_w, ie_tipo_atendimento_p, ie_tipo_ato_sus_w, ie_tipo_servico_sus_w, nm_usuario_p, nr_seq_etapa_checkup_w, nr_seq_particip_w, nr_seq_propaci_w, cd_regra_w, nr_seq_criterio_w) INTO STRICT cd_regra_w, nr_seq_criterio_w;
 
	cd_regra_p		:= cd_regra_w;
	nr_seq_criterio_p	:= nr_seq_criterio_w;
 
	end;
end loop;
close c01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_simulacao_proc_repasse ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, cd_medico_atend_p text, nm_usuario_p text, cd_edicao_amb_p bigint, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, cd_regra_p INOUT bigint, nr_seq_criterio_p INOUT bigint) FROM PUBLIC;

