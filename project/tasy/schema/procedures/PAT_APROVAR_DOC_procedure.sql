-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pat_aprovar_doc ( nr_sequencia_p bigint, nm_usuario_p text, ie_opcao_p text, cd_estabelecimento_p bigint, dt_documento_p timestamp) AS $body$
DECLARE


ie_situacao_w           pat_mes_ref.ie_situacao%type;
nr_seq_tx_deprec_w		pat_bem_taxa.nr_sequencia%type;
tx_deprec_reg_w			pat_bem_taxa.pr_depreciacao%type;
tx_deprec_w			    pat_alteracao_base_bem.tx_deprec%type;
nr_seq_bem_w			pat_bem.nr_sequencia%type;

c01 CURSOR FOR
	SELECT nr_seq_bem,
	       tx_deprec
	from   pat_alteracao_base_bem
	where  nr_seq_alt_base = nr_sequencia_p
	order by
			nr_seq_bem;


BEGIN

	begin
		select a.ie_situacao
		into STRICT   ie_situacao_w
		from   pat_mes_ref a,
			   pat_alteracao_base b
		where  b.nr_sequencia            = nr_sequencia_p
		and    trunc(a.dt_mes_ref, 'MM') = trunc(b.dt_documento, 'MM')
		and    a.cd_estabelecimento      = cd_estabelecimento_p;
		exception
			when no_data_found or too_many_rows then
			ie_situacao_w := null;
	end;

		if (ie_situacao_w = '0') then
		open c01;
			loop
			fetch c01 into
					nr_seq_bem_w,
					tx_deprec_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			
			select x.pr_depreciacao
			into STRICT   tx_deprec_reg_w
			from (
						SELECT	1 ie_ordem,
								a.pr_depreciacao
						from	pat_bem_taxa a
						where	a.nr_seq_bem = nr_seq_bem_w
						and		a.dt_vigencia <= dt_documento_p
						
union all

						SELECT	2 ie_ordem,
								a.tx_deprec pr_depreciacao
						from	pat_bem a
						where   a.nr_sequencia = nr_seq_bem_w
						order by
								ie_ordem) x LIMIT 1;
			
			if (ie_opcao_p = 'L') then
				update	pat_alteracao_base
				set		dt_liberacao	= clock_timestamp(),
						dt_atualizacao	= clock_timestamp(),
						nm_usuario		= nm_usuario_p
				where	nr_sequencia	= nr_sequencia_p;
				
				if (tx_deprec_w <> tx_deprec_reg_w) then
					begin
						select	nextval('pat_bem_taxa_seq')
						into STRICT	nr_seq_tx_deprec_w
						;

						insert into pat_bem_taxa(nr_sequencia,
								nr_seq_bem,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								dt_vigencia,
								pr_depreciacao,
								pr_deprec_fiscal,
								nr_seq_alteracao_base)
						values (nr_seq_tx_deprec_w,
								nr_seq_bem_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								dt_documento_p,
								tx_deprec_w,
								null,
								nr_sequencia_p);
					end;
				end if;
			else
				update	pat_alteracao_base
				set		dt_liberacao	           = NULL,
						dt_atualizacao	          = clock_timestamp(),
						nm_usuario		          = nm_usuario_p
				where	nr_sequencia	          = nr_sequencia_p;
				
				delete from pat_bem_taxa
				where       nr_seq_alteracao_base = nr_sequencia_p;
				
			end if;
		end loop;
		close c01;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1208101);
	end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pat_aprovar_doc ( nr_sequencia_p bigint, nm_usuario_p text, ie_opcao_p text, cd_estabelecimento_p bigint, dt_documento_p timestamp) FROM PUBLIC;

