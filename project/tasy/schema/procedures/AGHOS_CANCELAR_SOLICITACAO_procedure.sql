-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function aghos_cancelar_solicitacao as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE aghos_cancelar_solicitacao ( nr_internacao_p bigint, ds_motivo_cancelamento_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL aghos_cancelar_solicitacao_atx ( ' || quote_nullable(nr_internacao_p) || ',' || quote_nullable(ds_motivo_cancelamento_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(cd_estabelecimento_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE aghos_cancelar_solicitacao_atx ( nr_internacao_p bigint, ds_motivo_cancelamento_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


ds_motivo_cancelamento_w	varchar(1000);
cd_cnes_solicitante_w		varchar(1000);
ds_sep_bv_w			varchar(50);
ds_comando_w			varchar(2000);
ds_usuario_w			varchar(15);
BEGIN

/*
IDF_GSH_I_INTERN_CANCEL_ENT 	NUMBER 		not null
TIP_STATUS 			VARCHAR2 1 	not null
DES_ERRO 			VARCHAR2 500 	null
DAT_INTEGRACAO 		DATE 		not null
DES_USUARIO 			VARCHAR2 15 	not null
COD_CNES_SOLICITANTE 		NUMBER 7 	not null
IDF_INTERNACAO 		NUMBER 9 	not null
DES_MOTIVO_CANCELAMENTO 	VARCHAR2 1000 	not null
*/
select	max(substr(obter_cnes_estab(cd_estabelecimento_p), 1, 7)),
	coalesce(max(substr(obter_dados_param_atend(cd_estabelecimento_p, 'US'), 1, 15)), 'TREINA')
into STRICT	cd_cnes_solicitante_w,
	ds_usuario_w
;

ds_sep_bv_w := obter_separador_bv;

ds_comando_w :=	'declare '||
		'	cancel_sai gsh_i_pkg_integra_sai.cancel_sai@tasy_aghos; '||
		'	ds_erro_ww	varchar2(500); '||
		'begin '||
		' '||
		'   begin ' ||
		'	gsh_i_prc_intern_cancel_ent@tasy_aghos( 0, '||
		'						''A'', '||
		'						ds_erro_ww, '||
		'						sysdate, '||
		'						:ds_usuario_p, '||
		'						:cd_cnes_solicitante_p, '||
		'						:nr_internacao_p, '||
		'						:ds_motivo_cancelamento_p); ' ||
		' '||
		'	gsh_i_pkg_integra_sai.gsh_i_prc_intern_cancel_sai@tasy_aghos(cancel_sai); '||
		' '||
		'	if	(cancel_sai.first is not null) then '||
		'		for i in cancel_sai.first..cancel_sai.last loop '||
		' '||
		'			if	(cancel_sai(i).idf_internacao = :nr_internacao_p) then '||
		' '||
		'				update	solicitacao_tasy_aghos '||
		'				set	ie_situacao = ''C'', '||
		'					ds_motivo_situacao = cancel_sai(i).des_motivo_cancelamento '||
		'				where	nr_internacao = :nr_internacao_p; '||
		' '||
		'				commit; '||
		' '||
		'				ds_erro_ww := null; '||
		'				gsh_i_prc_intern_cancel_s_u@tasy_aghos(	cancel_sai(i).idf_gsh_i_intern_cancel_sai,  '||
		'									''P'', '||
		'									ds_erro_ww); '||
		'			end if; '||
		'		end loop; '||
		'	end if; '||
		' commit; '||
		' DBMS_SESSION.CLOSE_DATABASE_LINK(''tasy_aghos''); ' ||
		'   exception '||
		'   when others then '||
		'      rollback; ' ||
		'      DBMS_SESSION.CLOSE_DATABASE_LINK(''tasy_aghos''); ' ||
		'   end; '||
		'end;';

CALL exec_sql_dinamico_bv('AGHOS', ds_comando_w, 	'nr_internacao_p='		|| nr_internacao_p 		|| ds_sep_bv_w ||
						'cd_cnes_solicitante_p='	|| cd_cnes_solicitante_w 	|| ds_sep_bv_w ||
						'ds_motivo_cancelamento_p='	|| ds_motivo_cancelamento_p	|| ds_sep_bv_w ||
						'ds_usuario_p='			|| ds_usuario_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aghos_cancelar_solicitacao ( nr_internacao_p bigint, ds_motivo_cancelamento_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE aghos_cancelar_solicitacao_atx ( nr_internacao_p bigint, ds_motivo_cancelamento_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

