-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_repasse_benef_web ( ie_tipo_acao_p text, dt_repasse_p text, nr_seq_congenere_p bigint, nr_seq_segurado_p bigint, nr_seq_repasse_p bigint, ie_consistir_regra_contrato_p text, ie_mes_posterior_repasse_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_repasse_gerado_p INOUT bigint) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Gerar repasse do beneficiário
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [ X ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

IE_TIPO_ACAO_P
I - INSERT
U - UPADTE
*/ie_preco_w			varchar(2);
ie_tipo_repasse_w		varchar(1);
nr_seq_contrato_w		bigint;
nr_seq_congenere_atend_w	bigint;
nr_seq_congenere_cobr_w		bigint;
dt_contratacao_w		timestamp;
qt_repasse_w			bigint;
nr_seq_ordem_w			bigint;
dt_repasse_w			timestamp;
nr_seq_repasse_gerado_w		bigint;

C01 CURSOR FOR
	SELECT	nr_seq_congenere_cobr,
		nr_seq_congenere,
		ie_tipo_repasse
	from	(	SELECT	nr_seq_congenere_cobr,
				coalesce(nr_seq_congenere,0) nr_seq_congenere,
				ie_titularidade,
				ie_tipo_parentesco,
				ie_tipo_repasse,
				ie_tipo_intercambio
			from	pls_contrato_regra_repasse
			where	nr_seq_contrato	= nr_seq_contrato_w
			and	((nr_seq_congenere = nr_seq_congenere_atend_w) or (coalesce(nr_seq_congenere::text, '') = ''))
			and	pls_obter_se_depend_repasse(nr_sequencia,nr_seq_segurado_p) = 'S'
			and	pls_restring_loc_atend_repasee(nr_sequencia,nr_seq_congenere_atend_w,cd_estabelecimento_p) = 'S'
			
union all

			select	nr_seq_congenere_cobr,
				coalesce(nr_seq_congenere,0),
				ie_titularidade,
				ie_tipo_parentesco,
				ie_tipo_repasse,
				ie_tipo_intercambio
			from	pls_contrato_regra_repasse
			where	coalesce(nr_seq_contrato::text, '') = ''
			and	coalesce(nr_seq_intercambio::text, '') = ''
			and	cd_estabelecimento	= cd_estabelecimento_p
			and	((nr_seq_congenere = nr_seq_congenere_atend_w) or (coalesce(nr_seq_congenere::text, '') = ''))
			and	pls_obter_se_depend_repasse(nr_sequencia,nr_seq_segurado_p) = 'S'
			and	not exists (	select	1
						from	pls_contrato_regra_repasse
						where	nr_seq_contrato	= nr_seq_contrato_w)) alias16
	order by nr_seq_congenere,
		CASE WHEN coalesce(ie_titularidade,'A')='A' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(ie_tipo_parentesco::text, '') = '' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(ie_tipo_intercambio,'A')='A' THEN -1  ELSE 1 END;


BEGIN

nr_seq_congenere_atend_w	:= nr_seq_congenere_p;

select	b.ie_preco,
	a.nr_seq_contrato,
	a.dt_contratacao
into STRICT	ie_preco_w,
	nr_seq_contrato_w,
	dt_contratacao_w
from	pls_segurado	a,
	pls_plano	b
where	a.nr_seq_plano	= b.nr_sequencia
and	a.nr_sequencia	= nr_seq_segurado_p;


if (ie_consistir_regra_contrato_p = 'S') and (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
	open C01;
	loop
	fetch C01 into	
		nr_seq_congenere_cobr_w,
		nr_seq_ordem_w,
		ie_tipo_repasse_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
else
	nr_seq_congenere_cobr_w	:= nr_seq_congenere_atend_w;
end if;

if (coalesce(nr_seq_congenere_cobr_w,0) = 0) then
	nr_seq_congenere_cobr_w	:= nr_seq_congenere_atend_w;
end if;

if (coalesce(ie_tipo_repasse_w::text, '') = '') then
	if (ie_preco_w = '1') then
		ie_tipo_repasse_w	:= 'P';
	else
		ie_tipo_repasse_w	:= 'C';
	end if;
end if;	

if (ie_tipo_acao_p = 'I') then
	select	count(*)
	into STRICT	qt_repasse_w
	from	pls_segurado_repasse
	where	nr_seq_segurado	= nr_seq_segurado_p
	and	coalesce(dt_fim_repasse::text, '') = '';
	
	
	dt_repasse_w := to_date(dt_repasse_p,'dd/mm/yyyy hh24:mi:ss');
	
	if (ie_mes_posterior_repasse_p = 'S') then
		dt_repasse_w	:=  add_months(trunc(dt_repasse_w,'month'),1);
	end if;
	
	/* Lepinski - OS 403172 - Finalizar repasse existente ao inserir um novo */

	if (qt_repasse_w > 0) then
		update	pls_segurado_repasse
		set	dt_fim_repasse	= (dt_repasse_w-1),
			dt_fim_real	= clock_timestamp()
		where	nr_seq_segurado	= nr_seq_segurado_p
		and	(dt_repasse IS NOT NULL AND dt_repasse::text <> '')
		and	coalesce(dt_fim_repasse::text, '') = '';
	end if;
	
	select  nextval('pls_segurado_repasse_seq')
	into STRICT	nr_seq_repasse_gerado_w
	;
	
	insert into pls_segurado_repasse(nr_sequencia, dt_repasse, nr_seq_congenere,
					  nm_usuario, dt_atualizacao, cd_estabelecimento,
					  nr_seq_segurado, dt_atualizacao_nrec, ie_origem_solicitacao,
					  nr_seq_congenere_atend, ie_tipo_repasse, ie_tipo_compartilhamento)
				   values (nr_seq_repasse_gerado_w, coalesce(dt_repasse_w,dt_contratacao_w), nr_seq_congenere_cobr_w,
					  nm_usuario_p, clock_timestamp(), cd_estabelecimento_p,
					  nr_seq_segurado_p, clock_timestamp(), 'P',
					  nr_seq_congenere_atend_w, ie_tipo_repasse_w, 1);
					
	nr_seq_repasse_gerado_p := nr_seq_repasse_gerado_w;
elsif (ie_tipo_acao_p = 'U') then
	update	pls_segurado_repasse
	set 	dt_repasse 		= coalesce(to_date(dt_repasse_p,'dd/mm/yyyy hh24:mi:ss'),dt_contratacao_w),
		nr_seq_congenere 	= nr_seq_congenere_p,
		nm_usuario 		= nm_usuario_p,
		ie_origem_solicitacao 	= 'P', 
		dt_atualizacao 		= clock_timestamp()
	where	nr_sequencia = nr_seq_repasse_p;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_repasse_benef_web ( ie_tipo_acao_p text, dt_repasse_p text, nr_seq_congenere_p bigint, nr_seq_segurado_p bigint, nr_seq_repasse_p bigint, ie_consistir_regra_contrato_p text, ie_mes_posterior_repasse_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_repasse_gerado_p INOUT bigint) FROM PUBLIC;

