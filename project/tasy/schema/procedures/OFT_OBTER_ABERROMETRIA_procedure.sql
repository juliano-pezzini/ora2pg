-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_obter_aberrometria ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, cd_pessoa_fisica_p text, ie_opcao_p text, vListaAberrometria INOUT strRecTypeFormOft) AS $body$
DECLARE


ds_observacao_w					oft_aberrometria.ds_observacao%type;
dt_exame_w							oft_aberrometria.dt_exame%type;
cd_profissional_w					oft_aberrometria.cd_profissional%TYPE;
dt_liberacao_w						timestamp;
cd_estabelecimento_w				estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;
nm_usuario_w						usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
ds_erro_w							varchar(4000);

aberrometria_form CURSOR FOR
	SELECT	a.*
	from		oft_aberrometria a,
				oft_consulta_formulario b
	where		a.nr_seq_consulta_form 	=	b.nr_sequencia
	and		a.nr_seq_consulta_form 	=	nr_seq_consulta_form_p
	and		a.nr_seq_consulta			=	nr_seq_consulta_p
	and		((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') or (a.nm_usuario = nm_usuario_w))
	and		((coalesce(a.dt_inativacao::text, '') = '') or (b.dt_inativacao IS NOT NULL AND b.dt_inativacao::text <> ''))
	order by dt_exame;
	
aberrometria_paciente CURSOR FOR
	SELECT	a.*
	from		oft_aberrometria a,
				oft_consulta b
	where		a.nr_seq_consulta		=	b.nr_sequencia
	and		b.cd_pessoa_fisica	=	cd_pessoa_fisica_p
	and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and		coalesce(a.dt_inativacao::text, '') = ''
	and		b.nr_sequencia 		<> nr_seq_consulta_p
	order by dt_exame;

											
BEGIN
begin

if (coalesce(nr_seq_consulta_p,0) > 0) and (vListaAberrometria.count > 0) then
	if (ie_opcao_p = 'F') then
		FOR c_aberrometria IN aberrometria_form LOOP
			begin
			ds_observacao_w					:=	c_aberrometria.ds_observacao;
			dt_exame_w							:= c_aberrometria.dt_exame;
			dt_liberacao_w						:=	c_aberrometria.dt_liberacao;
			cd_profissional_w					:=	c_aberrometria.cd_profissional;
			end;
		end loop;
	else
		FOR c_aberrometria IN aberrometria_paciente LOOP
			begin
			ds_observacao_w					:=	c_aberrometria.ds_observacao;
			cd_profissional_w					:=	obter_pf_usuario(nm_usuario_w,'C');
			dt_exame_w							:= clock_timestamp();
			end;
		end loop;
	end if;
	
	for i in 1..vListaAberrometria.count loop
		begin
		if (ie_opcao_p = 'F') or (vListaAberrometria[i].ie_obter_resultado = 'S') then
			vListaAberrometria[i].dt_liberacao	:= dt_liberacao_w;
			case upper(vListaAberrometria[i].nm_campo)
				WHEN 'CD_PROFISSIONAL' THEN
					vListaAberrometria[i].ds_valor	:= cd_profissional_w;
				when 'DT_EXAME' then
					vListaAberrometria[i].dt_valor	:=	dt_exame_w;
				when 'DS_OBSERVACAO' then
					vListaAberrometria[i].ds_valor	:=	ds_observacao_w;
				else
					null;	
			end case;	
		end if;	
		end;
	end loop;
end if;	

exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_obter_aberrometria ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, cd_pessoa_fisica_p text, ie_opcao_p text, vListaAberrometria INOUT strRecTypeFormOft) FROM PUBLIC;

