-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE excluir_baixa_bordero_pagto (nr_bordero_p bigint, nm_usuario_p text, dt_exclusao_p timestamp) AS $body$
DECLARE



nr_titulo_w			bigint;
nr_sequencia_w			bigint;
nr_seq_baixa_w			bigint;
nr_lote_contabil_w		bigint;
nr_lote_caixa_w			bigint;
cd_estabelecimento_w		smallint;
ie_exc_bordero_contab_w		varchar(100);
cd_moeda_baixa_w		integer;
cd_moeda_titulo_w		integer;
vl_cotacao_moeda_w		double precision	:= null;
ie_permite_est_conci_w		varchar(255);
cont_w				bigint;
nr_seq_conciliacao_w		bigint;
nr_lote_w			bigint;
vl_saldo_titulo_w		titulo_pagar.vl_saldo_titulo%type;
ie_gerar_trib_temp_w		parametros_contas_pagar.ie_gerar_trib_temp%type;
nr_seq_baixa_est_w		titulo_pagar_baixa.nr_sequencia%type;
nr_seq_baixa_orig_w		titulo_pagar_baixa.nr_sequencia%type;
nr_seq_movto_trans_fin_w	titulo_pagar_baixa.nr_seq_movto_trans_fin%type;
nr_seq_movto_estorno_w		movto_trans_financ.nr_sequencia%type;
ie_atualiza_dtpagto_cheque_w	varchar(1);
nr_seq_conta_banco_w		bigint;
ie_dia_fechado_w		varchar(1);
/* Projeto Multimoeda - Variaveis*/

vl_baixa_estrang_w		double precision;
vl_complemento_w 		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
vl_baixa_w			double precision;
nr_seq_cheque_baixa_origem_w			titulo_pagar_baixa.nr_seq_cheque_cp%type;
bordero_estornado_w 	bigint;
ie_lock_handle_w 				varchar(128);
ie_result_lock_w				bigint;
ds_erro_w varchar(500);
nr_sequencia_baixa_w titulo_pagar_baixa.nr_sequencia%type;
cont_baixa_w				bigint;


c01 CURSOR FOR
SELECT	nr_titulo,
	vl_saldo_titulo,
	cd_estabelecimento
from	titulo_pagar_bordero_v
where	nr_bordero	= nr_bordero_p;

BEGIN
begin
dbms_lock.allocate_unique('EXCLUIR_BAIXA_BORDERO_PAGTO', ie_lock_handle_w);

if (ie_lock_handle_w IS NOT NULL AND ie_lock_handle_w::text <> '') then
	ie_result_lock_w := DBMS_LOCK.REQUEST(lockhandle => ie_lock_handle_w, lockmode => DBMS_LOCK.X_MODE, timeout => 10);
else
	ie_result_lock_w := 0;
end if;

while(ie_result_lock_w > 0) loop --Se ta com lock ainda, tentar de novo ate liberar para poder efetuar o processo
	ie_result_lock_w := DBMS_LOCK.REQUEST(lockhandle => ie_lock_handle_w, lockmode => DBMS_LOCK.X_MODE, timeout => 10);
end loop;

if (ie_result_lock_w = 0) then


select count(*)
into STRICT	bordero_estornado_w
from bordero_pagamento
where nr_bordero = nr_bordero_p
and coalesce(DT_REAL_PAGAMENTO::text, '') = '';

if (bordero_estornado_w <> 0 ) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1132058);
end if;

select	obter_valor_param_usuario(855, 30, obter_perfil_ativo, nm_usuario_p, 0)
into STRICT	ie_permite_est_conci_w
;

ie_atualiza_dtpagto_cheque_w := obter_param_usuario(855, 27, Obter_Perfil_Ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_atualiza_dtpagto_cheque_w);

if (coalesce(ie_permite_est_conci_w,'S') = 'N') then
	select	max(c.NR_SEQ_CONCILIACAO)
	into STRICT	nr_seq_conciliacao_w
	from	CONCIL_BANC_MOVTO c,
		movto_trans_financ a
	where	a.nr_seq_concil = c.nr_sequencia
	and	a.nr_bordero	= nr_bordero_p;
	
	if (nr_seq_conciliacao_w IS NOT NULL AND nr_seq_conciliacao_w::text <> '') then
/*		rais.e_application_error(-20011, 'Nao e possivel excluir a baixa deste bordero! ' || chr(13) ||
					'Este bordero possui transacao na conciliacao ' || nr_seq_conciliacao_w || '. Parametro [30]' );*/
	CALL wheb_mensagem_pck.exibir_mensagem_abort(193591,'nr_seq_conciliacao_w='||nr_seq_conciliacao_w);
	end if;
end if;

select	coalesce(max(b.ie_exc_bordero_contab), 'N'),
	coalesce(max(IE_GERAR_TRIB_TEMP),'N')
into STRICT	ie_exc_bordero_contab_w,
	ie_gerar_trib_temp_w
from	parametros_contas_pagar b,
	bordero_pagamento a
where	a.nr_bordero		= nr_bordero_p
and	a.cd_estabelecimento	= b.cd_estabelecimento;

select coalesce(max(nr_seq_conta_banco),0)
into STRICT   nr_seq_conta_banco_w
from   bordero_pagamento a
where  a.nr_bordero = nr_bordero_p;

select	coalesce(max(nr_lote_contabil),0)
into STRICT	nr_lote_contabil_w
from	movto_trans_financ
where	nr_bordero		= nr_bordero_p
and	coalesce(nr_lote_contabil,0)	> 0;

select	coalesce(max(b.nr_lote_contabil),0)
into STRICT	nr_lote_caixa_w
from	caixa_saldo_diario b,
	movto_trans_financ a
where	a.nr_bordero		= nr_bordero_p
and	a.nr_seq_saldo_caixa	= b.nr_sequencia
and	coalesce(b.nr_lote_contabil,0) > 0;

if (ie_exc_bordero_contab_w = 'N') and
	((nr_lote_contabil_w > 0) or (nr_lote_caixa_w > 0)) then
	nr_lote_w	:= coalesce(nr_lote_contabil_w, nr_lote_caixa_w);
/*	rais.e_application_error(-20011, 'Nao e possivel excluir a baixa deste bordero! ' || chr(13) ||
					'Este bordero ja esta contabilizado no lote contabil ' || nvl(nr_lote_contabil_w, nr_lote_caixa_w) || '.');*/
	CALL wheb_mensagem_pck.exibir_mensagem_abort(193592,'nr_lote_w='||nr_lote_w);
end if;

if (nr_seq_conta_banco_w <> 0) then

select	substr(obter_se_banco_fechado(nr_seq_conta_banco_w,dt_exclusao_p),1,1)
	into STRICT	ie_dia_fechado_w
	;

	if (coalesce(ie_dia_fechado_w,'N')	= 'S') then
		/* O dia dt_transacao ja foi fechado no banco!
		Consulte o fechamento na pasta Fechamento banco do Controle Bancario.
		Parametro [72] */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(231442,'DT_TRANSACAO='||dt_exclusao_p);
	end if;
end if;	

open	c01;
loop
fetch	c01 into
	nr_titulo_w,
	vl_saldo_titulo_w,
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

    /*Nao estornar uma baixa que ja tenha sido estornada no titulo. OS - 2490241*/

		select coalesce(max(nr_sequencia),0)
		into STRICT nr_sequencia_baixa_w
		from titulo_pagar_baixa a
		where a.nr_titulo	= nr_titulo_w
		and IE_ORIGEM_BAIXA = 'BP';

		select	count(*)
		into STRICT cont_baixa_w
		from	titulo_pagar_baixa a
		where	a.nr_seq_baixa_origem in (	SELECT	x.nr_sequencia
							from	titulo_pagar_baixa x
							where	x.nr_bordero	= nr_bordero_p
							and	x.nr_titulo	= nr_titulo_w
							and x.nr_sequencia = nr_sequencia_baixa_w)
		and	a.nr_titulo	= nr_titulo_w
		and	coalesce(a.nr_bordero::text, '') = '';
	
	if (cont_baixa_w = 0) then
	
	select	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	titulo_pagar_baixa
	where	nr_titulo	= nr_titulo_w
	and	nr_bordero	= nr_bordero_p;

	vl_cotacao_moeda_w	:= null;

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then

		select	b.cd_moeda,
			a.cd_moeda
		into STRICT	cd_moeda_titulo_w,
			cd_moeda_baixa_w
		from	titulo_pagar b,
			titulo_pagar_baixa a
		where	a.nr_titulo	= b.nr_titulo
		and	a.nr_titulo	= nr_titulo_w
		and	a.nr_sequencia	= nr_sequencia_w;

		/* Francisco - OS 168616 - 23/12/2009 - Tratar para gravar a cotacao do dia, quando a moeda for diferente */

		if (cd_moeda_titulo_w <> cd_moeda_baixa_w) and (coalesce(vl_baixa_estrang_w,0) = 0 and coalesce(vl_cotacao_w,0) = 0) then
			vl_cotacao_moeda_w	:= obter_conversao_moeda(1,cd_moeda_titulo_w,coalesce(dt_exclusao_p,clock_timestamp()),'EN');
		end if;
	end if;

	select	max(nr_sequencia) + 1
	into STRICT	nr_seq_baixa_w
	from	titulo_pagar_baixa
	where	nr_titulo	= nr_titulo_w;
	
	/* Projeto Multimoeda - Busca a baixa e verifica se foi realizada em moeda estrangeira, caso positivo calcula os valores antes de gravar os dados*/

	select max(vl_baixa),
		max(vl_baixa_estrang),
		max(vl_cotacao)
	into STRICT vl_baixa_w,
		vl_baixa_estrang_w,
		vl_cotacao_w
	from titulo_pagar_baixa
	where nr_titulo = nr_titulo_w
	  and nr_sequencia = nr_sequencia_w;
	if (coalesce(vl_baixa_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
		vl_baixa_estrang_w := vl_baixa_estrang_w * -1;
		vl_complemento_w := (vl_baixa_w * -1) - vl_baixa_estrang_w;
	else
		vl_baixa_estrang_w := null;
		vl_complemento_w := null;
		vl_cotacao_w := null;
	end if;
	

	insert	into titulo_pagar_baixa(
		nr_titulo,
	    nr_sequencia,
		dt_baixa,
		cd_moeda,
		dt_atualizacao,
		nm_usuario,
		cd_tipo_baixa,
		ie_acao,
		vl_baixa,
		vl_descontos,
		vl_outras_deducoes,
		vl_juros,
		vl_multa,
		vl_outros_acrescimos,
		vl_outras_despesas,
		vl_pago,
		cd_banco,
		cd_conta_contabil,
		cd_centro_custo,
		nr_lote_contabil,
		vl_devolucao,
		nr_seq_devolucao,
		nr_bordero,
		nr_seq_trans_fin,
		vl_ir,
		nr_seq_conta_banco,
		nr_seq_escrit,
		VL_IMPOSTO,
		vl_cotacao_moeda,
		nr_seq_baixa_origem,
		vl_baixa_estrang,
		vl_complemento,
		vl_cotacao,
		vl_cambial_passivo,
		vl_cambial_ativo)
	(SELECT
		nr_titulo_w,
		nr_seq_baixa_w,
		dt_exclusao_p,
		cd_moeda,
		clock_timestamp(),
		nm_usuario_p,
		cd_tipo_baixa,
		ie_acao,
		vl_baixa * -1,
		vl_descontos * -1,
		vl_outras_deducoes * -1,
		vl_juros * -1,
		vl_multa * -1,
		vl_outros_acrescimos * -1,
		vl_outras_despesas * -1,
		vl_pago * -1,
		cd_banco,
		cd_conta_contabil,
		cd_centro_custo,
		0,
		0,
		nr_seq_devolucao,
		nr_bordero,
		nr_seq_trans_fin,
		0,
		nr_seq_conta_banco,
		nr_seq_escrit,
		VL_IMPOSTO * -1,
		vl_cotacao_moeda_w,
		nr_sequencia,
		vl_baixa_estrang_w,
		vl_complemento_w,
		vl_cotacao_w,
		(coalesce(vl_cambial_passivo,0) * -1),
		(coalesce(vl_cambial_ativo,0) * -1)
	from	titulo_pagar_baixa
	where	nr_titulo	= nr_titulo_w
	and	nr_sequencia	= nr_sequencia_w);
	
	CALL ratear_baixa_tit_pagar_nc(nr_titulo_w,nr_seq_baixa_w,nm_usuario_p);

	CALL gerar_titulo_pagar_baixa_cc(nr_titulo_w,nr_seq_baixa_w,'N',nm_usuario_p);

	CALL cancelar_tit_pagar_imposto(nr_titulo_w, nr_sequencia_w, nm_usuario_p);
	
	CALL gerar_alerta_baixa_tit_pagar(nr_titulo_w,nr_seq_baixa_w,cd_estabelecimento_w,nm_usuario_p);

	insert into titulo_pagar_imposto(nr_sequencia,
		nr_titulo,
		cd_tributo,
		ie_pago_prev,
		dt_atualizacao,
		nm_usuario,
		dt_imposto,
		vl_base_calculo,
		vl_imposto,
		ds_emp_retencao,
		pr_imposto,
		cd_beneficiario,
		cd_conta_financ,
		nr_seq_trans_reg,
		nr_seq_trans_baixa,
		cd_cond_pagto,
		vl_nao_retido,
		ie_vencimento,
		vl_base_nao_retido,
		vl_trib_adic,
		vl_base_adic,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		vl_reducao,
		vl_desc_base,
		cd_darf,
		cd_variacao,
		ie_periodicidade,
		nr_seq_baixa)
	SELECT	nextval('titulo_pagar_imposto_seq'),
		nr_titulo,
		cd_tributo,
		ie_pago_prev,
		clock_timestamp(),
		nm_usuario_p,
		dt_imposto,
		vl_base_calculo * -1,
		vl_imposto * -1,
		ds_emp_retencao,
		pr_imposto,
		cd_beneficiario,
		cd_conta_financ,
		nr_seq_trans_reg,
		nr_seq_trans_baixa,
		cd_cond_pagto,
		vl_nao_retido * -1,
		ie_vencimento,
		vl_base_nao_retido * -1,
		vl_trib_adic * -1,
		vl_base_adic * -1,
		clock_timestamp(),
		nm_usuario_p,
		vl_reducao * -1,
		vl_desc_base * -1,
		cd_darf,
		cd_variacao,
		ie_periodicidade,
		nr_seq_baixa_w
	from	titulo_pagar_imposto
	where	nr_titulo	= nr_titulo_w
	and	nr_seq_baixa	= nr_sequencia_w;

	CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_w, nm_usuario_p);
	--Gerar_W_Tit_Pag_imposto(nr_titulo_w,nm_usuario_p); TIREI ESSA ROTINA E CHAMEI A BAIXO CONFORME OS 652686
	if (vl_saldo_titulo_w > 0) and (IE_GERAR_TRIB_TEMP_w = 'S') then
	begin
	CALL GERAR_TRIBUTO_TITULO(nr_titulo_w,
		nm_usuario_p,
		'S',
		nr_bordero_p,
		null,
		null,
		null,
		null,
		cd_estabelecimento_w,
		vl_saldo_titulo_w);
	exception
	when others then
		null;
	end;
end if;
end if;

end 	loop;
close	c01;

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	bordero_pagamento
where	nr_bordero	= nr_bordero_p;

CALL GERAR_MOVTO_TRANS_BORDERO(nr_bordero_p,
			cd_estabelecimento_w,
			dt_exclusao_p,
			null,
			'E',
			nm_usuario_p);

open	c01;
loop
fetch	c01 into
	nr_titulo_w,
	vl_saldo_titulo_w,
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

    /*Nao estornar uma baixa que ja tenha sido estornada no titulo. OS - 2490241*/

		select coalesce(max(nr_sequencia),0)
		into STRICT nr_sequencia_baixa_w
		from titulo_pagar_baixa a
		where a.nr_titulo	= nr_titulo_w
		and IE_ORIGEM_BAIXA = 'BP';

		select	count(*)
		into STRICT cont_baixa_w
		from	titulo_pagar_baixa a
		where	a.nr_seq_baixa_origem in (	SELECT	x.nr_sequencia
							from	titulo_pagar_baixa x
							where	x.nr_bordero	= nr_bordero_p
							and	x.nr_titulo	= nr_titulo_w
							and x.nr_sequencia = nr_sequencia_baixa_w)
		and	a.nr_titulo	= nr_titulo_w
		and	coalesce(a.nr_bordero::text, '') = '';
	
	if (cont_baixa_w = 0) then

	/* obter a baixa de estorno */

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_baixa_est_w
	from	titulo_pagar_baixa a
	where	a.nr_titulo	= nr_titulo_w
	and	a.nr_bordero	= nr_bordero_p;

	/* obter a baixa que originou o estorno */

	select	max(a.nr_seq_baixa_origem)
	into STRICT	nr_seq_baixa_orig_w
	from	titulo_pagar_baixa a
	where	a.nr_sequencia	= nr_seq_baixa_est_w
	and	a.nr_titulo	= nr_titulo_w;

	/* conferir se a baixa de origem gerou movimentacao bancaria */

	select	max(a.nr_seq_movto_trans_fin),
			max(a.nr_seq_cheque_cp)
	into STRICT	nr_seq_movto_trans_fin_w,
			nr_seq_cheque_baixa_origem_w
	from	titulo_pagar_baixa a
	where	a.nr_sequencia	= nr_seq_baixa_orig_w
	and	a.nr_titulo	= nr_titulo_w;

	
	if (nr_seq_movto_trans_fin_w IS NOT NULL AND nr_seq_movto_trans_fin_w::text <> '') then

		/* obter a movimentacao bancaria do estorno */

		select	max(x.nr_sequencia)
		into STRICT	nr_seq_movto_estorno_w
		from	movto_trans_financ x
		where	x.nr_seq_titulo_pagar	= nr_titulo_w
		and	x.nr_bordero		= nr_bordero_p
		and	x.nr_sequencia		> nr_seq_movto_trans_fin_w;

		if (coalesce(nr_seq_movto_estorno_w::text, '') = '') then
		
			/*OS 1536017 - Tratar os casos onde foi gerado movimento por cheque do bordero*/

			if (nr_seq_cheque_baixa_origem_w IS NOT NULL AND nr_seq_cheque_baixa_origem_w::text <> '') then
			
				select	max(x.nr_sequencia)
				into STRICT	nr_seq_movto_estorno_w
				from	movto_trans_financ x
				where	x.nr_seq_cheque_cp	= nr_seq_cheque_baixa_origem_w
				and		x.nr_bordero		= nr_bordero_p
				and		x.nr_sequencia		> nr_seq_movto_trans_fin_w;
			
			end if;
			
			if (coalesce(nr_seq_movto_estorno_w::text, '') = '') then

				select	max(x.nr_sequencia)
				into STRICT	nr_seq_movto_estorno_w
				from	movto_trans_financ x
				where	coalesce(x.nr_seq_titulo_pagar::text, '') = ''
				and	x.nr_bordero		= nr_bordero_p
				and	x.nr_sequencia		> nr_seq_movto_trans_fin_w;
			
			end if;

		end if;

		update	titulo_pagar_baixa
		set	nr_seq_movto_trans_fin	= nr_seq_movto_estorno_w
		where	coalesce(nr_seq_movto_trans_fin::text, '') = ''
		and	nr_sequencia		= nr_seq_baixa_est_w
		and	nr_titulo		= nr_titulo_w;

		update	movto_trans_financ
		set	nr_seq_movto_orig	= nr_seq_movto_trans_fin_w,
			ie_estorno		= 'E'
		where	coalesce(nr_seq_movto_orig::text, '') = ''
		and	nr_sequencia		= nr_seq_movto_estorno_w;

	end if;
end if;
end	loop;
close	c01;

update	bordero_pagamento
set	dt_real_pagamento	 = NULL,
	nm_usuario		= nm_usuario_p
where	nr_bordero		= nr_bordero_p;

if ( coalesce(ie_atualiza_dtpagto_cheque_w,'N') = 'S') then

	update	cheque a
	set 	a.dt_pagamento  = NULL
	where	a.nr_sequencia in (	SELECT	x.nr_seq_cheque
								from	cheque_bordero_titulo x
								where	x.nr_bordero		= nr_bordero_p);
end if;
end if;
	exception when others then
		ie_result_lock_w := DBMS_LOCK.RELEASE(lockhandle => ie_lock_handle_w);
		ds_erro_w	:= sqlerrm(SQLSTATE);
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(ds_erro_w);						
	end;
	
ie_result_lock_w := DBMS_LOCK.RELEASE(lockhandle => ie_lock_handle_w);
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE excluir_baixa_bordero_pagto (nr_bordero_p bigint, nm_usuario_p text, dt_exclusao_p timestamp) FROM PUBLIC;

