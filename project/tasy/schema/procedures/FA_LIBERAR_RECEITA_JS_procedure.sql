-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fa_liberar_receita_js ( nr_sequencia_p bigint, nm_usuario_p text, nr_atendimento_p bigint, ie_receita_externa_p text, ie_exige_laudo_p INOUT text, ds_mensagem_p INOUT text) AS $body$
DECLARE

			     
cd_material_w		bigint;
qt_itens_w		bigint;
dt_inicio_w		timestamp;
dt_validade_w	timestamp;
nr_seq_item_w	bigint;
cd_pessoa_fisica_w PESSOA_FISICA.CD_PESSOA_FISICA%TYPE;

c01 CURSOR FOR
	SELECT	cd_material
	from 	fa_receita_farmacia_item
	where 	nr_seq_receita = nr_sequencia_p;
	
c02 CURSOR FOR
	SELECT	a.nr_sequencia
	from 	fa_receita_farmacia_item a,
			regra_regulacao b
	where 	a.nr_seq_receita = nr_sequencia_p
	and		a.cd_material = b.cd_material
	and		b.ie_tipo = 'ME'
	and		coalesce(b.ie_tipo_parecer,'R') = 'R';
	

BEGIN

open c01;
loop
fetch c01 into
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	ie_exige_laudo_p := coalesce(obter_se_material_laudo(nr_atendimento_p,cd_material_w),'N');
	if (ie_receita_externa_p <> 'S') and (substr(ie_exige_laudo_p,1,1) = 'S') then
		exit;
	end if;
end loop;
close C01;

select count(*)
into STRICT	qt_itens_w
from	fa_receita_farmacia_item
where 	nr_seq_receita 	= nr_sequencia_p;

if (qt_itens_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(282131);
end if;

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (ie_exige_laudo_p = 'N' or ie_receita_externa_p = 'S') then
	begin
	update	fa_receita_farmacia
	set	dt_liberacao    = clock_timestamp(),	
		nm_usuario_lib	= nm_usuario_p,
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where 	nr_sequencia 	= nr_sequencia_p;
	
	select 	dt_inicio_receita,
		dt_validade_receita
	into STRICT	dt_inicio_w,
		dt_validade_w
	from	fa_receita_farmacia
	where	nr_sequencia = nr_sequencia_p;
	
	if (dt_inicio_w IS NOT NULL AND dt_inicio_w::text <> '') and (dt_validade_w IS NOT NULL AND dt_validade_w::text <> '') then
		CALL preparar_medic_dias(nr_sequencia_p,nm_usuario_p);
	end if;

    
	open C02;
	loop
	fetch C02 into	
		nr_seq_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		CALL consistir_regulacao_pep( nr_seq_item_w, 'FA_LIBERAR_RECEITA');
		end;
	end loop;
	close C02;
	
  if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'es_CO') then
    CALL insert_rec_amb_prescr_mipres(nr_sequencia_p);
  end if;
	
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(282132);
	end;
	
end if;

commit;

CALL gerar_ctg_seq_prescription(nr_sequencia_p,nm_usuario_p);

ds_mensagem_p := obter_texto_tasy(74018, wheb_usuario_pck.get_nr_seq_idioma);

select coalesce(max(CD_PESSOA_FISICA), 0)
into STRICT cd_pessoa_fisica_w
from FA_RECEITA_FARMACIA
where nr_sequencia = nr_sequencia_p;
CALL ATUALIZAR_EV_LINHA_CUIDADO('RA', 'FA_RECEITA_FARMACIA', nr_sequencia_p, nr_sequencia_p, cd_pessoa_fisica_w, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fa_liberar_receita_js ( nr_sequencia_p bigint, nm_usuario_p text, nr_atendimento_p bigint, ie_receita_externa_p text, ie_exige_laudo_p INOUT text, ds_mensagem_p INOUT text) FROM PUBLIC;

