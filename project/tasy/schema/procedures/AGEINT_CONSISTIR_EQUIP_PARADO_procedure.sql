-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_consistir_equip_parado (cd_agenda_p bigint, hr_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


					
nr_seq_equipamento_w	bigint;
hr_inicio_w		timestamp;
qt_dias_w		bigint;
cd_agenda_w		bigint;
ie_parado_w		varchar(1);
nr_Seq_agenda_w		agenda_paciente.nr_sequencia%type;

dt_inicio_w		timestamp;
dt_fim_w			timestamp;
dt_agenda_w		timestamp;
					
BEGIN

select  coalesce(max(nr_sequencia),0)
into STRICT    nr_Seq_agenda_w
from    agenda_paciente
where   cd_agenda       = cd_agenda_p
and     hr_inicio       = hr_agenda_p;

select	max(a.nr_seq_equipamento),
	max(b.hr_inicio),
	coalesce(max(a.qt_dias_post_prox_livre),0),
	max(a.cd_agenda)
into STRICT	nr_seq_equipamento_w,
	hr_inicio_w,
	qt_dias_w,
	cd_agenda_w
from	agenda a,
	agenda_paciente b
where	a.cd_agenda	= b.cd_agenda
and	b.nr_sequencia	= nr_seq_agenda_w;

if (nr_seq_equipamento_w IS NOT NULL AND nr_seq_equipamento_w::text <> '') then

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_parado_w
	from	man_equip_periodo_parado
	where	nr_seq_equipamento = nr_seq_equipamento_w
	and	hr_inicio_w between dt_periodo_inicial and dt_periodo_final;

	if (ie_parado_w = 'S') and (qt_dias_w <> 0) then

		dt_inicio_w	:= trunc(hr_inicio_w);
		dt_fim_w	:= dt_inicio_w + 86399/86400;
		
		select	min(hr_inicio)
		into STRICT	dt_agenda_w
		from  	agenda_paciente
		where	hr_inicio between hr_inicio_w and dt_fim_w
		and	cd_agenda		= cd_agenda_w
		and   	ie_status_agenda 	= 'L'
		and	not exists (SELECT	1
		from	man_equip_periodo_parado x
		 where	hr_inicio between x.dt_periodo_inicial and x.dt_periodo_final);	

		if (coalesce(dt_agenda_w::text, '') = '') then
			for i in 1..qt_dias_w loop
				begin
				dt_inicio_w	:= dt_inicio_w + 1;
				dt_fim_w	:= dt_inicio_w + 86399/86400;
				if (coalesce(dt_agenda_w::text, '') = '') then
									
					CALL gerar_horario_agenda_exame(cd_estabelecimento_p, cd_agenda_w, dt_inicio_w, nm_usuario_p);
					
					select	min(hr_inicio)
					into STRICT	dt_agenda_w
					from  	agenda_paciente
					where	hr_inicio between trunc(dt_inicio_w) and dt_fim_w
					and	cd_agenda		= cd_agenda_w
					and   	ie_status_agenda 	= 'L'
					and	not exists (SELECT	1
							    from	man_equip_periodo_parado x
							    where	hr_inicio between x.dt_periodo_inicial and x.dt_periodo_final);	
				end if;
				end;
			end loop;
		end if;

		if (dt_agenda_w IS NOT NULL AND dt_agenda_w::text <> '') then
			ds_erro_p	:= wheb_mensagem_pck.get_texto(281762,'DT_AGENDA='||to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi:ss'));
		else
			ds_erro_p	:= wheb_mensagem_pck.get_texto(281763,null);
		end if;

	end if;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_consistir_equip_parado (cd_agenda_p bigint, hr_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

