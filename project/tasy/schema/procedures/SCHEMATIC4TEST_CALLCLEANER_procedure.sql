-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE schematic4test_callcleaner () AS $body$
DECLARE

NR_SEQ_SCHEDULE_W bigint;
NR_SEQ_SCHEDULE2_W bigint;
NR_SEQ_SUITE_W bigint;
NR_SEQ_SUITE2_W bigint;
QTD_SCHEDULEW bigint;
QTD_URLW bigint;
QTD_OSW bigint;
QTD_SUITEW bigint;

--loop schedules temp
C01 CURSOR FOR
  SELECT sche.NR_SEQUENCIA NR_SEQ_SCHEDULE2 
      INTO STRICT NR_SEQ_SCHEDULE2_W
  FROM SCHEM_TEST_SUITE suite
	INNER JOIN SCHEM_TEST_SCHEDULE sche ON (sche.NR_SEQ_SUITE = suite.NR_SEQUENCIA)
	WHERE suite.NM_SUITE like 'Test -%' 
  OR suite.NM_SUITE like 'Creating -%'
  OR suite.NM_SUITE like 'Failure from%'
  OR suite.NM_SUITE like 'Service Pack%';

--loop suites temp
C02 CURSOR FOR
  SELECT suite.NR_SEQUENCIA NR_SEQ_SUITE2
      INTO STRICT NR_SEQ_SUITE2_W
  FROM SCHEM_TEST_SUITE suite
  WHERE suite.NM_SUITE like 'Test -%'
  OR suite.NM_SUITE like 'Creating -%'
  OR suite.NM_SUITE like 'Failure from%'
  OR suite.NM_SUITE like 'Service Pack%';



BEGIN
    --procedure that set status to clean tables
    SELECT COUNT(*) QTD_SCHEDULE
      INTO STRICT QTD_SCHEDULEW
    FROM SCHEM_TEST_SCHEDULE 
    WHERE IE_JOBS = '666';

    IF (QTD_SCHEDULEW > 0) THEN
      UPDATE SCHEM_TEST_SCHEDULE SET IE_JOBS = '1' WHERE IE_JOBS = '666';
    END IF;

    SELECT COUNT(*) QTD_SUITE
      INTO STRICT QTD_SUITEW
    FROM SCHEM_TEST_SUITE suite
    WHERE suite.IE_JOBS = '666';
    
    IF (QTD_SUITEW > 0) THEN
      UPDATE SCHEM_TEST_SUITE SET IE_JOBS = '1' WHERE IE_JOBS = '666';
    END IF;

    OPEN C01;
    LOOP
    FETCH C01 INTO	
      NR_SEQ_SCHEDULE2_W;
    EXIT WHEN NOT FOUND; /* apply on C01 */
    BEGIN
      UPDATE SCHEM_TEST_SCHEDULE SET IE_JOBS = '1' WHERE NR_SEQUENCIA = NR_SEQ_SCHEDULE2_W;
      COMMIT;
    END;
    END LOOP;
    CLOSE C01;
    
    OPEN C02;
    LOOP
    FETCH C02 INTO	
        NR_SEQ_SUITE2_W;
    EXIT WHEN NOT FOUND; /* apply on C02 */
    BEGIN
      UPDATE SCHEM_TEST_SUITE SET IE_JOBS = '1' WHERE NR_SEQUENCIA = NR_SEQ_SUITE2_W;
      COMMIT;
    END;
    END LOOP;
    CLOSE C02;

    SELECT COUNT(*) 
      INTO STRICT QTD_URLW
    FROM SCHEM_TEST_URL
    WHERE IE_SITUACAO LIKE 'A'
    AND NM_USUARIO_NREC LIKE 'Tec-Jenkins';
	
    IF (QTD_URLW > 0) THEN
      UPDATE SCHEM_TEST_URL SET IE_SITUACAO = 'I', DT_ATUALIZACAO = clock_timestamp(), NM_USUARIO = 'Auto Robot' WHERE IE_SITUACAO LIKE 'A' AND NM_USUARIO_NREC LIKE 'Tec-Jenkins';
      COMMIT;
    END IF;

    SELECT COUNT(*) QTD_OS
      INTO STRICT QTD_OSW
    FROM SCHEM_TEST_OS
    WHERE IE_SITUACAO LIKE 'A'
    AND DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';
	
    IF (QTD_OSW > 0) THEN
      UPDATE SCHEM_TEST_OS SET IE_SITUACAO = 'I', DT_ATUALIZACAO = clock_timestamp(), NM_USUARIO = 'Auto Robot' WHERE IE_SITUACAO LIKE 'A' AND DT_ATUALIZACAO_NREC <= clock_timestamp() - interval '60 days';
      COMMIT;
    END IF;

    EXCEPTION
    WHEN no_data_found THEN
      RAISE NOTICE 'Erro: Data not found';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE schematic4test_callcleaner () FROM PUBLIC;

