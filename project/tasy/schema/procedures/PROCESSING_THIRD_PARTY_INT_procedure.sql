-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE processing_third_party_int ( nr_seq_integration_p transfer_third_party.nr_seq_integration%type, nr_seq_evento_sistema_p intpd_eventos_sistema.nr_sequencia%type) AS $body$
DECLARE


_ora2pg_r RECORD;
repasse_terceiro_w		    repasse_terceiro%rowtype;
repasse_terceiro_item_w	    repasse_terceiro_item%rowtype;
ie_conversao_w			    intpd_eventos_sistema.ie_conversao%type;
nr_seq_projeto_xml_w	    intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_sistema_w		    intpd_eventos_sistema.nr_seq_sistema%type;
reg_integracao_w		    gerar_int_padrao.reg_integracao_conv;
nr_seq_regra_w			    conversao_meio_externo.nr_seq_regra%type;
ie_sistema_externo_w	    third_party_integration.ds_origin%type;
nr_seq_third_party_w        transfer_third_party.nr_sequencia%type;
ds_erro_w			        third_party_integration.ds_message%type;
ds_result_processing_w      third_party_integration.ds_result_processing%type;
cd_convenio_w			    convenio.cd_convenio%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_repasse_terceiro_intpd_w	repasse_terceiro.nr_repasse_terceiro%type;
nr_repasse_terceiro_w		repasse_terceiro.nr_repasse_terceiro%type;
cd_condicao_pagamento_w		repasse_terceiro.cd_condicao_pagamento%type;
nr_sequencia_item_w		    repasse_terceiro_item.nr_sequencia_item%type;
cd_medico_w			        repasse_terceiro_item.cd_medico%type;
nr_seq_tipo_item_w		    repasse_terceiro_item.nr_seq_tipo%type;
cd_centro_custo_w		    repasse_terceiro_item.cd_centro_custo%type;
nr_sequencia_w			    repasse_terceiro_item.nr_sequencia%type;
nr_seq_terceiro_w		    terceiro.nr_sequencia%type;
nr_seq_tipo_w			    tipo_repasse.nr_sequencia%type;

dt_mesano_referencia_w		timestamp;
dt_contabil_w			    timestamp;
dt_lancamento_w			    timestamp;
i				            integer;
ds_enter_w			       third_party_integration.ds_message%type;


c01 CURSOR FOR
SELECT  nr_sequencia,
        ie_action,
        cast(nr_seq_terceiro_tasy as bigint) NR_SEQ_TERCEIRO,
        dt_mesano_referencia,
        cast(ie_tipo_data_tasy as smallint) IE_TIPO_DATA,
        cast(cd_condicao_pagamento_tasy as bigint) CD_CONDICAO_PAGAMENTO,
        cast(nr_seq_tipo_tasy as bigint) NR_SEQ_TIPO,
        ie_status_tasy ie_status,
        cast(cd_estabelecimento_tasy as smallint) cd_estabelecimento
from    transfer_third_party
where   nr_seq_integration = nr_seq_integration_p;

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT  cast(b.nr_seq_item_tasy as integer) NR_SEQ_ITEM_TASY,
        b.dt_contabil,
        b.dt_lancamento,
        b.vl_repasse_tasy vl_repasse,
        b.cd_medico_tasy cd_medico,
        cast(b.nr_seq_tipo_item_tasy as bigint) NR_SEQ_TIPO,
        cast(b.cd_centro_custo_tasy as integer) CD_CENTRO_CUSTO,
        b.ie_partic_tributo_tasy ie_partic_tributo
from	transfer_third_party a,
	transfer_third_party_items b
where   a.nr_sequencia = b.nr_seq_transfer
and	a.nr_seq_integration = nr_seq_integration_p; -- Aqui ele deveria usar essa variavel para rodar o select
c02_w	c02%rowtype;


BEGIN

update	third_party_integration
set	ie_status = 'P'
where	nr_sequencia = nr_seq_integration_p;

commit;


begin
ds_enter_w := chr(13)||chr(10);

begin
select	coalesce(a.ie_conversao,'I'),
	a.nr_seq_sistema,
	a.nr_seq_projeto_xml,
	a.nr_seq_regra_conv
into STRICT	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w
from	intpd_eventos_sistema a
where	a.nr_sequencia = nr_seq_evento_sistema_p;
exception
        when no_data_found then
                ie_conversao_w := null;
                nr_seq_sistema_w := null;
                nr_seq_projeto_xml_w := null;
                nr_seq_regra_w := null;
        when too_many_rows then
                ie_conversao_w := null;
                nr_seq_sistema_w := null;
                nr_seq_projeto_xml_w := null;
                nr_seq_regra_w := null;
end;

ie_sistema_externo_w	:=	nr_seq_sistema_w;

reg_integracao_w.nr_seq_fila_transmissao	:=	null;
reg_integracao_w.ie_envio_recebe		:=	'R';
reg_integracao_w.ie_sistema_externo		:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao			:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml		:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao		:=	nr_seq_regra_w;
reg_integracao_w.intpd_log_receb.delete;
reg_integracao_w.qt_reg_log			:=	0;
i := 0;

open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

    i := 1;
	reg_integracao_w.nm_tabela	:=	'REPASSE_TERCEIRO';
	reg_integracao_w.nm_elemento	:=	'TRANSFER_THIRD_PARTY';

    ds_result_processing_w := ('"{transfer_third_party": {"nr_seq_terceiro_tasy": "", "dt_mesano_referencia": ""}}');

	if (c01_w.nr_seq_terceiro IS NOT NULL AND c01_w.nr_seq_terceiro::text <> '') then
		begin
		select	nr_sequencia
		into STRICT	nr_seq_terceiro_w
		from	terceiro
		where	nr_sequencia = c01_w.nr_seq_terceiro;
		exception
		when no_data_found then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1055701,'nr_seq_terceiro_w='||c01_w.nr_seq_terceiro);
                when too_many_rows then
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(1055701,'nr_seq_terceiro_w='||c01_w.nr_seq_terceiro);
		end;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1055702);	
	end if;

	if (coalesce(c01_w.dt_mesano_referencia::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1055703);
	end if;

    ds_result_processing_w := ('"{transfer_third_party": {"nr_seq_terceiro_tasy": "' || c01_w.nr_seq_terceiro || '", "dt_mesano_referencia": "' || c01_w.dt_mesano_referencia ||'"}}');

	if (coalesce(c01_w.ie_tipo_data::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1055704);
	end if;

	if (c01_w.cd_condicao_pagamento IS NOT NULL AND c01_w.cd_condicao_pagamento::text <> '') then
		begin
		select	cd_condicao_pagamento
		into STRICT	cd_condicao_pagamento_w
		from	condicao_pagamento
		where	cd_condicao_pagamento = c01_w.cd_condicao_pagamento;
		exception
		when no_data_found then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1055705,'cd_condicao_pagamento_w='||c01_w.cd_condicao_pagamento);
                when too_many_rows then
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(1055705,'cd_condicao_pagamento_w='||c01_w.cd_condicao_pagamento);
		end;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1055706);
	end if;

	if (c01_w.nr_seq_tipo IS NOT NULL AND c01_w.nr_seq_tipo::text <> '') then
		begin
		select	nr_sequencia
		into STRICT	nr_seq_tipo_w
		from	tipo_repasse
		where	nr_sequencia = c01_w.nr_seq_tipo;
		exception
		when no_data_found then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1055707,'nr_seq_tipo_w='||c01_w.nr_seq_tipo);
                when too_many_rows then
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(1055707,'nr_seq_tipo_w='||c01_w.nr_seq_tipo);
		end;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1055708);
	end if;

	if (coalesce(c01_w.ie_status::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1055709);
	end if;

	if (coalesce(c01_w.cd_estabelecimento,0) > 0) then
		begin
		select	cd_estabelecimento
		into STRICT	cd_estabelecimento_w
		from	estabelecimento
		where	cd_estabelecimento = c01_w.cd_estabelecimento;
		exception
		when no_data_found then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(759919,'cd_estabelecimento_w='||c01_w.cd_estabelecimento);
                when too_many_rows then
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(759919,'cd_estabelecimento_w='||c01_w.cd_estabelecimento);
		end;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(759920);
	end if;

	dt_mesano_referencia_w	:= to_date(c01_w.dt_mesano_referencia,'dd/mm/yyyy hh24:mi:ss');

        begin
	select	max(a.nr_repasse_terceiro)
	into STRICT	nr_repasse_terceiro_w
	from	repasse_terceiro a
	where	a.nr_seq_terceiro = nr_seq_terceiro_w
	and	a.ie_status = 'A'
	and	a.dt_mesano_referencia = dt_mesano_referencia_w;
        exception
        when no_data_found then
                nr_repasse_terceiro_w := null;
        when too_many_rows then
                nr_repasse_terceiro_w := null;
        end;

	if (coalesce(nr_repasse_terceiro_w::text, '') = '') then
		select	nextval('repasse_terceiro_seq')
		into STRICT	nr_repasse_terceiro_w
		;
	end if;

	begin
        SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_TERCEIRO', nr_seq_terceiro_w, 'N', repasse_terceiro_w.nr_seq_terceiro) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_w.nr_seq_terceiro := _ora2pg_r.ds_valor_retorno_p;
        SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_MESANO_REFERENCIA', dt_mesano_referencia_w, 'N', repasse_terceiro_w.dt_mesano_referencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_w.dt_mesano_referencia := _ora2pg_r.ds_valor_retorno_p;
        SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_DATA', c01_w.ie_tipo_data, 'N', repasse_terceiro_w.ie_tipo_data) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_w.ie_tipo_data := _ora2pg_r.ds_valor_retorno_p;
        SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CONDICAO_PAGAMENTO', cd_condicao_pagamento_w, 'N', repasse_terceiro_w.cd_condicao_pagamento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_w.cd_condicao_pagamento := _ora2pg_r.ds_valor_retorno_p;
        SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_TIPO', nr_seq_tipo_w, 'N', repasse_terceiro_w.nr_seq_tipo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_w.nr_seq_tipo := _ora2pg_r.ds_valor_retorno_p;
        SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_STATUS', c01_w.ie_status, 'N', repasse_terceiro_w.ie_status) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_w.ie_status := _ora2pg_r.ds_valor_retorno_p;
        SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', cd_estabelecimento_w, 'N', repasse_terceiro_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;

        if (reg_integracao_w.qt_reg_log = 0) then
            begin
            repasse_terceiro_w.nr_repasse_terceiro := nr_repasse_terceiro_w;
            repasse_terceiro_w.dt_atualizacao := clock_timestamp();
            repasse_terceiro_w.nm_usuario := 'Integracao';

            insert into repasse_terceiro values (repasse_terceiro_w.*);
            end;
        end if;
	end;

	open c02;
	loop
	fetch c02 into	
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		reg_integracao_w.nm_tabela	:=	'REPASSE_TERCEIRO_ITEM';
		reg_integracao_w.nm_elemento	:=	'TRANSFER_THIRD_PARTY_ITEMS';

		if (coalesce(c02_w.dt_contabil::text, '') = '') then
			dt_contabil_w	:= dt_mesano_referencia_w;
		else
			dt_contabil_w	:= c02_w.dt_contabil;
		end if;

		if (coalesce(c02_w.dt_lancamento::text, '') = '') then
			dt_lancamento_w	:= dt_mesano_referencia_w;
		else
			dt_lancamento_w	:= c02_w.dt_lancamento;
		end if;

		if (coalesce(c02_w.cd_medico,0) > 0) then
			begin
			select	cd_pessoa_fisica
			into STRICT	cd_medico_w
			from	medico
			where	cd_pessoa_fisica = c02_w.cd_medico;
			exception
			when no_data_found then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1055712,'cd_medico_w='||c02_w.cd_medico);
                        when too_many_rows then
                                CALL wheb_mensagem_pck.exibir_mensagem_abort(1055712,'cd_medico_w='||c02_w.cd_medico);
			end;
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1055713);
		end if;

		if (coalesce(c02_w.nr_seq_tipo,0) > 0) then
			begin
			select	nr_sequencia
			into STRICT	nr_seq_tipo_item_w
			from	tipo_repasse_item
			where	nr_sequencia = c02_w.nr_seq_tipo;
			exception
			when no_data_found then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1055714,'nr_seq_tipo_item_w='||c02_w.nr_seq_tipo);
                        when too_many_rows then
                                CALL wheb_mensagem_pck.exibir_mensagem_abort(1055714,'nr_seq_tipo_item_w='||c02_w.nr_seq_tipo);
			end;
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1055715);
		end if;

		if (coalesce(c02_w.cd_centro_custo,0) > 0) then
			begin
			select	cd_centro_custo
			into STRICT	cd_centro_custo_w
			from	centro_custo
			where	cd_centro_custo = c02_w.cd_centro_custo;
			exception
			when no_data_found then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1055716,'cd_centro_custo_w='||c02_w.cd_centro_custo);
                        when too_many_rows then
                                CALL wheb_mensagem_pck.exibir_mensagem_abort(1055716,'cd_centro_custo_w='||c02_w.cd_centro_custo);
			end;
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1055717);
		end if;

		if (coalesce(c02_w.ie_partic_tributo::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1055718);
		end if;

                begin
		select	coalesce(max(nr_sequencia_item),0) + 1
		into STRICT	nr_sequencia_item_w
		from	repasse_terceiro_item
		where	nr_repasse_terceiro = nr_repasse_terceiro_w;
                exception
                        when no_data_found then
                                nr_sequencia_item_w := null;
                        when too_many_rows then
                                nr_sequencia_item_w := null;
                end;

		begin
            SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA_ITEM', nr_sequencia_item_w, 'N', repasse_terceiro_item_w.nr_sequencia_item) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_item_w.nr_sequencia_item := _ora2pg_r.ds_valor_retorno_p;
            SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_CONTABIL', dt_contabil_w, 'N', repasse_terceiro_item_w.dt_contabil) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_item_w.dt_contabil := _ora2pg_r.ds_valor_retorno_p;
            SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_LANCAMENTO', dt_lancamento_w, 'N', repasse_terceiro_item_w.dt_lancamento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_item_w.dt_lancamento := _ora2pg_r.ds_valor_retorno_p;
            SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_REPASSE', (replace(obter_valor_campo_separador(c02_w.vl_repasse,4,'|'),'.',','))::numeric , 'N', repasse_terceiro_item_w.vl_repasse) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_item_w.vl_repasse := _ora2pg_r.ds_valor_retorno_p;
            SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MEDICO', cd_medico_w, 'N', repasse_terceiro_item_w.cd_medico) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_item_w.cd_medico := _ora2pg_r.ds_valor_retorno_p;
            SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_TIPO', nr_seq_tipo_item_w, 'N', repasse_terceiro_item_w.nr_seq_tipo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_item_w.nr_seq_tipo := _ora2pg_r.ds_valor_retorno_p;
            SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CENTRO_CUSTO', cd_centro_custo_w, 'N', repasse_terceiro_item_w.cd_centro_custo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_item_w.cd_centro_custo := _ora2pg_r.ds_valor_retorno_p;
            SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PARTIC_TRIBUTO', c02_w.ie_partic_tributo, 'N', repasse_terceiro_item_w.ie_partic_tributo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; repasse_terceiro_item_w.ie_partic_tributo := _ora2pg_r.ds_valor_retorno_p;

            if (reg_integracao_w.qt_reg_log = 0) then
                begin
    
                select	nextval('repasse_terceiro_item_seq')
                into STRICT	nr_sequencia_w
;

                repasse_terceiro_item_w.nr_sequencia		:= nr_sequencia_w;
                repasse_terceiro_item_w.nr_repasse_terceiro	:= nr_repasse_terceiro_w;
                repasse_terceiro_item_w.dt_atualizacao		:= clock_timestamp();
                repasse_terceiro_item_w.nm_usuario		    := 'Integracao';
                repasse_terceiro_item_w.dt_atualizacao_nrec	:= clock_timestamp();
                repasse_terceiro_item_w.nm_usuario_nrec		:= 'Integracao';

                insert into repasse_terceiro_item values (repasse_terceiro_item_w.*);
                end;
            end if;
		end;

		end;
	end loop;
	close c02;
	end;
end loop;
close c01;
exception
when others then
    begin
	ds_erro_w	:= coalesce(ds_erro_w, '-') || substr(sqlerrm,1,4000);
        i := 0;
	rollback;

	update	third_party_integration a
	set	a.ie_status             = 'E',
		a.ds_message            = ds_erro_w,
        a.dt_atualizacao        = clock_timestamp(),
        a.dt_processing         = current_timestamp,
        a.ds_result_processing  = ds_result_processing_w,
        a.nm_usuario            = 'Integracao'
	where	a.nr_sequencia = nr_seq_integration_p;
        commit;
    end;
end;

if (reg_integracao_w.qt_reg_log > 0) then
	begin
	rollback;

	update	third_party_integration a
	set	a.ie_status             = 'E',
		a.ds_message            = ds_erro_w,
        a.dt_atualizacao        = clock_timestamp(),
        a.dt_processing         = current_timestamp,
        a.ds_result_processing  = ds_result_processing_w,
        a.nm_usuario            = 'Integracao'
	where	a.nr_sequencia = nr_seq_integration_p;
	end;
else
    if (i = 1) then begin
        update	third_party_integration a
        set	a.ie_status         = 'S',
            a.ds_message        = 'Done',
            a.dt_atualizacao    = clock_timestamp(),
            a.dt_processing     = current_timestamp,
            a.nm_usuario        = 'Integracao'
        where	a.nr_sequencia = nr_seq_integration_p;
    end;
    end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE processing_third_party_int ( nr_seq_integration_p transfer_third_party.nr_seq_integration%type, nr_seq_evento_sistema_p intpd_eventos_sistema.nr_sequencia%type) FROM PUBLIC;

