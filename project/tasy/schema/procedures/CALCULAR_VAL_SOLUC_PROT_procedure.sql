-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_val_soluc_prot (cd_protocolo_p bigint, nr_seq_solucao_p bigint, qt_velocidade_infusao_p bigint, ie_unidade_velocidade_p text, ie_calcular_etapa_p text, ie_volume_velocidade_p text, ie_calcula_total_p text, nr_sequencia_p bigint, qt_volume_solucao_p INOUT bigint, nr_etapas_solucao_p INOUT bigint, qt_tempo_total_p INOUT bigint) AS $body$
DECLARE


qt_tempo_aplicacao_w		double precision;
qt_velocidade_infusao_w		double precision;
qt_velocidade_infusao_ml_w		double precision;
ie_unidade_velocidade_w		varchar(15);
ie_bomba_infusao_w		varchar(50);
qt_volume_componentes_w		double precision;
qt_volume_componentes_ml_w	double precision;
qt_volume_solucao_w		double precision	:= null;
qt_tempo_total_w		double precision	:= null;
nr_etapas_solucao_w		smallint	:= null;


BEGIN
if (cd_protocolo_p IS NOT NULL AND cd_protocolo_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') and (qt_velocidade_infusao_p IS NOT NULL AND qt_velocidade_infusao_p::text <> '') and (ie_unidade_velocidade_p IS NOT NULL AND ie_unidade_velocidade_p::text <> '') then

	select	max(qt_tempo_aplicacao),
		max(qt_velocidade_infusao_p),
		max(ie_unidade_velocidade_p),
		max(ie_bomba_infusao)
	into STRICT	qt_tempo_aplicacao_w,
		qt_velocidade_infusao_w,
		ie_unidade_velocidade_w,
		ie_bomba_infusao_w
	from	PROTOCOLO_MEDIC_SOLUCAO
	where	cd_protocolo	= cd_protocolo_p
	and	nr_seq_solucao	= nr_seq_solucao_p
	and nr_sequencia = nr_sequencia_p;

	select	sum(qt_dose),
		sum(qt_solucao)
	into STRICT	qt_volume_componentes_w,
		qt_volume_componentes_ml_w
	from	protocolo_medic_material
	where	cd_protocolo		= cd_protocolo_p
	and	nr_seq_solucao		= nr_seq_solucao_p
	and	nr_sequencia = nr_sequencia_p
	and	ie_agrupador		= 4;

	if (qt_tempo_aplicacao_w IS NOT NULL AND qt_tempo_aplicacao_w::text <> '') and (qt_velocidade_infusao_w IS NOT NULL AND qt_velocidade_infusao_w::text <> '') and (ie_unidade_velocidade_w IS NOT NULL AND ie_unidade_velocidade_w::text <> '') and (qt_volume_componentes_ml_w IS NOT NULL AND qt_volume_componentes_ml_w::text <> '') then

		--qt_velocidade_infusao_ml_w	:= converte_vel_infusao(ie_unidade_velocidade_w, 'mlh', qt_velocidade_infusao_w);
		if (ie_unidade_velocidade_w = 'gtm') then
			qt_velocidade_infusao_ml_w	:= dividir(qt_velocidade_infusao_w * 60, 20);
		elsif (ie_unidade_velocidade_w = 'mgm') then
			qt_velocidade_infusao_ml_w	:= dividir(qt_velocidade_infusao_w * 60, 50);
		else
			qt_velocidade_infusao_ml_w	:= qt_velocidade_infusao_w;
		end if;

		if (qt_velocidade_infusao_ml_w > 0) then

			qt_volume_solucao_w	:= qt_tempo_aplicacao_w * qt_velocidade_infusao_ml_w;
			nr_etapas_solucao_w	:= 0;
			if (ie_calcular_etapa_p = 'S') then
				nr_etapas_solucao_w	:= round(dividir(qt_volume_solucao_w, qt_volume_componentes_ml_w));
			end if;

			if (nr_etapas_solucao_w = 0) then
				nr_etapas_solucao_w	:= 1;
			end if;

			qt_volume_solucao_w	:= qt_volume_componentes_ml_w * nr_etapas_solucao_w;
			qt_tempo_total_w	:= round((dividir(qt_volume_solucao_w, qt_velocidade_infusao_ml_w))::numeric,1);

			if	((coalesce(ie_bomba_infusao_w,'N') 	<> 'N') and (ie_volume_velocidade_p	= 'S')) or (ie_volume_velocidade_p		= 'T') then
				if (ie_unidade_velocidade_w	= 'mlh') then
					if (ie_calcula_total_p = 'S') then
						qt_volume_solucao_w	:= (qt_velocidade_infusao_ml_w * qt_tempo_total_w);
					else
						qt_volume_solucao_w	:= (qt_velocidade_infusao_ml_w * qt_tempo_aplicacao_w);
					end if;
				else
					if (ie_calcula_total_p = 'S') then
						qt_volume_solucao_w	:= (qt_velocidade_infusao_ml_w * (qt_tempo_total_w/1440));
					else
						qt_volume_solucao_w	:= (qt_velocidade_infusao_ml_w * (qt_tempo_aplicacao_w/1440));
					end if;
				end if;
			end if;

		end if;

	end if;

end if;

qt_tempo_total_p	:= qt_tempo_total_w;
qt_volume_solucao_p	:= qt_volume_solucao_w;
nr_etapas_solucao_p	:= nr_etapas_solucao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_val_soluc_prot (cd_protocolo_p bigint, nr_seq_solucao_p bigint, qt_velocidade_infusao_p bigint, ie_unidade_velocidade_p text, ie_calcular_etapa_p text, ie_volume_velocidade_p text, ie_calcula_total_p text, nr_sequencia_p bigint, qt_volume_solucao_p INOUT bigint, nr_etapas_solucao_p INOUT bigint, qt_tempo_total_p INOUT bigint) FROM PUBLIC;

