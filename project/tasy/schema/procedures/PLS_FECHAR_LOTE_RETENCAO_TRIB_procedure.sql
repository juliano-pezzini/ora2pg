-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_fechar_lote_retencao_trib (nr_seq_lote_ret_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_forma_retencao_inss_ir_w	pls_parametro_pagamento.ie_forma_retencao_inss_ir%type;
nr_seq_evento_trib_lm_w		pls_parametro_pagamento.nr_seq_evento_trib_lm%type;
nr_seq_evento_trib_prov_w	pls_parametro_pagamento.nr_seq_evento_trib_prov%type;

c01 CURSOR(nr_seq_lote_ret_pc	pls_lote_retencao_trib.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	pls_lote_ret_trib_prest
	where	nr_seq_lote = nr_seq_lote_ret_pc
	and	coalesce(dt_conferencia::text, '') = '';

c02 CURSOR(nr_seq_lote_ret_pc	pls_lote_retencao_trib.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	pls_lote_ret_trib_prest
	where	nr_seq_lote = nr_seq_lote_ret_pc
	and	(dt_conferencia IS NOT NULL AND dt_conferencia::text <> '');
BEGIN
update	pls_lote_retencao_trib
set	dt_fechamento = clock_timestamp()
where	nr_sequencia = nr_seq_lote_ret_p;

-- Confere os prestadores não conferidos
for r_c01_w in c01( nr_seq_lote_ret_p ) loop
	-- Grava a 'dt_conferencia', 'nm_usuario_conferencia' e 'dt_atualizacao' em cadas registro de prestador do lote de retenção
	CALL pls_conferir_ret_trib_prest(r_c01_w.nr_sequencia, cd_estabelecimento_p, nm_usuario_p);
end loop;

-- Busca a 'Forma retenção INSS e IR' e o evento que deve ser vinculado na movimentação
select	coalesce(max(ie_forma_retencao_inss_ir), 'ME'),
	max(nr_seq_evento_trib_lm),
	max(nr_seq_evento_trib_prov)
into STRICT	ie_forma_retencao_inss_ir_w,
	nr_seq_evento_trib_lm_w,
	nr_seq_evento_trib_prov_w
from	pls_parametro_pagamento
where	cd_estabelecimento = cd_estabelecimento_p;

-- Se a 'Forma retenção INSS e IR' for 'Mensal (ME)' ou 'Lote de retenção mensal (LM)' gera movimentação
if (ie_forma_retencao_inss_ir_w in ('ME','LM')) and (nr_seq_evento_trib_lm_w IS NOT NULL AND nr_seq_evento_trib_lm_w::text <> '') and (nr_seq_evento_trib_prov_w IS NOT NULL AND nr_seq_evento_trib_prov_w::text <> '') then
	for r_C02_w in C02( nr_seq_lote_ret_p ) loop
		-- Gera um lote de evento e as movimentações de cada registro de prestador do lote de retenção
		CALL pls_gerar_movto_ret_trib(r_c02_w.nr_sequencia, nr_seq_evento_trib_lm_w, nr_seq_evento_trib_prov_w, cd_estabelecimento_p, nm_usuario_p);
	end loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_fechar_lote_retencao_trib (nr_seq_lote_ret_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

