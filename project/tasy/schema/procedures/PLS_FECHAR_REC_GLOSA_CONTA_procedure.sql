-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_fechar_rec_glosa_conta ( nr_seq_rec_glosa_conta_p pls_rec_glosa_conta.nr_sequencia%type, nr_seq_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_encaminha_prot_p text default 'N') AS $body$
DECLARE

		
cont_w				integer;
qt_analise_w			integer;
nr_seq_protocolo_w		pls_rec_glosa_protocolo.nr_sequencia%type;
ie_status_w			pls_rec_glosa_protocolo.ie_status%type;
ie_gerar_val_adic_w		pls_parametros_rec_glosa.ie_gerar_val_adic%type;
qt_movimento_w			bigint := 0;
nr_seq_atualizacao_w	bigint;
dt_referencia_w			timestamp;
dt_referencia_month_w		timestamp;
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
ie_conta_com_itens_w	varchar(1);

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		(SELECT	count(1)
		 from	pls_rec_glosa_proc b	
		 where	b.nr_seq_conta_rec = a.nr_sequencia
		 and	coalesce(ie_status, '1') = '1') qt_proc,
		(select	count(1)
		 from	pls_rec_glosa_mat b
		 where	b.nr_seq_conta_rec = a.nr_sequencia
		 and	coalesce(ie_status, '1') = '1') qt_mat
	from	pls_rec_glosa_conta a
	where	a.nr_seq_protocolo = nr_seq_protocolo_p;
	
c_rec_glosa_conta CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_rec_glosa_conta a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p;
	
c_registros_pos CURSOR FOR
	SELECT 	a.nr_sequencia
	from	pls_conta_pos_estabelecido a,
			pls_rec_glosa_conta b
	where	b.nr_sequencia = a.nr_seq_conta_rec
	and		b.nr_seq_protocolo = nr_seq_protocolo_p;

	
c_rec_glosa_conta_w c_rec_glosa_conta%rowtype;

BEGIN

select	coalesce(max(ie_gerar_val_adic), 'L')
into STRICT	ie_gerar_val_adic_w
from	pls_parametros_rec_glosa
where	cd_estabelecimento = cd_estabelecimento_p;

--Limpa eventuais registros de apropriacao de pos-estabelecido gerado com fechamento do recurso. Feito para 

--corrigir situacao onde o cliente conseguiu fazer dois fechamentos consecutivos do rescurso, gerando replicacao

--de pos-estabelecido
CALL pls_atualizar_valor_recurso( nr_seq_rec_glosa_conta_p , 'C', nm_usuario_p);

CALL pls_deletar_coparticipacao(null,null,'S', 'S', nr_seq_rec_glosa_conta_p, nr_seq_protocolo_p, nm_usuario_p,cd_estabelecimento_p);

if (nr_seq_rec_glosa_conta_p IS NOT NULL AND nr_seq_rec_glosa_conta_p::text <> '') then

	delete from pls_conta_pos_estab_aprop
	where	nr_seq_conta_pos_estab in (	SELECT 	nr_sequencia
									from 	pls_conta_pos_estabelecido 
									where 	nr_seq_conta_rec = nr_seq_rec_glosa_conta_p);
									

	delete from pls_conta_pos_estabelecido
	where 	nr_seq_conta_rec = nr_seq_rec_glosa_conta_p;
	
									
elsif (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then 								

	for r_c_registros_pos in  c_registros_pos loop
	
		delete from pls_conta_pos_estab_aprop
		where	nr_seq_conta_pos_estab = r_c_registros_pos.nr_sequencia;
	

		delete from 	pls_conta_pos_estabelecido
		where 	nr_Sequencia = r_c_registros_pos.nr_sequencia;
	
	end loop;

	
end if;

for r_c_contas_recurso_w in c_rec_glosa_conta loop

	CALL pls_atualizar_valor_recurso( r_c_contas_recurso_w.nr_sequencia , 'C', nm_usuario_p);

end loop;
								
select	nextval('pls_atualizacao_contabil_seq')
into STRICT	nr_seq_atualizacao_w
;

if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then

	select 	CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END
	into STRICT	ie_conta_com_itens_w
	from	pls_rec_glosa_conta a
	where	a.nr_seq_protocolo = nr_seq_protocolo_p
	and (SELECT count(1) from pls_rec_glosa_proc where nr_seq_conta_rec = a.nr_sequencia) = 0
	and (select count(1) from pls_rec_glosa_mat where nr_seq_conta_rec = a.nr_sequencia) = 0;
	
	if (ie_conta_com_itens_w = 'N') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(196821,'MSG=' || 'Recurso sem itens informados.');
	end if;
	
	select 	max(a.dt_apresentacao_lote)
	into STRICT	dt_referencia_w
	from	pls_rec_glosa_protocolo	a
	where 	a.nr_sequencia = nr_seq_protocolo_p;

	for r_C01_w in C01 loop	
		if (r_C01_w.qt_proc > 0) or (r_C01_w.qt_mat > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(288562); -- Existem procedimentos/materiais pendentes de analise nesta conta!. Nao e possivel fechar este recurso.
		end if;
		
		update	pls_rec_glosa_conta
		set	ie_status	= '2',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= r_C01_w.nr_sequencia;

		--Inserir os itens de pagamento de recurso de glosa
		CALL pls_inserir_item_pag_rec_glosa(r_C01_w.nr_sequencia,nm_usuario_p);
		--Gera log de alteracao na pasta Historico
		CALL pls_gerar_log_rec_glosa( 'F', null, r_C01_w.nr_sequencia, nm_usuario_p, 'C', null, null);
		-- Gera valores adicionais
		if (ie_gerar_val_adic_w = 'F') then
			CALL pls_gerar_val_adic_rec_glosa( null, r_C01_w.nr_sequencia, cd_estabelecimento_p, nm_usuario_p);
		end if;
	end loop;
	
	select	count(1)
	into STRICT	cont_w
	from	pls_rec_glosa_conta a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p
	and	ie_status		= '1'
	and exists (SELECT 1 from pls_rec_glosa_proc
       			where nr_seq_conta_rec = a.nr_sequencia
       			
union all

       			SELECT 1 from pls_rec_glosa_mat 
       			where nr_seq_conta_rec = a.nr_sequencia )  LIMIT 1;

	if (cont_w = 0) then
		select	count(1)
		into STRICT	qt_analise_w
		from	pls_rec_glosa_conta a,
			pls_analise_conta b
		where	a.nr_seq_analise = b.nr_sequencia
		and	a.nr_seq_protocolo = nr_seq_protocolo_p
		and	b.ie_status = 'T'  LIMIT 1;
		
		if (qt_analise_w > 0) and (ie_encaminha_prot_p = 'S') then
			CALL pls_lib_rec_glosa_prot(nr_seq_protocolo_p, cd_estabelecimento_p, nm_usuario_p);
		else
			update	pls_rec_glosa_protocolo
			set	ie_status	= '5',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao 	= clock_timestamp()
			where	nr_sequencia	= nr_seq_protocolo_p;
		end if;
	end if;
else
	--Se retornar uma quantidade quer dizer que a conta nao tem itens.
	select 	CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END
	into STRICT	ie_conta_com_itens_w
	from	pls_rec_glosa_conta a
	where	a.nr_sequencia = nr_seq_rec_glosa_conta_p
	and (SELECT count(1) from pls_rec_glosa_proc where nr_seq_conta_rec = a.nr_sequencia) = 0
	and (select count(1) from pls_rec_glosa_mat where nr_seq_conta_rec = a.nr_sequencia) = 0;
	
	if (ie_conta_com_itens_w = 'N') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(196821,'MSG=' || 'Recurso sem itens informados.');
	end if;

	select 	max(a.dt_apresentacao_lote)
	into STRICT	dt_referencia_w
	from	pls_rec_glosa_protocolo	a,
		pls_rec_glosa_conta b
	where 	a.nr_sequencia = b.nr_seq_protocolo
	and	b.nr_sequencia = nr_seq_rec_glosa_conta_p;
	
	select	count(*)
	into STRICT	cont_w
	from (SELECT	1
		from	pls_rec_glosa_proc
		where	nr_seq_conta_rec	= nr_seq_rec_glosa_conta_p
		and	coalesce(ie_status, '1')	= '1'
		
union all

		SELECT	1
		from	pls_rec_glosa_mat
		where	nr_seq_conta_rec	= nr_seq_rec_glosa_conta_p
		and	coalesce(ie_status, '1')	= '1') alias3;
		
		
	if (cont_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(288562); -- Existem procedimentos/materiais pendentes de analise nesta conta!
								 -- Nao e possivel fechar este recurso.
	else
		update	pls_rec_glosa_conta
		set	ie_status	= '2',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_rec_glosa_conta_p;
	end if;
	-- Gera valores adicionais
	if (ie_gerar_val_adic_w = 'F') then
		CALL pls_gerar_val_adic_rec_glosa( null, nr_seq_rec_glosa_conta_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	--Inserir os itens de pagamento de recurso de glosa
	CALL pls_inserir_item_pag_rec_glosa(nr_seq_rec_glosa_conta_p,nm_usuario_p);

	select	nr_seq_protocolo
	into STRICT	nr_seq_protocolo_w
	from	pls_rec_glosa_conta
	where	nr_sequencia	= nr_seq_rec_glosa_conta_p;

	select	count(*)
	into STRICT	cont_w
	from	pls_rec_glosa_conta a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_w
	and exists (SELECT 1 from pls_rec_glosa_proc
       			where nr_seq_conta_rec = a.nr_sequencia
       			
union all

       			SELECT 1 from pls_rec_glosa_mat 
       			where nr_seq_conta_rec = a.nr_sequencia ) 
	and	ie_status		= '1';

	if (cont_w = 0) then
		select	count(1)
		into STRICT	qt_analise_w
		from	pls_rec_glosa_conta a,
			pls_analise_conta b
		where	a.nr_seq_analise = b.nr_sequencia
		and	a.nr_sequencia = nr_seq_rec_glosa_conta_p
		and	b.ie_status = 'T';
		
		if (qt_analise_w > 0) and (ie_encaminha_prot_p = 'S')  then
			CALL pls_lib_rec_glosa_prot(nr_seq_protocolo_w, cd_estabelecimento_p, nm_usuario_p);
		else
			update	pls_rec_glosa_protocolo
			set	ie_status	= '5',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao 	= clock_timestamp()
			where	nr_sequencia	= nr_seq_protocolo_w;
		end if;
	end if;

	CALL pls_gerar_log_rec_glosa( 'F', null, nr_seq_rec_glosa_conta_p, nm_usuario_p, 'C', null, null);
end if;	

nr_seq_atualizacao_w := pls_gerar_atualizacao_contabil(	dt_referencia_w, nm_usuario_p, cd_estabelecimento_p, 41, 'G', qt_movimento_w, nr_seq_atualizacao_w);	
				
open c_rec_glosa_conta;
loop
fetch c_rec_glosa_conta into
	c_rec_glosa_conta_w;
EXIT WHEN NOT FOUND; /* apply on c_rec_glosa_conta */
	begin

	qt_movimento_w := ctb_pls_atualizar_rec_glosa(	c_rec_glosa_conta_w.nr_sequencia, nr_seq_atualizacao_w, nm_usuario_p, cd_estabelecimento_p, qt_movimento_w);	
	
	commit;
	
	end;
end loop;
close c_rec_glosa_conta;


nr_seq_atualizacao_w := pls_gerar_atualizacao_contabil(	dt_referencia_w, nm_usuario_p, cd_estabelecimento_p, 41, 'A', qt_movimento_w, nr_seq_atualizacao_w);
				
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_fechar_rec_glosa_conta ( nr_seq_rec_glosa_conta_p pls_rec_glosa_conta.nr_sequencia%type, nr_seq_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_encaminha_prot_p text default 'N') FROM PUBLIC;

