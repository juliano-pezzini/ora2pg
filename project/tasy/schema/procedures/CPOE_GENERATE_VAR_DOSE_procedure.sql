-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_generate_var_dose ( nr_seq_cpoe_p bigint, qt_dose_p bigint, cd_unit_measurement_p text, qt_days_p bigint, dt_start_p timestamp, ie_awaiting_exam_p text, nm_usuario_p text) AS $body$
DECLARE


dt_dose_w	cpoe_variable_dose.dt_dose%type;
dt_dose_w_existed timestamp;
qt_variable_dose_w	bigint;

	procedure generate_record(	qt_dose_rec_p		bigint,
					dt_dose_rec_p		timestamp,
					cd_unit_meas_rec_p	text,
					nr_seq_cpoe_rec_p	bigint,
					ie_awaiting_exam_rec_p	text,					
					nm_usuario_rec_p	text) is
	
	nr_seq_item_w	cpoe_variable_dose.nr_sequencia%type;
	
	
BEGIN
	select	nextval('cpoe_variable_dose_seq')
	into STRICT	nr_seq_item_w
	;
	
	insert into cpoe_variable_dose(
		nr_sequencia,
		cd_unidade_medida,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		qt_dose_adm,
		nr_seq_mat_cpoe,
		dt_dose,
		ie_awaiting_result,
		ie_situacao)
	values (
		nr_seq_item_w,
		cd_unit_meas_rec_p,
		clock_timestamp(),
		nm_usuario_rec_p,
		clock_timestamp(),
		nm_usuario_rec_p,
		qt_dose_rec_p,
		nr_seq_cpoe_rec_p,
		dt_dose_rec_p,
		ie_awaiting_exam_rec_p,
		'A'
		);
	

	end;

begin

if (coalesce(nr_seq_cpoe_p, 0) > 0) then
	dt_dose_w := dt_start_p;

	select count(1)
	into STRICT qt_variable_dose_w
	from cpoe_variable_dose
	where nr_seq_mat_cpoe = nr_seq_cpoe_p;
	
	if (coalesce(qt_variable_dose_w, 0) > 0) then
		select max(dt_dose)
		into STRICT dt_dose_w_existed
		from cpoe_variable_dose
		where nr_seq_mat_cpoe = nr_seq_cpoe_p;
		
		if (trunc(dt_dose_w_existed) >= trunc(dt_start_p)) then
			if (trunc(dt_dose_w_existed) < trunc(clock_timestamp())) then
				dt_dose_w := clock_timestamp();
			else
				dt_dose_w := dt_dose_w_existed +1;
			end if;
		end if;
	end if;

	if (coalesce(qt_days_p, 0) > 0) then

		for i in 1..qt_days_p loop
			begin
			generate_record(qt_dose_p, dt_dose_w, cd_unit_measurement_p, nr_seq_cpoe_p, 'N', nm_usuario_p);
			dt_dose_w := dt_dose_w + 1;
			end;
		end loop;

	end if;

	if (coalesce(ie_awaiting_exam_p,'N') = 'S') then
		generate_record(null, dt_dose_w, null, nr_seq_cpoe_p, 'S', nm_usuario_p);
	end if;

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_generate_var_dose ( nr_seq_cpoe_p bigint, qt_dose_p bigint, cd_unit_measurement_p text, qt_days_p bigint, dt_start_p timestamp, ie_awaiting_exam_p text, nm_usuario_p text) FROM PUBLIC;

