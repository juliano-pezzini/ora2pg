-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_obter_lote_externo ( nr_seq_exame_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_lote_p INOUT bigint, cd_setor_coleta_p bigint DEFAULT NULL, nr_prescricao_p bigint DEFAULT NULL, nr_seq_prescr_p bigint DEFAULT NULL, cd_material_exame_p text DEFAULT NULL) AS $body$
DECLARE


    cd_cgc_externo_w             varchar(14);
    nr_seq_lote_w                bigint := NULL;
    ie_atual_desc_lote_w         varchar(1);
    ie_utilizar_setor_coleta_w   varchar(1);
    cd_cgc_ext_param_w           exame_laboratorio.cd_cgc_externo%TYPE;
    cd_setor_coleta_w            bigint;
    nr_atendimento_w             atendimento_paciente.nr_atendimento%TYPE;
    cd_convenio_w                convenio.cd_convenio%TYPE;
    nr_seq_material_w            exame_laboratorio_externo.nr_seq_material%TYPE;

    IE_TRATAMENTO_W             exame_laboratorio_externo.ie_tratamento%type;
    cd_pessoa_fisica_w          prescr_medica.cd_pessoa_fisica%type;


BEGIN
    cd_cgc_ext_param_w := obter_param_usuario(718, 34, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_cgc_ext_param_w);
    SELECT
        coalesce(MAX(cd_cgc_externo), NULL)
    INTO STRICT cd_cgc_externo_w
    FROM
        exame_laboratorio
    WHERE
        nr_seq_exame = nr_seq_exame_p
        AND cd_cgc_externo != coalesce(cd_cgc_ext_param_w, 0);

    IF ( coalesce(cd_cgc_externo_w::text, '') = '' ) THEN
        SELECT
            MAX(nr_atendimento),
            MAX(cd_pessoa_fisica)
        INTO STRICT nr_atendimento_w,
            cd_pessoa_fisica_w
        FROM
            prescr_medica
        WHERE
            nr_prescricao = nr_prescricao_p;

        SELECT
            coalesce(MAX(c.cd_convenio), 0)
        INTO STRICT cd_convenio_w
        FROM
            atend_categoria_convenio c
        WHERE
            c.nr_atendimento = nr_atendimento_w
            AND c.nr_seq_interno = (
                SELECT
                    coalesce(MAX(nr_seq_interno), 0)
                FROM
                    atend_categoria_convenio z
                WHERE
                    z.nr_atendimento = c.nr_atendimento
                    AND z.dt_inicio_vigencia = (
                        SELECT
                            MAX(x.dt_inicio_vigencia)
                        FROM
                            atend_categoria_convenio x
                        WHERE
                            x.nr_atendimento = c.nr_atendimento
                    )
            );

        SELECT
            coalesce(MAX(nr_sequencia), 0)
        INTO STRICT nr_seq_material_w
        FROM
            material_exame_lab
        WHERE
            cd_material_exame = cd_material_exame_p;

        SELECT
             MAX(cd_cgc_externo),
             MAX(ie_tratamento)
        INTO STRICT cd_cgc_externo_w,
             ie_tratamento_W
        FROM
            (
                SELECT
                    cd_cgc_externo,
                    cd_estabelecimento,
                     ie_tratamento
                FROM
                    exame_laboratorio_externo
                WHERE
                    nr_seq_exame = nr_seq_exame_p
                    AND coalesce(cd_convenio, cd_convenio_w) = cd_convenio_w
                    AND coalesce(nr_seq_material, nr_seq_material_w) = nr_seq_material_w
                    and coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
                    and ((coalesce(ie_tratamento::text, '') = '' ) or (obter_se_paciente_tratamento(cd_pessoa_fisica_w,ie_tratamento)='S'))
                    AND cd_cgc_externo != coalesce(cd_cgc_ext_param_w, 0)
                ORDER BY
                    coalesce(cd_convenio, 9999999999),
                    coalesce(ie_prioridade, 1)
            ) alias13 LIMIT 1;

    END IF;



    ie_atual_desc_lote_w := obter_param_usuario(718, 6, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atual_desc_lote_w);
    ie_utilizar_setor_coleta_w := obter_param_usuario(718, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utilizar_setor_coleta_w);
    IF (cd_cgc_externo_w IS NOT NULL AND cd_cgc_externo_w::text <> '') THEN
        IF ( ie_utilizar_setor_coleta_w = 'S'  AND cd_setor_coleta_p IS NOT NULL AND cd_setor_coleta_p::text <> '') THEN
            SELECT
                coalesce(MAX(nr_sequencia), 0)
            INTO STRICT nr_seq_lote_w
            FROM
                lab_lote_externo
            WHERE
                cd_cgc = cd_cgc_externo_w
                AND lab_obter_regra_estab_ext(cd_estabelecimento, cd_estabelecimento_p, 0) = 'S'
                AND coalesce(cd_setor_atendimento, cd_setor_coleta_p) = cd_setor_coleta_p
                AND coalesce(dt_envio::text, '') = '';

        ELSE
            SELECT
                coalesce(MAX(nr_sequencia), 0)
            INTO STRICT nr_seq_lote_w
            FROM
                lab_lote_externo
            WHERE
                cd_cgc = cd_cgc_externo_w
                AND lab_obter_regra_estab_ext(cd_estabelecimento, cd_estabelecimento_p, 0) = 'S'
                AND coalesce(dt_envio::text, '') = '';

        END IF;

        IF ( nr_seq_lote_w = 0 ) THEN
            SELECT
                nextval('lab_lote_externo_seq')
            INTO STRICT nr_seq_lote_w
;

            IF ( ie_utilizar_setor_coleta_w = 'S' ) THEN
                cd_setor_coleta_w := cd_setor_coleta_p;
            ELSE
                cd_setor_coleta_w := NULL;
            END IF;

            INSERT INTO lab_lote_externo(
                nr_sequencia,
                cd_cgc,
                dt_lote,
                dt_retorno_prev,
                dt_atualizacao,
                nm_usuario,
                dt_envio,
                dt_retorno,
                cd_estabelecimento,
                ds_arquivo,
                cd_setor_atendimento
            ) VALUES (
                nr_seq_lote_w,
                cd_cgc_externo_w,
                clock_timestamp(),
                clock_timestamp(),
                clock_timestamp(),
                nm_usuario_p,
                NULL,
                NULL,
                cd_estabelecimento_p,
                CASE WHEN ie_atual_desc_lote_w='S' THEN  TO_CHAR(clock_timestamp(), 'ddmmyyyy')  ELSE NULL END ,
                cd_setor_coleta_w
            );

        END IF;

    END IF;

    nr_seq_lote_p := nr_seq_lote_w;
    IF (cd_cgc_ext_param_w IS NOT NULL AND cd_cgc_ext_param_w::text <> '') THEN
        nr_seq_lote_w := 0;
        cd_cgc_externo_w := NULL;
        SELECT
            coalesce(MAX(cd_cgc_externo), NULL)
        INTO STRICT cd_cgc_externo_w
        FROM
            exame_laboratorio
        WHERE
            nr_seq_exame = nr_seq_exame_p
            AND cd_cgc_externo = cd_cgc_ext_param_w;

        IF ( coalesce(cd_cgc_externo_w::text, '') = '' ) THEN
            SELECT
                MAX(nr_atendimento)
            INTO STRICT nr_atendimento_w
            FROM
                prescr_medica
            WHERE
                nr_prescricao = nr_prescricao_p;

            SELECT
                coalesce(MAX(c.cd_convenio), 0)
            INTO STRICT cd_convenio_w
            FROM
                atend_categoria_convenio c
            WHERE
                c.nr_atendimento = nr_atendimento_w
                AND c.nr_seq_interno = (
                    SELECT
                        coalesce(MAX(nr_seq_interno), 0)
                    FROM
                        atend_categoria_convenio z
                    WHERE
                        z.nr_atendimento = c.nr_atendimento
                        AND z.dt_inicio_vigencia = (
                            SELECT
                                MAX(x.dt_inicio_vigencia)
                            FROM
                                atend_categoria_convenio x
                            WHERE
                                x.nr_atendimento = c.nr_atendimento
                        )
                );

            SELECT
                coalesce(MAX(nr_sequencia), 0)
            INTO STRICT nr_seq_material_w
            FROM
                material_exame_lab
            WHERE
                cd_material_exame = cd_material_exame_p;

            SELECT
                MAX(cd_cgc_externo)
            INTO STRICT cd_cgc_externo_w
            FROM (
                    SELECT
                        cd_cgc_externo
                    FROM
                        exame_laboratorio_externo
                    WHERE
                        nr_seq_exame = nr_seq_exame_p
                        AND coalesce(cd_convenio, cd_convenio_w) = cd_convenio_w
                        AND coalesce(nr_seq_material, nr_seq_material_w) = nr_seq_material_w
                        AND cd_cgc_externo = cd_cgc_ext_param_w
                    ORDER BY
                        coalesce(cd_convenio, 9999999999),
                        coalesce(ie_prioridade, 1)
                ) alias5 LIMIT 1;

        END IF;

        IF (cd_cgc_externo_w IS NOT NULL AND cd_cgc_externo_w::text <> '') THEN
            IF ( ie_utilizar_setor_coleta_w = 'S'  AND cd_setor_coleta_p IS NOT NULL AND cd_setor_coleta_p::text <> '') THEN
                SELECT
                    coalesce(MAX(nr_sequencia), 0)
                INTO STRICT nr_seq_lote_w
                FROM
                    lab_lote_externo
                WHERE
                    cd_cgc = cd_cgc_externo_w
                    AND lab_obter_regra_estab_ext(cd_estabelecimento, cd_estabelecimento_p, 0) = 'S'
                    AND coalesce(cd_setor_atendimento, cd_setor_coleta_p) = cd_setor_coleta_p
                    AND coalesce(dt_envio::text, '') = '';

            ELSE
                SELECT
                    coalesce(MAX(nr_sequencia), 0)
                INTO STRICT nr_seq_lote_w
                FROM
                    lab_lote_externo
                WHERE
                    cd_cgc = cd_cgc_externo_w
                    AND lab_obter_regra_estab_ext(cd_estabelecimento, cd_estabelecimento_p, 0) = 'S'
                    AND coalesce(dt_envio::text, '') = '';

            END IF;

            IF ( nr_seq_lote_w = 0 ) THEN
                SELECT
                    nextval('lab_lote_externo_seq')
                INTO STRICT nr_seq_lote_w
;

                IF ( ie_utilizar_setor_coleta_w = 'S' ) THEN
                    cd_setor_coleta_w := cd_setor_coleta_p;
                ELSE
                    cd_setor_coleta_w := NULL;
                END IF;

                INSERT INTO lab_lote_externo(
                    nr_sequencia,
                    cd_cgc,
                    dt_lote,
                    dt_retorno_prev,
                    dt_atualizacao,
                    nm_usuario,
                    dt_envio,
                    dt_retorno,
                    cd_estabelecimento,
                    ds_arquivo,
                    cd_setor_atendimento
                ) VALUES (
                    nr_seq_lote_w,
                    cd_cgc_externo_w,
                    clock_timestamp(),
                    clock_timestamp(),
                    clock_timestamp(),
                    nm_usuario_p,
                    NULL,
                    NULL,
                    cd_estabelecimento_p,
                    CASE WHEN ie_atual_desc_lote_w='S' THEN  TO_CHAR(clock_timestamp(), 'ddmmyyyy')  ELSE NULL END ,
                    cd_setor_coleta_w
                );

            END IF;

            INSERT INTO lab_lote_item(
                nr_sequencia,
                nr_seq_lote_externo,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_prescricao,
                nr_seq_prescr
            ) VALUES (
                nextval('lab_lote_item_seq'),
                nr_seq_lote_w,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_prescricao_p,
                nr_seq_prescr_p
            );

        END IF;

    END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_obter_lote_externo ( nr_seq_exame_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_lote_p INOUT bigint, cd_setor_coleta_p bigint DEFAULT NULL, nr_prescricao_p bigint DEFAULT NULL, nr_seq_prescr_p bigint DEFAULT NULL, cd_material_exame_p text DEFAULT NULL) FROM PUBLIC;

