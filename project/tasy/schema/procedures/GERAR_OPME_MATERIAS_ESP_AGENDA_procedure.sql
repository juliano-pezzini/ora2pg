-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_opme_materias_esp_agenda ( nr_seq_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE



ie_possui_prescricao_w		varchar(1);
nr_cirurgia_w			bigint;
nr_prescricao_w			bigint;
ie_tipo_pessoa_w			smallint;
cd_medico_cirurgiao_w		varchar(10);
cd_pessoa_fisica_w		varchar(10);
cd_material_w			bigint;
qt_material_w			bigint;
nr_seq_prescr_material_w		integer;
ie_origem_inf_w			varchar(1);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_setor_atendimento_w		bigint;
ie_forma_adep_w		    	varchar(10);
cd_unidade_medida_w		varchar(5);
cd_intervalo_w			varchar(7);
ie_gerado_w			varchar(1);
cd_cgc_w			varchar(14);
ie_adep_w		    varchar(10);
nr_atendimento_w			bigint;
ie_gera_opme_w			varchar(1);
nr_seq_autorizacao_w	bigint;
ie_status_opme_w		varchar(255);
nr_seq_opme_w			bigint;
ie_fat_direto_w			varchar(5);
cd_perfil_w			integer;
cd_setor_atendimento_ww		integer;

c01 CURSOR FOR
	SELECT	a.cd_material,
		a.qt_material,
		a.ie_origem_inf,
		a.cd_cgc,
		a.nr_sequencia,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30),
		obter_se_fatur_direto_opme(a.nr_sequencia)
	from	agenda_pac_opme a
	where	a.nr_seq_agenda = nr_seq_agenda_p
	and 	a.ie_origem_inf = 'I'
	and 	((coalesce(ie_status_opme_w,'N') = 'N') or (obter_se_contido_char(ie_autorizado,ie_status_opme_w) = 'S'))
	and	((ie_gera_opme_w = 'S') or (ie_gera_opme_w = 'I' and a.ie_integracao = 'S') or (ie_gera_opme_w = 'E' and coalesce(a.ie_integracao, 'N') = 'N'))
	and	not exists (	SELECT	1
				from	prescr_medica b,
					prescr_material c
				where	b.nr_prescricao = c.nr_prescricao
				and	b.nr_seq_agenda = a.nr_seq_agenda
				and	c.cd_material   = a.cd_material);


BEGIN
cd_perfil_w	:= obter_perfil_ativo;

if (nr_seq_agenda_p > 0) then
	begin

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_gerado_w
	from 	prescr_medica
	where	nr_seq_agenda 			= nr_seq_agenda_p
	and	ie_tipo_prescr_cirur 		= 1;

	if (ie_gerado_w = 'N') then
		begin
		ie_forma_adep_w := Obter_Param_Usuario(924, 246, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_forma_adep_w);
		ie_status_opme_w := Obter_Param_Usuario(871, 558, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_status_opme_w);
		ie_gera_opme_w := Obter_Param_Usuario(900, 336, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_gera_opme_w);
		cd_setor_atendimento_ww := obter_param_usuario(900, 548, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, cd_setor_atendimento_ww);
		
		open c01;
		loop
		fetch c01 into
			cd_material_w,
			qt_material_w,
			ie_origem_inf_w,
			cd_cgc_w,
			nr_seq_opme_w,
			cd_unidade_medida_w,
			ie_fat_direto_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			if (ie_gerado_w = 'N') then
				select	coalesce(nr_atendimento,0),
					cd_convenio,
					cd_categoria,
					cd_medico,
					cd_pessoa_fisica,
					nr_cirurgia
				into STRICT	nr_atendimento_w,
					cd_convenio_w,
					cd_categoria_w,
					cd_medico_cirurgiao_w,
					cd_pessoa_fisica_w,
					nr_cirurgia_w
				from	agenda_paciente
				where	nr_sequencia = nr_seq_agenda_p;
				
				select	nextval('prescr_medica_seq')
				into STRICT	nr_prescricao_w
				;

				select	coalesce(max(b.ie_tipo_pessoa),'1')
				into STRICT	ie_tipo_pessoa_w
				from	pessoa_fisica b,
					usuario a
				where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
				and	a.nm_usuario		= nm_usuario_p;

				if (nr_atendimento_w > 0) then
					cd_setor_atendimento_w	:=	obter_setor_atendimento(nr_atendimento_w);
				end if;	

				if (ie_forma_adep_w = 'DS') then
					select	coalesce(max(ie_adep),'N')
					into STRICT	ie_adep_w
					from	setor_atendimento
					where	cd_setor_atendimento = cd_setor_atendimento_w;
				elsif (ie_forma_adep_w = 'NV') then
					ie_adep_w   := 'N';
				elsif (ie_forma_adep_w = 'PV') then
					ie_adep_w := 'S';
				elsif (ie_forma_adep_w = 'PNV') then
					ie_adep_w := 'N';
				else
					ie_adep_w := 'S';
				end if;

				insert	into prescr_medica(
					dt_prescricao,
					cd_medico,
					cd_pessoa_fisica,
					cd_estabelecimento,
					nm_usuario_original,
					nr_horas_validade,
					nr_prescricao,
					nr_cirurgia,
					ie_recem_nato,
					ie_origem_inf,
					dt_primeiro_horario,
					nm_usuario,
					dt_atualizacao,
					cd_prescritor,
					ie_tipo_prescr_cirur,
					nr_seq_agenda,
					nr_atendimento,
					ie_adep,
					cd_setor_atendimento)
				values (
					clock_timestamp(),
					cd_medico_cirurgiao_w,
					cd_pessoa_fisica_w,
					cd_estabelecimento_p,
					nm_usuario_p,
					24,
					nr_prescricao_w,
					nr_cirurgia_w,
					'N',
					ie_tipo_pessoa_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					1,
					nr_seq_agenda_p,
					CASE WHEN nr_atendimento_w=0 THEN null  ELSE nr_atendimento_w END ,
					ie_adep_w,
					cd_setor_atendimento_ww);
				ie_gerado_w := 'S';
				
				if (nr_cirurgia_w IS NOT NULL AND nr_cirurgia_w::text <> '') then
					update	cirurgia
					set		NR_PRESCRICAO_ESPEC = nr_prescricao_w
					where	nr_cirurgia			= nr_cirurgia_w;
				end if;
				
			end if;		
			
			select 	max(cd_intervalo)
			into STRICT	cd_intervalo_w
			from 	intervalo_prescricao
			where 	ie_agora = 'S';
			
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_seq_prescr_material_w
			from	prescr_material
			where	nr_prescricao = nr_prescricao_w;

			insert into prescr_material(nr_prescricao,
				nr_sequencia,
				ie_origem_inf,
				cd_material,
				cd_unidade_medida,
				qt_unitaria,
				qt_material,
				cd_motivo_baixa,
				ie_status_cirurgia,
				cd_intervalo,
				dt_atualizacao,
				nm_usuario,
				cd_fornec_consignado,
				qt_dose,
				nr_ocorrencia,
				qt_total_dispensar,
				ds_horarios,
				dt_baixa,
				ie_utiliza_kit,
				cd_unidade_medida_dose,
				qt_conversao_dose,
				ie_urgencia,
				nr_sequencia_solucao,
				nr_sequencia_proc,
				qt_solucao,
				hr_dose_especial,
				qt_dose_especial,
				ds_dose_diferenciada,
				ie_medicacao_paciente,
				nr_sequencia_diluicao)
			values (nr_prescricao_w,
				nr_seq_prescr_material_w,
				ie_origem_inf_w,
				cd_material_w,
				cd_unidade_medida_w,
				qt_material_w,
				qt_material_w,
				0,
				'GI',
				cd_intervalo_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_cgc_w,
				qt_material_w,
				1,
				qt_material_w,
				null,
				null,
				'N',
				null,
				null,
				'N',
				null,
				null,
				null,
				null,
				null,
				null,
				'N',
				null);
				
					
				update 	autorizacao_cirurgia
				set 	nr_prescricao 	= nr_prescricao_w,
					nm_usuario	  = nm_usuario_p,
					dt_atualizacao	  = clock_timestamp()
				where 	coalesce(nr_prescricao::text, '') = ''
				and	nr_seq_agenda = nr_seq_agenda_p
				and	exists (SELECT	1
						from 	material_autor_cirurgia x 
						where	x.nr_seq_opme = nr_seq_opme_w);

						
				update 	autorizacao_convenio
				set 	nr_prescricao 	= nr_prescricao_w,
					nm_usuario	  = nm_usuario_p,
					dt_atualizacao	  = clock_timestamp()
				where 	coalesce(nr_prescricao::text, '') = ''
				and	nr_seq_agenda = nr_seq_agenda_p
				and	exists (	SELECT	1
						from 	material_autorizado x 
						where	x.nr_seq_opme = nr_seq_opme_w);

				update	material_autorizado
				set	nr_seq_prescricao = nr_seq_prescr_material_w,
					nr_prescricao     = nr_prescricao_w,
					nm_usuario	  = nm_usuario_p,
					dt_atualizacao	  = clock_timestamp()
				where	nr_seq_opme       = nr_seq_opme_w
				and	cd_material	  = cd_material_w
				and	coalesce(nr_prescricao::text, '') = '';
			
			end;
		end loop;
		close c01;
		end;
	else
		begin
		select	max(nr_prescricao)
		into STRICT	nr_prescricao_w
		from 	prescr_medica
		where	nr_seq_agenda 		= nr_seq_agenda_p
		and	ie_tipo_prescr_cirur 	= 1;
		
		
		
		select	max(nr_cirurgia)
		into STRICT	nr_cirurgia_w
		from	agenda_paciente
		where	nr_sequencia = nr_seq_agenda_p;
		
		if (nr_cirurgia_w IS NOT NULL AND nr_cirurgia_w::text <> '') then
			update	cirurgia
			set		NR_PRESCRICAO_ESPEC = nr_prescricao_w
			where	nr_cirurgia			= nr_cirurgia_w;
		end if;
		
		
		
		open c01;
		loop
		fetch c01 into
			cd_material_w,
			qt_material_w,
			ie_origem_inf_w,
			cd_cgc_w,
			nr_seq_opme_w,
			cd_unidade_medida_w,
			ie_fat_direto_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_seq_prescr_material_w
			from	prescr_material
			where	nr_prescricao = nr_prescricao_w;

			select 	max(cd_intervalo)
			into STRICT	cd_intervalo_w
			from 	intervalo_prescricao
			where 	ie_agora = 'S';

			insert into prescr_material(nr_prescricao,
				nr_sequencia,
				ie_origem_inf,
				cd_material,
				cd_unidade_medida,
				qt_unitaria,
				qt_material,
				cd_motivo_baixa,
				ie_status_cirurgia,
				cd_intervalo,
				dt_atualizacao,
				nm_usuario,
				cd_fornec_consignado,
				qt_dose,
				nr_ocorrencia,
				qt_total_dispensar,
				ds_horarios,
				dt_baixa,
				ie_utiliza_kit,
				cd_unidade_medida_dose,
				qt_conversao_dose,
				ie_urgencia,
				nr_sequencia_solucao,
				nr_sequencia_proc,
				qt_solucao,
				hr_dose_especial,
				qt_dose_especial,
				ds_dose_diferenciada,
				ie_medicacao_paciente,
				nr_sequencia_diluicao)
			values (nr_prescricao_w,
				nr_seq_prescr_material_w,
				ie_origem_inf_w,
				cd_material_w,
				cd_unidade_medida_w,
				qt_material_w,
				qt_material_w,
				0,
				'GI',
				cd_intervalo_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_cgc_w,
				qt_material_w,
				1,
				qt_material_w,
				null,
				null,
				'N',
				null,
				null,
				'N',
				null,
				null,
				null,
				null,
				null,
				null,
				'N',
				null);
				
	
					
				update 	autorizacao_cirurgia
				set 	nr_prescricao 	= nr_prescricao_w,
					nm_usuario	  = nm_usuario_p,
					dt_atualizacao	  = clock_timestamp()
				where 	coalesce(nr_prescricao::text, '') = ''
				and	nr_seq_agenda = nr_seq_agenda_p
				and	exists (	SELECT	1
						from 	material_autor_cirurgia x 
						where	x.nr_seq_opme = nr_seq_opme_w);

						
				update 	autorizacao_convenio
				set 	nr_prescricao 	= nr_prescricao_w,
					nm_usuario	  = nm_usuario_p,
					dt_atualizacao	  = clock_timestamp()
				where 	coalesce(nr_prescricao::text, '') = ''
				and	nr_seq_agenda = nr_seq_agenda_p
				and	exists (	SELECT	1
						from 	material_autorizado x 
						where	x.nr_seq_opme = nr_seq_opme_w);

				update	material_autorizado
				set	nr_seq_prescricao = nr_seq_prescr_material_w,
					nr_prescricao     = nr_prescricao_w,
					nm_usuario	  = nm_usuario_p,
					dt_atualizacao	  = clock_timestamp()
				where	nr_seq_opme       = nr_seq_opme_w
				and	cd_material	  = cd_material_w
				and	coalesce(nr_prescricao::text, '') = '';
			end;
		end loop;
		close c01;
		end;
	end if;
	end;
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_opme_materias_esp_agenda ( nr_seq_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

