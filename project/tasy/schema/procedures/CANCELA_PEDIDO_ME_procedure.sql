-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancela_pedido_me ( nr_ordem_compra_p text, nm_usuario_p text) AS $body$
DECLARE

 
qt_existe_w			integer;
ie_erro_w			varchar(1) := 'N';
nr_seq_pedido_w			bigint;
nr_seq_item_w			bigint;
codigoproduto_w			varchar(50);
quant_w				double precision;
encerrado_w			bigint;
data_w				timestamp;
quantidade_w			double precision;
filial_w			varchar(50);
cd_estabelecimento_w		smallint;
cd_material_w			integer;
nr_item_oci_w			integer;
nr_seq_entrega_w		bigint;
dt_prevista_entrega_w		timestamp;
qt_prevista_entrega_w		double precision;
nr_cot_compra_w			bigint;
nr_solic_compra_w		bigint;
numeropedidome_w		varchar(20);
nr_ordem_compra_w		ordem_compra.nr_ordem_compra%type;

c01 CURSOR FOR 
	SELECT	nr_sequencia, 
		codigoproduto, 
		quantidade, 
		encerrado 
	from	w_me_cancela_pedido_itens 
	where	nr_seq_pedido = nr_seq_pedido_w;

c02 CURSOR FOR 
	SELECT	data, 
		quantidade 
	from	w_me_cancela_ped_itens_ent 
	where	nr_seq_item = nr_seq_item_w;

c03 CURSOR FOR 
	SELECT	nr_sequencia, 
		dt_prevista_entrega, 
		qt_prevista_entrega 
	from	ordem_compra_item_entrega 
	where	nr_ordem_compra = substr(nr_ordem_compra_p||'@',1,position('@'  nr_ordem_compra_p||'@')-1) 
	and	nr_item_oci = nr_item_oci_w;
	--and	trunc(dt_prevista_entrega) = trunc(data_w); 
BEGIN 
 
select	substr(nr_ordem_compra_p||'@',1,position('@' in nr_ordem_compra_p||'@')-1) 
into STRICT	nr_ordem_compra_w
;
 
select	count(*) 
into STRICT	qt_existe_w 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_compra_w;
 
if (qt_existe_w = 0) then 
	ie_erro_w := 'S';
end if;
 
if (ie_erro_w = 'N') then 
	 
	select	max(nr_sequencia), 
		max(filial), 
		max(numeropedidome) 
	into STRICT	nr_seq_pedido_w, 
		filial_w, 
		numeropedidome_w 
	from	w_me_cancela_pedido 
	where	somente_numero(numeropedidowpd) = nr_ordem_compra_w 
	and	ie_lido = 'N';
	 
	select	obter_conversao_interna_int(null,'ESTABELECIMENTO','CD_ESTABELECIMENTO',filial_w,'ME') 
	into STRICT	cd_estabelecimento_w 
	;
	 
	open c01;
	loop 
	fetch c01 into	 
		nr_seq_item_w, 
		codigoproduto_w, 
		quant_w, 
		encerrado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		select	coalesce(obter_cod_int_material(codigoproduto_w,'ME',cd_estabelecimento_w),0) 
		into STRICT	cd_material_w 
		;
		 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	material 
		where	cd_material = cd_material_w;
		 
		if (qt_existe_w = 0) then 
			ie_erro_w := 'S';
			CALL inserir_log_me('OC', nr_ordem_compra_w, '112', 'ROC', WHEB_MENSAGEM_PCK.get_texto(297870,'CODIGOPRODUTO_W='||codigoproduto_w), '000008', nm_usuario_p, numeropedidome_w,nr_seq_pedido_w);
		end if;
		 
		 
		 
		select	coalesce(max(nr_item_oci),0) 
		into STRICT	nr_item_oci_w 
		from	ordem_compra_item 
		where	nr_ordem_compra = nr_ordem_compra_w 
		and	cd_material = cd_material_w;
		 
		if (coalesce(encerrado_w,0) = 0) then 
		 
			open c02;
			loop 
			fetch c02 into	 
				data_w, 
				quantidade_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin 
				open c03;
				loop 
				fetch c03 into	 
					nr_seq_entrega_w, 
					dt_prevista_entrega_w, 
					qt_prevista_entrega_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					begin 
					if (quantidade_w >= qt_prevista_entrega_w) then 
					 
						update	ordem_compra_item_entrega 
						set	dt_cancelamento = clock_timestamp(), 
							ds_observacao = WHEB_MENSAGEM_PCK.get_texto(297873) 
						where	nr_sequencia = nr_seq_entrega_w;
					 
					else 
						 
						update	ordem_compra_item_entrega 
						set	dt_cancelamento = clock_timestamp(), 
							qt_prevista_entrega = quantidade_w, 
							ds_observacao = WHEB_MENSAGEM_PCK.get_texto(297873) 
						where	nr_sequencia = nr_seq_entrega_w;
						 
						qt_prevista_entrega_w := qt_prevista_entrega_w - quantidade_w;
						 
						insert into ordem_compra_item_entrega( 
							nr_sequencia, 
							nr_ordem_compra, 
							nr_item_oci, 
							dt_prevista_entrega, 
							qt_prevista_entrega, 
							dt_atualizacao, 
							nm_usuario, 
							dt_entrega_original, 
							dt_entrega_limite) 
						values (	nextval('ordem_compra_item_entrega_seq'), 
							nr_ordem_compra_w, 
							nr_item_oci_w, 
							dt_prevista_entrega_w, 
							qt_prevista_entrega_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							dt_prevista_entrega_w, 
							dt_prevista_entrega_w);
					 
					end if;
					 
					end;
				end loop;
				close c03;
				 
				end;
			end loop;
			close c02;
		 
		else 
			CALL inserir_log_me('OC', nr_ordem_compra_w, 'ERRO', 'ROC', WHEB_MENSAGEM_PCK.get_texto(297876,'NR_ORDEM_COMPRA_P='||nr_ordem_compra_w), '13', nm_usuario_p,'');
			select	nr_sequencia 
			into STRICT	nr_seq_entrega_w 
			from	ordem_compra_item_entrega 
			where	nr_ordem_compra = nr_ordem_compra_w 
			and	nr_item_oci = nr_item_oci_w;
	 
			SELECT * FROM cancelar_entrega_item(			 
				nr_ordem_compra_w, NR_ITEM_OCI_w, nr_seq_entrega_w, 'N', 'N', 'N', NM_USUARIO_P, WHEB_MENSAGEM_PCK.get_texto(297877), 7, 'S', 'S', CD_MATERIAL_w, 'N', nr_cot_compra_w, nr_solic_compra_w) INTO STRICT nr_cot_compra_w, nr_solic_compra_w;
			CALL inserir_log_me('OC', nr_ordem_compra_w, 'ERRO', 'ROC', WHEB_MENSAGEM_PCK.get_texto(297878,'NR_ORDEM_COMPRA_P='||nr_ordem_compra_w), '14', nm_usuario_p,'');
		end if;
		 
		end;
	end loop;
	close c01;
	 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	ordem_compra_item_entrega 
	where	nr_ordem_compra	= nr_ordem_compra_w 
	and	coalesce(qt_prevista_entrega,0) > coalesce(qt_real_entrega,0) 
	and	coalesce(dt_cancelamento::text, '') = '' 
	and	coalesce(dt_baixa::text, '') = '';
	 
	if (qt_existe_w = 0) then 
		 
		update	ordem_compra 
		set	dt_baixa = clock_timestamp(), 
			nr_seq_motivo_cancel = 7 
		where 	nr_ordem_compra = nr_ordem_compra_w;
		 
	end if;
	 
	update	w_me_cancela_pedido 
	set	ie_lido = 'S' 
	where	somente_numero(numeropedidowpd) = nr_ordem_compra_w;
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancela_pedido_me ( nr_ordem_compra_p text, nm_usuario_p text) FROM PUBLIC;

