-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_solic_compra_item_ressup ( nr_solic_compra_p bigint, cd_material_p bigint, ie_unidade_p text, qt_comprar_p bigint, dt_entrega_p timestamp, nm_usuario_p text, atualiza_valor_previsto_p text, qt_dias_obter_compra_p bigint, ds_observacao_p text, cd_cgc_p text default null, ie_com_contrato_p text default null) AS $body$
DECLARE


nr_item_w			bigint;
cd_unidade_w			varchar(30);
cd_unidade_compra_w		varchar(30);
cd_unidade_estoque_w		varchar(30);
cd_unidade_consumo_w		varchar(30);
cd_estabelecimento_w		smallint;
nr_seq_nf_w			bigint;
vl_ultima_compra_w		solic_compra_item.vl_unit_previsto%type := 0;
ds_observacao_w			varchar(255);
cd_local_estoque_w		bigint;
qt_existe_w			bigint;
qt_soma_entrega_solicitada_w	double precision;
qt_entrega_solicitada_w		double precision;
dt_entrega_solicitada_w		timestamp;
ie_prog_entrega_ressup_w		varchar(1);
nr_item_solic_compra_entr_w		bigint;
cd_un_med_compra_mat_w		varchar(30);
vl_custo_total_w			double precision;
vl_estoque_total_w			double precision;
qt_saldo_disp_estoque_w		double precision;
ie_saldo_estoque_w		varchar(15);
qt_dias_estoque_w			double precision;
cd_perfil_w			bigint;
ie_valor_previsto_w		varchar(15);
qt_conv_compra_est_orig_w	solic_compra_item.qt_conv_compra_est_orig%type;
vl_custo_medio_material_w	double precision;
qt_conv_compra_w		double precision;
vl_estoque_atual_w		double precision;
nr_contrato_w			solic_compra_item.nr_contrato%type;
nr_seq_regra_contrato_w 	solic_compra_item.nr_seq_regra_contrato%type;
qt_contrato_regra_nf_w		bigint;


/* Shift  + F11 = 'Regra para consistencia do item disp. mercado' */

qt_existe_regra_disp_mer_w		bigint;
ie_acao_disp_mercado_w		varchar(1) := 'N';

c01 CURSOR FOR
SELECT	qt_entrega_solicitada,
	dt_entrega_solicitada
from	prog_entregra_mat_ressup
where	cd_estabelecimento = cd_estabelecimento_w
and	cd_material = cd_material_p;


BEGIN

/* Shift  + F11 = 'Regra para consistencia do item disp. mercado' */

/* Este delete esta no DELPHI
delete from w_consist_disp_mercado
where nm_usuario = nm_usuario_p
and   cd_funcao = 913;*/
commit;

cd_perfil_w	:= obter_perfil_ativo;

select	cd_estabelecimento,
	cd_local_estoque
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

select (max(obter_valor_param_usuario(913, 167, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w))),
	(max(obter_valor_param_usuario(913, 192, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w))),
	(max(obter_valor_param_usuario(913, 165, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w)))
into STRICT	ie_prog_entrega_ressup_w,
	ie_saldo_estoque_w,
	ie_valor_previsto_w
;

cd_unidade_compra_w	:=	substr(obter_med_conversao_compra(cd_material_p, cd_cgc_p, 'U', cd_estabelecimento_w),1,25);

select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo
into STRICT	cd_unidade_estoque_w,
	cd_unidade_consumo_w
from	material
where	cd_material = cd_material_p;

cd_unidade_w		:= cd_unidade_compra_w;

if (ie_unidade_p = 'E') then
	cd_unidade_w	:= cd_unidade_estoque_w;
elsif (ie_unidade_p = 'M') then
	cd_unidade_w	:= cd_unidade_consumo_w;
end if;

ds_observacao_w := substr(coalesce(ds_observacao_p,null),1,255);

if (atualiza_valor_previsto_p = 'S') then
	begin
	
	/*Valor liquido dividido Qt item*/

	if (ie_valor_previsto_w = '0') then
		select	obter_dados_ult_compra_data(cd_estabelecimento_w, cd_material_p, null, clock_timestamp(), 0, 'VE')
		into STRICT	vl_ultima_compra_w
		;
	
	/*Valor unitario item da NF*/

	elsif (ie_valor_previsto_w = '1') then
		select	obter_dados_ult_compra_data(cd_estabelecimento_w, cd_material_p, null, clock_timestamp(), 0, 'VU')
		into STRICT	vl_ultima_compra_w
		;
	
	/*Maior valor de compra*/

	elsif (ie_valor_previsto_w = '2') then
		select	obter_maior_vl_compra_mat(cd_estabelecimento_w, 365, cd_material_p, null, 'N')
		into STRICT	vl_ultima_compra_w
		;
		
	/*Maior valor de compra dos ultimos 12 meses (por estab)*/
	
	elsif (ie_valor_previsto_w = '3') then
		select	obter_maior_vl_compra_12_mes(cd_estabelecimento_w, 365, cd_material_p, null, 'N')
		into STRICT	vl_ultima_compra_w
		;
	
	/*Maior valor de compra dos ultimos 12 meses (sem estab)*/

	elsif (ie_valor_previsto_w = '4') then
		select	obter_maior_valor_compra_geral(cd_material_p, null, 'N', cd_unidade_compra_w)
		into STRICT	vl_ultima_compra_w
		;
	
	/*Maior valor de compra dos ultimos 12 meses (inclui genericos sem estab)*/

	elsif (ie_valor_previsto_w = '5') then
		select	obter_maior_valor_compra_geral(cd_material_p, null, 'S', cd_unidade_compra_w)
		into STRICT	vl_ultima_compra_w
		;
	end if;
	end;
end if;

/* Verifica se possui evento na 'Regra para consistencia do item disp. mercado' */

select	count(*)
into STRICT	qt_existe_regra_disp_mer_w
from	consiste_disp_mercado
where	cd_evento = 'SA';

if (qt_existe_regra_disp_mer_w > 0) then
	begin
	/* Verifica se possui evento na 'Regra para consistencia do item disp. mercado', e se o material esta disponivel no mercado */

	select  	substr(obter_acao_regra_disp_mercado('SA', cd_material_p, null, cd_estabelecimento_w),1,1) ie_acao_regra
	into STRICT	ie_acao_disp_mercado_w
	;

	if (ie_acao_disp_mercado_w <> 'N') then
		begin
		CALL grava_consiste_disp_mercado(    913,
					     cd_material_p,
					     nm_usuario_p,
					     ie_acao_disp_mercado_w);
		end;
	end if;

	end;
end if;

if (ie_com_contrato_p = 'S') then
	select	count(*)
	into STRICT	qt_contrato_regra_nf_w
	from	contrato_regra_nf r,
		contrato c
	where	c.nr_sequencia = r.nr_seq_contrato
	and	r.cd_material = cd_material_p
	and	(r.dt_inicio_vigencia IS NOT NULL AND r.dt_inicio_vigencia::text <> '')
	and	clock_timestamp() > r.dt_inicio_vigencia
	and	((trunc(clock_timestamp()) <= r.dt_fim_vigencia) or (coalesce(r.dt_fim_vigencia::text, '') = ''))
    and (coalesce(r.ie_situacao::text, '') = '' or r.ie_situacao = 'A')
	and	c.ie_situacao = 'A';
	
	if (qt_contrato_regra_nf_w = 1) then
		select	c.nr_sequencia,
			r.nr_sequencia
		into STRICT	nr_contrato_w,
			nr_seq_regra_contrato_w
		from	contrato_regra_nf r,
			contrato c
		where	c.nr_sequencia = r.nr_seq_contrato
		and	r.cd_material = cd_material_p
		and	(r.dt_inicio_vigencia IS NOT NULL AND r.dt_inicio_vigencia::text <> '')
		and	clock_timestamp() > r.dt_inicio_vigencia
		and	((trunc(clock_timestamp()) <= r.dt_fim_vigencia) or (coalesce(r.dt_fim_vigencia::text, '') = ''))
        and (coalesce(r.ie_situacao::text, '') = '' or r.ie_situacao = 'A')
		and	c.ie_situacao = 'A';
	end if;
end if;

if (ie_acao_disp_mercado_w in ('M', 'N')) then
	begin
	
	if (ie_saldo_estoque_w = 'L') then
		select	obter_saldo_estoque_nuvem(cd_estabelecimento_w, cd_material_p, cd_local_estoque_w, trunc(clock_timestamp(), 'MM'))
		into STRICT	qt_saldo_disp_estoque_w
		;
	elsif (ie_saldo_estoque_w = 'T') then
		select	obter_saldo_estoque_nuvem(cd_estabelecimento_w, cd_material_p, null, trunc(clock_timestamp(), 'MM'))
		into STRICT	qt_saldo_disp_estoque_w
		;
	end if;	
	
	vl_custo_medio_material_w	:=	obter_custo_medio_material(cd_estabelecimento_w,clock_timestamp(), cd_material_p);
	qt_conv_compra_est_orig_w	:=	obter_med_conversao_compra(cd_material_p,cd_cgc_p,'Q',cd_estabelecimento_w);-- Obtem o fator de conversao(compra X estoque) baseado no fornecedor cadastrado no cadstro do material
	qt_conv_compra_w			:=	qt_comprar_p * qt_conv_compra_est_orig_w;-- Quantidade de material convertido da unidade de compra para unidade de estoque;
	
	vl_custo_total_w	:=	vl_custo_medio_material_w * qt_conv_compra_w;
	vl_estoque_atual_w	:=	vl_custo_medio_material_w * coalesce(qt_saldo_disp_estoque_w,0);
	vl_estoque_total_w	:=	vl_estoque_atual_w + vl_custo_total_w;
	
	select	obter_dias_estoque_material(cd_estabelecimento_w, cd_material_p, nm_usuario_p)
	into STRICT	qt_dias_estoque_w
	;
	
	select	coalesce(max(nr_item_solic_compra),0) + 1
	into STRICT	nr_item_w
	from	solic_compra_item
	where	nr_solic_compra = nr_solic_compra_p;
	
	insert into solic_compra_item(
		nr_solic_compra,
		nr_item_solic_compra,
		cd_material,
		cd_unidade_medida_compra,
		qt_material,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		ds_material_direto,
		ds_observacao,
		nr_cot_compra,
		nr_item_cot_compra,
		cd_motivo_baixa,
		dt_baixa,
		dt_solic_item,
		nr_seq_aprovacao,
		dt_autorizacao,
		vl_unit_previsto,
		ie_geracao,
		qt_conv_compra_est_orig,
		qt_saldo_disp_estoque,
		vl_custo_total,
		vl_estoque_total,
		qt_dias_estoque,
		nr_contrato,
		nr_seq_regra_contrato)
	values (nr_solic_compra_p,
		nr_item_w,
		cd_material_p,
		cd_unidade_w,
		qt_comprar_p,
		clock_timestamp(),
		nm_usuario_p,
		'A',
		null,
		ds_observacao_w,
		null,
		null,
		null,
		null,
		dt_entrega_p,
		null,
		null,
		vl_ultima_compra_w,
		'S',
		qt_conv_compra_est_orig_w,
		qt_saldo_disp_estoque_w,
		vl_custo_total_w,
		vl_estoque_total_w,
		qt_dias_estoque_w,
		nr_contrato_w,
		nr_seq_regra_contrato_w);
	
	select	count(*)
	into STRICT	qt_existe_w
	from	prog_entregra_mat_ressup
	where	cd_estabelecimento = cd_estabelecimento_w
	and	cd_material = cd_material_p;
	
	if (qt_existe_w > 0) and (ie_prog_entrega_ressup_w = 'S') then
	
		select	sum(qt_entrega_solicitada)
		into STRICT	qt_soma_entrega_solicitada_w
		from	prog_entregra_mat_ressup
		where	cd_estabelecimento = cd_estabelecimento_w
		and	cd_material = cd_material_p;
		
		if (qt_soma_entrega_solicitada_w <> qt_comprar_p) then
			delete from solic_compra
			where	nr_solic_compra = nr_solic_compra_p;
			commit;
			
			/*(-20011,'A quantidade programada do material ' || CD_MATERIAL_P || ' e diferente da quantidade a comprar.');*/

			CALL wheb_mensagem_pck.Exibir_mensagem_abort(191177,'CD_MATERIAL_P='||CD_MATERIAL_P);
			
		else
			open C01;
			loop
			fetch C01 into	
				qt_entrega_solicitada_w,
				dt_entrega_solicitada_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				
				select	coalesce(max(nr_item_solic_compra_entr),0) +1
				into STRICT	nr_item_solic_compra_entr_w
				from	solic_compra_item_entrega
				where	nr_solic_compra		= nr_solic_compra_p
				and	nr_item_solic_compra	= nr_item_w;
				
				insert into solic_compra_item_entrega(
					nr_solic_compra,
					nr_item_solic_compra,
					nr_item_solic_compra_entr,
					qt_entrega_solicitada,
					dt_entrega_solicitada,
					dt_atualizacao,
					nm_usuario,
					ds_observacao)
				values (	nr_solic_compra_p,
					nr_item_w,
					nr_item_solic_compra_entr_w,
					qt_entrega_solicitada_w,
					dt_entrega_solicitada_w,
					clock_timestamp(),
					nm_usuario_p,
					null);
				end;
			end loop;
			close C01;			
		end if;
	else
		insert into solic_compra_item_entrega(
			nr_solic_compra,
			nr_item_solic_compra,
			nr_item_solic_compra_entr,
			qt_entrega_solicitada,
			dt_entrega_solicitada,
			dt_atualizacao,
			nm_usuario,
			ds_observacao)
		values (nr_solic_compra_p,
			nr_item_w,
			1,
			qt_comprar_p,
			dt_entrega_p,
			clock_timestamp(),
			nm_usuario_p,
			null);
	end if;
	end;
end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_solic_compra_item_ressup ( nr_solic_compra_p bigint, cd_material_p bigint, ie_unidade_p text, qt_comprar_p bigint, dt_entrega_p timestamp, nm_usuario_p text, atualiza_valor_previsto_p text, qt_dias_obter_compra_p bigint, ds_observacao_p text, cd_cgc_p text default null, ie_com_contrato_p text default null) FROM PUBLIC;

