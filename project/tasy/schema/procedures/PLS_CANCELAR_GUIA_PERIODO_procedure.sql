-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancelar_guia_periodo ( qt_dias_solicitacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
qt_contas_canceladas_w		bigint;
qt_contas_w			bigint;
qt_protocolos_conta_cancel_w	bigint;
qt_protocolos_conta_w		bigint;
cd_guia_w                       pls_guia_plano.cd_guia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from 	pls_guia_plano	a
	where 	a.dt_solicitacao < clock_timestamp() - qt_dias_solicitacao_p
	and	a.ie_status <> 3
	and 	coalesce(a.dt_liberacao::text, '') = ''
	and	coalesce(a.dt_autorizacao::text, '') = ''
	and	a.ie_estagio <> 8
	and	not exists ( 	SELECT	1
				from 	pls_conta x
				where	x.nr_seq_guia = a.nr_sequencia
				and	x.ie_status <> 'C');


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_guia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
begin
	select  nr_seq_segurado,
		cd_guia
	into STRICT    nr_seq_segurado_w,
		cd_guia_w
	from    pls_guia_plano
	where   nr_sequencia    = nr_seq_guia_w;

	select	count(1)
	into STRICT	qt_contas_canceladas_w
	from	pls_conta	a
	where	a.nr_seq_guia	= nr_seq_guia_w
	and (a.ie_status	= 'C');

	if (qt_contas_canceladas_w	= 0) then
		select	count(1)
		into STRICT	qt_contas_canceladas_w
		from	pls_conta		a
		where	a.cd_guia		= cd_guia_w
		and	a.nr_seq_segurado	= nr_seq_segurado_w
		and (a.ie_status		= 'C');
	end if;

	select	count(1)
	into STRICT	qt_contas_w
	from	pls_conta	a
	where	a.nr_seq_guia	= nr_seq_guia_w;

	if (qt_contas_w	= 0) then
		select	count(1)
		into STRICT	qt_contas_w
		from	pls_conta		a
		where	a.cd_guia		= cd_guia_w
		and	a.nr_seq_segurado	= nr_seq_segurado_w;
	end if;

	if (qt_contas_canceladas_w <> qt_contas_w) then
		select	count(1)
		into STRICT	qt_protocolos_conta_cancel_w
		from	pls_conta		a,
			pls_protocolo_conta	b
		where	a.nr_seq_protocolo	= b.nr_sequencia
		and	a.nr_seq_guia		= nr_seq_guia_w
		and (b.nr_seq_motivo_cancel IS NOT NULL AND b.nr_seq_motivo_cancel::text <> '');

		if (qt_protocolos_conta_cancel_w	= 0) then
			select	count(1)
			into STRICT	qt_protocolos_conta_cancel_w
			from	pls_conta		a,
				pls_protocolo_conta	b
			where	a.nr_seq_protocolo	= b.nr_sequencia
			and	a.cd_guia		= cd_guia_w
			and	a.nr_seq_segurado	= nr_seq_segurado_w
			and (b.nr_seq_motivo_cancel IS NOT NULL AND b.nr_seq_motivo_cancel::text <> '');
		end if;

		select	count(1)
		into STRICT	qt_protocolos_conta_w
		from	pls_conta		a,
			pls_protocolo_conta	b
		where	a.nr_seq_protocolo	= b.nr_sequencia
		and	a.nr_seq_guia		= nr_seq_guia_w;

		if (qt_protocolos_conta_w	= 0) then
			select	count(1)
			into STRICT	qt_protocolos_conta_w
			from	pls_conta		a,
				pls_protocolo_conta	b
			where	a.nr_seq_protocolo	= b.nr_sequencia
			and	a.cd_guia		= cd_guia_w
			and	a.nr_seq_segurado	= nr_seq_segurado_w;
		end if;

		if (qt_protocolos_conta_cancel_w = qt_protocolos_conta_w) then
			begin
				CALL pls_cancelar_autorizacao(nr_seq_guia_w, null, nm_usuario_p,'G');
				CALL pls_guia_gravar_historico(	nr_seq_guia_w,
						7,
						'Foi cancelada pela JOB: PLS_CANCELAR_GUIA_PERIODO_J.',
						'',
						nm_usuario_p);
			exception
			when others then
				CALL pls_guia_gravar_historico(	nr_seq_guia_w,
						7,
						'Não foi cancelada pela JOB: PLS_CANCELAR_GUIA_PERIODO_J.' || chr(13) || chr(10) ||
						'Devido inconsistência ocorrida na execução da rotina PLS_CANCELAR_AUTORIZACAO.' || chr(13) || chr(10) ||
						'Realizar cancelamento da guia através do botão direito, afim de verificar o motivo de não poder cancelar a autorização.',
						'',
						nm_usuario_p);
			end;


		else
			CALL pls_guia_gravar_historico(	nr_seq_guia_w,
					7,
					'Não foi cancelada pela JOB: PLS_CANCELAR_GUIA_PERIODO_J, devido a existência de contas/protocolos em aberto.',
					'',
					nm_usuario_p);
		end if;



	else
		begin
			CALL pls_cancelar_autorizacao(nr_seq_guia_w, null, nm_usuario_p,'G');
			CALL pls_guia_gravar_historico(	nr_seq_guia_w,
						7,
						'Foi cancelada pela JOB: PLS_CANCELAR_GUIA_PERIODO_J.',
						'',
						nm_usuario_p);
		exception
		when others then
			CALL pls_guia_gravar_historico(	nr_seq_guia_w,
					7,
					'Não foi cancelada pela JOB: PLS_CANCELAR_GUIA_PERIODO_J.' || chr(13) || chr(10) ||
					'Devido inconsistência ocorrida na execução da rotina PLS_CANCELAR_AUTORIZACAO.' || chr(13) || chr(10) ||
					'Realizar cancelamento da guia através do botão direito, afim de verificar o motivo de não poder cancelar a autorização.',
					'',
					nm_usuario_p);
		end;
	end if;
end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancelar_guia_periodo ( qt_dias_solicitacao_p bigint, nm_usuario_p text) FROM PUBLIC;

