-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_solicitar_itens_opm ( nr_seq_ordem_opm_p bigint, cd_local_destino_p bigint, cd_local_origem_p bigint, cd_estab_origem_p bigint, cd_local_estab_p bigint, ie_gerar_solic_compra_p text, nm_usuario_p text) AS $body$
DECLARE

 
qt_estoque_w			double precision;
cd_estabelecimento_w		prescr_medica.cd_estabelecimento%type;
qt_estoque_disponivel_w		double precision;
ie_status_saldo_w			varchar(15);
nr_requisicao_w			bigint;
nr_ordem_compra_w		bigint;
nr_solic_compra_w			bigint;
nr_item_solic_compra_w		bigint;
cd_operacao_estoque_w		smallint;
cd_pessoa_requisitante_w		bigint;
nr_item_requisicao_w		bigint;
cd_comprador_w			varchar(10);
cd_moeda_w			bigint;
cd_cond_pagto_w 			bigint;
nr_item_oci_w			integer;
ie_status_w			varchar(15)	:=	'X';
ie_saldo_componentes_w		varchar(15)	:=	'S';
ie_gerado_requisicao_w			varchar(15)	:=	'N';
		
c01 CURSOR FOR 
SELECT	nr_sequencia, 
	cd_material, 
	coalesce(qt_material,1) qt_material 
from	ordem_producao_comp_opm 
where	nr_seq_ordem_opm = nr_seq_ordem_opm_p 
and	ie_status_saldo = 'N';
	
vet01	c01%rowtype;

		 

BEGIN 
 
begin 
select	b.cd_estabelecimento 
into STRICT	cd_estabelecimento_w 
from	ordem_producao_opm c, 
	prescr_opm a, 
	prescr_medica b 
where	a.nr_prescricao = b.nr_prescricao 
and	a.nr_sequencia = c.nr_seq_opm 
and	c.nr_sequencia = nr_seq_ordem_opm_p;
exception 
when others then 
	cd_estabelecimento_w	:=	obter_estabelecimento_ativo;
end;
 
update	ordem_producao_comp_opm 
set	ie_status_saldo = 'N' 
where	nr_seq_ordem_opm = nr_seq_ordem_opm_p 
and	coalesce(ie_status_saldo,'X') = 'X';
 
update	ordem_producao_opm 
set	cd_local_estoque = cd_local_destino_p 
where	nr_sequencia = nr_seq_ordem_opm_p;
 
open c01;
loop 
fetch c01 into	 
	vet01;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin	 
	qt_estoque_w		:=	obter_quantidade_convertida(vet01.cd_material, vet01.qt_material, substr(obter_dados_material(vet01.cd_material, 'UMC'),1,30), 'UME');
	ie_status_saldo_w	:=	'N';
	 
	if (cd_local_destino_p IS NOT NULL AND cd_local_destino_p::text <> '') then 
		begin 
		qt_estoque_disponivel_w := obter_saldo_disp_estoque(cd_estabelecimento_w, vet01.cd_material, cd_local_destino_p, clock_timestamp());
		 
		if (qt_estoque_disponivel_w >= qt_estoque_w) then 
			ie_status_saldo_w	:=	'D';
		end if;
		end;
	end if;
	 
	if (cd_local_origem_p IS NOT NULL AND cd_local_origem_p::text <> '') and (ie_status_saldo_w = 'N') then 
		begin 
		qt_estoque_disponivel_w := obter_saldo_disp_estoque(cd_estabelecimento_w, vet01.cd_material, cd_local_origem_p, clock_timestamp());
		 
		if (qt_estoque_disponivel_w >= qt_estoque_w) then 
			ie_status_saldo_w	:=	'R';
		end if;
		end;
	end if;
	 
	if (cd_estab_origem_p IS NOT NULL AND cd_estab_origem_p::text <> '') and (cd_local_estab_p IS NOT NULL AND cd_local_estab_p::text <> '') and (ie_status_saldo_w = 'N') then 
		begin 
		qt_estoque_disponivel_w := obter_saldo_disp_estoque(cd_estab_origem_p, vet01.cd_material, cd_local_estab_p, clock_timestamp());
		 
		if (qt_estoque_disponivel_w >= qt_estoque_w) then 
			ie_status_saldo_w	:=	'T';
		end if;
		end;
	end if;
	 
	if (ie_status_saldo_w = 'R') then 
		begin 
		select	cd_operacao_transf_setor 
		into STRICT	cd_operacao_estoque_w 
		from	parametro_estoque 
		where	cd_estabelecimento = cd_estabelecimento_w;
		 
		cd_pessoa_requisitante_w := substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10);
		 
		 
		if (coalesce(nr_requisicao_w::text, '') = '') then 
		 
			select	nextval('requisicao_seq') 
			into STRICT	nr_requisicao_w 
			;
	 
			insert into requisicao_material( 
				nr_requisicao, 
				cd_estabelecimento, 
				cd_local_estoque, 
				dt_solicitacao_requisicao, 
				dt_atualizacao, 
				nm_usuario, 
				cd_operacao_estoque, 
				cd_pessoa_requisitante, 
				cd_local_estoque_destino, 
				nm_usuario_lib, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				ie_geracao, 
				ie_urgente, 
				nr_seq_solic_kit, 
				ie_origem_requisicao) 
			values (	nr_requisicao_w, 
				cd_estabelecimento_w, 
				cd_local_destino_p, 
				clock_timestamp(), 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_operacao_estoque_w, 
				cd_pessoa_requisitante_w, 
				cd_local_origem_p, 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				'I', 
				'N', 
				null, 
				'OPM');
			 
			/*não sobrescreve o status de compra*/
 
			if (ie_status_w	= 'X') then 
				ie_status_w	:=	'RES';
			end if;
     ie_gerado_requisicao_w:= 'S';
		end if;
		 
		select	coalesce(max(nr_sequencia),0)+1 
		into STRICT	nr_item_requisicao_w 
		from	item_requisicao_material 
		where	nr_requisicao = nr_requisicao_w;
		 
		insert into item_requisicao_material( 
			nr_requisicao, 
			nr_sequencia, 
			cd_estabelecimento, 
			cd_material, 
			qt_material_requisitada, 
			vl_material, 
			dt_atualizacao, 
			nm_usuario, 
			cd_unidade_medida, 
			cd_unidade_medida_estoque, 
			qt_estoque, 
			nr_seq_op_comp_opm) 
		values (	nr_requisicao_w, 
			nr_item_requisicao_w, 
			cd_estabelecimento_w, 
			vet01.cd_material, 
			vet01.qt_material, 
			0, 
			clock_timestamp(), 
			nm_usuario_p, 
			substr(obter_dados_material(vet01.cd_material, 'UMC'),1,30), 
			substr(obter_dados_material(vet01.cd_material, 'UME'),1,30), 
			qt_estoque_w, 
			vet01.nr_sequencia);
		 
		end;
	elsif (ie_status_saldo_w = 'T') then 
		begin 
		if (coalesce(nr_ordem_compra_w::text, '') = '') then 
		 
			select	cd_comprador_padrao, 
				cd_moeda_padrao, 
				cd_condicao_pagamento_padrao 
			into STRICT	cd_comprador_w, 
				cd_moeda_w, 
				cd_cond_pagto_w 
			from	parametro_compras 
			where	cd_estabelecimento = cd_estabelecimento_w;
		 
			select	nextval('ordem_compra_seq') 
			into STRICT	nr_ordem_compra_w 
			;
			 
			cd_pessoa_requisitante_w := substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10);
			 
			insert into ordem_compra( 
				nr_ordem_compra, 
				cd_estabelecimento, 
				cd_condicao_pagamento, 
				cd_comprador, 
				dt_ordem_compra, 
				dt_atualizacao, 
				nm_usuario, 
				cd_moeda, 
				ie_situacao, 
				dt_inclusao, 
				cd_pessoa_solicitante, 
				ie_frete, 
				dt_entrega, 
				ie_aviso_chegada, 
				ie_emite_obs, 
				ie_urgente, 
				ie_tipo_ordem, 
				cd_local_entrega, 
				cd_local_transf, 
				cd_estab_transf) 
			values (	nr_ordem_compra_w, 
				cd_estabelecimento_w, 
				cd_cond_pagto_w, 
				cd_comprador_w, 
				clock_timestamp(), 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_moeda_w, 
				'A', 
				clock_timestamp(), 
				cd_pessoa_requisitante_w, 
				'C', 
				clock_timestamp(), 
				'N', 
				'N', 
				'N', 
				'T', 
				cd_local_destino_p, 
				cd_local_origem_p, 
				cd_estab_origem_p);
				 
			/*não sobrescreve o status de compra*/
 
			if (ie_status_w	= 'X') then 
				ie_status_w	:=	'RES';
			end if;
		end if;
		 
		select	coalesce(max(nr_item_oci),0)+1 
		into STRICT	nr_item_oci_w 
		from	ordem_compra_item 
		where	nr_ordem_compra = nr_ordem_compra_w;
		 
		insert into ordem_compra_item( 
			nr_ordem_compra, 
			nr_item_oci, 
			cd_material, 
			cd_unidade_medida_compra, 
			vl_unitario_material, 
			qt_material, 
			dt_atualizacao, 
			nm_usuario, 
			ie_situacao, 
			nr_seq_op_comp_opm, 
			vl_total_item) 
		values (	nr_ordem_compra_w, 
			nr_item_oci_w, 
			vet01.cd_material, 
			substr(obter_dados_material(vet01.cd_material, 'UME'),1,30), 
			obter_custo_medio_material(cd_estabelecimento_w, clock_timestamp(), vet01.cd_material), 
			qt_estoque_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			'A', 
			vet01.nr_sequencia, 
			round((coalesce(obter_custo_medio_material(cd_estabelecimento_w, clock_timestamp(), vet01.cd_material),0) * qt_estoque_w),4));
		 
		CALL gerar_oc_item_entrega(nm_usuario_p, nr_ordem_compra_w, nr_item_oci_w, qt_estoque_w, clock_timestamp(), clock_timestamp(), clock_timestamp());
		end;
	elsif (ie_status_saldo_w = 'N') and (ie_gerar_solic_compra_p = 'S') then 
		begin 
		if (coalesce(nr_solic_compra_w::text, '') = '') then 
			nr_solic_compra_w := gerar_solic_compra(	 
				cd_estabelecimento_w, 'N', 'N', cd_local_destino_p, nm_usuario_p, nr_solic_compra_w);
				 
			/*sobrescreve o status de ressuprimento*/
 
			ie_status_w	:=	'COM';
		end if;
		 
		CALL gerar_solic_compra_item( 
			nr_solic_compra_w, 
			vet01.cd_material, 
			'E', 
			qt_estoque_w, 
			clock_timestamp() + interval '15 days', 
			nm_usuario_p, 
			'S', 
			60, 
			null);
			 
		select	max(nr_item_solic_compra) 
		into STRICT	nr_item_solic_compra_w 
		from	solic_compra_item 
		where	nr_solic_compra = nr_solic_compra_w;
		 
		update	solic_compra_item 
		set	nr_seq_op_comp_opm = vet01.nr_sequencia 
		where	nr_solic_compra = nr_solic_compra_w 
		and	nr_item_solic_compra = nr_item_solic_compra_w;
		end;
	end if;
	 
	if (ie_status_saldo_w <> 'D') then 
		ie_saldo_componentes_w	:=	'N';
	end if;
	end;
end loop;
close c01;
 
if (ie_saldo_componentes_w = 'S') then 
	CALL gravar_status_op_opm(nr_seq_ordem_opm_p, 'NF', null, nm_usuario_p, cd_estabelecimento_w);
elsif (ie_status_w in ('RES','COM')) then 
	CALL gravar_status_op_opm(nr_seq_ordem_opm_p, ie_status_w, null, nm_usuario_p, cd_estabelecimento_w);
end if;
if (ie_gerado_requisicao_w = 'S') then 
  CALL gravar_status_op_opm(nr_seq_ordem_opm_p, 'AGRM', null, nm_usuario_p, cd_estabelecimento_w);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_solicitar_itens_opm ( nr_seq_ordem_opm_p bigint, cd_local_destino_p bigint, cd_local_origem_p bigint, cd_estab_origem_p bigint, cd_local_estab_p bigint, ie_gerar_solic_compra_p text, nm_usuario_p text) FROM PUBLIC;

