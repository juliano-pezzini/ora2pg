-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_obter_regra_proc_prescr (cd_area_procedimento_p bigint, cd_especialidade_p bigint, cd_grupo_proc_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_estabelecimento_p bigint, ie_regra_p INOUT text, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, nr_seq_proc_interno_p bigint default null) AS $body$
DECLARE


ie_regra_w		varchar(20);
cd_funcao_ativa_w	bigint;
ie_dia_semana_w		smallint;
hr_atual_w		bigint;

c01 CURSOR FOR
SELECT	ie_regra
from	TISS_REGRA_PROC_PRESCR
where	coalesce(cd_area_procedimento, coalesce(cd_area_procedimento_p,0)) 	= coalesce(cd_area_procedimento_p, 0)
and	coalesce(cd_especialidade, coalesce(cd_especialidade_p, 0))		= coalesce(cd_especialidade_p, 0)
and	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_p, 0))			= coalesce(cd_grupo_proc_p, 0)
and	coalesce(cd_procedimento, coalesce(cd_procedimento_p, 0))			= coalesce(cd_procedimento_p, 0)
and	coalesce(ie_origem_proced, coalesce(ie_origem_proced_p, 0))		= coalesce(ie_origem_proced_p, 0)
and	coalesce(cd_convenio, coalesce(cd_convenio_p,0))				= coalesce(cd_convenio_p, 0)
and	coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p,0))		= coalesce(ie_tipo_atendimento_p,0)
and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_p,0))	= coalesce(cd_setor_atendimento_p,0)
and	coalesce(nr_seq_proc_interno, coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
and	coalesce(ie_dia_semana, coalesce(ie_dia_semana_w,0))			= coalesce(ie_dia_semana_w,0)
and	((coalesce(hr_inicial::text, '') = '' and coalesce(hr_final::text, '') = '') or (hr_atual_w between 	coalesce((obter_minutos_hora(to_char(hr_inicial,'hh24:mi:ss')))::numeric ,0) and
				coalesce((obter_minutos_hora(to_char(hr_final,'hh24:mi:ss')))::numeric ,0)))
and	cd_estabelecimento						= cd_estabelecimento_p
and	((coalesce(ie_aplicar_regra,'T') = 'T') or
	 ((coalesce(ie_aplicar_regra,'T') = 'GE') and cd_funcao_ativa_w = 942) or
	 ((coalesce(ie_aplicar_regra,'T') = 'REP') and cd_funcao_ativa_w = 924) or
	 ((coalesce(ie_aplicar_regra,'T') = 'REPPT') and cd_funcao_ativa_w = 950) or
	 ((coalesce(ie_aplicar_regra,'T') = 'EP') and cd_funcao_ativa_w = 722)
	)
order by coalesce(cd_procedimento, 0),
	 coalesce(cd_grupo_proc, 0),
	 coalesce(cd_especialidade, 0),
	 coalesce(cd_area_procedimento, 0),
	 coalesce(cd_convenio, 0),
	 coalesce(ie_tipo_atendimento, 0),
	 coalesce(cd_setor_atendimento, 0),
	 coalesce(nr_seq_proc_interno, 0);


BEGIN

cd_funcao_ativa_w	:= obter_funcao_ativa;
ie_dia_semana_w		:= pkg_date_utils.get_WeekDay(clock_timestamp());
hr_atual_w		:= coalesce((obter_minutos_hora(to_char(clock_timestamp(),'hh24:mi:ss')))::numeric ,0);

ie_regra_w		:= 'S';
open c01;
loop
fetch c01 into
	ie_regra_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

ie_regra_p		:= ie_regra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_obter_regra_proc_prescr (cd_area_procedimento_p bigint, cd_especialidade_p bigint, cd_grupo_proc_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_estabelecimento_p bigint, ie_regra_p INOUT text, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, nr_seq_proc_interno_p bigint default null) FROM PUBLIC;

