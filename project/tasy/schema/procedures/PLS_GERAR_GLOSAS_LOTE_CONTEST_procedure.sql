-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_glosas_lote_contest ( nr_seq_lote_contest_p pls_lote_contestacao.nr_sequencia%type, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE

 
ds_observacao_w			pls_contest_item_glosa.ds_observacao%type;
ds_parecer_w			pls_contest_item_glosa.ds_parecer_glosa%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
nr_seq_ocorrencia_w		pls_ocorrencia.nr_sequencia%type;
nr_seq_motivo_glosa_w		pls_acao_glosa_tiss.nr_seq_motivo_glosa%type;
nr_seq_mot_quest_w		ptu_motivo_questionamento.nr_sequencia%type;
nr_seq_contestacao_w		pls_contestacao.nr_sequencia%type;
nr_seq_contest_item_w		pls_contest_item_glosa.nr_seq_contest_proc%type;
cd_motivo_w			ptu_motivo_questionamento.cd_motivo%type;
ie_tipo_w			varchar(1);
ie_parametro_31_w		varchar(1);
nr_seq_item_w			bigint;
qt_glosa_w			integer;
count_w				integer;
	
C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_contestacao 
	where	nr_seq_lote	= nr_seq_lote_contest_p;

C02 CURSOR FOR 
	SELECT	nr_seq_conta_proc, 
		nr_sequencia, 
		'P' ie_tipo 
	from	pls_contestacao_proc 
	where	nr_seq_contestacao	= nr_seq_contestacao_w 
	
union all
 
	SELECT	nr_seq_conta_mat, 
		nr_sequencia, 
		'M' ie_tipo 
	from	pls_contestacao_mat 
	where	nr_seq_contestacao	= nr_seq_contestacao_w;
	
C03 CURSOR FOR 
	SELECT	a.nr_seq_motivo_glosa, 
		a.nr_ocorrencia, 
		a.ds_observacao 
	from	pls_conta_glosa_ocorrencia_v a 
	where	a.nr_seq_proc	= nr_seq_item_w 
	and	ie_situacao <> 'I' 
	
union all
 
	SELECT	a.nr_seq_motivo_glosa, 
		a.nr_ocorrencia, 
		a.ds_observacao 
	from	pls_conta_glosa_ocorrencia_v a 
	where	a.nr_seq_conta	= nr_seq_conta_w 
	and	ie_situacao <> 'I' 
	and	coalesce(nr_seq_proc::text, '') = '' 
	and	coalesce(nr_seq_mat::text, '') = '';

C04 CURSOR FOR 
	SELECT	a.nr_seq_motivo_glosa, 
		a.nr_ocorrencia, 
		a.ds_observacao 
	from	pls_conta_glosa_ocorrencia_v a 
	where	a.nr_seq_mat	= nr_seq_item_w 
	and	ie_situacao <> 'I' 
	
union all
 
	SELECT	a.nr_seq_motivo_glosa, 
		a.nr_ocorrencia, 
		a.ds_observacao 
	from	pls_conta_glosa_ocorrencia_v a 
	where	a.nr_seq_conta	= nr_seq_conta_w 
	and	ie_situacao <> 'I' 
	and	coalesce(nr_seq_proc::text, '') = '' 
	and	coalesce(nr_seq_mat::text, '') = '';


BEGIN 
-- parâmetro [31] - Gerar apenas a glosa principal na contestação 
ie_parametro_31_w := obter_param_usuario(1293, 31, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_parametro_31_w);
 
open C01;
loop 
fetch C01 into	 
	nr_seq_contestacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	max(a.nr_seq_conta) 
	into STRICT	nr_seq_conta_w 
	from	pls_contestacao	a 
	where	nr_sequencia	= nr_seq_contestacao_w;
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_item_w, 
		nr_seq_contest_item_w, 
		ie_tipo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin		 
		if (ie_tipo_w = 'P') then 
			-- Gerar glosas 
			open C03;
			loop 
			fetch C03 into	 
				nr_seq_motivo_glosa_w, 
				nr_seq_ocorrencia_w, 
				ds_observacao_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin 
				ds_parecer_w	:= null;
				 
				select	max(a.nr_seq_motivo_ptu) 
				into STRICT	nr_seq_mot_quest_w 
				from	pls_acao_glosa_tiss	a 
				where	a.nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w 
				and	a.ie_situacao		= 'A';
				 
				if (coalesce(nr_seq_mot_quest_w::text, '') = '') then 
					select	max(a.nr_seq_motivo_ptu) 
					into STRICT	nr_seq_mot_quest_w 
					from	pls_ocorrencia	a 
					where	a.nr_sequencia	= nr_seq_ocorrencia_w 
					and	a.ie_situacao	= 'A';
				end if;
				 
				-- Pegar o parecer da glosa principal 
				if (nr_seq_mot_quest_w IS NOT NULL AND nr_seq_mot_quest_w::text <> '') then 
					select	max(a.ds_parecer) 
					into STRICT	ds_parecer_w 
					from	pls_analise_fluxo_item	a 
					where	a.nr_seq_conta_proc	= nr_seq_item_w 
					and	a.ie_pagamento		= 'G';
					 
					if (coalesce(ds_parecer_w::text, '') = '') then 
						select	count(1) 
						into STRICT	count_w 
						from	pls_analise_fluxo_item	a 
						where	a.nr_seq_conta_proc	= nr_seq_item_w  LIMIT 1;
					 
						if (count_w = 0) then 
							select	max(a.ds_parecer) 
							into STRICT	ds_parecer_w 
							from	pls_analise_fluxo_item	a 
							where	a.nr_seq_conta	= nr_seq_conta_w 
							and	a.ie_pagamento	= 'G';
						end if;
					end if;
				end if;
				 
				-- Pegar o parecer da glosa parcial caso não tenha parecer anterior 
				if (coalesce(ds_parecer_w::text, '') = '') and (ie_parametro_31_w = 'N') and (nr_seq_mot_quest_w IS NOT NULL AND nr_seq_mot_quest_w::text <> '') then 
					select	max(cd_motivo) 
					into STRICT	cd_motivo_w 
					from	ptu_motivo_questionamento 
					where	nr_sequencia = nr_seq_mot_quest_w;
					 
					if (cd_motivo_w = '98') then 
						select	max(a.ds_parecer) 
						into STRICT	ds_parecer_w 
						from	pls_analise_fluxo_item	a 
						where	a.nr_seq_conta_proc	= nr_seq_item_w 
						and	a.ie_pagamento		= 'P';
						 
						if (coalesce(ds_parecer_w::text, '') = '') then 
							select	count(1) 
							into STRICT	count_w 
							from	pls_analise_fluxo_item	a 
							where	a.nr_seq_conta_proc	= nr_seq_item_w  LIMIT 1;
						 
							if (count_w = 0) then 
								select	max(a.ds_parecer) 
								into STRICT	ds_parecer_w 
								from	pls_analise_fluxo_item	a 
								where	a.nr_seq_conta	= nr_seq_conta_w 
								and	a.ie_pagamento	= 'P';
							end if;
						end if;
					end if;
				end if;
				 
				if	(ie_parametro_31_w = 'S' AND ds_parecer_w IS NOT NULL AND ds_parecer_w::text <> '') or (ie_parametro_31_w = 'N') then 
					select	count(1) 
					into STRICT	qt_glosa_w 
					from	pls_contest_item_glosa 
					where	nr_seq_contest_proc	= nr_seq_contest_item_w 
					and	nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w;
				 
					if (qt_glosa_w = 0) then 
						insert into pls_contest_item_glosa(nr_sequencia, 
							nm_usuario, 
							dt_atualizacao, 
							nm_usuario_nrec, 
							dt_atualizacao_nrec, 
							nr_seq_contest_proc, 
							nr_seq_motivo_glosa, 
							nr_seq_ocorrencia, 
							nr_seq_mot_quest, 
							ds_observacao, 
							ds_parecer_glosa) 
						values (nextval('pls_contest_item_glosa_seq'), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nr_seq_contest_item_w, 
							nr_seq_motivo_glosa_w, 
							nr_seq_ocorrencia_w, 
							nr_seq_mot_quest_w, 
							ds_observacao_w, 
							ds_parecer_w);
					end if;
				end if;
				end;
			end loop;
			close C03;
		else	 
			-- Gerar glosas 
			open C04;
			loop 
			fetch C04 into	 
				nr_seq_motivo_glosa_w, 
				nr_seq_ocorrencia_w, 
				ds_observacao_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				ds_parecer_w	:= null;
				 
				select	max(a.nr_seq_motivo_ptu) 
				into STRICT	nr_seq_mot_quest_w 
				from	pls_acao_glosa_tiss	a 
				where	a.nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w 
				and	a.ie_situacao		= 'A';
			 
				if (coalesce(nr_seq_mot_quest_w::text, '') = '') then 
					select	max(a.nr_seq_motivo_ptu) 
					into STRICT	nr_seq_mot_quest_w 
					from	pls_ocorrencia	a 
					where	a.nr_sequencia	= nr_seq_ocorrencia_w 
					and	a.ie_situacao	= 'A';
				end if;
				 
				-- Pegar o parecer da glosa principal 
				if (nr_seq_mot_quest_w IS NOT NULL AND nr_seq_mot_quest_w::text <> '') then 
					select	max(a.ds_parecer) 
					into STRICT	ds_parecer_w 
					from	pls_analise_fluxo_item	a 
					where	a.nr_seq_conta_mat	= nr_seq_item_w 
					and	a.ie_pagamento		= 'G';
				end if;
				 
				-- Pegar o parecer da glosa parcial caso não tenha parecer anterior 
				if (coalesce(ds_parecer_w::text, '') = '') and (ie_parametro_31_w = 'N') and (nr_seq_mot_quest_w IS NOT NULL AND nr_seq_mot_quest_w::text <> '') then 
					select	max(cd_motivo) 
					into STRICT	cd_motivo_w 
					from	ptu_motivo_questionamento 
					where	nr_sequencia = nr_seq_mot_quest_w;
					 
					if (cd_motivo_w = '98') then 
						select	max(a.ds_parecer) 
						into STRICT	ds_parecer_w 
						from	pls_analise_fluxo_item	a 
						where	a.nr_seq_conta_mat	= nr_seq_item_w 
						and	a.ie_pagamento		= 'P';
					end if;
				end if;
				 
				if	(ie_parametro_31_w = 'S' AND ds_parecer_w IS NOT NULL AND ds_parecer_w::text <> '') or (ie_parametro_31_w = 'N') then 
					select	count(1) 
					into STRICT	qt_glosa_w 
					from	pls_contest_item_glosa	a 
					where	a.nr_seq_contest_mat	= nr_seq_contest_item_w 
					and	a.nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w;
					 
					if (qt_glosa_w = 0) then 
						insert into pls_contest_item_glosa(nr_sequencia, 
							nm_usuario, 
							dt_atualizacao, 
							nm_usuario_nrec, 
							dt_atualizacao_nrec, 
							nr_seq_contest_mat, 
							nr_seq_motivo_glosa, 
							nr_seq_ocorrencia, 
							nr_seq_mot_quest, 
							ds_observacao, 
							ds_parecer_glosa) 
						values (nextval('pls_contest_item_glosa_seq'), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nr_seq_contest_item_w, 
							nr_seq_motivo_glosa_w, 
							nr_seq_ocorrencia_w, 
							nr_seq_mot_quest_w, 
							ds_observacao_w, 
							ds_parecer_w);
					end if;
				end if;
				end;
			end loop;
			close C04;
		end if;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;
	 
CALL pls_atualizar_valores_contest(	nr_seq_lote_contest_p, 'N');
 
if (coalesce(ie_commit_p,'S') = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_glosas_lote_contest ( nr_seq_lote_contest_p pls_lote_contestacao.nr_sequencia%type, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

