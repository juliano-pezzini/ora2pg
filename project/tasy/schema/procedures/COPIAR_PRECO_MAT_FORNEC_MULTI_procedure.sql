-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_preco_mat_fornec_multi (cd_estabelecimento_p bigint, cd_convenio_p text, ie_tipo_acao_p text, nm_usuario_p text, nr_seq_material_p bigint, vl_material_p bigint, ie_acao_executada_p bigint) AS $body$
DECLARE

cd_material_w            integer;
nr_seq_fornec_w          bigint;
nr_seq_mat_fornec_w      bigint;
qt_mat_fornec_w          bigint;
nr_seq_mat_fornec_nova_w bigint;
cd_cgc_fornec_w          varchar(14);

c01 CURSOR FOR
SELECT a.nr_sequencia
FROM convenio_preco_fornec a
WHERE (((ie_tipo_acao_p                                              = '1')
AND (obter_se_contido(cd_convenio, elimina_aspas(cd_convenio_p))     = 'S'))
OR ((ie_tipo_acao_p                                                  = '2')
AND (NOT obter_se_contido(cd_convenio, elimina_aspas(cd_convenio_p)) = 'S')))
AND a.cd_estabelecimento                                             = cd_estabelecimento_p
AND (((coalesce(ie_acao_executada_p,0)                                    = 1)
AND (a.cd_cgc_fornec                                                 = cd_cgc_fornec_w))
OR (EXISTS (SELECT 1
FROM convenio_preco_mat_fornec x
WHERE x.nr_seq_conv_preco = a.nr_sequencia
AND x.cd_material         = cd_material_w
AND x.nr_sequencia       <> nr_Seq_material_p
)));
c02 CURSOR FOR
SELECT b.nr_sequencia
FROM convenio_preco_mat_fornec b
WHERE b.nr_seq_conv_preco = nr_seq_fornec_w
AND b.cd_material         = cd_material_w
AND b.nr_sequencia       <> nr_seq_material_p;


BEGIN

SELECT MAX(a.cd_material),
MAX(b.cd_cgc_fornec)
INTO STRICT cd_material_w,
cd_cgc_fornec_w
FROM convenio_preco_mat_fornec a,
convenio_preco_fornec b
WHERE a.nr_sequencia    = nr_seq_material_p
AND a.nr_seq_conv_preco = b.nr_sequencia;

IF (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') THEN
		OPEN c01;
		LOOP
		FETCH c01
		INTO nr_seq_fornec_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		SELECT COUNT(*)
		INTO STRICT qt_mat_fornec_w
		FROM convenio_preco_mat_fornec b
		WHERE b.nr_seq_conv_preco  = nr_seq_fornec_w
		AND b.cd_material          = cd_material_w;
		IF (coalesce(qt_mat_fornec_w,0) > 0) THEN
			OPEN c02;
			LOOP
			FETCH c02 INTO
				nr_seq_mat_fornec_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				UPDATE convenio_preco_mat_fornec
				SET vl_material    = vl_material_p,
				nm_usuario       = nm_usuario_p,
				dt_atualizacao   = clock_timestamp()
				WHERE nr_sequencia = nr_seq_mat_fornec_w;
				END LOOP;
			CLOSE c02;
		elsif (coalesce(qt_mat_fornec_w,0) = 0) AND (coalesce(ie_acao_executada_p,0) = 1) THEN
			SELECT nextval('convenio_preco_mat_fornec_seq')
			INTO STRICT nr_seq_mat_fornec_nova_w
			;
			INSERT
			INTO convenio_preco_mat_fornec(
			CD_MATERIAL,
			DT_ATUALIZACAO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO,
			NM_USUARIO_NREC,
			NR_SEQ_CONV_PRECO,
			NR_SEQ_MARCA,
			NR_SEQUENCIA,
			VL_MATERIAL
			)
			SELECT CD_MATERIAL,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_fornec_w,
			NR_SEQ_MARCA,
			nr_seq_mat_fornec_nova_w,
			vl_material_p
			FROM convenio_preco_mat_fornec
			WHERE nr_sequencia = nr_seq_material_p;
		END IF;
	END LOOP;
  CLOSE c01;
END IF;
COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_preco_mat_fornec_multi (cd_estabelecimento_p bigint, cd_convenio_p text, ie_tipo_acao_p text, nm_usuario_p text, nr_seq_material_p bigint, vl_material_p bigint, ie_acao_executada_p bigint) FROM PUBLIC;

