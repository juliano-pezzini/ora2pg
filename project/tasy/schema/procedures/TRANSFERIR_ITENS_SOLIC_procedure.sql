-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transferir_itens_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nm_usuario_p text, nr_solic_compra_nova_p INOUT bigint) AS $body$
DECLARE


qt_existe_w			integer;
dt_liberacao_w			timestamp;
dt_baixa_w			timestamp;
nr_seq_motivo_cancel_w		bigint;
nr_solic_compra_w			bigint;
nr_item_solic_compra_w		integer;
cd_local_estoque_w		bigint;
cd_estabelecimento_w		bigint;


BEGIN

if (coalesce(nr_solic_compra_nova_p,0) > 0) then
	select	count(*)
	into STRICT	qt_existe_w
	from	solic_compra
	where	nr_solic_compra = nr_solic_compra_nova_p;
	if (qt_existe_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266346,'NR_SOLIC_COMPRA=' || nr_solic_compra_nova_p);
		--'Não existe solicitação de número = ' || nr_solic_compra_nova_p);
	end if;

	select	dt_liberacao,
		dt_baixa,
		nr_seq_motivo_cancel
	into STRICT	dt_liberacao_w,
		dt_baixa_w,
		nr_seq_motivo_cancel_w
	from	solic_compra
	where	nr_solic_compra = nr_solic_compra_nova_p;

	if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266347);
		--'Esta solicitação já está liberada');
	end if;

	if (nr_seq_motivo_cancel_w > 0) or (dt_baixa_w IS NOT NULL AND dt_baixa_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266348);
		--'Esta solicitação está baixada ou cancelada');
	end if;
end if;

nr_solic_compra_w		:= nr_solic_compra_nova_p;

if (coalesce(nr_solic_compra_nova_p,0) = 0) then

	select	nextval('solic_compra_seq')
	into STRICT	nr_solic_compra_w
	;

	nr_solic_compra_nova_p	:= nr_solic_compra_w;

	insert into solic_compra(
		nr_solic_compra,		cd_estabelecimento,	dt_solicitacao_compra,
		dt_atualizacao,		nm_usuario,		ie_situacao,
		cd_pessoa_solicitante,	cd_local_estoque,		cd_centro_custo,
		cd_conta_contabil,		cd_setor_atendimento,	ds_observacao,
		ie_aviso_chegada,		nr_seq_ordem_serv,	ie_aviso_aprov_oc,
		ie_urgente,		nr_documento_externo,	ie_forma_exportar,
		nr_seq_planejamento,	nr_seq_proj_gpi,		nr_seq_etapa_gpi,
		nr_seq_conta_gpi,		cd_comprador_resp,	ie_tipo_solicitacao,
		nr_seq_ressup_fornec,	ie_comodato,		ie_semanal,
		nm_usuario_nrec,	dt_atualizacao_nrec)
	SELECT	nr_solic_compra_w,		cd_estabelecimento,	clock_timestamp(),
		clock_timestamp(),			nm_usuario_p,		'A',
		cd_pessoa_solicitante,	cd_local_estoque,		cd_centro_custo,
		cd_conta_contabil,		cd_setor_atendimento,	ds_observacao,
		ie_aviso_chegada,		nr_seq_ordem_serv,	ie_aviso_aprov_oc,
		ie_urgente,		nr_documento_externo,	ie_forma_exportar,
		nr_seq_planejamento,	nr_seq_proj_gpi,		nr_seq_etapa_gpi,
		nr_seq_conta_gpi,		cd_comprador_resp,	'6',
		nr_seq_ressup_fornec,	ie_comodato,		ie_semanal,
		nm_usuario_p,		clock_timestamp()
	from	solic_compra
	where	nr_solic_compra = nr_solic_compra_p;
end if;

select	coalesce(max(nr_item_solic_compra), 0) + 1
into STRICT	nr_item_solic_compra_w
from	solic_compra_item
where	nr_solic_compra = nr_solic_compra_nova_p;

select	cd_local_estoque,
	cd_estabelecimento
into STRICT	cd_local_estoque_w,
	cd_estabelecimento_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_nova_p;

insert into solic_compra_item(
	nr_solic_compra,			nr_item_solic_compra,	cd_material,
	cd_unidade_medida_compra,		qt_material,		dt_atualizacao,
	nm_usuario,			ie_situacao,		ds_material_direto,
	ds_observacao,			dt_solic_item,		ie_geracao,
	nr_seq_proj_rec,			nr_solic_compra_ref,	nr_item_solic_compra_ref,
	ie_forma_exportar,		qt_conv_compra_est_orig,
	qt_saldo_disp_estoque,
	vl_unit_previsto,
	vl_custo_total,
	vl_estoque_total)
SELECT	nr_solic_compra_w,			nr_item_solic_compra_w,		cd_material,
	cd_unidade_medida_compra,		qt_material,			clock_timestamp(),
	nm_usuario_p,			ie_situacao,			ds_material_direto,
	ds_observacao,			dt_solic_item,			ie_geracao,
	nr_seq_proj_rec,			nr_solic_compra_ref,		nr_item_solic_compra_ref,
	ie_forma_exportar,		obter_dados_material(cd_material,'QCE'),
	obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material, cd_local_estoque_w, trunc(clock_timestamp(),'mm')),
	vl_unit_previsto,
	vl_custo_total,
	vl_estoque_total
from	solic_compra_item
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_p;

insert into solic_compra_item_entrega(
	nr_solic_compra,
	nr_item_solic_compra,
	nr_item_solic_compra_entr,
	qt_entrega_solicitada,
	dt_entrega_solicitada,
	dt_atualizacao,
	nm_usuario,
	ds_observacao)
SELECT	nr_solic_compra_w,
	nr_item_solic_compra_w,
	nr_item_solic_compra_entr,
	qt_entrega_solicitada,
	dt_entrega_solicitada,
	dt_atualizacao,
	nm_usuario,
	ds_observacao
from	solic_compra_item_entrega
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_p;

delete
from	solic_compra_item
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transferir_itens_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nm_usuario_p text, nr_solic_compra_nova_p INOUT bigint) FROM PUBLIC;

