-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_ci_gera_aprov_cot ( nr_cot_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_regra_w			bigint;
cd_perfil_w			varchar(10);
cd_setor_regra_usuario_w		integer;
ds_setor_adicional_w      	varchar(2000) := '';
cd_material_w			integer;
ds_lista_itens_w			varchar(2000);
ds_lista_itens_est_w		varchar(2000);
ds_lista_todos_itens_w		varchar(2000);
nm_usuario_destino_w		varchar(255);
ds_titulo_w			varchar(80);
ds_comunic_w			varchar(2000);
ie_ci_lida_w			varchar(1);
nr_seq_comunic_w			bigint;
nr_seq_classif_w			bigint;
cd_perfil_ww			varchar(1000);
cd_estabelecimento_w		integer;
nm_comprador_w			varchar(255);

c00 CURSOR FOR	 
SELECT	b.nr_sequencia, 
	b.cd_perfil 
from	regra_envio_comunic_compra a, 
	regra_envio_comunic_evento b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_funcao = 915 
and	b.cd_evento = 63 
and	b.ie_situacao = 'A' 
and	a.cd_estabelecimento = 	cd_estabelecimento_w 
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_cot_compra_p,'CC',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

c01 CURSOR FOR 
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento 
from	regra_envio_comunic_usu a 
where	a.nr_seq_evento = nr_seq_regra_w;

c02 CURSOR FOR 
SELECT	distinct(a.cd_material) 
from	cot_compra_forn_item a, 
    	cot_compra_item b 
where	a.nr_cot_compra		= b.nr_cot_compra 
and	a.nr_item_cot_compra	= b.nr_item_cot_compra 
and	b.nr_cot_compra		= nr_cot_compra_p 
and 	not exists ( 
		SELECT	d.nr_cot_compra 
		from	cot_compra_forn_item d 
		where	d.nr_cot_compra		= a.nr_cot_compra 
		and	d.nr_item_cot_compra	= a.nr_item_cot_compra 
		and	d.vl_unitario_material	<> 0);

c03 CURSOR FOR	 
SELECT	distinct(obter_controlador_estoque(a.cd_material)) 
from	cot_compra_forn_item a, 
    	cot_compra_item b 
where	a.nr_cot_compra		= b.nr_cot_compra 
and	a.nr_item_cot_compra	= b.nr_item_cot_compra 
and	b.nr_cot_compra		= nr_cot_compra_p 
and 	not exists ( 
		SELECT	d.nr_cot_compra 
		from	cot_compra_forn_item d 
		where	d.nr_cot_compra		= a.nr_cot_compra 
		and	d.nr_item_cot_compra	= a.nr_item_cot_compra 
		and	d.vl_unitario_material	<> 0);

c04 CURSOR FOR 
SELECT	distinct a.cd_material 
from	cot_compra_item a 
where	a.nr_cot_compra		= nr_cot_compra_p;


BEGIN 
 
select	cd_estabelecimento, 
	sup_obter_nome_comprador(cd_estabelecimento, cd_comprador) 
into STRICT	cd_estabelecimento_w, 
	nm_comprador_w 
from	cot_compra 
where	nr_cot_compra = nr_cot_compra_p;
 
open c00;
loop 
fetch c00 into 
	nr_seq_regra_w, 
	cd_perfil_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin 
 
	/*Obter setores adicionais*/
 
	open c01;
	loop 
	fetch c01 into 
		cd_setor_regra_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then 
			ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
		end if;
		end;
	end loop;
	close C01;
 
	/*Obter lista de materiais não cotados*/
 
	open c02;
	loop 
	fetch c02 into	 
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		ds_lista_itens_w := substr(ds_lista_itens_w || cd_material_w || ' - ' || obter_desc_material(cd_material_w) || chr(13) || chr(10),1,2000);
		end;
	end loop;
	close c02;
 
	ds_lista_itens_w	:= substr(ds_lista_itens_w,1,length(ds_lista_itens_w)-2);
 
	if (coalesce(ds_lista_itens_w::text, '') = '') then 
		ds_lista_itens_w := wheb_mensagem_pck.get_texto(299980);
	end if;
 
	/*Obter lista de materiais não cotados (estoque)*/
 
	open c03;
	loop 
	fetch c03 into	 
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
		ds_lista_itens_est_w := substr(ds_lista_itens_est_w || cd_material_w || ' - ' || obter_desc_material(cd_material_w) || chr(13) || chr(10),1,2000);
		end;
	end loop;
	close c03;
	 
	ds_lista_itens_est_w	:= substr(ds_lista_itens_est_w,1,length(ds_lista_itens_est_w)-2);
		 
	if (coalesce(ds_lista_itens_est_w::text, '') = '') then 
		ds_lista_itens_est_w := wheb_mensagem_pck.get_texto(299980);
	end if;
	 
	 
	/*Obter lista de todos os materiais da cotação*/
 
	open c04;
	loop 
	fetch c04 into	 
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin 
		ds_lista_todos_itens_w := substr(ds_lista_todos_itens_w || cd_material_w || ' - ' || obter_desc_material(cd_material_w) || chr(13) || chr(10),1,2000);
		end;
	end loop;
	close c04;
	 
	ds_lista_todos_itens_w	:= substr(ds_lista_todos_itens_w,1,length(ds_lista_todos_itens_w)-2);	
 
	nm_usuario_destino_w := obter_usuarios_comunic_compras(nr_cot_compra_p,null,63,nr_seq_regra_w,null);
 
	select	max(b.ds_titulo), 
		max(substr(b.ds_comunicacao, 1, 2000)) 
	into STRICT	ds_titulo_w, 
		ds_comunic_w 
	from	regra_envio_comunic_compra a, 
		regra_envio_comunic_evento b 
	where	a.nr_sequencia = b.nr_seq_regra 
	and	b.cd_evento = 63 
	and	a.cd_estabelecimento = cd_estabelecimento_w 
	and	b.nr_sequencia = nr_seq_regra_w;
 
	ds_comunic_w := substr(replace_macro(ds_comunic_w, '@nr_documento', nr_cot_compra_p), 1, 2000);
	ds_comunic_w := substr(replace_macro(ds_comunic_w, '@comprador', nm_comprador_w), 1, 2000);
	ds_comunic_w := substr(replace_macro(ds_comunic_w, '@itens_est_nao_cotados', ds_lista_itens_est_w), 1, 2000);
	ds_comunic_w := substr(replace_macro(ds_comunic_w, '@itens', ds_lista_todos_itens_w), 1, 2000);
	ds_comunic_w := substr(replace_macro(ds_comunic_w, '@itens_nao_cotados', ds_lista_itens_w), 1, 2000);
 
	select	coalesce(ie_ci_lida,'N') 
	into STRICT	ie_ci_lida_w 
	from 	regra_envio_comunic_evento 
	where 	nr_sequencia = nr_seq_regra_w;
 
	if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then 
		begin 
 
		select	nextval('comunic_interna_seq') 
		into STRICT	nr_seq_comunic_w 
		;
 
		select	obter_classif_comunic('F') 
		into STRICT	nr_seq_classif_w 
		;
			 
		if (cd_perfil_ww IS NOT NULL AND cd_perfil_ww::text <> '') then 
			cd_perfil_ww := cd_perfil_ww ||',';
		end if;
		 
		insert	into comunic_interna( 
			cd_estab_destino,				dt_comunicado,				ds_titulo, 
			ds_comunicado,				nm_usuario,				dt_atualizacao, 
			ie_geral,					nm_usuario_destino,			nr_sequencia, 
			ie_gerencial,				nr_seq_classif,				dt_liberacao, 
			ds_perfil_adicional,				ds_setor_adicional) 
		values (	cd_estabelecimento_w,			clock_timestamp(),					ds_titulo_w, 
			ds_comunic_w,				nm_usuario_p,				clock_timestamp(), 
			'N',					nm_usuario_destino_w,			nr_seq_comunic_w, 
			'N',					nr_seq_classif_w,				clock_timestamp(), 
			cd_perfil_ww,				ds_setor_adicional_w);
 
		/*Para que a comunicação seja gerada como lida ao próprio usuário */
 
		if (ie_ci_lida_w = 'S') then 
			insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
		end if;
 
		end;
	end if;
 
	end;
end loop;
close c00;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_ci_gera_aprov_cot ( nr_cot_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

