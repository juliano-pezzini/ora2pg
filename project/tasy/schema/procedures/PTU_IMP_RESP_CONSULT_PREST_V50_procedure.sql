-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_imp_resp_consult_prest_v50 ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Importar consulta prestador

Rotina utilizada nas transações ptu via scs homologadas com a unimed brasil.
quando for alterar, favor verificar com o análista responsável para a realização de testes.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
Perfomance
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_importacao_w		bigint;
ds_conteudo_w			varchar(4000);
cd_transacao_w			varchar(5);
ie_tipo_cliente_w		varchar(15);
cd_unimed_exec_w		smallint;
cd_unimed_benef_w		smallint;
nr_seq_execucao_w		bigint;
nr_seq_origem_w			bigint;
ie_confirmacao_w		varchar(2);
cd_mens_erro_w			smallint;
nr_seq_resp_consulta_w		bigint;
nr_seq_requisicao_w		bigint;
nr_seq_guia_w			bigint;
nm_prestador_w			varchar(40);
cd_unimed_prestador_w		smallint;
cd_prestador_w			integer;
cd_especialidade_w		smallint;
ie_alto_custo_w			varchar(2);
nr_seq_transacao_w		bigint;
nr_versao_w			varchar(3);

c01 CURSOR FOR
	SELECT	nr_seq_importacao,
		ds_valores
	from	w_scs_importacao
	where	nm_usuario	= nm_usuario_p
	order by nr_seq_importacao;


BEGIN

open c01;
loop
fetch c01 into
	nr_seq_importacao_w,
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (substr(ds_conteudo_w,1,4)	<> 'FIM$') then
		if (nr_seq_importacao_w	= 1) then
			select 	substr(ds_conteudo_w,1,5),
				trim(both substr(ds_conteudo_w,6,15)),
				CASE WHEN (substr(ds_conteudo_w,21,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,21,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,25,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,25,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,29,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,29,10))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,39,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,39,10))::numeric  END ,
				trim(both substr(ds_conteudo_w,49,1)),
				CASE WHEN (substr(ds_conteudo_w,50,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,50,4))::numeric  END ,
				trim(both substr(ds_conteudo_w,54,3))
			into STRICT    cd_transacao_w,
				ie_tipo_cliente_w,
				cd_unimed_exec_w,
				cd_unimed_benef_w,
				nr_seq_execucao_w,
				nr_seq_origem_w,
				ie_confirmacao_w,
				cd_mens_erro_w,
				nr_versao_w
			;

			if (ie_tipo_cliente_w	= 'UNIMED') then
				ie_tipo_cliente_w	:= 'U';
			elsif (ie_tipo_cliente_w	= 'PORTAL') then
				ie_tipo_cliente_w	:= 'P';
			elsif (ie_tipo_cliente_w	= 'PRESTADOR') then
				ie_tipo_cliente_w	:= 'R';
			end if;

			select	nextval('ptu_resp_consulta_prest_seq')
			into STRICT	nr_seq_resp_consulta_w
			;

			insert	into ptu_resp_consulta_prest(nr_sequencia, cd_transacao, ie_tipo_cliente,
				 cd_unimed_executora, nr_seq_execucao, cd_unimed_beneficiario,
				 ie_confirmacao, nr_seq_origem, dt_atualizacao,
				 nm_usuario, nr_seq_guia, nr_seq_requisicao,
				 ds_arquivo_pedido,cd_mensagem_erro, nm_usuario_nrec,
				 dt_atualizacao_nrec, nr_versao)
			values (nr_seq_resp_consulta_w, cd_transacao_w, ie_tipo_cliente_w,
				 cd_unimed_exec_w, nr_seq_execucao_w, cd_unimed_benef_w,
				 ie_confirmacao_w, nr_seq_origem_w, clock_timestamp(),
				 nm_usuario_p, nr_seq_guia_w, nr_seq_requisicao_w,
				 ds_arquivo_p, cd_mens_erro_w, nm_usuario_p,
				 clock_timestamp(), nr_versao_w);

			if (nr_seq_execucao_w IS NOT NULL AND nr_seq_execucao_w::text <> '')then
				nr_seq_transacao_w 	:= nr_seq_execucao_w;
			else
				nr_seq_transacao_w	:= nr_seq_requisicao_w;
			end if;

			if (cd_mens_erro_w	<> 0) then
				CALL ptu_inserir_inconsistencia(	null, null, cd_mens_erro_w, '', cd_estabelecimento_p, nr_seq_resp_consulta_w, 'CP',
								cd_transacao_w, null, null, null, nm_usuario_p);
			end if;
		elsif (nr_seq_importacao_w	>= 2) then
			select 	trim(both substr(ds_conteudo_w,1,40)),
				CASE WHEN (substr(ds_conteudo_w,41,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,41,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,45,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,45,8))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,53,2))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,53,2))::numeric  END ,
				trim(both substr(ds_conteudo_w,55,1))
			into STRICT    nm_prestador_w,
				cd_unimed_prestador_w,
				cd_prestador_w,
				cd_especialidade_w,
				ie_alto_custo_w
			;

			insert	into ptu_resp_nomes_prest(nr_sequencia, cd_unimed_prestador, ie_alto_custo,
				 nm_prestador, cd_prestador, nr_seq_resp_prest,
				 dt_atualizacao, nm_usuario, cd_especialidade,
				 nm_usuario_nrec, dt_atualizacao_nrec)
			values (nextval('ptu_resp_nomes_prest_seq'), cd_unimed_prestador_w, ie_alto_custo_w,
				 nm_prestador_w, cd_prestador_w, nr_seq_resp_consulta_w,
				 clock_timestamp(), nm_usuario_p, cd_especialidade_w,
				 nm_usuario_p, clock_timestamp());
		end if;
	end if;
	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_resp_consult_prest_v50 ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

