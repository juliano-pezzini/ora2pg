-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qua_gravar_doc_log_acesso (nr_seq_docto_p bigint, ie_log_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_doc_inferior_w		bigint;
nr_seq_doc_superior_w		bigint;
ie_doc_pai_w			varchar(1);

C01 CURSOR FOR
SELECT	nr_sequencia
from	qua_documento
where	nr_seq_superior = nr_seq_doc_superior_w;


BEGIN

insert  into qua_doc_log_acesso(
	dt_acesso,
	dt_atualizacao,
	nm_usuario,
	nr_seq_doc,
	nr_sequencia,
	dt_atualizacao_nrec,
	dt_leitura,
	ie_log,
	nm_usuario_nrec,
	cd_estabelecimento,
	cd_funcao,
	ie_doc_resp)
values ( clock_timestamp(),
	clock_timestamp(),
	nm_usuario_p,
	nr_seq_docto_p,
	nextval('qua_doc_log_acesso_seq'),
	clock_timestamp(),
	clock_timestamp(),
	ie_log_p,
	nm_usuario_p,
	wheb_usuario_pck.get_cd_estabelecimento,
	wheb_usuario_pck.get_cd_funcao,
	'N');

select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
into STRICT	ie_doc_pai_w
from	qua_documento
where	nr_sequencia = nr_seq_docto_p
and		coalesce(nr_seq_superior::text, '') = '';

if (ie_doc_pai_w = 'S') then
	nr_seq_doc_superior_w := nr_seq_docto_p;
else
begin

	select	max(nr_seq_superior)
	into STRICT 	nr_seq_doc_superior_w
	from	qua_documento
	where	nr_sequencia = nr_seq_docto_p;

	insert  into qua_doc_log_acesso(
				dt_acesso,
				dt_atualizacao,
				nm_usuario,
				nr_seq_doc,
				nr_sequencia,
				dt_atualizacao_nrec,
				dt_leitura,
				ie_log,
				nm_usuario_nrec,
				cd_estabelecimento,
				cd_funcao,
				ie_doc_resp)
	values ( 	clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_doc_superior_w,
				nextval('qua_doc_log_acesso_seq'),
				clock_timestamp(),
				clock_timestamp(),
				ie_log_p,
				nm_usuario_p,
				wheb_usuario_pck.get_cd_estabelecimento,
				wheb_usuario_pck.get_cd_funcao,
				'N');

end;

end if;

open C01;
loop
fetch C01 into
	nr_seq_doc_inferior_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
begin

insert  into qua_doc_log_acesso(
			dt_acesso,
			dt_atualizacao,
			nm_usuario,
			nr_seq_doc,
			nr_sequencia,
			dt_atualizacao_nrec,
			dt_leitura,
			ie_log,
			nm_usuario_nrec,
			cd_estabelecimento,
			cd_funcao,
			ie_doc_resp)
values ( 	clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_doc_inferior_w,
			nextval('qua_doc_log_acesso_seq'),
			clock_timestamp(),
			clock_timestamp(),
			ie_log_p,
			nm_usuario_p,
			wheb_usuario_pck.get_cd_estabelecimento,
			wheb_usuario_pck.get_cd_funcao,
			'N');

end;

end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qua_gravar_doc_log_acesso (nr_seq_docto_p bigint, ie_log_p text, nm_usuario_p text) FROM PUBLIC;

