-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_cad_pag_inter_js ( nr_seq_pagador_p bigint, nr_seq_intercambio_p bigint, ie_tipo_pagador_p text, ie_calc_primeira_mens_p text, ie_calculo_proporcional_p text, cd_pessoa_fisica_p text, cd_cgc_p text, ie_acao_executada_p bigint, ie_erro_abort_p INOUT text, ds_erro_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_pagador_aux_w		bigint;
cd_pf_cgc_aux_w			varchar(20);
ie_consistir_enderec_w		varchar(20);
ds_erro_w			varchar(255);


BEGIN

ie_erro_abort_p	:= 'S';

if (ie_acao_executada_p in (1,2)) then
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_pagador_aux_w
	from	pls_contrato_pagador
	where	ie_tipo_pagador	= 'P'
	and	nr_sequencia	<> nr_seq_pagador_p
	and	nr_seq_pagador_intercambio = nr_seq_intercambio_p;

	/*Deve-se informar um responsável pagador principal para este contrato. Verifique!*/

	if (ie_tipo_pagador_p <> 'P') and (nr_seq_pagador_aux_w = 0) then
		ds_erro_w	:= substr(obter_texto_dic_objeto(26598,wheb_usuario_pck.GET_NR_SEQ_IDIOMA,''),1,255);
		goto final;
	end if;

	/*Já existe um responsável pagador principal para este contrato. Verifique!*/

	if (ie_tipo_pagador_p = 'P') and (nr_seq_pagador_aux_w > 0) then
		ds_erro_w	:= substr(obter_texto_dic_objeto(26599,wheb_usuario_pck.GET_NR_SEQ_IDIOMA,''),1,255);
		goto final;
	end if;

	/*Deve ser informado a data de referência para o cálculo proporcional. Verifique!*/

	if (ie_calc_primeira_mens_p = 'P') and (coalesce(ie_calculo_proporcional_p::text, '') = '') then
		ds_erro_w	:= substr(obter_texto_dic_objeto(241335,wheb_usuario_pck.GET_NR_SEQ_IDIOMA,''),1,255);
		goto final;
	end if;
end if;

/*Informe um pagador válido!*/

if (coalesce(cd_pessoa_fisica_p::text, '') = '') and (coalesce(cd_cgc_p::text, '') = '') then
	ds_erro_w	:= substr(obter_texto_dic_objeto(26600,wheb_usuario_pck.GET_NR_SEQ_IDIOMA,''),1,255);
	goto final;
end if;

/*Informe apenas um pagador!*/

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
	ds_erro_w	:= substr(obter_texto_dic_objeto(26601,wheb_usuario_pck.GET_NR_SEQ_IDIOMA,''),1,255);
	goto final;
end if;

begin
select	coalesce(cd_pessoa_fisica,cd_cgc)
into STRICT	cd_pf_cgc_aux_w
from	pls_contrato_pagador
where	nr_sequencia		<> nr_seq_pagador_p
and	nr_seq_pagador_intercambio	= nr_seq_intercambio_p
and (cd_pessoa_fisica	= cd_pessoa_fisica_p
or	cd_cgc			= cd_cgc_p);
exception
when others then
	cd_pf_cgc_aux_w	:= '';
end;

/*Atenção! Pagador já cadastrado*/

if (cd_pf_cgc_aux_w IS NOT NULL AND cd_pf_cgc_aux_w::text <> '') then
	ds_erro_w	:= substr(obter_texto_dic_objeto(26651,wheb_usuario_pck.GET_NR_SEQ_IDIOMA,''),1,255);
	goto final;
end if;

<<final>>
ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_cad_pag_inter_js ( nr_seq_pagador_p bigint, nr_seq_intercambio_p bigint, ie_tipo_pagador_p text, ie_calc_primeira_mens_p text, ie_calculo_proporcional_p text, cd_pessoa_fisica_p text, cd_cgc_p text, ie_acao_executada_p bigint, ie_erro_abort_p INOUT text, ds_erro_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

