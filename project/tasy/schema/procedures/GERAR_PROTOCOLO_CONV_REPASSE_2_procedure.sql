-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_protocolo_conv_repasse_2 ( nr_seq_protocolo_p bigint, nm_usuario_p text, ie_gerar_repasse_p text) AS $body$
DECLARE


ie_repasse_mat_w		varchar(1);
ie_repasse_proc_w		varchar(1);
ie_repasse_mat_conv_w		varchar(1)	:= null;
ie_repasse_proc_conv_w		varchar(1)	:= null;
vl_material_w			double precision;
cd_estabelecimento_w		smallint;
cd_convenio_protocolo_w		integer;
cd_edicao_amb_w			integer;
ie_tipo_convenio_w		integer;
vl_repasse_proc_w		double precision;
vl_repasse_mat_w		double precision;
cd_regra_w			bigint;


ie_pagto_w			varchar(1);
nr_titulo_w			varchar(255);
nr_nota_fiscal_w			varchar(255);
qt_contador_pb_w			bigint;
ds_log_repasse_w		varchar(4000) := '';
ie_gravar_log_w			varchar(1) := 'N';
ie_gravar_log_proc_w		parametro_repasse.ie_gravar_log_proc%type;
ie_gravar_log_mat_w		parametro_repasse.ie_gravar_log_mat%type;

c_contas CURSOR(	nr_seq_protocolo_pc	protocolo_convenio.nr_seq_protocolo%type) FOR
	SELECT	a.nr_interno_conta,
		b.cd_medico_resp,
		ie_tipo_atendimento,
		cd_convenio_parametro,
		cd_categoria_parametro,
		dt_entrada
	from	atendimento_paciente b,
		conta_paciente a
	where	a.nr_atendimento		= b.nr_atendimento
	and	a.nr_seq_protocolo	= nr_seq_protocolo_pc;

c_procedimentos CURSOR(	nr_interno_conta_pc	conta_paciente.nr_interno_conta%type) FOR
	SELECT	nr_sequencia
	from	procedimento_paciente a
	where	nr_interno_conta	= nr_interno_conta_pc
	and 	coalesce(cd_motivo_exc_conta::text, '') = '';

c_materiais CURSOR(	nr_interno_conta_pc	conta_paciente.nr_interno_conta%type) FOR
	SELECT	nr_sequencia
	from	material_atend_paciente
	where	nr_interno_conta	= nr_interno_conta_pc
	and 	coalesce(cd_motivo_exc_conta::text, '') = '';

BEGIN

qt_contador_pb_w := 0;
CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(1010892) ,'GERAR_PROTOCOLO_CONV_REPASSE',qt_contador_pb_w);
if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then

	select 	coalesce(max(c.ie_repasse_mat),'N'),
		coalesce(max(c.ie_repasse_proc),'N'),
		max(a.cd_estabelecimento),
		OBTER_TIPO_CONVENIO(max(a.cd_convenio)),
		max(cd_convenio),
		max(substr(obter_titulo_conta_protocolo(a.nr_seq_protocolo,0),1,254)),
		max(substr(obter_nota_conta_protocolo(a.nr_seq_protocolo,0),1,254))
	into STRICT	ie_repasse_mat_w,
		ie_repasse_proc_w,
		cd_estabelecimento_w,
		ie_tipo_convenio_w,
		cd_convenio_protocolo_w,
		nr_titulo_w,
		nr_nota_fiscal_w
	from	parametro_faturamento c,
		protocolo_convenio a
	where	a.cd_estabelecimento	= c.cd_estabelecimento
	and	a.nr_seq_protocolo	= nr_seq_protocolo_p;

	begin
	select	ie_gravar_log_proc,
		ie_gravar_log_mat
	into STRICT	ie_gravar_log_proc_w,
		ie_gravar_log_mat_w
	from	parametro_repasse
	where	cd_estabelecimento = cd_estabelecimento_w;
	exception
	when others then
		ie_gravar_log_proc_w	:= 'N';
		ie_gravar_log_mat_w	:= 'N';
	end;

end if;

ie_repasse_proc_conv_w	:= Obter_Valor_Conv_Estab(cd_convenio_protocolo_w,cd_estabelecimento_w,'IE_REPASSE_PROC');
ie_repasse_mat_conv_w	:= Obter_Valor_Conv_Estab(cd_convenio_protocolo_w,cd_estabelecimento_w,'IE_REPASSE_MAT');

if (ie_repasse_proc_conv_w IS NOT NULL AND ie_repasse_proc_conv_w::text <> '') then
	ie_repasse_proc_w := ie_repasse_proc_conv_w;
end if;

if (ie_repasse_mat_conv_w IS NOT NULL AND ie_repasse_mat_conv_w::text <> '') then
	ie_repasse_mat_w := ie_repasse_mat_conv_w;
end if;

for	r_c_contas in c_contas(nr_seq_protocolo_p) loop
	ds_log_repasse_w := '';
	qt_contador_pb_w := qt_contador_pb_w + 1;
	CALL gravar_processo_longo(r_c_contas.nr_interno_conta,'GERAR_PROTOCOLO_CONV_REPASSE',qt_contador_pb_w);
	begin
	cd_edicao_amb_w	:= obter_edicao(cd_estabelecimento_w, r_c_contas.cd_convenio_parametro, r_c_contas.cd_categoria_parametro, r_c_contas.dt_entrada, null);
	exception
	when others then

		select	max(cd_edicao_amb)
		into STRICT	cd_edicao_amb_w
		from	convenio_amb
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_convenio		= r_c_contas.cd_convenio_parametro
		and	cd_categoria		= r_c_contas.cd_categoria_parametro
		and (coalesce(ie_situacao,'A')	= 'A')
		and	dt_inicio_vigencia	=
			(SELECT	max(dt_inicio_vigencia)
			from	convenio_amb a
			where	a.cd_estabelecimento  = cd_estabelecimento_w
			and	a.cd_convenio         = r_c_contas.cd_convenio_parametro
			and	a.cd_categoria        = r_c_contas.cd_categoria_parametro
			and (coalesce(a.ie_situacao,'A')= 'A')
			and	a.dt_inicio_vigencia <=  r_c_contas.dt_entrada);
	end;
	
	for	r_c_procedimentos in c_procedimentos(r_c_contas.nr_interno_conta) loop
		
		ie_gravar_log_w := 'N';
		if	((ie_repasse_proc_w = 'P') and (coalesce(ie_gerar_repasse_p,'P') <> 'T')) or
			(ie_repasse_proc_w = 'T' AND nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') or
			((ie_repasse_proc_w = 'G') and (coalesce(ie_gerar_repasse_p,'P') = 'G') 	and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '')) then
			
			CALL gerar_procedimento_repasse(	r_c_procedimentos.nr_sequencia, 
							cd_estabelecimento_w,
							r_c_contas.cd_medico_resp,
							nm_usuario_p,
							cd_edicao_amb_w,
							r_c_contas.cd_convenio_parametro,
							r_c_contas.ie_tipo_atendimento,
							null,
							null,
							null);
		else
			if (ie_gravar_log_proc_w = 'S') then
				ds_log_repasse_w := substr(ds_log_repasse_w||';CD_EDICAO_AMB_W='|| cd_edicao_amb_w ||
									';ie_repasse_proc_w='|| ie_repasse_proc_w ||
									';ie_gerar_repasse_p='|| ie_gerar_repasse_p ||
									';nr_nota_fiscal_w='|| nr_nota_fiscal_w ||
									';nr_titulo_w='|| nr_titulo_w ||
									';cd_convenio_parametro='|| r_c_contas.cd_convenio_parametro ||
									';cd_estabelecimento_w='|| cd_estabelecimento_w,1,4000);
				ie_gravar_log_w := 'S';
			end if;	
		end if;

		select	max(a.cd_regra)
		into STRICT	cd_regra_w
		from	procedimento_repasse a
		where	a.nr_seq_procedimento	= r_c_procedimentos.nr_sequencia;
		
		begin
		select	a.ie_pagto
		into STRICT	ie_pagto_w
		from	regra_repasse_terceiro a
		where	a.cd_regra	= cd_regra_w  LIMIT 1;
		exception
		when others then
			ie_pagto_w	:= null;
		end;	
		
		if (ie_pagto_w	= 'F') then

			update	procedimento_repasse
			set	vl_liberado	= vl_repasse,
				dt_liberacao	= clock_timestamp(),
				nm_usuario_lib	= nm_usuario_p,
				ie_status	= 'S'
			where	nr_seq_procedimento	= r_c_procedimentos.nr_sequencia;

		end if;
		
		if (ie_gravar_log_w = 'S') and (ie_gravar_log_proc_w = 'S') then
			begin
			ds_log_repasse_w := substr(ds_log_repasse_w||';cd_regra_w='|| cd_regra_w ||';ie_pagto_w='|| ie_pagto_w ,1,4000);								
			CALL grava_log_geracao_repasse(null,r_c_contas.nr_interno_conta,r_c_procedimentos.nr_sequencia,null,null,null,null,null,ds_log_repasse_w,nm_usuario_p,nr_seq_protocolo_p);
			end;
		end if;
	--fim do cursor dos procedimentos
	END	LOOP;
	
	if	((ie_repasse_mat_w	= 'P') and (coalesce(ie_gerar_repasse_p,'P') <> 'T')) or
		(ie_repasse_mat_w	= 'T' AND nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') or
		((ie_repasse_mat_w	= 'G') and (coalesce(ie_gerar_repasse_p,'P') = 'G') 	and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '')) then

		CALL gerar_material_repasse_conta(	r_c_contas.nr_interno_conta,
						cd_estabelecimento_w,
						r_c_contas.cd_medico_resp,
						nm_usuario_p,
						cd_edicao_amb_w,
						r_c_contas.cd_convenio_parametro,
						r_c_contas.ie_tipo_atendimento,
						null,
						null);	
	else
		if (ie_gravar_log_mat_w = 'S') then
			ds_log_repasse_w := substr(ds_log_repasse_w||';CD_EDICAO_AMB_W='|| cd_edicao_amb_w ||
								';ie_repasse_mat_w='|| ie_repasse_mat_w ||
								';ie_gerar_repasse_p='|| ie_gerar_repasse_p ||
								';nr_nota_fiscal_w='|| nr_nota_fiscal_w ||
								';nr_titulo_w='|| nr_titulo_w ||
								';cd_convenio_parametro='|| r_c_contas.cd_convenio_parametro ||
								';cd_estabelecimento_w='|| cd_estabelecimento_w,1,4000);
			ie_gravar_log_w := 'S';
		end if;	
	end if;

	if	(((ie_repasse_mat_w 	= 'P') and (coalesce(ie_gerar_repasse_p,'P') <> 'T')) or
		(ie_repasse_mat_w	= 'T' AND nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '')) or
		((ie_repasse_mat_w	= 'G') and (coalesce(ie_gerar_repasse_p,'P') = 'G') and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '')) or
		(((ie_repasse_proc_w 	= 'P') and (coalesce(ie_gerar_repasse_p,'P') <> 'T')) or
		(ie_repasse_proc_w  	= 'T' AND nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '' AND nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '')) or
		((ie_repasse_proc_w	= 'G') and (coalesce(ie_gerar_repasse_p,'P') = 'G') and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '')) then

		select	sum(vl_repasse)
		into STRICT	vl_repasse_proc_w
		from	procedimento_repasse a,
			procedimento_paciente b
		where	a.nr_seq_procedimento	= b.nr_sequencia
		and	b.nr_interno_conta		= r_c_contas.nr_interno_conta;

		select	sum(vl_repasse)
		into STRICT	vl_repasse_mat_w
		from	material_repasse a,
			material_atend_paciente b
		where	a.nr_seq_material		= b.nr_sequencia
		and	b.nr_interno_conta		= r_c_contas.nr_interno_conta;

		update	conta_paciente
		set	vl_repasse_conta	= coalesce(vl_repasse_mat_w,0) + coalesce(vl_repasse_proc_w,0)
		where	nr_interno_conta	= r_c_contas.nr_interno_conta;
		
		CALL atualizar_resumo_conta(r_c_contas.nr_interno_conta,2);					
		
		if (r_c_contas.nr_interno_conta IS NOT NULL AND r_c_contas.nr_interno_conta::text <> '') then
			CALL gerar_procmat_repasse_nf(r_c_contas.nr_interno_conta, nm_usuario_p, 'S');
		end if;

	end if;

--fim do cursor das contas
end	loop;

if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
	CALL liberar_repasse_prot_conta(cd_estabelecimento_w,nr_seq_protocolo_p,null,nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_protocolo_conv_repasse_2 ( nr_seq_protocolo_p bigint, nm_usuario_p text, ie_gerar_repasse_p text) FROM PUBLIC;

