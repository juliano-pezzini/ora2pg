-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE type_intervencao AS (
	nr_seq_proc		pe_prescr_proc.nr_seq_proc%type,
	qt_pontuacao		pe_prescr_proc.qt_pontuacao%type,
	cd_intervalo		pe_prescr_proc.cd_intervalo%type,
	ds_horarios		pe_prescr_proc.ds_horarios%type,
	ie_se_necessario		pe_prescr_proc.ie_se_necessario%type,
	ds_observacao		pe_prescr_proc.ds_observacao%type,
	ie_adep			pe_prescr_proc.ie_adep%type,
	hr_prim_horario		pe_prescr_proc.hr_prim_horario%type,
	ie_interv_espec_agora	pe_prescr_proc.ie_interv_espec_agora%type,
	hr_horario_espec		pe_prescr_proc.hr_horario_espec%type,
	ie_agora			pe_prescr_proc.ie_agora%type,
	ie_profissional		pe_prescr_proc.ie_profissional%type,
	ie_auxiliar		pe_prescr_proc.ie_auxiliar%type,
	ie_encaminhar		pe_prescr_proc.ie_encaminhar%type,
	ie_fazer			pe_prescr_proc.ie_fazer%type,
	ie_orientar		pe_prescr_proc.ie_orientar%type,
	ie_supervisionar		pe_prescr_proc.ie_supervisionar%type,
	ie_faose			pe_prescr_proc.ie_faose%type,
	nr_seq_diag		pe_prescr_proc.nr_seq_diag%type,
	ie_permite_exclusao		pe_prescr_proc.ie_permite_exclusao%type,
	nr_seq_item		pe_prescr_proc.nr_seq_item%type,
	nr_seq_result		pe_prescr_proc.nr_seq_result%type,
	nr_seq_topografia		pe_prescr_proc.nr_seq_topografia%type,
	ie_lado			pe_prescr_proc.ie_lado%type,
  dt_primeiro_horario pe_prescr_proc.dt_primeiro_horario%type);


CREATE OR REPLACE PROCEDURE gerar_intervencao_enf ( nr_prescricao_p bigint, ie_excluir_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_diag_w		bigint;
nr_seq_proc_w		bigint;
qt_existe_w		bigint;
nr_seq_result_w		bigint;
cd_intervalo_w		varchar(7);
ds_horario_padrao_w	varchar(2000);
nr_seq_probl_colab_w	bigint;
ds_observacao_padr_w	varchar(255);
ie_adep_w		varchar(1);
vl_prim_hor_w		varchar(15);
hr_prim_horario_w		timestamp;
nr_intervalo_w		real;
ds_horarios_w		varchar(2000);
dt_prescricao_w		timestamp;
nr_seq_modelo_w		bigint;
nr_atendimento_w	bigint;
qt_horas_validade_w	bigint;
cd_setor_Atendimento_w	bigint;
ds_prim_horario_w		varchar(255);
ie_se_necessario_w		varchar(1);
ie_permite_excluir_w		varchar(10);
ie_se_necessario_ww	varchar(1);
ie_agora_w			varchar(10);
ie_interv_espec_agora_w	varchar(10)	:= 'N';
hr_horario_espec_w		varchar(10);
dt_primeiro_horario_w	timestamp;
cd_estabelecimento_w	bigint;
nr_seq_item_w		bigint;
ie_faose_w		varchar(15);
ie_interv_topo_w	varchar(5);
qt_topog_w		bigint;
nr_seq_topografia_w	bigint;
nr_seq_item_resul_w	bigint;
ie_lado_w		varchar(10);
ie_interv_agora_w	varchar(10);
ie_profissional_w   varchar(10);
ie_auxiliar_w       varchar(10);
ie_encaminhar_w     varchar(10);
ie_fazer_w          varchar(10);
ie_orientar_w       varchar(10);
ie_supervisionar_w   varchar(10);
dt_prim_horario_prescr_w	timestamp;
ie_limpar_w		char(1) := 'N';

nr_seq_vt_internacao_w	bigint := 0;
type vetor is table of type_intervencao index by integer;
vt_intervencao_w	vetor;

c01 CURSOR FOR
SELECT	DISTINCT(nr_seq_diag)
FROM	pe_prescr_diag
WHERE	nr_seq_prescr	= nr_prescricao_p;

c02 CURSOR FOR
SELECT	a.nr_seq_proc,
	c.cd_intervalo,
	c.ds_horario_padrao,
	c.ds_observacao_padr,
	c.ie_adep,
	a.IE_PERMITE_EXCLUSAO,
	c.ie_faose,
	c.IE_PROFISSIONAL,
	c.IE_AUXILIAR,
	c.IE_ENCAMINHAR,
	c.IE_FAZER,
	c.IE_ORIENTAR,
	c.IE_SUPERVISIONAR
FROM pe_diagnostico_proc a
LEFT OUTER JOIN pe_procedimento c ON (a.nr_seq_proc = c.nr_sequencia)
WHERE a.nr_seq_diag	= nr_seq_diag_w  AND Obter_se_intervencao_lib(c.nr_sequencia,Obter_Perfil_Ativo,cd_setor_Atendimento_w,nm_usuario_p,'I')	= 'S' and obter_procedimento_idade(c.nr_sequencia,nr_atendimento_w) = 'S' AND coalesce(c.ie_situacao,'A') = 'A' AND NOT EXISTS (	SELECT	1
			FROM	pe_prescr_proc b
			WHERE	b.nr_seq_prescr	= nr_prescricao_p
			AND	b.nr_seq_proc	= a.nr_seq_proc) AND Obter_Se_Interv_Modelo(c.nr_sequencia,nr_seq_modelo_w)	= 'S' and coalesce(c.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;


c03 CURSOR FOR
SELECT	nr_seq_result,
	NR_SEQ_ITEM,
	nr_sequencia
FROM	pe_prescr_item_result
WHERE	nr_seq_prescr = nr_prescricao_p;

c04 CURSOR FOR
SELECT	b.nr_seq_proc,
	c.cd_intervalo,
	c.ds_horario_padrao,
	c.ds_observacao_padr,
	c.ie_adep,
	c.ie_faose,
	c.IE_PROFISSIONAL,
	c.IE_AUXILIAR,
	c.IE_ENCAMINHAR,
	c.IE_FAZER,
	c.IE_ORIENTAR,
	c.IE_SUPERVISIONAR
FROM	pe_procedimento c,
	pe_item_result_proc b,
	pe_item_resultado a
WHERE	c.nr_sequencia	= b.nr_seq_proc
AND	a.nr_sequencia	= b.nr_seq_result
AND	a.nr_sequencia	= nr_seq_result_w
AND	a.ie_situacao	= 'A'
AND	c.ie_situacao	= 'A'
AND	Obter_se_intervencao_lib(c.nr_sequencia,Obter_Perfil_Ativo,cd_setor_Atendimento_w,nm_usuario_p,'I')	= 'S'
and obter_procedimento_idade(c.nr_sequencia,nr_atendimento_w) = 'S'
AND	NOT EXISTS (	SELECT	1
			FROM	pe_prescr_proc x
			WHERE	x.nr_seq_prescr	= nr_prescricao_p
			AND	x.nr_seq_proc	= b.nr_seq_proc
			and	((ie_interv_topo_w = 'N') or (x.nr_seq_topografia = nr_seq_topografia_w)))
AND	Obter_Se_Interv_Modelo(b.nr_seq_proc,nr_seq_modelo_w)	= 'S'
and	coalesce(c.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;


c05 CURSOR FOR
SELECT	DISTINCT(nr_seq_probl_colab)
FROM	pe_prescr_probl_col
WHERE	nr_prescricao	= nr_prescricao_p;

c06 CURSOR FOR
SELECT	b.nr_seq_proc,
	c.cd_intervalo,
	c.ds_horario_padrao,
	c.ds_observacao_padr,
	c.ie_adep,
	c.ie_faose,
	c.IE_PROFISSIONAL,
	c.IE_AUXILIAR,
	c.IE_ENCAMINHAR,
	c.IE_FAZER,
	c.IE_ORIENTAR,
	c.IE_SUPERVISIONAR
FROM	pe_procedimento c,
	pe_probl_col_proc b,
	pe_problema_colab a
WHERE	c.nr_sequencia	= b.nr_seq_proc
AND	coalesce(c.ie_situacao,'A')	= 'A'
AND	a.nr_sequencia	= b.nr_seq_probl_colab
AND	a.nr_sequencia	= nr_seq_probl_colab_w
AND	Obter_se_intervencao_lib(c.nr_sequencia,Obter_Perfil_Ativo,cd_setor_Atendimento_w,nm_usuario_p,'I')	= 'S'
and obter_procedimento_idade(c.nr_sequencia,nr_atendimento_w) = 'S'
AND	NOT EXISTS (	SELECT	1
			FROM	pe_prescr_proc x
			WHERE	x.nr_seq_prescr	= nr_prescricao_p
			AND	x.nr_seq_proc	= b.nr_seq_proc)
AND	Obter_Se_Interv_Modelo(b.nr_seq_proc,nr_seq_modelo_w)	= 'S'
and	coalesce(c.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w
and	coalesce(a.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;

C07 CURSOR FOR
	SELECT 	nr_seq_topografia,
		ie_lado
	from   	pe_prescr_item_result_topo
	where  	nr_seq_item = nr_seq_item_resul_w;

procedure	adiciona_registro(
	nr_seq_proc_p		pe_prescr_proc.nr_seq_proc%type,
	qt_pontuacao_p		pe_prescr_proc.qt_pontuacao%type,
	cd_intervalo_p		pe_prescr_proc.cd_intervalo%type,
	ds_horarios_p		pe_prescr_proc.ds_horarios%type,
	ie_se_necessario_p		pe_prescr_proc.ie_se_necessario%type,
	ds_observacao_p		pe_prescr_proc.ds_observacao%type,
	ie_adep_p			pe_prescr_proc.ie_adep%type,
	hr_prim_horario_p		pe_prescr_proc.hr_prim_horario%type,
	ie_interv_espec_agora_p	pe_prescr_proc.ie_interv_espec_agora%type,
	hr_horario_espec_p		pe_prescr_proc.hr_horario_espec%type,
	ie_agora_p		pe_prescr_proc.ie_agora%type,
	ie_profissional_p		pe_prescr_proc.ie_profissional%type,
	ie_auxiliar_p		pe_prescr_proc.ie_auxiliar%type,
	ie_encaminhar_p		pe_prescr_proc.ie_encaminhar%type,
	ie_fazer_p		pe_prescr_proc.ie_fazer%type,
	ie_orientar_p		pe_prescr_proc.ie_orientar%type,
	ie_supervisionar_p		pe_prescr_proc.ie_supervisionar%type,
	ie_faose_p		pe_prescr_proc.ie_faose%type,
	nr_seq_diag_p		pe_prescr_proc.nr_seq_diag%type,
	ie_permite_exclusao_p	pe_prescr_proc.ie_permite_exclusao%type,
	nr_seq_item_p		pe_prescr_proc.nr_seq_item%type,
	nr_seq_result_p		pe_prescr_proc.nr_seq_result%type,
	nr_seq_topografia_p		pe_prescr_proc.nr_seq_topografia%type,
	ie_lado_p			pe_prescr_proc.ie_lado%type,
  	dt_primeiro_horario_p  pe_prescr_proc.dt_primeiro_horario%type,
	ie_novo_reg_p		text := 'N') is

ie_igual_w	varchar(1) := 'N';

BEGIN
if (ie_novo_reg_p <> 'S') then
	begin
	for i in 0..vt_intervencao_w.count -1 loop
		begin
		if (vt_intervencao_w[i].nr_seq_proc = nr_seq_proc_p) then
			begin
			if (ie_igual_w = 'N' and
				coalesce(vt_intervencao_w[i].cd_intervalo,'N') = coalesce(cd_intervalo_p,'N') and
				coalesce(vt_intervencao_w[i].ds_horarios,'XPTO') = coalesce(ds_horarios_p,'XPTO') and
				coalesce(vt_intervencao_w[i].ie_se_necessario,'N') = coalesce(ie_se_necessario_p,'N') and
				coalesce(vt_intervencao_w[i].ds_observacao,'XPTO') = coalesce(ds_observacao_p,'XPTO') and
				coalesce(vt_intervencao_w[i].ie_adep,'N') = coalesce(ie_adep_p,'N') and
				coalesce(vt_intervencao_w[i].hr_prim_horario,'N') = coalesce(hr_prim_horario_p,'N') and
				coalesce(vt_intervencao_w[i].ie_interv_espec_agora,'N') = coalesce(ie_interv_espec_agora_p,'N') and
				coalesce(vt_intervencao_w[i].hr_horario_espec,'N') = coalesce(hr_horario_espec_p,'N') and
				coalesce(vt_intervencao_w[i].ie_agora,'N') = coalesce(ie_agora_p,'N') and
				coalesce(vt_intervencao_w[i].ie_profissional,'N') = coalesce(ie_profissional_p,'N') and
				coalesce(vt_intervencao_w[i].ie_auxiliar,'N') = coalesce(ie_auxiliar_p,'N') and
				coalesce(vt_intervencao_w[i].ie_encaminhar,'N') = coalesce(ie_encaminhar_p,'N') and
				coalesce(vt_intervencao_w[i].ie_fazer,'N') = coalesce(ie_fazer_p,'N') and
				coalesce(vt_intervencao_w[i].ie_orientar,'N') = coalesce(ie_orientar_p,'N') and
				coalesce(vt_intervencao_w[i].ie_supervisionar,'N') = coalesce(ie_supervisionar_p,'N') and
				coalesce(vt_intervencao_w[i].ie_faose,'N') = coalesce(ie_faose_p,'N') and
				coalesce(vt_intervencao_w[i].nr_seq_topografia,0) = coalesce(nr_seq_topografia_p,0) and
				coalesce(vt_intervencao_w[i].ie_lado,'N') = coalesce(ie_lado_p,'N') and
        coalesce(vt_intervencao_w[i].dt_primeiro_horario,clock_timestamp()) = coalesce(dt_primeiro_horario_w,clock_timestamp()))then
				begin
				if (coalesce(qt_pontuacao_p,0) > coalesce(vt_intervencao_w[i].qt_pontuacao,0)) then
					begin
					vt_intervencao_w[i].qt_pontuacao := coalesce(qt_pontuacao_p,0);
					vt_intervencao_w[i].nr_seq_diag := coalesce(nr_seq_diag_p,0);
					end;
				end if;

				if (coalesce(ie_permite_exclusao_p,'N') = 'S') then
					vt_intervencao_w[i].ie_permite_exclusao := coalesce(ie_permite_exclusao_p,'N');
				end if;

				ie_igual_w := 'S';
				end;
			end if;
			end;
		end if;
		end;
	end loop;

	if (ie_igual_w <> 'S') then
		adiciona_registro(	nr_seq_proc_p,
				qt_pontuacao_p,
				cd_intervalo_p,
				ds_horarios_p,
				ie_se_necessario_p,
				ds_observacao_p,
				ie_adep_p,
				hr_prim_horario_p,
				ie_interv_espec_agora_p,
				hr_horario_espec_p,
				ie_agora_p,
				ie_profissional_p,
				ie_auxiliar_p,
				ie_encaminhar_p,
				ie_fazer_p,
				ie_orientar_p,
				ie_supervisionar_p,
				ie_faose_p,
				nr_seq_diag_p,
				ie_permite_exclusao_p,
				nr_seq_item_p,
				nr_seq_result_p,
				nr_seq_topografia_p,
				ie_lado_p,
        dt_primeiro_horario_w,
				'S');
	end if;
	end;
else
	begin
	vt_intervencao_w[nr_seq_vt_internacao_w].nr_seq_proc := nr_seq_proc_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].qt_pontuacao := qt_pontuacao_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].cd_intervalo := cd_intervalo_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ds_horarios := ds_horarios_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_se_necessario := ie_se_necessario_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ds_observacao := ds_observacao_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_adep := ie_adep_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].hr_prim_horario := hr_prim_horario_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_interv_espec_agora := ie_interv_espec_agora_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].hr_horario_espec := hr_horario_espec_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_agora := ie_agora_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_profissional := ie_profissional_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_auxiliar := ie_auxiliar_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_encaminhar := ie_encaminhar_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_fazer := ie_fazer_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_orientar := ie_orientar_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_supervisionar := ie_supervisionar_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_faose := ie_faose_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].nr_seq_diag := nr_seq_diag_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_permite_exclusao := ie_permite_exclusao_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].nr_seq_item := nr_seq_item_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].nr_seq_result := nr_seq_result_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].nr_seq_topografia := nr_seq_topografia_p;
	vt_intervencao_w[nr_seq_vt_internacao_w].ie_lado := ie_lado_p;
  vt_intervencao_w[nr_seq_vt_internacao_w].dt_primeiro_horario := dt_primeiro_horario_w;

	nr_seq_vt_internacao_w := nr_seq_vt_internacao_w + 1;
	end;
end if;
end;

BEGIN

SELECT	MAX(cd_setor_atendimento)
INTO STRICT	cd_setor_Atendimento_w
FROM	pe_prescricao
WHERE	nr_sequencia	= nr_prescricao_p;

cd_estabelecimento_w	:= coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);

vl_prim_hor_w := obter_param_usuario(281, 325, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, vl_prim_hor_w);
ie_interv_topo_w := obter_param_usuario(281, 1057, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_interv_topo_w);



IF (ie_excluir_p = 'S') THEN
	DELETE	FROM pe_prescr_proc
	WHERE	nr_seq_prescr = nr_prescricao_p;
END IF;

SELECT	dt_prescricao,
	nr_seq_modelo,
	nr_atendimento,
	qt_horas_validade,
	ie_agora,
	to_char(DT_PRIMEIRO_HORARIO,'hh24:mi'),
	DT_INICIO_PRESCR
INTO STRICT	dt_prescricao_w,
	nr_seq_modelo_w,
	nr_atendimento_w,
	qt_horas_validade_w,
	ie_agora_w,
	hr_horario_espec_w,
	dt_primeiro_horario_w
FROM	pe_prescricao
WHERE	nr_sequencia = nr_prescricao_p
AND	coalesce(ie_situacao,'A')	= 'A';

if (ie_agora_w	= 'S') then
	ie_interv_espec_agora_w	:= 'S';
else
	hr_horario_espec_w	:= null;
end if;

OPEN c01;
LOOP
FETCH c01 INTO
	nr_seq_diag_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	OPEN c02;
	LOOP
	FETCH c02 INTO
		nr_seq_proc_w,
		cd_intervalo_w,
		ds_horario_padrao_w,
		ds_observacao_padr_w,
		ie_adep_w,
		ie_permite_excluir_w,
		ie_faose_w,
		ie_profissional_w,
		ie_auxiliar_w    ,
		ie_encaminhar_w  ,     
		ie_fazer_w       ,     
		ie_orientar_w    ,     
		ie_supervisionar_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		SELECT	COUNT(*)
		INTO STRICT	qt_existe_w
		FROM	pe_diagnostico_proc c,
			pe_diagnostico b,
			pe_prescr_diag a
		WHERE	a.nr_seq_prescr = nr_prescricao_p
		AND	a.nr_seq_diag   = b.nr_sequencia
		AND	b.nr_sequencia  = c.nr_seq_diag
		AND	c.nr_seq_proc   = nr_seq_proc_w;

		SELECT 	max(IE_SE_NECESSARIO)
		INTO STRICT	ie_se_necessario_ww
		FROM   	INTERVALO_PRESCRICAO
		WHERE  	cd_intervalo = cd_intervalo_w;



		SELECT * FROM Obter_Regra_Proc_SAE(nr_seq_proc_w, nr_atendimento_w, cd_intervalo_w, ds_horario_padrao_w, ds_observacao_padr_w) INTO STRICT cd_intervalo_w, ds_horario_padrao_w, ds_observacao_padr_w;

		IF (vl_prim_hor_w in ('1','3')) THEN
			hr_prim_horario_w	:=	to_date(to_char(clock_timestamp(),'dd/mm/yyyy') || obter_primeiro_horario_sae(cd_intervalo_w,	nr_prescricao_p),'dd/mm/yyyy hh24:mi:ss');
		ELSIF (vl_prim_hor_w = '2') THEN
			hr_prim_horario_w	:=	TRUNC(dt_prescricao_w + (1/24),'hh24');
		elsif (vl_prim_hor_w = '5') then
			select	to_date(to_char(dt_prescricao_w,'dd/mm/yyyy')||' '||to_char(Obter_Prim_Horario_Prescricao(nr_atendimento_w,cd_setor_Atendimento_w,dt_prescricao_w,nm_usuario_p,'S'),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
			into STRICT	dt_prim_horario_prescr_w
			from	pe_prescricao
			where	nr_sequencia	= nr_prescricao_p;
			if (dt_prim_horario_prescr_w IS NOT NULL AND dt_prim_horario_prescr_w::text <> '') then
				hr_prim_horario_w := dt_prim_horario_prescr_w;
			end if;
		END IF;

		IF (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') THEN
			ds_prim_horario_w	:= to_char(hr_prim_horario_w,'hh24:mi');
			SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, coalesce(dt_primeiro_horario_w,hr_prim_horario_w), coalesce(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w, nr_prescricao_p) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w;
			IF (coalesce(ds_horario_padrao_w::text, '') = '') THEN
				ds_horario_padrao_w	:= ds_horarios_w;
			END IF;
		END IF;
		

		select	coalesce(max(ie_agora),'N')
		into STRICT	ie_interv_agora_w
		from	intervalo_prescricao
		where	cd_intervalo	= cd_intervalo_w;
		
		if (ie_interv_agora_w	= 'S') then
			hr_prim_horario_w	:= clock_timestamp();
			ds_horario_padrao_w:= to_char(clock_timestamp(),'hh24:mi');
		end if;

		ie_limpar_w := obter_se_limpa_prim_hor_sae(cd_intervalo_w);
				
		if	((ie_interv_espec_agora_w	= 'S') and (coalesce(cd_intervalo_w::text, '') = '')) or (ie_limpar_w = 'S') then
			hr_prim_horario_w	:= null;
			ds_horario_padrao_w := null;       -- Verificado com o Pessoal da REP, se limar o 1 horario tem que limpar o ds_horarios.
		end if;	
	
		if ((coalesce(ds_horario_padrao_w::text, '') = '') or (ds_horario_padrao_w = '')) and (ie_se_necessario_ww = 'S') then
			ds_horario_padrao_w := 'SN';
		end if;

		adiciona_registro(	nr_seq_proc_w,
				qt_existe_w,
				cd_intervalo_w,
				ds_horario_padrao_w,
				coalesce(ie_se_necessario_ww,'N'),
				ds_observacao_padr_w,
				ie_adep_w,
				to_char(hr_prim_horario_w,'hh24:mi'),
				ie_interv_espec_agora_w,
				hr_horario_espec_w,
				ie_interv_agora_w,
				ie_profissional_w,
				ie_auxiliar_w,
				ie_encaminhar_w,
				ie_fazer_w,
				ie_orientar_w,
				ie_supervisionar_w,
				ie_faose_w,
				nr_seq_diag_w,
				ie_permite_excluir_w,
				null,
				null,
				null,
				'N',
        dt_primeiro_horario_w);
	END LOOP;
	CLOSE c02;
	END;
END LOOP;
CLOSE c01;

OPEN c03;
LOOP
FETCH c03 INTO
	nr_seq_result_w,
	nr_seq_item_w,
	nr_seq_item_resul_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	BEGIN

	select 	max(nr_seq_topografia)
	into STRICT	qt_topog_w
	from   	pe_prescr_item_result_topo
	where  	nr_seq_item = nr_seq_item_resul_w;
	
	
	if (ie_interv_topo_w = 'S') and (qt_topog_w > 0) then
		open C07;
		loop
		fetch C07 into	
			nr_seq_topografia_w,
			ie_lado_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin
			OPEN c04;
			LOOP
			FETCH c04 INTO
				nr_seq_proc_w,
				cd_intervalo_w,
				ds_horario_padrao_w,
				ds_observacao_padr_w,
				ie_adep_w,
				ie_faose_w,
				ie_profissional_w,
				ie_auxiliar_w    ,
				ie_encaminhar_w  ,     
				ie_fazer_w       ,     
				ie_orientar_w    ,     
				ie_supervisionar_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				/*
				select	ds_horario_padrao,
					nr_sequencia,
					ds_observacao_padr,
					cd_intervalo
				into	ds_horario_padrao_w,
					nr_seq_proc_w,
					ds_observacao_padr_w,
					cd_intervalo_w
				from	pe_procedimento
				where	nr_sequencia	= nr_seq_proc_w;
				
				*/
				
				
				SELECT * FROM Obter_Regra_Proc_SAE(nr_seq_proc_w, nr_atendimento_w, cd_intervalo_w, ds_horario_padrao_w, ds_observacao_padr_w) INTO STRICT cd_intervalo_w, ds_horario_padrao_w, ds_observacao_padr_w;
				IF (vl_prim_hor_w in ('1','3')) THEN
					hr_prim_horario_w	:= TO_DATE(TO_CHAR(clock_timestamp(),'dd/mm/yyyy') || obter_primeiro_horario_sae(cd_intervalo_w,	nr_prescricao_p),'dd/mm/yyyy hh24:mi:ss');
				ELSIF (vl_prim_hor_w = '2') THEN
					hr_prim_horario_w 	:= TRUNC(dt_prescricao_w + (1/24),'hh24');
				elsif (vl_prim_hor_w = '5') then
					 select	establishment_timezone_utils.dateattime(dt_prescricao_w, Obter_Prim_Horario_Prescricao(nr_atendimento_w,cd_setor_Atendimento_w,dt_prescricao_w,nm_usuario_p,'S'))
					into STRICT	dt_prim_horario_prescr_w
					from	pe_prescricao
					where	nr_sequencia	= nr_prescricao_p;
						if (dt_prim_horario_prescr_w IS NOT NULL AND dt_prim_horario_prescr_w::text <> '') then
							hr_prim_horario_w := dt_prim_horario_prescr_w;
						end if;
				END IF;


				IF (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') THEN
					ds_prim_horario_w	:= to_char(hr_prim_horario_w,'hh24:mi');
					SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, coalesce(dt_primeiro_horario_w,hr_prim_horario_w), coalesce(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w, nr_prescricao_p) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w;
					IF (coalesce(ds_horario_padrao_w::text, '') = '') THEN
						ds_horario_padrao_w	:= ds_horarios_w;
					END IF;
				END IF;
				
				select	coalesce(max(ie_agora),'N')
				into STRICT	ie_interv_agora_w
				from	intervalo_prescricao
				where	cd_intervalo	= cd_intervalo_w;
				
				if (ie_interv_agora_w	= 'S') then
					hr_prim_horario_w	:= clock_timestamp();
					ds_horario_padrao_w:= to_char(clock_timestamp(),'hh24:mi');
				end if;


				SELECT 	max(IE_SE_NECESSARIO)
				INTO STRICT	ie_se_necessario_ww
				FROM   	INTERVALO_PRESCRICAO
				WHERE  	cd_intervalo = cd_intervalo_w;
				
				ie_limpar_w := obter_se_limpa_prim_hor_sae(cd_intervalo_w);
				
				if	((ie_interv_espec_agora_w	= 'S') and (coalesce(cd_intervalo_w::text, '') = '')) or (ie_limpar_w = 'S')then
					hr_prim_horario_w	:= null;
					ds_horario_padrao_w := null;       -- Verificado com o Pessoal da REP, se limar o 1 horario tem que limpar o ds_horarios.
				end if;		

				if ((coalesce(ds_horario_padrao_w::text, '') = '') or (ds_horario_padrao_w = '')) and (ie_se_necessario_ww = 'S') then
					ds_horario_padrao_w := 'SN';
				end if;				

				adiciona_registro(	nr_seq_proc_w,
						1,
						cd_intervalo_w,
						ds_horario_padrao_w,
						coalesce(ie_se_necessario_ww,'N'),
						ds_observacao_padr_w,
						ie_adep_w,
						to_char(hr_prim_horario_w,'hh24:mi'),
						ie_interv_espec_agora_w,
						hr_horario_espec_w,
						ie_interv_agora_w,
						ie_profissional_w,
						ie_auxiliar_w,
						ie_encaminhar_w,
						ie_fazer_w,
						ie_orientar_w,
						ie_supervisionar_w,
						ie_faose_w,
						null,
						null,
						nr_seq_item_w,
						nr_seq_result_w,
						nr_seq_topografia_w,
						ie_lado_w,
            dt_primeiro_horario_w,
						'N');
			END LOOP;
			CLOSE c04;			
			end;
		end loop;
		close C07;
	else
		OPEN c04;
		LOOP
		FETCH c04 INTO
			nr_seq_proc_w,
			cd_intervalo_w,
			ds_horario_padrao_w,
			ds_observacao_padr_w,
			ie_adep_w,
			ie_faose_w,
			ie_profissional_w,
			ie_auxiliar_w    ,
			ie_encaminhar_w  ,     
			ie_fazer_w       ,     
			ie_orientar_w    ,     
			ie_supervisionar_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			/*
			select	ds_horario_padrao,
				nr_sequencia,
				ds_observacao_padr,
				cd_intervalo
			into	ds_horario_padrao_w,
				nr_seq_proc_w,
				ds_observacao_padr_w,
				cd_intervalo_w
			from	pe_procedimento
			where	nr_sequencia	= nr_seq_proc_w;
			
			*/
			
			SELECT * FROM Obter_Regra_Proc_SAE(nr_seq_proc_w, nr_atendimento_w, cd_intervalo_w, ds_horario_padrao_w, ds_observacao_padr_w) INTO STRICT cd_intervalo_w, ds_horario_padrao_w, ds_observacao_padr_w;
			IF (vl_prim_hor_w in ('1','3')) THEN
        hr_prim_horario_w	:= establishment_timezone_utils.dateattime(clock_timestamp(), obter_primeiro_horario_sae(coalesce(cd_intervalo_w, '00'), nr_prescricao_p));
			ELSIF (vl_prim_hor_w = '2') THEN
				hr_prim_horario_w 	:= TRUNC(dt_prescricao_w + (1/24),'hh24');
			elsif (vl_prim_hor_w = '5') then
        select	establishment_timezone_utils.dateattime(dt_prescricao_w, Obter_Prim_Horario_Prescricao(nr_atendimento_w,cd_setor_Atendimento_w,dt_prescricao_w,nm_usuario_p,'S'))
				into STRICT	dt_prim_horario_prescr_w
				from	pe_prescricao
				where	nr_sequencia	= nr_prescricao_p;
				if (dt_prim_horario_prescr_w IS NOT NULL AND dt_prim_horario_prescr_w::text <> '') then
					hr_prim_horario_w := dt_prim_horario_prescr_w;
				end if;
			END IF;

			IF (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') THEN
				ds_prim_horario_w	:= to_char(hr_prim_horario_w,'hh24:mi');
				SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, coalesce(dt_primeiro_horario_w,hr_prim_horario_w), coalesce(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w, nr_prescricao_p) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w;
				IF (coalesce(ds_horario_padrao_w::text, '') = '') THEN
					ds_horario_padrao_w	:= ds_horarios_w;
				END IF;
			END IF;
			
			select	coalesce(max(ie_agora),'N')
			into STRICT	ie_interv_agora_w
			from	intervalo_prescricao
			where	cd_intervalo	= cd_intervalo_w;
			
			if (ie_interv_agora_w	= 'S') then
				hr_prim_horario_w	:= clock_timestamp();
				ds_horario_padrao_w:= to_char(clock_timestamp(),'hh24:mi');
			end if;

			SELECT 	max(IE_SE_NECESSARIO)
			INTO STRICT	ie_se_necessario_ww
			FROM   	INTERVALO_PRESCRICAO
			WHERE  	cd_intervalo = cd_intervalo_w;
			
			ie_limpar_w := obter_se_limpa_prim_hor_sae(cd_intervalo_w);
			
			if	((ie_interv_espec_agora_w	= 'S') and (coalesce(cd_intervalo_w::text, '') = '')) or (ie_limpar_w = 'S') then
				hr_prim_horario_w	:= null;
				ds_horario_padrao_w := null;       -- Verificado com o Pessoal da REP, se limar o 1 horario tem que limpar o ds_horarios.
			end if;		

			if ((coalesce(ds_horario_padrao_w::text, '') = '') or (ds_horario_padrao_w = '')) and (ie_se_necessario_ww = 'S') then
				ds_horario_padrao_w := 'SN';
			end if;

			adiciona_registro(	nr_seq_proc_w,
					1,
					cd_intervalo_w,
					ds_horario_padrao_w,
					coalesce(ie_se_necessario_ww,'N'),
					ds_observacao_padr_w,
					ie_adep_w,
					to_char(hr_prim_horario_w,'hh24:mi'),
					ie_interv_espec_agora_w,
					hr_horario_espec_w,
					ie_interv_agora_w,
					ie_profissional_w,
					ie_auxiliar_w,
					ie_encaminhar_w,
					ie_fazer_w,
					ie_orientar_w,
					ie_supervisionar_w,
					ie_faose_w,
					null,
					null,
					nr_seq_item_w,
					nr_seq_result_w,
					null,
					null,
          dt_primeiro_horario_w,
					'N');
		END LOOP;
		CLOSE c04;
	end if;
	END;
END LOOP;
CLOSE c03;


OPEN c05;
LOOP
FETCH c05 INTO
	nr_seq_probl_colab_w;
EXIT WHEN NOT FOUND; /* apply on c05 */
	BEGIN
	OPEN c06;
	LOOP
	FETCH c06 INTO
		nr_seq_proc_w,
		cd_intervalo_w,
		ds_horario_padrao_w,
		ds_observacao_padr_w,
		ie_adep_w,
		ie_faose_w,
		ie_profissional_w,
		ie_auxiliar_w    ,
		ie_encaminhar_w  ,     
		ie_fazer_w       ,     
		ie_orientar_w    ,     
		ie_supervisionar_w
		;
	EXIT WHEN NOT FOUND; /* apply on c06 */
		/*
		select	ds_horario_padrao,
			nr_sequencia,
			ds_observacao_padr,
			cd_intervalo
		into	ds_horario_padrao_w,
			nr_seq_proc_w,
			ds_observacao_padr_w,
			cd_intervalo_w
		from	pe_procedimento
		where	nr_sequencia	= nr_seq_proc_w;
		*/
		SELECT * FROM Obter_Regra_Proc_SAE(nr_seq_proc_w, nr_atendimento_w, cd_intervalo_w, ds_horario_padrao_w, ds_observacao_padr_w) INTO STRICT cd_intervalo_w, ds_horario_padrao_w, ds_observacao_padr_w;
		IF (vl_prim_hor_w in ('1','3')) THEN
			 hr_prim_horario_w	:= establishment_timezone_utils.dateattime(clock_timestamp(), obter_primeiro_horario_sae(coalesce(cd_intervalo_w, '00'), nr_prescricao_p));
		ELSIF (vl_prim_hor_w = '2') THEN
			hr_prim_horario_w 	:= TRUNC(dt_prescricao_w + (1/24),'hh24');
		elsif (vl_prim_hor_w = '5') then
			 select	establishment_timezone_utils.dateattime(dt_prescricao_w, Obter_Prim_Horario_Prescricao(nr_atendimento_w,cd_setor_Atendimento_w,dt_prescricao_w,nm_usuario_p,'S'))
			into STRICT	dt_prim_horario_prescr_w
			from	pe_prescricao
			where	nr_sequencia	= nr_prescricao_p;
			if (dt_prim_horario_prescr_w IS NOT NULL AND dt_prim_horario_prescr_w::text <> '') then
				hr_prim_horario_w := dt_prim_horario_prescr_w;
			end if;
		END IF;

		IF (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') THEN
			ds_prim_horario_w	:= to_char(hr_prim_horario_w,'hh24:mi');
			SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, coalesce(dt_primeiro_horario_w,hr_prim_horario_w), coalesce(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w, nr_prescricao_p) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w;
			IF (coalesce(ds_horario_padrao_w::text, '') = '') THEN
				ds_horario_padrao_w	:= ds_horarios_w;
			END IF;
		END IF;
		
		

		SELECT 	max(IE_SE_NECESSARIO)
		INTO STRICT	ie_se_necessario_ww
		FROM   	INTERVALO_PRESCRICAO
		WHERE  	cd_intervalo = cd_intervalo_w;
		
		select	coalesce(max(ie_agora),'N')
		into STRICT	ie_interv_agora_w
		from	intervalo_prescricao
		where	cd_intervalo	= cd_intervalo_w;
		
		if (ie_interv_agora_w	= 'S') then
			hr_prim_horario_w	:= clock_timestamp();
			ds_horario_padrao_w:= to_char(clock_timestamp(),'hh24:mi');
		end if;
		
		
		ie_limpar_w := obter_se_limpa_prim_hor_sae(cd_intervalo_w);
				
		if	((ie_interv_espec_agora_w	= 'S') and (coalesce(cd_intervalo_w::text, '') = '')) or (ie_limpar_w = 'S') then
			hr_prim_horario_w	:= null;
			ds_horario_padrao_w := null;       -- Verificado com o Pessoal da REP, se limar o 1 horario tem que limpar o ds_horarios.
		end if;	
		
		if ((coalesce(ds_horario_padrao_w::text, '') = '') or (ds_horario_padrao_w = '')) and (ie_se_necessario_ww = 'S') then
			ds_horario_padrao_w := 'SN';
		end if;

		adiciona_registro(	nr_seq_proc_w,
				1,
				cd_intervalo_w,
				ds_horario_padrao_w,
				coalesce(ie_se_necessario_ww,'N'),
				ds_observacao_padr_w,
				ie_adep_w,
				to_char(hr_prim_horario_w,'hh24:mi'),
				ie_interv_espec_agora_w,
				hr_horario_espec_w,
				ie_interv_agora_w,
				ie_profissional_w,
				ie_auxiliar_w,
				ie_encaminhar_w,
				ie_fazer_w,
				ie_orientar_w,
				ie_supervisionar_w,
				ie_faose_w,
				null,
				null,
				null,
				null,
				null,
				null,
        dt_primeiro_horario_w,
				'N');
	END LOOP;
	CLOSE c06;
	END;
END LOOP;
CLOSE c05;

for j in 0..vt_intervencao_w.count - 1 loop
	begin
	INSERT INTO pe_prescr_proc(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_proc,
		nr_seq_prescr,
		qt_pontuacao,
		ds_origem,
		nr_seq_apres,
		cd_intervalo,
		ds_horarios,
		qt_intervencao,
		ie_se_necessario,
		ds_observacao,
		ie_suspenso,
		ie_adep,
		hr_prim_horario,
		ie_interv_espec_agora,
		hr_horario_espec,
		ie_agora,
		ie_profissional,
		ie_auxiliar,
		ie_encaminhar,
		ie_fazer,
		ie_orientar,
		ie_supervisionar,
		ie_faose,
		nr_seq_diag,
		ie_permite_exclusao,
		nr_seq_item,
		nr_seq_result,
		nr_seq_topografia,
		ie_lado,
    dt_primeiro_horario)
	values (	nextval('pe_prescr_proc_seq'),
		clock_timestamp(),
		nm_usuario_p,
		vt_intervencao_w[j].nr_seq_proc,
		nr_prescricao_p,
		vt_intervencao_w[j].qt_pontuacao,
		'A',
		1,
		vt_intervencao_w[j].cd_intervalo,
		vt_intervencao_w[j].ds_horarios,
		1,
		vt_intervencao_w[j].ie_se_necessario,
		vt_intervencao_w[j].ds_observacao,
		'N',
		vt_intervencao_w[j].ie_adep,
		vt_intervencao_w[j].hr_prim_horario,
		vt_intervencao_w[j].ie_interv_espec_agora,
		vt_intervencao_w[j].hr_horario_espec,
		vt_intervencao_w[j].ie_agora,
		vt_intervencao_w[j].ie_profissional,
		vt_intervencao_w[j].ie_auxiliar,
		vt_intervencao_w[j].ie_encaminhar,
		vt_intervencao_w[j].ie_fazer,
		vt_intervencao_w[j].ie_orientar,
		vt_intervencao_w[j].ie_supervisionar,
		vt_intervencao_w[j].ie_faose,
		vt_intervencao_w[j].nr_seq_diag,
		vt_intervencao_w[j].ie_permite_exclusao,
		vt_intervencao_w[j].nr_seq_item,
		vt_intervencao_w[j].nr_seq_result,
		vt_intervencao_w[j].nr_seq_topografia,
		vt_intervencao_w[j].ie_lado,
    vt_intervencao_w[j].dt_primeiro_horario);
	end;
end loop;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_intervencao_enf ( nr_prescricao_p bigint, ie_excluir_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

