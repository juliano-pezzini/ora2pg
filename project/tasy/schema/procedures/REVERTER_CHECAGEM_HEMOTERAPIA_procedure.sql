-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE reverter_checagem_hemoterapia ( nr_seq_horario_p bigint, ds_justificativa_p text, nm_usuario_p text) AS $body$
DECLARE

						
nr_prescricao_w		bigint;
nr_seq_procedimento_w	integer;
qt_vol_hemocomp_w	bigint;
nr_seq_evento_w		bigint;
ie_status_w		varchar(3);
dt_horario_w		timestamp;
qt_hor_adm_w		integer;
ie_origem_proced_w    prescr_procedimento.ie_origem_proced%type;
cd_procedimento_w     prescr_procedimento.cd_procedimento%type;
ie_cobra_adep_w			  varchar(1);


BEGIN
if (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') then
	select	max(a.nr_prescricao),
		max(a.nr_sequencia),
		max(a.ie_status),
		coalesce(coalesce(max(b.qt_vol_hemocomp),max(a.qt_vol_hemocomp)),0),
		max(b.dt_horario),
    max(a.ie_origem_proced),
    max(a.cd_procedimento)
	into STRICT	nr_prescricao_w,
		nr_seq_procedimento_w,
		ie_status_w,
		qt_vol_hemocomp_w,
		dt_horario_w,
    ie_origem_proced_w,
    cd_procedimento_w
	from	prescr_procedimento a,
		prescr_proc_hor b
	where	a.nr_prescricao = b.nr_prescricao
	and	a.nr_sequencia = b.nr_seq_procedimento
	and	b.nr_sequencia = nr_seq_horario_p;

	if (ie_status_w = 'T') then
		update	prescr_procedimento
		set		ie_status = 'N',
				nm_usuario = nm_usuario_p
		where	nr_prescricao = nr_prescricao_w
		and		nr_sequencia = nr_seq_procedimento_w;
	elsif (ie_status_w = 'INT') then
		--Se nao tiver nenhum horario adm

		--ele volta o status da hemoterapia para 'N' (Pendente)
		select 	count(1)
		into STRICT	qt_hor_adm_w
		from	prescr_proc_hor
		where	nr_prescricao = nr_prescricao_w
		and		nr_sequencia = nr_seq_procedimento_w		
		and		nr_sequencia <> nr_seq_horario_p		
		and		(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');
		
		if (qt_hor_adm_w = 0) then
		
			update	prescr_procedimento
			set		ie_status = 'N',
					nm_usuario = nm_usuario_p
			where	nr_prescricao = nr_prescricao_w
			and		nr_sequencia = nr_seq_procedimento_w;
			
		end if;
		
	end if;

	update	prescr_proc_hor
	set		dt_inicio_horario  = NULL,
			dt_interrupcao  = NULL,
			dt_fim_horario  = NULL,
			nm_usuario = nm_usuario_p
	where	nr_sequencia = nr_seq_horario_p;
	
	--Deixar como ie_evento_valido o evento de inicio
	select  coalesce(max(nr_sequencia),0)
    into STRICT  	nr_seq_evento_w
    from  	prescr_solucao_evento
    where   nr_prescricao = nr_prescricao_w
    and  	nr_seq_procedimento = nr_seq_procedimento_w
    and  	ie_tipo_solucao = 3
    and  	ie_evento_valido = 'S'
    and  	ie_alteracao = 1;

	update  prescr_solucao_evento
    set    ie_evento_valido = 'N'
    where  nr_sequencia = nr_seq_evento_w;
	
	--Deixar como ie_evento_valido o evento de Termino/Interrupcao por troca de frasco

	--Senao ao consistir o nr. de etapas vai indicar que existe mais etapas do que realmente tem.
	select  coalesce(max(nr_sequencia),0)
    into STRICT  	nr_seq_evento_w
    from  	prescr_solucao_evento
    where   nr_prescricao = nr_prescricao_w
    and  	nr_seq_procedimento = nr_seq_procedimento_w
    and  	ie_tipo_solucao in (3)
    and  	ie_evento_valido = 'S'
    AND		((ie_alteracao = 4) OR
		    ((ie_alteracao = 2) AND (obter_se_motivo_troca_frasco(nr_seq_motivo) = 'S')));
	
	update  prescr_solucao_evento
    set    ie_evento_valido = 'N'
    where  nr_sequencia = nr_seq_evento_w;	
	
	update	prescr_proc_bolsa
	set		ie_bipado = 'N',
			nm_usuario = nm_usuario_p
	where	nr_seq_horario = nr_seq_horario_p;
	
	select	nextval('prescr_solucao_evento_seq')
	into STRICT	nr_seq_evento_w
	;

  select	coalesce(max(ie_cobra_adep),'S')
	into STRICT	ie_cobra_adep_w
	from	procedimento
	where	cd_procedimento		= cd_procedimento_w
	and	  ie_origem_proced	= ie_origem_proced_w;

	if (ie_cobra_adep_w = 'S') then
		CALL Estornar_ProPaci_Prescr_Proc( nr_prescricao_p => nr_prescricao_w,
                                  nr_seq_prescr_p => nr_seq_procedimento_w,
                                  nm_usuario_p    => nm_usuario_p);					
	end if;

	insert into prescr_solucao_evento(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_solucao,
			nr_seq_material,
			nr_seq_procedimento,
			nr_seq_nut,
			nr_seq_nut_neo,
			ie_forma_infusao,
			qt_volume_fase,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_vol_infundido,
			qt_vol_desprezado,
			cd_pessoa_fisica,
			ie_alteracao,
			dt_alteracao,
			ie_evento_valido,
			nr_seq_motivo,
			ds_observacao,
			ie_tipo_solucao,
			qt_volume_parcial,
			qt_tempo_infusao,
			nr_seq_lote,
			nr_seq_assinatura,
			ds_justificativa,
			dt_horario)
		values (
			nr_seq_evento_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_prescricao_w,
			null,
			null,
			nr_seq_procedimento_w,
			null,
			null,
			null,
			qt_vol_hemocomp_w,
			null,
			null,
			null,
			null,
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			39,
			clock_timestamp(),
			'S',
			null,
			null,
			3,
			null,
			null,
			null,
			null,
			ds_justificativa_p,
			dt_horario_w);	
	
	commit;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE reverter_checagem_hemoterapia ( nr_seq_horario_p bigint, ds_justificativa_p text, nm_usuario_p text) FROM PUBLIC;

