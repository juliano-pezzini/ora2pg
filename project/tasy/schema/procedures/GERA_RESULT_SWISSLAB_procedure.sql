-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gera_result_swisslab ( nr_atendimento_p text,--PV1-19
 nr_prescricao_ext_p text,--OBR3
 cd_material_p text,--OBR4
 ds_placer1_p text,--OBR-18
 ds_placer2_p text,--OBR-19
 ds_reference_p text,--OBX-7
 ds_normality_p text,--OBR-8 
 cd_exame_p text,--OBX-3.1
 ds_resultado_p text,--ORX-5
 ds_units_p text,--OBX-6.1
 nm_usuario_p text, ds_observacao_p text--NTE-3
 ) AS $body$
DECLARE


nr_seq_resultado_w		bigint;
nr_seq_exame_w			bigint;
cd_procedimento_w		exame_laboratorio.cd_procedimento%type;
ie_origem_proced_w		exame_laboratorio.ie_origem_proced%type;
nr_seq_proc_interno_w	exame_laboratorio.nr_seq_proc_interno%type;

ds_resultado_w		varchar(4000);
qt_resultado_w		double precision;
pr_resultado_w		double precision;
ds_referencia_w		varchar(4000);

nr_seq_material_w	bigint;
cd_material_exame_w	varchar(20);
cd_barras_w		varchar(50);
nr_coluna_w		smallint;
nr_linha_w		smallint;

nr_prescricao_w		bigint;
nr_seq_prescr_w		bigint;
cd_exame_superior_w	varchar(20);
cd_exame_w		varchar(20);
ie_status_receb_w	smallint;
cd_estabelecimento_w	smallint;
ie_status_atend_w	smallint;

nr_seq_formato_w	bigint;
nr_seq_metodo_w		bigint;
nr_seq_formato_red_w	bigint;
qt_dec_exame_w		smallint;
ie_campo_calculo_w	varchar(1);
ds_unidade_medida_w		varchar(15);
qt_horas_w		bigint	:= 0;
qt_dias_w		bigint	:= 0;
qt_minima_w			double precision;
qt_maxima_w			double precision;
pr_minimo_w			double precision;
pr_maximo_w			double precision;
qt_exames_result_w	bigint;
nr_seq_unid_med_w		bigint;
ie_consiste_w		varchar(1);
ie_formato_result_w		varchar(3);
qt_decimais_w			smallint;
ie_sexo_w				varchar(1);
nr_sequencia_w		bigint;
nr_seq_metodo_exame_w	bigint;
nr_seq_exame_sup_w	bigint;
nr_seq_analito_w	bigint;
nr_seq_exame_format_w	bigint;
ie_referencia_int_tasy_w varchar(1);
ie_existe_ref_tasy_w	varchar(1);
ie_normalidade_w	bigint;
ie_aprova_integracao_w varchar(1);
qt_resultados_pend_w	integer;
ds_consistencia_w		varchar(4000);
qt_filhos_w bigint;

C010 CURSOR FOR

SELECT	A.NR_SEQ_EXAME,
	obter_formato_result_exame(a.nr_seq_exame, b.nr_seq_material) ie_formato_result,
	coalesce(b.qt_decimais,coalesce(c.qt_decimais, qt_dec_exame_w)) qt_decimais,
	a.nr_coluna,
	a.nr_linha
FROM exame_laboratorio c, exame_lab_format_item a
LEFT OUTER JOIN exame_lab_material b ON (A.NR_SEQ_EXAME = B.NR_SEQ_EXAME AND nr_seq_material_w = B.NR_SEQ_MATERIAL)
WHERE A.NR_SEQ_FORMATO = nr_seq_formato_w AND (A.NR_SEQ_EXAME IS NOT NULL AND A.NR_SEQ_EXAME::text <> '') AND A.NR_SEQ_EXAME = C.NR_SEQ_EXAME
union all

SELECT	A.NR_SEQ_EXAME,
	obter_formato_result_exame(a.nr_seq_exame, b.nr_seq_material) ie_formato_result,
	coalesce(b.qt_decimais, coalesce(c.qt_decimais, qt_dec_exame_w)) qt_decimais,
	a.nr_coluna,
	a.nr_linha
FROM exame_lab_format d, exame_laboratorio c, exame_lab_format_item a
LEFT OUTER JOIN exame_lab_material b ON (A.NR_SEQ_EXAME = B.NR_SEQ_EXAME AND nr_seq_material_w = B.NR_SEQ_MATERIAL)
WHERE D.NR_SEQ_SUPERIOR = nr_seq_formato_w AND D.NR_SEQ_FORMATO =  A.NR_SEQ_FORMATO AND (A.NR_SEQ_EXAME IS NOT NULL AND A.NR_SEQ_EXAME::text <> '') AND A.NR_SEQ_EXAME = C.NR_SEQ_EXAME   order by 5,4;


BEGIN
/*Procedure created to SwissLab/IxServ integration for German market, based on gera_result_datainnovations*/

select 	max(nr_prescricao)
into STRICT	nr_prescricao_w
from	prescr_medica
where	nr_controle_int_lab	= (nr_prescricao_ext_p)::numeric
and		nr_atendimento		= (nr_atendimento_p)::numeric 
and	coalesce(dt_suspensao::text, '') = '';

select	max(nr_seq_exame),		
		max(cd_procedimento),
		max(ie_origem_proced),
		max(nr_seq_proc_interno)
into STRICT	nr_seq_exame_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w
from	exame_laboratorio
where	coalesce(cd_exame_integracao, cd_exame) = cd_exame_p;

if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then

	select	max(nr_sequencia)
	into STRICT	nr_seq_prescr_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_w
	and		nr_seq_exame = nr_seq_exame_w
	and		coalesce(ie_suspenso, 'N') = 'N';

	CALL gravar_log_lab(69999,	'1 - Swisslab - '||
				to_char(nr_prescricao_w)||' - '||
				cd_exame_p	||' - '||
				nr_seq_exame_w	||' - '||
				nr_seq_prescr_w	||' - '||
				ds_resultado_p	||' - '||
				ds_reference_p	||' - '||
				ds_units_p	||' - '||
				nm_usuario_p, 'SwissLab', nr_prescricao_w);
				
	if (coalesce(nr_seq_prescr_w::text, '') = '') then
		select	max(a.nr_seq_superior)
		into STRICT	nr_seq_exame_sup_w
		from	exame_laboratorio a
		where	a.cd_exame_integracao = cd_exame_p;
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_prescr_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_w
		and	nr_seq_exame 	= nr_seq_exame_sup_w
		and	coalesce(ie_suspenso, 'N') = 'N';
		
		if (nr_seq_prescr_w IS NOT NULL AND nr_seq_prescr_w::text <> '') then
			nr_seq_analito_w := nr_seq_exame_w;
			--nr_seq_exame_w := nr_seq_exame_sup_w
		end if;

		if (coalesce(nr_seq_prescr_w::text, '') = '') then
			begin
			if (coalesce(cd_procedimento_w::text, '') = '') or (coalesce(ie_origem_proced_w::text, '') = '') then
				select 	max(cd_procedimento),
						max(ie_origem_proced)
				into STRICT	cd_procedimento_w,
						ie_origem_proced_w
				from 	proc_interno
				where 	nr_sequencia = nr_seq_proc_interno_w;
			end if;
			
			nr_seq_prescr_w := Gerar_Proced_adicional(nr_prescricao_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, null, nm_usuario_p, null, null, null, null, null, nr_seq_prescr_w);
			exception
				when others then
				if (SQLSTATE = -1400) then
					CALL gravar_log_lab(69999, obter_desc_expressao(950528) ||chr(13)||chr(10)|| sqlerrm, 'SwissLab', nr_prescricao_w);
				else
					CALL gravar_log_lab(69999, sqlerrm, 'SwissLab', nr_prescricao_w);
				end if;
			end;
		end if;
	end if;

	select	max(cd_estabelecimento),
			max(obter_sexo_prescricao(nr_prescricao))
	into STRICT	cd_estabelecimento_w,
			ie_sexo_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_w;


	if (coalesce(cd_estabelecimento_w::text, '') = '') then
		select max(cd_estabelecimento)
		into STRICT cd_estabelecimento_w 
		from atendimento_paciente
		where nr_atendimento = nr_atendimento_p;
	end if;

	select	max(ie_status_atend),
			max(cd_material_exame)
	into STRICT	ie_status_atend_w,
			cd_material_exame_w
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_w
	and		nr_sequencia = nr_seq_prescr_w;


	select	max(IE_ATUAL_REF_GER_LAUDO),
			max(ie_aprova_resultado_integ)
	into STRICT	ie_referencia_int_tasy_w,
			ie_aprova_integracao_w
	from	lab_parametro
	where	cd_estabelecimento = cd_estabelecimento_w;

	if (ds_normality_p = 'L') then
		ie_normalidade_w := 1088;--abaixo do intervalo normal = 1088
	elsif (ds_normality_p = 'H') then
	  ie_normalidade_w := 1089;--acima do intervalo normal = 1089
	elsif (ds_normality_p = 'N' OR coalesce(ds_normality_p::text, '') = '') then
	  ie_normalidade_w := 758;--na faixa normal = 758
	else
	  ie_normalidade_w := null; --outras opcoes nao mapeadas ate o momento
	end if;

	if (ie_status_atend_w <= 30) then

		CALL Gera_Exame_Result_Lab(nr_prescricao_w, nr_seq_prescr_w, 'N', 'N', 'S', nm_usuario_p);
		
		select	max(nr_seq_resultado)
		into STRICT	nr_seq_resultado_w
		from	exame_lab_resultado
		where	nr_prescricao = nr_prescricao_w;
		

		select	coalesce(max(qt_decimais),0),
				Max(ie_campo_calculo)
		into STRICT	qt_dec_exame_w,
				ie_campo_calculo_w
		from	exame_laboratorio
		where	nr_seq_exame = nr_seq_exame_w;
		
		select	max(nr_seq_material),
				max(nr_seq_formato),
				max(nr_seq_metodo)
		into STRICT	nr_seq_material_w,
				nr_seq_formato_w,
				nr_seq_metodo_w
		from	exame_lab_result_item
		where	nr_seq_exame = coalesce(nr_seq_exame_sup_w,nr_seq_exame_w)
		and		nr_seq_resultado = nr_seq_resultado_w
		and		nr_seq_prescr = nr_seq_prescr_w;

		--rotina para gerar os analitos


		--gera_resultado_lab (nr_seq_resultado_w, nr_prescricao_w, nr_seq_prescr_w, nr_seq_exame_w,nr_seq_material_w, null ,ie_sexo_w,'SwissLab');


		

		--gravar_log_lab(69999,'007-2 swisslab - nr_seq_material_w: '||nr_seq_material_w||' nr_seq_formato_w: '||nr_seq_formato_w||' nr_seq_metodo_w: '||nr_seq_metodo_w||' nr_seq_exame_w: '||nr_seq_exame_w,'tasy', nr_prescricao_w);
		if (coalesce(nr_seq_formato_w,0) = 0) then
				select	coalesce(max(obter_formato_exame(coalesce(nr_seq_exame_sup_w,nr_seq_exame_w), nr_seq_material_w, nr_seq_metodo_w, 'L')),0),
						coalesce(max(obter_formato_exame(coalesce(nr_seq_exame_sup_w,nr_seq_exame_w), nr_seq_material_w, nr_seq_metodo_w, 'R')),0)
				into STRICT	nr_seq_formato_w,
						nr_seq_formato_red_w
				;
				
				update 	exame_lab_result_item
				set		nr_seq_formato = nr_seq_formato_w,
						nr_seq_formato_red = nr_seq_formato_red_w
				where	nr_seq_resultado = nr_seq_resultado_w
				and		nr_seq_exame	 = coalesce(nr_seq_exame_sup_w,nr_seq_exame_w)
				and		nr_seq_prescr = nr_seq_prescr_w;
				
				commit;
		end if;

		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') and (nr_seq_resultado_w IS NOT NULL AND nr_seq_resultado_w::text <> '') then		

			select 	obter_dias_entre_datas(obter_nascimento_prescricao(nr_prescricao_w),clock_timestamp()),
					Obter_Hora_Entre_datas(obter_nascimento_prescricao(nr_prescricao_w),clock_timestamp())
			into STRICT 	qt_dias_w,
					qt_horas_w
			;

			begin
			OPEN C010;
				LOOP
				FETCH C010 into	
					nr_seq_exame_format_w,
					ie_formato_result_w,
					qt_decimais_w,
					nr_linha_w,nr_coluna_w;
					
					if C010%FOUND then
						begin

							begin					
								--gravar_log_lab(69999,'007-3 swisslab - nr_seq_exame_format_w: '||nr_seq_exame_format_w||' nr_seq_formato_w: '||nr_seq_formato_w||' nr_seq_metodo_w: '||nr_seq_metodo_w||' nr_seq_exame_w: '||nr_seq_exame_w,'tasy', nr_prescricao_w);

								--commit;
								select 	qt_minima,
										qt_maxima,
										qt_percent_min,
										qt_percent_max,
										ds_observacao,
										CASE WHEN ie_tipo_valor=3 THEN 'N'  ELSE 'S' END ,
										'S'
								into STRICT	qt_minima_w,
										qt_maxima_w,
										pr_minimo_w,
										pr_maximo_w,
										ds_referencia_w,
										ie_consiste_w,
										ie_existe_ref_tasy_w
								from (
										SELECT 	qt_minima,
												qt_maxima,
												qt_percent_min,
												qt_percent_max,
												ds_observacao,
												ie_tipo_valor
										from 	exame_lab_padrao
										where ((ie_sexo = ie_sexo_w) or (ie_sexo = '0'))
										  and nr_seq_exame = nr_seq_exame_format_w
										  and coalesce(nr_seq_material,nr_seq_material_w) = nr_seq_material_w
										  and coalesce(nr_seq_metodo, nr_seq_metodo_w) = nr_seq_metodo_w
										  and ((((qt_dias_w / 365.25) between qt_idade_min and qt_idade_max) and (ie_periodo = 'A')) or
											   ((((qt_dias_w / 365.25) * 12) between qt_idade_min and qt_idade_max) and (ie_periodo = 'M')) or
											(qt_dias_w between qt_idade_min and qt_idade_max AND ie_periodo = 'D') or
											(qt_horas_w between qt_idade_min and qt_idade_max AND ie_periodo = 'H'))
										  and ie_tipo_valor in (0,3)
										  and coalesce(ie_situacao,'A') = 'A'
										order by coalesce(nr_seq_material, 9999999999),
												 coalesce(nr_seq_metodo, 9999999999), ie_sexo,
												 CASE WHEN ie_periodo='D' THEN 1 WHEN ie_periodo='M' THEN 2  ELSE 3 END ) alias21 LIMIT 1;

							exception
								when others then
									qt_minima_w 	:= null;
									qt_maxima_w 	:= null;
									pr_minimo_w 	:= null;
									pr_maximo_w 	:= null;
									ds_referencia_w	:= null;
									ie_consiste_w	:= 'N';
									ie_existe_ref_tasy_w	:= 'N';
							end;
						
						if (ie_referencia_int_tasy_w = 'N') and (ie_existe_ref_tasy_w = 'N') then						
							if (ds_reference_p = 'null') then	
								ds_referencia_w	:= null;
							else
								ds_referencia_w := ds_reference_p;
							end if;						
						elsif (ie_referencia_int_tasy_w = 'T') and (ds_reference_p IS NOT NULL AND ds_reference_p::text <> '')	and (ds_reference_p <> 'null')	then
							ds_referencia_w := ds_reference_p;					
						end if;
						
						select	count(*)
						into STRICT	qt_exames_result_w
						from	exame_lab_result_item
						where	nr_seq_resultado	= nr_seq_resultado_w
						  and	nr_seq_prescr		= nr_seq_prescr_w
						  and	nr_seq_exame		= nr_seq_exame_format_w;
						
						--gravar_log_lab(69999,'007-4 swisslab - nr_seq_exame_format_w: '||nr_seq_exame_format_w||' nr_seq_formato_w: '||nr_seq_formato_w||' qt_exames_result_w: '||qt_exames_result_w||' nr_seq_exame_w: '||nr_seq_exame_w,'tasy', nr_prescricao_w);


						--commit;
						

						if (qt_exames_result_w = 1) then

							update exame_lab_result_item
							set pr_minimo = pr_minimo_w,
								pr_maximo = pr_maximo_w,
								qt_minima = qt_minima_w,
								qt_maxima = qt_maxima_w,
								--ds_referencia = ds_referencia_w,
								ie_consiste = ie_consiste_w,
								nr_seq_unid_med = nr_seq_unid_med_w,
								qt_decimais = qt_decimais_w
							where nr_seq_resultado	= nr_seq_resultado_w
							  and nr_seq_prescr	= nr_seq_prescr_w
							  and nr_seq_exame	= nr_seq_exame_format_w;

							if (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then
								if (ie_formato_result_w = 'V') or (ie_formato_result_w = 'VP' and ie_campo_calculo_w = 'P') then
									update exame_lab_result_item
									set	qt_resultado = ds_resultado_w, dt_digitacao = clock_timestamp()
									where nr_seq_resultado	= nr_seq_resultado_w
									  and nr_seq_prescr	= nr_seq_prescr_w
									  and nr_seq_exame	= nr_seq_exame_format_w;

								elsif (ie_formato_result_w = 'P') or (ie_formato_result_w = 'VP' and ie_campo_calculo_w = 'V') then
									update exame_lab_result_item
									set	pr_resultado = round(ds_resultado_w,qt_decimais_w), dt_digitacao = clock_timestamp()
									where nr_seq_resultado	= nr_seq_resultado_w
									  and nr_seq_prescr	= nr_seq_prescr_w
									  and nr_seq_exame	= nr_seq_exame_format_w;
								else
								
									update exame_lab_result_item
									set	ds_resultado = coalesce(lab_obter_valor_integracao(coalesce(nr_seq_analito_w,nr_seq_exame_w), ds_resultado_w),ds_resultado_w),
										dt_digitacao = clock_timestamp()
									where nr_seq_resultado	= nr_seq_resultado_w
									  and nr_seq_prescr	= nr_seq_prescr_w
									  and nr_seq_exame	= nr_seq_exame_format_w;
								end if;
							end if;
							
						else
						
							--gravar_log_lab(69999,'007-5 swisslab - nr_seq_exame_format_w: '||nr_seq_exame_format_w||' nr_seq_analito_w: '||nr_seq_analito_w||' qt_exames_result_w: '||qt_exames_result_w||' nr_seq_exame_w: '||nr_seq_exame_w,'tasy', nr_prescricao_w);

							--commit;
							
							select 	obter_metodo_regra_item(nr_prescricao_w,coalesce(nr_seq_analito_w,nr_seq_exame_w))
							into STRICT	nr_seq_metodo_exame_w
							;

							pr_resultado_w := 0;

							if (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then
								if (ie_formato_result_w = 'V') or (ie_formato_result_w = 'VP' and ie_campo_calculo_w = 'P') then
									qt_resultado_w	:= ds_resultado_w;
									ds_resultado_w	:= '';
								elsif (ie_formato_result_w = 'P') or (ie_formato_result_w = 'VP' and ie_campo_calculo_w = 'V') then
									pr_resultado_w	:= ds_resultado_w;
									ds_resultado_w	:= '';
								end if;
							end if;

							begin
							select 	coalesce(max(nr_sequencia),0)
							into STRICT 	nr_sequencia_w
							from 	exame_lab_result_item
							where   nr_seq_resultado = nr_seq_resultado_w;
							exception
								when no_data_found then
									begin
									nr_sequencia_w		:= 0;
									end;
							end;
							--gravar_log_lab(69999,'007-6 swisslab - nr_seq_exame_format_w: '||nr_seq_exame_format_w||' nr_seq_analito_w: '||nr_seq_analito_w||' nr_sequencia_w: '||nr_sequencia_w||' nr_seq_exame_w: '||nr_seq_exame_w,'tasy', nr_prescricao_w);

							--commit;
							
							nr_sequencia_w 	:= nr_sequencia_w + 1;
							pr_resultado_w	:= round(pr_resultado_w,qt_decimais_w);
							
							insert into exame_lab_result_item(	nr_seq_resultado,
								nr_sequencia, 
								nr_seq_exame, 
								dt_atualizacao,
								nm_usuario, 
								qt_resultado, 
								ds_resultado, 
								nr_seq_metodo,
								nr_seq_material, 
								pr_resultado, 
								ie_status, 
								dt_aprovacao,
								nm_usuario_aprovacao, 
								nr_seq_prescr,
								pr_minimo,
								pr_maximo,
								qt_minima,
								qt_maxima,
								/*ds_referencia,*/

								ds_unidade_medida, 
								nr_seq_unid_med,
								qt_decimais, 
								ds_regra, 
								ie_consiste,	
								nr_seq_reagente, 
								nr_seq_metodo_exame,
								DS_REFERENCIA_EXT, 
								IE_NORMALIDADE, 
								dt_digitacao, 
								ie_resultado_referencia)
							values (	nr_seq_resultado_w,
								nr_sequencia_w,
								nr_seq_exame_format_w,
								clock_timestamp(),
								nm_usuario_p,
								CASE WHEN ie_formato_result_w='V' THEN qt_resultado_w WHEN ie_formato_result_w='VP' THEN qt_resultado_w WHEN ie_formato_result_w='CV' THEN qt_resultado_w END ,
								coalesce(lab_obter_valor_integracao(nr_seq_exame_format_w, ds_resultado_w),ds_resultado_w),
								null, 
								null,
								CASE WHEN ie_formato_result_w='P' THEN pr_resultado_w WHEN ie_formato_result_w='VP' THEN pr_resultado_w END , 
								'', 
								null, 
								'',
								nr_seq_prescr_w,
								pr_minimo_w,
								pr_maximo_w,
								qt_minima_w,
								qt_maxima_w,
								/*ds_referencia_w,*/
coalesce(ds_units_p,' '), 
								nr_seq_unid_med_w,
								qt_decimais_w, 
								null, 
								ie_consiste_w, 
								null, 
								nr_seq_metodo_exame_w,
								ds_reference_p, 
								ie_normalidade_w, 
								null, 
								CASE WHEN ds_normality_p='null' THEN  ''  ELSE ds_normality_p END );
							
						end if;
						end;

					else
						exit;
					end if;
					
				END LOOP;
			CLOSE C010;
				
			exception
				when others then
				CALL gravar_log_lab(69999,'2 swisslab - gera_result_swisslab - excep: '||sqlerrm,'tasy', nr_prescricao_w);				
			end;
			
			select 	ie_formato_resultado
			into STRICT	ie_formato_result_w
			from	exame_laboratorio
			where 	nr_seq_exame = coalesce(nr_seq_analito_w,nr_seq_exame_w);
			
			if (ie_formato_result_w = 'V') or (ie_formato_result_w = 'DV') then
				begin
				select (coalesce(ds_resultado_p,0))::numeric
				into STRICT qt_resultado_w
				;
				
				ds_resultado_w	:= null;
				qt_resultado_w	:= qt_resultado_w;
				pr_resultado_w  := null;
				
				exception
					when others then
					begin
					
					select (coalesce(replace(ds_resultado_p, ',', '.'),0))::numeric
					into STRICT qt_resultado_w
					;
					
					ds_resultado_w	:= null;
					
					if (substr(ds_resultado_p,1,1) = '.') then
						qt_resultado_w	:= '0'||qt_resultado_w;
					else
						qt_resultado_w	:= qt_resultado_w;
					end if;								
					
					pr_resultado_w  := null;
				
					exception
					when others then	
						
					ds_resultado_w	:= ds_resultado_p;
					qt_resultado_w	:= null;
					pr_resultado_w  := null;
					
					end;
				end;
			elsif ((ie_formato_result_w = 'P') or (ie_formato_result_w = 'VP')) then
				begin
				
				select (coalesce(ds_resultado_p,0))::numeric
				into STRICT qt_resultado_w
				;
				
				ds_resultado_w	:= null;
				qt_resultado_w	:= qt_resultado_w;
				pr_resultado_w  := null;
				
				exception
					when others then
					begin
					
					select (coalesce(replace(ds_resultado_p, ',', '.'),0))::numeric
					into STRICT qt_resultado_w
					;
					
					ds_resultado_w	:= null;
					qt_resultado_w	:= qt_resultado_w;
					pr_resultado_w  := null;
				
					exception
					when others then	
						
						ds_resultado_w	:= ds_resultado_p;
						qt_resultado_w	:= null;
						pr_resultado_w  := null;
					
					end;
				end;
				
			else
				ds_resultado_w	:= ds_resultado_p;
				qt_resultado_w	:= null;
				pr_resultado_w  := null;
					
			end if;
			
			update 	exame_lab_result_item
			set	qt_resultado 	 = qt_resultado_w,
				ds_resultado	 = coalesce(lab_obter_valor_integracao(coalesce(nr_seq_analito_w,nr_seq_exame_w), ds_resultado_w), ds_resultado_w),
				pr_resultado	 = round(pr_resultado_w,qt_decimais_w),
			
				--ds_referencia	 = ds_reference_p,
			
				ds_referencia_ext  = coalesce(ds_reference_p,ds_referencia),
				nm_usuario	 	 = nm_usuario_p,
				dt_atualizacao	 = clock_timestamp(),
				dt_digitacao = clock_timestamp(),
			
				ds_unidade_medida = substr(coalesce(ds_units_p,' '),1,40),
			
				ie_resultado_referencia = CASE WHEN ds_normality_p='null' THEN  ''  ELSE ds_normality_p END
			where	nr_seq_resultado = nr_seq_resultado_w
			and		nr_seq_exame	 = coalesce(nr_seq_analito_w,nr_seq_exame_w)
			and		nr_seq_prescr = nr_seq_prescr_w;
				
			update	exame_lab_result_item
			set		ds_observacao = ds_observacao_p
			where	nr_seq_resultado = nr_seq_resultado_w
			and		nr_seq_exame	 = coalesce(nr_seq_analito_w,nr_seq_exame_w)
			and		nr_seq_prescr = nr_seq_prescr_w;
			
			commit;
			
			select
			  count(*) 
			into STRICT qt_filhos_w
			from 
			  exame_lab_result_item 
			where 
			  NR_SEQ_PRESCR = nr_seq_prescr_w 
			  and nr_seq_resultado = nr_seq_resultado_w 
			  and coalesce(nr_seq_material::text, '') = '';
			
			if (qt_filhos_w = 0) then
			  select 
				count(*)
			  into STRICT qt_resultados_pend_w
			  from exame_lab_result_item
			  where 
				nr_seq_resultado = nr_seq_resultado_w
				and nr_seq_prescr = nr_seq_prescr_w    
				and coalesce(dt_digitacao::text, '') = '';
			else
			  select
				count(*)
			  into STRICT qt_resultados_pend_w
			  from exame_lab_result_item
			  where 
				nr_seq_resultado = nr_seq_resultado_w
				and nr_seq_prescr = nr_seq_prescr_w
				and coalesce(nr_seq_material::text, '') = ''
				and coalesce(dt_digitacao::text, '') = '';
			end if;
			
			--gravar_log_lab(69999,'2.88 - Swisslab - '||nr_seq_resultado_w||'- nr_seq_analito_w: '||nr_seq_analito_w||' nr_seq_exame_w: '||nr_seq_exame_w||' ds_resultado_w: '||ds_resultado_w||' qt_resultados_pend_w: '||qt_resultados_pend_w,nm_usuario_p, nr_prescricao_w);

			--commit;
			
			select CASE WHEN ie_aprova_integracao_w='S' THEN 35 WHEN ie_aprova_integracao_w='L' THEN 40  ELSE 30 END
			into STRICT ie_status_receb_w
			;

			commit;
			
		else
		
			gravar_log_lab(69999,'Swisslabb - '||
								to_char(nr_prescricao_w)||' - '||
								cd_exame_p	||' - '||
								ds_resultado_p	||' - '||
								nr_seq_prescr_w	||' - '||
								nr_seq_analito_w	||' - '||
								nr_seq_exame_w || ' - The stage of the exam is ahead of the stage of receiving', 'SwissLab', nr_prescricao_w);
								
		end if;	
		
	end if;
else

	begin
	
		select 	ie_formato_resultado
		into STRICT	ie_formato_result_w
		from	exame_laboratorio
		where 	nr_seq_exame = nr_seq_exame_w;
		
		if (ie_formato_result_w = 'V') or (ie_formato_result_w = 'DV') then
			begin
			select (coalesce(ds_resultado_p,0))::numeric
			into STRICT qt_resultado_w
			;
			
			ds_resultado_w	:= null;
			qt_resultado_w	:= qt_resultado_w;
			pr_resultado_w  := null;
			
			exception
				when others then
				begin
				
				select (coalesce(replace(ds_resultado_p, ',', '.'),0))::numeric
				into STRICT qt_resultado_w
				;
				
				ds_resultado_w	:= null;
				
				if (substr(ds_resultado_p,1,1) = '.') then
					qt_resultado_w	:= '0'||qt_resultado_w;
				else
					qt_resultado_w	:= qt_resultado_w;
				end if;								
				
				pr_resultado_w  := null;
			
				exception
				when others then	
					
				ds_resultado_w	:= ds_resultado_p;
				qt_resultado_w	:= null;
				pr_resultado_w  := null;
				
				end;
			end;
		elsif ((ie_formato_result_w = 'P') or (ie_formato_result_w = 'VP')) then
			begin
			
			select (coalesce(ds_resultado_p,0))::numeric
			into STRICT qt_resultado_w
			;
			
			ds_resultado_w	:= null;
			qt_resultado_w	:= qt_resultado_w;
			pr_resultado_w  := null;
			
			exception
				when others then
				begin
				
				select (coalesce(replace(ds_resultado_p, ',', '.'),0))::numeric
				into STRICT qt_resultado_w
				;
				
				ds_resultado_w	:= null;
				qt_resultado_w	:= qt_resultado_w;
				pr_resultado_w  := null;
			
				exception
				when others then	
					
					ds_resultado_w	:= ds_resultado_p;
					qt_resultado_w	:= null;
					pr_resultado_w  := null;
				
				end;
			end;
			
		else
			ds_resultado_w	:= ds_resultado_p;
			qt_resultado_w	:= null;
			pr_resultado_w  := null;
				
		end if;
	
		CALL atualizar_lab_result_item_ext(	nr_atendimento_p,
										cd_exame_p,
										clock_timestamp(),
										clock_timestamp(),
										ds_resultado_w,
										qt_resultado_w,
										pr_resultado_w,
										coalesce(ds_units_p,' '),
										substr(coalesce(ds_units_p,' '),1,40),
										ds_observacao_p,
										nm_usuario_p);

	exception
		when others then
		CALL gravar_log_lab(69999,'3 swisslab - gera_result_swisslab (calling atualizar_lab_result_item_ext WITHOUT PRESCRIPTION) - excep: '||sqlerrm,'tasy', nr_prescricao_w);
	end;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gera_result_swisslab ( nr_atendimento_p text, nr_prescricao_ext_p text, cd_material_p text, ds_placer1_p text, ds_placer2_p text, ds_reference_p text, ds_normality_p text, cd_exame_p text, ds_resultado_p text, ds_units_p text, nm_usuario_p text, ds_observacao_p text ) FROM PUBLIC;

