-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_aplicar_regra_ticket ( nr_seq_cenario_p bigint, nr_sequencia_p bigint, cd_centro_custo_p bigint, cd_conta_contabil_p text, nr_seq_mes_ref_p bigint, nr_seq_metrica_p bigint, dt_mes_inic_p timestamp, dt_mes_fim_p timestamp, ie_regra_p text, pr_aplicar_p bigint, ie_sobrepor_p text, nr_seq_grupo_centro_p bigint, nr_seq_grupo_conta_p bigint, vl_fixo_p bigint, cd_empresa_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
ie_regra_valor - dominio 1719
PO              percentual sobre o valor de origem
PV              percentual do valor do mês em questão
VF              valor fixo
*/
cd_centro_custo_w		bigint;
cd_conta_contabil_w		varchar(20);
nr_seq_mes_ref_w			bigint;
nr_seq_metrica_w			bigint;
nr_sequencia_w			bigint;
qt_reg_w				bigint;
vl_ticket_w			double precision;
vl_ticket_ww			double precision;

/* Mêses de referencia*/

C01 CURSOR FOR
SELECT	nr_sequencia
from	ctb_mes_ref
where	dt_referencia between dt_mes_inic_p and dt_mes_fim_p
and		cd_empresa		= cd_empresa_p
order by dt_referencia;


/* Centros de custo*/

c02 CURSOR FOR
SELECT	cd_centro_custo_p

where	(cd_centro_custo_p IS NOT NULL AND cd_centro_custo_p::text <> '')

union all

select	distinct
		cd_centro_custo
from	ctb_cen_ticket_medio
where	nr_seq_cenario	= nr_seq_cenario_p
and		ie_regra_p	= 'PV'
and		coalesce(cd_centro_custo_p::text, '') = ''
and		coalesce(nr_seq_grupo_centro_p::text, '') = ''

union all

select	b.cd_centro_custo
from	ctb_cen_grupo_centro a,
		ctb_cen_centro_grupo b
where	a.nr_sequencia	= b.nr_seq_grupo
and		a.nr_sequencia	= nr_seq_grupo_centro_p
and		coalesce(cd_centro_custo_p::text, '') = ''
and 	coalesce(cd_estab_exclusivo, cd_estabelecimento_p) = cd_estabelecimento_p
and		(nr_seq_grupo_centro_p IS NOT NULL AND nr_seq_grupo_centro_p::text <> '')

union all

select 	distinct
		a.cd_centro_custo
from	ctb_orc_metrica a
where	coalesce(cd_centro_custo_p::text, '') = ''
and 	coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
and		a.nr_seq_metrica 	= 	nr_seq_metrica_p;


/* Métricas do centro de custo*/

c03 CURSOR FOR
SELECT	nr_seq_metrica_p

where	(nr_seq_metrica_p IS NOT NULL AND nr_seq_metrica_p::text <> '')

union all

select	a.nr_seq_metrica
from	ctb_orc_metrica a
where	a.cd_centro_custo		= cd_centro_custo_w
and		a.cd_estabelecimento	= cd_estabelecimento_p
and		coalesce(nr_seq_metrica_p::text, '') = '';

/* Conta contábil da regra ou do grupo de contas*/

c04 CURSOR FOR
SELECT	cd_conta_contabil_p

where	(cd_conta_contabil_p IS NOT NULL AND cd_conta_contabil_p::text <> '')

union all

select	b.cd_conta_contabil
from	ctb_cen_grupo_conta a,
		ctb_cen_grupo_conta_conta b
where	a.nr_sequencia	= b.nr_seq_grupo
and		a.nr_sequencia	= nr_seq_grupo_conta_p
and 	coalesce(a.cd_estab_exclusivo, cd_estabelecimento_p) = cd_estabelecimento_p
and		coalesce(cd_conta_contabil_p::text, '') = ''
and		(nr_seq_grupo_conta_p IS NOT NULL AND nr_seq_grupo_conta_p::text <> '');

/* Bsucar os valores base que serão utilizados para aplicar os ajustes*/

c05 CURSOR FOR
SELECT	vl_ticket_ww /* Percentual de origem */
where	ie_regra_p	= 'PO'

union all

select	a.vl_medio /* Percentual da quantidade */
from	ctb_cen_ticket_medio a
where	a.nr_seq_cenario		= nr_seq_cenario_p
and		a.nr_seq_metrica		= nr_seq_metrica_w
and		a.cd_centro_custo 		= cd_centro_custo_w
and		a.cd_conta_contabil 		= cd_conta_contabil_w
and		a.nr_seq_mes_ref		= nr_seq_mes_ref_w
and		coalesce(nr_seq_mes_ref_p::text, '') = ''
and		ie_regra_p			= 'PV';


BEGIN

open C02;
loop
fetch C02 into
	cd_centro_custo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	open C03;
	loop
	fetch C03 into
		nr_seq_metrica_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin



		open C04;
		loop
		fetch C04 into
			cd_conta_contabil_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			if (ie_regra_p = 'PO') then
				select	coalesce(max(vl_medio),0)
				into STRICT	vl_ticket_ww
				from 	ctb_cen_ticket_medio
				where 	nr_seq_cenario		= nr_seq_cenario_p
				and		nr_seq_mes_ref		= nr_seq_mes_ref_p
				and		nr_seq_metrica		= nr_seq_metrica_w
				and		cd_centro_custo		= cd_centro_custo_w
				and		cd_conta_contabil	= cd_conta_contabil_w;
			end if;
			open C01;
			loop
			fetch C01 into
				nr_seq_mes_ref_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin

				open c05;
				loop
				fetch c05 into
					vl_ticket_w;
				EXIT WHEN NOT FOUND; /* apply on c05 */
					begin

					if (ie_regra_p = 'PO') then /* Percentual sobre o valor base*/
						vl_ticket_w	:= vl_ticket_w + dividir((vl_ticket_w * pr_aplicar_p),100);
					elsif (ie_regra_p = 'PV') then /* Percentual do valor */
						vl_ticket_w	:= vl_ticket_w * dividir(pr_aplicar_p, 100);
					end if;

					select	count(*)
					into STRICT	qt_reg_w
					from 	ctb_cen_ticket_medio
					where 	nr_seq_cenario		= nr_seq_cenario_p
					and	cd_estabelecimento		= cd_estabelecimento_p
					and	nr_seq_mes_ref			= nr_seq_mes_ref_w
					and	nr_seq_metrica			= nr_seq_metrica_w
					and	cd_centro_custo			= cd_centro_custo_w
					and	cd_conta_contabil		= cd_conta_contabil_w;

					if (qt_reg_w = 0)	and (coalesce(vl_ticket_w,0) <> 0) then
						select	nextval('ctb_cen_ticket_medio_seq')
						into STRICT	nr_sequencia_w
						;

						insert into ctb_cen_ticket_medio(
							nr_sequencia,
							nr_seq_cenario,
							cd_estabelecimento,
							nr_seq_mes_ref,
							dt_atualizacao,
							nm_usuario,
							nr_seq_metrica,
							cd_centro_custo,
							cd_conta_contabil,
							vl_medio,
							vl_original)
						values (nr_sequencia_w,
							nr_seq_cenario_p,
							cd_estabelecimento_p,
							nr_seq_mes_ref_w,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_metrica_w,
							cd_centro_custo_w,
							cd_conta_contabil_w,
							vl_ticket_w,
							vl_ticket_w);
					elsif (ie_sobrepor_p = 'S') then
						update	ctb_cen_ticket_medio
						set	dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p,
							vl_medio		= vl_ticket_w
						where 	nr_seq_cenario		= nr_seq_cenario_p
						and	nr_seq_mes_ref 		= nr_seq_mes_ref_w
						and	nr_seq_metrica 		= nr_seq_metrica_w
						and	cd_centro_custo 	= cd_centro_custo_w
						and	cd_estabelecimento	= cd_estabelecimento_p
						and	cd_conta_contabil	= cd_conta_contabil_w;
					end if;
					end;
				end loop;
				close c05;
				end;
			end loop;
			close C01;

			end;
		end loop;
		close C04;
		end;
	end loop;
	close C03;
end;
end loop;
close C02;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_aplicar_regra_ticket ( nr_seq_cenario_p bigint, nr_sequencia_p bigint, cd_centro_custo_p bigint, cd_conta_contabil_p text, nr_seq_mes_ref_p bigint, nr_seq_metrica_p bigint, dt_mes_inic_p timestamp, dt_mes_fim_p timestamp, ie_regra_p text, pr_aplicar_p bigint, ie_sobrepor_p text, nr_seq_grupo_centro_p bigint, nr_seq_grupo_conta_p bigint, vl_fixo_p bigint, cd_empresa_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

