-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_material_ecc ( nm_usuario_p text, cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, dt_mesano_final_p timestamp, cd_local_estoque_p bigint) AS $body$
DECLARE


vl_estoque_w		double precision;
qt_estoque_w		double precision;
vl_consumo_w		double precision;
qt_consumo_w		double precision;
vl_compra_w		double precision;
qt_compra_w		double precision;
cd_grupo_material_w	smallint;
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
cd_material_w		bigint;
dt_mesano_inicial_w	timestamp;
dt_mesano_final_w	timestamp;
dt_mesano_referencia_w	timestamp;

-- Estoque
C01 CURSOR FOR
	SELECT	sum(a.vl_estoque) vl_estoque,
		sum(a.qt_estoque) qt_estoque,
		e.cd_grupo_material,
		e.cd_subgrupo_material,
		e.cd_classe_material,
		a.cd_material,
		a.dt_mesano_referencia
	from  	saldo_estoque a,
		estrutura_material_v e
	where	a.dt_mesano_referencia between dt_mesano_inicial_w and dt_mesano_final_w
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.cd_material = e.cd_material
	and	((coalesce(cd_local_estoque_p::text, '') = '') or (a.cd_local_estoque = cd_local_estoque_p))
	group by e.cd_grupo_material,
		 e.cd_subgrupo_material,
		 e.cd_classe_material,
		 a.cd_material,
		 a.dt_mesano_referencia;

-- Consumo
C02 CURSOR FOR
	SELECT	sum(CASE WHEN b.ie_consumo='A' THEN a.vl_estoque WHEN b.ie_consumo='D' THEN a.vl_estoque*-1  ELSE 0 END ) vl_consumo,
		sum(CASE WHEN b.ie_consumo='A' THEN a.qt_estoque WHEN b.ie_consumo='D' THEN a.qt_estoque*-1  ELSE 0 END ) qt_consumo,
		e.cd_grupo_material,
		e.cd_subgrupo_material,
		e.cd_classe_material,
		a.cd_material,
		a.dt_mesano_referencia
	from	resumo_movto_estoque a,
		operacao_estoque b,
		estrutura_material_v e
	where	a.dt_mesano_referencia between dt_mesano_inicial_w and dt_mesano_final_w
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.ie_consignado = 'N'
	and	a.cd_material = e.cd_material
	and	a.cd_operacao_estoque = b.cd_operacao_estoque
	and	((coalesce(cd_local_estoque_p::text, '') = '') or (a.cd_local_estoque = cd_local_estoque_p))
	group by e.cd_grupo_material,
		 e.cd_subgrupo_material,
		 e.cd_classe_material,
		 a.cd_material,
		 a.dt_mesano_referencia;

-- Compras
C03 CURSOR FOR
	SELECT	sum(b.vl_liquido) vl_compra,
		sum(b.qt_item_estoque) qt_compra,
		e.cd_grupo_material,
		e.cd_subgrupo_material,
		e.cd_classe_material,
		b.cd_material,
		trunc(a.dt_atualizacao,'mm')
	from	nota_fiscal a,
		nota_fiscal_item b,
		operacao_estoque c,
		operacao_nota d,
		estrutura_material_v e
	where	a.dt_atualizacao between dt_mesano_inicial_w and dt_mesano_final_w
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	c.ie_tipo_requisicao in (0,6)
	and	((c.ie_consignado = 0) or (coalesce(c.ie_consignado::text, '') = ''))
	and	(a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '')
	and	a.ie_situacao = '1'
	and	d.ie_tipo_operacao = 1
	and	a.nr_sequencia = b.nr_sequencia
	and	a.cd_operacao_nf = d.cd_operacao_nf
	and	d.cd_operacao_estoque = c.cd_operacao_estoque
	and	b.cd_material = e.cd_material
	and	((coalesce(cd_local_estoque_p::text, '') = '') or (b.cd_local_estoque = cd_local_estoque_p))
	group by e.cd_grupo_material,
		 e.cd_subgrupo_material,
		 e.cd_classe_material,
		 b.cd_material,
		 trunc(a.dt_atualizacao,'mm');


BEGIN

dt_mesano_inicial_w := dt_mesano_referencia_p;
dt_mesano_final_w := fim_mes(coalesce(dt_mesano_final_p,dt_mesano_referencia_p));

delete
from  	w_material_ecc
where	dt_mesano_referencia between dt_mesano_inicial_w and dt_mesano_final_w
and	cd_estabelecimento = cd_estabelecimento_p;

open C01;
loop
fetch C01 into
	vl_estoque_w,
	qt_estoque_w,
	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	cd_material_w,
	dt_mesano_referencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	insert 	into
		w_material_ecc(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material,
		cd_material,
		dt_mesano_referencia,
		vl_estoque,
		qt_estoque,
		vl_consumo,
		qt_consumo,
		vl_compra,
		qt_compra)
		values (
		nextval('w_material_ecc_seq'),
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w,
		cd_material_w,
		dt_mesano_referencia_w,
		coalesce(vl_estoque_w,0),
		coalesce(qt_estoque_w,0),
		0,
		0,
		0,
		0);
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	vl_consumo_w,
	qt_consumo_w,
	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	cd_material_w,
	dt_mesano_referencia_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	update	w_material_ecc
	set	vl_consumo = vl_consumo_w,
		qt_consumo = qt_consumo_w
	where	dt_mesano_referencia = dt_mesano_referencia_w
	and	cd_estabelecimento = cd_estabelecimento_p
	and	cd_material = cd_material_w;
	end;
	if (NOT FOUND) then
		insert 	into
		w_material_ecc(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material,
		cd_material,
		dt_mesano_referencia,
		vl_estoque,
		qt_estoque,
		vl_consumo,
		qt_consumo,
		vl_compra,
		qt_compra)
		values (
		nextval('w_material_ecc_seq'),
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w,
		cd_material_w,
		dt_mesano_referencia_w,
		0,
		0,
		vl_consumo_w,
		qt_consumo_w,
		0,
		0);
	end if;
end loop;
close C02;

open C03;
loop
fetch C03 into
	vl_compra_w,
	qt_compra_w,
	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	cd_material_w,
	dt_mesano_referencia_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	update	w_material_ecc
	set	vl_compra = vl_compra_w,
		qt_compra = qt_compra_w
	where	dt_mesano_referencia = dt_mesano_referencia_w
	and	cd_estabelecimento = cd_estabelecimento_p
	and	cd_material = cd_material_w;
	if (NOT FOUND) then
		insert 	into
		w_material_ecc(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material,
		cd_material,
		dt_mesano_referencia,
		vl_estoque,
		qt_estoque,
		vl_consumo,
		qt_consumo,
		vl_compra,
		qt_compra)
		values (
		nextval('w_material_ecc_seq'),
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w,
		cd_material_w,
		dt_mesano_referencia_w,
		0,
		0,
		0,
		0,
		vl_compra_w,
		qt_compra_w);
	end if;
	end;
end loop;
close C03;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_material_ecc ( nm_usuario_p text, cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, dt_mesano_final_p timestamp, cd_local_estoque_p bigint) FROM PUBLIC;

