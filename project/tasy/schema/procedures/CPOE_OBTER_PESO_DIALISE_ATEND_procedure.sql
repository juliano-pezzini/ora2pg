-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_obter_peso_dialise_atend ( nr_atendimento_p bigint, qt_peso_atual_p INOUT bigint, qt_peso_ideal_p INOUT bigint, qt_peso_pos_p INOUT bigint) AS $body$
DECLARE


qt_peso_pos_w			cpoe_dialise.qt_peso_pos%type;
qt_peso_ideal_w			cpoe_dialise.qt_peso_ideal%type;
qt_peso_atual_w			cpoe_dialise.qt_peso_atual%type;
dt_atualizacao_w		cpoe_dialise.dt_atualizacao%type;
dt_atualizacao_ww		cpoe_dialise.dt_atualizacao%type;
nr_seq_dialise_w		cpoe_dialise.nr_sequencia%type;
qt_sinal_vital_w		bigint;

c01 CURSOR FOR
SELECT	qt_peso_pre,
		dt_dialise
from	hd_dialise
where	nr_atendimento = nr_atendimento_p
and		trunc(dt_dialise) = trunc(clock_timestamp())
and		(qt_peso_pre IS NOT NULL AND qt_peso_pre::text <> '')
order by dt_dialise;

c02 CURSOR FOR
SELECT	qt_peso
from	atendimento_sinal_vital
where	nr_atendimento	= nr_atendimento_p
and		(qt_peso IS NOT NULL AND qt_peso::text <> '')
and		ie_situacao = 'A'
and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
and		trunc(dt_sinal_vital) = trunc(clock_timestamp())
and		coalesce(ie_rn,'N')	= 'N'
order by dt_sinal_vital;


BEGIN

select	max(qt_peso_pos),
		max(qt_peso_ideal),
		max(dt_dialise)
into STRICT	qt_peso_pos_w,
		qt_peso_ideal_w,
		dt_atualizacao_w
from	hd_dialise
where	nr_sequencia = (	SELECT	max(nr_sequencia)
							from	hd_dialise
							where	nr_atendimento = nr_atendimento_p);
							
select	max(nr_sequencia)
into STRICT	nr_seq_dialise_w
from	cpoe_dialise
where	nr_atendimento = nr_atendimento_p
and		ie_tipo_dialise = 'DI'
and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
and		dt_atualizacao_nrec > dt_atualizacao_w;

if (coalesce(nr_seq_dialise_w,0) > 0) then
select	qt_peso_pos,
		qt_peso_ideal
into STRICT	qt_peso_pos_w,
		qt_peso_ideal_w
from	cpoe_dialise
where	nr_sequencia = nr_seq_dialise_w;
end if;

open c01;
loop
fetch c01 into 	qt_peso_atual_w,
				dt_atualizacao_ww;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

if (dt_atualizacao_ww IS NOT NULL AND dt_atualizacao_ww::text <> '') then
	select	count(*)
	into STRICT	qt_sinal_vital_w
	from	atendimento_sinal_vital
	where	nr_atendimento	= nr_atendimento_p
	and		(qt_peso IS NOT NULL AND qt_peso::text <> '')
	and		ie_situacao = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and		dt_sinal_vital > dt_atualizacao_ww
	and		coalesce(ie_rn,'N')	= 'N'
	order by dt_sinal_vital;
end if;

if (coalesce(qt_peso_atual_w,0) = 0) or (qt_sinal_vital_w > 0) then
open c02;
loop
fetch c02 into qt_peso_atual_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
end loop;
close c02;
end if;

qt_peso_pos_p	:= qt_peso_pos_w;
qt_peso_ideal_p	:= qt_peso_ideal_w;
qt_peso_atual_p	:= qt_peso_atual_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_obter_peso_dialise_atend ( nr_atendimento_p bigint, qt_peso_atual_p INOUT bigint, qt_peso_ideal_p INOUT bigint, qt_peso_pos_p INOUT bigint) FROM PUBLIC;

