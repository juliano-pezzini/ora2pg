-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_copia_prescricao_regra ( nr_prescricao_p bigint, nr_atendimento_p bigint, nr_seq_regra_p bigint, nm_usuario_p text, cd_medico_p text, dt_prescricao_p timestamp, nr_prescricoes_p text, dt_primeiro_horario_p text, cd_perfil_P bigint, ie_agrupamento_p bigint, nr_horas_validade_p bigint, nr_nova_prescricao_p INOUT bigint, ie_estender_p text, qt_dias_extensao_p bigint, cd_setor_atendimento_p bigint) AS $body$
DECLARE


nr_prescricao_w    		bigint;
nr_sequencia_w			bigint;
nr_seq_bco_w			bigint;
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_fisica_ww		varchar(10);
ie_funcao_agrupar_w		varchar(2000);
ie_copia_nao_liberada_w		varchar(10);
ie_copia_farm_clinica_w		varchar(10);
dt_entrada_w			timestamp;
ie_origem_inf_w			varchar(1);
ie_copia_REP_motivo_w		varchar(1);
qt_hora_intervalo_ww		double precision;
ie_exame_w			varchar(1);
ds_param_funcao_w			funcao_param_usuario.vl_parametro%type;
cd_material_w			integer;
ie_controle_medico_w		bigint;
VarCopiaJust_w			varchar(1);
ie_esquema_alternado_w		varchar(1);
dt_proxima_dose_w			timestamp;
qt_tempo_aplicacao_w		double precision;
nr_dia_util_w			bigint;
dt_inicio_prescr_w			timestamp;
QT_DIAS_LIBERADO_w		bigint;
ie_hora_sne_w			varchar(255);
qt_dias_lib_atend_w		bigint;
nr_prescricoes_w			varchar(2000);
ie_nao_padronizado_w		varchar(1);
cd_estabelecimento_w		smallint;
nr_horas_validade_w		integer;
nr_etapas_w			smallint;

dt_primeiro_horario_w		timestamp;
dt_prim_horario_w			varchar(20);
ie_copia_agora_w			varchar(1);
cd_classif_setor_w			varchar(2);
cd_prescritor_w			varchar(10);
VarConsisteDataFutura_w		varchar(1);

var_pac_usu_w			varchar(2);
var_setores_usuario_w		varchar(1);
cd_perfil_w			integer;
cd_setor_atendimento_w		bigint;
ie_adep_w			varchar(1)	:= 'S';
ie_estender_w			varchar(3);
ie_prescr_agora_pa_w		varchar(1);
qt_registro_w			bigint;
cd_setor_usuario_w			integer;
cd_setor_prescr_w			integer := null;
ie_peso_prescr_org_w		varchar(1);
nr_horas_copia_w			bigint;
ds_horarios_w			varchar(2000);
Prescr_dia_w			varchar(1) := 'S';
ie_agrupa_prescr_atend_w		varchar(1)	:= 'S';
ds_erro_w			varchar(2000);
ie_copiar_altura_w			varchar(1) := 'S';
ie_copiar_peso_w			varchar(1) := 'S';
ie_pac_ps_w			varchar(2);
VarQuestionaSetorEstender_w	varchar(2);
ie_transferencia_w			varchar(1)	:= 'N';
VarHorasValidadePS_w		varchar(1)	:= 'S';
nr_atendimento_w			bigint;
VarQtHorasExtensao_w		bigint;
VarQtHorasMaxExtensao_w		bigint;
dt_inicio_prescr_ww		timestamp;
dtQuebra_w			timestamp;
hr_prescr_copia_w			varchar(10);
ie_prescr_validade_w		varchar(1);
hr_inicio_setor_w			varchar(10);
ie_prescritor_aux_w			varchar(1);
ie_copia_obs_prescr_w   		varchar(2);
ie_setor_entrega_w			varchar(1);
cd_setor_entrega_w			integer;

cd_setor_rn_w			integer;
cd_setor_mae_w			integer;
ie_setor_mae_w				char(1) := 'N';


BEGIN

select	coalesce(max(wheb_usuario_pck.get_cd_estabelecimento),1),
	max(coalesce(obter_unidade_atendimento(nr_atendimento_p,'IA','CS'),
		obter_unidade_atendimento(nr_atendimento_p,'A','CS')))
into STRICT	cd_estabelecimento_w,
	cd_setor_atendimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

nr_prescricoes_w	:= ' ' || nr_prescricoes_p || ' ';
nr_prescricoes_w	:= replace(nr_prescricoes_w, ',',' ');
nr_prescricoes_w	:= replace(nr_prescricoes_w, '  ',' ');


cd_perfil_w	:= cd_perfil_P;
var_pac_usu_w := Obter_Param_Usuario(924, 42, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, var_pac_usu_w);
VarConsisteDataFutura_w := Obter_Param_Usuario(924, 44, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, VarConsisteDataFutura_w);
Prescr_dia_w := Obter_Param_Usuario(924, 52, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, Prescr_dia_w);
ie_copia_agora_w := Obter_Param_Usuario(924, 85, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_copia_agora_w);
ie_nao_padronizado_w := Obter_Param_Usuario(924, 111, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_nao_padronizado_w);
VarCopiaJust_w := Obter_Param_Usuario(924, 135, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, VarCopiaJust_w);
var_setores_usuario_w := Obter_Param_Usuario(924, 136, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, var_setores_usuario_w);
ie_hora_sne_w := Obter_Param_Usuario(924, 146, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_hora_sne_w);
if (ie_estender_p IS NOT NULL AND ie_estender_p::text <> '') then
	ie_estender_w	:= ie_estender_p;
else	
	ie_estender_w := Obter_Param_Usuario(924, 249, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_estender_w);
end if;
ie_agrupa_prescr_atend_w := Obter_Param_Usuario(924, 254, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_agrupa_prescr_atend_w);
ie_prescr_agora_pa_w := Obter_Param_Usuario(924, 311, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_prescr_agora_pa_w);
ie_peso_prescr_org_w := Obter_Param_Usuario(924, 319, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_peso_prescr_org_w);
nr_horas_copia_w := obter_param_usuario(8030, 35, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, nr_horas_copia_w);
ie_copia_nao_liberada_w := Obter_Param_Usuario(924, 370, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_copia_nao_liberada_w);
ie_copiar_peso_w := Obter_Param_Usuario(924, 380, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_copiar_peso_w);
ie_copiar_altura_w := Obter_Param_Usuario(924, 381, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_copiar_altura_w);
ie_copia_farm_clinica_w := Obter_Param_Usuario(924, 434, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_copia_farm_clinica_w);
ie_copia_REP_motivo_w := Obter_Param_Usuario(924, 496, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_copia_REP_motivo_w);
ie_funcao_agrupar_w := Obter_Param_Usuario(924, 497, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_funcao_agrupar_w);
var_pac_usu_w := Obter_Param_Usuario(950, 6, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, var_pac_usu_w);
if (var_pac_usu_w = '') then
	var_pac_usu_w := Obter_Param_Usuario(924, 42, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, var_pac_usu_w);
end if;
VarQuestionaSetorEstender_w := Obter_Param_Usuario(950, 161, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, VarQuestionaSetorEstender_w);
VarHorasValidadePS_w := Obter_Param_Usuario(950, 180, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, VarHorasValidadePS_w);
VarQtHorasExtensao_w := Obter_Param_Usuario(950, 73, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, VarQtHorasExtensao_w);
VarQtHorasMaxExtensao_w := Obter_Param_Usuario(924, 154, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, VarQtHorasMaxExtensao_w);
ie_prescr_validade_w := Obter_Param_Usuario(924, 753, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_prescr_validade_w);
hr_prescr_copia_w := Obter_Param_Usuario(924, 532, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, hr_prescr_copia_w);
ie_prescritor_aux_w := Obter_Param_Usuario(924, 580, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_prescritor_aux_w);
ie_copia_obs_prescr_w := Obter_Param_Usuario(924, 1002, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_copia_obs_prescr_w);
ie_setor_entrega_w := Obter_Param_Usuario(924, 167, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_setor_entrega_w);

ds_param_funcao_w	:= obter_valor_param_usuario(924,246,cd_perfil_p,nm_usuario_p,cd_estabelecimento_w);
if (ds_param_funcao_w = 'DS') then
	ie_adep_w := ie_adep_w;
elsif (ds_param_funcao_w = 'NV') then
	ie_adep_w := 'N';
elsif (ds_param_funcao_w = 'SV') then
	ie_adep_w := 'S';
elsif (ds_param_funcao_w in ('PV','PNV')) then
	ie_adep_w := ie_adep_w;--ie_adep_orig_w;
end if;


if (var_pac_usu_w = 'U') then
	begin

	select	obter_setor_usuario(nm_usuario_p)
	into STRICT	cd_setor_usuario_w
	;

	select	count(*)
	into STRICT	qt_registro_w
	from	setor_atendimento a
	where	a.cd_setor_atendimento in (	SELECT	b.cd_setor_atendimento
						from	atend_paciente_unidade b
						where	b.nr_atendimento	= nr_atendimento_p
						and	b.cd_setor_atendimento	= cd_setor_usuario_w );
	exception
	when others then
		qt_registro_w	:= 0;
	end;
end if;

if	(((var_pac_usu_w = 'U') and (nr_atendimento_p > 0) and (qt_registro_w > 0)) or
	 (var_pac_usu_w = 'U' AND var_setores_usuario_w = 'S')) then
	cd_setor_prescr_w	:=	cd_setor_usuario_w;
elsif (var_pac_usu_w = 'R') then
	cd_setor_prescr_w	:= Obter_setor_prescr_regra(cd_perfil_p);
elsif (var_pac_usu_w = 'A') then
	cd_setor_prescr_w		:= Obter_unidade_atendimento(nr_atendimento_p,'A','CS');
elsif (var_pac_usu_w = 'B') then
	cd_setor_prescr_w		:= null;
elsif (var_pac_usu_w = 'D') then
	  begin
	  select coalesce(ie_rn_mae,'N'), cd_setor_atendimento
	  into STRICT ie_setor_mae_w, cd_setor_mae_w
	  from setor_atendimento
	  where cd_setor_atendimento = obter_unidade_atendimento((SELECT 	coalesce(max(nr_atendimento_mae),0)
		                                                            from	atendimento_paciente
	                                                            where 	nr_atendimento = nr_atendimento_p),'A','CS');

	  select coalesce(a.cd_setor_atendimento,0)
	  into STRICT cd_setor_rn_w
	  from unidade_atendimento a
	  where a.nr_seq_interno = (SELECT coalesce(b.nr_seq_unidade_rn,0) from setor_atendimento b
	  	                   where b.cd_setor_atendimento = obter_unidade_atendimento(nr_atendimento_p,'A','CS'));
	  if (ie_setor_mae_w = 'S') and (cd_setor_mae_w = cd_setor_rn_w) then
	    cd_setor_prescr_w := cd_setor_mae_w;
	  else
	    cd_setor_prescr_w := coalesce(obter_unidade_atendimento(nr_atendimento_p,'A','CS'), 0);
	  end if;
	  end;
elsif (nr_atendimento_p > 0) then
	cd_setor_prescr_w	:= coalesce(obter_unidade_atendimento(nr_atendimento_p,'IA','CS'), obter_unidade_atendimento(nr_atendimento_p,'A','CS'));
end if;

if (VarQuestionaSetorEstender_w = 'S') then
	if (cd_setor_atendimento_p	<> cd_setor_prescr_w) and (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
		ie_transferencia_w	:= 'S';
	end if;
	cd_setor_prescr_w	:= coalesce(cd_setor_atendimento_p,cd_setor_prescr_w);
end if;

if (nr_atendimento_p > 0) then
	select	dt_entrada
	into STRICT	dt_entrada_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	if (dt_entrada_w > dt_prescricao_p) then
		--'A data da prescricao nao pode ser menor que a data do atendimento'||dt_entrada_w
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(192736,'DT_ENTRADA='||dt_entrada_w);
	end if;
end if;

Select nextval('prescr_medica_seq')
into STRICT  nr_prescricao_w
;

nr_nova_prescricao_p	:=	nr_prescricao_w;

select 	coalesce(max('1'),'3')
into STRICT	ie_origem_inf_w
from	Medico b,
	Usuario a
where 	a.nm_usuario		= nm_usuario_p
  and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
  and	b.ie_situacao		= 'A';

begin
select	cd_pessoa_fisica
into STRICT	cd_prescritor_w
from	usuario
where	nm_usuario = nm_usuario_p;
exception
when others then
	cd_prescritor_w	:= null;
end;


begin
Select	cd_pessoa_fisica
into STRICT	cd_pessoa_fisica_ww
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;
exception
when others then
	--'Nao existe a prescricao informada '
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(192737);
end;

if (nr_atendimento_p > 0) then
	select	cd_pessoa_fisica
	into STRICT	cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;
	nr_atendimento_w	:= nr_atendimento_p;
else
	cd_pessoa_fisica_w	:= cd_pessoa_fisica_ww;
end if;

dt_primeiro_horario_w	:= converte_char_data('30/12/1899',substr(dt_primeiro_horario_p,1,5)||':00',null);


if (ie_prescr_validade_w <> 'S') then
	if (coalesce(hr_prescr_copia_w::text, '') = '') or (to_char(dt_primeiro_horario_w,'hh24:mi') <> hr_prescr_copia_w) then
		begin

		if (dt_primeiro_horario_w IS NOT NULL AND dt_primeiro_horario_w::text <> '') then
			if (to_char(dt_primeiro_horario_w,'hh24:mi:ss') < to_char(dt_prescricao_p,'hh24:mi:ss')) then
				dt_inicio_prescr_w := ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_p+1, dt_primeiro_horario_w);
			else
				dt_inicio_prescr_w := ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_p, dt_primeiro_horario_w);
			end if;
		else
			dt_inicio_prescr_w := dt_prescricao_p;
		end if;
		
		end;
	else
		begin	
		if (dt_primeiro_horario_w IS NOT NULL AND dt_primeiro_horario_w::text <> '') then
			dt_inicio_prescr_w := ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_p, dt_primeiro_horario_w);
		else
			dt_inicio_prescr_w := dt_prescricao_p;
		end if;
		
		end;
	end if;
elsif (ie_prescr_validade_w = 'S') then
	if (coalesce(dt_inicio_prescr_w::text, '') = '') then
		dt_inicio_prescr_w := ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_p, dt_primeiro_horario_w);
	end if;
end if;

ie_pac_ps_w	:= 	obter_se_pac_PS(nr_atendimento_p);
if (ie_pac_ps_w		= 'S') or (ie_transferencia_w	= 'S') then

	if (ie_transferencia_w	= 'S') then
		cd_setor_atendimento_w	:= cd_setor_atendimento_p;
	end if;
	
	select 	max(to_char(hr_inicio_prescricao,'hh24:mi:ss'))
	into STRICT	hr_inicio_setor_w
	from 	setor_atendimento
	where 	cd_setor_atendimento = cd_setor_atendimento_w;	

	nr_horas_validade_w		:=  coalesce(Obter_Horas_Validade_Prescr_PS(cd_setor_atendimento_w,dt_prescricao_p),0);
	dtQuebra_w				:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(clock_timestamp(), coalesce(hr_inicio_setor_w,'00:00:00'));
	dt_inicio_prescr_ww		:= to_date(((dtQuebra_w - 1) + VarQtHorasExtensao_w / 24),'dd/mm/yyyy hh24:mi:ss');


	if (ie_transferencia_w	<> 'S') and (nr_horas_validade_w	> 24) and (dtQuebra_w > dt_inicio_prescr_w) and (VarQtHorasMaxExtensao_w > 0) and (nr_horas_validade_w > VarQtHorasMaxExtensao_w) and (VarHorasValidadePS_w   = 'N') then
		nr_horas_validade_w	:= nr_horas_validade_w	- 24;			
	elsif (nr_horas_validade_w	< 24) and (ie_transferencia_w	<> 'S') and (VarHorasValidadePS_w   = 'S') and (VarQtHorasExtensao_w > 0) and (dt_inicio_prescr_w > dt_inicio_prescr_ww) and (dt_inicio_prescr_w < dtQuebra_w) then
		nr_horas_validade_w	:= nr_horas_validade_w	+ 24;
		if (nr_horas_validade_w > VarQtHorasMaxExtensao_w) and (VarQtHorasMaxExtensao_w >= 24) then
			nr_horas_validade_w := nr_horas_validade_w - (nr_horas_validade_w - VarQtHorasMaxExtensao_w);
	    end if;		
	end if;	

elsif (nr_horas_validade_p IS NOT NULL AND nr_horas_validade_p::text <> '') then
	nr_horas_validade_w := nr_horas_validade_p;
else
	nr_horas_validade_w	:= obter_horas_validade_prescr(dt_primeiro_horario_w, nr_atendimento_p, ie_estender_w,null, clock_timestamp(),null);

end if;

if (ie_setor_entrega_w = 'S') then
	cd_setor_entrega_w := obter_setor_usuario(nm_usuario_p);
elsif (ie_setor_entrega_w = 'P') and (cd_setor_prescr_w IS NOT NULL AND cd_setor_prescr_w::text <> '') then
	  cd_setor_entrega_w := cd_setor_prescr_w;
end if;

if (ie_prescritor_aux_w = 'S') and (cd_medico_p = Obter_Pf_Usuario(nm_usuario_p,'C')) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(268800);
end if;

insert into prescr_medica(
 	nr_prescricao,
 	cd_pessoa_fisica,
	nr_atendimento,
	cd_medico,
	dt_prescricao,
	dt_atualizacao,
	nm_usuario,
	nm_usuario_original,
	ds_observacao,
	nr_horas_validade,
	cd_motivo_baixa,
	dt_baixa,
	dt_primeiro_horario,
	dt_liberacao,
	dt_emissao_setor,
	dt_emissao_farmacia,
	cd_setor_atendimento,
	dt_entrada_unidade,
	ie_recem_nato,
	ie_origem_inf,
	nr_prescricao_anterior,
	nr_prescricao_mae,
	cd_protocolo,
	nr_seq_protocolo,
	nr_cirurgia,
	cd_estabelecimento,
	ds_medicacao_uso,
	cd_prescritor,
	qt_altura_cm,
	qt_peso,
	ie_adep,
	ie_prescr_emergencia,
	ie_prescricao_alta,
	ie_hemodialise,
	nr_prescricoes,
	nr_seq_regra_copia,
	cd_funcao_origem,
	qt_dias_extensao,
	IE_TIPO_PRESCR_CIRUR,
	nr_seq_pepo,
	ie_prescritor_aux,
	cd_setor_entrega)
SELECT	nr_prescricao_w,
	cd_pessoa_fisica_w,
	nr_atendimento_w,
	cd_medico_p,
	trunc(dt_prescricao_p,'mi'),
	clock_timestamp(),
	nm_usuario_p,
	nm_usuario_p,
	CASE WHEN ie_copia_obs_prescr_w='S' THEN ds_observacao  ELSE null END ,
	coalesce(nr_horas_validade_w,nr_horas_validade),
	null,
	null,
	dt_primeiro_horario_w,
	null,
	null,
	null,
	cd_setor_prescr_w,
	null,
	coalesce(ie_recem_nato, 'N'),
	ie_origem_inf_w,
	nr_prescricao_p,
	nr_prescricao_mae,
	cd_protocolo,
	nr_seq_protocolo,
	null,
	cd_estabelecimento_w,
	ds_medicacao_uso,
	cd_prescritor_w,
	CASE WHEN ie_copiar_altura_w='S' THEN  obter_sinal_vital(nr_atendimento_P,obter_desc_expressao(283402))  ELSE 0 END ,	
	CASE WHEN ie_copiar_peso_w='S' THEN  CASE WHEN ie_peso_prescr_org_w='S' THEN  qt_peso  ELSE obter_sinal_vital(nr_atendimento_P,obter_desc_expressao(295698)) END   ELSE 0 END ,	
	ie_adep_w,
	'N',
	'N',
	ie_hemodialise,
	nr_prescricoes_p,
	nr_seq_regra_p,
	950,
	coalesce(qt_dias_extensao_p,0),
	IE_TIPO_PRESCR_CIRUR,
	nr_seq_pepo,
	ie_prescritor_aux_w,
	coalesce(cd_setor_entrega_w, cd_setor_entrega)
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

update	prescr_medica
set	dt_prescricao	= trunc(clock_timestamp(),'mi')
where	nr_prescricao	= nr_prescricao_w;

insert into prescr_nutricao(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nr_prescricao,
	ie_delegacao_total,
	ie_dieta_oral,
	ie_npt,
	ie_enteral,
	ie_suplemento,
	ds_observacao)
SELECT	nextval('prescr_nutricao_seq'),
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	nr_prescricao_w,
	ie_delegacao_total,
	ie_dieta_oral,
	ie_npt,
	ie_enteral,
	ie_suplemento,
	ds_observacao
from	prescr_nutricao
where	nr_prescricao	= nr_prescricao_p;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

nr_nova_prescricao_p	:= nr_prescricao_w;

CALL gerar_plt_controle(cd_pessoa_fisica_w,nr_atendimento_w,nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_copia_prescricao_regra ( nr_prescricao_p bigint, nr_atendimento_p bigint, nr_seq_regra_p bigint, nm_usuario_p text, cd_medico_p text, dt_prescricao_p timestamp, nr_prescricoes_p text, dt_primeiro_horario_p text, cd_perfil_P bigint, ie_agrupamento_p bigint, nr_horas_validade_p bigint, nr_nova_prescricao_p INOUT bigint, ie_estender_p text, qt_dias_extensao_p bigint, cd_setor_atendimento_p bigint) FROM PUBLIC;

