-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_solucao_dialise_prot ( nr_prescricao_p bigint, nr_seq_dialise_p bigint, ds_lista_produto_p text, nm_usuario_p text) AS $body$
DECLARE



lista_informacao_w		varchar(800);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
nr_seq_protocolo_w		bigint;
nr_seq_solucao_w		integer;
nr_agrupamento_w		integer;
qt_temp_solucao_w		real;
qt_tempo_infusao_w		integer;
qt_tempo_permanencia_w		integer;
qt_tempo_drenagem_w		integer;
nr_etapas_w			smallint;
qt_volume_w			double precision;
qt_solucao_total_w		double precision;
nr_seq_protocolo_npt_w		bigint;
pr_concentracao_w		double precision;
hr_inicio_capd_w		varchar(5);
hr_fim_capd_w			varchar(5);
ie_bomba_infusao_w		varchar(5);
ie_ultima_bolsa_w		varchar(5);

c01 CURSOR FOR
SELECT	nr_seq_protocolo_npt,
	to_char(hr_inicio,'hh24:mi'),
	to_char(hr_fim,'hh24:mi'),
	qt_tempo_infusao,
	qt_tempo_permanencia,
	qt_tempo_drenagem
from	protocolo_solucao_npt_item
where	nr_seq_protocolo = nr_seq_protocolo_w
order by nr_seq_apresentacao;


BEGIN

lista_informacao_w	:= ds_lista_produto_p;

while(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or (ie_contador_w > 200) loop

	tam_lista_w		:= length(lista_informacao_w);
	ie_pos_virgula_w	:= position(',' in lista_informacao_w);

	if (ie_pos_virgula_w <> 0) then
		nr_seq_protocolo_w	:= (substr(lista_informacao_w,1,(ie_pos_virgula_w - 1)))::numeric;
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;

	open C01;
	loop
	fetch C01 into
		nr_seq_protocolo_npt_w,
		hr_inicio_capd_w,
		hr_fim_capd_w,
		qt_tempo_infusao_w,
		qt_tempo_permanencia_w,
		qt_tempo_drenagem_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		begin
		select	qt_temp_solucao,
			coalesce(qt_tempo_infusao_w, qt_tempo_infusao),
			coalesce(qt_tempo_permanencia_w, qt_tempo_permanencia),
			coalesce(qt_tempo_drenagem_w, qt_tempo_drenagem),
			nr_etapas,
			qt_volume,
			qt_volume,
			pr_concentracao,
			coalesce(hr_inicio_capd_w, hr_inicio_capd),
			coalesce(hr_fim_capd_w, hr_fim_capd),
			ie_bomba_infusao,
			ie_ultima_bolsa
		into STRICT	qt_temp_solucao_w,
			qt_tempo_infusao_w,
			qt_tempo_permanencia_w,
			qt_tempo_drenagem_w,
			nr_etapas_w,
			qt_volume_w,
			qt_solucao_total_w,
			pr_concentracao_w,
			hr_inicio_capd_w,
			hr_fim_capd_w,
			ie_bomba_infusao_w,
			ie_ultima_bolsa_w
		from	protocolo_npt
		where	nr_sequencia	= nr_seq_protocolo_npt_w;
		exception
		when others then
			qt_temp_solucao_w	:= null;
		end;

		select	coalesce(max(nr_seq_solucao),0) +1
		into STRICT	nr_seq_solucao_w
		from	prescr_solucao
		where	nr_prescricao	= nr_prescricao_p;

		select	coalesce(max(nr_agrupamento),0) +1
		into STRICT	nr_agrupamento_w
		from	prescr_solucao
		where	nr_prescricao	= nr_prescricao_p;

		insert into prescr_solucao(
			nr_prescricao,
			nr_seq_solucao,
			ie_via_aplicacao,
			dt_atualizacao,
			nm_usuario,
			cd_unidade_medida,
			ie_tipo_dosagem,
			qt_tempo_aplicacao,
			nr_etapas,
			ie_suspenso,
			ie_bomba_infusao,
			nr_agrupamento,
			ie_esquema_alternado,
			ie_calc_aut,
			ie_acm,
			ie_urgencia,
			ie_solucao_especial,
			ie_tipo_solucao,
			nr_seq_protocolo,
			ie_hemodialise,
			ie_unid_vel_inf,
			ie_pos_dialisador,
			nr_seq_dialise,
			ie_ultima_bolsa,
			qt_tempo_drenagem,
			qt_tempo_infusao,
			qt_tempo_permanencia,
			qt_temp_solucao,
			QT_VOLUME,
			qt_solucao_total,
			pr_concentracao,
			hr_inicio_capd,
			hr_fim_capd)
		values (	nr_prescricao_p,
			nr_seq_solucao_w,
			upper(obter_via_usuario('IV')),
			clock_timestamp(),
			nm_usuario_p,
			obter_unid_med_usua('ml'),
			'mlh',
			'24',
			coalesce(nr_etapas_w,1),
			'N',
			ie_bomba_infusao_w,
			nr_agrupamento_w,
			'N',
			'S',
			'N',
			'N',
			'N',
			'A',
			nr_seq_protocolo_npt_w,
			'P',
			'mlh',
			'S',
			nr_seq_dialise_p,
			coalesce(ie_ultima_bolsa_w,'N'),
			qt_tempo_drenagem_w,
			qt_tempo_infusao_w,
			qt_tempo_permanencia_w,
			qt_temp_solucao_w,
			qt_volume_w,
			qt_solucao_total_w,
			pr_concentracao_w,
			hr_inicio_capd_w,
			hr_fim_capd_w);

		CALL Inserir_Elem_Prot_Hemodialise(nr_prescricao_p,nr_seq_solucao_w,nm_usuario_p);
		CALL Calcular_Elem_Peritoneal(nr_prescricao_p,nr_seq_solucao_w,nm_usuario_p);

	end loop;
	close C01;

	ie_contador_w	:= ie_contador_w + 1;

end loop;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_solucao_dialise_prot ( nr_prescricao_p bigint, nr_seq_dialise_p bigint, ds_lista_produto_p text, nm_usuario_p text) FROM PUBLIC;

