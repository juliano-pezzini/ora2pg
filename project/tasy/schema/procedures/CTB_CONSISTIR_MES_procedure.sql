-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_consistir_mes ( cd_estabelecimento_p bigint, nr_seq_mes_ref_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_inicial_w			timestamp;
dt_final_w				timestamp;
dt_referencia_w			timestamp;
qt_registro_w			bigint;
cd_empresa_w			empresa.cd_empresa%type;
qt_mes_fim_exercicio_w	empresa.qt_mes_fim_exercicio%type;
vl_diferenca_w			ctb_saldo.vl_saldo%type;
vl_ativo_w				ctb_saldo.vl_saldo%type;
vl_passivo_w			ctb_saldo.vl_saldo%type;

i						integer	:= 0;
type registros is table of ctb_mes_inconsistencia%rowtype index by integer;
consistencia_w	registros;


BEGIN
select	max(dt_referencia),
		max(cd_empresa)
into STRICT	dt_referencia_w,
		cd_empresa_w
from	ctb_mes_ref
where	nr_sequencia = nr_seq_mes_ref_p;

dt_inicial_w	:= trunc(dt_referencia_w,'mm');
dt_final_w		:= fim_mes( dt_referencia_w);

delete	FROM ctb_mes_inconsistencia
where	nr_seq_mes_ref	= nr_seq_mes_ref_p;
commit;

select	count(*)
into STRICT	qt_registro_w
from	lote_contabil
where	cd_estabelecimento = cd_estabelecimento_p
and		dt_referencia between dt_inicial_w and dt_final_w
and		coalesce(dt_atualizacao_saldo::text, '') = '';

if (coalesce(qt_registro_w,0) != 0)  then
	i									:= i + 1;
	consistencia_w[i].cd_inconsistencia	:= 1;
	consistencia_w[i].ds_inconsistencia	:= wheb_mensagem_pck.get_texto(336652);
	consistencia_w[i].ds_acao			:= wheb_mensagem_pck.get_texto(336656);
end if;

select	max(qt_mes_fim_exercicio)
into STRICT	qt_mes_fim_exercicio_w
from	empresa
where	cd_empresa = cd_empresa_w;

if (qt_mes_fim_exercicio_w > 0) then
	if (qt_mes_fim_exercicio_w = to_char(dt_inicial_w, 'mm')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	lote_contabil
		where	cd_tipo_lote_contabil 	= 13
		and		dt_referencia 			= trunc(last_day(dt_referencia_w),'dd')
		and     cd_estabelecimento 		= cd_estabelecimento_p;

		if (coalesce(qt_registro_w,0) = 0)  then
			i									:= i + 1;
			consistencia_w[i].cd_inconsistencia	:= 1;
			consistencia_w[i].ds_inconsistencia	:= wheb_mensagem_pck.get_texto(336658);
			consistencia_w[i].ds_acao			:= wheb_mensagem_pck.get_texto(336659);
		end if;

	end if;
elsif (mod((to_char(dt_inicial_w, 'mm'))::numeric ,abs(qt_mes_fim_exercicio_w)) = 0) then

		select	count(*)
		into STRICT	qt_registro_w
		from	lote_contabil
		where	cd_tipo_lote_contabil 	= 13
		and		dt_referencia 			= trunc(last_day(dt_referencia_w),'dd')
		and     cd_estabelecimento 		= cd_estabelecimento_p;

		if (coalesce(qt_registro_w,0) = 0)  then
			i									:= i + 1;
			consistencia_w[i].cd_inconsistencia	:= 1;
			consistencia_w[i].ds_inconsistencia	:= wheb_mensagem_pck.get_texto(336658);
			consistencia_w[i].ds_acao			:= wheb_mensagem_pck.get_texto(336659);
		end if;
	
end if;


select	coalesce(sum(vl_ativo),0) vl_ativo,
		coalesce(sum(vl_passivo),0) vl_passivo
into STRICT	vl_ativo_w,
		vl_passivo_w
from	empresa b,
		ctb_saldo_resumo_v a
where	a.cd_empresa 			= b.cd_empresa
and		a.nr_seq_mes_ref 		= nr_seq_mes_ref_p
and		a.cd_empresa 			= cd_empresa_w
and		b.qt_mes_fim_exercicio 	= (to_char(a.dt_referencia,'mm'))::numeric;

vl_diferenca_w	:= vl_ativo_w - vl_passivo_w;

if (coalesce(vl_diferenca_w,0) <> 0) then
	i									:= i + 1;
	consistencia_w[i].cd_inconsistencia	:= 2;
	consistencia_w[i].ds_inconsistencia	:= wheb_mensagem_pck.get_texto(1009471);
	consistencia_w[i].ds_acao			:= wheb_mensagem_pck.get_texto(1009472);

end if;

for i in 1.. consistencia_w.count  loop

insert into ctb_mes_inconsistencia(
	nr_sequencia,
	nr_seq_mes_ref,
	dt_atualizacao,
	nm_usuario,
	cd_inconsistencia,
	ds_inconsistencia,
	ds_acao)
values (	nextval('ctb_mes_inconsistencia_seq'),
	nr_seq_mes_ref_p,
	clock_timestamp(),
	nm_usuario_p,
	consistencia_w[i].cd_inconsistencia,
	consistencia_w[i].ds_inconsistencia,
	consistencia_w[i].ds_acao);
end loop;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_consistir_mes ( cd_estabelecimento_p bigint, nr_seq_mes_ref_p bigint, nm_usuario_p text) FROM PUBLIC;

