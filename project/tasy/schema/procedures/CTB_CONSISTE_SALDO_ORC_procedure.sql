-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_consiste_saldo_orc ( nr_solic_compra_p solic_compra.nr_solic_compra%type, nm_usuario_p text, consiste_mes_p text, consiste_ano_p text) AS $body$
DECLARE


cd_centro_custo_w           centro_custo.cd_centro_custo%type;
dt_solicitacao_compra_ref_w timestamp;
vl_saldo_mes_w                  double precision;
vl_saldo_ano_w                  double precision;
qt_msg_item_w               bigint;
year_ref_w                    varchar(5);
dt_ref_start_w                    timestamp;
dt_ref_end_w                    timestamp;

c01 CURSOR FOR
SELECT a.cd_estabelecimento,
       coalesce(a.cd_centro_custo,0) cd_centro_custo,
       coalesce(a.cd_local_estoque,0) cd_local_estoque,
       coalesce(coalesce(b.cd_conta_contabil,a.cd_conta_contabil),0) cd_conta_contabil,
       coalesce(sum(b.qt_material*b.vl_unit_previsto),0) vl_total_solic
from   solic_compra_item b,
       solic_compra a
where  a.nr_solic_compra = b.nr_solic_compra
and    b.vl_unit_previsto > 0
and ((a.cd_conta_contabil IS NOT NULL AND a.cd_conta_contabil::text <> '') or (b.cd_conta_contabil IS NOT NULL AND b.cd_conta_contabil::text <> ''))
and    a.nr_solic_compra = nr_solic_compra_p
group by a.cd_centro_custo, a.cd_local_estoque, coalesce(b.cd_conta_contabil,a.cd_conta_contabil), a.cd_estabelecimento;

c01_w c01%rowtype;

c02 CURSOR FOR
SELECT  a.cd_material,
        a.qt_material * a.vl_unit_previsto vl_total_solic_item
from    solic_compra_item a
where   a.cd_conta_contabil = c01_w.cd_conta_contabil
and     a.vl_unit_previsto > 0
and     a.nr_solic_compra = nr_solic_compra_p
order by a.nr_item_solic_compra;
BEGIN

select  trunc(a.dt_solicitacao_compra,'mm')
into STRICT    dt_solicitacao_compra_ref_w
from    solic_compra a
where   a.nr_solic_compra = nr_solic_compra_p;

open C01;
loop
    fetch C01 into	
        c01_w;
    EXIT WHEN NOT FOUND; /* apply on C01 */
    begin
        qt_msg_item_w := 0;
        cd_centro_custo_w := c01_w.cd_centro_custo;

        if (cd_centro_custo_w = 0) then
            begin
            select a.cd_centro_custo
            into STRICT   cd_centro_custo_w
            from   local_estoque a
            where  a.cd_local_estoque = c01_w.cd_local_estoque;
            exception when others then
                cd_centro_custo_w := 0;
            end;
        end if;

        if (cd_centro_custo_w <> 0) then
            begin
                begin
                    if (consiste_mes_p = 'S') then
                        select  sum(vl_orcado) - sum(vl_realizado) vl_saldo
                        into STRICT    vl_saldo_mes_w
                        from    ctb_orc_empresarial_v a
                        where   a.cd_conta_contabil = c01_w.cd_conta_contabil
                        and     a.cd_centro_custo = cd_centro_custo_w
                        and     a.dt_referencia = dt_solicitacao_compra_ref_w
                        and     a.cd_estabelecimento = c01_w.cd_estabelecimento
                        and     a.vl_orcado > 0
                        group by a.dt_referencia, a.cd_centro_custo, a.cd_conta_contabil, a.cd_estabelecimento;
                    end if;
                    if (consiste_ano_p = 'S') then
                         select to_char(dt_solicitacao_compra_ref_w,'yyyy')
                         into STRICT year_ref_w
;

                        select trunc(to_date(year_ref_w, 'yyyy'), 'y') fd,
                               trunc(to_date(year_ref_w, 'yyyy'), 'y') + interval '1' year - 31 ld
                        into STRICT  dt_ref_start_w,
                              dt_ref_end_w
;

                        select  sum(sum(vl_orcado) - sum(vl_realizado)) vl_saldo
                        into STRICT    vl_saldo_ano_w
                        from    ctb_orc_empresarial_v a
                        where   a.cd_conta_contabil = c01_w.cd_conta_contabil
                        and     a.cd_centro_custo = cd_centro_custo_w
                        and     a.cd_estabelecimento = c01_w.cd_estabelecimento
                        and     a.vl_orcado > 0
                        and     a.dt_referencia between dt_ref_start_w and dt_ref_end_w                    
                        group by a.dt_referencia, a.cd_centro_custo, a.cd_conta_contabil, a.cd_estabelecimento;
                    end if;
                    exception when no_data_found then
                        vl_saldo_ano_w := 0;
                        vl_saldo_mes_w := 0;
                end;

                if (c01_w.vl_total_solic > vl_saldo_mes_w) then
                    for c02_w in c02 loop
                        begin
                            qt_msg_item_w := qt_msg_item_w +1;
                            CALL gravar_solic_compra_consist(nr_solic_compra_p => nr_solic_compra_p,
                                                ie_tipo_p => '2',
                                                ds_consistencia_p => wheb_mensagem_pck.get_texto(1143455, 'CD_CONTA_CONTABIL_W='|| c01_w.cd_conta_contabil),
                                                                    /*A conta contabil #@CD_CONTA_CONTABIL_W#@ nao tem saldo suficiente para atender essa solicitacao.*/

                                                ie_forma_p => 'C',
                                                ds_observacao_p => wheb_mensagem_pck.get_texto(1118151, 'CD_MATERIAL_W='      || c02_w.cd_material ||
                                                                                                        ';CD_CENTRO_CUSTO_W='  || cd_centro_custo_w ||
                                                                                                        ';CD_CONTA_CONTABIL_W='|| c01_w.cd_conta_contabil ||
                                                                                                        ';VL_SALDO_W='         || campo_mascara_virgula_casas(vl_saldo_mes_w,4) ||
                                                                                                        ';VL_TOTAL_SOLIC='     || campo_mascara_virgula_casas(c02_w.vl_total_solic_item,4)),

                                                nm_usuario_p => nm_usuario_p);
                        end;
                    end loop;

                    if (coalesce(qt_msg_item_w,0) = 0) then
                        CALL gravar_solic_compra_consist(nr_solic_compra_p => nr_solic_compra_p,
                                                ie_tipo_p => '0',
                                                ds_consistencia_p => wheb_mensagem_pck.get_texto(1143455, 'CD_CONTA_CONTABIL_W='|| c01_w.cd_conta_contabil),
                                                                     /*A conta contabil #@CD_CONTA_CONTABIL_W#@ nao tem saldo suficiente para atender essa solicitacao.*/

                                                ie_forma_p => 'C',
                                                ds_observacao_p => wheb_mensagem_pck.get_texto(1118154, 'CD_CENTRO_CUSTO_W='  || cd_centro_custo_w ||
                                                                                                        ';CD_CONTA_CONTABIL_W='|| c01_w.cd_conta_contabil ||
                                                                                                        ';VL_SALDO_W='         || campo_mascara_virgula_casas(vl_saldo_mes_w,4) ||
                                                                                                        ';VL_TOTAL_SOLIC='     || campo_mascara_virgula_casas(c01_w.vl_total_solic,4)),
                                                nm_usuario_p => nm_usuario_p);
                    end if;
                end if;
                if (c01_w.vl_total_solic > vl_saldo_ano_w) then
                    for c02_w in c02 loop
                        begin
                            qt_msg_item_w := qt_msg_item_w +1;
                            CALL gravar_solic_compra_consist(nr_solic_compra_p => nr_solic_compra_p,
                                                ie_tipo_p => '2',
                                                ds_consistencia_p => wheb_mensagem_pck.get_texto(1143462, 'CD_CONTA_CONTABIL_W='|| c01_w.cd_conta_contabil),
                                                                    /*A conta contabil #@CD_CONTA_CONTABIL_W#@ nao tem saldo suficiente para atender essa solicitacao.*/

                                                ie_forma_p => 'C',
                                                ds_observacao_p => wheb_mensagem_pck.get_texto(1118151, 'CD_MATERIAL_W='      || c02_w.cd_material ||
                                                                                                        ';CD_CENTRO_CUSTO_W='  || cd_centro_custo_w ||
                                                                                                        ';CD_CONTA_CONTABIL_W='|| c01_w.cd_conta_contabil ||
                                                                                                        ';VL_SALDO_W='         || campo_mascara_virgula_casas(vl_saldo_ano_w,4) ||
                                                                                                        ';VL_TOTAL_SOLIC='     || campo_mascara_virgula_casas(c02_w.vl_total_solic_item,4)),

                                                nm_usuario_p => nm_usuario_p);
                        end;
                    end loop;

                    if (coalesce(qt_msg_item_w,0) = 0) then
                        CALL gravar_solic_compra_consist(nr_solic_compra_p => nr_solic_compra_p,
                                                ie_tipo_p => '0',
                                                ds_consistencia_p => wheb_mensagem_pck.get_texto(1143462, 'CD_CONTA_CONTABIL_W='|| c01_w.cd_conta_contabil),
                                                                     /*A conta contabil #@CD_CONTA_CONTABIL_W#@ nao tem saldo suficiente para atender essa solicitacao.*/

                                                ie_forma_p => 'C',
                                                ds_observacao_p => wheb_mensagem_pck.get_texto(1118154, 'CD_CENTRO_CUSTO_W='  || cd_centro_custo_w ||
                                                                                                        ';CD_CONTA_CONTABIL_W='|| c01_w.cd_conta_contabil ||
                                                                                                        ';VL_SALDO_W='         || campo_mascara_virgula_casas(vl_saldo_ano_w,4) ||
                                                                                                        ';VL_TOTAL_SOLIC='     || campo_mascara_virgula_casas(c01_w.vl_total_solic,4)),
                                                nm_usuario_p => nm_usuario_p);
                    end if;
                end if;
            end;
        end if;
    end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_consiste_saldo_orc ( nr_solic_compra_p solic_compra.nr_solic_compra%type, nm_usuario_p text, consiste_mes_p text, consiste_ano_p text) FROM PUBLIC;

