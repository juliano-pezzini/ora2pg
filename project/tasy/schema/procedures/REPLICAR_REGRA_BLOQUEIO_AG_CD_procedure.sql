-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE replicar_regra_bloqueio_ag_cd ( cd_agenda_copia_p bigint, cd_estabelecimento_p bigint, cd_tipo_agenda_p bigint, nm_usuario_p text, nr_sequencia_p bigint, cd_agenda_p bigint) AS $body$
DECLARE


/* globais */

cd_medico_w				agenda_bloqueio.cd_medico%type;

/* agendas */

cd_agenda_w				bigint;

/* regras exame x bloqueio */

dt_inicial_w			timestamp;
dt_final_w				timestamp;
ie_motivo_bloqueio_w	agenda_bloqueio.ie_motivo_bloqueio%type;
ds_observacao_w			agenda_bloqueio.ds_observacao%type;
ie_dia_semana_w			agenda_bloqueio.ie_dia_semana%type;
hr_inicio_bloqueio_w	timestamp;
hr_final_bloqueio_w		timestamp;
ie_classif_bloqueio_w	agenda_bloqueio.ie_classif_bloqueio%type;
qt_agenda_bloq_w		agenda_bloqueio.qt_agenda_bloq%type;
nr_seq_motivo_bloq_ag_w	agenda_bloqueio.nr_seq_motivo_bloq_ag%type;
nr_seq_bloqueio_w		bigint;

/* obter regras exame x bloqueio */

c01 CURSOR FOR
SELECT	dt_inicial,
		dt_final,
		ie_motivo_bloqueio,
		ds_observacao,
		ie_dia_semana,
		hr_inicio_bloqueio,
		hr_final_bloqueio,
		ie_classif_bloqueio,
		qt_agenda_bloq,
		cd_medico,
		nr_seq_motivo_bloq_ag
from	agenda_bloqueio
where	cd_agenda = cd_agenda_copia_p
and		nr_sequencia = coalesce(nr_sequencia_p,nr_sequencia);


BEGIN
if (cd_agenda_copia_p IS NOT NULL AND cd_agenda_copia_p::text <> '') and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (cd_tipo_agenda_p IS NOT NULL AND cd_tipo_agenda_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then


	/* gera regras */

	open c01;
	loop
	fetch c01 into	dt_inicial_w,
			dt_final_w,
			ie_motivo_bloqueio_w,
			ds_observacao_w,
			ie_dia_semana_w,
			hr_inicio_bloqueio_w,
			hr_final_bloqueio_w,
			ie_classif_bloqueio_w,
			qt_agenda_bloq_w,
			cd_medico_w,
			nr_seq_motivo_bloq_ag_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	nextval('agenda_bloqueio_seq')
		into STRICT	nr_seq_bloqueio_w
		;

		insert into agenda_bloqueio(
						nr_sequencia,
						cd_agenda,
						dt_inicial,
						dt_final,
						ie_motivo_bloqueio,
						ds_observacao,
						ie_dia_semana,
						hr_inicio_bloqueio,
						hr_final_bloqueio,
						ie_classif_bloqueio,
						qt_agenda_bloq,
						cd_medico,
						nr_seq_motivo_bloq_ag,
						nm_usuario,
						dt_atualizacao
						)
				values (
						nr_seq_bloqueio_w,
						cd_agenda_p,
						dt_inicial_w,
						dt_final_w,
						ie_motivo_bloqueio_w,
						ds_observacao_w,
						ie_dia_semana_w,
						hr_inicio_bloqueio_w,
						hr_final_bloqueio_w,
						ie_classif_bloqueio_w,
						qt_agenda_bloq_w,
						cd_medico_w,
						nr_seq_motivo_bloq_ag_w,
						nm_usuario_p,
						clock_timestamp()
						);


		end;
	end loop;
	close c01;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE replicar_regra_bloqueio_ag_cd ( cd_agenda_copia_p bigint, cd_estabelecimento_p bigint, cd_tipo_agenda_p bigint, nm_usuario_p text, nr_sequencia_p bigint, cd_agenda_p bigint) FROM PUBLIC;

