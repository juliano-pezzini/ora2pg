-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_dados_dmed (nr_seq_dmed_p text, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE

 
dt_ano_calendario_w	varchar(255);
cd_pessoa_fisica_w	varchar(100);
nr_cpf_w			varchar(20);
nr_seq_dmed_resp_w	varchar(20);
nr_cpf_beneficiario_w	varchar(20);
vl_total_titulo_w		varchar(20);
vl_total_titulo_ben_w	varchar(20);
dt_nascimento_w		timestamp;
cd_beneficiario_w		varchar(100);
ie_buscar_responsavel_w 	varchar(1);
ie_cpf_w			varchar(2);

C01 CURSOR FOR 
	SELECT lpad(nr_cpf,11,' '), 
		cd_pessoa_fisica, 
		sum(vl_total_titulo) 
	from	dmed_rppss_v 
	where 	to_char(dt_emissao,'yyyy') = dt_ano_calendario_w 
	and 	((cd_estabelecimento = coalesce( cd_estabelecimento_p ,cd_estabelecimento)) 
	or  	((coalesce(cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = ''))) 
	and	(((ie_cpf_w = 'SC') and ( coalesce(nr_cpf::text, '') = '')) 
	or	( ie_cpf_w = 'CC' AND nr_cpf IS NOT NULL AND nr_cpf::text <> '') 
	or (ie_cpf_w = 'AM')) 
	group by nr_cpf,cd_pessoa_fisica;
	
C02 CURSOR FOR 
	SELECT f.cd_pessoa_fisica, 
		sum(coalesce(l.vl_recebido,r.vl_titulo)) vl_total_titulo 
	FROM atendimento_pagador p, pessoa_fisica f, atendimento_paciente a, titulo_receber r
LEFT OUTER JOIN titulo_receber_liq l ON (r.nr_titulo = l.nr_titulo)
WHERE a.nr_atendimento = r.nr_atendimento  and a.nr_atendimento = p.nr_atendimento and f.cd_pessoa_fisica = a.cd_pessoa_fisica and r.ie_situacao <> 5 and r.ie_situacao <> 3 --and	((r.nr_nota_fiscal <> 0) and 
	--	(r.nr_nota_fiscal is not null))	 
  and r.ie_origem_titulo in (2,1) and l.cd_tipo_recebimento in (SELECT ie_tipo_receber 
					 from	 dmed_regra_tipo_tit) --and	l.cd_tipo_recebimento in (1,2,3,4,6,10,15,18) 
	--and	r.vl_saldo_titulo = 0 
  and p.cd_pessoa_fisica = cd_pessoa_fisica_w and a.cd_pessoa_fisica <> cd_pessoa_fisica_w and to_char(coalesce(l.dt_recebimento,r.dt_emissao),'yyyy') = dt_ano_calendario_w and ((a.cd_estabelecimento = coalesce( cd_estabelecimento_p ,a.cd_estabelecimento)) 
	or  	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = ''))) group by f.cd_pessoa_fisica 
	having sum(coalesce(l.vl_recebido,r.vl_titulo)) > 0;

C03 CURSOR FOR 
SELECT lpad(p.nr_cpf,11,' ') nr_cpf, 
	coalesce(obter_resp_pgto_tit_rec(r.nr_titulo,'C'),r.cd_pessoa_fisica) cd_pessoa_fisica, 
	sum(CASE WHEN coalesce(obter_resp_pgto_tit_rec(r.nr_titulo,'C'),r.cd_pessoa_fisica)=coalesce(a.cd_pessoa_fisica,r.cd_pessoa_fisica) THEN coalesce(l.vl_recebido,r.vl_titulo)  ELSE 0 END ) vl_titulo 
FROM titulo_receber r
LEFT OUTER JOIN atendimento_paciente a ON (r.nr_atendimento = a.nr_atendimento)
LEFT OUTER JOIN titulo_receber_liq l ON (r.nr_titulo = l.nr_titulo)
, pessoa_fisica p
LEFT OUTER JOIN nacionalidade n ON (p.cd_nacionalidade = n.cd_nacionalidade)
WHERE coalesce(obter_resp_pgto_tit_rec(r.nr_titulo,'C'),r.cd_pessoa_fisica) = p.cd_pessoa_fisica and to_char(coalesce(l.dt_recebimento,r.dt_emissao),'yyyy') = dt_ano_calendario_w --and	obter_idade(p.dt_nascimento, sysdate, 'A') >= 18 
  and r.ie_situacao <> 5 and r.ie_situacao <> 3 --and	r.vl_saldo_titulo = 0 
--and	l.cd_tipo_recebimento in (1,2,3,4,6,10,15,18) 
  and r.ie_origem_titulo in (2,1) and coalesce(n.ie_brasileiro,'S') = 'S' and l.cd_tipo_recebimento in (SELECT ie_tipo_receber 
				 from	 dmed_regra_tipo_tit) and ((a.cd_estabelecimento = coalesce( cd_estabelecimento_p ,a.cd_estabelecimento)) 
or  	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = ''))) and (((ie_cpf_w = 'SC') and ( coalesce(p.nr_cpf::text, '') = '')) 
or	( ie_cpf_w = 'CC' AND p.nr_cpf IS NOT NULL AND p.nr_cpf::text <> '') 
or (ie_cpf_w = 'AM')) group by lpad(p.nr_cpf,11,' '),coalesce(obter_resp_pgto_tit_rec(r.nr_titulo,'C'),r.cd_pessoa_fisica) 
having sum(CASE WHEN r.cd_pessoa_fisica=coalesce(a.cd_pessoa_fisica,r.cd_pessoa_fisica) THEN coalesce(l.vl_recebido,r.vl_titulo)  ELSE l.vl_recebido END ) > 0;
	
C04 CURSOR FOR 
	SELECT 	cd_pessoa_fisica, 
	sum(vl_titulo) 
from 	(SELECT a.cd_pessoa_fisica cd_pessoa_fisica, 
		sum(coalesce(l.vl_recebido,t.vl_titulo)) vl_titulo 
		FROM atendimento_paciente a, titulo_receber t
LEFT OUTER JOIN titulo_receber_liq l ON (t.nr_titulo = l.nr_titulo)
WHERE a.nr_atendimento = t.nr_atendimento  and t.cd_pessoa_fisica = cd_pessoa_fisica_w and a.cd_pessoa_fisica <> cd_pessoa_fisica_w and to_char(coalesce(l.dt_recebimento,t.dt_emissao),'yyyy') = dt_ano_calendario_w and t.ie_situacao <> 5 and t.ie_situacao <> 3 --and	t.vl_saldo_titulo = 0 
--		and	l.cd_tipo_recebimento in (1,2,3,4,6,10,15,18) 
  and t.ie_origem_titulo in (2,1) and l.cd_tipo_recebimento in (select ie_tipo_receber 
					 from	 dmed_regra_tipo_tit) and coalesce(cd_estabelecimento_p, a.cd_estabelecimento) = a.cd_estabelecimento and ((a.cd_estabelecimento = coalesce( cd_estabelecimento_p ,a.cd_estabelecimento)) 
		or  	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = ''))) group by a.cd_pessoa_fisica 
	
union all
 
	(select t.cd_pessoa_fisica cd_pessoa_fisica, 
			sum(coalesce(l.vl_recebido,t.vl_titulo)) vl_titulo 
		FROM titulo_receber_resp_pgto b, atendimento_paciente a, titulo_receber t
LEFT OUTER JOIN titulo_receber_liq l ON (t.nr_titulo = l.nr_titulo)
WHERE a.nr_atendimento = t.nr_atendimento  and t.nr_titulo = b.nr_titulo and b.cd_pessoa_fisica = cd_pessoa_fisica_w and t.cd_pessoa_fisica <> cd_pessoa_fisica_w and to_char(coalesce(l.dt_recebimento,t.dt_emissao),'yyyy') = dt_ano_calendario_w and t.ie_situacao <> 5 and t.ie_situacao <> 3 --and	t.vl_saldo_titulo = 0 
	--	and	l.cd_tipo_recebimento in (1,2,3,4,6,10,15,18) 
  and t.ie_origem_titulo in (2,1) and l.cd_tipo_recebimento in (select ie_tipo_receber 
					from	 dmed_regra_tipo_tit) and coalesce(cd_estabelecimento_p, a.cd_estabelecimento) = a.cd_estabelecimento and ((a.cd_estabelecimento = coalesce( cd_estabelecimento_p ,a.cd_estabelecimento)) 
		or  	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = ''))) group by t.cd_pessoa_fisica)) alias32 
group by cd_pessoa_fisica		 
having sum(vl_titulo) > 0;

C05 CURSOR FOR 
	 
	SELECT 	lpad(p.nr_cpf,11,' '), 
		n.cd_pessoa_fisica, 
		sum(CASE WHEN n.cd_pessoa_fisica=coalesce(a.cd_pessoa_fisica,n.cd_pessoa_fisica) THEN coalesce(l.vl_recebido,r.vl_titulo)  ELSE 0 END ) 
	FROM pessoa_fisica p, nota_fiscal n, convenio co, conta_paciente c
LEFT OUTER JOIN atendimento_paciente a ON (c.nr_atendimento = a.nr_atendimento)
, titulo_receber r
LEFT OUTER JOIN titulo_receber_liq l ON (r.nr_titulo = l.nr_titulo)
WHERE c.nr_interno_conta	= n.nr_interno_conta and c.nr_interno_conta	= r.nr_interno_conta  and n.cd_pessoa_fisica = p.cd_pessoa_fisica and c.cd_convenio_parametro = co.cd_convenio and to_char(coalesce(l.dt_recebimento,r.dt_emissao),'yyyy') = dt_ano_calendario_w and to_char(coalesce(c.dt_acerto_conta,c.dt_mesano_contabil),'yyyy') = dt_ano_calendario_w and co.ie_tipo_convenio = 1 and r.ie_situacao <> 5 and r.ie_situacao <> 3 --and	r.vl_saldo_titulo = 0 
	--and	l.cd_tipo_recebimento in (1,2,3,4,6,10,15,18) 
  and r.ie_origem_titulo in (2) and l.cd_tipo_recebimento in (SELECT ie_tipo_receber 
					 from	 dmed_regra_tipo_tit) and ((a.cd_estabelecimento = coalesce( cd_estabelecimento_p ,a.cd_estabelecimento)) 
	or  	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = ''))) and (((ie_cpf_w = 'SC') and ( coalesce(p.nr_cpf::text, '') = '')) 
	or	( ie_cpf_w = 'CC' AND p.nr_cpf IS NOT NULL AND p.nr_cpf::text <> '') 
	or (ie_cpf_w = 'AM')) group by lpad(p.nr_cpf,11,' '), n.cd_pessoa_fisica 
	having sum(CASE WHEN r.cd_pessoa_fisica=coalesce(a.cd_pessoa_fisica,n.cd_pessoa_fisica) THEN coalesce(l.vl_recebido,r.vl_titulo)  ELSE l.vl_recebido END ) > 0;
	
c06 CURSOR FOR 
 
	SELECT 	cd_pessoa_fisica, 
		sum(vl_titulo) 
	from 	(SELECT a.cd_pessoa_fisica cd_pessoa_fisica, 
			sum(coalesce(l.vl_recebido,t.vl_titulo)) vl_titulo 
		FROM nota_fiscal n, atendimento_paciente a, titulo_receber t
LEFT OUTER JOIN titulo_receber_liq l ON (t.nr_titulo = l.nr_titulo)
WHERE a.nr_atendimento = t.nr_atendimento and n.nr_nota_fiscal	= t.nr_nota_fiscal  and n.cd_pessoa_fisica = cd_pessoa_fisica_w and a.cd_pessoa_fisica <> cd_pessoa_fisica_w and to_char(coalesce(l.dt_recebimento,t.dt_emissao),'yyyy') = dt_ano_calendario_w and t.ie_situacao <> 5 and t.ie_situacao <> 3 --and	t.vl_saldo_titulo = 0 
--		and	l.cd_tipo_recebimento in (1,2,3,4,6,10,15,18) 
  and t.ie_origem_titulo in (2) and l.cd_tipo_recebimento in (select ie_tipo_receber 
					 from	 dmed_regra_tipo_tit) and coalesce(cd_estabelecimento_p, a.cd_estabelecimento) = a.cd_estabelecimento and ((a.cd_estabelecimento = coalesce( cd_estabelecimento_p ,a.cd_estabelecimento)) 
		or  	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = ''))) group by a.cd_pessoa_fisica) alias16 
	group by cd_pessoa_fisica 
	having sum(vl_titulo) > 0;		
	 
	 
/*Cursor C04 is 
	select 	cd_pessoa_fisica, 
		sum(vl_titulo) 
	from 	(select 	a.cd_pessoa_fisica cd_pessoa_fisica, 
		sum(nvl(l.vl_recebido,t.vl_titulo)) vl_titulo 
		from	atendimento_paciente a, 
			titulo_receber t, 
			titulo_receber_liq l 
		where	a.nr_atendimento = t.nr_atendimento 
		and	t.nr_titulo = l.nr_titulo (+) 
		and	t.cd_pessoa_fisica = cd_pessoa_fisica_w 
		and	a.cd_pessoa_fisica <> cd_pessoa_fisica_w 
		and	to_char(nvl(l.dt_recebimento,t.dt_emissao),'yyyy') = dt_ano_calendario_w 
		and	t.ie_situacao <> 5 
		and	t.ie_situacao <> 3 
		--and	t.vl_saldo_titulo = 0 
--		and	l.cd_tipo_recebimento in (1,2,3,4,6,10,15,18) 
		and	l.cd_tipo_recebimento in (select ie_tipo_receber 
					 from	 dmed_regra_tipo_tit) 
		group by a.cd_pessoa_fisica 
		union all 
		select 	s.cd_pessoa_fisica cd_pessoa_fisica, 
			sum(nvl(l.vl_recebido,s.vl_titulo)) vl_titulo 
		from 	titulo_receber s, 
			titulo_receber_liq l 
		where 	s.nr_titulo = l.nr_titulo(+) 
		and	to_char(nvl(l.dt_recebimento,s.dt_emissao),'yyyy') = dt_ano_calendario_w 
		and	s.cd_pessoa_fisica = cd_pessoa_fisica_w 
		and	s.nr_atendimento is null 
		and	s.ie_situacao <> 5 
		and	s.ie_situacao <> 3		 
		--and	s.vl_saldo_titulo = 0 
		--and	l.cd_tipo_recebimento in (1,2,3,4,6,10,15,18) 
		and	l.cd_tipo_recebimento in (select ie_tipo_receber 
						 from	 dmed_regra_tipo_tit) 
		group by cd_pessoa_fisica) 
	group by cd_pessoa_fisica 
	having sum(vl_titulo) > 0;	*/
 
 
	 
 

BEGIN 
 
ie_buscar_responsavel_w := obter_param_usuario(5500, 17, obter_perfil_ativo, nm_usuario_p, 0, ie_buscar_responsavel_w);
 
select dt_ano_calendario, 
	coalesce(ie_cpf, 'AM') 
into STRICT	dt_ano_calendario_w, 
	ie_cpf_w 
from	dmed 
where	nr_sequencia = nr_seq_dmed_p;	
 
if (ie_buscar_responsavel_w = 'S') then 
	open c01;
	loop 
	fetch c01 into	nr_cpf_w, 
			cd_pessoa_fisica_w, 
			vl_total_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		select 	nextval('dmed_resp_pagamento_seq') 
		into STRICT	nr_seq_dmed_resp_w 
		;
		 
 
		insert into dmed_resp_pagamento(nr_sequencia, 
						 dt_atualizacao, 
						 nm_usuario, 
						 dt_atualizacao_nrec, 
						 nm_usuario_nrec, 
						 nr_cpf, 
						 nr_seq_dmed, 
						 vl_pago_resp, 
						 cd_pessoa_fisica) 
		values (nr_seq_dmed_resp_w, 
						 clock_timestamp(), 
						 nm_usuario_p, 
						 clock_timestamp(), 
						 nm_usuario_p, 
						 nr_cpf_w, 
						 nr_seq_dmed_p, 
						 vl_total_titulo_w, 
						 cd_pessoa_fisica_w);
		open C02;
		loop 
		fetch c02 into cd_beneficiario_w, 
				vl_total_titulo_ben_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			select 	dt_nascimento, 
				lpad(nr_cpf,11,' ') 
			into STRICT	dt_nascimento_w, 
				nr_cpf_beneficiario_w 
			from	pessoa_fisica 
			where	cd_pessoa_fisica = cd_beneficiario_w;
		 
			insert into dmed_beneficiario_pago(nr_sequencia, 
							  dt_atualizacao, 
							  nm_usuario, 
							  dt_atualizacao_nrec, 
							  nm_usuario_nrec, 
							  nr_seq_dmed_resp, 
							  nr_cpf, 
							  vl_pago_beneficiario, 
							  dt_nascimento, 
							  cd_pessoa_fisica) 
			values (nextval('dmed_beneficiario_pago_seq'), 
							  clock_timestamp(), 
							  nm_usuario_p, 
							  clock_timestamp(),	 
							  nm_usuario_p, 
							  nr_seq_dmed_resp_w, 
							  nr_cpf_beneficiario_w, 
							  vl_total_titulo_ben_w, 
							  dt_nascimento_w, 
							  cd_beneficiario_w);
							   
		end loop;
		close c02;
						 
						 
						 
	end loop;
	close c01;		
elsif (ie_buscar_responsavel_w = 'N') then 
	open c03;
	loop 
	fetch c03 into	nr_cpf_w, 
			cd_pessoa_fisica_w, 
			vl_total_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		select 	nextval('dmed_resp_pagamento_seq') 
		into STRICT	nr_seq_dmed_resp_w 
		;
		 
 
		insert into dmed_resp_pagamento(nr_sequencia, 
						 dt_atualizacao, 
						 nm_usuario, 
						 dt_atualizacao_nrec, 
						 nm_usuario_nrec, 
						 nr_cpf, 
						 nr_seq_dmed, 
						 vl_pago_resp, 
						 cd_pessoa_fisica) 
		values (nr_seq_dmed_resp_w, 
						 clock_timestamp(), 
						 nm_usuario_p, 
						 clock_timestamp(), 
						 nm_usuario_p, 
						 nr_cpf_w, 
						 nr_seq_dmed_p, 
						 vl_total_titulo_w, 
						 cd_pessoa_fisica_w);	
						 
		open C04;
		loop 
		fetch c04 into cd_beneficiario_w, 
				vl_total_titulo_ben_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			select 	dt_nascimento, 
				nr_cpf 
			into STRICT	dt_nascimento_w, 
				nr_cpf_beneficiario_w 
			from	pessoa_fisica 
			where	cd_pessoa_fisica = cd_beneficiario_w;
		 
			insert into dmed_beneficiario_pago(nr_sequencia, 
							  dt_atualizacao, 
							  nm_usuario, 
							  dt_atualizacao_nrec, 
							  nm_usuario_nrec, 
							  nr_seq_dmed_resp, 
							  nr_cpf, 
							  vl_pago_beneficiario, 
							  dt_nascimento, 
							  cd_pessoa_fisica) 
			values (nextval('dmed_beneficiario_pago_seq'), 
							  clock_timestamp(), 
							  nm_usuario_p, 
							  clock_timestamp(),	 
							  nm_usuario_p, 
							  nr_seq_dmed_resp_w, 
							  nr_cpf_beneficiario_w, 
							  vl_total_titulo_ben_w, 
							  dt_nascimento_w, 
							  cd_beneficiario_w);
							   
		end loop;
		close c04;						
						 
	end loop;
	close C03;
 
elsif (ie_buscar_responsavel_w = 'C') then 
	open c05;
	loop 
	fetch c05 into	nr_cpf_w, 
			cd_pessoa_fisica_w, 
			vl_total_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		select 	nextval('dmed_resp_pagamento_seq') 
		into STRICT	nr_seq_dmed_resp_w 
		;
		 
 
		insert into dmed_resp_pagamento(nr_sequencia, 
						 dt_atualizacao, 
						 nm_usuario, 
						 dt_atualizacao_nrec, 
						 nm_usuario_nrec, 
						 nr_cpf, 
						 nr_seq_dmed, 
						 vl_pago_resp, 
						 cd_pessoa_fisica) 
		values (nr_seq_dmed_resp_w, 
						 clock_timestamp(), 
						 nm_usuario_p, 
						 clock_timestamp(), 
						 nm_usuario_p, 
						 nr_cpf_w, 
						 nr_seq_dmed_p, 
						 vl_total_titulo_w, 
						 cd_pessoa_fisica_w);	
						 
		open c06;
		loop 
		fetch c06 into cd_beneficiario_w, 
				vl_total_titulo_ben_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */
			select 	dt_nascimento, 
				nr_cpf 
			into STRICT	dt_nascimento_w, 
				nr_cpf_beneficiario_w 
			from	pessoa_fisica 
			where	cd_pessoa_fisica = cd_beneficiario_w;
		 
			insert into dmed_beneficiario_pago(nr_sequencia, 
							  dt_atualizacao, 
							  nm_usuario, 
							  dt_atualizacao_nrec, 
							  nm_usuario_nrec, 
							  nr_seq_dmed_resp, 
							  nr_cpf, 
							  vl_pago_beneficiario, 
							  dt_nascimento, 
							  cd_pessoa_fisica) 
			values (nextval('dmed_beneficiario_pago_seq'), 
							  clock_timestamp(), 
							  nm_usuario_p, 
							  clock_timestamp(),	 
							  nm_usuario_p, 
							  nr_seq_dmed_resp_w, 
							  nr_cpf_beneficiario_w, 
							  vl_total_titulo_ben_w, 
							  dt_nascimento_w, 
							  cd_beneficiario_w);
							   
		end loop;
		close c06;						
						 
	end loop;
	close C05;
 
 
 
end if;
 
 
 
commit;
 
CALL gerar_dmed_titular_plano(	nr_seq_dmed_p, 
			nm_usuario_p, 
			cd_estabelecimento_p);
			 
update dmed set dt_geracao = clock_timestamp() 
where nr_sequencia = nr_seq_dmed_p;			
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_dados_dmed (nr_seq_dmed_p text, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

