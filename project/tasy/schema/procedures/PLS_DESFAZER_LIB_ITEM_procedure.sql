-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_desfazer_lib_item ( nr_seq_item_p bigint, ie_tipo_item_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_conta_w			bigint;
nr_seq_protocolo_w		bigint;
qt_solicitada_w			bigint;
nr_seq_pos_stab_w		bigint;
nr_seq_conta_proc_w		bigint;
ie_via_acesso_regra_w		varchar(1);
ie_via_acesso_w			varchar(1);
ie_via_acesso_imp_w		varchar(2);
nr_seq_regra_via_acesso_w	bigint;
ie_via_acesso_inf_w		varchar(1);
ie_origem_conta_w		varchar(1);
ds_mensagem_w			varchar(255);
ie_status_conta_proc_w		varchar(10);
ie_via_acesso_manual_w		pls_conta_proc.ie_via_acesso_manual%type;

C03 CURSOR FOR 
	SELECT	nr_sequencia, 
		ie_via_acesso, 
		ie_via_acesso_imp, 
		nr_seq_regra_via_acesso, 
		ie_via_acesso_manual 
	from	pls_conta_proc 
	where	nr_seq_conta = nr_seq_conta_w 
	order by 1;

BEGIN
 
if (coalesce(nr_seq_item_p,0) <> 0) then 
	if (ie_tipo_item_p = 'P') then 
		select	max(ie_status) 
		into STRICT	ie_status_conta_proc_w 
		from	pls_conta_proc 
		where	nr_sequencia	= nr_seq_item_p;
		 
		if (coalesce(ie_status_conta_proc_w,'U') <> 'D') then 
			begin 
			delete from pls_ocorrencia_benef a 
			where	a.nr_seq_proc = nr_seq_item_p 
			and	exists (	SELECT	1 
						from 	pls_conta_glosa x 
						where	x.nr_seq_conta_proc	= nr_seq_item_p 
						and	a.nr_seq_glosa		= x.nr_sequencia 
						and	x.ie_lib_manual	= 'S');
						 
			update	pls_ocorrencia_benef 
			set	ie_situacao		= 'A', 
				ie_forma_inativacao 	 = NULL 
			where	nr_seq_conta_proc	= nr_seq_item_p;
			 
			exception 
			when others then 
				ds_mensagem_w	:= null;
			end;
 
			delete	from pls_conta_glosa 
			where	nr_seq_conta_proc	= nr_seq_item_p 
			and	ie_lib_manual	= 'S';
 
			update	pls_conta_glosa 
			set	ie_situacao		= 'A', 
				ie_forma_inativacao 	 = NULL 
			where	nr_seq_conta_proc	= nr_seq_item_p;
 
			update	pls_conta_proc 
			set	dt_atualizacao	= clock_timestamp(), 
				nm_usuario	= nm_usuario_p, 
				vl_unitario	= 0, 
				vl_liberado	= 0, 
				vl_glosa	= 0, 
				vl_saldo	= 0, 
				qt_procedimento	= 0, 
				ie_status	= 'P', 
				dt_liberacao	 = NULL, 
				nm_usuario_liberacao	= '', 
				ie_glosa	= 'N', 
				ds_log		= 'pls_desfazer_lib_item' 
			where	nr_sequencia	= nr_seq_item_p;
			 
			begin 
				select	nr_sequencia 
				into STRICT	nr_seq_pos_stab_w 
				from 	pls_conta_pos_estabelecido 
				where 	nr_seq_conta_proc = nr_seq_item_p 
				and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
			exception 
			when others then 
				nr_seq_pos_stab_w := 0;
			end;
			 
			if (coalesce(nr_seq_pos_stab_w,0) > 0) then 
				update	pls_conta_pos_estabelecido 
				set	ie_status_faturamento	= 'U', 
					dt_atualizacao		= clock_timestamp(), 
					nm_usuario		= nm_usuario_p 
				where	nr_sequencia = nr_seq_pos_stab_w;
			end if;
			 
			update	pls_conta_coparticipacao 
			set	ie_status_mensalidade = 'P' 
			where	nr_seq_conta_proc = nr_seq_item_p 
			and	coalesce(ie_status_mensalidade,'P') <> 'C';
			 
			select	nr_seq_conta, 
				qt_procedimento_imp 
			into STRICT	nr_seq_conta_w, 
				qt_solicitada_w 
			from	pls_conta_proc 
			where	nr_sequencia	= nr_seq_item_p;
			 
			select	max(ie_origem_conta) 
			into STRICT	ie_origem_conta_w 
			from	pls_conta 
			where	nr_sequencia = nr_seq_conta_w;
			 
			CALL pls_delete_conta_medica_resumo(nr_seq_conta_w,nr_seq_item_p,null,nm_usuario_P);
 
			update	pls_proc_participante 
			set	vl_participante = 0, 
				ie_status	= 'P' 
			where	nr_seq_conta_proc = nr_seq_item_p 
			and	coalesce(ie_status,'U')		 <> 'C' 
			and	coalesce(ie_gerada_cta_honorario,'N') <> 'S';
			 
			select	coalesce(ie_via_acesso_regra,'N') 
			into STRICT	ie_via_acesso_regra_w 
			from	pls_parametros 
			where	cd_estabelecimento = cd_estabelecimento_p;
		 
			open C03;
			loop 
			fetch C03 into	 
				nr_seq_conta_proc_w, 
				ie_via_acesso_w, 
				ie_via_acesso_imp_w, 
				nr_seq_regra_via_acesso_w, 
				ie_via_acesso_manual_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin 
				ie_via_acesso_inf_w := 'S';
				if (coalesce(ie_origem_conta_w,'D') = 'E') and (ie_via_acesso_regra_w = 'S') then 
					if (coalesce(ie_via_acesso_w,'X') = coalesce(ie_via_acesso_imp_w,'X')) and (not ie_via_acesso_manual_w	= 'S')then 
						ie_via_acesso_inf_w	:= 'N';
					end if;
				end if;
				 
				if (ie_via_acesso_inf_w = 'N') or (coalesce(nr_seq_regra_via_acesso_w,0) > 0 )then 
					update	pls_conta_proc 
					set	ie_via_acesso			 = NULL, 
						nr_seq_regra_via_acesso		 = NULL, 
						tx_item				= 100 
					where	nr_sequencia			= nr_seq_conta_proc_w;
				 
				end if;
				end;
			end loop;
			close C03;
			 
			/*Retirado pois estava gerando inconsistÃªcncia no valor total liberado da conta 
			Alinhado com o analista Diogo*/
 
			/*pls_consiste_procedimento(nr_seq_conta_w,'CC', nm_usuario_p, cd_estabelecimento_p); 
			pls_atualizar_via_acesso_conta(nr_seq_conta_w,nm_usuario_p); 
			pls_recalcular_conta(nr_seq_conta_w,nm_usuario_p,'G','S');*/
 
			CALL pls_atualizar_conta_resumo(nr_seq_conta_w,cd_estabelecimento_p,nm_usuario_p);
			 
			update	pls_conta_proc 
			set	ie_status	= 'P' 
			where	nr_sequencia	= nr_seq_item_p;
		end if;
	elsif (ie_tipo_item_p = 'M') then 
		begin 
		delete from pls_ocorrencia_benef a 
		where	a.nr_seq_conta_mat = nr_seq_item_p 
		and	exists (	SELECT	1 
					from 	pls_conta_glosa x 
					where	x.nr_seq_conta_mat	= nr_seq_item_p 
					and	a.nr_seq_glosa		= x.nr_sequencia 
					and	x.ie_lib_manual	= 'S');
		exception 
		when others then 
			ds_mensagem_w	:= null;
		end;
		 
		delete	from pls_conta_glosa 
		where	nr_seq_conta_mat	= nr_seq_item_p 
		and	ie_lib_manual	= 'S';
 
		update	pls_conta_glosa 
		set	ie_situacao		= 'A', 
			ie_forma_inativacao 	 = NULL 
		where	nr_seq_conta_mat	= nr_seq_item_p;
 
		update	pls_conta_mat 
		set	dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p, 
			vl_unitario	= 0, 
			vl_liberado	= 0, 
			vl_glosa	= 0, 
			vl_saldo	= 0, 
			qt_material	= 0, 
			ie_status	= 'P', 
			dt_liberacao	 = NULL, 
			nm_usuario_liberacao	= '', 
			ie_glosa	= 'N' 
		where	nr_sequencia	= nr_seq_item_p;		
		 
		begin 
			select	nr_sequencia 
			into STRICT	nr_seq_pos_stab_w 
			from 	pls_conta_pos_estabelecido 
			where 	nr_seq_conta_mat = nr_seq_item_p 
			and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
		exception 
		when others then 
			nr_seq_pos_stab_w := 0;
		end;
		 
		CALL pls_delete_conta_medica_resumo(nr_seq_conta_w,null,nr_seq_item_p,nm_usuario_P);
 
		CALL pls_atualizar_item_resumo(nr_seq_item_p, ie_tipo_item_p, nm_usuario_p,'N');
		 
		if (coalesce(nr_seq_pos_stab_w,0) > 0) then 
			update	pls_conta_pos_estabelecido 
			set	ie_status_faturamento = 'U', 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia = nr_seq_pos_stab_w;
		end if;
		 
		update	pls_conta_coparticipacao 
		set	ie_status_mensalidade = 'P' 
		where	nr_seq_conta_mat = nr_seq_item_p 
		and	coalesce(ie_status_mensalidade,'P') <> 'C';
		 
		select	nr_seq_conta 
		into STRICT	nr_seq_conta_w 
		from	pls_conta_mat 
		where	nr_sequencia	= nr_seq_item_p;
	end if;
end if;
 
begin 
/*Diego OS - 310267 - Atualizar os respectivos valores na analise*/
 
update	w_pls_resumo_conta 
set	vl_unitario		= 0, 
	vl_total		= 0, 
	qt_liberado		= 0, 
	ie_status		= 'P' 
where	nr_seq_item		= nr_seq_item_p 
and	ie_tipo_item		= ie_tipo_item_p;
exception 
when others then 
	qt_solicitada_w := qt_solicitada_w;
end;
 
update	pls_conta 
set	ie_glosa	= 'N' 
where	nr_sequencia	= nr_seq_conta_w;
 
CALL pls_cta_consistir_pck.gerar_resumo_conta(null, null, null, nr_seq_conta_w,nm_usuario_p, cd_estabelecimento_p);
CALL pls_fechar_conta(nr_seq_conta_w, 'N', 'S', 'S', cd_estabelecimento_p, nm_usuario_p, null, null);
 
select	nr_seq_protocolo 
into STRICT	nr_seq_protocolo_w 
from	pls_conta 
where	nr_sequencia	= nr_seq_conta_w;
 
CALL pls_altera_status_protocolo(nr_seq_protocolo_w,'L','S',cd_estabelecimento_p,nm_usuario_p);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_desfazer_lib_item ( nr_seq_item_p bigint, ie_tipo_item_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

