-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_dados_autoriais ( dt_inicial_p timestamp, dt_final_p timestamp, ie_tipo_registro_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_interno_w			bigint;
cd_ans_w			varchar(20);
cd_segmentacao_w		varchar(3);
cd_acomodacao_w			varchar(1);
cd_contratacao_w		varchar(1);
cd_abrangencia_w		varchar(1);
ie_franquia_w			varchar(1);
ie_coparticipacao_w		varchar(1);
cd_beneficiario_w		varchar(40);
cd_matricula_principal_w	varchar(40);
cd_matricula_secundaria_w	varchar(40);
dt_nascimento_w			varchar(8);
ie_tipo_beneficiario_w		bigint;
ie_sexo_w			bigint;
dt_adesao_w			varchar(8);
dt_exclusao_w			varchar(8);
cd_cpt_w			bigint;
cd_empresa_w			varchar(14);
cd_mensalidade_w		varchar(40);
cd_matricula_principal_1_w	varchar(40);
cd_matricula_secundaria_1_w	varchar(40);
dt_mesano_competencia_w		varchar(6);
vl_contraprestacao_w		varchar(40);
cd_prestador_w			bigint;
ie_tipo_rede_w			bigint;
cd_ibge_w			varchar(10);
cd_especialidade_w		varchar(40);
cd_sinistro_w			varchar(40);
cd_matricula_principal_2_w	varchar(40);
cd_matricula_secundaria_2_w	varchar(40);
dt_ocorrencia_w			varchar(8);
dt_aviso_w			varchar(8);
dt_pagamento_w			varchar(8);
dt_pagamento_ww			timestamp;
nr_documento_w			varchar(20);
cd_classif_sinistro_w		varchar(1);
nr_diarias_w			bigint;
nr_diarias_uti_w		bigint;
nm_tabela_w			varchar(255);
cd_procedimento_material_w	bigint;
vl_despesa_w			varchar(40);
vl_coparticipacao_w		varchar(40);
vl_franquia_w			bigint;
cd_prestador_sinistro_w		bigint;
nr_seq_protocolo_w		bigint;
ie_internado_w			varchar(10);
qt_cpt_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_clinica_w		bigint;
dt_alta_w			timestamp;
dt_entrada_w			timestamp;
nr_seq_conta_proc_w		bigint;
i_w				bigint;
ie_seq_titular_w		varchar(10);
i_ww				bigint;
ie_material_procedimento_w	varchar(1);
ie_tipo_despesa_w		varchar(1);
ie_tipo_prestador_w		bigint;
dt_final_cpt_w			varchar(8);
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;

c01 CURSOR FOR 
	SELECT	distinct a.nr_sequencia cd_interno, 
		a.nr_protocolo_ans cd_ans, 
		CASE WHEN A.IE_SEGMENTACAO='12' THEN '14' WHEN A.IE_SEGMENTACAO='11' THEN '13' WHEN A.IE_SEGMENTACAO='10' THEN '11' WHEN A.IE_SEGMENTACAO='9' THEN '10'  ELSE A.IE_SEGMENTACAO END  CD_SEGMENTACAO, 
		CASE WHEN A.IE_ACOMODACAO='N' THEN '1' WHEN A.IE_ACOMODACAO='C' THEN '2' WHEN A.IE_ACOMODACAO='I' THEN '4' END  CD_ACOMODACAO, 
		CASE WHEN A.IE_TIPO_CONTRATACAO='I' THEN '1' WHEN A.IE_TIPO_CONTRATACAO='CE' THEN '2' WHEN A.IE_TIPO_CONTRATACAO='CA' THEN '3' END  CD_CONTRATACAO, 
		CASE WHEN A.IE_ABRANGENCIA='N' THEN '1' WHEN A.IE_ABRANGENCIA='GE' THEN '2' WHEN A.IE_ABRANGENCIA='E' THEN '3' WHEN A.IE_ABRANGENCIA='GM' THEN '4' WHEN A.IE_ABRANGENCIA='M' THEN '5'  ELSE '6' END  CD_ABRANGENCIA, 
		CASE WHEN A.IE_FRANQUIA='S' THEN '1'  ELSE '0' END  IE_FRANQUIA, 
		CASE WHEN A.IE_COPARTICIPACAO='S' THEN '1'  ELSE '0' END  IE_COPARTICIPACAO 
	from	pls_plano a, 
		pls_contrato_plano b, 
		pls_contrato c 
	where	a.nr_sequencia		= b.nr_seq_plano 
	and	b.nr_seq_contrato	= c.nr_sequencia 
	and	exists (SELECT	1 
			from	pls_segurado x 
			where	x.nr_seq_contrato 	= c.nr_sequencia 
			and	x.nr_seq_plano		= a.nr_sequencia 
			and	dt_inicial_p between x.dt_contratacao and coalesce(x.dt_rescisao,dt_final_p) 
			and	dt_final_p between x.dt_contratacao and coalesce(x.dt_rescisao, dt_final_p)) 
	and	ie_tipo_registro_p	= 1;

c02 CURSOR FOR 
	SELECT	to_char(a.nr_seq_plano) cd_beneficiario, 
		to_char(a.nr_seq_titular) cd_matricula_principal, 
		to_char(a.nr_sequencia) cd_matricula_secundaria, 
		to_char(b.dt_nascimento,'yyyymmdd') dt_nascimento, 
		CASE WHEN coalesce(a.nr_seq_titular::text, '') = '' THEN 1  ELSE 3 END  ie_tipo_beneficiario, 
		CASE WHEN b.ie_sexo='M' THEN 1 WHEN b.ie_sexo='F' THEN 3 END  ie_sexo, 
		to_char(a.dt_contratacao,'yyyymmdd') dt_adesao, 
		to_char(a.dt_rescisao,'yyyymmdd') dt_exclusao, 
		CASE WHEN d.ie_tipo_contratacao='i' THEN null  ELSE lpad(c.cd_cgc_estipulante,9,0) END  cd_empresa 
	from	pls_segurado a, 
		pessoa_fisica b, 
		pls_contrato c, 
		pls_plano d 
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica 
	and	a.nr_seq_contrato	= c.nr_sequencia 
	and	a.nr_seq_plano		= d.nr_sequencia 
	and	a.ie_tipo_segurado	= 'B' 
	--and	a.dt_contratacao	between dt_inicial_p and dt_final_p 
	and	ie_tipo_registro_p		= 2 
	order by CASE WHEN coalesce(a.nr_seq_titular::text, '') = '' THEN -1  ELSE 1 END;

c03 CURSOR FOR 
	SELECT	to_char(d.nr_seq_plano) cd_mensalidade, 
		to_char(d.nr_seq_titular) cd_matricula_principal_1, 
		to_char(d.nr_sequencia) cd_matricula_secundaria_1, 
		to_char(a.dt_mesano_referencia,'yyyymm'), 
		sum(c.vl_mensalidade) - sum(c.vl_coparticipacao) vl_contraprestacao 
	from	pls_segurado d, 
		pls_lote_mensalidade a, 
		pls_mensalidade b, 
		pls_mensalidade_segurado c 
	where	a.nr_sequencia	= b.nr_seq_lote 
	and	b.nr_sequencia	= c.nr_seq_mensalidade 
	and	d.nr_sequencia	= c.nr_seq_segurado 
	and	a.dt_mesano_referencia	between dt_inicial_p and dt_final_p 
	and	ie_tipo_registro_p		= 3 
	group by d.nr_seq_plano, 
			 d.nr_seq_titular, 
			 d.nr_sequencia, 
			 a.dt_mesano_referencia 
	order by CASE WHEN coalesce(d.nr_seq_titular::text, '') = '' THEN -1  ELSE 1 END;

c04 CURSOR FOR 
	SELECT	distinct a.nr_sequencia cd_prestador, 
		CASE WHEN a.ie_tipo_relacao='P' THEN 1 WHEN a.ie_tipo_relacao='I' THEN 2 WHEN a.ie_tipo_relacao='D' THEN 3 END  ie_tipo_rede, 
		substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'CDM'),1,10) cd_ibge, 
		lpad(to_char(coalesce(a.nr_seq_classificacao,CASE WHEN a.nr_seq_tipo_prestador=3 THEN 2 WHEN a.nr_seq_tipo_prestador=4 THEN 3 WHEN a.nr_seq_tipo_prestador=8 THEN 1 WHEN a.nr_seq_tipo_prestador=10 THEN 4 WHEN a.nr_seq_tipo_prestador=11 THEN 5 WHEN a.nr_seq_tipo_prestador=13 THEN 7 WHEN a.nr_seq_tipo_prestador=14 THEN 8 WHEN a.nr_seq_tipo_prestador=15 THEN 9 WHEN a.nr_seq_tipo_prestador=12 THEN 6 END )),8,'0') cd_especialidade, 
		to_char(CASE WHEN a.nr_seq_tipo_prestador=3 THEN 2 WHEN a.nr_seq_tipo_prestador=4 THEN 3 WHEN a.nr_seq_tipo_prestador=8 THEN 1 WHEN a.nr_seq_tipo_prestador=10 THEN 4 WHEN a.nr_seq_tipo_prestador=11 THEN 5 WHEN a.nr_seq_tipo_prestador=13 THEN 7 WHEN a.nr_seq_tipo_prestador=14 THEN 8 WHEN a.nr_seq_tipo_prestador=15 THEN 9 WHEN a.nr_seq_tipo_prestador=12 THEN 6 END ) 
	from	pls_prestador		a, 
		pls_protocolo_conta	b 
	where	b.nr_seq_prestador			= a.nr_sequencia 
	and	b.dt_mes_competencia between dt_inicial_p and dt_final_p 
	and	ie_tipo_registro_p		= 4;

--Em conversa com O Claudinei foi identificado que na geração das informações de provisões técnicas, são selecionados protocolos apenas informando mês competência e 
--são considerados apenas beneficiário diferente de perícia médica. Ajustado no cursor para que a geração dos dados autoriais seja equivalente ao relatorio WPLS 2784 
--que foi validado pelo.Modificado paar obter a coparticipação diretamente da pls_conta(Relatório 2855 faz assim e foi validado pelo Claudinei) 
--Ajustado para pegar o vl_copartic dos materiais também, pois no relatório tomado como base(WPLS2784) o valor da coparticipação é obtido da conta 
c05 CURSOR FOR 
	SELECT	to_char(d.nr_seq_plano) cd_sinistro, 
		to_char(d.nr_seq_titular) cd_matricula_principal_2, 
		to_char(d.nr_sequencia) cd_matricula_secundaria_2, 
		to_char(c.dt_procedimento,'yyyymmdd') dt_ocorrencia, 
		to_char(a.dt_mes_competencia,'yyyymmdd') dt_aviso, 
		coalesce(cd_guia,cd_guia_referencia) nr_documento, 
		c.ie_origem_proced, 
		c.cd_procedimento, 
		b.nr_sequencia, 
		b.nr_seq_clinica, 
		b.dt_alta, 
		b.dt_entrada, 
		coalesce(c.vl_liberado,0), 
		c.nr_sequencia, 
		a.nr_seq_prestador cd_prestador_sinistro, 
		a.nr_sequencia, 
		'P', 
		c.ie_tipo_despesa, 
		(SELECT coalesce(sum(vl_coparticipacao),0) 
		 from	 pls_conta_coparticipacao z 
		 where z.nr_seq_conta_proc = c.nr_sequencia) vl_coparticipacao, 
		coalesce(d.ie_tipo_segurado, 'B') ie_tipo_segurado 
	from	pls_protocolo_conta a, 
		pls_conta b, 
		pls_conta_proc c, 
		pls_segurado d 
	where	d.nr_sequencia	= b.nr_seq_segurado 
	and	b.nr_seq_protocolo	= a.nr_sequencia 
	and	b.nr_sequencia	= c.nr_seq_conta 
	and	a.dt_mes_competencia between dt_inicial_p and dt_final_p 
	and	ie_tipo_registro_p		= 5 
	and	a.ie_status in ('3', '6') 
	and	c.ie_status not in ('D', 'M') 
	
union all
 
	select	to_char(d.nr_seq_plano) cd_sinistro, 
		to_char(d.nr_seq_titular) cd_matricula_principal_2, 
		to_char(d.nr_sequencia) cd_matricula_secundaria_2, 
		to_char(c.dt_atendimento,'yyyymmdd') dt_ocorrencia, 
		to_char(a.dt_mes_competencia,'yyyymmdd') dt_aviso, 
		coalesce(cd_guia,cd_guia_referencia) nr_documento, 
		null, 
		c.nr_seq_material, 
		b.nr_sequencia, 
		b.nr_seq_clinica, 
		b.dt_alta, 
		b.dt_entrada, 
		c.vl_liberado, 
		c.nr_sequencia, 
		a.nr_seq_prestador cd_prestador_sinistro, 
		a.nr_sequencia, 
		'M', 
		c.ie_tipo_despesa, 
		(select coalesce(sum(vl_coparticipacao),0) 
		 from	 pls_conta_coparticipacao z 
		 where z.nr_seq_conta_mat = c.nr_sequencia) vl_coparticipacao, 
		coalesce(d.ie_tipo_segurado, 'B') ie_tipo_segurado 
	from	pls_protocolo_conta a, 
		pls_conta b, 
		pls_conta_mat c, 
		pls_segurado d 
	where	d.nr_sequencia = b.nr_seq_segurado 
	and	b.nr_seq_protocolo = a.nr_sequencia 
	and	b.nr_sequencia = c.nr_seq_conta 
	and	a.dt_mes_competencia between dt_inicial_p and dt_final_p 
	and	ie_tipo_registro_p		= 5 
	and	a.ie_status in ('3', '6') 
	and	c.ie_status not in ('D', 'M') 
	order by 1;
	
--Esse cursor é apenas para atender até a competência 06/2016. Posterior a isso, a verificação será baseada na gestão de contas e não na mensalidade	 
C06 CURSOR FOR 
	SELECT to_char(d.nr_seq_plano) cd_sinistro, 
	to_char(d.nr_seq_titular) cd_matricula_principal_2, 
	to_char(d.nr_sequencia) cd_matricula_secundaria_2, 
	to_char(c.dt_procedimento,'yyyymmdd') dt_ocorrencia, 
	to_char(a.dt_mes_competencia,'yyyymmdd') dt_aviso, 
	coalesce(cd_guia,cd_guia_referencia) nr_documento, 
	c.ie_origem_proced, 
	c.cd_procedimento, 
	b.nr_sequencia, 
	b.nr_seq_clinica, 
	b.dt_alta, 
	b.dt_entrada, 
	coalesce(c.vl_liberado,0), 
	c.nr_sequencia, 
	a.nr_seq_prestador cd_prestador_sinistro, 
	a.nr_sequencia, 
	'P', 
	c.ie_tipo_despesa, 
	(SELECT coalesce(sum(vl_coparticipacao),0) 
	 from  pls_conta_coparticipacao z 
	 where z.nr_seq_conta_proc = c.nr_sequencia) vl_coparticipacao, 
	coalesce(d.ie_tipo_segurado, 'B') ie_tipo_segurado 
 from pls_protocolo_conta a, 
  pls_conta  b, 
  pls_conta_proc  c, 
  pls_segurado  d, 
  pls_mensalidade_seg_item  x, 
  pls_mensalidade_segurado  t, 
  pls_segurado    u, 
  pls_mensalidade   v 
 where u.nr_sequencia  = t.nr_seq_segurado 
 and v.nr_sequencia  = t.nr_seq_mensalidade 
 and x.nr_seq_mensalidade_seg = t.nr_sequencia 
 and x.nr_seq_conta  = b.nr_sequencia 
 and x.ie_tipo_item = '3' 
 and v.dt_referencia >= dt_inicial_p 
 and v.dt_referencia <= dt_final_p 
 and d.nr_sequencia = b.nr_seq_segurado 
 and b.nr_seq_protocolo = a.nr_sequencia 
 and b.nr_sequencia = c.nr_seq_conta 
 and ie_tipo_registro_p  = 5 
 and a.ie_status in ('3', '6') 
 and b.ie_status = 'F' 
 and c.ie_status not in ('D', 'M')  

union all
 
select to_char(d.nr_seq_plano) cd_sinistro, 
	to_char(d.nr_seq_titular) cd_matricula_principal_2, 
	to_char(d.nr_sequencia) cd_matricula_secundaria_2, 
	to_char(c.dt_atendimento,'yyyymmdd') dt_ocorrencia, 
	to_char(a.dt_mes_competencia,'yyyymmdd') dt_aviso, 
	coalesce(cd_guia,cd_guia_referencia) nr_documento, 
	null, 
	c.nr_seq_material, 
	b.nr_sequencia, 
	b.nr_seq_clinica, 
	b.dt_alta, 
	b.dt_entrada, 
	c.vl_liberado, 
	c.nr_sequencia, 
	a.nr_seq_prestador cd_prestador_sinistro, 
	a.nr_sequencia, 
	'M', 
	c.ie_tipo_despesa, 
	(select coalesce(sum(vl_coparticipacao),0) 
		 from	 pls_conta_coparticipacao z 
		 where z.nr_seq_conta_mat = c.nr_sequencia) vl_coparticipacao, 
	coalesce(d.ie_tipo_segurado, 'B') ie_tipo_segurado 
 from pls_protocolo_conta a, 
  pls_conta  b, 
  pls_conta_mat  c, 
  pls_segurado  d, 
  pls_mensalidade_seg_item  x, 
  pls_mensalidade_segurado  t, 
  pls_segurado    u, 
  pls_mensalidade   v 
 where u.nr_sequencia  = t.nr_seq_segurado 
 and v.nr_sequencia  = t.nr_seq_mensalidade 
 and x.nr_seq_mensalidade_seg = t.nr_sequencia 
 and x.nr_seq_conta  = b.nr_sequencia 
 and x.ie_tipo_item = '3' 
 and v.dt_referencia >= dt_inicial_p 
 and v.dt_referencia <= dt_final_p 
 and d.nr_sequencia = b.nr_seq_segurado 
 and b.nr_seq_protocolo = a.nr_sequencia 
 and b.nr_sequencia = c.nr_seq_conta 
 and ie_tipo_registro_p  = 5 
 and a.ie_status in ('3', '6') 
 and b.ie_status = 'F' 
 and c.ie_status not in ('D', 'M');


BEGIN 
 
CALL exec_sql_dinamico(nm_usuario_p,'truncate table pls_atuarial');
--pls_posicionar_sequence_cache('PLS_ATUARIAL','NR_SEQUENCIA','R',1000); 
 
i_w	:= 0;
i_ww	:= 0;
if (ie_tipo_registro_p	= 1) then 
	open c01;
	loop 
	fetch c01 into 
		cd_interno_w, 
		cd_ans_w, 
		cd_segmentacao_w, 
		cd_acomodacao_w, 
		cd_contratacao_w, 
		cd_abrangencia_w, 
		ie_franquia_w, 
		ie_coparticipacao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		i_w	:= i_w + 1;
		insert into pls_atuarial(	nr_sequencia, dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
				ie_tipo_registro,cd_interno,cd_segmentacao,cd_acomodacao, 
				cd_contratacao,cd_abrangencia,ie_franquia,ie_coparticipacao,cd_estabelecimento,cd_ans) 
		values (	nextval('pls_atuarial_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
				ie_tipo_registro_p,cd_interno_w,cd_segmentacao_w,cd_acomodacao_w, 
				cd_contratacao_w,cd_abrangencia_w,ie_franquia_w,ie_coparticipacao_w,cd_estabelecimento_p,cd_ans_w);
		 
		if (i_w = 1000) then 
			commit;
			i_w	:= 0;
		end if;
		end;
	end loop;
	close c01;
elsif (ie_tipo_registro_p	= 2) then 
	open c02;
	loop 
	fetch c02 into 
		cd_beneficiario_w, 
		cd_matricula_principal_w, 
		cd_matricula_secundaria_w, 
		dt_nascimento_w, 
		ie_tipo_beneficiario_w, 
		ie_sexo_w, 
		dt_adesao_w, 
		dt_exclusao_w, 
		cd_empresa_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		i_w	:= i_w + 1;
		select	to_char(max(coalesce(a.dt_inicio_vigencia,coalesce(b.dt_inclusao_operadora,b.dt_contratacao)) + a.qt_dias),'yyyymmdd') 
		into STRICT	dt_final_cpt_w 
		from	pls_carencia	a, 
			pls_segurado	b 
		where	a.nr_seq_segurado = b.nr_sequencia 
		and	b.nr_sequencia	 = cd_matricula_secundaria_w 
		and	a.ie_cpt		= 'S';
		 
		if (dt_final_cpt_w IS NOT NULL AND dt_final_cpt_w::text <> '') then 
			cd_cpt_w	:= 1;
		else 
			cd_cpt_w	:= 0;
			dt_final_cpt_w := '00000000';
		end if;
		 
		if (coalesce(dt_nascimento_w::text, '') = '') then 
			dt_nascimento_w	:= '00000000';
		end if;
		 
		if (coalesce(dt_adesao_w::text, '') = '') then 
			dt_adesao_w	:= '00000000';
		end if;
		 
		if (coalesce(dt_exclusao_w::text, '') = '') then 
			dt_exclusao_w	:= '00000000';
		end if;
		 
		if (cd_matricula_principal_w IS NOT NULL AND cd_matricula_principal_w::text <> '') then 
			select	ie_seq_titular 
			into STRICT	ie_seq_titular_w 
			from (	SELECT	row_number() OVER () + 1 ie_seq_titular, 
					nr_sequencia	nr_seq_segurado 
				from	pls_segurado 
				where	nr_seq_titular	= cd_matricula_principal_w) alias1 
			where	nr_seq_segurado	= cd_matricula_secundaria_w;
		else 
			ie_seq_titular_w	:= 1;
			cd_matricula_principal_w	:= cd_matricula_secundaria_w;
		end if;
		 
		ie_seq_titular_w	:= lpad(ie_seq_titular_w,3,'0');
		 
		insert into pls_atuarial(	nr_sequencia, dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
				ie_tipo_registro,cd_beneficiario,cd_matricula_principal,cd_matricula_secundaria, 
				dt_nascimento,ie_tipo_beneficiario,ie_sexo,dt_adesao,dt_exclusao, 
				cd_empresa,cd_cpt,dt_final_cpt,ie_tipo_patrocinio,cd_historico_beneficiario,cd_estabelecimento) 
		values (	nextval('pls_atuarial_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
				ie_tipo_registro_p,cd_beneficiario_w,cd_matricula_principal_w,ie_seq_titular_w, 
				dt_nascimento_w,ie_tipo_beneficiario_w,ie_sexo_w,dt_adesao_w,dt_exclusao_w, 
				cd_empresa_w,cd_cpt_w,dt_final_cpt_w,0,0,cd_estabelecimento_p);
		 
		if (i_w = 1000) then 
			commit;
			i_w	:= 0;
		end if;
		end;
	end loop;
	close c02;
elsif (ie_tipo_registro_p	= 3) then 
	open c03;
	loop 
	fetch c03 into 
		cd_mensalidade_w, 
		cd_matricula_principal_1_w, 
		cd_matricula_secundaria_1_w, 
		dt_mesano_competencia_w, 
		vl_contraprestacao_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
		 
		if (cd_matricula_principal_1_w IS NOT NULL AND cd_matricula_principal_1_w::text <> '') then 
			select	ie_seq_titular 
			into STRICT	ie_seq_titular_w 
			from (	SELECT	row_number() OVER () + 1 ie_seq_titular, 
					nr_sequencia	nr_seq_segurado 
				from	pls_segurado 
				where	nr_seq_titular	= cd_matricula_principal_1_w) alias1 
			where	nr_seq_segurado	= cd_matricula_secundaria_1_w;
		else 
			ie_seq_titular_w	:= 1;
			cd_matricula_principal_1_w	:= cd_matricula_secundaria_1_w;
		end if;
		 
		i_w	:= i_w + 1;
		ie_seq_titular_w	:= lpad(ie_seq_titular_w,2,'0');
		vl_contraprestacao_w	:= replace(replace(campo_mascara_virgula(vl_contraprestacao_w),',',''),'.','');
		 
		insert into pls_atuarial(	nr_sequencia, dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
				ie_tipo_registro,cd_mensalidade,cd_matricula_principal_1,cd_matricula_secundaria_1, 
				dt_mesano_competencia,vl_contraprestacao,cd_estabelecimento) 
		values (	nextval('pls_atuarial_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
				ie_tipo_registro_p,cd_mensalidade_w,cd_matricula_principal_1_w,ie_seq_titular_w, 
				dt_mesano_competencia_w,vl_contraprestacao_w,cd_estabelecimento_p);
		 
		if (i_w = 1000) then 
			commit;
			i_w	:= 0;
		end if;
		end;
	end loop;
	close c03;
elsif (ie_tipo_registro_p	= 4) then 
	open c04;
	loop 
	fetch c04 into 
		cd_prestador_w, 
		ie_tipo_rede_w, 
		cd_ibge_w, 
		cd_especialidade_w, 
		ie_tipo_prestador_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin 
		i_w	:= i_w + 1;
		 
		insert into pls_atuarial(	nr_sequencia, dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
				ie_tipo_registro,cd_prestador,ie_tipo_prestador,ie_tipo_rede, 
				cd_ibge,cd_especialidade,cd_estabelecimento) 
		values (	nextval('pls_atuarial_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
				ie_tipo_registro_p,cd_prestador_w,ie_tipo_prestador_w,ie_tipo_rede_w, 
				cd_ibge_w,cd_especialidade_w,cd_estabelecimento_p);
		 
		if (i_w = 1000) then 
			commit;
			i_w	:= 0;
		end if;
		end;
	end loop;
	close c04;
elsif (ie_tipo_registro_p	= 5) then 
 
		if ( dt_inicial_p >= to_date('01/07/2016')) then 
			open c05;
			loop 
			fetch c05 into 
				cd_sinistro_w, 
				cd_matricula_principal_2_w, 
				cd_matricula_secundaria_2_w, 
				dt_ocorrencia_w, 
				dt_aviso_w, 
				nr_documento_w, 
				ie_origem_proced_w, 
				cd_procedimento_material_w, 
				nr_seq_conta_w, 
				nr_seq_clinica_w, 
				dt_alta_w, 
				dt_entrada_w, 
				vl_despesa_w, 
				nr_seq_conta_proc_w, 
				cd_prestador_sinistro_w, 
				nr_seq_protocolo_w, 
				ie_material_procedimento_w, 
				ie_tipo_despesa_w, 
				vl_coparticipacao_w, 
				ie_tipo_segurado_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				begin 
					/*De acordo com o relatório CPLS1819, não entram os beneficiário com tipo segurado = 'P' Usuário de Perícia médica */
 
					if (ie_tipo_segurado_w <> 'P') then 
						i_w	:= i_w + 1;
						i_ww	:= i_ww + 1;
						 
						if (cd_matricula_principal_2_w IS NOT NULL AND cd_matricula_principal_2_w::text <> '') then 
							select	ie_seq_titular 
							into STRICT	ie_seq_titular_w 
							from (	SELECT	row_number() OVER () + 1 ie_seq_titular, 
									nr_sequencia	nr_seq_segurado 
								from	pls_segurado 
								where	nr_seq_titular	= cd_matricula_principal_2_w) alias1 
							where	nr_seq_segurado	= cd_matricula_secundaria_2_w;
						else 
							ie_seq_titular_w	:= 1;
							cd_matricula_principal_2_w	:= cd_matricula_secundaria_2_w;
						end if;
						 
						ie_seq_titular_w	:= lpad(ie_seq_titular_w,3,'0');
						if (nr_seq_clinica_w IS NOT NULL AND nr_seq_clinica_w::text <> '') then 
							ie_internado_w	:= pls_obter_se_internado(nr_seq_conta_w,'C');
							 
							if (ie_internado_w = 'S') then 
								select	CASE WHEN x.cd_tiss='1' THEN '3' WHEN x.cd_tiss='2' THEN '2' WHEN x.cd_tiss='3' THEN '4' WHEN x.cd_tiss='5' THEN '7' END  
								into STRICT	cd_classif_sinistro_w 
								from	pls_clinica	x 
								where	x.nr_sequencia	= nr_seq_clinica_w;
								 
								nr_diarias_w	:= (trunc(dt_alta_w)-trunc(dt_entrada_w));
							else 
								cd_classif_sinistro_w	:= '1';
								nr_diarias_w		:= 0;
							end if;
						else 
							cd_classif_sinistro_w	:= '1';
							nr_diarias_w		:= 0;
						end if;
						 
						select	max(d.dt_liquidacao) 
						into STRICT	dt_pagamento_ww 
						from	pls_protocolo_conta	a, 
							pls_lote_protocolo	b, 
							pls_lote_protocolo_venc	c, 
							titulo_pagar		d 
						where	a.nr_seq_lote	= b.nr_sequencia 
						and	b.nr_sequencia	= c.nr_seq_lote 
						and	c.nr_titulo	= d.nr_titulo 
						and	a.nr_sequencia	= nr_seq_protocolo_w;
						 
						if (dt_pagamento_ww IS NOT NULL AND dt_pagamento_ww::text <> '') then 
							dt_pagamento_w	:= to_char(dt_pagamento_ww,'yyyymmdd');
						end if;
						 
						nr_documento_w		:= replace(nr_documento_w,chr(39),'');
						nr_documento_w		:= somente_numero_char(nr_documento_w);
						 
						if (ie_material_procedimento_w = 'P') then 
							if (ie_tipo_despesa_w = 1) then 
								if (ie_origem_proced_w	= 1) then 
									nm_tabela_w	:= 'AMB';
								elsif (ie_origem_proced_w	= 2) then 
									nm_tabela_w	:= 'SUS-AIH';
								elsif (ie_origem_proced_w	= 3) then 
									nm_tabela_w	:= 'SUS-BPA';
								elsif (ie_origem_proced_w	= 4) then 
									nm_tabela_w	:= 'PROPRIO';
								elsif (ie_origem_proced_w	= 5) then 
									nm_tabela_w	:= 'PROPRIO';
								elsif (ie_origem_proced_w	= 6) then 
									nm_tabela_w	:= 'CBHPM';
								elsif (ie_origem_proced_w	= 7) then 
									nm_tabela_w	:= 'SUS_2008';
								elsif (ie_origem_proced_w	= 8) then 
									nm_tabela_w	:= 'TUSS';
								end if;
							else 
								if (ie_tipo_despesa_w	= 2) then 
									nm_tabela_w	:= 'TAXA';
								elsif (ie_tipo_despesa_w	= 3) then 
									nm_tabela_w	:= 'DIARIA';
								elsif (ie_tipo_despesa_w	= 4) then 
									nm_tabela_w	:= 'PACOTE';
								end if;
							end if;
						elsif (ie_material_procedimento_w = 'M') then 
							if (ie_tipo_despesa_w	= 1) then 
								nm_tabela_w	:= 'GASES';
							elsif (ie_tipo_despesa_w	= 2) then 
								nm_tabela_w	:= 'MED';
							elsif (ie_tipo_despesa_w	= 3) then 
								nm_tabela_w	:= 'MAT';
							elsif (ie_tipo_despesa_w	= 7) then 
								nm_tabela_w	:= 'OPM';
							end if;
						end if;
						 
						insert into pls_atuarial(	nr_sequencia, dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
								ie_tipo_registro,cd_sinistro,cd_matricula_principal_2,cd_matricula_secundaria_2, 
								dt_ocorrencia,dt_aviso,dt_pagamento,ie_tipo_evento,nr_documento, 
								cd_classif_sinistro,nr_diarias,nr_diarias_uti,nm_tabela,vl_despesa, 
								vl_coparticipacao,vl_franquia,ie_tipo_despesa,cd_prestador_sinistro,ie_carencia,cd_estabelecimento, 
								cd_procedimento) 
						values (	nextval('pls_atuarial_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
								ie_tipo_registro_p,cd_sinistro_w,cd_matricula_principal_2_w,ie_seq_titular_w, 
								dt_ocorrencia_w,dt_aviso_w,dt_pagamento_w,0,nr_documento_w, 
								cd_classif_sinistro_w,nr_diarias_w,0,nm_tabela_w,vl_despesa_w, 
								vl_coparticipacao_w,0,0,cd_prestador_sinistro_w,0,cd_estabelecimento_p, 
								cd_procedimento_material_w);
						 
						if (i_w = 500) then 
							commit;
							i_w	:= 0;
						end if;
					end if;
				end;
			end loop;
			close c05;
		else 
			open c06;
			loop 
			fetch c06 into 
				cd_sinistro_w, 
				cd_matricula_principal_2_w, 
				cd_matricula_secundaria_2_w, 
				dt_ocorrencia_w, 
				dt_aviso_w, 
				nr_documento_w, 
				ie_origem_proced_w, 
				cd_procedimento_material_w, 
				nr_seq_conta_w, 
				nr_seq_clinica_w, 
				dt_alta_w, 
				dt_entrada_w, 
				vl_despesa_w, 
				nr_seq_conta_proc_w, 
				cd_prestador_sinistro_w, 
				nr_seq_protocolo_w, 
				ie_material_procedimento_w, 
				ie_tipo_despesa_w, 
				vl_coparticipacao_w, 
				ie_tipo_segurado_w;
			EXIT WHEN NOT FOUND; /* apply on c06 */
				begin 
					/*De acordo com o relatório CPLS1819, não entram os beneficiário com tipo segurado = 'P' Usuário de Perícia médica */
 
					if (ie_tipo_segurado_w <> 'P') then 
						i_w	:= i_w + 1;
						i_ww	:= i_ww + 1;
						 
						if (cd_matricula_principal_2_w IS NOT NULL AND cd_matricula_principal_2_w::text <> '') then 
							select	ie_seq_titular 
							into STRICT	ie_seq_titular_w 
							from (	SELECT	row_number() OVER () + 1 ie_seq_titular, 
									nr_sequencia	nr_seq_segurado 
								from	pls_segurado 
								where	nr_seq_titular	= cd_matricula_principal_2_w) alias1 
							where	nr_seq_segurado	= cd_matricula_secundaria_2_w;
						else 
							ie_seq_titular_w	:= 1;
							cd_matricula_principal_2_w	:= cd_matricula_secundaria_2_w;
						end if;
						 
						ie_seq_titular_w	:= lpad(ie_seq_titular_w,3,'0');
						if (nr_seq_clinica_w IS NOT NULL AND nr_seq_clinica_w::text <> '') then 
							ie_internado_w	:= pls_obter_se_internado(nr_seq_conta_w,'C');
							 
							if (ie_internado_w = 'S') then 
								select	CASE WHEN x.cd_tiss='1' THEN '3' WHEN x.cd_tiss='2' THEN '2' WHEN x.cd_tiss='3' THEN '4' WHEN x.cd_tiss='5' THEN '7' END  
								into STRICT	cd_classif_sinistro_w 
								from	pls_clinica	x 
								where	x.nr_sequencia	= nr_seq_clinica_w;
								 
								nr_diarias_w	:= (trunc(dt_alta_w)-trunc(dt_entrada_w));
							else 
								cd_classif_sinistro_w	:= '1';
								nr_diarias_w		:= 0;
							end if;
						else 
							cd_classif_sinistro_w	:= '1';
							nr_diarias_w		:= 0;
						end if;
						 
						select	max(d.dt_liquidacao) 
						into STRICT	dt_pagamento_ww 
						from	pls_protocolo_conta	a, 
							pls_lote_protocolo	b, 
							pls_lote_protocolo_venc	c, 
							titulo_pagar		d 
						where	a.nr_seq_lote	= b.nr_sequencia 
						and	b.nr_sequencia	= c.nr_seq_lote 
						and	c.nr_titulo	= d.nr_titulo 
						and	a.nr_sequencia	= nr_seq_protocolo_w;
						 
						if (dt_pagamento_ww IS NOT NULL AND dt_pagamento_ww::text <> '') then 
							dt_pagamento_w	:= to_char(dt_pagamento_ww,'yyyymmdd');
						end if;
						 
						nr_documento_w		:= replace(nr_documento_w,chr(39),'');
						nr_documento_w		:= somente_numero_char(nr_documento_w);
						 
						if (ie_material_procedimento_w = 'P') then 
							if (ie_tipo_despesa_w = 1) then 
								if (ie_origem_proced_w	= 1) then 
									nm_tabela_w	:= 'AMB';
								elsif (ie_origem_proced_w	= 2) then 
									nm_tabela_w	:= 'SUS-AIH';
								elsif (ie_origem_proced_w	= 3) then 
									nm_tabela_w	:= 'SUS-BPA';
								elsif (ie_origem_proced_w	= 4) then 
									nm_tabela_w	:= 'PROPRIO';
								elsif (ie_origem_proced_w	= 5) then 
									nm_tabela_w	:= 'PROPRIO';
								elsif (ie_origem_proced_w	= 6) then 
									nm_tabela_w	:= 'CBHPM';
								elsif (ie_origem_proced_w	= 7) then 
									nm_tabela_w	:= 'SUS_2008';
								elsif (ie_origem_proced_w	= 8) then 
									nm_tabela_w	:= 'TUSS';
								end if;
							else 
								if (ie_tipo_despesa_w	= 2) then 
									nm_tabela_w	:= 'TAXA';
								elsif (ie_tipo_despesa_w	= 3) then 
									nm_tabela_w	:= 'DIARIA';
								elsif (ie_tipo_despesa_w	= 4) then 
									nm_tabela_w	:= 'PACOTE';
								end if;
							end if;
						elsif (ie_material_procedimento_w = 'M') then 
							if (ie_tipo_despesa_w	= 1) then 
								nm_tabela_w	:= 'GASES';
							elsif (ie_tipo_despesa_w	= 2) then 
								nm_tabela_w	:= 'MED';
							elsif (ie_tipo_despesa_w	= 3) then 
								nm_tabela_w	:= 'MAT';
							elsif (ie_tipo_despesa_w	= 7) then 
								nm_tabela_w	:= 'OPM';
							end if;
						end if;
						 
						insert into pls_atuarial(	nr_sequencia, dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
								ie_tipo_registro,cd_sinistro,cd_matricula_principal_2,cd_matricula_secundaria_2, 
								dt_ocorrencia,dt_aviso,dt_pagamento,ie_tipo_evento,nr_documento, 
								cd_classif_sinistro,nr_diarias,nr_diarias_uti,nm_tabela,vl_despesa, 
								vl_coparticipacao,vl_franquia,ie_tipo_despesa,cd_prestador_sinistro,ie_carencia,cd_estabelecimento, 
								cd_procedimento) 
						values (	nextval('pls_atuarial_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
								ie_tipo_registro_p,cd_sinistro_w,cd_matricula_principal_2_w,ie_seq_titular_w, 
								dt_ocorrencia_w,dt_aviso_w,dt_pagamento_w,0,nr_documento_w, 
								cd_classif_sinistro_w,nr_diarias_w,0,nm_tabela_w,vl_despesa_w, 
								vl_coparticipacao_w,0,0,cd_prestador_sinistro_w,0,cd_estabelecimento_p, 
								cd_procedimento_material_w);
						 
						if (i_w = 500) then 
							commit;
							i_w	:= 0;
						end if;
					end if;
				end;
			end loop;
			close c06;
		end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_dados_autoriais ( dt_inicial_p timestamp, dt_final_p timestamp, ie_tipo_registro_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

