-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ratear_baixa_tit_pagar_nc (nr_titulo_p bigint, nr_seq_baixa_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*	NÃO DAR COMMIT NESTA PROCEDURE */

nr_seq_bordero_nc_w		bigint;
nr_seq_nota_credito_w		bigint;
vl_baixa_w			double precision	:= 0;
vl_total_w			double precision	:= 0;
vl_nota_credito_w		double precision	:= 0;
vl_baixa_nc_w			double precision	:= 0;
vl_total_baixa_w		double precision	:= 0;
nr_seq_nc_baixa_w		bigint;
/* Projeto Multimoeda - Variáveis */

vl_nota_cred_estrang_w		double precision;
vl_baixa_estrang_w		double precision;
vl_complemento_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
cd_moeda_w			integer;
vl_baixa_nc_estrang_w		double precision;
vl_total_baixa_estrang_w	double precision	:= 0;

/* notas de crédito do borderô, ordernadas para adicionar a sobra na NC com maior valor */

c01 CURSOR FOR
SELECT	a.nr_seq_nota_credito,
	coalesce(a.vl_nota_credito,0)
from	bordero_nc_nota_credito a
where	a.nr_seq_bordero	= nr_seq_bordero_nc_w
order by	2;


BEGIN

select	max(a.nr_seq_bordero_nc),
	max(a.nr_seq_nota_credito)
into STRICT	nr_seq_bordero_nc_w,
	nr_seq_nota_credito_w
from	titulo_pagar a
where	a.nr_titulo	= nr_titulo_p;

select	coalesce(max(a.vl_baixa),0)
into STRICT	vl_baixa_w
from	titulo_pagar_baixa a
where	a.nr_titulo	= nr_titulo_p
and	a.nr_sequencia	= nr_seq_baixa_p;

/* se for borderô, rateia o valor da baixa para as notas de crédito */

if (nr_seq_bordero_nc_w IS NOT NULL AND nr_seq_bordero_nc_w::text <> '') then

	select	coalesce(sum(a.vl_nota_credito),0)
	into STRICT	vl_total_w
	from	bordero_nc_nota_credito a
	where	a.nr_seq_bordero	= nr_seq_bordero_nc_w;

	open C01;
	loop
	fetch C01 into
		nr_seq_nota_credito_w,
		vl_nota_credito_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		/* Projeto Multimoeda - Busca os dados da nota de crédito para verificar se é moeda estrangeira, caso positivo calcula os valores para gravar na baixa. */

		select	max(vl_nota_cred_estrang),
			max(vl_cotacao),
			max(cd_moeda)
		into STRICT	vl_nota_cred_estrang_w,
			vl_cotacao_w,
			cd_moeda_w
		from	nota_credito
		where	nr_sequencia = nr_seq_nota_credito_w;

		vl_baixa_nc_w		:= (coalesce(vl_baixa_w,0) * coalesce(vl_nota_credito_w,0) / coalesce(vl_total_w,0));
		vl_total_baixa_w	:= coalesce(vl_total_baixa_w,0) + coalesce(vl_baixa_nc_w,0);

		select	nextval('nota_credito_baixa_seq')
		into STRICT	nr_seq_nc_baixa_w
		;

		/* Projeto Multimoeda - Calcula os valores quando moeda estrangeira. */

		if (coalesce(vl_nota_cred_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
			vl_baixa_nc_estrang_w := vl_baixa_nc_w / vl_cotacao_w;
			vl_complemento_w := vl_baixa_nc_w - vl_baixa_nc_estrang_w;
			vl_total_baixa_estrang_w := vl_total_baixa_estrang_w + vl_baixa_nc_estrang_w;
		else
			vl_baixa_nc_estrang_w := null;
			vl_complemento_w := null;
			vl_cotacao_w := null;
			cd_moeda_w := null;
		end if;

		insert	into nota_credito_baixa(dt_atualizacao,
			dt_baixa,
			nm_usuario,
			nr_seq_nota_credito,
			nr_seq_tit_pagar_baixa,
			nr_sequencia,
			nr_tit_pagar,
			vl_baixa,
			vl_baixa_estrang,
			vl_complemento,
			vl_cotacao,
			cd_moeda)
		values (clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_nota_credito_w,
			nr_seq_baixa_p,
			nr_seq_nc_baixa_w,
			nr_titulo_p,
			vl_baixa_nc_w,
			vl_baixa_nc_estrang_w,
			vl_complemento_w,
			vl_cotacao_w,
			cd_moeda_w);

		CALL atualizar_saldo_nota_credito(nr_seq_nota_credito_w,nm_usuario_p);

	end loop;
	close c01;

	/* adicionar a sobra do arredondamento à última baixa gerada */

	update	nota_credito_baixa
	set	vl_baixa	= coalesce(vl_baixa,0) + (coalesce(vl_baixa_w,0) - coalesce(vl_total_baixa_w,0)),
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_nc_baixa_w;

	/* Projeto Multimoeda - atualiza diferença de arredondamento em moeda estrangeira.*/

	if (coalesce(vl_total_baixa_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
		update	nota_credito_baixa
		set	vl_baixa_estrang = vl_baixa_estrang + ((coalesce(vl_baixa_w,0) / vl_cotacao_w) - vl_total_baixa_estrang_w),
			vl_complemento	= vl_baixa - (vl_baixa_estrang + ((coalesce(vl_baixa_w,0) / vl_cotacao_w) - vl_total_baixa_estrang_w))
		where	nr_sequencia	= nr_seq_nc_baixa_w;
	end if;

	CALL atualizar_saldo_nota_credito(nr_seq_nota_credito_w,nm_usuario_p);

/* senão, gera uma baixa de mesmo valor na nota de crédito */

elsif (nr_seq_nota_credito_w IS NOT NULL AND nr_seq_nota_credito_w::text <> '') then

	/* Projeto Multimoeda - Busca os dados da nota de crédito e verifica se é moeda estrangeira para gravar a baixa */

	select	max(vl_nota_cred_estrang),
		max(vl_cotacao),
		max(cd_moeda)
	into STRICT	vl_nota_cred_estrang_w,
		vl_cotacao_w,
		cd_moeda_w
	from	nota_credito
	where	nr_sequencia = nr_seq_nota_credito_w;
	if (coalesce(vl_nota_cred_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
		vl_baixa_estrang_w := vl_baixa_w / vl_cotacao_w;
		vl_complemento_w := vl_baixa_w - vl_baixa_estrang_w;
	else
		vl_baixa_estrang_w := null;
		vl_complemento_w := null;
		vl_cotacao_w := null;
		cd_moeda_w := null;
	end if;

	insert	into nota_credito_baixa(dt_atualizacao,
		dt_baixa,
		nm_usuario,
		nr_seq_nota_credito,
		nr_seq_tit_pagar_baixa,
		nr_sequencia,
		nr_tit_pagar,
		vl_baixa,
		vl_baixa_estrang,
		vl_complemento,
		vl_cotacao,
		cd_moeda)
	values (clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_nota_credito_w,
		nr_seq_baixa_p,
		nextval('nota_credito_baixa_seq'),
		nr_titulo_p,
		vl_baixa_w,
		vl_baixa_estrang_w,
		vl_complemento_w,
		vl_cotacao_w,
		cd_moeda_w);

	CALL atualizar_saldo_nota_credito(nr_seq_nota_credito_w,nm_usuario_p);

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ratear_baixa_tit_pagar_nc (nr_titulo_p bigint, nr_seq_baixa_p bigint, nm_usuario_p text) FROM PUBLIC;

