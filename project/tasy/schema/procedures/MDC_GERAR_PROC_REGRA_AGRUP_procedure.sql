-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mdc_gerar_proc_regra_agrup (nr_seq_episodio_p bigint, nm_usuario_p text) AS $body$
DECLARE

	
nr_sequencia_pac_medico_w	bigint;
qt_item_w			bigint;
ie_proc_faturado_w		varchar(1);
qt_departamento_w		bigint;
cd_setor_atendimento_w		atend_paciente_unidade.cd_setor_atendimento%type;
cd_departamento_w		atend_paciente_unidade.cd_departamento%type;
nr_seq_atepacu_w		atend_paciente_unidade.nr_seq_interno%type;
nr_max_atendimento_w		atendimento_paciente.nr_atendimento%type;	
	
c01 CURSOR FOR
SELECT	*
from	mdc_procedimento_agrup a
where	a.nr_seq_episodio		= nr_seq_episodio_p
and	coalesce(a.nr_seq_proc_pac_medico::text, '') = ''
and	a.nm_usuario			= nm_usuario_p
and	not exists  --Verifica se o que será gerado não é o mesmo do que já existe.
	(SELECT	1
	from	procedimento_pac_medico x
	where	x.nr_seq_episodio		= a.nr_seq_episodio
	and	x.cd_procedimento		= a.cd_procedimento
	and	x.ie_origem_proced		= a.ie_origem_proced
	and	coalesce(x.dt_inativacao::text, '') = '');

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_seq_propaci
from	procedimento_pac_medico a
where	a.nr_seq_episodio	= nr_seq_episodio_p
and	coalesce(a.dt_inativacao::text, '') = ''
and	exists (SELECT	1
	from	mdc_procedimento_agrup x
	where	x.nr_seq_proc_pac_medico	= a.nr_sequencia);
	
c02_w	c02%rowtype;
	

BEGIN

select	count(1)
into STRICT	qt_item_w
from	mdc_procedimento_agrup a
where	a.nr_seq_episodio		= nr_seq_episodio_p
and	coalesce(a.nr_seq_proc_pac_medico::text, '') = ''
and	a.nm_usuario			= nm_usuario_p;

if (qt_item_w > 0) then

	--Inativa os procedimentos já gerados pelo processo de Collective grouping
	open C02;
	loop
	fetch C02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */

		begin	
		select	'S'
		into STRICT	ie_proc_faturado_w
		from	procedimento_paciente a,
			conta_paciente b
		where	a.nr_sequencia		= c02_w.nr_seq_propaci
		and	a.nr_interno_conta	= b.nr_interno_conta
		and	b.ie_status_acerto	= 2 --Definitivo
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''  LIMIT 1;	
		exception
		when others then
			ie_proc_faturado_w := 'N';
		end;
		
		if (ie_proc_faturado_w = 'N') then	
			CALL INATIVAR_INFORMACAO('PROCEDIMENTO_PAC_MEDICO', 'NR_SEQUENCIA' , c02_w.nr_sequencia ,obter_desc_expressao(936818) , nm_usuario_p);	
		end if;	

	end loop;
	close C02;

	open C01;
	loop
	fetch C01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */	

		select	nextval('procedimento_pac_medico_seq')
		into STRICT	nr_sequencia_pac_medico_w
		;

		select	max(nr_atendimento)
		into STRICT	nr_max_atendimento_w
		from	atendimento_paciente
		where	nr_seq_episodio	= nr_seq_episodio_p
		and	coalesce(dt_cancelamento::text, '') = '';

		select	Obter_Atepacu_paciente(nr_max_atendimento_w,'A')
		into STRICT	nr_seq_atepacu_w
		;

		select	cd_setor_atendimento,
                cd_departamento
		into STRICT	cd_setor_atendimento_w,
                cd_departamento_w
		from	atend_paciente_unidade
		where	nr_seq_interno	= nr_seq_atepacu_w
		and	nr_atendimento	= nr_max_atendimento_w;

        select  count(*)
        into STRICT    qt_departamento_w
        from    departamento_medico
        where   cd_departamento = cd_departamento_w;

        if (qt_departamento_w = 0)then
            cd_departamento_w := null;
        end if;

		insert into procedimento_pac_medico(
			nr_sequencia,
			cd_departamento,
			cd_setor_atendimento,
			cd_procedimento,
			dt_atualizacao,
			dt_atualizacao_nrec,
			dt_inativacao,
			dt_liberacao,
			dt_procedimento,
			ie_origem_proced,
			ie_proc_princ,
			ie_situacao,
			nm_usuario,
			nm_usuario_inativacao,
			nm_usuario_nrec,
			nr_atendimento,
			nr_seq_episodio,
			nr_seq_proc_interno,
			qt_procedimento)
		values (nr_sequencia_pac_medico_w,
			cd_departamento_w,
			cd_setor_atendimento_w,
			c01_w.cd_procedimento,
			clock_timestamp(),
			clock_timestamp(),
			null,
			null,
			clock_timestamp(),
			c01_w.ie_origem_proced,
			'N',
			'A',
			nm_usuario_p,
			null,
			nm_usuario_p,
			nr_max_atendimento_w,
			nr_seq_episodio_p,
			null,
			1);	

		CALL LIBERAR_PROC_PAC_MEDIC(nr_sequencia_pac_medico_w,nm_usuario_p);
		
		update	mdc_procedimento_agrup
		set	nr_seq_proc_pac_medico	= nr_sequencia_pac_medico_w
		where	nr_sequencia		= c01_w.nr_sequencia;

	end loop;
	close C01;

	commit;	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mdc_gerar_proc_regra_agrup (nr_seq_episodio_p bigint, nm_usuario_p text) FROM PUBLIC;

