-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_transferir_conta_pac_aih ( nr_interno_origem_p bigint, nr_interno_destino_p bigint, nr_atend_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
dt_acerto_conta_w			timestamp;
cd_convenio_parametro_w		integer;
cd_categoria_parametro_w		varchar(100);
ie_guia_transf_conta_w		varchar(10);
ie_guia_transf_conta_ww		varchar(1);
cd_estabelecimento_w		bigint;
ie_proc_mat_w			smallint;
nr_seq_protocolo_w		bigint;
ie_status_acerto_w			smallint;
cd_responsavel_w			varchar(10);
ie_ajustar_periodo_conta_w		varchar(1);
dt_max_conta_w			timestamp;
dt_min_conta_w			timestamp;
qt_fora_periodo_w			bigint;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w			timestamp;
cd_setor_atendimento_w		integer;
dt_entrada_unidade_w		timestamp;
ie_transfere_materiais_w		varchar(15) := 'S';
cd_estab_usuario_w		integer;
ie_tipo_atendimento_w		smallint;

ds_texto_w			varchar(255);

c01 CURSOR FOR 
	SELECT	a.cd_setor_atendimento, 
		a.dt_entrada_unidade 
	from	atend_paciente_unidade a, 
		conta_paciente b 
	where	b.nr_atendimento = a.nr_atendimento 
	and	not exists (	SELECT	1 
				from	atend_paciente_unidade x 
				where	x.cd_setor_atendimento	= a.cd_setor_atendimento 
				and	trunc(x.dt_entrada_unidade,'dd') = trunc(a.dt_entrada_unidade,'dd') 
				and	x.dt_entrada_unidade 	<= a.dt_entrada_unidade 
				and	x.nr_atendimento	= nr_atend_destino_p) 
	and	b.nr_interno_conta = nr_interno_origem_p;


BEGIN 
 
select 	max(nr_seq_protocolo), 
	max(ie_status_acerto), 
	max(cd_responsavel) 
into STRICT	nr_seq_protocolo_w, 
	ie_status_acerto_w, 
	cd_responsavel_w 
from 	conta_paciente 
where 	nr_interno_conta = nr_interno_origem_p;
 
if (coalesce(nr_seq_protocolo_w,0) > 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(186121,'NR_INTERNO_CONTA='||nr_interno_destino_p);
	/* Não é possível transferir itens da conta #@NR_INTERNO_CONTA_P#@, pois ela está em protocolo! */
 
end if;
 
begin 
select	a.cd_convenio_parametro, 
	a.cd_categoria_parametro, 
	a.dt_acerto_conta, 
	a.cd_estabelecimento, 
	a.dt_periodo_inicial, 
	a.dt_periodo_final, 
	b.ie_tipo_atendimento 
into STRICT	cd_convenio_parametro_w, 
	cd_categoria_parametro_w, 
	dt_acerto_conta_w, 
	cd_estabelecimento_w, 
	dt_periodo_inicial_w, 
	dt_periodo_final_w, 
	ie_tipo_atendimento_w 
from	conta_paciente a, 
	atendimento_paciente b 
where	a.nr_interno_conta = nr_interno_destino_p 
and	a.nr_atendimento = b.nr_atendimento;
exception 
when others then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(186123,'NR_INTERNO_CONTA='||nr_interno_destino_p);
	/* Não foi possível obter as informações da conta de destino. Conta n°: #@NR_INTERNO_CONTA_P#@. */
 
end;
 
select	coalesce(max(ie_guia_transf_conta),'N'), 
	coalesce(max(ie_ajustar_periodo_conta),'N') 
into STRICT	ie_guia_transf_conta_w, 
	ie_ajustar_periodo_conta_w 
from	convenio_estabelecimento 
where	cd_convenio		= cd_convenio_parametro_w 
and	cd_estabelecimento	= cd_estabelecimento_w;
 
select	coalesce(max(ie_guia_transf_conta),'R') 
into STRICT	ie_guia_transf_conta_ww 
from	parametro_faturamento 
where	cd_estabelecimento = cd_estabelecimento_w;
 
open c01;
loop 
fetch c01 into 
	cd_setor_atendimento_w, 
	dt_entrada_unidade_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	CALL gerar_passagem_setor_atend(nr_atend_destino_p,cd_setor_atendimento_w,dt_entrada_unidade_w,'N',nm_usuario_p);
	end;
end loop;
close c01;
 
begin 
cd_estab_usuario_w := wheb_usuario_pck.get_cd_estabelecimento;
exception 
when others then 
	cd_estab_usuario_w := cd_estabelecimento_w;
end;
 
ie_transfere_materiais_w := coalesce(obter_valor_param_usuario(1123,178,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'S');
 
if (coalesce(ie_transfere_materiais_w,'S') = 'S') then 
	begin 
		 
	update	material_atend_paciente 
	set	nr_interno_conta 	= nr_interno_destino_p, 
		cd_convenio 		= cd_convenio_parametro_w, 
		cd_categoria		= cd_categoria_parametro_w, 
		dt_acerto_conta		= dt_acerto_conta_w, 
		cd_motivo_exc_conta	 = NULL, 
		ds_compl_motivo_excon	 = NULL, 
		ds_observacao		= substr(ds_observacao ||wheb_mensagem_pck.get_texto(299757,'NR_ATENDIMENTO_P='||nr_atendimento||';NR_INTERNO_CONTA_P='|| nr_interno_origem_p),1,255), --Atend origem: #@NR_ATENDIMENTO_P#@ Conta Origem: #@NR_INTERNO_CONTA_P#@ 
		nm_usuario 		= nm_usuario_p, 
		dt_atualizacao 		= clock_timestamp(), 
		nr_atendimento 		= nr_atend_destino_p 
	where	nr_interno_conta = nr_interno_origem_p;
	end;
end if;
 
update	procedimento_paciente 
set	nr_interno_conta	= nr_interno_destino_p, 
	cd_convenio		= cd_convenio_parametro_w, 
	cd_categoria		= cd_categoria_parametro_w, 
	dt_acerto_conta		= dt_acerto_conta_w, 
	cd_motivo_exc_conta	 = NULL, 
	ds_compl_motivo_excon	 = NULL, 
	ds_observacao		= substr(ds_observacao ||wheb_mensagem_pck.get_texto(299757,'NR_ATENDIMENTO_P='||nr_atendimento||';NR_INTERNO_CONTA_P='|| nr_interno_origem_p),1,255),--Atend origem: #@NR_ATENDIMENTO_P#@ Conta Origem: #@NR_INTERNO_CONTA_P#@ 
	nm_usuario		= nm_usuario_p, 
	dt_atualizacao		= clock_timestamp(), 
	nr_atendimento		= nr_atend_destino_p 
where	nr_interno_conta = nr_interno_origem_p;
 
if (ie_tipo_atendimento_w = 1) then 
	begin 
	 
	ds_texto_w := wheb_mensagem_pck.get_texto(299761);--AIH retorno 72 horas 
	
	update	conta_paciente 
	set	nm_usuario 	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp(), 
		cd_responsavel	= CASE WHEN cd_responsavel = NULL THEN  coalesce(cd_responsavel_w, cd_responsavel)  ELSE cd_responsavel END , 
		ds_observacao	= substr(ds_observacao||ds_texto_w,1,255) 
	where	nr_interno_conta = nr_interno_destino_p;
	 
	end;
else	 
	begin 
	 
	ds_texto_w := wheb_mensagem_pck.get_texto(299763);--BPA retorno 72 horas 
	
	update	conta_paciente 
	set	nm_usuario 	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp(), 
		cd_responsavel	= CASE WHEN cd_responsavel = NULL THEN  coalesce(cd_responsavel_w, cd_responsavel)  ELSE cd_responsavel END , 
		ds_observacao	= substr(ds_observacao||ds_texto_w,1,255) 
	where	nr_interno_conta = nr_interno_destino_p;
	 
	end;
end if;
 
update	conta_paciente_etapa 
set	nr_interno_conta	= nr_interno_destino_p, 
	nm_usuario		= nm_usuario_p, 
	dt_atualizacao		= clock_timestamp(), 
	nr_seq_conta_origem	= nr_interno_origem_p 
where	nr_interno_conta	= nr_interno_origem_p;
 
if (coalesce(ie_ajustar_periodo_conta_w,'N') = 'S') then 
	select 	count(*) 
	into STRICT	qt_fora_periodo_w 
	from 	conta_paciente_v a 
	where 	a.nr_interno_conta = nr_interno_destino_p 
	and 	not(coalesce(a.dt_conta,a.dt_item) between dt_periodo_inicial_w and dt_periodo_final_w);
 
	if (qt_fora_periodo_w > 0) then 
		select 	max(dt_conta), 
			min(dt_conta) 
		into STRICT	dt_max_conta_w, 
			dt_min_conta_w 
		from 	conta_paciente_v 
		where 	nr_interno_conta = nr_interno_destino_p;
 
		update	conta_paciente 
		set	dt_periodo_inicial 	= dt_min_conta_w, 
			dt_periodo_final	= dt_max_conta_w, 
			nm_usuario		= nm_usuario_p, 
			dt_atualizacao		= clock_timestamp() 
		where 	nr_interno_conta	= nr_interno_destino_p;
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_transferir_conta_pac_aih ( nr_interno_origem_p bigint, nr_interno_destino_p bigint, nr_atend_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

