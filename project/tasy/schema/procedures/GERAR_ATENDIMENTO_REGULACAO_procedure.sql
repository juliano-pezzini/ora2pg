-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_atendimento_regulacao ( nr_seq_eme_regulacao_p bigint, cd_pessoa_fisica_p bigint, cd_estabelecimento_p bigint, cd_usuario_conv_p text, cd_medico_regulador_p text, nr_seq_tipo_servico_p bigint, nr_seq_unidade_p bigint, nm_usuario_p text, nr_atendimento_novo_w INOUT text, cd_medico_intervencionista_p text default null) AS $body$
DECLARE


nr_seq_regra_w			bigint;
nr_qtd_regra_w			bigint;
ie_tipo_atendimento_w	varchar(10);
cd_procedencia_w		bigint;
ie_tipo_convenio_w		varchar(10);
cd_convenio_w			bigint;
cd_tipo_acomod_w		bigint;
cd_categoria_w			bigint;
cd_setor_atend_w		bigint;
cd_tipo_acomo_unid_w	bigint;
cd_unid_basica_w		varchar(10);
cd_unid_compl_w			varchar(10);
nr_atendimento_w		bigint;
nr_seq_atepaco_w		bigint;
nr_seq_atepacu_w		bigint;
dt_entrada_w			timestamp;
cd_medico_solic_w		varchar(10);
dt_validade_cart_w		timestamp;
nr_seq_regra_setor_w	bigint;
ie_clinica_w			varchar(10);
ds_erro_w				varchar(255);
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
dt_validade_carteira_w	atend_categoria_convenio.dt_validade_carteira%type;
cd_empresa_w			atend_categoria_convenio.cd_empresa%type;
cd_plano_convenio_w		atend_categoria_convenio.cd_plano_convenio%type;
nr_seq_tipo_acidente_w	tipo_acidente.nr_sequencia%type;
ie_tipo_atend_tiss_w	varchar(2);
ie_carater_inter_sus_w	sus_carater_internacao.cd_carater_internacao%type;
ie_tipo_guia_w			varchar(2);
ie_carat_inter_regra_w	varchar(1);
ie_qt_carat_inter_regra_w	varchar(1);
ie_carater_int_invalido_w	sus_carater_internacao.cd_carater_internacao%type;


BEGIN

if (coalesce(nr_seq_tipo_servico_p,0) = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(264202);
elsif (coalesce(nr_seq_unidade_p,0) = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(264201);
elsif (coalesce(cd_pessoa_fisica_p,'0') = '0') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(264199);
end if;

select 	count(*)
into STRICT	nr_qtd_regra_w
from	eme_regra_gerar_atend_reg;

select	max(nr_seq_segurado),
		max(dt_validade_carteira)
into STRICT	nr_seq_segurado_w,
		dt_validade_carteira_w
from	eme_regulacao
where	nr_sequencia = nr_seq_eme_regulacao_p;

if (nr_qtd_regra_w > 0) then

	select	max(nr_sequencia),
			max(ie_tipo_atendimento),
			max(cd_procedencia),
			max(ie_tipo_convenio),
			max(ie_clinica),
			max(nr_seq_tipo_acidente),
			max(ie_clinica),
			max(ie_tipo_atend_tiss),
			max(ie_carater_inter_sus),
			max(ie_tipo_guia)
	into STRICT	nr_seq_regra_w,
			ie_tipo_atendimento_w,
			cd_procedencia_w,
			ie_tipo_convenio_w,
			ie_clinica_w,
			nr_seq_tipo_acidente_w,
			ie_clinica_w,
			ie_tipo_atend_tiss_w,
			ie_carater_inter_sus_w,
			ie_tipo_guia_w
	from	eme_regra_gerar_atend_reg;

	-- verifica novo atendimento parametro 16 eup
	ds_erro_w := consiste_gerar_novo_atend(cd_pessoa_fisica_p, nm_usuario_p, ie_tipo_atendimento_w, cd_estabelecimento_p, coalesce(cd_medico_regulador_p,cd_medico_intervencionista_p), ie_clinica_w, ds_erro_w, null);

	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
	end if;
	-- verifica novo atendimento parametro 16 eup
	-- seleciona a regra para o convenio
	select 	count(*)
	into STRICT	nr_qtd_regra_w
	from	eme_regra_gerar_atend_conv
	where	nr_seq_tipo_servico = nr_seq_tipo_servico_p
	and	nr_seq_regra_atend = nr_seq_regra_w;

	if (nr_qtd_regra_w > 0) then

		select	max(cd_convenio),
				max(cd_tipo_acomodacao),
				max(cd_categoria)
		into STRICT	cd_convenio_w,
				cd_tipo_acomod_w,
				cd_categoria_w
		from	eme_regra_gerar_atend_conv
		where	nr_seq_tipo_servico = nr_seq_tipo_servico_p
		and		nr_seq_regra_atend = nr_seq_regra_w;

		if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
			/* dados do convênio  segurado*/

			cd_convenio_w		:= obter_dados_seg_entrada_unica(nr_seq_segurado_w,'CV', ie_tipo_atendimento_w);
			cd_categoria_w		:= obter_dados_seg_entrada_unica(nr_seq_segurado_w,'CA', ie_tipo_atendimento_w);
			cd_plano_convenio_w	:= obter_dados_seg_entrada_unica(nr_seq_segurado_w,'PLC', ie_tipo_atendimento_w);
			cd_empresa_w		:= obter_dados_seg_entrada_unica(nr_seq_segurado_w,'ER', ie_tipo_atendimento_w);

			if (coalesce(cd_convenio_w::text, '') = '') or (coalesce(cd_categoria_w::text, '') = '') then
				/*não foi possível obter o convênio e categoria do beneficiário para gerar o atendimento na entrada única de pacientes.
				por favor verifique em ops - cadastro de regras/produtos/ops x convênio (convênio/tasy) e ops - cadastro de regras/produtos/ops x categ*/
				CALL wheb_mensagem_pck.exibir_mensagem_abort(292606);
			end if;
		end if;

		select 	count(*)
		into STRICT	nr_qtd_regra_w
		from	eme_regra_gerar_atend_set
		where	nr_seq_unidade = nr_seq_unidade_p
		and		nr_seq_regra_atend = nr_seq_regra_w;

		if (nr_qtd_regra_w > 0) then
			select 	max(cd_setor_atendimento),
					max(cd_tipo_acomodacao),
					max(cd_unidade_basica),
					max(cd_unidade_compl)
			into STRICT	cd_setor_atend_w,
					cd_tipo_acomo_unid_w,
					cd_unid_basica_w,
					cd_unid_compl_w
			from	eme_regra_gerar_atend_set
			where	nr_seq_unidade = nr_seq_unidade_p
			and	nr_seq_regra_atend = nr_seq_regra_w;

			select 	max(nr_sequencia)
			into STRICT	nr_seq_regra_setor_w
			from	eme_regra_gerar_atend_set
			where	nr_seq_unidade = nr_seq_unidade_p
			and	nr_seq_regra_atend = nr_seq_regra_w
			and	cd_setor_atendimento = cd_setor_atend_w
			and	cd_tipo_acomodacao = cd_tipo_acomo_unid_w
			and	cd_unidade_basica = cd_unid_basica_w
			and	cd_unidade_compl = cd_unid_compl_w;

			select	max(cd_medico_solic),
				max(dt_validade_carteira)
			into STRICT	cd_medico_solic_w,
				dt_validade_cart_w
			from	eme_regulacao
			where	nr_sequencia = nr_seq_eme_regulacao_p;

			select	nextval('atendimento_paciente_seq')
			into STRICT	nr_atendimento_w
			;
			nr_atendimento_novo_w := nr_atendimento_w;

			dt_entrada_w	:=	clock_timestamp();

			/*Valida o ie_carater_inter_sus cadastrado na regra da regulação.*/

			if (ie_carater_inter_sus_w IS NOT NULL AND ie_carater_inter_sus_w::text <> '') then

				ie_carater_int_invalido_w := ie_carater_inter_sus_w;

				select 	coalesce(substr(obter_se_carat_inter_regra(ie_tipo_atendimento_w, ie_carater_inter_sus_w),1,1),'N')
				into STRICT	ie_carat_inter_regra_w
				;

				select	CASE WHEN obter_qt_carat_inter_regra(ie_tipo_atendimento_w)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_qt_carat_inter_regra_w
				;

				select 	max(cd_carater_internacao)
				into STRICT	ie_carater_inter_sus_w
				from 	sus_carater_internacao
				where 	PKG_DATE_UTILS.START_OF(dt_entrada_w,'DD') between dt_inicio_validade and coalesce(dt_fim_validade, PKG_DATE_UTILS.START_OF(dt_entrada_w,'DD'))
				and 	ie_carat_inter_regra_w = ie_qt_carat_inter_regra_w
				AND		cd_carater_internacao = ie_carater_inter_sus_w;

				if (ie_carater_inter_sus_w IS NOT NULL AND ie_carater_inter_sus_w::text <> '') then
					ie_carater_int_invalido_w := null;
				end if;

			end if;

			insert into atendimento_paciente(	nr_atendimento,
								cd_pessoa_fisica,
								cd_estabelecimento,
								cd_procedencia,
								dt_entrada,
								ie_tipo_atendimento,
								dt_atualizacao,
								nm_usuario,
								cd_medico_resp,
								ie_tipo_convenio,
								ie_permite_visita,
								cd_medico_referido,
								nr_seq_tipo_acidente,
								ie_clinica,
								ie_tipo_atend_tiss,
								ie_carater_inter_sus)
						values (	nr_atendimento_w,
								cd_pessoa_fisica_p,
								cd_estabelecimento_p,
								cd_procedencia_w,
								dt_entrada_w,
								ie_tipo_atendimento_w,
								clock_timestamp(),
								nm_usuario_p,
								coalesce(cd_medico_intervencionista_p, cd_medico_regulador_p),
								ie_tipo_convenio_w,
								'S',
								cd_medico_solic_w,
								nr_seq_tipo_acidente_w,
								ie_clinica_w,
								ie_tipo_atend_tiss_w,
								ie_carater_inter_sus_w);

			select	nextval('atend_categoria_convenio_seq')
			into STRICT	nr_seq_atepaco_w
			;

			insert	into atend_categoria_convenio(	nr_seq_interno,
								nr_atendimento,
								cd_convenio,
								cd_categoria,
								dt_inicio_vigencia,
								dt_final_vigencia,
								dt_atualizacao,
								cd_usuario_convenio,
								nm_usuario,
								cd_tipo_acomodacao,
								dt_validade_carteira,
								cd_plano_convenio,
								cd_empresa,
								ie_tipo_guia)
					values (	nr_seq_atepaco_w,
								nr_atendimento_w,
								cd_convenio_w,
								cd_categoria_w,
								dt_entrada_w,
								null,
								clock_timestamp(),
								cd_usuario_conv_p,
								nm_usuario_p,
								cd_tipo_acomod_w,
								dt_validade_cart_w,
								cd_plano_convenio_w,
								cd_empresa_w,
								ie_tipo_guia_w);

			select	nextval('atend_paciente_unidade_seq')
			into STRICT	nr_seq_atepacu_w
			;

			insert into atend_paciente_unidade(	nr_atendimento,
								nr_sequencia,
								cd_setor_atendimento,
								cd_unidade_basica,
								cd_unidade_compl,
								dt_entrada_unidade,
								dt_atualizacao,
								nm_usuario,
								cd_tipo_acomodacao,
								dt_saida_interno,
								nr_seq_interno)
					values (	nr_atendimento_w,
								1,
								cd_setor_atend_w,
								cd_unid_basica_w,
								coalesce(cd_unid_compl_w,' '),
								clock_timestamp(),
								clock_timestamp(),
								nm_usuario_p,
								cd_tipo_acomo_unid_w,
								clock_timestamp(),
								nr_seq_atepacu_w
								);

			commit;

			update 	eme_regulacao
			set 	nr_atendimento = nr_atendimento_w
			where	nr_sequencia = nr_seq_eme_regulacao_p;

			CALL gravar_log_tasy(99880,wheb_mensagem_pck.get_texto(307420)||': '||nr_atendimento_w||', '||
				wheb_mensagem_pck.get_texto(802108)||': '||nr_seq_regra_setor_w||', '||
				wheb_mensagem_pck.get_texto(802109)||': '||nr_seq_unidade_p||', '||
				wheb_mensagem_pck.get_texto(796345)||': '||cd_setor_atend_w||', '||
				wheb_mensagem_pck.get_texto(802110)||': '||nr_qtd_regra_w||', '||
				obter_desc_expressao(284595)||' '||obter_desc_expressao(331053)||': '||ie_carater_int_invalido_w,
				nm_usuario_p);
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(264197);
		end if;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(264195);
	end if;
else
	CALL wheb_mensagem_pck.exibir_mensagem_abort(264192);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_atendimento_regulacao ( nr_seq_eme_regulacao_p bigint, cd_pessoa_fisica_p bigint, cd_estabelecimento_p bigint, cd_usuario_conv_p text, cd_medico_regulador_p text, nr_seq_tipo_servico_p bigint, nr_seq_unidade_p bigint, nm_usuario_p text, nr_atendimento_novo_w INOUT text, cd_medico_intervencionista_p text default null) FROM PUBLIC;

