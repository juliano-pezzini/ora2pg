-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_preco_servico ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_servico_p timestamp, cd_servico_p bigint, cd_setor_atendimento_p bigint, ie_tipo_atendimento_p bigint, cd_tipo_acomodacao_p bigint, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, ie_sexo_p text, vl_servico_p INOUT bigint, nr_seq_ajuste_proc_p INOUT bigint, ie_atend_retorno_p text, qt_dias_internacao_p bigint, qt_idade_p bigint, nr_seq_proc_interno_p bigint, nr_sequencia_p bigint, cd_cgc_prestador_p text, ie_carater_inter_sus_p text, nr_seq_cobertura_p bigint, nr_seq_classif_atend_p bigint, cd_dependencia_p bigint, nr_seq_grupo_rec_p bigint, nr_seq_origem_p bigint, nr_seq_classif_medico_p bigint, cd_medico_p text) AS $body$
DECLARE


cd_moeda_servico_w       		integer  	:= 0;
cd_moeda_padrao_w       		integer  	:= 0;
vl_honorarios_conv_w        		double precision;
vl_custo_oper_conv_w        		double precision;
vl_filme_conv_w            	 	double precision;
vl_servico_w             		double precision;

tx_ajuste_proc_w			double precision 	:= 0;
tx_ajuste_custo_oper_w		double precision 	:= 1;
tx_ajuste_medico_w		double precision 	:= 1;
tx_ajuste_partic_w			double precision 	:= 1;
tx_ajuste_filme_w			double precision 	:= 1;
vl_proc_ajustado_w			double precision 	:= 0;
ie_preco_informado_w		varchar(1);
ie_glosa_w			varchar(1);
cd_procedimento_esp_w		bigint;
nr_seq_regra_preco_w		bigint;
cd_edicao_ajuste_w		integer    	:= 0;
vl_medico_neg_w			double precision 	:= null;
vl_custo_oper_neg_w		double precision 	:= null;
qt_filme_neg_w			double precision 	:= null;
nr_auxiliares_neg_w		smallint	:= null;
qt_porte_anest_neg_w		smallint	:= null;
pr_glosa_w			double precision 	:= 0;
vl_glosa_w			double precision 	:= 0;
cd_motivo_exc_conta_w		bigint;
ie_autor_particular_w		varchar(1);
cd_convenio_glosa_w		integer;
cd_categoria_glosa_w		varchar(10);
nr_seq_ajuste_proc_w		bigint;
ie_video_w			varchar(03)	:= null;
ie_origem_proced_w		bigint;
cd_tabela_servico_ajuste_w		bigint;

vl_ajuste_w			double precision;
cd_moeda_ajuste_w		bigint;
ie_preco_custo_w	  		varchar(01);

vl_custo_w			double precision;
vl_custo_unitario_w			double precision;
vl_custo_variavel_w		double precision;
vl_custo_dir_apoio_w		double precision;
vl_custo_mao_obra_w		double precision;
vl_custo_direto_w			double precision;
vl_custo_indireto_w			double precision;
vl_despesa_w			double precision;
vl_custo_hm_w			double precision;
qt_resumo_w			double precision;
vl_custo_sadt_w			double precision;
cd_tabela_custo_w			bigint;
pr_imposto_w			double precision	:= 0;
VL_CUSTO_OPERACIONAL_W	double precision := 0;
ie_apuracao_custo_w		varchar(10);
VL_PTO_CUSTO_OPERAC_W	double precision := 0;
VL_PTO_PROCEDIMENTO_W	double precision := 0;
VL_PTO_ANESTESISTA_W		double precision := 0;
VL_PTO_MEDICO_W		double precision := 0;
VL_PTO_AUXILIARES_W		double precision := 0;
VL_PTO_MATERIAIS_W		double precision := 0;
VL_MEDICO_W			double precision := 0;
VL_FILME_W			double precision := 0;
VL_AUXILIARES_W		double precision := 0;
VL_ANESTESISTA_W		double precision := 0;

IE_CH_CUSTO_OPER_SERV_w		varchar(1);

ie_gravar_log_w				varchar(1):= 'N';
vl_filme_neg_w				double precision;
vl_preco_calculado_w		double precision;

vl_servico_tab_w			double precision	:= null;
ds_nls_territory_w			varchar(64);
nm_usuario_logado_w			usuario.nm_usuario%type;


/* Ricardo 25/01/2006 - Inclui a restricao para a data de inativacao (conversado com Marcus) OS 28445 */



/* Ricardo 04/03/2004 - Inclui a restricao do estabelecimento na tabela convenio_servico do sql abaixo */

C01 CURSOR FOR
SELECT	a.vl_servico,
		a.cd_moeda
from		preco_servico a,
		convenio_servico b
where		a.cd_tabela_servico	= b.cd_tabela_servico
and		b.cd_convenio		= cd_convenio_p
and		b.cd_estabelecimento = cd_estabelecimento_p
and		b.cd_categoria		= cd_categoria_p
--and		b.dt_liberacao_tabela	<= dt_servico_p
and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico_p) between b.dt_liberacao_tabela and coalesce(b.dt_termino, dt_servico_p)
and		a.cd_estabelecimento	= cd_estabelecimento_p
and		a.cd_procedimento		= cd_servico_p
and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico_p) between a.dt_inicio_vigencia and coalesce(a.dt_vigencia_final, dt_servico_p)
and 		coalesce(b.ie_situacao,'A')	= 'A'
and (coalesce(a.dt_inativacao::text, '') = '' or a.dt_inativacao > dt_servico_p)
order by	coalesce(b.nr_prioridade,1),
		a.dt_inicio_vigencia desc,
		a.vl_servico desc;


BEGIN
/* Obter os Valores do Servico */

SELECT 	MAX(coalesce(Grava_log_calculo_pck.get_ie_gravar_log,'N'))
INTO STRICT	ie_gravar_log_w
;

IF (ie_gravar_log_w = 'S') AND (coalesce(nr_sequencia_p,0) > 0) THEN
	DELETE  FROM procedimento_log_calculo
	WHERE nr_seq_propaci = nr_sequencia_p;
END IF;


vl_servico_w	:= 0;
OPEN C01;
LOOP
FETCH C01 	into
		vl_servico_w,
		cd_moeda_servico_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
  --729090 = 1 - Moeda: 
	CALL Gravar_log_calculo_proc(cd_servico_p, NULL, nr_sequencia_p, cd_convenio_p, cd_categoria_p, obter_desc_expressao(729090) || cd_moeda_servico_w, ie_gravar_log_w);
	--729092 = 2 - Valor Servico: 
  CALL Gravar_log_calculo_proc(cd_servico_p, NULL, nr_sequencia_p, cd_convenio_p, cd_categoria_p, obter_desc_expressao(729092)|| vl_servico_w, ie_gravar_log_w);
	exit;
	END;
END LOOP;
CLOSE C01;

select 	coalesce(max(IE_CH_CUSTO_OPER_SERV),'N')
into STRICT	IE_CH_CUSTO_OPER_SERV_w
from 	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_p;

Select	min(ie_origem_proced)
into STRICT	ie_origem_proced_w
from	procedimento
where	cd_procedimento 	= cd_servico_p
and	ie_classificacao 	<> '1'
and	coalesce(ie_situacao,'A')	= 'A';

vl_honorarios_conv_w		:= 0;

select	coalesce(max(ie_preco_custo), 'N')
into STRICT	ie_preco_custo_w
from	categoria_convenio
where	cd_convenio		= cd_convenio_p
and	cd_categoria		= cd_categoria_p;

CD_MOEDA_PADRAO_W := obter_parametro_geral(4, CD_MOEDA_PADRAO_W);

/* Obter a Taxa de ajuste do procedimento */

SELECT * FROM OBTER_REGRA_AJUSTE_PROC(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_servico_p, ie_origem_proced_w, ie_video_w, dt_servico_p, coalesce(cd_tipo_acomodacao_p,0), coalesce(ie_tipo_atendimento_p,0), coalesce(cd_setor_atendimento_p,0), cd_medico_p, null, qt_idade_p, null, coalesce(nr_seq_proc_interno_p,0), cd_usuario_convenio_p, cd_plano_p, ie_clinica_p, cd_empresa_ref_p, ie_sexo_p, tx_ajuste_proc_w, tx_ajuste_Custo_Oper_w, tx_ajuste_Medico_w, tx_ajuste_partic_w, tx_ajuste_Filme_w, vl_proc_ajustado_w, ie_preco_informado_w, ie_glosa_w, cd_procedimento_esp_w, nr_seq_regra_preco_w, CD_EDICAO_AJUSTE_W, vl_medico_neg_w, vl_custo_oper_neg_w, qt_filme_neg_w, nr_auxiliares_neg_w, qt_porte_anest_neg_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_w, ie_atend_retorno_p, qt_dias_internacao_p, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_seq_ajuste_proc_w, null, null, null, null, cd_cgc_prestador_p, null, null, null, vl_filme_neg_w, nr_seq_cobertura_p, null, nr_seq_classif_atend_p, null, ie_carater_inter_sus_p, null, nr_seq_grupo_rec_p, nr_seq_origem_p, null, nr_seq_classif_medico_p) INTO STRICT tx_ajuste_proc_w, tx_ajuste_Custo_Oper_w, tx_ajuste_Medico_w, tx_ajuste_partic_w, tx_ajuste_Filme_w, vl_proc_ajustado_w, ie_preco_informado_w, ie_glosa_w, cd_procedimento_esp_w, nr_seq_regra_preco_w, CD_EDICAO_AJUSTE_W, vl_medico_neg_w, vl_custo_oper_neg_w, qt_filme_neg_w, nr_auxiliares_neg_w, qt_porte_anest_neg_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_w, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_seq_ajuste_proc_w, vl_filme_neg_w;

--729094 = 3 - Regra de ajuste: 
CALL Gravar_log_calculo_proc(cd_servico_p, NULL, nr_sequencia_p, cd_convenio_p, cd_categoria_p,obter_desc_expressao(729094) || nr_seq_ajuste_proc_w, ie_gravar_log_w);	
	
	

if (coalesce(nr_seq_ajuste_proc_w,0) > 0) then
	select	coalesce(max(cd_tabela_servico), 0)
	into STRICT	cd_tabela_servico_ajuste_w
	from	regra_ajuste_proc
	where 	nr_sequencia		= nr_seq_ajuste_proc_w;
	--729098 = Tabela de servico(Regra de ajuste) : 
	CALL Gravar_log_calculo_proc(cd_servico_p, NULL, nr_sequencia_p, cd_convenio_p, cd_categoria_p, obter_desc_expressao(729098)||cd_tabela_servico_ajuste_w, ie_gravar_log_w);	
	
	begin
	select	a.vl_servico,
		a.cd_moeda
	into STRICT	vl_ajuste_w,
		cd_moeda_ajuste_w
	from	preco_servico a
	where	a.cd_tabela_servico	= cd_tabela_servico_ajuste_w
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	a.cd_procedimento	= cd_servico_p
	and	a.dt_inicio_vigencia	=
			(SELECT	max(x.dt_inicio_vigencia)
			from	preco_servico x
			where	x.cd_tabela_servico	= a.cd_tabela_servico
			and	x.cd_procedimento	= a.cd_procedimento
			and	x.cd_estabelecimento	= a.cd_estabelecimento
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico_p) between x.dt_inicio_vigencia and coalesce(x.dt_vigencia_final, dt_servico_p))
	and (coalesce(a.dt_inativacao::text, '') = '' or a.dt_inativacao > dt_servico_p);
	exception
		when others then
			vl_ajuste_w		:= null;
			cd_moeda_ajuste_w	:= null;
	end;

	if (vl_ajuste_w IS NOT NULL AND vl_ajuste_w::text <> '') then
		vl_servico_w			:= vl_ajuste_w;
		cd_moeda_servico_w		:= cd_moeda_ajuste_w;
		--729100 = 5 - Moeda (Regra de ajuste) : 
		CALL Gravar_log_calculo_proc(cd_servico_p, NULL, nr_sequencia_p, cd_convenio_p, cd_categoria_p, obter_desc_expressao(729100) ||cd_moeda_ajuste_w, ie_gravar_log_w);			
		
	end if;



end if;


if (coalesce(ie_preco_informado_w,'N')	= 'S') 		and (coalesce(vl_proc_ajustado_w,0) > 0)	then
	vl_servico_w := vl_proc_ajustado_w;
	vl_servico_tab_w	:= vl_proc_ajustado_w;
else
	if (tx_ajuste_proc_w IS NOT NULL AND tx_ajuste_proc_w::text <> '') then
		vl_servico_tab_w	:= vl_servico_w;
		vl_servico_w := (vl_servico_w * tx_ajuste_proc_w);
	end if;
end if;


if (coalesce(ie_preco_informado_w,'N') <> 'S') 		and (cd_moeda_padrao_w <> cd_moeda_servico_w) then
	SELECT * FROM OBTER_COTACAO_MOEDA_CONVENIO(CD_ESTABELECIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, CD_SERVICO_P, coalesce(ie_origem_proced_w,1), DT_SERVICO_P, 'P', coalesce(cd_setor_atendimento_p,0), coalesce(ie_tipo_atendimento_p,0), null, cd_usuario_convenio_p, cd_plano_p, ie_clinica_p, cd_empresa_ref_p, null, nr_seq_proc_interno_p, null, cd_tipo_acomodacao_p, VL_HONORARIOS_CONV_W, VL_CUSTO_OPER_CONV_W, VL_FILME_CONV_W) INTO STRICT VL_HONORARIOS_CONV_W, VL_CUSTO_OPER_CONV_W, VL_FILME_CONV_W;
end if;

if (coalesce(IE_CH_CUSTO_OPER_SERV_w,'N') = 'N') then
	if (vl_honorarios_conv_w	<> 0)	then
		vl_servico_w	:= (vl_servico_w * vl_honorarios_conv_w);
		vl_servico_tab_w	:= (vl_servico_tab_w * vl_honorarios_conv_w);
	end if;
elsif (coalesce(IE_CH_CUSTO_OPER_SERV_w,'N') = 'S') then
	if (VL_CUSTO_OPER_CONV_W	<> 0)	then
		vl_servico_w	:= (vl_servico_w * VL_CUSTO_OPER_CONV_W);
		vl_servico_tab_w	:= (vl_servico_tab_w * VL_CUSTO_OPER_CONV_W);
	end if;
end if;

if (ie_preco_custo_w	= 'S') and (coalesce(nr_seq_ajuste_proc_w, 0) = 0) then
	begin

	select	max(cd_tabela_venda)
	into STRICT	cd_tabela_custo_w
	from	parametro_custo a
	where	cd_estabelecimento 	= cd_estabelecimento_p;


	SELECT * FROM Obter_Custo_Procedimento(cd_estabelecimento_p, cd_servico_p, ie_origem_proced_w, nr_seq_proc_interno_p, null, cd_tabela_custo_w, cd_convenio_p, cd_setor_Atendimento_p, vl_servico_w, VL_CUSTO_OPERACIONAL_W, vl_Medico_w, VL_FILME_W, ie_apuracao_custo_w, vl_custo_unitario_w, vl_custo_variavel_w, vl_custo_sadt_w, vl_custo_dir_apoio_w, vl_custo_mao_obra_w, vl_custo_direto_w, vl_custo_indireto_w, vl_despesa_w, vl_custo_hm_w, pr_imposto_w, dt_servico_p, null, null, null, null, vl_preco_calculado_w, null, 'N', null, null, null) INTO STRICT ie_apuracao_custo_w, vl_custo_unitario_w, vl_custo_variavel_w, vl_custo_sadt_w, vl_custo_dir_apoio_w, vl_custo_mao_obra_w, vl_custo_direto_w, vl_custo_indireto_w, vl_despesa_w, vl_custo_hm_w, pr_imposto_w, vl_preco_calculado_w;

		if (cd_servico_p = 99080012)  and (qt_resumo_w = 0) and (vl_custo_direto_w > 0) then
			vl_custo_w		:= vl_custo_unitario_w;
			vl_custo_direto_w	:= vl_custo_direto_w;
		elsif (ie_apuracao_custo_w = 'P') then
			vl_custo_w		:= vl_custo_unitario_w;
			vl_custo_variavel_w	:= vl_custo_variavel_w;
			vl_custo_sadt_w		:= vl_custo_sadt_w;
			vl_custo_dir_apoio_w	:= vl_custo_dir_apoio_w;
			vl_custo_mao_obra_w	:= vl_custo_mao_obra_w;
			vl_custo_direto_w	:= vl_custo_direto_w;
			vl_custo_indireto_w	:= vl_custo_Indireto_w;
			vl_despesa_w		:= vl_Despesa_w;
			vl_custo_hm_w		:= vl_custo_hm_w;
		elsif (ie_apuracao_custo_w = 'Q') then
			vl_custo_w		:= round((qt_resumo_w * vl_custo_unitario_w)::numeric, 2);
			vl_custo_sadt_w	:= qt_resumo_w * vl_custo_sadt_w;
			vl_custo_variavel_w	:= round((qt_resumo_w * vl_custo_variavel_w)::numeric, 2);
			vl_custo_dir_apoio_w	:= qt_resumo_w * vl_custo_dir_apoio_w;
			vl_custo_mao_obra_w	:= qt_resumo_w * vl_custo_mao_obra_w;
			vl_custo_direto_w	:= qt_resumo_w * vl_custo_direto_w;
			vl_custo_indireto_w	:= qt_resumo_w * vl_custo_Indireto_w;
			vl_despesa_w		:= qt_resumo_w * vl_Despesa_w;
			vl_custo_hm_w		:= qt_resumo_w * vl_custo_hm_w;
		end if;

	vl_custo_w	:=	vl_custo_variavel_w + vl_custo_sadt_w + vl_custo_dir_apoio_w +
				vl_custo_mao_obra_w + vl_custo_direto_w +
				vl_custo_indireto_w + vl_despesa_w + vl_custo_hm_w;

	if (coalesce(pr_imposto_w, 0) > 0) then
		vl_custo_w	:= vl_custo_w  + (vl_custo_w * pr_imposto_w);
	end if;
	
	vl_servico_w		:= vl_custo_w;
	vl_servico_tab_w	:= vl_custo_w;
	
	VL_CUSTO_OPERACIONAL_W	:= 0;
	VL_ANESTESISTA_W	:= 0;
	VL_MEDICO_W		:= 0;
	VL_AUXILIARES_W		:= 0;
	VL_FILME_W		:= 0;
	VL_PTO_PROCEDIMENTO_W	:= 0;
	VL_PTO_CUSTO_OPERAC_W	:= 0;
	VL_PTO_ANESTESISTA_W	:= 0;
	VL_PTO_MEDICO_W		:= 0;
	VL_PTO_AUXILIARES_W	:= 0;
	VL_PTO_MATERIAIS_W	:= 0;
	ie_preco_informado_w	:= 'N';

	end;
end if;

/* Valor original */

begin
	select	substr(value,1,64)
	into STRICT	ds_nls_territory_w
	from	v$nls_parameters
	where	parameter = 'NLS_TERRITORY';
exception
when others then
	ds_nls_territory_w:=null;	
end;

if (philips_param_pck.get_cd_pais = 2) or (upper(ds_nls_territory_w) = 'MEXICO')then
	SELECT 	MAX(coalesce(Grava_log_preco_pck.get_ie_gravar_log,'N'))
	INTO STRICT	ie_gravar_log_w
	;
	
	if (ie_gravar_log_w = 'S') then
		begin
			nm_usuario_logado_w := wheb_usuario_pck.get_nm_usuario;
		exception
			when others then
			nm_usuario_logado_w := '';
		end;
	
		CALL gravar_propaci_log_preco(nr_sequencia_p,'ORIG',tx_ajuste_proc_w,null,null,
							null,null,null,
							vl_servico_tab_w,ie_preco_informado_w,nm_usuario_logado_w,'S');
	end if;
end if;

vl_servico_p		:= vl_servico_w;
nr_seq_ajuste_proc_p	:= nr_seq_ajuste_proc_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_preco_servico ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_servico_p timestamp, cd_servico_p bigint, cd_setor_atendimento_p bigint, ie_tipo_atendimento_p bigint, cd_tipo_acomodacao_p bigint, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, ie_sexo_p text, vl_servico_p INOUT bigint, nr_seq_ajuste_proc_p INOUT bigint, ie_atend_retorno_p text, qt_dias_internacao_p bigint, qt_idade_p bigint, nr_seq_proc_interno_p bigint, nr_sequencia_p bigint, cd_cgc_prestador_p text, ie_carater_inter_sus_p text, nr_seq_cobertura_p bigint, nr_seq_classif_atend_p bigint, cd_dependencia_p bigint, nr_seq_grupo_rec_p bigint, nr_seq_origem_p bigint, nr_seq_classif_medico_p bigint, cd_medico_p text) FROM PUBLIC;

