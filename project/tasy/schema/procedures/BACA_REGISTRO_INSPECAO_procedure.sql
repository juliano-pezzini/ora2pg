-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_registro_inspecao () AS $body$
DECLARE

 
			 
nr_ordem_compra_w		bigint;
nr_sequencia_w			bigint;
cd_estabelecimento_w		smallint;
cd_estabelecimento_padrao_w	smallint;
cd_pessoa_resp_w			varchar(10);
nr_seq_nf_w			bigint;
cd_cnpj_w			varchar(14);
dt_liberacao_w			timestamp;
nr_seq_registro_w			bigint;
dt_recebimento_w			timestamp;
			
c01 CURSOR FOR 
SELECT	distinct 
	nr_ordem_compra 
from	inspecao_recebimento 
where	coalesce(nr_seq_registro::text, '') = '' 
and	(nr_ordem_compra IS NOT NULL AND nr_ordem_compra::text <> '') 
and	coalesce(nr_seq_registro::text, '') = '';
	
c02 CURSOR FOR 
SELECT	nr_sequencia, 
	dt_recebimento, 
	obter_estab_ordem_compra(nr_ordem_compra), 
	cd_pessoa_responsavel, 
	nr_seq_nota_fiscal, 
	cd_cgc, 
	dt_liberacao 
from	inspecao_recebimento 
where	nr_ordem_compra = nr_ordem_compra_w 
and	coalesce(nr_seq_registro::text, '') = '';

c03 CURSOR FOR 
SELECT	nr_sequencia, 
	dt_recebimento, 
	obter_estab_ordem_compra(nr_ordem_compra), 
	cd_pessoa_responsavel, 
	nr_seq_nota_fiscal, 
	cd_cgc, 
	dt_liberacao 
from	inspecao_recebimento 
where	coalesce(nr_ordem_compra::text, '') = '' 
and	coalesce(nr_seq_registro::text, '') = '';
	

BEGIN 
 
select	coalesce(min(cd_estabelecimento),1) 
into STRICT	cd_estabelecimento_padrao_w 
from	estabelecimento;
 
/*Abre esse cursor só para as inspeções que tem ordem de compra*/
 
open C01;
loop 
fetch C01 into	 
	nr_ordem_compra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	open C02;
	loop 
	fetch C02 into	 
		nr_sequencia_w, 
		dt_recebimento_w, 
		cd_estabelecimento_w, 
		cd_pessoa_resp_w, 
		nr_seq_nf_w, 
		cd_cnpj_w, 
		dt_liberacao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		if (coalesce(cd_estabelecimento_w::text, '') = '') then 
			select	coalesce(obter_dados_nota_fiscal(nr_seq_nf_w,19),cd_estabelecimento_padrao_w) 
			into STRICT	cd_estabelecimento_w 
			;
		end if;
		 
		select	nextval('inspecao_registro_seq') 
		into STRICT	nr_seq_registro_w 
		;
		 
		insert into inspecao_registro( 
			nr_sequencia, 
			cd_estabelecimento, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			dt_registro, 
			cd_pessoa_resp, 
			nr_seq_nf, 
			cd_cnpj, 
			dt_liberacao) 
		values (nr_seq_registro_w, 
			cd_estabelecimento_w, 
			clock_timestamp(), 
			'BacaRegInsp', 
			clock_timestamp(), 
			'BacaRegInsp', 
			dt_recebimento_w, 
			cd_pessoa_resp_w, 
			nr_seq_nf_w, 
			cd_cnpj_w, 
			dt_liberacao_w);
 
		update	inspecao_recebimento 
		set	nr_seq_registro = nr_seq_registro_w 
		where	nr_sequencia = nr_sequencia_w;
		 
		end;
	end loop;
	close C02;	
	end;
end loop;
close C01;
 
/*Abre esse cursor só para as inspeções que tem não ordem de compra*/
 
open C03;
loop 
fetch C03 into	 
	nr_sequencia_w, 
	dt_recebimento_w, 
	cd_estabelecimento_w, 
	cd_pessoa_resp_w, 
	nr_seq_nf_w, 
	cd_cnpj_w, 
	dt_liberacao_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	if (coalesce(cd_estabelecimento_w::text, '') = '') then 
		select	coalesce(obter_dados_nota_fiscal(nr_seq_nf_w,19),cd_estabelecimento_padrao_w) 
		into STRICT	cd_estabelecimento_w 
		;
	end if;
		 
	select	nextval('inspecao_registro_seq') 
	into STRICT	nr_seq_registro_w 
	;
		 
	insert into inspecao_registro( 
		nr_sequencia, 
		cd_estabelecimento, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		dt_registro, 
		cd_pessoa_resp, 
		nr_seq_nf, 
		cd_cnpj, 
		dt_liberacao) 
	values (nr_seq_registro_w, 
		cd_estabelecimento_w, 
		clock_timestamp(), 
		'BacaRegInsp', 
		clock_timestamp(), 
		'BacaRegInsp', 
		dt_recebimento_w, 
		cd_pessoa_resp_w, 
		nr_seq_nf_w, 
		cd_cnpj_w, 
		dt_liberacao_w);
	 
	update	inspecao_recebimento 
	set	nr_seq_registro = nr_seq_registro_w 
	where	nr_sequencia = nr_sequencia_w;	
	 
	end;
end loop;
close C03;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_registro_inspecao () FROM PUBLIC;

