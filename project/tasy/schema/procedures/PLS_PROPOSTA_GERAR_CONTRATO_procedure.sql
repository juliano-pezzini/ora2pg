-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_proposta_gerar_contrato ( nr_seq_proposta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_contrato_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
cd_cgc_pagador_w		varchar(14);
cd_pf_pagador_w			varchar(10);
qt_pagador_w			integer	:= 0;
ie_tipo_pagador_w		varchar(1)	:= 'P';
nr_seq_forma_cobranca_w		varchar(2);
cd_banco_w			integer;
cd_agencia_bancaria_w		varchar(8);
ie_digito_agencia_w		varchar(1);
cd_conta_w			varchar(20);
ie_digito_conta_w		varchar(2);
dt_dia_vencimento_w		smallint;
ie_endereco_boleto_w		varchar(4);
cd_condicao_pagamento_w		bigint;
qt_registro_w			integer	:= 0;
ie_contrato_plano_w		varchar(1)	:= 'N';
nr_seq_proposta_plano_w		bigint;
ie_principal_w			varchar(1);
ie_tipo_proposta_w		smallint;
nr_seq_contrato_mig_w		bigint;
ie_envia_cobranca_w		varchar(1);
ie_gerar_documento_w		varchar(2);
nr_seq_pagador_w		bigint;
nr_seq_cliente_w		bigint;
nr_seq_segurado_indic_w		bigint;
cd_pessoa_indicacao_w		varchar(255);
nr_seq_segurado_indic_pag_w	bigint;
nr_seq_bonificacao_w		bigint;
ie_tipo_operacao_w		varchar(3);
cd_tipo_portador_param_w	integer;
cd_portador_param_w		bigint;
nr_seq_conta_banco_param_w	bigint;
nr_seq_regra_w			bigint;
vl_inscricao_w			double precision;
tx_inscricao_w			double precision;
qt_parcela_inicial_w		bigint;
qt_parcela_final_w		bigint;
nr_seq_regra_inscricao_w	bigint;
dt_fim_vigencia_w		timestamp;
dt_inicio_vigencia_w		timestamp;
dt_inicio_proposta_w		timestamp;
nr_seq_empresa_w		bigint;
cd_profissao_w			bigint;
nr_seq_vinculo_empresa_w	bigint;
cd_matricula_w			varchar(20);
ie_gerar_nota_titulo_param_w	varchar(2);
ie_calc_primeira_mens_w		varchar(1);
ie_calculo_proporcional_w	varchar(1);
ie_tipo_estip_w			varchar(2);
nr_seq_regra_proporcional_w	bigint;
qt_dias_proposta_w		varchar(3);
dt_inicio_vigencia_pagador_w	timestamp;
dt_fim_vigencia_pagador_w	timestamp;
ie_mes_vencimento_w		varchar(1);
nr_seq_compl_pf_tel_adic_w	bigint;
nr_seq_dia_vencimento_w		bigint;
nr_seq_carencia_w		bigint;
nr_seq_tipo_carencia_w		bigint;
qt_dias_w			bigint;
dt_inicio_vigencia_carencia_w	timestamp;
qt_documentos_proposta_w	bigint;
ie_preco_w			varchar(2);
nr_seq_grupo_carencia_w		bigint;
ie_cpt_w			varchar(1);
qt_doc_contrato_w		bigint;
ie_tipo_contratacao_w		varchar(3);
cd_tipo_portador_regra_w	integer;
cd_portador_regra_w		bigint;
nr_seq_conta_banco_regra_w	bigint;
nr_seq_carteira_cobr_w		bigint;
ie_gerar_nota_titulo_regra_w	varchar(2);
nr_seq_regra_plano_w		bigint;
cd_tipo_portador_w		integer;
cd_portador_w			bigint;
nr_seq_conta_banco_w		bigint;
ie_geracao_nota_titulo_w	varchar(2);
nr_seq_regra_coparticipacao_w	bigint;
nr_seq_classif_itens_w		bigint;
nr_seq_plano_proposta_w		bigint;
ie_gerar_nota_titulo_pj_w	varchar(2);
ie_gerar_nota_titulo_pf_w	varchar(2);
nr_seq_segurado_w		bigint;
ie_portador_exclusivo_w		varchar(10);
ie_destacar_reajuste_w		varchar(10);
ie_gerar_cobr_escrit_w		varchar(10);
qt_vidas_contrato_w		bigint;
nr_seq_tipo_compl_adic_w	bigint;
cd_tipo_portador_deb_aut_w	integer;
cd_portador_deb_aut_w		bigint;
nr_seq_conta_banco_deb_aut_w	bigint;
ie_pagador_contrato_princ_w	varchar(10);
nr_seq_contrato_princ_w		bigint;
ie_contrato_criado		varchar(1);
nr_seq_proposta_benef_w		pls_proposta_beneficiario.nr_sequencia%type;
nr_seq_regra_copartic_w		pls_regra_copartic.nr_sequencia%type;
nr_seq_regra_copartic_nova_w	pls_regra_copartic.nr_sequencia%type;
ie_apropriacao_copartic_w	pls_parametros.ie_apropriacao_copartic%type;
nr_seq_lote_inclusao_w		pls_inclusao_beneficiario.nr_seq_lote_inclusao%type;
ds_anexo_w			pls_inclusao_anexo.ds_anexo%type;
nr_seq_tipo_doc_w		pls_inclusao_anexo.nr_seq_tipo_documento%type;
ie_apresenta_portal_w		pls_inclusao_anexo.ie_apresenta_portal%type;
ds_email_pagador_w		pls_proposta_pagador.ds_email%type;
qt_meses_vencimento_w		pls_proposta_pagador.qt_meses_vencimento%type;
nr_seq_bandeira_w		pls_proposta_pagador.nr_seq_bandeira%type;
nm_titular_cartao_w		pls_proposta_pagador.nm_titular_cartao%type;
nr_cartao_credito_w		pls_proposta_pagador.nr_cartao_credito%type;
ds_token_w			pls_proposta_pagador.ds_token%type;
nr_seq_tabela_ww		bigint;

/* Colocado o campo NR_SEQ_TITULAR para que a consulta retorne primeiro os titulares depois os dependentes,
caso contrrio da erro na insero do beneficirio no contrato */
C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_plano,
		a.nr_seq_tabela,
		coalesce(upper(a.ie_principal),'S')
	from	pls_proposta_plano	a
	where	a.nr_seq_proposta	= nr_seq_proposta_p
	order by a.ie_principal desc;

C02 CURSOR FOR
	SELECT	cd_cgc_pagador,
		cd_pagador,
		nr_seq_forma_cobranca,
		cd_banco,
		cd_agencia_bancaria,
		ie_digito_agencia,
		cd_conta,
		ie_digito_conta,
		coalesce(dt_dia_vencimento,1),
		ie_endereco_boleto,
		cd_condicao_pagamento,
		ie_envia_cobranca,
		nr_seq_empresa,
		cd_profissao,
		nr_seq_vinculo_empresa,
		cd_matricula,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		ie_mes_vencimento,
		nr_seq_compl_pf_tel_adic,
		nr_seq_dia_vencimento,
		nr_seq_classif_itens,
		nr_seq_tipo_compl_adic,
		ds_email,
		abs(coalesce(qt_meses_vencimento,1)),
		nr_seq_bandeira,
		nm_titular_cartao,
		nr_cartao_credito,
		ds_token
	from	pls_proposta_pagador
	where	nr_seq_proposta	= nr_seq_proposta_p
	and	((ie_principal_w = 'S') or (ie_contrato_plano_w = 'N'));/* S gera pagador para contratos principais */


/*Gerar as bonifo do contrato*/

C03 CURSOR FOR
	SELECT	nr_seq_bonificacao
	from	pls_bonificacao_vinculo
	where	nr_seq_proposta = nr_seq_proposta_p;

/*Gerar as carncias do contrato*/

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carencia
	where	nr_seq_proposta	= nr_seq_proposta_p;

/*Buscar as informaes financeiras do pagador*/
	
C05 CURSOR FOR
	SELECT	a.cd_tipo_portador,
		a.cd_portador,
		a.nr_seq_conta_banco,
		a.nr_seq_carteira_cobr,
		a.ie_geracao_nota_titulo,
		(	SELECT	nr_sequencia
			from	pls_regra_portador_plano x
			where	x.nr_seq_regra	= a.nr_sequencia
			and	x.nr_seq_plano	= nr_seq_plano_w) nr_regra,
		coalesce(a.ie_portador_exclusivo,'S'),
		coalesce(a.ie_destacar_reajuste,'N'),
		coalesce(a.ie_gerar_cobr_escrit,'S'),
		a.cd_tipo_portador_deb_aut,
		a.cd_portador_deb_aut,
		a.nr_seq_conta_banco_deb_aut
	from	pls_regra_portador_mens a
	where (coalesce(a.dt_fim_vigencia::text, '') = '' or a.dt_fim_vigencia <= clock_timestamp())
	and (a.ie_tipo_contratacao = ie_tipo_contratacao_w or ie_tipo_contratacao = 'T')
	and	((a.cd_banco = cd_banco_w) or (coalesce(a.cd_banco::text, '') = ''))
	and	((a.nr_seq_forma_cobranca = nr_seq_forma_cobranca_w) or (coalesce(a.nr_seq_forma_cobranca::text, '') = ''))
	and	((a.nr_seq_classif_itens = nr_seq_classif_itens_w) or (coalesce(a.nr_seq_classif_itens::text, '') = ''))
	and	((exists (	select	1
				from	pls_regra_portador_plano x
				where	x.nr_seq_regra	= a.nr_sequencia
				and	x.nr_seq_plano	= nr_seq_plano_w))
		or (not exists ( select	1
				from	pls_regra_portador_plano x
				where	x.nr_seq_regra	= a.nr_sequencia)))
	order by coalesce(nr_regra,0),
		coalesce(cd_banco,0),
		coalesce(nr_seq_forma_cobranca,0);

C06 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_coparticipacao
	where	nr_seq_proposta = nr_seq_proposta_p;

C07 CURSOR FOR /* Beneficirios gerados pela proposta */
	SELECT	a.nr_sequencia,
		b.nr_sequencia
	from	pls_segurado			a,
		pls_proposta_beneficiario	b,
		pls_contrato			c
	where	a.nr_seq_pessoa_proposta	= b.nr_sequencia
	and	a.nr_seq_contrato		= c.nr_sequencia
	and	b.nr_seq_proposta		= nr_seq_proposta_p;

C08 CURSOR FOR /* Coparticipao no precisa estar liberada na proposta */
	SELECT	nr_sequencia
	from	pls_regra_copartic
	where	nr_seq_proposta = nr_seq_proposta_p;

C09 CURSOR FOR
	SELECT  ds_anexo,
		nr_seq_tipo_documento,
		ie_apresenta_portal
	from 	pls_inclusao_anexo
	where 	nr_seq_lote_inclusao = nr_seq_lote_inclusao_w;

C10 CURSOR FOR
	SELECT	ds_anexo,
		pls_obter_nome_arquivo(ds_anexo, 'S') nm_arquivo,
		dt_anexo,
		nr_seq_tipo_documento
	from	pls_proposta_anexo
	where	nr_seq_proposta = nr_seq_proposta_p;

BEGIN

CALL pls_verificar_parecer_benef(nr_seq_proposta_p, nm_usuario_p);

ie_contrato_plano_w	:= coalesce(obter_valor_param_usuario(1232, 17, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');
ie_gerar_documento_w	:= coalesce(obter_valor_param_usuario(1232, 34, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');

/* Obter dados da proposta */

select	pls_obter_seq_contrato(nr_seq_contrato),
	ie_tipo_proposta,
	nr_seq_contrato_mig,
	nr_seq_cliente,
	dt_inicio_proposta,
	CASE WHEN cd_estipulante='' THEN 'PJ'  ELSE 'PF' END ,
	CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN 'I'  ELSE 'C' END
into STRICT	nr_seq_contrato_w,
	ie_tipo_proposta_w,
	nr_seq_contrato_mig_w,
	nr_seq_cliente_w,
	dt_inicio_proposta_w,
	ie_tipo_estip_w,
	ie_tipo_contratacao_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

if (nr_seq_cliente_w IS NOT NULL AND nr_seq_cliente_w::text <> '') then
	/* Obter indicao */

	select	nr_seq_segurado_indic,
		cd_pessoa_indicacao
	into STRICT	nr_seq_segurado_indic_w,
		cd_pessoa_indicacao_w
	from	pls_comercial_cliente
	where	nr_sequencia = nr_seq_cliente_w;
end if;

if (coalesce(nr_seq_segurado_indic_w,0) <> 0) then
	select	max(nr_seq_plano)
	into STRICT	nr_seq_plano_proposta_w
	from	pls_proposta_plano
	where	nr_seq_proposta	= nr_seq_proposta_p
	and	ie_principal = 'S';
	
	begin
	select	max(a.nr_seq_bonificacao)
	into STRICT	nr_seq_bonificacao_w
	from	pls_regra_lanc_aut_item		a,
		pls_regra_lanc_automatico	b
	where	a.nr_seq_regra	= b.nr_sequencia
	and	b.ie_evento	= 3
	and	((nr_seq_plano = nr_seq_plano_proposta_w) or (coalesce(nr_seq_plano::text, '') = ''))
	and	clock_timestamp() between coalesce(b.dt_inicio_vigencia,clock_timestamp()) and fim_dia(coalesce(b.dt_fim_vigencia,clock_timestamp()))
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia,clock_timestamp()) and fim_dia(coalesce(a.dt_fim_vigencia,clock_timestamp()));
	exception
	when others then
		nr_seq_bonificacao_w	:= null;
	end;
	
	begin
	select	trunc(add_months(max(c.dt_referencia),1), 'month')
	into STRICT	dt_inicio_vigencia_w
	from	pls_segurado		a,
		pls_contrato_pagador	b,
		pls_mensalidade		c
	where	a.nr_seq_pagador	= b.nr_sequencia
	and	c.nr_seq_pagador	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_segurado_indic_w;
	exception
	when others then
		dt_inicio_vigencia_w	:= trunc(clock_timestamp(),'month');
	end;
	
	if (coalesce(dt_inicio_vigencia_w::text, '') = '') then
		dt_inicio_vigencia_w	:= trunc(clock_timestamp(),'month');
	end if;
	
	/*aaschlote - 14/09/2011 - Verificar se existe regras de bonificao*/

	if (nr_seq_bonificacao_w IS NOT NULL AND nr_seq_bonificacao_w::text <> '') then
		insert	into pls_bonificacao_vinculo(
				nr_sequencia, nr_seq_bonificacao, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_segurado, dt_inicio_vigencia, dt_fim_vigencia)
			values (	nextval('pls_bonificacao_vinculo_seq'), nr_seq_bonificacao_w, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_segurado_indic_w, dt_inicio_vigencia_w, last_day(dt_inicio_vigencia_w));
	end if;
	
	dt_inicio_vigencia_w	:= null;
	nr_seq_bonificacao_w	:= null;
end if;

select	count(1)
into STRICT	qt_documentos_proposta_w
from	pls_contrato_documento
where	nr_seq_proposta	= nr_seq_proposta_p;

select	max(ie_pagador_contrato_princ),
	max(ie_apropriacao_copartic)
into STRICT	ie_pagador_contrato_princ_w,
	ie_apropriacao_copartic_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

ie_contrato_criado := 'N';
/* Produtos do contrato */

open C01;
loop
fetch C01 into
	nr_seq_proposta_plano_w,
	nr_seq_plano_w,
	nr_seq_tabela_w,
	ie_principal_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_tipo_proposta_w in (3,4,7,8)) and (coalesce(nr_seq_contrato_mig_w,0) = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182135);
	end if;
	
	/* Se o tipo da proposta for 1 ou 3 (Adeso e Migrao a novo contrato) e o parmetro 17 for sim deve ser criado um contrato para cada produto */

	if (ie_tipo_proposta_w in (1,3,7)) and
		((coalesce(nr_seq_contrato_w,0) = 0) or (ie_contrato_plano_w = 'S')) then
		nr_seq_contrato_w := pls_proposta_criar_contrato(nr_seq_proposta_plano_w, nm_usuario_p, nr_seq_contrato_w);
	elsif (ie_tipo_proposta_w = 6) and /*  Adeso a um contrato novo a partir de um contrato existente */
		((coalesce(nr_seq_contrato_w,0) <> 0) and (ie_contrato_criado = 'N'))  then
		nr_seq_contrato_w := pls_proposta_criar_contrato(nr_seq_proposta_plano_w, nm_usuario_p, nr_seq_contrato_w);
		if (ie_contrato_plano_w = 'S') then
			ie_contrato_criado := 'N';
		else
			ie_contrato_criado := 'S';
		end if;
	end if;
	
	/*aaschlote 20/02/2012 - OS 415911*/

	if (ie_tipo_proposta_w <> 9) then
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_contrato_plano
		where	nr_seq_contrato	= nr_seq_contrato_w
		and	nr_seq_plano	= nr_seq_plano_w;
	else
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_contrato_plano
		where	nr_seq_contrato	= nr_seq_contrato_w
		and	nr_seq_plano	= nr_seq_plano_w
		and	nr_seq_tabela	= nr_seq_tabela_w;
	end if;
	
	if (qt_registro_w	= 0) then
		select	ie_tipo_operacao
		into STRICT	ie_tipo_operacao_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_w;
		
		insert into pls_contrato_plano(
			nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_contrato,
			nr_seq_plano, nr_seq_tabela, ie_situacao,
			dt_inativacao, nr_seq_tabela_origem, ie_tipo_operacao,
			dt_inicio_vigencia)
		values (	nextval('pls_contrato_plano_seq'), clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, nr_seq_contrato_w,
			nr_seq_plano_w, nr_seq_tabela_w, 'A',
			null, null,ie_tipo_operacao_w,
			dt_inicio_proposta_w);
		
		select	max(ie_preco)
		into STRICT	ie_preco_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_w;
		
		if (ie_preco_w in ('1','4')) then
			if (ie_tipo_proposta_w <> 9) then
				CALL pls_gerar_tabela_contrato(nr_seq_contrato_w, nr_seq_plano_w, nr_seq_tabela_w,
							cd_estabelecimento_p, nm_usuario_p);	
				select	max(nr_seq_tabela)
				into STRICT	nr_seq_tabela_ww
				from	pls_contrato_plano
				where	nr_seq_contrato = nr_seq_contrato_w
				and	nr_seq_plano = nr_seq_plano_w;
				
				if (nr_seq_tabela_ww IS NOT NULL AND nr_seq_tabela_ww::text <> '') then
					update  pls_tabela_preco
					set	ie_proposta_adesao	= 'S'
					where	nr_sequencia	= nr_seq_tabela_ww;
				end if;
				
			elsif (ie_tipo_proposta_w = 9) then
				CALL pls_gerar_tab_contr_adaptacao(nr_seq_contrato_w,nr_seq_proposta_p,nr_seq_plano_w,nr_seq_tabela_w,
							cd_estabelecimento_p, nm_usuario_p);
			end if;
		end if;
	end if;
	
	select	max(nr_contrato_principal)
	into STRICT	nr_seq_contrato_princ_w
	from	pls_contrato
	where	nr_sequencia	= nr_seq_contrato_w;
	
	/* Pagadores do contrato */

	open C02;
	loop
	fetch C02 into
		cd_cgc_pagador_w,
		cd_pf_pagador_w,
		nr_seq_forma_cobranca_w,
		cd_banco_w,
		cd_agencia_bancaria_w,
		ie_digito_agencia_w,
		cd_conta_w,
		ie_digito_conta_w,
		dt_dia_vencimento_w,
		ie_endereco_boleto_w,
		cd_condicao_pagamento_w,
		ie_envia_cobranca_w,
		nr_seq_empresa_w,
		cd_profissao_w,
		nr_seq_vinculo_empresa_w,
		cd_matricula_w,
		dt_inicio_vigencia_pagador_w,
		dt_fim_vigencia_pagador_w,
		ie_mes_vencimento_w,
		nr_seq_compl_pf_tel_adic_w,
		nr_seq_dia_vencimento_w,
		nr_seq_classif_itens_w,
		nr_seq_tipo_compl_adic_w,
		ds_email_pagador_w,
		qt_meses_vencimento_w,
		nr_seq_bandeira_w,
		nm_titular_cartao_w,
		nr_cartao_credito_w,
		ds_token_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		if (ie_pagador_contrato_princ_w = 'S') and (nr_seq_contrato_princ_w IS NOT NULL AND nr_seq_contrato_princ_w::text <> '') then
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_contrato_pagador
			where (nr_seq_contrato 	= nr_seq_contrato_princ_w
			or	 nr_seq_contrato	= nr_seq_contrato_w)
			and	((cd_cgc = cd_cgc_pagador_w) or (cd_pessoa_fisica = cd_pf_pagador_w));
		else		
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_contrato_pagador
			where	nr_seq_contrato	= nr_seq_contrato_w
			and	((cd_cgc = cd_cgc_pagador_w) or (cd_pessoa_fisica = cd_pf_pagador_w));
		end if;
		
		qt_dias_proposta_w	:= to_char(dt_inicio_proposta_w,'dd');
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_regra_proporcional_w
		from	pls_regra_prop_mensalidade
		where	ie_tipo_pessoa = ie_tipo_estip_w
		and	coalesce(qt_dia_limite,qt_dias_proposta_w)	>= qt_dias_proposta_w;
		
		if (coalesce(nr_seq_regra_proporcional_w,0) <> 0) then
			begin
			select	ie_calc_primeira_mens,
				ie_calculo_proporcional
			into STRICT	ie_calc_primeira_mens_w,
				ie_calculo_proporcional_w
			from	pls_regra_prop_mensalidade
			where	nr_sequencia	= nr_seq_regra_proporcional_w;
			exception
			when others then
				ie_calc_primeira_mens_w		:= 'I';
				ie_calculo_proporcional_w	:= 'M';
			end;
		else
			ie_calc_primeira_mens_w 	:= 'I';
			ie_calculo_proporcional_w	:= 'M';
		end if;
		
		if (qt_registro_w	= 0) then
			/* Obter o tipo de pagador */

			select	count(1)
			into STRICT	qt_pagador_w
			from	pls_contrato_pagador
			where	nr_seq_contrato	= nr_seq_contrato_w;
			if (qt_pagador_w	= 0) then
				ie_tipo_pagador_w	:= 'P';
			else
				ie_tipo_pagador_w	:= 'S';
			end if;
			
			select	nextval('pls_contrato_pagador_seq')
			into STRICT	nr_seq_pagador_w
			;
			
			insert into pls_contrato_pagador(
				nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_contrato,
				cd_cgc, cd_pessoa_fisica, ie_tipo_pagador,
				ie_envia_cobranca, ie_endereco_boleto, ie_calc_primeira_mens,
				cd_condicao_pagamento, dt_primeira_mensalidade, ie_calculo_proporcional,
				nr_seq_compl_pf_tel_adic, nr_seq_classif_itens, nr_seq_tipo_compl_adic,
				ds_email, ie_receber_sms)
			values (	nr_seq_pagador_w, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, nr_seq_contrato_w,
				cd_cgc_pagador_w, cd_pf_pagador_w, ie_tipo_pagador_w,
				ie_envia_cobranca_w, ie_endereco_boleto_w, ie_calc_primeira_mens_w,
				cd_condicao_pagamento_w, null, ie_calculo_proporcional_w,
				nr_seq_compl_pf_tel_adic_w, nr_seq_classif_itens_w, nr_seq_tipo_compl_adic_w,
				ds_email_pagador_w, 'S');
			
			open C05;
			loop
			fetch C05 into
				cd_tipo_portador_regra_w,
				cd_portador_regra_w,
				nr_seq_conta_banco_regra_w,
				nr_seq_carteira_cobr_w,
				ie_gerar_nota_titulo_regra_w,
				nr_seq_regra_plano_w,
				ie_portador_exclusivo_w,
				ie_destacar_reajuste_w,
				ie_gerar_cobr_escrit_w,
				cd_tipo_portador_deb_aut_w,
				cd_portador_deb_aut_w,
				nr_seq_conta_banco_deb_aut_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
			end loop;
			close C05;
			
			/* sideker - OS 1402781 */

			if (nr_seq_dia_vencimento_w IS NOT NULL AND nr_seq_dia_vencimento_w::text <> '') then
				begin
					select	dt_dia_vencimento
					into STRICT	dt_dia_vencimento_w
					from	pls_regra_dia_vencimento
					where	nr_sequencia = nr_seq_dia_vencimento_w;
				exception
				when others then
					dt_dia_vencimento_w := null;
				end;
			end if;
			
			/* Busca os parmetros da operadora */

			select	coalesce(cd_condicao_pagamento_w,cd_condicao_pagamento),
				cd_tipo_portador,
				cd_portador,
				nr_seq_conta_banco,
				ie_geracao_nota_titulo,
				ie_geracao_nota_titulo_pf
			into STRICT	cd_condicao_pagamento_w,
				cd_tipo_portador_param_w,
				cd_portador_param_w,
				nr_seq_conta_banco_param_w,
				ie_gerar_nota_titulo_pj_w,
				ie_gerar_nota_titulo_pf_w
			from	pls_parametros
			where	cd_estabelecimento = cd_estabelecimento_p;
			
			if (cd_pf_pagador_w IS NOT NULL AND cd_pf_pagador_w::text <> '') then
				ie_gerar_nota_titulo_param_w	:= ie_gerar_nota_titulo_pf_w;
			else
				ie_gerar_nota_titulo_param_w	:= ie_gerar_nota_titulo_pj_w;
			end if;
			
			cd_tipo_portador_w		:= coalesce(cd_tipo_portador_regra_w, cd_tipo_portador_param_w);
			cd_portador_w			:= coalesce(cd_portador_regra_w,cd_portador_param_w);
			nr_seq_conta_banco_w		:= coalesce(nr_seq_conta_banco_regra_w,nr_seq_conta_banco_param_w);
			ie_geracao_nota_titulo_w	:= coalesce(ie_gerar_nota_titulo_regra_w,ie_gerar_nota_titulo_param_w);
			ie_portador_exclusivo_w		:= coalesce(ie_portador_exclusivo_w,'S');
			ie_destacar_reajuste_w		:= coalesce(ie_destacar_reajuste_w,'N');
			ie_gerar_cobr_escrit_w		:= coalesce(ie_gerar_cobr_escrit_w,'S');

			insert into pls_contrato_pagador_fin(
				nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_pagador,
				nr_seq_forma_cobranca, dt_inicio_vigencia, cd_banco,
				nr_seq_conta_banco, cd_agencia_bancaria, ie_digito_agencia,
				cd_conta, ie_digito_conta, dt_dia_vencimento,
				cd_condicao_pagamento, cd_tipo_portador, cd_portador,
				nr_seq_empresa, cd_profissao, nr_seq_vinculo_empresa,
				cd_matricula, ie_geracao_nota_titulo, dt_fim_vigencia,
				ie_mes_vencimento, nr_seq_dia_vencimento, nr_seq_carteira_cobr,
				ie_portador_exclusivo, ie_destacar_reajuste, ie_gerar_cobr_escrit,
				cd_tipo_portador_deb_aut, cd_portador_deb_aut, nr_seq_conta_banco_deb_aut,
				qt_meses_vencimento, nr_seq_bandeira, nm_titular_cartao, 
				nr_cartao_credito, ds_token)
			values (	nextval('pls_contrato_pagador_fin_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, nr_seq_pagador_w,
				nr_seq_forma_cobranca_w,coalesce(dt_inicio_vigencia_pagador_w,trunc(clock_timestamp(),'Month')), cd_banco_w,
				nr_seq_conta_banco_w, cd_agencia_bancaria_w, ie_digito_agencia_w,
				cd_conta_w, ie_digito_conta_w, dt_dia_vencimento_w,
				cd_condicao_pagamento_w, cd_tipo_portador_w, cd_portador_w,
				nr_seq_empresa_w, cd_profissao_w, nr_seq_vinculo_empresa_w,
				cd_matricula_w, ie_geracao_nota_titulo_w, dt_fim_vigencia_pagador_w,
				ie_mes_vencimento_w, nr_seq_dia_vencimento_w, nr_seq_carteira_cobr_w,
				ie_portador_exclusivo_w, ie_destacar_reajuste_w, ie_gerar_cobr_escrit_w,
				cd_tipo_portador_deb_aut_w, cd_portador_deb_aut_w, nr_seq_conta_banco_deb_aut_w, 
				qt_meses_vencimento_w, nr_seq_bandeira_w, nm_titular_cartao_w, 
				nr_cartao_credito_w, ds_token_w);
		end if;
		end;
	end loop;
	close C02;
	
	CALL pls_gerar_lanc_prog_indicacao(nr_seq_proposta_p, 'N', cd_estabelecimento_p, nm_usuario_p);
	
	CALL pls_proposta_gerar_log(nr_seq_proposta_p, nr_seq_contrato_w, nr_seq_plano_w,
				'GC', '', '',
				'', nm_usuario_p);
	/* Gerar os beneficirios do contrato */

	if (ie_tipo_proposta_w in (1,2,6)) then
		CALL pls_proposta_gerar_benef(nr_seq_proposta_p, nr_seq_plano_w, nr_seq_contrato_w, nm_usuario_p);
	elsif (ie_tipo_proposta_w in (3,4,7,8)) then
		CALL pls_proposta_migrar_contrato(nr_seq_proposta_p, nr_seq_plano_w, nr_seq_contrato_w, nm_usuario_p);
	/*Gerar adaptao do produto*/

	elsif (ie_tipo_proposta_w = 9) then
		CALL pls_gerar_proposta_adapatacao(nr_seq_proposta_p,nr_seq_contrato_w,nr_seq_tabela_w, nr_seq_plano_w, cd_estabelecimento_p,nm_usuario_p);
	end if;
	
	/* Gerar indicao para cada beneficirio */

	if (coalesce(nr_seq_segurado_indic_w,0) <> 0) or (coalesce(cd_pessoa_indicacao_w,0) <> 0) then
		CALL pls_proposta_benef_indicacao(null, nr_seq_contrato_w, 'B', 'N', nm_usuario_p, cd_estabelecimento_p);
	end if;
	
	if (ie_gerar_documento_w = 'S') and (ie_tipo_proposta_w in (1,3,6,7)) then
		if (qt_documentos_proposta_w	= 0) then
			select	count(1)
			into STRICT	qt_doc_contrato_w
			from	pls_contrato_documento
			where	nr_seq_contrato	= nr_seq_contrato_w;
			/*aschlote 01/09/2011 - Se no existir nenhum documento no contrato ento cria um novo*/

			if (qt_doc_contrato_w	= 0) then
				CALL pls_gerar_documento_contrato(nr_seq_contrato_w, null, 'N', nm_usuario_p);
			end if;
		else
			CALL pls_proposta_doc_contrato(nr_seq_proposta_p,nr_seq_contrato_w,nm_usuario_p);
		end if;
	end if;
	
	open C03;
	loop
	fetch C03 into
		nr_seq_bonificacao_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		if (coalesce(nr_seq_bonificacao_w,0) <> 0) then
			insert	into pls_bonificacao_vinculo(
				nr_sequencia, nr_seq_bonificacao, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_contrato)
			values (	nextval('pls_bonificacao_vinculo_seq'), nr_seq_bonificacao_w, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_contrato_w);
		end if;
		end;
	end loop;
	close C03;
	
	open C04;
	loop
	fetch C04 into
		nr_seq_carencia_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		select	nr_seq_tipo_carencia,
			qt_dias,
			dt_inicio_vigencia,
			nr_seq_grupo_carencia,
			ie_cpt
		into STRICT	nr_seq_tipo_carencia_w,
			qt_dias_w,
			dt_inicio_vigencia_carencia_w,
			nr_seq_grupo_carencia_w,
			ie_cpt_w
		from	pls_carencia
		where	nr_sequencia	= nr_seq_carencia_w;
		
		if	((nr_seq_tipo_carencia_w IS NOT NULL AND nr_seq_tipo_carencia_w::text <> '') or (nr_seq_grupo_carencia_w IS NOT NULL AND nr_seq_grupo_carencia_w::text <> '')) then
			insert into pls_carencia(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_contrato,nr_seq_tipo_carencia,qt_dias,dt_inicio_vigencia,ie_isencao_carencia,
					ds_observacao,ie_origem_carencia_benef,
					nr_seq_grupo_carencia, ie_cpt, dt_fim_vigencia)
			values (	nextval('pls_carencia_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_contrato_w,nr_seq_tipo_carencia_w,qt_dias_w,dt_inicio_vigencia_carencia_w,'N',
					'Carencia gerada atraves da proposta de adesao: ' ||nr_seq_proposta_p,'P',
					nr_seq_grupo_carencia_w, ie_cpt_w, (dt_inicio_vigencia_carencia_w + qt_dias_w));
		end if;
		end;
	end loop;
	close C04;
	end;
end loop;
close C01;

/* insere docs enviados pelo portal no contrato - se for inclusao por lote */

begin
select	nr_seq_lote_inclusao
into STRICT 	nr_seq_lote_inclusao_w	
from	pls_inclusao_beneficiario
where	nr_seq_proposta	= nr_seq_proposta_p
group by nr_seq_lote_inclusao;
exception
when others then
	nr_seq_lote_inclusao_w := 0;
end;

if (nr_seq_lote_inclusao_w > 0) then
	open C09;
	loop
	fetch C09 into
		ds_anexo_w,
		nr_seq_tipo_doc_w,
		ie_apresenta_portal_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin
			insert into pls_contrato_doc_arq(nr_sequencia, dt_atualizacao, nm_usuario, nr_seq_documento, ds_arquivo,
				 dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_contrato, nr_seq_tipo_documento, ie_apresenta_portal
				)
			values (nextval('pls_contrato_doc_arq_seq'), clock_timestamp(), nm_usuario_p, nr_seq_tipo_doc_w, ds_anexo_w,
				 clock_timestamp(), nm_usuario_p, nr_seq_contrato_w, null, ie_apresenta_portal_w
				);
		end;
	end loop;
	close C09;
end if;

for r_c10_w in C10 loop
	begin
		insert into pls_contrato_doc_arq(nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			 ds_arquivo,nm_arquivo,nr_seq_contrato,dt_documento,nr_seq_tipo_documento,
			 ds_observacao)
		values (nextval('pls_contrato_doc_arq_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
			 r_c10_w.ds_anexo, r_c10_w.nm_arquivo, nr_seq_contrato_w,r_c10_w.dt_anexo,r_c10_w.nr_seq_tipo_documento,
			 wheb_mensagem_pck.get_texto(1164919, 'NR_SEQ_PROPOSTA='||nr_seq_proposta_p));
	end;
end loop;

if (ie_tipo_proposta_w in (1,3,7)) then
	if (ie_apropriacao_copartic_w = 'S') then
		open C08;
		loop
		fetch C08 into
			nr_seq_regra_copartic_w;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			begin
			select	nextval('pls_regra_copartic_seq')
			into STRICT	nr_seq_regra_copartic_nova_w
			;
			
			insert	into	pls_regra_copartic(	nr_sequencia,
					nr_seq_contrato,
					nr_seq_tipo_coparticipacao,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_inicio_vigencia,
					ie_tipo_atendimento,
					vl_maximo_copartic,
					ie_beneficiario,
					ie_prestador,
					ie_conta_medica,
					ie_utilizacao,
					ie_guia,
					ie_forma_cobr_internacao,
					nr_ordem_prioridade)
				(SELECT	nr_seq_regra_copartic_nova_w,
					nr_seq_contrato_w,
					nr_seq_tipo_coparticipacao,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					dt_inicio_proposta_w,
					ie_tipo_atendimento,
					vl_maximo_copartic,
					ie_beneficiario,
					ie_prestador,
					ie_conta_medica,
					ie_utilizacao,
					ie_guia,
					coalesce(ie_forma_cobr_internacao,'I'),
					nr_ordem_prioridade
				from	pls_regra_copartic
				where	nr_sequencia	= nr_seq_regra_copartic_w);
			
			CALL pls_copiar_itens_regra_copart(nr_seq_regra_copartic_w, nr_seq_regra_copartic_nova_w, nm_usuario_p, 'N');
			end;
		end loop;
		close C08;
	else
		open C06;
		loop
		fetch C06 into
			nr_seq_regra_coparticipacao_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin
			insert into pls_regra_coparticipacao(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_seq_tipo_coparticipacao,qt_eventos_minimo,qt_meses_intervalo,ie_tipo_data_consistencia,ie_tipo_atendimento,
						ie_prestador_cooperado,dt_inicio_vigencia,dt_fim_vigencia,dt_contrato_de,dt_contrato_ate,qt_idade_min,
						qt_idade_max,ie_titularidade,ie_tipo_parentesco,qt_ocorrencias,ie_tipo_ocorrencia,
						qt_diaria_inicial,qt_diaria_final,qt_ocorrencia_grupo_serv,qt_periodo_ocor,ie_tipo_periodo_ocor,
						nr_seq_grupo_serv,cd_procedimento,tx_coparticipacao,vl_maximo,vl_coparticipacao,
						ie_reajuste,nr_seq_contrato,ie_situacao,nr_seq_prestador,nr_seq_tipo_prestador,
						ie_incide_vl_fixo_cta,ie_inc_demais_itens, ie_incidencia_psiquiatria)
					(SELECT	nextval('pls_regra_coparticipacao_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_seq_tipo_coparticipacao,qt_eventos_minimo,qt_meses_intervalo,ie_tipo_data_consistencia,ie_tipo_atendimento,
						ie_prestador_cooperado,dt_inicio_vigencia,dt_fim_vigencia,dt_contrato_de,dt_contrato_ate,qt_idade_min,
						qt_idade_max,ie_titularidade,ie_tipo_parentesco,qt_ocorrencias,ie_tipo_ocorrencia,
						qt_diaria_inicial,qt_diaria_final,qt_ocorrencia_grupo_serv,qt_periodo_ocor,ie_tipo_periodo_ocor,
						nr_seq_grupo_serv,cd_procedimento,tx_coparticipacao,vl_maximo,vl_coparticipacao,
						ie_reajuste,nr_seq_contrato_w,'A',nr_seq_prestador,nr_seq_tipo_prestador,
						ie_incide_vl_fixo_cta, ie_inc_demais_itens, ie_incidencia_psiquiatria
					from	pls_regra_coparticipacao
					where	nr_sequencia = nr_seq_regra_coparticipacao_w);
			end;
		end loop;
		close C06;
	end if;
end if;

if (ie_tipo_proposta_w in (3,4,7,8)) then	
	qt_vidas_contrato_w	:= pls_obter_qt_vidas_proposta(nr_seq_proposta_p,null);
	
	open C07;
	loop
	fetch C07 into
		nr_seq_segurado_w,
		nr_seq_proposta_benef_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin
		CALL pls_isentar_cpt_benef(nr_seq_segurado_w, qt_vidas_contrato_w, 'N', nm_usuario_p, cd_estabelecimento_p);
		end;
	end loop;
	close C07;
end if;



update	pls_proposta_adesao
set	ie_status	= 'T'
where	nr_sequencia	= nr_seq_proposta_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_proposta_gerar_contrato ( nr_seq_proposta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

