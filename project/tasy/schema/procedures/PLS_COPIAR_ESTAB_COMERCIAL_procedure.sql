-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_estab_comercial ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_solic_comercial_w	bigint;
nr_seq_solic_comercial_novo_w	bigint;
qt_estabelcimento_w		bigint;
nr_seq_agente_motivador_ant_w	bigint;
nr_motivo_reprovacao_ant_w	bigint;
nr_seq_agente_motivador_novo_w	bigint;
nr_motivo_reprovacao_novo_w	bigint;
ie_tipo_atividade_solic_ant_w	bigint;
ie_tipo_atividade_solic_novo_w	bigint;

nr_seq_cliente_w		bigint;
ie_solicitacao_comercial_w	varchar(1);
nr_seq_cliente_novo_w		bigint;
nr_seq_mt_cancelamento_ant_w 	bigint;
nr_seq_mt_cancelamento_novo_w	bigint;
ie_tipo_atividade_comer_ant_w	bigint;
ie_tipo_atividade_comer_novo_w	bigint;
nr_seq_solicitacao_ant_w	bigint;
nr_seq_solicitacao_novo_w	bigint;

nr_seq_bonificacao_w		bigint;
nr_seq_comercial_documento_w	bigint;
nr_seq_comercial_empresa_w	bigint;
nr_seq_comercial_envio_w	bigint;
nr_seq_comercial_historico_w	bigint;
nr_seq_comercial_vendedor_w	bigint;
nr_seq_solicitacao_vendedor_w	bigint;
nr_seq_vendedor_soli_ant_w	bigint;
nr_seq_vendedor_vinc_ant_w	bigint;
nr_seq_vendedor_soli_novo_w	bigint;
nr_seq_vendedor_vinc_novo_w	bigint;
nr_seq_vendedor_canal_ant_w	bigint;
nr_seq_vendedor_canal_novo_w	bigint;

nr_seq_solicitacao_simulacao_w	bigint;
nr_seq_solicit_simul_novo_w	bigint;
nr_seq_simulacao_individual_w	bigint;
nr_seq_simulacao_coletivo_w	bigint;

nr_seq_solcitacao_empresa_w	bigint;

nr_seq_regra_atend_w		bigint;
nr_seq_regra_vend_w		bigint;
nr_seq_regra_atuacao_venda_w	bigint;
nr_seq_regra_venda_novo_w	bigint;
nr_seq_area_atuacao_local_w	bigint;
qt_registro_w			bigint;

C00 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_solicitacao_comercial
	where	cd_estabelecimento	= cd_estab_origem_p;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_comercial_cliente
	where	cd_estabelecimento 	= cd_estab_origem_p;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_bonificacao_vinculo
	where	nr_seq_cliente	= nr_seq_cliente_w;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_comercial_documento
	where	nr_seq_cliente	= nr_seq_cliente_w;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_comercial_empresa
	where	nr_seq_cliente	= nr_seq_cliente_w;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_comercial_envio
	where	nr_seq_cliente	= nr_seq_cliente_w;

C06 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_comercial_historico
	where	nr_seq_cliente	= nr_seq_cliente_w;

C07 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_solicitacao_vendedor
	where	nr_seq_cliente	= nr_seq_cliente_w;

C08 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_solicitacao_vendedor
	where	nr_seq_solicitacao	= nr_seq_solic_comercial_w;

C09 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_simulacao_preco
	where	nr_seq_solicitacao	= nr_seq_solic_comercial_w;

C10 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_simulpreco_individual
	where	nr_seq_simulacao	= nr_seq_solicitacao_simulacao_w;

C11 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_simulpreco_coletivo
	where	nr_seq_simulacao	= nr_seq_solicitacao_simulacao_w;

C12 CURSOR FOR
	SELECT	nr_sequencia,
		ds_historico,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nm_usuario_historico,
		dt_programacao,
		dt_liberacao,
		nm_usuario_liberacao,
		dt_realizacao,
		dt_historico
	from	pls_solicitacao_historico
	where	nr_seq_solicitacao	= nr_seq_solic_comercial_w;

C13 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_comercial_empresa
	where	nr_seq_solicitacao	= nr_seq_solic_comercial_w;

C14 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_solicitacao_regra_vend
	where	cd_estabelecimento	= cd_estab_origem_p;

C15 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_solicitacao_regra_aten
	where	cd_estabelecimento	= cd_estab_origem_p;

C16 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_area_atuacao_venda
	where	cd_estabelecimento	= cd_estab_origem_p;

C17 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_area_atuacao_local
	where	nr_seq_area	= nr_seq_regra_atuacao_venda_w;

BEGIN

select	count(*)
into STRICT	qt_estabelcimento_w
from	pls_solicitacao_comercial
where	cd_estabelecimento	= cd_estab_destino_p;

if (qt_estabelcimento_w = 0) then
	open C00;
	loop
	fetch C00 into
		nr_seq_solic_comercial_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin

		select	nr_seq_agente_motivador,
			nr_seq_motivo_reprovacao
		into STRICT	nr_seq_agente_motivador_ant_w,
			nr_motivo_reprovacao_ant_w
		from	pls_solicitacao_comercial
		where	nr_sequencia	=  nr_seq_solic_comercial_w;

		begin
		select	nr_sequencia
		into STRICT	nr_seq_agente_motivador_novo_w
		from	pls_agente_motivador
		where	nr_seq_agente_motiv_ant	= nr_seq_agente_motivador_ant_w;
		exception
		when others then
			nr_seq_agente_motivador_novo_w	:= null;
		end;

		begin
		select	nr_sequencia
		into STRICT	nr_motivo_reprovacao_novo_w
		from	pls_motivo_reprovacao_lead
		where	nr_seq_motivo_ant	= nr_motivo_reprovacao_ant_w;
		exception
		when others then
			nr_motivo_reprovacao_novo_w	:= null;
		end;

		select	nextval('pls_solicitacao_comercial_seq')
		into STRICT	nr_seq_solic_comercial_novo_w
		;

		insert into	pls_solicitacao_comercial(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
									ie_status,nm_pessoa_fisica,dt_nascimento,nr_telefone,ds_email,nr_seq_simul_preco,
									dt_solicitacao,ie_origem_solicitacao,ie_tipo_contratacao,nr_cpf,cd_cgc,nr_ddi,
									nr_ddd,sg_uf_municipio,cd_municipio_ibge,cd_nacionalidade,nr_reg_geral_estrang,ds_observacao,
									nr_seq_motivo_reprovacao,nr_seq_agente_motivador,nm_contato,ie_etapa_solicitacao,cd_cnpj_vinculado,cd_pf_vinculado,
									dt_efetivacao,nr_seq_segurado,nr_celular,qt_funcionarios,ds_endereco,nr_endereco,ds_complemento,
									cd_cep,ds_bairro,dt_aprovacao,dt_reprovacao,nr_seq_contrato,nr_atendimento,
									nr_atend_pls,nr_seq_segurado_indic,nr_seq_pagador_indic,nr_seq_evento_atend,nr_seq_solicitacao_ant)
								(SELECT	nr_seq_solic_comercial_novo_w,clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
									ie_status,nm_pessoa_fisica,dt_nascimento,nr_telefone,ds_email,nr_seq_simul_preco,
									dt_solicitacao,ie_origem_solicitacao,ie_tipo_contratacao,nr_cpf,cd_cgc,nr_ddi,
									nr_ddd,sg_uf_municipio,cd_municipio_ibge,cd_nacionalidade,nr_reg_geral_estrang,ds_observacao,
									nr_motivo_reprovacao_novo_w,nr_seq_agente_motivador_novo_w,nm_contato,ie_etapa_solicitacao,cd_cnpj_vinculado,cd_pf_vinculado,
									dt_efetivacao,nr_seq_segurado,nr_celular,qt_funcionarios,ds_endereco,nr_endereco,ds_complemento,
									cd_cep,ds_bairro,dt_aprovacao,dt_reprovacao,nr_seq_contrato,nr_atendimento,
									nr_atend_pls,nr_seq_segurado_indic,nr_seq_pagador_indic,nr_seq_evento_atend,nr_seq_solic_comercial_w
								from	pls_solicitacao_comercial
								where	nr_sequencia	= nr_seq_solic_comercial_w);
		open C08;
		loop
		fetch C08 into
			nr_seq_solicitacao_vendedor_w;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			begin

			select	nr_seq_vendedor_canal,
				nr_seq_vendedor_vinculado
			into STRICT	nr_seq_vendedor_soli_ant_w,
				nr_seq_vendedor_vinc_ant_w
			from	pls_solicitacao_vendedor
			where	nr_sequencia	= nr_seq_solicitacao_vendedor_w;

			begin

			select	nr_sequencia
			into STRICT	nr_seq_vendedor_soli_novo_w
			from	pls_vendedor
			where	nr_seq_vendedor_ant	= nr_seq_vendedor_soli_ant_w;
			exception
			when others then
				nr_seq_vendedor_soli_novo_w	:= null;
			end;

			begin

			select	nr_sequencia
			into STRICT	nr_seq_vendedor_vinc_novo_w
			from	pls_vendedor_vinculado
			where	nr_seq_vinculo_ant	= nr_seq_vendedor_vinc_ant_w;
			exception
			when others then
				nr_seq_vendedor_vinc_novo_w	:= null;
			end;

			insert into pls_solicitacao_vendedor(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
									nr_seq_solicitacao,nr_seq_vendedor_canal,dt_inicio_vigencia,dt_fim_vigencia,qt_dias_efetivacao,nr_seq_vendedor_vinculado)
								(SELECT	nextval('pls_solicitacao_vendedor_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
									nr_seq_solic_comercial_novo_w,nr_seq_vendedor_soli_novo_w,dt_inicio_vigencia,dt_fim_vigencia,qt_dias_efetivacao,nr_seq_vendedor_vinc_novo_w
								from	pls_solicitacao_vendedor
								where	nr_sequencia	= nr_seq_solicitacao_vendedor_w);
			end;
		end loop;
		close C08;

		open C09;
		loop
		fetch C09 into
			nr_seq_solicitacao_simulacao_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
			begin

			select	nextval('pls_simulacao_preco_seq')
			into STRICT	nr_seq_solicit_simul_novo_w
			;

			insert into pls_simulacao_preco(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
									nr_seq_solicitacao,nr_seq_produto,nr_seq_tabela,ie_tipo_contratacao,vl_simulacao,nr_seq_contrato,
									dt_simulacao,nr_seq_proposta,ie_tipo_processo,nm_pessoa,dt_nascimento,nr_telefone,
									ds_email,tx_desconto)
								(SELECT	nr_seq_solicit_simul_novo_w,clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
									nr_seq_solic_comercial_novo_w,nr_seq_produto,nr_seq_tabela,ie_tipo_contratacao,vl_simulacao,nr_seq_contrato,
									dt_simulacao,nr_seq_proposta,ie_tipo_processo,nm_pessoa,dt_nascimento,nr_telefone,
									ds_email,tx_desconto
								from	pls_simulacao_preco
								where	nr_sequencia	= nr_seq_solicitacao_simulacao_w);

			open C10;
			loop
			fetch C10 into
				nr_seq_simulacao_individual_w;
			EXIT WHEN NOT FOUND; /* apply on C10 */
				begin

				insert into pls_simulpreco_individual(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_simulacao,
										qt_idade,nm_beneficiario,ie_tipo_benef,vl_mensalidade,nr_seq_produto,nr_seq_tabela,
										nr_seq_parentesco,tx_desconto,nr_seq_regra_desconto,vl_mensal_sem_desc)
									(SELECT	nextval('pls_simulpreco_individual_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_solicit_simul_novo_w,
										qt_idade,nm_beneficiario,ie_tipo_benef,vl_mensalidade,nr_seq_produto,nr_seq_tabela,
										nr_seq_parentesco,tx_desconto,nr_seq_regra_desconto,vl_mensal_sem_desc
									from	pls_simulpreco_individual
									where	nr_sequencia	= nr_seq_simulacao_individual_w);
				end;
			end loop;
			close C10;

			open C11;
			loop
			fetch C11 into
				nr_seq_simulacao_coletivo_w;
			EXIT WHEN NOT FOUND; /* apply on C11 */
				begin

				insert into pls_simulpreco_coletivo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_simulacao,
										qt_idade_inicial,qt_idade_final,qt_beneficiario,vl_mensalidade,nr_seq_plano,nr_seq_tabela)
									(SELECT	nextval('pls_simulpreco_coletivo_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_solicit_simul_novo_w,
										qt_idade_inicial,qt_idade_final,qt_beneficiario,vl_mensalidade,nr_seq_plano,nr_seq_tabela
									from	pls_simulpreco_coletivo
									where	nr_sequencia	= nr_seq_simulacao_coletivo_w);
				end;
			end loop;
			close C11;
			end;
		end loop;
		close C09;

		for r_c12_w in C12 loop
			begin
			select	ie_tipo_atividade
			into STRICT	ie_tipo_atividade_solic_ant_w
			from	pls_solicitacao_historico
			where	nr_sequencia	= r_c12_w.nr_sequencia;

			begin
			select	nr_sequencia
			into STRICT	ie_tipo_atividade_solic_novo_w
			from	pls_tipo_atividade
			where	nr_seq_tipo_ativ_ant	= ie_tipo_atividade_solic_ant_w;
			exception
			when others then
				ie_tipo_atividade_solic_novo_w := ie_tipo_atividade_solic_ant_w;
			end;

			insert into pls_solicitacao_historico(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_solicitacao,
									ie_tipo_atividade,nm_usuario_historico,ds_historico,dt_programacao,dt_liberacao,nm_usuario_liberacao,
									dt_realizacao,dt_historico)
							values (	nextval('pls_solicitacao_historico_seq'),clock_timestamp(),nm_usuario_p,r_c12_w.dt_atualizacao_nrec,r_c12_w.nm_usuario_nrec,nr_seq_solic_comercial_novo_w,
									ie_tipo_atividade_solic_novo_w,r_c12_w.nm_usuario_historico,r_c12_w.ds_historico,r_c12_w.dt_programacao,r_c12_w.dt_liberacao,r_c12_w.nm_usuario_liberacao,
									r_c12_w.dt_realizacao,r_c12_w.dt_historico);
			end;
		end loop;

		open C13;
		loop
		fetch C13 into
			nr_seq_solcitacao_empresa_w;
		EXIT WHEN NOT FOUND; /* apply on C13 */
			begin

			insert into pls_comercial_empresa(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_solicitacao,
									nr_seq_empresa_serv,ds_observacao,cd_empresa_ref)
								(SELECT	nextval('pls_comercial_empresa_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_solic_comercial_novo_w,
									nr_seq_empresa_serv,ds_observacao,cd_empresa_ref
								from	pls_comercial_empresa
								where	nr_sequencia	= nr_seq_solcitacao_empresa_w);
			end;
		end loop;
		close C13;

		end;
	end loop;
	close C00;

open C01;
loop
fetch C01 into
	nr_seq_cliente_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin


	select	nr_seq_motivo_cancelamento,
		nr_seq_solicitacao
	into STRICT	nr_seq_mt_cancelamento_ant_w,
		nr_seq_solicitacao_ant_w
	from	pls_comercial_cliente
	where	nr_sequencia	= nr_seq_cliente_w;

	begin
	select	nr_sequencia
	into STRICT	nr_seq_mt_cancelamento_novo_w
	from	pls_motivo_cancel_prospect
	where	nr_seq_motivo_ant	= nr_seq_mt_cancelamento_ant_w;
	exception
	when others then
		nr_seq_mt_cancelamento_novo_w	:= null;
	end;

	begin
	select	nr_sequencia
	into STRICT	nr_seq_solicitacao_novo_w
	from	pls_solicitacao_comercial
	where	nr_seq_solicitacao_ant	= nr_seq_solicitacao_ant_w;
	exception
	when others then
		nr_seq_solicitacao_novo_w	:= null;
	end;

	select	nextval('pls_comercial_cliente_seq')
	into STRICT	nr_seq_cliente_novo_w
	;

	insert into pls_comercial_cliente(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
							cd_pessoa_fisica,cd_cgc,ie_classificacao,ie_fase_venda,nr_seq_solicitacao,dt_aprovacao,
							dt_proposta,dt_efetivacao,ie_status,nr_seq_motivo_cancelamento,ie_origem_cliente,nr_seq_segurado,
							nr_seq_contrato,nr_seq_segurado_indic,nr_seq_pagador_indic,nr_seq_cliente_ant)
						(SELECT	nr_seq_cliente_novo_w,	clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
							cd_pessoa_fisica,cd_cgc,ie_classificacao,ie_fase_venda,nr_seq_solicitacao_novo_w,dt_aprovacao,
							dt_proposta,dt_efetivacao,ie_status,nr_seq_mt_cancelamento_novo_w,ie_origem_cliente,nr_seq_segurado,
							nr_seq_contrato,nr_seq_segurado_indic,nr_seq_pagador_indic,nr_seq_cliente_w
						from	pls_comercial_cliente
						where	nr_sequencia	= nr_seq_cliente_w);

	open C02;
	loop
	fetch C02 into
		nr_seq_bonificacao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		insert into pls_bonificacao_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_cliente,
								tx_bonificacao,vl_bonificacao,dt_inicio_vigencia,dt_fim_vigencia)
							(SELECT	nextval('pls_bonificacao_vinculo_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_cliente_novo_w,
								tx_bonificacao,vl_bonificacao,dt_inicio_vigencia,dt_fim_vigencia
							from	pls_bonificacao_vinculo
							where	nr_sequencia	= nr_seq_bonificacao_w);
		end;
	end loop;
	close C02;

	open C03;
	loop
	fetch C03 into
		nr_seq_comercial_documento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		insert into pls_comercial_documento(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_cliente,
								ds_titulo,ds_arquivo,ds_observacao,ie_anexar)
							(SELECT	nextval('pls_comercial_documento_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_cliente_novo_w,
								ds_titulo,ds_arquivo,ds_observacao,ie_anexar
							from	pls_comercial_documento
							where	nr_sequencia	= nr_seq_comercial_documento_w);
		end;
	end loop;
	close C03;

	open C04;
	loop
	fetch C04 into
		nr_seq_comercial_empresa_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin

		insert into pls_comercial_empresa(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_cliente,
								nr_seq_empresa_serv,ds_observacao,cd_empresa_ref)
							(SELECT	nextval('pls_comercial_empresa_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_cliente_novo_w,
								nr_seq_empresa_serv,ds_observacao,cd_empresa_ref
							from	pls_comercial_empresa
							where	nr_sequencia	= nr_seq_comercial_empresa_w);
		end;
	end loop;
	close C04;

	open C05;
	loop
	fetch C05 into
		nr_seq_comercial_envio_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin

		insert into pls_comercial_envio(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
								nr_seq_cliente,dt_envio,ds_destino,ds_observacao,ds_anexo)
							(SELECT	nextval('pls_comercial_envio_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
								nr_seq_cliente_novo_w,dt_envio,ds_destino,ds_observacao,ds_anexo
							from	pls_comercial_envio
							where	nr_sequencia	= nr_seq_comercial_envio_w);
		end;
	end loop;
	close C05;

	open C06;
	loop
	fetch C06 into
		nr_seq_comercial_historico_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin

		select	ie_tipo_atividade
		into STRICT	ie_tipo_atividade_comer_ant_w
		from	pls_comercial_historico
		where	nr_sequencia	= nr_seq_comercial_historico_w;

		begin
		select	nr_sequencia
		into STRICT	ie_tipo_atividade_comer_novo_w
		from	pls_tipo_atividade
		where	nr_seq_tipo_ativ_ant	= ie_tipo_atividade_comer_ant_w;
		exception
		when others then
			ie_tipo_atividade_comer_novo_w := ie_tipo_atividade_comer_ant_w;
		end;

		insert into pls_comercial_historico(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
								nr_seq_cliente,ds_titulo,dt_liberacao,nm_usuario_historico,ie_tipo_atividade,dt_programacao,
								dt_historico,dt_realizacao)
							(SELECT	nextval('pls_comercial_historico_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
								nr_seq_cliente_novo_w,ds_titulo,dt_liberacao,nm_usuario_historico,ie_tipo_atividade_comer_novo_w,dt_programacao,
								dt_historico,dt_realizacao
							from	pls_comercial_historico
							where	nr_sequencia	= nr_seq_comercial_historico_w);
		end;
	end loop;
	close C06;

	open C07;
	loop
	fetch C07 into
		nr_seq_comercial_vendedor_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin

		begin
		select	nr_seq_vendedor_canal
		into STRICT	nr_seq_vendedor_canal_ant_w
		from	pls_solicitacao_vendedor
		where	nr_sequencia	= nr_seq_comercial_vendedor_w;
		exception
		when others then
			nr_seq_vendedor_canal_ant_w	:= null;
		end;

		begin
		select	nr_sequencia
		into STRICT	nr_seq_vendedor_canal_novo_w
		from	pls_vendedor
		where	nr_seq_vendedor_ant	= nr_seq_vendedor_canal_ant_w;
		exception
		when others then
			nr_seq_vendedor_canal_novo_w	:= null;
		end;

		insert into pls_solicitacao_vendedor(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
								nr_seq_cliente,nr_seq_vendedor_canal,dt_inicio_vigencia,dt_fim_vigencia,qt_dias_efetivacao)
							(SELECT	nextval('pls_solicitacao_vendedor_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
								nr_seq_cliente_novo_w,nr_seq_vendedor_canal_novo_w,dt_inicio_vigencia,dt_fim_vigencia,qt_dias_efetivacao
							from	pls_solicitacao_vendedor
							where	nr_sequencia	= nr_seq_comercial_vendedor_w);
		end;
	end loop;
	close C07;
	end;
end loop;
close C01;


end if;
open C14;
loop
fetch C14 into
	nr_seq_regra_atend_w;
EXIT WHEN NOT FOUND; /* apply on C14 */
	begin

	select	count(*)
	into STRICT	qt_registro_w
	from	pls_solicitacao_regra_aten
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_regra_atend_w;

	if (qt_registro_w	= 0) then
		insert into pls_solicitacao_regra_aten(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
									nr_seq_vendedor,dt_solicitacao,ie_situacao,ie_escala, nr_seq_anterior)
								(SELECT	nextval('pls_solicitacao_regra_aten_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
									nr_seq_vendedor,dt_solicitacao,ie_situacao,ie_escala, nr_seq_regra_atend_w
								from	pls_solicitacao_regra_aten
								where	nr_sequencia	= nr_seq_regra_atend_w);
	end if;

	end;
end loop;
close C14;

open C15;
loop
fetch C15 into
	nr_seq_regra_vend_w;
EXIT WHEN NOT FOUND; /* apply on C15 */
	begin

	select	count(*)
	into STRICT	qt_registro_w
	from	pls_solicitacao_regra_vend
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_regra_vend_w;

	if (qt_registro_w	= 0) then
		insert into pls_solicitacao_regra_vend(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
									ie_tipo_canal_venda,ie_situacao,ie_tipo_regra,qt_dias_efetivacao, nr_seq_anterior)
								(SELECT	nextval('pls_solicitacao_regra_vend_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
									ie_tipo_canal_venda,ie_situacao,ie_tipo_regra,qt_dias_efetivacao, nr_seq_regra_vend_w
								from	pls_solicitacao_regra_vend
								where	nr_sequencia	= nr_seq_regra_vend_w);
	end if;

	end;
end loop;
close C15;

open C16;
loop
fetch C16 into
	nr_seq_regra_atuacao_venda_w;
EXIT WHEN NOT FOUND; /* apply on C16 */
	begin

	select	nextval('pls_area_atuacao_venda_seq')
	into STRICT	nr_seq_regra_venda_novo_w
	;

	select	count(*)
	into STRICT	qt_registro_w
	from	pls_area_atuacao_venda
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_regra_atuacao_venda_w;

	if (qt_registro_w	= 0) then
		insert into pls_area_atuacao_venda(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
								ds_area_atuacao,ie_situacao, nr_seq_anterior)
							(SELECT	nr_seq_regra_venda_novo_w,clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
								ds_area_atuacao,ie_situacao, nr_seq_regra_atuacao_venda_w
							from	pls_area_atuacao_venda
							where	nr_sequencia	= nr_seq_regra_atuacao_venda_w);

		open C17;
		loop
		fetch C17 into
			nr_seq_area_atuacao_local_w;
		EXIT WHEN NOT FOUND; /* apply on C17 */
			begin

			insert into pls_area_atuacao_local(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_area,
									ie_situacao,cd_cep,ds_endereco,ds_bairro,ds_municipio,sg_estado,
									ds_complemento,nr_endereco)
								(SELECT	nextval('pls_area_atuacao_local_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_regra_venda_novo_w,
									ie_situacao,cd_cep,ds_endereco,ds_bairro,ds_municipio,sg_estado,
									ds_complemento,nr_endereco
								from	pls_area_atuacao_local
								where	nr_sequencia	= nr_seq_area_atuacao_local_w);
			end;
		end loop;
		close C17;
	end if;

	end;
end loop;
close C16;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_estab_comercial ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

