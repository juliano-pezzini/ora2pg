-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_regra_duplicidade_pf_js ( cd_pessoa_fisica_p text, nm_pessoa_fisica_p text, dt_nascimento_p timestamp, nm_mae_p text, cd_estabelecimento_p bigint, ie_acao_p INOUT text, cd_perfil_p bigint) AS $body$
DECLARE

 
nm_pessoa_param_w	varchar(255);
nm_mae_param_w		varchar(255);
cd_pessoa_duplic_w	varchar(255);

ie_acao_w		varchar(10);
ie_nome_mae_w		varchar(10);
ie_dt_nascimento_w	varchar(10);

c01 CURSOR FOR 
SELECT	max(a.cd_pessoa_fisica) 
from	pessoa_fisica a 
where	a.cd_pessoa_fisica 	<> cd_pessoa_fisica_p 
and	a.nm_pessoa_pesquisa	= nm_pessoa_param_w 
and	ie_nome_mae_w		= 'N' 
and	ie_dt_nascimento_w	= 'N' 

union
 
SELECT	max(a.cd_pessoa_fisica) 
from	pessoa_fisica a 
where	a.cd_pessoa_fisica 	<> cd_pessoa_fisica_p 
and	a.nm_pessoa_pesquisa	= nm_pessoa_param_w 
and	a.dt_nascimento		= dt_nascimento_p 
and	ie_dt_nascimento_w	= 'S' 
and	ie_nome_mae_w		= 'N' 

union
 
select	max(a.cd_pessoa_fisica) 
from	compl_pessoa_fisica b, 
	pessoa_fisica a 
where	b.ie_tipo_complemento	= 5 
and	b.cd_pessoa_fisica	= a.cd_pessoa_fisica 
and	a.cd_pessoa_fisica 	<> cd_pessoa_fisica_p 
and	a.nm_pessoa_pesquisa	= nm_pessoa_param_w 
and	b.nm_contato_pesquisa	= nm_mae_param_w 
and	ie_nome_mae_w		= 'S' 
and	ie_dt_nascimento_w	= 'N' 

union
 
select	max(a.cd_pessoa_fisica) 
from	compl_pessoa_fisica b, 
	pessoa_fisica a 
where	b.ie_tipo_complemento	= 5 
and	b.cd_pessoa_fisica	= a.cd_pessoa_fisica 
and	a.cd_pessoa_fisica 	<> cd_pessoa_fisica_p 
and	a.dt_nascimento		= dt_nascimento_p 
and	a.nm_pessoa_pesquisa	= nm_pessoa_param_w 
and	b.nm_contato_pesquisa	= nm_mae_param_w 
and	ie_nome_mae_w		= 'S' 
and	ie_dt_nascimento_w	= 'S';

c02 CURSOR FOR 
SELECT	ie_acao, 
	ie_nome_mae, 
	ie_dt_nascimento 
from	regra_duplic_pf 
where	cd_estabelecimento	= cd_estabelecimento_p 
and	coalesce(cd_perfil, cd_perfil_p) = cd_perfil_p 
order 	by coalesce(cd_perfil, 0);

 

BEGIN 
 
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then 
 
	open c02;
	loop 
	fetch c02 into 
		ie_acao_w, 
		ie_nome_mae_w, 
		ie_dt_nascimento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	end loop;
	close c02;
	 
	nm_pessoa_param_w	:= substr(padronizar_nome(nm_pessoa_fisica_p),1,60);
	nm_mae_param_w		:= substr(padronizar_nome(obter_compl_pf(cd_pessoa_fisica_p,5,'N')),1,60);
 
	if (ie_acao_w IS NOT NULL AND ie_acao_w::text <> '') then 
 
		open c01;
		loop 
		fetch c01 into 
			cd_pessoa_duplic_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
 
			if (cd_pessoa_duplic_w IS NOT NULL AND cd_pessoa_duplic_w::text <> '') then 
				ie_acao_p	:= ie_acao_w;
			end if;
 
		end loop;
		close c01;
 
	end if;
 
end if;
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_regra_duplicidade_pf_js ( cd_pessoa_fisica_p text, nm_pessoa_fisica_p text, dt_nascimento_p timestamp, nm_mae_p text, cd_estabelecimento_p bigint, ie_acao_p INOUT text, cd_perfil_p bigint) FROM PUBLIC;

