-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_sp_prescr_proc ( nr_prescricao_p bigint, nr_prescr_sae_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_proc_w		bigint;
cd_setor_prescr_w	integer;
ie_profissional_w	varchar(15);
nr_seq_equipe_w		bigint;
nr_seq_prescr_w		bigint;
nr_sequencia_w		bigint;

C01 CURSOR FOR /*Exames e procedimentos internos*/
SELECT	nr_seq_proc_interno,
	nr_sequencia,
	cd_setor_atendimento
from	prescr_procedimento
where	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
and	nr_prescricao = nr_prescricao_p
and	(cd_setor_atendimento IS NOT NULL AND cd_setor_atendimento::text <> '')
order by nr_seq_proc_interno;

C02 CURSOR FOR /*Exames e procedimentos internos*/
SELECT	ie_profissional
from	proc_interno_prof
where	nr_seq_proc_interno = nr_seq_proc_w
order by ie_profissional;

C03 CURSOR FOR
SELECT	nr_seq_equipe
from	sp_regra_aloc_prof
where	ie_tipo_profissional = ie_profissional_w
and 	((coalesce(cd_setor_atendimento::text, '') = '') or (cd_setor_atendimento = cd_setor_prescr_w))
order by nr_seq_prior;

C04 CURSOR FOR /*SAE*/
SELECT	a.nr_seq_proc,
	a.nr_sequencia,
	b.cd_setor_atendimento
from	pe_prescr_proc a,
	pe_prescricao b
where	a.nr_seq_prescr = b.nr_sequencia
and	a.nr_seq_prescr = nr_prescr_sae_p
and	(b.cd_setor_atendimento IS NOT NULL AND b.cd_setor_atendimento::text <> '')
and	coalesce(b.ie_situacao,'A') = 'A'
order by a.nr_seq_proc;

C05 CURSOR FOR /*SAE*/
SELECT	ie_profissional
from	pe_profissional
where	nr_seq_intervencao = nr_seq_proc_w
order by ie_profissional;


BEGIN
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	open C01;
	loop
	fetch C01 into
		nr_seq_proc_w,
		nr_seq_prescr_w,
		cd_setor_prescr_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		open C02;
		loop
		fetch C02 into
			ie_profissional_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			open C03;
			loop
			fetch C03 into
				nr_seq_equipe_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin

				select	nextval('sp_prescr_proc_seq')
				into STRICT	nr_sequencia_w
				;

				insert	into sp_prescr_proc(
						nr_sequencia,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						nr_prescricao,
						nr_seq_equipe,
						nr_seq_prescr)
					values (nr_sequencia_w,
						 clock_timestamp(),
						 clock_timestamp(),
						 nm_usuario_p,
						 nm_usuario_p,
						 nr_prescricao_p,
						 nr_seq_equipe_w,
						 nr_seq_prescr_w);
				end;
			end loop;
			close C03;
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;

elsif (nr_prescr_sae_p IS NOT NULL AND nr_prescr_sae_p::text <> '') then

	open C04;
	loop
	fetch C04 into
		nr_seq_proc_w,
		nr_seq_prescr_w,
		cd_setor_prescr_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		open C05;
		loop
		fetch C05 into
			ie_profissional_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			open C03;
			loop
			fetch C03 into
				nr_seq_equipe_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin

				select	nextval('sp_prescr_proc_seq')
				into STRICT	nr_sequencia_w
				;

				insert	into sp_prescr_proc(
						nr_sequencia,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						nr_seq_equipe,
						nr_seq_pe_prescr,
						nr_seq_proc_interv)
					values (nr_sequencia_w,
						 clock_timestamp(),
						 clock_timestamp(),
						 nm_usuario_p,
						 nm_usuario_p,
						 nr_seq_equipe_w,
						 nr_prescr_sae_p,
						 nr_seq_prescr_w);
				end;
			end loop;
			close C03;
			end;
		end loop;
		close C05;
		end;
	end loop;
	close C04;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_sp_prescr_proc ( nr_prescricao_p bigint, nr_prescr_sae_p bigint, nm_usuario_p text) FROM PUBLIC;

