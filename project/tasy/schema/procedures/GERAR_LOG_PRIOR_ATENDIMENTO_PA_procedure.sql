-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_log_prior_atendimento_pa ( nr_atendimento_p bigint, ie_ordenacao_p text, qt_horas_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


ds_sql_w		varchar(32000);
guampa_w		varchar(10) := chr(39);
ds_order_by_w		varchar(2000);
retorno_w		integer;
C04			integer;
nr_atendimento_w	bigint;
nr_seq_triagem_w	bigint;
nm_usuario_w		varchar(15);
ds_lista_pac_w		varchar(2000);
nr_seq_triagem_ww	bigint;
ie_param_161_w      varchar(2) := 'N';


BEGIN

select	max(nr_seq_triagem)
into STRICT	nr_seq_triagem_ww
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_p;

ie_param_161_w := Obter_param_Usuario(935, 161, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p, ie_param_161_w);

if (coalesce(ie_param_161_w, 'N') <> 'N') then

ds_sql_w	:=	'	select	a.nr_atendimento,a.nr_seq_triagem,a.nm_usuario, Obter_seq_apres_pa(a.ie_status,a.cd_estabelecimento) NR_SEQ_APRESENT '||
				'	from	PEP_ATENDIMENTO_PS_V a '||
				'	where	a.dt_entrada between :DT_ENTRADA and sysdate '||
				'	and		a.dt_alta_interno = TO_DATE('||guampa_w||'30/12/2999'||guampa_w||','||guampa_w||'dd/mm/yyyy'||guampa_w||') '||
				'	and		a.dt_atend_medico is null '||
				'	and		cd_estabelecimento = :CD_ESTABELECIMENTO '||
				'	and		dt_chamada_paciente is null ';


if (ie_ordenacao_p = 'N') then
	ds_order_by_w	:=' order by dt_entrada ';
elsif (ie_ordenacao_p = 'S') then
	ds_order_by_w	:=' order by ie_prioridade, dt_entrada ';
 elsif (ie_ordenacao_p = 'NUNP') then
	ds_order_by_w	:=' order by ie_prioridade,IE_PRIORIDADE_CLASSIF, dt_entrada';
elsif (ie_ordenacao_p = 'D') then
	ds_order_by_w	:=' order by dt_entrada desc ';
elsif (ie_ordenacao_p = 'P') then
	ds_order_by_w	:=' order by nm_pessoa_fisica ';
elsif (ie_ordenacao_p = 'AC') then
	ds_order_by_w	:=' order by nr_seq_apresent, dt_entrada ';
elsif (ie_ordenacao_p = 'AD') then
	ds_order_by_w	:=' order by nr_seq_apresent, dt_entrada desc ';
elsif (ie_ordenacao_p = 'IC') then
	ds_order_by_w	:=' order by dt_atend_medico, dt_entrada ';
elsif (ie_ordenacao_p = 'FC') then
	ds_order_by_w	:=' order by a.dt_fim_consulta, dt_entrada ';
elsif (ie_ordenacao_p = 'NC') then
	ds_order_by_w	:='order by ie_prioridade, dt_atend_medico desc';
elsif (ie_ordenacao_p = 'ICNUDE') then
	ds_order_by_w	:='ORDER BY dt_atend_medico, ie_sem_prioridade desc, dt_entrada';
elsif (ie_ordenacao_p = 'NA') then
	ds_order_by_w	:='ORDER BY ie_sem_prioridade desc, dt_entrada';
elsif (ie_ordenacao_p = 'NPDE') then
	ds_order_by_w	:='Order by nvl(a.ie_prioridade_classif,0) desc, dt_entrada';
elsif (ie_ordenacao_p = 'CADT') then
	ds_order_by_w	:='Order by IE_CARATER_INTER_SUS, dt_entrada';
elsif (ie_ordenacao_p = 'PHICDE') then
	ds_order_by_w	:='Order by ie_prioridade DESC ,NVL(HR_INICIO_CONSULTA,''23:59'') DESC,dt_entrada';
elsif (ie_ordenacao_p = 'IFPCE') then
	ds_order_by_w	:='Order by decode(dt_atend_medico,null,1,0), decode(dt_fim_triagem,null,1,0), ie_prioridade desc,ie_prioridade_classif,dt_entrada';
end if;

ds_sql_w	:= ds_sql_w||ds_order_by_w;

C04 := DBMS_SQL.OPEN_CURSOR;
DBMS_SQL.PARSE(C04, ds_sql_w, dbms_sql.Native);
DBMS_SQL.DEFINE_COLUMN(C04,1,nr_atendimento_w);
DBMS_SQL.DEFINE_COLUMN(C04,2,nr_seq_triagem_w);
DBMS_SQL.DEFINE_COLUMN(C04,3,nm_usuario_w,80);
DBMS_SQL.BIND_VARIABLE(C04,'CD_ESTABELECIMENTO', cd_estabelecimento_p);
DBMS_SQL.BIND_VARIABLE(C04,'DT_ENTRADA', (clock_timestamp() - (qt_horas_p / 24)));

retorno_w := DBMS_SQL.execute(C04);

while( DBMS_SQL.FETCH_ROWS(C04) > 0 ) loop
	begin

	DBMS_SQL.COLUMN_VALUE(C04,1,nr_atendimento_w);
	DBMS_SQL.COLUMN_VALUE(C04,2,nr_seq_triagem_w);
	DBMS_SQL.COLUMN_VALUE(C04,3,nm_usuario_w);

	if (nr_atendimento_w = nr_atendimento_p) then
		exit;
	end if;

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_atendimento_p	> 0) then
		begin
		
		insert into log_prior_atendimento(
				nr_sequencia,
				dt_Atualizacao,
				dt_Atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				nr_seq_triagem,
				nr_seq_triagem_prior,
				nr_Atendimento,
				nr_Atendimento_prior)

		values (
				nextval('log_prior_atendimento_seq'),
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_w,
				nr_seq_triagem_ww,
				nr_seq_triagem_w,
				nr_atendimento_p,
				nr_atendimento_w);
				
		exception
		when others then
			null;
		end;
	
	end if;
	
	end;

end loop;

DBMS_SQL.CLOSE_CURSOR(C04);

commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_log_prior_atendimento_pa ( nr_atendimento_p bigint, ie_ordenacao_p text, qt_horas_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

