-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_inadimplentes ( dt_inicial_p timestamp, dt_final_p timestamp, ie_situacao_p text, ie_tipo_pessoa_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
dt_referencia_w		timestamp;
nr_titulo_w		bigint;
dt_vencimento_w		timestamp;
dt_mensalidade_w	timestamp;
vl_titulo_w		double precision;
vl_pago_w		double precision;
nr_seq_pagador_w	bigint;
nm_pagador_w		varchar(80);
qt_dias_vencidos_w	bigint;
cd_usuario_plano_w	varchar(30);
vl_saldo_titulo_w	double precision;
nr_seq_segurado_w	bigint;
vl_mensalidade_w	bigint;
vl_coparticipacao_w	bigint;
vl_acordo_w		bigint;
vl_outros_w		bigint;
ie_situacao_titulo_w	varchar(5);
ie_situacao_usuario_w	varchar(5);

/*    IE Situação (contrato)	 
  1 - Em Análise		 
  2 - Aprovado		 
  3 - Rescindido* 
  4 - Cancelado		*/
 
 
c01 CURSOR FOR 
SELECT	a.nr_titulo, 
	a.dt_vencimento, 
	b.dt_referencia, 
	a.vl_titulo, 
	a.vl_titulo - a.vl_saldo_titulo, 
	b.nr_seq_pagador, 
	pls_obter_dados_pagador(b.nr_seq_pagador,'N'), 
	round(dt_final_p - a.dt_pagamento_previsto), 
	pls_obter_carteira_segurado(pls_obter_segurado_pagador(b.nr_seq_pagador)), 
	a.vl_saldo_titulo, 
	pls_obter_segurado_pagador(b.nr_seq_pagador), 
	a.ie_situacao 
from	pls_mensalidade b, 
	titulo_receber a, 
	pls_contrato c 
where	a.nr_seq_mensalidade	= b.nr_sequencia 
and	b.nr_seq_contrato	= c.nr_sequencia 
and	coalesce(a.dt_liquidacao::text, '') = '' 
and	a.dt_vencimento < dt_final_p 
and	obter_saldo_titulo_receber(a.nr_titulo,b.dt_referencia) > 0 
and (CASE WHEN c.ie_situacao='1' THEN 'A' WHEN c.ie_situacao='2' THEN 'A' WHEN c.ie_situacao='3' THEN 'I' WHEN c.ie_situacao='4' THEN 'A' END 	= ie_situacao_p or ie_situacao_p = 'T') 
and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') 
and	exists (SELECT	1 
		from	pls_mensalidade	y, 
			titulo_receber x 
		where	x.nr_seq_mensalidade	= y.nr_sequencia 
		and	y.nr_seq_pagador	= b.nr_seq_pagador 
		and	x.dt_vencimento between trunc(coalesce(dt_inicial_p,clock_timestamp()),'dd') and fim_dia(dt_final_p))		 
		and	ie_tipo_pessoa_p = 'F' 

union all
 
select	a.nr_titulo, 
	a.dt_vencimento, 
	b.dt_referencia, 
	a.vl_titulo, 
	a.vl_titulo - a.vl_saldo_titulo, 
	b.nr_seq_pagador, 
	pls_obter_dados_pagador(b.nr_seq_pagador,'N'), 
	round(dt_final_p - a.dt_pagamento_previsto), 
	pls_obter_carteira_segurado(pls_obter_segurado_pagador(b.nr_seq_pagador)), 
	a.vl_saldo_titulo, 
	null nr_seq_segurado, 
	a.ie_situacao 
from	pls_mensalidade b, 
	titulo_receber a, 
	pls_contrato c 
where	a.nr_seq_mensalidade	= b.nr_sequencia 
and	b.nr_seq_contrato	= c.nr_sequencia 
and	coalesce(a.dt_liquidacao::text, '') = '' 
and	a.dt_vencimento < dt_final_p 
and	obter_saldo_titulo_receber(a.nr_titulo,b.dt_referencia) > 0 
and (CASE WHEN c.ie_situacao='1' THEN 'A' WHEN c.ie_situacao='2' THEN 'A' WHEN c.ie_situacao='3' THEN 'I' WHEN c.ie_situacao='4' THEN 'A' END 	= ie_situacao_p or ie_situacao_p = 'T') 
and	(a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') 
and	exists (select	1 
		from	pls_mensalidade	y, 
			titulo_receber x 
		where	x.nr_seq_mensalidade	= y.nr_sequencia 
		and	y.nr_seq_pagador	= b.nr_seq_pagador 
		and	x.dt_vencimento between trunc(coalesce(dt_inicial_p,clock_timestamp()),'dd') and fim_dia(dt_final_p)) 
and	ie_tipo_pessoa_p = 'J' 

union all
 
select	a.nr_titulo, 
	a.dt_vencimento, 
	a.dt_emissao, 
	a.vl_titulo, 
	a.vl_titulo - a.vl_saldo_titulo, 
	(b.cd_cooperativa)::numeric  nr_seq_pagador, 
	obter_nome_pf_pj(null,a.cd_cgc), 
	round(dt_final_p - a.dt_pagamento_previsto), 
	b.cd_cooperativa, 
	a.vl_saldo_titulo, 
	null nr_seq_segurado, 
	a.ie_situacao 
from	pls_congenere b, 
	titulo_receber a 
where	a.cd_cgc	= b.cd_cgc 
and	coalesce(a.dt_liquidacao::text, '') = '' 
and	a.dt_vencimento < dt_final_p 
and	exists (select	1 
		from	titulo_receber x 
		where	x.cd_cgc	= a.cd_cgc 
		and	x.dt_vencimento between trunc(coalesce(dt_inicial_p,clock_timestamp()),'dd') and fim_dia(dt_final_p)) 
and	ie_tipo_pessoa_p = 'U';


BEGIN 
 
if (dt_final_p IS NOT NULL AND dt_final_p::text <> '') then 
	delete from w_pls_ppsc 
	where	nm_usuario	= nm_usuario_p;
 
	if (ie_tipo_pessoa_p in ('F','J','U')) then 
		open c01;
		loop 
		fetch c01 into	 
			nr_titulo_w, 
			dt_vencimento_w, 
			dt_mensalidade_w, 
			vl_titulo_w, 
			vl_pago_w, 
			nr_seq_pagador_w, 
			nm_pagador_w, 
			qt_dias_vencidos_w, 
			cd_usuario_plano_w, 
			vl_saldo_titulo_w, 
			nr_seq_segurado_w, 
			ie_situacao_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			 
			select	coalesce(sum(vl_item),0) 
			into STRICT	vl_mensalidade_w 
			from	pls_mensalidade_seg_item c, 
				pls_mensalidade_segurado b, 
				pls_segurado a 
			where	a.nr_sequencia		 = b.nr_seq_segurado 
			and	c.nr_seq_mensalidade_seg = b.nr_sequencia 
			and	a.nr_sequencia		 = nr_seq_segurado_w 
			and	ie_tipo_item		 = 1;
			 
			select	coalesce(sum(b.vl_coparticipacao),0) 
			into STRICT	vl_coparticipacao_w 
			from	pls_mensalidade_segurado b, 
				pls_segurado a 
			where	a.nr_sequencia		 = b.nr_seq_segurado 
			and	a.nr_sequencia		 = nr_seq_segurado_w;
			 
			select	coalesce(sum(c.vl_item),0) 
			into STRICT	vl_acordo_w 
			from	pls_mensalidade_seg_item c, 
				pls_mensalidade_segurado b, 
				pls_segurado a 
			where	a.nr_sequencia		 = b.nr_seq_segurado 
			and	c.nr_seq_mensalidade_seg = b.nr_sequencia 
			and	a.nr_sequencia		 = nr_seq_segurado_w 
			and	c.nr_seq_tipo_lanc	 = 4;
		 
			select	coalesce(sum(vl_item),0) 
			into STRICT	vl_outros_w 
			from	pls_mensalidade_seg_item c, 
				pls_mensalidade_segurado b, 
				pls_segurado a 
			where	a.nr_sequencia		 = b.nr_seq_segurado 
			and	c.nr_seq_mensalidade_seg = b.nr_sequencia 
			and	a.nr_sequencia		 = nr_seq_segurado_w 
			and	ie_tipo_item		 <> 1;			
 
			if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then 
				select	ie_situacao_atend 
				into STRICT	ie_situacao_usuario_w 
				from	pls_segurado 
				where	nr_sequencia	= nr_seq_segurado_w;
			end if;
			 
			insert into w_pls_ppsc(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec, 
				nr_titulo, 
				qt_dias_vencidos, 
				dt_mes_referencia, 
				dt_vencimento, 
				vl_titulo, 
				vl_pago, 
				nr_seq_pagador, 
				nm_pagador, 
				cd_usuario_plano, 
				cd_estabelecimento, 
				vl_saldo, 
				vl_mensalidade, 
				vl_coparticipacao, 
				vl_acordo, 
				vl_outros, 
				ie_situacao_titulo) 
			values (nextval('w_pls_ppsc_seq'), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nr_titulo_w, 
				qt_dias_vencidos_w, 
				dt_mensalidade_w, 
				dt_vencimento_w, 
				vl_titulo_w, 
				vl_pago_w, 
				nr_seq_pagador_w, 
				nm_pagador_w, 
				cd_usuario_plano_w, 
				cd_estabelecimento_p, 
				vl_saldo_titulo_w, 
				vl_mensalidade_w, 
				vl_coparticipacao_w, 
				vl_acordo_w, 
				vl_outros_w, 
				ie_situacao_titulo_w);
			end;
		end loop;
		close c01;
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_inadimplentes ( dt_inicial_p timestamp, dt_final_p timestamp, ie_situacao_p text, ie_tipo_pessoa_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

