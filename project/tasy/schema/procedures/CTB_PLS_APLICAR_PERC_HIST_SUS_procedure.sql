-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_aplicar_perc_hist_sus (nr_seq_competencia_p bigint) AS $body$
DECLARE


pr_historico_w 		pls_processo_competencia.pr_historico%type;
dt_competencia_w	pls_processo_competencia.dt_competencia%type;
qt_pendente_w		bigint;
vl_provisao_w 		double precision;

/* Obtem as contas da competencia passada por parametro*/

c_contas CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_seq_conta,
	pls_conta_processo_obter_valor(a.nr_seq_conta) vl_conta,
	a.oid ds_rowid
from	pls_processo_contas_comp a,
	pls_processo_competencia b
where	a.nr_seq_competencia = b.nr_sequencia
and	b.nr_sequencia = nr_seq_competencia_p
and	not exists (SELECT	1
			from 	pls_processo_contas_comp c,
				pls_processo_competencia d
			where	a.nr_seq_conta 	= c.nr_seq_conta
			and	c.nr_seq_competencia = d.nr_sequencia
			and	pkg_date_utils.start_of(d.dt_competencia, 'MONTH') < pkg_date_utils.start_of(b.dt_competencia, 'MONTH')
			and	coalesce(c.nr_lote_contabil, 0) <> 0);

vet_contas c_contas%rowtype;


BEGIN

/* Obtem o percentual historico cadastrado para a competencia passada por parametro */

begin
select 	coalesce(pr_historico, 0),
	dt_competencia
into STRICT 	pr_historico_w,
	dt_competencia_w
from 	pls_processo_competencia
where 	nr_sequencia = nr_seq_competencia_p;
exception when no_data_found then
	pr_historico_w := 0;
end;

if (coalesce(dt_competencia_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1093303);
end if;

open c_contas;
loop
fetch c_contas into
	vet_contas;
EXIT WHEN NOT FOUND; /* apply on c_contas */
	begin
	qt_pendente_w := qt_pendente_w + 1;
	vl_provisao_w := dividir(vet_contas.vl_conta * pr_historico_w,100);

	update 	pls_processo_contas_comp a
	set	a.vl_provisao = vl_provisao_w,
		a.vl_ajuste = 0
	where	a.rowid = vet_contas.ds_rowid;

	/* Por questoes de performance, so realiza o commit a cada 100 updates*/

	if (qt_pendente_w = 100) then
		commit;
		qt_pendente_w := 0;
	end if;
	end;
end loop;
close c_contas;

commit;

CALL pls_gerar_valor_ajust_ress_sus(nr_seq_competencia_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_aplicar_perc_hist_sus (nr_seq_competencia_p bigint) FROM PUBLIC;

