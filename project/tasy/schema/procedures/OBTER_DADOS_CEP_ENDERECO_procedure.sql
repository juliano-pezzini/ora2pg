-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_cep_endereco ( cd_cep_p text, ie_somente_cep_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nm_logradouro_p INOUT text, nm_localidade_p INOUT text, ds_bairro_p INOUT text, ds_uf_p INOUT text, cd_cep_out_p INOUT text, cd_municipio_ibge_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter as informações de CEP para pessoa jurídica
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
	Parâmetros
	0 - [25] - Utiliza Cep Correio baseado na Carga via Internet
	0 - [203] - Selecionar o país para qual o sistema será utilizado
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_cep_internet_w	varchar(1);
ie_pais_w		varchar(15);


BEGIN
if (ie_somente_cep_p IS NOT NULL AND ie_somente_cep_p::text <> '') and (ie_somente_cep_p = 'S') then
	begin
	select	max(cd_municipio_ibge)
	into STRICT	cd_municipio_ibge_p
	from (SELECT	cd_municipio_ibge
		from	cep_municipio
		where	cd_cep	= cd_cep_p
		
union all

		SELECT	cd_municipio_ibge
		from	sus_cep
		where	cd_cep	= cd_cep_p) alias3;

	select	max(a.nm_logradouro),
		max(b.nm_localidade),
		max(c.ds_bairro),
		max(a.ds_uf),
		max(a.cd_cep)
	into STRICT	nm_logradouro_p,
		nm_localidade_p,
		ds_bairro_p,
		ds_uf_p,
		cd_cep_out_p
	from	cep_loc b,
		cep_bairro c,
		cep_log a
	where	b.nr_sequencia		= c.nr_seq_loc
	and	a.cd_bairro_inicial	= c.nr_sequencia
	and	b.nr_sequencia		= a.nr_seq_loc
	and	a.cd_cep		= cd_cep_p;
	end;
else
	begin
	/* Tasy - Parâmetro [25] -  */

	ie_cep_internet_w := obter_param_usuario(0, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_cep_internet_w);
	ie_pais_w := Obter_Nr_Seq_Locale(nm_usuario_p);

	if (coalesce(ie_pais_w,'1') = '1') then
		if (ie_cep_internet_w = 'N') then
			begin
			select	max(a.nm_logradouro),
				max(a.nm_localidade),
				max(a.nm_bairro),
				max(a.cd_unidade_federacao),
				max(a.nr_logradouro)
			into STRICT	nm_logradouro_p,
				nm_localidade_p,
				ds_bairro_p,
				ds_uf_p,
				cd_cep_out_p
			from	cep_logradouro a
			where	a.cd_logradouro	= cd_cep_p;
			end;
		else
			begin
			select	max(a.nm_logradouro),
				max(b.nm_localidade),
				max(c.ds_bairro),
				max(a.ds_uf),
				max(a.cd_cep)
			into STRICT	nm_logradouro_p,
				nm_localidade_p,
				ds_bairro_p,
				ds_uf_p,
				cd_cep_out_p
			from	cep_loc b,
				cep_bairro c,
				cep_log a
			where	b.nr_sequencia	= c.nr_seq_loc
			and	a.cd_bairro_inicial	= c.nr_sequencia
			and	b.nr_sequencia	= a.nr_seq_loc
			and	a.cd_cep		= cd_cep_p;
			end;
		end if;

		if (coalesce(cd_cep_out_p::text, '') = '') then
			begin
			select	null,
				max(b.nm_localidade),
				null,
				max(b.ds_uf),
				max(b.cd_cep)
			into STRICT	nm_logradouro_p,
				nm_localidade_p,
				ds_bairro_p,
				ds_uf_p,
				cd_cep_out_p
			from	cep_loc b
			where	b.cd_cep	= cd_cep_p;
			end;
		end if;

		select	CASE WHEN substr(obter_municipio_ibge(cd_cep_p),1,6)='0' THEN  ''  ELSE substr(obter_municipio_ibge(cd_cep_p),1,6) END
		into STRICT	cd_municipio_ibge_p
		;
	elsif (ie_pais_w = '2') then
		select	null,
			max(b.nm_localidade),
			max(c.ds_bairro),
			max(b.ds_uf),
			max(b.cd_cep)
		into STRICT	nm_logradouro_p,
			nm_localidade_p,
			ds_bairro_p,
			ds_uf_p,
			cd_cep_out_p
		from	cep_loc b,
			cep_bairro c
		where	b.nr_sequencia	= c.nr_seq_loc
		and	b.cd_cep		= cd_cep_p;

		cd_municipio_ibge_p	:= null;
  else
		select	null,
			max(b.nm_localidade),
			max(c.ds_bairro),
			max(b.ds_uf),
			max(b.cd_cep)
		into STRICT	nm_logradouro_p,
			nm_localidade_p,
			ds_bairro_p,
			ds_uf_p,
			cd_cep_out_p
		from	cep_loc b,
			cep_bairro c
		where	b.nr_sequencia	= c.nr_seq_loc
		and	b.cd_cep		= cd_cep_p;

		cd_municipio_ibge_p	:= null;
	end if;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_cep_endereco ( cd_cep_p text, ie_somente_cep_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nm_logradouro_p INOUT text, nm_localidade_p INOUT text, ds_bairro_p INOUT text, ds_uf_p INOUT text, cd_cep_out_p INOUT text, cd_municipio_ibge_p INOUT text) FROM PUBLIC;

