-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_average_length_of_stay ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


ie_situacao_temp varchar(5) := 'A';
ie_rpa_temp varchar(5) :='S';
qt_tempo bigint := 0;

nr_seq_operational_level_w	    pfcs_operational_level.nr_sequencia%type;
pfcs_panel_detail_seq_w			    pfcs_panel_detail.nr_sequencia%type;
nr_seq_panel_w					        pfcs_panel_detail.nr_seq_panel%type;
pfcs_panel_seq_w				        pfcs_panel.nr_sequencia%type;
qt_total_w				              bigint := 0;
qt_total_time_w			            bigint := 0;

c01 CURSOR FOR
SELECT (clock_timestamp()-a.dt_entrada_unidade)* 1440 qt_tempo,
        a.nr_seq_interno,
		a.cd_unidade_basica || ' ' || a.cd_unidade_compl ds_location,
		a.nr_atendimento nr_atendimento,
		c.cd_pessoa_fisica,
		coalesce(get_formatted_person_name(c.cd_pessoa_fisica, 'list'), obter_nome_pf(c.cd_pessoa_fisica)) nm_patient,
		pfcs_obter_lista_dados_classif(c.cd_pessoa_fisica) ds_classification,
		a.nr_seq_classif cd_classification,
		obter_sexo_pf(c.cd_pessoa_fisica, 'D') ds_gender,
		a.dt_entrada_unidade entrada_unidade,
		a.dt_entrada_unidade dt_entrace,
		a.ds_unidade_atend,
		a.cd_setor_atendimento cd_department,
		obter_desc_setor_atend(a.cd_setor_atendimento) ds_department,
		pc_obter_dt_nascimento(c.cd_pessoa_fisica) dt_birthdate,
        obter_dados_pf(c.cd_pessoa_fisica, 'I') qt_idade_paciente
    from unidade_atendimento a,
		atendimento_paciente c,
        atend_paciente_unidade  apu
    where  c.nr_atendimento  = apu.nr_atendimento
        and   a.ie_status_unidade = 'P'
        and c.cd_estabelecimento = (cd_estabelecimento_p)::numeric
        and a.cd_setor_atendimento  = apu.cd_setor_atendimento
        and a.cd_unidade_basica  = apu.cd_unidade_basica
        and a.cd_unidade_compl  = apu.cd_unidade_compl
        and apu.nr_seq_interno  = obter_atepacu_paciente(c.nr_atendimento,'A')
        and coalesce(c.dt_alta::text, '') = ''
        and a.cd_setor_atendimento IN (SELECT x.cd_setor_atendimento
                                            FROM    setor_atendimento x
                                            WHERE      x.IE_RPA = 'S'
                                                AND     x.ie_situacao = 'A')
        AND     a.ie_situacao = 'A';




BEGIN

nr_seq_operational_level_w := pfcs_get_structure_level(
									cd_establishment_p => cd_estabelecimento_p,
									ie_level_p => 'O',
									ie_info_p => 'C');



    for c01_w in c01 loop
        begin
            if (c01_w.qt_tempo > 0) then
                qt_total_w := qt_total_w + 1;
                qt_total_time_w	:= qt_total_time_w + c01_w.qt_tempo;

                select nextval('pfcs_panel_detail_seq')
                into STRICT pfcs_panel_detail_seq_w
;

            insert into pfcs_panel_detail(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                ie_situation,
                nr_seq_indicator,
                nr_seq_operational_level)
            values (
                pfcs_panel_detail_seq_w,
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                'T',
                nr_seq_indicator_p,
                nr_seq_operational_level_w);

            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter,
                id_patient,
                nm_patient,
                ds_gender,
                ds_classification,
                cd_classification,
                dt_birthdate,
                ds_age_range,
                DT_ENTRANCE,
                ie_over_threshold,
                qt_time_await_after_discharge,
                ds_current_location)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_atendimento,
                c01_w.cd_pessoa_fisica,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.ds_classification,
                c01_w.cd_classification,
                c01_w.dt_birthdate,
                c01_w.qt_idade_paciente,
                c01_w.dt_entrace,
                'S',
                c01_w.qt_tempo,
                c01_w.ds_location);

            insert into pfcs_detail_bed(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                ds_classification,
                ds_location,
                ds_department,
                cd_department)
            values (
                nextval('pfcs_detail_bed_seq'),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.ds_classification,
                c01_w.ds_location,
                c01_w.ds_department,
                c01_w.cd_department
                );

                end if;

                commit;

                 := pfcs_pck.pfcs_generate_results(
                        vl_indicator_p => qt_total_time_w, vl_indicator_aux_p => qt_total_w, ds_reference_value_p => '', nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

                CALL pfcs_pck.pfcs_update_detail(
                        nr_seq_indicator_p => nr_seq_indicator_p,
                        nr_seq_panel_p => pfcs_panel_seq_w,
                        nr_seq_operational_level_p => nr_seq_operational_level_w,
                        nm_usuario_p => nm_usuario_p);
			end;
		end loop;


		CALL pfcs_pck.pfcs_activate_records(
				nr_seq_indicator_p => nr_seq_indicator_p,
				nr_seq_operational_level_p => nr_seq_operational_level_w,
				nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_average_length_of_stay ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

