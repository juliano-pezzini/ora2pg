-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_segurado_estab ( nr_seq_contrato_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_segurados_w		bigint;
nr_seq_segurado_w	bigint;
nr_seq_segurado_novo_w	bigint;
nr_seq_contrato_novo_w	bigint;
nr_seq_seg_carteira_w	bigint;
nr_seq_seg_cart_novo_w	bigint;
nr_seq_estagio_cartao_w	bigint;
nr_seq_seg_cart_ant_w	bigint;
nr_seq_segurado_preco_w	bigint;
nr_seq_segurado_sca_w	bigint;
nr_seq_seg_carencia_w	bigint;
nr_seq_segurado_cpt_w	bigint;
nr_seq_segurado_bonif_w	bigint;
nr_seq_seg_historic_w	bigint;
nr_seq_segurado_compl_w	bigint;
nr_seq_seg_alerta_w	bigint;
nr_seq_seg_aler_novo_w	bigint;
nr_seq_alerta_evento_w	bigint;
nr_seq_seg_alt_plano_w	bigint;
nr_seq_seg_rescisao_w	bigint;
nr_seq_seg_protal_log_w	bigint;
nr_seq_seg_suspensao_w	bigint;
nr_seq_seg_mensal_w	bigint;
nr_seq_seg_repasse_w	bigint;
nr_seq_seg_extensao_w	bigint;
nr_seq_pagador_ant_w	bigint;
nr_seq_vend_canal_ant_w	bigint;
nr_seq_vendedor_ant_w	bigint;
nr_seq_subestip_ant_w	bigint;
nr_seq_plano_ant_w	bigint;
nr_seq_tabela_ant_w	bigint;
nr_seq_titular_ant_w	bigint;
nr_seq_cont_princ_ant_w bigint;
nr_seq_pesso_prop_ant_w	bigint;
nr_propost_adesao_ant_w	bigint;
nr_seq_mt_cancel_ant_w	bigint;
nr_seq_motivo_susp_ant_w	bigint;
nr_via_cart_ant_ant_w	bigint;
nr_seq_plano_ant_ant_w	bigint;
nr_seq_motivo_via_ant_w	bigint;
nr_seq_vinculo_estip_ant_w	bigint;
nr_mt_cancel_seg_res_ant_w	bigint;
nr_seq_tipo_carencia_ant_w	bigint;
nr_seq_tipo_cpt_ant_w		bigint;
nr_seq_emissor_ant_w		bigint;
nr_seq_pagador_novo_w	bigint;
nr_seq_vend_canal_novo_w	bigint;
nr_seq_vendedor_novo_w		bigint;
nr_seq_subestip_novo_w		bigint;
nr_seq_plano_novo_w		bigint;
nr_seq_tabela_novo_w		bigint;
nr_seq_titular_novo_w		bigint;
nr_seq_cont_princ_novo_w	bigint;
nr_seq_pesso_prop_novo_w	bigint;
nr_propost_adesao_novo_w	bigint;
nr_seq_mt_cancel_novo_w		bigint;
nr_seq_motivo_susp_novo_w	bigint;
nr_seq_motivo_via_novo_w	bigint;
nr_via_cart_ant_novo_w	bigint;
nr_seq_plano_ant_novo_w	bigint;
nr_seq_vinculo_estip_novo_w	bigint;
nr_mt_cancel_seg_res_novo_w	bigint;
nr_seq_tipo_carencia_novo_w	bigint;
nr_seq_tipo_cpt_novo_w		bigint;
nr_seq_emissor_novo_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado
	where	nr_seq_contrato	= nr_seq_contrato_p
	order by nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_carteira
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_cart_estagio
	where	nr_seq_cartao_seg	= nr_seq_seg_carteira_w;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_cart_ant
	where	nr_seq_segurado	= nr_seq_segurado_w;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_preco
	where	nr_seq_segurado	= nr_seq_segurado_w;

C06 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_sca_vinculo
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
C07 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carencia
	where	nr_seq_segurado	= nr_seq_segurado_w
	and	substr(pls_obter_se_cpt(nr_seq_tipo_carencia),1,1) = 'N';

C08 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carencia
	where	nr_seq_segurado	= nr_seq_segurado_w
	and	substr(pls_obter_se_cpt(nr_seq_tipo_carencia),1,1) = 'S';
	
C09 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_bonificacao_vinculo
	where	nr_seq_segurado	= nr_seq_segurado_w;

C10 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_historico
	where	nr_seq_segurado	= nr_seq_segurado_w;

C11 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_compl
	where	nr_seq_segurado	= nr_seq_segurado_w;

C12 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_alerta
	where	nr_seq_segurado	= nr_seq_segurado_w;

C13 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_alerta_evento
	where	nr_seq_alerta	= nr_seq_seg_alerta_w;

C14 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_alt_plano
	where	nr_seq_segurado	= nr_seq_segurado_w;

C15 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_rescisao_contrato
	where	nr_seq_segurado	= nr_seq_segurado_w;

C16 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_acesso_portal_log
	where	nr_seq_segurado	= nr_seq_segurado_w;

C17 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_suspensao
	where	nr_seq_segurado	= nr_seq_segurado_w;
	
C18 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_mensalidade
	where	nr_seq_segurado	= nr_seq_segurado_w;

C19 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_repasse
	where	nr_seq_segurado	= nr_seq_segurado_w;

C20 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_extensao_area
	where	nr_seq_segurado	= nr_seq_segurado_w;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_segurado_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	count(*)
	into STRICT	qt_segurados_w
	from	pls_segurado
	where	nr_seq_contrato_ant	= nr_seq_segurado_w;
	
	if (qt_segurados_w	= 0) then
		select	nextval('pls_segurado_seq')
		into STRICT	nr_seq_segurado_novo_w
		;
		
		select	nr_seq_pagador,
			nr_seq_vendedor_canal,
			nr_seq_vendedor_pf,
			nr_seq_subestipulante,
			nr_seq_plano,
			nr_seq_tabela,
			nr_seq_titular,
			nr_seq_contratante_princ,
			nr_seq_pessoa_proposta,
			nr_proposta_adesao,
			nr_seq_motivo_cancelamento,
			nr_seq_motivo_susp,
			nr_seq_vinculo_est
		into STRICT	nr_seq_pagador_ant_w,
			nr_seq_vend_canal_ant_w,
			nr_seq_vendedor_ant_w,
			nr_seq_subestip_ant_w,
			nr_seq_plano_ant_w,
			nr_seq_tabela_ant_w,
			nr_seq_titular_ant_w,
			nr_seq_cont_princ_ant_w,
			nr_seq_pesso_prop_ant_w,
			nr_propost_adesao_ant_w,
			nr_seq_mt_cancel_ant_w,
			nr_seq_motivo_susp_ant_w,
			nr_seq_vinculo_estip_ant_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_pagador_novo_w
		from	pls_contrato_pagador
		where	nr_seq_pagador_ant	= nr_seq_pagador_ant_w;
		exception
		when others then
			nr_seq_pagador_novo_w := null;
			
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_vend_canal_novo_w
		from	pls_vendedor
		where	nr_seq_vendedor_ant	= nr_seq_vend_canal_ant_w;
		exception
		when others then
			nr_seq_vend_canal_novo_w := null;
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_vendedor_novo_w
		from	pls_vendedor_vinculado
		where	nr_seq_vinculo_ant	= nr_seq_vendedor_ant_w;
		exception
		when others then
			nr_seq_vendedor_novo_w := null;
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_subestip_novo_w
		from	pls_sub_estipulante
		where	nr_seq_subestipulante_ant	= nr_seq_subestip_ant_w;
		exception
		when others then
			nr_seq_subestip_novo_w := null;
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_plano_novo_w
		from	pls_plano
		where	nr_seq_plano_ant	= nr_seq_plano_ant_w;
		exception
		when others then
			nr_seq_plano_novo_w := null;
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_tabela_novo_w
		from	pls_tabela_preco
		where	nr_seq_tabela_ant	= nr_seq_tabela_ant_w;
		exception
		when others then
			nr_seq_tabela_novo_w := null;
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_titular_novo_w
		from	pls_segurado
		where	nr_seq_contrato_ant	= nr_seq_titular_ant_w;
		exception
		when others then
			nr_seq_titular_novo_w := null;
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_cont_princ_novo_w
		from	pls_contrato
		where	nr_seq_contrato_ant	= nr_seq_cont_princ_ant_w;
		exception
		when others then
			nr_seq_cont_princ_novo_w := null;
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_propost_adesao_novo_w
		from	pls_proposta_adesao
		where	nr_seq_proposta_ant	= nr_propost_adesao_ant_w;
		exception
		when others then
			nr_propost_adesao_novo_w := null;
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_pesso_prop_novo_w
		from	pls_proposta_beneficiario
		where	nr_seq_benef_ant	= nr_seq_pesso_prop_ant_w;
		exception
		when others then
			nr_seq_pesso_prop_novo_w := null;
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_contrato_novo_w
		from	pls_contrato
		where	nr_seq_contrato_ant	= nr_seq_contrato_p;
		exception
		when others then
			nr_seq_contrato_novo_w := nr_seq_contrato_p;
		end;
		
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_mt_cancel_novo_w
		from	pls_motivo_cancelamento
		where	nr_seq_motivo_ant	= nr_seq_mt_cancel_ant_w;
		exception
		when others then
			nr_seq_mt_cancel_novo_w	:= null;
		end;
		
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_motivo_susp_novo_w
		from	pls_motivo_susp_seg
		where	nr_seq_motivo_ant	= nr_seq_motivo_susp_ant_w;
		exception
		when others then
			nr_seq_motivo_susp_novo_w	:= null;
		end;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_vinculo_estip_novo_w
		from	pls_vinculo_estipulante
		where	nr_seq_vinculo_ant	= nr_seq_vinculo_estip_ant_w;
		exception
		when others then
			nr_seq_vinculo_estip_novo_w	:= null;
		end;
		
		begin
		insert into pls_segurado(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_contrato,
							cd_pessoa_fisica,nr_seq_titular,nr_seq_pagador,nr_seq_plano,nr_seq_tabela,nr_proposta_adesao,
							dt_contratacao,dt_liberacao,nr_seq_segurado_ant,dt_migracao,ds_observacao,cd_subestipulante_pf,
							nr_seq_motivo_cancelamento,dt_reativacao,vl_analise,cd_segurado_contrato,cd_segurado_familia,dt_inclusao_operadora,
							dt_limite_utilizacao,nr_seq_vinculo_est,cd_matricula_estipulante,nr_seq_tabela_origem,nr_seq_motivo_inclusao,nr_seq_segurado_mig,
							nr_seq_vendedor_pf,nr_seq_vendedor_canal,ie_acao_contrato,ie_tipo_plano,dt_ultima_carencia,ie_taxa_inscricao,
							dt_cancelamento,ie_tipo_segurado,nr_seq_pessoa_proposta,nr_seq_contratante_princ,nr_seq_vinculo,cd_cod_anterior,
							nr_seq_seg_contrato,ie_tipo_valor,nr_seq_notific_pagador,cd_subestipulante_pj,nr_cco,ie_digito_cco,
							ie_reenviar_sib,ie_tipo_reg_reenvio,nr_seq_motivo_reenvio,ie_opcao_sib,ie_carteira_ant_sib,ie_nascido_plano,
							nr_seq_congenere,ie_situacao_atend,ie_bonus_indicacao,cd_matricula_familia,nr_seq_motivo_susp,
							nr_seq_intercambio,cd_unimed,ie_tipo_repasse,ie_tipo_rescisao,nr_seq_intercambio_benef,
							nr_seq_contrato_ant,nr_seq_subestipulante,cd_estabelecimento, cd_cco, dt_alteracao_tipo_segurado)
						(SELECT	nr_seq_segurado_novo_w,clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_contrato_novo_w,
							cd_pessoa_fisica,nr_seq_titular_novo_w,nr_seq_pagador_novo_w,nr_seq_plano_novo_w,nr_seq_tabela_novo_w,nr_propost_adesao_novo_w,
							dt_contratacao,dt_liberacao,nr_seq_segurado_ant,dt_migracao,ds_observacao,cd_subestipulante_pf,
							nr_seq_mt_cancel_novo_w,dt_reativacao,vl_analise,cd_segurado_contrato,cd_segurado_familia,dt_inclusao_operadora,
							dt_limite_utilizacao,nr_seq_vinculo_estip_novo_w,cd_matricula_estipulante,nr_seq_tabela_origem,nr_seq_motivo_inclusao,nr_seq_segurado_mig,
							nr_seq_vendedor_novo_w,nr_seq_vend_canal_novo_w,ie_acao_contrato,ie_tipo_plano,dt_ultima_carencia,ie_taxa_inscricao,
							dt_cancelamento,ie_tipo_segurado,nr_seq_pesso_prop_novo_w,nr_seq_cont_princ_novo_w,nr_seq_vinculo,cd_cod_anterior,
							nr_seq_seg_contrato,ie_tipo_valor,nr_seq_notific_pagador,cd_subestipulante_pj,nr_cco,ie_digito_cco,
							ie_reenviar_sib,ie_tipo_reg_reenvio,nr_seq_motivo_reenvio,ie_opcao_sib,ie_carteira_ant_sib,ie_nascido_plano,
							nr_seq_congenere,ie_situacao_atend,ie_bonus_indicacao,cd_matricula_familia,nr_seq_motivo_susp_novo_w,
							nr_seq_intercambio,cd_unimed,ie_tipo_repasse,ie_tipo_rescisao,nr_seq_intercambio_benef,
							nr_seq_segurado_w,nr_seq_subestip_novo_w,cd_estab_destino_p, cd_cco, dt_alteracao_tipo_segurado
						from	pls_segurado
						where	nr_sequencia	= nr_seq_segurado_w);
		end;
		
		open C02;
		loop
		fetch C02 into
			nr_seq_seg_carteira_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			select	nr_seq_motivo_via,
				nr_seq_emissor
			into STRICT	nr_seq_motivo_via_ant_w,
				nr_seq_emissor_ant_w
			from	pls_segurado_carteira
			where	nr_sequencia	= nr_seq_seg_carteira_w;
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_motivo_via_novo_w
			from	pls_motivo_via_adicional
			where	nr_seq_motivo_ant	= nr_seq_motivo_via_ant_w;
			exception
			when others then
				nr_seq_motivo_via_novo_w := null;
			end;
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_emissor_novo_w
			from	pls_emissor_carteira
			where	nr_seq_emissor_ant	= nr_seq_emissor_ant_w;
			exception
			when others then
				nr_seq_emissor_novo_w	:= nr_seq_emissor_ant_w;
			end;
			
			select	nextval('pls_segurado_carteira_seq')
			into STRICT	nr_seq_seg_cart_novo_w
			;
			
			insert into pls_segurado_carteira(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									dt_inicio_vigencia,dt_validade_carteira,cd_usuario_plano,nr_seq_emissor,ie_situacao,nr_via_solicitacao,
									vl_via_adicional,nr_seq_regra_via,nr_seq_mensalidade_seg,nr_seq_motivo_via,ds_observacao,nm_usuario_solicitante,
									dt_solicitacao,ie_processo,ds_trilha1,ds_trilha2,ds_trilha3,ds_trilha_qr_code,cd_estabelecimento,
									dt_desbloqueio, nm_usuario_desbloqueio, ie_tipo_desbloqueio)
								(SELECT	nr_seq_seg_cart_novo_w,clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									dt_inicio_vigencia,dt_validade_carteira,cd_usuario_plano,nr_seq_emissor_novo_w,ie_situacao,nr_via_solicitacao,
									vl_via_adicional,nr_seq_regra_via,nr_seq_mensalidade_seg,nr_seq_motivo_via_novo_w,ds_observacao,nm_usuario_solicitante,
									dt_solicitacao,ie_processo,ds_trilha1,ds_trilha2,ds_trilha3,ds_trilha_qr_code,cd_estab_destino_p,
									dt_desbloqueio, nm_usuario_desbloqueio, ie_tipo_desbloqueio
								from	pls_segurado_carteira
								where	nr_sequencia	= nr_seq_seg_carteira_w);
			
			open C03;
			loop
			fetch C03 into	
				nr_seq_estagio_cartao_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				
				insert into pls_segurado_cart_estagio(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
										nr_seq_cartao_seg,dt_alteracao,ie_estagio_emissao,nm_usuario_estagio,nr_via)
									(SELECT	nextval('pls_segurado_cart_estagio_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
										nr_seq_seg_cart_novo_w,dt_alteracao,ie_estagio_emissao,nm_usuario_estagio,nr_via
									from	pls_segurado_cart_estagio
									where	nr_sequencia	= nr_seq_estagio_cartao_w);
				end;
			end loop;
			close C03;
			end;
		end loop;
		close C02;
		
		open C04;
		loop
		fetch C04 into	
			nr_seq_seg_cart_ant_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			
			select	nr_seq_motivo_via
			into STRICT	nr_via_cart_ant_ant_w
			from	pls_segurado_cart_ant
			where	nr_sequencia	= nr_seq_seg_cart_ant_w;
			
			begin
			select	nr_sequencia
			into STRICT	nr_via_cart_ant_novo_w
			from	pls_motivo_via_adicional
			where	nr_seq_motivo_ant	= nr_via_cart_ant_ant_w;
			exception
			when others then
				nr_via_cart_ant_novo_w := null;
			end;
			
			insert into pls_segurado_cart_ant(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									cd_usuario_ant,dt_validade,dt_inicio_vigencia,dt_alteracao,ds_observacao,ie_status_carteira,
									ie_sistema_anterior,nr_via_anterior,nr_seq_regra_via,vl_via_adicional,nr_seq_motivo_via,nm_usuario_solicitacao,
									dt_solicitacao,nr_seq_lote_emissao,ds_trilha1,ds_trilha2,ds_trilha3,ds_trilha_qr_code,
									dt_desbloqueio, nm_usuario_desbloqueio, ie_tipo_desbloqueio)
								(SELECT	nextval('pls_segurado_cart_ant_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,	
									cd_usuario_ant,dt_validade,dt_inicio_vigencia,dt_alteracao,ds_observacao,ie_status_carteira,
									ie_sistema_anterior,nr_via_anterior,nr_seq_regra_via,vl_via_adicional,nr_via_cart_ant_novo_w,nm_usuario_solicitacao,
									dt_solicitacao,nr_seq_lote_emissao,ds_trilha1,ds_trilha2,ds_trilha3,ds_trilha_qr_code,
									dt_desbloqueio, nm_usuario_desbloqueio, ie_tipo_desbloqueio
								from	pls_segurado_cart_ant
								where	nr_sequencia	= nr_seq_seg_cart_ant_w);
			end;
		end loop;
		close C04;
		
		open C05;
		loop
		fetch C05 into
			nr_seq_segurado_preco_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			
			insert into pls_segurado_preco(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									dt_reajuste,vl_preco_atual,qt_idade,cd_motivo_reajuste,vl_preco_ant,ds_observacao,
									nr_seq_reajuste,nr_seq_preco,nr_seq_lote,dt_liberacao,nm_usuario_liberacao,vl_desconto,
									nr_seq_regra,tx_reajuste,vl_reajuste,vl_preco_nao_subsid_desc,nr_seq_tabela,nr_seq_lote_reajuste, vl_adaptacao)
								(SELECT	nextval('pls_segurado_preco_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									dt_reajuste,vl_preco_atual,qt_idade,cd_motivo_reajuste,vl_preco_ant,ds_observacao,
									nr_seq_reajuste,nr_seq_preco,nr_seq_lote,dt_liberacao,nm_usuario_liberacao,vl_desconto,
									nr_seq_regra,tx_reajuste,vl_reajuste,vl_preco_nao_subsid_desc,nr_seq_tabela,nr_seq_lote_reajuste, vl_adaptacao
								from	pls_segurado_preco
								where	nr_sequencia	= nr_seq_segurado_preco_w);
			end;
		end loop;
		close C05;
		
		open C06;
		loop
		fetch C06 into
			nr_seq_segurado_sca_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin
			
			insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									nr_seq_tabela,nr_seq_tabela_origem,ie_grau_dependencia,ie_dependente,dt_inicio_vigencia,dt_fim_vigencia,
									qt_idade_limite,nr_seq_plano,ds_observacao,ie_embutido_produto,dt_liberacao)
								(SELECT	nextval('pls_sca_vinculo_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									nr_seq_tabela,nr_seq_tabela_origem,ie_grau_dependencia,ie_dependente,dt_inicio_vigencia,dt_fim_vigencia,
									qt_idade_limite,nr_seq_plano,ds_observacao,ie_embutido_produto,dt_liberacao
								from	pls_sca_vinculo
								where	nr_sequencia	= nr_seq_segurado_sca_w);
			end;
		end loop;
		close C06;
		
		open C07;
		loop
		fetch C07 into
			nr_seq_seg_carencia_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin
			
			select	nr_seq_tipo_carencia
			into STRICT	nr_seq_tipo_carencia_ant_w
			from	pls_carencia
			where	nr_sequencia	= nr_seq_seg_carencia_w;
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_tipo_carencia_novo_w
			from	pls_tipo_carencia
			where	nr_seq_carencia_ant	= nr_seq_tipo_carencia_ant_w;
			exception
			when others then
				nr_seq_tipo_carencia_novo_w	:= nr_seq_tipo_carencia_ant_w;
			end;
			
			insert into pls_carencia(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
								nr_seq_tipo_carencia,qt_dias,dt_inicio_vigencia,ds_observacao,ie_origem_carencia_benef)
							(SELECT	nextval('pls_carencia_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
								nr_seq_tipo_carencia_novo_w,qt_dias,dt_inicio_vigencia,ds_observacao,'P'
							from	pls_carencia
							where	nr_sequencia	= nr_seq_seg_carencia_w);
			end;
		end loop;
		close C07;
		
		open C08;
		loop
		fetch C08 into
			nr_seq_segurado_cpt_w;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			begin
			
			select	nr_seq_tipo_carencia
			into STRICT	nr_seq_tipo_cpt_ant_w
			from	pls_carencia
			where	nr_sequencia	= nr_seq_segurado_cpt_w;
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_tipo_cpt_novo_w
			from	pls_tipo_carencia
			where	nr_seq_carencia_ant	= nr_seq_tipo_cpt_ant_w;
			exception
			when others then
				nr_seq_tipo_cpt_novo_w	:= nr_seq_tipo_cpt_ant_w;
			end;
			
			insert into pls_carencia(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
								nr_seq_tipo_carencia,qt_dias,dt_inicio_vigencia,ds_observacao)
							(SELECT	nextval('pls_carencia_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
								nr_seq_tipo_cpt_novo_w,qt_dias,dt_inicio_vigencia,ds_observacao
							from	pls_carencia
							where	nr_sequencia	= nr_seq_segurado_cpt_w);
			
			end;
		end loop;
		close C08;
		
		open C09;
		loop
		fetch C09 into
			nr_seq_segurado_bonif_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
			begin
			
			insert into pls_bonificacao_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									nr_seq_bonificacao,tx_bonificacao,vl_bonificacao,dt_inicio_vigencia,dt_fim_vigencia)
								(SELECT	nextval('pls_bonificacao_vinculo_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									nr_seq_bonificacao,tx_bonificacao,vl_bonificacao,dt_inicio_vigencia,dt_fim_vigencia
								from	pls_bonificacao_vinculo
								where	nr_sequencia	= nr_seq_segurado_bonif_w);
			end;
		end loop;
		close C09;
		
		open C10;
		loop
		fetch C10 into
			nr_seq_seg_historic_w;
		EXIT WHEN NOT FOUND; /* apply on C10 */
			begin
			
			insert into pls_segurado_historico(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									dt_historico,ds_historico,ds_observacao,dt_migracao,dt_reativacao,nr_seq_segurado_atual,
									nr_seq_motivo_cancelamento,ie_tipo_historico,dt_ocorrencia_sib,nr_seq_plano_ant,nr_seq_contrato_ant,
									nr_seq_titular_ant,cd_cgc_estipulante,cd_pf_estipulante,nr_seq_subestipulante,ie_historico_situacao,nm_usuario_historico,
									nr_seq_tipo_historico,ds_titulo,ie_situacao_compartilhamento)
								(SELECT	nextval('pls_segurado_historico_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									dt_historico,ds_historico,ds_observacao,dt_migracao,dt_reativacao,nr_seq_segurado_atual,
									nr_seq_motivo_cancelamento,ie_tipo_historico,dt_ocorrencia_sib,nr_seq_plano_ant,nr_seq_contrato_ant,
									nr_seq_titular_ant,cd_cgc_estipulante,cd_pf_estipulante,nr_seq_subestipulante,ie_historico_situacao,nm_usuario_historico,
									nr_seq_tipo_historico,ds_titulo,ie_situacao_compartilhamento
								from	pls_segurado_historico
								where	nr_sequencia	= nr_seq_seg_historic_w);
			end;
		end loop;
		close C10;
		
		open C11;
		loop
		fetch C11 into
			nr_seq_segurado_compl_w;
		EXIT WHEN NOT FOUND; /* apply on C11 */
			begin
			
			insert into pls_segurado_compl(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									cd_cbo,dt_admissao)
								(SELECT	nextval('pls_segurado_compl_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									cd_cbo,dt_admissao
								from	pls_segurado_compl
								where	nr_sequencia	= nr_seq_segurado_compl_w);
			end;
		end loop;
		close C11;
		
		open C12;
		loop
		fetch C12 into
			nr_seq_seg_alerta_w;
		EXIT WHEN NOT FOUND; /* apply on C12 */
			begin
			
			select	nextval('pls_alerta_seq')
			into STRICT	nr_seq_seg_aler_novo_w
			;
			
			insert into pls_alerta(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									ie_situacao,ds_alerta)
								(SELECT	nr_seq_seg_aler_novo_w,clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									ie_situacao,ds_alerta
								from	pls_alerta
								where	nr_sequencia	= nr_seq_seg_alerta_w);
								
			open C13;
			loop
			fetch C13 into
				nr_seq_alerta_evento_w;
			EXIT WHEN NOT FOUND; /* apply on C13 */
				begin
				
				insert into pls_alerta_evento(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_alerta,
									ie_evento)
								(SELECT	nextval('pls_alerta_evento_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_seg_aler_novo_w,
									ie_evento
								from	pls_alerta_evento
								where	nr_sequencia	= nr_seq_alerta_evento_w);
				end;
			end loop;
			close C13;
			end;
		end loop;
		close C12;
		
		open C14;
		loop
		fetch C14 into
			nr_seq_seg_alt_plano_w;
		EXIT WHEN NOT FOUND; /* apply on C14 */
			begin
			
			select	nr_seq_motivo_alt
			into STRICT	nr_seq_plano_ant_ant_w
			from	pls_segurado_alt_plano
			where	nr_sequencia	= nr_seq_seg_alt_plano_w;
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_plano_ant_novo_w
			from	pls_motivo_alteracao_plano
			where	nr_seq_motivo_ant	= nr_seq_plano_ant_ant_w;
			exception
			when others then
				nr_seq_plano_ant_novo_w	:= nr_seq_plano_ant_ant_w;
			end;
			
			insert into pls_segurado_alt_plano(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									nr_seq_plano_ant,nr_seq_plano_atual,nr_seq_tabela_ant,nr_seq_tabela_atual,dt_alteracao,
									nr_seq_motivo_alt,ds_observacao, ie_situacao)
								(SELECT	nextval('pls_segurado_alt_plano_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									nr_seq_plano_ant,nr_seq_plano_atual,nr_seq_tabela_ant,nr_seq_tabela_atual,dt_alteracao,
									nr_seq_plano_ant_novo_w,ds_observacao, ie_situacao
								from	pls_segurado_alt_plano
								where	nr_sequencia	= nr_seq_seg_alt_plano_w);
			end;
		end loop;
		close C14;
		
		open C15;
		loop
		fetch C15 into
			nr_seq_seg_rescisao_w;
		EXIT WHEN NOT FOUND; /* apply on C15 */
			begin
			
			select	nr_seq_motivo_rescisao
			into STRICT	nr_mt_cancel_seg_res_ant_w
			from	pls_rescisao_contrato
			where	nr_sequencia	= nr_seq_seg_rescisao_w;
			
			begin
			select	nr_sequencia
			into STRICT	nr_mt_cancel_seg_res_novo_w
			from	pls_motivo_cancelamento
			where	nr_seq_motivo_ant	= nr_mt_cancel_seg_res_ant_w;
			exception
			when others then
				nr_mt_cancel_seg_res_novo_w	:= null;
			end;
			
			insert into pls_rescisao_contrato(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									dt_rescisao,ds_observacao,ie_situacao,ie_tipo_solicitante,nm_usuario_solicitacao,
									dt_solicitacao,nr_seq_motivo_rescisao,ie_processo)
								(SELECT	nextval('pls_rescisao_contrato_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									dt_rescisao,ds_observacao,ie_situacao,ie_tipo_solicitante,nm_usuario_solicitacao,
									dt_solicitacao,nr_mt_cancel_seg_res_novo_w,ie_processo
								from	pls_rescisao_contrato
								where	nr_sequencia	= nr_seq_seg_rescisao_w);
			end;
		end loop;
		close C15;
		
		open C16;
		loop
		fetch C16 into
			nr_seq_seg_protal_log_w;
		EXIT WHEN NOT FOUND; /* apply on C16 */
			begin
			
			insert into pls_acesso_portal_log(	nr_sequencia,dt_atualizacao,nm_usuario,nr_seq_segurado,ds_acao,ie_login)
								(SELECT	nextval('pls_acesso_portal_log_seq'),clock_timestamp(),nm_usuario_p,nr_seq_segurado_novo_w,ds_acao,ie_login
									from	pls_acesso_portal_log
									where	nr_sequencia	= nr_seq_seg_protal_log_w);
			end;
		end loop;
		close C16;
		
		open C17;
		loop
		fetch C17 into
			nr_seq_seg_suspensao_w;
		EXIT WHEN NOT FOUND; /* apply on C17 */
			begin
			
			insert into pls_segurado_suspensao(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									dt_inicio_suspensao,dt_fim_suspensao,dt_prev_inicio_susp,dt_prev_fim_susp,nr_seq_motivo_susp,
									nr_seq_notificacao_pag,ds_observacao,ds_motivo_fim_susp,nr_seq_pagador)
								(SELECT	nextval('pls_segurado_suspensao_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									dt_inicio_suspensao,dt_fim_suspensao,dt_prev_inicio_susp,dt_prev_fim_susp,nr_seq_motivo_susp,
									nr_seq_notificacao_pag,ds_observacao,ds_motivo_fim_susp,nr_seq_pagador
								from	pls_segurado_suspensao
								where	nr_sequencia	= nr_seq_seg_suspensao_w);
			end;
		end loop;
		close C17;
		
		open C18;
		loop
		fetch C18 into
			nr_seq_seg_mensal_w;
		EXIT WHEN NOT FOUND; /* apply on C18 */
			begin
			
			insert into pls_segurado_mensalidade(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
									nr_seq_segurado,ie_situacao,dt_referencia,vl_item,nr_seq_item_mensalidade,ie_tipo_item,
									tx_desconto)
								(SELECT	nextval('pls_segurado_mensalidade_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
									nr_seq_segurado_novo_w,	ie_situacao,dt_referencia,vl_item,nr_seq_item_mensalidade,ie_tipo_item,
									tx_desconto
								from	pls_segurado_mensalidade
								where	nr_sequencia	= nr_seq_seg_mensal_w);
			end;
		end loop;
		close C18;
		
		open C19;
		loop
		fetch C19 into
			nr_seq_seg_repasse_w;
		EXIT WHEN NOT FOUND; /* apply on C19 */
			begin
			
			insert into pls_segurado_repasse(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
									nr_seq_segurado,dt_repasse,dt_fim_repasse,nr_seq_congenere, ie_origem_solicitacao, ie_tipo_compartilhamento)
								(SELECT	nextval('pls_segurado_repasse_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
									nr_seq_segurado_novo_w,dt_repasse,dt_fim_repasse,nr_seq_congenere, ie_origem_solicitacao, ie_tipo_compartilhamento
								from	pls_segurado_repasse
								where	nr_sequencia	= nr_seq_seg_repasse_w);
			end;
		end loop;
		close C19;
		
		open C20;
		loop
		fetch C20 into
			nr_seq_seg_extensao_w;
		EXIT WHEN NOT FOUND; /* apply on C20 */
			begin
			
			insert into pls_extensao_area(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
									nr_seq_segurado,cd_municipio_ibge,sg_estado,dt_inicio_vigencia,dt_fim_vigencia,nr_seq_regiao)
								(SELECT	nextval('pls_extensao_area_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
									nr_seq_segurado_novo_w,cd_municipio_ibge,sg_estado,dt_inicio_vigencia,dt_fim_vigencia,nr_seq_regiao
								from	pls_extensao_area
								where	nr_sequencia	= nr_seq_seg_extensao_w);
			end;
		end loop;
		close C20;
	end if;
end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_segurado_estab ( nr_seq_contrato_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

