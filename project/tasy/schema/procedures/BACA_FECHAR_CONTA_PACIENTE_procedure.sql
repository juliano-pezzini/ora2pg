-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_fechar_conta_paciente (nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_erro_w				varchar(255) 	:= '';
ie_tipo_convenio_w			smallint		:= 0;
ie_fecha_atendimento_w		varchar(1)		:= '';
ie_fecha_conta_w			varchar(1)		:= '';
qt_processo_pendente_w		bigint	:= 0;
ie_gera_longa_perm_w			varchar(1)		:= 'N';
ie_tipo_atendimento_w		smallint		:= 0;
nr_seq_apresent_w			bigint		:= 0;
ie_complexidade_w			varchar(1)		:= 'B';
cd_estabelecimento_w			integer	:= 0;
ie_repasse_w				varchar(01)	:= 'N';
vl_conta_w				double precision	:= 0;
vl_desconto_w				double precision	:= 0;
vl_item_w				double precision;
vl_guia_w				double precision;
ie_clinica_alta_w			varchar(03);
qt_anos_w				integer;
cd_convenio_w			integer;
qt_aih_vinculada_w		integer;
nr_aih_w				bigint;

nr_interno_conta_w		bigint;

c01 CURSOR FOR 
	SELECT	a.nr_interno_conta 
	from	conta_paciente a 
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p 
	and	a.ie_status_acerto	= 1;


BEGIN 
 
 
open	c01;
loop 
fetch	c01 into 
	nr_interno_conta_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	/*insert	into logxxxxx_tasy 
		(dt_atualizacao, 
		nm_usuario, 
		cd_log, 
		ds_log) 
	values 
		(sysdate, 
		nm_usuario_p, 
		55443, 
		'Conta: '|| nr_interno_conta_w || ' Prot.: ' || nr_seq_protocolo_p); */
 
 
 
	begin 
	select	b.ie_tipo_convenio, 
		c.ie_tipo_atendimento, 
		ie_complexidade, 
		c.cd_estabelecimento, 
		a.cd_convenio_parametro 
	into STRICT	ie_tipo_convenio_w, 
		ie_tipo_atendimento_w, 
		ie_complexidade_w, 
		cd_estabelecimento_w, 
		cd_convenio_w 
	from	conta_paciente a, 
		convenio b, 
		atendimento_paciente c 
	where	a.cd_convenio_parametro	= b.cd_convenio 
	and 	a.nr_interno_conta 	= nr_interno_conta_w 
	and	c.nr_atendimento		= a.nr_atendimento;
	exception 
		when others then 
   			ie_tipo_convenio_w := 0;
	end;
 
	update conta_paciente 
	set 	ie_status_acerto	= 2, 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where 	nr_interno_conta 	= nr_interno_conta_w 
	and	ie_status_acerto	= 1;
 
	CALL Gerar_conta_paciente_guia(nr_interno_conta_w, 2);
 
	CALL Atualiza_Codigo_Convenio(nr_interno_conta_w,null);
	CALL Atualizar_tabela_custo_conta(nr_interno_conta_w);
	CALL Atualizar_Especialidade_conta(nr_interno_conta_w);
	CALL Atualizar_Funcao_Medic_Conta(nr_interno_conta_w);
	CALL Atualizar_Conta_Contabil_Conta(nr_interno_conta_w, 'S');
	 
	if (coalesce(ie_complexidade_w::text, '') = '') then 
		select obter_complexidade_conta(nr_interno_conta_w) 
		into STRICT	ie_complexidade_w;
	end if;
 
	select nextval('conta_paciente_seq2') 
	into STRICT nr_seq_apresent_w 
	;
 
	select coalesce(max('S'),'N') 
	into STRICT ie_repasse_w 
	from parametro_faturamento 
	where cd_estabelecimento = cd_estabelecimento_w 
	 and ((ie_repasse_mat = 'C') or (ie_repasse_proc = 'C'));
 
	/* Atualizar total e desconto - In√≠cio */
 
 
 
	select 	sum(vl_procedimento + vl_material) 
	into STRICT	vl_conta_w 
	from	conta_paciente_resumo 
	where	nr_interno_conta	= nr_interno_conta_w;
 
 
	select	sum(vl_desconto) 
	into STRICT		vl_desconto_w 
	from (SELECT coalesce(sum(b.vl_procedimento),0) vl_desconto 
		from proc_paciente_valor b, 
		   procedimento_paciente a 
		where a.nr_sequencia   = b.nr_seq_procedimento 
		 and b.ie_tipo_valor  = 3 
		 and a.nr_interno_conta = nr_interno_conta_w 
		 and a.nr_sequencia <> coalesce(a.nr_seq_proc_pacote,0) 
		
union all
 
		SELECT coalesce(sum(b.vl_material),0) 
		from	mat_atend_paciente_valor b, 
			material_atend_paciente a 
		where a.nr_sequencia   = b.nr_seq_material 
		 and b.ie_tipo_valor  = 3 
		 and a.nr_interno_conta = nr_interno_conta_w) alias6;
 
	/* Fim */
 
 
	CALL Atualiza_Setor_Receita(nr_interno_conta_w);
 
	update conta_paciente 
	set 	dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p, 
		ie_complexidade		= ie_complexidade_w, 
		nr_seq_apresent		= nr_seq_apresent_w, 
		vl_conta 		= vl_conta_w, 
		vl_desconto 		= vl_desconto_w 
	where nr_interno_conta = nr_interno_conta_w;
 
	CALL Atualizar_Resumo_Conta(nr_interno_conta_w, 2);
 
	end;
	end loop;
close c01;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_fechar_conta_paciente (nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

