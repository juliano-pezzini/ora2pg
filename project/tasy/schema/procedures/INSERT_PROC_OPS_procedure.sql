-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insert_proc_ops ( cd_procedimento_p text, nr_atendimento_p bigint, nr_seq_proc_interno_p bigint, ie_lado_p text, ie_proc_princ_atend_p text, nr_cirurgia_p bigint default null, nm_usuario_p text default null, ie_origem_proced_p bigint default 11, ie_liberar_informacao_p text default 'N') AS $body$
DECLARE


cd_setor_atendimento_w   	integer;
cd_departamento_w	 	integer;
nr_seq_episodio_w	 	atendimento_paciente.nr_seq_episodio%type;
nr_sequencia_w			bigint;
cd_convenio_w			bigint;
cd_categoria_w			varchar(10);
cd_plano_w				varchar(10);
cd_pessoa_fisica_w		bigint;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
ie_proc_princ_w			procedimento_pac_medico.ie_proc_princ%type;
ie_proc_adicional_w		procedimento_pac_medico.ie_proc_adicional%type;
qt_ie_proc_princ_w			smallint;



BEGIN
-- cd_setor_atendimento_w e cd_departamento_w
begin
select	x.cd_departamento,
	x.cd_setor_atendimento
into STRICT	cd_departamento_w,
	cd_setor_atendimento_w
from	atend_paciente_unidade x
where	x.nr_atendimento 	= nr_atendimento_p
and	x.nr_seq_interno	= Obter_AtePacu_Data(x.nr_atendimento,'A',clock_timestamp());
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1025219); --O paciente nao tem passagem por setor sem alta!
end;

-- nr_seq_episodio_w
select 	nr_seq_episodio
into STRICT 	nr_seq_episodio_w
from 	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

select	nextval('procedimento_pac_medico_seq')
into STRICT	nr_sequencia_w
;

select	cd_pessoa_fisica
into STRICT	cd_pessoa_fisica_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

select 	max(cd_convenio),
		max(cd_categoria),
		max(cd_plano_convenio)
into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_plano_w
from	atend_categoria_convenio
where 	nr_atendimento		= nr_atendimento_p
and		dt_inicio_vigencia	=
			(SELECT max(dt_inicio_vigencia)
			from Atend_categoria_convenio 
			where nr_atendimento	= nr_atendimento_p);
	
cd_procedimento_w 	:= cd_procedimento_p;
ie_origem_proced_w 	:= ie_origem_proced_p;

if (coalesce(nr_seq_proc_interno_p,0) > 0) then
	SELECT * FROM OBTER_PROC_TAB_INTERNO(nr_seq_proc_interno_p, null, nr_atendimento_p, null, cd_procedimento_w, ie_origem_proced_w, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	if (coalesce(cd_procedimento_w::text, '') = '') then
		cd_procedimento_w 	:= cd_procedimento_p;
		ie_origem_proced_w 	:= ie_origem_proced_p;
	end if;
end if;

select 	count(ie_proc_princ)
into STRICT  	qt_ie_proc_princ_w
from  	procedimento_pac_medico
where 	nr_seq_episodio = nr_seq_episodio_w
and   	ie_proc_princ   = 'S'
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
and	ie_situacao = 'A';

if (coalesce(ie_proc_princ_atend_p,'NULL') = '$HL') then
	if (qt_ie_proc_princ_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1074870);
	end if;
	ie_proc_princ_w		:= 'S';
	ie_proc_adicional_w	:= 'N';
elsif (coalesce(ie_proc_princ_atend_p,'NULL') = '$NL') then
	ie_proc_princ_w		:= 'N';
	ie_proc_adicional_w	:= 'S';
end if;

-- inserir o procedimento
insert into procedimento_pac_medico(nr_sequencia,
	dt_atualizacao, 
	nm_usuario, 
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nr_atendimento, 
	ie_situacao, 
	cd_procedimento, 
	ie_origem_proced, 
	qt_procedimento, 
	nr_seq_episodio,
	ie_lado,
	ie_proc_princ,
	ie_proc_adicional,
	cd_departamento,
	cd_setor_atendimento,
	nr_seq_proc_interno,
	dt_procedimento,
	nr_cirurgia,
	IE_SIST_EXT_ORIGEM)
values (nr_sequencia_w, 
	clock_timestamp(), 
	coalesce(nm_usuario_p,wheb_usuario_pck.get_nm_usuario()), 
	clock_timestamp(), 
	coalesce(nm_usuario_p,wheb_usuario_pck.get_nm_usuario()), 
	nr_atendimento_p, 
	'A', 			 
	cd_procedimento_w, 
	ie_origem_proced_w,   
	1, 
	nr_seq_episodio_w,
	ie_lado_p,
	ie_proc_princ_w,
	ie_proc_adicional_w,
	cd_departamento_w,
	cd_setor_atendimento_w,
	nr_seq_proc_interno_p,
	clock_timestamp(),
	nr_cirurgia_p,
	'TASY');

if (coalesce(ie_liberar_informacao_p,'N') = 'S') then	
	CALL LIBERAR_PROC_PAC_MEDIC(nr_sequencia_w, nm_usuario_p);	
end if;
	
commit;
CALL insert_proc_adic_ops( nr_seq_proc_interno_p,
					  cd_convenio_w,
					  cd_categoria_w,		
					  cd_plano_w,	
					  obter_pf_usuario(nm_usuario_p, 'C'),
					  obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A'),
					  nm_usuario_p,		
					  nr_atendimento_p,
					  cd_departamento_w,		
					  cd_setor_atendimento_w,
					  nr_seq_episodio_w,
					  ie_liberar_informacao_p,
					  'N');
					
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insert_proc_ops ( cd_procedimento_p text, nr_atendimento_p bigint, nr_seq_proc_interno_p bigint, ie_lado_p text, ie_proc_princ_atend_p text, nr_cirurgia_p bigint default null, nm_usuario_p text default null, ie_origem_proced_p bigint default 11, ie_liberar_informacao_p text default 'N') FROM PUBLIC;

