-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE env_os_niver_contrato ( nm_usuario_p text) AS $body$
DECLARE


nr_seq_com_w			bigint;
nr_sequencia_w			bigint;
cd_pessoa_fisica_w		varchar(255);
cd_cnpj_w			varchar(14);
ds_razao_social_w			pessoa_juridica.ds_razao_social%type;
nr_seq_negociacao_w		bigint;
qt_modalidade_w			bigint;
ds_modalidade_w			varchar(255);
ds_dano_w			varchar(4000);
nm_user_w			varchar(50);
nm_gestor_contas_w		varchar(50);
dt_final_conta_w		timestamp;
cd_gestor_w			varchar(50);
nr_seq_log_w			numeric(20);
dt_atu_log_w			timestamp;
qt_log_w			bigint;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_cnpj
from	com_cliente a,
	contrato b
where	a.nr_sequencia = b.nr_seq_cliente
and	a.ie_classificacao = 'C'
and	b.ie_classificacao = 'AT'
and	b.nr_seq_tipo_contrato in (81, 3, 91, 1)
and	(to_char(b.dt_inicio, 'yyyy'))::numeric  < (to_char(clock_timestamp(), 'yyyy'))::numeric
and	to_char(b.dt_inicio, 'dd/mm') = to_char(clock_timestamp(), 'dd/mm')
and	exists(	SELECT	1
		from	com_canal_cliente b
		where	a.nr_sequencia = b.nr_seq_cliente
		and	b.nr_sequencia = (	select	max(x.nr_sequencia)
						from	com_canal_cliente x
						where	x.nr_seq_canal = 3
						and	x.nr_seq_cliente = b.nr_seq_cliente
						and	x.ie_tipo_atuacao = 'V'
						and	((coalesce(x.dt_fim_atuacao::text, '') = '') or (x.dt_fim_atuacao > clock_timestamp()))
						and	x.ie_situacao = 'A'));

						
c02 CURSOR FOR
	SELECT	sum(e.qt_licenca),
		substr(obter_descricao_padrao('COM_MODALIDADE_LIC','DS_MODALIDADE',e.nr_seq_mod_licenc),1,255)
	from	com_cli_neg_lic_item e
	where	e.nr_seq_neg_lic = (	SELECT	max(b.nr_sequencia)
					from	com_cli_neg_lic b
					where	b.nr_seq_cliente = nr_seq_com_w)
	group by e.nr_seq_mod_licenc
	
union

	select	sum(e.qt_licenca),
		'Total'
	from	com_cli_neg_lic_item e
	where	e.nr_seq_neg_lic = (	select	max(b.nr_sequencia)
					from	com_cli_neg_lic b
					where	b.nr_seq_cliente = nr_seq_com_w);


c03 CURSOR FOR
	SELECT	y.cd_pessoa_fisica
	from	com_cliente_gestor y
	where	y.nr_seq_cliente = nr_seq_com_w
	and	coalesce(y.dt_final::text, '') = '';


BEGIN

open c01;
loop
fetch c01 into	
	nr_seq_com_w,
	cd_cnpj_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
		select	count(*)
		into STRICT	qt_log_w
		from	com_cliente_auditoria_log x
		where	x.nr_sequencia = (	SELECT	max(y.nr_sequencia)
						from	com_cliente_auditoria_log y
						where	y.nr_seq_cliente = nr_seq_com_w)
		and	(to_char(x.dt_atualizacao,'yyyy'))::numeric  = (to_char(clock_timestamp(),'yyyy'))::numeric;

		if (qt_log_w = 0) then
		begin
			select	nextval('man_ordem_servico_seq')
			into STRICT	nr_sequencia_w
			;
		
			select	max(y.cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	com_cliente_gestor y
			where	y.nr_seq_cliente = nr_seq_com_w
			and	((coalesce(y.dt_final::text, '') = '') or (y.dt_final > clock_timestamp()));
		
			select	c.ds_razao_social
			into STRICT	ds_razao_social_w
			from	pessoa_juridica c
			where	c.cd_cgc = cd_cnpj_w;
	
			ds_dano_w := 'Solicitar relatorio de auditoria.' || chr(13) || chr(10) || chr(13) || chr(10);
	
			open c02;
			loop
			fetch c02 into	
				qt_modalidade_w,
				ds_modalidade_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				ds_dano_w := ds_dano_w || '   Qt Modalidade: ' || qt_modalidade_w || '  -  Modalidade: ' || ds_modalidade_w || chr(13) || chr(10);
				end;
			end loop;
			close c02;
	
			insert	into man_ordem_servico(
				nr_sequencia,
				cd_pessoa_solicitante,
				nr_seq_localizacao,
				nr_seq_equipamento,
				dt_ordem_servico,
				ds_dano_breve,
				nr_seq_estagio,
				nr_grupo_planej,
				nr_grupo_trabalho,
				ds_dano,
				ie_prioridade,
				ie_parado,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_tipo_ordem,
				ie_status_ordem,
				nm_usuario_exec)
			values (nr_sequencia_w,
				cd_pessoa_fisica_w,
				52, -- Comercial
				125, -- Atividades da area Comercial
				clock_timestamp(),
				substr(('Auditoria - ' || ds_razao_social_w), 1, 79),
				884, -- Auditoria de Licenca Solicitada
				11, -- Aguardando retorno comercial
				42, -- Vendas
				ds_dano_w,
				'M',
				'N',
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				1,
				1,
				'hermes');
			
			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_log_w
			from	com_cliente_auditoria_log;
			
			insert	into com_cliente_auditoria_log(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_cliente,
				nr_seq_ordem)
			values (nr_seq_log_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_com_w,
				nr_sequencia_w);
	
			insert	into man_ordem_servico_exec(
				nr_sequencia,
				nr_seq_ordem,
				dt_atualizacao,
				nm_usuario,
				nm_usuario_exec)
			values (nextval('man_ordem_servico_exec_seq'),
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				'hermes');
	
			open c03;
			loop
			fetch c03 into	
				cd_gestor_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
				select	max(z.nm_usuario)
				into STRICT	nm_gestor_contas_w
				from	usuario z
				where	z.cd_pessoa_fisica = cd_gestor_w;
	
				if (nm_gestor_contas_w IS NOT NULL AND nm_gestor_contas_w::text <> '') then
					insert	into man_ordem_servico_exec(
						nr_sequencia,
						nr_seq_ordem,
						dt_atualizacao,
						nm_usuario,
						nm_usuario_exec)
					values (nextval('man_ordem_servico_exec_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						nm_gestor_contas_w);
				end if;	
				end;
			end loop;
			close c03;
		end;
		end if;
	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE env_os_niver_contrato ( nm_usuario_p text) FROM PUBLIC;

