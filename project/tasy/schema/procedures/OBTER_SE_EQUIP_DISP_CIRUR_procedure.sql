-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_se_equip_disp_cirur ( nr_seq_agenda_p bigint, cd_equipamento_p bigint, ds_erro_p INOUT text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_agenda_ant_p bigint, ie_novo_registro_p text) AS $body$
DECLARE


dt_inicial_w		timestamp;
dt_final_w		timestamp;
qt_equip_man_w		bigint;
qt_equipamento_w		bigint;
qt_equip_agenda_w	bigint;
nr_seq_agenda_w		        agenda_paciente.nr_sequencia%type;
ds_equipamento_w		varchar(80);
ds_agenda_w		varchar(50);
dt_agenda_w		timestamp;
nm_paciente_w		varchar(60);
nm_medico_w		varchar(50);
ie_consiste_w		varchar(15);
qt_novo_registro_w	integer;
cd_classif_equip_w	bigint;
qt_tempo_esterilizacao_w	bigint;
nr_minuto_duracao_w	bigint;
nr_min_duracao_ant_w	bigint;
cd_pessoa_fisica_w	varchar(10);
cd_medico_w		varchar(10);
nr_seq_equipe_w		bigint;
qt_equip_agenda_exec_w	bigint;
ie_dia_da_semana_w	varchar(100);
qt_equip_reservado_w	bigint;
qt_equip_reserv_med_w	bigint;
qt_equip_disp_reserva_w	bigint;
qt_horas_w		double precision;
cd_agenda_w		bigint;
ds_enter_w			varchar(10) := chr(13) || chr(10);


BEGIN
if (coalesce(cd_equipamento_p,0) > 0) then
	ie_consiste_w := Obter_Param_Usuario(871, 81, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_w);

	qt_novo_registro_w	:= 0;
	if (ie_novo_registro_p = 'S') then
		qt_novo_registro_w := 1;
	end if;

	select	max(hr_inicio),
			max(cd_agenda)
	into STRICT	dt_inicial_w,
			cd_agenda_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_p;


	qt_equip_man_w	:= obter_qt_equip_manutencao(null, cd_equipamento_p,dt_inicial_w);

	select	coalesce(sum(coalesce(qt_compartilhamento,qt_equipamento)) - qt_equip_man_w, 1),
		coalesce(max(cd_classificacao),0)
	into STRICT	qt_equipamento_w,
		cd_classif_equip_w
	from	equipamento
	where	cd_equipamento	= cd_equipamento_p
	and	ie_situacao	= 'A';

	qt_tempo_esterilizacao_w	:= 0;
	/* Obter o tempo de esterilizacao da classificacao do equipamento */

	if (cd_classif_equip_w <> 0) then
		select	coalesce(max(qt_tempo_esterelizacao),0)
		into STRICT	qt_tempo_esterilizacao_w
		from	classif_equipamento
		where	nr_sequencia = cd_classif_equip_w;
	end if;

	select	max(nr_minuto_duracao)
	into STRICT	nr_min_duracao_ant_w
	from	agenda_paciente
	where	nr_sequencia = nr_seq_agenda_ant_p;
	
	select	hr_inicio,
		CASE WHEN ie_status_agenda='E' THEN  (hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400))  ELSE (hr_inicio + ((coalesce(nr_min_duracao_ant_w,nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400)) END ,
		cd_medico
	into STRICT	dt_inicial_w,
		dt_final_w,
		cd_medico_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_p;

	qt_horas_w := (dt_inicial_w - clock_timestamp()) * 24;

	/* Obter qtde de agendamentos que foram executadas no periodo - neste so e contado o tempo de esterilizacao e nao considera mais o tempo de duracao pois o mesmo ja foi realizado */



--	select	/*+ INDEX(A AGEPACI_UK) */

--		count(*)

--	into	qt_equip_agenda_exec_w

--	from	agenda c,

--		agenda_pac_equip a,

--		agenda_paciente b

--	where	b.nr_sequencia	= a.nr_seq_agenda	

--	and	((hr_inicio between dt_inicial_w and dt_final_w) or  

--		(hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or

--		((hr_inicio < dt_inicial_w) and (hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) > dt_final_w)))

--	and	a.cd_equipamento 	= cd_equipamento_p

--	and	ie_status_agenda 	= 'E'

--	and 	b.cd_agenda 		= c.cd_agenda

--	and 	c.cd_tipo_agenda 	= 1

--	and	a.nr_seq_agenda 	<> nvl(nr_seq_agenda_ant_p,0)

--	and	ie_origem_inf 		= 'I';
	SELECT	COUNT(*)
	into STRICT	qt_equip_agenda_exec_w		
	FROM	agenda_pac_equip a,
		(		SELECT	b.nr_sequencia,
					b.hr_inicio
				FROM	agenda_paciente b,
					agenda c
				WHERE	b.cd_agenda 	  = c.cd_agenda
				AND	b.ie_status_agenda= 'E'
				AND 	c.cd_tipo_agenda  = 1
				and	b.dt_agenda > dt_inicial_w - 2
				and	b.dt_agenda < dt_inicial_w + 2) b
	WHERE	b.nr_sequencia	  = a.nr_seq_agenda
	AND	((b.hr_inicio BETWEEN dt_inicial_w AND dt_final_w) OR
		 (b.hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) BETWEEN dt_inicial_w AND dt_final_w) OR
		((b.hr_inicio < dt_inicial_w) AND (b.hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) > dt_final_w)))
	AND	b.nr_sequencia 	<> coalesce(nr_seq_agenda_ant_p,0)	
	AND	a.cd_equipamento  = cd_equipamento_p
	and	a.ie_origem_inf	  = 'I';

	/* Obter qtde de agendamentos que nao foram executados e/ou cancelados no periodo */


	--select	/*+ INDEX(A AGEPACI_UK) */

	--	count(*)

	--into	qt_equip_agenda_w

	--from	agenda c,

	--	agenda_pac_equip a,

	--	agenda_paciente b

	--where	b.nr_sequencia	= a.nr_seq_agenda	

	--and	((hr_inicio between dt_inicial_w and dt_final_w) or  

	--	(hr_inicio + ((nr_minuto_duracao + nvl(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or

	--	((hr_inicio < dt_inicial_w) and (hr_inicio + ((nr_minuto_duracao + nvl(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))	

	--and	a.cd_equipamento = cd_equipamento_p

	--and 	b.cd_agenda = c.cd_agenda 

	--and 	c.cd_tipo_agenda = 1

	--and	ie_status_agenda not in ('C','E')

	--and	a.nr_seq_agenda <> nvl(nr_seq_agenda_ant_p,0)

	--and	ie_origem_inf = 'I';
	
	SELECT	COUNT(*)
	into STRICT	qt_equip_agenda_w
	FROM	agenda_pac_equip a,
		(SELECT	b.nr_sequencia,
			b.hr_inicio,
			nr_minuto_duracao
		 FROM	agenda_paciente b,
			agenda c
		 WHERE	b.cd_agenda 	  = c.cd_agenda		   		
		 AND 	c.cd_tipo_agenda  = 1
		 AND	b.ie_status_agenda NOT IN ('C','E')
		 and	b.dt_agenda > dt_inicial_w - 2
		 and	b.dt_agenda < dt_inicial_w + 2) b
	WHERE	b.nr_sequencia	  = a.nr_seq_agenda
	AND	((b.hr_inicio BETWEEN dt_inicial_w AND dt_final_w) OR
		 (b.hr_inicio + ((b.nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) BETWEEN dt_inicial_w AND dt_final_w) OR
		((b.hr_inicio < dt_inicial_w) AND (b.hr_inicio + ((b.nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))	
	AND	b.nr_sequencia <> coalesce(nr_seq_agenda_ant_p,0)
	AND	a.cd_equipamento  = cd_equipamento_p
	AND	a.ie_origem_inf	  = 'I';

	qt_equip_agenda_w	:= qt_equip_agenda_exec_w + qt_equip_agenda_w + qt_novo_registro_w;

	if (qt_equipamento_w < qt_equip_agenda_w) then
		
		/*select	max(nr_seq_agenda)
		into	nr_seq_agenda_w
		from	(select	nvl(max(b.nr_sequencia),0) nr_seq_agenda
			from	agenda c,
				agenda_pac_equip a,
				agenda_paciente b
			where	b.nr_sequencia	= a.nr_seq_agenda	
			and	((hr_inicio between dt_inicial_w and dt_final_w) or  
				(hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
				((hr_inicio < dt_inicial_w) and (hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) > dt_final_w)))
			and	a.cd_equipamento = cd_equipamento_p
			and 	b.cd_agenda = c.cd_agenda 
			and 	c.cd_tipo_agenda = 1
			and	ie_status_agenda = 'E'
			and	ie_origem_inf = 'I'	
			and	a.nr_seq_agenda <> nvl(nr_seq_agenda_ant_p,0)
			union		
			select	nvl(max(b.nr_sequencia),0) nr_seq_agenda
			from	agenda c,
				agenda_pac_equip a,
				agenda_paciente b
			where	b.nr_sequencia	= a.nr_seq_agenda	
			and	((hr_inicio between dt_inicial_w and dt_final_w) or  
				(hr_inicio + ((nr_minuto_duracao + nvl(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
				((hr_inicio < dt_inicial_w) and (hr_inicio + ((nr_minuto_duracao + nvl(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))		
			and	a.cd_equipamento = cd_equipamento_p
			and	ie_status_agenda not in ('C', 'E')
			and 	b.cd_agenda = c.cd_agenda 
			and 	c.cd_tipo_agenda = 1
			and	a.nr_seq_agenda <> nvl(nr_seq_agenda_ant_p,0)
			and	ie_origem_inf = 'I');
		*/
		SELECT	MAX(nr_seq_agenda)
		into STRICT	nr_seq_agenda_w
		FROM	(SELECT	coalesce(MAX(a.nr_seq_agenda),0) nr_seq_agenda
			 FROM	agenda_pac_equip a,
				(SELECT	b.nr_sequencia,
					b.hr_inicio
				 FROM	agenda_paciente b,
			 		agenda c
				 WHERE	b.cd_agenda 	  = c.cd_agenda
				 AND	b.ie_status_agenda= 'E'
				 AND 	c.cd_tipo_agenda  = 1
				 AND	b.dt_agenda > dt_inicial_w - 2
				 AND	b.dt_agenda < dt_inicial_w + 2) b
		WHERE	 b.nr_sequencia	= a.nr_seq_agenda	
		AND	((b.hr_inicio BETWEEN dt_inicial_w AND dt_final_w) OR
			 (b.hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) BETWEEN dt_inicial_w AND dt_final_w) OR
			((b.hr_inicio < dt_inicial_w) AND (b.hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) > dt_final_w)))
		AND	b.nr_sequencia 	<> coalesce(nr_seq_agenda_ant_p,0)	
		AND	a.cd_equipamento  = cd_equipamento_p
		AND	a.ie_origem_inf	  = 'I'
		
UNION
		
		SELECT	coalesce(MAX(b.nr_sequencia),0) nr_seq_agenda
		FROM	agenda_pac_equip a,
			(SELECT	b.nr_sequencia,
				b.hr_inicio,
				b.nr_minuto_duracao
			 FROM	agenda_paciente b,
				agenda c
			 WHERE	b.cd_agenda 	  = c.cd_agenda		   		
			 AND 	c.cd_tipo_agenda  = 1
			 AND	b.ie_status_agenda NOT IN ('C','E')
			 AND	b.dt_agenda > dt_inicial_w - 2
			 AND	b.dt_agenda < dt_inicial_w + 2) b
		WHERE	b.nr_sequencia	  = a.nr_seq_agenda
		AND	((b.hr_inicio BETWEEN dt_inicial_w AND dt_final_w) OR  
			 (b.hr_inicio + ((b.nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) BETWEEN dt_inicial_w AND dt_final_w) OR
			((b.hr_inicio < dt_inicial_w) AND (b.hr_inicio + ((b.nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))	
		AND	b.nr_sequencia <> coalesce(nr_seq_agenda_ant_p,0)
		AND	a.cd_equipamento  = cd_equipamento_p
		AND	a.ie_origem_inf	  = 'I') alias35;	
		
		if (nr_seq_agenda_w > 0) then
					
			select	substr(Obter_Desc_Equipamento(cd_equipamento_p),1,80),
				hr_inicio,
				substr(obter_nome_agenda(cd_agenda),1,50),
				nm_paciente,
				substr(obter_nome_pf(cd_medico),1,50),
				nr_minuto_duracao
			into STRICT	ds_equipamento_w,
				dt_agenda_w,
				ds_agenda_w,
				nm_paciente_w,
				nm_medico_w,
				nr_minuto_duracao_w
			from	agenda_paciente
			where	nr_sequencia	= nr_seq_agenda_w;
			
			if (qt_equip_man_w > 0) then
				ds_erro_p :=	substr(wheb_mensagem_pck.get_texto(279012, 'DS_EQUIPAMENTO_P=' || ds_equipamento_w) || ds_enter_w ,1,255);
			else
				ds_erro_p :=	substr(wheb_mensagem_pck.get_texto(277557, 'DS_CLASSIF_EQUI_P=' || ds_equipamento_w ||
											';NM_PACIENTE_P=' || nm_paciente_w ||
											';DT_AGENDA_P=' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_agenda_w, 'short', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone) ||
											';DS_AGENDA_P=' || ds_agenda_w ||
											';NM_MEDICO_P=' || nm_medico_w ||
											';QT_TEMPO_TOTAL_P=' || to_char(qt_tempo_esterilizacao_w + nr_minuto_duracao_w)) || ds_enter_w,1,255);
			end if;
					
			if (ie_consiste_w <> 'N') then
				insert into agenda_pac_hist(
					nr_sequencia,
					nr_seq_agenda,          
					ds_historico,           
					dt_atualizacao,         
					nm_usuario,             
					dt_historico,           
					cd_pessoa_fisica,       
					dt_atualizacao_nrec,    
					nm_usuario_nrec)
				values (
					nextval('agenda_pac_hist_seq'),
					nr_seq_agenda_p,
					wheb_mensagem_pck.get_texto(279014, 'CD_EQUIPAMENTO_P=' || substr(Obter_Desc_Equipamento(cd_equipamento_p),1,80)) || ds_erro_p,
					clock_timestamp(),
					'Tasy',
					clock_timestamp(),
					Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
					clock_timestamp(),
					'Tasy');
				commit;
			end if;
		elsif (qt_equip_man_w > 0) and (ie_novo_registro_p = 'S') then

			ds_erro_p :=	wheb_mensagem_pck.get_texto(279012, 'DS_EQUIPAMENTO_P=' || ds_equipamento_w);
					
			if (ie_consiste_w <> 'N') then
				insert into agenda_pac_hist(
					nr_sequencia,
					nr_seq_agenda,          
					ds_historico,           
					dt_atualizacao,         
					nm_usuario,             
					dt_historico,           
					cd_pessoa_fisica,       
					dt_atualizacao_nrec,    
					nm_usuario_nrec)
				values (
					nextval('agenda_pac_hist_seq'),
					nr_seq_agenda_p,
					wheb_mensagem_pck.get_texto(279014, 'CD_EQUIPAMENTO_P=' || substr(Obter_Desc_Equipamento(cd_equipamento_p),1,80)) || ds_erro_p,
					clock_timestamp(),
					'Tasy',
					clock_timestamp(),
					Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
					clock_timestamp(),
					'Tasy');
				commit;
			end if;	
		end if;
	end if;

	ie_dia_da_semana_w := Obter_Cod_Dia_Semana(dt_inicial_w);

	-- Busca a quantidade de reservas do equipamento naquele horario
	if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
		select 	count(*)
		into STRICT	qt_equip_reservado_w
		from   	regra_reserva_equipamento
		where  	cd_equipamento = cd_equipamento_p
		and		coalesce(cd_Agenda, cd_agenda_w)	= cd_agenda_w
		and 	coalesce(ie_dia_semana,coalesce(ie_dia_da_semana_w,'X')) = coalesce(ie_dia_da_semana_w,'X')
		and (dt_inicial_w between 	to_date(to_char(dt_inicial_w,'dd/mm/yyyy') || ' ' || to_char(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and
						to_date(to_char(dt_inicial_w,'dd/mm/yyyy') || ' ' || to_char(hr_fim,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
		and	((coalesce(qt_horas_ant_agenda,0) = 0) or (qt_horas_w > coalesce(qt_horas_ant_agenda,0)))
		and	((coalesce(dt_inicio_vigencia::text, '') = '') or (dt_inicio_vigencia <= establishment_timezone_utils.startofday(dt_inicial_w)))
		and	((coalesce(dt_final_vigencia::text, '') = '') or (dt_final_vigencia >= establishment_timezone_utils.startofday(dt_inicial_w)));

		-- Se possui equipamento reservado naquele horario, consiste disponibilidade do mesmo
		if (qt_equip_reservado_w > 0) then
			-- Verfica se o equipamento est reservado para o medico
			select 	count(*)
			into STRICT	qt_equip_reserv_med_w
			from   	regra_reserva_equipamento
			where  	cd_equipamento = cd_equipamento_p
			and		coalesce(cd_Agenda, cd_agenda_w)	= cd_agenda_w
			and 	coalesce(ie_dia_semana,coalesce(ie_dia_da_semana_w,'X')) = coalesce(ie_dia_da_semana_w,'X')
			and (dt_inicial_w between 	to_date(to_char(dt_inicial_w,'dd/mm/yyyy') || ' ' || to_char(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and
							to_date(to_char(dt_inicial_w,'dd/mm/yyyy') || ' ' || to_char(hr_fim,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
			and	((cd_pessoa_fisica = cd_medico_w) or (obter_se_medico_equipe(nr_seq_equipe,cd_medico_w) = 'S'))
			and	((coalesce(dt_inicio_vigencia::text, '') = '') or (dt_inicio_vigencia <= establishment_timezone_utils.startofday(dt_inicial_w)))
			and	((coalesce(dt_final_vigencia::text, '') = '') or (dt_final_vigencia >= establishment_timezone_utils.startofday(dt_inicial_w)));
			
			

			-- Se nao esta reservado, consiste disponibilidade de quantidade de equipamento disponivel
			if (qt_equip_reserv_med_w = 0) then
				qt_equip_disp_reserva_w := qt_equipamento_w - (qt_equip_agenda_w - qt_novo_registro_w) - qt_equip_reservado_w;
				
				

				if (qt_equip_disp_reserva_w = 0) and (ie_consiste_w <> 'N') then
					select 	max(cd_pessoa_fisica),
						max(nr_seq_equipe)
					into STRICT	cd_pessoa_fisica_w,
						nr_seq_equipe_w
					from   	regra_reserva_equipamento
					where	nr_sequencia = (SELECT 	max(nr_sequencia)
								from	regra_reserva_equipamento
								where  	cd_equipamento = cd_equipamento_p
								and		coalesce(cd_Agenda, cd_agenda_w)	= cd_agenda_w
								and 	coalesce(ie_dia_semana,coalesce(ie_dia_da_semana_w,'X')) = coalesce(ie_dia_da_semana_w,'X')
								and (dt_inicial_w between 	to_date(to_char(dt_inicial_w,'dd/mm/yyyy') || ' ' || to_char(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and
												to_date(to_char(dt_inicial_w,'dd/mm/yyyy') || ' ' || to_char(hr_fim,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
								and	((coalesce(dt_inicio_vigencia::text, '') = '') or (dt_inicio_vigencia <= establishment_timezone_utils.startofday(dt_inicial_w)))
								and	((coalesce(dt_final_vigencia::text, '') = '') or (dt_final_vigencia >= establishment_timezone_utils.startofday(dt_inicial_w))));
					if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
						ds_erro_p :=	wheb_mensagem_pck.get_texto(279015, 'DS_EQUIPAMENTO_P=' || ds_equipamento_w || ';CD_PESSOA_FISICA_P=' || substr(obter_nome_pf(cd_pessoa_fisica_w),1,50));
					else
						ds_erro_p :=	wheb_mensagem_pck.get_texto(279016, 'DS_EQUIPAMENTO_P=' || ds_equipamento_w || ';NR_SEQ_EQUIPE_P=' || substr(Obter_Desc_PF_Equipe(nr_seq_equipe_w),1,50));
					end if;	
					
					insert into agenda_pac_hist(
						nr_sequencia,
						nr_seq_agenda,          
						ds_historico,           
						dt_atualizacao,         
						nm_usuario,             
						dt_historico,           
						cd_pessoa_fisica,       
						dt_atualizacao_nrec,    
						nm_usuario_nrec)
					values (
						nextval('agenda_pac_hist_seq'),
						nr_seq_agenda_p,
						wheb_mensagem_pck.get_texto(279014, 'CD_EQUIPAMENTO_P=' || substr(Obter_Desc_Equipamento(cd_equipamento_p),1,80)) || ds_erro_p,
						clock_timestamp(),
						'Tasy',
						clock_timestamp(),
						Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
						clock_timestamp(),
						'Tasy');
						commit;
				end if;	
			end if;	
		end if;	
	end if;	
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_se_equip_disp_cirur ( nr_seq_agenda_p bigint, cd_equipamento_p bigint, ds_erro_p INOUT text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_agenda_ant_p bigint, ie_novo_registro_p text) FROM PUBLIC;

