-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_atend_paciente_unidade ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, dt_entrada_unidade_p timestamp, dt_saida_unidad_p timestamp, ie_inserir_mot_perm_p text, cd_motivo_permanencia_p bigint, ie_transf_prescr_passagem_p text, ie_setor_internacao_p text, ie_interditados_p text, ie_leito_ocupado_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;
nr_seq_interno_w	bigint;
cd_tipo_acomodacao_w	smallint;
cd_setor_atend_w	bigint;
cd_unidade_basica_w	varchar(10);
cd_unidade_compl_w	varchar(10);
ds_erro_w		varchar(4000);
cd_estabelecimento_w setor_atendimento.cd_estabelecimento_Base%type;
nr_seq_unid_w		unidade_atendimento.nr_seq_interno%type;
cd_departamento_w	atend_paciente_unidade.cd_departamento%type;

BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') and (dt_entrada_unidade_p IS NOT NULL AND dt_entrada_unidade_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin

	if (coalesce(cd_unidade_basica_p::text, '') = '') then
		begin
		cd_unidade_basica_w := ' ';
		end;
	else
		cd_unidade_basica_w := cd_unidade_basica_p;
	end if;

	if (coalesce(cd_unidade_compl_p::text, '') = '') then
		begin
		cd_unidade_compl_w := ' ';
		end;
	else
		cd_unidade_compl_w := cd_unidade_compl_p;
	end if;

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p;

	select	max(cd_tipo_acomodacao),
			max(nr_seq_interno)
	into STRICT	cd_tipo_acomodacao_w,
			nr_seq_unid_w
	from	unidade_atendimento
	where	cd_setor_atendimento = cd_setor_atendimento_p
	and		cd_unidade_basica = cd_unidade_basica_p
	and 	cd_unidade_compl = cd_unidade_compl_p;

	if (coalesce(cd_tipo_acomodacao_w::text, '') = '') then
		select	max(a.cd_tipo_acomodacao)
		into STRICT	cd_tipo_acomodacao_w
		from	unidade_atendimento a
		where	a.cd_setor_atendimento = cd_setor_atendimento_p
		and (ie_setor_internacao_p = 'N' or ie_status_unidade = 'L' or ie_leito_ocupado_p = 'S')
		and	((ie_interditados_p = 'S') or (ie_status_unidade <> 'I'))
		and	ie_situacao = 'A';
	end if;

	select	nextval('atend_paciente_unidade_seq')
	into STRICT	nr_seq_interno_w
	;




        begin
		select 	Obter_Unidade_Atendimento(nr_atendimento_p,'A','CS')
		into STRICT	cd_setor_atend_w
		;
        exception
        when others then
		cd_setor_atend_w := 0;
        end;

	if (coalesce(cd_setor_atend_w,0) > 0)  then
		ds_erro_w := consistir_regra_transf_setor('P', cd_setor_atend_w, cd_setor_atendimento_p, nr_atendimento_p, ds_erro_w);
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(445244, 'DS_ERRO=' || ds_erro_w);
		end if;
	end if;

	select 	max(cd_departamento)
	into STRICT 	cd_departamento_w
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p
	and 	coalesce(dt_saida_unidade::text, '') = '';

	insert into atend_paciente_unidade(nr_atendimento,
		cd_setor_atendimento,
		cd_unidade_basica,
		cd_unidade_compl,
		dt_entrada_unidade,
		dt_atualizacao,
		nm_usuario,
		cd_tipo_acomodacao,
		dt_saida_unidade,
		nr_atend_dia,
		ds_observacao,
		nr_sequencia,
		nm_usuario_original,
		ie_passagem_setor,
		nr_seq_interno,
		ie_calcular_dif_diaria,
		cd_departamento)
	values (
		nr_atendimento_p,
		cd_setor_atendimento_p,
		cd_unidade_basica_p,
		cd_unidade_compl_p,
		dt_entrada_unidade_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_tipo_acomodacao_w,
		dt_saida_unidad_p,
		null,
		null,
		nr_sequencia_w,
		nm_usuario_p,
		'S',
		nr_seq_interno_w,
		'S',
		cd_departamento_w);

	commit;

	CALL Atend_Paciente_Unid_AfterPost(
		nr_seq_interno_w,
		'I',
		nm_usuario_p);


	if (ie_inserir_mot_perm_p = 'S') then
		begin
		CALL inserir_motivo_permanencia(
			nm_usuario_p,
			nr_atendimento_p,
			cd_setor_atendimento_p,
			cd_unidade_basica_p,
			cd_unidade_compl_p,
			cd_motivo_permanencia_p);
		end;
	end if;

	commit;

	if (ie_transf_prescr_passagem_p = 'S') then
		begin
		CALL Atualiza_setor_prescr_Passagem(
			nr_atendimento_p,
			cd_setor_atendimento_p);
		end;
	end if;

	end;

	CALL gerar_higienizacao_leito_unid(clock_timestamp(),nm_usuario_p,cd_estabelecimento_w,'PSM',nr_seq_unid_w,null,null);

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_atend_paciente_unidade ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, dt_entrada_unidade_p timestamp, dt_saida_unidad_p timestamp, ie_inserir_mot_perm_p text, cd_motivo_permanencia_p bigint, ie_transf_prescr_passagem_p text, ie_setor_internacao_p text, ie_interditados_p text, ie_leito_ocupado_p text, nm_usuario_p text) FROM PUBLIC;

