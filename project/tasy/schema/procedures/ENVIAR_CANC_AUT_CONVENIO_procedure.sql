-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_canc_aut_convenio (nr_sequencia_p autorizacao_convenio.nr_sequencia%type, ie_enviado_p INOUT integration_call_log.ie_status%type) AS $body$
DECLARE


nr_sequencia_w autorizacao_convenio.nr_sequencia%type := nr_sequencia_p;
cd_estabelecimento_w autorizacao_convenio.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;
nm_usuario_w autorizacao_convenio.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
nm_event_w constant integration_call_log.nm_interface%type := 'api.send.cancel.insurance.authorization';
json_data_w philips_json;
data_w text;
nr_seq_int_call_log_w integration_message_log.nr_seq_int_call_log%type := 0;
ds_notes_w integration_call_log.ds_notes%TYPE;
ds_notes_message_w integration_call_log.ds_notes%TYPE := 'Success in the process of sending the request to cancel the insurance authorization.';
ds_notes_params_w integration_call_log.ds_notes%TYPE;
ie_status_w integration_call_log.ie_status%type := 'S';
ie_message_type_w integration_call_log.ie_message_type%type := 'R';
separador_linha_w constant integration_call_log.nm_message%type :=  CHR(13) || CHR(10);
ds_message_error_w integration_call_log.ds_notes%TYPE;
retorno_integracao_w text;


c01 CURSOR FOR
    SELECT a.cd_senha,
           a.ds_motivo_cancelamento,
           (SELECT c.cd_rfc
            from pessoa_juridica c 
            where c.cd_cgc = (select d.cd_cgc 
                              from estabelecimento d 
                              where d.cd_estabelecimento = cd_estabelecimento_w)) cd_rcf_pj,
           e.cd_medico_resp,
           a.cd_convenio,
           a.nr_atendimento,
           a.dt_atualizacao,
           a.nr_sequencia
    from autorizacao_convenio a, atendimento_paciente e
    where a.nr_sequencia = nr_sequencia_w
    and a.nr_atendimento = e.nr_atendimento;

BEGIN

    ds_notes_params_w := substr(' nr_sequencia: '||nr_sequencia_w||' nm_usuario: '||nm_usuario_w,1,499);

    ds_notes_w := substr(ds_notes_message_w || separador_linha_w || ds_notes_params_w,1,499);

    <<BLOCO_PRINCIPAL>>
    BEGIN
        json_data_w := philips_json();

        <<LOOP_JSON>>
        FOR info in c01 LOOP
            json_data_w.put(pair_name => 'authorizationID', pair_value => info.cd_senha);
            json_data_w.put(pair_name => 'cancellationReason', pair_value => info.ds_motivo_cancelamento);
            json_data_w.put(pair_name => 'providerCuit', pair_value => info.cd_rcf_pj);
            json_data_w.put(pair_name => 'professionalEffectorCuit', pair_value => info.cd_medico_resp);
            json_data_w.put(pair_name => 'socialWork', pair_value => info.cd_convenio);
            json_data_w.put(pair_name => 'attentionNumber', pair_value => info.nr_atendimento);
            json_data_w.put(pair_name => 'dateTimeSystem', pair_value => info.dt_atualizacao);
            json_data_w.put(pair_name => 'transactionId', pair_value => info.nr_sequencia);
        END LOOP LOOP_JSON;

        dbms_lob.createtemporary(lob_loc => data_w, cache => true);
        json_data_w.(data_w);
        retorno_integracao_w := bifrost.send_integration_content(nm_event => nm_event_w, ds_content => data_w, nm_user => nm_usuario_w);

        <<ENVIO_TIE_OK>>
        BEGIN
            select a.ds_message_error
            into STRICT ds_message_error_w
            from bifrost_layer_log a
            where a.nm_event = nm_event_w
            and a.nr_sequence in (SELECT max(b.nr_sequence)
                                  from bifrost_layer_log b
                                  where b.nm_event = nm_event_w);

            if (ds_message_error_w IS NOT NULL AND ds_message_error_w::text <> '') then
                ie_enviado_p := 'N';
            else
                ie_enviado_p := 'S';
            end if;
        EXCEPTION
            WHEN no_data_found OR too_many_rows THEN
                ie_enviado_p := 'N';
        END;

        nr_seq_int_call_log_w := record_integration_call_log(nm_usuario_w, nm_usuario_w, clock_timestamp(), nm_event_w, nm_event_w, ie_status_w, ie_message_type_w, null, ds_notes_w, null, null, null, nr_seq_int_call_log_w, null, null, null);

    END;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_canc_aut_convenio (nr_sequencia_p autorizacao_convenio.nr_sequencia%type, ie_enviado_p INOUT integration_call_log.ie_status%type) FROM PUBLIC;

