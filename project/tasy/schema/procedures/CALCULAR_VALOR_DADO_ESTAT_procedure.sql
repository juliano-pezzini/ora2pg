-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_valor_dado_estat (nr_atendimento_p bigint) AS $body$
DECLARE


nr_sequencia_w	bigint;
nr_seq_tipo_dado_w	bigint;
ds_formula_w		varchar(255);
ie_pos_arroba_ini_w	bigint;
ie_pos_arroba_fim_w	bigint;
ds_expressao_w	varchar(10);
nr_seq_expressao_w	bigint;
qt_dado_w		double precision;
ds_comando_w		varchar(255);

C01 CURSOR FOR
SELECT		e.nr_sequencia,
		e.nr_seq_tipo_dado
from		checkup_dado_estat e
where		e.nr_atendimento = nr_atendimento_p
group by	e.nr_sequencia,
		e.nr_seq_tipo_dado
order by	e.nr_sequencia,
		e.nr_seq_tipo_dado;


BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	open c01;
	loop
	fetch c01 into	nr_sequencia_w,
				nr_seq_tipo_dado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

	select	e.ds_calculo
	into STRICT	ds_formula_w
	from	checkup_tipo_dado_estat e
	where	e.nr_sequencia = nr_seq_tipo_dado_w;

	while	position('@' in ds_formula_w) > 0 loop
		begin
		ie_pos_arroba_ini_w	:= position('@' in ds_formula_w);
		ie_pos_arroba_fim_w	:= position('@' in substr(ds_formula_w, ie_pos_arroba_ini_w+1, length(ds_formula_w))) + ie_pos_arroba_ini_w;
		ds_expressao_w	:= substr(ds_formula_w, ie_pos_arroba_ini_w, ie_pos_arroba_fim_w - ie_pos_arroba_ini_w+1);

		/*obter sequência do registro na tabela*/

		select	somente_numero(ds_expressao_w)
		into STRICT	nr_seq_expressao_w
		;

		/*obter valor cadastrado nesta sequência*/

		select	coalesce(max(e.qt_dado),0)
		into STRICT	qt_dado_w
		from	checkup_dado_estat e
		where	e.nr_seq_tipo_dado	= nr_seq_expressao_w
		and	e.nr_atendimento	= nr_atendimento_p;

		/*subsituir o valor na fórmula*/

		select	replace(ds_formula_w, ds_expressao_w, qt_dado_w)
		into STRICT	ds_formula_w
		;
		end;
	end loop;

	if (ds_formula_w IS NOT NULL AND ds_formula_w::text <> '') then
		/*gerar comando sql*/

		ds_comando_w	:=	' update checkup_dado_estat	' ||
					' set	 qt_dado	=	' || ds_formula_w ||
					' where	 nr_sequencia	=	' || nr_sequencia_w;

		/*subsituir a vírgula por ponto*/

		select	replace(ds_comando_w, ',', '.')
		into STRICT	ds_comando_w
		;

		/*executar comando sql*/

		CALL Exec_Sql_Dinamico('Tasy',ds_comando_w);

		update	checkup_dado_estat
		set	qt_dado		= round((qt_dado)::numeric,2)
		where	nr_sequencia	= nr_sequencia_w;
	end if;
	end loop;
	close c01;
end if;
commit;
END	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_valor_dado_estat (nr_atendimento_p bigint) FROM PUBLIC;

