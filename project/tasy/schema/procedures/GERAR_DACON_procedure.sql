-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_dacon ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

			 
			 
ds_arquivo_w		varchar(4000);
nr_linha_w		bigint;
nr_sequencia_w		bigint;
conta_w			integer;
cd_estabelecimento_w	bigint;
dt_referencia_w		timestamp;
ie_indicador_w		smallint;
nr_versao_pgd_w		smallint;

 
 
C01 CURSOR FOR 
SELECT	rpad(elimina_caractere_especial(elimina_acentuacao('DACONMS')) ,8,' ') ds_dacon, 
	lpad(0,4,0) ds_reservado, 
	lpad(to_char(dt_referencia_w, 'yyyy'),4,0) dt_ano_competencia, 
	lpad(0,4,0) ds_reservado1, 
	lpad(ie_indicador_w, 1, 0) ie_indicador, 
	lpad(b.cd_cgc, 14, 0) cd_cgc, 
	2 ie_tipo_ni, 
	lpad(nr_versao_pgd_w, 3, 0) nr_versao_pgd, 
	rpad(obter_nome_pf_pj('', b.cd_cgc), 60, ' ') nm_pessoa_juridica, 
	c.sg_estado, 
	lpad(0,10,0) ds_reservado2, 
	lpad(' ',250,' ') ds_reservado3, 
	lpad(0,3,0) ds_reservado4, 
	lpad(0,10,0) ds_reservado5, 
	('0x0D 0x0A') ds_fim 
from	pessoa_juridica c, 
	estabelecimento b 
where	b.cd_estabelecimento = cd_estabelecimento_w 
and	b.cd_cgc	= c.cd_cgc;
	
vet01	C01%RowType;

C02 CURSOR FOR 
SELECT	rpad('R01',4,' ') ds_tipo_registro, 
	rpad(elimina_caractere_especial(elimina_acentuacao(b.cd_cgc)),14,' ') cd_cgc, 
	1 ie_periodicidade, 
	substr(to_char(dt_referencia_w, 'yyyyMM'), 1, 6) dt_anomes_comp, 
	substr(to_char(dt_referencia_w, 'ddMMyyyy'), 1, 8) dt_inicial, 
	substr(to_char(dt_referencia_w + 30, 'ddMMyyyy'), 1, 8) dt_final, 
	lpad(ie_indicador_w, 1, 0) ie_indicador, 
	lpad(0,2,0) ie_situacao_esp, 
	rpad(0,8,0) dt_evento, 
	0 ie_desenquadramento, 
	rpad(0,8,0) dt_desenquadramento, 
	lpad(0,10,0) ds_reservado, 
	lpad(1,2,0) ie_qualificacao_pj, 
	lpad(0,2,0) ie_tipo_entidade, 
	2 ie_inclusao_simples, 
	rpad(0,8,0) dt_inclusao, 
	3 ie_regime_apuracao, 
	0 ie_apuracao_credito, 
	2 ie_apuracao_contribuinte, 
	2 ie_apuracao_tributario, 
	2 ie_produto_contribuinte, 
	2 ie_produto_tributario, 
	2 ie_adicao_contribuicao, 
	2 ie_difer_contribuicao, 
	2 ie_creditos_transf, 
	2 ie_creditos_deferidos, 
	2 ie_desconto_mes, 
	' ' ds_metodo_creditos, 
	lpad(0,10,0) ds_reservado1, 
	('0x0D 0x0A') ds_fim 
from 	estabelecimento b 
where	b.cd_estabelecimento = cd_estabelecimento_w;

vet02	C02%RowType;

C03 CURSOR FOR 
	SELECT	rpad('R02', 4, ' ') ds_tipo_registro, 
	rpad(elimina_caractere_especial(elimina_acentuacao(b.cd_cgc)),14,' ') cd_cgc, 
	rpad(obter_nome_pf_pj('', b.cd_cgc), 150, ' ') nm_pessoa_juridica, 
	lpad(elimina_caractere_especial(a.cd_nat_juridica), 4, 0) cd_nat_juridica, 
	rpad(0,7,0) ds_reservado, 
	rpad(obter_logradouro_dacon(d.ds_tipo_logradouro), 20, ' ') ds_logradouro, 
	rpad(c.ds_endereco, 150, ' ') nm_logradouro, 
	rpad(c.nr_endereco, 6, ' ') ds_numero, 
	rpad(elimina_caractere_especial(elimina_acentuacao(CASE WHEN c.ds_complemento='' THEN  ''  ELSE c.ds_complemento END )), 50, ' ') ds_complemento, 
	rpad(elimina_caractere_especial(elimina_acentuacao(CASE WHEN c.ds_bairro='' THEN  ''  ELSE c.ds_bairro END )), 50, ' ') ds_bairro, 
	c.sg_estado, 
	rpad(c.ds_municipio, 50, ' ') ds_municipio, 
	rpad(CASE WHEN c.cd_cep='' THEN  ' '  ELSE c.cd_cep END , 8, ' ') cd_cep, 
	rpad(CASE WHEN c.nr_ddd_telefone='' THEN  ' '  ELSE c.nr_ddd_telefone END , 4, ' ') nr_ddd_telefone, 
	rpad(elimina_caractere_especial(CASE WHEN c.nr_telefone='' THEN  ' '  ELSE c.nr_telefone END ), 8, ' ') nr_telefone, 
	rpad(CASE WHEN c.nr_ddd_fax='' THEN  ''  ELSE c.nr_ddd_fax END , 4, ' ') nr_ddd_fax, 
	rpad(elimina_caractere_especial(CASE WHEN c.nr_fax='' THEN  ' '  ELSE c.nr_fax END ), 8, ' ') nr_fax, 
	rpad(' ', 6, ' ') ds_caixa_postal, 
	rpad(' ', 2, ' ') uf_caixa_postal, 
	rpad(' ', 8, ' ') cd_cep_caixa_postal, 
	rpad(CASE WHEN c.ds_email='' THEN  ''  ELSE c.ds_email END  ,115, ' ') ds_email, 
	rpad(0,10,0)ds_reservado1, 
	('0x0D 0x0A') ds_fim 
from	sup_natureza_juridica a, 
	cns_tipo_logradouro d, 
	estabelecimento b, 
	pessoa_juridica c 
where	b.cd_cgc	= c.cd_cgc 
and	b.cd_estabelecimento	= cd_estabelecimento_w 
and	c.nr_seq_tipo_logradouro	= d.nr_sequencia 
and	c.nr_seq_nat_juridica	= a.nr_sequencia;

 
vet03	C03%RowType;

C04 CURSOR FOR 
	SELECT	rpad('R03', 4, ' ') ds_tipo_registro, 
		rpad(substr(obter_nome_pf_pj(e.cd_titular,null),1,150),150,' ') nm_representante, 
		substr(obter_dados_pf(elimina_caractere_especial(elimina_acentuacao(e.cd_titular)),'CPF'), 1,11) nr_cpf_representante, 
		rpad(CASE WHEN coalesce(e.cd_titular, 'X')='X' THEN  ' '  ELSE elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_titular, 1, 'DDT'))) END ,4, ' ') nr_ddd_telefone_rep, 
		rpad(CASE WHEN coalesce(e.cd_titular, 'X')='X' THEN  ' '  ELSE elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_titular, 1, 'T'))) END , 8, ' ') nr_telefone_rep, 
		rpad(CASE WHEN coalesce(elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_titular, 1, 'RAM'))), 'X')='X' THEN ' '  ELSE elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_titular, 1, 'RAM'))) END , 5, ' ') nr_ramal_rep, 
		rpad(CASE WHEN coalesce(e.cd_titular, 'X')='X' THEN  ' '  ELSE elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_titular, 1, 'DDF'))) END , 4, ' ') nr_ddd_fax_rep, 
		rpad(CASE WHEN coalesce(e.cd_titular, 'X')='X' THEN  ' '  ELSE elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_titular, 1, 'FAX'))) END , 8, ' ') nr_fax_rep, 
		rpad(substr(obter_compl_pf(CASE WHEN coalesce(e.cd_titular, 'X')='X' THEN ' '  ELSE e.cd_titular END , 1, 'M'), 1, 115), 115, ' ') ds_email_rep, 
		rpad(substr(obter_nome_pf_pj(e.cd_contabilista,null),1,150),150,' ') nm_responsavel, 
		substr(obter_dados_pf(elimina_caractere_especial(elimina_acentuacao(e.cd_contabilista)),'CPF'), 1,11) nr_cpf_responsavel, 
		rpad(substr(CASE WHEN e.nr_crc='' THEN  ''  ELSE elimina_caractere_especial(elimina_acentuacao(e.nr_crc)) END , 1,11), 15, ' ') nr_crc_resp, 
		rpad(substr(CASE WHEN e.cd_contabilista='' THEN  ''  ELSE obter_dados_pf_pj(e.cd_contabilista, null, 'UF') END , 1,2), 2, ' ') sg_uf_resp, 
		rpad(CASE WHEN coalesce(e.cd_contabilista, 'X')='X' THEN  ' '  ELSE elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_contabilista, 1, 'DDT'))) END ,4, ' ') nr_ddd_telefone_resp, 
		rpad(CASE WHEN coalesce(e.cd_contabilista, 'X')='X' THEN  ' '  ELSE elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_contabilista, 1, 'T'))) END , 8, ' ') nr_telefone_resp, 
		rpad(CASE WHEN coalesce(elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_contabilista, 1, 'RAM'))), 'X')='X' THEN ' '  ELSE elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_contabilista, 1, 'RAM'))) END , 5, ' ') nr_ramal_resp, 
		rpad(CASE WHEN coalesce(e.cd_contabilista, 'X')='X' THEN  ' '  ELSE elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_contabilista, 1, 'DDF'))) END , 4, ' ') nr_ddd_fax_resp, 
		rpad(CASE WHEN coalesce(e.cd_contabilista, 'X')='X' THEN  ' '  ELSE elimina_caractere_especial(elimina_acentuacao(obter_compl_pf(e.cd_contabilista, 1, 'FAX'))) END , 8, ' ') nr_fax_resp, 
		rpad(CASE WHEN coalesce(obter_compl_pf(e.cd_contabilista, 1, 'M'), 'X')='X' THEN  ' '  ELSE e.cd_contabilista END , 115, ' ') ds_email_resp, 
		rpad(0,10,0) ds_reservado, 
		('0x0D 0x0A') ds_fim 
	from	estabelecimento a, 
		empresa e 
	where	a.cd_empresa		= e.cd_empresa 
	and	a.cd_estabelecimento	= cd_estabelecimento_w;

vet04	C04%RowType;


BEGIN 
 
select	a.cd_estabelecimento, 
	a.dt_referencia, 
	a.ie_indicador, 
	a.nr_versao_pgd 
into STRICT 	cd_estabelecimento_w, 
	dt_referencia_w, 
	ie_indicador_w, 
	nr_versao_pgd_w 
from	dacon a 
Where	a.nr_sequencia	= nr_sequencia_p;
 
select	count(*) 
into STRICT	conta_w 
from	w_dacon;
 
if (conta_w >= 1) then 
delete from w_dacon;
end if;
 
nr_linha_w := 0;
 
open C01;
loop 
fetch C01 into	 
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	select 	nextval('w_dacon_seq') 
	into STRICT	nr_sequencia_w 
	;
	 
	ds_arquivo_w	:= substr(	vet01.ds_dacon		|| 
					vet01.ds_reservado		|| 
					vet01.dt_ano_competencia	|| 
					vet01.ds_reservado1		|| 
					vet01.ie_indicador		|| 
					vet01.cd_cgc		|| 
					vet01.ie_tipo_ni		|| 
					vet01.nr_versao_pgd		|| 
					vet01.nm_pessoa_juridica	|| 
					vet01.sg_estado		|| 
					vet01.ds_reservado2		|| 
					vet01.ds_reservado3		|| 
					vet01.ds_reservado4		|| 
					vet01.ds_reservado5		|| 
					vet01.ds_fim , 1,4000);
	nr_linha_w	:= nr_linha_w + 1;
	 
	insert into w_dacon( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ds_arquivo, 
		nr_linha) 
	values (	nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_arquivo_w, 
		nr_linha_w);
	end;
end loop;
close C01;
 
 
open C02;
loop 
fetch C02 into	 
	vet02;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	 
	select 	nextval('w_dacon_seq') 
	into STRICT	nr_sequencia_w 
	;
	 
	ds_arquivo_w	:= substr(	vet02.ds_tipo_registro	|| 
					vet02.cd_cgc		|| 
					vet02.ie_periodicidade	|| 
					vet02.dt_anomes_comp	|| 
					vet02.dt_inicial		|| 
					vet02.dt_final		|| 
					vet02.ie_indicador		|| 
					vet02.ie_situacao_esp	|| 
					vet02.dt_evento		|| 
					vet02.ie_desenquadramento	|| 
					vet02.dt_desenquadramento	|| 
					vet02.ds_reservado		|| 
					vet02.ie_qualificacao_pj	|| 
					vet02.ie_tipo_entidade	|| 
					vet02.ie_inclusao_simples	|| 
					vet02.dt_inclusao		|| 
					vet02.ie_regime_apuracao	|| 
					vet02.ie_apuracao_credito	|| 
					vet02.ie_apuracao_contribuinte|| 
					vet02.ie_apuracao_tributario	|| 
					vet02.ie_produto_contribuinte	|| 
					vet02.ie_produto_tributario	|| 
					vet02.ie_adicao_contribuicao	|| 
					vet02.ie_difer_contribuicao	|| 
					vet02.ie_creditos_transf	|| 
					vet02.ie_creditos_deferidos	|| 
					vet02.ie_desconto_mes	|| 
					vet02.ds_metodo_creditos	|| 
					vet02.ds_reservado1		|| 
					vet02.ds_fim	, 1,4000);
	nr_linha_w	:= nr_linha_w + 1;
	 
	Insert into w_dacon( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ds_arquivo, 
		nr_linha) 
	values (	nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_arquivo_w, 
		nr_linha_w);
	 
	end;
end loop;
close C02;
 
 
open C03;
loop 
fetch C03 into	 
	vet03;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	 
	select 	nextval('w_dacon_seq') 
	into STRICT	nr_sequencia_w 
	;
	 
	ds_arquivo_w	:= substr(	vet03.ds_tipo_registro	|| 
					vet03.cd_cgc		|| 
					vet03.nm_pessoa_juridica	|| 
					vet03.cd_nat_juridica	|| 
					vet03.ds_reservado		|| 
					vet03.ds_logradouro		|| 
					vet03.nm_logradouro		|| 
					vet03.ds_numero		|| 
					vet03.ds_complemento	|| 
					vet03.ds_bairro		|| 
					vet03.sg_estado		|| 
					vet03.ds_municipio		|| 
					vet03.cd_cep		|| 
					vet03.nr_ddd_telefone	|| 
					vet03.nr_telefone		|| 
					vet03.nr_ddd_fax		|| 
					vet03.nr_fax		|| 
					vet03.ds_caixa_postal	|| 
					vet03.uf_caixa_postal	|| 
					vet03.cd_cep_caixa_postal	|| 
					vet03.ds_email		|| 
					vet03.ds_reservado1		|| 
					vet03.ds_fim	, 1,4000);
	nr_linha_w	:= nr_linha_w + 1;
	 
	Insert into w_dacon( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ds_arquivo, 
		nr_linha) 
	values (	nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_arquivo_w, 
		nr_linha_w);
	 
	end;
end loop;
close C03;
 
open C04;
loop 
fetch C04 into	 
	vet04;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin 
	 
	select 	nextval('w_dacon_seq') 
	into STRICT	nr_sequencia_w 
	;
	 
	ds_arquivo_w	:= substr(	vet04.ds_tipo_registro	|| 
					vet04.nm_representante	|| 
					vet04.nr_cpf_representante	|| 
					vet04.nr_ddd_telefone_rep	|| 
					vet04.nr_telefone_rep	|| 
					vet04.nr_ramal_rep		|| 
					vet04.nr_ddd_fax_rep	|| 
					vet04.nr_fax_rep		|| 
					vet04.ds_email_rep		|| 
					vet04.nm_responsavel	|| 
					vet04.nr_cpf_responsavel	|| 
					vet04.nr_crc_resp		|| 
					vet04.sg_uf_resp		|| 
					vet04.nr_ddd_telefone_resp	|| 
					vet04.nr_telefone_resp	|| 
					vet04.nr_ramal_resp		|| 
					vet04.nr_ddd_fax_resp	|| 
					vet04.nr_fax_resp		|| 
					vet04.ds_email_resp		|| 
					vet04.ds_reservado		|| 
					vet04.ds_fim	, 1,4000);
	nr_linha_w	:= nr_linha_w + 1;
	 
	Insert into w_dacon( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ds_arquivo, 
		nr_linha) 
	values (	nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_arquivo_w, 
		nr_linha_w);
 
	 
	end;
end loop;
close C04;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_dacon ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

