-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_enviar_pop_captacao ( nr_seq_populacao_alvo_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Enviar todas as pessoas selecionadas para para captacao na Pesquisa de Populacao Alvo
e enviar para a funcao de captacao (Liberar lote de populacao alvo)
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_captacao_w	mprev_captacao.nr_sequencia%type;
nr_seq_captacao_destino_w	mprev_captacao_destino.nr_sequencia%type;
ie_momento_envio_w      mprev_regra_envio_mensagem.ie_momento_envio%type;
nr_seq_envio_mens_w     mprev_regra_cubo.nr_seq_envio_mens%type;
nm_regra_w              mprev_regra_cubo.nm_regra%type;

qt_registro_w	bigint	:= 0;

c_pessoas CURSOR(nr_seq_populacao_alvo_pc	bigint) FOR
	SELECT	a.nr_sequencia,
		a.cd_pessoa_fisica,
		c.nr_seq_programa,
		c.nr_seq_campanha
	from	mprev_regra_cubo c,
		mprev_populacao_alvo b,
		mprev_pop_alvo_pessoa a
	where	b.nr_sequencia = a.nr_seq_populacao_alvo
	and	c.nr_sequencia = b.nr_seq_regra_cubo
	and	a.nr_seq_populacao_alvo = nr_seq_populacao_alvo_pc
	and	a.ie_selecionada	= 'S';

BEGIN
if (nr_seq_populacao_alvo_p IS NOT NULL AND nr_seq_populacao_alvo_p::text <> '') then
	
	for r_c_pessoas in c_pessoas(nr_seq_populacao_alvo_p) loop
		select	nextval('mprev_captacao_seq')
		into STRICT	nr_seq_captacao_w
		;

		insert into mprev_captacao(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			cd_pessoa_fisica,
			ie_origem,
			ie_status,
			nr_seq_pop_alvo_pessoa,
			dt_inclusao)
		values (nr_seq_captacao_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			r_c_pessoas.cd_pessoa_fisica,
			'BA', /* Busca Ativa */
			'P', /* Pendente de Analise */
			r_c_pessoas.nr_sequencia,
			clock_timestamp());
			
		if (r_c_pessoas.nr_seq_programa IS NOT NULL AND r_c_pessoas.nr_seq_programa::text <> '') or (r_c_pessoas.nr_seq_campanha IS NOT NULL AND r_c_pessoas.nr_seq_campanha::text <> '') then
			insert into mprev_captacao_destino(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_captacao,
				nr_seq_programa,
				nr_seq_campanha)
			values (nextval('mprev_captacao_destino_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_captacao_w,
				r_c_pessoas.nr_seq_programa,
				r_c_pessoas.nr_seq_campanha)
			returning nr_sequencia into nr_seq_captacao_destino_w;
			
			if (nr_seq_captacao_destino_w IS NOT NULL AND nr_seq_captacao_destino_w::text <> '') then
				CALL mprev_gerar_resp_dest_capt(nr_seq_captacao_destino_w, nm_usuario_p);
			end if;
		end if;
		qt_registro_w	:= qt_registro_w + 1;

        select coalesce(nr_seq_envio_mens, 0), coalesce(nm_regra, '')
        into STRICT   nr_seq_envio_mens_w , nm_regra_w
        from   mprev_regra_cubo
        where  nr_sequencia = (SELECT nr_seq_regra_cubo 
                                from   mprev_populacao_alvo 
                                where  nr_sequencia = nr_seq_populacao_alvo_p);

        if (nr_seq_envio_mens_w > 0) then
          select ie_momento_envio
          into STRICT   ie_momento_envio_w
          from   mprev_regra_envio_mensagem
          where  nr_sequencia = nr_seq_envio_mens_w;

          if (ie_momento_envio_w = 'EC') then 
              CALL mprev_enviar_email_sms(r_c_pessoas.cd_pessoa_fisica , nr_seq_envio_mens_w, nm_regra_w, '5210', nm_usuario_p);
          end if;
        end if;
	end loop;

	if (qt_registro_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(252440);
	end if;
	
	update	mprev_populacao_alvo a
	set	a.dt_liberacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_populacao_alvo_p;

	commit;
end if;

end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_enviar_pop_captacao ( nr_seq_populacao_alvo_p bigint, nm_usuario_p text) FROM PUBLIC;

