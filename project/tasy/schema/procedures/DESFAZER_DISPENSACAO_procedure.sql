-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desfazer_dispensacao ( nr_seq_ordem_p bigint, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE


nr_seq_cabine_w		bigint;
nr_seq_etapa_prod_w	bigint;
nr_atendimento_w	bigint;
cd_material_w		integer;
cd_material_conta_w	integer;
cd_unidade_medida_w	varchar(30);
qt_material_w		can_ordem_prod_mat.qt_dose_real%type;
dt_prescricao_w		timestamp;
nr_prescricao_w		bigint;
cd_motivo_baixa_w	varchar(1);
nr_seq_lote_fornec_w	bigint;
ie_via_aplicacao_w	varchar(5);
nr_seq_item_prescr_w	bigint;
cd_local_estoque_w	smallint;
cd_oper_perda_etq_w	smallint;
nr_sequencia_w		bigint;
cd_setor_atendimento_w	integer;
ie_forma_disp_w		varchar(1);
nr_seq_ordem_prod_w	bigint;
dt_atend_w		timestamp;
cd_cgc_fornec_w		varchar(14);
ie_consignado_w		varchar(5);
ie_lote_consignado_w	varchar(5);
ie_baixa_estoq_pac_w	varchar(1);
dt_entrada_w		timestamp;
cd_estabelecimento_w	smallint;


				
C01 CURSOR FOR
	SELECT	coalesce(a.nr_atendimento,c.nr_atendimento),
		b.cd_material,
		d.cd_material_conta,
		b.cd_unidade_medida_real,
		b.qt_dose_real,
		c.dt_prescricao,
		a.nr_prescricao,
		b.nr_seq_lote_fornec,
		a.ie_via_aplicacao,
		b.nr_seq_item_prescr,
		nr_seq_etapa_prod,
		c.cd_setor_atendimento,
		a.nr_sequencia,
		b.dt_atualizacao
	from 	material_estab	d,
		prescr_medica c,
		can_ordem_prod_mat b,
		can_ordem_prod a
	where 	d.cd_material	= b.cd_material
	and	a.nr_sequencia	= nr_seq_ordem_p
	and	a.nr_prescricao	= c.nr_prescricao
	and	a.nr_sequencia	= b.nr_seq_ordem
	and  	coalesce(a.ie_medic_paciente,'N') = 'N'
	and	d.cd_estabelecimento	= c.cd_estabelecimento;
	
C02 CURSOR FOR
	SELECT	nr_sequencia
	from	material_atend_paciente
	where 	nr_seq_ordem_prod 	= nr_seq_ordem_p
      and     coalesce(nr_seq_regra_lanc::text, '') = '';

c03 CURSOR FOR
	SELECT		disp.nr_prescricao,
				disp.dt_atualizacao,
				disp.nr_atendimento,
				disp.nr_seq_ordem,
				disp.nr_seq_item_prescr,
				disp.cd_material,
				disp.qt_movimento,
				disp.cd_unidade_medida,
				disp.dt_movimento,
				disp.nr_seq_lote_fornec,
				prescricao.cd_setor_atendimento
	from		dispensacao_item_prescrito disp
	inner join	prescr_medica prescricao on disp.nr_prescricao = prescricao.nr_prescricao
	where		nr_seq_ordem = nr_seq_ordem_p
	and			ie_desfeito_dispensacao = 'N';
	
BEGIN
	ie_forma_disp_w := Obter_Param_Usuario(3130, 220, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_forma_disp_w);
	
	open C01;
	loop
	fetch C01 into	
		nr_atendimento_w,
		cd_material_w,
		cd_material_conta_w,
		cd_unidade_medida_w,
		qt_material_w,
		dt_prescricao_w,
		nr_prescricao_w,
		nr_seq_lote_fornec_w,
		ie_via_aplicacao_w,
		nr_seq_item_prescr_w,
		nr_seq_etapa_prod_w,
		cd_setor_atendimento_w,
		nr_seq_ordem_prod_w,
		dt_atend_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		open C02;
		loop
		fetch C02 into	
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			if (ie_forma_disp_w = 'M') then
			
				select	max(dt_entrada)
				into STRICT	dt_entrada_w
				from	atendimento_paciente
				where	nr_atendimento	=	nr_atendimento_w;
			
			
				select	max(c.cd_local_estoque),
						max(c.cd_estabelecimento),
						max(c.nr_sequencia)
				into STRICT	cd_local_estoque_w,
						cd_estabelecimento_w,
						nr_seq_cabine_w
				from	far_cabine_seg_biol c,
						far_etapa_producao b,
						can_ordem_prod a
				where	a.nr_sequencia	= nr_seq_ordem_p
				and		b.nr_sequencia	= a.nr_seq_etapa_prod
				and		b.nr_seq_cabine	= c.nr_sequencia;
			
				select 	obter_se_mat_consignado(cd_material_w)
				into STRICT	ie_consignado_w
				;
				
				cd_cgc_fornec_w := null;

				select	coalesce(max('S'), 'N')
				into STRICT	ie_lote_consignado_w
				from	fornecedor_mat_consig_lote
				where	cd_estabelecimento 	= cd_estabelecimento_p
				and	cd_local_estoque 	= cd_local_estoque_w
				and	cd_material 		= cd_material_w
				and	dt_mesano_referencia	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0)
				and	nr_seq_lote 		= nr_seq_lote_fornec_w;

				if (ie_consignado_w = '1') or
					(ie_consignado_w = '2' AND ie_lote_consignado_w = 'S') then
					select	max(cd_cgc_fornec)  
					into STRICT	cd_cgc_fornec_w
					from	material_lote_fornec                                  
					where	cd_material = cd_material_w  
					and	nr_sequencia = nr_seq_lote_fornec_w;
				end if;
			
				select obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material_w, nr_seq_ordem_p, nr_seq_cabine_w)
				into STRICT	ie_baixa_estoq_pac_w
				;

				if (coalesce(ie_baixa_estoq_pac_w,'N') = 'S') and (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') then
					begin
					CALL gerar_prescricao_estoque(cd_estabelecimento_w,
								nr_atendimento_w,
								dt_entrada_w,
								cd_material_w,
								coalesce(dt_atend_w,dt_entrada_w),
								'1',
								cd_local_estoque_w,
								qt_material_w,
								cd_setor_atendimento_w,
								cd_unidade_medida_w,
								nm_usuario_p, 
								'E',
								nr_prescricao_w,
								nr_seq_item_prescr_w,
								null,
								null,
								cd_cgc_fornec_w,
								'',
								nr_seq_lote_fornec_w,
								null,null,null, '','','');
								
					CALL voltar_item_pendente_prescr(nr_sequencia_w, nm_usuario_p);			
					end;
				end if;
				
				
			
			else
				CALL voltar_item_pendente_prescr(nr_sequencia_w, nm_usuario_p);
			
			end if;
			
			CALL excluir_glosa_valor_mat(nr_sequencia_w, nm_usuario_p);

			end;
		end loop;
		close C02;
		
		delete 	from can_ordem_prod_mat
		where 	nr_seq_ordem = nr_seq_ordem_p 
		and	cd_material = cd_material_w;

		commit;
		end;
	end loop;
	close C01;

	-- desfazer da regra de dispensacao

	-- somente se aplica quando a origem da dispensacao for baixar_prescr_cmiv, 220 = N
	if (ie_forma_disp_w = 'N') then

		select	max(c.cd_local_estoque),
				max(c.cd_estabelecimento),
				max(c.nr_sequencia)
		into STRICT	cd_local_estoque_w,
				cd_estabelecimento_w,
				nr_seq_cabine_w
		from	far_cabine_seg_biol c,
				far_etapa_producao b,
				can_ordem_prod a
		where	a.nr_sequencia	= nr_seq_ordem_p
		and		b.nr_sequencia	= a.nr_seq_etapa_prod
		and		b.nr_seq_cabine	= c.nr_sequencia;

		for item_prescrito in c03 loop

			select	max(dt_entrada)
			into STRICT	dt_entrada_w
			from	atendimento_paciente
			where	nr_atendimento	=	item_prescrito.nr_atendimento;

			cd_cgc_fornec_w := null;

			select 	obter_se_mat_consignado(item_prescrito.cd_material)
			into STRICT	ie_consignado_w
			;

			select	coalesce(max('S'), 'N')
			into STRICT	ie_lote_consignado_w
			from	fornecedor_mat_consig_lote
			where	cd_estabelecimento 	 = cd_estabelecimento_p
			and		cd_local_estoque 	 = cd_local_estoque_w
			and		cd_material 		 = item_prescrito.cd_material
			and		dt_mesano_referencia = pkg_date_utils.start_of(clock_timestamp(), 'month', 0)
			and		nr_seq_lote 		 = item_prescrito.nr_seq_lote_fornec;

			if (ie_consignado_w = '1') or
				(ie_consignado_w = '2' AND ie_lote_consignado_w = 'S') then
				select	max(cd_cgc_fornec)
				into STRICT	cd_cgc_fornec_w
				from	material_lote_fornec
				where	cd_material 	= item_prescrito.cd_material
				and		nr_sequencia 	= item_prescrito.nr_seq_lote_fornec;
			end if;

			CALL gerar_prescricao_estoque(cd_estabelecimento_w,
				item_prescrito.nr_atendimento,
				dt_entrada_w,
				item_prescrito.cd_material,
				item_prescrito.dt_atualizacao,
				'1',
				cd_local_estoque_w,
				item_prescrito.qt_movimento,
				item_prescrito.cd_setor_atendimento,
				item_prescrito.cd_unidade_medida,
				nm_usuario_p, 
				'E',
				item_prescrito.nr_prescricao,
				item_prescrito.nr_seq_item_prescr,
				null,
				null,
				cd_cgc_fornec_w,
				'',
				item_prescrito.nr_seq_lote_fornec,
				null,null,null, '','','');
		end loop;

		update 	dispensacao_item_prescrito disp
		set 	ie_desfeito_dispensacao = 'S'
		where	nr_seq_ordem = nr_seq_ordem_p;
	end if;

	update	can_ordem_prod
	set	nm_usuario_disp			 = NULL,
		nm_usuario			= nm_usuario_p,
		dt_atualizacao			= clock_timestamp(),
		dt_entrega_setor 		 = NULL,
		dt_fim_preparo			 = NULL,
		nm_usuario_fim_prep		 = NULL
	where	nr_sequencia			= nr_seq_ordem_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desfazer_dispensacao ( nr_seq_ordem_p bigint, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

