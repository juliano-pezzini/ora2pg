-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_dialise_lib_prescr ( nr_atendimento_p bigint, nr_prescricao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_erro_p INOUT bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
nr_atendimento_w	bigint;
ie_perm_sem_prescr_w	varchar(1);
cd_pessoa_fisica_w	varchar(10);
nr_dialise_atual_w	varchar(255);
obter_se_possui_prescr_w varchar(1);
ie_dialise_w		varchar(1);
ie_dial_liberado_w	varchar(1);
ds_erro_w		varchar(255);
cd_unidade_w		bigint;
ie_consiste_dialisador_w	varchar(1);


BEGIN 
nr_erro_p := 0;
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
	nr_atendimento_w := nr_atendimento_p;
else 
	select	max(nr_atendimento) 
	into STRICT	nr_atendimento_w 
	from	prescr_medica 
	where	nr_prescricao = nr_prescricao_p;
end if;
 
if (coalesce(nr_atendimento_w::text, '') = '') then 
	nr_erro_p := 203594;
else 
	ie_perm_sem_prescr_w := obter_param_usuario(7009, 198, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_perm_sem_prescr_w);	
	ie_consiste_dialisador_w := obter_param_usuario(7009, 269, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_dialisador_w);	
	 
	select	max(cd_pessoa_fisica) 
	into STRICT	cd_pessoa_fisica_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_w;
	 
	select	max(substr(hd_obter_dados_dialise(hd_obter_hemodialise_atual(cd_pessoa_fisica, 'U'),'SP'),1,200)), 
		max(substr(hd_obter_se_em_dialise(cd_pessoa_fisica,'E'),1,1)), 
		max(substr(hd_obter_se_dial_liberado(cd_pessoa_fisica),1,1)) 
	into STRICT	nr_dialise_atual_w, 
		ie_dialise_w, 
		ie_dial_liberado_w 
	from	hd_pac_renal_cronico 
	where	cd_pessoa_fisica = cd_pessoa_fisica_w;
	 
	 
	select 	max(hd_obter_unidade_prc(cd_pessoa_fisica_w, 'C')), 
		max(substr(hd_obter_se_possui_prescr(nr_atendimento_w),1,1)) 
	into STRICT	cd_unidade_w, 
		obter_se_possui_prescr_w 
	;		
	 
	 
	if (ie_perm_sem_prescr_w = 'N') and (obter_somente_numero(nr_dialise_atual_w) <> 0) and (obter_se_possui_prescr_w = 'N') then 
		nr_erro_p := 191163;
	elsif (coalesce(cd_pessoa_fisica_w::text, '') = '') then 
		nr_erro_p := 203596;
	elsif (ie_dialise_w = 'S') then 
		nr_erro_p := 203597;
	elsif (ie_dial_liberado_w = 'N') and (ie_consiste_dialisador_w = 'S') then 
		nr_erro_p := 203598;
	end if;
	 
	if (coalesce(nr_erro_p,0) = 0) then 
		ds_erro_w := HD_Gerar_Dialise(clock_timestamp(), cd_pessoa_fisica_w, nm_usuario_p, cd_unidade_w, cd_estabelecimento_p, nr_atendimento_w, null, null, ds_erro_w);
	end if;
	 
	ds_erro_p := ds_erro_w;
end if;	
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_dialise_lib_prescr ( nr_atendimento_p bigint, nr_prescricao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_erro_p INOUT bigint, ds_erro_p INOUT text) FROM PUBLIC;

