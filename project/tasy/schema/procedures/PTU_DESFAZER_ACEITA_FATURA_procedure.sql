-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_desfazer_aceita_fatura ( nr_seq_fatura_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


nr_seq_lote_w			bigint;
nr_seq_acao_w			bigint;
nr_titulo_w			bigint;
nr_seq_grupo_w			bigint;
nr_seq_protocolo_w		bigint;
nr_seq_analise_w		bigint;
nr_seq_analise_grupo_w		bigint;
qt_conta_fechada_w		bigint;
nr_titulo_ndc_w			bigint;

C01 CURSOR FOR
	SELECT	a.nr_seq_analise,
		c.nr_seq_grupo
	from    pls_conta 			a,
		pls_analise_conta 		b,
		pls_auditoria_conta_grupo 	c
	where   a.nr_seq_analise		= b.nr_sequencia
	and	c.nr_seq_analise		= b.nr_sequencia
	and	a.nr_seq_fatura     		= nr_seq_fatura_p
	and	coalesce(c.ie_pre_analise,'N')	= 'S';
	
C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_protocolo_conta a
	where	a.nr_seq_lote_conta	= nr_seq_lote_w
	order by 1;

C03 CURSOR FOR
	SELECT	b.nr_seq_analise
	from	pls_conta b
	where	b.nr_seq_protocolo	= nr_seq_protocolo_w
	group by b.nr_seq_analise
	order by 1;


BEGIN
select	max(b.nr_seq_lote_conta)
into STRICT	nr_seq_lote_w
from	ptu_fatura a,
	pls_protocolo_conta b
where	a.nr_sequencia 	   = nr_seq_fatura_p
and	a.nr_seq_protocolo = b.nr_sequencia;

select	max(a.nr_titulo),
	max(a.nr_titulo_ndc)
into STRICT	nr_titulo_w,
	nr_titulo_ndc_w
from	ptu_fatura a
where	a.nr_sequencia = nr_seq_fatura_p;

-- Desfazer a finalizacao da pre-analise
open C02;
loop
fetch C02 into
	nr_seq_protocolo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	count(1)
	into STRICT	qt_conta_fechada_w
	from	pls_conta
	where	nr_seq_protocolo = nr_seq_protocolo_w
	and	ie_status 	= 'F';
	
	if ( qt_conta_fechada_w > 0 ) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(224285);
	end if;
	
	open C03;
	loop
	fetch C03 into
		nr_seq_analise_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		update	pls_analise_conta
		set	ie_pre_analise = 'S'
		where	nr_sequencia = nr_seq_analise_w;

		end;
	end loop;
	close C03;

	update	pls_protocolo_conta
	set	ie_situacao = 'I'
	where	nr_sequencia = nr_seq_protocolo_w;

	end;
end loop;
close C02;

-- Alterar o status da fatura
CALL ptu_atualizar_status_fatura(nr_seq_fatura_p, 'V', null, nm_usuario_p);

-- Cancelar titulo gerado
nr_seq_acao_w := pls_obter_acao_intercambio(	'8',  -- Aceite da fatura/Encaminhamento da analise
				'2',  -- Gerar titulo a pagar 
				nr_seq_fatura_p, null, null, null, clock_timestamp(), 'A500', 'S', nr_seq_acao_w);
				
if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		CALL cancelar_titulo_pagar(nr_titulo_w,nm_usuario_p,clock_timestamp());
		
		update	ptu_fatura
		set	nr_titulo	 = NULL
		where	nr_sequencia 	= nr_seq_fatura_p;
	end if;
end if;

-- Alterar titulo para provisorio 
nr_seq_acao_w := pls_obter_acao_intercambio(	'8',  -- Aceite da fatura/Encaminhamento da analise
				'8',  -- Mudar status do titulo a pagar
				nr_seq_fatura_p, null, null, null, clock_timestamp(), 'A500', 'S', nr_seq_acao_w);			
	
if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		update	titulo_pagar
		set	ie_status	= 'P'
		where	nr_titulo 	= nr_titulo_w;
	end if;
	
	if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
		update	titulo_pagar
		set	ie_status	= 'P'
		where	nr_titulo 	= nr_titulo_ndc_w;
	end if;
end if;

-- Desfazer a liberacao do titulo 
nr_seq_acao_w := pls_obter_acao_intercambio(	'8',  -- Aceite da fatura/Encaminhamento da analise
				'5',  -- Liberar pagamento do titulo
				nr_seq_fatura_p, null, null, null, clock_timestamp(), 'A500', 'S', nr_seq_acao_w);

if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then	
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		update	titulo_pagar
		set	dt_liberacao	 = NULL,
			nm_usuario_lib	 = NULL
		where	nr_titulo 	= nr_titulo_w;
	end if;
	
	if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
		update	titulo_pagar
		set	dt_liberacao	 = NULL,
			nm_usuario_lib	 = NULL
		where	nr_titulo 	= nr_titulo_ndc_w;
	end if;
end if;

-- Desfazer a finalizacao dos grupos de auditoria
open C01;
loop
fetch C01 into	
	nr_seq_analise_w,
	nr_seq_grupo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_analise_grupo_w
	from	pls_auditoria_conta_grupo
	where	nr_seq_grupo 		= nr_seq_grupo_w	
	and	nr_seq_analise		= nr_seq_analise_w		
	and	nr_seq_ordem 		= (	SELECT	max(nr_seq_ordem)		
						from	pls_auditoria_conta_grupo
						where	nr_seq_grupo 		= nr_seq_grupo_w	
						and	nr_seq_analise		= nr_seq_analise_w);
						
	update	pls_tempo_conta_grupo
	set	dt_final_analise 	 = NULL,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_seq_auditoria	= nr_seq_analise_grupo_w;
	
	CALL pls_atualizar_grupo_penden(nr_seq_analise_w, cd_estabelecimento_p, nm_usuario_p);
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_desfazer_aceita_fatura ( nr_seq_fatura_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

