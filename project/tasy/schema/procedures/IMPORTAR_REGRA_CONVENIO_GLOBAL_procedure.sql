-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_regra_convenio_global ( cd_estabelecimento_p bigint, nm_usuario_p text, ds_lista_agenda_p text ) AS $body$
DECLARE


nr_sequencia_w        	bigint;
cd_agenda_w           	bigint;
dt_atualizacao_w      	timestamp;
nm_usuario_w          	varchar(15);
dt_atualizacao_nrec_w   timestamp;
nm_usuario_nrec_w       varchar(15);
cd_area_proc_w          bigint;
cd_especialidade_w      bigint;
cd_grupo_proc_w         bigint;
cd_procedimento_w       bigint;
ie_origem_proced_w      bigint;
nr_seq_proc_interno_w   bigint;
hr_inicio_w             timestamp;
hr_final_w              timestamp;
nr_seq_classif_w        bigint;
cd_medico_w		varchar(10);
ie_importa_medico_w 	varchar(1) := 'N';
ie_dia_semana_w		smallint;
dt_inicio_agenda_w	timestamp;
dt_fim_agenda_w		timestamp;
ie_excluir_regras_w	varchar(1);

c01 CURSOR FOR
	SELECT	cd_agenda,
		cd_area_proc,
		cd_especialidade,
		cd_grupo_proc,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		cd_medico,
		ie_dia_semana,
		dt_inicio_agenda,
		dt_fim_agenda
	FROM	agenda_regra
	WHERE	obter_se_contido(cd_agenda, ds_lista_agenda_p) = 'S'
	--AND	((cd_estabelecimento = cd_estabelecimento_p) or (cd_estabelecimento is null))
	AND 	ie_permite = 'S'
	ORDER 	BY	cd_agenda;


BEGIN

ie_importa_medico_w := obter_param_usuario(-1007, 10, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_importa_medico_w);
ie_excluir_regras_w := obter_param_usuario(-1007, 35, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_excluir_regras_w);

if (ie_excluir_regras_w = 'S') then
	delete	FROM agenda_global
	where	obter_se_contido(cd_agenda, ds_lista_agenda_p) = 'S';
	commit;
end if;

OPEN c01;
LOOP
FETCH c01 INTO
	cd_agenda_w,
	cd_area_proc_w,
	cd_especialidade_w,
	cd_grupo_proc_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_interno_w,
	cd_medico_w,
	ie_dia_semana_w,
	dt_inicio_agenda_w,
	dt_fim_agenda_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN

	if (ie_importa_medico_w = 'N') then
		cd_medico_w := null;
	end if;

	INSERT INTO agenda_global(
				nr_sequencia,
				cd_agenda,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_area_proc,
				cd_especialidade,
				cd_grupo_proc,
				cd_procedimento,
				ie_origem_proced,
				nr_seq_proc_interno,
				cd_medico_agenda,
				ie_dia_semana,
				hr_inicio,
				hr_final
				)
				VALUES (
				nextval('agenda_global_seq'),
				cd_agenda_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_area_proc_w,
				cd_especialidade_w,
				cd_grupo_proc_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_proc_interno_w,
				cd_medico_w,
				ie_dia_semana_w,
				dt_inicio_agenda_w,
				dt_fim_agenda_w
				);

	END;
END LOOP;
CLOSE c01;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_regra_convenio_global ( cd_estabelecimento_p bigint, nm_usuario_p text, ds_lista_agenda_p text ) FROM PUBLIC;

