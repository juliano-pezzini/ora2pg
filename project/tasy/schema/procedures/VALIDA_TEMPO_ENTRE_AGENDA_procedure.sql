-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE valida_tempo_entre_agenda ((cd_estabelecimento_p bigint, cd_agenda_pri_p bigint, cd_estab_pri_p bigint, nr_seq_proc_pri_p bigint, nr_seq_grupo_pri_p bigint, cd_setor_pri_p bigint, nr_minuto_duracao_p bigint, cd_pessoa_fisica_p text, dt_referencia_p timestamp, ds_mensagem_p out text, nr_seq_ageint_item_p bigint default null) is qt_maior_tempo_regra_w bigint) AS $body$
DECLARE

	
	qt_minuto_w	bigint;
	
	
BEGIN
	select coalesce(max(qt_tempo), 0)
	into STRICT qt_minuto_w
	from	(SELECT	max(qt_tempo) qt_tempo
		from	ageint_tempo_entre_Salas
		where	ie_situacao	= 'A'
		and	coalesce(ie_agend_distinto,'N') = 'S'
		and	coalesce(cd_estabelecimento,cd_estab_pri_p) = cd_estab_pri_p
		and	((cd_agenda_pri	= cd_Agenda_pri_p) or (coalesce(cd_agenda_pri::text, '') = '')
		or (cd_agenda_seg	= cd_Agenda_pri_p) or (coalesce(cd_agenda_seg::text, '') = ''))
		
union all

		SELECT	max(qt_tempo) qt_tempo
		from	ageint_tempo_entre_exames
		where	ie_situacao	= 'A'
		and	coalesce(ie_agend_distinto,'N') = 'S'
		and	coalesce(cd_estabelecimento,cd_estab_pri_p) = cd_estab_pri_p
		and	cd_exame_pri	= nr_seq_proc_pri_p
		
union all

		select	max(qt_tempo) qt_tempo
		from	ageint_tempo_entre_exames
		where	ie_situacao	= 'A'
		and	coalesce(ie_agend_distinto,'N') = 'S'
		and	coalesce(cd_estabelecimento,cd_estab_pri_p) = cd_estab_pri_p
		and	cd_exame_seg	= nr_seq_proc_pri_p
		
union all

		select	max(qt_tempo) qt_tempo
		from	ageint_tempo_entre_grupos
		where	ie_situacao	= 'A'
		and	coalesce(ie_agend_distinto,'N') = 'S'
		and	cd_grupo_pri	= nr_seq_grupo_pri_p
		
union all

		select	max(qt_tempo) qt_tempo
		from	ageint_tempo_entre_grupos
		where	ie_situacao	= 'A'
		and	coalesce(ie_agend_distinto,'N') = 'S'
		and	cd_grupo_seg	= nr_seq_grupo_pri_p
		
union all

		select	max(qt_tempo) qt_tempo
		from	ageint_tempo_entre_estab
		where	ie_situacao	= 'A'
		and	coalesce(ie_agend_distinto,'N') = 'S'
		and (cd_estab_pri	= cd_estab_pri_p
		or	cd_estab_seg	= cd_estab_pri_p)
		
union all

		select	max(qt_tempo) qt_tempo
		from	ageint_tempo_entre_setores
		where	ie_situacao	= 'A'
		and	coalesce(ie_agend_distinto,'N') = 'S'
		and	cd_setor_pri	= cd_setor_pri_p
		
union all

		select	max(qt_tempo) qt_tempo
		from	ageint_tempo_entre_setores
		where	ie_situacao	= 'A'
		and	coalesce(ie_agend_distinto,'N') = 'S'
		and	cd_setor_seg	= cd_setor_pri_p
		) alias29;
	
	return;
	
	end;

function obter_tempo_salas(cd_Agenda_pri_pp number,
				cd_Agenda_seg_pp number,
				cd_estab_pri_pp number,
				cd_estab_seg_pp number) return;
	begin
	select	coalesce(max(qt_tempo),0)
	into STRICT	qt_retorno_w
	from	ageint_tempo_entre_Salas
	where	((((cd_agenda_pri	= cd_Agenda_pri_pp) or (coalesce(cd_agenda_pri::text, '') = ''))
	and	((cd_agenda_seg	= cd_Agenda_seg_pp) or (coalesce(cd_agenda_seg::text, '') = '')))
	or	(((cd_agenda_seg	= cd_Agenda_pri_pp) or (coalesce(cd_agenda_seg::text, '') = ''))
	and	((cd_agenda_pri	= cd_Agenda_seg_pp) or (coalesce(cd_agenda_pri::text, '') = ''))))
	and	ie_situacao	= 'A'
	and	((coalesce(cd_estabelecimento::text, '') = '')
	or (cd_estabelecimento = cd_estab_pri_pp
	and	cd_estabelecimento = cd_estab_seg_pp))
	and	coalesce(ie_agend_distinto,'N') = 'S';

	return;

	end;
	
function obter_tempo_exame(nr_seq_proc_pri_pp number,
				nr_seq_proc_seg_pp number,
				cd_estab_pri_pp number,
				cd_estab_seg_pp number,
				hr_agenda_seg_pp date) return;
	
	begin
	if hr_agenda_seg_pp >= dt_referencia_p then	
		select	coalesce(max(qt_tempo),0)
		into STRICT	qt_retorno_w
		from	ageint_tempo_entre_exames
		where	ie_situacao	= 'A'
		and	((coalesce(cd_estabelecimento::text, '') = '')
		or (cd_estabelecimento = cd_estab_pri_pp
		and	cd_estab_pri_p = cd_estab_seg_pp))
		and	coalesce(ie_agend_distinto,'N') = 'S'
		and	((cd_exame_pri	= nr_seq_proc_pri_pp and cd_exame_seg	= nr_seq_proc_seg_pp)
		or (coalesce(IE_REGRA_EXCLUSIVA, 'N') = 'N' and cd_exame_pri	= nr_seq_proc_seg_pp and cd_exame_seg	= nr_seq_proc_pri_pp));
	else
		select	coalesce(max(qt_tempo),0)
		into STRICT	qt_retorno_w
		from	ageint_tempo_entre_exames
		where	ie_situacao	= 'A'
		and	((coalesce(cd_estabelecimento::text, '') = '')
		or (cd_estabelecimento = cd_estab_pri_pp
		and	cd_estab_pri_p = cd_estab_seg_pp))
		and	coalesce(ie_agend_distinto,'N') = 'S'
		and	((cd_exame_pri	= nr_seq_proc_seg_pp and cd_exame_seg	= nr_seq_proc_pri_pp)
		or (coalesce(IE_REGRA_EXCLUSIVA, 'N') = 'N' and cd_exame_pri	= nr_seq_proc_pri_pp and cd_exame_seg	= nr_seq_proc_seg_pp));
	end if;
	
	return;
	
	end;
	
function obter_max_tempo_exame(nr_seq_proc_pri_pp number,
				nr_seq_proc_seg_pp number,
				cd_estab_pri_pp number,
				cd_estab_seg_pp number,
				hr_agenda_seg_pp date) return;
	qt_tempo_adic_w	number(10) := 0;
	qt_tempo_temporario_w number(10);
	
	C01 CURSOR FOR
		SELECT	c.nr_seq_proc_interno
		from	ageint_exame_adic_item c,
			agenda_integrada_item b
		where	c.nr_seq_item		= b.nr_sequencia
		and	b.nr_sequencia		= nr_seq_ageint_item_seg_w;

	begin
	qt_tempo_item_w := obter_tempo_exame(nr_seq_proc_pri_pp, nr_seq_proc_seg_pp, cd_estab_pri_pp, cd_estab_seg_pp, hr_agenda_seg_pp);
	for exam_adic in c01 loop
		qt_tempo_temporario_w := obter_tempo_exame(nr_seq_proc_pri_pp, exam_adic.nr_seq_proc_interno, cd_estab_pri_pp, cd_estab_seg_pp, hr_agenda_seg_pp);
		if qt_tempo_temporario_w > qt_tempo_adic_w then
			qt_tempo_adic_w := qt_tempo_temporario_w;
		end if;
	end loop;
	
	return;
	
	end;
	
function obter_tempo_grupo(nr_seq_grupo_pri_pp number,
				nr_seq_grupo_seg_pp number) return;
	begin
	select	coalesce(max(qt_tempo),0)
	into STRICT	qt_retorno_w
	from	ageint_tempo_entre_grupos
	where	ie_situacao	= 'A'
	and	((cd_grupo_pri	= nr_seq_grupo_pri_pp and cd_grupo_seg	= nr_seq_grupo_seg_pp)
	or (cd_grupo_pri	= nr_seq_grupo_seg_pp and cd_grupo_seg	= nr_seq_grupo_pri_pp))
	and	coalesce(ie_agend_distinto,'N') = 'S';
	
	return;
	
	end;
	
function obter_max_tempo_grupo(nr_seq_grupo_pri_pp number,
				nr_seq_grupo_seg_pp number) return;
	qt_tempo_adic_w	number(10) := 0;
	qt_tempo_temporario_w number(10);
	
	C01 CURSOR FOR
		SELECT	c.nr_seq_grupo_selec
		from	ageint_exame_adic_item c,
			agenda_integrada_item b
		where	c.nr_seq_item		= b.nr_sequencia
		and	b.nr_sequencia		= nr_seq_ageint_item_seg_w;

	begin
	qt_tempo_item_w := obter_tempo_grupo(nr_seq_grupo_pri_pp, nr_seq_grupo_seg_pp);
	for exam_adic in c01 loop
		qt_tempo_temporario_w := obter_tempo_grupo(nr_seq_grupo_pri_pp, exam_adic.nr_seq_grupo_selec);
		if qt_tempo_temporario_w > qt_tempo_adic_w then
			qt_tempo_adic_w := qt_tempo_temporario_w;
		end if;
	end loop;
	
	return;
	
	end;
	
function obter_tempo_estab(cd_estab_pri_pp number,
				cd_estab_seg_pp number) return;
	begin
	select	coalesce(max(qt_tempo),0)
	into STRICT	qt_retorno_w
	from	ageint_tempo_entre_estab
	where	ie_situacao	= 'A'
	and	((cd_estab_pri	= cd_estab_pri_pp and cd_estab_seg	= cd_estab_seg_pp)
	or (cd_estab_pri	= cd_estab_seg_pp and cd_estab_seg	= cd_estab_pri_pp))
	and	coalesce(ie_agend_distinto,'N') = 'S';
	
	return;
	
	end;
	
function obter_tempo_setor(cd_setor_pri_pp number,
				cd_setor_seg_pp number) return;
	begin
	select	coalesce(max(qt_tempo),0)
	into STRICT	qt_retorno_w
	from	ageint_tempo_entre_setores
	where	ie_situacao	= 'A'
	and	((cd_setor_pri	= cd_setor_pri_pp and cd_setor_seg	= cd_setor_seg_pp)
	or (cd_setor_pri	= cd_setor_seg_pp and cd_setor_seg	= cd_setor_pri_pp))
	and	coalesce(ie_agend_distinto,'N') = 'S';
	
	return;
	
	end;
	
function obter_max_tempo_setor(cd_setor_pri_pp number,
				cd_setor_seg_pp number) return;
	qt_tempo_adic_w	number(10) := 0;
	qt_tempo_temporario_w number(10);
	
	C01 CURSOR FOR
		SELECT	a.cd_setor_exclusivo
		from	ageint_exame_adic_item c,
			agenda_integrada_item b,
			agenda_paciente d,
			agenda a
		where	c.nr_seq_item		= b.nr_sequencia
		and	b.nr_sequencia		= nr_seq_ageint_item_seg_w
		and	b.nr_seq_agenda_exame 	= d.nr_sequencia
		and 	a.cd_agenda 		= d.cd_agenda;

	begin
	qt_tempo_item_w := obter_tempo_setor(cd_setor_pri_pp, cd_setor_seg_pp);
	for exam_adic in c01 loop
		qt_tempo_temporario_w := obter_tempo_setor(cd_setor_pri_pp, exam_adic.cd_setor_exclusivo);
		if qt_tempo_temporario_w > qt_tempo_adic_w then
			qt_tempo_adic_w := qt_tempo_temporario_w;
		end if;
	end loop;
	
	return;
	
	end;
	
function obter_maior_tempo_entre_itens(cd_agenda_seg_p	number,
					cd_estab_seg_p	number,
					nr_seq_proc_seg_p number,
					nr_seq_grupo_seg_p number,
					cd_setor_seg_p number,
					hr_agenda_seg_pp date
					) return;
	qt_min_estab_w	number(10);
	qt_min_exame_w	number(10);
	qt_min_grupo_w	number(10);
	qt_min_setor_w	number(10);
	qt_minuto_w	number(10) := 0;
	
	begin
	qt_min_salas_w := obter_tempo_salas(cd_agenda_pri_p,cd_agenda_seg_p,cd_estab_pri_p,cd_estab_seg_p);
	qt_min_estab_w := obter_tempo_estab(cd_estab_pri_p, cd_estab_seg_p);
	qt_min_exame_w := obter_max_tempo_exame(nr_seq_proc_pri_p,nr_seq_proc_seg_p,cd_estab_pri_p,cd_estab_seg_p, hr_agenda_seg_pp);
	qt_min_grupo_w := obter_max_tempo_grupo(nr_seq_grupo_pri_p, nr_seq_grupo_seg_p);
	qt_min_setor_w := obter_max_tempo_setor(cd_setor_pri_p, cd_setor_seg_p);
	qt_minuto_w := greatest(qt_min_salas_w,qt_min_exame_w,qt_min_grupo_w,qt_min_estab_w,qt_min_setor_w);
	/*
	- 85475 Atencao: verifique o cadastro de regras de tempos entre salas!
	- 245591 Atencao: verifique o cadastro de regras de tempos entre estabelecimentos!
	- 85537 Atencao: verifique o cadastro de regras de tempos entre exames!#@MACRO#@
	- 242717 Atencao: verifique o cadastro de regras de tempos entre grupos!#@MACRO#@
	- 453988 Atencao: verifique o cadastro de regras de tempos entre setores!
	*/
	if qt_minuto_w = qt_min_salas_w  then
		ds_mensagem_regra_w := wheb_mensagem_pck.get_texto(85475);
	end if;
	if qt_minuto_w = qt_min_estab_w then
		ds_mensagem_regra_w := wheb_mensagem_pck.get_texto(245591);
	end if;
	if qt_minuto_w = qt_min_exame_w then
		ds_mensagem_regra_w := wheb_mensagem_pck.get_texto(85537,'MACRO=');
	end if;
	if qt_minuto_w = qt_min_grupo_w then
		ds_mensagem_regra_w := wheb_mensagem_pck.get_texto(242717,'MACRO=');
	end if;
	if qt_minuto_w = qt_min_setor_w then
		ds_mensagem_regra_w := wheb_mensagem_pck.get_texto(453988);
	end if;
	
	return;
	
	end;

begin
qt_maior_tempo_regra_w := obter_maior_tempo_regra;

if (qt_maior_tempo_regra_w > 0) then
  for item in c01 loop
  	nr_seq_agend_seg_w := item.nr_sequencia;
  	nr_seq_ageint_item_seg_w := item.nr_seq_ageint_item;
  	qt_regra_item_w := obter_maior_tempo_entre_itens(item.cd_agenda, item.cd_estabelecimento, item.nr_seq_proc_interno, item.nr_seq_grupo_selec, item.cd_setor_exclusivo, item.hr_agenda);
  	if (dt_referencia_p between item.hr_agenda-(item.nr_minuto_duracao+qt_regra_item_w)/60/24 and item.hr_agenda+(item.nr_minuto_duracao+qt_regra_item_w)/60/24) then
  		ds_mensagem_p := ds_mensagem_regra_w || wheb_mensagem_pck.get_texto(1040350, 'NM_PACIENTE='||substr(OBTER_NOME_PF(CD_PESSOA_FISICA_P),1,60)||
  											-- NM_EXAME =  NM_ITEM
  											';NM_EXAME='||substr(Obter_Item_Grid_Ageint(item.nr_seq_proc_interno, item.cd_medico, item.cd_Especialidade,1),1,255)||
  											';DT_AGENDA='||to_char(item.hr_agenda,'dd/mm/yyyy hh24:mi'));
  		goto final;
  	end if;
  	
  end loop;
end if;

/*for consulta in c02 loop
	
end loop;*/
<<final>>
null;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE valida_tempo_entre_agenda ((cd_estabelecimento_p bigint, cd_agenda_pri_p bigint, cd_estab_pri_p bigint, nr_seq_proc_pri_p bigint, nr_seq_grupo_pri_p bigint, cd_setor_pri_p bigint, nr_minuto_duracao_p bigint, cd_pessoa_fisica_p text, dt_referencia_p timestamp, ds_mensagem_p out text, nr_seq_ageint_item_p bigint default null) is qt_maior_tempo_regra_w bigint) FROM PUBLIC;

