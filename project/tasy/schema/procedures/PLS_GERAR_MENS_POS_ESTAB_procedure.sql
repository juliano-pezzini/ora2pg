-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mens_pos_estab ( nr_seq_mensalidade_seg_p bigint, nr_seq_conta_p bigint, ie_cobranca_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
ie_tipo_protocolo_w		pls_protocolo_conta.ie_tipo_protocolo%type;
ie_status_liberado_w		varchar(1);
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
ie_preco_plano_w		pls_conta_pos_estabelecido.ie_preco_plano%type;
vl_beneficiario_w		double precision	:= 0;
tx_administracao_w		double precision;
vl_informado_w			double precision;
vl_taxa_pos_w			double precision;
ie_tipo_taxa_w			varchar(5);
dt_mesano_referencia_w		timestamp;
nr_seq_mensalidade_w		bigint;
qt_beneficiarios_w		integer	:= 0;
vl_mensalidade_seg_w		double precision	:= 0;
nr_seq_seg_contrato_w		bigint;
qt_idade_w			smallint;
dt_adesao_seg_w			timestamp;
nr_seq_mensalidade_seg_w	bigint;
nr_parcela_segurado_w		bigint;
nr_parcela_contrato_w		bigint;
dt_rescisao_w			timestamp;
dt_reativacao_w			timestamp;
nr_seq_intercambio_w		bigint;
cd_estabelecimento_w		smallint;
ie_pos_estab_faturamento_w	varchar(1);
ie_tipo_repasse_w		varchar(1);
ie_forma_cobr_pos_estab_w	varchar(255);
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
dt_mesano_referencia_fim_w	timestamp;
dt_rescisao_trunc_w		timestamp;
dt_mesano_referencia_trunc_w	timestamp;
dt_competencia_mens_w		pls_conta_pos_estabelecido.dt_competencia_mens%type;
nr_seq_pagador_w		pls_segurado_pagador.nr_seq_pagador%type;
vl_taxa_manutencao_w		pls_conta_pos_estab_taxa.vl_taxa_manutencao%type;
ie_tipo_taxa_ww			pls_conta_pos_estab_taxa.ie_tipo_taxa%type;
nr_seq_conta_pos_estab_w	pls_conta_pos_estabelecido.nr_sequencia%type;
vl_total_beneficiario_w		double precision;
nr_seq_mens_seg_item_w		pls_mensalidade_seg_item.nr_sequencia%type;
nr_seq_motivo_suspensao_w	pls_motivo_susp_cobr_mens.nr_sequencia%type := 0;
qt_excecao_pos_w		smallint;
qt_excecao_pos_rateio_w		smallint;
qt_excecao_vl_man_w		smallint;

C00 CURSOR FOR 
	SELECT	a.nr_seq_conta, 
		a.nr_seq_protocolo, 
		a.ie_tipo_protocolo 
	from	pls_conta_pos_estabelecido a 
	where	nr_seq_segurado	= nr_seq_segurado_w 
	and	coalesce(a.ie_situacao,'A') = 'A' 
	and	a.ie_cobrar_mensalidade	= 'S' 
	and	a.dt_mes_competencia <= dt_mesano_referencia_fim_w 
	and	coalesce(a.nr_seq_mensalidade_seg::text, '') = '' 
	and	coalesce(a.nr_seq_sca::text, '') = '' 
	and	((coalesce(nr_seq_conta_p::text, '') = '') or (a.nr_seq_conta = nr_seq_conta_p)) 
	and (a.nr_seq_pagador = nr_seq_pagador_w or coalesce(a.nr_seq_pagador::text, '') = '') 
	and	coalesce(pls_store_data_mens_pck.get_nr_seq_regra_grupo_lote::text, '') = '' 
	group by a.nr_seq_conta, a.nr_seq_protocolo, a.ie_tipo_protocolo 
	
union all
 
	SELECT	a.nr_seq_conta, 
		a.nr_seq_protocolo, 
		a.ie_tipo_protocolo 
	from	pls_conta_pos_estabelecido a 
	where	nr_seq_segurado	= nr_seq_segurado_w 
	and	coalesce(a.ie_situacao,'A') = 'A' 
	and	a.ie_cobrar_mensalidade	= 'S' 
	and	a.dt_mes_competencia <= dt_mesano_referencia_fim_w 
	and	coalesce(a.nr_seq_mensalidade_seg::text, '') = '' 
	and	coalesce(a.nr_seq_sca::text, '') = '' 
	and	((coalesce(nr_seq_conta_p::text, '') = '') or (a.nr_seq_conta = nr_seq_conta_p)) 
	and (a.nr_seq_pagador = nr_seq_pagador_w or coalesce(a.nr_seq_pagador::text, '') = '') 
	and	(pls_store_data_mens_pck.get_nr_seq_regra_grupo_lote IS NOT NULL AND pls_store_data_mens_pck.get_nr_seq_regra_grupo_lote::text <> '') 
	and	((a.nr_seq_prestador_exec = pls_store_data_mens_pck.get_seq_prestador_regra_exec) or (coalesce(pls_store_data_mens_pck.get_seq_prestador_regra_exec::text, '') = '')) 
	and	((a.nr_seq_prestador_atend = pls_store_data_mens_pck.get_seq_prestador_regra_atend) or (coalesce(pls_store_data_mens_pck.get_seq_prestador_regra_atend::text, '') = '')) 
	and	((a.ie_tipo_prestador_exec = pls_store_data_mens_pck.get_tipo_prestador_exec_regra) or (coalesce(pls_store_data_mens_pck.get_tipo_prestador_exec_regra::text, '') = '')) 
	and	((a.ie_tipo_prestador_atend = pls_store_data_mens_pck.get_tipo_prestador_atend_regra) or (coalesce(pls_store_data_mens_pck.get_tipo_prestador_atend_regra::text, '') = '')) 
	and	((a.ie_tipo_guia = pls_store_data_mens_pck.get_ie_tipo_guia_regra) or (coalesce(pls_store_data_mens_pck.get_ie_tipo_guia_regra::text, '') = '')) 
	and	((a.ie_tipo_segurado = pls_store_data_mens_pck.get_ie_tipo_segurado_regra) or (coalesce(pls_store_data_mens_pck.get_ie_tipo_segurado_regra::text, '') = '')) 
	and	((a.ie_preco_plano = pls_store_data_mens_pck.get_ie_preco_regra) or (coalesce(pls_store_data_mens_pck.get_ie_preco_regra::text, '') = '')) 
	group by a.nr_seq_conta, a.nr_seq_protocolo, a.ie_tipo_protocolo;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.dt_competencia_mens, 
		a.ie_preco_plano, 
		a.vl_beneficiario vl_beneficiario 
	from	pls_conta_pos_estabelecido a 
	where	nr_seq_segurado	= nr_seq_segurado_w 
	and	a.nr_seq_conta = nr_seq_conta_w 
	and	coalesce(a.ie_situacao,'A') = 'A' 
	and	a.ie_cobrar_mensalidade	= 'S' 
	and	a.dt_mes_competencia <= dt_mesano_referencia_fim_w 
	and	coalesce(a.nr_seq_mensalidade_seg::text, '') = '' 
	and	coalesce(a.nr_seq_sca::text, '') = '' 
	and (a.nr_seq_pagador = nr_seq_pagador_w or coalesce(a.nr_seq_pagador::text, '') = '');

C02 CURSOR FOR 
	SELECT	tx_administracao, 
		vl_informado 
	from	pls_regra_pos_estabelecido	a, 
		pls_contrato			b 
	where	a.nr_seq_contrato	= b.nr_sequencia 
	and	b.nr_sequencia		= nr_seq_contrato_w 
	and	dt_mesano_referencia_w between trunc(coalesce(dt_vigencia_inicio,dt_mesano_referencia_w),'month') and 
								fim_dia(trunc(coalesce(dt_vigencia_fim,dt_mesano_referencia_w),'month')) 
	and	coalesce(a.ie_cobranca,'A')	= ie_cobranca_p 
	
union all
 
	SELECT	tx_administracao, 
		vl_informado 
	from	pls_regra_pos_estabelecido	a, 
		pls_intercambio			b 
	where	a.nr_seq_intercambio	= b.nr_sequencia 
	and	b.nr_sequencia		= nr_seq_intercambio_w 
	and	dt_mesano_referencia_w between trunc(coalesce(dt_vigencia_inicio,dt_mesano_referencia_w),'month') and 
								fim_dia(trunc(coalesce(dt_vigencia_fim,dt_mesano_referencia_w),'month')) 
	and	coalesce(a.ie_cobranca,'A')	= ie_cobranca_p 
	--and	b.dt_rescisao_contrato is null OS 254234 
	
union
 
	select	tx_administracao, 
		vl_informado 
	from	pls_regra_pos_estabelecido	a 
	where	a.nr_seq_plano	= nr_seq_plano_w 
	and	trunc(dt_mesano_referencia_w,'month') between trunc(coalesce(dt_vigencia_inicio,dt_mesano_referencia_w),'month') and 
								fim_dia(trunc(coalesce(dt_vigencia_fim,dt_mesano_referencia_w),'month')) 
	and	not exists	(select	1 
				from	pls_regra_pos_estabelecido x 
				where	((x.nr_seq_contrato	= nr_seq_contrato_w) or (x.nr_seq_intercambio = nr_seq_intercambio_w))) 
	and	coalesce(a.ie_cobranca,'A')	= ie_cobranca_p;

C03 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		trunc(months_between(clock_timestamp(), c.dt_nascimento) / 12), 
		a.dt_contratacao 
	from	pessoa_fisica	c, 
		pls_segurado	a, 
		pls_contrato	b 
	where	a.cd_pessoa_fisica	= c.cd_pessoa_fisica 
	and	a.nr_seq_contrato	= b.nr_sequencia 
	and	b.nr_sequencia		= nr_seq_contrato_w 
	
union all
 
	SELECT	a.nr_sequencia, 
		trunc(months_between(clock_timestamp(), c.dt_nascimento) / 12), 
		a.dt_contratacao 
	from	pessoa_fisica	c, 
		pls_segurado	a, 
		pls_intercambio	b 
	where	a.cd_pessoa_fisica	= c.cd_pessoa_fisica 
	and	a.nr_seq_intercambio	= b.nr_sequencia 
	and	b.nr_sequencia		= nr_seq_intercambio_w;
	--and	dt_rescisao is null; OS 254234 
C04 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR 
	SELECT	a.vl_taxa_manutencao, 
		CASE WHEN a.ie_tipo_taxa='1' THEN  '10' WHEN a.ie_tipo_taxa='2' THEN  '9'  ELSE null END  ie_tipo_taxa 
	from	pls_conta_pos_estabelecido 	b, 
		pls_conta_pos_estab_taxa 	a 
	where	b.nr_seq_conta 		= nr_seq_conta_pc 
	and	b.nr_sequencia 		= a.nr_seq_conta_pos_estab 
	order by 
		ie_tipo_taxa;

  i RECORD;

BEGIN
dt_mesano_referencia_w		:= pls_store_data_mens_pck.get_dt_mesano_referencia;
dt_mesano_referencia_fim_w	:= fim_dia(last_day(dt_mesano_referencia_w));
nr_seq_contrato_w		:= pls_store_data_mens_pck.get_nr_seq_contrato;
nr_seq_intercambio_w		:= pls_store_data_mens_pck.get_nr_seq_intercambio;
nr_seq_plano_w			:= pls_store_data_mens_pck.get_nr_seq_plano;
dt_rescisao_w			:= pls_store_data_mens_pck.get_dt_rescisao;
nr_seq_pagador_w		:= coalesce(pls_store_data_mens_pck.get_seq_pagador_pos,pls_store_data_mens_pck.get_nr_seq_pagador_benef);
dt_rescisao_trunc_w		:= trunc(pls_store_data_mens_pck.get_dt_rescisao,'month');
dt_mesano_referencia_trunc_w	:= trunc(pls_store_data_mens_pck.get_dt_mesano_referencia,'month');
nr_seq_motivo_suspensao_w	:= pls_store_data_mens_pck.get_nr_seq_motivo_suspensao;
 
qt_excecao_pos_w		:= 0;
qt_excecao_pos_rateio_w		:= 0;
qt_excecao_vl_man_w		:= 0;
 
if (nr_seq_motivo_suspensao_w IS NOT NULL AND nr_seq_motivo_suspensao_w::text <> '') then 
	select	count(1) 
	into STRICT	qt_excecao_pos_w 
	from	pls_susp_cobr_mens_excecao a, 
		pls_motivo_susp_cobr_mens b 
	where	a.nr_seq_motivo = b.nr_sequencia 
	and	a.nr_seq_motivo = nr_seq_motivo_suspensao_w 
	and	a.ie_tipo_item = 6 
	and	b.ie_situacao  = 'A';
	 
	select	count(1) 
	into STRICT	qt_excecao_pos_rateio_w 
	from	pls_susp_cobr_mens_excecao a, 
		pls_motivo_susp_cobr_mens b 
	where	a.nr_seq_motivo = b.nr_sequencia 
	and	a.nr_seq_motivo = nr_seq_motivo_suspensao_w 
	and	a.ie_tipo_item = 7 
	and	b.ie_situacao  = 'A';
	 
	select	count(1) 
	into STRICT	qt_excecao_vl_man_w 
	from	pls_susp_cobr_mens_excecao a, 
		pls_motivo_susp_cobr_mens b 
	where	a.nr_seq_motivo = b.nr_sequencia 
	and	a.nr_seq_motivo = nr_seq_motivo_suspensao_w 
	and	a.ie_tipo_item = 10 
	and	b.ie_situacao  = 'A';
end if;
		 
-- aaschlote 04/09/2012 OS - 480506 - Cobrar o valor de mensal do pós independente da oande é cobrado (Faturamento ou Mensalidade) 
if (ie_cobranca_p = 'M') then 
	for r_c02_w in C02 loop 
		if (r_c02_w.vl_informado > 0) then 
			vl_taxa_pos_w	:= r_c02_w.vl_informado;
			ie_tipo_taxa_w	:= '10';
		end if;
		 
		if (vl_taxa_pos_w > 0) and 
			(((qt_excecao_vl_man_w = 0) and (coalesce(nr_seq_motivo_suspensao_w::text, '') = '')) or 
			(qt_excecao_vl_man_w > 0 AND nr_seq_motivo_suspensao_w IS NOT NULL AND nr_seq_motivo_suspensao_w::text <> '')) then 
			insert into pls_mensalidade_seg_item(nr_sequencia, dt_atualizacao, nm_usuario, 
				nr_seq_mensalidade_seg, ie_tipo_item, vl_item, 
				nr_seq_conta, nr_seq_protocolo, ie_tipo_mensalidade) 
			values (nextval('pls_mensalidade_seg_item_seq'), clock_timestamp(), nm_usuario_p, 
				nr_seq_mensalidade_seg_p, ie_tipo_taxa_w, vl_taxa_pos_w, 
				null, null, 'N');
		end if;
	end loop;
elsif (ie_cobranca_p = 'A') then 
	select	b.nr_seq_mensalidade, 
		a.dt_reativacao, 
		a.nr_sequencia, 
		a.cd_estabelecimento, 
		a.ie_tipo_repasse, 
		a.ie_tipo_segurado 
	into STRICT	nr_seq_mensalidade_w, 
		dt_reativacao_w, 
		nr_seq_segurado_w, 
		cd_estabelecimento_w, 
		ie_tipo_repasse_w, 
		ie_tipo_segurado_w 
	from	pls_segurado			a, 
		pls_mensalidade_segurado	b, 
		pls_mensalidade			c, 
		pls_lote_mensalidade		d 
	where	b.nr_seq_segurado		= a.nr_sequencia 
	and	b.nr_seq_mensalidade		= c.nr_sequencia 
	and	c.nr_seq_lote			= d.nr_sequencia 
	and	b.nr_sequencia			= nr_seq_mensalidade_seg_p;
	 
	ie_pos_estab_faturamento_w	:= pls_store_data_mens_pck.get_ie_pos_estab_faturamento;
	 
	open C00;
	loop 
	fetch C00 into	 
		nr_seq_conta_w, 
		nr_seq_protocolo_w, 
		ie_tipo_protocolo_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin 
		vl_total_beneficiario_w	:= 0;
		if (pls_store_data_mens_pck.get_ie_forma_pagamento = 'P') then 
			begin 
			select	'S' 
			into STRICT	ie_status_liberado_w 
			from	pls_protocolo_conta 
			where	nr_sequencia	= nr_seq_protocolo_w 
			and	ie_status in ('3','6');
			exception 
			when others then 
				ie_status_liberado_w	:= 'N';
			end;
		else 
			begin 
			select	'S' 
			into STRICT	ie_status_liberado_w 
			from	pls_conta 
			where	nr_sequencia	= nr_seq_conta_w 
			and	ie_status	= 'F';
			exception 
			when others then 
				ie_status_liberado_w	:= 'N';
			end;
		end if;
		 
		--OS - 797710 - Caso a forma de geração de valores pós estabelecido depender de regra, o sistema irá verificar a regra através da function pls_obter_forma_cobr_pos_estab 
		if (ie_pos_estab_faturamento_w = 'R') then 
			ie_forma_cobr_pos_estab_w	:= pls_obter_forma_cobr_pos_estab(cd_estabelecimento_w,ie_tipo_segurado_w);
			--Se o resultado da regra para o tipo de beneficiário for F (Faturamento), é alterada a variável de geração do pós-estabelecido para "N" (Não gerar na mensalidade) 
			if (ie_forma_cobr_pos_estab_w = 'F') then 
				ie_pos_estab_faturamento_w	:= 'S';
			else 
				ie_pos_estab_faturamento_w	:= 'N';
			end if;
		end if;
 
		if	((ie_tipo_protocolo_w in ('C','I')) or (pls_store_data_mens_pck.get_ie_pos_estab_reembolso = 'S' and ie_tipo_protocolo_w = 'R')) and (ie_status_liberado_w = 'S') then 
			open C01;
			loop 
			fetch C01 into 
				nr_seq_conta_pos_estab_w, 
				dt_competencia_mens_w, 
				ie_preco_plano_w, 
				vl_beneficiario_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin 
				if	((coalesce(dt_competencia_mens_w::text, '') = '') or (dt_competencia_mens_w = dt_mesano_referencia_w)) and 
					 ((coalesce(ie_pos_estab_faturamento_w,'N') = 'N') or 
					((ie_preco_plano_w = '1') and (coalesce(pls_store_data_mens_pck.get_ie_pos_estab_fat_resc,'M') = 'M') and --Restrição para beneficiário rescindido 
					 (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '' AND dt_mesano_referencia_trunc_w >= dt_rescisao_trunc_w))) then 
					begin 
					if (coalesce(nr_seq_intercambio_w,0) <> 0) then 
						if (ie_tipo_repasse_w = 'P') then 
							ie_preco_plano_w	:= '1';
						elsif (ie_tipo_repasse_w = 'C') then 
							ie_preco_plano_w	:= '3';
						end if;
					end if;
					 
					if (ie_preco_plano_w = '2') and 
						(((qt_excecao_pos_rateio_w = 0) and (coalesce(nr_seq_motivo_suspensao_w::text, '') = '')) or 
						(qt_excecao_pos_rateio_w > 0 AND nr_seq_motivo_suspensao_w IS NOT NULL AND nr_seq_motivo_suspensao_w::text <> '')) then --7 - Preço pós-estabelecido por rateio 
						if (coalesce(nr_seq_intercambio_w,0) <> 0) then 
							select	sum(d.vl_beneficiario) 
							into STRICT	vl_beneficiario_w 
							from	pls_conta			a, 
								pls_segurado			b, 
								pls_intercambio			c, 
								pls_conta_pos_estabelecido	d 
							where	a.nr_seq_segurado 	= b.nr_sequencia 
							and	b.nr_seq_intercambio 	= c.nr_sequencia 
							and	d.nr_seq_conta		= a.nr_sequencia 
							and	coalesce(d.nr_seq_mensalidade_seg::text, '') = '' 
							and	coalesce(d.nr_seq_sca::text, '') = '' 
							and	d.ie_cobrar_mensalidade	= 'S' 
							and	coalesce(d.ie_situacao,'A') = 'A' 
							and	c.nr_sequencia		= nr_seq_intercambio_w 
							and	a.nr_sequencia		= nr_seq_conta_w;
						else 
							select	sum(d.vl_beneficiario) 
							into STRICT	vl_beneficiario_w 
							from	pls_conta			a, 
								pls_segurado			b, 
								pls_contrato			c, 
								pls_conta_pos_estabelecido	d 
							where	a.nr_seq_segurado 	= b.nr_sequencia 
							and	b.nr_seq_contrato 	= c.nr_sequencia 
							and	d.nr_seq_conta		= a.nr_sequencia 
							and	coalesce(d.nr_seq_mensalidade_seg::text, '') = '' 
							and	coalesce(d.nr_seq_sca::text, '') = '' 
							and	d.ie_cobrar_mensalidade	= 'S' 
							and	coalesce(d.ie_situacao,'A') = 'A' 
							and	c.nr_sequencia		= nr_seq_contrato_w 
							and	a.nr_sequencia		= nr_seq_conta_w;
						end if;
						 
						if (coalesce(nr_seq_intercambio_w,0) <> 0) then 
							select	count(1) 
							into STRICT	qt_beneficiarios_w 
							from	pls_segurado	a, 
								pls_intercambio	b 
							where	a.nr_seq_intercambio	= b.nr_sequencia 
							and	b.nr_sequencia		= nr_seq_intercambio_w 
							and	coalesce(a.dt_rescisao::text, '') = '';
						else 
							select	count(1) 
							into STRICT	qt_beneficiarios_w 
							from	pls_segurado	a, 
								pls_contrato	b 
							where	a.nr_seq_contrato	= b.nr_sequencia 
							and	b.nr_sequencia		= nr_seq_contrato_w 
							and	coalesce(a.dt_rescisao::text, '') = '';
						end if;
						 
						vl_mensalidade_seg_w := dividir(vl_beneficiario_w,qt_beneficiarios_w);
						 
						open C03;
						loop 
						fetch C03 into 
							nr_seq_seg_contrato_w, 
							qt_idade_w, 
							dt_adesao_seg_w;
						EXIT WHEN NOT FOUND; /* apply on C03 */
							begin 
							select	nextval('pls_mensalidade_segurado_seq') 
							into STRICT	nr_seq_mensalidade_seg_w 
							;
							 
							select (trunc(months_between(trunc(dt_mesano_referencia_w,'month'),trunc(dt_adesao_seg_w,'month'))) + 1), 
								pls_obter_parcela_contrato(nr_seq_contrato_w,dt_mesano_referencia_w) 
							into STRICT	nr_parcela_segurado_w, 
								nr_parcela_contrato_w 
							;
							 
							insert into pls_mensalidade_segurado(nr_sequencia, dt_atualizacao, nm_usuario, 
								nr_seq_segurado, vl_mensalidade, nr_seq_mensalidade, 
								qt_idade, dt_mesano_referencia, nr_parcela, 
								nr_seq_plano, nr_seq_contrato, nr_parcela_contrato, 
								nr_seq_intercambio) 
							values (nr_seq_mensalidade_seg_w, clock_timestamp(), nm_usuario_p, 
								nr_seq_seg_contrato_w, 0, nr_seq_mensalidade_w, qt_idade_w, 
								dt_mesano_referencia_w, nr_parcela_segurado_w, 
								nr_seq_plano_w, nr_seq_contrato_w, nr_parcela_contrato_w, 
								nr_seq_intercambio_w);
 
							if (coalesce(vl_mensalidade_seg_w,0) > 0) then 
 
								insert into pls_mensalidade_seg_item(nr_sequencia, dt_atualizacao, nm_usuario, 
									nr_seq_mensalidade_seg, ie_tipo_item, vl_item, 
									nr_seq_conta, nr_seq_protocolo, ie_tipo_mensalidade) 
								values (nextval('pls_mensalidade_seg_item_seq'), clock_timestamp(), nm_usuario_p, 
									nr_seq_mensalidade_seg_w, '7', vl_mensalidade_seg_w, 
									nr_seq_conta_w, nr_seq_protocolo_w, 'N');
 
								update	pls_conta_pos_estabelecido 
								set	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_w, 
									dt_atualizacao		= clock_timestamp(), 
									nm_usuario		= nm_usuario_p 
								where	nr_seq_conta		= nr_seq_conta_w 
								and	coalesce(nr_seq_mensalidade_seg::text, '') = '';
								 
								CALL pls_atualizar_item_faturado(nr_seq_conta_w, 2, nm_usuario_p);
							end if;
							end;
						end loop;
						close C03;
						 
						open C04(nr_seq_conta_w);
						loop 
						fetch C04 into 
							vl_taxa_manutencao_w, 
							ie_tipo_taxa_ww;
						EXIT WHEN NOT FOUND; /* apply on C04 */
							begin 
							insert into pls_mensalidade_seg_item(nr_sequencia, dt_atualizacao, nm_usuario, 
								nr_seq_mensalidade_seg, ie_tipo_item, vl_item, 
								nr_seq_conta, nr_seq_protocolo, ie_tipo_mensalidade) 
							values (nextval('pls_mensalidade_seg_item_seq'), clock_timestamp(), nm_usuario_p, 
								nr_seq_mensalidade_seg_p, ie_tipo_taxa_ww, vl_taxa_manutencao_w, 
								nr_seq_conta_w, nr_seq_protocolo_w, 'N');
							end;
						end loop;
						close C04;
					elsif	(((qt_excecao_pos_w = 0) and (coalesce(nr_seq_motivo_suspensao_w::text, '') = '')) or 
						(qt_excecao_pos_w > 0 AND nr_seq_motivo_suspensao_w IS NOT NULL AND nr_seq_motivo_suspensao_w::text <> '')) and 
						((ie_preco_plano_w = '3') or 
						((ie_preco_plano_w = '1') and (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and (pls_store_data_mens_pck.get_ie_gerar_preco_pos_seg_pre = 'S'))) then --6 - Preço pós-estabelecido por custo operacional 
						if (vl_beneficiario_w > 0) then 
							vl_total_beneficiario_w	:= vl_total_beneficiario_w + coalesce(vl_beneficiario_w,0);
							 
							update	pls_conta_pos_estabelecido 
							set	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p, 
								dt_atualizacao		= clock_timestamp(), 
								nm_usuario		= nm_usuario_p 
							where	nr_sequencia		= nr_seq_conta_pos_estab_w;
						end if;
					end if;
					end;
				end if;
				end;
			end loop;
			close C01;
			 
			if (vl_total_beneficiario_w <> 0) then 
			 
				select	nextval('pls_mensalidade_seg_item_seq') 
				into STRICT	nr_seq_mens_seg_item_w 
				;
 
				insert into pls_mensalidade_seg_item(nr_sequencia, dt_atualizacao, nm_usuario, 
						nr_seq_mensalidade_seg, ie_tipo_item, vl_item, 
						nr_seq_conta, nr_seq_protocolo, ie_tipo_mensalidade) 
					values (nr_seq_mens_seg_item_w, clock_timestamp(), nm_usuario_p, 
						nr_seq_mensalidade_seg_p, '6', vl_total_beneficiario_w, 
						nr_seq_conta_w, nr_seq_protocolo_w, 'N');
				 
				for i in (	select	sum(a.vl_apropriacao)	vl_apropriacao, 
							a.nr_seq_centro_apropriacao 
						from	pls_conta_pos_estab_aprop	a, 
							pls_conta_pos_estabelecido	b 
						where	b.nr_sequencia	= a.nr_seq_conta_pos_estab 
						and	b.nr_seq_conta	= nr_seq_conta_w 
						and	coalesce(b.ie_situacao,'A') = 'A' 
						and	b.ie_cobrar_mensalidade = 'S' 
						and	b.nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p 
						group by a.nr_seq_centro_apropriacao) loop 
 
					insert into pls_mens_seg_item_aprop(nr_sequencia, nr_seq_item, nr_seq_centro_apropriacao, vl_apropriacao, 
					    dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec) 
					values (nextval('pls_mens_seg_item_aprop_seq'), nr_seq_mens_seg_item_w, i.nr_seq_centro_apropriacao, i.vl_apropriacao, 
						clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p);
						 
					update	pls_mensalidade_seg_item 
					set	ie_valor_apropriado = 'S' 
					where	nr_sequencia = nr_seq_mens_seg_item_w;
				end loop;
				 
				open C04(nr_seq_conta_w);
				loop 
				fetch C04 into 
					vl_taxa_manutencao_w, 
					ie_tipo_taxa_ww;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin 
					insert into pls_mensalidade_seg_item(nr_sequencia, dt_atualizacao, nm_usuario, 
						nr_seq_mensalidade_seg, ie_tipo_item, vl_item, 
						nr_seq_conta, nr_seq_protocolo, ie_tipo_mensalidade) 
					values (nextval('pls_mensalidade_seg_item_seq'), clock_timestamp(), nm_usuario_p, 
						nr_seq_mensalidade_seg_p, ie_tipo_taxa_ww, vl_taxa_manutencao_w, 
						nr_seq_conta_w, nr_seq_protocolo_w, 'N');
					end;
				end loop;
				close C04;
				 
				CALL pls_gerar_mens_pos_estab_sca(nr_seq_mensalidade_seg_p, nr_seq_conta_w, nm_usuario_p);
				CALL pls_atualizar_item_faturado(nr_seq_conta_w, 2, nm_usuario_p);
			end if;
		end if;
		end;
	end loop;
	close C00;
end if;
 
--Não pode dar commit nesta procedure 
--commit; 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mens_pos_estab ( nr_seq_mensalidade_seg_p bigint, nr_seq_conta_p bigint, ie_cobranca_p text, nm_usuario_p text) FROM PUBLIC;

