-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_pf_conexa (nm_paciente_p text, nr_seq_pac_conexa_p text, ie_sexo_p text, dt_nascimento_p text, nr_identidade_p text, nr_cpf_p text, nm_mae_p text, nm_pai_p text, ds_endereco_p text, ds_num_endereco_p text, ds_bairro_p text, ds_municipio_p text, ds_uf_p text, nr_cep_p text, nr_ddd_telefone_p text, nr_telefone_p text, nr_ddd_telefone_celular_p text, nr_telefone_celular_p text, nr_ddd_tel_comercial_p text, nr_telefone_comercial_p text, nr_ramal_comercial_p text, ds_email_p text, num_cns_p text, nm_usuario_p text, cd_pessoa_fisica_p INOUT text) AS $body$
DECLARE


cd_paciente_w		varchar(10);
nr_sequencia_w		bigint;	
dt_nascimento_w		varchar(20);
dt_nascimento_for_w	timestamp;		
cd_estabelecimento_w estabelecimento.cd_estabelecimento%type;
			

BEGIN

select wheb_usuario_pck.get_cd_estabelecimento
into STRICT cd_estabelecimento_w
;

select	nextval('pessoa_fisica_seq')
into STRICT	cd_paciente_w
;

dt_nascimento_w		:= elimina_caracteres_especiais(dt_nascimento_p);
dt_nascimento_for_w	:= to_date(substr(dt_nascimento_w,7,2)||'/'||substr(dt_nascimento_w,5,2)||'/'||substr(dt_nascimento_w,1,4),'dd/mm/yyyy');
		
/* Inserindo PF no Tasy */

insert into pessoa_fisica(cd_pessoa_fisica,
		nm_usuario,
		dt_atualizacao,
		dt_atualizacao_nrec,
		ie_tipo_pessoa,
		nm_pessoa_fisica,
		nr_identidade,
		dt_nascimento,
		ie_sexo,
		nr_telefone_celular,
		nr_cpf,
		nr_cartao_nac_sus,
		nm_usuario_nrec)
	values (cd_paciente_w,
		nm_usuario_p,
		clock_timestamp(),
		clock_timestamp(),
		1,
		initcap(nm_paciente_p),
		nr_identidade_p,
		dt_nascimento_for_w,
		ie_sexo_p,
		nr_ddd_telefone_celular_p||' '||nr_telefone_celular_p,
		nr_cpf_p,
		num_cns_p,
		nm_usuario_p);

/* Inserindo registro conexa na PF */

insert	into pf_codigo_externo(nr_sequencia,
				cd_pessoa_fisica,
				cd_pessoa_fisica_externo,  
				dt_atualizacao,
				dt_atualizacao_nrec,     
				ie_tipo_codigo_externo,  
				nm_usuario,   
				nm_usuario_nrec,
				cd_estabelecimento)
		values (nextval('pf_codigo_externo_seq'),
				cd_paciente_w,
				nr_seq_pac_conexa_p,
				clock_timestamp(),
				clock_timestamp(),
				'CO',
				nm_usuario_p,
				nm_usuario_p,
				cd_estabelecimento_w);
	


if (nr_cep_p IS NOT NULL AND nr_cep_p::text <> '') or (ds_endereco_p IS NOT NULL AND ds_endereco_p::text <> '') or (ds_num_endereco_p IS NOT NULL AND ds_num_endereco_p::text <> '') or (ds_bairro_p IS NOT NULL AND ds_bairro_p::text <> '') or (ds_municipio_p IS NOT NULL AND ds_municipio_p::text <> '') or (ds_uf_p IS NOT NULL AND ds_uf_p::text <> '') or (nr_telefone_p IS NOT NULL AND nr_telefone_p::text <> '') or (nr_ddd_telefone_p IS NOT NULL AND nr_ddd_telefone_p::text <> '') or (ds_email_p IS NOT NULL AND ds_email_p::text <> '') then
	
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_paciente_w;
	
	/* Residencial */

	insert into compl_pessoa_fisica(nr_sequencia,
				cd_pessoa_fisica,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nm_usuario,
				dt_atualizacao,
				ie_tipo_complemento,
				cd_cep,
				ds_endereco,
				nr_endereco,
				ds_bairro,
				ds_municipio,
				sg_estado,
				nr_telefone,
				nr_ddd_telefone,
				ds_email)
			values (nr_sequencia_w,
				cd_paciente_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				1,
				elimina_caracteres_especiais(nr_cep_p),
				ds_endereco_p,
				ds_num_endereco_p,
				ds_bairro_p,
				ds_municipio_p,
				ds_uf_p,
				nr_telefone_p,
				nr_ddd_telefone_p,
				ds_email_p);
end if;
			
if (nm_mae_p IS NOT NULL AND nm_mae_p::text <> '') then	
	/*Mae*/

	
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_paciente_w;
	
	insert into compl_pessoa_fisica(nr_sequencia,
			cd_pessoa_fisica,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nm_usuario,
			dt_atualizacao,
			ie_tipo_complemento,
			nm_contato)
		values (nr_sequencia_w,
			cd_paciente_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			5,
			substr(nm_mae_p,1,40));
end if;
		
if (nm_pai_p IS NOT NULL AND nm_pai_p::text <> '') then		
	
	/*Pai*/
	
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_paciente_w;
	
	insert into compl_pessoa_fisica(nr_sequencia,
			cd_pessoa_fisica,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nm_usuario,
			dt_atualizacao,
			ie_tipo_complemento,
			nm_contato)
		values (nr_sequencia_w,
			cd_paciente_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			4,
			substr(nm_pai_p,1,40));
end if;

if (nr_ddd_tel_comercial_p IS NOT NULL AND nr_ddd_tel_comercial_p::text <> '') or (nr_telefone_comercial_p IS NOT NULL AND nr_telefone_comercial_p::text <> '') or (nr_ramal_comercial_p IS NOT NULL AND nr_ramal_comercial_p::text <> '') then
	
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_paciente_w;
	
	/* Comercial */

	insert into compl_pessoa_fisica(nr_sequencia,
			cd_pessoa_fisica,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nm_usuario,
			dt_atualizacao,
			ie_tipo_complemento,
			nr_telefone,
			nr_ramal)
		values (nr_sequencia_w,
			cd_paciente_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			2,
			substr(nr_ddd_tel_comercial_p||' '||nr_telefone_comercial_p,1,15),
			substr(nr_ramal_comercial_p,1,5));
	

end if;

cd_pessoa_fisica_p	:= cd_paciente_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_pf_conexa (nm_paciente_p text, nr_seq_pac_conexa_p text, ie_sexo_p text, dt_nascimento_p text, nr_identidade_p text, nr_cpf_p text, nm_mae_p text, nm_pai_p text, ds_endereco_p text, ds_num_endereco_p text, ds_bairro_p text, ds_municipio_p text, ds_uf_p text, nr_cep_p text, nr_ddd_telefone_p text, nr_telefone_p text, nr_ddd_telefone_celular_p text, nr_telefone_celular_p text, nr_ddd_tel_comercial_p text, nr_telefone_comercial_p text, nr_ramal_comercial_p text, ds_email_p text, num_cns_p text, nm_usuario_p text, cd_pessoa_fisica_p INOUT text) FROM PUBLIC;

