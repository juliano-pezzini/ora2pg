-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_extrato (nr_seq_conciliacao_p bigint, nr_seq_trans_credito_p bigint, nr_seq_trans_debito_p bigint, ds_lista_lancamento_p text, ie_concil_movto_gerado_p text, nm_usuario_p text) AS $body$
DECLARE


nr_documento_w		varchar(22);
dt_movimento_w		timestamp;
vl_lancamento_w		double precision;
cd_estabelecimento_w	smallint;
nr_seq_conta_w		bigint;
ie_conciliar_pendente_w	varchar(1);
nr_seq_movto_trans_w	bigint;
ie_deb_cred_w		varchar(1);
nr_seq_trans_financ_w	bigint;
ds_historico_w		varchar(255);
/* Projeto Multimoeda - Variáveis */

cd_moeda_banco_w		integer;
cd_moeda_empresa_w		integer;
ie_banco_estrang_w		varchar(1) := 'N';
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;

c01 CURSOR FOR
SELECT	substr(a.nr_documento,1,22) nr_documento,
	a.dt_movimento,
	a.vl_lancamento,
	a.ie_deb_cred,
	a.ds_historico
from	concil_banc_pend_bco b,
	banco_extrato_lanc a
where	b.nr_seq_conciliacao	= nr_seq_conciliacao_p
and	a.nr_sequencia		= b.nr_seq_lanc_extrato
and	ds_lista_lancamento_p like '% ' || a.nr_sequencia || ' %';


BEGIN

select	b.cd_estabelecimento,
	b.nr_sequencia,
	b.cd_moeda
into STRICT	cd_estabelecimento_w,
	nr_seq_conta_w,
	cd_moeda_banco_w
from	banco_estabelecimento b,
	conciliacao_bancaria a
where	a.nr_seq_conta	= b.nr_sequencia
and	a.nr_sequencia	= nr_seq_conciliacao_p;

/* Projeto Multimoeda - Busca a moeda padrão da empresa */

select	obter_moeda_padrao_empresa(coalesce(cd_estabelecimento_w,obter_estabelecimento_ativo),'E')
into STRICT	cd_moeda_empresa_w
;

/* Projeto Multimoeda - Verifica se a conta é em moeda estrangeira ou não para definir os valores para a conciliação */

if (coalesce(cd_moeda_banco_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
	ie_banco_estrang_w := 'S';
	-- Busca a cotação do dia para a moeda do banco
	select	obter_cotacao_moeda_financ(cd_moeda_banco_w,clock_timestamp())
	into STRICT	vl_cotacao_w
	;
else
	ie_banco_estrang_w := 'N';
end if;

ie_conciliar_pendente_w := obter_param_usuario(814, 38, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_conciliar_pendente_w);

open	c01;
loop
fetch	c01 into
	nr_documento_w,
	dt_movimento_w,
	vl_lancamento_w,
	ie_deb_cred_w,
	ds_historico_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	if (ie_deb_cred_w	= 'C') then

		nr_seq_trans_financ_w	:= nr_seq_trans_debito_p;

	else

		nr_seq_trans_financ_w	:= nr_seq_trans_credito_p;

	end if;

	select	nextval('movto_trans_financ_seq')
	into STRICT	nr_seq_movto_trans_w
	;

	insert	into movto_trans_financ(cd_estabelecimento,
		dt_atualizacao,
		dt_transacao,
		ie_conciliacao,
		nm_usuario,
		nr_documento,
		nr_lote_contabil,
		nr_seq_banco,
		nr_seq_trans_financ,
		nr_sequencia,
		vl_transacao,
		ds_historico,
		vl_transacao_estrang,
		vl_complemento,
		vl_cotacao,
		cd_moeda)
	values (cd_estabelecimento_w,
		clock_timestamp(),
		dt_movimento_w,
		'N',
		nm_usuario_p,
		nr_documento_w,
		0,
		nr_seq_conta_w,
		nr_seq_trans_financ_w,
		nr_seq_movto_trans_w,
		CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN vl_lancamento_w * coalesce(vl_cotacao_w,0)  ELSE vl_lancamento_w END ,
		ds_historico_w,
		CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN vl_lancamento_w  ELSE null END ,
		CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN (vl_lancamento_w * coalesce(vl_cotacao_w,0)) - vl_lancamento_w  ELSE null END ,
		CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN vl_cotacao_w  ELSE null END ,
		CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN cd_moeda_banco_w  ELSE null END );

	if (coalesce(ie_conciliar_pendente_w,'N') = 'S' or coalesce(ie_concil_movto_gerado_p,'S') = 'S') then

		insert	into concil_banc_pend_tasy(dt_atualizacao,
			nm_usuario,
			nr_seq_conciliacao,
			nr_seq_movto_trans,
			nr_sequencia)
		values (clock_timestamp(),
			nm_usuario_p,
			nr_seq_conciliacao_p,
			nr_seq_movto_trans_w,
			nextval('concil_banc_pend_tasy_seq'));

	end if;

end	loop;
close	c01;

if (coalesce(ie_concil_movto_gerado_p,'S') = 'S') then

	CALL conciliar_banco(nr_seq_conciliacao_p,nm_usuario_p);

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_extrato (nr_seq_conciliacao_p bigint, nr_seq_trans_credito_p bigint, nr_seq_trans_debito_p bigint, ds_lista_lancamento_p text, ie_concil_movto_gerado_p text, nm_usuario_p text) FROM PUBLIC;

