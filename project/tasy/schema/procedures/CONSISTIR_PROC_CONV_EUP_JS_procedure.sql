-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_proc_conv_eup_js ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_atendimento_p bigint, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_procedimento_p timestamp, qt_procedimento_p bigint, ie_tipo_atendimento_p bigint, cd_plano_p text, cd_setor_atendimento_p bigint, nr_seq_exame_p bigint, nr_seq_proc_interno_p bigint, cd_categoria_p text, cd_setor_entrega_prescr_p bigint, cd_medico_p text, nr_sequencia_p bigint, nr_acao_executada_p bigint, nr_prescr_medica_p bigint, nm_usuario_p text, cd_funcao_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, ds_msg_aviso_p INOUT text, ie_chamar_funcao_p INOUT text, nr_seq_avaliacao_p INOUT bigint) AS $body$
DECLARE


vl_parametro_w		varchar(1);
nr_seq_avaliacao_w	bigint;
ds_erro_w 		varchar(255);
ie_regra_w		varchar(2);
nr_seq_regra_w		bigint;
ds_observacao_w		varchar(255) := '';
ds_msg_aviso_w		varchar(255);
nr_erro_w		bigint;
ie_chamar_funcao_w	varchar(1)	:= 'N';
cd_pessoa_fisica_w	varchar(10);
ie_glosa_w		regra_ajuste_proc.ie_glosa%type;
nr_seq_regra_preco_w	regra_ajuste_proc.nr_sequencia%type;			
nr_seq_regra_ajuste_w  bigint;
vl_parametro1209_w	varchar(1);

BEGIN


select	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_fisica_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;


if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_prescricao_p <> 0)then
	begin
	
	vl_parametro_w := obter_param_usuario(cd_funcao_p, 338, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_parametro_w);
	
	if (vl_parametro_w = 'E') and (coalesce(nr_acao_executada_p,3) <> 3) and (coalesce(nr_prescricao_p,0) > 0)  then
		begin
		
		nr_seq_avaliacao_w := gerar_avaliacao_proced_exame(nr_prescricao_p, nr_seq_prescr_p, nm_usuario_p, nr_seq_avaliacao_w);
		
		end;
	end if;
	
	if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (cd_procedimento_p <> 0)then
		begin
		
		SELECT * FROM consiste_plano_convenio(nr_atendimento_p, cd_convenio_p, cd_procedimento_p, ie_origem_proced_p, dt_procedimento_p, qt_procedimento_p, ie_tipo_atendimento_p, cd_plano_p, '', ds_erro_w, cd_setor_atendimento_p, nr_seq_exame_p, ie_regra_w, null, nr_seq_regra_w, nr_seq_proc_interno_p, cd_categoria_p, cd_estabelecimento_p, cd_setor_entrega_prescr_p, cd_medico_p, cd_pessoa_fisica_w, ie_glosa_w, nr_seq_regra_preco_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, nr_seq_regra_preco_w;
		
		end;
	end if;
				
	vl_parametro_w := obter_param_usuario(cd_funcao_p, 415, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_parametro_w);
	vl_parametro1209_w := obter_param_usuario(916, 1209, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_parametro1209_w);
	
	if (vl_parametro_w = 'S')then
		begin
		
		select 	substr(max(ds_observacao), 1, 255)
		into STRICT	ds_observacao_w
		from 	regra_convenio_plano
		where 	nr_sequencia = nr_seq_regra_w;
		
		end;
	end if;
	
	if (ie_regra_w in (1,2) or (vl_parametro1209_w = 'S' and ie_regra_w in (5,8))) then
		begin
		
		CALL atualizar_aut_prescr_proc_eup(nr_sequencia_p, nr_prescricao_p, 'B', nm_usuario_p);
		
		end;
	end if;
	
	if (ie_regra_w in (3,6,7))then
		begin
		
		CALL atualizar_aut_prescr_proc_eup(nr_sequencia_p, nr_prescricao_p, 'PA', nm_usuario_p);
		
		end;
	end if;
	
	if (ie_regra_w in (1,2) or (vl_parametro1209_w = 'S' and ie_regra_w in (5,8))) then
		begin
		
		ds_msg_aviso_w	:= substr(Wheb_mensagem_pck.get_texto(306561, 'DS_OBSERVACAO=' || ds_observacao_w), 1, 255);
		
		end;
	end if;
	
	vl_parametro_w := obter_param_usuario(cd_funcao_p, 326, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_parametro_w);
	
	if (vl_parametro_w = 'S')and (ie_regra_w in (3,6,7))then
		begin
		
		ds_msg_aviso_w	:= substr(Wheb_mensagem_pck.get_texto(306563, 'DS_OBSERVACAO_W=' || ds_observacao_w), 1, 255);
		
		end;
	end if;
	
	vl_parametro_w := obter_param_usuario(cd_funcao_p, 172, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_parametro_w);
	
	if (vl_parametro_w = 'S')and (nr_acao_executada_p <> 3)then
		begin
		
		nr_erro_w := consistir_prescr_procedimento(nr_prescr_medica_p, nr_seq_prescr_p, nm_usuario_p, cd_perfil_p, nr_erro_w);
		
		if (nr_erro_w <> 0)then
			begin
			
			ie_chamar_funcao_w	:= 'S';
			
			end;
		end if;
		
		end;
	end if;
	
	--OS 896978
	vl_parametro_w := obter_param_usuario(cd_funcao_p, 212, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, vl_parametro_w);	
	if (vl_parametro_w = 'S') then
		begin
		
			SELECT * FROM consiste_plano_convenio(nr_atendimento_p, cd_convenio_p, cd_procedimento_p, ie_origem_proced_p, dt_procedimento_p, qt_procedimento_p, ie_tipo_atendimento_p, cd_plano_p, '', ds_erro_w, cd_setor_atendimento_p, nr_seq_exame_p, ie_regra_w, 0,  -- nr_seq_agenda_p
						nr_seq_regra_w, nr_seq_proc_interno_p, cd_categoria_p, cd_estabelecimento_p, cd_setor_entrega_prescr_p, cd_medico_p, cd_pessoa_fisica_w, ie_glosa_w, nr_seq_regra_ajuste_w, nr_prescricao_p) INTO STRICT ds_erro_w, ie_regra_w, 
						nr_seq_regra_w, ie_glosa_w, nr_seq_regra_ajuste_w;
						
			if (ds_erro_w <> '') then 			
			ds_msg_aviso_p := ds_erro_w;
			end if;
		end;
	end if;
	
	end;
end if;

ds_msg_aviso_p		:= ds_msg_aviso_w;
ie_chamar_funcao_p	:= ie_chamar_funcao_w;
nr_seq_avaliacao_p	:= nr_seq_avaliacao_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_proc_conv_eup_js ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_atendimento_p bigint, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_procedimento_p timestamp, qt_procedimento_p bigint, ie_tipo_atendimento_p bigint, cd_plano_p text, cd_setor_atendimento_p bigint, nr_seq_exame_p bigint, nr_seq_proc_interno_p bigint, cd_categoria_p text, cd_setor_entrega_prescr_p bigint, cd_medico_p text, nr_sequencia_p bigint, nr_acao_executada_p bigint, nr_prescr_medica_p bigint, nm_usuario_p text, cd_funcao_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, ds_msg_aviso_p INOUT text, ie_chamar_funcao_p INOUT text, nr_seq_avaliacao_p INOUT bigint) FROM PUBLIC;

