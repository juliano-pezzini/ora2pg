-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_resumo_comercial ( ie_origem_informacao_p text, ie_informacao_p text, ie_dimensao_p text, ie_evolucao_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

			 
/* 
Dominio 3810 - Informação 
SP - Qt. solicitações período 
*/
 
 
/* 
Dominio 3809 - Dimensão 
AM - Agente motivador 
FR - Forma registro 
OS - Origem solicitação 
VD - Vendendor 
*/
 
 
/*Dominio 3807 - Origem 
S - Solicitação de lead 
*/
 
 
/*Dominio - 3836 - Evolução 
M - Mês 
O - Origem soliticação 
*/
 
 
ds_evolucao_w		varchar(20);
cd_dimensao_w		varchar(10);
ds_dimensao_w		varchar(300);
qt_registros_w		bigint;
dt_referencia_w		timestamp;
ie_origem_solicitacao_w	varchar(10);
dt_inicial_w		timestamp;
dt_final_w		timestamp;

C01 CURSOR FOR 
	SELECT	to_char(dt_mes) 
	from	mes_v 
	where	dt_mes between dt_inicial_p and dt_final_p 
	and	ie_evolucao_p	= 'M' 
	
union
 
	SELECT	to_char(nr_sequencia) 
	from	pls_origem_solicitacao 
	where	ie_situacao		= 'A' 
	and	ie_evolucao_p		= 'O' 
	and	cd_estabelecimento 	= cd_estabelecimento_p;
	
C02 CURSOR FOR 
	SELECT	to_char(nr_sequencia), 
		ds_agente_motivador 
	from	pls_agente_motivador 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_dimensao_p		= 'AM' 
	
union
 
	SELECT	vl_dominio, 
		ds_valor_dominio 
	from	valor_dominio 
	where	ie_dimensao_p		= 'FR' 
	and	cd_dominio		= 2471 
	
union
 
	select to_char(nr_sequencia), 
		ds_origem 
	from  pls_origem_solicitacao 
	where	ie_situacao		= 'A' 
	and	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_dimensao_p		= 'OS' 
	
union
 
	select	to_char(nr_sequencia), 
		substr(obter_nome_pf_pj(cd_pessoa_fisica,cd_cgc),1,200)	 
	from	pls_vendedor 
	where	ie_situacao		= 'A' 
	and	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_dimensao_p		= 'VD';
	

BEGIN 
 
delete	FROM w_pls_resumo_comercial;
 
dt_inicial_w	:= trunc(dt_inicial_p,'dd');
dt_final_w	:= fim_dia(dt_final_p);
 
if (ie_origem_informacao_p = 'S') then 
	if (ie_informacao_p = 'SP') then 
		open C01;
		loop 
		fetch C01 into	 
			ds_evolucao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			open C02;
			loop 
			fetch C02 into	 
				cd_dimensao_w, 
				ds_dimensao_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				qt_registros_w	:= 0;
				--Inserir os campos nos meses 
				if (ie_evolucao_p	= 'M') then 
					if (ie_dimensao_p	= 'AM') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	pls_solicitacao_comercial 
						where	nr_seq_agente_motivador	= (cd_dimensao_w)::numeric  
						and	cd_estabelecimento	= cd_estabelecimento_p 
						and	trunc(dt_solicitacao,'Month')	= to_date(ds_evolucao_w);
					elsif (ie_dimensao_p	= 'FR') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	pls_solicitacao_comercial 
						where	ie_origem_solicitacao	= cd_dimensao_w 
						and	cd_estabelecimento	= cd_estabelecimento_p 
						and	trunc(dt_solicitacao,'Month')	= to_date(ds_evolucao_w);
					elsif (ie_dimensao_p	= 'OS') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	pls_solicitacao_comercial 
						where	nr_acao_origem		= (cd_dimensao_w)::numeric  
						and	cd_estabelecimento	= cd_estabelecimento_p 
						and	trunc(dt_solicitacao,'Month')	= to_date(ds_evolucao_w);
					elsif (ie_dimensao_p	= 'VD') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	pls_solicitacao_comercial	a, 
							pls_solicitacao_vendedor	b 
						where	b.nr_seq_solicitacao	= a.nr_sequencia 
						and	b.nr_seq_vendedor_canal	= (cd_dimensao_w)::numeric  
						and	a.cd_estabelecimento	= cd_estabelecimento_p 
						and	trunc(a.dt_solicitacao,'Month')	= to_date(ds_evolucao_w);
					end if;
				--Inserir os campos por origem de solicitação	 
				elsif (ie_evolucao_p	= 'O') then 
					if (ie_dimensao_p	= 'AM') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	pls_solicitacao_comercial 
						where	nr_seq_agente_motivador	= (cd_dimensao_w)::numeric  
						and	cd_estabelecimento	= cd_estabelecimento_p 
						and	nr_acao_origem		= to_char(ds_evolucao_w) 
						and	trunc(dt_solicitacao,'dd') between dt_inicial_w and dt_final_w;
					elsif (ie_dimensao_p	= 'FR') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	pls_solicitacao_comercial 
						where	ie_origem_solicitacao	= cd_dimensao_w 
						and	cd_estabelecimento	= cd_estabelecimento_p 
						and	nr_acao_origem		= to_char(ds_evolucao_w) 
						and	trunc(dt_solicitacao,'dd') between dt_inicial_w and dt_final_w;
					elsif (ie_dimensao_p	= 'OS') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	pls_solicitacao_comercial 
						where	nr_acao_origem		= (cd_dimensao_w)::numeric  
						and	cd_estabelecimento	= cd_estabelecimento_p 
						and	nr_acao_origem		= to_char(ds_evolucao_w) 
						and	trunc(dt_solicitacao,'dd') between dt_inicial_w and dt_final_w;
					elsif (ie_dimensao_p	= 'VD') then 
						select	count(*) 
						into STRICT	qt_registros_w 
						from	pls_solicitacao_comercial	a, 
							pls_solicitacao_vendedor	b 
						where	b.nr_seq_solicitacao	= a.nr_sequencia 
						and	b.nr_seq_vendedor_canal	= (cd_dimensao_w)::numeric  
						and	a.cd_estabelecimento	= cd_estabelecimento_p 
						and	nr_acao_origem		= to_char(ds_evolucao_w) 
						and	trunc(dt_solicitacao,'dd') between dt_inicial_w and dt_final_w;
					end if;	
				end if;	
				 
				if (ie_evolucao_p = 'M') then 
					dt_referencia_w			:= to_date(ds_evolucao_w);
					ie_origem_solicitacao_w		:= '';
				elsif (ie_evolucao_p = 'O') then 
					dt_referencia_w			:= null;
					ie_origem_solicitacao_w		:= ds_evolucao_w;
				end if;	
					 
				insert into w_pls_resumo_comercial(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
						cd_estabelecimento,ie_origem_informacao,ie_dimensao,ie_informacao,dt_referencia, 
						qt_registros,ds_dimensao,ie_origem_solicitacao) 
				values (	nextval('w_pls_resumo_comercial_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
						cd_estabelecimento_p,ie_origem_informacao_p,cd_dimensao_w,ie_informacao_p,dt_referencia_w, 
						coalesce(qt_registros_w,0),ds_dimensao_w,ie_origem_solicitacao_w);
				 
				end;
			end loop;
			close C02;
			 
			end;
		end loop;
		close C01;
	end if;
end if;	
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_resumo_comercial ( ie_origem_informacao_p text, ie_informacao_p text, ie_dimensao_p text, ie_evolucao_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

