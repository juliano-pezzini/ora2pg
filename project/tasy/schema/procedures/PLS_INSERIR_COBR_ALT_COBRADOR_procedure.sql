-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_cobr_alt_cobrador ( nr_seq_cobranca_p cobranca.nr_sequencia%type, nr_seq_cobr_ant_p cobrador.nr_sequencia%type, nr_seq_cobr_novo_p cobrador.nr_sequencia%type, ie_commit_p text, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_cobr_ant_w	cobrador.nr_sequencia%type := nr_seq_cobr_ant_p;
ds_observacao_w		cobranca_alt_cobrador.ds_observacao%type;
nr_titulo_w		titulo_receber.nr_titulo%type;


BEGIN
if (nr_seq_cobr_novo_p IS NOT NULL AND nr_seq_cobr_novo_p::text <> '') then
	if (coalesce(nr_seq_cobr_ant_w::text, '') = '') then
		select	max(nr_seq_cobrador),
			max(nr_titulo)
		into STRICT	nr_seq_cobr_ant_w,
			nr_titulo_w
		from	cobranca
		where	nr_sequencia	= nr_seq_cobranca_p;

		if (coalesce(nr_seq_cobr_ant_w::text, '') = '') then
			select	max(nr_seq_cobrador)
			into STRICT	nr_seq_cobr_ant_w
			from	cobranca
			where	nr_sequencia	= (	SELECT	max(nr_sequencia)
							from	cobranca
							where	nr_titulo	= nr_titulo_w
							and	nr_sequencia	<> nr_seq_cobranca_p);
		end if;

		if (coalesce(nr_seq_cobr_ant_w::text, '') = '') then
			select	max(nr_seq_cobr_novo)
			into STRICT	nr_seq_cobr_ant_w
			from	cobranca_alt_cobrador
			where	nr_seq_cobranca	= nr_seq_cobranca_p;
		end if;
	end if;

	if (coalesce(nr_seq_cobr_ant_w::text, '') = '') then
		ds_observacao_w := 'Inserido novo cobrador para o inicio desta cobrança';

	elsif (nr_seq_cobr_ant_w <> nr_seq_cobr_novo_p) then
		ds_observacao_w := 'Alterado o cobrador, pois já havia uma cobrança para esta pessoa em aberto.';

	elsif (nr_seq_cobr_ant_w = nr_seq_cobr_novo_p) then
		ds_observacao_w := 'Mantido o mesmo cobrador para cobrança';
	end if;

	insert into cobranca_alt_cobrador(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_cobranca,
		dt_alteracao,
		nr_seq_cobr_ant,
		nr_seq_cobr_novo,
		ds_observacao)
	values (nextval('cobranca_alt_cobrador_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_cobranca_p,
		clock_timestamp(),
		nr_seq_cobr_ant_w,
		nr_seq_cobr_novo_p,
		ds_observacao_w);
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_cobr_alt_cobrador ( nr_seq_cobranca_p cobranca.nr_sequencia%type, nr_seq_cobr_ant_p cobrador.nr_sequencia%type, nr_seq_cobr_novo_p cobrador.nr_sequencia%type, ie_commit_p text, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

