-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_tx_qtde_mat_valor ( nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_mat_w			bigint;
nr_seq_material_w		bigint;
qt_material_w			double precision;
qt_exec_w			double precision;
nr_seq_prestador_exec_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_material_regra_w 	bigint;
ie_regra_execucao_w		varchar(1);
tx_material_w			double precision;
tx_medico_w			double precision;
tx_custo_operacional_w		double precision;
nr_seq_regra_tx_w		bigint;
vl_material_w			double precision;
vl_proc_copartic_w		double precision;
vl_medico_w			double precision;
vl_custo_operacional_w		double precision;
vl_materiais_w			double precision;
nr_seq_estrut_mat_w		bigint;
vl_proc_unit_w			double precision;
vl_proc_copartic_unit_w		double precision;
vl_medico_unit_w		double precision;
vl_co_unit_w			double precision;
vl_mat_unit_w			double precision;
dt_conta_w			timestamp;
nr_seq_taxa_item_w		bigint;
nr_seq_estrut_regra_w		bigint;
ie_estrut_mat_w			varchar(1);
nr_seq_regra_ww			bigint;
ie_regra_execucao_ww		varchar(3);

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_material,
		coalesce(a.qt_material_imp,0),
		coalesce(a.vl_material,0) vl_material
	from	pls_conta_mat	a
	where	a.nr_seq_conta		= nr_seq_conta_p
	and	coalesce(nr_seq_conta_mat_p::text, '') = ''
	
union all

	SELECT	a.nr_sequencia,
		a.nr_seq_material,
		coalesce(a.qt_material_imp,0),
		coalesce(a.vl_material,0) vl_material
	from	pls_conta_mat	a
	where	a.nr_sequencia	= nr_seq_conta_mat_p
	order by vl_material desc;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_regra_execucao,
		a.nr_seq_material,
		a.nr_seq_estrutura_mat
	from	pls_regra_preco_qtde_mat	a
	where	a.ie_situacao		= 'A'
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador 	= coalesce(nr_seq_prestador_exec_w,0)))
	and	coalesce(a.nr_seq_material, coalesce(nr_seq_material_w,0))	= coalesce(nr_seq_material_w,0)
	order by coalesce(a.nr_seq_material,0);

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_taxa_item
	from	pls_regra_preco_tx_mat	a
	where	a.ie_situacao	= 'A'
	and	a.nr_seq_regra	= nr_seq_regra_w
	and	qt_exec_w between a.qt_exec_min and coalesce(a.qt_exec_max, qt_exec_w);

BEGIN

/* Obter dados da conta */

select	nr_seq_prestador_exec,
	coalesce(dt_emissao, coalesce(dt_autorizacao, coalesce(dt_entrada, clock_timestamp())))
into STRICT	nr_seq_prestador_exec_w,
	dt_conta_w
from	pls_conta
where	nr_sequencia	= nr_seq_conta_p;
open C01;
loop
fetch C01 into
	nr_seq_mat_w,
	nr_seq_material_w,
	qt_material_w,
	vl_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	nr_seq_regra_w	:= 0;
	/*Busca estrutura do material*/

	select	max(nr_seq_estrut_mat)
	into STRICT	nr_seq_estrut_mat_w
	from	pls_material
	where	nr_sequencia = nr_seq_material_w;
	/* Obter a regra do procedimento */

	open C02;
	loop
	fetch C02 into
		nr_seq_regra_ww,
		ie_regra_execucao_ww,
		nr_seq_material_regra_w,
		nr_seq_estrut_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ie_estrut_mat_w	:= 'S';
		if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
			ie_estrut_mat_w	:= pls_obter_se_mat_estrutura(nr_seq_material_w, nr_seq_estrut_regra_w);
		end if;

		if (ie_estrut_mat_w = 'S') then
			nr_seq_regra_w		:= nr_seq_regra_ww;
			ie_regra_execucao_w	:= ie_regra_execucao_ww;
		end if;

		end;
	end loop;
	close C02;
	/* Se encontrou regra para o procedimento */

	if (coalesce(nr_seq_regra_w,0) > 0) then
		if (ie_regra_execucao_w 	= 'C') then
			select 	coalesce(sum(a.qt_material_imp),0)
			into STRICT	qt_exec_w
			from	pls_conta_mat	a
			where	a.nr_seq_conta			= nr_seq_conta_p
			and	a.nr_seq_regra_qtde_exec	= nr_seq_regra_w;
		elsif (ie_regra_execucao_w 	= 'D') then
			select 	coalesce(sum(a.qt_material_imp),0)
			into STRICT	qt_exec_w
			from	pls_conta_mat	a
			where	a.nr_seq_conta			= nr_seq_conta_p
			and	a.nr_seq_regra_qtde_exec	= nr_seq_regra_w
			and	a.dt_atendimento between trunc(dt_conta_w, 'dd') and trunc(dt_conta_w, 'dd')  + 86399/86400;
		end if;
		/* Somar o total jÃ¡ existente com o procedimento atual do cursor */

		qt_exec_w	:= qt_exec_w + 1;
		if (qt_material_w	= 1) then
			open C03;
			loop
			fetch C03 into
				nr_seq_regra_tx_w,
				nr_seq_taxa_item_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
			end loop;
			close C03;

			tx_material_w	:= pls_obter_taxa_item(nr_seq_taxa_item_w);
			vl_material_w	:= dividir((tx_material_w * vl_material_w),100);
		else
			vl_proc_unit_w			:= dividir(vl_material_w,qt_material_w);
			vl_material_w	:= 0;

			for i in 1..qt_material_w loop
				begin
				open C03;
				loop
				fetch C03 into
					nr_seq_regra_tx_w,
					nr_seq_taxa_item_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
				end loop;
				close C03;
				tx_material_w	:= pls_obter_taxa_item(nr_seq_taxa_item_w);
				if (coalesce(nr_seq_regra_tx_w,0) > 0) then
					vl_material_w	:= vl_material_w + dividir((tx_material_w * vl_proc_unit_w),100);
				end if;

				qt_exec_w	:= qt_exec_w + 1;
				end;
			end loop;
		end if;
		if (coalesce(nr_seq_regra_tx_w,0) > 0) then
			update	pls_conta_mat
			set	vl_material		= vl_material_w,
				nr_seq_regra_qtde_exec 	= nr_seq_regra_w
			where	nr_sequencia		= nr_seq_mat_w;
		end if;
	end if;
	end;
end loop;
close C01;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_tx_qtde_mat_valor ( nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

