-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_exame_lab_convenio (nr_seq_exame_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, ie_tipo_convenio_p bigint, nr_seq_proc_interno_p bigint, cd_material_exame_p text, cd_plano_convenio_p text, cd_setor_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, ds_erro_p INOUT text, nr_seq_proc_interno_aux_p INOUT bigint, dt_conta_p timestamp default null) AS $body$
DECLARE

		
cd_procedimento_w		bigint;
cd_procedimento_aux_w		bigint;
cd_setor_exclusivo_w		integer;
ie_origem_proced_w		bigint;
ie_origem_proced_aux_w		bigint;
nr_seq_convenio_w		bigint;
ie_autorizacao_w			varchar(002);
nr_seq_proc_interno_w		bigint;
ie_origem_proced_sus_w		bigint;
ds_erro_w			varchar(255);
ie_prioridade_edicao_w		varchar(01);	
ie_prioridade_ajuste_proc_w		varchar(01);
cd_edicao_amb_w			bigint;

vl_ch_honorarios_w			double precision	:= 1;
vl_ch_custo_oper_w		double precision	:= 1;
vl_m2_filme_w			double precision	:= 0;
tx_ajuste_geral_w			double precision	:= 1;
dt_inicio_vigencia_w		timestamp;
cd_proc_exame_w			bigint;
ie_origem_proc_exame_w		bigint;
nr_seq_exame_proc_w		bigint;
nr_seq_cbhpm_edicao_w		bigint;
ie_tipo_convenio_w		smallint;
ie_utiliza_proc_interno_w	varchar(01);
ie_origem_proced_cursor_w	bigint;
ie_origem_proc_filtro_w		bigint;

vl_retorno_w			double precision;
cd_edicao_ajuste_w		integer;
ie_preco_informado_w		varchar(10);
ie_glosa_w			varchar(10);
ie_atend_retorno_w		varchar(01);
ie_autor_particular_w		varchar(1);
cd_convenio_glosa_ww		integer;
cd_categoria_glosa_ww		varchar(10);
nr_seq_ajuste_proc_ww		bigint;
cd_setor_prescricao_w		integer := null;
nr_seq_material_w		bigint := 0;
dt_vigencia_w			timestamp;
ie_data_exame_lab_w		varchar(1);
ie_exame_lab_conv_w		varchar(1);
ie_prioridade_conv_w		bigint;
dt_inicio_vig_conv_w		timestamp;
cd_edicao_amb_prior_w		integer;
ie_encontrou_edicao_w		varchar(1);
qt_proc_edicao_w		bigint;
ie_regra_prior_edicao_w		varchar(3);
nr_seq_proc_conv_w		bigint;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	exame_lab_convenio
	where	coalesce(cd_convenio, cd_convenio_p)		= cd_convenio_p
	and	coalesce(cd_categoria, cd_categoria_p)	= cd_categoria_p
	and	coalesce(cd_edicao_amb, coalesce(cd_edicao_amb_w,0)) = coalesce(cd_edicao_amb_w,0)
	and	coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p,0)) = coalesce(ie_tipo_atendimento_p,0)
	and	coalesce(nr_seq_material, coalesce(nr_seq_material_w,0))	= coalesce(nr_seq_material_w,0)
	and	nr_seq_exame				= nr_seq_exame_p
	and	((((ie_origem_proced_sus_w	not in (2,3))  or (ie_origem_proced = ie_origem_proced_sus_w)) and (coalesce(ie_origem_proced_regra::text, '') = '')) or /*Elemar - 11/01/06 - OS27412*/
		(ie_origem_proced_regra IS NOT NULL AND ie_origem_proced_regra::text <> '' AND ie_origem_proced_regra = ie_origem_proced_cursor_w))		
	and	coalesce(dt_inicio_vigencia,dt_vigencia_w) <= dt_vigencia_w
	and	coalesce(dt_fim_vigencia,dt_vigencia_w) 	>= dt_vigencia_w
	and	coalesce(ie_situacao,'A') 		= 'A'
	and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w) = ie_tipo_convenio_w
	and 	((ie_origem_proc_filtro = ie_origem_proc_filtro_w) or (coalesce(ie_origem_proc_filtro::text, '') = ''))
	and	coalesce(cd_plano_convenio, coalesce(cd_plano_convenio_p,0))	= coalesce(cd_plano_convenio_p,0)
	order by coalesce(cd_categoria,0),  coalesce(cd_convenio, 0), coalesce(cd_edicao_amb, 0),  coalesce(dt_inicio_vigencia,dt_vigencia_w), coalesce(nr_seq_material,0);
	
c02 CURSOR FOR
	SELECT	x.ie_prioridade,
		x.dt_inicio_vigencia,
		x.cd_edicao_amb
	from	edicao_amb y,
		convenio_amb x
	where	x.cd_edicao_amb = y.cd_edicao_amb
	and	x.cd_estabelecimento = cd_estabelecimento_p
	and	x.cd_convenio = cd_convenio_p
	and	((x.cd_categoria = coalesce(cd_categoria_p,cd_categoria)) or (coalesce(cd_categoria_p,'0') = '0'))
	and	coalesce(x.ie_situacao,'A')	= 'A'
	and	ie_regra_prior_edicao_w	= 'DT'
	and	(x.dt_inicio_vigencia =	(SELECT	max(dt_inicio_vigencia)
					from	convenio_amb a
					where	a.cd_estabelecimento = cd_estabelecimento_p
					and	a.cd_convenio = cd_convenio_p
					and	((a.cd_categoria = coalesce(cd_categoria_p,cd_categoria)) or (coalesce(cd_categoria_p,'0') = '0'))
					and	coalesce(a.ie_situacao,'A')= 'A'
					and	dt_vigencia_w between a.dt_inicio_vigencia and coalesce(a.dt_final_vigencia,dt_vigencia_w)))
	
union

	select 	x.ie_prioridade,
		x.dt_inicio_vigencia,
		x.cd_edicao_amb
	from	edicao_amb y,
		convenio_amb x
	where	x.cd_edicao_amb = y.cd_edicao_amb
	and	x.cd_estabelecimento = cd_estabelecimento_p
	and	x.cd_convenio = cd_convenio_p
	and	((x.cd_categoria = coalesce(cd_categoria_p,cd_categoria)) or (coalesce(cd_categoria_p,'0') = '0'))
	and 	coalesce(x.ie_situacao,'A')	= 'A'
	and	ie_regra_prior_edicao_w	= 'PR'
	and	((coalesce(x.dt_final_vigencia::text, '') = '') or (dt_vigencia_w <= x.dt_final_vigencia))
	order by	1, 2;


BEGIN

dt_vigencia_w	:= clock_timestamp();

if (cd_material_exame_p IS NOT NULL AND cd_material_exame_p::text <> '') then

	select	max(nr_sequencia)
	into STRICT	nr_seq_material_w
	from	material_exame_lab a
	where	cd_material_exame = cd_material_exame_p;

end if;
	
ie_origem_proced_sus_w		:= obter_origem_proced_cat(cd_estabelecimento_p, ie_tipo_atendimento_p, ie_tipo_convenio_p, cd_convenio_p, cd_categoria_p);
					
/* Elemar - 08/12/04 - Inclui a linha acima
if	(ie_tipo_convenio_p	= 3) then
	begin
	If	(ie_tipo_atendimento_p	= 1) then
		ie_origem_proced_sus_w		:= 2;
	else		
		ie_origem_proced_sus_w		:= 3;
	end if;
	end;
end if;*/
Select	coalesce(max(ie_proc_interno),'N')
into STRICT	ie_utiliza_proc_interno_w
from	lab_parametro;

cd_setor_p			:= null;
cd_procedimento_p		:= null;
ie_origem_proced_p		:= null;
ds_erro_p			:= null;

select	coalesce(max(ie_data_exame_lab),'N')
into STRICT	ie_data_exame_lab_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_data_exame_lab_w = 'S') then
	dt_vigencia_w	:= PKG_DATE_UTILS.start_of(coalesce(dt_conta_p, clock_timestamp()), 'dd', 0);
end if;


if (ie_utiliza_proc_interno_w	= 'S') and (coalesce(nr_seq_proc_interno_p,0)> 0) then
	
	SELECT * FROM Obter_Proc_Tab_Interno_Conv2(nr_seq_proc_interno_p, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, null, dt_vigencia_w, null, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_p) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
					
	select	max(b.cd_setor_exclusivo)
	into STRICT	cd_setor_exclusivo_w
	from	procedimento b
	where	b.cd_procedimento	= cd_procedimento_w
	and	b.ie_origem_proced	= ie_origem_proced_w;
	
	nr_seq_proc_interno_w	:= nr_seq_proc_interno_p;
	
else

	select  max(a.cd_procedimento),
        max(a.ie_origem_proced),
        max(b.cd_setor_exclusivo),
        max(a.nr_seq_proc_interno)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		cd_setor_exclusivo_w,
		nr_seq_proc_interno_w
	from	procedimento b,
		exame_laboratorio a
	where	a.nr_seq_exame		= nr_seq_exame_p
	and	a.cd_procedimento	= b.cd_procedimento
	and	a.ie_origem_proced	= b.ie_origem_proced;
	
	if (nr_seq_proc_interno_w > 0) then
		SELECT * FROM Obter_Proc_Tab_Interno_Conv2(nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, null, dt_vigencia_w, null, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_p) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	end if;
	
end if;

	
if (cd_procedimento_w	> 0) and
	((ie_utiliza_proc_interno_w	<> 'S') or (coalesce(nr_seq_proc_interno_p,0)= 0)) then
	begin
	
	select 	max(ie_tipo_convenio)
	into STRICT	ie_tipo_convenio_w
	from	convenio
	where	cd_convenio = cd_convenio_p;

	select	coalesce(max(ie_prioridade_edicao_amb), 'N'),
		coalesce(max(IE_PRIORIDADE_AJUSTE_PROC), 'N'),
		coalesce(max(ie_exame_lab_conv), 'N')
	into STRICT	ie_prioridade_edicao_w,
		ie_prioridade_ajuste_proc_w,
		ie_exame_lab_conv_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_p;
	
	select	coalesce(max(ie_regra_prior_edicao), 'DT')
	into STRICT	ie_regra_prior_edicao_w
	from	convenio_estabelecimento
	where	cd_estabelecimento = cd_estabelecimento_p
	and	cd_convenio = cd_convenio_p;

	if (ie_prioridade_edicao_w = 'N') then	
	
		select	coalesce(max(cd_edicao_amb),0)
		into STRICT	cd_edicao_amb_w
		from convenio_amb
		where (cd_estabelecimento     = cd_estabelecimento_p)
		  and (cd_convenio            = cd_convenio_p)
	       	  and (cd_categoria	      = cd_categoria_p)
		  and (coalesce(ie_situacao,'A')   = 'A')
		  and (dt_inicio_vigencia     = (SELECT max(dt_inicio_vigencia)
					         from convenio_amb a
						 where (a.cd_estabelecimento  = cd_estabelecimento_p)
					           and (a.cd_convenio         = cd_convenio_p)
					           and (a.cd_categoria        = cd_categoria_p)
						   and (coalesce(a.ie_situacao,'A')= 'A')
					           and (a.dt_inicio_vigencia <=  dt_vigencia_w)));
						
	else
	
		if (ie_exame_lab_conv_w = 'S') then
			
			ie_encontrou_edicao_w	:= 'N';
		
			open C02;
			loop
			fetch C02 into
				ie_prioridade_conv_w,
				dt_inicio_vig_conv_w,
				cd_edicao_amb_prior_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				
				select	count(*)
				into STRICT	qt_proc_edicao_w
				from	exame_lab_convenio
				where	nr_seq_exame = nr_seq_exame_p
				and	cd_edicao_amb = cd_edicao_amb_prior_w;
				
				if (qt_proc_edicao_w > 0) and (ie_encontrou_edicao_w = 'N') then
					ie_encontrou_edicao_w	:= 'S';
					
					select	max(nr_sequencia)
					into STRICT	nr_seq_proc_conv_w
					from	exame_lab_convenio
					where	nr_seq_exame = nr_seq_exame_p
					and	cd_edicao_amb = cd_edicao_amb_prior_w;
					
					select	coalesce(max(cd_procedimento),cd_procedimento_w),
						coalesce(max(ie_origem_proced),ie_origem_proced_w)
					into STRICT	cd_procedimento_w,
						ie_origem_proced_w
					from	exame_lab_convenio
					where	nr_sequencia = nr_seq_proc_conv_w
					and	nr_seq_exame = nr_seq_exame_p;
				end if;
				
				end;
			end loop;
			close C02;
		
		end if;
	
		SELECT * FROM obter_edicao_proc_conv(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_vigencia_w, cd_procedimento_w, cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
			
	end if;	
	
	begin
	SELECT * FROM obter_regra_ajuste_proc(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_procedimento_w, ie_origem_proced_w, null, dt_vigencia_w, 0, 0, 0, null, 0, 0, nr_seq_exame_p, null, null, null, null, null, null, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_preco_informado_w, ie_glosa_w, vl_retorno_w, vl_retorno_w, cd_edicao_ajuste_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_atend_retorno_w, 0, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, null, null, null, null, null, null, null, null, vl_retorno_w, null, cd_setor_prescricao_w, null, null, null, null, null, null, null, null) INTO STRICT vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_preco_informado_w, ie_glosa_w, vl_retorno_w, vl_retorno_w, cd_edicao_ajuste_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, vl_retorno_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, vl_retorno_w;	
	exception
	when others then
		cd_edicao_ajuste_w	:= 0;
	end;
	
	if (cd_edicao_ajuste_w IS NOT NULL AND cd_edicao_ajuste_w::text <> '') and (cd_edicao_ajuste_w <> 0) then
		cd_edicao_amb_w		:= cd_edicao_ajuste_w;
	end if;
	
	select	max(ie_origem_proced)
	into STRICT	ie_origem_proced_cursor_w
	from	edicao_amb
	where	cd_edicao_amb	= cd_edicao_amb_w;	
	
	if (coalesce(ie_origem_proced_cursor_w::text, '') = '') then
		ie_origem_proced_cursor_w := ie_origem_proced_sus_w;
	end if;
	
	ie_origem_proc_filtro_w:= Obter_Origem_Proced_Cat( cd_estabelecimento_p, ie_tipo_atendimento_p, ie_tipo_convenio_p, cd_convenio_p, cd_categoria_p);

	open c01;
	loop
		fetch c01 into nr_seq_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
	end loop;
	close c01;

	if (nr_seq_convenio_w IS NOT NULL AND nr_seq_convenio_w::text <> '') then
		begin
		
		select	a.cd_procedimento,
			a.ie_origem_proced,
			a.ie_autorizacao,
			b.cd_setor_exclusivo,
			null
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			ie_autorizacao_w,
			cd_setor_exclusivo_w,
			nr_seq_proc_interno_w
		from	procedimento b,
			exame_lab_convenio a
		where	a.nr_seq_exame		= nr_seq_exame_p
		and	a.cd_procedimento	= b.cd_procedimento
		and	a.ie_origem_proced	= b.ie_origem_proced
		and	a.nr_sequencia		= nr_seq_convenio_w;
		
		if (ie_autorizacao_w = 'NL') then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281327);
		elsif (ie_autorizacao_w = 'LG') then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281328);
		elsif (ie_autorizacao_w = 'LS') then
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281329);
		end if;
		
		end;
	end if;
	end;
	
elsif	((ie_utiliza_proc_interno_w	<> 'S') or (coalesce(nr_seq_proc_interno_p,0)= 0)) then
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281330);
end if;

cd_setor_p		:= cd_setor_exclusivo_w;
cd_procedimento_p	:= cd_procedimento_w;
ie_origem_proced_p	:= ie_origem_proced_w;
ds_erro_p		:= ds_erro_w;
nr_seq_proc_interno_aux_p	:= nr_seq_proc_interno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_exame_lab_convenio (nr_seq_exame_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, ie_tipo_convenio_p bigint, nr_seq_proc_interno_p bigint, cd_material_exame_p text, cd_plano_convenio_p text, cd_setor_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, ds_erro_p INOUT text, nr_seq_proc_interno_aux_p INOUT bigint, dt_conta_p timestamp default null) FROM PUBLIC;

