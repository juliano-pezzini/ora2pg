-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dar_gerar_tab_data_model (nr_sequencia_p dar_tables_control.nr_sequencia%type, nm_usuario_p text) AS $body$
DECLARE

   c1 CURSOR FOR
      SELECT a.nr_sequencia,
             a.ds_sql, 
             a.ie_manual
        from dar_tables_control a
       where a.nr_sequencia = nr_sequencia_p;

   r1 c1%rowtype;

   -- Variaveis internas
   ds_comando_w     varchar(255);
   nm_tabela_w      varchar(23);
   ds_sql_1_w       varchar(32767);
   ds_sql_2_w       varchar(32767);
   ds_sql_3_w       varchar(32767);
   ds_sql_4_w       varchar(32767);
   qt_tamanho_sql_w bigint;
   ds_erro_w     dar_consist_sql.ds_consistencia%type;


BEGIN

   -- Abre cursor da tabela em questao
   open c1;
   loop
      fetch c1
         into r1;
      EXIT WHEN NOT FOUND; /* apply on c1 */

      ds_sql_1_w := '';
      ds_sql_2_w := '';
      ds_sql_3_w := '';
      ds_sql_4_w := '';

      -- Determina o nome da tabela W
      nm_tabela_w := trim(both 'dar_datamodel_' || r1.nr_sequencia || '_w ');

      -- String com comando de selecao da tabela
      ds_comando_w := 'select* from ' || nm_tabela_w;
      begin
         -- execucao do script de criacao da tabela         
         EXECUTE ds_comando_w;

         begin
            --Se executou sem erros, a tabela ja existe, deve ser excluida
            ds_comando_w := 'drop table ' || nm_tabela_w;
            EXECUTE ds_comando_w;
         exception
            when others then
               null;
         end;

      exception
         when others then
            -- Caso algum erro na criacao da tabela....
            null;
      end;

      -- String com comando de criacao da tabela
      ds_comando_w := 'create table ' || nm_tabela_w || ' as ';

      -- Tamanho em caracteres do sql gerado
      qt_tamanho_sql_w := coalesce(octet_length(r1.ds_sql), 0);

      -- Primeira parte da string
      ds_sql_1_w := substr(r1.ds_sql, 32767, 1);

      -- Segunda parte da string
      if (qt_tamanho_sql_w > 32767) then
         --
         ds_sql_2_w := substr(r1.ds_sql, 32767, 32768);
      end if;
      -- Terceira parte da string
      if (qt_tamanho_sql_w > 65534) then
         -- 
         ds_sql_3_w := substr(r1.ds_sql, 32767, 65535);
      end if;
      -- Quarta parte da string
      if (qt_tamanho_sql_w > 98302) then
         --
         ds_sql_4_w := substr(r1.ds_sql, 32767, 98303);
      end if;

      -- Bloco de exception
      begin
         -- execucao do script de criacao da tabela
         EXECUTE ds_comando_w || ds_sql_1_w || ds_sql_2_w ||
                           ds_sql_3_w || ds_sql_4_w;
         -- Atualicao de registro com o nome da tabela
         update dar_tables_control
            set nm_tabela      = nm_tabela_w,
                dt_atualizacao = clock_timestamp(),
                nm_usuario     = nm_usuario_p
          where nr_sequencia = nr_sequencia_p;
      exception
         when others then

            if (coalesce(r1.ie_manual,'N') = 'S') then
               -- Atualicao de registro com o nome da tabela
               update dar_tables_control
                  set ie_inconsistencia = 'S'
                where nr_sequencia = nr_sequencia_p;
            end if;

            -- Caso algum erro na criacao da tabela....
            ds_erro_w	:= substr(obter_desc_expressao(1032844) || chr(13) || chr(10) ||
                                             ds_comando_w || ds_sql_1_w || ds_sql_2_w || ds_sql_3_w || ds_sql_4_w || chr(13) || chr(10) || 
                                             sqlerrm(SQLSTATE), 4000, 1);

            insert into dar_consist_sql(nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                nr_seq_tab_controle,
                ds_consistencia)
            values (nextval('dar_consist_sql_seq'),
                clock_timestamp(),
                wheb_usuario_pck.get_nm_usuario,
                nr_sequencia_p,
                ds_erro_w);
      end;

   end loop;
   close c1;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dar_gerar_tab_data_model (nr_sequencia_p dar_tables_control.nr_sequencia%type, nm_usuario_p text) FROM PUBLIC;

