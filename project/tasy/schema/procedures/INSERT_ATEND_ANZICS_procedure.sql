-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insert_atend_anzics (NR_SEQUENCIA_P NOTIFICACAO_SINAN.NR_SEQUENCIA%TYPE, IE_FORCE_UPDATE_P text DEFAULT NULL) AS $body$
DECLARE

  NR_SEQUENCIA_W                ATEND_ANZICS.NR_SEQUENCIA%TYPE;
  NR_SEQ_NEXT_VAL_W             ATEND_ANZICS.NR_SEQUENCIA%TYPE;
  NR_ATENDIMENTO_W              NOTIFICACAO_SINAN.NR_ATENDIMENTO%TYPE;
  NR_SEQ_FORMULARIO_CLINICO_W   CIH_DOENCA_COMPULSORIA.NR_SEQ_FORMULARIO_CLINICO%TYPE;
  DT_NOTIFICACAO_W              NOTIFICACAO_SINAN.DT_NOTIFICACAO%TYPE;
  CD_PESSOA_FISICA_W            PESSOA_FISICA.CD_PESSOA_FISICA%TYPE;
  DS_RESULT_W            	      varchar(4000);
  NR_RESULT_W             	    double precision;
  DT_RESULT_W             	    timestamp;
  DS_SQL_W                      varchar(4000);
  DS_PARAMETERS_W			          varchar(4000);
  DS_SEPARATOR_W			          varchar(255)	:= ';';
  IE_EXISTS_W                   bigint;
  DS_ERROR_W			              varchar(4000);

  C01 CURSOR FOR
    SELECT A.NR_SEQUENCIA,
		       A.DS_SQL,
		       A.IE_FORMAT,
		       A.CD_ITEM
    FROM 	 ANZICS_ITEM A,
		       ANZICS_GROUP B,
           ATEND_ANZICS C
    WHERE  A.NR_SEQ_GROUP          = B.NR_SEQUENCIA
    AND 	 B.NR_SEQ_ANZICS_VERSION = NR_SEQ_FORMULARIO_CLINICO_W;

BEGIN
  BEGIN
    SELECT  MAX(N.NR_ATENDIMENTO) NR_ATENDIMENTO,
            MAX(C.NR_SEQ_FORMULARIO_CLINICO) NR_SEQ_FORMULARIO_CLINICO,
            MAX(N.DT_NOTIFICACAO) DT_NOTIFICACAO
    INTO STRICT    NR_ATENDIMENTO_W,
            NR_SEQ_FORMULARIO_CLINICO_W,
            DT_NOTIFICACAO_W
    FROM    NOTIFICACAO_SINAN N,
            CIH_DOENCA_COMPULSORIA C
    WHERE   C.NR_SEQUENCIA = N.NR_SEQ_DOENCA_COMPULSORIA
    AND     N.NR_SEQUENCIA = NR_SEQUENCIA_P
    AND     (C.CD_DOENCA_CID IS NOT NULL AND C.CD_DOENCA_CID::text <> '')
    AND     (C.NR_SEQ_FORMULARIO_CLINICO IS NOT NULL AND C.NR_SEQ_FORMULARIO_CLINICO::text <> '');
  EXCEPTION
    WHEN no_data_found THEN
      NR_ATENDIMENTO_W := NULL;
  END;

  IF (NR_ATENDIMENTO_W IS NOT NULL AND NR_ATENDIMENTO_W::text <> '') THEN
    SELECT OBTER_PESSOA_ATENDIMENTO(NR_ATENDIMENTO_W, 'C')
    INTO STRICT   CD_PESSOA_FISICA_W
;

    SELECT  SINAN_GET_ATEND_ANZICS(NR_SEQUENCIA_P)
    INTO STRICT    NR_SEQUENCIA_W
;

    IF (NR_SEQUENCIA_W = 0) THEN
      SELECT nextval('atend_anzics_seq')
      INTO STRICT   NR_SEQ_NEXT_VAL_W 
;

      INSERT INTO ATEND_ANZICS(
                                NR_SEQUENCIA,
                                DT_ATUALIZACAO,
                                NM_USUARIO,
                                DT_ATUALIZACAO_NREC,
                                NM_USUARIO_NREC,
                                NR_ATENDIMENTO,
                                IE_SITUACAO,
                                NR_SEQ_ANZICS,
                                DT_GENERATE
                              ) VALUES (
                                NR_SEQ_NEXT_VAL_W,
                                clock_timestamp(),
                                WHEB_USUARIO_PCK.GET_NM_USUARIO,
                                clock_timestamp(),
                                WHEB_USUARIO_PCK.GET_NM_USUARIO,
                                NR_ATENDIMENTO_W,
                                'A',
                                NR_SEQ_FORMULARIO_CLINICO_W,
                                DT_NOTIFICACAO_W
                              );
    END IF;

    DS_PARAMETERS_W	:= 'NR_ATENDIMENTO='||NR_ATENDIMENTO_W||DS_SEPARATOR_W;
    DS_PARAMETERS_W	:= DS_PARAMETERS_W||'CD_PESSOA_FISICA='||CD_PESSOA_FISICA_W||DS_SEPARATOR_W;

    FOR R_C01 IN C01 LOOP
      BEGIN
        NR_RESULT_W := NULL;
        DT_RESULT_W := NULL;
        DS_RESULT_W := NULL;

        IF (R_C01.DS_SQL IS NOT NULL AND R_C01.DS_SQL::text <> '') THEN
          DS_SQL_W	:= 'select	( '||R_C01.DS_SQL||' ) from dual ';

          BEGIN
            IF (R_C01.IE_FORMAT = 'N') THEN -- Numeric  
              NR_RESULT_W	:= ANZICS_PCK.GET_SQL_NUMBER(DS_SQL_W, DS_PARAMETERS_W);
            ELSIF (R_C01.IE_FORMAT = 'D') THEN -- Date
              DT_RESULT_W := ANZICS_PCK.GET_SQL_DATE(DS_SQL_W, DS_PARAMETERS_W);
            ELSE -- Varchar2
              DS_RESULT_W := ANZICS_PCK.GET_SQL_VARCHAR(DS_SQL_W, DS_PARAMETERS_W);
            END IF;

          SELECT CASE
            WHEN EXISTS (SELECT 1
                        FROM   ATEND_ANZICS_RESULT
                        WHERE  NR_SEQ_ATEND_ANZICS = NR_SEQ_NEXT_VAL_W
                        AND    NR_SEQ_ANZICS_ITEM  = R_C01.NR_SEQUENCIA
                        AND ((QT_VALUE IS NOT NULL AND QT_VALUE::text <> '') OR (DS_VALUE IS NOT NULL AND DS_VALUE::text <> '') OR (DT_VALUE IS NOT NULL AND DT_VALUE::text <> ''))) THEN 1
              ELSE 0
            END INTO STRICT IE_EXISTS_W
;

          IF ((IE_EXISTS_W = 0 OR IE_FORCE_UPDATE_P = 'S') and (DS_RESULT_W IS NOT NULL AND DS_RESULT_W::text <> '') OR (DT_RESULT_W IS NOT NULL AND DT_RESULT_W::text <> '') OR (NR_RESULT_W IS NOT NULL AND NR_RESULT_W::text <> '')) THEN

            CALL UPDATE_ANZICS_ITEM(NR_SEQ_NEXT_VAL_W,	
                               R_C01.NR_SEQUENCIA,
                               NR_RESULT_W,
                               DS_RESULT_W,
                               DT_RESULT_W,
                               WHEB_USUARIO_PCK.GET_NM_USUARIO);
          END IF;
          EXCEPTION
            WHEN no_data_found THEN
              DS_ERROR_W := SUBSTR('NR_ATENDIMENTO='|| NR_ATENDIMENTO_W ||';NR_SEQUENCIA='|| R_C01.NR_SEQUENCIA, 1, 2000);
              DS_ERROR_W := SUBSTR(DS_ERROR_W || ';DS_ERROR='|| SQLERRM, 1, 2000);
              CALL GRAVAR_LOG_TASY(21058, DS_ERROR_W, WHEB_USUARIO_PCK.GET_NM_USUARIO);
          END;
        END IF;
      END;
    END LOOP;
    COMMIT;
  END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insert_atend_anzics (NR_SEQUENCIA_P NOTIFICACAO_SINAN.NR_SEQUENCIA%TYPE, IE_FORCE_UPDATE_P text DEFAULT NULL) FROM PUBLIC;

