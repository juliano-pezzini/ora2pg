-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_escala_nih ((nr_sequencia_p bigint, nm_usuario_p text) is nr_atendimento_w bigint) RETURNS varchar AS $body$
DECLARE


	ie_retorno_w	varchar(15);
	nr_seq_result_escala_w	varchar(15);
	
BEGIN
	
	select	max(f.nr_seq_result_escala)
	into STRICT	nr_seq_result_escala_w
	from	pe_prescricao a,
		pe_prescr_item_result b,
		pe_regra_item_escala c,
		pe_regra_result_escala f
	where	a.nr_sequencia = nr_sequencia_p
	and	a.nr_sequencia = b.nr_seq_prescr
	and	b.nr_seq_item = c.nr_seq_item_sae
	and	c.nr_seq_item_escala = nr_seq_item_escala_p
	and	f.nr_seq_result_sae = b.nr_seq_result
	and	f.nr_seq_regra = c.nr_sequencia;
	
	select 	max(x.vl_result)
	into STRICT	ie_retorno_w
	from	pe_result_item x,
		pe_regra_result_escala f
	where	x.nr_sequencia = nr_seq_result_escala_w;
	
	return ie_retorno_w;
	end;
	
	function obter_descricao_escala_nih( nr_seq_item_escala_p	number) return varchar2 is

	ds_observacao_w	varchar2(80);
	nr_seq_result_escala_w	varchar2(15);
	begin
	
	select	max(b.ds_observacao)
	into STRICT	ds_observacao_w
	from	pe_prescricao a,
		pe_prescr_item_result b,
		pe_regra_item_escala c,
		pe_regra_result_escala f
	where	a.nr_sequencia = nr_sequencia_p
	and	a.nr_sequencia = b.nr_seq_prescr
	and	b.nr_seq_item = c.nr_seq_item_sae
	and	c.nr_seq_item_escala = nr_seq_item_escala_p
	and	f.nr_seq_result_sae = b.nr_seq_result
	and	f.nr_seq_regra = c.nr_sequencia;
	
	return ds_observacao_w;
	end;

begin

select	max(a.cd_prescritor),
	max(a.nr_atendimento)
into STRICT	cd_pessoa_fisica_w,
	nr_atendimento_w
from	pe_prescricao a,
	pe_prescr_item_result b
where	a.nr_sequencia = b.nr_seq_prescr
and	a.nr_sequencia = nr_sequencia_p;

select	coalesce(max('S'),'N')
into STRICT	ie_possui_registro_w
from 	pe_prescricao a,
	pe_prescr_item_result b,
	pe_regra_item_escala c,
	pe_regra_result_escala d
where	a.nr_sequencia	= b.nr_seq_prescr
and	b.nr_seq_result = d.nr_seq_result_sae
and	b.nr_seq_item	= c.nr_seq_item_sae
and	a.nr_sequencia	= nr_sequencia_p
and	(c.nr_seq_item_escala IS NOT NULL AND c.nr_seq_item_escala::text <> '')
and 	c.ie_escala = 9;

if (ie_possui_registro_w = 'S') then
	begin
	
	ie_nivel_consciencia_w := obter_valor_escala(186);
	ie_orientacao_w :=	obter_valor_escala(187);
	ie_comando_w := obter_valor_escala(188);
	ie_motricidade_ocular_w :=	obter_valor_escala(189);
	ie_campo_visual_w :=	obter_valor_escala(190);
	ie_paresia_facial_w  :=	obter_valor_escala(191);	
	ie_motor_ms_w := 	obter_valor_escala(192);
	ie_motor_ms_d_w :=	obter_valor_escala(193);
	ie_motor_mi_w 	:= obter_valor_escala(194);
	ie_motor_mi_d_w 	:= obter_valor_escala(195);
	ie_ataxia_w := obter_valor_escala(196);
	ie_sensibilidade_w  := obter_valor_escala(197);
	ie_linguagem_w :=	obter_valor_escala(198);
	ie_disartria_w:= obter_valor_escala(199);
	ie_negligencia_w := obter_valor_escala(200);

end;	

	insert into atend_nih(nr_sequencia,
				nr_atendimento,
				dt_atualizacao,
				nm_usuario,
				dt_avaliacao,
				ie_nivel_consciencia,
				ie_orientacao,
				ie_comando,
				ie_motricidade_ocular,
				ie_campo_visual,
				ie_paresia_facial,
				ie_motor_ms,
				ie_motor_mi,
				ie_ataxia,
				ie_sensibilidade,
				ie_linguagem,
				ie_disartria,
				ie_negligencia,
				dt_liberacao,
				ie_situacao,
				cd_pessoa_fisica,
				ie_motor_ms_d,
				ie_motor_mi_d)
	values (nextval('atend_nih_seq'),
			nr_atendimento_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			coalesce(ie_nivel_consciencia_w, 'N'),
			coalesce(ie_orientacao_w, 'N'),
			coalesce(ie_comando_w, 'N'),
			coalesce(ie_motricidade_ocular_w, 'N'),
			coalesce(ie_campo_visual_w, 'N'),
			coalesce(ie_paresia_facial_w, 'N'),
			coalesce(ie_motor_ms_w, 'N'),
			coalesce(ie_motor_mi_w, 'N'),
			coalesce(ie_ataxia_w, 'N'),
			coalesce(ie_sensibilidade_w, 'N'),
			coalesce(ie_linguagem_w, 'N'),
			coalesce(ie_disartria_w, 'N'),
			coalesce(ie_negligencia_w, 'N'),			
			clock_timestamp(),
			'A',
		   cd_pessoa_fisica_w,
		   coalesce(ie_motor_ms_d_w, 'N'),
		   coalesce(ie_motor_mi_d_w, 'N'));	
				

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_escala_nih ((nr_sequencia_p bigint, nm_usuario_p text) is nr_atendimento_w bigint) FROM PUBLIC;

