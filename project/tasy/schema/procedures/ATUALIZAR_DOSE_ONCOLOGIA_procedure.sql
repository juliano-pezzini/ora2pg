-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_dose_oncologia (nr_seq_atendimento_p bigint) AS $body$
DECLARE


qt_mg_carboplatina_w			double precision;
cd_pessoa_fisica_w				varchar(10);
ie_calcular_carboplanina_w		varchar(10);
qt_altura_cm_w                  smallint;
qt_peso_w						double precision;
qt_peso_ideal_w					double precision;
qt_dose_w						double precision;
nr_seq_material_w  				bigint;

c01 CURSOR FOR
SELECT A.qt_dose,
	   A.nr_seq_material
from paciente_atend_medic A
where A.nr_seq_atendimento = nr_seq_atendimento_p
	AND EXISTS (SELECT B.CD_UNIDADE_MED_PRINC
                FROM UNIDADE_MEDIDA B  
                WHERE A.CD_UNID_MED_DOSE = B.CD_UNIDADE_MEDIDA  
                  AND B.CD_UNIDADE_MEDIDA <> B.CD_UNIDADE_MED_PRINC  
                  AND lower(B.CD_UNIDADE_MED_SEC) = obter_unid_med_usua('kg'))
and    	coalesce(A.CD_UNID_MED_PRESCR::text, '') = ''
and	coalesce(A.QT_DOSE_PRESCRICAO::text, '') = '';


BEGIN
ie_calcular_carboplanina_w	:= Obter_Valor_Param_Usuario(281, 485, Obter_perfil_Ativo, Wheb_Usuario_Pck.Get_nm_Usuario, 0);

/* Atualizar todos os Medicamentos com dose padrao */



/* Atualizar os Medicamentos com base na superficie corporal */

UPDATE 	PACIENTE_ATEND_MEDIC A
SET 	A.CD_UNID_MED_PRESCR =  
               (SELECT B.CD_UNIDADE_MED_PRINC  
                FROM UNIDADE_MEDIDA B  
                WHERE A.CD_UNID_MED_DOSE = B.CD_UNIDADE_MEDIDA),
	A.QT_DOSE_PRESCRICAO =   
               (SELECT A.QT_DOSE * B.QT_SUPERF_CORPORAL  
                FROM PACIENTE_ATENDIMENTO B  
                WHERE A.NR_SEQ_ATENDIMENTO = B.NR_SEQ_ATENDIMENTO)
WHERE 	A.NR_SEQ_ATENDIMENTO = nr_seq_atendimento_p
AND EXISTS (SELECT B.CD_UNIDADE_MED_PRINC  
                FROM UNIDADE_MEDIDA B  
                WHERE A.CD_UNID_MED_DOSE = B.CD_UNIDADE_MEDIDA  
                  AND B.CD_UNIDADE_MEDIDA <> B.CD_UNIDADE_MED_PRINC  
                  AND lower(B.CD_UNIDADE_MED_SEC) = obter_unid_med_usua('m2'))
and    	coalesce(A.CD_UNID_MED_PRESCR::text, '') = ''
and	coalesce(A.QT_DOSE_PRESCRICAO::text, '') = '';

/* Pegar o valor da carboplatina */

select	a.cd_pessoa_fisica,
	obter_qt_mg_carboplatina(a.nr_seq_paciente),
    	b.qt_altura,
		b.qt_peso
into STRICT	cd_pessoa_fisica_w,
	qt_mg_carboplatina_w,
    	qt_altura_cm_w,
		qt_peso_w
from	paciente_atendimento b,
	paciente_setor a
where	a.nr_seq_paciente	= b.nr_seq_paciente
and	b.nr_seq_atendimento	= nr_seq_atendimento_p;


open C01;
loop
fetch C01 into
	qt_dose_w,
	nr_seq_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	qt_peso_ideal_w := obter_peso_considerado_onc(nr_seq_atendimento_p,nr_seq_material_w,qt_peso_w,qt_altura_cm_w, 'S');
	
	UPDATE PACIENTE_ATEND_MEDIC A
	SET 	A.CD_UNID_MED_PRESCR =  
				   (SELECT B.CD_UNIDADE_MED_PRINC  
					FROM UNIDADE_MEDIDA B  
					WHERE A.CD_UNID_MED_DOSE = B.CD_UNIDADE_MEDIDA),
		A.QT_DOSE_PRESCRICAO = qt_dose_w * qt_peso_ideal_w
	WHERE 	A.NR_SEQ_ATENDIMENTO = nr_seq_atendimento_p
	and     a.nr_seq_material = nr_seq_material_w
	AND EXISTS (SELECT B.CD_UNIDADE_MED_PRINC  
                FROM UNIDADE_MEDIDA B  
                WHERE A.CD_UNID_MED_DOSE = B.CD_UNIDADE_MEDIDA  
                  AND B.CD_UNIDADE_MEDIDA <> B.CD_UNIDADE_MED_PRINC  
                  AND lower(B.CD_UNIDADE_MED_SEC) = obter_unid_med_usua('kg'))
and    	coalesce(A.CD_UNID_MED_PRESCR::text, '') = ''
and	coalesce(A.QT_DOSE_PRESCRICAO::text, '') = '';
end loop;	
close C01;

/* Atualizar os medicamentos com base na carboplatina */

if (ie_calcular_carboplanina_w	<> 'N') then
	UPDATE PACIENTE_ATEND_MEDIC A
	SET 	A.QT_DOSE_PRESCRICAO =   
	               (SELECT A.QT_DOSE * coalesce(qt_mg_carboplatina_w,1)
	                FROM PACIENTE_ATENDIMENTO B  
	                WHERE A.NR_SEQ_ATENDIMENTO = B.NR_SEQ_ATENDIMENTO),  
	               A.CD_UNID_MED_PRESCR =  
	               (SELECT B.CD_UNIDADE_MED_PRINC  
	                FROM UNIDADE_MEDIDA B  
	                WHERE A.CD_UNID_MED_DOSE = B.CD_UNIDADE_MEDIDA)  
	WHERE A.NR_SEQ_ATENDIMENTO = nr_seq_atendimento_p
	  AND EXISTS (SELECT B.CD_UNIDADE_MED_PRINC  
	                FROM UNIDADE_MEDIDA B  
	                WHERE A.CD_UNID_MED_DOSE = B.CD_UNIDADE_MEDIDA  
	                  AND B.CD_UNIDADE_MEDIDA <> B.CD_UNIDADE_MED_PRINC  
	                  AND lower(B.CD_UNIDADE_MED_SEC) = obter_unid_med_usua('mgc'));
			
	update paciente_atend_medic a  
	set 	a.qt_dose_prescricao = coalesce(qt_mg_carboplatina_w,0)
	where a.nr_seq_atendimento = nr_seq_atendimento_p
	  and exists (SELECT b.cd_unidade_med_princ  
			from unidade_medida b  
			where a.cd_unid_med_dose = b.cd_unidade_medida  
			  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
			  and lower(b.cd_unidade_med_sec) in (obter_unid_med_usua('mgcar')))
	and	a.qt_dose > 0;		

end if;

update 	paciente_atend_medic a
set 	a.cd_unid_med_prescr 	= (	SELECT	c.cd_unidade_med_princ  
					from	unidade_medida c  
					where	a.cd_unid_med_dose = c.cd_unidade_medida),
	a.qt_dose_prescricao	= a.qt_dose
where 	a.nr_seq_atendimento 	= nr_seq_atendimento_p
and exists (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unid_med_dose = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and b.cd_unidade_med_sec = a.cd_unid_med_dose)
and	coalesce(a.cd_unid_med_prescr::text, '') = ''
and	coalesce(a.qt_dose_prescricao::text, '') = ''
and	a.qt_dose > 0;

UPDATE 	PACIENTE_ATEND_MEDIC A
SET 	A.CD_UNID_MED_PRESCR = A.CD_UNID_MED_DOSE,
	A.QT_DOSE_PRESCRICAO = A.QT_DOSE
WHERE 	A.NR_SEQ_ATENDIMENTO = nr_seq_atendimento_p
and    	coalesce(A.CD_UNID_MED_PRESCR::text, '') = ''
and	coalesce(A.QT_DOSE_PRESCRICAO::text, '') = '';

CALL arredondar_dose_onc_ciclo(nr_seq_atendimento_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_dose_oncologia (nr_seq_atendimento_p bigint) FROM PUBLIC;

