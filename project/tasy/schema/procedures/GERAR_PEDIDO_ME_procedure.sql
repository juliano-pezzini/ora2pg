-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_pedido_me ( nr_solic_compra_p text, nr_pedido_p text, nm_usuario_p text, ie_aprovada_p INOUT text, nr_ordem_compra_p INOUT bigint) AS $body$
DECLARE


qt_registro_w			bigint;			
nr_seq_pedido_w			bigint;
filial_w				varchar(50);
codigofornecedor_w		varchar(20);
dataprevistaentrega_w		timestamp;
codigocondicaopagamento_w		varchar(10);
numeropedidome_w			varchar(20);
qt_regra_fabric_mat_w		bigint;
valorfrete_w			double precision;
tipofrete_w			varchar(1);
cd_estabelecimento_w		bigint;
cd_condicao_pagamento_w		bigint;
cd_comprador_w			varchar(10);
cd_moeda_padrao_w		bigint;
nm_pessoa_contato_w		varchar(100);
cd_pessoa_solicitante_w		varchar(10);
ie_liberar_ordem_cotacao_w		varchar(15);
cd_versao_atual_w			varchar(50);
nr_seq_item_w			bigint;
codigoproduto_w			varchar(50);
quantidade_w			double precision;
valorunitario_w			double precision;
percentualdesconto_w		double precision;
percentualipi_w			double precision;
vl_item_liquido_w			double precision;
vl_tributo_w			double precision;
codigounidade_w			varchar(30);
observacao_w			varchar(4000);
nr_ordem_compra_w		bigint;
cd_material_w			bigint;
cd_unidade_medida_w		varchar(30);
nr_item_oci_w			bigint;
nr_item_solic_compra_w		bigint;
cd_local_estoque_w		bigint;
cd_centro_custo_w			bigint;
cd_conta_contabil_w		varchar(20);
ie_tipo_conta_w			bigint;
cd_tributo_w			bigint;
ds_material_direto_w		varchar(255);
ie_urgente_w			varchar(1);
ie_aviso_chegada_w		varchar(1);
dt_aprovacao_w			timestamp;
dt_entrega_w			timestamp;
qt_entrega_w			double precision;
fabricante_w			varchar(50);
nr_seq_fabric_int_w		bigint;
nr_seq_fabric_mat_w		bigint;
ie_aprovada_w			varchar(1) := 'N';
ie_erro_w				varchar(1) := 'N';
nr_solic_compra_w		bigint;
nr_solic_compra_ww		bigint;
qt_diferenca_w			double precision;
nr_sequencia_ent_w		bigint;
ie_gera_oc_w			varchar(1) := 'S';
qt_registros_w			bigint;

c01 CURSOR FOR
SELECT	nr_sequencia,
	filial,
	codigofornecedor,
	dataprevistaentrega,
	codigocondicaopagamento,
	coalesce(valorfrete,0),
	CASE WHEN tipofrete='CIF' THEN 'C'  ELSE 'F' END
from	w_me_pedido
where	numeropedidome = numeropedidome_w
and	coalesce(ie_lido,'N')	= 'N';

c02 CURSOR FOR
SELECT	nr_sequencia,
	codigoproduto,
	coalesce(quantidade,0),
	coalesce(valorunitario,0),
	coalesce(percentualdesconto,0),
	coalesce(percentualipi,0),
	codigounidade,
	observacao,
	fabricante,
	somente_numero(numerorequisicao)
from	w_me_pedido_itens
where	nr_seq_pedido		= nr_seq_pedido_w;

c03 CURSOR FOR
SELECT	pkg_date_utils.start_of(data, 'DD', null),
	quantidade
from	w_me_pedido_itens_ent
where	nr_seq_item = 	nr_seq_item_w;
				

BEGIN

ie_gera_oc_w	:= 'S';

select	substr(nr_solic_compra_p||'@',1,position('@' in nr_solic_compra_p||'@')-1)
into STRICT	nr_solic_compra_ww
;

numeropedidome_w := nr_pedido_p;

delete	FROM log_me
where	nr_prepedido = numeropedidome_w
and	nr_solic_compra = nr_solic_compra_ww;

select	count(*)
into STRICT	qt_registro_w
from	solic_compra
where	nr_solic_compra		= nr_solic_compra_ww;

if (qt_registro_w > 0) and (numeropedidome_w <> 'X') then

	select	b.cd_comprador_padrao,
		b.cd_moeda_padrao,
		a.cd_pessoa_solicitante,
		b.ie_liberar_ordem_cotacao,
		a.cd_local_estoque,
		a.cd_centro_custo,
		a.cd_conta_contabil,
		a.ie_urgente,
		coalesce(a.ie_aviso_chegada,'N')
	into STRICT	cd_comprador_w,
		cd_moeda_padrao_w,
		cd_pessoa_solicitante_w,
		ie_liberar_ordem_cotacao_w,
		cd_local_estoque_w,
		cd_centro_custo_w,
		cd_conta_contabil_w,
		ie_urgente_w,
		ie_aviso_chegada_w
	from	solic_compra a,
		parametro_compras b
	where	a.cd_estabelecimento = b.cd_estabelecimento
	and	a.nr_solic_compra = nr_solic_compra_ww;

	open C01;
	loop
	fetch C01 into	
		nr_seq_pedido_w,
		filial_w,
		codigofornecedor_w,
		dataprevistaentrega_w,
		codigocondicaopagamento_w,
		valorfrete_w,
		tipofrete_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		select	obter_conversao_interna_int(null,'ESTABELECIMENTO','CD_ESTABELECIMENTO',filial_w,'ME'),
			obter_conversao_interna_int(null,'CONDICAO_PAGAMENTO','CD_CONDICAO_PAGAMENTO',codigocondicaopagamento_w,'ME')
		into STRICT	cd_estabelecimento_w,
			cd_condicao_pagamento_w
		;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	estabelecimento
		where	cd_estabelecimento = cd_estabelecimento_w;
		
		if (qt_registro_w = 0) then
			ie_erro_w := 'S';
			CALL inserir_log_me('SC', nr_solic_compra_ww, '112', 'ROC', Wheb_mensagem_pck.get_Texto(301971, 'FILIAL_W='|| FILIAL_W), '000002', nm_usuario_p, 'G',numeropedidome_w, nr_seq_pedido_w);
		end if;								/*Nao existe conversao valida para a filial #@FILIAL_W#@*/
		


		select	count(*)
		into STRICT	qt_registro_w
		from	condicao_pagamento
		where	cd_condicao_pagamento = cd_condicao_pagamento_w;
		
		if (qt_registro_w = 0) then
			ie_erro_w := 'S';
			CALL inserir_log_me('SC', nr_solic_compra_ww, '112', 'ROC', Wheb_mensagem_pck.get_Texto(301972, 'CODIGOCONDICAOPAGAMENTO_W='|| CODIGOCONDICAOPAGAMENTO_W), '000003', nm_usuario_p, 'G',numeropedidome_w, nr_seq_pedido_w);
		end if;								/*Nao existe conversao valida para a condicao de pagamento #@CODIGOCONDICAOPAGAMENTO_W#@*/
		select	count(*)
		into STRICT	qt_registro_w
		from	pessoa_juridica
		where	cd_cgc = codigofornecedor_w;
		
		if (qt_registro_w = 0) then
			ie_erro_w := 'S';
			CALL inserir_log_me('SC', nr_solic_compra_ww, '112', 'ROC', Wheb_mensagem_pck.get_Texto(301973, 'CODIGOFORNECEDOR_W='|| CODIGOFORNECEDOR_W), '000004', nm_usuario_p,'G',numeropedidome_w,nr_seq_pedido_w);
		end if;								/*Nao existe pessoa juridica cadastrada no Tasy com CNPJ #@CODIGOFORNECEDOR_W#@*/
		
				
		select	count(*)
		into STRICT	qt_registro_w
		from	comprador
		where	cd_pessoa_fisica = cd_comprador_w;
		
		if (qt_registro_w = 0) then
			ie_erro_w := 'S';
			CALL inserir_log_me('SC',nr_solic_compra_ww, '112', 'ROC', Wheb_mensagem_pck.get_Texto(301974) , '000005',nm_usuario_p,'G',numeropedidome_w,nr_seq_pedido_w);
		end if;								/*'Nao existe comprador padrao informado nos parametros de compras'*/
		
		select	count(*)
		into STRICT	qt_registro_w
		from	moeda
		where	cd_moeda = cd_moeda_padrao_w;
		
		if (qt_registro_w = 0) then
			ie_erro_w := 'S';
			CALL inserir_log_me('SC', nr_solic_compra_ww, '112', 'ROC', Wheb_mensagem_pck.get_Texto(301976) , '000006', nm_usuario_p,'G',numeropedidome_w,nr_seq_pedido_w);
		end if;								/*Nao existe moeda padrao informada nos parametros de compras*/
		
		select	count(*)
		into STRICT	qt_registro_w
		from	ordem_compra
		where	nr_documento_externo = numeropedidome_w;
		--and	dt_baixa is null;
		
		if (qt_registro_w > 0) then
			ie_gera_oc_w := 'N';
			
			/* Esse log foi retirado porque o ME nao pode receber essa mensagem. A unica acao nesse caso, e nao gerar a ordem de compra
			inserir_log_me('SC', nr_solic_compra_ww, '112', 'ROC', Wheb_mensagem_pck.get_Texto(301977, 'NUMEROPEDIDOME_W='|| NUMEROPEDIDOME_W), '000007', nm_usuario_p,'G',numeropedidome_w,nr_seq_pedido_w);*/

											/*Ja existe o pre-pedido #@NUMEROPEDIDOME_W#@ no Tasy*/

		end if;
		
	
		if (ie_erro_w = 'N') and (ie_gera_oc_w = 'S') then
			
			select	nm_pessoa_contato
			into STRICT	nm_pessoa_contato_w
			from	pessoa_juridica
			where	cd_cgc = codigofornecedor_w;
			
			select	coalesce(max(cd_versao_atual),'0')
			into STRICT	cd_versao_atual_w
			from	aplicacao_tasy
			where	cd_aplicacao_tasy = 'Tasy';
			
			if (nr_ordem_compra_p IS NOT NULL AND nr_ordem_compra_p::text <> '') then
				begin
				select	nr_ordem_compra
				into STRICT	nr_ordem_compra_w
				from	ordem_compra
				where	nr_ordem_compra = nr_ordem_compra_p;
				exception
				when others then
					nr_ordem_compra_p	:=	null;
				end;
			end if;

			if (coalesce(nr_ordem_compra_p::text, '') = '') then
				
				select	nextval('ordem_compra_seq')
				into STRICT	nr_ordem_compra_w
				;
				
				insert into ordem_compra(
					nr_ordem_compra,
					cd_estabelecimento,
					cd_cgc_fornecedor,
					cd_condicao_pagamento,
					cd_comprador,
					dt_ordem_compra,
					dt_atualizacao,
					nm_usuario,
					cd_moeda,
					ie_situacao,
					dt_inclusao,
					cd_pessoa_solicitante,
					ie_frete,
					vl_frete,
					ds_pessoa_contato,
					ds_observacao,
					dt_entrega,
					ie_aviso_chegada,
					ie_emite_obs,
					ie_urgente,
					vl_despesa_acessoria,
					nr_documento_externo,
					vl_desconto,
					ie_tipo_ordem,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_dados_importacao,
					ie_origem_imp)
				values (	nr_ordem_compra_w,
					cd_estabelecimento_w,
					codigofornecedor_w,
					cd_condicao_pagamento_w,
					cd_comprador_w,
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p,
					cd_moeda_padrao_w,
					'A',
					clock_timestamp(),
					cd_pessoa_solicitante_w,
					tipofrete_w,
					valorfrete_w,
					nm_pessoa_contato_w,
					'',
					dataprevistaentrega_w,
					'N',
					'N',
					'N',
					0,
					numeropedidome_w,
					0,
					'E',
					clock_timestamp(),
					nm_usuario_p,
					cd_versao_atual_w,
					'MercadoEletronico');
			end if;
			
			nr_ordem_compra_p := nr_ordem_compra_w;
			
			open C02;
			loop
			fetch C02 into	
				nr_seq_item_w,
				codigoproduto_w,
				quantidade_w,
				valorunitario_w,
				percentualdesconto_w,
				percentualipi_w,
				codigounidade_w,
				observacao_w,
				fabricante_w,
				nr_solic_compra_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				
				select	coalesce(obter_cod_int_material(codigoproduto_w,'ME',cd_estabelecimento_w),0)
				into STRICT	cd_material_w
				;
				
				select	count(*)
				into STRICT	qt_registro_w
				from	material
				where	cd_material = cd_material_w;
				
				if (qt_registro_w = 0) then
					ie_erro_w := 'S';
					CALL inserir_log_me('SC', nr_solic_compra_ww, '112', 'ROC',Wheb_mensagem_pck.get_Texto(301978, 'CODIGOPRODUTO_W='|| CODIGOPRODUTO_W) , '000008', nm_usuario_p,'G',numeropedidome_w,nr_seq_pedido_w);
				end if;								/*Nao existe conversao valida para o codigo do produto #@CODIGOPRODUTO_W#@*/
				
				
				if (quantidade_w = 0 ) then
					ie_erro_w := 'S';					/*Pedido #@NUMEROPEDIDOME_W#@ gerou quantidade zero para o item #@CODIGOPRODUTO_W#@*/
					CALL inserir_log_me('SC', nr_solic_compra_ww, '112', 'ROC',wheb_mensagem_pck.get_texto(795131,'NUMEROPEDIDOME_W='|| numeropedidome_w ||';CODIGOPRODUTO_W='|| codigoproduto_w), '000008', nm_usuario_p,'G',numeropedidome_w,nr_seq_pedido_w);
				end if;				
				
				select	coalesce(min(nr_item_solic_compra),0)
				into STRICT	nr_item_solic_compra_w
				from	solic_compra_item
				where	nr_solic_compra		= nr_solic_compra_w
				and	cd_material		= cd_material_w;
				
				
				if (coalesce(cd_conta_contabil_w::text, '') = '') then

					if (coalesce(cd_centro_custo_w::text, '') = '') then
						ie_tipo_conta_w	:= 2;
					else
						ie_tipo_conta_w	:= 3;
					end if;

					SELECT * FROM define_conta_material(	cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, null, null, null, null, null, null, null, cd_local_estoque_w, null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
				end if;

				if (ie_erro_w = 'N') and (fabricante_w IS NOT NULL AND fabricante_w::text <> '') then
				
					select	somente_numero(obter_conversao_interna_int(null,'MAT_FABRICANTE','NR_SEQUENCIA',fabricante_w,'ME'))
					into STRICT	nr_seq_fabric_int_w
					;
					
					select	count(*)
					into STRICT	qt_regra_fabric_mat_w
					from	regra_fabric_integracao
					where	cd_material = cd_material_w
					and (coalesce(cd_estabelecimento::text, '') = '' or cd_estabelecimento = cd_estabelecimento_w)
					and (ie_integracao = 'S' or ie_integracao = 'ME');
					
					select	coalesce(max(nr_seq_fabric),0)
					into STRICT	nr_seq_fabric_mat_w
					from	material
					where	cd_material = cd_material_w;
					
					if (nr_seq_fabric_int_w > 0) and (nr_seq_fabric_mat_w > 0) and (nr_seq_fabric_mat_w <> nr_seq_fabric_int_w) then
						ie_erro_w := 'S';
						CALL inserir_log_me('SC', nr_solic_compra_ww, '112', 'ROC',WHEB_MENSAGEM_PCK.get_texto(301979,'FABRICANTE_W='|| FABRICANTE_W ||';CODIGOPRODUTO_W='|| CODIGOPRODUTO_W), '000025', nm_usuario_p,'G',numeropedidome_w,nr_seq_pedido_w);
													/*O fabricante #@FABRICANTE_W#@ e invalido para o material #@CODIGOPRODUTO_W#@*/

					elsif (qt_regra_fabric_mat_w > 0) and (nr_seq_fabric_mat_w = 0) and (nr_seq_fabric_int_w > 0) then

						select	count(*)
						into STRICT	qt_registro_w
						from	regra_fabric_integracao
						where	cd_material = cd_material_w
						and	nr_seq_fabric = nr_seq_fabric_int_w
						and (coalesce(cd_estabelecimento::text, '') = '' or cd_estabelecimento = cd_estabelecimento_w)
						and (ie_integracao = 'S' or ie_integracao = 'ME');
							
						if (qt_registro_w = 0) then
							ie_erro_w := 'S';
							CALL inserir_log_me('SC', nr_solic_compra_ww, '112', 'ROC',WHEB_MENSAGEM_PCK.get_texto(301982,'FABRICANTE_W='|| FABRICANTE_W ||';CODIGOPRODUTO_W='|| CODIGOPRODUTO_W) , '000024', nm_usuario_p,'G',numeropedidome_w,nr_seq_pedido_w);
														/*O fabricante #@FABRICANTE_W#@ e invalido para o material #@CODIGOPRODUTO_W#@*/

						end if;
					end if;
				end if;
				
				

				
				if (ie_erro_w = 'N') and (nr_item_solic_compra_w > 0) then
					
					vl_item_liquido_w		:= 0;
					vl_item_liquido_w		:= coalesce(quantidade_w,0) * coalesce(valorunitario_w,0);
					
					if (percentualdesconto_w > 0) then
						vl_item_liquido_w	:= vl_item_liquido_w - dividir((percentualdesconto_w * 100),vl_item_liquido_w);
					end if;
					
					select	cd_unidade_medida_compra
					into STRICT	cd_unidade_medida_w
					from	solic_compra_item
					where	nr_solic_compra		= nr_solic_compra_w
					and	nr_item_solic_compra	= nr_item_solic_compra_w;
					
					select	substr(ds_material_direto,1,255)
					into STRICT	ds_material_direto_w
					from	solic_compra_item
					where	nr_solic_compra		= nr_solic_compra_w
					and	nr_item_solic_compra	= nr_item_solic_compra_w;
					
					select	coalesce(max(nr_item_oci),0) + 1
					into STRICT	nr_item_oci_w
					from	ordem_compra_item
					where	nr_ordem_compra = nr_ordem_compra_w;
					
					insert into ordem_compra_item(
						nr_ordem_compra,
						nr_item_oci,
						cd_material,
						cd_unidade_medida_compra,
						vl_unitario_material,
						qt_material,
						dt_atualizacao,
						nm_usuario,
						ie_situacao,
						cd_local_estoque,
						ds_observacao,						
						vl_item_liquido,
						cd_centro_custo,
						cd_conta_contabil,
						nr_solic_compra,
						nr_item_solic_compra,
						qt_original,
						vl_desconto,
						pr_descontos,
						pr_desc_financ,
						vl_unit_mat_original,
						ds_material_direto,
						vl_total_item,
						cd_sequencia_parametro)
					values (	nr_ordem_compra_w,
						nr_item_oci_w,
						cd_material_w,
						cd_unidade_medida_w,
						valorunitario_w,
						quantidade_w,
						clock_timestamp(),
						nm_usuario_p,
						'A',
						cd_local_estoque_w,
						observacao_w,						
						vl_item_liquido_w,
						cd_centro_custo_w,
						cd_conta_contabil_w,
						nr_solic_compra_w,
						nr_item_solic_compra_w,
						quantidade_w,
						0,
						percentualdesconto_w,
						0,
						valorunitario_w,
						ds_material_direto_w,
						round((quantidade_w * valorunitario_w)::numeric,4),
						philips_contabil_pck.get_parametro_conta_contabil);
						
					select	quantidade_w - coalesce(sum(quantidade),0),
						max(nr_sequencia)
					into STRICT	qt_diferenca_w,
						nr_sequencia_ent_w
					from	w_me_pedido_itens_ent
					where	nr_seq_item = nr_seq_item_w;
					
					if (qt_diferenca_w <> 0) then
						update	w_me_pedido_itens_ent
						set	quantidade = quantidade + qt_diferenca_w
						where	nr_sequencia = nr_sequencia_ent_w;
					end if;
						
					open C03;
					loop
					fetch C03 into	
						dt_entrega_w,
						qt_entrega_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin
						
						select	count(*)
						into STRICT	qt_registros_w
						from	ordem_compra_item_entrega
						where	nr_ordem_compra = nr_ordem_compra_w
						and	nr_item_oci = nr_item_oci_w
						and	dt_prevista_entrega = dt_entrega_w;
						
						if (qt_registros_w = 0) then
						
							insert into ordem_compra_item_entrega(
								nr_sequencia,
								nr_ordem_compra,
								nr_item_oci,
								dt_prevista_entrega,
								qt_prevista_entrega,
								dt_atualizacao,
								nm_usuario,
								dt_entrega_original,
								dt_entrega_limite)
							values (	nextval('ordem_compra_item_entrega_seq'),
								nr_ordem_compra_w,
								nr_item_oci_w,
								dt_entrega_w,
								qt_entrega_w,
								clock_timestamp(),
								nm_usuario_p,
								dt_entrega_w,
								dt_entrega_w);
						else
							update	ordem_compra_item_entrega
							set	qt_prevista_entrega = qt_prevista_entrega + qt_entrega_w
							where	nr_ordem_compra = nr_ordem_compra_w
							and	nr_item_oci = nr_item_oci_w
							and	dt_prevista_entrega = dt_entrega_w;							
						end if;
						end;
					end loop;
					close C03;
			
						
					if (percentualipi_w > 0) then
				
						select	coalesce(min(cd_tributo),0)
						into STRICT	cd_tributo_w
						from	tributo
						where	ie_situacao		= 'A'
						and	ie_tipo_tributo		= 'IPI'
						and	ie_corpo_item		= 'I';
						
						if (cd_tributo_w > 0) then
							
							vl_tributo_w	:= 0;
							vl_tributo_w	:= (dividir(percentualipi_w,100) * vl_item_liquido_w);
							
							insert into ordem_compra_item_trib(
								nr_ordem_compra,
								nr_item_oci,
								cd_tributo,
								pr_tributo,
								vl_tributo,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec)
							values (	nr_ordem_compra_w,
								nr_item_oci_w,
								cd_tributo_w,
								percentualipi_w,
								vl_tributo_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p);
						end if;
					end if;					
				end if;
				end;
			end loop;
			close C02;
		
			update	ordem_compra
			set	cd_local_entrega	= cd_local_estoque_w,
				ie_urgente	= ie_urgente_w,
				ie_aviso_chegada	= ie_aviso_chegada_w
			where	nr_ordem_compra	= nr_ordem_compra_w;
					
			select	count(*)
			into STRICT	qt_registro_w
			from	ordem_compra_item
			where	nr_ordem_compra = nr_ordem_compra_w;
		
			if (qt_registro_w = 0) then
				delete from ordem_compra
				where	nr_ordem_compra = nr_ordem_compra_w;
			else
				calcular_liquido_ordem_compra(nr_ordem_compra_w, nm_usuario_p);
				CALL gerar_ordem_compra_venc(nr_ordem_compra_w, nm_usuario_p);
				CALL baixar_solic_compra_com_ordem(nr_ordem_compra_w);
						
				if (ie_liberar_ordem_cotacao_w in ('A','S')) then
					CALL liberar_ordem_ME(nr_ordem_compra_w, ie_liberar_ordem_cotacao_w, nm_usuario_p);
				
					select	dt_aprovacao
					into STRICT	dt_aprovacao_w
					from	ordem_compra
					where	nr_ordem_compra = nr_ordem_compra_w;
				
					if (dt_aprovacao_w IS NOT NULL AND dt_aprovacao_w::text <> '') then
						ie_aprovada_w	:= 'S';			
					end if;
				end if;
				update	w_me_pedido
				set	ie_lido			= 'S'
				where	numerorequisicao	= nr_solic_compra_ww;
			
				update	solic_compra
				set	nr_documento_externo	= numeropedidome_w
				where	nr_solic_compra		= nr_solic_compra_ww;
			end if;
		
		end if;
		
		if (ie_erro_w = 'S') then				
			delete	FROM ordem_compra
			where	nr_ordem_compra = nr_ordem_compra_w;			
		end if;
		end;
	end loop;
	close C01;
else
	ie_erro_w := 'S';
	CALL inserir_log_me('SC', nr_solic_compra_ww, '112', 'ROC',Wheb_mensagem_pck.get_Texto(301984, 'NR_SOLIC_COMPRA_P='|| nr_solic_compra_ww) ,'000001', nm_usuario_p,'G',numeropedidome_w,nr_seq_pedido_w);	
end if;								/*Nao existe no tasy a solicitacao de compra numero #@NR_SOLIC_COMPRA_P#@*/
if (nr_seq_pedido_w > 0) then
	update	w_me_pedido
	set	ie_lido	= 'S'
	where	nr_sequencia = nr_seq_pedido_w;
end if;	

ie_aprovada_p := ie_aprovada_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_pedido_me ( nr_solic_compra_p text, nr_pedido_p text, nm_usuario_p text, ie_aprovada_p INOUT text, nr_ordem_compra_p INOUT bigint) FROM PUBLIC;

