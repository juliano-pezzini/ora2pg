-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_glosar_item ( nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_proc_partic_p pls_proc_participante.nr_sequencia%type, qt_liberar_p bigint, nr_seq_mot_liberacao_p bigint, ds_parecer_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_grupo_atual_p bigint, ie_obriga_parecer_p text, ie_obriga_ocorrencia_p text, ie_finalizacao_p text, ie_pre_analise_p text, nm_usuario_p usuario.nm_usuario%type, ie_glosa_pos_estab_p text, ie_obriga_ocor_parcial_p text default 'S', ie_glosa_atend_p text default 'N') AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Fazer todo o tratamento de glosa individual (um item so selecionado) na
Analise de contas medicas nova.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_id_w				varchar(30)	:= null;
ie_valor_base_w			varchar(10)	:= null;
ie_tipo_liberacao_w		varchar(10);
ie_tipo_item_w			varchar(10);
ie_status_pagamento_w		varchar(3);
ie_item_w			varchar(1)	:= 'S';
ie_glosar_faturamento_w		varchar(1)	:= 'N';
ie_glosar_pagamento_w		varchar(1)	:= 'S';
vl_unitario_apres_w		double precision	:= null;
vl_unitario_calc_w		double precision	:= null;
vl_unitario_w			double precision	:= null;
vl_glosa_w			double precision	:= null;
vl_liberado_w			double precision	:= null;
vl_pag_medico_conta_w		double precision	:= null;
vl_saldo_w			double precision	:= null;
vl_calculado_w			double precision	:= null;
vl_apresentado_w		double precision	:= null;
vl_base_w			double precision	:= null;
qt_procedimento_imp_w		double precision;
qt_material_imp_w		double precision;
qt_liberar_p_w			double precision;
qt_procedimento_w		double precision;
nr_seq_ocor_glosa_existe_w	bigint;
nr_seq_ocor_benef_existe_w	pls_ocorrencia_benef.nr_sequencia%type;
ds_ocorrencia_w			varchar(255);
ds_observacao_w			varchar(255);
cd_ocorrencia_hist_w		pls_ocorrencia.cd_ocorrencia%type;
qt_material_w			double precision;
nr_seq_conta_w			bigint;
nr_seq_item_w			bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_motivo_glosa_w		bigint;
qt_registro_w			bigint;
nr_seq_glosa_conta_w		bigint	:= null;
qt_1705_w			bigint;
nr_seq_conta_pos_w		bigint;
ie_glosar_pagamento_ocor_w	varchar(1)	:= 'N';
ie_glosar_faturamento_ocor_w	varchar(1)	:= 'N';
nr_seq_analise_pos_w		bigint;
nr_seq_ocor_benef_w		bigint;
qt_ativa_ambas_w		bigint	:= 0;
ie_tipo_glosa_w			varchar(3)	:= null;
ie_inserido_auditor_w		varchar(1);
ie_situacao_nova_w		varchar(1);
ie_situacao_ant_w		varchar(1);
ie_situacao_alterada_w		varchar(1);
ie_reativacao_w			varchar(1);
nr_seq_conta_glosa_w		bigint;
ie_tipo_ocor_w			integer;
nr_seq_proc_glosa_w		bigint;
nr_seq_mat_glosa_w		bigint;
nr_seq_w_ocor_w			bigint;
ie_glosa_valor_w		varchar(3)	:= 'N';
qt_inativa_w			bigint;
ie_glosa_propagada_w		varchar(1)	:= 'N';
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
ie_insere_glosa_w		varchar(1)	:= 'N';
ie_geracao_pos_estabelecido_w	pls_parametros.ie_geracao_pos_estabelecido%type;
qt_grupo_ocor_w			integer;
qt_total_grupo_w		integer;
cd_motivo_w			varchar(10);
nr_seq_mot_quest_w		bigint;
ie_permite_valor_maior_w	varchar(1);
ie_origem_conta_w		pls_conta.ie_origem_conta%type;
ie_fluxo_adic_w			varchar(1);
qt_item_w			pls_conta_proc.qt_procedimento_imp%type;
nr_seq_ocor_w			pls_ocorrencia_benef.nr_sequencia%type;
qt_apresentada_w		pls_conta_proc.qt_procedimento_imp%type;
qt_glosa_w			pls_conta_proc.qt_procedimento%type;
qt_ocorrencia_w			integer;
ie_obriga_ocor_parcial_w	varchar(1);
nr_seq_ocorrencia_glosa_w	pls_ocorrencia.nr_sequencia%type;
ie_gerar_previa_pos_w		pls_parametros.ie_gerar_previa_pos%type;
qt_reg_prev_w			integer := 0;

/* Glosas e ocorrencias incluidas na tela
Tem que ser repassadas para as tabelas quentes */
C01 CURSOR FOR
	SELECT	a.nr_seq_ocorrencia,
		CASE WHEN coalesce(a.nr_seq_ocorrencia::text, '') = '' THEN a.nr_seq_motivo_glosa  ELSE null END ,
		a.nr_sequencia,
		CASE WHEN a.ie_inserido_auditor='S' THEN  'N'  ELSE 'S' END ,
		null,
		null
	from	w_pls_analise_glosa_ocor a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nm_usuario		= nm_usuario_p
	and	a.ie_situacao		= 'A';

C02 CURSOR FOR
	SELECT	a.nr_seq_ocorrencia,
		CASE WHEN coalesce(a.nr_seq_ocorrencia::text, '') = '' THEN a.nr_seq_motivo_glosa  ELSE null END ,
		a.nr_seq_ocor_benef,
		a.ie_inserido_auditor,
		a.ie_situacao
	from	w_pls_analise_glosa_ocor a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nm_usuario		= nm_usuario_p
	and	a.ie_situacao		= 'A';


BEGIN
commit;

ie_obriga_ocor_parcial_w	:= coalesce(ie_obriga_ocor_parcial_p,'S');

if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then

	select	ie_origem_conta
	into STRICT	ie_origem_conta_w
	from	pls_conta
	where	nr_sequencia	= nr_seq_conta_p;
end if;

select	coalesce(max(a.ie_geracao_pos_estabelecido),'F'),
	coalesce(max(ie_gerar_previa_pos), 'N')
into STRICT	ie_geracao_pos_estabelecido_w,
	ie_gerar_Previa_pos_w
from	pls_parametros	a
where	a.cd_estabelecimento	= cd_estabelecimento_p;

/* ---------------------------------Consistencias --------------------------------------*/

if (coalesce(nr_seq_mot_liberacao_p::text, '') = '') and (ie_pre_analise_p = 'N') and (coalesce(ie_glosa_atend_p,'N') = 'N')then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(204574);
end if;

if (ie_obriga_parecer_p = 'S') and (coalesce(ds_parecer_p::text, '') = '') and (coalesce(ie_finalizacao_p,'N') = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(205753);
end if;

if (ie_obriga_ocorrencia_p = 'S') then
	select	count(1)
	into STRICT	qt_registro_w
	from	w_pls_analise_glosa_ocor a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nm_usuario		= nm_usuario_p
	and	(a.nr_seq_ocorrencia IS NOT NULL AND a.nr_seq_ocorrencia::text <> '')
	and (a.ie_inserido_auditor = 'S' or (coalesce(a.ie_inserido_auditor::text, '') = '' and a.ie_situacao = 'A'));

	if (qt_registro_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(205754);
	end if;
end if;
qt_liberar_p_w	:= qt_liberar_p;


/* Francisco - OS 543041 - Tratar conforme ocorrencias se vai glosar Pagamento/Faturamento */

if (ie_finalizacao_p = 'S') then

	CALL pls_gerar_w_analise_glosa_ocor(	nr_seq_analise_p, nr_seq_conta_p, nr_seq_grupo_atual_p,
					nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_proc_partic_p,
					'N', nm_usuario_p);
end if;

qt_ocorrencia_w	:= 0;
open C02;
loop
fetch C02 into
	nr_seq_ocorrencia_w,
	nr_seq_motivo_glosa_w,
	nr_seq_ocor_benef_w,
	ie_inserido_auditor_w,
	ie_situacao_nova_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	ie_situacao_alterada_w	:= 'N';
	ie_glosa_valor_w	:= 'N';

	if ((nr_seq_ocorrencia_w IS NOT NULL AND nr_seq_ocorrencia_w::text <> '') or (nr_seq_motivo_glosa_w IS NOT NULL AND nr_seq_motivo_glosa_w::text <> '')) then
		qt_ocorrencia_w	:= 1;
	end if;
	
	if (nr_seq_ocor_benef_w IS NOT NULL AND nr_seq_ocor_benef_w::text <> '') then

		select	max(a.ie_situacao)
		into STRICT	ie_situacao_ant_w
		from	pls_ocorrencia_benef a
		where	a.nr_sequencia	= nr_seq_ocor_benef_w;

		if (ie_situacao_ant_w != ie_situacao_nova_w) then

			ie_situacao_alterada_w	:= 'S';
		end if;
	end if;

	select	count(1)
	into STRICT	qt_inativa_w
	from	w_pls_analise_glosa_ocor a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nm_usuario		= nm_usuario_p
	and	a.ie_situacao		= 'I';
	
	select	count(1)
	into STRICT	qt_glosa_w
	from	w_pls_analise_glosa_ocor
	where	nr_seq_analise = nr_seq_analise_p;
	
	if (ie_glosa_valor_w = 'N') and
		((ie_inserido_auditor_w = 'S') or (ie_situacao_alterada_w = 'S') or (ie_finalizacao_p = 'S') or (qt_inativa_w = 0)) then

		ie_insere_glosa_w	:= 'S';

		if (nr_seq_ocorrencia_w IS NOT NULL AND nr_seq_ocorrencia_w::text <> '') then
		
			select	coalesce(a.ie_glosar_pagamento,'S'),
				coalesce(a.ie_glosar_faturamento,'S'),
				CASE WHEN b.cd_motivo_tiss='1705' THEN 'S' WHEN b.cd_motivo_tiss='1706' THEN 'S'  ELSE 'N' END
			into STRICT	ie_glosar_pagamento_ocor_w,
				ie_glosar_faturamento_ocor_w,
				ie_glosa_valor_w
			FROM pls_ocorrencia a
LEFT OUTER JOIN tiss_motivo_glosa b ON (a.nr_seq_motivo_glosa = b.nr_sequencia)
WHERE a.nr_sequencia	= nr_seq_ocorrencia_w;
			
		elsif (nr_seq_motivo_glosa_w IS NOT NULL AND nr_seq_motivo_glosa_w::text <> '') then
		
			select	coalesce(max(a.ie_glosar_pagamento),'S'),
				coalesce(max(a.ie_glosar_faturamento),'N'),
				max(a.nr_sequencia)
			into STRICT	ie_glosar_pagamento_ocor_w,
				ie_glosar_faturamento_ocor_w,
				nr_seq_ocorrencia_glosa_w
			from	pls_ocorrencia a
			where	nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w
			and	ie_glosa		= 'S'
			and	ie_situacao		= 'A';
			
			if (coalesce(nr_seq_ocorrencia_glosa_w::text, '') = '') then
				ie_glosar_faturamento_ocor_w	:= 'S';
			end if;
		end if;

		if (ie_glosar_faturamento_w = 'N') and (ie_glosar_faturamento_ocor_w = 'S') then
			ie_glosar_faturamento_w	:= 'S';
		end if;
		-- Acrescentado esse tratamento pois caso possuam mais de uma ocorrencia ativa

		-- e uma interfere no pagamento e outra nao, pode ter situacoes onde a ocorrencia nao sera aplicada #Ariel
		ie_glosar_pagamento_w := 'S';
		
		if (ie_glosa_valor_w = 'N') and (ie_glosar_pagamento_ocor_w = 'N')	then

			ie_glosar_pagamento_w	:= ie_glosar_pagamento_ocor_w;

			if (nr_seq_motivo_glosa_w IS NOT NULL AND nr_seq_motivo_glosa_w::text <> '') then
				ie_glosar_pagamento_w	:= 'S';
			end if;
		end if;
	end if;
	
	/*Se encontrar uma glosa que interfere no pagamento ira sair do cursor drquadros 627586*/

	if (ie_glosar_pagamento_w = 'S')	then
		exit;
	end if;
	end;
end loop;
close C02;

if (ie_glosar_faturamento_w = 'S') and (ie_glosar_pagamento_w = 'S') then
	ie_tipo_glosa_w	:= 'A';
elsif (ie_glosar_faturamento_w = 'S') and (ie_glosar_pagamento_w = 'N') then
	ie_tipo_glosa_w	:= 'F';
else
	ie_tipo_glosa_w	:= 'P';
end if;

if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
	
	select	count(1)
	into STRICT	qt_ativa_ambas_w
	from	pls_ocorrencia b,
		pls_ocorrencia_benef a
	where	a.nr_seq_ocorrencia = b.nr_sequencia
	and	b.ie_glosar_pagamento = 'S'
	and	b.ie_glosar_faturamento = 'S'
	and	a.nr_seq_conta_proc = nr_seq_conta_proc_p
	and	a.ie_situacao = 'A'
	and	not exists (	SELECT	1
				from	w_pls_analise_glosa_ocor x
				where	x.nr_seq_analise = nr_seq_analise_p
				and	x.nr_seq_ocor_benef = a.nr_sequencia
				and	x.ie_situacao = 'I');

elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
	
	select	count(1)
	into STRICT	qt_ativa_ambas_w
	from	pls_ocorrencia b,
		pls_ocorrencia_benef a
	where	a.nr_seq_ocorrencia = b.nr_sequencia
	and	b.ie_glosar_pagamento = 'S'
	and	b.ie_glosar_faturamento = 'S'
	and	a.nr_seq_conta_mat = nr_seq_conta_mat_p
	and	a.ie_situacao	= 'A'
	and	not exists (	SELECT	1
				from	w_pls_analise_glosa_ocor x
				where	x.nr_seq_analise = nr_seq_analise_p
				and	x.nr_seq_ocor_benef = a.nr_sequencia
				and	x.ie_situacao = 'I');
end if;

/* Se tiver alguma ocorrencia ativa que glose ambos, tem que barrar
se a geracao do pos nao for na finalizacao das contas, gera a mensagem drquadros 16/08/2013   O.S 632264*/
if (qt_ativa_ambas_w > 0) and
	((ie_glosar_pagamento_w = 'S' and ie_glosar_faturamento_w = 'N') or (ie_glosar_pagamento_w = 'N' and ie_glosar_faturamento_w = 'S')) and (coalesce(ie_finalizacao_p,'N') = 'N') and (ie_insere_glosa_w = 'S')	then

	CALL wheb_mensagem_pck.exibir_mensagem_abort(227245);
end if;

--OS 733738 tratamento conforme allinhado com o Sr. Rodrigo e o SR. Roni, quando da glosa parcial nao podera ser inserida uma glosa somente ocorrencia
if (ie_obriga_ocor_parcial_w = 'S') and (qt_liberar_p_w > 0) and (qt_ocorrencia_w = 0) then
	
	CALL wheb_mensagem_pck.exibir_mensagem_abort(282508);
	--'E necessario inserir uma ocorrencia para efetuar uma glosa parcial! #@#@');
end if;
if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then

	if (qt_liberar_p_w > 0) then
		select	max(qt_procedimento_imp)
		into STRICT	qt_apresentada_w
		from	pls_conta_proc
		where	nr_sequencia	= nr_seq_conta_proc_p;
		
		qt_glosa_w	:= qt_apresentada_w - qt_liberar_p_w;
	else
		qt_glosa_w	:= 0;
	end if;
elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then

	if (qt_liberar_p_w > 0) then
		select	max(qt_material_imp)
		into STRICT	qt_apresentada_w
		from	pls_conta_mat
		where	nr_sequencia	= nr_seq_conta_mat_p;
		
		qt_glosa_w	:= qt_apresentada_w - qt_liberar_p_w;
	else
		qt_glosa_w	:= 0;
	end if;
	
end if;
	
/*Buscar o parametro para a glosa nao liberar quantidade acima da apresentada. drquadros 650518*/

ie_permite_valor_maior_w := obter_parametro_funcao(	1365,21,nm_usuario_p);

ie_fluxo_adic_w := obter_param_usuario(1365, 26, null, nm_usuario_p, cd_estabelecimento_p, ie_fluxo_adic_w);

if (ie_glosar_pagamento_w = 'S') then
	/*------------------------- Se nao gerou nenhuma consistencia  ----------------------*/

	if (nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '') then
		nr_seq_item_w	:= nr_seq_proc_partic_p;
		ie_tipo_item_w	:= 'R';

		/* Limpar seq do proc, quando participante */

		nr_seq_conta_proc_w	:= null;

		begin
			select	b.nr_seq_conta,
				coalesce(a.vl_apresentado,a.vl_calculado),
				a.vl_calculado,
				coalesce(a.vl_apresentado,a.vl_calculado),
				b.cd_procedimento,
				b.ie_origem_proced,
				b.qt_procedimento_imp
			into STRICT	nr_seq_conta_w,
				vl_apresentado_w,
				vl_calculado_w,
				vl_unitario_apres_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				qt_procedimento_imp_w
			from	pls_conta_proc b,
				pls_proc_participante a
			where	a.nr_seq_conta_proc = b.nr_sequencia
			and	a.nr_sequencia	= nr_seq_proc_partic_p;
		exception
		when others then
			nr_seq_conta_w		:= null;
			vl_apresentado_w	:= null;
			vl_calculado_w		:= null;
			vl_unitario_apres_w	:= null;
		end;

		qt_item_w := qt_procedimento_imp_w;
		vl_unitario_calc_w := dividir_sem_round(vl_calculado_w,qt_procedimento_imp_w);
		
		/*se a quantidade liberada for maior que a apresentada e o parametro nao permitir lanca a mensagem*/

		if (coalesce(ie_permite_valor_maior_w,'N') = 'N') and (qt_procedimento_imp_w	< qt_liberar_p_w) then
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(260655);
		end if;
	
	elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
	
		nr_seq_item_w		:= nr_seq_conta_proc_p;
		nr_seq_conta_proc_w	:= nr_seq_conta_proc_p;
		ie_tipo_item_w	:= 'P';
		
		select	max(a.nr_seq_conta),
			max(a.ie_valor_base),
			max(a.vl_procedimento_imp),
			max(a.vl_procedimento),
			max(a.vl_pag_medico_conta),
			max(a.vl_unitario_imp),
			max(a.qt_procedimento_imp),
			max(a.qt_procedimento),
			max(a.cd_procedimento),
			max(a.ie_origem_proced)
		into STRICT	nr_seq_conta_w,
			ie_valor_base_w,
			vl_apresentado_w,
			vl_calculado_w,
			vl_pag_medico_conta_w,
			vl_unitario_apres_w,
			qt_procedimento_imp_w,
			qt_procedimento_w,
			cd_procedimento_w,
			ie_origem_proced_w
		from	pls_conta_proc a
		where	a.nr_sequencia = nr_seq_conta_proc_p;

		if (coalesce(qt_liberar_p::text, '') = '')	then
			qt_liberar_p_w := 0;
		end if;
		
		vl_unitario_calc_w := dividir_sem_round(vl_calculado_w,qt_procedimento_imp_w);
		qt_item_w := qt_procedimento_imp_w;
		
		/*se a quantidade liberada for maior que a apresentada e o parametro nao permitir lanca a mensagem*/

		if (coalesce(ie_permite_valor_maior_w,'N') = 'N') and (qt_procedimento_imp_w	< qt_liberar_p_w) then
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(260655);
		end if;
	
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
	
		nr_seq_item_w	:= nr_seq_conta_mat_p;
		ie_tipo_item_w	:= 'M';
		
		select	max(a.nr_seq_conta),
			max(a.ie_valor_base),
			max(a.vl_material_imp),
			max(a.vl_material),
			max(a.vl_unitario_imp),
			max(a.qt_material_imp),
			max(a.qt_material),
			max(a.nr_seq_material)
		into STRICT	nr_seq_conta_w,
			ie_valor_base_w,
			vl_apresentado_w,
			vl_calculado_w,
			vl_unitario_apres_w,
			qt_material_imp_w,
			qt_material_w,
			nr_seq_material_w
		from	pls_conta_mat a
		where	a.nr_sequencia	= nr_seq_conta_mat_p;

		if (coalesce(qt_liberar_p::text, '') = '')	then
		
			qt_liberar_p_w := 0;
		end if;
		
		qt_item_w	:= qt_material_imp_w;
		
		/*se a quantidade liberada for maior que a apresentada e o parametro nao permitir lanca a mensagem*/

		if (coalesce(ie_permite_valor_maior_w,'N') = 'N') and (qt_material_imp_w < qt_liberar_p_w) then
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(260655);
		end if;

		vl_unitario_calc_w := dividir_sem_round(vl_calculado_w,qt_material_imp_w);
		
	elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
	
		ie_item_w := 'N';
		nr_seq_conta_w	:= nr_seq_conta_p;
	end if;

	if	((qt_liberar_p_w mod 1) != 0) then
		if (pls_obter_permite_qtd_gl_frac(cd_procedimento_w,ie_origem_proced_w,nr_seq_material_w) = 'S') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(237853);
		end if;
	end if;
	
	--OS 733738 tratamento conforme allinhado com o Sr. Rodrigo e o SR. Roni, quando da glosa parcial nao podera ser inserida uma glosa somente ocorrencia
	if (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then	
		-- Inserir as novas glosas 
		open c01;
		loop
		fetch c01 into
			nr_seq_ocorrencia_w,
			nr_seq_motivo_glosa_w,
			nr_seq_w_ocor_w,
			ie_reativacao_w,
			nr_seq_conta_glosa_w,
			nr_seq_ocor_benef_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			nr_seq_ocor_glosa_existe_w := null;
			nr_seq_ocor_benef_existe_w:= null;
			-- OS 649043 - apenas as contas medicas cuja origem seja "Importacao do A500".
			if (ie_origem_conta_w = 'A') then
				-- OS 625925 / 42338 - WCBERNARDINO
				select	max(a.nr_seq_motivo_ptu)
				into STRICT	nr_seq_mot_quest_w
				from	pls_acao_glosa_tiss	a
				where	a.nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w
				and	a.ie_situacao		= 'A';
				
				if (coalesce(nr_seq_mot_quest_w::text, '') = '') then
					select	max(a.nr_seq_motivo_ptu)
					into STRICT	nr_seq_mot_quest_w
					from	pls_ocorrencia	a
					where	a.nr_sequencia	= nr_seq_ocorrencia_w
					and	a.ie_situacao	= 'A';
				end if;
				
				if (nr_seq_mot_quest_w IS NOT NULL AND nr_seq_mot_quest_w::text <> '') then
					select	max(cd_motivo)
					into STRICT	cd_motivo_w
					from	ptu_motivo_questionamento
					where	nr_sequencia = nr_seq_mot_quest_w;
					
					if (cd_motivo_w = '98') and (coalesce(trim(both ds_parecer_p)::text, '') = '') then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(257367);
					end if;
				end if;
			end if;
			
			if (nr_seq_ocorrencia_w IS NOT NULL AND nr_seq_ocorrencia_w::text <> '') then
				ie_tipo_ocor_w	:= 6;

				if (ie_item_w = 'N') then
				
					select 	max(nr_sequencia)
					into STRICT	nr_seq_ocor_benef_existe_w
					from	pls_ocorrencia_benef
					where	nr_seq_ocorrencia = nr_seq_ocorrencia_w
					and	nr_seq_conta	  = nr_seq_conta_p
					and	coalesce(nr_seq_conta_proc::text, '') = ''
					and	coalesce(nr_seq_conta_mat::text, '') = '';

				elsif (ie_tipo_item_w	= 'P')	then
					
					select 	max(nr_sequencia)
					into STRICT	nr_seq_ocor_benef_existe_w
					from	pls_ocorrencia_benef
					where	nr_seq_ocorrencia = nr_seq_ocorrencia_w
					and	nr_seq_conta_proc = nr_seq_conta_proc_p
					and	coalesce(nr_seq_proc_partic::text, '') = '';

				elsif (ie_tipo_item_w = 'M')	then

					select 	max(nr_sequencia)
					into STRICT	nr_seq_ocor_benef_existe_w
					from	pls_ocorrencia_benef
					where	nr_seq_ocorrencia = nr_seq_ocorrencia_w
					and	nr_seq_conta_mat = nr_seq_conta_mat_p;

				end if;
				
				select 	count(1)
				into STRICT	qt_grupo_ocor_w
				from	pls_ocorrencia_benef c,
					pls_grupo_auditor b,
					pls_analise_glo_ocor_grupo a
				where	a.nr_seq_grupo		= b.nr_sequencia
				and	a.nr_seq_ocor_benef 	= c.nr_sequencia
				and	a.nr_seq_analise	= nr_seq_analise_p
				and	a.nr_seq_ocor_benef 	= nr_seq_ocor_benef_existe_w
				and	b.nr_sequencia 		= nr_seq_grupo_atual_p
				and	((a.ie_fluxo_adic	= 'N') or (coalesce(a.ie_fluxo_adic::text, '') = ''));
				
				select 	count(1)
				into STRICT	qt_total_grupo_w
				from	pls_ocorrencia_benef c,
					pls_grupo_auditor b,
					pls_analise_glo_ocor_grupo a
				where	a.nr_seq_grupo		= b.nr_sequencia
				and	a.nr_seq_ocor_benef 	= c.nr_sequencia
				and	a.nr_seq_analise	= nr_seq_analise_p
				and	a.nr_seq_ocor_benef 	= nr_seq_ocor_benef_existe_w
				and	((a.ie_fluxo_adic	= 'N') or (coalesce(a.ie_fluxo_adic::text, '') = ''));
				
				if (nr_seq_ocor_benef_existe_w IS NOT NULL AND nr_seq_ocor_benef_existe_w::text <> '') then
				
					select 	max(a.cd_ocorrencia),
						max(a.ds_ocorrencia)
					into STRICT	cd_ocorrencia_hist_w,
						ds_ocorrencia_w
					from	pls_ocorrencia		a,
						pls_ocorrencia_benef 	b
					where	a.nr_sequencia = b.nr_seq_ocorrencia
					and	b.nr_sequencia = nr_seq_ocor_benef_existe_w;

					ds_observacao_w	:= '[1] - Ocorrencia inserida: ' || cd_ocorrencia_hist_w || ' - ' || ds_ocorrencia_w;
				end if;

			elsif (nr_seq_motivo_glosa_w IS NOT NULL AND nr_seq_motivo_glosa_w::text <> '') then
			
				ie_tipo_ocor_w	:= 5;
				
				if (ie_item_w = 'N') then

					select 	max(a.nr_sequencia)
					into STRICT	nr_seq_ocor_glosa_existe_w
					from	pls_conta_glosa		a
					where	a.nr_seq_motivo_glosa 	= nr_seq_motivo_glosa_w
					and	a.nr_seq_conta	    	= nr_seq_conta_p
					and	coalesce(a.nr_seq_ocorrencia_benef::text, '') = ''
					and	coalesce(a.nr_seq_conta_proc::text, '') = ''
					and	coalesce(a.nr_seq_conta_mat::text, '') = ''
					and	coalesce(a.nr_seq_conta_pos_estab::text, '') = ''
					and	not exists (	SELECT 	1
								from 	pls_ocorrencia_benef x 
								where 	x.nr_seq_glosa = a.nr_sequencia
								and	x.nr_seq_conta = a.nr_seq_conta);

				elsif (ie_tipo_item_w	= 'P')	then

					select 	max(nr_sequencia)
					into STRICT	nr_seq_ocor_glosa_existe_w
					from	pls_conta_glosa
					where	nr_seq_motivo_glosa = nr_seq_motivo_glosa_w
					and	nr_seq_conta_proc   = nr_seq_conta_proc_p
					and	coalesce(nr_seq_proc_partic::text, '') = ''
					and	coalesce(nr_seq_conta_pos_estab::text, '') = '';

				elsif (ie_tipo_item_w = 'M')	then

					select 	max(nr_sequencia)
					into STRICT	nr_seq_ocor_glosa_existe_w
					from	pls_conta_glosa
					where	nr_seq_motivo_glosa = nr_seq_motivo_glosa_w
					and	nr_seq_conta_mat   = nr_seq_conta_mat_p
					and	coalesce(nr_seq_conta_pos_estab::text, '') = '';
				end if;
				
			end if;
			
			/*Tratamento realizado para reativacao da glosa / ocorrencia na analise*/

			nr_seq_ocor_glosa_existe_w := coalesce(nr_seq_ocor_benef_existe_w,nr_seq_ocor_glosa_existe_w);
		
			if (ie_reativacao_w = 'N') and (coalesce(nr_seq_ocor_glosa_existe_w::text, '') = '') then
			
				nr_seq_glosa_conta_w := pls_analise_inserir_glosa_item(	nr_seq_analise_p, nr_seq_conta_w, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_proc_partic_p, nr_seq_ocorrencia_w, nr_seq_motivo_glosa_w, 'N', cd_estabelecimento_p, nm_usuario_p, 'N', nr_seq_glosa_conta_w);
				
				if (nr_seq_ocorrencia_w IS NOT NULL AND nr_seq_ocorrencia_w::text <> '') then
				
					if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
					
						select	max(nr_sequencia)
						into STRICT	nr_seq_ocor_w
						from	pls_ocorrencia_benef
						where	nr_seq_ocorrencia = nr_seq_ocorrencia_w
						and	nr_seq_conta_proc = nr_seq_conta_proc_p;
						
					elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
					
						select	max(nr_sequencia)
						into STRICT	nr_seq_ocor_w
						from	pls_ocorrencia_benef
						where	nr_seq_ocorrencia = nr_seq_ocorrencia_w
						and	nr_seq_conta_mat = nr_seq_conta_mat_p;
					end if;
					
					CALL pls_gerencia_dados_ocor_pck.pls_atualizar_glosa_fat(nr_seq_ocor_w,null,qt_glosa_w);
				end if;
			else
				/*Tratamento para reativacao de ocorrencias */

				nr_seq_glosa_conta_w	:= null;
				
				if (ie_tipo_ocor_w = 5) then
					nr_seq_conta_glosa_w := nr_seq_ocor_glosa_existe_w;
				elsif (ie_tipo_ocor_w = 6) then
					select	max(a.nr_seq_glosa)
					into STRICT	nr_seq_conta_glosa_w
					from	pls_ocorrencia_benef a
					where	a.nr_sequencia = nr_seq_ocor_glosa_existe_w;
						
					if (coalesce(nr_seq_conta_glosa_w::text, '') = '') then

						select	max(a.nr_sequencia)
						into STRICT	nr_seq_conta_glosa_w
						from	pls_conta_glosa a
						where	a.nr_seq_ocorrencia_benef = nr_seq_ocor_glosa_existe_w;
					end if;
				end if;
				
				select	max(a.nr_sequencia),
					max(a.nr_seq_conta_proc),
					max(a.nr_seq_conta_mat)
				into STRICT	nr_seq_conta_glosa_w,
					nr_seq_proc_glosa_w,
					nr_seq_mat_glosa_w
				from	pls_conta_glosa a
				where	a.nr_sequencia = nr_seq_conta_glosa_w;
				
				if (coalesce(nr_seq_proc_glosa_w::text, '') = '') and (coalesce(nr_seq_mat_glosa_w::text, '') = '') then
					
					nr_seq_glosa_conta_w	:= nr_seq_conta_glosa_w;
				else
					nr_seq_glosa_conta_w	:= null;
				end if;
				
				/*Tratamento realizado para ativar a ocorrencia se o auditor estiver lancando uma igual a que ja existe. O.S  582854 Demitrius*/

				if (nr_seq_ocor_glosa_existe_w IS NOT NULL AND nr_seq_ocor_glosa_existe_w::text <> '') then
				
					/*Retirei o tratamento que existia aqui dgkorz, qualquer coisa falar comigo antes de efetuar qualquer alteracao*/

					if (ie_tipo_ocor_w = 6) then
						
						update	pls_ocorrencia_benef
						set	ie_situacao 	= 'A',
							ie_lib_manual	= 'S',
							ie_fluxo_adic	= pls_obter_se_fluxo_adic(ie_fluxo_adic_w,qt_grupo_ocor_w, qt_total_grupo_w),
							qt_glosa_fat	= qt_glosa_w
						where 	nr_sequencia = nr_seq_ocor_glosa_existe_w;
						
						update	pls_conta_glosa
						set 	ie_situacao  	= 'A',
							ie_lib_manual	= 'S',
							ie_fluxo_adic	= pls_obter_se_fluxo_adic(ie_fluxo_adic_w,qt_grupo_ocor_w, qt_total_grupo_w),
							qt_glosa_fat	= qt_glosa_w
						where	nr_seq_ocorrencia_benef	= nr_seq_ocor_glosa_existe_w;
							
						update	pls_conta_glosa
						set 	ie_situacao  	= 'A',
							ie_lib_manual	= 'S',
							ie_fluxo_adic	= pls_obter_se_fluxo_adic(ie_fluxo_adic_w,qt_grupo_ocor_w, qt_total_grupo_w),
							qt_glosa_fat	= qt_glosa_w
						where	nr_sequencia 	=(	SELECT	max(nr_seq_glosa)
										from	pls_ocorrencia_benef
										where	nr_sequencia = nr_seq_ocor_glosa_existe_w);
						
						if (ie_tipo_item_w = 'P') then
							select 	max(nr_sequencia)
							into STRICT	nr_seq_ocor_benef_existe_w
							from	pls_ocorrencia_benef
							where	nr_seq_ocorrencia = nr_seq_ocorrencia_w
							and	nr_seq_conta_proc = nr_seq_conta_proc_p
							and	(nr_seq_proc_partic IS NOT NULL AND nr_seq_proc_partic::text <> '');
							
							if (nr_seq_ocor_benef_existe_w IS NOT NULL AND nr_seq_ocor_benef_existe_w::text <> '') then
								update	pls_ocorrencia_benef
								set	ie_situacao 	= 'A',
									ie_lib_manual	= 'S',
									ie_fluxo_adic	= pls_obter_se_fluxo_adic(ie_fluxo_adic_w,qt_grupo_ocor_w, qt_total_grupo_w),
									qt_glosa_fat	= qt_glosa_w
								where 	nr_sequencia = nr_seq_ocor_benef_existe_w;
								
								update	pls_conta_glosa
								set 	ie_situacao  	= 'A',
									ie_lib_manual	= 'S',
									ie_fluxo_adic	= pls_obter_se_fluxo_adic(ie_fluxo_adic_w,qt_grupo_ocor_w, qt_total_grupo_w),
									qt_glosa_fat	= qt_glosa_w
								where	nr_seq_ocorrencia_benef	= nr_seq_ocor_benef_existe_w;
									
								update	pls_conta_glosa
								set 	ie_situacao  	= 'A',
									ie_lib_manual	= 'S',
									ie_fluxo_adic	= pls_obter_se_fluxo_adic(ie_fluxo_adic_w,qt_grupo_ocor_w, qt_total_grupo_w),
									qt_glosa_fat	= qt_glosa_w
								where	nr_sequencia 	=(	SELECT	max(nr_seq_glosa)
												from	pls_ocorrencia_benef
												where	nr_sequencia = nr_seq_ocor_benef_existe_w);
							end if;
						end if;
						
					elsif (ie_tipo_ocor_w = 5) then
						
							
						update	pls_conta_glosa
						set	ie_situacao 	= 'A',
							ie_lib_manual	= 'S',
							qt_glosa_fat	= qt_glosa_w
						where 	nr_sequencia = nr_seq_ocor_glosa_existe_w;

						update	pls_ocorrencia_benef
						set 	ie_situacao  	= 'A',
							ie_lib_manual	= 'S',
							qt_glosa_fat	= qt_glosa_w
						where	nr_seq_glosa in ( SELECT	nr_sequencia
									 from	pls_conta_glosa
									 where	nr_sequencia = nr_seq_ocor_glosa_existe_w);
									
						update	pls_ocorrencia_benef
						set 	ie_situacao  	= 'A',
							ie_lib_manual	= 'S',
							qt_glosa_fat	= qt_glosa_w
						where	nr_sequencia in ( SELECT	nr_seq_ocorrencia_benef
									 from	pls_conta_glosa
									 where	nr_sequencia = nr_seq_ocor_glosa_existe_w);
									
						if (ie_tipo_item_w = 'P') then
							select 	max(nr_sequencia)
							into STRICT	nr_seq_ocor_glosa_existe_w
							from	pls_conta_glosa
							where	nr_seq_motivo_glosa = nr_seq_motivo_glosa_w
							and	nr_seq_conta_proc   = nr_seq_conta_proc_p
							and	(nr_seq_proc_partic IS NOT NULL AND nr_seq_proc_partic::text <> '')
							and	coalesce(nr_seq_conta_pos_estab::text, '') = '';
							
							if (nr_seq_ocor_glosa_existe_w IS NOT NULL AND nr_seq_ocor_glosa_existe_w::text <> '') then
								update	pls_conta_glosa
								set	ie_situacao 	= 'A',
									ie_lib_manual	= 'S',
									qt_glosa_fat	= qt_glosa_w
								where 	nr_sequencia = nr_seq_ocor_glosa_existe_w;

								update	pls_ocorrencia_benef
								set 	ie_situacao  	= 'A',
									ie_lib_manual	= 'S',
									qt_glosa_fat	= qt_glosa_w
								where	nr_seq_glosa in ( SELECT	nr_sequencia
											 from	pls_conta_glosa
											 where	nr_sequencia = nr_seq_ocor_glosa_existe_w);
											
								update	pls_ocorrencia_benef
								set 	ie_situacao  	= 'A',
									ie_lib_manual	= 'S',
									qt_glosa_fat	= qt_glosa_w
								where	nr_sequencia in ( SELECT	nr_seq_ocorrencia_benef
											 from	pls_conta_glosa
											 where	nr_sequencia = nr_seq_ocor_glosa_existe_w);
							end if;
						end if;
					end if;

					insert into pls_hist_analise_conta(nr_sequencia,
								 nm_usuario,
								 dt_atualizacao,
								 nm_usuario_nrec,
								 dt_atualizacao_nrec,
								 nr_seq_analise,
								 nr_seq_conta_proc,
								 nr_seq_conta_mat,
								 nr_seq_proc_partic,
								 ie_tipo_historico,
								 ds_observacao,
								 nr_seq_grupo,
								 ds_call_stack)
							values (nextval('pls_hist_analise_conta_seq'),
								 nm_usuario_p,
								 clock_timestamp(),
								 nm_usuario_p,
								 clock_timestamp(),
								 nr_seq_analise_p,
								 nr_seq_conta_proc_p,
								 nr_seq_conta_mat_p,
								 nr_seq_proc_partic_p,
								 ie_tipo_ocor_w,
								 ds_observacao_w,
								 nr_seq_grupo_atual_p,
								 substr(dbms_utility.format_call_stack,1,4000));
				end if;

			end if;
			
			/* Francisco - 24/09/2012 - OS 498302  - Quando for glosa de conta, carregar para os itens*/
			
			if (nr_seq_glosa_conta_w IS NOT NULL AND nr_seq_glosa_conta_w::text <> '') and (ie_glosa_propagada_w = 'N') then
			
				CALL pls_propagar_glosa_conta(nr_seq_analise_p, nr_seq_glosa_conta_w, nr_seq_grupo_atual_p,
							 nr_seq_mot_liberacao_p, ds_parecer_p, ie_finalizacao_p,
							 cd_estabelecimento_p, nm_usuario_p);
				ie_glosa_propagada_w	:= 'S';
			end if;

			/* Se existir alguma ocorrencia para impedir o pagamento, o sistema nao deve olhar a acao de pagamento de outros itens */

			if (nr_seq_ocorrencia_w IS NOT NULL AND nr_seq_ocorrencia_w::text <> '')	and (ie_glosar_pagamento_w = 'N')		then

				select	coalesce(ie_glosar_faturamento,'N'),
					coalesce(ie_glosar_pagamento,'N')
				into STRICT 	ie_glosar_faturamento_w,
					ie_glosar_pagamento_w
				from	pls_ocorrencia
				where	nr_sequencia = nr_seq_ocorrencia_w;

			end if;

			end;
		end loop;
		close c01;

		/* Mudar situacao das ocorrencias e glosas conforme alterado no WDLG */

		CALL pls_analise_altera_sit_ocor(nr_seq_analise_p,nm_usuario_p);

		/* Consistir se ha pelo menos um motivo de glosa ativo/valido - Tem que ser feito depois de inserir as novas glosas*/

		if (nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '') then
		
			select	count(1)
			into STRICT	qt_1705_w
			from	tiss_motivo_glosa	b,
				pls_conta_glosa		a
			where	b.nr_sequencia		= a.nr_seq_motivo_glosa
			and (a.ie_situacao = 'A' 	or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_proc_partic	= nr_seq_proc_partic_p
			and	b.cd_motivo_tiss	= '1705';

			select	count(1)
			into STRICT	qt_registro_w
			from	tiss_motivo_glosa	b,
				pls_conta_glosa		a
			where	b.nr_sequencia		= a.nr_seq_motivo_glosa
			and (a.ie_situacao = 'A' 	or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_proc_partic	= nr_seq_proc_partic_p
			and	b.cd_motivo_tiss 	<> '1705';

			/* Verificar se o item ainda esta indefinido, dai nao pode glosar direto o partic */

			select	b.ie_status_pagamento
			into STRICT	ie_status_pagamento_w
			from	pls_conta_proc b,
				pls_proc_participante a
			where	a.nr_seq_conta_proc = b.nr_sequencia
			and	a.nr_sequencia	= nr_seq_proc_partic_p;

			if (ie_status_pagamento_w = 'I') then
				select	max(a.nr_identificador)
				into STRICT	nr_id_w
				from	w_pls_analise_item a
				where	a.nr_seq_analise	= nr_seq_analise_p
				and	a.nr_seq_proc_partic	= nr_seq_proc_partic_p;

				CALL wheb_mensagem_pck.exibir_mensagem_abort(214319,'NR_ID=' || nr_id_w, -20012);
			end if;
		elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		
			select	count(1)
			into STRICT	qt_1705_w
			from	tiss_motivo_glosa	b,
				pls_conta_glosa 	a
			where	b.nr_sequencia		= a.nr_seq_motivo_glosa
			and (a.ie_situacao = 'A' 	or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
			and	b.cd_motivo_tiss	= '1705';

			select	count(1)
			into STRICT	qt_registro_w
			from	tiss_motivo_glosa	b,
				pls_conta_glosa 	a
			where	b.nr_sequencia		= a.nr_seq_motivo_glosa
			and (a.ie_situacao = 'A' 	or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
			and	b.cd_motivo_tiss 	<> '1705';

		elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then

			select	count(1)
			into STRICT	qt_1705_w
			from	tiss_motivo_glosa	b,
				pls_conta_glosa 	a
			where	b.nr_sequencia		= a.nr_seq_motivo_glosa
			and (a.ie_situacao = 'A'	or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
			and	b.cd_motivo_tiss	= '1705';

			select	count(1)
			into STRICT	qt_registro_w
			from	tiss_motivo_glosa	b,
				pls_conta_glosa 	a
			where	b.nr_sequencia		= a.nr_seq_motivo_glosa
			and (a.ie_situacao = 'A' 	or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
			and	b.cd_motivo_tiss 	<> '1705';

		elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then

			select	count(1)
			into STRICT	qt_1705_w
			from	tiss_motivo_glosa	b,
				pls_conta_glosa 	a
			where	b.nr_sequencia		= a.nr_seq_motivo_glosa
			and (a.ie_situacao = 'A' 	or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_conta		= nr_seq_conta_p
			and	b.cd_motivo_tiss	= '1705';

			select	count(1)
			into STRICT	qt_registro_w
			from	tiss_motivo_glosa	b,
				pls_conta_glosa 	a
			where	b.nr_sequencia		= a.nr_seq_motivo_glosa
			and (a.ie_situacao = 'A' 	or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_conta		= nr_seq_conta_p
			and	b.cd_motivo_tiss 	<> '1705';
		end if;
		
		if (qt_registro_w = 0) and (ie_pre_analise_p = 'N') and (coalesce(ie_glosa_atend_p,'N') = 'N') and (coalesce(ie_finalizacao_p,'N') = 'N') then
			
			/* Obter id do item */

			select	min(nr_identificador)
			into STRICT	nr_id_w
			from	w_pls_analise_item a
			where	((a.nr_seq_conta_proc	= nr_seq_conta_proc_w or
				a.nr_seq_conta_mat	= nr_seq_conta_mat_p or
				a.nr_seq_proc_partic	= nr_seq_proc_partic_p) or (a.nr_seq_conta		= nr_seq_conta_p
				and	coalesce(a.nr_seq_proc_partic::text, '') = ''
				and	coalesce(a.nr_seq_conta_proc::text, '') = ''
				and	coalesce(a.nr_seq_conta_mat::text, '') = '')
				);

			if (qt_1705_w > 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(211294, 'NR_ID=' || nr_id_w);
			else
				CALL wheb_mensagem_pck.exibir_mensagem_abort(204573, 'NR_ID=' || nr_id_w);
			end if;
		end if;

		if (ie_valor_base_w = '1') then
			ie_tipo_liberacao_w	:= 'A';
			if (vl_unitario_apres_w > 0) then
				vl_unitario_w		:= vl_unitario_apres_w;
			else
				vl_unitario_w		:= dividir(vl_apresentado_w, qt_item_w);
				if (coalesce(vl_unitario_w,0) = 0) and (vl_unitario_calc_w > 0) then
					ie_tipo_liberacao_w	:= 'C';
					vl_base_w		:= vl_calculado_w;
					vl_unitario_w		:= vl_unitario_calc_w;
				end if;
			end if;	
			vl_base_w	:= vl_apresentado_w;
		else
			ie_tipo_liberacao_w	:= 'C';
			vl_base_w		:= vl_calculado_w;
			vl_unitario_w		:= vl_unitario_calc_w;
		end if;


		if (vl_base_w = 0) and (vl_apresentado_w > 0) then
			vl_base_w	:= vl_apresentado_w;
			vl_unitario_w	:= vl_unitario_apres_w;
		end if;

		vl_liberado_w	:= coalesce(qt_liberar_p_w,0) * vl_unitario_w;

			/* Atencao!! - Nao mudar esse tratamento sem antes falar comigo - Francisco 25/01/2013 */


			/* O valor de glosa e sempre com base no valor apresentado, independente do IE_VALOR_BASE
			O valor de glosa nunca pode ser superior ao apresentado e nem negativo*/
			if (vl_liberado_w > vl_apresentado_w) then
				vl_glosa_w	:= 0;
			elsif (vl_liberado_w < vl_apresentado_w) then
				vl_glosa_w	:= vl_apresentado_w - vl_liberado_w;
			else
				vl_glosa_w	:= vl_apresentado_w;
			end if;


			if (vl_calculado_w > vl_liberado_w) then
				vl_saldo_w	:= abs(vl_glosa_w);
			else
				vl_saldo_w	:= 0;
			end if;

		if (ie_glosar_pagamento_w = 'S')	then
			if (vl_glosa_w > 0) 	and (vl_liberado_w = 0) 	then
				ie_tipo_liberacao_w := 'G';
			end if;
		end if;
		
		/* Se nao estiver selecionada uma conta medica */

		if (ie_item_w = 'S') then
			/* Se nao foi informada a quantidade a liberar, deve glosar total o item */


			/* Francisco - 18/09/2012 - Deixar sempre pelo atualiza_conta_item, o glosar_item_conta dava alguns problemas

			/* Glosar o item com a quantidade definida */

			vl_liberado_w := pls_atualiza_conta_item(nr_seq_item_w, ie_tipo_item_w, null, /* Motivo de glosa */
						vl_unitario_w, vl_liberado_w, vl_glosa_w, vl_saldo_w, null /* vl prestador */
, coalesce(qt_liberar_p_w,0), null, /* Observacao da glosa */
 'A', /* Origem - Analise */
 cd_estabelecimento_p, nm_usuario_p, 'N' /* commit */
, null, 'N' /* conta inteira */, ie_tipo_liberacao_w, 'S' /* Conta auditoria */
, null, null, null, null, null, null);
		end if;

		/* Gravar fluxo de analise */

		CALL pls_analise_atual_fluxo_audit(	nr_seq_analise_p, nr_seq_conta_w, nr_seq_conta_proc_w,
						nr_seq_conta_mat_p, nr_seq_proc_partic_p, null,
						nr_seq_grupo_atual_p, nr_seq_mot_liberacao_p, ds_parecer_p,
						ie_finalizacao_p, ie_pre_analise_p, nm_usuario_p,
						'N', ie_tipo_glosa_w);
	end if;
end if;

if ( ie_glosar_faturamento_w = 'S') then

	nr_seq_conta_pos_w := null;

	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		begin
			select	a.nr_sequencia
			into STRICT	nr_seq_conta_pos_w
			from	pls_conta_pos_estabelecido a
			where	a.nr_seq_conta_proc = nr_seq_conta_proc_p
			and	(a.nr_seq_analise IS NOT NULL AND a.nr_seq_analise::text <> '')
			and	((ie_situacao		= 'A')or (coalesce(ie_situacao::text, '') = ''));
		exception
			when others then
			nr_seq_conta_pos_w	:= null;
		end;

	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		begin
			select	a.nr_sequencia
			into STRICT	nr_seq_conta_pos_w
			from	pls_conta_pos_estabelecido a
			where	a.nr_seq_conta_mat = nr_seq_conta_mat_p
			and	(a.nr_seq_analise IS NOT NULL AND a.nr_seq_analise::text <> '')
			and	((ie_situacao		= 'A')or (coalesce(ie_situacao::text, '') = ''));
		exception
			when others then
			nr_seq_conta_pos_w	:= null;
		end;	
	end if;

	if (nr_seq_conta_pos_w IS NOT NULL AND nr_seq_conta_pos_w::text <> '') then
		begin
			select	a.nr_sequencia
			into STRICT	nr_seq_analise_pos_w
			from	pls_analise_conta a
			where	a.nr_seq_analise_ref = nr_seq_analise_p
			and	a.ie_origem_analise = 2;
		exception
			when others then
			nr_seq_analise_pos_w	:= null;
		end;
		--necessario pasar o grupo auditor como nulo para que nao seja inserido dois fluxos ao glosar somente pos
		if (nr_seq_analise_pos_w IS NOT NULL AND nr_seq_analise_pos_w::text <> '') then
			CALL pls_analise_glosar_item_pos(	nr_seq_analise_pos_w, nr_seq_conta_p, nr_seq_conta_proc_p,
							nr_seq_conta_mat_p, nr_seq_conta_pos_w, qt_liberar_p,
							nr_seq_mot_liberacao_p, ds_parecer_p, cd_estabelecimento_p,
							null, ie_obriga_parecer_p, ie_obriga_ocorrencia_p,
							nm_usuario_p);
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(227172,'', -20012);
		end if;
	end if;

	/* Se glosou apenas faturamento */

	if (ie_glosar_pagamento_w = 'N') then
		/* Inserir glosa de pos tambem no pagamento */


		/* Inserir as novas glosas */
		
		open c01;
		loop
		fetch c01 into
			nr_seq_ocorrencia_w,
			nr_seq_motivo_glosa_w,
			nr_seq_w_ocor_w,
			ie_reativacao_w,
			nr_seq_conta_glosa_w,
			nr_seq_ocor_benef_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			if (ie_reativacao_w = 'N') then
				nr_seq_glosa_conta_w := pls_analise_inserir_glosa_item(	nr_seq_analise_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_proc_partic_p, nr_seq_ocorrencia_w, nr_seq_motivo_glosa_w, 'N', cd_estabelecimento_p, nm_usuario_p, 'N', nr_seq_glosa_conta_w);
			end if;
			if (nr_seq_ocorrencia_w IS NOT NULL AND nr_seq_ocorrencia_w::text <> '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_ocor_w
				from	pls_ocorrencia_benef
				where	nr_seq_ocorrencia 	= nr_seq_ocorrencia_w
				and (nr_seq_conta_proc	= nr_seq_conta_proc_p or nr_seq_conta_mat	= nr_seq_conta_mat_p);
				
				CALL pls_gerencia_dados_ocor_pck.pls_atualizar_glosa_fat(	nr_seq_ocor_w,null,qt_glosa_w);
			end if;
			end;
		end loop;
		close c01;
		/* Mudar situacao das ocorrencias e glosas conforme alterado no WDLG */

		CALL pls_analise_altera_sit_ocor(	nr_seq_analise_p,nm_usuario_p);
		/* Gravar fluxo de analise */

		CALL pls_analise_atual_fluxo_audit(	nr_seq_analise_p, nr_seq_conta_w, nr_seq_conta_proc_p,
						nr_seq_conta_mat_p, nr_seq_proc_partic_p, nr_seq_conta_pos_w,
						nr_seq_grupo_atual_p, nr_seq_mot_liberacao_p, ds_parecer_p,
						ie_finalizacao_p, ie_pre_analise_p, nm_usuario_p,
						'N', ie_tipo_glosa_w);
	end if;

end if;

--Gerar previa do pos caso o parametro estiver como S. Tem que fazer isso pois se o item ficar pendente, talvez o usuario nao consista a conta
if ( ie_glosar_faturamento_w = 'S' and ie_glosar_pagamento_w = 'S' and ie_gerar_previa_pos_w = 'S' ) then


	CALL pls_excluir_previa_pos(coalesce(nr_seq_conta_p, nr_seq_conta_w), 'T');
	
	select 	count(1)
	into STRICT	qt_reg_prev_w
	from	pls_conta_pos_estab_prev
	where	nr_seq_conta = nr_seq_conta_p
	and 	(nr_lote_contabil_prov IS NOT NULL AND nr_lote_contabil_prov::text <> '');
	
	if ( qt_reg_prev_w = 0) then
		CALL pls_gerar_valor_pos_estab(coalesce(nr_seq_conta_p, nr_seq_conta_w), nm_usuario_p, ie_geracao_pos_estabelecido_w, null, null,'P');
	end if;
end if;


/* Nao pode ter commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_glosar_item ( nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_proc_partic_p pls_proc_participante.nr_sequencia%type, qt_liberar_p bigint, nr_seq_mot_liberacao_p bigint, ds_parecer_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_grupo_atual_p bigint, ie_obriga_parecer_p text, ie_obriga_ocorrencia_p text, ie_finalizacao_p text, ie_pre_analise_p text, nm_usuario_p usuario.nm_usuario%type, ie_glosa_pos_estab_p text, ie_obriga_ocor_parcial_p text default 'S', ie_glosa_atend_p text default 'N') FROM PUBLIC;

