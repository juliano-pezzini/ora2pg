-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_atualiza_qtd_proc_dia ( nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w		bigint;
nr_atendimento_w	bigint;
qt_dias_internado_w	bigint := 0;
dt_entrada_w		timestamp;
dt_alta_w		timestamp;
dt_inicio_conta_w	timestamp;
dt_fim_conta_w		timestamp;
dt_inicio_w		timestamp;
dt_fim_w		timestamp;
cd_motivo_cobranca_w	sus_aih_unif.cd_motivo_cobranca%type := 0;
cd_estabelecimento_w	sus_aih_unif.cd_estabelecimento%type;
qt_hosp_dia_w		bigint := 0;
dt_procedimento_w	procedimento_paciente.dt_procedimento%type;
cd_convenio_w		conta_paciente.cd_convenio_parametro%type;
cd_categoria_w		conta_paciente.cd_categoria_parametro%type;
				
C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_atendimento, 
		dt_procedimento 
	from	procedimento_paciente 
	where	nr_interno_conta = nr_interno_conta_p 
	and	Sus_Obter_Se_Detalhe_Proc(cd_procedimento,ie_origem_proced,'007',dt_procedimento) > 0 
	and	coalesce(cd_motivo_exc_conta::text, '') = '' 
	order by 1;				
					 

BEGIN 
 
begin 
select	coalesce(a.cd_motivo_cobranca,0), 
	coalesce(b.cd_estabelecimento,0), 
	coalesce(b.cd_convenio_parametro,0), 
	coalesce(b.cd_categoria_parametro,'0') 
into STRICT	cd_motivo_cobranca_w, 
	cd_estabelecimento_w, 
	cd_convenio_w, 
	cd_categoria_w 
from	sus_aih_unif a, 
	conta_paciente b 
where	a.nr_interno_conta = b.nr_interno_conta 
and	b.nr_interno_conta = nr_interno_conta_p  LIMIT 1;
exception 
when others then 
	cd_motivo_cobranca_w 	:= 0;
	cd_estabelecimento_w 	:= 0;
	cd_convenio_w		:= 0;
	cd_categoria_w		:= '0';	
end;
 
if (cd_motivo_cobranca_w = 0) then 
	begin 
	cd_motivo_cobranca_w := coalesce(sus_obter_motiv_cobr_conta(nr_interno_conta_p),0);	
	end;
end if;
 
dt_inicio_conta_w	:= trunc(obter_periodo_conta(nr_interno_conta_p,'PI'));
dt_fim_conta_w		:= trunc(obter_periodo_conta(nr_interno_conta_p,'PF'));
 
begin 
select	count(1) 
into STRICT	qt_hosp_dia_w 
from	atend_categoria_convenio 
where	cd_convenio = cd_convenio_w 
and	cd_categoria = cd_categoria_w 
and	nr_atendimento = nr_atendimento_w 
and	ie_regime_internacao = 2 
and	dt_inicio_conta_w between dt_inicio_vigencia and dt_final_vigencia;
exception 
when others then 
	qt_hosp_dia_w := 0;
end;
 
if (qt_hosp_dia_w = 0) then 
	begin 
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_sequencia_w, 
		nr_atendimento_w, 
		dt_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		 
		select	trunc(dt_entrada), 
			trunc(dt_alta)			 
		into STRICT	dt_entrada_w, 
			dt_alta_w			 
		from	atendimento_paciente 
		where	nr_atendimento = nr_atendimento_w;
		 
		if (trunc(dt_entrada_w) < trunc(dt_inicio_conta_w)) then 
			dt_inicio_w := dt_inicio_conta_w;
		else	 
			dt_inicio_w := dt_entrada_w;
		end if;
		 
		if (coalesce(dt_alta_w::text, '') = '') or (trunc(dt_fim_conta_w) < trunc(dt_alta_w)) then 
			dt_fim_w := dt_fim_conta_w;
		else	 
			dt_fim_w := dt_alta_w;
			 
		end if;
		 
		if (trunc(dt_inicio_w,'month') = trunc(dt_fim_w,'month')) then 
			begin 
			qt_dias_internado_w := obter_dias_entre_datas(dt_inicio_w,dt_fim_w); 	
			 
			if (cd_motivo_cobranca_w in (21,22,23,24,25,26,27,28,31,41,42,43,65,66,67)) then 
				qt_dias_internado_w := qt_dias_internado_w + 1;
			end if;
			 
			end;
		else 
			if (trunc(dt_procedimento_w,'month') = trunc(dt_inicio_w,'month')) then 
				begin 
				qt_dias_internado_w := obter_dias_entre_datas(dt_inicio_w,last_day(dt_inicio_w)) + 1;
				end;
			elsif (trunc(dt_procedimento_w,'month') = trunc(dt_fim_w,'month')) then 
				begin 
				qt_dias_internado_w := obter_dias_entre_datas(trunc(dt_fim_w,'month'),dt_fim_w);
				 
				if (cd_motivo_cobranca_w in (21,22,23,24,25,26,27,28,31,41,42,43,65,66,67)) then 
					qt_dias_internado_w := qt_dias_internado_w + 1;
				end if;
				end;
			end if;			
		end if;
		 
		if (trunc(dt_inicio_w) = trunc(dt_fim_w)) then 
			qt_dias_internado_w := 1;
		end if;
		 
		if (qt_dias_internado_w > 0) then 
			begin		 
			update	procedimento_paciente 
			set 	qt_procedimento = qt_dias_internado_w, 
				dt_atualizacao 	= clock_timestamp(), 
				nm_usuario	= nm_usuario_p 
			where	nr_sequencia = nr_sequencia_w;
			end;
		end if;	
		 
		end;
	end loop;
	close C01;
 
	commit;
	 
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_atualiza_qtd_proc_dia ( nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

