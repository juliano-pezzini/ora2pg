-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_requisicao ( nr_seq_requisicao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Realizar as consistencias referentes a requisicao, cobertura, limitacao, carencia, regras de ocorrencia, procedimentos e materiais.
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ x ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatorios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Cuidar com a performance
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/cd_usuario_plano_w		varchar(30);

dt_validade_carteira_w		timestamp;
dt_requisicao_w			timestamp;
dt_rescisao_w			timestamp;
dt_limite_utilizacao_w		timestamp;

ie_tipo_pagador_w		varchar(2);
ie_tipo_guia_w			varchar(255);
ie_tipo_processo_w		varchar(2);
ie_permite_w			varchar(2);
ie_tipo_intercambio_w		varchar(2);
ie_acomodacao_carencia_w	varchar(1);
ie_utiliza_nivel_w		varchar(2);

nr_seq_requisicao_mat_w		bigint;
nr_seq_requisicao_proc_w	bigint;
nr_seq_req_justific_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_uni_exec_w		bigint;
nr_seq_congenere_w		bigint;
nr_seq_guia_princ_w		bigint;
nr_seq_prest_exec_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_categoria_w		bigint;
nr_seq_auditoria_w		bigint;
nr_seq_regra_liminar_w		bigint;

qt_justificativa_w		varchar(255);
qt_dias_vencido_w		bigint;
qt_registros_w			bigint;
ie_cheque_w			varchar(1);

ie_carater_atendimento_w	varchar(1);
ie_acomodacao_sca_w		varchar(1);
cd_versao_tiss_w		pls_versao_tiss.cd_versao_tiss%type;
ie_indicacao_acidente_w		pls_requisicao_diagnostico.ie_indicacao_acidente%type;
ie_origem_solic_w		pls_requisicao.ie_origem_solic%type;
ie_evento_w			varchar(2);
nr_seq_protocolo_atend_w	pls_protocolo_atendimento.nr_sequencia%type;
nr_protocolo_w			pls_atendimento.nr_protocolo_atendimento%type;
nr_seq_atend_pls_w		pls_atendimento.nr_sequencia%type;
ie_tipo_guia_ref_w		pls_guia_plano.ie_tipo_guia%type;
nr_seq_guia_ref_w		pls_guia_plano.nr_sequencia%type;
ie_tipo_atendimento_w		pls_requisicao.ie_tipo_atendimento%type;
cd_guia_principal_w		pls_requisicao.cd_guia_principal%type;
ie_tipo_guia_princ_w		pls_guia_plano.ie_tipo_guia%type;
nr_seq_guia_principal_w		pls_requisicao.nr_seq_guia_principal%type;
ie_status_token_w		ptu_pedido_autorizacao.ie_status_token%type;
ie_valida_token_w		varchar(1);
ie_valida_token_scs_w		varchar(1);
nr_seq_leitura_w		pls_carteira_leitura.nr_sequencia%type;
cd_ausencia_val_benef_tiss_w	pls_requisicao.cd_ausencia_val_benef_tiss%type;
cd_validacao_benef_tiss_w	pls_requisicao.cd_validacao_benef_tiss%type;
ie_regime_atendimento_w		pls_conta.ie_regime_atendimento%type;

C01 CURSOR FOR
	SELECT	b.nr_sequencia		
	from	pls_requisicao		a,
		pls_requisicao_proc	b
	where	a.nr_sequencia		= b.nr_seq_requisicao
	and	a.nr_sequencia		= nr_seq_requisicao_p
	and	coalesce(cd_proc_inexistente::text, '') = ''
	and	coalesce(b.ie_cobranca_previa_servico,'N') <> 'S';

C02 CURSOR FOR
	SELECT	b.nr_sequencia		
	from	pls_requisicao		a,
		pls_requisicao_mat	b
	where	a.nr_sequencia		= b.nr_seq_requisicao
	and	a.nr_sequencia		= nr_seq_requisicao_p
	and	coalesce(cd_material_inexistente::text, '') = ''
	and	coalesce(b.ie_cobranca_previa_servico,'N') <> 'S';


BEGIN

/*pls_desfazer_requisicao_glosa(nr_seq_requisicao_p, nm_usuario_p);
pls_desfazer_ocorrencia(null, nr_seq_requisicao_p, null);*/


-- gerencia a atualizacao da tabela TM para estrutura de materiais
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS('Tasy', 'PLS_CONSISTIR_REQUISICAO', 'PLS_ESTRUTURA_MATERIAL_TM');
--Atualizando a tabela de grupo de procedimentos
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS('Tasy', 'PLS_CONSISTIR_REQUISICAO', 'PLS_GRUPO_SERVICO_TM');
-- gerencia a atualizacao da tabela TM para para grupos de materiais
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS('Tasy', 'PLS_CONSISTIR_REQUISICAO', 'PLS_GRUPO_MATERIAL_TM');

CALL pls_req_desfazer_consistir(nr_seq_requisicao_p, nm_usuario_p);

cd_versao_tiss_w := pls_obter_versao_tiss;
if (coalesce(cd_versao_tiss_w::text, '') = '') then
	cd_versao_tiss_w := '2.02.03';
end if;

begin
	select 	ie_tipo_processo,
		ie_tipo_intercambio
	into STRICT	ie_tipo_processo_w,
		ie_tipo_intercambio_w
	from	pls_requisicao
	where 	nr_sequencia = nr_seq_requisicao_p;
exception
when others then
	ie_tipo_processo_w	:= 'M';
	ie_tipo_intercambio_w	:= 'X';
end;

if (coalesce(ie_tipo_processo_w, 'M') <> 'I') then
	CALL pls_cancel_item_req_regra(nr_seq_requisicao_p, nm_usuario_p);
end if;

select	a.nr_seq_segurado,
	a.dt_requisicao,
	a.ie_tipo_guia,
	coalesce(a.nr_seq_plano, 0),
	a.nr_seq_prestador,
	a.nr_seq_uni_exec,
	a.nr_seq_prestador_exec,
	a.nr_seq_tipo_acomodacao,
	a.ie_carater_atendimento,
	a.ie_origem_solic,
	a.nr_seq_atend_pls,
	a.ie_tipo_atendimento,
	a.nr_seq_guia_principal,
	a.cd_ausencia_val_benef_tiss,
	a.cd_validacao_benef_tiss,
	lpad(coalesce(a.ie_regime_atendimento, '1'), 2, '0')
into STRICT	nr_seq_segurado_w,
	dt_requisicao_w,
	ie_tipo_guia_w,
	nr_seq_plano_w,
	nr_seq_prestador_w,
	nr_seq_uni_exec_w,
	nr_seq_prest_exec_w,
	nr_seq_tipo_acomodacao_w,
	ie_carater_atendimento_w,
	ie_origem_solic_w,
	nr_seq_atend_pls_w,
	ie_tipo_atendimento_w,
	nr_seq_guia_principal_w,
	cd_ausencia_val_benef_tiss_w,
	cd_validacao_benef_tiss_w,
	ie_regime_atendimento_w
from	pls_requisicao a
where	a.nr_sequencia = nr_seq_requisicao_p;

if (ie_origem_solic_w = 'E') then
	ie_evento_w := 'IG';
else
	ie_evento_w := 'CG';
end if;

CALL pls_gerar_mensagem_requisicao(	nr_seq_requisicao_p,
				ie_tipo_guia_w,
				ie_carater_atendimento_w,
				nm_usuario_p,
				cd_estabelecimento_p);


--Verificar se existe algum tipo de anexo na requisicao, se existir marcar o campo de anexo na PLS_REQUISICAO
CALL pls_atualizar_tipo_anexo_guia(null, nr_seq_requisicao_p, nm_usuario_p);

CALL pls_define_regra_retorno(null, nr_seq_requisicao_p, null, null, nm_usuario_p);

if (nr_seq_plano_w = 0) then
	CALL pls_gravar_requisicao_glosa(	'1024',
					nr_seq_requisicao_p,
					null,
					null,
					'',
					nm_usuario_p,
					nr_seq_prestador_w,
					cd_estabelecimento_p,
					null,
					null,
					ie_evento_w);
else
	open C01;
	loop
	fetch C01 into
		nr_seq_requisicao_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		CALL pls_consistir_requisicao_proc( nr_seq_requisicao_proc_w, cd_estabelecimento_p, nm_usuario_p);
		end;
	end loop;
	close C01;


	open C02;
	loop
	fetch C02 into	
		nr_seq_requisicao_mat_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		CALL pls_consistir_requisicao_mat(	nr_seq_requisicao_mat_w,
						cd_estabelecimento_p,
						nm_usuario_p);
		end;
	end loop;
	close C02;
end if;

qt_dias_vencido_w	:= pls_obter_dias_inadimplencia(nr_seq_segurado_w);
ie_cheque_w		:= pls_obter_se_cheque_devolucao(nr_seq_segurado_w);

begin
select	dt_rescisao,
	dt_limite_utilizacao,
	nr_seq_congenere
into STRICT	dt_rescisao_w,
	dt_limite_utilizacao_w,
	nr_seq_congenere_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	dt_rescisao_w		:= null;
	dt_limite_utilizacao_w	:= null;
	nr_seq_congenere_w	:= null;
end;

if (dt_limite_utilizacao_w IS NOT NULL AND dt_limite_utilizacao_w::text <> '') then
	dt_limite_utilizacao_w	:= fim_dia(dt_limite_utilizacao_w);
end if;

if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and
	(dt_limite_utilizacao_w IS NOT NULL AND dt_limite_utilizacao_w::text <> '' AND dt_requisicao_w > dt_limite_utilizacao_w) then
	CALL pls_gravar_requisicao_glosa(	'1014',
					nr_seq_requisicao_p,
					null,
					null,
					'',
					nm_usuario_p,
					nr_seq_prestador_w,
					cd_estabelecimento_p,
					null,
					null,
					ie_evento_w);
end if;



select	coalesce(max(cd_usuario_plano), '0')
into STRICT	cd_usuario_plano_w
from	pls_segurado_carteira
where	nr_seq_segurado	= nr_seq_segurado_w
and	trunc(dt_inicio_vigencia) <= trunc(clock_timestamp());

if (cd_usuario_plano_w = '0') then
	CALL pls_gravar_requisicao_glosa(	'1001',
					nr_seq_requisicao_p,
					null,
					null,
					'',
					nm_usuario_p,
					nr_seq_prestador_w,
					cd_estabelecimento_p,
					null,
					null,
					ie_evento_w);
else
	select	max(dt_validade_carteira)
	into STRICT	dt_validade_carteira_w
	from	pls_segurado_carteira
	where	cd_usuario_plano	= cd_usuario_plano_w
	and	nr_seq_segurado		= nr_seq_segurado_w;

	if	((fim_dia(dt_validade_carteira_w) < dt_requisicao_w) and (dt_validade_carteira_w IS NOT NULL AND dt_validade_carteira_w::text <> '')) then
		CALL pls_gravar_requisicao_glosa(	'1017',
						nr_seq_requisicao_p,
						null,
						null,
						'',
						nm_usuario_p,
						nr_seq_prestador_w,
						cd_estabelecimento_p,
						null,
						null,
						ie_evento_w);
	end if;
end if;

if (ie_tipo_guia_w = '1') and (coalesce(ie_tipo_intercambio_w, 'X') <> 'E') then
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_requisicao_diagnostico
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	
	if (qt_registros_w = 0) then
		CALL pls_gravar_requisicao_glosa(	'1508',
						nr_seq_requisicao_p,
						null,
						null,
						'',
						nm_usuario_p,
						nr_seq_prestador_w,
						cd_estabelecimento_p,
						null,
						null,
						ie_evento_w);
	end if;
end if;

--Utilizado o campo nr_seq_guia_princ_w para validacao dos tipos de guia 2/8 (SADT/Prorrogacao de Internacao)
begin
	select	nr_seq_guia_principal
	into STRICT	nr_seq_guia_princ_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_p;
exception
when others then
	nr_seq_guia_princ_w	:= 0;
end;

if (ie_tipo_guia_w	= '8') then
	if (coalesce(nr_seq_guia_princ_w, 0) = 0) then
		/* Nao existe o Numero Guia Principal informado */

		CALL pls_gravar_requisicao_glosa('1303', nr_seq_requisicao_p, null, null, '', nm_usuario_p, nr_seq_prestador_w, cd_estabelecimento_p, null, null, ie_evento_w);
	else
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_guia_ref_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_princ_w
		and	nr_seq_segurado	= nr_seq_segurado_w
		and (ie_status = '1' or ie_status = '2');

		if (nr_seq_guia_ref_w = 0) then
			/* Nao existe guia de autorizacao relacionada */

			CALL pls_gravar_requisicao_glosa('1404', nr_seq_requisicao_p, null, null,
			expressao_pck.obter_desc_expressao(969795), nm_usuario_p, nr_seq_prestador_w, cd_estabelecimento_p, null, null, ie_evento_w);
		else
			select	coalesce(max(ie_tipo_guia),'X')
			into STRICT	ie_tipo_guia_ref_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_ref_w;

			if (ie_tipo_guia_ref_w <> '1') then
				/* Nao existe guia de autorizacao relacionada */

				CALL pls_gravar_requisicao_glosa('1404', nr_seq_requisicao_p, null, null,
				expressao_pck.obter_desc_expressao(969795), nm_usuario_p, nr_seq_prestador_w, cd_estabelecimento_p, null, null, ie_evento_w);
			end if;
		end if;
	end if;
end if;


if (ie_tipo_guia_w = '2') then
	if (ie_tipo_atendimento_w = '7') or (coalesce(ie_regime_atendimento_w,9) = 3) then
		if (coalesce(nr_seq_guia_princ_w, 0) = 0) then
			/* Nao existe o Numero Guia Principal informado */

			CALL pls_gravar_requisicao_glosa('1303', nr_seq_requisicao_p, null, null, '', nm_usuario_p, nr_seq_prestador_w, cd_estabelecimento_p, null, null, ie_evento_w);
		else
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_guia_ref_w
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_princ_w
			and	nr_seq_segurado	= nr_seq_segurado_w
			and (ie_status = '1' or ie_status = '2');

			if (nr_seq_guia_ref_w = 0) then
				/* Nao existe guia de autorizacao relacionada */

				CALL pls_gravar_requisicao_glosa('1404', nr_seq_requisicao_p, null, null,
				expressao_pck.obter_desc_expressao(969795), nm_usuario_p, nr_seq_prestador_w, cd_estabelecimento_p, null, null, ie_evento_w);
			end if;
		end if;

	elsif (coalesce(ie_tipo_atendimento_w,'1') <> '7') and (coalesce(ie_regime_atendimento_w,9) <> 3) and (nr_seq_guia_princ_w <> 0) and (coalesce(ie_tipo_intercambio_w,'X')	<> 'E') then
		begin
			select	ie_tipo_guia
			into STRICT	ie_tipo_guia_princ_w
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_princ_w;
		exception
		when others then
			ie_tipo_guia_princ_w	:= null;
		end;

		if (ie_tipo_guia_princ_w	= '1') then
			--Codigo Tipo Guia Principal e Numero Guias Incompativeis
			CALL pls_gravar_requisicao_glosa('1302', nr_seq_requisicao_p, null, null,
			expressao_pck.obter_desc_expressao(969793), nm_usuario_p, nr_seq_prestador_w, cd_estabelecimento_p, null, null, ie_evento_w);
		end if;
	end if;
end if;

if	((ie_tipo_guia_w = '1') and (coalesce(ie_tipo_intercambio_w, 'X') <> 'E') and (coalesce(ie_origem_solic_w, 'X') <> 'E')) or
	(ie_tipo_guia_w = 8 AND ie_origem_solic_w = 'E') then

	select	count(1)
	into STRICT	qt_registros_w
	from	pls_plano_acomodacao
	where	nr_seq_plano		= nr_seq_plano_w
	and	nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w;

	if (qt_registros_w = 0) then
		select	coalesce(max(a.nr_seq_categoria),0)
		into STRICT	nr_seq_categoria_w
		from	pls_plano_acomodacao a
		where	a.nr_seq_plano	= nr_seq_plano_w
		and	exists (SELECT	1
				from	pls_regra_categoria	b
				where	b.nr_seq_categoria		= a.nr_seq_categoria
				and	b.nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w);

		if (nr_seq_categoria_w = 0) then
			/*aaschlote 05/03/2014 - 698622*/

			ie_acomodacao_sca_w := pls_obter_se_sca_acomodacao(nr_seq_segurado_w, nr_seq_tipo_acomodacao_w, dt_requisicao_w, ie_tipo_guia_w, ie_acomodacao_sca_w);

			if (ie_acomodacao_sca_w	= 'N') then
				/*aaschlote 02/04/2012 - 400228 - Verifica se na carencias do beneficiario possui acomodacao*/

				ie_acomodacao_carencia_w	:= pls_obter_carencia_cobr_acomod(	nr_seq_segurado_w,
													null,
													nr_seq_requisicao_p);

				if (ie_acomodacao_carencia_w = 'N') then
					CALL pls_gravar_requisicao_glosa(	'1413',
									nr_seq_requisicao_p,
									null,
									null,
									expressao_pck.obter_desc_expressao(969815),
									nm_usuario_p,
									nr_seq_prestador_w,
									cd_estabelecimento_p,
									null,
									null,
									ie_evento_w);
				end if;
			end if;
		end if;
	end if;
end if;

--- Glosa 1503 - Indicador de Acidente Invalido
if (ie_tipo_guia_w in ('1','2','3') and cd_versao_tiss_w >= '3.02.00') then
	select	max(ie_indicacao_acidente)
	into STRICT	ie_indicacao_acidente_w
	from	pls_requisicao_diagnostico
	where	nr_seq_requisicao = nr_seq_requisicao_p
	and	(ie_indicacao_acidente IS NOT NULL AND ie_indicacao_acidente::text <> '');

	if (coalesce(ie_indicacao_acidente_w,'X') <> '0' and
		 coalesce(ie_indicacao_acidente_w,'X') <> '1' and
		 coalesce(ie_indicacao_acidente_w,'X') <> '2' and
		 coalesce(ie_indicacao_acidente_w,'X') <> '9') and
		 ---Para as requisicoes geradas pelo WebService ( ie_origem_solic = 'E') , so devera consistir a Glosa se o tipo de guia for de internacao
		((ie_origem_solic_w <> 'E') or (ie_origem_solic_w = 'E' and ie_tipo_guia_w = 1)) and
		--- Para as requisicoes recebidas pelo intercambio e que sejam de complemento, nao deve consistir esta glosa pois a informacao nao existe no XML de envio.
		(not ((nr_seq_guia_principal_w IS NOT NULL AND nr_seq_guia_principal_w::text <> '') and (ie_tipo_processo_w = 'I') and (ie_tipo_intercambio_w = 'E'))) then
			--- Indicador de Acidente Invalido
			CALL pls_gravar_requisicao_glosa('1503', nr_seq_requisicao_p, null, null, expressao_pck.obter_desc_expressao(969789), nm_usuario_p, nr_seq_prestador_w, cd_estabelecimento_p, null, null, ie_evento_w);
	end if;
end if;

begin
	select	coalesce(ie_valida_token, 'N')
	into STRICT		ie_valida_token_scs_w
	from	pls_param_intercambio_scs;
exception
when others then
	ie_valida_token_scs_w := 'N';
end;


if (ie_valida_token_scs_w = 'S') then
	begin
		select	max(ie_status_token)
		into STRICT		ie_status_token_w
		from	ptu_pedido_compl_aut
		where	nr_seq_requisicao = nr_seq_requisicao_p;

		if (coalesce(ie_status_token_w::text, '') = '') then
			select	max(ie_status_token)
			into STRICT	ie_status_token_w
			from	ptu_pedido_autorizacao
			where	nr_seq_requisicao = nr_seq_requisicao_p;
		end if;
	exception
	when others then
		ie_status_token_w := '2';
	end;

	if (ie_status_token_w IS NOT NULL AND ie_status_token_w::text <> '') and (ie_status_token_w <> '2') then
		CALL pls_gravar_requisicao_glosa('3156', nr_seq_requisicao_p, null, null, null, nm_usuario_p, nr_seq_prestador_w, cd_estabelecimento_p, null, null, 'CG');
	end if;
end if;

begin
	select	coalesce(ie_valida_token, 'N')
	into STRICT		ie_valida_token_w
	from	pls_param_atend_geral;
exception
when others then
	ie_valida_token_w := 'N';
end;

if (ie_valida_token_w = 'S') and (coalesce(ie_origem_solic_w, 'X')  in ('E', 'W')) and (coalesce(ie_tipo_processo_w, 'M') <> 'I' ) then	
	begin
		select	max(nr_sequencia)
		into STRICT		nr_seq_leitura_w
		from	pls_carteira_leitura
		where	nr_seq_segurado = nr_seq_segurado_w;
	
		select	max(ie_status)
		into STRICT		ie_status_token_w
		from	pls_carteira_leitura_token
		where	nr_seq_leitura = nr_seq_leitura_w
		and		ds_token = cd_validacao_benef_tiss_w;
	exception
	when others then
		ie_status_token_w := '2';
	end;

	if	(ie_status_token_w IS NOT NULL AND ie_status_token_w::text <> '' AND ie_status_token_w <> '2') or
		((coalesce(cd_validacao_benef_tiss_w::text, '') = '') and (coalesce(cd_ausencia_val_benef_tiss_w::text, '') = '')) then
		CALL pls_gravar_requisicao_glosa('3156', nr_seq_requisicao_p, null, null, null, nm_usuario_p, nr_seq_prestador_w, cd_estabelecimento_p, null, null, 'CG');
	end if;
end if;

CALL pls_consistir_elegibilidade(	nr_seq_segurado_w,
				'CG',
				nr_seq_requisicao_p,
				'R',
				nr_seq_prestador_w,
				null,
				'',
				nm_usuario_p,
				cd_estabelecimento_p);

begin
select	CASE WHEN b.cd_cgc='' THEN  'PF'  ELSE 'PJ' END
into STRICT	ie_tipo_pagador_w
from	pls_contrato_pagador	b,
	pls_segurado		a
where	a.nr_sequencia		= nr_seq_segurado_w
and	a.nr_seq_pagador	= b.nr_sequencia;
exception
when others then
	ie_tipo_pagador_w	:= 'A';
end;

CALL pls_tiss_consistir_prestador(	nr_seq_requisicao_p,
				'R',
				'',
				nr_seq_prestador_w,
				null,
				'', 
				nm_usuario_p,
				cd_estabelecimento_p);
				
CALL pls_consistir_prest_exec_req(	nr_seq_requisicao_p,
				nr_seq_prest_exec_w,
				cd_estabelecimento_p,
				nm_usuario_p,
				null,
				null);

/*Retirado o tratamento pois ja passa o campo NR_SEQ_REQUISICAO e NR_SEQUENCIA da tabela PLS_REQUISICAO_PROC na rotina PLS_CONSISTIR_REQUISICAO_PROC e  estava chamando 2 veses a mesma rotina, ocorrendo o caso de aprovar 
e depois negar a solicitacao - Alteracao feita para a virada da Unimed Sao Jose do Rio Preto */

--pls_consiste_rede_atend(null,null,null,nr_seq_requisicao_p,null,null,null,null,nm_usuario_p,cd_estabelecimento_p,nr_seq_regra_w,ie_permite_w);


 -- Jucimara OS 921867 - Verificar se o prestador esta cadastrado com o produto da guia
CALL pls_consistir_prest_plano(	'CG',
				nr_seq_prestador_w,
				null,
				null,
				nr_seq_requisicao_p,
				null,
				null,
				null,
				cd_estabelecimento_p,
				nm_usuario_p);

CALL pls_consistir_cpt_requisicao(	nr_seq_requisicao_p,
				cd_estabelecimento_p,
				nm_usuario_p);

CALL pls_verifc_regra_exigencia_cid(	nr_seq_requisicao_p,
				null,
				cd_estabelecimento_p,
				nm_usuario_p);

/*aaschlore 20/08/2013 - Consistir o CID */

CALL pls_consistir_cid_guia_req(null,nr_seq_requisicao_p,nr_seq_prestador_w,cd_estabelecimento_p,nm_usuario_p);

/*pls_gerar_ocorrencia(nr_seq_segurado_w, nr_seq_requisicao_p, null,
			null, null, null,
			null, null, null,
			ie_tipo_guia_w, nr_seq_plano_w, 'A',
			qt_dias_vencido_w, ie_tipo_pagador_w, nr_seq_prestador_w,
			null,'AC','',
			'',nm_usuario_p, cd_estabelecimento_p,
			nr_seq_uni_exec_w,'N', null, null, null);*/
CALL pls_gerar_ocorrencia_aut(	nr_seq_segurado_w,
				nr_seq_requisicao_p,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				ie_tipo_guia_w,
				nr_seq_plano_w,
				qt_dias_vencido_w,
				ie_tipo_pagador_w,
				nr_seq_prestador_w,
				null,
				'AC',
				'',
				'',
				nm_usuario_p,
				cd_estabelecimento_p,
				nr_seq_congenere_w,
				ie_cheque_w,
				null);

CALL pls_gerar_ocor_aut_combinada(	nr_seq_segurado_w,
				null,
				nr_seq_requisicao_p,
				null,
				null,
				null,
				null,
				null,
				null,
				nm_usuario_p,
				cd_estabelecimento_p);

CALL pls_atualiza_estagio_req(nr_seq_requisicao_p,
			nm_usuario_p);

/*--Rotina para gerar historico das regras de excecao de ocorrencia em que a requisicao se encaixou
pls_gerar_hist_excec_ocor_aut(nr_seq_requisicao_p, nm_usuario_p);
*/
CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p,'L', expressao_pck.obter_desc_expressao(969785),null,nm_usuario_p);

commit;

/* Djavan 04/09/2012 OS491578 -  Conforme solicitado pelo Sr Eder Jhoney da Silva, colocada esta validacao apos o COMMIT pois se trata de uma validacao a parte*/


/*aaschlote 16/10/2013 656658 - Rotina generica para a consistencia da liminar juridica de ocorrencia*/

CALL pls_consist_lim_ocorr_req_guia(nr_seq_segurado_w,nr_seq_requisicao_p,null,ie_tipo_intercambio_w,cd_estabelecimento_p,nm_usuario_p);

/* Sestari OS 610495 - Regra de validacao da justificativa do prestador, deixar essa validacao SEMPRE no final da rotina, pois a mesma verifica se foi gerada ou nao analise da requisicao */

if (ie_origem_solic_w = 'P') then
	CALL pls_verif_regra_prest_just_web(null,nr_seq_requisicao_p,nm_usuario_p);
end if;

if (coalesce(nr_seq_atend_pls_w::text, '') = '') then
	/* Gerar e gravar o protocolo de atendimento */

	SELECT * FROM pls_gravar_protocolo_atend(	2, nr_seq_segurado_w, nr_seq_requisicao_p, null, null, null, null, null, null, null, cd_estabelecimento_p, nm_usuario_p, nr_seq_protocolo_atend_w, nr_protocolo_w) INTO STRICT nr_seq_protocolo_atend_w, nr_protocolo_w;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_requisicao ( nr_seq_requisicao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

