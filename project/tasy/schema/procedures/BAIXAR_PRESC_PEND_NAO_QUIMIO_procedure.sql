-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_presc_pend_nao_quimio ( qt_hora_adicional_p bigint, cd_motivo_baixa_p bigint, dt_parametro_p timestamp) AS $body$
DECLARE


/*Identica a JOB Baixar_Prescricao_Pendente, porém está não baixa as prescrições de quimioterapia*/

qt_dias_baixa_prescr_w		bigint := 15;
ie_baixa_especial_w		varchar(5);
nr_prescricao_w			bigint;
nr_seq_regra_w			bigint;
nm_usuario_w			varchar(15);
nm_usuario_regra_w		varchar(15);
cd_perfil_w			bigint;
ds_perfil_dest_w		varchar(4000);
nm_usuario_dest_w		varchar(4000);
ds_titulo_w			varchar(255);
ds_mensagem_w			varchar(255);
ds_comunicado_w			varchar(4000);
ds_lista_mat_w			varchar(4000);
ds_lista_proc_w			varchar(4000);
nr_seq_procedimento_w		integer;
nr_seq_material_w		integer;

c01 CURSOR FOR
SELECT	distinct nr_prescricao
from	(
	SELECT	b.nr_prescricao
	from	procedimento c,
		prescr_medica b,
		prescr_procedimento a
	where	a.nr_prescricao		= b.nr_prescricao
	and	c.cd_procedimento	= a.cd_procedimento
        and	c.ie_origem_proced	= a.ie_origem_proced
	and	(a.dt_prev_execucao	+ (coalesce(c.qt_hora_baixar_prescr,300) / 24) < dt_parametro_p)
	and	(b.dt_prescricao	+ ((b.nr_horas_validade + coalesce(c.qt_hora_baixar_prescr,300)) /24) < dt_parametro_p)
	and	a.cd_motivo_baixa	= 0
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	coalesce(a.ie_status_atend,1) < 30 /* ALterado o status de 35 para 30 conforme conversado com Bruna (Jonas)*/
	and	coalesce(b.ie_tipo_prescr_cirur,0) <> 2
	and 	obter_se_prescricao_quimio(b.nr_prescricao) = 'N'
  	and not exists (
		select	1
		from	procedimento_paciente x
		where	x.nr_prescricao = a.nr_prescricao
		and	x.nr_sequencia_prescricao = a.nr_sequencia)
	and not exists (
		select	1
		from	cirurgia w
		where	w.nr_prescricao = a.nr_prescricao)
	
union

	select	b.nr_prescricao
	from	prescr_medica b,
		prescr_material a
	where	a.nr_prescricao		= b.nr_prescricao
	and	((b.dt_prescricao	+ qt_dias_baixa_prescr_w) < dt_parametro_p)
	and	a.cd_motivo_baixa	= 0
	and 	obter_se_prescricao_quimio(b.nr_prescricao) = 'N'
	and not exists (
		select	1
		from	prescr_medica z
		where	a.nr_prescricao = z.nr_prescricao
		and	coalesce(z.ie_tipo_prescr_cirur,0) <> 2
		and	(z.nr_cirurgia IS NOT NULL AND z.nr_cirurgia::text <> ''))
	and not exists (
		select	1
		from	cirurgia w
		where	w.nr_prescricao = a.nr_prescricao)
	and not exists (
		select	1
		from	conclusao_recom_apae y
		where	y.nr_prescricao = a.nr_prescricao)
	) alias21;

c02 CURSOR FOR
SELECT	a.nr_sequencia
from	procedimento c,
	prescr_procedimento a
where	c.cd_procedimento = a.cd_procedimento
and	c.ie_origem_proced = a.ie_origem_proced
and	a.nr_prescricao	= nr_prescricao_w
and	(a.dt_prev_execucao + (coalesce(c.qt_hora_baixar_prescr,300) / 24) < dt_parametro_p)
and	coalesce(a.dt_cancelamento::text, '') = ''
and	a.cd_motivo_baixa = 0
and	coalesce(a.ie_status_atend,1) < 30 /* ALterado o status de 35 para 30 conforme conversado com Bruna (Jonas)*/
and	not exists (
			SELECT	1
			from	procedimento_paciente x
			where	x.nr_prescricao = a.nr_prescricao
			and	x.nr_sequencia_prescricao = a.nr_sequencia);

c03 CURSOR FOR
SELECT	a.nr_sequencia
from	prescr_material a
where	a.cd_motivo_baixa = 0
and	a.nr_prescricao	= nr_prescricao_w
and not exists (
		SELECT	1
		from	conclusao_recom_apae y
		where	y.nr_prescricao = a.nr_prescricao);

c04 CURSOR FOR
SELECT	nr_sequencia,
	ds_mensagem,
	ds_titulo,
	nm_usuario
from	rep_ci_baixa_item;

c05 CURSOR FOR
SELECT	cd_perfil
from	rep_ci_baixa_item_perfil
where	nr_seq_regra	= nr_seq_regra_w;

c06 CURSOR FOR
SELECT	substr(obter_usuario_pf(cd_pessoa_fisica),1,15)
from	rep_ci_baixa_item_usuario
where	nr_seq_regra	= nr_seq_regra_w;


BEGIN

select	coalesce(max(qt_dias_baixa_prescr),0)
into STRICT	qt_dias_baixa_prescr_w
from	parametros_farmacia
where	coalesce(qt_dias_baixa_prescr,0) > 0;

if (qt_dias_baixa_prescr_w = 0) then
	qt_dias_baixa_prescr_w := 15;
end if;

select	coalesce(max(ie_baixa_especial),'N')
into STRICT	ie_baixa_especial_w
from	tipo_baixa_prescricao
where	cd_tipo_baixa = cd_motivo_baixa_p;

open C01;
loop
fetch C01 into
	nr_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ds_lista_mat_w	:= '';
	ds_lista_proc_w	:= '';
	open C02;
	loop
	fetch C02 into
		nr_seq_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		update	prescr_procedimento
		set	cd_motivo_baixa 	= cd_motivo_baixa_p,
			dt_baixa_job		= clock_timestamp(),
			ie_status_execucao	= CASE WHEN ie_baixa_especial_w='S' THEN  'BE'  ELSE ie_status_execucao END
		where	nr_prescricao		= nr_prescricao_w
		and	nr_sequencia		= nr_seq_procedimento_w;

		if (coalesce(ds_lista_proc_w::text, '') = '') then
			ds_lista_proc_w	:= ' -'||substr(obter_desc_proced_prescr(nr_prescricao_w,nr_seq_procedimento_w),1,60);
		else
			ds_lista_proc_w	:= substr(ds_lista_proc_w||chr(13)||' -'||substr(obter_desc_proced_prescr(nr_prescricao_w,nr_seq_procedimento_w),1,60),1,4000);
		end if;

		end;
	end loop;
	close C02;

	open C03;
	loop
	fetch C03 into
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		update	prescr_material a
		set	cd_motivo_baixa = cd_motivo_baixa_p
		where	nr_prescricao	= nr_prescricao_w
		and	nr_sequencia	= nr_seq_material_w;

		if (coalesce(ds_lista_mat_w::text, '') = '') then
			ds_lista_mat_w	:= ' -'||substr(obter_desc_material_prescr(nr_prescricao_w,nr_seq_material_w),1,60);
		else
			ds_lista_mat_w	:= substr(ds_lista_mat_w||chr(13)||' -'||substr(obter_desc_material_prescr(nr_prescricao_w,nr_seq_material_w),1,60),1,4000);
		end if;

		end;
	end loop;
	close C03;

	if (ds_lista_mat_w IS NOT NULL AND ds_lista_mat_w::text <> '') or (ds_lista_proc_w IS NOT NULL AND ds_lista_proc_w::text <> '') then

		open C04;
		loop
		fetch C04 into
			nr_seq_regra_w,
			ds_mensagem_w,
			ds_titulo_w,
			nm_usuario_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			ds_perfil_dest_w	:= '';
			open C05;
			loop
			fetch C05 into
				cd_perfil_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				ds_perfil_dest_w := ds_perfil_dest_w || to_char(cd_perfil_w) || ',';
				end;
			end loop;
			close C05;
			nm_usuario_dest_w	:= '';
			open C06;
			loop
			fetch C06 into
				nm_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin
				nm_usuario_dest_w := nm_usuario_dest_w || nm_usuario_w || ',';
				end;
			end loop;
			close C06;

			if (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') or (ds_perfil_dest_w IS NOT NULL AND ds_perfil_dest_w::text <> '') then

				if (ds_lista_mat_w IS NOT NULL AND ds_lista_mat_w::text <> '') then
					--ds_lista_mat_w	:= substr('Mat/Med: '||chr(13)||ds_lista_mat_w||chr(13),1,4000);
					ds_lista_mat_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(297884)|| ' ' || chr(13)||ds_lista_mat_w||chr(13),1,4000);
				end if;

				if (ds_lista_proc_w IS NOT NULL AND ds_lista_proc_w::text <> '') then
					--ds_lista_proc_w	:= substr('Proc/Exame: '||chr(13)||ds_lista_proc_w,1,4000);
					ds_lista_proc_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(297886)|| ' ' || chr(13)||ds_lista_proc_w,1,4000);
				end if;

				/*ds_comunicado_w	:= substr(ds_mensagem_w||chr(13)||'Motivo baixa='||cd_motivo_baixa_p||' Data baixa='||to_char(sysdate,'dd/mm hh24:mi')||
							  chr(13)||ds_lista_mat_w||ds_lista_proc_w,1,4000);*/
				ds_comunicado_w	:= substr(ds_mensagem_w||chr(13)||WHEB_MENSAGEM_PCK.get_texto(297889, 'CD_MOTIVO_BAIXA='|| cd_motivo_baixa_p || ';' || 'DT_BAIXA='|| to_char(clock_timestamp(),'dd/mm hh24:mi'))||
							  chr(13)||ds_lista_mat_w||ds_lista_proc_w,1,4000);


				insert	into comunic_interna(
						nr_sequencia,
						dt_comunicado,
						ds_titulo,
						ds_comunicado,
						nm_usuario,
						nm_usuario_destino,
						dt_atualizacao,
						ie_geral,
						ie_gerencial,
						ds_perfil_adicional,
						dt_liberacao)
				values (
						nextval('comunic_interna_seq'),
						clock_timestamp(),
						ds_titulo_w||' ' ||wheb_mensagem_pck.get_texto(790884, 'NR_PRESCRICAO_P='|| nr_prescricao_w),
						ds_comunicado_w,
						nm_usuario_regra_w,
						nm_usuario_dest_w,
						clock_timestamp(),
						'N',
						'N',
						ds_perfil_dest_w,
						clock_timestamp());

			end if;

			end;
		end loop;
		close C04;

	end if;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_presc_pend_nao_quimio ( qt_hora_adicional_p bigint, cd_motivo_baixa_p bigint, dt_parametro_p timestamp) FROM PUBLIC;

