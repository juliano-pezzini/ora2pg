-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_iss_pmc_hsc (cd_estabelecimento_p bigint, nm_usuario_p text, dt_mesano_ref_p timestamp) AS $body$
DECLARE

 
nr_titulo_w    bigint;
nr_sequencia_w    bigint;
dt_emissao_w    timestamp;
vl_total_nota_w    double precision;
vl_tributo_w    double precision;
nr_cpf_w      varchar(11);
ds_razao_social_w    varchar(80);
ds_endereco_w    varchar(100);
nr_endereco_w    varchar(6);
ds_complemento_w    varchar(20);
ds_bairro_w    varchar(50);
ds_municipio_w    varchar(44);
sg_estado_w    pessoa_juridica.sg_estado%type;
cd_cep_w    varchar(8);
nr_seq_reg_w    integer;
tx_tributo_w    double precision;
ie_fora_municipio_w  varchar(1);
ie_tipo_registrO_w    varchar(1);
ie_tipo_documento_w  varchar(1);
ie_tipo_recolhimento_w  varchar(1);
ds_registro_w    varchar(1);
nr_nota_fiscal_w    varchar(20);
cd_serie_nf_w    varchar(5);
cd_item_lista_serv_w  varchar(4);
nr_inscricao_munic_w  varchar(10);
cd_cgc_w    varchar(14);

c01 CURSOR FOR 
SELECT	3									ie_tipo_registro, 
	CASE WHEN a.cd_cgc_emitente='76562198000169' THEN 3  ELSE 1 END 				ie_tipo_documento, 
	(SELECT	CASE WHEN count(*)=0 THEN 'N'  ELSE 'R' END  
	from	tributo t, 
		nota_fiscal_trib x 
	where	x.cd_tributo = t.cd_tributo 
	and	t.ie_tipo_tributo = 'ISS' 
	and	x.nr_sequencia = a.nr_sequencia)				ie_tipo_recolhimento, 
	'R'									ds_registro, 
	a.dt_emissao								dt_emissao, 
	a.nr_nota_fiscal							nr_nota_fiscal, 
	a.cd_serie_nf								cd_serie_nf, 
	CASE WHEN upper(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'CI'),1,80))=upper(substr(obter_dados_pf_pj(null,a.cd_cgc_emitente,'CI'),1,80)) THEN 'D'  ELSE 'F' END 	ie_fora_municipio, 
	(select max(coalesce(cd_darf, substr(obter_codigo_darf(x.cd_tributo, a.cd_estabelecimento, a.cd_cgc,a.cd_pessoa_fisica),1,100))) 
	from	tributo t, 
		nota_fiscal_trib x 
	where	x.cd_tributo = t.cd_tributo 
	and	t.ie_tipo_tributo = 'ISS' 
	and	x.nr_sequencia = a.nr_sequencia)				cd_item_lista_serv, 
	(select	coalesce(sum(b.vl_total_item_nf),0) 
	from	nota_fiscal_item b 
	where	a.nr_sequencia = b.nr_sequencia)				vl_total_item_nf, 
	0									vl_tributo, 
	/*OS-486497*/
 
	Elimina_Caracteres_Especiais(substr(CASE WHEN obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'IM')='' THEN obter_dados_pf(a.cd_pessoa_fisica,'ISS')  ELSE obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'IM') END ,1,10))		nr_inscricao_municipal, 
	/*Elimina_Caracteres_Especiais(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'IM'),1,10))		nr_inscricao_municipal,*/
 
	coalesce(a.cd_cgc,'00000000000000')						cd_cnpj, 
	coalesce(lpad(substr(Elimina_Caracteres_Especiais(obter_dados_pf(a.cd_pessoa_fisica,'CPF')),1,11),11,'0'),'00000000000') nr_cpf, 
	substr(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc),1,40)		ds_razao_social, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'R'),1,50)		ds_endereco, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'NR'),1,06)	nr_endereco, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'CO'),1,20)	ds_complemento, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'B'),1,50)		ds_bairro, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'CI'),1,44)	ds_municipio, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'UF'),1,02)	sg_estado, 
	substr(Elimina_Caracteres_Especiais(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'CEP')),1,08) cd_cep, 
	(select coalesce(max(x.tx_tributo),0) 
	from  tributo t, 
		nota_fiscal_trib x 
	where  x.cd_tributo = t.cd_tributo 
	and  t.ie_tipo_tributo = 'ISS' 
	and  x.nr_sequencia = a.nr_sequencia)					tx_tributo 
from	nota_fiscal a 
where	substr(obter_se_nota_entrada_saida(a.nr_sequencia),1,1) = 'E' 
and	trunc(a.dt_emissao,'month') = trunc(dt_mesano_ref_p,'month') 
and	length(a.nr_nota_fiscal) < 9 
and	a.ie_situacao = '1' 
and	a.cd_operacao_nf = 3 
and	(a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '') 
and	a.cd_estabelecimento  = cd_estabelecimento_p 

union
 
/* Repasse */
 
select	3   ie_tipo_registro, 
	CASE WHEN a.ie_tipo_titulo=11 THEN 3  ELSE 1 END   ie_tipo_documento, 
	CASE WHEN(select coalesce(max(x.vl_imposto),0)     from  tributo t,     titulo_pagar_imposto x     where  x.cd_tributo = t.cd_tributo     and  t.ie_tipo_tributo = 'ISS'     and  x.nr_titulo = a.nr_titulo)=0 THEN 'N'  ELSE 'R' END   ie_tipo_recolhimento, 
	'R'  ds_registro, 
	a.dt_emissao dt_emissao, 
	substr(coalesce(a.nr_documento,b.nr_repasse_terceiro),1,10) nr_nota_fiscal, 
	'' cd_serie_nf, 
	CASE WHEN upper(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'CI'),1,80))='CURITIBA' THEN 'D'  ELSE 'F' END  ie_fora_municipio, 
	'' cd_item_lista_serv, 
	a.vl_titulo, 
	0 vl_tributo, 
	/*OS-486497*/
 
	Elimina_Caracteres_Especiais(substr(CASE WHEN obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'IM')='' THEN obter_dados_pf(a.cd_pessoa_fisica,'ISS')  ELSE obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'IM') END ,1,10))		nr_inscricao_municipal, 
	'' cd_cgc, 
	coalesce(lpad(substr(Elimina_Caracteres_Especiais(obter_dados_pf(a.cd_pessoa_fisica,'CPF')),1,11),11,'0'),'00000000000') nr_cpf, 
	substr(obter_nome_pf_pj(a.cd_pessoa_fisica,null),1,60) ds_razao_social, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'R'),1,50) ds_endereco, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'NR'),1,06) nr_endereco, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'CO'),1,20) ds_complemento, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'B'),1,50) ds_bairro, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'CI'),1,44) ds_municipio, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'UF'),1,02) sg_estado, 
	substr(Elimina_Caracteres_Especiais(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'CEP')),1,08) cd_cep, 
	(select coalesce(max(x.pr_imposto),0) 
	from  tributo t, 
		titulo_pagar_imposto x 
	where	x.cd_tributo = t.cd_tributo 
	and	t.ie_tipo_tributo = 'ISS' 
	and	x.nr_titulo = a.nr_titulo) tx_tributo 
	FROM titulo_pagar a
LEFT OUTER JOIN repasse_terceiro_venc b ON (a.nr_titulo = b.nr_titulo)
WHERE trunc(a.dt_emissao, 'month') = trunc(dt_mesano_ref_p,'month') and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') and a.ie_tipo_titulo in (0,9,11,13) and a.ie_tipo_titulo <> 4 and ((coalesce(a.nr_seq_nota_fiscal::text, '') = '') or (obter_operacao_nota(a.nr_seq_nota_fiscal) = 3)) and a.ie_situacao <> 'C' and a.ie_origem_titulo <> 1 and ((a.ie_tipo_titulo = '9' and a.ie_situacao = 'L') or (a.ie_tipo_titulo <> '9')) and a.cd_estabelecimento  = cd_estabelecimento_p 
 
union
 
SELECT  3   ie_tipo_registro, 
	CASE WHEN a.ie_tipo_titulo=11 THEN 3  ELSE 1 END    ie_tipo_documento, 
	CASE WHEN(select coalesce(max(x.vl_imposto),0)     from  tributo t,     titulo_pagar_imposto x     where  x.cd_tributo = t.cd_tributo 	and  t.ie_tipo_tributo = 'ISS' 	and  x.nr_titulo = a.nr_titulo)=0 THEN 'N'  ELSE 'R' END   ie_tipo_recolhimento, 
	'R'  ds_registro, 
	a.dt_emissao dt_emissao, 
	substr(coalesce(a.nr_documento,b.nr_repasse_terceiro),1,10) nr_nota_fiscal, 
	'' cd_serie_nf, 
	CASE WHEN UPPER(SUBSTR(obter_dados_pf_pj(NULL,a.cd_cgc,'CI'),1,80))='CURITIBA' THEN 'D'  ELSE 'F' END  ie_fora_municipio, 
	'' cd_item_lista_serv, 
	a.vl_titulo, 
	0 vl_tributo, 
	/*OS-486497*/
 
	Elimina_Caracteres_Especiais(substr(CASE WHEN obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'IM')='' THEN obter_dados_pf(a.cd_pessoa_fisica,'ISS')  ELSE obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'IM') END ,1,10))		nr_inscricao_municipal, 
	/*Elimina_Caracteres_Especiais(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'IM'),1,10))		nr_inscricao_municipal,*/
 
	a.cd_cgc cd_cgc, 
	'' nr_cpf, 
	SUBSTR(obter_nome_pf_pj(NULL,a.cd_cgc),1,60) ds_razao_social, 
	SUBSTR(obter_dados_pf_pj(NULL,a.cd_cgc,'R'),1,50) ds_endereco, 
	SUBSTR(obter_dados_pf_pj(NULL,a.cd_cgc,'NR'),1,06) nr_endereco, 
	SUBSTR(obter_dados_pf_pj(NULL,a.cd_cgc,'CO'),1,20) ds_complemento, 
	SUBSTR(obter_dados_pf_pj(NULL,a.cd_cgc,'B'),1,50) ds_bairro, 
	SUBSTR(obter_dados_pf_pj(NULL,a.cd_cgc,'CI'),1,44) ds_municipio, 
	SUBSTR(obter_dados_pf_pj(NULL,a.cd_cgc,'UF'),1,02) sg_estado, 
	SUBSTR(Elimina_Caracteres_Especiais(obter_dados_pf_pj(NULL,a.cd_cgc,'CEP')),1,08) cd_cep, 
	CASE WHEN a.ie_tipo_titulo=9 THEN  	((SELECT coalesce(max(x.pr_imposto),0) 	FROM  tributo t, 	titulo_pagar_imposto x 	WHERE  x.cd_tributo = t.cd_tributo 	AND  t.ie_tipo_tributo = 'ISS' 	AND  x.nr_titulo = a.nr_titulo))  ELSE (SELECT (coalesce(max(x.pr_imposto),0)*100) 	FROM  tributo t, 	titulo_pagar_imposto x 	WHERE  x.cd_tributo = t.cd_tributo 	AND  t.ie_tipo_tributo = 'ISS' 	AND  x.nr_titulo = a.nr_titulo) END   tx_tributo 
FROM titulo_pagar a
LEFT OUTER JOIN repasse_terceiro_venc b ON (a.nr_titulo = b.nr_titulo)
WHERE trunc(a.dt_emissao, 'month') = trunc(dt_mesano_ref_p,'month') and a.ie_tipo_titulo in (0,9,11,13) and a.ie_tipo_titulo <> 4 and ((coalesce(a.nr_seq_nota_fiscal::text, '') = '') or (obter_operacao_nota(a.nr_seq_nota_fiscal) = 3)) AND (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') and a.ie_situacao <> 'C' and a.ie_origem_titulo <> 1 and ((a.ie_tipo_titulo = '9' and a.ie_situacao = 'L') or (a.ie_tipo_titulo <> '9')) AND a.cd_estabelecimento  = cd_estabelecimento_p ORDER BY 
	ie_tipo_registro, 
	ie_tipo_documento, 
	ds_razao_social;


BEGIN 
 
delete   
from  w_iss_pmc 
where  nm_usuario  = nm_usuario_p;
 
/*Header*/
 
insert  into  w_iss_pmc(nr_sequencia, 
  nm_usuario, 
  dt_atualizacao, 
  nm_usuario_nrec, 
  dt_atualizacao_nrec, 
  ie_tipo_registro, 
  ds_registro, 
  nr_inscricao_munic, 
  cd_cgc, 
  nr_cpf, 
  ds_razao_social, 
  ie_tipo_arquivo, 
  dt_mesano_referencia) 
SELECT  nextval('w_iss_pmc_seq'), 
  nm_usuario_p, 
  clock_timestamp(), 
  nm_usuario_p, 
  clock_timestamp(), 
  0, 
  'H', 
  substr(Elimina_Caracteres_Especiais(a.cd_inscricao_municipal),1,10), 
  a.cd_cgc, 
  null, 
  substr(obter_nome_pf_pj(null,a.cd_cgc),1,100), 
  'N', 
  dt_mesano_ref_p 
from  estabelecimento_v a 
where  cd_estabelecimento  = cd_estabelecimento_p;
 
nr_seq_reg_w  := 0;
 
/* Detalhes */
 
open c01;
loop 
fetch c01 into 
  ie_tipo_registro_w, 
  ie_tipo_documento_w, 
  ie_tipo_recolhimento_w, 
  ds_registro_w, 
  dt_emissao_w, 
  nr_nota_fiscal_w, 
  cd_serie_nf_w, 
  ie_fora_municipio_w, 
  cd_item_lista_serv_w, 
  vl_total_nota_w, 
  vl_tributo_w, 
  nr_inscricao_munic_w, 
  cd_cgc_w, 
  nr_cpf_w, 
  ds_razao_social_w, 
  ds_endereco_w, 
  nr_endereco_w, 
  ds_complemento_w, 
  ds_bairro_w, 
  ds_municipio_w, 
  sg_estado_w, 
  cd_cep_w, 
  tx_tributo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
  
  nr_seq_reg_w  := nr_seq_reg_w + 1;
 
  select  nextval('w_iss_pmc_seq') 
  into STRICT  nr_sequencia_w 
;
 
  insert  into  w_iss_pmc(nr_sequencia, 
    nm_usuario, 
    dt_atualizacao, 
    nm_usuario_nrec, 
    dt_atualizacao_nrec, 
    ie_tipo_registro, 
    ds_registro, 
    dt_emissao, 
    ie_tipo_documento, 
    vl_total_nota, 
    vl_tributo, 
    nr_cpf, 
    ds_razao_social, 
    ds_endereco, 
    nr_endereco, 
    ds_complemento, 
    ds_bairro, 
    ds_municipio, 
    ds_sigla_uf, 
    cd_cep, 
    nr_seq_reg, 
    tx_tributo, 
    ie_fora_municipio, 
    ie_tipo_recolhimento, 
    nr_inscricao_munic, 
    cd_item_lista_serv, 
    cd_cgc, 
    nr_nota_fiscal, 
    cd_serie_nf) 
  values (nr_sequencia_w, 
    nm_usuario_p, 
    clock_timestamp(), 
    nm_usuario_p, 
    clock_timestamp(), 
    ie_tipo_registro_w, 
    ds_registro_w, 
    dt_emissao_w, 
    ie_tipo_documento_w, 
    vl_total_nota_w, 
    vl_tributo_w, 
    nr_cpf_w, 
    ds_razao_social_w, 
    ds_endereco_w, 
    nr_endereco_w, 
    ds_complemento_w, 
    ds_bairro_w, 
    ds_municipio_w, 
    sg_estado_w, 
    cd_cep_w, 
    nr_seq_reg_w, 
    tx_tributo_w, 
    ie_fora_municipio_w, 
    ie_tipo_recolhimento_w, 
    nr_inscricao_munic_w, 
    cd_item_lista_serv_w, 
    cd_cgc_w, 
    substr(nr_nota_fiscal_w,1,10), 
    cd_serie_nf_w);
     
end loop;
close c01;
 
select  nextval('w_iss_pmc_seq') 
into STRICT  nr_sequencia_w
;
 
/* Trailler */
 
insert  into  w_iss_pmc(nr_sequencia, 
  nm_usuario, 
  dt_atualizacao, 
  nm_usuario_nrec, 
  dt_atualizacao_nrec, 
  ie_tipo_registro, 
  ds_registro, 
  qt_total_reg, 
  vl_tot_nf_emitida, 
  vl_tot_trib_emitida, 
  vl_tot_nf_recebida, 
  vl_tot_trib_recebida) 
SELECT  nr_sequencia_w, 
  nm_usuario_p, 
  clock_timestamp(), 
  nm_usuario_p, 
  clock_timestamp(), 
  4, 
  'T', 
  count(*), 
  coalesce(sum(CASE WHEN ds_registro='E' THEN vl_total_nota  ELSE 0 END ),0), 
  coalesce(sum(CASE WHEN ds_registro='E' THEN vl_tributo  ELSE 0 END ),0), 
  coalesce(sum(CASE WHEN ds_registro='R' THEN vl_total_nota  ELSE 0 END ),0), 
  coalesce(sum(CASE WHEN ds_registro='R' THEN vl_tributo  ELSE 0 END ),0) 
from  w_iss_pmc 
where  ie_tipo_registro <> '0' 
and  nm_usuario  = nm_usuario_p;
 
   
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_iss_pmc_hsc (cd_estabelecimento_p bigint, nm_usuario_p text, dt_mesano_ref_p timestamp) FROM PUBLIC;

