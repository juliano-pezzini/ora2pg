-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cp_generate_copy ( nr_atendimento_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_prescr_w         pe_prescricao.nr_sequencia%type;
dt_liberacao_plano_w          pe_prescricao.dt_liberacao_plano%type;

nr_sequencia_p_c_plan_w    	  patient_care_plan.nr_sequencia%type;
nr_sequencia_p_problem_w      patient_cp_problem.nr_sequencia%type;
nr_sequencia_p_cp_goal_w    	patient_cp_problem.nr_sequencia%type;
nr_seq_p_cp_goal_problem_w  	patient_cp_problem.nr_sequencia%type;
nr_seq_p_cp_indicator_w      	patient_cp_indicator.nr_sequencia%type;
nr_seq_p_cp_interv_plan_w    	patient_cp_interv_plan.nr_sequencia%type;
nr_seq_p_cp_intervention_w    patient_cp_intervention.nr_sequencia%type;

nr_sequencia_p_c_plan_new_w    	  patient_care_plan.nr_sequencia%type;
nr_sequencia_p_problem_new_w      patient_cp_problem.nr_sequencia%type;
nr_sequencia_p_cp_goal_new_w    	patient_cp_problem.nr_sequencia%type;
nr_seq_p_cp_goal_problem_new_w  	patient_cp_problem.nr_sequencia%type;
nr_seq_p_cp_indicator_new_w      	patient_cp_indicator.nr_sequencia%type;
nr_seq_p_cp_interv_plan_new_w    	patient_cp_interv_plan.nr_sequencia%type;
nr_seq_p_cp_intervention_new_w    	patient_cp_intervention.nr_sequencia%type;


qt_record_w		bigint;

--PATIENT_CARE_PLAN
c_pat_care_plan CURSOR FOR
SELECT 	*
from 	patient_care_plan
where 	nr_seq_prescr = nr_sequencia_prescr_w
and 	si_selected = 'Y'
and		coalesce(dt_end::text, '') = '';
		
--PATIENT_CP_PROBLEM			
c_pat_cp_problem CURSOR FOR
SELECT 	*
from 	patient_cp_problem
where 	nr_seq_pat_care_plan = nr_sequencia_p_c_plan_w
and 	si_selected = 'Y'
and		coalesce(dt_end::text, '') = '';

--PATIENT_CP_GOAL
c_pat_cp_goal CURSOR FOR
SELECT 	*
from 	patient_cp_goal
where 	nr_seq_pat_care_plan = nr_sequencia_p_c_plan_w
and 	si_selected = 'Y'
and		coalesce(nr_seq_pat_cp_problem::text, '') = ''
and		coalesce(dt_end::text, '') = '';

--PATIENT_CP_GOAL (for problems)	
c_pat_cp_goal_problem CURSOR FOR
SELECT 	*
from 	patient_cp_goal
where 	nr_seq_pat_cp_problem = nr_sequencia_p_problem_w
and 	si_selected = 'Y'
and		coalesce(dt_end::text, '') = '';

--INDICATOR
c_pat_cp_indicator CURSOR FOR
SELECT 	*
from 	patient_cp_indicator
where 	nr_seq_pat_cp_goal = nr_seq_p_cp_goal_problem_w
and 	si_selected = 'Y'
and		coalesce(dt_end::text, '') = '';


--PATIENT_CP_INTERV_PLAN
c_pat_cp_interv_plan CURSOR FOR
SELECT 	*
from 	patient_cp_interv_plan
where 	nr_seq_pat_cp_problem = nr_sequencia_p_problem_w
and 	si_selected = 'Y';

--PATIENT_CP_INTERVENTION
c_pat_cp_intervention CURSOR FOR
SELECT 	*
from 	patient_cp_intervention
where 	nr_seq_pat_cp_interv_plan = nr_seq_p_cp_interv_plan_w
and 	si_selected = 'Y';

--------------------------------------------------------------
	
BEGIN

select 	coalesce(dt_liberacao_plano, dt_liberacao)
into STRICT   	dt_liberacao_plano_w
from   	pe_prescricao
where	nr_sequencia = nr_seq_prescr_p;

select	count(1)
into STRICT	qt_record_w
from	patient_care_plan a
where	a.nr_seq_prescr = nr_seq_prescr_p
and		a.si_selected = 'Y';

if (coalesce(dt_liberacao_plano_w::text, '') = '') and (qt_record_w = 0) then
	select 	max(a.NR_SEQUENCIA)
	into STRICT	nr_sequencia_prescr_w
	from 	pe_prescricao a
	where 	(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	and 	coalesce(a.DT_SUSPENSAO::text, '') = ''
	and		a.nr_atendimento = nr_atendimento_p
	and		a.ie_situacao = 'A';

	-- PATIENT_CARE_PLAN
	
	delete from patient_care_plan
	where	nr_seq_prescr = nr_seq_prescr_p
	and		(dt_start IS NOT NULL AND dt_start::text <> '')
	and		coalesce(dt_end::text, '') = '';
	
	for r_c_pat_care_plan in c_pat_care_plan loop
		nr_sequencia_p_c_plan_w	:= r_c_pat_care_plan.nr_sequencia;
	
		select 	nextval('patient_care_plan_seq')
		into STRICT 	nr_sequencia_p_c_plan_new_w
		;
		
		insert into patient_care_plan(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_care_plan,
			nr_atendimento,
			dt_start,
			dt_end,
			dt_release,
			cd_pessoa_fisica,
			nr_seq_prescr,
			si_selected,
			ie_situacao
			)
		values (
			nr_sequencia_p_c_plan_new_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			r_c_pat_care_plan.nr_seq_care_plan,
			nr_atendimento_p,
			r_c_pat_care_plan.dt_start,
			r_c_pat_care_plan.dt_end,
			r_c_pat_care_plan.dt_release,
			r_c_pat_care_plan.cd_pessoa_fisica,
			nr_seq_prescr_p,
			r_c_pat_care_plan.si_selected,
			r_c_pat_care_plan.ie_situacao
			);
			
		--PATIENT_CP_PROBLEM	
		for r_c_pat_cp_problem in c_pat_cp_problem loop
			nr_sequencia_p_problem_w	:= r_c_pat_cp_problem.nr_sequencia;
		
			select 	nextval('patient_cp_problem_seq')
			into STRICT 	nr_sequencia_p_problem_new_w
			;	
			
			insert into patient_cp_problem(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_pat_care_plan,
				nr_seq_cp_problem,
				dt_start,
				dt_end,
				dt_release,
				si_selected
				)
			values (
				nr_sequencia_p_problem_new_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_p_c_plan_new_w,
				r_c_pat_cp_problem.nr_seq_cp_problem,
				r_c_pat_cp_problem.dt_start,
				r_c_pat_cp_problem.dt_end,
				r_c_pat_cp_problem.dt_release,
				r_c_pat_cp_problem.si_selected				
				);
				
			--PATIENT_CP_GOAL
			
			for r_c_pat_cp_goal_problem in c_pat_cp_goal_problem loop
				nr_seq_p_cp_goal_problem_w	:= r_c_pat_cp_goal_problem.nr_sequencia;
			
				select 	nextval('patient_cp_goal_seq')
				into STRICT 	nr_seq_p_cp_goal_problem_new_w
				;		
				
				insert into patient_cp_goal(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_pat_care_plan,
					nr_seq_cp_goal,
					dt_start,
					dt_end,
					dt_release,
					si_selected,
					nr_seq_pat_cp_problem
				)
				values (
					nr_seq_p_cp_goal_problem_new_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_p_c_plan_new_w,
					r_c_pat_cp_goal_problem.nr_seq_cp_goal,
					r_c_pat_cp_goal_problem.dt_start,
					r_c_pat_cp_goal_problem.dt_end,
					r_c_pat_cp_goal_problem.dt_release,
					r_c_pat_cp_goal_problem.si_selected,
					nr_sequencia_p_problem_new_w
				);
				
				--PATIENT_CP_INDICATOR
				
				for r_c_pat_cp_indicator in c_pat_cp_indicator loop	
					nr_seq_p_cp_indicator_w	:= r_c_pat_cp_indicator.nr_sequencia;
				
					select 	nextval('patient_cp_indicator_seq')
					into STRICT 	nr_seq_p_cp_indicator_new_w
					;	
				
					insert into patient_cp_indicator(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_cp_indicator,
						nr_seq_pat_care_plan,
						dt_start,
						dt_end,
						dt_release,
						si_selected,
						nr_seq_pat_cp_goal
					)
					values (
						nr_seq_p_cp_indicator_new_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						r_c_pat_cp_indicator.nr_seq_cp_indicator,
						nr_sequencia_p_c_plan_new_w,
						r_c_pat_cp_indicator.dt_start,
						r_c_pat_cp_indicator.dt_end,
						r_c_pat_cp_indicator.dt_release,
						r_c_pat_cp_indicator.si_selected,
						nr_seq_p_cp_goal_problem_new_w
					);		
				end loop;				
			end loop;	
			
			--PATIENT_CP_INTERV_PLAN
			
			for r_c_pat_cp_interv_plan in c_pat_cp_interv_plan loop	
				nr_seq_p_cp_interv_plan_w	:= r_c_pat_cp_interv_plan.nr_sequencia;
			
				select 	nextval('patient_cp_interv_plan_seq')
				into STRICT 	nr_seq_p_cp_interv_plan_new_w
				;
				
				insert into patient_cp_interv_plan(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_pat_care_plan,
					nr_seq_interv_plan,
					dt_start,
					dt_end,
					dt_release,
					si_selected,
					nr_seq_pat_cp_problem
					)
				values (
					nr_seq_p_cp_interv_plan_new_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_p_c_plan_new_w,
					r_c_pat_cp_interv_plan.nr_seq_interv_plan,
					r_c_pat_cp_interv_plan.dt_start,
					r_c_pat_cp_interv_plan.dt_end,
					r_c_pat_cp_interv_plan.dt_release,
					r_c_pat_cp_interv_plan.si_selected,
					nr_sequencia_p_problem_new_w					
				);
				
				--PATIENT_CP_INTERVENTION
				
				for r_c_pat_cp_intervention in c_pat_cp_intervention loop
					nr_seq_p_cp_intervention_w	:= r_c_pat_cp_intervention.nr_sequencia;
				
					select 	nextval('patient_cp_intervention_seq')
					into STRICT 	nr_seq_p_cp_intervention_new_w
					;
					
					insert into patient_cp_intervention(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_cp_intervention,
						nr_seq_pat_care_plan,
						dt_start,
						dt_end,
						dt_release,
						si_selected,
						nr_seq_pat_cp_interv_plan
					) values (
						nr_seq_p_cp_intervention_new_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						r_c_pat_cp_intervention.nr_seq_cp_intervention,
						nr_sequencia_p_c_plan_new_w,
						r_c_pat_cp_intervention.dt_start,
						r_c_pat_cp_intervention.dt_end,
						r_c_pat_cp_intervention.dt_release,
						r_c_pat_cp_intervention.si_selected,
						nr_seq_p_cp_interv_plan_new_w
					);				
				end loop;				
			end loop;			
		end loop;		

		--PATIENT_CP_GOAL
		
		for r_c_pat_cp_goal in c_pat_cp_goal loop
			nr_sequencia_p_cp_goal_w	:= r_c_pat_cp_goal.nr_sequencia;
		
			select 	nextval('patient_cp_goal_seq')
			into STRICT 	nr_sequencia_p_cp_goal_new_w
			;	
			
			insert into patient_cp_goal(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_pat_care_plan,
				nr_seq_cp_goal,
				dt_start,
				dt_end,
				dt_release,
				si_selected,
				nr_seq_pat_cp_problem
				)
			values (
				nr_sequencia_p_cp_goal_new_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_p_c_plan_new_w,
				r_c_pat_cp_goal.nr_seq_cp_goal,
				r_c_pat_cp_goal.dt_start,
				r_c_pat_cp_goal.dt_end,
				r_c_pat_cp_goal.dt_release,
				r_c_pat_cp_goal.si_selected,
				null
				);
		end loop;				
	end loop;		
end if;	

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cp_generate_copy ( nr_atendimento_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text) FROM PUBLIC;

