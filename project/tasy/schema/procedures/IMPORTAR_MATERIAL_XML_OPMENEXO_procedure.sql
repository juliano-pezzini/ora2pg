-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_material_xml_opmenexo ( cd_estabelecimento_p bigint, ie_atualizacao_p text, cd_material_externo_p text, cd_material_tasy_p text, ie_sistema_externo_p text, ds_material_p text, ds_reduzida_p text, ie_tipo_material_p text, cd_unidade_medida_compra_p text, cd_unidade_medida_estoque_p text, cd_unidade_medida_consumo_p text, cd_unidade_medida_solic_p text, ie_consignado_p text, ie_disponivel_mercado_p text, ie_obrig_via_aplicacao_p text, ie_receita_p text, ie_cobra_paciente_p text, ie_inf_ultima_compra_p text, ie_preco_compra_p text, ie_curva_abc_p text, qt_conv_compra_estoque_p bigint, qt_conv_estoque_consumo_p bigint, qt_minimo_multiplo_solic_p bigint, cd_classe_material_p bigint, ie_material_estoque_p text, ie_baixa_estoq_pac_p text, ie_requisicao_p text, ie_prescricao_p text, ie_padronizado_p text, ie_classif_custo_p text, ie_controla_serie_p text, cd_tabela_preco_p bigint, vl_preco_p text, nm_usuario_p text, cd_referencia_p text, nr_registro_anvisa_p text, dt_validade_reg_anvisa_p timestamp, nr_seq_fabric_p text, ds_fabricante_p text, cd_cnpj_p text, ie_situacao_p text, cd_material_tuss_p text, cd_material_p INOUT bigint, ds_erro_p INOUT text) AS $body$
DECLARE


nr_sequencia_w				bigint;
cd_moeda_w					bigint;
qt_existe_w					bigint;
qt_existe_cnpj_w			bigint;
ds_erro_w					varchar(4000);
ds_historico_w				varchar(4000);
nr_seq_fabric_w				bigint;
nr_sequencia_ww				bigint := 0;
nr_seq_imp_w				bigint;
qt_existe_cd_mat_ext_w		bigint;
qt_existe_preco_mat_w		bigint;
cd_estab_regra_w			varchar(255);
cd_estabelecimento_w		varchar(10);
cd_classe_material_w		integer;
ie_atualiza_tabela_w		varchar(1);
cd_tabela_preco_w			bigint;
ie_material_estoque_w		varchar(1);
ie_baixa_estoq_pac_w		varchar(1);
ie_padronizado_w			varchar(1);
nr_seq_marca_w				bigint;
nr_seq_tipo_marca_w			bigint;
cd_estab_number_w 			smallint;
qt_existe_fornec_w			bigint;
ie_preco_ultima_compra_w	varchar(1);
cd_material_cadastrado_w	bigint;
qt_existe_mat_W				bigint;
ds_erro_ww					varchar(2000);
ie_consistir_mat_w			varchar(1);
ie_preco_importacao_w		varchar(1) := 'N';
ie_permite_inativar_w		bigint;
ds_titulo_w					varchar(255);
ds_titulo_ww				varchar(2000) := '';
ie_consist_fornec_w			parametros_opme.ie_consist_fornec%type := 'N';
ie_consist_fornec_ww		varchar(2) := 'N';
cd_material_tuss_w			tuss_material_item.cd_material_tuss%type;
nr_seq_tuss_mat_w			tuss_material_item.nr_seq_carga_tuss%type;
ds_mensagem_w				w_material_inativo.ds_mensagem%type;
qt_existe_mat_tuss_w		bigint;
ie_vigente_anvisa_w			varchar(1);
qt_existe_fornec_cad_w  	bigint;
cd_mat_tasy_w				material.cd_material%type;
cd_material_integracao_w	material.cd_material%type;
vl_preco_w			double precision;
ie_consignado_w				parametros_opme.ie_consignado%type;
ie_atualiza_descricao_w			parametros_opme.ie_atualiza_descricao%type;
ie_atualiza_desc_reduzida_w		parametros_opme.ie_atualiza_desc_reduzida%type;
/*ie_sistema_externo_p	=  o cdigo especfico para relacionar o sistema externo de integrao (Dom=3088)
I	= Inpart
B	= Bionexo

*/
C01 CURSOR FOR
	SELECT	ds_titulo,
		ds_mensagem
	from	w_material_inativo
	where	cd_material = Somente_Numero(cd_material_integracao_w);


BEGIN

begin
	vl_preco_w := (REPLACE(vl_preco_p, '.', ''))::numeric;
exception when others then
	vl_preco_w := (REPLACE(REPLACE(vl_preco_p, '.', ''), ',', '.'))::numeric;
end;

select	max(cd_material)
into STRICT	cd_material_integracao_w
from	material
where	cd_material = somente_numero(cd_material_tasy_p);

cd_material_tuss_w := cd_material_tuss_p;

select 	coalesce(max(obter_exigencia_anvisa_mat(cd_estabelecimento_p,cd_material_p,'VI')),'N')
into STRICT 	ie_vigente_anvisa_w
;

if (coalesce(substr((ds_material_p),1,255), '0') = '0') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280877);
elsif (length(ds_material_p) > 255) then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280878);
end if;

if (coalesce(substr((ds_reduzida_p),1,255), '0') = '0') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280879);
elsif (length(ds_reduzida_p) > 255) then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280880);
end if;

if (coalesce(ie_situacao_p, '0') = '0') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280882);
elsif (ie_situacao_p = 'I') and (somente_numero(cd_material_integracao_w) > 0)then
	begin

	CALL consistir_inativar_material(cd_estabelecimento_p, cd_material_integracao_w, nm_usuario_p);

	open C01;
	loop
	fetch C01 into
		ds_titulo_w,
		ds_mensagem_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ds_titulo_ww := substr(ds_titulo_ww || substr(ds_titulo_w,1,50) || '; ' || substr(ds_mensagem_w, 1,255) || chr(13) || chr(10),1,2000);
		end;
	end loop;
	close C01;

	select	count(*)
	into STRICT	ie_permite_inativar_w
	from	w_material_inativo
	where	cd_material = Somente_Numero(cd_material_integracao_w)
	and	ie_permite = 'N';

	if (ie_permite_inativar_w > 0) then
		ds_erro_w := ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280883) || ds_titulo_ww || ';';
	end if;
	end;
end if;

if (coalesce(cd_unidade_medida_compra_p, '0') = '0') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280885);
end if;

if (coalesce(cd_unidade_medida_estoque_p, '0') = '0') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280886);
end if;

if (coalesce(cd_unidade_medida_consumo_p, '0') = '0') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280888);
end if;

if (coalesce(ie_tipo_material_p, '0') = '0') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280889);
end if;

if (coalesce(nr_registro_anvisa_p, '0') = '0') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280890);
end if;

if (coalesce(cd_referencia_p, '0') = '0') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280891);
end if;

if (coalesce(cd_tabela_preco_p, 0) = 0) then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280892);
end if;

if (coalesce(dt_validade_reg_anvisa_p::text, '') = '') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280893);
end if;

if (coalesce(cd_cnpj_p, '0') = '0') then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280894);
elsif (coalesce(cd_cnpj_p, '0') <> '0') then

	select	count(*)
	into STRICT	qt_existe_cnpj_w
	from 	pessoa_juridica
	where 	cd_cgc = cd_cnpj_p;

	if (qt_existe_cnpj_w = 0) then
		ds_erro_w	:=  ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280895) || cd_cnpj_p || '; ';
	end if;
end if;

if (somente_numero(cd_material_externo_p) = 0) then
	ds_erro_w := ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280896);
end if;

begin

select	cd_estab_regra,
	coalesce(cd_classe_integracao, cd_classe_material_p),
	coalesce(ie_atualiza_tabela, 'S'),
	coalesce(cd_tabela_preco, cd_tabela_preco_p),
	CASE WHEN coalesce(ie_material_estoque,'A')='A' THEN ie_material_estoque_p  ELSE ie_material_estoque END ,
	CASE WHEN coalesce(ie_baixa_estoq_pac,'A')='A' THEN ie_baixa_estoq_pac_p  ELSE ie_baixa_estoq_pac END ,
	CASE WHEN coalesce(ie_padronizado,'A')='A' THEN ie_padronizado_p  ELSE ie_padronizado END ,
	CASE WHEN coalesce(ie_preco_ultima_compra,'A')='A' THEN ie_preco_compra_p  ELSE ie_preco_ultima_compra END ,
	nr_seq_tipo_marca,
	ie_consistir_mat,
	ie_preco_importacao,
	ie_consist_fornec,
	coalesce(ie_consignado, '1') ie_consignado,
	coalesce(ie_atualiza_descricao,'S'),
	coalesce(ie_atualiza_desc_reduzida,'S')
into STRICT	cd_estab_regra_w,
	cd_classe_material_w,
	ie_atualiza_tabela_w,
	cd_tabela_preco_w,
	ie_material_estoque_w,
	ie_baixa_estoq_pac_w,
	ie_padronizado_w,
	ie_preco_ultima_compra_w,
	nr_seq_tipo_marca_w,
	ie_consistir_mat_w,
	ie_preco_importacao_w,
	ie_consist_fornec_w,
	ie_consignado_w,
	ie_atualiza_descricao_w,
	ie_atualiza_desc_reduzida_w
from	parametros_opme
where	cd_estabelecimento = cd_estabelecimento_p
and	ie_sistema_integracao = 'P';
exception when others then
	begin
	cd_estab_regra_w		:= null;
	cd_classe_material_w	:= cd_classe_material_p;
	ie_atualiza_tabela_w	:= 'S';
	cd_tabela_preco_w		:= cd_tabela_preco_p;
	ie_consignado_w			:= ie_consignado_p;
	end;
end;

if (coalesce(ie_preco_importacao_w,'N') = 'S') and (coalesce(vl_preco_w, 0) = 0) then
	ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280898);
end if;

if (coalesce(ie_consistir_mat_w,'N') = 'S') then

	select	coalesce(max(nr_sequencia), 0)
	into STRICT	nr_seq_fabric_w
	from	mat_fabricante
	where	cd_sistema_ant	= nr_seq_fabric_p;

	select	max(a.cd_material)
	into STRICT	cd_material_cadastrado_w
	from	material a,
		material_estab b
	where	a.cd_material = b.cd_material
	and 	a.nr_seq_fabric = nr_seq_fabric_w
	and		b.nr_registro_anvisa = nr_registro_anvisa_p
	and 	a.cd_fabricante = cd_referencia_p;
	if (coalesce(cd_material_cadastrado_w,0) > 0) then
		begin
		ds_erro_ww := 	ds_erro_ww || WHEB_MENSAGEM_PCK.get_texto(280899) || cd_material_cadastrado_w || WHEB_MENSAGEM_PCK.get_texto(280900);
		cd_material_p := cd_material_cadastrado_w;
		end;
	end if;
end if;


if (coalesce(cd_estab_regra_w::text, '') = '') then
	cd_estab_regra_w := (cd_estabelecimento_p||';');
end if;

if (somente_numero(cd_material_integracao_w) > 0) then
	begin

	select	count(*)
	into STRICT	qt_existe_w
	from	material
	where	cd_material	= somente_numero(cd_material_integracao_w);
	if (qt_existe_w = 0) then
		ds_erro_w := 	ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280901)|| cd_material_integracao_w || '; ';
	else
		begin
		cd_material_p :=  Somente_Numero(cd_material_integracao_w);
		
		select	coalesce(max(nr_sequencia), 0)
		into STRICT	nr_seq_fabric_w
		from	mat_fabricante
		where	cd_sistema_ant	= nr_seq_fabric_p;

		if (nr_seq_fabric_w = 0) then
			begin
			select 	nextval('mat_fabricante_seq')
			into STRICT	nr_seq_fabric_w
			;

			insert into mat_fabricante(
				nr_sequencia,
				ds_fabricante,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_sistema_ant)
			values (nr_seq_fabric_w,
				ds_fabricante_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_fabric_p);
			end;
		end if;
		
		if (coalesce(ds_erro_w::text, '') = '') then
			begin

			update	material
			set	nr_seq_fabric		= nr_seq_fabric_w,
				ie_situacao		= ie_situacao_p,
				cd_fabricante		= cd_referencia_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				ds_material			= CASE WHEN ie_atualiza_descricao_w='S' THEN ds_material_p  ELSE ds_material END ,
				ds_reduzida			= CASE WHEN ie_atualiza_desc_reduzida_w='S' THEN ds_reduzida_p  ELSE ds_reduzida END
			where	cd_material		= cd_material_integracao_w;

			/*Tratamento do material tuss caso informado
			Caso possuir material tuss na tabela material_tuss nao ira fazer nada.
			Caso nao possuir ira inserir o material tuss na tabela material_tuss*/
			if (cd_material_tuss_w IS NOT NULL AND cd_material_tuss_w::text <> '') then

				select	count(*)
				into STRICT	qt_existe_mat_tuss_w
				from	material_tuss
				where	cd_material = Somente_Numero(cd_material_integracao_w);

				select	count(*)
				into STRICT	qt_existe_w
				from	material_tuss
				where	cd_material = Somente_Numero(cd_material_integracao_w)
				and	cd_material_tuss = cd_material_tuss_w;

				if (qt_existe_w > 0) then
					-- Esse cd. TUSS j existe para esse material, no necessita fazer a importao novamente.
					goto Continuar;
				end if;

				if (qt_existe_w = 0) then
					if (qt_existe_mat_tuss_w > 0) then
						select	max(nr_sequencia)
						into STRICT	nr_seq_tuss_mat_w
						from	material_tuss
						where	cd_material = Somente_Numero(cd_material_integracao_w)
						and	coalesce(dt_vigencia_final::text, '') = '';

						update	material_tuss
						set	dt_vigencia_final = clock_timestamp()
						where	nr_sequencia = 	nr_seq_tuss_mat_w;
					end if;

					select	coalesce(max(a.nr_seq_carga_tuss),0)
					into STRICT	nr_seq_tuss_mat_w
					from	tuss_material_item a,
						tuss_material b
					where	a.nr_seq_carga_tuss = b.nr_sequencia
					and	a.cd_material_tuss = cd_material_tuss_w
					and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');

					if (nr_seq_tuss_mat_w > 0) then
						CALL importar_de_para_tuss(null,cd_material_p,cd_material_tuss_w,clock_timestamp(), nr_seq_tuss_mat_w,null, nm_usuario_p);
					end if;
				end if;
			end if;

			<<Continuar>>

			update	material_estab
			set		nr_registro_anvisa		= nr_registro_anvisa_p,
					dt_validade_reg_anvisa	= dt_validade_reg_anvisa_p,
					nm_usuario				= nm_usuario_p,
					dt_atualizacao			= clock_timestamp(),
					ie_vigente_anvisa 		= ie_vigente_anvisa_w
			where	cd_material				= cd_material_integracao_w;

			if (cd_estab_regra_w IS NOT NULL AND cd_estab_regra_w::text <> '') and (substr(cd_estab_regra_w,length(cd_estab_regra_w),1) <> ';') then
				cd_estab_regra_w := substr(cd_estab_regra_w || ';',1,255);
			end if;

			while(cd_estab_regra_w IS NOT NULL AND cd_estab_regra_w::text <> '') loop
				begin
				select	substr(cd_estab_regra_w,1,position(';' in cd_estab_regra_w)-1)
				into STRICT	cd_estabelecimento_w
				;

				select	coalesce(max(cd_moeda_padrao), 0)
				into STRICT	cd_moeda_w
				from	parametro_compras
				where	cd_estabelecimento	= coalesce(cd_estabelecimento_w,cd_estabelecimento_p);

				select	count(1)
				into STRICT	qt_existe_w
				from	material_estab
				where	cd_estabelecimento =  coalesce(cd_estabelecimento_w, cd_estabelecimento_p)
				and		cd_material = cd_material_integracao_w;

				if (qt_existe_w = 0) then

					select	nextval('material_estab_seq')
					into STRICT	nr_sequencia_w
					;

					insert into material_estab(
						nr_sequencia,		cd_estabelecimento,
						cd_material,		dt_atualizacao,
						nm_usuario,		ie_baixa_estoq_pac,
						ie_material_estoque,	nr_minimo_cotacao,
						ie_ressuprimento,	ie_classif_custo,
						ie_padronizado,		ie_prescricao,
						ie_estoque_lote,	ie_requisicao,
						ie_controla_serie,	qt_dia_interv_ressup,
						qt_dia_ressup_forn,	qt_dia_estoque_minimo,
						nr_registro_anvisa,	dt_validade_reg_anvisa,
						cd_material_conta, ie_vigente_anvisa)
					values (
						nr_sequencia_w,			coalesce(cd_estabelecimento_w,cd_estabelecimento_p),
						cd_material_p,			clock_timestamp(),
						nm_usuario_p,			ie_baixa_estoq_pac_w,
						ie_material_estoque_w,	1,
						'N',					'M',
						ie_padronizado_w,		ie_prescricao_p,
						'N',					ie_requisicao_p,
						'P',					15,
						7,						3,
						nr_registro_anvisa_p,	dt_validade_reg_anvisa_p,
						cd_material_p,			ie_vigente_anvisa_w);
				end if;

				if (ie_atualiza_tabela_w = 'S') and (coalesce(vl_preco_w,0) <> 0) and (cd_moeda_w > 0)then

					cd_estab_number_w	:= (coalesce(cd_estabelecimento_w,cd_estabelecimento_p))::numeric;

					CALL atualiza_tab_preco_OPMENexo(cd_material_p,clock_timestamp(),cd_tabela_preco_w,cd_estab_number_w,vl_preco_w, cd_cnpj_p, nm_usuario_p);

					insert into log_preco_material(
							nr_sequencia,
							cd_estabelecimento,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							dt_inicio_vigencia,
							cd_material,
							vl_preco_venda,
							cd_tab_preco_mat,
							ie_atualizacao)
						values ( nextval('log_preco_material_seq'),
							cd_estab_number_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							cd_material_p,
							vl_preco_w,
							cd_tabela_preco_w,
							'S');
				end if;

				if (ie_consist_fornec_w = 'S') then
					select	coalesce(max('S'),'N')
					into STRICT	ie_consist_fornec_ww
					from	material_fornec
					where	cd_material = Somente_Numero(cd_material_integracao_w)
					and		cd_cgc = cd_cnpj_p;

					if (ie_consist_fornec_ww = 'N') and (coalesce(cd_cnpj_p, '0') <> '0') then

						insert into material_fornec(
							nr_sequencia,
							cd_estabelecimento,
							cd_material,
							dt_atualizacao,
							nm_usuario,
							cd_cgc,
							ie_consignado,
							cd_unid_medida,
							qt_conv_compra_est,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ie_ressuprimento,
							ie_nota_fiscal,
							ie_cot_compra)
						values (
							nextval('material_fornec_seq'),
							coalesce(cd_estabelecimento_w,cd_estabelecimento_p),
							cd_material_integracao_w,
							clock_timestamp(),
							nm_usuario_p,
							cd_cnpj_p,
							ie_consignado_w,
							cd_unidade_medida_compra_p,
							1,
							clock_timestamp(),
							nm_usuario_p,
							'N',
							'N',
							'N');

						delete from material_fornec
						where	cd_material = Somente_Numero(cd_material_integracao_w)
						and		cd_cgc <> cd_cnpj_p;

					end if;
				else
					if (coalesce(cd_cnpj_p, '0') <> '0') then
						
						select	coalesce(max('S'),'N')
						into STRICT	ie_consist_fornec_ww
						from	material_fornec
						where	cd_material = Somente_Numero(cd_material_integracao_w)
						and		cd_cgc = cd_cnpj_p;
					
						if (ie_consist_fornec_ww = 'N') then
						
							insert into material_fornec(
								nr_sequencia,
								cd_estabelecimento,
								cd_material,
								dt_atualizacao,
								nm_usuario,
								cd_cgc,
								ie_consignado,
								cd_unid_medida,
								qt_conv_compra_est,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								ie_ressuprimento,
								ie_nota_fiscal,
								ie_cot_compra)
							values (
								nextval('material_fornec_seq'),
								coalesce(cd_estabelecimento_w,cd_estabelecimento_p),
								cd_material_integracao_w,
								clock_timestamp(),
								nm_usuario_p,
								cd_cnpj_p,
								ie_consignado_w,
								cd_unidade_medida_compra_p,
								1,
								clock_timestamp(),
								nm_usuario_p,
								'N',
								'N',
								'N');
								
						end if;

					end if;
				end if;
				cd_estab_regra_w := substr(cd_estab_regra_w,position(';' in cd_estab_regra_w) +1,255);

				end;
			end loop;

			select	count(*)
			into STRICT	qt_existe_w
			from	material_sistema_externo
			where	cd_material	= Somente_Numero(cd_material_integracao_w)
			and		ie_sistema	= ie_sistema_externo_p;

			if (qt_existe_w = 0) then
				insert into material_sistema_externo(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_sistema,
					cd_material,
					cd_codigo,
					cd_referencia)
				values (
					nextval('material_sistema_externo_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					ie_sistema_externo_p,
					cd_material_integracao_w,
					cd_material_externo_p,
					cd_referencia_p);
			else
				update	material_sistema_externo
				set	cd_codigo		= cd_material_externo_p,
					cd_referencia	= cd_referencia_p
				where ie_sistema	= ie_sistema_externo_p
				and	cd_material		= cd_material_integracao_w;
			end if;


			ds_historico_w	:=
                                  wheb_mensagem_pck.get_texto(799335,'ds_material_p=' || substr((ds_material_p),1,255) || ';' ||
				              			     'ds_reduzida_p=' || substr((ds_reduzida_p),1,255) || ';' ||
							             'nr_seq_fabric_p=' || nr_seq_fabric_p || ';' ||
							             'nr_registro_anvisa_p=' || nr_registro_anvisa_p || ';' ||
								     'dt_validade_reg_anvisa_p=' || dt_validade_reg_anvisa_p || ';' ||
							             'cd_material_tuss_p=' || cd_material_tuss_p || ';' ||
							             'vl_preco_w=' || vl_preco_w || ';' ||
							             'ie_situacao_p=' || ie_situacao_p);



			insert into material_historico(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_historico,
				cd_material,
				ds_titulo,
				ie_tipo,
				ds_historico_curto)
			values ( nextval('material_historico_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_historico_w,
				cd_material_integracao_w,
				WHEB_MENSAGEM_PCK.get_texto(280902),
				WHEB_MENSAGEM_PCK.get_texto(280903),
				WHEB_MENSAGEM_PCK.get_texto(280902));

			insert into material_int_opme(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_historico,
				cd_material,
				ds_titulo,
				ie_tipo,
				ds_historico_curto)
			values (
				nextval('material_int_opme_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_historico_w,
				cd_material_integracao_w,
				WHEB_MENSAGEM_PCK.get_texto(280902),
				WHEB_MENSAGEM_PCK.get_texto(280903),
				WHEB_MENSAGEM_PCK.get_texto(280902));

			end;

			select	coalesce(max(nr_sequencia), 0)
			into STRICT	nr_seq_marca_w
			from	marca
			where	cd_sistema_ant	= nr_seq_fabric_p;

			if (nr_seq_marca_w = 0) and (coalesce(nr_seq_tipo_marca_w,0) > 0) then
				begin
				select 	nextval('marca_seq')
				into STRICT	nr_seq_marca_w
				;

				insert into marca(
					nr_sequencia,
					ds_marca,
					ie_situacao,
					dt_atualizacao,
					nm_usuario,
					nr_seq_tipo,
					qt_dia_ressup,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_reprovacao,
					nm_usuario_reprovacao,
					ds_observacao,
					cd_sistema_ant)
				values (nr_seq_marca_w,
					ds_fabricante_p,
					'A',
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_tipo_marca_w,
					7,
					clock_timestamp(),
					nm_usuario_p,
					null,
					null,
					'',
					nr_seq_fabric_p);

				insert into material_marca(
					cd_material,
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					qt_prioridade,
					ie_situacao,
					nr_registro_anvisa,
					dt_validade_reg_anvisa,
					cd_cnpj,
					dt_reprovacao,
					nm_usuario_reprovacao,
					ds_observacao,
					cd_estabelecimento,
					cd_referencia)
				values (cd_material_integracao_w,
					nr_seq_marca_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					null,
					'A',
					null,
					null,
					null,
					null,
					null,
					'',
					null,
					null);
				end;
			else
				update	marca a
				set 	a.ds_marca = ds_fabricante_p
				where	a.cd_sistema_ant = nr_seq_fabric_p;

			end if;
		end if;
		end;
	end if;
	end;
else
	begin

	if (nr_seq_fabric_p IS NOT NULL AND nr_seq_fabric_p::text <> '') then
		select	coalesce(max(nr_sequencia), 0)
		into STRICT	nr_seq_fabric_w
		from	mat_fabricante
		where	cd_sistema_ant	= nr_seq_fabric_p;
		if (nr_seq_fabric_w = 0) then
			begin
			select 	nextval('mat_fabricante_seq')
			into STRICT	nr_seq_fabric_w
			;

			insert into mat_fabricante(
					nr_sequencia,
					ds_fabricante,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_sistema_ant)
				values (nr_seq_fabric_w,
					ds_fabricante_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_fabric_p);
			end;
		end if;
	end if;

	if (somente_numero(cd_material_externo_p) > 0) then
		select 	count(*)
		into STRICT	qt_existe_cd_mat_ext_w
		from	material_sistema_externo
		where	cd_codigo = cd_material_externo_p;
	end if;

	if (qt_existe_cd_mat_ext_w > 0) then

		select 	coalesce(max(cd_material),0)
		into STRICT 	cd_material_p
		from	material_sistema_externo
		where	cd_codigo = cd_material_externo_p;
	
		select 	count(*)
		into STRICT	qt_existe_fornec_cad_w
		from	material_sistema_externo a
		where	a.cd_codigo = cd_material_externo_p
		and 	exists (SELECT	1
				from	material_fornec b
				where	b.cd_material = a.cd_material
				and	b.cd_cgc	= cd_cnpj_p
				and	cd_estabelecimento = coalesce(cd_estabelecimento_w,cd_estabelecimento_p));

		if (qt_existe_fornec_cad_w > 0)  then
			ds_erro_w	:= ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280897) || cd_material_externo_p || '; '; --J existe material cadastrado com cdigo Inpart
		end if;

		if (coalesce(cd_cnpj_p, '0') <> '0')  and (coalesce(qt_existe_fornec_cad_w,0) = 0) then

			select 	max(cd_material)
			into STRICT	cd_mat_tasy_w
			from	material_sistema_externo a
			where	a.cd_codigo = cd_material_externo_p;

			select	count(*)
			into STRICT	qt_existe_fornec_w
			from	material_fornec
			where	cd_cgc	= cd_cnpj_p
			and 	cd_material = cd_mat_tasy_w
			and	cd_estabelecimento = coalesce(cd_estabelecimento_w,cd_estabelecimento_p);

			if (qt_existe_fornec_w = 0) then

				insert into material_fornec(
					nr_sequencia,
					cd_estabelecimento,
					cd_material,
					dt_atualizacao,
					nm_usuario,
					cd_cgc,
					ie_consignado,
					cd_unid_medida,
					qt_conv_compra_est,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_ressuprimento,
					ie_nota_fiscal,
					ie_cot_compra)
				values (nextval('material_fornec_seq'),
					coalesce(cd_estabelecimento_w,cd_estabelecimento_p),
					cd_mat_tasy_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_cnpj_p,
					ie_consignado_w,
					cd_unidade_medida_compra_p,
					1,
					clock_timestamp(),
					nm_usuario_p,
					'N',
					'N',
					'N');
			end if;
		end if;
	end if;

	if (coalesce(ds_erro_w::text, '') = '') or (qt_existe_cd_mat_ext_w = 0) then

		select	nextval('material_seq')
		into STRICT	cd_material_p
		;

		insert into material(
			cd_material,			ds_material,
			ds_reduzida,			cd_classe_material,
			cd_unidade_medida_compra,		cd_unidade_medida_estoque,
			cd_unidade_medida_consumo,	cd_material_estoque,
			ie_tipo_material,			ie_material_estoque,
			ie_receita,			ie_cobra_paciente,
			ie_inf_ultima_compra,		ie_preco_compra,
			ie_curva_abc,			ie_baixa_inteira,
			ie_situacao,			dt_cadastramento,
			dt_atualizacao,			nm_usuario,
			qt_minimo_multiplo_solic,		qt_conv_compra_estoque,
			qt_conv_estoque_consumo,		ie_bomba_infusao,
			ie_diluicao,			ie_solucao,
			ie_mistura,			ie_abrigo_luz,
			ie_umidade_controlada,		ie_gravar_obs_prescr,
			ie_controle_medico,			ie_baixa_estoq_pac,
			ie_obrig_via_aplicacao,		ie_consignado,
			ie_disponivel_mercado,		ie_material_direto,
			ie_custo_benef,			ie_higroscopico,
			ie_fotosensivel,			ie_mostrar_orientacao,
			ie_dias_util_medic,		nr_seq_fabric,
			cd_fabricante,			cd_unidade_medida_solic,
			nr_seq_grupo_rec)
		values (	cd_material_p,			substr((ds_material_p),1,255),
			substr((ds_reduzida_p),1,255),	cd_classe_material_w,
			cd_unidade_medida_compra_p,	cd_unidade_medida_estoque_p,
			cd_unidade_medida_consumo_p,	cd_material_p,
			'1',				ie_material_estoque_w,
			'N',				ie_cobra_paciente_p,
			ie_inf_ultima_compra_p,		ie_preco_ultima_compra_w,
			ie_curva_abc_p,			'S',
			ie_situacao_p,			clock_timestamp(),
			clock_timestamp(),			nm_usuario_p,
			1,				qt_conv_compra_estoque_p,
			qt_conv_estoque_consumo_p,	'N',
			'N',				'N',
			'N',				'N',
			'N',				'N',
			0,				ie_baixa_estoq_pac_w,
			ie_obrig_via_aplicacao_p,	ie_consignado_w,
			'S',				'N',
			'N',				'N',
			'N',				'S',
			'N',				nr_seq_fabric_w,
			cd_referencia_p,		cd_unidade_medida_solic_p,
			ie_receita_p);

		if (cd_material_tuss_w IS NOT NULL AND cd_material_tuss_w::text <> '') then

			select	coalesce(max(a.nr_seq_carga_tuss),0)
			into STRICT	nr_seq_tuss_mat_w
			from	tuss_material_item a,
				tuss_material b
			where	a.nr_seq_carga_tuss = b.nr_sequencia
			and	a.cd_material_tuss = cd_material_tuss_w
			and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');

			if (nr_seq_tuss_mat_w > 0) then
				CALL importar_de_para_tuss(null, cd_material_p, cd_material_tuss_w, clock_timestamp(), nr_seq_tuss_mat_w,null, nm_usuario_p);
			end if;
		end if;

		if (cd_estab_regra_w IS NOT NULL AND cd_estab_regra_w::text <> '') and (substr(cd_estab_regra_w,length(cd_estab_regra_w),1) <> ';') then
			cd_estab_regra_w := substr(cd_estab_regra_w || ';',1,255);
		end if;

		while(cd_estab_regra_w IS NOT NULL AND cd_estab_regra_w::text <> '') loop
			begin
			select	substr(cd_estab_regra_w,1,position(';' in cd_estab_regra_w)-1)
			into STRICT	cd_estabelecimento_w
			;

			select	nextval('material_estab_seq')
			into STRICT	nr_sequencia_w
			;

			insert into material_estab(
				nr_sequencia,		cd_estabelecimento,
				cd_material,		dt_atualizacao,
				nm_usuario,		ie_baixa_estoq_pac,
				ie_material_estoque,	nr_minimo_cotacao,
				ie_ressuprimento,	ie_classif_custo,
				ie_padronizado,		ie_prescricao,
				ie_estoque_lote,	ie_requisicao,
				ie_controla_serie,	qt_dia_interv_ressup,
				qt_dia_ressup_forn,	qt_dia_estoque_minimo,
				nr_registro_anvisa,	dt_validade_reg_anvisa,
				cd_material_conta, ie_vigente_anvisa)
			values ( nr_sequencia_w,		coalesce(cd_estabelecimento_w,cd_estabelecimento_p),
				cd_material_p,		clock_timestamp(),
				nm_usuario_p,		ie_baixa_estoq_pac_w,
				ie_material_estoque_w,	1,
				'N',			'M',
				ie_padronizado_w,	ie_prescricao_p,
				'N',			ie_requisicao_p,
				'P',			15,
				7,			3,
				nr_registro_anvisa_p,	dt_validade_reg_anvisa_p,
				cd_material_p,ie_vigente_anvisa_w);


			select	coalesce(max(cd_moeda_padrao), 0)
			into STRICT	cd_moeda_w
			from	parametro_compras
			where	cd_estabelecimento	= coalesce(cd_estabelecimento_w,cd_estabelecimento_p);

			if (ie_atualiza_tabela_w = 'S') and (cd_moeda_w > 0) and (coalesce(vl_preco_w,0) <> 0) then

				cd_estab_number_w	:= (coalesce(cd_estabelecimento_w,cd_estabelecimento_p))::numeric;
				CALL atualiza_tab_preco_OPMENexo(cd_material_p, clock_timestamp(), cd_tabela_preco_w, cd_estab_number_w, vl_preco_w, cd_cnpj_p, nm_usuario_p);

				insert into log_preco_material(
						nr_sequencia,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_inicio_vigencia,
						cd_material,
						vl_preco_venda,
						cd_tab_preco_mat,
						ie_atualizacao)
					values ( nextval('log_preco_material_seq'),
						cd_estab_number_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						cd_material_p,
						vl_preco_w,
						cd_tabela_preco_w,
						'N');

			end if;

			if (coalesce(cd_cnpj_p, '0') <> '0') then

				select	count(*)
				into STRICT	qt_existe_fornec_w
				from	material_fornec
				where	cd_cgc	= cd_cnpj_p
				and 	cd_material = Somente_Numero(cd_material_integracao_w)
				and	cd_estabelecimento = coalesce(cd_estabelecimento_w,cd_estabelecimento_p);

				if (qt_existe_fornec_w = 0) then

					insert into material_fornec(
						nr_sequencia,
						cd_estabelecimento,
						cd_material,
						dt_atualizacao,
						nm_usuario,
						cd_cgc,
						ie_consignado,
						cd_unid_medida,
						qt_conv_compra_est,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_ressuprimento,
						ie_nota_fiscal,
						ie_cot_compra)
					values (nextval('material_fornec_seq'),
						coalesce(cd_estabelecimento_w,cd_estabelecimento_p),
						cd_material_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_cnpj_p,
						ie_consignado_w,
						cd_unidade_medida_compra_p,
						1,
						clock_timestamp(),
						nm_usuario_p,
						'N',
						'N',
						'N');
				end if;
			end if;
			cd_estab_regra_w := substr(cd_estab_regra_w,position(';' in cd_estab_regra_w) +1,255);
			end;
		end loop;

		if (somente_numero(cd_material_externo_p) > 0) then

			insert into material_sistema_externo(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_sistema,
				cd_material,
				cd_codigo,
				cd_referencia)
			values (	nextval('material_sistema_externo_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_sistema_externo_p,
				cd_material_p,
				cd_material_externo_p,
				cd_referencia_p);
		end if;
			insert into material_historico(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_historico,
				cd_material,
				ds_titulo,
				ie_tipo,
				ds_historico_curto)
			values ( nextval('material_historico_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				WHEB_MENSAGEM_PCK.get_texto(280904),
				cd_material_p,
				WHEB_MENSAGEM_PCK.get_texto(280904),
				WHEB_MENSAGEM_PCK.get_texto(280903),
				WHEB_MENSAGEM_PCK.get_texto(280904));

			insert into material_int_opme(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_historico,
				cd_material,
				ds_titulo,
				ie_tipo,
				ds_historico_curto)
			values ( nextval('material_int_opme_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				WHEB_MENSAGEM_PCK.get_texto(280904),
				cd_material_p,
				WHEB_MENSAGEM_PCK.get_texto(280904),
				WHEB_MENSAGEM_PCK.get_texto(280903),
				WHEB_MENSAGEM_PCK.get_texto(280904));


		select	coalesce(max(nr_sequencia), 0)
		into STRICT	nr_seq_marca_w
		from	marca
		where	cd_sistema_ant	= nr_seq_fabric_p;

		if (nr_seq_marca_w = 0) and (coalesce(nr_seq_tipo_marca_w,0) > 0) then
			begin
			select 	nextval('marca_seq')
			into STRICT	nr_seq_marca_w
			;

			insert into marca(
				nr_sequencia,
				ds_marca,
				ie_situacao,
				dt_atualizacao,
				nm_usuario,
				nr_seq_tipo,
				qt_dia_ressup,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_reprovacao,
				nm_usuario_reprovacao,
				ds_observacao,
				cd_sistema_ant)
			values (nr_seq_marca_w,
				ds_fabricante_p,
				'A',
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_tipo_marca_w,
				7,
				clock_timestamp(),
				nm_usuario_p,
				null,
				null,
				'',
				nr_seq_fabric_p);

			insert into material_marca(
				cd_material,
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				qt_prioridade,
				ie_situacao,
				nr_registro_anvisa,
				dt_validade_reg_anvisa,
				cd_cnpj,
				dt_reprovacao,
				nm_usuario_reprovacao,
				ds_observacao,
				cd_estabelecimento,
				cd_referencia)
			values (cd_material_p,
				nr_seq_marca_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				'A',
				null,
				null,
				null,
				null,
				null,
				'',
				null,
				null);

			end;
		elsif (coalesce(nr_seq_tipo_marca_w,0) > 0) then

			insert into material_marca(
				cd_material,
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				qt_prioridade,
				ie_situacao,
				nr_registro_anvisa,
				dt_validade_reg_anvisa,
				cd_cnpj,
				dt_reprovacao,
				nm_usuario_reprovacao,
				ds_observacao,
				cd_estabelecimento,
				cd_referencia)
			values (cd_material_p,
				nr_seq_marca_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				'A',
				null,
				null,
				null,
				null,
				null,
				'',
				null,
				null);
		end if;
	end if;

	end;
end if;

ds_erro_p := substr(ds_erro_w,1,2000);

if (coalesce(ds_erro_w::text, '') = '') then

	CALL sup_comunicar_novo_material(cd_material_p,nm_usuario_p);
	CALL gerar_envio_email_material(null,cd_material_p,2,cd_estabelecimento_p,nm_usuario_p,'');

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_material_xml_opmenexo ( cd_estabelecimento_p bigint, ie_atualizacao_p text, cd_material_externo_p text, cd_material_tasy_p text, ie_sistema_externo_p text, ds_material_p text, ds_reduzida_p text, ie_tipo_material_p text, cd_unidade_medida_compra_p text, cd_unidade_medida_estoque_p text, cd_unidade_medida_consumo_p text, cd_unidade_medida_solic_p text, ie_consignado_p text, ie_disponivel_mercado_p text, ie_obrig_via_aplicacao_p text, ie_receita_p text, ie_cobra_paciente_p text, ie_inf_ultima_compra_p text, ie_preco_compra_p text, ie_curva_abc_p text, qt_conv_compra_estoque_p bigint, qt_conv_estoque_consumo_p bigint, qt_minimo_multiplo_solic_p bigint, cd_classe_material_p bigint, ie_material_estoque_p text, ie_baixa_estoq_pac_p text, ie_requisicao_p text, ie_prescricao_p text, ie_padronizado_p text, ie_classif_custo_p text, ie_controla_serie_p text, cd_tabela_preco_p bigint, vl_preco_p text, nm_usuario_p text, cd_referencia_p text, nr_registro_anvisa_p text, dt_validade_reg_anvisa_p timestamp, nr_seq_fabric_p text, ds_fabricante_p text, cd_cnpj_p text, ie_situacao_p text, cd_material_tuss_p text, cd_material_p INOUT bigint, ds_erro_p INOUT text) FROM PUBLIC;

