-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_longa_permanencia (NR_ATENDIMENTO_P bigint, NR_INTERNO_CONTA_P bigint, CD_PROCEDIMENTO_P INOUT bigint, QT_PERM_SUS_P INOUT bigint, QT_PERM_REAL_P INOUT bigint, QT_LONGA_PERM_P INOUT bigint, NR_AIH_P INOUT bigint) AS $body$
DECLARE

dt_entrada_w			timestamp;
dt_alta_w				timestamp;
qt_diarias_w			bigint	:= 0;
qt_longa_perm_total_w		bigint	:= 0;
qt_diarias_uti_w			bigint	:= 0;
qt_longa_perm_liq_w		bigint	:= 0;
cd_procedimento_realiz_w		bigint	:= 0;
cd_procedimento_solic_w		bigint	:= 0;
cd_procedimento_Princ_w		bigint	:= 0;
qt_permanencia_w			bigint	:= 0;
qt_permanencia_ww		bigint	:= 0;
ie_origem_proced_w		bigint;
ie_tipo_laudo_sus_w		integer;
nr_aih_w				bigint	:= 0;
ie_altera_tipo_serv_w		varchar(1);


C01 CURSOR FOR
SELECT	a.cd_procedimento_solic,
	a.ie_origem_proced,
	a.ie_tipo_laudo_sus,
	coalesce(a.nr_aih,0)
from 	sus_laudo_paciente a
where 	a.nr_atendimento		= nr_atendimento_p
and	a.nr_interno_conta	= nr_interno_conta_p
and	ie_tipo_laudo_sus	in (0,1,9)
	order by ie_tipo_laudo_sus,dt_emissao;


	/*	Define o procedimento sobre o qual é gerado a longa permanencia */

BEGIN
cd_procedimento_realiz_w := 0;
OPEN C01;
LOOP
FETCH C01 	into
		cd_procedimento_solic_w,
		ie_origem_proced_w,
		ie_tipo_laudo_sus_w,
		nr_aih_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		if (ie_tipo_laudo_sus_w in (0,1))	then
			begin
			cd_procedimento_realiz_w	:= cd_procedimento_solic_w;
			cd_procedimento_Princ_w	:= cd_procedimento_solic_w;
			end;
		end if;
 		if (cd_procedimento_princ_w in (31000002,39000001,70000000)) and (ie_tipo_laudo_sus_w	  = 9) then
			BEGIN
			begin
			select 	coalesce(a.qt_permanencia,0)
			into STRICT	qt_permanencia_w
			from 	sus_preco_procaih a
			where 	a.cd_procedimento		= cd_procedimento_solic_w
			and 	a.ie_origem_proced 	= 2
			and 	a.dt_competencia 		=
				(SELECT max(x.dt_competencia)
                 	 		from 	sus_preco_procaih x
				where	x.cd_procedimento 	= a.cd_procedimento
				and	x.ie_origem_proced	= a.ie_origem_proced);
			exception
				when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(282421,'CD_PROCEDIMENTO_SOLIC='||to_char(cd_procedimento_solic_w) ||';NR_AIH='||to_char(nr_aih_w) );
			end;
			if (qt_permanencia_w	> qt_permanencia_ww) then
				begin
				cd_procedimento_realiz_w 	:= cd_procedimento_solic_w;
				qt_permanencia_ww	:= qt_permanencia_w;
				end;
			end if;

			END;
		end if;
		end;
END LOOP;
CLOSE C01;

/*	Selecao das datas de entrada e alta do Paciente */

begin
select	coalesce(a.dt_inicial,b.dt_entrada),
	coalesce(a.dt_final,coalesce(b.dt_alta,clock_timestamp()))
into STRICT	dt_entrada_w,
	dt_alta_w
from	atendimento_paciente b,
	sus_aih a
where	a.nr_atendimento	= nr_atendimento_p
and	a.nr_interno_conta	= nr_interno_conta_p
and	a.nr_atendimento	= b.nr_atendimento;
exception
	when others then
	begin
	Select	dt_entrada,
		coalesce(dt_alta,clock_timestamp())
	into STRICT	dt_entrada_w,
		dt_alta_w
	from 	atendimento_paciente
	where	nr_atendimento		= nr_atendimento_p;
	end;
end;

/* Identificar se tem permanencia para o procedimento realizado */

qt_diarias_w	:= (trunc(dt_alta_w) - trunc(dt_entrada_w));
begin
if (qt_diarias_w > 0) 			and (AIH_Validar_Regra(1, cd_procedimento_solic_w) = 0) and (cd_procedimento_realiz_w IS NOT NULL AND cd_procedimento_realiz_w::text <> '') 	then
	begin
	select 	coalesce(a.qt_permanencia,0)
	into STRICT	qt_permanencia_w
	from 	sus_preco_procaih a
	where 	a.cd_procedimento		= cd_procedimento_realiz_w
	and 	a.ie_origem_proced 	= 2
	and 	a.dt_competencia 		=
				(SELECT max(x.dt_competencia)
                   			from 	sus_preco_procaih x
				where	x.cd_procedimento 	= a.cd_procedimento
				and	x.ie_origem_proced	= a.ie_origem_proced);
	exception
		when others then
		qt_permanencia_w := 0;
	end;
end if;
end;

/* Procedimentos de diaria de Uti */

begin
select 	coalesce(sum(qt_procedimento),0)
into STRICT	qt_diarias_uti_w
from 	procedimento_paciente
where 	nr_atendimento		= nr_atendimento_p
and	nr_interno_conta		= nr_interno_conta_p
and	ie_origem_Proced		= 2
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and	cd_procedimento in (96001020,96001038,96002026,96002034,96003014,96003022,
				96003030,96004029,96004037,96005025,96005033,96006013,
				96006030,96800038,96001011,96002018,96004010,96005017,
				96006021,96800011);
exception
		when others then
		qt_diarias_uti_w := 0;
end;

/* Incluido por solicitação do HSJB, que não digita as diárias de UTI, somente qtd de dias */

/* Jaqueline em 28/05/2003 */

if (qt_diarias_uti_w = 0) then
	begin
	select (coalesce(qt_dia_uti_mes_ini,0) + coalesce(qt_dia_uti_mes_ant,0) + coalesce(qt_dia_uti_mes_alta,0))
	into STRICT	qt_diarias_uti_w
	from	sus_aih
	where	nr_atendimento	= nr_atendimento_p
	and	nr_interno_conta	= nr_interno_conta_p
	and	nr_aih		= nr_aih_w;
	exception
		when others then
		qt_diarias_uti_w := 0;
	end;
end if;

/* Eliminar Longa Permanencia de códigos e psiquiátricos e crônicos p/hosp. público */

select 	coalesce(max(IE_ALTERA_TIPO_SERV),'N')
into STRICT	ie_altera_tipo_serv_w
from	sus_parametros;

if (ie_altera_tipo_serv_w = 'S') and (cd_procedimento_solic_w in (85500739,85500747,85500755,85500763,85500771,85500780,85500798,
				85300713,85300721,85300730,85300748,85300756,85300764,85300772,
				89500083,99080010,89500091,89300106,89300092)) and (cd_procedimento_realiz_w IS NOT NULL AND cd_procedimento_realiz_w::text <> '')  then
	qt_permanencia_w := 0;
end if;


/* Calculo da Longa Permanencia */

begin
if (qt_diarias_w > 0) 						and (qt_permanencia_w > 0) 						then
	begin
	qt_permanencia_w			:= (qt_permanencia_w * 2);
	qt_longa_perm_total_w		:= qt_diarias_w - qt_permanencia_w;
	qt_longa_perm_liq_w		:= qt_longa_perm_total_w - qt_diarias_uti_w;
	if	qt_longa_perm_liq_w < 0 then
		qt_longa_perm_liq_w	:= 0;
	end if;

	qt_perm_sus_p			:= qt_permanencia_w;
	qt_perm_real_p			:= qt_diarias_w;
	qt_longa_perm_p			:= qt_longa_perm_liq_w;
	nr_aih_p				:= nr_aih_w;
	end;
end if;
end;

/* Identificar o codigo do Procedimento */

if (qt_longa_perm_liq_w > 0) then
	begin
	select 	cd_procedimento
	into STRICT	cd_procedimento_p
	from 	procedimento
	where	substr(cd_procedimento,1,5) =  99003
	and   	substr(cd_procedimento,6,2) =  qt_longa_perm_liq_w
	and	ie_origem_proced	= 2;
	exception
			when others then
			cd_procedimento_p := 0;
	end;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_longa_permanencia (NR_ATENDIMENTO_P bigint, NR_INTERNO_CONTA_P bigint, CD_PROCEDIMENTO_P INOUT bigint, QT_PERM_SUS_P INOUT bigint, QT_PERM_REAL_P INOUT bigint, QT_LONGA_PERM_P INOUT bigint, NR_AIH_P INOUT bigint) FROM PUBLIC;

