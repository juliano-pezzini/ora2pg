-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_xml_worklist_carestream ( nr_prescricao_p bigint, nr_sequencia_prescricao_p bigint, nr_acesso_dicom_p text, nm_usuario_p text) AS $body$
DECLARE



nr_acesso_dicom_w			varchar(20);
nm_arquivo_w				varchar(255);
ds_diretorio_w				varchar(255);
ds_xml_w				text;
arq_texto_w				utl_file.file_type;
nr_seq_projeto_w			bigint;
nr_seq_log_w				bigint;
ds_parametros_w				varchar(255);
ds_erro_w				varchar(2000);



BEGIN

/*Sequencia do projeto XML*/

nr_seq_projeto_w := 101146;

select	max(ds_diretorio_worklist)
into STRICT	ds_diretorio_w
from	parametro_pacs_mmed
where	cd_estabelecimento =  wheb_usuario_pck.get_cd_estabelecimento;

nr_acesso_dicom_w	:= nr_acesso_dicom_p;

nm_arquivo_w	:=   nr_acesso_dicom_w || '.xml';

CALL gravar_log_cdi(1506,'nr_acesso_dicom_w= '|| nr_acesso_dicom_w || ' - Solicitação de geração de XML',nm_usuario_p);
--commit;
if	((coalesce(ds_diretorio_w::text, '') = '') or (ds_diretorio_w = '')) then
	begin
	CALL gravar_log_cdi(1506,'nr_acesso_dicom_w= '|| nr_acesso_dicom_w || ' - Diretório para geração de arquivo XML não cadastrado',nm_usuario_p);
--	commit;
	end;
elsif ((coalesce(nr_acesso_dicom_w::text, '') = '') or (nr_acesso_dicom_w = '')) then
	begin
	CALL gravar_log_cdi(1506,'nr_prescricao_p= '|| nr_prescricao_p || 'nr_sequencia_prescricao_p= ' || nr_sequencia_prescricao_p || ' - Não foi encontrado o número de acesso DICOM para geração do XML',nm_usuario_p);
--	commit;
	end;
else
	begin
	/*Parametros do projeto XML*/

--	ds_parametros_w :='NR_PRESCRICAO='||nr_prescricao_p||';'||'NR_SEQUENCIA_PRESCRICAO='||nr_sequencia_prescricao_p||';';
	ds_parametros_w :='NR_PRESCRICAO='||nr_prescricao_p||';'||'NR_SEQUENCIA_PRESCRICAO='||nr_sequencia_prescricao_p||';';

	/*Pegar a sequencia da tabela que irá gerar o XML*/

	select nextval('tasy_xml_banco_seq')
	into STRICT 	nr_seq_log_w
	;

	begin
	CALL wheb_exportar_xml(nr_seq_projeto_w,nr_seq_log_w,'',ds_parametros_w);
--	commit;
	exception
	when others then
		ds_erro_w := substr(SQLERRM(SQLSTATE),1,2000);
		CALL gravar_log_cdi(1507,substr('nr_acesso_dicom_w= '|| nr_acesso_dicom_w || ' - Erro ao gerar o XML= ' || ds_erro_w,1,2000) ,nm_usuario_p);
--		commit;
	end;


	select	ds_xml
	into STRICT	ds_xml_w
	from	tasy_xml_banco
	where	nr_sequencia = nr_seq_log_w;

	CALL gravar_log_cdi(1506,'nr_acesso_dicom_w= '|| nr_acesso_dicom_w || ' - XML Gerado - Sequencia = ' || nr_seq_log_w,nm_usuario_p);
--	commit;
	begin
	arq_texto_w := utl_file.fopen(ds_diretorio_w,nm_arquivo_w,'W');

	utl_file.put_line(arq_texto_w,ds_xml_w);
	utl_file.fflush(arq_texto_w);

	utl_file.fclose(arq_texto_w);
	exception
	when others then
		ds_erro_w := substr(SQLERRM(SQLSTATE),1,2000);
		CALL gravar_log_cdi(1507,substr('nr_acesso_dicom_w= '|| nr_acesso_dicom_w || ' - Erro ao gravar o XML no diretório= ' || ds_erro_w,1,255),nm_usuario_p);
	end;

	end;
end if;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_xml_worklist_carestream ( nr_prescricao_p bigint, nr_sequencia_prescricao_p bigint, nr_acesso_dicom_p text, nm_usuario_p text) FROM PUBLIC;

