-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_resumo_conta ( nr_interno_conta_p bigint, ie_status_acerto_p bigint) AS $body$
DECLARE

dt_atualizacao_w			timestamp          		:= clock_timestamp();
dt_referencia_w			timestamp;
dt_custo_w			timestamp;
cd_estabelecimento_w		smallint;
cd_setor_atendimento_w        		integer;
cd_setor_paciente_w		integer;	
cd_estrutura_conta_w		varchar(05);
cd_setor_receita_w  	      	integer;
cd_procedimento_w             		bigint;
nr_seq_exame_w			bigint;
nr_seq_proc_interno_w		bigint;
cd_estab_conta_w			bigint;
cd_material_w	             		integer;
cd_conta_contabil_w           		varchar(40);
cd_medico_w           		varchar(10);
ie_origem_proced_w            		bigint;
cd_especialidade_w		integer;
qt_procedimento_w             		double precision;
cd_unidade_medida_w		varchar(30);
nr_sequencia_w			integer;
ie_diaria_w			varchar(01);
ie_tipo_servico_sus_w		smallint;
ie_responsavel_credito_w		varchar(05);
ie_entra_conta_w			varchar(01);
ie_repassa_medico_w		varchar(01);
ie_coluna_soma_w			varchar(01);
cd_convenio_w			integer;
qt_material_w			double precision;
vl_procedimento_w			double precision;
vl_custo_operacional_w		double precision;
vl_medico_w			double precision;
vl_medico_fora_conta_w		double precision;
vl_anestesista_w			double precision;
vl_materiais_w			double precision;
vl_auxiliares_w			double precision;
vl_custo_unitario_w			double precision;
vl_custo_w			double precision;
vl_desconto_w			double precision;
vl_original_w			double precision;
vl_material_w			double precision;
ie_tipo_atendimento_w		smallint := 0;
ie_tipo_convenio_w			smallint := 0;
vl_sadt_fora_conta_w		double precision;
vl_repasse_terceiro_w		double precision := 0;
vl_repasse_calc_w			double precision := 0;
nr_seq_grupo_rec_w		bigint;
qt_minuto_w			double precision;
nr_seq_conta_financ_w		bigint;
ie_conta_financ_w			varchar(01) := 'S';
cd_cgc_fornecedor_w		varchar(14);
nr_prescricao_w			bigint;
nr_cirurgia_w			bigint;
nr_seq_proc_pacote_w		bigint;
vl_conta_w			double precision;
qt_exclusao_custo_w		double precision;
ie_clinica_w			bigint;
ie_setor_receita_w			varchar(01);
ie_diaria_sus_w			varchar(01);

cd_cgc_convenio_w		varchar(20);
cd_categoria_parametro_w		varchar(255);
qt_exclusao_conta_w		double precision;  -- quantidade dos itens
nr_seq_produto_w			bigint;
qt_estoque_w			double precision;
cd_cgc_prestador_w		varchar(14);
nr_titulo_w			bigint;
ie_origem_titulo_w			varchar(10);
nr_seq_classe_tit_rec_w		bigint;
nr_seq_grupo_w			bigint;
ie_carater_inter_sus_w		varchar(2);
qt_desconto_w			bigint;
qt_mat_repasse_w			bigint;
qt_proc_repasse_w			bigint;
cd_convenio_parametro_w		conta_paciente.cd_convenio_parametro%type;
ie_tipo_titulo_rec_w			titulo_receber.ie_tipo_titulo%type;

cd_unid_medida_conv_w		conta_paciente_resumo.cd_unid_medida_conv%type;
tx_conversao_qtde_w		conta_paciente_resumo.tx_conversao_qtde%type;

cd_convenio_fluxo_w		convenio.cd_convenio%type;
ie_convenio_conta_w		varchar(1);
ie_item_repasse_calc_w		varchar(1);
ie_valor_informado_w		varchar(1);
dt_conta_definitiva_w		timestamp;
ie_resum_mat_sus_w		varchar(1) := 'S';
cd_sequencia_parametro_w material_atend_paciente.cd_sequencia_parametro%type;

c01 CURSOR FOR
------ receitas dos procedimentos/servicos/diarias
SELECT
	sum(0) cd_material, 
	a.ie_origem_proced, 
 	a.cd_procedimento, 
	a.nr_seq_exame,
	a.nr_seq_proc_interno,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta, 
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,
	a.cd_medico_executor,
	coalesce(a.cd_especialidade,0),
	a.ie_tipo_servico_sus,
	a.ie_responsavel_credito,
	sum(coalesce(a.qt_procedimento,0)), 
 	sum(coalesce(a.vl_medico,0)),
	sum(coalesce(a.vl_auxiliares,0)),
	sum(coalesce(a.vl_anestesista,0)),
 	sum(CASE WHEN coalesce(a.vl_custo_operacional,0)=0 THEN 		CASE WHEN b.ie_classificacao=2 THEN coalesce(a.vl_procedimento,0) WHEN b.ie_classificacao=3 THEN  coalesce(a.vl_procedimento,0)  ELSE 0 END   ELSE coalesce(a.vl_custo_operacional,0) END ),
	sum(coalesce(a.vl_materiais,0)),
	sum(coalesce(a.vl_procedimento,0)),
	sum(0),
--	sum(nvl(c.vl_procedimento,0)) vl_desconto,
	sum(CASE WHEN qt_desconto_w=0 THEN  0  ELSE coalesce((obter_proc_paciente_valor(a.nr_sequencia, 3, 1))::numeric ,0) END )  vl_desconto,
	'' cd_unidade_medida,
	CASE WHEN b.ie_classificacao='3' THEN  'S'  ELSE 'N' END  ie_diaria,
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_procedimento),'month',0),
	'',
	coalesce(a.nr_prescricao,0),
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	sum(coalesce(d.vl_procedimento, coalesce(a.vl_procedimento,0))) vl_original,
	coalesce(a.nr_seq_grupo_rec, b.nr_seq_grupo_rec),
	sum(CASE WHEN qt_proc_repasse_w=0 THEN  0  ELSE obter_valor_repasse_item(a.nr_sequencia,'PC',e.ie_cancelamento, a.nr_seq_proc_est, null) END  + CASE WHEN coalesce(a.nr_seq_proc_pacote,0)=0 THEN  0  ELSE obter_rep_calc_pacote(a.nr_seq_proc_pacote,a.vl_procedimento,e.ie_cancelamento,a.nr_seq_proc_est,null) END ),
	0,
	0,
	0 qt_estoque,
	a.cd_cgc_prestador,
	null,
	null,
	null,
	a.cd_sequencia_parametro
FROM conta_paciente e, procedimento b, procedimento_paciente a
LEFT OUTER JOIN proc_paciente_valor d ON (a.nr_sequencia = d.nr_seq_procedimento AND 1 = d.ie_tipo_valor)
WHERE a.nr_interno_conta 		= nr_interno_conta_p and coalesce(a.nr_seq_proc_pacote,0) 	<> a.nr_sequencia and coalesce(a.cd_motivo_exc_conta::text, '') = '' and a.cd_procedimento  		= b.cd_procedimento and a.ie_origem_proced 		= b.ie_origem_proced --and	a.nr_sequencia			= c.nr_seq_procedimento (+)

--and	3				= c.ie_tipo_valor (+)
   and e.nr_interno_conta = a.nr_interno_conta group by 
	a.ie_origem_proced, 
	a.cd_procedimento, 
	a.nr_seq_exame,
	a.nr_seq_proc_interno,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta, 
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,	
	a.cd_medico_executor,
	a.cd_especialidade,
	a.ie_tipo_servico_sus,
	a.ie_responsavel_credito,
	CASE WHEN b.ie_classificacao='3' THEN  'S'  ELSE 'N' END ,
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_procedimento),'month',0),
	coalesce(a.nr_prescricao,0),
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	coalesce(a.nr_seq_grupo_rec, b.nr_seq_grupo_rec),
	a.cd_cgc_prestador,
	a.cd_sequencia_parametro

union	all

------ receitas dos participantes dos procedimentos
PERFORM 
	sum(0),
	a.ie_origem_proced, 
 	a.cd_procedimento, 
	a.nr_seq_exame,
	a.nr_seq_proc_interno,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	b.ie_emite_conta, 
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,
	b.cd_pessoa_fisica,
	coalesce(a.cd_especialidade,0),
	b.ie_tipo_servico_sus,
	b.ie_responsavel_credito,
	sum(0), 
 	sum(coalesce(b.vl_participante,0)),
	sum(0),
	sum(0),
 	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	'' cd_unidade_medida,
	max('N'),
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_procedimento),'month',0),
	'',
	coalesce(a.nr_prescricao,0),
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	sum(CASE WHEN coalesce(b.vl_participante,0)=0 THEN 0  ELSE coalesce(b.vl_original, coalesce(b.vl_participante,0)) END ) vl_original,
	a.nr_seq_grupo_rec,
	0,
	0,
	0,
	0 qt_estoque,
	a.cd_cgc_prestador,
	null,
	null,
	null,
	a.cd_sequencia_parametro
from 	procedimento_participante b,
	procedimento_paciente a
where a.nr_interno_conta 	= nr_interno_conta_p
and	coalesce(a.nr_seq_proc_pacote,0) <> a.nr_sequencia
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	a.nr_sequencia  		= b.nr_sequencia
group by 
	a.ie_origem_proced, 
 	a.cd_procedimento, 
	a.nr_seq_exame,
	a.nr_seq_proc_interno,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	b.ie_emite_conta,
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,	
	b.cd_pessoa_fisica,
	a.cd_especialidade,
	b.ie_tipo_servico_sus,
	b.ie_responsavel_credito,null,
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_procedimento),'month',0),
	coalesce(a.nr_prescricao,0),
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	a.nr_seq_grupo_rec,
	a.cd_cgc_prestador,
	a.cd_sequencia_parametro

union all

------ diarias do sus (procedimento criado somente tasy)
select 
 	0, 
	2, 
	99080012, 
	0,
	0,
	c.cd_setor_atendimento, 
	c.cd_setor_atendimento,
	'', 
	c.cd_setor_atendimento,
	'', 
	'0', 0, 0, '', 
	pkg_date_utils.get_time(coalesce(a.dt_alta,a.dt_entrada),0,0,0) - pkg_date_utils.get_time(a.dt_entrada,0,0,0), 
	0, 0, 0, 0, 0, 0,	0, 0,
	'',
	'S',
	b.cd_convenio_parametro,
	PKG_DATE_UTILS.start_of(b.dt_mesano_referencia,'month',0), 
	'',
	0,
	0,
	0,
	0,
	-1,
	0,
	0,
	0,
	0 qt_estoque,
	null cd_cgc_prestador,
	null,
	null,
	null,
	null
from 	atend_paciente_unidade c,
	atendimento_paciente a, 
	conta_paciente b
where	b.nr_interno_conta 	= nr_interno_conta_p
and	a.nr_atendimento		= b.nr_atendimento
and	a.nr_atendimento		= c.nr_atendimento
and	c.dt_entrada_unidade	=
	(select max(y.dt_entrada_unidade)
	from	setor_atendimento x,
		atend_paciente_unidade y
	where	c.nr_atendimento 	= y.nr_atendimento
	and	x.cd_setor_atendimento = y.cd_setor_atendimento
	and	x.cd_classif_setor in (3,4,8))
and	ie_tipo_convenio_w 	= 3
and	ie_tipo_atendimento_w	= 1
and	ie_diaria_sus_w		= 'R'
and	obter_situacao_procedimento(99080012,2)		= 'A'

union all

------ materiais e medicamentos (sus com valor zerado)
select 
	a.cd_material, 
	sum(0),
	sum(0),
	0,
	0,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta, 
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,
	'0',
	coalesce(a.cd_especialidade,0),
	0, a.ie_responsavel_credito,
	sum(a.qt_material),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(CASE WHEN ie_tipo_convenio_w=10 THEN  0  ELSE CASE WHEN ie_resum_mat_sus_w='N' THEN  0  ELSE coalesce(a.vl_material,0) END  END ),
	sum(CASE WHEN qt_desconto_w=0 THEN  0  ELSE coalesce(Obter_Desconto_MatProc(a.nr_sequencia,'M'),0) END ) vl_desconto,
	a.cd_unidade_medida,
	max('N'),
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_atendimento),'month',0),
	a.cd_cgc_fornecedor,
	CASE WHEN coalesce(a.cd_cgc_fornecedor::text, '') = '' THEN  0  ELSE a.nr_prescricao END ,
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	sum(coalesce(a.vl_tabela_original, coalesce(a.vl_material,0))) vl_original,
	a.nr_seq_grupo_rec,
	sum(CASE WHEN qt_mat_repasse_w=0 THEN  0  ELSE obter_valor_repasse_item(a.nr_sequencia,'MC',b.ie_cancelamento, null, a.nr_seq_mat_est) END  + CASE WHEN coalesce(a.nr_seq_proc_pacote,0)=0 THEN  0  ELSE obter_rep_calc_pacote(a.nr_seq_proc_pacote,coalesce(a.vl_material,0),b.ie_cancelamento,null,a.nr_seq_mat_est) END ),
	0,
	0,
	coalesce(coalesce(sum(a.qt_estoque), sum(a.qt_material)),0) qt_estoque,
	a.cd_cgc_prestador,
	a.cd_unid_medida_conv,
	a.tx_conversao_qtde,
	a.ie_valor_informado,
	a.cd_sequencia_parametro
from 
	conta_paciente b,
	material_atend_paciente a
where	a.nr_interno_conta = nr_interno_conta_p
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	b.nr_interno_conta = a.nr_interno_conta
--and	a.nr_sequencia	= c.nr_seq_material (+)

--and	3			= c.ie_tipo_valor (+)
group by 
	a.cd_material, 
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta,
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento),
	a.ie_responsavel_credito,
	a.cd_conta_contabil,
	a.cd_unidade_medida,
	a.cd_especialidade,
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_atendimento),'month',0),
	a.cd_cgc_fornecedor,
	CASE WHEN coalesce(a.cd_cgc_fornecedor::text, '') = '' THEN  0  ELSE a.nr_prescricao END ,
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	a.nr_seq_grupo_rec,
	a.cd_cgc_prestador,
	a.cd_unid_medida_conv,
	a.tx_conversao_qtde,
	a.ie_valor_informado,
	a.cd_sequencia_parametro
/*	esta rotina foi incluida por marcus em 09/12/2004 para atender os12126 */


------ procedimentos excluidos
union all

select 
	0 cd_material, 
	a.ie_origem_proced, 
 	a.cd_procedimento, 
	a.nr_seq_exame,
	a.nr_seq_proc_interno,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta, 
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,
	a.cd_medico_executor,
	coalesce(a.cd_especialidade,0),
	a.ie_tipo_servico_sus,
	a.ie_responsavel_credito,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 
	'' cd_unidade_medida,
	CASE WHEN b.ie_classificacao='3' THEN  'S'  ELSE 'N' END  ie_diaria,
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_procedimento),'month',0),
	'',
	coalesce(a.nr_prescricao,0),
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	0,
	coalesce(a.nr_seq_grupo_rec, b.nr_seq_grupo_rec),
	0,
	sum(qt_procedimento),
	sum(qt_procedimento),
	0 qt_estoque,
	a.cd_cgc_prestador,
	null,
	null,
	null,
	a.cd_sequencia_parametro
from 	motivo_exc_conta c,
	procedimento b, 
	procedimento_paciente a
where	nr_seq_conta_origem		= nr_interno_conta_p
and	a.cd_procedimento  		= b.cd_procedimento
and	a.ie_origem_proced 		= b.ie_origem_proced
and	a.cd_motivo_exc_conta 		= c.cd_motivo_exc_conta
and	ie_custo_hospital		= 'S'
and	c.ie_situacao			= 'A'
group by 
	a.ie_origem_proced, 
	a.cd_procedimento, 
	a.nr_seq_exame,
	a.nr_seq_proc_interno,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta, 
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,	
	a.cd_medico_executor,
	a.cd_especialidade,
	a.ie_tipo_servico_sus,
	a.ie_responsavel_credito,
	CASE WHEN b.ie_classificacao='3' THEN  'S'  ELSE 'N' END ,
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_procedimento),'month',0),
	coalesce(a.nr_prescricao,0),
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	coalesce(a.nr_seq_grupo_rec, b.nr_seq_grupo_rec),
	a.cd_cgc_prestador,
	a.cd_sequencia_parametro

union all

------ materiais e medicamentos excluidos
select 
	a.cd_material, 
	sum(0),
	sum(0),
	0,
	0,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta, 
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,
	'0',
	coalesce(a.cd_especialidade,0),
	0, a.ie_responsavel_credito,
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),		
	a.cd_unidade_medida,
	max('N'),
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_atendimento),'month',0),
	a.cd_cgc_fornecedor,
	CASE WHEN coalesce(a.cd_cgc_fornecedor::text, '') = '' THEN  0  ELSE a.nr_prescricao END ,
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	sum(0),
	a.nr_seq_grupo_rec,
	0,
	sum(qt_material),
	sum(qt_material),
	0 qt_estoque,
	a.cd_cgc_prestador,
	a.cd_unid_medida_conv,
	a.tx_conversao_qtde,
	null,
	a.cd_sequencia_parametro
from 	motivo_exc_conta b,
	material_atend_paciente a
where	a.nr_seq_conta_origem	= nr_interno_conta_p
and 	a.cd_motivo_exc_conta 	= b.cd_motivo_exc_conta
and	b.ie_situacao		= 'A'
and	ie_custo_hospital	= 'S'
group by 
	a.cd_material, 
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta,
	a.ie_responsavel_credito,
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,
	a.cd_unidade_medida,
	a.cd_especialidade,
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_atendimento),'month',0),
	a.cd_cgc_fornecedor,
	CASE WHEN coalesce(a.cd_cgc_fornecedor::text, '') = '' THEN  0  ELSE a.nr_prescricao END ,
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	a.nr_seq_grupo_rec,
	a.cd_cgc_prestador,
	a.cd_unid_medida_conv,
	a.tx_conversao_qtde,
	a.cd_sequencia_parametro

union all

-- procedimentos excluidos (ie_custo_hospital = 'N'),   fabricio em 25/07/2008  os 101936
select 
	0 cd_material, 
	a.ie_origem_proced, 
 	a.cd_procedimento, 
	a.nr_seq_exame,
	a.nr_seq_proc_interno,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta, 
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,
	a.cd_medico_executor,
	coalesce(a.cd_especialidade,0),
	a.ie_tipo_servico_sus,
	a.ie_responsavel_credito,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 
	'' cd_unidade_medida,
	CASE WHEN b.ie_classificacao='3' THEN  'S'  ELSE 'N' END  ie_diaria,
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_procedimento),'month',0),
	'',
	coalesce(a.nr_prescricao,0),
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	0,
	coalesce(a.nr_seq_grupo_rec, b.nr_seq_grupo_rec),
	0,
	0,
	sum(qt_procedimento),
	0 qt_estoque,
	a.cd_cgc_prestador,
	null,
	null,
	null,
	a.cd_sequencia_parametro
from 	motivo_exc_conta c,
	procedimento b, 
	procedimento_paciente a
where	nr_seq_conta_origem		= nr_interno_conta_p
and	a.cd_procedimento  		= b.cd_procedimento
and	a.ie_origem_proced 		= b.ie_origem_proced
and	a.cd_motivo_exc_conta 		= c.cd_motivo_exc_conta
and	ie_custo_hospital		= 'N'
and	c.ie_situacao			= 'A'
group by 
	a.ie_origem_proced, 
	a.cd_procedimento, 
	a.nr_seq_exame,
	a.nr_seq_proc_interno,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta, 
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,	
	a.cd_medico_executor,
	a.cd_especialidade,
	a.ie_tipo_servico_sus,
	a.ie_responsavel_credito,
	CASE WHEN b.ie_classificacao='3' THEN  'S'  ELSE 'N' END ,
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_procedimento),'month',0),
	coalesce(a.nr_prescricao,0),
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	coalesce(a.nr_seq_grupo_rec, b.nr_seq_grupo_rec),
	a.cd_cgc_prestador,
	a.cd_sequencia_parametro

union all

------ materiais e medicamentos excluidos (ie_custo_hospital = 'N')  fabricio em 25/07/2008  os 101936
select 
	a.cd_material, 
	sum(0),
	sum(0),
	0,
	0,
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta, 
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,
	'0',
	coalesce(a.cd_especialidade,0),
	0, a.ie_responsavel_credito,
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),
	sum(0),		
	a.cd_unidade_medida,
	max('N'),
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_atendimento),'month',0),
	a.cd_cgc_fornecedor,
	CASE WHEN coalesce(a.cd_cgc_fornecedor::text, '') = '' THEN  0  ELSE a.nr_prescricao END ,
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	sum(0),
	a.nr_seq_grupo_rec,
	0,
	0,
	sum(qt_material),
	0 qt_estoque,
	a.cd_cgc_prestador,
	a.cd_unid_medida_conv,
	a.tx_conversao_qtde,
	null,
	a.cd_sequencia_parametro
from 	motivo_exc_conta b,
	material_atend_paciente a
where	a.nr_seq_conta_origem	= nr_interno_conta_p
and 	a.cd_motivo_exc_conta 	= b.cd_motivo_exc_conta
and	b.ie_situacao		= 'A'
and	ie_custo_hospital	= 'N'
group by 
	a.cd_material, 
 	--decode(ie_setor_receita_w, 'E', a.cd_setor_atendimento, nvl(a.cd_setor_paciente, a.cd_setor_atendimento)),
	a.cd_setor_atendimento,
	a.cd_setor_paciente,
	a.ie_emite_conta,
	a.ie_responsavel_credito,
	coalesce(a.cd_setor_receita, a.cd_setor_atendimento), 
	a.cd_conta_contabil,
	a.cd_unidade_medida,
	a.cd_especialidade,
	a.cd_convenio,
	PKG_DATE_UTILS.start_of(coalesce(dt_conta, dt_atendimento),'month',0),
	a.cd_cgc_fornecedor,
	CASE WHEN coalesce(a.cd_cgc_fornecedor::text, '') = '' THEN  0  ELSE a.nr_prescricao END ,
	a.nr_cirurgia,
	a.nr_seq_proc_pacote,
	a.nr_seq_grupo_rec,
	a.cd_cgc_prestador,
	a.cd_unid_medida_conv,
	a.tx_conversao_qtde,
	a.cd_sequencia_parametro
/*Itens de repasse da conta */
	

union all

select	0, 
		0, 
		null, 
		0,
		0,
		a.cd_setor_atendimento, 
		a.cd_setor_atendimento,
		'', 
		a.cd_setor_atendimento,
		'', 
		'0', 0, 0, '', 
		null, 
		0, 0, 0, 0, 0, 0,	0, 0,
		'',
		null,
		a.cd_convenio,
		PKG_DATE_UTILS.start_of(a.dt_lancamento,'month',0), 
		'',
		0,
		0,
		0,
		0,
		null,
		sum(a.vl_repasse),
		0,
		0,
		0 qt_estoque,
		null cd_cgc_prestador,
		null,
		null,
		null,
		null
from 	repasse_terceiro_item a,
		conta_paciente b
where	b.nr_interno_conta		= nr_interno_conta_p
and		a.nr_interno_conta		= b.nr_interno_conta
and		'S'						= coalesce(ie_item_repasse_calc_w,'N')
group by a.cd_setor_atendimento,
		a.cd_convenio,
		a.dt_lancamento;


BEGIN

nr_sequencia_w			:= 0;
delete from CONTA_PACIENTE_RESUMO_IMP imp where imp.nr_interno_conta = nr_interno_conta_p;
delete /*+ index( a CONPARE_PK)*/ from conta_paciente_resumo a
where a.nr_interno_conta = nr_interno_conta_p;

if (ie_status_acerto_p = 2) then
	begin
	
	select 	count(*)
	into STRICT	qt_desconto_w
	from 	conta_paciente_desconto
	where 	nr_interno_conta = nr_interno_conta_p;
	
	select 	count(*)
	into STRICT	qt_mat_repasse_w
	from  	material_repasse 	a,
		material_atend_paciente b
	where  	a.nr_seq_material = b.nr_sequencia
	and   	b.nr_interno_conta = nr_interno_conta_p
	and 	coalesce(ie_repasse_calc, 'S') = 'S';
	
	select	sum(qt_reg)
	into STRICT	qt_proc_repasse_w
        from (SELECT count(a.nr_seq_procedimento) qt_reg
                from 	procedimento_repasse	a,
                        procedimento_paciente 	b
                where 	a.nr_seq_procedimento = b.nr_sequencia         
                and (b.nr_interno_conta = nr_interno_conta_p)
                and	coalesce(ie_repasse_calc, 'S') = 'S'
                
union all

                SELECT  count(a.nr_seq_procedimento) qt_reg 
                from 	procedimento_repasse	a,
                        procedimento_paciente 	b
                where 	a.nr_seq_procedimento = b.nr_sequencia         
                and (a.nr_interno_conta_est = nr_interno_conta_p)
                and	coalesce(ie_repasse_calc, 'S') = 'S') alias7;

	begin
	select	b.ie_tipo_convenio,
		c.ie_tipo_atendimento,
		c.cd_estabelecimento,
		c.ie_clinica,
		a.cd_categoria_parametro,
		a.cd_estabelecimento,
		obter_titulo_conta_guia(a.nr_interno_conta,null,null,a.nr_seq_protocolo),
		ie_carater_inter_sus,
		a.cd_convenio_parametro,
		a.dt_conta_definitiva
	into STRICT	ie_tipo_convenio_w,
		ie_tipo_atendimento_w,
		cd_estabelecimento_w,
		ie_clinica_w,
		cd_categoria_parametro_w,
		cd_estab_conta_w,
		nr_titulo_w,
		ie_carater_inter_sus_w,
		cd_convenio_parametro_w,
		dt_conta_definitiva_w
	from	atendimento_paciente c,
		convenio b,
		conta_paciente a
	where	a.cd_convenio_parametro	= b.cd_convenio
	and 	a.nr_atendimento 	= c.nr_atendimento
	and 	a.nr_interno_conta 	= nr_interno_conta_p;
	exception
		when others then
			ie_tipo_atendimento_w	:= 999;
	end;
	
	if (ie_tipo_convenio_w = 3) and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta_definitiva_w) < to_date('02/10/2018','dd/mm/yyyy')) then
		ie_resum_mat_sus_w := 'N';
	end if;

	select	max(a.ie_origem_titulo),
		max(a.nr_seq_classe),
		max(a.ie_tipo_titulo)
	into STRICT	ie_origem_titulo_w,
		nr_seq_classe_tit_rec_w,
		ie_tipo_titulo_rec_w
	from	titulo_receber a
	where	a.nr_titulo	= nr_titulo_w;

	begin
	select	coalesce(max(ie_setor_receita), 'E')
	into STRICT	ie_setor_receita_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;
	exception
		when others then
			ie_setor_receita_w	:= 'E';
	end;
	
	begin
	select	coalesce(max(ie_diaria_sus),'R')
	into STRICT	ie_diaria_sus_w
	from	sus_parametros
	where	cd_estabelecimento	= cd_estabelecimento_w;
	exception
		when others then
			ie_diaria_sus_w	:= 'R';
	end;
	
	begin
	select	coalesce(max(ie_convenio_conta),'N')
	into STRICT	ie_convenio_conta_w
	from	parametro_fluxo_caixa
	where	cd_estabelecimento	= cd_estabelecimento_w;
	exception
		when others then
			ie_convenio_conta_w := 'N';
	end;
	ie_item_repasse_calc_w := obter_param_usuario(67, 717, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w, ie_item_repasse_calc_w);
	open c01;
    	loop
      fetch c01 into 	
		cd_material_w,
 		ie_origem_proced_w,
		cd_procedimento_w, 
		nr_seq_exame_w,
		nr_seq_proc_interno_w,
		cd_setor_atendimento_w,
		cd_setor_paciente_w,
		cd_estrutura_conta_w, 
		cd_setor_receita_w,
		cd_conta_contabil_w,
		cd_medico_w,
		cd_especialidade_w,
		ie_tipo_servico_sus_w,
		ie_responsavel_credito_w,
 		qt_procedimento_w,
		vl_medico_w,
		vl_auxiliares_w,
		vl_anestesista_w,
		vl_custo_operacional_w,
		vl_materiais_w,
		vl_procedimento_w,
		vl_material_w,
		vl_desconto_w,
		cd_unidade_medida_w,
		ie_diaria_w,
		cd_convenio_w,
		dt_referencia_w,
		cd_cgc_fornecedor_w,
		nr_prescricao_w,
		nr_cirurgia_w,
		nr_seq_proc_pacote_w,
		vl_original_w,
		nr_seq_grupo_rec_w,
		vl_repasse_calc_w,
		qt_exclusao_custo_w,
		qt_exclusao_conta_w,
		qt_estoque_w,
		cd_cgc_prestador_w,
		cd_unid_medida_conv_w,
		tx_conversao_qtde_w,
		ie_valor_informado_w,
		cd_sequencia_parametro_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (ie_convenio_conta_w = 'S') then
			cd_convenio_fluxo_w := cd_convenio_parametro_w;
		else
			cd_convenio_fluxo_w := cd_convenio_w;
		end if;
		
		if (ie_setor_receita_w <> 'E') then
			cd_setor_atendimento_w	:= coalesce(cd_setor_paciente_w,cd_setor_atendimento_w);
		end if;

		if (nr_seq_proc_pacote_w = 0) then
			nr_seq_proc_pacote_w	:= null;
		end if;
		if (coalesce(nr_seq_proc_pacote_w::text, '') = '') then
			vl_original_w		:= 0;
		end if;
		nr_seq_conta_financ_w	:= 0;
		nr_seq_produto_w	:= '';
		if (ie_conta_financ_w = 'S') then
			begin

			-- edgar 26/02/2007 os 51306, incluir tratamento por tipo de pessoa
			select	coalesce(max(cd_cgc),'')
			into STRICT	cd_cgc_convenio_w
			from	convenio
			where	cd_convenio	= cd_convenio_fluxo_w;

			SELECT * FROM obter_produto_financeiro(cd_estabelecimento_w, cd_convenio_fluxo_w, cd_cgc_convenio_w, nr_seq_produto_w, ie_tipo_convenio_w, null, nr_seq_grupo_w) INTO STRICT nr_seq_produto_w, nr_seq_grupo_w;

			nr_seq_conta_financ_w := obter_conta_financeira('E', cd_estab_conta_w, 	-- Edgar 08/04/2010, OS 195388, tratar pelo estabelecimento da conta
					cd_material_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_w, cd_convenio_fluxo_w, cd_cgc_convenio_w, null, nr_seq_conta_financ_w, ie_clinica_w, null, null, ie_tipo_atendimento_w, cd_categoria_parametro_w, null, nr_seq_produto_w, null, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, null, null, null, null, null, null, ie_tipo_titulo_rec_w, null);

			end;
		end if;
		vl_custo_w		:= 0;
		if (coalesce(nr_seq_grupo_rec_w,-1) < 0) then
			select	obter_grupo_receita(cd_estabelecimento_w,
					cd_material_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					ie_tipo_atendimento_w,
					cd_setor_atendimento_w)
			into STRICT	nr_seq_grupo_rec_w
			;
		end if;
		if (cd_material_w = 0) then
			cd_material_w			:= null;
		end if;
		if (cd_procedimento_w = 0) then
			begin
			cd_procedimento_w		:= null;
			ie_origem_proced_w		:= null;
			end;
		end if;
		vl_medico_fora_conta_w 		:= 0;
		vl_sadt_fora_conta_w 		:= 0;
		vl_repasse_terceiro_w		:= 0;
/* sus aih procedimentos sem tipo servico informado */

		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') 	and (ie_origem_proced_w 	= 2)		and (ie_diaria_w		= 'N') 	and (ie_tipo_convenio_w 	= 3) 		and (coalesce(ie_tipo_servico_sus_w::text, '') = '')	then
			begin
			vl_medico_w			:= 0;
			vl_auxiliares_w		:= 0;
			vl_anestesista_w		:= 0;
			end;
		end if;
/* sus procedimentos recem nato */

		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') 	and (ie_diaria_w		= 'N') 	and (ie_tipo_convenio_w = 3) 		and (ie_tipo_servico_sus_w	= 6) 		then
			begin
			vl_medico_fora_conta_w 	:= vl_medico_w;
			vl_materiais_w		:= 0;
			vl_medico_w			:= 0;
			vl_auxiliares_w		:= 0;
			vl_anestesista_w		:= 0;
			end;
		end if;
/* sus sadt executados por cgc sem vinculo com hospital */

		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') 	and (ie_diaria_w		= 'N') 	and (vl_custo_operacional_w > 0) 		and (ie_tipo_convenio_w = 3) 		and (ie_tipo_servico_sus_w	= 8) 		then
			begin
			vl_sadt_fora_conta_w 	:= vl_custo_operacional_w;
			vl_custo_operacional_w	:= 0;
			end;
		end if;
/* classificar os valores do medicos */

		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_diaria_w		= 'N') and
			((vl_medico_w + vl_auxiliares_w + vl_anestesista_w) <> 0) then
			begin
/* sus aih */

			if (ie_tipo_convenio_w 	= 3) and (ie_origem_proced_w 	= 2) then
				begin
				if (ie_tipo_servico_sus_w = 7) then
					begin
					vl_medico_fora_conta_w 	:=
						(vl_medico_fora_conta_w + 
						vl_medico_w + vl_auxiliares_w + vl_anestesista_w);
					vl_medico_w			:= 0;
					vl_auxiliares_w		:= 0;
					vl_anestesista_w		:= 0;
					end;
				end if;
				end;
			end if;

/* sus bpa */

			if (ie_tipo_convenio_w 	= 3) and (ie_origem_proced_w 	= 3) then

				begin	
				vl_medico_fora_conta_w 		:= 0;
				if (coalesce(cd_medico_w::text, '') = '') then	
					begin
					vl_medico_w			:= 0;
					vl_auxiliares_w		:= 0;
					vl_anestesista_w		:= 0;
					end;
				end if;
				end;
			end if;

		
			/* convenios */

			if	((ie_tipo_convenio_w 	<> 3) or (ie_origem_proced_w	= 7)) and (ie_origem_proced_w 	not in (2,3)) then
				begin
				if (coalesce(ie_responsavel_credito_w::text, '') = '') then
					select coalesce(obter_se_medico_conveniado(cd_estabelecimento_w, cd_medico_w, cd_convenio_w,
							null, null, null,cd_setor_atendimento_w, null, null, ie_tipo_atendimento_w, null, ie_carater_inter_sus_w), 'N')
					into STRICT ie_responsavel_credito_w
					;			
				end if;
				if (ie_responsavel_credito_w IS NOT NULL AND ie_responsavel_credito_w::text <> '') 	and (ie_responsavel_credito_w <> 'S') 		and (ie_responsavel_credito_w <> 'N') 		then
					begin
					begin
					select coalesce(ie_entra_conta,'N'),
						 coalesce(ie_repassa_medico,'N'),
						 coalesce(ie_coluna_soma,'M')
					into STRICT	 ie_entra_conta_w,
						 ie_repassa_medico_w,
						 ie_coluna_soma_w
					from 	 regra_honorario
					where  cd_regra = ie_responsavel_credito_w;
					exception
						when others then
							begin
							ie_entra_conta_w 		:= 'N';
							ie_repassa_medico_w	:= 'N';
							ie_coluna_soma_w		:= 'M';
							end;
					end;
					if (ie_entra_conta_w = 'S') 	and (vl_medico_w	<> 0)		and (coalesce(cd_medico_w::text, '') = '') 		then
						begin	
						vl_custo_operacional_w	:=
										(vl_custo_operacional_w +
										vl_auxiliares_w 		+
										vl_anestesista_w 		+
										vl_medico_w);
						vl_medico_w			:= 0;
						vl_auxiliares_w		:= 0;
						vl_anestesista_w		:= 0;
						end;
					end if;
					if (ie_entra_conta_w = 'T') or (ie_entra_conta_w = 'N') then
						begin
						vl_medico_fora_conta_w 	:= (vl_medico_fora_conta_w +
						   	vl_medico_w + vl_auxiliares_w + vl_anestesista_w);
						vl_medico_w			:= 0;
						vl_auxiliares_w		:= 0;
						vl_anestesista_w		:= 0;
						end;
					end if;
					if (ie_entra_conta_w = 'T') then
						begin
						vl_sadt_fora_conta_w 	:= vl_custo_operacional_w + vl_materiais_w;
						vl_custo_operacional_w	:= 0;
						vl_materiais_w		:= 0;
						end;
					end if;
					if (ie_repassa_medico_w = 'S') 	and (ie_entra_conta_w = 'S') 	then
						vl_repasse_terceiro_w := vl_medico_w;
					else
						begin
						if (ie_coluna_soma_w = 'C') 	then
							begin
							vl_custo_operacional_w	:=
											(vl_custo_operacional_w +
											vl_auxiliares_w 		+
											vl_anestesista_w 		+
											vl_medico_w);
							vl_medico_w			:= 0;
							vl_auxiliares_w		:= 0;
							vl_anestesista_w		:= 0;
							end;
						end if;
						end;
					end if;
					end;
				else
					begin
					if (ie_responsavel_credito_w = 'S') then
						begin
						vl_medico_fora_conta_w 	:= (vl_medico_fora_conta_w +
							vl_medico_w + vl_auxiliares_w + vl_anestesista_w);
						vl_medico_w			:= 0;
						vl_auxiliares_w		:= 0;
						vl_anestesista_w		:= 0;
						end;
					end if;
					end;
				end if;
				end;
			end if;
			end;
		end if;

		/* ricardo 05/06/2007 - tratamento resp. credito materiais */

			if (coalesce(cd_material_w,0) <> 0) then
				begin

				if (ie_responsavel_credito_w IS NOT NULL AND ie_responsavel_credito_w::text <> '') and (ie_responsavel_credito_w <> 'S') and (ie_responsavel_credito_w <> 'N') then
					begin
					begin
					select coalesce(ie_entra_conta,'N'),
						 coalesce(ie_repassa_medico,'N'),
						 coalesce(ie_coluna_soma,'M')
					into STRICT	 ie_entra_conta_w,
						 ie_repassa_medico_w,
						 ie_coluna_soma_w
					from 	 regra_honorario
					where  cd_regra = ie_responsavel_credito_w;
					exception
						when others then
							begin
							ie_entra_conta_w	:= 'N';
							ie_repassa_medico_w	:= 'N';
							ie_coluna_soma_w	:= 'M';
							end;
					end;
					
					if	((ie_entra_conta_w = 'T') or (ie_entra_conta_w = 'N')) and (coalesce(ie_valor_informado_w,'N') = 'N') then
						begin
						vl_medico_fora_conta_w 	:= vl_material_w;
						vl_material_w		:= 0;
						end;
					end if;
					if (ie_repassa_medico_w = 'S') 	and (ie_entra_conta_w = 'S') 	then
						vl_repasse_terceiro_w := vl_material_w;
					end if;
					end;
				end if;
				end;
			end if;

		begin
		nr_sequencia_w	:= nr_sequencia_w + 1;
		insert into conta_paciente_resumo(
				 nr_interno_conta       ,
				 nr_sequencia           ,
				 qt_resumo              ,
				 vl_medico              ,
				 vl_auxiliares          ,
				 vl_custo_operacional	,
				 vl_anestesista         ,
				 vl_materiais           ,
				 vl_procedimento        ,
				 vl_custo               ,
				 vl_material,
				 cd_setor_atendimento,
				 cd_setor_paciente	,
				 cd_especialidade,
				 cd_conta_contabil,
				 cd_material,
				 ie_origem_proced,
				 cd_procedimento,
				 nr_seq_exame,
				 nr_seq_proc_interno,
				 cd_unidade_medida	,
				 vl_medico_fora_conta	,
				 cd_setor_receita	,
				 ie_diaria		,
				 vl_sadt_fora_conta	,
				 vl_repasse_terceiro	,
				 vl_desconto		,
				 nr_seq_grupo_rec	,
				 cd_estrutura_conta	,
				 nr_seq_conta_financ	,
				 dt_referencia		,
				 nr_cirugia		,
				 nr_prescricao		,
				 cd_cgc_fornec		,
				 nr_seq_proc_pacote	,
				 vl_original,
				vl_custo_variavel,
				vl_custo_dir_apoio,
				vl_custo_mao_obra,
				vl_custo_direto,
				vl_custo_indireto,
				vl_despesa,
				vl_glosa,
				vl_repasse_calc,
				vl_custo_sadt,
				vl_desc_financ,
				qt_exclusao_custo,
				qt_exclusao_conta,
				nr_seq_produto,
				qt_estoque,
				ie_responsavel_credito,
				cd_cgc_prestador,
				cd_unid_medida_conv,
				tx_conversao_qtde,
				cd_sequencia_parametro)
		values (
				nr_interno_conta_p,
				nr_sequencia_w,
				qt_procedimento_w,
				vl_medico_w,
				vl_auxiliares_w,
				vl_custo_operacional_w,
				vl_anestesista_w,
				vl_materiais_w,
				vl_procedimento_w,
				vl_custo_w,
				vl_material_w,
				cd_setor_atendimento_w,
				cd_setor_paciente_w,
				cd_especialidade_w,
				cd_conta_contabil_w,
				cd_material_w,
				ie_origem_proced_w,
				cd_procedimento_w,
				CASE WHEN nr_seq_exame_w=0 THEN null  ELSE nr_seq_exame_w END ,
				CASE WHEN nr_seq_proc_interno_w=0 THEN null  ELSE nr_seq_proc_interno_w END ,
				cd_unidade_medida_w,
				vl_medico_fora_conta_w,
				cd_setor_receita_w,
				ie_diaria_w,
				vl_sadt_fora_conta_w,
				vl_repasse_terceiro_w,
				vl_desconto_w,
				nr_seq_grupo_rec_w,
				cd_estrutura_conta_w,
				nr_seq_conta_financ_w,
				dt_referencia_w,
				nr_cirurgia_w,
				nr_prescricao_w,
				cd_cgc_fornecedor_w,
				nr_seq_proc_pacote_w,
				vl_original_w,
				0,0,0,0,0,0,0,
				vl_repasse_calc_w, 
				0, 0,
				qt_exclusao_custo_w,
				qt_exclusao_conta_w,
				nr_seq_produto_w,
				qt_estoque_w,
				ie_responsavel_credito_w,
				cd_cgc_prestador_w,
				cd_unid_medida_conv_w,
				tx_conversao_qtde_w,
				cd_sequencia_parametro_w);
		exception
			when others then
				cd_material_w		:= null;
        	end;
		end;
   	end loop;
	close c01;
	insert into conta_paciente_resumo(
				 nr_interno_conta       ,
				 nr_sequencia           ,
				 qt_resumo              ,
				 vl_medico              ,
				 vl_auxiliares          ,
				 vl_custo_operacional	,
				 vl_anestesista         ,
				 vl_materiais           ,
				 vl_procedimento        ,
				 vl_custo               ,
				 vl_material		,
				 cd_setor_atendimento	,
				 cd_setor_paciente	,
				 cd_especialidade       ,
				 cd_conta_contabil      ,
				 cd_material            ,
				 ie_origem_proced       ,
				 cd_procedimento	,
				 nr_seq_exame,
				 nr_seq_proc_interno,
				 cd_unidade_medida	,
				 vl_medico_fora_conta	,
				 cd_setor_receita	,
				 ie_diaria		,
				 vl_sadt_fora_conta	,
				 vl_repasse_terceiro	,
				 vl_desconto		,
				 nr_seq_grupo_rec	,
				 cd_estrutura_conta	,
				 nr_seq_conta_financ	,
				 dt_referencia		,
				 nr_cirugia		,
				 nr_prescricao		,
				 cd_cgc_fornec		,
				 nr_seq_proc_pacote	,
				 vl_original,
				vl_custo_variavel,
				vl_custo_dir_apoio,
				vl_custo_mao_obra,
				vl_custo_direto,
				vl_custo_indireto,
				vl_despesa,
				vl_glosa,
				vl_repasse_calc,
				vl_custo_sadt,
				vl_desc_financ,
				qt_exclusao_custo,
				qt_exclusao_conta,
				nr_seq_produto,
				qt_estoque,
				ie_responsavel_credito,
				cd_cgc_prestador,
				cd_unid_medida_conv,
				tx_conversao_qtde,
				cd_sequencia_parametro)
	SELECT 
		nr_interno_conta,
		min(nr_sequencia + 40000),
		sum(qt_resumo),
		sum(vl_medico),
		sum(vl_auxiliares),
		sum(vl_custo_operacional),
		sum(vl_anestesista),
		sum(vl_materiais),
		sum(vl_procedimento),
		sum(vl_custo),
		sum(vl_material),
		cd_setor_atendimento,
		cd_setor_paciente,
		cd_especialidade,
		cd_conta_contabil,
		cd_material,
		ie_origem_proced,
		cd_procedimento,
		nr_seq_exame,
		nr_seq_proc_interno,
		cd_unidade_medida,
		sum(vl_medico_fora_conta),
		cd_setor_receita,
		ie_diaria,
		sum(vl_sadt_fora_conta),
		sum(vl_repasse_terceiro),
		sum(vl_desconto),
		nr_seq_grupo_rec,
		cd_estrutura_conta,
		nr_seq_conta_financ,
		dt_referencia,
		nr_cirugia,
		nr_prescricao,
		cd_cgc_fornec,
		nr_seq_proc_pacote,
		sum(vl_original),
		sum(vl_custo_variavel),
		sum(vl_custo_dir_apoio),
		sum(vl_custo_mao_obra),
		sum(vl_custo_direto),
		sum(vl_custo_indireto),
		sum(vl_despesa),
		sum(vl_glosa),
		sum(vl_repasse_calc),
		sum(vl_custo_sadt),
		sum(vl_desc_financ),
		sum(qt_exclusao_custo),
		sum(qt_exclusao_conta),
		nr_seq_produto,
		sum(qt_estoque),
		ie_responsavel_credito,
		cd_cgc_prestador,
		cd_unid_medida_conv,
		tx_conversao_qtde,
		cd_sequencia_parametro
	from 	conta_paciente_resumo
	where nr_interno_conta = nr_interno_conta_p
	group by 
		nr_interno_conta,
		cd_setor_atendimento,
		cd_setor_paciente,
		cd_especialidade,
		cd_conta_contabil,
		cd_material,
		ie_origem_proced,
		cd_procedimento,
		nr_seq_exame,
		nr_seq_proc_interno,
		cd_unidade_medida,
		cd_setor_receita,
		ie_diaria,
		nr_seq_grupo_rec,
		cd_estrutura_conta,
		nr_seq_conta_financ,
		dt_referencia,
		 nr_cirugia,
		 nr_prescricao,
		 cd_cgc_fornec,
		 nr_seq_proc_pacote,
		nr_seq_produto,
		ie_responsavel_credito,
		cd_cgc_prestador,
		cd_unid_medida_conv,
		tx_conversao_qtde,
		cd_sequencia_parametro;
	end;

    DELETE FROM CONTA_PACIENTE_RESUMO_IMP A
	WHERE A.NR_INTERNO_CONTA = NR_INTERNO_CONTA_P 
	  AND A.NR_SEQ_CONTA_PAC_RESUMO  < 40000;
	delete from conta_paciente_resumo a
	where a.nr_interno_conta = nr_interno_conta_p
	  and a.nr_sequencia 	< 40000;
	CALL atualizar_glosa_conta(nr_interno_conta_p);
	CALL atualizar_calculo_imposto(nr_interno_conta_p);
	atualizar_custo_conta(nr_interno_conta_p);
	CALL atualizar_desconto_conta(nr_interno_conta_p);
	CALL gerar_conta_paciente_guia(nr_interno_conta_p,ie_status_acerto_p);
	CALL Atualizar_Dados_Resultado(nr_interno_conta_p);
	select sum(coalesce(vl_desconto,0)),
		coalesce(sum(vl_procedimento + vl_material),0)
	into STRICT	vl_desconto_w,
		vl_conta_w
	from	conta_paciente_resumo
	where	nr_interno_conta	= nr_interno_conta_p;

	/* felipe - 17/08/2007 - os - 65674 - existem convenios do tipo sus/internado que deve ter o valor baseado no calculo sus/aih
	if	(ie_tipo_convenio_w	= 3) and
		(ie_tipo_atendimento_w	= 1) then */


	/* Comentado pelo Dsilva - OS 552491
	if	(ie_tipo_convenio_w	= 10) and
		(ie_tipo_atendimento_w	= 1) then
		select	sum(nvl(vl_sadt,0)) + sum(nvl(vl_ato_anestesista,0)) + sum(nvl(b.vl_medico,0)) + sum(nvl(vl_matmed,0))
		into	vl_conta_w
		from	sus_valor_proc_paciente	b,
			procedimento_paciente 	a
		where	a.nr_sequencia		= b.nr_sequencia
		and	a.cd_motivo_exc_conta	is null
		and	a.nr_interno_conta	= nr_interno_conta_p;
	end if;*/
	update conta_paciente
	set	vl_conta	  = vl_conta_w,
		vl_desconto	  = vl_desconto_w,
		dt_geracao_resumo = clock_timestamp()
	where	nr_interno_conta	= nr_interno_conta_p;
end if;

CALL gerar_eis_conta_paciente(nr_interno_conta_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_resumo_conta ( nr_interno_conta_p bigint, ie_status_acerto_p bigint) FROM PUBLIC;

