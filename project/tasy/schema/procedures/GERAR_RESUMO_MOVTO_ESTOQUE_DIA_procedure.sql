-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_resumo_movto_estoque_dia ( dt_mesano_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w				bigint;
cd_operacao_estoque_w			integer;
cd_local_estoque_w			integer;
cd_local_destino_w				integer;
cd_centro_custo_w				integer;
cd_conta_contabil_w			varchar(20);
cd_material_w				integer;
cd_material_ww				integer := 0;
qt_estoque_w				double precision;
qt_estoque_ww				double precision;
qt_estoque_mes_ant_w			double precision;
qt_saldo_estoque_w			double precision := 0;
vl_estoque_w				double precision;
ie_consignado_w				varchar(1);
ds_erro_w				varchar(255);
cd_fornecedor_w				varchar(14);
dt_mesano_referencia_w			timestamp;
dt_mesano_referencia_ant_w			timestamp;
dt_movimento_estoque_w			timestamp;
ie_atualiza_estoque_w			varchar(1);

c01 CURSOR FOR
SELECT	PKG_DATE_UTILS.start_of(dt_processo,'dd',0) dt_processo,
	cd_operacao_estoque,
	cd_local_estoque,
	cd_local_estoque_destino,
	cd_centro_custo,
	cd_conta_contabil,
	cd_material_estoque,
	cd_fornecedor,
	sum(qt_estoque),
	sum(coalesce(vl_estoque,0)),
	CASE WHEN obter_dados_operacao_estoque(cd_operacao_estoque,'E')='E' THEN sum(qt_estoque)  ELSE sum(qt_estoque)*-1 END
from 	movimento_estoque_v1
where	dt_mesano_referencia	= dt_mesano_referencia_w
and	cd_estabelecimento	= cd_estabelecimento_p
and	(dt_processo IS NOT NULL AND dt_processo::text <> '')
and	(cd_material_estoque IS NOT NULL AND cd_material_estoque::text <> '')
group by	PKG_DATE_UTILS.start_of(dt_processo,'dd',0),
	cd_operacao_estoque,
	cd_local_estoque,
	cd_local_estoque_destino,
	cd_centro_custo,
	cd_conta_contabil,
	cd_material_estoque,
	cd_fornecedor
order by	cd_material_estoque,
	dt_processo;


BEGIN

dt_mesano_referencia_w		:= PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'month',0);
dt_mesano_referencia_ant_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_w,-1,0);

delete	FROM resumo_movto_estoque_dia
where	dt_mesano_referencia		= dt_mesano_referencia_w
and	cd_estabelecimento		= cd_estabelecimento_p;
commit;

open c01;
loop
fetch c01 into
	dt_movimento_estoque_w,
	cd_operacao_estoque_w,
	cd_local_estoque_w,
	cd_local_destino_w,
	cd_centro_custo_w,
	cd_conta_contabil_w,
	cd_material_w,
	cd_fornecedor_w,
	qt_estoque_w,
	vl_estoque_w,
	qt_estoque_ww;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (cd_material_w <> cd_material_ww) then
		select	coalesce(sum(qt_estoque),0)
		into STRICT	qt_estoque_mes_ant_w
		from	saldo_estoque
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	cd_material		= cd_material_w
		and	dt_mesano_referencia	= dt_mesano_referencia_ant_w;

		qt_saldo_estoque_w		:= qt_estoque_mes_ant_w + qt_estoque_ww;
	else
		qt_saldo_estoque_w		:= qt_saldo_estoque_w + qt_estoque_ww;
	end if;

	if (cd_fornecedor_w IS NOT NULL AND cd_fornecedor_w::text <> '') then
		select	max(cd_cgc)
		into STRICT	cd_fornecedor_w
		from	pessoa_juridica
		where	cd_cgc		= cd_fornecedor_w;
	end if;

	select	coalesce(max(ie_consignado),0),
		coalesce(max(ie_atualiza_estoque),'S')
	into STRICT	ie_consignado_w,
		ie_atualiza_estoque_w
	from 	operacao_estoque
	where	cd_operacao_estoque = cd_operacao_estoque_w;

	if	((ie_atualiza_estoque_w = 'S') or (ie_consignado_w in (2,3,4,5,6,7))) then
		begin

		if (ie_consignado_w = '0') then
			ie_consignado_w		:= 'N';
		else
			ie_consignado_w		:= 'S';
		end if;

		select	nextval('resumo_movto_estoque_dia_seq')
		into STRICT	nr_sequencia_w
		;

		begin

		insert into resumo_movto_estoque_dia(
			nr_sequencia,
			dt_mesano_referencia,
			dt_dia,
			cd_estabelecimento,
			cd_local_estoque,
			cd_material,
			cd_operacao_estoque,
			dt_atualizacao,
			nm_usuario,
			cd_centro_custo,
			cd_conta_contabil,
			cd_local_destino,
			qt_estoque,
			vl_estoque,
			ie_consignado,
			vl_consignado,
			cd_fornecedor,
			qt_saldo_estoque,
			ie_movimentacao)
		values (	nr_sequencia_w,
			dt_mesano_referencia_w,
			dt_movimento_estoque_w,
			cd_estabelecimento_p,
			cd_local_estoque_w,
			cd_material_w,
			cd_operacao_estoque_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_centro_custo_w,
			cd_conta_contabil_w,
			cd_local_destino_w,
			qt_estoque_w,
			vl_estoque_w,
			ie_consignado_w,
			0,
			cd_fornecedor_w,
			qt_saldo_estoque_w,
			'S');

		exception when others then
			ds_erro_w	:= sqlerrm(SQLSTATE);
			insert into log_val_estoque(
					cd_log,
					ds_log,
					dt_atualizacao,
					nm_usuario,
					cd_estabelecimento)
				values (	5,
					substr(wheb_mensagem_pck.get_texto(297532,
						'CD_MATERIAL_W=' || cd_material_w || ';' ||
						'DS_ERRO_W=' || ds_erro_w),1,2000), -- 799846 - ERRO: Material(#@CD_MATERIAL_W#@) #@DS_ERRO_W#@
					clock_timestamp(),
					nm_usuario_p,
					cd_estabelecimento_p);
		end;
		end;
	end if;
	cd_material_ww := cd_material_w;
	end;
end loop;
close c01;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_resumo_movto_estoque_dia ( dt_mesano_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

