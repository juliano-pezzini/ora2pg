-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_event_movto_repas ( nr_repasse_terceiro_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_lote_evento_w		pls_lote_evento.nr_sequencia%type;
nr_seq_terceiro_w		repasse_terceiro.nr_seq_terceiro%type;
dt_periodo_inicial_w		repasse_terceiro.dt_periodo_inicial%type;
dt_periodo_final_w		repasse_terceiro.dt_periodo_final%type;
dt_mesano_referencia_w		repasse_terceiro.dt_mesano_referencia%type;
cd_pessoa_fisica_w		terceiro.cd_pessoa_fisica%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_periodo_w		pls_periodo_pagamento.nr_sequencia%type;
qt_existe_lancto_evento_w	integer;
cd_prestador_w			pls_prestador.cd_prestador%type;

C01 CURSOR FOR
	SELECT	pls_obter_cod_prestador(null,cd_prestador) nr_seq_prestador,
		c.nr_seq_tipo_rep,
		c.nr_seq_evento,
		c.cd_prestador,
		c.vl_repasse
	from (	SELECT	CASE WHEN lpad(m.nr_crm,6,0)='000000' THEN null WHEN lpad(m.nr_crm,6,0)='111111' THEN null  ELSE lpad(m.nr_crm,6,0) END  cd_prestador,
			t.nr_seq_tipo_rep,
			z.nr_seq_evento,
			sum(x.vl_repasse) vl_repasse
		from	medico			m,
			repasse_terceiro_item	x,
			terceiro		t,
			regra_esp_repasse	z
		where	z.nr_sequencia		= x.nr_seq_regra_esp
		and	t.nr_sequencia		= x.nr_seq_terceiro
		and	m.cd_pessoa_fisica	= x.cd_medico
		and	t.cd_pessoa_fisica	= x.cd_medico
		and	x.nr_repasse_terceiro	= nr_repasse_terceiro_p
		and	t.cd_estabelecimento	= cd_estabelecimento_p
		and	coalesce(m.ie_receb_pgto_prod,'N') = 'S'
		group by CASE WHEN lpad(m.nr_crm,6,0)='000000' THEN null WHEN lpad(m.nr_crm,6,0)='111111' THEN null  ELSE lpad(m.nr_crm,6,0) END ,
			t.nr_seq_tipo_rep,
			z.nr_seq_evento) c;

BEGIN
-- BUSCA ALGUMAS INFORMAÇÕES DO REPASSE ATUAL, OU SEJA, DO REPASSE QUE ACABOU DE MUDAR PARA STATUS 'F'
select	b.nr_seq_terceiro,
	b.dt_mesano_referencia,
	b.dt_periodo_inicial,
	b.dt_periodo_final,
	a.cd_pessoa_fisica
into STRICT	nr_seq_terceiro_w,
	dt_mesano_referencia_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w,
	cd_pessoa_fisica_w
from	repasse_terceiro	b,
	terceiro		a
where	a.nr_sequencia		= b.nr_seq_terceiro
and	b.nr_repasse_terceiro	= nr_repasse_terceiro_p;

-- VERIFICA SE EXISTE UM LOTE DE EVENTO NESTA MESMA COMPETÊNCIA E PARA ESTE TERCEIRO E QUE AINDA NÃO FOI UTILIZADO EM UM PAGAMENTO DE PRODUÇÃO
select	max(a.nr_sequencia)
into STRICT	nr_seq_lote_evento_w
from	regra_esp_repasse	d,
	repasse_terceiro	c,
	pls_evento_movimento	b,
	pls_lote_evento		a
where	a.nr_sequencia		= b.nr_seq_lote
and	b.nr_repasse_terceiro	= c.nr_repasse_terceiro
and	c.nr_seq_terceiro	= d.nr_seq_terceiro
and	c.nr_seq_terceiro	= nr_seq_terceiro_w
and	to_char(a.dt_competencia,'yyyymm') = to_char(dt_mesano_referencia_w,'yyyymm')
and	(d.nr_seq_evento IS NOT NULL AND d.nr_seq_evento::text <> '')
and	coalesce(b.ie_cancelamento::text, '') = ''
and not exists (SELECT	1
		from	pls_pagamento_item	e
		where	e.nr_sequencia		= b.nr_seq_pagamento_item);

-- COMEÇA A BUSCAR OS ITENS DO REPASSE E INSERIR NO EVENTO MOVIMENTO
for r_C01_w in C01 loop

	if (coalesce(r_c01_w.nr_seq_evento::text, '') = '') then
		-- Evento não cadastrado. Verificar cadastro em Aplicação Principal\Financeiro\Regra especial de repasse para terceiros campo Evento.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(355091);
	end if;

	-- SE CONSEGUIU OBTER UM PRESTADOR PELO NR_CRM CONTINUA COM ESTE PRESTADOR, SE NÃO BUSCA UM PRESTADOR PELA PESSOA FÍSICA DO TERCEIRO
	if (coalesce(r_C01_w.nr_seq_prestador::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_prestador_w
		from	pls_prestador
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	else
		nr_seq_prestador_w	:= r_C01_w.nr_seq_prestador;
	end if;

	if (coalesce(nr_seq_prestador_w::text, '') = '') then
		-- Prestador não localizado. No processo de realizar o pagamento do repasse para terceiros pelo OPS - Pagamentos de Produção Médica (Operadora) não foi possível localizar nenhum prestador para o terceiro em questão.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(355092);
	else
		select	max(cd_prestador)
		into STRICT	cd_prestador_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_w;
	end if;

	select	count(1)
	into STRICT	qt_existe_lancto_evento_w
	from	pls_evento_movimento	b,
		pls_lote_evento		a
	where	a.nr_sequencia		= b.nr_seq_lote
	and	b.nr_seq_evento		= r_c01_w.nr_seq_evento
	and	to_char(a.dt_competencia,'yyyymm') = to_char(dt_mesano_referencia_w,'yyyymm')
	and	b.nr_seq_prestador	= nr_seq_prestador_w
	and	coalesce(b.ie_cancelamento::text, '') = '';

	if (coalesce(qt_existe_lancto_evento_w,0) > 0) then
		-- Existem eventos de plantão já lançados para Pagamento deste Prestador (Cód: #@CD_PRESTADOR#@).
		CALL wheb_mensagem_pck.exibir_mensagem_abort(355103,'CD_PRESTADOR=' || cd_prestador_w);
	else
		select	max(b.nr_seq_periodo)
		into STRICT	nr_seq_periodo_w
		from	pls_evento_regra	b,
			pls_periodo_pagamento	a
		where	a.nr_sequencia		= b.nr_seq_periodo
		and	b.nr_seq_evento		= r_c01_w.nr_seq_evento
		and	a.ie_situacao 		= 'A'
		and	b.ie_situacao 		= 'A';

		if (coalesce(nr_seq_periodo_w::text, '') = '') then
			-- O evento #@NR_SEQ_EVENTO#@ não está vinculado a nenhum período. Verificar cadastro em OPS - Pagamentos de Produção Médica > Cadastros áreas Período/Pagamento
			CALL wheb_mensagem_pck.exibir_mensagem_abort(355162, 'NR_SEQ_EVENTO=' || r_c01_w.nr_seq_evento);
		end if;

		-- VERIFICA SE EXISTE UM LOTE DE EVENTO NESTA MESMA COMPETÊNCIA E PARA ESTE TERCEIRO, SE NÃO CRIA UM LOTE ANTES DE INSERIR OS EVENTOS MOVIMENTOS
		if (coalesce(nr_seq_lote_evento_w::text, '') = '') then
			insert into pls_lote_evento(	nr_sequencia,
							nr_seq_competencia,
							cd_estabelecimento,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							dt_competencia,
							dt_geracao_titulos,
							dt_liberacao,
							ds_observacao,
							ie_origem,
							dt_inicio_comp,
							dt_fim_comp,
							nr_seq_lote_pagamento,
							nr_lote_contabil,
							dt_geracao_boleto,
							nr_seq_evento,
							nr_seq_lote_plant,
							dt_titulos_terceiros,
							nr_seq_franq_pag)
						values (nextval('pls_lote_evento_seq'),
							null,
							cd_estabelecimento_p,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							dt_mesano_referencia_w,
							null,
							clock_timestamp(),
							'Repasse para Terceiros',
							'M',
							null,
							null,
							null,
							'0',
							null,
							null,
							null,
							null,
							null) returning nr_sequencia into nr_seq_lote_evento_w;
		end if;

		insert into pls_evento_movimento(	nr_sequencia,
							nr_seq_lote,
							nr_seq_prestador,
							nr_seq_evento,
							dt_movimento,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							vl_movimento,
							nr_seq_lote_pgto,
							nr_titulo_receber,
							nr_titulo_pagar,
							ie_forma_pagto,
							nr_seq_regra_fixo,
							ds_observacao,
							cd_conta_contabil,
							cd_conta_debito,
							nr_tit_pagar_vinculado,
							nr_tit_rec_vinculado,
							nr_adiant_pago,
							cd_historico,
							cd_conta_credito,
							nr_lote_contabil,
							nr_seq_esquema,
							nr_seq_periodo,
							dt_venc_titulo,
							nr_seq_classe_tit_rec,
							nr_seq_prest_plant_item,
							nr_seq_lote_contest,
							nr_seq_lote_disc,
							nr_seq_lote_pgto_orig,
							dt_mes_comp_lote,
							cd_classif_cred,
							cd_classif_deb,
							nr_seq_conta_ajuste,
							ie_titulo_pagar,
							cd_pf_titulo_pagar,
							cd_cgc_titulo_pagar,
							nr_seq_trans_fin_baixa,
							nr_seq_trans_fin_contab,
							nr_seq_pagamento_item,
							cd_centro_custo,
							nr_repasse_terceiro)
						values (	nextval('pls_evento_movimento_seq'),
							nr_seq_lote_evento_w,
							nr_seq_prestador_w,
							r_c01_w.nr_seq_evento,
							trunc(dt_mesano_referencia_w,'mm'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							r_c01_w.vl_repasse,
							null,
							null,
							null,
							'P',
							null,
							nr_repasse_terceiro_p || ' - PLANTÕES ENTRE OS DIAS ' || to_char(dt_periodo_inicial_w,'dd/mm/yyy hh24:mi:ss') || ' - ' || to_char(dt_periodo_final_w,'dd/mm/yyy hh24:mi:ss'),
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nr_seq_periodo_w,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nr_repasse_terceiro_p);
	end if;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_event_movto_repas ( nr_repasse_terceiro_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

