-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_consistir_lancto_manual ( nr_lote_contabil_p bigint, nr_seq_mes_ref_p bigint, nm_usuario_p text, nr_seq_dados_lcmt_p bigint) AS $body$
DECLARE

 
 
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type;
ie_consiste_revisao_w			tipo_lote_contabil.ie_consiste_revisao%type;
qt_error_w				bigint;
cd_empresa_w				empresa.cd_empresa%type;
dt_referencia_w				timestamp;
ie_encerramento_w			varchar(01);
qt_consistencia_w			bigint;
nr_sequencia_w				bigint;

 
C01 CURSOR FOR 
SELECT nr_sequencia 
from  w_ctb_lancamento a 
where	nr_seq_mes_ref  	= nr_seq_mes_ref_p 
and	nr_seq_lancamento 	= nr_seq_dados_lcmt_p 
and	a.nr_lote_contabil 	= nr_lote_contabil_p;


BEGIN 
 
select	coalesce(b.ie_encerramento,'N'), 
	b.cd_estabelecimento, 
	coalesce(a.ie_consiste_revisao,'S') 
into STRICT	ie_encerramento_w, 
	cd_estabelecimento_w, 
	ie_consiste_revisao_w 
from 	tipo_lote_contabil a, 
	lote_contabil b 
where	b.cd_tipo_lote_contabil = a.cd_tipo_lote_contabil 
and	b.nr_lote_contabil	= nr_lote_contabil_p;
 
select	b.cd_empresa, 
	b.dt_referencia 
into STRICT	cd_empresa_w, 
	dt_referencia_w 
from	ctb_mes_ref b, 
	lote_contabil a 
where	a.nr_lote_contabil	= nr_lote_contabil_p 
and	a.nr_seq_mes_ref	= b.nr_sequencia;
 
open C01;
loop 
fetch C01 into 
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	update	w_ctb_lancamento a 
	set		ds_consistencia = '' 
	where	nr_seq_mes_ref  	= nr_seq_mes_ref_p 
	and		nr_seq_lancamento 	= nr_seq_dados_lcmt_p 
	and		a.nr_lote_contabil 	= nr_lote_contabil_p 
	and		a.nr_sequencia 		= nr_sequencia_w;
 
	update	w_ctb_lancamento a 
	set		a.ds_consistencia = WHEB_MENSAGEM_PCK.get_texto(280946) /*Lançamento com a apropriação indevida por centro de resultado.Esta conta contábil não requer informação do centro de custo.*/
 
	where	nr_seq_mes_ref  	= nr_seq_mes_ref_p 
	and		nr_seq_lancamento 	= nr_seq_dados_lcmt_p 
	and		a.nr_lote_contabil 	= nr_lote_contabil_p 
	and		a.nr_sequencia = nr_sequencia_w 
	and	exists ( 
		SELECT	1 
		from	w_ctb_movto_centro_lcmt b 
		where	a.nr_sequencia	= b.nr_seq_movimento 
		and		b.ie_status_origem <> 'EX') 
	and	not exists ( 
		SELECT	1 
		from	conta_contabil b 
		where	a.cd_conta_debito	= b.cd_conta_contabil 
		and	b.ie_centro_custo	in ('S','O') 
		
union all
 
		select	1 
		from	conta_contabil b 
		where	a.cd_conta_credito= b.cd_conta_contabil 
		and	b.ie_centro_custo	in ('S','O'));
		 
		 
	update	w_ctb_lancamento a 
	set	a.ds_consistencia = WHEB_MENSAGEM_PCK.get_texto(280945) 
	where	a.nr_lote_contabil	= nr_lote_contabil_p 
	and	ie_encerramento_w	= 'N' 
	and	not exists ( 
		SELECT	1 
		from	w_ctb_movto_centro_lcmt b 
		where	a.nr_sequencia	= b.nr_seq_movimento 
		and		b.ie_status_origem <> 'EX') 
	and	exists ( 
		SELECT	1 
		from	conta_contabil b 
		where	a.cd_conta_debito	= b.cd_conta_contabil 
		and	b.ie_centro_custo	= 'S' 
		
union all
 
		select	1 
		from	conta_contabil b 
		where	a.cd_conta_credito	= b.cd_conta_contabil 
		and	b.ie_centro_custo	= 'S');	
 
 
 
	update	w_ctb_lancamento a 
	set		a.ds_consistencia = WHEB_MENSAGEM_PCK.get_texto(280947) /*Lançamento com valor diferente da somatória dos centros de custo.*/
 
	where	nr_seq_mes_ref  = nr_seq_mes_ref_p 
	and		nr_seq_lancamento = nr_seq_dados_lcmt_p 
	and		a.nr_lote_contabil = nr_lote_contabil_p 
	and		a.nr_sequencia = nr_sequencia_w 
	and	exists ( 
		SELECT	1 
		from	w_ctb_movto_centro_lcmt b 
		where	a.nr_sequencia	= b.nr_seq_movimento 
		and		b.ie_status_origem <> 'EX') 
	and	vl_movimento <> ( 
		SELECT	sum(vl_movimento) 
		from	w_ctb_movto_centro_lcmt b 
		where	a.nr_sequencia	= b.nr_seq_movimento 
		and		b.ie_status_origem <> 'EX');
 
 
	update	w_ctb_lancamento a 
	set	a.ds_consistencia = WHEB_MENSAGEM_PCK.get_texto(280983) /*A conta contábil é do tipo totalizadora.*/
 
	where	nr_seq_mes_ref   = nr_seq_mes_ref_p 
	and		nr_seq_lancamento 	= nr_seq_dados_lcmt_p 
	and		a.nr_lote_contabil = nr_lote_contabil_p 
	and	exists ( 
		SELECT	1 
		from	conta_contabil b 
		where	a.cd_conta_debito = b.cd_conta_contabil 
		and	b.ie_tipo = 'T' 
		
union
 
		SELECT	1 
		from	conta_contabil b 
		where	a.cd_conta_credito = b.cd_conta_contabil 
		and	b.ie_tipo = 'T');
 
 
 
	update	w_ctb_lancamento a 
	set		a.ds_consistencia = WHEB_MENSAGEM_PCK.get_texto(280984) /*A conta contábil é de outro estabelecimento.*/
 
	where	nr_seq_mes_ref  = nr_seq_mes_ref_p 
	and		nr_seq_lancamento = nr_seq_dados_lcmt_p 
	and		a.nr_lote_contabil = nr_lote_contabil_p 
	and		a.nr_sequencia = nr_sequencia_w 
	and exists ( 
		SELECT	1 
		from	conta_contabil_estab b 
		where	b.cd_conta_contabil = a.cd_conta_debito 
		
union all
 
		SELECT	1 
		from	conta_contabil_estab b 
		where	b.cd_conta_contabil = a.cd_conta_credito) 
	and not exists ( 
		select	1 
		from	conta_contabil_estab c 
		where	c.cd_conta_contabil	= a.cd_conta_debito 
		and	c.cd_estabelecimento	= cd_estabelecimento_w 
		
union all
 
		select	1 
		from	conta_contabil_estab c 
		where	c.cd_conta_contabil	= a.cd_conta_credito 
		and	c.cd_estabelecimento	= cd_estabelecimento_w);
 
 
 
	update	w_ctb_lancamento a 
	set		a.ds_consistencia = WHEB_MENSAGEM_PCK.get_texto(280985) /*A conta contábil está inativa.*/
 
	where	nr_seq_mes_ref  = nr_seq_mes_ref_p 
	and		a.nr_lote_contabil = nr_lote_contabil_p 
	and		nr_seq_lancamento = nr_seq_dados_lcmt_p 
	and		a.nr_sequencia = nr_sequencia_w 
	and	exists ( 
		SELECT	1 
		from	conta_contabil b 
		where	a.cd_conta_debito = b.cd_conta_contabil 
		and	b.ie_situacao <> 'A' 
		
union
 
		SELECT	1 
		from	conta_contabil b 
		where	a.cd_conta_credito = b.cd_conta_contabil 
		and	b.ie_situacao <> 'A');
 
 
	update	w_ctb_lancamento a 
	set		a.ds_consistencia = WHEB_MENSAGEM_PCK.get_texto(280986)/*Falta informar o grupo no cadastro da conta.*/
 
	where	nr_seq_mes_ref  = nr_seq_mes_ref_p 
	and		a.nr_lote_contabil = nr_lote_contabil_p 
	and		nr_seq_lancamento = nr_seq_dados_lcmt_p 
	and		a.nr_sequencia = nr_sequencia_w 
	and	exists ( 
		SELECT	1 
		from	conta_contabil b 
		where	a.cd_conta_debito = b.cd_conta_contabil 
		and	coalesce(b.cd_grupo::text, '') = '' 
		
union
 
		SELECT	1 
		from	conta_contabil b 
		where	a.cd_conta_credito = b.cd_conta_contabil 
		and	coalesce(b.cd_grupo::text, '') = '');
 
 
 
	update	w_ctb_lancamento a 
	set	a.ds_consistencia = WHEB_MENSAGEM_PCK.get_texto(280987)/*A conta contábil é de outra empresa.*/
 
	where	nr_seq_mes_ref  = nr_seq_mes_ref_p 
	and	nr_seq_lancamento = nr_seq_dados_lcmt_p 
	and	a.nr_lote_contabil = nr_lote_contabil_p 
	and		a.nr_sequencia = nr_sequencia_w 
	and	exists ( 
		SELECT	1 
		from	conta_contabil b 
		where	a.cd_conta_debito = b.cd_conta_contabil 
		and	b.cd_empresa <> cd_empresa_w 
		
union
 
		SELECT	1 
		from	conta_contabil b 
		where	a.cd_conta_credito = b.cd_conta_contabil 
		and	b.cd_empresa <> cd_empresa_w);
 
 
	update	w_ctb_lancamento a 
	set		a.ds_consistencia = WHEB_MENSAGEM_PCK.get_texto(280988) /*Este histórico é de outra empresa.*/
 
	where	nr_seq_mes_ref  = nr_seq_mes_ref_p 
	and		a.nr_lote_contabil = nr_lote_contabil_p 
	and		nr_seq_lancamento = nr_seq_dados_lcmt_p 
	and		a.nr_sequencia = nr_sequencia_w 
	and	exists ( 
		SELECT	1 
		from	historico_padrao b 
		where	a.cd_historico = b.cd_historico 
		and	b.cd_empresa <> cd_empresa_w);
 
 
	update	w_ctb_lancamento a 
	set		a.ds_consistencia = WHEB_MENSAGEM_PCK.get_texto(280989) /*Este histórico está inativo.*/
 
	where	nr_seq_mes_ref  = nr_seq_mes_ref_p 
	and		nr_seq_lancamento = nr_seq_dados_lcmt_p 
	and		a.nr_lote_contabil = nr_lote_contabil_p 
	and		a.nr_sequencia = nr_sequencia_w 
	and	exists ( 
			SELECT	1 
			from	historico_padrao b 
			where	a.cd_historico = b.cd_historico 
			and	coalesce(b.ie_situacao,'I') <> 'A');
 
	select count(*) 
	into STRICT	qt_consistencia_w 
	from	w_ctb_lancamento a 
	where	nr_seq_mes_ref  = nr_seq_mes_ref_p 
	and		nr_seq_lancamento = nr_seq_dados_lcmt_p 
	and		a.nr_lote_contabil = nr_lote_contabil_p 
	and		a.nr_sequencia = nr_sequencia_w;
end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_consistir_lancto_manual ( nr_lote_contabil_p bigint, nr_seq_mes_ref_p bigint, nm_usuario_p text, nr_seq_dados_lcmt_p bigint) FROM PUBLIC;

