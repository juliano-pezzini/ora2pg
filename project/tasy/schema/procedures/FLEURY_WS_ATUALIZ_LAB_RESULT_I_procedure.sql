-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fleury_ws_atualiz_lab_result_i ( nr_ficha_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, cd_analito_p bigint, ds_resultado_p text, ds_data_coleta_p text, ds_referencia_p text, ds_unidade_medida_p text, cd_unidade_p text, ds_analito_p text, ie_resultado_referencia_p text, ie_resultado_critico_p text, ds_regra_result_critico_p text, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


dt_coleta_w		timestamp;
cd_exame_w		varchar(20);
nr_prescricao_w		bigint;
nr_seq_exame_w		bigint;
nr_seq_exame_analito_w	bigint;
nr_seq_grupo_w		bigint;
nr_seq_prescr_w		bigint;
ie_agrupa_w		varchar(1);
ie_gera_analito_w	varchar(1);
cd_estabelecimento_w	bigint;
ie_exige_formato_w	lab_parametro.ie_exige_formato%type;
nr_seq_resultado_w	exame_lab_resultado.nr_seq_resultado%type;
nr_seq_resultado_ww	exame_lab_resultado.nr_seq_resultado%type;
qt_result_item_w	bigint;
nr_regras_atendidas_w   varchar(2000);

ie_existe_param_maq_w	varchar(1);
ie_sepse_lib_exame_w	varchar(1);
nr_atendimento_w		bigint;
cd_medico_prescr_w		varchar(10);


BEGIN

CALL gerar_lab_log_interf_imp(nr_prescricao_p,
		null,
		null,
		null,
		substr('fleury_ws_atualiz_lab_result_i - cd_exame_p: '||cd_exame_p||'  cd_analito_p:'||cd_analito_p||' nr_seq_prescr_p: '||nr_seq_prescr_p||' nr_ficha_p: '||nr_ficha_p||' ds_resultado_p: '||ds_resultado_p,1,1999),
		'FleuryWS',
		'',
		nm_usuario_p,
		'N');

/*select	nvl(max(ie_agrupa_ficha_fleury),'N'),
	nvl(max(ie_gera_analito_fleury),'S'),
	max(cd_estabelecimento)
into	ie_agrupa_w,
	ie_gera_analito_w,
	cd_estabelecimento_w
from	lab_parametro
where	nvl(cd_unidade_fleury,nvl(cd_unidade_p,'0')) = nvl(cd_unidade_p,'0');*/
select	fleury_obter_dados_unidade(cd_unidade_p, 'AF'),
		fleury_obter_dados_unidade(cd_unidade_p, 'GA'),
		fleury_obter_dados_unidade(cd_unidade_p, 'E')
into STRICT	ie_agrupa_w,
		ie_gera_analito_w,
		cd_estabelecimento_w
;

if	(nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '' AND nr_prescricao_p > 0) then

	nr_prescricao_w := nr_prescricao_p;

else

	if not(ie_agrupa_w = 'N') then

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_existe_param_maq_w
		from	lab_param_maquina a
		where	a.cd_estabelecimento = cd_estabelecimento_w;

		if (ie_existe_param_maq_w = 'S') then
			select	max(a.nr_prescricao)
			into STRICT	nr_prescricao_w
			from (
					SELECT	a.nr_prescricao,
						substr(lab_obter_parametro(cd_estabelecimento_w, a.nr_prescricao, null, 'UF'),1,255) cd_unidade_fleury
					from	prescr_procedimento a
					where	a.nr_controle_ext = nr_ficha_p
					) a
			where	a.cd_unidade_fleury =  cd_unidade_p;
		else
			select	max(a.nr_prescricao)
			into STRICT	nr_prescricao_w
			from	prescr_procedimento a,
					prescr_medica b
			where	a.nr_prescricao = b.nr_prescricao
			and		a.nr_controle_ext = nr_ficha_p
			and		b.cd_estabelecimento = cd_estabelecimento_w;
		end if;
	else
		select	max(a.nr_prescricao)
		into STRICT	nr_prescricao_w
		from	prescr_medica a
		where	a.nr_controle =  nr_ficha_p
		and		a.cd_estabelecimento = cd_estabelecimento_w;
	end if;

end if;

if (coalesce(nr_prescricao_w::text, '') = '') then
	select	max(a.nr_prescricao)
	into STRICT	nr_prescricao_w
	from	prescr_medica a,
			prescr_procedimento b
	where	a.nr_prescricao = b.nr_prescricao
	and		(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
	and		a.cd_estabelecimento = cd_estabelecimento_w
	and		coalesce(a.nr_controle,b.nr_controle_ext) = nr_ficha_p;
end if;

select	max(nr_atendimento),
		max(cd_medico)
into STRICT	nr_atendimento_w,
		cd_medico_prescr_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_w;

if (coalesce(nr_seq_prescr_p::text, '') = '') or (not nr_seq_prescr_p > 0) then

	nr_seq_prescr_w := obter_seq_prescr_prescricao(nr_prescricao_w, 'FLEURY', cd_exame_p);

else
	nr_seq_prescr_w := nr_seq_prescr_p;

end if;

select	max(coalesce(e.cd_exame_integracao,e.cd_exame)),
	max(e.nr_seq_exame),
	max(e.nr_seq_grupo)
into STRICT	cd_exame_w,
	nr_seq_exame_w,
	nr_seq_grupo_w
from	prescr_procedimento p,
	exame_laboratorio e
where	p.nr_prescricao	= nr_prescricao_w
and	p.nr_sequencia	= nr_seq_prescr_w
and	p.nr_seq_exame 	= e.nr_seq_exame;

dt_coleta_w  := to_date(substr(ds_data_coleta_p ,1,10),'dd/mm/yyyy');WITH RECURSIVE cte AS (


if (ie_gera_analito_w = 'S') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

	--  **  Procura se o analito enviado existe cadastrado na base  ** --
	select	coalesce(max(nr_seq_exame),0)
	into STRICT	nr_seq_exame_analito_w
	from	exame_laboratorio WHERE nr_seq_superior = nr_seq_exame_w
  UNION ALL


if (ie_gera_analito_w = 'S') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

	
	select	coalesce(max(nr_seq_exame),0)
	into STRICT	nr_seq_exame_analito_w
	from	exame_laboratorio JOIN cte c ON (c.prior nr_seq_exame = nr_seq_superior)

) SELECT * FROM cte WHERE coalesce(cd_exame_integracao, cd_exame) = to_char(cd_analito_p);
;

	if (nr_seq_exame_analito_w <= 0) then

		select (max(nr_seq_exame) +1)
		into STRICT	nr_seq_exame_analito_w
		from	exame_laboratorio;


		-- ** Caso o analito não exista, é cadastrado um novo com o código recebido ** --
		insert	into exame_laboratorio(
			nr_seq_exame,
			cd_exame,
			cd_exame_integracao,
			nm_exame,
			dt_atualizacao,
			nm_usuario,
			ie_campo_calculo,
			ie_restricao,
			ie_prescricao_rotina,
			nr_seq_superior,
			nr_seq_grupo,
			ie_solicitacao,
			ie_formato_resultado,
			ie_situacao,
			cd_cgc_externo,
			nr_seq_apresent
			)
		values (
			nr_seq_exame_analito_w,
			to_char(nr_seq_exame_analito_w),
			cd_analito_p,
			coalesce(ds_analito_p,to_char(cd_analito_p)),
			clock_timestamp(),
			nm_usuario_p,
			'N',
			'N',
			'S',
			nr_seq_exame_w,
			nr_seq_grupo_w,
			'N',
			'DV',
			'A',
			'60840055000131',
			999999
			);

		commit;

	end if;
end if;


select	count(1)
into STRICT	qt_result_item_w
from	exame_lab_resultado a
where 	a.nr_prescricao = nr_prescricao_w;

if (qt_result_item_w = 0) then

	select	coalesce(max(ie_exige_formato),'N')
	into STRICT	ie_exige_formato_w
	from	lab_parametro
	where	cd_estabelecimento = cd_estabelecimento_w;

	if (ie_exige_formato_w <> 'S') then

		select	coalesce(max(nr_seq_resultado),0) + 1
		into STRICT	nr_seq_resultado_w
		from	exame_lab_resultado;

		insert 	into exame_lab_resultado(
				nr_seq_resultado,
				dt_resultado,
				dt_atualizacao,
				nm_usuario,
				nr_prescricao,
				nr_atendimento
				)
		values (
				nr_seq_resultado_w,
				clock_timestamp(),
				clock_timestamp(),
				coalesce(nm_usuario_p,'Interface'),
				nr_prescricao_w,
				nr_atendimento_w
				);

		commit;

	end if;

end if;WITH RECURSIVE cte AS (



select	coalesce(max(nr_seq_exame),0)
into STRICT	nr_seq_exame_analito_w
from	exame_laboratorio WHERE nr_seq_superior = nr_seq_exame_w
  UNION ALL



select	coalesce(max(nr_seq_exame),0)
into STRICT	nr_seq_exame_analito_w
from	exame_laboratorio JOIN cte c ON (c.prior nr_seq_exame = nr_seq_superior)

) SELECT * FROM cte WHERE coalesce(cd_exame_integracao, cd_exame) = to_char(cd_analito_p);
;


ds_erro_p := lab_atualizar_result_item(
			nr_prescricao_w, nr_seq_prescr_w, cd_exame_w, to_char(cd_analito_p), null, null, ds_resultado_p, null, null, null, 'FLEURYWS', dt_coleta_w, ds_referencia_p, ds_unidade_medida_p, null, null, ds_erro_p, nr_seq_exame_analito_w, ie_resultado_referencia_p, ie_resultado_critico_p, ds_regra_result_critico_p);


select max(nr_seq_resultado)
into STRICT  nr_seq_resultado_ww
from  exame_lab_resultado a,
	  prescr_procedimento b
where a.nr_prescricao = b.nr_prescricao
and   a.nr_prescricao = nr_prescricao_w
and	  b.nr_sequencia = nr_seq_prescr_w
and	  b.nr_seq_exame in (SELECT nr_seq_exame from sepse_atributo_regra)
and b.ie_status_atend >= 35;


if (nr_seq_resultado_ww IS NOT NULL AND nr_seq_resultado_ww::text <> '') then

	nr_regras_atendidas_w := GQA_Aprov_Exame_result_item(nr_seq_resultado_ww, nr_seq_prescr_w, nm_usuario_p, nr_regras_atendidas_w);


	select	coalesce(max(ie_sepse_lib_exame),'N')
	into STRICT	ie_sepse_lib_exame_w
	from	parametro_medico
	where	cd_estabelecimento = cd_estabelecimento_w;

	if (ie_sepse_lib_exame_w = 'S') then
		begin
			CALL gerar_escala_sepse(nr_atendimento_w,cd_medico_prescr_w,0,nm_usuario_p);
		exception
		when others then
			null;
		end;
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fleury_ws_atualiz_lab_result_i ( nr_ficha_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, cd_analito_p bigint, ds_resultado_p text, ds_data_coleta_p text, ds_referencia_p text, ds_unidade_medida_p text, cd_unidade_p text, ds_analito_p text, ie_resultado_referencia_p text, ie_resultado_critico_p text, ds_regra_result_critico_p text, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

