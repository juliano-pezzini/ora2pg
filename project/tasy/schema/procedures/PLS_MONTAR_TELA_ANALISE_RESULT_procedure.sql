-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_montar_tela_analise_result ( nr_seq_pagador_p bigint, nr_seq_segurado_p bigint, nr_seq_contrato_p bigint, nr_seq_grupo_p bigint, nr_seq_faixa_p bigint, ie_tipo_segurado_p text, ie_tipo_data_p bigint, dt_inicial_p text, dt_final_p text, ie_dimensao_um_p text, ie_dimensao_dois_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_contrato_intercambio_p bigint, nr_seq_grupo_contr_interc_p bigint, ie_tipo_vinculo_operadora_p bigint, nr_seq_intercambio_p bigint, cd_grupo_intercambio_p text, ie_regulamentacao_p pls_plano.ie_regulamentacao%type, ie_tipo_contratacao_p pls_plano.ie_tipo_contratacao%type, ie_preco_p pls_plano.ie_preco%type, nr_contrato_p pls_contrato.nr_contrato%type) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ds_item_sup_w			varchar(255);
ds_item_w			varchar(255);
nm_estipulante_w		varchar(250);
ie_tipo_segurado_w		varchar(3);
ie_tipo_segurado_p_w		varchar(255);
ie_tipo_contratacao_w		varchar(2);
vl_comissao_vendas_w		double precision;
vl_contas_medicas_w		double precision;
vl_coparticipacao_w		double precision;
vl_despesas_naoassist_w		double precision;
vl_encargos_w			double precision;
vl_mensalidade_w		double precision;
vl_provisoes_tecnica_w		double precision;
vl_reembolso_w			double precision;
vl_ressarcimento_sus_w		double precision;
vl_resultado_w			double precision;
vl_total_assist_w		double precision;
vl_total_despesa_w		double precision;
vl_total_receita_w		double precision;
nr_seq_contrato_w		bigint;
nr_seq_faixa_etaria_w		bigint;
nr_seq_grupo_contrato_w		bigint;
nr_seq_pagador_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_segurado_w		bigint;
nr_seq_superior_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_segurado_p_w		bigint;
nr_seq_pagador_p_w		bigint;
nr_seq_contrato_p_w		bigint;
nr_seq_grupo_p_w		bigint;
nr_seq_faixa_p_w		bigint;
nr_seq_segurado_ant_w		bigint	:= -99;
dt_mesano_referencia_w		timestamp;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
dt_mesano_referencia_ant_w	timestamp;
nr_seq_grupo_intercambio_w	pls_regra_grupo_inter.nr_sequencia%type;
nr_contrato_p_w			pls_contrato.nr_contrato%type;

C01 CURSOR FOR 
	SELECT	vl_comissao_vendas, 
		vl_contas_medicas, 
		vl_coparticipacao, 
		vl_despesas_naoassist, 
		vl_encargos, 
		vl_mensalidade, 
		vl_provisoes_tecnica, 
		vl_reembolso, 
		vl_ressarcimento_sus, 
		vl_resultado, 
		vl_total_assist, 
		vl_total_despesa, 
		vl_total_receita, 
		nr_seq_contrato, 
		nr_seq_faixa_etaria, 
		nr_seq_grupo_contrato, 
		nr_seq_pagador, 
		nr_seq_plano, 
		nr_seq_segurado, 
		dt_mesano_referencia, 
		ie_tipo_contratacao, 
		ie_tipo_segurado 
	from	(SELECT	coalesce(sum(vl_comissao_vendas), 0) vl_comissao_vendas, 
			coalesce(sum(vl_contas_medicas), 0) vl_contas_medicas, 
			coalesce(sum(vl_coparticipacao), 0) vl_coparticipacao, 
			coalesce(sum(vl_despesas_naoassist), 0) vl_despesas_naoassist, 
			coalesce(sum(vl_encargos), 0) vl_encargos, 
			coalesce(sum(vl_mensalidade), 0) vl_mensalidade, 
			coalesce(sum(vl_provisoes_tecnica), 0) vl_provisoes_tecnica, 
			coalesce(sum(vl_reembolso), 0) vl_reembolso, 
			coalesce(sum(vl_ressarcimento_sus), 0) vl_ressarcimento_sus, 
			coalesce(sum(vl_resultado), 0) vl_resultado, 
			coalesce(sum(vl_total_assist), 0) vl_total_assist, 
			coalesce(sum(vl_total_despesa), 0) vl_total_despesa, 
			coalesce(sum(vl_total_receita), 0) vl_total_receita, 
			nr_seq_contrato, 
			nr_seq_faixa_etaria, 
			nr_seq_grupo_contrato, 
			nr_seq_pagador, 
			nr_seq_plano, 
			nr_seq_segurado, 
			dt_mesano_referencia, 
			ie_tipo_contratacao, 
			ie_tipo_segurado, 
			nr_seq_intercambio, 
			nr_seq_grupo_intercambio 
		from	pls_segurado_valores	a 
		where	a.nr_seq_segurado = coalesce(nr_seq_segurado_p_w, a.nr_seq_segurado) 
		and	a.cd_estabelecimento = coalesce(cd_estabelecimento_p, a.cd_estabelecimento) 
		and	((a.nr_seq_pagador = nr_seq_pagador_p_w) or (coalesce(nr_seq_pagador_p_w::text, '') = '')) 
		and	((a.nr_seq_contrato = nr_seq_contrato_p_w ) or (coalesce(nr_seq_contrato_p_w::text, '') = '')) 
		and	((a.nr_seq_grupo_contrato = nr_seq_grupo_p_w) or (coalesce(nr_seq_grupo_p_w::text, '') = '')) 
		and	((a.nr_seq_faixa_etaria = nr_seq_faixa_p_w) or (coalesce(nr_seq_faixa_p_w::text, '') = '')) 
		and	((obter_se_contido_lista(ie_tipo_segurado_p_w, a.ie_tipo_segurado) = 'S') or (coalesce(ie_tipo_segurado_p_w::text, '') = '')) 
		and	((ie_tipo_data_p = 0 and dt_mesano_referencia = dt_inicial_w) or (ie_tipo_data_p = 1 and trunc(dt_mesano_referencia, 'yyyy') = dt_inicial_w) or (ie_tipo_data_p = 2 and dt_mesano_referencia between dt_inicial_w and dt_final_w) or (ie_tipo_data_p = 3 and dt_mesano_referencia between dt_inicial_w and dt_final_w)) 
		and	((ie_tipo_vinculo_operadora_p = 1 and (a.ie_tipo_vinculo_operadora IS NOT NULL AND a.ie_tipo_vinculo_operadora::text <> '')) or (ie_tipo_vinculo_operadora_p = 2 and coalesce(a.ie_tipo_vinculo_operadora::text, '') = '') or (coalesce(ie_tipo_vinculo_operadora_p::text, '') = '')) 
		and 	((a.nr_seq_intercambio = nr_seq_intercambio_p) or (coalesce(nr_seq_intercambio_p::text, '') = '')) 
		and 	((nr_seq_grupo_intercambio = nr_seq_grupo_intercambio_w) or (coalesce(nr_seq_grupo_intercambio_w::text, '') = '')) 
		and	((a.ie_tipo_contratacao = ie_tipo_contratacao_p) or (coalesce(ie_tipo_contratacao_p::text, '') = '')) 
		and	((a.ie_regulamentacao = ie_regulamentacao_p) or (coalesce(ie_regulamentacao_p::text, '') = '')) 
		and	((a.ie_preco = ie_preco_p) or (coalesce(ie_preco_p::text, '') = '')) 
		group by 
			nr_seq_contrato, 
			nr_seq_faixa_etaria, 
			nr_seq_grupo_contrato, 
			nr_seq_pagador, 
			nr_seq_plano, 
			nr_seq_segurado, 
			dt_mesano_referencia, 
			ie_tipo_contratacao, 
			ie_tipo_segurado, 
			nr_seq_intercambio, 
			nr_seq_grupo_intercambio 
		order by nr_seq_segurado) alias82;
		
TYPE 		fetch_array IS TABLE OF C01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w			Vetor;

BEGIN 
 
CALL exec_sql_dinamico(nm_usuario_p,'truncate table w_pls_analise_result');
 
if (ie_dimensao_um_p IS NOT NULL AND ie_dimensao_um_p::text <> '') then 
	if (ie_tipo_data_p = 0) then 
		dt_inicial_w	:= trunc(to_date(dt_inicial_p, 'dd/mm/yyyy'), 'mm');
	elsif (ie_tipo_data_p = 1) then 
		dt_inicial_w	:= trunc(to_date(dt_inicial_p, 'dd/mm/yyyy'), 'yyyy');
	elsif (ie_tipo_data_p = 2) then 
		dt_inicial_w	:= trunc(to_date(dt_inicial_p, 'dd/mm/yyyy'), 'mm');
		dt_final_w	:= fim_mes(to_date(dt_final_p, 'dd/mm/yyyy'));
	elsif (ie_tipo_data_p = 3) then 
		dt_inicial_w	:= trunc(to_date(dt_inicial_p, 'dd/mm/yyyy'), 'yyyy');
		dt_final_w	:= fim_ano(to_date(dt_final_p, 'dd/mm/yyyy'));
	end if;
	 
	nr_seq_segurado_p_w	:= nr_seq_segurado_p;
	nr_seq_pagador_p_w	:= nr_seq_pagador_p;
	nr_seq_contrato_p_w	:= nr_seq_contrato_p;
	nr_seq_grupo_p_w	:= nr_seq_grupo_p;
	nr_seq_faixa_p_w	:= nr_seq_faixa_p;
	ie_tipo_segurado_p_w	:= replace(replace(replace(ie_tipo_segurado_p, '''', ''), chr(13), ''), chr(10), '');
	nr_contrato_p_w		:= trim(both nr_contrato_p);
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_grupo_intercambio_w 
	from	pls_regra_grupo_inter 
	where 	cd_grupo	= cd_grupo_intercambio_p;
 
	open C01;
	loop 
	FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
		Vetor_c01_w(i) := s_array;
		i := i + 1;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	END LOOP;
	CLOSE C01;
	 
	for i in 1..Vetor_c01_w.COUNT loop 
		s_array := Vetor_c01_w(i);
		for z in 1..s_array.COUNT loop 
			begin 
			vl_comissao_vendas_w		:= s_array[z].vl_comissao_vendas;
			vl_contas_medicas_w		:= s_array[z].vl_contas_medicas;
			vl_coparticipacao_w		:= s_array[z].vl_coparticipacao;
			vl_despesas_naoassist_w		:= s_array[z].vl_despesas_naoassist;
			vl_encargos_w			:= s_array[z].vl_encargos;
			vl_mensalidade_w		:= s_array[z].vl_mensalidade;
			vl_provisoes_tecnica_w		:= s_array[z].vl_provisoes_tecnica;
			vl_reembolso_w			:= s_array[z].vl_reembolso;
			vl_ressarcimento_sus_w		:= s_array[z].vl_ressarcimento_sus;
			vl_resultado_w			:= s_array[z].vl_resultado;
			vl_total_assist_w		:= s_array[z].vl_total_assist;
			vl_total_despesa_w		:= s_array[z].vl_total_despesa;
			vl_total_receita_w		:= s_array[z].vl_total_receita;
			nr_seq_faixa_etaria_w		:= s_array[z].nr_seq_faixa_etaria;
			nr_seq_grupo_contrato_w		:= s_array[z].nr_seq_grupo_contrato;
			nr_seq_segurado_w		:= s_array[z].nr_seq_segurado;
			dt_mesano_referencia_w		:= s_array[z].dt_mesano_referencia;
			ie_tipo_contratacao_w		:= s_array[z].ie_tipo_contratacao;
			ie_tipo_segurado_w		:= s_array[z].ie_tipo_segurado;
			 
			nm_estipulante_w		:= null;
			ds_item_sup_w			:= null;
			 
			nr_seq_plano_w			:= null;
			nr_seq_pagador_w		:= null;
			nr_seq_contrato_w		:= null;
			 
			if (ie_dimensao_um_p = 'P') then /* Produto */
 
				nr_seq_plano_w			:= s_array[z].nr_seq_plano;
				 
				select	max(a.nm_fantasia) 
				into STRICT	ds_item_sup_w 
				from	pls_plano	a 
				where	a.nr_sequencia	= nr_seq_plano_w;
			elsif (ie_dimensao_um_p = 'TC') then /* Tipo de contratação */
 
				ds_item_sup_w	:= substr(obter_valor_dominio(1666, ie_tipo_contratacao_w), 1, 80);
			elsif (ie_dimensao_um_p = 'C') then /* Contrato */
 
				nr_seq_contrato_w		:= s_array[z].nr_seq_contrato;
				 
				if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
					select	max(nr_contrato) 
					into STRICT	nr_contrato_p_w 
					from	pls_contrato 
					where	nr_sequencia	= nr_seq_contrato_w;
				 
					ds_item_sup_w		:= coalesce(nr_contrato_p_w,nr_seq_contrato_w);
					nm_estipulante_w	:= pls_obter_dados_contrato(nr_seq_contrato_w, 'E');
				else 
					select	max(a.nr_seq_intercambio) 
					into STRICT	nr_seq_intercambio_w 
					from	pls_segurado	a 
					where	a.nr_sequencia	= nr_seq_segurado_w;
					 
					if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then 
						ds_item_sup_w		:= 'Interc.: ' || nr_seq_intercambio_w;
						nm_estipulante_w	:= pls_obter_dados_intercambio(nr_seq_intercambio_w, 'N');
					end if;
				end if;
			elsif (ie_dimensao_um_p = 'Ano') then /* Ano */
 
				ds_item_sup_w	:= to_char(dt_mesano_referencia_w, 'yyyy');
			elsif (ie_dimensao_um_p = 'Mes') then /* Mês */
 
				ds_item_sup_w	:= to_char(dt_mesano_referencia_w, 'mm/yyyy');
			elsif (ie_dimensao_um_p = 'T') then /* Trimestre*/
 
				ds_item_sup_w	:= trunc(dt_mesano_referencia_w, 'Q');
			elsif (ie_dimensao_um_p = 'F') then /* Faixa etária */
 
				select	max(a.ds_faixa_etaria) 
				into STRICT	ds_item_sup_w 
				from	pls_faixa_etaria	a 
				where	a.nr_sequencia	= nr_seq_faixa_etaria_w;
			elsif (ie_dimensao_um_p = 'Pag') then /* Pagador */
 
				nr_seq_pagador_w		:= s_array[z].nr_seq_pagador;
				 
				if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then 
					ds_item_sup_w	:= substr(pls_obter_dados_pagador(nr_seq_pagador_w, 'N'), 1, 80);
				end if;
			elsif (ie_dimensao_um_p = 'S') then /* Semestre */
 
				ds_item_sup_w	:= substr(obter_periodo_data(dt_mesano_referencia_w, 'E'), 1, 4) || '/' || to_char(dt_mesano_referencia_w, 'yyyy');
			elsif (ie_dimensao_um_p = 'B') then /* Beneficiário */
 
				ds_item_sup_w	:= substr(pls_obter_dados_segurado(nr_seq_segurado_w, 'N'), 1, 255);
			end if;
			 
			select	nextval('w_pls_analise_result_seq') 
			into STRICT	nr_seq_superior_w 
			;
			 
			if (ie_tipo_segurado_w = 'I') and (coalesce(nr_seq_contrato_w::text, '') = '') then 
				if (coalesce(nr_seq_segurado_w::text, '') = '') then 
					nm_estipulante_w := 'Registro sem usuário informado';
				else 
					nm_estipulante_w := 'Usuários Eventuais';
				end if;	
			end if;
			 
			insert into w_pls_analise_result(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec, 
				vl_comissao_vendas, 
				vl_contas_medicas, 
				vl_coparticipacao, 
				vl_despesas_naoassist, 
				vl_encargos, 
				vl_mensalidade, 
				vl_provisoes_tecnica, 
				vl_reembolso, 
				vl_ressarcimento_sus, 
				vl_resultado, 
				vl_total_assist, 
				vl_total_despesa, 
				vl_total_receita, 
				pr_sinistralidade, 
				pr_resultado, 
				ds_item, 
				ds_estipulante, 
				nr_seq_segurado, 
				ie_dimensao, 
				nr_seq_pagador, 
				nr_seq_contrato, 
				nr_seq_plano) 
			values (nr_seq_superior_w, 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				vl_comissao_vendas_w, 
				vl_contas_medicas_w, 
				vl_coparticipacao_w, 
				vl_despesas_naoassist_w, 
				vl_encargos_w, 
				vl_mensalidade_w, 
				vl_provisoes_tecnica_w, 
				vl_reembolso_w, 
				vl_ressarcimento_sus_w, 
				vl_resultado_w, 
				vl_total_assist_w, 
				vl_total_despesa_w, 
				vl_total_receita_w, 
				0, 
				0, 
				ds_item_sup_w, 
				nm_estipulante_w, 
				CASE WHEN ie_dimensao_um_p='B' THEN  nr_seq_segurado_w  ELSE null END , 
				ie_dimensao_um_p, 
				nr_seq_pagador_w, 
				nr_seq_contrato_w, 
				nr_seq_plano_w);
			 
			if (ie_dimensao_dois_p IS NOT NULL AND ie_dimensao_dois_p::text <> '') then 
				nm_estipulante_w	:= null;
				ds_item_w		:= null;
				nr_seq_plano_w		:= null;
				nr_seq_pagador_w	:= null;
				nr_seq_contrato_w	:= null;
				 
				if (ie_dimensao_dois_p = 'P') then /* Produto */
 
					nr_seq_plano_w			:= s_array[z].nr_seq_plano;
					 
					select	max(a.nm_fantasia) 
					into STRICT	ds_item_w 
					from	pls_plano	a 
					where	a.nr_sequencia	= nr_seq_plano_w;
				elsif (ie_dimensao_dois_p = 'TC') then /* Tipo de contratação */
 
					ds_item_w	:= substr(obter_valor_dominio(1666, ie_tipo_contratacao_w), 1, 80);
				elsif (ie_dimensao_dois_p = 'C') then /* Contrato */
 
					nr_seq_contrato_w		:= s_array[z].nr_seq_contrato;
					 
					if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
						if (coalesce(nr_contrato_p_w::text, '') = '') then 
							select	max(nr_contrato) 
							into STRICT	nr_contrato_p_w 
							from	pls_contrato 
							where	nr_sequencia	= nr_seq_contrato_w;
						end if;
					 
						ds_item_w		:= coalesce(nr_contrato_p_w,nr_seq_contrato_w);
						nm_estipulante_w	:= pls_obter_dados_contrato(nr_seq_contrato_w, 'E');
					else 
						select	max(a.nr_seq_intercambio) 
						into STRICT	nr_seq_intercambio_w 
						from	pls_segurado	a 
						where	a.nr_sequencia	= nr_seq_segurado_w;
						 
						if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then 
							ds_item_w		:= 'Interc.: ' || nr_seq_intercambio_w;
							nm_estipulante_w	:= pls_obter_dados_intercambio(nr_seq_intercambio_w, 'N');
						end if;
					end if;
				elsif (ie_dimensao_dois_p = 'Ano') then /* Ano */
 
					ds_item_w	:= to_char(dt_mesano_referencia_w, 'yyyy');
				elsif (ie_dimensao_dois_p = 'Mes') then /* Mês */
 
					ds_item_w	:= to_char(dt_mesano_referencia_w, 'mm/yyyy');
				elsif (ie_dimensao_dois_p = 'T') then /* Trimestre*/
 
					ds_item_w	:= trunc(dt_mesano_referencia_w, 'Q');
				elsif (ie_dimensao_dois_p = 'F') then /* Faixa etária */
 
					select	max(a.ds_faixa_etaria) 
					into STRICT	ds_item_w 
					from	pls_faixa_etaria	a 
					where	a.nr_sequencia	= nr_seq_faixa_etaria_w;
				elsif (ie_dimensao_dois_p = 'Pag') then /* Pagador */
 
					nr_seq_pagador_w		:= s_array[z].nr_seq_pagador;
					if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then 
						ds_item_w	:= substr(pls_obter_dados_pagador(nr_seq_pagador_w, 'N'), 1, 80);
					end if;
				elsif (ie_dimensao_dois_p = 'S') then /* Semestre */
 
					ds_item_w	:= substr(obter_periodo_data(dt_mesano_referencia_w, 'E'), 1, 4) || '/' || to_char(dt_mesano_referencia_w, 'yyyy');
				elsif (ie_dimensao_dois_p = 'B') then /* Beneficiário */
 
					ds_item_w	:= substr(pls_obter_dados_segurado(nr_seq_segurado_w, 'N'), 1, 255);
				end if;
								 
				if (ie_tipo_segurado_w = 'I') and (coalesce(nr_seq_contrato_w::text, '') = '') then 
					if (coalesce(nr_seq_segurado_w::text, '') = '') then 
						nm_estipulante_w := 'Registro sem usuário informado';
					else 
						nm_estipulante_w := 'Usuários Eventuais';
					end if;	
				end if;
			 
				insert into w_pls_analise_result(nr_sequencia, 
					nm_usuario, 
					dt_atualizacao, 
					nm_usuario_nrec, 
					dt_atualizacao_nrec, 
					vl_comissao_vendas, 
					vl_contas_medicas, 
					vl_coparticipacao, 
					vl_despesas_naoassist, 
					vl_encargos, 
					vl_mensalidade, 
					vl_provisoes_tecnica, 
					vl_reembolso, 
					vl_ressarcimento_sus, 
					vl_resultado, 
					vl_total_assist, 
					vl_total_despesa, 
					vl_total_receita, 
					nr_seq_superior, 
					pr_sinistralidade, 
					pr_resultado, 
					ds_item, 
					ds_item_sup, 
					ds_estipulante, 
					nr_seq_segurado, 
					ie_dimensao, 
					nr_seq_pagador, 
					nr_seq_contrato, 
					nr_seq_plano) 
				values (nextval('w_pls_analise_result_seq'), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					vl_comissao_vendas_w, 
					vl_contas_medicas_w, 
					vl_coparticipacao_w, 
					vl_despesas_naoassist_w, 
					vl_encargos_w, 
					vl_mensalidade_w, 
					vl_provisoes_tecnica_w, 
					vl_reembolso_w, 
					vl_ressarcimento_sus_w, 
					vl_resultado_w, 
					vl_total_assist_w, 
					vl_total_despesa_w, 
					vl_total_receita_w, 
					nr_seq_superior_w, 
					0, 
					0, 
					ds_item_w, 
					ds_item_sup_w, 
					nm_estipulante_w, 
					CASE WHEN ie_dimensao_dois_p='B' THEN  nr_seq_segurado_w  ELSE null END , 
					ie_dimensao_dois_p, 
					nr_seq_pagador_w, 
					nr_seq_contrato_w, 
					nr_seq_plano_w);
			end if;
			end;
		end loop;
	end loop;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_montar_tela_analise_result ( nr_seq_pagador_p bigint, nr_seq_segurado_p bigint, nr_seq_contrato_p bigint, nr_seq_grupo_p bigint, nr_seq_faixa_p bigint, ie_tipo_segurado_p text, ie_tipo_data_p bigint, dt_inicial_p text, dt_final_p text, ie_dimensao_um_p text, ie_dimensao_dois_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_contrato_intercambio_p bigint, nr_seq_grupo_contr_interc_p bigint, ie_tipo_vinculo_operadora_p bigint, nr_seq_intercambio_p bigint, cd_grupo_intercambio_p text, ie_regulamentacao_p pls_plano.ie_regulamentacao%type, ie_tipo_contratacao_p pls_plano.ie_tipo_contratacao%type, ie_preco_p pls_plano.ie_preco%type, nr_contrato_p pls_contrato.nr_contrato%type) FROM PUBLIC;

