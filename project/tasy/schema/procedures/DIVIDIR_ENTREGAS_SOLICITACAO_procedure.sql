-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dividir_entregas_solicitacao ( nr_solic_compra_p bigint, dt_segunda_entrega_p timestamp, nm_usuario_p text) AS $body$
DECLARE



nr_item_solic_compra_w		integer;
nr_item_solic_compra_entr_w		integer;
qt_entrega_solicitada_w		double precision;
qt_entrega_solicitada_w1		double precision;
qt_entrega_solicitada_w2		double precision;
dt_entrega_solicitada_w		timestamp;
qt_existe_w			bigint;
mod_w				double precision;

c01 CURSOR FOR
SELECT	a.nr_item_solic_compra,
	b.dt_entrega_solicitada,
	b.qt_entrega_solicitada
from	solic_compra_item a,
	solic_compra_item_entrega b
where	a.nr_solic_compra		= b.nr_solic_compra
and	a.nr_item_solic_compra	= b.nr_item_solic_compra
and	a.nr_solic_compra		= nr_solic_compra_p
and	a.qt_material 		> 1;


BEGIN

if (trunc(dt_segunda_entrega_p,'dd') < trunc(clock_timestamp(),'dd')) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(265971);
	--'A data deve ser maior ou igual a data atual do sistema.'
end if;

select	count(*)
into STRICT	qt_existe_w
from	solic_compra_item_entrega
where	trunc(dt_entrega_solicitada,'dd') = trunc(dt_segunda_entrega_p,'dd')
and	nr_solic_compra = nr_solic_compra_p;

if (qt_existe_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(265972);
	--'JÃ¡ existe uma entrega para esta data. Favor selecionar outra data.'
end if;

open C01;
loop
fetch C01 into
	nr_item_solic_compra_w,
	dt_entrega_solicitada_w,
	qt_entrega_solicitada_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	mod_w := mod(qt_entrega_solicitada_w, 2);

	if (mod_w = 0) then
		qt_entrega_solicitada_w1	:= round(dividir(qt_entrega_solicitada_w, 2));
		qt_entrega_solicitada_w2	:= qt_entrega_solicitada_w1;
	else
		qt_entrega_solicitada_w1	:= round(dividir(qt_entrega_solicitada_w, 2));
		qt_entrega_solicitada_w2	:= qt_entrega_solicitada_w1 -1;
	end if;
	end;

	update	solic_compra_item_entrega
	set	qt_entrega_solicitada	= qt_entrega_solicitada_w1
	where	nr_solic_compra		= nr_solic_compra_p
	and	nr_item_solic_compra	= nr_item_solic_compra_w
	and	dt_entrega_solicitada	= dt_entrega_solicitada_w;

	select	coalesce(max(nr_item_solic_compra_entr),0) +1
	into STRICT	nr_item_solic_compra_entr_w
	from	solic_compra_item_entrega
	where	nr_solic_compra		= nr_solic_compra_p
	and	nr_item_solic_compra	= nr_item_solic_compra_w;

	insert into solic_compra_item_entrega(
		nr_solic_compra,
		nr_item_solic_compra,
		nr_item_solic_compra_entr,
		qt_entrega_solicitada,
		dt_entrega_solicitada,
		dt_atualizacao,
		nm_usuario,
		ds_observacao)
	values (	nr_solic_compra_p,
		nr_item_solic_compra_w,
		nr_item_solic_compra_entr_w,
		qt_entrega_solicitada_w2,
		dt_segunda_entrega_p,
		clock_timestamp(),
		nm_usuario_p,
		'');
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dividir_entregas_solicitacao ( nr_solic_compra_p bigint, dt_segunda_entrega_p timestamp, nm_usuario_p text) FROM PUBLIC;

