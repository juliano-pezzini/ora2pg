-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cot_compra_resumo ( nr_cot_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
 
nr_sequencia_w		bigint;
nr_item_cot_compra_w	bigint;
nr_seq_cot_forn_w		bigint;
nr_seq_cot_item_forn_w	bigint;
qt_material_w		double precision;
vl_unitario_material_w	double precision;
vl_unitario_liquido_w	double precision;
vl_preco_liquido_w		double precision;
vl_frete_rateio_w		double precision;
vl_presente_w		double precision;
vl_preco_w		double precision;
qt_prioridade_w		integer;
pr_desconto_w		double precision;
vl_unid_fornec_w		double precision;
cd_estabelecimento_w	smallint;
ie_preco_duplicado_cotacao_w	varchar(1);

 
c01 CURSOR FOR 
SELECT	i.nr_item_cot_compra, 
	i.nr_seq_cot_forn, 
	i.nr_sequencia, 
	i.qt_material, 
	i.vl_unitario_material, 
	i.vl_unitario_liquido, 
	i.vl_preco_liquido, 
	i.vl_frete_rateio, 
	i.vl_presente, 
	i.vl_preco, 
	i.qt_prioridade, 
	i.pr_desconto, 
	i.vl_unid_fornec 
from	cot_compra b, 
	cot_compra_forn_item i 
where	i.nr_cot_compra		= b.nr_cot_compra 
and	i.nr_cot_compra		= nr_cot_compra_p 
and	i.vl_unitario_material	> 0 
and	i.nr_sequencia		= obter_venc_cot_fornec_item(i.nr_cot_compra, i.nr_item_cot_compra) 
and not exists ( 
	SELECT	1 
	from	cot_compra_solic_agrup x 
	where	i.nr_item_cot_compra	= x.nr_item_cot_compra 
	and	i.nr_cot_compra		= x.nr_cot_compra 
	and	(x.cd_estabelecimento IS NOT NULL AND x.cd_estabelecimento::text <> '') 
	and	x.cd_estabelecimento <> b.cd_estabelecimento) 

union all
 
select	i.nr_item_cot_compra, 
	i.nr_seq_cot_forn, 
	i.nr_sequencia, 
	i.qt_material, 
	i.vl_unitario_material, 
	i.vl_unitario_liquido, 
	i.vl_preco_liquido, 
	i.vl_frete_rateio, 
	i.vl_presente, 
	i.vl_preco, 
	i.qt_prioridade, 
	i.pr_desconto, 
	i.vl_unid_fornec 
from	cot_compra b, 
	cot_compra_forn_item i 
where	i.nr_cot_compra		= b.nr_cot_compra 
and	i.nr_cot_compra		= nr_cot_compra_p 
and	i.vl_unitario_material	> 0 
and	i.nr_sequencia		= obter_venc_cot_fornec_item(i.nr_cot_compra, i.nr_item_cot_compra) 
and exists ( 
	select	1 
	from	cot_compra_solic_agrup z 
	where	i.nr_item_cot_compra	= z.nr_item_cot_compra 
	and	i.nr_cot_compra		= z.nr_cot_compra 
	and	(z.cd_estabelecimento IS NOT NULL AND z.cd_estabelecimento::text <> '') 
	and	z.cd_estabelecimento <> b.cd_estabelecimento);

c02 CURSOR FOR 
SELECT	distinct 
	a.nr_item_cot_compra 
from	cot_compra_forn_item_tr_v a 
where	a.nr_cot_compra		= nr_cot_compra_p 
and	Obter_Se_Cotacao_Preco_Igual(nr_seq_item_fornec) > 0 
order by	1;

c03 CURSOR FOR 
SELECT	i.nr_sequencia, 
	i.qt_material, 
	i.vl_unitario_material, 
	i.vl_unitario_liquido, 
	i.vl_preco_liquido, 
	i.vl_frete_rateio, 
	i.vl_presente, 
	i.vl_preco, 
	i.qt_prioridade, 
	i.pr_desconto, 
	i.vl_unid_fornec 
from	cot_compra b, 
	cot_compra_forn_item i 
where	i.nr_cot_compra		= b.nr_cot_compra 
and	b.nr_cot_compra		= nr_cot_compra_p 
and	i.nr_seq_cot_forn	= nr_seq_cot_forn_w 
and	i.nr_item_cot_compra	= nr_item_cot_compra_w 
and	i.vl_unitario_material	> 0;


BEGIN 
delete 
from	cot_compra_resumo 
where	nr_cot_compra = nr_cot_compra_p;
commit;
 
select	cd_estabelecimento 
into STRICT	cd_estabelecimento_w 
from	cot_compra 
where	nr_cot_compra = nr_cot_compra_p;
 
select	coalesce(max(ie_preco_duplicado_cotacao),'N') 
into STRICT	ie_preco_duplicado_cotacao_w 
from	parametro_compras 
where	cd_estabelecimento = cd_estabelecimento_w;
 
open C01;
loop 
fetch C01 into 
	nr_item_cot_compra_w, 
	nr_seq_cot_forn_w, 
	nr_seq_cot_item_forn_w, 
	qt_material_w, 
	vl_unitario_material_w, 
	vl_unitario_liquido_w, 
	vl_preco_liquido_w, 
	vl_frete_rateio_w, 
	vl_presente_w, 
	vl_preco_w, 
	qt_prioridade_w, 
	pr_desconto_w, 
	vl_unid_fornec_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(301251),'GERAR_COT_COMPRA_RESUMO',-1);
	 
	select	nextval('cot_compra_resumo_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	insert into cot_compra_resumo( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_cot_compra, 
		nr_item_cot_compra, 
		nr_seq_cot_forn, 
		nr_seq_cot_item_forn, 
		qt_material, 
		vl_unitario_material, 
		vl_unitario_liquido, 
		vl_preco_liquido, 
		vl_frete_rateio, 
		vl_presente, 
		vl_preco, 
		qt_prioridade, 
		pr_desconto, 
		vl_unid_fornec) 
	values ( nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_cot_compra_p, 
		nr_item_cot_compra_w, 
		nr_seq_cot_forn_w, 
		nr_seq_cot_item_forn_w, 
		qt_material_w, 
		vl_unitario_material_w, 
		vl_unitario_liquido_w, 
		vl_preco_liquido_w, 
		vl_frete_rateio_w, 
		vl_presente_w, 
		vl_preco_w, 
		qt_prioridade_w, 
		pr_desconto_w, 
		vl_unid_fornec_w);
	end;
end loop;
close c01;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cot_compra_resumo ( nr_cot_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

