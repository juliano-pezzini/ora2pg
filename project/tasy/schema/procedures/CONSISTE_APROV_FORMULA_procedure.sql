-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_aprov_formula (nr_prescricao_p bigint, nr_seq_prescr_p bigint, ds_consistencia_p INOUT text) AS $body$
DECLARE

nr_seq_exame_w	bigint;
nr_seq_prescr_w	bigint;
nm_exame_w		varchar(80);
nr_seq_formato_w	bigint;
ie_formato_resultado_w	varchar(5);
ds_resultado_w		varchar(2000);
qt_resultado_w		double precision;
pr_resultado_w		double precision;
qt_maxima_w			double precision;
qt_minima_w			double precision;
pr_maximo_w			double precision;
pr_minimo_w			double precision;
ds_referencia_w			varchar(4000);

C01 CURSOR FOR
	SELECT a.nr_seq_exame,
		 a.nr_sequencia,
		 b.nm_exame,
		 obter_formato_exame(a.nr_seq_exame, c.nr_sequencia, null, 'L')
	from	material_exame_lab c,
		exame_laboratorio b,
		prescr_procedimento a
	where a.nr_seq_exame		= b.nr_seq_exame
	  and a.cd_material_exame	= c.cd_material_exame
	  and a.nr_prescricao		= nr_prescricao_p
	  and a.nr_sequencia		= coalesce(nr_seq_prescr_p, a.nr_sequencia)
	order by 2;
C02 CURSOR FOR
	SELECT 	c.nm_exame,
		obter_formato_result_exame(b.nr_seq_exame, b.nr_seq_material),
		ds_resultado,
		coalesce(qt_resultado,0),
		coalesce(pr_resultado,0),
		coalesce(qt_maxima,9999999),
		coalesce(qt_minima,-999999),
		coalesce(pr_maximo,100),
		coalesce(pr_minimo,0),
		ds_referencia
	from	exame_laboratorio c,
		exame_lab_result_item b,
		exame_lab_resultado a
	where a.nr_seq_resultado	= b.nr_seq_resultado
	  and b.nr_seq_exame		= c.nr_seq_exame
	  and a.nr_prescricao		= nr_prescricao_p
	  and b.nr_seq_prescr		= nr_seq_prescr_w
	  and ie_consiste		= 'S'
	  and (c.ds_formula IS NOT NULL AND c.ds_formula::text <> '')
	order by 2;

BEGIN
open C01;
loop
	fetch C01 into	nr_seq_exame_w,
				nr_seq_prescr_w,
				nm_exame_w,
				nr_seq_formato_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	if (coalesce(nr_seq_formato_w::text, '') = '') then
		ds_consistencia_p := substr(ds_consistencia_p || wheb_mensagem_pck.get_texto(707278, 'NM_EXAME=' || nm_exame_w)
							|| chr(13) || chr(10), 1, 254);
	end if;
	open C02;
	loop
		fetch C02 into	nm_exame_w,
					ie_formato_resultado_w,
					ds_resultado_w,
					qt_resultado_w,
					pr_resultado_w,
					qt_maxima_w,
					qt_minima_w,
					pr_maximo_w,
					pr_minimo_w,
					ds_referencia_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		if (ie_formato_resultado_w = 'V') or (ie_formato_resultado_w = 'VP') then
			if	not(qt_resultado_w between qt_minima_w and qt_maxima_w) then
				ds_consistencia_p := substr(ds_consistencia_p || wheb_mensagem_pck.get_texto(707279, 'NM_EXAME=' || nm_exame_w || ';RESULTADO=' || qt_resultado_w)
									|| chr(13) || chr(10), 1, 254);
			end if;
		end if;
		if (ie_formato_resultado_w = 'P') or (ie_formato_resultado_w = 'VP') then
			if	not(pr_resultado_w between pr_minimo_w and pr_maximo_w) then
				ds_consistencia_p := substr(ds_consistencia_p || wheb_mensagem_pck.get_texto(707279, 'NM_EXAME=' || nm_exame_w || ';RESULTADO=' || pr_resultado_w)
									|| chr(13) || chr(10), 1, 254);
			end if;
		end if;
		if (ie_formato_resultado_w = 'SM') or (ie_formato_resultado_w = 'SDM') or (ie_formato_resultado_w = 'S') or (ie_formato_resultado_w = 'MS') or (ie_formato_resultado_w = 'MSL') or (ie_formato_resultado_w = 'DL') or (ie_formato_resultado_w = 'DV') or (ie_formato_resultado_w = 'D') then
			if not(upper(ELIMINA_ACENTOS(ds_resultado_w)) like upper(ELIMINA_ACENTOS(ds_referencia_w))) then
				ds_consistencia_p := substr(ds_consistencia_p || wheb_mensagem_pck.get_texto(707279, 'NM_EXAME=' || nm_exame_w || ';RESULTADO=' || ds_resultado_w)
									|| chr(13) || chr(10), 1, 254);
			end if;
		end if;
	end loop;
	close C02;
end loop;
close C01;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_aprov_formula (nr_prescricao_p bigint, nr_seq_prescr_p bigint, ds_consistencia_p INOUT text) FROM PUBLIC;

