-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_rec_glosa_glosas ( nr_seq_conta_imp_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Rotina criada para consistir as glosas apresentados  no Recurso de Glosa
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  x] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção: Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_procedimento_w	pls_rec_glosa_proc_imp.cd_procedimento%type;
cd_guia_recurso_w	pls_rec_glosa_conta_imp.cd_guia_recurso%type;
cd_material_w		pls_rec_glosa_mat_imp.cd_material%type;
ds_glosa_w		varchar(4000);


C01 CURSOR FOR
	SELECT 	cd_glosa,
		nr_seq_proc_imp,
		nr_seq_mat_imp,
		nr_seq_conta_imp,
		nr_seq_glosa_conta
	from	pls_rec_glosa_glosas_imp
	where	nr_seq_conta_imp = nr_seq_conta_imp_p;


BEGIN

	for rg01 in C01 loop
		select	max(cd_motivo_tiss ||' - ' ||ds_motivo_tiss)
		into STRICT	ds_glosa_w
		from	tiss_motivo_glosa
		where	cd_motivo_tiss = rg01.cd_glosa;


		/* Verifica a sequência da glosa gerada na tabela PLS_CONTA_GLOSA  se não encontrou a glosa o arquivo é barrado */

		if ( coalesce(rg01.nr_seq_glosa_conta::text, '') = '' ) then

			--Verifica se a glosa é do procedimento
			if (rg01.nr_seq_proc_imp IS NOT NULL AND rg01.nr_seq_proc_imp::text <> '') then
				select 	cd_procedimento
				into STRICT	cd_procedimento_w
				from	pls_rec_glosa_proc_imp
				where 	nr_sequencia = rg01.nr_seq_proc_imp;

				CALL pls_gravar_glosa_recurso_glosa(	'2901', rg01.nr_seq_conta_imp, rg01.nr_seq_proc_imp,
								null, null, 'A Glosa '||ds_glosa_w|| ' não pertence ao procedimento ' || cd_procedimento_w || ' da conta apresentada ' || rg01.nr_seq_conta_imp,
								nm_usuario_p);

			--Verifica se a glosa é do material
			elsif (rg01.nr_seq_mat_imp IS NOT NULL AND rg01.nr_seq_mat_imp::text <> '') then

				select 	coalesce(cd_material,to_char(nr_seq_material))
				into STRICT	cd_material_w
				from	pls_rec_glosa_mat_imp
				where 	nr_sequencia = rg01.nr_seq_mat_imp;

				CALL pls_gravar_glosa_recurso_glosa(	'2901', rg01.nr_seq_conta_imp, null,
								rg01.nr_seq_mat_imp, null, 'A Glosa '||ds_glosa_w|| ' não pertence ao material ' || cd_material_w || ' da conta apresentada ' || rg01.nr_seq_conta_imp,
								nm_usuario_p);

			--Se não gerou no procedimento e nem no material verifica a conta médica
			elsif (rg01.nr_seq_conta_imp IS NOT NULL AND rg01.nr_seq_conta_imp::text <> '') then
				select 	cd_guia_recurso
				into STRICT	cd_guia_recurso_w
				from	pls_rec_glosa_conta_imp
				where 	nr_sequencia = rg01.nr_seq_conta_imp;

				CALL pls_gravar_glosa_recurso_glosa(	'2901', rg01.nr_seq_conta_imp, null,
								null, null, 'A Glosa '||ds_glosa_w|| ' não pertence a guia apresentada ' || cd_guia_recurso_w || ' da conta apresentada ' || rg01.nr_seq_conta_imp,
								nm_usuario_p);
			end if;

		end if;
	end loop;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_rec_glosa_glosas ( nr_seq_conta_imp_p bigint, nm_usuario_p text) FROM PUBLIC;

