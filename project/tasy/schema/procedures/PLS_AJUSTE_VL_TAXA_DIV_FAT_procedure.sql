-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajuste_vl_taxa_div_fat (nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_origem_conta_p text default 'A') AS $body$
DECLARE


/* Rotina para ajustar o valor da taxa da divisao da fatura
* jtrindade 02/FEV/2021
*/
-- Variaveis
vl_tot_fat_original_w			double precision := 0;
vl_tot_fat_nova_w			double precision := 0;
vl_taxa_adm_w				double precision := 0;
tx_administracao_w			double precision := 0;
vl_total_taxa_w				double precision := 0;
vl_dif_faturas_w			double precision := 0;
qt_taxa_w				integer;
nr_seq_fatura_ori_w			pls_fatura.nr_sequencia%type;
nr_seq_fat_nova_w			pls_fatura.nr_sequencia%type;
tipo_w					varchar(1);
nr_seq_proc_mat_w			bigint;
vl_taxa_proc_mat_w			double precision := 0;
ie_divisao_taxa				smallint := 0;
nr_seq_regra_fat_w			pls_lote_faturamento.nr_sequencia%type;
ie_div_fat_taxa_w			pls_regra_faturamento.ie_div_fat_taxa%type;

-- pegar faturas do lote que nao sao de taxa administrativa
c01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_fatura		a
	where	a.nr_seq_lote	= nr_seq_lote_p
	and 	coalesce(a.nr_seq_fat_divisao,0) = 0
	order by a.nr_sequencia;


BEGIN

select	max(a.nr_seq_regra_fat)
into STRICT	nr_seq_regra_fat_w
from	pls_lote_faturamento a
where	a.nr_sequencia	= nr_seq_lote_p;

-- Verificar se tem regra de divisao de taxa marcada
select	coalesce(max(ie_div_fat_taxa),'N')
into STRICT	ie_div_fat_taxa_w
from	pls_regra_faturamento
where	nr_sequencia = nr_seq_regra_fat_w;

if (ie_div_fat_taxa_w = 'S') then

	open C01;
	loop
	fetch C01 into
		nr_seq_fatura_ori_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		-- burcar valor da fatura original
		select	(substr(pls_obter_dados_pls_fatura(nr_sequencia,'VTT'),1,255))::numeric
		into STRICT	vl_tot_fat_original_w
		from	pls_fatura
		where	nr_sequencia	= nr_seq_fatura_ori_w;
		
		-- buscar a quantidade de taxa administrativa dentro da fatura original
		select	count(distinct	 a.tx_administracao)
		into STRICT	qt_taxa_w
		from	pls_conta_pos_estabelecido	a
		where	a.ie_status_faturamento	= 'L'
		and 	a.tx_administracao > 0
		and	a.nr_seq_conta	in (SELECT	b.nr_seq_conta
						from	pls_fatura_conta	b,
							pls_fatura_evento	c
						where	c.nr_sequencia		= b.nr_seq_fatura_evento
						and	c.nr_seq_fatura		= nr_seq_fatura_ori_w);

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_fat_nova_w
		from	pls_fatura	a
		where	a.nr_seq_fat_divisao	= nr_seq_fatura_ori_w;
		
		-- buscar o valor da fatura nova de taxa
		select	(substr(pls_obter_dados_pls_fatura(nr_sequencia,'VTT'),1,255))::numeric
		into STRICT	vl_tot_fat_nova_w
		from	pls_fatura
		where	nr_sequencia	= nr_seq_fat_nova_w;
		
		-- se tiver uma taxa apenas
		if (qt_taxa_w = 1) then
			-- buscar a quantidade de taxa administrativa dentro da fatura original
			select	max(a.tx_administracao)
			into STRICT	vl_taxa_adm_w
			from	pls_conta_pos_estabelecido	a
			where	a.ie_status_faturamento	= 'L'
			and	a.nr_seq_conta	in (SELECT	b.nr_seq_conta
							from	pls_fatura_conta	b,
								pls_fatura_evento	c
							where	c.nr_sequencia		= b.nr_seq_fatura_evento
							and	c.nr_seq_fatura		= nr_seq_fatura_ori_w);
			
			vl_total_taxa_w	:= vl_tot_fat_original_w * (vl_taxa_adm_w/100);
			
			-- se o 6% do total da fatura original, for diferente do valor total da fatura dividida
			if (vl_total_taxa_w <> vl_tot_fat_nova_w) then
				-- pega a diferenca
				vl_dif_faturas_w	:= vl_total_taxa_w - vl_tot_fat_nova_w;
			
				-- pega a sequencia de maior valor entre proc e mat
				select	tipo,
					nr_sequencia,
					valor
				into STRICT	tipo_w,
					nr_seq_proc_mat_w,
					vl_taxa_proc_mat_w
				from (SELECT	tipo,
						nr_sequencia,
						valor
					from (	select	'P' tipo,
							proc.nr_sequencia,
							coalesce(proc.vl_lib_taxa_co,0) + coalesce(proc.vl_lib_taxa_material,0) + coalesce(proc.vl_lib_taxa_servico,0) valor
						from	pls_fatura_proc proc
						where	proc.nr_seq_fatura_conta in (select	b.nr_sequencia
											from	pls_fatura_conta	b,
												pls_fatura_evento	c
											where	c.nr_sequencia		= b.nr_seq_fatura_evento
											and	c.nr_seq_fatura		= nr_seq_fat_nova_w)
						
union

						SELECT	'M' tipo,
							mat.nr_sequencia,
							coalesce(mat.vl_lib_taxa_co,0) + coalesce(mat.vl_lib_taxa_material,0) + coalesce(mat.vl_lib_taxa_servico,0) valor
						from	pls_fatura_mat mat
						where	mat.nr_seq_fatura_conta in (select	b.nr_sequencia
											from	pls_fatura_conta	b,
												pls_fatura_evento	c
											where	c.nr_sequencia		= b.nr_seq_fatura_evento
											and	c.nr_seq_fatura		= nr_seq_fat_nova_w)
						) alias8
					order by valor desc
				) alias9 LIMIT 1;
				
				-- se for procedimento
				if (tipo_w = 'P') then
					update	pls_fatura_proc
					set	vl_lib_taxa_servico = vl_lib_taxa_servico + vl_dif_faturas_w,
						vl_faturado = vl_faturado + vl_dif_faturas_w
					where	nr_sequencia = nr_seq_proc_mat_w;
				
				-- se for material
				elsif (tipo_w = 'M') then
					update	pls_fatura_mat
					set	vl_lib_taxa_material = vl_lib_taxa_material + vl_dif_faturas_w,
						vl_faturado = vl_faturado + vl_dif_faturas_w
					where	nr_sequencia = nr_seq_proc_mat_w;
				end if;
			end if;
		end if;
		end;
	end loop;
	close C01;

	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajuste_vl_taxa_div_fat (nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_origem_conta_p text default 'A') FROM PUBLIC;

