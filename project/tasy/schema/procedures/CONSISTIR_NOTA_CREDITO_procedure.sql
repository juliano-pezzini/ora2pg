-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_nota_credito ( nr_seq_movto_pend_p bigint, nr_seq_movto_trans_fin_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_nota_credito_w				nota_credito.nr_sequencia%type;
qt_regra_w						bigint;
dt_nota_credito_w				nota_credito.dt_nota_credito%type;
nr_seq_trans_baixa_tit_pagar_w	transacao_financeira.nr_sequencia%type;
nr_seq_trans_fin_contab_w		transacao_financeira.nr_sequencia%type;
dt_vencimento_w					timestamp;


BEGIN

if (nr_seq_movto_trans_fin_p IS NOT NULL AND nr_seq_movto_trans_fin_p::text <> '') then

	select	max(a.nr_sequencia), /*Verificar se existe nota de credito gerada atraves do movimento bancario*/
			max(a.dt_nota_credito)
	into STRICT	nr_nota_credito_w,
			dt_nota_credito_w
	from	nota_credito a
	where 	a.nr_seq_movto_origem = nr_seq_movto_trans_fin_p;

end if;

if (nr_nota_credito_w IS NOT NULL AND nr_nota_credito_w::text <> '') and (nr_seq_movto_pend_p IS NOT NULL AND nr_seq_movto_pend_p::text <> '') then /*Se possuir nota de credito gerada no movimento e possuir CNI vinculado a esse movimento, atualizar a nota de credito e vincular o CNI*/
	begin
	select	1
	into STRICT	qt_regra_w
	from	regra_nota_credito LIMIT 1;
	exception
	when others then
		qt_regra_w := 0;
	end;

	if (qt_regra_w > 0) then
		SELECT * FROM obter_regra_nota_credito(
			'CN', coalesce(dt_nota_credito_w,clock_timestamp()), nr_seq_trans_baixa_tit_pagar_w, nr_seq_trans_fin_contab_w, dt_vencimento_w) INTO STRICT nr_seq_trans_baixa_tit_pagar_w, nr_seq_trans_fin_contab_w, dt_vencimento_w;
	end if;

	update	nota_credito
	set		ie_origem						= 'CN',
		    ds_observacao					= wheb_mensagem_pck.get_texto(323765),
			nr_seq_credito_n_ident			= nr_seq_movto_pend_p,
			nr_seq_trans_baixa_tit_pagar	= coalesce(nr_seq_trans_baixa_tit_pagar_w, nr_seq_trans_baixa_tit_pagar),
			nr_seq_trans_fin_contab			= coalesce(nr_seq_trans_fin_contab_w,nr_seq_trans_fin_contab),
			dt_vencimento					= coalesce(dt_vencimento_w,dt_vencimento)
	where	nr_sequencia					= nr_nota_credito_w;

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_nota_credito ( nr_seq_movto_pend_p bigint, nr_seq_movto_trans_fin_p bigint, nm_usuario_p text) FROM PUBLIC;

