-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_acao_visita_catraca ( nr_controle_acesso_p atendimento_visita.nr_controle_acesso%TYPE, dt_acao_p atendimento_visita.dt_saida_real%TYPE, ie_entrada_saida_p text, ds_bloqueio_p text, ds_evento_p text, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%TYPE, nm_usuario_p log_mov.nm_usuario%TYPE, ds_cracha_p acompanhante_paciente.nr_controle%TYPE default null, ie_visita_acomp_p text DEFAULT NULL) AS $body$
DECLARE


ie_tipo_visita_w	log_mov.nm_usuario%TYPE;
nr_atendimento_w	atendimento_acompanhante.nr_atendimento%TYPE;
dt_entrada_acomp_w	atendimento_acompanhante.dt_acompanhante%TYPE;
nr_seq_atend_visita_w	atendimento_visita.nr_sequencia%TYPE;
cd_log_w log_tasy.cd_log%TYPE := 7896;
stack_w CONSTANT log_mov.cd_log%TYPE := 1;
stack_info_w CONSTANT log_mov.cd_log%TYPE := 2000;
ie_entrada_saida_w  log_mov.nm_usuario%TYPE;	
nr_seq_controle_w	atendimento_visita.nr_seq_controle%type := 0;
ie_controle_cracha_w  log_mov.nm_usuario%TYPE;

/*
**** IE_ENTRADA_SAIDA_P ***
E = Entrada
S = Saida
N = Negado 

******************************

**** IE_TIPO_VISITA_W ******
P = Paciente
S = Setor
A = Acompanhante
AP = Acompanhante Paciente
******************************
*/
				


BEGIN
select case coalesce(ie_entrada_saida_p,'N')
          when 'S' then 'SAIDA'
          when 'E' then 'ENTRADA'
          else 'N'
       end
into STRICT ie_entrada_saida_w
;

insert into log_mov(nm_usuario, dt_atualizacao, cd_log, ds_log) values (nm_usuario_p, clock_timestamp(), 7896, nr_controle_acesso_p||'-'||ie_entrada_saida_w);

insert into log_tasy(	nm_usuario,
			dt_atualizacao, 
			cd_log, 
			ds_log) 
values (nm_usuario_p, 
	clock_timestamp(), 
	cd_log_w, 
	substr('begin - ' ||
	'nr_controle_acesso_p: ' || nr_controle_acesso_p || ';' ||
	'ds_cracha_p: ' || ds_cracha_p || ';' ||
	'dt_acao_p: ' || to_char(dt_acao_p, 'dd/mm/yyyy hh24:mi:ss') || ';' ||
	'ie_entrada_saida_p: ' || ie_entrada_saida_p || ';' ||
	'ie_entrada_saida_w: ' || ie_entrada_saida_w || ';' ||
	'ds_bloqueio_p: ' || ds_bloqueio_p || ';' ||
	'ds_evento_p: ' || ds_evento_p || ';' ||
	'cd_pessoa_fisica_p: ' || cd_pessoa_fisica_p || ';' ||
	'stack: ' || DBMS_UTILITY.FORMAT_CALL_STACK, stack_w, stack_info_w));
commit;

begin

	select	coalesce(max('S'),'N')
	into STRICT	ie_controle_cracha_w
	
	where	exists (
		SELECT	1
		from	atendimento_visita
		where	nr_seq_controle	= (ds_cracha_p)::numeric 	
		
union all

		SELECT	1
		from	atendimento_acompanhante
		where	nr_controle	= ds_cracha_p		
		
union all

		select	1
		from	acompanhante_paciente
		where	nr_controle	= ds_cracha_p);

	/* Somente deve existir cracha em integracoes em que o campo de vinculo seja o nr_seq_controle */

	if (ie_controle_cracha_w = 'S') then
		nr_seq_controle_w := (ds_cracha_p)::numeric;
	end if;

exception
	when no_data_found  then
		nr_seq_controle_w	:= 0;
    when OTHERS then
        nr_seq_controle_w	:= 0;
end;

if (nr_seq_controle_w > 0) then

	select	coalesce((
					select	'P' ie_tipo_visita	
					from	atendimento_visita
					where	NR_SEQ_CONTROLE	= nr_seq_controle_w	
					and	coalesce(cd_setor_atendimento::text, '') = ''
					and	coalesce(ie_paciente,'N') = 'S'
					and	coalesce(dt_saida_real::text, '') = ''
					and	coalesce(dt_saida::text, '') = ''
					and obter_se_atendimento_alta(nr_atendimento) = 'N'
					
union all

					select	'S' ie_tipo_visita	
					from	atendimento_visita
					where	NR_SEQ_CONTROLE	= nr_seq_controle_w
					and	(cd_setor_atendimento IS NOT NULL AND cd_setor_atendimento::text <> '')
					and	coalesce(dt_saida_real::text, '') = ''
					and	coalesce(dt_saida::text, '') = ''
					and obter_se_atendimento_alta(nr_atendimento) = 'N'
					
union all

					select	'A' ie_tipo_visita	
					from	atendimento_acompanhante
					where	NR_CONTROLE	= to_char(nr_seq_controle_w)
					and	coalesce(dt_saida_real::text, '') = ''
					and	coalesce(dt_saida::text, '') = ''
					and obter_se_atendimento_alta(nr_atendimento) = 'N'
					
union all

					select	'AP' ie_tipo_visita
					from	acompanhante_paciente a, 
							atendimento_visita b
					where	a.nr_seq_paciente = b.nr_sequencia
					and a.NR_CONTROLE	= to_char(nr_seq_controle_w)
					and	coalesce(a.dt_saida_real::text, '') = ''
					and obter_se_atendimento_alta(b.nr_atendimento) = 'N'
					
union all

					select	'V' ie_tipo_visita
					from	atendimento_visita
					where	NR_SEQ_CONTROLE	= nr_seq_controle_w	
					and	coalesce(cd_setor_atendimento::text, '') = ''
					and	coalesce(ie_paciente,'N') = 'N'
					and	coalesce(dt_saida_real::text, '') = ''
					and	coalesce(dt_saida::text, '') = ''
					and obter_se_atendimento_alta(nr_atendimento) = 'N'
				), 'X') ie_tipo_visita		
	into STRICT	ie_tipo_visita_w
	;	

		if (upper(ie_entrada_saida_w) = upper('SAIDA')) then --Saida 
			if (ie_tipo_visita_w = 'P') or   -- Paciente
				(ie_tipo_visita_w = 'S') then -- Paciente ou Setor
				select	max(nr_sequencia)
				into STRICT	nr_seq_atend_visita_w
				from	atendimento_visita
				where	NR_SEQ_CONTROLE	= nr_seq_controle_w
				and	coalesce(dt_saida_real::text, '') = ''
				and coalesce(dt_saida::text, '') = '';

				gerar_visitante_saida(nr_seq_atend_visita_w, nm_usuario_p, wheb_mensagem_pck.get_texto(793506), 'S');		

				update	atendimento_visita
				set	dt_saida_real		= dt_acao_p,
					dt_saida = clock_timestamp()
				where	nr_sequencia = nr_seq_atend_visita_w;

			elsif (ie_tipo_visita_w = 'A') then -- Acompanhante
				select	a.nr_atendimento,
					a.dt_acompanhante
				into STRICT	nr_atendimento_w,
					dt_entrada_acomp_w
				from	atendimento_acompanhante a
				where	a.NR_CONTROLE	= to_char(nr_seq_controle_w)
				and	coalesce(a.dt_saida_real::text, '') = ''
				and	coalesce(a.dt_saida::text, '') = ''
				and a.dt_acompanhante = (SELECT max(x.dt_acompanhante) from atendimento_acompanhante x where x.NR_CONTROLE	= to_char(nr_seq_controle_w));

				update	atendimento_acompanhante a
				set	a.dt_saida		= clock_timestamp(),
					a.dt_saida_real		= dt_acao_p
				where	a.NR_CONTROLE	= to_char(nr_seq_controle_w)
				and a.dt_acompanhante = (SELECT max(x.dt_acompanhante) from atendimento_acompanhante x where x.NR_CONTROLE	= to_char(nr_seq_controle_w));

			elsif (ie_tipo_visita_w = 'AP') then -- Acompanhante Paciente
				update	acompanhante_paciente a
				set	a.dt_saida_real		= dt_acao_p
				where	a.NR_CONTROLE	= nr_seq_controle_w
				and a.nr_sequencia = (SELECT max(x.nr_sequencia) from acompanhante_paciente x where x.NR_CONTROLE	= to_char(nr_seq_controle_w));		

			elsif (ie_tipo_visita_w = 'V') then -- Visitante Paciente
				update	atendimento_visita a
				set		a.dt_saida_real		= dt_acao_p,
						a.dt_saida = clock_timestamp()
				where	a.NR_SEQ_CONTROLE	= nr_seq_controle_w
				and a.nr_sequencia = (SELECT max(x.nr_sequencia) from atendimento_visita x where x.NR_SEQ_CONTROLE	= to_char(nr_seq_controle_w));		

			end if;	
		elsif (upper(ie_entrada_saida_w) = upper('ENTRADA')) then --Entrada		
			if (ie_tipo_visita_w = 'P') or   -- Paciente
				(ie_tipo_visita_w = 'S') then -- Paciente ou Setor
				update	atendimento_visita a
				set	a.dt_entrada_real		= dt_acao_p
				where	a.NR_SEQ_CONTROLE	= nr_seq_controle_w
				and a.nr_sequencia = (SELECT max(x.nr_sequencia) from atendimento_visita x where x.NR_SEQ_CONTROLE	= to_char(nr_seq_controle_w));		

			elsif (ie_tipo_visita_w = 'A') then -- Acompanhante
				update	atendimento_acompanhante a
				set	a.dt_entrada_real		= dt_acao_p
				where	a.NR_CONTROLE	= nr_seq_controle_w
				and a.dt_acompanhante = (SELECT max(x.dt_acompanhante) from atendimento_acompanhante x where x.NR_CONTROLE	= to_char(nr_seq_controle_w));			

			elsif (ie_tipo_visita_w = 'AP') then -- Acompanhante Paciente
				update	acompanhante_paciente a
				set	a.dt_entrada_real		= dt_acao_p
				where	a.NR_CONTROLE	= nr_seq_controle_w
				and a.nr_sequencia = (SELECT max(x.nr_sequencia) from acompanhante_paciente x where x.NR_CONTROLE	= to_char(nr_seq_controle_w));				

			elsif (ie_tipo_visita_w = 'V') then -- Visitante Paciente
				update	atendimento_visita a
				set		a.dt_entrada_real		= dt_acao_p
				where	a.NR_SEQ_CONTROLE	= nr_seq_controle_w
				and a.nr_sequencia = (SELECT max(x.nr_sequencia) from atendimento_visita x where x.NR_SEQ_CONTROLE	= to_char(nr_seq_controle_w));		

			end if;
		end if;

elsif (nr_controle_acesso_p IS NOT NULL AND nr_controle_acesso_p::text <> '') then
		select	coalesce((
			select	'P' ie_tipo_visita	
			from	atendimento_visita
			where	nr_controle_acesso	= nr_controle_acesso_p
			and	coalesce(cd_setor_atendimento::text, '') = ''
			and	coalesce(ie_paciente,'N') = 'S'
			and	coalesce(dt_saida_real::text, '') = ''
			and	coalesce(dt_saida::text, '') = ''
			
union all

			select	'S' ie_tipo_visita	
			from	atendimento_visita
			where	nr_controle_acesso	= nr_controle_acesso_p
			and	(cd_setor_atendimento IS NOT NULL AND cd_setor_atendimento::text <> '')
			and	coalesce(dt_saida_real::text, '') = ''
			and	coalesce(dt_saida::text, '') = ''
			
union all

			select	'A' ie_tipo_visita	
			from	atendimento_acompanhante
			where	nr_controle_acesso	= nr_controle_acesso_p	
			and	coalesce(dt_saida_real::text, '') = ''
			and	coalesce(dt_saida::text, '') = ''			
			
union all

			select	'AP' ie_tipo_visita
			from	acompanhante_paciente
			where	nr_controle_acesso	= nr_controle_acesso_p
			and	coalesce(dt_saida_real::text, '') = ''		
			
union all

			select	'V' ie_tipo_visita
			from	atendimento_visita
			where	nr_controle_acesso	= nr_controle_acesso_p	
			and	coalesce(cd_setor_atendimento::text, '') = ''
			and	coalesce(ie_paciente,'N') = 'N'
			and	coalesce(dt_saida_real::text, '') = ''
			and	coalesce(dt_saida::text, '') = ''
			), 'X') ie_tipo_visita		
		into STRICT	ie_tipo_visita_w
		;	

		if (upper(ie_entrada_saida_w) = upper('ENTRADA')) then --Entrada
			if (ie_tipo_visita_w = 'P') or   -- Paciente
				(ie_tipo_visita_w = 'S') then -- Paciente ou Setor
				update	atendimento_visita
				set	dt_entrada_real		= dt_acao_p
				where	nr_controle_acesso	= nr_controle_acesso_p;

			elsif (ie_tipo_visita_w = 'A') then -- Acompanhante
				update	atendimento_acompanhante
				set	dt_entrada_real		= dt_acao_p
				where	nr_controle_acesso	= nr_controle_acesso_p;			

			elsif (ie_tipo_visita_w = 'AP') then -- Acompanhante Paciente
				update	acompanhante_paciente
				set	dt_entrada_real		= dt_acao_p
				where	nr_controle_acesso	= nr_controle_acesso_p;		

			elsif (ie_tipo_visita_w = 'V') then -- Visitante Paciente
				update	atendimento_visita
				set		dt_entrada_real		= dt_acao_p
				where	nr_controle_acesso	= nr_controle_acesso_p;

			end if;

		elsif (upper(ie_entrada_saida_w) = upper('SAIDA')) then --Saida
			if (ie_tipo_visita_w = 'P') or   -- Paciente
				(ie_tipo_visita_w = 'S') then -- Paciente ou Setor
				select	nr_sequencia
				into STRICT	nr_seq_atend_visita_w
				from	atendimento_visita
				where	nr_controle_acesso	= nr_controle_acesso_p;

				gerar_visitante_saida(nr_seq_atend_visita_w, nm_usuario_p, wheb_mensagem_pck.get_texto(793506), 'S');		

				update	atendimento_visita
				set	dt_saida_real		= dt_acao_p,
					dt_saida = clock_timestamp()
				where	nr_controle_acesso	= nr_controle_acesso_p;

			elsif (ie_tipo_visita_w = 'A') then -- Acompanhante
				select	nr_atendimento,
					dt_acompanhante
				into STRICT	nr_atendimento_w,
					dt_entrada_acomp_w
				from	atendimento_acompanhante
				where	nr_controle_acesso	= nr_controle_acesso_p;

				update	atendimento_acompanhante
				set		dt_saida_real		= dt_acao_p
				where	nr_controle_acesso	= nr_controle_acesso_p;

			elsif (ie_tipo_visita_w = 'AP') then -- Acompanhante Paciente
				update	acompanhante_paciente
				set	dt_saida_real		= dt_acao_p
				where	nr_controle_acesso	= nr_controle_acesso_p;		

			elsif (ie_tipo_visita_w = 'V') then -- Visitante Paciente
				update	atendimento_visita
				set		dt_saida_real		= dt_acao_p,
						dt_saida = clock_timestamp()
				where	nr_controle_acesso	= nr_controle_acesso_p;

			end if;		
		end if;	

end if;

insert into log_tasy(	nm_usuario,
			dt_atualizacao, 
			cd_log, 
			ds_log) 
values (nm_usuario_p, 
	clock_timestamp(), 
	cd_log_w, 
	substr('end - ' ||
	'nr_controle_acesso_p: ' || nr_controle_acesso_p || ';' ||
	'ds_cracha_p: ' || ds_cracha_p || ';' ||
	'dt_acao_p: ' || to_char(dt_acao_p, 'dd/mm/yyyy hh24:mi:ss') || ';' ||
	'ie_entrada_saida_p: ' || ie_entrada_saida_p || ';' ||
	'ie_entrada_saida_w: ' || ie_entrada_saida_w || ';' ||
	'ie_tipo_visita_w: ' || ie_tipo_visita_w || ';' ||
	'nr_atendimento_w: ' || nr_atendimento_w || ';' ||
	'dt_entrada_acomp_w: ' || dt_entrada_acomp_w || ';' ||
	'nr_seq_atend_visita_w: ' || nr_seq_atend_visita_w || ';' ||
	'nr_seq_controle_w: ' || nr_seq_controle_w || ';' ||
	'ie_controle_cracha_w: ' || ie_controle_cracha_w || ';' ||
    'ie_visita_acomp_p: ' || ie_visita_acomp_p || ';' ||
	'stack: ' || DBMS_UTILITY.FORMAT_CALL_STACK, stack_w, stack_info_w));
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_acao_visita_catraca ( nr_controle_acesso_p atendimento_visita.nr_controle_acesso%TYPE, dt_acao_p atendimento_visita.dt_saida_real%TYPE, ie_entrada_saida_p text, ds_bloqueio_p text, ds_evento_p text, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%TYPE, nm_usuario_p log_mov.nm_usuario%TYPE, ds_cracha_p acompanhante_paciente.nr_controle%TYPE default null, ie_visita_acomp_p text DEFAULT NULL) FROM PUBLIC;

