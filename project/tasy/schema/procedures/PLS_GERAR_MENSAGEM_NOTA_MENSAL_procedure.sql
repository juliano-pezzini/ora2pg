-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mensagem_nota_mensal ( nr_seq_mensalidade_p bigint, nr_seq_nota_fiscal_p bigint, ie_tipo_estipulante_p text, dt_mes_referencia_p timestamp, nr_seq_nat_juridica_p bigint, nr_seq_contrato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

		 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
Gerar a mensagem da nota fiscal da mensalidade 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
		 
ds_mensagem_w			text;
pos_fim_macro_w     	bigint;
ds_macro_w       	varchar(30);
nm_atributo_w      	varchar(50);
pos_macro_w       	bigint;
ds_resultado_macro_w		varchar(4000);
ds_texto_alterado_w		varchar(4000);
ds_observacao_w			varchar(4000);
i				bigint := 0;

C01 CURSOR FOR 
	SELECT	ds_mensagem 
	from	pls_mensagem_nota_fiscal a 
	where	dt_mes_referencia_p between coalesce(DT_INICIO_VIGENCIA,dt_mes_referencia_p) and coalesce(DT_FIM_VIGENCIA,dt_mes_referencia_p) 
	and	((nr_seq_nat_juridica	= nr_seq_nat_juridica_p) or (coalesce(nr_seq_nat_juridica::text, '') = '')) 
	and	((IE_TIPO_ESTIPULANTE = 'A') or (IE_TIPO_ESTIPULANTE = ie_tipo_estipulante_p)) 
	and	((nr_seq_contrato = nr_seq_contrato_p) or (coalesce(nr_seq_contrato::text, '') = '')) 
	and (exists (SELECT	1 
			from	pls_mensalidade_segurado x 
			where	x.nr_seq_mensalidade 	= nr_seq_mensalidade_p 
			and	x.nr_seq_plano 		= a.nr_seq_plano) or coalesce(nr_seq_plano::text, '') = '') 
	order by CASE WHEN coalesce(nr_seq_nat_juridica::text, '') = '' THEN -1  ELSE 1 END , 
		coalesce(nr_seq_contrato,0), 
		coalesce(nr_seq_plano,0);


BEGIN 
open C01;
loop 
fetch C01 into	 
	ds_mensagem_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;
	 
ds_texto_alterado_w	:= ds_mensagem_w;
i := 0;
WHILE(ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') and (i < 10) LOOP 
	begin 
	i := i + 1;
	 
	select replace(replace(ds_mensagem_w,'',' '),chr(13) || chr(10),' ') 
	into STRICT  ds_mensagem_w 
	;
	 
	select position('@' in ds_mensagem_w) 
	into STRICT  pos_macro_w 
	;
	 
	if (pos_macro_w > 0) then 
		select substr(ds_mensagem_w,pos_macro_w,length(ds_mensagem_w)) 
		into STRICT  ds_mensagem_w 
		;
		 
		select position(' ' in ds_mensagem_w) 
		into STRICT  pos_fim_macro_w 
		;
		 
		if (pos_fim_macro_w = 0) then 
			pos_fim_macro_w	:= length(ds_mensagem_w) + 1;
		end if;
		 
		select Elimina_Caracteres_Especiais(substr(ds_mensagem_w,1,pos_fim_macro_w -1)) 
		into STRICT  ds_macro_w 
		;
		 
		if ((coalesce(ds_macro_w,null) IS NOT NULL AND (coalesce(ds_macro_w,null))::text <> '')) then 
			begin 
			select nm_atributo 
			into STRICT  nm_atributo_w 
			from  pls_macro_mensalidade 
			where  upper(ds_macro) = upper(ds_macro_w);
			exception 
			when others then 
				nm_atributo_w := null;
			end;
			 
			if ((coalesce(nm_atributo_w,null) IS NOT NULL AND (coalesce(nm_atributo_w,null))::text <> '')) then 
				select	pls_obter_macro_mensalidade(nr_seq_mensalidade_p,nm_atributo_w,ds_macro_w) 
				into STRICT	ds_resultado_macro_w 
				;
				 
				select replace(ds_texto_alterado_w, ds_macro_w, ds_resultado_macro_w) 
				into STRICT  ds_texto_alterado_w 
				;	
			end if;
		end if;
		 
		select substr(ds_mensagem_w,pos_fim_macro_w, length(ds_mensagem_w)) 
		into STRICT  ds_mensagem_w 
		;
	else 
		ds_mensagem_w := '';
	end if;
	end;
end loop;
 
ds_observacao_w	:= ds_observacao_w || ds_texto_alterado_w || chr(13);	
 
ds_observacao_w	:= substr(ds_observacao_w,1,length(ds_observacao_w)-1);
 
update	nota_fiscal 
set	ds_observacao	= ds_observacao_w 
where	nr_sequencia	= nr_seq_nota_fiscal_p;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mensagem_nota_mensal ( nr_seq_mensalidade_p bigint, nr_seq_nota_fiscal_p bigint, ie_tipo_estipulante_p text, dt_mes_referencia_p timestamp, nr_seq_nat_juridica_p bigint, nr_seq_contrato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

