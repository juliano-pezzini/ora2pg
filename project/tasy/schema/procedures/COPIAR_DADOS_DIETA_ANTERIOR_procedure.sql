-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_dados_dieta_anterior ( nr_sequencia_p bigint, nm_usuario_p text, ie_opcao_p text, qt_horas_p bigint, cd_refeicao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


cd_pessoa_fisica_w			varchar(10);
dt_dieta_ref_w			timestamp;
dt_dieta_w			timestamp;
cd_refeicao_w			varchar(02);
cd_refeicao_ref_w		varchar(02);
ie_destino_dieta_w		varchar(02);
cd_setor_atendimento_w		integer;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
cd_dieta_w			bigint;
cd_dieta_atual_w		bigint	:= '';
ds_observacao_w			varchar(2000);
nr_sequencia_w			bigint;
nr_atendimento_w		bigint;
ds_tipo_dieta_w			varchar(10);
nr_posicao_dieta_w		smallint;
ie_continua_w			varchar(01);
ie_sai_loop_w			varchar(01);
ie_copiou_w			varchar(01);
cont_w				smallint;
ds_observacao_tec_w		varchar(2000);
nr_seq_superior_w		bigint;
qt_dieta_atend_w		bigint;
ie_existe_reg_data_w		varchar(1);

C010 CURSOR FOR
SELECT 	cd_dieta,
	ie_destino_dieta,
	ds_observacao,
	ds_observacao_tec
from 	mapa_Dieta
where 	cd_pessoa_fisica	= cd_pessoa_fisica_w
and 	cd_refeicao		= cd_refeicao_ref_w
and	dt_dieta		= dt_dieta_ref_w
and	nr_sequencia		<> nr_sequencia_p
and	ie_destino_dieta	= 'P'
and	(ds_observacao_tec IS NOT NULL AND ds_observacao_tec::text <> '')
and	coalesce(nr_seq_superior::text, '') = ''
group	by cd_dieta,
	ie_destino_dieta,
	ds_observacao,
	ds_observacao_tec;

/*
ie_opcao_p
OTA - Observação técnica atualização
OTM - Observação técnica mensagem
*/
BEGIN

ds_tipo_dieta_w		:= 'XRCJTABLMD';

if (coalesce(cd_refeicao_p,'0') <> '0') then
	ds_tipo_dieta_w	:= cd_refeicao_p;
end if;


/*Diária, Ceia, Jantar, Lanche Tarde, Almoço, Lanche Manhã, Desjejum, lactáRio */

select	cd_pessoa_fisica,
	cd_refeicao,
	dt_dieta,
	cd_setor_atendimento,
	cd_unidade_basica,
	cd_unidade_compl,
	nr_atendimento,
	nr_seq_superior
into STRICT	cd_pessoa_fisica_w,
	cd_refeicao_w,
	dt_dieta_w,
	cd_setor_atendimento_w,
	cd_unidade_basica_w,
	cd_unidade_compl_w,
	nr_atendimento_w,
	nr_seq_superior_w
from 	mapa_dieta
where 	nr_sequencia	= nr_sequencia_p;


ie_continua_w		:= 'N';
ie_sai_loop_w		:= 'N';
dt_dieta_ref_w		:= dt_dieta_w;
ie_copiou_w		:= 'N';
cont_w			:= 1;

begin
select	'S'
into STRICT	ie_existe_reg_data_w
from	mapa_dieta a
where	coalesce(a.nr_Seq_superior::text, '') = ''
and	a.dt_dieta = dt_dieta_ref_w
and	a.nr_sequencia <> nr_sequencia_p
and	a.cd_pessoa_fisica = cd_pessoa_fisica_w
--and	a.cd_refeicao <> cd_refeicao_w
and	(a.ds_observacao_tec IS NOT NULL AND a.ds_observacao_tec::text <> '')
and	substr(ds_tipo_dieta_w,position(cd_refeicao_w in ds_tipo_dieta_w),length(ds_tipo_dieta_w)) like('%'||a.cd_refeicao||'%')  LIMIT 1;
exception
when others then
	ie_existe_reg_data_w	:= 'N';
end;

if (ie_existe_reg_data_w <> 'S') then
	cd_refeicao_ref_w	:= 'X';
	ie_continua_w		:= 'S';

	select	max(a.dt_dieta)
	into STRICT	dt_dieta_ref_w
	from	mapa_dieta a
	where	coalesce(a.nr_seq_superior::text, '') = ''
	and	a.cd_pessoa_fisica = cd_pessoa_fisica_w
	and	a.nr_sequencia <> nr_sequencia_p
	and	a.dt_dieta < dt_dieta_ref_w
	and	(a.ds_observacao_tec IS NOT NULL AND a.ds_observacao_tec::text <> '');
end if;

while(ie_copiou_w <> 'S') and (cont_w <= 8) and (dt_dieta_ref_w IS NOT NULL AND dt_dieta_ref_w::text <> '')
loop
	for i in 1..length(ds_tipo_dieta_w)
	loop
		begin
		if (substr(ds_tipo_dieta_w,i,1) = cd_refeicao_w) then
			ie_continua_w	:= 'S';
		end if;

		if (ie_continua_w = 'S') then
			begin
			if (coalesce(cd_refeicao_p,'0') <> '0') then
				cd_refeicao_ref_w	:= substr(ds_tipo_dieta_w,i,1);
			else
				cd_refeicao_ref_w	:= substr(ds_tipo_dieta_w,i+1,1);
			end if;

			if (cd_refeicao_w = 'X') then                   --Edilson em 25/02/2004 OS 6394
				cd_refeicao_ref_w	:= 'X';
				dt_dieta_ref_w		:= dt_dieta_ref_w - 1;
			elsif (cd_refeicao_w = 'R') then
				cd_refeicao_ref_w	:= 'R';
			end if;

			OPEN C010;
			LOOP
			FETCH C010 INTO
					cd_dieta_w,
					ie_destino_dieta_w,
					ds_observacao_w,
					ds_observacao_tec_w;
			EXIT WHEN NOT FOUND; /* apply on c010 */
				begin
				ie_sai_loop_w		:= 'S';
				ie_copiou_w		:= 'S';

				if (coalesce(cd_dieta_atual_w::text, '') = '') then
					begin

					select	count(*)
					into STRICT	qt_dieta_atend_w
					from	mapa_dieta
					where	nr_atendimento	= nr_atendimento_w
					and	nr_sequencia	<>  nr_sequencia_p;

					if (qt_dieta_atend_w	= 0) then
						select	max(ds_observacao)
						into STRICT	ds_observacao_w
						from	mapa_dieta a
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w
						and	(ds_observacao IS NOT NULL AND ds_observacao::text <> '')
						and	nr_atendimento		<> nr_atendimento_w
						and	nr_sequencia	=
							(SELECT	max(nr_sequencia)
							from	mapa_dieta x
							where	x.nr_atendimento	= a.nr_atendimento
							and 	(x.ds_observacao IS NOT NULL AND x.ds_observacao::text <> ''));
					end if;

					if (ie_opcao_p = 'OTA') then
						update mapa_dieta
						set 	ds_observacao_tec	= ds_observacao_tec_w,
							nm_usuario	= nm_usuario_p,
							dt_atualizacao	= clock_timestamp()
						where	nr_sequencia	= nr_sequencia_p
						and	coalesce(dt_liberacao::text, '') = '';
						cd_dieta_atual_w	:= cd_dieta_w;
						commit;
					elsif (ie_opcao_p = 'OTM') then
						ds_retorno_p	:= substr(ds_observacao_tec_w,1,255);
					end if;
					end;

				end if;
				end;
			END LOOP;
			CLOSE C010;
			if (ie_sai_loop_w	= 'S') then
				exit;
			end if;
			end;
		end if;
		if (cd_refeicao_ref_w = 'D') then
			dt_dieta_ref_w		:= dt_dieta_ref_w - 1;
		end if;
		end;
	end loop;
	dt_dieta_ref_w		:= dt_dieta_ref_w - 1;
	cont_w := cont_w + 1;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_dados_dieta_anterior ( nr_sequencia_p bigint, nm_usuario_p text, ie_opcao_p text, qt_horas_p bigint, cd_refeicao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

