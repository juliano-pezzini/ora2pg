-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_conta_apac_unif ( nr_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_interno_conta_p INOUT bigint, dt_inicio_val_p timestamp, dt_fim_val_p timestamp) AS $body$
DECLARE


dt_acerto_conta_w		timestamp;
dt_atualizacao_w		timestamp	:= clock_timestamp();
varguiaatendimento_w	varchar(1);
cd_convenio_w		integer;		
cd_categoria_w		varchar(10);
dt_entrada_w		timestamp;
dt_alta_w			timestamp;
cd_autorizacao_conta_w	varchar(20)	:= null;
qt_dia_fim_conta_w		bigint;
dt_periodo_inicial_w	timestamp;
dt_periodo_final_w		timestamp;
nr_interno_conta_w		bigint;
dt_referencia_w		timestamp;
ie_periodo_inicial_seg_w	varchar(1) := 'N';
ie_gera_conta_mes_w		varchar(15) := 'N';
dt_inicio_comp_w		timestamp;
dt_fim_comp_w			timestamp;
			

BEGIN
dt_acerto_conta_w 	:= dt_atualizacao_w;

varguiaatendimento_w := obter_param_usuario(67, 210, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, varguiaatendimento_w);
ie_gera_conta_mes_w	:= coalesce(obter_valor_param_usuario(1124,135,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'N');

select	max(a.cd_convenio),
	max(a.cd_categoria),
	max(b.dt_entrada),
	max(b.dt_alta),
	max(a.nr_doc_convenio)
into STRICT	cd_convenio_w,
	cd_categoria_w,
	dt_entrada_w,
	dt_alta_w,
	cd_autorizacao_conta_w
from	atendimento_paciente b,
	atend_categoria_convenio a
where	a.nr_atendimento	= b.nr_atendimento
and	a.nr_seq_interno 	= obter_atecaco_atendimento(b.nr_atendimento)
and	a.nr_atendimento	= nr_atendimento_p;

if (ie_gera_conta_mes_w = 'N') then
	begin	
     	select	coalesce(max(Obter_Valor_Conv_Estab(cd_convenio, cd_estabelecimento_p, 'QT_DIA_FIM_CONTA')), 0)
      	into STRICT	qt_dia_fim_conta_w
	from	convenio
	where	cd_convenio	= cd_convenio_w;	
	
	select	coalesce(max(ie_periodo_inicial_seg),'N')
	into STRICT	ie_periodo_inicial_seg_w
	from	convenio_estabelecimento
	where	cd_convenio = cd_convenio_w
	and	cd_estabelecimento = cd_estabelecimento_p;

	if (qt_dia_fim_conta_w = 0) then
		dt_periodo_inicial_w 	:= dt_entrada_w;
	else
		select 	CASE WHEN ie_periodo_inicial_seg_w='S' THEN  coalesce(max(dt_periodo_final) + 1/86400, dt_entrada_w)  ELSE coalesce(max(dt_periodo_final), dt_entrada_w) END
		into STRICT	dt_periodo_inicial_w
		from 	conta_paciente
	        where 	nr_atendimento 		= nr_atendimento_p
		and	cd_convenio_parametro	= cd_convenio_w
		and	cd_estabelecimento	= cd_estabelecimento_p
		and	cd_categoria_parametro	= cd_categoria_w;
	end if;

	begin
	select	obter_data_final_conta(dt_periodo_inicial_w, dt_alta_w, cd_convenio_w, cd_estabelecimento_p)
	into STRICT	dt_periodo_final_w
	;
	exception
	when others then
		begin
		dt_periodo_final_w	:= dt_periodo_inicial_w + 365;
		end;
	end;
		
	end;
else
	begin
	
	if (dt_inicio_val_p < dt_entrada_w) then
		dt_inicio_comp_w := dt_entrada_w;
	else
		dt_inicio_comp_w := (dt_inicio_val_p + 1/86400);
	end if;	

	dt_fim_comp_w := fim_dia(dt_fim_val_p);
	
	begin
	select 	coalesce(max(dt_periodo_final) + 1/86400, dt_entrada_w)
	into STRICT	dt_periodo_inicial_w
	from 	conta_paciente
	where 	nr_atendimento 		= nr_atendimento_p
	and	cd_convenio_parametro	= cd_convenio_w
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	cd_categoria_parametro	= cd_categoria_w
	and	establishment_timezone_utils.startofmonth(dt_periodo_inicial)  between establishment_timezone_utils.startofmonth(dt_inicio_comp_w) and dt_fim_comp_w;
	exception
	when others then
		dt_periodo_inicial_w := dt_entrada_w;
	end;
	
	if (coalesce(dt_periodo_inicial_w::text, '') = '') then
		dt_periodo_inicial_w := dt_inicio_comp_w;
	end if;
	
	dt_periodo_final_w := fim_dia(last_day(dt_fim_comp_w));
	
	end;
end if;

begin
select	dt_ref_valida
into STRICT	dt_referencia_w
from	convenio
where	cd_convenio = cd_convenio_w;
exception
when others then
	begin
	dt_referencia_w  	:= dt_periodo_final_w;
	end;
end;
/*if	(dt_periodo_final_w < sysdate) then
	dt_periodo_final_w:= sysdate + 365;
end if;*/
select	nextval('conta_paciente_seq')
into STRICT	nr_interno_conta_w
;

insert into conta_paciente(nr_atendimento,
      	dt_acerto_conta,
	ie_status_acerto,
	dt_periodo_inicial,
	dt_periodo_final,
	dt_atualizacao,
	nm_usuario,
	cd_convenio_parametro,
	cd_categoria_parametro,
	dt_mesano_referencia,
	dt_mesano_contabil,
	cd_convenio_calculo,
	cd_categoria_calculo,
	nr_interno_conta,
	cd_estabelecimento,
	nr_protocolo,
	vl_conta,
	vl_desconto,
	nr_seq_pq_protocolo,
	cd_autorizacao)
values (nr_atendimento_p,
    	dt_acerto_conta_w,
    	1,
    	dt_periodo_inicial_w,
    	dt_periodo_final_w,
    	dt_atualizacao_w,
    	'Tasy',
    	cd_convenio_w,
    	cd_categoria_w,
    	dt_referencia_w,
	dt_referencia_w,
	cd_convenio_w,
	cd_categoria_w,
	nr_interno_conta_w,
	cd_estabelecimento_p,
	'0', 0, 0, null,
	CASE WHEN varguiaatendimento_w='S' THEN cd_autorizacao_conta_w  ELSE null END );

CALL gerar_conta_paciente_guia(nr_interno_conta_w, 1);

nr_interno_conta_p	:= nr_interno_conta_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_conta_apac_unif ( nr_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_interno_conta_p INOUT bigint, dt_inicio_val_p timestamp, dt_fim_val_p timestamp) FROM PUBLIC;

