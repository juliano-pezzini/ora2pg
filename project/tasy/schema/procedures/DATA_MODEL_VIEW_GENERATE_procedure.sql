-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE data_model_view_generate ( data_model_id_p data_model.nr_sequencia%type) AS $body$
DECLARE


ds_sql varchar(4000);
ds_sql_full text;
ds_sql_w text;
HR_TIME_INTERVALO_w	data_model.HR_TIME_INTERVALO%type;
object_name_w data_model.object_name%type;
ie_first_loop boolean := true;
ds_tablespace_w		varchar(255);
view_exists_w	varchar(1) := 'N';
qt_reg_w  bigint;

c_columns CURSOR FOR
SELECT distinct table_name,
 nm_table_alias,
 atribute_name,
 alias_name
from data_model_columns
where data_model_id = data_model_id_p;

c_tables CURSOR FOR
SELECT distinct table_name,
 nm_table_alias
from data_model_columns
where data_model_id = data_model_id_p;

c_conditions CURSOR FOR
SELECT ds_condition,
    (select b.nm_table_alias
    from data_model_columns b
    where b.table_name = a.nm_tabela
    and b.data_model_id = data_model_id_p  LIMIT 1) nm_table_alias,
    ds_value,
    nr_valor,
    to_char(dt_valor, 'dd/mm_yyyy hh24:mi:ss') dt_valor,
    nm_atributo
from data_model_condition a
where nr_seq_data_model = data_model_id_p;

c_integrities CURSOR FOR
SELECT (select z.nm_table_alias from data_model_columns z where z.table_name = a.nm_table and z.data_model_id = data_model_id_p  LIMIT 1) nm_table_alias,
    c.nm_atributo,
    a.nm_fk,
    (select x.nm_table_alias from data_model_columns x where x.data_model_id = data_model_id_p and x.table_name = (select y.nm_tabela_referencia from  integridade_referencial y where y.nm_integridade_referencial = a.nm_fk)  LIMIT 1) nm_table_alias_fk,
    d.nm_atributo nm_atributo_fk
from data_model_integrit a, integridade_referencial b, integridade_atributo c, Indice_Atributo d, indice e
where a.nr_seq_data_model = data_model_id_p
and b.nm_integridade_referencial = c.nm_integridade_referencial
and c.ie_sequencia_criacao = d.nr_sequencia
and e.nm_tabela     = b.nm_tabela_referencia
and e.nm_indice     = d.nm_indice
and e.nm_tabela     = d.nm_tabela
and e.ie_tipo       = 'PK'
and b.nm_integridade_referencial = a.nm_fk
order by a.nr_sequencia asc;

c_sql CURSOR FOR
SELECT a.ds_sql,
	a.HR_TIME_INTERVALO
FROM data_model a
WHERE a.nr_sequencia = data_model_id_p;
fail_to_extend_tablespace exception;

BEGIN
	dbms_lob.CREATETEMPORARY(ds_sql_full, true);
	
	begin
	select	count(*)
	into STRICT	qt_reg_w
	from 	user_tablespaces
	where 	upper(tablespace_name) = 'TASY_DATAMODEL'  LIMIT 1;
	exception
	when no_data_found then
		qt_reg_w := 0;
	when 	others then
		object_name_w := null;
	end;
	
	ds_tablespace_w := null;
	if (qt_reg_w > 0) then
		ds_tablespace_w := 'tablespace TASY_DATAMODEL ';
	end if;
	
	begin
  select 	max(a.object_name)
  into STRICT 	object_name_w
  from 	data_model a
  where 	a.nr_sequencia = data_model_id_p;
	exception
	when 	no_data_found then
    object_name_w := null;	
	when 	others then
		object_name_w := null;
	end;

  begin
  qt_reg_w := 0;
	select 	count(*)
	into STRICT 	qt_reg_w
	from 	data_model a,
		user_objects b
	where 	a.nr_sequencia = data_model_id_p
	and	upper(a.object_name) = upper(b.object_name)
	and	b.object_type 	= 'MATERIALIZED VIEW';
  exception
  when  no_data_found then
    qt_reg_w := 0;
  when  others then
    qt_reg_w := 0;
  end;
		
	if (qt_reg_w > 0) then	
		ds_sql := 'drop materialized view ' || object_name_w;
		
		$if dbms_db_version.version >= 11 $then
			EXECUTE ds_sql;
		$end
		
	end if;
	
	open c_sql;
    FETCH c_sql into ds_sql_w, HR_TIME_INTERVALO_w;
	ds_sql := 'create materialized view ' || object_name_w || ' ' ||
		ds_tablespace_w ||
		'build immediate ' ||
		'refresh complete start with sysdate next sysdate + ' || coalesce(HR_TIME_INTERVALO_w, 60) || '/60/24 ' ||
		'as ';
		if coalesce(ds_sql_w::text, '') = '' then
		ds_sql := ds_sql || ' select ';
	dbms_lob.WRITEAPPEND(ds_sql_full, length(ds_sql), ds_sql);
	ds_sql := null;

	ie_first_loop := true;
	for c_columns_w in c_columns loop
		if (not ie_first_loop) then
			ds_sql := ', ';
		end if;
		ds_sql := ds_sql || c_columns_w.nm_table_alias || '.' || c_columns_w.atribute_name || ' as ' || c_columns_w.alias_name;
		dbms_lob.WRITEAPPEND(ds_sql_full, length(ds_sql), ds_sql);
		ds_sql := null;
		ie_first_loop := false;
	end loop;

	ds_sql := ' from ';
	dbms_lob.WRITEAPPEND(ds_sql_full, length(ds_sql), ds_sql);
	ds_sql := null;

	ie_first_loop := true;
	for c_tables_w in c_tables loop
		if (not ie_first_loop) then
		    ds_sql := ', ';
		end if;
		ds_sql := ds_sql || c_tables_w.table_name || ' ' || c_tables_w.nm_table_alias;
		dbms_lob.WRITEAPPEND(ds_sql_full, length(ds_sql), ds_sql);
		ds_sql := null;
		ie_first_loop := false;
	end loop;

	ie_first_loop := true;
	for c_conditions_w in c_conditions loop
		if (ie_first_loop) then
			ds_sql := ' where ';
		else
			ds_sql := ' and ';
		end if;
		ds_sql := ds_sql || c_conditions_w.nm_table_alias || '.' || c_conditions_w.nm_atributo || ' ' || c_conditions_w.ds_condition || ' ';
		if (UPPER(c_conditions_w.ds_condition) not in ('IS NULL', 'IS NOT NULL')) then
			if (c_conditions_w.ds_value IS NOT NULL AND c_conditions_w.ds_value::text <> '') then
				ds_sql := ds_sql || '''' || c_conditions_w.ds_value || '''';
			elsif (c_conditions_w.nr_valor IS NOT NULL AND c_conditions_w.nr_valor::text <> '') then
				ds_sql := ds_sql || c_conditions_w.nr_valor;
			elsif (c_conditions_w.dt_valor IS NOT NULL AND c_conditions_w.dt_valor::text <> '') then
				ds_sql := ds_sql || 'to_date(''' || c_conditions_w.dt_valor || ''', ''dd/mm/yyyy hh24:mi:ss'')';
			else
				ds_sql := ds_sql || 'null';
			end if;
		end if;

		dbms_lob.WRITEAPPEND(ds_sql_full, length(ds_sql), ds_sql);
		ds_sql := null;
		ie_first_loop := false;
	end loop;

	for c_integrities_w in c_integrities loop
		if (ie_first_loop) then
			ds_sql := ' where ';
		else
			ds_sql := ' and ';
		end if;
		ds_sql := ds_sql || c_integrities_w.nm_table_alias || '.' || c_integrities_w.nm_atributo || ' = ' || c_integrities_w.nm_table_alias_fk || '.' || c_integrities_w.nm_atributo_fk || ' ';
		
		dbms_lob.WRITEAPPEND(ds_sql_full, length(ds_sql), ds_sql);
		ds_sql := null;
		ie_first_loop := false;
	end loop;

	$if dbms_db_version.version >= 11 $then
    begin
    EXECUTE ds_sql_full;
    exception
      when fail_to_extend_tablespace then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(1211034);
      when others then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(sqlerrm);
    end;
	$end

	dbms_lob.FREETEMPORARY(ds_sql_full);
	
	    else
        ds_sql := ds_sql || ds_sql_w;
        $if dbms_db_version.version >= 11 $then
        EXECUTE ds_sql;
        $end
    end if;
    close c_sql;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE data_model_view_generate ( data_model_id_p data_model.nr_sequencia%type) FROM PUBLIC;

