-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_dados_exp_benef_guia ( nr_seq_lote_p pls_conta_medica_ted.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


dt_inicio_ref_w			pls_conta_medica_ted.dt_inicio_ref%type;
dt_fim_ref_w			pls_conta_medica_ted.dt_fim_ref%type;
nr_seq_protocolo_w		pls_conta_medica_ted.nr_seq_protocolo%type;
ie_tipo_contratacao_w		pls_conta_medica_ted.ie_tipo_contratacao%type;
nr_seq_lote_sip_w			pls_conta_medica_ted.nr_seq_lote_sip%type;
nr_seq_exp_guia_w			pls_exp_guia_benef.nr_sequencia%type;
cd_prestador_pgto_w		pls_exp_guia_benef_item.cd_prestador_pagto%type;
nm_prestador_pgto_w		pls_exp_guia_benef_item.ds_prestador_pagto%type;
cd_especialidade_w		especialidade_medica.cd_especialidade%type;
ds_especialidade_w		especialidade_medica.ds_especialidade%type;
qt_adic_w			integer := 0;
vl_coparticipacao_w		pls_conta_coparticipacao.vl_coparticipacao%type;
tx_coparticipacao_w		pls_conta_coparticipacao.tx_coparticipacao%type;

-- Contas medicas				
C02 CURSOR(nr_seq_lote_pc			pls_conta_medica_ted.nr_sequencia%type,
		dt_inicio_ref_pc			pls_conta_medica_ted.dt_inicio_ref%type,
		dt_fim_ref_pc			pls_conta_medica_ted.dt_fim_ref%type,
		nr_seq_protocolo_pc		pls_protocolo_conta.nr_sequencia%type,
		ie_tipo_contratacao_pc		pls_conta_medica_ted.ie_tipo_contratacao%type) FOR
	SELECT	x.nr_sequencia,
		x.ie_tipo_guia,
		coalesce(x.cd_guia,x.cd_guia_ok) cd_guia,
		coalesce(x.cd_guia_referencia,coalesce(x.cd_guia,x.cd_guia_ok)) cd_guia_referencia,
		x.dt_atendimento_referencia,
		substr(coalesce(pls_obter_dados_segurado(x.nr_seq_segurado,'C'),x.cd_usuario_plano_imp),1,30) cd_usuario_plano,
		substr(coalesce(pls_obter_dados_segurado(x.nr_seq_segurado,'N'),x.nm_segurado_imp),1,255) nm_segurado,
		x.ie_carater_internacao,
		coalesce(x.dt_emissao,x.dt_atendimento_referencia) dt_emissao,
		x.nr_seq_segurado,
		substr(coalesce(pls_obter_dados_prestador(x.nr_seq_prestador,'N'),obter_nome_medico(x.cd_medico_solicitante,'N')),1,255) ds_prestador_solicitante,
		substr(pls_obter_dados_segurado(x.nr_seq_segurado,'P'),1,255) ds_plano,
		(SELECT	max(w.cd_doenca)
		from	pls_diagnostico_conta	w
		where	w.nr_seq_conta		= x.nr_sequencia
		and (w.ie_classificacao	= 'P' or coalesce(w.ie_classificacao::text, '') = '')) cd_doenca,
		x.nr_seq_prestador_exec,
		x.cd_medico_executor,
		p.ie_origem_protocolo,
		p.nr_seq_congenere
	from	pls_segurado		s,
		pls_conta		x,
		pls_protocolo_conta	p
	where	p.nr_sequencia		= x.nr_seq_protocolo
	and	x.nr_seq_segurado	= s.nr_sequencia
	and	x.dt_atendimento_referencia between dt_inicio_ref_pc and dt_fim_ref_pc
	and (x.nr_seq_protocolo = nr_seq_protocolo_pc 	or coalesce(nr_seq_protocolo_pc::text, '') = '')
	and	(exists	(select	1
			from	pls_conta_medica_resumo	r
			where	x.nr_sequencia	= r.nr_seq_conta
			and (r.ie_tipo_item <> 'I'	or coalesce(r.ie_tipo_item::text, '') = '')
			and	((r.ie_situacao != 'I')	or (coalesce(r.ie_situacao::text, '') = ''))) or (x.nr_seq_nota_cobranca IS NOT NULL AND x.nr_seq_nota_cobranca::text <> ''))
	and	exists (select	1
			from	pls_plano	a
			where	a.nr_sequencia		= pls_obter_produto_benef(s.nr_sequencia,x.dt_atendimento_referencia)
			--where	a.nr_sequencia		= s.nr_seq_plano
			and (a.ie_tipo_contratacao	= ie_tipo_contratacao_pc or coalesce(ie_tipo_contratacao_pc::text, '') = ''))
	and	not exists (select	1
				from	pls_exp_guia_benef w
				where	w.nr_seq_conta	= x.nr_sequencia
				and	w.nr_seq_lote	= nr_seq_lote_pc)
	and	(exists	(select	1
			from	pls_conta_medica_ted_adic	d
			where	d.nr_seq_lote		= nr_seq_lote_pc
			and (x.ie_tipo_guia 	= d.ie_tipo_guia	or coalesce(d.ie_tipo_guia::text, '') = '')
			and (x.nr_sequencia 	= d.nr_seq_conta 	or coalesce(d.nr_seq_conta::text, '') = '')
			and (x.nr_seq_protocolo	= d.nr_seq_protocolo 	or coalesce(d.nr_seq_protocolo::text, '') = '')
			and (x.cd_guia		= d.cd_guia		or coalesce(d.cd_guia::text, '') = '')
			and	(exists	(select	1
					from	pls_conta_medica_resumo	r
					where	x.nr_sequencia	= r.nr_seq_conta
					and (r.nr_seq_prestador_pgto = d.nr_seq_prestador_pgto	or coalesce(d.nr_seq_prestador_pgto::text, '') = '')
					and (r.ie_tipo_item <> 'I'	or coalesce(r.ie_tipo_item::text, '') = '')
					and	((r.ie_situacao != 'I')	or (coalesce(r.ie_situacao::text, '') = ''))) or (x.nr_seq_nota_cobranca IS NOT NULL AND x.nr_seq_nota_cobranca::text <> '')))
	or	qt_adic_w = 0)
	order by x.ie_tipo_guia;
	
-- Itens (Procedimentos/Materiais)
C03 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type,
		ie_origem_protocolo_pc	pls_protocolo_conta.ie_origem_protocolo%type) FOR
	SELECT	i.nr_sequencia nr_seq_conta_proc,
		null nr_seq_conta_mat,
		CASE WHEN i.qt_procedimento=0 THEN i.qt_procedimento_imp  ELSE i.qt_procedimento END  qt_item,
		substr(coalesce(obter_descricao_procedimento(i.cd_procedimento,i.ie_origem_proced),i.ds_procedimento_imp),1,255) ds_item,
		obter_somente_numero(coalesce(i.cd_procedimento,i.cd_procedimento_imp)) cd_item_cbhpm,
		null cd_item_amb,
		i.nr_seq_conta,
		p.nr_seq_prestador_pgto,
		coalesce(p.vl_liberado,0) vl_pagamento,
		coalesce(i.vl_beneficiario,0) vl_recebimento
	from	pls_conta_proc		i,
		pls_conta_medica_resumo	p
	where	i.nr_sequencia	= p.nr_seq_conta_proc
	and	i.nr_seq_conta	= nr_seq_conta_pc
	and (p.ie_tipo_item <> 'I'	or coalesce(p.ie_tipo_item::text, '') = '')
	and	((p.ie_situacao != 'I')	or (coalesce(p.ie_situacao::text, '') = ''))
	and	ie_origem_protocolo_pc not in ('A','Z')
	
union

	SELECT	null nr_seq_conta_proc,
		i.nr_sequencia nr_seq_conta_mat,
		CASE WHEN i.qt_material=0 THEN i.qt_material_imp  ELSE i.qt_material END  qt_item,
		substr(coalesce(pls_obter_dados_material(i.nr_seq_material,'DS'),i.ds_material_imp),1,255) ds_item,
		null cd_item_cbhpm,
		obter_somente_numero(coalesce(substr(pls_obter_dados_material(i.nr_seq_material,'CO'),1,15),i.cd_material_imp)) cd_item_amb,
		i.nr_seq_conta,
		p.nr_seq_prestador_pgto,
		coalesce(p.vl_liberado,0) vl_pagamento,
		coalesce(i.vl_beneficiario,0) vl_recebimento
	from	pls_conta_mat		i,
		pls_conta_medica_resumo	p
	where	i.nr_sequencia	= p.nr_seq_conta_mat
	and	i.nr_seq_conta	= nr_seq_conta_pc
	and (p.ie_tipo_item <> 'I'	or coalesce(p.ie_tipo_item::text, '') = '')
	and	((p.ie_situacao != 'I')	or (coalesce(p.ie_situacao::text, '') = ''))
	and	ie_origem_protocolo_pc not in ('A','Z')
	
union all

	select	i.nr_sequencia nr_seq_conta_proc,
		null nr_seq_conta_mat,
		CASE WHEN i.qt_procedimento=0 THEN i.qt_procedimento_imp  ELSE i.qt_procedimento END  qt_item,
		substr(coalesce(obter_descricao_procedimento(i.cd_procedimento,i.ie_origem_proced),i.ds_procedimento_imp),1,255) ds_item,
		obter_somente_numero(coalesce(i.cd_procedimento,i.cd_procedimento_imp)) cd_item_cbhpm,
		null cd_item_amb,
		i.nr_seq_conta,
		null nr_seq_prestador_pgto,
		coalesce(i.vl_liberado,0) vl_pagamento,
		coalesce(i.vl_beneficiario,0) vl_recebimento
	from	pls_conta_proc		i
	where	i.nr_seq_conta	= nr_seq_conta_pc
	and	ie_origem_protocolo_pc in ('A','Z')
	
union

	select	null nr_seq_conta_proc,
		i.nr_sequencia nr_seq_conta_mat,
		CASE WHEN i.qt_material=0 THEN i.qt_material_imp  ELSE i.qt_material END  qt_item,
		substr(coalesce(pls_obter_dados_material(i.nr_seq_material,'DS'),i.ds_material_imp),1,255) ds_item,
		null cd_item_cbhpm,
		obter_somente_numero(coalesce(substr(pls_obter_dados_material(i.nr_seq_material,'CO'),1,15),i.cd_material_imp)) cd_item_amb,
		i.nr_seq_conta,
		null nr_seq_prestador_pgto,
		coalesce(i.vl_liberado,0) vl_pagamento,
		coalesce(i.vl_beneficiario,0) vl_recebimento
	from	pls_conta_mat		i
	where	i.nr_seq_conta	= nr_seq_conta_pc
	and	ie_origem_protocolo_pc in ('A','Z');
						
BEGIN
delete	FROM pls_exp_guia_benef_item
where	nr_seq_exp_guia in (	SELECT	nr_sequencia
				from	pls_exp_guia_benef
				where	nr_seq_lote	= nr_seq_lote_p);

delete	FROM pls_exp_guia_benef
where	nr_seq_lote	= nr_seq_lote_p;

select	count(1)
into STRICT	qt_adic_w
from	pls_conta_medica_ted_adic
where	nr_seq_lote	= nr_seq_lote_p;

select	trunc(max(dt_inicio_ref)),
	max(dt_fim_ref),
	max(nr_seq_protocolo),
	max(ie_tipo_contratacao),
	max(nr_seq_lote_sip)
into STRICT	dt_inicio_ref_w,
	dt_fim_ref_w,
	nr_seq_protocolo_w,
	ie_tipo_contratacao_w,
	nr_seq_lote_sip_w
from	pls_conta_medica_ted
where	nr_sequencia	= nr_seq_lote_p;

dt_inicio_ref_w := trunc(dt_inicio_ref_w);
dt_fim_ref_w	:= trunc(last_day(coalesce(dt_fim_ref_w,to_date('01/01/2300','dd/mm/yyyy'))));
	
-- Contas medicas
for r_C02_w in C02(nr_seq_lote_p,dt_inicio_ref_w,dt_fim_ref_w,nr_seq_protocolo_w,ie_tipo_contratacao_w) loop
	
	cd_especialidade_w := null;
	ds_especialidade_w := null;
	
	if (r_C02_w.cd_medico_executor IS NOT NULL AND r_C02_w.cd_medico_executor::text <> '') then
		select	max(cd_especialidade)
		into STRICT	cd_especialidade_w
		from	medico_especialidade
		where	cd_pessoa_fisica	= r_c02_w.cd_medico_executor
		and	nr_seq_prioridade	= (	SELECT	min(nr_seq_prioridade)
							from	medico_especialidade
							where	cd_pessoa_fisica	= r_c02_w.cd_medico_executor);	
	
	elsif (r_C02_w.nr_seq_prestador_exec IS NOT NULL AND r_C02_w.nr_seq_prestador_exec::text <> '') then
		select	max(cd_especialidade)
		into STRICT	cd_especialidade_w
		from	pls_prestador_med_espec
		where	ie_especialidade_princ = 'S'
		and	clock_timestamp() between trunc(coalesce(dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(dt_fim_vigencia, clock_timestamp()));
	
		if (coalesce(cd_especialidade_w::text, '') = '') then
			select	max(cd_especialidade)
			into STRICT	cd_especialidade_w
			from	pls_prestador_med_espec
			where	ie_especialidade_princ = 'S';
		end if;
		
		if (coalesce(cd_especialidade_w::text, '') = '') then
			select	max(cd_especialidade)
			into STRICT	cd_especialidade_w
			from	pls_prestador_med_espec
			where	clock_timestamp() between trunc(coalesce(dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(dt_fim_vigencia, clock_timestamp()));
		end if;		
	end if;
	
	if (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') then
		ds_especialidade_w := upper(obter_desc_espec_medica(cd_especialidade_w));
	end if;
	
	insert into pls_exp_guia_benef(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_lote,
		ie_tipo_guia,
		cd_guia,
		cd_guia_aux,
		dt_atendimento,
		cd_doenca,
		cd_usuario_plano,
		nm_beneficiario,
		ie_carater_internacao,
		cd_especialidade,
		ds_especialidade,
		dt_emissao,
		nr_seq_segurado,
		ds_plano,
		ie_tipo_contrato,
		vl_tot_pagamento,
		vl_tot_recebimento,
		ds_prestador_solicitante,
		nr_seq_conta)
	values (nextval('pls_exp_guia_benef_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_lote_p,
		r_C02_w.ie_tipo_guia,
		r_C02_w.cd_guia,
		r_C02_w.cd_guia_referencia,
		r_C02_w.dt_atendimento_referencia,
		r_C02_w.cd_doenca,
		r_C02_w.cd_usuario_plano,
		upper(r_C02_w.nm_segurado),
		r_C02_w.ie_carater_internacao,
		cd_especialidade_w,
		ds_especialidade_w,
		r_C02_w.dt_emissao,
		r_C02_w.nr_seq_segurado,
		upper(r_C02_w.ds_plano),
		'PP',
		0,
		0,
		upper(r_C02_w.ds_prestador_solicitante),
		r_C02_w.nr_sequencia) returning nr_sequencia into nr_seq_exp_guia_w;
		
	-- Itens (Procedimentos/Materiais)
	for r_C03_w in C03(r_C02_w.nr_sequencia,r_C02_w.ie_origem_protocolo) loop
		
		cd_prestador_pgto_w := null;
		nm_prestador_pgto_w := null;			
		if (r_C03_w.nr_seq_prestador_pgto IS NOT NULL AND r_C03_w.nr_seq_prestador_pgto::text <> '') then
			select	cd_prestador,
				substr(pls_obter_dados_prestador(nr_sequencia,'N'),1,255)
			into STRICT	cd_prestador_pgto_w,
				nm_prestador_pgto_w
			from	pls_prestador
			where	nr_sequencia	= r_C03_w.nr_seq_prestador_pgto;
		elsif (r_C02_w.nr_seq_congenere IS NOT NULL AND r_C02_w.nr_seq_congenere::text <> '') then
			select	cd_cooperativa,
				substr(pls_obter_nome_congenere(nr_sequencia),1,255)
			into STRICT	cd_prestador_pgto_w,
				nm_prestador_pgto_w
			from	pls_congenere
			where	nr_sequencia	= r_C02_w.nr_seq_congenere;
			
		end if;
		
		if (r_c03_w.nr_seq_conta_proc IS NOT NULL AND r_c03_w.nr_seq_conta_proc::text <> '') then
			select	max(vl_coparticipacao),
				max(tx_coparticipacao)
			into STRICT	vl_coparticipacao_w,
				tx_coparticipacao_w
			from	pls_conta_coparticipacao
			where	nr_seq_conta_proc = r_c03_w.nr_seq_conta_proc;
		elsif (r_c03_w.nr_seq_conta_mat is  not null) then
			select	max(vl_coparticipacao),
				max(tx_coparticipacao)
			into STRICT	vl_coparticipacao_w,
				tx_coparticipacao_w
			from	pls_conta_coparticipacao
			where	nr_seq_conta_proc = r_c03_w.nr_seq_conta_mat;
		end if;
		
		
		insert into pls_exp_guia_benef_item(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_exp_guia,
			cd_item_amb,
			cd_item_cbhpm,
			ds_item,
			qt_item,
			cd_prestador_pagto,
			ds_prestador_pagto,
			qt_acomodacao,
			vl_pagamento,
			vl_recebimento,
			ie_cobranca,
			pr_fator,
			nr_seq_conta_proc,
			nr_seq_conta_mat)
		values (nextval('pls_exp_guia_benef_item_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_exp_guia_w,
			r_C03_w.cd_item_amb,
			r_C03_w.cd_item_cbhpm,
			upper(r_C03_w.ds_item),
			r_C03_w.qt_item,
			cd_prestador_pgto_w,
			upper(nm_prestador_pgto_w),
			1,
			r_C03_w.vl_pagamento,
			coalesce(vl_coparticipacao_w, r_C03_w.vl_recebimento),
			'FAT-FM',
			coalesce(tx_coparticipacao_w, 0),
			r_C03_w.nr_seq_conta_proc,
			r_C03_w.nr_seq_conta_mat);
			
		update	pls_exp_guia_benef
		set	vl_tot_pagamento	= coalesce(vl_tot_pagamento,0) + coalesce(r_c03_w.vl_pagamento,0),
			vl_tot_recebimento	= coalesce(vl_tot_recebimento,0) + coalesce(vl_coparticipacao_w, r_C03_w.vl_recebimento)
		where	nr_sequencia		= nr_seq_exp_guia_w;
	end loop;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_dados_exp_benef_guia ( nr_seq_lote_p pls_conta_medica_ted.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

