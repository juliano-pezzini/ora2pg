-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_65 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE



/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Validar se CBO do participante foi informado
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Alterações:
------------------------------------------------------------------------------------------------------------------
Alteração:
Motivo:
------------------------------------------------------------------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
bind_sql_valor_w		sql_pck.t_dado_bind;
cursor_w			sql_pck.t_cursor;
ds_sql_w			varchar(4000);

nr_seq_selecao_w	dbms_sql.number_table;
ds_observacao_w		dbms_sql.varchar2_table;
ie_valido_w		dbms_sql.varchar2_table;

C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.ie_val_cbo_informado,
		a.ie_valida_cbo_valido,
		a.ie_valida_versao_tiss
	from	pls_oc_cta_val_cbo_partic a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

BEGIN

if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '')  then
	for r_C01_w in C01(dados_regra_p.nr_sequencia) loop
		if (r_C01_w.ie_val_cbo_informado = 'S' or r_C01_w.ie_valida_cbo_valido = 'S' or r_C01_w.ie_valida_versao_tiss = 'S')	then

			CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

			ds_sql_w := 	'	select 		x.nr_sequencia, ' 			|| pls_tipos_ocor_pck.enter_w ||
					'			x.ie_valido ie_valido, '		|| pls_tipos_ocor_pck.enter_w ||
					'			null ds_observacao '			|| pls_tipos_ocor_pck.enter_w ||
					'	from	pls_oc_cta_selecao_ocor_v	x, ' 		|| pls_tipos_ocor_pck.enter_w ||
					'	pls_proc_participante_v		a '			|| pls_tipos_ocor_pck.enter_w ||
					'	where	x.ie_valido		= ''S'' '		|| pls_tipos_ocor_pck.enter_w ||
					'	and	x.nr_id_transacao	= :nr_id_transacao_pc '	|| pls_tipos_ocor_pck.enter_w ||
					'	and	a.nr_seq_conta_proc	= x.nr_seq_conta_proc ';

			bind_sql_valor_w := sql_pck.bind_variable(':nr_id_transacao_pc', nr_id_transacao_p, bind_sql_valor_w);

			if (dados_regra_p.ie_evento = 'IMP') then
				if (r_C01_w.ie_val_cbo_informado = 'S') then
					ds_sql_w := ds_sql_w ||
					'	and	a.cd_cbo_saude_imp is null '			|| pls_tipos_ocor_pck.enter_w;
				end if;
				if (r_C01_w.ie_valida_cbo_valido = 'S') then
					ds_sql_w := ds_sql_w ||
					'	and not exists(	select z.nr_sequencia '			|| pls_tipos_ocor_pck.enter_w ||
					'			from	cbo_saude z '			|| pls_tipos_ocor_pck.enter_w ||
					'			where	z.cd_cbo = a.cd_cbo_saude_imp ' || pls_tipos_ocor_pck.enter_w ||
					'			and	((z.ie_situacao = ''A'') or (z.ie_situacao is null)))';
				end if;

			else
				if (r_C01_w.ie_val_cbo_informado = 'S') then
					ds_sql_w := ds_sql_w ||
					'	and	a.nr_seq_cbo_saude is null '			|| pls_tipos_ocor_pck.enter_w;
				end if;
				if (r_C01_w.ie_valida_cbo_valido = 'S') then
					ds_sql_w := ds_sql_w ||
					'	and not exists(	select z.nr_sequencia '			|| pls_tipos_ocor_pck.enter_w ||
					'		from	cbo_saude z '				|| pls_tipos_ocor_pck.enter_w ||
					'		where	z.nr_sequencia = a.nr_seq_cbo_saude '	|| pls_tipos_ocor_pck.enter_w ||
					'		and	((z.ie_situacao = ''A'') or (z.ie_situacao is null)))';
				end if;

			end if;
			--é usado o campo a.nr_seq_cbo_saude para funcionar tanto para quando o evento for imp quando normal
			--é feito o if pois a validação deve funcinar sozinha conforme explicado no schift F8 do campo, pois tanto  ie_val_cbo_informado quanto ie_valida_cbo_valido são impeditivas para validar a versão TISS
			if ( r_C01_w.ie_valida_versao_tiss = 'S') and (r_C01_w.ie_val_cbo_informado = 'N')   and (r_C01_w.ie_valida_cbo_valido = 'N')   then
				ds_sql_w := ds_sql_w ||
					'	and not exists (	select	1					' || pls_tipos_ocor_pck.enter_w ||
					'				from	cbo_saude_tiss x			' || pls_tipos_ocor_pck.enter_w ||
					'				where	x.ie_versao = a.cd_versao_tiss		' || pls_tipos_ocor_pck.enter_w ||
					'				and	x.nr_seq_cbo_saude = a.nr_seq_cbo_saude	' || pls_tipos_ocor_pck.enter_w ||
					'	)';
			end if;

			begin
				bind_sql_valor_w := sql_pck.executa_sql_cursor(ds_sql_w, bind_sql_valor_w);
				nr_seq_selecao_w	:= pls_util_cta_pck.num_table_vazia_w;
				ie_valido_w		:= pls_util_cta_pck.vchr2_table_vazia_w;
				ds_observacao_w		:= pls_util_cta_pck.vchr2_table_vazia_w;

				loop
					fetch 	cursor_w bulk collect
					into	nr_seq_selecao_w,ie_valido_w,ds_observacao_w
					limit pls_util_cta_pck.qt_registro_transacao_w;
					exit when nr_seq_selecao_w.count = 0;

					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	nr_seq_selecao_w, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', ds_observacao_w, ie_valido_w, nm_usuario_p);

				end loop;

				close cursor_w;

			exception
			when others then
				if (cursor_w%isopen) then
					close cursor_w;
				end if;
				CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(dados_regra_p, ds_sql_w, nr_id_transacao_p, nm_usuario_p);
			end;

			CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);

		end if;

	end loop;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_65 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

