-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cp_create_goal ( ds_unique_value_p cp_goal.ds_unique_value%type, ds_display_name_p cp_goal.ds_display_name%type, ds_obs_item_label_part1 cp_goal.ds_obs_item_label_part1%type, ds_obs_item_label_part2 cp_goal.ds_obs_item_label_part2%type, ds_obs_item_display_name cp_goal.ds_obs_item_display_name%type, ie_data_type_p cp_goal.ie_data_type%type, ie_progressive_p cp_goal.ie_progressive%type, ie_language_p cp_goal.ie_language%type, ds_version_p cp_goal.ds_version%type, ie_active_p cp_goal.ie_active%type, nm_usuario_p cp_goal.nm_usuario%type, nr_sequencia_p INOUT cp_goal.nr_sequencia%type ) AS $body$
DECLARE


ds_version_w			cp_goal.ds_version%type;
ie_type_goal_w			cp_goal.ie_type_goal%type;
si_record_changed_w		cp_goal.si_record_changed%type;
ds_display_name_w		cp_goal.ds_display_name%type;


BEGIN

begin
	select	nr_sequencia,
			ds_version,
			ds_display_name
	into STRICT	nr_sequencia_p,
			ds_version_w,
			ds_display_name_w
	from	cp_goal
	where	nr_sequencia = (
		SELECT	max(nr_sequencia)
		from	cp_goal
		where	ds_unique_value = ds_unique_value_p
	);
exception
	when no_data_found then
	begin
		nr_sequencia_p		:= null;
		ds_version_w		:= null;
		ds_display_name_w	:= null;
	end;
end;

select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'Y' END
into STRICT	si_record_changed_w
from	cp_goal
where	(ds_version IS NOT NULL AND ds_version::text <> '')
and		ds_version <> ds_version_p;

if (ds_version_w IS NOT NULL AND ds_version_w::text <> '') and (si_record_changed_w = 'Y') then

	select	CASE WHEN count(1)=0 THEN  'Y'  ELSE 'N' END
	into STRICT	si_record_changed_w
	from	cp_goal
	where	ds_unique_value = ds_unique_value_p;
	
	if (si_record_changed_w = 'N') then
		select	CASE WHEN ds_display_name_p=coalesce(ds_display_name_w, ds_display_name_p) THEN  'N'  ELSE 'Y' END
		into STRICT	si_record_changed_w
		;
	end if;

end if;

if (coalesce(nr_sequencia_p::text, '') = '' or ds_version_w <> ds_version_p) then
	select	nextval('cp_goal_seq')
	into STRICT	nr_sequencia_p
	;

	if (position('ED' in ds_unique_value_p) = 1) then
		ie_type_goal_w	:= 'E';
	elsif (position('GIP' in ds_unique_value_p) = 1) then
		ie_type_goal_w	:= 'C';
	end if;

	insert into cp_goal(
		nr_sequencia,
		ds_unique_value,
		ds_display_name,
		ds_obs_item_label_part1,
		ds_obs_item_label_part2,
		ds_obs_item_display_name,
		ie_data_type,
		ie_progressive,
		ie_language,
		ds_version,
		ie_active,
		ie_origin,
		ie_type_goal,
		si_import_status,
		ie_situacao,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		si_record_changed
	) values (
		nr_sequencia_p,
		ds_unique_value_p,
		ds_display_name_p,
		ds_obs_item_label_part1,
		ds_obs_item_label_part2,
		ds_obs_item_display_name,
		ie_data_type_p,
		ie_progressive_p,
		ie_language_p,
		ds_version_p,
		ie_active_p,
		'E', -- This procedure is currently being only used to import goals from Elsevier
		ie_type_goal_w,
		'SP',
		'I',
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		coalesce(si_record_changed_w, 'N')
	);
	
	update	cp_goal
	set		si_record_changed = 'N'
	where 	ds_version = ds_version_w;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cp_create_goal ( ds_unique_value_p cp_goal.ds_unique_value%type, ds_display_name_p cp_goal.ds_display_name%type, ds_obs_item_label_part1 cp_goal.ds_obs_item_label_part1%type, ds_obs_item_label_part2 cp_goal.ds_obs_item_label_part2%type, ds_obs_item_display_name cp_goal.ds_obs_item_display_name%type, ie_data_type_p cp_goal.ie_data_type%type, ie_progressive_p cp_goal.ie_progressive%type, ie_language_p cp_goal.ie_language%type, ds_version_p cp_goal.ds_version%type, ie_active_p cp_goal.ie_active%type, nm_usuario_p cp_goal.nm_usuario%type, nr_sequencia_p INOUT cp_goal.nr_sequencia%type ) FROM PUBLIC;

