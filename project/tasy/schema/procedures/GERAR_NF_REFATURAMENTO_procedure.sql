-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_refaturamento ( nr_seq_lote_p lote_audit_hist.nr_sequencia%type, nm_usuario_p nota_fiscal.nm_usuario%type, cd_natureza_operacao_p nota_fiscal.cd_natureza_operacao%type, cd_operacao_nf_p nota_fiscal.cd_operacao_nf%type, cd_serie_nf_p serie_nota_fiscal.cd_serie_nf%type, cd_condicao_pagamento_p nota_fiscal.cd_condicao_pagamento%type, cd_procedimento_p nota_fiscal_item.cd_procedimento%type, ie_origem_proced_p nota_fiscal_item.ie_origem_proced%type, vl_recurso_p nota_fiscal.vl_total_nota%type, vl_glosa_aceita_p titulo_receber_liq.vl_recebido%type, nr_sequencia_p INOUT nota_fiscal.nr_sequencia%type, nr_nota_fiscal_p INOUT nota_fiscal.nr_nota_fiscal%type ) AS $body$
DECLARE


cd_convenio_w                   convenio.cd_convenio%type;

nr_seq_retorno_w                convenio_retorno.nr_sequencia%type;
nr_seq_protocolo_w              convenio_retorno.nr_seq_protocolo%type;

nr_sequencia_w                  nota_fiscal.nr_sequencia%type;
nr_nota_fiscal_w                nota_fiscal.nr_nota_fiscal%type;
cd_estabelecimento_w            nota_fiscal.cd_estabelecimento%type;
cd_cgc_w                        nota_fiscal.cd_cgc%type;
ie_tipo_nota_w                  nota_fiscal.ie_tipo_nota%type;
cd_cgc_emitente_w               nota_fiscal.cd_cgc_emitente%type;
max_nr_numero_nf_refat_w        nota_fiscal.nr_nota_fiscal%type;
max_nr_seq_nf_refat_w           nota_fiscal.nr_sequencia%type;
nr_seq_nf_ref_w                 nota_fiscal.nr_sequencia_ref%type;

ds_where_clause_w               nota_fiscal_item.ds_observacao%type;
ds_observacao_w                 nota_fiscal_item.ds_observacao%type;
nr_sequencia_nf_w               nota_fiscal_item.nr_sequencia_nf%type;
nr_seq_conta_financeira_w       nota_fiscal_item.nr_seq_conta_financ%type := null;

nr_protocolo_w                  protocolo_convenio.nr_protocolo%type;

ie_has_credit_nf_w              varchar(1);
qt_nota_fiscal_refat_w          smallint;


BEGIN

if (cd_natureza_operacao_p = 0 or
	cd_operacao_nf_p        = 0 or
	coalesce(cd_serie_nf_p::text, '') = '' or
	cd_condicao_pagamento_p = 0 or
	cd_procedimento_p       = 0 or
	ie_origem_proced_p      = 0) then
	-- Erro nao foi configurada uma regra para gerar a nf
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1130853);
else

	if (vl_recurso_p = 0) then
		-- O valor do recurso nao pode ser zero.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1171168);
	end if;

	select  count(a.nr_sequencia),
		max(a.nr_sequencia)
	into STRICT    qt_nota_fiscal_refat_w,
		max_nr_seq_nf_refat_w
	from    nota_fiscal a
	where   a.nr_seq_lote_audit = nr_seq_lote_p
	and     a.ie_situacao = '1' -- Ativa
	and     a.ie_tipo_fatura = 'R';

	if (qt_nota_fiscal_refat_w > 0) then
		select  a.nr_nota_fiscal
		into STRICT    max_nr_numero_nf_refat_w
		from    nota_fiscal a
		where   a.nr_sequencia = max_nr_seq_nf_refat_w;
		
		-- Nota de refaturamento #@NR_NUMERO#@ ja gerada para este registro.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1171486, 'NR_NUMERO=' || max_nr_numero_nf_refat_w);
	end if;

	begin
		select  max(a.cd_convenio),
			max(a.cd_estabelecimento),
			max(c.nr_seq_retorno),
			max(d.nr_seq_protocolo)
		into STRICT    cd_convenio_w,
			cd_estabelecimento_w,
			nr_seq_retorno_w,
			nr_seq_protocolo_w
		from    lote_auditoria a,
			lote_audit_hist b,
			lote_audit_hist_guia c,
			convenio_retorno d
		where   b.nr_sequencia = nr_seq_lote_p
		and     b.nr_seq_lote_audit = a.nr_sequencia
		and     c.nr_seq_retorno = d.nr_sequencia
		and     c.nr_seq_lote_hist = b.nr_sequencia;
	exception when no_data_found or too_many_rows then
		-- Codigo do convenio invalido ou inexistente no sistema.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1130867);
	end;
	
	if (nr_seq_protocolo_w > 0) then
		select  max(b.nr_sequencia),
			min(a.nr_protocolo)
		into STRICT    nr_seq_nf_ref_w, 
			nr_protocolo_w
		from    protocolo_convenio a, 
			nota_fiscal b
		where   a.nr_seq_protocolo = nr_seq_protocolo_w
		and     ((b.ie_tipo_fatura = 'R') or (coalesce(b.ie_tipo_fatura::text, '') = ''))
		and     a.nr_seq_protocolo = b.nr_seq_protocolo;
		
		if (coalesce(nr_protocolo_w::text, '') = '') then
			-- Nao encontrada nota fiscal vinculada ao protocolo numero #@NR_PROTOCOLO#@.
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1206277, 'NR_PROTOCOLO=' || nr_protocolo_w);
		end if;
	else
		-- Nao encontrado protocolo vinculado ao retorno convenio #@NR_SEQ_RETORNO#@.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1206278, 'NR_SEQ_RETORNO=' || nr_seq_retorno_w);
	end if;

	select  a.cd_cgc
	into STRICT    cd_cgc_w
	from    convenio a
	where   a.cd_convenio = cd_convenio_w;

	if (coalesce(cd_cgc_w::text, '') = '') then
		-- CNPJ do convenio incorreto.
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1130864);
	else
		select  a.cd_cgc
		into STRICT    cd_cgc_emitente_w
		from    estabelecimento a
		where   a.cd_estabelecimento = cd_estabelecimento_w;

		nr_sequencia_nf_w       := 1;
		ie_tipo_nota_w          := 'SD';

		select  nextval('nota_fiscal_seq')
		into STRICT    nr_sequencia_w
		;

		-- Pega o ultimo numero de NF daquela serie para aquele estabelecimento + 1
		select ((max(t.nr_ultima_nf))::numeric  + 1)
		into STRICT    nr_nota_fiscal_w
		from    serie_nota_fiscal t
		where   t.cd_serie_nf           = to_char(cd_serie_nf_p)
		and     t.cd_estabelecimento    = cd_estabelecimento_w;

		ds_where_clause_w := substr(wheb_mensagem_pck.get_Texto(1130875, 'NR_SEQ_LOTE_P=' || nr_seq_lote_p || ';'), 1, 255);
		ds_where_clause_w := substr(ds_where_clause_w, 1, INSTR(ds_where_clause_w, '. ' , 1, 1));
		ds_observacao_w := substr(wheb_mensagem_pck.get_Texto(1134501, 'NR_SEQ_LOTE_P=' || nr_seq_lote_p || ';VL_RECURSO_P=' || vl_recurso_p), 1, 255);

		insert into nota_fiscal(
			nr_sequencia,
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			cd_operacao_nf,
			dt_emissao,
			dt_entrada_saida,
			ie_acao_nf,
			ie_emissao_nf,
			ie_tipo_frete,
			vl_mercadoria,
			vl_total_nota,
			qt_peso_bruto,
			qt_peso_liquido,
			dt_atualizacao,
			nm_usuario,
			cd_condicao_pagamento,
			cd_cgc,
			vl_ipi,
			vl_descontos,
			vl_frete,
			vl_seguro,
			vl_despesa_acessoria,
			cd_natureza_operacao,
			vl_desconto_rateio,
			ie_situacao,
			nr_lote_contabil,
			ie_tipo_nota,
			ds_observacao,
			ie_tipo_fatura,
			nr_seq_lote_audit,
			nr_seq_protocolo,
			nr_sequencia_ref
		) values (
			nr_sequencia_w,
			cd_estabelecimento_w,
			cd_cgc_emitente_w,
			cd_serie_nf_p,
			nr_nota_fiscal_w,
			nr_sequencia_nf_w,
			cd_operacao_nf_p,
			clock_timestamp(),
			clock_timestamp(),
			'1',
			'0',
			0,
			0,
			vl_recurso_p,
			0,
			0,
			clock_timestamp(),
			nm_usuario_p,
			cd_condicao_pagamento_p,
			cd_cgc_w,
			0,
			0,
			0,
			0,
			0,
			cd_natureza_operacao_p,
			0,
			'1',
			0,
			ie_tipo_nota_w,
			ds_observacao_w,
			'R',
			nr_seq_lote_p,
			nr_seq_protocolo_w,
			nr_seq_nf_ref_w
		);

		CALL gerar_historico_nota_fiscal(
			nr_seq_nota_p   => nr_sequencia_w,
			nm_usuario_p    => nm_usuario_p,
			cd_evento_p     => '3',
			ds_historico_p  => ds_observacao_w
		);

		nr_seq_conta_financ_p   => nr_seq_conta_financeira_w := obter_conta_financeira(
			ie_entrada_saida_p      => 'S', cd_estabelecimento_p    => cd_estabelecimento_w, cd_material_p           => null, cd_procedimento_p       => cd_procedimento_p, ie_origem_proced_p      => ie_origem_proced_p, cd_setor_atend_p        => null, cd_convenio_p           => cd_convenio_w, cd_cgc_p                => cd_cgc_emitente_w, cd_centro_custo_p       => null, nr_seq_conta_financ_p   => nr_seq_conta_financeira_w, ie_clinica_p            => null, cd_operacao_nf_p        => cd_operacao_nf_p, ie_tipo_pessoa_p        => null, ie_tipo_atendimento_p   => null, cd_categoria_convenio_p => null, nr_seq_proj_recurso_p   => null, nr_seq_produto_p        => null, cd_pessoa_fisica_p      => null, ie_origem_tit_rec_p     => null, ie_origem_tit_pag_p     => null, nr_seq_classe_tit_rec_p => null, nr_seq_classe_tit_pag_p => null, cd_local_estoque_p      => null, nr_seq_trans_fin_p      => null, ie_vago2_p              => null, ie_vago3_p              => null, ie_tipo_titulo_pagar_p  => null, ie_tipo_titulo_receber_p => null, cd_moeda_p              => null
		);

		if (nr_seq_conta_financeira_w = 0) then
			nr_seq_conta_financeira_w := null;
		end if;

		insert into nota_fiscal_item(
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			nr_item_nf,
			cd_natureza_operacao,
			qt_item_nf,
			vl_unitario_item_nf,
			vl_total_item_nf,
			dt_atualizacao,
			nm_usuario,
			vl_frete,
			vl_desconto,
			vl_despesa_acessoria,
			cd_procedimento,
			ie_origem_proced,
			ds_observacao,
			vl_desconto_rateio,
			vl_seguro,
			nr_sequencia,
			vl_liquido,
			nr_seq_conta_financ
		) values (
			cd_estabelecimento_w,
			cd_cgc_emitente_w,
			cd_serie_nf_p,
			nr_nota_fiscal_w,
			nr_sequencia_nf_w,
			1,
			cd_natureza_operacao_p,
			1,
			vl_recurso_p,
			vl_recurso_p,
			clock_timestamp(),
			nm_usuario_p,
			0,
			0,
			0,
			cd_procedimento_p,
			ie_origem_proced_p,
			ds_observacao_w,
			0,
			0,
			nr_sequencia_w,
			vl_recurso_p,
			nr_seq_conta_financeira_w
		);
		
		CALL atualizar_serie_nf(
			nr_sequencia_p  => nr_sequencia_w,
			nm_usuario_p    => nm_usuario_p
		);

		CALL atualiza_total_nota_fiscal(
			nr_sequencia_p  => nr_sequencia_w,
			nm_usuario_p    => nm_usuario_p
		);

		CALL atualizar_nota_fiscal(
			nr_sequencia_p  => nr_sequencia_w,
			ie_acao_p       => 'I',
			nm_usuario_p    => nm_usuario_p,
			ie_tipo_nota_p  => 1
		);

		select  nr_sequencia,
			nr_nota_fiscal
		into STRICT    nr_sequencia_p,
			nr_nota_fiscal_p
		from    nota_fiscal
		where   nr_sequencia = nr_sequencia_w;

		commit;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_refaturamento ( nr_seq_lote_p lote_audit_hist.nr_sequencia%type, nm_usuario_p nota_fiscal.nm_usuario%type, cd_natureza_operacao_p nota_fiscal.cd_natureza_operacao%type, cd_operacao_nf_p nota_fiscal.cd_operacao_nf%type, cd_serie_nf_p serie_nota_fiscal.cd_serie_nf%type, cd_condicao_pagamento_p nota_fiscal.cd_condicao_pagamento%type, cd_procedimento_p nota_fiscal_item.cd_procedimento%type, ie_origem_proced_p nota_fiscal_item.ie_origem_proced%type, vl_recurso_p nota_fiscal.vl_total_nota%type, vl_glosa_aceita_p titulo_receber_liq.vl_recebido%type, nr_sequencia_p INOUT nota_fiscal.nr_sequencia%type, nr_nota_fiscal_p INOUT nota_fiscal.nr_nota_fiscal%type ) FROM PUBLIC;

