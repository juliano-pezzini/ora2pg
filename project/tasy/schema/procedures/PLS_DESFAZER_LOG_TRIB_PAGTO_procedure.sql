-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_desfazer_log_trib_pagto ( nr_seq_lote_pagto_p pls_lote_pagamento.nr_sequencia%type, nr_seq_pp_lote_p pls_pp_lote.nr_sequencia%type default null) AS $body$
DECLARE


tb_nr_sequencia_w	pls_util_cta_pck.t_number_table;

c01 CURSOR(	nr_seq_lote_pagto_pc	pls_lote_pagamento.nr_sequencia%type,
		nr_seq_pp_lote_pc	pls_pp_lote.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from 	pls_regra_calculo_irpf_log
	where	nr_seq_lote_pgto = nr_seq_lote_pagto_pc
	and	coalesce(nr_seq_pp_lote_pc::text, '') = ''
	
union all

	SELECT	nr_sequencia
	from 	pls_regra_calculo_irpf_log
	where	nr_seq_pp_lote = nr_seq_pp_lote_pc
	and	coalesce(nr_seq_lote_pagto_pc::text, '') = '';

c02 CURSOR(	nr_seq_lote_pagto_pc	pls_lote_pagamento.nr_sequencia%type,
		nr_seq_pp_lote_pc	pls_pp_lote.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia
	from	pls_trib_conta_pagar_log b,
		pls_tributo_log a
	where	a.nr_seq_lote_pgto = nr_seq_lote_pagto_pc
	and	b.nr_seq_tributo_log = a.nr_sequencia
	and	coalesce(nr_seq_pp_lote_pc::text, '') = ''
	
union all

	SELECT	a.nr_sequencia
	from	pls_trib_conta_pagar_log a
	where	nr_seq_pp_lote = nr_seq_pp_lote_pc
	and	coalesce(nr_seq_lote_pagto_pc::text, '') = '';

c03 CURSOR(	nr_seq_lote_pagto_pc	pls_lote_pagamento.nr_sequencia%type,
		nr_seq_pp_lote_pc	pls_pp_lote.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	pls_tributo_log
	where	nr_seq_lote_pgto = nr_seq_lote_pagto_pc
	and	coalesce(nr_seq_pp_lote_pc::text, '') = ''
	
union all

	SELECT	nr_sequencia
	from	pls_tributo_log
	where	nr_seq_pp_lote = nr_seq_pp_lote_pc
	and	coalesce(nr_seq_lote_pagto_pc::text, '') = '';


BEGIN
-- um dos par√¢metros deve ser informado
if (nr_seq_lote_pagto_p IS NOT NULL AND nr_seq_lote_pagto_p::text <> '') or (nr_seq_pp_lote_p IS NOT NULL AND nr_seq_pp_lote_p::text <> '') then

	open c01(nr_seq_lote_pagto_p, nr_seq_pp_lote_p);
	loop
		fetch c01 bulk collect into tb_nr_sequencia_w
		limit pls_util_pck.qt_registro_transacao_w;
		exit when tb_nr_sequencia_w.count = 0;

		forall i in tb_nr_sequencia_w.first..tb_nr_sequencia_w.last
			delete
			from	pls_regra_calculo_irpf_log
			where	nr_sequencia = tb_nr_sequencia_w(i);

		commit;
	end loop;
	close c01;

	open c02(nr_seq_lote_pagto_p, nr_seq_pp_lote_p);
	loop
		fetch c02 bulk collect into tb_nr_sequencia_w
		limit pls_util_pck.qt_registro_transacao_w;
		exit when tb_nr_sequencia_w.count = 0;

		forall i in tb_nr_sequencia_w.first..tb_nr_sequencia_w.last
			delete
			from	pls_trib_conta_pagar_log
			where	nr_sequencia = tb_nr_sequencia_w(i);

		commit;
	end loop;
	close c02;

	open c03(nr_seq_lote_pagto_p, nr_seq_pp_lote_p);
	loop
		fetch c03 bulk collect into tb_nr_sequencia_w
		limit pls_util_pck.qt_registro_transacao_w;
		exit when tb_nr_sequencia_w.count = 0;

		forall i in tb_nr_sequencia_w.first..tb_nr_sequencia_w.last
			delete
			from	pls_tributo_log
			where	nr_sequencia = tb_nr_sequencia_w(i);

		commit;
	end loop;
	close c03;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_desfazer_log_trib_pagto ( nr_seq_lote_pagto_p pls_lote_pagamento.nr_sequencia%type, nr_seq_pp_lote_p pls_pp_lote.nr_sequencia%type default null) FROM PUBLIC;

