-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (ds		varchar(32760));


CREATE OR REPLACE PROCEDURE tasy_criar_trigger_log_update () AS $body$
DECLARE

type Vetor is table of  campos index by integer;
ds_script_vetor			Vetor;

nm_tabela_w 		varchar(50);
nm_atributo_w		varchar(50);
ie_log_update_w		varchar(1);
qt_w				bigint;
ds_script_trigger_w	text;
ds_chave_simples_proc_w	 varchar(100);
ds_chave_composta_proc_w varchar(1000);
ds_aspa_w		varchar(1) :=chr(39);
ds_pipe_w		varchar(2) :=chr(124)||chr(124);
ie_tipo_atributo_w	varchar(20);
ie_define_masc_hr_w varchar(2);
ds_valor_old_w		varchar(100);
ds_valor_new_w		varchar(100);
nm_campo_usuario_w varchar(30);
nr_seq_log_w		log_atualizacao_erro.nr_seq_log%type;
msg_log_w		log_atualizacao_erro.ds_erro%type;
c001			integer;
c002			integer;
c003			integer;
ds_comando_c001_w	varchar(4000) := '' ||
		' SELECT	DISTINCT a.nm_tabela' ||
		' FROM		tabela_atributo a'||
		' WHERE		ie_tipo_atributo in (''DATE'',''NUMBER'',''VARCHAR2'')'||
		' AND		(a.ie_log_update IN (''S'',''D'') '||
		' AND 		(NOT EXISTS (SELECT	1 FROM user_triggers b WHERE b.table_name = a.nm_tabela AND b.trigger_name = SUBSTR(a.nm_tabela,1,27)||''_TP'')) OR' ||
        '            EXISTS (SELECT	1 FROM user_objects c WHERE c.object_name = SUBSTR(a.nm_tabela,1,27)||''_TP'' and c.last_ddl_time < a.dt_atualizacao)) ' ||
		' AND		EXISTS (SELECT 1 FROM user_tab_columns utc WHERE utc.table_name = a.nm_tabela and utc.column_name = a.nm_atributo) ';
ds_comando_c002_w	varchar(4000) := ''||
		' select	a.nm_atributo'||
		' from		indice_atributo a,'||
		'		indice b'||
		' where		a.nm_indice = b.nm_indice'||
		' and		a.nm_tabela = b.nm_tabela'||
		' and		a.nm_tabela = :nm_tabela'||
		' and		b.ie_tipo = ''PK'''||
		' order		by a.nr_sequencia';
	
ds_comando_c003_w	varchar(4000) := ''||
		' select	nm_atributo,'||
		'		ie_log_update,'||
		'		ie_tipo_atributo ,'||
		'   upper(substr(ds_mascara,1,2)) ie_define_masc_hr'||
		' from		tabela_atributo a'||
		' where		a.nm_tabela = :nm_tabela'||
		' and		a.ie_tipo_atributo in (''DATE'',''NUMBER'',''VARCHAR2'')'||
		' and		a.ie_log_update in (''S'',''D'')'||
        ' and       exists (SELECT 1 FROM user_tab_columns utc WHERE utc.table_name = a.nm_tabela and utc.column_name = a.nm_atributo) ' ||
		' order by 	ie_log_update';
retorno_w		integer;


BEGIN
C001 := DBMS_SQL.OPEN_CURSOR;
DBMS_SQL.PARSE(C001, ds_comando_c001_w, dbms_sql.Native);
DBMS_SQL.DEFINE_COLUMN(C001, 1, nm_tabela_w,50);
retorno_w := DBMS_SQL.execute(c001);
while( DBMS_SQL.FETCH_ROWS(C001) > 0 ) loop
	begin
		qt_w := 0;
		DBMS_SQL.COLUMN_VALUE(C001, 1, nm_tabela_w);

		qt_w := obter_valor_dinamico_bv('select count(*) from tabela_atributo where nm_tabela = :nm_tabela and nm_atributo = ''NM_USUARIO''', 'NM_TABELA='||nm_tabela_w, qt_w);
		
		if (qt_w > 0 ) then
			ds_script_vetor[1].ds := '';
			ds_script_vetor[2].ds := '';
			ds_script_vetor[3].ds := '';
			ds_script_vetor[4].ds := '';
			ds_script_vetor[5].ds := '';
			ds_chave_composta_proc_w := null;
			ds_chave_simples_proc_w := null;
			ds_script_trigger_w :=  ' create or replace trigger '|| substr(nm_tabela_w,1,27) ||'_tp '||
						' after update on ' || nm_tabela_w ||
						' FOR EACH ROW '||
						' DECLARE'||
						' nr_seq_w number(10);' ||
						' ds_s_w   varchar2(50);' ||
						' ds_c_w   varchar2(500);'||
						' ds_w	   varchar2(500);'||
						' ie_log_w varchar2(1);'||
						' begin'||
						' begin';
						
			
			C002 := DBMS_SQL.OPEN_CURSOR;
			DBMS_SQL.PARSE(C002, ds_comando_c002_w, dbms_sql.Native);
			DBMS_SQL.DEFINE_COLUMN(C002, 1, nm_atributo_w,50);
			DBMS_SQL.BIND_VARIABLE(C002, 'NM_TABELA', nm_tabela_w);
			retorno_w := DBMS_SQL.execute(c002);
			
			while( DBMS_SQL.FETCH_ROWS(C002) > 0 ) loop
				begin
				DBMS_SQL.COLUMN_VALUE(C002, 1, nm_atributo_w);
				if (coalesce(ds_chave_composta_proc_w::text, '') = '' ) then
					ds_chave_simples_proc_w  := ' ds_s_w := to_char(:old.'||nm_atributo_w||');';
					ds_chave_composta_proc_w := ' ds_c_w:= '||ds_aspa_w|| nm_atributo_w || '='||ds_aspa_w||ds_pipe_w||'to_char(:old.'||nm_atributo_w||')';
				else
					ds_chave_simples_proc_w := null;
					ds_chave_composta_proc_w := ds_chave_composta_proc_w || ds_pipe_w ||ds_aspa_w || '#@#@' || nm_atributo_w || '='||ds_aspa_w||ds_pipe_w||'to_char(:old.'||nm_atributo_w||')';
				end if;
				end;
			end loop;
			DBMS_SQL.CLOSE_CURSOR(C002);
			if (ds_chave_simples_proc_w IS NOT NULL AND ds_chave_simples_proc_w::text <> '') then
				ds_chave_composta_proc_w := ' ds_c_w:=null;';
			else
				ds_chave_simples_proc_w  := ' ds_s_w := null;';
				if (ds_chave_composta_proc_w IS NOT NULL AND ds_chave_composta_proc_w::text <> '') then
					ds_chave_composta_proc_w := ds_chave_composta_proc_w || ';';
				end if;
			end if;
			ds_script_trigger_w := ds_script_trigger_w || ds_chave_simples_proc_w || ' ' || ds_chave_composta_proc_w;
			
			C003 := DBMS_SQL.OPEN_CURSOR;
			DBMS_SQL.PARSE(C003, ds_comando_c003_w, dbms_sql.Native);
			DBMS_SQL.DEFINE_COLUMN(C003, 1, nm_atributo_w,50);
			DBMS_SQL.DEFINE_COLUMN(C003, 2, ie_log_update_w,1);
			DBMS_SQL.DEFINE_COLUMN(C003, 3, ie_tipo_atributo_w,20);
                                                DBMS_SQL.DEFINE_COLUMN(C003, 4, ie_define_masc_hr_w, 2);
			DBMS_SQL.BIND_VARIABLE(C003, 'NM_TABELA', nm_tabela_w);
			retorno_w := DBMS_SQL.execute(c003);
			
			while( DBMS_SQL.FETCH_ROWS(C003) > 0 ) loop
				begin
				DBMS_SQL.COLUMN_VALUE(C003, 1, nm_atributo_w);
				DBMS_SQL.COLUMN_VALUE(C003, 2, ie_log_update_w);
				DBMS_SQL.COLUMN_VALUE(C003, 3, ie_tipo_atributo_w);
				DBMS_SQL.COLUMN_VALUE(C003, 4, ie_define_masc_hr_w);
				if ( ie_log_update_w = 'D' ) then
					ds_script_trigger_w := ds_script_trigger_w ||
						' ds_w:=substr(:new.'||nm_atributo_w||',1,500);';
				end if;
				if (ie_tipo_atributo_w = 'DATE') then
				 if ie_define_masc_hr_w = 'HH' then
				    ds_valor_old_w:='to_char(:old.'||nm_atributo_w||','||ds_aspa_w||'hh24:mi:ss'||ds_aspa_w||')';
					ds_valor_new_w:='to_char(:new.'||nm_atributo_w||','||ds_aspa_w||'hh24:mi:ss'||ds_aspa_w||')';
				 else
					ds_valor_old_w:='to_char(:old.'||nm_atributo_w||','||ds_aspa_w||'dd/mm/yyyy hh24:mi:ss'||ds_aspa_w||')';
					ds_valor_new_w:='to_char(:new.'||nm_atributo_w||','||ds_aspa_w||'dd/mm/yyyy hh24:mi:ss'||ds_aspa_w||')';
			 	 end if;	
				else
					ds_valor_old_w:='substr(:old.'||nm_atributo_w||',1,4000)';
					ds_valor_new_w:='substr(:new.'||nm_atributo_w||',1,4000)';
				end if;

        nm_campo_usuario_w := 'nm_usuario';
        if (nm_tabela_w = 'USUARIO') then
          nm_campo_usuario_w := 'nm_usuario_atual';
        end if;
        
        ds_script_trigger_w := ds_script_trigger_w ||
				 	 'gravar_log_alteracao('||ds_valor_old_w||','||ds_valor_new_w||',:new.'||nm_campo_usuario_w||',nr_seq_w,' || ds_aspa_w || nm_atributo_w || ds_aspa_w || ',ie_log_w,ds_w,'||ds_aspa_w||nm_tabela_w||ds_aspa_w||',ds_s_w,ds_c_w); ';
  			end;
			end loop;
			DBMS_SQL.CLOSE_CURSOR(C003);
			ds_script_trigger_w := ds_script_trigger_w || ' ' || ' exception when others then ds_w:= '||ds_aspa_w || '1' || ds_aspa_w||'; end; end;';
			ds_script_vetor[1].ds := substr(ds_script_trigger_w,1,32000);
			ds_script_vetor[2].ds := substr(ds_script_trigger_w,32001,32000);
			ds_script_vetor[3].ds := substr(ds_script_trigger_w,64001,32000);
			ds_script_vetor[4].ds := substr(ds_script_trigger_w,96001,32000);
			ds_script_vetor[5].ds := substr(ds_script_trigger_w,128001,32000);
			begin
			EXECUTE ds_script_vetor[1].ds || ds_script_vetor[2].ds || ds_script_vetor[3].ds || ds_script_vetor[4].ds || ds_script_vetor[5].ds;
			EXCEPTION
				when others then
				begin
					msg_log_w := 'Erro ao criar a trigger_log_update (Trigger _TP). ' || SQLERRM;

					select  max(nr_sequencia)
					into STRICT	nr_seq_log_w
					from 	log_atualizacao;
					
					INSERT INTO LOG_ATUALIZACAO_ERRO(NR_SEQUENCIA, NR_SEQ_LOG, DS_COMANDO, DS_ERRO, DT_ATUALIZACAO, NM_USUARIO) VALUES (nextval('log_atualizacao_erro_seq'), nr_seq_log_w, substr(ds_script_trigger_w,1,1900), substr(msg_log_w,1,1900), clock_timestamp(), 'Tasy');
				end;
			end;
		end if;
	end;
end loop;
DBMS_SQL.CLOSE_CURSOR(C001);
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_criar_trigger_log_update () FROM PUBLIC;

