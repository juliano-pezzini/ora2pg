-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE processa_pessoa_fisica_aux_jst (IE_EVENTO_P text, CD_PESSOA_FISICA_P bigint, NR_SEQUENCIA_SUP_P bigint) AS $body$
DECLARE

  PESSOA_FISICA_AUX_W PESSOA_FISICA_AUX%ROWTYPE;
  IS_INSERT_W         boolean := FALSE;
  ALT_ATRIB_W         boolean := FALSE;
  UP_OTHER_REC_W      boolean := FALSE;
  C RECORD;

BEGIN
  IF (CD_PESSOA_FISICA_P IS NOT NULL AND CD_PESSOA_FISICA_P::text <> '' AND NR_SEQUENCIA_SUP_P IS NOT NULL AND NR_SEQUENCIA_SUP_P::text <> '') THEN
      FOR C IN (SELECT * FROM PESSOA_FISICA_AUX_JST_V CPFT
                 WHERE CPFT.IE_EVENTO_T = IE_EVENTO_P
                   AND CPFT.NR_SEQUENCIA_SUP_T = NR_SEQUENCIA_SUP_P) LOOP
          PESSOA_FISICA_AUX_W := NULL;
          ALT_ATRIB_W         := FALSE;

          BEGIN
            SELECT PFA.*
              INTO STRICT PESSOA_FISICA_AUX_W
              FROM PESSOA_FISICA_AUX PFA
             WHERE PFA.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P;
          EXCEPTION
            WHEN no_data_found THEN
                 IS_INSERT_W := TRUE;
            WHEN too_many_rows THEN
                 -- Pois n√£o possui UK com o CD_PESSOA_FISICA
                 BEGIN
                   UP_OTHER_REC_W := TRUE;

                   SELECT PFA.*
                     INTO STRICT PESSOA_FISICA_AUX_W
                     FROM PESSOA_FISICA_AUX PFA
                    WHERE PFA.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P  LIMIT 1;
                 END;
          END;

          IF ((C.NR_SEQ_MOTIVO IS NOT NULL AND C.NR_SEQ_MOTIVO::text <> '')
          AND (coalesce(PESSOA_FISICA_AUX_W.NR_SEQ_MOTIVO::text, '') = ''
          OR PESSOA_FISICA_AUX_W.NR_SEQ_MOTIVO <> C.NR_SEQ_MOTIVO)) THEN
             PESSOA_FISICA_AUX_W.NR_SEQ_MOTIVO := C.NR_SEQ_MOTIVO;
             ALT_ATRIB_W := TRUE;
          END IF;

          IF ((C.CD_AGENTE_SAUDE IS NOT NULL AND C.CD_AGENTE_SAUDE::text <> '')
          AND (coalesce(PESSOA_FISICA_AUX_W.CD_AGENTE_SAUDE::text, '') = ''
          OR PESSOA_FISICA_AUX_W.CD_AGENTE_SAUDE <> C.CD_AGENTE_SAUDE)) THEN
             PESSOA_FISICA_AUX_W.CD_AGENTE_SAUDE := C.CD_AGENTE_SAUDE;
             ALT_ATRIB_W := TRUE;
          END IF;

          IF ((C.IE_CONTROL_EXT IS NOT NULL AND C.IE_CONTROL_EXT::text <> '')
          AND (coalesce(PESSOA_FISICA_AUX_W.IE_CONTROL_EXT::text, '') = ''
          OR PESSOA_FISICA_AUX_W.IE_CONTROL_EXT <> C.IE_CONTROL_EXT)) THEN
             PESSOA_FISICA_AUX_W.IE_CONTROL_EXT := C.IE_CONTROL_EXT;
             ALT_ATRIB_W := TRUE;
          END IF;

          IF ((C.CD_CORPORATIVO IS NOT NULL AND C.CD_CORPORATIVO::text <> '')
          AND (coalesce(PESSOA_FISICA_AUX_W.CD_CORPORATIVO::text, '') = ''
          OR PESSOA_FISICA_AUX_W.CD_CORPORATIVO <> C.CD_CORPORATIVO)) THEN
             PESSOA_FISICA_AUX_W.CD_CORPORATIVO := C.CD_CORPORATIVO;
             ALT_ATRIB_W := TRUE;
          END IF;

          IF ((C.IE_MOTIVO_SEM_CPF IS NOT NULL AND C.IE_MOTIVO_SEM_CPF::text <> '')
          AND (coalesce(PESSOA_FISICA_AUX_W.IE_MOTIVO_SEM_CPF::text, '') = ''
          OR PESSOA_FISICA_AUX_W.IE_MOTIVO_SEM_CPF <> C.IE_MOTIVO_SEM_CPF)) THEN
             PESSOA_FISICA_AUX_W.IE_MOTIVO_SEM_CPF := C.IE_MOTIVO_SEM_CPF;
             ALT_ATRIB_W := TRUE;
          END IF;

          PESSOA_FISICA_AUX_W.CD_PESSOA_FISICA := CD_PESSOA_FISICA_P;
          PESSOA_FISICA_AUX_W.NM_USUARIO       := WHEB_USUARIO_PCK.GET_NM_USUARIO;
          PESSOA_FISICA_AUX_W.DT_ATUALIZACAO   := clock_timestamp();

          IF (coalesce(trim(both PESSOA_FISICA_AUX_W.NM_USUARIO_NREC)::text, '') = '') THEN
            PESSOA_FISICA_AUX_W.NM_USUARIO_NREC := PESSOA_FISICA_AUX_W.NM_USUARIO;
          END IF;

          IF (coalesce(PESSOA_FISICA_AUX_W.DT_ATUALIZACAO_NREC::text, '') = '') THEN
             PESSOA_FISICA_AUX_W.DT_ATUALIZACAO_NREC := PESSOA_FISICA_AUX_W.DT_ATUALIZACAO;
          END IF;

          IF (ALT_ATRIB_W) THEN
            IF (IS_INSERT_W) THEN
               SELECT nextval('pessoa_fisica_aux_seq')
                 INTO STRICT PESSOA_FISICA_AUX_W.NR_SEQUENCIA
;

               INSERT INTO PESSOA_FISICA_AUX
               VALUES (PESSOA_FISICA_AUX_W.*);
            ELSE
               UPDATE PESSOA_FISICA_AUX PFA
                  SET ROW = PESSOA_FISICA_AUX_W
                WHERE PFA.NR_SEQUENCIA = PESSOA_FISICA_AUX_W.NR_SEQUENCIA;

                IF (UP_OTHER_REC_W) THEN
                   UPDATE PESSOA_FISICA_AUX PFA
                      SET PFA.DT_ATUALIZACAO = PESSOA_FISICA_AUX_W.DT_ATUALIZACAO,
                          PFA.NM_USUARIO = PESSOA_FISICA_AUX_W.NM_USUARIO,
                          PFA.NR_SEQ_MOTIVO = PESSOA_FISICA_AUX_W.NR_SEQ_MOTIVO,
                          PFA.CD_AGENTE_SAUDE = PESSOA_FISICA_AUX_W.CD_AGENTE_SAUDE,
                          PFA.IE_CONTROL_EXT = PESSOA_FISICA_AUX_W.IE_CONTROL_EXT,
                          PFA.CD_CORPORATIVO = PESSOA_FISICA_AUX_W.CD_CORPORATIVO,
                          PFA.IE_MOTIVO_SEM_CPF = PESSOA_FISICA_AUX_W.IE_MOTIVO_SEM_CPF
                    WHERE PFA.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
                      AND PFA.NR_SEQUENCIA <> PESSOA_FISICA_AUX_W.NR_SEQUENCIA;
                END IF;
            END IF;

            COMMIT;
          END IF;
      END LOOP;
  END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE processa_pessoa_fisica_aux_jst (IE_EVENTO_P text, CD_PESSOA_FISICA_P bigint, NR_SEQUENCIA_SUP_P bigint) FROM PUBLIC;

