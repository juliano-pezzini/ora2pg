-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE schematic4test_double_restore (NR_SEQUENCIA_P bigint, DS_NAME_P text, NM_USUARIO_P text) AS $body$
DECLARE

NR_EXECUTIONW bigint;
NR_SEQ_SNAP_JOBSW2 bigint;
DS_JOBSW varchar(255);
IE_STATUSW varchar(255);
NR_SEQ_RESTOREW bigint;
DS_JUSTIFICATIVEW varchar(255);
NR_SEQ_SNAPSHOTW bigint;
NR_SEQ_SNAP_BKPW bigint;
DS_NAMEW varchar(1000);
DS_NAMEW2 varchar(1000);
DS_INFOW varchar(1000);
DS_JOBS varchar(1000);
IE_JOBSW varchar(255);
IE_SWITCHW varchar(255);
NEWSEQUENCERESTORE bigint;
DS_BKPW varchar(1000);
NEWSEQUENCECONFIG bigint;


C01 CURSOR FOR  --loop config
SELECT NR_EXECUTION, NR_SEQ_SNAP_JOBS, DS_JOBS, IE_STATUS
FROM SCHEM_TEST_SNAP_CONFIG
WHERE NR_SEQ_SNAP_RESTORE = NR_SEQUENCIA_P;


BEGIN
  --procedure to duplicate restore	
	INSERT INTO SCHEM_TEST_BEHOLDER(nr_sequencia, nm_usuario, dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec, ds_interaction, ds_param_a, ds_param_b, ds_param_c)
	VALUES (nextval('schem_test_beholder_seq'), NM_USUARIO_P, clock_timestamp(), 'Robot', clock_timestamp(), 'SCHEMATIC4TEST_DOUBLE_RESTORE',
	'NR_SEQUENCIA_P as '||NR_SEQUENCIA_P,
  'DS_NAME_P as '||DS_NAME_P,  
  'NM_USUARIO_P as '||NM_USUARIO_P);
	
     SELECT NR_SEQUENCIA, DS_JUSTIFICATIVE, DS_BKP, NR_SEQ_SNAPSHOT, NR_SEQ_SNAP_BKP, DS_NAME, DS_INFO, IE_JOBS, IE_SWITCH
      INTO STRICT NR_SEQ_RESTOREW, DS_JUSTIFICATIVEW, DS_BKPW, NR_SEQ_SNAPSHOTW, NR_SEQ_SNAP_BKPW, DS_NAMEW, DS_INFOW, IE_JOBSW, IE_SWITCHW     
    FROM SCHEM_TEST_SNAP_RESTORE
    WHERE NR_SEQUENCIA = NR_SEQUENCIA_P;

    IF (NR_SEQ_RESTOREW IS NOT NULL AND NR_SEQ_RESTOREW::text <> '') THEN        
        DS_NAMEW2 := 'COPY OF ' || DS_NAMEW;
 
      SELECT nextval('schem_test_snap_restore_seq') SEQUENCIA 
        INTO STRICT NEWSEQUENCERESTORE
;

      INSERT INTO SCHEM_TEST_SNAP_RESTORE(NR_SEQUENCIA, DS_JUSTIFICATIVE, DS_BKP, NR_SEQ_SNAPSHOT, NR_SEQ_SNAP_BKP, DS_NAME, DS_INFO, IE_JOBS, IE_SWITCH, dt_atualizacao, nm_usuario, nm_usuario_nrec, dt_atualizacao_nrec, IE_SITUACAO) 
          VALUES (NEWSEQUENCERESTORE, DS_JUSTIFICATIVEW, DS_BKPW, NR_SEQ_SNAPSHOTW, NR_SEQ_SNAP_BKPW, DS_NAMEW2, DS_INFOW, IE_JOBSW, 'N', clock_timestamp(), NM_USUARIO_P, NM_USUARIO_P, clock_timestamp(), 'A');
				
      COMMIT;
    END IF;

    OPEN C01;
        LOOP
          FETCH C01 INTO	
            NR_EXECUTIONW,
            NR_SEQ_SNAP_JOBSW2, 
            DS_JOBSW, 
            IE_STATUSW;
        EXIT WHEN NOT FOUND; /* apply on C01 */
        BEGIN	
          SELECT nextval('schem_test_snap_config_seq')
            INTO STRICT NEWSEQUENCECONFIG
;
    
         INSERT INTO SCHEM_TEST_SNAP_CONFIG(NR_SEQUENCIA, NR_SEQ_SNAP_RESTORE, NR_EXECUTION, NR_SEQ_SNAP_JOBS, DS_JOBS, IE_STATUS, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec) 
              VALUES (NEWSEQUENCECONFIG, NEWSEQUENCERESTORE, NR_EXECUTIONW, NR_SEQ_SNAP_JOBSW2, DS_JOBSW, 0, clock_timestamp(), NM_USUARIO_P, clock_timestamp(), NM_USUARIO_P);
          COMMIT;
        END;
      END LOOP;
      CLOSE C01;
      
      EXCEPTION
      WHEN no_data_found THEN
        RAISE NOTICE 'Erro: Data not found';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE schematic4test_double_restore (NR_SEQUENCIA_P bigint, DS_NAME_P text, NM_USUARIO_P text) FROM PUBLIC;

