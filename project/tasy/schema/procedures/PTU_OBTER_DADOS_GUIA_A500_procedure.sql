-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_obter_dados_guia_a500 ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, cd_guia_p pls_conta.cd_guia%type, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, cd_senha_p INOUT pls_guia_plano.cd_senha%type, ie_status_p INOUT pls_guia_plano.ie_status%type, tp_autoriz_p INOUT ptu_nota_servico.tp_autoriz%type, dt_autoriz_p INOUT pls_guia_plano.dt_liberacao%type, dt_solicitacao_p INOUT pls_guia_plano.dt_solicitacao%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_registro_w	integer;


BEGIN
select	count(1)
into STRICT	qt_registro_w
from	ptu_pedido_autorizacao a
where	a.nr_seq_guia	= nr_seq_guia_p
and	(a.nr_seq_execucao IS NOT NULL AND a.nr_seq_execucao::text <> '');

if (qt_registro_w = 0) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_guia_plano	a,
		ptu_pedido_autorizacao b
	where	a.nr_sequencia		= b.nr_seq_guia
	and	a.cd_guia		= cd_guia_p
	and	a.nr_seq_segurado	= nr_seq_segurado_p
	and	(b.nr_seq_execucao IS NOT NULL AND b.nr_seq_execucao::text <> '');
end if;

if (qt_registro_w = 0) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_guia_plano	a,
		ptu_pedido_autorizacao b
	where	a.nr_sequencia		= b.nr_seq_guia
	and	a.cd_guia		= cd_guia_referencia_p
	and	a.nr_seq_segurado	= nr_seq_segurado_p
	and	(b.nr_seq_execucao IS NOT NULL AND b.nr_seq_execucao::text <> '');
end if;

if (qt_registro_w = 0) then
	tp_autoriz_p := 1;
else
	tp_autoriz_p := 2;
end if;

select	coalesce(max(cd_senha_externa),max(cd_senha)),
	max(ie_status),
	coalesce(max(dt_liberacao),max(dt_autorizacao)),
	max(dt_solicitacao)
into STRICT	cd_senha_p,
	ie_status_p,
	dt_autoriz_p,
	dt_solicitacao_p
from	pls_guia_plano
where	nr_sequencia	= nr_seq_guia_p
and	nr_seq_segurado	= nr_seq_segurado_p;

if (coalesce(cd_senha_p::text, '') = '') then
	select	coalesce(max(cd_senha_externa),max(cd_senha)),
		max(ie_status)
	into STRICT	cd_senha_p,
		ie_status_p
	from	pls_guia_plano
	where	cd_guia		= cd_guia_p
	and	nr_seq_segurado	= nr_seq_segurado_p;
end if;

if (coalesce(cd_senha_p::text, '') = '') then
	select	coalesce(max(cd_senha_externa),max(cd_senha)),
		max(ie_status)
	into STRICT	cd_senha_p,
		ie_status_p
	from	pls_guia_plano
	where	cd_guia		= cd_guia_referencia_p
	and	nr_seq_segurado	= nr_seq_segurado_p;
end if;

cd_senha_p := somente_numero(substr(coalesce(cd_senha_p,'0'),1,10));

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_obter_dados_guia_a500 ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, cd_guia_p pls_conta.cd_guia%type, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, cd_senha_p INOUT pls_guia_plano.cd_senha%type, ie_status_p INOUT pls_guia_plano.ie_status%type, tp_autoriz_p INOUT ptu_nota_servico.tp_autoriz%type, dt_autoriz_p INOUT pls_guia_plano.dt_liberacao%type, dt_solicitacao_p INOUT pls_guia_plano.dt_solicitacao%type) FROM PUBLIC;

