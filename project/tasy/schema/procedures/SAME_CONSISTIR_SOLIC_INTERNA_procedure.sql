-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE same_consistir_solic_interna ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_pasta_p text) AS $body$
DECLARE

 
ie_verifica_se_setor_same_w	varchar(1);
ie_fora_do_same_w		varchar(1);
ie_permite_mais_de_uma_solic_w	varchar(1);
ie_existe_solic_aberta_w	varchar(1);
ds_setor_atendimento_w		varchar(255);
ie_fora_de_local_permitido_w	varchar(1);
	
/* 
ie_pasta_p 
S - Solicitação interna de prontuário 
L - Solicitação interna em lote 
*/
 
	 

BEGIN 
 
ie_verifica_se_setor_same_w	:= obter_valor_param_usuario(941,159,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
ie_permite_mais_de_uma_solic_w	:= obter_valor_param_usuario(941,160,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
 
if (ie_verifica_se_setor_same_w = 'S' and ie_pasta_p = 'S') or (ie_verifica_se_setor_same_w = 'L') then 
	begin 
	select	'S' 
	into STRICT	ie_fora_do_same_w 
	from	same_prontuario 
	where	((nr_atendimento = nr_atendimento_p) or ((coalesce(nr_atendimento_p,0) = 0) and (cd_pessoa_fisica = cd_pessoa_fisica_p))) 
	and	ie_status not in (2,5,6,10) 
	and	obter_classif_setor(cd_setor_atendimento) <> 6  LIMIT 1;
	exception 
	when others then 
		ie_fora_do_same_w := 'N';
	end;
 
	if (ie_fora_do_same_w = 'S') then 
		select	max(obter_dados_setor(cd_setor_atendimento,'DS')) 
		into STRICT	ds_setor_atendimento_w 
		from	same_prontuario 
		where	((nr_atendimento = nr_atendimento_p) or ((coalesce(nr_atendimento_p,0) = 0) and (cd_pessoa_fisica = cd_pessoa_fisica_p))) 
		and	ie_status not in (2,5,6,10);
	 
		--Não é possível realizar a solicitação, pois o prontuário solicitado não se encontra no setor do SAME! 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(114227,'DS_SETOR=' || ds_setor_atendimento_w);
	end if;	
end if;
 
if (ie_permite_mais_de_uma_solic_w = 'N' and ie_pasta_p = 'S') or (ie_permite_mais_de_uma_solic_w = 'L') then 
	begin 
	select	'S' 
	into STRICT	ie_existe_solic_aberta_w 
	from	same_solic_pront 
	where	((coalesce(nr_atendimento::text, '') = '' and cd_pessoa_fisica = cd_pessoa_fisica_p) 
	or (nr_atendimento = nr_atendimento_p or (coalesce(nr_atendimento_p,0) = 0 and cd_pessoa_fisica = cd_pessoa_fisica_p))) 
	and (coalesce(nr_seq_lote::text, '') = '' or ie_permite_mais_de_uma_solic_w = 'L') 
	and	ie_status = 'P'  LIMIT 1;
	exception 
	when others then 
		ie_existe_solic_aberta_w := 'N';
	end;
 
	if (ie_existe_solic_aberta_w = 'S') then 
		--Já existe uma solicitação em aberto para este prontuário! Parâmetro 160. 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(114254);
	end if;
end if;
 
begin 
select	'S' 
into STRICT	ie_fora_de_local_permitido_w 
from	same_prontuario 
where	((nr_atendimento = nr_atendimento_p) or ((coalesce(nr_atendimento_p,0) = 0) and (cd_pessoa_fisica = cd_pessoa_fisica_p))) 
and  	Obter_se_local_permite_solic(nr_seq_local) = 'N'  LIMIT 1;
exception 
when others then 
	ie_fora_de_local_permitido_w := 'N';
end;
 
if (ie_fora_de_local_permitido_w = 'S') then 
	--Não é possível realizar a solicitação, pois o prontuário solicitado se encontra em um local que não permite retirada/solicitação! 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(199073);
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE same_consistir_solic_interna ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_pasta_p text) FROM PUBLIC;

