-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_agrup (cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_final_p timestamp, ie_periodo_p text, ie_classif_fluxo_p text, nm_usuario_p text, cd_empresa_p bigint, ie_operacao_p text, ie_restringe_estab_p text, ie_somente_ativa_p text, cd_moeda_p bigint default null) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENÇÃO ----------------------------------------------------------------*/

/* Cuidado ao realizar alterações no fluxo de caixa. Toda e qualquer alteração realizada em qualquer uma das       */

/* procedures do fluxo de caixa deve ser cuidadosamente verificada e realizada no fluxo de caixa em lote.           */

/* Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando assim que           */

/* existam diferenças entre os fluxos de caixa.                                                                                                                */

/*--------------- AO ALTERAR O FLUXO DE CAIXA ALTERAR TAMBÉM O FLUXO DE CAIXA EM LOTE ---------------*/

cd_conta_financ_w		bigint;
cd_conta_financ_agrup_w		bigint;
vl_fluxo_w			double precision;
dt_referencia_w			timestamp;
ie_origem_w			varchar(4);
ie_integracao_w			varchar(4);
ie_operacao_w			varchar(5);
ie_conta_financ_ativa_w		varchar(1);
ie_acumular_w			conta_financeira.ie_acumular%type;
vl_total_fluxo_w		fluxo_caixa.vl_fluxo%type;
ie_inverte_valor_w		conta_financ_agrup.ie_inverte_valor%type;

dt_inicio_w			timestamp;
dt_final_w			timestamp;
/* Projeto Multimoeda - Variáveis */

cd_moeda_estrang_w		integer;
cd_moeda_empresa_w		integer;

c01 CURSOR FOR
SELECT	a.cd_conta_financ,
	substr(obter_operacao_conta_financ(a.cd_conta_financ),1,255) cd_conta_financ,
	coalesce(a.ie_acumular,'N') ie_acumular
from	conta_financeira a
where	obter_se_conta_financ_estab(cd_conta_financ, cd_estabelecimento_p, ie_restringe_estab_p) = 'S'
and	exists (select	1
	from	conta_financeira z,
		conta_financ_agrup x
	where	z.ie_situacao		= 'A'
	and	x.cd_conta_financ_agrup	= z.cd_conta_financ
	and	x.cd_conta_financ	= a.cd_conta_financ)
and	a.ie_oper_fluxo		= 'I'
and (coalesce(ie_somente_ativa_p,'S') = 'N' or a.ie_situacao = 'A')
and	a.cd_empresa		= cd_empresa_p
order by cd_conta_apres;

c02 CURSOR FOR
SELECT	a.cd_conta_financ_agrup,
	coalesce(a.ie_inverte_valor,'N') ie_inverte_valor
from	conta_financ_agrup a,
	conta_financeira b
where	a.cd_conta_financ_agrup = b.cd_conta_financ
and	a.cd_conta_financ	= cd_conta_financ_w
order by cd_conta_apres;

c03 CURSOR FOR
SELECT	CASE WHEN b.ie_oper_fluxo='S' THEN  sum(a.vl_fluxo) WHEN b.ie_oper_fluxo='F' THEN  sum(a.vl_fluxo) WHEN b.ie_oper_fluxo='D' THEN  sum(a.vl_fluxo) * -1 WHEN b.ie_oper_fluxo='A' THEN  sum(a.vl_fluxo) WHEN b.ie_oper_fluxo='I' THEN  sum(a.vl_fluxo)  ELSE 0 END ,
	trunc(a.dt_referencia, 'dd'),
	a.ie_origem,
	a.ie_integracao
from	conta_financeira b,
	fluxo_caixa a
where	a.dt_referencia 	between dt_inicio_w and dt_final_w
and	a.cd_conta_financ	= cd_conta_financ_agrup_w
and	a.ie_periodo		= ie_periodo_p
and	a.ie_classif_fluxo	= ie_classif_fluxo_p
and	a.cd_conta_financ	= b.cd_conta_financ
and	b.ie_situacao		= 'A'
and	coalesce(a.cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w)  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
group by	trunc(a.dt_referencia, 'dd'),
	a.ie_origem,
	a.ie_integracao,
	b.ie_oper_fluxo
order by	2;


BEGIN

dt_inicio_w	:= trunc(dt_inicio_p,'dd');
dt_final_w	:= fim_dia(dt_final_p);

/* Projeto Multimoeda - Busca a moeda padrão da empresa e verifica o parâmetro cd_moeda passado na procedure. Ele será a base da busca dos dados
		em moeda estrangeira. Caso o parâmetro seja nulo, deverá ser considerada a moeda padrão da empresa nas consultas,
		caso contrário irá buscar somente os dados na moeda selecionada.*/
select obter_moeda_padrao_empresa(cd_estabelecimento_p,'E')
into STRICT cd_moeda_empresa_w
;
if (coalesce(cd_moeda_p::text, '') = '') then
	cd_moeda_estrang_w := cd_moeda_empresa_w;
else
	cd_moeda_estrang_w := cd_moeda_p;
end if;

open	c01;
loop
fetch	c01 into
	cd_conta_financ_w,
	ie_operacao_w,
	ie_acumular_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	if (ie_operacao_p = 'A') or (ie_operacao_p = 'S' and ie_operacao_w <> 'D') or (ie_operacao_p = 'D' and ie_operacao_w <> 'S') then

		open	c02;
		loop
		fetch	c02 into
			cd_conta_financ_agrup_w,
			ie_inverte_valor_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			open	c03;
			loop
			fetch	c03 into
				vl_fluxo_w,
				dt_referencia_w,
				ie_origem_w,
				ie_integracao_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */

				begin

				if (coalesce(ie_inverte_valor_w,'N')	= 'S') then

					vl_fluxo_w		:= coalesce(vl_fluxo_w,0) * -1;

				end if;

				if (coalesce(ie_acumular_w,'N') = 'S') then

					vl_total_fluxo_w	:= coalesce(vl_total_fluxo_w,0) + coalesce(vl_fluxo_w,0);

				else

					vl_total_fluxo_w	:= coalesce(vl_fluxo_w,0);

				end if;

				insert	into fluxo_caixa(cd_estabelecimento,
					dt_referencia,
					cd_conta_financ,
					ie_classif_fluxo,
					dt_atualizacao,
					nm_usuario,
					vl_fluxo,
					ie_origem,
					ie_periodo,
					ie_integracao,
					cd_empresa,
					cd_moeda)
				values (cd_estabelecimento_p,
					dt_referencia_w,
					cd_conta_financ_w,
					ie_classif_fluxo_p,
					clock_timestamp(),
					nm_usuario_p,
					vl_total_fluxo_w,
					'F', /* Francisco - OS 69556 - Criamos informativa porque quando era digitado o valor duplicava */
					ie_periodo_p,
					ie_integracao_w,
					cd_empresa_p,
					coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w));

				exception
				when others then

				update	fluxo_caixa
				set	vl_fluxo		= vl_fluxo + vl_fluxo_w
				where	cd_estabelecimento	= cd_estabelecimento_p
				and	cd_conta_financ		= cd_conta_financ_w
				and	dt_referencia		= dt_referencia_w
				and	ie_periodo		= ie_periodo_p
				and	ie_classif_fluxo	= ie_classif_fluxo_p
				and	ie_integracao		= ie_integracao_w
				and	cd_empresa		= cd_empresa_p
				and	coalesce(cd_moeda,cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_w,cd_moeda_empresa_w);  --Projeto Multimoeda - Busca apenas os registros da moeda relacionada
				end;

			end	loop;
			close	c03;

		end	loop;
		close	c02;

	end if;

end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_agrup (cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_final_p timestamp, ie_periodo_p text, ie_classif_fluxo_p text, nm_usuario_p text, cd_empresa_p bigint, ie_operacao_p text, ie_restringe_estab_p text, ie_somente_ativa_p text, cd_moeda_p bigint default null) FROM PUBLIC;

