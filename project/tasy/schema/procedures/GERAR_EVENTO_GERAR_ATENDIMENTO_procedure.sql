-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_gerar_atendimento ( nr_seq_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
nr_seq_evento_w			bigint;
qt_idade_w			bigint;
cd_convenio_w			bigint;
cd_medico_w			varchar(15);
cd_pessoa_fisica_w		varchar(15);
ie_sexo_w			varchar(15);
nr_seq_proc_interno_w		bigint;
cd_estabelecimento_w		smallint;
cd_agenda_w			bigint;
hr_inicio_w			timestamp;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
dt_cancelamento_w		timestamp;
cd_motivo_cancel_w		varchar(15);	
ie_tipo_atendimento_w		smallint;
nr_atendimento_w		bigint;
qt_registros_w			bigint;
ie_status_agenda_w		varchar(3) := null;
ds_observacao_w			varchar(255);

c09 CURSOR FOR	 
	SELECT	nr_seq_evento 
	from	regra_envio_sms 
	where	cd_estabelecimento		= cd_estabelecimento_p 
	and	ie_evento_disp			= 'AGA' 
	and	coalesce(qt_idade_w,0) between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999) 
	and	coalesce(ie_sexo,coalesce(ie_sexo_w,'XPTO')) = coalesce(ie_sexo_w,'XPTO') 
	and	coalesce(cd_medico,coalesce(cd_medico_w,'0')) = coalesce(cd_medico_w,'0') 
	and (obter_se_convenio_rec_alerta(cd_convenio_w,nr_sequencia) = 'S') 
	and (obter_se_proc_rec_alerta(nr_seq_proc_interno_w,nr_sequencia,cd_procedimento_w,ie_origem_proced_w) = 'S') 
	and (obter_regra_alerta_agenda(nr_sequencia,cd_agenda_w,ie_status_agenda_w) = 'S') 
	and (obter_classif_regra(nr_sequencia,coalesce(obter_classificacao_pf(cd_pessoa_fisica_w),0)) = 'S') 
	and (obter_se_regra_envio(nr_sequencia,nr_atendimento_w) = 'S') 
	and (obter_se_sms_setor_alerta(nr_Atendimento_w, nr_sequencia) = 'S') 
	and	coalesce(ie_situacao,'A') = 'A';
	

BEGIN 
 
if (coalesce(nr_seq_agenda_p,0) > 0) then 
	select	cd_pessoa_fisica, 
		coalesce(obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),coalesce(qt_idade_paciente,0)), 
		coalesce(Obter_Sexo_PF(cd_pessoa_fisica,'C'),'X'), 
		cd_medico, 
		cd_convenio, 
		nr_seq_proc_interno, 
		cd_agenda, 
		hr_inicio, 
		cd_procedimento, 
		ie_origem_proced, 
		dt_cancelamento, 
		cd_motivo_cancelamento, 
		obter_tipo_atendimento(nr_atendimento), 
		nr_atendimento, 
		ie_status_agenda, 
		substr(ds_observacao,1,255) 
	into STRICT	cd_pessoa_fisica_w, 
		qt_idade_w, 
		ie_sexo_w, 
		cd_medico_w, 
		cd_convenio_w, 
		nr_seq_proc_interno_w, 
		cd_agenda_w, 
		hr_inicio_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		dt_cancelamento_w, 
		cd_motivo_cancel_w, 
		ie_tipo_atendimento_w, 
		nr_atendimento_w, 
		ie_status_agenda_w, 
		ds_observacao_w 
	from	agenda_paciente 
	where	nr_sequencia = nr_seq_agenda_p;
 
	if (coalesce(nr_atendimento_w,0) > 0) then 
		open c09;
		loop 
		fetch c09 into 
			nr_seq_evento_w;
		EXIT WHEN NOT FOUND; /* apply on c09 */
			begin 
			CALL gerar_evento_agenda_trigger(	nr_seq_evento_w,nr_atendimento_w,cd_pessoa_fisica_w,null,nm_usuario_p, 
							cd_agenda_w, hr_inicio_w, cd_medico_w, cd_procedimento_w, 
							ie_origem_proced_w, dt_cancelamento_w,null,null,null, 
							cd_convenio_w,null,'N',nr_seq_agenda_p,null,null,null,null,ds_observacao_w);
			end;
		end loop;
		close c09;
	end if;	
end if;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_gerar_atendimento ( nr_seq_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

