-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_guia_plano ( nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_guia_plano_p INOUT bigint) AS $body$
DECLARE


nr_seq_guia_plano_w	bigint;
ie_duplica_cd_guia_w	varchar(2);
cd_guia_w		varchar(20);
nr_seq_guia_proc_w	bigint;
nr_seq_guia_mat_w	bigint;
qt_req_proc_w		bigint;
qt_req_mat_w		bigint;
ie_cancela_guia_ant_w	varchar(2);
ie_tipo_processo_w	varchar(2);
nr_seq_historico_w	bigint;
nr_seq_prest_fornec_w	bigint;
cd_cgc_w		varchar(255);
cd_fornecedor_w		bigint;
nr_seq_material_w	bigint;
dt_preco_w		timestamp;
vl_preco_w		double precision;
ie_tipo_guia_nov_w	varchar(255);
dt_solicitacao_nov_w	timestamp;
nr_seq_segurado_nov_w	bigint;
cd_medico_solic_nov_w	varchar(255);
nr_seq_prestador_nov_w	bigint;
cd_guia_nov_w		varchar(255);
ie_regra_dupl_guia_w	varchar(255);
nr_seq_motivo_cancel_w	bigint;
nr_seq_material_forn_w	bigint;
ie_tipo_intercambio_w	varchar(2);
vl_material_w		double precision;
qt_registro_anexo_w	bigint;

nr_seq_proc_anexo_nov_w		pls_guia_plano_proc.nr_sequencia%type;
nr_seq_mat_anexo_nov_w		pls_guia_plano_mat.nr_sequencia%type;
nr_seq_diag_anexo_nov_w		pls_lote_anexo_mat_aut.nr_sequencia%type;
nr_seq_anexo_guia_orig_w	pls_lote_anexo_guias_aut.nr_sequencia%type;
nr_seq_anexo_guia_nova_w	pls_lote_anexo_guias_aut.nr_sequencia%type;
nr_seq_lote_anexo_guia_w	pls_lote_anexo_guias_aut.nr_sequencia%type;

cd_guia_atual_w			pls_guia_plano.cd_guia%type;
cd_guia_referencia_w		pls_guia_plano.cd_guia_principal%type;
cd_guia_prestador_w		pls_guia_plano.cd_guia_prestador%type;
nr_seq_motivo_exc_w		pls_motivo_exclusao.nr_sequencia%type;	

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_plano_w;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_prest_fornec,
		nr_seq_material_forn,
		vl_material
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_plano_w;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_guia_plano_historico
	where	nr_seq_guia	= nr_seq_guia_p
	order by 1;

C04 CURSOR FOR
	SELECT	c.dt_preco,
		c.vl_preco
	from	pls_fornec_mat_fed_sc	d,
		pls_mat_uni_fed_sc_preco c,
		pls_mat_unimed_fed_sc b,
		pls_material a
	where	b.nr_sequencia 		= c.nr_seq_mat_unimed
	and	a.nr_seq_mat_uni_fed_sc 	= b.nr_sequencia
	and	c.cd_fornecedor_fed_sc	= d.cd_fornecedor
	and	d.ie_situacao		= 'A'
	and	d.cd_fornecedor		= cd_fornecedor_w
	and	a.nr_sequencia		= nr_seq_material_w
	and	c.ie_situacao		= 'A'
	order by c.dt_preco;

--Retorna  os procedimentos de fora da guia antiga
C05 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		qt_solicitada,
		dt_liberacao,
		nm_usuario_liberacao,
		cd_procedimento_imp,
		ds_procedimento_imp,
		qt_solicitada_imp,
		nr_seq_prorrog,
		nr_sequencia,
		cd_tipo_tabela_imp,
		nr_seq_tipo_limitacao,
		nr_seq_regra_liberacao,
		nr_seq_motivo_exc,
		qt_utilizado,
		ie_cobranca_prevista,
		ie_tipo_anexo,
		vl_total_pacote,
		cd_procedimento_ptu, 
		ds_procedimento_ptu, 
		ie_pacote_ptu,
		ie_tipo_tabela
	from	pls_guia_plano_proc
	where	nr_seq_guia 	= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

--Retorna os caras de cima de dentro da guia antiga
C07 CURSOR FOR
	SELECT	cd_ans,
		cd_cnes,
		cd_guia,
		cd_guia_prestador,
		cd_guia_referencia,
		cd_senha,
		cd_usuario_plano,
		ds_area_irradiada,
		ds_biometria,
		ds_email_prof_solic,
		ds_especificacao,
		ds_justificativa,
		ds_observacao,
		ds_procedimento_cirurgico,
		ds_quimioterapia,
		dt_autorizacao,
		dt_inicio_previsto,
		dt_quimioterapia,
		dt_radioterapia,
		dt_real_proc_cirurgico,
		dt_solicitacao,
		ie_recem_nascido,
		ie_sexo,
		ie_status,
		ie_tipo_anexo,
		nm_beneficiario,
		nm_profissional_solic,
		nm_usuario,
		nm_usuario_nrec,
		nr_campos,
		nr_ciclo_atual,
		nr_ciclo_previsto,
		nr_sequencia,
		nr_seq_guia_principal,
		nr_seq_lote_anexo, 
		nr_telef_prof_solic,
		nr_dia_ciclo_atual,
		qt_altura,
		qt_campo_irradiacao,
		qt_dias_previsto,
		qt_dose_dia,
		qt_dose_total,
		qt_idade_benef,
		qt_intervalo_ciclo,
		qt_peso,
		qt_superficie_corporal,
		nr_seq_motivo_exc
	from	pls_lote_anexo_guias_aut
	where	nr_seq_guia	= nr_seq_guia_p;

--Retorna os materiais cadastrados para a antiga guia
C10 CURSOR FOR
	SELECT	cd_material_imp,
		cd_tipo_tabela_imp,
		dt_liberacao,
		ds_material_imp,
		nr_sequencia,
		nr_seq_prorrog,
		nr_seq_motivo_exc,
		nr_seq_material,
		nr_seq_prest_fornec,
		nr_seq_material_forn,
		nm_usuario_liberacao,
		qt_utilizado,
		qt_solicitada_imp,
		qt_solicitada,
		vl_material,
		ie_tipo_anexo,
		cd_material_ptu,
		ds_material_ptu
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';

--Retornar os diagnosticos inseridos para os caras de cima de dentro(QU, RA, OP)  da guia antiga
C11 CURSOR FOR
	SELECT	cd_diagnostico_imagem,
		cd_doenca,
		cd_finalidade_tratamento,
		ds_diagnostico,
		ds_observacao,
		ds_plano_terapeutico,
		ie_capacidade_funcional,
		ie_classificacao,
		ie_estadia_tumor,
		ie_tipo_diagnostico,
		ie_tipo_quimioterapia,
		ie_tumor,
		ie_nodulo,
		ie_metastases,
		nm_usuario,
		nm_usuario_nrec,
		dt_diagnostico
	from	pls_lote_anexo_diag_aut
	where	nr_seq_lote_anexo_guia	= nr_seq_anexo_guia_orig_w;

BEGIN
if (nr_seq_guia_p > 0) then
	begin
		select	ie_tipo_processo,
			ie_tipo_intercambio
		into STRICT	ie_tipo_processo_w,
			ie_tipo_intercambio_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
	exception
	when others then
		ie_tipo_processo_w	:= null;
		ie_tipo_intercambio_w	:= null;
	end;

	if (ie_tipo_processo_w	= 'I') and (ie_tipo_intercambio_w	= 'E') then
		-- Voce nao pode realizar esta acao em uma guia recebida via intercambio!
		CALL wheb_mensagem_pck.exibir_mensagem_abort(271396);
	end if;

	select	nextval('pls_guia_plano_seq')
	into STRICT	nr_seq_guia_plano_w
	;

	ie_duplica_cd_guia_w := obter_valor_param_usuario(1204, 58, Obter_Perfil_Ativo, nm_usuario_p, 0);

	if (ie_duplica_cd_guia_w	= 'N') then
		cd_guia_w	:= nr_seq_guia_plano_w;
	elsif (ie_duplica_cd_guia_w	= 'S') then
		cd_guia_w	:= '';
	end if;

	select	ie_tipo_processo
	into STRICT	ie_tipo_processo_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;

	if (ie_tipo_processo_w	<> 'I') then
		ie_tipo_processo_w	:= 'M';
	end if;
	
	insert into pls_guia_plano(	nr_sequencia,		dt_atualizacao,		nm_usuario,
					dt_atualizacao_nrec,	nm_usuario_nrec,	nr_seq_segurado,
					ie_tipo_guia,		ie_situacao,		cd_guia,
					cd_estabelecimento,	ie_tipo_processo,	ie_status,
					dt_solicitacao,		ie_estagio,		nr_seq_plano,	
					dt_cancelamento,	dt_autorizacao,	cd_medico_solicitante,
					nr_seq_prestador,	ie_carater_internacao,	cd_guia_principal,
					nr_seq_conselho,	dt_emissao,		nr_seq_uni_exec,
					ie_tipo_atend_tiss,	nr_seq_motivo_cancel,	nr_seq_motivo_lib,
					ds_indicacao_clinica,	ds_observacao,		nr_seq_guia_principal,
					nm_usuario_atendimento,	nr_seq_atend_pls,	nr_seq_evento_atend,
					nm_usuario_solic,	ie_origem_solic,	dt_duplicacao_guia,
					cd_guia_manual,		nr_seq_clinica,		ie_regime_internacao,
					nr_seq_tipo_acomodacao,	qt_dia_solicitado,	cd_especialidade,
					ie_recem_nascido,	dt_nasc_recem_nascido,	nm_recem_nascido,
					ie_tipo_intercambio,	ie_anexo_guia,		cd_guia_prestador,
					nr_seq_cbo_saude,	ie_tipo_consulta,	dt_internacao_sugerida,
					ie_regime_atendimento,	ie_cobertura_especial,	ie_saude_ocupacional)
				(SELECT	nr_seq_guia_plano_w,	clock_timestamp(),		nm_usuario_p,
					clock_timestamp(),		nm_usuario_p,		nr_seq_segurado,
					ie_tipo_guia,		'U',			CASE WHEN coalesce(cd_guia_w::text, '') = '' THEN  cd_guia  ELSE cd_guia_w END ,
					cd_estabelecimento,	ie_tipo_processo_w,	2,
					clock_timestamp(),		7,			pls_obter_produto_benef(nr_seq_segurado, clock_timestamp()),
					null,			null,			cd_medico_solicitante,
					nr_seq_prestador,	ie_carater_internacao,	cd_guia_principal,
					nr_seq_conselho,	dt_emissao,		nr_seq_uni_exec,
					ie_tipo_atend_tiss,	null,			nr_seq_motivo_lib,
					ds_indicacao_clinica,	ds_observacao,		nr_seq_guia_principal,
					nm_usuario_p,		nr_seq_atend_pls,	nr_seq_evento_atend,
					nm_usuario_p,		'M',			clock_timestamp(),
					cd_guia_manual,		nr_seq_clinica,		ie_regime_internacao,
					nr_seq_tipo_acomodacao,	qt_dia_solicitado,	cd_especialidade,
					ie_recem_nascido,	dt_nasc_recem_nascido,	nm_recem_nascido,
					ie_tipo_intercambio,	ie_anexo_guia,		cd_guia_prestador,
					nr_seq_cbo_saude,	ie_tipo_consulta,	dt_internacao_sugerida,
					ie_regime_atendimento,	ie_cobertura_especial,	ie_saude_ocupacional
				from	pls_guia_plano a
				where 	a.nr_sequencia = nr_seq_guia_p);
				
	select	cd_guia,
		--cd_guia_principal,
		cd_guia_prestador
	into STRICT	cd_guia_atual_w,
		--cd_guia_referencia_w,
		cd_guia_prestador_w
	from	pls_guia_plano
	where	nr_sequencia = nr_seq_guia_plano_w;

	cd_guia_referencia_w := cd_guia_atual_w;

	--Traz todos os caras de cima de dentro da guia antiga (QU, RA, OP)
	for r_c07_w in C07 loop

		nr_seq_anexo_guia_orig_w := r_c07_w.nr_sequencia;

		select 	nextval('pls_lote_anexo_guias_aut_seq')
		into STRICT	nr_seq_anexo_guia_nova_w
		;

		insert into pls_lote_anexo_guias_aut(cd_ans, cd_cnes, cd_guia,
			cd_guia_prestador, cd_guia_referencia, cd_senha,
			cd_usuario_plano, ds_area_irradiada, ds_biometria,
			ds_email_prof_solic, ds_especificacao, ds_justificativa,
			ds_observacao, ds_procedimento_cirurgico, ds_quimioterapia,
			dt_atualizacao, dt_atualizacao_nrec, dt_autorizacao,
			dt_inicio_previsto, dt_quimioterapia, dt_radioterapia,
			dt_real_proc_cirurgico, dt_solicitacao, ie_recem_nascido,
			ie_sexo, ie_status, ie_tipo_anexo,
			nm_beneficiario, nm_profissional_solic, nm_usuario,
			nm_usuario_nrec, nr_campos, nr_ciclo_atual,
			nr_ciclo_previsto, nr_seq_guia, nr_seq_guia_principal,
			nr_seq_lote_anexo, nr_sequencia, nr_telef_prof_solic,
			qt_altura, qt_campo_irradiacao, qt_dias_previsto,
			qt_dose_dia, qt_dose_total, qt_idade_benef,
			qt_intervalo_ciclo, qt_peso, qt_superficie_corporal,
			nr_seq_motivo_exc, nr_dia_ciclo_atual)
		(SELECT	r_c07_w.cd_ans, r_c07_w.cd_cnes, cd_guia_atual_w,
			cd_guia_prestador_w, cd_guia_referencia_w, r_c07_w.cd_senha,
			r_c07_w.cd_usuario_plano, r_c07_w.ds_area_irradiada, r_c07_w.ds_biometria,
			r_c07_w.ds_email_prof_solic, r_c07_w.ds_especificacao, r_c07_w.ds_justificativa,
			r_c07_w.ds_observacao, r_c07_w.ds_procedimento_cirurgico, r_c07_w.ds_quimioterapia,
			clock_timestamp(), clock_timestamp(), r_c07_w.dt_autorizacao,
			r_c07_w.dt_inicio_previsto, r_c07_w.dt_quimioterapia, r_c07_w.dt_radioterapia,
			r_c07_w.dt_real_proc_cirurgico, r_c07_w.dt_solicitacao, r_c07_w.ie_recem_nascido,
			r_c07_w.ie_sexo, r_c07_w.ie_status, r_c07_w.ie_tipo_anexo,
			r_c07_w.nm_beneficiario, r_c07_w.nm_profissional_solic, r_c07_w.nm_usuario,
			r_c07_w.nm_usuario_nrec, r_c07_w.nr_campos, r_c07_w.nr_ciclo_atual,
			r_c07_w.nr_ciclo_previsto, nr_seq_guia_plano_w, r_c07_w.nr_seq_guia_principal,
			r_c07_w.nr_seq_lote_anexo, nr_seq_anexo_guia_nova_w, r_c07_w.nr_telef_prof_solic,
			r_c07_w.qt_altura, r_c07_w.qt_campo_irradiacao, r_c07_w.qt_dias_previsto,
			r_c07_w.qt_dose_dia, r_c07_w.qt_dose_total, r_c07_w.qt_idade_benef,
			r_c07_w.qt_intervalo_ciclo, r_c07_w.qt_peso, r_c07_w.qt_superficie_corporal,
			r_c07_w.nr_seq_motivo_exc, r_c07_w.nr_dia_ciclo_atual
		);

		for r_c11_w in C11 loop

			insert into pls_lote_anexo_diag_aut(cd_diagnostico_imagem, cd_doenca, cd_finalidade_tratamento,
				ds_diagnostico, ds_observacao, ds_plano_terapeutico,
				dt_atualizacao, dt_atualizacao_nrec, dt_diagnostico,
				ie_capacidade_funcional, ie_classificacao, ie_estadia_tumor,
				ie_tipo_diagnostico, ie_tipo_quimioterapia,
				nm_usuario, nm_usuario_nrec, nr_seq_lote_anexo_guia,
				nr_sequencia, ie_tumor, ie_nodulo, ie_metastases)
			(SELECT	r_c11_w.cd_diagnostico_imagem, r_c11_w.cd_doenca, r_c11_w.cd_finalidade_tratamento,
				r_c11_w.ds_diagnostico, r_c11_w.ds_observacao, r_c11_w.ds_plano_terapeutico,
				clock_timestamp(), clock_timestamp(), r_c11_w.dt_diagnostico,
				r_c11_w.ie_capacidade_funcional, r_c11_w.ie_classificacao, r_c11_w.ie_estadia_tumor,
				r_c11_w.ie_tipo_diagnostico, r_c11_w.ie_tipo_quimioterapia,
				r_c11_w.nm_usuario, r_c11_w.nm_usuario_nrec, nr_seq_anexo_guia_nova_w,
				nextval('pls_lote_anexo_diag_aut_seq'), r_c11_w.ie_tumor, r_c11_w.ie_nodulo, r_c11_w.ie_metastases
			);
		end loop;
	end loop;

	begin
		select	ie_tipo_guia,
			dt_solicitacao,
			nr_seq_segurado,
			cd_medico_solicitante,
			nr_seq_prestador,
			cd_guia
		into STRICT	ie_tipo_guia_nov_w,
			dt_solicitacao_nov_w,
			nr_seq_segurado_nov_w,
			cd_medico_solic_nov_w,
			nr_seq_prestador_nov_w,
			cd_guia_nov_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_plano_w;
	exception
	when others then
		ie_tipo_guia_nov_w	:= 'X';
		dt_solicitacao_nov_w	:= clock_timestamp();
		nr_seq_segurado_nov_w	:= 0;
		cd_medico_solic_nov_w	:= 'X';
		nr_seq_prestador_nov_w	:= 0;
		cd_guia_nov_w		:= 'X';
	end;

	ie_regra_dupl_guia_w	:= pls_obter_se_regra_guia_duplic(	nr_seq_guia_plano_w, ie_tipo_guia_nov_w, dt_solicitacao_nov_w,
									nr_seq_segurado_nov_w, cd_medico_solic_nov_w, nr_seq_prestador_nov_w,
									cd_guia_nov_w);

	if (ie_regra_dupl_guia_w	= 'S') then
		begin
			select	nr_seq_motivo_cancel
			into STRICT	nr_seq_motivo_cancel_w
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_p;
		exception
		when others then
			nr_seq_motivo_cancel_w	:= 0;
		end;

		if (coalesce(nr_seq_motivo_cancel_w,0)	= 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(190581);
		end if;
	end if;

	--C05 traz todos os procedimentos de fora, da guia antiga
	for r_c05_w in C05 loop
		--Id do procedimento de fora da nova guia (procedimento do processamento atual)
		select	nextval('pls_guia_plano_proc_seq')
		into STRICT	nr_seq_proc_anexo_nov_w
		;

		insert into pls_guia_plano_proc(nr_sequencia, dt_atualizacao, nm_usuario,
			 dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_guia,
			 cd_procedimento, ie_origem_proced, qt_autorizada,
			 qt_solicitada, ie_status, dt_liberacao,
			 nm_usuario_liberacao, cd_procedimento_imp, ds_procedimento_imp,
			 qt_solicitada_imp, nr_seq_prorrog, cd_tipo_tabela_imp,
			 nr_seq_tipo_limitacao, nr_seq_regra_liberacao, nr_seq_motivo_exc,
			 qt_utilizado, ie_cobranca_prevista, ie_utilizado,
			 ie_origem_inclusao, ie_tipo_anexo, vl_total_pacote,
			 cd_procedimento_ptu, ds_procedimento_ptu, ie_pacote_ptu, 
			 ie_tipo_tabela)
		(SELECT	nr_seq_proc_anexo_nov_w, clock_timestamp(), nm_usuario_p,
			 clock_timestamp(), nm_usuario_p, nr_seq_guia_plano_w,
			 r_c05_w.cd_procedimento, r_c05_w.ie_origem_proced, 0,
			 r_c05_w.qt_solicitada, 'U', r_c05_w.dt_liberacao,
			 r_c05_w.nm_usuario_liberacao, r_c05_w.cd_procedimento_imp, r_c05_w.ds_procedimento_imp,
			 r_c05_w.qt_solicitada_imp, r_c05_w.nr_seq_prorrog, r_c05_w.cd_tipo_tabela_imp,
			 r_c05_w.nr_seq_tipo_limitacao, r_c05_w.nr_seq_regra_liberacao, r_c05_w.nr_seq_motivo_exc,
			 r_c05_w.qt_utilizado, null, 'N',
			 'T', r_c05_w.ie_tipo_anexo, r_c05_w.vl_total_pacote, 
			 r_c05_w.cd_procedimento_ptu, r_c05_w.ds_procedimento_ptu, r_c05_w.ie_pacote_ptu,
			 r_c05_w.ie_tipo_tabela
		);

		begin
			select	nr_sequencia
			into STRICT	nr_seq_lote_anexo_guia_w
			from	pls_lote_anexo_guias_aut
			where	nr_seq_guia	= nr_seq_guia_plano_w
			and	ie_tipo_anexo	= r_c05_w.ie_tipo_anexo;
		exception
		when others then
			nr_seq_lote_anexo_guia_w := null;
		end;

		if (nr_seq_lote_anexo_guia_w IS NOT NULL AND nr_seq_lote_anexo_guia_w::text <> '') then
			--Faz o insert do procedimento de dentro, com o id do procedimento de fora criado logo ali acima e com o id do cara de cima de dentro(QU, RA, OP)
			insert into pls_lote_anexo_proc_aut(cd_procedimento, cd_tipo_tabela, ds_procedimento,
				dt_atualizacao, dt_atualizacao_nrec, dt_prev_realizacao,
				ie_origem_proced, ie_status, nm_usuario,
				nm_usuario_nrec, nr_seq_plano_proc, nr_sequencia,
				qt_solicitado, nr_seq_lote_anexo_guia, nr_seq_motivo_exc)
			(SELECT cd_procedimento, cd_tipo_tabela, ds_procedimento,
				clock_timestamp(), clock_timestamp(), dt_prev_realizacao,
				ie_origem_proced, ie_status, nm_usuario,
				nm_usuario_nrec, nr_seq_proc_anexo_nov_w, nextval('pls_lote_anexo_proc_aut_seq'),
				qt_solicitado, nr_seq_lote_anexo_guia_w, r_c05_w.nr_seq_motivo_exc
			from	pls_lote_anexo_proc_aut
			where	nr_seq_plano_proc	= r_c05_w.nr_sequencia);
		end if;
	end loop;

	open C01;
	loop
	fetch C01 into
		nr_seq_guia_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		CALL pls_atualiza_valor_proc_aut(nr_seq_guia_proc_w, 'A', nm_usuario_p);
		end;
	end loop;
	close C01;

	--Retorna os materiais cadastrados para a antiga guia
	for r_c10_w in C10 loop

		select	nextval('pls_guia_plano_mat_seq')
		into STRICT	nr_seq_mat_anexo_nov_w
		;

		--Insere material de fora para a nova guia
		insert into pls_guia_plano_mat(nr_sequencia, dt_atualizacao, nm_usuario,
			 dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_guia,
			 qt_solicitada, qt_autorizada, ie_status,
			 dt_liberacao, nm_usuario_liberacao, cd_material_imp,
			 ds_material_imp, qt_solicitada_imp, nr_seq_prorrog,
			 cd_tipo_tabela_imp, nr_seq_motivo_exc, nr_seq_material,
			 ie_utilizado, qt_utilizado, nr_seq_prest_fornec,
			 ie_origem_inclusao, nr_seq_material_forn, vl_material,
			 ie_tipo_anexo, cd_material_ptu, ds_material_ptu, 
			 ie_cobranca_prevista)
		(SELECT	 nr_seq_mat_anexo_nov_w, clock_timestamp(), nm_usuario_p,
			 clock_timestamp(), nm_usuario_p, nr_seq_guia_plano_w,
			 r_c10_w.qt_solicitada, 0, 'U',
			 r_c10_w.dt_liberacao, r_c10_w.nm_usuario_liberacao, r_c10_w.cd_material_imp,
			 r_c10_w.ds_material_imp, r_c10_w.qt_solicitada_imp, r_c10_w.nr_seq_prorrog,
			 r_c10_w.cd_tipo_tabela_imp, r_c10_w.nr_seq_motivo_exc, r_c10_w.nr_seq_material,
			 'N', r_c10_w.qt_utilizado, r_c10_w.nr_seq_prest_fornec,
			 'T', r_c10_w.nr_seq_material_forn, r_c10_w.vl_material, 
			 r_c10_w.ie_tipo_anexo, r_c10_w.cd_material_ptu, r_c10_w.ds_material_ptu,
			 null
		);

		begin
			select	nr_sequencia
			into STRICT	nr_seq_lote_anexo_guia_w
			from	pls_lote_anexo_guias_aut
			where	nr_seq_guia	= nr_seq_guia_plano_w
			and	ie_tipo_anexo	= r_c10_w.ie_tipo_anexo;
		exception
		when others then
			nr_seq_lote_anexo_guia_w	:= 0;
		end;

		if	nr_seq_lote_anexo_guia_w > 0 then
			--Insere registro material de dentro para a nova guia com o id do cara de cima de dentro (QU, RA, OP), buscando pelos materias anexo com o id do material da guia.
			insert into pls_lote_anexo_mat_aut(cd_aut_funcionamento, cd_material, cd_ref_fabricante_imp,
				cd_tipo_tabela_imp, ds_material, ds_observacao,
				dt_atualizacao, dt_atualizacao_nrec, dt_prevista,
				ie_frequencia_dose, ie_opcao_fabricante, ie_status,
				ie_via_administracao, nm_usuario, nm_usuario_nrec,
				nr_registro_anvisa, nr_seq_material, nr_seq_plano_mat,
				nr_sequencia, qt_autorizado, qt_solicitado,
				vl_unit_material_aut, vl_unit_material_solic, nr_seq_lote_anexo_guia,
				nr_seq_motivo_exc, qt_unidade_medida, qt_dosagem_total)
			(SELECT cd_aut_funcionamento, cd_material, cd_ref_fabricante_imp,
				cd_tipo_tabela_imp, ds_material, ds_observacao,
				clock_timestamp(), clock_timestamp(), dt_prevista,
				ie_frequencia_dose, ie_opcao_fabricante, ie_status,
				ie_via_administracao, nm_usuario, nm_usuario_nrec,
				nr_registro_anvisa, nr_seq_material, nr_seq_mat_anexo_nov_w,
				nextval('pls_lote_anexo_mat_aut_seq'), qt_autorizado, qt_solicitado,
				vl_unit_material_aut, vl_unit_material_solic, nr_seq_lote_anexo_guia_w,
				r_c10_w.nr_seq_motivo_exc, qt_unidade_medida, qt_dosagem_total
			from	pls_lote_anexo_mat_aut
			where	nr_seq_plano_mat	= r_c10_w.nr_sequencia);
		end if;

	end loop;

	open C02;
	loop
	fetch C02 into
		nr_seq_guia_mat_w,
		nr_seq_prest_fornec_w,
		nr_seq_material_forn_w,
		vl_material_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (nr_seq_material_forn_w IS NOT NULL AND nr_seq_material_forn_w::text <> '') then
			begin
				select	nr_seq_material
				into STRICT	nr_seq_material_w
				from	pls_guia_plano_mat
				where	nr_sequencia	= nr_seq_guia_mat_w;
			exception
			when others then
				nr_seq_material_w	:= 0;
			end;

			if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
				begin
					select	max(a.vl_preco)
					into STRICT	vl_preco_w
					from	pls_material_fornec_preco a,
						pls_material_fornec b
					where	a.nr_seq_mat_fornec	= b.nr_sequencia
					and	b.nr_seq_material	= nr_seq_material_w
					and	b.nr_seq_fornecedor	= nr_seq_material_forn_w
					and	a.dt_inicio_vigencia	< clock_timestamp()
					and (coalesce(a.dt_fim_vigencia::text, '') = '' 	or a.dt_fim_vigencia > clock_timestamp());
				exception
				when others then
					vl_preco_w	:= 0;
				end;
			end if;

			update	pls_guia_plano_mat
			set	vl_material	= vl_preco_w,
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where	nr_sequencia	= nr_seq_guia_mat_w;

		elsif (nr_seq_prest_fornec_w IS NOT NULL AND nr_seq_prest_fornec_w::text <> '') then
			begin
				select	cd_cgc
				into STRICT	cd_cgc_w
				from	pls_prestador
				where	nr_sequencia = nr_seq_prest_fornec_w;
			exception
			when others then
				cd_cgc_w	:= 'X';
			end;

			if (coalesce(cd_cgc_w,'X')	<> 'X') then
				begin
					select	max(cd_fornecedor)
					into STRICT	cd_fornecedor_w
					from	pls_fornec_mat_fed_sc
					where	cd_cgc		= cd_cgc_w
					and	ie_situacao	= 'A';
				exception
				when others then
					cd_fornecedor_w	:= 0;
				end;

				if (coalesce(cd_fornecedor_w,0)	<> 0) then
					begin
						select	nr_seq_material
						into STRICT	nr_seq_material_w
						from	pls_guia_plano_mat
						where	nr_sequencia	= nr_seq_guia_mat_w;
					exception
					when others then
						nr_seq_material_w	:= 0;
					end;

					if (coalesce(nr_seq_material_w,0)	<> 0) then

						vl_preco_w	:= 0;

						open C04;
						loop
						fetch C04 into
							dt_preco_w,
							vl_preco_w;
						EXIT WHEN NOT FOUND; /* apply on C04 */
						end loop;
						close C04;

						if (coalesce(vl_preco_w,0)	<> 0) then
							update	pls_guia_plano_mat
							set	vl_material	= vl_preco_w,
								nm_usuario	= nm_usuario_p,
								dt_atualizacao	= clock_timestamp()
							where	nr_sequencia	= nr_seq_guia_mat_w;
						end if;
					end if;
				end if;
			end if;
		elsif (coalesce(vl_material_w::text, '') = '') then
			CALL pls_atualiza_valor_mat_aut(nr_seq_guia_mat_w, 'A', nm_usuario_p);
		end if;
		end;
	end loop;
	close C02;

	insert into pls_diagnostico(cd_doenca, cd_doenca_imp, ds_diagnostico,
		 ds_diagnostico_imp, dt_atualizacao, dt_atualizacao_nrec,
		 ie_classificacao, ie_classificacao_imp, ie_indicacao_acidente,
		 ie_indicacao_acidente_imp, ie_tipo_doenca, ie_tipo_doenca_imp,
		 nm_tabela_imp, nm_usuario, nm_usuario_nrec, nr_seq_guia, nr_sequencia)
	(SELECT cd_doenca, cd_doenca_imp, ds_diagnostico,
		 ds_diagnostico_imp, clock_timestamp(), clock_timestamp(),
		 ie_classificacao, ie_classificacao_imp, ie_indicacao_acidente,
		 ie_indicacao_acidente_imp, ie_tipo_doenca, ie_tipo_doenca_imp,
		 nm_tabela_imp, nm_usuario_p, nm_usuario_p, nr_seq_guia_plano_w, nextval('pls_diagnostico_seq')
	from	 pls_diagnostico
	where	 nr_seq_guia	= nr_seq_guia_p);
	
	--Retorna os caras de cima de dentro da guia antiga

	/*for r_c07_w in C07 loop

		nr_seq_anexo_guia_orig_w := r_c07_w.nr_sequencia;
		
		for r_c12_w in C12 loop
		
			for r_c11_w in C11 loop
				insert into pls_lote_anexo_diag_aut
					(cd_diagnostico_imagem, cd_doenca, cd_finalidade_tratamento,
					ds_diagnostico, ds_observacao, ds_plano_terapeutico,
					dt_atualizacao, dt_atualizacao_nrec, dt_diagnostico,
					ie_capacidade_funcional, ie_classificacao, ie_estadia_tumor,
					ie_tipo_diagnostico, ie_tipo_quimioterapia,
					nm_usuario, nm_usuario_nrec, nr_seq_lote_anexo_guia,
					nr_sequencia)
				(select	r_c11_w.cd_diagnostico_imagem, r_c11_w.cd_doenca, r_c11_w.cd_finalidade_tratamento,
					r_c11_w.ds_diagnostico, r_c11_w.ds_observacao, r_c11_w.ds_plano_terapeutico,
					sysdate, sysdate, r_c11_w.dt_diagnostico,
					r_c11_w.ie_capacidade_funcional, r_c11_w.ie_classificacao, r_c11_w.ie_estadia_tumor,
					r_c11_w.ie_tipo_diagnostico, r_c11_w.ie_tipo_quimioterapia,
					r_c11_w.nm_usuario, r_c11_w.nm_usuario_nrec, r_c12_w.nr_sequencia,
					pls_lote_anexo_diag_aut_seq.nextval
				from	dual);
			end loop;
		end loop;
	end loop;*/
	insert into pls_guia_plano_anexo(nr_sequencia, nr_seq_guia, dt_anexo,
		ds_anexo, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, ie_liberado_portal,
		ie_origem_anexo, ie_tipo_login_acesso)
	(SELECT nextval('pls_guia_plano_anexo_seq'), nr_seq_guia_plano_w, dt_anexo,
		ds_anexo, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, ie_liberado_portal,
		ie_origem_anexo, ie_tipo_login_acesso
	from	pls_guia_plano_anexo
	where	nr_seq_guia	= nr_seq_guia_p);

	select count(1)
	into STRICT 	qt_registro_anexo_w
	from	pls_guia_plano guia,
		pls_auditoria auditoria,
		pls_auditoria_anexo audAnexo
	where	auditoria.nr_seq_guia 		= guia.nr_sequencia
	and	audAnexo.nr_seq_auditoria 	= auditoria.nr_sequencia
	and	guia.nr_sequencia 		= nr_seq_guia_p;

	--Somente realiza "copia" se houver registros
	if (qt_registro_anexo_w > 0 ) then
		--Realiza insert na tabela pls_guia_plano_anexo com as informacoes contidas na pls_auditoria_anexo
		insert into pls_guia_plano_anexo(nr_sequencia, nr_seq_guia, dt_anexo,
			ds_anexo, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, ie_liberado_portal,
			ie_origem_anexo, ie_tipo_login_acesso)
		(SELECT  nextval('pls_guia_plano_anexo_seq'), nr_seq_guia_plano_w, audAnexo.dt_anexo,
			audAnexo.ds_anexo, clock_timestamp(), audAnexo.nm_usuario,
			clock_timestamp(), nm_usuario_p, audAnexo.ie_liberado_portal,
			audAnexo.ie_origem_anexo, audAnexo.ie_tipo_login_acesso
		  from  pls_guia_plano guia,
			pls_auditoria auditoria,
			pls_auditoria_anexo audAnexo
		  where auditoria.nr_seq_guia 		= guia.nr_sequencia
		  and   audAnexo.nr_seq_auditoria 	= auditoria.nr_sequencia
		  and	guia.nr_sequencia 		= nr_seq_guia_p);
	end if;

	open C03;
	loop
	fetch C03 into
		nr_seq_historico_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		insert into pls_guia_plano_historico(nr_sequencia, nr_seq_guia, ie_tipo_log,
			dt_historico, dt_atualizacao, nm_usuario,
			ds_observacao, ie_origem_historico, ie_tipo_historico)
		(SELECT nextval('pls_guia_plano_historico_seq'), nr_seq_guia_plano_w, ie_tipo_log,
			dt_historico,clock_timestamp(),nm_usuario,
			ds_observacao, ie_origem_historico, ie_tipo_historico
		from	pls_guia_plano_historico
		where	nr_sequencia	= nr_seq_historico_w);
		end;
	end loop;
	close C03;

	CALL pls_guia_gravar_historico(nr_seq_guia_p, 8, 'Guia duplicada gerando a guia: '||nr_seq_guia_plano_w, null, nm_usuario_p);
	CALL pls_guia_gravar_historico(nr_seq_guia_plano_w, 8, 'Guia duplicada a partir da guia: '||nr_seq_guia_p, null, nm_usuario_p);
	nr_seq_guia_plano_p := nr_seq_guia_plano_w;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_guia_plano ( nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_guia_plano_p INOUT bigint) FROM PUBLIC;

