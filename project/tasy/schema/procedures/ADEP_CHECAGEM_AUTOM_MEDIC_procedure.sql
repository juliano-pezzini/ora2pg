-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adep_checagem_autom_medic (nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w			bigint;
cd_grupo_material_w		bigint;
cd_subgrupo_material_w	bigint;
cd_classe_material_w	bigint;
ie_via_aplicacao_w		varchar(100);
ie_checar_w				varchar(1) := 'N';
nr_sequencia_w			bigint;
nr_seq_horario_w		bigint;
nr_atendimento_w		bigint;
cd_setor_Atendimento_w	bigint;
dt_horario_w			timestamp;
ds_texto_aux_w			varchar(255);
dt_prescricao_w			timestamp;
ie_tipo_item_w			varchar(10);

c01 CURSOR FOR
SELECT	cd_material,
		nr_sequencia,
		CASE WHEN ie_agrupador=2 THEN 'MAT'  ELSE 'M' END
from	prescr_material
where	nr_prescricao	= nr_prescricao_p
and		ie_agrupador	in (1,2);
					
c02 CURSOR FOR
SELECT	nr_sequencia,
		dt_horario
from	prescr_mat_hor
where	nr_prescricao	= nr_prescricao_p
and		nr_seq_material	= nr_sequencia_w
and		cd_material		= cd_material_w;


BEGIN

select	max(nr_atendimento),
		max(cd_setor_Atendimento),
		max(dt_prescricao)
into STRICT	nr_atendimento_w,
		cd_setor_Atendimento_w,
		dt_prescricao_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

ds_texto_aux_w	:= wheb_mensagem_pck.get_texto(330416);

CALL gravar_Log_tasy(90302,
	' nr_prescricao_p = ' || nr_prescricao_p || chr(10) ||
	' nr_atendimento_w = ' || nr_atendimento_w || chr(10) ||
	' cd_setor_Atendimento_w = ' || cd_setor_Atendimento_w || chr(10) ||
	' dt_prescricao_w = ' || dt_prescricao_w || chr(10) ||
	' Abertura C01 ADEP_CHECAGEM_AUTOM_MEDIC',
	nm_usuario_p);

open C01;
loop
fetch C01 into	
	cd_material_w,
	nr_sequencia_w,
	ie_tipo_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	CALL gravar_Log_tasy(90302,
		' nr_prescricao_p = ' || nr_prescricao_p || chr(10) ||
		' cd_material_w = ' || cd_material_w || chr(10) ||
		' nr_sequencia_w = ' || nr_sequencia_w || chr(10) ||
		' ie_tipo_item_w = ' || ie_tipo_item_w || chr(10) ||
		' Abertura C02 ADEP_CHECAGEM_AUTOM_MEDIC',
		nm_usuario_p);

	open C02;
	loop
	fetch C02 into	
		nr_seq_horario_w,
		dt_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */

		CALL gravar_Log_tasy(90302,
			' nr_prescricao_p = ' || nr_prescricao_p || chr(10) ||
			' nr_seq_horario_w = ' || nr_seq_horario_w || chr(10) ||
			' dt_horario_w = ' || dt_horario_w || chr(10) ||
			' Valores C02 ADEP_CHECAGEM_AUTOM_MEDIC',
			nm_usuario_p);
		
		update	prescr_mat_hor
		set		dt_fim_horario 	= dt_prescricao_w,
				nm_usuario		= nm_usuario_p,
				nm_usuario_adm	= nm_usuario_p,			
				dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_horario_w
		and		coalesce(dt_fim_horario::text, '') = ''
		and		coalesce(dt_suspensao::text, '') = '';
		
		CALL gerar_alter_hor_prescr_adep(nr_atendimento_w, ie_tipo_item_w, cd_material_w, nr_prescricao_p, nr_sequencia_w, nr_seq_horario_w, dt_horario_w, 3, null, ds_texto_aux_w, null, nm_usuario_p, dt_prescricao_w);
		
	end loop;
	close C02;
	
end loop;
close C01;	

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_checagem_autom_medic (nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

