-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_contab_onl_lote_receita ((nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, nm_usuario_p text, ie_operacao_p bigint default 1, ie_commit_p text default 'S', nr_seq_nota_p bigint default null, dt_referencia_p timestamp default null) is /*
===============================================================================
Purpose: Indentacao

Remarks: n/a

Who         When            What
----------  -----------     --------------------------------------------------
chjreinert  13/mai/2021     OS 2444975 - Indentacao

===============================================================================
*/
 cd_historico_pad_w bigint) RETURNS varchar AS $body$
DECLARE

								
	nr_sequencia_w	nota_fiscal.nr_sequencia%type;
	cd_serie_nf_w	nota_fiscal.cd_serie_nf%type;
	ds_retorno_w	varchar(4000) := ' ';

	c01 CURSOR FOR
	SELECT	a.nr_sequencia,	
			a.cd_serie_nf
	from	nota_fiscal a
	where (nr_seq_protocolo_p 	<> 0)
	and (a.nr_seq_protocolo 	= nr_seq_protocolo_p)
	and		a.ie_situacao = '1'
	and (nr_interno_conta_p	= a.nr_interno_conta or
			nr_interno_conta_p	= 0)
	
union

	SELECT	a.nr_sequencia,	
			a.cd_serie_nf
	from	nota_fiscal a
	where	nr_interno_conta_p	= a.nr_interno_conta
	and		a.ie_situacao = '1'
	and		nr_interno_conta_p	<> 0
	
union

	select	a.nr_sequencia,	
			a.cd_serie_nf
	from	nota_fiscal a,
			protocolo_convenio b
	where	a.nr_seq_lote_prot	= b.nr_seq_lote_protocolo
	and		nr_seq_protocolo_p	<> 0
	and		a.ie_situacao = '1'
	and		b.nr_seq_protocolo	= nr_seq_protocolo_p
	order by nr_sequencia;

	
  vet RECORD;

BEGIN

	open c01;
	loop
	fetch c01 into 	nr_sequencia_w,
					cd_serie_nf_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		
		if (ie_info_p = 'CD_SERIE') then
			if	((length(ds_retorno_w) < 3600) and (cd_serie_nf_w IS NOT NULL AND cd_serie_nf_w::text <> '')) then
				ds_retorno_w := ds_retorno_w || cd_serie_nf_w ||', ';
			end if;	
		end if;
		
		if (ie_info_p = 'NR_SEQUENCIA') then
			if	((length(ds_retorno_w) < 3600) and (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '')) then
				ds_retorno_w := ds_retorno_w || nr_sequencia_w ||', ';
			end if;	
		end if;

	end loop;
	close c01;								
									
	return substr(ds_retorno_w,1,length(ds_retorno_w) - 2);
end;

begin

/* Trata Estabelecimento */

if (coalesce(nr_seq_protocolo_p, 0) <> 0) then
    begin
    select  a.cd_estabelecimento,
            a.dt_mesano_referencia,
            coalesce(a.nr_seq_lote_protocolo, 0),
            a.dt_entrega_convenio,
            a.nr_protocolo,
            substr(obter_mes_extenso(substr(obter_desc_mes_ano(a.dt_mesano_referencia, 'N'), 1, 2), 'A'), 1, 20) || '/' || substr(to_char(a.dt_mesano_referencia, 'dd/mm/yyyy'), 7, 4),
            substr(obter_desc_mes_ano(a.dt_mesano_referencia, 'AB'), 1, 20),
            a.dt_mesano_referencia,
            a.cd_convenio,
            b.ie_tipo_convenio
    into STRICT    cd_estabelecimento_w,
            dt_referencia_w,
            nr_seq_lote_w,
            dt_entrega_convenio_w,
            nr_protocolo_w,
            ds_mesano_referencia_w,
            ds_mesano_referencia_abrev_w,
            dt_mesano_referencia_compl_w,
            cd_convenio_w,
            ie_tipo_convenio_w
    from    protocolo_convenio a,
            convenio b
    where   a.nr_seq_protocolo = nr_seq_protocolo_p
    and     a.cd_convenio = b.cd_convenio;
    end;
elsif (coalesce(nr_interno_conta_p, 0) <> 0) then
    begin
    select  a.cd_estabelecimento,
            a.dt_mesano_referencia,
            a.cd_convenio_parametro,
            b.ie_tipo_convenio
    into STRICT    cd_estabelecimento_w,
            dt_referencia_w,
            cd_convenio_w,
            ie_tipo_convenio_w
    from    conta_paciente a,
            convenio b
    where   a.nr_interno_conta = nr_interno_conta_p
    and     a.cd_convenio_parametro = b.cd_convenio;
    end;
end if;

if (nr_seq_nota_p IS NOT NULL AND nr_seq_nota_p::text <> '') then
    select  a.dt_emissao
    into STRICT    dt_referencia_w
    from    nota_fiscal a
    where   a.nr_sequencia = nr_seq_nota_p;
end if;

if (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then
    dt_referencia_w := ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p);
end if;

-- Tipo Lote Contabil => 6 RECEITA
cd_tipo_lote_contabil_w := 6;
cd_empresa_w            := obter_empresa_estab(cd_estabelecimento_w);

if coalesce(ie_operacao_p, 1) = 1 then

    -- Busca LOTE CONTABIL
    begin
    nr_lote_contabil_w := ctb_online_pck.get_lote_contabil(cd_tipo_lote_contabil_p => cd_tipo_lote_contabil_w,
                                                           cd_estabelecimento_p    => cd_estabelecimento_w,
                                                           dt_referencia_p         => dt_referencia_w,
                                                           nm_usuario_p            => nm_usuario_p,
                                                           cd_convenio_p           => cd_convenio_w,
                                                           ie_tipo_convenio_p      => ie_tipo_convenio_w);
    exception
        when no_data_found then
            ds_err_msg  := SUBSTR(SQLERRM, 1, 4000);
            CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_err_msg);
        when others then
            ds_err_msg  := SUBSTR(SQLERRM, 1, 4000);
            CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_err_msg);
    end;

    begin
    select x.*
    into STRICT   ctb_param_lote_receita_w
    from (SELECT a.*
            from   ctb_param_lote_receita a
            where  a.cd_empresa = cd_empresa_w
            and    coalesce(a.cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w
            order  by coalesce(a.cd_estab_exclusivo, 0) desc) x LIMIT 1;
    exception
        when others then
            ctb_param_lote_receita_w := null;
    end;

    begin
    select x.*
    into STRICT   ctb_param_lote_repasse_w
    from (SELECT a.*
            from   ctb_param_lote_repasse a
            where  a.cd_empresa = cd_empresa_w
            and    coalesce(a.cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w
            order  by coalesce(a.cd_estab_exclusivo, 0) desc) x LIMIT 1;
    exception
        when others then
            ctb_param_lote_repasse_w := null;
    end;

    if (ctb_param_lote_receita_w.cd_conta_fixa_receita IS NOT NULL AND ctb_param_lote_receita_w.cd_conta_fixa_receita::text <> '') then
        begin
        select cd_conta_contabil
        into STRICT   cd_conta_fixa_receita_w
        from   conta_contabil a
        where  a.ie_situacao = 'A'
        and    a.cd_empresa = cd_empresa_w
        and    a.cd_conta_contabil = ctb_param_lote_receita_w.cd_conta_fixa_receita;
        exception
            when others then
                cd_conta_fixa_receita_w := null;
        end;
    end if;

    dt_referencia_lote_w := trunc(dt_referencia_w, 'dd');
    dt_mesano_w          := somente_numero(to_char(dt_referencia_w, 'MMYYYY'));
    dt_referencia_w      := trunc(dt_referencia_w, 'mm');

    select max(cd_estab_financeiro),
           max(nm_fantasia_estab)
    into STRICT   cd_estab_financeiro_w,
           nm_estabelecimento_w
    from   estabelecimento
    where  cd_estabelecimento = cd_estabelecimento_w;

    cd_historico_pad_w := ctb_param_lote_receita_w.cd_historico;

    CALL ctb_online_pck.definir_regra_lote_esta_dif(cd_tipo_lote_contabil_p => cd_tipo_lote_contabil_w,
                                               cd_estab_origem_p => cd_estabelecimento_w);

    ie_permite_estab_dif_w := ctb_online_pck.get_permite_estab_dif(cd_tipo_lote_contabil_p => cd_tipo_lote_contabil_w,
                                                                   cd_estab_origem_p => cd_estabelecimento_w);
    cd_conta_transitoria_w := ctb_online_pck.get_conta_transitoria_estab(cd_tipo_lote_contabil_p => cd_tipo_lote_contabil_w,
                                                                   cd_estab_origem_p => cd_estabelecimento_w);
    cd_historico_ct_w      := ctb_online_pck.get_historico_transit_estab(cd_tipo_lote_contabil_p => cd_tipo_lote_contabil_w,
                                                                   cd_estab_origem_p => cd_estabelecimento_w);

    ie_data_lote_w := obter_param_usuario(135, 3, 0, nm_usuario_p, cd_estabelecimento_w, ie_data_lote_w);

    nm_agrupador_w := coalesce(trim(both obter_agrupador_contabil(6)), 'NR_INTERNO_CONTA');

    nm_atrib_agrupador_rep_w := coalesce(trim(both obter_agrupador_contabil(14)), 'NR_ATENDIMENTO');

    open c_conta_paciente;
    loop
        fetch c_conta_paciente
            into c_conta_paciente_w;
        EXIT WHEN NOT FOUND; /* apply on c_conta_paciente */
        begin
        nr_interno_conta_w := c_conta_paciente_w.nr_interno_conta;

        select coalesce(max(nr_sequencia),0)
        into STRICT   nr_ctb_doc_conta_pac_w
        from   ctb_documento
        where  cd_tipo_lote_contabil = 6
        and    nr_documento = nr_interno_conta_w
        and    nm_tabela = 'CONTA_PACIENTE';

        if (nr_ctb_doc_conta_pac_w = 0) then
            begin
                CALL ctb_concil_financeira_pck.ctb_gravar_documento(cd_estabelecimento_p    => cd_estabelecimento_w,
                                                               dt_competencia_p        => c_conta_paciente_w.dt_mesano_referencia,
                                                               cd_tipo_lote_contabil_p => 6,
                                                               nr_seq_trans_financ_p   => null,
                                                               nr_seq_info_p           => 6,
                                                               nr_documento_p          => nr_interno_conta_w,
                                                               nr_seq_doc_compl_p      => nr_seq_protocolo_p,
                                                               nr_doc_analitico_p      => cd_convenio_w,
                                                               vl_movimento_p          => c_conta_paciente_w.vl_conta,
                                                               nm_tabela_p             => 'CONTA_PACIENTE',
                                                               nm_atributo_p           => 'NR_INTERNO_CONTA',
                                                               nm_usuario_p            => nm_usuario_p);
                select max(a.nr_sequencia)
                into STRICT   nr_ctb_doc_conta_pac_w
                from   ctb_documento a
                where  a.cd_tipo_lote_contabil = 6
                and    a.nr_documento = nr_interno_conta_w
                and    a.nm_tabela = 'CONTA_PACIENTE';
            end;
        end if;

        if (ds_inconsistencia_w IS NOT NULL AND ds_inconsistencia_w::text <> '') then
            update  ctb_documento
            set     ds_inconsistencia   = substr(replace(ds_inconsistencia_w,'#@',null),1,4000),
                    dt_atualizacao      = clock_timestamp(),
                    nm_usuario          = nm_usuario_p
            where   nr_sequencia        = nr_ctb_doc_conta_pac_w;

            commit;
        else
        begin
            CALL wheb_usuario_pck.set_ie_lote_contabil('S');

            if (ctb_param_lote_receita_w.ie_contab_desconto_rec = 'S') then
                begin
                    update proc_paciente_valor a
                    set    a.nr_lote_contabil = nr_lote_contabil_w
                    where  coalesce(a.nr_lote_contabil, 0) = 0
                    and    a.ie_tipo_valor = 3
                    and    a.nr_seq_procedimento in (SELECT y.nr_sequencia
                                                     from   procedimento_paciente y
                                                     where y.nr_interno_conta = nr_interno_conta_w);

                    update mat_atend_paciente_valor a
                    set    a.nr_lote_contabil = nr_lote_contabil_w
                    where  coalesce(a.nr_lote_contabil, 0) = 0
                    and    a.ie_tipo_valor = 3
                    and    a.nr_seq_material in (SELECT y.nr_sequencia
                                                 from   material_atend_paciente y
                                                 where  y.nr_interno_conta = nr_interno_conta_w);
                    if (ie_commit_p = 'S') then
                        commit;
                    end if;
                end;
            end if;

            update conta_pac_ded_conv_item a
            set    a.nr_lote_contabil = nr_lote_contabil_w
            where  coalesce(a.nr_lote_contabil::text, '') = ''
            and    exists (SELECT 1
                    from   conta_pac_deducao_conv c
                    where  a.nr_seq_deducao_conv = c.nr_sequencia
                    and    c.nr_seq_conta_des = nr_interno_conta_w
                    and    (c.dt_processamento IS NOT NULL AND c.dt_processamento::text <> ''));

            CALL wheb_usuario_pck.set_ie_lote_contabil('N');

            open c010;
            loop
                fetch c010
                    into c010_w;
                EXIT WHEN NOT FOUND; /* apply on c010 */
                begin
                    cd_centro_custo_debito_w := null;
                    cd_centro_custo_mat_w    := null;
                    cd_hist_debito_w         := cd_historico_pad_w;
                    cd_historico_w           := cd_historico_pad_w;
                    cd_plano_convenio_w      := null;
                    ds_compl_hist_debito_w   := null;
                    ds_compl_historico_w     := null;
                    ds_estorno_w             := null;
					nr_nfe_imp_w 			 := null;
                    ds_nf_protocolo_w        := null;
                    ds_nfe_conta_protocolo_w := null;
					ds_serie_nf_protocolo_w	 := null;
					ds_seq_nota_protocolo_w  := null;
					nr_seq_nota_protocolo_w  := null;
                    dt_emissao_nf_w          := null;
                    dt_movimento_w           := null;
                    ie_centro_custo_w        := null;
                    nr_nf_prot_conta_w       := null;
                    nr_nfe_conta_protocolo_w := null;
					cd_serie_nf_w 			 := null;
                    nr_nfe_imp_lote_prot_w   := null;
                    nr_nfe_imp_w             := null;
                    nr_nfe_nf_prot_w         := 0;
                    nr_nota_fiscal_agrup_w   := null;
                    nr_seq_atecaco_w         := null;
                    nr_seq_nota_conta_prot_w := 0;
                    nr_seq_tab_compl_w       := c010_w.nr_interno_conta;
                    vl_material_w            := c010_w.vl_material;
                    vl_plus_repasse_w        := 0;

                    nr_seq_classif_movto_w := ctb_obter_classif_financ(c010_w.cd_convenio, c010_w.ie_tipo_convenio);

                    select  max(cd_estabelecimento_base)
                    into STRICT    cd_estab_setor_w
                    from    setor_atendimento
                    where   cd_setor_atendimento = c010_w.cd_setor_atendimento;

                    if (c010_w.ie_cancelamento <> 'N') then
                        begin
                            /* Estornada - 682645 | Cancelada - 689659 */

                            select CASE WHEN c010_w.ie_cancelamento='C' THEN  wheb_mensagem_pck.get_texto(689659) WHEN c010_w.ie_cancelamento='E' THEN  wheb_mensagem_pck.get_texto(682645) END
                            into STRICT    ds_estorno_w
;
                        exception
                            when others then
                                ds_estorno_w := null;
                        end;
                    end if;

                    begin
                        select coalesce(ie_conta_transitoria, 'N')
                        into STRICT   ie_conta_transitoria_w
                        from   convenio_estabelecimento
                        where  cd_convenio = c010_w.cd_convenio
                        and    cd_estabelecimento = c010_w.cd_estabelecimento;
                    exception
                        when others then
                            ie_conta_transitoria_w := 'N';
                    end;

                    begin
                        select a.ds_razao_social,
                                a.nm_fantasia
                        into STRICT   ds_razao_social_conv_w,
                                nm_fantasia_conv_w
                        from   pessoa_juridica a,
                                convenio        b
                        where  a.cd_cgc = b.cd_cgc
                        and    b.cd_convenio = c010_w.cd_convenio;
                    exception
                        when others then
                            ds_razao_social_conv_w := null;
                            nm_fantasia_conv_w     := null;
                    end;

                    select coalesce(max(nr_sequencia), 0)
                    into STRICT   nr_seq_regra_convenio_w
                    from   convenio_hist_padrao
                    where  cd_convenio = c010_w.cd_convenio
                    and    cd_estabelecimento = c010_w.cd_estabelecimento;

                    if (nr_seq_regra_convenio_w <> 0) then
                        begin
                            begin
                                select coalesce(a.cd_historico, 0),
                                        coalesce(a.ie_hist_debito, 'N')
                                into STRICT   cd_hist_debito_w,
                                        ie_hist_debito_w
                                from   convenio_hist_padrao a
                                where  a.nr_sequencia = nr_seq_regra_convenio_w;
                            exception
                                when others then
                                    cd_hist_debito_w := 0;
                                    ie_hist_debito_w := 'N';
                            end;

                            if (cd_hist_debito_w = 0) then
                                begin
                                    cd_hist_debito_w := cd_historico_pad_w;
                                end;
                            elsif (ie_hist_debito_w = 'N') then
                                begin
                                    cd_historico_w := cd_hist_debito_w;
                                end;
                            end if;
                        end;
                    end if;

                    begin
                        select  coalesce(a.nr_seq_lote_protocolo, 0)
                        into STRICT    nr_seq_lote_w
                        from    protocolo_convenio a
                        where   a.nr_seq_protocolo = c010_w.nr_seq_protocolo;
                    exception
                        when others then
                            nr_seq_lote_w := 0;
                    end;

                    /*
                    Busca a nota fiscal gerada para o lote de protololos (Tabela: LOTE_PROTOCOLO), caso nao encontrar
                    busca a nota fiscal gerada para o protocolo (Tabela: PROTOCOLO_CONVENIO), caso nao encontrar
                    busca a nota fiscal gerada para a conta paciente (Tabela: CONTA_PACIENTE)
                    */
                    if (nr_seq_lote_w <> 0) then
                        begin
                            select coalesce(max(a.nr_sequencia), 0)
                            into STRICT   nr_seq_nota_conta_prot_w
                            from   nota_fiscal a
                            where  a.nr_seq_lote_prot = nr_seq_lote_w
                            and    a.ie_situacao = '1';
                        end;
                    end if;

                    if (nr_seq_nota_conta_prot_w = 0) then
                        begin
                            select coalesce(max(a.nr_sequencia), 0)
                            into STRICT   nr_seq_nota_conta_prot_w
                            from   nota_fiscal a
                            where  a.ie_situacao = '1'
                            and    a.nr_seq_protocolo = c010_w.nr_seq_protocolo;
                        end;
                    end if;

                    if (nr_seq_nota_conta_prot_w = 0) then
                        begin
                            select coalesce(max(nr_sequencia), 0)
                            into STRICT   nr_seq_nota_conta_prot_w
                            from   nota_fiscal
                            where  ie_situacao in ('1', '3')
                            and    nr_interno_conta = c010_w.nr_interno_conta;
                        end;
                    end if;

                    /*
                    Se nao encontrou a nota e possui conta origem eh estorno
                    pega a nota fiscal de estorno da conta original, que eh a 'nota da conta de estorno'
                    Contabilizacao de nota de estorno em, lote e dia diferentes da nota original (com conta em protocolo diferente)
                    */
                    if (nr_seq_nota_conta_prot_w = 0) and (coalesce(c010_w.nr_seq_conta_origem, 0) <> 0) and (c010_w.ie_cancelamento = 'E') then
                        begin
                            select coalesce(max(nr_sequencia), 0)
                            into STRICT   nr_seq_nota_conta_prot_w
                            from   nota_fiscal a
                            where  a.ie_situacao = '2'
                            and    a.nr_interno_conta = c010_w.nr_seq_conta_origem;
                        end;
                    end if;

                    if (nr_seq_nota_conta_prot_w <> 0) then
                        begin
                            select trunc(dt_emissao),
                                    nr_nota_fiscal
                            into STRICT   dt_emissao_nf_w,
                                    nr_nota_fiscal_agrup_w
                            from   nota_fiscal
                            where  nr_sequencia = nr_seq_nota_conta_prot_w;
                        end;
                    end if;

                    if (coalesce(c010_w.ie_nf_contab_rec_conv, 'X') <> 'X') then
                        begin
                            ie_nf_contab_rec_w := c010_w.ie_nf_contab_rec_conv;
                        end;
                    end if;

                    /*
                    IE_NF_CONTAB_REC_W
                    S | Protocolo Convenio
                    C | Conta Paciente
                    A | Protocolo e/ou Conta paciente
                    N | nao
                    */
                    if (coalesce(c010_w.nr_seq_protocolo, 0) <> coalesce(nr_seq_ultimo_protocolo_lido_w, 0)) then
                        begin
                        select dt_entrega_convenio,
                                nr_protocolo,
                                substr(obter_mes_extenso(substr(obter_desc_mes_ano(dt_mesano_referencia, 'N'), 1, 2), 'A'), 1, 20) || '/' || substr(to_char(dt_mesano_referencia, 'dd/mm/yyyy'), 7, 4),
                                substr(obter_desc_mes_ano(dt_mesano_referencia, 'AB'), 1, 20),
                                dt_mesano_referencia
                        into STRICT   dt_entrega_convenio_w,
                                nr_protocolo_w,
                                ds_mesano_referencia_w,
                                ds_mesano_referencia_abrev_w,
                                dt_mesano_referencia_compl_w
                        from   protocolo_convenio
                        where  nr_seq_protocolo = c010_w.nr_seq_protocolo;
                        end;
                    end if;

                    if (ie_nf_contab_rec_w = 'N') then
                        begin
                            nr_nf_protocolo_w       := null;
                            nr_nf_prot_conta_w      := null;
                            nm_pessoa_nota_fiscal_w := null;
                            nr_nfe_nf_prot_w        := null;
                            nr_seq_nota_fiscal_w    := null;
                            nr_nfe_imp_w            := null;
							cd_serie_nf_w 			:= null;
                        end;
                    else
                        begin
                        if ((coalesce(c010_w.nr_seq_protocolo, 0) <> coalesce(nr_seq_ultimo_protocolo_lido_w, 0)) or (ie_ultimo_nf_contab_rec_lido_w = 'N')) then
                            begin
                                nr_nf_protocolo_w := substr(obter_nota_conta_protocolo(c010_w.nr_seq_protocolo, 0), 1, 254);
                            end;
                        end if;

                        if (ie_nf_contab_rec_w = 'S') then
                            begin
                                nr_nf_prot_conta_w := nr_nf_protocolo_w;
                            end;
                        end if;

                        /* Se busca as informacoes da nota fiscal com base na conta paciente */

                        if (ie_nf_contab_rec_w = 'C') then
                            begin
                                nr_nfe_nf_prot_w := null;
								cd_serie_nf_w 	 := null;

                                if (c010_w.ie_cancelamento = 'E') then
                                    begin
                                        /*
                                        Se for a conta de estorno(a conta com valores negativos) buscar as informacoes da nota fiscal
                                        baseado na conta de origem, e nota fiscal Estornada(Situacao = 3)
                                        */
                                        select max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc), 1, 80)),
                                                max(nr_nfe_imp),
                                                max(nr_sequencia),
                                                max(nr_nota_fiscal),
												max(cd_serie_nf)
                                        into STRICT   	nm_pessoa_nota_fiscal_w,
                                                nr_nfe_imp_w,
                                                nr_seq_nota_fiscal_w,
                                                nr_nf_prot_conta_w,
												cd_serie_nf_w
                                        from   	nota_fiscal x
                                        where  	x.nr_sequencia = (SELECT max(n.nr_sequencia)
                                                                  from   nota_fiscal n
                                                                  where  n.nr_interno_conta = c010_w.nr_seq_conta_origem
                                                                  and    n.ie_situacao = '3');
                                    end;
                                elsif (c010_w.ie_cancelamento = 'C') then
                                    begin
                                        /*
                                        Se for a conta original mas estiver cancelada, buscar as informacoes da nota fiscal
                                        baseado nesta conta, mas na nota fiscal Estornada(Situacao = 3)
                                        */
                                        select max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc), 1, 80)),
                                                max(nr_nfe_imp),
                                                max(nr_sequencia),
                                                max(nr_nota_fiscal),
												max(cd_serie_nf)
                                        into STRICT   	nm_pessoa_nota_fiscal_w,
                                                nr_nfe_imp_w,
                                                nr_seq_nota_fiscal_w,
                                                nr_nf_prot_conta_w,
												cd_serie_nf_w
                                        from   	nota_fiscal x
                                        where  	x.nr_sequencia = (SELECT max(n.nr_sequencia)
                                                                  from   nota_fiscal n
                                                                  where  n.nr_interno_conta = c010_w.nr_interno_conta
                                                                  and    n.ie_situacao = '3');
                                    end;
                                else
                                    begin
                                        /*
                                        Se a conta for normal(nao for cancelada ou de estorno) busca as informacoes da nota fisca
                                        baseado na conta
                                        */
                                        select 	max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc), 1, 80)),
                                                max(nr_nfe_imp),
                                                max(nr_sequencia),
                                                max(nr_nota_fiscal),
												max(cd_serie_nf)
                                        into STRICT   	nm_pessoa_nota_fiscal_w,
                                                nr_nfe_imp_w,
                                                nr_seq_nota_fiscal_w,
                                                nr_nf_prot_conta_w,
												cd_serie_nf_w
                                        from   	nota_fiscal x
                                        where  	x.nr_sequencia = (SELECT max(n.nr_sequencia)
                                                                 from   nota_fiscal n
                                                                 where  n.nr_interno_conta = c010_w.nr_interno_conta);
                                    end;
                                end if;
                                end;
                                /*
                                Busca as informacoes com base na conta e protocolo, ou se eh um novo protocolo (para os casos em que busca informacao somente com base no protocolo)
                                */
                            elsif ((ie_nf_contab_rec_w = 'A') or (coalesce(c010_w.nr_seq_protocolo, 0) <> coalesce(nr_seq_ultimo_protocolo_lido_w, 0))) then
                                begin
                                nr_seq_nota_fiscal_w := null;
                                /* Se busca as informacoes com base na conta e protocolo, tenta buscar primeiro as informacoes da conta */

                                if (ie_nf_contab_rec_w = 'A') then
                                    begin
                                        if (c010_w.ie_cancelamento = 'E') then
                                            begin
                                            /*
                                            Se for a conta de estorno(a conta com valores negativos) buscar as informacoes da nota fiscal
                                            baseado na conta de origem, e nota fiscal Estornada(Situacao = 3)
                                            */
                                            select max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc), 1, 80)),
                                                    max(nr_nfe_imp),
                                                    max(nr_sequencia),
                                                    max(nr_nota_fiscal),
													max(cd_serie_nf)
                                            into STRICT   nm_pessoa_nota_fiscal_w,
                                                    nr_nfe_imp_w,
                                                    nr_seq_nota_fiscal_w,
                                                    nr_nf_prot_conta_w,
													cd_serie_nf_w
                                            from   nota_fiscal x
                                            where  x.nr_sequencia = (SELECT max(n.nr_sequencia)
                                                                      from   nota_fiscal n
                                                                      where  n.nr_interno_conta = c010_w.nr_seq_conta_origem
                                                                      and    n.ie_situacao = '3');
                                            end;
                                        elsif (c010_w.ie_cancelamento = 'C') then
                                            begin
                                            /*
                                            Se for a conta original mas estiver cancelada, buscar as informacoes da nota fiscal
                                            baseado nesta conta, mas na nota fiscal Estornada(Situacao = 3)
                                            */
                                            select max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc), 1, 80)),
                                                    max(nr_nfe_imp),
                                                    max(nr_sequencia),
                                                    max(nr_nota_fiscal),
													max(cd_serie_nf)
                                            into STRICT   nm_pessoa_nota_fiscal_w,
                                                    nr_nfe_imp_w,
                                                    nr_seq_nota_fiscal_w,
                                                    nr_nf_prot_conta_w,
													cd_serie_nf_w
                                            from   nota_fiscal x
                                            where  x.nr_sequencia = (SELECT max(n.nr_sequencia)
                                                                      from   nota_fiscal n
                                                                      where  n.nr_interno_conta = c010_w.nr_interno_conta
                                                                      and    n.ie_situacao = '3');
                                            end;
                                        else
                                            begin
                                            /*
                                            Se a conta for normal(nao for cancelada ou de estorno) busca as informacoes da nota fisca
                                            baseado na conta
                                            */
                                            select max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc), 1, 80)),
                                                    max(nr_nfe_imp),
                                                    max(nr_sequencia),
                                                    max(nr_nota_fiscal),
													max(cd_serie_nf)
                                            into STRICT   nm_pessoa_nota_fiscal_w,
                                                    nr_nfe_imp_w,
                                                    nr_seq_nota_fiscal_w,
                                                    nr_nf_prot_conta_w,
													cd_serie_nf_w
                                            from   nota_fiscal x
                                            where  x.nr_sequencia = (SELECT max(n.nr_sequencia)
                                                                     from   nota_fiscal n
                                                                     where  n.nr_interno_conta = c010_w.nr_interno_conta);
                                            end;
                                        end if;
                                        end;
                                    end if;

                                    if (coalesce(nr_seq_nota_fiscal_w, 0) = 0) then
                                        begin

                                        if (c010_w.ie_cancelamento = 'E') then
                                            begin
                                            select max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc), 1, 80)),
                                                    max(nr_nfe_imp),
                                                    max(nr_sequencia),
                                                    max(nr_nota_fiscal),
													max(cd_serie_nf)
                                            into STRICT   nm_pessoa_nota_fiscal_w,
                                                    nr_nfe_nf_prot_w,
                                                    nr_seq_nota_fiscal_w,
                                                    nr_nf_prot_conta_w,
													cd_serie_nf_w
                                            from   nota_fiscal x
                                            where  x.ie_situacao = '3'
                                            and    x.nr_sequencia = (SELECT max(z.nr_sequencia)
                                                                     from   nota_fiscal z
                                                                     where  z.nr_seq_protocolo = (select y.nr_seq_protocolo
                                                                                                  from conta_paciente y
                                                                                                  where y.nr_interno_conta = c010_w.nr_seq_conta_origem));
                                            end;
                                        elsif (c010_w.ie_cancelamento = 'C') then
                                            begin
                                            select max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc), 1, 80)),
                                                    max(nr_nfe_imp),
                                                    max(nr_sequencia),
                                                    max(nr_nota_fiscal),
													max(cd_serie_nf)
                                            into STRICT   nm_pessoa_nota_fiscal_w,
                                                    nr_nfe_nf_prot_w,
                                                    nr_seq_nota_fiscal_w,
                                                    nr_nf_prot_conta_w,
													cd_serie_nf_w
                                            from   nota_fiscal x
                                            where  x.ie_situacao = '3'
                                            and    x.nr_sequencia = (SELECT max(z.nr_sequencia)
                                                                     from   nota_fiscal z
                                                                     where  z.nr_seq_protocolo = (select y.nr_seq_protocolo
                                                                                                  from  conta_paciente y
                                                                                                  where y.nr_interno_conta = c010_w.nr_interno_conta));
                                            end;
                                        else
                                            begin
                                            select max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc), 1, 80)),
                                                    max(nr_nfe_imp),
                                                    max(nr_sequencia),
                                                    max(coalesce(nr_nf_prot_conta_w, nr_nota_fiscal)),
													max(cd_serie_nf)
                                            into STRICT   nm_pessoa_nota_fiscal_w,
                                                    nr_nfe_nf_prot_w,
                                                    nr_seq_nota_fiscal_w,
                                                    nr_nf_prot_conta_w,
													cd_serie_nf_w
                                            from   nota_fiscal x
                                            where  x.nr_sequencia = (SELECT max(n.nr_sequencia)
                                                                     from   nota_fiscal n
                                                                     where  n.nr_seq_protocolo = c010_w.nr_seq_protocolo);
                                            end;
                                        end if;
                                        end;
                                    end if;
                                end;
                            end if;
                        end;
                    end if;

                    nr_seq_ultimo_protocolo_lido_w := c010_w.nr_seq_protocolo;
                    ie_ultimo_nf_contab_rec_lido_w := ie_nf_contab_rec_w;

                    if (ie_data_lote_w = 'N') then
                        dt_movimento_w := coalesce(c010_w.dt_mesano_referencia, dt_entrega_convenio_w);
                    elsif (ie_data_lote_w = 'NE') then
                        dt_movimento_w := coalesce(dt_emissao_nf_w, dt_referencia_lote_w);
                    elsif (ie_data_lote_w = 'E') then
                        dt_movimento_w := coalesce(dt_entrega_convenio_w, c010_w.dt_mesano_referencia);
                    else
                        dt_movimento_w := dt_referencia_lote_w;
                    end if;

                    if (coalesce(dt_movimento_w::text, '') = '') then
                        begin
                            dt_movimento_w := dt_referencia_lote_w;
                        end;
                    end if;
					
					if (cd_conta_fixa_receita_w IS NOT NULL AND cd_conta_fixa_receita_w::text <> '') then
						c010_w.cd_sequencia_parametro := null;
					end if;
                    cd_conta_credito_w := coalesce(cd_conta_fixa_receita_w, c010_w.cd_conta_contabil);

                    /* Define o Centro de Custo da Receita */

                    if (coalesce(cd_conta_credito_w, '0') <> '0') then
                        begin
                            select ie_centro_custo into STRICT ie_centro_custo_w from conta_contabil where cd_conta_contabil = cd_conta_credito_w;
                        end;
                    end if;

                    ie_centro_custo_w := coalesce(ie_centro_custo_w, 'N');

                    if (ie_centro_custo_w = 'S') then
                        begin
                            select  coalesce(cd_centro_custo_receita, cd_centro_custo)
                            into STRICT    cd_centro_custo_mat_w
                            from    setor_atendimento
                            where   cd_setor_atendimento = c010_w.cd_setor_atendimento;

                            cd_centro_custo_mat_w := coalesce(c010_w.cd_centro_custo_receita, cd_centro_custo_mat_w);
                        end;
                    end if;

                    /* Define a Conta Contabil do Convenio */

                    begin
                        nr_seq_atecaco_w := coalesce(obter_atecaco_atendimento(c010_w.nr_atendimento), 0);
                    exception
                        when others then
                            nr_seq_atecaco_w := null;
                    end;

                    if (coalesce(nr_seq_atecaco_w, 0) <> 0) then
                        begin
                            select cd_plano_convenio
                            into STRICT   cd_plano_convenio_w
                            from   atend_categoria_convenio
                            where  nr_atendimento = c010_w.nr_atendimento
                            and    nr_seq_interno = nr_seq_atecaco_w;
                        exception
                            when others then
                                cd_plano_convenio_w := null;
                        end;
                    end if;

                    cd_conta_contabil_conv_w := obter_conta_convenio(c010_w.cd_estabelecimento,
                                                                     c010_w.cd_convenio,
                                                                     c010_w.ie_tipo_atendimento,
                                                                     'T',
                                                                     c010_w.dt_mesano_referencia,
                                                                     null,
                                                                     c010_w.cd_categoria_parametro,
                                                                     cd_plano_convenio_w,
                                                                     c010_w.cd_setor_atendimento,
                                                                     c010_w.cd_procedimento,
                                                                     c010_w.ie_origem_proced);

                    if (ctb_param_lote_receita_w.ie_contab_cc_debito = 'S') then
                        /*Matheus OS 116384 7/1/2009*/

                        begin
                            begin
                                select coalesce(ie_centro_custo, 'N')
                                into STRICT    ie_centro_custo_w
                                from    conta_contabil
                                where   cd_conta_contabil = cd_conta_contabil_conv_w;
                            exception
                                when others then
                                    ie_centro_custo_w := 'N';
                            end;

                            if (ie_centro_custo_w = 'S') then
                                begin
                                    select  max(cd_centro_custo)
                                    into STRICT    cd_centro_custo_debito_w
                                    from    setor_atendimento
                                    where   cd_setor_atendimento = c010_w.cd_setor_atendimento;
                                end;
                            end if;
                        end;
                    end if;

                    if (ctb_param_lote_receita_w.ie_conta_convenio_estab = 'S') then
                        begin
                            select coalesce(max(cd_conta_contabil), cd_conta_contabil_conv_w)
                            into STRICT   cd_conta_contabil_conv_w
                            from   convenio_estabelecimento
                            where  cd_convenio = c010_w.cd_convenio
                            and    cd_estabelecimento = c010_w.cd_estabelecimento;
                        end;
                    end if;

                    if (ctb_param_lote_receita_w.ie_titulo_ctb_receita = 'S') then
                        ds_titulos_prot_w := substr(obter_titulos_protocolo(c010_w.nr_seq_protocolo), 1, 200);
                        select substr(obter_titulo_conta_protocolo(c010_w.nr_seq_protocolo, CASE WHEN c010_w.ie_cancelamento='E' THEN  c010_w.nr_seq_conta_origem  ELSE c010_w.nr_interno_conta END ), 1, 200)
                        into STRICT    ds_titulos_conta_w
;
                    end if;

                    select  max(nr_nota_fiscal)
                    into STRICT    nr_nf_titulo_w
                    from    titulo_receber
                    where   nr_interno_conta = CASE WHEN c010_w.ie_cancelamento='E' THEN  c010_w.nr_seq_conta_origem  ELSE c010_w.nr_interno_conta END;

                    if (coalesce(nr_nf_titulo_w, '0') = '0') then
                        select  max(nr_nota_fiscal)
                        into STRICT    nr_nf_titulo_w
                        from    titulo_receber
                        where   nr_seq_protocolo = c010_w.nr_seq_protocolo;
                    end if;

                    if (coalesce(c010_w.nr_interno_conta, 0) <> 0) then
                        begin
                            select max(n.nr_nota_fiscal)
                            into STRICT    nr_nf_prot_nota_w
                            from    nota_fiscal n
                            where   n.nr_interno_conta = CASE WHEN c010_w.ie_cancelamento='E' THEN  c010_w.nr_seq_conta_origem  ELSE c010_w.nr_interno_conta END;

                            if ((coalesce(nr_nf_prot_nota_w, 'X') = 'X') and (coalesce(c010_w.nr_seq_protocolo, 0) <> 0)) then
                                nr_nf_prot_nota_w := substr(obter_nota_conta_protocolo(c010_w.nr_seq_protocolo, 0), 1, 255);
                            end if;
                        end;
                    end if;

                    select  coalesce(max(nr_titulo), 0)
                    into STRICT    nr_titulo_receber_w
                    from    titulo_receber
                    where   nr_interno_conta = CASE WHEN c010_w.ie_cancelamento='E' THEN  c010_w.nr_seq_conta_origem  ELSE c010_w.nr_interno_conta END;

                    nr_seq_protocolo_orig_w := null;

                    if (nr_titulo_receber_w = 0) then
                        if (c010_w.ie_cancelamento = 'E') then
                            select  max(nr_seq_protocolo)
                            into STRICT    nr_seq_protocolo_orig_w
                            from    conta_paciente
                            where   nr_interno_conta = c010_w.nr_seq_conta_origem;
                        end if;

                        select coalesce(max(nr_titulo), 0)
                        into STRICT    nr_titulo_receber_w
                        from    titulo_receber
                        where   nr_seq_protocolo = CASE WHEN c010_w.ie_cancelamento='E' THEN  nr_seq_protocolo_orig_w  ELSE c010_w.nr_seq_protocolo END;
                    end if;

                    select substr(max(c.nr_nota_fiscal), 1, 150)
                    into STRICT   nr_nf_lote_protocolo_w
                    from   nota_fiscal        c,
                            lote_protocolo     b,
                            protocolo_convenio a
                    where  c.nr_seq_lote_prot = b.nr_sequencia
                    and    b.nr_sequencia = a.nr_seq_lote_protocolo
                    and    a.nr_seq_protocolo = c010_w.nr_seq_protocolo;

                    nr_nf_lote_protocolo_w := substr(nr_nf_lote_protocolo_w, 1, length(nr_nf_lote_protocolo_w));

                    /* aamfirmo 30/05/2013 OS 590425 */

                    /* buscar lote protoocolo do protocolo */

                    if (coalesce(c010_w.nr_seq_protocolo, 0) <> 0) then
                        begin
                            select  coalesce(max(nr_seq_lote_protocolo), 0)
                            into STRICT    nr_seq_lote_protocolo_w
                            from    protocolo_convenio
                            where   nr_seq_protocolo = c010_w.nr_seq_protocolo;

                            if (coalesce(nr_seq_lote_protocolo_w, 0) <> 0) then
                                ds_nota_protocolo_w := substr(obter_nf_lote_protocolo(nr_seq_lote_protocolo_w), 1, 255);
                            end if;
                        end;
                    end if;

                    /* buscar a NFE da NF vinculada ao lote protocolo do protocolo. */

                    if (coalesce(nr_seq_lote_protocolo_w, 0) <> 0) then
                        begin
                            select  max(a.nr_nfe_imp)
                            into STRICT    nr_nfe_imp_lote_prot_w
                            from    nota_fiscal a
                            where   a.nr_seq_lote_prot = nr_seq_lote_protocolo_w;
                        end;
                    end if;

                    if (c010_w.nr_seq_protocolo IS NOT NULL AND c010_w.nr_seq_protocolo::text <> '') then
                        begin
                            if (coalesce(nr_seq_protocolo_orig_w, 0) <> 0) and (c010_w.ie_cancelamento = 'E') then

                                    ds_nfe_conta_protocolo_w := null;
                                    ds_nf_protocolo_w        := null;
									ds_serie_nf_protocolo_w  := null;
									ds_seq_nota_protocolo_w	 := null;
									
                                    open C060;
                                    loop
                                        fetch C060
                                            into nr_nfe_conta_protocolo_w,
                                                  nr_nf_protocolo_w,
												  cd_serie_nf_w,
												  nr_seq_nota_protocolo_w;
                                        EXIT WHEN NOT FOUND; /* apply on C060 */
                                        begin
                                            ds_nfe_conta_protocolo_w := substr(ds_nfe_conta_protocolo_w || nr_nfe_conta_protocolo_w || ', ', 1, 254);
                                            ds_nf_protocolo_w        := substr(ds_nf_protocolo_w || nr_nf_protocolo_w || ', ', 1, 254);
											ds_serie_nf_protocolo_w  := substr(ds_serie_nf_protocolo_w || cd_serie_nf_w || ', ', 1, 254);
											ds_seq_nota_protocolo_w  := substr(ds_seq_nota_protocolo_w || nr_seq_nota_protocolo_w || ', ', 1, 254);	
                                        end;
                                    end loop;
                                    close C060;

                                    nr_nfe_conta_protocolo_w := substr(ds_nfe_conta_protocolo_w, 1, length(ds_nfe_conta_protocolo_w) - 2);
                                    nr_nf_protocolo_w        := substr(ds_nf_protocolo_w, 1, length(ds_nf_protocolo_w) - 2);
									cd_serie_nf_w 			 := substr(ds_serie_nf_protocolo_w, 1, length(ds_serie_nf_protocolo_w) - 2);
									nr_seq_nota_protocolo_w  := substr(ds_seq_nota_protocolo_w, 1, length(ds_seq_nota_protocolo_w) - 2);

                            else
							
									nr_nfe_conta_protocolo_w:= substr(obter_nfe_conta_protocolo(c010_w.nr_seq_protocolo,0),1,254);
									cd_serie_nf_w			:= substr(obter_nota_protocolo(c010_w.nr_seq_protocolo,0,'CD_SERIE'),1,254);
									nr_seq_nota_protocolo_w	:= substr(obter_nota_protocolo(c010_w.nr_seq_protocolo,0,'NR_SEQUENCIA'),1,254);

                                    if (c010_w.nr_interno_conta IS NOT NULL AND c010_w.nr_interno_conta::text <> '') and (coalesce(nr_nfe_conta_protocolo_w,0) = 0) then

                                            if (c010_w.ie_cancelamento = 'E') then
												nr_nfe_conta_protocolo_w:= substr(obter_nfe_conta_protocolo(0,c010_w.nr_seq_conta_origem),1,254);
												cd_serie_nf_w			:= substr(obter_nota_protocolo(0,c010_w.nr_seq_conta_origem,'CD_SERIE'),1,254);
												nr_seq_nota_protocolo_w	:= substr(obter_nota_protocolo(0,c010_w.nr_seq_conta_origem,'NR_SEQUENCIA'),1,254);										
											else
												nr_nfe_conta_protocolo_w:= substr(obter_nfe_conta_protocolo(0,c010_w.nr_interno_conta),1,254);
												cd_serie_nf_w			:= substr(obter_nota_protocolo(0,c010_w.nr_interno_conta,'CD_SERIE'),1,254);
												nr_seq_nota_protocolo_w	:= substr(obter_nota_protocolo(0,c010_w.nr_interno_conta,'NR_SEQUENCIA'),1,254);									
											end if;
                                    end if;
                            end if;
                        end;
                    elsif (c010_w.nr_interno_conta IS NOT NULL AND c010_w.nr_interno_conta::text <> '') then
                        if (c010_w.ie_cancelamento = 'E') then
							nr_nfe_conta_protocolo_w := substr(obter_nfe_conta_protocolo(0,c010_w.nr_seq_conta_origem),1,254);
							cd_serie_nf_w			 := substr(obter_nota_protocolo(0,c010_w.nr_seq_conta_origem,'CD_SERIE'),1,254);
							nr_seq_nota_protocolo_w	 := substr(obter_nota_protocolo(0,c010_w.nr_seq_conta_origem,'NR_SEQUENCIA'),1,254);	
						else
							nr_nfe_conta_protocolo_w:= substr(obter_nfe_conta_protocolo(0,c010_w.nr_interno_conta),1,254);
							cd_serie_nf_w			:= substr(obter_nota_protocolo(0,c010_w.nr_interno_conta,'CD_SERIE'),1,254);
							nr_seq_nota_protocolo_w	:= substr(obter_nota_protocolo(0,c010_w.nr_interno_conta,'NR_SEQUENCIA'),1,254);										
						end if;
                    end if;

                    if (coalesce(nr_seq_nota_fiscal_w, 0) != 0) then
                        select  n.vl_total_nota
                        into STRICT    vl_total_nota_w
                        from    nota_fiscal n
                        where   n.nr_sequencia = nr_seq_nota_fiscal_w;
                    end if;

                    CALL ctb_online_pck.definir_atrib_compl(cd_tipo_lote_contabil_w);
                    CALL ctb_online_pck.set_value_compl_hist('CD_CONVENIO', c010_w.cd_convenio);
                    CALL ctb_online_pck.set_value_compl_hist('DS_CONVENIO', c010_w.ds_convenio);
                    CALL ctb_online_pck.set_value_compl_hist('NR_ATENDIMENTO', c010_w.nr_atendimento);
                    CALL ctb_online_pck.set_value_compl_hist('NM_PACIENTE', c010_w.nm_pessoa_fisica);
                    CALL ctb_online_pck.set_value_compl_hist('NR_INTERNO_CONTA', c010_w.nr_interno_conta);
                    CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_PROTOCOLO', c010_w.nr_seq_protocolo);
                    CALL ctb_online_pck.set_value_compl_hist('NR_PROTOCOLO', nr_protocolo_w);
                    CALL ctb_online_pck.set_value_compl_hist('NR_DOC_CONVENIO', c010_w.nr_doc_convenio);
                    CALL ctb_online_pck.set_value_compl_hist('NR_NF_PROTOCOLO', nr_nf_protocolo_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_TITULO_CONTA', ds_titulos_conta_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_TITULO_PROTOCOLO', ds_titulos_prot_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REFERENCIA', ds_mesano_referencia_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REFERENCIA_ABREV', ds_mesano_referencia_abrev_w);
                    CALL ctb_online_pck.set_value_compl_hist('NM_PESSOA_NF', nm_pessoa_nota_fiscal_w);
                    CALL ctb_online_pck.set_value_compl_hist('REPASSE_NM_BENEFICIARIO', null);
                    CALL ctb_online_pck.set_value_compl_hist('REPASSE_NR_NOTA_FISCAL', null);
                    CALL ctb_online_pck.set_value_compl_hist('NR_NFE', nr_nfe_imp_w);
                    CALL ctb_online_pck.set_value_compl_hist('NR_NFE_NF_PROTOCOLO', nr_nfe_nf_prot_w);
                    CALL ctb_online_pck.set_value_compl_hist('NR_NF_PROT_CONTA', nr_nf_prot_conta_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_ESTORNO', ds_estorno_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_STATUS_REPASSE', null);
                    CALL ctb_online_pck.set_value_compl_hist('DT_MESANO_REFERENCIA', dt_mesano_referencia_compl_w);
                    CALL ctb_online_pck.set_value_compl_hist('NR_NF_TITULO', nr_nf_titulo_w);
                    CALL ctb_online_pck.set_value_compl_hist('NR_NF_LOTE_PROTOCOLO', nr_nf_lote_protocolo_w);
                    CALL ctb_online_pck.set_value_compl_hist('NM_ESTABELECIMENTO', nm_estabelecimento_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_PRIMEIRO_SETOR_ATEND', c010_w.ds_primeiro_setor_atend);
                    CALL ctb_online_pck.set_value_compl_hist('NM_RESPONSAVEL_ATEND', c010_w.nm_responsavel_atend);
                    CALL ctb_online_pck.set_value_compl_hist('NM_FANTASIA_CONV', nm_fantasia_conv_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_RAZAO_SOCIAL_CONV', ds_razao_social_conv_w);
                    CALL ctb_online_pck.set_value_compl_hist('NR_TITULO', nr_titulo_receber_w);
                    CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_MAT_PROC', c010_w.nr_sequencia);
                    CALL ctb_online_pck.set_value_compl_hist('NR_NFE_LOTE_PROTOCOLO', nr_nfe_imp_lote_prot_w);
                    CALL ctb_online_pck.set_value_compl_hist('NR_NF_PROT_NOTA', nr_nf_prot_nota_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_NOTA_PROTOCOLO', ds_nota_protocolo_w);
                    CALL ctb_online_pck.set_value_compl_hist('NR_NFE_CONTA_PROTOCOLO', nr_nfe_conta_protocolo_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_CATEGORIA', ds_categoria_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_PLANO_CONVENIO', ds_plano_convenio_w);
                    CALL ctb_online_pck.set_value_compl_hist('DS_TIPO_ATENDIMENTO', c010_w.ds_tipo_atendimento);
                    CALL ctb_online_pck.set_value_compl_hist('VL_TOTAL_NOTA', vl_total_nota_w);
					CALL ctb_online_pck.set_value_compl_hist('CD_SERIE_NF', cd_serie_nf_w);
					CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_NOTA_FISCAL', nr_seq_nota_fiscal_w);
					CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_NOTA_PROTOCOLO', nr_seq_nota_protocolo_w);

                    ds_compl_historico_w := ctb_online_pck.ctb_obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w);

                    if (cd_hist_debito_w IS NOT NULL AND cd_hist_debito_w::text <> '') then
                        ds_compl_hist_debito_w := ctb_online_pck.ctb_obter_compl_historico(cd_tipo_lote_contabil_w, cd_hist_debito_w);
                    end if;

                    ds_compl_hist_debito_w := coalesce(ds_compl_hist_debito_w, ds_compl_historico_w);

                    ds_doc_agrupamento_w := substr(ds_doc_agrupamento_w, 1, 50);
                    cd_estab_debito_w    := c010_w.cd_estabelecimento;

                    if (coalesce(nr_nota_fiscal_agrup_w, 0) = 0) then
                        begin
                            select  substr(obter_nota_conta_prot_conv(coalesce(c010_w.nr_seq_protocolo, 0),
                                        CASE WHEN c010_w.ie_cancelamento='E' THEN  coalesce(c010_w.nr_seq_conta_origem, 0)  ELSE coalesce(c010_w.nr_interno_conta, 0) END ,
                                        'S'), 1, 254)
                            into STRICT    nr_nota_fiscal_agrup_w
                            from    protocolo_convenio a
                            where   nr_seq_protocolo = c010_w.nr_seq_protocolo;
                        exception
                            when others then
                                nr_nota_fiscal_agrup_w := '0';
                        end;
                    end if;

                    if (nm_agrupador_w = 'NR_INTERNO_CONTA') then
                        nr_seq_agrupamento_w := c010_w.nr_interno_conta;
                    elsif (nm_agrupador_w = 'NR_ATENDIMENTO') then
                        nr_seq_agrupamento_w := c010_w.nr_atendimento;
                    elsif (nm_agrupador_w = 'NR_SEQ_PROTOCOLO') then
                        nr_seq_agrupamento_w := c010_w.nr_seq_protocolo;
                    elsif (nm_agrupador_w = 'NR_NOTA_FISCAL') then
                        nr_seq_agrupamento_w := nr_nota_fiscal_agrup_w;
                    elsif (nm_agrupador_w = 'DS_MES_ANO') then
                        nr_seq_agrupamento_w := dt_mesano_w;
                    elsif (nm_agrupador_w = 'CD_CONVENIO') then
                        nr_seq_agrupamento_w := c010_w.cd_convenio;
                    end if;

                    if (coalesce(nr_seq_agrupamento_w, 0) = 0) then
                        nr_seq_agrupamento_w := c010_w.nr_interno_conta;
                    end if;

                    if (ie_permite_estab_dif_w = 'PCCT') and (ie_conta_transitoria_w = 'S') and (coalesce(cd_estab_financeiro_w, 0) <> 0) and (cd_conta_transitoria_w IS NOT NULL AND cd_conta_transitoria_w::text <> '') and (cd_estab_financeiro_w <> c010_w.cd_estabelecimento) then
                        cd_estab_debito_w := cd_estab_financeiro_w;
                    end if;

                    /* Grava Movimento Debito */

                    if (c010_w.ie_proc_mat = 'M') then
                        nm_tabela_w       := 'MATERIAL_ATEND_PACIENTE';
                        nm_atributo_w     := 'VL_MATERIAL';
                        nr_seq_info_ctb_w := 7;
                    elsif (c010_w.ie_proc_mat = 'P') then
                        nm_tabela_w       := 'PROCEDIMENTO_PACIENTE';
                        nm_atributo_w     := 'VL_PROCEDIMENTO';
                        nr_seq_info_ctb_w := 6;
                    end if;

                    nr_seq_nf_prot_w := nr_seq_nota_fiscal_w;

                    if (coalesce(nr_seq_nf_prot_w, '0') = '0') then
                        select  substr(obter_nota_conta_prot_conv(c010_w.nr_seq_protocolo, 0, 'S'), 1, 254)
                        into STRICT    nr_seq_nf_prot_w
;
                    end if;

                    ds_atributos_w := null;

                    ds_atributos_w := 'NR_SEQ_PROTOCOLO=' || c010_w.nr_seq_protocolo || ';' ||
                                      'NR_SEQ_NOTA_FISCAL=' || nr_seq_nf_prot_w || ';' ||
                                      'NR_NFE_IMP=' || coalesce(nr_nfe_imp_w, coalesce(nr_nfe_nf_prot_w, nr_nfe_imp_lote_prot_w));

                    ctb_obter_doc_movto(cd_tipo_lote_contabil_p => cd_tipo_lote_contabil_w,
                                        nm_atributo_p           => null,
                                        ie_opcao_p              => 'VR',
                                        dt_vigencia_p           => dt_movimento_w,
                                        dt_inicio_p             => null,
                                        dt_fim_p                => null,
                                        ds_atributos_p          => ds_atributos_w,
                                        nm_usuario_p            => nm_usuario_p,
                                        ie_regra_p              => ie_regra_w,
                                        vl_atributo_p           => nr_documento_aux_w,
                                        ie_origem_docto_p       => ie_origem_documento_w);

                    nr_seq_tab_orig_w := c010_w.nr_sequencia;

                    ctb_movimento_doc_w := null;
                    ctb_movimento_doc_w.nr_lote_contabil     := nr_lote_contabil_w;
                    ctb_movimento_doc_w.cd_estabelecimento   := cd_estab_debito_w;
                    ctb_movimento_doc_w.dt_movimento         := dt_movimento_w;
                    ctb_movimento_doc_w.vl_movimento         := c010_w.vl_material;
                    ctb_movimento_doc_w.cd_conta_debito      := cd_conta_contabil_conv_w;
                    ctb_movimento_doc_w.cd_conta_credito     := null;
                    ctb_movimento_doc_w.cd_historico         := cd_hist_debito_w;
                    ctb_movimento_doc_w.nr_seq_agrupamento   := nr_seq_agrupamento_w;
                    ctb_movimento_doc_w.ds_compl_historico   := ds_compl_hist_debito_w;
                    ctb_movimento_doc_w.nr_documento         := nr_documento_aux_w;
                    ctb_movimento_doc_w.ie_origem_documento  := ie_origem_documento_w;
                    ctb_movimento_doc_w.ie_transitorio       := 'N';
                    ctb_movimento_doc_w.cd_centro_custo      := cd_centro_custo_debito_w;
                    ctb_movimento_doc_w.nr_seq_info          := nr_seq_info_ctb_w;
                    ctb_movimento_doc_w.nr_seq_tab_orig      := nr_seq_tab_orig_w;
                    ctb_movimento_doc_w.nm_tabela            := nm_tabela_w;
                    ctb_movimento_doc_w.nm_atributo          := nm_atributo_w;
                    ctb_movimento_doc_w.nr_seq_doc_compl     := nr_seq_tab_compl_w;
                    ctb_movimento_doc_w.nr_seq_classif_movto := nr_seq_classif_movto_w;
                    ctb_movimento_doc_w.nr_seq_ctb_documento := nr_ctb_doc_conta_pac_w;

                    ctb_movimento_doc_p  => ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_p  => ctb_movimento_doc_w, nm_usuario_p         => nm_usuario_p, ie_commit_p          => 'N', ie_consistir_p       => 'N', ie_atualizar_saldo_p => 'N');

                    /*Contabilizacao entre estabelecimentos */

                    if (ie_permite_estab_dif_w = 'PCCT') and (ie_conta_transitoria_w = 'S') and (coalesce(cd_estab_financeiro_w, 0) <> 0)
                        and (cd_conta_transitoria_w IS NOT NULL AND cd_conta_transitoria_w::text <> '')
                        and (cd_estab_financeiro_w <> c010_w.cd_estabelecimento) then

                        ctb_movimento_w.nr_lote_contabil    := nr_lote_contabil_w;
                        ctb_movimento_w.dt_movimento        := dt_movimento_w;
                        ctb_movimento_w.ie_origem_documento := ie_origem_documento_w;
                        ctb_movimento_w.nr_seq_agrupamento  := nr_seq_agrupamento_w;
                        ctb_movimento_w.vl_movimento        := c010_w.vl_material;
                        ctb_movimento_w.cd_historico        := cd_historico_ct_w;
                        ctb_movimento_w.nr_documento        := c010_w.nr_interno_conta;

                        /*MOVIMENTO TRANSITORIO DEBITO*/

                        ctb_movimento_w.cd_estabelecimento := c010_w.cd_estabelecimento;
                        ctb_movimento_w.cd_conta_debito    := cd_conta_transitoria_w;
                        ctb_movimento_w.cd_conta_credito   := null;
                        ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p);

                        /*MOVIMENTO TRANSITORIO CREDITO*/

                        ctb_movimento_w.cd_estabelecimento := cd_estab_financeiro_w;
                        ctb_movimento_w.cd_conta_credito   := cd_conta_transitoria_w;
                        ctb_movimento_w.cd_conta_debito    := null;
                        ctb_movimento_w := ctb_online_pck.ctb_gerar_movto_conta_transit(ctb_movimento_w, nm_usuario_p);
                    end if;

                    if (c010_w.vl_tx_adm <> 0) and (ctb_param_lote_receita_w.cd_conta_contabil_tx_adm IS NOT NULL AND ctb_param_lote_receita_w.cd_conta_contabil_tx_adm::text <> '') then
                        c010_w.vl_material := c010_w.vl_material - c010_w.vl_tx_adm;
                    end if;

                    /* Desconta repasse se o movimento de repasse for incluido no da receita */

                    if (ctb_param_lote_receita_w.ie_contab_repasse_receita = 'S') and (coalesce(c010_w.vl_repasse, 0) <> 0) then

                        if (coalesce(c010_w.vl_repasse, 0) > coalesce(c010_w.vl_material, 0)) and (c010_w.vl_material >= 0) then
                            begin
                                c010_w.vl_material := 0;
                            end;
                        elsif (coalesce(c010_w.vl_repasse, 0) < coalesce(c010_w.vl_material, 0)) and (c010_w.vl_material <= 0) then
                            begin
                                c010_w.vl_material := 0;
                            end;
                        else
                            begin
                                if (coalesce(c010_w.vl_material, 0) < 0) then
                                    c010_w.vl_material := c010_w.vl_material + coalesce(abs(c010_w.vl_repasse), 0);
                                    /*if  (c010_w.ie_cancelamento = 'E') and
                                        (c010_w.vl_repasse < 0) and
                                        (vl_material_w < 0) then
                                        c010_w.vl_material  := vl_material_w;
                                    end if;*/
                                else
                                    c010_w.vl_material := coalesce(c010_w.vl_material, 0) - coalesce(abs(c010_w.vl_repasse), 0);
                                    if (c010_w.vl_repasse < 0) and (coalesce(c010_w.nr_seq_mat_est, 0) <> 0) then
                                        c010_w.vl_material := 0;
                                    end if;
                                end if;
                            end;
                        end if;
                    end if;

                    /* Grava Movimento Credito */

                    ds_desconto_w := ' ' || Wheb_mensagem_pck.get_texto(799413) || ' ';

                    if (ctb_param_lote_receita_w.ie_regra_centro_estab = 'S') and (coalesce(cd_centro_custo_mat_w, 0) <> 0) and (cd_estab_setor_w <> c010_w.cd_estabelecimento) then
                        cd_centro_custo_mat_w := coalesce(ctb_obter_centro_contab(cd_estab_setor_w, cd_centro_custo_mat_w, c010_w.cd_estabelecimento), cd_centro_custo_mat_w);
                    end if;

                    qt_registros_w := 0;

                    /* Marcio OS: 465899 -  Verifica se existe regra de rateio para o procedimento interno */

                    if (c010_w.nr_seq_proc_interno IS NOT NULL AND c010_w.nr_seq_proc_interno::text <> '') then

                        select count(*)
                        into STRICT   qt_registros_w
                        from   ctb_crit_rateio_proc
                        where  nr_seq_proc_interno = c010_w.nr_seq_proc_interno
                        and    dt_movimento_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_movimento_w);

                    end if;

                    /* Caso tenha regra de rateio */

                    if (qt_registros_w > 0) then
                        begin
                            -- BEGIN CTB_RATEIO_PROC_INTERNO
                            -- Verificar se a soma dos percentuais de rateio nao eh menor do que 100%. Caso seja, deve inserir no centro de custo que iria inseriri se nao houvesse regra.
                            select sum(pr_rateio)
                            into STRICT   pr_rateio_total_w
                            from   ctb_crit_rateio_proc
                            where  nr_seq_proc_interno = c010_w.nr_seq_proc_interno
                            and    dt_movimento_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_movimento_w);

                            ctb_movimento_doc_w := null;
                            ctb_movimento_doc_w.nr_lote_contabil   := nr_lote_contabil_w;
                            ctb_movimento_doc_w.dt_movimento       := dt_movimento_w;
                            ctb_movimento_doc_w.cd_conta_credito   := c010_w.cd_conta_contabil;
                            ctb_movimento_doc_w.cd_conta_debito    := null;
                            ctb_movimento_doc_w.cd_historico       := cd_historico_w;
                            ctb_movimento_doc_w.ds_compl_historico := ds_compl_historico_w;
                            ctb_movimento_doc_w.nr_seq_agrupamento := nr_seq_agrupamento_w;
                            ctb_movimento_doc_w.ie_transitorio     := 'N';
							ctb_movimento_doc_w.cd_sequencia_parametro   := c010_w.cd_sequencia_parametro;

                            if (pr_rateio_total_w < 100) then

                                vl_rateio_w       := round(c010_w.vl_material * ((100 - pr_rateio_total_w) / 100), 2);
                                vl_rateio_total_w := vl_rateio_total_w + vl_rateio_w;

                                ctb_movimento_doc_w.vl_movimento         := vl_rateio_w;
                                ctb_movimento_doc_w.cd_centro_custo      := cd_centro_custo_mat_w;
                                ctb_movimento_doc_w.nr_seq_classif_movto := nr_seq_classif_movto_w;
                                ctb_movimento_doc_w.nr_seq_ctb_documento := nr_ctb_doc_conta_pac_w;


                                -- GRAVAR MOVIMENTO CONTABIL
                                ctb_movimento_doc_p  => ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_p  => ctb_movimento_doc_w, nm_usuario_p         => nm_usuario_p, ie_commit_p          => 'N', ie_consistir_p       => 'N', ie_atualizar_saldo_p => 'N');
                            end if;

                            select count(*)
                            into STRICT   qt_registros_w
                            from   ctb_crit_rateio_proc
                            where  nr_seq_proc_interno = c010_w.nr_seq_proc_interno
                            and    dt_movimento_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_movimento_w);

                            for vet in (SELECT cd_centro_custo,
                                                round(sum(c010_w.vl_material * (pr_rateio / 100)), 2) vl_rateio
                                        from   ctb_crit_rateio_proc
                                        where  nr_seq_proc_interno = c010_w.nr_seq_proc_interno
                                        and    dt_movimento_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_movimento_w)
                                        group  by cd_centro_custo
                                        order  by 2 desc) loop

                                contador_w        := contador_w + 1;
                                vl_rateio_total_w := vl_rateio_total_w + vet.vl_rateio;

                                if (contador_w = qt_registros_w) then
                                    begin
                                        if (vl_rateio_total_w > c010_w.vl_material) then
                                            vet.vl_rateio := vet.vl_rateio - (vl_rateio_total_w - c010_w.vl_material);
                                        elsif (vl_rateio_total_w < c010_w.vl_material) then
                                            vet.vl_rateio := vet.vl_rateio + (c010_w.vl_material - vl_rateio_total_w);
                                        end if;
                                    end;
                                end if;

                                ctb_movimento_doc_w.nr_sequencia         := null;
                                ctb_movimento_doc_w.vl_movimento         := vet.vl_rateio;
                                ctb_movimento_doc_w.cd_centro_custo      := vet.cd_centro_custo;
                                ctb_movimento_doc_w.nr_seq_classif_movto := nr_seq_classif_movto_w;
                                ctb_movimento_doc_w.nr_seq_ctb_documento := nr_ctb_doc_conta_pac_w;

                                -- GRAVAR MOVIMENTO CONTABIL
                                ctb_movimento_doc_p  => ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_p  => ctb_movimento_doc_w, nm_usuario_p         => nm_usuario_p, ie_commit_p          => 'N', ie_consistir_p       => 'N', ie_atualizar_saldo_p => 'N');
                            end loop;
                            -- END CTB_RATEIO_PROC_INTERNO
                        end;
                    else
                        begin
                            ie_deb_cred_w := 'C';

                            if (c010_w.ie_cancelamento = 'E') and (ctb_param_lote_receita_w.ie_estorno_conta_contab_redut = 'S') then
                                cd_conta_contabil_redut_w := ctb_obter_conta_mat_proc(  c010_w.cd_estabelecimento,
                                                                                        c010_w.nr_interno_conta,
                                                                                        c010_w.nr_atendimento,
                                                                                        c010_w.cd_material,
                                                                                        c010_w.cd_procedimento,
                                                                                        c010_w.ie_origem_proced,
                                                                                        6);

                                if (coalesce(cd_conta_contabil_redut_w, 'X') <> 'X') then
                                    begin
                                        c010_w.vl_material            := c010_w.vl_material * -1;
                                        ie_deb_cred_w                 := 'D';
                                        c010_w.cd_conta_contabil      := cd_conta_contabil_redut_w;
                                        c010_w.cd_sequencia_parametro := null;
                                    end;
                                end if;
                            end if;

                            if (c010_w.ie_proc_mat = 'M') then
                                nm_tabela_w       := 'MATERIAL_ATEND_PACIENTE';
                                nm_atributo_w     := 'VL_MATERIAL';
                                nr_seq_info_ctb_w := 7;
                            elsif (c010_w.ie_proc_mat = 'P') then
                                nm_tabela_w       := 'PROCEDIMENTO_PACIENTE';
                                nm_atributo_w     := 'VL_PROCEDIMENTO';
                                nr_seq_info_ctb_w := 6;
                            end if;

                            ctb_movimento_doc_w := null;
                            ctb_movimento_doc_w.nr_lote_contabil := nr_lote_contabil_w;

                            if (ie_deb_cred_w = 'C') then
                                ctb_movimento_doc_w.cd_conta_credito := cd_conta_credito_w;
                                ctb_movimento_doc_w.cd_conta_debito  := null;
                            else
                                ctb_movimento_doc_w.cd_conta_debito  := cd_conta_credito_w;
                                ctb_movimento_doc_w.cd_conta_credito := null;
                            end if;

                            ctb_movimento_doc_w.cd_historico         := cd_historico_w;
                            ctb_movimento_doc_w.dt_movimento         := dt_movimento_w;
                            ctb_movimento_doc_w.vl_movimento         := c010_w.vl_material;
                            ctb_movimento_doc_w.cd_centro_custo      := cd_centro_custo_mat_w;
                            ctb_movimento_doc_w.ds_compl_historico   := ds_compl_historico_w;
                            ctb_movimento_doc_w.nr_seq_agrupamento   := nr_seq_agrupamento_w;
                            ctb_movimento_doc_w.nr_documento         := nr_documento_aux_w;
                            ctb_movimento_doc_w.ie_transitorio       := 'N';
                            ctb_movimento_doc_w.ie_origem_documento  := ie_origem_documento_w;
                            ctb_movimento_doc_w.nr_seq_info          := nr_seq_info_ctb_w;
                            ctb_movimento_doc_w.nr_seq_tab_orig      := nr_seq_tab_orig_w;
                            ctb_movimento_doc_w.nm_tabela            := nm_tabela_w;
                            ctb_movimento_doc_w.nm_atributo          := nm_atributo_w;
                            ctb_movimento_doc_w.nr_seq_doc_compl     := nr_seq_tab_compl_w;
                            ctb_movimento_doc_w.cd_estabelecimento   := c010_w.cd_estabelecimento;
                            ctb_movimento_doc_w.nr_seq_classif_movto := nr_seq_classif_movto_w;
                            ctb_movimento_doc_w.nr_seq_ctb_documento := nr_ctb_doc_conta_pac_w;

                            -- GRAVAR MOVIMENTO CONTABIL
                            ctb_movimento_doc_p  => ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_p  => ctb_movimento_doc_w, nm_usuario_p         => nm_usuario_p, ie_commit_p          => 'N', ie_consistir_p       => 'N', ie_atualizar_saldo_p => 'N');
                        end;
                    end if;

                    if (c010_w.vl_tx_adm <> 0) and (ctb_param_lote_receita_w.cd_conta_contabil_tx_adm IS NOT NULL AND ctb_param_lote_receita_w.cd_conta_contabil_tx_adm::text <> '') then
                        begin
                            ctb_movimento_doc_w := null;
                            ctb_movimento_doc_w.nr_lote_contabil     := nr_lote_contabil_w;
                            ctb_movimento_doc_w.cd_conta_credito     := ctb_param_lote_receita_w.cd_conta_contabil_tx_adm;
                            ctb_movimento_doc_w.cd_historico         := cd_historico_w;
                            ctb_movimento_doc_w.dt_movimento         := dt_movimento_w;
                            ctb_movimento_doc_w.vl_movimento         := c010_w.vl_tx_adm;
                            ctb_movimento_doc_w.cd_centro_custo      := cd_centro_custo_mat_w;
                            ctb_movimento_doc_w.ds_compl_historico   := ds_compl_historico_w;
                            ctb_movimento_doc_w.nr_seq_agrupamento   := nr_seq_agrupamento_w;
                            ctb_movimento_doc_w.nr_documento         := nr_documento_aux_w;
                            ctb_movimento_doc_w.ie_transitorio       := 'N';
                            ctb_movimento_doc_w.ie_origem_documento  := ie_origem_documento_w;
                            ctb_movimento_doc_w.nr_seq_info          := 6;
                            ctb_movimento_doc_w.nr_seq_tab_orig      := nr_seq_tab_orig_w;
                            ctb_movimento_doc_w.nm_tabela            := 'PROCEDIMENTO_PACIENTE';
                            ctb_movimento_doc_w.nm_atributo          := 'VL_TX_ADM';
                            ctb_movimento_doc_w.nr_seq_doc_compl     := nr_seq_tab_compl_w;
                            ctb_movimento_doc_w.nr_seq_classif_movto := nr_seq_classif_movto_w;
                            ctb_movimento_doc_w.nr_seq_ctb_documento := nr_ctb_doc_conta_pac_w;

                            -- GRAVAR MOVIMENTO CONTABIL
                            ctb_movimento_doc_p  => ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_p  => ctb_movimento_doc_w, nm_usuario_p         => nm_usuario_p, ie_commit_p          => 'N', ie_consistir_p       => 'N', ie_atualizar_saldo_p => 'N');
                        end;
                    end if;

                    vl_plus_repasse_w := 0;
                    vl_repasse_rec_w  := 0;
                    if (coalesce(ctb_param_lote_receita_w.cd_conta_repasse_rec, '0') <> '0') and
                        ((ctb_param_lote_receita_w.ie_contab_repasse_receita = 'S') or (ctb_param_lote_receita_w.ie_contab_repasse_receita = 'V')) and (coalesce(c010_w.vl_repasse, 0) <> 0) then

                        if (vl_material_w > 0) then
                            begin
                                if (vl_material_w >= c010_w.vl_repasse) then
                                    begin
                                        vl_repasse_rec_w := coalesce(c010_w.vl_repasse, 0);
                                    end;
                                elsif (vl_material_w < c010_w.vl_repasse) then
                                    begin
                                        vl_plus_repasse_w := coalesce(c010_w.vl_repasse, 0) - coalesce(vl_material_w, 0);
                                        vl_repasse_rec_w  := coalesce(c010_w.vl_repasse, 0) - coalesce(vl_plus_repasse_w, 0);
                                    end;
                                end if;
                            end;
                        elsif (vl_material_w < 0) then
                            begin
                                if (vl_material_w <= c010_w.vl_repasse) then
                                    begin
                                        vl_repasse_rec_w := coalesce(c010_w.vl_repasse, 0);

                                    end;
                                elsif (vl_material_w > c010_w.vl_repasse) then
                                    begin
                                        vl_plus_repasse_w := coalesce(c010_w.vl_repasse, 0) - coalesce(vl_material_w, 0);
                                        vl_repasse_rec_w  := coalesce(c010_w.vl_repasse, 0) - coalesce(vl_plus_repasse_w, 0);
                                    end;
                                end if;
                            end;
                        end if;

                        if (c010_w.ie_proc_mat = 'M') then
                            nm_tabela_w       := 'MATERIAL_ATEND_PACIENTE';
                            nr_seq_info_ctb_w := 7;
                        elsif (c010_w.ie_proc_mat = 'P') then
                            nm_tabela_w       := 'PROCEDIMENTO_PACIENTE';
                            nr_seq_info_ctb_w := 6;
                        end if;

                        ctb_movimento_doc_w := null;
                        ctb_movimento_doc_w.nr_lote_contabil     := nr_lote_contabil_w;
                        ctb_movimento_doc_w.cd_conta_credito     := ctb_param_lote_receita_w.cd_conta_repasse_rec;
                        ctb_movimento_doc_w.cd_historico         := cd_historico_w;
                        ctb_movimento_doc_w.dt_movimento         := dt_movimento_w;
                        ctb_movimento_doc_w.vl_movimento         := vl_repasse_rec_w; /* Trocado de c010_w.vl_repasse Matheus/Marlon em 26/09/2011*/
                        ctb_movimento_doc_w.cd_centro_custo      := cd_centro_custo_mat_w;
                        ctb_movimento_doc_w.ds_compl_historico   := ds_compl_historico_w;
                        ctb_movimento_doc_w.nr_seq_agrupamento   := nr_seq_agrupamento_w;
                        ctb_movimento_doc_w.nr_documento         := nr_documento_aux_w;
                        ctb_movimento_doc_w.ie_transitorio       := 'N';
                        ctb_movimento_doc_w.ie_origem_documento  := ie_origem_documento_w;
                        ctb_movimento_doc_w.nr_seq_info          := nr_seq_info_ctb_w;
                        ctb_movimento_doc_w.nr_seq_tab_orig      := nr_seq_tab_orig_w;
                        ctb_movimento_doc_w.nm_tabela            := nm_tabela_w;
                        ctb_movimento_doc_w.nm_atributo          := 'VL_REPASSE';
                        ctb_movimento_doc_w.nr_seq_doc_compl     := nr_seq_tab_compl_w;
                        ctb_movimento_doc_w.nr_seq_classif_movto := nr_seq_classif_movto_w;
                        ctb_movimento_doc_w.nr_seq_ctb_documento := nr_ctb_doc_conta_pac_w;

                        -- GRAVAR MOVIMENTO CONTABIL
                        ctb_movimento_doc_p  => ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_p  => ctb_movimento_doc_w, nm_usuario_p         => nm_usuario_p, ie_commit_p          => 'N', ie_consistir_p       => 'N', ie_atualizar_saldo_p => 'N');
                    end if;

                    if (ctb_param_lote_receita_w.ie_contab_desconto_rec = 'S') then
                        open c030;
                        loop
                            fetch c030
                                into nr_seq_valor_w,
                                      vl_desconto_w,
                                      nm_tabela_w,
                                      nm_atributo_w,
                                      nr_seq_info_ctb_w,
                                      ie_classificacao_w;
                            EXIT WHEN NOT FOUND; /* apply on c030 */
                            begin
                                cd_centro_custo_debito_w := null;
                                cd_conta_contabil_conv_w := obter_conta_convenio(c010_w.cd_estabelecimento,
                                                                                 c010_w.cd_convenio,
                                                                                 c010_w.ie_tipo_atendimento,
                                                                                 coalesce(ie_classificacao_w, 'D'),
                                                                                 c010_w.dt_mesano_referencia,
                                                                                 null,
                                                                                 c010_w.cd_categoria_parametro,
                                                                                 cd_plano_convenio_w,
                                                                                 c010_w.cd_setor_atendimento,
                                                                                 null,
                                                                                 null);

                                begin
                                    select  coalesce(ie_centro_custo, 'N')
                                    into STRICT    ie_centro_custo_w
                                    from    conta_contabil
                                    where   cd_conta_contabil = cd_conta_contabil_conv_w;
                                exception
                                    when others then
                                        ie_centro_custo_w := 'N';
                                end;

                                if (ie_centro_custo_w = 'S') then
                                    begin
                                        select  cd_centro_custo
                                        into STRICT    cd_centro_custo_debito_w
                                        from    setor_atendimento
                                        where   cd_setor_atendimento = c010_w.cd_setor_atendimento;
                                    exception
                                        when others then
                                            cd_centro_custo_debito_w := null;
                                    end;
                                end if;

                                ctb_movimento_doc_w := null;
                                ctb_movimento_doc_w.nr_lote_contabil     := nr_lote_contabil_w;
                                ctb_movimento_doc_w.cd_conta_debito      := cd_conta_contabil_conv_w;
                                ctb_movimento_doc_w.cd_historico         := cd_historico_w;
                                ctb_movimento_doc_w.dt_movimento         := dt_movimento_w;
                                ctb_movimento_doc_w.vl_movimento         := vl_desconto_w;
                                ctb_movimento_doc_w.cd_centro_custo      := cd_centro_custo_debito_w;
                                ctb_movimento_doc_w.ds_compl_historico   := ds_compl_historico_w;
                                ctb_movimento_doc_w.nr_seq_agrupamento   := nr_seq_agrupamento_w;
                                ctb_movimento_doc_w.nr_documento         := nr_documento_aux_w;
                                ctb_movimento_doc_w.ie_transitorio       := 'N';
                                ctb_movimento_doc_w.ie_origem_documento  := ie_origem_documento_w;
                                ctb_movimento_doc_w.nr_seq_info          := nr_seq_info_ctb_w;
                                ctb_movimento_doc_w.nr_seq_tab_orig      := nr_seq_valor_w;
                                ctb_movimento_doc_w.nm_tabela            := nm_tabela_w;
                                ctb_movimento_doc_w.nm_atributo          := nm_atributo_w;
                                ctb_movimento_doc_w.nr_seq_doc_compl     := nr_seq_tab_compl_w;
                                ctb_movimento_doc_w.nr_seq_classif_movto := nr_seq_classif_movto_w;
                                ctb_movimento_doc_w.nr_seq_ctb_documento := nr_ctb_doc_conta_pac_w;

                                -- GRAVAR MOVIMENTO CONTABIL
                                ctb_movimento_doc_p  => ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_p  => ctb_movimento_doc_w, nm_usuario_p         => nm_usuario_p, ie_commit_p          => 'N', ie_consistir_p       => 'N', ie_atualizar_saldo_p => 'N');

                                /* Credito */

                                ds_compl_historico_w := substr(ds_compl_historico_w || ds_desconto_w, 1, 255);

                                ctb_movimento_doc_w.nr_sequencia       := null;
                                ctb_movimento_doc_w.vl_movimento       := vl_desconto_w;
                                ctb_movimento_doc_w.cd_conta_credito   := c010_w.cd_conta_contabil;
                                ctb_movimento_doc_w.cd_conta_debito    := null;
                                ctb_movimento_doc_w.cd_centro_custo    := cd_centro_custo_mat_w;
                                ctb_movimento_doc_w.ds_compl_historico := ds_compl_historico_w;
								ctb_movimento_doc_w.cd_sequencia_parametro := c010_w.cd_sequencia_parametro;

                                -- GRAVAR MOVIMENTO CONTABIL
                                ctb_movimento_doc_p  => ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_p  => ctb_movimento_doc_w, nm_usuario_p         => nm_usuario_p, ie_commit_p          => 'N', ie_consistir_p       => 'N', ie_atualizar_saldo_p => 'N');

                            end;
                        end loop;
                        close c030;
                    end if;
					
					begin												
						select 	max(cd_conta_desconto)
						into STRICT	cd_conta_contabil_conv_w
						from	parametro_faturamento a
						where 	a.cd_estabelecimento = obter_estabelecimento_ativo();
					exception
						when no_data_found then
							cd_conta_contabil_conv_w := null;
					end;
					
					begin
						select  max(ie_centro_custo)
						into STRICT    ie_centro_custo_w
						from    conta_contabil
						where   cd_conta_contabil = cd_conta_contabil_conv_w;
					exception
						when no_data_found then
							ie_centro_custo_w := 'N';
					end;
					
					if (coalesce(cd_conta_contabil_conv_w, '0')  <> '0') then
						open c040;
						loop
							fetch c040
								into nr_seq_valor_w,
									  vl_desconto_w,
									  nm_tabela_w,
									  nm_atributo_w,
									  nr_seq_info_ctb_w;
							EXIT WHEN NOT FOUND; /* apply on c040 */
							begin

								if (ie_centro_custo_w = 'S') then
									begin
										select  max(cd_centro_custo)
										into STRICT    cd_centro_custo_debito_w
										from    setor_atendimento
										where   cd_setor_atendimento = c010_w.cd_setor_atendimento;
									exception
										when no_data_found then
											cd_centro_custo_debito_w := null;
									end;
								end if;

								ctb_movimento_doc_w := null;
								ctb_movimento_doc_w.nr_lote_contabil     := nr_lote_contabil_w;
								ctb_movimento_doc_w.cd_conta_debito      := cd_conta_contabil_conv_w;
								ctb_movimento_doc_w.cd_historico         := cd_historico_w;
								ctb_movimento_doc_w.dt_movimento         := dt_movimento_w;
								ctb_movimento_doc_w.vl_movimento         := vl_desconto_w;
								ctb_movimento_doc_w.cd_centro_custo      := cd_centro_custo_debito_w;
								ctb_movimento_doc_w.ds_compl_historico   := ds_compl_historico_w;
								ctb_movimento_doc_w.nr_seq_agrupamento   := nr_seq_agrupamento_w;
								ctb_movimento_doc_w.nr_documento         := nr_documento_aux_w;
								ctb_movimento_doc_w.ie_transitorio       := 'N';
								ctb_movimento_doc_w.ie_origem_documento  := ie_origem_documento_w;
								ctb_movimento_doc_w.nr_seq_info          := nr_seq_info_ctb_w;
								ctb_movimento_doc_w.nr_seq_tab_orig      := nr_seq_valor_w;
								ctb_movimento_doc_w.nm_tabela            := nm_tabela_w;
								ctb_movimento_doc_w.nm_atributo          := nm_atributo_w;
								ctb_movimento_doc_w.nr_seq_doc_compl     := nr_seq_tab_compl_w;
								ctb_movimento_doc_w.nr_seq_classif_movto := nr_seq_classif_movto_w;
								ctb_movimento_doc_w.nr_seq_ctb_documento := nr_ctb_doc_conta_pac_w;

								-- GRAVAR MOVIMENTO CONTABIL
								ctb_movimento_doc_p  => ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_p  => ctb_movimento_doc_w, nm_usuario_p         => nm_usuario_p, ie_commit_p          => 'N', ie_consistir_p       => 'N', ie_atualizar_saldo_p => 'N');

								/* Credito */

								ds_compl_historico_w := substr(ds_compl_historico_w || ds_desconto_w, 1, 255);

								ctb_movimento_doc_w.nr_sequencia       := null;
								ctb_movimento_doc_w.vl_movimento       := vl_desconto_w;
								ctb_movimento_doc_w.cd_conta_credito   := c010_w.cd_conta_contabil;
								ctb_movimento_doc_w.cd_conta_debito    := null;
								ctb_movimento_doc_w.cd_centro_custo    := cd_centro_custo_mat_w;
								ctb_movimento_doc_w.ds_compl_historico := ds_compl_historico_w;
								ctb_movimento_doc_w.cd_sequencia_parametro := c010_w.cd_sequencia_parametro;

								-- GRAVAR MOVIMENTO CONTABIL
								ctb_movimento_doc_p  => ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_p  => ctb_movimento_doc_w, nm_usuario_p         => nm_usuario_p, ie_commit_p          => 'N', ie_consistir_p       => 'N', ie_atualizar_saldo_p => 'N');

							end;
						end loop;
						close c040;
					end if;

                    if (ctb_param_lote_receita_w.ie_origem_contab_trib_rec = 'T') and
                        ((nr_seq_prot_trib_w = c010_w.nr_seq_protocolo) and (nr_interno_conta_trib_w <> c010_w.nr_interno_conta) or (nr_seq_prot_trib_w <> c010_w.nr_seq_protocolo) and (nr_interno_conta_trib_w <> c010_w.nr_interno_conta)) then
                        begin
                            nr_seq_prot_trib_w      := c010_w.nr_seq_protocolo;
                            nr_interno_conta_trib_w := c010_w.nr_interno_conta;

                            open c_trib_titulo;
                            loop
                                fetch c_trib_titulo
                                    into vetTrib;
                                EXIT WHEN NOT FOUND; /* apply on c_trib_titulo */
                                begin
                                    nr_documento_aux_w    := null; --c010_w.nr_seq_protocolo;
                                    ie_origem_documento_w := null; --5; -- dominio 6091
                                    vl_transacao_w        := vetTrib.vl_tributo;
                                    cd_cgc_w              := vetTrib.cd_cgc;
                                    cd_pessoa_fisica_w    := vetTrib.cd_pessoa_fisica;
                                    nr_seq_trans_rec_w    := vetTrib.nr_seq_trans_rec;

                                    -- CONTABILIZA TRANSACAO FINANCEIRA
                                    dados_contab_w                     := null;
                                    dados_contab_w.nr_lote_contabil    := nr_lote_contabil_w;
                                    dados_contab_w.nr_seq_agrupamento  := nr_seq_agrupamento_w;
                                    dados_contab_w.dt_transacao        := dt_movimento_w;
                                    dados_contab_w.nr_seq_trans_fin    := nr_seq_trans_rec_w;
                                    dados_contab_w.nm_atributo         := 'VL_TRIBUTO';
                                    dados_contab_w.cd_pessoa_fisica    := cd_pessoa_fisica_w;
                                    dados_contab_w.cd_cnpj             := cd_cgc_w;
                                    dados_contab_w.cd_setor            := c010_w.cd_setor_atendimento;
                                    dados_contab_w.cd_convenio         := c010_w.cd_convenio;
                                    dados_contab_w.nr_doc_movto        := nr_documento_aux_w;
                                    dados_contab_w.cd_tributo          := vetTrib.cd_tributo;
                                    dados_contab_w.cd_tributo_regra    := vetTrib.cd_tributo;
                                    dados_contab_w.nm_tabela           := 'TITULO_RECEBER_TRIB';
                                    dados_contab_w.ie_origem_documento := ie_origem_documento_w;
                                    dados_contab_w.nr_seq_tab_orig     := nr_seq_tab_orig_w;

                                    dados_contab_w.doc                       := null;
                                    dados_contab_w.doc.cd_estabelecimento    := c010_w.cd_estabelecimento;
                                    dados_contab_w.doc.vl_movimento          := vl_transacao_w;
                                    dados_contab_w.doc.cd_tipo_lote_contabil := 6;
                                    dados_contab_w.doc.dt_competencia        := dt_referencia_w;
                                    dados_contab_w.doc.nm_atributo           := 'VL_TRIBUTO';
                                    dados_contab_w.doc.nm_tabela             := 'TITULO_RECEBER_TRIB';
                                    dados_contab_w.doc.nr_documento          := nr_documento_aux_w;
                                    dados_contab_w.doc.nr_seq_doc_compl      := nr_seq_tab_compl_w;
                                    dados_contab_w.doc.nr_seq_info           := nr_seq_info_ctb_w;
                                    dados_contab_w.doc.nr_seq_trans_financ   := nr_seq_trans_rec_w;
                                    dados_contab_w.doc.nr_sequencia          := nr_ctb_doc_conta_pac_w;

                                    ctb_contab_onl_lote_fin_pck.contabiliza_trans_financ(dados_contab_w, nm_usuario_p);
                                    ds_inconsistencia_w := coalesce(dados_contab_w.doc.ds_inconsistencia, ds_inconsistencia_w);

                                    update  titulo_receber_trib a
                                    set     nr_lote_contabil = nr_lote_contabil_w
                                    where   nr_sequencia = vetTrib.nr_sequencia;

                                end;
                            end loop;
                            close c_trib_titulo;
                        end;
                    end if;

                    /* Contabilizar os repasses junto com a receita */

                    if ((ctb_param_lote_receita_w.ie_contab_repasse_receita = 'S') or (ctb_param_lote_receita_w.ie_contab_repasse_receita = 'V')) then
                        begin

                            open c_contab_repasse;
                            loop
                                fetch c_contab_repasse
                                    into c_contab_repasse_w;
                                EXIT WHEN NOT FOUND; /* apply on c_contab_repasse */
                                begin

                                    nr_seq_tab_orig_w                 := c_contab_repasse_w.nr_sequencia;
                                    nr_seq_protocolo_w                := null;
                                    vl_total_receita_w                := 0;
                                    vl_total_repasse_w                := 0;
                                    vl_diferenca_w                    := 0;
                                    ie_contab_diferenca_w             := 'N';
                                    nm_beneficiario_ant_w             := '';
                                    c_contab_repasse_w.ds_nota_fiscal := '';

                                    if (coalesce(c_contab_repasse_w.nr_interno_conta, 0) <> 0) then
                                        select coalesce(max(nr_seq_protocolo), 0),
                                                coalesce(max(ie_cancelamento), '')
                                        into STRICT   nr_seq_protocolo_w,
                                                ie_cancelamento_w
                                        from   conta_paciente
                                        where  nr_interno_conta = c_contab_repasse_w.nr_interno_conta;
                                    end if;

                                    if (coalesce(c_contab_repasse_w.cd_setor, 0) <> 0) and (coalesce(c_contab_repasse_w.cd_centro_custo, 0) = 0) then

                                        select  max(cd_centro_custo)
                                        into STRICT    c_contab_repasse_w.cd_centro_custo
                                        from    setor_atendimento
                                        where   cd_setor_atendimento = c_contab_repasse_w.cd_setor;

                                    end if;

                                    if (coalesce(c_contab_repasse_w.nr_seq_trans_fin::text, '') = '') and (c_contab_repasse_w.cd_regra IS NOT NULL AND c_contab_repasse_w.cd_regra::text <> '') then
                                        select  nr_seq_trans_fin_prod
                                        into STRICT    c_contab_repasse_w.nr_seq_trans_fin
                                        from    regra_repasse_terceiro
                                        where   cd_regra = c_contab_repasse_w.cd_regra;
                                    end if;

                                    select  substr(obter_nome_pf_pj(c_contab_repasse_w.cd_pessoa_fisica, c_contab_repasse_w.cd_cgc), 1, 80)
                                    into STRICT    nm_beneficiario_w
;

                                    ie_tipo_convenio_w := 0;

                                    if (coalesce(c_contab_repasse_w.cd_convenio, 0) > 0) then

                                        select  substr(obter_nome_convenio(c_contab_repasse_w.cd_convenio), 1, 40)
                                        into STRICT    ds_convenio_w
;

                                        select  max(ie_tipo_convenio)
                                        into STRICT    ie_tipo_convenio_w
                                        from    convenio
                                        where   cd_convenio = c_contab_repasse_w.cd_convenio;

                                    end if;

                                    c_contab_repasse_w.ds_nota_fiscal := substr(obter_nota_conta_protocolo(nr_seq_protocolo_w, c_contab_repasse_w.nr_interno_conta), 1, 255);

                                    if (ie_tipo_convenio_w = 2) or (coalesce(c_contab_repasse_w.ds_nota_fiscal, 'X') = 'X') then
                                        c_contab_repasse_w.ds_nota_fiscal := substr(obter_nota_conta_protocolo(nr_seq_protocolo_w, 0), 1, 255);
                                    end if;

                                    if (nm_atrib_agrupador_rep_w = 'NR_REPASSE_TERCEIRO') then
                                        nr_seq_agrupamento_w := c_contab_repasse_w.nr_repasse_terceiro;
                                    elsif (nm_atrib_agrupador_rep_w = 'NR_ATENDIMENTO') then
                                        nr_seq_agrupamento_w := c_contab_repasse_w.nr_atendimento;
                                    elsif (nm_atrib_agrupador_rep_w = 'NR_SEQ_TERCEIRO') then
                                        nr_seq_agrupamento_w := c_contab_repasse_w.nr_seq_terceiro;
                                    end if;

                                    if (coalesce(nr_seq_agrupamento_w, 0) = 0) then
                                        nr_seq_agrupamento_w := c_contab_repasse_w.nr_atendimento;
                                    end if;

                                    begin

                                        if (coalesce(nr_seq_protocolo_w, 0) <> 0) then
                                            begin
                                                select  coalesce(max(nr_seq_lote_protocolo), 0)
                                                into STRICT    nr_seq_lote_w
                                                from    protocolo_convenio
                                                where   nr_seq_protocolo = nr_seq_protocolo_w;
                                            end;
                                        end if;

                                        select  max(nr_sequencia)
                                        into STRICT    nr_seq_nota_fiscal_w
                                        from    nota_fiscal
                                        where   nr_seq_protocolo = nr_seq_protocolo_w;

                                        if (coalesce(nr_seq_nota_fiscal_w::text, '') = '') then
                                            select  max(nr_sequencia)
                                            into STRICT    nr_seq_nota_fiscal_w
                                            from    nota_fiscal
                                            where   nr_interno_conta = c_contab_repasse_w.nr_interno_conta;
                                        end if;

                                        if (coalesce(nr_seq_nota_fiscal_w::text, '') = '') then
                                            select  max(nr_sequencia)
                                            into STRICT    nr_seq_nota_fiscal_w
                                            from    nota_fiscal
                                            where   nr_seq_lote_prot = nr_seq_lote_w;
                                        end if;

                                        nm_agrup_rec_w := coalesce(trim(both obter_agrupador_contabil(6)), 'NR_INTERNO_CONTA');

                                        if (coalesce(nr_seq_nota_fiscal_w, 0) <> 0) then
                                            begin
                                                select nr_nota_fiscal
                                                into STRICT   nr_nota_fiscal_w
                                                from   nota_fiscal
                                                where  nr_sequencia = nr_seq_nota_fiscal_w
                                                and    ie_situacao = '1';
                                            exception
                                                when others then
                                                    nr_nota_fiscal_w := null;
                                            end;
                                        end if;

                                        if (nm_agrup_rec_w = 'NR_INTERNO_CONTA') then
                                            nr_seq_agrupamento_w := c_contab_repasse_w.nr_interno_conta;
                                        elsif (nm_agrup_rec_w = 'NR_ATENDIMENTO') then
                                            nr_seq_agrupamento_w := c_contab_repasse_w.nr_atendimento;
                                        elsif (nm_agrup_rec_w = 'NR_SEQ_PROTOCOLO') then
                                            nr_seq_agrupamento_w := nr_seq_protocolo_w;
                                        elsif (nm_agrup_rec_w = 'NR_NOTA_FISCAL') then
                                            nr_seq_agrupamento_w := nr_nota_fiscal_w;
                                        elsif (nm_agrup_rec_w = 'DS_MES_ANO') then
                                            nr_seq_agrupamento_w := dt_mesano_w;
                                        end if;

                                        if (coalesce(nr_seq_agrupamento_w, 0) = 0) then
                                            nr_seq_agrupamento_w := c_contab_repasse_w.nr_interno_conta;
                                        end if;

                                        if (c_contab_repasse_w.ie_proc_mat = 'P') then
                                            begin
                                                select coalesce(max(vl_procedimento), 0)
                                                into STRICT   vl_total_receita_w
                                                from   procedimento_paciente
                                                where  nr_sequencia = c_contab_repasse_w.nr_seq_mat_proc
                                                and    nr_lote_contabil = nr_lote_contabil_w;

                                                select  coalesce(sum(vl_repasse), 0)
                                                into STRICT    vl_total_repasse_w
                                                from    procedimento_repasse
                                                where   nr_seq_procedimento = c_contab_repasse_w.nr_seq_mat_proc;

                                                if (ie_cancelamento_w = 'E') then
                                                    begin

                                                        select coalesce(max(vl_procedimento), 0)
                                                        into STRICT    vl_total_receita_w
                                                        from    procedimento_paciente
                                                        where   nr_sequencia = c_contab_repasse_w.nr_seq_mat_proc;

                                                        select coalesce(sum(a.vl_repasse), 0)
                                                        into STRICT   vl_total_repasse_w
                                                        from   procedimento_repasse a
                                                        where  a.nr_seq_procedimento = c_contab_repasse_w.nr_seq_mat_proc
                                                        and    coalesce(nr_lote_contabil, 0) = 0
                                                        and    (nr_interno_conta_est IS NOT NULL AND nr_interno_conta_est::text <> '');
                                                    end;
                                                end if;

                                            end;
                                        end if;
                                    end;

                                    if (c_contab_repasse_w.ie_proc_mat in ('P', 'M')) and (c_contab_repasse_w.nm_atributo not in ('VL_REPASSE_LIQ', 'VL_REPASSE_DIF')) and (coalesce(abs(vl_total_repasse_w), 0) > coalesce(abs(vl_total_receita_w), 0)) and (c_contab_repasse_w.nr_seq_trans_fin_rep_maior IS NOT NULL AND c_contab_repasse_w.nr_seq_trans_fin_rep_maior::text <> '') then
                                        begin
                                            if (vl_total_receita_w >= 0) then
                                                begin
                                                    if (vl_total_receita_w < vl_total_repasse_w) then
                                                        begin
                                                            vl_diferenca_w := coalesce(vl_total_repasse_w, 0) - coalesce(vl_total_receita_w, 0);
                                                        end;
                                                    end if;

                                                end;
                                            elsif (vl_total_receita_w < 0) then
                                                begin
                                                    if (vl_total_receita_w > vl_total_repasse_w) then
                                                        begin
                                                            vl_diferenca_w := coalesce(vl_total_repasse_w, 0) - coalesce(vl_total_receita_w, 0);
                                                        end;
                                                    end if;
                                                end;
                                            end if;

                                            IF (c_contab_repasse_w.ie_tipo = 'E') and (c_contab_repasse_w.nr_interno_conta_est IS NOT NULL AND c_contab_repasse_w.nr_interno_conta_est::text <> '') and (c_contab_repasse_w.ie_status = 'E') then
                                                begin
                                                    vl_diferenca_w := coalesce(vl_total_repasse_w, 0) - coalesce(vl_total_receita_w * -1, 0);
                                                end;
                                            end if;

                                            select count(*)
                                            into STRICT   qt_registro_w
                                            from   procedimento_repasse
                                            where  nr_seq_procedimento = c_contab_repasse_w.nr_seq_mat_proc
                                            and    nr_lote_contabil = nr_lote_contabil_w;

                                            if (qt_registro_w = 0) or (c_contab_repasse_w.ie_tipo = 'E') then
                                                ie_contab_diferenca_w := 'S';
                                            end if;
                                        end;
                                    end if;

                                    if (c_contab_repasse_w.ie_proc_mat = 'P') then
                                        begin
                                            update procedimento_repasse
                                            set    nr_lote_contabil = nr_lote_contabil_w,
                                                    nr_seq_trans_fin = c_contab_repasse_w.nr_seq_trans_fin,
                                                    dt_contabil      = dt_referencia_w
                                            where  nr_sequencia = c_contab_repasse_w.nr_sequencia;

                                        end;
                                    elsif (c_contab_repasse_w.ie_proc_mat = 'M') then
                                        begin

                                            update material_repasse
                                            set    nr_lote_contabil = nr_lote_contabil_w,
                                                    nr_seq_trans_fin = c_contab_repasse_w.nr_seq_trans_fin,
                                                    dt_contabil      = dt_referencia_w
                                            where  nr_sequencia = c_contab_repasse_w.nr_sequencia;

                                        end;
                                    elsif (c_contab_repasse_w.ie_proc_mat = 'I') then
                                        update repasse_terceiro_item
                                        set    nr_lote_contabil_prov = nr_lote_contabil_w,
                                                nr_seq_trans_fin_prov = c_contab_repasse_w.nr_seq_trans_fin
                                        where  nr_sequencia = c_contab_repasse_w.nr_sequencia;
                                    end if;

                                    ds_titulo_w := substr(OBTER_TITULO_REPASSE(c_contab_repasse_w.nr_repasse_terceiro), 1, 255);

                                    select max(nm_pessoa_fisica) into STRICT nm_medico_executor_w from pessoa_fisica where cd_pessoa_fisica = c_contab_repasse_w.cd_medico_executor;

                                    select max(DS_REGRA) into STRICT ds_responsavel_credito_w from regra_honorario where cd_regra = c_contab_repasse_w.ie_responsavel_credito;

                                    select max(ds_setor_atendimento) into STRICT ds_setor_atendimento_w from setor_atendimento where cd_setor_atendimento = c_contab_repasse_w.cd_setor;

                                    ds_interno_conta_w := c_contab_repasse_w.nr_interno_conta;
                                    if (c_contab_repasse_w.nr_interno_conta = 0) then
                                        ds_interno_conta_w := null;
                                    end if;

                                    /*Rotina para obter a conta CONTABIL do terceiro anterior */

                                    if (c_contab_repasse_w.nm_atributo in ('VL_TROCA_TERC_MAT', 'VL_TROCA_TERC_PROC')) and (c_contab_repasse_w.nr_seq_terc_ant IS NOT NULL AND c_contab_repasse_w.nr_seq_terc_ant::text <> '') then
                                        begin
                                            c_contab_repasse_w.cd_conta_contabil := '';
                                            begin
                                                select cd_cgc,
                                                        cd_pessoa_fisica
                                                into STRICT   cd_cgc_ant_w,
                                                        cd_pessoa_fisica_ant_w
                                                from   terceiro
                                                where  nr_sequencia = c_contab_repasse_w.nr_seq_terc_ant;

                                            exception
                                                when others then
                                                    cd_cgc_ant_w           := null;
                                                    cd_pessoa_fisica_ant_w := null;
                                            end;

                                            if (cd_cgc_ant_w IS NOT NULL AND cd_cgc_ant_w::text <> '') then

                                                select coalesce(max(cd_conta_contabil), '')
                                                into STRICT   c_contab_repasse_w.cd_conta_contabil
                                                from   terceiro
                                                where  nr_sequencia = c_contab_repasse_w.nr_seq_terc_ant;

                                            elsif (cd_pessoa_fisica_ant_w IS NOT NULL AND cd_pessoa_fisica_ant_w::text <> '') then
                                                select coalesce(max(cd_conta_contabil), '')
                                                into STRICT   c_contab_repasse_w.cd_conta_contabil
                                                from   terceiro
                                                where  nr_sequencia = c_contab_repasse_w.nr_seq_terc_ant;
                                            end if;

                                            select substr(obter_nome_pf_pj(cd_pessoa_fisica_ant_w, cd_cgc_ant_w), 1, 80)
                                            into STRICT   nm_beneficiario_ant_w
;

                                        end;
                                    end if;

                                    if (c_contab_repasse_w.ie_proc_mat = 'M') then
                                        select a.ie_status
                                        into STRICT   c_contab_repasse_w.ie_status
                                        from   material_repasse a
                                        where  a.nr_sequencia = c_contab_repasse_w.nr_sequencia;
                                    elsif (c_contab_repasse_w.ie_proc_mat = 'P') then
                                        select a.ie_status
                                        into STRICT   c_contab_repasse_w.ie_status
                                        from   procedimento_repasse a
                                        where a.nr_sequencia = c_contab_repasse_w.nr_sequencia;
                                    end if;

                                    ds_estorno_w := '';

                                    if (coalesce(c_contab_repasse_w.ie_status, 'X') = 'E') then
                                        ds_estorno_w := Wheb_mensagem_pck.get_texto(799390);
                                    end if;

                                    if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
                                        select  max(substr(obter_nfe_conta_protocolo(nr_seq_protocolo, 0), 1, 254))
                                        into STRICT    nr_nfe_conta_protocolo_w
                                        from    nota_fiscal x
                                        where   x.nr_sequencia = (  SELECT  max(nr_sequencia)
                                                                    from    nota_fiscal
                                                                    where   nr_seq_protocolo = nr_seq_protocolo_w);
                                    elsif (c_contab_repasse_w.nr_interno_conta IS NOT NULL AND c_contab_repasse_w.nr_interno_conta::text <> '') then
                                        select  max(substr(obter_nfe_conta_protocolo(0, nr_interno_conta), 1, 254))
                                        into STRICT    nr_nfe_conta_protocolo_w
                                        from    nota_fiscal x
                                        where   x.nr_sequencia = (  SELECT  max(nr_sequencia)
                                                                    from    nota_fiscal
                                                                    where   nr_interno_conta = c_contab_repasse_w.nr_interno_conta);
                                    end if;

                                    select  max(substr(obter_mes_extenso(substr(obter_desc_mes_ano(b.dt_mesano_referencia, 'N'), 1, 2), 'A'), 1, 20) || '/' || substr(to_char(b.dt_mesano_referencia, 'dd/mm/yyyy'), 7, 4)),
                                            max(substr(obter_desc_mes_ano(b.dt_mesano_referencia, 'AB'), 1, 20))
                                    into STRICT    ds_mesano_referencia_w,
                                            ds_mesano_referencia_abrev_w
                                    from    protocolo_convenio b,
                                            conta_paciente     a
                                    where   a.nr_seq_protocolo = b.nr_seq_protocolo
                                    and     a.nr_interno_conta = c_contab_repasse_w.nr_interno_conta;

                                    select  substr(obter_titulos_protocolo(nr_seq_protocolo), 1, 200),
                                            substr(obter_titulo_conta_protocolo(nr_seq_protocolo, nr_interno_conta), 1, 200),
                                            substr(obter_dados_protocolo((nr_seq_protocolo), 'DT'), 1, 255)
                                    into STRICT    ds_titulos_prot_w,
                                            ds_titulos_conta_w,
                                            dt_conta_protocolo_w
                                    from    conta_paciente
                                    where   nr_interno_conta = c_contab_repasse_w.nr_interno_conta;

                                    select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc), 1, 80))
                                    into STRICT    nm_pessoa_nota_fiscal_w
                                    from    nota_fiscal x
                                    where   x.nr_sequencia = nr_seq_nota_fiscal_w;

                                    if (c_contab_repasse_w.ie_proc_mat in ('P', 'M')) and (c_contab_repasse_w.ie_status IS NOT NULL AND c_contab_repasse_w.ie_status::text <> '') then
                                        select  substr(obter_valor_dominio(1129, c_contab_repasse_w.ie_status), 1, 100)
                                        into STRICT    ds_status_repasse_w
;
                                    end if;

                                    CALL ctb_online_pck.definir_atrib_compl(cd_tipo_lote_contabil_w);
                                    CALL ctb_online_pck.set_value_compl_hist('DS_CONVENIO', ds_convenio_w); --2
                                    CALL ctb_online_pck.set_value_compl_hist('NR_ATENDIMENTO', c_contab_repasse_w.nr_atendimento); --3
                                    CALL ctb_online_pck.set_value_compl_hist('NR_INTERNO_CONTA', c_contab_repasse_w.nr_interno_conta); --5
                                    CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_PROTOCOLO', nr_seq_protocolo_w); --6
                                    CALL ctb_online_pck.set_value_compl_hist('DS_TITULO_CONTA', ds_titulos_conta_w); --10
                                    CALL ctb_online_pck.set_value_compl_hist('DS_TITULO_PROTOCOLO', ds_titulos_prot_w); --11
                                    CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REFERENCIA', ds_mesano_referencia_w); --12
                                    CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REFERENCIA_ABREV', ds_mesano_referencia_abrev_w); --13
                                    CALL ctb_online_pck.set_value_compl_hist('NM_PESSOA_NF', nm_pessoa_nota_fiscal_w); --14
                                    CALL ctb_online_pck.set_value_compl_hist('REPASSE_NM_BENEFICIARIO', nm_beneficiario_w); --15
                                    CALL ctb_online_pck.set_value_compl_hist('REPASSE_NR_NOTA_FISCAL', c_contab_repasse_w.ds_nota_fiscal); --16
                                    CALL ctb_online_pck.set_value_compl_hist('DS_STATUS_REPASSE', ds_status_repasse_w); --21
                                    CALL ctb_online_pck.set_value_compl_hist('NR_NFE_CONTA_PROTOCOLO', nr_nfe_conta_protocolo_w); --35
                                    nr_documento_ww := ctb_online_pck.ctb_obter_compl_historico(cd_tipo_lote_contabil_w, ctb_param_lote_repasse_w.cd_historico);

                                    nr_documento_w := substr(coalesce(nr_documento_ww, nr_documento_w), 1, 255);

                                    nr_documento_www      := null;
                                    ie_origem_documento_w := null;

                                    if (coalesce(c_contab_repasse_w.nr_repasse_terceiro, '0') <> '0') then

                                        ds_atributos_w := 'NR_SEQ_REPASSE=' || c_contab_repasse_w.nr_repasse_terceiro || ';' ||
                                                          'NR_SEQ_NOTA_FISCAL=' || nr_seq_nota_fiscal_w;

                                        ctb_obter_doc_movto( cd_tipo_lote_contabil_w,
                                                             c_contab_repasse_w.nm_atributo,
                                                             'VR',
                                                             dt_referencia_w,
                                                             null,
                                                             null,
                                                             ds_atributos_w,
                                                             nm_usuario_p,
                                                             ie_regra_w,
                                                             nr_documento_www,
                                                             ie_origem_documento_w);
                                    end if;

                                    dados_contab_w                     := null;
                                    dados_contab_w.nr_lote_contabil    := nr_lote_contabil_w;
                                    dados_contab_w.dt_transacao        := dt_movimento_w;
                                    dados_contab_w.cd_conta_contabil   := c_contab_repasse_w.cd_conta_contabil;
                                    dados_contab_w.cd_centro_custo     := c_contab_repasse_w.cd_centro_custo;
                                    dados_contab_w.nr_seq_agrupamento  := nr_seq_agrupamento_w;
                                    dados_contab_w.ie_origem_documento := ie_origem_documento_w;
                                    dados_contab_w.nr_seq_conta_banco  := '';
                                    dados_contab_w.cd_pessoa_fisica    := c_contab_repasse_w.cd_pessoa_fisica;
                                    dados_contab_w.cd_cnpj             := c_contab_repasse_w.cd_cgc;
                                    dados_contab_w.cd_setor            := c_contab_repasse_w.cd_setor;
                                    dados_contab_w.cd_convenio         := c_contab_repasse_w.cd_convenio;
                                    dados_contab_w.nr_repasse_terceiro := c_contab_repasse_w.nr_repasse_terceiro;
                                    dados_contab_w.nr_seq_nota_fiscal  := nr_seq_nota_fiscal_w;
                                    dados_contab_w.ds_atrib_compl_hist := nr_documento_w;
                                    dados_contab_w.nr_doc_movto        := nr_documento_www;
                                    dados_contab_w.nm_tabela           := c_contab_repasse_w.nm_tabela;
                                    dados_contab_w.nm_atributo         := c_contab_repasse_w.nm_atributo;
                                    dados_contab_w.nr_seq_tab_orig     := nr_seq_tab_orig_w;

                                    doc_w                       := null;
                                    doc_w.cd_estabelecimento    := c010_w.cd_estabelecimento;
                                    doc_w.dt_competencia        := dt_referencia_w;
                                    doc_w.cd_tipo_lote_contabil := cd_tipo_lote_contabil_w;
                                    doc_w.nr_seq_info           := nr_seq_info_ctb_w;
                                    doc_w.nr_documento          := c_contab_repasse_w.nr_sequencia;
                                    doc_w.nm_tabela             := c_contab_repasse_w.nm_tabela;
                                    doc_w.nm_atributo           := c_contab_repasse_w.nm_atributo;
                                    doc_w.nr_lote_contabil      := nr_lote_contabil_w;
                                    doc_w.nr_sequencia          := nr_ctb_doc_conta_pac_w;

                                    if (c_contab_repasse_w.ie_proc_mat in ('P', 'M'))
                                      and (ie_contab_diferenca_w = 'S')
                                      and (c_contab_repasse_w.nm_atributo not in ('VL_REPASSE_DIF', 'VL_REPASSE_LIQ')) then

                                        doc_w.vl_movimento              := vl_diferenca_w;
                                        doc_w.nr_seq_trans_financ       := c_contab_repasse_w.nr_seq_trans_fin_rep_maior;
                                        dados_contab_w.doc              := doc_w;
                                        dados_contab_w.nr_seq_trans_fin := c_contab_repasse_w.nr_seq_trans_fin_rep_maior;

                                        ctb_contab_onl_lote_fin_pck.contabiliza_trans_financ(dados_contab_w, nm_usuario_p);
                                        ds_inconsistencia_w := coalesce(dados_contab_w.doc.ds_inconsistencia, ds_inconsistencia_w);

                                    end if;
                                    doc_w.vl_movimento              := c_contab_repasse_w.vl_transacao;
                                    doc_w.nr_seq_trans_financ       := c_contab_repasse_w.nr_seq_trans_fin;
                                    dados_contab_w.doc              := doc_w;
                                    dados_contab_w.nr_seq_trans_fin := c_contab_repasse_w.nr_seq_trans_fin;

                                    ctb_contab_onl_lote_fin_pck.contabiliza_trans_financ(dados_contab_w, nm_usuario_p);
                                    ds_inconsistencia_w := coalesce(dados_contab_w.doc.ds_inconsistencia, ds_inconsistencia_w);

                                end;
                            end loop;
                            close c_contab_repasse;
                        end;
                    end if;

                    update material_atend_paciente m
                    set    m.nr_lote_contabil = nr_lote_contabil_w
                    where  m.nr_sequencia = c010_w.nr_sequencia
                    and    c010_w.ie_proc_mat = 'M';

                    update procedimento_paciente p
                    set    p.nr_lote_contabil = nr_lote_contabil_w
                    where  p.nr_sequencia = c010_w.nr_sequencia
                    and    c010_w.ie_proc_mat = 'P';

                end;
            end loop;
            close c010;

            /* Contabilizar tributos da nota fiscal gerada a partir dos protocolos */

            /*
            IE_LOTE_CTB_TRIB_NF_W
            Selecionar o lote no qual o sistema contabilizara os impostos da nota fiscal de saida
            Se for no lote de receitas o sistema obtera os valores das notas fiscais associadas aos protocolos do mesmo lote
            LREC = Lote de receitas
            */
            if (ctb_param_lote_receita_w.ie_lote_ctb_trib_nf = 'LREC') then
                begin
                    /* IE_ORIGEM_CONTAB_TRIB_REC_W
                    Origem CONTABIL do tributo na receita
                    T = Titulo
                    N = Nota
                    */
                    if (ctb_param_lote_receita_w.ie_origem_contab_trib_rec = 'T') then
                        begin
                        open c_trib_titulo;
                        loop
                            fetch c_trib_titulo
                                into vetTrib;
                            EXIT WHEN NOT FOUND; /* apply on c_trib_titulo */
                            begin
                            CALL ctb_online_pck.definir_atrib_compl(cd_tipo_lote_contabil_w);
                            CALL ctb_online_pck.set_value_compl_hist('CD_CONVENIO', c010_w.cd_convenio);
                            CALL ctb_online_pck.set_value_compl_hist('DS_CONVENIO', c010_w.ds_convenio);
                            CALL ctb_online_pck.set_value_compl_hist('NR_ATENDIMENTO', c010_w.nr_atendimento);
                            CALL ctb_online_pck.set_value_compl_hist('NM_PACIENTE', c010_w.nm_pessoa_fisica);
                            CALL ctb_online_pck.set_value_compl_hist('NR_INTERNO_CONTA', '');
                            CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_PROTOCOLO', '');
                            CALL ctb_online_pck.set_value_compl_hist('NR_PROTOCOLO', nr_protocolo_w);
                            CALL ctb_online_pck.set_value_compl_hist('NR_DOC_CONVENIO', c010_w.nr_doc_convenio);
                            CALL ctb_online_pck.set_value_compl_hist('NR_NF_PROTOCOLO', nr_nota_fiscal_w);
                            CALL ctb_online_pck.set_value_compl_hist('DS_TITULO_CONTA', ds_titulos_conta_w);
                            CALL ctb_online_pck.set_value_compl_hist('DS_TITULO_PROTOCOLO', ds_titulos_prot_w);
                            CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REFERENCIA', ds_mesano_referencia_w);
                            CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REFERENCIA_ABREV', ds_mesano_referencia_abrev_w);
                            CALL ctb_online_pck.set_value_compl_hist('NM_PESSOA_NF', nm_pessoa_nota_fiscal_w);
                            CALL ctb_online_pck.set_value_compl_hist('REPASSE_NM_BENEFICIARIO', '');
                            CALL ctb_online_pck.set_value_compl_hist('REPASSE_NR_NOTA_FISCAL', '');
                            CALL ctb_online_pck.set_value_compl_hist('NR_NFE', nr_nfe_imp_w);
                            CALL ctb_online_pck.set_value_compl_hist('NR_NFE_NF_PROTOCOLO', '');
                            CALL ctb_online_pck.set_value_compl_hist('NR_NF_PROT_CONTA', nr_nf_prot_conta_w);
                            CALL ctb_online_pck.set_value_compl_hist('DS_ESTORNO', ds_estorno_w);
                            CALL ctb_online_pck.set_value_compl_hist('DS_STATUS_REPASSE', '');
                            CALL ctb_online_pck.set_value_compl_hist('DT_MESANO_REFERENCIA', dt_mesano_referencia_compl_w);
                            CALL ctb_online_pck.set_value_compl_hist('NR_NF_TITULO', nr_nf_titulo_w);
                            CALL ctb_online_pck.set_value_compl_hist('NR_NF_LOTE_PROTOCOLO', nr_nf_lote_protocolo_w);
                            CALL ctb_online_pck.set_value_compl_hist('NM_ESTABELECIMENTO', nm_estabelecimento_w);
                            CALL ctb_online_pck.set_value_compl_hist('DS_PRIMEIRO_SETOR_ATEND', c010_w.ds_primeiro_setor_atend);
                            CALL ctb_online_pck.set_value_compl_hist('NM_RESPONSAVEL_ATEND', c010_w.nm_responsavel_atend);
                            CALL ctb_online_pck.set_value_compl_hist('NM_FANTASIA_CONV', nm_fantasia_conv_w);
                            CALL ctb_online_pck.set_value_compl_hist('DS_RAZAO_SOCIAL_CONV', ds_razao_social_conv_w);
                            CALL ctb_online_pck.set_value_compl_hist('NR_TITULO', nr_titulo_receber_w);
                            CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_MAT_PROC', c010_w.nr_sequencia);
                            CALL ctb_online_pck.set_value_compl_hist('NR_NFE_LOTE_PROTOCOLO', '');
                            CALL ctb_online_pck.set_value_compl_hist('NR_NF_PROT_NOTA', nr_nf_prot_nota_w);

                            vl_transacao_w     := vetTrib.vl_tributo;
                            cd_cgc_w           := vetTrib.cd_cgc;
                            cd_pessoa_fisica_w := vetTrib.cd_pessoa_fisica;
                            nr_seq_trans_rec_w := vetTrib.nr_seq_trans_rec;

                            dados_contab_w                     := null;
                            dados_contab_w.nr_lote_contabil    := nr_lote_contabil_w;
                            dados_contab_w.dt_transacao        := dt_movimento_w;
                            dados_contab_w.cd_conta_contabil   := '';
                            dados_contab_w.cd_centro_custo     := 0;
                            dados_contab_w.nr_seq_agrupamento  := nr_seq_agrupamento_w;
                            dados_contab_w.ie_origem_documento := ie_origem_documento_w;
                            dados_contab_w.cd_pessoa_fisica    := cd_pessoa_fisica_w;
                            dados_contab_w.cd_cnpj             := cd_cgc_w;
                            dados_contab_w.cd_setor            := c010_w.cd_setor_atendimento;
                            dados_contab_w.cd_convenio         := c010_w.cd_convenio;
                            dados_contab_w.cd_tributo          := vetTrib.cd_tributo;
                            dados_contab_w.cd_tributo_regra    := vetTrib.cd_tributo;
                            dados_contab_w.nr_seq_trans_fin    := nr_seq_trans_rec_w;
                            dados_contab_w.nr_doc_movto        := nr_documento_aux_w;
                            dados_contab_w.nm_tabela           := 'TITULO_RECEBER_TRIB';
                            dados_contab_w.nm_atributo         := 'VL_TRIBUTO';
                            dados_contab_w.nr_seq_tab_orig     := nr_seq_tab_orig_w;

                            doc_w                       := null;
                            doc_w.nr_lote_contabil      := nr_lote_contabil_w;
                            doc_w.cd_estabelecimento    := c010_w.cd_estabelecimento;
                            doc_w.dt_competencia        := dt_movimento_w;
                            doc_w.cd_tipo_lote_contabil := cd_tipo_lote_contabil_w;
                            doc_w.nr_seq_info           := 1;
                            doc_w.nr_documento          := nr_documento_aux_w;
                            doc_w.nm_tabela             := 'TITULO_RECEBER_TRIB';
                            doc_w.nm_atributo           := 'VL_TRIBUTO';
                            doc_w.vl_movimento          := vl_transacao_w;
                            doc_w.nr_seq_trans_financ   := nr_seq_trans_rec_w;
                            doc_w.nr_sequencia          := nr_ctb_doc_conta_pac_w;

                            dados_contab_w.doc          := doc_w;

                            ctb_contab_onl_lote_fin_pck.contabiliza_trans_financ(dados_contab_w, nm_usuario_p);
                            ds_inconsistencia_w := coalesce(dados_contab_w.doc.ds_inconsistencia, ds_inconsistencia_w);

                            update  titulo_receber_trib a
                            set     nr_lote_contabil = nr_lote_contabil_w
                            where   nr_sequencia = vetTrib.nr_sequencia;
                            end;
                        end loop;
                        close c_trib_titulo;
                        if (ie_commit_p = 'S') then
                            commit;
                        end if;
                        end;

                    elsif (ctb_param_lote_receita_w.ie_origem_contab_trib_rec = 'N') then
                        begin

                            open c_contab_nf;
                            loop
                                fetch c_contab_nf
                                    into nr_seq_nf_w;
                                EXIT WHEN NOT FOUND; /* apply on c_contab_nf */
                                begin
                                    /* Percorrer os tributos da nota para contabilizar */

                                    open c020;
                                    loop
                                        fetch c020
                                            into c020_w;
                                        EXIT WHEN NOT FOUND; /* apply on c020 */
                                        begin
                                            /* Limpar variaveis */

                                            ds_mesano_referencia_abrev_w   := null;
                                            dt_mesano_referencia_compl_w   := null;
                                            c010_w.ds_primeiro_setor_atend := null;
                                            c010_w.nm_responsavel_atend    := null;
                                            ds_mesano_referencia_w         := null;
                                            nr_nf_lote_protocolo_w         := null;
                                            ds_razao_social_conv_w         := null;
                                            c010_w.dt_mesano_referencia    := null;
                                            ie_origem_documento_w          := null; /* Dominio 6091 */
                                            dt_entrega_convenio_w          := null;
                                            nr_titulo_receber_w            := null;
                                            ds_titulos_conta_w             := null;
                                            nr_nf_prot_conta_w             := null;
                                            nm_fantasia_conv_w             := null;
                                            nr_documento_aux_w             := null;
                                            nr_seq_ultimo_protocolo_lido_w := null;
                                            c010_w.nr_doc_convenio         := null;
                                            ds_titulos_prot_w              := null;
                                            c010_w.nr_sequencia            := null;
                                            nr_nf_prot_nota_w              := null;
                                            nr_nf_titulo_w                 := null;
                                            dt_movimento_w                 := null;
                                            nr_documento_w                 := null;
                                            c010_w.cd_convenio             := null;
                                            ds_conteudo_w                  := null;
                                            ds_estorno_w                   := null;

                                            /* Carregar valores historico */

                                            c010_w.nr_atendimento := obter_atendimento_conta(c020_w.nr_interno_conta);

                                            /* Obter nome da tabela utilizada */

                                            if (c020_w.ie_corpo_item = 'C') then
                                                nm_tabela_w := 'NOTA_FISCAL_TRIB';
                                            elsif (c020_w.ie_corpo_item = 'I') then
                                                nm_tabela_w := 'NOTA_FISCAL_ITEM_TRIB';
                                            end if;

                                            /* Se Situacao da nota = Estorno */

                                            if (c020_w.ie_situacao = '2') then
                                                begin
                                                    /* Estorno | A nota gerada para abater os valores da nota original */

                                                    ds_estorno_w := wheb_mensagem_pck.get_texto(682644);
                                                end;
                                            elsif (c020_w.ie_situacao = '3') then
                                                begin
                                                    /* Estornada | A nota original que foi estornada*/

                                                    ds_estorno_w := wheb_mensagem_pck.get_texto(682645);
                                                end;
                                            end if;

                                            /* Protocolo vinculado  nota ou vinculado  */

                                            if (coalesce(c020_w.nr_seq_protocolo, 0) <> 0) then
                                                begin
                                                    nr_seq_ultimo_protocolo_lido_w := c020_w.nr_seq_protocolo;
                                                end;
                                            else
                                                begin
                                                    /* Numero do protocolo em que a conta se encontra */

                                                    if (c020_w.ie_situacao = '2') then
                                                        begin
                                                        /* Para notas de estorno pegar o protocolo da conta de estorno
                                                        da conta vinculada a nota fiscal original */
                                                        select max(x.nr_seq_protocolo)
                                                        into STRICT   nr_seq_ultimo_protocolo_lido_w
                                                        from   conta_paciente x,
                                                                conta_paciente z
                                                        where  z.nr_interno_conta = x.nr_seq_conta_origem
                                                        and    z.nr_interno_conta = c020_w.nr_interno_conta
                                                        and    x.ie_cancelamento = 'E';
                                                        end;
                                                    elsif (c020_w.ie_situacao in ('1', '3')) then
                                                        begin
                                                        /* Para notas ativas ou estornadas pega o protocolo da conta vinculada a nota */

                                                        select  max(x.nr_seq_protocolo)
                                                        into STRICT    nr_seq_ultimo_protocolo_lido_w
                                                        from    conta_paciente x
                                                        where x.nr_interno_conta = c020_w.nr_interno_conta;
                                                        end;
                                                    end if;
                                                end;
                                            end if;

                                            /* Pega a ultima nota e o ultimo Titulo  gerado para a conta paciente */

                                            select max(a.nr_nota_fiscal),
                                                    max(a.nr_titulo)
                                            into STRICT   nr_nf_titulo_w,
                                                    nr_titulo_receber_w
                                            from   titulo_receber a
                                            where  a.nr_interno_conta = c020_w.nr_interno_conta;

                                            /* Caso nao encontrar nota ou Titulo, pega o ultimo Titulo e/ou nota gerado para o protocolo */

                                            if ((coalesce(nr_titulo_receber_w, '0') = '0') or (coalesce(nr_nf_titulo_w, '0') = '0')) and (coalesce(nr_seq_ultimo_protocolo_lido_w, 0) <> 0) then
                                                begin
                                                select coalesce(nr_nf_titulo_w, max(a.nr_nota_fiscal)),
                                                        coalesce(nr_titulo_receber_w, max(a.nr_titulo))
                                                into STRICT   nr_nf_titulo_w,
                                                        nr_titulo_receber_w
                                                from   titulo_receber a
                                                where  a.nr_seq_protocolo = nr_seq_ultimo_protocolo_lido_w;
                                                end;
                                            end if;

                                            /* Obter a nota fiscal do protocolo */

                                            select substr(max(c.nr_nota_fiscal), 1, 150)
                                            into STRICT   nr_nf_lote_protocolo_w
                                            from   nota_fiscal        c,
                                                    lote_protocolo     b,
                                                    protocolo_convenio a
                                            where  c.nr_seq_lote_prot = b.nr_sequencia
                                            and    b.nr_sequencia = a.nr_seq_lote_protocolo
                                            and    a.nr_seq_protocolo = nr_seq_ultimo_protocolo_lido_w;

                                            nr_nf_lote_protocolo_w := substr(nr_nf_lote_protocolo_w, 1, length(nr_nf_lote_protocolo_w));

                                            /* Obter dados da conta paciente */

                                            if (coalesce(c020_w.nr_interno_conta, 0) <> 0) then
                                                begin
                                                select substr(obter_nome_convenio(a.cd_convenio_parametro), 1, 60),
                                                        a.cd_convenio_parametro,
                                                        a.dt_mesano_referencia
                                                into STRICT   c010_w.ds_convenio,
                                                        c010_w.cd_convenio,
                                                        c010_w.dt_mesano_referencia
                                                from   conta_paciente a
                                                where  a.nr_interno_conta = c020_w.nr_interno_conta;
                                                end;
                                            end if;

                                            /* Obter dados do protocolo */

                                            if (coalesce(nr_seq_ultimo_protocolo_lido_w, 0) <> 0) then
                                                begin
                                                select substr(obter_nome_convenio(a.cd_convenio), 1, 60),
                                                        a.cd_convenio,
                                                        a.nr_protocolo,
                                                        a.dt_entrega_convenio
                                                into STRICT   c010_w.ds_convenio,
                                                        c010_w.cd_convenio,
                                                        nr_protocolo_w,
                                                        dt_entrega_convenio_w
                                                from   protocolo_convenio a
                                                where  a.nr_seq_protocolo = nr_seq_ultimo_protocolo_lido_w;
                                                end;
                                            end if;

                                            /* Tratamento para data de geracao conforme parametro [3] da geracao do lote CONTABIL */

                                            if (ie_data_lote_w = 'N') then
                                                dt_movimento_w := coalesce(c010_w.dt_mesano_referencia, dt_entrega_convenio_w);
                                            elsif (ie_data_lote_w = 'NE') then
                                                dt_movimento_w := coalesce(c020_w.dt_emissao, dt_movimento_w);
                                            elsif (ie_data_lote_w = 'E') then
                                                dt_movimento_w := coalesce(dt_entrega_convenio_w, c010_w.dt_mesano_referencia);
                                            end if;

                                            if (coalesce(dt_movimento_w::text, '') = '') then
                                                begin
                                                    dt_movimento_w := dt_referencia_lote_w;
                                                end;
                                            end if;

                                            /* Obter nome pessoa fisica e pessoa do atendimento */

                                            select max(b.nm_pessoa_fisica),
                                                    substr(max(obter_nome_pf_pj(a.cd_pessoa_responsavel, null)), 1, 60)
                                            into STRICT   c010_w.nm_pessoa_fisica,
                                                    c010_w.nm_responsavel_atend
                                            from   atendimento_paciente a,
                                                    pessoa_fisica        b
                                            where  a.nr_atendimento = c010_w.nr_atendimento
                                            and    a.cd_pessoa_fisica = b.cd_pessoa_fisica;

                                            /* Obter codigo do agrupamento baseado na regra */

                                            if (nm_agrupador_w = 'NR_INTERNO_CONTA') then
                                                if (c020_w.ie_situacao = '2') then
                                                    nr_seq_agrupamento_w := coalesce(c020_w.nr_seq_conta_origem, c020_w.nr_interno_conta);
                                                else
                                                    nr_seq_agrupamento_w := c020_w.nr_interno_conta;
                                                end if;
                                            elsif (nm_agrupador_w = 'NR_ATENDIMENTO') then
                                                nr_seq_agrupamento_w := c010_w.nr_atendimento;
                                            elsif (nm_agrupador_w = 'NR_SEQ_PROTOCOLO') then
                                                nr_seq_agrupamento_w := nr_seq_ultimo_protocolo_lido_w;
                                            elsif (nm_agrupador_w = 'NR_NOTA_FISCAL') then
                                                nr_seq_agrupamento_w := somente_numero(c020_w.nr_nota_fiscal);
                                            elsif (nm_agrupador_w = 'DS_MES_ANO') then
                                                nr_seq_agrupamento_w := dt_mesano_w;
                                            elsif (nm_agrupador_w = 'CD_CONVENIO') then
                                                nr_seq_agrupamento_w := c010_w.cd_convenio;
                                            end if;

                                            /* Caso nao encontrar o codigo do agrupamento, utiliza por padrao o Numero da conta */

                                            if (coalesce(nr_seq_agrupamento_w, 0) = 0) then
                                                if (c020_w.ie_situacao = '2') then
                                                    nr_seq_agrupamento_w := coalesce(c020_w.nr_seq_conta_origem, c020_w.nr_interno_conta);
                                                else
                                                    nr_seq_agrupamento_w := c020_w.nr_interno_conta;
                                                end if;
                                            end if;

                                            if (coalesce(nr_seq_nota_fiscal_w, 0) != 0) then
                                                select vl_total_nota into STRICT vl_total_nota_w from nota_fiscal where nr_sequencia = nr_seq_nota_fiscal_w;
                                            end if;

                                            if (coalesce(c010_w.nr_interno_conta, 0) <> 0) then
                                                begin
                                                    select max(n.nr_nota_fiscal)
                                                    into STRICT    nr_nf_prot_nota_w
                                                    from    nota_fiscal n
                                                    where   n.nr_interno_conta = CASE WHEN c010_w.ie_cancelamento='E' THEN  c010_w.nr_seq_conta_origem  ELSE c010_w.nr_interno_conta END;

                                                    if ((coalesce(nr_nf_prot_nota_w, 'X') = 'X') and (coalesce(c010_w.nr_seq_protocolo, 0) <> 0)) then
                                                        nr_nf_prot_nota_w := substr(obter_nota_conta_protocolo(c010_w.nr_seq_protocolo, 0), 1, 255);
                                                    end if;
                                                end;
                                            end if;

                                            CALL ctb_online_pck.definir_atrib_compl(cd_tipo_lote_contabil_w);
                                            CALL ctb_online_pck.set_value_compl_hist('CD_CONVENIO', c010_w.cd_convenio);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_CONVENIO', c010_w.ds_convenio);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_ATENDIMENTO', c010_w.nr_atendimento);
                                            CALL ctb_online_pck.set_value_compl_hist('NM_PACIENTE', c010_w.nm_pessoa_fisica);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_INTERNO_CONTA', c020_w.nr_interno_conta);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_PROTOCOLO', nr_seq_ultimo_protocolo_lido_w);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_PROTOCOLO', nr_protocolo_w);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_DOC_CONVENIO', c010_w.nr_doc_convenio);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_NF_PROTOCOLO', c020_w.nr_nota_fiscal);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_TITULO_CONTA', ds_titulos_conta_w);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_TITULO_PROTOCOLO', ds_titulos_prot_w);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REFERENCIA', ds_mesano_referencia_w);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_MESANO_REFERENCIA_ABREV', ds_mesano_referencia_abrev_w);
                                            CALL ctb_online_pck.set_value_compl_hist('NM_PESSOA_NF', c020_w.nm_pessoa_nota_fiscal);
                                            CALL ctb_online_pck.set_value_compl_hist('REPASSE_NM_BENEFICIARIO', '');
                                            CALL ctb_online_pck.set_value_compl_hist('REPASSE_NR_NOTA_FISCAL', '');
                                            CALL ctb_online_pck.set_value_compl_hist('NR_NFE', c020_w.nr_nfe_imp);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_NFE_NF_PROTOCOLO', '');
                                            CALL ctb_online_pck.set_value_compl_hist('NR_NF_PROT_CONTA', nr_nf_prot_conta_w);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_ESTORNO', ds_estorno_w);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_STATUS_REPASSE', '');
                                            CALL ctb_online_pck.set_value_compl_hist('DT_MESANO_REFERENCIA', dt_mesano_referencia_compl_w);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_NF_TITULO', nr_nf_titulo_w);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_NF_LOTE_PROTOCOLO', nr_nf_lote_protocolo_w);
                                            CALL ctb_online_pck.set_value_compl_hist('NM_ESTABELECIMENTO', nm_estabelecimento_w);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_PRIMEIRO_SETOR_ATEND', c010_w.ds_primeiro_setor_atend);
                                            CALL ctb_online_pck.set_value_compl_hist('NM_RESPONSAVEL_ATEND', c010_w.nm_responsavel_atend);
                                            CALL ctb_online_pck.set_value_compl_hist('NM_FANTASIA_CONV', nm_fantasia_conv_w);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_RAZAO_SOCIAL_CONV', ds_razao_social_conv_w);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_TITULO', nr_titulo_receber_w);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_MAT_PROC', c010_w.nr_sequencia);
                                            CALL ctb_online_pck.set_value_compl_hist('NR_NFE_LOTE_PROTOCOLO', '');
                                            CALL ctb_online_pck.set_value_compl_hist('NR_NF_PROT_NOTA', nr_nf_prot_nota_w);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_NOTA_PROTOCOLO', '');
                                            CALL ctb_online_pck.set_value_compl_hist('NR_NFE_CONTA_PROTOCOLO', '');
                                            CALL ctb_online_pck.set_value_compl_hist('DS_CATEGORIA', c010_w.ds_categoria);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_PLANO_CONVENIO', c010_w.ds_plano_convenio);
                                            CALL ctb_online_pck.set_value_compl_hist('DS_TIPO_ATENDIMENTO', c010_w.ds_tipo_atendimento);
                                            CALL ctb_online_pck.set_value_compl_hist('VL_TOTAL_NOTA', vl_total_nota_w);
											CALL ctb_online_pck.set_value_compl_hist('CD_SERIE_NF', cd_serie_nf_w);
											CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_NOTA_FISCAL', nr_seq_nota_fiscal_w);
											CALL ctb_online_pck.set_value_compl_hist('NR_SEQ_NOTA_PROTOCOLO', nr_seq_nota_protocolo_w);

                                            dados_contab_w                     := null;
                                            dados_contab_w.nr_lote_contabil    := nr_lote_contabil_w;
                                            dados_contab_w.dt_transacao        := dt_movimento_w;
                                            dados_contab_w.cd_conta_contabil   := '';
                                            dados_contab_w.cd_centro_custo     := 0;
                                            dados_contab_w.nr_seq_agrupamento  := nr_seq_agrupamento_w;
                                            dados_contab_w.ie_origem_documento := ie_origem_documento_w;
                                            dados_contab_w.cd_pessoa_fisica    := c020_w.cd_pessoa_fisica;
                                            dados_contab_w.cd_cnpj             := c020_w.cd_cgc;
                                            dados_contab_w.nr_seq_trans_fin    := c020_w.nr_seq_trans_rec;
                                            dados_contab_w.nr_doc_movto        := nr_documento_aux_w;
                                            dados_contab_w.nm_tabela           := nm_tabela_w;
                                            dados_contab_w.nm_atributo         := 'VL_TRIBUTO';
                                            dados_contab_w.nr_seq_tab_orig     := nr_seq_tab_orig_w;
                                            dados_contab_w.cd_convenio         := c010_w.cd_convenio;

                                            doc_w                       := null;
                                            doc_w.nr_lote_contabil      := nr_lote_contabil_w;
                                            doc_w.cd_estabelecimento    := c010_w.cd_estabelecimento;
                                            doc_w.dt_competencia        := dt_movimento_w;
                                            doc_w.cd_tipo_lote_contabil := cd_tipo_lote_contabil_w;
                                            doc_w.nr_seq_info           := 1;
                                            doc_w.nr_documento          := c020_w.nr_seq_tab_orig;
                                            doc_w.nm_tabela             := nm_tabela_w;
                                            doc_w.nm_atributo           := 'VL_TRIBUTO';
                                            doc_w.vl_movimento          := c020_w.vl_transacao;
                                            doc_w.nr_seq_trans_financ   := c020_w.nr_seq_trans_rec;
                                            doc_w.nr_sequencia          := nr_ctb_doc_conta_pac_w;
                                            dados_contab_w.doc          := doc_w;

                                            ctb_contab_onl_lote_fin_pck.contabiliza_trans_financ(dados_contab_w, nm_usuario_p);
                                            ds_inconsistencia_w := coalesce(dados_contab_w.doc.ds_inconsistencia, ds_inconsistencia_w);
                                        end;
                                    end loop;
                                    close c020;

                                    update  nota_fiscal
                                    set     nr_lote_contabil = nr_lote_contabil_w
                                    where   nr_sequencia = nr_seq_nf_w;
                                end;
                            end loop;
                            close c_contab_nf;
                        end;
                    end if;
                end;
            end if;

            update  conta_paciente
            set     nr_lote_contabil = nr_lote_contabil_w
            where   nr_interno_conta = nr_interno_conta_w;

            /*Verifica inconsistencia na contabilizacao da transacao financeira*/

            if (ds_inconsistencia_w IS NOT NULL AND ds_inconsistencia_w::text <> '') then
                update  ctb_documento
                set     ie_situacao_ctb     = ctb_online_pck.ds_pendente,
                        nr_lote_contabil     = NULL,
                        ds_inconsistencia   = substr(ds_inconsistencia_w,1,4000),
                        dt_atualizacao      = clock_timestamp(),
                        nm_usuario          = nm_usuario_p
                where   nr_sequencia        = nr_ctb_doc_conta_pac_w;
            else
                select  coalesce(sum(CASE WHEN b.ie_debito_credito='C' THEN  b.vl_movimento END ),0) vl_credito,
                        coalesce(sum(CASE WHEN b.ie_debito_credito='D' THEN  b.vl_movimento END ),0) vl_debito
                into STRICT    vl_credito_w,
                        vl_debito_w
                from    movimento_contabil_doc b
                where   b.nr_seq_ctb_documento = nr_ctb_doc_conta_pac_w;

                /*Verifica inconsistena de debito e credito nos movimentos do documento*/

                if (vl_debito_w <> vl_credito_w) then
                    update  ctb_documento
                    set     ie_situacao_ctb     = ctb_online_pck.ds_pendente,
                            nr_lote_contabil     = NULL,
                            ds_inconsistencia   = wheb_mensagem_pck.get_texto(1132278), /*Existe diferenca de debito e credito nos movimentos gerados por esse documento.*/
                            dt_atualizacao      = clock_timestamp(),
                            nm_usuario          = nm_usuario_p
                    where   nr_sequencia        = nr_ctb_doc_conta_pac_w;
                else
                    update ctb_documento
                    set    ie_situacao_ctb  = ctb_online_pck.ds_contabilizado,
                           nr_lote_contabil = nr_lote_contabil_w,
                           ds_inconsistencia  = NULL,
                           nm_usuario       = nm_usuario_p,
                           dt_atualizacao   = clock_timestamp()
                    where  nr_sequencia     = nr_ctb_doc_conta_pac_w;
                end if;
            end if;
        end;
        end if;
        end;
    end loop;
    close c_conta_paciente;

    /* Atualizar LOTE CONTABIL */

    update lote_contabil
    set    ie_situacao     = 'A',
           dt_geracao_lote = clock_timestamp(),
           dt_integracao   = clock_timestamp()
    where  nr_lote_contabil = nr_lote_contabil_w;

    /* Atualiza SALDO Movimento */

    begin
        ds_erro_w := ctb_online_pck.ctb_atualizar_saldo(nr_lote_contabil_w, 'S', nm_usuario_p, 'N', ds_erro_w, 'S');

    exception
        when no_data_found then
            ds_err_msg  := SUBSTR(SQLERRM, 1, 4000);
            CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_err_msg);
        when others then
            ds_err_msg  := SUBSTR(SQLERRM, 1, 4000);
            CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_err_msg);
    end;

elsif (ie_operacao_p = 2) then
    open c_conta_paciente;
    loop
        fetch c_conta_paciente
            into c_conta_paciente_w;
        EXIT WHEN NOT FOUND; /* apply on c_conta_paciente */
        begin

            nr_interno_conta_w := c_conta_paciente_w.nr_interno_conta;

            begin
            select l.nr_lote_contabil,
                   l.dt_referencia
            into STRICT   nr_lote_contabil_w,
                   dt_referencia_lote_w
            from   lote_contabil  l,
                   conta_paciente c
            where  l.nr_lote_contabil = c.nr_lote_contabil
            and    c.nr_interno_conta = nr_interno_conta_w;
            exception
              when others then
                dt_referencia_lote_w := trunc(clock_timestamp(), 'dd');
            end;

            begin
                select count(1)
                into STRICT   nr_contador_w
                from   ctb_mes_ref
                where  cd_empresa = cd_empresa_w
                and    dt_referencia = PKG_DATE_UTILS.START_OF(dt_referencia_lote_w, 'MONTH')
                and    (dt_fechamento IS NOT NULL AND dt_fechamento::text <> '');

            exception
                when others then
                    nr_contador_w := 0;
            end;

            if (nr_contador_w > 0) then
                -- O mes esta fechado
                CALL wheb_mensagem_pck.exibir_mensagem_abort(207399);
            end if;

            update conta_paciente
            set    nr_lote_contabil  = NULL,
                   nr_lote_repasse = 0
            where  nr_interno_conta = nr_interno_conta_w
            and     nr_lote_contabil = nr_lote_contabil_w;

            open c_contab_nf;
            loop
                fetch c_contab_nf
                    into nr_seq_nf_w;
                EXIT WHEN NOT FOUND; /* apply on c_contab_nf */
                begin
                update  nota_fiscal
                set     nr_lote_contabil = 0
                where   nr_sequencia = nr_seq_nf_w
                and     nr_lote_contabil = nr_lote_contabil_w;
                end;
            end loop;
            close c_contab_nf;

            update material_atend_paciente a
            set    nr_lote_contabil  = NULL
            where  a.nr_interno_conta = nr_interno_conta_w
            and     nr_lote_contabil = nr_lote_contabil_w;

            update mat_atend_paciente_valor a
            set    a.nr_lote_contabil = 0
            where  a.nr_lote_contabil = nr_lote_contabil_w
            and    a.nr_seq_material in (SELECT y.nr_sequencia
                                         from   material_atend_paciente y
                                         where  y.nr_interno_conta = nr_interno_conta_w);

            update procedimento_paciente a
            set    nr_lote_contabil  = NULL
            where  a.nr_interno_conta = nr_interno_conta_w
            and     nr_lote_contabil = nr_lote_contabil_w;

            update proc_paciente_valor a
            set    a.nr_lote_contabil = 0
            where  a.nr_lote_contabil = nr_lote_contabil_w
            and    a.nr_seq_procedimento in (SELECT y.nr_sequencia
                                             from   procedimento_paciente y
                                             where y.nr_interno_conta = nr_interno_conta_w);

            update material_repasse
            set    nr_lote_contabil = 0
            where  nr_sequencia in (
                   SELECT d.nr_sequencia
                   from   Material_Repasse        d,
                          material_atend_paciente c,
                          Conta_Paciente          b
                   where  b.nr_interno_conta = c.nr_interno_conta
                   and    c.nr_sequencia = d.nr_seq_material
                   and    d.nr_lote_contabil = nr_lote_contabil_w
                   and    b.nr_interno_conta = nr_interno_conta_w
            );

            update procedimento_repasse
            set    nr_lote_contabil = 0
            where  nr_sequencia in (
                   SELECT  d.nr_sequencia
                   from    Procedimento_Repasse  d,
                           Procedimento_paciente c,
                           Conta_Paciente        b
                   where   coalesce(d.nr_lote_contabil,0) <> 0
                   and     b.nr_interno_conta = c.nr_interno_conta
                   and     c.nr_sequencia = d.nr_seq_procedimento
                   and     d.nr_lote_contabil = nr_lote_contabil_w
                   and     b.nr_interno_conta = nr_interno_conta_w
            );

            update conta_pac_ded_conv_item a
            set    a.nr_lote_contabil  = NULL
            where exists (SELECT 1
                          from   conta_pac_deducao_conv c
                          where  a.nr_seq_deducao_conv = c.nr_sequencia
                          and    c.nr_seq_conta_des = nr_interno_conta_w);

            open c_trib_titulo;
            loop
                fetch c_trib_titulo
                    into vetTrib;
                EXIT WHEN NOT FOUND; /* apply on c_trib_titulo */
                begin
                    update  titulo_receber_trib
                    set     nr_lote_contabil  = 0
                    where   nr_sequencia  = vetTrib.nr_sequencia;
                end;
            end loop;
            close c_trib_titulo;

            /*
            update  protocolo_convenio
            set      nr_seq_lote_repasse  = 0
            where    nr_seq_lote_repasse  = nr_lote_contabil_p;
            */
            end;
        end loop;
    close c_conta_paciente;

for vet in c_desfazer_movimentos loop
    begin
       CALL ctb_online_pck.ctb_excluir_lancamento_doc(vet.nr_sequencia, nm_usuario_p,'N');
    exception when others then
        ds_erro_w := substr(sqlerrm(SQLSTATE) || chr(13) || chr(10) || dbms_utility.format_error_backtrace,1,4000);
        ds_erro_w := substr(replace(ds_erro_w,'#@',''),1,4000);
       CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262328 , 'DS_MENSAGEM='||ds_erro_w);
    end;
end loop;

end if;

if (ie_commit_p = 'S') then
    commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_contab_onl_lote_receita ((nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, nm_usuario_p text, ie_operacao_p bigint default 1, ie_commit_p text default 'S', nr_seq_nota_p bigint default null, dt_referencia_p timestamp default null) is  cd_historico_pad_w bigint) FROM PUBLIC;

