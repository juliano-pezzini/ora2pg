-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_manual_itens_depo_iden ( nr_seq_deposito_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text, nr_seq_lote_p bigint) AS $body$
DECLARE

						 
vl_saldo_titulo_w			double precision;
vl_juros_w			double precision;
vl_multa_w			double precision;
vl_depositar_w			double precision;
qt_baixas_manuais_w		bigint;
qt_baixas_w			numeric(20)	:= 0;
qt_baixas_juros_w			numeric(20)	:= 0;
qt_baixas_multa_w			numeric(20)	:= 0;
vl_baixa_w			double precision;
vl_rec_maior_w			double precision;
vl_total_baixado_w			double precision;
vl_total_baixa_w			double precision;
vl_baixado_w			double precision;
vl_juros_baixa_w			double precision;
vl_multa_baixa_w			double precision;
vl_total_juros_baixa_w		double precision;
vl_total_multa_baixa_w		double precision;
vl_total_baixado_atual_w		double precision;
vl_total_deposito_w			double precision;
vl_total_juros_w			double precision;
vl_total_multa_w			double precision;
nr_seq_tf_baixa_dep_w		bigint;
cd_tipo_receb_baixa_w		bigint;
nr_titulo_w			bigint;
ie_tipo_baixa_w			varchar(3);
vl_total_depositado_w		double precision;
dt_recebimento_w			timestamp;
vl_depositado_w			double precision;
cd_identificacao_w			varchar(30);
ie_digito_ident_w			varchar(2);
nr_seq_conta_banco_w		bigint;
cd_identif_dep_w			varchar(50);
nr_seq_ret_dep_w			bigint;

C01 CURSOR FOR 
SELECT	a.nr_titulo, 
	coalesce(b.vl_saldo_titulo, 0), 
	coalesce((obter_juros_multa_titulo(a.nr_titulo,obter_data_limite_dep_ident(a.nr_seq_deposito),'R','J'))::numeric ,0) vl_juros, 
	coalesce((obter_juros_multa_titulo(a.nr_titulo,obter_data_limite_dep_ident(a.nr_seq_deposito),'R','M'))::numeric ,0) vl_multa, 
	coalesce(a.vl_depositar,0) 
from	titulo_receber b, 
	deposito_ident_titulo a 
where	a.nr_titulo		= b.nr_titulo 
and	a.nr_seq_deposito	= nr_seq_deposito_p;

c02 CURSOR FOR 
SELECT	coalesce(sum(a.vl_baixa),0) vl_baixa, 
	a.nr_seq_trans_financ, 
	a.cd_tipo_recebimento, 
	'BXM' ie_tipo_baixa 
from	deposito_ident_baixa a 
where	a.nr_seq_deposito_ident		= nr_seq_deposito_p 
group by	a.vl_baixa, 
		a.nr_seq_trans_financ, 
		a.cd_tipo_recebimento;
		

BEGIN 
 
select	coalesce(a.vl_deposito,0),		-- Valor total a ser depositado 
	a.nr_identificacao, 
	a.nr_seq_conta_banco, 
	a.ie_digito_ident 
into STRICT	vl_total_deposito_w, 
	cd_identificacao_w, 
	nr_seq_conta_banco_w, 
	ie_digito_ident_w 
from	deposito_identificado a 
where	a.nr_sequencia	= nr_seq_deposito_p;
 
cd_identif_dep_w	:= somente_numero(cd_identificacao_w || ie_digito_ident_w);
 
select	coalesce(sum(a.vl_deposito),0),		-- Real valor depositado 
	max(a.dt_deposito) 
into STRICT	vl_depositado_w, 
	dt_recebimento_w 
from	lote_ret_deposito_ident	b, 
	lote_ret_dep_ident_item	a 
where	a.nr_seq_lote		= b.nr_sequencia 
and	a.cd_identificacao	= cd_identificacao_w 
and	b.nr_seq_conta_banco	= nr_seq_conta_banco_w 
and	b.nr_sequencia		= nr_seq_lote_p 
and	coalesce(a.ds_erro_baixa::text, '') = '';
 
if (vl_depositado_w = 0) then 
	select	coalesce(sum(a.vl_deposito),0),		-- Real valor depositado 
		max(a.dt_deposito), 
		max(a.nr_sequencia) 
	into STRICT	vl_depositado_w, 
		dt_recebimento_w, 
		nr_seq_ret_dep_w 
	from	lote_ret_deposito_ident	b, 
		lote_ret_dep_ident_item	a 
	where	a.nr_seq_lote		= b.nr_sequencia 
	and	a.cd_identificacao	= cd_identif_dep_w 
	and	b.nr_seq_conta_banco	= nr_seq_conta_banco_w 
	and	b.nr_sequencia		= nr_seq_lote_p 
	and	coalesce(a.ds_erro_baixa::text, '') = '';
	 
	if (nr_seq_ret_dep_w IS NOT NULL AND nr_seq_ret_dep_w::text <> '') then 
		update lote_ret_dep_ident_item	 
		set	ds_erro_baixa	= '' 
		where 	nr_sequencia	= nr_seq_ret_dep_w;
	end if;
end if;
	 
select	count(*) 
into STRICT	qt_baixas_manuais_w 
from	deposito_ident_baixa a 
where	a.nr_seq_deposito_ident	= nr_seq_deposito_p;
 
open	C01;
loop 
fetch	C01 into	 
	nr_titulo_w, 
	vl_saldo_titulo_w, 
	vl_juros_w, 
	vl_multa_w, 
	vl_depositar_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	 
	if (vl_saldo_titulo_w	<= 0) then 
 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182702);
 
	end if;
	 
	vl_rec_maior_w		:= 0;
	vl_total_baixado_w	:= 0;
	vl_total_baixa_w	:= 0;
	vl_total_juros_baixa_w	:= 0;
	vl_total_multa_baixa_w	:= 0;
	qt_baixas_w		:= 0;
	qt_baixas_juros_w	:= 0;
	qt_baixas_multa_w	:= 0;
 
	open	c02;
	loop 
	fetch	c02 into 
		vl_baixa_w, 
		nr_seq_tf_baixa_dep_w, 
		cd_tipo_receb_baixa_w, 
		ie_tipo_baixa_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	 
		vl_baixado_w		:= dividir_sem_round(vl_baixa_w, vl_total_deposito_w) * coalesce(vl_saldo_titulo_w,0);
		vl_juros_baixa_w	:= dividir_sem_round(vl_baixa_w, vl_total_deposito_w) * coalesce(vl_juros_w,0);
		vl_multa_baixa_w	:= dividir_sem_round(vl_baixa_w, vl_total_deposito_w) * coalesce(vl_multa_w,0);
 
		vl_total_baixado_w	:= coalesce(vl_total_baixado_w,0) + coalesce(vl_baixado_w,0);
		vl_total_baixa_w	:= coalesce(vl_total_baixa_w,0) + coalesce(vl_baixa_w,0);
		vl_total_juros_baixa_w	:= coalesce(vl_total_juros_baixa_w,0) + coalesce(vl_juros_baixa_w,0);
		vl_total_multa_baixa_w	:= coalesce(vl_total_multa_baixa_w,0) + coalesce(vl_multa_baixa_w,0);
		 
		qt_baixas_w 		:= qt_baixas_w + 1;
		qt_baixas_juros_w	:= qt_baixas_juros_w + 1;
		qt_baixas_multa_w	:= qt_baixas_multa_w + 1;
	 
		if (qt_baixas_w = qt_baixas_manuais_w) then		 
			 
			if (vl_total_baixado_w > vl_saldo_titulo_w) then 
			 
				vl_baixado_w	:= vl_baixado_w - ( vl_total_baixado_w - vl_saldo_titulo_w );					
				 
			elsif (vl_total_baixado_w < vl_saldo_titulo_w) then 
				 
				vl_baixado_w	:= vl_baixado_w + ( vl_saldo_titulo_w - vl_total_baixado_w);
				 
			end if;
			 
		end if;
 
		if (vl_juros_baixa_w	> 0) and (qt_baixas_juros_w = qt_baixas_manuais_w) then 
		 
			if (vl_total_juros_baixa_w > vl_juros_w) then 
					 
				vl_juros_baixa_w := vl_juros_baixa_w - (vl_total_juros_baixa_w - vl_juros_w);
					 
			elsif (vl_total_juros_baixa_w < vl_juros_w) then 
 
				vl_juros_baixa_w := vl_juros_baixa_w + (vl_juros_w - vl_total_juros_baixa_w);
					 
			end if;
 
		end if;
 
		if (vl_multa_baixa_w	> 0) and (qt_baixas_multa_w = qt_baixas_manuais_w) then 
			 
			if (vl_total_multa_baixa_w > vl_multa_w) then 
			 
				vl_multa_baixa_w := vl_multa_baixa_w - (vl_total_multa_baixa_w - vl_multa_w);
				 
			elsif (vl_total_multa_baixa_w < vl_multa_w) then 
			 
				vl_multa_baixa_w := vl_multa_baixa_w + (vl_multa_w - vl_total_multa_baixa_w);
 
			end if;
 
		end if;
 
		vl_total_baixado_atual_w	:= coalesce(vl_total_baixado_atual_w,0) + coalesce(vl_baixado_w,0) + coalesce(vl_juros_baixa_w,0) + coalesce(vl_multa_baixa_w,0);
		 
		CALL baixa_titulo_receber_dep_ident(	cd_estabelecimento_p, 
				cd_tipo_receb_baixa_w, 
				nr_titulo_w, 
				nr_seq_tf_baixa_dep_w, 
				vl_baixado_w, 
				coalesce(dt_recebimento_w,clock_timestamp()), 
				nm_usuario_p, 
				nr_seq_deposito_p, 
				vl_rec_maior_w, 
				vl_juros_baixa_w, 
				vl_multa_baixa_w, 
				ie_tipo_baixa_w);
		 
	end	loop;
	close	c02;
 
	update	deposito_ident_titulo 
	set	vl_depositado	= vl_total_baixado_atual_w 
	where	nr_titulo	= nr_titulo_w 
	and	nr_seq_deposito	= nr_seq_deposito_p;
	 
	vl_total_baixado_atual_w := 0;
 
	CALL atualizar_saldo_tit_rec(nr_titulo_w,nm_usuario_p);
 
end	loop;
close	C01;
	 
 
update	deposito_identificado 
set	nm_usuario		= nm_usuario_p, 
	ie_status		= 'D', 
	dt_deposito		= coalesce(dt_recebimento_w, clock_timestamp()), 
	ie_valor_deposito	= 'VDI' 
where	nr_sequencia		= nr_seq_deposito_p;
 
if (coalesce(ie_commit_p, 'S') = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_manual_itens_depo_iden ( nr_seq_deposito_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text, nr_seq_lote_p bigint) FROM PUBLIC;

