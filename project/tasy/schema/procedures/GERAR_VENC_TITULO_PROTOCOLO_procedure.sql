-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_venc_titulo_protocolo ( nr_seq_protocolo_p bigint, nm_usuario_p text, ie_commit_p text, cd_condicao_pagamento_p INOUT text, dt_base_venc_p timestamp, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
dt_vencimento_w			timestamp;
dt_entrega_convenio_w		timestamp;
ie_tipo_protocolo_w			smallint;
nr_sequencia_w			bigint;
cd_condicao_pagamento_w		bigint := null;
cd_convenio_w				integer;
cd_estabelecimento_w			integer;
tx_fracao_parcela_w			double precision;
tx_acrescimo_w			double precision;

C01 CURSOR FOR 
	SELECT	cd_condicao_pagamento 
	from	convenio_regra_venc 
	where	cd_convenio		= cd_convenio_w 
	and	coalesce(ie_tipo_protocolo, ie_tipo_protocolo_w)	= ie_tipo_protocolo_w 
	and	(to_char(coalesce(dt_base_venc_p, clock_timestamp()), 'dd'))::numeric  between coalesce(qt_dia_mes_inicial, 1) and coalesce(qt_dia_mes_final, 31) 
	and	coalesce(dt_base_venc_p, clock_timestamp())	between trunc(coalesce(dt_inicio_vigencia, clock_timestamp() - interval '1 days'), 'dd') and fim_dia(coalesce(dt_fim_vigencia, clock_timestamp() + interval '1 days')) 
	and (cd_estabelecimento	= cd_estabelecimento_p or coalesce(cd_estabelecimento::text, '') = '') 
	Order by coalesce(ie_tipo_protocolo,0);

C02 CURSOR FOR 
	SELECT	100, 
		0, 
		dt_vencimento 
	from 	Protocolo_convenio 
	where 	nr_seq_protocolo	= nr_seq_protocolo_p 
	and 	(dt_vencimento IS NOT NULL AND dt_vencimento::text <> '') 
	
union
 
	SELECT	tx_fracao_parcela, 
       	coalesce(tx_acrescimo,0), 
		Obter_data_vencimento( 
      			coalesce(dt_base_venc_p,dt_entrega_convenio_w), 
				qt_dias_parcela, 
				cd_estabelecimento_w, 
				ie_corrido_util, 
				ie_acao_nao_util) 
	from 	parcela a, 
		condicao_pagamento b 
	where 	a.cd_condicao_pagamento = cd_condicao_pagamento_w 
	and 	a.cd_condicao_pagamento = b.cd_condicao_pagamento 
	and 	b.ie_forma_pagamento	<> 1 
	and 	coalesce(dt_vencimento_w::text, '') = '' 
	
union
 
	select 	100, 
		0, 
		dt_entrega_convenio_w 
	from 	parcela a, 
		condicao_pagamento b 
	where 	a.cd_condicao_pagamento = cd_condicao_pagamento_w 
	and 	a.cd_condicao_pagamento = b.cd_condicao_pagamento 
	and 	b.ie_forma_pagamento	= 1 
	and 	coalesce(dt_vencimento_w::text, '') = '';


BEGIN 
 
select	max(dt_vencimento), 
	max(dt_entrega_convenio), 
	max(ie_tipo_protocolo), 
	max(cd_convenio) 
into STRICT	dt_vencimento_w, 
	dt_entrega_convenio_w, 
	ie_tipo_protocolo_w, 
	cd_convenio_w 
from 	protocolo_convenio 
where	nr_seq_protocolo	= nr_seq_protocolo_p;
 
select coalesce(max(cd_estabelecimento),1) 
into STRICT	 cd_estabelecimento_w 
from	 estabelecimento;
 
delete 	from vencimento_titulo 
where 	nr_seq_protocolo	= nr_seq_protocolo_p;
 
if (coalesce(dt_vencimento_w::text, '') = '') and (dt_entrega_convenio_w IS NOT NULL AND dt_entrega_convenio_w::text <> '') then 
	OPEN C01;
	LOOP 
		FETCH C01 into cd_condicao_pagamento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			cd_condicao_pagamento_w 	:= cd_condicao_pagamento_w;
	END LOOP;
	CLOSE c01;
end if;
 
OPEN C02;
LOOP 
	FETCH C02 into 
		tx_fracao_parcela_w, 
		tx_acrescimo_w, 
		dt_vencimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
 
		select	nextval('vencimento_titulo_seq') 
		into STRICT 	nr_sequencia_w 
		;
 
		insert	into vencimento_titulo( 
			nr_sequencia, 
			dt_vencimento, 
			pr_vencimento, 
			dt_atualizacao, 
			nm_usuario, 
			nr_interno_conta, 
			nr_seq_protocolo, 
			pr_acrescimo, 
			vl_vencimento) 
		values ( 
			nr_sequencia_w, 
			dt_vencimento_w, 
			tx_fracao_parcela_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			null, 
			nr_seq_protocolo_p, 
			tx_acrescimo_w, 
			0);
END LOOP;
CLOSE c02;
 
if (coalesce(ie_commit_p, 'S') = 'S') then 
	commit;
end if;
 
cd_condicao_pagamento_p	:= cd_condicao_pagamento_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_venc_titulo_protocolo ( nr_seq_protocolo_p bigint, nm_usuario_p text, ie_commit_p text, cd_condicao_pagamento_p INOUT text, dt_base_venc_p timestamp, cd_estabelecimento_p bigint) FROM PUBLIC;

