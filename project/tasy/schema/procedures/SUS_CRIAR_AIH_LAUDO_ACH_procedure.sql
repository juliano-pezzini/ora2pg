-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_criar_aih_laudo_ach ( nr_seq_lote_p bigint, dt_importacao_p timestamp, ds_retorno_p INOUT text, nm_usuario_p text, ie_tipo_data_p text, dt_inicial_p timestamp, dt_final_p timestamp) AS $body$
DECLARE


nr_seq_interno_w			bigint;
nr_atendimento_w			bigint;
cd_pessoa_fisica_w		varchar(10);
dt_retorno_secr_w			timestamp;
cd_cid_secundario_w		varchar(10);
nr_sequencia_w			bigint;
ie_origem_proced_w		bigint;
cd_procedimento_solic_w		bigint;
cd_procedimento_real_w	bigint;
ds_retorno_w			varchar(255);
cd_orgao_emissor_w		varchar(10);
cd_medico_resp_w			varchar(10);
cd_medico_resp_ww		varchar(10);
dt_emissao_w			timestamp;
dt_emissao_laudo_w			timestamp;
cd_motivo_alta_w			smallint;
cd_motivo_alta_ww			smallint;
cd_cid_principal_w			varchar(10);
ie_carater_inter_sus_w		varchar(2);
cd_estabelecimento_w		bigint;
nr_interno_conta_w			bigint;
cd_medico_solic_w			varchar(15);
cd_modalidade_w			smallint;
cd_especialidade_aih_w		smallint;
cd_especialidade_aih_ww		smallint;
ie_mudanca_procedimento_w		varchar(1);
cd_cid_secundario_laudo_w		varchar(10);
cd_cid_causa_assoc_laudo_w	varchar(10);
nr_seq_lote_w			bigint;
ie_codigo_autorizacao_w		smallint;
qt_nascido_vivo_w		smallint;
qt_nascido_morto_w		smallint;
qt_saida_alta_w			smallint;
qt_saida_transferencia_w	smallint;
qt_saida_obito_w		smallint;
nr_gestante_prenatal_w		bigint;
qt_longa_permanencia_w		smallint;
ie_exibe_mensagem_w		varchar(15) := 'S';
qt_aih_atend_w			bigint := 0;
dt_inicial_w			timestamp := null;
dt_final_w			timestamp := null;
dt_alta_w			timestamp;
cdautlau_w 			varchar(3);
cdcpfmed_w 			varchar(11);
cdideaih_w 			bigint;
cdidelau_w 			bigint;
cdidemun_w 			integer;
cdidepro_w 			bigint;
cdproaut_w 			varchar(10);
cdprontu_w 			varchar(20);
cnsaut_w 			varchar(15);
compet_w 			integer;
dtapresent_w 			timestamp;
dtautlau_w 			integer;
dtemiaih_w 			integer;
dt_importacao_w 		timestamp;
gestante_w 			bigint;
nmidepac_w 			varchar(50);
nmmedaut_w 			varchar(60);
nr_seq_imp_ach_w 		bigint;
qteproc_w 			smallint;
sequencial_w 			smallint;
tipo_w 				smallint;
tipoaih_w 			smallint;
qtdeaut_w			w_sus_importacao_ach.qtdeaut%type;
nr_aih_w			sus_aih_unif.nr_aih%type;
nrgerint_w                      w_sus_importacao_ach.nrgerint%type;
dstplau_w                       w_sus_importacao_ach.dstplau%type;
nrcnspac_w                      w_sus_importacao_ach.nrcnspac%type;
dspropri_w                      w_sus_importacao_ach.dspropri%type;
cdprosec_w                      w_sus_importacao_ach.cdprosec%type;
dsprosec_w                      w_sus_importacao_ach.dsprosec%type;
dtiniaih_w                      w_sus_importacao_ach.dtiniaih%type;
dtfimaih_w                      w_sus_importacao_ach.dtfimaih%type;
seqaih_w                        w_sus_importacao_ach.seqaih%type;

C01 CURSOR FOR
	SELECT	nr_sequencia nr_seq_imp_ach,
		cdautlau,
		cdcpfmed,
		cdideaih,
		cdidelau,
		cdidemun,
		cdidepro,
		cdproaut,
		cdprontu,
		cnsaut,
		compet,
		dtapresent,
		dtautlau,
		dtemiaih,
		gestante,
		nmidepac,
		nmmedaut,
		qteproc,
		sequencial,
		tipo,
		tipoaih,
		qtdeaut,
                nrgerint,
                dstplau,
                nrcnspac,
                dspropri,
                cdprosec,
                dsprosec,
                dtiniaih,
                dtfimaih,
                seqaih
	from	w_sus_importacao_ach
	where	dt_importacao 	= dt_importacao_p
	and	nm_usuario	= nm_usuario_p
	order by cdidelau;
	
ach_c   c01%rowtype;


BEGIN

CALL sus_gerar_cdidelau_laudo_pac(nr_seq_lote_p, 0, nm_usuario_p);

ds_retorno_w:=	'';

ie_exibe_mensagem_w := coalesce(obter_valor_param_usuario(1006,51,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');

for ach_c in C01 loop
        begin
	
	nr_seq_imp_ach_w	:= ach_c.nr_seq_imp_ach;
	cdautlau_w 		:= ach_c.cdautlau;
	cdcpfmed_w 		:= ach_c.cdcpfmed;
	cdideaih_w 		:= ach_c.cdideaih;
	cdidelau_w 		:= ach_c.cdidelau;
	cdidemun_w 		:= ach_c.cdidemun;
	cdidepro_w 		:= ach_c.cdidepro;
	cdproaut_w 		:= ach_c.cdproaut;
	cdprontu_w 		:= ach_c.cdprontu;
	cnsaut_w   		:= ach_c.cnsaut;
	compet_w   		:= ach_c.compet;
	dtapresent_w 		:= ach_c.dtapresent;
	dtautlau_w 		:= ach_c.dtautlau;
	dtemiaih_w 		:= ach_c.dtemiaih;
	gestante_w 		:= ach_c.gestante;
	nmidepac_w 		:= ach_c.nmidepac;
	nmmedaut_w 		:= ach_c.nmmedaut;
	qteproc_w  		:= ach_c.qteproc;
	sequencial_w 		:= ach_c.sequencial;
	tipo_w     		:= ach_c.tipo;
	tipoaih_w               := ach_c.tipoaih;
	qtdeaut_w		:= ach_c.qtdeaut;
        nrgerint_w              := ach_c.nrgerint;
        dstplau_w               := ach_c.dstplau;
        nrcnspac_w              := ach_c.nrcnspac;
        dspropri_w              := ach_c.dspropri;
        cdprosec_w              := ach_c.cdprosec;
        dsprosec_w              := ach_c.dsprosec;
        dtiniaih_w              := ach_c.dtiniaih;
        dtfimaih_w              := ach_c.dtfimaih;
        seqaih_w                := ach_c.seqaih;
	
	if (tipo_w = 0) then
		begin

		begin
		select	p.nr_seq_interno,
			b.nr_atendimento,
			b.dt_entrada,
			b.dt_alta,
			b.ie_carater_inter_sus,
			p.dt_retorno_secr,
			p.cd_procedimento_solic,
			p.ie_origem_proced,
			p.nr_interno_conta,
			p.cd_medico_requisitante,
			p.cd_medico_responsavel,
			b.cd_estabelecimento,
			CASE WHEN p.ie_tipo_laudo_sus=1 THEN 'S'  ELSE 'N' END ,
			p.cd_cid_principal,
			p.cd_cid_secundario,
			p.cd_cid_causa_assoc,
			coalesce(substr(Obter_Motivo_Alta_sus(b.nr_atendimento),1,2),'00'),
			p.nr_seq_lote,
			p.dt_emissao,
			b.cd_pessoa_fisica
		into STRICT	nr_seq_interno_w,
			nr_atendimento_w,
			dt_emissao_w,
			dt_alta_w,
			ie_carater_inter_sus_w,
			dt_retorno_secr_w,
			cd_procedimento_solic_w,
			ie_origem_proced_w,
			nr_interno_conta_w,
			cd_medico_solic_w,
			cd_medico_resp_ww,
			cd_estabelecimento_w,
			ie_mudanca_procedimento_w,
			cd_cid_principal_w,
			cd_cid_secundario_laudo_w,
			cd_cid_causa_assoc_laudo_w,
			cd_motivo_alta_ww,
			nr_seq_lote_w,
			dt_emissao_laudo_w,
			cd_pessoa_fisica_w
		from	sus_parametros_aih	d,
			atendimento_paciente	b,
			sus_lote_autor		e,
			sus_laudo_paciente 	p,
			sus_id_laudo_ach f
		where	b.nr_atendimento	= p.nr_atendimento
		and	cdidelau_w		= f.ds_id_laudo_ach
		and	e.cd_estabelecimento 	= d.cd_estabelecimento
		and 	e.nr_sequencia  	= p.nr_seq_lote
		and	p.nr_seq_lote		= nr_seq_lote_p
		and	p.nr_seq_interno	= f.nr_seq_interno
		and	(((p.ie_tipo_laudo_sus	= 0) and 
			not exists (SELECT	1
				from	sus_laudo_paciente x,
					sus_id_laudo_ach y
				where	x.nr_atendimento = p.nr_atendimento
				and	x.nr_seq_interno = y.nr_seq_interno
				and	x.ie_tipo_laudo_sus = 1
				and	x.nr_interno_conta = p.nr_interno_conta
				and	cdidelau_w		= f.ds_id_laudo_ach
				)) or (p.ie_tipo_laudo_sus = 1)) LIMIT 1;
		exception
		when others then
			nr_seq_interno_w :=	null;
		end;	

		if (nr_seq_interno_w IS NOT NULL AND nr_seq_interno_w::text <> '') then
			begin
			update	sus_laudo_paciente
			set	dt_retorno_secr		= 	dt_importacao_p,
				nr_aih			=	cdideaih_w,
                                nr_seq_aih              =       seqaih_w,
				dt_atualizacao		=	clock_timestamp(),
				nm_usuario		=	nm_usuario_p,
				qt_procedimento_solic	=	qtdeaut_w,
                                nr_protocolo_gerint     =       nrgerint_w
			where	nr_seq_interno		=	nr_seq_interno_w
			and	nr_seq_lote		=	nr_seq_lote_p;

			update	sus_laudo_paciente
			set	dt_retorno_secr		= 	dt_importacao_p,
				dt_atualizacao		=	clock_timestamp(),
				nm_usuario		=	nm_usuario_p,
                                nr_protocolo_gerint     =       nrgerint_w
			where	nr_interno_conta	=	nr_interno_conta_w
			and	nr_seq_lote		=	nr_seq_lote_p
			and	ie_tipo_laudo_sus	= 	2;

			update 	sus_lote_autor
			set	dt_retorno		= dt_importacao_p,
				nm_usuario_retorno	= nm_usuario_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_sequencia		= nr_seq_lote_w;

			if (coalesce(nr_interno_conta_w,0) > 0) then
				begin

				begin
				select	coalesce(dt_periodo_inicial,dt_emissao_w),
					coalesce(dt_periodo_final,dt_alta_w)
				into STRICT	dt_inicial_w,
					dt_final_w
				from	conta_paciente
				where	nr_interno_conta = nr_interno_conta_w;
				exception
				when others then
					dt_inicial_w 	:= dt_emissao_w;
					dt_final_w 	:= dt_alta_w;
				end;
				end;
			end if;

                        if (dtiniaih_w IS NOT NULL AND dtiniaih_w::text <> '') then
                                dt_inicial_w    := to_date(to_char(dtiniaih_w),'dd/mm/yyyy');
                        end if;

                        if (dtfimaih_w IS NOT NULL AND dtfimaih_w::text <> '') then
                                dt_final_w      := to_date(to_char(dtfimaih_w),'dd/mm/yyyy');
                        end if;
			
			cd_procedimento_real_w  := cd_procedimento_solic_w;

			if (coalesce(ie_mudanca_procedimento_w,'N') =  'S') then
				begin
				
				if (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') then
					begin
					select	max(p.cd_procedimento_solic)
					into STRICT	cd_procedimento_solic_w
					from	sus_parametros_aih	d,
						atendimento_paciente	b,
						sus_lote_autor		e,
						sus_laudo_paciente 	p,
						sus_id_laudo_ach f
					where	b.nr_atendimento	= p.nr_atendimento
					and	cdidelau_w		= f.ds_id_laudo_ach
					and	e.cd_estabelecimento 	= d.cd_estabelecimento
					and 	e.nr_sequencia  	= p.nr_seq_lote
					and	(((coalesce(ie_tipo_data_p,'E') = 'E') and trunc(e.dt_envio) between dt_inicial_p and dt_final_p) or
						((coalesce(ie_tipo_data_p,'E') = 'R') and trunc(e.dt_retorno) between dt_inicial_p and dt_final_p) or
						((coalesce(ie_tipo_data_p,'E') = 'C') and trunc(e.dt_competencia) between dt_inicial_p and dt_final_p))
					--and	p.nr_seq_lote		= nr_seq_lote_p
					and	p.nr_interno_conta	= nr_interno_conta_w
					and	p.ie_tipo_laudo_sus	= 0;					
					end;
				else
					begin
					select	max(p.cd_procedimento_solic)
					into STRICT	cd_procedimento_solic_w
					from	sus_parametros_aih	d,
						atendimento_paciente	b,
						sus_lote_autor		e,
						sus_laudo_paciente 	p,
						sus_id_laudo_ach f
					where	b.nr_atendimento	= p.nr_atendimento
					and	cdidelau_w		= f.ds_id_laudo_ach
					and	e.cd_estabelecimento 	= d.cd_estabelecimento
					and 	e.nr_sequencia  	= p.nr_seq_lote
					and	p.nr_seq_lote		= nr_seq_lote_p
					and	p.nr_interno_conta	= nr_interno_conta_w
					and	p.ie_tipo_laudo_sus	= 0;
					end;
				end if;
				
				
				
				end;
			end if;
			
			if (coalesce(nr_interno_conta_w,0) <> 0) then
				begin

				select	count(*)
				into STRICT	nr_sequencia_w
				from	sus_aih_unif
				where	nr_atendimento = nr_atendimento_w
				and	nr_interno_conta = nr_interno_conta_w
				and 	nr_aih <> to_char(cdideaih_w);			
				end;
								
			end if;

			if (nr_sequencia_w = 0) then
				begin
				
				select	coalesce(max(nr_sequencia)+1,0)
				into STRICT	nr_sequencia_w
				from 	sus_aih_unif
				where 	nr_aih	=	cdideaih_w;

				select	coalesce(max(cd_modalidade),2)
				into STRICT	cd_modalidade_w
				from	sus_procedimento_modal
				where	cd_procedimento		= cd_procedimento_real_w
				and	ie_origem_proced	= ie_origem_proced_w;

				select	max(cd_orgao_emissor_aih)
				into STRICT	cd_orgao_emissor_w
				from	sus_parametros_aih
				where	cd_estabelecimento = cd_estabelecimento_w;

				select	coalesce(min(b.cd_espec_leito),1)
				into STRICT	cd_especialidade_aih_w
				from	sus_espec_leito         b,
		                	sus_procedimento_leito  a
				where   a.nr_seq_espec_leito    = b.nr_sequencia
				and     a.cd_procedimento       = cd_procedimento_real_w
				and     a.ie_origem_proced      = ie_origem_proced_w
				and	exists (SELECT	1
						from	sus_especialidade x
						where	b.cd_espec_leito	= x.cd_especialidade);

				select	coalesce(sus_obter_especialidade_aih(cd_procedimento_real_w, ie_origem_proced_w, cd_pessoa_fisica_w, cd_estabelecimento_w),'0')
				into STRICT	cd_especialidade_aih_ww
				;

				if (cd_especialidade_aih_ww <> '0') then
					begin
					cd_especialidade_aih_w := cd_especialidade_aih_ww;
					end;
				end if;

				if (coalesce(cnsaut_w,'X') <> 'X') then
					begin
					begin
					select	coalesce(a.cd_pessoa_fisica,cd_medico_resp_ww)
					into STRICT	cd_medico_resp_w
					from	pessoa_fisica a,
						sus_medico_credenciamento b
					where	a.nr_cartao_nac_sus = cnsaut_w
					and	b.cd_medico = a.cd_pessoa_fisica
					and	b.ie_auditor = 'S'
					and	coalesce(b.ie_situacao,'A') = 'A'
					and	coalesce(b.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;
					exception
					when others then
						cd_medico_resp_w := cd_medico_resp_ww;
					end;
					end;
				end if;

				begin
				select	ie_codigo_autorizacao,
					coalesce(cd_motivo_cobranca,cd_motivo_alta_ww),
					coalesce(qt_nascido_vivo,0),
					coalesce(qt_nascido_morto,0),
					coalesce(qt_saida_alta,0),
					coalesce(qt_saida_transferencia,0),
					coalesce(qt_saida_obito,0),
					nr_gestante_prenatal,
					qt_longa_permanencia
				into STRICT	ie_codigo_autorizacao_w,
					cd_motivo_alta_w,
					qt_nascido_vivo_w,
					qt_nascido_morto_w,
					qt_saida_alta_w,
					qt_saida_transferencia_w,
					qt_saida_obito_w,
					nr_gestante_prenatal_w,
					qt_longa_permanencia_w
				from	sus_dados_aih_conta
				where	nr_interno_conta = nr_interno_conta_w;
				exception
				when others then
					ie_codigo_autorizacao_w := null;
					cd_motivo_alta_w	:= cd_motivo_alta_ww;
					qt_nascido_vivo_w	:= 0;
					qt_nascido_morto_w	:= 0;
					qt_saida_alta_w		:= 0;
					qt_saida_transferencia_w:= 0;
					qt_saida_obito_w	:= 0;
					nr_gestante_prenatal_w	:= null;
					qt_longa_permanencia_w	:= null;
				end;
				
				if (nr_sequencia_w = 0) then

					begin
					insert into sus_aih_unif(	nr_aih,
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								cd_estabelecimento,
								ie_identificacao_aih,
								nr_proxima_aih,
								nr_anterior_aih,
								dt_emissao,
								ie_mudanca_proc,
								cd_procedimento_solic,
								ie_origem_proc_solic,
								cd_procedimento_real,
								ie_origem_proc_real,
								cd_medico_solic,
								cd_cid_principal,
								cd_cid_secundario,
								cd_cid_causa_compl,
								cd_cid_causa_morte,
								nr_interno_conta,
								nr_atendimento,
								cd_medico_responsavel,
								cd_medico_autorizador,
								cd_modalidade,
								cd_motivo_cobranca,
								cd_especialidade_aih,
								ie_codigo_autorizacao,
								qt_nascido_vivo,
								qt_nascido_morto,
								qt_saida_alta,
								qt_saida_transferencia,
								qt_saida_obito,
								nr_gestante_prenatal,
								cd_orgao_emissor_aih,
								cd_carater_internacao,
								dt_inicial,
								dt_final,
								nr_proc_interno_solic,
								nr_proc_interno_real,
								qt_longa_permanencia)
							values (	cdideaih_w,
								nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_estabelecimento_w,
								'01',
								null,
								null,
								dt_emissao_w,
								ie_mudanca_procedimento_w,
								cd_procedimento_solic_w,
								ie_origem_proced_w,
								cd_procedimento_real_w,
								ie_origem_proced_w,
								coalesce(cd_medico_solic_w,cd_medico_resp_w),
								cd_cid_principal_w,
								cd_cid_secundario_laudo_w,
								cd_cid_causa_assoc_laudo_w,
								null,
								nr_interno_conta_w,
								nr_atendimento_w,
								coalesce(cd_medico_solic_w,cd_medico_resp_w),
								coalesce(cd_medico_resp_w,cd_medico_solic_w),
								cd_modalidade_w,
								cd_motivo_alta_w,
								cd_especialidade_aih_w,
								ie_codigo_autorizacao_w,
								qt_nascido_vivo_w,
								qt_nascido_morto_w,
								qt_saida_alta_w,
								qt_saida_transferencia_w,
								qt_saida_obito_w,
								nr_gestante_prenatal_w,
								cd_orgao_emissor_w,
								coalesce(ie_carater_inter_sus_w,1),
								dt_inicial_w,
								dt_final_w,
								null,
								null,
								qt_longa_permanencia_w);
					exception
					when others then
						ds_retorno_w := substr(wheb_mensagem_pck.get_texto(299772, 'CDIDELAU= ' || cdidelau_w ||
									';NR_ATENDIMENTO=' || nr_atendimento_w ||
									';DS_ERRO=' || sqlerrm),1,255);
					end;	
				elsif (nr_sequencia_w > 0) and (sus_obter_se_detalhe_proc(cd_procedimento_real_w,ie_origem_proced_w,'003',dt_emissao_w) > 0) then
					
					begin
					insert into sus_aih_unif(	nr_aih,
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								cd_estabelecimento,
								ie_identificacao_aih,
								nr_proxima_aih,
								nr_anterior_aih,
								dt_emissao,
								ie_mudanca_proc,
								cd_procedimento_solic,
								ie_origem_proc_solic,
								cd_procedimento_real,
								ie_origem_proc_real,
								cd_medico_solic,
								cd_cid_principal,
								cd_cid_secundario,
								cd_cid_causa_compl,
								cd_cid_causa_morte,
								nr_interno_conta,
								nr_atendimento,
								cd_medico_responsavel,
								cd_medico_autorizador,
								cd_modalidade,
								cd_motivo_cobranca,
								cd_especialidade_aih,
								ie_codigo_autorizacao,
								qt_nascido_vivo,
								qt_nascido_morto,
								qt_saida_alta,
								qt_saida_transferencia,
								qt_saida_obito,
								nr_gestante_prenatal,
								cd_orgao_emissor_aih,
								cd_carater_internacao,
								dt_inicial,
								dt_final,
								nr_proc_interno_solic,
								nr_proc_interno_real,
								qt_longa_permanencia)
							values (	cdideaih_w,
								nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_estabelecimento_w,
								'05',
								null,
								null,
								dt_emissao_w,
								ie_mudanca_procedimento_w,
								cd_procedimento_solic_w,
								ie_origem_proced_w,
								cd_procedimento_real_w,
								ie_origem_proced_w,
								coalesce(cd_medico_solic_w,cd_medico_resp_w),
								cd_cid_principal_w,
								cd_cid_secundario_laudo_w,
								cd_cid_causa_assoc_laudo_w,
								null,
								null,
								nr_atendimento_w,
								coalesce(cd_medico_solic_w,cd_medico_resp_w),
								coalesce(cd_medico_resp_w,cd_medico_solic_w),
								cd_modalidade_w,
								cd_motivo_alta_w,
								cd_especialidade_aih_w,
								ie_codigo_autorizacao_w,
								qt_nascido_vivo_w,
								qt_nascido_morto_w,
								qt_saida_alta_w,
								qt_saida_transferencia_w,
								qt_saida_obito_w,
								nr_gestante_prenatal_w,
								cd_orgao_emissor_w,
								coalesce(ie_carater_inter_sus_w,1),
								dt_inicial_w,
								dt_final_w,
								null,
								null,
								qt_longa_permanencia_w);
					exception
					when others then
						ds_retorno_w := substr(wheb_mensagem_pck.get_texto(299772, 'CDIDELAU= ' || cdidelau_w ||
									';NR_ATENDIMENTO=' || nr_atendimento_w ||
									';DS_ERRO=' || sqlerrm),1,255);
					end;					
				end if;
				
				begin
				update	sus_registro_civil
				set	nr_aih         	= cdideaih_w,
					nr_seq_aih     	= nr_sequencia_w
				where	nr_atendimento	= nr_atendimento_w
				and exists (SELECT 1
							from sus_aih_unif
							where nr_aih = cdideaih_w
							and nr_seq_aih = nr_sequencia_w);				
				exception
				when others then
					ds_retorno_w := substr(wheb_mensagem_pck.get_texto(299772, 'CDIDELAU= ' || cdidelau_w ||
								';NR_ATENDIMENTO=' || nr_atendimento_w ||
								';DS_ERRO=' || sqlerrm),1,255);
				end;

				end;
			else
				begin
				
				if (coalesce(cnsaut_w,'X') <> 'X') then
					begin
					begin
					select	coalesce(a.cd_pessoa_fisica,cd_medico_resp_ww)
					into STRICT	cd_medico_resp_w
					from	pessoa_fisica a,
						sus_medico_credenciamento b
					where	a.nr_cartao_nac_sus = cnsaut_w
					and	b.cd_medico = a.cd_pessoa_fisica
					and	b.ie_auditor = 'S'
					and	coalesce(b.ie_situacao,'A') = 'A'
					and	coalesce(b.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;
					exception
					when others then
						cd_medico_resp_w := cd_medico_resp_ww;
					end;
					end;
				end if;
				
				begin
				update 	sus_aih_unif
				set 	nr_aih = cdideaih_w,
                                        nr_sequencia = seqaih_w,
					cd_procedimento_real = cd_procedimento_real_w,
					ie_mudanca_proc = ie_mudanca_procedimento_w,
					dt_inicial = coalesce(dt_inicial,dt_emissao_w),
					dt_final = coalesce(dt_final,dt_alta_w),
					cd_medico_autorizador = coalesce(cd_medico_resp_w,cd_medico_solic_w)
				where 	nr_atendimento = nr_atendimento_w
				and	nr_interno_conta = nr_interno_conta_w;
				exception
				when others then
					CALL sus_gravar_retorno_laudo_ach(nr_seq_lote_p, cdidelau_w, cd_procedimento_real_w, '9', cdideaih_w, 0, nm_usuario_p);
				end;
				
				begin
				
				update	sus_registro_civil
				set	nr_aih         	= cdideaih_w,
					nr_seq_aih     	= nr_sequencia_w
				where	nr_atendimento	= nr_atendimento_w;				
				exception
				when others then
					ds_retorno_w := substr(wheb_mensagem_pck.get_texto(299772, 'CDIDELAU= ' || cdidelau_w ||
									';NR_ATENDIMENTO=' || nr_atendimento_w || 
									';DS_ERRO=' || sqlerrm),1,255);
				end;

				end;
			end if;

			commit;

			end;
		elsif (nr_seq_interno_w IS NOT NULL AND nr_seq_interno_w::text <> '') and (ie_exibe_mensagem_w = 'S') then
			ds_retorno_w := substr(wheb_mensagem_pck.get_texto(299789, 'CDIDEAIH= ' || cdideaih_w ||
								';NR_SEQ_INTERNO=' || nr_seq_interno_w),1,255);
		end if;

		CALL sus_gravar_retorno_laudo_ach(nr_seq_lote_p, cdidelau_w, cdproaut_w, tipo_w, cdideaih_w, qtdeaut_w, nm_usuario_p);

		end;
	elsif (tipo_w in (2,4,5)) then
		CALL sus_gravar_retorno_laudo_ach(nr_seq_lote_p, cdidelau_w, cdidepro_w, tipo_w, null, qteproc_w, nm_usuario_p);
	end if;

        end;
end loop;

delete	from sus_id_laudo_ach
where	nr_seq_lote	= nr_seq_lote_p;

commit;

ds_retorno_p:=	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_criar_aih_laudo_ach ( nr_seq_lote_p bigint, dt_importacao_p timestamp, ds_retorno_p INOUT text, nm_usuario_p text, ie_tipo_data_p text, dt_inicial_p timestamp, dt_final_p timestamp) FROM PUBLIC;

