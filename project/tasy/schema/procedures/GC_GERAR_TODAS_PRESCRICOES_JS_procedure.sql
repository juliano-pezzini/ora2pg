-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gc_gerar_todas_prescricoes_js ( nr_seq_agenda_p bigint, cd_medico_p text, cd_pessoa_fisica_p text, cd_procedimento_p bigint, nr_cirurgia_p bigint, nr_doc_interno_p bigint, nr_doc_interno_aux_p bigint, dt_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_inf_p text, cd_setor_atendimento_p bigint ) AS $body$
DECLARE


nr_prescricao_w			bigint;
qt_prescr_medica_w		bigint;
ie_gerar_cirur_somentedia_w		varchar(1);
ie_gerar_prescr_opme_w		varchar(1);
gerar_prescr_cirurgia_w		varchar(1);
			

BEGIN


if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
	begin
	
	select 	count(*)
	into STRICT	qt_prescr_medica_w
	from	prescr_medica a,
		prescr_material b 
	where	a.nr_prescricao = b.nr_prescricao
	and	nr_seq_agenda = nr_seq_agenda_p
	and coalesce(ie_tipo_prescr_cirur::text, '') = '';
	
	end;
	
	if (qt_prescr_medica_w = 0) then
		begin
		
		ie_gerar_prescr_opme_w := obter_param_usuario(871, 171, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_prescr_opme_w);
		ie_gerar_cirur_somentedia_w := obter_param_usuario(871, 185, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_cirur_somentedia_w);
		gerar_prescr_cirurgia_w := obter_param_usuario(900, 389, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, gerar_prescr_cirurgia_w);
				
		if (ie_gerar_cirur_somentedia_w = 'S') and (trunc(dt_agenda_p) <> trunc(clock_timestamp())) then
			begin
			--- Somente é possível gerar a cirurgia/prescrição na data do agendamento.
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(53694);
			end;
		else
			begin
				
			nr_prescricao_w := gerar_prescricao_agenda(nr_seq_agenda_p, nm_usuario_p, nr_prescricao_w, cd_estabelecimento_p);
		
			CALL gerar_proc_agenda_cirurgia(nr_seq_agenda_p,nr_prescricao_w,nm_usuario_p);
		
			if (gerar_prescr_cirurgia_w = 'S') then
				CALL gerar_prescricao_cirurgia(0,0,0,nr_seq_agenda_p,ie_origem_inf_p,nm_usuario_p,nr_prescricao_w,nr_doc_interno_p,0,871,obter_perfil_ativo,null,nr_doc_interno_aux_p,null,null);
			end if;	
				
			if (ie_gerar_prescr_opme_w = 'S') then
				begin
				CALL gerar_opme_prescr_cirurgia(nr_seq_agenda_p,ie_origem_inf_p,nm_usuario_p,nr_prescricao_w,cd_estabelecimento_p);
				end;
			end if;				
			end;
		end if;
		end;
	end if;
	
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gc_gerar_todas_prescricoes_js ( nr_seq_agenda_p bigint, cd_medico_p text, cd_pessoa_fisica_p text, cd_procedimento_p bigint, nr_cirurgia_p bigint, nr_doc_interno_p bigint, nr_doc_interno_aux_p bigint, dt_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_inf_p text, cd_setor_atendimento_p bigint ) FROM PUBLIC;

