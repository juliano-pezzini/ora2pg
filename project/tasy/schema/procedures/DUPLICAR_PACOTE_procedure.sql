-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_pacote ( nr_atendimento_p bigint, nr_sequencia_p bigint, nr_seq_tipo_acomod_p bigint, ie_classif_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w		bigint;
nr_seq_procedimento_w	bigint;
nr_seq_tipo_acomod_w	bigint;

cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_dias_pacote_w		integer;
qt_dias_hospital_w		integer;
qt_dias_uti_w		integer;
ie_excedente_w		smallint;
vl_pacote_w		double precision;
vl_honorario_w		double precision;
qt_ponto_pacote_w		double precision;
qt_ponto_honorario_w	double precision;
cd_estrutura_conta_w	integer;

cd_estabelecimento_w	smallint;
ie_tipo_atendimento_w	smallint;
cd_convenio_w		bigint;
cd_categoria_w		varchar(10);
dt_procedimento_w	timestamp;
cd_setor_atendimento_w	integer;
cd_medico_executor_w	varchar(10);
vl_ch_honorarios_w		double precision;
vl_ch_operacional_w	double precision;
vl_filme_w		double precision;

cd_regra_honorario_w	varchar(5);
ie_conta_honorario_w	varchar(1);
ie_calcula_honorario_w	varchar(1)		:= 'S';
cd_cgc_honorario_w	varchar(14);
cd_pessoa_honorario_w	varchar(10);
cd_cgc_prestador_w	varchar(14);

pr_afaturar_w		double precision;
cd_estrutura_honor_w	integer 		:= 0;
cd_especialidade_medica_w	integer	:= 0;
vl_procedimento_w		double precision;
nr_seq_criterio_w		bigint;
ie_exige_gabarito_w	varchar(01);

cd_usuario_convenio_w	varchar(40);
cd_plano_w		varchar(20);
ie_clinica_w		bigint;
cd_empresa_ref_w		bigint;
cd_edicao_amb_w		bigint;
ie_carater_inter_sus_w	varchar(2);
cd_procedencia_w		integer;
ie_doc_executor_w		smallint;
cd_cbo_w		varchar(06);
nr_seq_proc_interno_w	bigint;
nr_seq_exame_w		bigint;


BEGIN 
if (coalesce(nr_seq_tipo_acomod_p,0) = 0) then 
	select	nr_seq_tipo_acomod 
	into STRICT	nr_seq_tipo_acomod_w 
	from 	atendimento_pacote 
	where	nr_atendimento	= nr_atendimento_p 
	 and	nr_sequencia	= nr_sequencia_p;
else 
	nr_seq_tipo_acomod_w	:= nr_seq_tipo_acomod_p;
end if;
 
begin 
select	cd_procedencia 
into STRICT	cd_procedencia_w 
from 	atendimento_paciente 
where 	nr_atendimento 	= nr_atendimento_p;
exception 
  	when others then 
   	cd_procedencia_w := 0;
end;
 
select	qt_dias_pacote, 
	qt_dias_hospital, 
	qt_dias_uti, 
	ie_excedente, 
	cd_procedimento, 
	ie_origem_proced, 
	coalesce(vl_pacote,0), 
	coalesce(vl_honorario,0), 
	coalesce(qt_ponto_pacote,0), 
	coalesce(qt_ponto_honorario,0), 
	cd_estrutura_conta, 
	ie_exige_gabarito 
into STRICT	qt_dias_pacote_w, 
	qt_dias_hospital_w, 
	qt_dias_uti_w, 
	ie_excedente_w, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	vl_pacote_w, 
	vl_honorario_w, 
	qt_ponto_pacote_w, 
	qt_ponto_honorario_w, 
	cd_estrutura_conta_w, 
	ie_exige_gabarito_w 
from	pacote_tipo_acomodacao 
where	nr_sequencia	= nr_seq_tipo_acomod_w;
 
select	b.cd_estabelecimento, 
	b.ie_tipo_atendimento, 
	cd_convenio, 
	cd_categoria, 
	dt_procedimento - (1/86400), 
	cd_setor_atendimento, 
	cd_medico_executor, 
	tx_procedimento, 
	a.cd_cgc_prestador, 
	b.ie_carater_inter_sus, 
	a.ie_doc_executor, 
	a.cd_cbo, 
	a.nr_seq_proc_interno, 
	a.nr_seq_exame 
into STRICT	cd_estabelecimento_w, 
	ie_tipo_atendimento_w, 
	cd_convenio_w, 
	cd_categoria_w, 
	dt_procedimento_w, 
	cd_setor_atendimento_w, 
	cd_medico_executor_w, 
	pr_afaturar_w, 
	cd_cgc_prestador_w, 
	ie_carater_inter_sus_w, 
	ie_doc_executor_w, 
	cd_cbo_w, 
	nr_seq_proc_interno_w, 
	nr_seq_exame_w 
from	atendimento_paciente b, 
	procedimento_paciente a 
where	a.nr_atendimento = b.nr_atendimento 
 and	a.nr_sequencia = ( 
	SELECT	nr_seq_procedimento 
	from	atendimento_pacote 
	where	nr_atendimento	= nr_atendimento_p 
	 and	nr_sequencia	= nr_sequencia_p);
 
if (vl_pacote_w	= 0) and (vl_honorario_w	= 0) then 
	begin 
 
	select	max(obter_edicao_amb( 
				cd_estabelecimento_w, 
				cd_convenio_w, 
				cd_categoria_w, 
				dt_procedimento_w)) 
	into STRICT	cd_edicao_amb_w 
	;
 
	SELECT * FROM obter_cotacao_moeda_convenio(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, 1, dt_procedimento_w, 'P', cd_setor_atendimento_w, ie_tipo_atendimento_w, cd_medico_executor_w, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, cd_edicao_amb_w, null, null, null, vl_ch_honorarios_w, vl_ch_operacional_w, vl_filme_w) INTO STRICT vl_ch_honorarios_w, vl_ch_operacional_w, vl_filme_w;
 
	if (coalesce(vl_ch_honorarios_w::text, '') = '') then 
		vl_ch_honorarios_w	:= 1;
	end if;
	if (coalesce(vl_ch_operacional_w::text, '') = '') then 
		vl_ch_operacional_w	:= 1;
	end if;
	vl_pacote_w		:= (qt_ponto_pacote_w * vl_ch_operacional_w);
	vl_honorario_w	:= (qt_ponto_honorario_w * vl_ch_honorarios_w);
	end;
end if;
 
SELECT * FROM obter_regra_honorario(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, null, null, cd_medico_executor_w, cd_cgc_prestador_w, 'S', ie_carater_inter_sus_w, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, null, null, null, null, null, null, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_interno_w, nr_seq_exame_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
 
if (ie_calcula_honorario_w	= 'N') then 
	vl_honorario_w	:= 0;
end if;
 
if (ie_conta_honorario_w = 'S') then 
	vl_procedimento_w	:= vl_pacote_w + vl_honorario_w;
else 
	vl_procedimento_w	:= vl_pacote_w;
end if;
 
if (coalesce(cd_estrutura_conta_w::text, '') = '') then 
	begin 
	SELECT * FROM obter_estrut_conta_proc( 
		cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, cd_plano_w, cd_medico_executor_w, cd_regra_honorario_w, nr_sequencia_w, cd_setor_atendimento_w, ie_tipo_atendimento_w, cd_estabelecimento_w, cd_especialidade_medica_w, cd_categoria_w, dt_procedimento_w, null, cd_estrutura_conta_w, cd_estrutura_honor_w) INTO STRICT cd_estrutura_conta_w, cd_estrutura_honor_w;
	end;
end if;
vl_procedimento_w	:= vl_procedimento_w / 100 * pr_afaturar_w;
 
select nextval('procedimento_paciente_seq') 
into STRICT nr_seq_procedimento_w
;
 
insert into procedimento_paciente( 
	nr_atendimento, 
	dt_entrada_unidade, 
	cd_procedimento, 
	ie_origem_proced, 
	dt_procedimento, 
	dt_conta, 
	cd_setor_atendimento, 
	cd_pessoa_fisica, 
	cd_medico_executor, 
	qt_procedimento, 
	dt_atualizacao, 
	nm_usuario, 
	cd_convenio, 
	cd_categoria, 
	nr_doc_convenio, 
	tx_medico, 
	tx_procedimento, 
	tx_anestesia, 
	vl_medico, 
	vl_procedimento, 
	vl_custo_operacional, 
	vl_anestesista, 
	vl_materiais, 
	vl_auxiliares, 
	cd_acao, 
	ie_responsavel_credito, 
	ie_valor_informado, 
	ie_emite_conta, 
	ie_funcao_medico, 
	ie_guia_informada, 
	cd_situacao_glosa, 
	cd_cgc_prestador, 
	nr_interno_conta, 
	nr_sequencia, 
	nr_seq_proc_pacote, 
	dt_inicio_procedimento, 
	nm_usuario_original, 
	nr_seq_atepacu, 
	ie_proc_princ_atend, 
	cd_medico_req, 
	ie_tipo_guia, 
	ie_video, 
	ie_auditoria, 
	nr_seq_exame) 
SELECT 
	nr_atendimento, 
	dt_entrada_unidade, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	dt_procedimento - (1/86400), 
	dt_conta, 
	cd_setor_atendimento, 
	cd_pessoa_fisica, 
	cd_medico_executor, 
	qt_procedimento, 
	clock_timestamp(), 
	nm_usuario_p, 
	cd_convenio, 
	cd_categoria, 
	nr_doc_convenio, 
	tx_medico, 
	pr_afaturar_w, 
	tx_anestesia, 
	coalesce(vl_honorario_w,0), 
	coalesce(vl_procedimento_w,0), 
	coalesce(vl_pacote_w,0), 
	0, 
	0, 
	0, 
	cd_acao, 
	cd_regra_honorario_w, 
	'S', 
	coalesce(cd_estrutura_conta_w,ie_emite_conta), 
	ie_funcao_medico, 
	ie_guia_informada, 
	cd_situacao_glosa, 
	cd_cgc_prestador, 
	nr_interno_conta, 
	nr_seq_procedimento_w, 
	nr_seq_procedimento_w, 
	dt_inicio_procedimento, 
	nm_usuario_p, 
	nr_seq_atepacu, 
	ie_proc_princ_atend, 
	cd_medico_req, 
	ie_tipo_guia, 
	ie_video, 
	ie_auditoria, 
	nr_seq_exame 
from procedimento_paciente 
where nr_sequencia = ( 
	SELECT nr_seq_procedimento 
	from atendimento_pacote 
	where nr_atendimento = nr_atendimento_p 
	 and nr_sequencia = nr_sequencia_p);
 
select max(nr_sequencia) + 1 
into STRICT nr_sequencia_w 
from atendimento_pacote 
where nr_atendimento = nr_atendimento_p;
 
 
 
insert into atendimento_pacote( 
	nr_atendimento, 
	nr_sequencia, 
	nr_seq_pacote, 
	cd_convenio, 
	dt_atualizacao, 
	nm_usuario, 
	pr_afaturar, 
	ie_tipo_acomod, 
	qt_dias_pacote, 
	qt_dias_hospital, 
	qt_dias_uti, 
	ie_excedente, 
	dt_inicio_pacote, 
	nr_seq_procedimento, 
	nr_seq_proc_origem, 
	dt_final_pacote, 
	ie_classificacao, 
	nr_seq_alocacao, 
	nr_seq_tipo_acomod, 
	ie_exige_gabarito, 
	ie_ratear_repasse) 
SELECT	a.nr_atendimento, 
	nr_sequencia_w, 
	a.nr_seq_pacote, 
	a.cd_convenio, 
	clock_timestamp(), 
	nm_usuario_p, 
	pr_afaturar_w, 
	a.ie_tipo_acomod, 
	qt_dias_pacote_w, 
	qt_dias_hospital_w, 
	qt_dias_uti_w, 
	ie_excedente_w, 
	dt_inicio_pacote, 
	nr_seq_procedimento_w, 
	nr_seq_proc_origem, 
	dt_final_pacote, 
	ie_classif_p, 
	nr_seq_alocacao, 
	nr_seq_tipo_acomod_w, 
	ie_exige_gabarito_w, 
	a.ie_ratear_repasse 
from	atendimento_pacote a 
where	nr_atendimento = nr_atendimento_p 
 and	nr_sequencia = nr_sequencia_p;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_pacote ( nr_atendimento_p bigint, nr_sequencia_p bigint, nr_seq_tipo_acomod_p bigint, ie_classif_p text, nm_usuario_p text) FROM PUBLIC;

