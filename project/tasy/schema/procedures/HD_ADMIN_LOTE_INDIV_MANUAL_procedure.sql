-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_admin_lote_indiv_manual ( cd_pessoa_fisica_p text, nr_seq_medic_p integer, nr_seq_marca_p integer, qt_material_p integer, nm_lote_medic_p text, dt_validade_p timestamp, nm_usuario_p text) AS $body$
DECLARE

hd_lote_seq_w		bigint;
nr_seq_medic_w		bigint;
hd_entrega_medic_seq_w	bigint;
nr_seq_dialise_w	bigint;
cd_estabelecimento_w	bigint;

BEGIN
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (coalesce(nr_seq_medic_p,0)     >  0) and (coalesce(nr_seq_marca_p,0)     >  0) and (coalesce(qt_material_p,0)          >  0) and (nm_lote_medic_p IS NOT NULL AND nm_lote_medic_p::text <> '') and (dt_validade_p IS NOT NULL AND dt_validade_p::text <> '') then

	select coalesce(wheb_usuario_pck.get_cd_estabelecimento,1)
	into STRICT   cd_estabelecimento_w
	;

	select	max(hd_obter_hemodialise_atual(cd_pessoa_fisica_p, 'A'))
	into STRICT	nr_seq_dialise_w
	;


	select 	nextval('hd_entrega_medic_seq')
	into STRICT	hd_entrega_medic_seq_w
	;

	insert 	into	hd_entrega_medic(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_entrega,
			nr_seq_medic,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_liberacao,
			cd_estabelecimento,
			ie_controlado_hosp)
		values (
			hd_entrega_medic_seq_w,
			clock_timestamp(),
			coalesce(nm_usuario_p,obter_usuario_ativo),
			clock_timestamp(),
			nr_seq_medic_p,
			clock_timestamp(),
			coalesce(nm_usuario_p,obter_usuario_ativo),
			clock_timestamp(),
			cd_estabelecimento_w,
			'N');

	select 	nextval('hd_lote_medic_ext_seq')
	into STRICT	hd_lote_seq_w
	;

	insert 	into	hd_lote_medic_ext(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_marca,
			qt_material,
			nr_seq_entrega,
			ds_lote_fornec,
			dt_vencimento)
		values (
			hd_lote_seq_w,
			clock_timestamp(),
			coalesce(nm_usuario_p,obter_usuario_ativo),
			clock_timestamp(),
			coalesce(nm_usuario_p,obter_usuario_ativo),
			nr_seq_marca_p,
			qt_material_p,
			hd_entrega_medic_seq_w,
			nm_lote_medic_p,
			clock_timestamp());





	insert 	into	hd_lote_paciente(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			cd_pessoa_fisica,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			qt_material,
			nr_seq_entrega)
		values (
			nextval('hd_lote_paciente_seq'),
			clock_timestamp(),
			coalesce(nm_usuario_p,obter_usuario_ativo),
			cd_pessoa_fisica_p,
			clock_timestamp(),
			coalesce(nm_usuario_p,obter_usuario_ativo),
			qt_material_p,
			hd_entrega_medic_seq_w
			);

	if (nr_seq_dialise_w IS NOT NULL AND nr_seq_dialise_w::text <> '') and (nr_seq_dialise_w <> '') then

		insert into	hd_dialise_med_ext(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_dialise,
				nr_seq_medic,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				qt_medicamento,
				ds_motivo_nao_util,
				nr_seq_lote,
				cd_pessoa_fisica,
				dt_validade,
				ie_controlado_hosp,
				cd_estabelecimento)
			values (
				nextval('hd_dialise_med_ext_seq'),
				clock_timestamp(),
				coalesce(nm_usuario_p,obter_usuario_ativo),
				nr_seq_dialise_w,
				nr_seq_medic_p,
				clock_timestamp(),
				coalesce(nm_usuario_p,obter_usuario_ativo),
				qt_material_p,
				null,
				hd_lote_seq_w,
				cd_pessoa_fisica_p,
				dt_validade_p,
				'N',
				cd_estabelecimento_w
				);

	else
		insert into	hd_dialise_med_ext(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_medic,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				qt_medicamento,
				ds_motivo_nao_util,
				nr_seq_lote,
				cd_pessoa_fisica,
				dt_validade,
				ie_controlado_hosp,
				cd_estabelecimento)
			values (
				nextval('hd_dialise_med_ext_seq'),
				clock_timestamp(),
				coalesce(nm_usuario_p,obter_usuario_ativo),
				nr_seq_medic_p,
				clock_timestamp(),
				coalesce(nm_usuario_p,obter_usuario_ativo),
				qt_material_p,
				null,
				hd_lote_seq_w,
				cd_pessoa_fisica_p,
				dt_validade_p,
				'N',
				cd_estabelecimento_w);

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_admin_lote_indiv_manual ( cd_pessoa_fisica_p text, nr_seq_medic_p integer, nr_seq_marca_p integer, qt_material_p integer, nm_lote_medic_p text, dt_validade_p timestamp, nm_usuario_p text) FROM PUBLIC;

