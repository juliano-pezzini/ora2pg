-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_lote_rateio_centro ( nr_seq_mes_ref_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_referencia_p timestamp) AS $body$
DECLARE



dt_referencia_w			ctb_mes_ref.dt_referencia%type;
nr_lote_contabil_w			lote_contabil.nr_lote_contabil%type;
nr_seq_regra_rateio_w		ctb_regra_rat_contabil.nr_sequencia%type;
cd_centro_origem_w		ctb_regra_rat_contabil.cd_centro_origem%type;
cd_historico_w			ctb_regra_rat_contabil.cd_historico%type;
pr_total_rateio_orig_w		ctb_regra_rat_contabil.pr_total_rateio%type;
pr_total_rateio_dest_w		ctb_regra_rat_contabil.pr_total_rateio%type;
nr_seq_calculo_w			ctb_regra_rat_contabil.nr_seq_calculo%type;
cd_centro_custo_dest_w		ctb_regra_rat_dest.cd_centro_custo_dest%type;
cd_conta_contabil_dest_w		ctb_regra_rat_dest.cd_conta_contabil_dest%type;
cd_conta_origem_w		ctb_regra_rat_orig.cd_conta_origem%type;
vl_saldo_w			ctb_saldo.vl_saldo%type;
ie_debito_credito_w			ctb_grupo_conta.ie_debito_credito%type;
cd_conta_contabil_w		ctb_saldo.cd_conta_contabil%type;
vl_rat_saldo_orig_w			ctb_saldo.vl_saldo%type;
vl_rat_saldo_dest_w		ctb_saldo.vl_saldo%type;
cd_conta_credito_w		conta_contabil.cd_conta_contabil%type;
cd_conta_debito_w			conta_contabil.cd_conta_contabil%type;
cd_classif_credito_w		conta_contabil.cd_classificacao%type;
cd_classif_debito_w		conta_contabil.cd_classificacao%type;
nr_seq_movimento_w		ctb_movimento.nr_sequencia%type;
dt_movimento_w			ctb_mes_ref.dt_referencia%type;
vl_rat_saldo_dest_rest_w		double precision;
vl_rat_saldo_dest_parc_w		double precision;
ie_atualizar_saldo_w		boolean := false;
ds_erro_w			varchar(2000);
ie_virada_lote_w			varchar(1);
nr_nivel_calc_w			bigint := -99999;
qt_reg_dest_w			bigint;
qt_reg_lot_gerados_w		bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_centro_origem,
		a.cd_historico,
		a.pr_total_rateio,
		a.nr_seq_calculo
	from	ctb_regra_rat_contabil a
	where	a.ie_regra_rat_saldo = 'C'
	and 	dt_referencia_w between  a.dt_inicio_vigencia and a.dt_final_vigencia
	and 	a.cd_estabelecimento = cd_estabelecimento_p
	and 	exists (	SELECT 	1
						from 	ctb_regra_rat_dest b
						where	b.nr_seq_regra_rateio = a.nr_sequencia  LIMIT 1)
	and 	not exists (	select 	1
					from 	ctb_movimento c,
						ctb_mes_ref d
					where 	c.nr_seq_mes_ref 	= d.nr_sequencia
					and 	c.nr_documento		= a.nr_sequencia
					and 	d.nr_sequencia		= nr_seq_mes_ref_p
					and 	c.ie_origem_documento 	= 19  LIMIT 1)
	order by nr_seq_calculo;

C02 CURSOR FOR
	SELECT 	a.vl_saldo,
			a.cd_conta_contabil
	from 	ctb_saldo a
	where	a.nr_Seq_mes_ref 	= nr_seq_mes_ref_p
	and		a.cd_estabelecimento	= cd_estabelecimento_p
	and		a.cd_centro_custo 	= cd_centro_origem_w
	and 	a.vl_saldo		<> 0
	order by a.cd_conta_contabil;

C03 CURSOR FOR
	SELECT	a.cd_centro_custo_dest,
			a.cd_conta_contabil_dest,
			a.pr_rateio,
			coalesce(b.cd_conta_origem, cd_conta_contabil_w)
	FROM ctb_regra_rat_dest a
LEFT OUTER JOIN ctb_regra_rat_orig b ON (a.nr_seq_regra_rateio = b.nr_seq_regra_rateio AND a.nr_sequencia = b.nr_seq_regra_rat_dest)
WHERE a.nr_seq_regra_rateio 	= nr_seq_regra_rateio_w   and coalesce(b.cd_conta_origem, cd_conta_contabil_w) = cd_conta_contabil_w order by 3, 1, 2;


BEGIN

select 	count(1)
into STRICT	qt_reg_lot_gerados_w
from 	ctb_regra_rat_contabil a,
		ctb_movimento c,
		ctb_mes_ref d,
		lote_contabil e
where 	a.ie_regra_rat_saldo = 'C'
and 	a.cd_estabelecimento = cd_estabelecimento_p
and 	c.nr_seq_mes_ref 		= d.nr_sequencia
and 	c.nr_documento			= a.nr_sequencia
and 	c.nr_lote_contabil		= e.nr_lote_contabil
and 	coalesce(e.dt_atualizacao_saldo::text, '') = ''
and 	c.ie_origem_documento 	= 19
and 	e.cd_estabelecimento = cd_estabelecimento_p  LIMIT 1;


if (qt_reg_lot_gerados_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(458978);
end if;

select 	a.dt_referencia
into STRICT 	dt_referencia_w
from	ctb_mes_ref a
where 	a.nr_sequencia 	= nr_seq_mes_ref_p;

dt_referencia_w			:= trunc(dt_referencia_w, 'mm');
ie_virada_lote_w		:= coalesce(obter_valor_param_usuario(923, 77, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p), 'S');
dt_movimento_w 			:= dt_referencia_p;
ie_atualizar_saldo_w 	:= false;

open C01;
loop
fetch C01 into
	nr_seq_regra_rateio_w,
	cd_centro_origem_w,
	cd_historico_w,
	pr_total_rateio_orig_w,
	nr_seq_calculo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (coalesce(nr_nivel_calc_w, 0) <> coalesce(nr_seq_calculo_w, 0)) then
		begin

		if (ie_atualizar_saldo_w) then
			begin

			commit;

			ds_erro_w := ctb_atualizar_saldo(nr_lote_contabil_w, 'S', nm_usuario_p, ie_virada_lote_w, ds_erro_w, 'S');

			commit;

			end;
		else
			begin

			ie_atualizar_saldo_w:= true;

			end;
		end if;

		nr_lote_contabil_w := null;
		nr_lote_contabil_w := ctb_gerar_lote_digitacao(nr_seq_mes_ref_p, cd_estabelecimento_p, nm_usuario_p, nr_lote_contabil_w);

		update	lote_contabil
		set		ds_observacao	=  wheb_mensagem_pck.get_texto(458579, 'CD_NIVEL='|| nr_seq_calculo_w),
				dt_referencia	=  dt_referencia_p
		where	nr_lote_contabil	= nr_lote_contabil_w;

		end;
	end if;

	open C02;
	loop
	fetch C02 into
		vl_saldo_w,
		cd_conta_contabil_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		vl_rat_saldo_dest_parc_w	:= 0;
		vl_rat_saldo_dest_rest_w 	:= 0;
		vl_rat_saldo_dest_w			:= 0;

		vl_rat_saldo_orig_w := vl_saldo_w * dividir(pr_total_rateio_orig_w,100);



		select	count(1)
		into STRICT	qt_reg_dest_w
		FROM ctb_regra_rat_dest a
LEFT OUTER JOIN ctb_regra_rat_orig b ON (a.nr_seq_regra_rateio = b.nr_seq_regra_rateio AND a.nr_sequencia = b.nr_seq_regra_rat_dest)
WHERE a.nr_seq_regra_rateio 	= nr_seq_regra_rateio_w   and coalesce(b.cd_conta_origem, cd_conta_contabil_w) = cd_conta_contabil_w;

		open C03;
		loop
		fetch C03 into
			cd_centro_custo_dest_w,
			cd_conta_contabil_dest_w,
			pr_total_rateio_dest_w,
			cd_conta_origem_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

				ie_debito_credito_w 		:= ctb_obter_debito_credito(cd_conta_origem_w, '3', null, null, null, vl_saldo_w);
				vl_rat_saldo_dest_parc_w 	:= vl_rat_saldo_orig_w * (pr_total_rateio_dest_w / 100);
				vl_rat_saldo_dest_w			:= round((vl_rat_saldo_dest_parc_w)::numeric, 2);
				vl_rat_saldo_dest_rest_w	:= vl_rat_saldo_dest_rest_w + (vl_rat_saldo_dest_parc_w - vl_rat_saldo_dest_w);
				qt_reg_dest_w				:= qt_reg_dest_w - 1;

				if (qt_reg_dest_w = 0) then
					vl_rat_saldo_dest_w:= vl_rat_saldo_dest_w + vl_rat_saldo_dest_rest_w;
				end if;

				cd_conta_credito_w		:= null;
				cd_classif_credito_w	:= null;
				cd_conta_debito_w		:= null;
				cd_classif_debito_w		:= null;

				if (ie_debito_credito_w = 'D') then
					cd_conta_credito_w		:= cd_conta_origem_w;
					cd_classif_credito_w	:= substr(ctb_obter_classif_conta(cd_conta_credito_w,null,dt_movimento_w),1,40);
				else
					cd_conta_debito_w	:= cd_conta_origem_w;
					cd_classif_debito_w	:= substr(ctb_obter_classif_conta(cd_conta_debito_w,null,dt_movimento_w),1,40);
				end if;

				select	nextval('ctb_movimento_seq')
				into STRICT	nr_seq_movimento_w
				;

				if (abs(vl_rat_saldo_dest_w) <> 0) then
					insert into ctb_movimento(
						nr_sequencia,
						nr_lote_contabil,
						nr_seq_mes_ref,
						dt_movimento,
						vl_movimento,
						dt_atualizacao,
						nm_usuario,
						cd_historico,
						cd_conta_debito,
						cd_conta_credito,
						ds_compl_historico,
						nr_seq_agrupamento,
						ie_revisado,
						cd_estabelecimento,
						cd_classif_debito,
						cd_classif_credito,
						ie_origem_documento,
						nr_documento)
					values (	nr_seq_movimento_w,
						nr_lote_contabil_w,
						nr_seq_mes_ref_p,
						dt_movimento_w,
						abs(vl_rat_saldo_dest_w),
						clock_timestamp(),
						nm_usuario_p,
						cd_historico_w,
						cd_conta_debito_w,
						cd_conta_credito_w,
						null,
						nr_seq_regra_rateio_w,
						'N',
						cd_estabelecimento_p,
						cd_classif_debito_w,
						cd_classif_credito_w,
						19,
						nr_seq_regra_rateio_w);


					if (coalesce(cd_centro_origem_w, 0) <> 0) then
						begin

						insert into ctb_movto_centro_custo(
							nr_sequencia,
							nr_seq_movimento,
							cd_centro_custo,
							dt_atualizacao,
							nm_usuario,
							vl_movimento,
							pr_rateio)
						values (	nextval('ctb_movto_centro_custo_seq'),
							nr_seq_movimento_w,
							cd_centro_origem_w,
							clock_timestamp(),
							nm_usuario_p,
							abs(vl_rat_saldo_dest_w),
							100);

						end;
					end if;
				end if;

				if (abs(vl_rat_saldo_dest_w) <> 0) then
					begin
					select	nextval('ctb_movimento_seq')
					into STRICT	nr_seq_movimento_w
					;


					cd_conta_credito_w	:= null;
					cd_classif_credito_w:= null;
					cd_conta_debito_w	:= null;
					cd_classif_debito_w	:= null;

					if (ie_debito_credito_w = 'C') then
						cd_conta_credito_w		:= coalesce(cd_conta_contabil_dest_w, cd_conta_origem_w);
						cd_classif_credito_w	:= substr(ctb_obter_classif_conta(cd_conta_credito_w,null,dt_movimento_w),1,40);
					else
						cd_conta_debito_w	:= coalesce(cd_conta_contabil_dest_w, cd_conta_origem_w);
						cd_classif_debito_w	:= substr(ctb_obter_classif_conta(cd_conta_debito_w,null,dt_movimento_w),1,40);
					end if;

					insert into ctb_movimento(
						nr_sequencia,
						nr_lote_contabil,
						nr_seq_mes_ref,
						dt_movimento,
						vl_movimento,
						dt_atualizacao,
						nm_usuario,
						cd_historico,
						cd_conta_debito,
						cd_conta_credito,
						ds_compl_historico,
						nr_seq_agrupamento,
						ie_revisado,
						cd_estabelecimento,
						cd_classif_debito,
						cd_classif_credito,
						ie_origem_documento,
						nr_documento)
					values (	nr_seq_movimento_w,
						nr_lote_contabil_w,
						nr_seq_mes_ref_p,
						dt_movimento_w,
						abs(vl_rat_saldo_dest_w),
						clock_timestamp(),
						nm_usuario_p,
						cd_historico_w,
						cd_conta_debito_w,
						cd_conta_credito_w,
						null,
						nr_seq_regra_rateio_w,
						'N',
						cd_estabelecimento_p,
						cd_classif_debito_w,
						cd_classif_credito_w,
						19,
						nr_seq_regra_rateio_w);


					if (coalesce(cd_centro_custo_dest_w, 0) <> 0) then
						begin

						insert into ctb_movto_centro_custo(
							nr_sequencia,
							nr_seq_movimento,
							cd_centro_custo,
							dt_atualizacao,
							nm_usuario,
							vl_movimento,
							pr_rateio)
						values (	nextval('ctb_movto_centro_custo_seq'),
							nr_seq_movimento_w,
							cd_centro_custo_dest_w,
							clock_timestamp(),
							nm_usuario_p,
							abs(vl_rat_saldo_dest_w),
							100);

						end;
					end if;
					end;
				end if;
			end;
		end loop;
		close C03;

		end;
	end loop;
	close C02;

	nr_nivel_calc_w:= nr_seq_calculo_w;

	end;
end loop;
close C01;

if	((ie_atualizar_saldo_w) and (coalesce(nr_lote_contabil_w,0) > 0 )) then
	begin

	commit;

	ds_erro_w := ctb_atualizar_saldo(nr_lote_contabil_w, 'S', nm_usuario_p, ie_virada_lote_w, ds_erro_w, 'S');

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_lote_rateio_centro ( nr_seq_mes_ref_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_referencia_p timestamp) FROM PUBLIC;

