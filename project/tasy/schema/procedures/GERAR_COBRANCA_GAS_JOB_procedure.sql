-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobranca_gas_job (nm_usuario_p text) AS $body$
DECLARE


cd_setor_atendimento_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_procedimento_w		double precision;
qt_minutos_regra_w		bigint;
qt_minutos_w			bigint;
cd_convenio_w			bigint;
qt_minutos_aux_w		bigint;
nr_atendimento_w		bigint;
qt_proced_regra_w		double precision := 0;
qt_dose_w				double precision;
qt_minutos_ww			double precision;
qt_minutos_aux_ww		double precision;
cd_material_w			integer;
cd_local_estoque_w		smallint;
nr_seq_atepacu_w		bigint;
nr_seq_atualiza_prec_w	bigint;
ie_controle_w			bigint;
qt_lancado_w			double precision;
nr_seq_proc_interno_w	bigint;
ie_cobra_conv_w			varchar(1);
ie_sair_w				varchar(1);
ie_quant_proporcional_w	varchar(1);
ie_momento_geracao_w	varchar(1);
ie_divide_conta_w		varchar(1);
ie_somar_w				varchar(1);
ie_evento_w				varchar(10);
ie_arredondar_w			varchar(1);
ie_unidade_medida_w		varchar(15);
ie_unidade_med_w		varchar(15);
qt_gasoterapia_w		double precision;
qt_gas_w				double precision;
dt_referencia_w			timestamp;
dt_periodo_final_w		timestamp;
dt_inicio_w				timestamp;
dt_evento_w				timestamp;
nr_interno_conta_w		bigint;
nr_prescricao_w			bigint;
nr_seq_gas_w			bigint;
dt_fim_w				timestamp;
nr_sequencia_w			bigint;
ie_ultimo_evento_w		varchar(10);
dt_ultimo_evento_w		timestamp;
qt_minuto_tolerancia_w	double precision;
ie_quant_validade_w		varchar(1);
nr_horas_validade_w		integer;
cd_setor_atend_w		bigint;
cd_setor_conta_w	regra_cobranca_gas.cd_setor_conta%type;
ie_regra_setor_w		varchar(1);
dt_param_w				timestamp;
dt_ultima_cobranca_w	timestamp;
ie_respiracao_w			regra_cobranca_gas.ie_respiracao%type;
ie_disp_resp_esp_w		regra_cobranca_gas.ie_disp_resp_esp%type;
cd_modalidade_vent_w	regra_cobranca_gas.cd_modalidade_vent%type;
ie_regra_restritiva_w	gas.ie_regra_restritiva%type;
ie_disp_resp_evento_w	prescr_gasoterapia_evento.ie_disp_resp_esp%type;
ie_ultimo_disp_resp_w	prescr_gasoterapia_evento.ie_disp_resp_esp%type;
nr_seq_equipamento_w  regra_cobranca_gas.nr_seq_equipamento%type;
nr_seq_equip_restr_w  regra_cobranca_gas.nr_seq_equipamento%type;

c00 CURSOR FOR
SELECT	a.nr_prescricao,
		a.nr_seq_gas,
		a.nr_sequencia,
		a.ie_respiracao,
		a.ie_disp_resp_esp,
		a.cd_modalidade_vent
from	prescr_medica b,
		prescr_gasoterapia a,
		atendimento_paciente c
where	a.nr_prescricao	= b.nr_prescricao
and		(b.nr_atendimento IS NOT NULL AND b.nr_atendimento::text <> '')
and		Obter_Status_Gasoterapia(a.nr_sequencia,'C') not in ('T','TE','S','P','N','SH')
and     c.nr_atendimento = b.nr_atendimento
and     coalesce(c.dt_cancelamento::text, '') = ''
and		clock_timestamp() < coalesce(dt_alta,dt_param_w)
order by a.nr_prescricao,
		a.nr_sequencia;

c01 CURSOR FOR
SELECT	cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		qt_minutos_regra,
		ie_divide_conta,
		coalesce(ie_momento_geracao, 'T'),
		ie_arredondar,
		coalesce(ie_quant_proporcional,'N'),
		coalesce(qt_minuto_tolerancia,0),
		nr_seq_proc_interno,
		coalesce(ie_quantidade_validade, 'N') ie_quant_validade,
		coalesce(cd_setor_conta,0)
from	regra_cobranca_gas
where	((cd_convenio	= cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
and		((cd_setor_atendimento	= cd_setor_atend_w) or (coalesce(cd_setor_atendimento::text, '') = ''))
and		((coalesce(ie_respiracao::text, '') = '') or (ie_respiracao = ie_respiracao_w))
and		((coalesce(ie_disp_resp_esp::text, '') = '') or (ie_disp_resp_esp = ie_disp_resp_esp_w))
and		((coalesce(cd_modalidade_vent::text, '') = '') or (cd_modalidade_vent = cd_modalidade_vent_w))
and		((coalesce(qt_minutos_partir::text, '') = '') or (qt_minutos_w >= qt_minutos_partir))
and		((coalesce(qt_minutos_ate,0)	= 0) or (coalesce(qt_minutos_ate,0)	>= qt_minutos_w))
and		nr_seq_gas	= nr_seq_gas_w
and   coalesce(nr_seq_equipamento, nr_seq_equip_restr_w) = nr_seq_equip_restr_w
order by	coalesce(cd_setor_atendimento, 99999),
			coalesce(cd_convenio, 99999),
			coalesce(ie_respiracao, 'ZZZZZ'),
			coalesce(cd_modalidade_vent, 'ZZZZZ'),
			coalesce(ie_disp_resp_esp, 'ZZZZZ'),
			coalesce(qt_minutos_partir, 99999),
			coalesce(qt_minutos_ate, 99999);

C02 CURSOR FOR
SELECT	a.cd_material,
		a.qt_dose
from	prescr_material a,
		prescr_gasoterapia b
where	a.ie_agrupador 	= 15
and		a.nr_prescricao = b.nr_prescricao
and		a.nr_seq_gasoterapia = b.nr_sequencia
and		a.nr_prescricao = nr_prescricao_w
and 	b.nr_seq_gas 	= nr_seq_gas_w;

c03 CURSOR FOR
SELECT	b.dt_evento,
		b.ie_evento,
		b.ie_unidade_medida,
		b.qt_gasoterapia,
		b.ie_disp_resp_esp,
    coalesce(b.nr_seq_equipamento, 0)
from	prescr_gasoterapia a,
		prescr_gasoterapia_evento b
where	a.nr_seq_gas	= nr_seq_gas_w
and		a.nr_sequencia	= nr_sequencia_w
and		a.nr_sequencia	= b.nr_seq_gasoterapia
and		coalesce(b.ie_evento_valido,'S') = 'S'
and		a.nr_prescricao = nr_prescricao_w
order by b.dt_evento;


BEGIN


dt_param_w	:= clock_timestamp() + interval '1 days';	
dt_fim_w 	:= clock_timestamp();

open C00;
loop
fetch C00 into
	nr_prescricao_w,
	nr_seq_gas_w,
	nr_sequencia_w,
	ie_respiracao_w,
	ie_disp_resp_esp_w,
	cd_modalidade_vent_w;
EXIT WHEN NOT FOUND; /* apply on C00 */

begin
	select	min(dt_evento)
	into STRICT	dt_inicio_w
	from	prescr_gasoterapia_evento
	where	nr_seq_gasoterapia	= nr_sequencia_w
	and	ie_evento		= 'I';

	qt_minutos_w	:= 0;
	ie_somar_w	:= 'S';
	qt_gas_w    := null;

	ie_ultimo_disp_resp_w := null;

	/*Minutos totais menos as interrompidas*/

	open C03;
	loop
	fetch C03 into
		dt_evento_w,
		ie_evento_w,
		ie_unidade_medida_w,
		qt_gasoterapia_w,
		ie_disp_resp_evento_w,
    nr_seq_equipamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */

		if (ie_evento_w = 'IN') then
			ie_somar_w	:= 'N';
		end if;
		
		if (ie_somar_w = 'S') then
			qt_minutos_w	:= qt_minutos_w + obter_min_entre_datas(dt_inicio_w, dt_evento_w, 1);
		else
			ie_somar_w	:= 'S';
		end if;

		dt_inicio_w		:= dt_evento_w;
		if (coalesce(qt_gas_w::text, '') = '') then
			ie_unidade_med_w	:= ie_unidade_medida_w;
			qt_gas_w		:= qt_gasoterapia_w;
		end if;

		if (coalesce(ie_ultimo_disp_resp_w::text, '') = '') or (ie_ultimo_disp_resp_w IS NOT NULL AND ie_ultimo_disp_resp_w::text <> '' AND ie_disp_resp_evento_w IS NOT NULL AND ie_disp_resp_evento_w::text <> '') then
			ie_ultimo_disp_resp_w := ie_disp_resp_evento_w;
		end if;

		ie_ultimo_evento_w	:= ie_evento_w;
		dt_ultimo_evento_w	:= dt_evento_w;

  if (ie_evento_w in ('R', 'I')) then
    nr_seq_equip_restr_w := nr_seq_equipamento_w;
  end if;

	end loop;
	close C03;

	if (ie_ultimo_evento_w <> 'IN') then
		qt_minutos_w	:= qt_minutos_w + obter_min_entre_datas(dt_ultimo_evento_w, clock_timestamp(), 1);
	end if;

	select	max(cd_setor_atendimento),
			max(nr_atendimento),
			max(cd_local_estoque),
			max(nr_horas_validade)
	into STRICT	cd_setor_atendimento_w,
			nr_atendimento_w,
			cd_local_estoque_w,
			nr_horas_validade_w
	from	prescr_medica
	where	nr_prescricao	= nr_prescricao_w;

/*	select	max(qt_procedimento)
	into	qt_lancado_w
	from	conta_paciente b,
		procedimento_paciente a
	where	nr_prescricao		= nr_prescricao_w
	and	a.nr_interno_conta	= b.nr_interno_conta
	--and	nr_sequencia_prescricao	= null

	and	b.nr_atendimento	= nr_atendimento_w;*/
	cd_convenio_w		:= obter_Convenio_atendimento(nr_atendimento_w);
	cd_setor_atend_w	:= obter_setor_atendimento(nr_atendimento_w);

	select	Obter_Atepacu_paciente(nr_atendimento_w, 'IAA')
	into STRICT	nr_seq_atepacu_w
	;

	qt_minutos_aux_ww := qt_minutos_w;

	select	coalesce(max(a.ie_regra_restritiva),'N')
	into STRICT	ie_regra_restritiva_w
	from	gas a
	where	a.nr_sequencia = nr_seq_gas_w;
	
	if (coalesce(ie_disp_resp_esp_w::text, '') = '' and
		(ie_ultimo_disp_resp_w IS NOT NULL AND ie_ultimo_disp_resp_w::text <> '')) then
		ie_disp_resp_esp_w := ie_ultimo_disp_resp_w;
	end if;
	
	open C01;
	loop
	fetch C01 into
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		qt_minutos_regra_w,
		ie_divide_conta_w,
		ie_momento_geracao_w,
		ie_arredondar_w,
		ie_quant_proporcional_w,
		qt_minuto_tolerancia_w,
		nr_seq_proc_interno_w,
		ie_quant_validade_w,
		cd_setor_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		ie_regra_setor_w	:= 'N';

		if (ie_momento_geracao_w = 'P') and (ie_quant_validade_w = 'S') and (nr_horas_validade_w IS NOT NULL AND nr_horas_validade_w::text <> '') then
			qt_procedimento_w	:= nr_horas_validade_w;
		end if;

		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, nr_prescricao_w, nr_atendimento_w, 0, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;

		select	sum(a.qt_procedimento),
				max(a.dt_atualizacao)
		into STRICT	qt_lancado_w,
				dt_ultima_cobranca_w
		from	conta_paciente b,
			procedimento_paciente a
		where	nr_prescricao		= nr_prescricao_w
		and	a.nr_interno_conta	= b.nr_interno_conta
		and	a.cd_procedimento	= cd_procedimento_w
		and	a.ie_origem_proced	= ie_origem_proced_w
		and	b.nr_atendimento	= nr_atendimento_w;

		begin

		if (qt_minutos_aux_ww > qt_minuto_tolerancia_w) then
			if	((ie_ultimo_evento_w = 'IN') and (dt_ultima_cobranca_w IS NOT NULL AND dt_ultima_cobranca_w::text <> '') and (dt_ultima_cobranca_w > dt_ultimo_evento_w)) then
				exit;
			end if;

			qt_minutos_w	:= qt_minutos_w;

			if (ie_arredondar_w = 'S') then
				if (qt_minutos_w > 60) then
					qt_minutos_ww	:= mod(qt_minutos_w,60);
					if (qt_minutos_ww > 0) then
						qt_minutos_w := qt_minutos_w + (60 - qt_minutos_ww);
					end if;
				elsif (qt_minutos_w < 60) then
					qt_minutos_w	:= 60;
				end if;
			end if;


			if (ie_unidade_med_w = 'lpm') and (qt_gas_w > 0) and (ie_quant_proporcional_w = 'S') then
				qt_procedimento_w	:= qt_gas_w * (qt_minutos_w - coalesce(qt_lancado_w,0));
			end if;

			if (coalesce(ie_divide_conta_w,'N') = 'N') then

				if (coalesce(qt_minutos_regra_w,0) = 0) then
					begin
					if (cd_setor_conta_w > 0)then
						ie_regra_setor_w	:= 'S';
						cd_setor_atendimento_w	:= cd_setor_conta_w;
					end if;

					CALL Gerar_Proc_Pac_Item_Prescr(nr_prescricao_w, null, null,null, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, cd_setor_atendimento_w, 1, DT_FIM_W, nm_usuario_p, null, null, null, null, nr_seq_gas_w, null, null, null, null, ie_regra_setor_w);

					open C02;
					loop
					fetch C02 into
						cd_material_w,
						qt_dose_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin
						nr_seq_atualiza_prec_w := Inserir_Material_Atend_Pac(nr_atendimento_w, null, cd_material_w, clock_timestamp(), cd_convenio_w, null, nr_seq_atepacu_w, nm_usuario_p, qt_dose_w, cd_local_estoque_w, '1', null, nr_seq_atualiza_prec_w, null, null);

						CALL atualiza_preco_material(nr_seq_atualiza_prec_w, nm_usuario_p);

						end;
					end loop;
					close C02;

					end;
				else

					qt_minutos_aux_w	:= qt_minutos_w;
					qt_proced_regra_w	:= 0;
					while(qt_minutos_aux_w > 0) loop
						qt_proced_regra_w	:= qt_proced_regra_w + qt_procedimento_w;
						qt_minutos_aux_w	:= qt_minutos_aux_w - (qt_minutos_regra_w + coalesce(qt_minuto_tolerancia_w, 0));
					end loop;

					qt_proced_regra_w := qt_proced_regra_w - coalesce(qt_lancado_w,0);
					if (qt_proced_regra_w > 0) then
						begin
						if (cd_setor_conta_w > 0)then
							ie_regra_setor_w	:= 'S';
							cd_setor_atendimento_w	:= cd_setor_conta_w;
						end if;

						CALL Gerar_Proc_Pac_Item_Prescr(nr_prescricao_w, null, null,null, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, qt_proced_regra_w, cd_setor_atendimento_w, 1, DT_FIM_W, nm_usuario_p, null, null, null, null, nr_seq_gas_w, null, null, null, null, ie_regra_setor_w);


						open C02;
						loop
						fetch C02 into
							cd_material_w,
							qt_dose_w;
						EXIT WHEN NOT FOUND; /* apply on C02 */
							begin
							nr_seq_atualiza_prec_w := Inserir_Material_Atend_Pac(nr_atendimento_w, null, cd_material_w, clock_timestamp(), cd_convenio_w, null, nr_seq_atepacu_w, nm_usuario_p, qt_dose_w, cd_local_estoque_w, '1', null, nr_seq_atualiza_prec_w, null, null);
							CALL atualiza_preco_material(nr_seq_atualiza_prec_w, nm_usuario_p);
							end;
						end loop;
						close C02;
						end;
					end if;

				end if;
			else



				if (coalesce(qt_minutos_regra_w,0) = 0) then
					begin
					if (cd_setor_conta_w > 0)then
						ie_regra_setor_w	:= 'S';
						cd_setor_atendimento_w	:= cd_setor_conta_w;
					end if;

					CALL Gerar_Proc_Pac_Item_Prescr(nr_prescricao_w, null,null, null, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, cd_setor_atendimento_w, 1,DT_FIM_W, nm_usuario_p, null, null, null, null, nr_seq_gas_w, null, null, null, null, ie_regra_setor_w);

					open C02;
					loop
					fetch C02 into
						cd_material_w,
						qt_dose_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin
						nr_seq_atualiza_prec_w := Inserir_Material_Atend_Pac(nr_atendimento_w, null, cd_material_w, clock_timestamp(), cd_convenio_w, null, nr_seq_atepacu_w, nm_usuario_p, qt_dose_w, cd_local_estoque_w, '1', null, nr_seq_atualiza_prec_w, null, null);
						CALL atualiza_preco_material(nr_seq_atualiza_prec_w, nm_usuario_p);
						end;
					end loop;
					close C02;

					end;
				else

					select	max(nr_interno_conta)
					into STRICT	nr_interno_conta_w
					from	conta_paciente
					where	nr_atendimento		= nr_atendimento_w
					and	ie_status_acerto 	= 1
					and	Obter_Tipo_Convenio(cd_convenio_parametro) <> 1
					and	DT_INICIO_W		>= dt_periodo_inicial
					and	DT_FIM_W		<= dt_periodo_final;

					if (coalesce(nr_interno_conta_w::text, '') = '') then
						select	max(nr_interno_conta)
						into STRICT	nr_interno_conta_w
						from	conta_paciente
						where	nr_atendimento		= nr_atendimento_w
						and	ie_status_acerto 	= 1
						and	DT_INICIO_W		>= dt_periodo_inicial
						and	DT_FIM_W		<= dt_periodo_final;
					end if;




					/*Verificar se possui uma conta que se encaixe em todo o periodo da gasoterapia, entao lancar nesta conta!*/

					if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then

						qt_minutos_aux_w	:= qt_minutos_w;
						qt_proced_regra_w	:= 0;
						while(qt_minutos_aux_w > 0) loop

							qt_proced_regra_w	:= qt_proced_regra_w + qt_procedimento_w;
							qt_minutos_aux_w	:= qt_minutos_aux_w - (qt_minutos_regra_w + coalesce(qt_minuto_tolerancia_w, 0));
						end loop;


						qt_proced_regra_w	:= qt_proced_regra_w - coalesce(qt_lancado_w,0);

						if (qt_proced_regra_w > 0) then

							if (cd_setor_conta_w > 0)then
								ie_regra_setor_w	:= 'S';
								cd_setor_atendimento_w	:= cd_setor_conta_w;
							end if;


							CALL Gerar_Proc_Pac_Item_Prescr(nr_prescricao_w, null, null,nr_interno_conta_w, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, qt_proced_regra_w, cd_setor_atendimento_w, 1, DT_FIM_W, nm_usuario_p, null, null, null, null, nr_seq_gas_w, null, null, null, null, ie_regra_setor_w);
							open C02;
							loop
							fetch C02 into
								cd_material_w,
								qt_dose_w;
							EXIT WHEN NOT FOUND; /* apply on C02 */
								begin
								nr_seq_atualiza_prec_w := Inserir_Material_Atend_Pac(nr_atendimento_w, nr_interno_conta_w, cd_material_w, clock_timestamp(), cd_convenio_w, null, nr_seq_atepacu_w, nm_usuario_p, qt_dose_w, cd_local_estoque_w, '1', null, nr_seq_atualiza_prec_w, null, null);
								CALL atualiza_preco_material(nr_seq_atualiza_prec_w, nm_usuario_p);
								end;
							end loop;
							close C02;

						end if;
					else

						dt_referencia_w		:= DT_INICIO_W;
						qt_minutos_aux_w	:= qt_minutos_w;
						/*Lancar um procedimento para as quantidades de acordo com os periodos da conta.*/

						select	max(nr_interno_conta),
							max(dt_periodo_final)
						into STRICT	nr_interno_conta_w,
							dt_periodo_final_w
						from	conta_paciente
						where	nr_atendimento	= nr_atendimento_w
						and	ie_status_acerto = 1
						and	Obter_Tipo_Convenio(cd_convenio_parametro) <> 1
						and	dt_referencia_w between dt_periodo_inicial and dt_periodo_final;

						if (coalesce(nr_interno_conta_w::text, '') = '') then
							select	max(nr_interno_conta),
								max(dt_periodo_final)
							into STRICT	nr_interno_conta_w,
								dt_periodo_final_w
							from	conta_paciente
							where	nr_atendimento	= nr_atendimento_w
							and	ie_status_acerto = 1
							and	dt_referencia_w between dt_periodo_inicial and dt_periodo_final;
						end if;

						ie_controle_w	:= 0;
						ie_sair_w	:= 'N';
						qt_proced_regra_w := 0;
						while	((qt_minutos_aux_w > 0) or (ie_sair_w	= 'N')) and (ie_controle_w	 < 5000) loop
							ie_controle_w	:= ie_controle_w +1;
							if (dt_referencia_w <= dt_periodo_final_w) and (qt_minutos_aux_w > 0) then
								dt_referencia_w		:= dt_referencia_w + qt_minutos_regra_w/1440;
								qt_proced_regra_w	:= qt_proced_regra_w + qt_procedimento_w;
								qt_minutos_aux_w	:= qt_minutos_aux_w - qt_minutos_regra_w;
								ie_sair_w		:= 'N';
							else
								if (qt_minutos_aux_w <= 0) then
									ie_sair_w		:= 'S';
								end if;

								qt_proced_regra_w	:= qt_proced_regra_w - coalesce(qt_lancado_w,0);

								if (qt_proced_regra_w > 0) then

									if (cd_setor_conta_w > 0)then
										ie_regra_setor_w	:= 'S';
										cd_setor_atendimento_w	:= cd_setor_conta_w;
									end if;

									CALL Gerar_Proc_Pac_Item_Prescr(nr_prescricao_w, null, null,nr_interno_conta_w, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, qt_proced_regra_w, cd_setor_atendimento_w, 1, DT_FIM_W, nm_usuario_p, null, null, null, null, nr_seq_gas_w, null, null, null, null, ie_regra_setor_w);
									qt_proced_regra_w	:= 0;
									open C02;
									loop
									fetch C02 into
										cd_material_w,
										qt_dose_w;
									EXIT WHEN NOT FOUND; /* apply on C02 */
										begin
										nr_seq_atualiza_prec_w := Inserir_Material_Atend_Pac(nr_atendimento_w, nr_interno_conta_w, cd_material_w, clock_timestamp(), cd_convenio_w, null, nr_seq_atepacu_w, nm_usuario_p, qt_dose_w, cd_local_estoque_w, '1', null, nr_seq_atualiza_prec_w, null, null);
										CALL atualiza_preco_material(nr_seq_atualiza_prec_w, nm_usuario_p);
										end;
									end loop;
									close C02;
								end if;

								select	max(nr_interno_conta),
									max(dt_periodo_final)
								into STRICT	nr_interno_conta_w,
									dt_periodo_final_w
								from	conta_paciente
								where	nr_atendimento	= nr_atendimento_w
								and	ie_status_acerto = 1
								and	Obter_Tipo_Convenio(cd_convenio_parametro) <> 1
								and	dt_referencia_w between dt_periodo_inicial and dt_periodo_final;

								if (coalesce(nr_interno_conta_w::text, '') = '') then
									select	max(nr_interno_conta),
										max(dt_periodo_final)
									into STRICT	nr_interno_conta_w,
										dt_periodo_final_w
									from	conta_paciente
									where	nr_atendimento	= nr_atendimento_w
									and	ie_status_acerto = 1
									and	dt_referencia_w between dt_periodo_inicial and dt_periodo_final;
								end if;
							end if;
						end loop;

					end if;

				end if;

			end if;
		end if;
		--end if;
		if (ie_regra_restritiva_w = 'S') then
			exit;
		end if;
		exception
		when others then
			null;
		end;

	end loop;
	close C01;


	exception
	when others then
		null;
	end;

end loop;
close C00;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobranca_gas_job (nm_usuario_p text) FROM PUBLIC;

