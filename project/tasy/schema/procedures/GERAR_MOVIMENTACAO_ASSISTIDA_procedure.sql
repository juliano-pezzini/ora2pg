-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movimentacao_assistida ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, ie_gerar_p text, cd_motivo_p bigint, ds_justificativa_p text, nm_usuario_p text, ie_retorno_p INOUT text, ds_setor_atendimento_p INOUT text) AS $body$
DECLARE


nr_sequencia_w	bigint;
cd_setor_atendimento_w integer;
cd_setor_w	integer;


BEGIN
ie_retorno_p := 'S';

if (ie_gerar_p = 'S') then
	begin
	select	max(cd_setor_atendimento)
	into STRICT	cd_setor_atendimento_w
	from	movimentacao_assistida
	where	nr_atendimento = nr_atendimento_p
	and		(dt_partida IS NOT NULL AND dt_partida::text <> '')
	and		coalesce(dt_chegada::text, '') = '';

	if (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') then
		begin
		ie_retorno_p := 'N';
		ds_setor_atendimento_p := obter_desc_setor_atend(cd_setor_atendimento_w);
		return;
		end;
	else
		cd_setor_atendimento_w := cd_setor_atendimento_p;
	end if;

	select	nextval('movimentacao_assistida_seq')
	into STRICT	nr_sequencia_w
	;

	insert into movimentacao_assistida(
			nr_sequencia,
			nr_atendimento,
			dt_partida,
			cd_setor_atendimento,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec
			)
	values (	nr_sequencia_w,
			nr_atendimento_p,
			clock_timestamp(),
			cd_setor_atendimento_p,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p);
	end;

elsif (ie_gerar_p = 'M') then
	begin
	-- Atualizar a partir da ultima movimentação da prescrição
	select	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	movimentacao_assistida
	where	nr_atendimento = nr_atendimento_p
	and		(dt_partida IS NOT NULL AND dt_partida::text <> '')
	and		coalesce(dt_chegada::text, '') = '';

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		update	movimentacao_assistida
		set		cd_motivo = cd_motivo_p,
				ds_justificativa = ds_justificativa_p,
				cd_setor_atend_chegada = cd_setor_atendimento_p,
				dt_chegada = clock_timestamp(),
				dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario
		where	nr_sequencia = nr_sequencia_w;
	else
		begin

		select	nextval('movimentacao_assistida_seq')
		into STRICT	nr_sequencia_w
		;

		insert into movimentacao_assistida(
			nr_sequencia,
			nr_atendimento,
			dt_partida,
			cd_setor_atend_chegada,
			cd_motivo,
			ds_justificativa,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec)
		values (
			nr_sequencia_w,
			nr_atendimento_p,
			clock_timestamp(),
			cd_setor_atendimento_p,
			cd_motivo_p,
			ds_justificativa_p,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p);
		end;
	end if;

	end;

else
	begin
	-- Atualizar a partir da ultima movimentação do antendimento
	select	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	movimentacao_assistida
	where	nr_atendimento = nr_atendimento_p
	and		cd_setor_atendimento = cd_setor_atendimento_p
	and		(dt_partida IS NOT NULL AND dt_partida::text <> '')
	and		coalesce(dt_chegada::text, '') = '';

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		update	movimentacao_assistida
		set		dt_chegada = clock_timestamp(),
				cd_setor_atend_chegada = cd_setor_atendimento_p,
				dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p
		where	nr_sequencia = nr_sequencia_w;
	else
		begin
		select	max(b.cd_setor_atendimento)
		into STRICT	cd_setor_w
		from 	prescr_procedimento b,
				prescr_medica a
		where 	a.nr_prescricao = b.nr_prescricao
		and		coalesce(a.dt_baixa::text, '') = ''
		and 	b.cd_setor_atendimento = cd_setor_atendimento_p
		and 	a.nr_atendimento = nr_atendimento_p;

		if (cd_setor_w IS NOT NULL AND cd_setor_w::text <> '') then
			ie_retorno_p := 'I';
		else
			ie_retorno_p := 'N';
		end if;
		end;
	end if;

	end;
end if;

commit;

cd_setor_atendimento_w := cd_setor_atendimento_p;
ds_setor_atendimento_p := obter_desc_setor_atend(cd_setor_atendimento_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movimentacao_assistida ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, ie_gerar_p text, cd_motivo_p bigint, ds_justificativa_p text, nm_usuario_p text, ie_retorno_p INOUT text, ds_setor_atendimento_p INOUT text) FROM PUBLIC;

