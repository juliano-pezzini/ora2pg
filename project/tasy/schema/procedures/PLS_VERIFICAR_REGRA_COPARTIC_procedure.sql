-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verificar_regra_copartic ( nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_retorno_p INOUT text, nr_seq_lote_p pls_contestacao_discussao.nr_seq_lote%type) AS $body$
DECLARE


nr_seq_regra_w			bigint;
qt_dias_cobranca_w		bigint;
dt_referencia_item_w		timestamp;
qt_registro_w			integer;
qt_apresentada_w		pls_conta_proc.qt_procedimento_imp%type;
qt_liberada_w			pls_conta_proc.qt_procedimento%type;
ie_copartic_contestacao_w	varchar(1);

qt_motivo_quest_w		integer;

C01 CURSOR FOR
	SELECT	a.qt_dias_cobranca
	from	pls_regra_copartic_interc	a
	where	dt_referencia_p	between	trunc(a.dt_inicio_vigencia,'dd') and fim_dia(coalesce(a.dt_fim_vigencia,dt_referencia_p));


BEGIN
ie_retorno_p := 'N';

select	max(ie_copartic_contestacao)
into STRICT	ie_copartic_contestacao_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

/* Obter se o item ja tem copartipação gerada */

if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_conta_coparticipacao
	where	nr_seq_conta_proc	= nr_seq_conta_proc_p;
else
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_conta_coparticipacao
	where	nr_seq_conta_mat	= nr_seq_conta_mat_p;
end if;

/* Verificar se ja foi gerado a coparticipação para o item */

if (qt_registro_w = 0) or (ie_copartic_contestacao_w in ('G', 'M')) then
	/* Obter a data do item */

	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		select	coalesce(dt_procedimento,dt_procedimento_imp),
			qt_procedimento_imp,
			qt_procedimento
		into STRICT	dt_referencia_item_w,
			qt_apresentada_w,
			qt_liberada_w
		from	pls_conta_proc
		where	nr_sequencia	= nr_seq_conta_proc_p;
	else
		select	coalesce(dt_atendimento,dt_atendimento_imp),
			qt_material_imp,
			qt_material
		into STRICT	dt_referencia_item_w,
			qt_apresentada_w,
			qt_liberada_w
		from	pls_conta_mat
		where	nr_sequencia	= nr_seq_conta_mat_p;
	end if;

	/* Verificar regra */

	if (coalesce(ie_copartic_contestacao_w,'X')	!= 'G') or (qt_apresentada_w	!= qt_liberada_w) then
		open C01;
		loop
		fetch C01 into
			qt_dias_cobranca_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			/* Caso a data ainda esteja no prazo da cobrança */

			if (dt_referencia_item_w >= trunc(dt_referencia_p,'dd') - qt_dias_cobranca_w) then
				ie_retorno_p := 'S';
			end if;

			end;
		end loop;
		close C01;
	end if;

	-- Se a regra for M - Somente com motivo de questionamento
	if (coalesce(ie_copartic_contestacao_w,'X')	= 'M') then

		select	sum(t.contador)
		into STRICT	qt_motivo_quest_w
		from (	SELECT	count(1) contador
			from	pls_regra_copart_mot_quest	a,
				ptu_questionamento		b,
				ptu_camara_contestacao		c,
				ptu_questionamento_codigo	d
			where	d.nr_seq_mot_questionamento	= a.nr_seq_mot_questionamento
			and 	d.nr_seq_registro		= b.nr_sequencia
			and	c.nr_sequencia			= b.nr_seq_contestacao
			and	c.nr_seq_lote_discussao		= nr_seq_lote_p
			and	b.nr_seq_conta_proc		= nr_seq_conta_proc_p
			and	a.cd_estabelecimento		= cd_estabelecimento_p
			and	coalesce(nr_seq_conta_mat_p::text, '') = '' -- não pode ter material informado
			
union all

			SELECT	count(1) contador
			from	pls_regra_copart_mot_quest	a,
				ptu_questionamento_codigo	d,
				ptu_questionamento		b,
				ptu_camara_contestacao		c
			where	d.nr_seq_mot_questionamento	= a.nr_seq_mot_questionamento
			and 	d.nr_seq_registro		= b.nr_sequencia
			and	c.nr_sequencia			= b.nr_seq_contestacao
			and	c.nr_seq_lote_discussao		= nr_seq_lote_p
			and	b.nr_seq_conta_mat		= nr_seq_conta_mat_p
			and	a.cd_estabelecimento		= cd_estabelecimento_p
			and	coalesce(nr_seq_conta_proc_p::text, '') = '' -- não pode ter procedimento informado
		) t;

		-- se tiver motivos cadastrado para o item
		if (qt_motivo_quest_w > 0) then

			ie_retorno_p := 'S';
		end if; -- possui motivo
	end if; -- fim somente com motivo de questionamento
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verificar_regra_copartic ( nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_retorno_p INOUT text, nr_seq_lote_p pls_contestacao_discussao.nr_seq_lote%type) FROM PUBLIC;

