-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE bft_insert_lab_result_item (( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, ds_resultado_p text, nm_usuario_p text, dt_coleta_p timestamp, ds_referencia_p text, ds_unidade_medida_p text, dt_resultado_p timestamp, ds_erro_p out text, ds_observacao_p text default null, nr_atendimento_p bigint default null, cd_codigo_externo_p text default null, cd_cod_system_p text default null, ds_flag_p text default null) is ds_resultado_w exame_lab_result_item.ds_resultado%type) AS $body$
DECLARE

	nr_seq_prescr_nova_w	integer;
	nr_seq_exame_w		bigint;
	nr_seq_exame_atual_w	bigint;
	nr_seq_superior_w	bigint;
	
BEGIN
	--Check if the exam was prescribed
	open C01;
	loop
	fetch C01 into
		nr_seq_exame_atual_w,
		nr_seq_superior_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select max(coalesce(nr_sequencia, null))
		into STRICT	nr_seq_prescr_nova_w
		from	prescr_procedimento
		where	nr_prescricao		= nr_prescricao_p
		  and	nr_seq_exame		= nr_seq_exame_atual_w
		  and	nr_sequencia = coalesce(nr_seq_prescr_p,nr_sequencia);

		if (coalesce(nr_seq_prescr_nova_w::text, '') = '') then

			select	max(coalesce(nr_sequencia, null))
			into STRICT	nr_seq_prescr_nova_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_p
			  and	ie_status_atend >= 30
			  and	nr_seq_exame = nr_seq_superior_w
			  and	nr_sequencia = coalesce(nr_seq_prescr_p,nr_sequencia);

			  if (coalesce(nr_seq_prescr_nova_w::text, '') = '') then

				select	max(coalesce(nr_sequencia, null))
				into STRICT	nr_seq_prescr_nova_w
				from	prescr_procedimento
				where	nr_prescricao = nr_prescricao_p
				and		nr_seq_exame = nr_seq_superior_w
				and		nr_sequencia = coalesce(nr_seq_prescr_p,nr_sequencia);

			end if;
		end if;

		if (nr_seq_prescr_nova_w IS NOT NULL AND nr_seq_prescr_nova_w::text <> '') then
			exit;
		end if;

		end;
	end loop;
	close C01;
	
	return;
	
	end;


begin


select	max(ie_formato_resultado)
into STRICT	ie_formato_resultado_w
from	exame_laboratorio el
where	coalesce(el.cd_exame_integracao, el.cd_exame) = cd_exame_p;


select	max(a.cd_material_exame)
into STRICT	cd_material_exame_w
from	prescr_procedimento a
where	nr_prescricao	= nr_prescricao_p
and	nr_sequencia 	= nr_seq_prescr_p;


begin

	select 	max(value)
	into STRICT	nls_numeric_characters_w
	from 	v$nls_parameters
	where	parameter = 'NLS_NUMERIC_CHARACTERS';
	
	ds_resultado_temp_w	:= ds_resultado_p;

	if (nls_numeric_characters_w <> '.,') and -- Avoing issues with customer outside Brasil
		(ie_formato_resultado_w in ('V','P','VP','DV') ) then
		ds_resultado_temp_w	:= replace(ds_resultado_temp_w,'.',',');
	end if;

	if (ie_formato_resultado_w	= 'V') then
		qt_resultado_w	:= (ds_resultado_temp_w)::numeric;
	elsif (ie_formato_resultado_w	= 'P') then
		pr_resultado_w	:= (ds_resultado_temp_w)::numeric;
	elsif (ie_formato_resultado_w	= 'VP') then
		qt_resultado_w	:= (ds_resultado_temp_w)::numeric;
		pr_resultado_w	:= (ds_resultado_temp_w)::numeric;
	elsif (ie_formato_resultado_w	= 'DV') then
		ds_resultado_w	:= ds_resultado_temp_w;
		begin
			qt_resultado_w	:= (ds_resultado_temp_w)::numeric;
		exception
		when others then
			null;
		end;
		
	else
		ds_resultado_w	:= ds_resultado_temp_w;
	end if;

exception
when others then
	ds_resultado_w	:= ds_resultado_p;
end;


begin

	if (ds_referencia_p IS NOT NULL AND ds_referencia_p::text <> '') and (position('-' in ds_referencia_p) > 0) then
		 lista_w	:= obter_lista_string2(ds_referencia_p,'-');
		
		 if (ie_formato_resultado_w	= 'V') then
			qt_minima_w	:= (lista_w(1))::numeric;
			qt_maxima_w	:= (lista_w(2))::numeric;
		elsif (ie_formato_resultado_w	= 'P') then
			pr_minimo_w	:= (lista_w(1))::numeric;
			pr_maximo_w	:= (lista_w(2))::numeric;
		elsif (ie_formato_resultado_w	= 'VP') then
			pr_minimo_w	:= (lista_w(1))::numeric;
			pr_maximo_w	:= (lista_w(2))::numeric;
			qt_minima_w	:= (lista_w(1))::numeric;
			qt_maxima_w	:= (lista_w(2))::numeric;
		end if;	
	elsif (position('<' in ds_referencia_p) > 0) then
		 ds_valor_w	:= trim(both replace(ds_referencia_p,'<',''));
		  if (ie_formato_resultado_w	= 'V') then
			qt_maxima_w	:= (ds_valor_w)::numeric;
		elsif (ie_formato_resultado_w	= 'P') then
			pr_maximo_w	:= (ds_valor_w)::numeric;
		elsif (ie_formato_resultado_w	= 'VP') then
			qt_maxima_w	:= (ds_valor_w)::numeric;
			pr_maximo_w	:= (ds_valor_w)::numeric;
		end if;	
	elsif (position('>' in ds_referencia_p) > 0) then
		 ds_valor_w	:= trim(both replace(ds_referencia_p,'>',''));
		  if (ie_formato_resultado_w	= 'V') then
			qt_minima_w	:= (ds_valor_w)::numeric;
		elsif (ie_formato_resultado_w	= 'P') then
			pr_minimo_w	:= (ds_valor_w)::numeric;
		elsif (ie_formato_resultado_w	= 'VP') then
			qt_minima_w	:= (ds_valor_w)::numeric;
			pr_minimo_w	:= (ds_valor_w)::numeric;
		end if;	
	end if;
	
exception
when others then
	null;
end;


select	count(1)
into STRICT	qt_prescr_w
from	prescr_procedimento
where	nr_prescricao 	= nr_prescricao_p
and	nr_sequencia	= nr_seq_prescr_p;

if (qt_prescr_w	> 0) and (is_exam_prescr()) then

	ds_erro_p 		=> ds_erro_p := atualizar_lab_result_item(	nr_prescricao_p		=> nr_prescricao_p, nr_seq_prescr_p 	=> nr_seq_prescr_p, cd_exame_p 		=> cd_exame_p, qt_resultado_p 		=> qt_resultado_w, pr_resultado_p 		=> pr_resultado_w, ds_resultado_p 		=> ds_resultado_w, ds_observacao_p 	=> ds_observacao_p, cd_material_exame_p 	=> cd_material_exame_w, ie_reenvio_p 		=> null, nm_usuario_p 		=> nm_usuario_p, dt_coleta_p 		=> dt_coleta_p, ds_referencia_p 	=> ds_referencia_p, ds_unidade_medida_p 	=> ds_unidade_medida_p, nr_doc_lab_p 		=> null, dt_resultado_p 		=> dt_resultado_p, ds_erro_p 		=> ds_erro_p, nr_seq_exame_atualiz_p 	=> null, cd_metodo_p 		=> null, qt_minima_p 		=> qt_minima_w, qt_maxima_p 		=> qt_maxima_w, pr_minimo_p 		=> pr_minimo_w, pr_maximo_p 		=> pr_maximo_w, ds_flag_p 			=> DS_FLAG_P, cd_comment_ext_p 	=> CD_CODIGO_EXTERNO_P);
					
					
	if (ds_erro_p	is  null) then
		CALL ws_gerar_prescr_proc_compl(	nr_prescricao_p,
						nr_seq_prescr_p,
						nm_usuario_p,
						'L');
	end if;
elsif (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_atendimento_p > 0) then
	CALL atualizar_lab_result_item_ext(	nr_atendimento_p		=> nr_atendimento_p,
					cd_exame_p			=> cd_exame_p,
					dt_resultado_p			=> dt_resultado_p,
					dt_coleta_p			=> dt_coleta_p,
					ds_resultado_p			=> ds_resultado_w,
					qt_resultado_p			=> qt_resultado_w,
					pr_resultado_p			=> pr_resultado_w,
					ds_referencia_p			=> ds_referencia_p,
					ds_unidade_medida_p		=> ds_unidade_medida_p,
					ds_observacao_p			=> ds_observacao_p,
					nm_usuario_p			=> nm_usuario_p,
					qt_minima_p			=> qt_minima_w,
					qt_maxima_p			=> qt_maxima_w,
					pr_minimo_p			=> pr_minimo_w,
					pr_maximo_p			=> pr_maximo_w,
					ds_flag_p 			=> DS_FLAG_P,
					cd_comment_ext_p 	=> cd_codigo_externo_p);
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE bft_insert_lab_result_item (( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, ds_resultado_p text, nm_usuario_p text, dt_coleta_p timestamp, ds_referencia_p text, ds_unidade_medida_p text, dt_resultado_p timestamp, ds_erro_p out text, ds_observacao_p text default null, nr_atendimento_p bigint default null, cd_codigo_externo_p text default null, cd_cod_system_p text default null, ds_flag_p text default null) is ds_resultado_w exame_lab_result_item.ds_resultado%type) FROM PUBLIC;

