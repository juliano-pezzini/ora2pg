-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_justificativa (nr_sequencia_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, ds_justificativa_p text default null) AS $body$
DECLARE


ie_interno_w			varchar(2);
nr_seq_autorizacao_w		bigint;
nr_seq_estagio_w		bigint;
nr_sequencia_autor_w		bigint;
ds_indicacao_w			varchar(4000)	:= null;
ds_texto_w			varchar(32000)	:= null;
nr_seq_retorno_w		bigint;
ie_inserir_obs_w		varchar(1)	:= 'N';
cd_estabelecimento_w		smallint;
ie_atualiza_qt_dia_solic_w	varchar(1) := 'N';
qt_dia_prorrog_w		smallint;
cd_estab_autor_w		smallint;
nr_atendimento_w     atendimento_paciente.nr_atendimento%type;

BEGIN
select   coalesce(max(nr_atendimento),0)
into STRICT     nr_atendimento_w
from     paciente_justificativa
where    nr_sequencia = nr_sequencia_p;

if (nr_atendimento_w > 0) then
   select	max(nr_sequencia_autor),
      max(b.cd_estabelecimento),
      coalesce(max(a.qt_dia_prorrogacao),0)
   into STRICT	nr_sequencia_autor_w,
      cd_estabelecimento_w,
      qt_dia_prorrog_w
   from	atendimento_paciente b,
      paciente_justificativa a
   where	a.nr_atendimento	= b.nr_atendimento
   and	a.nr_sequencia 		= nr_sequencia_p;
else
   select	max(a.nr_sequencia_autor),
      max(b.cd_estabelecimento),
      coalesce(max(a.qt_dia_prorrogacao),0)
   into STRICT	nr_sequencia_autor_w,
      cd_estabelecimento_w,
      qt_dia_prorrog_w
   from	autorizacao_convenio b,
      paciente_justificativa a
   where	a.nr_sequencia_autor	= b.nr_sequencia
   and	a.nr_sequencia 		= nr_sequencia_p;
end if;
      

Update	paciente_justificativa
set 	dt_liberacao 	= clock_timestamp(),
	nm_usuario	= nm_usuario_p,
	dt_atualizacao	= clock_timestamp()
where 	nr_sequencia	= nr_sequencia_p;

begin
select	b.ie_interno,
	coalesce(a.cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento)
into STRICT	ie_interno_w,
	cd_estab_autor_w
from	estagio_autorizacao b,
	autorizacao_convenio a
where	a.nr_seq_estagio	= b.nr_sequencia
and	a.nr_sequencia		= nr_sequencia_autor_w;
exception
when no_data_found then
	ie_interno_w := null;
	cd_estab_autor_w := null;
end;



if (ie_interno_w	= '2') then
	begin
	select	min(nr_sequencia)
	into STRICT	nr_seq_estagio_w
	from	estagio_autorizacao
	where	ie_interno = '3'
	and	OBTER_EMPRESA_ESTAB(coalesce(cd_estabelecimento_w,cd_estab_autor_w)) = cd_empresa
	and	coalesce(ie_situacao,'A') = 'A';
	exception
	when no_data_found then
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(279132);
	end;

	select	coalesce(max(ie_justificativa_obs),'N'),
		coalesce(max(ie_atualiza_qt_dia_solic),'N')
	into STRICT	ie_inserir_obs_w,
		ie_atualiza_qt_dia_solic_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (nr_sequencia_autor_w IS NOT NULL AND nr_sequencia_autor_w::text <> '') then
      if (coalesce(ds_justificativa_p::text, '') = '') then
         nr_seq_retorno_w := converte_rtf_string('select ds_justificativa from paciente_justificativa where nr_sequencia = :nr_sequencia', nr_sequencia_p, nm_usuario_p, nr_seq_retorno_w);
         begin
         select	ds_texto
         into STRICT	ds_texto_w
         from	tasy_conversao_rtf
         where	nr_sequencia	= nr_seq_retorno_w;
         exception
         when others then
            ds_texto_w := null;
         end;

         ds_indicacao_w	:= substr(ds_texto_w,1,4000);
      else
         ds_indicacao_w	:= substr(ds_justificativa_p,1,4000);
      end if;
         

		if (ie_inserir_obs_w <> 'N') and (ds_indicacao_w IS NOT NULL AND ds_indicacao_w::text <> '') then

			update	autorizacao_convenio
			set	ds_observacao	= CASE WHEN ie_inserir_obs_w='S' THEN substr(CASE WHEN ds_observacao = NULL THEN ds_indicacao_w  ELSE ds_observacao || chr(13) || chr(10) || ds_indicacao_w END ,1,4000)  ELSE ds_observacao END ,
				ds_indicacao	= CASE WHEN ie_inserir_obs_w='I' THEN substr(CASE WHEN ds_indicacao = NULL THEN ds_indicacao_w  ELSE ds_indicacao || chr(13) || chr(10) || ds_indicacao_w END ,1,4000)  ELSE ds_indicacao END ,
				nm_usuario	= nm_usuario_p,
				dt_atualizacao 	= clock_timestamp()
			where	nr_sequencia	= nr_sequencia_autor_w;

		end if;

		if (ie_atualiza_qt_dia_solic_w = 'S') and (qt_dia_prorrog_w > 0) then
			begin
			update	autorizacao_convenio
			set	qt_dia_solicitado = qt_dia_prorrog_w,
				nm_usuario	= nm_usuario_p,
				dt_atualizacao 	= clock_timestamp()
			where	nr_sequencia	= nr_sequencia_autor_w;
			end;
		end if;

		CALL atualizar_autorizacao_convenio( nr_sequencia_autor_w,nm_usuario_p,nr_seq_estagio_w, 'N','N','S');

	end if;

end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_justificativa (nr_sequencia_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, ds_justificativa_p text default null) FROM PUBLIC;

