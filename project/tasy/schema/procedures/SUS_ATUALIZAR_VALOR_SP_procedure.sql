-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_atualizar_valor_sp ( nr_atendimento_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_procedimento_real_w	bigint;
cd_procedimento_w	bigint;
nr_sequencia_w		bigint;
nr_seq_partic_w		bigint;
ie_proc_especial_w	varchar(1)	:= 'N';

vl_medico_w		double precision	:= 0;
vl_sp_w			double precision	:= 0;
vl_ponto_sp_w		double precision	:= 0;
vl_proc_medico_w	double precision	:= 0;
vl_tot_medico_w		double precision	:= 0;
vl_dif_w		double precision	:= 0;
vl_total_sp_w		double precision	:= 0;

qt_ponto_medico_w	double precision	:= 0;
qt_tot_proc_w		double precision	:= 0;
qt_proc_w		double precision	:= 0;
qt_ponto_partic_w	double precision	:= 0;
qt_ato_sp_w		double precision	:= 0;
qt_ponto_sus_w		double precision	:= 0;
qt_ato_medico_w		double precision	:= 0;
vl_partic_conta_w	double precision	:= 0;
ie_arred_sp_sisaih_w	varchar(1);
dt_procedimento_w	procedimento_paciente.dt_procedimento%type;
qt_registro_w		bigint	:= 0;
ie_principal_w		varchar(1)	:= 'N';


C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.nr_seq_partic,
		b.qt_ponto_sus
	from	procedimento_participante	b,
		procedimento_paciente 		a
	where	a.nr_interno_conta		= nr_interno_conta_p
	and	a.nr_sequencia			= b.nr_sequencia
	and	a.ie_origem_proced		= 7
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	Sus_Obter_ProcConta_Rateio_Aih(a.nr_sequencia) = 'S'
	and	Sus_Obter_Indicador_Equipe(b.ie_funcao) <> 6;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.qt_ato_medico,
		a.cd_procedimento,	
		dt_procedimento
	from	sus_valor_proc_paciente	b,
		procedimento_paciente 	a
	where	a.nr_interno_conta	= nr_interno_conta_p
	and	a.nr_sequencia		= b.nr_sequencia
	and	a.ie_origem_proced	= 7
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	Sus_Obter_ProcConta_Rateio_Aih(a.nr_sequencia) = 'S'
	order by a.vl_procedimento;



BEGIN

cd_procedimento_real_w	:= Sus_Obter_Proc_Aih_Unif(nr_interno_conta_p, 2, 'C');

if (sus_validar_regra(nr_seq_regra_p => 11,cd_procedimento_p => cd_procedimento_real_w,ie_origem_proced_p => 7,dt_competencia_p => null) > 0) then
	ie_proc_especial_w	:= 'S';
end if;

select	coalesce(max(ie_arred_sp_sisaih),'N')
into STRICT	ie_arred_sp_sisaih_w
from	conta_paciente a,
	sus_parametros_aih b
where	a.nr_interno_conta	= nr_interno_conta_p
and	b.cd_estabelecimento	= a.cd_estabelecimento;

/* Obter o valor do médico do procedimento principal da AIH - Caso seja um procedimento especial (Cirurgia Multipla, AIDS, Politraumatizado) então irá somar o valor dos procedimentos de tipo de registro PRINCIPAl */

select	coalesce(sum(coalesce(b.vl_medico_rateio,b.vl_medico)),0)
into STRICT	vl_medico_w
from	sus_valor_proc_paciente	b,
	procedimento_paciente 	a
where	a.nr_interno_conta	= nr_interno_conta_p
and	a.nr_sequencia		= b.nr_sequencia
and	a.ie_origem_proced	= 7
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	((ie_proc_especial_w = 'N' AND a.cd_procedimento = cd_procedimento_real_w) or
	((ie_proc_especial_w = 'S') and (Sus_Obter_TipoReg_Proc(a.cd_procedimento, a.ie_origem_proced, 'C', 2) = 3)) or
	a.cd_procedimento in (802010199));

/* Obter os pontos de médicos de todos procedimentos da tabela SUS original*/

select	sum(coalesce(b.qt_ato_anestesista,0) + coalesce(b.qt_ato_medico,0)),
	count(*)
into STRICT	qt_ponto_medico_w,
	qt_tot_proc_w
from	sus_valor_proc_paciente	b,
	procedimento_paciente	a
where	a.nr_interno_conta	= nr_interno_conta_p
and	a.nr_sequencia		= b.nr_sequencia
and	a.ie_origem_proced	= 7
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	Sus_Obter_ProcConta_Rateio_Aih(b.nr_sequencia) = 'S';

/* Obter os pontos de participantes de todos procedimentos */

select	coalesce(sum(b.qt_ponto_sus),0)
into STRICT	qt_ponto_partic_w
from	procedimento_participante	b,
	procedimento_paciente		a
where	a.nr_interno_conta	= nr_interno_conta_p
and	a.nr_sequencia		= b.nr_sequencia
and	a.ie_origem_proced	= 7
and	coalesce(a.cd_motivo_exc_conta::text, '') = '';

/* Calcular o valor do ponto SP */

vl_sp_w		:= vl_medico_w;
qt_ato_sp_w	:= (qt_ponto_medico_w + qt_ponto_partic_w);

if (qt_ato_sp_w = 0) then
	vl_ponto_sp_w 	:= 0;
else
	vl_ponto_sp_w	:= trunc((vl_sp_w / qt_ato_sp_w),5);
end if;

vl_total_sp_w	:= round((vl_ponto_sp_w * qt_ato_sp_w)::numeric,2);

/* Atualizar o ponto SP na AIH */

update	sus_aih_unif
set	vl_ponto_sp		= vl_ponto_sp_w,
	qt_ponto_sp		= qt_ato_sp_w,
	vl_tot_sp		= vl_sp_w
where	nr_atendimento		= nr_atendimento_p
and	nr_interno_conta	= nr_interno_conta_p;

/* Zerar os valores de médico dos procedimentos que participaram do cálculo do ponto */

update	procedimento_paciente
set	vl_medico 		= 0
where	nr_interno_conta	= nr_interno_conta_p
and	ie_origem_proced	= 7
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and	Sus_Obter_ProcConta_Rateio_Aih(nr_sequencia) = 'S';

/* atualizar o valor de cada médico participante (não anestesista) */

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	nr_seq_partic_w,
	qt_ponto_sus_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	
	vl_proc_medico_w	:= trunc((vl_ponto_sp_w * qt_ponto_sus_w),2);
	vl_tot_medico_w		:= vl_tot_medico_w + vl_proc_medico_w;
	
	update	procedimento_participante
	set	vl_participante	= vl_proc_medico_w,
		vl_conta	= vl_proc_medico_w,
		vl_ponto_sus	= vl_ponto_sp_w
	where	nr_sequencia 	= nr_sequencia_w
	and	nr_seq_partic 	= nr_seq_partic_w;

end loop;
close c01;

/* atualizar o valor de cada médico principal do procedimento */

open c02;
loop
fetch c02 into
	nr_sequencia_w,
	qt_ato_medico_w,
	cd_procedimento_w,
	dt_procedimento_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	BEGIN
	
	qt_proc_w		:= qt_proc_w + 1;
	vl_proc_medico_w	:= trunc((vl_ponto_sp_w * qt_ato_medico_w),2);
	vl_tot_medico_w		:= vl_tot_medico_w + vl_proc_medico_w;
	vl_dif_w		:= vl_total_sp_w - vl_tot_medico_w;
	
	if (qt_proc_w	= qt_tot_proc_w) and (vl_dif_w	<> 0) and (ie_arred_sp_sisaih_w	= 'N') then
		vl_proc_medico_w	:= vl_proc_medico_w + vl_dif_w;
	end if;

		
	if (vl_proc_medico_w < 0) then
		vl_proc_medico_w	:= 0;
	end if;

	update	sus_valor_proc_paciente
	set	vl_ponto_sp	= vl_ponto_sp_w,
		vl_ato_medico 	= vl_proc_medico_w 
	where	nr_sequencia	= nr_sequencia_w;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento = cd_procedimento_w
	and	ie_origem_proced = 7
	and	cd_registro = 3;
	
	if (qt_registro_w > 0) and (cd_procedimento_w = cd_procedimento_real_w) then
		ie_principal_w := 'S';
	end if;
	
	if	((Sus_Obter_TipoReg_Proc(cd_procedimento_w,7, 'C', 2) <> 3) and (coalesce(ie_principal_w,'N') = 'N')) and (sus_obter_se_detalhe_proc(cd_procedimento_w,7,'10008',dt_procedimento_w) > 0) then
		begin
		
		update	procedimento_paciente
		set	vl_medico 	=  (coalesce(vl_medico,0) + vl_proc_medico_w),
			vl_anestesista	= 0,
			vl_auxiliares	= 0
		where	nr_sequencia 	= nr_sequencia_w;
	
		end;
	else
		begin

		update	procedimento_paciente
		set	vl_medico 	=  vl_proc_medico_w,
			vl_anestesista	= 0,
			vl_auxiliares	= 0
		where	nr_sequencia 	= nr_sequencia_w;
		
		end;
	end if;	
	
	select	coalesce(sum(coalesce(vl_conta,0)),0)
	into STRICT	vl_partic_conta_w
	from	procedimento_participante
	where 	nr_sequencia	= nr_sequencia_w;
	
	update	procedimento_paciente
	set 	vl_procedimento	= (vl_materiais + vl_custo_operacional + vl_medico + vl_partic_conta_w)
	where 	nr_sequencia	= nr_sequencia_w;

	end;
end loop;
close c02;

CALL atualizar_valor_proc_sus(nr_interno_conta_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_atualizar_valor_sp ( nr_atendimento_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

