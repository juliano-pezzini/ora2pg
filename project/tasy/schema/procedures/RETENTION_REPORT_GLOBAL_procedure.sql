-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE retention_report_global ( patient_id_p text, ds_tables_p text, nm_usuario_p text, qt_months_to_expire_p bigint, ds_module_p text, qt_expiry_month_p text) AS $body$
DECLARE


ds_sql_ligacao_local_w 			                patient_deletion_table.ds_sql_ligacao%TYPE;
ds_comando_w 					varchar(4000);
qt_count_w   					bigint;
name_table_w 					patient_deletion_table.nm_tabela%TYPE;
cd_exp_tabela_w 				                tabela_sistema.cd_exp_tabela%TYPE;
patient_from_cursor_c02_w		                                varchar(20);
dt_atualizacao_w        		                                varchar(20);
nm_pessoa_fisica_w      		                                varchar(200);
nr_seq_modulo_w					bigint;
ds_Sep_bv_w 					varchar(50);
ds_param_w			                                varchar(4000);
qt_months_w      				                bigint;
value_w           				                bigint;
qt_months_max_w					bigint;
dt_patient_w                                                                            timestamp;
dt_one_w						timestamp;
dt_two_w						timestamp;
ds_parameters_w				                varchar(2000);
nr_seq_modulo_ww				                bigint := 0;


c01 CURSOR FOR
SELECT	DISTINCT a.nm_tabela,
       	a.ds_sql_ligacao,
        b.cd_exp_tabela,
		b.nr_seq_modulo
FROM	patient_deletion_table a,
        patient_deletion_attribute x,
		tabela_sistema b
WHERE	x.nr_seq_patient_deletion   = a.nr_sequencia
AND		b.nm_tabela  = a.nm_tabela
AND 	((obter_se_contido_char(b.nm_tabela,ds_tables_p) = 'S') OR (coalesce(ds_tables_p::text, '') = ''))
AND		((obter_se_contido(b.nr_seq_modulo,ds_module_p) = 'S') OR (coalesce(ds_module_p::text, '') = ''))
order by nr_Seq_modulo;



c02 CURSOR FOR
SELECT	DISTINCT a.cd_pessoa_fisica,
        b.nm_pessoa_fisica
FROM	atendimento_paciente a,
        pessoa_fisica b
WHERE	a.dt_entrada < dt_patient_w
AND     a.cd_pessoa_fisica = b.cd_pessoa_fisica;

TYPE c02_type                   IS TABLE OF c02%ROWTYPE;
c02_regs_w                      c02_type;

TYPE c01_type                   IS TABLE OF c01%ROWTYPE;
c01_regs_w                      c01_type;
BEGIN

if (coalesce(qt_months_to_expire_p::text, '') = '') and (qt_expiry_month_p = 'Y' ) THEN
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(1033753);
end if;


DELETE FROM data_retention_overview WHERE nm_usuario = nm_usuario_p;

ds_sep_bv_w := obter_separador_bv;

IF (patient_id_p IS NOT NULL AND patient_id_p::text <> '') THEN
    BEGIN
    OPEN c01;
    LOOP
     FETCH c01 bulk collect INTO c01_regs_w limit 5000;
		FOR i IN 1 .. c01_regs_w.COUNT
		LOOP
		name_table_w := c01_regs_w[i].nm_tabela;
		ds_sql_ligacao_local_w :=  c01_regs_w[i].ds_sql_ligacao;
		cd_exp_tabela_w :=  c01_regs_w[i].cd_exp_tabela;
		nr_seq_modulo_w :=  c01_regs_w[i].nr_seq_modulo;

		BEGIN

		SELECT	coalesce(MAX(qt_meses_retencao),0)
		INTO STRICT 	qt_months_w
		FROM	priv_regra_retencao
		WHERE	nr_seq_modulo = nr_seq_modulo_w;

		IF (qt_months_w = 0) THEN

			SELECT	coalesce(MAX(qt_meses_retencao),0)
			INTO STRICT 	qt_months_w
			FROM	priv_regra_retencao
			WHERE 	coalesce(nr_seq_modulo::text, '') = '';

		END IF;

		dt_one_w := pkg_date_utils.add_month(clock_timestamp(), -qt_months_w,0);

		IF (qt_months_w > 0) THEN

			IF (coalesce(qt_months_to_expire_p::text, '') = '') THEN

				ds_comando_w   := 'select count(*) from ' || name_table_w ||' where dt_atualizacao_nrec < :dt_one_w and ' || ds_sql_ligacao_local_w;

				qt_count_w := obter_valor_dinamico_bv(ds_comando_w, ':dt_one_w='||dt_one_w||ds_sep_bv_w||':PATIENT_ID='||patient_id_p, qt_count_w);

			ELSIF (qt_months_to_expire_p IS NOT NULL AND qt_months_to_expire_p::text <> '') THEN

				IF (qt_expiry_month_p = 'Y') THEN

					value_w	:= qt_months_w - qt_months_to_expire_p;

					dt_two_w := pkg_date_utils.add_month(clock_timestamp(), -value_w,0);

					ds_comando_w := 'select count(*) from ' || name_table_w ||' where ((dt_atualizacao_nrec BETWEEN :dt_one_w  and :dt_two_w) or (dt_atualizacao_nrec < :dt_one_w)) and' || ds_sql_ligacao_local_w;

					qt_count_w := obter_valor_dinamico_bv(ds_comando_w, ':dt_one_w='||dt_one_w||ds_sep_bv_w||':dt_two_w='||dt_two_w||ds_sep_bv_w||':PATIENT_ID='||patient_id_p, qt_count_w);
				ELSE

					value_w	:= qt_months_w - qt_months_to_expire_p;

					dt_two_w := pkg_date_utils.add_month(clock_timestamp(), -value_w,0);

					ds_comando_w := 'select count(*) from ' || name_table_w ||' where dt_atualizacao_nrec BETWEEN :dt_one_w  and :dt_two_w and ' || ds_sql_ligacao_local_w;
					ds_parameters_w := ':dt_one_w='||dt_one_w||ds_sep_bv_w||':dt_two_w='||dt_two_w||ds_sep_bv_w||':PATIENT_ID='||patient_id_p;
					qt_count_w := obter_valor_dinamico_bv(ds_comando_w, ds_parameters_w, qt_count_w);



				END IF;
			END IF;

		END IF;


		SELECT	nm_pessoa_fisica
		INTO STRICT	nm_pessoa_fisica_w
		FROM	pessoa_fisica
		WHERE	cd_pessoa_fisica = patient_id_p;

		IF (qt_count_w > 0) THEN

			INSERT INTO data_retention_overview(
										  nr_sequencia,
										  nm_usuario,
										  cd_pessoa_fisica,
										  nm_pessoa_fisica,
										  nm_tabela,
										  cd_exp_descricao,
										  qt_registro,
										  dt_ultimo_registro,
										  dt_atualizacao,
										  nr_seq_modulo)
									VALUES (
											nextval('data_retention_overview_seq') ,
											nm_usuario_p,
											patient_id_p,
											nm_pessoa_fisica_w,
											name_table_w,
											cd_exp_tabela_w,
											qt_count_w,
											clock_timestamp(),
											clock_timestamp(),
											nr_seq_modulo_w);


		END IF;

	END;
    END LOOP;

    EXIT WHEN NOT FOUND; /* apply on c01 */
    END LOOP;
    CLOSE c01;
    END;
END IF;
	COMMIT;


IF (coalesce(patient_id_p::text, '') = '') THEN

	BEGIN

		SELECT		coalesce(MAX(qt_meses_retencao),0)
		INTO STRICT 		qt_months_max_w	--123
		FROM		priv_regra_retencao;

		dt_patient_w := pkg_date_utils.add_month(clock_timestamp(),-qt_months_max_w,0); --12/04/2008 02:50:34
		OPEN c02;
		LOOP			--79
		FETCH c02 bulk collect INTO c02_regs_w limit 5000;

			FOR i IN 1 .. c02_regs_w.last
				LOOP

				patient_from_cursor_c02_w :=  c02_regs_w[i].cd_pessoa_fisica;
				nm_pessoa_fisica_w        :=  c02_regs_w[i].nm_pessoa_fisica;

					OPEN c01;
					LOOP
					FETCH c01 bulk collect INTO c01_regs_w limit 5000;

					  FOR i IN 1 .. c01_regs_w.COUNT
				        LOOP

						  name_table_w := c01_regs_w[i].nm_tabela;
						  ds_sql_ligacao_local_w :=  c01_regs_w[i].ds_sql_ligacao;
						  cd_exp_tabela_w :=  c01_regs_w[i].cd_exp_tabela;
						  nr_seq_modulo_w :=  c01_regs_w[i].nr_seq_modulo;

									BEGIN

									if (nr_seq_modulo_ww <> nr_seq_modulo_w) then

										SELECT	coalesce(MAX(qt_meses_retencao),0)
										INTO STRICT 	qt_months_w
										FROM	priv_regra_retencao
										WHERE	nr_seq_modulo = nr_seq_modulo_w;

										IF (qt_months_w = 0) THEN

											SELECT	coalesce(MAX(qt_meses_retencao),0)
											INTO STRICT 	qt_months_w
											FROM	priv_regra_retencao
											WHERE 	coalesce(nr_seq_modulo::text, '') = '';

										END IF;

										dt_one_w := pkg_date_utils.add_month(clock_timestamp(), -qt_months_w,0);

									nr_seq_modulo_ww := nr_seq_modulo_w;
									end if;


										IF (qt_months_w > 0) THEN
											IF (coalesce(qt_months_to_expire_p::text, '') = '') THEN

												ds_comando_w   := 'select count(*) from ' || name_table_w ||' where dt_atualizacao_nrec < :dt_one_w and ' || ds_sql_ligacao_local_w;
												qt_count_w := obter_valor_dinamico_bv(ds_comando_w, ':dt_one_w='||dt_one_w||ds_sep_bv_w||':PATIENT_ID='||patient_from_cursor_c02_w, qt_count_w);

											ELSIF (qt_months_to_expire_p IS NOT NULL AND qt_months_to_expire_p::text <> '') THEN
												IF (qt_expiry_month_p = 'Y') THEN

													value_w	:= qt_months_w - qt_months_to_expire_p;
													dt_two_w := pkg_date_utils.add_month(clock_timestamp(), -value_w,0);

													ds_comando_w := 'select count(*) from ' || name_table_w ||' where ((dt_atualizacao_nrec BETWEEN :dt_one_w  and :dt_two_w) or (dt_atualizacao_nrec < :dt_one_w)) and ' || ds_sql_ligacao_local_w;
													qt_count_w := obter_valor_dinamico_bv(ds_comando_w, ':dt_one_w='||dt_one_w||ds_sep_bv_w||':dt_two_w='||dt_two_w||ds_sep_bv_w||':PATIENT_ID='||patient_from_cursor_c02_w, qt_count_w);

												ELSE

													value_w	:= qt_months_w - qt_months_to_expire_p;
													dt_two_w := pkg_date_utils.add_month(clock_timestamp(), -value_w,0);
													ds_comando_w := 'select count(*) from ' || name_table_w ||' where dt_atualizacao_nrec BETWEEN :dt_one_w  and :dt_two_w and ' || ds_sql_ligacao_local_w;
													ds_parameters_w := ':dt_one_w='||dt_one_w||ds_sep_bv_w||':dt_two_w='||dt_two_w||ds_sep_bv_w||':PATIENT_ID='||patient_from_cursor_c02_w;
													qt_count_w := obter_valor_dinamico_bv(ds_comando_w, ds_parameters_w, qt_count_w);

												END IF;
											END IF;
										END IF;

										IF (qt_count_w > 0) THEN

											INSERT INTO data_retention_overview(
																	  nr_sequencia,
																	  nm_usuario,
																	  cd_pessoa_fisica,
																	  nm_pessoa_fisica,
																	  nm_tabela,
																	  cd_exp_descricao,
																	  qt_registro,
																	  dt_ultimo_registro,
																	  dt_atualizacao,
																	  nr_seq_modulo)
																	VALUES (
																	  nextval('data_retention_overview_seq') ,
																	  nm_usuario_p,
																	  patient_from_cursor_c02_w,
																	  nm_pessoa_fisica_w,
																	  name_table_w,
																	  cd_exp_tabela_w,
																	  qt_count_w,
																	  clock_timestamp(),
																	  clock_timestamp(),
																	  nr_seq_modulo_w);



										END IF;

									END;
                                   END LOOP;

                                  EXIT WHEN NOT FOUND; /* apply on c01 */
								END LOOP;
					CLOSE c01;

				END LOOP;

				EXIT WHEN NOT FOUND; /* apply on c02 */
			END LOOP;

		CLOSE c02;
	END;
END IF;
COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE retention_report_global ( patient_id_p text, ds_tables_p text, nm_usuario_p text, qt_months_to_expire_p bigint, ds_module_p text, qt_expiry_month_p text) FROM PUBLIC;

