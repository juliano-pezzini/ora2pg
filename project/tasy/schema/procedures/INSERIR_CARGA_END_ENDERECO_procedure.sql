-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_carga_end_endereco (nr_seq_catalogo_p end_endereco.nr_seq_catalogo%type, ie_informacao_p end_endereco.ie_informacao%type, nm_usuario_p end_endereco.nm_usuario%type) AS $body$
DECLARE


nr_seq_superior_w	end_endereco.nr_seq_superior%type;
qt_endereco_w		bigint;
ds_exception_w 		varchar(2000) := '';
qt_reg_w			bigint	:= 0;
cd_composto_w		end_endereco.cd_composto%type;
nr_seq_tipo_bairro_w	end_endereco.nr_seq_tipo_bairro%type;
nr_seq_tipo_lograd_w	end_endereco.nr_seq_tipo_lograd%type;
cd_gkz_w postal_community_code.cd_geminde_kennziffer%type;
cd_gcd_w postal_community_code.cd_gemeinde_code%type;
ds_endereco_ww end_endereco.ds_endereco_completo%type;
nm_pais_w		pais.nm_pais%type := '';
nr_seq_pais_w		end_catalogo.nr_seq_pais%type;
nr_last_sequence_w	end_catalogo.nr_sequencia%type;	
			
c01 CURSOR FOR
SELECT	cd_endereco_catalogo,
		cd_tipo_bairro,
		cd_tipo_lograd,
		cd_postal,
		cd_sistema_anterior,
		ds_abreviacao,
		ds_endereco,
		cd_endereco_superior,
		cd_gkz,
		cd_gcd,
		ds_additional_info,
                ds_extra_info
from 	w_carga_end_endereco
where 	nm_usuario = nm_usuario_p;

c02 CURSOR FOR
SELECT	nr_sequencia
from 	end_endereco
where 	nr_sequencia > nr_last_sequence_w
and	nr_seq_catalogo = nr_seq_catalogo_p;
		
BEGIN

update	w_carga_end_endereco
set		cd_endereco_superior = replace(cd_endereco_superior,'#@',';')
where 	nm_usuario = nm_usuario_p;
commit;

begin

	if (nr_seq_catalogo_p IS NOT NULL AND nr_seq_catalogo_p::text <> '') and (ie_informacao_p IS NOT NULL AND ie_informacao_p::text <> '') then
		begin
		
		select  nextval('end_endereco_seq')
			into STRICT  nr_last_sequence_w
		;
		
		for r_c01 in c01 loop
			begin
			qt_reg_w	:= qt_reg_w + 1;
			if (r_c01.cd_endereco_catalogo IS NOT NULL AND r_c01.cd_endereco_catalogo::text <> '') then
				select	count(*)
				into STRICT	qt_endereco_w
				from	end_endereco
				where	cd_endereco_catalogo = r_c01.cd_endereco_catalogo
				and		nr_seq_catalogo		= nr_seq_catalogo_p
				and		ie_informacao		= ie_informacao_p
				and (cd_composto = r_c01.cd_endereco_superior or coalesce(r_c01.cd_endereco_superior::text, '') = '');
			
				if (qt_endereco_w > 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1055839,'CODIGO=' || r_c01.cd_endereco_catalogo);
				end if;
			end if;
			
			if (r_c01.cd_endereco_superior IS NOT NULL AND r_c01.cd_endereco_superior::text <> '') then
				select 	max(nr_sequencia)
				into STRICT	nr_seq_superior_w
				from	end_endereco
				where	cd_composto = r_c01.cd_endereco_superior
				and		nr_seq_catalogo	= nr_seq_catalogo_p
				and (ie_informacao not in ('TIPO_BAIRRO','TIPO_LOGRAD') or obtain_user_locale(nm_usuario_p) = 'es_CO');
				
				if (coalesce(nr_seq_superior_w::text, '') = '') then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1055844,'SUPERIOR=' || r_c01.cd_endereco_superior);
				end if;
			end if;
			
			if (r_c01.cd_tipo_bairro IS NOT NULL AND r_c01.cd_tipo_bairro::text <> '') then
				select 	max(nr_sequencia)
				into STRICT	nr_seq_tipo_bairro_w
				from	end_endereco
				where	cd_endereco_catalogo = r_c01.cd_tipo_bairro;
			end if;
			
			if (r_c01.cd_tipo_lograd IS NOT NULL AND r_c01.cd_tipo_lograd::text <> '') then
				select 	max(nr_sequencia)
				into STRICT	nr_seq_tipo_lograd_w
				from	end_endereco
				where	cd_endereco_catalogo = r_c01.cd_tipo_lograd;
			end if;
			
			cd_composto_w	:= r_c01.cd_endereco_catalogo;
			
			if (r_c01.cd_endereco_superior IS NOT NULL AND r_c01.cd_endereco_superior::text <> '') then
					cd_composto_w	:=	r_c01.cd_endereco_superior || ';' || r_c01.cd_endereco_catalogo;
			end if;
			
			ds_endereco_ww := r_c01.ds_endereco;
    	                if (r_c01.cd_gkz IS NOT NULL AND r_c01.cd_gkz::text <> '' AND r_c01.cd_postal IS NOT NULL AND r_c01.cd_postal::text <> '') then

                                  if (r_c01.cd_gkz = '90001')then
                                     cd_gkz_w := r_c01.cd_gkz;
                                     cd_gcd_w := r_c01.cd_gkz || r_c01.cd_postal;
                                  else
                                     cd_gkz_w := r_c01.cd_gkz;
                                     cd_gcd_w := r_c01.cd_gkz;
                                  end if;
                                  if (r_c01.ds_extra_info IS NOT NULL AND r_c01.ds_extra_info::text <> '') then
                                     ds_endereco_ww := ds_endereco_ww || ',' || r_c01.ds_extra_info;
                                  end if;
                                  if (r_c01.ds_additional_info IS NOT NULL AND r_c01.ds_additional_info::text <> '') then
                                  ds_endereco_ww := ds_endereco_ww || ',' || r_c01.ds_additional_info || ',' || 'Austria';
                                  end if;
                                  insert into postal_community_code(nr_sequencia,
								   dt_atualizacao,
                                                                   nm_usuario,
							           dt_atualizacao_nrec,
								   nm_usuario_nrec,
                                                                   cd_postal,
							           cd_gemeinde_code,
								   cd_geminde_kennziffer,
                                                                   nr_end_endereco_seq ) 
							values (nextval('end_endereco_seq'),
							           clock_timestamp(),
                                                                   nm_usuario_p,
                                                                   clock_timestamp(),
                                                                   nm_usuario_p,
                                                                   r_c01.cd_postal,
								   cd_gcd_w,
							           cd_gkz_w,
                                                                nextval('end_endereco_seq'));
                       end if;
                       if ((r_c01.cd_gkz IS NOT NULL AND r_c01.cd_gkz::text <> '') and coalesce(r_c01.cd_postal::text, '') = '') then   
                              if (r_c01.ds_abreviacao IS NOT NULL AND r_c01.ds_abreviacao::text <> '')then
                                  ds_endereco_ww := ds_endereco_ww || ',' || r_c01.ds_abreviacao;
                              end if;
                              if (r_c01.cd_tipo_lograd IS NOT NULL AND r_c01.cd_tipo_lograd::text <> '')then
                              ds_endereco_ww := ds_endereco_ww || ',' || r_c01.cd_tipo_lograd;
                              end if;
                              ds_endereco_ww := ds_endereco_ww || ',' || r_c01.cd_gkz;
				select
				max(nr_seq_pais)
				into STRICT nr_seq_pais_w
				from END_CATALOGO
				where nr_sequencia = nr_seq_catalogo_p;
							
				select
				max(nm_pais)
				into STRICT nm_pais_w
				from pais
				where nr_sequencia = nr_seq_pais_w;
                              ds_endereco_ww := ds_endereco_ww || ',' || nm_pais_w;
                              ds_endereco_ww := trim(both replace(ds_endereco_ww,'"',''));
                       end if;
			   ds_endereco_ww :=trim(both replace(ds_endereco_ww,',,',','));
			insert into end_endereco(nr_sequencia,
									nr_seq_catalogo,
									ie_informacao,
									nr_seq_superior,
									cd_endereco_catalogo,
									cd_postal,
									cd_sistema_anterior,
									ds_abreviacao,
									ds_endereco,
									ds_endereco_completo,
									dt_atualizacao,
									dt_atualizacao_nrec,
									nm_usuario,
									nm_usuario_nrec,
									cd_composto,
									nr_seq_tipo_bairro,
									nr_seq_tipo_lograd)
							values (nextval('end_endereco_seq'),
									nr_seq_catalogo_p,
									ie_informacao_p,
									nr_seq_superior_w,
									r_c01.cd_endereco_catalogo,
									r_c01.cd_postal,
									r_c01.cd_sistema_anterior,
									r_c01.ds_abreviacao,
									r_c01.ds_endereco,
									ds_endereco_ww,
									clock_timestamp(),
									clock_timestamp(),
									nm_usuario_p,
									nm_usuario_p,
									cd_composto_w,
									nr_seq_tipo_bairro_w,
									nr_seq_tipo_lograd_w);
			end;
			
			if (qt_reg_w > 1000) then
				commit;
				qt_reg_w	:= 0;
			end if;
		end loop;

		for r_c02 in c02 loop
			CALL atualizar_endereco_completo(r_c02.nr_sequencia, 'N');
		end loop;
		
		update	w_carga_end_catalogo
		set		dt_atualizacao = clock_timestamp(),
				nr_seq_catalogo = nr_seq_catalogo_p,
				ie_status_carga = 'C'
		where	nm_usuario = nm_usuario_p;
		
	end;
	end if;

exception
	when others then
	
	ds_exception_w := sqlerrm;
	ds_exception_w := get_shortened_error_msg(ds_exception_w);
	
	update	w_carga_end_catalogo
	set		dt_atualizacao = clock_timestamp(),
			nr_seq_catalogo = nr_seq_catalogo_p,
			ie_status_carga = 'E',
			ds_erro = ds_exception_w
	where	nm_usuario = nm_usuario_p;
	
	commit;
	
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_carga_end_endereco (nr_seq_catalogo_p end_endereco.nr_seq_catalogo%type, ie_informacao_p end_endereco.ie_informacao%type, nm_usuario_p end_endereco.nm_usuario%type) FROM PUBLIC;

