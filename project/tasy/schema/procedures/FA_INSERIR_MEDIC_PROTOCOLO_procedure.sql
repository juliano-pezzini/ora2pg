-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fa_inserir_medic_protocolo ( nr_seq_protocolo_p bigint, nr_seq_receita_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w		bigint;
qt_dose_w		double precision;
ie_via_aplicacao_w	varchar(15);
nr_dias_receita_w	integer;
nr_dias_receita_item_w	integer;
cd_unidade_medida_w	varchar(30);
cd_intervalo_w		varchar(7);
ie_segunda_w		varchar(1);
ie_terca_w		varchar(1);
ie_quarta_w		varchar(1);
ie_quinta_w		varchar(1);
ie_sexta_w		varchar(1);
ie_sabado_w		varchar(1);
ie_domingo_w		varchar(1);
ie_uso_continuo_w	varchar(1);
ie_se_necessario_w	varchar(1);
nr_ciclo_w		integer;
ds_texto_receita_w	text;
dt_inicio_receita_w	timestamp;
dt_validade_receita_w	timestamp;
cd_pessoa_fisica_w	varchar(10);
ie_permite_varias_rec_w	varchar(1);
nr_seq_receita_item_w	bigint;
qt_medicacao_w		smallint;

C01 CURSOR FOR

	SELECT	cd_material,
		qt_dose,
		ie_via_aplicacao,
		coalesce(nr_dias_receita,nr_dias_receita_w),
		cd_unidade_medida,
		cd_intervalo,
		ie_segunda,
		ie_terca,
		ie_quarta,
		ie_quinta,
		ie_sexta,
		ie_sabado,
		ie_domingo,
		ie_uso_continuo,
		nr_ciclo,
		ie_se_necessario,
    qt_medicacao
	from	fa_protocolo_farmacia_item
	where	nr_seq_protocolo = nr_seq_protocolo_p;


BEGIN

ie_permite_varias_rec_w	:= obter_valor_param_usuario(10015, 40, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);



if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') and (nr_seq_receita_p IS NOT NULL AND nr_seq_receita_p::text <> '') then

	select	dt_inicio_receita,
		nr_dias_receita,
		cd_pessoa_fisica
	into STRICT	dt_inicio_receita_w,
		nr_dias_receita_w,
		cd_pessoa_fisica_w
	from	fa_receita_farmacia
	where	nr_sequencia = nr_seq_receita_p;


	open C01;
	loop

	fetch C01 into
		cd_material_w,
		qt_dose_w,
		ie_via_aplicacao_w,
		nr_dias_receita_item_w,
		cd_unidade_medida_w,
		cd_intervalo_w,
		ie_segunda_w,
		ie_terca_w,
		ie_quarta_w,
		ie_quinta_w,
		ie_sexta_w,
		ie_sabado_w,
		ie_domingo_w,
		ie_uso_continuo_w,
		nr_ciclo_w,
		ie_se_necessario_w,
    qt_medicacao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin



		if (nr_dias_receita_item_w > nr_dias_receita_w) then
			nr_dias_receita_item_w := nr_dias_receita_w;
		end if;

		dt_validade_receita_w := dt_inicio_receita_w + nr_dias_receita_item_w - 1;

		if (obter_se_interv_agora_acm_sn(cd_intervalo_w) <> 'SN') and (dt_validade_receita_w <= dt_inicio_receita_w) then
			--gravar_log_tasy(30425,'Data de validade não pode ser menor que a data de início do medicamento ou menor que a data de início da receita. Receita: '||nr_seq_receita_p||' Medicamento: '||cd_material_w||' Protocolo: '||nr_seq_protocolo_p,nm_usuario_p);
			CALL gravar_log_tasy(30425,WHEB_MENSAGEM_PCK.get_texto(457663,'nr_seq_receita_p='|| nr_seq_receita_p ||';cd_material_w='|| cd_material_w||';nr_seq_protocolo_p='|| nr_seq_protocolo_p),nm_usuario_p);
		elsif (obtain_user_locale(wheb_usuario_pck.get_nm_usuario) <> 'en_AU') and (ie_permite_varias_rec_w = 'N') and (fa_obter_se_possui_receita(cd_material_w,cd_pessoa_fisica_w,null,dt_inicio_receita_w,null) = 'S') then
			--gravar_log_tasy(30425,'Este medicamento já esta prescrito em outras receitas. Receita: '||nr_seq_receita_p||' Medicamento: '||cd_material_w||' Protocolo: '||nr_seq_protocolo_p,nm_usuario_p);
			CALL gravar_log_tasy(30425,WHEB_MENSAGEM_PCK.get_texto(457664,'nr_seq_receita_p='|| nr_seq_receita_p ||';cd_material_w='|| cd_material_w||';nr_seq_protocolo_p='|| nr_seq_protocolo_p),nm_usuario_p);
		else
			insert into fa_receita_farmacia_item(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_receita,
				cd_material,
				qt_dose,
				ie_via_aplicacao,
				nr_dias_receita,
				cd_unidade_medida,
				cd_intervalo,
				ie_segunda,
				ie_terca,
				ie_quarta,
				ie_quinta,
				ie_sexta,
				ie_sabado,
				ie_domingo,
				ie_uso_continuo,
				nr_ciclo,
				dt_inicio_receita,
				dt_validade_receita,
				ie_se_necessario,
        qt_medicacao)
			values (	nextval('fa_receita_farmacia_item_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_receita_p,
				cd_material_w,
				qt_dose_w,
				ie_via_aplicacao_w,
				nr_dias_receita_item_w,
				cd_unidade_medida_w,
				cd_intervalo_w,
				ie_segunda_w,
				ie_terca_w,
				ie_quarta_w,
				ie_quinta_w,
				ie_sexta_w,
				ie_sabado_w,
				ie_domingo_w,
				ie_uso_continuo_w,
				nr_ciclo_w,
				dt_inicio_receita_w,
				dt_validade_receita_w,
				ie_se_necessario_w,
        qt_medicacao_w);

			select	max(nr_sequencia)
			into STRICT	nr_seq_receita_item_w
			from	fa_receita_farmacia_item;


			CALL copia_campo_long_de_para(	'fa_protocolo_farmacia_item',
							'ds_texto_receita',
							' where	nr_seq_protocolo = :nr_seq_protocolo ',
							'nr_seq_protocolo='||nr_seq_protocolo_p,
							'fa_receita_farmacia_item',
							'ds_texto_receita',
							' where	nr_sequencia = :nr_sequencia ',
							'nr_sequencia='||nr_seq_receita_item_w);
		end if;
		end;
	end loop;
	close C01;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fa_inserir_medic_protocolo ( nr_seq_protocolo_p bigint, nr_seq_receita_p bigint, nm_usuario_p text) FROM PUBLIC;

