-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_acomp_categoria (		--nr_seq_atend_serv_dia_p		number,
 nr_seq_servico_p bigint, nr_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_servico_p timestamp, ds_mensagem_p INOUT text) AS $body$
DECLARE


qt_dieta_acomp_w			smallint;
nr_seq_regra_acomp_w			bigint;
qt_regra_w				bigint;
ds_forma_consistencia_w			varchar(50);
--nr_seq_servico_w			number(10);
qt_acompanhante_w			bigint;
--nr_atendimento_w			number(10);
cd_categoria_w				varchar(10);
cd_convenio_w				integer;
cd_plano_convenio_w			varchar(10);
nr_seq_regra_w				bigint;
nr_seq_regra_atend_w			bigint;

qt_idade_menores_w		bigint := null;
qt_idade_maiores_w		bigint := null;
qt_idade_w			bigint;
nr_seq_classificacao_w		bigint;
ie_tipo_atendimento_w		smallint;

BEGIN

ds_mensagem_p := '';

ds_forma_consistencia_w := Obter_Param_Usuario(1003, 11, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ds_forma_consistencia_w);

select	(obter_idade(max(p.dt_nascimento) , clock_timestamp(), 'A'))::numeric ,
	max(nr_seq_classificacao),
	max(ie_tipo_atendimento)
into STRICT	qt_idade_w,
	nr_seq_classificacao_w,
	ie_tipo_atendimento_w
from	atendimento_paciente a,
	pessoa_fisica p
where	a.cd_pessoa_fisica 	= p.cd_pessoa_fisica
and	a.nr_atendimento	= nr_atendimento_p;

SELECT	cd_categoria,
	cd_convenio,
	cd_plano_convenio,
	coalesce(nr_seq_regra_acomp,0)
INTO STRICT	cd_categoria_w,
	cd_convenio_w,
	cd_plano_convenio_w,
	nr_seq_regra_atend_w
FROM	atend_categoria_convenio
WHERE	nr_atendimento = nr_atendimento_p
and	nr_seq_interno = OBTER_ATECACO_ATENDIMENTO(nr_atendimento_p);

SELECT  COUNT(*)
INTO STRICT	qt_acompanhante_w
FROM	nut_atend_acompanhante a,
	nut_atend_Serv_dia b
WHERE 	a.nr_seq_atend_serv_dia = b.nr_sequencia
and	b.nr_seq_servico = nr_seq_servico_p
and	b.nr_atendimento = nr_atendimento_p
and	b.dt_servico between dt_servico_p and fim_dia(dt_servico_p);

IF (ds_forma_consistencia_w = 'CCPR') THEN

	select 	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	regra_dieta_acomp
	where	cd_convenio = cd_convenio_w
	and	cd_estabelecimento = cd_estabelecimento_p
	and (cd_categoria = cd_categoria_w
	or (coalesce(cd_categoria::text, '') = '' 
	and (not exists (SELECT 1
	   		from	regra_dieta_acomp
			where	cd_convenio = cd_convenio_w
			and	cd_categoria = cd_categoria_w) 
	or	cd_plano = cd_plano_convenio_w
	or	nr_seq_classificacao = nr_seq_classificacao_w)))
	and (cd_plano = cd_plano_convenio_w 
	or (coalesce(cd_plano::text, '') = ''
	and not exists (	select	1
	   		from	regra_dieta_acomp
			where	cd_convenio = cd_convenio_w
			and	cd_plano = cd_plano_convenio_w)))
	and (nr_seq_classificacao = nr_seq_classificacao_w 
	or (coalesce(nr_seq_classificacao::text, '') = ''
	and not exists (	select	1
	   		from	regra_dieta_acomp
			where	cd_convenio = cd_convenio_w
			and	nr_seq_classificacao = nr_seq_classificacao_w)))
	and (ie_tipo_atendimento = ie_tipo_atendimento_w 
	or (coalesce(ie_tipo_atendimento::text, '') = ''
	and not exists (	select	1
	   		from	regra_dieta_acomp
			where	cd_convenio = cd_convenio_w
			and	ie_tipo_atendimento = ie_tipo_atendimento_w)));

	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
	
		SELECT	coalesce(qt_dieta_acomp,0),
			coalesce(nr_seq_regra_acomp,0),
			qt_idade_menores,
			qt_idade_maiores
		INTO STRICT	qt_dieta_acomp_w,
			nr_seq_regra_acomp_w,
			qt_idade_menores_w,
			qt_idade_maiores_w
		FROM	regra_dieta_acomp
		WHERE	nr_sequencia = nr_seq_regra_w;
		
	else
	
		SELECT	coalesce(qt_dieta_acomp,0),
			coalesce(nr_seq_regra_acomp,0),
			qt_idade_menores,
			qt_idade_maiores
		INTO STRICT	qt_dieta_acomp_w,
			nr_seq_regra_acomp_w,
			qt_idade_menores_w,
			qt_idade_maiores_w
		FROM	categoria_convenio
		WHERE	cd_convenio = cd_convenio_w
		AND	cd_categoria = cd_categoria_w;

	end if;
		
	IF (nr_seq_regra_acomp_w > 0) THEN
	
		SELECT	COUNT(*)
		INTO STRICT	qt_regra_w
		FROM	nut_regra_cons_acomp_item
		WHERE	nr_seq_regra_acomp = nr_seq_regra_acomp_w
		AND	nr_seq_servico = nr_seq_servico_p;

		IF (qt_regra_w = 0) THEN
			SELECT OBTER_TEXTO_TASY(737928, NULL) INTO STRICT ds_mensagem_p;
			--Este serviço não está liberado para os acompanhantes neste convênio.
		ELSIF (qt_dieta_acomp_w > 0) AND
			((qt_acompanhante_w = qt_dieta_acomp_w) OR (qt_acompanhante_w > qt_dieta_acomp_w)) THEN
			SELECT OBTER_TEXTO_TASY(737929, NULL) INTO STRICT ds_mensagem_p;
			--A quantidade de acompanhantes com dieta liberada para o convênio já foi atingida.
		END IF;
			
		
	END IF;
	
	if	((trim(both ds_mensagem_p) = '') or (coalesce(ds_mensagem_p::text, '') = '')) and
		not(coalesce(qt_idade_menores_w::text, '') = '') and
		not(coalesce(qt_idade_maiores_w::text, '') = '') then
	

		if (qt_idade_w > qt_idade_menores_w) and (qt_idade_w < qt_idade_maiores_w) then
			
			SELECT OBTER_TEXTO_TASY(737923, NULL) INTO STRICT ds_mensagem_p;
			--Paciente não possui idade para liberar dieta para acompanhante.
			
		end if;
		
	end if;
	

ELSIF (ds_forma_consistencia_w = 'EUP') THEN

	if (nr_seq_regra_atend_w > 0) then
	
		select	count(*)
		into STRICT	qt_regra_w
		from	nut_regra_cons_acomp_item
		where	nr_seq_regra_acomp = nr_seq_regra_atend_w
		and	nr_seq_servico = nr_seq_servico_p;
		
		if (qt_regra_w = 0) then
		
			SELECT OBTER_TEXTO_TASY(737925, NULL) INTO STRICT ds_mensagem_p;
			--Este serviço não está liberado para os acompanhantes neste atendimento.
		end if;
	
	end if;
	
	SELECT  coalesce(MAX(qt_dieta_acomp),0)
	INTO STRICT	qt_dieta_acomp_w
	FROM 	atend_categoria_convenio
	WHERE	nr_atendimento = nr_atendimento_p;

	IF (qt_dieta_acomp_w > 0) AND
		((qt_acompanhante_w = qt_dieta_acomp_w) OR (qt_acompanhante_w > qt_dieta_acomp_w)) THEN
		
		SELECT OBTER_TEXTO_TASY(737926, NULL) INTO STRICT ds_mensagem_p;
		--A quantidade de acompanhantes com dieta liberada para o atendimento já foi atingida.
	END IF;

elsif (ds_forma_consistencia_w = 'EC') then	
	
	if (nr_seq_regra_atend_w > 0) then
	
		select	count(*)
		into STRICT	qt_regra_w
		from	nut_regra_cons_acomp_item
		where	nr_seq_regra_acomp = nr_seq_regra_atend_w
		and	nr_seq_servico = nr_seq_servico_p;
		
		if (qt_regra_w = 0) then
			SELECT OBTER_TEXTO_TASY(737925, NULL) INTO STRICT ds_mensagem_p;
			--Este serviço não está liberado para os acompanhantes neste atendimento.
		end if;
	
	else
	
		select 	max(nr_sequencia)
		into STRICT	nr_seq_regra_w
		from	regra_dieta_acomp
		where	cd_convenio = cd_convenio_w
		and (cd_categoria = cd_categoria_w
		or (coalesce(cd_categoria::text, '') = '' 
		and (not exists (SELECT 1
				from	regra_dieta_acomp
				where	cd_convenio = cd_convenio_w
				and	cd_categoria = cd_categoria_w) 
		or	cd_plano = cd_plano_convenio_w
		or	nr_seq_classificacao = nr_seq_classificacao_w)))
		and (cd_plano = cd_plano_convenio_w 
		or (coalesce(cd_plano::text, '') = ''
		and not exists (	select	1
				from	regra_dieta_acomp
				where	cd_convenio = cd_convenio_w
				and	cd_plano = cd_plano_convenio_w)))
		and (nr_seq_classificacao = nr_seq_classificacao_w 
		or (coalesce(nr_seq_classificacao::text, '') = ''
		and not exists (	select	1
				from	regra_dieta_acomp
				where	cd_convenio = cd_convenio_w
				and	nr_seq_classificacao = nr_seq_classificacao_w)))
		and (ie_tipo_atendimento = ie_tipo_atendimento_w 
		or (coalesce(ie_tipo_atendimento::text, '') = ''
		and not exists (	select	1
				from	regra_dieta_acomp
				where	cd_convenio = cd_convenio_w
				and	ie_tipo_atendimento = ie_tipo_atendimento_w)));	
		
		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		
			SELECT	coalesce(nr_seq_regra_acomp,0)
			INTO STRICT	nr_seq_regra_acomp_w
			FROM	regra_dieta_acomp
			WHERE	nr_sequencia = nr_seq_regra_w;
			
		else

			SELECT	coalesce(nr_seq_regra_acomp,0)
			INTO STRICT	nr_seq_regra_acomp_w
			FROM	categoria_convenio
			WHERE	cd_convenio = cd_convenio_w
			AND	cd_categoria = cd_categoria_w;

		end if;
			
		IF (nr_seq_regra_acomp_w > 0) THEN
		
			SELECT	COUNT(*)
			INTO STRICT	qt_regra_w
			FROM	nut_regra_cons_acomp_item
			WHERE	nr_seq_regra_acomp = nr_seq_regra_acomp_w
			AND	nr_seq_servico = nr_seq_servico_p;
	
			if (qt_regra_w = 0) then
				SELECT OBTER_TEXTO_TASY(737928, NULL) INTO STRICT ds_mensagem_p;
				--Este serviço não está liberado para os acompanhantes neste convênio.
			end if;
		end if;
	
	end if;

	select  coalesce(max(qt_dieta_acomp),0)
	into STRICT	qt_dieta_acomp_w
	from 	atend_categoria_convenio
	where	nr_atendimento = nr_atendimento_p;

	if (qt_dieta_acomp_w > 0) and
		((qt_acompanhante_w = qt_dieta_acomp_w) or (qt_acompanhante_w > qt_dieta_acomp_w)) then
		SELECT OBTER_TEXTO_TASY(737926, NULL) INTO STRICT ds_mensagem_p;
		--A quantidade de acompanhantes com dieta liberada para o atendimento já foi atingida.
	end if;	
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_acomp_categoria ( nr_seq_servico_p bigint, nr_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_servico_p timestamp, ds_mensagem_p INOUT text) FROM PUBLIC;

