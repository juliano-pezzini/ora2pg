-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_taxa_sala_cirurgica (NR_ATENDIMENTO_P bigint, NR_CIRURGIA_P bigint) AS $body$
DECLARE

dt_atualizacao_w    	timestamp				:= clock_timestamp();
cd_taxa_pri_horario_w    	bigint 		:= 0;
cd_taxa_seg_horario_w    	bigint 		:= 0;
cd_taxa_adic_seg_horario_w	bigint		:= 0;
qt_min_seghr_cirurgia_w    	smallint 		:= 0;
qt_min_tolerancia_w    	smallint 		:= 0;
ie_origem_proc_pri_w    	bigint;
ie_origem_proc_seg_w    	bigint;
ie_origem_proc_seg_adic_w   	bigint;
dt_inicio_cirurgia_w		timestamp;
dt_final_cirurgia_w		timestamp;
qt_min_duracao_w		bigint		:= 0;		
ie_flag_ok       	varchar(1)  		:= 'S';
qt_min_restante_w		bigint		:= 0;		
qt_min_resto_w			bigint		:= 0;		
qt_seg_taxa_int_w		bigint		:= 0;		
cd_estabelecimento_w    	smallint 		:= 0;
cd_convenio_w    		integer 		:= 0;
cd_categoria_w    		varchar(10);
dt_entrada_unidade_w		timestamp;
cd_setor_atendimento_w    	integer 		:= 0;
nr_sequencia_w			bigint		:= 0;
nr_seq_atepacu_w		bigint		:= 0;
cd_cgc_prestador_w		varchar(14);
ie_origem_proced_cir_w		bigint;
ie_flag_min_adicional_w		varchar(1)		:= 'N';
qt_taxa_min_excede_seg_w	bigint		:= 0;
nr_seq_proc_int_pri_w		bigint;
nr_seq_proc_int_seg_w		bigint;
nr_seq_proc_int_seg_adic_w	bigint;
cd_proc_int_w			bigint;
ie_origem_proc_int_w		bigint;
cd_plano_convenio_w		varchar(10);
cd_tipo_acomodacao_w		smallint;
ie_tipo_atendimento_w		smallint;
ie_situacao_w			varchar(1);
dt_procedimento_w		timestamp;
ie_gerar_convenio_w		varchar(1);

ie_doc_convenio_w		convenio_estabelecimento.ie_doc_convenio%type;
nr_doc_convenio_w		procedimento_paciente.nr_doc_convenio%type;
nr_doc_convenio_atend_w		atend_categoria_convenio.nr_doc_convenio%type;
cd_convenio_cirurgia_w		cirurgia.cd_convenio%type;
cd_categoria_cirurgia_w		cirurgia.cd_categoria%type;


BEGIN 
 
/* Obter dados do atendimento */
 
begin 
select	cd_estabelecimento, 
	cd_convenio, 
	cd_categoria, 
	obter_plano_atendimento(nr_atendimento,'C'), 
	obter_tipo_acomod_atend(nr_atendimento,'C'), 
	ie_tipo_atendimento, 
	nr_guia_atend 
into STRICT	cd_estabelecimento_w, 
	cd_convenio_w, 
	cd_categoria_w, 
	cd_plano_convenio_w, 
	cd_tipo_acomodacao_w, 
	ie_tipo_atendimento_w, 
	nr_doc_convenio_atend_w 
from	atendimento_paciente_v 
where	nr_atendimento	= nr_atendimento_p;
exception 
   when others then 
     ie_flag_ok := 'N';
end;
 
ie_gerar_convenio_w := obter_param_usuario(900, 227, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w, ie_gerar_convenio_w);
 
begin 
select 	a.cd_setor_atendimento, 
	nr_seq_interno 
into STRICT 	cd_setor_atendimento_w, 
	nr_seq_atepacu_w 
from 	atend_paciente_unidade a, 
	cirurgia b 
where 	a.nr_atendimento	= b.nr_atendimento 
 and 	a.dt_entrada_unidade 	= b.dt_entrada_unidade 
 and 	b.nr_atendimento	= nr_atendimento_p 
 and 	b.nr_cirurgia		= nr_cirurgia_p;
exception 
   when others then 
     ie_flag_ok := 'N';
end;
 
select	max(dt_inicio_cirurgia), 
	max(cd_convenio), 
	max(cd_categoria) 
into STRICT	dt_procedimento_w, 
	cd_convenio_cirurgia_w, 
	cd_categoria_cirurgia_w 
from	cirurgia 
where	nr_cirurgia	= nr_cirurgia_p;
 
if (ie_gerar_convenio_w = 'S') then 
	cd_convenio_w	:= cd_convenio_cirurgia_w;
	cd_categoria_w	:= cd_categoria_cirurgia_w;
end if;
 
/* Obter o codigo do servico da taxa de sala cirurgica(Primeiro Horario) */
 
if (ie_flag_ok = 'S') then 
	begin 
	select	cd_taxa_servico, 
		qt_min_seghr_cirurgia, 
		coalesce(qt_min_tolerancia,0), 
		ie_origem_proced, 
		nr_seq_proc_interno 
	into STRICT	cd_taxa_pri_horario_w, 
		qt_min_seghr_cirurgia_w, 
		qt_min_tolerancia_w, 
		ie_origem_proc_pri_w, 
		nr_seq_proc_int_pri_w 
	from	convenio_taxa_servico 
	where	cd_estabelecimento	= cd_estabelecimento_w 
	and	cd_convenio		= cd_convenio_w 
	and	cd_categoria		= cd_categoria_w 
	and	ie_taxa_servico		= 3 
	and	coalesce(ie_situacao,'A')	= 'A';
	exception 
   		when others then 
     		ie_flag_ok := 'N';
	end;
	 
	RAISE NOTICE '%', ie_flag_ok;
	 
	if (coalesce(nr_seq_proc_int_pri_w,0) > 0) then 
		cd_proc_int_w		:= null;
		ie_origem_proc_int_w	:= null;
	 
		SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_int_pri_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_convenio_w, cd_setor_atendimento_w, cd_proc_int_w, ie_origem_proc_int_w, cd_setor_atendimento_w, dt_procedimento_w, cd_tipo_acomodacao_w, null, null, null, ie_tipo_atendimento_w, null, null, null) INTO STRICT cd_proc_int_w, ie_origem_proc_int_w;
			 
		if (coalesce(cd_proc_int_w,0) > 0) and (coalesce(ie_origem_proc_int_w,0) > 0) then 
			cd_taxa_pri_horario_w	:= cd_proc_int_w;
			ie_origem_proc_pri_w	:= ie_origem_proc_int_w;
		end if;
	 
	end if;
end if;
 
 
/* Obter o codigo do servico da taxa de sala cirurgica(Segundo Horario) */
 
if (ie_flag_ok = 'S') then 
	begin 
	select	cd_taxa_servico, 
		ie_origem_proced, 
		nr_seq_proc_interno 
	into STRICT	cd_taxa_seg_horario_w, 
		ie_origem_proc_seg_w, 
		nr_seq_proc_int_seg_w 
	from	convenio_taxa_servico 
	where	cd_estabelecimento	= cd_estabelecimento_w 
	and	cd_convenio		= cd_convenio_w 
	and	cd_categoria		= cd_categoria_w 
	and	ie_taxa_servico		= 4 
	and	coalesce(ie_situacao,'A')	= 'A';
	exception 
   		when others then 
     		ie_flag_ok := 'N';
	end;
	 
	if (coalesce(nr_seq_proc_int_seg_w,0) > 0) then 
		cd_proc_int_w		:= null;
		ie_origem_proc_int_w	:= null;
	 
		SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_int_seg_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_convenio_w, cd_setor_atendimento_w, cd_proc_int_w, ie_origem_proc_int_w, cd_setor_atendimento_w, dt_procedimento_w, cd_tipo_acomodacao_w, null, null, null, ie_tipo_atendimento_w, null, null, null) INTO STRICT cd_proc_int_w, ie_origem_proc_int_w;
			 
		if (coalesce(cd_proc_int_w,0) > 0) and (coalesce(ie_origem_proc_int_w,0) > 0) then 
			cd_taxa_seg_horario_w	:= cd_proc_int_w;
			ie_origem_proc_seg_w	:= ie_origem_proc_int_w;
		end if;
	 
	end if;
end if;
 
 
/* Obter o codigo do servico dos minutos excedentes da segunda hora (Excedente do Segundo Horario) */
 
if (ie_flag_ok = 'S') then 
	begin 
	select	cd_taxa_servico, 
		ie_origem_proced, 
		nr_seq_proc_interno 
	into STRICT	cd_taxa_adic_seg_horario_w, 
		ie_origem_proc_seg_adic_w, 
		nr_seq_proc_int_seg_adic_w 
	from	convenio_taxa_servico 
	where	cd_estabelecimento	= cd_estabelecimento_w 
	and	cd_convenio		= cd_convenio_w 
	and	cd_categoria		= cd_categoria_w 
	and	ie_taxa_servico		= 5 
	and	coalesce(ie_situacao,'A')	= 'A';
	exception 
   		when others then 
     		ie_flag_min_adicional_w := 'N';
	end;
	 
	if (coalesce(nr_seq_proc_int_seg_adic_w,0) > 0) then 
		cd_proc_int_w		:= null;
		ie_origem_proc_int_w	:= null;
	 
		SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_int_seg_adic_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_convenio_w, cd_setor_atendimento_w, cd_proc_int_w, ie_origem_proc_int_w, cd_setor_atendimento_w, dt_procedimento_w, cd_tipo_acomodacao_w, null, null, null, ie_tipo_atendimento_w, null, null, null) INTO STRICT cd_proc_int_w, ie_origem_proc_int_w;
			 
		if (coalesce(cd_proc_int_w,0) > 0) and (coalesce(ie_origem_proc_int_w,0) > 0) then 
			cd_taxa_adic_seg_horario_w	:= cd_proc_int_w;
			ie_origem_proc_seg_adic_w	:= ie_origem_proc_int_w;
		end if;
	 
	end if;
	 
	if (coalesce(cd_taxa_adic_seg_horario_w,0) > 0) then 
		ie_flag_min_adicional_w:= 'S';
	end if;
end if;
 
 
/* Obter dados da cirurgia */
 
if (ie_flag_ok = 'S') then 
	begin 
	select	dt_inicio_real, 
		dt_entrada_unidade, 
		coalesce(dt_termino,dt_interrupcao), 
		coalesce(nr_min_duracao_real,0), 
		ie_origem_proced 
	into STRICT	dt_inicio_cirurgia_w, 
		dt_entrada_unidade_w, 
		dt_final_cirurgia_w, 
		qt_min_duracao_w, 
		ie_origem_proced_cir_w 
	from	cirurgia 
	where	nr_cirurgia	= nr_cirurgia_p;
	exception 
   		when others then 
     	ie_flag_ok := 'N';
	end;
end if;
 
if (coalesce(ie_origem_proc_pri_w::text, '') = '') then 
	ie_origem_proc_pri_w	:= 1;
end if;
 
if (coalesce(ie_origem_proc_seg_w::text, '') = '') then 
	ie_origem_proc_seg_w	:= 1;
end if;
 
if (coalesce(ie_origem_proc_seg_adic_w::text, '') = '') then 
	ie_origem_proc_seg_adic_w	:= 1;
end if;
 
/* Excluir taxa cirurgia Primeiro Horario*/
 
if (ie_flag_ok = 'S') then 
   	begin  
   	delete 	from procedimento_paciente 
   	where  	nr_atendimento 		= nr_atendimento_p 
	and		dt_entrada_unidade 	= dt_entrada_unidade_w 
	and		cd_procedimento		= cd_taxa_pri_horario_w 
	and		dt_procedimento		= dt_inicio_cirurgia_w;
	exception 
   		when others then 
     	ie_flag_ok := 'N';
   end;
end if;
 
 
/* Excluir taxa cirurgia Segundo Horario*/
 
if (ie_flag_ok = 'S') then 
   	begin  
   	delete 	from procedimento_paciente 
   	where  	nr_atendimento 		= nr_atendimento_p 
	and		dt_entrada_unidade 	= dt_entrada_unidade_w 
	and		cd_procedimento 	= cd_taxa_seg_horario_w 
	and		dt_procedimento		= dt_inicio_cirurgia_w;
	exception 
   		when others then 
     	ie_flag_ok := 'N';
   end;
end if;
 
commit;
 
if (qt_min_duracao_w = 0) then 
   	ie_flag_ok := 'N';
end if;
 
if (ie_flag_ok = 'S') then 
	begin 
	qt_min_restante_w := (qt_min_duracao_w - 60);
	end;
end if;
 
-- Sem Taxa de min Excedentes da Segunda hora 
if (ie_flag_ok = 'S') and (ie_flag_min_adicional_w = 'N') and (qt_min_restante_w > qt_min_tolerancia_w) then 
	begin 
	 
 	qt_seg_taxa_int_w := (qt_min_restante_w / qt_min_seghr_cirurgia_w);	
 	qt_min_resto_w  := (qt_min_restante_w - (qt_min_seghr_cirurgia_w * qt_seg_taxa_int_w));
	if (qt_min_resto_w > qt_min_tolerancia_w) then 
		qt_seg_taxa_int_w := (qt_seg_taxa_int_w + 1);
	end if;
		 
	end;
end if;
 
-- Com Taxa de min Excedentes da Segunda hora 
if (ie_flag_ok = 'S') and (ie_flag_min_adicional_w = 'S') and (qt_min_restante_w > qt_min_tolerancia_w) then 
	begin 
	 
 	qt_taxa_min_excede_seg_w := mod(qt_min_restante_w, qt_min_seghr_cirurgia_w);
	qt_seg_taxa_int_w	 := trunc(qt_min_restante_w / qt_min_seghr_cirurgia_w);
		 
	end;
end if;
 
/* Fabrício em 02/10/2008 OS 111235*/
 
select 	max(a.cd_cgc) 
into STRICT	cd_cgc_prestador_w 
from 	estabelecimento a, 
	atendimento_paciente b 
where 	a.cd_estabelecimento = b.cd_estabelecimento 
and 	b.nr_atendimento = NR_ATENDIMENTO_P;
 
ie_doc_convenio_w	:= Obter_Valor_Conv_Estab(cd_convenio_w, cd_estabelecimento_w, 'IE_DOC_CONVENIO');
 
if (ie_doc_convenio_w = 'G') then 
	nr_doc_convenio_w := nr_doc_convenio_atend_w;
end if;
 
/* Gravar taxa cirurgia Primeiro Horario*/
 
if (ie_flag_ok = 'S') then 
   begin 
  	select 	nextval('procedimento_paciente_seq') 
	into STRICT 	nr_sequencia_w 
   	;
	 
   insert into procedimento_paciente(nr_sequencia,nr_atendimento, dt_entrada_unidade, cd_procedimento, dt_procedimento, qt_procedimento, 
       dt_atualizacao, nm_usuario, cd_convenio, cd_categoria, vl_procedimento, vl_medico, 
       vl_anestesista, vl_materiais, dt_acerto_conta, vl_auxiliares, vl_custo_operacional, 
       tx_medico, tx_anestesia, nr_cirurgia, nr_doc_convenio, dt_conta, 
		 cd_setor_atendimento, ie_origem_proced, nr_seq_atepacu, cd_cgc_prestador, nr_seq_proc_interno, ie_auditoria) 
   values (nr_sequencia_w,nr_atendimento_p, dt_entrada_unidade_w, cd_taxa_pri_horario_w, dt_inicio_cirurgia_w, 1, 
       dt_atualizacao_w, 'Tasy', cd_convenio_w, cd_categoria_w, 0, 0, 0, 0, 
       null, 0, 0, 0, 0, nr_cirurgia_p, nr_doc_convenio_w, 
       dt_final_cirurgia_w, cd_setor_atendimento_w, ie_origem_proc_pri_w, nr_seq_atepacu_w, cd_cgc_prestador_w, 
	   nr_seq_proc_int_pri_w, 'N');
 
	commit;
 
   CALL Atualiza_Preco_Servico(nr_sequencia_w, 
       'Tasy');
   exception 
     when others then 
        ie_flag_ok := 'N';
   end;
end if;
 
/* Gravar taxa cirurgia Segundo Horario*/
 
if (ie_flag_ok = 'S')   and (qt_seg_taxa_int_w > 0) then 
   begin 
  	select 	nextval('procedimento_paciente_seq') 
	into STRICT 		nr_sequencia_w 
   			;
  
   insert into procedimento_paciente(nr_sequencia,nr_atendimento, dt_entrada_unidade, cd_procedimento, dt_procedimento, qt_procedimento, 
       dt_atualizacao, nm_usuario, cd_convenio, cd_categoria, vl_procedimento, vl_medico, 
       vl_anestesista, vl_materiais, dt_acerto_conta, vl_auxiliares, vl_custo_operacional, 
       tx_medico, tx_anestesia, nr_cirurgia, nr_doc_convenio, dt_conta, 
		 cd_setor_atendimento, ie_origem_proced, nr_seq_atepacu, cd_cgc_prestador, nr_seq_proc_interno, ie_auditoria) 
   values (nr_sequencia_w,nr_atendimento_p, dt_entrada_unidade_w, cd_taxa_seg_horario_w, dt_inicio_cirurgia_w, qt_seg_taxa_int_w, 
		dt_atualizacao_w, 'Tasy', cd_convenio_w, cd_categoria_w, 0, 0, 0, 0, 
       null, 0, 0, 0, 0, nr_cirurgia_p, nr_doc_convenio_w, 
		 dt_final_cirurgia_w, cd_setor_atendimento_w, ie_origem_proc_seg_w, nr_seq_atepacu_w, cd_cgc_prestador_w, 
		 nr_seq_proc_int_seg_w, 'N');
 
	commit;
 
   CALL Atualiza_Preco_Servico(nr_sequencia_w, 
       'Tasy');
   exception 
     when others then 
        ie_flag_ok := 'N';
   end;
end if;
 
 
/* Gravar taxa cirurgia min excedente Segundo Horario*/
 
if (ie_flag_ok = 'S') and (ie_flag_min_adicional_w = 'S') and (qt_taxa_min_excede_seg_w > 0) then 
   begin 
  	select 	nextval('procedimento_paciente_seq') 
	into STRICT 	nr_sequencia_w 
   	;
  
   insert into procedimento_paciente(nr_sequencia,nr_atendimento, dt_entrada_unidade, cd_procedimento, dt_procedimento, qt_procedimento, 
       dt_atualizacao, nm_usuario, cd_convenio, cd_categoria, vl_procedimento, vl_medico, 
       vl_anestesista, vl_materiais, dt_acerto_conta, vl_auxiliares, vl_custo_operacional, 
       tx_medico, tx_anestesia, nr_cirurgia, nr_doc_convenio, dt_conta, 
		 cd_setor_atendimento, ie_origem_proced, nr_seq_atepacu, cd_cgc_prestador, nr_seq_proc_interno, ie_auditoria) 
   values (nr_sequencia_w,nr_atendimento_p, dt_entrada_unidade_w, cd_taxa_adic_seg_horario_w, dt_inicio_cirurgia_w, qt_taxa_min_excede_seg_w, 
		dt_atualizacao_w, 'Tasy', cd_convenio_w, cd_categoria_w, 0, 0, 0, 0, 
       null, 0, 0, 0, 0, nr_cirurgia_p, null, 
		 dt_final_cirurgia_w, cd_setor_atendimento_w, ie_origem_proc_seg_adic_w, nr_seq_atepacu_w, cd_cgc_prestador_w, 
		 nr_seq_proc_int_seg_adic_w, 'N');
 
	commit;
 
   CALL Atualiza_Preco_Servico(nr_sequencia_w, 
       'Tasy');
   exception 
     when others then 
        ie_flag_ok := 'N';
   end;
end if;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_taxa_sala_cirurgica (NR_ATENDIMENTO_P bigint, NR_CIRURGIA_P bigint) FROM PUBLIC;

