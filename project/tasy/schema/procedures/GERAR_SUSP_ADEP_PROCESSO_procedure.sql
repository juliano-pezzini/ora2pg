-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_susp_adep_processo ( nr_seq_processo_p bigint, cd_perfil_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_item_proc_w	adep_processo_item.nr_seq_processo%type;
nr_sequencia_w		prescr_mat_hor.nr_sequencia%type;
nr_seq_w			prescr_mat_hor.nr_sequencia%type;
nr_prescricao_w		prescr_mat_hor.nr_prescricao%type;
nr_seq_item_w		prescr_mat_hor.nr_seq_material%type;
nr_atendimento_w	prescr_mat_hor.nr_atendimento%type;
cd_material_w		prescr_mat_hor.cd_material%type;
ie_agrupador_w		prescr_mat_hor.ie_agrupador%type;
nr_etapa_w			adep_processo.nr_etapa%type;
nr_etapa_ww			adep_processo.nr_etapa%type;
nr_seq_solucao_w	adep_processo.nr_seq_solucao%type;

c01 CURSOR FOR 
	SELECT	nr_sequencia	 
	from	adep_processo_item 
	where	nr_seq_processo = nr_seq_processo_p;
	
c02 CURSOR FOR 
	SELECT	nr_sequencia, 
			nr_prescricao, 
			nr_seq_material, 
			nr_atendimento, 
			cd_material, 
			ie_agrupador 
	from	prescr_mat_hor 
	where	nr_seq_processo = nr_seq_processo_p;


BEGIN 
if (nr_seq_processo_p IS NOT NULL AND nr_seq_processo_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_item_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
			CALL suspender_item_adep_processo(nr_seq_item_proc_w,'S',nm_usuario_p);
			CALL gerar_evento_item_adep_proc(nr_seq_item_proc_w,1,clock_timestamp(),nm_usuario_p);
			 
		end;
	end loop;
	close C01;
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_sequencia_w, 
		nr_prescricao_w, 
		nr_seq_item_w, 
		nr_atendimento_w, 
		cd_material_w, 
		ie_agrupador_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		update	prescr_mat_hor 
		set		dt_suspensao = clock_timestamp(), 
				nm_usuario_susp = nm_usuario_p 
		where	nr_sequencia = nr_sequencia_w 
		and		coalesce(dt_fim_horario::text, '') = '';
		 
		if (ie_agrupador_w = 1) then 
		 
			select	nextval('prescr_mat_alteracao_seq') 
			into STRICT	nr_seq_w 
			;
		 
			insert into prescr_mat_alteracao( 
												nr_sequencia, 
												dt_atualizacao, 
												nm_usuario, 
												dt_atualizacao_nrec, 
												nm_usuario_nrec, 
												nr_prescricao, 
												nr_seq_prescricao, 
												nr_seq_horario, 
												dt_alteracao, 
												cd_pessoa_fisica, 
												ie_alteracao, 
												nr_seq_motivo, 
												ds_justificativa, 
												ie_agrupador, 
												ie_tipo_item, 
												nr_atendimento, 
												cd_item,																																	 
												dt_horario_acao 
												) 
											values ( 
												nr_seq_w, 
												clock_timestamp(), 
												nm_usuario_p, 
												clock_timestamp(), 
												nm_usuario_p, 
												nr_prescricao_w, 
												nr_seq_item_w,											 
												nr_sequencia_w, 
												clock_timestamp(), 
												obter_dados_usuario_opcao(nm_usuario_p,'C'), 
												5, 
												null, 
												null, 
												null, 
												'M', 
												nr_atendimento_w, 
												cd_material_w,																																												 
												clock_timestamp() 
												);
		end if;
		 
		end;
	end loop;
	close C02;
		 
	if (ie_agrupador_w = 4) then	 
	 
		select	coalesce(max(nr_etapa),0), 
				coalesce(max(nr_seq_solucao),0), 
				coalesce(max(nr_prescricao),0) 
		into STRICT	nr_etapa_w, 
				nr_seq_solucao_w, 
				nr_prescricao_w 
		from	adep_processo 
		where	nr_sequencia = nr_seq_processo_p;
		 
		nr_etapa_ww := suspender_etapa_solucao(1, nr_prescricao_w, nr_seq_solucao_w, null, 12, '', nm_usuario_p, null, nr_etapa_w, nr_etapa_w, nr_etapa_ww, null, cd_perfil_p, null);	
								 
	end if;
	 
	update	adep_processo 
	set		dt_suspensao = clock_timestamp(), 
			ie_status_processo = 'S', 
			nm_usuario_susp = nm_usuario_p 
	where	nr_sequencia = nr_seq_processo_p;
		 
end if;
 
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_susp_adep_processo ( nr_seq_processo_p bigint, cd_perfil_p bigint, nm_usuario_p text) FROM PUBLIC;

