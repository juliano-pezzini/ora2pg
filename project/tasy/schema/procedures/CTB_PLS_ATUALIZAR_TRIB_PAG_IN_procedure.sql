-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_trib_pag_in ( nr_seq_lote_p bigint, nr_seq_item_p bigint, nr_seq_atualizacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, qt_movimento_p INOUT bigint) AS $body$
DECLARE


ds_erro_w			varchar(4000);
cd_classificacao_credito_w	varchar(255);
cd_classificacao_debito_w	varchar(255);
vl_fixo_w			varchar(30);
ds_mascara_w			varchar(30);
cd_classificacao_item_w		varchar(30);
cd_conta_credito_w		varchar(20);
cd_conta_debito_w		varchar(20);
cd_conta_contabil_w		varchar(20);
cd_conta_credito_item_w		varchar(20);
cd_conta_debito_item_w		varchar(20);
cd_cgc_prestador_w		varchar(14);
ie_tipo_prestador_w		varchar(10);
cd_pf_prestador_w		varchar(10);
ie_tipo_outorgante_w		varchar(3);
ie_tipo_operacao_w		varchar(3);
ie_tipo_segurado_w		varchar(2);
ie_tipo_item_w			varchar(2);
ie_codificacao_w		varchar(2);
ie_tipo_relacao_w		varchar(2);
ie_debito_credito_w		varchar(1);
nr_seq_esquema_w		bigint;
cd_historico_padrao_w		bigint;
cd_historico_estorno_w		bigint;
cd_historico_baixa_w		bigint;
nr_seq_segurado_w		bigint;
cd_tributo_w			bigint;
nr_seq_trib_mens_w		bigint;
nr_seq_item_w			bigint;
nr_seq_trib_pag_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_tipo_prestador_w		bigint;
qt_movimento_w			bigint;
ie_origem_trib_w		smallint;
qt_registros_w			bigint;
qt_prest_pgto_w			bigint;
dt_referencia_w			timestamp;
nr_seq_pag_item_trib_w		pls_pag_item_trib.nr_sequencia%type;
nr_seq_pag_item_w		pls_pagamento_item.nr_sequencia%type;
nr_seq_evento_w			pls_evento.nr_sequencia%type;
cd_empresa_w			estabelecimento.cd_empresa%type;
cd_centro_custo_w		centro_custo.cd_centro_custo%type;
ie_tipo_evento_w		pls_evento.ie_tipo_evento%type;
dt_atualizacao_ctb_w		pls_atualizacao_contabil.dt_mes_competencia%type;

c_tributos CURSOR FOR
	SELECT	1 ie_origem_trib,
		coalesce(a.ie_tipo_relacao, '0'),
		a.nr_seq_tipo_prestador,
		a.nr_sequencia,
		d.cd_tributo,
		d.nr_sequencia,
		trunc(e.dt_mes_competencia, 'month'),
		null nr_seq_pag_item_trib,
		coalesce((	SELECT	max(f.nr_sequencia)
			from 	pls_pagamento_item 	f,
				pls_evento		e
			where 	e.nr_sequencia 	= f.nr_seq_evento
			and	f.nr_seq_pagamento = b.nr_sequencia
			and	e.ie_tipo_evento = 'P'),
			(select	max(f.nr_sequencia)
			from 	pls_pagamento_item 	f,
				pls_evento		e
			where 	e.nr_sequencia 	= f.nr_seq_evento
			and	f.nr_seq_pagamento = b.nr_sequencia)) nr_seq_pag_item,
		coalesce((	select	max(e.nr_sequencia)
			from 	pls_pagamento_item 	f,
				pls_evento		e
			where 	e.nr_sequencia 	= f.nr_seq_evento
			and	f.nr_seq_pagamento = b.nr_sequencia
			and	e.ie_tipo_evento = 'P'),
			(select	max(e.nr_sequencia)
			from 	pls_pagamento_item 	f,
				pls_evento		e
			where 	e.nr_sequencia 	= f.nr_seq_evento
			and	f.nr_seq_pagamento = b.nr_sequencia)) nr_seq_evento
	from	pls_lote_pagamento		e,
		pls_pag_prest_venc_trib		d,
		pls_pag_prest_vencimento	c,
		pls_pagamento_prestador		b,
		pls_prestador			a
	where	a.nr_sequencia	= b.nr_seq_prestador
	and	b.nr_sequencia	= c.nr_seq_pag_prestador
	and	c.nr_sequencia	= d.nr_seq_vencimento
	and	e.nr_sequencia	= b.nr_seq_lote
	and	d.ie_pago_prev	!= 'R'
	and	not exists (	select	1
				from 	pls_pag_item_trib       x
				where	d.nr_sequencia		= x.nr_seq_venc_trib)
	and	b.nr_seq_lote	= nr_seq_lote_p
	and	((d.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p::text, '') = ''))
	
union all

	select	2 ie_origem_trib,
		coalesce(a.ie_tipo_relacao, '0'),
		a.nr_seq_tipo_prestador,
		a.nr_sequencia,
		d.cd_tributo,
		d.nr_sequencia,
		trunc(g.dt_mes_competencia, 'month'),
		e.nr_sequencia nr_seq_pag_item_trib,
		e.nr_seq_pagamento nr_seq_pag_item,
		(select	max(f.nr_seq_evento)
		from 	pls_pagamento_item 	f
		where	f.nr_sequencia	= e.nr_seq_pagamento) nr_seq_evento
	from	pls_lote_pagamento		g,
		pls_pag_item_trib 		e,
		pls_pag_prest_venc_trib		d,
		pls_pag_prest_vencimento	c,
		pls_pagamento_prestador		b,
		pls_prestador			a
	where	a.nr_sequencia	= b.nr_seq_prestador
	and	b.nr_sequencia	= c.nr_seq_pag_prestador
	and	c.nr_sequencia	= d.nr_seq_vencimento
	and	d.nr_sequencia	= e.nr_seq_venc_trib
	and	g.nr_sequencia	= b.nr_seq_lote	
	and	d.ie_pago_prev	!= 'R'
	and	d.vl_imposto < 0 /*Os movimentos de devolucao de INSS sao gerados com valores zerados e devem ser buscados com tratativa especial*/
	and	b.nr_seq_lote	= nr_seq_lote_p
	and	((d.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p::text, '') = ''))
	
union all

	select	3 ie_origem_trib,
		coalesce(a.ie_tipo_relacao, '0'),
		a.nr_seq_tipo_prestador,
		a.nr_sequencia,
		d.cd_tributo,
		d.nr_sequencia,
		trunc(g.dt_mes_competencia, 'month'),
		e.nr_sequencia nr_seq_pag_item_trib,
		f.nr_sequencia nr_seq_pag_item,
		f.nr_seq_evento
	from	pls_lote_pagamento		g,
		pls_pagamento_item 		f,
		pls_pag_item_trib 		e,
		pls_pag_prest_venc_trib		d,
		pls_pag_prest_vencimento	c,
		pls_pagamento_prestador		b,
		pls_prestador			a
	where	a.nr_sequencia	= b.nr_seq_prestador
	and	b.nr_sequencia	= c.nr_seq_pag_prestador
	and	c.nr_sequencia	= d.nr_seq_vencimento
	and	d.nr_sequencia	= e.nr_seq_venc_trib
	and	f.nr_sequencia	= e.nr_seq_pagamento
	and	g.nr_sequencia	= b.nr_seq_lote	
	and	b.nr_sequencia	= f.nr_seq_pagamento
	and	d.ie_pago_prev	!= 'R'
	and	d.vl_imposto >= 0 /*Buscar os movimentos que nao sao de devolucao*/
	and	b.nr_seq_lote	= nr_seq_lote_p
	and	((d.nr_sequencia = nr_seq_item_p) or (coalesce(nr_seq_item_p::text, '') = ''));
	
c_esquema CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_historico_padrao,
		a.cd_historico_estorno,
		a.cd_historico_baixa
	from	pls_esquema_contabil	a
	where	a.ie_tipo_regra		= 'IP'
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	dt_referencia_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_referencia_w)
	and	((a.nr_seq_prestador = nr_seq_prestador_w) or (coalesce(a.nr_seq_prestador::text, '') = ''))
	and	((a.nr_seq_tipo_prestador = nr_seq_tipo_prestador_w) or (coalesce(a.nr_seq_tipo_prestador::text, '') = ''))
	and	((a.ie_tipo_ptu = ie_tipo_prestador_w) or (coalesce(a.ie_tipo_ptu::text, '') = ''))
	and	((a.ie_tipo_relacao = ie_tipo_relacao_w) or (coalesce(a.ie_tipo_relacao::text, '') = ''))
	and	((a.cd_tributo = cd_tributo_w) or (coalesce(a.cd_tributo::text, '') = ''))
	and	((a.nr_seq_evento = nr_seq_evento_w) or (coalesce(a.nr_seq_evento::text, '') = ''))
	order by
		coalesce(a.cd_tributo,0),
		coalesce(a.ie_tipo_ptu,' '),
		coalesce(a.ie_tipo_relacao,' '),
		coalesce(a.nr_seq_evento, 0),
		coalesce(a.dt_inicio_vigencia,clock_timestamp());

c_segmentacao CURSOR FOR
	SELECT	ie_codificacao,
		vl_fixo,
		cd_conta_contabil,
		ie_debito_credito,
		ds_mascara
	from	pls_esquema_contabil_seg
	where	nr_seq_regra_esquema	= nr_seq_esquema_w
	order by
		ie_debito_credito,
		nr_seq_apresentacao;


BEGIN

select	max(ie_tipo_outorgante)
into STRICT	ie_tipo_outorgante_w
from	pls_outorgante
where	cd_estabelecimento	= cd_estabelecimento_p;

select	max(cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

select 	max(dt_mes_competencia)
into STRICT	dt_atualizacao_ctb_w
from	pls_atualizacao_contabil
where	nr_sequencia = nr_seq_atualizacao_p;

select	sum(CASE WHEN ie_prestador_codificacao='P' THEN  1  ELSE 0 END ) qt_prest_pgto
into STRICT	qt_prest_pgto_w
from	pls_esquema_contabil
where	ie_tipo_regra		= 'PM'
and	dt_atualizacao_ctb_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_atualizacao_ctb_w);

qt_movimento_w	:= qt_movimento_p;

open c_tributos;
loop
fetch c_tributos into
	ie_origem_trib_w,
	ie_tipo_relacao_w,
	nr_seq_tipo_prestador_w,
	nr_seq_prestador_w,
	cd_tributo_w,
	nr_seq_trib_pag_w,
	dt_referencia_w,
	nr_seq_pag_item_trib_w,
	nr_seq_pag_item_w,
	nr_seq_evento_w;
EXIT WHEN NOT FOUND; /* apply on c_tributos */
	begin
	if (coalesce(nr_seq_item_p, 0) <> 0 and coalesce(dt_atualizacao_ctb_w::text, '') = '') then
		select	sum(CASE WHEN ie_prestador_codificacao='P' THEN  1  ELSE 0 END ) qt_prest_pgto
		into STRICT	qt_prest_pgto_w
		from	pls_esquema_contabil
		where	ie_tipo_regra		= 'PM'
		and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_referencia_w);
	end if;
	
	nr_seq_esquema_w	:= null;
	
	if (nr_seq_tipo_prestador_w IS NOT NULL AND nr_seq_tipo_prestador_w::text <> '') then
		select	max(ie_tipo_ptu)
		into STRICT	ie_tipo_prestador_w
		from	pls_tipo_prestador
		where	nr_sequencia	= nr_seq_tipo_prestador_w;
	end if;
	
	open c_esquema;
	loop
	fetch c_esquema into
		nr_seq_esquema_w,
		cd_historico_padrao_w,
		cd_historico_estorno_w,
		cd_historico_baixa_w;
	EXIT WHEN NOT FOUND; /* apply on c_esquema */
	end loop;
	close c_esquema;
	
	cd_classificacao_debito_w	:= '';
	cd_classificacao_credito_w	:= '';
	cd_conta_credito_w		:= null;
	cd_conta_debito_w		:= null;
	cd_centro_custo_w		:= null;
	ie_tipo_evento_w		:= null;
	
	open c_segmentacao;
	loop
	fetch c_segmentacao into
		ie_codificacao_w,
		vl_fixo_w,
		cd_conta_contabil_w,
		ie_debito_credito_w,
		ds_mascara_w;
	EXIT WHEN NOT FOUND; /* apply on c_segmentacao */
		begin
		cd_classificacao_item_w	:= null;
		
		if (ie_debito_credito_w = 'C') then /* Classificacao CREDITO */
			if (ie_codificacao_w = 'CR') then /* Codigo reduzido */
				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;
				
				cd_conta_credito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'FX') then /* Fixo */
				cd_classificacao_item_w	:= vl_fixo_w;
			elsif (ie_codificacao_w = 'TR') then /* Tipo de relacao com a OPS */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
			elsif (ie_codificacao_w = 'JP') then /* Conta de pagamento da pessoa do prestador */
				select	max(a.cd_cgc),
					max(a.cd_pessoa_fisica)
				into STRICT	cd_cgc_prestador_w,
					cd_pf_prestador_w
				from	pls_prestador	a
				where	a.nr_sequencia	= nr_seq_prestador_w;
			
				if (coalesce(cd_cgc_prestador_w,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_jur_conta_cont a
					where	a.cd_cgc	= cd_cgc_prestador_w
					and	a.cd_empresa	= cd_empresa_w
					and	a.ie_tipo_conta	= 'P'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia, dt_referencia_w) and coalesce(a.dt_fim_vigencia, dt_referencia_w);
				elsif (coalesce(cd_pf_prestador_w,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_fisica_conta_ctb	a
					where	a.cd_pessoa_fisica 	= cd_pf_prestador_w
					and	a.cd_empresa		= cd_empresa_w
					and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
					and	a.ie_tipo_conta		= 'P'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia, dt_referencia_w) and coalesce(a.dt_fim_vigencia, dt_referencia_w);
				end if;
				
				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;
				
				cd_conta_credito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'CC') or /* Conta credito original (item da conta) */
				(ie_codificacao_w = 'CD') then /* Conta debito original (item da conta) */
				
				qt_registros_w := 0;
				
				select	count(*)
				into STRICT	qt_registros_w
				from	pls_conta_medica_resumo a
				where	a.nr_seq_pag_item	= nr_seq_pag_item_w;
					
				if (qt_registros_w <> 0) then
					if (qt_prest_pgto_w > 0) then
						select	CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(a.cd_classif_cred,a.cd_classif_prov_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(a.cd_classif_deb,a.cd_classif_prov_deb)) END ,
							CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(a.cd_conta_cred,a.cd_conta_prov_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(a.cd_conta_deb,a.cd_conta_prov_deb)) END
						into STRICT	cd_classificacao_credito_w,
							cd_conta_credito_w
						from	pls_conta_medica_resumo a
						where	a.nr_seq_pag_item	= nr_seq_pag_item_w;
					else
						select	max(x.cd_classificacao_credito),
							max(x.cd_conta_credito)
						into STRICT	cd_classificacao_credito_w,
							cd_conta_credito_w
						from (SELECT	CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(b.cd_classif_cred,b.cd_classif_prov_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(b.cd_classif_deb,b.cd_classif_prov_deb)) END  cd_classificacao_credito,
								CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(b.cd_conta_cred,b.cd_conta_provisao_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(b.cd_conta_deb,b.cd_conta_provisao_deb)) END  cd_conta_credito
							from	pls_conta_medica_resumo a,
								pls_conta_proc b
							where	b.nr_sequencia		= a.nr_seq_conta_proc
							and	a.nr_seq_pag_item	= nr_seq_pag_item_w
							
union all

							SELECT	CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(b.cd_classif_cred,b.cd_classif_prov_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(b.cd_classif_deb,b.cd_classif_prov_deb)) END  cd_classificacao_credito,
								CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(b.cd_conta_cred,b.cd_conta_provisao_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(b.cd_conta_deb,b.cd_conta_provisao_deb)) END  cd_conta_credito
							from	pls_conta_medica_resumo a,
								pls_conta_mat b
							where	b.nr_sequencia		= a.nr_seq_conta_mat
							and	a.nr_seq_pag_item	= nr_seq_pag_item_w) x;
							
					end if;
				else
					select	count(*)
					into STRICT	qt_registros_w
					from	pls_conta_rec_resumo_item
					where	nr_seq_pag_item	= nr_seq_pag_item_w;
					
					if (qt_registros_w <> 0) then
						select	CASE WHEN ie_codificacao_w='CC' THEN max(a.cd_classif_cred_pag) WHEN ie_codificacao_w='CD' THEN  max(a.cd_classif_deb_pag) END ,
							CASE WHEN ie_codificacao_w='CC' THEN max(a.cd_conta_cred_pag) WHEN ie_codificacao_w='CD' THEN  max(a.cd_conta_deb_pag) END
						into STRICT	cd_classificacao_credito_w,
							cd_conta_credito_w
						from	pls_conta_rec_resumo_item a
						where	a.nr_seq_pag_item	= nr_seq_pag_item_w;
					else
						
						select	CASE WHEN ie_codificacao_w='CC' THEN  max(a.cd_classif_cred) WHEN ie_codificacao_w='CD' THEN  max(a.cd_classif_deb) END ,
							CASE WHEN ie_codificacao_w='CC' THEN  max(a.cd_conta_credito) WHEN ie_codificacao_w='CD' THEN  max(a.cd_conta_debito) END 
						into STRICT	cd_classificacao_credito_w,
							cd_conta_credito_w
						from	pls_evento_movimento a
						where	a.nr_seq_prestador = nr_seq_prestador_w
						and	a.nr_seq_evento    = nr_seq_evento_w
						and	a.nr_seq_lote_pgto = nr_seq_lote_p;
					end if;
				end if;
			end if;
			
			if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
				if (ds_mascara_w = '00') then
					cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
				elsif (ds_mascara_w = '0.0') then
					cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
				elsif (ds_mascara_w = '0_') then
					cd_classificacao_item_w	:= cd_classificacao_item_w;
				else
					cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
				end if;
				
				cd_classificacao_credito_w	:= cd_classificacao_credito_w || cd_classificacao_item_w;
			end if;
		elsif (ie_debito_credito_w = 'D') then /* Classificacao DEBITO */
			if (ie_codificacao_w = 'CR') then /* Codigo reduzido */
				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;
				
				cd_conta_debito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'FX') then /* Fixo */
				cd_classificacao_item_w	:= vl_fixo_w;
			elsif (ie_codificacao_w = 'TR') then /* Tipo de relacao com a OPS */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
			elsif (ie_codificacao_w = 'JP') then /* Conta de pagamento da pessoa do prestador */
				select	max(a.cd_cgc),
					max(a.cd_pessoa_fisica)
				into STRICT	cd_cgc_prestador_w,
					cd_pf_prestador_w
				from	pls_prestador	a
				where	a.nr_sequencia	= nr_seq_prestador_w;
			
				if (coalesce(cd_cgc_prestador_w,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_jur_conta_cont a
					where	a.cd_cgc	= cd_cgc_prestador_w
					and	a.cd_empresa	= cd_empresa_w
					and	a.ie_tipo_conta	= 'P'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia, dt_referencia_w) and coalesce(a.dt_fim_vigencia, dt_referencia_w);
				elsif (coalesce(cd_pf_prestador_w,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_contabil_w
					from	pessoa_fisica_conta_ctb	a
					where	a.cd_pessoa_fisica 	= cd_pf_prestador_w
					and	a.cd_empresa		= cd_empresa_w
					and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
					and	a.ie_tipo_conta		= 'P'
					and	dt_referencia_w between coalesce(a.dt_inicio_vigencia, dt_referencia_w) and coalesce(a.dt_fim_vigencia, dt_referencia_w);
				end if;
				
				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil = cd_conta_contabil_w;
				
				cd_conta_debito_w	:= cd_conta_contabil_w;
				
			elsif (ie_codificacao_w = 'CC') or /* Conta credito original (item da conta) */
				(ie_codificacao_w = 'CD') then /* Conta debito original (item da conta) */
				
				qt_registros_w := 0;
				
				select	count(*)
				into STRICT	qt_registros_w
				from	pls_conta_medica_resumo a
				where	a.nr_seq_pag_item	= nr_seq_pag_item_w;
				
				if (qt_registros_w <> 0) then
					if (qt_prest_pgto_w > 0) then
						select	CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(a.cd_classif_cred,a.cd_classif_prov_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(a.cd_classif_deb,a.cd_classif_prov_deb)) END ,
							CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(a.cd_conta_cred,a.cd_conta_prov_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(a.cd_conta_deb,a.cd_conta_prov_deb)) END
						into STRICT	cd_classificacao_debito_w,
							cd_conta_debito_w
						from	pls_conta_medica_resumo a
						where	a.nr_seq_pag_item	= nr_seq_pag_item_w;
					else
						select	max(x.cd_classificacao_credito),
							max(x.cd_conta_credito)
						into STRICT	cd_classificacao_debito_w,
							cd_conta_debito_w
						from (SELECT	CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(b.cd_classif_cred,b.cd_classif_prov_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(b.cd_classif_deb,b.cd_classif_prov_deb)) END  cd_classificacao_credito,
								CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(b.cd_conta_cred,b.cd_conta_provisao_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(b.cd_conta_deb,b.cd_conta_provisao_deb)) END  cd_conta_credito
							from	pls_conta_medica_resumo a,
								pls_conta_proc b
							where	b.nr_sequencia		= a.nr_seq_conta_proc
							and	a.nr_seq_pag_item	= nr_seq_pag_item_w
							
union all

							SELECT	CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(b.cd_classif_cred,b.cd_classif_prov_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(b.cd_classif_deb,b.cd_classif_prov_deb)) END  cd_classificacao_credito,
								CASE WHEN ie_codificacao_w='CC' THEN max(coalesce(b.cd_conta_cred,b.cd_conta_provisao_cred)) WHEN ie_codificacao_w='CD' THEN  max(coalesce(b.cd_conta_deb,b.cd_conta_provisao_deb)) END  cd_conta_credito
							from	pls_conta_medica_resumo a,
								pls_conta_mat b
							where	b.nr_sequencia		= a.nr_seq_conta_mat
							and	a.nr_seq_pag_item	= nr_seq_pag_item_w) x;
					end if;
				else
					select	count(*)
					into STRICT	qt_registros_w
					from	pls_conta_rec_resumo_item
					where	nr_seq_pag_item	= nr_seq_pag_item_w;
					
					if (qt_registros_w <> 0) then
						select	CASE WHEN ie_codificacao_w='CC' THEN max(a.cd_classif_cred_pag) WHEN ie_codificacao_w='CD' THEN  max(a.cd_classif_deb_pag) END ,
							CASE WHEN ie_codificacao_w='CC' THEN max(a.cd_conta_cred_pag) WHEN ie_codificacao_w='CD' THEN  max(a.cd_conta_deb_pag) END
						into STRICT	cd_classificacao_debito_w,
							cd_conta_debito_w
						from	pls_conta_rec_resumo_item a
						where	a.nr_seq_pag_item	= nr_seq_pag_item_w;
					else
						select	max(a.ie_tipo_evento)
						into STRICT	ie_tipo_evento_w
						from	pls_evento a
						where	a.nr_sequencia	= nr_seq_evento_w;
						
						select	CASE WHEN ie_codificacao_w='CC' THEN  max(a.cd_classif_cred) WHEN ie_codificacao_w='CD' THEN  max(a.cd_classif_deb) END ,
							CASE WHEN ie_codificacao_w='CC' THEN  max(a.cd_conta_credito) WHEN ie_codificacao_w='CD' THEN  max(a.cd_conta_debito) END
						into STRICT	cd_classificacao_debito_w,
							cd_conta_debito_w
						from	pls_evento_movimento a
						where	a.nr_seq_prestador = nr_seq_prestador_w
						and	a.nr_seq_evento    = nr_seq_evento_w
						and	a.nr_seq_lote_pgto = nr_seq_lote_p;
					end if;
				end if;
			end if;
			
			if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
				if (ds_mascara_w = '00') then
					cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
				elsif (ds_mascara_w = '0.0') then
					cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
				elsif (ds_mascara_w = '0_') then
					cd_classificacao_item_w	:= cd_classificacao_item_w;
				else
					cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
				end if;
				
				cd_classificacao_debito_w	:= cd_classificacao_debito_w || cd_classificacao_item_w;
			end if;
		end if;
		end;
	end loop;
	close c_segmentacao;
	
	select	max(a.ie_tipo_evento)
	into STRICT	ie_tipo_evento_w
	from	pls_evento a
	where	a.nr_sequencia	= nr_seq_evento_w;
	
	select	CASE WHEN ie_tipo_evento_w='F' THEN  max(a.cd_centro_custo)  ELSE null END
	into STRICT	cd_centro_custo_w
	from	pls_evento_movimento a
	where	a.nr_seq_prestador = nr_seq_prestador_w
	and	a.nr_seq_evento    = nr_seq_evento_w
	and	a.nr_seq_lote_pgto = nr_seq_lote_p;
	
	/* Remover o ultimo ponto da classificacao */

	if (substr(cd_classificacao_credito_w,length(cd_classificacao_credito_w),length(cd_classificacao_credito_w)) = '.') then
		cd_classificacao_credito_w	:= substr(cd_classificacao_credito_w,1,length(cd_classificacao_credito_w)-1);
	end if;
	
	if (substr(cd_classificacao_debito_w,length(cd_classificacao_debito_w),length(cd_classificacao_debito_w)) = '.') then
		cd_classificacao_debito_w	:= substr(cd_classificacao_debito_w,1,length(cd_classificacao_debito_w)-1);
	end if;

	if (coalesce(cd_conta_credito_w::text, '') = '') then
		cd_conta_credito_w	:= ctb_obter_conta_classif(cd_classificacao_credito_w,dt_referencia_w,cd_estabelecimento_p);
	end if;

	if (coalesce(cd_conta_debito_w::text, '') = '') then
		cd_conta_debito_w	:= ctb_obter_conta_classif(cd_classificacao_debito_w,dt_referencia_w,cd_estabelecimento_p);
	end if;
	
	if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
		if (coalesce(nr_seq_esquema_w::text, '') = '') then
			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
						1,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nr_seq_trib_pag_w,
						null,
						null,
						null,
						nm_usuario_p,
						nr_seq_esquema_w,
						nr_seq_pag_item_trib_w);
		elsif	((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) then
			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
						2,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nr_seq_trib_pag_w,
						null,
						null,
						null,
						nm_usuario_p,
						nr_seq_esquema_w,
						nr_seq_pag_item_trib_w);
		end if;
	end if;

	begin	
	if (ie_origem_trib_w = 1) then
		update	pls_pag_prest_venc_trib
		set	cd_conta_cred	= cd_conta_credito_w,
			cd_conta_deb	= cd_conta_debito_w,
			cd_historico	= cd_historico_padrao_w,
			nr_seq_esquema	= nr_seq_esquema_w,
			cd_classif_cred	= cd_classificacao_credito_w,
			cd_classif_deb	= cd_classificacao_debito_w
		where	nr_sequencia	= nr_seq_trib_pag_w;
		
	elsif (ie_origem_trib_w in (2,3)) then
		update	pls_pag_item_trib
		set	cd_conta_cred	= cd_conta_credito_w,
			cd_conta_deb	= cd_conta_debito_w,
			cd_historico	= cd_historico_padrao_w,
			nr_seq_esquema	= nr_seq_esquema_w,
			cd_classif_cred	= cd_classificacao_credito_w,
			cd_classif_deb	= cd_classificacao_debito_w,
			cd_centro_custo = coalesce(cd_centro_custo_w,cd_centro_custo)
		where	nr_sequencia	= nr_seq_pag_item_trib_w;
	end if;	
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(192485, 'NR_SEQ_TRIB=' || nr_seq_trib_pag_w);
	end;
	
	qt_movimento_w	:= qt_movimento_w + 1;
	
	if (mod(qt_movimento_w, 200) = 0) then
		commit;
	end if;
	end;
end loop;
close c_tributos;

qt_movimento_p	:= qt_movimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_trib_pag_in ( nr_seq_lote_p bigint, nr_seq_item_p bigint, nr_seq_atualizacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, qt_movimento_p INOUT bigint) FROM PUBLIC;

