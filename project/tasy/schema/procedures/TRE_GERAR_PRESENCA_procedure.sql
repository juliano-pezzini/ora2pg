-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tre_gerar_presenca (dt_treinamento_p timestamp, nr_seq_inscrito_p bigint, ie_presente_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
ie_status_bloq_w	bigint;
nr_seq_evento_w		bigint;
nr_pac_reabilitacao_w  bigint;
nr_seq_curso_w		bigint;	
nr_seq_agenda_w		bigint;
dt_inicio_w		timestamp;
dt_termino_w		timestamp;
nr_seq_tipo_w		bigint;
pr_faltas_permitida_w	bigint;
qt_faltas_permitida_w	bigint;
qt_faltas_w		bigint;
percentual_w		double precision;
dt_inicio_ww		timestamp;
dt_fim_ww			timestamp;
ie_falta_consecutiva_w	varchar(1);	
dt_presenca_w		timestamp;
ie_presenca_w		varchar(2);
ie_continua_w		varchar(1);
cd_pessoa_fisica_w	varchar(10);

C01 CURSOR FOR 
	SELECT 	distinct trunc(b.dt_presenca), 
		b.ie_presente 
	from	tre_inscrito_presenca b    
	where	b.nr_seq_inscrito = nr_seq_inscrito_p 
	order by 1;


BEGIN 
delete from tre_inscrito_presenca where dt_presenca = dt_treinamento_p and nr_seq_inscrito = nr_seq_inscrito_p;
commit;
 
select	max(nr_seq_evento), 
	max(nr_pac_reabilitacao), 
	max(cd_pessoa_fisica) 
into STRICT	nr_seq_evento_w, 
	nr_pac_reabilitacao_w, 
	cd_pessoa_fisica_w 
from	tre_inscrito 
where	nr_sequencia = nr_seq_inscrito_p;
 
select	trunc(max(dt_inicio),'dd'), 
		trunc(max(dt_fim), 'dd') 
into STRICT	dt_inicio_ww, 
		dt_fim_ww 
from	tre_evento 
where	nr_sequencia = nr_seq_evento_w;
 
if (dt_treinamento_p	< dt_inicio_ww) or (dt_treinamento_p	> dt_fim_ww) then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(262010); -- A data da presença está fora do período do treinamento! 
end if;
 
			insert into tre_inscrito_presenca(	nr_sequencia, 
					nr_seq_inscrito, 
					dt_presenca, 
					ie_presente, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					dt_saida) 
			values (	nextval('tre_inscrito_presenca_seq'), 
					nr_seq_inscrito_p, 
					dt_treinamento_p, 
					ie_presente_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					null);
 
 
 
if (ie_presente_p = 'N') and (nr_pac_reabilitacao_w IS NOT NULL AND nr_pac_reabilitacao_w::text <> '') and (nr_seq_evento_w IS NOT NULL AND nr_seq_evento_w::text <> '') then 
	 
	select	max(nr_seq_pac_reab_bloqueio) 
	into STRICT	ie_status_bloq_w 
	from	rp_parametros 
	where	cd_estabelecimento = cd_estabelecimento_p;
	 
	select	max(nr_seq_curso), 
		max(nr_seq_agenda) 
	into STRICT	nr_seq_curso_w, 
		nr_seq_agenda_w 
	from	tre_evento 
	where	nr_sequencia = nr_seq_evento_w;
	 
	select	max(dt_inicio), 
		max(dt_termino) 
	into STRICT	dt_inicio_w, 
		dt_termino_w 
	from	tre_agenda 
	where	nr_sequencia = nr_seq_agenda_w;
 
	select	max(nr_seq_tipo) 
	into STRICT	nr_seq_tipo_w 
	from	tre_curso 
	where	nr_sequencia = nr_seq_curso_w;
 
	select	max(pr_faltas_permitida), 
		max(qt_faltas_permitida), 
		coalesce(max(ie_falta_consecutiva),'N') 
	into STRICT	pr_faltas_permitida_w, 
		qt_faltas_permitida_w, 
		ie_falta_consecutiva_w 
	from	tre_tipo 
	where	nr_sequencia = nr_seq_tipo_w;
 
	if (dt_termino_w IS NOT NULL AND dt_termino_w::text <> '') then 
		if (ie_falta_consecutiva_w <> 'S') then 
			select	count(*) 
			into STRICT	qt_faltas_w 
			from	tre_inscrito_presenca 
			where	ie_presente = 'N' 
			and	nr_seq_inscrito = nr_seq_inscrito_p 
			and	dt_presenca between dt_inicio_w and fim_dia(dt_termino_w);
		end if;
		if (ie_falta_consecutiva_w = 'S') then 
			ie_continua_w := 'S';
			qt_faltas_w := 0;
			open C01;
			loop 
			fetch C01 into	 
				dt_presenca_w, 
				ie_presenca_w;
			EXIT WHEN NOT FOUND or ie_continua_w = 'N';  /* apply on C01 */
				begin		 
				if (ie_presenca_w = 'N') then 
					qt_faltas_w := qt_faltas_w + 1;
				else	 
					qt_faltas_w := 0;
				end if;	
				 
				percentual_w	:= 0;
				percentual_w	:= dividir(qt_faltas_w,(trunc(dt_termino_w) - trunc(dt_inicio_w))) * 100;
								 
				if (dt_presenca_w <= trunc(rp_obter_data_bloqueio(nr_pac_reabilitacao_w,cd_estabelecimento_p))) then					 
					qt_faltas_w := 0;
				end if;	
				if (percentual_w >= pr_faltas_permitida_w) then					 
					ie_continua_w := 'N';
				end if;	
				end;
			end loop;
			close C01;	
		 
		end if;
		 
		percentual_w	:= dividir(qt_faltas_w,(trunc(dt_termino_w) - trunc(dt_inicio_w))) * 100;
		 
		if (ie_status_bloq_w IS NOT NULL AND ie_status_bloq_w::text <> '') and (pr_faltas_permitida_w IS NOT NULL AND pr_faltas_permitida_w::text <> '') and (percentual_w >= pr_faltas_permitida_w) then 
		 
			update	rp_paciente_reabilitacao 
			set	nr_seq_status	= ie_status_bloq_w, 
				dt_atualizacao	= clock_timestamp(), 
				nm_usuario	= nm_usuario_p 
			where	nr_sequencia 	= nr_pac_reabilitacao_w;
			 
			CALL Tre_Alerta_Bloqueio_faltas(cd_pessoa_fisica_w,nm_usuario_p,cd_estabelecimento_p);
		end if;
			 
	else 
		if (ie_falta_consecutiva_w <> 'S') then 
			select	count(*) 
			into STRICT	qt_faltas_w 
			from	tre_inscrito_presenca 
			where	ie_presente = 'N' 
			and	nr_seq_inscrito = nr_seq_inscrito_p;
		end if;		
		if (ie_falta_consecutiva_w = 'S') then 
			ie_continua_w := 'S';
			qt_faltas_w := 0;
			open C01;
			loop 
			fetch C01 into	 
				dt_presenca_w, 
				ie_presenca_w;
			EXIT WHEN NOT FOUND or ie_continua_w = 'N';  /* apply on C01 */
				begin							 
				 
				if (ie_presenca_w = 'N') then 
					qt_faltas_w := qt_faltas_w + 1;
				else	 
					qt_faltas_w := 0;
				end if;								
				 
				if (dt_presenca_w <= trunc(rp_obter_data_bloqueio(nr_pac_reabilitacao_w,cd_estabelecimento_p))) then 
					qt_faltas_w := 0;
				end if;	
				if (qt_faltas_w > pr_faltas_permitida_w) then 
					ie_continua_w := 'N';
				end if;		
				end;
			end loop;
			close C01;	
		 
		end if;
		 
		if (ie_status_bloq_w IS NOT NULL AND ie_status_bloq_w::text <> '') and (qt_faltas_w IS NOT NULL AND qt_faltas_w::text <> '') and 
			((qt_faltas_w >= qt_faltas_permitida_w AND ie_falta_consecutiva_w = 'N') or 
			(qt_faltas_w > qt_faltas_permitida_w AND ie_falta_consecutiva_w = 'S')) then 
		 
			update	rp_paciente_reabilitacao 
			set	nr_seq_status	= ie_status_bloq_w, 
				dt_atualizacao	= clock_timestamp(), 
				nm_usuario	= nm_usuario_p 
			where	nr_sequencia 	= nr_pac_reabilitacao_w;
			 
			CALL Tre_Alerta_Bloqueio_faltas(cd_pessoa_fisica_w,nm_usuario_p,cd_estabelecimento_p);
		end if;		
		 
	end if;
 
end if;
					 
					 
commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tre_gerar_presenca (dt_treinamento_p timestamp, nr_seq_inscrito_p bigint, ie_presente_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

