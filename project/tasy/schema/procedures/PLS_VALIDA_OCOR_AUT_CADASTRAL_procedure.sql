-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_cadastral ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
nr_seq_requisicao_w		bigint;
ie_tipo_processo_w		varchar(2);
nr_seq_regra_atualizacao_w	bigint;
ie_funcao_validacao_w		varchar(2);
cd_pessoa_fisica_w		varchar(10);					
nr_seq_regra_atu_cad_w		bigint;
qt_incidencia_w			integer;
ie_tipo_qtde_w			varchar(2);
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
qt_requisicao_w			integer;
qt_guia_w			integer;
qt_solic_alt_w			integer;
ie_gerar_ocorrencia_w		varchar(2)	:= 'N';
nr_seq_req_mat_w		bigint;
nr_seq_material_w		bigint;
nr_seq_req_proc_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_oc_benef_w		bigint;
ie_gerou_ocor_cabecalho_w	varchar(2);
ie_tipo_item_w			bigint;
ie_tipo_ocorrencia_w		varchar(2);
ie_regra_w			varchar(2);
nr_seq_guia_proc_w		bigint;
nr_seq_guia_mat_w		bigint;
nr_seq_exec_item_w		bigint;					
 
C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_guia_plano_proc 
	where	nr_seq_guia		= nr_seq_guia_p;
	
C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_guia_plano_mat 
	where	nr_seq_guia		= nr_seq_guia_p;

C03 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_requisicao_proc 
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	
C04 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_requisicao_mat 
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	

BEGIN 
begin 
	select 	nr_seq_regra_atu_cad, 
		qt_incidencia, 
		ie_tipo_qtde 
	into STRICT	nr_seq_regra_atu_cad_w, 
		qt_incidencia_w, 
		ie_tipo_qtde_w 
	from	pls_validacao_aut_cad 
	where	ie_situacao	= 'A' 
	and	nr_seq_ocor_aut_combinada 	= nr_seq_ocor_combinada_p;
exception 
when others then 
	nr_seq_regra_atu_cad_w	:= null;
	qt_incidencia_w		:= null;
	ie_tipo_qtde_w		:= null;
end;
 
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') and (ie_tipo_qtde_w = '2') then 
	begin 
		select	ie_tipo_processo 
		into STRICT 	ie_tipo_processo_w 
		from	pls_guia_plano 
		where	nr_sequencia	= nr_seq_guia_p;		
	exception 
	when others then 
		ie_tipo_processo_w	:= null;
	end;
 
	if (ie_tipo_processo_w	= 'M') then	 
		SELECT * FROM pls_verifica_atualizacao_cad( nr_seq_segurado_p, 'A', nr_seq_regra_atualizacao_w, ie_funcao_validacao_w, cd_pessoa_fisica_w) INTO STRICT nr_seq_regra_atualizacao_w, ie_funcao_validacao_w, cd_pessoa_fisica_w;
	elsif (ie_tipo_processo_w	= 'P') then 
		SELECT * FROM pls_verifica_atualizacao_cad( nr_seq_segurado_p, 'P', nr_seq_regra_atualizacao_w, ie_funcao_validacao_w, cd_pessoa_fisica_w) INTO STRICT nr_seq_regra_atualizacao_w, ie_funcao_validacao_w, cd_pessoa_fisica_w;
	end if;
	 
	if (nr_seq_regra_atu_cad_w	= nr_seq_regra_atualizacao_w) then 
		begin 
			select 	dt_inicio_vigencia, 
				dt_fim_vigencia 
			into STRICT	dt_inicio_vigencia_w, 
				dt_fim_vigencia_w 
			from	pls_ocor_aut_combinada 
			where 	nr_sequencia	= nr_seq_ocor_combinada_p 
			and	((coalesce(dt_fim_vigencia::text, '') = '') 
			or (dt_fim_vigencia 	< clock_timestamp()));
		exception 
		when others then 
			dt_inicio_vigencia_w	:= null;
		end;
	 
		if (dt_inicio_vigencia_w < clock_timestamp()) then 
			select 	count(1) 
			into STRICT	qt_guia_w 
			from 	pls_guia_plano 
			where 	nr_seq_segurado 	= nr_seq_segurado_p 
			and	dt_solicitacao		>= dt_inicio_vigencia_w 
			and	((coalesce(dt_fim_vigencia_w::text, '') = '') 
			or (dt_solicitacao		<= dt_fim_vigencia_w));
		end if;
	 
		if (qt_incidencia_w <= qt_guia_w) then 
			begin 
				select	count(1)	 
				into STRICT	qt_solic_alt_w 
				from	tasy_solic_alteracao a, 
					tasy_solic_alt_campo b 
				where	coalesce(a.dt_analise::text, '') = '' 
				and	a.nr_sequencia = b.nr_seq_solicitacao 
				and	b.nm_tabela in ('PESSOA_FISICA', 'COMPL_PESSOA_FISICA') 
				and (b.ds_chave_simples = cd_pessoa_fisica_w 
					or (substr(b.ds_chave_composta,1,length('CD_PESSOA_FISICA='||cd_pessoa_fisica_w)) = 'CD_PESSOA_FISICA='||cd_pessoa_fisica_w));
			exception 
			when others then 
				qt_solic_alt_w	:= null;
			end;
	 
			if (qt_solic_alt_w = 0) then 
				ie_gerar_ocorrencia_w	:= 'S';
			end if;
		end if;
	end if;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') and (ie_tipo_qtde_w = '1') then 
	begin 
		select	ie_tipo_processo 
		into STRICT 	ie_tipo_processo_w 
		from	pls_requisicao 
		where	nr_sequencia	= nr_seq_requisicao_p;		
	exception 
	when others then 
		ie_tipo_processo_w	:= null;
	end;
 
	if (ie_tipo_processo_w	= 'M') then	 
		SELECT * FROM pls_verifica_atualizacao_cad( nr_seq_segurado_p, 'A', nr_seq_regra_atualizacao_w, ie_funcao_validacao_w, cd_pessoa_fisica_w) INTO STRICT nr_seq_regra_atualizacao_w, ie_funcao_validacao_w, cd_pessoa_fisica_w;
	elsif (ie_tipo_processo_w	= 'P') then 
		SELECT * FROM pls_verifica_atualizacao_cad( nr_seq_segurado_p, 'P', nr_seq_regra_atualizacao_w, ie_funcao_validacao_w, cd_pessoa_fisica_w) INTO STRICT nr_seq_regra_atualizacao_w, ie_funcao_validacao_w, cd_pessoa_fisica_w;
	end if;
	 
	if (nr_seq_regra_atu_cad_w	= nr_seq_regra_atualizacao_w) then 
		begin 
			select 	dt_inicio_vigencia, 
				dt_fim_vigencia 
			into STRICT	dt_inicio_vigencia_w, 
				dt_fim_vigencia_w 
			from	pls_ocor_aut_combinada 
			where 	nr_sequencia	= nr_seq_ocor_combinada_p 
			and	((coalesce(dt_fim_vigencia::text, '') = '') 
			or (dt_fim_vigencia 	< clock_timestamp()));
		exception 
		when others then 
			dt_inicio_vigencia_w	:= null;
		end;
	 
		if (dt_inicio_vigencia_w < clock_timestamp()) then 
			select 	count(1) 
			into STRICT	qt_requisicao_w 
			from 	pls_requisicao 
			where 	nr_seq_segurado 	= nr_seq_segurado_p 
			and	dt_requisicao		>= dt_inicio_vigencia_w 
			and	((coalesce(dt_fim_vigencia_w::text, '') = '') 
			or (dt_requisicao		<= dt_fim_vigencia_w));
		end if;
		 
		if (qt_incidencia_w <= qt_requisicao_w) then 
			begin 
				select	count(1)	 
				into STRICT	qt_solic_alt_w 
				from	tasy_solic_alteracao a, 
					tasy_solic_alt_campo b 
				where	coalesce(a.dt_analise::text, '') = '' 
				and	a.nr_sequencia = b.nr_seq_solicitacao 
				and	b.nm_tabela in ('PESSOA_FISICA', 'COMPL_PESSOA_FISICA') 
				and (b.ds_chave_simples = cd_pessoa_fisica_w 
					or (substr(b.ds_chave_composta,1,length('CD_PESSOA_FISICA='||cd_pessoa_fisica_w)) = 'CD_PESSOA_FISICA='||cd_pessoa_fisica_w));
			exception 
			when others then 
				qt_solic_alt_w	:= null;
			end;
			 
			if (qt_solic_alt_w = 0) then 
				ie_gerar_ocorrencia_w	:= 'S';
			end if;
		end if;
	end if;
end if;
 
if (ie_gerar_ocorrencia_w	= 'S') and (ie_utiliza_filtro_p = 'S') then 
	ie_gerar_ocorrencia_w	:= 'N';
 
	if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_guia_proc_w, 
			cd_procedimento_w, 
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			/* Tratamento para filtros */
 
			SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, nr_seq_guia_proc_w, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, ie_gerou_ocor_cabecalho_w, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
							 
			if (ie_regra_w	= 'S') then 
				ie_gerar_ocorrencia_w	:= 'S';
			elsif (ie_regra_w	in ('E','N')) then 
				ie_gerar_ocorrencia_w	:= 'N';
				exit;
			end if;
			end;
		end loop;
		close C01;
 
		open C02;
		loop 
		fetch C02 into 
			nr_seq_guia_mat_w, 
			nr_seq_material_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			/* Tratamento para filtros */
 
			SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, nr_seq_guia_mat_w, null, null, null, null, null, nr_seq_material_w, ie_gerou_ocor_cabecalho_w, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
							 
			if (ie_regra_w	= 'S') then 
				ie_gerar_ocorrencia_w	:= 'S';
			elsif (ie_regra_w	in ('E','N')) then 
				ie_gerar_ocorrencia_w	:= 'N';					
				exit;
			end if;
			end;
		end loop;
		close C02;
	elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
	open C03;
	loop 
	fetch C03 into	 
		nr_seq_req_proc_w, 
		cd_procedimento_w, 
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		/* Tratamento para filtros */
 
		SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, nr_seq_req_proc_w, null, null, cd_procedimento_w, ie_origem_proced_w, null, ie_gerou_ocor_cabecalho_w, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
		 
		if (ie_regra_w	= 'S') then 
			ie_gerar_ocorrencia_w	:= 'S';
		elsif (ie_regra_w	in ('E','N')) then 
			ie_gerar_ocorrencia_w	:= 'N';
			exit;
		end if;
		end;
	end loop;
	close C03;
 
	open C04;
	loop 
	fetch C04 into 
		nr_seq_req_mat_w, 
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		/* Tratamento para filtros */
 
		SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, nr_seq_req_mat_w, null, null, null, nr_seq_material_w, ie_gerou_ocor_cabecalho_w, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
		if (ie_regra_w	= 'S') then 
			ie_gerar_ocorrencia_w	:= 'S';
		elsif (ie_regra_w	in ('E','N')) then 
			ie_gerar_ocorrencia_w	:= 'N';
			exit;
		end if;
		end;
	end loop;
	close C04;
	end if;
end if;
 
if (ie_gerar_ocorrencia_w	= 'S')	then 
	if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
		ie_tipo_item_w	:= 7;					
	elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
		ie_tipo_item_w	:= 9;	
	end if;
	 
	nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, nr_seq_guia_p, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);	
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_cadastral ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

