-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE devolver_mat_barras ( nr_prescricao_p bigint, cd_material_p bigint, qt_saldo_p bigint, nr_seq_lote_fornec_p bigint, nr_doc_interno_p bigint, nr_doc_interno_aux_p bigint, ie_tipo_doc_interno_p text, ie_tipo_doc_interno_aux_p text, nm_usuario_p text, cd_kit_material_p bigint default 0, nr_seq_kit_estoque_p bigint default 0, nr_seq_reg_kit_estoque_p bigint default 0, ie_considera_kit_agrup_p text default 'S') AS $body$
DECLARE


qt_material_w			prescr_material.qt_material%type;
qt_material_tot_w		double precision;
qt_material_dec_w		double precision;
qt_atualizar_w			double precision;
nr_seq_devolucao_w		prescr_material_devolucao.nr_sequencia%type;
qt_devolver_w			double precision;
qt_atualizar_dev_w		double precision;
ie_convenio_particular_w	varchar(1);
ie_consiste_kit_w		varchar(1);
ie_status_per_dev_w		varchar(15);

c01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_material,
		ie_tipo_convenio
	from	(	
		SELECT	nr_sequencia,
			qt_material,
			null ie_tipo_convenio,
			ie_status_cirurgia,
			cd_kit_material
		from	prescr_material
		where	nr_prescricao			= nr_prescricao_p
		and	((coalesce(cd_kit_material_p,0)	= coalesce(cd_kit_material,0)) or (ie_consiste_kit_w = 'N'))
		and	cd_material 			= cd_material_p
		and	coalesce(nr_seq_lote_fornec,0)	= coalesce(nr_seq_lote_fornec_p,coalesce(nr_seq_lote_fornec,0))
		and	cd_motivo_baixa			= 0
		and	qt_material_tot_w 		> qt_saldo_p
		and	coalesce(dt_baixa::text, '') = ''
		and	ie_convenio_particular_w	= 'N'
		and	((coalesce(nr_seq_kit_estoque_p,0) = 0) or (nr_seq_kit_estoque = nr_seq_kit_estoque_p))
		and	((coalesce(nr_seq_reg_kit_estoque_p,0) = 0) or (nr_seq_reg_kit = nr_seq_reg_kit_estoque_p))
		and	((ie_considera_kit_agrup_p = 'S') or (coalesce(nr_seq_kit_estoque::text, '') = ''))
		and	((coalesce(ie_status_per_dev_w::text, '') = '') or (obter_se_contido_char(ie_status_cirurgia,ie_status_per_dev_w) = 'S'))
		
union

		select	nr_sequencia,
			qt_material,
			CASE WHEN obter_tipo_convenio(cd_convenio)=1 THEN 999999999  ELSE null END  ie_tipo_convenio,
			ie_status_cirurgia,
			cd_kit_material
		from	prescr_material
		where	nr_prescricao			= nr_prescricao_p
		and	((coalesce(cd_kit_material_p,0)	= coalesce(cd_kit_material,0)) or (ie_consiste_kit_w = 'N'))
		and	cd_material 			= cd_material_p
		and	coalesce(nr_seq_lote_fornec,0)	= coalesce(nr_seq_lote_fornec_p,coalesce(nr_seq_lote_fornec,0))
		and	cd_motivo_baixa			= 0
		and	qt_material_tot_w 		> qt_saldo_p
		and	coalesce(dt_baixa::text, '') = ''
		and	((coalesce(nr_seq_kit_estoque_p,0) = 0) or (nr_seq_kit_estoque = nr_seq_kit_estoque_p))
		and	((coalesce(nr_seq_reg_kit_estoque_p,0) = 0) or (nr_seq_reg_kit = nr_seq_reg_kit_estoque_p))
		and	((ie_considera_kit_agrup_p = 'S') or (coalesce(nr_seq_kit_estoque::text, '') = ''))
		and	((coalesce(ie_status_per_dev_w::text, '') = '') or (obter_se_contido_char(ie_status_cirurgia,ie_status_per_dev_w) = 'S'))
		and	ie_convenio_particular_w	= 'S') alias53
	order by coalesce(ie_tipo_convenio,coalesce(cd_kit_material,-888888888)),coalesce(cd_kit_material,-888888888),CASE WHEN ie_status_cirurgia='CB' THEN 88888888  ELSE 0 END;
	
BEGIN
ie_convenio_particular_w := obter_param_usuario(900, 395, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_convenio_particular_w);
ie_consiste_kit_w := obter_param_usuario(900, 470, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_kit_w);
ie_status_per_dev_w := obter_param_usuario(900, 319, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_status_per_dev_w);

if (ie_status_per_dev_w IS NOT NULL AND ie_status_per_dev_w::text <> '') then
	ie_status_per_dev_w := replace(ie_status_per_dev_w, '''', '');
end if;	

select	sum(qt_material)
into STRICT	qt_material_tot_w
from	prescr_material
where	nr_prescricao			= nr_prescricao_p
and	cd_material 			= cd_material_p
and	coalesce(nr_seq_lote_fornec,0)	= coalesce(nr_seq_lote_fornec_p,coalesce(nr_seq_lote_fornec,0))
and	((coalesce(cd_kit_material_p,0)	= coalesce(cd_kit_material,0)) or (ie_consiste_kit_w = 'N'))
and	((coalesce(nr_seq_kit_estoque_p,0) = 0) or (nr_seq_kit_estoque = nr_seq_kit_estoque_p))
and	((coalesce(nr_seq_reg_kit_estoque_p,0) = 0) or (nr_seq_reg_kit = nr_seq_reg_kit_estoque_p))
and	((ie_considera_kit_agrup_p = 'S') or (coalesce(nr_seq_kit_estoque::text, '') = ''))
and	qt_material			> 0
and	cd_motivo_baixa			= 0
and	((coalesce(ie_status_per_dev_w::text, '') = '') or (obter_se_contido_char(ie_status_cirurgia,ie_status_per_dev_w) = 'S'))
and	coalesce(dt_baixa::text, '') = '';

qt_material_dec_w := qt_material_tot_w - qt_saldo_p;

for C01_w in C01 loop
	begin
        qt_material_w := C01_w.qt_material;
	
	if (qt_saldo_p = 0) then
		begin

		
		select	max(qt_material)
		into STRICT	qt_material_w
		from	prescr_material
		where 	nr_prescricao		= nr_prescricao_p
		and	((coalesce(cd_kit_material_p,0)	= coalesce(cd_kit_material,0)) or (ie_consiste_kit_w = 'N'))
		and	((coalesce(nr_seq_kit_estoque_p,0) = 0) or (nr_seq_kit_estoque = nr_seq_kit_estoque_p))
		and	((coalesce(nr_seq_reg_kit_estoque_p,0) = 0) or (nr_seq_reg_kit = nr_seq_reg_kit_estoque_p))
		and	((ie_considera_kit_agrup_p = 'S') or (coalesce(nr_seq_kit_estoque::text, '') = ''))
		and	((coalesce(ie_status_per_dev_w::text, '') = '') or (obter_se_contido_char(ie_status_cirurgia,ie_status_per_dev_w) = 'S'))
		and	nr_sequencia		= C01_w.nr_sequencia;
		
		if (qt_material_dec_w > 0) then
			
			select	nextval('prescr_material_devolucao_seq')
			into STRICT	nr_seq_devolucao_w
			;		
			
			if (qt_material_w <= qt_material_dec_w) then
				qt_atualizar_dev_w	:=	qt_material_w;
			else				
				qt_atualizar_dev_w	:=	qt_material_dec_w;				
			end if;
			
			begin			
			if (qt_atualizar_dev_w > 0) then
				insert into prescr_material_devolucao(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_prescricao,
					qt_devolucao,
					nr_doc_interno,
					nr_doc_interno_aux,
					ie_tipo_doc_interno,
					ie_tipo_doc_interno_aux,
					cd_material)
				values (
					nr_seq_devolucao_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_p,
					C01_w.nr_sequencia,
					qt_atualizar_dev_w,
					CASE WHEN nr_doc_interno_p=0 THEN null  ELSE nr_doc_interno_p END ,
					CASE WHEN nr_doc_interno_aux_p=0 THEN null  ELSE nr_doc_interno_aux_p END ,
					ie_tipo_doc_interno_p,
					ie_tipo_doc_interno_aux_p,
					cd_material_p);
			end if;
		
			commit;
			end;			
		end if;	
		
		update	prescr_material
		set	qt_material			= 0,
			qt_total_dispensar		= 0,
			qt_dose				= 0,
			qt_unitaria			= 0
		where 	nr_prescricao			= nr_prescricao_p
		and	((coalesce(cd_kit_material_p,0)	= coalesce(cd_kit_material,0)) or (ie_consiste_kit_w = 'N'))
		and	((coalesce(nr_seq_kit_estoque_p,0) = 0) or (nr_seq_kit_estoque = nr_seq_kit_estoque_p))
		and	((coalesce(nr_seq_reg_kit_estoque_p,0) = 0) or (nr_seq_reg_kit = nr_seq_reg_kit_estoque_p))
		and	((ie_considera_kit_agrup_p = 'S') or (coalesce(nr_seq_kit_estoque::text, '') = ''))
		and	((coalesce(ie_status_per_dev_w::text, '') = '') or (obter_se_contido_char(ie_status_cirurgia,ie_status_per_dev_w) = 'S'))
		and	nr_sequencia			= C01_w.nr_sequencia;
				
		commit;	
		
		end;
	else
		begin	
		
		select	max(qt_material)
		into STRICT	qt_material_w
		from	prescr_material
		where 	nr_prescricao		   = nr_prescricao_p
		and	((coalesce(cd_kit_material_p,0)	= coalesce(cd_kit_material,0)) or (ie_consiste_kit_w = 'N'))
		and	((coalesce(nr_seq_kit_estoque_p,0) = 0) or (nr_seq_kit_estoque = nr_seq_kit_estoque_p))
		and	((coalesce(nr_seq_reg_kit_estoque_p,0) = 0) or (nr_seq_reg_kit = nr_seq_reg_kit_estoque_p))
		and	((ie_considera_kit_agrup_p = 'S') or (coalesce(nr_seq_kit_estoque::text, '') = ''))
		and	((coalesce(ie_status_per_dev_w::text, '') = '') or (obter_se_contido_char(ie_status_cirurgia,ie_status_per_dev_w) = 'S'))
		and	nr_sequencia	 	   = C01_w.nr_sequencia;

		qt_atualizar_dev_w	:= qt_material_dec_w;
		
		if (qt_material_w <= qt_material_dec_w) then
		
			qt_atualizar_dev_w	:=	qt_material_w;		
			qt_material_dec_w	:= qt_material_dec_w - qt_material_w;
			qt_atualizar_w		:= 0;
			
		elsif (qt_material_w > qt_material_dec_w) then				
			qt_atualizar_w		:= qt_material_w - qt_material_dec_w;
			qt_material_dec_w	:= qt_material_dec_w - qt_material_dec_w;
		end if;
		
		if (qt_atualizar_dev_w > 0) then
		
			begin	
			
			select	nextval('prescr_material_devolucao_seq')
			into STRICT	nr_seq_devolucao_w
			;

			insert into prescr_material_devolucao(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				nr_seq_prescricao,
				qt_devolucao,
				nr_doc_interno,
				nr_doc_interno_aux,
				ie_tipo_doc_interno,
				ie_tipo_doc_interno_aux,
				cd_material)
			values (
				nr_seq_devolucao_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_prescricao_p,
				C01_w.nr_sequencia,
				qt_atualizar_dev_w,
				CASE WHEN nr_doc_interno_p=0 THEN null  ELSE nr_doc_interno_p END ,
				CASE WHEN nr_doc_interno_aux_p=0 THEN null  ELSE nr_doc_interno_aux_p END ,
				ie_tipo_doc_interno_p,
				ie_tipo_doc_interno_aux_p,
				cd_material_p);
			commit;
			end;	
		
		end if;
		
		if (coalesce(qt_atualizar_w::text, '') = '') then
			qt_atualizar_w		:= 0;
		end if;

		update	prescr_material
		set	qt_material		= qt_atualizar_w,
			qt_total_dispensar	= qt_atualizar_w,
			qt_dose			= qt_atualizar_w,
			qt_unitaria		= qt_atualizar_w
		where 	nr_prescricao		= nr_prescricao_p
		and	((coalesce(cd_kit_material_p,0)	= coalesce(cd_kit_material,0)) or (ie_consiste_kit_w = 'N'))
		and	((coalesce(nr_seq_kit_estoque_p,0) = 0) or (nr_seq_kit_estoque = nr_seq_kit_estoque_p))
		and	((coalesce(nr_seq_reg_kit_estoque_p,0) = 0) or (nr_seq_reg_kit = nr_seq_reg_kit_estoque_p))
		and	((ie_considera_kit_agrup_p = 'S') or (coalesce(nr_seq_kit_estoque::text, '') = ''))
		and	((coalesce(ie_status_per_dev_w::text, '') = '') or (obter_se_contido_char(ie_status_cirurgia,ie_status_per_dev_w) = 'S'))
		and	nr_sequencia		= C01_w.nr_sequencia;
			
		qt_devolver_w	:= (qt_material_w - qt_saldo_p);
			
		end;
	end if;
	
	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE devolver_mat_barras ( nr_prescricao_p bigint, cd_material_p bigint, qt_saldo_p bigint, nr_seq_lote_fornec_p bigint, nr_doc_interno_p bigint, nr_doc_interno_aux_p bigint, ie_tipo_doc_interno_p text, ie_tipo_doc_interno_aux_p text, nm_usuario_p text, cd_kit_material_p bigint default 0, nr_seq_kit_estoque_p bigint default 0, nr_seq_reg_kit_estoque_p bigint default 0, ie_considera_kit_agrup_p text default 'S') FROM PUBLIC;

