-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_titulos_pag_prest ( nr_seq_lote_p bigint, nr_seq_pagamento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* 
Esta procedure foi feita como solução paliativa na OS 404532 - não deve mais ser utilizada 
Edgar 21/08/2014 
 
*/
 
 
nr_seq_pag_prest_w	bigint;
qt_sem_fatura_w		bigint;
ie_paramtro_w		varchar(1);
nr_tit_receber_w	bigint;
nr_tit_pagar_w		bigint;
vl_movimento_w		double precision;
nr_seq_pag_item_w	bigint;
nr_adiant_pago_w	bigint;

c01 CURSOR FOR 
	SELECT	distinct 
		a.nr_sequencia 
	from	pls_pag_prest_vencimento b, 
		pls_pagamento_prestador a 
	where	a.nr_sequencia	= b.nr_seq_pag_prestador 
	and	a.nr_seq_lote	= nr_seq_lote_p 
	and	a.nr_sequencia	= nr_seq_pagamento_p 
	and	coalesce(b.nr_titulo::text, '') = '';

C02 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		b.nr_tit_pagar_origem, 
		b.nr_tit_receber_origem, 
		b.vl_item 
	from	pls_pagamento_item b, 
		pls_pagamento_prestador a 
	where	a.nr_sequencia = b.nr_seq_pagamento 
	and	a.nr_seq_lote = nr_seq_lote_p 
	and	a.nr_sequencia = nr_seq_pagamento_p 
	and ((b.nr_tit_pagar_origem IS NOT NULL AND b.nr_tit_pagar_origem::text <> '') or (b.nr_tit_receber_origem IS NOT NULL AND b.nr_tit_receber_origem::text <> ''));

C03 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		b.nr_adiant_pago_origem, 
		abs(b.vl_item) 
	from	pls_pagamento_item b, 
		pls_pagamento_prestador a 
	where	a.nr_sequencia = b.nr_seq_pagamento 
	and	a.nr_seq_lote = nr_seq_lote_p 
	and	a.nr_sequencia = nr_seq_pagamento_p 
	and	(b.nr_adiant_pago_origem IS NOT NULL AND b.nr_adiant_pago_origem::text <> '');


BEGIN 
select	count(*) 
into STRICT	qt_sem_fatura_w 
from	pls_pagamento_prestador 
where	nr_seq_lote	= nr_seq_lote_p 
and	nr_sequencia	= nr_seq_pagamento_p 
and	coalesce(nr_nota_fiscal::text, '') = '';
 
ie_paramtro_w	:= coalesce(Obter_Valor_Param_Usuario(1282, 1, Obter_Perfil_Ativo, nm_usuario_p, 0), 'S');
 
if (coalesce(qt_sem_fatura_w,0) <> 0)	and (coalesce(ie_paramtro_w,'S')	= 'N') 	then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 267298, null ); /* O prestador está sem nota fiscal! */
end if;
 
open c01;
loop 
fetch c01 into 
	nr_seq_pag_prest_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	CALL pls_gerar_titulo_venc_lote_pag(nr_seq_pag_prest_w,nm_usuario_p);
	end;
end loop;
close c01;
 
 
/* Baixar os títulos vinculados aos eventos */
 
open C02;
loop 
fetch C02 into 
	nr_seq_pag_item_w, 
	nr_tit_pagar_w, 
	nr_tit_receber_w, 
	vl_movimento_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	CALL pls_baixar_titulos_eventos(nr_seq_pag_item_w,nr_tit_pagar_w,nr_tit_receber_w,vl_movimento_w,nm_usuario_p);
	end;
end loop;
close C02;
/* Fim baixa títulos */
 
 
/* Devolver adiantamentos pagos */
 
open C03;
loop 
fetch C03 into 
	nr_seq_pag_item_w, 
	nr_adiant_pago_w, 
	vl_movimento_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	CALL pls_devolver_adiant_evento(nr_seq_pag_item_w,nr_adiant_pago_w,vl_movimento_w,nm_usuario_p);
	end;
end loop;
close C03;
/* Fim devolução adiantamentos */
 
 
update	pls_lote_pagamento 
set	dt_geracao_titulos	= clock_timestamp() 
where	nr_sequencia		= nr_seq_lote_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_titulos_pag_prest ( nr_seq_lote_p bigint, nr_seq_pagamento_p bigint, nm_usuario_p text) FROM PUBLIC;

