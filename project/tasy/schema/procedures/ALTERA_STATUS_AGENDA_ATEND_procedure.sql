-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE altera_status_agenda_atend (NM_USUARIO_P text, CD_ESTABELECIMENTO_P bigint, NR_SEQ_AGENDA_P bigint, IE_AGENDA_P text, IE_STATUS_P text DEFAULT 'E') AS $body$
DECLARE


  ie_status_atend_w  funcao_param_usuario.vl_parametro%type;
  nr_atend_agenda_w  agenda_paciente.nr_atendimento%type;
  nr_seq_agenda_w    agenda_paciente.nr_sequencia%type;
  dt_agenda_ww       agenda_paciente.dt_agenda%type;
  cd_agenda_ww       agenda_paciente.cd_agenda%type;
  hr_inicio_ww       agenda_paciente.hr_inicio%type;
  ie_possui_agenda_w bigint := 0;
  ie_status_w        agenda_paciente.ie_status_agenda%type;
  nr_seq_hora_ww     agenda_consulta.nr_seq_hora%type;

  c01 CURSOR FOR
    SELECT nr_sequencia
      from agenda_paciente
     where nr_sequencia <> nr_seq_agenda_p
       and nr_atendimento = nr_atend_agenda_w
     order by nr_sequencia;

  C04 CURSOR FOR
    SELECT nr_sequencia
      from agenda_consulta
     where nr_atendimento = nr_atend_agenda_w
     order by nr_sequencia;

  c03 CURSOR FOR
    SELECT nr_sequencia
      from agenda_paciente a, agenda b
     where a.nr_sequencia <> nr_seq_agenda_p
       and a.nr_atendimento = nr_atend_agenda_w
       and a.cd_agenda = b.cd_agenda
       and b.cd_tipo_agenda = CASE WHEN ie_agenda_p='CI' THEN  1 WHEN ie_agenda_p='E' THEN  2  ELSE 0 END
     order by nr_sequencia;

  c05 CURSOR FOR
    SELECT nr_sequencia
      from agenda_paciente
     where nr_sequencia <> nr_seq_agenda_p
       and nr_atendimento = nr_atend_agenda_w
       and ie_status_agenda in ('CN', 'M', 'N', 'P')
     order by nr_sequencia;


BEGIN
  /* alterar status agendas atendimento */

  ie_status_w := ie_status_p;

  select coalesce(max(obter_valor_param_usuario(820,
                                           24,
                                           obter_perfil_ativo,
                                           nm_usuario_p,
                                           cd_estabelecimento_p)),
             'N')
    into STRICT ie_status_atend_w
;

  if (ie_status_atend_w = 'S') then
    -- Todos os agendamentos, independente do tipo de agenda
    select coalesce(max(nr_atendimento), 0)
      into STRICT nr_atend_agenda_w
      from agenda_paciente
     where nr_sequencia = nr_seq_agenda_p;

    if (nr_atend_agenda_w > 0) then
      open c01;
      loop
        fetch c01
          into nr_seq_agenda_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
        begin

          select cd_agenda, dt_agenda, hr_inicio
            into STRICT cd_agenda_ww, dt_agenda_ww, hr_inicio_ww
            from agenda_paciente
           where nr_sequencia = nr_seq_agenda_w;

          --Verificar se ja existe outro registro "Executado" com a mesma data(AGEPACI_UK)
          ie_possui_agenda_w := 0;
          select count(*)
            into STRICT ie_possui_agenda_w
            from agenda_paciente
           where cd_agenda = cd_agenda_ww
             and dt_agenda = dt_agenda_ww
             and to_char(hr_inicio, 'hh24:mi') =
                 to_char(hr_inicio_ww, 'hh24:mi')
             and ie_status_agenda = ie_status_w
             and nr_sequencia <> nr_seq_agenda_w;

          if (ie_possui_agenda_w = 0) then
            update agenda_paciente
               set ie_status_agenda = ie_status_w
             where nr_sequencia = nr_seq_agenda_w;
          end if;

          if (ie_status_w = 'AD') then
          
            update agenda_paciente
               set dt_atendido = clock_timestamp()
             where nr_sequencia = nr_seq_agenda_w;

          elsif (ie_status_w = 'O') then
            update agenda_paciente
               set dt_atendimento = clock_timestamp()
             where nr_sequencia = nr_seq_agenda_w;
          end if;

        end;
      end loop;
      close c01;

      open C04;
      loop
        fetch C04
          into nr_seq_agenda_w;
        EXIT WHEN NOT FOUND; /* apply on C04 */
        begin
          select cd_agenda, dt_agenda, nr_seq_hora
            into STRICT cd_agenda_ww, dt_agenda_ww, nr_seq_hora_ww
            from agenda_consulta
           where nr_sequencia = nr_seq_agenda_w;

          --Verificar se ja existe outro registro "Executado" com a mesma data(AGECONS_UK)
          ie_possui_agenda_w := 0;
          select count(*)
            into STRICT ie_possui_agenda_w
            from agenda_consulta
           where cd_agenda = cd_agenda_ww
             and dt_agenda = dt_agenda_ww
             and ie_status_agenda = ie_status_w
             and nr_seq_hora = nr_seq_hora_ww
             and nr_sequencia <> nr_seq_agenda_w;

          if (ie_possui_agenda_w = 0) then
            update agenda_consulta
               set ie_status_agenda = ie_status_w
             where nr_sequencia = nr_seq_agenda_w;
          end if;

          if (ie_status_w = 'AD') then
            update agenda_consulta
               set dt_status_atendido = clock_timestamp()
             where nr_sequencia = nr_seq_agenda_w;
          elsif (ie_status_w = 'O') then
            update agenda_consulta
               set dt_consulta = clock_timestamp()
             where nr_sequencia = nr_seq_agenda_w;
          end if;

        end;
      end loop;
      close C04;
    end if;
  elsif (ie_status_atend_w = 'T') then
    -- Somente para o mesmo tipo de agenda
    select coalesce(max(nr_atendimento), 0)
      into STRICT nr_atend_agenda_w
      from agenda_paciente
     where nr_sequencia = nr_seq_agenda_p;

    if (nr_atend_agenda_w > 0) then
      open c03;
      loop
        fetch c03
          into nr_seq_agenda_w;
        EXIT WHEN NOT FOUND; /* apply on c03 */
        begin

          select cd_agenda, dt_agenda, hr_inicio
            into STRICT cd_agenda_ww, dt_agenda_ww, hr_inicio_ww
            from agenda_paciente
           where nr_sequencia = nr_seq_agenda_w;

          --Verificar se ja existe outro registro "Executado" com a mesma data(AGEPACI_UK)
          ie_possui_agenda_w := 0;
          if (ie_status_w = 'E') then
            select count(*)
              into STRICT ie_possui_agenda_w
              from agenda_paciente
             where cd_agenda = cd_agenda_ww
               and dt_agenda = dt_agenda_ww
               and to_char(hr_inicio, 'hh24:mi') =
                   to_char(hr_inicio_ww, 'hh24:mi')
               and ie_status_agenda = ie_status_w
               and nr_sequencia <> nr_seq_agenda_w;
          end if;

          if (ie_possui_agenda_w = 0) then
            update agenda_paciente
               set ie_status_agenda = ie_status_w,
               dt_executada = CASE WHEN ie_status_w='E' THEN  clock_timestamp()  ELSE dt_executada END 
             where nr_sequencia = nr_seq_agenda_w;
          end if;

          if (ie_status_w = 'AD') then
          
            update agenda_paciente
               set dt_atendido = clock_timestamp()
             where nr_sequencia = nr_seq_agenda_w;

          elsif (ie_status_w = 'O') then
            update agenda_paciente
               set dt_atendimento = clock_timestamp()
             where nr_sequencia = nr_seq_agenda_w;
          end if;

        end;
      end loop;
      close c03;
    end if;
  elsif (ie_status_atend_w = 'L') then
    -- Todos os agendamentos com status em aberto, independente do tipo de agenda
    begin
      select coalesce(max(nr_atendimento), 0)
        into STRICT nr_atend_agenda_w
        from agenda_paciente
       where nr_sequencia = nr_seq_agenda_p;

      if (nr_atend_agenda_w > 0) then
        open C05;
        loop
          fetch c05
            into nr_seq_agenda_w;
          EXIT WHEN NOT FOUND; /* apply on c05 */
          begin

            select cd_agenda, dt_agenda, hr_inicio
              into STRICT cd_agenda_ww, dt_agenda_ww, hr_inicio_ww
              from agenda_paciente
             where nr_sequencia = nr_seq_agenda_w;

            --Verificar se ja existe outro registro "Executado" com a mesma data(AGEPACI_UK)
            ie_possui_agenda_w := 0;
            select count(*)
              into STRICT ie_possui_agenda_w
              from agenda_paciente
             where cd_agenda = cd_agenda_ww
               and dt_agenda = dt_agenda_ww
               and to_char(hr_inicio, 'hh24:mi') =
                   to_char(hr_inicio_ww, 'hh24:mi')
               and ie_status_agenda = ie_status_w
               and nr_sequencia <> nr_seq_agenda_w;

            if (ie_possui_agenda_w = 0) then
              update agenda_paciente
                 set ie_status_agenda = ie_status_w
               where nr_sequencia = nr_seq_agenda_w;
            end if;

            if (ie_status_w = 'AD') then
            
              update agenda_paciente
                 set dt_atendido = clock_timestamp()
               where nr_sequencia = nr_seq_agenda_w;

            elsif (ie_status_w = 'O') then
              update agenda_paciente
                 set dt_atendimento = clock_timestamp()
               where nr_sequencia = nr_seq_agenda_w;
            end if;

          end;
        end loop;
        close c05;

        open C04;
        loop
          fetch C04
            into nr_seq_agenda_w;
          EXIT WHEN NOT FOUND; /* apply on C04 */
          begin
            select cd_agenda, dt_agenda, nr_seq_hora
              into STRICT cd_agenda_ww, dt_agenda_ww, nr_seq_hora_ww
              from agenda_consulta
             where nr_sequencia = nr_seq_agenda_w;

            --Verificar se ja existe outro registro "Executado" com a mesma data(AGECONS_UK)
            ie_possui_agenda_w := 0;
            select count(*)
              into STRICT ie_possui_agenda_w
              from agenda_consulta
             where cd_agenda = cd_agenda_ww
               and dt_agenda = dt_agenda_ww
               and ie_status_agenda = ie_status_w
               and nr_seq_hora = nr_seq_hora_ww
               and nr_sequencia <> nr_seq_agenda_w;

            if (ie_possui_agenda_w = 0) then
              update agenda_consulta
                 set ie_status_agenda = ie_status_w
               where nr_sequencia = nr_seq_agenda_w;
            end if;

            if (ie_status_w = 'AD') then
              update agenda_consulta
                 set dt_status_atendido = clock_timestamp()
               where nr_sequencia = nr_seq_agenda_w;
            elsif (ie_status_w = 'O') then
              update agenda_consulta
                 set dt_consulta = clock_timestamp()
               where nr_sequencia = nr_seq_agenda_w;
            end if;

          end;
        end loop;
        close C04;
      end if;
    end;
  end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE altera_status_agenda_atend (NM_USUARIO_P text, CD_ESTABELECIMENTO_P bigint, NR_SEQ_AGENDA_P bigint, IE_AGENDA_P text, IE_STATUS_P text DEFAULT 'E') FROM PUBLIC;

