-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hsl_ger_situacao_guias (nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_convenio_p bigint, cd_estab_p bigint, ie_tipo_autorizacao_p text) AS $body$
DECLARE


vl_item_w			double precision;
vl_item_w2			double precision;
nr_interno_conta_w		material_atend_paciente.nr_interno_conta%type;
nr_seq_mat_autor_w		material_atend_paciente.nr_seq_mat_autor%type;
nr_prescricao_w			material_atend_paciente.nr_prescricao%type;
nr_atendimento_w		material_atend_paciente.nr_atendimento%type;
nr_sequencia_prescricao_w	material_atend_paciente.nr_sequencia_prescricao%type;
cd_item_w			bigint;
cd_procedimento_w		procedimento_paciente.cd_procedimento%type;
ie_proc_mat_w			smallint;
qt_guias_nao_autorizadas_w	integer;
cd_pessoa_fisica_w		atendimento_paciente.cd_pessoa_fisica%type;
cd_estabelecimento_w		atendimento_paciente.cd_estabelecimento%type;
cd_unidade_w			varchar(100);
dt_entrada_w			atendimento_paciente.dt_entrada%type;
dt_alta_w			atendimento_paciente.dt_alta%type;
dt_retorno_w			autorizacao_convenio.dt_retorno%type;
cd_medico_resp_w		atendimento_paciente.cd_medico_resp%type;
ie_tipo_autorizacao_w		autorizacao_convenio.ie_tipo_autorizacao%type;
dt_cancelamento_w		conta_paciente.dt_cancelamento%type;
nr_sequencia_w			autorizacao_convenio.nr_sequencia%type;
nr_count_w			bigint;


C01 CURSOR FOR

	SELECT 	a.nr_atendimento,
		a.cd_pessoa_fisica,
		a.cd_estabelecimento,
		substr(u.cd_unidade_basica ||' '||u.cd_unidade_compl,1,100) cd_unidade,
		trunc(a.dt_entrada) dt_entrada,
		a.dt_alta,
		c.dt_retorno,
		a.cd_medico_resp,
		c.ie_tipo_autorizacao
	from    atendimento_paciente a,
		conta_paciente b,
		atend_categoria_convenio e,
		atend_paciente_unidade d,
		unidade_atendimento u,
		setor_atendimento s,
		autorizacao_convenio c,
		estagio_autorizacao f
	where 	c.nr_atendimento = a.nr_atendimento
	and	f.nr_sequencia   = c.nr_seq_estagio
	and	a.ie_tipo_atendimento = 1
	and	a.nr_atendimento   = b.nr_atendimento
	and	s.cd_setor_atendimento	= u.cd_setor_atendimento
	and	u.nr_atendimento	= a.nr_atendimento
	and	u.nr_atendimento	= d.nr_atendimento
	and	u.dt_entrada_unidade	= d.dt_entrada_unidade
	and	s.cd_classif_setor in (3,4,11,12)
	and	((a.nr_Atendimento = nr_atendimento_p) or (coalesce(nr_atendimento_p,0) = 0))
	and	c.dt_retorno between dt_inicial_p and fim_dia(dt_final_p)
	and	((e.cd_convenio	= cd_convenio_p) or (coalesce(cd_convenio_p,0) = 0))
	and	((a.cd_estabelecimento = cd_estab_p) or (coalesce(cd_estab_p,0) = 0))
	and	((c.ie_tipo_autorizacao = ie_tipo_autorizacao_p) or (coalesce(ie_tipo_autorizacao_p,0) = '0'))
	and	e.nr_seq_interno = (SELECT coalesce(MAX(nr_seq_interno),0)
				    FROM 	atend_categoria_convenio z
				    WHERE	z.nr_atendimento = a.nr_atendimento
				     AND 	z.dt_inicio_vigencia =	(SELECT MAX(x.dt_inicio_vigencia)
									FROM 	atend_categoria_convenio x
									WHERE 	x.nr_atendimento = a.nr_atendimento))
	and   Exists (select 1
		     from	conta_paciente_etapa x
		     where	x.nr_interno_conta = b.nr_interno_conta
		     and 	coalesce(x.dt_fim_etapa::text, '') = ''
		     and	x.nr_seq_etapa = 207)
	and   coalesce(c.dt_fim_vigencia,clock_timestamp()) = (select 	max(y.dt_fim_vigencia)
						from 	autorizacao_convenio y
						where	y.nr_atendimento = c.nr_atendimento)
	and   coalesce(a.dt_cancelamento::text, '') = ''
	group by a.nr_atendimento,
		 a.cd_pessoa_fisica,
		 a.cd_estabelecimento,
		 substr(u.cd_unidade_basica ||' '||u.cd_unidade_compl,1,100),
		 trunc(a.dt_entrada),
		 a.dt_alta,
		 c.dt_retorno,
		 a.cd_medico_resp,
		 c.ie_tipo_autorizacao
	order by  a.nr_atendimento;

C02 CURSOR FOR
	SELECT 	distinct 1 ie_proc_mat,
		coalesce(a.nr_seq_mat_autor,0),
		coalesce(a.nr_prescricao,0),
		coalesce(a.nr_sequencia_prescricao,0),
		coalesce(a.cd_material,0)
	from	material_atend_paciente a
	where	a.nr_atendimento =  nr_atendimento_w
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	group by 1,
		coalesce(a.nr_seq_mat_autor,0),
		coalesce(a.nr_prescricao,0),
		coalesce(a.nr_sequencia_prescricao,0),
		coalesce(a.cd_material,0)
	
union all

	SELECT 	distinct 2 ie_proc_mat,
		coalesce(a.nr_seq_proc_autor,0),
		coalesce(a.nr_prescricao,0),
		coalesce(a.nr_sequencia_prescricao,0),
		coalesce(a.cd_procedimento,0)
	from	procedimento_paciente a
	where	a.nr_atendimento =  nr_atendimento_w
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	group by 2,
		coalesce(a.nr_seq_proc_autor,0),
		coalesce(a.nr_prescricao,0),
		coalesce(a.nr_sequencia_prescricao,0),
		coalesce(a.cd_procedimento,0);


BEGIN

select	count(table_name)
into STRICT	nr_count_w
from	user_tables
where	upper(table_name) = 'W_HSL_GER_SITUACAO_GUIA';

if (nr_count_w	= 0) then
	   CALL exec_sql_dinamico(nm_usuario_p,'create table w_hsl_ger_situacao_guia(nr_atendimento                                     number(10),
										vl_pendente                                        number(15,2),
										qt_guias_nao_autorizadas                           number(5),
										nr_sequencia_autor                                 number(10),
										cd_pessoa_fisica                                   varchar2(10),
										cd_estabelecimento                                 number(4),
										cd_unidade                                         varchar2(100),
										dt_entrada                                         date,
										dt_alta                                            date,
										dt_retorno                                         date,
										cd_medico_resp                                     varchar2(10),
										ie_tipo_autorizacao                                varchar2(2),
										nm_usuario                                         varchar2(15))');
else
	CALL exec_sql_dinamico(nm_usuario_p,'delete from w_hsl_ger_situacao_guia where nm_usuario = ' || chr(39) || nm_usuario_p || chr(39));
end if;

open C01;
loop
fetch C01 into
	nr_atendimento_w,
	cd_pessoa_fisica_w,
	cd_estabelecimento_w,
	cd_unidade_w,
	dt_entrada_w,
	dt_alta_w,
	dt_retorno_w,
	cd_medico_resp_w,
	ie_tipo_autorizacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	vl_item_w2	:= 0;
	vl_item_w	:= 0;

	open C02;
	loop
	fetch C02 into
		ie_proc_mat_w,
		nr_seq_mat_autor_w,
		nr_prescricao_w,
		nr_sequencia_prescricao_w,
		cd_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		RAISE NOTICE '%', nr_sequencia_w;

		if (ie_proc_mat_w = 1) then

			select  sum(coalesce(b.vl_material,0))
			into STRICT	vl_item_w
			from    material_atend_paciente b
			where   coalesce(b.cd_motivo_exc_conta::text, '') = ''
			and	exists (SELECT	1
					from	autorizacao_convenio x,
						material_autorizado y,
						estagio_autorizacao z
					where	x.nr_sequencia = y.nr_sequencia_autor
					and	z.nr_sequencia = x.nr_seq_estagio
					and	z.ie_interno not in ('10','70','90')
					and	y.cd_material = b.cd_material
					and	y.nr_prescricao = nr_prescricao_w
					and	x.nr_atendimento = nr_atendimento_w
					and 	y.nr_seq_prescricao = nr_sequencia_prescricao_w)
					and	b.nr_atendimento = nr_atendimento_w;

		end if;

		if (ie_proc_mat_w = 2) then

			select  sum(coalesce(b.vl_procedimento,0))
			into STRICT	vl_item_w
			from    procedimento_paciente b
			where   coalesce(b.cd_motivo_exc_conta::text, '') = ''
			and	exists (SELECT	1
					from	autorizacao_convenio x,
						procedimento_autorizado y,
						estagio_autorizacao z
					where	x.nr_sequencia = y.nr_sequencia_autor
					and	z.nr_sequencia = x.nr_seq_estagio
					and	z.ie_interno not in ('10','70','90')
					and	y.cd_procedimento = b.cd_procedimento
					and	y.nr_sequencia = nr_seq_mat_autor_w
					and	x.nr_atendimento = nr_atendimento_w
					
union all

					SELECT	1
					from	autorizacao_convenio x,
						procedimento_autorizado y,
						estagio_autorizacao z
					where	x.nr_sequencia = y.nr_sequencia_autor
					and	z.nr_sequencia = x.nr_seq_estagio
					and	z.ie_interno not in ('10','70','90')
					and	y.cd_procedimento = b.cd_procedimento
					and 	y.nr_seq_prescricao = nr_sequencia_prescricao_w
					and	y.nr_prescricao = nr_prescricao_w
					and	x.nr_atendimento = nr_atendimento_w)
			and	b.nr_atendimento = nr_atendimento_w;

		end if;

		vl_item_w2 := coalesce(vl_item_w,0) + coalesce(vl_item_w2,0);

		end;
	end loop;
	close C02;


	select	count(y.nr_interno_conta)
	into STRICT	qt_guias_nao_autorizadas_w
	from	conta_paciente y,
		conta_paciente_etapa z
	where	ie_status_acerto = 1
	and	y.nr_atendimento = nr_atendimento_w
	and 	y.nr_interno_conta = z.nr_interno_conta
	and 	z.nr_seq_etapa = 207
	and 	coalesce(z.dt_fim_etapa::text, '') = ''
	and	not exists (SELECT 1
			   from	autorizacao_convenio z
			  where	z.nr_atendimento = y.nr_atendimento
			    and	ie_tipo_autorizacao in (1,2)
			    and	z.nr_atendimento = nr_atendimento_w
			    and	nr_seq_estagio = 2);

	CALL exec_sql_dinamico(nm_usuario_p, ' insert into w_hsl_ger_situacao_guia
							(nr_atendimento,
							nr_sequencia_autor,
							qt_guias_nao_autorizadas,
							vl_pendente,
							cd_pessoa_fisica,
							cd_estabelecimento,
							cd_unidade,
							dt_entrada,
							dt_alta,
							dt_retorno,
							cd_medico_resp,
							ie_tipo_autorizacao,
							nm_usuario)
							values
							('
						||	nr_atendimento_w 		|| ','
						||	nr_seq_mat_autor_w 		|| ','
						||	qt_guias_nao_autorizadas_w	|| ','
						||	replace(vl_item_w2,',','.')	|| ','
						|| chr(39) || cd_pessoa_fisica_w 		 || chr(39) || ','
						||	cd_estabelecimento_w		|| ','
						|| chr(39) || cd_unidade_w 			 || chr(39)	|| ','
						|| chr(39) || to_char(dt_entrada_w,'dd/mm/yyyy') || chr(39) 	|| ','
						|| chr(39) || to_char(dt_alta_w,'dd/mm/yyyy') 	 || chr(39)	|| ','
						|| chr(39) || to_char(dt_retorno_w,'dd/mm/yyyy') || chr(39)|| ','
						|| chr(39) || cd_medico_resp_w 			 || chr(39) || ','
						|| chr(39) || ie_tipo_autorizacao_w || chr(39) || ','
					        || chr(39) || nm_usuario_p || chr(39) || ')');

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hsl_ger_situacao_guias (nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_convenio_p bigint, cd_estab_p bigint, ie_tipo_autorizacao_p text) FROM PUBLIC;

