-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mens_bonif_pag ( nr_seq_mensalidade_p bigint, nr_seq_pagador_p bigint, nm_usuario_p text) AS $body$
DECLARE


tx_bonificacao_w		double precision;
vl_bonificacao_w		double precision;
ie_tipo_item_w			varchar(255);
vl_bonific_total_w		double precision := 0;
vl_item_w			double precision := 0;
ds_observacao_w			varchar(4000);
ie_alteracao_vinculacao_w	varchar(1);
nr_seq_vinculo_bonificacao_w	bigint;
nr_seq_bonificacao_w		bigint;
nm_bonificacao_w		varchar(100);
dt_mesano_referencia_w		timestamp;
ie_lancamento_mensalidade_w	varchar(2);
ie_tipo_regra_w			varchar(2);
qt_bonificacao_w		bigint;
qt_segurado_mens_w		bigint;
ie_segurado_w			bigint;
vl_item_mens_w			double precision;
vl_total_preco_pre_w		double precision;
nr_seq_mensalidade_seg_w	bigint;
vl_preco_pre_segurado_w		double precision;
vl_inserido_w			double precision;
vl_item_lanc_w			double precision;
ie_demitido_exonerado_w		varchar(10);
ie_acao_contrato_w		varchar(10);
ie_tipo_vidas_contrato_w	varchar(10);
nr_contrato_principal_w		bigint;
qt_vidas_trabalhista_w		bigint;
qt_vidas_trabalhista_princ_w	bigint;
qt_vidas_ww			bigint;
qt_vidas_w			bigint;
nr_seq_desconto_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_intercambio_w		bigint;
ie_somente_pagador_w		varchar(10);
nr_seq_item_mensalidade_w	pls_mensalidade_seg_item.nr_sequencia%type;

C01 CURSOR FOR /* Gerar a bonificação para o Pagador */
	SELECT	b.nr_sequencia,
		c.ie_tipo_item,
		c.vl_bonificacao,
		c.tx_bonificacao,
		b.ie_alteracao_vinculacao,
		a.nr_sequencia,
		b.ie_lancamento_mensalidade,
		c.ie_tipo_regra,
		b.nm_bonificacao,
		coalesce(c.ie_demitido_exonerado,'N'),
		c.ie_acao_contrato,
		c.ie_tipo_vidas_contrato,
		c.nr_seq_desconto
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	a.ie_lancamento_bonificacao	= 'P'
	and	a.nr_seq_pagador	= nr_seq_pagador_p
	and	((dt_mesano_referencia_w	>= a.dt_inicio_vigencia and (a.dt_inicio_vigencia IS NOT NULL AND a.dt_inicio_vigencia::text <> '')) or (coalesce(a.dt_inicio_vigencia::text, '') = ''))
	and	((dt_mesano_referencia_w	< a.dt_fim_vigencia and (a.dt_fim_vigencia IS NOT NULL AND a.dt_fim_vigencia::text <> '')) or (coalesce(a.dt_fim_vigencia::text, '') = ''));

C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_mensalidade_segurado a
	where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p
	and	((exists (SELECT	1
			from	pls_mensalidade_seg_item x
			where	x.nr_seq_mensalidade_seg	= a.nr_sequencia)) or (ie_somente_pagador_w = 'S'));


BEGIN

select	count(1)
into STRICT	qt_bonificacao_w
from	pls_bonificacao_vinculo
where	nr_seq_pagador	= nr_seq_pagador_p
and	ie_lancamento_bonificacao = 'P';

if (qt_bonificacao_w > 0) then

	dt_mesano_referencia_w	:= pls_store_data_mens_pck.get_dt_referencia;
	nr_seq_contrato_w	:= pls_store_data_mens_pck.get_nr_seq_contrato_pag;
	nr_seq_intercambio_w	:= pls_store_data_mens_pck.get_nr_seq_pagador_intercambio;

	open C01;
	loop
	fetch C01 into
		nr_seq_bonificacao_w,
		ie_tipo_item_w,
		vl_bonificacao_w,
		tx_bonificacao_w,
		ie_alteracao_vinculacao_w,
		nr_seq_vinculo_bonificacao_w,
		ie_lancamento_mensalidade_w,
		ie_tipo_regra_w,
		nm_bonificacao_w,
		ie_demitido_exonerado_w,
		ie_acao_contrato_w,
		ie_tipo_vidas_contrato_w,
		nr_seq_desconto_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		ie_segurado_w		:= 0;
		vl_inserido_w		:= 0;
		vl_bonific_total_w	:= 0;
		if (ie_tipo_regra_w = 'M') then
			if (ie_alteracao_vinculacao_w = 'S') then
				select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
					coalesce(max(tx_bonificacao),tx_bonificacao_w)
				into STRICT	vl_bonificacao_w,
					tx_bonificacao_w
				from	pls_bonificacao_vinculo	a,
					pls_bonificacao		b
				where	a.nr_seq_pagador = nr_seq_pagador_p
				and	a.nr_seq_bonificacao = b.nr_sequencia
				and	b.ie_alteracao_vinculacao = 'S'
				and	a.nr_sequencia = nr_seq_vinculo_bonificacao_w
				and (dt_mesano_referencia_w between coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));
			end if;

		elsif (ie_tipo_regra_w = 'D') then

			tx_bonificacao_w	:= 0;
			vl_bonificacao_w	:= 0;

			/* Quantidade de vidas do contrato e contrato principal */

			if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
				select	max(nr_contrato_principal)
				into STRICT	nr_contrato_principal_w
				from	pls_contrato
				where	nr_sequencia	= nr_seq_contrato_w;

				if (coalesce(ie_demitido_exonerado_w,'N') = 'S') then
					if (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						/* Quantidade de vidas da familia do pagador */

						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_trabalhista_w
						from	pls_segurado	a
						where	a.nr_seq_pagador = nr_seq_pagador_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
					else
						/* Quantidade de vidas do contrato e contrato principal com e sem situação trabalhista */

						select	count(1)
						into STRICT	qt_vidas_trabalhista_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_seq_contrato_w) or (a.nr_contrato_principal = nr_seq_contrato_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

						if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
							select	count(1)
							into STRICT	qt_vidas_trabalhista_princ_w
							from	pls_contrato	a,
								pls_segurado	b
							where	b.nr_seq_contrato	= a.nr_sequencia
							and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
							and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
							and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
							and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
						end if;
					end if;

					qt_vidas_trabalhista_w	:= coalesce(qt_vidas_trabalhista_w,0) + coalesce(qt_vidas_trabalhista_princ_w,0);
					qt_vidas_ww		:= qt_vidas_trabalhista_w;
				elsif (coalesce(ie_demitido_exonerado_w,'N') = 'N') then
					if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					elsif (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_w
						from	pls_segurado	a
						where	a.nr_seq_pagador = nr_seq_pagador_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(a.ie_situacao_trabalhista::text, '') = '';
					else
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_seq_contrato_w) or (a.nr_contrato_principal = nr_seq_contrato_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					end if;

					qt_vidas_ww	:= qt_vidas_w;
				end if;
			elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
				select	count(1)
				into STRICT	qt_vidas_w
				from	pls_intercambio	a,
					pls_segurado	b
				where	b.nr_seq_intercambio	= a.nr_sequencia
				and	a.nr_sequencia		= nr_seq_intercambio_w
				and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
				and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
				and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

				qt_vidas_ww	:= qt_vidas_w;
			end if;
			/* Fim qt vidas */

			select	max(nr_sequencia)
			into STRICT	nr_seq_regra_w
			from	pls_preco_regra
			where	nr_seq_regra = nr_seq_desconto_w
			and	qt_vidas_ww between coalesce(qt_min_vidas,qt_vidas_ww) and coalesce(qt_max_vidas,qt_vidas_ww);

			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				select	max(tx_desconto),
					max(vl_desconto)
				into STRICT	tx_bonificacao_w,
					vl_bonificacao_w
				from	pls_preco_regra
				where	nr_sequencia	= nr_seq_regra_w;
			end if;
		end if;

		if	((coalesce(tx_bonificacao_w,0) <> 0) or (coalesce(vl_bonificacao_w,0) <> 0)) then
			select	sum(a.vl_item)
			into STRICT	vl_item_w
			from	pls_mensalidade_seg_item	a,
				pls_mensalidade_segurado	b,
				pls_mensalidade			c
			where	a.nr_seq_mensalidade_seg = b.nr_sequencia
			and	b.nr_seq_mensalidade	= c.nr_sequencia
			and	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S'
			and	c.nr_sequencia = nr_seq_mensalidade_p;

			if (coalesce(vl_item_w,0) <> 0) then
				vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * coalesce(vl_item_w,0)) + coalesce(vl_bonificacao_w,0));
			end if;

			ds_observacao_w := 'Bonificação gerada por: '||nm_bonificacao_w||', vinculado ao pagador.';

			if	(vl_bonific_total_w <> 0 AND ie_lancamento_mensalidade_w = 'D') then

				ie_somente_pagador_w	:= 'N';

				select	count(1)
				into STRICT	qt_segurado_mens_w
				from	pls_mensalidade_segurado a
				where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p
				and	exists (SELECT	1
						from	pls_mensalidade_seg_item x
						where	x.nr_seq_mensalidade_seg	= a.nr_sequencia);

				if (qt_segurado_mens_w = 0) then
					select	count(1)
					into STRICT	qt_segurado_mens_w
					from	pls_mensalidade_segurado a
					where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p;
					ie_somente_pagador_w	:= 'S';
				end if;

				open C02;
				loop
				fetch C02 into
					nr_seq_mensalidade_seg_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					ie_segurado_w	:= ie_segurado_w + 1;

					select	sum(a.vl_item)
					into STRICT	vl_preco_pre_segurado_w
					from	pls_mensalidade_seg_item	a,
						pls_mensalidade_segurado	b
					where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
					and	b.nr_sequencia			= nr_seq_mensalidade_seg_w
					and	pls_obter_item_mens(ie_tipo_item_w,a.ie_tipo_item) = 'S';

					vl_item_mens_w	:= round((coalesce(vl_preco_pre_segurado_w,0)/coalesce(vl_item_w,0))*vl_bonific_total_w,2);

					if (ie_segurado_w	= qt_segurado_mens_w) then
						vl_item_mens_w	:= vl_bonific_total_w - vl_inserido_w;
					end if;

					vl_item_lanc_w	:= coalesce(vl_item_mens_w,0)*-1;

					nr_seq_item_mensalidade_w := null;

					nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('14', nm_usuario_p, null, null, ds_observacao_w, null, null, null, null, 'P', null, null, nr_seq_vinculo_bonificacao_w, null, null, null, null, nr_seq_mensalidade_seg_w, nr_seq_mensalidade_p, null, null, null, null, null, null, null, null, null, null, null, null, vl_item_lanc_w, nr_seq_item_mensalidade_w);

					if (nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '') then
						vl_inserido_w	:= coalesce(vl_inserido_w,0) + vl_item_mens_w;
					end if;
					end;
				end loop;
				close C02;
			end if;
		end if;
		end;
	end loop;
	close C01;
end if;

/* Não pode dar commit */

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mens_bonif_pag ( nr_seq_mensalidade_p bigint, nr_seq_pagador_p bigint, nm_usuario_p text) FROM PUBLIC;

