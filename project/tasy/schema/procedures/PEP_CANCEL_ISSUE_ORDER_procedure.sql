-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pep_cancel_issue_order ( nr_seq_evento_p protocolo_int_pac_evento.nr_sequencia%type, nr_seq_gqa_acao_p gqa_acao.nr_sequencia%type) is nm_usuario_w varchar(30) RETURNS varchar AS $body$
DECLARE


ds_justificativa_w varchar(250);

BEGIN

ds_justificativa_w := replace(obter_desc_expressao(509210),'#@DT_INATIVACAO#@',clock_timestamp());
ds_justificativa_w := replace(ds_justificativa_w, '#@NM_USUARIO_INATIVACAO#@',nm_usuario_w);

return	ds_justificativa_w;

end;



begin

  nm_usuario_w	:= wheb_usuario_pck.get_nm_usuario;

	for c01_w in c01 loop
	begin
	
	if (c01_w.ds_issue_type = IS_ORDER_NOT_EX) then

	/*
	- ORDERS CRIADAS MAS NAO EXECUTADAS (SEM DT_LIBERACAO)
	*/
		
		IF c01_w.TABLE_NAME = 'DIAGNOSTICO_DOENCA' THEN

			CALL INATIVA_DIAGNOSTICO_PACIENTE(
				nr_atendimento_p => c01_w.nr_atendimento,
				dt_diagnostico_p => c01_w.dt_diagnostico, 
				cd_doenca_p => c01_w.cd_doenca, 
				nm_usuario_p => nm_usuario_w);
				
		ELSIF c01_w.TABLE_NAME = 'PE_PRESCRICAO' THEN

			CALL INATIVAR_PE_PRESCRICAO(
				nm_usuario_p => nm_usuario_w, 
				ds_justificativa_p => get_default_justification(), 
				nr_sequencia_p => c01_w.nr_seq_prescricao);
				
		ELSIF c01_w.TABLE_NAME = 'PRESCR_MEDICA' THEN
	  
			CALL SUSPENDER_PRESCRICAO(
				nr_prescricao_p => c01_w.nr_prescricao, 
				nr_seq_motivo_susp_p => 0, 
				ds_motivo_susp_p => get_default_justification(), 
				nm_usuario_p => nm_usuario_w, 
				ie_alta_paciente_p => 'N');
				
		END IF;
		
	/*
	- ORDER DE CPOE CRIADA E NAO EXECUTADA (LIBERADAS MAS PENDENTES DE EXECUCAO DA CPOE)
	*/
	elsif (c01_w.ds_issue_type = IS_CPOE_ORDER_NOT_EX) then
		
		 := CPOE_SUSPENDER_ITEM_PRESCR(
			lista_itens_p => '['||c01_w.nr_seq_cpoe||';'||c01_w.ie_tipo_item||';S]', nr_atendimento_p => c01_w.nr_atendimento, nm_usuario_p => nm_usuario_w, ds_lista_proc_susp_p => ds_lista_proc_susp_w);
			
	/*
	- CARE PLAN COM CPOE GERADO E NAO EXECUTADO (LIBERADAS MAS PENDENTES DE EXECUCAO DA CPOE)
	*/
	elsif (c01_w.ds_issue_type = IS_CARE_PLAN_CPOE_NOT_EX) then
		
		CALL Suspender_item_SAE(
			nr_seq_pe_proc_p => c01_w.NR_SEQ_PE_PRESCR_PROC,
			cd_motivo_p => 0,
			ds_motivo_p => get_default_justification(),
			nm_usuario_p => nm_usuario_w);
		
	/*
	- TODOS OS ITENS (DIAGNOSTICOS) ATIVOS DO CARE PLAN
	*/
	elsif (c01_w.ds_issue_type = IS_ACTIVE_CARE_PLAN_DIAG) then
		
		CALL CANCEL_CP_DIAGNOSIS(
			nr_sequencia_p => c01_w.nr_seq_prescr_diag,
			ds_motivo_p => get_default_justification());
		
	/*
	- TODOS OS CARE PLAN AINDA ATIVOS
	*/
	elsif (c01_w.ds_issue_type = IS_ACTIVE_CARE_PLANS) then

		CALL INATIVAR_PE_PRESCRICAO(
			nm_usuario_p => nm_usuario_w,
			ds_justificativa_p => get_default_justification(), 
			nr_sequencia_p => c01_w.nr_seq_prescricao);

	end if;
	
	end;
	end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pep_cancel_issue_order ( nr_seq_evento_p protocolo_int_pac_evento.nr_sequencia%type, nr_seq_gqa_acao_p gqa_acao.nr_sequencia%type) is nm_usuario_w varchar(30) FROM PUBLIC;

