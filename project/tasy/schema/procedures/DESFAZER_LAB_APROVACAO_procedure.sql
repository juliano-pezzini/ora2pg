-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desfazer_lab_aprovacao ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, ie_outro_usuario_p text, ie_lib_p text default null) AS $body$
DECLARE


nr_seq_resultado_w			bigint;
cd_medico_resp_w			varchar(10);
cd_pessoa_usuario_w			varchar(10);
nr_seq_result_item_w			bigint;
nr_seq_reult_w				bigint;
nr_sequencia_result_w			bigint;
nr_prescricao_result_w			bigint;
nr_seq_prescricao_result_w		integer;
nm_usuario_result_w			varchar(15);
dt_atualizacao_result_w			timestamp;
ie_cobranca_result_w			varchar(15);
ie_origem_proced_result_w		bigint;
cd_procedimento_result_w		bigint;
--ds_resultado_result_w			long;
dt_coleta_result_w			timestamp;
ie_status_conversao_result_w		smallint;
ds_result_codigo_result_w		varchar(2000);
ie_formato_texto_result_w		smallint;
nr_seq_exame_result_w			bigint;
nr_seq_pagina_result_w			bigint;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type;
ie_controla_deslib_w			lab_parametro.ie_controla_deslib%type;
dt_aprovacao_w				exame_lab_result_item.dt_aprovacao%type;
nr_sequencia_copia_w          		bigint;
ie_atual_dt_emiss_desaprov_w		lab_parametro.ie_atual_dt_emiss_desaprov%type;
nr_seq_result_antib_w			exame_lab_result_antib.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	exame_lab_result_item
	where	nr_seq_resultado	= nr_seq_resultado_w
	and 	nr_seq_prescr		= nr_seq_prescr_p;

c02 CURSOR FOR
 	SELECT	nr_sequencia,
			nr_prescricao,
			nr_seq_prescricao,
			nm_usuario,
			dt_atualizacao,
			ie_cobranca,
			ie_origem_proced,
			cd_procedimento,
			--ds_resultado,
			dt_coleta,
			ie_status_conversao,
			ds_result_codigo,
			ie_formato_texto,
			nr_seq_exame,
			nr_seq_pagina
 	from	result_laboratorio
 	where	nr_prescricao 		= nr_prescricao_p
	and		nr_seq_prescricao	= nr_seq_prescr_p;

c03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_resultado,
		nr_seq_result_item,
		cd_microorganismo,
		cd_medicamento,
		ie_resultado,
		dt_atualizacao,
		nm_usuario,
		qt_microorganismo,
		ds_obs_microorganismo,
		qt_mic,
		ie_micro_sem_antib,
		ds_resultado_antib,
		ie_primeira_escolha,
		ds_obs_antibiotico,
		nr_cultura_microorg
	from	exame_lab_result_antib
	where	nr_seq_resultado = nr_seq_resultado_w
	  and	nr_seq_result_item = nr_seq_result_item_w;

c04 CURSOR FOR
	SELECT	nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nr_seq_exame_lab_result_antib,
		cd_medicamento
	from	exame_lab_result_antib_adi
	where	nr_seq_exame_lab_result_antib = nr_seq_result_antib_w;

c03_w	c03%rowtype;
c04_w 	c04%rowtype;


BEGIN

select	max(a.cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	prescr_medica a
where	a.nr_prescricao	= nr_prescricao_p;

select	coalesce(max(ie_controla_deslib),'N'),
	coalesce(max(ie_atual_dt_emiss_desaprov), 'N')
into STRICT	ie_controla_deslib_w,
	ie_atual_dt_emiss_desaprov_w
from	lab_parametro a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

select	nr_seq_resultado
into STRICT	nr_seq_resultado_w
from	exame_lab_resultado
where	nr_prescricao = nr_prescricao_p;

if (coalesce(ie_outro_usuario_p,'S') = 'N') then
	select	cd_medico_resp
	into STRICT	cd_medico_resp_w
	from	exame_lab_result_item
	where	nr_seq_resultado	= nr_seq_resultado_w
	and		nr_seq_prescr	 	= nr_seq_prescr_p
	and		(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');

	select	cd_pessoa_fisica
	into STRICT	cd_pessoa_usuario_w
	from 	usuario
	where 	nm_usuario = nm_usuario_p;

	if (cd_medico_resp_w <> cd_pessoa_usuario_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(222380); --Você não tem permissão para desfazer a aprovação/liberação de um exame aprovado por outro bioquímico. Parâmetro (25)
	end if;
end if;

if (coalesce(ie_lib_p,'N') = 'S') then

	if (ie_controla_deslib_w = 'S') then
		open c02;
		loop
		fetch c02 into
			nr_sequencia_result_w,
			nr_prescricao_result_w,
			nr_seq_prescricao_result_w,
			nm_usuario_result_w,
			dt_atualizacao_result_w,
			ie_cobranca_result_w,
			ie_origem_proced_result_w,
			cd_procedimento_result_w,
			--ds_resultado_result_w,
			dt_coleta_result_w,
			ie_status_conversao_result_w,
			ds_result_codigo_result_w,
			ie_formato_texto_result_w,
			nr_seq_exame_result_w,
			nr_seq_pagina_result_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			select	max(dt_aprovacao)
			into STRICT	dt_aprovacao_w
			from	exame_lab_result_item
			where	nr_seq_resultado 	= nr_seq_resultado_w
			and		nr_seq_prescr 		= nr_seq_prescricao_result_w
			and		(nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> '');

			select  nextval('result_laboratorio_copia_seq')
			into STRICT 	nr_sequencia_copia_w
			;

			insert into result_laboratorio_copia(
				nr_sequencia,
				nr_prescricao,
				nr_seq_prescricao,
				nm_usuario,
				dt_atualizacao,
				ie_cobranca,
				ie_origem_proced,
				cd_procedimento,
				--ds_resultado,
				ie_formato_texto,
				dt_coleta,
				nr_seq_result_ant,
				ie_status_conversao,
				ds_result_codigo,
				nr_seq_pagina,
				nr_seq_exame,
				dt_desaprovacao,
				ie_tipo_registro,
				dt_aprovacao_exame
			) values (
				nr_sequencia_copia_w,
				nr_prescricao_result_w,
				nr_seq_prescricao_result_w,
				nm_usuario_p,
				clock_timestamp(),
				ie_cobranca_result_w,
				ie_origem_proced_result_w,
				cd_procedimento_result_w,
				--ds_resultado_result_w,
				ie_formato_texto_result_w,
				dt_coleta_result_w,
				nr_sequencia_result_w,
				ie_status_conversao_result_w,
				ds_result_codigo_result_w,
				nr_seq_pagina_result_w,
				nr_seq_exame_result_w,
				clock_timestamp(),
				'L',
				dt_aprovacao_w
			);

			CALL COPIA_CAMPO_LONG_DE_PARA('RESULT_LABORATORIO',
									 'DS_RESULTADO',
									 ' WHERE nr_sequencia=:nr_seq_ori',
									 'nr_seq_ori='||nr_sequencia_result_w,
									 'RESULT_LABORATORIO_COPIA',
									 'DS_RESULTADO',
									 ' WHERE nr_sequencia=:nr_seq_dest',
									 'nr_seq_dest='||nr_sequencia_copia_w);

			end;
		end loop;
		close c02;
	end if;

	if (ie_atual_dt_emiss_desaprov_w = 'N') then
		update 	prescr_procedimento
		set		ie_status_atend	= 35,
				nm_usuario		= nm_usuario_p
		where 	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia  	= nr_seq_prescr_p;
	else
		update 	prescr_procedimento
		set		ie_status_atend	= 35,
				dt_emissao_resultado  = NULL,
				nm_usuario		= nm_usuario_p
		where 	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia  	= nr_seq_prescr_p;
	end if;

	update 	exame_lab_result_item
	set 	nm_usuario_liberacao	 = NULL,
			dt_liberacao 			 = NULL
	where   nr_seq_resultado		= nr_seq_resultado_w
	and 	nr_seq_prescr			= nr_seq_prescr_p;

else

	open c02;
	loop
	fetch c02 into
		nr_sequencia_result_w,
		nr_prescricao_result_w,
		nr_seq_prescricao_result_w,
		nm_usuario_result_w,
		dt_atualizacao_result_w,
		ie_cobranca_result_w,
		ie_origem_proced_result_w,
		cd_procedimento_result_w,
		--ds_resultado_result_w,
		dt_coleta_result_w,
		ie_status_conversao_result_w,
		ds_result_codigo_result_w,
		ie_formato_texto_result_w,
		nr_seq_exame_result_w,
		nr_seq_pagina_result_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		select	max(dt_aprovacao)
		into STRICT	dt_aprovacao_w
		from	exame_lab_result_item
		where	nr_seq_resultado 	= nr_seq_resultado_w
		and		nr_seq_prescr 		= nr_seq_prescricao_result_w
		and		(nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> '');

		select  nextval('result_laboratorio_copia_seq')
		into STRICT 	nr_sequencia_copia_w
		;

		insert into result_laboratorio_copia(
			nr_sequencia,
			nr_prescricao,
			nr_seq_prescricao,
			nm_usuario,
			dt_atualizacao,
			ie_cobranca,
			ie_origem_proced,
			cd_procedimento,
			--ds_resultado,
			ie_formato_texto,
			dt_coleta,
			nr_seq_result_ant,
			ie_status_conversao,
			ds_result_codigo,
			nr_seq_pagina,
			nr_seq_exame,
			dt_desaprovacao,
			ie_tipo_registro,
			dt_aprovacao_exame
		) values (
			nr_sequencia_copia_w,
			nr_prescricao_result_w,
			nr_seq_prescricao_result_w,
			nm_usuario_p,
			clock_timestamp(),
			ie_cobranca_result_w,
			ie_origem_proced_result_w,
			cd_procedimento_result_w,
			--ds_resultado_result_w,
			ie_formato_texto_result_w,
			dt_coleta_result_w,
			nr_sequencia_result_w,
			ie_status_conversao_result_w,
			ds_result_codigo_result_w,
			nr_seq_pagina_result_w,
			nr_seq_exame_result_w,
			clock_timestamp(),
			'A',
			dt_aprovacao_w
		);

		CALL COPIA_CAMPO_LONG_DE_PARA('RESULT_LABORATORIO',
								 'DS_RESULTADO',
								 ' WHERE nr_sequencia=:nr_seq_ori',
								 'nr_seq_ori='||nr_sequencia_result_w,
								 'RESULT_LABORATORIO_COPIA',
								 'DS_RESULTADO',
								 ' WHERE nr_sequencia=:nr_seq_dest',
								 'nr_seq_dest='||nr_sequencia_copia_w);

		end;
	end loop;
	close c02;

	delete 	FROM result_laboratorio
	where 	nr_prescricao		= nr_prescricao_p
	and 	nr_seq_prescricao 	= nr_seq_prescr_p;

	delete	FROM w_exame_lab_result_item
	where 	nr_seq_resultado	= nr_seq_resultado_w
	and 	nr_seq_prescr		= nr_seq_prescr_p;

	open c01;
	loop
	fetch c01 into
		nr_seq_result_item_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select 	coalesce(max(nr_sequencia),0)+1
		into STRICT	nr_seq_reult_w
		from	w_exame_lab_result_item
		where 	nr_seq_resultado	= nr_seq_resultado_w;

		insert into w_exame_lab_result_item(
			nr_seq_resultado,
			nr_sequencia,
			nr_seq_exame,
			dt_atualizacao,
			nm_usuario,
			qt_resultado,
			ds_resultado,
			nr_seq_metodo,
			nr_seq_material,
			pr_resultado,
			ie_status,
			dt_aprovacao,
			nm_usuario_aprovacao,
			nr_seq_prescr,
			pr_minimo,
			pr_maximo,
			qt_minima,
			qt_maxima,
			ds_observacao,
			ds_referencia,
			ds_unidade_medida,
			qt_decimais,
			ds_regra,
			dt_coleta,
			nr_seq_reagente,
			nr_seq_formato,
			cd_medico_resp,
			dt_impressao,
			nr_seq_unid_med,
			cd_equipamento
		)
		SELECT	nr_seq_resultado,
				nr_seq_reult_w,
				nr_seq_exame,
				clock_timestamp(),
				nm_usuario_p,
				qt_resultado,
				ds_resultado,
				nr_seq_metodo,
				nr_seq_material,
				pr_resultado,
				ie_status,
				dt_aprovacao,
				nm_usuario_aprovacao,
				nr_seq_prescr,
				pr_minimo,
				pr_maximo,
				qt_minima,
				qt_maxima,
				ds_observacao,
				ds_referencia,
				ds_unidade_medida,
				qt_decimais,
				ds_regra,
				dt_coleta,
				nr_seq_reagente,
				nr_seq_formato,
				cd_medico_resp,
				dt_impressao,
				nr_seq_unid_med,
				cd_equipamento
		from 	exame_lab_result_item
		where 	nr_seq_resultado	= nr_seq_resultado_w
		and 	nr_sequencia		= nr_seq_result_item_w
		and 	nr_seq_prescr		= nr_seq_prescr_p;

		delete	from w_exame_lab_result_antib
		where	nr_seq_resultado = nr_seq_resultado_w
		  and	nr_seq_prescr = nr_seq_prescr_p;

		open c03;
		loop
		fetch c03 into
			c03_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin

			insert into w_exame_lab_result_antib(
				nr_sequencia,
				qt_microorganismo,
				qt_mic,
				ie_resultado,
				dt_atualizacao,
				nm_usuario,
				ds_obs_microorganismo,
				ie_micro_sem_antib,
				ie_primeira_escolha,
				ds_obs_antibiotico,
				nr_cultura_microorg,
				nr_seq_resultado,
				nr_seq_result_item,
				cd_microorganismo,
				cd_medicamento,
				nr_seq_prescr)
			values (
				c03_w.nr_sequencia,
				c03_w.qt_microorganismo,
				c03_w.qt_mic,
				c03_w.ie_resultado,
				clock_timestamp(),
				nm_usuario_p,
				c03_w.ds_obs_microorganismo,
				c03_w.ie_micro_sem_antib,
				c03_w.ie_primeira_escolha,
				c03_w.ds_obs_antibiotico,
				c03_w.nr_cultura_microorg,
				c03_w.nr_seq_resultado,
				c03_w.nr_seq_result_item,
				c03_w.cd_microorganismo,
				c03_w.cd_medicamento,
				nr_seq_prescr_p);

			delete 	from w_exame_lab_res_antib_adi
			where	nr_seq_resultado = nr_seq_resultado_w
			  and	nr_seq_prescr = nr_seq_prescr_p;

			open c04;
			loop
			fetch c04 into
				c04_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin

				insert into w_exame_lab_res_antib_adi(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_exame_lab_result_antib,
					cd_medicamento,
					nr_seq_resultado,
					nr_seq_prescr)
				values (
					c04_w.nr_sequencia,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					c04_w.nr_seq_exame_lab_result_antib,
					c04_w.cd_medicamento,
					c03_w.nr_seq_resultado,
					nr_seq_prescr_p);

				end;
			end loop;
			close c04;
			end;
		end loop;
		close c03;
		end;
	end loop;
	close c01;

	if (ie_atual_dt_emiss_desaprov_w = 'N') then
		update 	prescr_procedimento
		set		ie_status_atend	= 30,
				cd_motivo_baixa	= 0,
				nm_usuario  	= nm_usuario_p
		where 	nr_prescricao	= nr_prescricao_p
		and 	nr_sequencia  	= nr_seq_prescr_p;
	else
		update 	prescr_procedimento
		set		ie_status_atend	= 30,
				cd_motivo_baixa	= 0,
				dt_emissao_resultado  = NULL,
				nm_usuario  	= nm_usuario_p
		where 	nr_prescricao	= nr_prescricao_p
		and 	nr_sequencia  	= nr_seq_prescr_p;
	end if;

	update 	exame_lab_result_item
	set 	dt_aprovacao 		 = NULL,
			cd_medico_resp 		 = NULL
	where   nr_seq_resultado	= nr_seq_resultado_w
	and 	nr_seq_prescr		= nr_seq_prescr_p;

	if (wheb_usuario_pck.is_evento_ativo(265) = 'S') then
		CALL integrar_tasylab(nr_prescricao_p, nr_seq_prescr_p, 265, null, null, wheb_usuario_pck.get_cd_funcao, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, null, null);
	end if;

	--Liberar Data para impressão - Sline
	begin
	if (nr_prescricao_p <> 0) and (nr_seq_prescr_p <> 0) then
		CALL Atualizar_data_geracao_lab(nr_prescricao_p,nr_seq_prescr_p,'N');
	end if;
	exception
		when others then
		nr_seq_reult_w := nr_seq_reult_w;
		end;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desfazer_lab_aprovacao ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, ie_outro_usuario_p text, ie_lib_p text default null) FROM PUBLIC;

