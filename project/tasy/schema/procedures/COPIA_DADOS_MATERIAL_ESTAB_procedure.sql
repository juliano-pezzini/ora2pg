-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copia_dados_material_estab ( cd_material_p bigint, cd_estabelecimento_p bigint, cd_estab_destino_p bigint, ie_opcao_copia_p bigint, nm_tabela_p text, ie_substituir_p text, nm_usuario_p text, ds_erro_p INOUT text ) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_w			bigint;
nr_seq_interno_w		bigint;
qt_existe_w			bigint;
cd_material_w			integer;
nr_sequencia_ww			bigint;
ie_insert			boolean:= false;

c01 CURSOR FOR
SELECT	distinct cd_material
from	material
where	ie_opcao_copia_p	= 0
and	ie_situacao	= 'A'

union all

SELECT	cd_material
from	material
where	ie_opcao_copia_p	= 1
and	cd_material	= cd_material_p;

c02 CURSOR FOR
SELECT	nr_sequencia
from	material_diluicao
where	cd_material		= cd_material_w
and	cd_estabelecimento	= cd_estabelecimento_p;

c03 CURSOR FOR
SELECT	nr_sequencia,
		ie_via_aplicacao,
		cd_especialidade,
		ie_objetivo,
		qt_peso_min,
		qt_peso_max,
		qt_idade_min,
		qt_idade_min_mes,
		qt_idade_min_dia,
		qt_idade_max,
		qt_idade_max_mes,
		qt_idade_max_dia,
		cd_doenca_cid,
		ie_tipo_item
from	material_prescr
where	cd_material		= cd_material_w
and		((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_p));

c04 CURSOR FOR
SELECT	nr_sequencia
from	MATERIAL_INTERACAO_MEDIC
where	cd_material		= cd_material_w
and	cd_estabelecimento	= cd_estabelecimento_p;

C05 CURSOR FOR
SELECT	nr_sequencia
from	conversao_material_convenio
where	cd_material	= cd_material_w
and	cd_estabelecimento	= cd_estabelecimento_p;

C06 CURSOR FOR
SELECT	nr_sequencia,
		nr_seq_estagio,
		nr_seq_forma,
		nr_seq_reconstituicao,
		nr_seq_diluicao,
		ie_via_aplicacao,
		qt_estabilidade,
		ie_tempo_estab,
		nr_seq_marca,
		ie_protegido,
		ie_estab_fornec
from	material_armazenamento
where	cd_material	= cd_material_w
and		cd_estabelecimento	= cd_estabelecimento_p;

C07 CURSOR FOR
SELECT	*
from	material_estab
where	cd_material = cd_material_w
and	cd_estabelecimento = cd_estabelecimento_p;
C07_w	C07%rowtype;

BEGIN
open C01;
loop
fetch C01 into	
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (nm_tabela_p = 'MATERIAL_ESTAB') then
		select	count(*)
		into STRICT	qt_existe_w
		from	material_estab
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
	
		if (ie_substituir_p = 'S') and (qt_existe_w > 0) then
			
			open C07;
			loop
			fetch C07 into C07_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin
				update 	material_estab
				set   	nr_sequencia = nextval('material_estab_seq'), 
					cd_estabelecimento = cd_estab_destino_p,
					cd_material = C07_w.cd_material,
					dt_atualizacao = clock_timestamp(),
					nm_usuario = nm_usuario_p,
					ie_baixa_estoq_pac = C07_w.ie_baixa_estoq_pac,
					ie_material_estoque = C07_w.ie_material_estoque,
					qt_estoque_minimo = C07_w.qt_estoque_minimo,
					qt_ponto_pedido = C07_w.qt_ponto_pedido,
					qt_dia_estoque_minimo = C07_w.qt_dia_estoque_minimo,
					nr_minimo_cotacao = C07_w.nr_minimo_cotacao,
					qt_consumo_mensal = C07_w.qt_consumo_mensal,
					cd_material_conta = C07_w.cd_material_conta,
					cd_kit_material = C07_w.cd_kit_material,
					qt_peso_kg = C07_w.qt_peso_kg,
					dt_atual_consumo = C07_w.dt_atual_consumo,
					qt_mes_consumo = C07_w.qt_mes_consumo,
					ie_ressuprimento = C07_w.ie_ressuprimento,
					dt_atualizacao_nrec = clock_timestamp(),
					nm_usuario_nrec = nm_usuario_p,
					ie_classif_custo = C07_w.ie_classif_custo,
					nr_registro_anvisa = C07_w.nr_registro_anvisa,
					ie_prescricao = C07_w.ie_prescricao,
					ie_padronizado = C07_w.ie_padronizado,
					ie_estoque_lote = C07_w.ie_estoque_lote,
					ie_requisicao = C07_w.ie_requisicao,
					ie_curva_xyz = C07_w.ie_curva_xyz,
					ie_controla_serie = C07_w.ie_controla_serie,
					dt_validade_reg_anvisa = C07_w.dt_validade_reg_anvisa,
					ie_unid_consumo_prescr = C07_w.ie_unid_consumo_prescr,
					qt_desvio_padrao_cons = C07_w.qt_desvio_padrao_cons,
					ie_vigente_anvisa = C07_w.ie_vigente_anvisa,
					nr_protocolo_anvisa = C07_w.nr_protocolo_anvisa,
					dt_validade_prot_anvisa = C07_w.dt_validade_prot_anvisa,
					ie_farmacia_com = C07_w.ie_farmacia_com,
					qt_estoque_maximo = C07_w.qt_estoque_maximo,
					qt_dia_interv_ressup = C07_w.qt_dia_interv_ressup,
					qt_dia_ressup_forn = C07_w.qt_dia_ressup_forn,
					cd_unidade_medida_compra = C07_w.cd_unidade_medida_compra,
					cd_unidade_medida_consumo = C07_w.cd_unidade_medida_consumo,
					cd_unidade_medida_estoque = C07_w.cd_unidade_medida_estoque,
					cd_unidade_venda = C07_w.cd_unidade_venda,
					qt_conv_compra_estoque = C07_w.qt_conv_compra_estoque,
					qt_conv_estoque_consumo = C07_w.qt_conv_estoque_consumo,
					qt_conv_estoque_venda = C07_w.qt_conv_estoque_venda,
					ie_tipo_consignado = C07_w.ie_tipo_consignado,
					ie_tipo_imposto = C07_w.ie_tipo_imposto,
					nr_icms = C07_w.nr_icms,
					nr_iss = C07_w.nr_iss,
					ie_situacao_tributaria = C07_w.ie_situacao_tributaria,
					ie_reg_anvisa_isento = C07_w.ie_reg_anvisa_isento,
					ds_motivo_isencao_anvisa = C07_w.ds_motivo_isencao_anvisa
				where 	cd_material = cd_material_w
				and   	cd_estabelecimento = cd_estab_destino_p;
				
				exception when others then		
				ds_erro_p := wheb_mensagem_pck.get_texto(1051533, 'DS_ESTAB='|| substr(obter_nome_estabelecimento(cd_estab_destino_p),1,255));

				end;
				
			end loop;
			close C07;	
		
		end if;	
		

		if (qt_existe_w = 0) then

			insert into material_estab(
				nr_sequencia,			cd_estabelecimento,			cd_material,
				dt_atualizacao,			nm_usuario,				ie_baixa_estoq_pac,
				ie_material_estoque,		qt_estoque_minimo,			qt_ponto_pedido,
				qt_estoque_maximo,		qt_dia_interv_ressup,			qt_dia_ressup_forn,
				qt_dia_estoque_minimo,		nr_minimo_cotacao,			qt_consumo_mensal,
				cd_material_conta,		cd_kit_material,			qt_peso_kg,
				dt_atual_consumo,		qt_mes_consumo,				ie_ressuprimento,
				dt_atualizacao_nrec,		nm_usuario_nrec,			ie_classif_custo,
				nr_registro_anvisa,		ie_prescricao,				ie_padronizado,
				ie_estoque_lote,		ie_requisicao,				ie_curva_xyz,
				ie_controla_serie,		dt_validade_reg_anvisa,			ie_unid_consumo_prescr,
				qt_desvio_padrao_cons,	ie_vigente_anvisa, 				nr_protocolo_anvisa,
				dt_validade_prot_anvisa, ie_farmacia_com, 			cd_unidade_medida_compra,
				cd_unidade_medida_consumo, cd_unidade_medida_estoque, cd_unidade_venda,
				qt_conv_compra_estoque,   qt_conv_estoque_consumo, 		qt_conv_estoque_venda,
				ie_tipo_consignado, 	 ie_tipo_imposto, 			nr_icms,
				nr_iss, 		  		ie_situacao_tributaria, ie_reg_anvisa_isento,
				ds_motivo_isencao_anvisa
				)
			SELECT	nextval('material_estab_seq'),	cd_estab_destino_p,			cd_material,
				clock_timestamp(),			nm_usuario_p,				ie_baixa_estoq_pac,
				ie_material_estoque,		qt_estoque_minimo,			qt_ponto_pedido,
				qt_estoque_maximo,		qt_dia_interv_ressup,			qt_dia_ressup_forn,
				qt_dia_estoque_minimo,		nr_minimo_cotacao,			qt_consumo_mensal,
				cd_material_conta,		cd_kit_material,			qt_peso_kg,
				dt_atual_consumo,		qt_mes_consumo,				ie_ressuprimento,
				clock_timestamp(),			nm_usuario_p,				ie_classif_custo,
				nr_registro_anvisa,		ie_prescricao,				ie_padronizado,
				ie_estoque_lote,		ie_requisicao,				ie_curva_xyz,
				ie_controla_serie,		dt_validade_reg_anvisa,			ie_unid_consumo_prescr,
				qt_desvio_padrao_cons,	ie_vigente_anvisa, 			nr_protocolo_anvisa, 
				dt_validade_prot_anvisa, ie_farmacia_com,			cd_unidade_medida_compra,
				cd_unidade_medida_consumo, cd_unidade_medida_estoque, cd_unidade_venda,
				qt_conv_compra_estoque, qt_conv_estoque_consumo, 	qt_conv_estoque_venda,
				ie_tipo_consignado, 	ie_tipo_imposto, 			nr_icms, 
				nr_iss, 				ie_situacao_tributaria, 	ie_reg_anvisa_isento,
				ds_motivo_isencao_anvisa
			from	material_estab
			where	cd_material	= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			CALL sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,						
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'MATERIAL_ESTAB'),
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'MATERIAL_ESTAB' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela MATERIAL_ESTAB do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
		end if;
	elsif (nm_tabela_p = 'MATERIAL_DILUICAO') then

		qt_existe_w	:= 0;
		
		if (ie_substituir_p = 'S') then
			begin
			delete from material_diluicao
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;
		
		/* Comentei esta linha porque esta mesma tabela e utilizada para as pastas de diluicao,recontituicao e rediluicao, sendo assim nao copia os tres itens.
		select	count(*)
		into	qt_existe_w
		from	material_diluicao
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;*/
		
		if (qt_existe_w = 0) then
		
			open C02;
			loop
			fetch C02 into	
				nr_sequencia_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
					
				insert into material_diluicao(
					cd_material,			nr_sequencia,			cd_unidade_medida,
					cd_diluente,			cd_unid_med_diluente,		dt_atualizacao,
					nm_usuario,			qt_diluicao,			qt_minima_diluicao,
					qt_fixa_diluicao,			qt_minuto_aplicacao,		ie_reconstituicao,
					ie_via_aplicacao,			qt_concentracao,			cd_unid_med_concentracao,
					cd_unid_med_base_concent,		nr_seq_prioridade,			cd_intervalo,
					dt_atualizacao_nrec,		nm_usuario_nrec,			cd_setor_atendimento,
					cd_estabelecimento,		qt_idade_min,			qt_idade_max,
					ie_cobra_paciente,			cd_motivo_baixa,			cd_setor_excluir,
					qt_peso_min,			qt_peso_max,			ie_proporcao,
					qt_referencia,			nr_seq_interno,			qt_volume_adic,
					qt_idade_min_mes,			qt_idade_min_dia,			qt_idade_max_mes,
					qt_idade_max_dia,			qt_dose_min,			qt_dose_max,
					nr_seq_via_acesso,			nr_seq_restricao,			qt_volume,
					ie_gerar_rediluente,			ie_subtrair_volume_medic,		cd_unid_med_reconst,
					qt_concentracao_total,			cd_unid_med_concetracao,		cd_unid_med_base_conc,
					ds_referencia,				ie_atualizar_tempo,			ie_priorizar_min,					ie_gerar_lote,				ie_diluir_inteiro)
				SELECT	cd_material,			nextval('material_diluicao_seq'),			cd_unidade_medida,
					cd_diluente,			cd_unid_med_diluente,		clock_timestamp(),
					nm_usuario_p,			qt_diluicao,			qt_minima_diluicao,
					qt_fixa_diluicao,			qt_minuto_aplicacao,		ie_reconstituicao,
					ie_via_aplicacao,			qt_concentracao,			cd_unid_med_concentracao,
					cd_unid_med_base_concent,		nr_seq_prioridade,			cd_intervalo,
					clock_timestamp(),				nm_usuario_p,			null,
					cd_estab_destino_p,		qt_idade_min,			qt_idade_max,
					ie_cobra_paciente,			cd_motivo_baixa,			null,
					qt_peso_min,			qt_peso_max,			ie_proporcao,
					qt_referencia,			nextval('material_diluicao_seq'),			qt_volume_adic,
					qt_idade_min_mes,			qt_idade_min_dia,			qt_idade_max_mes,
					qt_idade_max_dia,			qt_dose_min,			qt_dose_max,
					nr_seq_via_acesso,			nr_seq_restricao,			qt_volume,
					ie_gerar_rediluente,			ie_subtrair_volume_medic,		cd_unid_med_reconst,
					qt_concentracao_total,			cd_unid_med_concetracao,		cd_unid_med_base_conc,
					ds_referencia,				ie_atualizar_tempo,			ie_priorizar_min,					 ie_gerar_lote,				 ie_diluir_inteiro
				from	material_diluicao
				where	cd_material		= cd_material_w
				and	nr_sequencia		= nr_sequencia_w
				and	cd_estabelecimento	= cd_estabelecimento_p;
			
			end loop;
			close C02;
			
			 CALL sup_gravar_historico_material(cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'MATERIAL_DILUICAO'),
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'MATERIAL_DILUICAO' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela MATERIAL_DILUICAO do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/					
						'S',
						nm_usuario_p);
		end if;
		
	elsif (nm_tabela_p = 'MATERIAL_PRESCR') then
		
		if (ie_substituir_p = 'S') then
			begin
			delete from material_prescr
			where	cd_material = cd_material_w
			and	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estab_destino_p));
			exception when others then
				qt_existe_w := 0;
			end;
		end if;

			for C03_w in C03
			loop
				select	coalesce(max(a.nr_sequencia), 0)
				into STRICT	qt_existe_w
				from	material_prescr a
				where	a.cd_material		= cd_material_w
				and		((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = cd_estab_destino_p))
				and		coalesce(a.ie_via_aplicacao, 'XPTO') = coalesce(C03_w.ie_via_aplicacao, 'XPTO')
				and		coalesce(a.cd_especialidade, 0) = coalesce(C03_w.cd_especialidade, 0)
				and		coalesce(a.ie_objetivo, 'N') = coalesce(C03_w.ie_objetivo, 'N')
				and		coalesce(a.qt_peso_min, 0) = coalesce(C03_w.qt_peso_min, 0)
				and		coalesce(a.qt_peso_max, 0) = coalesce(C03_w.qt_peso_max, 0)
				and		coalesce(a.qt_idade_min, 0) = coalesce(C03_w.qt_idade_min, 0)
				and		coalesce(a.qt_idade_min_mes, 0) = coalesce(C03_w.qt_idade_min_mes, 0)
				and		coalesce(a.qt_idade_min_dia, 0) = coalesce(C03_w.qt_idade_min_dia, 0)
				and		coalesce(a.qt_idade_max, 0) = coalesce(C03_w.qt_idade_max, 0)
				and		coalesce(a.qt_idade_max_mes, 0) = coalesce(C03_w.qt_idade_max_mes, 0)
				and		coalesce(a.qt_idade_max_dia, 0) = coalesce(C03_w.qt_idade_max_dia, 0)
				and		coalesce(a.cd_doenca_cid, 'XPTO') = coalesce(C03_w.cd_doenca_cid, 'XPTO')
				and		coalesce(a.ie_tipo_item, 'XPTO') = coalesce(C03_w.ie_tipo_item, 'XPTO');

				if (qt_existe_w = 0) then
					ie_insert := true;
					insert into material_prescr(
						nr_sequencia,			cd_estabelecimento,			dt_atualizacao,
						nm_usuario,				dt_atualizacao_nrec,		nm_usuario_nrec,
						cd_material,			cd_setor_atendimento,		cd_intervalo,
						cd_unidade_medida,		qt_dose,					cd_unid_med_limite,
						qt_limite_pessoa,		ie_dose_limite,				qt_idade_min,
						qt_idade_max,			ie_via_aplicacao,			qt_peso_min,
						qt_peso_max,			qt_intervalo_horas,			qt_dias_maximo,
						ie_tipo,				qt_intervalo_max_horas,		ie_via_aplic_padrao,
						ie_dispositivo_infusao,	qt_minuto_aplicacao,		hr_prim_horario,			
						qt_concentracao,		qt_concentracao_min,
						cd_unid_med_cons_peso,	cd_unid_med_cons_volume,
						qt_dias_solicitado,		ie_exige_justificativa,		ie_dose,
						qt_idade_min_mes,		qt_idade_min_dia,			qt_idade_max_mes,
						qt_idade_max_dia,		ds_justificativa,			qt_hora_aplicacao,
						qt_solucao,				ie_justificativa,			cd_especialidade,
						ie_diluicao,			qt_dias_prev_maximo,		ie_objetivo,
						cd_intervalo_filtro,	NR_SEQ_AGRUPAMENTO,			
						QT_IG_MIN,				QT_IG_MAX,					IE_SOMENTE_SN,
						CD_DOENCA_CID,			QT_DOSE_ESPECIAL,			QT_DOSE_TERAPEUTICA,
						NR_SEQ_DOSE_TERAP,		IE_SE_NECESSARIO,			DS_HORARIOS,
						IE_TIPO_DOSAGEM,		IE_JUSTIFICATIVA_PADRAO,	DS_OBS_PADRAO,
						DS_MENSAGEM,			DS_REFERENCIA,				IE_GERAR_AGORA,
						IE_APLICA_SOLUCAO,		IE_OBRIGA_JUST_DOSE,		IE_LIMPAR_PRIM_HOR,
						CD_PROTOCOLO,			NR_SEQ_MEDICACAO,			QT_DOSE_MIN,
						CD_UM_MINIMA,			QT_APLIC_MIN,				QT_APLICACAO_MAX,
						IE_OBEDECER_LIMITE,		IE_FORMA_CONSISTENCIA,		DS_OBSERVACAO,
						DS_MENSAGEM_REGRA,		IE_PERMITE_LIBERAR,			ie_tipo_item)
					SELECT	nextval('material_prescr_seq'),	cd_estab_destino_p,		clock_timestamp(),
						nm_usuario_p,			clock_timestamp(),					nm_usuario_p,
						cd_material,			null,						cd_intervalo,
						cd_unidade_medida,		qt_dose,					cd_unid_med_limite,
						qt_limite_pessoa,		ie_dose_limite,				qt_idade_min,
						qt_idade_max,			ie_via_aplicacao,			qt_peso_min,
						qt_peso_max,			qt_intervalo_horas,			qt_dias_maximo,
						ie_tipo,				qt_intervalo_max_horas,		ie_via_aplic_padrao,
						ie_dispositivo_infusao,	qt_minuto_aplicacao,		hr_prim_horario,
						qt_concentracao,		qt_concentracao_min,
						cd_unid_med_cons_peso,	cd_unid_med_cons_volume,
						qt_dias_solicitado,		ie_exige_justificativa,		ie_dose,
						qt_idade_min_mes,		qt_idade_min_dia,			qt_idade_max_mes,
						qt_idade_max_dia,		ds_justificativa,			qt_hora_aplicacao,
						qt_solucao,				ie_justificativa,			cd_especialidade,
						ie_diluicao,			qt_dias_prev_maximo,		ie_objetivo,
						cd_intervalo_filtro,	NR_SEQ_AGRUPAMENTO,			
						QT_IG_MIN,				QT_IG_MAX,					IE_SOMENTE_SN,
						CD_DOENCA_CID,			QT_DOSE_ESPECIAL,			QT_DOSE_TERAPEUTICA,
						NR_SEQ_DOSE_TERAP,		IE_SE_NECESSARIO,			DS_HORARIOS,
						IE_TIPO_DOSAGEM,		IE_JUSTIFICATIVA_PADRAO,	DS_OBS_PADRAO,
						DS_MENSAGEM,			DS_REFERENCIA,				IE_GERAR_AGORA,
						IE_APLICA_SOLUCAO,		IE_OBRIGA_JUST_DOSE,		IE_LIMPAR_PRIM_HOR,
						CD_PROTOCOLO,			NR_SEQ_MEDICACAO,			QT_DOSE_MIN,
						CD_UM_MINIMA,			QT_APLIC_MIN,				QT_APLICACAO_MAX,
						IE_OBEDECER_LIMITE,		IE_FORMA_CONSISTENCIA,		DS_OBSERVACAO,
						DS_MENSAGEM_REGRA,		IE_PERMITE_LIBERAR,			ie_tipo_item
					from	material_prescr
					where	cd_material	= cd_material_w
					and	nr_sequencia	= C03_w.nr_sequencia
					and	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_p));
				end if;
			end loop;

		if (ie_insert) then
			CALL sup_gravar_historico_material(	cd_estab_destino_p,
			cd_material_w,
			Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'MATERIAL_PRESCR'), /*'Copia da MATERIAL_PRESCR',*/
			PERFORM WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'MATERIAL_PRESCR' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela MATERIAL_PRESCR do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
			'S',
			nm_usuario_p);
			ie_insert := false;
		end if;

	elsif (nm_tabela_p = 'MATERIAL_INTERACAO_MEDIC') then
		if (ie_substituir_p = 'S') then
			begin
			delete from MATERIAL_INTERACAO_MEDIC
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;
		
		select	count(*)
		into STRICT	qt_existe_w
		from	MATERIAL_INTERACAO_MEDIC
		where	cd_material		= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if (qt_existe_w = 0) then
		
			open C04;
			loop
			fetch C04 into	
				nr_sequencia_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				insert into MATERIAL_INTERACAO_MEDIC(
					CD_CLASSE_MATERIAL,
					CD_ESTABELECIMENTO,
					CD_GRUPO_MATERIAL,
					CD_MATERIAL,
					CD_MATERIAL_INTERACAO,
					CD_SUBGRUPO_MATERIAL,
					DS_ORIENTACAO,
					DS_REF_BIBLIOGRAFICA,
					DS_TIPO,
					DT_ATUALIZACAO,
					DT_ATUALIZACAO_NREC,
					IE_CLASSIFICACAO,
					IE_CONSISTIR,
					IE_EXIBIR_GRAVIDADE,
					IE_GRAVAR,
					IE_MENSAGEM_CADASTRADA,
					IE_SEVERIDADE,
					NM_USUARIO,
					NM_USUARIO_NREC,
					NR_SEQ_FICHA,
					NR_SEQ_FICHA_INTERACAO,
					NR_SEQUENCIA)
				SELECT	CD_CLASSE_MATERIAL,
					cd_estab_destino_p,
					CD_GRUPO_MATERIAL,
					CD_MATERIAL,
					CD_MATERIAL_INTERACAO,
					CD_SUBGRUPO_MATERIAL,
					DS_ORIENTACAO,
					DS_REF_BIBLIOGRAFICA,
					DS_TIPO,
					clock_timestamp(),
					clock_timestamp(),
					IE_CLASSIFICACAO,
					IE_CONSISTIR,
					IE_EXIBIR_GRAVIDADE,
					IE_GRAVAR,
					IE_MENSAGEM_CADASTRADA,
					IE_SEVERIDADE,
					nm_usuario_p,
					nm_usuario_p,
					NR_SEQ_FICHA,
					NR_SEQ_FICHA_INTERACAO,
					nextval('material_interacao_medic_seq')
				from	MATERIAL_INTERACAO_MEDIC
				where	cd_material	= cd_material_w
				and	nr_sequencia	= nr_sequencia_w
				and	cd_estabelecimento = cd_estabelecimento_p;
				
				CALL sup_gravar_historico_material(	cd_estab_destino_p,
							cd_material_w,
							Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'MATERIAL_INTERACAO_MEDIC'), /*'Copia da MATERIAL_INTERACAO_MEDIC,*/
							WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'MATERIAL_INTERACAO_MEDIC' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela MATERIAL_INTERACAO_MEDIC do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
							'S',
							nm_usuario_p);
			end loop;
			close c04;
		end if;
		
	elsif	(nm_tabela_p = 'KIT_MAT_PRESCRICAO') then
		
		if	(ie_substituir_p = 'S') then
			begin
			delete from kit_mat_prescricao
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;		
		
		select	count(*)
		into	qt_existe_w
		from	kit_mat_prescricao
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;		
		
		if	(qt_existe_w = 0) then

			insert into kit_mat_prescricao(
				nr_sequencia,			cd_estabelecimento,		dt_atualizacao,
				nm_usuario,				cd_kit,					cd_material,
				qt_volume,				ie_via_aplicacao,		dt_atualizacao_nrec,
				nm_usuario_nrec,		cd_unidade_medida,		cd_setor_atendimento,
				cd_setor_excluir,		ie_tipo_atendimento,	
				qt_idade_min,			qt_idade_min_mes,		qt_idade_min_dia,
				qt_idade_max,			qt_idade_max_mes,		qt_idade_max_dia,
				nr_seq_via_acesso,		qt_dose_max,
				qt_dose_min,			cd_unidade_medida_dose,		qt_tempo_min,
				qt_tempo_max,			ie_gerar_lib_farm,			ie_gerar_recons_dilui,
				ie_bomba_infusao,			nr_horas_validade_kit)
			select	kit_mat_prescricao_seq.nextval,	cd_estab_destino_p,		sysdate,
				nm_usuario_p,			cd_kit,					cd_material,
				qt_volume,				ie_via_aplicacao,		sysdate,
				nm_usuario_p,			cd_unidade_medida,		null,
				null,					ie_tipo_atendimento,	
				qt_idade_min,			qt_idade_min_mes,		qt_idade_min_dia,
				qt_idade_max,			qt_idade_max_mes,		qt_idade_max_dia,
				nr_seq_via_acesso,		qt_dose_max,
				qt_dose_min,			cd_unidade_medida_dose,	qt_tempo_min,
				qt_tempo_max,			ie_gerar_lib_farm,		ie_gerar_recons_dilui,
				ie_bomba_infusao,		nr_horas_validade_kit
			from	kit_mat_prescricao
			where	cd_estabelecimento	= cd_estabelecimento_p
			and		cd_material	= cd_material_w;
			
			sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'KIT_MAT_PRESCRICAO'), /*'Copia da KIT_MAT_PRESCRICAO,*/
						PERFORM WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'KIT_MAT_PRESCRICAO' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela KIT_MAT_PRESCRICAO do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
		end if;

	elsif (nm_tabela_p = 'MATERIAL_DOSE_TERAP') then
		
		if (ie_substituir_p = 'S') then
			begin
			delete from material_dose_terap
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;		
		
		select	count(*)
		into STRICT	qt_existe_w
		from	material_dose_terap
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if (qt_existe_w = 0) then	


			insert into material_dose_terap(
				nr_sequencia,			dt_atualizacao,			nm_usuario,
				dt_atualizacao_nrec,		nm_usuario_nrec,			cd_estabelecimento,
				cd_material,			nr_seq_dose_terap,			qt_dose_min_aviso,
				qt_dose_max_aviso,		qt_dose_min_bloqueia,		qt_dose_max_bloqueia,
				qt_idade_minima,			qt_idade_maxima,			qt_peso_minimo,
				qt_peso_maximo,			cd_setor_atendimento)
			SELECT	nextval('material_dose_terap_seq'),			dt_atualizacao,			nm_usuario_p,
				clock_timestamp(),				nm_usuario_p,			cd_estab_destino_p,
				cd_material,			nr_seq_dose_terap,			qt_dose_min_aviso,
				qt_dose_max_aviso,		qt_dose_min_bloqueia,		qt_dose_max_bloqueia,
				qt_idade_minima,			qt_idade_maxima,			qt_peso_minimo,
				qt_peso_maximo,			null
			from	material_dose_terap
			where	cd_material	= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			CALL sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'MATERIAL_DOSE_TERAP'), /*'Copia da MATERIAL_DOSE_TERAP,*/
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'MATERIAL_DOSE_TERAP' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela MATERIAL_DOSE_TERAP do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
		end if;

	elsif	(nm_tabela_p = 'MATERIAL_SETOR_EXCLUSIVO') then

		if	(ie_substituir_p = 'S') then
			begin
			delete from material_setor_exclusivo
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;
	
		select	count(*)
		into	qt_existe_w
		from	material_setor_exclusivo
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if	(qt_existe_w = 0) then	

			insert into material_setor_exclusivo(
				nr_sequencia,			cd_estabelecimento,		dt_atualizacao,
				nm_usuario,			dt_atualizacao_nrec,		nm_usuario_nrec,
				cd_material,			cd_setor_atendimento,		ie_permite)
			select	material_setor_exclusivo_seq.nextval,	cd_estab_destino_p,		sysdate,
				nm_usuario_p,			sysdate,				nm_usuario_p,
				cd_material,			cd_setor_atendimento,		ie_permite
			from	material_setor_exclusivo
			where	cd_material	= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'MATERIAL_SETOR_EXCLUSIVO'), /*'Copia da MATERIAL_SETOR_EXCLUSIVO,*/
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'MATERIAL_SETOR_EXCLUSIVO' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela MATERIAL_SETOR_EXCLUSIVO do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
		end if;

	elsif (nm_tabela_p = 'MATERIAL_FORNEC') then
		
		if (ie_substituir_p = 'S') then
			begin
			delete from material_fornec
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;
		
		select	count(*)
		into STRICT	qt_existe_w
		from	material_fornec
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if (qt_existe_w = 0) then	

			insert into material_fornec(
				nr_sequencia,			cd_estabelecimento,		cd_material,
				dt_atualizacao,			nm_usuario,			cd_cgc,
				ie_consignado,			cd_unid_medida,			qt_conv_compra_est,
				dt_atualizacao_nrec,		nm_usuario_nrec,			ie_ressuprimento,
				IE_COT_COMPRA,			IE_NOTA_FISCAL)
			SELECT	nextval('material_fornec_seq'),			cd_estab_destino_p,		cd_material,
				clock_timestamp(),				nm_usuario_p,			cd_cgc,
				ie_consignado,			cd_unid_medida,			qt_conv_compra_est,
				clock_timestamp(),				nm_usuario_p,			ie_ressuprimento,
				IE_COT_COMPRA,			IE_NOTA_FISCAL
			from	material_fornec
			where	cd_material	= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			CALL sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'MATERIAL_FORNEC'), /*'Copia da MATERIAL_FORNEC,*/
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'MATERIAL_FORNEC' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela MATERIAL_FORNEC do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
		end if;

	elsif	(nm_tabela_p = 'UNIDADE_MEDIDA_ADIC_COMPRA') then
		
		if	(ie_substituir_p = 'S') then
			begin
			delete from unidade_medida_adic_compra
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;
		
		select	count(*)
		into	qt_existe_w
		from	unidade_medida_adic_compra
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if	(qt_existe_w = 0) then

			insert into unidade_medida_adic_compra(
				nr_sequencia,			cd_estabelecimento,		dt_atualizacao,
				nm_usuario,			dt_atualizacao_nrec,		nm_usuario_nrec,
				cd_material,			cd_unidade_medida,		qt_conversao)
			select	unidade_medida_adic_compra_seq.nextval,			cd_estab_destino_p,		sysdate,
				nm_usuario_p,			sysdate,				nm_usuario_p,
				cd_material,			cd_unidade_medida,		qt_conversao
			from	unidade_medida_adic_compra
			where	cd_material	= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'UNIDADE_MEDIDA_ADIC_COMPRA'), /*'Copia da UNIDADE_MEDIDA_ADIC_COMPRA,*/
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'UNIDADE_MEDIDA_ADIC_COMPRA' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela UNIDADE_MEDIDA_ADIC_COMPRA do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
		end if;

	elsif (nm_tabela_p = 'INSPECAO_REGRA_MATERIAL') then
		
		if (ie_substituir_p = 'S') then
			begin
			delete from inspecao_regra_material
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;
		
		select	count(*)
		into STRICT	qt_existe_w
		from	inspecao_regra_material
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if (qt_existe_w = 0) then

			insert into inspecao_regra_material(
				nr_sequencia,			cd_estabelecimento,		dt_atualizacao,
				nm_usuario,			dt_atualizacao_nrec,		nm_usuario_nrec,
				cd_material,			ie_validade,			qt_dias_validade,
				ie_temperatura,			qt_temperatura_min,		qt_temperatura_max,
				ie_abrigo_luz,			ie_aspecto,				qt_temp_min_transp,
                qt_temp_max_transp)
			SELECT	nextval('inspecao_regra_material_seq'),			cd_estab_destino_p,		clock_timestamp(),
				nm_usuario_p,			clock_timestamp(),				nm_usuario_p,
				cd_material,			ie_validade,			qt_dias_validade,
				ie_temperatura,			qt_temperatura_min,		qt_temperatura_max,   
				ie_abrigo_luz,			ie_aspecto,			    qt_temp_min_transp,
                qt_temp_max_transp
			from	inspecao_regra_material
			where	cd_material	= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			CALL sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'INSPECAO_REGRA_MATERIAL'), /*'Copia da INSPECAO_REGRA_MATERIAL,*/
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'INSPECAO_REGRA_MATERIAL' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela INSPECAO_REGRA_MATERIAL do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
		end if;

	elsif	(nm_tabela_p = 'LOCALIZACAO_ESTOQUE_LOCAL') then
		
		if	(ie_substituir_p = 'S') then
			begin
			delete from localizacao_estoque_local
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;
		
		select	count(*)
		into	qt_existe_w
		from	localizacao_estoque_local
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if	(qt_existe_w = 0) then

			insert into localizacao_estoque_local(
				nr_sequencia,			dt_atualizacao,			nm_usuario,             
				cd_estabelecimento,		cd_local_estoque,			cd_material,
				ds_localizacao,			nr_seq_local)
			select	localizacao_estoque_local_seq.nextval,			sysdate,				nm_usuario_p,
				cd_estab_destino_p,		cd_local_estoque,			cd_material,
				ds_localizacao,			nr_seq_local
			from	localizacao_estoque_local
			where	cd_material	= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'LOCALIZACAO_ESTOQUE_LOCAL'), /*'Copia da LOCALIZACAO_ESTOQUE_LOCAL,*/
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'LOCALIZACAO_ESTOQUE_LOCAL' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela LOCALIZACAO_ESTOQUE_LOCAL do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
		end if;
		
	elsif (nm_tabela_p = 'MATERIAL_SIMPRO') then
		
		if (ie_substituir_p = 'S') then
			begin
			delete from material_simpro
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;
		
		select	count(*)
		into STRICT	qt_existe_w
		from	material_simpro
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if (qt_existe_w = 0) then
			
			insert into material_simpro(
				nr_sequencia,			cd_material,			cd_simpro,
				dt_atualizacao,			nm_usuario,			qt_conversao,
				dt_atualizacao_nrec,		nm_usuario_nrec,			cd_estabelecimento,
				cd_convenio,			dt_vigencia,			ie_tipo_convenio, nr_seq_marca)
			SELECT	nextval('material_simpro_seq'),			cd_material,			cd_simpro,
				clock_timestamp(),				nm_usuario_p,			qt_conversao,
				clock_timestamp(),				nm_usuario_p,			cd_estab_destino_p,
				cd_convenio,			dt_vigencia,			ie_tipo_convenio, nr_seq_marca
			from	material_simpro
			where	cd_material	= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			CALL sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'MATERIAL_SIMPRO'), /*'Copia da MATERIAL_SIMPRO,*/
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'MATERIAL_SIMPRO' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela MATERIAL_SIMPRO do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
		end if;

	elsif	(nm_tabela_p = 'MATERIAL_BRASINDICE') then
		
		if	(ie_substituir_p = 'S') then
			begin
			delete from material_brasindice
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;
		
		select	count(*)
		into	qt_existe_w
		from	material_brasindice
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if	(qt_existe_w = 0) then
			
			insert into material_brasindice(
				cd_laboratorio,			cd_medicamento,			cd_apresentacao,
				cd_material,			ie_prioridade,			ie_situacao,
				dt_atualizacao,			nm_usuario,			qt_conversao,
				dt_vigencia,			dt_atualizacao_nrec,		nm_usuario_nrec,
				cd_convenio,			nr_sequencia,			cd_estabelecimento,
				ie_tipo_convenio, nr_seq_marca)
			select	cd_laboratorio,			cd_medicamento,			cd_apresentacao,
				cd_material,			ie_prioridade,			ie_situacao,
				sysdate,				nm_usuario_p,			qt_conversao,
				dt_vigencia,			sysdate,				nm_usuario_p,
				cd_convenio,			material_brasindice_seq.nextval,			cd_estab_destino_p,
				ie_tipo_convenio, nr_seq_marca
			from	material_brasindice
			where	cd_material	= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'MATERIAL_BRASINDICE'), /*'Copia da MATERIAL_BRASINDICE*/
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'MATERIAL_BRASINDICE' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela MATERIAL_BRASINDICE do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
		end if;

	elsif (nm_tabela_p = 'CONVERSAO_MATERIAL_CONVENIO') then
		
		if (ie_substituir_p = 'S') then
			begin
			delete from conversao_material_convenio
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;
		
		select	count(*)
		into STRICT	qt_existe_w
		from	conversao_material_convenio
		where	cd_material	= cd_material_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if (qt_existe_w = 0) then
			begin
			open C05;
			loop
			fetch C05 into	
				nr_sequencia_ww;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				
				insert into conversao_material_convenio(	
					nr_sequencia,			cd_convenio,			cd_material_convenio,
					dt_atualizacao,			nm_usuario,			cd_grupo_material,
					cd_subgrupo_material,		cd_classe_material,		cd_material,
					ds_material_convenio,		cd_grupo,			tx_conversao_qtde,
					cd_unidade_convenio,		cd_setor_atendimento,		cd_cgc,
					ie_classif_acomod,		dt_inicio_vigencia,		dt_final_vigencia,
					cd_estabelecimento,		dt_dia_semana,			ie_situacao,
					hr_inicial,			hr_final,			ie_feriado,
					ie_tipo_material_conv,		cd_categoria,			ie_tipo_atendimento,
					nr_seq_marca,				ie_tipo_material,	ie_tipo_preco_autor,
                                        nr_proc_interno)
				SELECT	nextval('conversao_mat_convenio_seq'),			cd_convenio,			cd_material_convenio,
					clock_timestamp(),			nm_usuario_p,			cd_grupo_material,
					cd_subgrupo_material,		cd_classe_material,		cd_material,
					ds_material_convenio,		cd_grupo,			tx_conversao_qtde,
					cd_unidade_convenio,		null,				cd_cgc,
					ie_classif_acomod,		dt_inicio_vigencia,		dt_final_vigencia,
					cd_estab_destino_p,		dt_dia_semana,			ie_situacao,
					hr_inicial,			hr_final,			ie_feriado,
					ie_tipo_material_conv,		cd_categoria,			ie_tipo_atendimento,
					nr_seq_marca,				ie_tipo_material,	ie_tipo_preco_autor,
                                        nr_proc_interno
				from	conversao_material_convenio
				where	nr_sequencia = nr_sequencia_ww;
				end;
			end loop;
			close C05;
			
			CALL sup_gravar_historico_material(	cd_estab_destino_p,
						cd_material_w,
						Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'CONVERSAO_MATERIAL_CONVENIO'), /*'Copia da CONVERSAO_MATERIAL_CONVENIO*/
						WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'CONVERSAO_MATERIAL_CONVENIO' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela CONVERSAO_MATERIAL_CONVENIO do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
						'S',
						nm_usuario_p);
			
			end;
		end if;
	elsif	(nm_tabela_p = 'MATERIAL_ARMAZENAMENTO') then
		
		if	(ie_substituir_p = 'S') then
			begin
			delete	material_armazenamento
			where	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estab_destino_p;
			exception when others then
				qt_existe_w := 0;
			end;
		end if;

			begin
			for C06_w in C06
			loop
				begin
				select	nvl(max(a.nr_sequencia), 0)
				into	qt_existe_w
				from	material_armazenamento a
				where	a.cd_material	= cd_material_w
				and		a.cd_estabelecimento	= cd_estab_destino_p
				and		a.nr_seq_estagio = C06_w.nr_seq_estagio
				and		a.nr_seq_forma = C06_w.nr_seq_forma
				and		nvl(a.nr_seq_reconstituicao, 0) = nvl(C06_w.nr_seq_reconstituicao, 0)
				and		nvl(a.nr_seq_diluicao, 0) = nvl(C06_w.nr_seq_diluicao, 0)
				and		nvl(a.ie_via_aplicacao, 'XPTO') = nvl(C06_w.ie_via_aplicacao, 'XPTO')
				and		nvl(a.qt_estabilidade, 0) = nvl(C06_w.qt_estabilidade, 0)
				and		nvl(a.ie_tempo_estab, 'XYZ') = nvl(C06_w.ie_tempo_estab, 'XYZ')
				and		nvl(a.nr_seq_marca, 0) = nvl(C06_w.nr_seq_marca, 0)
				and		nvl(a.ie_protegido, 'N') = nvl(C06_w.ie_protegido, 'N')
				and		nvl(a.ie_estab_fornec, 'N') = nvl(C06_w.ie_estab_fornec, 'N');

				if	(qt_existe_w = 0) then
					ie_insert := true;
					insert into material_armazenamento(
					cd_estabelecimento,         cd_material,                ds_referencia,
					dt_atualizacao,              dt_atualizacao_nrec,	ie_estab_fornec,
					ie_protegido,               ie_tempo_estab,             ie_via_aplicacao,
					nm_usuario,		    nm_usuario_nrec,            nr_seq_apres,               
					nr_seq_diluicao,            nr_seq_estagio,             nr_seq_forma,               
					nr_seq_marca,               nr_seq_reconstituicao,	nr_sequencia,
					qt_estabilidade)
					select	cd_estab_destino_p,         cd_material,                ds_referencia,
						sysdate,		    sysdate,			ie_estab_fornec,
						ie_protegido,               ie_tempo_estab,             ie_via_aplicacao,
						nm_usuario_p,		    nm_usuario_p,           	nr_seq_apres,               
						nr_seq_diluicao,            nr_seq_estagio,             nr_seq_forma,               
						nr_seq_marca,               nr_seq_reconstituicao,	material_armazenamento_seq.nextval,
						qt_estabilidade
					from	material_armazenamento
					where	nr_sequencia = C06_w.nr_sequencia
					and	cd_estabelecimento = cd_estabelecimento_p;
				end if;
				end;
			end loop;

			if (ie_insert) then
				sup_gravar_historico_material(	cd_estab_destino_p,
							cd_material_w,
							Wheb_mensagem_pck.get_Texto(309998, 'NM_TABELA_W='|| 'MATERIAL_ARMAZENAMENTO'), /*'Copia da MATERIAL_ARMAZENAMENTO*/
							PERFORM WHEB_MENSAGEM_PCK.get_texto(309994,'CD_ESTABELECIMENTO_P='|| CD_ESTABELECIMENTO_P||';NM_TABELA_W='|| 'MATERIAL_ARMAZENAMENTO' ||';CD_ESTAB_DESTINO_P='|| CD_ESTAB_DESTINO_P), /*'Foi copiado as informacoes da tabela MATERIAL_ARMAZENAMENTO do estabelecimento ' || cd_estabelecimento_p || ' para ' || cd_estab_destino_p || '.',*/
							'S',
							nm_usuario_p);
				ie_insert := false;
			end if;
			end;
	end if;
	end;
end loop;
close C01;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copia_dados_material_estab ( cd_material_p bigint, cd_estabelecimento_p bigint, cd_estab_destino_p bigint, ie_opcao_copia_p bigint, nm_tabela_p text, ie_substituir_p text, nm_usuario_p text, ds_erro_p INOUT text ) FROM PUBLIC;

