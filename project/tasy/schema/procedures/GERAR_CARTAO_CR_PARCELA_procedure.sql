-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cartao_cr_parcela ( nr_seq_movto_p bigint, nm_usuario_p text, dt_primeira_parcela_p timestamp, ie_commit_p text default 'S') AS $body$
DECLARE


ie_proximo_mes_w		varchar(10);
ie_dias_uteis_w		varchar(2);
ie_tipo_cartao_w		varchar(15);
ie_arredondamento_w	varchar(1);
ie_debito_parcelado_w	varchar(1)	:= 'N';
vl_liquido_dec_w		double precision;
vl_sobra_w		double precision;
vl_parcela_w		double precision;
vl_transacao_w		double precision;
vl_dizima_w		double precision;
vl_liquido_w		double precision;
vl_minimo_parcela_w	double precision;
vl_desconto_operadora_w	double precision;
nr_seq_forma_pagto_w	bigint	:= null;
nr_seq_bandeira_w		bigint;
nr_seq_regra_w		bigint;
tx_administracao_w		double precision	:= null;
qt_parcela_w		bigint	:= null;
qt_dias_venc_w		bigint;
qt_gerada_w		bigint	:= 0;
qt_parcelas_w		bigint;
cd_estabelecimento_w	smallint;
nr_dia_fixo_w		smallint;
dt_transacao_w		timestamp;
dt_parcela_w		timestamp;
dt_util_w			timestamp;
cd_estab_ativo_w		bigint;
vl_despesa_w		double precision;
nr_seq_parcela_w		bigint;
nr_seq_primeira_w		bigint;
vl_despesa_movto_w	double precision;
vl_total_despesa_w		double precision;
ie_trunc_vl_depe_mvto_w 	varchar(1)	 := 'N';
nr_parcela_w				bigint	:= 0;
ie_lib_caixa_w		movto_cartao_cr.ie_lib_caixa%type;

vl_parcela_orig_w		movto_cartao_cr_parcela.vl_parcela%type;
qt_parc_w				bigint;
vl_minimo_taxa_w		forma_pagto_regra.vl_minimo_taxa%type;
nr_sequencia_w			movto_cartao_cr_parcela.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
			nr_parcela,
			vl_parcela
	from	movto_cartao_cr_parcela
	where	nr_seq_movto = nr_seq_movto_p
	order  by nr_parcela;


BEGIN

ie_trunc_vl_depe_mvto_w := Obter_Valor_Param_Usuario(3020, 63, Obter_perfil_Ativo, nm_usuario_p, 0);

delete	from movto_cartao_cr_parcela
where	nr_seq_movto	= nr_seq_movto_p;

select	count(*)
into STRICT	qt_parcelas_w
from	movto_cartao_cr_parcela
where	nr_seq_movto	= nr_seq_movto_p;

if (qt_parcelas_w = 0) then
	begin
	select	max(a.nr_seq_forma_pagto),
		coalesce(max(a.qt_parcela),0),
		max(a.dt_transacao),
		max(a.vl_transacao),
		max(a.nr_seq_bandeira),
		max(a.ie_tipo_cartao),
		max(a.cd_estabelecimento),
		max(a.vl_desconto_operadora),
		max(a.ie_lib_caixa)
	into STRICT	nr_seq_forma_pagto_w,
		qt_parcela_w,
		dt_transacao_w,
		vl_transacao_w,
		nr_seq_bandeira_w,
		ie_tipo_cartao_w,
		cd_estabelecimento_w,
		vl_desconto_operadora_w,
		ie_lib_caixa_w
	from	movto_cartao_cr a
	where	a.nr_sequencia	= nr_seq_movto_p;

	if (nr_seq_bandeira_w IS NOT NULL AND nr_seq_bandeira_w::text <> '') then
		select	coalesce(ie_debito_parcelado,'N')
		into STRICT	ie_debito_parcelado_w
		from	bandeira_cartao_cr
		where	nr_sequencia	= nr_seq_bandeira_w;
	end if;

	if (ie_tipo_cartao_w = 'D') and /* Tratamento para não deixar mais de uma parcela com cartão de débito */
		(qt_parcela_w > 1) and (ie_debito_parcelado_w = 'N') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(203881);
	end if;

	if (coalesce(nr_seq_forma_pagto_w::text, '') = '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(203882);
	elsif (coalesce(qt_parcela_w::text, '') = '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(203882);
	end if;

	dt_parcela_w		:= dt_transacao_w;
	cd_estab_ativo_w	:= obter_estabelecimento_ativo;
	nr_seq_primeira_w	:= null;

	while(qt_gerada_w < qt_parcela_w) loop

		nr_seq_regra_w := obter_forma_pgto_regra_parc(	nr_seq_forma_pagto_w, nr_seq_bandeira_w, ie_tipo_cartao_w, vl_transacao_w, qt_gerada_w + 1, nr_seq_regra_w); /* Diether -  OS 382255 - Permitir gerar taxas diferentes para determinada faixa de pracela */
						
		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
			select	max(a.tx_administracao),
				max(a.qt_dias_venc),
				max(a.ie_arredondamento),
				max(a.ie_dias_uteis),
				max(a.vl_minimo_parcela),
				max(a.nr_dia_fixo),
				max(a.ie_proximo_mes),
				max(a.vl_minimo_taxa)
			into STRICT	tx_administracao_w,
				qt_dias_venc_w,
				ie_arredondamento_w,
				ie_dias_uteis_w,
				vl_minimo_parcela_w,
				nr_dia_fixo_w,
				ie_proximo_mes_w,
				vl_minimo_taxa_w
			from	forma_pagto_regra	a
			where	nr_sequencia	= nr_seq_regra_w;
		else
			select	max(a.tx_administracao),
				max(a.qt_dias_venc),
				max(a.ie_arredondamento),
				max(a.ie_dias_uteis),
				max(a.vl_minimo_parcela),
				max(a.nr_dia_fixo),
				max(a.ie_proximo_mes),
				max(a.vl_minimo_taxa)
			into STRICT	tx_administracao_w,
				qt_dias_venc_w,
				ie_arredondamento_w,
				ie_dias_uteis_w,
				vl_minimo_parcela_w,
				nr_dia_fixo_w,
				ie_proximo_mes_w,
				vl_minimo_taxa_w
			from	forma_pagto_regra a
			where	a.nr_seq_forma		= nr_seq_forma_pagto_w
			and	a.nr_seq_bandeira	= nr_seq_bandeira_w
			and	a.ie_tipo_cartao	= ie_tipo_cartao_w
			and	a.dt_inicio_vigencia	< clock_timestamp()
			and 	coalesce(a.cd_estabelecimento, cd_estab_ativo_w) = cd_estab_ativo_w
			and	qt_parcela_w between coalesce(a.nr_parcela_inicio,1) and coalesce(a.nr_parcela_fim,999)
			and	vl_transacao_w		between coalesce(a.vl_transacao_inicio,-999999999999999) and coalesce(a.vl_transacao_fim,999999999999999)
			and	a.dt_inicio_vigencia	= 	(SELECT	max(x.dt_inicio_vigencia)
								from	forma_pagto_regra x
								where	x.nr_seq_forma		= a.nr_seq_forma
								and	x.nr_seq_bandeira	= a.nr_seq_bandeira
								and	x.ie_tipo_cartao	= a.ie_tipo_cartao
								and 	coalesce(x.cd_estabelecimento, cd_estab_ativo_w) = cd_estab_ativo_w
								and	qt_parcela_w between coalesce(x.nr_parcela_inicio,1) and coalesce(x.nr_parcela_fim,999));
		end if;

		if (coalesce(tx_administracao_w::text, '') = '') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(203886);
		end if;

		if (coalesce(ie_proximo_mes_w,'N') = 'S') then /*lhalves OS 350724 em 14/07/2011*/
			dt_parcela_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_parcela_w, 1,0);
		else
			dt_parcela_w	:= PKG_DATE_UTILS.start_of(dt_parcela_w,'dd', 0) + qt_dias_venc_w;
		end if;
		
		if (nr_dia_fixo_w IS NOT NULL AND nr_dia_fixo_w::text <> '') then /*lhalves OS 350724 - Gerar em um dia fixo*/
			dt_parcela_w	:= PKG_DATE_UTILS.start_of(dt_parcela_w,'MONTH', 0) + nr_dia_fixo_w - 1;
		end if;

		if (dt_primeira_parcela_p IS NOT NULL AND dt_primeira_parcela_p::text <> '') and /* Francisco - OS 170026 - 02/10/2009 */
			(qt_gerada_w = 0) then
			dt_parcela_w	:= dt_primeira_parcela_p;
		end if;

		dt_util_w	:= null; /* Tratamento dia útil, feito dessa forma para que somente prorrogue a data de 1 vencimento */
		if (ie_dias_uteis_w = 'S') then
			dt_util_w	:=  obter_proximo_dia_util(cd_estabelecimento_w,dt_parcela_w);
		end if;

		vl_parcela_w	:= trunc(coalesce(dividir_sem_round(vl_transacao_w,qt_parcela_w),0),2); /* Valor bruto da parcela */
		vl_dizima_w	:= coalesce(vl_transacao_w - (vl_parcela_w * qt_parcela_w),0); /* Em caso de dízima */
		if (vl_dizima_w <> 0) then /* Arredondamento */
			if (qt_gerada_w = 0 and (ie_arredondamento_w = 'P' or ie_arredondamento_w = 'D')) or (qt_gerada_w = qt_parcela_w - 1 and ie_arredondamento_w = 'U') then
				vl_parcela_w	:= vl_parcela_w + abs(vl_dizima_w);
			else
				vl_parcela_w	:= vl_parcela_w;
		   	end if;
		end if;
		
		vl_parcela_orig_w := vl_parcela_w;

		if (vl_minimo_parcela_w IS NOT NULL AND vl_minimo_parcela_w::text <> '') then
			if (vl_parcela_w < vl_minimo_parcela_w) then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(203887);
			end if;
		end if;	

		if (ie_arredondamento_w	= 'B') then	/* Valor líquido da parcela */
			vl_liquido_dec_w	:= trunc(vl_parcela_w - (vl_parcela_w * (tx_administracao_w/100)),3);
			vl_sobra_w		:= vl_liquido_dec_w - trunc(vl_liquido_dec_w,2);

			if (vl_sobra_w	<= 0.005) then
				vl_liquido_w	:= trunc(vl_liquido_dec_w,2);
			else
				vl_liquido_w	:= round((vl_liquido_dec_w)::numeric,2);
			end if;
		elsif (ie_arredondamento_w	= 'D') then

			/* se for a primeira parcela, arredondar para cima (caso a casa decimal for 5) */

			if (qt_gerada_w	= 0) then /* se for a primeira parcela */
				vl_despesa_w	:= ((vl_transacao_w * (tx_administracao_w/100)) / qt_parcela_w);
				vl_liquido_w	:= vl_parcela_w - vl_despesa_w;
			else	/* nas demais parcelas, arredondar para baixo */
				vl_despesa_w	:= trunc((vl_transacao_w * (tx_administracao_w/100)) / qt_parcela_w,2);
				vl_liquido_w	:= vl_parcela_w - vl_despesa_w;
			end if;

			vl_total_despesa_w	:= coalesce(vl_total_despesa_w,0) + coalesce(vl_despesa_w,0);

			/* se for a última parcela, lançar a diferença na primeira parcela */

			if (qt_gerada_w	= qt_parcela_w - 1) then

				vl_despesa_movto_w	:= vl_transacao_w * (tx_administracao_w/100);

				update	movto_cartao_cr_parcela
				set	vl_despesa		= coalesce(vl_despesa,0) + coalesce(vl_despesa_movto_w,0) - coalesce(vl_total_despesa_w,0),
					vl_liquido		= coalesce(vl_liquido,0) + coalesce(vl_total_despesa_w,0) - coalesce(vl_despesa_movto_w,0),
					vl_saldo_liquido	= coalesce(vl_saldo_liquido,0) + coalesce(vl_total_despesa_w,0) - coalesce(vl_despesa_movto_w,0)
				where	nr_sequencia		= nr_seq_primeira_w
				and	nr_seq_movto		= nr_seq_movto_p;

			end if;

		else
			if (coalesce(ie_trunc_vl_depe_mvto_w, 'N') = 'S') then
				vl_liquido_w	:= vl_parcela_w - trunc((vl_parcela_w * (tx_administracao_w/100)),2);
			else
				vl_liquido_w	:= vl_parcela_w - (vl_parcela_w * (tx_administracao_w/100));
			end if;	
		end if;

		if (coalesce(vl_desconto_operadora_w,0) > 0) then
			vl_parcela_w:= (vl_parcela_w - (vl_desconto_operadora_w/qt_parcela_w));

		end if;

		select	nextval('movto_cartao_cr_parcela_seq')
		into STRICT	nr_seq_parcela_w
		;

		if (coalesce(nr_seq_primeira_w::text, '') = '') then
			nr_seq_primeira_w	:= nr_seq_parcela_w;
		end if;
		
		nr_parcela_w := coalesce(nr_parcela_w,0) + 1;

		insert	into movto_cartao_cr_parcela(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_movto,
			dt_parcela,
			vl_parcela,
			vl_liquido,
			vl_saldo_liquido,
			vl_despesa,
			nr_parcela)
		values (nr_seq_parcela_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_movto_p,
			coalesce(dt_util_w,dt_parcela_w),
			vl_parcela_w,
			vl_liquido_w,
			vl_liquido_w,
			coalesce((vl_parcela_w - vl_liquido_w),0),
			nr_parcela_w);

		qt_gerada_w	:= qt_gerada_w + 1;
	end loop;
	end;
	
	/*OS 1854611 - Inicio da tratativa do Valor mínimo de despesa do cartão.*/

	select	coalesce(sum(b.vl_despesa),0)
	into STRICT	vl_total_despesa_w
	FROM movto_cartao_cr a
LEFT OUTER JOIN movto_cartao_cr_parcela b ON (a.nr_sequencia = b.nr_seq_movto)
WHERE a.nr_sequencia	= nr_seq_movto_p;

	if (coalesce(vl_minimo_taxa_w,0) > 0) and (coalesce(vl_total_despesa_w,0) < coalesce(vl_minimo_taxa_w,0)) then

		open C01;
		loop
		fetch C01 into	
			nr_sequencia_w,
			nr_parcela_w,
			vl_parcela_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			vl_liquido_w := 0;
			vl_liquido_w := round((vl_parcela_w - (vl_minimo_taxa_w/qt_parcela_w)),2);

			update	movto_cartao_cr_parcela
			set		vl_liquido = vl_liquido_w,
					vl_saldo_liquido = vl_liquido_w,
					vl_despesa = vl_parcela_w - vl_liquido_w
			where	nr_seq_movto = nr_seq_movto_p
			and		nr_sequencia = nr_sequencia_w;
			
			
			end;
		end loop;
		close C01;
	/*
		P = Primeira parcela
		U = Última parcela
		As Opções B e D não são tratadas aqui. Está no informativo deste campo no cadasto da regra.
	*/
	
		/*Buscar novamente o valor total de despesas para comparar com o valor minimo da regra e arredondar se necessário*/

		select	coalesce(sum(b.vl_despesa),0)
		into STRICT	vl_total_despesa_w
		FROM movto_cartao_cr a
LEFT OUTER JOIN movto_cartao_cr_parcela b ON (a.nr_sequencia = b.nr_seq_movto)
WHERE a.nr_sequencia	= nr_seq_movto_p;

		if (ie_arredondamento_w in ('P','U')) then
		
			select	CASE WHEN ie_arredondamento_w='P' THEN min(nr_sequencia) WHEN ie_arredondamento_w='U' THEN  max(nr_sequencia) END
			into STRICT	nr_seq_parcela_w
			from	movto_cartao_cr_parcela
			where	nr_seq_movto = nr_seq_movto_p;

			if (nr_seq_parcela_w IS NOT NULL AND nr_seq_parcela_w::text <> '') then

				if (coalesce(vl_total_despesa_w,0) > coalesce(vl_minimo_taxa_w,0)) then				
					update	movto_cartao_cr_parcela
					set		vl_liquido 			= vl_liquido + (coalesce(vl_total_despesa_w,0) - coalesce(vl_minimo_taxa_w,0)),
							vl_saldo_liquido 	= vl_saldo_liquido + (coalesce(vl_total_despesa_w,0) - coalesce(vl_minimo_taxa_w,0))
					where	nr_seq_movto		= nr_seq_movto_p
					and		nr_sequencia		= nr_seq_parcela_w;
					
					update	movto_cartao_cr_parcela
					set		vl_despesa 			= vl_parcela - vl_liquido
					where	nr_seq_movto		= nr_seq_movto_p
					and		nr_sequencia		= nr_seq_parcela_w;			
				
				elsif (coalesce(vl_total_despesa_w,0) < coalesce(vl_minimo_taxa_w,0)) then

					update	movto_cartao_cr_parcela
					set		vl_liquido 			= vl_liquido - (coalesce(vl_minimo_taxa_w,0) - coalesce(vl_total_despesa_w,0)),
							vl_saldo_liquido 	= vl_saldo_liquido - (coalesce(vl_minimo_taxa_w,0) - coalesce(vl_total_despesa_w,0))
					where	nr_seq_movto		= nr_seq_movto_p
					and		nr_sequencia		= nr_seq_parcela_w;
					
					update	movto_cartao_cr_parcela
					set		vl_despesa 			= vl_parcela - vl_liquido
					where	nr_seq_movto		= nr_seq_movto_p
					and		nr_sequencia		= nr_seq_parcela_w;
				
				end if;
			
			end if;	
	
		end if;
		
	end if;
	/*OS 1854611 - FIM da tratativa do Valor mínimo de despesa do cartão.*/


	
	
	/* ie_lib_cx 'S' para tratar criação de movimentação manualmente na Administração de Cartões. 
	Neste caso, a geração do imposto não ocorre na geração da parcela no caixa. A geração ocorre na confirmação do recebimento - Fechar_caixa_receb*/
	if (coalesce(ie_lib_caixa_w,'S') = 'S') then
		CALL gerar_imposto_cartao_cr(nr_seq_movto_p,
                            cd_estabelecimento_w,
                            clock_timestamp(),
                            nm_usuario_p);
	end if;
	
	
else
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(203889);
end if;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cartao_cr_parcela ( nr_seq_movto_p bigint, nm_usuario_p text, dt_primeira_parcela_p timestamp, ie_commit_p text default 'S') FROM PUBLIC;

