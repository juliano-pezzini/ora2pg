-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_fechamento_partic ( dt_inicial_p timestamp, dt_final_p timestamp, ie_data_p text, cd_setor_atendimento_p text, ie_status_atendimento_p text, cd_estagio_conta_p text, cd_medico_executor_p text, cd_convenio_p text, cd_categoria_convenio_p text, ie_tipo_atendimento_p text, ie_pac_leito_internacao_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_atendimento_w			bigint;
nr_interno_conta_w			bigint;
dt_alta_w				timestamp;
dt_previsto_alta_w			timestamp;
cd_convenio_w			integer;
ds_convenio_w			varchar(255);
cd_categoria_convenio_w		varchar(10);
ie_tipo_atendimento_w		smallint;
ds_motivo_alta_w			varchar(255);
nm_pessoa_fisica_w		varchar(255);
nm_medico_w			varchar(255);
cd_medico_resp_w			varchar(10);
ds_setor_atual_w			varchar(255);
ds_estagio_conta_w		varchar(255);
nr_seq_estagio_conta_w		bigint;
vl_conta_w			double precision;
ds_unidades_w			varchar(255);
ds_categoria_w			varchar(255);
ie_insere_w			varchar(01) := 'S';
nr_seq_ult_audit_conta_w		bigint;
dt_inicio_auditoria_w		timestamp;
dt_fim_auditoria_w			timestamp;
dt_liberacao_w			timestamp;
dt_alta_medico_w			timestamp;
ie_probabilidade_alta_w		varchar(03);
ie_status_atend_w			varchar(03);
ds_status_atend_w			varchar(255);
dt_status_atend_w			timestamp;
cd_setor_atual_w			integer;
ds_tipo_atendimento_w		varchar(255);
cd_estabelecimento_w		integer;

c01 CURSOR FOR 
SELECT	b.nr_atendimento, 
	a.nr_interno_conta, 
	b.dt_alta, 
	b.dt_previsto_alta, 
	c.cd_convenio, 
	c.ds_convenio, 
	m.ds_motivo_alta, 
	substr(obter_nome_pf(b.cd_pessoa_fisica),1,255) nm_pessoa_fisica, 
	b.cd_medico_resp, 
	Obter_Setor_Atendimento(b.nr_atendimento) cd_setor_atual, 
	a.nr_seq_estagio_conta, 
	a.vl_conta, 
	substr(Obter_Unidade_Atendimento(a.nr_atendimento, 'A', 'U'),1,255) ds_unidades, 
	substr(obter_dados_conta_paciente(a.nr_interno_conta, 'DC'),1,255) ds_categoria, 
	b.ie_probabilidade_alta, 
	b.dt_alta_medico, 
	a.cd_categoria_parametro, 
	b.ie_tipo_atendimento 
FROM convenio c, conta_paciente a, atendimento_paciente b
LEFT OUTER JOIN motivo_alta m ON (b.cd_motivo_alta = m.cd_motivo_alta)
WHERE a.nr_atendimento 		= b.nr_atendimento and a.cd_convenio_parametro	= c.cd_convenio and a.cd_estabelecimento	= cd_estabelecimento_w and c.ie_tipo_convenio		= 1  and a.ie_status_acerto		= 1 and (b.dt_alta >= dt_inicial_p and b.dt_alta <= dt_final_p) and ie_data_p = 'A' order by 1;

 
c02 CURSOR FOR 
SELECT	b.nr_atendimento, 
	a.nr_interno_conta, 
	b.dt_alta, 
	b.dt_previsto_alta, 
	c.cd_convenio, 
	c.ds_convenio, 
	m.ds_motivo_alta, 
	substr(obter_nome_pf(b.cd_pessoa_fisica),1,255) nm_pessoa_fisica, 
	b.cd_medico_resp, 
	Obter_Setor_Atendimento(b.nr_atendimento) cd_setor_atual, 
	a.nr_seq_estagio_conta, 
	a.vl_conta, 
	substr(Obter_Unidade_Atendimento(a.nr_atendimento, 'A', 'U'),1,255) ds_unidades, 
	substr(obter_dados_conta_paciente(a.nr_interno_conta, 'DC'),1,255) ds_categoria, 
	b.ie_probabilidade_alta, 
	b.dt_alta_medico, 
	a.cd_categoria_parametro, 
	b.ie_tipo_atendimento 
FROM convenio c, conta_paciente a, atendimento_paciente b
LEFT OUTER JOIN motivo_alta m ON (b.cd_motivo_alta = m.cd_motivo_alta)
WHERE a.nr_atendimento 		= b.nr_atendimento and a.cd_convenio_parametro	= c.cd_convenio and a.cd_estabelecimento	= cd_estabelecimento_w and c.ie_tipo_convenio		= 1 and a.ie_status_acerto		= 1 and ie_data_p			= 'S'  and (b.dt_alta IS NOT NULL AND b.dt_alta::text <> '') and b.dt_alta >= dt_inicial_p and b.dt_alta <= dt_final_p 
 
union
 
SELECT	b.nr_atendimento, 
	a.nr_interno_conta, 
	b.dt_alta, 
	b.dt_previsto_alta, 
	c.cd_convenio, 
	c.ds_convenio, 
	m.ds_motivo_alta, 
	substr(obter_nome_pf(b.cd_pessoa_fisica),1,255) nm_pessoa_fisica, 
	b.cd_medico_resp, 
	Obter_Setor_Atendimento(b.nr_atendimento) cd_setor_atual, 
	a.nr_seq_estagio_conta, 
	a.vl_conta, 
	substr(Obter_Unidade_Atendimento(a.nr_atendimento, 'A', 'U'),1,255) ds_unidades, 
	substr(obter_dados_conta_paciente(a.nr_interno_conta, 'DC'),1,255) ds_categoria, 
	b.ie_probabilidade_alta, 
	b.dt_alta_medico, 
	a.cd_categoria_parametro, 
	b.ie_tipo_atendimento 
FROM convenio c, conta_paciente a, atendimento_paciente b
LEFT OUTER JOIN motivo_alta m ON (b.cd_motivo_alta = m.cd_motivo_alta)
WHERE a.nr_atendimento 		= b.nr_atendimento and a.cd_convenio_parametro	= c.cd_convenio and a.cd_estabelecimento	= cd_estabelecimento_w and c.ie_tipo_convenio		= 1 and a.ie_status_acerto		= 1 and ie_data_p 		= 'S'  and coalesce(b.dt_alta::text, '') = '' and b.dt_alta_medico >= dt_inicial_p and b.dt_alta_medico <= dt_final_p 
 
union
 
select	b.nr_atendimento, 
	a.nr_interno_conta, 
	b.dt_alta, 
	b.dt_previsto_alta, 
	c.cd_convenio, 
	c.ds_convenio, 
	m.ds_motivo_alta, 
	substr(obter_nome_pf(b.cd_pessoa_fisica),1,255) nm_pessoa_fisica, 
	b.cd_medico_resp, 
	Obter_Setor_Atendimento(b.nr_atendimento) cd_setor_atual, 
	a.nr_seq_estagio_conta, 
	a.vl_conta, 
	substr(Obter_Unidade_Atendimento(a.nr_atendimento, 'A', 'U'),1,255) ds_unidades, 
	substr(obter_dados_conta_paciente(a.nr_interno_conta, 'DC'),1,255) ds_categoria, 
	b.ie_probabilidade_alta, 
	b.dt_alta_medico, 
	a.cd_categoria_parametro, 
	b.ie_tipo_atendimento 
FROM convenio c, conta_paciente a, atendimento_paciente b
LEFT OUTER JOIN motivo_alta m ON (b.cd_motivo_alta = m.cd_motivo_alta)
WHERE a.nr_atendimento 		= b.nr_atendimento and a.cd_convenio_parametro	= c.cd_convenio and a.cd_estabelecimento	= cd_estabelecimento_w and c.ie_tipo_convenio	= 1 and a.ie_status_acerto	= 1 and ie_data_p = 'S'  and coalesce(b.dt_alta::text, '') = '' and b.dt_previsto_alta >= dt_inicial_p and b.dt_previsto_alta <= dt_final_p order by 1;

 
TYPE 		fetch_array IS TABLE OF c01%ROWTYPE;
s_array 		fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w	Vetor;

BEGIN 
CALL exec_sql_dinamico('Anderson','truncate table W_EIS_FECHAMENTO_PARTIC');
 
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
 
if (ie_data_p = 'A') then 
	begin 
	open c01;
	loop 
	FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
		Vetor_c01_w(i) := s_array;
		i := i + 1;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	END LOOP;
	CLOSE C01;
	end;
elsif (ie_data_p = 'S') then 
	begin 
	open c02;
	loop 
	FETCH C02 BULK COLLECT INTO s_array LIMIT 1000;
		Vetor_c01_w(i) := s_array;
		i := i + 1;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	END LOOP;
	CLOSE C02;
	end;
end if;
 
for i in 1..Vetor_c01_w.COUNT loop 
	s_array := Vetor_c01_w(i);
	for z in 1..s_array.COUNT loop 
	begin 
	 
	nr_atendimento_w			:= s_array[z].nr_atendimento;
	nr_interno_conta_w			:= s_array[z].nr_interno_conta;
	dt_alta_w				:= s_array[z].dt_alta;
	dt_previsto_alta_w			:= s_array[z].dt_previsto_alta;
	cd_convenio_w			:= s_array[z].cd_convenio;
	ds_convenio_w			:= s_array[z].ds_convenio;
	ds_motivo_alta_w			:= s_array[z].ds_motivo_alta;
	nm_pessoa_fisica_w		:= s_array[z].nm_pessoa_fisica;
	cd_medico_resp_w			:= s_array[z].cd_medico_resp;
	cd_setor_atual_w			:= s_array[z].cd_setor_atual;
	nr_seq_estagio_conta_w		:= s_array[z].nr_seq_estagio_conta;
	vl_conta_w			:= s_array[z].vl_conta;
	ds_unidades_w			:= s_array[z].ds_unidades;
	ds_categoria_w			:= s_array[z].ds_categoria;
	cd_categoria_convenio_w		:= s_array[z].cd_categoria_parametro;
	ie_tipo_atendimento_w		:= s_array[z].ie_tipo_atendimento;
	ie_probabilidade_alta_w		:= s_array[z].ie_probabilidade_alta;
	ie_insere_w			:= 'S';
 
	if (coalesce(nr_seq_estagio_conta_w,0) > 0) then 
		select ds_estagio 
		into STRICT  ds_estagio_conta_w 
		from  estagio_conta 
		where  nr_sequencia = nr_seq_estagio_conta_w;
	end if;
 
	if (coalesce(cd_medico_resp_w,'X') <> 'X') then 
		select	nm_pessoa_fisica 
		into STRICT	nm_medico_w 
		from	pessoa_fisica 
		where	cd_pessoa_fisica = cd_medico_resp_w;
	end if;
 
	 
	if (coalesce(cd_setor_atual_w,0) > 0) then 
		select	ds_setor_atendimento 
		into STRICT	ds_setor_atual_w 
		from	setor_atendimento 
		where	cd_setor_atendimento = cd_setor_atual_w;
	end if;
	 
	if (coalesce(ie_tipo_atendimento_w,0) > 0) then 
		select	substr(obter_valor_dominio(12,to_char(ie_tipo_atendimento_w)),1,255) 
		into STRICT	ds_tipo_atendimento_w 
		;
	end if;
 
	 
	if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') and (obter_se_contido(cd_setor_atual_w, substr(cd_setor_atendimento_p,2,length(cd_setor_atendimento_p))) <> substr(cd_setor_atendimento_p,1,1)) then 
		ie_insere_w	:= 'N';
		goto final;
		 
	end if;
	 
	 
	if (cd_estagio_conta_p IS NOT NULL AND cd_estagio_conta_p::text <> '') and (obter_se_contido(nr_seq_estagio_conta_w, substr(cd_estagio_conta_p,2,length(cd_estagio_conta_p))) <> substr(cd_estagio_conta_p,1,1)) then 
		ie_insere_w	:= 'N';
		goto final;
	end if;
	 
	 
	if (cd_medico_executor_p IS NOT NULL AND cd_medico_executor_p::text <> '') and (obter_se_contido(cd_medico_resp_w, substr(cd_medico_executor_p,2,length(cd_medico_executor_p))) <> substr(cd_medico_executor_p,1,1)) then 
		ie_insere_w	:= 'N';
		goto final;
	end if;	
	 
	if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') and (obter_se_contido(cd_convenio_w, substr(cd_convenio_p,2,length(cd_convenio_p))) <> substr(cd_convenio_p,1,1)) then 
		ie_insere_w	:= 'N';
		goto final;
	end if;		
 
	if (cd_categoria_convenio_p IS NOT NULL AND cd_categoria_convenio_p::text <> '') and (obter_se_contido_char(replace(cd_convenio_w||cd_categoria_convenio_w,' ',''),replace(substr(cd_categoria_convenio_p,2,length(cd_categoria_convenio_p)),' ','')) <> substr(cd_categoria_convenio_p,1,1)) then 
		ie_insere_w	:= 'N';
		goto final;
	end if;
	 
	if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') and (obter_se_contido(ie_tipo_atendimento_w, substr(ie_tipo_atendimento_p,2,length(ie_tipo_atendimento_p))) <> substr(ie_tipo_atendimento_p,1,1)) then 
		ie_insere_w	:= 'N';
		goto final;
	end if;
	 
	ie_status_atend_w	:= ie_probabilidade_alta_w;
	ds_status_atend_w	:= substr(obter_valor_dominio(1267, ie_probabilidade_alta_w),1,255);
	 
	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then 
		ie_status_atend_w	:= 'X';
		--ds_status_atend_w	:= 'Alta hospitalar'; 
		ds_status_atend_w := wheb_mensagem_pck.get_texto(304107);
	end if;
		 
	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then 
		dt_status_atend_w	:= dt_alta_w;
	elsif (dt_alta_medico_w IS NOT NULL AND dt_alta_medico_w::text <> '') then 
		dt_status_atend_w	:= dt_alta_medico_w;
	elsif (dt_previsto_alta_w IS NOT NULL AND dt_previsto_alta_w::text <> '') then 
		dt_status_atend_w	:= dt_previsto_alta_w;
	else 
		dt_status_atend_w	:= '';
	end if;
	 
	if (ie_status_atendimento_p IS NOT NULL AND ie_status_atendimento_p::text <> '') and (obter_se_contido_char(replace(ie_status_atend_w,' ',''),replace(substr(ie_status_atendimento_p,2,length(ie_status_atendimento_p)),' ','')) <> substr(ie_status_atendimento_p,1,1)) then 
		ie_insere_w	:= 'N';
		goto final;
	end if;
	 
	select max(nr_sequencia) 
	into STRICT  nr_seq_ult_audit_conta_w 
	from  auditoria_conta_paciente 
	where  nr_interno_conta = nr_interno_conta_w;
 
	if (coalesce(nr_seq_ult_audit_conta_w,0) > 0) then 
		select	min(x.dt_periodo_inicial), 
			max(x.dt_periodo_final), 
			max(x.dt_liberacao) 
		into STRICT	dt_inicio_auditoria_w, 
			dt_fim_auditoria_w, 
			dt_liberacao_w 
		from	auditoria_conta_paciente x 
		where	nr_sequencia = nr_seq_ult_audit_conta_w;
	end if;
 
	if (coalesce(ie_pac_leito_internacao_p,'N') = 'S') then 
		begin 
		select	'S' 
		into STRICT	ie_insere_w 
		from	setor_atendimento a, 
			unidade_atendimento b 
		where	a.cd_setor_atendimento 	= b.cd_setor_atendimento 
		and 	a.ie_ocup_hospitalar 	= 'S' 
		and	a.cd_setor_atendimento 	= cd_setor_atual_w  LIMIT 1;
		exception 
		when others then 
			ie_insere_w := 'N';
		end;
		 
		if (ie_insere_w	= 'N') then 
			goto final;
		end if;
	end if;
 
	<<final>> 
	if (ie_insere_w = 'S') and (coalesce(nr_interno_conta_w,0) > 0) then 
		begin 
		insert into w_eis_fechamento_partic( 
					nm_usuario, 
					dt_atualizacao, 
					nm_usuario_nrec, 
					dt_atualizacao_nrec, 
					nr_atendimento, 
					nr_interno_conta, 
					dt_alta, 
					dt_previsto_alta, 
					ds_convenio, 
					ds_motivo_alta, 
					nm_pessoa_fisica, 
					nm_medico, 
					nm_setor_atual, 
					ds_status_atend, 
					ds_estagio_conta, 
					vl_conta, 
					dt_inicio_auditoria, 
					dt_fim_auditoria, 
					dt_liberacao, 
					dt_status_atend, 
					ie_status_atend, 
					ds_unidades, 
					ds_categoria, 
					ie_tipo_atendimento, 
					ds_tipo_atendimento) 
				values (	nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nr_atendimento_w, 
					nr_interno_conta_w, 
					dt_alta_w, 
					dt_previsto_alta_w, 
					ds_convenio_w, 
					ds_motivo_alta_w, 
					nm_pessoa_fisica_w, 
					nm_medico_w, 
					ds_setor_atual_w, 
					ds_status_atend_w, 
					ds_estagio_conta_w, 
					vl_conta_w, 
					dt_inicio_auditoria_w, 
					dt_fim_auditoria_w, 
					dt_liberacao_w, 
					dt_status_atend_w, 
					ie_status_atend_w, 
					ds_unidades_w, 
					ds_categoria_w, 
					ie_tipo_atendimento_w, 
					ds_tipo_atendimento_w);
		end;
	end if;
	end;
	end loop;
	commit;
end loop;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_fechamento_partic ( dt_inicial_p timestamp, dt_final_p timestamp, ie_data_p text, cd_setor_atendimento_p text, ie_status_atendimento_p text, cd_estagio_conta_p text, cd_medico_executor_p text, cd_convenio_p text, cd_categoria_convenio_p text, ie_tipo_atendimento_p text, ie_pac_leito_internacao_p text, nm_usuario_p text) FROM PUBLIC;

