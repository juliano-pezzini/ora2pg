-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajustar_preco_pj ( nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_tabela_ant_w		bigint;

nr_seq_segurado_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_plano_w			bigint;
nm_pessoa_fisica_w		varchar(255);
dt_contrato_w			timestamp;
nm_tabela_ant_w			varchar(255);
cd_estabelecimento_w		integer;
ie_preco_w			varchar(2);

nm_tabela_atual_w		varchar(255);
nr_seq_tabela_nova_w		bigint;

nr_seq_plano_preco_w		bigint;
qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
vl_preco_atual_w		double precision;
tx_acrescimo_w			double precision;
vl_preco_nao_subsidiado_w	double precision;

nr_seq_plano_atual_w		bigint;

nr_seq_reajuste_w		bigint;
ds_erro_w			varchar(4000);

C01 CURSOR FOR 
	SELECT	distinct (substr(b.ds_observacao,29,3))::numeric  
	from	pls_segurado a, 
		pls_segurado_historico b 
	where	a.nr_sequencia		= b.nr_seq_segurado 
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and	trunc(dt_historico,'dd')	= to_date('21/05/2009') 
	and	b.ds_historico 		= 'Mudança de tabela' 
	and	a.nr_seq_contrato	= 181;

C02 CURSOR FOR 
	SELECT	distinct a.nr_sequencia, 
		b.nr_sequencia, 
		a.nr_seq_plano, 
		c.nm_pessoa_fisica, 
		coalesce(b.dt_contrato,clock_timestamp()), 
		d.nm_tabela, 
		b.cd_estabelecimento 
	from	pls_segurado a, 
		pls_contrato b, 
		pessoa_fisica c, 
		pls_tabela_preco d, 
		pls_segurado_historico e 
	where	b.nr_sequencia		= a.nr_seq_contrato 
	and	a.cd_pessoa_fisica	= c.cd_pessoa_fisica 
	and	a.nr_seq_tabela		= d.nr_sequencia 
	and	e.nr_seq_segurado	= a.nr_sequencia 
	and	trunc(e.dt_historico,'dd')	= to_date('21/05/2009') 
	and	e.ds_historico 		= 'Mudança de tabela' 
	and	(substr(e.ds_observacao,29,3))::numeric 	= nr_seq_tabela_ant_w 
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and	a.nr_seq_contrato	= 181;
	
c03 CURSOR FOR 
	SELECT	nr_sequencia, 
		qt_idade_inicial, 
		qt_idade_final, 
		vl_preco_atual, 
		tx_acrescimo, 
		vl_preco_nao_subsidiado 
	from	pls_plano_preco 
	where	nr_seq_tabela	= nr_seq_tabela_ant_w 
	order by qt_idade_inicial;

C04 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_reajuste_preco 
	where	nr_seq_preco	= nr_seq_plano_preco_w;
	

BEGIN 
 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_tabela_ant_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_segurado_w, 
		nr_seq_contrato_w, 
		nr_seq_plano_w, 
		nm_pessoa_fisica_w, 
		dt_contrato_w, 
		nm_tabela_ant_w, 
		cd_estabelecimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		select	coalesce(max(ie_preco),0) 
		into STRICT	ie_preco_w 
		from	pls_plano 
		where	nr_sequencia	= nr_seq_plano_w;
		 
		if (ie_preco_w in (1,4)) and (coalesce(nr_seq_plano_w,0) <> 0) and (coalesce(nr_seq_tabela_ant_w,0) <> 0) then 
				 
			nm_tabela_atual_w	:= 'Tabela para o beneficiário ' || to_char(nr_seq_segurado_w) || ' - ' || nm_pessoa_fisica_w;
			 
			select	nextval('pls_tabela_preco_seq') 
			into STRICT	nr_seq_tabela_nova_w 
			;
			 
			insert into pls_tabela_preco(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nm_tabela, 
				dt_inicio_vigencia, 
				dt_fim_vigencia, 
				nr_seq_plano, 
				dt_liberacao, 
				ie_tabela_base, 
				nr_contrato, 
				nr_seq_tabela_origem, 
				nr_segurado, 
				nr_seq_faixa_etaria) 
			SELECT	nr_seq_tabela_nova_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nm_tabela_atual_w, 
				dt_contrato_w, 
				clock_timestamp(), 
				nr_seq_plano_w, 
				clock_timestamp(), 
				'N', 
				nr_seq_contrato_w, 
				nr_sequencia, 
				nr_seq_segurado_w, 
				nr_seq_faixa_etaria 
			from	pls_tabela_preco 
			where	nr_sequencia	= nr_seq_tabela_ant_w;
			 
			open c03;
			loop 
			fetch c03 into	 
				nr_seq_plano_preco_w, 
				qt_idade_inicial_w, 
				qt_idade_final_w, 
				vl_preco_atual_w, 
				tx_acrescimo_w, 
				vl_preco_nao_subsidiado_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin 
				 
				select	nextval('pls_plano_preco_seq') 
				into STRICT	nr_seq_plano_atual_w 
				;
				 
				insert into pls_plano_preco(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					nr_seq_tabela, 
					qt_idade_inicial, 
					qt_idade_final, 
					vl_preco_inicial, 
					vl_preco_atual, 
					tx_acrescimo, 
					vl_preco_nao_subsidiado) 
				values (nr_seq_plano_atual_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_tabela_nova_w, 
					qt_idade_inicial_w, 
					qt_idade_final_w, 
					vl_preco_atual_w, 
					vl_preco_atual_w, 
					tx_acrescimo_w, 
					vl_preco_nao_subsidiado_w);
					 
				open C04;
				loop 
				fetch C04 into	 
					nr_seq_reajuste_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin 
					insert into pls_reajuste_preco(	nr_sequencia, 
									dt_atualizacao, 
									nm_usuario, 
									dt_atualizacao_nrec, 
									nm_usuario_nrec, 
									nr_seq_reajuste, 
									dt_reajuste, 
									pr_reajustado, 
									vl_base, 
									vl_reajustado, 
									nr_seq_preco, 
									nr_seq_tabela, 
									dt_liberacao, 
									nm_usuario_lib, 
									dt_periodo_inicial, 
									dt_periodo_final, 
									dt_autorizacao_ans, 
									vl_preco_nao_subsidiado, 
									vl_preco_nao_subsid_base) 
								(SELECT	nextval('pls_reajuste_preco_seq'), 
									clock_timestamp(), 
									nm_usuario, 
									clock_timestamp(), 
									nm_usuario, 
									nr_seq_reajuste, 
									dt_reajuste, 
									pr_reajustado, 
									vl_base, 
									vl_reajustado, 
									nr_seq_plano_atual_w, 
									nr_seq_tabela, 
									dt_liberacao, 
									nm_usuario_lib, 
									dt_periodo_inicial, 
									dt_periodo_final, 
									dt_autorizacao_ans, 
									vl_preco_nao_subsidiado, 
									vl_preco_nao_subsid_base 
								from	pls_reajuste_preco 
								where	nr_sequencia	= nr_seq_reajuste_w);
					end;
				end loop;
				close C04;
				 
				end;
			end loop;
			close c03;
			 
			/* Atualizar as tabelas dos Beneficiários */
 
			update	pls_segurado 
			set	nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp(), 
				nr_seq_tabela	= nr_seq_tabela_nova_w 
			where	nr_sequencia	= nr_seq_segurado_w;
			 
			begin 
			CALL pls_gerar_valor_segurado(null, nr_seq_segurado_w, 'A', 
					cd_estabelecimento_w, nm_usuario_p, 'S', 
					clock_timestamp(), 'S', 'N', 
					'N', 'N');
			exception 
				when others then 
				ds_erro_w	:= ds_erro_w	|| to_char(nr_seq_segurado_w);
			end;
			 
			/* Gerar histórico */
 
			CALL pls_gerar_segurado_historico( 
				nr_seq_segurado_w, '3', clock_timestamp(), 
				'Mudança de tabela', 
				'Alterada tabela de preço de '||nr_seq_tabela_ant_w||' - '||nm_tabela_ant_w || 
					' para ' || nr_seq_tabela_nova_w || ' - ' || nm_tabela_atual_w, 
				null, 
				null, null, null, 
				clock_timestamp(), null, null, 
				null, null, null, 
				null, nm_usuario_p, 'S');
		end if;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajustar_preco_pj ( nm_usuario_p text) FROM PUBLIC;

