-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE populate_fan_table ( dt_exportar_de_p timestamp , dt_exportar_ate_p timestamp , nm_usuario_p text , returned_value_p INOUT bigint , other_exception_p INOUT text ) AS $body$
DECLARE

dt_exportar_de_w		timestamp;
dt_exportar_ate_w		timestamp;
returned_value_w		bigint;
/*--FAN table columns*/

nr_patient_identifier_w		varchar(8);
nr_admission_number_w		varchar(12);
nr_former_name_ident_w		varchar(2);
nm_patient_surname_w		varchar(24);
nm_patient_first_name_w		varchar(15);
nm_patient_second_ident_w	varchar(15);
line_count_w			bigint	:= 0;
downloaded_report_count_w	bigint	:= 0;
v_errm				varchar(100 );
exc_raised_in_fan_tab		exception;
									 																			
error_result			text		:= null;
c01 CURSOR FOR
	SELECT	distinct adiciona_zeros_esquerda(pfa.nr_prontuario,8) ,
		adiciona_zeros_esquerda(ap.nr_atendimento,12),
		obter_count_name_change( ap.cd_pessoa_fisica , pfa.nr_sequencia , dt_exportar_de_w , dt_exportar_ate_w ) ,
		chr( 34 )||trim(both substr( parse_previous_name( pfa.nm_pessoa_fisica , 'LN' ) , 1 , 22 ) )||chr( 34 ) ,
		chr( 34 )||trim(both substr( parse_previous_name( pfa.nm_pessoa_fisica , 'FN' ) , 1 , 13 ) )||chr( 34 ) ,
		(CASE WHEN (parse_previous_name( pfa.nm_pessoa_fisica , 'MN' ) IS NOT NULL AND (parse_previous_name( pfa.nm_pessoa_fisica , 'MN' ))::text <> '') THEN chr( 34 )||trim(both substr( parse_previous_name( pfa.nm_pessoa_fisica , 'MN' ) , 1 , 13 ) )||
		chr( 34 )  ELSE null  END)
	FROM pessoa_fisica_alteracao pfa, diagnostico_doenca dd, atendimento_paciente ap
LEFT OUTER JOIN registro_cancer rc ON (ap.nr_atendimento = rc.nr_atendimento)
WHERE ap.nr_atendimento   =dd.nr_atendimento and ap.cd_pessoa_fisica =pfa.cd_pessoa_fisica and dd.cd_doenca in (
			SELECT cd_doenca_cid
			from cid_doenca
			where (	cd_doenca_cid like 'C%'		OR
				cd_doenca_cid like 'D0%' 	OR
				cd_doenca_cid like 'D3%' 	OR
				cd_doenca_cid like 'D4%' 	OR
				cd_doenca_cid like 'Z85%')
			EXCEPT
			select cd_doenca_cid
			from cid_doenca
			where (	cd_doenca_cid like 'C44%' 	OR
				cd_doenca_cid like 'C77%' 	OR
				cd_doenca_cid like 'C78%' 	OR
				cd_doenca_cid like 'C79%' 	OR
				cd_doenca_cid like 'D1%'  	OR
				cd_doenca_cid like 'D2%'  	OR
				cd_doenca_cid like 'D31%' 	OR
				cd_doenca_cid like 'D32%' 	OR
				cd_doenca_cid like 'D34%' 	OR
				cd_doenca_cid like 'D35%' 	OR
				cd_doenca_cid like 'D36%' 	OR
				cd_doenca_cid like 'D04%' 	OR
				cd_doenca_cid like 'D48.5%' 	OR
				cd_doenca_cid like 'Z85.9')
			
UNION ALL

			select cd_doenca_cid
			from cid_doenca
			where (	cd_doenca_cid like 'D18.02' 	OR
				cd_doenca_cid like 'Q85.0' 	OR
				cd_doenca_cid like 'D76.0')
		) and pfa.ie_alteracao_nome='S' and (rc.dt_liberacao IS NOT NULL AND rc.dt_liberacao::text <> '') and rc.dt_diagnostico between dt_exportar_de_w and dt_exportar_ate_w and pfa.dt_aprovacao between dt_exportar_de_w and dt_exportar_ate_w order by 2;

BEGIN
	dt_exportar_de_w	:= dt_exportar_de_p;
	dt_exportar_ate_w	:= dt_exportar_ate_p;
	if (dt_exportar_de_w IS NOT NULL AND dt_exportar_de_w::text <> '' AND dt_exportar_ate_w IS NOT NULL AND dt_exportar_ate_w::text <> '') then
		open c01;
		loop
		begin
      			line_count_w	:= line_count_w+1;
		fetch c01 into
			nr_patient_identifier_w ,
			nr_admission_number_w ,
			nr_former_name_ident_w ,
			nm_patient_surname_w ,
			nm_patient_first_name_w ,
			nm_patient_second_ident_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
				insert into patient_former_names(
					nr_sequencia ,
					dt_atualizacao ,
					nm_usuario ,
					dt_atualizacao_nrec ,
					nm_usuario_nrec ,
					nr_patient_identifier ,
					nr_admission_number ,
					nr_former_name_identifier ,
					nm_patient_surname ,
					nm_patient_first_name ,
					nm_patient_second_identifier ,
					dt_export_from ,
					dt_export_to ,
					nr_report_sequence)
				values (	nextval('patient_former_names_seq') ,
					clock_timestamp() ,
					nm_usuario_p ,
					clock_timestamp() ,
					nm_usuario_p ,
					nr_patient_identifier_w ,
					nr_admission_number_w ,
					nr_former_name_ident_w ,
					nm_patient_surname_w ,
					nm_patient_first_name_w ,
					nm_patient_second_ident_w ,
					dt_exportar_de_w ,
					dt_exportar_ate_w ,
					null);
			exception when others then
			v_errm      := substr( sqlerrm , 1 , 100 );
			error_result:= error_result || ' '|| v_errm||' . error happened at line '||line_count_w||' for encounter '|| nr_admission_number_w ||chr( 13 )||chr( 10 );
			end;				    				 		
		exception
		when data_exception or unique_violation or invalid_cursor_state then
			v_errm      := substr( sqlerrm , 1 , 100 );
			error_result:= error_result || ' '|| v_errm||' . error happened at line '||line_count_w||chr( 13 )||chr( 10 );
		end;
		end loop;
		returned_value_w	:= 1;
		other_exception_p	:= null;
			if (error_result IS NOT NULL AND error_result::text <> '')then
				returned_value_w	:= 0;
				other_exception_p	:= error_result;
				raise exc_raised_in_fan_tab;					
			end if;
		close c01;
	end if;
		returned_value_p	:= returned_value_w;
exception
when others then
	returned_value_p	:= 2;
	other_exception_p	:= other_exception_p||wheb_mensagem_pck.get_texto( 1073278 , 'DS_ERROR='||'populate_fan_table. Error:'|| sqlerrm );
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE populate_fan_table ( dt_exportar_de_p timestamp , dt_exportar_ate_p timestamp , nm_usuario_p text , returned_value_p INOUT bigint , other_exception_p INOUT text ) FROM PUBLIC;

