-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_relat_cheque_cr (cd_estabelecimento_p bigint, nm_usuario_p text, nm_dt_referencia_p text, ds_dt_referencia_p text, dt_inicial_p timestamp, dt_final_p timestamp, nm_quebra_1_p text, nm_quebra_2_p text, nm_quebra_3_p text, cd_pessoa_fisica_p text, cd_cgc_p text, cd_paciente_p text, cd_banco_p bigint, nr_conta_p text, nr_titulo_p bigint, nr_atendimento_p bigint, vl_cheque_p bigint, cd_tipo_portador_p bigint, cd_portador_p bigint, ie_origem_p text, ie_deposito_p text, ie_cobranca_p text, ie_bordero_p text, ie_tipo_cheque_p text, ie_posse_p text, ie_status_p text, ds_lista_convenio_p text, ds_lista_tipo_portador_p text, ds_lista_portador_p text, ds_lista_conta_p text, ds_lista_caixa_p text) AS $body$
DECLARE

				 
nr_seq_cheque_w		bigint;
ds_tit_quebra_1_w	varchar(255);
cd_quebra_1_w		varchar(20);
ds_quebra_1_w		varchar(255);
ds_tit_quebra_2_w	varchar(255);
cd_quebra_2_w		varchar(20);
ds_quebra_2_w		varchar(255);
ds_tit_quebra_3_w	varchar(255);
cd_quebra_3_w		varchar(20);
ds_quebra_3_w		varchar(255);
cd_pessoa_fisica_w	varchar(10);
cd_cgc_w		varchar(14);
cd_tipo_portador_w	integer;
cd_portador_w		bigint;
dt_contabil_w		timestamp;
dt_vencimento_w		timestamp;
cd_banco_w		integer;
ie_status_w		varchar(3);
cd_agencia_bancaria_w	varchar(8);
nr_conta_w		varchar(20);
nr_cheque_w		varchar(20);
vl_cheque_w		double precision;
dt_devolucao_w		timestamp;
dt_reapresentao_w		timestamp;
dt_seg_devolucao_w	timestamp;
td_devolucao_banco_w	timestamp;

ie_quebra_w		smallint;
nm_quebra_w		varchar(255);
ds_tit_quebra_w		varchar(255);
cd_quebra_w		varchar(20);
ds_quebra_w		varchar(255);

ie_status_cf_w		smallint;
ie_avista_w		varchar(1);
nr_adiantamento_w	bigint;
nr_titulo_w		bigint;
dt_deposito_W		timestamp;
dt_ordem_w		timestamp;
dt_quebra_1_w		timestamp;
dt_quebra_2_w		timestamp;
dt_quebra_3_w		timestamp;

c01 CURSOR FOR 
SELECT	nr_seq_cheque, 
	cd_pessoa_fisica, 
	cd_cgc, 
	cd_tipo_portador, 
	cd_portador, 
	dt_contabil, 
	coalesce(dt_vencimento_atual,dt_vencimento), 
	cd_banco, 
	obter_status_cheque(nr_seq_cheque),        
	cd_agencia_bancaria, 
	nr_conta, 
	nr_cheque, 
	vl_cheque, 
	obter_se_cheque_cr_avista(nr_seq_cheque), 
	nr_adiantamento, 
	nr_titulo, 
	dt_deposito, 
	dt_devolucao, 
	dt_reapresentacao, 
	dt_seg_devolucao, 
	dt_devolucao_banco 
from	cheque_cr a 
where	obter_dt_ref_cheque_cr(nr_seq_cheque,nm_dt_referencia_p) between dt_inicial_p and fim_dia(dt_final_p) 
and	cd_estabelecimento		= cd_estabelecimento_p 
and	coalesce(cd_pessoa_fisica,'0')		= coalesce(coalesce(cd_pessoa_fisica_p,cd_pessoa_fisica),'0') 
and	coalesce(cd_cgc,'0')			= coalesce(coalesce(cd_cgc_p,cd_cgc),'0') 
and	coalesce(obter_dados_cheque_cr(nr_seq_cheque,'CP'),'0')	= coalesce(coalesce(cd_paciente_p,obter_dados_cheque_cr(nr_seq_cheque,'CP')),'0') 
and	coalesce(cd_banco,0)			= coalesce(coalesce(cd_banco_p,cd_banco),0) 
and	coalesce(nr_conta,'0')			= coalesce(coalesce(nr_conta_p,nr_conta),'0') 
and	coalesce(nr_titulo,0)			= coalesce(coalesce(nr_titulo_p,nr_titulo),0) 
and	coalesce((obter_dados_titulo_receber(nr_titulo,'NA'))::numeric ,0)	= coalesce(coalesce(nr_atendimento_p,obter_dados_titulo_receber(nr_titulo,'NA')),0) 
and (vl_cheque = vl_cheque_p or 
	 coalesce(vl_cheque_p::text, '') = '') 
and	coalesce(cd_tipo_portador,-1)		= coalesce(coalesce(cd_tipo_portador_p,cd_tipo_portador),-1) 
and	coalesce(cd_portador,-1)		= coalesce(coalesce(cd_portador_p,cd_portador),-1) 
and	coalesce(ie_origem_cheque,'0')		= coalesce(coalesce(ie_origem_p,ie_origem_cheque),'0') 
and	((exists (SELECT	1 
		from	deposito_cheque x 
		where	x.nr_seq_cheque	= a.nr_seq_cheque) and ie_deposito_p = '0') or (not exists (select	1 
		from	deposito_cheque x 
		where	x.nr_seq_cheque	= a.nr_seq_cheque) and ie_deposito_p = '1') or 
	ie_deposito_p	= '2') 
and	((exists (select	1 
		from	cobranca x 
		where	x.nr_seq_cheque	= a.nr_seq_cheque 
		and	x.ie_status	<> 'E') and ie_cobranca_p = '0') or 
	((not exists (select	1 
		from	cobranca x 
		where	x.nr_seq_cheque	= a.nr_seq_cheque) or 
	 exists (select 1 
			from	cobranca y 
			where	y.nr_seq_cheque	= a.nr_seq_cheque 
			and	y.ie_status	= 'E')) and ie_cobranca_p = '1') or 
	ie_cobranca_p	= '2') 
and	((exists (select	1 
		from	cheque_bordero x 
		where	x.nr_seq_cheque	= a.nr_seq_cheque) and ie_bordero_p = '0') or (not exists (select	1 
		from	cheque_bordero x 
		where	x.nr_seq_cheque	= a.nr_seq_cheque) and ie_bordero_p = '1') or 
	ie_bordero_p	= '2') 
and	((obter_se_cheque_cr_avista(nr_seq_cheque) = 'S' and ie_tipo_cheque_p = 'A vista') or (obter_se_cheque_cr_avista(nr_seq_cheque) = 'N' and ie_tipo_cheque_p = 'Pré-datado') or coalesce(ie_tipo_cheque_p::text, '') = '') 
and (ie_status_p like '% ' || obter_status_cheque(nr_seq_cheque) || ' %' or ie_status_p = '0 ') 
and (ds_lista_convenio_p like '%, ' || obter_convenio_tit_rec(nr_titulo) || ',%' or coalesce(ds_lista_convenio_p::text, '') = '') 
and (ds_lista_tipo_portador_p like '%, ' || obter_portador_cheque_data(nr_seq_cheque,dt_final_p,'CT') || ',%' or coalesce(ds_lista_tipo_portador_p::text, '') = '') 
and (ds_lista_portador_p like '%, ' || obter_portador_cheque_data(nr_seq_cheque,dt_final_p,'CP') || ',%' or coalesce(ds_lista_portador_p::text, '') = '') 
and (ds_lista_conta_p like '%, ' || obter_conta_financ_cheque_cr(nr_seq_cheque,CASE WHEN obter_status_cheque(nr_seq_cheque)=1 THEN  									CASE WHEN obter_se_cheque_cr_avista(nr_seq_cheque)='S' THEN 0  ELSE 1 END   ELSE obter_status_cheque(nr_seq_cheque) END ) || ',%' or coalesce(ds_lista_conta_p::text, '') = '') 
and (exists (select	1 
		from	movto_trans_financ x 
		where	x.nr_seq_cheque	= a.nr_seq_cheque 
		and	ds_lista_caixa_p like '%, ' || x.nr_seq_caixa || ',%') or coalesce(ds_lista_caixa_p::text, '') = '');


BEGIN 
 
delete	from	w_relat_cheque_cr 
where	nm_usuario	= nm_usuario_p;
 
open c01;
loop 
fetch c01 into 
	nr_seq_cheque_w, 
	cd_pessoa_fisica_w, 
	cd_cgc_w, 
	cd_tipo_portador_w, 
	cd_portador_w, 
	dt_contabil_w, 
	dt_vencimento_w, 
	cd_banco_w, 
	ie_status_w,        
	cd_agencia_bancaria_w, 
	nr_conta_w, 
	nr_cheque_w, 
	vl_cheque_w, 
	ie_avista_w, 
	nr_adiantamento_w, 
	nr_titulo_w, 
	dt_deposito_w, 
	dt_devolucao_w, 
	dt_reapresentao_w	, 
	dt_seg_devolucao_w, 
	td_devolucao_banco_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	dt_ordem_w	:= null;
 
	ie_quebra_w	:= 1;
	while(ie_quebra_w	<= 3) loop 
		begin 
		ds_tit_quebra_w	:= null;
		cd_quebra_w	:= null;
		ds_quebra_w	:= null;
 
 
		if (ie_quebra_w = 1) then 
			nm_quebra_w	:= nm_quebra_1_p;
		elsif (ie_quebra_w = 2) then 
			nm_quebra_w	:= nm_quebra_2_p;
		else 
			nm_quebra_w	:= nm_quebra_3_p;
		end if;
 
		if (nm_quebra_w	= 'DS_TIPO_PORTADOR') then 
			select	wheb_mensagem_pck.get_texto(304680), --'Tipo de portador', 
				coalesce(cd_tipo_portador,0), 
				coalesce(substr(obter_valor_dominio(703,cd_tipo_portador),1,60),wheb_mensagem_pck.get_texto(304681) /*'Sem tipo portador'*/
) 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DS_PORTADOR') then 
 
			select	wheb_mensagem_pck.get_texto(304683), --'Portador', 
				coalesce(cd_portador,0), 
				coalesce(substr(obter_desc_portador(cd_tipo_portador,cd_portador),1,80),wheb_mensagem_pck.get_texto(304681)) 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DS_EMITENTE') then 
 
			select	wheb_mensagem_pck.get_texto(304685), --'Emitente', 
				coalesce(cd_pessoa_fisica,cd_cgc), 
				substr(obter_nome_pf_pj(cd_pessoa_fisica,cd_cgc),1,80) 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DS_BANCO') then 
	 
			select	wheb_mensagem_pck.get_texto(304687), --'Banco', 
				coalesce(cd_banco,0), 
				coalesce(substr(obter_nome_banco(cd_banco),1,100),wheb_mensagem_pck.get_texto(304689) /*'Sem banco'*/
) 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DS_CONVENIO') then 
	 
			select	wheb_mensagem_pck.get_texto(304691), --'Convênio', 
				coalesce(obter_convenio_tit_rec(nr_titulo),0), 
				coalesce(substr(obter_nome_convenio(obter_convenio_tit_rec(nr_titulo)),1,100),wheb_mensagem_pck.get_texto(304694) /*'Sem atendimento/convênio'*/
) 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DT_CONTABIL') then 
	 
			select	wheb_mensagem_pck.get_texto(304705), --'Data contábil', 
				coalesce(to_char(dt_contabil),'0'), 
				coalesce(to_char(dt_contabil),'0'), 
				dt_contabil 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w, 
				dt_ordem_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DT_VENCIMENTO_ATUAL') then 
	 
			select	wheb_mensagem_pck.get_texto(304706), --'Data vencimento atual', 
				coalesce(to_char(dt_vencimento_atual),wheb_mensagem_pck.get_texto(304708) /*'Sem vencimento atual'*/
), 
				coalesce(to_char(dt_vencimento_atual),wheb_mensagem_pck.get_texto(304708)), 
				dt_vencimento_atual 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w, 
				dt_ordem_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DT_MES_CONTABIL') then 
	 
			select	wheb_mensagem_pck.get_texto(304710), --'Mês contábil', 
				coalesce(to_char(dt_contabil,'mm/yyyy'),'0'), 
				coalesce(to_char(dt_contabil,'mm/yyyy'),'0'), 
				trunc(dt_contabil,'month') 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w, 
				dt_ordem_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DT_MES_PRORROG') then 
	 
			select	wheb_mensagem_pck.get_texto(304711), --'Mês prorrogação', 
				coalesce(to_char(dt_vencimento_atual,'mm/yyyy'),wheb_mensagem_pck.get_texto(304713) /*'Sem vencimento atual'*/), 
				coalesce(to_char(dt_vencimento_atual,'mm/yyyy'),wheb_mensagem_pck.get_texto(304713)), 
				trunc(dt_vencimento_atual,'month') 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w, 
				dt_ordem_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DS_CONTA_FINANC') then 
 
			if (ie_status_w = 1) then 
				if (ie_avista_w = 'S') then 
					ie_status_cf_w	:= 0;
				else 
					ie_status_cf_w	:= 1;
				end if;
 
			else 
				ie_status_cf_w	:= ie_status_w;
			end if;
 
			select	wheb_mensagem_pck.get_texto(304714), --'Conta financeira', 
				coalesce(obter_conta_financ_cheque_cr(nr_seq_cheque,ie_status_cf_w),'0'), 
				coalesce(substr(obter_ds_conta_financ(obter_conta_financ_cheque_cr(nr_seq_cheque,ie_status_cf_w),'N'),1,100),wheb_mensagem_pck.get_texto(304715) /*'Sem conta financeira'*/) 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DT_VENDA_TERC') then 
 
			select	wheb_mensagem_pck.get_texto(304719), --'Data venda terceiros', 
				dt_venda_terc, 
				dt_venda_terc, 
				dt_venda_terc 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w, 
				dt_ordem_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		elsif (nm_quebra_w	= 'DT_VENCIMENTO') then 
 
			select	wheb_mensagem_pck.get_texto(304722), --'Data vencimento', 
				coalesce(to_char(dt_vencimento),wheb_mensagem_pck.get_texto(304731) /*'Sem vencimento original'*/
), 
				coalesce(to_char(dt_vencimento),wheb_mensagem_pck.get_texto(304731)), 
				trunc(dt_vencimento,'dd') 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w, 
				dt_ordem_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;		
		elsif (nm_quebra_w	= 'IE_TIPO_CHEQUE') then 
	 
			select	wheb_mensagem_pck.get_texto(304735), --'Tipo cheque', 
				substr(CASE WHEN obter_se_cheque_cr_avista(nr_seq_cheque)='S' THEN  wheb_mensagem_pck.get_texto(304736) /*'A vista'*/  ELSE wheb_mensagem_pck.get_texto(304737) /*'Pré-datado'*/ END ,1,255), 
				substr(CASE WHEN obter_se_cheque_cr_avista(nr_seq_cheque)='S' THEN  wheb_mensagem_pck.get_texto(304736)  ELSE wheb_mensagem_pck.get_texto(304737) END ,1,255) 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
		elsif (nm_quebra_w	= 'IE_ORIGEM_CHEQUE') then 
	 
			select	wheb_mensagem_pck.get_texto(304738), --'Origem cheque', 
				coalesce(ie_origem_cheque,'0'), 
				coalesce(substr(obter_valor_dominio(1116,ie_origem_cheque),1,255), wheb_mensagem_pck.get_texto(304739) /*'Sem origem'*/
) 
			into STRICT	ds_tit_quebra_w, 
				cd_quebra_w, 
				ds_quebra_w 
			from	cheque_cr 
			where	nr_seq_cheque	= nr_seq_cheque_w;
 
		end if;
 
		if (ie_quebra_w = 1) then 
			ds_tit_quebra_1_w	:= ds_tit_quebra_w;
			cd_quebra_1_w		:= cd_quebra_w;
			ds_quebra_1_w		:= ds_quebra_w;
			dt_quebra_1_w		:= dt_ordem_w;		
 
		elsif (ie_quebra_w = 2) then 
			ds_tit_quebra_2_w	:= ds_tit_quebra_w;
			cd_quebra_2_w		:= cd_quebra_w;
			ds_quebra_2_w		:= ds_quebra_w;
			dt_quebra_2_w		:= dt_ordem_w;	
		else 
			ds_tit_quebra_3_w	:= ds_tit_quebra_w;
			cd_quebra_3_w		:= cd_quebra_w;
			ds_quebra_3_w		:= ds_quebra_w;
			dt_quebra_3_w		:= dt_ordem_w;	
		end if;
		 
		ie_quebra_w	:= ie_quebra_w + 1;
		end;
	end loop;
 
	insert	into	w_relat_cheque_cr(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		ds_tit_quebra_1, 
		cd_quebra_1,       
		ds_quebra_1,       
		ds_tit_quebra_2,     
		cd_quebra_2,       
		ds_quebra_2,       
		ds_tit_quebra_3,     
		cd_quebra_3,       
		ds_quebra_3,       
		cd_pessoa_fisica,    
		cd_cgc,         
		cd_tipo_portador,    
		cd_portador,       
		dt_contabil,       
		dt_vencimento,      
		cd_banco,        
		ie_status,        
		cd_agencia_bancaria, 
		nr_conta,        
		nr_cheque,        
		vl_cheque, 
		nr_adiantamento, 
		nr_titulo, 
		dt_deposito, 
		dt_quebra_1, 
		dt_quebra_2, 
		dt_quebra_3, 
		nr_seq_cheque, 
		dt_devolucao, 
		dt_reapresentacao, 
		dt_seg_devolucao, 
		dt_devolucao_banco) 
	values (nextval('w_relat_cheque_cr_seq'), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		ds_tit_quebra_1_w, 
		cd_quebra_1_w,       
		ds_quebra_1_w,       
		ds_tit_quebra_2_w,     
		cd_quebra_2_w,       
		ds_quebra_2_w,       
		ds_tit_quebra_3_w,     
		cd_quebra_3_w,       
		ds_quebra_3_w,       
		cd_pessoa_fisica_w,    
		cd_cgc_w,         
		cd_tipo_portador_w,    
		cd_portador_w,       
		dt_contabil_w,       
		dt_vencimento_w,      
		cd_banco_w,        
		ie_status_w,        
		cd_agencia_bancaria_w, 
		nr_conta_w,        
		nr_cheque_w,        
		vl_cheque_w, 
		nr_adiantamento_w, 
		nr_titulo_w, 
		dt_deposito_w, 
		dt_quebra_1_w, 
		dt_quebra_2_w, 
		dt_quebra_3_w, 
		nr_seq_cheque_w, 
		dt_devolucao_w, 
		dt_reapresentao_w	, 
		dt_seg_devolucao_w, 
		td_devolucao_banco_w);
 
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_relat_cheque_cr (cd_estabelecimento_p bigint, nm_usuario_p text, nm_dt_referencia_p text, ds_dt_referencia_p text, dt_inicial_p timestamp, dt_final_p timestamp, nm_quebra_1_p text, nm_quebra_2_p text, nm_quebra_3_p text, cd_pessoa_fisica_p text, cd_cgc_p text, cd_paciente_p text, cd_banco_p bigint, nr_conta_p text, nr_titulo_p bigint, nr_atendimento_p bigint, vl_cheque_p bigint, cd_tipo_portador_p bigint, cd_portador_p bigint, ie_origem_p text, ie_deposito_p text, ie_cobranca_p text, ie_bordero_p text, ie_tipo_cheque_p text, ie_posse_p text, ie_status_p text, ds_lista_convenio_p text, ds_lista_tipo_portador_p text, ds_lista_portador_p text, ds_lista_conta_p text, ds_lista_caixa_p text) FROM PUBLIC;

