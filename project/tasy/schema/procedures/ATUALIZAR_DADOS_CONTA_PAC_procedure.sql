-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_dados_conta_pac ( nr_seq_protocolo_p bigint, dt_mesano_referencia_p timestamp, ie_conta_contabil_p text, ie_grupo_receita_p text, nm_usuario_p text, cd_convenio_p bigint) AS $body$
DECLARE

 
cd_estabelecimento_w			smallint;
ie_tipo_atendimento_w		smallint;
ie_classif_contabil_w		varchar(01);
ie_clinica_w				integer;
nr_interno_conta_w			bigint;
cd_setor_atendimento_w		bigint;
dt_inicial_w				timestamp;
dt_final_w				timestamp;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
cd_material_w				bigint;
nr_seq_proc_mat_w			bigint;
ie_proc_mat_w				varchar(01);
cd_conta_contabil_w			varchar(20);
nr_seq_grupo_rec_w			bigint;
cd_convenio_w				numeric(20);
cd_categoria_w			varchar(10);
ie_status_acerto_w			smallint;
ie_atualizou_w			varchar(01);
ie_atualiza_resumo_w			varchar(01);
qt_contador_w				bigint := 0;
qt_contador_ww				bigint := 0;
dt_mesano_refer_w			timestamp;
ie_tipo_convenio_w			bigint;
qt_rateio_sus_w				bigint := 0;

/*Fabio em 12/03/2008 
No cursor abaixo, alterei para buscar o estabelecimento da conta ao invez do atendimento. 
Isto porque dá problemas quando o atendimento é de uma empresa e a conta de outra 
EX:OS85313*/
 
c01 CURSOR FOR 
	SELECT	a.nr_interno_conta, 
		a.ie_status_acerto, 
		a.cd_estabelecimento, 
		b.ie_tipo_atendimento, 
		c.ie_classif_contabil, 
		b.ie_clinica, 
		c.cd_convenio, 
		a.cd_categoria_parametro 
	from 	Convenio c, 
		atendimento_paciente b, 
		conta_paciente a 
	where 	a.nr_atendimento 	= b.nr_atendimento 
	and	a.cd_convenio_parametro	= c.cd_convenio 
	and 	a.dt_mesano_referencia	between dt_inicial_w and dt_final_w 
	and	nr_seq_protocolo_p	= 0 
	and	((a.cd_convenio_parametro = cd_convenio_p) or (cd_convenio_p = 0)) 
	
union
 
	SELECT	a.nr_interno_conta, 
		a.ie_status_acerto, 
		a.cd_estabelecimento, 
		b.ie_tipo_atendimento, 
		c.ie_classif_contabil, 
		b.ie_clinica, 
		c.cd_convenio, 
		a.cd_categoria_parametro 
	from 	Convenio c, 
		atendimento_paciente b, 
		conta_paciente a 
	where 	a.nr_atendimento 	= b.nr_atendimento 
	and	a.cd_convenio_parametro	= c.cd_convenio 
	and 	a.nr_seq_protocolo	= nr_seq_protocolo_p 
	and	((a.cd_convenio_parametro = cd_convenio_p) or (cd_convenio_p = 0));

 
c02 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		'P' ie_proc_mat, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		0 cd_material, 
		a.cd_setor_atendimento, 
		a.cd_conta_contabil, 
		a.nr_seq_grupo_rec 
	from	procedimento_paciente a 
	where	a.nr_interno_conta	= nr_interno_conta_w 
	
union
 
	SELECT	a.nr_sequencia, 
		'M' ie_proc_mat, 
		0, 0, a.cd_material, 
		a.cd_setor_atendimento, 
		a.cd_conta_contabil, 
		a.nr_seq_grupo_rec 
	from	material_atend_paciente a 
	where	a.nr_interno_conta	= nr_interno_conta_w;


BEGIN 
 
dt_inicial_w		:= PKG_DATE_UTILS.start_of(dt_mesano_referencia_p, 'month', 0);
dt_final_w		:= PKG_DATE_UTILS.END_OF(dt_mesano_referencia_p,'MONTH', 0);
 
open	c01;
loop 
fetch	c01 into 
	nr_interno_conta_w, 
	ie_status_acerto_w, 
	cd_estabelecimento_w, 
	ie_tipo_atendimento_w, 
	ie_classif_contabil_w, 
	ie_clinica_w, 
	cd_convenio_w, 
	cd_categoria_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	qt_contador_w	:= qt_contador_w + 1;
 
 
	ie_atualiza_resumo_w	:= 'N';
	 
	open	c02;
	loop 
	fetch	c02 into 
		nr_seq_proc_mat_w, 
		ie_proc_mat_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		cd_material_w, 
		cd_setor_atendimento_w, 
		cd_conta_contabil_w, 
		nr_seq_grupo_rec_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		 
		ie_atualizou_w := Atualiza_Conta_Pac( 
			nr_seq_proc_mat_w, ie_proc_mat_w, cd_estabelecimento_w, cd_material_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, ie_clinica_w, ie_classif_contabil_w, cd_convenio_w, cd_categoria_w, cd_conta_contabil_w, nr_seq_grupo_rec_w, ie_conta_contabil_p, ie_grupo_receita_p, nm_usuario_p, ie_atualizou_w);
 
		if (ie_atualiza_resumo_w	= 'N') and (ie_atualizou_w = 'S') then 
			ie_atualiza_resumo_w	:= 'S';
		end if;
		 
		qt_contador_ww := qt_contador_ww + 1;
		if (qt_contador_ww = 50) then 
			commit;
			qt_contador_ww:=0;			
		end if;
		 
 
		end;
	end loop;	
	close	c02;
	end;
 
	if (ie_atualiza_resumo_w	= 'S') then	 
		if (coalesce(sus_obter_se_atual_resumo(nr_interno_conta_w),'S') = 'S') then 
			CALL atualizar_resumo_conta(nr_interno_conta_w, ie_status_acerto_w);			
		end if;
	end if;
	 
	if (qt_contador_w = 500) then 
		begin 
 
		qt_contador_w		:= 0;
		commit;
 
		end;
	end if;
 
end loop;
close	c01;
 
commit;
 
/* 
if	(nvl(nr_seq_protocolo_p, 0) > 0) then 
	gerar_eis_resultado(dt_mesano_refer_w, nm_usuario_p) 
else 
	gerar_eis_resultado(dt_mesano_referencia_p, nm_usuario_p); 
end if; 
 
*/
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_dados_conta_pac ( nr_seq_protocolo_p bigint, dt_mesano_referencia_p timestamp, ie_conta_contabil_p text, ie_grupo_receita_p text, nm_usuario_p text, cd_convenio_p bigint) FROM PUBLIC;

