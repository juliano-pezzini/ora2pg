-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_nota_servico ( nr_seq_cobranca_p ptu_nota_cobranca.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_regra_w			bigint := 0;
dt_atual_w			timestamp;
ds_servico_w			varchar(4000);
ds_servico_orig_w		varchar(4000);
nm_medico_executor_imp_w	varchar(80);
nr_registro_anvisa_w		varchar(60);
nm_prestador_w			varchar(40);
nm_profissional_prestador_w	varchar(40);
nm_medico_req_w			varchar(40);
nm_prestador_req_w		varchar(40);
nr_cpf_imp_w			varchar(30);
nr_crm_imp_w			varchar(30);
sg_conselho_imp_w		varchar(30);
cd_servico_a900_w		varchar(30);
cd_material_ops_w		varchar(30);
cd_servico_saida_w		varchar(30);
cd_ref_material_fab_w		varchar(30);
cd_unidade_medida_w		varchar(30);
cd_guia_w			varchar(20);
cd_pessoa_fisica_w		varchar(20);
cd_excecao_w			varchar(20);
cd_guia_referencia_w		varchar(20);
nr_cons_prof_prest_w		varchar(15);
nr_cons_prof_req_w		varchar(15);
nr_cnpj_cpf_w			varchar(14);
nr_cgc_cpf_req_w		varchar(14);
sg_cons_prof_prest_w		varchar(12);
sg_cons_prof_req_w		varchar(10);
nr_cpf_pessoa_ficia_w		varchar(10);
cd_cooperativa_w		varchar(10);
cd_medico_executor_conta_w	varchar(10);
cd_medico_executor_partic_w	varchar(10);
cd_medico_solic_w		varchar(10);
cd_medico_imp_w			varchar(10);
cd_prestador_w			varchar(8);
cd_cnes_w			varchar(7);
cd_municipio_w			varchar(7);
uf_crm_imp_w			medico.uf_crm%type;
nr_uni_medida_ptu_w		varchar(5);
cd_estabelecimento_w		varchar(4);
sg_uf_cons_prest_w		medico.uf_crm%type;
sg_uf_cons_req_w		medico.uf_crm%type;
ie_tipo_guia_w			varchar(2);
ie_material_intercambio_w	varchar(2);
ie_tipo_vinculo_w		varchar(1);
ie_tipo_pessoa_pres_w		varchar(1);
ie_tipo_participacao_w		varchar(2);
ie_pacote_w			varchar(1);
ie_reembolso_w			varchar(1);
ie_tipo_prestador_w		varchar(2);
ie_rede_propria_w		varchar(1);
cd_porte_anest_w		varchar(1);
cd_ato_w			varchar(1);
ie_tipo_conta_w			varchar(1);
ie_taxa_w			varchar(1);
ie_exige_doc_fisico_w		varchar(1)	:= 'N';
ie_insert_servico_w		varchar(1)	:= 'S';
ie_tipo_desp_proc_w		varchar(1);
ie_tipo_despesa_mat_w		varchar(1);
ie_acres_urg_emer_w		varchar(1);
ie_tec_utilizada_w		varchar(1);
ie_mat_a900_w			varchar(1)	:= 'N';
ie_recem_nascido_w		varchar(1)	:= 'N';
ie_tipo_despesa_pac_w		varchar(2);
vl_procedimento_w		double precision;
vl_custo_operacional_w		double precision;
vl_filme_w			double precision;
vl_procedimento_imp_w		double precision;
tx_ajuste_filme_w		double precision;
tx_ajuste_custo_oper_w		double precision;
cd_procedimento_w		bigint;
cd_proc_pacote_w		bigint;
cd_grupo_regra_w		bigint;
cd_procedimento_regra_w		bigint;
cd_proc_conversao_w		bigint;
nr_seq_tipo_atendimento_w	bigint;
cd_servico_w			bigint;
vl_adic_procedimento_w		double precision;
vl_adic_filme_w			double precision;
vl_prestador_w			double precision;
vl_adic_custo_operacional_w	double precision;
vl_proc_participante_w		double precision;
vl_total_participante_w		double precision;
nr_nota_w			ptu_nota_servico.nr_nota%type;
nr_seq_conta_w			bigint;
nr_seq_conta_cobr_w		bigint;
ie_origem_proced_w		bigint;
nr_nota_fiscal_w		bigint;
nr_seq_lote_w			bigint;
nr_lote_w			bigint;
nr_seq_protocolo_w		bigint;
nr_nr_seq_fatura_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_prestador_pgto_w		bigint;
qt_dia_vencimento_w		bigint;
nr_seq_grau_part_w		bigint;
nr_seq_grau_part_ww		bigint;
nr_seq_tipo_prest_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_cbo_saude_w		bigint;
nr_seq_fatura_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_congenere_w		bigint;
qt_dia_proced_receb_w		bigint;
nr_seq_segurado_w		bigint;
ie_origem_regra_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_material_regra_w		bigint;
nr_seq_estrut_mat_w		bigint;
nr_seq_proc_conta_w		bigint;
nr_seq_material_w		bigint;
nr_seq_regra_conv_w		bigint;
ie_origem_proced_conv_w		bigint;
qt_proced_origem_w		bigint;
cd_medico_prest_exec_w		bigint;
nr_seq_regra_agrup_w		bigint;
nr_seq_prestador_atend_w	bigint;
nr_seq_mat_unimed_w		bigint;
qt_registro_w			bigint	:= 0;
nr_seq_regra_conv_mat_w		bigint;
nr_seq_pls_fatura_w		bigint;
nr_seq_regra_fat_w		bigint;
nr_seq_lote_fat_w		bigint;
qt_agrupamento_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_pacote_w			bigint;
nr_seq_nota_servico_w		bigint;
ie_ordem_w			smallint;
tx_procedimento_w		double precision;
tx_administracao_w		double precision;
qt_procedimento_w		integer;
cd_area_regra_w			integer;
cd_especialidade_regra_w	integer;
cd_cbo_w			integer;
cd_especialidade_med_w		integer;
cd_unim_prestador_w		smallint;
ie_union_w			smallint;
cd_tipo_prestador_w		smallint;
ie_via_acesso_w			smallint;
cd_especialidade_w		smallint;
ie_tipo_despesa_w		smallint;
ie_tipo_tabela_w		smallint;
ie_tipo_tabela_conv_w		smallint;
dt_procedimento_w		timestamp;
dt_inicio_proc_w		timestamp;
dt_previsao_envio_w		timestamp;
hr_final_w			timestamp;
dt_autoriz_w			timestamp;
dt_solicitacao_w		timestamp;
dt_competencia_pgto_w		timestamp;
dt_protocolo_w			timestamp;
dt_servico_ptu_w		timestamp;
qt_registro_med_w		bigint := 0;
ie_tipo_w			varchar(2);
nr_seq_item_pac_w		bigint;
cd_procedimento_pac_w		bigint;
ie_origem_proced_pac_w		bigint;
nr_seq_material_pac_w		bigint;
ie_tipo_item_pac_w		varchar(5);
sg_estado_w			pessoa_juridica.sg_estado%type;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
ie_tipo_intercambio_w		varchar(1);
cd_senha_w			varchar(20);
ie_status_w			varchar(2);
ie_tipo_atendimento_w		varchar(2);
vl_co_item_w			double precision;
vl_beneficiario_w		double precision;
cd_servico_mat_w		varchar(50);
ie_somente_codigo_w		pls_regra_conv_mat_interc.ie_somente_codigo%type;
nr_ver_tiss_w			ptu_nota_cobranca.nr_ver_tiss%type;
ds_item_ptu_w			pls_conta_pos_estabelecido.ds_item_ptu%type;
nr_registro_anvisa_pos_w	pls_conta_pos_estabelecido.nr_registro_anvisa%type;
cd_ref_fabricante_pos_w		pls_conta_pos_estabelecido.cd_ref_fabricante%type;
nr_seq_contrato_w		pls_segurado.nr_seq_contrato%type;
nr_seq_intercambio_w		pls_segurado.nr_seq_intercambio%type;
ie_regime_atendimento_w		pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_conta.ie_saude_ocupacional%type;

C01 CURSOR FOR
	SELECT	'P', -- PROCEDIMENTOS SEM PARTICIPANTES
		1 ie_union,
		b.nr_sequencia,
		a.nr_sequencia,
		c.dt_inicio_proc,
		b.nr_seq_cbo_saude,
		CASE WHEN c.ie_via_acesso='U' THEN 0 WHEN c.ie_via_acesso='M' THEN 1 WHEN c.ie_via_acesso='D' THEN 2  ELSE '' END ,
		substr(c.cd_porte_anestesico,1,1),
		b.nr_seq_grau_partic,
		b.nr_seq_prestador_exec,
		coalesce(c.dt_procedimento,clock_timestamp()),
		substr(c.ie_tipo_despesa,1,1),
		coalesce(d.cd_procedimento,c.cd_procedimento) cd_procedimento,
		coalesce(d.ie_origem_proced,c.ie_origem_proced) ie_origem_proced,
		sum(coalesce(c.qt_procedimento,0)),
		substr(sum(coalesce(d.vl_medico,0)),1,14),
		substr(sum(coalesce(d.vl_custo_operacional,0)),1,14),
		substr(coalesce(b.cd_cnes,pls_obter_dados_prestador(b.nr_seq_prestador_exec,'CNES')),1,7),
		CASE WHEN max(c.nr_sequencia)='' THEN 'N'  ELSE 'S' END ,
		b.cd_guia,
		sum(coalesce(c.tx_item,0)),
		c.ie_ato_cooperado,
		sum(coalesce(c.vl_liberado,0)),
		b.cd_medico_solicitante,
		sum(coalesce(d.vl_materiais,0)),
		sum(coalesce(c.vl_taxa_material,0)),
		sum(CASE WHEN coalesce(d.vl_administracao,0)=0 THEN c.vl_taxa_servico  ELSE d.vl_administracao END ),
		sum(coalesce(c.vl_taxa_co,0)),
		b.cd_medico_executor cd_medico_exec_conta,
		null cd_medico_exec_partic,
		null nr_cpf_imp,
		null nr_crm_imp,
		null sg_conselho_imp,
		null uf_crm_imp,
		null nm_medico_executor_imp,
		null cd_medico_imp,
		b.cd_medico_solicitante,
		b.nr_seq_prestador,
		max(c.nr_sequencia),
		null,
		b.cd_guia_referencia,
		c.dt_fim_proc,
		coalesce(substr(pls_obter_se_urgencia_emergen(b.nr_sequencia,max(c.nr_sequencia)),1,1),'N') ie_acres_urg_emer,
		substr(ptu_obter_tec_utilizada(max(c.nr_sequencia)),1,1) ie_tec_utilizada,
		b.nr_seq_guia,
		'S',
		c.nr_seq_pacote,
		coalesce(d.tx_administracao,0),
		b.ie_recem_nascido,
		d.ds_item_ptu,
		d.nr_registro_anvisa,
		d.cd_ref_fabricante,
		b.nr_seq_segurado
	from	pls_conta_pos_estabelecido	d,
		pls_conta_proc			c,
		pls_conta			b,
		pls_protocolo_conta		a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= d.nr_seq_conta
	and	c.nr_sequencia		= d.nr_seq_conta_proc
	and	b.nr_sequencia		= nr_seq_conta_cobr_w
	and	d.nr_seq_lote_fat	= nr_seq_lote_fat_w
	and	not exists (	SELECT	1
				from	pls_conta_pos_estab_partic x
				where	x.nr_seq_conta_pos = d.nr_sequencia) -- OS 571879 - nao duplicar registro quando tiver participante
	group by
		b.nr_sequencia,
		a.nr_sequencia,
		c.dt_inicio_proc,
		b.nr_seq_cbo_saude,
		c.ie_via_acesso,
		c.cd_porte_anestesico,
		b.nr_seq_grau_partic,
		b.nr_seq_prestador_exec,
		c.dt_procedimento,
		c.ie_tipo_despesa,
		d.cd_procedimento,
		c.cd_procedimento,
		d.ie_origem_proced,
		c.ie_origem_proced,
		c.qt_procedimento,
		d.vl_medico,
		d.vl_custo_operacional,
		b.cd_cnes,
		b.cd_guia,
		c.tx_item,
		c.ie_ato_cooperado,
		c.vl_liberado,
		b.cd_medico_solicitante,
		d.vl_materiais,
		c.vl_taxa_material,
		c.vl_taxa_servico,
		c.vl_taxa_co,
		b.cd_medico_executor,
		b.nr_seq_prestador,
		b.cd_guia_referencia,
		c.dt_fim_proc,
		b.nr_seq_guia,
		c.nr_seq_pacote,
		d.tx_administracao,
		d.vl_administracao,
		b.ie_recem_nascido,
		d.ds_item_ptu,
		d.nr_registro_anvisa,
		d.cd_ref_fabricante,
		b.nr_seq_segurado
	
union all

	select	'P', -- PROCEDIMENTOS COM PARTICIPANTES
		1 ie_union,
		b.nr_sequencia,
		a.nr_sequencia,
		c.dt_inicio_proc,
		coalesce(d.nr_seq_cbo_saude,b.nr_seq_cbo_saude),
		CASE WHEN c.ie_via_acesso='U' THEN 0 WHEN c.ie_via_acesso='M' THEN 1 WHEN c.ie_via_acesso='D' THEN 2  ELSE '' END ,
		substr(c.cd_porte_anestesico,1,1),
		coalesce(d.nr_seq_grau_partic,b.nr_seq_grau_partic),
		b.nr_seq_prestador_exec,
		coalesce(c.dt_procedimento,clock_timestamp()),
		substr(c.ie_tipo_despesa,1,1),
		coalesce(x.cd_procedimento,c.cd_procedimento) cd_procedimento,
		coalesce(x.ie_origem_proced,c.ie_origem_proced) ie_origem_proced,
		sum(coalesce(c.qt_procedimento,0)),
		substr(sum(coalesce(x.vl_medico,0)),1,14),
		substr(sum(coalesce(x.vl_custo_operacional,0)),1,14) vl_co,
		substr(coalesce(b.cd_cnes,pls_obter_dados_prestador(b.nr_seq_prestador_exec,'CNES')),1,7),
		CASE WHEN max(c.nr_sequencia)='' THEN 'N'  ELSE 'S' END ,
		b.cd_guia,
		sum(coalesce(c.tx_item,0)),
		c.ie_ato_cooperado,
		sum(coalesce(d.vl_participante,0)) vl_liberado,
		b.cd_medico_solicitante,
		sum(coalesce(x.vl_materiais,0)),
		sum(coalesce(c.vl_taxa_material,0)),
		sum(CASE WHEN coalesce(x.vl_administracao,0)=0 THEN c.vl_taxa_servico  ELSE x.vl_administracao END ),
		sum(coalesce(c.vl_taxa_co,0)),
		b.cd_medico_executor cd_medico_exec_conta,
		d.cd_medico cd_medico_exec_partic,
		d.nr_cpf_imp,
		d.nr_crm_imp,
		d.sg_conselho_imp,
		d.uf_crm_imp,
		d.nm_medico_executor_imp,
		d.cd_medico_imp,
		b.cd_medico_solicitante,
		b.nr_seq_prestador,
		max(c.nr_sequencia),
		null,
		b.cd_guia_referencia,
		c.dt_fim_proc,
		coalesce(substr(pls_obter_se_urgencia_emergen(b.nr_sequencia,max(c.nr_sequencia)),1,1),'N') ie_acres_urg_emer,
		substr(ptu_obter_tec_utilizada(max(c.nr_sequencia)),1,1) ie_tec_utilizada,
		b.nr_seq_guia,
		'P',
		c.nr_seq_pacote,
		coalesce(x.tx_administracao,0),
		b.ie_recem_nascido,
		x.ds_item_ptu,
		x.nr_registro_anvisa,
		x.cd_ref_fabricante,
		b.nr_seq_segurado
	from	pls_conta_pos_estabelecido	x,
		pls_proc_participante		d,
		pls_conta_proc			c,
		pls_conta			b,
		pls_protocolo_conta		a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_sequencia		= d.nr_seq_conta_proc
	and	c.nr_sequencia		= x.nr_seq_conta_proc
	and	b.nr_sequencia		= nr_seq_conta_cobr_w
	group by
		x.vl_medico,
		x.vl_custo_operacional,
		b.nr_sequencia,
		a.nr_sequencia,
		c.dt_inicio_proc,
		d.nr_seq_cbo_saude,
		b.nr_seq_cbo_saude,
		c.ie_via_acesso,
		c.cd_porte_anestesico,
		d.nr_seq_grau_partic,
		b.nr_seq_grau_partic,
		b.nr_seq_prestador_exec,
		c.dt_procedimento,
		c.ie_tipo_despesa,
		x.cd_procedimento,
		c.cd_procedimento,
		x.ie_origem_proced,
		c.ie_origem_proced,
		c.qt_procedimento,
		d.vl_participante,
		b.cd_cnes,
		b.cd_guia,
		c.tx_item,
		c.ie_ato_cooperado,
		x.vl_materiais,
		c.vl_taxa_material,
		c.vl_taxa_servico,
		c.vl_taxa_co,
		b.cd_medico_executor,
		d.cd_medico,
		d.nr_cpf_imp,
		d.nr_crm_imp,
		d.sg_conselho_imp,
		d.uf_crm_imp,
		d.nm_medico_executor_imp,
		d.cd_medico_imp,
		b.cd_medico_solicitante,
		b.nr_seq_prestador,
		b.cd_guia_referencia,
		c.dt_fim_proc,
		b.nr_seq_guia,
		c.nr_seq_pacote,
		x.tx_administracao,
		x.vl_administracao,
		b.ie_recem_nascido,
		x.ds_item_ptu,
		x.nr_registro_anvisa,
		x.cd_ref_fabricante,
		b.nr_seq_segurado
	
union all

	select	'M', -- MATERIAIS
		3 ie_union,
		b.nr_sequencia,
		a.nr_sequencia,
		c.dt_inicio_atend,
		null,
		null,
		null,
		b.nr_seq_grau_partic,
		b.nr_seq_prestador_exec,
		coalesce(c.dt_atendimento,clock_timestamp()),
		substr(c.ie_tipo_despesa,1,1),
		c.nr_seq_material cd_procedimento,
		c.ie_origem_preco ie_origem_proced,
		sum(coalesce(c.qt_material,0)),
		substr(sum(coalesce(d.vl_beneficiario,0) - coalesce(d.vl_administracao,0)),1,14), --substr(c.vl_material_ptu,1,14),
		'0',
		substr(coalesce(b.cd_cnes,pls_obter_dados_prestador(b.nr_seq_prestador_exec,'CNES')),1,7),
		CASE WHEN max(c.nr_sequencia)='' THEN 'N'  ELSE 'S' END ,
		b.cd_guia,
		sum(coalesce(c.tx_participacao,0)),
		c.ie_ato_cooperado,
		sum(coalesce(c.vl_liberado,0)),
		b.cd_medico_solicitante,
		0,
		0 vl_taxa_material,
		sum(coalesce(d.vl_administracao,0)) vl_taxa_servico,   -- Segundo o manual do PTU  PG 75 no caso de material os valores de adicional devem ser sobrados no campo vl adic servico OS 507822 Diogo
		0 vl_taxa_co,
		b.cd_medico_executor,
		null cd_medico_exec_partic,
		null nr_cpf_imp,
		null nr_crm_imp,
		null sg_conselho_imp,
		null uf_crm_imp,
		null nm_medico_executor_imp,
		null cd_medico_imp,
		b.cd_medico_solicitante,
		b.nr_seq_prestador,
		null,
		max(c.nr_sequencia),
		b.cd_guia_referencia,
		c.dt_fim_atend,
		'N' ie_acres_urg_emer,
		null ie_tec_utilizada,
		b.nr_seq_guia,
		'M',
		null,
		coalesce(d.tx_administracao,0),
		b.ie_recem_nascido,
		d.ds_item_ptu,
		d.nr_registro_anvisa,
		d.cd_ref_fabricante,
		b.nr_seq_segurado
	from	pls_conta_pos_estabelecido d,
		pls_conta_mat		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	b.nr_sequencia	= c.nr_seq_conta
	and	a.nr_sequencia	= b.nr_seq_protocolo
	and	c.nr_sequencia	= d.nr_seq_conta_mat
	and	b.nr_sequencia	= nr_seq_conta_cobr_w
	group by
		b.nr_sequencia,
		a.nr_sequencia,
		c.dt_inicio_atend,
		b.nr_seq_grau_partic,
		b.nr_seq_prestador_exec,
		c.dt_atendimento,
		c.ie_tipo_despesa,
		c.nr_seq_material,
		c.ie_origem_preco,
		c.qt_material,
		d.vl_beneficiario,
		d.vl_administracao,
		b.cd_cnes,
		b.cd_guia,
		c.tx_participacao,
		c.ie_ato_cooperado,
		c.vl_liberado,
		b.cd_medico_solicitante,
		b.cd_medico_executor,
		b.nr_seq_prestador,
		b.cd_guia_referencia,
		c.dt_fim_atend,
		b.nr_seq_guia,
		d.tx_administracao,
		b.ie_recem_nascido,
		d.ds_item_ptu,
		d.nr_registro_anvisa,
		d.cd_ref_fabricante,
		b.nr_seq_segurado
	order by
		ie_union,
		cd_procedimento;
		
c00 CURSOR FOR
	SELECT	1,
		x.nr_sequencia,
		x.cd_procedimento,
		x.ie_origem_proced,
		null,
		'P'
	from	pls_pacote_procedimento x
	where (x.ie_tipo_guia		= ie_tipo_guia_w or coalesce(x.ie_tipo_guia::text, '') = '')
	and (x.nr_seq_prestador	= nr_seq_prestador_exec_w or coalesce(x.nr_seq_prestador::text, '') = '')
	and	x.ie_situacao		= 'A'
	and	exists (SELECT	1
			from	pls_pacote_composicao a
			where	a.nr_sequencia = x.nr_seq_composicao
			and	a.nr_seq_pacote	= nr_seq_pacote_w
			and	dt_atual_w between trunc(coalesce(a.dt_inicio_vigencia,clock_timestamp())) and coalesce(a.dt_fim_vigencia,clock_timestamp())
			and	a.ie_situacao = 'A')
	
union

	select	2,
		x.nr_sequencia,
		null,
		null,
		x.nr_seq_material,
		'M'
	from	pls_pacote_material x
	where (x.ie_tipo_guia		= ie_tipo_guia_w or coalesce(x.ie_tipo_guia::text, '') = '')
	and (x.nr_seq_prestador	= nr_seq_prestador_exec_w or coalesce(x.nr_seq_prestador::text, '') = '')
	and	x.ie_situacao		= 'A'
	and	exists (select	1
			from	pls_pacote_composicao a
			where	a.nr_sequencia = x.nr_seq_composicao
			and	a.nr_seq_pacote	= nr_seq_pacote_w
			and	dt_atual_w between trunc(coalesce(a.dt_inicio_vigencia,clock_timestamp())) and coalesce(a.dt_fim_vigencia,clock_timestamp())
			and	a.ie_situacao = 'A')
	order by 1;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		vl_procedimento
	from	ptu_nota_servico
	where	nr_seq_nota_cobr	= nr_seq_cobranca_p
	and	nr_seq_conta_proc	= nr_seq_conta_proc_w
	and	(nr_seq_pacote_agrup IS NOT NULL AND nr_seq_pacote_agrup::text <> '');
	

BEGIN
dt_atual_w := trunc(clock_timestamp());

select	nr_seq_fatura,
	nr_nota,
	nr_seq_conta,
	nr_lote,
	dt_protocolo,
	ie_tipo_atendimento,
	nr_ver_tiss
into STRICT	nr_seq_fatura_w,
	nr_nota_w,
	nr_seq_conta_cobr_w,
	nr_lote_w,
	dt_protocolo_w,
	ie_tipo_atendimento_w,
	nr_ver_tiss_w
from	ptu_nota_cobranca
where	nr_sequencia	= nr_seq_cobranca_p;

begin
select	cd_estabelecimento,
	nr_seq_lote,
	cd_unimed_destino,
	nr_seq_pls_fatura
into STRICT	cd_estabelecimento_w,
	nr_seq_lote_w,
	cd_cooperativa_w,
	nr_seq_pls_fatura_w
from	ptu_fatura
where	nr_sequencia	= nr_seq_fatura_w;
exception
when others then
	cd_estabelecimento_w	:= '';
	nr_seq_lote_w		:= null;
	cd_cooperativa_w	:= '';
	nr_seq_pls_fatura_w	:= null;
end;

if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
	begin
	select	a.nr_seq_regra_fat,
		a.nr_sequencia
	into STRICT	nr_seq_regra_fat_w,
		nr_seq_lote_fat_w
	from	pls_lote_faturamento a,
		pls_fatura b
	where	a.nr_sequencia	= b.nr_seq_lote
	and	b.nr_sequencia	= nr_seq_pls_fatura_w;
	exception
	when others then
		nr_seq_regra_fat_w := null;
	end;
end if;

begin
select 	coalesce(max(ie_material_intercambio), 'S')
into STRICT	ie_material_intercambio_w
from 	pls_parametros
where 	cd_estabelecimento	= cd_estabelecimento_w;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(182468);
end;

begin
select	coalesce(dt_previsao_envio, clock_timestamp())
into STRICT	dt_previsao_envio_w
from	ptu_lote_fatura_envio
where	nr_sequencia	= nr_seq_lote_w;
exception
when others then
	dt_previsao_envio_w	:= clock_timestamp();
end;

cd_unim_prestador_w	:= pls_obter_unimed_estab(cd_estabelecimento_w);

open C01;
loop
fetch C01 into
	ie_tipo_conta_w,
	ie_union_w,
	nr_seq_conta_w,
	nr_seq_protocolo_w,
	dt_inicio_proc_w,
	nr_seq_cbo_saude_w,
	ie_via_acesso_w,
	cd_porte_anest_w,
	nr_seq_grau_part_w,
	nr_seq_prestador_exec_w,
	dt_procedimento_w,
	ie_tipo_despesa_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_procedimento_w,
	vl_procedimento_w,
	vl_custo_operacional_w,
	cd_cnes_w,
	ie_reembolso_w,
	cd_guia_w,
	tx_procedimento_w,
	cd_ato_w,
	vl_prestador_w,
	cd_pessoa_fisica_w,
	vl_filme_w,	
	vl_adic_filme_w,
	vl_adic_procedimento_w,
	vl_adic_custo_operacional_w,
	cd_medico_executor_conta_w,
	cd_medico_executor_partic_w,
	nr_cpf_imp_w,
	nr_crm_imp_w,
	sg_conselho_imp_w,
	uf_crm_imp_w,
	nm_medico_executor_imp_w,
	cd_medico_imp_w,
	cd_medico_solic_w,
	nr_seq_prestador_atend_w,
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w,
	cd_guia_referencia_w,
	hr_final_w,
	ie_acres_urg_emer_w,
	ie_tec_utilizada_w,
	nr_seq_guia_w,
	ie_tipo_w,
	nr_seq_pacote_w,
	tx_administracao_w,
	ie_recem_nascido_w,
	ds_item_ptu_w,
	nr_registro_anvisa_pos_w,	
	cd_ref_fabricante_pos_w,
	nr_seq_segurado_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
		select	coalesce(vl_custo_operacional,0)
		into STRICT	vl_co_item_w
		from	pls_conta_proc
		where	nr_sequencia = nr_seq_conta_proc_w;
	else
		vl_co_item_w := 0;
	end if;
	
	if (vl_procedimento_w < 0) then
		vl_procedimento_w := 0;
	end if;
	
	vl_adic_procedimento_w	:= (coalesce(vl_adic_procedimento_w, 0) - coalesce(vl_adic_filme_w, 0) - coalesce(vl_adic_custo_operacional_w, 0));
	
	select	max(a.ie_tipo_guia),
		max(a.nr_seq_tipo_atendimento),
		max(ie_regime_atendimento),
		max(ie_saude_ocupacional)
	into STRICT	ie_tipo_guia_w,
		nr_seq_tipo_atendimento_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w
	from	pls_conta	a
	where	a.nr_sequencia	= nr_seq_conta_w;
	
	nm_profissional_prestador_w	:= null;
	sg_cons_prof_prest_w		:= null;
	nr_cons_prof_prest_w		:= null;
	sg_uf_cons_prest_w		:= null;
	cd_municipio_w			:= null;
	cd_cbo_w			:= null;
	
	----------------------------------------------------------------------------------	DADOS DO EXECUTOR		---------------------------------------------------------------------------------- 

	-- Verificar primeiro pelo medico do participante
	if (cd_medico_executor_partic_w IS NOT NULL AND cd_medico_executor_partic_w::text <> '') then
		nm_profissional_prestador_w	:= substr(obter_nome_medico(cd_medico_executor_partic_w, 'N'), 1, 40);
		sg_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_executor_partic_w, 'SGCRM'), 1, 12);
		nr_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_executor_partic_w, 'CRM'), 1, 15);
		sg_uf_cons_prest_w		:= substr(obter_dados_medico(cd_medico_executor_partic_w, 'UFCRM'), 1, 2);
		cd_municipio_w			:= substr(obter_dados_pf_pj(cd_medico_executor_partic_w, null, 'CDM'), 1, 7);
		
		select	max(cd_cbo)
		into STRICT	cd_cbo_w
		from	sus_cbo_pessoa_fisica
		where	cd_pessoa_fisica = cd_medico_executor_partic_w;
	elsif (nr_cpf_imp_w IS NOT NULL AND nr_cpf_imp_w::text <> '') or (nr_crm_imp_w IS NOT NULL AND nr_crm_imp_w::text <> '') then		
		nm_profissional_prestador_w	:= nm_medico_executor_imp_w;
		sg_cons_prof_prest_w		:= sg_conselho_imp_w;
		nr_cons_prof_prest_w		:= nr_crm_imp_w;
		sg_uf_cons_prest_w		:= uf_crm_imp_w;
		cd_municipio_w			:= substr(obter_dados_pf_pj(cd_medico_imp_w, null, 'CDM'), 1, 7);
		
		if (cd_medico_imp_w IS NOT NULL AND cd_medico_imp_w::text <> '') then
			select	max(cd_cbo)
			into STRICT	cd_cbo_w
			from	sus_cbo_pessoa_fisica
			where	cd_pessoa_fisica	= cd_medico_imp_w;
		end if;
	end if;
	
	-- Se nao achou, verificar pelo medico executor da conta
	if (coalesce(cd_medico_executor_partic_w::text, '') = '') and (coalesce(nr_cpf_imp_w::text, '') = '') and (coalesce(nr_crm_imp_w::text, '') = '') and (cd_medico_executor_conta_w IS NOT NULL AND cd_medico_executor_conta_w::text <> '') then
		nm_profissional_prestador_w	:= substr(obter_nome_medico(cd_medico_executor_conta_w, 'N'), 1, 40);
		sg_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_executor_conta_w, 'SGCRM'), 1, 12);
		nr_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_executor_conta_w, 'CRM'), 1, 15);
		sg_uf_cons_prest_w		:= substr(obter_dados_medico(cd_medico_executor_conta_w, 'UFCRM'), 1, 2);
		cd_municipio_w			:= substr(obter_dados_pf_pj(cd_medico_executor_conta_w, null, 'CDM'), 1, 7);
		
		select	max(cd_cbo)
		into STRICT	cd_cbo_w
		from	sus_cbo_pessoa_fisica
		where	cd_pessoa_fisica = cd_medico_executor_conta_w;
	end if;
	
	-- Se nao achou, verificar pelo prestador executor da conta
	if (coalesce(cd_medico_executor_partic_w::text, '') = '') and (coalesce(nr_cpf_imp_w::text, '') = '') and (coalesce(nr_crm_imp_w::text, '') = '') and (coalesce(cd_medico_executor_conta_w::text, '') = '') and (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
		select	a.cd_pessoa_fisica,
			substr(pls_obter_dados_prestador(a.nr_sequencia,'N'),1,40),
			substr(pls_obter_dados_prestador(a.nr_sequencia,'IBGEC'),1,7),
			a.nr_sequencia
		into STRICT	cd_medico_prest_exec_w,
			nm_profissional_prestador_w,
			cd_municipio_w,
			nr_seq_prestador_pgto_w
		from	pls_prestador	a
		where	a.nr_sequencia	= nr_seq_prestador_exec_w;
		
		select	count(1)
		into STRICT	qt_registro_med_w
		from	medico
		where	cd_pessoa_fisica = cd_medico_prest_exec_w;
		
		if (cd_medico_prest_exec_w IS NOT NULL AND cd_medico_prest_exec_w::text <> '') and (qt_registro_med_w > 0) then
			nm_profissional_prestador_w	:= substr(obter_nome_medico(cd_medico_prest_exec_w, 'N'), 1, 40);
			sg_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_prest_exec_w, 'SGCRM'), 1, 12);
			nr_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_prest_exec_w, 'CRM'), 1, 15);
			sg_uf_cons_prest_w		:= substr(obter_dados_medico(cd_medico_prest_exec_w, 'UFCRM'), 1, 2);
			
			select	max(cd_cbo)
			into STRICT	cd_cbo_w
			from	sus_cbo_pessoa_fisica
			where	cd_pessoa_fisica = cd_medico_prest_exec_w;
		end if;
		
		qt_registro_med_w := 0;
	end if;
	
	nr_cgc_cpf_req_w	:= null;
	nm_prestador_req_w	:= null;
	sg_cons_prof_req_w	:= null;
	nr_cons_prof_req_w	:= null;
	sg_uf_cons_req_w	:= null;
	
	----------------------------------------------------------------------------------	DADOS DO SOLICITANTE	---------------------------------------------------------------------------------- 

	-- Buscar primeiro os dados do medico solicitante da conta 
	if (cd_medico_solic_w IS NOT NULL AND cd_medico_solic_w::text <> '') then
		nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_solic_w, 'CPF'), 1, 14);
		nm_prestador_req_w	:= trim(both substr(obter_nome_medico(cd_medico_solic_w, 'N'), 1, 40));
		sg_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'SGCRM'), 1, 12);
		nr_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'CRM'), 1, 15);
		sg_uf_cons_req_w	:= substr(obter_dados_medico(cd_medico_solic_w,'UFCRM'),1,2);
		
	-- Se nao tiver, buscar o prestador do atendimento
	elsif (nr_seq_prestador_atend_w IS NOT NULL AND nr_seq_prestador_atend_w::text <> '') then
		select	coalesce(a.cd_cgc,substr(obter_dados_pf(a.cd_pessoa_fisica,'CPF'), 1, 14)),
			a.cd_pessoa_fisica,
			trim(both substr(pls_obter_dados_prestador(a.nr_sequencia,'N'), 1, 40)),
			a.nr_sequencia
		into STRICT	nr_cgc_cpf_req_w,
			cd_medico_solic_w,
			nm_prestador_req_w,
			nr_seq_prestador_pgto_w
		from	pls_prestador	a
		where	a.nr_sequencia	= nr_seq_prestador_atend_w;
		
		select	count(1)
		into STRICT	qt_registro_med_w
		from	medico
		where	cd_pessoa_fisica = cd_medico_solic_w;
		
		if (cd_medico_solic_w IS NOT NULL AND cd_medico_solic_w::text <> '') then
			nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_solic_w, 'CPF'), 1, 14);
			if (qt_registro_med_w > 0) then
				nm_prestador_req_w	:= trim(both substr(obter_nome_medico(cd_medico_solic_w, 'N'), 1, 40));
				sg_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'SGCRM'), 1, 12);
				nr_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'CRM'), 1, 15);
				sg_uf_cons_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'UFCRM'), 1, 2);
			end if;
		end if;
		
		qt_registro_med_w := 0;
	
	-- OS 486959 - No ultimo dos casos, tenta buscar o prestador requisitante/solicitante direto da guia
	elsif (cd_guia_referencia_w IS NOT NULL AND cd_guia_referencia_w::text <> '') then
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_guia_plano
		where	cd_guia	= cd_guia_referencia_w;
		
		if (qt_registro_w > 0) then
			select	max(cd_medico_solicitante),
				trim(both substr(pls_obter_dados_prestador(max(nr_seq_prestador), 'N'), 1, 40))
			into STRICT	cd_medico_solic_w,
				nm_prestador_req_w
			from	pls_guia_plano
			where	cd_guia	= cd_guia_referencia_w;
			
			if (cd_medico_solic_w IS NOT NULL AND cd_medico_solic_w::text <> '') then
				nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_solic_w, 'CPF'), 1, 14);
				nm_prestador_req_w	:= trim(both coalesce(substr(obter_nome_medico(cd_medico_solic_w, 'N'), 1, 40), nm_prestador_req_w));
				sg_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'SGCRM'), 1, 12);
				nr_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'CRM'), 1, 15);
				sg_uf_cons_req_w	:= substr(obter_dados_medico(cd_medico_solic_w, 'UFCRM'), 1, 2);
			end if;
		end if;
	end if;
	
	if (coalesce(trim(both cd_medico_solic_w)::text, '') = '') and (ie_tipo_guia_w = '3') then
		
		if ((trim(both cd_medico_executor_partic_w) IS NOT NULL AND (trim(both cd_medico_executor_partic_w))::text <> '')) then
			nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_executor_partic_w, 'CPF'), 1, 14);
		
		elsif ((trim(both nr_cpf_imp_w) IS NOT NULL AND (trim(both nr_cpf_imp_w))::text <> '')) then
			nr_cgc_cpf_req_w	:= nr_cpf_imp_w;
			
		elsif ((trim(both cd_medico_imp_w) IS NOT NULL AND (trim(both cd_medico_imp_w))::text <> '')) then
			nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_imp_w, 'CPF'), 1, 14);
			
		elsif ((trim(both cd_medico_executor_conta_w) IS NOT NULL AND (trim(both cd_medico_executor_conta_w))::text <> '')) then
			nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_executor_conta_w, 'CPF'), 1, 14);
		end if;
		
		nm_prestador_req_w	:= nm_profissional_prestador_w;
		sg_cons_prof_req_w	:= sg_cons_prof_prest_w;
		nr_cons_prof_req_w	:= nr_cons_prof_prest_w;
		sg_uf_cons_req_w	:= sg_uf_cons_prest_w;		
	end if;
	
	select	coalesce(max(c.nr_seq_ops_congenere), max(c.nr_seq_congenere))
	into STRICT	nr_seq_congenere_w
	from	pls_segurado		c,
		pls_conta		b
	where	c.nr_sequencia	= b.nr_seq_segurado
	and	b.nr_sequencia	= nr_seq_conta_w;
	
	ie_tipo_intercambio_w	:= 'A';
	
	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
		-- Obter a UF da operadora  - Tasy
		select	coalesce(max(sg_estado),'X')
		into STRICT	sg_estado_w
		from	pessoa_juridica
		where	cd_cgc	=	(SELECT	max(cd_cgc_outorgante)
					from	pls_outorgante
					where	cd_estabelecimento	= cd_estabelecimento_w);
		
		-- Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo
		select	coalesce(max(a.sg_estado),'X')
		into STRICT	sg_estado_int_w
		from	pessoa_juridica	a,
			pls_congenere	b
		where	a.cd_cgc	= b.cd_cgc
		and	b.nr_sequencia	= nr_seq_congenere_w;
		
		if (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
			if (sg_estado_w	= sg_estado_int_w) then
				ie_tipo_intercambio_w	:= 'E';
			else	
				ie_tipo_intercambio_w	:= 'N';
			end if;
		else
			ie_tipo_intercambio_w	:= 'A';
		end if;
	end if;	
	
	-- INICIALIZAR
	dt_autoriz_w 		:= null;
	dt_solicitacao_w 	:= null;	
	nr_seq_regra_agrup_w	:= null;
	nr_registro_anvisa_w	:= null;
	nr_seq_mat_unimed_w	:= null;
	cd_ref_material_fab_w	:= null;
	nr_uni_medida_ptu_w	:= null;
	cd_unidade_medida_w	:= null;
	ie_mat_a900_w		:= 'N';
	ie_somente_codigo_w	:= null;
	ds_servico_orig_w	:= null;
		
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		select	max(coalesce(dt_liberacao,dt_autorizacao)),
			max(dt_solicitacao)
		into STRICT	dt_autoriz_w,
			dt_solicitacao_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_w;
	end if;
	
	if (ie_tipo_conta_w = 'P') then
		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
			select	max(ds_procedimento)
			into STRICT	ds_servico_orig_w
			from	procedimento
			where	cd_procedimento	= cd_procedimento_w
			and	ie_origem_proced= ie_origem_proced_w;
		end if;
		
		if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
			select	nr_seq_contrato,	
				nr_seq_intercambio
			into STRICT	nr_seq_contrato_w,		
				nr_seq_intercambio_w
			from	pls_segurado
			where	nr_sequencia = nr_seq_segurado_w;
		end if;
		
		-- A origem do procedimento e buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.
		SELECT * FROM pls_obter_proced_conversao(	cd_procedimento_w, ie_origem_proced_w, null, cd_estabelecimento_w, 1, null, 5, 'E', nr_seq_contrato_w, nr_seq_intercambio_w, null, null, ie_tipo_intercambio_w, cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), nr_seq_tipo_atendimento_w, null, null) INTO STRICT cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w;
						
		cd_proc_conversao_w := coalesce(cd_proc_conversao_w,cd_procedimento_w);
		ie_origem_proced_conv_w := coalesce(ie_origem_proced_conv_w,ie_origem_proced_w);
		
		if (nr_seq_regra_conv_w IS NOT NULL AND nr_seq_regra_conv_w::text <> '') then
			cd_servico_w	:= substr(cd_proc_conversao_w, 1, 8);
		
			select	substr(a.ds_proc_envio, 1, 80)
			into STRICT	ds_servico_w
			from	pls_conversao_proc	a
			where	a.nr_sequencia		= nr_seq_regra_conv_w;
		else
			cd_servico_w	:= substr(cd_proc_conversao_w,1,8);
			ds_servico_w	:= substr(pls_obter_desc_procedimento(cd_proc_conversao_w, ie_origem_proced_conv_w), 1, 80);
		end if;
		
		if (coalesce(ie_somente_codigo_w,'N') = 'S') then
			ds_servico_w := substr(ds_servico_orig_w,1,80);
		end if;
		
		if (coalesce(ie_origem_proced_conv_w::text, '') = '') then
			--jjung OS 483853 - 02/10/2012 - adicionado restricao para data de vigencia das regras cadastradas.
			ie_origem_proced_conv_w := pls_obter_origem_proced(cd_estabelecimento_w, null, 'R', dt_procedimento_w, null);
		end if;
		
		if (ie_origem_proced_conv_w <> ie_origem_proced_w) then
			select	count(1)
			into STRICT	qt_proced_origem_w
			from	procedimento
			where	cd_procedimento		= cd_proc_conversao_w
			and	ie_origem_proced	= ie_origem_proced_conv_w;
			
			-- Se este procedimento nao existir na origem padrao e selecionado o max origem proced
			if (qt_proced_origem_w = 0) then	
				select	max(ie_origem_proced)
				into STRICT	ie_origem_proced_conv_w
				from	procedimento
				where	cd_procedimento	= cd_proc_conversao_w;	
			end if;
		
			cd_procedimento_w 	:= cd_proc_conversao_w;
			ie_origem_proced_w	:= ie_origem_proced_conv_w;
		end if;
		
		-- Zerar material
		nr_seq_material_w	:= null;
	
		if (ie_tipo_despesa_w  = 1) then
			ie_tipo_tabela_w	:= 0;
		elsif (ie_tipo_despesa_w = 2) then
			ie_tipo_tabela_w	:= 1;
		elsif (ie_tipo_despesa_w = 3) then
			ie_tipo_tabela_w	:= 1;
		elsif (ie_tipo_despesa_w = 4) then
			ie_tipo_tabela_w	:= 2;
		end if;
		
		SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_w, ie_origem_proced_w, cd_area_regra_w, cd_especialidade_regra_w, cd_grupo_regra_w, ie_origem_regra_w) INTO STRICT cd_area_regra_w, cd_especialidade_regra_w, cd_grupo_regra_w, ie_origem_regra_w;
	else
		if (ie_tipo_conta_w = 'M') then			
			if (ie_tipo_despesa_w = 1) then
				ie_tipo_tabela_w	:= 2;
			elsif (ie_tipo_despesa_w = 2) then
				ie_tipo_tabela_w	:= 3;
			elsif (ie_tipo_despesa_w = 3) then
				ie_tipo_tabela_w	:= 2;
			elsif (ie_tipo_despesa_w = 7) then
				ie_tipo_tabela_w	:= 2;
			end if;
			
			cd_servico_w := null;
			
			nr_seq_material_w	:= cd_procedimento_w;
			
			select	cd_material_ops
			into STRICT	cd_material_ops_w
			from	pls_material
			where	nr_sequencia	= nr_seq_material_w;
			
			SELECT * FROM pls_obter_mat_conversao(cd_material_ops_w, ie_tipo_despesa_mat_w, nm_usuario_p, 'E', null, null, nr_seq_prestador_exec_w, nr_seq_material_w, cd_servico_saida_w, ds_servico_w, ie_tipo_tabela_conv_w, nr_seq_regra_conv_mat_w, null) INTO STRICT nr_seq_material_w, cd_servico_saida_w, ds_servico_w, ie_tipo_tabela_conv_w, nr_seq_regra_conv_mat_w;

			if (ie_tipo_tabela_conv_w IS NOT NULL AND ie_tipo_tabela_conv_w::text <> '') then
				ie_tipo_tabela_w := ie_tipo_tabela_conv_w;
			end if;

			cd_servico_w	:= substr(to_char(somente_numero(cd_servico_saida_w)), 1, 15);
			
			if (cd_servico_w = 0) then
				cd_servico_w	:= null;
			end if;
			
			if (coalesce(cd_servico_w::text, '') = '') then
				-- cd_procedimento_w contem o NR_SEQ_MATERIAL (PLS_MATERIAL) 
				nr_seq_material_w	:= cd_procedimento_w;					
			
				-- Francisco - 15/05/2012 - OS 447235 - Tratar conversao de codigos para envio 
				begin
				if (coalesce(ie_material_intercambio_w, 'S') = 'S') then		
					cd_servico_w 	:= nr_seq_material_w;
					
				elsif (coalesce(ie_material_intercambio_w, 'S') = 'C') then
					cd_servico_w	:= cd_material_ops_w;
					
				elsif (coalesce(ie_material_intercambio_w, 'S') = 'CI') then
					SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_a900_w, null) INTO STRICT  nr_seq_material_w, cd_servico_a900_w;
					
					cd_servico_w	:= somente_numero(cd_servico_a900_w);
					
					if (cd_servico_w = 0) then
						cd_servico_w	:= null;
					else
						ie_mat_a900_w	:= 'S';
					end if;

					if (coalesce(cd_servico_w::text, '') = '') then
						select	a.nr_seq_material_unimed
						into STRICT	nr_seq_mat_unimed_w
						from	pls_material	a
						where	nr_sequencia	= nr_seq_material_w;
						
						if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
							select	a.cd_material
							into STRICT	cd_servico_w
							from	pls_material_unimed	a
							where	a.nr_sequencia		= nr_seq_mat_unimed_w;
							
							ie_mat_a900_w	:= 'S';
						end if;
					end if;
				end if;
				exception
				when others then
					cd_servico_w	:= null;
				end;
				
				ds_servico_w		:= substr(pls_obter_desc_material(nr_seq_material_w), 1, 80);
				ds_servico_orig_w	:= ds_servico_w;
				
				-- Se nao encontrar, buscar na tabela de conversao do PTU
				if (coalesce(cd_servico_w::text, '') = '') then
					SELECT * FROM ptu_obter_material_conversao(	cd_material_ops_w, ie_tipo_tabela_w, dt_procedimento_w, 'E', 'A', coalesce(ie_tipo_despesa_mat_w, ie_tipo_despesa_w), ie_tipo_intercambio_w, nr_seq_mat_unimed_w, cd_servico_mat_w, ie_somente_codigo_w) INTO STRICT nr_seq_mat_unimed_w, cd_servico_mat_w, ie_somente_codigo_w;
		
					if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
						select	a.cd_material,
							substr(a.ds_material, 1, 80)
						into STRICT	cd_servico_w,
							ds_servico_w
						from	pls_material_unimed	a
						where	a.nr_sequencia		= nr_seq_mat_unimed_w;
						
						ie_mat_a900_w	:= 'S';
					end if;
					
					if (coalesce(ie_somente_codigo_w,'N') = 'S') then
						ds_servico_w	:= substr(ds_servico_orig_w,1,80);
					end if;
				end if;
				
				-- Se ainda assim nao encontrar, lancar o codigo da operadora mesmo
				if (coalesce(cd_servico_w::text, '') = '') then
					begin
					select	(cd_material_ops)::numeric
					into STRICT	cd_servico_w
					from	pls_material
					where	nr_sequencia	= nr_seq_material_w;
					exception
					when others then
						cd_servico_w	:= null;
					end;
				end if;
			end if;
		end if;
		
		cd_area_regra_w			:= null;
		cd_especialidade_regra_w	:= null;
		cd_grupo_regra_w		:= null;
		ie_origem_regra_w		:= null;
		cd_procedimento_w		:= null;
		ie_origem_proced_w		:= null;
		
		select	max(nr_seq_estrut_mat),
			max(cd_material_ops)
		into STRICT	nr_seq_estrut_mat_w,
			cd_material_ops_w
		from	pls_material
		where	nr_sequencia	= nr_seq_material_w;
		
		if (ie_mat_a900_w = 'S') then
			if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
				select	somente_numero(max(nr_registro_anvisa)),
					max(cd_ref_material_fab),
					max(cd_unidade_medida)
				into STRICT	nr_registro_anvisa_w,
					cd_ref_material_fab_w,
					cd_unidade_medida_w
				from	pls_material_unimed
				where	nr_sequencia = nr_seq_mat_unimed_w;

				if (cd_material_ops_w IS NOT NULL AND cd_material_ops_w::text <> '') and (coalesce(nr_registro_anvisa_w, 0) = 0) and (coalesce(cd_ref_material_fab_w::text, '') = '') then
					select	somente_numero(max(nr_registro_anvisa)),
						max(cd_ref_material_fab),
						max(cd_unidade_medida)
					into STRICT	nr_registro_anvisa_w,
						cd_ref_material_fab_w,
						cd_unidade_medida_w
					from 	pls_material_unimed a
					where 	cd_material		= cd_material_ops_w;
				end if;
				
			
			elsif (cd_servico_w IS NOT NULL AND cd_servico_w::text <> '') then
				select	somente_numero(max(nr_registro_anvisa)),
					max(cd_ref_material_fab),
					max(cd_unidade_medida)
				into STRICT	nr_registro_anvisa_w,
					cd_ref_material_fab_w,
					cd_unidade_medida_w
				from	pls_material_unimed
				where	cd_material = cd_servico_w;
			end if;
			
			ie_mat_a900_w	:= 'N';
			
			if (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then			
				select	max(nr_unidade_ptu)
				into STRICT	nr_uni_medida_ptu_w
				from	unidade_medida
				where	upper(cd_unidade_ptu) = upper(cd_unidade_medida_w);
			end if;	
		
		elsif (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
			select	somente_numero(max(nr_registro_anvisa)),
				max(cd_unidade_medida)
			into STRICT	nr_registro_anvisa_w,
				cd_unidade_medida_w
			from	pls_material
			where	nr_sequencia = nr_seq_material_w;
			
			if (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then			
				select	max(nr_unidade_ptu)
				into STRICT	nr_uni_medida_ptu_w
				from	unidade_medida
				where	upper(cd_unidade_medida) = upper(cd_unidade_medida_w);
			end if;		
		end if;
	end if;

	select	CASE WHEN ie_tipo_conta_w='P' THEN  cd_procedimento_w  ELSE null END ,
		CASE WHEN ie_tipo_conta_w='M' THEN  cd_procedimento_w  ELSE null END ,
		CASE WHEN ie_tipo_conta_w='P' THEN  ie_tipo_despesa_w  ELSE null END ,
		CASE WHEN ie_tipo_conta_w='M' THEN  ie_tipo_despesa_w  ELSE null END
	into STRICT	cd_procedimento_regra_w,
		nr_seq_material_regra_w,
		ie_tipo_desp_proc_w,
		ie_tipo_despesa_mat_w
	;
	
	nr_seq_regra_w := pls_obter_regra_doc_fisico_fat(	cd_area_regra_w, cd_especialidade_regra_w, cd_grupo_regra_w, cd_procedimento_regra_w, ie_origem_regra_w, nr_seq_material_regra_w, nr_seq_estrut_mat_w, nr_seq_prestador_exec_w, ie_tipo_desp_proc_w, ie_tipo_despesa_mat_w, ie_tipo_guia_w, dt_procedimento_w, nr_seq_tipo_atendimento_w, nr_seq_regra_fat_w, ie_regime_atendimento_w, ie_saude_ocupacional_w, nr_seq_regra_w);
					
	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		select	max(a.ie_exige_doc_fisico)
		into STRICT	ie_exige_doc_fisico_w
		from	pls_regra_doc_fisico_fat	a
		where	a.nr_sequencia	= nr_seq_regra_w;
		
		if (ie_exige_doc_fisico_w = 'S') then
			update	ptu_nota_cobranca
			set	ie_necessita_doc_fisico	= 'S'
			where	nr_sequencia		= nr_seq_cobranca_p;
		else
			update	ptu_nota_cobranca
			set	ie_necessita_doc_fisico	= 'N'
			where	nr_sequencia		= nr_seq_cobranca_p
			and	coalesce(ie_necessita_doc_fisico,'N')	<> 'S';
		end if;
	end if;
	
	begin
	select	nr_sequencia,
		CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN cd_cgc  ELSE obter_dados_pf(cd_pessoa_fisica,'CPF') END ,
		substr(CASE WHEN coalesce(cd_cgc::text, '') = '' THEN  'F'  ELSE 'J' END ,1,2),
		trim(both substr(upper(elimina_acentos(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc))),1,40)),
		substr(pls_obter_se_cooperado_ativo(cd_pessoa_fisica,dt_procedimento_w,null),1,1),
		substr(pls_obter_cod_prestador(nr_sequencia,null),1,8)
	into STRICT	nr_seq_prestador_w,
		nr_cnpj_cpf_w,
		ie_tipo_pessoa_pres_w,
		nm_prestador_w,
		ie_rede_propria_w,
		cd_prestador_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_exec_w;
	exception
	when others then
		nr_seq_prestador_w	:= null;
		nr_cnpj_cpf_w		:= null;
		ie_tipo_pessoa_pres_w	:= null;
		nm_prestador_w		:= null;
		ie_rede_propria_w	:= null;
	end;
	
	nr_seq_prestador_pgto_w := coalesce(nr_seq_prestador_exec_w,nr_seq_prestador_pgto_w);
	
	begin
	select	qt_dia_vencimento
	into STRICT	qt_dia_vencimento_w
	from	pls_prestador_pagto
	where	nr_seq_prestador = nr_seq_prestador_pgto_w;
	exception
	when others then
		qt_dia_vencimento_w := 0;
	end;
	
	dt_competencia_pgto_w := null;
	
	if (coalesce(qt_dia_vencimento_w,0) > 0) then
		dt_competencia_pgto_w := to_date(lpad(qt_dia_vencimento_w,2,'0') || to_char(dt_protocolo_w,'mm/yyyy'));
		
		if (trunc(dt_protocolo_w) >= trunc(dt_competencia_pgto_w)) then
			dt_competencia_pgto_w	:= add_months(dt_competencia_pgto_w,1);
		end if;
	
	else	
		select	max(dt_competencia_pgto)
		into STRICT	dt_competencia_pgto_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta = nr_seq_conta_w
		and	coalesce(nr_seq_prestador_pgto,nr_seq_prestador_exec) = nr_seq_prestador_pgto_w;
		
		if (coalesce(dt_competencia_pgto_w::text, '') = '') then
			dt_competencia_pgto_w := dt_protocolo_w;
		end if;
		
		if (trunc(dt_protocolo_w) >= trunc(dt_competencia_pgto_w)) then
			dt_competencia_pgto_w	:= dt_competencia_pgto_w + 1;
		end if;
	end if;

	begin
	select	nr_seq_tipo
	into STRICT	nr_seq_tipo_prest_w
	from	pls_prestador_tipo
	where	nr_seq_prestador	= nr_seq_prestador_w
	and	dt_procedimento_w between coalesce(dt_inicio_vigencia, dt_procedimento_w - 1) and coalesce(dt_fim_vigencia, dt_procedimento_w + 1);
	exception
	when others then
		nr_seq_tipo_prest_w := null;
	end;

	select	coalesce(max(ie_tipo_ptu), '1')
	into STRICT	ie_tipo_prestador_w
	from	pls_tipo_prestador
	where	nr_sequencia	= nr_seq_tipo_prest_w;
	
	select	max(cd_ptu)
	into STRICT	ie_tipo_participacao_w
	from	pls_grau_participacao
	where	nr_sequencia	= nr_seq_grau_part_w;
	
	if (coalesce(nr_seq_grau_part_w::text, '') = '') then
		ie_tipo_participacao_w := '0';
	end if;
	
	-- Quando for material/medicamento ou pacote, participacao deve ser ZERO
	if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') or (ie_pacote_w = 'S') then
		ie_tipo_participacao_w	:= '0';
	end if;
	
	if (ie_tipo_guia_w = '3') and (ie_tipo_participacao_w not in ('0','L')) then
		ie_tipo_participacao_w := '0';
	end if;
	
	if (ie_tipo_guia_w = '4') and (ie_tipo_participacao_w = 'C') and (ie_tipo_atendimento_w in ('2','5')) and (ie_via_acesso_w IS NOT NULL AND ie_via_acesso_w::text <> '') then
		ie_tipo_participacao_w := 'X';
	end if;
	
	if (coalesce(vl_custo_operacional_w,0) + coalesce(vl_adic_custo_operacional_w,0) + coalesce(vl_co_item_w,0) > 0) then
		ie_tipo_participacao_w	:= '0';
	end if;
	
	if (ie_recem_nascido_w = 'S') then
		ie_tipo_participacao_w := 'P';
	end if;
	
	-- Verifique a nota 00001851748, lote 00083477. As diarias devem ser identificadas com participacao H.
	if (ie_tipo_guia_w = '5') and (ie_tipo_despesa_w = '3') and (coalesce(nr_seq_material_w::text, '') = '') then
		ie_tipo_participacao_w	:= 'H';
	end if;
	
	-- Verifique a nota 00002084642, lote 00092967. Participacao invalida para o servico (CD_SERVICO=10101039) informado.
	if (cd_servico_w = 10101039) then
		if (ie_tipo_participacao_w not in ('0','X')) then
			ie_tipo_participacao_w := '0';
		end if;		
	end if;
	
	if (ie_tipo_participacao_w in ('A','N')) then
		cd_porte_anest_w := '1';
	end if;
	
	-- Verifique a nota 00018879413, lote 00088061. Para servicos SADT a participacao deve ser 0(zero), podendo ser utilizada a participacao "X" para custo operacional e filme.
	if (ie_origem_proced_w = 5) and (ie_tipo_participacao_w = 'L') then
		ie_tipo_participacao_w := '0';
	end if;
	
	if (coalesce(sg_cons_prof_req_w::text, '') = '') then
		select	coalesce(max(c.sg_conselho), 'CRM')
		into STRICT	sg_cons_prof_req_w
		from	conselho_profissional	c,
			medico			b,
			pessoa_fisica		a
		where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
		and	a.nr_seq_conselho	= c.nr_sequencia
		and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	end if;
	
	if (coalesce(nr_cons_prof_req_w::text, '') = '') then
		select	coalesce(max(a.nr_seq_conselho), 1)
		into STRICT	nr_cons_prof_req_w
		from	conselho_profissional	c,
			medico			b,
			pessoa_fisica		a
		where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
		and	a.nr_seq_conselho	= c.nr_sequencia
		and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	end if;
	
	if (coalesce(sg_uf_cons_req_w::text, '') = '') then
		select	coalesce(max(b.uf_crm), 'SC')
		into STRICT	sg_uf_cons_req_w
		from	conselho_profissional	c,
			medico			b,
			pessoa_fisica		a
		where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
		and	a.nr_seq_conselho	= c.nr_sequencia
		and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	end if;
	
	select	max(cd_especialidade)
	into STRICT	cd_especialidade_med_w
	from	medico_especialidade
	where	nr_seq_cbo_saude	= nr_seq_cbo_saude_w;
	
	select	coalesce(max(cd_ptu),1)
	into STRICT	cd_especialidade_w
	from	especialidade_medica
	where	cd_especialidade	= cd_especialidade_med_w;
	
	select	max(cd_excecao)
	into STRICT	cd_excecao_w
	from	ptu_nota_cobranca
	where	nr_sequencia	= nr_seq_cobranca_p;
	
	if (cd_excecao_w in ('L', 'C', 'O', 'E')) then
		select	coalesce(max(cd_senha_externa),max(cd_senha)),
			max(ie_status)
		into STRICT	cd_senha_w,
			ie_status_w
		from	pls_guia_plano
		where	cd_guia = cd_guia_w;
		
		if (coalesce(cd_senha_w::text, '') = '') then
			select	coalesce(max(cd_senha_externa),max(cd_senha)),
				max(ie_status)
			into STRICT	cd_senha_w,
				ie_status_w
			from	pls_guia_plano
			where	cd_guia = cd_guia_referencia_w;
		end if;
		
		if ((trim(both cd_senha_w) IS NOT NULL AND (trim(both cd_senha_w))::text <> '')) and (trim(both cd_senha_w) <> '0') then
			cd_senha_w := somente_numero(cd_senha_w);
		else
			if ((trim(both cd_guia_w) IS NOT NULL AND (trim(both cd_guia_w))::text <> '')) then
				cd_senha_w := somente_numero(substr(cd_guia_w,1,10));
				
			elsif ((trim(both cd_guia_referencia_w) IS NOT NULL AND (trim(both cd_guia_referencia_w))::text <> '')) then
				cd_senha_w := somente_numero(substr(cd_guia_referencia_w,1,10));
			end if;
		end if;
		
		if (cd_senha_w IS NOT NULL AND cd_senha_w::text <> '') and (cd_excecao_w = 'E') and (ie_status_w = '1') then
			update	ptu_nota_cobranca
			set	cd_excecao	= 'L'
			where	nr_sequencia	= nr_seq_cobranca_p;
		end if;	
	else
		cd_senha_w := 0;
	end if;
	
	if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
		select	sum(coalesce(vl_beneficiario,0))
		into STRICT	vl_beneficiario_w
		from	pls_conta_pos_estabelecido
		where	nr_seq_conta = nr_seq_conta_w
		and	nr_seq_conta_proc = nr_seq_conta_proc_w;
		
	elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
		select	sum(coalesce(vl_beneficiario,0))
		into STRICT	vl_beneficiario_w
		from	pls_conta_pos_estabelecido
		where	nr_seq_conta = nr_seq_conta_w
		and	nr_seq_conta_mat = nr_seq_conta_mat_w;
	end if;
	
	if	((coalesce(vl_procedimento_w,0) + coalesce(vl_custo_operacional_w,0) + coalesce(vl_filme_w,0) +
		coalesce(vl_adic_procedimento_w,0) + coalesce(vl_adic_custo_operacional_w,0) + coalesce(vl_adic_filme_w,0)) = 0) then
		vl_procedimento_w := vl_beneficiario_w;
	end if;
	
	-- Os valores referentes a Diaria, Taxa, Material e Medicamento devem ser demonstrados no campo VL_SERV_COB com os campos VL_CO_COB e VL_FILME_COB zerados.
	if (coalesce(vl_procedimento_w,0) = 0) then
		vl_procedimento_w := coalesce(vl_custo_operacional_w,0) + coalesce(vl_filme_w,0);
		vl_custo_operacional_w := 0;
		vl_filme_w := 0;
	end if;	
	
	-- Somente podera existir valor no campo VL_ADIC_CO se o VL_CO_COB for maior que zero
	if (coalesce(vl_custo_operacional_w,0) <= 0) then
		vl_adic_procedimento_w := coalesce(vl_adic_procedimento_w,0) + coalesce(vl_adic_custo_operacional_w,0);
		vl_adic_custo_operacional_w := 0;
	end if;
	
	if (coalesce(vl_filme_w,0) <= 0) then
		vl_adic_procedimento_w := coalesce(vl_adic_procedimento_w,0) + coalesce(vl_adic_filme_w,0);
		vl_adic_filme_w := 0;
	end if;
	
	select	sum(qt_regra)
	into STRICT	qt_regra_w
	from (SELECT	count(1) qt_regra
		from	pls_pacote_agrup_fat	b,
			pls_pac_agrup_fat_proc	a
		where	b.nr_sequencia	= a.nr_seq_pacote_agrup
		and	coalesce(b.ie_tipo_intercambio,'A') = ie_tipo_intercambio_w
		
union

		SELECT	count(1) qt_regra
		from	pls_pacote_agrup_fat	b,
			pls_pac_agrup_fat_mat	a
		where	b.nr_sequencia	= a.nr_seq_pacote_agrup
		and	coalesce(b.ie_tipo_intercambio,'A') = ie_tipo_intercambio_w) alias5;
		
	nr_seq_nota_servico_w := null;
	
	if (ie_pacote_w = 'S') or (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then
		ie_tipo_tabela_w := 4;
	end if;
		
	if (coalesce(nr_seq_pacote_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_nota_servico_w
		from	ptu_nota_servico
		where	cd_servico		= cd_servico_w
		and	nr_nota			= nr_nota_w
		and	nr_seq_nota_cobr	= nr_seq_cobranca_p;
		
		if (nr_seq_nota_servico_w IS NOT NULL AND nr_seq_nota_servico_w::text <> '') then
			if (ie_tipo_guia_w	<> '3') and (ie_tipo_atendimento_w <> '4') then
				update	ptu_nota_servico
				set	vl_procedimento		= vl_procedimento + vl_procedimento_w,
					vl_custo_operacional	= vl_custo_operacional + vl_custo_operacional_w,
					vl_filme		= vl_filme + vl_filme_w,
					vl_adic_procedimento	= vl_adic_procedimento + vl_adic_procedimento_w,
					vl_adic_co		= vl_adic_co + vl_adic_custo_operacional_w,
					vl_adic_filme		= vl_adic_filme + vl_adic_filme_w,
					vl_pago_prest		= vl_pago_prest + vl_prestador_w
				where	nr_sequencia		= nr_seq_nota_servico_w;
			end if;
		end if;
	end if;
	
	if	((coalesce(nr_seq_pacote_w::text, '') = '') or (qt_regra_w = 0)) and (coalesce(nr_seq_nota_servico_w::text, '') = '') then
		
		ds_servico_w := elimina_acentuacao(trim(both ds_servico_w));

		-- 793739 - O objetivo deste IF e priorizar o campo 'ds_item_ptu' da tabela 'pls_conta_pos_estabelecido' para definir o valor do 'ds_servico'
		if (coalesce(ds_item_ptu_w::text, '') = '') then
			ds_servico_w	:= substr(ds_servico_w,1,80);
		else
			ds_servico_w	:= substr(ds_item_ptu_w,1,80);
		end if;

		insert into ptu_nota_servico(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_nota_cobr,
			nr_lote, 
			cd_unimed_prestador, 
			cd_prestador,
			nm_prestador, 
			ie_tipo_participacao, 
			dt_procedimento,
			cd_procedimento, 
			ie_origem_proced, 
			qt_procedimento,
			ie_tipo_prestador, 
			ie_rede_propria, 
			ie_tipo_pessoa_prestador,
			nr_cgc_cpf, 
			tx_procedimento, 
			ie_pacote,
			cd_ato, 
			ie_tipo_tabela, 
			nr_cgc_cpf_req,
			nm_prestador_requisitante, 
			sg_cons_prof_req, 
			nr_cons_prof_req,
			sg_uf_cons_req, 
			ie_reembolso, 
			nr_autorizacao,
			nr_nota, 
			vl_procedimento, 
			vl_custo_operacional,
			vl_filme, 
			cd_porte_anestesico, 
			cd_unimed_autorizadora,
			cd_unimed_pre_req, 
			cd_prestador_req, 
			ie_via_acesso,
			vl_adic_procedimento, 
			vl_adic_co, 
			vl_adic_filme, 
			cd_especialidade, 
			nr_seq_nota, 
			ds_hora_procedimento,
			cd_cnes_prest, 
			nm_profissional_prestador, 
			sg_cons_prof_prest,
			nr_cons_prof_prest, 
			sg_uf_cons_prest, 
			vl_pago_prest,
			nr_seq_material,
			cd_servico,
			ds_servico,
			nr_seq_conta_proc,
			nr_seq_conta_mat,
			nr_seq_pacote_agrup,
			hr_final,
			nr_cbo_exec,
			id_acres_urg_emer,
			tec_utilizada,
			dt_autoriz,
			dt_solicitacao,
			nr_reg_anvisa,
			cd_ref_material_fab,
			cd_munic,
			dt_pgto_prestador,
			unidade_medida)
		values (nextval('ptu_nota_servico_seq'), 
			clock_timestamp(), 
			nm_usuario_p,
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_cobranca_p,
			nr_lote_w, 
			cd_unim_prestador_w, 
			somente_numero(cd_prestador_w),
			nm_prestador_w, 
			coalesce(ie_tipo_participacao_w, '0'), 
			dt_procedimento_w,
			cd_procedimento_w, 
			ie_origem_proced_w, 
			qt_procedimento_w,
			ie_tipo_prestador_w, 
			ie_rede_propria_w, 
			ie_tipo_pessoa_pres_w,
			nr_cnpj_cpf_w, 
			CASE WHEN tx_procedimento_w=0 THEN  100  ELSE tx_procedimento_w END , 
			'N',
			coalesce(cd_ato_w, '1'), 
			ie_tipo_tabela_w, 
			nr_cgc_cpf_req_w,
			nm_prestador_req_w,
			sg_cons_prof_req_w, 
			nr_cons_prof_req_w,
			sg_uf_cons_req_w, 
			ie_reembolso_w, 
			cd_senha_w,
			nr_nota_w, 
			vl_procedimento_w, 
			vl_custo_operacional_w,
			vl_filme_w, 
			cd_porte_anest_w, 
			cd_cooperativa_w,
			cd_unim_prestador_w, 
			1, 
			ie_via_acesso_w,
			vl_adic_procedimento_w, 
			vl_adic_custo_operacional_w, 
			vl_adic_filme_w,
			cd_especialidade_w, 
			nr_seq_conta_w, 
			to_char(dt_procedimento_w, 'HH24:MI:SS'),
			cd_cnes_w, 
			nm_profissional_prestador_w, 
			sg_cons_prof_prest_w,
			nr_cons_prof_prest_w, 
			sg_uf_cons_prest_w, 
			vl_prestador_w,
			nr_seq_material_w,
			cd_servico_w,
			ds_servico_w,
			nr_seq_conta_proc_w,
			nr_seq_conta_mat_w,
			nr_seq_regra_agrup_w,
			to_char(hr_final_w, 'HH24:MI:SS'),
			cd_cbo_w,
			ie_acres_urg_emer_w,
			ie_tec_utilizada_w,
			dt_autoriz_w,
			dt_solicitacao_w,
			lpad(substr( coalesce(nr_registro_anvisa_pos_w, nr_registro_anvisa_w), 1, 15), 15, '0'),
			coalesce(cd_ref_fabricante_pos_w, cd_ref_material_fab_w),
			cd_municipio_w,
			dt_competencia_pgto_w,
			substr(nr_uni_medida_ptu_w, 1, 3));
	end if;
	
	-- PACOTE e CADASTRO DO USUaRIO

	-- Pegar os itens que fazem parte do pacote
	if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') and (qt_regra_w > 0) then
		open C00;
		loop
		fetch C00 into	
			ie_ordem_w,
			nr_seq_item_pac_w,
			cd_procedimento_pac_w,
			ie_origem_proced_pac_w,
			nr_seq_material_pac_w,
			ie_tipo_item_pac_w;
		EXIT WHEN NOT FOUND; /* apply on C00 */
			begin
			nr_seq_regra_agrup_w := pls_obter_regra_pacote_fatura(	nr_seq_conta_w, cd_procedimento_pac_w, ie_origem_proced_pac_w, nr_seq_material_pac_w, nr_seq_regra_agrup_w);
					
			begin
			select	a.cd_procedimento,
				a.ie_origem_proced,
				substr(obter_desc_procedimento(a.cd_procedimento,a.ie_origem_proced),1,80),
				a.cd_procedimento,
				a.cd_procedimento
			into STRICT	cd_proc_pacote_w,
				ie_origem_proced_w,
				ds_servico_w,
				cd_procedimento_w,
				cd_servico_w
			from	pls_pacote_agrup_fat	a
			where	a.nr_sequencia	= nr_seq_regra_agrup_w;
			exception
			when others then
				null;
			end;
			
			if (ie_tipo_item_pac_w = 'P') then
				select	coalesce(vl_negociado,0)
				into STRICT	vl_procedimento_w
				from	pls_pacote_procedimento
				where	nr_sequencia = nr_seq_item_pac_w;
			
			elsif (ie_tipo_item_pac_w = 'M') then
				select	coalesce(vl_negociado,0)
				into STRICT	vl_procedimento_w
				from	pls_pacote_material
				where	nr_sequencia = nr_seq_item_pac_w;
				
				select	max(ie_tipo_despesa)
				into STRICT	ie_tipo_despesa_pac_w
				from	pls_material
				where	nr_sequencia = nr_seq_material_pac_w;
				
				if (ie_tipo_despesa_pac_w = '1') then
					ie_tipo_tabela_w	:= 2;
					
				elsif (ie_tipo_despesa_pac_w = '2') then
					ie_tipo_tabela_w	:= 3;
					
				elsif (ie_tipo_despesa_pac_w = '3') then
					ie_tipo_tabela_w	:= 2;
					
				elsif (ie_tipo_despesa_pac_w = '7') then
					ie_tipo_tabela_w	:= 2;
				end if;
			end if;

			vl_custo_operacional_w := 0;
			vl_filme_w := 0;
			vl_adic_procedimento_w := 0;
			vl_adic_custo_operacional_w := 0;
			vl_adic_filme_w := 0;
			vl_prestador_w := 0;			
			qt_procedimento_w := 1;
			
			if (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_nota_servico_w
				from	ptu_nota_servico	a
				where	a.nr_seq_nota_cobr	= nr_seq_cobranca_p
				and	a.nr_seq_pacote_agrup	= nr_seq_regra_agrup_w;
			else
				nr_seq_nota_servico_w	:= null;
			end if;
			
			if (coalesce(nr_seq_nota_servico_w::text, '') = '') then
				ds_servico_w := elimina_acentuacao(trim(both ds_servico_w));

				-- 793739 - O objetivo deste IF e priorizar o campo 'ds_item_ptu' da tabela 'pls_conta_pos_estabelecido' para definir o valor do 'ds_servico'
				if (coalesce(ds_item_ptu_w::text, '') = '') then
					ds_servico_w	:= substr(ds_servico_w,1,80);
				else
					ds_servico_w	:= substr(ds_item_ptu_w,1,80);
				end if;

				insert into ptu_nota_servico(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					nr_seq_nota_cobr,
					nr_lote, 
					cd_unimed_prestador, 
					cd_prestador,
					nm_prestador, 
					ie_tipo_participacao, 
					dt_procedimento,
					cd_procedimento, 
					ie_origem_proced, 
					qt_procedimento,
					ie_tipo_prestador, 
					ie_rede_propria, 
					ie_tipo_pessoa_prestador,
					nr_cgc_cpf, 
					tx_procedimento, 
					ie_pacote,
					cd_ato, 
					ie_tipo_tabela, 
					nr_cgc_cpf_req,
					nm_prestador_requisitante, 
					sg_cons_prof_req, 
					nr_cons_prof_req,
					sg_uf_cons_req, 
					ie_reembolso, 
					nr_autorizacao,
					nr_nota, 
					vl_procedimento, 
					vl_custo_operacional,
					vl_filme, 
					cd_porte_anestesico, 
					cd_unimed_autorizadora,
					cd_unimed_pre_req, 
					cd_prestador_req, 
					ie_via_acesso,
					vl_adic_procedimento, 
					vl_adic_co, 
					vl_adic_filme, 
					cd_especialidade, 
					nr_seq_nota, 
					ds_hora_procedimento,
					cd_cnes_prest, 
					nm_profissional_prestador, 
					sg_cons_prof_prest,
					nr_cons_prof_prest, 
					sg_uf_cons_prest, 
					vl_pago_prest,
					nr_seq_material,
					cd_servico,
					ds_servico,
					nr_seq_conta_proc,
					nr_seq_conta_mat,
					nr_seq_pacote_agrup,
					hr_final,
					nr_cbo_exec,
					id_acres_urg_emer,
					tec_utilizada,
					dt_autoriz,
					dt_solicitacao,
					nr_reg_anvisa,
					cd_ref_material_fab,
					cd_munic,
					dt_pgto_prestador,
					unidade_medida)
				values (nextval('ptu_nota_servico_seq'), 
					clock_timestamp(), 
					nm_usuario_p,
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_cobranca_p,
					nr_lote_w, 
					cd_unim_prestador_w, 
					somente_numero(cd_prestador_w),
					nm_prestador_w, 
					coalesce(ie_tipo_participacao_w, '0'), 
					dt_procedimento_w,
					cd_procedimento_w, 
					ie_origem_proced_w, 
					qt_procedimento_w,
					ie_tipo_prestador_w, 
					ie_rede_propria_w, 
					ie_tipo_pessoa_pres_w,
					nr_cnpj_cpf_w, 
					CASE WHEN tx_procedimento_w=0 THEN  100  ELSE tx_procedimento_w END , 
					'N',
					coalesce(cd_ato_w, '1'), 
					ie_tipo_tabela_w, 
					nr_cgc_cpf_req_w,
					nm_prestador_req_w,
					sg_cons_prof_req_w, 
					nr_cons_prof_req_w,
					sg_uf_cons_req_w, 
					ie_reembolso_w, 
					cd_senha_w,
					nr_nota_w, 
					vl_procedimento_w, 
					vl_custo_operacional_w,
					vl_filme_w, 
					cd_porte_anest_w, 
					cd_cooperativa_w,
					cd_unim_prestador_w, 
					1, 
					ie_via_acesso_w,
					vl_adic_procedimento_w, 
					vl_adic_custo_operacional_w, 
					vl_adic_filme_w,
					cd_especialidade_w, 
					nr_seq_conta_w, 
					to_char(dt_procedimento_w, 'HH24:MI:SS'),
					cd_cnes_w, 
					nm_profissional_prestador_w, 
					sg_cons_prof_prest_w,
					nr_cons_prof_prest_w, 
					sg_uf_cons_prest_w, 
					vl_prestador_w,
					nr_seq_material_w,
					cd_servico_w,
					ds_servico_w,
					nr_seq_conta_proc_w,
					nr_seq_conta_mat_w,
					nr_seq_regra_agrup_w,
					to_char(hr_final_w, 'HH24:MI:SS'),
					cd_cbo_w,
					ie_acres_urg_emer_w,
					ie_tec_utilizada_w,
					dt_autoriz_w,
					dt_solicitacao_w,
					lpad(substr(coalesce(nr_registro_anvisa_pos_w, nr_registro_anvisa_w), 1, 15), 15, '0'),
					coalesce(cd_ref_fabricante_pos_w, cd_ref_material_fab_w),
					cd_municipio_w,
					dt_competencia_pgto_w,
					substr(nr_uni_medida_ptu_w, 1, 3));
			else
				update	ptu_nota_servico
				set	vl_procedimento		= vl_procedimento + vl_procedimento_w,
					vl_custo_operacional	= vl_custo_operacional + vl_custo_operacional_w,
					vl_filme		= vl_filme + vl_filme_w,
					vl_adic_procedimento	= vl_adic_procedimento + vl_adic_procedimento_w,
					vl_adic_co		= vl_adic_co + vl_adic_custo_operacional_w,
					vl_adic_filme		= vl_adic_filme + vl_adic_filme_w,
					vl_pago_prest		= vl_pago_prest + vl_prestador_w
				where	nr_sequencia		= nr_seq_nota_servico_w;
			end if;

			cd_procedimento_pac_w := null;
			ie_origem_proced_pac_w := null;
			nr_seq_material_pac_w := null;
			nr_seq_regra_agrup_w := null;
			end;
		end loop;
		close C00;
	end if;

	open C02;
	loop
	fetch C02 into	
		nr_seq_nota_servico_w,
		vl_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		vl_adic_procedimento_w := vl_procedimento_w * (tx_administracao_w/100);
		
		update	ptu_nota_servico
		set	vl_adic_procedimento	= vl_adic_procedimento_w
		where	nr_sequencia		= nr_seq_nota_servico_w;
		end;
	end loop;
	close C02;
	
	nr_seq_pacote_w := null;
	
	-- Erro na validacao do Intercambio Estadual. A data do servico, quando o tipo da nota e igual a consultas ou servicos diversos/SADT, deve ser igual a data do atendimento.
	if (ie_tipo_guia_w <> 5) then
		select	min(dt_procedimento)
		into STRICT	dt_servico_ptu_w
		from	ptu_nota_servico
		where	nr_seq_nota_cobr = nr_seq_cobranca_p;
		
		update	ptu_nota_servico
		set	dt_procedimento = dt_servico_ptu_w
		where	nr_seq_nota_cobr = nr_seq_cobranca_p;
		
		update	ptu_nota_cobranca
		set	dt_atendimento = dt_servico_ptu_w
		where	nr_sequencia = nr_seq_cobranca_p;
	end if;
	
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_nota_servico ( nr_seq_cobranca_p ptu_nota_cobranca.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

