-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_dia_status ( cd_estabelecimento_p bigint, cd_agenda_p bigint, dt_Inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, ie_Status_p INOUT text) AS $body$
DECLARE



ie_Status_w				varchar(4000);
ie_Status_dia_w			varchar(10);
dt_atual_w				timestamp;
cd_tipo_agenda_w			bigint;
ie_feriado_w			varchar(10);
ie_dia_feriado_w			varchar(10);
ie_dia_semana_w			varchar(10);
qt_horario_w			bigint;
qt_horario_livre_w		bigint;
qt_regra_horario_w		bigint;
qt_horario_bloqueado_w		bigint;
ds_horarios_w			varchar(255);
ie_bloqueio_w			varchar(10);
ie_gravar_w			varchar(10) := 'N';
ie_sobra_horario_w		varchar(10) := 'S';
ds_retorno_w			varchar(4000) := '';
qt_bloqueio_w			bigint;
qt_horario_ocupado_w		bigint;
ie_gerar_hor_livre_w		varchar(1);
ie_agenda_valida_w		varchar(1) := 'N';
ie_existe_hor_gerado_w		bigint;
qt_dias_fut_w			bigint;
ie_cons_leg_bloq_fim_sem_w	varchar(1);
qt_dia_inicial_w				bigint;
qt_dia_final_w					bigint;
qt_dia_filtro_ini_w				bigint;
qt_dia_filtro_fim_w				bigint;
cd_turno_w						varchar(1) := '2';


BEGIN
qt_dia_filtro_ini_w	:= 7;
qt_dia_filtro_fim_w	:= 1;
qt_dia_inicial_w	:= 2;
qt_dia_final_w		:= 6;

if	((dt_final_p - dt_inicial_p) > 255) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(200597);
end if;

ie_gerar_hor_livre_w := Obter_Param_Usuario(820, 118, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_hor_livre_w);
ie_cons_leg_bloq_fim_sem_w := Obter_Param_Usuario(820, 406, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_cons_leg_bloq_fim_sem_w);

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_agenda_valida_w
from	agenda
where	cd_agenda = cd_agenda_p;

if (ie_agenda_valida_w = 'S') then

	select	max(ie_feriado),
			max(cd_tipo_agenda)
	into STRICT	ie_feriado_w,
			cd_tipo_agenda_w
	from 	agenda
	where 	cd_agenda 	= cd_agenda_p;
	
	if	((cd_tipo_agenda_w = 3) or (cd_tipo_agenda_w = 4)) then
		select	max(nr_dias_fut_agendamento)
		into STRICT	qt_dias_fut_w
		from	agenda
		where	cd_agenda = cd_agenda_p;
		if (coalesce(qt_dias_fut_w::text, '') = '') then
			qt_dias_fut_w := obter_param_usuario(821, 5, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_dias_fut_w);
		end if;
	elsif (cd_tipo_agenda_w = 2) then
		qt_dias_fut_w := obter_param_usuario(820, 4, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_dias_fut_w);
	end if;
	
	ie_status_w					:= '';
	dt_atual_w					:= trunc(dt_inicial_p, 'dd');
	
	while(dt_atual_w	<= trunc(dt_final_p,'dd')) loop
		begin
		ie_status_dia_w			:= 'X';
		
		select pkg_date_utils.get_weekday(dt_atual_w)
		into STRICT 	ie_dia_semana_w
		;
		
		select coalesce(max('S'),'N')
		into STRICT	ie_dia_feriado_w
		from 	feriado
		where 	cd_estabelecimento 	= cd_estabelecimento_p
		and 	dt_feriado		= dt_atual_w;
		--and 	ie_feriado_w		= 'N';
		
		qt_horario_w			:= 0;
		qt_horario_livre_w		:= 0;
		
		select	sum(CASE WHEN ie_status_agenda='L' THEN 0  ELSE 1 END ),
			sum(CASE WHEN ie_status_agenda='L' THEN 1  ELSE CASE WHEN ie_status_agenda='LF' THEN 1  ELSE 0 END  END ),
			sum(CASE WHEN ie_status_agenda='B' THEN 1  ELSE 0 END ),
			sum(CASE WHEN coalesce(cd_paciente::text, '') = '' THEN 0  ELSE 1 END )
		into STRICT	qt_horario_w,
			qt_horario_livre_w,
			qt_horario_bloqueado_w,
			qt_horario_ocupado_w
		from 	ageint_consulta_hor_usu
		where 	cd_agenda		= cd_agenda_p
		and	nm_usuario		= nm_usuario_p
		and	dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
		and	ie_status_agenda	<> 'C';
		
		select	count(*)
		into STRICT	ie_existe_hor_gerado_w
		from 	ageint_consulta_hor_usu 
		where 	cd_agenda 			= cd_agenda_p
		and	nm_usuario				= nm_usuario_p
		and	dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
		and	ie_status_agenda in ('L','LF');
			
		if (ie_existe_hor_gerado_w <> 0) then
			select	sum(CASE WHEN ie_status_agenda='L' THEN 1  ELSE CASE WHEN ie_status_agenda='LF' THEN 1  ELSE 0 END  END )
			into STRICT	qt_horario_livre_w
			from	ageint_consulta_hor_usu
			where	cd_agenda		= cd_agenda_p
			and	nm_usuario		= nm_usuario_p
			and	dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
			and	ie_status_agenda	<> 'C'
			and	((ie_classif_agenda not in (SELECT cd_classificacao
							from   agenda_classif
							where  ie_nao_considera_mensal = 'S'))
			or (coalesce(ie_classif_agenda::text, '') = ''	));			
		end if;		
		
		if (coalesce(qt_horario_livre_w,0) = 0) and (coalesce(ie_existe_hor_gerado_w,0) = 0)then
			/*AGENDA DE EXAMES*/

			if (cd_tipo_agenda_w = 2) then
				
				SELECT	/*+ INDEX(A AGEPACI_UK) */						SUM(CASE WHEN ie_status_agenda='L' THEN 0  ELSE 1 END ),
						SUM(CASE WHEN ie_status_agenda='L' THEN 1  ELSE CASE WHEN ie_status_agenda='LF' THEN 1  ELSE 0 END  END ),
						SUM(CASE WHEN ie_status_agenda='B' THEN 1  ELSE 0 END ),
						SUM(CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN 0  ELSE 1 END )
				INTO STRICT	qt_horario_w,
						qt_horario_livre_w,
						qt_horario_bloqueado_w,
						qt_horario_ocupado_w
				FROM	agenda_Paciente
				WHERE	cd_agenda				= cd_agenda_p
				AND		dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
				AND		ie_status_agenda		<> 'C';

				IF	((dt_atual_w >= clock_timestamp()) AND (coalesce(qt_horario_livre_w,0) = 0)) OR
					((ie_gerar_hor_livre_w	= 'S') AND (dt_atual_w <= clock_timestamp()) AND (coalesce(qt_horario_livre_w,0) > 0)) THEN
					BEGIN
					ds_horarios_w
								 := Obter_Horarios_Livres( cd_estabelecimento_p, cd_agenda_p, dt_atual_w, dt_atual_w, 0, NULL, NULL, NULL, 'Tasy', 'N', ds_horarios_w
								);
				
					qt_horario_livre_w	:= LENGTH(ds_horarios_w);
						
					END;
				END IF;			
			
				select	count(*)
				into STRICT	ie_existe_hor_gerado_w
				from 	agenda_paciente 
				where 	cd_agenda = cd_agenda_p
				and		dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
				and		ie_status_agenda in ('L','LF');
				
				if (ie_existe_hor_gerado_w <> 0) then
					SELECT	/*+ INDEX(A AGEPACI_UK) */							SUM(CASE WHEN ie_status_agenda='L' THEN 1  ELSE CASE WHEN ie_status_agenda='LF' THEN 1  ELSE 0 END  END )
					INTO STRICT	qt_horario_livre_w
					FROM	agenda_Paciente
					WHERE	cd_agenda		= cd_agenda_p
					AND		dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
					AND		ie_status_agenda	<> 'C'
					AND		((nr_seq_classif_agenda NOT IN (	SELECT	nr_sequencia
																FROM   	agenda_paciente_classif
																WHERE  	ie_agenda_mensal = 'S'))
					OR (coalesce(nr_seq_classif_agenda::text, '') = ''	));				
				end if;
			/*AGENDA DE CONSULTAS / AGENDA DE SERVICOS*/

			elsif (cd_tipo_agenda_w > 2) then									
				
				SELECT	/*+ index (a AGECONS_UK) */						SUM(CASE WHEN ie_status_agenda='L' THEN 0  ELSE 1 END ),
						SUM(CASE WHEN ie_status_agenda='L' THEN 1  ELSE CASE WHEN ie_status_agenda='LF' THEN 1  ELSE 0 END  END ),
						SUM(CASE WHEN ie_status_agenda='B' THEN 1  ELSE 0 END ),
						SUM(CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN 0  ELSE 1 END )
				INTO STRICT	qt_horario_w,
						qt_horario_livre_w,
						qt_horario_bloqueado_w,
						qt_horario_ocupado_w
				FROM 	agenda_consulta
				WHERE 	cd_agenda		= cd_agenda_p
				and	((cd_turno		= cd_turno_w) or (cd_turno_w = '2'))
				AND	dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
				AND	ie_status_agenda	<> 'C';
				
				
				
				IF (coalesce(qt_horario_livre_w,0) = 0) and (cd_tipo_agenda_w = 5) THEN
					BEGIN
					
					CALL Gerar_Horario_Agenda_Servico(
						cd_estabelecimento_p,
						cd_agenda_p,
						dt_atual_w,
						nm_usuario_p);
						
					SELECT	/*+ index (a AGECONS_UK) */							SUM(CASE WHEN ie_status_agenda='L' THEN 0  ELSE 1 END ),
							SUM(CASE WHEN ie_status_agenda='L' THEN 1  ELSE CASE WHEN ie_status_agenda='LF' THEN 1  ELSE 0 END  END ),
							SUM(CASE WHEN ie_status_agenda='B' THEN 1  ELSE 0 END ),
							SUM(CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN 0  ELSE 1 END )
					INTO STRICT	qt_horario_w,
							qt_horario_livre_w,
							qt_horario_bloqueado_w,
							qt_horario_ocupado_w
					FROM 	agenda_consulta
					WHERE 	cd_agenda		= cd_agenda_p				
					AND	dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
					AND	ie_status_agenda	<> 'C';
						
					END;
				END IF;

				
				
				IF (dt_atual_w >= TRUNC(clock_timestamp(), 'dd')) and (coalesce(qt_horario_livre_w,0) = 0) and (cd_tipo_agenda_w <> 5) THEN
					BEGIN
					
					ds_retorno_w := Horario_Livre_Consulta(
						cd_estabelecimento_p, cd_agenda_p, 'N', dt_atual_w, wheb_mensagem_pck.get_texto(791220), ie_gravar_w, ie_sobra_horario_w, 'N', 0, ds_retorno_w);
					qt_horario_livre_w	:= coalesce(LENGTH(ds_retorno_w),0);
					
					END;
				END IF;
				
				select	count(*)
				into STRICT	ie_existe_hor_gerado_w
				from 	agenda_consulta where cd_agenda = cd_agenda_p
				and		((cd_turno		= cd_turno_w) or (cd_turno_w = '2'))
				and		dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
				and		ie_status_agenda in ('L','LF');
				
				
				
				if (ie_existe_hor_gerado_w <> 0) then
					SELECT	/*+ index (a AGECONS_UK) */							SUM(CASE WHEN ie_status_agenda='L' THEN 1  ELSE CASE WHEN ie_status_agenda='LF' THEN 1  ELSE 0 END  END )
					INTO STRICT	qt_horario_livre_w
					FROM	agenda_consulta
					WHERE	cd_agenda		= cd_agenda_p
					and		((cd_turno		= cd_turno_w) or (cd_turno_w = '2'))
					AND		dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
					AND		ie_status_agenda	<> 'C'
					AND		((ie_classif_agenda NOT IN (	SELECT cd_classificacao
															FROM   agenda_classif
															WHERE  ie_nao_considera_mensal = 'S'))
					OR (coalesce(ie_classif_agenda::text, '') = ''	));			
				end if;		
			
				
			
			end if;
		end if;
			
	/* Status por Dia
		L - Existem Livres
		F - Feriado
		B - Bloqueado
		N - Nao tem Agenda Dia
		X - Todos horarios Livres
		T - Todos Horarios Lotados
		D - Sabados e Domingos
		R - Nao liberado
	*/
		
	
	
		IF (ie_dia_feriado_w = 'S') THEN
			ie_status_dia_w	:= 'F';
		elsif (coalesce(qt_horario_w,0) > 0) AND (coalesce(qt_horario_livre_w,0) = 0) AND (coalesce(qt_horario_ocupado_w,0) = 0) AND (coalesce(qt_horario_bloqueado_w, 0) > 0) and (coalesce(ie_dia_feriado_w, 'N') <> 'S') THEN
			ie_status_dia_w	:= 'B';		
		elsif (qt_dias_fut_w > 0) and (dt_atual_w > trunc(clock_timestamp() + qt_dias_fut_w)) then
			ie_status_dia_w	:= 'R';		
		ELSIF (coalesce(qt_horario_w,0) > 0) and (coalesce(ie_dia_feriado_w, 'N') <> 'S')THEN			
				IF (coalesce(qt_horario_livre_w,0) > 0) THEN
					ie_status_dia_w	:= 'L';
				ELSE
					ie_status_dia_w	:= 'T';
				END IF;			
		ELSIF (coalesce(qt_horario_livre_w,0) > 0) and (coalesce(ie_dia_feriado_w, 'N') <> 'S')THEN
			ie_status_dia_w	:= 'X';		
		ELSIF (ie_dia_semana_w = 1) OR (ie_dia_semana_w = 7) THEN
			ie_status_dia_w	:= 'D';
		else
			BEGIN
			/*BEGIN
			SELECT COUNT(*)
			INTO	qt_bloqueio_w
			FROM	agenda_bloqueio
			WHERE	cd_agenda	= cd_agenda_p
			  AND TRUNC(dt_inicial,'dd')	<= dt_atual_w
			  AND TRUNC(dt_final,'dd')	>= dt_atual_w;
			EXCEPTION
				WHEN OTHERS THEN
					ie_bloqueio_w := 'N';
			END;*/
			
			if (cd_tipo_agenda_w in (1,2))then
				SELECT 	COUNT(*)
				INTO STRICT	qt_regra_horario_w
				FROM	agenda_horario
				WHERE 	cd_agenda     	= cd_agenda_p
				AND		((dt_dia_semana	= ie_dia_semana_w) OR
						(dt_dia_semana	= 9 AND ie_dia_semana_w BETWEEN qt_dia_inicial_w AND qt_dia_final_w))
				AND 	coalesce(dt_inicio_vigencia,dt_atual_w) >= dt_atual_w
				AND 	coalesce(dt_final_vigencia,dt_atual_w) <= dt_atual_w;							
			elsif (cd_tipo_agenda_w in (3,4,5))then
				SELECT 	COUNT(*)
				INTO STRICT	qt_regra_horario_w
				FROM	agenda_Turno
				WHERE 	cd_agenda     	= cd_agenda_p
				AND		((ie_dia_semana	= ie_dia_semana_w) OR
						(ie_dia_semana	= 9 AND ie_dia_semana_w BETWEEN qt_dia_inicial_w AND qt_dia_final_w))
				AND 	coalesce(dt_final_vigencia,dt_atual_w) >= dt_atual_w
				AND 	coalesce(dt_inicio_vigencia,dt_atual_w) <= dt_atual_w;							
			end if;								
			
			
			/*select count(*)
			into	qt_regra_horario_w
			from	agenda_turno
			where cd_agenda     	= cd_agenda_p
			and	((ie_dia_semana	= ie_dia_semana_w) or
		  	      ((ie_dia_semana	= 9) and (ie_dia_semana_w between 2 and 6)))
			and dt_final_vigencia >= dt_final_p
			and nvl(dt_inicio_vigencia,dt_final_p) <= dt_atual_w;*/
			
			if (qt_regra_horario_w > 0)then
				BEGIN			
				SELECT 	COUNT(*)
				INTO STRICT	qt_bloqueio_w
				FROM	agenda_bloqueio
				WHERE	cd_agenda	= cd_agenda_p
				AND 	TRUNC(dt_inicial,'dd')	<= trunc(dt_atual_w,'dd')
				AND 	TRUNC(dt_final,'dd')	>= trunc(dt_atual_w,'dd')
				AND		((coalesce(ie_dia_semana,ie_dia_semana_w) = ie_dia_semana_w) OR
						(ie_dia_semana	= 9 AND ie_dia_semana_w BETWEEN qt_dia_inicial_w AND qt_dia_final_w) or
						(((ie_cons_leg_bloq_fim_sem_w = 'S') and (cd_tipo_agenda_w = 2) and (ie_dia_semana_w in (qt_dia_filtro_ini_w, qt_dia_filtro_fim_w)))));
				EXCEPTION
					WHEN OTHERS THEN
						ie_bloqueio_w := 'N';
				END;

				IF (qt_bloqueio_w > 0) THEN
					ie_status_dia_w	:= 'B';
				END IF;										
			end if;				

			
			
			if (qt_regra_horario_w = 0) or
				((coalesce(qt_horario_livre_w,0) = 0) and (coalesce(qt_horario_w,0) = 0)) then
				ie_status_dia_w	:= 'N';
			end if;
			
			/*if	(qt_bloqueio_w > 0) then
				ie_status_dia_w	:= 'B';
			end if;*/
			END;
		END IF;
		ie_status_w	:= ie_status_w || ie_status_dia_w;		
		dt_atual_w	:= dt_atual_w + 1;
		
		END;
	END LOOP;
ELSE
	ie_status_w 	:= '';
	dt_atual_w 	:= TRUNC(dt_inicial_p,'dd');

	WHILE(dt_atual_w <= TRUNC(dt_final_p,'dd')) LOOP
		BEGIN
		ie_status_w	:= ie_status_w || 'N';
		dt_atual_w	:= dt_atual_w + 1;
		END;
	END LOOP;

END IF;
ie_status_p := ie_status_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_dia_status ( cd_estabelecimento_p bigint, cd_agenda_p bigint, dt_Inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, ie_Status_p INOUT text) FROM PUBLIC;

