-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_vencido (cd_estabelecimento_p bigint, dt_referencia_p timestamp, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, dt_final_p timestamp, ie_somente_ativa_p text) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENCAO ----------------------------------------------------------------*/


/* Cuidado ao realizar alteracoes no fluxo de caixa. Toda e qualquer alteracao realizada em qualquer uma das       */


/* procedures do fluxo de caixa deve ser cuidadosamente verificada e realizada no fluxo de caixa em lote.           */


/* Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando assim que           */


/* existam diferencas entre os fluxos de caixa.                                                                                                                */


/*--------------- AO ALTERAR O FLUXO DE CAIXA ALTERAR TAMBEM O FLUXO DE CAIXA EM LOTE ---------------*/

cd_conta_financ_cpa_w		bigint;
cd_conta_financ_cre_w		bigint;
ie_integracao_w			varchar(10);
cd_conta_financ_w		bigint;
cd_moeda_atual_w		integer;
cd_moeda_padrao_w		integer;
cd_convenio_w			bigint;
vl_fluxo_w			double precision;
IE_TRATAR_FIM_SEMANA_w		varchar(5);
dt_referencia_w			timestamp;
cd_centro_custo_w		integer;
ie_origem_titulo_w		varchar(10);
nr_seq_classe_tit_rec_w		bigint;
nr_seq_classe_tit_pag_w		bigint;
dt_final_w			timestamp;
ie_conta_financ_ativa_w		varchar(1);
ie_tipo_titulo_cr_w		titulo_receber.ie_tipo_titulo%type;
ie_tipo_titulo_cp_w		titulo_pagar.ie_tipo_titulo%type;
nr_seq_regra_comp_w		parametro_fluxo_caixa.nr_seq_regra_comp%type;
cd_moeda_empresa_w		integer;
qt_loop_w				bigint;
ds_log_w				varchar(4000);	

c010 CURSOR FOR
SELECT	/*+ index (b TITPAGA_I2) */	'CP',
	coalesce(c.nr_seq_conta_financ, cd_conta_financ_cpa_w),
	sum(CASE WHEN coalesce(c.vl_titulo::text, '') = '' THEN  b.VL_SALDO_TITULO  ELSE b.VL_SALDO_TITULO * (dividir_sem_round(c.vl_titulo, (obter_dados_tit_pagar(b.nr_titulo, 'VT'))::numeric )) END ),	
	coalesce(b.cd_moeda,0),
	obter_moeda_padrao(cd_estabelecimento_p, 'P') cd_moeda_padrao,
	0,
	c.cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	b.nr_seq_classe nr_seq_classe_tit_pag,
	b.ie_tipo_titulo ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM titulo_pagar b
LEFT OUTER JOIN titulo_pagar_classif c ON (b.nr_titulo = c.nr_titulo)
WHERE OBTER_VENC_TITULO(b.nr_titulo, null)	between dt_referencia_w and fim_dia(trunc(coalesce(dt_final_w,clock_timestamp()),'dd')) and b.vl_saldo_titulo	> 0 and b.ie_situacao		= 'A' and obter_empresa_estab(b.cd_estabelecimento)	= cd_empresa_p and ((b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p and ie_restringe_estab_p = 'S') or (b.cd_estabelecimento = cd_estabelecimento_p and ie_restringe_estab_p = 'E') or (ie_restringe_estab_p = 'N')) and (OBTER_SE_CONTA_FINANC_ESTAB(coalesce(c.nr_seq_conta_financ, cd_conta_financ_cpa_w), cd_estabelecimento_p,ie_restringe_estab_p) = 'S' or ie_restringe_estab_p = 'N')
group	by coalesce(c.nr_seq_conta_financ, cd_conta_financ_cpa_w),
	coalesce(b.cd_moeda,0),
	obter_moeda_padrao(cd_estabelecimento_p, 'P'),
	c.cd_centro_custo,
	b.nr_seq_classe,
	b.ie_tipo_titulo

union

SELECT	/*+ index (b TITRECE_I9) */	'CR',
	coalesce(c.cd_conta_financ, cd_conta_financ_cre_w),
	sum(CASE WHEN coalesce(C.vl_classificacao::text, '') = '' THEN  B.vl_saldo_titulo  ELSE B.vl_saldo_titulo * (dividir_sem_round(C.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric )) END ),
	coalesce(b.cd_moeda,0),
	obter_moeda_padrao(cd_estabelecimento_p, 'R') cd_moeda_padrao,
	0,
	c.cd_centro_custo,
	b.ie_origem_titulo,
	b.nr_seq_classe nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	b.ie_tipo_titulo ie_tipo_tit_rec
FROM titulo_receber b
LEFT OUTER JOIN titulo_receber_classif c ON (b.nr_titulo = c.nr_titulo)
WHERE OBTER_VENC_TITULO(null, b.nr_titulo)	between dt_referencia_w and fim_dia(trunc(coalesce(dt_final_w,clock_timestamp()),'dd')) and b.vl_saldo_titulo	> 0 and b.ie_situacao		= '1' and obter_empresa_estab(b.cd_estabelecimento)	= cd_empresa_p and ((b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p and ie_restringe_estab_p = 'S') or (b.cd_estabelecimento = cd_estabelecimento_p and ie_restringe_estab_p = 'E') or (ie_restringe_estab_p = 'N')) and (OBTER_SE_CONTA_FINANC_ESTAB(coalesce(c.cd_conta_financ, cd_conta_financ_cre_w), cd_estabelecimento_p,ie_restringe_estab_p) = 'S' or ie_restringe_estab_p = 'N')
group	by coalesce(c.cd_conta_financ, cd_conta_financ_cre_w),
	coalesce(b.cd_moeda,0),
	obter_moeda_padrao(cd_estabelecimento_p, 'R'),
	c.cd_centro_custo,
	b.ie_origem_titulo,
	b.nr_seq_classe,
	b.ie_tipo_titulo
 
union

select	'RC',
	0,
	sum(obter_saldo_receb_convenio(nr_sequencia, clock_timestamp()) * -1) saldo,
	0,
	0,
	cd_convenio cd_convenio,
	0 cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from 	Convenio_receb
where	ie_status	<> 'T'
and	obter_saldo_receb_convenio(nr_sequencia, clock_timestamp()) > 0
and	obter_empresa_estab(cd_estabelecimento)	= cd_empresa_p
and (cd_estabelecimento			= cd_estabelecimento_p or ie_restringe_estab_p = 'N')
and	coalesce(ie_integrar_cb_fluxo,'S')		= 'S'
group 	by cd_convenio;


BEGIN

dt_referencia_w		:= trunc(coalesce(DT_REFERENCIA_P, to_date('01/01/1900', 'dd/mm/yyyy')), 'dd');
dt_final_w		:= fim_dia(trunc(coalesce(dt_final_p,clock_timestamp()),'dd'));

/* Projeto Multimoeda - Busca a moeda padrao da empresa para gravar no fluxo. */

select	obter_moeda_padrao_empresa(cd_estabelecimento_p,'E')
into STRICT	cd_moeda_empresa_w
;

select	max(cd_conta_financ_cpa),
	max(cd_conta_financ_cre),
	max(IE_TRATAR_FIM_SEMANA),
	max(nr_seq_regra_comp)
into STRICT 	cd_conta_financ_cpa_w,
 	cd_conta_financ_cre_w,
	IE_TRATAR_FIM_SEMANA_w,
	nr_seq_regra_comp_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(cd_conta_financ_cpa_w::text, '') = '') or (coalesce(cd_conta_financ_cre_w::text, '') = '') then
	/* Conta financeira do contas a pagar ou receber nao cadastrada! Verifique os parametros do fluxo de caixa! */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(190998);
end if;

delete	from fluxo_Caixa
where	ie_classif_fluxo 	= 'V'
and	ie_origem 		<> 'D'
and	IE_PERIODO		= 'X'
and	cd_empresa		= cd_empresa_p;

/*Inicio 1895850*/

ds_log_w := substr('Parametros Fluxo Caixa Vencido(gerar_fluxo_caixa_vencido):'|| chr(13) ||
				   'dt_referencia_w: '|| dt_referencia_w ||chr(13)||
				   'dt_final_w: '||dt_final_w||chr(13)||
				   'cd_moeda_empresa_w: '||cd_moeda_empresa_w||chr(13)||
				   'cd_conta_financ_cpa_w: '||cd_conta_financ_cpa_w||chr(13)||
				   'cd_conta_financ_cre_w: '||cd_conta_financ_cre_w||chr(13)||
				   'ie_tratar_fim_semana_w: '||IE_TRATAR_FIM_SEMANA_w||chr(13)||
                   'nr_seq_regra_comp_w: '||nr_seq_regra_comp_w||chr(13)||
				   'cd_estabelecimento_p: '||cd_estabelecimento_p||chr(13)||
				   'dt_referencia_p: '||dt_referencia_p||chr(13)||
				   'nm_usuario_p: '||nm_usuario_p||chr(13)||
			       'cd_empresa_p: '||cd_empresa_p||chr(13)||
				   'ie_restringe_estab_p: '||ie_restringe_estab_p||chr(13)||
				   'dt_final_p: '||dt_final_p||chr(13)||
				   'ie_somente_ativa_p: '||ie_somente_ativa_p,1,4000);

/*forcar sair do loop em casa de algum problema*/
			
qt_loop_w := 1;	
while((ds_log_w IS NOT NULL AND ds_log_w::text <> '') and qt_loop_w < 3) loop
	insert into log_tasy( cd_log,
						   ds_log,
						   nm_usuario,
						   dt_atualizacao)
				values ( 96587,
						   substr(ds_log_w,1,2000),
						   nm_usuario_p,
						   clock_timestamp());

	ds_log_w := substr(ds_log_w,2001,length(ds_log_w));
	qt_loop_w := qt_loop_w + 1;						
end loop;			
/*Fim 1895850*/

commit;

OPEN C010;
LOOP
FETCH C010 into
	ie_integracao_w,
	cd_conta_Financ_w,
	vl_fluxo_w,
	cd_moeda_atual_w,
	cd_moeda_padrao_w,
	cd_convenio_w,
	cd_centro_custo_w,
	ie_origem_titulo_w,
	nr_seq_classe_tit_rec_w,
	nr_seq_classe_tit_pag_w,
	ie_tipo_titulo_cp_w,
	ie_tipo_titulo_cr_w;
EXIT WHEN NOT FOUND; /* apply on c010 */

	if (cd_moeda_atual_w <> 0) and (cd_moeda_padrao_w <> cd_moeda_atual_w) and (ie_integracao_w <> 'RC') then /*nao realizar conversao de moeda para receb convenio, pois nao tem moeda no recebimento de convenio.*/
		select	Obter_Valor_Moeda_Nac(	cd_estabelecimento_p,
						vl_fluxo_w,
						cd_moeda_atual_w,
						clock_timestamp())
		into STRICT	vl_fluxo_w
		;
	end if;

	if (cd_conta_financ_w = 0) then
		cd_conta_financ_w := obter_conta_financeira('E', cd_estabelecimento_p, 0, 0, 0, 0, cd_convenio_w, null, cd_centro_custo_w, cd_conta_financ_w, null, null, null, null, null, null, null, null, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, nr_seq_classe_tit_pag_w, null, null, null, null, ie_tipo_titulo_cp_w, ie_tipo_titulo_cr_w, cd_moeda_atual_w);
		if (coalesce(cd_conta_financ_w,0) = 0) then
			cd_conta_financ_w	:= cd_conta_financ_cre_w;
		end if;
	end if;

	select	CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END
	into STRICT	ie_conta_financ_ativa_w
	from	conta_financeira
	where	cd_conta_financ = cd_conta_financ_w;
	
	if (ie_conta_financ_ativa_w = 'A') then
		begin
		insert	into fluxo_caixa(cd_estabelecimento,
			dt_referencia,
			cd_conta_financ, 
			ie_classif_fluxo,
			dt_atualizacao, 
			nm_usuario, 
			vl_fluxo, 
			ie_origem, 
			ie_periodo,
			ie_integracao,
			cd_empresa,
			cd_moeda)
		values (cd_estabelecimento_p,
			trunc(clock_timestamp(), 'dd'), 
			cd_conta_financ_w,
			'V',
			clock_timestamp(), 
			nm_usuario_p, 
			vl_fluxo_w, 
			'I', 
			'X',
			ie_integracao_w,
			cd_empresa_p,
			cd_moeda_empresa_w);

		exception
			when unique_violation then
				update	fluxo_caixa
				set	vl_fluxo		= vl_fluxo + vl_fluxo_w
				where	cd_estabelecimento	= cd_estabelecimento_p
				and	cd_conta_financ		= cd_conta_financ_w
				and	dt_referencia		= trunc(clock_timestamp(), 'dd')
				and	ie_periodo		= 'X'
				and	ie_classif_fluxo	= 'V'
				and	ie_integracao		= ie_integracao_w
				and	cd_empresa		= cd_empresa_p;
			when others then
				/* sqlerrm
				cd_conta_financ = cd_conta_financ_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(190999,	'SQL_ERRM=' || sqlerrm ||
										';CD_CONTA_FINANC_W=' || cd_conta_financ_w);
		end;
	end if;
END LOOP;
CLOSE C010;

/* Acumular Valores nos niveis superiores */

CALL Acumular_fluxo_caixa_Nivel(	cd_estabelecimento_p,
				dt_referencia_w, 
				trunc(clock_timestamp(),'dd'), 
				'X', 
				'V', 
				nm_usuario_p,
				cd_empresa_p);

CALL Calcular_Fluxo_Caixa(	cd_estabelecimento_p,
			0,
			trunc(clock_timestamp(), 'dd'),
			trunc(clock_timestamp(), 'dd'),
			'X',
			'V',
			nm_usuario_p,
			cd_empresa_p,
			ie_restringe_estab_p,
			'N',
			ie_somente_ativa_p,
			nr_seq_regra_comp_w);

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_vencido (cd_estabelecimento_p bigint, dt_referencia_p timestamp, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, dt_final_p timestamp, ie_somente_ativa_p text) FROM PUBLIC;

