-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_regra_comissao ( nr_seq_vendedor_p bigint, nr_sequencia_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


/* ie_ocpao_p
	'C' = Comissoes
	'M' = Regras mensais
	'E' = Meta
	'P' = Parcelamento
*/
pls_vendedor_regra_w		bigint;


BEGIN

if (ie_opcao_p	= 'C') then
	select	nextval('pls_vendedor_regra_seq')
	into STRICT	pls_vendedor_regra_w
	;
	
	insert into pls_vendedor_regra(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_vendedor, ie_comissao, nr_parcela_inicial, nr_parcela_final, ie_recebe_valores,
					ie_recebe_sem_pagto, vl_premio, tx_premio, tx_juros, tx_multa,
					dt_inicio_vigencia, dt_fim_vigencia, ie_acao_contrato, ie_tipo_item_mensalidade, ie_tipo_pessoa,
					ie_aprovacao_benef_ativo, nr_seq_motivo_inclusao, qt_idade_inicial, qt_idade_final,
					ie_diferenca_migracao, qt_dias_contrato_fim, ie_bonificacao, nr_seq_plano,
					nr_seq_sca, nr_parcela_inicial_sca, nr_parcela_final_sca, nr_seq_grupo_produto,
					ie_primeira_parc_integral, ie_calculo_grupo, qt_dias_contrato, ie_portabilidade, qt_meses_meta,
					ie_situacao, ie_considerar_carencias, ie_parcela_retroativa, ie_migracao_valor_superior,
					qt_dias_tolerancia_volta, nr_parcela_fin_adapt, nr_parcela_ini_adapt, ie_dif_alteracao_prod,
					ie_vl_integral_primeira_mens, ds_regra, nr_seq_grupo_contrato, ie_valor_embutido_sca, nr_contrato,
					nr_seq_contrato,nr_seq_grupo_relac)
				(SELECT	pls_vendedor_regra_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
					nr_seq_vendedor_p, ie_comissao, nr_parcela_inicial, nr_parcela_final, ie_recebe_valores,
					ie_recebe_sem_pagto, vl_premio, tx_premio, tx_juros, tx_multa,
					dt_inicio_vigencia, dt_fim_vigencia, ie_acao_contrato, ie_tipo_item_mensalidade, ie_tipo_pessoa,
					ie_aprovacao_benef_ativo, nr_seq_motivo_inclusao, qt_idade_inicial, qt_idade_final,
					ie_diferenca_migracao, qt_dias_contrato_fim, ie_bonificacao, nr_seq_plano, 
					nr_seq_sca, nr_parcela_inicial_sca, nr_parcela_final_sca, nr_seq_grupo_produto,
					ie_primeira_parc_integral, ie_calculo_grupo, qt_dias_contrato, ie_portabilidade, qt_meses_meta,
					'A', ie_considerar_carencias, ie_parcela_retroativa, ie_migracao_valor_superior,
					qt_dias_tolerancia_volta, nr_parcela_fin_adapt, nr_parcela_ini_adapt, ie_dif_alteracao_prod,
					ie_vl_integral_primeira_mens, ds_regra, nr_seq_grupo_contrato, ie_valor_embutido_sca, nr_contrato,
					nr_seq_contrato, nr_seq_grupo_relac
				from	pls_vendedor_regra
				where	nr_sequencia = nr_sequencia_p);

	insert into pls_regra_adic_benef(	nr_sequencia, ie_situacao, cd_estabelecimento, ie_tipo_impacto_cpt, pr_incremento,
						nr_seq_regra_ven, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						qt_idade_min, qt_idade_max, qt_vidas_min, qt_vidas_max, ie_tipo_pessoa,
						ie_acao_contrato, ie_referencia_vidas, ie_considerar_ativos)
					(SELECT	nextval('pls_regra_adic_benef_seq'), ie_situacao, cd_estabelecimento, ie_tipo_impacto_cpt,
						pr_incremento, pls_vendedor_regra_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
						qt_idade_min, qt_idade_max, qt_vidas_min, qt_vidas_max, ie_tipo_pessoa,
						ie_acao_contrato, ie_referencia_vidas, ie_considerar_ativos
					from	pls_regra_adic_benef
					where	nr_seq_regra_ven = nr_sequencia_p);
elsif (ie_opcao_p	= 'M') then
	insert into pls_regra_adic_mensal(	nr_sequencia, ie_situacao, cd_estabelecimento, pr_incremento, dt_atualizacao,
						nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, qt_vidas_min, qt_vidas_max,
						nr_seq_vendedor, ie_tipo_pessoa, ie_acao_contrato, dt_inicio_vigencia, dt_fim_vigencia,
						vl_incremento, nr_parcela_inicial, nr_parcela_final, qt_limite_max_vidas, ie_tipo_item_mensalidade,
						pr_meta_minimo, pr_meta_maximo, ie_preco, nr_seq_proposta, nr_seq_plano, nr_seq_grupo_produto,
						pr_meta_fatur_minimo, pr_meta_fatur_maximo, ie_calculo_comp_meta, vl_base_meta_composta,
						pr_limite_pagamento_base, ie_dt_base_ref_comissao, ie_calculo_grupo, ie_movimentacao_benef,
						ds_regra, qt_dias_contrato, qt_dias_contrato_fim, qt_idade_inicial, qt_idade_final, 
						ie_nascido_plano, ie_vl_integral_primeira_mens, nr_seq_classif_contrato, pr_limite_meta, 
						nr_seq_tipo_comissao, ie_tipo_parcela, nr_seq_contrato, ie_gerar_mens_atraso,nr_seq_motivo_inclusao)
					(SELECT	nextval('pls_regra_adic_mensal_seq'), ie_situacao, cd_estabelecimento, pr_incremento, clock_timestamp(),
						nm_usuario_p, clock_timestamp(), nm_usuario_p, qt_vidas_min, qt_vidas_max,
						nr_seq_vendedor_p, ie_tipo_pessoa, ie_acao_contrato, dt_inicio_vigencia, dt_fim_vigencia,
						vl_incremento, nr_parcela_inicial, nr_parcela_final, qt_limite_max_vidas, ie_tipo_item_mensalidade,
						pr_meta_minimo, pr_meta_maximo, ie_preco, nr_seq_proposta, nr_seq_plano, nr_seq_grupo_produto,
						pr_meta_fatur_minimo, pr_meta_fatur_maximo, ie_calculo_comp_meta, vl_base_meta_composta,
						pr_limite_pagamento_base, ie_dt_base_ref_comissao, ie_calculo_grupo, ie_movimentacao_benef, 
						ds_regra, qt_dias_contrato, qt_dias_contrato_fim, qt_idade_inicial, qt_idade_final, 
						ie_nascido_plano, ie_vl_integral_primeira_mens, nr_seq_classif_contrato, pr_limite_meta, 
						nr_seq_tipo_comissao, ie_tipo_parcela, nr_seq_contrato, ie_gerar_mens_atraso, nr_seq_motivo_inclusao
					from	pls_regra_adic_mensal
					where	nr_sequencia = nr_sequencia_p);
elsif (ie_opcao_p	= 'E') then
	insert into pls_vendedor_meta(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_vendedor, dt_mesano_referencia, qt_meta, dt_limite_movimentacao, ie_meta_composta,
					vl_meta_faturamento)
				(SELECT	nextval('pls_vendedor_meta_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
					nr_seq_vendedor_p, dt_mesano_referencia, qt_meta, dt_limite_movimentacao, ie_meta_composta,
					vl_meta_faturamento
				from	pls_vendedor_meta
				where	nr_sequencia = nr_sequencia_p);
elsif (ie_opcao_p	= 'P') then
	insert into pls_vendedor_regra_pag(	nr_sequencia, nr_seq_vendedor, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, vl_comissao_inicial, vl_comissao_final, cd_condicao_pagamento)
				      (	SELECT	nextval('pls_vendedor_regra_pag_seq'), nr_seq_vendedor_p, clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, vl_comissao_inicial, vl_comissao_final, cd_condicao_pagamento
					from	pls_vendedor_regra_pag
					where	nr_sequencia = nr_sequencia_p );
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_regra_comissao ( nr_seq_vendedor_p bigint, nr_sequencia_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

