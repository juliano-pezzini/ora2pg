-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_i100_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar o registro I100
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:

		Parâmetro 5500 - [25] -  SPED PIS/COFINS - Ao gerar os dados,  de onde buscar as informações
		da função Controle de Arrecadações, valores tratados
			N -  Nota Fiscal - C01
			A - Conta paciente. Se não houver vínculo, busca da nota - C02
			C - Conta Paciente - C02

Situação da Nota Fiscal
-------------------------------------------------------------------------------------------------------------------

Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
aliquota_pis_w			double precision;
aliquota_cofins_w		double precision;
cd_tributo_pis_w		smallint;
cd_tributo_cofins_w		smallint;
nr_seq_regra_efd_w		bigint;
nr_linha_w			bigint 	:= qt_linha_p;
nr_seq_registro_w		bigint 	:= nr_sequencia_p;
nr_linha_I100_w			bigint;
nr_seq_registro_I100_w		bigint;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;
qt_registros_w			bigint;
cd_empresa_w			smallint;
nr_seq_data_w			bigint;
vl_rec_w			double precision;
vl_ded_ger_w			double precision;
vl_ded_esp_w			double precision;
vl_pis_w			double precision;
vl_cofins_w			double precision;
vl_detalhamento_r_w		double precision;
vl_detalhamento_d00_w		double precision;
vl_detalhamento_d_w		double precision;
vl_bc_pis_cofins_w		double precision;

c01 CURSOR FOR
	SELECT	'I100'					tp_registro,
		sum(vl_movimento)			vl_operacao,
		sum(vl_movimento)			base_calculo_pis,
		sum(vl_movimento)			base_calculo_cofins,
		aliquota_pis_w				pr_aliquota_pis,
		aliquota_cofins_w			pr_aliquota_cofins,
		ie_tributacao_cst			ie_tributacao_cst,
		'' 					ds_info_compl,
		ie_tipo_ct				ie_tipo_ct,
		nr_seq_I100
	from (SELECT	CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END  vl_movimento,
			c.ie_tributacao_cst,
			r.ie_tipo_ct,
			c.nr_sequencia nr_seq_I100
		from 	fis_efd_conta_contabil	c,
			fis_efd_regra_tipo_ct	r,
			ctb_balancete_v		a
		where 	a.cd_conta_contabil				= c.cd_conta_contabil
		and	c.nr_seq_tipo_ct				= r.nr_sequencia
		and	coalesce(c.nr_seq_superior::text, '') = ''
		and	c.ie_automatizacao       			= 'N'
		and	a.nr_seq_mes_ref				= nr_seq_data_w
		and	a.cd_estabelecimento				= c.cd_estabelecimento
		and 	c.cd_estabelecimento				= cd_estabelecimento_p
		and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
		and	a.ie_normal_encerramento			= 'N'
		and	r.ie_tipo_ct in ('I100_DEG','I100_DEE','I100_FAT')) alias10
	group by
		'I100',
		aliquota_pis_w,
		aliquota_cofins_w,
		ie_tributacao_cst,
		ie_tipo_ct,
		nr_seq_I100;

vet01	C01%RowType;

c02 CURSOR FOR
	SELECT	'I100'						tp_registro,
		sum(vl_movimento)				vl_operacao,
		sum(vl_movimento)				base_calculo_pis,
		sum(vl_movimento)				base_calculo_cofins,
		coalesce(pr_aliquota_pis, aliquota_pis_w)		pr_aliquota_pis,
		coalesce(pr_aliquota_cofins, aliquota_cofins_w)	pr_aliquota_cofins,
		ie_tributacao_cst				ie_tributacao_cst,
		'' 						ds_info_compl,
		ie_tipo_ct					ie_tipo_ct
	from (SELECT	CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END  vl_movimento,
			c.ie_tributacao_cst,
			r.ie_tipo_ct,
			c.nr_sequencia nr_seq_I100,
			c.pr_aliquota_pis,
			c.pr_aliquota_cofins
		from 	fis_efd_conta_contabil	c,
			fis_efd_regra_tipo_ct	r,
			ctb_balancete_v		a
		where 	a.cd_conta_contabil				= c.cd_conta_contabil
		and	c.nr_seq_tipo_ct				= r.nr_sequencia
		and 	(c.cd_conta_contabil IS NOT NULL AND c.cd_conta_contabil::text <> '')
		and	c.ie_automatizacao       			= 'S'
		and	a.nr_seq_mes_ref				= nr_seq_data_w
		and	a.cd_estabelecimento				= c.cd_estabelecimento
		and 	c.cd_estabelecimento				= cd_estabelecimento_p
		and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
		and	a.ie_normal_encerramento			= 'N'
		and	r.ie_tipo_ct in ('AL')) alias12
	group by
		'I100',
		coalesce(pr_aliquota_pis, aliquota_pis_w),
		coalesce(pr_aliquota_cofins, aliquota_cofins_w),
		ie_tributacao_cst,
		ie_tipo_ct;

vet02	C02%RowType;

c03 CURSOR FOR
	SELECT	'I100'					tp_registro,
		ie_tributacao_cst			ie_tributacao_cst,
		ie_tipo_ct				ie_tipo_ct,
		pr_aliquota_pis,
		pr_aliquota_cofins,
		nr_seq_I100
	from (SELECT	c.ie_tributacao_cst,
			r.ie_tipo_ct,
			c.pr_aliquota_pis,
			c.pr_aliquota_cofins,
			c.nr_sequencia nr_seq_I100
		from 	fis_efd_conta_contabil	c,
			fis_efd_regra_tipo_ct	r,
			ctb_balancete_v		a
		where 	c.nr_seq_tipo_ct				= r.nr_sequencia
		and	coalesce(c.nr_seq_superior::text, '') = ''
		and	c.ie_automatizacao       			= 'N'
		and	a.cd_estabelecimento				= c.cd_estabelecimento
		and 	c.cd_estabelecimento				= cd_estabelecimento_p
		and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
		and	r.ie_tipo_ct = 'AL') alias3
	group by
		'I100',
		ie_tributacao_cst,
		ie_tipo_ct,
		pr_aliquota_pis,
		pr_aliquota_cofins,
		nr_seq_I100;

vet03	C03%RowType;


BEGIN
select	cd_empresa
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

select	count(1)
into STRICT	qt_registros_w
from	ctb_mes_ref
where	trunc(dt_referencia,'mm')	= trunc(dt_inicio_p,'mm')
and	cd_empresa			= cd_empresa_w  LIMIT 1;

if (qt_registros_w = 1) then
	select	max(nr_sequencia)
	into STRICT	nr_seq_data_w
	from 	ctb_mes_ref
	where 	trunc(dt_referencia,'mm')	= trunc(dt_inicio_p,'mm')
	and	cd_empresa			= cd_empresa_w;
end if;

select	nr_seq_regra_efd
into STRICT	nr_seq_regra_efd_w
from	fis_efd_controle
where	nr_sequencia	= nr_seq_controle_p;

select	cd_tributo_pis,
	cd_tributo_cofins
into STRICT	cd_tributo_pis_w,
	cd_tributo_cofins_w
from	fis_regra_efd
where	nr_sequencia	= nr_seq_regra_efd_w;

aliquota_pis_w 		:= obter_pr_imposto(cd_tributo_pis_w);
aliquota_cofins_w 	:= obter_pr_imposto(cd_tributo_cofins_w);

open C01;
loop
fetch C01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	vl_rec_w	:= 0;
	vl_ded_ger_w	:= 0;
	vl_ded_esp_w	:= 0;

	if (vet01.ie_tipo_ct = 'I100_FAT') then
		vl_rec_w	:= vet01.vl_operacao;
	end if;

	if (vet01.ie_tipo_ct = 'I100_DEG') then
		vl_ded_ger_w	:= vet01.vl_operacao;
	end if;

	if (vet01.ie_tipo_ct = 'I100_DEE') then
		vl_ded_esp_w	:= vet01.vl_operacao;
	end if;

	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
	nr_linha_I100_w		:= nr_linha_w;
	nr_seq_registro_I100_w	:= nr_seq_registro_w;

	SELECT * FROM fis_gerar_reg_I200_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, vet01.ie_tributacao_cst, vet01.nr_seq_I100, nr_linha_w, nr_seq_registro_w, vet01.ie_tipo_ct) INTO STRICT nr_linha_w, nr_seq_registro_w;

	vl_pis_w	:= (vet01.base_calculo_pis * (vet01.pr_aliquota_pis/100));
	vl_cofins_w	:= (vet01.base_calculo_cofins * (vet01.pr_aliquota_cofins/100));

	ds_linha_w	:= substr(	sep_w || vet01.tp_registro 						|| --texto fixo
					sep_w || sped_formatar_numericos(abs(vl_rec_w),2,',')			|| -- valor da operação
					sep_w || vet01.ie_tributacao_cst 					|| --Código de Situação Tributária
					sep_w || sped_formatar_numericos(abs(vl_ded_ger_w),2,',')		|| -- Valor Total das Deduções e Exclusões de Caráter Geral
					sep_w || sped_formatar_numericos(abs(vl_ded_esp_w),2,',')		|| -- Valor Total das Deduções e Exclusões de Caráter Específico
					sep_w || sped_formatar_numericos(abs(vet01.base_calculo_pis),2,',')	|| -- valor da base de cálculo do pis
					sep_w || sped_formatar_numericos(vet01.pr_aliquota_pis,2,',')		|| -- valor da aliquota pis
					sep_w || sped_formatar_numericos(abs(vl_pis_w),2,',') 			|| -- valor do pis
					sep_w || sped_formatar_numericos(abs(vet01.base_calculo_cofins),2,',') 	|| -- valor da base de cálculo do cofins
					sep_w || sped_formatar_numericos(vet01.pr_aliquota_cofins,2,',')	|| -- valor da aliquota cofins
					sep_w || sped_formatar_numericos(abs(vl_cofins_w),2,',')		|| -- valor do cofins
					sep_w || vet01.ds_info_compl						||
					sep_w,1,8000);

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);

	insert into fis_efd_arquivo(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_controle_efd,
		nr_linha,
		cd_registro,
		ds_arquivo,
		ds_arquivo_compl)
	values (nr_seq_registro_I100_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_controle_p,
		nr_linha_I100_w,
		vet01.tp_registro,
		ds_arquivo_w,
		ds_arquivo_compl_w);

	end;

end loop;
close C01;

open C02;
loop
fetch C02 into
	vet02;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	vl_rec_w	:= 0;
	vl_ded_ger_w	:= 0;
	vl_ded_esp_w	:= 0;

	if (vet02.ie_tipo_ct = 'AL') then

		select 	coalesce(sum(abs(vl_movimento_r)),0)
		into STRICT 	vl_detalhamento_r_w
		from (SELECT	CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END  vl_movimento_r,
				c.ie_tributacao_cst,
				r.ie_tipo_ct,
				c.nr_sequencia nr_seq_I100
			from 	fis_efd_conta_contabil	c,
				fis_efd_regra_tipo_ct	r,
				ctb_balancete_v		a
			where 	a.cd_conta_contabil				= c.cd_conta_contabil
			and	c.nr_seq_tipo_ct				= r.nr_sequencia
			and 	(c.cd_conta_contabil IS NOT NULL AND c.cd_conta_contabil::text <> '')
			and	c.ie_automatizacao       			= 'S'
			and	a.nr_seq_mes_ref				= nr_seq_data_w
			and	a.cd_estabelecimento				= c.cd_estabelecimento
			and 	c.cd_estabelecimento				= cd_estabelecimento_p
			and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
			and	a.ie_normal_encerramento			= 'N'
			and 	c.ie_tributacao_cst 				=  vet02.ie_tributacao_cst
			and	r.ie_tipo_ct 					= 'AL'
			and 	substr(c.cd_tipo_detalhamento,1,1) 		= 'R') alias11;

		select 	coalesce(sum(abs(vl_movimento_d00)),0)
		into STRICT 	vl_detalhamento_d00_w
		from (SELECT	CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END  vl_movimento_d00,
				c.ie_tributacao_cst,
				r.ie_tipo_ct,
				c.nr_sequencia nr_seq_I100
			from 	fis_efd_conta_contabil	c,
				fis_efd_regra_tipo_ct	r,
				ctb_balancete_v		a
			where 	a.cd_conta_contabil				= c.cd_conta_contabil
			and	c.nr_seq_tipo_ct				= r.nr_sequencia
			and 	(c.cd_conta_contabil IS NOT NULL AND c.cd_conta_contabil::text <> '')
			and	c.ie_automatizacao       			= 'S'
			and	a.nr_seq_mes_ref				= nr_seq_data_w
			and	a.cd_estabelecimento				= c.cd_estabelecimento
			and 	c.cd_estabelecimento				= cd_estabelecimento_p
			and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
			and	a.ie_normal_encerramento			= 'N'
			and 	c.ie_tributacao_cst 				=  vet02.ie_tributacao_cst
			and	r.ie_tipo_ct 					= 'AL'
			and 	substr(c.cd_tipo_detalhamento,1,3) 		= 'D00') alias10;

		select 	coalesce(sum(abs(vl_movimento_d)),0)
		into STRICT 	vl_detalhamento_d_w
		from (SELECT	CASE WHEN coalesce(c.ie_tipo_valor,'VM')='VM' THEN a.vl_movimento WHEN coalesce(c.ie_tipo_valor,'VM')='VC' THEN a.vl_credito WHEN coalesce(c.ie_tipo_valor,'VM')='VD' THEN a.vl_debito END  vl_movimento_d,
				c.ie_tributacao_cst,
				r.ie_tipo_ct,
				c.nr_sequencia nr_seq_I100
			from 	fis_efd_conta_contabil	c,
				fis_efd_regra_tipo_ct	r,
				ctb_balancete_v		a
			where 	a.cd_conta_contabil				= c.cd_conta_contabil
			and	c.nr_seq_tipo_ct				= r.nr_sequencia
			and 	(c.cd_conta_contabil IS NOT NULL AND c.cd_conta_contabil::text <> '')
			and	c.ie_automatizacao       			= 'S'
			and	a.nr_seq_mes_ref				= nr_seq_data_w
			and	a.cd_estabelecimento				= c.cd_estabelecimento
			and 	c.cd_estabelecimento				= cd_estabelecimento_p
			and	obter_empresa_estab(a.cd_estabelecimento)	= coalesce(c.cd_empresa, cd_empresa_p)
			and	a.ie_normal_encerramento			= 'N'
			and 	c.ie_tributacao_cst 				=  vet02.ie_tributacao_cst
			and	r.ie_tipo_ct 					= 'AL'
			and 	substr(c.cd_tipo_detalhamento,1,1) 		= 'D'
			and 	substr(c.cd_tipo_detalhamento,1,3) 		<> 'D00') alias11;

		vl_rec_w	:= vl_detalhamento_r_w;
		vl_ded_ger_w	:= vl_detalhamento_d00_w;
		vl_ded_esp_w	:= vl_detalhamento_d_w;

	end if;
	
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
	nr_linha_I100_w		:= nr_linha_w;
	nr_seq_registro_I100_w	:= nr_seq_registro_w;

	open C03;
	loop
	fetch C03 into
		vet03;
	EXIT WHEN NOT FOUND; /* apply on C03 */

	if (vet02.ie_tributacao_cst = vet03.ie_tributacao_cst) then

		SELECT * FROM fis_gerar_reg_I200_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, vet03.ie_tributacao_cst, vet03.nr_seq_I100, nr_linha_w, nr_seq_registro_w, vet03.ie_tipo_ct) INTO STRICT nr_linha_w, nr_seq_registro_w;
	end if;

	end loop;
	close C03;

	vl_bc_pis_cofins_w := abs(vl_rec_w) - abs(vl_ded_ger_w) - abs(vl_ded_esp_w);

	vl_pis_w	:= (vl_bc_pis_cofins_w * (vet02.pr_aliquota_pis/100));
	vl_cofins_w	:= (vl_bc_pis_cofins_w * (vet02.pr_aliquota_cofins/100));

	if (vet02.ie_tributacao_cst = '08') then
		begin
		ds_linha_w	:= substr(	sep_w || vet02.tp_registro 						|| --texto fixo
						sep_w || sped_formatar_numericos(abs(vl_rec_w),2,',')			|| -- valor da operação
						sep_w || vet02.ie_tributacao_cst 					|| --Código de Situação Tributária
						sep_w || ''	|| -- Valor Total das Deduções e Exclusões de Caráter Geral
						sep_w || ''	|| -- Valor Total das Deduções e Exclusões de Caráter Específico
						sep_w || ''	|| -- valor da base de cálculo do pis
						sep_w || ''	|| -- valor da aliquota pis
						sep_w || ''	|| -- valor do pis
						sep_w || '' 	|| -- valor da base de cálculo do cofins
						sep_w || ''	|| -- valor da aliquota cofins
						sep_w || ''	|| -- valor do cofins
						sep_w || ''	||
						sep_w,1,8000);

		end;
	else
		begin
		ds_linha_w	:= substr(	sep_w || vet02.tp_registro 						|| --texto fixo
						sep_w || sped_formatar_numericos(abs(vl_rec_w),2,',')			|| -- valor da operação
						sep_w || vet02.ie_tributacao_cst 					|| --Código de Situação Tributária
						sep_w || sped_formatar_numericos(abs(vl_ded_ger_w),2,',')		|| -- Valor Total das Deduções e Exclusões de Caráter Geral
						sep_w || sped_formatar_numericos(abs(vl_ded_esp_w),2,',')		|| -- Valor Total das Deduções e Exclusões de Caráter Específico
						sep_w || sped_formatar_numericos(abs(vl_bc_pis_cofins_w),2,',')	|| -- valor da base de cálculo do pis
						sep_w || sped_formatar_numericos(vet02.pr_aliquota_pis,2,',')		|| -- valor da aliquota pis
						sep_w || sped_formatar_numericos(abs(vl_pis_w),2,',') 			|| -- valor do pis
						sep_w || sped_formatar_numericos(abs(vl_bc_pis_cofins_w),2,',') 	|| -- valor da base de cálculo do cofins
						sep_w || sped_formatar_numericos(vet02.pr_aliquota_cofins,2,',')	|| -- valor da aliquota cofins
						sep_w || sped_formatar_numericos(abs(vl_cofins_w),2,',')		|| -- valor do cofins
						sep_w || vet02.ds_info_compl						||
						sep_w,1,8000);
		end;
	end if;

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		
	insert into fis_efd_0900(	nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_controle,
								ds_registro,
								cd_cst,
								cd_ind_oper,
								vl_registro )
					values ( 	nextval('fis_efd_0900_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_controle_p,
								'I100',
								vet02.ie_tributacao_cst,
								0,
								abs(vl_rec_w) );

	insert into fis_efd_arquivo(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_controle_efd,
		nr_linha,
		cd_registro,
		ds_arquivo,
		ds_arquivo_compl)
	values (nr_seq_registro_I100_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_controle_p,
		nr_linha_I100_w,
		vet02.tp_registro,
		ds_arquivo_w,
		ds_arquivo_compl_w);

	end;

end loop;
close C02;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_i100_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

