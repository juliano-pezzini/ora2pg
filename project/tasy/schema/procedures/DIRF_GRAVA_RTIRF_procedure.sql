-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dirf_grava_rtirf ( nr_seq_lote_dirf_p bigint, nm_usuario_p text, nr_seq_apres_p INOUT bigint, cd_darf_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text ) is ds_arquivo_w varchar(2000) AS $body$
BEGIN
return;
end;

begin

vl_imposto_jan_w	:= 0;
vl_imposto_fev_w	:= 0;
vl_imposto_mar_w	:= 0;
vl_imposto_abr_w	:= 0;
vl_imposto_mai_w	:= 0;
vl_imposto_jun_w	:= 0;
vl_imposto_jul_w	:= 0;
vl_imposto_ago_w	:= 0;
vl_imposto_set_w	:= 0;
vl_imposto_out_w	:= 0;
vl_imposto_nov_w	:= 0;
vl_imposto_dez_w	:= 0;
vl_imposto_13_w		:= 0;

	-- Verificar se existe títulos de imposto retido para a pessoa física
	select count(*)
	into STRICT	qt_registro_w
	from	titulo_pagar p,
		dirf_titulo_pagar t,
		dirf_lote_mensal d,
		dirf_agrupar_lote a,
		dirf_lote l,
		dirf_regra_tributo r
	where	t.nr_titulo = p.nr_titulo
	and	t.nr_seq_lote_dirf = d.nr_sequencia
	and	d.nr_sequencia = a.nr_seq_lote_mensal
	and	l.nr_sequencia = a.nr_seq_lote_anual
	and	t.cd_tributo = r.cd_tributo
	and	r.ie_tipo_imposto = 1 -- Imposto retido
	and	coalesce(t.cd_pessoa_fisica, p.cd_pessoa_fisica) = cd_pessoa_fisica_p
	and	coalesce(r.cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p
	and	l.nr_sequencia = nr_seq_lote_dirf_p
	and	t.cd_darf			= r.cd_darf
	and	((t.cd_darf = cd_darf_p AND r.ie_tipo_imposto = 1)
		or (t.cd_tributo in (SELECT z.cd_tributo
						from	dirf_regra_tributo	z
						where	z.cd_darf_vinculado	= cd_darf_p
						and		z.ie_tipo_imposto	= 1))
		/*or      t.nr_titulo in( select  x.nr_titulo
								from    dirf_titulo_pagar x
								where   x.cd_darf <> cd_darf_p
								and     t.nr_titulo = x.nr_titulo)*/
);

	if (qt_registro_w > 0) then

		-- Buscar os dados das pessoas físicas para os títulos que são de imposto retido
		-- inserir o valor de imposto da pessoa física
		select	max(pkg_date_utils.start_of(dt_lote,'YEAR',0))
		into STRICT	dt_mes_comparacao_w
		from	dirf_lote
		where	nr_sequencia = nr_seq_lote_dirf_p;

		open C01;
		loop
		fetch C01 into
			c01_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			dt_mes_w		:= pkg_date_utils.start_of(c01_w.dt_base_titulo,'MONTH',0);
			dt_mes_comparacao_w	:= coalesce(dt_mes_comparacao_w,pkg_date_utils.start_of(c01_w.dt_base_titulo,'YEAR',0));

			if (dt_mes_w = dt_mes_comparacao_w) then
				begin
				vl_imposto_jan_w := vl_imposto_jan_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,1,0)) then
				begin
				vl_imposto_fev_w := vl_imposto_fev_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,2,0)) then
				begin
				vl_imposto_mar_w := vl_imposto_mar_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,3,0)) then
				begin
				vl_imposto_abr_w := vl_imposto_abr_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,4,0)) then
				begin
				vl_imposto_mai_w := vl_imposto_mai_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,5,0)) then
				begin
				vl_imposto_jun_w := vl_imposto_jun_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,6,0)) then
				begin
				vl_imposto_jul_w := vl_imposto_jul_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,7,0)) then
				begin
				vl_imposto_ago_w := vl_imposto_ago_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,8,0)) then
				begin
				vl_imposto_set_w := vl_imposto_set_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,9,0)) then
				begin
				vl_imposto_out_w := vl_imposto_out_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,10,0)) then
				begin
				vl_imposto_nov_w := vl_imposto_nov_w + c01_w.vl_imposto;
				end;
			elsif (dt_mes_w = pkg_date_utils.add_month(dt_mes_comparacao_w,11,0)) then
				begin
				vl_imposto_dez_w := vl_imposto_dez_w + c01_w.vl_imposto;
				end;
			end if;

			end;
		end loop;
		close C01;

		if (cd_darf_p = '3208') then
			vl_imposto_13_w 	:= '';
		else
			vl_imposto_13_w 	:= replace(substr(campo_mascara(0,2),1,20),'.','');
		end if;


		ds_arquivo_w := 'RTIRF' || separador_w || campo_dirf(vl_imposto_jan_w) 	|| separador_w || campo_dirf(vl_imposto_fev_w) 	|| separador_w || campo_dirf(vl_imposto_mar_w)
					|| separador_w || campo_dirf(vl_imposto_abr_w) 	|| separador_w || campo_dirf(vl_imposto_mai_w)	|| separador_w || campo_dirf(vl_imposto_jun_w)
					|| separador_w || campo_dirf(vl_imposto_jul_w)	|| separador_w || campo_dirf(vl_imposto_ago_w) 	|| separador_w || campo_dirf(vl_imposto_set_w)
					|| separador_w || campo_dirf(vl_imposto_out_w) 	|| separador_w || campo_dirf(vl_imposto_nov_w) 	|| separador_w || campo_dirf(vl_imposto_dez_w)
					|| separador_w || campo_dirf(vl_imposto_13_w)  	|| separador_w;
		nr_seq_apres_p := nr_seq_apres_p + 1;

		insert 	into w_dirf_arquivo(nr_sequencia,
					     nm_usuario,
					     nm_usuario_nrec,
					     dt_atualizacao,
					     dt_atualizacao_nrec,
					     ds_arquivo,
					     nr_seq_apresentacao,
					     nr_seq_registro,
					     cd_darf)
				values (nextval('w_dirf_arquivo_seq'),
					     nm_usuario_p,
					     nm_usuario_p,
					     clock_timestamp(),
					     clock_timestamp(),
					     ds_arquivo_w,
					     to_char(nr_seq_apres_p),
					     0,
					     cd_darf_p);
		commit;
		nr_seq_apres_p := nr_seq_apres_p + 1;
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dirf_grava_rtirf ( nr_seq_lote_dirf_p bigint, nm_usuario_p text, nr_seq_apres_p INOUT bigint, cd_darf_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text ) is ds_arquivo_w varchar(2000) FROM PUBLIC;

