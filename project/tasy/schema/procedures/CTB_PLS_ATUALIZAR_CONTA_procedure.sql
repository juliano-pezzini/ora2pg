-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_conta ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


dt_referencia_w			timestamp;
ie_tipo_contratacao_w		varchar(15);
nr_seq_conta_w			bigint;
cd_conta_contabil_w		varchar(20);
ie_preco_w			varchar(2);
ie_segmentacao_w		varchar(3);
ie_regulamentacao_w		varchar(2);
ie_participacao_w		varchar(1);
nr_seq_regra_w			bigint;
ie_tipo_beneficiario_w		varchar(3);
ie_tipo_relacao_w		varchar(2);
cd_historico_w			numeric(20);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_tipo_despesa_w		varchar(1);
nr_seq_conta_item_w		bigint;
cd_historico_glosa_w		bigint;
cd_conta_glosa_w		varchar(20);
nr_seq_grupo_ans_w		bigint;
nr_seq_grupo_ans_ww		bigint;
ie_tipo_segurado_w		varchar(3);
ie_tipo_item_w			smallint;
nr_seq_material_w		bigint;
nr_seq_grupo_superior_w		bigint;
ds_erro_w			varchar(255);
ie_tipo_vinculo_operadora_w	varchar(2);
nr_seq_segurado_w		bigint;
nr_seq_contrato_w		bigint;

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		d.ie_tipo_contratacao,
		d.ie_preco,
		d.ie_segmentacao,
		d.ie_regulamentacao,
		d.ie_participacao,
		e.ie_tipo_relacao,
		trunc(a.dt_mes_competencia,'month'),
		coalesce(c.ie_tipo_segurado,'B'),
		c.ie_tipo_vinculo_operadora,
		c.nr_sequencia,
		c.nr_seq_contrato
	from	pls_conta 		b,
		pls_protocolo_conta	a,
		pls_plano 		d,
		pls_segurado		c,
		pls_prestador 		e
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_sequencia		= b.nr_seq_segurado
	and	d.nr_sequencia		= b.nr_seq_plano
	and	a.nr_seq_prestador	= e.nr_sequencia
	and	(b.nr_seq_plano IS NOT NULL AND b.nr_seq_plano::text <> '')
	and	a.nr_sequencia		= nr_seq_protocolo_p
	
union all

	SELECT	b.nr_sequencia,
		d.ie_tipo_contratacao,
		d.ie_preco,
		d.ie_segmentacao,
		d.ie_regulamentacao,
		d.ie_participacao,
		e.ie_tipo_relacao,
		trunc(a.dt_mes_competencia,'month'),
		coalesce(c.ie_tipo_segurado,'B'),
		c.ie_tipo_vinculo_operadora,
		c.nr_sequencia,
		c.nr_seq_contrato
	from	pls_conta 		b,
		pls_protocolo_conta	a,
		pls_plano 		d,
		pls_segurado		c,
		pls_prestador 		e
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_sequencia		= b.nr_seq_segurado
	and	d.nr_sequencia		= c.nr_seq_plano
	and	a.nr_seq_prestador	= e.nr_sequencia
	and	coalesce(b.nr_seq_plano::text, '') = ''
	and	a.nr_sequencia		= nr_seq_protocolo_p;

C02 CURSOR FOR
	SELECT	1,
		nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		ie_tipo_despesa,
		nr_seq_grupo_ans
	from	pls_conta_proc
	where	nr_seq_conta = nr_seq_conta_w
	
union all

	SELECT	2,
		nr_sequencia,
		null,
		null,
		null,
		nr_seq_grupo_ans
	from	pls_conta_mat
	where	nr_seq_conta = nr_seq_conta_w;


BEGIN
open C01;
loop
fetch C01 into
	nr_seq_conta_w,
	ie_tipo_contratacao_w,
	ie_preco_w,
	ie_segmentacao_w,
	ie_regulamentacao_w,
	ie_participacao_w,
	ie_tipo_relacao_w,
	dt_referencia_w,
	ie_tipo_segurado_w,
	ie_tipo_vinculo_operadora_w,
	nr_seq_segurado_w,
	nr_seq_contrato_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	select	max(f.ie_tipo_beneficiario)
	into STRICT	ie_tipo_beneficiario_w
	from	pls_contrato		f
	where	f.nr_sequencia	= nr_seq_contrato_w;

	delete	FROM sip_resumo_conta
	where	nr_seq_conta	= nr_seq_conta_w;

	open C02;
	loop
	fetch C02 into
		ie_tipo_item_w,
		nr_seq_conta_item_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_tipo_despesa_w,
		nr_seq_grupo_ans_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		nr_seq_material_w	:= null;
		if (ie_tipo_item_w	= 2) then
			nr_seq_material_w	:= nr_seq_conta_item_w;
		end if;

		if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
			update	pls_conta_proc
			set	cd_conta_cred		= '',
				nr_seq_regra_ctb_cred	 = NULL,
				cd_historico		 = NULL,
				cd_conta_glosa_cred	= '',
				cd_historico_glosa	= '',
				cd_conta_deb		= '',
				nr_seq_regra_ctb_deb	 = NULL,
				cd_conta_glosa_deb	= ''
			where	nr_sequencia		= nr_seq_conta_item_w;
		elsif (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
			begin
			update	pls_conta_mat
			set	cd_conta_cred		= '',
				nr_seq_regra_ctb_cred	 = NULL,
				cd_historico		 = NULL,
				cd_conta_glosa_cred	= '',
				cd_historico_glosa	= '',
				cd_conta_deb		= '',
				nr_seq_regra_ctb_deb	 = NULL,
				cd_conta_glosa_deb	= ''
			where	nr_sequencia		= nr_seq_conta_item_w;
			exception
			when others then
				ds_erro_w	:= ds_erro_w || nr_seq_conta_item_w || ',';
			end;
		end if;

		/* Conta de receita */

		SELECT * FROM ctb_pls_obter_conta_desp(cd_estabelecimento_p, dt_referencia_w, 'C', ie_tipo_contratacao_w, ie_preco_w, ie_segmentacao_w, ie_regulamentacao_w, ie_participacao_w, ie_tipo_beneficiario_w, ie_tipo_relacao_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_despesa_w, nr_seq_conta_w, ie_tipo_segurado_w, nr_seq_material_w, ie_tipo_vinculo_operadora_w, nr_seq_segurado_w, nr_seq_grupo_ans_w, nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, cd_historico_glosa_w, cd_conta_glosa_w, nr_seq_grupo_ans_ww) INTO STRICT nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, cd_historico_glosa_w, cd_conta_glosa_w, nr_seq_grupo_ans_ww;

		if ((nr_seq_regra_w)::numeric  > 0) then
			if (coalesce(nr_seq_grupo_ans_w,0) > 0) then
				select	max(nr_seq_grupo_superior)
				into STRICT	nr_seq_grupo_superior_w
				from	ans_grupo_despesa
				where	nr_sequencia	= nr_seq_grupo_ans_w;
			end if;
			if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
				update	pls_conta_proc
				set	cd_conta_cred		= cd_conta_contabil_w,
					nr_seq_regra_ctb_cred	= nr_seq_regra_w,
					cd_historico		= cd_historico_w,
					cd_conta_glosa_cred	= cd_conta_glosa_w,
					cd_historico_glosa	= cd_historico_glosa_w
					--nr_seq_grupo_ans	= nr_seq_grupo_ans_w,
					--nr_seq_grupo_ans_sup	= nr_seq_grupo_superior_w
				where	nr_sequencia		= nr_seq_conta_item_w;
			elsif (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
				begin
				update	pls_conta_mat
				set	cd_conta_cred		= cd_conta_contabil_w,
					nr_seq_regra_ctb_cred	= nr_seq_regra_w,
					cd_historico		= cd_historico_w,
					cd_conta_glosa_cred	= cd_conta_glosa_w,
					cd_historico_glosa	= cd_historico_glosa_w
					--nr_seq_grupo_ans	= nr_seq_grupo_ans_w,
					--nr_seq_grupo_ans_sup	= nr_seq_grupo_superior_w
				where	nr_sequencia		= nr_seq_conta_item_w;
				exception
				when others then
					ds_erro_w	:= ds_erro_w || nr_seq_conta_item_w || ',';
				end;
			end if;

			/*Diego OPS - OS 283336 - Atualizar os as contas cred na análise*/

			update	w_pls_resumo_conta
			set	cd_classif_cred		= cd_conta_contabil_w
			where	nr_seq_item		= nr_seq_conta_item_w;
		end if;

		/* Conta de débito */

		SELECT * FROM ctb_pls_obter_conta_desp(cd_estabelecimento_p, dt_referencia_w, 'D', ie_tipo_contratacao_w, ie_preco_w, ie_segmentacao_w, ie_regulamentacao_w, ie_participacao_w, ie_tipo_beneficiario_w, ie_tipo_relacao_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_despesa_w, nr_seq_conta_w, ie_tipo_segurado_w, nr_seq_material_w, ie_tipo_vinculo_operadora_w, nr_seq_segurado_w, nr_seq_grupo_ans_w, nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, cd_historico_glosa_w, cd_conta_glosa_w, nr_seq_grupo_ans_ww) INTO STRICT nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, cd_historico_glosa_w, cd_conta_glosa_w, nr_seq_grupo_ans_ww;

		if ((nr_seq_regra_w)::numeric  > 0) then
			if (coalesce(nr_seq_grupo_ans_w,0) > 0) then
				select	max(nr_seq_grupo_superior)
				into STRICT	nr_seq_grupo_superior_w
				from	ans_grupo_despesa
				where	nr_sequencia	= nr_seq_grupo_ans_w;
			end if;

			if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
				update	pls_conta_proc
				set	cd_conta_deb		= cd_conta_contabil_w,
					nr_seq_regra_ctb_deb	= nr_seq_regra_w,
					cd_historico		= cd_historico_w,
					cd_conta_glosa_deb	= cd_conta_glosa_w,
					cd_historico_glosa	= cd_historico_glosa_w
					--nr_seq_grupo_ans	= nr_seq_grupo_ans_w,
					--nr_seq_grupo_ans_sup	= nr_seq_grupo_superior_w
				where	nr_sequencia		= nr_seq_conta_item_w;
			elsif (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
				begin
				update	pls_conta_mat
				set	cd_conta_deb		= cd_conta_contabil_w,
					nr_seq_regra_ctb_deb	= nr_seq_regra_w,
					cd_historico		= cd_historico_w,
					cd_conta_glosa_deb	= cd_conta_glosa_w,
					cd_historico_glosa	= cd_historico_glosa_w
					--nr_seq_grupo_ans	= nr_seq_grupo_ans_w,
					--nr_seq_grupo_ans_sup	= nr_seq_grupo_superior_w
				where	nr_sequencia		= nr_seq_conta_item_w;
				exception
				when others then
					ds_erro_w	:= ds_erro_w || nr_seq_conta_item_w || ',';
				end;
			end if;

			/*Diego OPS - OS 283336 - Atualizar os as contas déb. na análise*/

			update	w_pls_resumo_conta
			set	cd_classif_deb		= cd_conta_contabil_w
			where	nr_seq_item		= nr_seq_conta_item_w;
		end if;
		end;
	end loop;
	close C02;
	--commit;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_conta ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

