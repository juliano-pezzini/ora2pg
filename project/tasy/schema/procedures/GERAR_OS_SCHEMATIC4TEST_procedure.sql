-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_os_schematic4test (NM_USUARIO_P text, NR_SEQ_SCHEDULE_P text, NM_SCRIPT_P text, DS_FUNCAO_P text, DS_VERSION_P text, DS_ARQUIVO_P text, NR_SEQ_ORDEM_P INOUT bigint) AS $body$
DECLARE

NR_SEQ_ORDEM_W		bigint;
CD_PESSOA_FISICA_W	varchar(10);
NM_USUARIO_EXEC_W	varchar(15);
CD_FUNCAO_W			integer;
FUNCAO_W integer;
DS_VERSION_W varchar(10);
NR_SEQ_GRUPO_DES_W		bigint;
NM_USUARIO_LIDER_W		varchar(15);
DS_RELEASE_W varchar(4);


BEGIN
--Procedure que retorna valor e preciso uma variavel OUT em seus parametros, ela e responsavel por gerar OS na corp, quando alterada e necessario solicitar para infra rodar na corp.
	
	INSERT INTO SCHEM_TEST_BEHOLDER(nr_sequencia, nm_usuario, dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec, ds_interaction, ds_param_a, ds_param_b, ds_param_c, ds_param_d, ds_param_e)
	VALUES (nextval('schem_test_beholder_seq'), NM_USUARIO_P, clock_timestamp(), 'Robot', clock_timestamp(), 'GERAR_OS_SCHEMATIC4TEST', 
	'NR_SEQ_SCHEDULE_P as '||NR_SEQ_SCHEDULE_P, 
	'NM_SCRIPT_P as '||NM_SCRIPT_P, 
	'DS_FUNCAO_P as '||DS_FUNCAO_P, 
	'DS_VERSION_P as '||DS_VERSION_P, 
	'NR_SEQ_ORDEM_P as '||NR_SEQ_ORDEM_P);
	
--Verifica se versao e de desenvolvimento da base dev passada por parametro ou outra versao do tasy e aloca na variavel.
    IF DS_VERSION_P = '0.0.0-SNAPSHOT.0' THEN
      SELECT	MAX(CD_VERSAO)
         INTO STRICT DS_VERSION_W
      FROM	APLICACAO_TASY_VERSAO
      WHERE CD_APLICACAO_TASY = 'Tasy';
    ELSE
       SELECT	CD_VERSAO
         INTO STRICT DS_VERSION_W
      FROM	APLICACAO_TASY_VERSAO
      WHERE CD_APLICACAO_TASY = 'Tasy'
        AND CD_VERSAO = DS_VERSION_P;
    END IF;
  
  --retorna codigo da funcao do parametro da procedure e aloca na variavel.
  SELECT CD_FUNCAO 
     INTO STRICT FUNCAO_W
  FROM FUNCAO WHERE DS_FUNCAO = DS_FUNCAO_P;

  --retorna grupo de desenvolvimento e funcao de acordo com o codigo da funcao, aloca nas variaveis o resultado.
  SELECT	MAX(NR_SEQ_GRUPO), MAX(CD_FUNCAO)
      INTO STRICT	NR_SEQ_GRUPO_DES_W, CD_FUNCAO_W
  FROM	FUNCAO_GRUPO_DES
  WHERE	CD_FUNCAO		= FUNCAO_W;
    
  --retorna o usuario executor de acordo com o grupo de desenvolvimento, grupo da funcao e codigo da funcao usando as variaveis com valores alocados anteriores, aloca o usuario na variavel.
  SELECT	MAX(B.NM_USUARIO_EXEC)
      INTO STRICT	NM_USUARIO_EXEC_W 
  FROM GRUPO_DESENVOLVIMENTO A, FUNCAO_GRUPO_DES B
  WHERE	A.NR_SEQUENCIA = B.NR_SEQ_GRUPO
      AND B.CD_FUNCAO = CD_FUNCAO_W
      AND	A.NR_SEQUENCIA	= NR_SEQ_GRUPO_DES_W;
    
      --retorna o usuario lider da funcao de acordo com o grupo da funcao e de desenvolvimento usando as variaveis com valores alocados anteriores, alocando o usuario lider na variavel.
      SELECT	MAX(B.NM_USUARIO_GRUPO)          
          INTO STRICT NM_USUARIO_LIDER_W
      FROM GRUPO_DESENVOLVIMENTO A, USUARIO_GRUPO_DES B
      WHERE	A.NR_SEQUENCIA = B.NR_SEQ_GRUPO
          AND	B.IE_FUNCAO_USUARIO = 'S'
          AND	A.NR_SEQUENCIA	= NR_SEQ_GRUPO_DES_W;

  --retorna proxima sequencia de ordem de servico e aloca na variavel.
	SELECT	nextval('man_ordem_servico_seq')
      INTO STRICT	NR_SEQ_ORDEM_W
	;

  --retorna o codigo de pessoa fisica do usuario passado por parametro e aloca na variavel.
	SELECT	OBTER_PESSOA_FISICA_USUARIO(NM_USUARIO_P, 'C')
      INTO STRICT	CD_PESSOA_FISICA_W
	;

    --Insere a ordem de servico usando as variaveis com valores alocados anteriores.
    INSERT INTO MAN_ORDEM_SERVICO(NR_SEQUENCIA,
      CD_PESSOA_SOLICITANTE,
      DT_ORDEM_SERVICO,
      IE_PRIORIDADE,
      IE_TIPO_ORDEM,
      DS_DANO_BREVE,
      DT_ATUALIZACAO,
      NM_USUARIO,
      DS_DANO,
      IE_PARADO,
      NR_SEQ_GRUPO_DES,
      IE_PLATAFORMA,
      IE_CLASSIFICACAO,
      NR_SEQ_ESTAGIO,
      NR_SEQ_COMPLEX,
      NR_SEQ_EQUIPAMENTO,
      NR_SEQ_LOCALIZACAO,
      NR_GRUPO_TRABALHO,
      NR_GRUPO_PLANEJ,
      IE_RESP_TESTE,
      CD_FUNCAO,
      DT_ATUALIZACAO_NREC,
      NM_USUARIO_NREC,
      IE_STATUS_ORDEM,
      IE_ORIGEM_OS,
      IE_AMBIENTE,
      NR_SEQ_GRUPO_SUP,
      NR_SEQ_TIPO_ORDEM )
    VALUES (	NR_SEQ_ORDEM_W,
			CD_PESSOA_FISICA_W,
			clock_timestamp(),
			'M',
      1,
      'V.'||DS_VERSION_W||' - S - AUTCLOUD - '||NM_SCRIPT_P,
			clock_timestamp(),
			NM_USUARIO_P,
			'Defeito encontrado durante a execucao do script: '||NM_SCRIPT_P,
      'N',
			NR_SEQ_GRUPO_DES_W,
			'H',
			'E',
			1051,
			2,
			7402,
			1272,
			132,
			91,
			'A',
			CD_FUNCAO_W,
			clock_timestamp(),
			NM_USUARIO_P,
			'1',
			'1',
			'T',
			31,
			161);
			
   --Insere o usuario usando as variaveis com valores alocados anteriores.
	INSERT INTO MAN_ORDEM_SERV_TECNICO(
		NR_SEQUENCIA,
		NR_SEQ_ORDEM_SERV,
		DT_ATUALIZACAO,
		NM_USUARIO,
		DT_HISTORICO,
		DT_LIBERACAO,
		NM_USUARIO_LIB,
		DS_RELAT_TECNICO,
		NR_SEQ_TIPO)
	VALUES (	nextval('man_ordem_serv_tecnico_seq'),
			NR_SEQ_ORDEM_W,
			clock_timestamp(),
			NM_USUARIO_P,
			clock_timestamp(),
			clock_timestamp(),
			NM_USUARIO_P,
			'Abertura de OS.',
			1);			
			
     --Insere os executores na OS usando as variaveis com valores alocados anteriores.
    INSERT INTO MAN_ORDEM_SERVICO_EXEC(NR_SEQUENCIA,
      NR_SEQ_ORDEM,
      NM_USUARIO_EXEC,
      NM_USUARIO,
      DT_ATUALIZACAO,
      NR_SEQ_TIPO_EXEC	)
    VALUES (	nextval('man_ordem_servico_exec_seq'),
			NR_SEQ_ORDEM_W,
			coalesce(NM_USUARIO_LIDER_W,NM_USUARIO_P),
			coalesce(NM_USUARIO_LIDER_W,NM_USUARIO_P),
			clock_timestamp(),
      2);

  	INSERT INTO MAN_ORDEM_SERVICO_EXEC(NR_SEQUENCIA,
      NR_SEQ_ORDEM,
      NM_USUARIO_EXEC,
      NM_USUARIO,
      DT_ATUALIZACAO	)
    VALUES (	nextval('man_ordem_servico_exec_seq'),
			NR_SEQ_ORDEM_W,
			NM_USUARIO_P,
			NM_USUARIO_P,
			clock_timestamp());

    --Insere no anexo o arquivo de print do endereco passado por parametro na OS usando as variaveis alocadas.
    IF (DS_ARQUIVO_P IS NOT NULL AND DS_ARQUIVO_P::text <> '') THEN      
        INSERT INTO MAN_ORDEM_SERV_ARQ(NR_SEQUENCIA,
          NR_SEQ_ORDEM,
          DT_ATUALIZACAO,
          NM_USUARIO,
          DS_ARQUIVO,
          IE_ANEXAR_EMAIL,
          DT_ATUALIZACAO_NREC,
          NM_USUARIO_NREC)
        VALUES (	nextval('man_ordem_serv_arq_seq'),
          NR_SEQ_ORDEM_W,
          clock_timestamp(),
          coalesce(NM_USUARIO_P,NM_USUARIO_LIDER_W),
          DS_ARQUIVO_P,
          'S',
          clock_timestamp(),
          coalesce(NM_USUARIO_P,NM_USUARIO_LIDER_W));
        END IF;
  
  NR_SEQ_ORDEM_P := NR_SEQ_ORDEM_W;
  EXCEPTION
  WHEN no_data_found THEN
    RAISE NOTICE 'Erro: Data not found';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_os_schematic4test (NM_USUARIO_P text, NR_SEQ_SCHEDULE_P text, NM_SCRIPT_P text, DS_FUNCAO_P text, DS_VERSION_P text, DS_ARQUIVO_P text, NR_SEQ_ORDEM_P INOUT bigint) FROM PUBLIC;

