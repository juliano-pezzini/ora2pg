-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_nota_complemento700 ( nr_seq_cobranca_p bigint, cd_interface_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_lote_w			integer;
nr_nota_w			ptu_nota_complemento.nr_nota%type;
nr_seq_fatura_w			bigint;
nr_seq_clinica_w		bigint;
ie_tipo_internacao_w		smallint;
ie_tipo_atendimento_w		varchar(2) := '1';
ds_indicacao_clinica_w		varchar(100);
ds_especif_material_w		varchar(500);
nr_seq_conta_w			bigint;
qt_registro_w			bigint := 0;
nr_nota_number_w		numeric(20);

c01 CURSOR FOR
	SELECT	coalesce(elimina_caractere_especial(elimina_acentuacao(substr(a.ds_indicacao_clinica,1,100))),'SEM INDICACAO CLINICA'),
		a.nr_sequencia
	from	pls_protocolo_conta	c,
		pls_conta		a
	where	c.nr_sequencia		= a.nr_seq_protocolo
	and	a.nr_sequencia		= nr_nota_number_w
	group by
		a.ds_indicacao_clinica,
		a.nr_sequencia;

c02 CURSOR FOR
	SELECT	ds_especif_material
	from (SELECT	substr(ds_especif_material,1,500) ds_especif_material
		from	pls_conta_proc
		where	nr_seq_conta = nr_seq_conta_w
		and	(ds_especif_material IS NOT NULL AND ds_especif_material::text <> '')
		
union all

		select	substr(ds_especif_material,1,500) ds_especif_material
		from	pls_conta_mat
		where	nr_seq_conta = nr_seq_conta_w
		and	(ds_especif_material IS NOT NULL AND ds_especif_material::text <> '')) alias4 LIMIT 5;


BEGIN
select	max(nr_seq_fatura),
	max(ie_tipo_atendimento),
	max(nr_nota),
	max(nr_lote)
into STRICT	nr_seq_fatura_w,
	ie_tipo_atendimento_w,
	nr_nota_w,
	nr_seq_lote_w
from	ptu_nota_cobranca
where	nr_sequencia	= nr_seq_cobranca_p;

select	max(nr_seq_clinica)
into STRICT	nr_seq_clinica_w
from	pls_conta
where	nr_sequencia = nr_nota_w;

select	coalesce(max(cd_clinica),1)
into STRICT	ie_tipo_internacao_w
from	pls_clinica
where	nr_sequencia = nr_seq_clinica_w;

nr_nota_number_w := null;

if (somente_numero(nr_nota_w) > 0) then
	nr_nota_number_w := somente_numero(nr_nota_w);
end if;

if (ie_tipo_internacao_w in ( 1 , 2 , 3 )) then	-- 'Clínica', 'Cirúrgica' ou 'Obstétrica'
	open c01;
	loop
	fetch c01 into
		ds_indicacao_clinica_w,
		nr_seq_conta_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	sum(qt_item)
		into STRICT	qt_registro_w
		from (SELECT	count(1) qt_item
			from	pls_conta_proc
			where	nr_seq_conta = nr_seq_conta_w
			and	(ds_especif_material IS NOT NULL AND ds_especif_material::text <> '')
			
union all

			SELECT	count(1) qt_item
			from	pls_conta_mat
			where	nr_seq_conta = nr_seq_conta_w
			and	(ds_especif_material IS NOT NULL AND ds_especif_material::text <> '')) alias5;

		if (qt_registro_w = 0) then
			insert into ptu_nota_complemento(nr_sequencia,
				nr_seq_nota_cobr,
				nr_lote,
				nr_nota,
				ie_tipo_complemento,
				ds_complemento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				especif_material)
			values (nextval('ptu_nota_complemento_seq'),
				nr_seq_cobranca_p,
				nr_seq_lote_w,
				nr_nota_w,
				1,
				ds_indicacao_clinica_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				' ');

		elsif (qt_registro_w > 0) then
			open C02;
			loop
			fetch C02 into
				ds_especif_material_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				insert into ptu_nota_complemento(nr_sequencia,
					nr_seq_nota_cobr,
					nr_lote,
					nr_nota,
					ie_tipo_complemento,
					ds_complemento,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					especif_material)
				values (nextval('ptu_nota_complemento_seq'),
					nr_seq_cobranca_p,
					nr_seq_lote_w,
					nr_nota_w,
					1,
					ds_indicacao_clinica_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					upper(elimina_acentuacao(ds_especif_material_w)));
				end;
			end loop;
			close C02;
		end if;
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_nota_complemento700 ( nr_seq_cobranca_p bigint, cd_interface_p bigint, nm_usuario_p text) FROM PUBLIC;

