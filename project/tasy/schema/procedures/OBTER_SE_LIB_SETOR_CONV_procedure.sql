-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_se_lib_setor_conv ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_plano_p text, nr_seq_classificacao_p bigint, ds_mensagem_p INOUT text, ie_bloqueia_atendimento_p INOUT text, ie_clinica_p bigint, cd_empresa_p bigint, cd_procedencia_p bigint, nr_seq_cobertura_p bigint, nr_seq_tipo_acidente_p bigint, cd_tipo_acomodacao_p bigint, cd_medico_p text, qt_idade_p bigint, ie_tipo_convenio_ant_p bigint, nr_seq_queixa_p bigint, nr_seq_queixa_anterior_p bigint, dt_vigencia_p timestamp, cd_pessoa_fisica_p text default null) AS $body$
DECLARE


qt_registro_w			bigint;
ie_bloqueia_atendimento_w	varchar(2)	:= 'L';
ds_mensagem_w			varchar(255)	:= '';
nr_sequencia_w			bigint;
nm_usuario_filtro_w		varchar(255);
dt_vigencia_w			timestamp;
ie_credenciado_w		varchar(1);
cd_especialidade_medica_w	integer;

C01 CURSOR FOR
	SELECT	ie_libera_bloqueia,
		ds_mensagem,
		nr_sequencia
	from	conv_regra_atend_setor
	where	cd_estabelecimento					= cd_estabelecimento_p
	and	cd_convenio						= cd_convenio_p
	and	ie_situacao						= 'A'
	and	coalesce(cd_categoria,cd_categoria_p)			= cd_categoria_p
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_p)		= ie_tipo_atendimento_p
	and	coalesce(cd_setor_atendimento,cd_setor_atendimento_p)	= cd_setor_atendimento_p
	and	coalesce(cd_plano,coalesce(cd_plano_p,'0'))			= coalesce(cd_plano_p,'0')
	and	coalesce(nr_seq_classificacao,coalesce(nr_seq_classificacao_p,0))	= coalesce(nr_seq_classificacao_p,0)
	and	coalesce(ie_clinica,coalesce(ie_clinica_p,0))			= coalesce(ie_clinica_p,0)
	and	coalesce(cd_empresa,coalesce(cd_empresa_p,0))			= coalesce(cd_empresa_p,0)
	and	coalesce(cd_procedencia,coalesce(cd_procedencia_p,0))		= coalesce(cd_procedencia_p,0)
	and 	coalesce(nr_seq_cobertura, coalesce(nr_seq_cobertura_p,0))	= coalesce(nr_seq_cobertura_p,0)
	and 	coalesce(nr_seq_tipo_acidente, coalesce(nr_seq_tipo_acidente_p,0)) = coalesce(nr_seq_tipo_acidente_p,0)	
	and 	coalesce(cd_tipo_acomodacao, coalesce(cd_tipo_acomodacao_p,0)) 	= coalesce(cd_tipo_acomodacao_p,0)
	and	coalesce(cd_medico,coalesce(cd_medico_p,'0'))			= coalesce(cd_medico_p,'0')
	and	coalesce(qt_idade_p,0) between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999)
	and	coalesce(nm_usuario_filtro,coalesce(nm_usuario_filtro_w,'0'))	= coalesce(nm_usuario_filtro_w,'0')
	and 	coalesce(ie_tipo_convenio, coalesce(ie_tipo_convenio_ant_p,0)) 	= coalesce(ie_tipo_convenio_ant_p,0)
	and 	coalesce(nr_seq_queixa, coalesce(nr_seq_queixa_p,0)) 		= coalesce(nr_seq_queixa_p,0)
	and 	coalesce(nr_seq_queixa_anterior, coalesce(nr_seq_queixa_anterior_p,0)) 	= coalesce(nr_seq_queixa_anterior_p,0)
	and	coalesce(cd_pessoa_fisica, coalesce(cd_pessoa_fisica_p,'0'))	= coalesce(cd_pessoa_fisica_p,'0')
	and	dt_vigencia_w between coalesce(dt_inicio_vigencia, dt_vigencia_w) and (trunc(coalesce(dt_final_vigencia, dt_vigencia_w)) + 86399/86400)
	and	((coalesce(ie_credenciado, 'T') = 'T') or (ie_credenciado = ie_credenciado_w))
	and	coalesce(cd_especialidade_medica,coalesce(cd_especialidade_medica_w,0))	= coalesce(cd_especialidade_medica_w,0)
	order by coalesce(cd_especialidade_medica,0),
		coalesce(ie_tipo_atendimento, 0),
		coalesce(cd_setor_atendimento, 0),
		coalesce(cd_categoria,'0'),
		coalesce(cd_plano,'0'),
		coalesce(nr_seq_classificacao,0),
		coalesce(cd_empresa,0),
		coalesce(cd_procedencia,0),
		coalesce(nr_seq_cobertura,0),
		coalesce(nr_seq_tipo_acidente,0),
		coalesce(cd_tipo_acomodacao,0),
		coalesce(cd_medico,'0'),
		coalesce(qt_idade_min,0),
		coalesce(qt_idade_max,0),
		coalesce(nm_usuario_filtro,'0') desc,
		coalesce(ie_tipo_convenio,0),
		coalesce(nr_seq_queixa,0),
		coalesce(nr_seq_queixa_anterior,0),
		coalesce(cd_pessoa_fisica,'0'),
		coalesce(ie_credenciado, 'T');


BEGIN

nm_usuario_filtro_w	:= wheb_usuario_pck.get_nm_usuario;
dt_vigencia_w		:= coalesce(dt_vigencia_p, clock_timestamp());

select	obter_se_medico_credenciado(cd_estabelecimento_p, cd_medico_p, cd_convenio_p, null, 0, cd_categoria_p, cd_setor_atendimento_p,
			cd_plano_p, null, ie_tipo_atendimento_p, null, null)
into STRICT	ie_credenciado_w
;

select 	somente_numero(substr(obter_especialidade_medico(cd_medico_p, 'C'),1,5))
into STRICT	cd_especialidade_medica_w
;


select	count(*)
into STRICT	qt_registro_w
from	conv_regra_atend_setor
where	cd_estabelecimento	= cd_estabelecimento_p
and	cd_convenio		= cd_convenio_p
and	ie_situacao		= 'A';

if (qt_registro_w		> 0) then
	open C01;
	loop
	fetch C01 into	
		ie_bloqueia_atendimento_w,
		ds_mensagem_w,
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
end if;

ds_mensagem_p			:= ds_mensagem_w;
ie_bloqueia_atendimento_p	:= ie_bloqueia_atendimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_se_lib_setor_conv ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_plano_p text, nr_seq_classificacao_p bigint, ds_mensagem_p INOUT text, ie_bloqueia_atendimento_p INOUT text, ie_clinica_p bigint, cd_empresa_p bigint, cd_procedencia_p bigint, nr_seq_cobertura_p bigint, nr_seq_tipo_acidente_p bigint, cd_tipo_acomodacao_p bigint, cd_medico_p text, qt_idade_p bigint, ie_tipo_convenio_ant_p bigint, nr_seq_queixa_p bigint, nr_seq_queixa_anterior_p bigint, dt_vigencia_p timestamp, cd_pessoa_fisica_p text default null) FROM PUBLIC;

