-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_dados_checkup ( nr_atendimento_p bigint, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
dt_registro_w	timestamp;
cd_pessoa_fisica_w	varchar(10);
				

BEGIN 
 
if (nr_atendimento_p > 0) then 
 
	select	max(cd_pessoa_fisica) 
	into STRICT	cd_pessoa_fisica_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_p;
 
	insert into checkup_dado_estat( 
		nr_sequencia, 
		nr_atendimento,		 
		dt_atualizacao, 
		nm_usuario,			 
		nr_seq_tipo_dado,		 
		cd_pessoa_fisica, 
		dt_registro, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_seq_apres, 
		dt_referencia, 
		ie_pos_checkup, 
		cd_paciente) 
	SELECT	nextval('checkup_dado_estat_seq'), 
		nr_atendimento_p, 
		clock_timestamp(),	 
		nm_usuario_p,	 
		c.nr_seq_dado,		 
		obter_Dados_Usuario_Opcao(nm_usuario_p,'C'), 
		clock_timestamp(), 
		clock_timestamp(), 
		nm_usuario_p, 
		c.nr_seq_apresent, 
		obter_data_entrada(nr_atendimento_p), 
		'N', 
		cd_pessoa_fisica_w 
	from	checkup_tipo_dado_estat d, 
		checkup_protocolo_item c, 
		checkup_protocolo b 
	where	c.nr_seq_protocolo	= b.nr_sequencia 
	and	c.nr_seq_dado		= d.nr_sequencia 
	and	b.nr_sequencia		= nr_sequencia_p 
	and	b.ie_situacao		= 'A' 
	and	c.ie_situacao		= 'A' 
	and	d.ie_situacao		= 'A' 
	and	not exists (	SELECT	1 
				from	checkup_dado_estat x 
				where	x.nr_atendimento	= nr_atendimento_p 
				and	x.nr_seq_tipo_dado	= c.nr_seq_dado);
				 
	select	max(dt_registro) 
	into STRICT	dt_registro_w 
	from	checkup_dado_estat 
	where	nr_atendimento			= nr_atendimento_p 
	and	ie_pos_checkup			= 'S';
 
	if (dt_registro_w IS NOT NULL AND dt_registro_w::text <> '') then 
		insert into checkup_dado_estat( 
			nr_sequencia, 
			nr_atendimento,		 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_tipo_dado, 
			cd_pessoa_fisica, 
			dt_registro, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_apres, 
			dt_referencia, 
			ie_pos_checkup, 
			cd_paciente) 
		SELECT	nextval('checkup_dado_estat_seq'), 
			nr_atendimento_p, 
			clock_timestamp(),	 
			nm_usuario_p,	 
			c.nr_seq_dado,		 
			obter_Dados_Usuario_Opcao(nm_usuario_p,'C'), 
			dt_registro_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			c.nr_seq_apresent, 
			dt_registro_w, 
			'S', 
			cd_pessoa_fisica_w 
		from	checkup_tipo_dado_estat d, 
			checkup_protocolo_item c, 
			checkup_protocolo b 
		where	c.nr_seq_protocolo	= b.nr_sequencia 
		and	c.nr_seq_dado		= d.nr_sequencia 
		and	b.nr_sequencia		= nr_sequencia_p 
		and	b.ie_situacao		= 'A' 
		and	c.ie_situacao		= 'A' 
		and	d.ie_situacao		= 'A' 
		and	not exists (	SELECT	1 
					from	checkup_dado_estat x 
					where	x.nr_atendimento	= nr_atendimento_p 
					and	x.ie_pos_checkup	= 'S' 
					and	x.nr_seq_tipo_dado	= c.nr_seq_dado);
	end if;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_dados_checkup ( nr_atendimento_p bigint, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

