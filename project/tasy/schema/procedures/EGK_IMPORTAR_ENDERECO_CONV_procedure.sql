-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE egk_importar_endereco_conv (cd_pessoa_fisica_p text, nr_seq_pessoa_egk_p bigint, nm_usuario_p text, ie_opcao_p text) AS $body$
DECLARE

			
/* ie_opcao_p
CC - Complemento da Pessoa e Convenio
PF - Atualizar dados PF
*/
			

pessoa_fisica_egk_w		pessoa_fisica_egk%rowtype;
compl_pessoa_fisica_w		compl_pessoa_fisica%rowtype;
pessoa_titular_convenio_w	pessoa_titular_convenio%rowtype;

nr_seq_regra_conv_w	bigint;
cd_convenio_w		convenio.cd_convenio%type;
nr_seq_person_name_w	person_name.nr_sequencia%type;
nr_seq_forma_trat_w	pessoa_fisica.nr_seq_forma_trat%type;
qt_categoria_w          bigint;
cd_categoria_w		pessoa_titular_convenio.cd_categoria%type;

	procedure obter_dados_endereco is	
	;
BEGIN
	
	compl_pessoa_fisica_w.ie_tipo_complemento	:= '1';
	compl_pessoa_fisica_w.cd_cep			:= pessoa_fisica_egk_w.postleitzahl_sa;		
	compl_pessoa_fisica_w.ds_endereco		:= pessoa_fisica_egk_w.strasse_sa;
	compl_pessoa_fisica_w.ds_compl_end		:= pessoa_fisica_egk_w.hausnummer_sa;
	compl_pessoa_fisica_w.ds_municipio		:= pessoa_fisica_egk_w.ort_sa;
	compl_pessoa_fisica_w.ds_complemento		:= pessoa_fisica_egk_w.anschriftenzusatz_sa;
	compl_pessoa_fisica_w.nr_seq_pais		:= intpd_conv('PAIS', 'NR_SEQUENCIA', pessoa_fisica_egk_w.wohnsitzlaendercode_sa, nr_seq_regra_conv_w,'I','I');
	
	end;
	
	procedure obter_dados_convenio is
	begin
	
	pessoa_titular_convenio_w.cd_convenio		:= cd_convenio_w;
	pessoa_titular_convenio_w.dt_inicio_vigencia	:= pessoa_fisica_egk_w.versicherungsschutz_beginn;
	pessoa_titular_convenio_w.dt_fim_vigencia	:= pessoa_fisica_egk_w.versicherungsschutz_ende;
	pessoa_titular_convenio_w.dt_validade_carteira	:= pessoa_fisica_egk_w.versicherungsschutz_ende;
	pessoa_titular_convenio_w.cd_usuario_convenio	:= pessoa_fisica_egk_w.versicherten_id;
	
	select	CASE WHEN pessoa_fisica_egk_w.versichertenart='3' THEN '2'  ELSE pessoa_fisica_egk_w.versichertenart END
	into STRICT	pessoa_titular_convenio_w.ie_tipo_conveniado
	;
	
	end;

begin

select	max(nr_seq_regra_conv)
into STRICT	nr_seq_regra_conv_w
from	regra_leitor_cartao_pac
where	nr_sequencia = obter_seq_regra_leitor_cartao(nm_usuario_p,wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_cd_estabelecimento);

select	*
into STRICT	pessoa_fisica_egk_w
from	pessoa_fisica_egk
where	nr_sequencia		= nr_seq_pessoa_egk_p;

if (ie_opcao_p = 'PF') then --Chamado na opcao de atualizar dados da pessoa
	select	max(nr_seq_person_name)
	into STRICT	nr_seq_person_name_w
	from	pessoa_fisica
	where	cd_pessoa_fisica 	= cd_pessoa_fisica_p;

	update	person_name
	set	ds_given_name 		= pessoa_fisica_egk_w.vorname,
		ds_family_name 		= pessoa_fisica_egk_w.nachname,
		ds_component_name_1 	= pessoa_fisica_egk_w.vorsatzwort,
		ds_component_name_2 	 = NULL,
		ds_component_name_3 	= pessoa_fisica_egk_w.namenszusatz,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_sequencia 		= nr_seq_person_name_w;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_forma_trat_w
	from	pf_forma_tratamento 
	where	upper(ds_forma_tratamento) = upper(pessoa_fisica_egk_w.titel);

	update	pessoa_fisica
	set	nm_pessoa_fisica	= pessoa_fisica_egk_w.vorname || ' ' || pessoa_fisica_egk_w.nachname,		
		ie_sexo 		= CASE WHEN lower(pessoa_fisica_egk_w.geschlecht)='w' THEN 'F'  ELSE 'M' END ,
		dt_nascimento 		= pessoa_fisica_egk_w.Geburtsdatum,
		nr_seq_forma_trat	= nr_seq_forma_trat_w,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	cd_pessoa_fisica 	= cd_pessoa_fisica_p;

end if;

if (ie_opcao_p in ('CC','PF')) then

	begin
	select	*
	into STRICT	compl_pessoa_fisica_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	ie_tipo_complemento	= '1'  LIMIT 1;
	exception
	when others then
		compl_pessoa_fisica_w 	:= null;
	end;

	obter_dados_endereco;

	if (coalesce(compl_pessoa_fisica_w.nr_sequencia::text, '') = '') then	

		select 	coalesce(max(nr_sequencia),0) + 1	
		into STRICT 	compl_pessoa_fisica_w.nr_sequencia	
		from 	compl_pessoa_fisica	
		where 	cd_pessoa_fisica = cd_pessoa_fisica_p;
		
		compl_pessoa_fisica_w.cd_pessoa_fisica		:= cd_pessoa_fisica_p;
		compl_pessoa_fisica_w.nm_usuario_nrec 		:= nm_usuario_p;
		compl_pessoa_fisica_w.nm_usuario		:= nm_usuario_p;
		compl_pessoa_fisica_w.dt_atualizacao_nrec	:= clock_timestamp();
		compl_pessoa_fisica_w.dt_atualizacao		:= clock_timestamp();
		
		insert into compl_pessoa_fisica values (compl_pessoa_fisica_w.*);
		
	else
		
		compl_pessoa_fisica_w.nm_usuario		:= nm_usuario_p;
		compl_pessoa_fisica_w.dt_atualizacao		:= clock_timestamp();
		
		update	compl_pessoa_fisica
		set	row			= compl_pessoa_fisica_w
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	nr_sequencia		= compl_pessoa_fisica_w.nr_sequencia;

	end if;
	
	begin
	select  a.cd_convenio
	into STRICT	cd_convenio_w
	from    convenio a
	where   a.cd_cgc in (	SELECT  b.cd_cgc
				from (select x.cd_cgc,
						length(x.ds_razao_social)
					from    pessoa_juridica x,
						convenio y
					where   x.cd_cgc                    = y.cd_cgc
					and     x.ie_situacao               = 'A'
					and     y.ie_situacao               = 'A'
					and     somente_numero(x.cd_cnes)   = pessoa_fisica_egk_w.abrechnender_kennung
					order by   length(x.ds_razao_social) asc) b LIMIT 1);
	exception
	when others then
		begin
		select	max(a.cd_convenio)	
		into STRICT 	cd_convenio_w	
		from 	convenio a,
			pessoa_juridica b
		where 	a.ie_situacao 	= 'A'	
		and b.ie_situacao 	= 'A'
		and	a.cd_cgc	= b.cd_cgc
		and	b.cd_cnes	= pessoa_fisica_egk_w.abrechnender_kennung;	
		
		if (coalesce(cd_convenio_w::text, '') = '') then
			select	max(c.cd_convenio)
			into STRICT 	cd_convenio_w
			from 	convenio c,
				pessoa_juridica pj
			where 	c.ie_situacao 	= 'A'
			and pj.ie_situacao 	= 'A'
			and	c.cd_cgc	= pj.cd_cgc
			and	pj.cd_cnes	= pessoa_fisica_egk_w.kostentraeger_kennung;
		end if;

		exception
		when others then
			cd_convenio_w := null;
		end;
	end;

	if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then

		begin
		
		select	*
		into STRICT	pessoa_titular_convenio_w
		from	pessoa_titular_convenio
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	cd_convenio		= cd_convenio_w  LIMIT 1;
		exception
		when others then
			pessoa_titular_convenio_w := null;
		end;
		
		select 	count(1)
		into STRICT	qt_categoria_w
		from 	categoria_convenio
		where	cd_convenio		= cd_convenio_w
		and	ie_situacao		= 'A';
		
		if (qt_categoria_w = 1) then
		
			select 	cd_categoria
			into STRICT	pessoa_titular_convenio_w.cd_categoria
			from 	categoria_convenio
			where	cd_convenio		= cd_convenio_w
			and	ie_situacao		= 'A';
			
		end if;
		
		PERFORM obter_dados_convenio();
		
		if (coalesce(pessoa_titular_convenio_w.nr_sequencia::text, '') = '') then
		
			select	nextval('pessoa_titular_convenio_seq')
			into STRICT	pessoa_titular_convenio_w.nr_sequencia
			;
			
			pessoa_titular_convenio_w.cd_pessoa_fisica	:= cd_pessoa_fisica_p;
			pessoa_titular_convenio_w.nm_usuario_nrec 	:= nm_usuario_p;
			pessoa_titular_convenio_w.nm_usuario		:= nm_usuario_p;
			pessoa_titular_convenio_w.dt_atualizacao_nrec	:= clock_timestamp();
			pessoa_titular_convenio_w.dt_atualizacao	:= clock_timestamp();
			
			insert into pessoa_titular_convenio values (pessoa_titular_convenio_w.*);
			
		else
		
			pessoa_titular_convenio_w.nm_usuario		:= nm_usuario_p;
			pessoa_titular_convenio_w.dt_atualizacao	:= clock_timestamp();
			
			update	pessoa_titular_convenio
			set	row			= pessoa_titular_convenio_w
			where	cd_pessoa_fisica	= cd_pessoa_fisica_p
			and	nr_sequencia		= pessoa_titular_convenio_w.nr_sequencia;
		
		end if;

	end if;
	
end if;

update	pessoa_fisica_egk
set	cd_pessoa_fisica	= cd_pessoa_fisica_p,
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p
where	nr_sequencia		= nr_seq_pessoa_egk_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE egk_importar_endereco_conv (cd_pessoa_fisica_p text, nr_seq_pessoa_egk_p bigint, nm_usuario_p text, ie_opcao_p text) FROM PUBLIC;

