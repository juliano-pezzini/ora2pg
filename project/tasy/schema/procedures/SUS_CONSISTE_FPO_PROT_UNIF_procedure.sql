-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function sus_consiste_fpo_prot_unif as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE sus_consiste_fpo_prot_unif ( dt_parametro_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, cd_cbo_p text, ie_opcao_p text, ds_retorno_p INOUT text, cd_setor_atendimento_p bigint, cd_procedencia_p bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'SELECT * FROM sus_consiste_fpo_prot_unif_atx ( ' || quote_nullable(dt_parametro_p) || ',' || quote_nullable(cd_procedimento_p) || ',' || quote_nullable(ie_origem_proced_p) || ',' || quote_nullable(qt_procedimento_p) || ',' || quote_nullable(nr_atendimento_p) || ',' || quote_nullable(cd_estabelecimento_p) || ',' || quote_nullable(ie_tipo_atendimento_p) || ',' || quote_nullable(cd_cbo_p) || ',' || quote_nullable(ie_opcao_p) || ',' || quote_nullable(ds_retorno_p) || ',' || quote_nullable(cd_setor_atendimento_p) || ',' || quote_nullable(cd_procedencia_p) || ' )';
	SELECT v_ret INTO ds_retorno_p FROM dblink(v_conn_str, v_query) AS p (v_ret text);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE sus_consiste_fpo_prot_unif_atx ( dt_parametro_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, cd_cbo_p text, ie_opcao_p text, ds_retorno_p INOUT text, cd_setor_atendimento_p bigint, cd_procedencia_p bigint) AS $body$
DECLARE

/* 
A - Ambos 
V - Valor 
Q - Quantidade 
*/
 
qt_fisico_w		bigint := 0;
vl_orcamentario_w		double precision;
cd_convenio_w		integer;
qt_exec_w		bigint := 0;
dt_entrega_w		timestamp;
ds_retorno_w		varchar(2000);
vl_exec_w		double precision;
vl_info_w			double precision;
nr_seq_regra_w		bigint;
qt_executado_w		bigint := 0;
qt_protocolo_w		bigint := 0;
vl_executado_w		double precision;
vl_protocolo_w		double precision;
ie_carater_inter_sus_w	atendimento_paciente.ie_carater_inter_sus%type;
BEGIN
 
select	coalesce(max(cd_convenio_sus),0) 
into STRICT	cd_convenio_w 
from	parametro_faturamento 
where	cd_estabelecimento = cd_estabelecimento_p;
 
begin 
select	coalesce(ie_carater_inter_sus,'00') 
into STRICT	ie_carater_inter_sus_w 
from	atendimento_paciente 
where	nr_atendimento = nr_atendimento_p;
exception 
when others then 
	ie_carater_inter_sus_w := '00';
end;
 
if (ie_origem_proced_p = 7) and 
	((nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') or (cd_convenio_w <> 0)) then 
	 
	SELECT * FROM sus_obter_dados_fpo_unif(cd_procedimento_p, ie_origem_proced_p, ie_tipo_atendimento_p, dt_parametro_p, cd_cbo_p, 1, cd_estabelecimento_p, 0, cd_setor_atendimento_p, cd_procedencia_p, qt_fisico_w, vl_orcamentario_w, nr_seq_regra_w, ie_carater_inter_sus_w) INTO STRICT qt_fisico_w, vl_orcamentario_w, nr_seq_regra_w;
	 
	/*valor procedimento*/
 
	if (ie_tipo_atendimento_p <> 1) then 
		vl_info_w	:= coalesce(sus_obter_preco_proced(cd_estabelecimento_p,dt_parametro_p,ie_tipo_atendimento_p,cd_procedimento_p,ie_origem_proced_p,2),0);
	else	 
		vl_info_w	:= coalesce(sus_obter_preco_proced(cd_estabelecimento_p,dt_parametro_p,ie_tipo_atendimento_p,cd_procedimento_p,ie_origem_proced_p,1),0);
	end if;
	 
	/*quantidade e valor ja executado do procedimento para a data de vigencia*/
 
	--qt_executado_w	:= sus_obter_resultado_fpo(nr_seq_regra_w,1,'E'); 
	--vl_executado_w	:= sus_obter_resultado_fpo(nr_seq_regra_w,2,'E'); 
	qt_protocolo_w	:= sus_obter_resultado_fpo(nr_seq_regra_w,1,'P');
	vl_protocolo_w	:= sus_obter_resultado_fpo(nr_seq_regra_w,2,'P');
 
	qt_exec_w := qt_protocolo_w;
	vl_exec_w := vl_protocolo_w;
 
	qt_exec_w	:= coalesce(qt_exec_w,0) + coalesce(qt_procedimento_p,0);
	vl_exec_w	:= coalesce(vl_exec_w,0) + coalesce((vl_info_w * qt_procedimento_p),0);
 
	if (ie_opcao_p = 'V') and (vl_exec_w	> vl_orcamentario_w) then 
				--'Valor(R$' || campo_mascara(vl_exec_w,2) || ') ultrapassou o teto que é de R$' || campo_mascara(vl_orcamentario_w,2) || '.'; 
		ds_retorno_w	:= wheb_mensagem_pck.get_texto(299670,'VL_EXEC='||campo_mascara(vl_exec_w,2)||';'||'VL_ORCAMENTARIO='||campo_mascara(vl_orcamentario_w,2));
	elsif (ie_opcao_p = 'Q') and (qt_exec_w	> qt_fisico_w) then 
				--'Quantidade(' || qt_exec_w || ') ultrapassou o teto que é de ' || qt_fisico_w || '.'; 
		ds_retorno_w	:= wheb_mensagem_pck.get_texto(299671,'QT_EXEC='||qt_exec_w||';'||'QT_FISICO='||qt_fisico_w);
	elsif (ie_opcao_p = 'A') and 
		((qt_exec_w	> qt_fisico_w) or (vl_exec_w	> vl_orcamentario_w)) then 
			/*'Valor(R$' || campo_mascara(vl_exec_w,2) || ') ou quantidade(' || qt_exec_w || ') ultrapassaram o teto que é de R$' || 
			  campo_mascara(vl_orcamentario_w,2) || ' para o valor, e de ' || qt_fisico_w || ' para quantidade.'||dt_parametro_p ||' - '|| cd_procedimento_p ||' - '||nr_seq_regra_w ;*/
		 
		ds_retorno_w	:= wheb_mensagem_pck.get_texto(311057,	'VL_EXEC='||campo_mascara(vl_exec_w,2)||';'|| 
							'QT_EXEC='||qt_exec_w||';'|| 
							'VL_ORCAMENTARIO='||campo_mascara(vl_orcamentario_w,2)||';'|| 
							'QT_FISICO='||qt_fisico_w||';'|| 
							'DS_REGRA_W='||dt_parametro_p ||' - '|| cd_procedimento_p ||' - '||nr_seq_regra_w);
	else 
		ds_retorno_w	:= '';
	end if;
else 
	ds_retorno_w	:= '';
end if;
 
ds_retorno_p	:= ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_fpo_prot_unif ( dt_parametro_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, cd_cbo_p text, ie_opcao_p text, ds_retorno_p INOUT text, cd_setor_atendimento_p bigint, cd_procedencia_p bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE sus_consiste_fpo_prot_unif_atx ( dt_parametro_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, cd_cbo_p text, ie_opcao_p text, ds_retorno_p INOUT text, cd_setor_atendimento_p bigint, cd_procedencia_p bigint) FROM PUBLIC;

