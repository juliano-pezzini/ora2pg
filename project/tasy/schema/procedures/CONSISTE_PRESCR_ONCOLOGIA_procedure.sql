-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_prescr_oncologia ( cd_pessoa_fisica_p text, nr_seq_atendimento_p bigint, nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE


										
cd_material_w			bigint;			
ds_erro_w			varchar(4000);			
cd_estabelecimento_w		bigint;
ie_autor_prescr_onc_w		varchar(10);				
nr_seq_paciente_w		bigint;
nr_ciclo_w			bigint;
qt_reg_w			bigint;
nr_atendimento_w		bigint;
cd_convenio_w			bigint;
ie_tipo_convenio_w		integer;

C01 CURSOR FOR
	SELECT	cd_material
	from	paciente_atend_medic a
	where	nr_seq_atendimento	= nr_seq_atendimento_p
	and	coalesce(DT_CANCELAMENTO::text, '') = ''
	and	coalesce(nr_seq_diluicao::text, '') = '';


BEGIN
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

open C01;
loop
fetch C01 into	
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ds_erro_w := Cons_interv_solic_med_Onc(nr_prescricao_p, cd_pessoa_fisica_p, nr_seq_atendimento_p, cd_material_w, ds_erro_w);
	
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then		
		--O intervalo de solicitacao definido para o item e inferior ao cadastro do mesmo.'||chr(13)||chr(10)||ds_erro_w;
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(264618,	'DS_ERRO_W='||DS_ERRO_W);
	end if;
	end;
end loop;
close C01;

select	max(ie_autor_prescr_onc)
into STRICT	ie_autor_prescr_onc_w
from	parametro_medico
where	cd_estabelecimento	= cd_estabelecimento_w;


if (ie_autor_prescr_onc_w	= 'S') then

	select 	coalesce(obter_ultimo_atendimento(cd_pessoa_fisica_p),0)
	into STRICT	nr_atendimento_w
	;
	
	select	nr_seq_paciente,
		nr_ciclo,
		nr_atendimento
	into STRICT	nr_seq_paciente_w,
		nr_ciclo_w,
		nr_atendimento_w
	from	paciente_atendimento
	where	nr_seq_atendimento	= nr_seq_atendimento_p;		
	
	if (nr_atendimento_w = 0) then
		select	nr_atendimento
		into STRICT	nr_atendimento_w
		from	paciente_atendimento
		where	nr_seq_atendimento	= nr_seq_atendimento_p;	
	end if;
	
	if (Obter_Se_Dia_Ciclo_Autorizado(nr_seq_atendimento_p,nr_ciclo_w)	= 'N') then
		
		select	count(*)
		into STRICT	qt_reg_w
		from	REGRA_CONCENTIMENTO_CICLO
		where	IE_TIPO_REGRA = 'P';
		
		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
			select	obter_convenio_atendimento(nr_atendimento_w)
			into STRICT	cd_convenio_w
			;
			
			if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
				select	max(ie_tipo_convenio)
				into STRICT	ie_tipo_convenio_w	
				from	convenio
				where	cd_convenio = cd_convenio_w;
			end if;
			
		end if;
		
		
		if	((ie_tipo_convenio_w	<> 1 AND ie_tipo_convenio_w	<> 4) or (coalesce(ie_tipo_convenio_w::text, '') = '')) then
			
			if (qt_reg_w	> 0) then
				CALL Consiste_Regra_Consent_Ciclo(cd_pessoa_fisica_p,nm_usuario_p,nr_seq_paciente_w,'P',nr_atendimento_w,nr_seq_atendimento_p);
			else
				-- Nao e possivel gerar uma prescricao nao autorizada.
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(264625);				
			end if;			
			
			
		end if;
			
	end if;
	
	
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_prescr_oncologia ( cd_pessoa_fisica_p text, nr_seq_atendimento_p bigint, nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

