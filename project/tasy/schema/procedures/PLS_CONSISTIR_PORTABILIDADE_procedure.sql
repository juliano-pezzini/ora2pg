-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_portabilidade (( nr_seq_portabilidade_p pls_portab_pessoa.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) is nr_seq_plano_w bigint) RETURNS bigint AS $body$
DECLARE

cd_segmentacao_w	smallint;

BEGIN -- Domínio 1665
if (ie_segmentacao_p in ('1','8','4')) then --Sem internação
	return 1;
elsif (ie_segmentacao_p in ('3','7','10','12')) then --Internação sem obstetrícia
	return 2;
elsif (ie_segmentacao_p in ('2','5','6','9','11')) then --Internação com obstetrícia
	return 3;
else
	return 0;
end if;
end;

begin

open C01;
loop
fetch C01 into
	nr_seq_inconsistencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	count(*)
	into STRICT	qt_inconsistencia_w
	from	pls_portab_validacao
	where	nr_seq_inconsistencia	= nr_seq_inconsistencia_w
	and	nr_seq_solic_portab	= nr_seq_portabilidade_p;
	
	if (coalesce(qt_inconsistencia_w,0) = 0) then
		insert into pls_portab_validacao(nr_sequencia, nr_seq_solic_portab, cd_estabelecimento,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
			nm_usuario_nrec, nr_seq_inconsistencia)
		values (	nextval('pls_portab_validacao_seq'), nr_seq_portabilidade_p, cd_estabelecimento_p,
			clock_timestamp(), nm_usuario_p, clock_timestamp(),
			nm_usuario_p, nr_seq_inconsistencia_w);
	end if;
	end;
end loop;
close C01;

delete	from pls_portab_solic_consist
where	nr_seq_portabilidade	= nr_seq_portabilidade_p;

select	cd_pessoa_fisica,
	nr_seq_plano,
	vl_preco_origem,
	ie_abrangencia,
	ie_segmentacao,
	ie_tipo_contratacao,
	obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),
	nr_seq_tabela,
	dt_contratacao_origem,
	dt_solicitacao,
	nr_prot_ans_origem
into STRICT	cd_pessoa_fisica_w,
	nr_seq_plano_w,
	vl_preco_origem_w,
	ie_abrangencia_w,
	ie_segmentacao_w,
	ie_tipo_contratacao_w,
	qt_idade_w,
	nr_seq_tabela_w,
	dt_contratacao_origem_w,
	dt_solicitacao_w,
	nr_prot_ans_origem_w
from	pls_portab_pessoa
where	nr_sequencia	= nr_seq_portabilidade_p;

if (coalesce(dt_contratacao_origem_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(197953);
end if;

if (coalesce(nr_seq_plano_w,0) <> 0) then
	select	ie_abrangencia,
		ie_segmentacao,
		ie_tipo_contratacao
	into STRICT	ie_abrangencia_plano_w,
		ie_segmentacao_plano_w,
		ie_tipo_contratacao_plano_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
	
	--1 - Abrangência do beneficiário incompatível

	/* Comentado por Lepinski - OS 482005 - Conforme RN 186, não é necessário consistir a abrangência
	if	(ie_abrangencia_plano_w <> ie_abrangencia_w) then
		pls_portab_gravar_inconsist(nr_seq_portabilidade_p, 1, cd_estabelecimento_p, nm_usuario_p);
	end if;*/

	
	--2 - Segmentação do beneficiário incompatível
	if (obter_codigo_segmentacao(ie_segmentacao_plano_w) <> obter_codigo_segmentacao(ie_segmentacao_w)) then
		CALL pls_portab_gravar_inconsist(nr_seq_portabilidade_p, 2, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	--3 - Tipo de contratação do beneficiário incompatível
	if (ie_tipo_contratacao_plano_w <> ie_tipo_contratacao_w) then
		CALL pls_portab_gravar_inconsist(nr_seq_portabilidade_p, 3, cd_estabelecimento_p, nm_usuario_p);
	end if;
end if;

if (coalesce(nr_seq_tabela_w,0) <> 0) then
	select	max(vl_preco_atual)
	into STRICT	vl_preco_atual_w
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_w
	and	qt_idade_w between qt_idade_inicial and qt_idade_final;
	
	--4 - Valor para o segurado não pode ser maior que o valor da tabela de origem
	if (vl_preco_atual_w > vl_preco_origem_w) then
		CALL pls_portab_gravar_inconsist(nr_seq_portabilidade_p, 4, cd_estabelecimento_p, nm_usuario_p);
	end if;
end if;

dt_ultimo_aniversario_w	:= pls_obter_ultimo_aniversario(trunc(dt_contratacao_origem_w,'mm'), trunc(dt_solicitacao_w,'mm'), 'S');

--5 - Data da solicitação fora do prazo legal para requisição da portabilidade
if	not(trunc(dt_solicitacao_w,'month') between trunc(dt_ultimo_aniversario_w,'month') and last_day(add_months(trunc(dt_ultimo_aniversario_w,'month'),3))) then
	CALL pls_portab_gravar_inconsist(nr_seq_portabilidade_p, 5, cd_estabelecimento_p, nm_usuario_p);
end if;

--6 - Número do protocolo do produto de origem na ANS deve possuir 9 dígitos
if (length(nr_prot_ans_origem_w) <> 9) then
	CALL pls_portab_gravar_inconsist(nr_seq_portabilidade_p, 6, cd_estabelecimento_p, nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_portabilidade (( nr_seq_portabilidade_p pls_portab_pessoa.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) is nr_seq_plano_w bigint) FROM PUBLIC;

