-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_auditoria_conta (nr_seq_auditoria_p bigint, nm_usuario_p text) AS $body$
DECLARE



ie_proc_mat_w		smallint;
nr_seq_item_w		bigint;
qt_ajuste_w		double precision;
tx_ajuste_w		double precision;
tx_ajuste_proc_w		double precision;
nr_sequencia_w		bigint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
ie_tipo_convenio_w		integer;
cd_tipo_baixa_prescr_w	bigint;
cd_estabelecimento_w	bigint;
nr_seq_tipo_baixa_w	bigint;
ie_atualiza_estoque_w	varchar(01);
nr_seq_atepacu_w		bigint;
ie_classificacao_w		smallint;
qt_procedimento_w		double precision;
qt_material_w		double precision;
indice_w			integer:= 1;

cd_setor_atend_w		bigint;
dt_entrada_unidade_w	timestamp;
ie_status_acerto_w		varchar(01);
nr_interno_conta_w		bigint;
qt_conta_diferente_w	bigint;
qt_registro_w		bigint;
ie_calcular_mat_auditado_w	varchar(01);

ie_exclui_proc_agrup_w	varchar(1):= 'N';
nr_seq_item_propaci_w	bigint;
cd_motivo_exc_conta_w	smallint;
qt_partic_w		bigint;
nr_seq_motivo_w		bigint;

tx_proc_original_w	double precision;
ie_valor_informado_w	varchar(1);
qt_ajuste_ww		double precision;
ie_calcular_proc_auditado_w	varchar(1);
ie_consiste_item_negativo_w	varchar(1);
qt_item_negativo_w	bigint;
cd_motivo_exc_agrup_w	smallint;
ie_resumo_auditoria_w	varchar(1);
qt_proc_pacote_w	bigint;
ie_proc_pacote_w	varchar(1) := 'N';

nr_atendimento_w	atendimento_paciente.nr_atendimento%type;
ds_texto_302308_w    	dic_objeto.ds_informacao%type;
ds_texto_302309_w    	dic_objeto.ds_informacao%type;

c01 CURSOR FOR
	SELECT	1 ie_proc_mat,
		a.nr_seq_matpaci,
		a.qt_ajuste,
		0 tx_ajuste,
		a.cd_convenio_ajuste,
		a.cd_categoria_ajuste,
		nr_seq_atepacu_ajuste,
		null,
		0 tx_proc_original
	from	auditoria_matpaci a
	where	a.nr_seq_auditoria	= nr_seq_auditoria_p
	
union

	SELECT	2 ie_proc_mat,
		a.nr_seq_propaci,
		a.qt_ajuste,
		a.tx_proc_ajuste,
		a.cd_convenio_ajuste,
		a.cd_categoria_ajuste,
		nr_seq_atepacu_ajuste,
		nr_sequencia,
		a.tx_proc_original
	from	auditoria_propaci a
	where	a.nr_seq_auditoria	= nr_seq_auditoria_p;


BEGIN

ds_texto_302309_w       := WHEB_MENSAGEM_PCK.get_texto(302309);
ds_texto_302308_w       := WHEB_MENSAGEM_PCK.get_texto(302308);

select	max(b.cd_estabelecimento),
	max(a.nr_interno_conta),
	max(a.nr_atendimento)
into STRICT	cd_estabelecimento_w,
	nr_interno_conta_w,
	nr_atendimento_w
from	atendimento_paciente b,
	auditoria_conta_paciente a
where	a.nr_sequencia		= nr_seq_auditoria_p
and	a.nr_atendimento	= b.nr_atendimento;


select	coalesce(max(ie_calcular_mat_auditado), 'S'),
	coalesce(max(ie_calcular_proc_auditado), 'S')
into STRICT	ie_calcular_mat_auditado_w,
	ie_calcular_proc_auditado_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

select	ie_status_acerto
into STRICT	ie_status_acerto_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_w;

if (ie_status_acerto_w = 2) then
	--A conta esta com status em definitivo, nao pode ser auditada!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(188327);
end if;	


select  sum(q.qt_total)
into STRICT	qt_conta_diferente_w
from (
	SELECT  count(*) qt_total
	from    auditoria_conta_paciente a,
		material_atend_paciente  b,
    		auditoria_matpaci        c
	where   a.nr_sequencia = nr_seq_auditoria_p
	and     a.nr_sequencia = c.nr_seq_auditoria
	and    	b.nr_sequencia = c.nr_seq_matpaci
	and     b.nr_interno_conta <> a.nr_interno_conta
	
union all

	SELECT  count(*) qt_total
	from    auditoria_conta_paciente a,
		procedimento_paciente  b,
    		auditoria_propaci        c
	where   a.nr_sequencia = nr_seq_auditoria_p
	and     a.nr_sequencia = c.nr_seq_auditoria
	and    	b.nr_sequencia = c.nr_seq_propaci
	and     b.nr_interno_conta <> a.nr_interno_conta) q;

if (qt_conta_diferente_w > 0) then
	--Ha itens que nao pertencem a Conta dessa Auditoria !
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(188328);
end if;	


select	coalesce(max(obter_valor_param_usuario(1116, 1, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w)), 1),
	coalesce(max(obter_valor_param_usuario(1116, 57, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
	coalesce(max(obter_valor_param_usuario(1116, 149, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
	somente_numero(coalesce(max(obter_valor_param_usuario(1116, 166, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w)), '0'))
into STRICT	cd_tipo_baixa_prescr_w,
	ie_exclui_proc_agrup_w,
	ie_consiste_item_negativo_w,
	cd_motivo_exc_agrup_w
;

if (ie_consiste_item_negativo_w = 'S') then

	select  sum(x.qt_item_negativo)
	into STRICT	qt_item_negativo_w
	from (
		SELECT  count(*) qt_item_negativo
		from    auditoria_conta_paciente a,
			material_atend_paciente  b,
			auditoria_matpaci        c
		where   a.nr_sequencia = nr_seq_auditoria_p
		and     a.nr_sequencia = c.nr_seq_auditoria
		and    	b.nr_sequencia = c.nr_seq_matpaci
		group by	b.cd_material
		having	sum(coalesce(c.qt_ajuste, c.qt_original)) < 0
		
union all

		SELECT  count(*) qt_item_negativo
		from    auditoria_conta_paciente a,
			procedimento_paciente  b,
			auditoria_propaci        c
		where   a.nr_sequencia = nr_seq_auditoria_p
		and     a.nr_sequencia = c.nr_seq_auditoria
		and    	b.nr_sequencia = c.nr_seq_propaci
		group by	b.cd_procedimento,
			b.ie_origem_proced
		having	sum(coalesce(c.qt_ajuste, c.qt_original)) < 0) x;

	if (coalesce(qt_item_negativo_w,0) > 0) then
		-- Existem itens que ficarao com saldo negativo na conta! Parametro [149].
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(201622);
	end if;	

end if;

select	nr_sequencia,
	ie_atualiza_estoque
into STRICT	nr_seq_tipo_baixa_w,
	ie_atualiza_estoque_w
from	tipo_baixa_prescricao
where	cd_tipo_baixa		= cd_tipo_baixa_prescr_w
and	ie_prescricao_devolucao	= 'P';


open	c01;
loop
fetch	c01 into
	ie_proc_mat_w,
	nr_seq_item_w,
	qt_ajuste_w,
	tx_ajuste_w,
	cd_convenio_w,
	cd_categoria_w,
	nr_seq_atepacu_w,
	nr_seq_item_propaci_w,
	tx_proc_original_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	select	max(ie_tipo_convenio)
	into STRICT	ie_tipo_convenio_w
	from	convenio
	where	cd_convenio	= cd_convenio_w;
	
	ie_proc_pacote_w	:= 'N';	
	if (ie_proc_mat_w = 2) and (ie_exclui_proc_agrup_w = 'S') then	
		select	count(1)
		into STRICT	qt_proc_pacote_w
		from	atendimento_pacote
		where	nr_atendimento = nr_atendimento_w
		and	nr_seq_proc_origem = nr_seq_item_w  LIMIT 1;
		
		if (qt_proc_pacote_w > 0) then
			ie_proc_pacote_w	:= 'S';
		end if;	
	end if;


	if (ie_proc_mat_w	= 1) then
		begin

		if (nr_seq_atepacu_w IS NOT NULL AND nr_seq_atepacu_w::text <> '') then
			begin

			select	max(cd_setor_atendimento),
				max(dt_entrada_unidade)
			into STRICT	cd_setor_atend_w,
				dt_entrada_unidade_w
			from	atend_paciente_unidade
			where	nr_seq_interno		= coalesce(nr_seq_atepacu_w,0);


			update	material_atend_paciente
			set	ie_auditoria		= 'S',
				nr_seq_atepacu		= nr_seq_atepacu_w,
				cd_setor_atendimento	= cd_setor_atend_w,
				dt_entrada_unidade	= dt_entrada_unidade_w,
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia		= nr_seq_item_w;

			end;
		end if;
		if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
			begin			
			
			update	material_atend_paciente
			set	ie_auditoria		= CASE WHEN ie_calcular_mat_auditado_w='N' THEN  'S'  ELSE 'N' END ,
				cd_convenio		= cd_convenio_w,
				cd_categoria		= cd_categoria_w,
				nr_interno_conta	 = NULL,
				qt_material		= coalesce(qt_ajuste_w, qt_material), -- OS 209106
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia		= nr_seq_item_w;
		
			CALL atualiza_preco_material(nr_seq_item_w, nm_usuario_p);

			update	material_atend_paciente
			set	CD_SITUACAO_GLOSA	= 4,
				ie_auditoria		= 'S',
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	ie_tipo_convenio_w	= 1
			and	nr_sequencia		= nr_seq_item_w;

			end;
		end if;
		if (coalesce(cd_convenio_w::text, '') = '') then
			begin

			select	nextval('material_atend_paciente_seq')
			into STRICT	nr_sequencia_w
			;

			select 	coalesce(qt_material,0)
			into STRICT	qt_material_w
			from	material_atend_paciente
			where	nr_sequencia	= nr_seq_item_w;
		
			if (coalesce(qt_ajuste_w, qt_material_w) >= qt_material_w)  then
				indice_w:= 1;
			else
				indice_w:= -1;
			end if;
			
			insert	into material_atend_paciente(nr_sequencia,
				nr_atendimento,
				nm_usuario,
				dt_atualizacao,
				dt_entrada_unidade,
				cd_material,
				dt_atendimento,
				cd_unidade_medida,
				qt_material,
				cd_convenio,
				cd_categoria,
				dt_prescricao,
				cd_material_prescricao,
				ie_via_aplicacao,
				cd_tab_preco_material,
				dt_vigencia_tabela,
				dt_acerto_conta,
				dt_acerto_convenio,
				nr_prescricao,
				nr_sequencia_prescricao,
				cd_local_estoque,
				dt_atualizacao_estoque,
				cd_acao,
				cd_setor_atendimento,
				nr_doc_convenio,
				qt_executada,
				dt_conta,
				nr_aih,
				nr_lote_contabil,
				cd_material_convenio,
				nr_seq_autorizacao,
				nr_interno_conta,
				nr_seq_proc_princ,
				ie_guia_informada,
				cd_especialidade,
				nm_usuario_original,
				nr_seq_proc_pacote,
				ie_emite_conta,
				cd_setor_receita,
				cd_cgc_fornecedor,
				nr_seq_lote_fornec,
				cd_material_exec,
				nr_seq_atepacu,
				ie_tipo_guia,
				nr_doc_interno,
				ie_auditoria,
				nr_seq_grupo_rec,
				cd_motivo_ajuste,
				nr_seq_tipo_baixa,
				nr_seq_cor_exec,
				nr_seq_origem,
				ie_dispersao,
				nr_seq_conta_origem,
				cd_setor_paciente,
				nr_seq_parcial,
				cd_cgc_prestador,
				nr_seq_aih,
				ie_valor_informado,
				vl_material,
				vl_unitario,
				nr_seq_orig_audit,
				cd_senha,
				cd_material_tuss,
				nr_seq_tuss_mat_item,
				ds_material_tuss,
				CD_MATERIAL_TISS,
				DS_MATERIAL_TISS,
				cd_conta_contabil,
				cd_centro_custo_receita,
				ie_responsavel_credito,
				ie_origem_preco,
				nr_seq_regra_ajuste_mat,
				cd_apresentacao,
				cd_laboratorio,
				cd_medicamento,
				ie_trat_conta_rn,
				ie_opme,
				cd_simpro,
				ie_status_item_tabela,
				nr_seq_bras_preco,
				nr_seq_mat_bras,
				nr_seq_conv_bras,
				nr_seq_conv_simp,
				nr_seq_mat_simp,
				nr_seq_simp_preco,
				ie_valor_autorizado,
				tx_material)
			(SELECT	nr_sequencia_w,
				nr_atendimento,
				nm_usuario_p,
				clock_timestamp(),
				dt_entrada_unidade,
				cd_material,
				dt_atendimento,
				cd_unidade_medida,
				CASE WHEN coalesce(qt_ajuste_w, qt_material)=qt_material THEN  qt_material  ELSE coalesce(qt_ajuste_w, qt_material) - qt_material END ,
				coalesce(cd_convenio_w, cd_convenio),
				coalesce(cd_categoria_w, cd_categoria),
				dt_prescricao,
				cd_material_prescricao,
				ie_via_aplicacao,
				cd_tab_preco_material,
				dt_vigencia_tabela,
				dt_acerto_conta,
				dt_acerto_convenio,
				nr_prescricao,
				nr_sequencia_prescricao,
				CASE WHEN ie_atualiza_estoque_w='S' THEN  cd_local_estoque  ELSE null END ,
				dt_atualizacao_estoque,
				cd_acao,
				cd_setor_atendimento,
				nr_doc_convenio,
				coalesce(qt_ajuste_w, qt_material),
				dt_conta,
				nr_aih,
				nr_lote_contabil,
				cd_material_convenio,
				nr_seq_autorizacao,
				nr_interno_conta,
				nr_seq_proc_princ,
				ie_guia_informada,
				cd_especialidade,
				nm_usuario_p,
				nr_seq_proc_pacote,
				ie_emite_conta,
				cd_setor_receita,
				cd_cgc_fornecedor,
				nr_seq_lote_fornec,
				cd_material_exec,
				nr_seq_atepacu,
				ie_tipo_guia,
				nr_doc_interno,
				'S',
				nr_seq_grupo_rec,
				cd_motivo_ajuste,
				nr_seq_tipo_baixa_w,
				431,
				nr_seq_origem,
				ie_dispersao,
				nr_seq_conta_origem,
				cd_setor_paciente,
				nr_seq_parcial,
				cd_cgc_prestador,
				nr_seq_aih,
				ie_valor_informado,
				(vl_unitario * CASE WHEN coalesce(qt_ajuste_w, qt_material)=qt_material THEN  qt_material  ELSE coalesce(qt_ajuste_w, qt_material) - qt_material END ),
				vl_unitario,
				nr_sequencia,
				cd_senha,
				cd_material_tuss,
				nr_seq_tuss_mat_item,
				ds_material_tuss,
				CD_MATERIAL_TISS,
				DS_MATERIAL_TISS,
				cd_conta_contabil,
				cd_centro_custo_receita,
				ie_responsavel_credito,
				ie_origem_preco,
				nr_seq_regra_ajuste_mat,
				cd_apresentacao,
				cd_laboratorio,
				cd_medicamento,
				ie_trat_conta_rn,
				ie_opme,
				cd_simpro,
				ie_status_item_tabela,
				nr_seq_bras_preco,
				nr_seq_mat_bras,
				nr_seq_conv_bras,
				nr_seq_conv_simp,
				nr_seq_mat_simp,
				nr_seq_simp_preco,
				ie_valor_autorizado,
				tx_material
			from	material_atend_paciente
			where	nr_sequencia	= nr_seq_item_w
			and (coalesce(qt_ajuste_w, qt_material) - qt_material) <> 0);	
			
			CALL gerar_mat_atend_pac_auditoria(nr_sequencia_w, nr_seq_auditoria_p, nm_usuario_p);

			update	material_atend_paciente
			set	ie_auditoria	= 'S',
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia	= nr_seq_item_w;
		
			begin
			update	material_atend_paciente
			set	ie_auditoria	= CASE WHEN ie_calcular_mat_auditado_w='N' THEN  'S'  ELSE 'N' END ,
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia	= nr_sequencia_w;
			exception
				when others then
				nr_sequencia_w	:= nr_sequencia_w;
			end;

			begin
			CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);
			exception
				when others then
				nr_sequencia_w	:= nr_sequencia_w;
			end;
			
			update	material_atend_paciente
			set	ie_auditoria	= 'S'
			where	nr_sequencia	= nr_sequencia_w;

			end;
		else

			update	material_atend_paciente
			set	ie_auditoria	= 'S',
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia	= nr_seq_item_w;
		end if;
		end;
	elsif (ie_proc_mat_w	= 2) and
		((ie_exclui_proc_agrup_w = 'N') or (ie_proc_pacote_w = 'S')) then
		begin		
	
		select  max(coalesce(b.ie_classificacao,1))
		into STRICT	ie_classificacao_w		
		from  	procedimento 		b,
           		procedimento_paciente 	a
		where 	a.cd_procedimento  = b.cd_procedimento
		and 	a.ie_origem_proced = b.ie_origem_proced
		and 	a.nr_sequencia     = nr_seq_item_w;

		if (nr_seq_atepacu_w IS NOT NULL AND nr_seq_atepacu_w::text <> '') then
			begin

			select	max(cd_setor_atendimento),
				max(dt_entrada_unidade)
			into STRICT	cd_setor_atend_w,
				dt_entrada_unidade_w
			from	atend_paciente_unidade
			where	nr_seq_interno		= coalesce(nr_seq_atepacu_w,0);


			update	procedimento_paciente
			set	ie_auditoria		= 'S',
				nr_seq_atepacu		= nr_seq_atepacu_w,
				cd_setor_atendimento	= cd_setor_atend_w,
				dt_entrada_unidade	= dt_entrada_unidade_w,
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia		= nr_seq_item_w;

			end;
		end if;
		if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
			begin

			update	procedimento_paciente
			set	ie_auditoria		= CASE WHEN ie_calcular_proc_auditado_w='N' THEN  'S'  ELSE 'N' END ,
				cd_convenio		= cd_convenio_w,
				cd_categoria		= cd_categoria_w,
				nr_interno_conta	 = NULL,
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia		= nr_seq_item_w;
			
			if (ie_classificacao_w = 1) then
				CALL atualiza_preco_proc_amb(nr_seq_item_w, nm_usuario_p);
			else
				CALL Atualiza_preco_servico(nr_seq_item_w, nm_usuario_p);
			end if;

			update	procedimento_paciente
			set	CD_SITUACAO_GLOSA	= 4,
				ie_auditoria		= 'S',
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	ie_tipo_convenio_w	= 1
			and	nr_sequencia		= nr_seq_item_w;

			end;
		end if;
		if (coalesce(cd_convenio_w::text, '') = '') then
			begin

			select	nextval('procedimento_paciente_seq')
			into STRICT	nr_sequencia_w
			;


			if (coalesce(tx_ajuste_w,0) = 0) then
				begin
				
				select 	coalesce(qt_procedimento,0)
				into STRICT	qt_procedimento_w
				from	procedimento_paciente
				where	nr_sequencia	= nr_seq_item_w;
		
				if (coalesce(qt_ajuste_w, qt_procedimento_w) >= qt_procedimento_w)  then
					indice_w:= 1;
				else
					indice_w:= -1;
				end if;
			
				insert	into procedimento_paciente(nr_sequencia,
					nr_atendimento,
					dt_entrada_unidade,
					cd_procedimento,
					dt_procedimento,
					qt_procedimento,
					dt_atualizacao,
					nm_usuario,
					cd_medico,
					cd_convenio,
					cd_categoria,
					cd_pessoa_fisica,
					dt_prescricao,
					ds_observacao,
					vl_procedimento,
					vl_medico,
					vl_anestesista,
					vl_materiais,
					cd_edicao_amb,
					cd_tabela_servico,
					dt_vigencia_preco,
					cd_procedimento_princ,
					dt_procedimento_princ,
					dt_acerto_conta,
					dt_acerto_convenio,
					dt_acerto_medico,
					vl_auxiliares,
					vl_custo_operacional,
					tx_medico,
					tx_anestesia,
					nr_prescricao,
					nr_sequencia_prescricao,
					cd_motivo_exc_conta,
					ds_compl_motivo_excon,
					cd_acao,
					qt_devolvida,
					cd_motivo_devolucao,
					nr_cirurgia,
					nr_doc_convenio,
					cd_medico_executor,
					ie_cobra_pf_pj,
					nr_laudo,
					dt_conta,
					cd_setor_atendimento,
					cd_conta_contabil,
					cd_procedimento_aih,
					ie_origem_proced,
					nr_aih,
					ie_responsavel_credito,
					tx_procedimento,
					cd_equipamento,
					ie_valor_informado,
					cd_estabelecimento_custo,
					cd_tabela_custo,
					cd_situacao_glosa,
					nr_lote_contabil,
					cd_procedimento_convenio,
					nr_seq_autorizacao,
					ie_tipo_servico_sus,
					ie_tipo_ato_sus,
					cd_cgc_prestador,
					nr_nf_prestador,
					cd_atividade_prof_bpa,
					nr_interno_conta,
					nr_seq_proc_princ,
					ie_guia_informada,
					dt_inicio_procedimento,
					ie_emite_conta,
					ie_funcao_medico,
					ie_classif_sus,
					cd_especialidade,
					nm_usuario_original,
					nr_seq_proc_pacote,
					ie_tipo_proc_sus,
					cd_setor_receita,
					vl_adic_plant,
					qt_porte_anestesico,
					tx_hora_extra,
					ie_emite_conta_honor,
					nr_seq_atepacu,
					ie_proc_princ_atend,
					cd_medico_req,
					ie_tipo_guia,
					ie_video,
					nr_doc_interno,
					ie_auditoria,
					nr_seq_grupo_rec,
					cd_medico_convenio,
					cd_motivo_ajuste,
					nr_seq_cor_exec,
					ie_via_acesso,
					nr_seq_exame,
					ie_intercorrencia,
					nr_seq_origem,
					ie_dispersao,
					cd_setor_paciente,
					nr_seq_conta_origem,
					nr_seq_parcial,
					nr_seq_proc_interno,
					cd_senha,
					nr_seq_aih,
					nr_doc_honor_conv,
					dt_conferencia,
					ie_tipo_atend_bpa,
					ie_grupo_atend_bpa,
					cd_cgc_prestador_conta,
					cd_medico_exec_conta,
					nr_seq_pq_proc,
					ie_tecnica_utilizada,
					nr_seq_orig_audit)
				(SELECT	nr_sequencia_w,
					nr_atendimento,
					dt_entrada_unidade,
					cd_procedimento,
					dt_procedimento,
					CASE WHEN coalesce(qt_ajuste_w, qt_procedimento)=qt_procedimento THEN  qt_procedimento  ELSE coalesce(qt_ajuste_w, qt_procedimento) - qt_procedimento END ,
					clock_timestamp(),
					nm_usuario_p,
					cd_medico,
					coalesce(cd_convenio_w,cd_convenio),
					coalesce(cd_categoria_w,cd_categoria),
					cd_pessoa_fisica,
					dt_prescricao,
					ds_observacao,
					vl_procedimento * indice_w,
					vl_medico * indice_w,
					vl_anestesista * indice_w,
					vl_materiais * indice_w,
					cd_edicao_amb,
					cd_tabela_servico,
					dt_vigencia_preco,
					cd_procedimento_princ,
					dt_procedimento_princ,
					dt_acerto_conta,
					dt_acerto_convenio,
					dt_acerto_medico,
					vl_auxiliares,
					vl_custo_operacional,
					tx_medico,
					tx_anestesia,
					nr_prescricao,
					nr_sequencia_prescricao,
					cd_motivo_exc_conta,
					ds_compl_motivo_excon,
					cd_acao,
					qt_devolvida,
					cd_motivo_devolucao,
					nr_cirurgia,
					nr_doc_convenio,
					cd_medico_executor,
					ie_cobra_pf_pj,
					nr_laudo,
					dt_conta,
					cd_setor_atendimento,
					cd_conta_contabil,
					cd_procedimento_aih,
					ie_origem_proced,
					nr_aih,
					ie_responsavel_credito,
					tx_procedimento,
					cd_equipamento,
					ie_valor_informado,
					cd_estabelecimento_custo,
					cd_tabela_custo,
					cd_situacao_glosa,
					nr_lote_contabil,
					cd_procedimento_convenio,
					nr_seq_autorizacao,
					ie_tipo_servico_sus,
					ie_tipo_ato_sus,
					cd_cgc_prestador,
					nr_nf_prestador,
					cd_atividade_prof_bpa,
					nr_interno_conta,
					nr_seq_proc_princ,
					ie_guia_informada,
					dt_inicio_procedimento,
					ie_emite_conta,
					ie_funcao_medico,
					ie_classif_sus,
					cd_especialidade,
					nm_usuario_p,
					nr_seq_proc_pacote,
					ie_tipo_proc_sus,
					cd_setor_receita,
					vl_adic_plant,
					qt_porte_anestesico,
					tx_hora_extra,
					ie_emite_conta_honor,
					nr_seq_atepacu,
					ie_proc_princ_atend,
					cd_medico_req,
					ie_tipo_guia,
					ie_video,
					nr_doc_interno,
					ie_auditoria,
					nr_seq_grupo_rec,
					cd_medico_convenio,
					cd_motivo_ajuste,
					431,
					ie_via_acesso,
					nr_seq_exame,
					ie_intercorrencia,
					nr_seq_origem,
					ie_dispersao,
					cd_setor_paciente,
					nr_seq_conta_origem,
					nr_seq_parcial,
					nr_seq_proc_interno,
					cd_senha,
					nr_seq_aih,
					nr_doc_honor_conv,
					dt_conferencia,
					ie_tipo_atend_bpa,
					ie_grupo_atend_bpa,
					cd_cgc_prestador_conta,
					cd_medico_exec_conta,
					nr_seq_pq_proc,
					ie_tecnica_utilizada,
					nr_sequencia
				from	procedimento_paciente
				where	nr_sequencia	= nr_seq_item_w
				and (coalesce(qt_ajuste_w, qt_procedimento) - qt_procedimento) <> 0);
				
				CALL gerar_proc_pac_auditoria(nr_sequencia_w, nr_seq_auditoria_p, nm_usuario_p);
				
				select	coalesce(max(ie_valor_informado),'N')
				into STRICT	ie_valor_informado_w
				from	procedimento_paciente
				where	nr_sequencia = nr_sequencia_w;
				
				if (ie_valor_informado_w = 'S') then
				
					select	abs(CASE WHEN coalesce(qt_ajuste_w, qt_procedimento)=qt_procedimento THEN  qt_procedimento  ELSE coalesce(qt_ajuste_w, qt_procedimento) - qt_procedimento END )
					into STRICT	qt_ajuste_ww
					from	procedimento_paciente
					where	nr_sequencia	= nr_seq_item_w;
					
					update	procedimento_paciente
					set	vl_procedimento = (dividir(vl_procedimento, qt_procedimento_w)* qt_ajuste_ww),
						vl_medico	= (dividir(vl_medico, qt_procedimento_w)* qt_ajuste_ww),
						vl_anestesista	= (dividir(vl_anestesista, qt_procedimento_w)* qt_ajuste_ww),
						vl_materiais 	= (dividir(vl_materiais, qt_procedimento_w)* qt_ajuste_ww)
					where	nr_sequencia	= nr_sequencia_w;
					
				end if;
				
				select 	count(*)
				into STRICT	qt_registro_w
				from	procedimento_paciente
				where	nr_sequencia	= nr_sequencia_w;
				
				if (qt_registro_w		> 0 ) then
						
					insert into procedimento_participante(	
							nr_sequencia,
							nr_seq_partic,
							ie_funcao,
							dt_atualizacao,
							nm_usuario,
							cd_pessoa_fisica,
							cd_cgc,
							ie_valor_informado,
							ie_emite_conta,
							vl_participante ,
							vl_conta ,
							nr_lote_contabil,
							nr_conta_medico,
							ie_tipo_servico_sus,
							ie_tipo_ato_sus,
							qt_ponto_sus ,
							vl_ponto_sus ,
							vl_original ,
							ie_responsavel_credito,
							pr_procedimento,
							cd_especialidade,
							pr_faturar,
							cd_medico_convenio,
							nr_doc_honor_conv,
							nr_seq_proc_crit_repasse,
							ie_tiss_tipo_guia,
							nr_cirurgia ,
							cd_cbo,
							ie_doc_executor,
							ie_participou_sus)  
					(SELECT		nr_sequencia_w,
							nr_seq_partic,
							ie_funcao,
							dt_atualizacao,
							nm_usuario_p,
							cd_pessoa_fisica,
							cd_cgc,
							ie_valor_informado,
							ie_emite_conta,
							vl_participante * indice_w,
							vl_conta * indice_w,
							nr_lote_contabil,
							nr_conta_medico,
							ie_tipo_servico_sus,
							ie_tipo_ato_sus,
							qt_ponto_sus * indice_w,
							vl_ponto_sus * indice_w,
							vl_original * indice_w,
							ie_responsavel_credito,
							pr_procedimento,
							cd_especialidade,
							pr_faturar,    
							cd_medico_convenio,
							nr_doc_honor_conv,
							nr_seq_proc_crit_repasse,
							ie_tiss_tipo_guia,
							nr_cirurgia ,
							cd_cbo,
							ie_doc_executor,
							ie_participou_sus
					from		procedimento_participante
					where		nr_sequencia	= nr_seq_item_w);
				end if;
				end;
			else
				begin
			
				tx_ajuste_proc_w	:= (tx_proc_original_w - tx_ajuste_w);
				
				if (coalesce(tx_ajuste_proc_w,0) > 0) then				
					indice_w	:= 1;
				else
					indice_w	:= -1;				
				end if;

				insert	into procedimento_paciente(nr_sequencia,
					nr_atendimento,
					dt_entrada_unidade,
					cd_procedimento,
					dt_procedimento,
					qt_procedimento,
					dt_atualizacao,
					nm_usuario,
					cd_medico,
					cd_convenio,
					cd_categoria,
					cd_pessoa_fisica,
					dt_prescricao,
					ds_observacao,
					vl_procedimento,
					vl_medico,
					vl_anestesista,
					vl_materiais,
					cd_edicao_amb,
					cd_tabela_servico,
					dt_vigencia_preco,
					cd_procedimento_princ,
					dt_procedimento_princ,
					dt_acerto_conta,
					dt_acerto_convenio,
					dt_acerto_medico,
					vl_auxiliares,
					vl_custo_operacional,
					tx_medico,
					tx_anestesia,
					nr_prescricao,
					nr_sequencia_prescricao,
					cd_motivo_exc_conta,
					ds_compl_motivo_excon,
					cd_acao,
					qt_devolvida,
					cd_motivo_devolucao,
					nr_cirurgia,
					nr_doc_convenio,
					cd_medico_executor,
					ie_cobra_pf_pj,
					nr_laudo,
					dt_conta,
					cd_setor_atendimento,
					cd_conta_contabil,
					cd_procedimento_aih,
					ie_origem_proced,
					nr_aih,
					ie_responsavel_credito,
					tx_procedimento,
					cd_equipamento,
					ie_valor_informado,
					cd_estabelecimento_custo,
					cd_tabela_custo,
					cd_situacao_glosa,
					nr_lote_contabil,
					cd_procedimento_convenio,
					nr_seq_autorizacao,
					ie_tipo_servico_sus,
					ie_tipo_ato_sus,
					cd_cgc_prestador,
					nr_nf_prestador,
					cd_atividade_prof_bpa,
					nr_interno_conta,
					nr_seq_proc_princ,
					ie_guia_informada,
					dt_inicio_procedimento,
					ie_emite_conta,
					ie_funcao_medico,
					ie_classif_sus,
					cd_especialidade,
					nm_usuario_original,
					nr_seq_proc_pacote,
					ie_tipo_proc_sus,
					cd_setor_receita,
					vl_adic_plant,
					qt_porte_anestesico,
					tx_hora_extra,
					ie_emite_conta_honor,
					nr_seq_atepacu,
					ie_proc_princ_atend,
					cd_medico_req,
					ie_tipo_guia,
					ie_video,
					nr_doc_interno,
					ie_auditoria,
					nr_seq_grupo_rec,
					cd_medico_convenio,
					cd_motivo_ajuste,
					nr_seq_cor_exec,
					ie_via_acesso,
					nr_seq_exame,
					ie_intercorrencia,
					nr_seq_origem,
					ie_dispersao,
					cd_setor_paciente,
					nr_seq_conta_origem,
					nr_seq_parcial,
					nr_seq_proc_interno,
					cd_senha,
					nr_seq_aih,
					nr_doc_honor_conv,
					dt_conferencia,
					ie_tipo_atend_bpa,
					ie_grupo_atend_bpa,
					cd_cgc_prestador_conta,
					cd_medico_exec_conta,
					nr_seq_pq_proc,
					ie_tecnica_utilizada,
					nr_seq_orig_audit)
				(SELECT	nr_sequencia_w,
					nr_atendimento,
					dt_entrada_unidade,
					cd_procedimento,
					dt_procedimento,
					(qt_procedimento * -1)  * indice_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_medico,
					coalesce(cd_convenio_w,cd_convenio),
					coalesce(cd_categoria_w,cd_categoria),
					cd_pessoa_fisica,
					dt_prescricao,
					ds_observacao,
					(vl_procedimento * dividir(tx_ajuste_proc_w,100) * -1),
					(vl_medico * dividir(tx_ajuste_proc_w,100) * -1),
					(vl_anestesista * dividir(tx_ajuste_proc_w,100) * -1),
					(vl_materiais * dividir(tx_ajuste_proc_w,100)* -1),
					cd_edicao_amb,
					cd_tabela_servico,
					dt_vigencia_preco,
					cd_procedimento_princ,
					dt_procedimento_princ,
					dt_acerto_conta,
					dt_acerto_convenio,
					dt_acerto_medico,
					vl_auxiliares,
					vl_custo_operacional,
					tx_medico,
					tx_anestesia,
					nr_prescricao,
					nr_sequencia_prescricao,
					cd_motivo_exc_conta,
					ds_compl_motivo_excon,
					cd_acao,
					qt_devolvida,
					cd_motivo_devolucao,
					nr_cirurgia,
					nr_doc_convenio,
					cd_medico_executor,
					ie_cobra_pf_pj,
					nr_laudo,
					dt_conta,
					cd_setor_atendimento,
					cd_conta_contabil,
					cd_procedimento_aih,
					ie_origem_proced,
					nr_aih,
					ie_responsavel_credito,
					tx_ajuste_proc_w  * -1,
					cd_equipamento,
					'S',
					cd_estabelecimento_custo,
					cd_tabela_custo,
					cd_situacao_glosa,
					nr_lote_contabil,
					cd_procedimento_convenio,
					nr_seq_autorizacao,
					ie_tipo_servico_sus,
					ie_tipo_ato_sus,
					cd_cgc_prestador,
					nr_nf_prestador,
					cd_atividade_prof_bpa,
					nr_interno_conta,
					nr_seq_proc_princ,
					ie_guia_informada,
					dt_inicio_procedimento,
					ie_emite_conta,
					ie_funcao_medico,
					ie_classif_sus,
					cd_especialidade,
					nm_usuario_p,
					nr_seq_proc_pacote,
					ie_tipo_proc_sus,
					cd_setor_receita,
					vl_adic_plant,
					qt_porte_anestesico,
					tx_hora_extra,
					ie_emite_conta_honor,
					nr_seq_atepacu,
					ie_proc_princ_atend,
					cd_medico_req,
					ie_tipo_guia,
					ie_video,
					nr_doc_interno,
					ie_auditoria,
					nr_seq_grupo_rec,
					cd_medico_convenio,
					cd_motivo_ajuste,
					431,
					ie_via_acesso,
					nr_seq_exame,
					ie_intercorrencia,
					nr_seq_origem,
					ie_dispersao,
					cd_setor_paciente,
					nr_seq_conta_origem,
					nr_seq_parcial,
					nr_seq_proc_interno,
					cd_senha,
					nr_seq_aih,
					nr_doc_honor_conv,
					dt_conferencia,
					ie_tipo_atend_bpa,
					ie_grupo_atend_bpa,
					cd_cgc_prestador_conta,
					cd_medico_exec_conta,
					nr_seq_pq_proc,
					ie_tecnica_utilizada,
					nr_sequencia
				from	procedimento_paciente
				where	nr_sequencia	= nr_seq_item_w
				and (coalesce(tx_ajuste_w, tx_procedimento) - tx_procedimento) <> 0);
				
				CALL gerar_proc_pac_auditoria(nr_sequencia_w, nr_seq_auditoria_p, nm_usuario_p);
				
				end;
				
				select 	count(*)
				into STRICT	qt_registro_w
				from	procedimento_paciente
				where	nr_sequencia	= nr_sequencia_w;
				
				if (qt_registro_w		> 0 ) then
					insert into procedimento_participante(	
							nr_sequencia,
							nr_seq_partic,
							ie_funcao,
							dt_atualizacao,
							nm_usuario,
							cd_pessoa_fisica,
							cd_cgc,
							ie_valor_informado,
							ie_emite_conta,
							vl_participante ,
							vl_conta ,
							nr_lote_contabil,
							nr_conta_medico,
							ie_tipo_servico_sus,
							ie_tipo_ato_sus,
							qt_ponto_sus ,
							vl_ponto_sus ,
							vl_original ,
							ie_responsavel_credito,
							pr_procedimento,
							cd_especialidade,
							pr_faturar,
							cd_medico_convenio,
							nr_doc_honor_conv,
							nr_seq_proc_crit_repasse,
							ie_tiss_tipo_guia,
							nr_cirurgia ,
							cd_cbo,
							ie_doc_executor,
							ie_participou_sus)  
					(SELECT		nr_sequencia_w,
							nr_seq_partic,
							ie_funcao,
							dt_atualizacao,
							nm_usuario_p,
							cd_pessoa_fisica,
							cd_cgc,
							ie_valor_informado,
							ie_emite_conta,
							(vl_participante * dividir(tx_ajuste_proc_w,100) * indice_w),
							(vl_conta * dividir(tx_ajuste_proc_w,100) * indice_w),
							nr_lote_contabil,
							nr_conta_medico,
							ie_tipo_servico_sus,
							ie_tipo_ato_sus,
							qt_ponto_sus ,
							vl_ponto_sus ,
							(vl_original * dividir(tx_ajuste_proc_w,100) * indice_w) ,
							ie_responsavel_credito,
							pr_procedimento,
							cd_especialidade,
							pr_faturar,    
							cd_medico_convenio,
							nr_doc_honor_conv,
							nr_seq_proc_crit_repasse,
							ie_tiss_tipo_guia,
							nr_cirurgia ,
							cd_cbo,
							ie_doc_executor,
							ie_participou_sus
					from		procedimento_participante
					where		nr_sequencia	= nr_seq_item_w);
				end if;
				
				
				
			end if;
			
			update	procedimento_paciente
			set	ie_auditoria	= 'S',
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia	= nr_seq_item_w;
	
			begin
			update	procedimento_paciente
			set	ie_auditoria	= CASE WHEN ie_calcular_proc_auditado_w='N' THEN  'S'  ELSE 'N' END ,
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia	= nr_sequencia_w;
			exception
				when others then
				nr_sequencia_w	:= nr_sequencia_w;
			end;

			begin
			if (ie_classificacao_w = 1) then
				CALL atualiza_preco_proc_amb(nr_sequencia_w, nm_usuario_p);
			else
				CALL Atualiza_preco_servico(nr_sequencia_w, nm_usuario_p);
			end if;
			exception
				when others then
				nr_sequencia_w	:= nr_sequencia_w;
			end;
			
			update	procedimento_paciente
			set	ie_auditoria = 'S'
			where	nr_sequencia = nr_sequencia_w;

			end;
		else

			update	procedimento_paciente
			set	ie_auditoria	= 'S',
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia	= nr_seq_item_w;
		end if;
		end;
			
------------------------------------- OS 187628 Hospital Christovao da Gama, Excluir o procedimento e lancar um novo devido ao ajuste (-) nao agrupar nas guias do TISS
	elsif (ie_proc_mat_w	= 2) and (ie_exclui_proc_agrup_w = 'S') then
		begin		

		select  max(coalesce(b.ie_classificacao,1))
		into STRICT	ie_classificacao_w		
		from  	procedimento 		b,
           		procedimento_paciente 	a
		where 	a.cd_procedimento  = b.cd_procedimento
		and 	a.ie_origem_proced = b.ie_origem_proced
		and 	a.nr_sequencia     = nr_seq_item_w;
		
		if (nr_seq_atepacu_w IS NOT NULL AND nr_seq_atepacu_w::text <> '') then
			begin

			select	max(cd_setor_atendimento),
				max(dt_entrada_unidade)
			into STRICT	cd_setor_atend_w,
				dt_entrada_unidade_w
			from	atend_paciente_unidade
			where	nr_seq_interno		= coalesce(nr_seq_atepacu_w,0);


			update	procedimento_paciente
			set	ie_auditoria		= 'S',
				nr_seq_atepacu		= nr_seq_atepacu_w,
				cd_setor_atendimento	= cd_setor_atend_w,
				dt_entrada_unidade	= dt_entrada_unidade_w,
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia		= nr_seq_item_w;

			end;
		end if;
		
		--Lancar o procedimento na conta, copia fiel a esse que acabou de ser excluido, porem com a qtde correta.	
		select	nextval('procedimento_paciente_seq')
		into STRICT	nr_sequencia_w
		;

		if (coalesce(tx_ajuste_w,0) = 0) then
			begin					
			
			insert	into procedimento_paciente(nr_sequencia,
				nr_atendimento,
				dt_entrada_unidade,
				cd_procedimento,
				dt_procedimento,
				qt_procedimento,
				dt_atualizacao,
				nm_usuario,
				cd_medico,
				cd_convenio,
				cd_categoria,
				cd_pessoa_fisica,
				dt_prescricao,
				ds_observacao,
				vl_procedimento,
				vl_medico,
				vl_anestesista,
				vl_materiais,
				cd_edicao_amb,
				cd_tabela_servico,
				dt_vigencia_preco,
				cd_procedimento_princ,
				dt_procedimento_princ,
				dt_acerto_conta,
				dt_acerto_convenio,
				dt_acerto_medico,
				vl_auxiliares,
				vl_custo_operacional,
				tx_medico,
				tx_anestesia,
				nr_prescricao,
				nr_sequencia_prescricao,
				cd_motivo_exc_conta,
				ds_compl_motivo_excon,
				cd_acao,
				qt_devolvida,
				cd_motivo_devolucao,
				nr_cirurgia,
				nr_doc_convenio,
				cd_medico_executor,
				ie_cobra_pf_pj,
				nr_laudo,
				dt_conta,
				cd_setor_atendimento,
				cd_conta_contabil,
				cd_procedimento_aih,
				ie_origem_proced,
				nr_aih,
				ie_responsavel_credito,
				tx_procedimento,
				cd_equipamento,
				ie_valor_informado,
				cd_estabelecimento_custo,
				cd_tabela_custo,
				cd_situacao_glosa,
				nr_lote_contabil,
				cd_procedimento_convenio,
				nr_seq_autorizacao,
				ie_tipo_servico_sus,
				ie_tipo_ato_sus,
				cd_cgc_prestador,
				nr_nf_prestador,
				cd_atividade_prof_bpa,
				nr_interno_conta,
				nr_seq_proc_princ,
				ie_guia_informada,
				dt_inicio_procedimento,
				ie_emite_conta,
				ie_funcao_medico,
				ie_classif_sus,
				cd_especialidade,
				nm_usuario_original,
				nr_seq_proc_pacote,
				ie_tipo_proc_sus,
				cd_setor_receita,
				vl_adic_plant,
				qt_porte_anestesico,
				tx_hora_extra,
				ie_emite_conta_honor,
				nr_seq_atepacu,
				ie_proc_princ_atend,
				cd_medico_req,
				ie_tipo_guia,
				ie_video,
				nr_doc_interno,
				ie_auditoria,
				nr_seq_grupo_rec,
				cd_medico_convenio,
				cd_motivo_ajuste,
				nr_seq_cor_exec,
				ie_via_acesso,
				nr_seq_exame,
				ie_intercorrencia,
				nr_seq_origem,
				ie_dispersao,
				cd_setor_paciente,
				nr_seq_conta_origem,
				nr_seq_parcial,
				nr_seq_proc_interno,
				cd_senha,
				nr_seq_aih,
				nr_doc_honor_conv,
				dt_conferencia,
				ie_tipo_atend_bpa,
				ie_grupo_atend_bpa,
				cd_cgc_prestador_conta,
				cd_medico_exec_conta,
				nr_seq_pq_proc,
				ie_tecnica_utilizada,
				nr_seq_orig_audit)
			(SELECT	nr_sequencia_w,
				nr_atendimento,
				dt_entrada_unidade,
				cd_procedimento,
				dt_procedimento,
				qt_ajuste_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_medico,
				cd_convenio,
				cd_categoria,
				cd_pessoa_fisica,
				dt_prescricao,
				ds_texto_302308_w || nr_seq_item_w || ') ' || substr(ds_observacao,1, 200), --Lancamento originado da Auditoria (seq. 
				vl_procedimento,
				vl_medico,
				vl_anestesista,
				vl_materiais,
				cd_edicao_amb,
				cd_tabela_servico,
				dt_vigencia_preco,
				cd_procedimento_princ,
				dt_procedimento_princ,
				dt_acerto_conta,
				dt_acerto_convenio,
				dt_acerto_medico,
				vl_auxiliares,
				vl_custo_operacional,
				tx_medico,
				tx_anestesia,
				nr_prescricao,
				nr_sequencia_prescricao,
				cd_motivo_exc_conta,
				ds_compl_motivo_excon,
				cd_acao,
				qt_devolvida,
				cd_motivo_devolucao,
				nr_cirurgia,
				nr_doc_convenio,
				cd_medico_executor,
				ie_cobra_pf_pj,
				nr_laudo,
				dt_conta,
				cd_setor_atendimento,
				cd_conta_contabil,
				cd_procedimento_aih,
				ie_origem_proced,
				nr_aih,
				ie_responsavel_credito,
				tx_procedimento,
				cd_equipamento,
				ie_valor_informado,
				cd_estabelecimento_custo,
				cd_tabela_custo,
				cd_situacao_glosa,
				nr_lote_contabil,
				cd_procedimento_convenio,
				nr_seq_autorizacao,
				ie_tipo_servico_sus,
				ie_tipo_ato_sus,
				cd_cgc_prestador,
				nr_nf_prestador,
				cd_atividade_prof_bpa,
				nr_interno_conta,
				nr_seq_proc_princ,
				ie_guia_informada,
				dt_inicio_procedimento,
				ie_emite_conta,
				ie_funcao_medico,
				ie_classif_sus,
				cd_especialidade,
				nm_usuario_p,
				nr_seq_proc_pacote,
				ie_tipo_proc_sus,
				cd_setor_receita,
				vl_adic_plant,
				qt_porte_anestesico,
				tx_hora_extra,
				ie_emite_conta_honor,
				nr_seq_atepacu,
				ie_proc_princ_atend,
				cd_medico_req,
				ie_tipo_guia,
				ie_video,
				nr_doc_interno,
				ie_auditoria,
				nr_seq_grupo_rec,
				cd_medico_convenio,
				cd_motivo_ajuste,
				431,
				ie_via_acesso,
				nr_seq_exame,
				ie_intercorrencia,
				nr_seq_origem,
				ie_dispersao,
				cd_setor_paciente,
				nr_seq_conta_origem,
				nr_seq_parcial,
				nr_seq_proc_interno,
				cd_senha,
				nr_seq_aih,
				nr_doc_honor_conv,
				dt_conferencia,
				ie_tipo_atend_bpa,
				ie_grupo_atend_bpa,
				cd_cgc_prestador_conta,
				cd_medico_exec_conta,
				nr_seq_pq_proc,
				ie_tecnica_utilizada,
				nr_sequencia
			from	procedimento_paciente
			where	nr_sequencia	= nr_seq_item_w
			and 	coalesce(qt_ajuste_w, qt_procedimento) <> 0
			and (coalesce(qt_ajuste_w, qt_procedimento) - qt_procedimento) <> 0);
			
			CALL gerar_proc_pac_auditoria(nr_sequencia_w, nr_seq_auditoria_p, nm_usuario_p);
				
			select 	count(*)
			into STRICT	qt_registro_w
			from	procedimento_paciente
			where	nr_sequencia = nr_sequencia_w;
			
			select 	count(*)
			into STRICT	qt_partic_w
			from 	procedimento_participante
			where 	nr_sequencia = nr_seq_item_w;
				
			if (qt_registro_w	> 0 ) and (qt_partic_w > 0) then
						
				insert into procedimento_participante(	
					nr_sequencia,
					nr_seq_partic,
					ie_funcao,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					cd_cgc,
					ie_valor_informado,
					ie_emite_conta,
					vl_participante ,
					vl_conta ,
					nr_lote_contabil,
					nr_conta_medico,
					ie_tipo_servico_sus,
					ie_tipo_ato_sus,
					qt_ponto_sus ,
					vl_ponto_sus ,
					vl_original ,
					ie_responsavel_credito,
					pr_procedimento,
					cd_especialidade,
					pr_faturar,
					cd_medico_convenio,
					nr_doc_honor_conv,
					nr_seq_proc_crit_repasse,
					ie_tiss_tipo_guia,
					nr_cirurgia ,
					cd_cbo,
					ie_doc_executor,
					ie_participou_sus)  
				(SELECT	nr_sequencia_w,
					nr_seq_partic,
					ie_funcao,
					dt_atualizacao,
					nm_usuario_p,
					cd_pessoa_fisica,
					cd_cgc,
					ie_valor_informado,
					ie_emite_conta,
					vl_participante,
					vl_conta,
					nr_lote_contabil,
					nr_conta_medico,
					ie_tipo_servico_sus,
					ie_tipo_ato_sus,
					qt_ponto_sus,
					vl_ponto_sus,
					vl_original,
					ie_responsavel_credito,
					pr_procedimento,
					cd_especialidade,
					pr_faturar,    
					cd_medico_convenio,
					nr_doc_honor_conv,
					nr_seq_proc_crit_repasse,
					ie_tiss_tipo_guia,
					nr_cirurgia ,
					cd_cbo,
					ie_doc_executor,
					ie_participou_sus
				from	procedimento_participante
				where	nr_sequencia = nr_seq_item_w);
			end if;
			
			-- Excluir o procedimento da conta, conforme a opcao da auditoria "Excluir procedimento da conta"
			if (qt_registro_w > 0) or (coalesce(qt_ajuste_w, 1) = 0) then
			
				if (coalesce(cd_motivo_exc_agrup_w,0) <> 0) then
					cd_motivo_exc_conta_w	:= cd_motivo_exc_agrup_w;
				end if;
				
				if (coalesce(cd_motivo_exc_conta_w,0) = 0) then
					select 	max(cd_motivo_exc_conta)
					into STRICT	cd_motivo_exc_conta_w
					from 	parametro_faturamento
					where 	cd_estabelecimento = cd_estabelecimento_w;
				end if;
				
				select	coalesce(max(nr_seq_motivo),0)
				into STRICT	nr_seq_motivo_w
				from	auditoria_propaci
				where	nr_sequencia = nr_seq_item_propaci_w;
				
				CALL Excluir_proc_conta_audit(nr_seq_item_propaci_w, nr_seq_item_w, cd_motivo_exc_conta_w, '999#', 0, nm_usuario_p);  --999#  Significa que nao deve limpar a qtde ajuste
		
				if (qt_registro_w > 0) then
					begin
					if (ie_classificacao_w = 1) then
						CALL atualiza_preco_proc_amb(nr_sequencia_w, nm_usuario_p);
					else
						CALL Atualiza_preco_servico(nr_sequencia_w, nm_usuario_p);
					end if;
					exception
						when others then
						nr_sequencia_w	:= nr_sequencia_w;
					end;
					
					--Vincular na auditoria o novo item que foi lancado com a qtde correta (Qtde ajuste)
					select 	max(nr_interno_conta),
						max(qt_procedimento)
					into STRICT	nr_interno_conta_w,
						qt_procedimento_w
					from 	procedimento_paciente
					where 	nr_sequencia = nr_sequencia_w;
					
					update	procedimento_paciente
					set	ie_auditoria	= 'S',
						ds_observacao	= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
					where	nr_sequencia	= nr_sequencia_w;
					
					CALL Atualizar_Lista_Itens_Audit(nr_interno_conta_w, nr_sequencia_w, 2, qt_procedimento_w, nm_usuario_p,
						nr_seq_motivo_w, null, 'N');
					
				end if;
				
			else
				
				update	procedimento_paciente
				set	ie_auditoria	= 'S',
					ds_observacao	= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
				where	nr_sequencia	= nr_seq_item_w;
				
			end if;
			
			end;
		
		else
		
			begin
			
			tx_ajuste_proc_w	:= (tx_proc_original_w - tx_ajuste_w);
			
			if (coalesce(tx_ajuste_proc_w,0) > 0) then				
				indice_w	:= 1;
			else
				indice_w	:= -1;				
			end if;

			insert	into procedimento_paciente(nr_sequencia,
				nr_atendimento,
				dt_entrada_unidade,
				cd_procedimento,
				dt_procedimento,
				qt_procedimento,
				dt_atualizacao,
				nm_usuario,
				cd_medico,
				cd_convenio,
				cd_categoria,
				cd_pessoa_fisica,
				dt_prescricao,
				ds_observacao,
				vl_procedimento,
				vl_medico,
				vl_anestesista,
				vl_materiais,
				cd_edicao_amb,
				cd_tabela_servico,
				dt_vigencia_preco,
				cd_procedimento_princ,
				dt_procedimento_princ,
				dt_acerto_conta,
				dt_acerto_convenio,
				dt_acerto_medico,
				vl_auxiliares,
				vl_custo_operacional,
				tx_medico,
				tx_anestesia,
				nr_prescricao,
				nr_sequencia_prescricao,
				cd_motivo_exc_conta,
				ds_compl_motivo_excon,
				cd_acao,
				qt_devolvida,
				cd_motivo_devolucao,
				nr_cirurgia,
				nr_doc_convenio,
				cd_medico_executor,
				ie_cobra_pf_pj,
				nr_laudo,
				dt_conta,
				cd_setor_atendimento,
				cd_conta_contabil,
				cd_procedimento_aih,
				ie_origem_proced,
				nr_aih,
				ie_responsavel_credito,
				tx_procedimento,
				cd_equipamento,
				ie_valor_informado,
				cd_estabelecimento_custo,
				cd_tabela_custo,
				cd_situacao_glosa,
				nr_lote_contabil,
				cd_procedimento_convenio,
				nr_seq_autorizacao,
				ie_tipo_servico_sus,
				ie_tipo_ato_sus,
				cd_cgc_prestador,
				nr_nf_prestador,
				cd_atividade_prof_bpa,
				nr_interno_conta,
				nr_seq_proc_princ,
				ie_guia_informada,
				dt_inicio_procedimento,
				ie_emite_conta,
				ie_funcao_medico,
				ie_classif_sus,
				cd_especialidade,
				nm_usuario_original,
				nr_seq_proc_pacote,
				ie_tipo_proc_sus,
				cd_setor_receita,
				vl_adic_plant,
				qt_porte_anestesico,
				tx_hora_extra,
				ie_emite_conta_honor,
				nr_seq_atepacu,
				ie_proc_princ_atend,
				cd_medico_req,
				ie_tipo_guia,
				ie_video,
				nr_doc_interno,
				ie_auditoria,
				nr_seq_grupo_rec,
				cd_medico_convenio,
				cd_motivo_ajuste,
				nr_seq_cor_exec,
				ie_via_acesso,
				nr_seq_exame,
				ie_intercorrencia,
				nr_seq_origem,
				ie_dispersao,
				cd_setor_paciente,
				nr_seq_conta_origem,
				nr_seq_parcial,
				nr_seq_proc_interno,
				cd_senha,
				nr_seq_aih,
				nr_doc_honor_conv,
				dt_conferencia,
				ie_tipo_atend_bpa,
				ie_grupo_atend_bpa,
				cd_cgc_prestador_conta,
				cd_medico_exec_conta,
				nr_seq_pq_proc,
				ie_tecnica_utilizada,
				nr_seq_orig_audit)
			(SELECT	nr_sequencia_w,
				nr_atendimento,
				dt_entrada_unidade,
				cd_procedimento,
				dt_procedimento,
				(qt_procedimento * -1)  * indice_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_medico,
				coalesce(cd_convenio_w,cd_convenio),
				coalesce(cd_categoria_w,cd_categoria),
				cd_pessoa_fisica,
				dt_prescricao,
				ds_observacao,
				(vl_procedimento * dividir(tx_ajuste_proc_w,100) * -1),
				(vl_medico * dividir(tx_ajuste_proc_w,100) * -1),
				(vl_anestesista * dividir(tx_ajuste_proc_w,100) * -1),
				(vl_materiais * dividir(tx_ajuste_proc_w,100)* -1),
				cd_edicao_amb,
				cd_tabela_servico,
				dt_vigencia_preco,
				cd_procedimento_princ,
				dt_procedimento_princ,
				dt_acerto_conta,
				dt_acerto_convenio,
				dt_acerto_medico,
				vl_auxiliares,
				vl_custo_operacional,
				tx_medico,
				tx_anestesia,
				nr_prescricao,
				nr_sequencia_prescricao,
				cd_motivo_exc_conta,
				ds_compl_motivo_excon,
				cd_acao,
				qt_devolvida,
				cd_motivo_devolucao,
				nr_cirurgia,
				nr_doc_convenio,
				cd_medico_executor,
				ie_cobra_pf_pj,
				nr_laudo,
				dt_conta,
				cd_setor_atendimento,
				cd_conta_contabil,
				cd_procedimento_aih,
				ie_origem_proced,
				nr_aih,
				ie_responsavel_credito,
				tx_ajuste_proc_w  * -1,
				cd_equipamento,
				'S',
				cd_estabelecimento_custo,
				cd_tabela_custo,
				cd_situacao_glosa,
				nr_lote_contabil,
				cd_procedimento_convenio,
				nr_seq_autorizacao,
				ie_tipo_servico_sus,
				ie_tipo_ato_sus,
				cd_cgc_prestador,
				nr_nf_prestador,
				cd_atividade_prof_bpa,
				nr_interno_conta,
				nr_seq_proc_princ,
				ie_guia_informada,
				dt_inicio_procedimento,
				ie_emite_conta,
				ie_funcao_medico,
				ie_classif_sus,
				cd_especialidade,
				nm_usuario_p,
				nr_seq_proc_pacote,
				ie_tipo_proc_sus,
				cd_setor_receita,
				vl_adic_plant,
				qt_porte_anestesico,
				tx_hora_extra,
				ie_emite_conta_honor,
				nr_seq_atepacu,
				ie_proc_princ_atend,
				cd_medico_req,
				ie_tipo_guia,
				ie_video,
				nr_doc_interno,
				ie_auditoria,
				nr_seq_grupo_rec,
				cd_medico_convenio,
				cd_motivo_ajuste,
				431,
				ie_via_acesso,
				nr_seq_exame,
				ie_intercorrencia,
				nr_seq_origem,
				ie_dispersao,
				cd_setor_paciente,
				nr_seq_conta_origem,
				nr_seq_parcial,
				nr_seq_proc_interno,
				cd_senha,
				nr_seq_aih,
				nr_doc_honor_conv,
				dt_conferencia,
				ie_tipo_atend_bpa,
				ie_grupo_atend_bpa,
				cd_cgc_prestador_conta,
				cd_medico_exec_conta,
				nr_seq_pq_proc,
				ie_tecnica_utilizada,
				nr_sequencia
			from	procedimento_paciente
			where	nr_sequencia	= nr_seq_item_w
			and (coalesce(tx_ajuste_w, tx_procedimento) - tx_procedimento) <> 0);
			
			CALL gerar_proc_pac_auditoria(nr_sequencia_w, nr_seq_auditoria_p, nm_usuario_p);
			
			end;
			
			select 	count(*)
			into STRICT	qt_registro_w
			from	procedimento_paciente
			where	nr_sequencia	= nr_sequencia_w;
			
			if (qt_registro_w		> 0 ) then
				insert into procedimento_participante(	
						nr_sequencia,
						nr_seq_partic,
						ie_funcao,
						dt_atualizacao,
						nm_usuario,
						cd_pessoa_fisica,
						cd_cgc,
						ie_valor_informado,
						ie_emite_conta,
						vl_participante ,
						vl_conta ,
						nr_lote_contabil,
						nr_conta_medico,
						ie_tipo_servico_sus,
						ie_tipo_ato_sus,
						qt_ponto_sus ,
						vl_ponto_sus ,
						vl_original ,
						ie_responsavel_credito,
						pr_procedimento,
						cd_especialidade,
						pr_faturar,
						cd_medico_convenio,
						nr_doc_honor_conv,
						nr_seq_proc_crit_repasse,
						ie_tiss_tipo_guia,
						nr_cirurgia ,
						cd_cbo,
						ie_doc_executor,
						ie_participou_sus)  
				(SELECT		nr_sequencia_w,
						nr_seq_partic,
						ie_funcao,
						dt_atualizacao,
						nm_usuario_p,
						cd_pessoa_fisica,
						cd_cgc,
						ie_valor_informado,
						ie_emite_conta,
						(vl_participante * dividir(tx_ajuste_proc_w,100) * indice_w),
						(vl_conta * dividir(tx_ajuste_proc_w,100) * indice_w),
						nr_lote_contabil,
						nr_conta_medico,
						ie_tipo_servico_sus,
						ie_tipo_ato_sus,
						qt_ponto_sus ,
						vl_ponto_sus ,
						(vl_original * dividir(tx_ajuste_proc_w,100) * indice_w) ,
						ie_responsavel_credito,
						pr_procedimento,
						cd_especialidade,
						pr_faturar,    
						cd_medico_convenio,
						nr_doc_honor_conv,
						nr_seq_proc_crit_repasse,
						ie_tiss_tipo_guia,
						nr_cirurgia ,
						cd_cbo,
						ie_doc_executor,
						ie_participou_sus
				from		procedimento_participante
				where		nr_sequencia	= nr_seq_item_w);
			end if;
			
			update	procedimento_paciente
			set	ie_auditoria	= 'S',
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia	= nr_seq_item_w;
	
			begin
			update	procedimento_paciente
			set	ie_auditoria	= CASE WHEN ie_calcular_proc_auditado_w='N' THEN  'S'  ELSE 'N' END ,
				ds_observacao		= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia	= nr_sequencia_w;
			exception
				when others then
				nr_sequencia_w	:= nr_sequencia_w;
			end;

			begin
			if (ie_classificacao_w = 1) then
				CALL atualiza_preco_proc_amb(nr_sequencia_w, nm_usuario_p);
			else
				CALL Atualiza_preco_servico(nr_sequencia_w, nm_usuario_p);
			end if;
			exception
				when others then
				nr_sequencia_w	:= nr_sequencia_w;
			end;
			
			update	procedimento_paciente
			set	ie_auditoria = 'S'
			where	nr_sequencia = nr_sequencia_w;
			
		end if;
		end;	
	
	end if;
	end;
end loop;
close c01;

update	auditoria_conta_paciente
set	dt_liberacao	= clock_timestamp(),
	dt_atualizacao	= clock_timestamp(),
	nm_usuario	= nm_usuario_p,
	nm_usuario_lib  = nm_usuario_p,
	vl_auditoria_lib = obter_valor_auditoria(nr_sequencia,nr_interno_conta)
where	nr_sequencia	= nr_seq_auditoria_p;

ie_resumo_auditoria_w := coalesce(obter_valor_param_usuario(1116, 193, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S');

if (ie_resumo_auditoria_w = 'S') then
	CALL Atualizar_Resumo_Auditoria(nr_seq_auditoria_p,'F',nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_auditoria_conta (nr_seq_auditoria_p bigint, nm_usuario_p text) FROM PUBLIC;

