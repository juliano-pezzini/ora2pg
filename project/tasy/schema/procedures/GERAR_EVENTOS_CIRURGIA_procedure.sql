-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eventos_cirurgia ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, dt_evento_p timestamp, nm_usuario_p text) AS $body$
DECLARE

data_evento_w	timestamp := null;
cd_profissional_w	varchar(10);
nr_sequencia_w		bigint;
nr_sequencia_ww		bigint;
cd_estabelecimento_w		bigint := wheb_usuario_pck.get_cd_estabelecimento;
dt_inicio_evento_w		evento_cirurgia_paciente.dt_inicio_evento%type := dt_evento_p;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	evento_cirurgia a
	where	not exists (	SELECT	1
				from	evento_cirurgia_paciente x
				where	x.nr_cirurgia = nr_cirurgia_p
				and	x.nr_seq_evento = a.nr_sequencia
				and	coalesce(x.ie_situacao,'A') = 'A')
	and	((a.cd_estabelecimento = cd_estabelecimento_w) or (coalesce(a.cd_estabelecimento::text, '') = ''))
	and	coalesce(a.ie_situacao,'A') = 'A'
	and      coalesce(ie_exibicao, 'A') IN ('A', 'P')
	AND SUBSTR(obter_se_evento_lib_perfil(nr_cirurgia_p,nr_seq_pepo_p,a.nr_sequencia,wheb_usuario_pck.get_cd_perfil),1,1) = 'S'
	order by nr_seq_execucao;
		
					

BEGIN

select	obter_pessoa_fisica_usuario(nm_usuario_p,'C')
into STRICT	cd_profissional_w
;

open C01;
loop
fetch C01 into	
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	/*insert into logx_tasy values(sysdate,nm_usuario_p,68955,'Procedure = gerar_eventos_cirurgia; Sequencia = '||nr_sequencia_ww||' Evento = '||nr_sequencia_w||' Cirurgia = '||nr_cirurgia_p||'  Numero do processo ='||nr_seq_pepo_p||' data do evento = '||data_evento_w); */

		
	select	max(dt_registro)		
	into STRICT	data_evento_w		
	from 	evento_cirurgia_paciente
	where	nr_seq_evento	= (	SELECT 	max(nr_seq_evento_dep)
					from	evento_cirurgia
					where	nr_sequencia 	= nr_sequencia_w
					and	coalesce(ie_situacao,'A') = 'A')
	and	nr_cirurgia	=	nr_cirurgia_p
	and	coalesce(ie_situacao,'A') = 'A';
			
	if (coalesce(data_evento_w::text, '') = '')	then
				
		data_evento_w := coalesce(dt_evento_p, trunc(clock_timestamp()));
	end if;
	select	nextval('evento_cirurgia_paciente_seq')
	into STRICT	nr_sequencia_ww
	;
	
	insert into evento_cirurgia_paciente(
		nr_sequencia,
		nr_seq_evento,
		nr_cirurgia,
		nr_seq_pepo,
		ds_observacao,
		dt_registro,
		cd_profissional,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_final_evento,
		ie_situacao,
		dt_inicio_evento)
	SELECT 	nr_sequencia_ww,
		nr_sequencia_w,
		nr_cirurgia_p,
		nr_seq_pepo_p,
		null,
		data_evento_w,
		cd_profissional_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		null,
		'A',
		dt_inicio_evento_w
	;

	commit;
	
	end;
	
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eventos_cirurgia ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, dt_evento_p timestamp, nm_usuario_p text) FROM PUBLIC;

