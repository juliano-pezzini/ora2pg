-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_gestao_vendas ( dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_canal_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_dia_w		timestamp;
dt_inicial_prospect_w	timestamp;
nr_seq_cliente_w	bigint;
qt_cliente_dia_w	bigint;
qt_dias_w		bigint;
qt_total_ativo_w	bigint;
dt_final_prospect_w	timestamp;
ds_retorno_w		double precision;
dt_abertura_canal_w	timestamp;
dt_fechamento_canal_w	timestamp;
qt_aberto_periodo_w	bigint;
nr_seq_canal_cliente_w	bigint;

C01 CURSOR FOR
	SELECT	trunc(dt_dia,'dd')
	from	dia_v
	where	trunc(dt_dia,'month')	between dt_inicial_p and dt_final_p;

C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	com_cliente a
	where	exists (	SELECT	1
				from	com_cliente_log x
				where	a.nr_sequencia	= x.nr_seq_cliente
				and	x.ie_log	= 2);


BEGIN

qt_aberto_periodo_w := 0;

delete from w_gestao_vendas; commit;

open C01;
loop
fetch C01 into
	dt_dia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_cliente_dia_w	:= 0;
	qt_dias_w		:= qt_dias_w + 1;

	open C02;
	loop
	fetch C02 into
		nr_seq_cliente_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		/* Data inicial do prospect */

		select	max(a.dt_log)
		into STRICT	dt_inicial_prospect_w
		from	com_cliente_log a
		where	a.ie_log		= 2
		and	a.ie_classificacao	= 'P'
		and	a.nr_seq_cliente	= nr_seq_cliente_w;

		if (dt_inicial_prospect_w IS NOT NULL AND dt_inicial_prospect_w::text <> '') then
			/* Data final do prospect */

			select	coalesce(max(a.dt_log),clock_timestamp())
			into STRICT	dt_final_prospect_w
			from	com_cliente_log a
			where	a.ie_log		= 2
			and	coalesce(a.dt_log,clock_timestamp())	>= dt_inicial_prospect_w
			and	a.ie_classificacao	<> 'P'
			and	a.nr_seq_cliente	= nr_seq_cliente_w;

			if (coalesce(nr_seq_canal_p,0) <> 0) then
				/* Data de abertura do canal */

				/*select	max(a.dt_log)
				into	dt_abertura_canal_w
				from	com_cliente_log a
				where	a.nr_seq_canal	= nr_seq_canal_p
				and	a.ie_log	= 3
				and	a.nr_seq_cliente	= nr_seq_cliente_w;*/
				--if (dt_abertura_canal_w is null) then
				select	coalesce(max(a.dt_inicio_atuacao),clock_timestamp() + interval '1 days')
				into STRICT	dt_abertura_canal_w
				from	com_canal_cliente a
				where	a.nr_seq_canal	= nr_seq_canal_p
				and	a.nr_seq_cliente	= nr_seq_cliente_w
				and	a.ie_tipo_atuacao	= 'V';
				--end if;
				/* Data de fechamento do canal */

				/*select	max(a.dt_log)
				into	dt_fechamento_canal_w
				from	com_cliente_log a
				where	a.nr_seq_canal	= nr_seq_canal_p
				and	a.ie_log	= 4
				and	a.nr_seq_cliente	= nr_seq_cliente_w;*/
				--if (dt_fechamento_canal_w is null) then
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_canal_cliente_w
				from	com_canal_cliente
				where	coalesce(dt_fim_atuacao::text, '') = ''
				and	nr_seq_cliente	= nr_seq_cliente_w
				and	nr_seq_canal	= nr_seq_canal_p
				and	ie_tipo_atuacao	= 'V';

				if (nr_seq_canal_cliente_w > 0) then
					dt_fechamento_canal_w	:= clock_timestamp();
				else
					select	coalesce(max(a.dt_fim_atuacao),clock_timestamp())
					into STRICT	dt_fechamento_canal_w
					from	com_canal_cliente a
					where	a.nr_seq_canal	= nr_seq_canal_p
					and	a.nr_seq_cliente	= nr_seq_cliente_w
					and	a.ie_tipo_atuacao	= 'V'
					and	a.dt_fim_atuacao	>= dt_abertura_canal_w;
				end if;
				--end if;
			end if;

			if (trunc(dt_inicial_prospect_w,'dd') = trunc(dt_dia_w,'dd')) then
				if ((coalesce(nr_seq_canal_p,0) <> 0) and (dt_dia_w between trunc(dt_abertura_canal_w,'dd') and fim_dia(dt_fechamento_canal_w))) or (coalesce(nr_seq_canal_p,0) = 0) then
					qt_aberto_periodo_w	:= qt_aberto_periodo_w + 1;
				end if;
			end if;

			if (dt_dia_w between trunc(dt_inicial_prospect_w,'dd') and fim_dia(dt_final_prospect_w)) then
				if ((coalesce(nr_seq_canal_p,0) <> 0) and (dt_dia_w between trunc(dt_abertura_canal_w,'dd') and fim_dia(dt_fechamento_canal_w))) or (coalesce(nr_seq_canal_p,0) = 0) then
					qt_cliente_dia_w	:= qt_cliente_dia_w + 1;
				end if;
			end if;
		end if;

		end;
	end loop;
	close C02;

	insert into w_gestao_vendas(	NR_SEQUENCIA,
					DT_REFERENCIA,
					QT_ATIVOS,
					DT_ATUALIZACAO,
					NM_USUARIO,
					DT_ATUALIZACAO_NREC,
					NM_USUARIO_NREC,
					QT_ABERTO_PERIODO,
					IE_TIPO_INFORMACAO)
				values (	nextval('w_gestao_vendas_seq'),
					dt_dia_w,
					qt_cliente_dia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					0,
					'A');
	end;
end loop;
close C01;

insert into w_gestao_vendas(	NR_SEQUENCIA,
				DT_REFERENCIA,
				QT_ATIVOS,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				QT_ABERTO_PERIODO,
				IE_TIPO_INFORMACAO)
			values (	nextval('w_gestao_vendas_seq'),
				dt_dia_w,
				qt_cliente_dia_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(qt_aberto_periodo_w,0),
				'P');

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_gestao_vendas ( dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_canal_p bigint, nm_usuario_p text) FROM PUBLIC;

