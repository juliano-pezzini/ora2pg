-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_autor_regra (nr_atendimento_p bigint, nr_seq_material_p bigint, nr_seq_proced_p bigint, nr_prescricao_p bigint, nr_seq_mat_prescr_p bigint, nr_seq_proc_prescr_p bigint, ie_evento_p text, nm_usuario_p text, nr_seq_agenda_p bigint, nr_seq_proc_interno_p bigint, nr_seq_gestao_p bigint, nr_seq_agenda_consulta_p bigint, nr_seq_agenda_pac_opme_p bigint, nr_seq_agenda_proc_adic_p bigint, nr_seq_proc_orcamento_p text default '', nr_seq_mat_orcamento_p text default '', nr_seq_parametro3_p text default '') AS $body$
DECLARE


cd_setor_entrega_prescr_w	bigint;
cd_convenio_atend_w		bigint;
cd_convenio_prescr_w		bigint;
ie_tipo_atendimento_atend_w	smallint;
cd_classif_setor_atend_w	bigint;
cd_tipo_acomodacao_atend_w	bigint;
cd_edicao_convenio_regra_w	bigint;
cd_convenio_regra_w		bigint;
cd_classif_setor_regra_w	bigint;
cd_tipo_acomodacao_regra_w	bigint;
nr_seq_regra_w			bigint;
ie_tipo_atendimento_regra_w	smallint;
ie_tipo_autorizacao_w		varchar(2);
ie_exige_just_medica_w		varchar(2);
qt_hora_antecedencia_w		bigint;
ie_internado_w			varchar(2);
ie_gerar_autorizacao_w		varchar(2);
ie_erro_67_w			bigint;
dt_final_vigencia_w		timestamp;
cd_convenio_partic_w		integer;
dt_inicio_vigencia_w		timestamp;
cont_w				integer;
ie_dados_completo_w		varchar(1);
cd_plano_convenio_w		varchar(10);
cd_categoria_partic_w		varchar(10);
cd_material_w			integer;
cd_setor_atendimento_w		integer := null;
cd_setor_atend_uni_w		integer;
ie_regra_w			varchar(2) := '';
ds_retorno_w			varchar(255);
ie_bloqueio_agenda_w		varchar(1);
cd_convenio_mat_w		integer := null;
ds_erro_w			varchar(255):= '';
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_procedimento_w		double precision;
nr_seq_exame_w			bigint;
dt_procedimento_w		timestamp;
nr_seq_regra_retorno_w		bigint;
cd_estabelecimento_w		bigint;
qt_material_w			double precision;
dt_atendimento_w		timestamp;
nr_seq_regra_ret_proc_w		bigint;
nr_sequencia_autor_w		bigint;
ie_nova_autorizacao_w		varchar(1) := 'N';
ie_tipo_regra_w			varchar(2) := 'A';
ie_resp_autor_w			varchar(3) := null;

cd_proced_consulta_w		bigint;
ie_origem_proced_consulta_w	bigint;
ie_autor_particular_w		varchar(1)	:= 'N';

nr_seq_agenda_proc_w		bigint	:= null;
nr_prescricao_w			bigint;
nr_seq_proc_prescr_w		bigint;
nr_seq_mat_prescr_w		bigint;
cd_convenio_proc_adic_w		integer;

qt_reg_w			integer;

nr_prescricao_proc_w		bigint;
nr_seq_prescr_proc_w		integer;
cd_categoria_w			varchar(10);
cd_categoria_regra_w		varchar(255);

ie_dia_util_autor_w		varchar(1)	:= 'N';
dt_antecipacao_w		timestamp;
ie_autor_kit_w			varchar(1)	:= 'N';
cd_kit_material_w		integer;
cd_medico_w			varchar(10);
ie_autor_generico_w		varchar(1);

ie_tipo_guia_regra_w		varchar(2)	:= null;
ie_tipo_guia_atend_w		varchar(2)	:= null;

dt_retorno_dt_vigencia_w	timestamp;
ie_gerar_mat_esp_w		varchar(1);
ie_carater_inter_sus_regra_w	varchar(255);
ie_carater_inter_sus_w		varchar(255);
nr_sequencia_w			bigint;
qt_dia_autorizado_w		bigint;
nr_seq_proc_interno_assoc_w	bigint;
ie_tipo_util_w			varchar(15);
nr_seq_proc_adic_w		bigint;
qt_proc_conta_w			double precision;
qt_proc_autor_w			double precision;
dt_proc_diaria_w		timestamp;
qt_proc_diaria_w		double precision;
cd_setor_proc_diaria_w		bigint;
ds_observacao_regra_w		varchar(4000)	:= null;
ie_conv_autor_exec_w		varchar(1);
ie_autor_mat_conta_w		varchar(1);
cd_plano_regra_w		varchar(10);
nr_cirurgia_w			bigint;
nr_seq_proc_interno_w		bigint;
qt_autor_vaga_w			bigint;
ie_autor_vaga_atend_w		varchar(10);
cd_setor_atend_regra_w		integer;
qt_dias_idade_w			bigint;
qt_dia_autor_rn_w		bigint;
cd_local_estoque_w		smallint;
nr_seq_agenda_cirurgia_w	            cirurgia.nr_seq_agenda%type;
qt_proced_autor_w		double precision;
ie_cons_qtd_proc_autor_w	varchar(1) := 'N';
ie_clinica_w			integer;
ie_clinica_atend_w		integer;
ie_unic_intern_transf_rn_w 	varchar(15) := 'N';
ie_existe_proc_orcamento_w	varchar(15) := 'N';
nr_seq_agenda_cons_prescr_w	            prescr_medica.nr_seq_agecons%type;
nr_seq_agenda_prescr_w		            prescr_medica.nr_seq_agenda%type;
nr_seq_material_w		bigint;
ie_troca_conv_partic_kit_w	varchar(15) := 'N';
ie_gera_kit_partic_w		varchar(15) := 'N';
nr_interno_conta_w		bigint;
ie_consid_proc_int_adic_w	varchar(15);
qt_dia_internacao_w		double precision := 0;
qt_dia_internacao_conv_w	double precision := 0;
dt_vigencia_inicial_w		timestamp;
dt_vigencia_final_w		timestamp;
hr_inicial_w			timestamp;
hr_final_w			timestamp;
cd_especialidade_w		integer;
cd_pessoa_fisica_w		varchar(10);
qt_anos_idade_w			bigint;
qt_idade_min_w			smallint;
qt_idade_max_w			smallint;
cd_material_exec_w		integer;
ie_autor_mat_exec_w		varchar(1);
cd_material_exec_ww		integer;
ie_carater_cirurgia_regra_w	varchar(1);
ie_carater_cirurgia_w		varchar(1);
ie_classif_agenda_cons_regra_w	varchar(5);
ie_classif_agenda_consulta_w	varchar(5);
hr_atual_w			timestamp;
nr_dia_semana_w			smallint;
ie_feriado_dia_w		varchar(1);
nr_seq_mat_autor_w		material_autorizado.nr_sequencia%type;
ie_glosa_w			regra_ajuste_proc.ie_glosa%type;
nr_seq_regra_preco_w		regra_ajuste_proc.nr_sequencia%type;
ie_somente_item_w		regra_convenio_plano.ie_somente_item%type;
nr_atend_agenda_w		atendimento_paciente.nr_atendimento%type;
cd_medico_resp_w                atendimento_paciente.cd_medico_resp%type;
ie_feriado_w			regra_gerar_autorizacao.ie_feriado%type;
dt_dia_semana_w			regra_gerar_autorizacao.dt_dia_semana%type;
ie_gerar_inicio_vigencia_w	regra_gerar_autorizacao.ie_gerar_inicio_vigencia%type;
ie_atual_qt_solic_autor_w	convenio_estabelecimento.ie_atual_qt_solic_autor%type;
ie_lado_w			agenda_paciente_proc.ie_lado%type;			
qt_prescricoes_w		bigint := 0;
dt_inicio_vig_regra_w		timestamp;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
qt_atend_diag_med_w			smallint;
qt_atendo_diag_doenca_w			smallint;
CD_DOENCAS_W						varchar(255);

/*SO-2220426*/

c01 CURSOR FOR
SELECT	cd_edicao_convenio,
	cd_convenio,
	cd_classif_setor,
	cd_tipo_acomodacao,
	ie_tipo_atendimento,
	ie_tipo_autorizacao,
	ie_exige_just_medica,
	qt_hora_antecedencia,
	ie_internado,
	nr_sequencia,
	ie_tipo_regra,
	cd_procedimento,
	ie_origem_proced,
	ie_tipo_guia,
	ie_carater_inter_sus,
	cd_categoria,
	cd_plano,
	cd_setor_atendimento,
	qt_dia_autor_rn,
	ie_clinica,
	coalesce(ie_unic_intern_transf_rn,'N'),
	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_vigencia_inicial,clock_timestamp())),
	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_vigencia_final,clock_timestamp())),
	hr_inicial,
	hr_final,
	coalesce(qt_idade_min,0),
	coalesce(qt_idade_max,999),
	ie_carater_cirurgia,
	ie_classif_agenda_consulta,
	ie_feriado,
	dt_dia_semana,
	ie_gerar_inicio_vigencia
from	regra_gerar_autorizacao
where	ie_evento			= ie_evento_p
and	cd_estabelecimento		= cd_estabelecimento_w
and	cd_convenio			= cd_convenio_atend_w
and	ie_dados_completo_w		= 'S'
and	coalesce(ie_tipo_util, ie_tipo_util_w) = ie_tipo_util_w
and	coalesce(cd_especialidade,coalesce(cd_especialidade_w,0)) = coalesce(cd_especialidade_w,0)
and	coalesce(ie_situacao, 'A')		= 'A'
and	substr(obter_se_regra_aut_lib_perfil(nr_sequencia),1,1) = 'S'
order by
	coalesce(cd_setor_atendimento,0)desc,
	coalesce(ie_tipo_atendimento,0)desc,
	coalesce(cd_classif_setor,0)desc,	
	ie_tipo_autorizacao desc;
	
C02 CURSOR FOR
	SELECT	nr_sequencia
	from	material_atend_paciente
	where	cd_kit_material		= cd_kit_material_w
	and	nr_interno_conta	= nr_interno_conta_w;

C03 CURSOR FOR
	SELECT CD_DOENCA_CID
	from REGRA_GERAR_AUTOR_CID
	where NR_SEQ_REGRA_AUTOR = nr_seq_regra_w;
	

BEGIN
ie_dados_completo_w	:= 'S';

begin
	
nr_prescricao_w		:= nr_prescricao_p;
nr_seq_proc_prescr_w	:= nr_seq_proc_prescr_p;
nr_seq_mat_prescr_w	:= nr_seq_mat_prescr_p;
/*SO-2220426*/

if (coalesce(nr_atendimento_p,0) > 0) then

	begin
	select	max(b.cd_convenio),
		max(a.ie_tipo_atendimento),
		max(b.dt_final_vigencia),
		max(b.dt_inicio_vigencia),
		max(b.cd_plano_convenio),
		max(a.cd_estabelecimento),
		max(b.cd_categoria),
		max(b.ie_tipo_guia),
		max(a.ie_carater_inter_sus),
		max(a.ie_clinica),
		max(b.qt_dia_internacao),
		max(trunc(coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_alta),ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_entrada))),
		max(a.cd_pessoa_fisica)
	into STRICT	cd_convenio_atend_w,
		ie_tipo_atendimento_atend_w,
		dt_final_vigencia_w,
		dt_inicio_vigencia_w,
		cd_plano_convenio_w,
		cd_estabelecimento_w,
		cd_categoria_w,
		ie_tipo_guia_atend_w,
		ie_carater_inter_sus_w,
		ie_clinica_atend_w,
		qt_dia_internacao_conv_w,
		qt_dia_internacao_w,
		cd_pessoa_fisica_w
	from	atend_categoria_convenio b,
		atendimento_paciente a
	where	a.nr_atendimento		= b.nr_atendimento
	and	b.nr_seq_interno		= obter_atecaco_atendimento(a.nr_atendimento)
	and	a.nr_atendimento		= nr_atendimento_p;

	select	max(d.cd_classif_setor),
		max(c.cd_tipo_acomodacao),
		max(c.cd_setor_atendimento)
	into STRICT	cd_classif_setor_atend_w,
		cd_tipo_acomodacao_atend_w,
		cd_setor_atend_uni_w
	from	setor_atendimento d,
		atend_paciente_unidade c
	where	c.cd_setor_atendimento	= d.cd_setor_atendimento
	and	c.nr_seq_interno		= obter_atepacu_paciente(nr_atendimento_p, 'A')
	and	c.nr_atendimento		= nr_atendimento_p;

	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182266,'NR_ATENDIMENTO='||nr_atendimento_p);
	end;

elsif (coalesce(nr_seq_agenda_p,0) > 0) and (coalesce(nr_seq_agenda_proc_adic_p,0) = 0) then

	select	a.cd_convenio,
		a.ie_tipo_atendimento,
		a.cd_tipo_acomodacao,
		a.cd_plano,
		b.cd_estabelecimento,
		a.cd_categoria,
		b.cd_especialidade,
		a.cd_pessoa_fisica,
		trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(a.dt_agenda, coalesce(a.hr_inicio, clock_timestamp())),'mi'),
		a.ie_carater_cirurgia,
		a.cd_setor_atendimento
	into STRICT	cd_convenio_atend_w,
		ie_tipo_atendimento_atend_w,
		cd_tipo_acomodacao_atend_w,
		cd_plano_convenio_w,
		cd_estabelecimento_w,
		cd_categoria_w,
		cd_especialidade_w,
		cd_pessoa_fisica_w,
		dt_inicio_vigencia_w,
		ie_carater_cirurgia_w,
		cd_setor_atend_uni_w
	from	agenda b,
		agenda_paciente a
	where	a.nr_sequencia		= nr_seq_agenda_p
	and	a.cd_agenda		= b.cd_agenda;

elsif (coalesce(nr_seq_gestao_p,0) > 0) then

	select	a.cd_convenio,
		b.cd_classif_setor,
		a.cd_tipo_acomod_desej,
		a.cd_estabelecimento,
		a.cd_categoria,
		a.cd_pessoa_fisica
	into STRICT	cd_convenio_atend_w,
		cd_classif_setor_atend_w,
		cd_tipo_acomodacao_atend_w,
		cd_estabelecimento_w,
		cd_categoria_w,
		cd_pessoa_fisica_w
	FROM gestao_vaga a
LEFT OUTER JOIN setor_atendimento b ON (a.cd_setor_desejado = b.cd_setor_atendimento)
WHERE a.nr_sequencia		= nr_seq_gestao_p;
	
	select	max(ap.ie_tipo_atendimento)
	into STRICT	ie_tipo_atendimento_atend_w
	from	gestao_vaga a,
     		atendimento_paciente ap
	where   a.nr_sequencia	= nr_seq_gestao_p
  	and     a.nr_atendimento 	= ap.nr_atendimento;

elsif (coalesce(nr_seq_agenda_consulta_p,0) > 0) then

	select	a.cd_convenio,
		a.cd_tipo_acomodacao,
		b.cd_estabelecimento,
		a.cd_categoria,
		a.ie_tipo_atendimento,
		b.cd_especialidade,
		a.cd_pessoa_fisica,
		a.ie_classif_agenda,
		a.dt_agenda
	into STRICT	cd_convenio_atend_w,
		cd_tipo_acomodacao_atend_w,
		cd_estabelecimento_w,
		cd_categoria_w,
		ie_tipo_atendimento_atend_w,
		cd_especialidade_w,
		cd_pessoa_fisica_w,
		ie_classif_agenda_consulta_w,
		dt_inicio_vigencia_w
	from	agenda b,
		agenda_consulta a
	where	a.cd_agenda	= b.cd_agenda
	and	a.nr_sequencia	= nr_seq_agenda_consulta_p;

elsif (coalesce(nr_seq_agenda_proc_adic_p,0) > 0) then

	if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
		select	coalesce(a.cd_convenio,b.cd_convenio),
			c.cd_estabelecimento,
			b.ie_tipo_atendimento,
			b.cd_tipo_acomodacao,
			b.cd_plano,
			b.cd_categoria,
			b.cd_pessoa_fisica,
			b.ie_carater_cirurgia,
			b.hr_inicio
		into STRICT	cd_convenio_atend_w,
			cd_estabelecimento_w,
			ie_tipo_atendimento_atend_w,
			cd_tipo_acomodacao_atend_w,
			cd_plano_convenio_w,
			cd_categoria_w,
			cd_pessoa_fisica_w,
			ie_carater_cirurgia_w,
			dt_inicio_vigencia_w
		from	agenda c,
			agenda_paciente b,
			agenda_paciente_proc a
		where	b.cd_agenda	= c.cd_agenda
		and	a.nr_sequencia	= b.nr_sequencia
		and	a.nr_sequencia	= nr_seq_agenda_p
		and	a.nr_seq_agenda	= nr_seq_agenda_proc_adic_p;

	end if;
elsif (coalesce(nr_seq_proc_orcamento_p,'0') <> '0') then

	select	x.cd_convenio,
		x.cd_categoria,
		x.cd_plano,
		x.cd_tipo_acomodacao,
		x.cd_estabelecimento,
		x.cd_pessoa_fisica
	into STRICT	cd_convenio_atend_w,
		cd_categoria_w,
		cd_plano_convenio_w,
		cd_tipo_acomodacao_atend_w,
		cd_estabelecimento_w,
		cd_pessoa_fisica_w
	from	orcamento_paciente x,
		orcamento_paciente_proc y
	where	x.nr_sequencia_orcamento = y.nr_sequencia_orcamento
	and	y.nr_sequencia = nr_seq_proc_orcamento_p;
elsif (coalesce(nr_seq_mat_orcamento_p,'0') <> '0') then

	select	x.cd_convenio,
		x.cd_categoria,
		x.cd_plano,
		x.cd_tipo_acomodacao,
		x.cd_estabelecimento,
		x.cd_pessoa_fisica
	into STRICT	cd_convenio_atend_w,
		cd_categoria_w,
		cd_plano_convenio_w,
		cd_tipo_acomodacao_atend_w,
		cd_estabelecimento_w,
		cd_pessoa_fisica_w
	from	orcamento_paciente x,
		orcamento_paciente_mat y
	where	x.nr_sequencia_orcamento = y.nr_sequencia_orcamento
	and	y.nr_sequencia = nr_seq_mat_orcamento_p;
end if;
exception
when no_data_found then
	ie_dados_completo_w		:= 'N';
end;
if	((coalesce(nr_seq_gestao_p,0) > 0)
and (coalesce(nr_atendimento_p,0) > 0) 
and (ie_evento_p = 'GVE')) then
	
	--tratamento para a gerar_necessidade_vaga, pois eh prioritaria a obtencao dos dados pela gestao de vagas, mesmo tendo atendimento
	select	a.cd_convenio,
		b.cd_classif_setor,
		a.cd_tipo_acomod_desej,
		a.cd_estabelecimento,
		a.cd_categoria,
		a.cd_pessoa_fisica
	into STRICT	cd_convenio_atend_w,
		cd_classif_setor_atend_w,
		cd_tipo_acomodacao_atend_w,
		cd_estabelecimento_w,
		cd_categoria_w,
		cd_pessoa_fisica_w
	FROM gestao_vaga a
LEFT OUTER JOIN setor_atendimento b ON (a.cd_setor_desejado = b.cd_setor_atendimento)
WHERE a.nr_sequencia		= nr_seq_gestao_p;
	
	select	max(ap.ie_tipo_atendimento)
	into STRICT	ie_tipo_atendimento_atend_w
	from	gestao_vaga a,
     		atendimento_paciente ap
	where   a.nr_sequencia	 = nr_seq_gestao_p
  	and     a.nr_atendimento = ap.nr_atendimento;
	
end if;

if (nr_seq_agenda_proc_adic_p IS NOT NULL AND nr_seq_agenda_proc_adic_p::text <> '') then

	if (coalesce(nr_seq_agenda_p,0) > 0)then
		
		select	max(a.nr_seq_proc_interno)
		into STRICT	nr_seq_proc_adic_w
		from	agenda_paciente_proc a
		where	a.nr_sequencia	= nr_seq_agenda_p
		and	nr_seq_agenda	= nr_seq_agenda_proc_adic_p;
		
	elsif (coalesce(nr_seq_agenda_consulta_p,0) > 0) then
	
		select	max(a.nr_seq_proc_interno)
		into STRICT	nr_seq_proc_adic_w
		from	agenda_consulta_proc a
		where	a.nr_sequencia	= nr_seq_agenda_proc_adic_p
		and	nr_seq_agenda	= nr_seq_agenda_consulta_p;
	end if;
end if;

select 	coalesce(max(ie_tipo_util),'X')
into STRICT	ie_tipo_util_w
from	proc_interno
where	nr_sequencia = coalesce(nr_seq_proc_interno_p, nr_seq_proc_adic_w);

select	coalesce(max(ie_dia_util_autor),'N'),
	coalesce(max(ie_conv_autor_exec),'N'),
	coalesce(max(ie_cons_qt_proc_autor_cir),'N'),
	coalesce(max(ie_troca_conv_partic_kit),'N'),
	coalesce(max(ie_consid_proc_int_adic),'S')
into STRICT	ie_dia_util_autor_w,
	ie_conv_autor_exec_w,
	ie_cons_qtd_proc_autor_w,
	ie_troca_conv_partic_kit_w,
	ie_consid_proc_int_adic_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

/*lhalves OS 271551 em 24/01/2011*/

if (coalesce(nr_atendimento_p,0) > 0) and (coalesce(nr_seq_proced_p,0) > 0) then
	
	if (ie_conv_autor_exec_w = 'S') then
		
		select	coalesce(max(cd_convenio),cd_convenio_atend_w),
			coalesce(max(cd_categoria),cd_categoria_w),
			coalesce(max(ie_carater_cirurgia), ie_carater_cirurgia_w)
		into STRICT	cd_convenio_atend_w,
			cd_categoria_w,
			ie_carater_cirurgia_w
		from 	procedimento_paciente
		where	nr_sequencia	= nr_seq_proced_p
		and	nr_atendimento	= nr_atendimento_p;
	else
		select	max(ie_carater_cirurgia)
		into STRICT	ie_carater_cirurgia_w
		from 	procedimento_paciente
		where	nr_sequencia	= nr_seq_proced_p
		and	nr_atendimento	= nr_atendimento_p;
	end if;
	
end if;

if (cd_convenio_atend_w IS NOT NULL AND cd_convenio_atend_w::text <> '') then
	select	coalesce(max(ie_autor_generico),'N'),
		coalesce(max(ie_autor_mat_conta),'N'),
		coalesce(max(ie_autor_mat_exec),'N'),
		coalesce(max(ie_atual_qt_solic_autor),'N')
	into STRICT	ie_autor_generico_w,
		ie_autor_mat_conta_w,
		ie_autor_mat_exec_w,
		ie_atual_qt_solic_autor_w
	from	convenio_estabelecimento
	where	cd_convenio		= cd_convenio_atend_w
	and	cd_estabelecimento	= cd_estabelecimento_w;
end if;

qt_dias_idade_w	:= coalesce(trunc((Obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'DIA'))::numeric ),0);
qt_anos_idade_w	:= coalesce(trunc((Obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A'))::numeric ),0);

open c01;
loop
fetch c01 into
	cd_edicao_convenio_regra_w,
	cd_convenio_regra_w,
	cd_classif_setor_regra_w,
	cd_tipo_acomodacao_regra_w,
	ie_tipo_atendimento_regra_w,
	ie_tipo_autorizacao_w,
	ie_exige_just_medica_w,
	qt_hora_antecedencia_w,
	ie_internado_w,
	nr_seq_regra_w,
	ie_tipo_regra_w,
	cd_proced_consulta_w,
	ie_origem_proced_consulta_w,
	ie_tipo_guia_regra_w,
	ie_carater_inter_sus_regra_w,
	cd_categoria_regra_w,
	cd_plano_regra_w,
	cd_setor_atend_regra_w,
	qt_dia_autor_rn_w,
	ie_clinica_w,
	ie_unic_intern_transf_rn_w,
	dt_vigencia_inicial_w,
	dt_vigencia_final_w,
	hr_inicial_w,
	hr_final_w,
	qt_idade_min_w,
	qt_idade_max_w,
	ie_carater_cirurgia_regra_w,
	ie_classif_agenda_cons_regra_w,
	ie_feriado_w,
	dt_dia_semana_w,
	ie_gerar_inicio_vigencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	ie_gerar_autorizacao_w	:= 'N';
	ie_nova_autorizacao_w	:= 'N';
	
	select	pkg_date_utils.get_WeekDay(clock_timestamp()),
		CASE WHEN Obter_Se_Feriado(cd_estabelecimento_w,clock_timestamp())=1 THEN 'S'  ELSE 'N' END
	into STRICT	nr_dia_semana_w,
		ie_feriado_dia_w
	;	
	
	hr_atual_w	:= clock_timestamp();
	hr_inicial_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(hr_atual_w, coalesce(hr_inicial_w,hr_atual_w));
	hr_final_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(hr_atual_w, coalesce(hr_final_w,hr_atual_w));
	/*SO-2220426*/

	if (coalesce(ie_tipo_regra_w,'A') = 'A') and (coalesce(cd_convenio_regra_w, cd_convenio_atend_w) 					= cd_convenio_atend_w) and (coalesce(cd_classif_setor_regra_w, coalesce(cd_classif_setor_atend_w,0))			= coalesce(cd_classif_setor_atend_w,0)) and (coalesce(cd_tipo_acomodacao_regra_w, coalesce(cd_tipo_acomodacao_atend_w,0)) 		= coalesce(cd_tipo_acomodacao_atend_w,0)) and (coalesce(ie_tipo_atendimento_regra_w, coalesce(ie_tipo_atendimento_atend_w,0))		= coalesce(ie_tipo_atendimento_atend_w,0)) and (coalesce(ie_carater_inter_sus_regra_w, coalesce(ie_carater_inter_sus_w, 'X'))		= coalesce(ie_carater_inter_sus_w,'X')) and (coalesce(cd_categoria_regra_w, coalesce(cd_categoria_w, 'X'))				= coalesce(cd_categoria_w,'X')) and (coalesce(ie_tipo_guia_regra_w, coalesce(ie_tipo_guia_atend_w,'X'))			= coalesce(ie_tipo_guia_atend_w,'X')) and (coalesce(cd_plano_regra_w, coalesce(cd_plano_convenio_w,'X'))				= coalesce(cd_plano_convenio_w,'X')) and (coalesce(ie_carater_cirurgia_regra_w, coalesce(ie_carater_cirurgia_w, 'X'))		= coalesce(ie_carater_cirurgia_w,'X')) and (coalesce(cd_setor_atend_regra_w,coalesce(cd_setor_atend_uni_w,0))			= coalesce(cd_setor_atend_uni_w,0)) and
		((ie_evento_p <> 'AC') or /*Somente considerar classif da agenda de consulta se for do evento de agenda consulta*/
		 (coalesce(ie_classif_agenda_cons_regra_w,coalesce(ie_classif_agenda_consulta_w,'X'))	= coalesce(ie_classif_agenda_consulta_w,'X'))) and
		((coalesce(qt_dias_idade_w,0) 							<= coalesce(qt_dia_autor_rn_w,0)) or (coalesce(qt_dia_autor_rn_w,0) = 0)) and (coalesce(ie_clinica_w, coalesce(ie_clinica_atend_w,0))					= coalesce(ie_clinica_atend_w,0)) and (trunc(hr_atual_w,'mi') >= trunc(hr_inicial_w,'mi') 				and (trunc(hr_atual_w,'mi') <= trunc(hr_final_w + 1/1440,'mi'))) and
		((coalesce(nr_seq_gestao_p,0) = 0) or (ie_evento_p = 'GVE')) and
		((dt_vigencia_inicial_w <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(hr_atual_w))		and (dt_vigencia_final_w >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(hr_atual_w))) and (coalesce(dt_dia_semana_w,0) = 0 or (dt_dia_semana_w = nr_dia_semana_w)) 		and (coalesce(ie_feriado_w,'A') = 'A' or (ie_feriado_w = ie_feriado_dia_w)) 		and
		((coalesce(qt_anos_idade_w,0) 						>= qt_idade_min_w) and (coalesce(qt_anos_idade_w,0) 						<= qt_idade_max_w)) then			

		begin
		select	1			-- verificar se tem alguma autorizacao para o atend
		into STRICT	cont_w
		from	estagio_autorizacao b,
			autorizacao_convenio a
		where	a.nr_atendimento	= nr_atendimento_p				
		and	a.ie_tipo_autorizacao	= ie_tipo_autorizacao_w
		and	a.cd_convenio		= cd_convenio_atend_w
		and	b.nr_sequencia		= a.nr_seq_estagio
		and	b.ie_interno		in ('1','2')  LIMIT 1;
		exception
		when no_data_found then
			begin
			select	1			-- verificar se tem alguma autorizacao para a agenda
			into STRICT	cont_w
			from	estagio_autorizacao b,
				autorizacao_convenio a
			where	a.nr_seq_agenda		= nr_seq_agenda_p		
			and	a.ie_tipo_autorizacao	= ie_tipo_autorizacao_w
			and	a.cd_convenio		= cd_convenio_atend_w
			and	b.nr_sequencia		= a.nr_seq_estagio
			and	b.ie_interno		in ('1','2')  LIMIT 1;
			exception
			when no_data_found then
				cont_w	:= 0;
			end;
		end;

		if (cont_w = 0) then
			if (ie_tipo_autorizacao_w	= 1) then	-- internacao
				if (ie_evento_p <> 'TP') then
					select	count(*)
					into STRICT	cont_w
					from	autorizacao_convenio where ((nr_atendimento		= coalesce(nr_atendimento_p,0)) or (nr_seq_agenda			= coalesce(nr_seq_agenda_p,0)))
					and	ie_tipo_autorizacao	= '1' LIMIT 1;
					
				else
					cont_w	:= 0; --Para 'TP' sempre deve gerar
					dt_final_vigencia_w	:= null;
				end if;
				
				if (ie_unic_intern_transf_rn_w = 'S')and (cont_w = 0) then
					begin
					select	count(*)
					into STRICT	cont_w
					from	estagio_autorizacao b,
						autorizacao_convenio a where a.nr_atendimento	= coalesce(nr_atendimento_p,0)
					and	a.ie_tipo_autorizacao	= ie_tipo_autorizacao_w
					and	a.cd_convenio		= cd_convenio_atend_w
					and	b.nr_sequencia		= a.nr_seq_estagio
					and	b.ie_interno		= '10' LIMIT 1;
					exception
					when others then
						cont_w := 0;
					end;
				end if;

				/* Francisco - 08/10/2007 - OS66393 - Autorizacao de internacao so precisa ser gerada 1 vez */

				if (cont_w = 0) and (coalesce(dt_final_vigencia_w::text, '') = '') then
						ie_gerar_autorizacao_w	:= 'S';
				end if;

				if	((cont_w = 0) and (coalesce(dt_final_vigencia_w::text, '') = '' or dt_final_vigencia_w >= clock_timestamp()) and (pkg_i18n.get_user_locale()='en_AU')) then
						ie_gerar_autorizacao_w	:= 'S';
				end if;
				
				if	nr_seq_agenda_p > 0 then
				
					select  COUNT(*)
					into STRICT	cont_w
					from    autorizacao_convenio x, estagio_autorizacao y
					where   x.cd_pessoa_fisica 	= cd_pessoa_fisica_w
					and     x.cd_estabelecimento 	= cd_estabelecimento_w
					and     x.nr_seq_estagio 	= y.nr_sequencia
					and     y.ie_interno not in ('70','90')
					and     x.ie_tipo_autorizacao = '1'
					and     (x.nr_atendimento IS NOT NULL AND x.nr_atendimento::text <> '')
					and     dt_inicio_vigencia_w between x.dt_inicio_vigencia and Coalesce(x.dt_fim_vigencia,clock_timestamp() + interval '999 days');
					
					if	cont_w > 0 then
						ie_gerar_autorizacao_w	:= 'N';
					end if;
				
				end if;
				

			elsif (ie_tipo_autorizacao_w	= 2) then	-- prorrogacao internacao
				/* Francisco - OS 106682 - 22/10/2008 - Tratar somente dias uteis */

				
				if (ie_dia_util_autor_w = 'S') then

					dt_antecipacao_w	:= dt_final_vigencia_w;
					

					if (dt_antecipacao_w IS NOT NULL AND dt_antecipacao_w::text <> '') then

						dt_antecipacao_w	:= dt_final_vigencia_w - qt_hora_antecedencia_w/24;

						while(obter_se_dia_util(dt_antecipacao_w,cd_estabelecimento_w) = 'N') loop
							dt_antecipacao_w	:= dt_antecipacao_w - 1;
						end loop;
						

						if (clock_timestamp() >= dt_antecipacao_w) then

							select	count(*)
							into STRICT	cont_w
							from	autorizacao_convenio a where nr_atendimento	= nr_atendimento_p
							and	ie_tipo_autorizacao	= '2'
							and	clock_timestamp()
								between obter_dia_util_anterior(cd_estabelecimento_w,coalesce(a.dt_inicio_vigencia,a.dt_autorizacao) - (qt_hora_antecedencia_w * 1/24))
								and coalesce(a.dt_fim_vigencia,to_date('31/12/2100','dd/mm/yyyy')) - (qt_hora_antecedencia_w * 1/24) LIMIT 1;

							if (cont_w = 0) then

								ie_gerar_autorizacao_w	:= 'S';
								dt_inicio_vigencia_w		:= coalesce(dt_final_vigencia_w ,dt_inicio_vigencia_w);

								dt_retorno_dt_vigencia_w := obter_fim_vigencia_autor(dt_inicio_vigencia_w, 1, cd_estabelecimento_w, cd_convenio_regra_w, 'U', dt_retorno_dt_vigencia_w);

								dt_inicio_vigencia_w	:= coalesce(dt_retorno_dt_vigencia_w, dt_inicio_vigencia_w);

								/*lhalves OS223182 em 20/07/2010 Soma 1 segundo na data de inicio vigencia para prorrogacao de internacao*/

								dt_inicio_vigencia_w	:= dt_inicio_vigencia_w + (1/24/60/60);

							end if;
						end if;
					end if;
				else
					/* Francisco - 08/10/2007 - OS66393 - Se ja houver 1 prorrogacao no periodo nao deve gerar*/

					select	count(*)
					into STRICT	cont_w
					from	autorizacao_convenio a where nr_atendimento		= coalesce(nr_atendimento_p,0)
					and	ie_tipo_autorizacao	= '2'
					and	clock_timestamp() between coalesce(a.dt_inicio_vigencia,a.dt_autorizacao) - (qt_hora_antecedencia_w * 1/24)  and
						coalesce(a.dt_fim_vigencia,to_date('31/12/2100','dd/mm/yyyy')) - (qt_hora_antecedencia_w * 1/24) LIMIT 1;

					if (cont_w = 0) and (dt_final_vigencia_w IS NOT NULL AND dt_final_vigencia_w::text <> '') and
						(((dt_final_vigencia_w - clock_timestamp()) * 24) <= qt_hora_antecedencia_w) then
							ie_gerar_autorizacao_w	:= 'S';
							dt_inicio_vigencia_w		:= coalesce(dt_final_vigencia_w ,dt_inicio_vigencia_w);

							dt_retorno_dt_vigencia_w := obter_fim_vigencia_autor(dt_inicio_vigencia_w, 1, cd_estabelecimento_w, cd_convenio_regra_w, 'U', dt_retorno_dt_vigencia_w);
							dt_inicio_vigencia_w	:= coalesce(dt_retorno_dt_vigencia_w, dt_inicio_vigencia_w);

							/*lhalves OS223182 em 20/07/2010 Soma 1 segundo na data de inicio vigencia para prorrogacao de internacao*/

							dt_inicio_vigencia_w	:= dt_inicio_vigencia_w + (1/24/60/60);

					end if;
				end if;
			end if;
		end if;

		/*lhalves OS233832 em 21/09/2010*/

		if (ie_evento_p = 'CD') and (ie_tipo_autorizacao_w	in ('1','2')) and --Internacao
			(nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') then

			select 	max(cd_procedimento),
				max(ie_origem_proced),
				max(dt_procedimento),
				max(qt_procedimento),
				max(cd_setor_atendimento),
				max(nr_seq_proc_interno)
			into STRICT 	cd_procedimento_w,
				ie_origem_proced_w,
				dt_proc_diaria_w,
				qt_proc_diaria_w,
				cd_setor_proc_diaria_w,
				nr_seq_proc_interno_w
			from 	procedimento_paciente
			where	nr_sequencia	= nr_seq_proced_p;

			/*lhalves OS283594 - Conforme solicitacao do Consulto Helton, para este evento nao deve ser consistido se o procedimento possui regra.
			consiste_plano_convenio(nr_atendimento_p,
						cd_convenio_atend_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						dt_proc_diaria_w,
						qt_proc_diaria_w,
						ie_tipo_atendimento_atend_w,
						cd_plano_convenio_w,
						null,
						ds_erro_w,
						cd_setor_proc_diaria_w,
						nr_seq_exame_w,
						ie_regra_w,
						null,
						nr_seq_regra_ret_proc_w,
						nr_seq_proc_interno_w,
						cd_categoria_w,
						cd_estabelecimento_w,
						null,
						null);
			*/
			select 	sum(qt_procedimento)
			into STRICT	qt_proc_conta_w
			from 	procedimento_paciente
			where	nr_atendimento		= nr_atendimento_p
			and 	cd_convenio		= cd_convenio_atend_w
			and 	cd_procedimento		= cd_procedimento_w
			and 	ie_origem_proced	= ie_origem_proced_w
			and 	coalesce(cd_motivo_exc_conta::text, '') = '';

			select 	sum(b.qt_autorizada)
			into STRICT	qt_proc_autor_w
			from 	autorizacao_convenio a,
				procedimento_autorizado b,
				estagio_autorizacao c
			where 	a.nr_atendimento	= nr_atendimento_p
			and 	a.nr_sequencia		= b.nr_sequencia_autor
			and 	b.cd_procedimento	= cd_procedimento_w
			and 	b.ie_origem_proced	= ie_origem_proced_w
			and 	a.ie_tipo_autorizacao	= ie_tipo_autorizacao_w
			and 	a.nr_seq_estagio	= c.nr_sequencia
			and	c.ie_interno		= '10';

			if (coalesce(qt_proc_autor_w,0) <= coalesce(qt_proc_conta_w,0)) then
				ie_gerar_autorizacao_w	:= 'S';
			else
				ie_gerar_autorizacao_w	:= 'N';
			end if;
			
			if (ie_dia_util_autor_w = 'S') and (ie_tipo_autorizacao_w = '2') then

				dt_antecipacao_w	:= dt_final_vigencia_w;
					

				if (dt_antecipacao_w IS NOT NULL AND dt_antecipacao_w::text <> '') then

					dt_antecipacao_w	:= dt_final_vigencia_w - qt_hora_antecedencia_w/24;

					while(obter_se_dia_util(dt_antecipacao_w,cd_estabelecimento_w) = 'N') loop
						dt_antecipacao_w	:= dt_antecipacao_w - 1;
					end loop;
					

					if (clock_timestamp() >= dt_antecipacao_w) then

						select	count(*)
						into STRICT	cont_w
						from	autorizacao_convenio a where nr_atendimento	= nr_atendimento_p
						and	ie_tipo_autorizacao	= '2'
						and	clock_timestamp()
							between obter_dia_util_anterior(cd_estabelecimento_w,coalesce(a.dt_inicio_vigencia,a.dt_autorizacao) - (qt_hora_antecedencia_w * 1/24))
							and coalesce(a.dt_fim_vigencia,to_date('31/12/2100','dd/mm/yyyy')) - (qt_hora_antecedencia_w * 1/24) LIMIT 1;

						if (cont_w = 0) then

							ie_gerar_autorizacao_w	:= 'S';
							dt_inicio_vigencia_w		:= coalesce(dt_final_vigencia_w ,dt_inicio_vigencia_w);

							dt_retorno_dt_vigencia_w := obter_fim_vigencia_autor(dt_inicio_vigencia_w, 1, cd_estabelecimento_w, cd_convenio_regra_w, 'U', dt_retorno_dt_vigencia_w);

							dt_inicio_vigencia_w	:= coalesce(dt_retorno_dt_vigencia_w, dt_inicio_vigencia_w);

							/*lhalves OS223182 em 20/07/2010 Soma 1 segundo na data de inicio vigencia para prorrogacao de internacao*/

							dt_inicio_vigencia_w	:= dt_inicio_vigencia_w + (1/24/60/60);
						else
							ie_gerar_autorizacao_w := 'N';
						end if;
					end if;
				end if;
			elsif (ie_tipo_autorizacao_w = '2') then
				/* Francisco - 08/10/2007 - OS66393 - Se ja houver 1 prorrogacao no periodo nao deve gerar*/

				select	count(*)
				into STRICT	cont_w
				from	autorizacao_convenio a where nr_atendimento		= coalesce(nr_atendimento_p,0)
				and	ie_tipo_autorizacao	= '2'
				and	clock_timestamp() between coalesce(a.dt_inicio_vigencia,a.dt_autorizacao) - (qt_hora_antecedencia_w * 1/24)  and
					coalesce(a.dt_fim_vigencia,to_date('31/12/2100','dd/mm/yyyy')) - (qt_hora_antecedencia_w * 1/24) LIMIT 1;

				if (cont_w = 0) and (dt_final_vigencia_w IS NOT NULL AND dt_final_vigencia_w::text <> '') and
					(((dt_final_vigencia_w - clock_timestamp()) * 24) <= qt_hora_antecedencia_w) then
						ie_gerar_autorizacao_w	:= 'S';
						dt_inicio_vigencia_w		:= coalesce(dt_final_vigencia_w ,dt_inicio_vigencia_w);

						dt_retorno_dt_vigencia_w := obter_fim_vigencia_autor(dt_inicio_vigencia_w, 1, cd_estabelecimento_w, cd_convenio_regra_w, 'U', dt_retorno_dt_vigencia_w);
						dt_inicio_vigencia_w	:= coalesce(dt_retorno_dt_vigencia_w, dt_inicio_vigencia_w);

						/*lhalves OS223182 em 20/07/2010 Soma 1 segundo na data de inicio vigencia para prorrogacao de internacao*/

						dt_inicio_vigencia_w	:= dt_inicio_vigencia_w + (1/24/60/60);
				/*elsif	(cont_w > 0) then --lhalves OS 648800 em 23/01/2014, segundo solicitacao do cliente, devera acomular as quantidades solicitadas do proc, se ja possuir uma prorrogacao
					ie_gerar_autorizacao_w := 'N';*/
				end if;
			end if;
		
			if (coalesce(qt_dia_internacao_conv_w,0) > coalesce(qt_dia_internacao_w,0)) then
				begin
				ie_gerar_autorizacao_w := 'N';
				end;
			end if;

		end if;
		/*Fim lhaves OS233832*/



		/*lhalves OS209303 em 20/04/2010 - gravar o qt_dia_autorizado de acordo com as vigencias para a autorizacao de internacao.*/

		if (cont_w > 0) and (ie_tipo_autorizacao_w = 1) and (dt_inicio_vigencia_w IS NOT NULL AND dt_inicio_vigencia_w::text <> '') then

			select	max(nr_sequencia),
				max(qt_dia_autorizado)
			into STRICT 	nr_sequencia_w,
				qt_dia_autorizado_w
			from 	autorizacao_convenio
			where 	nr_atendimento 		= nr_atendimento_p
			and 	ie_tipo_autorizacao 	= 1;

			if (qt_dia_autorizado_w = 0) or (coalesce(qt_dia_autorizado_w::text, '') = '') then

				update	autorizacao_convenio
				set 	qt_dia_autorizado 	= coalesce(dt_final_vigencia_w,dt_inicio_vigencia_w) - dt_inicio_vigencia_w
				where	nr_sequencia 		= nr_sequencia_w;

			end if;
		end if;

		if (ie_tipo_autorizacao_w	= 3) or -- procedimentos
			(ie_tipo_autorizacao_w	= 5) or (ie_tipo_autorizacao_w	= 6) then
			if (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') then
				select	cd_procedimento,
					ie_origem_proced,
					0,/* qt_procedimento, Francisco - 08/07/08 - Mudei p/ 0 pois ja esta na conta quando chama */
					cd_setor_atendimento,
					nr_seq_exame,
					dt_procedimento,
					cd_medico_executor,
					nr_prescricao,
					nr_sequencia_prescricao
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w,
					qt_procedimento_w,
					cd_setor_atendimento_w,
					nr_seq_exame_w,
					dt_procedimento_w,
					cd_medico_w,
					nr_prescricao_w,
					nr_seq_proc_prescr_w
				from	procedimento_paciente
				where	nr_sequencia = nr_seq_proced_p;

			elsif (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_proc_prescr_p IS NOT NULL AND nr_seq_proc_prescr_p::text <> '') then /*francisco - os 38887 - 10/08/06 gerar autorizacao */
				select	a.cd_procedimento,
					a.ie_origem_proced,
					a.qt_procedimento,
					a.cd_setor_atendimento,
					a.nr_seq_exame,
					b.dt_prescricao,
					a.cd_medico_exec,
					b.cd_setor_entrega,
					a.ie_lado
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w,
					qt_procedimento_w,
					cd_setor_atendimento_w,
					nr_seq_exame_w,
					dt_procedimento_w,
					cd_medico_w,
					cd_setor_entrega_prescr_w,
					ie_lado_w
				from	prescr_medica b,
					prescr_procedimento a
				where	a.nr_prescricao		= b.nr_prescricao
				and	a.nr_prescricao		= nr_prescricao_p
				and	a.nr_sequencia		= nr_seq_proc_prescr_p;
			elsif (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (coalesce(nr_seq_agenda_proc_adic_p::text, '') = '') then
				select	cd_procedimento,
					ie_origem_proced,
					1,
					cd_setor_atendimento,
					null,
					dt_agenda,
					coalesce(cd_medico_exec,cd_medico),
					nr_atendimento
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w,
					qt_procedimento_w,
					cd_setor_atendimento_w,
					nr_seq_exame_w,
					dt_procedimento_w,
					cd_medico_w,
					nr_atend_agenda_w
				from	agenda_paciente
				where	nr_sequencia		= nr_seq_agenda_p;
			elsif (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') and (coalesce(nr_seq_agenda_proc_adic_p::text, '') = '') then

				select	a.cd_procedimento,
					a.ie_origem_proced,
					coalesce(a.qt_procedimento,1),
					null,
					a.nr_seq_exame,
					a.dt_agenda,
					coalesce(coalesce(a.cd_medico_req,coalesce(a.cd_medico_solic,a.cd_medico)),b.cd_pessoa_fisica)
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w,
					qt_procedimento_w,
					cd_setor_atendimento_w,
					nr_seq_exame_w,
					dt_procedimento_w,
					cd_medico_w
				from	agenda_consulta a,
					agenda b
				where	a.cd_agenda  = b.cd_agenda
				and	a.nr_sequencia		= nr_seq_agenda_consulta_p;
				
				
				/* Se nao tem na agenda consulta, pegar da regra de geracao */

				if (coalesce(cd_procedimento_w::text, '') = '') then

					select	cd_proced_consulta_w,
						ie_origem_proced_consulta_w,
						coalesce(qt_procedimento,1),
						null,
						nr_seq_exame,
						dt_agenda
					into STRICT	cd_procedimento_w,
						ie_origem_proced_w,
						qt_procedimento_w,
						cd_setor_atendimento_w,
						nr_seq_exame_w,
						dt_procedimento_w
					from	agenda_consulta
					where	nr_sequencia		= nr_seq_agenda_consulta_p;
				end if;
			elsif (nr_seq_agenda_proc_adic_p IS NOT NULL AND nr_seq_agenda_proc_adic_p::text <> '') then

				if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
					select	a.cd_procedimento,
						a.ie_origem_proced,
						a.nr_seq_proc_interno,
						clock_timestamp(),
						coalesce(qt_procedimento,1)
					into STRICT	cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_proc_interno_assoc_w,
						DT_PROCEDIMENTO_W,
						qt_procedimento_w
					from	agenda_paciente_proc a
					where	a.nr_sequencia	= nr_seq_agenda_p
					and	nr_seq_agenda	= nr_seq_agenda_proc_adic_p;

					/*lhalves OS 210616 em 07/05/2010*/

					if (nr_seq_proc_interno_assoc_w IS NOT NULL AND nr_seq_proc_interno_assoc_w::text <> '')and (coalesce(ie_consid_proc_int_adic_w,'S') = 'S') then

						select 	cd_procedimento,
							ie_origem_proced
						into STRICT 	cd_procedimento_w,
							ie_origem_proced_w
						from 	proc_interno
						where 	nr_sequencia = nr_seq_proc_interno_assoc_w;
					end if;

				elsif (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') then

					select	a.cd_procedimento,
						a.ie_origem_proced,
						a.nr_seq_proc_interno,
						clock_timestamp()
					into STRICT	cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_proc_interno_assoc_w,
						DT_PROCEDIMENTO_W
					from	agenda_consulta_proc a
					where	a.nr_seq_agenda	= nr_seq_agenda_consulta_p
					and	a.nr_sequencia	= nr_seq_agenda_proc_adic_p;

					if (nr_seq_proc_interno_assoc_w IS NOT NULL AND nr_seq_proc_interno_assoc_w::text <> '')and (coalesce(ie_consid_proc_int_adic_w,'S') = 'S') then

						select 	cd_procedimento,
							ie_origem_proced
						into STRICT 	cd_procedimento_w,
							ie_origem_proced_w
						from 	proc_interno
						where 	nr_sequencia = nr_seq_proc_interno_assoc_w;
					end if;
					
					if (coalesce(cd_medico_w::text, '') = '') then
						begin
						select	coalesce(coalesce(a.cd_medico_req,coalesce(a.cd_medico_solic,a.cd_medico)),b.cd_pessoa_fisica)
						into STRICT	cd_medico_w
						from	agenda_consulta a,
							agenda b
						where	a.cd_agenda = b.cd_agenda
						and	a.nr_sequencia = nr_seq_agenda_consulta_p;
						end;
					end if;
					
				end if;
			elsif (coalesce(nr_seq_proc_orcamento_p,'0') <> '0') then
				
				select	a.cd_procedimento,
					a.ie_origem_proced,
					a.qt_procedimento,
					a.dt_atualizacao,
					a.nr_seq_exame,
					coalesce(a.cd_setor_atendimento,b.cd_setor_atendimento),
					a.cd_medico,
					'S'
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w,
					qt_procedimento_w,
					dt_procedimento_w,
					nr_seq_exame_w,
					cd_setor_atendimento_w,
					cd_medico_w,
					ie_existe_proc_orcamento_w
				from 	orcamento_paciente_proc a,
					orcamento_paciente b
				where	a.nr_sequencia_orcamento = b.nr_sequencia_orcamento
				and	a.nr_sequencia = nr_seq_proc_orcamento_p;
			
			end if;

			if (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') or (nr_seq_proc_prescr_p IS NOT NULL AND nr_seq_proc_prescr_p::text <> '') or
				(nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '' AND cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') or
				(nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '' AND cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') or (nr_seq_agenda_proc_adic_p IS NOT NULL AND nr_seq_agenda_proc_adic_p::text <> '') or (nr_seq_proc_orcamento_p IS NOT NULL AND nr_seq_proc_orcamento_p::text <> '') and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '')then

				SELECT * FROM consiste_plano_convenio(nr_atendimento_p, cd_convenio_atend_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, qt_procedimento_w, ie_tipo_atendimento_atend_w, cd_plano_convenio_w, null, ds_erro_w, cd_setor_atendimento_w, nr_seq_exame_w, ie_regra_w, nr_seq_agenda_p, nr_seq_regra_ret_proc_w, coalesce(nr_seq_proc_interno_p,nr_seq_proc_interno_assoc_w), /*lhalves OS 210616 em 07/05/2010*/
							cd_categoria_w, cd_estabelecimento_w, cd_setor_entrega_prescr_w, cd_medico_w, cd_pessoa_fisica_w, ie_glosa_w, nr_seq_regra_preco_w, nr_prescricao_w, nr_seq_proc_prescr_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_ret_proc_w, ie_glosa_w, nr_seq_regra_preco_w;
							
					
				if (ie_regra_w in ('3','6','7')) then
					
					ie_gerar_autorizacao_w	:= 'S';
					
					/* francisco - os 54826 - 02/05/07 - gerar nova autorizacao a cada procedimento */

					select	ie_nova_autorizacao,
						ie_resp_autor,
						ie_somente_item,
						ds_observacao
					into STRICT	ie_nova_autorizacao_w,
						ie_resp_autor_w,
						ie_somente_item_w,
						ds_observacao_regra_w
					from	regra_convenio_plano
					where	nr_sequencia = nr_seq_regra_ret_proc_w;

					/* Se a autorizacao ja foi gerada na prescricao nao gerar novamente */

					if (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') then
						select	max(a.nr_prescricao),
							max(a.nr_sequencia_prescricao),
							max(a.nr_cirurgia),
							coalesce(sum((select	sum(x.qt_procedimento)
								from	procedimento_paciente x
								where	x.nr_interno_conta 	= a.nr_interno_conta
								and	x.cd_procedimento	= a.cd_procedimento
								and	x.ie_origem_proced	= a.ie_origem_proced)),0)
						into STRICT	nr_prescricao_proc_w,
							nr_seq_prescr_proc_w,
							nr_cirurgia_w,
							qt_procedimento_w
						from	procedimento_paciente a
						where	a.nr_sequencia	= nr_seq_proced_p;

						if (nr_prescricao_proc_w IS NOT NULL AND nr_prescricao_proc_w::text <> '') and (nr_seq_prescr_proc_w IS NOT NULL AND nr_seq_prescr_proc_w::text <> '') then

							select	count(*)
							into STRICT	qt_reg_w
							from	procedimento_autorizado a,
								autorizacao_convenio b,
								estagio_autorizacao c
							where	a.nr_prescricao		= nr_prescricao_proc_w
							and	a.nr_seq_prescricao	= nr_seq_prescr_proc_w
							and	a.nr_sequencia_autor	= b.nr_sequencia
							and	b.nr_seq_estagio	= c.nr_sequencia
							and	((c.ie_interno not in ('10', '70', '90')) or (coalesce(a.qt_autorizada,0) > 0));
								
							
							if (qt_reg_w > 0) then
									
								ie_gerar_autorizacao_w	:= 'N';
								
							end if;
							
							
						end if;

						if (nr_cirurgia_w IS NOT NULL AND nr_cirurgia_w::text <> '') then

							select	max(nr_seq_agenda)
							into STRICT	nr_seq_agenda_cirurgia_w
							from	cirurgia
							where	nr_cirurgia = nr_cirurgia_w;

							select	count(*),
								coalesce(CASE WHEN max(c.ie_interno)='10' THEN sum(a.qt_autorizada)  ELSE CASE WHEN sum(a.qt_autorizada)=0 THEN sum(a.qt_solicitada)  ELSE sum(a.qt_autorizada) END  END ,0)
							into STRICT	qt_reg_w,
								qt_proced_autor_w
							from	estagio_autorizacao c,
								procedimento_autorizado a,
								autorizacao_convenio b
							where	b.nr_seq_estagio 	= c.nr_sequencia
							and (b.nr_atendimento	= nr_atendimento_p or
								b.nr_seq_agenda		= nr_seq_agenda_cirurgia_w)
							and	a.nr_sequencia_autor	= b.nr_sequencia
							and	c.ie_interno 		<> '70'
							and 	a.cd_procedimento	= cd_procedimento_w
							and 	a.ie_origem_proced	= ie_origem_proced_w
							and	nr_cirurgia_w  		= (obter_cirurgia_autor_convenio(b.nr_sequencia,'NR'))::numeric;
							/*Geliard 26/07/2011 OS340843*/

							
							if	(qt_reg_w > 0 AND ie_cons_qtd_proc_autor_w = 'N') or
								(ie_cons_qtd_proc_autor_w = 'S' AND qt_proced_autor_w >= qt_procedimento_w) then
								ie_gerar_autorizacao_w	:= 'N';
							end if;
							
						end if;
					end if;

					if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_proc_prescr_p IS NOT NULL AND nr_seq_proc_prescr_p::text <> '') then
						
						
						select	count(*)
						into STRICT	qt_reg_w
						from	procedimento_autorizado
						where	nr_prescricao		= nr_prescricao_p
						and	nr_seq_prescricao	= nr_seq_proc_prescr_p;
						
						begin
						select	coalesce(max(nr_seq_agecons),0),
							coalesce(max(nr_seq_agenda),0)
						into STRICT	nr_seq_agenda_cons_prescr_w,
							nr_seq_agenda_prescr_w
						from	prescr_medica
						where	nr_prescricao = nr_prescricao_p;
						exception
						when others then
							nr_seq_agenda_cons_prescr_w := 0;
							nr_seq_agenda_prescr_w	:= 0;
						end;		
							
						
						
						-- OS  333382 Se a autorizacao ja tiver sido gerada no lancamento do proc, nao gerar pela liberacao  / execucao da prescricao
						if (qt_reg_w = 0) then
							select	count(*)
							into STRICT	qt_reg_w
							from 	procedimento_paciente a,
								procedimento_autorizado b
							where	a.nr_seq_proc_autor = b.nr_sequencia
							and	a.nr_sequencia_prescricao = nr_seq_proc_prescr_p
							and	a.nr_prescricao = nr_prescricao_p;
						end if;
						
						if (qt_reg_w = 0)and (nr_seq_agenda_cons_prescr_w > 0) then
							-- OS 387366, nao gerar na liberacao da prescricao caso o proced ja tenha necessidade gerada no agendamento (consulta / servico)
							begin
							select 	count(*)
							into STRICT	qt_reg_w
							from	autorizacao_convenio a,
								estagio_autorizacao b,
								agenda_consulta c,
								prescr_medica d,
								prescr_procedimento e,
								procedimento_autorizado f
							where	a.nr_seq_estagio		= b.nr_sequencia
							and	b.ie_interno 			= '1'
							and	a.nr_seq_agenda_consulta 	= c.nr_sequencia
							and	c.nr_sequencia			= d.nr_seq_agecons
							and	e.nr_prescricao			= d.nr_prescricao
							and	e.nr_prescricao			= nr_prescricao_p
							and	e.nr_sequencia			= nr_seq_proc_prescr_p
							AND	coalesce(f.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
							and	f.nr_sequencia_autor		= a.nr_sequencia
							and	f.cd_procedimento		= e.cd_procedimento
							and	f.ie_origem_proced		= e.ie_origem_proced
							and	((coalesce(nr_seq_exame_w::text, '') = '') or (f.nr_seq_exame = nr_seq_exame_w))
							and	coalesce(f.qt_autorizada,0)			= 0
							and	coalesce(f.qt_solicitada,0)			> 0;
							exception
							when others then
								qt_reg_w := 0;
							end;
						end if;
						
						if (qt_reg_w = 0)and (nr_seq_agenda_prescr_w > 0)then
							begin
							select 	count(*)
							into STRICT	qt_reg_w
							from	autorizacao_convenio a,
								estagio_autorizacao b,
								agenda_paciente c,
								prescr_medica d,
								prescr_procedimento e,
								procedimento_autorizado f
							where	a.nr_seq_estagio		= b.nr_sequencia
							and	b.ie_interno 			= '1'
							and	a.nr_seq_agenda 		= c.nr_sequencia
							and	c.nr_sequencia			= d.nr_seq_agenda
							and	e.nr_prescricao			= d.nr_prescricao
							and	e.nr_prescricao			= nr_prescricao_p
							and	e.nr_sequencia			= nr_seq_proc_prescr_p
							and	f.nr_sequencia_autor		= a.nr_sequencia
							and	f.cd_procedimento		= e.cd_procedimento
							and	f.ie_origem_proced		= e.ie_origem_proced
							AND	coalesce(f.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
							and	coalesce(f.qt_autorizada,0)		= 0
							and	coalesce(f.qt_solicitada,0)		> 0;
							exception
							when others then
								qt_reg_w := 0;
							end;
						end if;
						
						if (ie_lado_w IS NOT NULL AND ie_lado_w::text <> '') then
						
							select	sum(x.qt_procedimento)
							into STRICT	qt_prescricoes_w
							from	prescr_procedimento x,
								prescr_medica w
							where	w.nr_atendimento  	= nr_atendimento_p
							and	x.cd_procedimento 	= cd_procedimento_w
							and	x.ie_origem_proced 	= ie_origem_proced_w
							and	((x.ie_lado		= ie_lado_w) or coalesce(x.ie_lado::text, '') = '')
							and	x.nr_prescricao		= w.nr_prescricao						
							and	coalesce(x.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
							and	((coalesce(nr_seq_exame_w::text, '') = '') or (x.nr_seq_exame = nr_seq_exame_w));
							
						else
							select	sum(x.qt_procedimento)
							into STRICT	qt_prescricoes_w
							from	prescr_procedimento x,
								prescr_medica w
							where	w.nr_atendimento  	= nr_atendimento_p
							and	x.cd_procedimento 	= cd_procedimento_w
							and	x.ie_origem_proced 	= ie_origem_proced_w
							and	x.nr_prescricao		= w.nr_prescricao						
							and	coalesce(x.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
							and	((coalesce(nr_seq_exame_w::text, '') = '') or (x.nr_seq_exame = nr_seq_exame_w));
						end if;
						
						
						if (qt_reg_w = 0) then
						
							begin
							select	count(*)
							into STRICT	qt_reg_w
							from	agenda_paciente a,
								autorizacao_convenio b,
								procedimento_autorizado c,
								estagio_autorizacao d
							where	a.nr_sequencia 		= c.nr_seq_agenda
							and	a.cd_procedimento 	= c.cd_procedimento
							and	a.ie_origem_proced 	= c.ie_origem_proced
							and	b.nr_sequencia		= c.nr_sequencia_autor
							and	d.nr_sequencia		= b.nr_seq_estagio
							and	c.cd_procedimento		= cd_procedimento_w
							and	c.ie_origem_proced	= ie_origem_proced_w
							and 	((c.ie_lado  = coalesce(a.ie_lado,c.ie_lado)) or coalesce(c.ie_lado::text, '') = '')
							AND	coalesce(c.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
							and	b.nr_atendimento 	= nr_atendimento_p
							and	((coalesce(c.qt_autorizada,0) = 0 and (coalesce(c.qt_solicitada,0) >= coalesce(qt_prescricoes_w,0))) or (coalesce(c.qt_autorizada,0) > 0 and (coalesce(c.qt_autorizada,0) >= coalesce(qt_prescricoes_w,0))));
							end;
							
						end if;
						
						if (qt_reg_w = 0) then
							begin
							select	count(*)
							into STRICT	qt_reg_w
							from	agenda_paciente a,
								autorizacao_convenio b,
								procedimento_autorizado c,
								regra_convenio_plano r
							where	a.nr_sequencia 		= c.nr_seq_agenda
							and	b.nr_sequencia		= c.nr_sequencia_autor
							and	c.cd_procedimento	= cd_procedimento_w
							and	c.ie_origem_proced	= ie_origem_proced_w
							AND	coalesce(c.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))	= coalesce(nr_seq_proc_interno_p,0)
							and	b.nr_atendimento 	= nr_atendimento_p
							and 	c.nr_seq_regra_plano	= r.nr_sequencia
							and 	exists (SELECT 	1
									from 	regra_conv_plano_item x 
									where 	x.nr_seq_regra = r.nr_sequencia
									and 	x.cd_procedimento = c.cd_procedimento
									and	x.ie_origem_proced = c.ie_origem_proced
									and	coalesce(x.nr_seq_proc_interno,0) = coalesce(c.nr_seq_proc_interno,0)
									and	x.ie_situacao = 'A'
									and	x.qt_solicitada = c.qt_solicitada)
							and	((coalesce(c.qt_autorizada,0) = 0 and (coalesce(c.qt_solicitada,0) >= coalesce(qt_prescricoes_w,0))) or (coalesce(c.qt_autorizada,0) > 0 and (coalesce(c.qt_autorizada,0) >= coalesce(qt_prescricoes_w,0))));							
							end;
						end if;						
						
						if (qt_reg_w = 0) then
							begin
							select	count(*)
							into STRICT	qt_reg_w
							from	agenda_paciente_proc a,
								autorizacao_convenio b,
								procedimento_autorizado c,
								estagio_autorizacao d
							where	a.nr_sequencia 		= c.nr_seq_agenda
							and	a.cd_procedimento 	= c.cd_procedimento
							and	a.ie_origem_proced 	= c.ie_origem_proced
							and	b.nr_sequencia		= c.nr_sequencia_autor
							and	d.nr_sequencia		= b.nr_seq_estagio
							and	c.cd_procedimento	= cd_procedimento_w
							and	c.ie_origem_proced	= ie_origem_proced_w
							AND	coalesce(c.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
							and	b.nr_atendimento 	= nr_atendimento_p
							and	((coalesce(c.qt_autorizada,0) = 0 and (coalesce(c.qt_solicitada,0) >= qt_prescricoes_w)) or (coalesce(c.qt_autorizada,0) > 0 and (coalesce(c.qt_autorizada,0) >= qt_prescricoes_w)));
							end;
						end if;
						/* Agenda Consulta HSL */

						if (qt_reg_w = 0) then
							begin
							select	count(*)
							into STRICT	qt_reg_w
							from	agenda_consulta a,
								autorizacao_convenio b,
								procedimento_autorizado c,
								estagio_autorizacao d
							where	a.nr_sequencia 		= c.nr_seq_agenda_consulta
							and	a.cd_procedimento 	= c.cd_procedimento
							and	a.ie_origem_proced 	= c.ie_origem_proced
							and	b.nr_sequencia		= c.nr_sequencia_autor
							and	d.nr_sequencia		= b.nr_seq_estagio
							and	c.cd_procedimento	= cd_procedimento_w
							and	c.ie_origem_proced	= ie_origem_proced_w
							AND	coalesce(c.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
							and	((coalesce(nr_seq_exame_w::text, '') = '') or (c.nr_seq_exame = nr_seq_exame_w))
							and	b.nr_atendimento 	= nr_atendimento_p;
							end;
						end if;
						/*  Proc adic */

						if (qt_reg_w = 0) then
							begin
							select	count(*)
							into STRICT	qt_reg_w
							from	agenda_consulta_proc a,
								autorizacao_convenio b,
								procedimento_autorizado c,
								estagio_autorizacao d
							where	a.nr_sequencia 		= c.nr_seq_agenda_consulta
							and	a.cd_procedimento 	= c.cd_procedimento
							and	a.ie_origem_proced 	= c.ie_origem_proced
							and	b.nr_sequencia		= c.nr_sequencia_autor
							and	d.nr_sequencia		= b.nr_seq_estagio
							and	c.cd_procedimento	= cd_procedimento_w
							and	c.ie_origem_proced	= ie_origem_proced_w
							AND	coalesce(c.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
							and	((coalesce(nr_seq_exame_w::text, '') = '') or (c.nr_seq_exame = nr_seq_exame_w))
							and	b.nr_atendimento 	= nr_atendimento_p;
							end;
						end if;

						if (qt_reg_w > 0) then
							ie_gerar_autorizacao_w	:= 'N';
						end if;

						select 	count(*)
						into STRICT 	ie_erro_67_w
						from 	prescr_medica_erro
						where 	nr_regra = 67
						and 	nr_prescricao = nr_prescricao_p
						and 	nr_seq_proced = nr_seq_proc_prescr_p;
			
						select 	max(cd_convenio)
						into STRICT   	cd_convenio_prescr_w
						from   	prescr_procedimento
						where  	nr_prescricao = nr_prescricao_p
						and	   	nr_sequencia = nr_seq_proc_prescr_p;
						
						SELECT * FROM Obter_Convenio_Particular_PF(cd_estabelecimento_w, cd_convenio_prescr_w, cd_pessoa_fisica_w, clock_timestamp(), cd_convenio_partic_w, cd_categoria_partic_w) INTO STRICT cd_convenio_partic_w, cd_categoria_partic_w;
						
						if (ie_erro_67_w > 0) and (cd_convenio_prescr_w = cd_convenio_partic_w) and (cd_convenio_prescr_w <> cd_convenio_atend_w) then
						
							ie_gerar_autorizacao_w := 'N';
						
						end if;
					end if;
					
					
					/*OS 808233 consistir se a autorizacao foi gerada na prescricao antes de gerar o agendamento */

					
					if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
					
						select	count(*)
						into STRICT	qt_reg_w
						from	autorizacao_convenio a,
							procedimento_autorizado b,
							estagio_autorizacao c,
							prescr_medica d
						where	a.nr_sequencia		= b.nr_sequencia_autor
						and	a.nr_seq_estagio 	= c.nr_sequencia
						and	b.cd_procedimento	= cd_procedimento_w
						and	b.ie_origem_proced	= ie_origem_proced_w
						and	a.nr_atendimento	= nr_atend_agenda_w
						AND	coalesce(b.nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
						and	a.nr_prescricao		= d.nr_prescricao
						and	d.nr_seq_agenda		= nr_seq_agenda_p
						and	c.ie_interno not in ('70','90');


						if (qt_reg_w > 0) then
							ie_gerar_autorizacao_w	:= 'N';
						end if;
						
					end if;
					
					
					/* FIM OS 808233 */



					/*lhalves OS 212953 em 10/06/2010 Verifica se ja existe autorizacao para o procedimento adicional para que nao gere nova autorizacao*/

					if (nr_seq_agenda_proc_adic_p IS NOT NULL AND nr_seq_agenda_proc_adic_p::text <> '') then
						if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then

							select	a.cd_procedimento,
								a.ie_origem_proced,
								ie_lado
							into STRICT	cd_procedimento_w,
								ie_origem_proced_w,
								ie_lado_w
							from	agenda_paciente_proc a
							where	a.nr_sequencia	= nr_seq_agenda_p
							and	nr_seq_agenda	= nr_seq_agenda_proc_adic_p;

							select	count(*)
							into STRICT	qt_reg_w
							from	procedimento_autorizado a,
								autorizacao_convenio b,
								estagio_autorizacao c
							where	b.nr_seq_estagio 	= c.nr_sequencia
							and	a.nr_seq_agenda		= nr_seq_agenda_p /*Tem que ser pela agenda do procedimento e nao da autorizacao, pois pode estar em agenda diferente se agenda integrada*/
							and	a.nr_sequencia_autor	= b.nr_sequencia
							and	c.ie_interno <> '70'
							and 	a.cd_procedimento	= cd_procedimento_w
							and 	a.ie_origem_proced	= ie_origem_proced_w
							and	ie_lado			= coalesce(ie_lado_w,'X')
							and (a.nr_seq_proc_interno	= nr_seq_proc_interno_assoc_w or /*Pode ser o mesmo procedimento mas de proc interno diferente*/
								coalesce(nr_seq_proc_interno_assoc_w::text, '') = '');

							if (qt_reg_w > 0) then
								ie_gerar_autorizacao_w	:= 'N';
							end if;
						end if;
					end if;
					
					if (nr_seq_proc_orcamento_p IS NOT NULL AND nr_seq_proc_orcamento_p::text <> '') then
						begin
						select	count(*)
						into STRICT	qt_reg_w
						from	procedimento_autorizado a,
							autorizacao_convenio b,
							estagio_autorizacao c
						where	b.nr_seq_estagio 	= c.nr_sequencia
						and	b.nr_atendimento	= nr_atendimento_p
						and	a.nr_sequencia_autor	= b.nr_sequencia
						and	c.ie_interno <> '70'
						and 	a.cd_procedimento	= cd_procedimento_w
						and 	a.ie_origem_proced	= ie_origem_proced_w;
						end;
						
						if (qt_reg_w > 0) then
							ie_gerar_autorizacao_w	:= 'N';
						end if;
					end if;

				/* Bloqueia prescricao */

				elsif (ie_regra_w in ('5','8')) then
					
					if (coalesce(nr_seq_proced_p, 0) > 0) and (ie_regra_w = '8') then
					
						CALL trocar_convenio_particular(nr_seq_proced_p, nm_usuario_p, 'P');
						
						if (ie_troca_conv_partic_kit_w = 'S') then
							
							cd_kit_material_w := Obter_Kit_Procedimento( nr_atendimento_p, cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_p, cd_setor_atendimento_w, cd_medico_w, cd_kit_material_w);
							
							begin
							select	coalesce(max(a.nr_interno_conta),0)
							into STRICT	nr_interno_conta_w
							from	procedimento_paciente a,
									conta_paciente b
							where	a.nr_sequencia = nr_seq_proced_p;
							exception
							when others then
								nr_interno_conta_w := 0;
							end;
							
							if (coalesce(cd_kit_material_w,0) <> 0) and (nr_interno_conta_w <> 0) then
								
								open C02;
								loop
								fetch C02 into	
									nr_seq_material_w;
								EXIT WHEN NOT FOUND; /* apply on C02 */
									begin
									CALL trocar_convenio_particular(nr_seq_material_w, nm_usuario_p, 'M');	
									end;
								end loop;
								close C02;
								
							end if;

						end if;
						
					end if;

					select	coalesce(max(ie_autor_particular),'N')
					into STRICT	ie_autor_particular_w
					from	regra_convenio_plano
					where	nr_sequencia	= nr_seq_regra_ret_proc_w;

					if (ie_autor_particular_w = 'S') then					
						ie_gerar_autorizacao_w	:= 'S';						
						if (ie_troca_conv_partic_kit_w = 'S') then
								ie_gera_kit_partic_w	:= 'S';
						end if;
					end if;
				end if;

				/* Verificar autorizacao kit */

				if (nr_seq_regra_ret_proc_w IS NOT NULL AND nr_seq_regra_ret_proc_w::text <> '') then

					select	coalesce(max(ie_autor_kit),'N')
					into STRICT	ie_autor_kit_w
					from	regra_convenio_plano
					where	nr_sequencia = nr_seq_regra_ret_proc_w;
				end if;
			end if;

		elsif (ie_tipo_autorizacao_w	= 4) then	-- materiais/medicamentos
			if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
				select	max(cd_material),
					max(cd_convenio),
					max(cd_setor_atendimento),
					coalesce(max(qt_material),0),/*qt_material, Francisco - 04/02/2009 - OS 126327 - Mudei p/ 0 pois ja esta na conta quando chama */
					max(dt_atendimento),
					max(nr_prescricao),
					max(nr_sequencia_prescricao),
					max(cd_local_estoque),
					max(coalesce(cd_material_exec, cd_material)),
					max(coalesce(nr_seq_mat_autor,0)),
					max(cd_cgc_fornecedor)
				into STRICT	cd_material_w,
					cd_convenio_mat_w,
					cd_setor_atendimento_w,
					qt_material_w,
					dt_atendimento_w,
					nr_prescricao_w,
					nr_seq_mat_prescr_w,
					cd_local_estoque_w,
					cd_material_exec_w,
					nr_seq_mat_autor_w,
					cd_cgc_w
				from	material_atend_paciente
				where	nr_sequencia = nr_seq_material_p;

			elsif (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and /*francisco - os 38887 - 10/08/06 gerar autorizacao */
					(nr_seq_mat_prescr_p IS NOT NULL AND nr_seq_mat_prescr_p::text <> '') then
				select	cd_material,
					qt_material,
					cd_fornec_consignado
				into STRICT	cd_material_w,
					qt_material_w,
					cd_cgc_w
				from	prescr_material
				where	nr_prescricao	= nr_prescricao_p
				and	nr_sequencia	= nr_seq_mat_prescr_p;
			elsif (nr_seq_agenda_pac_opme_p IS NOT NULL AND nr_seq_agenda_pac_opme_p::text <> '') then

				if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
					select	cd_material,
						qt_material,
						cd_cgc
					into STRICT	cd_material_w,
						qt_material_w,
						cd_cgc_w
					from	agenda_pac_opme
					where	nr_sequencia	= nr_seq_agenda_pac_opme_p;
				elsif (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') then
					select	cd_material,
						qt_material
					into STRICT	cd_material_w,
						qt_material_w
					from	agenda_cons_opme
					where	nr_sequencia	= nr_seq_agenda_pac_opme_p;
				end if;
			elsif (nr_seq_mat_orcamento_p IS NOT NULL AND nr_seq_mat_orcamento_p::text <> '') then
				select	a.cd_material,
					a.qt_material,
					b.cd_convenio,
					coalesce(a.cd_setor_atendimento, b.cd_setor_atendimento),
					a.dt_atualizacao
				into STRICT	cd_material_w,
					qt_material_w,
					cd_convenio_mat_w,
					cd_setor_atendimento_w,
					dt_atendimento_w
				from	orcamento_paciente_mat a,
					orcamento_paciente b
				where	a.nr_sequencia_orcamento = b.nr_sequencia_orcamento
				and	a.nr_sequencia	= nr_seq_mat_orcamento_p;
			end if;
			
			cd_material_exec_ww := null;
			if (coalesce(ie_autor_mat_exec_w,'N') = 'S') and (ie_evento_p = 'EP') and (cd_material_exec_w IS NOT NULL AND cd_material_exec_w::text <> '') then
				cd_material_exec_ww := cd_material_exec_w;
			end if;


			if (ie_autor_mat_conta_w = 'S') and (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
				cd_material_w	:= obter_material_conta(cd_estabelecimento_w,
									coalesce(cd_convenio_mat_w,cd_convenio_atend_w),
									cd_categoria_w,
									cd_material_w,
									cd_material_w,
									cd_material_w,
									cd_plano_convenio_w,
									cd_setor_atendimento_w,
									coalesce(dt_atendimento_w,clock_timestamp()),
									cd_local_estoque_w,
									nr_prescricao_p);
			end if;

			if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') or (nr_seq_mat_prescr_p IS NOT NULL AND nr_seq_mat_prescr_p::text <> '') or (nr_seq_agenda_pac_opme_p IS NOT NULL AND nr_seq_agenda_pac_opme_p::text <> '')or (nr_seq_mat_orcamento_p IS NOT NULL AND nr_seq_mat_orcamento_p::text <> '') then

				SELECT * FROM consiste_mat_plano_convenio(coalesce(cd_convenio_mat_w,cd_convenio_atend_w), cd_plano_convenio_w, coalesce(cd_material_exec_ww, cd_material_w), nr_atendimento_p, coalesce(cd_setor_atendimento_w,cd_setor_atend_uni_w), ds_retorno_w, ie_bloqueio_agenda_w, ie_regra_w, nr_seq_regra_retorno_w, coalesce(qt_material_w,0), dt_atendimento_w, nr_seq_agenda_p, cd_estabelecimento_w, null, null, null, nr_prescricao_w, nr_seq_mat_prescr_w, cd_cgc_w, nr_seq_material_p) INTO STRICT ds_retorno_w, ie_bloqueio_agenda_w, ie_regra_w, nr_seq_regra_retorno_w;

				if (ie_regra_w in ('3','8')) then
					ie_gerar_autorizacao_w	:= 'S';					
										
					select	ie_resp_autor
					into STRICT	ie_resp_autor_w
					from	regra_convenio_plano_mat
					where	nr_sequencia = nr_seq_regra_retorno_w;
					
					if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') or
						(nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '' AND nr_seq_mat_prescr_w IS NOT NULL AND nr_seq_mat_prescr_w::text <> '')then
						begin
						select	count(*)
						into STRICT	qt_reg_w
						from	autorizacao_convenio a,
							material_autorizado b
						where	a.nr_atendimento	=  nr_atendimento_p
						and	a.nr_sequencia		= b.nr_sequencia_autor
						and	((b.nr_prescricao		= nr_prescricao_w AND b.nr_seq_prescricao 		= nr_seq_mat_prescr_w AND b.cd_material = cd_material_w) or
							((ie_evento_p     = 'PC') and (b.nr_sequencia		= nr_seq_mat_autor_w) and
							((ie_atual_qt_solic_autor_w = 'N') or (obter_qt_utilizada_mat_autor(b.nr_sequencia) <= b.qt_autorizada))) or
							((b.cd_material 	= (obter_material_generico(cd_material_w))) and (ie_evento_p     = 'PC') and (obter_qt_utilizada_mat_autor(b.nr_sequencia) <= coalesce(b.qt_autorizada,0))));
						exception
						when others then
							qt_reg_w := 0;
						end;
						
						
                        if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') and (ie_evento_p = 'LP') and (qt_reg_w = 0) then
						
						        select	count(*)
							into STRICT	qt_reg_w
							from	agenda_pac_opme a,
								autorizacao_convenio b,
								material_autorizado c,
								estagio_autorizacao d
							where	a.nr_sequencia 		= c.nr_seq_opme
							and	c.cd_material		= cd_material_w
							and	b.nr_sequencia		= c.nr_sequencia_autor
							and	d.ie_interno not in ('90','70')
							and	d.nr_sequencia		= b.nr_seq_estagio
							and	c.nr_sequencia_autor	= b.nr_sequencia
							and	b.nr_atendimento 	= nr_atendimento_p;

                            if (qt_reg_w = 0) then
						
                                select count(*)
                                into STRICT qt_reg_w
                                from paciente_atendimento a,
                                     prescr_medica b,
                                     autorizacao_convenio d,
                                     prescr_material c,
                                     paciente_atend_medic e
                                where a.nr_seq_paciente = d.nr_seq_paciente_setor
                                and a.nr_ciclo = d.nr_ciclo
                                and a.nr_prescricao = nr_prescricao_w
                                and b.nr_prescricao = a.nr_prescricao
                                and c.nr_seq_material = e.nr_seq_material
                                and c.nr_seq_atendimento = e.nr_seq_atendimento
                                and e.nr_seq_atendimento = a.nr_seq_atendimento;

							
                            end if;
							
						end if;
						
						if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') and (ie_evento_p = 'EP') and (qt_reg_w = 0) then
						
						        select	count(*)
							into STRICT	qt_reg_w
							from	agenda_pac_opme a,
								autorizacao_convenio b,
								material_autorizado c,
								estagio_autorizacao d
							where	a.nr_sequencia 		= c.nr_seq_opme
							and	c.cd_material		= cd_material_w
							and	b.nr_sequencia		= c.nr_sequencia_autor
							and	d.ie_interno not in ('90','70')
							and	d.nr_sequencia		= b.nr_seq_estagio
							and	c.nr_sequencia_autor	= b.nr_sequencia
							and	b.nr_atendimento 	= nr_atendimento_p
							and (coalesce(c.qt_solicitada,0) + qt_material_w) < coalesce(c.qt_autorizada,0);
							
						end if;
						if (coalesce(nr_atendimento_p,0) > 0) and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') and (nr_seq_mat_prescr_w IS NOT NULL AND nr_seq_mat_prescr_w::text <> '') and (ie_evento_p = 'RTM') then
							
							begin
							select	count(*)
							into STRICT	qt_reg_w
							from	autorizacao_convenio a,
								material_autorizado b,
								estagio_autorizacao c
							where	a.nr_atendimento	= nr_atendimento_p
							and	c.nr_sequencia		= a.nr_seq_estagio
							and	c.ie_interno 		not in ('90','70')
							and	a.nr_sequencia		= b.nr_sequencia_autor
							and	b.nr_prescricao		= nr_prescricao_w
							and	b.nr_seq_prescricao 	= nr_seq_mat_prescr_w
							and	b.cd_material 		= cd_material_w;								
							exception
							when others then
								qt_reg_w := 0;
							end;						
							
						end if;	
						
						if (coalesce(qt_reg_w,0) > 0) then
							begin
							ie_gerar_autorizacao_w := 'N';
							end;
						end if;
					end if;

				elsif (ie_regra_w in ('6','7')) then
					if (coalesce(nr_seq_material_p, 0) > 0) then
						CALL trocar_convenio_particular(nr_seq_material_p, nm_usuario_p, 'M');
					end if;

					/* Gerar autorizacao particular quando convenio nao da cobertura */

					select	coalesce(max(ie_autor_particular),'N')
					into STRICT	ie_autor_particular_w
					from	regra_convenio_plano_mat
					where	nr_sequencia	= nr_seq_regra_retorno_w;

					if (ie_autor_particular_w = 'S') then
						ie_gerar_autorizacao_w	:= 'S';
					end if;

				end if;

				if (nr_seq_regra_retorno_w IS NOT NULL AND nr_seq_regra_retorno_w::text <> '') then
					select	coalesce(ie_nova_autorizacao,'N'),
						coalesce(ie_gerar_mat_esp,'N'),
						substr(ds_observacao,1,3999)
					into STRICT	ie_nova_autorizacao_w,
						ie_gerar_mat_esp_w,
						ds_observacao_regra_w
					from	regra_convenio_plano_mat
					where	nr_sequencia = nr_seq_regra_retorno_w;
				end if;

			end if;

		/*elsif	(ie_tipo_autorizacao_w	= 5) then	-- cirurgia
			null;*/
		end if;
		
		/*Autorizacao sera gerada com data  inicio nulla,  OS  914704*/

		if (coalesce(ie_gerar_inicio_vigencia_w,'S') = 'S') then
			dt_inicio_vig_regra_w := dt_inicio_vigencia_w;
		elsif (coalesce(ie_gerar_inicio_vigencia_w,'S') = 'N') then
			dt_inicio_vig_regra_w := null;
		elsif (coalesce(ie_gerar_inicio_vigencia_w,'S') = 'A') then
			dt_inicio_vig_regra_w := clock_timestamp();
		end if;

		/* gerar autorizacao */

		if (ie_gerar_autorizacao_w = 'S') then
			if (IE_EVENTO_P = 'AT') then
			
				select count(*)
				into STRICT qt_atend_diag_med_w
				from diagnostico_medico
				where nr_atendimento = nr_atendimento_p;

				select count(*)
				into STRICT qt_atendo_diag_doenca_w
				from diagnostico_doenca
				where nr_atendimento = nr_atendimento_p;
				
				select max(cd_medico_resp)
				into STRICT cd_medico_resp_w		
				from atendimento_paciente
				where nr_atendimento = nr_atendimento_p;
				
				if (qt_atend_diag_med_w = 0) and (qt_atendo_diag_doenca_w = 0) and (cd_medico_resp_w IS NOT NULL AND cd_medico_resp_w::text <> '') then
		
					open C03;
					loop
					fetch C03 into	
						CD_DOENCAS_W;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin
						CALL Gerar_diagnostico_atend(nr_atendimento_p, CD_DOENCAS_W, cd_medico_resp_w, OBTER_USUARIO_ATIVO);
						end;
					end loop;
					close C03;
					
				end if;

			end if;
			nr_sequencia_autor_w := gerar_autor_atendimento(nr_atendimento_p, nr_seq_material_p, nr_seq_proced_p, nr_prescricao_w, nr_seq_mat_prescr_w, nr_seq_proc_prescr_w, nr_seq_regra_w, dt_inicio_vig_regra_w, nm_usuario_p, nr_seq_agenda_p, nr_seq_proc_interno_p, ie_nova_autorizacao_w, nr_seq_agenda_consulta_p, nr_seq_agenda_pac_opme_p, ie_resp_autor_w, ie_autor_particular_w, nr_seq_agenda_proc_adic_p, ie_gerar_mat_esp_w, nr_seq_regra_ret_proc_w, ds_observacao_regra_w, nr_seq_regra_retorno_w, nr_seq_proc_orcamento_p, nr_seq_mat_orcamento_p, '', nr_seq_gestao_p);

			/* lhalves OS280238 em 28/01/2011 - incluido dentro na gerar_autor_atendimento
			if	(ie_tipo_autorizacao_w = 3) then

				if	(nvl(nr_sequencia_autor_w,0) = 0) then

					select	nvl(max(b.nr_sequencia),0)
					into	nr_sequencia_autor_w
					from	estagio_autorizacao c,
						autorizacao_convenio b,
						procedimento_autorizado a
					where	b.nr_seq_estagio	= c.nr_sequencia
					and	a.nr_sequencia_autor	= b.nr_sequencia
					and	a.cd_procedimento	= cd_procedimento_w
					and	a.ie_origem_proced	= ie_origem_proced_w
					and	b.nr_atendimento	= nr_atendimento_p
					and	c.ie_interno		= '1';
				end if;

				if	(nr_sequencia_autor_w > 0) then
					gerar_regra_convenio_item(nr_sequencia_autor_w,nr_seq_regra_ret_proc_w,nm_usuario_p);
				end if;
			end if;
			*/
		end if;

		if (ie_autor_kit_w = 'S') then

			/*Materiais do kit */

			cd_kit_material_w := Obter_Kit_Procedimento( nr_atendimento_p, cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_p, cd_setor_atendimento_w, cd_medico_w, cd_kit_material_w);

			if (cd_kit_material_w IS NOT NULL AND cd_kit_material_w::text <> '') then
				CALL gerar_autor_kit_material(cd_kit_material_w,
							nr_atendimento_p,
							nr_seq_agenda_p,
							nr_seq_agenda_consulta_p,
							cd_estabelecimento_w,
							cd_convenio_atend_w,
							cd_plano_convenio_w,
							coalesce(cd_setor_atendimento_w,cd_setor_atend_uni_w),
							dt_atendimento_w,
							nm_usuario_p,
							ie_gera_kit_partic_w);
			end if;
		end if;

	/* gerar autorizacao para gestao de vagas */

	elsif (coalesce( ie_tipo_regra_w,'A') = 'V') and (coalesce( nr_seq_gestao_p,0) > 0) and (coalesce(cd_convenio_regra_w, cd_convenio_atend_w) 			= cd_convenio_atend_w) and (coalesce(cd_classif_setor_regra_w, coalesce(cd_classif_setor_atend_w,0))	= coalesce(cd_classif_setor_atend_w,0)) and (coalesce(ie_tipo_atendimento_regra_w, coalesce(ie_tipo_atendimento_atend_w,0))	= coalesce(ie_tipo_atendimento_atend_w,0)) and (coalesce(cd_tipo_acomodacao_regra_w, coalesce(cd_tipo_acomodacao_atend_w,0)) 	= coalesce(cd_tipo_acomodacao_atend_w,0)) then


		select	count(*)
		into STRICT	cont_w
		from	autorizacao_convenio where		nr_seq_gestao 	= nr_seq_gestao_p LIMIT 1;
		
		if (cont_w = 0) then
			/*lhalves OS318131 em 12/05/2011 - Gerar apenas uma autorizacao para necessidade de vaga*/

			select	coalesce(max(ie_autor_vaga_atend),'S')
			into STRICT	ie_autor_vaga_atend_w
			from	regra_gerar_autorizacao
			where	nr_sequencia	= nr_seq_regra_w;

			if (ie_autor_vaga_atend_w = 'N') then
				select	coalesce(max('N'),'S')
				into STRICT	ie_autor_vaga_atend_w
				from	estagio_autorizacao b,
						autorizacao_convenio a where		a.nr_seq_estagio		= b.nr_sequencia
				and		b.ie_interno		= '1'
				and		a.ie_tipo_autorizacao	= ie_tipo_autorizacao_w
				and		(a.nr_seq_gestao IS NOT NULL AND a.nr_seq_gestao::text <> '')
				and		a.nr_atendimento = (SELECT	max(nr_atendimento)
											from	gestao_vaga
											where	nr_sequencia	= nr_seq_gestao_p) LIMIT 1;
			end if;
			
			if (ie_autor_vaga_atend_w = 'S') then
				nr_sequencia_autor_w := gerar_autor_vaga(nr_seq_gestao_p, nr_seq_regra_w, nm_usuario_p, nr_sequencia_autor_w);
			end if;
		end if;
	end if;

end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_autor_regra (nr_atendimento_p bigint, nr_seq_material_p bigint, nr_seq_proced_p bigint, nr_prescricao_p bigint, nr_seq_mat_prescr_p bigint, nr_seq_proc_prescr_p bigint, ie_evento_p text, nm_usuario_p text, nr_seq_agenda_p bigint, nr_seq_proc_interno_p bigint, nr_seq_gestao_p bigint, nr_seq_agenda_consulta_p bigint, nr_seq_agenda_pac_opme_p bigint, nr_seq_agenda_proc_adic_p bigint, nr_seq_proc_orcamento_p text default '', nr_seq_mat_orcamento_p text default '', nr_seq_parametro3_p text default '') FROM PUBLIC;

