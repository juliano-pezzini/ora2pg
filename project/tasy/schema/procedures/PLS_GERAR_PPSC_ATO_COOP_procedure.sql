-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE reg_tipo_valores AS (		vl_item pls_mensalidade_seg_item.vl_item%type,
						ie_ato_cooperado pls_ppsc_ato_movto_item.ie_ato_cooperado%type);


CREATE OR REPLACE PROCEDURE pls_gerar_ppsc_ato_coop ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_empresa_p bigint) AS $body$
DECLARE


nr_titulo_w			titulo_receber.nr_titulo%type;
vl_saldo_titulo_w		titulo_receber.vl_titulo%type;
vl_titulo_w			titulo_receber.vl_titulo%type;
nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;
dt_lote_w			pls_ppsc_lote.dt_lote%type;
dt_fim_periodo_w		pls_ppsc_lote.dt_lote%type;
qt_movimento_w			bigint := 0;
vl_item_w			pls_mensalidade_seg_item.vl_item%type;
vl_ato_cooperado_w		pls_mensalidade_seg_item.vl_ato_cooperado%type;
vl_ato_auxiliar_w		pls_mensalidade_seg_item.vl_ato_auxiliar%type;
vl_ato_nao_cooperado_w		pls_mensalidade_seg_item.vl_ato_nao_cooperado%type;
vl_mensalidade_w		pls_mensalidade.vl_mensalidade%type;
vl_saldo_ato_coop_w		pls_mensalidade_seg_item.vl_ato_cooperado%type;
vl_saldo_ato_aux_w		pls_mensalidade_seg_item.vl_ato_auxiliar%type;
vl_saldo_ato_nao_coop_w		pls_mensalidade_seg_item.vl_ato_nao_cooperado%type;
vl_saldo_rateio_w		titulo_receber.vl_titulo%type := 0;
ie_ato_cooperado_w		pls_conta_medica_resumo.ie_ato_cooperado%type;
vl_ato_cooperado_aux_w		bigint;
nr_seq_pls_fatura_w   		titulo_receber.nr_seq_pls_fatura%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
vl_rateio_w			bigint;
nr_seq_conta_contab_w		pls_conta_pos_estab_contab.nr_sequencia%type;
vl_custo_operacional_w		bigint;
vl_beneficiario_w		bigint;
nr_seq_movimento_w		bigint;
nr_seq_mensalidade_item_w	pls_mensalidade_seg_item.nr_sequencia%type;
ie_tipo_item_w			pls_mensalidade_seg_item.ie_tipo_item%type;
nr_titulo_ant_w			titulo_receber.nr_titulo%type;
nr_seq_ppsc_movimento_item_w	pls_ppsc_movimento_item.nr_sequencia%type;
vl_ajuste_w			pls_ppsc_movimento_item.vl_item%type;
vl_saldo_titulo_ant_w		titulo_receber.vl_titulo%type;
type t_tipo_valores is table
	of reg_tipo_valores index by integer;
tipo_valores_w		t_tipo_valores;


type t_item_ppsc is table
	of pls_ppsc_ato_movto_item%rowtype index by integer;
ppsc_movto_item_w		t_item_ppsc;
item_ppsc_movto_item_w		pls_ppsc_ato_movto_item%rowtype;


c_titulos_mensalidade CURSOR FOR  -- Titulos a receber vinculados a mensalidade
	SELECT	a.nr_titulo,
		obter_saldo_titulo_receber(a.nr_titulo, dt_fim_periodo_w),
		b.nr_sequencia,
		a.vl_titulo
	from	titulo_receber			a,
		pls_mensalidade			b,
		estabelecimento			g
	where	a.nr_seq_mensalidade = b.nr_sequencia
	and	a.cd_estabelecimento = g.cd_estabelecimento	
	and	g.cd_empresa = cd_empresa_p
	and	coalesce(cd_estabelecimento_p,a.cd_estabelecimento) = a.cd_estabelecimento
	and	((coalesce(a.dt_liquidacao::text, '') = '') or (a.dt_liquidacao > dt_fim_periodo_w))
	order by a.nr_titulo;

c_itens CURSOR FOR
	SELECT	a.nr_titulo nr_titulo,
		a.vl_titulo vl_titulo,
		i.vl_item vl_item,
		i.vl_ato_cooperado vl_ato_cooperado,
		i.vl_ato_auxiliar vl_ato_auxiliar,
		i.vl_ato_nao_cooperado vl_ato_nao_cooperado,
		d.vl_mensalidade vl_mensalidade,
		i.nr_sequencia nr_seq_item,
		i.ie_tipo_item ie_tipo_item
	from	titulo_receber			a,
		pls_mensalidade			b,
		estabelecimento			g,
		pls_mensalidade_seg_item	i,
		pls_mensalidade_segurado	d
	where	a.nr_seq_mensalidade = b.nr_sequencia
	and	a.cd_estabelecimento = g.cd_estabelecimento
	and	b.nr_sequencia = d.nr_seq_mensalidade
	and	d.nr_sequencia = i.nr_seq_mensalidade_seg
	and	i.ie_tipo_item not in (3,6)
	and	g.cd_empresa = cd_empresa_p
	and	coalesce(cd_estabelecimento_p,a.cd_estabelecimento) = a.cd_estabelecimento
	and	a.nr_titulo = nr_titulo_w
	
union all

	SELECT	a.nr_titulo,
		a.vl_titulo,
		f.vl_coparticipacao vl_item,
		i.vl_ato_cooperado,
		i.vl_ato_auxiliar,
		i.vl_ato_nao_cooperado,
		d.vl_mensalidade,
		i.nr_sequencia,
		i.ie_tipo_item
	from	titulo_receber			a,
		pls_mensalidade			b,
		estabelecimento			g,
		pls_mensalidade_seg_item	i,
		pls_mensalidade_segurado	d,
		pls_conta			c,
		pls_conta_coparticipacao	f,
		pls_mensalidade_item_conta	j,
		pls_conta_proc			p
	where	a.nr_seq_mensalidade = b.nr_sequencia
	and	a.cd_estabelecimento = g.cd_estabelecimento
	and	b.nr_sequencia = d.nr_seq_mensalidade
	and	d.nr_sequencia = i.nr_seq_mensalidade_seg
	and	j.nr_seq_conta_copartic	= f.nr_sequencia
	and	j.nr_seq_item	= i.nr_sequencia
	and	f.nr_seq_conta = c.nr_sequencia
	and	p.nr_sequencia	= f.nr_seq_conta_proc
	and	i.ie_tipo_item = 3
	and	g.cd_empresa = cd_empresa_p
	and	coalesce(cd_estabelecimento_p,a.cd_estabelecimento) = a.cd_estabelecimento
	and	f.ie_status_coparticipacao != 'N'
	and	a.nr_titulo = nr_titulo_w
	
union all

	select	a.nr_titulo,
		a.vl_titulo,
		f.vl_coparticipacao vl_item,
		i.vl_ato_cooperado,
		i.vl_ato_auxiliar,
		i.vl_ato_nao_cooperado,
		d.vl_mensalidade,
		i.nr_sequencia,
		i.ie_tipo_item
	from	titulo_receber			a,
		pls_mensalidade			b,
		estabelecimento			g,
		pls_mensalidade_seg_item	i,
		pls_mensalidade_segurado	d,
		pls_conta			c,
		pls_conta_coparticipacao	f,
		pls_mensalidade_item_conta	j,
		pls_conta_mat			m
	where	a.nr_seq_mensalidade = b.nr_sequencia
	and	a.cd_estabelecimento = g.cd_estabelecimento
	and	b.nr_sequencia = d.nr_seq_mensalidade
	and	d.nr_sequencia = i.nr_seq_mensalidade_seg
	and	j.nr_seq_conta_copartic	= f.nr_sequencia
	and	j.nr_seq_item	= i.nr_sequencia
	and	f.nr_seq_conta = c.nr_sequencia
	and	m.nr_sequencia	= f.nr_seq_conta_mat
	and	i.ie_tipo_item = 3
	and	g.cd_empresa = cd_empresa_p
	and	coalesce(cd_estabelecimento_p,a.cd_estabelecimento) = a.cd_estabelecimento
	and	f.ie_status_coparticipacao != 'N'
	and	a.nr_titulo = nr_titulo_w
	
union all

	select	a.nr_titulo,
		a.vl_titulo,
		i.vl_item vl_item,
		i.vl_ato_cooperado,
		i.vl_ato_auxiliar,
		i.vl_ato_nao_cooperado,
		d.vl_mensalidade,
		i.nr_sequencia,
		i.ie_tipo_item
	from	titulo_receber			a,
		pls_mensalidade			b,
		estabelecimento			g,
		pls_mensalidade_seg_item	i,
		pls_mensalidade_segurado	d
	where	a.nr_seq_mensalidade = b.nr_sequencia
	and	a.cd_estabelecimento = g.cd_estabelecimento
	and	b.nr_sequencia = d.nr_seq_mensalidade
	and	d.nr_sequencia = i.nr_seq_mensalidade_seg
	and	i.ie_tipo_item = 6
	and	g.cd_empresa = cd_empresa_p
	and	coalesce(cd_estabelecimento_p,a.cd_estabelecimento) = a.cd_estabelecimento
	and	a.nr_titulo = nr_titulo_w;
	
c_itens_w	c_itens%rowtype;

c_titulos_faturamento CURSOR FOR
	SELECT 	a.nr_titulo nr_titulo,
		obter_saldo_titulo_receber(a.nr_titulo, dt_fim_periodo_w) vl_saldo_titulo,
    		a.nr_seq_pls_fatura
    	from	titulo_receber 			a,
		pls_fatura 			b,
		estabelecimento			g
	where	a.nr_seq_pls_fatura = b.nr_sequencia
	and	a.cd_estabelecimento = g.cd_estabelecimento
	and	g.cd_empresa = cd_empresa_p
	and	coalesce(cd_estabelecimento_p,a.cd_estabelecimento) = a.cd_estabelecimento
	and	((coalesce(a.dt_liquidacao::text, '') = '') or (a.dt_liquidacao > dt_fim_periodo_w))
	and	a.nr_titulo = 2986466;

c_titulos_abertos CURSOR FOR
	SELECT 	a.nr_titulo nr_titulo,
		obter_saldo_titulo_receber(a.nr_titulo, dt_fim_periodo_w) vl_saldo_titulo,
		a.vl_titulo
    	from	titulo_receber 			a,
		estabelecimento			g
	where	coalesce(a.nr_seq_pls_fatura::text, '') = ''
	and	coalesce(a.nr_seq_mensalidade::text, '') = ''
	and	a.cd_estabelecimento = g.cd_estabelecimento
	and	g.cd_empresa = cd_empresa_p
	and	coalesce(cd_estabelecimento_p,a.cd_estabelecimento) = a.cd_estabelecimento
	and	((coalesce(a.dt_liquidacao::text, '') = '') or (a.dt_liquidacao > dt_fim_periodo_w))
	and	a.nr_titulo = 76030;

c_contas_medicas CURSOR FOR
	SELECT 	t.nr_sequencia,
		e.nr_sequencia,
		r.ie_ato_cooperado,
		e.vl_custo_operacional,
		a.vl_beneficiario
	from	pls_conta 			t,
		pls_conta_pos_estab_contab 	e,
		pls_conta_pos_estabelecido 	a,
		pls_fatura 			f,
		pls_fatura_proc			p,
		pls_fatura_conta 		c,
		pls_fatura_evento 		d,
		pls_conta_medica_resumo		r
	where	t.nr_sequencia 		= a.nr_seq_conta
	and	a.nr_sequencia 		= e.nr_seq_conta_pos
	and	a.nr_sequencia 		= p.nr_seq_conta_pos_estab
	and	c.nr_sequencia 		= p.nr_seq_fatura_conta
	and	d.nr_sequencia 		= c.nr_seq_fatura_evento
	and	f.nr_sequencia 		= d.nr_seq_fatura
	and	r.nr_seq_conta 		= t.nr_sequencia
	and	r.nr_sequencia 		= e.nr_seq_conta_resumo
  	and 	f.nr_sequencia    	= nr_seq_pls_fatura_w
	
union all

	SELECT 	t.nr_sequencia,
		e.nr_sequencia,
		r.ie_ato_cooperado,
		e.vl_custo_operacional,
		a.vl_beneficiario
	from	pls_conta 			t,
		pls_conta_pos_estab_contab 	e,
		pls_conta_pos_estabelecido 	a,
		pls_fatura 			f,
		pls_fatura_mat			m,
		pls_fatura_conta 		c,
		pls_fatura_evento 		d,
		pls_conta_medica_resumo		r
	where	t.nr_sequencia 		= a.nr_seq_conta
	and	a.nr_sequencia 		= e.nr_seq_conta_pos
	and	a.nr_sequencia 		= m.nr_seq_conta_pos_estab
	and	c.nr_sequencia 		= m.nr_seq_fatura_conta
	and	d.nr_sequencia 		= c.nr_seq_fatura_evento
	and	f.nr_sequencia 		= d.nr_seq_fatura
	and	r.nr_seq_conta 		= t.nr_sequencia
	and	r.nr_sequencia 		= e.nr_seq_conta_resumo
  	and 	f.nr_sequencia    	= nr_seq_pls_fatura_w;
	
BEGIN

select	max(dt_lote)
into STRICT	dt_lote_w
from	pls_ppsc_lote
where	nr_sequencia	= nr_seq_lote_p;

dt_fim_periodo_w	:= fim_dia(last_day(dt_lote_w));

open c_titulos_mensalidade;
loop
fetch c_titulos_mensalidade into
	nr_titulo_w,
	vl_saldo_titulo_w,
	nr_seq_mensalidade_w,
	vl_titulo_w;
EXIT WHEN NOT FOUND; /* apply on c_titulos_mensalidade */
begin

	select	nextval('pls_ppsc_movimento_seq')
	into STRICT	nr_seq_movimento_w
	;

	insert into pls_ppsc_ato_movimento(nr_sequencia,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		cd_estabelecimento,
		ie_tipo_movimento,
		nr_adiantamento,
		nr_seq_cheque,
		nr_seq_lote,
		nr_seq_regra_ppsc,
		nr_titulo,
		vl_saldo_titulo
		)
	values (nr_seq_movimento_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		cd_estabelecimento_p,
		null, --ie_tipo_movimento
		null, --nr_adiantamento,
		null, --nr_seq_cheque,
		nr_seq_lote_p,
		null, --nr_seq_regra_ppsc
		nr_titulo_w,
		vl_saldo_titulo_w);
		
	qt_movimento_w := qt_movimento_w + 1;

	open c_itens;
	loop
	fetch c_itens into
		nr_titulo_w,
		vl_titulo_w,
		vl_item_w,
		vl_ato_cooperado_w,
		vl_ato_auxiliar_w,
		vl_ato_nao_cooperado_w,
		vl_mensalidade_w,
		nr_seq_mensalidade_item_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens */
		begin

		vl_ajuste_w 	:= 0;

		if (nr_titulo_ant_w <> nr_titulo_w) then

			if (vl_saldo_rateio_w <> vl_saldo_titulo_ant_w) then
				vl_ajuste_w	:= (vl_saldo_titulo_ant_w - vl_saldo_rateio_w);

				ppsc_movto_item_w[ppsc_movto_item_w.count - 1].vl_item := ppsc_movto_item_w[ppsc_movto_item_w.count - 1].vl_item + vl_ajuste_w;
			end if;

			vl_saldo_rateio_w	:= 0;

		end if;
		
		nr_titulo_ant_w		:= nr_titulo_w;
		vl_saldo_titulo_ant_w 	:= vl_saldo_titulo_w;

		if (ie_tipo_item_w not in ('3', '6')) then
			if (coalesce(vl_ato_cooperado_w, 0) <> 0 or coalesce(vl_ato_auxiliar_w, 0) <> 0 or coalesce(vl_ato_nao_cooperado_w, 0) <> 0) then


				-- Ato cooperado
				tipo_valores_w[1].vl_item		:= dividir_sem_round((vl_saldo_titulo_w * vl_ato_cooperado_w),vl_titulo_w);
				tipo_valores_w[1].ie_ato_cooperado 	:= 1;

				-- Ato auxiliar
				tipo_valores_w[2].vl_item		:= dividir_sem_round((vl_saldo_titulo_w * vl_ato_auxiliar_w),vl_titulo_w);
				tipo_valores_w[2].ie_ato_cooperado 	:= 2;

				-- Ato nao cooperado
				tipo_valores_w[3].vl_item		:= dividir_sem_round((vl_saldo_titulo_w * vl_ato_nao_cooperado_w),vl_titulo_w);
				tipo_valores_w[3].ie_ato_cooperado 	:= 3;

				vl_saldo_rateio_w			:= vl_saldo_rateio_w + tipo_valores_w[1].vl_item + tipo_valores_w[2].vl_item + tipo_valores_w[3].vl_item;
			else
				--Valor do item
				tipo_valores_w[1].vl_item	:= dividir_sem_round((vl_saldo_titulo_w * vl_item_w),vl_titulo_w);
				vl_saldo_rateio_w		:= vl_saldo_rateio_w + tipo_valores_w[1].vl_item;

			end if;
		else
			tipo_valores_w[1].vl_item := vl_item_w;
		end if;
		
		for j in tipo_valores_w.first .. tipo_valores_w.last loop
			if (coalesce(tipo_valores_w[j].vl_item, 0) <> 0) then
				select	nextval('pls_ppsc_ato_movto_item_seq')
				into STRICT	nr_seq_ppsc_movimento_item_w
				;


				item_ppsc_movto_item_w.cd_estabelecimento	:= cd_estabelecimento_p;
				item_ppsc_movto_item_w.dt_atualizacao		:= clock_timestamp();
				item_ppsc_movto_item_w.dt_atualizacao_nrec	:= clock_timestamp();
				item_ppsc_movto_item_w.nm_usuario		:= nm_usuario_p;
				item_ppsc_movto_item_w.nm_usuario_nrec		:= nm_usuario_p;
				item_ppsc_movto_item_w.ie_ato_cooperado		:= tipo_valores_w[j].ie_ato_cooperado;
				item_ppsc_movto_item_w.nr_seq_mensalidade_item	:= nr_seq_mensalidade_item_w;
				item_ppsc_movto_item_w.nr_seq_movimento		:= nr_seq_movimento_w;
				item_ppsc_movto_item_w.nr_sequencia		:= nr_seq_ppsc_movimento_item_w;
				item_ppsc_movto_item_w.vl_item			:= tipo_valores_w[j].vl_item;
				item_ppsc_movto_item_w.vl_saldo_contabil	:= vl_saldo_titulo_w;

				ppsc_movto_item_w(ppsc_movto_item_w.count) := item_ppsc_movto_item_w;

				if (ppsc_movto_item_w.count >= 1000) then
					begin
					forall i in ppsc_movto_item_w.first .. ppsc_movto_item_w.last
						insert into pls_ppsc_ato_movto_item values ppsc_movto_item_w(i);
					commit;

					ppsc_movto_item_w.delete;
					end;
				end if;
			end if;			
		end loop;
		tipo_valores_w.delete;

		qt_movimento_w := qt_movimento_w + 1;
	end;
	end loop;
	close c_itens;
end;
end loop;
close c_titulos_mensalidade;


if (vl_saldo_rateio_w <> vl_saldo_titulo_w) then
	vl_ajuste_w	:= (vl_saldo_titulo_w - vl_saldo_rateio_w);
	ppsc_movto_item_w[ppsc_movto_item_w.count - 1].vl_item := ppsc_movto_item_w[ppsc_movto_item_w.count - 1].vl_item + vl_ajuste_w;
end if;


open c_titulos_faturamento;
	loop
	fetch c_titulos_faturamento into
		nr_titulo_w,
		vl_saldo_titulo_w,
    		nr_seq_pls_fatura_w;
	EXIT WHEN NOT FOUND; /* apply on c_titulos_faturamento */
	begin
	
	select	nextval('pls_ppsc_movimento_seq')
	into STRICT	nr_seq_movimento_w
	;


	insert into pls_ppsc_ato_movimento(nr_sequencia,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		cd_estabelecimento,
		ie_tipo_movimento,
		nr_adiantamento,
		nr_seq_cheque,
		nr_seq_lote,
		nr_seq_regra_ppsc,
		nr_titulo,
		vl_saldo_titulo
		)
	values (nr_seq_movimento_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		cd_estabelecimento_p,
		null, --ie_tipo_movimento
		null, --nr_adiantamento,
		null, --nr_seq_cheque,
		nr_seq_lote_p,
		null, --nr_seq_regra_ppsc
		nr_titulo_w,
		vl_saldo_titulo_w);

	qt_movimento_w := qt_movimento_w + 1;

	open c_contas_medicas;
		loop
		fetch c_contas_medicas into
			nr_seq_conta_w,
			nr_seq_conta_contab_w,
			ie_ato_cooperado_w,
			vl_custo_operacional_w,
			vl_beneficiario_w;
		EXIT WHEN NOT FOUND; /* apply on c_contas_medicas */
		begin

		vl_rateio_w := vl_saldo_titulo_w * vl_custo_operacional_w / vl_beneficiario_w;

		select	nextval('pls_ppsc_ato_movto_item_seq')
		into STRICT	nr_seq_ppsc_movimento_item_w
		;
		
		item_ppsc_movto_item_w.cd_estabelecimento	:= cd_estabelecimento_p;
		item_ppsc_movto_item_w.dt_atualizacao		:= clock_timestamp();
		item_ppsc_movto_item_w.dt_atualizacao_nrec	:= clock_timestamp();
		item_ppsc_movto_item_w.nm_usuario		:= nm_usuario_p;
		item_ppsc_movto_item_w.nm_usuario_nrec		:= nm_usuario_p;
		item_ppsc_movto_item_w.ie_ato_cooperado		:= ie_ato_cooperado_w;
		item_ppsc_movto_item_w.nr_seq_mensalidade_item	:= null;
		item_ppsc_movto_item_w.nr_seq_movimento		:= nr_seq_movimento_w;
		item_ppsc_movto_item_w.nr_sequencia		:= nr_seq_ppsc_movimento_item_w;
		item_ppsc_movto_item_w.vl_item			:= vl_custo_operacional_w;
		item_ppsc_movto_item_w.vl_saldo_contabil	:= vl_rateio_w;

		ppsc_movto_item_w(ppsc_movto_item_w.count) := item_ppsc_movto_item_w;

		if (ppsc_movto_item_w.count >= 1000) then
			begin
			forall i in ppsc_movto_item_w.first .. ppsc_movto_item_w.last
				insert into pls_ppsc_ato_movto_item values ppsc_movto_item_w(i);
			commit;

			ppsc_movto_item_w.delete;
			end;
		end if;

		qt_movimento_w := qt_movimento_w + 1;

		end;
		end loop;
	close c_contas_medicas;

	end;
	end loop;
close c_titulos_faturamento;

open c_titulos_abertos;
	loop
	fetch c_titulos_abertos into
		nr_titulo_w,
		vl_saldo_titulo_w,
		vl_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on c_titulos_abertos */
	begin
	
	select	nextval('pls_ppsc_movimento_seq')
	into STRICT	nr_seq_movimento_w
	;

	insert into pls_ppsc_ato_movimento(nr_sequencia,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		cd_estabelecimento,
		ie_tipo_movimento,
		nr_adiantamento,
		nr_seq_cheque,
		nr_seq_lote,
		nr_seq_regra_ppsc,
		nr_titulo,
		vl_saldo_titulo
		)
	values (nr_seq_movimento_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		cd_estabelecimento_p,
		null, --ie_tipo_movimento
		null, --nr_adiantamento,
		null, --nr_seq_cheque,
		nr_seq_lote_p,
		null, --nr_seq_regra_ppsc
		nr_titulo_w,
		vl_saldo_titulo_w);

	select	nextval('pls_ppsc_ato_movto_item_seq')
	into STRICT	nr_seq_ppsc_movimento_item_w
	;
	
	item_ppsc_movto_item_w.cd_estabelecimento	:= cd_estabelecimento_p;
	item_ppsc_movto_item_w.dt_atualizacao		:= clock_timestamp();
	item_ppsc_movto_item_w.dt_atualizacao_nrec	:= clock_timestamp();
	item_ppsc_movto_item_w.nm_usuario		:= nm_usuario_p;
	item_ppsc_movto_item_w.nm_usuario_nrec		:= nm_usuario_p;
	item_ppsc_movto_item_w.ie_ato_cooperado		:= null;
	item_ppsc_movto_item_w.nr_seq_mensalidade_item	:= null;
	item_ppsc_movto_item_w.nr_seq_movimento		:= nr_seq_movimento_w;
	item_ppsc_movto_item_w.nr_sequencia		:= nr_seq_ppsc_movimento_item_w;
	item_ppsc_movto_item_w.vl_item			:= vl_titulo_w;
	item_ppsc_movto_item_w.vl_saldo_contabil	:= vl_saldo_titulo_w;

	ppsc_movto_item_w(ppsc_movto_item_w.count) := item_ppsc_movto_item_w;

	if (ppsc_movto_item_w.count >= 1000) then
		begin
		forall i in ppsc_movto_item_w.first .. ppsc_movto_item_w.last
			insert into pls_ppsc_ato_movto_item values ppsc_movto_item_w(i);
		commit;

		ppsc_movto_item_w.delete;
		end;
	end if;

	qt_movimento_w := qt_movimento_w + 1;

	end;
	end loop;
close c_titulos_abertos;

if (ppsc_movto_item_w.count >= 1) then
	begin
	forall i in ppsc_movto_item_w.first .. ppsc_movto_item_w.last
		insert into pls_ppsc_ato_movto_item values ppsc_movto_item_w(i);
	commit;

	ppsc_movto_item_w.delete;
	end;
end if;

update pls_ppsc_lote set dt_geracao_lote = clock_timestamp() where nr_sequencia = nr_seq_lote_p;

commit;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ppsc_ato_coop ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_empresa_p bigint) FROM PUBLIC;

