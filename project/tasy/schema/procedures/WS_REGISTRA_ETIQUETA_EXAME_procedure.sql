-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ws_registra_etiqueta_exame ( nr_prescricao_p lab_etiq_prescr_integracao.nr_prescricao%type, nr_seq_prescr_p lab_etiq_prescr_integracao.nr_seq_prescr%type, cd_barras_p lab_etiq_prescr_integracao.cd_barras_apoio%type, ds_etiqueta_p lab_etiq_prescr_integracao.ds_etiqueta%type, nm_usuario_p lab_etiq_prescr_integracao.nm_usuario%type, ds_erro_p INOUT text ) AS $body$
DECLARE


nr_sequencia_w lab_etiq_prescr_integracao.nr_sequencia%type;
ie_updt_inst_w varchar(1);


BEGIN

    begin
        select  null
        into STRICT    ds_erro_p
        from    prescr_procedimento pp
        where   pp.nr_prescricao = nr_prescricao_p and
                pp.nr_sequencia = nr_seq_prescr_p and
                (pp.nr_seq_exame IS NOT NULL AND pp.nr_seq_exame::text <> '');
    exception
        when no_data_found then begin
            ds_erro_p := 'Os parâmetros recebidos não se referem a um exame laboratorial válido';
            return;
        end;
    end;

    begin
        select  'U'
        into STRICT    ie_updt_inst_w
        from    lab_etiq_prescr_integracao lepi
        where   lepi.nr_prescricao = nr_prescricao_p and
                lepi.nr_seq_prescr = nr_seq_prescr_p and
                lepi.cd_barras_apoio = cd_barras_p;
    exception
        when no_data_found then begin
            ie_updt_inst_w := 'I';
        end;
        when too_many_rows then begin
            ie_updt_inst_w := 'U';
        end;
    end;

    if ie_updt_inst_w = 'I' then

        select  nextval('lab_etiq_prescr_integracao_seq')
        into STRICT    nr_sequencia_w
;

        insert into lab_etiq_prescr_integracao(
            nr_sequencia,  -- not null number(10)
            dt_atualizacao,-- not null date
            nm_usuario,    -- not null varchar2(15)
            dt_atualizacao_nrec,    -- date
            nm_usuario_nrec,        -- varchar2(15)
            nr_prescricao,          -- number(14)
            nr_seq_prescr,          -- number(6)
            cd_barras_apoio,        -- varchar2(20)
            ds_etiqueta             -- long
        ) values (
            nr_sequencia_w, -- nr_sequencia
            clock_timestamp(),        -- dt_atualizacao
            nm_usuario_p,   -- nm_usuario
            clock_timestamp(),        -- dt_atualizacao_nrec
            nm_usuario_p,   -- nm_usuario_nrec
            nr_prescricao_p,-- nr_prescricao
            nr_seq_prescr_p,-- nr_seq_prescr
            cd_barras_p,    -- cd_barras_apoio
            ds_etiqueta_p   -- ds_etiqueta
        );

    else

        update lab_etiq_prescr_integracao lepi set
            lepi.dt_atualizacao   = clock_timestamp(),      -- not null date
            lepi.nm_usuario       = nm_usuario_p, -- not null varchar2(15)
            lepi.cd_barras_apoio  = cd_barras_p,           -- varchar2(20)
            lepi.ds_etiqueta      = ds_etiqueta_p          -- long
        where
            lepi.nr_prescricao = nr_prescricao_p and
            lepi.nr_seq_prescr = nr_seq_prescr_p and
            lepi.cd_barras_apoio = cd_barras_p;

    end if;

    if coalesce(ds_erro_p::text, '') = '' then
        ds_erro_p := 'OK';
    end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ws_registra_etiqueta_exame ( nr_prescricao_p lab_etiq_prescr_integracao.nr_prescricao%type, nr_seq_prescr_p lab_etiq_prescr_integracao.nr_seq_prescr%type, cd_barras_p lab_etiq_prescr_integracao.cd_barras_apoio%type, ds_etiqueta_p lab_etiq_prescr_integracao.ds_etiqueta%type, nm_usuario_p lab_etiq_prescr_integracao.nm_usuario%type, ds_erro_p INOUT text ) FROM PUBLIC;

