-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_valor_conta ( NR_INTERNO_CONTA_P bigint, DS_ERRO_P INOUT text, IE_LISTA_TODOS_P text) AS $body$
DECLARE



ds_erro_w			varchar(80) 	:= '';
cd_convenio_w			integer;
ie_tipo_atend_w			smallint;
cd_estab_w			integer;
ie_regra_w			varchar(01);

cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_Grupo_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_material_w			integer;
cd_classe_w			integer;
cd_subgrupo_w			integer;
cd_categoria_w			varchar(10);
nr_seq_proc_interno_w		bigint;
ie_responsavel_credito_w	varchar(5);
nr_seq_proc_pacote_w		bigint;
nr_seq_mat_proc_w		bigint;
cd_setor_atendimento_w		integer;
ds_erro_completo_w		varchar(2000);
nr_seq_exame_w			bigint;
nr_seq_proc_ref_w		bigint;
nr_seq_proc_int_ref_w		bigint;
ie_tipo_atend_conta_w		smallint;

C01 CURSOR FOR
SELECT	cd_material,
	0,
	0,
	0,
	ie_responsavel_credito,
	nr_seq_proc_pacote,
	nr_sequencia,
	cd_setor_atendimento,
	0,
	nr_seq_proc_princ
from	material_atend_paciente
where	nr_interno_conta 	= nr_interno_conta_p
  and	coalesce(cd_motivo_exc_conta::text, '') = ''
  and	coalesce(vl_material,0)	= 0

union all

select	0,
	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno,
	ie_responsavel_credito,
	nr_seq_proc_pacote,
	nr_sequencia,
	cd_setor_atendimento,
	nr_seq_exame,
	nr_seq_proc_princ
from	procedimento_paciente
where	nr_interno_conta 		= nr_interno_conta_p
  and	coalesce(cd_motivo_exc_conta::text, '') = ''
  and	coalesce(vl_procedimento,0)	= 0
  and	coalesce(vl_medico,0)		= 0
  and	coalesce(vl_custo_operacional,0)	= 0
  and	coalesce(vl_anestesista,0)	= 0
  and	coalesce(vl_auxiliares,0)		= 0;


C02 CURSOR FOR
SELECT	ie_regra
from 	regra_valor_conta
where	cd_estabelecimento      			= cd_estab_w
and	coalesce(cd_material, cd_material_w)		= cd_material_w
and	coalesce(cd_grupo_material, cd_grupo_w)		= cd_grupo_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_w)	= cd_subgrupo_w
and	coalesce(cd_classe_material, cd_classe_w)	= cd_classe_w
and	coalesce(cd_convenio, cd_convenio_w)		= cd_convenio_w
and 	coalesce(ie_tipo_atendimento,ie_tipo_atend_w)	= ie_tipo_atend_w
and 	coalesce(ie_tipo_atend_conta,ie_tipo_atend_conta_w)	= ie_tipo_atend_conta_w
and	coalesce(cd_categoria, cd_categoria_w)	= cd_categoria_w
and 	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
and	coalesce(ie_responsavel_credito,coalesce(ie_responsavel_credito_w,'0')) = coalesce(ie_responsavel_credito_w,'0')
and 	coalesce(nr_seq_proc_int_ref, coalesce(nr_seq_proc_int_ref_w,0)) = coalesce(nr_seq_proc_int_ref_w,0)
and 	coalesce(cd_procedimento::text, '') = ''
and 	coalesce(cd_grupo_proc::text, '') = ''
and 	coalesce(cd_especialidade_proc::text, '') = ''
and 	coalesce(cd_area_procedimento::text, '') = ''
and 	coalesce(nr_seq_proc_interno::text, '') = ''
and 	coalesce(nr_seq_exame::text, '') = ''
--and	((cd_material is not null) or
--	(cd_classe_material is not null) or
--	(cd_subgrupo_material is not null) or
--	(cd_grupo_material is not null))
order by
	coalesce(cd_material,0),
	coalesce(cd_classe_material,0),
	coalesce(cd_subgrupo_material,0),
	coalesce(cd_grupo_material,0),
	coalesce(ie_tipo_atendimento,0),
	coalesce(ie_tipo_atend_conta,0),
	coalesce(cd_convenio,0),
	coalesce(cd_setor_atendimento,0),
	coalesce(ie_responsavel_credito,' '),
	coalesce(nr_seq_proc_int_ref,0);

C03 CURSOR FOR
SELECT	ie_regra
from 	regra_valor_conta
where	cd_estabelecimento      			= cd_estab_w
and	coalesce(cd_procedimento,cd_procedimento_w) 		= cd_procedimento_w
and	coalesce(ie_origem_proced,ie_origem_proced_w)	= ie_origem_proced_w
and	coalesce(cd_area_procedimento,cd_area_w)		= cd_area_w
and	coalesce(cd_especialidade_proc,cd_especialidade_w)	= cd_especialidade_w
and	coalesce(cd_grupo_proc,cd_grupo_w)			= cd_grupo_w
and	coalesce(nr_seq_proc_interno, coalesce(nr_seq_proc_interno_w,0))	= coalesce(nr_seq_proc_interno_w,0)
and	coalesce(nr_seq_exame, coalesce(nr_seq_exame_w,0))	= coalesce(nr_seq_exame_w,0)
and	coalesce(cd_convenio, cd_convenio_w)			= cd_convenio_w
and 	coalesce(ie_tipo_atendimento,ie_tipo_atend_w)	= ie_tipo_atend_w
and 	coalesce(ie_tipo_atend_conta,ie_tipo_atend_conta_w)	= ie_tipo_atend_conta_w
and	coalesce(cd_categoria, cd_categoria_w)		= cd_categoria_w
and	coalesce(ie_responsavel_credito,coalesce(ie_responsavel_credito_w,'0')) = coalesce(ie_responsavel_credito_w,'0')
and 	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
and 	coalesce(nr_seq_proc_int_ref, coalesce(nr_seq_proc_int_ref_w,0)) = coalesce(nr_seq_proc_int_ref_w,0)
and 	coalesce(cd_material::text, '') = ''
and 	coalesce(cd_grupo_material::text, '') = ''
and 	coalesce(cd_classe_material::text, '') = ''
and 	coalesce(cd_subgrupo_material::text, '') = ''
--and	((cd_procedimento is not null) or
--	(cd_grupo_proc is not null) or
--	(cd_especialidade_proc is not null) or
--	(cd_area_procedimento is not null) or
--	(nvl(nr_seq_proc_interno_w,0) <> 0))
order by
	coalesce(nr_seq_exame,0),
	coalesce(nr_seq_proc_interno,0),
	coalesce(cd_procedimento,0),
	coalesce(cd_grupo_proc,0),
	coalesce(cd_especialidade_proc,0),
	coalesce(cd_area_procedimento,0),
	coalesce(ie_tipo_atendimento,0),
	coalesce(ie_tipo_atend_conta,0),
	coalesce(ie_responsavel_credito,' '),
	coalesce(cd_convenio,0),
	 coalesce(cd_setor_atendimento,0),
	 coalesce(nr_seq_proc_int_ref,0);


BEGIN

ds_erro_w		:= '';
ds_erro_completo_w	:= '';
select	b.ie_tipo_atendimento,
	a.cd_convenio_parametro,
	b.cd_estabelecimento,
	a.cd_categoria_parametro,
	coalesce(a.ie_tipo_atend_conta,0)
into STRICT	ie_tipo_atend_w,
	cd_convenio_w,
	cd_estab_w,
	cd_categoria_w,
	ie_tipo_atend_conta_w
from	Atendimento_paciente b,
	conta_paciente a
where	a.nr_interno_conta	= nr_interno_conta_p
and	a.nr_atendimento	= b.nr_atendimento;

OPEN C01;
LOOP
FETCH C01 	into
		cd_material_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		ie_responsavel_credito_w,
		nr_seq_proc_pacote_w,
		nr_seq_mat_proc_w,
		cd_setor_atendimento_w,
		nr_seq_exame_w,
		nr_seq_proc_ref_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (coalesce(nr_seq_proc_ref_w,0) > 0) then

		select 	coalesce(max(nr_seq_proc_interno),0)
		into STRICT	nr_seq_proc_int_ref_w
		from 	procedimento_paciente
		where 	nr_sequencia = nr_seq_proc_ref_w;

	end if;

	ie_regra_w		:= 'I';
	if (cd_material_w > 0) then
		select	cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material
		into STRICT	cd_grupo_w,
			cd_subgrupo_w,
			cd_classe_w
		from	estrutura_material_v
		where	cd_material	= cd_material_w;

		OPEN C02;
		LOOP
		FETCH C02 into ie_regra_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			ie_regra_w	:= ie_regra_w;
		END LOOP;
		CLOSE C02;
		if (ie_regra_w = 'P') and (coalesce(nr_seq_proc_pacote_w,0) > 0) then
			ie_regra_w:= 'Z';  --Itens do Pacote pode ter valor zerado
		elsif (ie_regra_w	= 'D') and (Obter_Desconto_item_conta(nr_seq_mat_proc_w	,2) <> 0) then
			ie_regra_w:= 'Z';  --Itens com desconto pode ter valor zerado
		end if;



	elsif (cd_procedimento_w > 0) then
		select	coalesce(max(cd_grupo_proc),0),
			coalesce(max(cd_especialidade),0),
			coalesce(max(cd_area_procedimento),0)
		into STRICT	cd_grupo_w,
			cd_especialidade_w,
			cd_area_w
		from	estrutura_procedimento_v
		where	cd_procedimento	= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;
		OPEN C03;
		LOOP
		FETCH C03 into ie_regra_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			ie_regra_w	:= ie_regra_w;
		END LOOP;
		CLOSE C03;
		if (ie_regra_w = 'P') and (coalesce(nr_seq_proc_pacote_w,0) > 0) then
			ie_regra_w:= 'Z';  --Itens do Pacote pode ter valor zerado
		elsif (ie_regra_w	= 'D') and (Obter_Desconto_item_conta(nr_seq_mat_proc_w	,1) <> 0) then
			ie_regra_w:= 'Z';  --Itens com desconto pode ter valor zerado
		end if;
	end if;
	if (ie_regra_w <> 'Z') then
		if (cd_procedimento_w > 0) then
			ds_erro_w		:= '22(P.'||cd_procedimento_w||') ';
		elsif (cd_material_w > 0) then
			ds_erro_w	:= '22(M.'||cd_material_w||') ';
		end if;
		if (coalesce(length(ds_erro_completo_w),0) < 1900) then
			ds_erro_completo_w:= 	ds_erro_completo_w || ds_erro_w || chr(13) || chr(10);
		end if;
	end if;

	end;
END LOOP;
CLOSE C01;

if (IE_LISTA_TODOS_P = 'S') then
	ds_erro_p:= ds_erro_completo_w;
else
	ds_erro_p:= ds_erro_w;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_valor_conta ( NR_INTERNO_CONTA_P bigint, DS_ERRO_P INOUT text, IE_LISTA_TODOS_P text) FROM PUBLIC;

