-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_diaria_uti_sus ( nr_atendimento_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE



vl_sh_w			double precision;
vl_sp_w			double precision;
vl_sadt_w			double precision;
qt_dia_uti_w		smallint;
qt_proced_w			double precision;
nr_seq_old_w		bigint;
nr_sequencia_w		bigint;
ie_classif_Urg_Emerg_w	varchar(15);
ie_gera_diaria_uti_w	varchar(1);
cd_setor_atendimento_w	integer;
cd_unidade_basica_w	varchar(10);
cd_unidade_compl_w	varchar(10);
dt_entrada_unidade_w	timestamp;
nr_seq_atepacu_w		bigint;
ie_situacao_proc_w	varchar(2);
cd_estabelecimento_w	integer;


BEGIN
select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;

select coalesce(max(IE_GERA_DIARIA_UTI),'N')
into STRICT	 ie_gera_diaria_uti_w
from	 sus_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;


begin
select b.cd_classificacao
into STRICT	ie_classif_Urg_Emerg_w
from 	sus_classificacao_hospital b,
	atendimento_paciente a
where a.cd_estabelecimento 	= b.cd_estabelecimento
  and a.nr_atendimento		= nr_atendimento_p
  and b.nr_sequencia		= 1;
exception
	when others then
          	ie_classif_Urg_Emerg_w := '0';
end;

if (ie_classif_Urg_Emerg_w = '0' or
	 ie_gera_diaria_uti_w = 'S') then
	begin
	select coalesce(max(coalesce(qt_dia_uti_mes_ini,0) + coalesce(qt_dia_uti_mes_ant,0) + coalesce(qt_dia_uti_mes_alta,0)),0)
	into STRICT qt_dia_uti_w
	from sus_aih
	where nr_atendimento 	= nr_atendimento_p
	and	nr_interno_conta	= nr_interno_conta_p;
	select 	coalesce(max(qt_procedimento),0),
			coalesce(max(nr_sequencia),0)
	into STRICT 		qt_proced_w,
			nr_seq_old_w
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_p
	  and	cd_procedimento = 99080991
	  and	coalesce(cd_motivo_exc_conta::text, '') = '';
	if (nr_seq_old_w > 0) and (qt_dia_uti_w = 0) then
		delete from procedimento_paciente
		where nr_sequencia	= nr_seq_old_w;
	elsif (nr_seq_old_w > 0) and (qt_dia_uti_w > 0) then
		begin
		update procedimento_paciente
		set qt_procedimento	= qt_dia_uti_w
		where nr_sequencia	= nr_seq_old_w;
		CALL Atualiza_Preco_Proc_Sus(nr_seq_old_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

select	coalesce(max(ie_situacao),'A')
into STRICT	ie_situacao_proc_w
from	procedimento
where	cd_procedimento		= 99080991
and	ie_origem_proced	= 2;

if (ie_classif_Urg_Emerg_w = '0' or
	 ie_gera_diaria_uti_w = 'S') 		and (qt_dia_uti_w > 0) 			and (qt_proced_w = 0) 			and (ie_situacao_proc_w	= 'A')		then
			begin
			/* Busca lançamento na UTI */

			select coalesce(max(a.nr_sequencia),0)
			into STRICT 	 nr_seq_old_w
			from 	 setor_atendimento b,
				 procedimento_paciente a
			where	 nr_interno_conta = nr_interno_conta_p
			  and	 a.cd_setor_atendimento = b.cd_setor_atendimento
			  and	 b.cd_classif_setor = '4'
			  and	 a.ie_origem_proced = 2
			  and	 coalesce(a.cd_motivo_exc_conta::text, '') = '';

			/* Pode ter passagem e nenhum lançamento */

			if (nr_seq_old_w = 0) then
				select max(a.cd_setor_atendimento),
				 	 max(a.cd_unidade_basica),
				 	 max(a.cd_unidade_compl),
				 	 max(a.dt_entrada_unidade),
					 max(a.nr_seq_interno)
				into STRICT	 cd_setor_atendimento_w,
				 	 cd_unidade_basica_w,
				 	 cd_unidade_compl_w,
				 	 dt_entrada_unidade_w,
					 nr_seq_atepacu_w
				from	 setor_atendimento b,
				 	 atend_paciente_unidade a
				where	 a.cd_setor_atendimento	= b.cd_setor_atendimento
				and	 a.nr_atendimento		= nr_atendimento_p
				and	 b.cd_classif_setor	= '4';
			end if;


			/* Busca lançamento no C.C. */

			if (nr_seq_old_w = 0) then
				select coalesce(max(a.nr_sequencia),0)
				into STRICT 	 nr_seq_old_w
				from 	 setor_atendimento b,
					 procedimento_paciente a
				where	 nr_interno_conta = nr_interno_conta_p
			  	and	 a.cd_setor_atendimento = b.cd_setor_atendimento
			  	and	 b.cd_classif_setor = '2'
				and	 a.ie_origem_proced = 2
				and	 coalesce(a.cd_motivo_exc_conta::text, '') = '';
			end if;

			/* Busca último lançamento */

			if (nr_seq_old_w = 0) then
				select max(nr_sequencia)
				into STRICT nr_seq_old_w
				from procedimento_paciente
				where nr_interno_conta = nr_interno_conta_p
				and	ie_origem_proced = 2
				and	coalesce(cd_motivo_exc_conta::text, '') = '';
			end if;

	    		select 	nextval('procedimento_paciente_seq')
	     		into STRICT 		nr_sequencia_w
		     	;
			/* Incluir na procedimento_paciente */

			begin
			INSERT INTO PROCEDIMENTO_PACIENTE(NR_SEQUENCIA,
					NR_ATENDIMENTO,
					DT_ENTRADA_UNIDADE,
					CD_PROCEDIMENTO,
					DT_PROCEDIMENTO,
					QT_PROCEDIMENTO,
					DT_ATUALIZACAO,
					NM_USUARIO,
					CD_MEDICO,
					CD_CONVENIO,
					CD_CATEGORIA,
					CD_PESSOA_FISICA,
					DT_PRESCRICAO,
					DS_OBSERVACAO,
					VL_PROCEDIMENTO,
					VL_MEDICO,
					VL_ANESTESISTA,
					VL_MATERIAIS,
					CD_EDICAO_AMB,
					CD_TABELA_SERVICO,
					DT_VIGENCIA_PRECO,
					CD_PROCEDIMENTO_PRINC,
					DT_PROCEDIMENTO_PRINC,
					DT_ACERTO_CONTA,
					DT_ACERTO_CONVENIO,
					DT_ACERTO_MEDICO,
					VL_AUXILIARES,
					VL_CUSTO_OPERACIONAL,
					TX_MEDICO,
					TX_ANESTESIA,
					NR_PRESCRICAO,
					NR_SEQUENCIA_PRESCRICAO,
					CD_MOTIVO_EXC_CONTA,
					DS_COMPL_MOTIVO_EXCON,
					CD_ACAO,
					QT_DEVOLVIDA,
					CD_MOTIVO_DEVOLUCAO,
					NR_CIRURGIA,
					NR_DOC_CONVENIO,
					CD_MEDICO_EXECUTOR,
					IE_COBRA_PF_PJ,
					NR_LAUDO,
					DT_CONTA,
					CD_SETOR_ATENDIMENTO,
					CD_CONTA_CONTABIL,
					CD_PROCEDIMENTO_AIH,
					IE_ORIGEM_PROCED,
					NR_AIH,
					IE_RESPONSAVEL_CREDITO,
					TX_PROCEDIMENTO,
					CD_EQUIPAMENTO,
					IE_VALOR_INFORMADO,
					CD_ESTABELECIMENTO_CUSTO,
					CD_TABELA_CUSTO,
					CD_SITUACAO_GLOSA,
					NR_LOTE_CONTABIL,
					CD_PROCEDIMENTO_CONVENIO,
					NR_SEQ_AUTORIZACAO,
					IE_TIPO_SERVICO_SUS,
					IE_TIPO_ATO_SUS,
					CD_CGC_PRESTADOR,
					NR_NF_PRESTADOR,
					CD_ATIVIDADE_PROF_BPA,
					NR_INTERNO_CONTA,
					NR_SEQ_PROC_PRINC,
					IE_GUIA_INFORMADA,
					DT_INICIO_PROCEDIMENTO,
					IE_EMITE_CONTA,
					IE_FUNCAO_MEDICO,
					IE_CLASSIF_SUS,
					CD_ESPECIALIDADE,
					NM_USUARIO_ORIGINAL,
					NR_SEQ_PROC_PACOTE,
					IE_TIPO_PROC_SUS,
					CD_SETOR_RECEITA,
					VL_ADIC_PLANT,
					NR_SEQ_ATEPACU,
					ie_auditoria)
			SELECT 	nr_sequencia_w,
					NR_ATENDIMENTO,
					coalesce(dt_entrada_unidade_w,DT_ENTRADA_UNIDADE),
					99080991,
					DT_PROCEDIMENTO,
					qt_dia_uti_w,
					clock_timestamp(),
					nm_usuario_p,
					null,
					CD_CONVENIO,
					CD_CATEGORIA,
					CD_PESSOA_FISICA,
					null,
					null,
					0,
					0,
					0,
					0,
					CD_EDICAO_AMB,
					CD_TABELA_SERVICO,
					DT_VIGENCIA_PRECO,
					null,
					null,
					DT_ACERTO_CONTA,
					DT_ACERTO_CONVENIO,
					DT_ACERTO_MEDICO,
					0,
					0,
					0,
					0,
					null,
					null,
					null,
					null,
					CD_ACAO,
					null,
					null,
					null,
					NR_DOC_CONVENIO,
					null,
					IE_COBRA_PF_PJ,
					null,
					DT_CONTA,
					coalesce(cd_setor_atendimento_w,CD_SETOR_ATENDIMENTO),
					null,
					CD_PROCEDIMENTO_AIH,
					IE_ORIGEM_PROCED,
					NR_AIH,
					null,
					100,
					null,
					'N',
					CD_ESTABELECIMENTO_CUSTO,
					CD_TABELA_CUSTO,
					CD_SITUACAO_GLOSA,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					NR_INTERNO_CONTA,
					null,
					IE_GUIA_INFORMADA,
					DT_INICIO_PROCEDIMENTO,
					IE_EMITE_CONTA,
					null,
					IE_CLASSIF_SUS,
					null,
					nm_usuario_p,
					null,
					null,
					CD_SETOR_RECEITA,
					0,
					coalesce(nr_seq_atepacu_w,NR_SEQ_ATEPACU),
					ie_auditoria
			from procedimento_paciente
			where nr_sequencia = nr_seq_old_w;
			exception
			when others then
				qt_dia_uti_w	:= 0;
			end;

			if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

			if (qt_dia_uti_w > 0) then
				CALL Atualiza_Preco_Proc_Sus(NR_SEQUENCIA_W,NM_USUARIO_P);
			end if;
			end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_diaria_uti_sus ( nr_atendimento_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

