-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gravar_protocolo_atend ( ie_origem_protocolo_p text, nr_seq_segurado_p bigint, nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, nr_seq_atendimento_p bigint, nr_seq_boletim_ocor_p bigint, nr_parametro_1_p bigint, nr_seq_prop_online_p bigint, nr_seq_portabilidade_p bigint, nr_seq_solic_comercial_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_protocolo_atend_p INOUT bigint, nr_protocolo_p INOUT bigint, ie_commit_p text default 'S') AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: inserir o numero de protocolo conforme a origem do atendimento ao cliente.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
ie_origem_protocolo_p => 	1 - OPS - Autorizacoes
			2 - OPS - Requisicoes para Autorizacao
			3 - Atendimento (Call Center)
			4 - Boletim Ocorrencia
			5 - Acesso Beneficiario (Portal Web)
			6 - Protocolo de Intercambio
			7 - Solicitacao de rescisao
			8 - Solicitacao de proposta online
			9 - Integracao Call Center
			10 - Portabilidade
			11 - Solicitacao de Lead - utilizada no processo de solicitacao de portabilidade pela app Proposta Online
Quando ie_origem_protocolo_p = '6' o parametro nr_parametro_1_p vai receber o valor do campo nr_sequencia da tabela ptu_solicitacao_pa.
Quando ie_origem_protocolo_p = '7' o parametro nr_parametro_1_p vai receber o valor do campo nr_sequencia da tabela pls_solicitacao_rescisao.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_protocolo_atendimento_w		pls_protocolo_atendimento.nr_sequencia%type;
ie_status_protocolo_w			pls_protocolo_atendimento.ie_status%type;
nr_protocolo_referencia_w		pls_protocolo_atendimento.nr_protocolo_referencia%type;
ie_tipo_protocolo_w			pls_protocolo_atendimento.ie_tipo_protocolo%type;

nr_protocolo_w				pls_atendimento.nr_protocolo_atendimento%type;
nr_sequencial_dia_w			pls_atendimento.nr_sequencial_dia%type;	
ie_status_atend_w			pls_atendimento.ie_status%type;
ie_tipo_pessoa_w			pls_atendimento.ie_tipo_pessoa%type;

ie_estagio_w				pls_guia_plano.ie_estagio%type;
ie_origem_solic_w			pls_guia_plano.ie_origem_solic%type;
nr_seq_guia_principal_w			pls_guia_plano.nr_seq_guia_principal%type;
ie_tipo_processo_w			pls_guia_plano.ie_tipo_processo%type;

cd_operadora_origem_w			ptu_solicitacao_pa.cd_operadora_origem%type;

ie_tipo_segurado_w			pls_segurado.ie_tipo_segurado%type;

ds_mensagem_w				varchar(4000);
nm_segurado_w				varchar(255);
qt_protocolo_w				bigint		:= 0;
ie_insere_prot_atend_w			varchar(1)		:= 'N';
ds_historico_w				text;

ie_tipo_intercambio_w			pls_guia_plano.ie_tipo_intercambio%type;

cd_estabelecimento_w			bigint;
nr_seq_central_w          		pls_protocolo_atendimento.nr_seq_central%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_atendimento_historico
	where	nr_seq_atendimento	= nr_seq_atendimento_p
	and	ie_gerado_sistema	= 'S'
	order by nr_sequencia;

BEGIN

cd_estabelecimento_w := cd_estabelecimento_p;

if (ie_origem_protocolo_p = 9) then
	cd_estabelecimento_w := pls_parametro_operadora_web('EST');
	ie_insere_prot_atend_w	:= 'S';
	ie_tipo_protocolo_w := 'B';
	nr_seq_central_w := nr_seq_atendimento_p;
end if;

if (ie_origem_protocolo_p	= 1) and (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	select	count(1)
	into STRICT	qt_protocolo_w
	from	pls_protocolo_atendimento
	where	nr_seq_guia	= nr_seq_guia_p;
	
	if (qt_protocolo_w = 0) then
		ie_insere_prot_atend_w	:= 'S';
		
		select	ie_estagio,
			ie_origem_solic,
			nr_seq_guia_principal,
			ie_tipo_processo,
			ie_tipo_intercambio
		into STRICT	ie_estagio_w,
			ie_origem_solic_w,
			nr_seq_guia_principal_w,
			ie_tipo_processo_w,
			ie_tipo_intercambio_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;

		if (ie_tipo_processo_w = 'I') then
			ie_tipo_protocolo_w	:= 'I';
		else
			ie_tipo_protocolo_w	:= 'L';
		end if;

		--	Tratamento feito para que seja gerado o protocolo interno de guias recebidas via SCS.
		if (coalesce(ie_tipo_intercambio_w,'X') = 'E') then
			ie_tipo_protocolo_w	:= 'L';
		end if;
		
		if (ie_estagio_w	in (4,5,6,10)) then
			ie_status_protocolo_w	:= 3; -- Finalizado
		elsif (ie_estagio_w	in (2,3,9,12)) then
			ie_status_protocolo_w	:= 2; -- Em andamento
		elsif (ie_estagio_w	in (1,11)) then
			ie_status_protocolo_w	:= 1; -- Pendente
		end if;
		
		if (ie_origem_solic_w	= 'P') then
			ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120608,'NR_GUIA='||nr_seq_guia_p); --Criada a autorizacao n #@NR_GUIA#@, no Portal web.
		elsif (ie_origem_solic_w	= 'M') then
			ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120611,'NR_GUIA='||nr_seq_guia_p); --Criada a autorizacao n #@NR_GUIA#@, na funcao OPS - Autorizacoes.
		elsif (ie_origem_solic_w	= 'I') then
			ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120614,'NR_GUIA='||nr_seq_guia_p); --Recebida a autorizacao n #@NR_GUIA#@, via intercambio.
		end if;
		
		if (nr_seq_guia_principal_w IS NOT NULL AND nr_seq_guia_principal_w::text <> '') then
			begin
			select	nr_protocolo
			into STRICT	nr_protocolo_referencia_w
			from	pls_protocolo_atendimento
			where	nr_seq_guia	= nr_seq_guia_principal_w;
			exception
			when others then
				nr_protocolo_referencia_w	:= null;
			end;

			if (nr_protocolo_referencia_w IS NOT NULL AND nr_protocolo_referencia_w::text <> '') then
				--Esta guia foi vinculada automaticamente com o protocolo de atendimento #@NR_PROTOCOLO_REFERENCIA#@, pois existe uma guia de referencia.
				CALL pls_guia_gravar_historico(nr_seq_guia_p, 2, wheb_mensagem_pck.get_texto(1120615,'NR_PROTOCOLO_REFERENCIA='||nr_protocolo_referencia_w), null, nm_usuario_p);
			end if;	
		end if;
	end if;
elsif (ie_origem_protocolo_p	= 2) and (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	select	count(1)
	into STRICT	qt_protocolo_w
	from	pls_protocolo_atendimento
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	
	if (qt_protocolo_w = 0) then
		ie_insere_prot_atend_w	:= 'S';
		
		select	ie_estagio,
			ie_origem_solic,
			nr_seq_guia_principal,
			ie_tipo_processo,
			ie_tipo_intercambio
		into STRICT	ie_estagio_w,
			ie_origem_solic_w,
			nr_seq_guia_principal_w,
			ie_tipo_processo_w,
			ie_tipo_intercambio_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
		
		if (ie_tipo_processo_w = 'I') then
			ie_tipo_protocolo_w	:= 'I';
		else
			ie_tipo_protocolo_w	:= 'L';
		end if;

		--	Tratamento feito para que seja gerado o protocolo interno de guias recebidas via SCS.
		if (coalesce(ie_tipo_intercambio_w,'X') = 'E') then
			ie_tipo_protocolo_w	:= 'L';
		end if;

		if (ie_estagio_w	in (2,6,7)) then
			ie_status_protocolo_w	:= 3; -- Finalizado
		elsif (ie_estagio_w	in (4,5,8,10)) then
			ie_status_protocolo_w	:= 1; -- Pendente
		end if;
		
		if (ie_origem_solic_w	= 'P') then
			ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120616,'NR_SEQ_REQUISICAO='||nr_seq_requisicao_p); --Criada a requisicao n #@NR_SEQ_REQUISICAO#@, no Portal web.
		elsif (ie_origem_solic_w	= 'M') then
			ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120617,'NR_SEQ_REQUISICAO='||nr_seq_requisicao_p); --Criada a requisicao n #@NR_SEQ_REQUISICAO#@, na funcao OPS - Requisicoes para autorizacao.
		elsif (ie_origem_solic_w	= 'I') then
			ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120619,'NR_SEQ_REQUISICAO='||nr_seq_requisicao_p); --Recebida a requisicao n #@NR_SEQ_REQUISICAO#@, via intercambio.
		end if;
		
		if (nr_seq_guia_principal_w IS NOT NULL AND nr_seq_guia_principal_w::text <> '') then
			begin
			select	nr_protocolo
			into STRICT	nr_protocolo_referencia_w
			from	pls_protocolo_atendimento
			where	nr_seq_requisicao	= (	SELECT	max(c.nr_sequencia)
								from	pls_requisicao c,
									pls_execucao_req_item a
								where	a.nr_seq_requisicao  = c.nr_sequencia
								and	a.nr_seq_guia    = nr_seq_guia_principal_w);
			exception
			when others then
				nr_protocolo_referencia_w	:= null;
			end;

			if (nr_protocolo_referencia_w IS NOT NULL AND nr_protocolo_referencia_w::text <> '') then
				--Esta requisicao foi vinculada automaticamente com o protocolo de atendimento #@NR_PROTOCOLO_REFERENCIA#@, pois existe uma guia de referencia.
				CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p,'L',wheb_mensagem_pck.get_texto(1120620,'NR_PROTOCOLO_REFERENCIA='||nr_protocolo_referencia_w),'',nm_usuario_p);
			end if;
		end if;
	end if;
elsif (ie_origem_protocolo_p	= 3) then
	ie_insere_prot_atend_w	:= 'S';	
	
	begin
	qt_protocolo_w	:= 1;
	
	select	nr_protocolo_atendimento,
		ie_status,
		nr_protocolo_referencia,
		ie_tipo_pessoa
	into STRICT	nr_protocolo_w,
		ie_status_atend_w,
		nr_protocolo_referencia_w,
		ie_tipo_pessoa_w
	from	pls_atendimento
	where	nr_sequencia	= nr_seq_atendimento_p;
	exception
	when others then
		ie_insere_prot_atend_w	:= 'N';
		ie_status_atend_w	:= null;
	end;
	
	if (ie_tipo_pessoa_w = 'B') then
		ie_tipo_protocolo_w	:= 'L';
	elsif (ie_tipo_pessoa_w = 'BI') then
		ie_tipo_protocolo_w	:= 'I';
	end if;
	
	if (ie_status_atend_w in ('P', 'G')) then
		ie_status_protocolo_w	:= 1; -- Pendente
	else
		ie_status_protocolo_w	:= 3; -- Finalizado
	end if;
elsif (ie_origem_protocolo_p	= 4) then
	select	count(1)
	into STRICT	qt_protocolo_w
	from	pls_protocolo_atendimento
	where	nr_seq_boletim_ocor	= nr_seq_boletim_ocor_p;
	
	select	ie_tipo_segurado
	into STRICT	ie_tipo_segurado_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
	
	if (ie_tipo_segurado_w in ('I','H')) then
		ie_tipo_protocolo_w	:= 'I';
	else
		ie_tipo_protocolo_w	:= 'L';
	end if;
	
	if (qt_protocolo_w = 0) then
		ie_insere_prot_atend_w	:= 'S';
	
		ie_status_protocolo_w	:= 3;
		
		ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120621,'NR_BOLETIM_OCORRENCIA='||nr_seq_boletim_ocor_p); --Criado o Boletim de Ocorrencia n #@NR_BOLETIM_OCORRENCIA#@.
	end if;
elsif (ie_origem_protocolo_p	= 5) then
	ie_insere_prot_atend_w	:= 'S';
	ie_status_protocolo_w	:= 3; -- Finalizado
	
	if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
		begin
		select	substr(pls_obter_dados_segurado(nr_seq_segurado_p,'N'),1,255)
		into STRICT	nm_segurado_w
		;
		exception
		when others then
			nm_segurado_w	:= null;
		end;
	end if;
	
	ie_tipo_protocolo_w	:= 'L';
	
	ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120622,'NM_SEGURADO='||nm_segurado_w); --O beneficiario #@NM_SEGURADO#@ logou no Portal web.
elsif (ie_origem_protocolo_p = 6) then
	--Protocolo em andamento
	ie_status_protocolo_w := 2;
	ie_insere_prot_atend_w := 'S';
	select	cd_operadora_origem,
		nr_protocolo_referencia
	into STRICT	cd_operadora_origem_w,
		nr_protocolo_referencia_w
	from	ptu_solicitacao_pa
	where	nr_sequencia  = nr_parametro_1_p;
	
	ie_tipo_protocolo_w	:= 'I';
	
	if (cd_operadora_origem_w IS NOT NULL AND cd_operadora_origem_w::text <> '') then
		ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120623,'CD_OPERADORA_ORIGEM='||cd_operadora_origem_w); --Recebimento de solicitacao de protocolo de intercambio da Unimed #@CD_OPERADORA_ORIGEM#@.
	else
		ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120624); --Recebimento de solicitacao de protocolo de intercambio.
	end if;
elsif (ie_origem_protocolo_p = 7) then
	qt_protocolo_w		:= 0;
	ie_insere_prot_atend_w	:= 'S';
	ie_status_protocolo_w	:= 2; -- em andamento
	ie_tipo_protocolo_w	:= 'L';
	ie_tipo_protocolo_w	:= 'L';
	
	ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120627,'NR_SEQ_SOLICITACAO='||nr_parametro_1_p); --Criada a Solicitacao de rescisao n #@NR_SEQ_SOLICITACAO#@.
elsif (ie_origem_protocolo_p = 8) and (nr_seq_prop_online_p IS NOT NULL AND nr_seq_prop_online_p::text <> '') then	
	ie_tipo_protocolo_w	:= 'L';
	select	count(1)
	into STRICT	qt_protocolo_w
	from	pls_protocolo_atendimento
	where	nr_seq_prop_online	= nr_seq_prop_online_p;
	
	if (qt_protocolo_w = 0) then
		ie_insere_prot_atend_w	:= 'S';
		ie_status_protocolo_w	:= 2; -- em andamento		
				
		ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120625,'NR_SEQ_PROPOSTA_ONLINE='||nr_seq_prop_online_p); --Criada a Solicitacao de proposta online n #@NR_SEQ_PROPOSTA_ONLINE#@.
	end if;
elsif (ie_origem_protocolo_p = 10 ) then	
	ie_tipo_protocolo_w	:= 'L';
	select	count(1)
	into STRICT	qt_protocolo_w
	from	pls_protocolo_atendimento
	where	nr_seq_portabilidade	= nr_seq_portabilidade_p;
	
	if (qt_protocolo_w = 0) then
		ie_insere_prot_atend_w	:= 'S';
		ie_status_protocolo_w	:= 2; -- em andamento	
		ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1120626,'NR_SEQ_PORTABILIDADE='||nr_seq_portabilidade_p); --Criada a Solicitacao de portabilidade n #@NR_SEQ_PORTABILIDADE#@.
	end if;
	
elsif (ie_origem_protocolo_p = 11 ) then	
	ie_tipo_protocolo_w	:= 'L';
	select	count(1)
	into STRICT	qt_protocolo_w
	from	pls_protocolo_atendimento
	where	nr_seq_solicitacao_comercial	= nr_seq_solic_comercial_p;
	
	if (qt_protocolo_w = 0) then
		ie_insere_prot_atend_w	:= 'S';
		ie_status_protocolo_w	:= 2; -- em andamento	
		
		 --Solicitacao de lead n #@NR_SEQ_SOLIC_COMERCIAL#@ criada pela aplicacao Solicitacao de Proposta Online.
		ds_mensagem_w	:= wheb_mensagem_pck.get_texto(1149106,'NR_SEQ_SOLIC_COMERCIAL='||nr_seq_solic_comercial_p);
	end if;

end if;

if (qt_protocolo_w	= 0) then
	-- Gerar o numero do protocolo de atendimento
	SELECT * FROM atualizar_nr_prot_call_center(null, cd_estabelecimento_w, nm_usuario_p, nr_protocolo_w, nr_sequencial_dia_w) INTO STRICT nr_protocolo_w, nr_sequencial_dia_w;	
end if;

if (ie_insere_prot_atend_w = 'S') then
	select	nextval('pls_protocolo_atendimento_seq')
	into STRICT	nr_seq_protocolo_atendimento_w
	;
	
	insert into pls_protocolo_atendimento(
			nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_guia,
			nr_seq_requisicao, nr_seq_boletim_ocor, nr_seq_atend_pls,
			nr_seq_segurado, nr_protocolo, nr_protocolo_referencia,
			ie_origem_protocolo, ie_status, cd_estabelecimento,
			nr_seq_execucao, ie_tipo_protocolo, nr_seq_prop_online,
			nr_seq_central,nr_seq_portabilidade,nr_seq_solicitacao_comercial)
	values (
			nr_seq_protocolo_atendimento_w, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, nr_seq_guia_p,
			nr_seq_requisicao_p, nr_seq_boletim_ocor_p, nr_seq_atendimento_p,
			nr_seq_segurado_p, nr_protocolo_w, nr_protocolo_referencia_w,
			ie_origem_protocolo_p, ie_status_protocolo_w, cd_estabelecimento_w,
			nextval('gestao_protocolo_atend_seq'), ie_tipo_protocolo_w, nr_seq_prop_online_p, 
			nr_seq_central_w, nr_seq_portabilidade_p, nr_seq_solic_comercial_p);
	
	if (ie_origem_protocolo_p = 6) and (nr_parametro_1_p IS NOT NULL AND nr_parametro_1_p::text <> '') then
		update	ptu_solicitacao_pa
		set	nr_seq_protocolo = nr_seq_protocolo_atendimento_w
		where	nr_sequencia = nr_parametro_1_p;
	end if;
	
	if (ie_origem_protocolo_p = 3) then
		for r_C01_w in C01 loop
			begin
			pls_convert_long_(	'PLS_ATENDIMENTO_HISTORICO',
							'DS_HISTORICO_LONG',
							'WHERE NR_SEQUENCIA = :NR_SEQUENCIA',
							'NR_SEQUENCIA='|| r_C01_w.nr_sequencia,
							ds_historico_w);
			
			ds_mensagem_w	:=	substr(ds_historico_w, 4000, 1);
			CALL pls_gravar_log_prot_atend_hist(nr_seq_protocolo_atendimento_w, ds_mensagem_w, nm_usuario_p,'N');
			exception
			when others then
				ds_historico_w	:= null;
			end;
		end loop;
	else
		CALL pls_gravar_log_prot_atend_hist(nr_seq_protocolo_atendimento_w, ds_mensagem_w, nm_usuario_p,'N');
	end if;
	
	nr_seq_protocolo_atend_p	:= nr_seq_protocolo_atendimento_w;
	nr_protocolo_p			:= nr_protocolo_w;
end if;

if (coalesce(ie_commit_p, 'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gravar_protocolo_atend ( ie_origem_protocolo_p text, nr_seq_segurado_p bigint, nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, nr_seq_atendimento_p bigint, nr_seq_boletim_ocor_p bigint, nr_parametro_1_p bigint, nr_seq_prop_online_p bigint, nr_seq_portabilidade_p bigint, nr_seq_solic_comercial_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_protocolo_atend_p INOUT bigint, nr_protocolo_p INOUT bigint, ie_commit_p text default 'S') FROM PUBLIC;

