-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_dose_onc_protocolo ( nr_seq_paciente_p bigint, nr_seq_material_p bigint default null, nr_seq_solucao_p bigint default null) AS $body$
DECLARE


qt_mg_carboplatina_w		double precision;
qt_peso_w			double precision;
qt_superficie_corporea_w	double precision;
ie_calcula_preenchido_w		varchar(3);
nr_seq_atendimento_w		bigint;
ie_atualizar_ciclos_w		varchar(10);
pr_reducao_w			bigint;
nr_seq_solucao_w		bigint;
ie_aplica_reducao_w		varchar(1) := 'S';
nr_seq_material_w		bigint;
pr_reducao_item_w		smallint;
qt_hora_aplicacao_w		double precision;
qt_creatinina_w			real;
qt_auc_w			real;
qt_altura_cm_w			smallint;

C01 CURSOR FOR
	SELECT	nr_seq_atendimento
	from	paciente_atendimento
	where	nr_seq_paciente	= nr_seq_paciente_p
	and	coalesce(dt_liberacao_reg::text, '') = ''
	and	coalesce(nr_prescricao::text, '') = '';
	
C02 CURSOR FOR
	SELECT	nr_seq_solucao
	from	paciente_protocolo_soluc
	where	nr_seq_paciente	= nr_seq_paciente_p;	
	
c03 CURSOR FOR
	SELECT	nr_seq_material,
		pr_reducao
	from	PACIENTE_PROTOCOLO_MEDIC a
	where	nr_seq_paciente	= nr_seq_paciente_p
	and	coalesce(ie_aplica_reducao,'S') = 'S'
	and	coalesce(PR_REDUCAO,100)	<> 100
	and	coalesce(PR_REDUCAO,100)	<> 0
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
	and	((coalesce(nr_seq_solucao_p::text, '') = '') or (a.nr_seq_solucao = nr_seq_solucao_p));
	
c04 CURSOR FOR
	SELECT	nr_seq_material
	from	paciente_protocolo_medic
	where	nr_seq_paciente	= nr_seq_paciente_p
	and	ie_regra_diluicao_cad_mat = 'S';	

C05 CURSOR FOR
	SELECT	a.nr_seq_material,
			coalesce(a.qt_hora_aplicacao,1)
	from	paciente_protocolo_medic a,
			unidade_medida b
	where	a.nr_seq_paciente	= nr_seq_paciente_p
	and		b.cd_unidade_medida = a.cd_unidade_medida
	and		b.ie_mult_h_aplic	= 'S'
	and		(a.qt_hora_aplicacao IS NOT NULL AND a.qt_hora_aplicacao::text <> '')
	and		a.qt_hora_aplicacao	<> 0
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
	and	((coalesce(nr_seq_solucao_p::text, '') = '') or (a.nr_seq_solucao = nr_seq_solucao_p));
	


BEGIN

ie_calcula_preenchido_w := Obter_Param_Usuario(281, 476, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, ie_calcula_preenchido_w);
ie_atualizar_ciclos_w := Obter_Param_Usuario(281, 550, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, ie_atualizar_ciclos_w);
select	round(max(obter_superficie_corp_red_ped(qt_peso, qt_altura, qt_redutor_sc, cd_pessoa_fisica, nm_usuario,IE_FORMULA_SUP_CORPOREA)),obter_numero_casas_sc),
	max(b.qt_peso),
	max(pr_reducao),
	max(qt_creatinina),
	max(qt_auc),
	max(qt_altura)
into STRICT	qt_superficie_corporea_w,
		qt_peso_w,
		pr_reducao_w,
		qt_creatinina_w,
		qt_auc_w,
		qt_altura_cm_w
from 	paciente_setor b
where	b.nr_seq_paciente = nr_seq_paciente_p;

/* atualizar todos os medicamentos com dose padrao */

/* atualizar os medicamentos com base na superficie corporal */

update 	paciente_protocolo_medic a
set 	a.cd_unid_med_prescr =  
               (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida),
	a.qt_dose_prescr =  a.qt_dose * qt_superficie_corporea_w
where 	a.nr_seq_paciente = nr_seq_paciente_p
and exists (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and lower(b.cd_unidade_med_sec) = 'm2')
and (coalesce(ie_calcula_preenchido_w,'N') <> 'N' or (coalesce(a.cd_unid_med_prescr::text, '') = '' and coalesce(a.qt_dose_prescr::text, '') = ''))
and	a.qt_dose > 0
and	(qt_superficie_corporea_w IS NOT NULL AND qt_superficie_corporea_w::text <> '')
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
and	((coalesce(nr_seq_solucao_p::text, '') = '') or (a.nr_seq_solucao = nr_seq_solucao_p));

qt_mg_carboplatina_w	:= obter_qt_mg_carboplatina(nr_seq_paciente_p);

/* atualizar os medicamentos com base na carboplatina */

update paciente_protocolo_medic a
set 	a.qt_dose_prescr =   
               (SELECT a.qt_dose * coalesce(qt_mg_carboplatina_w,1)
                from paciente_setor b  
                where a.nr_seq_paciente = b.nr_seq_paciente),
               a.cd_unid_med_prescr =  
               (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida)  
where a.nr_seq_paciente = nr_seq_paciente_p
  and exists (select b.cd_unidade_med_princ  
                from unidade_medida b
                where a.cd_unidade_medida = b.cd_unidade_medida
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ
                  and lower(b.cd_unidade_med_sec) = 'mgc')
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
and	((coalesce(nr_seq_solucao_p::text, '') = '') or (a.nr_seq_solucao = nr_seq_solucao_p))
and	coalesce(ie_calcula_preenchido_w,'N') <> 'N';

update paciente_protocolo_medic a
set 	a.qt_dose_prescr =   coalesce(qt_mg_carboplatina_w,1),
               a.cd_unid_med_prescr =  
               (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida)  
where a.nr_seq_paciente = nr_seq_paciente_p
  and exists (select b.cd_unidade_med_princ  
                from unidade_medida b
                where a.cd_unidade_medida = b.cd_unidade_medida
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ
                  and lower(b.cd_unidade_med_sec) = obter_desc_expressao(782176)/*'mgcar'*/
)
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
and	((coalesce(nr_seq_solucao_p::text, '') = '') or (a.nr_seq_solucao = nr_seq_solucao_p))
and	coalesce(ie_calcula_preenchido_w,'N') <> 'N';

if (coalesce(ie_calcula_preenchido_w,'N') = 'C') then

	update	paciente_protocolo_medic a
	set 	a.qt_dose_prescr	= coalesce(Obter_dose_convertida(a.cd_material,a.qt_dose,a.cd_unidade_medida,a.cd_unid_med_prescr),a.qt_dose_prescr)
	where	a.nr_seq_paciente 	= nr_seq_paciente_p
	and		a.qt_dose > 0
	and		(a.cd_unidade_medida IS NOT NULL AND a.cd_unidade_medida::text <> '')
	and		(a.cd_unid_med_prescr IS NOT NULL AND a.cd_unid_med_prescr::text <> '')
	and not exists (SELECT b.cd_unidade_med_princ
					from unidade_medida b  
					where a.cd_unidade_medida = b.cd_unidade_medida  
					  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
					  and lower(b.cd_unidade_med_sec) in ('m2','mgc','kg',obter_desc_expressao(782176)/*'mgcar'*/))
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
	and	((coalesce(nr_seq_solucao_p::text, '') = '') or (a.nr_seq_solucao = nr_seq_solucao_p));
	
else

	update 	paciente_protocolo_medic a
	set 	a.cd_unid_med_prescr 	= (	SELECT	c.cd_unidade_med_princ  
						from	unidade_medida c  
						where	a.cd_unidade_medida = c.cd_unidade_medida),
		a.qt_dose_prescr	= a.qt_dose
	where 	a.nr_seq_paciente 	= nr_seq_paciente_p
	and exists (select b.cd_unidade_med_princ  
					from unidade_medida b  
					where a.cd_unidade_medida = b.cd_unidade_medida  
					and b.cd_unidade_medida <> b.cd_unidade_med_princ  
					and b.cd_unidade_med_sec = a.cd_unidade_medida)
	and (coalesce(ie_calcula_preenchido_w,'N') <> 'N' or (coalesce(a.cd_unid_med_prescr::text, '') = '' and coalesce(a.qt_dose_prescr::text, '') = ''))
	and	a.qt_dose > 0
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
	and	((coalesce(nr_seq_solucao_p::text, '') = '') or (a.nr_seq_solucao = nr_seq_solucao_p));


	update 	paciente_protocolo_medic a
	set 	a.cd_unid_med_prescr 	= a.cd_unidade_medida,
		a.qt_dose_prescr	= a.qt_dose
	where 	a.nr_seq_paciente 	= nr_seq_paciente_p
	and not exists (SELECT b.cd_unidade_med_princ  
					from unidade_medida b  
					where a.cd_unidade_medida = b.cd_unidade_medida  
					  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
					  and lower(b.cd_unidade_med_sec) in ('m2','mgc','kg',obter_desc_expressao(782176)/*'mgcar'*/))
	and (coalesce(ie_calcula_preenchido_w,'N') <> 'N' or (coalesce(a.cd_unid_med_prescr::text, '') = '' and coalesce(a.qt_dose_prescr::text, '') = ''))
	and	a.qt_dose > 0
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
	and	((coalesce(nr_seq_solucao_p::text, '') = '') or (a.nr_seq_solucao = nr_seq_solucao_p));
	
end if;

if (pr_reducao_w IS NOT NULL AND pr_reducao_w::text <> '') and (pr_reducao_w	> 0) and (ie_aplica_reducao_w = 'S')then
	update	paciente_protocolo_medic
	set	qt_dose_prescr	= (qt_dose_prescr - ((pr_reducao_w * coalesce(qt_dose_prescr,0)) / 100))
	where	nr_seq_paciente 	= nr_seq_paciente_p
	and	coalesce(ie_aplica_reducao,'S') = 'S'
	and	((coalesce(nr_seq_material_p::text, '') = '') or (nr_seq_material	= nr_seq_material_p))
	and	((coalesce(nr_seq_solucao_p::text, '') = '') or (nr_seq_solucao = nr_seq_solucao_p));	
end if;

open C05;
loop
fetch C05 into	
	nr_seq_material_w,
	QT_HORA_APLICACAO_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin
	
	update	paciente_protocolo_medic
	set		qt_dose_prescr = qt_dose_prescr	* qt_hora_aplicacao_w
	where	nr_seq_paciente	= nr_seq_paciente_p
	and	nr_seq_material = nr_seq_material_w;

	end;
end loop;
close C05;

open C03;
loop
fetch C03 into	
	nr_seq_material_w,
	pr_reducao_item_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	update	paciente_protocolo_medic
	set	QT_DOSE_PRESCR = (((coalesce(pr_reducao_item_w,100) * coalesce(QT_DOSE_PRESCR,0)) / 100))
	where	nr_seq_paciente	= nr_seq_paciente_p
	and	nr_seq_material = nr_seq_material_w;
	end;
end loop;
close C03;

select obter_peso_considerado_onc(nr_seq_paciente_p, nr_seq_material_p, qt_peso_w, qt_altura_cm_w, 'N')
into STRICT qt_peso_w
;

/* atualizar os medicamentos com base no peso */

update paciente_protocolo_medic a
set 	a.cd_unid_med_prescr =  
			   (SELECT b.cd_unidade_med_princ  
				from unidade_medida b  
				where a.cd_unidade_medida = b.cd_unidade_medida),
	a.qt_dose_prescr = a.qt_dose * qt_peso_w
where 	a.nr_seq_paciente = nr_seq_paciente_p
and exists (select b.cd_unidade_med_princ  
				from unidade_medida b  
				where a.cd_unidade_medida = b.cd_unidade_medida  
				  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
				  and lower(b.cd_unidade_med_sec) = 'kg')
and (coalesce(ie_calcula_preenchido_w,'N') <> 'N' or (coalesce(a.cd_unid_med_prescr::text, '') = '' and coalesce(a.qt_dose_prescr::text, '') = ''))
and	a.qt_dose > 0
and	(qt_peso_w IS NOT NULL AND qt_peso_w::text <> '')
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p))
and	((coalesce(nr_seq_solucao_p::text, '') = '') or (a.nr_seq_solucao = nr_seq_solucao_p));

if (coalesce(ie_atualizar_ciclos_w,'N')	<> 'N')then	
	open C01;
	loop
	fetch C01 into	
		nr_seq_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		select obter_peso_considerado_onc(nr_seq_atendimento_w, nr_seq_material_p, qt_peso_w, qt_altura_cm_w, 'S')
		into STRICT qt_peso_w
		;

		if (ie_atualizar_ciclos_w = 'C') then

			update	paciente_atendimento
			set		qt_creatinina 	= coalesce(qt_creatinina_w,qt_creatinina),
					qt_auc  		= coalesce(qt_auc_w,qt_auc),			
					dt_atualizacao	= clock_timestamp(),
					nm_usuario		= wheb_usuario_pck.get_nm_usuario
			where	nr_seq_atendimento = nr_seq_atendimento_w;

		end if;

		commit;		

		CALL atualizar_dose_onc_ciclo(nr_seq_atendimento_w);
		end;
	end loop;
	close C01;
end if;

open C02;
	loop
	fetch C02 into	
		nr_seq_solucao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		CALL gerar_volume_protocolo_soluc(nr_seq_paciente_p,nr_seq_solucao_w,wheb_usuario_pck.get_nm_usuario);
		end;
	end loop;
	close C02;	

open C04;
loop
fetch C04 into	
	nr_seq_material_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	delete from paciente_protocolo_medic
	where	NR_SEQ_DILUICAO = nr_seq_material_w
	and	nr_seq_paciente	= nr_seq_paciente_p;
	CALL Gerar_Reconst_Diluicao_onc(nr_seq_paciente_p,nr_seq_material_w,'D',wheb_usuario_pck.get_nm_usuario);
	exception
		when others then
		null;
	end;
end loop;
close C04;	

CALL Arredondar_dose_onc_protocolo(nr_seq_paciente_p);	

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_dose_onc_protocolo ( nr_seq_paciente_p bigint, nr_seq_material_p bigint default null, nr_seq_solucao_p bigint default null) FROM PUBLIC;

