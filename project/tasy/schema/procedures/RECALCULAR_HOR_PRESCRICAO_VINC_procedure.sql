-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recalcular_hor_prescricao_vinc ( nr_prescricao_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE

				    
dt_primeiro_horario_w		timestamp;
dt_inicio_prescricao_w		timestamp;
dt_prescricao_w			timestamp;
cd_procedimento_w		bigint;
nr_seq_procedimento_w		bigint;
cd_intervalo_w			varchar(10);
nr_prescricao_w			bigint;
nr_seq_solucao_w		bigint;
cd_dieta_w			bigint;
nr_seq_dieta_w			bigint;
nr_seq_recomendacao_w		bigint;
nr_seq_gas_w			bigint;
nr_seq_leite_der_w		bigint;
ds_horarios_w			varchar(2000);
ds_horarios2_w			varchar(2000);
ds_horario_w			varchar(2000);
nr_ocorrencia_w			bigint;
dt_horario_servico_w		timestamp;
hr_prim_horario_w		varchar(5);
ie_servico_w			varchar(1)	:= 'N';
dt_inicio_interv_w		timestamp;
nr_horas_validade_w		integer;
dt_validade_prescr_w		timestamp;
cd_material_w			bigint;
qt_hora_intervalo_w		smallint;
qt_min_intervalo_w		integer;
ds_dose_diferenciada_w		varchar(50);
nr_seq_material_w		bigint;
dt_prev_execucao_w		timestamp;
nr_etapas_w			smallint;
nr_etapas2_w			smallint;
qt_tempo_aplicacao_w		double precision;
ie_arredondar_etapa_w		varchar(1);
qt_hora_fase_w			double precision;
qt_solucao_total_w		double precision;
qt_dosagem_w			double precision;
VarCalcularEtapaSolucao_w	varchar(1);
VarCalculaVolumeVelocidade_w	varchar(5);
VarCalculaTempoSolucao_w	varchar(5);
VarHorarioSolucao_w		varchar(1);
ie_tipo_dosagem_w		varchar(5);
ie_etapa_especial_w		varchar(1);
qt_volsolu_w			double precision;
qt_temsol_w			double precision;
ie_via_aplicacao_w		varchar(5);
qt_unitaria_w			double precision;
qt_dose_especial_w		double precision;
ie_origem_inf_w			varchar(1);
cd_unidade_medida_dose_w	varchar(30);
qt_material_w			double precision;
qt_dispensar_w			double precision;
ie_regra_disp_w			varchar(1);
ds_erro_w			varchar(255);
qt_dia_prim_hor_w		smallint;
ie_agrupador_w			smallint;
nr_seq_jejum_w			bigint;
nr_seq_anterior_w		bigint;
nr_seq_tipo_w			bigint;
nr_seq_objetivo_w		bigint;
ie_inicio_w			varchar(15);
qt_min_ant_w			integer;
qt_min_depois_w			integer;
dt_evento_w			timestamp;
ds_evento_w			varchar(255);
ds_observacao_w 		varchar(255);
qt_hora_ant_w			integer;
qt_hora_depois_w		integer;
ie_repete_copia_w		varchar(1);
dt_inicio_jejum_w		timestamp;
dt_fim_jejum_w			timestamp;
ie_se_necessario_w		varchar(1);
ie_acm_w				varchar(1);
ie_hemodialise_w		prescr_solucao.ie_hemodialise%type;	
 
c01 CURSOR FOR 
	SELECT nr_prescricao, 
		cd_intervalo, 
		cd_material, 
		qt_hora_intervalo, 
		qt_min_intervalo, 
		ds_horarios, 
		nr_sequencia, 
		ie_via_aplicacao, 
		coalesce(qt_unitaria,0), 
		coalesce(qt_dose_especial,0), 
		ds_dose_diferenciada, 
		coalesce(ie_origem_inf,'1'), 
		cd_unidade_medida_dose, 
		CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE null END , 
		qt_dia_prim_hor, 
		ie_agrupador, 
		coalesce(ie_se_necessario,'N'), 
		coalesce(ie_acm,'N') 
	from	prescr_material 
	where	nr_prescricao	  	 =  nr_prescricao_p 
	and	ie_agrupador	  	 in (1,2,3,7,9) 
	and	coalesce(ie_acm,'N')	  	 = 'N' 
	and	coalesce(ie_se_necessario,'N') = 'N' 
	and 	coalesce(ie_urgencia,'N')	 = 'N' 
	and	coalesce(ie_sem_aprazamento,'N')	= 'N' 
	and	(hr_prim_horario IS NOT NULL AND hr_prim_horario::text <> '');
	
c02 CURSOR FOR 
	SELECT	cd_procedimento, 
		cd_intervalo, 
		nr_sequencia, 
		dt_prev_execucao, 
		coalesce(qt_hora_intervalo,0), 
	    coalesce(qt_min_intervalo,0), 
		ds_horarios 
	from	prescr_procedimento 
	where	nr_prescricao		 =  nr_prescricao_p 
	and	coalesce(ie_acm,'N')	  	 = 'N' 
	and	coalesce(ie_se_necessario,'N') = 'N' 
	and 	coalesce(ie_urgencia,'N')	 = 'N' 
	and	ie_tipo_proced not in ('BSST','BS');

c03 CURSOR FOR 
	SELECT	nr_seq_solucao, 
		nr_etapas, 
		ds_horarios, 
		qt_hora_fase, 
		cd_intervalo, 
		ie_tipo_dosagem, 
		coalesce(QT_SOLUCAO_TOTAL - qt_dose_ataque,0), 
		qt_dosagem, 
		ie_etapa_especial, 
		coalesce(ie_hemodialise,'N') 
	from	prescr_solucao 
	where	nr_prescricao	     =  nr_prescricao_p 
	and	coalesce(qt_tempo_aplicacao,0) >  0 
	and	coalesce(ie_acm,'N')	  	 = 'N' 
	and	coalesce(ie_se_necessario,'N') = 'N' 
	and 	coalesce(ie_urgencia,'N')	 = 'N' 
	and	coalesce(qt_tempo_aplicacao,0) <= 24;
	
c04 CURSOR FOR 
	SELECT 	nr_sequencia, 
		cd_intervalo, 
		ds_horarios 
	from	prescr_dieta 
	where	nr_prescricao		 =  nr_prescricao_p 
	and 	coalesce(ie_urgencia,'N')	 = 'N';
	
	 
	 
c05 CURSOR FOR 
	SELECT	to_char(dt_horario,'hh24:mi') 
	from	rep_servico 
	where	nr_prescricao		 = nr_prescricao_p 
	and	nr_seq_dieta		 = nr_seq_dieta_w 
	order by dt_horario;	
 
c06 CURSOR FOR 
	SELECT nr_seq_tipo, 
		nr_seq_objetivo, 
		ie_inicio, 
		qt_min_ant, 
		qt_min_depois, 
		dt_evento, 
		ds_evento, 
		ds_observacao, 
		qt_hora_ant, 
		qt_hora_depois, 
		ie_repete_copia, 
		coalesce(nr_seq_anterior,nr_sequencia), 
		(dt_inicio + 1), 
		(dt_fim	+ 1) 
	from  rep_jejum 
	where  nr_prescricao = nr_prescricao_p 
	and	coalesce(ie_repete_copia,'N') = 'S' 
	and	(dt_inicio IS NOT NULL AND dt_inicio::text <> '') 
	and	(dt_fim IS NOT NULL AND dt_fim::text <> '');

--	 
c07 CURSOR FOR 
	SELECT	nr_prescricao, 
		cd_intervalo, 
		ds_horarios, 
		nr_sequencia 
	from	prescr_recomendacao 
	where	nr_prescricao		 =  nr_prescricao_p 
	and	coalesce(ie_acm,'N')	  	 = 'N' 
	and	coalesce(ie_se_necessario,'N') = 'N' 
	and 	coalesce(ie_urgencia,'N')	 = 'N';
	
c08 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_gas 
	from	prescr_gasoterapia 
	where	nr_prescricao		 =  nr_prescricao_p;
	
c09 CURSOR FOR 
	SELECT 	nr_sequencia, 
		cd_intervalo, 
		ds_horarios, 
		hr_prim_horario 
	from	prescr_leite_deriv 
	where	nr_prescricao		 =  nr_prescricao_p 
	and	coalesce(ie_se_necessario,'N') = 'N';
	
c10 CURSOR FOR 
	SELECT	nr_prescricao, 
		cd_intervalo, 
		ds_horarios, 
		cd_material, 
		qt_hora_intervalo, 
		qt_min_intervalo, 
		coalesce(nr_ocorrencia,0), 
		ds_dose_diferenciada, 
		nr_sequencia 
	from	prescr_material 
	where	nr_prescricao		 =  nr_prescricao_p 
	and	ie_agrupador 		 in (8,12,15) 
	and	coalesce(ie_acm,'N')	  	 = 'N' 
	and	coalesce(ie_se_necessario,'N') = 'N' 
	and 	coalesce(ie_urgencia,'N')	 = 'N' 
	and	coalesce(ie_intervalo_dif,'N') = 'N';
	
c11 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_intervalo, 
		dt_prev_execucao, 
		qt_min_intervalo, 
		ds_horarios		 
	from	prescr_gasoterapia 
	where	nr_prescricao		 =  nr_prescricao_p;

	 

BEGIN 
 
ie_arredondar_etapa_w := Obter_Param_Usuario(924, 742, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_arredondar_etapa_w);
VarCalcularEtapaSolucao_w := Obter_Param_Usuario(924, 461, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, VarCalcularEtapaSolucao_w);
VarCalculaVolumeVelocidade_w := Obter_Param_Usuario(924, 636, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, VarCalculaVolumeVelocidade_w);
VarCalculaTempoSolucao_w := Obter_Param_Usuario(924, 394, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, VarCalculaTempoSolucao_w);
VarHorarioSolucao_w := Obter_Param_Usuario(924, 284, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, VarHorarioSolucao_w);
 
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '')	then 
	 
	select	nr_horas_validade, 
		dt_validade_prescr, 
		dt_prescricao, 
		dt_primeiro_horario, 
		to_char(dt_inicio_prescr,'hh24:mi'), 
		dt_inicio_prescr 
	into STRICT	nr_horas_validade_w, 
		dt_validade_prescr_w, 
		dt_prescricao_w, 
		dt_primeiro_horario_w, 
		hr_prim_horario_w, 
		dt_inicio_prescricao_w 
	from	prescr_medica 
	where	nr_prescricao	= nr_prescricao_p;
		 
	open c01;
	loop 
	fetch c01 into	 
		nr_prescricao_w, 
		cd_intervalo_w, 
		cd_material_w, 
		qt_hora_intervalo_w, 
		qt_min_intervalo_w, 
		ds_horarios_w, 
		nr_seq_material_w, 
		ie_via_aplicacao_w, 
		qt_unitaria_w, 
		qt_dose_especial_w, 
		ds_dose_diferenciada_w, 
		ie_origem_inf_w, 
		cd_unidade_medida_dose_w, 
		ie_regra_disp_w, 
		qt_dia_prim_hor_w, 
		ie_agrupador_w, 
		ie_se_necessario_w, 
		ie_acm_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	 	begin 		 
		nr_ocorrencia_w := 0;
		 
		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_w, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), to_date(hr_prim_horario_w,'hh24:mi'), nr_horas_validade_w, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
 
 
		ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;
	 
 
		SELECT * FROM Obter_Quant_Dispensar(1, cd_material_w, nr_prescricao_w, nr_seq_material_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, qt_dose_especial_w, nr_ocorrencia_w, ds_dose_diferenciada_w, ie_origem_inf_w, cd_unidade_medida_dose_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
 
		update	prescr_material 
		set	nr_ocorrencia		= nr_ocorrencia_w, 
			qt_total_dispensar	= qt_dispensar_w, 
			qt_material			= qt_material_w	, 
			ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END , 
			qt_dia_prim_hor 	= qt_dia_prim_hor_w, 
			ds_horarios			= ds_horarios_w, 
			hr_prim_horario   = to_char(dt_primeiro_horario_w, 'hh24:mi') 
		where	nr_prescricao		= nr_prescricao_p 
		and	nr_sequencia		= nr_seq_material_w;
 
		if (ie_agrupador_w not in (3,7,9)) then 
		   CALL Ajustar_Prescr_Material(nr_prescricao_p, nr_seq_material_w);
		end if;
						 
	 	end;
	end loop;
	close c01;
 
	open c02;
	loop 
	fetch c02 into	 
		cd_procedimento_w, 
		cd_intervalo_w, 
		nr_seq_procedimento_w, 
		dt_prev_execucao_w, 
		qt_hora_intervalo_w, 
		qt_min_intervalo_w, 
		ds_horarios_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		nr_ocorrencia_w := 0;
		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_primeiro_horario_w, dt_prev_execucao_w, nr_horas_validade_w, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
							 
		 
		ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;
		 
		update	prescr_procedimento 
		set	ds_horarios	=	ds_horarios_w, 
			nr_ocorrencia	=	nr_ocorrencia_w 
		where	nr_prescricao	=	nr_prescricao_p 
		and	nr_sequencia	=	nr_seq_procedimento_w;
		 
		CALL ajustar_prescr_mat_proc(nr_prescricao_p, nr_seq_procedimento_w, cd_perfil_p,null);
		end;
	end loop;
	close c02;
	 
	 
	open c03;
	loop 
	fetch c03 into	 
		nr_seq_solucao_w, 
		nr_etapas_w, 
		ds_horarios_w, 
		qt_hora_fase_w, 
		cd_intervalo_w, 
		ie_tipo_dosagem_w, 
		qt_solucao_total_w, 
		qt_dosagem_w, 
		ie_etapa_especial_w, 
		ie_hemodialise_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
 
		select	qt_tempo_aplicacao 
		into STRICT	qt_tempo_aplicacao_w 
		from	prescr_solucao 
		where	nr_prescricao	=  nr_prescricao_p 
		and	nr_seq_solucao	=  nr_seq_solucao_w;
			 
			 
		if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '')  then 
			SELECT * FROM Calcular_etapas_interv_solucao(cd_intervalo_w, qt_tempo_aplicacao_w, ie_arredondar_etapa_w, qt_hora_fase_w, nr_etapas_w, null, null) INTO STRICT qt_hora_fase_w, nr_etapas_w;
		end if;
		 
		IF (ie_tipo_dosagem_w IS NOT NULL AND ie_tipo_dosagem_w::text <> '') 
		AND (upper(ie_tipo_dosagem_w) <> 'ACM') 
		AND ((coalesce(qt_dosagem_w::text, '') = '') 
		   OR (coalesce(qt_solucao_total_w::text, '') = '') 
		   OR (qt_solucao_total_w = 0)) THEN 
			 
		 
			SELECT * FROM Calcular_Valores_Solucao(nr_prescricao_p, nr_seq_solucao_w, qt_dosagem_w, upper(ie_tipo_dosagem_w), VarCalcularEtapaSolucao_w, VarCalculaVolumeVelocidade_w, VarCalculaTempoSolucao_w, ie_arredondar_etapa_w, nm_usuario_p, qt_tempo_aplicacao_w, qt_volsolu_w, nr_etapas2_w, qt_temsol_w, 'N') INTO STRICT qt_volsolu_w, nr_etapas2_w, qt_temsol_w;
			 
			 
			if (qt_volsolu_w IS NOT NULL AND qt_volsolu_w::text <> '') 	then 
				update	prescr_solucao 
				set	qt_solucao_total =	qt_volsolu_w 
				where	nr_prescricao	 =	nr_prescricao_p 
				and	nr_seq_solucao	 =	nr_seq_solucao_w;		
			end if;
				 
			if (qt_temsol_w IS NOT NULL AND qt_temsol_w::text <> '') and (varcalculatemposolucao_w <> 'N')	then 
			 
				update	prescr_solucao 
				set	qt_tempo_aplicacao	 =	qt_temsol_w 
				where	nr_prescricao	 	 =	nr_prescricao_p 
				and	nr_seq_solucao	 	 =	nr_seq_solucao_w;
						 
			end if;
				    
			if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then 
			  CALL Ajustar_valores_item_sol(nr_etapas_w,nr_prescricao_p,nr_seq_solucao_w,cd_intervalo_w,nm_usuario_p);
			end if;
			 
		end if;
			 
		if (nr_etapas2_w IS NOT NULL AND nr_etapas2_w::text <> '') then 
			nr_etapas_w	:= nr_etapas2_w;
		end if;				
				 
		SELECT * FROM calcula_horarios_etapas(dt_primeiro_horario_w, nr_etapas_w, qt_hora_fase_w, nm_usuario_p, VarHorarioSolucao_w, qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios2_w, ie_etapa_especial_w, ie_hemodialise_w) INTO STRICT ds_horarios_w, ds_horarios2_w;
		 
		ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;
			 
		update	prescr_solucao 
		set	ds_horarios	=  ds_horarios_w, 
			nr_etapas	=  nr_etapas_w, 
			hr_prim_horario = to_char(dt_primeiro_horario_w, 'hh24:mi') 
		where	nr_prescricao	=  nr_prescricao_p 
		and	nr_seq_solucao	=  nr_seq_solucao_w;
		 
	 
		end;
	end loop;
	close c03;
	 
	 
	open c04;
	loop 
	fetch c04 into	 
		nr_seq_dieta_w, 
		cd_intervalo_w, 
		ds_horarios_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin 
 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_servico_w 
		from	rep_servico 
		where	nr_prescricao		 = nr_prescricao_p 
		and	nr_seq_dieta		 = nr_seq_dieta_w;	
		 
		if (ie_servico_w = 'S') 	then 
			 
			ds_horarios_w 		:= '';
 
			--Ordenar os horários para a geração do DS_HORARIOS 
			open c05;
			loop 
			fetch c05 into	 
				ds_horario_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				begin 
				if (coalesce(ds_horarios_w::text, '') = '') then 
					ds_horarios_w := ds_horario_w;
				else 
					ds_horarios_w := substr(ds_horarios_w||' '||ds_horario_w,1,255);
				end if;			
				end;
			end loop;
			close c05;
				 
		elsif (ie_servico_w = 'N')	and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '')	then 
			 
			SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_primeiro_horario_w, dt_primeiro_horario_w, nr_horas_validade_w, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
 
			ds_horarios_w := ds_horarios_w || ds_horarios2_w;
			 
		elsif (ie_servico_w = 'N') then 
			 
			ds_horarios_w	:= ds_horarios_w||' '||ds_horarios_w;
			 
			ds_horarios_w	:= Eliminar_horarios_vigencia(ds_horarios_w, null, converte_char_data(to_char(dt_inicio_prescricao_w,'dd/mm/yyyy'),hr_prim_horario_w,null), dt_inicio_prescricao_w, 0, 0, nr_prescricao_p);
		 
		end if;
		 
		 
		update	prescr_dieta 
		set	ds_horarios	= ds_horarios_w 
		where	nr_prescricao	= nr_prescricao_p 
		and	nr_sequencia	= nr_seq_dieta_w;
			 
		end;
	end loop;
	close c04;
	 
	open c06;
	loop 
	fetch c06 into	 
		nr_seq_tipo_w, 
		nr_seq_objetivo_w, 
		ie_inicio_w, 
		qt_min_ant_w, 
		qt_min_depois_w, 
		dt_evento_w, 
		ds_evento_w, 
		ds_observacao_w, 
		qt_hora_ant_w, 
		qt_hora_depois_w, 
		ie_repete_copia_w, 
		nr_seq_anterior_w, 
		dt_inicio_jejum_w, 
		dt_fim_jejum_w;
	EXIT WHEN NOT FOUND; /* apply on c06 */
		begin 
		 
		select	nextval('rep_jejum_seq') 
		into STRICT	nr_seq_jejum_w 
		;
 
		insert into rep_jejum(nr_sequencia, 
			nr_prescricao, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_tipo, 
			nr_seq_objetivo, 
			ie_inicio, 
			dt_inicio, 
			qt_min_ant, 
			qt_min_depois, 
			dt_evento, 
			ds_evento, 
			ds_observacao, 
			dt_fim, 
			qt_hora_ant, 
			qt_hora_depois, 
			ie_suspenso, 
			ie_repete_copia, 
			nr_seq_anterior) 
		values (nr_seq_jejum_w, 
			nr_prescricao_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_tipo_w, 
			nr_seq_objetivo_w, 
			ie_inicio_w, 
			dt_inicio_jejum_w, 
			qt_min_ant_w, 
			qt_min_depois_w, 
			dt_evento_w, 
			ds_evento_w, 
			ds_observacao_w, 
			dt_fim_jejum_w, 
			qt_hora_ant_w, 
			qt_hora_depois_w, 
			'N', 
			ie_repete_copia_w, 
			nr_seq_anterior_w);
		end;
	end loop;
	close c06;
	 
	open c07;
	loop 
	fetch c07 into	 
		nr_prescricao_w, 
		cd_intervalo_w, 
		ds_horarios_w, 
		nr_seq_recomendacao_w;
	EXIT WHEN NOT FOUND; /* apply on c07 */
		begin 
		dt_inicio_interv_w	:= converte_char_data(to_char(dt_primeiro_horario_w,'dd/mm/yyyy'),hr_prim_horario_w, null);
		nr_ocorrencia_w		:= 0;
	 
		SELECT * FROM Calcular_Horario_Prescricao( 
					nr_prescricao_p, cd_intervalo_w, coalesce(dt_inicio_prescricao_w,dt_prescricao_w), dt_inicio_interv_w, nr_horas_validade_w, null, null, null, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
		 
		ds_horarios_w := ds_horarios_w ||ds_horarios2_w;
		 
		select	reordenar_horarios(dt_inicio_interv_w, ds_horarios_w) || ' ' 
		into STRICT	ds_horarios_w 
		;
			 
		update	prescr_recomendacao 
		set	ds_horarios	=	ds_horarios_w 
		where	nr_prescricao	=	nr_prescricao_w 
		and	nr_sequencia	=	nr_seq_recomendacao_w;
		 
		end;
	end loop;
	close c07;
		 
	open c09;
	loop 
	fetch c09 into	 
		nr_seq_leite_der_w, 
		cd_intervalo_w, 
		ds_horarios_w, 
		hr_prim_horario_w;
	EXIT WHEN NOT FOUND; /* apply on c09 */
		begin 
		nr_ocorrencia_w := 0;
		 
		SELECT * FROM calcular_horario_prescricao(nr_prescricao_p, cd_intervalo_w, dt_primeiro_horario_w, dt_primeiro_horario_w, nr_horas_validade_w, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
						 
		ds_horarios_w := ds_horarios_w || ds_horarios2_w;
		 
		update	prescr_leite_deriv 
		set	ds_horarios	=	ds_horarios_w 
		where	nr_prescricao	=	nr_prescricao_p 
		and	nr_sequencia	=	nr_seq_leite_der_w;
		 
		CALL atualiza_produto_lactario(nr_seq_leite_der_w, nm_usuario_p, cd_perfil_p);
		 
		end;
	end loop;
	close c09;
	 
	open c10;
	loop 
	fetch c10 into	 
		nr_prescricao_w, 
		cd_intervalo_w, 
		ds_horarios_w, 
		cd_material_w, 
		qt_hora_intervalo_w, 
		qt_min_intervalo_w, 
		nr_ocorrencia_w, 
		ds_dose_diferenciada_w, 
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on c10 */
		begin 
		 
		nr_ocorrencia_w := 0;
		 
		SELECT * FROM calcular_horario_prescricao(	nr_prescricao_w, cd_intervalo_w, dt_primeiro_horario_w, dt_primeiro_horario_w, nr_horas_validade_w, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', ds_dose_diferenciada_w) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
		 
		 
		 
		ds_horarios_w := ds_horarios_w || ds_horarios2_w;
		 
		 
		update	prescr_material 
		set	ds_horarios	=	ds_horarios_w, 
			nr_ocorrencia	=	nr_ocorrencia_w 
		where	nr_prescricao	=	nr_prescricao_w 
		and	cd_material	=	cd_material_w 
		and	nr_sequencia	=	nr_seq_material_w;
		 
		end;
	end loop;
	close c10;
	 
	open c11;
	loop 
	fetch c11 into	 
		nr_seq_gas_w, 
		cd_intervalo_w, 
		dt_prev_execucao_w, 
		qt_min_intervalo_w, 
		ds_horarios_w;
	EXIT WHEN NOT FOUND; /* apply on c11 */
		begin		 
		nr_ocorrencia_w := 0;
		 
		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_primeiro_horario_w, dt_prev_execucao_w, nr_horas_validade_w, 0, 0, 0, QT_MIN_INTERVALO_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT QT_MIN_INTERVALO_w, ds_horarios_w, ds_horarios2_w;
		 
		ds_horarios_w	:=	ds_horarios_w || ds_horarios2_w;
				 
		update	prescr_gasoterapia 
		set	ds_horarios	=	ds_horarios_w 
		where	nr_prescricao	=	nr_prescricao 
		and	nr_sequencia	=	nr_seq_gas_w;
			 
		end;
	end loop;
	close c11;
	commit;	
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recalcular_hor_prescricao_vinc ( nr_prescricao_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

