-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_estornar_custo_pos_estab ( nr_seq_conta_pos_estab_p bigint, nm_usuario_p text, ds_motivo_p text, ie_origem_p text) AS $body$
DECLARE


qt_registros_w			bigint;
nr_seq_pos_estab_w		bigint;
ds_log_w			pls_log_pos_estabelecido.ds_log%type;
ds_log_estorno_w		pls_log_pos_estabelecido.ds_log%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
ie_status_faturamento_w		pls_conta_pos_estabelecido.ie_status_faturamento%type;
qt_estornados_w			integer;
qt_reg_fat_w			integer;
qt_registros_mensalidade_w	bigint;


BEGIN

select	count(1)
into STRICT	qt_registros_w
from	pls_conta_pos_estabelecido
where	nr_sequencia = nr_seq_conta_pos_estab_p
and	((ie_situacao = 'A') or (coalesce(ie_situacao::text, '') = ''))
and	((nr_seq_mensalidade_seg IS NOT NULL AND nr_seq_mensalidade_seg::text <> '') or (nr_seq_regra_limite_mens IS NOT NULL AND nr_seq_regra_limite_mens::text <> ''));

if (qt_registros_w = 0) then
	select  count(1)
	into STRICT 	qt_registros_mensalidade_w
	from  	pls_mensalidade_item_conta a,
		pls_mensalidade_seg_item b,
		pls_mensalidade_segurado c,
		pls_mensalidade d
	where  	b.nr_sequencia = a.nr_seq_item
	and  	c.nr_sequencia = b.nr_seq_mensalidade_seg
	and  	d.nr_sequencia = c.nr_seq_mensalidade
	and  	a.nr_seq_conta_pos_estab = nr_seq_conta_pos_estab_p
	and	coalesce(d.ie_cancelamento::text, '') = '';
else
	qt_registros_mensalidade_w	:= 0;
end if;

if	((qt_registros_w > 0) or (qt_registros_mensalidade_w > 0)) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(780678, 'NR_SEQ_POS=' ||nr_seq_conta_pos_estab_p);
end if;

select	count(1)
into STRICT	qt_reg_fat_w
from	pls_conta_pos_estabelecido
where	nr_sequencia = nr_seq_conta_pos_estab_p
and (ie_situacao = 'A' or coalesce(ie_situacao::text, '') = '')
and	(nr_seq_lote_fat IS NOT NULL AND nr_seq_lote_fat::text <> '');

if (qt_reg_fat_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(780679, 'NR_SEQ_POS=' ||nr_seq_conta_pos_estab_p);
end if;

if (ie_origem_p = 'P') then
	ds_log_w := 	'Estorno realizado através da funcionalidade "BD - Estornar preço Pós - Estabelecido".' || pls_util_pck.enter_w ||
			'Motivo: ' || ds_motivo_p;
elsif (ie_origem_p = 'C') then
	ds_log_w := 	'Estorno realizado através da funcionalidade "BD - Estornar preço Pós-estabelecido conta".' || pls_util_pck.enter_w ||
			'Motivo: ' || ds_motivo_p;
elsif (ie_origem_p = 'A') then
	ds_log_w := 	'Estorno realizado através da funcionalidade "BD - Estornar valores de apropriação".' || pls_util_pck.enter_w ||
			'Motivo: ' || ds_motivo_p;
end if;

ds_log_estorno_w := 'Registro gerado através do estorno do item de pós-estabelecido: ' || nr_seq_conta_pos_estab_p;

select	nr_seq_conta,
	ie_status_faturamento
into STRICT	nr_seq_conta_w,
	ie_status_faturamento_w
from	pls_conta_pos_estabelecido
where	nr_sequencia = nr_seq_conta_pos_estab_p;

select	count(1)
into STRICT	qt_estornados_w
from	pls_conta_pos_estabelecido
where	nr_seq_conta_pos_orig = nr_seq_conta_pos_estab_p;

if (qt_estornados_w > 0) then

	CALL wheb_mensagem_pck.exibir_mensagem_abort(354770);
end if;

select	nextval('pls_conta_pos_estabelecido_seq')
into STRICT	nr_seq_pos_estab_w
;

insert into pls_conta_pos_estabelecido(	nr_sequencia, nr_seq_conta, vl_beneficiario,
		dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
		nm_usuario_nrec, nr_seq_conta_proc, nr_seq_conta_mat,
		ie_calcula_preco_benef, ie_preco_plano, nr_seq_regra_pos_estab,
		ie_cobrar_mensalidade, nr_seq_mensalidade_seg,
		cd_procedimento, ie_origem_proced, nr_seq_material, dt_item, dt_inicio_item, dt_fim_item,
		ie_status_faturamento, nr_seq_conta_pos_orig,ie_vl_pag_prestador,
		cd_centro_custo, cd_classif_cred, cd_classif_cred_faturamento,
		cd_classif_cred_provisao, cd_classif_cred_taxa, cd_classif_deb,
		cd_classif_deb_faturamento, cd_classif_deb_provisao, cd_classif_deb_taxa,
		cd_conta_cred, cd_conta_cred_provisao, cd_conta_cred_taxa,
		cd_conta_deb, cd_conta_deb_provisao, cd_conta_deb_taxa,
		cd_historico, cd_historico_faturamento, cd_historico_provisao,
		cd_historico_provisao_taxa, cd_historico_rev_fat, cd_historico_rev_fat_taxa,
		cd_item_convertido, cd_item_convertido_xml, cd_moeda_calculo,
		cd_porte_anestesico, cd_proc_convertido, cd_ref_fabricante,
		cd_ref_material_fab_opme, cd_sistema_ant, det_reg_anvisa_opme,
		ds_item_convertido, ds_item_ptu, dt_competencia_mens,
		dt_mes_competencia, ie_glosa, ie_origem_valor_pos,
		ie_situacao, ie_tipo_guia, ie_tipo_prestador_atend,
		ie_tipo_prestador_exec, ie_tipo_protocolo, ie_tipo_segurado,
		nm_fornecedor_opme, nr_lote_contab_faturamento, nr_lote_contabil_prov,
		nr_nota_fiscal_forn_opme, nr_registro_anvisa, nr_seq_analise,
		nr_seq_cabecalho, nr_seq_conta_rec,
		nr_seq_conv_mat, nr_seq_cooperativa, nr_seq_disc_mat,
		nr_seq_disc_proc, nr_seq_esquema, nr_seq_esquema_faturamento,
		nr_seq_esquema_prov, nr_seq_esquema_prov_taxa, nr_seq_evento_fat,
		nr_seq_lote_disc, nr_seq_lote_fat, nr_seq_mat_rec,
		nr_seq_pagador, nr_seq_pos_estab_interc, nr_seq_prestador_atend,
		nr_seq_prestador_exec, nr_seq_proc_rec, nr_seq_protocolo,
		nr_seq_rec_futura, nr_seq_regra_conv_proc, nr_seq_regra_ctb_cred,
		nr_seq_regra_ctb_deb, nr_seq_regra_evento_fat, nr_seq_regra_horario,
		nr_seq_regra_tx_opme, nr_seq_sca, nr_seq_segurado,
		nr_seq_tiss_tab_conversao)
(	SELECT	nr_seq_pos_estab_w, nr_seq_conta, vl_beneficiario*-1,
		clock_timestamp(), nm_usuario_p, clock_timestamp(),
		nm_usuario_p, nr_seq_conta_proc, nr_seq_conta_mat,
		ie_calcula_preco_benef, ie_preco_plano, nr_seq_regra_pos_estab,
		'N', null,
		cd_procedimento, ie_origem_proced, nr_seq_material, dt_item, dt_inicio_item, dt_fim_item,
		'N', nr_seq_conta_pos_estab_p, ie_vl_pag_prestador,
		cd_centro_custo, cd_classif_cred, cd_classif_cred_faturamento,
		cd_classif_cred_provisao, cd_classif_cred_taxa, cd_classif_deb,
		cd_classif_deb_faturamento, cd_classif_deb_provisao, cd_classif_deb_taxa,
		cd_conta_cred, cd_conta_cred_provisao, cd_conta_cred_taxa,
		cd_conta_deb, cd_conta_deb_provisao, cd_conta_deb_taxa,
		cd_historico, cd_historico_faturamento, cd_historico_provisao,
		cd_historico_provisao_taxa, cd_historico_rev_fat, cd_historico_rev_fat_taxa,
		cd_item_convertido, cd_item_convertido_xml, cd_moeda_calculo,
		cd_porte_anestesico, cd_proc_convertido, cd_ref_fabricante,
		cd_ref_material_fab_opme, cd_sistema_ant, det_reg_anvisa_opme,
		ds_item_convertido, ds_item_ptu, dt_competencia_mens,
		dt_mes_competencia, ie_glosa, ie_origem_valor_pos,
		ie_situacao, ie_tipo_guia, ie_tipo_prestador_atend,
		ie_tipo_prestador_exec, ie_tipo_protocolo, ie_tipo_segurado,
		nm_fornecedor_opme, nr_lote_contab_faturamento, nr_lote_contabil_prov,
		nr_nota_fiscal_forn_opme, nr_registro_anvisa, nr_seq_analise,
		nr_seq_cabecalho, nr_seq_conta_rec,
		nr_seq_conv_mat, nr_seq_cooperativa, nr_seq_disc_mat,
		nr_seq_disc_proc, nr_seq_esquema, nr_seq_esquema_faturamento,
		nr_seq_esquema_prov, nr_seq_esquema_prov_taxa, nr_seq_evento_fat,
		nr_seq_lote_disc, nr_seq_lote_fat, nr_seq_mat_rec,
		nr_seq_pagador, nr_seq_pos_estab_interc, nr_seq_prestador_atend,
		nr_seq_prestador_exec, nr_seq_proc_rec, nr_seq_protocolo,
		nr_seq_rec_futura, nr_seq_regra_conv_proc, nr_seq_regra_ctb_cred,
		nr_seq_regra_ctb_deb, nr_seq_regra_evento_fat, nr_seq_regra_horario,
		nr_seq_regra_tx_opme, nr_seq_sca, nr_seq_segurado,
		nr_seq_tiss_tab_conversao
	from	pls_conta_pos_estabelecido
	where	nr_sequencia	= nr_seq_conta_pos_estab_p);

update	pls_conta_pos_estabelecido
set	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p,
	ie_cobrar_mensalidade	= 'N',
	ie_status_faturamento	= 'N'
where	nr_sequencia		= nr_seq_conta_pos_estab_p;

--Gera estornos paraa apropriação pós estab caso tiver
insert into pls_conta_pos_estab_aprop( 	nr_sequencia, vl_apropriacao, nr_seq_centro_apropriacao,
		dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
		nm_usuario_nrec, nr_seq_conta_pos_estab)
	( SELECT nextval('pls_conta_pos_estab_aprop_seq'), vl_apropriacao *-1, nr_seq_centro_apropriacao,
		 clock_timestamp(), clock_timestamp(), nm_usuario_p,
		 nm_usuario_p, nr_seq_pos_estab_w
	 from   pls_conta_pos_estab_aprop where nr_seq_conta_pos_estab = nr_seq_conta_pos_estab_p);

insert into pls_log_pos_estabelecido(	nr_sequencia, nr_seq_conta, nr_seq_conta_pos,
		dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
		nm_usuario_nrec, ds_log, ie_status_faturamento_ant,
		ie_status_faturamento_new, ie_tipo_registro, nr_lote_contabil)
values (	nextval('pls_log_pos_estabelecido_seq'), nr_seq_conta_w, nr_seq_conta_pos_estab_p,
		clock_timestamp(), clock_timestamp(), nm_usuario_p,
		nm_usuario_p, ds_log_w, ie_status_faturamento_w,
		'N', 'L', null);

insert into pls_log_pos_estabelecido(	nr_sequencia, nr_seq_conta, nr_seq_conta_pos,
		dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
		nm_usuario_nrec, ds_log, ie_status_faturamento_ant,
		ie_status_faturamento_new, ie_tipo_registro, nr_lote_contabil)
values (	nextval('pls_log_pos_estabelecido_seq'), nr_seq_conta_w, nr_seq_pos_estab_w,
		clock_timestamp(), clock_timestamp(), nm_usuario_p,
		nm_usuario_p, ds_log_estorno_w, null,
		null, 'L', null);

-- Gerar os participantes do procedimento referente ao pós-estabelecido
CALL pls_gerar_conta_pos_estab_part(nr_seq_pos_estab_w,'N',nm_usuario_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_estornar_custo_pos_estab ( nr_seq_conta_pos_estab_p bigint, nm_usuario_p text, ds_motivo_p text, ie_origem_p text) FROM PUBLIC;

