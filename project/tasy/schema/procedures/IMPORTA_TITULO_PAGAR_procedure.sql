-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importa_titulo_pagar (nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


 
c01 CURSOR FOR
SELECT	ds_conteudo, row_number() OVER () AS linha
from	W_TITULO_MXM a
where	a.nm_usuario = nm_usuario_p
order	by nr_sequencia;

c01_w				             c01%rowtype;
titulo_pagar_w	         titulo_pagar%rowtype;
nr_titulo_w	             titulo_pagar.nr_titulo%type;
nr_seq_conta_financ_w    titulo_pagar_classif.nr_seq_conta_financ%type;
cd_centro_custo_w        titulo_pagar_classif.cd_centro_custo%type;
nr_cpf_w                 pessoa_fisica.nr_cpf%type;
ds_inconsistencia_w	     varchar(4000);


BEGIN 

  open c01;
  loop
    fetch c01 into	
    c01_w;
  EXIT WHEN NOT FOUND; /* apply on c01 */

    begin
  
      select	nextval('titulo_pagar_seq')
      into STRICT 	nr_titulo_w
;

      titulo_pagar_w.nr_titulo :=                nr_titulo_w;
      titulo_pagar_w.cd_estabelecimento :=       cd_estabelecimento_p;
      titulo_pagar_w.dt_atualizacao :=           clock_timestamp();
      titulo_pagar_w.dt_emissao :=               to_date(substr(c01_w.ds_conteudo,1,8),'dd/mm/yyyy');
      titulo_pagar_w.dt_vencimento_original :=   to_date(substr(c01_w.ds_conteudo,9,8),'dd/mm/yyyy');
      titulo_pagar_w.dt_vencimento_atual :=      to_date(substr(c01_w.ds_conteudo,17,8),'dd/mm/yyyy');
      titulo_pagar_w.vl_titulo :=                (substr(c01_w.ds_conteudo,25,8))::numeric  / 100;
      titulo_pagar_w.vl_saldo_titulo :=          (substr(c01_w.ds_conteudo,33,8))::numeric  / 100;
      titulo_pagar_w.cd_tipo_taxa_juro :=        (substr(c01_w.ds_conteudo,41,1))::numeric;
      titulo_pagar_w.cd_tipo_taxa_multa :=       (substr(c01_w.ds_conteudo,42,1))::numeric;
      titulo_pagar_w.tx_desc_antecipacao :=      (substr(c01_w.ds_conteudo,43,4))::numeric  / 100;
      titulo_pagar_w.dt_limite_antecipacao :=    to_date(substr(c01_w.ds_conteudo,47,8),'dd/mm/yyyy');
      titulo_pagar_w.ie_origem_titulo :=         trim(both substr(c01_w.ds_conteudo,55,6));
      titulo_pagar_w.ie_tipo_titulo :=           trim(both substr(c01_w.ds_conteudo,61,2));
      titulo_pagar_w.cd_cgc :=                   trim(both substr(c01_w.ds_conteudo,63,14));
      titulo_pagar_w.nr_titulo_externo :=        trim(both substr(c01_w.ds_conteudo,77,6));
      titulo_pagar_w.tx_juros :=                 trim(both substr(c01_w.ds_conteudo,83,4)) / 100;
      titulo_pagar_w.tx_multa :=                 trim(both substr(c01_w.ds_conteudo,87,4)) / 100;
      titulo_pagar_w.cd_moeda :=                 (substr(c01_w.ds_conteudo,91,1))::numeric;
      titulo_pagar_w.vl_saldo_juros :=           (substr(c01_w.ds_conteudo,92,6))::numeric  / 100;
      titulo_pagar_w.ie_situacao :=              'A';
      titulo_pagar_w.nm_usuario :=               nm_usuario_p;
      titulo_pagar_w.dt_contabil :=              to_date(substr(c01_w.ds_conteudo,1,8),'dd/mm/yyyy');
      titulo_pagar_w.vl_saldo_multa :=           (substr(c01_w.ds_conteudo,98,6))::numeric  / 100;
      titulo_pagar_w.vl_dia_antecipacao :=       (substr(c01_w.ds_conteudo,104,6))::numeric  / 100;
      if (substr(c01_w.ds_conteudo,110,1) = ' ') then
        titulo_pagar_w.cd_tipo_taxa_antecipacao := null;
      else
        titulo_pagar_w.cd_tipo_taxa_antecipacao := (substr(c01_w.ds_conteudo,110,1))::numeric;
      end if;
      titulo_pagar_w.nr_seq_trans_fin_baixa :=   (trim(both substr(c01_w.ds_conteudo,111,10)))::numeric;	
      titulo_pagar_w.nr_seq_trans_fin_contab :=  (trim(both substr(c01_w.ds_conteudo,121,10)))::numeric;
      nr_seq_conta_financ_w :=                   (trim(both substr(c01_w.ds_conteudo,131,10)))::numeric;
      cd_centro_custo_w :=                       (trim(both substr(c01_w.ds_conteudo,141,8)))::numeric;
      titulo_pagar_w.vl_titulo :=                (substr(c01_w.ds_conteudo,149,8))::numeric  / 100;
      titulo_pagar_w.cd_pessoa_fisica :=         trim(both substr(c01_w.ds_conteudo,157,11));
      titulo_pagar_w.nr_seq_classe :=            (trim(both substr(c01_w.ds_conteudo,168,10)))::numeric;
      titulo_pagar_w.nr_documento :=             (trim(both substr(c01_w.ds_conteudo,178,20)))::numeric;
      nr_cpf_w :=                                trim(both substr(c01_w.ds_conteudo,198,11));
      titulo_pagar_w.cd_estab_financeiro :=      trim(both substr(c01_w.ds_conteudo,209,4));
      if (trim(both substr(c01_w.ds_conteudo,213,4)) is null) then
        titulo_pagar_w.cd_estabelecimento :=     cd_estabelecimento_p;
      else
        titulo_pagar_w.cd_estabelecimento :=     trim(both substr(c01_w.ds_conteudo,213,4));
      end if;
      titulo_pagar_w.nr_bloqueto :=              trim(both substr(c01_w.ds_conteudo,217,48));
      titulo_pagar_w.cd_tributo :=               (trim(both substr(c01_w.ds_conteudo,265,3)))::numeric;
      titulo_pagar_w.ie_tipo_pagamento :=        trim(both substr(c01_w.ds_conteudo,268,3));
      titulo_pagar_w.ds_observacao_titulo :=     trim(both substr(c01_w.ds_conteudo,271,255));

      if (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '') then
        select max(cd_pessoa_fisica)
        into STRICT titulo_pagar_w.cd_pessoa_fisica 
        from pessoa_fisica 
        where nr_cpf = nr_cpf_w;
      end if;
    
      if (titulo_pagar_w.cd_cgc IS NOT NULL AND titulo_pagar_w.cd_cgc::text <> '') and (titulo_pagar_w.cd_pessoa_fisica IS NOT NULL AND titulo_pagar_w.cd_pessoa_fisica::text <> '') then
        --O titulo nao pode ser de uma pessoa fisica e juridica ao mesmo tempo
        CALL wheb_mensagem_pck.exibir_mensagem_abort(267353);
      end if;

      insert into titulo_pagar values (titulo_pagar_w.*);

      CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w, nm_usuario_p);

      insert	into titulo_pagar_classif(nr_titulo,
        nr_sequencia,
        nr_seq_conta_financ,
        cd_centro_custo,
        vl_titulo,
        dt_atualizacao,
        nm_usuario,
        cd_conta_contabil)
      values (nr_titulo_w,
        1,
        nr_seq_conta_financ_w,
        cd_centro_custo_w,
        titulo_pagar_w.vl_titulo,
        clock_timestamp(),
        nm_usuario_p,
        titulo_pagar_w.cd_conta_contabil);

      CALL gerar_tributo_titulo(nr_titulo_w, nm_usuario_p, 'N', null, null, null, null, null, cd_estabelecimento_p, null);

    exception
    when others then
      ds_inconsistencia_w := 
        ' cd_pessoa_fisica: '||titulo_pagar_w.cd_pessoa_fisica||chr(13)||
        ' cd_cgc: '||titulo_pagar_w.cd_cgc||chr(13)||
        ' linha: '||c01_w.linha||chr(13)||' '||        
        sqlerrm;
      CALL wheb_mensagem_pck.exibir_mensagem_abort(356126 ,'DS_ERRO=' || ds_inconsistencia_w);
    end;
  
  end loop;
  close c01;

  delete from W_TITULO_MXM where nm_usuario = nm_usuario_p;

  commit;

exception
when others then
  CALL wheb_mensagem_pck.exibir_mensagem_abort(356126 ,'DS_ERRO=' || sqlerrm);
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importa_titulo_pagar (nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

