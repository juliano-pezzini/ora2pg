-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_valores_result_benef ( dt_mes_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_tipo_beneficiario_w		varchar(5)	:= 'B';
ie_tipo_valor_w			varchar(5);
ie_tipo_contratacao_w		varchar(2);
ie_regulamentacao_w		varchar(2);
ie_tipo_vinculo_operadora_w	varchar(2);
vl_resultado_w			double precision;
nr_seq_segurado_w		bigint;
qt_contador_pb_w		bigint;
nr_seq_plano_w			bigint;
qt_registro_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_pagador_w		bigint;
nr_seq_grupo_contrato_w		bigint;
nr_seq_faixa_etaria_w		bigint;
nr_seq_proc_result_w		bigint;
qt_registros_w			bigint	:= 0;
nr_sequencia_w			bigint;
dt_referencia_w			timestamp;
cd_estabelecimento_w		bigint;
nr_seq_intercambio_w		pls_segurado.nr_seq_intercambio%type;
ie_preco_w			pls_resultado.ie_preco%type;

C01 CURSOR FOR 
	SELECT	sum(vl_resultado) vl_resultado, 
		a.nr_seq_segurado, 
		a.nr_seq_produto, 
		a.nr_seq_contrato, 
		a.ie_tipo_contratacao, 
		a.ie_regulamentacao, 
		a.ie_tipo_beneficiario, 
		a.nr_seq_pagador, 
		a.ie_tipo_valor, 
		a.nr_sequencia nr_seq_resultado, 
		a.ie_tipo_vinculo_operadora, 
		a.nr_seq_intercambio, 
		a.ie_preco 
	from	pls_resultado	a 
	where	a.dt_mes_referencia	= dt_referencia_w 
	and	a.cd_estabelecimento	= cd_estabelecimento_w 
	and	coalesce(a.dt_leitura::text, '') = '' 
	group by 
		a.nr_seq_segurado, 
		a.nr_seq_produto, 
		a.nr_seq_contrato, 
		a.ie_tipo_contratacao, 
		a.ie_regulamentacao, 
		a.ie_tipo_beneficiario, 
		a.nr_seq_pagador, 
		a.ie_tipo_valor, 
		a.nr_sequencia, 
		a.ie_tipo_vinculo_operadora, 
		a.nr_seq_intercambio, 
		a.ie_preco;

TYPE 		fetch_array IS TABLE OF C01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w			Vetor;

BEGIN 
dt_referencia_w		:= trunc(dt_mes_referencia_p, 'month');
 
/*aaschlote 04/12/2013 - Tratamento na JOB, pois não pode colocar 1 como estabelecimento fixo*/
 
if (coalesce(cd_estabelecimento_p::text, '') = '') then 
	select	max(cd_estabelecimento) 
	into STRICT	cd_estabelecimento_w 
	from	pls_competencia 
	where	trunc(dt_mes_competencia, 'month') = dt_referencia_w;
else 
	cd_estabelecimento_w	:= cd_estabelecimento_p;
end if;
 
select	nextval('pls_processo_result_seq') 
into STRICT	nr_seq_proc_result_w
;
 
insert into pls_processo_result(nr_sequencia, 
	dt_atualizacao, 
	nm_usuario, 
	dt_atualizacao_nrec, 
	nm_usuario_nrec, 
	cd_estabelecimento, 
	dt_inicio_processo, 
	dt_mesano_referencia) 
values (nr_seq_proc_result_w, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	cd_estabelecimento_w, 
	clock_timestamp(), 
	dt_referencia_w);
 
CALL pls_gerar_valores_result_itens(dt_mes_referencia_p, nm_usuario_p, cd_estabelecimento_w);
 
qt_contador_pb_w	:= 0;
 
CALL gravar_processo_longo('Atualizar resultado competência', 'PLS_GERAR_VALORES_RESULT_BENEF', qt_contador_pb_w);
 
open C01;
loop 
FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
	Vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on C01 */
END LOOP;
CLOSE C01;
 
for i in 1..Vetor_c01_w.COUNT loop 
	s_array := Vetor_c01_w(i);
	for z in 1..s_array.COUNT loop 
		begin 
		vl_resultado_w			:= s_array[z].vl_resultado;
		nr_seq_segurado_w		:= s_array[z].nr_seq_segurado;
		nr_seq_plano_w			:= s_array[z].nr_seq_produto;
		nr_seq_contrato_w		:= s_array[z].nr_seq_contrato;
		ie_tipo_contratacao_w		:= s_array[z].ie_tipo_contratacao;
		ie_regulamentacao_w		:= s_array[z].ie_regulamentacao;
		ie_tipo_beneficiario_w		:= s_array[z].ie_tipo_beneficiario;
		nr_seq_pagador_w		:= s_array[z].nr_seq_pagador;
		ie_tipo_valor_w			:= s_array[z].ie_tipo_valor;
		nr_sequencia_w			:= s_array[z].nr_seq_resultado;
		ie_tipo_vinculo_operadora_w	:= s_array[z].ie_tipo_vinculo_operadora;
		nr_seq_intercambio_w		:= s_array[z].nr_seq_intercambio;
		ie_preco_w			:= s_array[z].ie_preco;
 
		qt_contador_pb_w	:= qt_contador_pb_w + 1;
		 
		CALL pls_atualizar_seg_valores(	'N', 
						vl_resultado_w, 
						ie_tipo_valor_w, 
						nr_seq_segurado_w, 
						nr_seq_pagador_w, 
						nr_seq_contrato_w, 
						nr_seq_plano_w, 
						ie_tipo_contratacao_w, 
						ie_tipo_beneficiario_w, 
						nr_seq_faixa_etaria_w, 
						dt_referencia_w, 
						nm_usuario_p, 
						cd_estabelecimento_w, 
						ie_tipo_vinculo_operadora_w, 
						nr_seq_intercambio_w, 
						ie_regulamentacao_w, 
						ie_preco_w);
						 
		update	pls_resultado 
		set	dt_leitura	= clock_timestamp() 
		where	nr_sequencia	= nr_sequencia_w;
		end;
	end loop;
end loop;
 
CALL pls_atualizar_seg_valores(	'S', 
				null, 
				null, 
				null, 
				null, 
				null, 
				null, 
				null, 
				null, 
				null, 
				dt_referencia_w, 
				nm_usuario_p, 
				cd_estabelecimento_w, 
				null, 
				null, 
				null, 
				null);
 
select	count(1) 
into STRICT	qt_registros_w 
from	pls_resultado	a 
where	a.dt_mes_referencia	= dt_referencia_w;
 
update	pls_processo_result 
set	dt_fim_processo		= clock_timestamp(), 
	qt_registros		= qt_registros_w, 
	dt_mesano_referencia	= dt_referencia_w 
where	nr_sequencia		= nr_seq_proc_result_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_valores_result_benef ( dt_mes_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

