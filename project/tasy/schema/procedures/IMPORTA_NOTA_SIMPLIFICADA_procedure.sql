-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importa_nota_simplificada ( ie_tipo_registro_p bigint, cd_estabelecimento_p bigint, cd_cnpj_p text, nr_ordem_compra_p bigint, nr_nota_fiscal_p bigint, dt_emissao_p timestamp, cd_serie_nf_p text, cd_operacao_nf_p bigint, cd_natureza_p bigint, cd_material_p bigint, cd_local_estoque_p bigint, qt_material_p bigint, vl_unitario_material_p bigint, cd_lote_fabricacao_p text, dt_validade_p timestamp, nm_usuario_p text, nr_sequencia_p INOUT text) AS $body$
DECLARE


nr_seq_nota_w			bigint;
nr_sequencia_nf_w			bigint;
cd_condicao_pagamento_w		bigint;
qt_existe_w			bigint;
dt_atualizacao_estoque_w		timestamp;
nr_item_nf_w			integer;
cd_local_estoque_w		smallint;
cd_conta_contabil_w		varchar(20);
cd_centro_custo_w			integer;
cd_material_estoque_w		integer;
cd_unidade_medida_compra_w	varchar(30);
cd_unidade_medida_estoque_w	varchar(30);
qt_conv_compra_estoque_w		double precision;
qt_conversao_w			double precision;
qt_item_estoque_w			double precision;
vl_total_item_nf_w			double precision;
ie_tipo_conta_w			smallint;
cd_operacao_nota_w		smallint;
cd_material_w			integer;
ie_tipo_mat_imp_nf_w		varchar(1);
						

BEGIN

cd_material_w := cd_material_p;

select	coalesce(ie_tipo_mat_imp_nf,'T')
into STRICT	ie_tipo_mat_imp_nf_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_tipo_registro_p = '0') then

	select	count(*)
	into STRICT	qt_existe_w
	from	pessoa_juridica
	where	cd_cgc = cd_cnpj_p;

	if (qt_existe_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266066);
		--'Nao encontrado nenhum fornecedor com este CNPJ.');
	end if;

	select	nextval('nota_fiscal_seq')
	into STRICT	nr_seq_nota_w
	;

	select (coalesce(max(nr_sequencia_nf),0)+1)
	into STRICT	nr_sequencia_nf_w
	from	nota_fiscal
	where 	cd_estabelecimento	= cd_estabelecimento_p
	and 	cd_cgc_emitente	= cd_cnpj_p
	and 	nr_nota_fiscal	= nr_nota_fiscal_p
	and 	cd_serie_nf	= cd_serie_nf_p;

	if (coalesce(nr_ordem_compra_p,0) > 0) then
		select	coalesce(max(cd_condicao_pagamento),null)
		into STRICT	cd_condicao_pagamento_w
		from	ordem_compra
		where	nr_ordem_compra = nr_ordem_compra_p;
	end if;

	if (coalesce(cd_condicao_pagamento_w,0) = 0) then
		select	coalesce(max(cd_condicao_pagamento_padrao),0)
		into STRICT	cd_condicao_pagamento_w
		from	parametro_compras
		where	cd_estabelecimento = cd_estabelecimento_p;
	end if;

	if (cd_condicao_pagamento_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266067);
		--'Nao encontrada nenhuma condicao de pagamento cadastrada.' || Chr(13) ||

		--'Verifique a Ordem de compras informada ou o cadastro dos parametros de compras - condicao de pagamento padrao.');
	end if;

	begin
	insert into nota_fiscal(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_frete,
		vl_descontos,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		dt_atualizacao,
		nm_usuario,
		cd_cgc,
		cd_natureza_operacao,
		cd_condicao_pagamento,
		ie_situacao,
		nr_ordem_compra,
		ie_tipo_nota)
	values (	nr_seq_nota_w,
		cd_estabelecimento_p,
		cd_cnpj_p,
		cd_serie_nf_p,
		nr_nota_fiscal_p,
		nr_sequencia_nf_w,
		cd_operacao_nf_p,
		dt_emissao_p,
		clock_timestamp(),
		1,
		0,
		'0',
		0,
		0,
		0,
		0,
		0,
		'0',
		clock_timestamp(),
		nm_usuario_p,
		cd_cnpj_p,
		cd_natureza_p,
		cd_condicao_pagamento_w,
		'1',
		CASE WHEN nr_ordem_compra_p=0 THEN null  ELSE nr_ordem_compra_p END ,
		'EN');
		
	exception when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266068,'NR_SEQ_NOTA=' || nr_seq_nota_w || ';' ||
								'CD_CGC=' || cd_cnpj_p || ';' ||
								'CD_SERIE_NF=' || cd_serie_nf_p || ';' ||
								'NR_NOTA_FISCAL=' || nr_nota_fiscal_p || ';' ||
								'NR_SEQUENCIA_NF=' || nr_sequencia_nf_w || ';' ||
								'CD_OPERACAO_NF=' || cd_operacao_nf_p || ';' ||
								'CD_CONDICAO_PAGAMENTO=' || cd_condicao_pagamento_w);
		--'Erro na importacao da nota fiscal:' ||

		--'Seq: ' 		|| nr_seq_nota_w 			|| chr(13) || chr(10) ||

		--'CNPJ: '  		|| cd_cnpj_p 			|| chr(13) || chr(10) ||

		--'Serie: '		|| cd_serie_nf_p 			|| chr(13) || chr(10) ||

		--'NF n: ' 		|| nr_nota_fiscal_p			|| chr(13) || chr(10) ||

		--'Seq NF: '		|| nr_sequencia_nf_w 		|| chr(13) || chr(10) ||

		--'Operacao: ' 	|| cd_operacao_nf_p		|| chr(13) || chr(10) ||

		--'Cond pagto: ' 	|| cd_condicao_pagamento_w);
	end;
nr_sequencia_p := nr_seq_nota_w;
end if;

if (ie_tipo_registro_p = '1') then
	begin

	if (ie_tipo_mat_imp_nf_w = 'A') then
		select	coalesce(max(cd_material),0)
		into STRICT	cd_material_w
		from	material
		where	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'CSA'),1,20) = cd_material_w;
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	material
	where	cd_material = cd_material_w;
		
	if (qt_existe_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266069,'CD_MATERIAL=' || cd_material_w);
		--'Nao encontrado o codigo do material '|| cd_material_w || ' no cadastro.');
	end if;

	select (coalesce(max(nr_item_nf),0)+1)
	into STRICT	nr_item_nf_w
	from	nota_fiscal_item
	where 	nr_sequencia	= coalesce(nr_seq_nota_w,nr_sequencia_p);
	
	if (coalesce(nr_ordem_compra_p,0) > 0) then
		select	coalesce(max(cd_centro_custo), null),
			coalesce(max(cd_local_estoque), null)
		into STRICT	cd_centro_custo_w,
			cd_local_estoque_w
		from	ordem_compra_item
		where	nr_ordem_compra	= nr_ordem_compra_p
		and	cd_material	= cd_material_w;
	end if;
	
	if (coalesce(cd_local_estoque_w::text, '') = '') then
		cd_local_estoque_w  := cd_local_estoque_p;
	end if;
	
	select	coalesce(max(nr_sequencia_nf),1),
		max(cd_operacao_nf)
	into STRICT 	nr_sequencia_nf_w,
		cd_operacao_nota_w
	from 	nota_fiscal
	where 	cd_estabelecimento	= cd_estabelecimento_p
	and 	cd_cgc_emitente	= cd_cnpj_p
	and 	nr_nota_fiscal	= nr_nota_fiscal_p
	and 	cd_serie_nf	= cd_serie_nf_p;
	
	begin
	select	cd_material_estoque,
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMC'),1,255) cd_unidade_medida_compra,
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
		qt_conv_compra_estoque
	into STRICT	cd_material_estoque_w,
		cd_unidade_medida_compra_w,
		cd_unidade_medida_estoque_w,
		qt_conv_compra_estoque_w
	from	material
	where	cd_material = cd_material_w;
	exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(266071);
			--'Nao localizados os dados do material: ' || cd_material_w
	end;
	qt_conversao_w := obter_qt_conv_compra_est(cd_material_w, cd_cnpj_p, cd_unidade_medida_compra_w, cd_estabelecimento_p, null, qt_conversao_w);
	qt_item_estoque_w	:= qt_material_p * qt_conversao_w;
	vl_total_item_nf_w	:= qt_material_p * vl_unitario_material_p;

	ie_tipo_conta_w	:= 3;
	if (coalesce(cd_centro_custo_w::text, '') = '') then
		ie_tipo_conta_w	:= 2;
	end if;

	SELECT * FROM define_conta_material(
		cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_nota_w, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
	
		
	insert into nota_fiscal_item(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		qt_item_estoque,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		cd_material,
		vl_desconto_rateio,
		vl_seguro,
		vl_frete,
		pr_desconto,
		vl_desconto,
		vl_despesa_acessoria,
		vl_liquido,
		cd_material_estoque,
		cd_unidade_medida_compra,
		cd_unidade_medida_estoque,
		cd_local_estoque,
		cd_conta_contabil,
		cd_centro_custo,
		nr_ordem_compra,
		nr_item_oci,
		cd_lote_fabricacao,
		dt_validade,
		cd_sequencia_parametro)			
	values (	coalesce(nr_seq_nota_w,nr_sequencia_p),
		cd_estabelecimento_p,
		cd_cnpj_p,
		cd_serie_nf_p,
		nr_nota_fiscal_p,
		nr_sequencia_nf_w,
		nr_item_nf_w,
		cd_natureza_p,
		qt_material_p,
		qt_item_estoque_w,
		vl_unitario_material_p,
		vl_total_item_nf_w,			
		clock_timestamp(),
		nm_usuario_p,
		cd_material_w,
		0,
		0,
		0,
		0,
		0,
		0,
		vl_total_item_nf_w,
		cd_material_estoque_w,
		cd_unidade_medida_compra_w,
		cd_unidade_medida_estoque_w,
		cd_local_estoque_w,
		cd_conta_contabil_w,
		coalesce(cd_centro_custo_w,null),
		CASE WHEN nr_ordem_compra_p=0 THEN null  ELSE nr_ordem_compra_p END ,
		CASE WHEN nr_ordem_compra_p=0 THEN null  ELSE nr_item_nf_w END ,
		cd_lote_fabricacao_p,
		dt_validade_p,
		philips_contabil_pck.get_parametro_conta_contabil);
	end;
end if;

commit;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importa_nota_simplificada ( ie_tipo_registro_p bigint, cd_estabelecimento_p bigint, cd_cnpj_p text, nr_ordem_compra_p bigint, nr_nota_fiscal_p bigint, dt_emissao_p timestamp, cd_serie_nf_p text, cd_operacao_nf_p bigint, cd_natureza_p bigint, cd_material_p bigint, cd_local_estoque_p bigint, qt_material_p bigint, vl_unitario_material_p bigint, cd_lote_fabricacao_p text, dt_validade_p timestamp, nm_usuario_p text, nr_sequencia_p INOUT text) FROM PUBLIC;

