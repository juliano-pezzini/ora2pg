-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (ds_dias_aplicacao	varchar(6));


CREATE OR REPLACE PROCEDURE inserir_mat_prot_rotina ( nr_prescricao_p bigint, cd_protocolo_p bigint, nr_sequencia_p bigint, nr_seq_material_p bigint, nm_usuario_p text, qt_dose_p bigint, cd_intervalo_p text default null, cd_unidade_medida_p text DEFAULT NULL, ie_via_aplicacao_p text DEFAULT NULL, hr_primeiro_horario_p text DEFAULT NULL, ds_observacao_p text DEFAULT NULL, ds_justificativa_p text DEFAULT NULL, qt_dias_util_p bigint DEFAULT NULL, ie_objetivo_p text DEFAULT NULL, ie_indicacao_p text DEFAULT NULL, cd_topografia_cih_p bigint DEFAULT NULL, cd_doenca_cid_p text DEFAULT NULL) AS $body$
DECLARE

type Vetor is table of campos index by integer;
dias_w			Vetor;

cd_estabelecimento_w		smallint;
dt_primeiro_horario_w		timestamp;
qt_conversao_dose_w	   		double precision;
nr_horas_validade_w			integer;
dt_prescricao_w				timestamp;
nr_ocorrencia_w				double precision;
qt_peso_w				real;
qt_unitaria_w   			double precision;
ie_origem_inf_w				varchar(1) := 'P';
qt_material_w   			double precision;
qt_dispensar_w				double precision;
ds_erro_w					varchar(255);
nr_seq_material_prot_w		integer;

cd_material_w				integer;
nr_seq_material_w			integer;
cd_unidade_medida_w			varchar(30);
qt_dose_w					double precision;
qt_dose_peso_w				double precision;
ie_via_aplicacao_w			varchar(5);
nr_agrupamento_w			double precision;
nr_seq_agrup_w				bigint;
ie_agrupador_w				smallint;
ds_recomendacao_w			varchar(4000);
ie_arredondar_w				varchar(7);
cd_intervalo_w				varchar(7);
ds_horarios_w				varchar(2000);
ds_horarios2_w				varchar(2000);
DS_JUSTIFICATIVA_w			varchar(2000);
ie_intervalo_setor_w			varchar(2000);
cd_unid_med_consumo_w		varchar(30);
qt_minimo_multiplo_solic_w	double precision;
ie_se_necessario_w			varchar(01);
qt_minuto_aplicacao_w		integer;
qt_hora_aplicacao_w			smallint;
ie_bomba_infusao_w			varchar(01);
ie_aplic_bolus_w			varchar(01);
ie_aplic_lenta_w			varchar(01);
ie_acm_w					varchar(01);
qt_solucao_w				double precision;
ds_dose_diferenciada_w		varchar(50);
hr_prim_horario_w			varchar(5);
ie_agora_medic_w			varchar(1);
cd_unidade_medida_dose_w	varchar(30);
qt_vel_infusao_w			double precision;
qt_dose_ml_w				double precision;
dt_inicio_prescr_w			timestamp;
ie_dias_util_medic_w		varchar(1);
nr_dia_util_w				bigint;
nr_atendimento_w			bigint;
ie_multiplicar_dose_w		varchar(1);
nr_erro_w 					integer;
ie_diluicao_recons_w		varchar(15);
ie_regra_disp_w				varchar(1);/* Rafael em 15/3/8 OS86206 */
ds_obs_via_aplicacao_w		varchar(4000);
ie_lado_w					varchar(1);
ie_objetivo_w				varchar(1);
ie_sem_aprazamento_w		varchar(2);
qt_dias_prev_util_w			smallint;
qt_min_intervalo_w			integer;
cd_setor_atendimento_w		bigint;
ds_dia_ciclo_w				varchar(5);
ds_dias_aplicacao_w			varchar(4000);
cont_w						double precision;
X							varchar(1);
z							double precision;
ds_texto_w					varchar(255);
ds_valido_w					varchar(255)	:= '0123456789D,';
posicao_w					smallint;
ie_dia_valido_w				varchar(1);
ie_checar_adep_w			varchar(1);
cd_pessoa_fisica_w			varchar(10);
ie_via_aplicacao_ww			varchar(5);
qt_hora_intervalo_w			bigint;
qt_min_intervalo_ww			bigint;
ie_mesmo_zerado_w			varchar(1);
nr_seq_prescr_mat_cid_w		bigint;
ds_observacao_w				prescr_material.ds_observacao%type;
ds_observacao_far_w			prescr_material.ds_observacao_far%type;
VarIeRecomend_w				varchar(2);
ie_sem_aprazamento_ww		varchar(2);

C01 CURSOR FOR
	SELECT	a.cd_material,
		a.nr_seq_material,
		coalesce(cd_unidade_medida_p,a.cd_unidade_medida),
		a.qt_dose,
		a.qt_dose_peso,
		coalesce(ie_via_aplicacao_p,a.ie_via_aplicacao),
		a.nr_agrupamento,
		coalesce(ds_observacao_p,a.ds_recomendacao),		
		a.ds_horarios,
	 	substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		b.qt_minimo_multiplo_solic,
		a.ie_se_necessario,
		a.qt_minuto_aplicacao,
		a.qt_hora_aplicacao,
		coalesce(a.ie_bomba_infusao,'N'),
		coalesce(a.ie_aplic_bolus,'N'),
		coalesce(a.ie_aplic_lenta,'N'),
		coalesce(a.ie_acm,'N'),
		a.qt_solucao,
		a.ds_dose_diferenciada,
		a.hr_prim_horario,
		a.ie_urgencia,
		a.qt_vel_infusao,
		b.ie_dias_util_medic,
		coalesce(a.ie_multiplicar_dose,'N'),
		CASE WHEN a.ie_agrupador=1 THEN obter_dados_via_aplicacao(a.cd_material,coalesce(a.ie_via_aplicacao,upper(obter_unid_med_usua('IV'))),cd_setor_atendimento_w,'R')  ELSE null END ,
		a.ie_lado,
		a.ie_objetivo,
		a.qt_dias_prev_util,
		a.ds_dias_aplicacao,
		coalesce(a.ie_checar_adep,'N'),
		coalesce(a.ie_arredondar,'N'),
		a.ds_justificativa,
		a.qt_hora_intervalo,
		a.qt_min_intervalo,
		a.ie_agrupador,
		coalesce(cd_intervalo_p, a.cd_intervalo)
	from 	material b,
		Protocolo_medic_material a
	where	a.cd_protocolo	 			= cd_protocolo_p
	and	a.nr_sequencia				= nr_sequencia_p
	and	a.cd_material 				= b.cd_material	
	and	((a.nr_seq_material = nr_seq_material_p) or (coalesce(nr_seq_material_p::text, '') = '' and
		 a.ie_agrupador = 1 and 
		 coalesce(a.nr_seq_diluicao::text, '') = ''))
	order by nr_seq_material;

BEGIN

select	cd_estabelecimento,
	nr_horas_validade,
	dt_prescricao,
	dt_primeiro_horario,
	dt_inicio_prescr,
	nr_atendimento,
	cd_setor_atendimento,
	cd_pessoa_fisica,
	qt_peso
into STRICT	cd_estabelecimento_w,
	nr_horas_validade_w,
	dt_prescricao_w,
	dt_primeiro_horario_w,
	dt_inicio_prescr_w,
	nr_atendimento_w,
	cd_setor_atendimento_w,
	cd_pessoa_fisica_w,
	qt_peso_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

ie_diluicao_recons_w := Obter_Param_Usuario(924, 195, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_diluicao_recons_w);
ie_sem_aprazamento_ww := Obter_Param_Usuario(924, 141, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_sem_aprazamento_ww);
VarIeRecomend_w := Obter_Param_Usuario(924, 48, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, VarIeRecomend_w);

select	coalesce(max(nr_agrupamento),0)
into STRICT	nr_seq_agrup_w
from	prescr_material
where	nr_prescricao	= nr_prescricao_p
and	ie_agrupador = 1;	

OPEN C01;
LOOP
FETCH C01 into
	cd_material_w,
	nr_seq_material_prot_w,
	cd_unidade_medida_w ,
	qt_dose_w,
	qt_dose_peso_w,
	ie_via_aplicacao_w,
	nr_agrupamento_w,
	ds_recomendacao_w,	
	ds_horarios_w,
	cd_unid_med_consumo_w,
	qt_minimo_multiplo_solic_w,
	ie_se_necessario_w,
	qt_minuto_aplicacao_w,
	qt_hora_aplicacao_w,
	ie_bomba_infusao_w,
	ie_aplic_bolus_w,
	ie_aplic_lenta_w,
	ie_acm_w,
	qt_solucao_w,
	ds_dose_diferenciada_w,
	hr_prim_horario_w,
	ie_agora_medic_w,
	qt_vel_infusao_w,
	ie_dias_util_medic_w,
	ie_multiplicar_dose_w,
	ds_obs_via_aplicacao_w,
	ie_lado_w,
	ie_objetivo_w,
	qt_dias_prev_util_w,
	ds_dias_aplicacao_w,
	ie_checar_adep_w,
	ie_arredondar_w,
	ds_justificativa_w,
	qt_hora_intervalo_w,
	qt_min_intervalo_ww,
	ie_agrupador_w,
	cd_intervalo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (hr_primeiro_horario_p IS NOT NULL AND hr_primeiro_horario_p::text <> '') then
		hr_prim_horario_w := hr_primeiro_horario_p;
	end if;
	
	ds_dias_aplicacao_w	:= Replace(ds_dias_aplicacao_w,' ','');
	ds_texto_w		:= '';
	
	FOR y IN 1..coalesce(length(ds_dias_aplicacao_w),0) LOOP	
		X	:= coalesce(substr(upper(ds_dias_aplicacao_w), y, 1),0);
		if (position(x in ds_valido_w) > 0) then
			ds_texto_w	:= ds_texto_w || X;
		else
			--Erro na padronizacao dos horarios do mat/med  CD_MATERIAL. Verifique o cadastro do protocolo se os dias estao cadastrados corretamente.
			CALL wheb_mensagem_pck.exibir_mensagem_abort(205700,'CD_MATERIAL='||cd_material_w);
		end if;
	END LOOP;
	ds_dias_aplicacao_w	:= ds_texto_w;
	ds_dias_aplicacao_w	:= Replace(ds_dias_aplicacao_w,' ','');
	dias_w.delete;
	ds_dias_aplicacao_w	:= ds_dias_aplicacao_w ||',';
	cont_w	:= 0;
	z	:= 0;
	while	(ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') LOOP
		begin
		posicao_w	:= position(',' in ds_dias_aplicacao_w);
		z := z + 1;
		dias_w[z].ds_dias_aplicacao	:= substr(ds_dias_aplicacao_w,1,posicao_w - 1);
		ds_dias_aplicacao_w		:= substr(ds_dias_aplicacao_w,posicao_w + 1,length(ds_dias_aplicacao_w));
		cont_w	:= cont_w + 1;
		
		if (cont_w > 100) then
			exit;
		end if;
		end;
	end loop;
	ie_dia_valido_w	:= 'S';
	if (ds_dia_ciclo_w IS NOT NULL AND ds_dia_ciclo_w::text <> '') then
		ie_dia_valido_w	:= 'N';
		for i in 1..dias_w.count loop
			begin
			if (dias_w[i].ds_dias_aplicacao	= ds_dia_ciclo_w) then
				ie_dia_valido_w	:= 'S';
				exit;
			end if;
			end;
		end loop;
	end if;

	if (ie_dia_valido_w	= 'S') then
		/* Rafael em 20/07/2007 OS62068 substitui esta linha pela rotina abaixo
		ie_agora_medic_w		:= ie_urgencia_p;
		*/
		begin
		select	coalesce(max(a.nr_dia_util),0)
		into STRICT	nr_dia_util_w
		from	prescr_material a,
			prescr_medica_v b
		where	cd_material		= cd_material_w
		  and	a.nr_prescricao		= b.nr_prescricao
		  and	b.nr_atendimento	= nr_atendimento_w
		  and	trunc(b.dt_prescricao,'dd') = (trunc(dt_prescricao_w, 'dd') - 1);
		exception
		when others then
			nr_dia_util_w := 0;
		end;

		if (ie_dias_util_medic_w <> 'N') then
			select	CASE WHEN ie_dias_util_medic_w='0' THEN nr_dia_util_w  ELSE nr_dia_util_w + 1 END
			into STRICT	nr_dia_util_w
			;
		else
			nr_dia_util_w := null;
		end if;

		if (ie_agora_medic_w = 'S') then
			ie_agora_medic_w := 'S';
		elsif (ie_agora_medic_w = 'N') then
			ie_agora_medic_w := 'N';
		end if;
		
		if (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then
			cd_intervalo_w := cd_intervalo_p;
		end if;

		select	Obter_se_setor_intervalo(cd_intervalo_w,cd_setor_atendimento_w,cd_estabelecimento_w,cd_material_w,ie_via_aplicacao_w,obter_unid_atend_setor_atual(nr_atendimento_w,cd_setor_atendimento_w,'UB'))
		into STRICT	ie_intervalo_setor_w
		;

		if	((ie_intervalo_setor_w = 'S') and (coalesce(hr_prim_horario_w::text, '') = '')) then
			hr_prim_horario_w	:= obter_primeiro_horario(cd_intervalo_w,nr_prescricao_p,cd_material_w,ie_via_aplicacao_w);
		end if;
		
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_material_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p;	

		if (ie_agora_medic_w = 'S') and (coalesce(cd_intervalo_w::text, '') = '') then
			dt_primeiro_horario_w := clock_timestamp();
			select	coalesce(max(cd_intervalo),cd_intervalo_w)
			into STRICT	cd_intervalo_w
			from	intervalo_prescricao
			where	ie_agora	= 'S'
			and		obter_se_exibe_intervalo(nr_prescricao_p, cd_intervalo, cd_setor_atendimento_w) = 'S';
		end if;
		
		qt_conversao_dose_w	:= obter_conversao_unid_med(cd_material_w,cd_unidade_medida_w);
		
		if (ie_acm_w = 'S') or (ie_se_necessario_w = 'S') then
			
			select	coalesce(max(b.qt_se_necessario),0),
				coalesce(max(b.ie_mesmo_zerado),'N')
			into STRICT	nr_ocorrencia_w,
				ie_mesmo_zerado_w
			from	intervalo_prescricao a,
				intervalo_setor b
			where	a.cd_intervalo 		= b.cd_intervalo
			and	coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
			and	coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w
			and	a.cd_intervalo 		= cd_intervalo_w;
			
			if (coalesce(nr_ocorrencia_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then
				Select	coalesce(max(qt_se_necessario),1)
				into STRICT	nr_ocorrencia_w
				from	intervalo_prescricao
				where	cd_intervalo = cd_intervalo_w;
			end if;
		end if;
		if (coalesce(qt_dose_p,0) > 0) then
			qt_dose_w	:= qt_dose_p;
		end if;
		
		if (qt_dose_peso_w > 0) and (qt_peso_w > 0) then
			qt_dose_w	:= qt_dose_peso_w * qt_peso_w;

			if (ie_arredondar_w	= 'S') then
				qt_dose_w := Arredondamento(qt_dose_w, 1, 'R');
			end if;
			
			if (upper(obter_unid_med_anv(cd_unidade_medida_w)) = 'GTS') then
				qt_dose_w	:= round(qt_dose_w);
			end if;
		end if;	
		
		/*qt_unitaria_w := (trunc(qt_dose_w * 1000 / qt_conversao_dose_w)/ 1000);*/

		qt_unitaria_w := dividir(trunc(dividir(qt_dose_w * 1000,qt_conversao_dose_w)),1000);

		select	max(qt_min_intervalo)
		into STRICT	qt_min_intervalo_w
		from	intervalo_prescricao
		where	cd_intervalo	= cd_intervalo_w;
		
		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_inicio_prescr_w,dt_prescricao_w), to_date(to_char(dt_primeiro_horario_w,'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi'), nr_horas_validade_w, cd_material_w, 0, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
			
		SELECT * FROM Obter_Quant_Dispensar(1, cd_material_w, nr_prescricao_p, nr_seq_material_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_ocorrencia_w, '', ie_origem_inf_w, cd_unidade_medida_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
		if (coalesce(hr_prim_horario_w::text, '') = '') or (ie_agora_medic_w = 'S') then
			hr_prim_horario_w	:= substr(to_char(dt_primeiro_horario_w,'dd/mm/yyyy hh24:mi:ss'),12,5);
		end if;
		
		ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;
		
		if (ie_acm_w = 'S') then
			ds_horarios_w := 'ACM';
		elsif (ie_se_necessario_w = 'S') then
			ds_horarios_w := 'SN';
			hr_prim_horario_w := '';
		end if;
		
		if (ie_sem_aprazamento_ww = 'N') and (coalesce(ie_agora_medic_w,'N') = 'N') then
			ie_sem_aprazamento_w	:= 'S';
		else
			ie_sem_aprazamento_w	:= 'N';
		end if;
		
		if (ie_sem_aprazamento_w = 'S') then
			ds_horarios_w		:= '';
			hr_prim_horario_w	:= '';
		end if;

		if (coalesce(ie_via_aplicacao_ww::text, '') = '') then
			select	max(ie_via_aplicacao)
			into STRICT		ie_via_aplicacao_ww
			from		material
			where	cd_material = cd_material_w;
		end if;	
		
		ds_observacao_w 	:= '';
		ds_observacao_far_w := '';
		
		if (coalesce(Obter_se_apres_orient_mat(cd_material_w, cd_pessoa_fisica_w),'S') = 'S') then
			if (VarIeRecomend_w = 'G') then
				select	max(substr(Obter_orientacao_medic(cd_material_w),1,2000))
				into STRICT	ds_observacao_w
				;
				
				if (ds_recomendacao_w IS NOT NULL AND ds_recomendacao_w::text <> '') then
					ds_recomendacao_w := substr(ds_recomendacao_w || ' ' || ds_observacao_w,1,4000);
				else
					ds_recomendacao_w := ds_observacao_w;
				end if;
			elsif (VarIeRecomend_w = 'F') then	
				select	max(substr(Obter_orientacao_medic(cd_material_w),1,2000))
				into STRICT	ds_observacao_far_w
				;
			end if;
		end if;
			
		Insert into Prescr_Material(
			nr_prescricao,
			nr_sequencia,
			ie_origem_inf,
			cd_material,
			cd_unidade_medida,
			qt_dose,
			qt_unitaria,
			qt_material,
			dt_atualizacao,
			nm_usuario,
			cd_intervalo,
			ds_observacao,
			ie_via_aplicacao,
			nr_agrupamento,
			cd_motivo_baixa,
			ie_utiliza_kit,
			cd_unidade_medida_dose,
			qt_conversao_dose,
			ie_urgencia,
			nr_ocorrencia,
			qt_total_dispensar,
			ds_horarios,			
			hr_prim_horario,
			ie_medicacao_paciente,
			ie_suspenso,
			ie_agrupador,
			ie_se_necessario,
			qt_min_aplicacao,
			qt_hora_aplicacao,
			ie_bomba_infusao,
			ie_aplic_bolus,
			ie_aplic_lenta,
			ie_acm,
			ds_dose_diferenciada,
			qt_solucao,
			ie_cultura_cih,
			ie_antibiograma,
			ie_uso_antimicrobiano,
			cd_protocolo,
			nr_seq_protocolo,
			nr_seq_mat_protocolo,
			ie_recons_diluente_fixo,
			qt_vel_infusao,
			ie_sem_aprazamento,
			nr_dia_util,
			ie_regra_disp,
			ie_lado,
			ie_objetivo,
			qt_dias_solicitado,
			qt_min_intervalo,
			ie_checar_adep,
			ie_permite_substituir,
			ds_justificativa,
			qt_hora_intervalo,
			ie_indicacao,
			cd_topografia_cih,
			ds_observacao_far
			)
		values (
			nr_prescricao_p,
	     		nr_seq_material_w,
		 	'S',
		 	cd_material_w,
		 	cd_unid_med_consumo_w,
		 	coalesce(qt_dose_w,0),
		 	coalesce(qt_unitaria_w,0),
		 	coalesce(qt_material_w,0),
		 	clock_timestamp(),
			nm_usuario_p,
		 	cd_intervalo_w,
		 	substr(ds_recomendacao_w || ds_obs_via_aplicacao_w,1,4000),
		 	coalesce(ie_via_aplicacao_w,ie_via_aplicacao_ww),
		    coalesce(nr_seq_agrup_w + nr_agrupamento_w,0),
		    0,
		    'N',
		    cd_unidade_medida_w,
		    coalesce(qt_conversao_dose_w,0),
			ie_agora_medic_w,
		    nr_ocorrencia_w,
		      	qt_dispensar_w,
			ds_horarios_w,			
			hr_prim_horario_w,
			'N',
			'N',
		      	1,
			ie_se_necessario_w,
			qt_minuto_aplicacao_w,
			qt_hora_aplicacao_w,
			ie_bomba_infusao_w,
			ie_aplic_bolus_w,
			ie_aplic_lenta_w,
			ie_acm_w,
			ds_dose_diferenciada_w,
			qt_solucao_w,
			'N',
			'N',
			'N',
			cd_protocolo_p,
			nr_sequencia_p,
			nr_seq_material_prot_w,
			'N',
			qt_vel_infusao_w,
			ie_sem_aprazamento_w,
			nr_dia_util_w,
			ie_regra_disp_w,
			ie_lado_w,
			coalesce(ie_objetivo_p,ie_objetivo_w),
			coalesce(qt_dias_util_p,qt_dias_prev_util_w),
			coalesce(qt_min_intervalo_w,qt_min_intervalo_ww),
			ie_checar_adep_w,
			'S',
			coalesce(ds_justificativa_p,DS_JUSTIFICATIVA_w),
			qt_hora_intervalo_w,
			ie_indicacao_p,
			cd_topografia_cih_p,
			ds_observacao_far_w);
		
		commit;
		
		if (cd_doenca_cid_p IS NOT NULL AND cd_doenca_cid_p::text <> '') then
		
			select	nextval('prescr_material_cid_seq')
			into STRICT		nr_seq_prescr_mat_cid_w
			;

			insert into prescr_material_cid(
						nr_sequencia,
						cd_doenca_cid,
						nr_prescricao,
						nr_sequencia_medic,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec)
					values (
						nr_seq_prescr_mat_cid_w,
						cd_doenca_cid_p,
						nr_prescricao_p,
						nr_seq_material_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p);

			commit;

		end if;
		
		select	max(nr_ocorrencia)
		into STRICT	nr_ocorrencia_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_material_w;
		
		if (ie_agrupador_w = 1) then
			CALL Inserir_diluentes_prot(nr_prescricao_p, cd_protocolo_p, nr_sequencia_p,
						nr_seq_material_prot_w, nr_seq_material_w, nm_usuario_p);
						
			if (ie_diluicao_recons_w = 'S') then
				CALL Gerar_Reconst_Diluicao(nr_prescricao_p,nr_seq_material_w,'A');
			end if;
			
			CALL Ajustar_Prescr_Material(nr_prescricao_p,nr_seq_material_w);
		end if;
		
		nr_erro_w := Consistir_Prescr_Material(nr_prescricao_p, nr_seq_material_w, nm_usuario_p, obter_perfil_ativo, nr_erro_w); /*Almir em 09/10/2007 OS70754 */
		
		select	max(nr_ocorrencia)
		into STRICT	nr_ocorrencia_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_material_w;
				
		
	end if;
	end;
END LOOP;
CLOSE C01;

CALL Reordenar_Medicamento(nr_prescricao_p);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_mat_prot_rotina ( nr_prescricao_p bigint, cd_protocolo_p bigint, nr_sequencia_p bigint, nr_seq_material_p bigint, nm_usuario_p text, qt_dose_p bigint, cd_intervalo_p text default null, cd_unidade_medida_p text DEFAULT NULL, ie_via_aplicacao_p text DEFAULT NULL, hr_primeiro_horario_p text DEFAULT NULL, ds_observacao_p text DEFAULT NULL, ds_justificativa_p text DEFAULT NULL, qt_dias_util_p bigint DEFAULT NULL, ie_objetivo_p text DEFAULT NULL, ie_indicacao_p text DEFAULT NULL, cd_topografia_cih_p bigint DEFAULT NULL, cd_doenca_cid_p text DEFAULT NULL) FROM PUBLIC;

