-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verif_dose_max_prot_int (nr_seq_paciente_p bigint, nr_sequencia_p bigint, ie_utiliza_horarios_p text, ds_erro_p INOUT text, ds_erro2_p INOUT text, ds_mensagem_p INOUT text, cd_material_p bigint default null, cd_unid_med_prescr_p text default null, qt_dose_prescr_p bigint default null, ie_via_aplicacao_p text default null, ds_observacao_p text default null, ds_ciclos_aplicacao_p text default null, is_paciente_medic_update text default null, qt_dias_util_p bigint default null, ie_local_adm_p text default null, ie_uso_continuo_p text default null, cd_intervalo_p text default null, qt_dose_p bigint default null, ds_justificativa_p text default null, cd_unid_med_dose_p text default null) AS $body$
DECLARE



qt_max_prescricao_w      double precision;
cd_unidade_medida_consumo_w  varchar(30);
cd_unid_med_limite_w    varchar(30);
qt_limite_pessoa_w      double precision;
qt_conversao_dose_w      double precision;
qt_conversao_dose_limite_w  double precision;
qt_dose_w          double precision;
qt_dose_ww          double precision;
qt_dose_limite_w      double precision;
cd_unidade_medida_dose_w  varchar(30);
cd_pessoa_fisica_w      varchar(30);
cd_material_w        integer;
ie_dose_limite_w      varchar(15);
nr_ocorrencia_w        double precision;
ie_via_aplicacao_w      varchar(5);
ie_justificativa_w      varchar(5);
ds_justificativa_w      varchar(2000);
cd_prescritor_w        varchar(50);
cd_setor_atendimento_w    integer;
qt_regra_w          bigint;
qt_idade_w          bigint;
qt_peso_w          real;
qt_limite_peso_w      double precision;
nr_seq_paciente_w      bigint;
qt_sc_w            double precision := 0;
qt_altura_w          double precision;
nr_ciclos_w          bigint;
cd_protocolo_w        bigint;
nr_seq_medicacao_w      integer;
ds_mensagem_regra_w      varchar(255);
qtd_dias_aplicacao_w      bigint;
ds_dias_aplicacao_w      varchar(2000);
dt_cancelamento_w           paciente_atendimento.dt_cancelamento%type;

c01 CURSOR FOR
  SELECT coalesce(qt_limite_pessoa, 0),
         coalesce(ie_dose_limite, 'DOSE'),
         cd_unid_med_limite,
         coalesce(ie_justificativa, 'S'),
         ds_mensagem_regra
    from material_prescr
   where cd_material = cd_material_w
     and coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w, 0)) =
         coalesce(cd_setor_atendimento_w, 0)
     and coalesce(ie_via_aplicacao, coalesce(ie_via_aplicacao_w, 0)) =
         coalesce(ie_via_aplicacao_w, 0)
     and (qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '')
     and coalesce(qt_idade_w, 1) between
         coalesce(Obter_idade_param_prescr(nr_sequencia, 'MIN'), 0) and
         coalesce(Obter_idade_param_prescr(nr_sequencia, 'MAX'), 9999999)
     and qt_peso_w between coalesce(qt_peso_min, 0) and coalesce(qt_peso_max, 999)
     and coalesce(cd_protocolo, coalesce(cd_protocolo_w, 0)) = coalesce(cd_protocolo_w, 0)
     and coalesce(nr_seq_medicacao, coalesce(nr_seq_medicacao_w, 0)) =
         coalesce(nr_seq_medicacao_w, 0)
     and ie_tipo = '2'
     and ((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_prescritor_w, cd_especialidade) = 'S'))
     and (coalesce(ie_tipo_item, 'TOD') in ('OUT', 'TOD'))
     and ((cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento) OR (coalesce(cd_estabelecimento::text, '') = ''))
   order by nr_sequencia;


BEGIN
ds_erro_p := '';
ds_erro2_p := '';



if ('S' = is_paciente_medic_update) then

  cd_material_w := cd_material_p;
  qt_dose_ww := coalesce(qt_dose_p,0);
  nr_ocorrencia_w := null;
  ie_via_aplicacao_w := ie_via_aplicacao_p;
  ds_justificativa_w := ds_justificativa_p;
  cd_unidade_medida_dose_w := cd_unid_med_dose_p;
  select coalesce(length(DS_CICLOS_APLICACAO_P) -
             length(replace(DS_CICLOS_APLICACAO_P, 'C', '')),
             1)
    into STRICT nr_ciclos_w
;

else

  select cd_material,
         cd_unidade_medida,
         qt_dose,
         null,
         ie_via_aplicacao,
         ds_observacao,
         coalesce(length(DS_CICLOS_APLICACAO) -
             length(replace(DS_CICLOS_APLICACAO, 'C', '')),
             1)
    into STRICT cd_material_w,
         cd_unidade_medida_dose_w,
         qt_dose_ww,
         nr_ocorrencia_w,
         ie_via_aplicacao_w,
         ds_justificativa_w,
         nr_ciclos_w
    from paciente_protocolo_medic
   where nr_seq_paciente = nr_seq_paciente_p
     and nr_seq_material = nr_sequencia_p;

end if;

select coalesce(qt_peso, 0),
       coalesce(qt_altura, 0),
       coalesce(round(obter_superficie_corp_red_ped(qt_peso,
                                               qt_altura,
                                               qt_redutor_sc,
                                               cd_pessoa_fisica,
                                               nm_usuario,
                                               IE_FORMULA_SUP_CORPOREA),
                 obter_numero_casas_sc),
           0)
  into STRICT qt_peso_w, qt_altura_w, qt_sc_w
  from paciente_setor
 where nr_seq_paciente = nr_seq_paciente_p;

select cd_medico_resp,
       cd_setor_atendimento,
       cd_pessoa_fisica,
       cd_protocolo,
       nr_seq_medicacao
  into STRICT cd_prescritor_w,
       cd_setor_atendimento_w,
       cd_pessoa_fisica_w,
       cd_protocolo_w,
       nr_seq_medicacao_w
  from paciente_setor
 where nr_seq_paciente = nr_seq_paciente_p;

select max(obter_idade(dt_nascimento, coalesce(dt_obito, clock_timestamp()), 'DIA'))
  into STRICT qt_idade_w
  from pessoa_fisica
 where cd_pessoa_fisica = cd_pessoa_fisica_w;

if (coalesce(cd_material_w,0) > 0) and (cd_unidade_medida_dose_w IS NOT NULL AND cd_unidade_medida_dose_w::text <> '') and (coalesce(qt_dose_ww,0) > 0) then
  begin

  Select count(*)
    into STRICT qt_regra_w
    from material
   where cd_material = cd_material_w
     and (qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '');

  if (qt_regra_w > 0) then
    begin
      Select coalesce(qt_max_prescricao, 0),
             cd_unidade_medida_consumo,
             cd_unid_med_limite,
             coalesce(qt_limite_pessoa, 0),
             coalesce(ie_dose_limite, 'DOSE')
        into STRICT qt_max_prescricao_w,
             cd_unidade_medida_consumo_w,
             cd_unid_med_limite_w,
             qt_limite_pessoa_w,
             ie_dose_limite_w
        from material
       where cd_material = cd_material_w;
            /* Pega o setor de atendimento da prescricao e a idade do paciente */

      if (cd_unidade_medida_consumo_w = cd_unidade_medida_dose_w) then
        qt_conversao_dose_w  := 1;
      else
        begin
        select  coalesce(max(qt_conversao),1)
        into STRICT  qt_conversao_dose_w
        from  material_conversao_unidade
        where  cd_material    = cd_material_w
        and  cd_unidade_medida  = cd_unidade_medida_dose_w;
        exception
          when others then
          qt_conversao_dose_w  := 1;
        end;
      end if;

      qt_dose_w  := (trunc(qt_dose_ww * 1000 / qt_conversao_dose_w)/ 1000);

      if (qt_max_prescricao_w > 0) and (qt_max_prescricao_w < coalesce(qt_dose_w,0)) then
        ds_erro_p  := wheb_mensagem_pck.get_texto(277286, 'QT_MAX_PRESCRICAO_P=' || qt_max_prescricao_w ||
                      ';CD_UNIDADE_MEDIDA_CONSUMO_P=' || cd_unidade_medida_consumo_w);
      end if;

      if (cd_unidade_medida_consumo_w = cd_unid_med_limite_w) then
        qt_conversao_dose_limite_w  := 1;
      else
        begin
        select  coalesce(max(qt_conversao),1)
        into STRICT  qt_conversao_dose_limite_w
        from  material_conversao_unidade
        where  cd_material    = cd_material_w
        and  cd_unidade_medida  = cd_unid_med_limite_w;
        exception
          when others then
            qt_conversao_dose_limite_w  := 1;
        end;
      end if;

      qt_dose_w    := (trunc(dividir(qt_dose_ww * 1000, qt_conversao_dose_w))/ 1000);
      qt_dose_limite_w  := (trunc(dividir(qt_limite_pessoa_w * 1000, qt_conversao_dose_limite_w))/ 1000);

      if (ie_dose_limite_w = 'DIA') then
        begin
        qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1);
        end;

      elsif (ie_dose_limite_w = 'AT') then
        begin
        qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1);
        end;

      elsif (ie_dose_limite_w = 'PF') then
        begin
        qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1); /* Pessoa Fisica*/
        end;

      elsif (qt_peso_w > 0) and (ie_dose_limite_w = 'KG/DIA') then
        begin
        qt_dose_w  := qt_dose_w / coalesce(qt_peso_w,1);/*por KG*/
 /*por dia*/
        qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1);
        end;

      elsif (qt_sc_w > 0) and (ie_dose_limite_w = 'SC') then
        begin
        qt_dose_w  := qt_dose_w / coalesce(qt_sc_w,1);  /*por SC*/
        qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1);
        end;

      elsif (qt_peso_w > 0) and (ie_dose_limite_w = 'CI') then
        begin /*por Ciclo*/
          select ds_dias_aplicacao
            into STRICT ds_dias_aplicacao_w
            from paciente_protocolo_medic
           where nr_seq_paciente = nr_seq_paciente_p
             and cd_material = cd_material_w;

          qtd_dias_aplicacao_w := (length(ds_dias_aplicacao_w) - length(replace(ds_dias_aplicacao_w, 'D', '')));

          qt_dose_w  := qt_dose_w * coalesce(qtd_dias_aplicacao_w,1);
          end;

      elsif (qt_peso_w > 0) and (ie_dose_limite_w = 'KG/D') then
        begin
        qt_dose_w  := qt_dose_w / coalesce(qt_peso_w,1);/*por KG*/
 /*por dose*/
        qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1);
        end;

      end if;

    if (qt_dose_limite_w > 0) and (qt_dose_limite_w < coalesce(qt_dose_w,0)) then
      ds_erro2_p  := wheb_mensagem_pck.get_texto(277256, 'QT_LIMITE_PESSOA_P=' || qt_limite_pessoa_w ||
                    ';CD_UNID_MED_LIMITE_P=' || cd_unid_med_limite_w || 
                    ';DS_DOSE_LIMITE_P=' || lower(ie_dose_limite_w));
    end if;
    end;
  else
    begin

    /* Verifica se tem alguma regra para os dados informados */

    select count(*)
      into STRICT qt_regra_w
      from material_prescr
     where cd_material = cd_material_w
       and coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w, 0)) =
           coalesce(cd_setor_atendimento_w, 0)
       and coalesce(ie_via_aplicacao, coalesce(ie_via_aplicacao_w, 0)) =
           coalesce(ie_via_aplicacao_w, 0)
       and coalesce(qt_idade_w, 1) between
           coalesce(Obter_idade_param_prescr(nr_sequencia, 'MIN'), 0) and
           coalesce(Obter_idade_param_prescr(nr_sequencia, 'MAX'), 9999999)
       and qt_peso_w between coalesce(qt_peso_min, 0) and coalesce(qt_peso_max, 999)
       and (qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '')
       and ((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_prescritor_w,
                                           cd_especialidade) = 'S'))
       and (coalesce(ie_tipo_item, 'TOD') in ('OUT', 'TOD'))
       and ie_tipo = '2';

    /* Caso haja alguma regra, faz as consistencias */

    if (qt_regra_w > 0) then
      open c01;
      loop
      fetch c01 into
        qt_limite_pessoa_w,
        ie_dose_limite_w,
        cd_unid_med_limite_w,
        ie_justificativa_w,
        ds_mensagem_regra_w;
      EXIT WHEN NOT FOUND; /* apply on c01 */
        begin

        select coalesce(qt_max_prescricao, 0), cd_unidade_medida_consumo
          into STRICT qt_max_prescricao_w, cd_unidade_medida_consumo_w
          from material
         where cd_material = cd_material_w;

        if (cd_unidade_medida_consumo_w = cd_unidade_medida_dose_w) then
          qt_conversao_dose_w  := 1;
        else
          begin
          select coalesce(max(qt_conversao), 1)
            into STRICT qt_conversao_dose_w
            from material_conversao_unidade
           where cd_material = cd_material_w
             and cd_unidade_medida = cd_unidade_medida_dose_w;
          exception
            when others then
              qt_conversao_dose_w  := 1;
          end;
        end if;

        qt_dose_w  := (trunc(qt_dose_ww * 1000 / qt_conversao_dose_w)/ 1000);

        if (qt_max_prescricao_w > 0) and (qt_max_prescricao_w < coalesce(qt_dose_w,0)) then
          ds_erro_p  := wheb_mensagem_pck.get_texto(277286, 'QT_MAX_PRESCRICAO_P=' || qt_max_prescricao_w ||
                        ';CD_UNIDADE_MEDIDA_CONSUMO_P=' || cd_unidade_medida_consumo_w);
        end if;

        if (cd_unidade_medida_consumo_w = cd_unid_med_limite_w) then
          qt_conversao_dose_limite_w  := 1;
        else
          begin
          select coalesce(max(qt_conversao), 1)
            into STRICT qt_conversao_dose_limite_w
            from material_conversao_unidade
           where cd_material = cd_material_w
             and cd_unidade_medida = cd_unid_med_limite_w;
          exception
            when others then
              qt_conversao_dose_limite_w  := 1;
          end;
        end if;

        qt_dose_w    := (trunc(qt_dose_ww * 1000 / qt_conversao_dose_w)/ 1000);
        qt_dose_limite_w  := (trunc(qt_limite_pessoa_w * 1000 / qt_conversao_dose_limite_w)/ 1000);

        if (ie_dose_limite_w = 'DIA') then

          qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1);

        elsif (qt_peso_w > 0) and (ie_dose_limite_w = 'KG') then
          qt_dose_w  := qt_dose_w / coalesce(qt_peso_w,1);
        elsif (ie_dose_limite_w = 'AT') then
          begin
          qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1);
          end;
        elsif (qt_sc_w >0) and (ie_dose_limite_w = 'SC') then
          begin

          qt_dose_w  := qt_dose_w / coalesce(qt_sc_w,1);  /*por SC*/
          qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1);
          end;

        elsif (qt_peso_w > 0) and (ie_dose_limite_w = 'CI') then
          begin /*por Ciclo*/
          select ds_dias_aplicacao
            into STRICT ds_dias_aplicacao_w
            from paciente_protocolo_medic
           where nr_seq_paciente = nr_seq_paciente_p
             and cd_material = cd_material_w;

          qtd_dias_aplicacao_w := (length(ds_dias_aplicacao_w) - length(replace(ds_dias_aplicacao_w, 'D', '')));

          qt_dose_w  := qt_dose_w * coalesce(qtd_dias_aplicacao_w,1);
          end;

        elsif (ie_dose_limite_w = 'PF') then
          begin
          qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1); /* Pessoa Fisica*/
          end;

        elsif (qt_peso_w > 0) and (ie_dose_limite_w = 'KG/DIA') then
          begin
          /*por KG*/

          qt_dose_w  := qt_dose_w / coalesce(qt_peso_w,1);
          qt_dose_w  := qt_dose_w * coalesce(nr_ocorrencia_w,1);
          end;

        end if;

        if (qt_dose_limite_w > 0) and (qt_dose_limite_w < coalesce(qt_dose_w,0)) and
          ((ie_justificativa_w = 'S') or (coalesce(ds_justificativa_w::text, '') = '')) then
          ds_erro2_p  := wheb_mensagem_pck.get_texto(277256, 'QT_LIMITE_PESSOA_P=' || qt_limite_pessoa_w ||
                        ';CD_UNID_MED_LIMITE_P=' || cd_unid_med_limite_w || 
                        ';DS_DOSE_LIMITE_P=' || lower(ie_dose_limite_w));

          if (ds_mensagem_regra_w IS NOT NULL AND ds_mensagem_regra_w::text <> '') then
            ds_mensagem_p := ds_mensagem_regra_w;
          end if;

        end if;

        commit;

        end;
      end loop;
      close c01;
    end if;
    end;
  end if;

  end;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verif_dose_max_prot_int (nr_seq_paciente_p bigint, nr_sequencia_p bigint, ie_utiliza_horarios_p text, ds_erro_p INOUT text, ds_erro2_p INOUT text, ds_mensagem_p INOUT text, cd_material_p bigint default null, cd_unid_med_prescr_p text default null, qt_dose_prescr_p bigint default null, ie_via_aplicacao_p text default null, ds_observacao_p text default null, ds_ciclos_aplicacao_p text default null, is_paciente_medic_update text default null, qt_dias_util_p bigint default null, ie_local_adm_p text default null, ie_uso_continuo_p text default null, cd_intervalo_p text default null, qt_dose_p bigint default null, ds_justificativa_p text default null, cd_unid_med_dose_p text default null) FROM PUBLIC;

