-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE integrar_pardini_ws (nr_seq_evento_p bigint, nr_prescricao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_sep_bv_w				         varchar(100);
ds_param_integr_w	         varchar(4000);
ds_log_w					         varchar(2000);
nr_sequencia_w             bigint;
nr_seq_exame_w             bigint;
cd_material_exame_w        varchar(20);
cd_setor_coleta_w          bigint;
nr_seq_lote_externo_w      bigint;
ie_consiste_peso_altura_w  varchar(1);
cd_cgc_externo_w	         varchar(14);
nr_atendimento_w	         atendimento_paciente.nr_atendimento%type;
cd_convenio_w		           convenio.cd_convenio%type;
cd_cgc_ext_cad_w	         exame_laboratorio_externo.cd_cgc_externo%type;
nr_seq_material_w	         exame_laboratorio_externo.nr_seq_material%type;
Ie_atual_desc_lote_w	     varchar(1);
ie_utilizar_setor_coleta_w varchar(1);
nr_pardini_w               bigint;

IE_TRATAMENTO_W             exame_laboratorio_externo.ie_tratamento%type;
cd_pessoa_fisica_w          prescr_medica.cd_pessoa_fisica%type;

c01 CURSOR FOR
  SELECT pp.nr_sequencia, pp.nr_seq_exame, pp.cd_material_exame, pp.cd_setor_coleta
    from prescr_procedimento pp
  inner join lab_exame_equip lee on lee.nr_seq_exame = pp.nr_seq_exame
  inner join equipamento_lab el on el.cd_equipamento = lee.cd_equipamento and el.ds_sigla = 'PARDINIWS'
   where pp.nr_prescricao = nr_prescricao_p;

BEGIN
  ds_sep_bv_w           := ';';
  nr_seq_lote_externo_w := null;
  ds_param_integr_w	    :='';
  nr_pardini_w          := null;

  open c01;
  loop
  fetch c01 into	nr_sequencia_w, nr_seq_exame_w, cd_material_exame_w, cd_setor_coleta_w;
  EXIT WHEN NOT FOUND; /* apply on c01 */

		select max(ELM.IE_PESO_ALTURA_REP)
      into STRICT ie_consiste_peso_altura_w
      from EXAME_LAB_MATERIAL ELM
           left join EXAME_LAB_MAT_ESTAB ELME on elme.nr_seq_exame = elm.nr_seq_exame and elme.nr_seq_material = elm.nr_seq_material
           inner join MATERIAL_EXAME_LAB MEL on mel.nr_sequencia = elm.nr_seq_material and mel.cd_material_exame = cd_material_exame_w
           left join equipamento_lab EL on el.cd_equipamento = elm.cd_equipamento
     where ELM.nr_seq_exame = nr_seq_exame_w
       and (elme.cd_estabelecimento = cd_estabelecimento_p or coalesce(elme.cd_estabelecimento::text, '') = '')
       and (((elm.cd_equipamento IS NOT NULL AND elm.cd_equipamento::text <> '') and el.ds_sigla = 'PARDINIWS') or coalesce(elm.cd_equipamento::text, '') = '')
       and elm.ie_situacao = 'A';

    select coalesce(max(cd_cgc_externo),null)
      into STRICT cd_cgc_externo_w
      from exame_laboratorio
     where nr_seq_exame = nr_seq_exame_w;

    if (coalesce(cd_cgc_externo_w::text, '') = '')  then
      select Max(nr_atendimento),
             MAX(cd_pessoa_fisica)
       	into STRICT nr_atendimento_w,
             cd_pessoa_fisica_w
       	from prescr_medica
       where nr_prescricao = nr_prescricao_p;

      select coalesce(max(c.cd_convenio),0)
        into STRICT cd_convenio_w
        from atend_categoria_convenio c
       where c.nr_atendimento = nr_atendimento_w
	       and c.nr_seq_interno = ( SELECT coalesce(MAX(nr_seq_interno),0)
		                                FROM atend_categoria_convenio z
		                               WHERE z.nr_atendimento = c.nr_atendimento
		                                 AND z.dt_inicio_vigencia	=	(SELECT	MAX(x.dt_inicio_vigencia)
			                                                             FROM atend_categoria_convenio x
			                                                            WHERE x.nr_atendimento = c.nr_atendimento));

      select coalesce(max(nr_sequencia),0)
        into STRICT nr_seq_material_w
        from material_exame_lab
	     where cd_material_exame = cd_material_exame_w;

      select MAX(cd_cgc_externo),
             MAX(ie_tratamento)
       	into STRICT cd_cgc_ext_cad_w,
             ie_tratamento_W
        from (SELECT cd_cgc_externo,
                     cd_estabelecimento,
                     ie_tratamento
                from exame_laboratorio_externo
               where nr_seq_exame = nr_seq_exame_w
                     and coalesce(cd_convenio, cd_convenio_w) = cd_convenio_w
		             and coalesce(nr_seq_material, nr_seq_material_w) = nr_seq_material_w
                     and coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
                     and ((coalesce(ie_tratamento::text, '') = '' ) or (obter_se_paciente_tratamento(cd_pessoa_fisica_w,ie_tratamento)='S'))
		          order by coalesce(cd_convenio,9999999999), coalesce(ie_prioridade,1)) alias12 LIMIT 1;

      cd_cgc_externo_w  :=  cd_cgc_ext_cad_w;
    end if;

    select max(eI.nr_sequencia)
      into STRICT nr_pardini_w
      from INFORMACAO_INTEGRACAO II
    inner join sistema_integracao SI on si.nr_sequencia = ii.nr_seq_sistema_destino
    inner join EMPRESA_INTEGRACAO ei on ei.nr_sequencia = si.nr_seq_empresa and ei.cd_cnpj = cd_cgc_externo_w
     where II.nr_seq_evento = nr_seq_evento_p;

    if (coalesce(nr_pardini_w::text, '') = '') then
       select max(eI.nr_sequencia)
         into STRICT nr_pardini_w
         from INFORMACAO_INTEGRACAO II
        inner join sistema_integracao SI on si.nr_sequencia = ii.nr_seq_sistema_destino
        inner join EMPRESA_INTEGRACAO ei on ei.nr_sequencia = si.nr_seq_empresa
        inner join empresa_integr_dados eid on eid.nr_seq_empresa_integr = ei.nr_sequencia and eid.cd_cgc = cd_cgc_externo_w
        where II.nr_seq_evento = nr_seq_evento_p;
    end if;

    if (nr_pardini_w IS NOT NULL AND nr_pardini_w::text <> '') then
      if (ie_consiste_peso_altura_w = 'N') then
        if (coalesce(nr_seq_lote_externo_w::text, '') = '') then
          Ie_atual_desc_lote_w := Obter_Param_Usuario(718, 6, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, Ie_atual_desc_lote_w);
          ie_utilizar_setor_coleta_w := Obter_Param_Usuario(718, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utilizar_setor_coleta_w);

          if (cd_cgc_externo_w IS NOT NULL AND cd_cgc_externo_w::text <> '') then
        		select nextval('lab_lote_externo_seq')
            	into STRICT	nr_seq_lote_externo_w
           		;

            if (ie_utilizar_setor_coleta_w <> 'S') then
        			cd_setor_coleta_w := null;
        		end if;

        	  insert into lab_lote_externo( nr_sequencia, cd_cgc, dt_lote,
                                           dt_retorno_prev, dt_atualizacao, nm_usuario,
                               						 dt_envio, dt_retorno, cd_estabelecimento,ds_arquivo,cd_setor_atendimento)
                              		values ( nr_seq_lote_externo_w, cd_cgc_externo_w, clock_timestamp(),
                                      		 clock_timestamp(), clock_timestamp(), nm_usuario_p,
                                     			 null,null, cd_estabelecimento_p,CASE WHEN Ie_atual_desc_lote_w='S' THEN to_char(clock_timestamp(),'ddmmyyyy')  ELSE null END ,cd_setor_coleta_w);
          end if;
        end if;

        if (nr_seq_lote_externo_w IS NOT NULL AND nr_seq_lote_externo_w::text <> '') then
          update prescr_procedimento set NR_SEQ_LOTE_EXTERNO = nr_seq_lote_externo_w,
                                         nm_usuario = nm_usuario_p,
                                         dt_atualizacao = clock_timestamp()
          where nr_prescricao = nr_prescricao_p
            and nr_sequencia  = nr_sequencia_w;
        end if;
      end if;
    end if;
  end loop;
  close c01;


  if (nr_seq_lote_externo_w IS NOT NULL AND nr_seq_lote_externo_w::text <> '') then
    ds_param_integr_w	:= 'NR_SEQ_LOTE=' || to_char(nr_seq_lote_externo_w) || ds_sep_bv_w || 'CD_ESTABELECIMENTO=' || to_char(cd_estabelecimento_p) || ds_sep_bv_w;
    ds_log_w          := 'Philips -> Pardini = Registro requisicao - NR_SEQ_EVENTO_P: '||to_char(nr_seq_evento_p)|| ' - NR_PRESCRICAO_P: '|| to_char(nr_prescricao_p);

    CALL gravar_log_lab(667, ds_param_integr_w, nm_usuario_p);
    if (ds_param_integr_w IS NOT NULL AND ds_param_integr_w::text <> '') then

      CALL gravar_agend_integracao(nr_seq_evento_p, ds_param_integr_w);

      update lab_lote_externo set dt_envio = clock_timestamp(),
                                  dt_atualizacao = clock_timestamp(),
                                  nm_usuario = nm_usuario_p
       where nr_sequencia = nr_seq_lote_externo_w;

        CALL lab_set_lote_integrando(
            nr_sequencia_p => nr_seq_lote_externo_w,
            ie_lote_integrando_p => 'E'
        );

    end if;

    if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then
      commit;
    end if;
  end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE integrar_pardini_ws (nr_seq_evento_p bigint, nr_prescricao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

