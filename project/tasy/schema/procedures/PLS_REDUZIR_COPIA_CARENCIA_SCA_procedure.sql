-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_reduzir_copia_carencia_sca ( nr_seq_segurado_p bigint, nr_seq_plano_sca_p bigint, nr_seq_tipo_carencia_p bigint, qt_dias_carencia_p bigint, ie_aplicacao_reducao_p text, nm_usuario_p text) AS $body$
DECLARE


/*
ie_aplicacao_reducao_p
B - Benefciario
F - Familia do beneficiário
C - Todos beneficiários do contrato
*/
qt_registros_w			bigint;
nr_seq_segurado_w		bigint;
nr_seq_titular_w		bigint;
nr_seq_contrato_w		bigint;
dt_inicio_vigencia_w		timestamp;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado
	where	((nr_sequencia	= nr_seq_segurado_p) or (nr_seq_titular	= nr_seq_segurado_p))
	and	coalesce(dt_rescisao::text, '') = ''
	and	coalesce(nr_seq_titular_w::text, '') = ''
	
union all

	SELECT	nr_sequencia
	from	pls_segurado
	where	((nr_sequencia	= nr_seq_titular_w) or (nr_seq_titular	= nr_seq_titular_w))
	and	coalesce(dt_rescisao::text, '') = ''
	and	(nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '');


C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado
	where	nr_seq_contrato	= nr_seq_contrato_w
	and	coalesce(dt_rescisao::text, '') = '';



BEGIN

if (ie_aplicacao_reducao_p = 'B') then
	select	max(coalesce(dt_inclusao_benef,dt_inicio_vigencia))
	into STRICT	dt_inicio_vigencia_w
	from	pls_sca_vinculo
	where	nr_seq_segurado	= nr_seq_segurado_p
	and	nr_seq_plano	= nr_seq_plano_sca_p;

	select	count(1)
	into STRICT	qt_registros_w
	from	pls_carencia
	where	nr_seq_segurado		= nr_seq_segurado_p
	and	nr_seq_tipo_carencia	= nr_seq_tipo_carencia_p;

	/*aaschlote OS - 279915*/

	if (pls_consistir_sexo_carencia(nr_seq_segurado_p,nr_seq_tipo_carencia_p) = 'S') then
		if (qt_registros_w = 0) then
			insert	into pls_carencia(	nr_sequencia,dt_atualizacao, nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_segurado, dt_inicio_vigencia, qt_dias,nr_seq_tipo_carencia,
					ds_observacao,ie_origem_carencia_benef,ie_carencia_anterior)
			values (	nextval('pls_carencia_seq'), clock_timestamp(), nm_usuario_p,clock_timestamp(), nm_usuario_p,
					nr_seq_segurado_p, dt_inicio_vigencia_w, qt_dias_carencia_p,
					nr_seq_tipo_carencia_p,'Origem: Redução das carências realizada manualmente','S','N');
		end if;
	end if;
elsif (ie_aplicacao_reducao_p = 'F') then
	select	nr_seq_titular
	into STRICT	nr_seq_titular_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;

	open C01;
	loop
	fetch C01 into
		nr_seq_segurado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	max(coalesce(dt_inclusao_benef,dt_inicio_vigencia))
		into STRICT	dt_inicio_vigencia_w
		from	pls_sca_vinculo
		where	nr_seq_segurado	= nr_seq_segurado_w
		and	nr_seq_plano	= nr_seq_plano_sca_p;

		if (dt_inicio_vigencia_w IS NOT NULL AND dt_inicio_vigencia_w::text <> '') then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_carencia
			where	nr_seq_segurado		= nr_seq_segurado_w
			and	nr_seq_tipo_carencia	= nr_seq_tipo_carencia_p;

			/*aaschlote OS - 279915*/

			if (pls_consistir_sexo_carencia(nr_seq_segurado_w,nr_seq_tipo_carencia_p) = 'S') then
				if (qt_registros_w = 0) then
					insert	into pls_carencia(	nr_sequencia,dt_atualizacao, nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
							nr_seq_segurado, dt_inicio_vigencia, qt_dias,nr_seq_tipo_carencia,
							ds_observacao,ie_origem_carencia_benef,ie_carencia_anterior)
					values (	nextval('pls_carencia_seq'), clock_timestamp(), nm_usuario_p,clock_timestamp(), nm_usuario_p,
							nr_seq_segurado_w, dt_inicio_vigencia_w, qt_dias_carencia_p,
							nr_seq_tipo_carencia_p,'Origem: Redução das carências realizada manualmente','S','N');
				end if;
			end if;
		end if;
		end;
	end loop;
	close C01;
elsif (ie_aplicacao_reducao_p = 'C') then
	select	nr_seq_contrato
	into STRICT	nr_seq_contrato_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;

	open C02;
	loop
	fetch C02 into
		nr_seq_segurado_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	max(coalesce(dt_inclusao_benef,dt_inicio_vigencia))
		into STRICT	dt_inicio_vigencia_w
		from	pls_sca_vinculo
		where	nr_seq_segurado	= nr_seq_segurado_w
		and	nr_seq_plano	= nr_seq_plano_sca_p;

		if (dt_inicio_vigencia_w IS NOT NULL AND dt_inicio_vigencia_w::text <> '') then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_carencia
			where	nr_seq_segurado		= nr_seq_segurado_w
			and	nr_seq_tipo_carencia	= nr_seq_tipo_carencia_p;

			/*aaschlote OS - 279915*/

			if (pls_consistir_sexo_carencia(nr_seq_segurado_w,nr_seq_tipo_carencia_p) = 'S') then
				if (qt_registros_w = 0) then
					insert	into pls_carencia(	nr_sequencia,dt_atualizacao, nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
							nr_seq_segurado, dt_inicio_vigencia, qt_dias,nr_seq_tipo_carencia,
							ds_observacao,ie_origem_carencia_benef,ie_carencia_anterior)
					values (	nextval('pls_carencia_seq'), clock_timestamp(), nm_usuario_p,clock_timestamp(), nm_usuario_p,
							nr_seq_segurado_w, dt_inicio_vigencia_w, qt_dias_carencia_p,
							nr_seq_tipo_carencia_p,'Origem: Redução das carências realizada manualmente','S','N');
				end if;
			end if;
		end if;
		end;
	end loop;
	close C02;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_reduzir_copia_carencia_sca ( nr_seq_segurado_p bigint, nr_seq_plano_sca_p bigint, nr_seq_tipo_carencia_p bigint, qt_dias_carencia_p bigint, ie_aplicacao_reducao_p text, nm_usuario_p text) FROM PUBLIC;

