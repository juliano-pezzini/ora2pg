-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_hist_pos_proj_ativ_os ( nr_seq_projeto_p bigint, nr_seq_os_p bigint) AS $body$
DECLARE

 
nm_usuario_atividade_w		varchar(15);
nm_pessoa_atividade_w		varchar(60);
ds_atividade_w			varchar(255);
qt_minutos_previstos_w		bigint;
qt_minutos_atividade_w		bigint;
pr_atividade_w			double precision;
ds_historico_w			text;
ds_atividade_ww			text;
pr_previsto_w			double precision;
pr_projeto_w			double precision;
ie_atividade_w			varchar(1) := 'N';
qt_minutos_acumulados_w		bigint;

c00 CURSOR FOR 
	SELECT	a.nm_usuario_exec, 
		substr(obter_pessoa_fisica_usuario(a.nm_usuario_exec,'N'),1,60) nm_pessoa_atividade 
	from	man_ordem_servico_exec a 
	where	a.nr_seq_ordem = nr_seq_os_p 
	and	a.nr_seq_tipo_exec = 2 
	order by 
		a.nm_usuario_exec;
	
c01 CURSOR FOR 
	SELECT	b.ds_atividade ds_atividade, 
		(b.qt_hora_prev * 60) qt_minutos_previstos, 
		sum(a.qt_minuto) qt_minutos_atividade, 
		b.pr_etapa pr_atividade, 
		(b.qt_hora_real * 60) qt_minutos_acumulados 
	from	proj_cron_etapa b, 
		man_ordem_serv_ativ a 
	where	b.nr_sequencia = a.nr_seq_proj_cron_etapa 
	and	trunc(a.dt_atividade,'dd') = trunc(clock_timestamp(),'dd') 
	and	a.nr_seq_ordem_serv = nr_seq_os_p 
	and	a.nm_usuario_exec = nm_usuario_atividade_w 
	group by 
		b.ds_atividade, 
		b.qt_hora_prev, 
		b.pr_etapa, 
		b.qt_hora_real 
	order by 
		ds_atividade;


BEGIN 
open c00;
loop 
fetch c00 into 	nm_usuario_atividade_w, 
		nm_pessoa_atividade_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin 
	ds_atividade_ww	:= null;
	ie_atividade_w := 'N';
	ds_historico_w := 
			'{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 Verdana;}{\f1\fnil Verdana;}} ' || 
			'{\colortbl ;\red0\green0\blue0;} ' || 
			'\viewkind4\uc1\pard\cf1\lang1046\f0\fs20 ' || 
			'\par Resumo das atividades realizadas pelo(a) colaborador(a) ' || nm_pessoa_atividade_w || ' em ' || to_char(trunc(clock_timestamp(),'dd'),'dd/mm/yyyy') || ':' || 
			'\par ' || 
			'\par ' || 
			'\trowd\trgaph10\trleft-10\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\cellx5000\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\cellx6900\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\cellx8750\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\cellx11200\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\cellx12700\pard\intbl\lang1046\f0\fs20 Atividade\cell Tempo prev (min)\cell Tempo real (min)\cell Tempo real acum (min)\cell % Realização \cell\row ';
	 
	open c01;
	loop 
	fetch c01 into	ds_atividade_w, 
			qt_minutos_previstos_w, 
			qt_minutos_atividade_w, 
			pr_atividade_w, 
			qt_minutos_acumulados_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		ie_atividade_w	:= 'S';
		ds_atividade_ww	:= ds_atividade_ww || '\par ';		
		ds_atividade_ww	:= ds_atividade_ww || '\trowd\trgaph10\trleft-10\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\cellx5000\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\cellx6900\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\cellx8750\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\cellx11200\clbrdrt\brdrw15\brdrs\clbrdrl\brdrw15\brdrs\clbrdrb\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\cellx12700\pard\intbl\lang1046\f0\fs20 ' || ds_atividade_w || '\cell ' || lpad(to_char(qt_minutos_previstos_w),13,' ') || '\cell ' || lpad(to_char(qt_minutos_atividade_w),13,' ') || '\cell ' || lpad(to_char(qt_minutos_acumulados_w),17,' ') || ' \cell ' || lpad(to_char(pr_atividade_w),9,' ') || '%' || ' \cell\row ';
		end;
	end loop;
	close c01;
	 
	pr_previsto_w	:= proj_obter_perc_cron(nr_seq_projeto_p, 'T');
	 
	if (coalesce(pr_previsto_w,0) = 0) then 
		pr_previsto_w	:= proj_obter_perc_cron(nr_seq_projeto_p, 'P');
	end if;
	 
	pr_projeto_w	:= proj_obter_perc_cron(nr_seq_projeto_p, 'E');
	 
	ds_historico_w 	:= ds_historico_w || ds_atividade_ww;
	ds_historico_w	:= ds_historico_w || '\pard\cf1\f1\fs20 ';
	ds_historico_w	:= ds_historico_w || '\par O percentual de utilização / esgotamento do tempo previsto para a conclusão do projeto é de ' || to_char(pr_previsto_w) || '%.';
	ds_historico_w	:= ds_historico_w || '\par O percentual real de conclusão do projeto é de ' || to_char(pr_projeto_w) || '%.';
	ds_historico_w 	:= ds_historico_w || '\f1 \par } ';
		 
	if (ie_atividade_w = 'S') then 
		begin 
		insert into man_ordem_serv_tecnico( 
			nr_sequencia, 
			nr_seq_ordem_serv, 
			dt_atualizacao, 
			nm_usuario, 
			ds_relat_tecnico, 
			cd_versao_tasy, 
			dt_historico, 
			ie_origem, 
			nr_seq_tipo, 
			nm_usuario_lib, 
			dt_liberacao, 
			ie_grau_satisfacao) 
		values ( 
			nextval('man_ordem_serv_tecnico_seq'), 
			nr_seq_os_p, 
			clock_timestamp(), 
			'Tasy', 
			ds_historico_w, 
			null, 
			clock_timestamp(), 
			'I', 
			20, 
			'Tasy', 
			clock_timestamp(), 
			null);	
		end;
	end if;
	end;
end loop;
close c00;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_hist_pos_proj_ativ_os ( nr_seq_projeto_p bigint, nr_seq_os_p bigint) FROM PUBLIC;

