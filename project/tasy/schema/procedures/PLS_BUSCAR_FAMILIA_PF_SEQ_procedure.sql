-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function pls_buscar_familia_pf_seq as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE pls_buscar_familia_pf_seq (ie_tipo_incremento_p text, cd_matricula_familia_p bigint, cd_matricula_familia_pp bigint, nr_seq_regra_p bigint, nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nr_seq_intercambio_p bigint, nm_usuario_p text, cd_operadora_empresa_p bigint, cd_matricula_p INOUT bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'SELECT * FROM pls_buscar_familia_pf_seq_atx ( ' || quote_nullable(ie_tipo_incremento_p) || ',' || quote_nullable(cd_matricula_familia_p) || ',' || quote_nullable(cd_matricula_familia_pp) || ',' || quote_nullable(nr_seq_regra_p) || ',' || quote_nullable(nr_seq_contrato_p) || ',' || quote_nullable(nr_seq_segurado_p) || ',' || quote_nullable(nr_seq_intercambio_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(cd_operadora_empresa_p) || ',' || quote_nullable(cd_matricula_p) || ' )';
	SELECT v_ret INTO cd_matricula_p FROM dblink(v_conn_str, v_query) AS p (v_ret bigint);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE pls_buscar_familia_pf_seq_atx (ie_tipo_incremento_p text, cd_matricula_familia_p bigint, cd_matricula_familia_pp bigint, nr_seq_regra_p bigint, nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nr_seq_intercambio_p bigint, nm_usuario_p text, cd_operadora_empresa_p bigint, cd_matricula_p INOUT bigint) AS $body$
DECLARE
/* Utilizado para gerar uma transação autônoma quando o tipo de incremento é sequencia( SQ ) */

cd_atual_w			bigint;
cd_inicial_w			bigint;
cd_final_w			bigint;
cd_regra_w			bigint;
cd_operadora_empresa_w		bigint;
cd_matricula_w			bigint;
cd_matricula_familia_ww		bigint;


BEGIN

if ( ie_tipo_incremento_p	= 'SQ') then
	if (coalesce(cd_matricula_familia_p,0) = 0) then
		if (coalesce(nr_seq_regra_p,0) > 0) then
			select	cd_atual,
				cd_inicial,
				cd_final
			into STRICT	cd_atual_w,
				cd_inicial_w,
				cd_final_w
			from	pls_carteira_controle_iden
			where	nr_sequencia	= nr_seq_regra_p;

			if (coalesce(cd_atual_w,0) = 0) then
				cd_regra_w :=	cd_inicial_w;
			else
				cd_regra_w :=	cd_atual_w + 1;
			end if;

			cd_matricula_w	:= cd_regra_w;
		end if;
	else
		if (coalesce(cd_matricula_familia_pp,0) <> coalesce(cd_matricula_familia_p,0)) then

			cd_matricula_w	:=  cd_matricula_familia_p;

		end if;
	end if;
end if;
if (coalesce(cd_regra_w,0) > 0) then
	update	pls_carteira_controle_iden
	set	cd_atual	= cd_regra_w,
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_regra_p;
end if;

cd_matricula_p := cd_matricula_w;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_buscar_familia_pf_seq (ie_tipo_incremento_p text, cd_matricula_familia_p bigint, cd_matricula_familia_pp bigint, nr_seq_regra_p bigint, nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nr_seq_intercambio_p bigint, nm_usuario_p text, cd_operadora_empresa_p bigint, cd_matricula_p INOUT bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE pls_buscar_familia_pf_seq_atx (ie_tipo_incremento_p text, cd_matricula_familia_p bigint, cd_matricula_familia_pp bigint, nr_seq_regra_p bigint, nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nr_seq_intercambio_p bigint, nm_usuario_p text, cd_operadora_empresa_p bigint, cd_matricula_p INOUT bigint) FROM PUBLIC;

