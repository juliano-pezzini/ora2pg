-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_devolver_fatura_a500 ( nr_seq_mot_devolucao_p bigint, nr_seq_fatura_p bigint, dt_devolucao_p timestamp, ds_justificativa_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


ds_dias_w			varchar(255);
nr_lote_contabil_w		lote_contabil.nr_lote_contabil%type;
nr_titulo_w			bigint;
qt_registro_w			bigint := 0;
nr_limite_dias_w		bigint := 0;
dt_recebimento_fatura_w		timestamp;
nr_seq_acao_w			bigint;
nr_seq_protocolo_w		bigint;
nr_titulo_ndc_w			bigint;
qt_reg_ndc_w			bigint := 0;
ie_paracer_fatura_w		varchar(1);
qt_fat_sem_parecer_w		integer;
qt_fat_pre_analise_w		integer;
qt_benef_sem_ident_w		integer;
nr_seq_analise_w		pls_analise_conta.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_seq_conta
	from 	pls_conta_pos_estabelecido a,
		pls_conta b
	where	a.nr_seq_conta = b.nr_sequencia
	and 	b.nr_Seq_protocolo = nr_seq_protocolo_w;
						
C02 CURSOR FOR
	SELECT	nr_seq_conta
	from 	pls_conta_coparticipacao a,
		pls_conta b
	where	a.nr_seq_conta = b.nr_sequencia
	and 	b.nr_seq_protocolo = nr_seq_protocolo_w;

BEGIN
select	coalesce(max(nr_lote_contabil),0)
into STRICT	nr_lote_contabil_w
from (SELECT	c.nr_lote_contabil
	from	pls_conta	a,
		pls_conta_proc	c
	where	a.nr_sequencia	= c.nr_seq_conta
	and	a.nr_seq_fatura	= nr_seq_fatura_p
	
union

	SELECT	c.nr_lote_contabil
	from	pls_conta	a,
		pls_conta_mat	c
	where	a.nr_sequencia	= c.nr_seq_conta
	and	a.nr_seq_fatura	= nr_seq_fatura_p) alias2;

if (nr_lote_contabil_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(683938, 'NR_LOTE_CONTABIL=' || to_char(nr_lote_contabil_w)
							|| ';DS_TIPO_LOTE_CONTABIL=' || substr(ctb_obter_tipo_lote_contabil(nr_lote_contabil_w,'D'),1,255));
end if;

nr_limite_dias_w	:= obter_valor_param_usuario(1293,18,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);

if (nr_limite_dias_w > 0 ) then
	select	max(dt_recebimento_fatura)
	into STRICT	dt_recebimento_fatura_w
	from	ptu_fatura
	where	nr_sequencia	= nr_seq_fatura_p;
	
	if	((trunc(dt_recebimento_fatura_w) + trunc(nr_limite_dias_w)) < trunc(clock_timestamp())) then
		ds_dias_w	:= trunc(clock_timestamp()) - (trunc(dt_recebimento_fatura_w) + trunc(nr_limite_dias_w));
		CALL wheb_mensagem_pck.exibir_mensagem_abort(193988,'DS_DIAS_W=' || ds_dias_w);
	end if;
end if;

--verifica se tem parecer na fatura
ie_paracer_fatura_w	:= obter_valor_param_usuario(1293,41,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);

if (coalesce(ie_paracer_fatura_w, 'S') = 'N') then
		
	select 	count(1)
	into STRICT	qt_fat_pre_analise_w
	from	ptu_fatura a,
		pls_conta b,
		pls_ocorrencia_benef c
	where 	a.nr_sequencia = nr_seq_fatura_p
	and	a.nr_sequencia = b.nr_seq_fatura
	and	b.nr_sequencia = c.nr_seq_conta
	and	c.ie_pre_analise = 'S';
				
	if (coalesce(qt_fat_pre_analise_w, 0) > 0) then
		
		select 	count(1)
		into STRICT	qt_fat_sem_parecer_w
		from   	pls_analise_conta_parecer
		where  	nr_seq_analise in (	SELECT	nr_seq_analise		
						from	pls_conta
						where	nr_seq_fatura = nr_seq_fatura_p);
			
			if ( qt_fat_pre_analise_w > qt_fat_sem_parecer_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(441207);
			end if;
	end if;
	
	select	count(1)
	into STRICT	qt_benef_sem_ident_w
	from	pls_conta
	where	nr_seq_fatura = nr_seq_fatura_p
	and	coalesce(ie_glosa, 'N') != 'S'
	and	coalesce(nr_seq_segurado::text, '') = '';
	
	if ( qt_benef_sem_ident_w > 0 )then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(449609);
	end if;	

end if;

begin
select	a.nr_titulo,
	a.nr_seq_protocolo,
	a.nr_titulo_ndc
into STRICT	nr_titulo_w,
	nr_seq_protocolo_w,
	nr_titulo_ndc_w
from	ptu_fatura a
where	a.nr_sequencia		= nr_seq_fatura_p;
exception
when others then
	nr_seq_protocolo_w	:= null;
end;

update	ptu_fatura
set	nr_seq_mot_devolucao	= nr_seq_mot_devolucao_p,
	dt_devolucao		= dt_devolucao_p,
	nm_usuario_devolucao	= nm_usuario_p,
	ds_justificativa	= ds_justificativa_p
where	nr_sequencia		= nr_seq_fatura_p;

if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') or (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		update	titulo_pagar
		set	dt_ultima_devolucao	= dt_devolucao_p
		where	nr_titulo		= nr_titulo_w;

		select	count(1)
		into STRICT	qt_registro_w
		from	titulo_pagar
		where	nr_titulo	= nr_titulo_w
		and	ie_situacao	= 'L';
	end if;
	
	if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
		update	titulo_pagar
		set	dt_ultima_devolucao	= dt_devolucao_p
		where	nr_titulo		= nr_titulo_ndc_w;

		select	count(1)
		into STRICT	qt_reg_ndc_w
		from	titulo_pagar
		where	nr_titulo	= nr_titulo_ndc_w
		and	ie_situacao	= 'L';
	end if;
	
	qt_registro_w := qt_registro_w + qt_reg_ndc_w;
	
	if (qt_registro_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(193994);
	end if;
	
	nr_seq_acao_w := pls_obter_acao_intercambio(	'7',  -- Devolução de fatura
					'6',  -- Cancelar título gerado
					nr_seq_fatura_p, null, null, null, clock_timestamp(), 'A500', 'N', nr_seq_acao_w);

	
	if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
		if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
			CALL cancelar_titulo_pagar(nr_titulo_w,nm_usuario_p,clock_timestamp());
		end if;
		
		if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
			CALL cancelar_titulo_pagar(nr_titulo_ndc_w,nm_usuario_p,clock_timestamp());
		end if;
	end if;
end if;

CALL ptu_atualizar_status_fatura(nr_seq_fatura_p, 'R', null, nm_usuario_p);

if (coalesce(nr_seq_protocolo_w,0) > 0) then	
	-- Diego - OS 372914 - Nãpo será mais excluido o protocolo e sim cancelado e as contas glosadas.

	-- pls_excluir_protocolo_imp(nr_seq_protocolo_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_cancelar_protocolo(nr_seq_protocolo_w, 'N', cd_estabelecimento_p, nm_usuario_p);	
	
	for r_c02_w in C02 loop
	
		CALL pls_deletar_coparticipacao(r_c02_w.nr_seq_conta, null, 'N', 'N', null, null, nm_usuario_p, cd_estabelecimento_p);
	
	end loop;
		
	for r_C01_w in C01 loop
			
		CALL pls_delete_pls_conta_pos_estab(null, null, r_C01_w.nr_seq_conta, null);
		
	end loop;
	
end if;

CALL pls_atualizar_valor_ptu_fatura(nr_seq_fatura_p, 'N');    -- gfurlan OS 1891226
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_devolver_fatura_a500 ( nr_seq_mot_devolucao_p bigint, nr_seq_fatura_p bigint, dt_devolucao_p timestamp, ds_justificativa_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

