-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_glosa_ger ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
Procedure utilizada para validar informações da regra de glosas geradas, esta rotina é 
utilizada para geração de ocorrência na Autorização / Requisição e Execução 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [x Tasy (Delphi/Java) [ x] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
 Rotina utilizada para geração de ocorrência na Autorização / Requisição e Execução 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
nr_seq_motivo_glosa_w		tiss_motivo_glosa.nr_sequencia%type;
qt_glosa_cabecalho_w		integer	:= 0;
qt_glosa_exec_item_w		integer	:= 0;
nr_seq_proc_w			bigint;
nr_seq_mat_w			bigint;
ie_gerar_ocorrencia_w		varchar(1)	:= 'N';
ie_gerou_ocor_cabecalho_w	varchar(2);
ie_regra_w			varchar(2);
ie_tipo_ocorrencia_w		varchar(2);
nr_seq_oc_benef_w		bigint;
ie_tipo_item_w			smallint;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
nr_seq_exec_item_w		pls_execucao_req_item.nr_sequencia%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
qt_solicitada_w			double precision;
nr_seq_material_w		pls_material.nr_sequencia%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;

C01 CURSOR FOR	 
	SELECT	a.nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_execucao_req_item a 
	where	a.nr_seq_execucao	= nr_seq_execucao_p 
	and	coalesce(a.nr_seq_material::text, '') = '';

C02 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.nr_seq_material 
	from	pls_execucao_req_item a 
	where	a.nr_seq_execucao	= nr_seq_execucao_p 
	and	coalesce(a.cd_procedimento::text, '') = '';
	
C03 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced 
	from	pls_guia_plano_proc a, 
		pls_guia_glosa b, 
		tiss_motivo_glosa c 
	where	a.nr_seq_guia		= nr_seq_guia_p 
	and	b.nr_seq_guia_proc	= a.nr_sequencia 
	and	c.nr_sequencia		= b.nr_seq_motivo_glosa 
	and	c.nr_sequencia		= nr_seq_motivo_glosa_w;
	
C04 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.nr_seq_material 
	from	pls_guia_plano_mat a, 
		pls_guia_glosa b, 
		tiss_motivo_glosa c 
	where	a.nr_seq_guia		= nr_seq_guia_p 
	and	b.nr_seq_guia_mat	= a.nr_sequencia 
	and	c.nr_sequencia		= b.nr_seq_motivo_glosa 
	and	c.nr_sequencia		= nr_seq_motivo_glosa_w;
	
C05 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced 
	from	pls_requisicao_proc a, 
		pls_requisicao_glosa b, 
		tiss_motivo_glosa c 
	where	a.nr_seq_requisicao	= nr_seq_requisicao_p 
	and	b.nr_seq_req_proc	= a.nr_sequencia 
	and	c.nr_sequencia		= b.nr_seq_motivo_glosa 
	and	c.nr_sequencia		= nr_seq_motivo_glosa_w;
	
C06 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.nr_seq_material 
	from	pls_requisicao_mat a, 
		pls_requisicao_glosa b, 
		tiss_motivo_glosa c 
	where	a.nr_seq_requisicao	= nr_seq_requisicao_p 
	and	b.nr_seq_req_mat	= a.nr_sequencia 
	and	c.nr_sequencia		= b.nr_seq_motivo_glosa 
	and	c.nr_sequencia		= nr_seq_motivo_glosa_w;


BEGIN 
begin 
	select	nr_seq_motivo_glosa 
	into STRICT	nr_seq_motivo_glosa_w 
	from	pls_validacao_aut_glosa 
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p;
exception 
when others then 
	nr_seq_motivo_glosa_w	:= null;
end;
 
if (nr_seq_motivo_glosa_w IS NOT NULL AND nr_seq_motivo_glosa_w::text <> '') then 
	if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
		-- Cabeçalho da guia 
		begin 
			select	count(1) 
			into STRICT	qt_glosa_cabecalho_w 
			from	pls_guia_glosa a, 
				tiss_motivo_glosa b 
			where	a.nr_seq_guia		= nr_seq_guia_p 
			and	a.nr_seq_motivo_glosa	= b.nr_sequencia 
			and	b.nr_sequencia		= nr_seq_motivo_glosa_w;		
		exception 
		when others then 
			qt_glosa_cabecalho_w	:= 0;
		end;
		 
		if (qt_glosa_cabecalho_w > 0) then 
			ie_gerar_ocorrencia_w	:= 'S';
		end if;
		 
		begin 
			select	nr_seq_prestador 
			into STRICT	nr_seq_prestador_w 
			from	pls_guia_plano 
			where	nr_sequencia	= nr_seq_guia_p;
		exception 
		when others then 
			nr_seq_prestador_w	:= null;
		end;
			 
		if (ie_utiliza_filtro_p = 'S') and (ie_gerar_ocorrencia_w = 'S') then 
			/* Tratamento para filtros */
 
			SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, null, null, null, null, null, null, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
			if (ie_regra_w	= 'S') then 
				ie_gerar_ocorrencia_w	:= 'S';
			elsif (ie_regra_w	in ('E','N')) then 
				ie_gerar_ocorrencia_w	:= 'N';
			end if;
		end if;
 
		if (ie_gerar_ocorrencia_w	= 'S')	then 
			if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
				if (qt_glosa_cabecalho_w > 0) then 
					ie_tipo_item_w	:= 7;
				end if;				
			end if;
 
			nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
 
			CALL pls_atualizar_estagio_guia(nr_seq_guia_p, nm_usuario_p, null);							
		end if;	
		 
		-- Procedimentos da guia 
		open C03;
		loop 
		fetch C03 into	 
			nr_seq_proc_w, 
			cd_procedimento_w, 
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then 
				ie_gerar_ocorrencia_w	:= 'S';
			end if;
			 
			if (ie_utiliza_filtro_p = 'S') and (ie_gerar_ocorrencia_w = 'S') then 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, nr_seq_proc_w, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
			end if;
 
			if (ie_gerar_ocorrencia_w	= 'S')	then 
				if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
					if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then 
						ie_tipo_item_w	:= 1;
					end if;				
				end if;
 
				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, nr_seq_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
 
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
								nr_seq_guia_p, null, null, 
								nr_seq_proc_w, null, null, 
								null, null, null, 
								nm_usuario_p, cd_estabelecimento_p);		
			end if;	
			end;
		end loop;
		close C03;
		-- Materiais da guia 
		open C04;
		loop 
		fetch C04 into	 
			nr_seq_mat_w, 
			nr_seq_material_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			if (nr_seq_mat_w IS NOT NULL AND nr_seq_mat_w::text <> '') then 
				ie_gerar_ocorrencia_w	:= 'S';
			end if;
			 
			if (ie_utiliza_filtro_p = 'S') and (ie_gerar_ocorrencia_w = 'S') then 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, nr_seq_mat_w, null, null, null, null, null, nr_seq_material_w, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
			end if;
 
			if (ie_gerar_ocorrencia_w	= 'S')	then 
				if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
					if (nr_seq_mat_w IS NOT NULL AND nr_seq_mat_w::text <> '') then 
						ie_tipo_item_w	:= 2;
					end if;				
				end if;
 
				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, nr_seq_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							 
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
								nr_seq_guia_p, null, null, 
								null, nr_seq_mat_w, null, 
								null, null, null, 
								nm_usuario_p, cd_estabelecimento_p);		
			end if;	
			end;
		end loop;
		close C04;		
	elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
		-- Cabeçalho da requisição 
		begin 
			select	count(1) 
			into STRICT	qt_glosa_cabecalho_w 
			from	pls_requisicao_glosa a, 
				tiss_motivo_glosa b 
			where	a.nr_seq_requisicao	= nr_seq_requisicao_p 
			and	a.nr_seq_motivo_glosa	= b.nr_sequencia 
			and	b.nr_sequencia		= nr_seq_motivo_glosa_w;		
		exception 
		when others then 
			qt_glosa_cabecalho_w	:= 0;
		end;
		 
		if (qt_glosa_cabecalho_w > 0) then 
			ie_gerar_ocorrencia_w	:= 'S';
		end if;
		 
		begin 
			select	nr_seq_prestador 
			into STRICT	nr_seq_prestador_w 
			from	pls_requisicao 
			where	nr_sequencia	= nr_seq_requisicao_p;
		exception 
		when others then 
			nr_seq_prestador_w	:= null;
		end;
		 
		if (ie_utiliza_filtro_p = 'S') and (ie_gerar_ocorrencia_w = 'S') then 
			/* Tratamento para filtros */
 
			SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, null, null, null, null, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
			if (ie_regra_w	= 'S') then 
				ie_gerar_ocorrencia_w	:= 'S';
			elsif (ie_regra_w	in ('E','N')) then 
				ie_gerar_ocorrencia_w	:= 'N';
			end if;
		end if;
 
		if (ie_gerar_ocorrencia_w	= 'S')	then 
			if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
				if (qt_glosa_cabecalho_w > 0) then 
					ie_tipo_item_w	:= 9;
				end if;				
			end if;
 
			nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
						 
			CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
							null, nr_seq_requisicao_p, null, 
							null, null, null, 
							null, null, null, 
							nm_usuario_p, cd_estabelecimento_p);
		end if;
		 
		-- Procedimentos da requisição 
		open C05;
		loop 
		fetch C05 into	 
			nr_seq_proc_w, 
			cd_procedimento_w, 
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin 
			if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then 
				ie_gerar_ocorrencia_w	:= 'S';
			end if;
			 
			if (ie_utiliza_filtro_p = 'S') and (ie_gerar_ocorrencia_w = 'S') then 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, nr_seq_proc_w, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
			end if;
 
			if (ie_gerar_ocorrencia_w	= 'S')	then 
				if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
					if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then 
						ie_tipo_item_w	:= 5;
					end if;				
				end if;
 
				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, nr_seq_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							 
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
								null, nr_seq_requisicao_p, null, 
								null, null, nr_seq_proc_w, 
								null, null, null, 
								nm_usuario_p, cd_estabelecimento_p);
			end if;
			end;
		end loop;
		close C05;
		 
		-- Materiais da requisição 
		open C06;
		loop 
		fetch C06 into	 
			nr_seq_mat_w, 
			nr_seq_material_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin 
			if (nr_seq_mat_w IS NOT NULL AND nr_seq_mat_w::text <> '') then 
				ie_gerar_ocorrencia_w	:= 'S';
			end if;
			 
			if (ie_utiliza_filtro_p = 'S') and (ie_gerar_ocorrencia_w = 'S') then 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, nr_seq_mat_w, null, null, null, null, null, nr_seq_material_w, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
			end if;
 
			if (ie_gerar_ocorrencia_w	= 'S')	then 
				if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
					if (nr_seq_mat_w IS NOT NULL AND nr_seq_mat_w::text <> '') then 
						ie_tipo_item_w	:= 6;
					end if;				
				end if;
 
				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, nr_seq_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							 
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
								null, nr_seq_requisicao_p, null, 
								null, null, null, 
								nr_seq_mat_w, null, null, 
								nm_usuario_p, cd_estabelecimento_p);
			end if;
			end;
		end loop;
		close C06;		
		 
	elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then 
		begin 
			select	nr_seq_prestador 
			into STRICT	nr_seq_prestador_w 
			from	pls_execucao_requisicao 
			where	nr_sequencia	= nr_seq_execucao_p;
		exception 
		when others then 
			nr_seq_prestador_w	:= null;
		end;
	 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_exec_item_w, 
			cd_procedimento_w, 
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			ie_gerar_ocorrencia_w	:= 'N';
			 
			select	count(1) 
			into STRICT	qt_glosa_exec_item_w 
			from	pls_requisicao_glosa b, 
				tiss_motivo_glosa c 
			where	b.nr_seq_exec_proc	= nr_seq_exec_item_w 
			and	c.nr_sequencia		= b.nr_seq_motivo_glosa 
			and	c.nr_sequencia		= nr_seq_motivo_glosa_w;		
			 
			if (qt_glosa_exec_item_w > 0) then 
				ie_gerar_ocorrencia_w	:= 'S';
			end if;			
			 
			if	(ie_utiliza_filtro_p	= 'S' AND ie_gerar_ocorrencia_w = 'S') then 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, cd_procedimento_w, ie_origem_proced_w, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
				 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
			end if;
												 
			if (ie_gerar_ocorrencia_w	= 'S') then 
				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 10, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
					 
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
								null, null, nr_seq_execucao_p, 
								null, null, null, 
								null, nr_seq_exec_item_w, null, 
								nm_usuario_p, cd_estabelecimento_p);
			end if;
			end;
		end loop;
		close C01;
 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_exec_item_w, 
			nr_seq_material_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			ie_gerar_ocorrencia_w	:= 'N';
			 
			select	count(1) 
			into STRICT	qt_glosa_exec_item_w 
			from	pls_requisicao_glosa b, 
				tiss_motivo_glosa c 
			where	b.nr_seq_exec_mat	= nr_seq_exec_item_w 
			and	c.nr_sequencia		= b.nr_seq_motivo_glosa 
			and	c.nr_sequencia		= nr_seq_motivo_glosa_w;
			 
			if (qt_glosa_exec_item_w > 0) then 
				ie_gerar_ocorrencia_w	:= 'S';
			end if;	
			 
			if	(ie_utiliza_filtro_p	= 'S' AND ie_gerar_ocorrencia_w = 'S') then 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, null, null, nr_seq_material_w, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
								 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
			end if;
			 
			if (ie_gerar_ocorrencia_w	= 'S') then 
			nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, null, nr_seq_exec_item_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 11, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
				 
			CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
							null, null, nr_seq_execucao_p, 
							null, null, null, 
							null, null, nr_seq_exec_item_w, 
							nm_usuario_p, cd_estabelecimento_p);
			end if;
			end;
		end loop;
		close C02;
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_glosa_ger ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

