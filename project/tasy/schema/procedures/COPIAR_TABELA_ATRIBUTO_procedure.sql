-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_tabela_atributo ( nm_Tabela_Origem_p text, nm_Tabela_Destino_p text, nm_atributo_p text, nm_usuario_p text) AS $body$
DECLARE


varsql				varchar(1) := chr(39);
ds_comando_w			varchar(2000);
C01				integer;
retorno_w			integer;
nm_integridade_referencial_w	varchar(50);
ds_shortname_origem_w		varchar(10);
ds_shortname_destino_w		varchar(10);
nm_tabela_referencia_w		varchar(50);
ie_regra_delecao_w		varchar(15);
ds_integridade_referencial_w	varchar(255);
C02				integer;
retorno_ww			integer;
nm_atributo_w			varchar(50);
ie_sequencia_criacao_w		bigint;
nm_atributo_ref_w		varchar(50);
nm_atributo_ds_w		varchar(50);
ie_temporaria_w			varchar(5);
ie_tabela_temporaria_w		varchar(1)	:= 'N';


BEGIN
if (nm_atributo_p IS NOT NULL AND nm_atributo_p::text <> '') then
	begin
	ds_Comando_w := 	
			'Insert into Tabela_Atributo( nm_tabela, ' ||
			'	nm_atributo, nr_sequencia_criacao, ie_obrigatorio, ' ||
			'	ie_tipo_atributo, dt_atualizacao, nm_usuario,nm_usuario_nrec,dt_atualizacao_nrec, qt_tamanho, ' ||
			'	qt_decimais, ie_criar_alterar, ds_atributo, ie_situacao, '||
			'	qt_tamanho_calculo, qt_seq_inicio, qt_seq_incremento, ' ||
			'	dt_criacao, vl_default, ie_componente, ds_valores, ' ||
			'	cd_dominio, qt_tam_delphi, ds_label, ' ||
			'	ds_label_grid, nr_seq_ordem, qt_coluna, ds_mascara, ' ||
			'     	qt_desloc_direita, qt_tam_label, qt_tam_grid, ie_readonly, ' ||
			'	ie_tabstop, nr_seq_localizador, qt_altura, ie_criar_descricao, ' ||
			'	nm_atributo_pai, ie_log_exclusao,ie_log_update,ie_atualizar_versao, ' ||
			'	ie_criar_desc_fk, ie_dbl_click_readonly, cd_exp_desc, cd_exp_label, cd_exp_label_grid, cd_exp_valores, ie_informacao_sensivel) ' ||
       		'select ' || varsql || nm_tabela_destino_p || varsql ||
        		'     	,NM_ATRIBUTO, NR_SEQUENCIA_CRIACAO, ' ||
			'     	IE_OBRIGATORIO,  IE_TIPO_ATRIBUTO, sysdate, ' ||
			'     	:NM_USUARIO,:NM_USUARIO,sysdate, QT_TAMANHO,  QT_DECIMAIS, ' ||
			'     	IE_CRIAR_ALTERAR, DS_ATRIBUTO, IE_SITUACAO, ' ||
			'     	QT_TAMANHO_CALCULO, QT_SEQ_INICIO, QT_SEQ_INCREMENTO, ' ||
			'     	sysdate, vl_default, ie_componente, ds_valores, ' ||
			'	cd_dominio, qt_tam_delphi, ds_label, ' ||
			'	ds_label_grid, nr_seq_ordem, qt_coluna, ds_mascara, ' ||
			'     	qt_desloc_direita, qt_tam_label, qt_tam_grid, ie_readonly, ' ||
			'	ie_tabstop, nr_seq_localizador, qt_altura, ie_criar_descricao, ' ||
			'	nm_atributo_pai, ie_log_exclusao,ie_log_update,ie_atualizar_versao, ' ||
			'	ie_criar_desc_fk, ie_dbl_click_readonly, cd_exp_desc, cd_exp_label, cd_exp_label_grid, cd_exp_valores, ie_informacao_sensivel ' ||
        		'from Tabela_atributo a ' ||
        		'where nm_tabela = ' || varsql || nm_tabela_origem_p || varsql ||
			'  and nm_atributo = ' || varsql || nm_atributo_p || varsql ||
        		'  and not exists ( ' ||
		      '          select 1 from tabela_atributo b ' ||
		      '          where nm_tabela = ' || varsql || nm_tabela_destino_p || varsql ||
		      '            and a.nm_atributo = b.nm_atributo) ';
	CALL Exec_sql_dinamico_bv(nm_tabela_destino_p, ds_comando_w,'nm_usuario='||nm_usuario_p);

	/* Criar índices */

	C01	:= DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C01,'Select a.nm_integridade_referencial, a.nm_tabela_referencia, a.ie_regra_delecao, a.ds_integridade_referencial from integridade_referencial a where a.nm_tabela = ' || chr(39)

|| nm_tabela_origem_p || chr(39) || ' and exists(Select 1 from integridade_atributo b where a.nm_integridade_referencial = b.nm_integridade_referencial and b.nm_atributo = ' || chr(39) || nm_atributo_p 

|| chr(39) || ')', DBMS_SQL.NATIVE);

	DBMS_SQL.DEFINE_COLUMN(C01, 1, nm_integridade_referencial_w, 50);
	DBMS_SQL.DEFINE_COLUMN(C01, 2, nm_tabela_referencia_w, 50);
	DBMS_SQL.DEFINE_COLUMN(C01, 3, ie_regra_delecao_w, 15);
	DBMS_SQL.DEFINE_COLUMN(C01, 4, ds_integridade_referencial_w, 255);
	retorno_w	:= DBMS_SQL.EXECUTE(C01);

	Select	ds_shortname
	into STRICT	ds_shortname_origem_w
	from	tabela_sistema
	where	nm_tabela = nm_tabela_origem_p;

	Select	ds_shortname,
		ie_temporaria
	into STRICT	ds_shortname_destino_w,
		ie_temporaria_w
	from	tabela_sistema
	where	nm_tabela = nm_tabela_destino_p;

	if (ie_temporaria_w in ('G','GD')) then
		ie_tabela_temporaria_w := 'S';
	end if;

	if (ie_tabela_temporaria_w = 'N') then
		while(DBMS_SQL.FETCH_ROWS(C01) > 0) loop

			DBMS_SQL.COLUMN_VALUE(C01, 1, nm_integridade_referencial_w);
			DBMS_SQL.COLUMN_VALUE(C01, 2, nm_tabela_referencia_w);
			DBMS_SQL.COLUMN_VALUE(C01, 3, ie_regra_delecao_w);
			DBMS_SQL.COLUMN_VALUE(C01, 4, ds_integridade_referencial_w);
			ds_comando_w	:= 'insert into integridade_referencial(	 nm_tabela, ' ||
											'nm_integridade_referencial, ' ||
											'nm_tabela_referencia, ' ||
											'dt_atualizacao, ' ||
											'nm_usuario, ' ||
											'ie_regra_delecao, ' ||
											'ds_integridade_referencial, ' ||
											'ie_criar_alterar, ' ||
											'ie_situacao, ' ||
											'dt_criacao) ' ||
										'Values(' || chr(39) || nm_tabela_destino_p || chr(39) || ',' ||
											chr(39) || replace(nm_integridade_referencial_w, ds_shortname_origem_w, ds_shortname_destino_w) || chr(39) || ',' ||
											chr(39) || nm_tabela_referencia_w || chr(39) || ',' ||
											'sysdate, ' ||
											chr(39) || nm_usuario_p || chr(39) || ',' ||
											chr(39) || ie_regra_delecao_w || chr(39) || ',' ||
											chr(39) || ds_integridade_referencial_w || chr(39) || ',' ||
											chr(39) || 'I' || chr(39) || ',' ||
											chr(39) || 'A' || chr(39) || ',' ||
											'sysdate)';
			CALL Exec_sql_dinamico(nm_tabela_destino_p, ds_comando_w);

			/* Criar os campos da integridade */

			C02	:= DBMS_SQL.OPEN_CURSOR;
			DBMS_SQL.PARSE(C02, 'Select nm_atributo, ie_sequencia_criacao, nm_atributo_ref from integridade_atributo where nm_integridade_referencial = ' || chr(39) || nm_integridade_referencial_w

	|| chr(39), DBMS_SQL.NATIVE);

			DBMS_SQL.DEFINE_COLUMN(C02, 1, nm_atributo_w, 50);
			DBMS_SQL.DEFINE_COLUMN(C02, 2, ie_sequencia_criacao_w);
			DBMS_SQL.DEFINE_COLUMN(C02, 3, nm_atributo_ref_w, 50);
			/*DBMS_SQL.DEFINE_COLUMN(C02, 4, nm_atributo_ds_w, 50);*/

			retorno_ww	:= DBMS_SQL.EXECUTE(C02);

			while(DBMS_SQL.FETCH_ROWS(C02) > 0) loop

				DBMS_SQL.COLUMN_VALUE(C02, 1, nm_atributo_w);
				DBMS_SQL.COLUMN_VALUE(C02, 2, ie_sequencia_criacao_w);
				DBMS_SQL.COLUMN_VALUE(C02, 3, nm_atributo_ref_w);
				/*DBMS_SQL.COLUMN_VALUE(C02, 4, nm_atributo_ds_w);*/

				ds_comando_w	:= 'insert into integridade_atributo(	 nm_tabela, ' ||
											'nm_integridade_referencial, ' || 
											'nm_atributo, ' || 
											'ie_sequencia_criacao, ' ||
											'dt_atualizacao, ' || 
											'nm_usuario, ' || 
											'nm_atributo_ref)' ||
										'Values(' || chr(39) || nm_tabela_destino_p || chr(39) || ',' ||
											chr(39) || replace(nm_integridade_referencial_w, ds_shortname_origem_w, ds_shortname_destino_w) || chr(39) || ',' ||
											chr(39) || nm_atributo_w || chr(39) || ',' ||
											ie_sequencia_criacao_w || ',' || 
											'sysdate, ' || 
											chr(39) || nm_usuario_p || chr(39) || ',' ||
											chr(39) || nm_atributo_ref_w || chr(39) || ')';
				CALL Exec_sql_dinamico(nm_tabela_destino_p, ds_comando_w);
			end loop;
			dbms_sql.close_cursor(C02);
			/* Criar os índices da integridade */

			CALL gerar_indice_fk(nm_tabela_destino_p, replace(nm_integridade_referencial_w, ds_shortname_origem_w, ds_shortname_destino_w), nm_usuario_p);

		end loop;
	end if;
	dbms_sql.close_cursor(C01);
	end;
end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_tabela_atributo ( nm_Tabela_Origem_p text, nm_Tabela_Destino_p text, nm_atributo_p text, nm_usuario_p text) FROM PUBLIC;

