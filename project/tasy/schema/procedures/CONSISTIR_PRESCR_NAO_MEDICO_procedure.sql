-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_prescr_nao_medico ( nr_prescricao_p bigint, nr_sequencia_p bigint, ds_erro_p INOUT text, nm_usuario_p text) AS $body$
DECLARE



qt_regra_w			bigint;
cd_grupo_w			bigint;
cd_subgrupo_w			bigint;
cd_Classe_w			bigint;
cd_material_w			bigint;
nr_seq_conselho_w		bigint;
cd_material_estoque_w		bigint;
ie_permite_w			varchar(01);
ds_erro_w			varchar(255);
cd_pessoa_fisica_w		varchar(255);
cd_prescritor_w			varchar(10);
qt_medico_w			bigint;
qt_ciclo_oncologia_w		bigint;
ie_bloqueia_nao_conselho_w	varchar(01);
ie_motivo_prescr_w		varchar(10);
ie_tipo_material_w		varchar(10);
cd_especialidade_usuario_w	integer;
cd_perfil_w					integer;
qt_w						integer := 0;

C01 CURSOR FOR
	SELECT	b.cd_grupo_material,
		b.cd_subgrupo_material,
		b.cd_classe_material,
		b.cd_material,
		c.cd_material_estoque,
		c.ie_tipo_material
	from	material c,
		Estrutura_material_v b,
		prescr_material a
	where	a.nr_prescricao			= nr_prescricao_p
	and	a.nr_sequencia			= nr_sequencia_p
	and	a.cd_material			= b.cd_material
	and	a.cd_material			= c.cd_material
	and	a.ie_agrupador not in (3,7,9)
	and	c.ie_tipo_material in (1,2,3,6);

C02 CURSOR FOR
	SELECT	ie_permite
	from	regra_prescr_medic
	where	coalesce(cd_grupo_material, cd_grupo_w)		= cd_grupo_w
	and	coalesce(cd_subgrupo_material, cd_subgrupo_w)	= cd_subgrupo_w
	and	coalesce(cd_classe_material, cd_classe_w)	= cd_classe_w
	and	coalesce(cd_material, cd_material_w)		= cd_material_w
	and	coalesce(cd_perfil, cd_perfil_w)	=  cd_perfil_w
	and	coalesce(cd_pessoa_fisica, coalesce(cd_pessoa_fisica_w,'0')) = coalesce(cd_pessoa_fisica_w,'0')
	and	coalesce(cd_especialidade, coalesce(cd_especialidade_usuario_w,0)) = coalesce(cd_especialidade_usuario_w,0)
	and	coalesce(ie_situacao,'A')	= 'A'
	and	nr_seq_conselho				= nr_seq_conselho_w
	and	((coalesce(ie_tipo_material::text, '') = '') or (ie_tipo_material = ie_tipo_material_w))
	and	((coalesce(ie_motivo_prescr::text, '') = '') or (ie_motivo_prescr	= ie_motivo_prescr_w))
	and	((coalesce(cd_material_estoque::text, '') = '') or (cd_material_estoque	= cd_material_estoque_w))
	order by coalesce(cd_pessoa_fisica,'0'),
		coalesce(cd_perfil,0),
		coalesce(cd_material,0),
		coalesce(cd_material_estoque,0),
		coalesce(cd_classe_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_grupo_material,0),
		coalesce(cd_especialidade,0);


BEGIN

ds_erro_w	:= '';
ie_bloqueia_nao_conselho_w	:= Obter_Valor_Param_Usuario(924, 325, Obter_Perfil_Ativo, wheb_usuario_pck.get_nm_usuario, 0);

select	count(*)
into STRICT	qt_ciclo_oncologia_w
from	paciente_atendimento
where	nr_prescricao = nr_prescricao_p;

cd_pessoa_fisica_w			:= Obter_Pessoa_Fisica_Usuario(nm_usuario_p, 'C');
cd_especialidade_usuario_w	:= Obter_especialidade_pf(cd_pessoa_fisica_w);
cd_perfil_w	:= coalesce(Obter_Perfil_Ativo,0);
if (nm_usuario_p = 'Leticia S') then
	cd_perfil_w	:= 1067;
end if;

if (qt_ciclo_oncologia_w = 0) then

	/* Somente rodar o processo se o hospital cadastrou alguma regra */

	Select count(*)
	into STRICT	qt_regra_w
	from	regra_prescr_medic
	where	coalesce(ie_situacao,'A')	= 'A';

	/* A Regra somente se aplica se o usuario original da prescricao nao e medico */

	if (qt_regra_w > 0) then
		select	max(u.cd_pessoa_fisica),
			max(ie_motivo_prescricao)
		into STRICT	cd_prescritor_w,
			ie_motivo_prescr_w
		from	Usuario u,
			prescr_medica p
		where	p.nr_prescricao		= nr_prescricao_p
		and	p.nm_usuario_original	= u.nm_usuario;

		select	count(*)
		into STRICT	qt_medico_w
		from	medico
		where	cd_pessoa_fisica		= cd_prescritor_w;
	end if;

	if (qt_regra_w > 0) then
	--	(qt_medico_w = 0) then
		select	max(nr_seq_conselho)
		into STRICT	nr_seq_conselho_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_prescritor_w;

		OPEN C01;
		Loop
		Fetch c01 into	
			cd_grupo_w,
			cd_subgrupo_w,
			cd_classe_w,
			cd_material_w,
			cd_material_estoque_w,
			ie_tipo_material_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			ie_permite_w		:= 'S';
			OPEN C02;
			Loop
			Fetch c02
			into	ie_permite_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				ie_permite_w	:= ie_permite_w;			
			END Loop;
			CLOSE C02;
			
			ds_erro_w	:= null;
			if (ie_permite_w = 'N') or
				((ie_bloqueia_nao_conselho_w	= 'S') and (coalesce(nr_seq_conselho_w::text, '') = '')) then
				ds_erro_w	:= wheb_mensagem_pck.get_texto(279168, 'CD_MATERIAL_P=' || cd_material_w); --'Medicamento: ' || cd_material_w || ' nao pode ser prescricao ';
			end if;

		END Loop;
		CLOSE C01;
	end if;
	
end if;

ds_erro_p	:= ds_erro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_prescr_nao_medico ( nr_prescricao_p bigint, nr_sequencia_p bigint, ds_erro_p INOUT text, nm_usuario_p text) FROM PUBLIC;

