-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_comissao_repasse ( nr_seq_repasse_p bigint, nr_seq_equipe_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_vendedor_repasse_w	pls_vendedor.nr_sequencia%type;
nr_seq_vendedor_venda_w		pls_vendedor.nr_sequencia%type;
nr_seq_cargo_canal_repasse_w	pls_cargo_canal_venda.nr_sequencia%type;
nr_seq_cargo_canal_venda_w	pls_cargo_canal_venda.nr_sequencia%type;
dt_referencia_w			pls_repasse_vend.dt_referencia%type;
dt_referencia_trunc_w		pls_repasse_vend.dt_referencia%type;
dt_inicio_movimento_w		pls_repasse_vend.dt_movimento%type;
dt_fim_movimento_w		pls_repasse_vend.dt_movimento_fim%type;
nm_vendedor_venda_w		varchar(255);
nr_seq_mensalidade_seg_w	pls_mensalidade_segurado.nr_sequencia%type;
nr_parcela_w			pls_mensalidade_segurado.nr_parcela%type;
ie_acao_contrato_w		pls_segurado.ie_acao_contrato%type;
ie_tipo_pessoa_w		varchar(2);
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
qt_idade_w			bigint;
nr_seq_plano_w			pls_segurado.nr_seq_plano%type;
nr_seq_item_mens_w		pls_mensalidade_seg_item.nr_sequencia%type;
ie_tipo_item_w			pls_mensalidade_seg_item.ie_tipo_item%type;
vl_item_w			pls_mensalidade_seg_item.vl_item%type;
dt_contratacao_w		pls_segurado.dt_contratacao%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
ie_dt_ref_comissao_equipe_w	pls_parametros.ie_dt_ref_comissao_equipe%type;
dt_liquidacao_titulo_w		titulo_receber.dt_liquidacao%type;
qt_reg_mens_w			bigint;
qt_mudanca_vendedor_w		bigint;
nr_seq_repasse_w		pls_repasse_mens.nr_sequencia%type;
nr_seq_regra_w			pls_regra_repasse_superior.nr_sequencia%type;
nr_seq_regra_repasse_w		pls_regra_repasse_sup_item.nr_sequencia%type;
tx_repasse_w			pls_regra_repasse_sup_item.tx_repasse%type;
vl_comissao_venda_w		pls_repasse_mens_item.vl_repasse%type;
qt_repasse_gerado_w		bigint;
vl_repasse_w			pls_regra_repasse_sup_item.vl_repasse%type;
nr_titulo_w			titulo_receber.nr_titulo%type;
ie_gerar_juro_mult_tit_w	varchar(1);
vl_juros_multa_w		double precision := 0;
vl_origem_w			pls_repasse_mens_item.vl_origem%type;
ie_comissao_equipe_tit_abert_w	pls_parametros.ie_comissao_equipe_tit_aberto%type;
nr_seq_canal_equipe_w		pls_repasse_vend.nr_seq_vendedor%type;
nr_seq_outra_equipe_w		pls_equipe_vend_vinculo.nr_seq_equipe%type;
ie_outra_equipe_w		varchar(1);
ie_vl_integral_1_parcela_w	pls_regra_repasse_sup_item.ie_vl_integral_1_parcela%type;
nr_seq_segurado_preco_w		pls_segurado_preco.nr_sequencia%type;
vl_preco_atual_w		pls_segurado_preco.vl_preco_atual%type;
vl_preco_nao_subsid_desc_w	pls_segurado_preco.vl_preco_nao_subsid_desc%type;
vl_preco_atual_sca_w		pls_segurado_preco_origem.vl_preco_atual%type;

-- Buscar os cargos inferiores que realizaram vendas
C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_cargo_canal_venda
	from	pls_regra_repasse_superior
	where	nr_seq_cargo_canal_repasse 	= nr_seq_cargo_canal_repasse_w
	and	nr_seq_equipe 			= nr_seq_equipe_p
	and	coalesce(ie_situacao,'A') 		= 'A';WITH RECURSIVE cte AS (


-- Buscar os canais de venda inferiores que realizaram vendas
C02 CURSOR FOR
	SELECT	nr_seq_vendedor,pls_obter_dados_vendedor(nr_seq_vendedor,'N') nm_canal
	from	pls_equipe_vend_vinculo WHERE nr_seq_vendedor	= nr_seq_vendedor_repasse_w
  UNION ALL



C02 CURSOR FOR
	SELECT	nr_seq_vendedor,pls_obter_dados_vendedor(nr_seq_vendedor,'N') nm_canal
	from	pls_equipe_vend_vinculo JOIN cte c ON (c.prior nr_seq_vendedor = nr_seq_canal_superior)

) SELECT * FROM cte WHERE nr_seq_equipe		= nr_seq_equipe_p
	and	nr_seq_cargo_canal	= nr_seq_cargo_canal_venda_w
	and	dt_referencia_trunc_w between coalesce(dt_inicio_vigencia, dt_referencia_trunc_w) and coalesce(dt_fim_vigencia, dt_referencia_trunc_w);
;

C03 CURSOR FOR
	SELECT	b.nr_sequencia nr_seq_mensalidade_seg,
		b.nr_parcela,
		e.ie_acao_contrato,
		CASE WHEN coalesce(g.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END  ie_tipo_estipulante,
		e.nr_sequencia nr_seq_segurado,
		substr(obter_idade_pf(e.cd_pessoa_fisica, clock_timestamp(), 'A'),1,10) qt_idade,
		e.nr_seq_plano,
		a.nr_sequencia nr_seq_item_mens,
		a.ie_tipo_item,
		a.vl_item,
		e.dt_contratacao,
		g.nr_sequencia nr_seq_contrato,
		h.dt_liquidacao,
		h.nr_titulo,
		b.nr_seq_segurado_preco
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_mensalidade			c,
		pls_segurado			e,
		pls_contrato			g,
		titulo_receber			h
	where	a.nr_seq_mensalidade_seg = b.nr_sequencia
	and	c.nr_sequencia		= b.nr_seq_mensalidade
	and	e.nr_sequencia		= b.nr_seq_segurado
	and	e.nr_seq_contrato	= g.nr_sequencia
	and	h.nr_seq_mensalidade	= c.nr_sequencia
	and	coalesce(c.ie_cancelamento::text, '') = ''
	and (h.ie_situacao	= '2' or (h.ie_situacao = '1' and ie_comissao_equipe_tit_abert_w = 'S'))
	and	e.nr_seq_vendedor_canal = nr_seq_vendedor_venda_w
	and	((ie_dt_ref_comissao_equipe_w = 'C' AND e.dt_contratacao between dt_inicio_movimento_w and dt_fim_movimento_w) or
		(ie_dt_ref_comissao_equipe_w = 'L' AND h.dt_liquidacao between dt_inicio_movimento_w and dt_fim_movimento_w));

C04 CURSOR FOR
	SELECT	nr_sequencia,
		tx_repasse,
		coalesce(vl_repasse,0),
		ie_vl_integral_1_parcela
	from	pls_regra_repasse_sup_item
	where	nr_seq_regra	= nr_seq_regra_w
	and	((ie_dt_ref_comissao_equipe_w = 'C' AND dt_contratacao_w between dt_inicio_movimento_w and dt_fim_movimento_w) or
		(ie_dt_ref_comissao_equipe_w = 'L' AND dt_liquidacao_titulo_w between dt_inicio_movimento_w and dt_fim_movimento_w))
	and	nr_parcela_w between coalesce(nr_parcela_inicial,nr_parcela_w) and coalesce(nr_parcela_final,nr_parcela_w)
	and	qt_idade_w between coalesce(qt_idade_inicial,qt_idade_w) and coalesce(qt_idade_final,qt_idade_w)
	and	((coalesce(ie_tipo_estipulante,'A') = 'A') or (coalesce(ie_tipo_estipulante,'A') = ie_tipo_pessoa_w))
	and	((ie_acao_contrato = ie_acao_contrato_w) or (coalesce(ie_acao_contrato::text, '') = ''))
	and	((coalesce(nr_seq_contrato::text, '') = '') or (nr_seq_contrato = nr_seq_contrato_w))
	order by
		coalesce(ie_tipo_estipulante,'A'),
		coalesce(ie_acao_contrato,' '),
		coalesce(nr_contrato,0);
	
C05 CURSOR FOR
	SELECT	b.nr_seq_vendedor
	from	pls_repasse_mens	a,
		pls_repasse_vend	b
	where	a.nr_seq_repasse	= b.nr_sequencia
	and	a.nr_seq_mens_seg	= nr_seq_mensalidade_seg_w
	and	b.nr_sequencia		<> nr_seq_repasse_p
	and	coalesce(b.ie_status,'X')	<> 'C'
	and	b.nr_seq_vendedor 	<> nr_seq_vendedor_venda_w
	group by b.nr_seq_vendedor;

C06 CURSOR(	nr_seq_mensalidade_seg_item_pc	pls_mensalidade_seg_item.nr_sequencia%type) FOR
	SELECT	coalesce(b.ie_embutido_produto,'N') ie_embutido_produto,
		b.ie_lancamento_mensalidade,
		coalesce(c.ie_lancamento_mensalidade,'D') ie_lancamento_mens_plano,
		a.nr_seq_segurado_preco
	from	pls_mensalidade_sca a,
		pls_sca_vinculo b,
		pls_plano c
	where	a.nr_seq_item_mens = nr_seq_mensalidade_seg_item_pc
	and	c.nr_sequencia = b.nr_seq_plano
	and	b.nr_sequencia = a.nr_seq_vinculo_sca;
	
BEGIN
select	nr_seq_vendedor,
	dt_referencia,
	dt_movimento,
	dt_movimento_fim
into STRICT	nr_seq_vendedor_repasse_w,
	dt_referencia_w,
	dt_inicio_movimento_w,
	dt_fim_movimento_w
from	pls_repasse_vend
where	nr_sequencia	= nr_seq_repasse_p;
	
dt_referencia_trunc_w	:= trunc(dt_referencia_w,'month');

dt_inicio_movimento_w	:= coalesce(dt_inicio_movimento_w, dt_referencia_trunc_w);
dt_fim_movimento_w	:= coalesce(dt_fim_movimento_w, last_day(dt_referencia_w));

select	max(nr_seq_cargo_canal)
into STRICT	nr_seq_cargo_canal_repasse_w
from	pls_equipe_vend_vinculo
where	nr_seq_vendedor	= nr_seq_vendedor_repasse_w
and	nr_seq_equipe	= nr_seq_equipe_p
and	dt_referencia_trunc_w between coalesce(dt_inicio_vigencia, dt_referencia_trunc_w) and coalesce(dt_fim_vigencia,dt_referencia_trunc_w);

begin
select	coalesce(ie_dt_ref_comissao_equipe,'L'),
	coalesce(ie_comissao_equipe_tit_aberto,'N')
into STRICT	ie_dt_ref_comissao_equipe_w,
	ie_comissao_equipe_tit_abert_w
from	pls_parametros
where	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;
exception
when others then
	ie_dt_ref_comissao_equipe_w	:= 'L';
	ie_comissao_equipe_tit_abert_w	:= 'N';
end;

if (nr_seq_cargo_canal_repasse_w IS NOT NULL AND nr_seq_cargo_canal_repasse_w::text <> '') then
	ie_gerar_juro_mult_tit_w := pls_obter_se_gera_juro_mult(wheb_usuario_pck.get_cd_estabelecimento);

	open C01;
	loop
	fetch C01 into
		nr_seq_regra_w,
		nr_seq_cargo_canal_venda_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		open C02;
		loop
		fetch C02 into
			nr_seq_vendedor_venda_w,
			nm_vendedor_venda_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin		
			open C03;
			loop
			fetch C03 into
				nr_seq_mensalidade_seg_w,
				nr_parcela_w,
				ie_acao_contrato_w,
				ie_tipo_pessoa_w,
				nr_seq_segurado_w,
				qt_idade_w,
				nr_seq_plano_w,
				nr_seq_item_mens_w,
				ie_tipo_item_w,
				vl_item_w,
				dt_contratacao_w,
				nr_seq_contrato_w,
				dt_liquidacao_titulo_w,
				nr_titulo_w,
				nr_seq_segurado_preco_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				nr_seq_repasse_w	:= null;
				nr_seq_regra_repasse_w	:= null;	

				/* Esta contagem precisa ser realizada para quando sao geradas comissoes para os canais de vendas superiores, ou seja, 
				     mesmo que ja tenha sido comissionado o beneficiario X para o canal de vendas inferior, este mesmo beneficiario com a mesma parcela
				     precisara ser comissionado novamente para o canal de vendas superior  - por isso a restricao pelo canal de vendas. */
				select	count(1)
				into STRICT	qt_reg_mens_w
				from	pls_repasse_mens	a,
					pls_repasse_vend	b
				where	a.nr_seq_repasse	= b.nr_sequencia
				and	a.nr_seq_mens_seg	= nr_seq_mensalidade_seg_w				
				and	b.nr_sequencia		<> nr_seq_repasse_p
				and	coalesce(b.ie_status,'X')	<> 'C'
				and	b.nr_seq_vendedor 	= nr_seq_vendedor_repasse_w;
				
				select	count(1)
				into STRICT	qt_mudanca_vendedor_w
				from	pls_repasse_mens	a,
					pls_segurado_historico	b
				where	a.nr_seq_segurado       = b.nr_seq_segurado
				and	a.nr_seq_mens_seg	= nr_seq_mensalidade_seg_w
				and	b.ie_tipo_historico	= 25;
				
				if (qt_reg_mens_w = 0) and (qt_mudanca_vendedor_w > 0) then
					
					/* Esta contagem precisa ser realizada para que caso um canal de vendas encerre o contrato com a operadora e seja necessario alterar o canal de vendas do beneficiario para 
					     um outro que venha a assumir todas as vendas do canal que terminou o contrato, caso ja tenha sido gerado o repasse para o canal X (cujo contrato fora encerrado), e o canal 
					     de de vendas do beneficiario tenha sido alterado para Y (que iria assumir as vendas do X), ao gerar o repasse para o canal Y, do mesmo mes que o gerado para o X, 
					     tal beneficiario nao podera mais ser gerado porque ja foi gerado no canal X. */
					select	count(1)
					into STRICT	qt_reg_mens_w
					from	pls_repasse_mens	a,
						pls_repasse_vend	b
					where	a.nr_seq_repasse	= b.nr_sequencia
					and	a.nr_seq_mens_seg	= nr_seq_mensalidade_seg_w
					and	b.nr_sequencia		<> nr_seq_repasse_p
					and	coalesce(b.ie_status,'X')	<> 'C'
					and	b.nr_seq_vendedor 	<> nr_seq_vendedor_venda_w;
				
					if (qt_reg_mens_w > 0) then
						/* Se for encontrado algum caso em que a comissao para o beneficiario X ja foi aplicada no lote de repasse de outro canal de vendas, sera necessario verificar se este canal de vendas (canal de vendas A) participa 
						     da mesma equipe do canal de vendas atual (canal de vendas B). Se o canal de vendas A nao for da mesma equipe que o canal de vendas B o sistema deve permitir gerar o comissionamento do beneficiario X mesmo   
						     que ele ja tenha sido comissionado no lote de reajuste de outro canal de vendas. */
						
						ie_outra_equipe_w := 'S';
						
						open C05;
						loop
						fetch C05 into
							nr_seq_canal_equipe_w;
						EXIT WHEN NOT FOUND; /* apply on C05 */
							begin							
							if (ie_outra_equipe_w = 'S') then						
								select	max(nr_seq_equipe)
								into STRICT	nr_seq_outra_equipe_w
								from	pls_equipe_vend_vinculo
								where	nr_seq_vendedor = nr_seq_canal_equipe_w
								and	nr_seq_equipe <> nr_seq_equipe_p;
								
								if (coalesce(nr_seq_outra_equipe_w,0) = 0) then
									ie_outra_equipe_w := 'N';
								end if;
							end if;							
							end;
						end loop;
						close C05;
						
						if (ie_outra_equipe_w = 'S') then
							qt_reg_mens_w := 0;
						end if;
					end if;
				end if;
				
				if (qt_reg_mens_w = 0)  then			
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_repasse_w
					from	pls_repasse_mens	a,
						pls_repasse_vend	b
					where	a.nr_seq_repasse	= b.nr_sequencia
					and	a.nr_seq_mens_seg	= nr_seq_mensalidade_seg_w
					and	b.nr_sequencia		= nr_seq_repasse_p
					and	coalesce(b.ie_status,'X') <> 'C';
				
					if (coalesce(nr_seq_repasse_w,0) = 0) then
						select	nextval('pls_repasse_mens_seq')
						into STRICT	nr_seq_repasse_w
						;	

						insert	into	pls_repasse_mens(	nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_vendedor,
								nr_seq_repasse,
								nr_seq_mens_seg,
								vl_repasse,
								vl_origem,
								ie_status,
								pr_comissao,
								ie_acao_contrato,
								nr_seq_segurado,
								nr_seq_plano,
								nr_seq_plano_sca,
								nr_parcela_benef,
								ie_comissao_repasse,
								nr_seq_vendedor_resp)
							values (	nr_seq_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_vendedor_repasse_w,
								nr_seq_repasse_p,
								nr_seq_mensalidade_seg_w,
								0,
								0,
								'A',
								0,
								ie_acao_contrato_w,
								nr_seq_segurado_w,
								nr_seq_plano_w,
								null,
								nr_parcela_w,
								'S',
								nr_seq_vendedor_venda_w);
						
						/*Atualizar os campos na tabela*/

						CALL pls_atual_campos_repasse_mens(nr_seq_repasse_w,nm_usuario_p);
					end if;
				end if;
				
				open C04;
				loop
				fetch C04 into
					nr_seq_regra_repasse_w,
					tx_repasse_w,
					vl_repasse_w,
					ie_vl_integral_1_parcela_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
				end loop;
				close C04;

				if	(ie_vl_integral_1_parcela_w = 'S' AND nr_parcela_w = 1) then
					if (ie_tipo_item_w in ('1','12')) then
						select	coalesce(vl_preco_atual,0) - coalesce(vl_desconto,0),
							coalesce(vl_preco_nao_subsid_desc,0)
						into STRICT	vl_preco_atual_w,
							vl_preco_nao_subsid_desc_w
						from	pls_segurado_preco
						where	nr_sequencia = nr_seq_segurado_preco_w;
						
						if (ie_tipo_item_w = '1') then
							for r_c06_w in c06(nr_seq_item_mens_w) loop
								begin
								if (pls_mens_itens_sca_pck.obter_tipo_lancamento_mens(r_c06_w.ie_lancamento_mensalidade, r_c06_w.ie_embutido_produto, r_c06_w.ie_lancamento_mens_plano) = 'C') then
									select	coalesce(vl_preco_atual,0)
									into STRICT	vl_preco_atual_sca_w
									from	pls_segurado_preco_origem
									where	nr_sequencia = r_c06_w.nr_seq_segurado_preco;
									
									vl_preco_atual_w := vl_preco_atual_sca_w + vl_preco_atual_w;
								end if;
								end;
							end loop;
							
							vl_item_w := vl_preco_atual_w;
						elsif (ie_tipo_item_w = '12') then
							vl_item_w := vl_preco_nao_subsid_desc_w;
						end if;
					elsif (ie_tipo_item_w = '15') then
						select	coalesce(sum(b.vl_preco_atual),0)
						into STRICT	vl_item_w
						from	pls_mensalidade_sca a,
							pls_segurado_preco_origem b
						where	b.nr_sequencia = a.nr_seq_segurado_preco
						and	a.nr_seq_item_mens = nr_seq_item_mens_w;
					end if;
				end if;
				
				if (coalesce(nr_seq_regra_repasse_w,0) <> 0) then
					if (ie_gerar_juro_mult_tit_w = 'S') then
						vl_juros_multa_w := pls_obter_vl_juros_mult_titulo(nr_titulo_w);
					end if;	
				
					vl_comissao_venda_w	:= coalesce(((tx_repasse_w * coalesce(vl_item_w,0)) / 100),0) + coalesce(vl_repasse_w,0);
					vl_origem_w		:= vl_comissao_venda_w;
					
					if (vl_juros_multa_w > 0) then
						vl_comissao_venda_w := 0;
					end if;
					
					select	count(1)
					into STRICT	qt_repasse_gerado_w
					from	pls_repasse_mens a,
						pls_repasse_vend b
					where	a.nr_seq_repasse	= b.nr_sequencia
					and	a.nr_seq_mens_seg	= nr_seq_mensalidade_seg_w
					and	b.ie_tipo_repasse	= 'N'
					and	coalesce(b.ie_status,'X')	<> 'C'
					and	b.nr_seq_vendedor	= nr_seq_vendedor_repasse_w; 	
					
					if (qt_repasse_gerado_w = 0) then							
						select	count(1)
						into STRICT	qt_repasse_gerado_w
						from	pls_repasse_mens a,
							pls_repasse_vend b
						where	a.nr_seq_repasse	= b.nr_sequencia
						and	a.nr_seq_mens_seg	= nr_seq_mensalidade_seg_w
						and	b.ie_tipo_repasse	= 'N'
						and	coalesce(b.ie_status,'X')	<> 'C'
						and	b.nr_seq_vendedor 	<> nr_seq_vendedor_venda_w;
					end if;
					
					/* Obs: a variavel vl_comissao_venda_w nao pode ser restringida para serem gerados somente os itens cujo valor e maior que zero porque existe os casos de 
					     itens de bonificacao em que os valores sao negativos e mesmo assim devem ser apresentados no comissionamento. */
					if (vl_comissao_venda_w <> 0 or vl_origem_w <> 0) and (qt_repasse_gerado_w = 0) and (nr_seq_repasse_w IS NOT NULL AND nr_seq_repasse_w::text <> '') then
						insert	into	pls_repasse_mens_item(	nr_sequencia, nr_seq_repasse, ie_tipo_item,
								dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
								pr_repasse, vl_repasse, vl_origem, nr_seq_mensalidade_seg_item,
								nr_seq_plano_sca, vl_item, ie_sca_embutido, nr_seq_regra_equipe_sup)
							values (	nextval('pls_repasse_mens_item_seq'), nr_seq_repasse_w, ie_tipo_item_w,
								clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
								tx_repasse_w, vl_comissao_venda_w, vl_origem_w, nr_seq_item_mens_w,
								null, vl_item_w, 'N', nr_seq_regra_repasse_w);
					end if;
				end if;
				end;
			end loop;
			close C03;
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_comissao_repasse ( nr_seq_repasse_p bigint, nr_seq_equipe_p bigint, nm_usuario_p text) FROM PUBLIC;

