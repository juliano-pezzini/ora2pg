-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobr_deb_caixa_150_v04 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

-- OS 410127 
-- Layout Padrão Febraban 240 posições V04 
-- AGOSTO/1998 
 
ds_conteudo_w		varchar(150);
qt_reg_arquivo_w	bigint := 0;

/* Header - A - Trailler - Z*/
 
dt_geracao_arquivo_w	varchar(8);
ds_banco_w		varchar(20);
cd_banco_w		varchar(3);
nm_empresa_w		varchar(20);
cd_convenio_banco_w	varchar(20);
vl_total_w		varchar(17);
vl_soma_w		double precision := 0;

/* Registros */
 
ie_ident_cliente_w	varchar(25);
ie_ident_cliente_2_w	varchar(25);
cd_agencia_bancaria_w	varchar(4);
nr_conta_w		varchar(8);
ie_digito_w		varchar(3);
ds_ocorrencia_1_w	varchar(40);
ds_ocorrencia_2_w	varchar(40);
ds_ocorencia_w		varchar(60);
dt_vencimento_w		varchar(8);
vl_debito_w		varchar(15);
cd_moeda_w		varchar(2);
vl_cobranca_w		double precision := 0;
nr_titulo_w		varchar(60);
nr_seq_pagador_w	bigint;

/* Bracos - Zeros */
 
ds_brancos_52_w		varchar(52);
ds_brancos_25_w		varchar(97);
ds_brancos_20_w		varchar(20);
ds_brancos_109_w	varchar(109);

C01 CURSOR FOR 
	SELECT	rpad(substr(pls_obter_dados_segurado(pls_obter_segurado_pagador(e.nr_seq_pagador),'C'),1,25),25,' ') ie_ident_cliente, 
		lpad(coalesce(pls_obter_dados_pagador_fin(e.nr_seq_pagador,'A'),b.cd_agencia_bancaria),4,'0') cd_agencia_bancaria, 
		rpad(coalesce(pls_obter_dados_pagador_fin(e.nr_seq_pagador,'C'),b.nr_conta),8,' ') nr_conta, 
		rpad(substr(coalesce(coalesce(pls_obter_dados_pagador_fin(e.nr_seq_pagador,'DC'),b.ie_digito_conta),'  '),1,2),3,' ') ie_digito, 
		rpad(' ',40,' ') ds_ocorrencia_1, 
		rpad(' ',40,' ') ds_ocorrencia_2, 
		rpad(' ',60,' ') ds_ocorencia, 
		rpad(substr(to_char(d.dt_pagamento_previsto,'YYYYMMDD'),1,8),8,' ') dt_vencimento, 
		lpad(replace(to_char(b.vl_cobranca, 'fm0000000000000.00'), '.', ''),15,'0') vl_debito, 
		replace(to_char(b.vl_cobranca, 'fm0000000000000.00'), '.', '') vl_cobranca, 
		'03' cd_moeda, 
		rpad(d.nr_titulo,60,' ') nr_titulo_w, 
		e.nr_seq_pagador 
	FROM banco_estabelecimento c, titulo_receber_cobr b, cobranca_escritural a, titulo_receber d
LEFT OUTER JOIN pls_mensalidade e ON (d.nr_seq_mensalidade = e.nr_sequencia)
WHERE a.nr_seq_conta_banco	= c.nr_sequencia and b.nr_seq_cobranca	= a.nr_sequencia and b.nr_titulo		= d.nr_titulo  and a.nr_sequencia		= nr_seq_cobr_escrit_p;


BEGIN 
delete from w_envio_banco where nm_usuario = nm_usuario_p;
 
select	lpad(' ',52,' '), 
	lpad(' ',25,' '), 
	lpad(' ',20,' '), 
	lpad(' ',109,' ') 
into STRICT	ds_brancos_52_w, 
	ds_brancos_25_w, 
	ds_brancos_20_w, 
	ds_brancos_109_w
;
 
qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;
 
/* Header A */
 
select	to_char(clock_timestamp(),'YYYYMMDD') dt_geracao_arquivo, 
	rpad(substr(upper(elimina_acentuacao(obter_nome_banco(c.cd_banco))),1,20),20,' ') ds_banco, 
	lpad(c.cd_banco,3,'0') cd_banco, 
	rpad(upper(substr(elimina_acentuacao(obter_razao_social(b.cd_cgc)),1,20)),20,' ') nm_empresa, 
	rpad(coalesce(c.cd_conv_banco_deb,c.cd_convenio_banco),20,' ') cd_convenio_banco 
into STRICT	dt_geracao_arquivo_w, 
	ds_banco_w, 
	cd_banco_w, 
	nm_empresa_w, 
	cd_convenio_banco_w 
FROM banco_estabelecimento c, estabelecimento b, cobranca_escritural a
LEFT OUTER JOIN banco_carteira d ON (a.nr_seq_carteira_cobr = d.nr_sequencia)
WHERE a.cd_estabelecimento	= b.cd_estabelecimento and a.nr_seq_conta_banco	= c.nr_sequencia  and a.nr_sequencia		= nr_seq_cobr_escrit_p;
 
ds_conteudo_w	:=	'A1' || cd_convenio_banco_w || nm_empresa_w || cd_banco_w || ds_banco_w || dt_geracao_arquivo_w || 
			lpad(qt_reg_arquivo_w,6,'0') || '04' || 'DEB/CRED AUTOMAT' || ds_brancos_52_w;
			 
insert into w_envio_banco(	nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_estabelecimento, 
		ds_conteudo, 
		nr_seq_apres) 
values (	nextval('w_envio_banco_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_estabelecimento_p, 
		ds_conteudo_w, 
		qt_reg_arquivo_w);
		 
open C01;
loop 
fetch C01 into	 
	ie_ident_cliente_w, 
	cd_agencia_bancaria_w, 
	nr_conta_w, 
	ie_digito_w, 
	ds_ocorrencia_1_w, 
	ds_ocorrencia_2_w, 
	ds_ocorencia_w, 
	dt_vencimento_w, 
	vl_debito_w, 
	vl_cobranca_w, 
	cd_moeda_w, 
	nr_titulo_w, 
	nr_seq_pagador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	vl_soma_w	:= vl_soma_w + vl_cobranca_w;
	 
	/* Caso o pagador não tenha carteira, buscar a carteira do titular */
 
	if (coalesce(ie_ident_cliente_w,'0') = '0') then		 
		select	substr(coalesce(max(b.cd_usuario_plano),'0'),1,25) 
		into STRICT	ie_ident_cliente_w 
		from	pls_segurado_carteira	b, 
			pls_segurado		a 
		where	a.nr_sequencia	 = b.nr_seq_segurado 
		and	coalesce(a.nr_seq_titular::text, '') = '' 
		and	a.nr_seq_pagador = nr_seq_pagador_w;
	end if;
	 
	/*qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1; 
	 
	-- Registro C 
	ds_conteudo_w	:=	'C' || ie_ident_cliente_w || cd_agencia_bancaria_w || rpad(' ',3,' ') || nr_conta_w || ie_digito_w || 
				ds_ocorrencia_1_w || ds_ocorrencia_2_w || ds_brancos_25_w || '2'; 
				 
	insert into w_envio_banco 
		(	nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_estabelecimento, 
			ds_conteudo, 
			nr_seq_apres) 
	values	(	w_envio_banco_seq.nextval, 
			sysdate, 
			nm_usuario_p, 
			sysdate, 
			nm_usuario_p, 
			cd_estabelecimento_p, 
			ds_conteudo_w, 
			qt_reg_arquivo_w); 
			 
	qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1; 
	 
	-- Registro D 
	ds_conteudo_w	:=	'D' || ie_ident_cliente_w || cd_agencia_bancaria_w || rpad(' ',3,' ') || nr_conta_w || ie_digito_w || 
				ie_ident_cliente_w || ds_ocorencia_w || ds_brancos_20_w || '0'; 
				 
	insert into w_envio_banco 
		(	nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_estabelecimento, 
			ds_conteudo, 
			nr_seq_apres) 
	values	(	w_envio_banco_seq.nextval, 
			sysdate, 
			nm_usuario_p, 
			sysdate, 
			nm_usuario_p, 
			cd_estabelecimento_p, 
			ds_conteudo_w, 
			qt_reg_arquivo_w);*/
 
			 
	qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;
	 
	-- Registro E 
	ds_conteudo_w	:=	'E' || ie_ident_cliente_w || cd_agencia_bancaria_w || rpad(' ',3,' ') || nr_conta_w || ie_digito_w || 
				dt_vencimento_w || vl_debito_w || cd_moeda_w || nr_titulo_w || ds_brancos_20_w || '0';
				 
	insert into w_envio_banco(	nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_estabelecimento, 
			ds_conteudo, 
			nr_seq_apres) 
	values (	nextval('w_envio_banco_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_estabelecimento_p, 
			ds_conteudo_w, 
			qt_reg_arquivo_w);
			 
			 
	 
	end;
end loop;
close C01;
 
/* Trailler Z */
 
vl_total_w		:= to_char(vl_soma_w);
qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;
 
ds_conteudo_w	:=	'Z' || lpad(qt_reg_arquivo_w,6,'0') || lpad(vl_total_w,17,'0') || lpad(vl_total_w,17,'0') || ds_brancos_109_w;
 
insert into w_envio_banco(	nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_estabelecimento, 
		ds_conteudo, 
		nr_seq_apres) 
values (	nextval('w_envio_banco_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_estabelecimento_p, 
		ds_conteudo_w, 
		qt_reg_arquivo_w);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobr_deb_caixa_150_v04 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

