-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atend_categ_aftpost_com_eup_js ( ds_lista_agenda_cons_p text, ds_lista_agenda_serv_p text, cd_setor_usuario_p bigint, dt_alta_p timestamp, ie_gerar_prescr_ag_lista_p text, ie_novo_atend_lista_ag_p text, ie_gerar_prescr_agenda_p text, ds_lista_agenda_pac_p text, ds_lista_agenda_exame_p text, cd_estabelecimento_p bigint, ie_tipo_convenio_p bigint, ie_tipo_atend_tiss_p text, cd_empresa_p bigint, nr_seq_checkup_p bigint, ie_gerar_prescr_checkup_p text, dt_entrada_p timestamp, nr_seq_agenda_p bigint, cd_tipo_agenda_p bigint, cd_convenio_old_p bigint, ie_carater_inter_sus_p text, ie_clinica_p bigint, ie_tipo_atendimento_p bigint, ie_novo_registro_p text, ie_edicao_registro_p text, cd_pessoa_fisica_p text, nr_atendimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_convenio_p text, nm_usuario_p text, ds_msg_internacao_p INOUT text, ds_msg_cons_pf_p INOUT text, ds_msg_cons_pf_exige_p INOUT text, ds_campos_obrig_p INOUT text, nr_seq_regra_compl_pf_p INOUT bigint, ds_msg_confir_age_cons_p INOUT text, ie_inf_guia_plano_p INOUT text, ds_msg_consist_compl_p INOUT text, ds_msg_cpf_p INOUT text, ie_atualiza_unidade_p INOUT text, nr_prescricao_p INOUT bigint, ds_msg_empresa_conv_p INOUT text, ie_atualiza_atend_pac_p INOUT text, ie_limpar_variaveis_p INOUT text, nr_prescr_age_consult_p INOUT bigint) AS $body$
DECLARE

 
 
C01 CURSOR FOR 
	SELECT	ds_log 
	FROM 	log_regra_compl_pf 
	WHERE	UPPER(nm_usuario) = UPPER(nm_usuario_p);

ds_msg_conv_pessoa_w		varchar(400);
ie_bloqueia_w			varchar(1);
ds_campos_w			varchar(255);
nr_seq_regra_compl_pf_w		bigint;
ie_atual_conv_age_servicos_w	varchar(1);
ie_regra_envio_pac_classif_w	varchar(3);
ie_atual_conv_age_cons_w	varchar(1);
qt_agenda_consulta_w		bigint;
ie_permite_selec_guia_w		varchar(1);
nr_seq_segurado_w		bigint;
ie_consiste_compl_pf_w		varchar(1);
ie_atrib_obrig_w		varchar(1);
ds_msg_consist_compl_w		varchar(1000);
ie_obriga_cpf_w			varchar(1);
ie_exige_cpf_paciente_w		varchar(1);
ie_gerar_passagem_agenda_w	varchar(1);
ie_utiliza_unid_age_serv_w	varchar(1);
ie_lanc_automatico_w		varchar(1);
ie_gera_autorizacao_w		varchar(1);
nr_prescricao_w			bigint;
ie_atua_tipo_conv_atend_w	varchar(1);
ie_tipo_convenio_w		smallint;
ie_executa_agenda_w		varchar(1);
ie_atual_conv_agenda_pac_w	varchar(1);
ie_data_prescricao_w		varchar(3);
ie_setor_prescricao_w		varchar(60);
ie_gerar_prescr_ageserv_w	varchar(1);
ds_log_w			varchar(2000);

BEGIN
/* 
 ESTA PROCEDURE É RESPONSÁVEL PELOS TRATAMENTOS REALIZADOS NO EVENTO AFTERPOST,, DA FUNÇÃO EUP, DA TABELA ATEND_CATEGORIA_CONVENIO, COMUNS PARA PASTA COMPLETO E PASTA EXAMES 
*/
 
IF (coalesce(cd_convenio_p,0) = 0) THEN 
	GOTO final;
END IF;
 
ie_data_prescricao_w := Obter_param_Usuario(916, 45, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_data_prescricao_w);
ie_setor_prescricao_w := Obter_param_Usuario(916, 47, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_setor_prescricao_w);
ie_atual_conv_age_cons_w := Obter_param_Usuario(916, 256, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atual_conv_age_cons_w);
ie_permite_selec_guia_w := Obter_param_Usuario(916, 309, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_selec_guia_w);
ie_atual_conv_agenda_pac_w := Obter_param_Usuario(916, 353, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atual_conv_agenda_pac_w);
ie_atual_conv_age_servicos_w := Obter_param_Usuario(916, 378, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atual_conv_age_servicos_w);
ie_gerar_passagem_agenda_w := Obter_param_Usuario(916, 441, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_passagem_agenda_w);
ie_gera_autorizacao_w := Obter_param_Usuario(916, 478, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gera_autorizacao_w);
ie_obriga_cpf_w := Obter_param_Usuario(916, 665, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_cpf_w);
ie_utiliza_unid_age_serv_w := Obter_param_Usuario(916, 754, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_unid_age_serv_w);
ie_consiste_compl_pf_w := Obter_param_Usuario(916, 912, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_compl_pf_w);
ie_regra_envio_pac_classif_w := Obter_param_Usuario(916, 957, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_regra_envio_pac_classif_w);
ie_lanc_automatico_w := Obter_param_Usuario(916, 969, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_lanc_automatico_w);
 
ie_executa_agenda_w := Obter_param_Usuario(39, 26, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_executa_agenda_w);
 
 
ds_msg_internacao_p := Verifica_dias_internacao_conv(nr_atendimento_p, cd_pessoa_fisica_p, cd_convenio_p, cd_plano_convenio_p, cd_categoria_p, nm_usuario_p, ds_msg_internacao_p);
 
 
IF (ie_novo_registro_p = 'S') OR (ie_edicao_registro_p = 'S') THEN 
 
	SELECT * FROM consiste_regra_conv_pessoa(cd_convenio_p, ie_tipo_atendimento_p, ie_clinica_p, ie_carater_inter_sus_p, cd_pessoa_fisica_p, ds_msg_conv_pessoa_w, ie_bloqueia_w, ds_campos_w, nr_seq_regra_compl_pf_w) INTO STRICT ds_msg_conv_pessoa_w, ie_bloqueia_w, ds_campos_w, nr_seq_regra_compl_pf_w;
 
	IF (ds_msg_conv_pessoa_w IS NOT NULL AND ds_msg_conv_pessoa_w::text <> '') AND (coalesce(ie_bloqueia_w,'N') <> 'S') THEN 
		ds_msg_cons_pf_p := SUBSTR(obter_texto_dic_objeto(297654, wheb_usuario_pck.get_nr_seq_idioma, 'ITEM='||ds_msg_conv_pessoa_w),1,255);
	ELSIF (coalesce(ie_bloqueia_w,'N') = 'S') THEN 
		IF (coalesce(ds_msg_conv_pessoa_w::text, '') = '') THEN 
			OPEN C01;
			LOOP 
			FETCH C01 INTO 
				ds_log_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				BEGIN 
				IF (ds_msg_cons_pf_exige_p IS NOT NULL AND ds_msg_cons_pf_exige_p::text <> '') THEN 
					ds_msg_cons_pf_exige_p	:= ds_msg_cons_pf_exige_p || ' ' || ds_log_w;
				ELSE 
					ds_msg_cons_pf_exige_p := ds_log_w;
				END IF;
 
				END;
			END LOOP;
			CLOSE C01;
		ELSE 
			ds_msg_cons_pf_exige_p := SUBSTR(obter_texto_dic_objeto(297655, wheb_usuario_pck.get_nr_seq_idioma, 'ITEM='||ds_msg_conv_pessoa_w),1,255);
		END IF;
		ds_campos_obrig_p := ds_campos_w;
		nr_seq_regra_compl_pf_p := nr_seq_regra_compl_pf_w;
 
	END IF;
 
	IF (ie_permite_selec_guia_w = 'S') THEN 
 
		SELECT	coalesce(MAX(b.nr_sequencia),0) 
		INTO STRICT	nr_seq_segurado_w 
        FROM  pls_segurado b, 
            pessoa_fisica a 
        WHERE  a.cd_pessoa_fisica = b.cd_pessoa_fisica 
        AND   (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') 
        AND   coalesce(b.dt_rescisao::text, '') = '' 
        AND   a.cd_pessoa_fisica = cd_pessoa_fisica_p;
		IF (nr_seq_segurado_w > 0) THEN 
			ie_inf_guia_plano_p := 'S';
		END IF;
	END IF;
END IF;
 
IF (ie_consiste_compl_pf_w = 'S') THEN 
	SELECT * FROM eup_consis_atrib_cad_compl_pf(cd_pessoa_fisica_p, ie_atrib_obrig_w, ds_msg_consist_compl_w) INTO STRICT ie_atrib_obrig_w, ds_msg_consist_compl_w;
	IF (ds_msg_consist_compl_w IS NOT NULL AND ds_msg_consist_compl_w::text <> '') AND (coalesce(ie_atrib_obrig_w,'N') <> 'N') THEN 
		ds_msg_consist_compl_p := ds_msg_consist_compl_w;
	END IF;
END IF;
 
IF (ie_atual_conv_age_servicos_w = 'S') THEN 
	CALL atualiza_convenio_agenda_serv(nr_atendimento_p,	nm_usuario_p);
END IF;
 
IF (ie_novo_registro_p = 'S') THEN 
 
	IF (ie_regra_envio_pac_classif_w = 'CV') THEN 
		CALL gerar_evento_classif_atend(nr_atendimento_p, cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_p);
	END IF;
END IF;
 
IF (ie_atual_conv_age_cons_w = 'S') OR 
	((ie_atual_conv_age_cons_w = 'A') AND (coalesce(cd_convenio_old_p,0) <> 0) AND (coalesce(cd_convenio_old_p,0) <> coalesce(cd_convenio_p,0))) THEN 
 
	SELECT	COUNT(*) 
	INTO STRICT	qt_agenda_consulta_w 
	FROM	agenda_consulta 
	WHERE	nr_atendimento = nr_atendimento_p;
 
	IF (qt_agenda_consulta_w > 0) THEN 
		ds_msg_confir_age_cons_p := SUBSTR(obter_texto_tasy(91150, wheb_usuario_pck.get_nr_seq_idioma),1,255);
	END IF;
END IF;
 
IF (ie_obriga_cpf_w = 'N') THEN 
 
	SELECT	coalesce(MAX(ie_exige_cpf_paciente),'N') 
	INTO STRICT	ie_exige_cpf_paciente_w 
    FROM  	convenio_estabelecimento 
    WHERE 	cd_convenio = cd_convenio_p 
	AND	cd_estabelecimento = cd_estabelecimento_p;
 
	IF (ie_exige_cpf_paciente_w = 'S') THEN 
		ds_msg_cpf_p := verifica_cpf_pf_atendimento(nr_atendimento_p, cd_convenio_p, ie_tipo_atendimento_p, ds_msg_cpf_p);
	END IF;
END IF;
 
IF (ie_gerar_passagem_agenda_w = 'S') AND (coalesce(cd_tipo_agenda_p,0) > 0) THEN 
	ie_atualiza_unidade_p := eup_gerar_pass_conv_agenda_js(ie_lanc_automatico_w, dt_entrada_p, nr_atendimento_p, ie_utiliza_unid_age_serv_w, cd_tipo_agenda_p, nr_seq_agenda_p, nm_usuario_p, ie_atualiza_unidade_p);
END IF;
 
IF (ie_gera_autorizacao_w = 'S') THEN 
	CALL gerar_autor_regra(nr_atendimento_p, NULL, NULL, NULL, NULL, NULL, 'AT', nm_usuario_p, NULL, NULL, NULL, NULL, NULL, NULL);
END IF;
 
IF (ie_gerar_prescr_checkup_p = 'S') AND (coalesce(nr_seq_checkup_p,0) > 0) THEN 
	nr_prescricao_w := gerar_prescr_checkup(nr_seq_checkup_p, nr_atendimento_p, nm_usuario_p, nr_prescricao_w);
	IF (coalesce(nr_prescricao_w,0) > 0) THEN 
		nr_prescricao_p := nr_prescricao_w;
		CALL gerar_lancamento_automatico(nr_atendimento_p, NULL, 26, nm_usuario_p, '', NULL, NULL, NULL, NULL, NULL);
	END IF;
END IF;
 
ds_msg_empresa_conv_p := obter_msg_conv_copartipacao(cd_estabelecimento_p, cd_empresa_p, cd_convenio_p, cd_categoria_p, cd_plano_convenio_p, 916, ie_tipo_atendimento_p, ie_tipo_atend_tiss_p);
 
 
SELECT	coalesce(MAX(ie_atualizar_tipo_conv_atend),'S') 
INTO STRICT	ie_atua_tipo_conv_atend_w 
FROM	parametro_faturamento 
WHERE	cd_Estabelecimento = cd_estabelecimento_p;
 
IF (ie_atua_tipo_conv_atend_w = 'S') AND (coalesce(cd_convenio_p,0) > 0) THEN 
 
	SELECT	coalesce(MAX(ie_tipo_convenio),0) 
	INTO STRICT	ie_tipo_convenio_w 
    FROM  	convenio 
    WHERE 	cd_convenio = cd_convenio_p;
 
	IF (ie_tipo_convenio_w > 0) AND (ie_tipo_convenio_w <> ie_tipo_convenio_p) THEN 
		UPDATE	atendimento_paciente 
		SET 	ie_tipo_convenio = ie_tipo_convenio_w 
		WHERE	nr_atendimento = nr_atendimento_p;
		ie_atualiza_atend_pac_p := 'S';
	END IF;
END IF;
 
IF (coalesce(cd_convenio_p,0) > 0) AND (coalesce(nr_atendimento_p,0) > 0) THEN 
	CALL atualiza_acomp_atend(nr_atendimento_p, cd_convenio_p);
END IF;
 
IF (coalesce(cd_tipo_agenda_p,0) IN (1,2)) THEN 
CALL eup_atualizar_agenda_pac_js(nr_seq_agenda_p, ds_lista_agenda_exame_p,	ie_atual_conv_agenda_pac_w, nr_atendimento_p, cd_convenio_p, cd_categoria_p, cd_plano_convenio_p, cd_tipo_agenda_p, ie_executa_agenda_w, cd_estabelecimento_p, nm_usuario_p);
END IF;
IF (ie_gerar_prescr_agenda_p = 'S') THEN 
	SELECT * FROM eup_atualiza_age_cons_js(ds_lista_agenda_cons_p, ds_lista_agenda_serv_p, cd_setor_usuario_p, ie_setor_prescricao_w, dt_alta_p, dt_entrada_p, ie_data_prescricao_w, ie_gerar_prescr_ag_lista_p, ie_novo_atend_lista_ag_p, cd_estabelecimento_p, cd_tipo_agenda_p, ie_novo_registro_p, ds_lista_agenda_exame_p, nr_atendimento_p, nr_seq_agenda_p, nm_usuario_p, ie_limpar_variaveis_p, nr_prescr_age_consult_p) INTO STRICT ie_limpar_variaveis_p, nr_prescr_age_consult_p;
END IF;
 
IF (coalesce(cd_tipo_agenda_p,0) = 5) AND (coalesce(nr_seq_agenda_p,0) > 0) THEN 
	ie_gerar_prescr_ageserv_w := obter_se_gerar_prescr_ageserv(nr_seq_agenda_p);
	IF (ie_gerar_prescr_ageserv_w = 'S') THEN 
		ie_limpar_variaveis_p := eup_gerar_prescr_agenda_js(ie_gerar_prescr_ag_lista_p, ds_lista_agenda_exame_p, ds_lista_agenda_cons_p, ds_lista_agenda_serv_p, cd_setor_usuario_p, ie_setor_prescricao_w, dt_entrada_p, dt_alta_p, ie_data_prescricao_w, ie_novo_atend_lista_ag_p, nr_seq_agenda_p, nr_atendimento_p, nm_usuario_p, ie_limpar_variaveis_p);
	END IF;
END IF;
 
 
<<final>> 
 
COMMIT;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atend_categ_aftpost_com_eup_js ( ds_lista_agenda_cons_p text, ds_lista_agenda_serv_p text, cd_setor_usuario_p bigint, dt_alta_p timestamp, ie_gerar_prescr_ag_lista_p text, ie_novo_atend_lista_ag_p text, ie_gerar_prescr_agenda_p text, ds_lista_agenda_pac_p text, ds_lista_agenda_exame_p text, cd_estabelecimento_p bigint, ie_tipo_convenio_p bigint, ie_tipo_atend_tiss_p text, cd_empresa_p bigint, nr_seq_checkup_p bigint, ie_gerar_prescr_checkup_p text, dt_entrada_p timestamp, nr_seq_agenda_p bigint, cd_tipo_agenda_p bigint, cd_convenio_old_p bigint, ie_carater_inter_sus_p text, ie_clinica_p bigint, ie_tipo_atendimento_p bigint, ie_novo_registro_p text, ie_edicao_registro_p text, cd_pessoa_fisica_p text, nr_atendimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_convenio_p text, nm_usuario_p text, ds_msg_internacao_p INOUT text, ds_msg_cons_pf_p INOUT text, ds_msg_cons_pf_exige_p INOUT text, ds_campos_obrig_p INOUT text, nr_seq_regra_compl_pf_p INOUT bigint, ds_msg_confir_age_cons_p INOUT text, ie_inf_guia_plano_p INOUT text, ds_msg_consist_compl_p INOUT text, ds_msg_cpf_p INOUT text, ie_atualiza_unidade_p INOUT text, nr_prescricao_p INOUT bigint, ds_msg_empresa_conv_p INOUT text, ie_atualiza_atend_pac_p INOUT text, ie_limpar_variaveis_p INOUT text, nr_prescr_age_consult_p INOUT bigint) FROM PUBLIC;

