-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_brasindice_preco ( cd_laboratorio_p text, cd_medicamento_p text, cd_apresentacao_p text, dt_inicio_vigencia_p timestamp, vl_preco_medicamento_p bigint, ie_tipo_preco_p text, ie_preco_port_p text, vl_preco_final_p bigint, ie_versao_atual_p text, ie_versao_origem_p text, pr_ipi_p bigint, ie_pis_cofins_p text, cd_tiss_p text, cd_ean_p text, ie_atualiza_pls_p text, nm_usuario_p text, ie_generico_p text, ie_solucao_p text, ie_restrito_p text, cd_estabelecimento_p bigint, ds_estabelecimentos_p text, ie_tipo_acao_p text, ie_oncologico_p text, cd_hierarquia_p text, cd_tuss_p bigint) AS $body$
DECLARE


nr_sequencia_w		bigint;
cd_tiss_brasindice_w	varchar(15);
cd_estabelecimento_w	smallint;
cd_hierarquia_w		brasindice_preco.cd_hierarquia%type;
ie_atualiza_dt_inc_w	varchar(5) := 'N';
ie_atualiza_dt_exc_w	varchar(5) := 'N';

C01 CURSOR FOR
	SELECT	cd_estabelecimento
	from	estabelecimento
	where	(((ie_tipo_acao_p = '1') and (obter_se_contido(cd_estabelecimento, elimina_aspas(ds_estabelecimentos_p)) = 'S')) or
		((ie_tipo_acao_p = '2') and (not obter_se_contido(cd_estabelecimento, elimina_aspas(ds_estabelecimentos_p)) = 'S')))
	order by	cd_estabelecimento;


BEGIN

if (ds_estabelecimentos_p IS NOT NULL AND ds_estabelecimentos_p::text <> '') then

	open C01;
	loop
	fetch C01 into
		cd_estabelecimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	nextval('brasindice_preco_seq')
		into STRICT	nr_sequencia_w
		;

		if (length(cd_hierarquia_p) > 10) then
			cd_hierarquia_w := '';
		else
			cd_hierarquia_w := cd_hierarquia_p;
		end if;

		insert into brasindice_preco(
			cd_laboratorio, cd_medicamento, cd_apresentacao,
			dt_inicio_vigencia, vl_preco_medicamento, ie_tipo_preco,
			dt_atualizacao, nm_usuario, ie_preco_port,
			vl_preco_final, ie_versao_atual, ie_versao_origem,
			pr_ipi, ie_pis_cofins, dt_liberacao,
			nm_usuario_liberacao, cd_tiss, cd_ean, nr_sequencia, ie_generico,
			ie_solucao, ie_restrito, cd_estabelecimento, ie_oncologico, cd_hierarquia, cd_tuss)
		values (
			cd_laboratorio_p, cd_medicamento_p, cd_apresentacao_p,
			to_date(to_char(dt_inicio_vigencia_p,'dd/mm/yyyy'),'dd/mm/yyyy'),
			vl_preco_medicamento_p, ie_tipo_preco_p,
			clock_timestamp(), nm_usuario_p, ie_preco_port_p,
			vl_preco_final_p ,ie_versao_atual_p, ie_versao_origem_p,
			pr_ipi_p, ie_pis_cofins_p, null,
			null, cd_tiss_p, cd_ean_p, nr_sequencia_w, ie_generico_p,
			ie_solucao_p, coalesce(ie_restrito_p,'N'), cd_estabelecimento_w, ie_oncologico_p, cd_hierarquia_w, cd_tuss_p);

		end;
	end loop;
	close C01;

else

	select	nextval('brasindice_preco_seq')
	into STRICT	nr_sequencia_w
	;

	if (length(cd_hierarquia_p) > 10) then
		cd_hierarquia_w := '';
	else
		cd_hierarquia_w := cd_hierarquia_p;
	end if;

	insert into brasindice_preco(
	cd_laboratorio, cd_medicamento, cd_apresentacao,
	dt_inicio_vigencia, vl_preco_medicamento, ie_tipo_preco,
	dt_atualizacao, nm_usuario, ie_preco_port,
	vl_preco_final, ie_versao_atual, ie_versao_origem,
	pr_ipi, ie_pis_cofins, dt_liberacao,
	nm_usuario_liberacao, cd_tiss, cd_ean, nr_sequencia, ie_generico,
	ie_solucao, ie_restrito, cd_estabelecimento, ie_oncologico,
	cd_hierarquia, cd_tuss)
	 values (
	cd_laboratorio_p, cd_medicamento_p, cd_apresentacao_p,
	to_date(to_char(dt_inicio_vigencia_p,'dd/mm/yyyy'),'dd/mm/yyyy'),
	vl_preco_medicamento_p, ie_tipo_preco_p,
	clock_timestamp(), nm_usuario_p, ie_preco_port_p,
	vl_preco_final_p ,ie_versao_atual_p, ie_versao_origem_p,
	pr_ipi_p, ie_pis_cofins_p, null,
	null, cd_tiss_p, cd_ean_p, nr_sequencia_w, ie_generico_p,
	ie_solucao_p, coalesce(ie_restrito_p,'N'), CASE WHEN coalesce(cd_estabelecimento_p,0)=0 THEN null  ELSE cd_estabelecimento_p END , ie_oncologico_p,
	cd_hierarquia_w, cd_tuss_p);

end if;

if (ie_atualiza_pls_p in ('S','SI','SE')) then -- Verificar se atualiza os dados do material na operadora
	if (ie_atualiza_pls_p in ('S','SI')) then
		ie_atualiza_dt_inc_w := 'S'; -- Atualizar a data de inclusão
	end if;

	if (ie_atualiza_pls_p in ('S','SE')) then
		ie_atualiza_dt_exc_w := 'S'; -- Atualizar a data de exclusão
	end if;

	update	pls_material
	set	dt_inclusao		= CASE WHEN  ie_atualiza_dt_inc_w='S' THEN  coalesce(dt_inicio_vigencia_p,clock_timestamp())  ELSE dt_inclusao END ,
		dt_exclusao		= CASE WHEN  ie_atualiza_dt_exc_w='S' THEN  null  ELSE dt_exclusao END ,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= 'BRASINDICE'
	where	cd_tiss_brasindice	= cd_tiss_p
	and	(dt_exclusao IS NOT NULL AND dt_exclusao::text <> '');
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_brasindice_preco ( cd_laboratorio_p text, cd_medicamento_p text, cd_apresentacao_p text, dt_inicio_vigencia_p timestamp, vl_preco_medicamento_p bigint, ie_tipo_preco_p text, ie_preco_port_p text, vl_preco_final_p bigint, ie_versao_atual_p text, ie_versao_origem_p text, pr_ipi_p bigint, ie_pis_cofins_p text, cd_tiss_p text, cd_ean_p text, ie_atualiza_pls_p text, nm_usuario_p text, ie_generico_p text, ie_solucao_p text, ie_restrito_p text, cd_estabelecimento_p bigint, ds_estabelecimentos_p text, ie_tipo_acao_p text, ie_oncologico_p text, cd_hierarquia_p text, cd_tuss_p bigint) FROM PUBLIC;

