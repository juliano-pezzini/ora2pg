-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_inserir_evento_dialise ( nr_seq_dialise_p bigint, nr_seq_dialise_perit_p bigint, lista_informacao_p text, nm_usuario_p text) AS $body$
DECLARE


lista_informacao_w		varchar(400);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
nr_sequencia_w			bigint;
nr_tipo_evento_w		bigint;
nr_seq_unid_dialise_w		bigint;
nr_seq_lista_eventos_w		varchar(2000);


BEGIN

lista_informacao_w	:= lista_informacao_p;

while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or
	ie_contador_w > 200 loop
	begin
	tam_lista_w		:= length(lista_informacao_w);
	ie_pos_virgula_w	:= position(',' in lista_informacao_w);

	if (ie_pos_virgula_w <> 0) then
		nr_tipo_evento_w	:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;

	if (nr_seq_dialise_p IS NOT NULL AND nr_seq_dialise_p::text <> '') then
		/* Pega a unidade de dialise */

		select	max(nr_seq_unid_dialise)
		into STRICT	nr_seq_unid_dialise_w
		from	hd_dialise
		where	nr_sequencia	= nr_seq_dialise_p;
	end if;

	select	nextval('hd_dialise_evento_seq')
	into STRICT	nr_sequencia_w
	;

	insert	into hd_dialise_evento(
					nr_sequencia,
					nr_seq_dialise,
					nr_seq_tipo_evento,
					dt_evento,	
					dt_atualizacao,
					dt_atualizacao_nrec,
					nm_usuario,
					nm_usuario_nrec,
					nr_seq_unid_dialise,
					nr_seq_dialise_peritonial
					)
				values (
					nr_sequencia_w,
					CASE WHEN nr_seq_dialise_p=0 THEN null  ELSE nr_seq_dialise_p END ,
					nr_tipo_evento_w,
					clock_timestamp(),
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p,
					nm_usuario_p,
					nr_seq_unid_dialise_w,
					CASE WHEN nr_seq_dialise_perit_p=0 THEN null  ELSE nr_seq_dialise_perit_p END
					);

	if (coalesce(nr_seq_lista_eventos_w::text, '') = '') then
		nr_seq_lista_eventos_w 	:= to_char(nr_sequencia_w);
	elsif (length(nr_seq_lista_eventos_w || ',' || to_char(nr_sequencia_w)) < 2000) then
		nr_seq_lista_eventos_w 	:= nr_seq_lista_eventos_w || ',' || to_char(nr_sequencia_w);
	end if;
	
	ie_contador_w	:= ie_contador_w + 1;
	end;
end loop;

CALL hd_gerar_assinatura(null, null, nr_seq_dialise_p, null, null, nr_seq_lista_eventos_w, null, null, null, 'NE', nm_usuario_p, 'N');

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_inserir_evento_dialise ( nr_seq_dialise_p bigint, nr_seq_dialise_perit_p bigint, lista_informacao_p text, nm_usuario_p text) FROM PUBLIC;

