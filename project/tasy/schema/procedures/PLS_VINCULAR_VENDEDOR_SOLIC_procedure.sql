-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_vincular_vendedor_solic ( nr_sequencia_p bigint, nr_seq_regra_p bigint, ie_opcao_p text, ie_alterar_status_p text, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/*	ie_opcao_p
	1 - Cliente
	2 - Solicitação de lead (Vinculação através do botão direito)
	3 - Solicitação de lead (Vinculação Manual)
	4 - Solicitação de lead (Vinculação por data de rescisão da pessoa vinculada )
	5 - Solicitação de lead( Alteração de canal de vendas através da pasta Consulta ) ** Neste ítem o nr_seq_regra_p equivale a sequencia do novo vendedor **
*/
nr_seq_vendedor_w		bigint;
ie_tipo_vendedor_w		varchar(2);
nr_seq_regra_dias_l_w		bigint;
nr_seq_regra_dias_p_w		bigint;
qt_dias_efetivacao_w		bigint;
nr_seq_classificacao_w		bigint;
nr_seq_solicitacao_w		bigint;
ie_tipo_contratacao_w		varchar(2);
qt_vidas_w			bigint;
dt_aprovacao_w			timestamp;
nr_seq_vendedores_w		bigint;
nr_seq_vendedor_criado_w	bigint;
nr_seq_vendedor_exclusao_w	bigint;
nr_seq_vendedor_vinculado_w	bigint;
ie_canal_principal_w		varchar(2);

C01 CURSOR FOR
	SELECT	max(nr_sequencia)
	from	pls_solicitacao_regra_vend
	where	ie_tipo_canal_venda	= ie_tipo_vendedor_w
	and	((coalesce(nr_seq_classificacao,nr_seq_classificacao_w)	= nr_seq_classificacao_w
	and	(nr_seq_classificacao IS NOT NULL AND nr_seq_classificacao::text <> ''))
	or	coalesce(nr_seq_classificacao::text, '') = '')
	and	((coalesce(ie_tipo_contratacao,ie_tipo_contratacao_w)	= ie_tipo_contratacao_w
	and	(ie_tipo_contratacao IS NOT NULL AND ie_tipo_contratacao::text <> ''))
	or	coalesce(ie_tipo_contratacao::text, '') = '')
	and (ie_aplicacao_regra	= 'L'
	or	ie_aplicacao_regra	= 'A')
	and	ie_situacao		= 'A'
	and	((qt_vidas_w between coalesce(qt_vidas,0) and coalesce(qt_vidas_final,qt_vidas_w) and (qt_vidas_w IS NOT NULL AND qt_vidas_w::text <> ''))
	or (coalesce(qt_vidas_w::text, '') = ''))
	order by ie_tipo_contratacao,coalesce(qt_vidas,0);

C02 CURSOR FOR
	SELECT	max(nr_sequencia)
	from	pls_solicitacao_regra_vend
	where	ie_tipo_canal_venda	= ie_tipo_vendedor_w
	and	((coalesce(nr_seq_classificacao,nr_seq_classificacao_w)	= nr_seq_classificacao_w
	and	(nr_seq_classificacao IS NOT NULL AND nr_seq_classificacao::text <> ''))
	or	coalesce(nr_seq_classificacao::text, '') = '')
	and	((coalesce(ie_tipo_contratacao,ie_tipo_contratacao_w)	= ie_tipo_contratacao_w
	and	(ie_tipo_contratacao IS NOT NULL AND ie_tipo_contratacao::text <> ''))
	or	coalesce(ie_tipo_contratacao::text, '') = '')
	and (ie_aplicacao_regra	= 'P'
	or	ie_aplicacao_regra	= 'A')
	and	ie_situacao		= 'A'
	and	((qt_vidas_w between coalesce(qt_vidas,0) and coalesce(qt_vidas_final,qt_vidas_w) and (qt_vidas_w IS NOT NULL AND qt_vidas_w::text <> ''))
	or (coalesce(qt_vidas_w::text, '') = ''))
	order by ie_tipo_contratacao,coalesce(qt_vidas,0);

C03 CURSOR FOR
	SELECT	nr_seq_vendedor_aux
	from	pls_regra_vendedor_aux
	where	nr_seq_vendedor = CASE WHEN ie_opcao_p=3 THEN  nr_seq_vendedor_criado_w  ELSE nr_seq_vendedor_w END
	and	nr_seq_vendedor_aux <> CASE WHEN ie_opcao_p=3 THEN  nr_seq_vendedor_criado_w  ELSE nr_seq_vendedor_w END;


BEGIN

if (ie_opcao_p  (1,2)) then
	select	nr_seq_vendedor
	into STRICT	nr_seq_vendedor_w
	from	pls_solicitacao_regra_aten
	where	nr_sequencia	= nr_seq_regra_p;

	select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN 'PJ'  ELSE 'PF' END
	into STRICT	ie_tipo_vendedor_w
	from	pls_vendedor
	where	nr_sequencia	= nr_seq_vendedor_w;
elsif (ie_opcao_p = 3) then
	begin
		select	CASE WHEN coalesce(a.cd_pessoa_fisica::text, '') = '' THEN 'PJ'  ELSE 'PF' END
		into STRICT	ie_tipo_vendedor_w
		from	pls_vendedor a,
				pls_solicitacao_vendedor b
		where	a.nr_sequencia	= nr_seq_vendedor_canal
		and		b.nr_sequencia	= nr_seq_regra_p;
	exception
	when others then
		ie_tipo_vendedor_w := '';
	end;

	select	nr_seq_vendedor_canal
	into STRICT	nr_seq_vendedor_criado_w
	from	pls_solicitacao_vendedor
	where	nr_sequencia = nr_seq_regra_p;
elsif (ie_opcao_p in (4,5)) then
	select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN 'PJ'  ELSE 'PF' END ,
		nr_sequencia
	into STRICT	ie_tipo_vendedor_w,
		nr_seq_vendedor_w
	from	pls_vendedor
	where	nr_sequencia	= nr_seq_regra_p;
end if;

/*aaschlote 27/01/2011 OS - 286163*/

if (ie_opcao_p = 1) then
	select	nr_seq_classificacao,
		nr_seq_solicitacao
	into STRICT	nr_seq_classificacao_w,
		nr_seq_solicitacao_w
	from	pls_comercial_cliente
	where	nr_sequencia	= nr_sequencia_p;

	if (nr_seq_solicitacao_w IS NOT NULL AND nr_seq_solicitacao_w::text <> '') then
		select	max(ie_tipo_contratacao)
		into STRICT	ie_tipo_contratacao_w
		from	pls_solicitacao_comercial
		where	nr_sequencia	= nr_seq_solicitacao_w;
	end if;

	/*aaschlote 31/05/2011 OS - 323726*/

	CALL pls_atualizar_atividades_canal(null,nr_sequencia_p,'N',nm_usuario_p);
elsif (ie_opcao_p in (2,3,4,5)) then
	select	nr_seq_classificacao,
		ie_tipo_contratacao
	into STRICT	nr_seq_classificacao_w,
		ie_tipo_contratacao_w
	from	pls_solicitacao_comercial
	where	nr_sequencia	= nr_sequencia_p;

	/*aaschlote 31/05/2011 OS - 323726*/

	CALL pls_atualizar_atividades_canal(nr_sequencia_p,null,'N',nm_usuario_p);
end if;

if (ie_opcao_p = 1) then
	select	max(coalesce(a.qt_funcionarios, 0))
	into STRICT	qt_vidas_w
	from	pls_solicitacao_vendedor	c,
		pls_comercial_cliente		b,
		pls_solicitacao_comercial	a
	where	b.nr_seq_solicitacao = a.nr_sequencia
	and	b.nr_sequencia = c.nr_seq_cliente
	and	b.nr_sequencia = nr_sequencia_p;
elsif (ie_opcao_p in (2,3,4,5)) then
	select	max(coalesce(a.qt_funcionarios, 0))
	into STRICT	qt_vidas_w
	from	pls_solicitacao_comercial	a
	where	a.nr_sequencia = nr_sequencia_p;
end if;

if (coalesce(qt_vidas_w::text, '') = '') then
	qt_vidas_w := 0;
end if;

if (ie_opcao_p in (2,3,4,5)) then
	open C01;
	loop
	fetch C01 into
		nr_seq_regra_dias_l_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_seq_regra_dias_l_w	:= nr_seq_regra_dias_l_w;
		end;
	end loop;
	close C01;
else
	open C02;
	loop
	fetch C02 into
		nr_seq_regra_dias_p_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		nr_seq_regra_dias_p_w	:= nr_seq_regra_dias_p_w;
		end;
	end loop;
	close C02;
end if;

if (coalesce(nr_seq_regra_dias_l_w::text, '') = '') then
	nr_seq_regra_dias_l_w := 0;
end if;

if (coalesce(nr_seq_regra_dias_p_w::text, '') = '') then
	nr_seq_regra_dias_p_w := 0;
end if;

if (nr_seq_regra_dias_l_w <> 0 and (nr_seq_regra_dias_l_w IS NOT NULL AND nr_seq_regra_dias_l_w::text <> '')) then
	select	qt_dias_efetivacao
	into STRICT	qt_dias_efetivacao_w
	from	pls_solicitacao_regra_vend
	where	nr_sequencia	= nr_seq_regra_dias_l_w;
elsif (nr_seq_regra_dias_l_w = 0 or coalesce(nr_seq_regra_dias_l_w::text, '') = '') then
	qt_dias_efetivacao_w := 0;
end if;

if (nr_seq_regra_dias_p_w <> 0 and (nr_seq_regra_dias_l_w IS NOT NULL AND nr_seq_regra_dias_l_w::text <> '')) then
	select	qt_dias_efetivacao
	into STRICT	qt_dias_efetivacao_w
	from	pls_solicitacao_regra_vend
	where	nr_sequencia	= nr_seq_regra_dias_p_w;
elsif (nr_seq_regra_dias_l_w = 0 or coalesce(nr_seq_regra_dias_l_w::text, '') = '') then
	qt_dias_efetivacao_w := 0;
end if;

if (ie_opcao_p = 1) then

	select	coalesce(ie_canal_principal,'S')
	into STRICT	ie_canal_principal_w
	from	pls_vendedor
	where	nr_sequencia = nr_seq_vendedor_w;

	if (ie_canal_principal_w = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204671);
	end if;

	if (nr_seq_regra_dias_p_w IS NOT NULL AND nr_seq_regra_dias_p_w::text <> '') then
		select	max(a.dt_aprovacao)
		into STRICT	dt_aprovacao_w
		from	pls_solicitacao_vendedor	c,
			pls_comercial_cliente		b,
			pls_solicitacao_comercial	a
		where	b.nr_seq_solicitacao = a.nr_sequencia
		and	b.nr_sequencia = c.nr_seq_cliente
		and	b.nr_sequencia = nr_sequencia_p;

		if (coalesce(dt_aprovacao_w::text, '') = '') then
			update	pls_solicitacao_vendedor
			set	dt_inicio_vigencia = clock_timestamp()
			where	nr_seq_cliente = nr_sequencia_p;

			dt_aprovacao_w := clock_timestamp();
		else
			update	pls_solicitacao_vendedor
			set	dt_inicio_vigencia = dt_aprovacao_w
			where	nr_seq_cliente = nr_sequencia_p;
		end if;
	end if;

	update	pls_solicitacao_vendedor
	set	dt_fim_vigencia	= clock_timestamp()
	where	nr_seq_cliente = nr_sequencia_p
	and	coalesce(dt_fim_vigencia::text, '') = '';

	insert into pls_solicitacao_vendedor(	nr_sequencia,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_cliente,
						nr_seq_vendedor_canal,
						dt_inicio_vigencia,
						dt_fim_vigencia,
						qt_dias_efetivacao )
					values (nextval('pls_solicitacao_vendedor_seq'),
						cd_estabelecimento_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						nr_seq_vendedor_w,
						dt_aprovacao_w,
						null,
						qt_dias_efetivacao_w );
	open C03;
	loop
	fetch C03 into
		nr_seq_vendedores_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		insert into pls_solic_vendedor_compl(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_cliente,
					nr_seq_vendedor_canal,
					nr_seq_vendedor_vinculado,
					cd_estabelecimento)
				values (	nextval('pls_solic_vendedor_compl_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_p,
					nr_seq_vendedores_w,
					null,
					cd_estabelecimento_p);

		end;
	end loop;
	close C03;

	update	pls_solicitacao_regra_aten
	set	dt_solicitacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_regra_p;

	update	pls_comercial_cliente
	set	dt_efetivacao	= clock_timestamp() + qt_dias_efetivacao_w,
		ie_status	= 'R'
	where	nr_sequencia	= nr_sequencia_p;

	--pls_atualizar_status_cliente(nr_sequencia_p,nm_usuario_p);
elsif (ie_opcao_p = 2) then

	select	coalesce(ie_canal_principal,'S')
	into STRICT	ie_canal_principal_w
	from	pls_vendedor
	where	nr_sequencia = nr_seq_vendedor_w;

	if (ie_canal_principal_w = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204671);
	end if;

	update	pls_solicitacao_vendedor
	set	dt_fim_vigencia	= clock_timestamp()
	where	nr_seq_solicitacao = nr_sequencia_p
	and	coalesce(dt_fim_vigencia::text, '') = '';

	select	nr_seq_vendedor_vinculado
	into STRICT	nr_seq_vendedor_vinculado_w
	from	pls_solicitacao_regra_aten
	where	nr_sequencia = nr_seq_regra_p;

	insert into pls_solicitacao_vendedor(	nr_sequencia,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_solicitacao,
						nr_seq_vendedor_canal,
						dt_inicio_vigencia,
						dt_fim_vigencia,
						nr_seq_cliente,
						qt_dias_efetivacao,
						nr_seq_vendedor_vinculado )
					values (nextval('pls_solicitacao_vendedor_seq'),
						cd_estabelecimento_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						nr_seq_vendedor_w,
						clock_timestamp(),
						null,
						null,
						qt_dias_efetivacao_w,
						nr_seq_vendedor_vinculado_w );

	open C03;
	loop
	fetch C03 into
		nr_seq_vendedores_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		insert into pls_solic_vendedor_compl(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_solicitacao,
						nr_seq_vendedor_canal,
						nr_seq_vendedor_vinculado,
						cd_estabelecimento)
					values (	nextval('pls_solic_vendedor_compl_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						nr_seq_vendedores_w,
						null,
						cd_estabelecimento_p);

		end;
	end loop;
	close C03;

	update	pls_solicitacao_regra_aten
	set	dt_solicitacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_regra_p;

	update	pls_solicitacao_comercial
	set	dt_efetivacao	= clock_timestamp() + qt_dias_efetivacao_w
	where	nr_sequencia	= nr_sequencia_p;

	if (ie_alterar_status_p = 'S') then
		CALL pls_atualiza_etapa_solicitacao(nr_sequencia_p, nm_usuario_p);
	end if;
elsif (ie_opcao_p = 3) then

	update	pls_solicitacao_vendedor
	set	dt_fim_vigencia	= clock_timestamp()
	where	nr_seq_solicitacao = nr_sequencia_p
	and	nr_sequencia <> nr_seq_regra_p
	and	coalesce(dt_fim_vigencia::text, '') = '';

	open C03;
	loop
	fetch C03 into
		nr_seq_vendedores_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		insert into pls_solic_vendedor_compl(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_solicitacao,
				nr_seq_vendedor_canal,
				nr_seq_vendedor_vinculado,
				cd_estabelecimento)
			values (	nextval('pls_solic_vendedor_compl_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_p,
				nr_seq_vendedores_w,
				null,
				cd_estabelecimento_p);

		end;
	end loop;
	close C03;

	update	pls_solicitacao_vendedor
	set	qt_dias_efetivacao = qt_dias_efetivacao_w
	where	nr_sequencia = nr_seq_regra_p;

	update	pls_solicitacao_comercial
	set	dt_efetivacao	= clock_timestamp() + qt_dias_efetivacao_w
	where	nr_sequencia	= nr_sequencia_p;

	CALL pls_atualiza_etapa_solicitacao(nr_sequencia_p, nm_usuario_p);
elsif (ie_opcao_p = 4) then

	select	coalesce(ie_canal_principal,'S')
	into STRICT	ie_canal_principal_w
	from	pls_vendedor
	where	nr_sequencia = nr_seq_vendedor_w;

	if (ie_canal_principal_w = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204671);
	end if;

	update	pls_solicitacao_vendedor
	set	dt_fim_vigencia	= clock_timestamp()
	where	nr_seq_solicitacao = nr_sequencia_p
	and	coalesce(dt_fim_vigencia::text, '') = '';

	insert into pls_solicitacao_vendedor(	nr_sequencia,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_solicitacao,
						nr_seq_vendedor_canal,
						dt_inicio_vigencia,
						dt_fim_vigencia,
						nr_seq_cliente,
						qt_dias_efetivacao )
					values (nextval('pls_solicitacao_vendedor_seq'),
						cd_estabelecimento_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						nr_seq_vendedor_w,
						clock_timestamp(),
						null,
						null,
						qt_dias_efetivacao_w );

	open C03;
	loop
	fetch C03 into
		nr_seq_vendedores_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		insert into pls_solic_vendedor_compl(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_solicitacao,
						nr_seq_vendedor_canal,
						nr_seq_vendedor_vinculado,
						cd_estabelecimento)
					values (	nextval('pls_solic_vendedor_compl_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						nr_seq_vendedores_w,
						null,
						cd_estabelecimento_p);

		end;
	end loop;
	close C03;

	update	pls_solicitacao_comercial
	set	dt_efetivacao	= clock_timestamp() + qt_dias_efetivacao_w
	where	nr_sequencia	= nr_sequencia_p;

	if (ie_alterar_status_p = 'S') then
		CALL pls_atualiza_etapa_solicitacao(nr_sequencia_p, nm_usuario_p);
	end if;
elsif (ie_opcao_p = 5) then

	select	coalesce(ie_canal_principal,'S')
	into STRICT	ie_canal_principal_w
	from	pls_vendedor
	where	nr_sequencia = nr_seq_vendedor_w;

	if (ie_canal_principal_w = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204671);
	end if;

	delete	FROM pls_solic_vendedor_compl
	where	nr_seq_solicitacao = nr_sequencia_p;

	delete 	FROM pls_solicitacao_vendedor
	where	nr_seq_solicitacao = nr_sequencia_p;

	insert into pls_solicitacao_vendedor(	nr_sequencia,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_solicitacao,
						nr_seq_vendedor_canal,
						dt_inicio_vigencia,
						dt_fim_vigencia,
						nr_seq_cliente,
						qt_dias_efetivacao )
					values (nextval('pls_solicitacao_vendedor_seq'),
						cd_estabelecimento_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						nr_seq_regra_p,
						clock_timestamp(),
						null,
						null,
						qt_dias_efetivacao_w );

	open C03;
	loop
	fetch C03 into
		nr_seq_vendedores_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		insert into pls_solic_vendedor_compl(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_solicitacao,
						nr_seq_vendedor_canal,
						nr_seq_vendedor_vinculado,
						cd_estabelecimento)
					values (	nextval('pls_solic_vendedor_compl_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						nr_seq_vendedores_w,
						null,
						cd_estabelecimento_p);

		end;
	end loop;
	close C03;

	update	pls_solicitacao_comercial
	set	dt_efetivacao	= clock_timestamp() + qt_dias_efetivacao_w
	where	nr_sequencia	= nr_sequencia_p;

end if;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_vincular_vendedor_solic ( nr_sequencia_p bigint, nr_seq_regra_p bigint, ie_opcao_p text, ie_alterar_status_p text, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

