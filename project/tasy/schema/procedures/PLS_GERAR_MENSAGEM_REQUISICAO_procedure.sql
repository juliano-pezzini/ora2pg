-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mensagem_requisicao ( nr_seq_requisicao_p bigint, ie_tipo_guia_p text, ie_carater_atendimento_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar as mensagens da resuisição 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
	PLS_CONSISTIR_REQUISICAO 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ds_mensagem_w			varchar(4000);
ds_w				varchar(4000);
ds_texto_alterado_w		varchar(4000);
ds_observacao_w			varchar(4000);
ds_resultado_macro_w		varchar(4000);
nm_atributo_w			varchar(255);
ds_titulo_w			varchar(255);
ds_macro_w       	varchar(30);
ie_carater_internacao_w		varchar(2);
ie_tipo_guia_w			varchar(1);
ie_gera_w			varchar(1)	:= 'S';
i				bigint;
pos_macro_w       	bigint;
pos_fim_macro_w			bigint;
nr_seq_regra_w			bigint;
qt_registros_w			integer;

C01 CURSOR FOR 
	SELECT	ds_mensagem, 
		ie_tipo_guia, 
		ie_carater_internacao, 
		ds_regra, 
		nr_sequencia 
	from (	SELECT	a.ds_mensagem, 
				a.ie_tipo_guia, 
				a.ie_carater_internacao, 
				a.ds_regra, 
				a.nr_sequencia, 
				a.dt_inicio_vigencia 
			from	pls_regra_mensagem_guia	a 
			where	a.dt_inicio_vigencia <= clock_timestamp() 
			and (coalesce(a.dt_fim_vigencia::text, '') = '' or a.dt_fim_vigencia > clock_timestamp()) 
			and (coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento and pls_obter_se_controle_estab('RE') = 'S') 
			
union all
 
			select	a.ds_mensagem, 
				a.ie_tipo_guia, 
				a.ie_carater_internacao, 
				a.ds_regra, 
				a.nr_sequencia, 
				a.dt_inicio_vigencia 
			from	pls_regra_mensagem_guia	a 
			where	a.dt_inicio_vigencia <= clock_timestamp() 
			and (coalesce(a.dt_fim_vigencia::text, '') = '' or a.dt_fim_vigencia > clock_timestamp()) 
			and 	pls_obter_se_controle_estab('RE') = 'N') alias12 
	order by 
		dt_inicio_vigencia desc, 
		coalesce(ie_tipo_guia, ' '), 
		coalesce(ie_carater_internacao, ' ');


BEGIN 
open C01;
loop 
fetch C01 into	 
	ds_w, 
	ie_tipo_guia_w, 
	ie_carater_internacao_w, 
	ds_titulo_w, 
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ie_gera_w	:= 'S';
	 
	if (ie_tipo_guia_w IS NOT NULL AND ie_tipo_guia_w::text <> '') and (ie_tipo_guia_w <> ie_tipo_guia_p) then 
		ie_gera_w	:= 'N';
	end if;
	 
	if (ie_gera_w = 'S') and (ie_carater_internacao_w IS NOT NULL AND ie_carater_internacao_w::text <> '') and (ie_carater_internacao_w <> ie_carater_atendimento_p) then 
		ie_gera_w	:= 'N';
	end if;
	 
	if (ie_gera_w = 'S') then 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	pls_mensagem_requisicao	a 
		where	a.nr_seq_regra_mensagem	= nr_seq_regra_w 
		and	a.nr_seq_requisicao	= nr_seq_requisicao_p;
		 
		if (qt_registros_w = 0) then 
			ie_gera_w := 'S';
		else 
			ie_gera_w := 'N';
		end if;
	end if;
	 
	if (ie_gera_w = 'S') then 
		ds_mensagem_w		:= ds_w || ' ';
		ds_texto_alterado_w	:= ds_mensagem_w;
		 
		if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then 
			i := 0;
			 
			WHILE(ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') LOOP 
				begin 
				i := i + 1;
				 
				select replace(replace(ds_mensagem_w,'',' '),chr(13) || chr(10),' ') 
				into STRICT  ds_mensagem_w 
				;
				 
				select position('@' in ds_mensagem_w) 
				into STRICT  pos_macro_w 
				;
				 
				if (pos_macro_w > 0) then 
					select substr(ds_mensagem_w, pos_macro_w, length(ds_mensagem_w)) 
					into STRICT  ds_mensagem_w 
					;
					 
					select position(' ' in ds_mensagem_w) 
					into STRICT  pos_fim_macro_w 
					;
					 
					select substr(Elimina_Caracteres_Especiais(substr(ds_mensagem_w, 1, pos_fim_macro_w -1)),1,30) 
					into STRICT  ds_macro_w 
					;
					 
					if (ds_macro_w IS NOT NULL AND ds_macro_w::text <> '') then 
						begin 
						select nm_atributo 
						into STRICT  nm_atributo_w 
						from  pls_macro_mensagem_guia 
						where  upper(nm_macro)	= upper(ds_macro_w);
						exception 
						when others then 
							nm_atributo_w	:= null;
						end;
 
						if (nm_atributo_w IS NOT NULL AND nm_atributo_w::text <> '') then 
							if (upper(ds_macro_w) = upper('@GUIA')) then 
								select	cd_guia_principal 
								into STRICT	ds_resultado_macro_w 
								from	pls_requisicao	a 
								where	a.nr_sequencia	= nr_seq_requisicao_p;
							elsif (upper(ds_macro_w) = upper('@REQUISICAO')) then 
								select	nr_seq_requisicao_p 
								into STRICT	ds_resultado_macro_w 
								;
							elsif (upper(ds_macro_w) = upper('@REGULAMENTACAO')) then 
								select	substr(obter_valor_dominio(2157, c.ie_regulamentacao), 1, 80) 
								into STRICT	ds_resultado_macro_w 
								from	pls_plano	c, 
									pls_requisicao	a 
								where	c.nr_sequencia	= a.nr_seq_plano 
								and	a.nr_sequencia	= nr_seq_requisicao_p;
							elsif (upper(ds_macro_w) = upper('@DT_INCLUSAO')) then 
								select	b.dt_inclusao_operadora 
								into STRICT	ds_resultado_macro_w 
								from	pls_segurado	b, 
									pls_requisicao	a 
								where	b.nr_sequencia	= a.nr_seq_segurado 
								and	a.nr_sequencia	= nr_seq_requisicao_p;
							elsif (upper(ds_macro_w) = upper('@IE_CARENCIA')) then 
								select	CASE WHEN pls_obter_se_carencia_benef(a.nr_seq_segurado, 'T', 'A')='A' THEN  'S'  ELSE 'N' END  
								into STRICT	ds_resultado_macro_w 
								from	pls_requisicao	a 
								where	a.nr_sequencia	= nr_seq_requisicao_p;
							elsif (upper(ds_macro_w) = upper('@DS_PRODUTO')) then 
								select	substr(coalesce(c.nm_fantasia, c.ds_plano), 1, 80) 
								into STRICT	ds_resultado_macro_w 
								from	pls_plano	c, 
									pls_requisicao	a 
								where	c.nr_sequencia	= a.nr_seq_plano 
								and	a.nr_sequencia	= nr_seq_requisicao_p;
							elsif (upper(ds_macro_w) = upper('@CARTEIRA')) then 
								select	substr(pls_obter_dados_segurado(a.nr_seq_segurado,'C'),1,255) 
								into STRICT	ds_resultado_macro_w 
								from	pls_requisicao	a 
								where	a.nr_sequencia	= nr_seq_requisicao_p;
							elsif (upper(ds_macro_w) = upper('@CD_CART_INT')) then 
								select	substr(pls_obter_carteira_inter_segur(a.nr_seq_segurado),1,255) 
								into STRICT	ds_resultado_macro_w 
								from	pls_requisicao	a 
								where	a.nr_sequencia	= nr_seq_requisicao_p;
							elsif (upper(ds_macro_w) = upper('@IE_CPT')) then 
								select	CASE WHEN pls_obter_dados_segurado(a.nr_seq_segurado,'CPT')='Sim' THEN 'S' WHEN pls_obter_dados_segurado(a.nr_seq_segurado,'CPT')='Não' THEN 'N' END  
								into STRICT	ds_resultado_macro_w 
								from	pls_requisicao	a 
								where	a.nr_sequencia	= nr_seq_requisicao_p;
							end if;
							 
							select replace_macro(ds_texto_alterado_w, ds_macro_w, ds_resultado_macro_w) 
							into STRICT  ds_texto_alterado_w 
							;
						end if;
					end if;
					 
					select substr(ds_mensagem_w, pos_fim_macro_w, length(ds_mensagem_w)) 
					into STRICT  ds_mensagem_w 
					;
				else 
					ds_mensagem_w := '';
				end if;
				 
				end;
			end loop;
			 
			ds_observacao_w	:= ds_observacao_w || ds_texto_alterado_w || chr(13);
		end if;
		 
		ds_mensagem_w	:= ds_observacao_w;
		 
		insert into pls_mensagem_requisicao(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ds_mensagem, 
			nr_seq_requisicao, 
			ds_titulo, 
			nr_seq_regra_mensagem) 
		values (nextval('pls_mensagem_requisicao_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			ds_mensagem_w, 
			nr_seq_requisicao_p, 
			ds_titulo_w, 
			nr_seq_regra_w);
			 
		ds_mensagem_w		:= null;
		ds_observacao_w		:= null;
		ds_texto_alterado_w	:= null;
	end if;
	end;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mensagem_requisicao ( nr_seq_requisicao_p bigint, ie_tipo_guia_p text, ie_carater_atendimento_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

