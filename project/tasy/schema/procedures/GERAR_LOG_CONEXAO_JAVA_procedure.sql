-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_log_conexao_java () AS $body$
DECLARE


ds_hash_w		varchar(32);
qt_tasy_j		bigint;
qt_estacao_j		bigint;
qt_ios_j		bigint;
dt_log_j		timestamp;
nr_sequencia_w		bigint;


BEGIN

dt_log_j	:= clock_timestamp();


/* Usuário conectados no TASY*/

SELECT	COUNT(*)
INTO STRICT	qt_tasy_j
FROM	v$session
WHERE	UPPER(program) LIKE 'TASY JAVA';

SELECT	COUNT( DISTINCT machine || osuser)
into STRICT	qt_estacao_j
FROM	v$session
WHERE	UPPER(program) LIKE 'TASY JAVA';

-- Número de dispositivos iOS conectados
SELECT	COUNT(*)
into STRICT	qt_ios_j
FROM	gv$session
WHERE	upper(program) = 'TASY SERVER'
AND		substr(client_info,1,8) = 'Tipo=iOS';

ds_hash_w	:= RAWTOHEX(dbms_obfuscation_toolkit.md5(input => encode(qt_tasy_j || qt_estacao_j || to_char(dt_log_j,'dd/mm/yyy hh24:mi:ss'::bytea, 'hex')::bytea)));

--Sequencia já existente, extraída da procedure do delphi GERAR_LOG_CONEXAO
select	nextval('log_usuario_conectado_seq')
into STRICT		nr_sequencia_w
;

insert into log_usuario_conectado(
	NR_SEQUENCIA,
	DT_LOG,
	QT_TOTAL,
	QT_TASY,
	QT_ESTACAO,
	DS_HASH,
	QT_IOS,
	QT_TASYMED,
	QT_OUTRO,
	QT_OPS,
	QT_PRESTADOR
) values (
	nr_sequencia_w,
	dt_log_j,
	qt_tasy_j,
	qt_tasy_j,
	qt_estacao_j,
	ds_hash_w,
	qt_ios_j,
	0,
	0,
	0,
	0
);

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_log_conexao_java () FROM PUBLIC;

