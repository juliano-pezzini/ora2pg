-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tabela_contrato ( nr_seq_contrato_p bigint, nr_seq_plano_p bigint, nr_seq_tabela_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_contrato_w			timestamp;
nr_seq_tabela_w			bigint;
qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
vl_preco_atual_w		double precision;
tx_acrescimo_w			pls_plano_preco.tx_acrescimo%type;
qt_registros_w			bigint;
ie_tabela_contrato_w		varchar(1);
nm_estipulante_w		varchar(80);
ie_tipo_contratacao_w		varchar(3);
vl_preco_nao_subsidiado_w	double precision;
ie_preco_w			varchar(2);
nr_seq_contrato_tabela_w	bigint;
nr_contrato_w			bigint;
vl_minimo_w			double precision;
ie_grau_titularidade_w		varchar(2);
qt_vidas_inicial_w		bigint;
qt_vidas_final_w		bigint;
vl_preco_nao_subsid_atual_w	double precision;
tx_reajuste_w			double precision;
nr_seq_preco_w			pls_plano_preco.nr_sequencia%type;
nr_seq_proposta_w		pls_proposta_adesao.nr_sequencia%type;
nr_seq_tabela_log_w		pls_manutencao_tabela_log.nr_sequencia%type;
nr_seq_log_w			pls_manutencao_tabela_log.nr_sequencia%type;
qt_tabelas_fx_etaria_w		bigint;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial,
		qt_idade_final,
		vl_preco_atual,
		tx_acrescimo,
		vl_preco_nao_subsidiado,
		vl_minimo,
		ie_grau_titularidade,
		qt_vidas_inicial,
		qt_vidas_final,
		vl_preco_nao_subsid_atual,
		tx_reajuste
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_p
	order by qt_idade_inicial;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_manutencao_tabela_log
	where	nr_seq_tabela	= nr_seq_tabela_p;


BEGIN

if (coalesce(nr_seq_tabela_p::text, '') = '') then
	--A tabela não pôde ser gerada pois não foi informada uma tabela base!
	CALL wheb_mensagem_pck.exibir_mensagem_abort(249956);
end if;

select	coalesce(max(ie_preco),0)
into STRICT	ie_preco_w
from	pls_plano
where	nr_sequencia	= nr_seq_plano_p;

if (ie_preco_w in (1,4)) then
	select	nr_contrato,
		coalesce(dt_contrato,clock_timestamp()),
		substr(obter_nome_pf_pj(cd_pf_estipulante,cd_cgc_estipulante),1,80)
	into STRICT	nr_contrato_w,
		dt_contrato_w,
		nm_estipulante_w
	from	pls_contrato
	where	nr_sequencia	= nr_seq_contrato_p;

	select	coalesce(max(nr_contrato),0),
		coalesce(max(nr_seq_proposta),0)
	into STRICT	nr_seq_contrato_tabela_w,
		nr_seq_proposta_w
	from	pls_tabela_preco
	where	nr_sequencia	= nr_seq_tabela_p;

	select 	count(*)
	into STRICT	qt_tabelas_fx_etaria_w
	from 	pls_tabela_preco
	where 	nr_seq_principal = nr_seq_tabela_p;

	if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') and (nr_seq_tabela_p IS NOT NULL AND nr_seq_tabela_p::text <> '') and (nr_seq_contrato_tabela_w = 0) then

		select	nextval('pls_tabela_preco_seq')
		into STRICT	nr_seq_tabela_w
		;

		/*aaschlote 26/10/2010 - ao inserir um tabela de preço, não deve ser encerrada a vigencia no dia atual*/

		insert into pls_tabela_preco(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nm_tabela,
			dt_inicio_vigencia,
			nr_seq_plano,
			dt_liberacao,
			ie_tabela_base,
			nr_contrato,
			nr_seq_tabela_origem,
			ie_preco_vidas_contrato,
			ie_calculo_vidas,
			nr_seq_faixa_etaria)
		SELECT	nr_seq_tabela_w,
			clock_timestamp(),
			nm_usuario_p,
			'Tabela para o contrato ' || to_char(nr_contrato_w) || ' - ' || nm_estipulante_w,
			dt_contrato_w,
			nr_seq_plano_p,
			clock_timestamp(),
			'N',
			nr_seq_contrato_p,
			nr_sequencia,
			ie_preco_vidas_contrato,
			ie_calculo_vidas,
			nr_seq_faixa_etaria
		from	pls_tabela_preco
		where	nr_sequencia	= nr_seq_tabela_p;

		open c01;
		loop
		fetch c01 into
			nr_seq_preco_w,
			qt_idade_inicial_w,
			qt_idade_final_w,
			vl_preco_atual_w,
			tx_acrescimo_w,
			vl_preco_nao_subsidiado_w,
			vl_minimo_w,
			ie_grau_titularidade_w,
			qt_vidas_inicial_w,
			qt_vidas_final_w,
			vl_preco_nao_subsid_atual_w,
			tx_reajuste_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			insert into pls_plano_preco(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_tabela,
				nr_seq_preco_origem,
				qt_idade_inicial,
				qt_idade_final,
				vl_preco_inicial,
				vl_preco_atual,
				tx_acrescimo,
				vl_preco_nao_subsidiado,
				vl_minimo,
				ie_grau_titularidade,
				qt_vidas_inicial,
				qt_vidas_final,
				vl_preco_nao_subsid_atual,
				tx_reajuste)
			values (nextval('pls_plano_preco_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_tabela_w,
				nr_seq_preco_w,
				qt_idade_inicial_w,
				qt_idade_final_w,
				vl_preco_atual_w,
				vl_preco_atual_w,
				tx_acrescimo_w,
				vl_preco_nao_subsidiado_w,
				vl_minimo_w,
				ie_grau_titularidade_w,
				qt_vidas_inicial_w,
				qt_vidas_final_w,
				vl_preco_nao_subsid_atual_w,
				tx_reajuste_w);
		end loop;
		close c01;

		update	pls_contrato_plano
		set	nr_seq_tabela	= nr_seq_tabela_w,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			nr_seq_tabela_origem = nr_seq_tabela_p
		where	nr_seq_contrato	= nr_seq_contrato_p
		and	nr_seq_plano	= nr_seq_plano_p;

		if (nr_seq_proposta_w IS NOT NULL AND nr_seq_proposta_w::text <> '') then --Se for tabela de proposta, copiar os logs de manutenção da tabela
			open C02;
			loop
			fetch C02 into
				nr_seq_tabela_log_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				select	nextval('pls_manutencao_tabela_log_seq')
				into STRICT	nr_seq_log_w
				;

				insert	into	pls_manutencao_tabela_log(	nr_sequencia,
						nr_seq_tabela,
						cd_estabelecimento,
						dt_log,
						nm_usuario_log,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_motivo)
					(SELECT	nr_seq_log_w,
						nr_seq_tabela_w,
						cd_estabelecimento,
						dt_log,
						nm_usuario_log,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_motivo
					from	pls_manutencao_tabela_log
					where	nr_sequencia = nr_seq_tabela_log_w);

				insert	into	pls_manutencao_preco_log(	nr_sequencia,
						nr_seq_log,
						cd_estabelecimento,
						qt_idade_inicial,
						qt_idade_final,
						vl_preco_inicial,
						vl_preco_final,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						tx_acrescimo,
						tx_desconto,
						nr_seq_motivo)
					(SELECT	nextval('pls_manutencao_preco_log_seq'),
						nr_seq_log_w,
						cd_estabelecimento,
						qt_idade_inicial,
						qt_idade_final,
						vl_preco_inicial,
						vl_preco_final,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						tx_acrescimo,
						tx_desconto,
						nr_seq_motivo
					from	pls_manutencao_preco_log
					where	nr_seq_log	= nr_seq_tabela_log_w);
				end;
			end loop;
			close C02;

		end if;

		CALL pls_copiar_regra_aprop_plano(nr_seq_tabela_p, nr_seq_tabela_w, nr_seq_contrato_p, nm_usuario_p);

		if (qt_tabelas_fx_etaria_w > 0) then
			CALL pls_gerar_tb_preco_fx_etaria(nr_seq_tabela_w,cd_estabelecimento_p,nm_usuario_p);
		end if;
	end if;
end if;

/* não pode ser feito COMMIT nessa rotina, o commit deve ser feito na rotina que chama ess */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tabela_contrato ( nr_seq_contrato_p bigint, nr_seq_plano_p bigint, nr_seq_tabela_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

