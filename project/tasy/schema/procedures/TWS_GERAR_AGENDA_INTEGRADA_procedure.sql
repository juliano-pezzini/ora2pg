-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tws_gerar_agenda_integrada ( Cd_Pessoa_Fisica_P text, Nr_Seq_Agenda_Consulta_P bigint, Nm_Usuario_P text, ie_convenio_privado text, Cd_Convenio_P text, Cd_Plano_P text, Cd_Categoria_P text, Cd_Especialidade_P text, Ie_Opcao_P text, Nr_Seq_Agenda_Consulta_old_P bigint, Dt_Agenda_p text, Cd_Medico_p text, cd_agenda_p text, cd_estabelecimento_p bigint, ds_error_p INOUT text) AS $body$
DECLARE

  Nr_Seq_Item_W       bigint;
  Nr_Seq_Status_W     bigint;
  Nr_Seq_Integracao_W bigint;
  ie_nao_agendado_p   varchar(255);
  Nm_Paciente_W       varchar(255);
  Nr_Telefone_W       varchar(255);
  Dt_Nascimento_W     timestamp;
  Nr_Idade_W          bigint;
  Is_Exists_W         bigint;
  qt_peso_w pessoa_fisica.qt_peso%type;
  qt_altura_cm_w pessoa_fisica.qt_altura_cm%type;
  cd_agenda_w agenda_consulta.cd_agenda%type;
  ie_reservado_w           varchar(1);
  cd_estabelecimento_w     varchar(255);
  ie_classif_agenda_cons_w varchar(5);
  cd_motivo_w              varchar(15);
  ds_motivo_w              varchar(255);
  cd_convenio_w            bigint;
  ie_status_w              varchar(1);
  dt_agenda_w              timestamp;

BEGIN
  SELECT to_date(Dt_Agenda_p,'DD-MM-YYYY') INTO STRICT dt_agenda_w;
  IF (Nr_Seq_Agenda_Consulta_P IS NOT NULL AND Nr_Seq_Agenda_Consulta_P::text <> '') THEN
    BEGIN
      select coalesce(cd_estabelecimento, cd_estabelecimento_p) into STRICT cd_estabelecimento_w
      from agenda where cd_agenda = cd_agenda_p;
      SELECT COUNT(*)
      INTO STRICT Is_Exists_W
      FROM Pessoa_Fisica
      WHERE Cd_Pessoa_Fisica = Cd_Pessoa_Fisica_P;
      SELECT MAX(ie_classif_agenda_cons)
      INTO STRICT ie_classif_agenda_cons_w
      FROM parametro_agenda_web;
      IF (Is_Exists_W > 0 )THEN
        BEGIN
          SELECT Nm_Pessoa_Fisica ,
            Dt_Nascimento,
            Obter_Telefone_Pf_Html5(Cd_Pessoa_Fisica,0),
            Obter_Idade(Dt_Nascimento, clock_timestamp(), 'A'),
            QT_ALTURA_CM,
            QT_PESO
          INTO STRICT Nm_Paciente_W,
            Dt_Nascimento_W,
            Nr_Telefone_W ,
            Nr_Idade_W,
            qt_altura_cm_w,
            qt_peso_w
          FROM Pessoa_Fisica
          WHERE Cd_Pessoa_Fisica = Cd_Pessoa_Fisica_P;
        END;
      ELSE
        BEGIN
          SELECT A.Nm_Pessoa_Fisica,
            A.Dt_Nascimento,
            CASE WHEN CASE WHEN coalesce(A.Nr_Ddi_Celular::text, '') = '' THEN  A.Nr_Ddd_Celular  ELSE A.Nr_Ddi_Celular            || ' '            || A.Nr_Ddd_Celular coalesce(END::text, '') = '' THEN A.Nr_Telefone_Celular  ELSE CASE WHEN coalesce(A.Nr_Ddi_Celular::text, '') = '' THEN  A.Nr_Ddd_Celular  ELSE A.Nr_Ddi_Celular            || ' '            || A.Nr_Ddd_Celular END            || ' '            ||A.Nr_Telefone_Celular END ,
            Obter_Idade(A.Dt_Nascimento, clock_timestamp(), 'A')
          INTO STRICT Nm_Paciente_W,
            Dt_Nascimento_W,
            Nr_Telefone_W ,
            Nr_Idade_W
          FROM Wsuite_Solic_Inclusao_Pf A,
            Wsuite_Usuario B
          WHERE A.Nr_Sequencia = B.Nr_Seq_Inclusao_Pf
          AND B.Ds_Login       = Nm_Usuario_P;
        END;
      END IF;
     -- IF (Is_Exists_W > 0 )THEN

     --   Ageint_Consistir_Idade (Cd_Pessoa_Fisica_P,Dt_Nascimento_W,Nm_Usuario_P,cd_estabelecimento_w,ds_error_p);

     -- ELSE
        ds_error_p := Tws_Ageint_Consistir_Idade(Cd_Pessoa_Fisica_P, Nm_Usuario_P, Dt_Nascimento_W, Nm_Usuario_P, cd_estabelecimento_p, ds_error_p);
    --  END IF;
      IF (ds_error_p IS NOT NULL AND ds_error_p::text <> '') THEN
        RETURN;
      END IF;
      IF (Is_Exists_W > 0 )THEN
        BEGIN
          ds_error_p := Ageint_Consistir_IMC(qt_peso_w, qt_altura_cm_w, Nm_Usuario_P, cd_estabelecimento_p, ds_error_p);
        END;
      END IF;
      IF (ds_error_p IS NOT NULL AND ds_error_p::text <> '') THEN
        RETURN;
      END IF;
      ie_reservado_w := RESERVAR_HORARIO_AGECONS(Nr_Seq_Agenda_Consulta_P, Nm_Usuario_p, ie_reservado_w);
      IF (ie_reservado_w = 'N') THEN
        BEGIN
          ds_error_p := WSUITE_UTIL_PCK.GET_WSUITE_EXPRESSION(607886);
          RETURN;
        END;
      END IF;
      IF (coalesce(Cd_Especialidade_P::text, '') = '' AND coalesce(Cd_Medico_p::text, '') = '') THEN
        BEGIN
          ds_error_p := WSUITE_UTIL_PCK.GET_WSUITE_EXPRESSION(507354);
          RETURN;
        END;
      END IF;
      IF (ie_convenio_privado = 'S') THEN
        SELECT cd_convenio
        INTO STRICT Cd_Convenio_w
        FROM convenio
        WHERE IE_AGENDA_WEB  = 'S'
        AND IE_SITUACAO      ='A'
        AND ie_tipo_convenio = 1  LIMIT 1;
      END IF;
      IF (coalesce(ds_error_p::text, '') = '') THEN
        BEGIN
          IF (Ie_Opcao_P = 'A') THEN
            BEGIN
              SELECT nextval('agenda_integrada_seq') INTO STRICT Nr_Seq_Integracao_W;
              SELECT MAX(Nr_Sequencia)
              INTO STRICT Nr_Seq_Status_W
              FROM Agenda_Integrada_Status
              WHERE Ie_Situacao  = 'A'
              AND Ie_Status_Tasy ='EA';
              INSERT
              INTO Agenda_Integrada(
                  Nr_Sequencia,
                  Dt_Atualizacao,
                  Nm_Usuario,
                  Dt_Atualizacao_Nrec,
                  Nm_Usuario_Nrec,
                  Dt_Inicio_Agendamento,
                  Dt_Fim_Agendamento,
                  Nr_Seq_Status,
                  Cd_Pessoa_Fisica,
                  Cd_Estabelecimento,
                  Cd_Profissional,
                  Nr_Telefone,
                  Nm_Paciente ,
                  Dt_Nascimento,
                  Cd_Convenio,
                  Cd_Categoria,
                  Cd_Plano,
                  cd_empresa,
                  IE_BLOQUEIO_CHECKLIST,
                  IE_EXTERNO
                )
                VALUES (
                  Nr_Seq_Integracao_W,
                  clock_timestamp(),
                  Nm_Usuario_P,
                  clock_timestamp(),
                  Nm_Usuario_P,
                  clock_timestamp(),
                  NULL,
                  Nr_Seq_Status_W,
                  Cd_Pessoa_Fisica_P,
                  cd_estabelecimento_w,
                  Cd_Medico_p,
                  Nr_Telefone_W,
                  Nm_Paciente_W,
                  Dt_Nascimento_W,
                  coalesce(Cd_Convenio_P,Cd_Convenio_w),
                  Cd_Categoria_P,
                  Cd_Plano_P,
                  null,
                  'N',
                  'N'
                );
              COMMIT;
              SELECT nextval('agenda_integrada_item_seq') INTO STRICT Nr_Seq_Item_W;
              INSERT
              INTO Agenda_Integrada_Item(
                  Nr_Sequencia ,
                  Nr_Seq_Agenda_Int ,
                  Dt_Atualizacao ,
                  Nm_Usuario ,
                  Dt_Atualizacao_Nrec ,
                  Nm_Usuario_Nrec ,
                  Ie_Tipo_Agendamento ,
                  Cd_Medico ,
                  Cd_Especialidade ,
                  Vl_Item ,
                  Ie_Regra ,
                  Nr_Seq_Agenda_Cons ,
                  Nr_Seq_Agenda_Exame,
                  Cd_Estabelecimento,
                  ie_origem_agendamento
                )
                VALUES (
                  Nr_Seq_Item_W,
                  Nr_Seq_Integracao_W,
                  clock_timestamp(),
                  Nm_Usuario_P,
                  clock_timestamp(),
                  Nm_Usuario_P,
                  'C',
                  Cd_Medico_p,
                  Cd_Especialidade_P,
                  NULL,
                  NULL,
                  NULL,
                  NULL,
                  cd_estabelecimento_w,
                  'WS'
                );
              CALL Confirmar_Horarios_Ageint(cd_agenda_p,dt_agenda_w,Nr_Seq_Integracao_W,NULL,'S',Nm_Usuario_P,cd_estabelecimento_w);
              UPDATE Agenda_Consulta
              SET Cd_Pessoa_Fisica   = Cd_Pessoa_Fisica_P,
                Nm_Paciente          = Nm_Paciente_W,
                cd_convenio          = coalesce(cd_convenio_p,Cd_Convenio_w),
                cd_categoria         = cd_categoria_p,
                cd_plano             = cd_plano_p,
                Cd_Especialidade     = Cd_Especialidade_p,
                ie_classif_agenda    = coalesce(ie_classif_agenda_cons_w,ie_classif_agenda),
                Ie_Forma_Agendamento = 7,   --Internet
                Ie_Status_Agenda     = 'N', -- Normal
                Ie_Agenda_Web        = 'S',
                Nr_Telefone          = Nr_Telefone_W,
                Dt_Nascimento_Pac    = Dt_Nascimento_W,
                Qt_Idade_Pac         = Nr_Idade_W,
                Nm_Usuario           = Nm_Usuario_P,
                NM_USUARIO_ACESSO     = NULL,
                Dt_Atualizacao       = clock_timestamp() ,
                cd_empresa_ref        = NULL
              WHERE Nr_Sequencia     = Nr_Seq_Agenda_Consulta_P;
              COMMIT;
              SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'Y' END
              INTO STRICT ie_status_w
              FROM Agenda_Integrada_Status
              WHERE Ie_Situacao  = 'A'
              AND Ie_Status_Tasy ='AG';
              IF (ie_status_w    = 'Y') THEN
                BEGIN
                  SELECT MAX(Nr_Sequencia)
                  INTO STRICT Nr_Seq_Status_W
                  FROM Agenda_Integrada_Status
                  WHERE Ie_Situacao  = 'A'
                  AND Ie_Status_Tasy ='AG';
                  UPDATE agenda_integrada
                  SET Nr_Seq_Status  = Nr_Seq_Status_W
                  WHERE nr_sequencia = Nr_Seq_Integracao_W;
                END;
              END IF;
              UPDATE agenda_integrada_item
              SET Nr_Seq_Agenda_Cons = Nr_Seq_Agenda_Consulta_P
              WHERE nr_Sequencia     = Nr_Seq_Item_W;
            END;
          ELSE
            BEGIN
              IF (Nr_Seq_Agenda_Consulta_old_P IS NOT NULL AND Nr_Seq_Agenda_Consulta_old_P::text <> '') THEN
                SELECT nextval('agenda_integrada_seq') INTO STRICT Nr_Seq_Integracao_W;
                SELECT MAX(Nr_Sequencia)
                INTO STRICT Nr_Seq_Status_W
                FROM Agenda_Integrada_Status
                WHERE Ie_Situacao  = 'A'
                AND Ie_Status_Tasy ='EA';
                INSERT
                INTO Agenda_Integrada(
                    Nr_Sequencia,
                    Dt_Atualizacao,
                    Nm_Usuario,
                    Dt_Atualizacao_Nrec,
                    Nm_Usuario_Nrec,
                    Dt_Inicio_Agendamento,
                    Dt_Fim_Agendamento,
                    Nr_Seq_Status,
                    Cd_Pessoa_Fisica,
                    Cd_Estabelecimento,
                    Cd_Profissional,
                    Nr_Telefone,
                    Nm_Paciente ,
                    Dt_Nascimento,
                    Cd_Convenio,
                    Cd_Categoria,
                    Cd_Plano,
                    cd_empresa,
                    IE_BLOQUEIO_CHECKLIST,
                    IE_EXTERNO
                  )
                  VALUES (
                    Nr_Seq_Integracao_W,
                    clock_timestamp(),
                    Nm_Usuario_P,
                    clock_timestamp(),
                    Nm_Usuario_P,
                    clock_timestamp(),
                    NULL,
                    Nr_Seq_Status_W,
                    Cd_Pessoa_Fisica_P,
                    cd_estabelecimento_w,
                    Cd_Medico_p,
                    Nr_Telefone_W,
                    Nm_Paciente_W,
                    Dt_Nascimento_W,
                    coalesce(Cd_Convenio_P,Cd_Convenio_w),
                    Cd_Categoria_P,
                    Cd_Plano_P,
                    null,
                    'N',
                    'N'
                  );
                COMMIT;
                SELECT nextval('agenda_integrada_item_seq') INTO STRICT Nr_Seq_Item_W;
                INSERT
                INTO Agenda_Integrada_Item(
                    Nr_Sequencia ,
                    Nr_Seq_Agenda_Int ,
                    Dt_Atualizacao ,
                    Nm_Usuario ,
                    Dt_Atualizacao_Nrec ,
                    Nm_Usuario_Nrec ,
                    Ie_Tipo_Agendamento ,
                    Cd_Medico ,
                    Cd_Especialidade ,
                    Vl_Item ,
                    Ie_Regra ,
                    Nr_Seq_Agenda_Cons ,
                    Nr_Seq_Agenda_Exame,
                    Cd_Estabelecimento,
                    ie_origem_agendamento
                  )
                  VALUES (
                    Nr_Seq_Item_W,
                    Nr_Seq_Integracao_W,
                    clock_timestamp(),
                    Nm_Usuario_P,
                    clock_timestamp(),
                    Nm_Usuario_P,
                    'C',
                    Cd_Medico_p,
                    Cd_Especialidade_P,
                    NULL,
                    NULL,
                    NULL,
                    NULL,
                    cd_estabelecimento_w,
                    'WS'
                  );
                SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'Y' END
                INTO STRICT ie_status_w
                FROM agenda_motivo_cancelamento
                WHERE ((cd_estabelecimento = cd_estabelecimento_w)
                OR (coalesce(cd_estabelecimento::text, '') = ''))
                AND ie_agenda             IN ('C','T')
                AND ie_situacao            = 'A'
                AND ie_agenda_web          ='S'  LIMIT 1;
                --alterar_status_agenda_cons(cd_estabelecimento_w,cd_agenda_p, Nr_Seq_Agenda_Consulta_old_P,'C', cd_motivo_w,ds_motivo_w, 'N',Nm_Usuario_P,'');
                IF ( ie_status_w = 'Y') THEN
                  BEGIN
                    SELECT cd_motivo,
                      ds_motivo
                    INTO STRICT cd_motivo_w,
                      ds_motivo_w
                    FROM agenda_motivo_cancelamento
                    WHERE ((cd_estabelecimento = cd_estabelecimento_w)
                    OR (coalesce(cd_estabelecimento::text, '') = ''))
                    AND ie_agenda             IN ('C','T')
                    AND ie_situacao            = 'A'
                    AND ie_agenda_web          ='S'  LIMIT 1;
                    CALL TWS_ALTERAR_STATUS_CONSULTA(Nr_Seq_Agenda_Consulta_old_P,cd_motivo_w,ds_motivo_w,cd_estabelecimento_w,Nm_Usuario_P,'C');
                  END;
                ELSE
                  BEGIN
                    CALL TWS_ALTERAR_STATUS_CONSULTA(Nr_Seq_Agenda_Consulta_old_P,NULL,NULL,cd_estabelecimento_w,Nm_Usuario_P,'C');
                  END;
                END IF;
                UPDATE Agenda_Consulta
                SET Cd_Pessoa_Fisica   = Cd_Pessoa_Fisica_P,
                  Nm_Paciente          = Nm_Paciente_W,
                  cd_convenio          = coalesce(cd_convenio_p,Cd_Convenio_w),
                  cd_categoria         = cd_categoria_p,
                  cd_plano             = cd_plano_p,
                  Cd_Especialidade     = Cd_Especialidade_p,
                  ie_classif_agenda    = coalesce(ie_classif_agenda_cons_w,ie_classif_agenda),
                  Ie_Forma_Agendamento = 7,   --Internet
                  Ie_Status_Agenda     = 'N', -- Normal
                  Ie_Agenda_Web        = 'S',
                  Nr_Telefone          = Nr_Telefone_W,
                  Dt_Nascimento_Pac    = Dt_Nascimento_W,
                  Qt_Idade_Pac         = Nr_Idade_W,
                  Nm_Usuario           = Nm_Usuario_P,
                  NM_USUARIO_ACESSO     = NULL,
                  Dt_Atualizacao       = clock_timestamp() ,
                  cd_empresa_ref        = NULL
                WHERE Nr_Sequencia     = Nr_Seq_Agenda_Consulta_P;
                CALL Confirmar_Horarios_Ageint(cd_agenda_p,dt_agenda_w,Nr_Seq_Integracao_W,NULL,'S',Nm_Usuario_P,cd_estabelecimento_w);
                SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'Y' END
                INTO STRICT ie_status_w
                FROM Agenda_Integrada_Status
                WHERE Ie_Situacao  = 'A'
                AND Ie_Status_Tasy ='AG';
                IF (ie_status_w    = 'Y') THEN
                  BEGIN
                    SELECT MAX(Nr_Sequencia)
                    INTO STRICT Nr_Seq_Status_W
                    FROM Agenda_Integrada_Status
                    WHERE Ie_Situacao  = 'A'
                    AND Ie_Status_Tasy ='AG';
                    UPDATE agenda_integrada
                    SET Nr_Seq_Status  = Nr_Seq_Status_W
                    WHERE nr_sequencia = Nr_Seq_Integracao_W;
                  END;
                END IF;
                UPDATE agenda_integrada_item
                SET Nr_Seq_Agenda_Cons = Nr_Seq_Agenda_Consulta_P
                WHERE nr_Sequencia     = Nr_Seq_Item_W;
              END IF;
            END;
          END IF;
        END;
      END IF;
    END;
  END IF;
  ds_error_p := Nr_Seq_Agenda_Consulta_P;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tws_gerar_agenda_integrada ( Cd_Pessoa_Fisica_P text, Nr_Seq_Agenda_Consulta_P bigint, Nm_Usuario_P text, ie_convenio_privado text, Cd_Convenio_P text, Cd_Plano_P text, Cd_Categoria_P text, Cd_Especialidade_P text, Ie_Opcao_P text, Nr_Seq_Agenda_Consulta_old_P bigint, Dt_Agenda_p text, Cd_Medico_p text, cd_agenda_p text, cd_estabelecimento_p bigint, ds_error_p INOUT text) FROM PUBLIC;

