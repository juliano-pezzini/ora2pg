-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_conversao_item ( nr_seq_conta_p bigint, nr_seq_prestador_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_prestador_prot_p bigint, ie_situacao_protocolo_p INOUT text, cd_versao_tiss_p text) AS $body$
DECLARE


nr_seq_proc_w			bigint;
dt_fim_proc_imp_w		timestamp;
dt_inicio_proc_imp_w		timestamp;
dt_procedimento_imp_w		timestamp;
ie_via_acesso_imp_w		varchar(2);
ie_tipo_despesa_imp_w		varchar(2);
cd_tipo_tabela_imp_w		varchar(10);
ds_procedimento_imp_w		varchar(255);
ie_origem_proced_w		bigint;
cd_proc_existente_w		bigint;
tx_item_w			double precision;
ie_situacao_protocolo_w		varchar(3)	:= 'A';
ie_existe_regra_w		varchar(1);
nr_seq_guia_w			bigint;
cd_guia_w			varchar(20);
qt_conta_proc_w			bigint;
qt_conta_w			bigint;
nr_seq_regra_conversao_w	bigint;
cd_prestador_imp_w		varchar(30);
nr_seq_motivo_glosa_w		bigint;
ie_utilizado_conta_w		varchar(1);
ds_contas_autor_w		varchar(255);
qt_dia_utilizada_w		double precision;
qt_dia_autorizada_w		double precision;
ie_tipo_despesa_w		varchar(1);
qt_proc_conta_w			bigint;
qt_procedimento_imp_w		bigint;
qt_pacote_w			bigint;
ds_observacao_ww		varchar(4000);
cd_proc_inativo_w		bigint;
ie_medico_complementar_w 	varchar(2);
ie_utiliza_codigo_w		varchar(2);
cd_medico_executor_imp_w	varchar(20);
dt_fim_vigencia_w		timestamp;
cd_guia_plano_imp_w		varchar(30);
cd_usuario_plano_imp_w		varchar(30);
qt_executada_w			double precision;
ie_via_acesso_regra_w		varchar(1);
ie_proc_ativo_w			varchar(1);
ie_carencia_abrangencia_ant_w	varchar(10);
nr_seq_conselho_w		bigint;
vl_procedimento_imp_w		double precision;

ds_justificativa_w		varchar(500);
nr_seq_conta_mat_w              bigint;
cd_material_imp_w               varchar(20)    := null;
cd_material_imp_ww              numeric(20);
dt_atendimento_imp_w            timestamp;
dt_fim_atend_imp_w              timestamp;
dt_inicio_atend_imp_w           timestamp;
ie_origem_preco_imp_w           smallint;

ie_tipo_despesa_ww              varchar(2);
tx_reducao_acrescimo_imp_w      double precision;
ds_material_imp_w               varchar(255);
nr_seq_material_w               bigint;
nr_seq_tiss_tabela_mat_w        bigint      := null;
cd_brasindice_w                 varchar(15);
cd_simpro_w                     bigint;
ie_situacao_protocolo_w         varchar(3)     := 'A';
ie_tipo_relacao_w               varchar(2);
ie_material_rede_propria_w      varchar(1);
ie_importacao_material_w        varchar(1)     := 'N';
ie_tipo_material_w              varchar(3)     := 'S';
ie_material_ops_w               varchar(1)     := 'N';
ie_regra_campo_w                varchar(10);
nr_seq_segurado_w               bigint;
nr_seq_material_ww              bigint      := null;
cd_material_envio_w             varchar(30);
ds_material_envio_w             varchar(255);
cd_guia_plano_imp_w             varchar(30);
cd_usuario_plano_imp_w          varchar(30);
ds_erro_w                       varchar(255)   := null;
cd_procedimento_imp_w           bigint;
qt_material_imp_w               double precision;
vl_material_imp_w               double precision;
vl_unitario_imp_w               double precision;
ie_mat_ativo_w                  varchar(1);
ie_tipo_tabela_conv_w		smallint;
dt_entrada_w			timestamp;
dt_atendimento_w		timestamp;
dt_ref_material_w		timestamp;
dados_tipo_conv_tiss_w		pls_cta_valorizacao_pck.dados_tipo_conv_tiss;
ie_somente_codigo_w		pls_conversao_proc.ie_somente_codigo%type;
ie_tipo_tabela_w		pls_conversao_proc.ie_tipo_tabela%type;
qt_existe_proc_w		integer := 0;
cd_tipo_tabela_w		pls_conta_proc.cd_tipo_tabela_imp%type;
nr_seq_tipo_atendimento_w	pls_conta.nr_seq_tipo_atendimento%type;


C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento_imp,
		dt_fim_proc_imp,
		dt_inicio_proc_imp,
		dt_procedimento_imp,
		ie_via_acesso_imp,
		coalesce(ie_tipo_despesa_imp,'0'),
		cd_tipo_tabela_imp,
		ds_procedimento_imp,
		qt_procedimento_imp,
		vl_procedimento_imp,
		vl_unitario_imp,
		ds_justificativa,
		ds_procedimento_imp,
		cd_tipo_tabela_imp
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_p;	

C02 CURSOR FOR
        SELECT  nr_sequencia,
                cd_material_imp,
                dt_atendimento_imp,
                dt_fim_atend_imp,
                dt_inicio_atend_imp,
                ie_origem_preco_imp,
                ie_tipo_despesa_imp,
                tx_reducao_acrescimo_imp,
                ds_material_imp,
                qt_material_imp,
                vl_material_imp,
                vl_unitario_imp,
		ie_origem_preco_imp
        from    pls_conta_mat
        where   nr_seq_conta    = nr_seq_conta_p;

BEGIN

select	coalesce(cd_guia,cd_guia_imp),
	nr_seq_tipo_atendimento
into STRICT	cd_guia_w,
	nr_seq_tipo_atendimento_w
from	pls_conta
where	nr_sequencia	= nr_seq_conta_p;

/* Obter dados da guia */

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_guia_w
from	pls_guia_plano
where	cd_guia		= cd_guia_w
and	nr_seq_segurado = nr_seq_segurado_p;

select	coalesce(max(ie_via_acesso_regra),'N'),
	coalesce(max(ie_carencia_abrangencia_ant),'N')
into STRICT	ie_via_acesso_regra_w,
	ie_carencia_abrangencia_ant_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;

open C01;
loop
fetch C01 into	
	nr_seq_proc_w,
	cd_procedimento_imp_w,
	dt_fim_proc_imp_w,
	dt_inicio_proc_imp_w,
	dt_procedimento_imp_w,
	ie_via_acesso_imp_w,
	ie_tipo_despesa_imp_w,
	cd_tipo_tabela_imp_w,
	ds_procedimento_imp_w,
	qt_procedimento_imp_w,
	vl_procedimento_imp_w,
	vl_unitario_imp_w,
	ds_justificativa_w,
	ds_procedimento_imp_w,
	cd_tipo_tabela_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	dados_tipo_conv_tiss_w	:= pls_obter_conversao_tab_tiss(null, cd_estabelecimento_p, cd_procedimento_imp_w, '', 'C', nr_seq_prestador_p, ie_tipo_despesa_imp_w);

	if (dados_tipo_conv_tiss_w.ie_tipo_tabela  = 0) then
		select	count(1)
		into STRICT	qt_existe_proc_w
		from	procedimento
		where	cd_procedimento = cd_procedimento_imp_w;	
	end if;
	
	--Quando for tabela 00, verifica se existe procedimento na base com o código que esta sendo feita verificação( Verifica se deve converter) , caso

	--existir procedimento, então não converte para material, caso for tabela 00 e não existir procedimento cadastrado com esse código, então converte para material

	--para posterior busca.
 	if   ((dados_tipo_conv_tiss_w.ie_tipo_tabela in (5,12,95,96,99)) or (qt_existe_proc_w = 0 AND dados_tipo_conv_tiss_w.ie_tipo_tabela = 0) or (dados_tipo_conv_tiss_w.ie_tipo_despesa_tiss in ('01','02','03','08'))) then
		
		CALL pls_imp_conta_mat(	nr_seq_conta_p, cd_procedimento_imp_w,qt_procedimento_imp_w,
					vl_unitario_imp_w, vl_procedimento_imp_w, cd_tipo_tabela_imp_w,
					ds_procedimento_imp_w, null,nm_usuario_p,
					ds_justificativa_w, null, null,
					dt_procedimento_imp_w, null, null,
					null, null, null,
					null, null, null);

		
		
		delete	FROM pls_proc_participante
		where	nr_seq_conta_proc = nr_seq_proc_w;
		
		delete  FROM pls_conta_proc
                where   nr_sequencia = nr_seq_proc_w;

	end if;
	
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into	
	nr_seq_conta_mat_w,
        cd_material_imp_w,
        dt_atendimento_imp_w,
        dt_fim_atend_imp_w,
        dt_inicio_atend_imp_w,
        ie_origem_preco_imp_w,
        ie_tipo_despesa_imp_w,
        tx_reducao_acrescimo_imp_w,
        ds_material_imp_w,
        qt_material_imp_w,
        vl_material_imp_w,
        vl_unitario_imp_w,
	cd_tipo_tabela_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	begin
		cd_material_imp_ww      := (cd_material_imp_w)::numeric;
        exception
        when others then
                cd_material_imp_ww      := somente_numero(cd_material_imp_w);
        end;
        /*tratamento realizado para caso exista regra de conversão ro material para procedimento OS 484208 Diogo */

        SELECT * FROM pls_obter_proced_conversao(	null, null, nr_seq_prestador_p, cd_estabelecimento_p, 2, null, null, null, null, null, null, cd_material_imp_ww, null, cd_procedimento_imp_w, ie_origem_proced_w, nr_seq_regra_conversao_w, ie_somente_codigo_w, clock_timestamp(), nr_seq_tipo_atendimento_w, null, null) INTO STRICT cd_procedimento_imp_w, ie_origem_proced_w, nr_seq_regra_conversao_w, ie_somente_codigo_w;
        /*Caso existir regra de conversão deverá ser criada a conta proc respectiva e excluída a conta mat*/

        if (cd_procedimento_imp_w IS NOT NULL AND cd_procedimento_imp_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
		
		ie_tipo_tabela_w	:= pls_obter_tabela_conv_mat_proc(nr_seq_regra_conversao_w);
		
                CALL pls_imp_conta_proc(    cd_versao_tiss_p, null, null,
                                        null, nr_seq_conta_p,cd_procedimento_imp_w,
                                        qt_material_imp_w, ds_material_imp_w, vl_unitario_imp_w,
                                        vl_material_imp_w, ie_tipo_tabela_w, tx_reducao_acrescimo_imp_w,
                                        dt_atendimento_imp_w,null,null,
                                        nm_usuario_p,100,dt_inicio_atend_imp_w,
                                        dt_fim_atend_imp_w, null, null, null, null);

                delete  FROM pls_conta_mat
                where   nr_sequencia = nr_seq_conta_mat_w;
        else 
		dados_tipo_conv_tiss_w	:= pls_obter_conversao_tab_tiss(cd_tipo_tabela_w, cd_estabelecimento_p, cd_procedimento_imp_w, '', 'C', nr_seq_prestador_p, ie_tipo_despesa_imp_w);
	
		if (dados_tipo_conv_tiss_w.ie_tipo_despesa_tiss in ('05','07')) then
			
			CALL pls_imp_conta_proc(    cd_versao_tiss_p, null, null,
						null, nr_seq_conta_p,cd_material_imp_w,
						qt_material_imp_w, ds_material_imp_w, vl_unitario_imp_w,
						vl_material_imp_w, dados_tipo_conv_tiss_w.ie_tipo_tabela, tx_reducao_acrescimo_imp_w,
						dt_atendimento_imp_w,null,null,
						nm_usuario_p,100,dt_inicio_atend_imp_w,
						dt_fim_atend_imp_w, null, null, null, null);

			delete  FROM pls_conta_mat
			where   nr_sequencia = nr_seq_conta_mat_w;
		
		end if;
	
	end if;
	
	end;
end loop;
close C02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_conversao_item ( nr_seq_conta_p bigint, nr_seq_prestador_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_prestador_prot_p bigint, ie_situacao_protocolo_p INOUT text, cd_versao_tiss_p text) FROM PUBLIC;

