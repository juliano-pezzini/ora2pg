-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_preco_segurado ( nr_seq_lote_p bigint, ie_acao_p text, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


-- Procedure para gerar a mudança de faixa etária do segurado
dt_mesano_referencia_w		timestamp;
dt_nascimento_w			timestamp;
dt_inclusao_operadora_w		timestamp;
ie_tipo_contratacao_w		varchar(1);
ds_indice_w			varchar(255);
qt_idade_limite_w		smallint;
qt_tempo_limite_w		smallint;
qt_tempo_operadora_w		integer;
qt_idade_w			bigint;
nr_seq_segurado_preco_w		bigint;
nr_seq_tabela_w			bigint;
nr_seq_preco_seg_w		bigint;
nr_seq_reajuste_w		bigint;
nr_seq_plano_preco_ant_w	bigint;
nr_seq_plano_preco_atual_w	bigint;
nr_seq_regra_desconto_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_contrato_w		bigint;
qt_registros_w			bigint;
nr_seq_seg_preco_w		bigint;
pr_reajuste_w			double precision;
vl_desconto_w			double precision	:= 0;
vl_preco_ant_w			double precision	:= 0;
vl_preco_atual_w		double precision	:= 0;
qt_reajuste_w			bigint	:= 0;
nr_seq_lote_w			bigint;
ie_regulamentacao_w		varchar(2);
qt_tempo_limite_contrato_w	smallint;
qt_idade_limite_contrato_w	smallint;
qt_idade_limite_ops_w		smallint;
qt_tempo_limite_ops_w		smallint;
vl_diferenca_w			double precision;
ie_geracao_valores_w		varchar(2);
nr_seq_titular_w		bigint;
vl_nao_subsidiado_w		double precision;
ie_tipo_valor_w			varchar(3);
vl_preco_nao_subsid_atual_w	double precision;
nr_seq_reajuste_lote_w		bigint;
tx_acrescimo_w			double precision;
ie_tipo_reajuste_w		varchar(1);
nr_seq_reajuste_preco_sca_w	bigint;
qt_registros_sca_w		bigint;
nr_seq_intercambio_w		bigint;
qt_idade_inicial_w		integer;
qt_idade_inicial_ant_w		integer;
nr_seq_segurado_preco_atual_w	bigint;
dt_mesano_referencia_aux_w	timestamp;
qt_idade_aux_w			bigint;
vl_minimo_w			double precision;
nr_seq_preco_ant_w		bigint;
vl_minimo_reajustado_w		double precision;
vl_adaptacao_w			double precision;
ie_grau_parentesco_w		varchar(2);
ds_erro_w			varchar(255);
ie_reaj_idade_limite_pre_w	pls_parametros.ie_reaj_idade_limite_pre%type;
qt_idade_limite_reaj_benef_w	pls_segurado.qt_idade_limite_reaj%type;
qt_tempo_limite_reaj_benef_w	pls_segurado.qt_anos_limite_reaj%type;
nr_seq_preco_w			pls_plano_preco.nr_sequencia%type;
nr_seq_reajuste_preco_w		pls_reajuste_preco.nr_sequencia%type;
vl_preco_atual_ww		double precision	:= 0;

c01 CURSOR FOR  --Lote de reajuste de faixa etária
	SELECT	'P',
		c.nr_sequencia,
		coalesce(c.nr_seq_tabela,b.nr_seq_tabela),
		a.dt_nascimento,
		b.nr_sequencia,
		b.nr_seq_contrato,
		b.dt_inclusao_operadora,
		coalesce(d.ie_geracao_valores,'B'),
		b.nr_seq_titular,
		(	SELECT	max(z.ie_regulamentacao)
			from	pls_contrato c,
				pls_contrato_plano y,
				pls_plano z
			where	c.nr_sequencia	= y.nr_seq_contrato
			and	y.nr_seq_plano	= z.nr_sequencia
			and	c.nr_sequencia 	= b.nr_seq_contrato
			and	coalesce(y.dt_inativacao::text, '') = ''),
		b.qt_idade_limite_reaj,
		b.qt_anos_limite_reaj
	FROM pls_segurado_preco c, pessoa_fisica a, pls_segurado b
LEFT OUTER JOIN pls_contrato d ON (b.nr_seq_contrato = d.nr_sequencia)
WHERE b.cd_pessoa_fisica	= a.cd_pessoa_fisica and c.nr_seq_segurado	= b.nr_sequencia  and c.nr_seq_lote		= nr_seq_lote_p and ie_tipo_contratacao_w	= 'F'
	
union all

	select	'S',
		a.nr_sequencia,
		coalesce(a.nr_seq_tabela,b.nr_seq_tabela),
		c.dt_nascimento,
		b.nr_sequencia,
		b.nr_seq_contrato,
		b.dt_inclusao_operadora,
		coalesce(f.ie_geracao_valores,d.ie_geracao_valores),
		b.nr_seq_titular,
		e.ie_regulamentacao,
		b.qt_idade_limite_reaj,
		b.qt_anos_limite_reaj
	from	pls_sca_vinculo		f,
		pls_segurado		b,
		pessoa_fisica		c,
		pls_segurado_preco_origem	a,
		pls_plano		e,
		pls_contrato		d
	where	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	a.nr_seq_segurado	= b.nr_sequencia
	and	b.nr_seq_contrato	= d.nr_sequencia
	and	a.nr_seq_plano		= e.nr_sequencia
	and	a.nr_seq_vinculo_sca	= f.nr_sequencia
	and	a.nr_seq_lote_reajuste	= nr_seq_lote_p
	and	ie_tipo_contratacao_w	= 'F';

c02 CURSOR FOR  --Lote de reajuste individual
	SELECT	a.nr_sequencia,
		a.nr_seq_reajuste,
		b.nr_sequencia,
		b.nr_seq_contrato,
		c.ie_geracao_valores,
		b.nr_seq_titular
	from	pls_segurado_preco	a,
		pls_segurado		b,
		pls_contrato		c
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	b.nr_seq_contrato	= c.nr_sequencia
	and	a.nr_seq_lote		= nr_seq_lote_p
	and	ie_tipo_contratacao_w	= 'I';

c03 CURSOR FOR  --Lote de reajuste coletivo
	SELECT	a.nr_sequencia,
		a.nr_seq_reajuste,
		b.nr_sequencia,
		b.nr_seq_contrato,
		c.ie_geracao_valores,
		b.nr_seq_titular,
		b.nr_seq_tabela,
		null nr_seq_intercambio
	from	pls_segurado_preco	a,
		pls_segurado		b,
		pls_contrato		c
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	b.nr_seq_contrato	= c.nr_sequencia
	and	a.nr_seq_lote		= nr_seq_lote_p
	and	ie_tipo_contratacao_w	= 'C'
	and	((c.ie_geracao_valores	= 'T' and coalesce(b.nr_seq_titular::text, '') = '')
		or (c.ie_geracao_valores = 'D' and (b.nr_seq_titular IS NOT NULL AND b.nr_seq_titular::text <> ''))
		or (c.ie_geracao_valores = 'B'))
	
union all

	SELECT	a.nr_sequencia,
		a.nr_seq_reajuste,
		b.nr_sequencia,
		null, --não tem contrato
		'B', --IE_GERACAO_VALORES - DEVE GERAR PARA TODOS
		b.nr_seq_titular,
		b.nr_seq_tabela,
		c.nr_sequencia
	from	pls_segurado_preco	a,
		pls_segurado		b,
		pls_intercambio		c
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	b.nr_seq_intercambio	= c.nr_sequencia
	and	a.nr_seq_lote		= nr_seq_lote_p
	and	ie_tipo_contratacao_w	= 'C';

C04 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(vl_preco_atual,0),
		qt_idade_inicial
	from	pls_plano_preco
	where	qt_idade_w	>= qt_idade_inicial
	and	qt_idade_w	<= qt_idade_final
	and	nr_seq_tabela	= nr_seq_tabela_w
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w
	order	by	coalesce(ie_grau_titularidade,' ');


BEGIN

select	ie_tipo_contratacao
into STRICT	ie_tipo_contratacao_w
from	pls_lote_reaj_segurado
where	nr_sequencia	= nr_seq_lote_p;

begin
select	qt_idade_limite,
	qt_tempo_limite,
	coalesce(ie_reaj_idade_limite_pre,'S')
into STRICT	qt_idade_limite_ops_w,
	qt_tempo_limite_ops_w,
	ie_reaj_idade_limite_pre_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 185194, null);
	/* Não foi realizado o cadastro dos campos "Idade limite para reajuste" e "Tempo limite para reajuste", na função OPS - Gestão de Operadoras -> Parâmetros da OPS! */

end;

select	count(*)
into STRICT	qt_registros_w
from	pls_segurado_preco
where	nr_seq_lote	= nr_seq_lote_p;

select	count(*)
into STRICT	qt_registros_sca_w
from	pls_segurado_preco_origem
where	nr_seq_lote_reajuste	= nr_seq_lote_p;

qt_registros_w	:= coalesce(qt_registros_w,0) + coalesce(qt_registros_sca_w,0);

if (qt_registros_w = 0) then
	CALL pls_inserir_preco_beneficiario(nr_seq_lote_p,'N', nm_usuario_p,cd_estabelecimento_p);
end if;

if (ie_acao_p = 'C') then
	select	fim_mes(dt_mesano_referencia)
	into STRICT	dt_mesano_referencia_w
	from	pls_lote_reaj_segurado
	where	nr_sequencia	= nr_seq_lote_p;

	dt_mesano_referencia_aux_w	:= trunc(dt_mesano_referencia_w,'Month');

	open c01;
	loop
	fetch c01 into
		ie_tipo_reajuste_w,
		nr_seq_segurado_preco_w,
		nr_seq_tabela_w,
		dt_nascimento_w,
		nr_seq_segurado_w,
		nr_seq_contrato_w,
		dt_inclusao_operadora_w,
		ie_geracao_valores_w,
		nr_seq_titular_w,
		ie_regulamentacao_w,
		qt_idade_limite_reaj_benef_w,
		qt_tempo_limite_reaj_benef_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		if ((ie_geracao_valores_w = 'T' and coalesce(nr_seq_titular_w::text, '') = '') or (ie_geracao_valores_w = 'D' and (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '')) or (ie_geracao_valores_w = 'B')) then
			begin
			ie_grau_parentesco_w	:= coalesce(substr(pls_obter_garu_dependencia_seg(nr_seq_segurado_w,'C'),1,2),'X');

			if (coalesce(qt_idade_limite_reaj_benef_w,0) > 0) or (coalesce(qt_tempo_limite_reaj_benef_w,0) > 0) then
				qt_tempo_limite_w  := coalesce(qt_tempo_limite_reaj_benef_w,0);
				qt_idade_limite_w  := coalesce(qt_idade_limite_reaj_benef_w,0);
			else
				begin
				select	coalesce(qt_idade_limite_reaj,0),
					coalesce(qt_anos_limite_reaj,0)
				into STRICT	qt_idade_limite_contrato_w,
					qt_tempo_limite_contrato_w
				from	pls_contrato
				where	nr_sequencia = nr_seq_contrato_w;
				exception
				when others then
					qt_idade_limite_contrato_w	:= 0;
					qt_tempo_limite_contrato_w	:= 0;
				end;

				if (qt_idade_limite_contrato_w > 0) or (qt_tempo_limite_contrato_w > 0) then
					qt_tempo_limite_w	:= qt_tempo_limite_contrato_w;
					qt_idade_limite_w	:= qt_idade_limite_contrato_w;
				elsif (coalesce(qt_tempo_limite_ops_w,0) > 0) or (coalesce(qt_idade_limite_ops_w,0) > 0) then
					qt_tempo_limite_w	:= coalesce(qt_tempo_limite_ops_w,0);
					qt_idade_limite_w	:= coalesce(qt_idade_limite_ops_w,0);
				else
					/* Se nenhum campo de idade e anos limite for preenchido o sistema sempre realiza o reajuste de mudança de faixa etária */

					qt_tempo_limite_w	:= 999;
					qt_idade_limite_w	:= 999;
				end if;
			end if;

			nr_seq_plano_preco_ant_w	:= null;
			nr_seq_plano_preco_atual_w	:= null;
			qt_idade_w			:= trunc(months_between(fim_mes(dt_mesano_referencia_w),dt_nascimento_w) / 12) - 1;
			qt_idade_aux_w			:= 999;

			if (ie_tipo_reajuste_w = 'P') then
				select	max(qt_idade)
				into STRICT	qt_idade_aux_w
				from	pls_segurado_preco
				where	nr_seq_segurado	= nr_seq_segurado_w
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and	nr_sequencia	<> nr_seq_segurado_preco_w
				and	dt_reajuste	= (	SELECT	max(dt_reajuste)
								from	pls_segurado_preco
								where	nr_seq_segurado	= nr_seq_segurado_w
								and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
								and	nr_sequencia	<> nr_seq_segurado_preco_w
								and	trunc(dt_reajuste,'Month')      <= dt_mesano_referencia_aux_w);
			elsif (ie_tipo_reajuste_w = 'S') then
				select	max(qt_idade)
				into STRICT	qt_idade_aux_w
				from	pls_segurado_preco_origem
				where	nr_seq_segurado		= nr_seq_segurado_w
				and	nr_seq_tabela 		= nr_seq_tabela_w
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and	nr_sequencia	<> nr_seq_segurado_preco_w
				and	dt_reajuste	= (	SELECT	max(dt_reajuste)
								from	pls_segurado_preco_origem
								where	nr_seq_segurado	= nr_seq_segurado_w
								and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
								and	nr_sequencia	<> nr_seq_segurado_preco_w
								and	trunc(dt_reajuste,'Month')      <= dt_mesano_referencia_aux_w)
								and	nr_seq_tabela 		= nr_seq_tabela_w;
			end if;

			if (qt_idade_aux_w < qt_idade_w) then
				qt_idade_w	:= qt_idade_aux_w;
			end if;

			open C04;
			loop
			fetch C04 into
				nr_seq_plano_preco_ant_w,
				vl_preco_ant_w,
				qt_idade_inicial_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
			end loop;
			close C04;

			qt_idade_w	:= trunc(months_between(fim_mes(dt_mesano_referencia_w),dt_nascimento_w) / 12);
			open C04;
			loop
			fetch C04 into
				nr_seq_plano_preco_atual_w,
				vl_preco_atual_w,
				qt_idade_inicial_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
			end loop;
			close C04;

			qt_tempo_operadora_w	:= trunc(months_between(dt_mesano_referencia_w, dt_inclusao_operadora_w) / 12);

			-- Se mudou de faixa etaria
			if (nr_seq_plano_preco_ant_w <> nr_seq_plano_preco_atual_w) and (qt_idade_inicial_ant_w <= qt_idade_inicial_w) and
				not	(
					(qt_tempo_operadora_w	>= coalesce(qt_tempo_limite_w,999)) and (qt_idade_w	>= coalesce(qt_idade_limite_w,999)) and
					((ie_regulamentacao_w <> 'R') or (ie_regulamentacao_w = 'R' and ie_reaj_idade_limite_pre_w = 'S'))
					) then

				/* Verifica se possui reajuste, localiza o lote de reajuste e pega o valor reajustado da nova faixa ETÁRIA */

				if (ie_tipo_reajuste_w = 'P') then /* Reajuste faixa etária do produto do beneficiário */
					select	max(nr_seq_preco)
					into STRICT	nr_seq_preco_w
					from	pls_segurado_preco
					where	nr_seq_segurado	= nr_seq_segurado_w
					and	nr_seq_lote = nr_seq_lote_p;
				elsif (ie_tipo_reajuste_w = 'S') then /* Reajuste faixa etária SCA do beneficiário */
					select	max(nr_seq_preco)
					into STRICT	nr_seq_preco_w
					from	pls_segurado_preco_origem
					where	nr_seq_segurado	= nr_seq_segurado_w
					and	nr_seq_lote_reajuste = nr_seq_lote_p;
				end if;

				if (coalesce(nr_seq_preco_w,0) <> 0) then
					select	max(nr_sequencia)
					into STRICT	nr_seq_reajuste_preco_w
					from	pls_reajuste_preco
					where	nr_seq_preco	= nr_seq_preco_w
					and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
					and	dt_reajuste <= dt_mesano_referencia_aux_w;

					begin
					select	vl_reajustado,
						vl_preco_nao_subsidiado
					into STRICT	vl_preco_atual_ww,
						vl_preco_nao_subsid_atual_w
					from	pls_reajuste_preco
					where	nr_sequencia = nr_seq_reajuste_preco_w;
					exception
					when others then
						vl_preco_atual_ww		:= 0;
						vl_preco_nao_subsid_atual_w	:= 0;
					end;
				else
					begin
					select	vl_preco_atual
					into STRICT	vl_preco_ant_w
					from	pls_plano_preco
					where	nr_sequencia = nr_seq_plano_preco_ant_w;
					exception
					when others then
						vl_preco_ant_w	:= 0;
					end;

					begin
					select	vl_preco_atual,
						vl_preco_nao_subsid_atual
					into STRICT	vl_preco_atual_ww,
						vl_preco_nao_subsid_atual_w
					from	pls_plano_preco
					where	nr_sequencia = nr_seq_plano_preco_atual_w;
					exception
					when others then
						vl_preco_atual_ww		:= 0;
						vl_preco_nao_subsid_atual_w	:= 0;
					end;
				end if;

				if (coalesce(vl_preco_atual_ww,0) <> 0) then
					vl_preco_atual_w := vl_preco_atual_ww;
				end if;

				select	max(vl_minimo),
					max(vl_adaptacao)
				into STRICT	vl_minimo_w,
					vl_adaptacao_w
				from	pls_plano_preco
				where	nr_sequencia	= nr_seq_plano_preco_atual_w;

				if (ie_tipo_reajuste_w = 'P') then /* Reajuste faixa etária do produto do beneficiário */
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_preco_ant_w
					from	pls_segurado_preco	a,
						pls_segurado		b
					where	a.nr_seq_segurado	= b.nr_sequencia
					and	b.nr_sequencia		= nr_seq_segurado_w
					and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
					--and	nvl(a.ie_situacao,'A')	= 'A'
					and	dt_mesano_referencia_w >= trunc(a.dt_reajuste, 'month');

					if (coalesce(nr_seq_preco_ant_w,0) <> 0) then
						select	max(coalesce(vl_preco_atual,0)) - max(coalesce(vl_desconto,0))
						into STRICT	vl_preco_ant_w
						from	pls_segurado_preco
						where	nr_sequencia	= nr_seq_preco_ant_w;
					end if;

					/* Felipe - Geração do desconto - comentei a rotina PLS_GERAR_DESCONTO_BENEF acima */

					CALL pls_gerar_desc_beneficiario(nr_seq_segurado_preco_w, vl_preco_atual_w, nm_usuario_p, cd_estabelecimento_p, 'N');

					select	tx_acrescimo
					into STRICT	tx_acrescimo_w
					from	pls_plano_preco
					where	nr_sequencia = nr_seq_plano_preco_atual_w;

					update	pls_segurado_preco
					set	dt_reajuste	= dt_mesano_referencia_w,
						nr_seq_preco	= nr_seq_plano_preco_atual_w,
						vl_preco_ant	= coalesce(vl_preco_ant_w,0),
						vl_preco_atual	= coalesce(vl_preco_atual_w,0),
						vl_preco_nao_subsid_desc	= coalesce(vl_preco_nao_subsid_atual_w,0),
						vl_minimo_mensalidade	= coalesce(vl_minimo_w,0),
						vl_adaptacao	= coalesce(vl_adaptacao_w,0),
						ds_observacao	= round((tx_acrescimo_w)::numeric,2) || '% de reajuste da faixa etária do beneficiário'
					where	nr_sequencia	= nr_seq_segurado_preco_w;
				elsif (ie_tipo_reajuste_w = 'S') then /* Reajuste faixa etária SCA do beneficiário */
					update	pls_segurado_preco_origem
					set	dt_reajuste	= dt_mesano_referencia_w,
						nr_seq_preco	= nr_seq_plano_preco_atual_w,
						vl_preco_ant	= coalesce(vl_preco_ant_w,0),
						vl_preco_atual	= coalesce(vl_preco_atual_w,0)
					where	nr_sequencia	= nr_seq_segurado_preco_w;
				end if;
			else
				if (ie_tipo_reajuste_w = 'P') then
					delete	from pls_segurado_preco
					where	nr_sequencia	= nr_seq_segurado_preco_w;
				elsif (ie_tipo_reajuste_w = 'S') then
					delete	from pls_segurado_preco_origem
					where	nr_sequencia	= nr_seq_segurado_preco_w;
				end if;
			end if;
			exception
			when others then
				ds_erro_w	:= substr(sqlerrm(SQLSTATE),1,255);
				insert into pls_lote_reajuste_log(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						cd_estabelecimento,nr_seq_lote_reaj,nr_seq_segurado,ds_erro)
				values (	nextval('pls_lote_reajuste_log_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						cd_estabelecimento_p,nr_seq_lote_p,nr_seq_segurado_w,ds_erro_w);
			end;
		else
			if (ie_tipo_reajuste_w = 'P') then
				delete	from pls_segurado_preco
				where	nr_sequencia	= nr_seq_segurado_preco_w;
			elsif (ie_tipo_reajuste_w = 'S') then
				delete	from pls_segurado_preco_origem
				where	nr_sequencia	= nr_seq_segurado_preco_w;
			end if;
		end if;
	end loop;
	close c01;

	update	pls_lote_reaj_segurado
	set	ie_status	= '3'
	where	nr_sequencia	= nr_seq_lote_p;
elsif (ie_acao_p = 'D') then
	if (ie_tipo_contratacao_w <> 'F') then
		update	pls_segurado_preco
		set	vl_preco_atual	= 0,
			vl_preco_ant	= 0,
			vl_desconto	= 0,
			ds_observacao	= '',
			tx_reajuste = 0,
			vl_reajuste = 0,
			vl_preco_nao_subsid_desc	= 0
		where	nr_seq_lote	= nr_seq_lote_p;
	end if;

	update	pls_lote_reaj_segurado
	set	ie_status	= '1'
	where	nr_sequencia	= nr_seq_lote_p;
end if;
if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_preco_segurado ( nr_seq_lote_p bigint, ie_acao_p text, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

