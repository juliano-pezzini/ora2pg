-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tiss_consistir_guia ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, ds_parametro_um_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* IE_TIPO_GLOSA_P
	C - Conta
	CP - Conta procedimento
	CM - Conta material
	A - Autorização
	AP - Autorização procedimento
	AM - Autorização material */
nm_prestador_imp_w		varchar(255);
nm_prestador_w			varchar(255);
ds_observacao_w			varchar(255)	:= null;
cd_guia_w			varchar(20);
cd_guia_referencia_w		varchar(20);
cd_guia_referencia_ww		varchar(20);
ie_guia_indevida_w		varchar(1)	:= 'S';
ie_internado_w			varchar(1);
ds_retorno_w			varchar(1);
nr_seq_segurado_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_protocolo_w		bigint;
nr_seq_fatura_w			bigint;
dt_validade_senha_w		timestamp;
dt_emissao_w			timestamp;
dt_emissao_imp_w		timestamp;
dt_procedimento_w		timestamp;
dt_emissao_conta_glosa_w	timestamp;
cd_guia_pesquisa_w		varchar(20);
nr_seq_lote_w			bigint;
qt_guia_duplic_a500_w		bigint;
nr_protocolo_prestador_w	varchar(20);
qt_consistir_guia_w		bigint;

nr_seq_conta_glosa_w		pls_conta.nr_sequencia%type;


BEGIN
if (ie_tipo_glosa_p = 'C') then
	/* Obter dados da conta */

	begin
		select	coalesce(cd_guia,cd_guia_imp),
			coalesce(cd_guia_referencia,cd_guia_solic_imp),
			coalesce(cd_guia_referencia, cd_guia),
			nr_seq_segurado,
			trunc(dt_atendimento_referencia),
			dt_emissao_imp,
			nr_seq_fatura
		into STRICT	cd_guia_w,
			cd_guia_referencia_ww,
			cd_guia_referencia_w,
			nr_seq_segurado_w,
			dt_emissao_w,
			dt_emissao_imp_w,
			nr_seq_fatura_w
		from	pls_conta
		where	nr_sequencia	= nr_sequencia_p;
	exception
	when others then
		nr_seq_segurado_w	:= null;
	end;

	ie_internado_w	:= pls_obter_se_internado(nr_sequencia_p,'C');

	if (ie_evento_p = 'IA') then
		cd_guia_referencia_w	:= coalesce(cd_guia_referencia_ww, cd_guia_w);
		dt_emissao_w		:= dt_emissao_imp_w;
	end if;

	select	max(trunc(dt_validade_senha))
	into STRICT	dt_validade_senha_w
	from	pls_guia_plano
	where	cd_guia		= cd_guia_referencia_w
	and	nr_seq_segurado = nr_seq_segurado_w;

	/* Obter a quantidade de guias iguais apresentadas para o mesmo beneficiário e prestador executor
	OS 279251 - Vagner informou que deve considera a guia e o beneficiário para a contagem de guias já apresentadas
	*/
	/* Felipe - 28/03/2011 - OS 279251 - Histórico 23/03/2011 15:05:58 */

	cd_guia_pesquisa_w	:= pls_converte_cd_guia_pesquisa(cd_guia_w);

	begin
		select	b.nr_seq_lote_conta,
			b.nr_protocolo_prestador
		into STRICT	nr_seq_lote_w,
			nr_protocolo_prestador_w
		from	pls_protocolo_conta b,
			pls_conta a
		where	a.nr_seq_protocolo 	= b.nr_sequencia
		and	a.nr_sequencia		= nr_sequencia_p;
	exception
		when others then
		nr_seq_lote_w			:= null;
		nr_protocolo_prestador_w	:= null;
	end;

	select	count(1)
	into STRICT	qt_consistir_guia_w
	from	pls_ocorrencia_conta_web a
	where	a.ie_consistir_cod_guia = 'S';

	/* Francisco - 30/01/2013 - Tratamento provisório até criarmos uma glosa
	para garantir a não duplicidade de guias */
	if (qt_consistir_guia_w > 0) then
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_conta_w
		from 	pls_protocolo_conta	b,
			pls_conta		a
		where	b.nr_sequencia		= a.nr_seq_protocolo
		and	a.cd_guia_pesquisa 	= cd_guia_pesquisa_w
		and	a.nr_seq_segurado	= nr_seq_segurado_w
		and 	(
			((coalesce(b.nr_seq_lote_conta::text, '') = '') or (b.nr_seq_lote_conta != nr_seq_lote_w)) or
			((coalesce(b.nr_protocolo_prestador::text, '') = '') or (b.nr_protocolo_prestador != nr_protocolo_prestador_w))
			)
		and	a.ie_status 	<> 'C'
		and	b.ie_situacao 	<> 'RE'
		and	a.nr_sequencia 	<> nr_sequencia_p;
	end if;

	if (coalesce(nr_seq_conta_w,0) = 0) then
		if (ie_internado_w = 'S') then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_conta_w
			from	pls_conta	a
			where	a.nr_sequencia		!= nr_sequencia_p
			and	a.cd_guia_referencia	= cd_guia_referencia_ww
			and	a.cd_guia		= cd_guia_w
			and	a.nr_seq_segurado	= nr_seq_segurado_w
			and	a.ie_status		!= 'C'
			and (a.ie_glosa <> 'S' 	or coalesce(a.ie_glosa::text, '') = '')
			and	((not exists (SELECT	1
						from	ptu_fatura	x
						where	x.nr_sequencia	= a.nr_seq_fatura
						and	x.ie_status	= 'CA'
						and	not exists (	select	1
										from	ptu_nota_cobranca	z
										where	x.nr_sequencia = z.nr_seq_fatura
										and	cd_excecao not in ('I','E')))) or (coalesce(a.nr_seq_fatura::text, '') = ''));
		else
			--Incluido tratamento para verificar também se a guia referência é igual a existente em outra conta OS 654274 dgkorz
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_conta_w
			from	pls_conta	a
			where	a.nr_sequencia		!= nr_sequencia_p
			and	((a.cd_guia_referencia	= cd_guia_referencia_ww) or (coalesce(a.cd_guia_referencia::text, '') = '' and coalesce(cd_guia_referencia_ww::text, '') = ''))
			and	a.cd_guia		= cd_guia_w
			and	a.nr_seq_segurado	= nr_seq_segurado_w
			and	a.ie_status		!= 'C'
			and (a.ie_glosa <> 'S' or coalesce(a.ie_glosa::text, '') = '')
			and	((not exists (	SELECT	1
							from	ptu_fatura	x
							where	x.nr_sequencia	= a.nr_seq_fatura
							and	x.ie_status	= 'CA'
							and	not exists (	select	1
										from	ptu_nota_cobranca	z
										where	x.nr_sequencia = z.nr_seq_fatura
										and	cd_excecao not in ('I','E')))) or (coalesce(a.nr_seq_fatura::text, '') = ''));
		end if;

		/*Tratamento para verificar se a guia de intercambio A500 é uma reapresentação*/

		if (ie_evento_p = 'I5')	then
			select 	count(1)
			into STRICT	qt_guia_duplic_a500_w
			from	pls_conta		a,
				ptu_fatura		b,
				ptu_nota_cobranca	c
			where	c.nr_seq_fatura = b.nr_sequencia
			and	a.nr_seq_fatura = b.nr_sequencia
			and	a.nr_sequencia 	= nr_sequencia_p
			and	c.cd_excecao	in ('E','I');

			if (qt_guia_duplic_a500_w	> 0)	then
				nr_seq_conta_w := null;
			end if;
		end if;
	end if;

	if (coalesce(nr_seq_conta_w,0) <> 0) then
		begin
			select	coalesce(dt_atendimento_referencia,dt_emissao_imp),
				nr_seq_protocolo
			into STRICT	dt_emissao_conta_glosa_w,
				nr_seq_protocolo_w
			from	pls_conta
			where	nr_sequencia	= nr_seq_conta_w;
		exception
		when others then
			nr_seq_protocolo_w	:= null;
		end;

		select	max(nm_prestador_imp),
			max(pls_obter_dados_prestador(nr_seq_prestador,'N'))
		into STRICT	nm_prestador_imp_w,
			nm_prestador_w
		from	pls_protocolo_conta
		where	nr_sequencia	= nr_seq_protocolo_w;

		nm_prestador_w	:= coalesce(nm_prestador_w,nm_prestador_imp_w);
	end if;
elsif (ie_tipo_glosa_p = 'CP') then
	begin
		begin
		select	coalesce(dt_procedimento,dt_procedimento_imp),
			nr_seq_conta
		into STRICT	dt_procedimento_w,
			nr_seq_conta_glosa_w
		from	pls_conta_proc
		where	nr_sequencia = nr_sequencia_p;
	exception
	when others then
		dt_procedimento_w	:= null;
	end;

	ie_guia_indevida_w	:= pls_obter_se_proc_tipo_guia(nr_sequencia_p,ie_tipo_glosa_p);
	ds_observacao_w		:= 'Conta: ' || nr_sequencia_p;
	ds_retorno_w		:= ie_guia_indevida_w;
	end;
elsif (ie_tipo_glosa_p = 'AP') then
	ie_guia_indevida_w	:= pls_obter_se_proc_tipo_guia(nr_sequencia_p,ie_tipo_glosa_p);
	ds_retorno_w		:= ie_guia_indevida_w;
end if;

if (ie_tipo_glosa_p = 'C') then
	if (nr_seq_conta_w > 0) then /* 1308 - Guia já apresentada*/
		CALL pls_gravar_glosa_tiss('1308',
			'Prestador: '||nm_prestador_w||'; Protocolo: '||nr_seq_protocolo_w||'; Conta: '||nr_seq_conta_w||'; Dt. emissão:' ||dt_emissao_conta_glosa_w, ie_evento_p,
			nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
			nr_seq_ocorrencia_p, '', nm_usuario_p,
			cd_estabelecimento_p, null);
	end if;

	if (nr_seq_prestador_p = 0) then /* 1312 - Prestador contratado não informado*/
		CALL pls_gravar_glosa_tiss('1312',
			'Conta: ' || nr_sequencia_p, ie_evento_p,
			nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
			nr_seq_ocorrencia_p, '', nm_usuario_p,
			cd_estabelecimento_p, null);
	end if;

	if (dt_validade_senha_w < dt_emissao_w) then /* 1321 - Validade da guia expirada*/
		CALL pls_gravar_glosa_tiss('1321',
			'Conta: ' || nr_sequencia_p, ie_evento_p,
			nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
			nr_seq_ocorrencia_p, '', nm_usuario_p,
			cd_estabelecimento_p, null);
	end if;
elsif (ie_tipo_glosa_p = 'CP') then
	if (coalesce(dt_procedimento_w::text, '') = '') then /* 1317 - Guia sem data do atendimento*/
		CALL pls_gravar_glosa_tiss('1317',
			null, ie_evento_p,
			nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
			nr_seq_ocorrencia_p, '', nm_usuario_p,
			cd_estabelecimento_p, nr_seq_conta_glosa_w);
	end if;
end if;

/*1304 - Cobrança em guia indevida*/

if (ds_retorno_w = 'N') then
	CALL pls_gravar_glosa_tiss('1304', ds_observacao_w, ie_evento_p, nr_sequencia_p,
	ie_tipo_glosa_p, nr_seq_prestador_p, nr_seq_ocorrencia_p, '', nm_usuario_p,
	cd_estabelecimento_p, nr_seq_conta_glosa_w);
end if;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_consistir_guia ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, ds_parametro_um_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

