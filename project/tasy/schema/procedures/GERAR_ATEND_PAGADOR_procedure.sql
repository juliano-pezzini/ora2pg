-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_atend_pagador ( nr_atendimento_p bigint, nr_idade_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_perfil_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(10);
cd_pessoa_responsavel_w		varchar(10);
nr_seq_nextval_w		bigint;
nr_idade_w			bigint;
ie_gerar_atend_pag_resp_w	varchar(1);
ie_empresa_pagadora_w		varchar(1);
cd_empresa_refer_w		bigint;
cd_cgc_w			varchar(14);
ie_erro_w		varchar(1);
ie_gerar_w		varchar(1);
nr_cpf_w		pessoa_fisica.nr_cpf%type;
nr_seq_parentesco_financ_w		bigint;
ie_empresa_pagadora_financ_w		varchar(1);
cd_pessoa_responsavel_financ_w		varchar(10);
cd_empresa_refer_financ_w		bigint;


ds_procedure_w varchar(1000);

BEGIN
ds_retorno_p := '';
ds_procedure_w := 'executar_evento_agenda_atend(:nr_atendimento_p,''CR'',obter_estabelecimento_ativo,'':nm_usuario_p'')';
ds_procedure_w	:= replace(ds_procedure_w, ':nr_atendimento_p', nr_atendimento_p);
ds_procedure_w	:= replace(ds_procedure_w, ':nm_usuario_p', nm_usuario_p);

select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
into STRICT	ie_gerar_w
from 	atendimento_pagador
where 	nr_atendimento = nr_atendimento_p;

if (coalesce(nr_atendimento_p,0) > 0) and (coalesce(ie_gerar_w,'S') = 'S') then

	ie_erro_w	:= 'N';
	
	begin
	select	cd_pessoa_fisica,
		obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),
		cd_pessoa_responsavel,
		obter_dados_pf(cd_pessoa_fisica, 'CPF')
	into STRICT	cd_pessoa_fisica_w,
		nr_idade_w,
		cd_pessoa_responsavel_w,
		nr_cpf_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
	exception
	when others then
		ie_erro_w	:= 'S';
	end;
	
	if (ie_erro_w = 'N')  then

		select	max(ie_empresa_pagadora),
			max(cd_empresa_refer)
		into STRICT	ie_empresa_pagadora_w,
			cd_empresa_refer_w
		from 	compl_pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_responsavel_w
		and	ie_tipo_complemento = 2;

		select 	max(cd_cgc)
		into STRICT	cd_cgc_w
		from	empresa_referencia
		where 	cd_empresa = cd_empresa_refer_w;
		
		
		select	max(ie_empresa_pagadora),
			max(cd_empresa_refer),
			max(nr_seq_parentesco),
			max(cd_pessoa_fisica_ref)
		into STRICT	ie_empresa_pagadora_financ_w,
			cd_empresa_refer_financ_w,
			nr_seq_parentesco_financ_w,
			cd_pessoa_responsavel_financ_w
		from 	compl_pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_w
		and	ie_tipo_complemento = 8;
		
		

		select	coalesce(max(obter_valor_param_usuario(916, 344, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p)), 'N')
		into STRICT	ie_gerar_atend_pag_resp_w
		;
		
		if	(ie_gerar_atend_pag_resp_w = 'S' AND cd_pessoa_responsavel_w IS NOT NULL AND cd_pessoa_responsavel_w::text <> '') then
			
				select	nextval('atendimento_pagador_seq')
				into STRICT	nr_seq_nextval_w
				;

			if	((coalesce(ie_empresa_pagadora_w,'N') = 'S') and (cd_empresa_refer_w IS NOT NULL AND cd_empresa_refer_w::text <> '')) then

				insert into atendimento_pagador(
					nr_sequencia,
					cd_cgc,
					nr_atendimento,
					nm_usuario,
					dt_atualizacao,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				values (	nr_seq_nextval_w,
					cd_cgc_w,
					nr_atendimento_p,
					nm_usuario_p,
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p);
			else
				insert into atendimento_pagador(
					nr_sequencia,
					cd_pessoa_fisica,
					nr_atendimento,
					nm_usuario,
					dt_atualizacao,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				values (	nr_seq_nextval_w,
					cd_pessoa_responsavel_w,
					nr_atendimento_p,
					nm_usuario_p,
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p);
			end if;
			
			begin
				CALL exec_sql_dinamico('EXECUTAR_EVENTO_AGENDA_ATEND', 'EXEC ' || ds_procedure_w);
			exception
			when others then
				null;
			end;
		
		elsif	(ie_gerar_atend_pag_resp_w = 'M' AND nr_idade_w < 18 AND cd_pessoa_responsavel_w IS NOT NULL AND cd_pessoa_responsavel_w::text <> '') then
			begin
			select	nextval('atendimento_pagador_seq')
			into STRICT	nr_seq_nextval_w
			;

			insert into atendimento_pagador(
				nr_sequencia,
				cd_pessoa_fisica,
				nr_atendimento,
				nm_usuario,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (	nr_seq_nextval_w,
				cd_pessoa_responsavel_w,
				nr_atendimento_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p);
			
			begin
				CALL exec_sql_dinamico('EXECUTAR_EVENTO_AGENDA_ATEND', 'EXEC ' || ds_procedure_w);
			exception
			when others then
				null;
			end;
			
			end;
		elsif	((ie_gerar_atend_pag_resp_w = 'C') and (coalesce(nr_cpf_w::text, '') = '')) then
			begin
			select	nextval('atendimento_pagador_seq')
			into STRICT	nr_seq_nextval_w
			;

			insert into atendimento_pagador(
				nr_sequencia,
				cd_pessoa_fisica,
				nr_atendimento,
				nm_usuario,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (	nr_seq_nextval_w,
				cd_pessoa_responsavel_w,
				nr_atendimento_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p);
				
			begin
				CALL exec_sql_dinamico('EXECUTAR_EVENTO_AGENDA_ATEND', 'EXEC ' || ds_procedure_w);
			exception
			when others then
				null;
			end;
			
			end;
		
		elsif (ie_gerar_atend_pag_resp_w	= 'F') and ((cd_empresa_refer_financ_w IS NOT NULL AND cd_empresa_refer_financ_w::text <> '') or (cd_pessoa_responsavel_financ_w IS NOT NULL AND cd_pessoa_responsavel_financ_w::text <> '')) then
		
			if (cd_pessoa_responsavel_financ_w IS NOT NULL AND cd_pessoa_responsavel_financ_w::text <> '') and (cd_pessoa_responsavel_financ_w IS NOT NULL AND cd_pessoa_responsavel_financ_w::text <> '') then
				cd_empresa_refer_financ_w	:= null;
			end if;
			
		
			select 	max(cd_cgc)
			into STRICT	cd_cgc_w
			from	empresa_referencia
			where 	cd_empresa = cd_empresa_refer_financ_w;
			
			begin
			select	nextval('atendimento_pagador_seq')
			into STRICT	nr_seq_nextval_w
			;
			
			insert into atendimento_pagador(
				nr_sequencia,
				cd_cgc,
				nr_atendimento,
				nm_usuario,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_grau_parentesco,
				cd_pessoa_fisica)
			values (	nr_seq_nextval_w,
				cd_cgc_w,
				nr_atendimento_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_parentesco_financ_w,
				cd_pessoa_responsavel_financ_w);
			exception
				when others then
					null;
			end;			
		
		elsif (nr_idade_w >= nr_idade_p) /*and
			((ie_gerar_atend_pag_resp_w = 'N') or
			((ie_gerar_atend_pag_resp_w = 'S') or (cd_pessoa_responsavel_w is null)))*/
 then
			begin
			
			
			select	nextval('atendimento_pagador_seq')
			into STRICT	nr_seq_nextval_w
			;

			insert into atendimento_pagador(
				nr_sequencia,
				cd_pessoa_fisica,
				nr_atendimento,
				nm_usuario,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (	nr_seq_nextval_w,
				cd_pessoa_fisica_w,
				nr_atendimento_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p);
			end;
			
			begin			
				CALL exec_sql_dinamico('EXECUTAR_EVENTO_AGENDA_ATEND', 'EXEC ' || ds_procedure_w);											
			exception
			when others then
				null;
			end;
		
		else
			ds_retorno_p := substr(obter_texto_dic_objeto(294376, wheb_usuario_pck.get_nr_seq_idioma, 'NR_IDADE_P='||nr_idade_p),1,255);
		end if;		
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_atend_pagador ( nr_atendimento_p bigint, nr_idade_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_perfil_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

