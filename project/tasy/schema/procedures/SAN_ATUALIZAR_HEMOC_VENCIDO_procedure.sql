-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_atualizar_hemoc_vencido ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_hemocomp_prod_fim_w	varchar(1);
nr_seq_producao_w	bigint;
nr_seq_plasma_comum_w	bigint;
dt_producao_w		timestamp;
qt_dias_validade_w	smallint;
ds_hora_final_venc_w	varchar(255);
dt_vencimento_w		timestamp;
nr_seq_derivado_w	bigint;
cd_barras_w		varchar(30);
					
C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.dt_producao, 
		coalesce(a.qt_dias_validade,0), 
		a.nr_seq_derivado, 
		a.cd_barras 
	from	san_producao_consulta_v a 
	where	coalesce(a.nr_seq_emp_saida::text, '') = ''	 
	and	coalesce(a.nr_seq_transfusao::text, '') = '' 
	and	coalesce(a.nr_seq_inutil::text, '') = '' 
	and	coalesce(a.ie_encaminhado,'N') = 'N' 
	and	(	(ie_hemocomp_prod_fim_w = 'N') or 
			(	(ie_hemocomp_prod_fim_w = 'S') and 
				(	(a.dt_recebimento IS NOT NULL AND a.dt_recebimento::text <> '' AND dt_liberacao_bolsa IS NOT NULL AND dt_liberacao_bolsa::text <> '') or ((a.nr_seq_emp_ent IS NOT NULL AND a.nr_seq_emp_ent::text <> '') and (coalesce(a.dt_inicio_prod_emprestimo::text, '') = '' or (a.dt_fim_prod_emprestimo IS NOT NULL AND a.dt_fim_prod_emprestimo::text <> ''))) 
				) 
			) 
		) 
	and	not exists (SELECT	1 
				from	san_envio_derivado_val x, 
					san_envio_derivado z 
				where	z.nr_sequencia	= x.nr_seq_envio 
				and	x.nr_seq_producao	= a.nr_sequencia 
				and	coalesce(x.dt_recebimento::text, '') = '') 
	and	not exists (select	1 
				from	san_controle_qualidade x, 
					san_controle_qual_prod y 
				where	x.nr_sequencia = y.nr_seq_qualidade 
				and	y.nr_seq_producao = a.nr_sequencia 
				and	coalesce(x.dt_liberacao::text, '') = '') 
	and	a.ie_pai_reproduzido <> 'S' 
	and 	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and 	San_Obter_Dt_Venc_Producao(a.nr_sequencia) < clock_timestamp() 
	and	a.ie_tipo_derivado = 'PC';


BEGIN 
/* Hemoterapia - Parâmetro [230] - Considerar hemocomponentes como em estoque apenas após o recebimento do pré-estoque */
 
ie_hemocomp_prod_fim_w := obter_param_usuario(450, 230, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_hemocomp_prod_fim_w);
/* Hemoterapia - Parâmetro [262] - Define horário final para o vencimento do hemocomponente na entrada de hemocomponentes */
 
ds_hora_final_venc_w := obter_param_usuario(450, 262, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ds_hora_final_venc_w);
 
select	max(nr_sequencia) 
into STRICT	nr_seq_plasma_comum_w 
from	san_derivado 
where	ie_tipo_derivado = 'PFC';
 
if (nr_seq_plasma_comum_w IS NOT NULL AND nr_seq_plasma_comum_w::text <> '') then 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_producao_w, 
		dt_producao_w, 
		qt_dias_validade_w, 
		nr_seq_derivado_w, 
		cd_barras_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		begin 
		dt_vencimento_w := to_date(to_char(dt_producao_w + qt_dias_validade_w,'dd/mm/yyyy') || ds_hora_final_venc_w,'dd/mm/yyyy hh24:mi:ss');
		exception 
		when others then 
			dt_vencimento_w := dt_producao_w + qt_dias_validade_w;
		end;
		 
		if (cd_barras_w IS NOT NULL AND cd_barras_w::text <> '') then 
			cd_barras_w := substr(cd_barras_w,1,length(cd_barras_w)-2) || replace(to_char(nr_seq_plasma_comum_w,'00'),' ','');
		end if;
		 
		update	san_producao 
		set	nr_seq_derivado	= nr_seq_plasma_comum_w, 
			dt_vencimento	= dt_vencimento_w, 
			cd_barras	= cd_barras_w, 
			nr_seq_derivado_origem = nr_seq_derivado_w 
		where	nr_sequencia = nr_seq_producao_w;
		 
		end;
	end loop;
	close C01;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_atualizar_hemoc_vencido ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

