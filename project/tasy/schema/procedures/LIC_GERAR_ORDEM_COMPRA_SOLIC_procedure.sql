-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lic_gerar_ordem_compra_solic ( nr_sequencia_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

					 
ds_erro_w				varchar(255);
ds_lista_materiais_w			varchar(255);
nr_seq_licitacao_w				bigint;
nr_seq_lic_item_w				bigint;
nr_solic_compra_w				bigint;
nr_item_solic_compra_w			bigint;
cd_material_w				integer;
cd_estabelecimento_w			smallint;
qt_item_solic_w				double precision;
cd_unid_medida_w				varchar(30);
nr_seq_fornec_w				bigint;
vl_item_w					double precision;
cd_cgc_fornec_w				varchar(14);
nr_ordem_compra_w			bigint;
ds_razao_social_w				varchar(100);
ie_erro_w					varchar(1) := 'N';
cd_comprador_w				varchar(10);
cd_moeda_w				bigint;
cd_pessoa_solic_padrao_w			varchar(10);
cd_local_estoque_w			bigint;
cd_centro_custo_w				bigint;
dt_solic_item_w				timestamp;
cd_condicao_pagamento_w			bigint;
nr_controle_interno_w			varchar(100);
cd_modalidade_compra_w			bigint;
cd_tipo_compra_w				bigint;
cd_processo_interno_w			varchar(20);
nr_seq_reg_lic_compra_item_w		bigint;
nr_seq_reg_compra_w			bigint;
ds_marca_w				varchar(255);
ie_reavaliacao_w				varchar(1);

c01 CURSOR FOR	 
SELECT distinct 
	a.nr_seq_licitacao, 
	a.nr_seq_lic_item, 
	c.nr_solic_compra, 
	a.nr_item_solic_compra, 
	b.cd_material, 
	a.qt_item qt_item_solic, 
	b.cd_unid_medida, 
	c.cd_estabelecimento, 
	c.cd_local_estoque, 
	c.cd_centro_custo, 
	d.nr_seq_fornec, 
	d.vl_item, 
	d.nr_sequencia, 
	c.cd_pessoa_solicitante 
from	reg_lic_item_solic a, 
	reg_lic_item b, 
	solic_compra c, 
	reg_lic_compra_item d 
where	a.nr_seq_lic_item		= b.nr_seq_lic_item 
and	a.nr_seq_licitacao		= b.nr_seq_licitacao 
and	a.nr_solic_compra		= c.nr_solic_compra 
and	a.nr_seq_lic_item		= d.nr_seq_lic_item 
and	a.nr_seq_licitacao		= d.nr_seq_licitacao 
and	a.nr_solic_compra		= d.nr_solic_compra 
and	a.nr_item_solic_compra	= d.nr_item_solic_compra 
and	d.nr_seq_reg_lic_compra	= nr_sequencia_p 
and	coalesce(d.nr_ordem_compra::text, '') = '' 
and	coalesce(d.dt_cancelamento::text, '') = '' 
and	coalesce(lic_obter_se_item_reavaliacao(d.nr_seq_licitacao, d.nr_seq_lic_item),'N') = 'N' 
order by	nr_seq_licitacao, nr_seq_fornec;

 
c02 CURSOR FOR	 
SELECT distinct 
	b.cd_material 
from	reg_lic_item_solic a, 
	reg_lic_item b, 
	solic_compra c, 
	reg_lic_compra_item d 
where	a.nr_seq_lic_item		= b.nr_seq_lic_item 
and	a.nr_seq_licitacao		= b.nr_seq_licitacao 
and	a.nr_solic_compra		= c.nr_solic_compra 
and	a.nr_seq_lic_item		= d.nr_seq_lic_item 
and	a.nr_seq_licitacao		= d.nr_seq_licitacao 
and	a.nr_solic_compra		= d.nr_solic_compra 
and	a.nr_item_solic_compra	= d.nr_item_solic_compra 
and	d.nr_seq_reg_lic_compra	= nr_sequencia_p 
and	coalesce(d.nr_ordem_compra::text, '') = '' 
and	coalesce(d.dt_cancelamento::text, '') = '' 
and	coalesce(lic_obter_se_item_reavaliacao(d.nr_seq_licitacao, d.nr_seq_lic_item),'N') = 'S';
	

BEGIN 
 
select	cd_processo_interno 
into STRICT	cd_processo_interno_w 
from	reg_lic_compra 
where	nr_sequencia	= nr_sequencia_p;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_licitacao_w, 
	nr_seq_lic_item_w, 
	nr_solic_compra_w, 
	nr_item_solic_compra_w, 
	cd_material_w, 
	qt_item_solic_w, 
	cd_unid_medida_w, 
	cd_estabelecimento_w, 
	cd_local_estoque_w, 
	cd_centro_custo_w, 
	nr_seq_fornec_w, 
	vl_item_w, 
	nr_seq_reg_lic_compra_item_w, 
	cd_pessoa_solic_padrao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	select	cd_cgc_fornec, 
		substr(obter_nome_pf_pj(null,cd_cgc_fornec),1,100) 
	into STRICT	cd_cgc_fornec_w, 
		ds_razao_social_w 
	from	reg_lic_fornec 
	where	nr_sequencia = nr_seq_fornec_w;
 
	select	coalesce(max(cd_cond_pagto),0) 
	into STRICT	cd_condicao_pagamento_w 
	from	pessoa_juridica_estab 
	where	cd_cgc = cd_cgc_fornec_w 
	and	cd_estabelecimento = cd_estabelecimento_w;
			 
	if (cd_condicao_pagamento_w = 0) then 
		ie_erro_w := 'S';
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266194,'DS_RAZAO_SOCIAL=' || ds_razao_social_w);
		--'Não encontrado nenhuma condição de pagamento no cadastro da pessoa jurídica ' || ds_razao_social_w || '.'); 
	end if;
				 
	select	dt_solic_item 
	into STRICT	dt_solic_item_w 
	from	solic_compra_item 
	where	nr_solic_compra		= nr_solic_compra_w 
	and	nr_item_solic_compra	= nr_item_solic_compra_w;
			 
	select	coalesce(max(cd_comprador_padrao),0), 
		coalesce(max(cd_moeda_padrao),0) 
	into STRICT	cd_comprador_w, 
		cd_moeda_w 
	from	parametro_compras 
	where	cd_estabelecimento = cd_estabelecimento_w;
		 
	if (cd_comprador_w = 0) or (cd_moeda_w = 0) or (cd_pessoa_solic_padrao_w = 0) then 
		ie_erro_w := 'S';
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266196);
		--'Alguma destas informações nos parâmetros de compras não estão informadas.' || chr(13) || chr(10) || 
		--'Moeda; Comprador; Pessoa solicitante.'); 
	end if;
		 
		 
	select	coalesce(max(nr_ordem_compra),0) 
	into STRICT	nr_ordem_compra_w 
	from	ordem_compra 
	where	nr_seq_reg_lic_compra	= nr_sequencia_p 
	and	cd_cgc_fornecedor	= cd_cgc_fornec_w 
	and	nr_seq_licitacao	= nr_seq_licitacao_w 
	and	coalesce(dt_liberacao::text, '') = '' 
	and	coalesce(dt_baixa::text, '') = '' 
	and	coalesce(nr_seq_motivo_cancel::text, '') = '';
		 
	select	max(nr_controle_interno) 
	into STRICT	nr_controle_interno_w 
	from	reg_lic_edital 
	where	nr_seq_licitacao = nr_seq_licitacao_w;
	 
	select	coalesce(max(nr_seq_reg_compra), 0) 
	into STRICT	nr_seq_reg_compra_w 
	from	reg_lic_compra_item 
	where	nr_sequencia = nr_seq_reg_lic_compra_item_w;
 
	if (nr_seq_reg_compra_w > 0) then 
		select	max(ds_marca) 
		into STRICT	ds_marca_w 
		from	reg_compra_item 
		where	nr_seq_reg_compra	= nr_seq_reg_compra_w 
		and	nr_seq_lic_item		= nr_seq_lic_item_w 
		and	coalesce(dt_cancelamento::text, '') = '';
	end if;
	 
	if (nr_ordem_compra_w = 0) then 
 
		 select	nextval('ordem_compra_seq') 
		 into STRICT	nr_ordem_compra_w 
		;
		 
		select	coalesce(max(lic_obter_modalidade_compra(nr_seq_licitacao_w)),0) 
		into STRICT	cd_modalidade_compra_w 
		;
		 
		select	coalesce(max(lic_obter_tipo_compra_lic(nr_seq_licitacao_w)),0) 
		into STRICT	cd_tipo_compra_w 
		;
 
		insert into ordem_compra( 
			nr_ordem_compra,			cd_estabelecimento,			cd_cgc_fornecedor, 
			cd_condicao_pagamento,		cd_comprador,				dt_ordem_compra, 
			dt_atualizacao,			nm_usuario,				cd_moeda, 
			ie_situacao,			dt_inclusao,				cd_pessoa_solicitante, 
			ie_frete,				vl_frete,					pr_desconto, 
			pr_desc_pgto_antec,		pr_juros_negociado,			cd_local_entrega, 
			dt_entrega,			dt_liberacao,				ie_aviso_chegada, 
			ie_emite_obs,			ie_urgente,				ie_somente_pagto, 
			vl_despesa_acessoria,		vl_desconto,				ie_tipo_ordem, 
			nr_seq_reg_lic_compra,		nr_seq_licitacao,				nr_controle_edital, 
			nr_seq_tipo_compra,		nr_seq_mod_compra,			nr_processo_interno) 
		values (	nr_ordem_compra_w,		cd_estabelecimento_w,			cd_cgc_fornec_w, 
			cd_condicao_pagamento_w,		cd_comprador_w,				clock_timestamp(), 
			clock_timestamp(),				nm_usuario_p,				cd_moeda_w, 
			'A',				clock_timestamp(),					cd_pessoa_solic_padrao_w, 
			'C',				0,					0, 
			0,				0,					cd_local_estoque_w, 
			dt_solic_item_w,			'',					'N', 
			'S',				'N',					'N', 
			0,				0,					'L', 
			nr_sequencia_p,			nr_seq_licitacao_w,				nr_controle_interno_w, 
			cd_tipo_compra_w,			cd_modalidade_compra_w,			cd_processo_interno_w);
 
	end if;
	 
	CALL lic_grava_item_ordem_compra(	nr_ordem_compra_w,cd_material_w,cd_unid_medida_w,vl_item_w,qt_item_solic_w,null,nm_usuario_p, 
					dt_solic_item_w,nr_solic_compra_w,nr_item_solic_compra_w,nr_seq_lic_item_w,ds_marca_w,nr_seq_licitacao_w);
	 
	CALL gerar_ordem_compra_venc(nr_ordem_compra_w,nm_usuario_p);
	 
	update	reg_lic_compra_item 
	set	nr_ordem_compra = nr_ordem_compra_w 
	where	nr_sequencia = 	nr_seq_reg_lic_compra_item_w;
 
	end;
	 
	insert into reg_lic_historico( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		ie_tipo_historico, 
		ds_observacao, 
		nr_seq_licitacao) 
	values (	nextval('reg_lic_historico_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		'GO', 
		WHEB_MENSAGEM_PCK.get_texto(280938) || nr_ordem_compra_w || ')', 
		nr_seq_licitacao_w);
		 
	update	reg_lic_compra 
	set	dt_geracao_ordem_compra = clock_timestamp(), 
		nm_usuario_geracao_oc	= nm_usuario_p 
	where	nr_sequencia		= nr_sequencia_p 
	and	coalesce(dt_geracao_ordem_compra::text, '') = '';
	 
end loop;
close C01;
 
open C02;
loop 
fetch C02 into	 
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin	 
	ds_lista_materiais_w := substr(ds_lista_materiais_w || cd_material_w || ', ',1,255);	
	end;
end loop;
close C02;
 
if (ds_lista_materiais_w IS NOT NULL AND ds_lista_materiais_w::text <> '') then 
	ds_lista_materiais_w := substr(ds_lista_materiais_w,1,length(ds_lista_materiais_w)-2);
	 
	ds_erro_w := substr(WHEB_MENSAGEM_PCK.get_texto(280939) || chr(13) || chr(10) || ds_lista_materiais_w,1,255);
end if;
 
ds_erro_p := ds_erro_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lic_gerar_ordem_compra_solic ( nr_sequencia_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

