-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recep_gerar_atend_compl_age ( nm_usuario_p text, nr_seq_solicitacao_p bigint, ie_tipo_pessoa_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_origem_inf_p text, cd_setor_usuario_p bigint, nr_atendimento_gerado_p INOUT bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
			 
nr_atendimento_w	bigint;			
nr_seq_agenda_w		bigint;
cd_procedencia_w 	integer;	
cd_pessoa_fisica_w	varchar(10);
cd_medico_resp_w	varchar(10);
cd_medico_responsavel_w	varchar(10);
cd_medico_exec_w	varchar(10);	
 
cd_convenio_w 		integer;
cd_categoria_w 		varchar(10);

dt_entrada_w		timestamp;
ds_dados_agenda_w	bigint;
qt_agenda_w    	bigint;
nr_prescricao_w		bigint;
nr_doc_convenio_w 	varchar(20);
qt_procedimento_w	integer;
cd_procedimento_w	bigint;
nr_seq_interno_w	bigint;
nr_seq_prescr_proc_w 	integer;

nr_seq_proc_interno_w	bigint;
ie_origem_proced_w	bigint;
cd_senha_w		varchar(20);
cd_plano_convenio_w 	varchar(10);
dt_prescricao_w		timestamp;
dt_primeiro_horario_w	timestamp;
cd_setor_atendimento_w	integer;
qt_gerou_atend_w	bigint;			
			 

BEGIN 
 
 
if (nr_seq_solicitacao_p > 0) then 
 
	select	coalesce(max(nr_seq_agenda_exame),0) 
	into STRICT	nr_seq_agenda_w 
	from 	agenda_integrada_item 
	where	nr_seq_solic_compl = nr_seq_solicitacao_p;
	 
	select	cd_medico_resp 
	into STRICT 	cd_medico_responsavel_w 
	from  	atendimento_paciente a, 
		solicitacao_exame_compl b 
	where	a.nr_atendimento = b.nr_atendimento 
	and	b.nr_sequencia = nr_seq_solicitacao_p;
	 
	if (nr_seq_agenda_w > 0) then 
		 
		select	cd_procedencia, 
			cd_pessoa_fisica, 
			cd_medico, 
			cd_medico_exec 
		into STRICT	cd_procedencia_w, 
			cd_pessoa_fisica_w, 
			cd_medico_resp_w, 
			cd_medico_exec_w 
		from	agenda_paciente 
		where	nr_sequencia = nr_seq_agenda_w;
	 
		if (coalesce(cd_procedencia_w::text, '') = '') then 
			select	max(cd_procedencia) 
			into STRICT	cd_procedencia_w 
			from	procedencia 
			where	cd_estabelecimento = cd_estabelecimento_p;
		end if;
		 
		select	nextval('atendimento_paciente_seq') 
		into STRICT	nr_atendimento_w 
		;
		 
		insert into atendimento_paciente(nr_atendimento, 
						ie_permite_visita, 
						dt_entrada, 
						ie_tipo_atendimento, 
						cd_procedencia, 
						cd_medico_resp, 
						cd_pessoa_fisica, 
						cd_estabelecimento, 
						dt_atualizacao, 
						nm_usuario, 
						nm_usuario_atend) 
					values (nr_atendimento_w, 
						'N', 
						clock_timestamp(), 
						7, 
						cd_procedencia_w, 
						coalesce(cd_medico_resp_w,cd_medico_responsavel_w), 
						cd_pessoa_fisica_w, 
						cd_estabelecimento_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nm_usuario_p);
		 
		select	cd_convenio, 
			cd_categoria, 
			nr_doc_convenio, 
			ds_senha, 
			cd_plano, 
			cd_setor_atendimento, 
			cd_procedimento, 
			1, 
			nr_seq_proc_interno, 
			ie_origem_proced 
		into STRICT	cd_convenio_w, 
			cd_categoria_w, 
			nr_doc_convenio_w, 
			cd_senha_w, 
			cd_plano_convenio_w, 
			cd_setor_atendimento_w, 
			cd_procedimento_w, 
			qt_procedimento_w, 
			nr_seq_proc_interno_w, 
			ie_origem_proced_w 
		from	agenda_paciente 
		where	nr_sequencia = nr_seq_agenda_w;
		 
		select	nextval('atend_categoria_convenio_seq') 
		into STRICT	nr_seq_interno_w 
		;
		 
		 
		select	dt_entrada 
		into STRICT	dt_entrada_w 
		from	atendimento_paciente 
		where	nr_atendimento = nr_atendimento_w;
		 
		insert into atend_categoria_convenio(  cd_convenio, 
		     				cd_categoria, 
							dt_inicio_vigencia, 
							nr_seq_interno, 
							nr_atendimento, 
							dt_atualizacao, 
							nm_usuario, 
							nr_doc_convenio, 
							cd_senha, 
							cd_plano_convenio) 
						values (cd_convenio_w, 
							cd_categoria_w, 
							clock_timestamp(), 
							nr_seq_interno_w, 
							nr_atendimento_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_doc_convenio_w, 
							cd_senha_w, 
							cd_plano_convenio_w);
						 
		SELECT * FROM gerar_pass_conv_agendamento_js(2, nr_seq_agenda_w, 'N', nr_atendimento_w, dt_entrada_w, nm_usuario_p, ds_dados_agenda_w, qt_agenda_w) INTO STRICT ds_dados_agenda_w, qt_agenda_w;
		 
		 
		dt_prescricao_w := clock_timestamp();
		dt_primeiro_horario_w := Obter_Prim_Horario_Prescricao(nr_atendimento_w, coalesce(cd_setor_atendimento_w,cd_setor_usuario_p),dt_prescricao_w,nm_usuario_p,'R');
	 
		select nextval('prescr_medica_seq') 
		into STRICT	nr_prescricao_w 
		;
		 
		insert into prescr_medica(   nr_prescricao, 
					    cd_pessoa_fisica, 
						dt_prescricao, 
						nr_atendimento, 
						dt_atualizacao, 
						nm_usuario, 
						nr_doc_conv, 
						nr_seq_atecaco, 
						cd_medico, 
						cd_senha, 
						cd_estabelecimento, 
						nr_horas_validade, 
						dt_entrega, 
						ie_origem_inf, 
						cd_setor_atendimento, 
						dt_primeiro_horario) 
					values (nr_prescricao_w, 
						cd_pessoa_fisica_w, 
						dt_prescricao_w, 
						nr_atendimento_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_doc_convenio_w, 
						nr_seq_interno_w, 
						coalesce(cd_medico_resp_w,cd_medico_responsavel_w), 
						cd_senha_w, 
						cd_estabelecimento_p, 
						24, 
						clock_timestamp(), 
						ie_origem_inf_p, 
						coalesce(cd_setor_atendimento_w,cd_setor_usuario_p), 
						dt_primeiro_horario_w);
		 
		if (cd_procedimento_w > 0) and (nr_prescricao_w > 0) then 
	 
	 
			select	coalesce(max(nr_sequencia), 0) + 1 
			into STRICT	nr_seq_prescr_proc_w 
			from	prescr_procedimento 
			where	nr_prescricao = nr_prescricao_w;
			 
			insert into prescr_procedimento(cd_procedimento, 
							qt_procedimento, 
							nr_prescricao, 
							nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							ie_origem_inf, 
							ie_origem_proced, 
							nr_seq_proc_interno, 
							nr_doc_convenio, 
							cd_senha, 
							nr_seq_agenda, 
							cd_motivo_baixa, 
							ie_suspenso)	 
						values (cd_procedimento_w, 
							1, 
							nr_prescricao_w, 
							nr_seq_prescr_proc_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							1, 
							ie_origem_proced_w, 
							nr_seq_proc_interno_w, 
							nr_doc_convenio_w, 
							cd_senha_w, 
							nr_seq_agenda_w, 
							0, 
							'N');
	 
			select	count(*) 
			into STRICT	qt_gerou_atend_w 
			from	atendimento_paciente a, 
				atend_categoria_convenio b, 
				prescr_medica c 
			where  a.nr_atendimento = nr_atendimento_w	 
			and	a.nr_atendimento = b.nr_atendimento 
			and	a.nr_atendimento = c.nr_atendimento;
	 
			if (qt_gerou_atend_w > 0) then 
			 
				nr_atendimento_gerado_p := nr_atendimento_w;
				 
				update	solicitacao_exame_compl 
				set	cd_status = 30, 
					nm_usuario = nm_usuario_p, 
					dt_atualizacao = clock_timestamp(), 
					dt_recepcionado = clock_timestamp() 
				where	nr_sequencia = nr_seq_solicitacao_p;
				 
				if (nr_prescricao_w > 0) then 
 
					ds_erro_p := liberar_prescricao(nr_prescricao_w, nr_atendimento_w, ie_tipo_pessoa_p, cd_perfil_p, nm_usuario_p, 'N', ds_erro_p);
			 
				end if;
			end if;
		end if;
		 
		 
	end if;
 
end if;
commit;
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recep_gerar_atend_compl_age ( nm_usuario_p text, nr_seq_solicitacao_p bigint, ie_tipo_pessoa_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_origem_inf_p text, cd_setor_usuario_p bigint, nr_atendimento_gerado_p INOUT bigint, ds_erro_p INOUT text) FROM PUBLIC;

