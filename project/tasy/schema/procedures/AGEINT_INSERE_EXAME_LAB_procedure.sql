-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_insere_exame_lab (nr_sequencia_p bigint, nr_seq_ageint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, ie_copia_convenio_p text) AS $body$
DECLARE

 
nr_sequencia_w		bigint;
ds_proc_exame_w 	varchar(100);
ds_arquivo_w		varchar(255);
nr_seq_anexo_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_seq_exame_w		bigint;
nr_seq_proc_interno_aux_w	bigint;
ie_tipo_atendimento_w	smallint;
ie_tipo_convenio_w	smallint;
ds_erro_w		varchar(255);
cd_se3tor_w		bigint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);

nr_seq_lab_item_cp	ageint_exame_lab.nr_sequencia%type;

C01 CURSOR FOR 
	SELECT	nr_seq_proc_interno, 
			nr_seq_exame 
	from	ageint_regra_exame_lab 
	where	nr_sequencia = nr_sequencia_p 
	order by 	nr_sequencia;

c02 CURSOR FOR 
	SELECT	a.ds_proc_exame ds_proc, 
			b.ds_arquivo ds_arquivo 
	from  	proc_interno a, 
			ageint_proc_int_arquivo b 
	where 	a.nr_sequencia = b.nr_seq_proc_interno 
	and		b.nr_seq_proc_interno = nr_seq_proc_interno_w 
	and		a.ie_situacao = 'A' 
	order by	ds_proc;

BEGIN
 
if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') then 
	cd_convenio_w	:= cd_convenio_p;
	cd_categoria_w	:= cd_categoria_p;
	cd_plano_w		:= cd_plano_p;
else 
	select	max(ie_tipo_atendimento), 
			max(cd_convenio), 
			max(cd_categoria), 
			max(cd_plano) 
	into STRICT	ie_tipo_atendimento_w, 
			cd_convenio_w, 
			cd_categoria_w, 
			cd_plano_w 
	from	agenda_integrada 
	where	nr_sequencia = nr_seq_ageint_p;
end if;
 
select	max(ie_tipo_convenio) 
into STRICT	ie_tipo_convenio_w 
from	convenio 
where	cd_convenio = cd_convenio_w;
 
open C01;
loop 
fetch C01 into 
	nr_seq_proc_interno_w, 
	nr_seq_exame_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	if	((nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) then 
 
		select	nextval('ageint_exame_lab_seq') 
		into STRICT	nr_sequencia_w 
		;
 
		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then 
 
			SELECT * FROM obter_proc_tab_interno_conv( 
						  nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, null, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		else 
			SELECT * FROM obter_exame_lab_convenio( 
						nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_p, ie_tipo_convenio_w, null, null, cd_plano_w, cd_se3tor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w, clock_timestamp()) INTO STRICT cd_se3tor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
		end if;
 
		insert into ageint_exame_lab( 
					   nr_sequencia, 
					   dt_atualizacao, 
					   nm_usuario, 
					   dt_atualizacao_nrec, 
					   nm_usuario_nrec, 
					   nr_seq_proc_interno, 
					   nr_seq_ageint, 
					   cd_procedimento, 
					   ie_origem_proced, 
					   nr_seq_exame 
					   ) 
		values ( 
					   nr_sequencia_w, 
					   clock_timestamp(), 
					   nm_usuario_p, 
					   clock_timestamp(), 
					   nm_usuario_p, 
					   nr_seq_proc_interno_w, 
					   nr_seq_ageint_p, 
					   cd_procedimento_w, 
					   ie_origem_proced_w, 
					   nr_seq_exame_w 
					   );
						 
		if (coalesce(ie_copia_convenio_p,'N') = 'S') then 
			--verifica se existe um cadastro com o convênio já informado 
			select	max(a.nr_sequencia) 
			into STRICT	nr_seq_lab_item_cp 
			from	ageint_exame_lab a 
			where	a.nr_seq_ageint = nr_seq_ageint_p 
			and		exists (SELECT 1 from ageint_exame_lab_conv_item c where c.nr_seq_lab_item = a.nr_sequencia);
			 
			if (nr_seq_lab_item_cp IS NOT NULL AND nr_seq_lab_item_cp::text <> '') then 
				CALL mmed_copiar_convenio_exame_lab(nr_seq_lab_item_cp,nr_sequencia_w, nm_usuario_p);
			end if;
			 
		end if;
 
		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then 
			open C02;
			loop 
			fetch C02 into 
				ds_proc_exame_w, 
				ds_arquivo_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
 
				if (ds_arquivo_w IS NOT NULL AND ds_arquivo_w::text <> '') then 
					select 	nextval('ageint_arq_anexo_email_seq') 
					into STRICT	nr_seq_anexo_w 
					;
 
					insert into AGEINT_ARQ_ANEXO_EMAIL( 
						nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_agenda_int, 
						ds_arquivo 
						) 
					values ( 
						nr_seq_anexo_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_ageint_p, 
						ds_arquivo_w 
						);
 
				end if;
				end;
			end loop;
			close C02;
		end if;
	end if;
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_insere_exame_lab (nr_sequencia_p bigint, nr_seq_ageint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, ie_copia_convenio_p text) FROM PUBLIC;

