-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_obter_regra_pacote_ptu ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, cd_servico_p ptu_nota_servico.cd_servico%type, cd_pacote_p INOUT pls_regra_pacote_ptu.cd_pacote%type, nr_seq_regra_pacote_ptu_p INOUT pls_regra_pacote_ptu.nr_sequencia%type, nr_seq_pacote_p pls_pacote.nr_sequencia%type ) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter regra de agrupamento de item no PTU.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Alterações:
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_regra_w			pls_regra_pacote_ptu.nr_sequencia%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
dt_referencia_w			pls_conta_proc.dt_procedimento%type;
nr_seq_grupo_rec_w		procedimento.nr_seq_grupo_rec%type;
nr_seq_material_w		pls_material.nr_sequencia%type;
cd_pacote_w			pls_regra_pacote_ptu.cd_pacote%type;

C01 CURSOR(	dt_referencia_pc	pls_conta_proc.dt_procedimento%type,
		cd_procedimento_pc	procedimento.cd_procedimento%type,
		ie_origem_proced_pc	procedimento.ie_origem_proced%type,
		nr_seq_grupo_rec_pc	procedimento.nr_seq_grupo_rec%type,
		nr_seq_pacote_pc	pls_pacote.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		cd_pacote
	from	pls_regra_pacote_ptu
	where	ie_tipo_validacao = 'P'
	and	dt_referencia_pc between dt_inicio_vigencia and dt_fim_vigencia_ref
	and	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento = cd_procedimento_pc AND ie_origem_proced = ie_origem_proced_pc))
	and	((coalesce(nr_seq_grupo_rec::text, '') = '') or (nr_seq_grupo_rec = nr_seq_grupo_rec_pc))
	and	((coalesce(nr_seq_pacote::text, '') = '') or (nr_seq_pacote = nr_seq_pacote_pc))
	order by
		coalesce(nr_seq_pacote,1),
		coalesce(nr_seq_grupo_rec, 1),
		coalesce(cd_procedimento, 1);

C02 CURSOR(	dt_referencia_pc	pls_conta_proc.dt_procedimento%type,
		nr_seq_material_pc	pls_material.nr_sequencia%type,
		cd_servico_pc		ptu_nota_servico.cd_servico%type,
		nr_seq_pacote_pc	pls_pacote.nr_sequencia%type)FOR
	SELECT	nr_sequencia,
		cd_pacote
	from	pls_regra_pacote_ptu
	where	ie_tipo_validacao = 'M'
	and	dt_referencia_pc between dt_inicio_vigencia and dt_fim_vigencia_ref
	and	((coalesce(nr_seq_material::text, '') = '') or (nr_seq_material = nr_seq_material_pc))
	and	(((coalesce(cd_material_inicial::text, '') = '') and (coalesce(cd_material_final::text, '') = '')) or (cd_servico_pc between cd_material_inicial and cd_material_final))
	and	((coalesce(nr_seq_pacote::text, '') = '') or (nr_seq_pacote = nr_seq_pacote_pc))
	order by
		coalesce(nr_seq_pacote,1),
		coalesce(nr_seq_material, 1),
		coalesce(cd_material_inicial, 1);
BEGIN
nr_seq_regra_w	:= null;
cd_pacote_w 	:= null;

if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
	select	cd_procedimento,
		ie_origem_proced,
		dt_procedimento
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		dt_referencia_w
	from	pls_conta_proc
	where	nr_sequencia = nr_seq_conta_proc_p;

	select	max(nr_seq_grupo_rec)
	into STRICT	nr_seq_grupo_rec_w
	from	procedimento
	where	cd_procedimento = cd_procedimento_w
	and	ie_origem_proced = ie_origem_proced_w;

	for r_C01_w in C01(dt_referencia_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_grupo_rec_w, nr_seq_pacote_p) loop
		nr_seq_regra_w	:= r_C01_w.nr_sequencia;
		cd_pacote_w	:= r_C01_w.cd_pacote;
	end loop;
elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
	select	nr_seq_material,
		dt_atendimento
	into STRICT	nr_seq_material_w,
		dt_referencia_w
	from	pls_conta_mat
	where	nr_sequencia = nr_seq_conta_mat_p;

	for r_C02_w in C02(dt_referencia_w, nr_seq_material_w, cd_servico_p, nr_seq_pacote_p)loop
		nr_seq_regra_w	:= r_C02_w.nr_sequencia;
		cd_pacote_w	:= r_C02_w.cd_pacote;
	end loop;
end if;

cd_pacote_p := cd_pacote_w;
nr_seq_regra_pacote_ptu_p := nr_seq_regra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_obter_regra_pacote_ptu ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, cd_servico_p ptu_nota_servico.cd_servico%type, cd_pacote_p INOUT pls_regra_pacote_ptu.cd_pacote%type, nr_seq_regra_pacote_ptu_p INOUT pls_regra_pacote_ptu.nr_sequencia%type, nr_seq_pacote_p pls_pacote.nr_sequencia%type ) FROM PUBLIC;

