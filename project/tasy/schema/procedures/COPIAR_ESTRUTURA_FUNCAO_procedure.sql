-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_estrutura_funcao ( modulo_sequence_p bigint, nr_seq_area_modulo_p bigint, nr_seq_modulo_funcao_p bigint, nm_usuario_p text) AS $body$
DECLARE

    funcao_sequence_w	bigint;
    cd_funcao_w		mkt_modulo_funcao.cd_funcao%type;
    mkt_funcao_mercado_seq_w		mkt_funcao_mercado.nr_sequencia%type;

	C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_mercado
	from	mkt_funcao_mercado a
	where	nr_seq_mod_fun = nr_seq_modulo_funcao_p
	and	nr_seq_mercado not in ((	SELECT	nr_seq_mercado
					from	mkt_funcao_mercado a
					where	nr_seq_mod_fun = funcao_sequence_w));

	C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_mercado,
		mkt.nr_sequencia nr_seq_antigo
	from	mkt_funcao_mercado a,
		(	SELECT	b.nr_seq_mercado,
				b.nr_sequencia
			from	mkt_funcao_mercado b
			where	b.nr_seq_mod_fun = nr_seq_modulo_funcao_p) mkt
	where	a.nr_seq_mod_fun = funcao_sequence_w
	and	a.nr_seq_mercado in (mkt.nr_seq_mercado);
BEGIN
    select	max(cd_funcao)
    into STRICT	cd_funcao_w
    from	mkt_modulo_funcao
    where	nr_seq_area_modulo = nr_seq_area_modulo_p
    and	    nr_sequencia = nr_seq_modulo_funcao_p;

    if (cd_funcao_w IS NOT NULL AND cd_funcao_w::text <> '') then
        select nextval('mkt_modulo_funcao_seq') into STRICT funcao_sequence_w;

        insert	into	mkt_modulo_funcao(	nr_sequencia,
                            dt_atualizacao,
                            dt_atualizacao_nrec,
                            nm_usuario,
                            nm_usuario_nrec,
                            cd_funcao,
                            nr_seq_area_modulo)
            values (	funcao_sequence_w,
                clock_timestamp(),
                clock_timestamp(),
                nm_usuario_p,
                nm_usuario_p,
                cd_funcao_w,
                modulo_sequence_p);
		
	insert into mkt_in_charge(	nr_sequencia,
					ie_situacao,
					cd_pessoa_fisica,
					nm_usuario,
					dt_atualizacao,
					nr_seq_area_modulo,
					nr_seq_modulo_mercado,
					nr_seq_modulo_funcao,
					nr_seq_funcao_mercado,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_area_mercado,
					nr_seq_produto_area,
					nr_seq_produto_mercado,
					nr_seq_mercado,
					ds_note,
					nr_seq_produto)
		SELECT	nextval('mkt_in_charge_seq'),
			ie_situacao,
			cd_pessoa_fisica,
			nm_usuario_p,
			clock_timestamp(),
			modulo_sequence_p,
			nr_seq_modulo_mercado,
			funcao_sequence_w,
			nr_seq_funcao_mercado,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_area_mercado,
			nr_seq_produto_area,
			nr_seq_produto_mercado,
			nr_seq_mercado,
			ds_note,
			nr_seq_produto
		from	mkt_in_charge
		where	nr_seq_modulo_funcao = nr_seq_modulo_funcao_p;
		
	for r_c01 in c01 loop
		select nextval('mkt_funcao_mercado_seq') into STRICT mkt_funcao_mercado_seq_w;
		insert into mkt_funcao_mercado(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_mod_fun,
						nr_seq_mercado )
			values (	mkt_funcao_mercado_seq_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					funcao_sequence_w,
					r_c01.nr_seq_mercado );
		

		insert into mkt_in_charge(	nr_sequencia,
						ie_situacao,
						cd_pessoa_fisica,
						nm_usuario,
						dt_atualizacao,
						nr_seq_area_modulo,
						nr_seq_modulo_mercado,
						nr_seq_modulo_funcao,
						nr_seq_funcao_mercado,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_area_mercado,
						nr_seq_produto_area,
						nr_seq_produto_mercado,
						nr_seq_mercado,
						ds_note,
						nr_seq_produto)
			SELECT	nextval('mkt_in_charge_seq'),
				ie_situacao,
				cd_pessoa_fisica,
				nm_usuario_p,
				clock_timestamp(),
				modulo_sequence_p,
				nr_seq_modulo_mercado,
				funcao_sequence_w,
				mkt_funcao_mercado_seq_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_area_mercado,
				nr_seq_produto_area,
				nr_seq_produto_mercado,
				r_c01.nr_seq_mercado,
				ds_note,
				nr_seq_produto
			from	mkt_in_charge
			where	nr_seq_funcao_mercado = r_c01.nr_sequencia;
	end loop;

	for r_c02 in c02 loop

		insert into mkt_in_charge(	nr_sequencia,
						ie_situacao,
						cd_pessoa_fisica,
						nm_usuario,
						dt_atualizacao,
						nr_seq_area_modulo,
						nr_seq_modulo_mercado,
						nr_seq_modulo_funcao,
						nr_seq_funcao_mercado,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_area_mercado,
						nr_seq_produto_area,
						nr_seq_produto_mercado,
						nr_seq_mercado,
						ds_note,
						nr_seq_produto)
			SELECT	nextval('mkt_in_charge_seq'),
				ie_situacao,
				cd_pessoa_fisica,
				nm_usuario_p,
				clock_timestamp(),
				modulo_sequence_p,
				nr_seq_modulo_mercado,
				funcao_sequence_w,
				r_c02.nr_sequencia,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_area_mercado,
				nr_seq_produto_area,
				nr_seq_produto_mercado,
				r_c02.nr_seq_mercado,
				ds_note,
				nr_seq_produto
			from	mkt_in_charge
			where	nr_seq_funcao_mercado = r_c02.nr_seq_antigo;
	end loop;
        commit;
    end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_estrutura_funcao ( modulo_sequence_p bigint, nr_seq_area_modulo_p bigint, nr_seq_modulo_funcao_p bigint, nm_usuario_p text) FROM PUBLIC;

