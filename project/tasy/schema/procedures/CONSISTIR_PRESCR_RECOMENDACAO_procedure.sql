-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_prescr_recomendacao ( nr_prescricao_p bigint, nr_seq_recomendacao_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


/*	Erros
	0   - Não tem erro
	124 - Tem erro mas permite liberar a prescrição
	125 - Tem erro e não permite liberar a prescrição

	As consistências 125 devem fical no final da procedure;
*/
cd_intervalo_w			varchar(7);
cd_recomendacao_w		bigint;
nr_seq_recomendacao_w	bigint;
qt_w					bigint;
ds_horarios_w			varchar(2000);
ds_horarios_inconsistentes_w	varchar(4000);
ds_recomendacao_w		varchar(4000);
dt_validade_prescr_w	timestamp;
nr_atendimento_w		bigint;
ie_erro_liberar_prescr_w	varchar(1);
ie_acm_w			varchar(1);
ie_se_necessario_w		varchar(1);
ie_urgencia_w			varchar(1);
nr_seq_erro_w			bigint;
qt_erro_nao_lib_w		bigint;
qt_erro_lib_w			bigint;


c00 REFCURSOR;


BEGIN

if (coalesce(nr_prescricao_p,0) > 0) then

	if (coalesce(nr_seq_recomendacao_p,0) > 0) then
		delete
		from	prescr_medica_erro
		where	nr_prescricao		= nr_prescricao_p
		and	nr_seq_recomendacao	= nr_seq_recomendacao_p;

		open c00 for
		SELECT	cd_intervalo,
			ds_horarios,
			cd_recomendacao,
			ds_recomendacao,
			ie_urgencia,
			ie_se_necessario,
			ie_acm,
			nr_sequencia
		from 	prescr_recomendacao
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia 	= nr_seq_recomendacao_p;
	else
		delete
		from	prescr_medica_erro
		where	nr_prescricao		= nr_prescricao_p
		and	(nr_seq_recomendacao IS NOT NULL AND nr_seq_recomendacao::text <> '');

		open c00 for
		SELECT	cd_intervalo,
			ds_horarios,
			cd_recomendacao,
			ds_recomendacao,
			ie_urgencia,
			ie_se_necessario,
			ie_acm,
			nr_sequencia
		from 	prescr_recomendacao
		where	nr_prescricao	= nr_prescricao_p;
	end if;

	select	max(nr_atendimento),
			max(dt_validade_prescr)
	into STRICT	nr_atendimento_w,
			dt_validade_prescr_w
	from	prescr_medica
	where	nr_prescricao	= nr_prescricao_p;

	loop
	fetch c00 into
		cd_intervalo_w,
		ds_horarios_w,
		cd_recomendacao_w,
		ds_recomendacao_w,
		ie_urgencia_w,
		ie_se_necessario_w,
		ie_acm_w,
		nr_seq_recomendacao_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */

		if (coalesce(cd_recomendacao_w::text, '') = '') and (coalesce(ds_recomendacao_w::text, '') = '') and (wheb_assist_pck.Obter_Se_Consiste_REP(226,cd_perfil_p) = 'S') then
			ie_erro_liberar_prescr_w	:= obter_lib_erro_regra_rep(226, cd_perfil_p);
			nr_seq_erro_w := gerar_erro_prescr_recomend(nr_prescricao_p, nr_seq_recomendacao_w, 226, ie_erro_liberar_prescr_w, null, cd_perfil_p, nm_usuario_p, nr_seq_erro_w);
		end if;

		if (coalesce(cd_intervalo_w::text, '') = '') and (wheb_assist_pck.Obter_Se_Consiste_REP(227,cd_perfil_p) = 'S') then
			ie_erro_liberar_prescr_w	:= obter_lib_erro_regra_rep(227, cd_perfil_p);
			nr_seq_erro_w := gerar_erro_prescr_recomend(nr_prescricao_p, nr_seq_recomendacao_w, 227, ie_erro_liberar_prescr_w, null, cd_perfil_p, nm_usuario_p, nr_seq_erro_w);
		end if;

		if (coalesce(ie_urgencia_w,'N')		= 'N') and (coalesce(ie_se_necessario_w,'N')	= 'N') and (coalesce(ie_acm_w,'N')		= 'N') and (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') and (wheb_assist_pck.Obter_Se_Consiste_REP(231,cd_perfil_p) = 'S') then
			begin
			select	max(Obter_Se_hor_validade_rec(nr_prescricao_p, nr_seq_recomendacao_w))
			into STRICT	ds_horarios_inconsistentes_w
			;
			exception when others then
				ds_horarios_inconsistentes_w := null;
			end;

			if (ds_horarios_inconsistentes_w IS NOT NULL AND ds_horarios_inconsistentes_w::text <> '') then
				ie_erro_liberar_prescr_w	:= obter_lib_erro_regra_rep(231, cd_perfil_p);
				nr_seq_erro_w := gerar_erro_prescr_recomend(nr_prescricao_p, nr_seq_recomendacao_w, 231, ie_erro_liberar_prescr_w, null, cd_perfil_p, nm_usuario_p, nr_seq_erro_w);
			end if;

		end if;

		if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and (wheb_assist_pck.Obter_Se_Consiste_REP(266,cd_perfil_p) = 'S') then

			select	count(*)
			into STRICT	qt_w
			from	prescr_recomendacao x,
					prescr_medica b
			where	x.nr_prescricao = b.nr_prescricao
			and		x.cd_intervalo	= cd_intervalo_w
			and		x.cd_recomendacao = cd_recomendacao_w
			and		b.nr_prescricao <> nr_prescricao_p
			and		b.nr_atendimento 	 = nr_atendimento_w
			and		b.dt_prescricao > clock_timestamp() - interval '5 days'
			and		(coalesce(b.dt_liberacao, b.dt_liberacao_medico) IS NOT NULL AND (coalesce(b.dt_liberacao, b.dt_liberacao_medico))::text <> '')
			and		b.dt_validade_prescr = dt_validade_prescr_w  LIMIT 1;

			if (qt_w > 0) then
				ie_erro_liberar_prescr_w	:= obter_lib_erro_regra_rep(266, cd_perfil_p);
				nr_seq_erro_w := gerar_erro_prescr_recomend(nr_prescricao_p, nr_seq_recomendacao_w, 266, ie_erro_liberar_prescr_w, null, cd_perfil_p, nm_usuario_p, nr_seq_erro_w);
			end if;
		end if;

		select	count(*)
		into STRICT	qt_erro_nao_lib_w
		from	prescr_medica_erro
		where	nr_prescricao		= nr_prescricao_p
		and	nr_seq_recomendacao	= nr_seq_recomendacao_w
		and	ie_libera		= 'N'  LIMIT 1;

		select	count(*)
		into STRICT	qt_erro_lib_w
		from	prescr_medica_erro
		where	nr_prescricao		= nr_prescricao_p
		and	nr_seq_recomendacao	= nr_seq_recomendacao_w
		and	ie_libera		= 'S'  LIMIT 1;

		if (qt_erro_nao_lib_w > 0) then

			update	prescr_recomendacao
			set	ie_erro		= 125,
				ds_cor_erro	= obter_cor_erro_prescr_rec(nr_prescricao_p, nr_seq_recomendacao_w, 125, cd_estabelecimento_p, cd_perfil_p)
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_recomendacao_w;

			ds_erro_p	:= '125';

		elsif (qt_erro_lib_w > 0) then

			update	prescr_recomendacao
			set	ie_erro		= 124,
				ds_cor_erro	= obter_cor_erro_prescr_rec(nr_prescricao_p, nr_seq_recomendacao_w, 124, cd_estabelecimento_p, cd_perfil_p)
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_recomendacao_w;
		else

			update	prescr_recomendacao
			set	ie_erro		= 0,
				ds_cor_erro	 = NULL
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_recomendacao_w;
		end if;
	end loop;
	close c00;
end if;

commit;

if (coalesce(nr_seq_recomendacao_p,0) > 0) then
	select	max(ie_erro)
	into STRICT	ds_erro_p
	from	prescr_recomendacao
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_recomendacao_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_prescr_recomendacao ( nr_prescricao_p bigint, nr_seq_recomendacao_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

