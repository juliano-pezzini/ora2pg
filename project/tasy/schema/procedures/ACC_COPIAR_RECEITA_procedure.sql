-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE acc_copiar_receita ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_receita_origem_w		nut_receita.nr_sequencia%type;
nr_seq_receita_novo_w		nut_receita.nr_sequencia%type;
ds_receita_w			nut_receita.ds_receita%type;
qt_rendimento_w			nut_receita.qt_rendimento%type;
qt_receita_w			bigint;
nr_seq_rec_comp_orig_w		nut_receita_comp.nr_sequencia%type;
nr_seq_rec_comp_novo_w		nut_receita_comp.nr_sequencia%type;
nr_seq_genero_origem_w		nut_genero_alim.nr_sequencia%type;
nr_seq_genero_novo_w		nut_genero_alim.nr_sequencia%type;
nr_seq_genero_calc_orig_w	nut_genero_alim.nr_sequencia%type;
nr_seq_genero_calc_novo_w	nut_genero_alim.nr_sequencia%type;
ds_genero_w			nut_genero_alim.ds_genero%type;
cd_material_w			nut_genero_alim.cd_material%type;
qt_conversao_w			nut_genero_alim.qt_conversao%type;
qt_fator_correcao_w		nut_genero_alim.qt_fator_correcao%type;
cd_unidade_medida_w		nut_genero_alim.cd_unidade_medida%type;
ds_genero_calc_w		nut_genero_alim.ds_genero%type;
cd_material_calc_w		nut_genero_alim.cd_material%type;
qt_conversao_calc_w		nut_genero_alim.qt_conversao%type;
qt_fator_correcao_calc_w	nut_genero_alim.qt_fator_correcao%type;
cd_unidade_medida_calc_w	nut_genero_alim.cd_unidade_medida%type;
nr_seq_modo_preparo_w           nut_modo_preparo.nr_sequencia%type;
				
C01 CURSOR FOR
	SELECT	nr_sequencia
	from	nut_receita
	where	cd_estabelecimento = cd_estab_origem_p
	order by 1;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_gen_alim,
		nr_seq_gen_alim_calc
	from	nut_receita_comp
	where	nr_seq_receita = nr_seq_receita_origem_w
	order by 1;

C03 CURSOR FOR
        SELECT	nr_sequencia
        from	nut_modo_preparo
        where	nr_seq_receita = nr_seq_receita_origem_w
        order by 1;

C04 CURSOR FOR
	SELECT  DS_GRUPO,                
                DT_ATUALIZACAO,          
                DT_ATUALIZACAO_NREC,
                NM_USUARIO,              
                NM_USUARIO_NREC,         
                NR_SEQ_APRES
        from	nut_grupo_receita
        where   cd_estabelecimento = cd_estab_origem_p
        and     cd_estabelecimento <> cd_estab_destino_p;

BEGIN

open C01;
loop
fetch C01 into	
	nr_seq_receita_origem_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
        for r_C04 in C04 loop
        	begin
        	insert into nut_grupo_receita( nr_sequencia,
                        CD_ESTABELECIMENTO,
                        DS_GRUPO,                
                        DT_ATUALIZACAO,          
                        DT_ATUALIZACAO_NREC,
                        NM_USUARIO,              
                        NM_USUARIO_NREC,         
                        NR_SEQ_APRES)
                values (nextval('nut_grupo_receita_seq'),
                        cd_estab_destino_p,
                        r_C04.DS_GRUPO,                
                        r_C04.DT_ATUALIZACAO,          
                        r_C04.DT_ATUALIZACAO_NREC,
                        r_C04.NM_USUARIO,              
                        r_C04.NM_USUARIO_NREC,         
                        r_C04.NR_SEQ_APRES);
        	end;
        end loop;
        
	select	ds_receita,
		qt_rendimento
	into STRICT	ds_receita_w,
		qt_rendimento_w
	from	nut_receita
	where	nr_sequencia = nr_seq_receita_origem_w;
	
	select	count(*)
	into STRICT	qt_receita_w
	from	nut_receita
	where	ds_receita = ds_receita_w
	and	qt_rendimento = qt_rendimento_w
	and	cd_estabelecimento = cd_estab_destino_p;
	
	if (qt_receita_w = 0) then
		select	nextval('nut_receita_seq')
		into STRICT	nr_seq_receita_novo_w
		;
		
		insert into nut_receita(	
			nr_sequencia,
			ds_receita,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			qt_refeicao,
			ie_situacao,
			qt_g_pessoa,
			ds_preparo,
			nr_seq_grupo,
			nr_seq_composicao,
			qt_rendimento)
		(SELECT	nr_seq_receita_novo_w,
			a.ds_receita,
			cd_estab_destino_p,
			clock_timestamp(),
			nm_usuario_p,
			a.qt_refeicao,
			a.ie_situacao,
			a.qt_g_pessoa,
			a.ds_preparo,
			--NR_SEQ_GRUPO,  De x Para
                        (select max(x.nr_sequencia)
                        from    nut_grupo_receita x
                        where   x.ds_grupo = (  SELECT max(y.ds_grupo)
                                                from nut_grupo_receita y
                                                where y.nr_sequencia = a.nr_Seq_grupo)
                        and     x.cd_estabelecimento = cd_estab_destino_p),                                                
			a.nr_seq_composicao,
			a.qt_rendimento
		from	nut_receita a
		where	a.nr_sequencia = nr_seq_receita_origem_w);
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_rec_comp_orig_w,
			nr_seq_genero_origem_w,
			nr_seq_genero_calc_orig_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			-- Obter o gênero alimentício do estabelecimento atual
			select	max(ds_genero),
				max(cd_material),
				max(qt_conversao),
				max(qt_fator_correcao),
				max(cd_unidade_medida)
			into STRICT	ds_genero_w,
				cd_material_w,
				qt_conversao_w,
				qt_fator_correcao_w,
				cd_unidade_medida_w
			from	nut_genero_alim
			where	nr_sequencia = nr_seq_genero_origem_w;
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_genero_novo_w
			from	nut_genero_alim
			where	ds_genero = ds_genero_w
			and	coalesce(cd_material,0) = coalesce(cd_material_w,0)
			and	qt_conversao = qt_conversao_w
			and	qt_fator_correcao = qt_fator_correcao_w
			and	coalesce(cd_unidade_medida,'0') = coalesce(cd_unidade_medida_w,'0')
			and	cd_estabelecimento = cd_estab_destino_p;
			
			-- Obter o gênero alimentício cálculo do estabelecimento atual
			select	max(ds_genero),
				max(cd_material),
				max(qt_conversao),
				max(qt_fator_correcao),
				max(cd_unidade_medida)
			into STRICT	ds_genero_calc_w,
				cd_material_calc_w,
				qt_conversao_calc_w,
				qt_fator_correcao_calc_w,
				cd_unidade_medida_calc_w
			from	nut_genero_alim
			where	nr_sequencia = nr_seq_genero_calc_orig_w;
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_genero_calc_novo_w
			from	nut_genero_alim
			where	ds_genero = ds_genero_calc_w
			and	coalesce(cd_material,0) = coalesce(cd_material_calc_w,0)
			and	qt_conversao = qt_conversao_calc_w
			and	qt_fator_correcao = qt_fator_correcao_calc_w
			and	coalesce(cd_unidade_medida,'0') = coalesce(cd_unidade_medida_calc_w,'0')
			and	cd_estabelecimento = cd_estab_destino_p;
			
			select	nextval('nut_receita_comp_seq')
			into STRICT	nr_seq_rec_comp_novo_w
			;
			
			insert into nut_receita_comp(	
				nr_sequencia,
				nr_seq_receita,
				nr_seq_gen_alim,
				dt_atualizacao,
				nm_usuario,
				qt_componente,
				qt_fator_correcao,
				qt_fator_coccao,
				nr_seq_gen_alim_calc,
				qt_componente_calc,
				nr_seq_tipo_preparo)
			(SELECT	nr_seq_rec_comp_novo_w,
				nr_seq_receita_novo_w,
				nr_seq_genero_novo_w,
				clock_timestamp(),
				nm_usuario_p,
				qt_componente,
				qt_fator_correcao,
				qt_fator_coccao,
				nr_seq_genero_calc_novo_w,
				qt_componente_calc,
				nr_seq_tipo_preparo
			from	nut_receita_comp
			where	nr_sequencia = nr_seq_rec_comp_orig_w);

			insert into nut_receita_med_cas(	
				nr_sequencia,
				nr_seq_receita,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_medida,
				qt_medida,
				nr_seq_comp_rec,
				qt_unidade,
				ds_observacao)
			(SELECT	nextval('nut_receita_med_cas_seq'),
				nr_seq_receita_novo_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_medida,
				qt_medida,
				nr_seq_rec_comp_novo_w,
				qt_unidade,
				ds_observacao
			from	nut_receita_med_cas
			where	nr_seq_receita = nr_seq_receita_origem_w
			and	nr_seq_comp_rec = nr_seq_rec_comp_orig_w);
			
			end;
		end loop;
		close C02;
		
		insert into nut_area_prod_rec(	
			nr_sequencia,
			nr_seq_receita,
			nr_seq_area,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec)
		(SELECT	nextval('nut_area_prod_rec_seq'),
			nr_seq_receita_novo_w,
			nr_seq_area,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p
		from	nut_area_prod_rec
		where	nr_seq_receita = nr_seq_receita_origem_w);
		
                for r_C03 in C03 loop
                	begin
                        
                        select  nextval('nut_modo_preparo_seq') 
                        into STRICT    nr_seq_modo_preparo_w
;

                	insert into nut_modo_preparo(	
                                nr_sequencia,
                                dt_atualizacao,
                                nm_usuario,
                                dt_atualizacao_nrec,
                                nm_usuario_nrec,
                                nr_seq_receita)
                        values (
                                nr_seq_modo_preparo_w,
                                clock_timestamp(),
                                nm_usuario_p,
                                clock_timestamp(),
                                nm_usuario_p,
                                nr_seq_receita_novo_w                                       
                        );

                        CALL COPIA_CAMPO_LONG_DE_PARA_NOVO(	'NUT_MODO_PREPARO',
                                        'DS_MODO_PREPARO',
                                        'WHERE NR_SEQUENCIA = :NR_SEQ_PREPARO',
                                        'NR_SEQ_PREPARO='||r_C03.NR_SEQUENCIA,
                                        'NUT_MODO_PREPARO',
                                        'DS_MODO_PREPARO',
                                        'WHERE NR_SEQUENCIA = :NR_SEQUENCIA',
                                        'NR_SEQUENCIA='||NR_SEQ_MODO_PREPARO_W,
                                        'L');	
                        
                	end;
                end loop;

		insert into nut_dieta_rec(	
			nr_sequencia,
			nr_seq_receita,
			cd_dieta,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_grupo)
		(SELECT	nextval('nut_dieta_rec_seq'),
			nr_seq_receita_novo_w,
			--CD_DIETA,    De x Para
                        cd_dieta,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_grupo
		from	nut_dieta_rec
		where	nr_seq_receita = nr_seq_receita_origem_w);
		
	end if;
	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE acc_copiar_receita ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

