-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tiss_gerar_w_guia_spsadt (nr_sequencia_autor_p bigint, ds_dir_padrao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_guia_w			varchar(20);
cd_guia_principal_w		varchar(20);
cd_ans_w			varchar(20);--OS - 1289502
cd_senha_w			varchar(20);
dt_autorizacao_w		timestamp;
dt_solicitacao_w		timestamp;
dt_validade_senha_w		timestamp;
dt_emissao_w			timestamp;
nr_seq_plano_w			bigint;
nr_seq_segurado_w		bigint;
cd_medico_solicitante_w		varchar(10);
nr_seq_prestador_w		bigint;
cd_usuario_plano_w		varchar(30);
dt_validade_carteira_w		timestamp;
cd_pessoa_fisica_w		varchar(10);
ds_plano_w			varchar(255);
ie_carater_internacao_w		varchar(1);
nr_seq_guia_w			bigint;
nr_cartao_nac_sus_w		varchar(60);
nm_pessoa_fisica_w		varchar(255);
sg_conselho_w			varchar(20);
cd_doenca_cid_w			varchar(10);
ds_diagnostico_w		varchar(2000);
cd_tabela_relat_w		varchar(2);
cd_porte_anestesico_w		varchar(10);
ds_retorno_w			varchar(255);
ds_indicacao_w			w_tiss_solicitacao.ds_indicacao%type;
ds_indicacao_aux_w		w_tiss_solicitacao.ds_indicacao%type;
ie_tipo_item_w			varchar(1);
cd_conselho_prof_w 		w_tiss_contratado_solic.cd_conselho_prof%type;
ie_tipo_consulta_w		pls_guia_plano.ie_tipo_consulta%type;

cgc_exec_w			varchar(14);
cpf_exec_w			varchar(50);
nm_contratado_exec_w		varchar(255);
ds_logradouro_w			varchar(255);
nm_municipio_w			varchar(255);
sg_estado_w			pessoa_juridica.sg_estado%type;
cd_municipio_ibge_w		varchar(15);
cd_cep_w			varchar(50);
cd_cnes_w			varchar(20);

qt_proc_guia_w 			bigint;
nr_seq_apresentacao_w		bigint;
nr_seq_item_w			bigint;
cd_procedimento_w		 w_tiss_proc_solic.cd_procedimento%type;
nr_seq_guia_principal_w		bigint;
ds_procedimento_w		varchar(255);
ie_origem_proced_w		bigint;
qt_solicitada_w			pls_guia_plano_mat.qt_solicitada%type;
qt_autorizada_w			pls_guia_plano_mat.qt_solicitada%type;
nr_cpf_w			varchar(11);
nr_crm_w			varchar(20);
uf_crm_w			medico.uf_crm%type;
cd_cbo_w			varchar(10);
nm_medico_solicitante_w		varchar(255);
ds_observacao_w			varchar(4000);
ds_observacao_aux_w		varchar(4000);

vl_procedimento_w		double precision;
vl_custo_oper_w			double precision;
vl_anestesista_w		double precision;
vl_medico_w			double precision;
vl_filme_w			double precision;
vl_auxiliares_w			double precision;
nr_seq_regra_w			bigint;
cd_edicao_amb_w			integer;
ie_valor_informado_w		varchar(1)	:= 'N';
nr_aux_regra_w			bigint;
nr_seq_regra_autogerado_w	bigint;
ie_tipo_compl_prest_w		varchar(4);
ds_endereco_w			varchar(255);
ds_complemento_w		varchar(255);
ds_bairro_w			varchar(255);
ds_email_w			varchar(255);
ds_website_w			varchar(255);
ds_fax_w			varchar(80);
nr_telefone_w			varchar(30);
nr_tel_simples_w		varchar(30);
ds_fone_adic_w			varchar(255);
nr_ddi_telefone_w		varchar(6);
nr_ddd_telefone_w		varchar(6);
nr_endereco_w			varchar(5);
nr_ramal_w			integer;
nr_ddd_fax_w			varchar(3);
ds_municipio_w			varchar(40);
cd_prestador_exec_w		varchar(30);
ie_existe_proc_w		varchar(255)	:= 'N';
nr_seq_apresent_w		bigint;
ie_tipo_atend_tiss_w		varchar(3);
cd_guia_manual_w		varchar(20);
ie_indic_acidente_w		varchar(10);
ie_tipo_doenca_w		varchar(5);
ie_tipo_saida_w			varchar(1);
nr_seq_compl_pf_tel_adic_w	pls_prestador.nr_seq_compl_pf_tel_adic%type;
nr_seq_tipo_compl_adic_w	pls_prestador.nr_seq_tipo_compl_adic%type;
ie_tipo_guia_w			pls_guia_plano.ie_tipo_guia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type; --OS - 1289502
nr_seq_prestador_solic_w	bigint;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
cd_cgc_solic_w			pessoa_juridica.cd_cgc%type;
nm_contratado_w			varchar(255);
cd_prestador_solic_w		pls_prestador.cd_prestador%type;
ie_cobertura_especial_w		w_tiss_solicitacao.ie_cobertura_especial%type;
ie_regime_atendimento_w		w_tiss_dados_atendimento.ie_regime_atendimento%type;
ie_saude_ocupacional_w		w_tiss_dados_atendimento.ie_saude_ocupacional%type;

/*Adicionado os procedimentos negados, conforme norma do TISS quando nao for autorizado devera sair com valor '0'  OS 784102*/


/* Francisco - 09/02/2015 - OS 844426 - Adicionei o K no in do cursor 1, motivo: quando negado pelo usuario nao estava trazendo */

c01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		substr(obter_descricao_procedimento(cd_procedimento,ie_origem_proced),1,255),
		ie_origem_proced,
		qt_solicitada,
		coalesce(qt_autorizada,0) qt_autorizada,
		'P' ie_tipo_guia
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_sequencia_autor_p
	and	coalesce(nr_seq_motivo_exc::text, '') = ''
	
union all

	SELECT	nr_sequencia,
		nr_seq_material,
		substr(pls_obter_desc_material(nr_seq_material),1,255),
		null ie_origem_proced,
		qt_solicitada,
		coalesce(qt_autorizada,0) qt_autorizada,
		'M' ie_tipo_guia
	from	pls_guia_plano_mat
	where	nr_seq_guia		= nr_sequencia_autor_p
	and	coalesce(nr_seq_motivo_exc::text, '') = '';


BEGIN

delete	from w_tiss_guia
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_dados_atendimento
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_beneficiario
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_paciente
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_exec
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_totais
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_solicitacao
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_relatorio
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_opm
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_opm_exec
where	nm_usuario		= nm_usuario_p;

commit;

if (coalesce(nr_sequencia_autor_p,0) > 0) then
		
	select	a.cd_guia,
		coalesce(a.cd_senha,a.cd_senha_externa),
		a.dt_autorizacao,
		coalesce(a.dt_validade_senha,a.dt_valid_senha_ext),
		a.dt_emissao,
		a.nr_seq_plano,
		a.nr_seq_segurado,
		a.cd_medico_solicitante,
		a.nr_seq_prestador,		
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'CR'),1,255),
		to_date(pls_obter_dados_cart_segurado(a.nr_seq_segurado,'V'),'dd/mm/yyyy'),
		b.cd_pessoa_fisica,
		(select max(c.ds_plano) from pls_plano c where c.nr_sequencia = a.nr_seq_plano) ds_plano,
		a.ie_carater_internacao,
		a.cd_guia_principal,
		a.ds_observacao,
	        substr(a.ds_indicacao_clinica,1,400),
		ie_tipo_atend_tiss,
		a.dt_solicitacao,
		substr(a.cd_guia_manual,1,20),
		ie_tipo_saida,
		(select cd_prestador from pls_prestador where nr_sequencia = a.nr_seq_prestador) cd_prestador,
		ie_tipo_consulta,
		ie_tipo_guia,
		b.cd_estabelecimento, --OS - 1289502
		a.ie_cobertura_especial,
		a.ie_regime_atendimento, a.ie_saude_ocupacional
	into STRICT	cd_guia_w,cd_senha_w,dt_autorizacao_w,
		dt_validade_senha_w,dt_emissao_w,
		nr_seq_plano_w,	nr_seq_segurado_w,cd_medico_solicitante_w,
		nr_seq_prestador_w,cd_usuario_plano_w,dt_validade_carteira_w,
		cd_pessoa_fisica_w,ds_plano_w,	ie_carater_internacao_w,
		cd_guia_principal_w,ds_observacao_w,	ds_indicacao_w,
		ie_tipo_atend_tiss_w,	dt_solicitacao_w,cd_guia_manual_w,
		ie_tipo_saida_w,cd_prestador_exec_w,ie_tipo_consulta_w,
		ie_tipo_guia_w,
		cd_estabelecimento_w, --OS - 1289502
		ie_cobertura_especial_w,
		ie_regime_atendimento_w, ie_saude_ocupacional_w
	from	pls_segurado b,
		pls_guia_plano a
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	a.nr_sequencia		= nr_sequencia_autor_p;
	
	-- Tratamento adicionado para remover as quebras de linhas 
	if (ds_indicacao_w IS NOT NULL AND ds_indicacao_w::text <> '') then
		select	replace(ds_indicacao_w,CHR(13)||CHR(10),' ')
		into STRICT	ds_indicacao_aux_w
		;
		
		select	replace(ds_indicacao_aux_w,CHR(10),' ')
		into STRICT	ds_indicacao_w
		;
	end if;
	
	if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
		select	replace(ds_observacao_w,CHR(13)||CHR(10),' ')
		into STRICT	ds_observacao_aux_w
		;
		
		select	replace(ds_observacao_aux_w,CHR(10),' ')
		into STRICT	ds_observacao_w
		;
	end if;
	
	--Guia de Solicitacao de SP/SADT
	if (ie_tipo_guia_w <> '2') then
		goto final;
	end if;
	
	--OS - 1289502
	cd_ans_w	:= pls_obter_dados_outorgante(cd_estabelecimento_w,'ANS');
	
	if (coalesce(cd_ans_w::text, '') = '') then
		cd_ans_w	:= pls_obter_dados_outorgante(cd_estabelecimento_p,'ANS');
	end if;
	
	if (coalesce(cd_ans_w::text, '') = '') then		
		select	max(cd_ans)
		into STRICT	cd_ans_w
		from	pls_outorgante
		where	(cd_ans IS NOT NULL AND cd_ans::text <> '');
	end if;
	--fim--OS - 1289502--
	
	insert	into w_tiss_relatorio(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_arquivo_logo)
	values (nextval('w_tiss_relatorio_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		ds_dir_padrao_p || '\pls_logo.jpg');

	qt_proc_guia_w 		:= 0;
	nr_seq_apresentacao_w	:= 0;
	nr_seq_apresent_w	:= 0;

	open c01;
	loop
	fetch c01 into	nr_seq_item_w,
			cd_procedimento_w,
			ds_procedimento_w,
			ie_origem_proced_w,
			qt_solicitada_w,
			qt_autorizada_w,
			ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		qt_proc_guia_w		:= qt_proc_guia_w + 1;
		cd_tabela_relat_w	:= '';

		if (qt_proc_guia_w = 1) then
			ie_existe_proc_w	:= 'S';
			
			select	nextval('w_tiss_guia_seq')
			into STRICT	nr_seq_guia_w
			;

			insert	into w_tiss_guia(nr_sequencia,	dt_atualizacao,	nm_usuario,
				cd_ans,	cd_autorizacao,	dt_autorizacao,
				cd_senha,dt_validade_senha,	dt_emissao_guia,
				nr_sequencia_autor,cd_autorizacao_princ,ds_observacao,
				ie_tiss_tipo_guia,dt_entrada,ds_assinatura_solic,-- utilizado para salvar o valor do campo CD_GUIA_MANUAL
				nr_guia_operadora)
			values (nr_seq_guia_w,	clock_timestamp(),nm_usuario_p,
				cd_ans_w,cd_guia_w,dt_autorizacao_w,
				cd_senha_w,dt_validade_senha_w,	coalesce(dt_emissao_w,clock_timestamp()),
				nr_sequencia_autor_p,cd_guia_principal_w,ds_observacao_w,
				'2',null,cd_guia_manual_w,
				cd_guia_w);

			select	nr_cartao_nac_sus,
				substr(tws_get_name_person(cd_pessoa_fisica, cd_estabelecimento),1,255)
			into STRICT	nr_cartao_nac_sus_w,
				nm_pessoa_fisica_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

			insert	into w_tiss_beneficiario(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia,
				cd_pessoa_fisica,
				nm_pessoa_fisica,
				nr_cartao_nac_sus,
				ds_plano,
				dt_validade_carteira,
				cd_usuario_convenio)
			values (nextval('w_tiss_beneficiario_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w,
				cd_pessoa_fisica_w,
				nm_pessoa_fisica_w,
				nr_cartao_nac_sus_w,
				ds_plano_w,
				dt_validade_carteira_w,
				cd_usuario_plano_w);

			begin
				select	b.nr_cpf,
					substr(obter_nome_pf(a.cd_pessoa_fisica),1,255),
					substr(obter_conselho_profissional(b.nr_seq_conselho,'S'),1,10),
					nr_crm,
					uf_crm,
					substr(obter_descricao_padrao('CBO_SAUDE','CD_CBO',b.nr_seq_cbo_saude),1,10)
				into STRICT	nr_cpf_w,
					nm_medico_solicitante_w,
					sg_conselho_w,
					nr_crm_w,
					uf_crm_w,
					cd_cbo_w
				from	pessoa_fisica b,
					medico a
				where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
				and	a.cd_pessoa_fisica	= cd_medico_solicitante_w;
			exception
			when others then
				nr_cpf_w := null;
				nm_medico_solicitante_w := null;
				sg_conselho_w := null;
				nr_crm_w := null;
				uf_crm_w := null;
				cd_cbo_w := null;
			end;
			
			-- verifica se a guia foi gerada a partir de uma requisicao
			begin
				select 	nr_seq_requisicao
				into STRICT	nr_seq_requisicao_w
				from 	pls_execucao_req_item
				where 	nr_seq_guia	= nr_sequencia_autor_p  LIMIT 1;				
			exception
			when others then
				nr_seq_requisicao_w	:= null;
			end;	
			
			if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
				select	nr_seq_prestador,
					(select max(cd_prestador) from pls_prestador a where a.nr_sequencia = nr_seq_prestador) cd_prestador
				into STRICT	nr_seq_prestador_solic_w,
					cd_prestador_solic_w
				from 	pls_requisicao
				where 	nr_sequencia	= nr_seq_requisicao_w;
				
				cd_cgc_solic_w		:= pls_obter_dados_prestador(nr_seq_prestador_solic_w,'CGC');
				nm_contratado_w		:= substr(pls_obter_dados_prestador(nr_seq_prestador_solic_w,'NF'),1,255);
			else
				cd_cgc_solic_w		:= pls_obter_dados_prestador(nr_seq_prestador_w,'CGC');
				nm_contratado_w		:= substr(pls_obter_dados_prestador(nr_seq_prestador_w,'NF'),1,255);
				cd_prestador_solic_w	:= cd_prestador_exec_w;
			end if;
			
			insert into w_tiss_contratado_solic(nr_sequencia, dt_atualizacao, nm_usuario,
				nr_seq_guia,cd_cgc,cd_interno,
				nr_cpf,nm_contratado,nm_solicitante,
				cd_cnes,sg_conselho,nr_crm,
				uf_crm,	cd_cbo_saude, cd_conselho_prof )
			values (nextval('w_tiss_contratado_solic_seq'), clock_timestamp(), nm_usuario_p,
				nr_seq_guia_w, cd_cgc_solic_w, coalesce(cd_prestador_solic_w, cd_cgc_solic_w),
				obter_compl_pf(cd_medico_solicitante_w,1,'CPF'),nm_contratado_w, nm_medico_solicitante_w,
				obter_compl_pf(cd_medico_solicitante_w,1,'CNES'),sg_conselho_w,	nr_crm_w,
				uf_crm_w,cd_cbo_w, CASE WHEN sg_conselho_w='CRM' THEN '06' WHEN sg_conselho_w='CRN' THEN '07' WHEN sg_conselho_w='CRO' THEN '08' WHEN sg_conselho_w='CREFITO' THEN '05'  ELSE '10' END );

			select	max(cd_doenca),
				max(ds_diagnostico),
				max(ie_indicacao_acidente),
				max(ie_tipo_doenca)
			into STRICT	cd_doenca_cid_w,
				ds_diagnostico_w,
				ie_indic_acidente_w,
				ie_tipo_doenca_w
			from	pls_diagnostico
			where	nr_seq_guia		= nr_sequencia_autor_p
			and	ie_classificacao	= 'P';
			
			insert into w_tiss_solicitacao(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia,
				dt_solicitacao,
				ie_carater_solic,
				cd_cid,
				ds_indicacao,
				ie_cobertura_especial)
			values (nextval('w_tiss_solicitacao_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w,
				dt_solicitacao_w,
				ie_carater_internacao_w,
				cd_doenca_cid_w,
				ds_indicacao_w,
				ie_cobertura_especial_w);

			insert into w_tiss_dados_atendimento(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia,
				ie_tipo_atendimento,
				ie_tipo_acidente,
				ie_tipo_consulta,
				ie_tipo_saida, -- ie_tipo_doenca
				ie_regime_atendimento,
				ie_saude_ocupacional)
			values (nextval('w_tiss_dados_atendimento_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w,
				ie_tipo_atend_tiss_w,
				ie_indic_acidente_w,
				ie_tipo_consulta_w,
				ie_tipo_saida_w,
				ie_regime_atendimento_w,
				ie_saude_ocupacional_w);
		end if;

		nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;
		nr_seq_apresent_w	:= nr_seq_apresent_w + 1;
		if (nr_seq_apresent_w	> 5) then
			nr_seq_apresent_w	:= 1;
			--nr_seq_apresentacao_w	:= 1;
		end if;

		--Verifica o codigo da tabela somente para procedimento
		if ( ie_tipo_item_w = 'P' ) then
			--cd_tabela_relat_w := pls_obter_tabela_proc_guia(nr_sequencia_autor_p, cd_estabelecimento_p, nr_seq_prestador_w, cd_procedimento_w, ie_origem_proced_w, dt_autorizacao_w);
			cd_tabela_relat_w := pls_obter_cod_tabela_tiss(cd_procedimento_w, ie_origem_proced_w, null );
		elsif ( ie_tipo_item_w = 'M' ) then
			cd_tabela_relat_w := pls_obter_cod_tabela_tiss(null, null, cd_procedimento_w );
			
			cd_procedimento_w	:= pls_obter_seq_codigo_material(cd_procedimento_w,'');
		end if;		
		
		insert into w_tiss_proc_solic(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia,
			cd_procedimento,
			cd_edicao_amb,
			ds_procedimento,
			qt_solicitada,
			qt_autorizada,
			nr_seq_apresentacao)
		values (nextval('w_tiss_proc_solic_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			cd_procedimento_w,
			cd_tabela_relat_w,
			ds_procedimento_w,
			qt_solicitada_w,
			qt_autorizada_w,
			nr_seq_apresentacao_w);

		insert into w_tiss_proc_paciente(NR_SEQUENCIA,
			dt_ATUALIZACAO,
			nm_usUARIO,
			nr_seq_GUIA,
			nr_seq_apresentacao)
		values (nextval('w_tiss_proc_paciente_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			nr_seq_apresent_w);
			
		if (qt_proc_guia_w = 5) then
			cd_prestador_exec_w := '';
			if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
				select	pls_obter_dados_prestador(nr_sequencia,'CGC'),
					pls_obter_dados_prestador(nr_sequencia,'PF'),
					ie_tipo_endereco,
					cd_prestador,
					nr_seq_compl_pf_tel_adic,
					nr_seq_tipo_compl_adic
				into STRICT	cgc_exec_w,
					cpf_exec_w,
					ie_tipo_compl_prest_w,
					cd_prestador_exec_w,
					nr_seq_compl_pf_tel_adic_w,
					nr_seq_tipo_compl_adic_w
				from	pls_prestador
				where	nr_sequencia	= nr_seq_prestador_w;

				nm_contratado_exec_w	:= pls_obter_dados_prestador(nr_seq_prestador_w,'NF');
			end if;
			if	((cpf_exec_w IS NOT NULL AND cpf_exec_w::text <> '') or (cgc_exec_w IS NOT NULL AND cgc_exec_w::text <> '')) then
				SELECT * FROM pls_obter_dados_end_prestador(	cpf_exec_w, cgc_exec_w, ie_tipo_compl_prest_w, 'N', nr_seq_compl_pf_tel_adic_w, nr_seq_tipo_compl_adic_w, ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w) INTO STRICT ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w;

				ds_logradouro_w	:= substr(pls_obter_end_prestador(nr_seq_prestador_w,null, null),1,255);
				if (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') then
					nm_municipio_w	:= substr(obter_desc_municipio_ibge(cd_municipio_ibge_w),1,255);
				end if;
				cd_cnes_w		:= substr(pls_obter_cnes_prestador(nr_seq_prestador_w),1,20);	
				
			end if;
	
			insert	into w_tiss_contratado_exec(nr_sequencia, 	dt_atualizacao, nm_usuario,
				 nr_seq_guia, cd_cgc, cd_interno,
				 nr_cpf, nm_contratado, ds_tipo_logradouro,
				 ds_logradouro, nm_municipio, sg_estado,
				 cd_municipio_ibge, cd_cep, cd_cnes	)
			values (nextval('w_tiss_contratado_exec_seq'),clock_timestamp(),nm_usuario_p,
				 nr_seq_guia_w, cgc_exec_w, substr(cd_prestador_exec_w,1,20),
				 cpf_exec_w, nm_contratado_exec_w,'',
				 substr(ds_logradouro_w,1,53), nm_municipio_w, sg_estado_w,
				 cd_municipio_ibge_w, cd_cep_w, cd_cnes_w);

			insert	into w_tiss_totais(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia)
			values (nextval('w_tiss_totais_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w);

			qt_proc_guia_w	:= 0;
		end if;
		end;
	end loop;
	close c01;

	/* OS 456722 Unimed Sao Jose do Rio Preto -  Tratamento realizado para as guias de SP/SADT que nao possuirem procedimentos, somente materiais*/

	if (ie_existe_proc_w	= 'N') then
		select	nextval('w_tiss_guia_seq')
		into STRICT	nr_seq_guia_w
		;

		insert	into w_tiss_guia(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			cd_ans,
			cd_autorizacao,
			dt_autorizacao,
			cd_senha,
			dt_validade_senha,
			dt_emissao_guia,
			nr_sequencia_autor,
			cd_autorizacao_princ,
			ds_observacao,
			ie_tiss_tipo_guia,
			dt_entrada)
		values (nr_seq_guia_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_ans_w,
			cd_guia_w,
			dt_autorizacao_w,
			cd_senha_w,
			dt_validade_senha_w,
			coalesce(dt_emissao_w,clock_timestamp()),
			nr_sequencia_autor_p,
			cd_guia_principal_w,
			ds_observacao_w,
			'2',
			null);

		select	nr_cartao_nac_sus,
			substr(tws_get_name_person(cd_pessoa_fisica, cd_estabelecimento),1,255)
		into STRICT	nr_cartao_nac_sus_w,
			nm_pessoa_fisica_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

		insert	into w_tiss_beneficiario(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia,
			cd_pessoa_fisica,
			nm_pessoa_fisica,
			nr_cartao_nac_sus,
			ds_plano,
			dt_validade_carteira,
			cd_usuario_convenio)
		values (nextval('w_tiss_beneficiario_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			cd_pessoa_fisica_w,
			nm_pessoa_fisica_w,
			nr_cartao_nac_sus_w,
			ds_plano_w,
			dt_validade_carteira_w,
			cd_usuario_plano_w);

		begin
			select	b.nr_cpf,
				substr(obter_nome_pf(a.cd_pessoa_fisica),1,255),
				substr(obter_conselho_profissional(b.nr_seq_conselho,'S'),1,10),
				nr_crm,
				uf_crm,
				substr(obter_descricao_padrao('CBO_SAUDE','CD_CBO',b.nr_seq_cbo_saude),1,10)
			into STRICT	nr_cpf_w,
				nm_medico_solicitante_w,
				sg_conselho_w,
				nr_crm_w,
				uf_crm_w,
				cd_cbo_w
			from	pessoa_fisica b,
				medico a
			where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
			and	a.cd_pessoa_fisica	= cd_medico_solicitante_w;
		exception
		when others then
			nr_cpf_w := null;
			nm_medico_solicitante_w := null;
			sg_conselho_w := null;
			nr_crm_w := null;
			uf_crm_w := null;
			cd_cbo_w := null;
		end;
		
		/*01 Conselho Regional de Assistencia Social (CRAS) 
		02 Conselho Regional de Enfermagem (COREN) 
		03 Conselho Regional de Farmacia (CRF)
		04 Conselho Regional de Fonoaudiologia (CRFA) 
		09 Conselho Regional de Psicologia (CRP) */

		
		/* CD_CONSELHO_PROF Realizado tratamento para os codigos abaixo
		05 Conselho Regional de Fisioterapia e Terapia Ocupacional(CREFITO)
		06 Conselho Regional de Medicina (CRM) 
		07 Conselho Regional de Nutricao (CRN) 
		08 Conselho Regional de Odontologia (CRO)
		10 Outros Conselhos*/
		
		insert into w_tiss_contratado_solic(nr_sequencia,	dt_atualizacao,	nm_usuario,
			nr_seq_guia, cd_cgc, cd_interno,
			nr_cpf,	nm_contratado,	nm_solicitante,
			cd_cnes,sg_conselho, nr_crm,
			uf_crm, cd_cbo_saude, cd_conselho_prof)
		values (nextval('w_tiss_contratado_solic_seq'), clock_timestamp(), nm_usuario_p,
			nr_seq_guia_w, '','',
			obter_compl_pf(cd_medico_solicitante_w,1,'CPF'),'', nm_medico_solicitante_w,
			'', sg_conselho_w, nr_crm_w,
			uf_crm_w, cd_cbo_w, CASE WHEN sg_conselho_w='CRM' THEN '06' WHEN sg_conselho_w='CRN' THEN '07' WHEN sg_conselho_w='CRO' THEN '08' WHEN sg_conselho_w='CREFITO' THEN '05'  ELSE '10' END );			
			
		select	max(cd_doenca),
			max(ds_diagnostico),
			max(ie_indicacao_acidente),
			max(ie_tipo_doenca)
		into STRICT	cd_doenca_cid_w,
			ds_diagnostico_w,
			ie_indic_acidente_w,
			ie_tipo_doenca_w
		from	pls_diagnostico
		where	nr_seq_guia		= nr_sequencia_autor_p
		and	ie_classificacao	= 'P';
		
		insert into w_tiss_solicitacao(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia,
			dt_solicitacao,
			ie_carater_solic,
			cd_cid,
			ds_indicacao,
			ie_cobertura_especial)
		values (nextval('w_tiss_solicitacao_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			dt_solicitacao_w,
			ie_carater_internacao_w,
			cd_doenca_cid_w,
			ds_indicacao_w,
			ie_cobertura_especial_w);
			
		insert into w_tiss_dados_atendimento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia,
			ie_tipo_atendimento,
			ie_tipo_acidente,
			ie_tipo_consulta, -- ie_tipo_doenca
			ie_regime_atendimento,
			ie_saude_ocupacional)
		values (nextval('w_tiss_dados_atendimento_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			ie_tipo_atend_tiss_w,
			ie_indic_acidente_w,
			ie_tipo_consulta_w,
			ie_regime_atendimento_w,
			ie_saude_ocupacional_w);

		if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
			select	pls_obter_dados_prestador(nr_sequencia,'CGC'),
				pls_obter_dados_prestador(nr_sequencia,'PF'),
				ie_tipo_endereco,
				cd_prestador,
				nr_seq_compl_pf_tel_adic,
				nr_seq_tipo_compl_adic
			into STRICT	cgc_exec_w,
				cpf_exec_w,
				ie_tipo_compl_prest_w,
				cd_prestador_exec_w,
				nr_seq_compl_pf_tel_adic_w,
				nr_seq_tipo_compl_adic_w
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_w;

			nm_contratado_exec_w	:= pls_obter_dados_prestador(nr_seq_prestador_w,'NF');
		end if;

		if	((cpf_exec_w IS NOT NULL AND cpf_exec_w::text <> '') or (cgc_exec_w IS NOT NULL AND cgc_exec_w::text <> '')) then
			SELECT * FROM pls_obter_dados_end_prestador(	cpf_exec_w, cgc_exec_w, ie_tipo_compl_prest_w, 'N', nr_seq_compl_pf_tel_adic_w, nr_seq_tipo_compl_adic_w, ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w) INTO STRICT ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w;

			ds_logradouro_w	:= substr(pls_obter_end_prestador(nr_seq_prestador_w,null, null),1,255);
			if (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') then
				nm_municipio_w	:= substr(obter_desc_municipio_ibge(cd_municipio_ibge_w),1,255);
			end if;
			cd_cnes_w		:= substr(pls_obter_cnes_prestador(nr_seq_prestador_w),1,20);
		end if;
				
		insert	into w_tiss_contratado_exec(nr_sequencia, 	dt_atualizacao, nm_usuario,
			 nr_seq_guia, cd_cgc, cd_interno,
			 nr_cpf, nm_contratado, ds_tipo_logradouro,
			 ds_logradouro, nm_municipio, sg_estado,
			 cd_municipio_ibge, cd_cep, cd_cnes)
		values (nextval('w_tiss_contratado_exec_seq'),clock_timestamp(),nm_usuario_p,
			 nr_seq_guia_w, cgc_exec_w, substr(cd_prestador_exec_w,1,20),
			 cpf_exec_w, nm_contratado_exec_w,'',
			 substr(ds_logradouro_w,1,53), nm_municipio_w, sg_estado_w,
			 cd_municipio_ibge_w, cd_cep_w, cd_cnes_w);

		insert	into w_tiss_totais(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia)
		values (nextval('w_tiss_totais_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w);
	end if;
	/* */

	if (qt_proc_guia_w > 0) and (qt_proc_guia_w < 5) then
		if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
			select	pls_obter_dados_prestador(nr_sequencia,'CGC'),
				pls_obter_dados_prestador(nr_sequencia,'PF'),
				ie_tipo_endereco,
				cd_prestador,
				nr_seq_compl_pf_tel_adic,
				nr_seq_tipo_compl_adic
			into STRICT	cgc_exec_w,
				cpf_exec_w,
				ie_tipo_compl_prest_w,
				cd_prestador_exec_w,
				nr_seq_compl_pf_tel_adic_w,
				nr_seq_tipo_compl_adic_w
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_w;

			nm_contratado_exec_w	:= pls_obter_dados_prestador(nr_seq_prestador_w,'NF');
		end if;
		if	((cpf_exec_w IS NOT NULL AND cpf_exec_w::text <> '') or (cgc_exec_w IS NOT NULL AND cgc_exec_w::text <> '')) then
			SELECT * FROM pls_obter_dados_end_prestador(	cpf_exec_w, cgc_exec_w, ie_tipo_compl_prest_w, 'N', nr_seq_compl_pf_tel_adic_w, nr_seq_tipo_compl_adic_w, ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w) INTO STRICT ds_endereco_w, nr_endereco_w, ds_complemento_w, ds_bairro_w, cd_cep_w, nr_telefone_w, ds_email_w, ds_website_w, nr_ddi_telefone_w, nr_ddd_telefone_w, nr_ramal_w, cd_municipio_ibge_w, sg_estado_w, ds_fax_w, nr_ddd_fax_w, ds_municipio_w, ds_fone_adic_w;

			ds_logradouro_w	:=	substr(pls_obter_end_prestador(nr_seq_prestador_w,null, null),1,255);
			if (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') then
				nm_municipio_w	:= substr(obter_desc_municipio_ibge(cd_municipio_ibge_w),1,255);
			end if;
			cd_cnes_w		:= substr(pls_obter_cnes_prestador(nr_seq_prestador_w),1,20);
		end if;

		insert	into w_tiss_contratado_exec(nr_sequencia, 	dt_atualizacao, nm_usuario,
			 nr_seq_guia, cd_cgc, cd_interno,
			 nr_cpf, nm_contratado, ds_tipo_logradouro,
			 ds_logradouro, nm_municipio, sg_estado,
			 cd_municipio_ibge, cd_cep, cd_cnes)
		values (nextval('w_tiss_contratado_exec_seq'),clock_timestamp(),nm_usuario_p,
			 nr_seq_guia_w, cgc_exec_w, substr(cd_prestador_exec_w,1,20),
			 cpf_exec_w, nm_contratado_exec_w,'',
			 substr(ds_logradouro_w,1,53), nm_municipio_w, sg_estado_w,
			 cd_municipio_ibge_w, cd_cep_w, cd_cnes_w);
		
		insert	into w_tiss_totais(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia)
		values (nextval('w_tiss_totais_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w);
	end if;

	CALL pls_tiss_completar_guia(nr_seq_guia_w, nm_usuario_p);
end if;

<<final>>

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_gerar_w_guia_spsadt (nr_sequencia_autor_p bigint, ds_dir_padrao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

