-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_regra_lancto ( nr_sequencia_p bigint, cd_convenio_p text, nm_usuario_p text, nr_sequencia_nova_p INOUT bigint) AS $body$
DECLARE


nr_seq_lanc_w			regra_lanc_aut_pac.nr_seq_lanc%type;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_material_w			integer;
qt_lancamento_w			double precision;
ie_medico_atendimento_w		varchar(1);
ie_local_estoque_w		varchar(1);
ie_quantidade_w			varchar(1);
ie_retorno_w			varchar(1);
nr_seq_exame_w			bigint;
ie_funcao_medico_w		smallint;
tx_procedimento_w		double precision;
ie_regra_guia_w			varchar(5);
ie_forma_func_medico_w		varchar(01);
ie_consiste_item_w		varchar(01);
ie_proc_princ_atend_w		varchar(01);
cd_categoria_w			varchar(10);
qt_categoria_conv_w		bigint:= 0;
ie_existe_categ_w		varchar(1):= 'S';
cd_convenio_w			integer;
cd_cnpj_prestador_w		varchar(14);/*Geliard 07/11/2009 OS165332*/
cd_cid_doenca_w			varchar(10);/*Geliard OS178910*/
ie_adic_orcamento_w		varchar(1);
cd_medico_w			varchar(10);
QT_ANO_MIN_w			regra_lanc_aut_pac.QT_ANO_MIN%type;
QT_ANO_MAX_w			regra_lanc_aut_pac.QT_ANO_MAX%type;
NR_SEQ_PROC_INTERNO_w		regra_lanc_aut_pac.NR_SEQ_PROC_INTERNO%type;
CD_ESTAB_ITEM_w			regra_lanc_aut_pac.CD_ESTAB_ITEM%type;
CD_SETOR_ITEM_w			regra_lanc_aut_pac.CD_SETOR_ITEM%type;
NR_MIN_DURACAO_w		regra_lanc_aut_pac.NR_MIN_DURACAO%type;
IE_ACAO_w			regra_lanc_aut_pac.IE_ACAO%type;
IE_VINC_PROC_PRINC_ITEM_w	regra_lanc_aut_pac.IE_VINC_PROC_PRINC_ITEM%type;
QT_DIAS_PRIMEIRA_CIR_w		regra_lanc_aut_pac.QT_DIAS_PRIMEIRA_CIR%type;
QT_DIAS_PRIMEIRA_PRESCR_w	regra_lanc_aut_pac.QT_DIAS_PRIMEIRA_PRESCR%type;
IE_GERA_CONTA_ESTAB_w		regra_lanc_aut_pac.IE_GERA_CONTA_ESTAB%type;
IE_GERAR_AUTOR_w		regra_lanc_aut_pac.IE_GERAR_AUTOR%type;
IE_GERA_SE_ITEM_EXC_CONTA_w	regra_lanc_aut_pac.IE_GERA_SE_ITEM_EXC_CONTA%type;
ie_menos_selec_w		varchar(1) := '1';
ds_convenio_w         		varchar(5000);

c01 CURSOR FOR
SELECT	cd_procedimento,
	ie_origem_proced,
	cd_material,
	qt_lancamento,
	ie_medico_atendimento,
	ie_local_estoque,
	ie_quantidade,
	ie_retorno,
	nr_seq_exame,
	ie_funcao_medico,
	tx_procedimento,
	ie_regra_guia,	
	ie_forma_func_medico,
	ie_consiste_item,
	ie_proc_princ_atend,
	cd_cnpj_prestador,
	cd_cid_doenca,
	coalesce(ie_adic_orcamento,'N'),
	cd_medico,
	QT_ANO_MIN,
	QT_ANO_MAX,
	NR_SEQ_PROC_INTERNO,
	CD_ESTAB_ITEM,
	CD_SETOR_ITEM,
	NR_MIN_DURACAO,
	IE_ACAO,
	IE_VINC_PROC_PRINC_ITEM,
	QT_DIAS_PRIMEIRA_CIR,
	QT_DIAS_PRIMEIRA_PRESCR,
	IE_GERA_CONTA_ESTAB,
	IE_GERAR_AUTOR,
	IE_GERA_SE_ITEM_EXC_CONTA
from	regra_lanc_aut_pac
where	nr_seq_regra = nr_sequencia_p;

C02 CURSOR FOR
	SELECT	cd_convenio
    from	convenio
	where	((coalesce(cd_convenio_p::text, '') = '') or (
		((ie_menos_selec_w = '1') and (obter_se_contido(cd_convenio, elimina_aspas(cd_convenio_p)) = 'S'))	or	
		((ie_menos_selec_w = '2') and (obter_se_contido(cd_convenio, elimina_aspas(ds_convenio_w)) = 'N'))))
    order by 	cd_convenio;



BEGIN

if (SUBSTR(cd_convenio_p, 0, 1) = '-') then
	ie_menos_selec_w := 2;
end if;
ds_convenio_w	:= SUBSTR(cd_convenio_p, 2);

open C02;
loop
fetch C02 into	
	cd_convenio_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select	nextval('regra_lanc_automatico_seq')
	into STRICT	nr_sequencia_nova_p
	;

	select 	coalesce(max(cd_categoria),'X')
	into STRICT	cd_categoria_w
	from	regra_lanc_automatico
	where	nr_sequencia = nr_sequencia_p;

	if (cd_categoria_w <> 'X') then
		select 	count(*)
		into STRICT	qt_categoria_conv_w
		from 	categoria_convenio
		where 	cd_convenio = cd_convenio_w
		and 	cd_categoria = cd_categoria_w;
		
		if (qt_categoria_conv_w = 0) then
			ie_existe_categ_w:= 'N';
		end if;
	end if;


	insert into regra_lanc_automatico(
		nr_sequencia,
		cd_estabelecimento,
		ds_regra,
		dt_atualizacao,
		nm_usuario,
		cd_convenio,
		ie_tipo_atendimento,
		cd_setor_atendimento,
		cd_medico,
		nr_seq_evento,
		cd_area_procedimento,
		cd_especialidade_proc,
		cd_grupo_proc,
		cd_procedimento,
		ie_origem_proced,
		cd_edicao_amb,
		nr_seq_exame,
		ie_tipo_convenio,
		ie_situacao,
		cd_categoria,
		nr_seq_proc_interno,
		ie_conv_parametro,
		nr_seq_forma_org,
		nr_seq_subgrupo,
		nr_seq_grupo,
		ie_vincular_proc_princ,
		ie_carater_inter,
		ie_dispara_kit_mat,
		ie_duplicar_proc_regra,
		cd_tipo_recomendacao,
		CD_MOTIVO_ALTA,
		IE_CLINICA,
		CD_TIPO_ACOMODACAO,
		QT_ANO_MIN,
		QT_ANO_MAX,
		DT_ATUALIZACAO_NREC,
		NM_USUARIO_NREC,
		IE_VIA_APLICACAO,
		CD_MATERIAL,
		CD_CLASSE_MATERIAL,
		CD_SUBGRUPO_MATERIAL,
		CD_GRUPO_MATERIAL,
		CD_ESPECIALIDADE,
		NR_SEQ_CLASSIFICACAO,
		CD_TIPO_ANESTESIA,
		CD_FUNCAO,
		CD_ESPEC_MEDIC_ATEND,
		CD_PLANO_CONVENIO,
		IE_EVOLUCAO_CLINICA,
		DT_DIA_SEMANA,
		IE_FERIADO,
		HR_INICIAL,
		HR_FINAL,
		IE_LADO,
		IE_VIDEO,
		DS_OBSERVACAO,
		IE_CREDENCIADO,
		IE_TIPO_GUIA,
		CD_DIETA,
		CD_MATERIAL_EXAME,
		CD_PROCEDENCIA,
		DT_INICIO_VIGENCIA,
		DT_FINAL_VIGENCIA,
		IE_PACIENTE_ISOLADO,
		CD_REFEICAO,
		QT_ANO_MIN_MES,
		QT_ANO_MIN_DIA,
		QT_ANO_MAX_MES,
		QT_ANO_MAX_DIA,
		IE_DIETA_LIBERADA,
		IE_PORTE,
		IE_DESTINO_DIETA,
		NR_SEQ_CONJUNTO,
		IE_SEXO,
		IE_ACOMPANHANTE,
		IE_ESCALA_PEP,
		NR_SEQ_CLASSIF_MEDICO,
		NR_SEQ_EQUIPE,
		NR_SEQ_TIPO_PG,
		QT_DIAS_INTER_INICIO,
		QT_DIAS_INTER_FINAL,
		IE_CONSIGNADO,
		CD_UNIDADE_BASICA,
		CD_UNIDADE_COMPL,
		NR_SEQ_TIPO_SERVICO,
		NM_TABELA,
		NM_ATRIBUTO,
		CD_TIPO_BAIXA,
		DS_DIA_CICLO,
		IE_TIPO_EVOLUCAO,
		IE_NIVEL,
		IE_CLASSIF_AGENDA,
		IE_FUNCIONARIO,
		IE_BEIRA_LEITO,
		NR_SEQ_TESTE_VACINA,
		IE_TIPO_ATEND_TISS,
		NR_SEQ_TIPO_AVALIACAO,
		NR_SEQ_TIPO_ATEND,
		NR_SEQ_FORMA_CHEGADA,
		NR_SEQ_PROC,
		NR_SEQ_TIPO_CHECKUP,
		IE_ORIGEM_TIPO_ACOMOD,
		CD_DOENCA,
		CD_AGENDA,
		IE_ORIGEM_EDICAO,
		IE_PRIMEIRO_DIA_MES,
		NR_SEQ_QUEIXA,
		IE_ACOMPANHANTE_DIA,
		CD_CARGO,
		IE_DEPENDENTE,
		CD_MUNICIPIO_IBGE,
		IE_SETOR_ATUAL_ALTA,
		NR_SEQ_TRIAGEM)
	SELECT	nr_sequencia_nova_p,
		cd_estabelecimento,
		substr(wheb_mensagem_pck.get_Texto(311906, 'DS_REGRA_W='|| DS_REGRA),1,240),
		clock_timestamp(),
		nm_usuario_p,
		cd_convenio_w,
		ie_tipo_atendimento,
		cd_setor_atendimento,
		cd_medico,
		nr_seq_evento,
		cd_area_procedimento,
		cd_especialidade_proc,
		cd_grupo_proc,
		cd_procedimento,
		ie_origem_proced,
		cd_edicao_amb,
		nr_seq_exame,
		ie_tipo_convenio,
		ie_situacao,
		CASE WHEN ie_existe_categ_w='S' THEN cd_categoria  ELSE null END ,
		nr_seq_proc_interno,
		ie_conv_parametro,
		nr_seq_forma_org,
		nr_seq_subgrupo,
		nr_seq_grupo,
		ie_vincular_proc_princ,
		ie_carater_inter,       
		ie_dispara_kit_mat,
		coalesce(ie_duplicar_proc_regra,'N'),
		cd_tipo_recomendacao,
		CD_MOTIVO_ALTA,
		IE_CLINICA,
		CD_TIPO_ACOMODACAO,
		QT_ANO_MIN,
		QT_ANO_MAX,
		DT_ATUALIZACAO_NREC,
		NM_USUARIO_NREC,
		IE_VIA_APLICACAO,
		CD_MATERIAL,
		CD_CLASSE_MATERIAL,
		CD_SUBGRUPO_MATERIAL,
		CD_GRUPO_MATERIAL,
		CD_ESPECIALIDADE,
		NR_SEQ_CLASSIFICACAO,
		CD_TIPO_ANESTESIA,
		CD_FUNCAO,
		CD_ESPEC_MEDIC_ATEND,
		CD_PLANO_CONVENIO,
		IE_EVOLUCAO_CLINICA,
		DT_DIA_SEMANA,
		IE_FERIADO,
		HR_INICIAL,
		HR_FINAL,
		IE_LADO,
		IE_VIDEO,
		DS_OBSERVACAO,
		IE_CREDENCIADO,
		IE_TIPO_GUIA,
		CD_DIETA,
		CD_MATERIAL_EXAME,
		CD_PROCEDENCIA,
		DT_INICIO_VIGENCIA,
		DT_FINAL_VIGENCIA,
		IE_PACIENTE_ISOLADO,
		CD_REFEICAO,
		QT_ANO_MIN_MES,
		QT_ANO_MIN_DIA,
		QT_ANO_MAX_MES,
		QT_ANO_MAX_DIA,
		IE_DIETA_LIBERADA,
		IE_PORTE,
		IE_DESTINO_DIETA,
		NR_SEQ_CONJUNTO,
		IE_SEXO,
		IE_ACOMPANHANTE,
		IE_ESCALA_PEP,
		NR_SEQ_CLASSIF_MEDICO,
		NR_SEQ_EQUIPE,
		NR_SEQ_TIPO_PG,
		QT_DIAS_INTER_INICIO,
		QT_DIAS_INTER_FINAL,
		IE_CONSIGNADO,
		CD_UNIDADE_BASICA,
		CD_UNIDADE_COMPL,
		NR_SEQ_TIPO_SERVICO,
		NM_TABELA,
		NM_ATRIBUTO,
		CD_TIPO_BAIXA,
		DS_DIA_CICLO,
		IE_TIPO_EVOLUCAO,
		IE_NIVEL,
		IE_CLASSIF_AGENDA,
		IE_FUNCIONARIO,
		IE_BEIRA_LEITO,
		NR_SEQ_TESTE_VACINA,
		IE_TIPO_ATEND_TISS,
		NR_SEQ_TIPO_AVALIACAO,
		NR_SEQ_TIPO_ATEND,
		NR_SEQ_FORMA_CHEGADA,
		NR_SEQ_PROC,
		NR_SEQ_TIPO_CHECKUP,
		IE_ORIGEM_TIPO_ACOMOD,
		CD_DOENCA,
		CD_AGENDA,
		IE_ORIGEM_EDICAO,
		IE_PRIMEIRO_DIA_MES,
		NR_SEQ_QUEIXA,
		IE_ACOMPANHANTE_DIA,
		CD_CARGO,
		IE_DEPENDENTE,
		CD_MUNICIPIO_IBGE,
		IE_SETOR_ATUAL_ALTA,
		NR_SEQ_TRIAGEM
	from	regra_lanc_automatico
	where	nr_sequencia = nr_sequencia_p;

	open c01;
	loop
	fetch c01 into
		cd_procedimento_w,
		ie_origem_proced_w,
		cd_material_w,
		qt_lancamento_w,
		ie_medico_atendimento_w,
		ie_local_estoque_w,
		ie_quantidade_w,
		ie_retorno_w,
		nr_seq_exame_w,
		ie_funcao_medico_w,
		tx_procedimento_w,
		ie_regra_guia_w,
		ie_forma_func_medico_w,
		ie_consiste_item_w,
		ie_proc_princ_atend_w,
		cd_cnpj_prestador_w,
		cd_cid_doenca_w,
		ie_adic_orcamento_w,
		cd_medico_w,
		QT_ANO_MIN_w,
		QT_ANO_MAX_w,
		NR_SEQ_PROC_INTERNO_w,
		CD_ESTAB_ITEM_w,
		CD_SETOR_ITEM_w,
		NR_MIN_DURACAO_w,
		IE_ACAO_w,
		IE_VINC_PROC_PRINC_ITEM_w,
		QT_DIAS_PRIMEIRA_CIR_w,
		QT_DIAS_PRIMEIRA_PRESCR_w,
		IE_GERA_CONTA_ESTAB_w,
		IE_GERAR_AUTOR_w,
		IE_GERA_SE_ITEM_EXC_CONTA_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	coalesce(max(nr_seq_lanc),0) + 1
		into STRICT	nr_seq_lanc_w
		from	regra_lanc_aut_pac;

		if (coalesce(cd_procedimento_w::text, '') = '') then
			ie_origem_proced_w	:= null;
		end if;

		insert into regra_lanc_aut_pac(
			nr_seq_regra,
			nr_seq_lanc,
			dt_atualizacao,
			nm_usuario,
			cd_procedimento,
			ie_origem_proced,
			cd_material,
			qt_lancamento,
			ie_medico_atendimento,
			ie_local_estoque,
			ie_quantidade,
			ie_retorno,
			nr_seq_exame,
			ie_funcao_medico,
			tx_procedimento,
			ie_regra_guia,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_forma_func_medico,
			ie_consiste_item,
			ie_proc_princ_atend,
			cd_cnpj_prestador,
			cd_cid_doenca,
			ie_adic_orcamento,
			cd_medico,
			QT_ANO_MIN,
			QT_ANO_MAX,
			NR_SEQ_PROC_INTERNO,
			CD_ESTAB_ITEM,
			CD_SETOR_ITEM,
			NR_MIN_DURACAO,
			IE_ACAO,
			IE_VINC_PROC_PRINC_ITEM,
			QT_DIAS_PRIMEIRA_CIR,
			QT_DIAS_PRIMEIRA_PRESCR,
			IE_GERA_CONTA_ESTAB,
			IE_GERAR_AUTOR,
			IE_GERA_SE_ITEM_EXC_CONTA)
		values (nr_sequencia_nova_p,
			nr_seq_lanc_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_procedimento_w,
			ie_origem_proced_w,
			cd_material_w,
			qt_lancamento_w,
			ie_medico_atendimento_w,
			ie_local_estoque_w,
			ie_quantidade_w,
			ie_retorno_w,
			nr_seq_exame_w,
			ie_funcao_medico_w,
			tx_procedimento_w,
			ie_regra_guia_w,
			clock_timestamp(),
			nm_usuario_p,
			ie_forma_func_medico_w,
			ie_consiste_item_w,
			ie_proc_princ_atend_w,
			cd_cnpj_prestador_w,
			cd_cid_doenca_w,
			coalesce(ie_adic_orcamento_w,'N'),
			cd_medico_w,
			QT_ANO_MIN_w,
			QT_ANO_MAX_w,
			NR_SEQ_PROC_INTERNO_w,
			CD_ESTAB_ITEM_w,
			CD_SETOR_ITEM_w,
			NR_MIN_DURACAO_w,
			IE_ACAO_w,
			IE_VINC_PROC_PRINC_ITEM_w,
			QT_DIAS_PRIMEIRA_CIR_w,
			QT_DIAS_PRIMEIRA_PRESCR_w,
			IE_GERA_CONTA_ESTAB_w,
			IE_GERAR_AUTOR_w,
			IE_GERA_SE_ITEM_EXC_CONTA_w);
		end;
	end loop;
	close c01;
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_regra_lancto ( nr_sequencia_p bigint, cd_convenio_p text, nm_usuario_p text, nr_sequencia_nova_p INOUT bigint) FROM PUBLIC;

