-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_reg_ecf_m010 ( nr_seq_controle_p text, ds_separador_p text, cd_estabelecimento_p text, nm_usuario_p text, cd_empresa_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_scp_p text) AS $body$
DECLARE


nr_seq_registro_w			bigint := nr_sequencia_p;
nr_linha_w			bigint := qt_linha_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(4000);
sep_w				varchar(2) := ds_separador_p;

tp_registro			varchar(5);
dt_inicio_apuracao_w		timestamp;
dt_fim_apuracao_w			timestamp;
ie_forma_apuracao_w		fis_regra_ecf_0020.ie_forma_apuracao%type;
nr_seq_apuracao_w		bigint;
ie_tipo_apuracao_w		varchar(1);
dt_inicio_w			timestamp;
dt_fim_w				timestamp;
nr_indicador_w			smallint;
vl_custo_w			double precision;
ie_lote_anual_w			fis_lote_apuracao.ie_lote_anual%type;
nr_seq_item_w 			fis_livros_parte_b.nr_seq_item%type;
nr_seq_lote_w			fis_livros_parte_b.nr_seq_lote%type;
cd_conta_contabil_w		varchar(4000);
ie_lacs_lalur_w			varchar(2);
ds_hist_lan_lal_w			varchar(500);
cd_conta_contabil_ww		varchar(40);
ie_apres_conta_ctb_w		fis_lote_ecf.ie_apres_conta_ctb%type;
cd_centro_custo_w		varchar(10);
cd_classificacao_w		conta_contabil.cd_classificacao%type;

nr_pos_centro_w			integer;

nr_ini_w				smallint;
nr_fim_w				smallint;
ds_aux_w			text;
ds_texto_w			text;
cd_ver_w			varchar(4);

nr_seq_estrut_calc_w 		fis_lote_apuracao.nr_seq_estrutura%type;
ie_encerramento_w			varchar(2) := 'N';
vl_cc_w						double precision;
ie_forma_apuracao_ww		varchar(2);
ie_debito_credito_w			varchar(1);
cd_estabelecimento_scp_w	fis_controle_ecf.cd_estabelecimento_scp%type;

-- Registro M010
c01 CURSOR FOR
	SELECT 	b.cd_conta,
		b.ds_conta,
		a.dt_mes_apuracao,
		CASE WHEN coalesce(b.ie_lalur_lacs, 'LL')='LL' THEN  'I'  ELSE 'C' END  cod_tributo,
		b.vl_saldo,
		b.ie_debito_credito,
		b.cod_pb_rfb
	from 	fis_lote_apuracao 	a,
		fis_livros_parte_b 	b,
		fis_estrutura_calculo	c
	where 	a.nr_sequencia 	= b.nr_seq_lote
	and	a.nr_seq_estrutura = c.nr_sequencia
	and	a.cd_empresa = cd_empresa_p
	and	a.dt_mes_apuracao between dt_inicio_apuracao_w and dt_fim_apuracao_w
	and	(((ie_scp_p = 'S')
		and (coalesce(c.ie_scp, 'N') = 'S')
		and (c.cd_estabelecimento_scp = cd_estabelecimento_scp_w))
	or	((ie_scp_p = 'N') 
		and (coalesce(c.ie_scp, 'N') = 'N')));
vet01	c01%RowType;

-- Registro M030
c02 CURSOR FOR
	SELECT  	b.dt_mes_apuracao,
		a.ie_anual_trimestral,
		a.ie_forma_apuracao
	from	fis_estrutura_calculo a,
		fis_lote_apuracao b
	where	a.nr_sequencia 	= b.nr_seq_estrutura
	and 	b.dt_mes_apuracao	between dt_inicio_apuracao_w and dt_fim_apuracao_w
	and 	a.ie_lalur_lacs	= 'LL'
	and 	b.ie_lote_anual 	= 'N'
	and	b.cd_empresa = cd_empresa_p
	and	(((ie_scp_p = 'S')
		and (coalesce(a.ie_scp, 'N') = 'S')
		and (a.cd_estabelecimento_scp = cd_estabelecimento_scp_w))
	or	((ie_scp_p = 'N') 
		and (coalesce(a.ie_scp, 'N') = 'N')))		
	order by	b.dt_mes_apuracao;
vet02	c02%RowType;

-- Registro M300 / 350
c03 CURSOR FOR
	SELECT 	a.nr_sequencia,
		a.nr_seq_lote,
		a.nr_seq_item,
		d.cd_codigo_ecf,
		replace(trim(both substr(obter_desc_item_estrut(a.nr_seq_item),1,255)), chr(10), '') ds_item,
		a.vl_mes_01,
		a.vl_mes_02,
		a.vl_mes_03,
		a.vl_mes_04,
		a.vl_mes_05,
		a.vl_mes_06,
		a.vl_mes_07,
		a.vl_mes_08,
		a.vl_mes_09,
		a.vl_mes_10,
		a.vl_mes_11,
		a.vl_mes_12,
		a.vl_anual,
		coalesce((length(a.ds_origem) - length(replace(a.ds_origem, '#', ''))), 0) nr_contas,
		a.ds_origem ds_origem,
		(SELECT max(x.nr_sequencia) from fis_livros_parte_b x where a.nr_sequencia = x.nr_seq_item and a.nr_seq_lote = x.nr_seq_lote) ie_parte_b,
		b.ie_origem_valor
	from	fis_calculo_estrut 		a,
		fis_estrutura_item 		b,
		fis_estrutura_livros		c,
		fis_livros_estr_padrao	d,
		fis_lote_apuracao  		e,
		fis_estrutura_calculo		f
	where	a.nr_seq_estrut 	= b.nr_seq_estrutura
	and 	a.nr_seq_item	= b.nr_sequencia
	and	b.nr_seq_livros 	= c.nr_sequencia
	and	c.nr_seq_estrutura 	= d.nr_sequencia
	and	a.nr_seq_lote	= e.nr_sequencia
	and	a.nr_seq_estrut	= e.nr_seq_estrutura
	and 	a.ie_lalur_lacs	= ie_lacs_lalur_w
	and 	((b.ie_tipo_estrutura in ('EX', 'AD')) or (b.ie_tipo_estrutura = 'EP' and d.ie_permite_editar = 'S'))
	and 	((ie_lacs_lalur_w 	= 'LL' and d.ie_gerar_ecf = 'M300') or (ie_lacs_lalur_w = 'LC' and d.ie_gerar_ecf = 'M350'))
	and	a.dt_referencia 	between dt_inicio_w and dt_fim_w
	and 	e.ie_lote_anual	= ie_lote_anual_w
	and	e.cd_empresa = cd_empresa_p
	and	f.nr_sequencia 	= e.nr_seq_estrutura
	and	(((ie_scp_p = 'S')
		and (coalesce(f.ie_scp, 'N') = 'S')
		and (f.cd_estabelecimento_scp = cd_estabelecimento_scp_w))
	or	((ie_scp_p = 'N') 
		and (coalesce(f.ie_scp, 'N') = 'N')))	
	order by d.cd_codigo_ecf;
vet03	c03%RowType;

-- Registro M305 / M355
c04 CURSOR FOR
	SELECT	a.cd_conta,
		a.vl_saldo,
		a.ie_debito_credito
	from 	fis_livros_parte_b a
	where 	a.nr_seq_item = nr_seq_item_w
	and	a.nr_seq_lote = nr_seq_lote_w;
vet04	c04%RowType;

c05 CURSOR FOR
	SELECT 	c.cd_conta_contabil conta_contabil,
			    c.cd_centro_custo centro_custo,
			    sped_obter_campo_valor(c.vl_conta) vl_conta,
			    (SELECT max(ctb_obter_debito_credito(c.cd_conta_contabil, 3, null, null, null, c.vl_conta)) ) ie_debito_credito,
		      ctb_obter_classif_conta(c.cd_conta_contabil, null, to_char(dt_fim_w,'dd/mm/yyyy')) classificacao
	from	fis_ecf_valor_contabil_w c
	where	c.nr_seq_estrut_item = nr_seq_item_w
	and		c.nr_seq_lote = nr_seq_lote_w
  and   c.vl_conta <> 0;
vet05	c05%RowType;
	

BEGIN

select  max(dt_inicio_apuracao),
	max(dt_fim_apuracao),
	max(cd_ver),
	max(cd_estabelecimento_scp)
into STRICT	dt_inicio_apuracao_w,
	dt_fim_apuracao_w,
	cd_ver_w,
	cd_estabelecimento_scp_w
from	fis_controle_ecf
where	nr_sequencia = nr_seq_controle_p;

select  	max(ie_forma_apuracao)
into STRICT	ie_forma_apuracao_w
from	fis_regra_ecf_0020
where	cd_estabelecimento = cd_estabelecimento_p
and	cd_empresa = cd_empresa_p;

select	coalesce(max(a.ie_apres_conta_ctb),'CD'),
	max(a.nr_sequencia)
into STRICT	ie_apres_conta_ctb_w,
	nr_seq_lote_w
from	fis_lote_ecf a,
	fis_controle_ecf b
where	a.nr_sequencia = b.nr_seq_lote
and	b.nr_sequencia = nr_seq_controle_p;

tp_registro	:= 'M001';
ds_linha_w  	:=  substr( 	sep_w || tp_registro		|| -- Texto Fixo Contendo a Identificao do Registro.
				sep_w || 0 		|| -- Indicador de movimento: 0 - Bloco com dados informados; 1 - Bloco sem dados informados.
				sep_w,1,8000);

ds_arquivo_w		:= substr(ds_linha_w,1,4000);
ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
nr_seq_registro_w		:= nr_seq_registro_w + 1;
nr_linha_w		:= nr_linha_w + 1;

insert into fis_ecf_arquivo(
	nr_sequencia,
	nm_usuario,
	dt_atualizacao,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	nr_seq_controle_ecf,
	nr_linha,
	cd_registro,
	ds_arquivo,
	ds_arquivo_compl)
values (	nr_seq_registro_w,
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nr_seq_controle_p,
	nr_linha_w,
	tp_registro,
	ds_arquivo_w,
	ds_arquivo_compl_w);

open c01;
loop
fetch c01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	tp_registro	:= 'M010';

	ds_linha_w 	:=  sep_w || tp_registro					|| -- Texto Fixo Contendo a Identificao do Registro.
				sep_w || vet01.cd_conta				|| -- Co Unico Atribu pela Pessoa Jurica onta no e-Lalur e e-Lacs.
				sep_w || vet01.ds_conta				|| -- Descricaa da Conta.
				sep_w || to_char(vet01.dt_mes_apuracao, 'ddmmyyyy')	|| --Data Final: Data final do periodo de apuracao em que a conta foi criada.
				sep_w;
	if (cd_ver_w)::numeric  < 5 then
		ds_linha_w := ds_linha_w || '' || sep_w || '';						
	else
		ds_linha_w := ds_linha_w || vet01.cod_pb_rfb;
	end if;
		
	ds_linha_w := ds_linha_w || sep_w || ''						|| -- Data Limite: Data limite para a exclusao adicao ou compensacao do valor controlado, se houver.
				sep_w || vet01.cod_tributo				|| -- Indicador do Tributo da Adisao/Exclusao I - Imposto de Renda Pessoa Juridica C - Contribuicoa Social sobre o Lucro Liquido;
				sep_w || vet01.vl_saldo				|| -- Saldo Inicial: Saldo no periodo inicial desta escrituracoa. Se M010.DT_AP_LAL for no periodo da escrituracao, entao valor deve ser zero
				sep_w || vet01.ie_debito_credito			|| -- Indicador do Saldo Inicial: D - Para prejuisos ou valores que reduzam o lucro real ou a base de culo da contribuicao social em periodos subsequentes. C - Para valores que aumentem o lucro real ou a base de culo da contribuicao social em periodos subsequentes.
				sep_w || ''						|| -- CNPJ da outra pessoa jurca relacionada com evento origino da conta.
				sep_w;
	ds_linha_w			:= substr(ds_linha_w,1,8000);
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w		:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_ecf_arquivo(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_controle_ecf,
		nr_linha,
		cd_registro,
		ds_arquivo,
		ds_arquivo_compl)
	values (	nr_seq_registro_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_controle_p,
		nr_linha_w,
		tp_registro,
		ds_arquivo_w,
		ds_arquivo_compl_w);

	end;
end loop;
close c01;

if ie_forma_apuracao_w  = 'A' then
	tp_registro	:= 'M030'; --linha A00
	dt_inicio_w	:= dt_inicio_apuracao_w;
	dt_fim_w		:= dt_fim_apuracao_w;

	ds_linha_w  	:=  substr( sep_w || tp_registro	 			|| -- Texto Fixo Contendo a Identificacao do Registro
				sep_w || to_char(dt_inicio_w,'ddmmyyyy'	)	|| -- Data do Inicio do periodo
				sep_w || to_char(dt_fim_w,'ddmmyyyy')		|| -- Data do Fim do periodo
				sep_w || 'A00' 				|| -- periodo de Apuracao
				sep_w,1,8000);

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w		:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_ecf_arquivo(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_controle_ecf,
		nr_linha,
		cd_registro,
		ds_arquivo,
		ds_arquivo_compl)
	values (	nr_seq_registro_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_controle_p,
		nr_linha_w,
		tp_registro,
		ds_arquivo_w,
		ds_arquivo_compl_w);

	ie_lote_anual_w := 'S';
	ie_lacs_lalur_w := 'LL';
	open c03;
	loop
	fetch c03 into
		vet03;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		tp_registro	:= 'M300'; --da linha A00
		ds_hist_lan_lal_w := '';
		if vet03.nr_contas > 0 then
			if coalesce(vet03.ie_parte_b::text, '') = '' then
				nr_indicador_w := 2;
			else
				nr_indicador_w := 3;
			end if;
		else if coalesce(vet03.ie_parte_b::text, '') = '' then
				nr_indicador_w := 4;
			else
				nr_indicador_w := 1;
			end if;			
		end if;
		
		if (coalesce(vet03.vl_anual,0) <> 0)then
			ds_hist_lan_lal_w := vet03.ds_item;	
		end if;

		ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificacao do Registro.
					sep_w || vet03.cd_codigo_ecf		|| -- Lancamento no e-Lalur, conforme tabela dinamica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretorio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || vet03.ds_item		|| -- Descricao do Tipo de Lancamento no e-Lalur, conforme tabela dinamica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretorio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || ''				|| -- Indicador do Tipo de Lancamento: A-Adicao E - ExclusaoP - Compensacao de Prejuizo L - Lucro Observacao: O tipo -R- para linhas de titulos, que aparecem na interface do programa. Portanto, nao deve ser utilizado neste campo.
					sep_w || nr_indicador_w		|| -- Indicador de Relacionamento do Lancamento da Parte A: 1 - Com Conta da Parte B 2 - Com Conta Contl 3 - Com Conta da parte B e Conta Contl 4 - Sem Relacionamento
					sep_w || vet03.vl_anual		|| -- Valor do Lancamento no e-Lalur
					sep_w || ds_hist_lan_lal_w		|| -- Historico do Lancamento no e-Lalur
					sep_w,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w		:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_ecf_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_ecf,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);

		nr_seq_item_w := vet03.nr_seq_item;
		nr_seq_lote_w := vet03.nr_seq_lote;

		open c04;
		loop
		fetch c04 into
			vet04;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin
			tp_registro	:= 'M305'; --da linha A00
			ds_linha_w := substr( sep_w || tp_registro	 			|| -- Texto Fixo Contendo a Identificacao do Registro.
						sep_w || vet04.cd_conta			|| -- Conta na Parte B: contribuinte conta no e-Lalur no registro M010
						sep_w || vet04.vl_saldo			|| -- Valor Total dos Lancamentos: Valor total dos Lancamentos adicionados ou exclucoes da conta. Regra: Valor deve ser menor ou igual ao saldo disponvel do mesmo periodo de Apuracao da conta na parte B do registro M410.
						sep_w || vet04.ie_debito_credito		|| -- Indicador do Valor Total dos Lancamentos: D - Para prejuisos ou valores que reduzam o lucro real em periodos subsequentes. C - Para valores que aumentam o lucro real em periodos subsequentes.
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

			end;
		end loop;
		close c04;

		open c05;
		loop
		fetch c05 into
			vet05;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
				if (vet05.conta_contabil IS NOT NULL AND vet05.conta_contabil::text <> '') then
					tp_registro	:= 'M310';
          cd_conta_contabil_ww := vet05.conta_contabil;

          if (ie_apres_conta_ctb_w = 'CL') then
            cd_conta_contabil_ww := vet05.classificacao;
          elsif (ie_apres_conta_ctb_w = 'CP') then
            cd_conta_contabil_ww := substr(replace(vet05.classificacao, '.', ''), 1, 40);
          end if;						
					ds_linha_w := substr( 	sep_w || tp_registro	 				|| -- Texto Fixo Contendo a Identificacao do Registro.
											sep_w || cd_conta_contabil_ww			|| -- Codigo da Conta Contabil (Plano de Contas da Pessoa Jur?ca): Codigo da conta ou subconta onde est?egistrado o valor a ser adicionado ou exclusao, quando possivel sua Identificacao (deve existir no J050).
											sep_w || vet05.centro_custo				|| -- Codigo do Centro de Custos (deve existir no J100).
											sep_w || vet05.vl_conta					|| -- Valor da Conta Utilizado no Lancamento da Parte A.
											sep_w || vet05.ie_debito_credito		|| -- Indicador do Valor do Lancamento: D - Devedor. C - Credor.
											sep_w,1,8000);	

					ds_arquivo_w		:= substr(ds_linha_w,1,4000);
					ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
					nr_seq_registro_w		:= nr_seq_registro_w + 1;
					nr_linha_w		:= nr_linha_w + 1;

					insert into fis_ecf_arquivo(
									nr_sequencia,
									nm_usuario,
									dt_atualizacao,
									nm_usuario_nrec,
									dt_atualizacao_nrec,
									nr_seq_controle_ecf,
									nr_linha,
									cd_registro,
									ds_arquivo,
									ds_arquivo_compl)
					values (	nr_seq_registro_w,
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nr_seq_controle_p,
							nr_linha_w,
							tp_registro,
							ds_arquivo_w,
							ds_arquivo_compl_w);
				end if;
			end;
		end loop;
		close c05;
		
		end;
	end loop;
	close c03;

	ie_lote_anual_w := 'S';
	ie_lacs_lalur_w := 'LC';
	open c03;
	loop
	fetch c03 into
		vet03;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		tp_registro	:= 'M350'; --da linha A00
		ds_hist_lan_lal_w := '';
		if vet03.nr_contas > 0 then
			if coalesce(vet03.ie_parte_b::text, '') = '' then
				nr_indicador_w := 2;
			else
				nr_indicador_w := 3;
			end if;
		else if coalesce(vet03.ie_parte_b::text, '') = '' then
				nr_indicador_w := 4;
			else
				nr_indicador_w := 1;
			end if;
		end if;
		
		if (coalesce(vet03.vl_anual,0) <> 0)then
			ds_hist_lan_lal_w := vet03.ds_item;	
		end if;	

		ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificacao do Registro.
					sep_w || vet03.cd_codigo_ecf		|| -- Codigo do Lancamento no e-Lalur, conforme tabela dinamica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretorio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || vet03.ds_item		|| -- Descricao do Tipo de Lancamento no e-Lalur, conforme tabela dinamica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretorio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || ''				|| -- Indicador do Tipo de Lancamento
					sep_w || nr_indicador_w		|| -- Indicador de Relacionamento do Lancamento da Parte A: 1 - Com Conta da Parte B 2 - Com Conta Contabil 3 - Com Conta da parte B e Conta Contabil 4 - Sem Relacionamento
					sep_w || vet03.vl_anual		|| -- Valor do Lancamento no e-Lalur
					sep_w || ds_hist_lan_lal_w		|| -- Histo do Lancamento no e-Lalur
					sep_w,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w		:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_ecf_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_ecf,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);

		nr_seq_item_w := vet03.nr_seq_item;
		nr_seq_lote_w := vet03.nr_seq_lote;

		open c04;
		loop
		fetch c04 into
			vet04;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin
			tp_registro	:= 'M355';

			ds_linha_w := substr( sep_w || tp_registro	 			|| -- Texto Fixo Contendo a Identificacao do Registro.
						sep_w || vet04.cd_conta			|| -- Codigo da Conta na Parte B: Codigo unico atribuicao pelo contribuinte conta no e-Lalur no registro M010
						sep_w || vet04.vl_saldo			|| -- Valor Total dos Lancamentos: Valor total dos Lancamentos adicionados ou exclusao da conta. Regra: Valor deve ser menor ou igual ao saldo disponivel do mesmo periodo de Apuracao da conta na parte B do registro M410.
						sep_w || vet04.ie_debito_credito		|| -- Indicador do Valor Total dos Lancamentos: D - Para prejuisos ou valores que reduzam o lucro real em periodos subsequentes. C - Para valores que aumentam o lucro real em periodos subsequentes.
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

			end;
		end loop;
		close c04;

		open c05;
		loop
		fetch c05 into
			vet05;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
				if (vet05.conta_contabil IS NOT NULL AND vet05.conta_contabil::text <> '') then
					tp_registro	:= 'M360';
          
          cd_conta_contabil_ww := vet05.conta_contabil;

          if (ie_apres_conta_ctb_w = 'CL') then
            cd_conta_contabil_ww := vet05.classificacao;
          elsif (ie_apres_conta_ctb_w = 'CP') then
            cd_conta_contabil_ww := substr(replace(vet05.classificacao, '.', ''), 1, 40);
          end if;		
					ds_linha_w := substr( 	sep_w || tp_registro	 				|| -- Texto Fixo Contendo a Identificacao do Registro.
											sep_w || cd_conta_contabil_ww			|| -- Codigo da Conta Contabil (Plano de Contas da Pessoa Juridica): Codigo da conta ou subconta Contabil onde est?egistrado o valor a ser adicionado ou exclusao, quando possivel sua Identificacao (deve existir no J050).
											sep_w || vet05.centro_custo				|| -- Codigo do Centro de Custos (deve existir no J100).
											sep_w || vet05.vl_conta					|| -- Valor da Conta Utilizado no Lancamento da Parte A.
											sep_w || vet05.ie_debito_credito		|| -- Indicador do Valor do Lancamento: D - Devedor. C - Credor.
											sep_w,1,8000);	

					ds_arquivo_w		:= substr(ds_linha_w,1,4000);
					ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
					nr_seq_registro_w		:= nr_seq_registro_w + 1;
					nr_linha_w		:= nr_linha_w + 1;

					insert into fis_ecf_arquivo(
									nr_sequencia,
									nm_usuario,
									dt_atualizacao,
									nm_usuario_nrec,
									dt_atualizacao_nrec,
									nr_seq_controle_ecf,
									nr_linha,
									cd_registro,
									ds_arquivo,
									ds_arquivo_compl)
					values (	nr_seq_registro_w,
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nr_seq_controle_p,
							nr_linha_w,
							tp_registro,
							ds_arquivo_w,
							ds_arquivo_compl_w);
				end if;
			end;
		end loop;
		close c05;

		end;
	end loop;
	close c03;

end if;

open c02;
loop
fetch c02 into
	vet02;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	if (vet02.ie_forma_apuracao <> 'R') then
		tp_registro	:= 'M030';

		if (vet02.ie_anual_trimestral = 'A') then
			dt_inicio_w 		:= dt_inicio_apuracao_w;
			dt_fim_w			:= fim_mes(vet02.dt_mes_apuracao);
			ie_tipo_apuracao_w 	:= 'A';
			nr_seq_apuracao_w 	:= to_char(dt_fim_w, 'mm');
		else
			dt_inicio_w 		:= trunc(add_months(vet02.dt_mes_apuracao, -2), 'month');
			dt_fim_w			:= vet02.dt_mes_apuracao;
			ie_tipo_apuracao_w 	:= 'T';
			nr_seq_apuracao_w 	:= (to_char(dt_fim_w, 'mm') / 3);
		end if;

		ds_linha_w := substr( sep_w || tp_registro	 				|| -- Texto Fixo Contendo a Identificacao do Registro
				  sep_w || to_char(dt_inicio_w,'ddmmyyyy')			|| -- Data do Inicio do periodo
				  sep_w || to_char(dt_fim_w ,'ddmmyyyy')				|| -- Data do Fim do periodo
				  sep_w || ie_tipo_apuracao_w || lpad(nr_seq_apuracao_w, 2, '0')	|| -- periodo de Apuracao
				  sep_w,1,8000);		

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w		:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_ecf_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_ecf,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);

		ie_lote_anual_w := 'N';
		ie_lacs_lalur_w := 'LL';
		dt_inicio_w 	:= trunc(vet02.dt_mes_apuracao, 'month');
		open c03;
		loop
		fetch c03 into
			vet03;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			tp_registro	:= 'M300';

			ds_hist_lan_lal_w := '';
			if vet03.nr_contas > 0 then
				if coalesce(vet03.ie_parte_b::text, '') = '' then
					nr_indicador_w := 2;
				else
					nr_indicador_w := 3;
				end if;
			else if coalesce(vet03.ie_parte_b::text, '') = '' then
					nr_indicador_w := 4;
				else
					nr_indicador_w := 1;
				end if;
			end if;

			case to_char(vet02.dt_mes_apuracao, 'mm')
			when '01' then
				vl_custo_w := vet03.vl_mes_01;
			when '02' then
				vl_custo_w := vet03.vl_mes_02;
			when '03' then
				vl_custo_w := vet03.vl_mes_03;
			when '04' then
				vl_custo_w := vet03.vl_mes_04;
			when '05' then
				vl_custo_w := vet03.vl_mes_05;
			when '06' then
				vl_custo_w := vet03.vl_mes_06;
			when '07' then
				vl_custo_w := vet03.vl_mes_07;
			when '08' then
				vl_custo_w := vet03.vl_mes_08;
			when '09' then
				vl_custo_w := vet03.vl_mes_09;
			when '10' then
				vl_custo_w := vet03.vl_mes_10;
			when '11' then
				vl_custo_w := vet03.vl_mes_11;
			when '12' then
				vl_custo_w := vet03.vl_mes_12;
			else
				vl_custo_w := null;
			end case;
			
			if (coalesce(vl_custo_w,0) <> 0)then
				ds_hist_lan_lal_w := vet03.ds_item;	
			end if;			

			ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificacao do Registro.
						sep_w || vet03.cd_codigo_ecf		|| -- Codigo do Lancamento no e-Lalur, conforme tabela dinamica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretorio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vet03.ds_item		|| -- Descricao do Tipo de Lancamento no e-Lalur, conforme tabela dinamica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretorio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || ''				|| -- Indicador do Tipo de Lancamento.
						sep_w || nr_indicador_w		|| -- Indicador de Relacionamento do Lancamento da Parte A: 1 - Com Conta da Parte B 2 - Com Conta Contabil 3 - Com Conta da parte B e Conta Contabil 4 - Sem Relacionamento
						sep_w || vl_custo_w			|| -- Valor do Lancamento no e-Lalur
						sep_w || ds_hist_lan_lal_w		|| -- Histo do Lancamento no e-Lalur
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

			nr_seq_item_w := vet03.nr_seq_item;
			nr_seq_lote_w := vet03.nr_seq_lote;

			open c04;
			loop
			fetch c04 into
				vet04;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin
				tp_registro	:= 'M305';

				ds_linha_w := substr( sep_w || tp_registro	 			|| -- Texto Fixo Contendo a Identificacao do Registro.
							sep_w || vet04.cd_conta			|| -- Codigo da Conta na Parte B: Codigo unico atribuicao pelo contribuinte onta no e-Lalur no registro M010
							sep_w || vet04.vl_saldo			|| -- Valor Total dos Lancamentos: Valor total dos Lancamentos adicionados ou exclusao da conta. Regra: Valor deve ser menor ou igual ao saldo disponivel do mesmo periodo de Apuracao da conta na parte B do registro M410.
							sep_w || vet04.ie_debito_credito		|| -- Indicador do Valor Total dos Lancamentos: D - Para prejuisos ou valores que reduzam o lucro real em periodos subsequentes. C - Para valores que aumentam o lucro real em periodos subsequentes.
							sep_w,1,8000);

				ds_arquivo_w		:= substr(ds_linha_w,1,4000);
				ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
				nr_seq_registro_w		:= nr_seq_registro_w + 1;
				nr_linha_w		:= nr_linha_w + 1;

				insert into fis_ecf_arquivo(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_controle_ecf,
					nr_linha,
					cd_registro,
					ds_arquivo,
					ds_arquivo_compl)
				values (	nr_seq_registro_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_controle_p,
					nr_linha_w,
					tp_registro,
					ds_arquivo_w,
					ds_arquivo_compl_w);
				end;
			end loop;
			close c04;
			
			open c05;
			loop
			fetch c05 into
				vet05;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				begin
					if (vet05.conta_contabil IS NOT NULL AND vet05.conta_contabil::text <> '') then
						tp_registro	:= 'M310';

            cd_conta_contabil_ww := vet05.conta_contabil;

            if (ie_apres_conta_ctb_w = 'CL') then
              cd_conta_contabil_ww := vet05.classificacao;
            elsif (ie_apres_conta_ctb_w = 'CP') then
              cd_conta_contabil_ww := substr(replace(vet05.classificacao, '.', ''), 1, 40);
            end if;		
						ds_linha_w := substr( 	sep_w || tp_registro	 				|| -- Texto Fixo Contendo a Identificacao do Registro.
												sep_w || cd_conta_contabil_ww			|| -- Codigo da Conta Contabil (Plano de Contas da Pessoa Juridica): Codigo da conta ou subconta Contabil onde est?egistrado o valor a ser adicionado ou exclusao, quando possivell sua Identificacao (deve existir no J050).
												sep_w || vet05.centro_custo				|| -- Codigo do Centro de Custos (deve existir no J100).
												sep_w || vet05.vl_conta					|| -- Valor da Conta Utilizado no Lancamento da Parte A.
												sep_w || vet05.ie_debito_credito		|| -- Indicador do Valor do Lancamento: D - Devedor. C - Credor.
												sep_w,1,8000);	

						ds_arquivo_w		:= substr(ds_linha_w,1,4000);
						ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
						nr_seq_registro_w		:= nr_seq_registro_w + 1;
						nr_linha_w		:= nr_linha_w + 1;

						insert into fis_ecf_arquivo(
										nr_sequencia,
										nm_usuario,
										dt_atualizacao,
										nm_usuario_nrec,
										dt_atualizacao_nrec,
										nr_seq_controle_ecf,
										nr_linha,
										cd_registro,
										ds_arquivo,
										ds_arquivo_compl)
						values (	nr_seq_registro_w,
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nr_seq_controle_p,
								nr_linha_w,
								tp_registro,
								ds_arquivo_w,
								ds_arquivo_compl_w);
					end if;
				end;
			end loop;
			close c05;

			end;
		end loop;
		close c03;

		ie_lote_anual_w := 'N';
		ie_lacs_lalur_w := 'LC';
		dt_inicio_w 	:= trunc(vet02.dt_mes_apuracao, 'month');
		open c03;
		loop
		fetch c03 into
			vet03;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			tp_registro	:= 'M350';

			ds_hist_lan_lal_w := '';
			if vet03.nr_contas > 0 then
				if coalesce(vet03.ie_parte_b::text, '') = '' then
					nr_indicador_w := 2;
				else
					nr_indicador_w := 3;
				end if;
			else if coalesce(vet03.ie_parte_b::text, '') = '' then
					nr_indicador_w := 4;
				else
					nr_indicador_w := 1;
				end if;
			end if;	

			case to_char(vet02.dt_mes_apuracao, 'mm')
			when '01' then
				vl_custo_w := vet03.vl_mes_01;
			when '02' then
				vl_custo_w := vet03.vl_mes_02;
			when '03' then
				vl_custo_w := vet03.vl_mes_03;
			when '04' then
				vl_custo_w := vet03.vl_mes_04;
			when '05' then
				vl_custo_w := vet03.vl_mes_05;
			when '06' then
				vl_custo_w := vet03.vl_mes_06;
			when '07' then
				vl_custo_w := vet03.vl_mes_07;
			when '08' then
				vl_custo_w := vet03.vl_mes_08;
			when '09' then
				vl_custo_w := vet03.vl_mes_09;
			when '10' then
				vl_custo_w := vet03.vl_mes_10;
			when '11' then
				vl_custo_w := vet03.vl_mes_11;
			when '12' then
				vl_custo_w := vet03.vl_mes_12;
			else
				vl_custo_w := null;
			end case;
			
			if (coalesce(vl_custo_w,0) <> 0)then
				ds_hist_lan_lal_w := vet03.ds_item;	
			end if;		
			
			ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificacao do Registro.
						sep_w || vet03.cd_codigo_ecf		|| -- Codigo do Lancamento no e-Lalur, conforme tabela dinamica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretorio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vet03.ds_item		|| -- Descricao do Tipo de Lancamento no e-Lalur, conforme tabela dinamica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretorio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || ''				|| -- Indicador do Tipo de Lancamento.
						sep_w || nr_indicador_w		|| -- Indicador de Relacionamento do Lancamento da Parte A: 1 - Com Conta da Parte B 2 - Com Conta Contabil 3 - Com Conta da parte B e Conta Contabil 4 - Sem Relacionamento
						sep_w || vl_custo_w			|| -- Valor do Lancamento no e-Lalur
						sep_w || ds_hist_lan_lal_w 		|| -- Historico do Lancamento no e-Lalur
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

			nr_seq_item_w := vet03.nr_seq_item;
			nr_seq_lote_w := vet03.nr_seq_lote;

			open c04;
			loop
			fetch c04 into
				vet04;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin
				tp_registro	:= 'M355';

				ds_linha_w := substr( sep_w || tp_registro	 			|| -- Texto Fixo Contendo a Identificacao do Registro.
							sep_w || vet04.cd_conta			|| -- Codigo da Conta na Parte B: Codigo unico atribuicao pelo contribuinte onta no e-Lalur no registro M010
							sep_w || vet04.vl_saldo			|| -- Valor Total dos Lancamentos: Valor total dos Lancamentos adicionados ou exclusao da conta. Regra: Valor deve ser menor ou igual ao saldo disponivel do mesmo periodo de Apuracao da conta na parte B do registro M410.
							sep_w || vet04.ie_debito_credito		|| -- Indicador do Valor Total dos Lancamentos: D - Para prejuisos ou valores que reduzam o lucro real em periodos subsequentes. C - Para valores que aumentam o lucro real em periodos subsequentes.
							sep_w,1,8000);

				ds_arquivo_w		:= substr(ds_linha_w,1,4000);
				ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
				nr_seq_registro_w		:= nr_seq_registro_w + 1;
				nr_linha_w		:= nr_linha_w + 1;

				insert into fis_ecf_arquivo(
					nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_controle_ecf,
					nr_linha,
					cd_registro,
					ds_arquivo,
					ds_arquivo_compl)
				values (	nr_seq_registro_w,
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_controle_p,
					nr_linha_w,
					tp_registro,
					ds_arquivo_w,
					ds_arquivo_compl_w);

				end;
			end loop;
			close c04;

			open c05;
			loop
			fetch c05 into
				vet05;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				begin
					if (vet05.conta_contabil IS NOT NULL AND vet05.conta_contabil::text <> '') then
						tp_registro	:= 'M360';
          
            cd_conta_contabil_ww := vet05.conta_contabil;

            if (ie_apres_conta_ctb_w = 'CL') then
              cd_conta_contabil_ww := vet05.classificacao;
            elsif (ie_apres_conta_ctb_w = 'CP') then
              cd_conta_contabil_ww := substr(replace(vet05.classificacao, '.', ''), 1, 40);
            end if;	

						ds_linha_w := substr( 	sep_w || tp_registro	 				|| -- Texto Fixo Contendo a Identificacao do Registro.
												sep_w || cd_conta_contabil_ww			|| -- Codigo da Conta Contabil (Plano de Contas da Pessoa Jur?ca): Codigo da conta ou subconta Contabil onde est?egistrado o valor a ser adicionado ou exclusao, quando possivel sua Identificacao (deve existir no J050).
												sep_w || vet05.centro_custo				|| -- Codigo do Centro de Custos (deve existir no J100).
												sep_w || vet05.vl_conta					|| -- Valor da Conta Utilizado no Lancamento da Parte A.
												sep_w || vet05.ie_debito_credito		|| -- Indicador do Valor do Lancamento: D - Devedor. C - Credor.
												sep_w,1,8000);	

						ds_arquivo_w		:= substr(ds_linha_w,1,4000);
						ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
						nr_seq_registro_w		:= nr_seq_registro_w + 1;
						nr_linha_w		:= nr_linha_w + 1;

						insert into fis_ecf_arquivo(
										nr_sequencia,
										nm_usuario,
										dt_atualizacao,
										nm_usuario_nrec,
										dt_atualizacao_nrec,
										nr_seq_controle_ecf,
										nr_linha,
										cd_registro,
										ds_arquivo,
										ds_arquivo_compl)
						values (	nr_seq_registro_w,
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nr_seq_controle_p,
								nr_linha_w,
								tp_registro,
								ds_arquivo_w,
								ds_arquivo_compl_w);
					end if;
				end;
			end loop;
			close c05;
			
			end;
		end loop;
		close c03;

	end if;
	end;
end loop;
close c02;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

SELECT * FROM fis_reg_ecf_M990(nr_seq_controle_p, ds_separador_p, cd_estabelecimento_p, nm_usuario_p, cd_empresa_p, qt_linha_p, nr_sequencia_p) INTO STRICT qt_linha_p, nr_sequencia_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_reg_ecf_m010 ( nr_seq_controle_p text, ds_separador_p text, cd_estabelecimento_p text, nm_usuario_p text, cd_empresa_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_scp_p text) FROM PUBLIC;

