-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_ctb_bal_periodo ( cd_empresa_p bigint, cd_estab_p bigint, cd_classificacao_p text, dt_inicio_p timestamp, dt_final_p timestamp, ie_normal_encerramento_p text, cd_conta_contabil_p text, nr_nivel_p text, ie_diario_mensal_p text, nm_usuario_p text, ie_com_movimento_p text default 'N') AS $body$
DECLARE



nr_seq_mes_ref_w		bigint;
ie_normal_encerramento_w	varchar(1);
cd_empresa_w		smallint;
cd_conta_contabil_w	varchar(20);
cd_classificacao_w		varchar(40);
cd_grupo_w		bigint;
ie_tipo_w			varchar(1);
ie_nivel_w		bigint;
ie_centro_custo_w		varchar(1);
dt_referencia_w		timestamp;
ds_conta_apres_w		varchar(100);
vl_debito_w		double precision;
vl_credito_w		double precision;
vl_saldo_w		double precision;
vl_movimento_w		double precision;
vl_saldo_ant_w		double precision;
qt_conta_w		bigint;
ie_diario_mensal_w		varchar(01);
cd_estabelecimento_w	bigint;
dt_inicio_w		timestamp;
dt_final_w		timestamp;
cd_conta_debito_w		varchar(20);
cd_conta_credito_w	varchar(20);
dt_movimento_w		timestamp;

vl_debito_per_w		double precision;
vl_credito_per_w		double precision;
vl_movto_per_w		double precision;
vl_movto_ant_w		double precision;
ie_deb_cre_cta_w		varchar(01);
ie_deb_cre_mov_w		varchar(01);
ie_com_movimento_w		varchar(01);

c01 CURSOR FOR
	SELECT
		a.cd_estabelecimento,
		a.cd_conta_contabil,
		a.cd_classificacao,
		a.cd_grupo,
		a.ie_tipo,
		ctb_obter_nivel_classif_conta(a.cd_classificacao),
		a.ie_centro_custo,
		substr(a.ds_conta_apres,1,100),
		sum(CASE WHEN x.dt_referencia=dt_inicio_w THEN  a.vl_saldo_ant  ELSE 0 END ),
		sum(CASE WHEN x.dt_referencia=dt_final_w THEN  a.vl_saldo  ELSE 0 END ),
		sum(a.vl_debito),
		sum(a.vl_credito),
		sum(a.vl_movimento)
	from	ctb_balancete_v a,
		ctb_mes_ref x
	where	a.nr_seq_mes_ref =			x.nr_sequencia
	and	x.dt_referencia between dt_inicio_w and dt_final_w
	and	((a.cd_estabelecimento		= cd_estab_p) or (coalesce(cd_estab_p,0) = 0))
	and	((coalesce(cd_classificacao_p,'0') = '0') or (ctb_obter_se_conta_classif_sup(a.cd_conta_contabil,cd_classificacao_p) = 'S'))
	and (ctb_obter_nivel_classif_conta(a.cd_classificacao) <= nr_nivel_p)
	and	((coalesce(cd_conta_contabil_p,'0') = '0') or (ctb_obter_se_conta_contida(a.cd_conta_contabil, cd_conta_contabil_p) = 'S'))
	and	a.ie_normal_encerramento		= ie_normal_encerramento_p
	and	a.cd_empresa			= cd_empresa_p
	group by
		a.cd_estabelecimento,
		a.cd_conta_contabil,
		a.cd_classificacao,
		a.cd_grupo,
		a.ie_tipo,
		ctb_obter_nivel_classif_conta(a.cd_classificacao),
		a.ie_centro_custo,
		a.ds_conta_apres;

c02 CURSOR FOR
SELECT	
	a.dt_movimento,
	a.vl_movimento,
	'D'
FROM	lote_contabil d,
	ctb_movimento a
WHERE	a.nr_lote_contabil		= d.nr_lote_contabil
and	dt_movimento	between dt_inicio_w and dt_final_p
and	a.cd_conta_debito		= cd_conta_contabil_w
and	d.cd_estabelecimento	= cd_estabelecimento_w

union all

SELECT	
	a.dt_movimento,
	a.vl_movimento,
	'C'
FROM	lote_contabil d,
	ctb_movimento a
WHERE	a.nr_lote_contabil		= d.nr_lote_contabil
and	dt_movimento	between dt_inicio_w and dt_final_p
and	a.cd_conta_credito		= cd_conta_contabil_w
and	d.cd_estabelecimento	= cd_estabelecimento_w;


BEGIN

dt_inicio_w		:= trunc(dt_inicio_p, 'month');
dt_final_w		:= trunc(coalesce(dt_final_p,dt_inicio_p), 'month');
ie_diario_mensal_w	:= coalesce(ie_diario_mensal_p,'M');
qt_conta_w		:= 0;
ie_com_movimento_w	:= coalesce(ie_com_movimento_p, 'N');


if (ie_diario_mensal_w = 'D') and (dt_inicio_w	<> dt_final_w) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266516);
	/*O periodo diario deve ser dentro do mesmo mes');*/

end if;

delete from w_ctb_balancete
where nm_usuario = nm_usuario_p;
commit;

OPEN  c01;
LOOP
FETCH c01 into
	cd_estabelecimento_w,
	cd_conta_contabil_w,
	cd_classificacao_w,
	cd_grupo_w,
	ie_tipo_w,
	ie_nivel_w,
	ie_centro_custo_w,
	ds_conta_apres_w,
	vl_saldo_ant_w,
	vl_saldo_w,
	vl_debito_w,
	vl_credito_w,
	vl_movimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	if (ie_diario_mensal_w 	= 'D') then
		vl_movto_ant_w		:= 0;
		vl_movto_per_w		:= 0;
		vl_debito_per_w		:= 0;
		vl_credito_per_w	:= 0;

		begin
		SELECT	c.ie_debito_credito
		INTO STRICT	ie_deb_cre_cta_w
		FROM	ctb_grupo_conta c,
			Conta_contabil b
		WHERE	cd_conta_contabil		= cd_conta_contabil_w
		and	b.cd_grupo			= c.cd_grupo;
		exception when others then
			ie_deb_cre_cta_w	:= '';
		end;

		OPEN  c02;
		LOOP
		FETCH c02 into
				dt_movimento_w,
				vl_movimento_w,
				ie_deb_cre_mov_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			vl_debito_w			:= 0;
			vl_credito_w			:= 0;
			if (ie_deb_cre_mov_w = 'D') then
				vl_debito_w		:= vl_movimento_w;
			else
				vl_credito_w		:= vl_movimento_w;
			end if;
			if (ie_deb_cre_mov_w <> ie_deb_cre_cta_w) then
				vl_movimento_w	:= vl_movimento_w * -1;
			end if;
			if (dt_movimento_w < dt_inicio_p) then
				vl_movto_ant_w	:= vl_movto_ant_w + vl_movimento_w;
			elsif (dt_movimento_w <= dt_final_p) then
				vl_debito_per_w	:= vl_debito_per_w + vl_debito_w;
				vl_credito_per_w	:= vl_credito_per_w + vl_credito_w;
				vl_movto_per_w	:= vl_movto_per_w + vl_movimento_w;
			end if;

		END LOOP;
		CLOSE C02;
		vl_saldo_ant_w	:= vl_saldo_ant_w + vl_movto_ant_w;
		vl_saldo_w	:= vl_saldo_ant_w + vl_movto_per_w;
		vl_debito_w	:= vl_debito_per_w;
		vl_credito_w	:= vl_credito_per_w;


		if((vl_debito_w > 0 or vl_credito_w > 0) and ie_tipo_w = 'A') then
			if (ie_deb_cre_cta_w = 'D') then
				vl_movimento_w := vl_debito_w - vl_credito_w;
			else
				vl_movimento_w := vl_credito_w - vl_debito_w;
			end if;
		end if;
	end if;

	if ((ie_com_movimento_w = 'N') or
	    ((ie_com_movimento_w = 'S') and (coalesce(vl_movimento_w, 0) != 0))) then
	     
		insert	into w_ctb_balancete(
			ie_normal_encerramento,
			cd_empresa,
			cd_estabelecimento,
			cd_conta_contabil,
			cd_classificacao,
			cd_grupo,
			ie_tipo,
			ie_nivel,
			ie_centro_custo,
			ds_conta_apres,
			vl_debito,
			vl_credito,
			vl_saldo,
			vl_movimento,
			vl_saldo_ant,
			nm_usuario,
			dt_atualizacao)
		values (
			ie_normal_encerramento_p,
			cd_empresa_p,
			cd_estabelecimento_w,
			cd_conta_contabil_w,
			cd_classificacao_w,
			cd_grupo_w,
			ie_tipo_w,
			ie_nivel_w,
			ie_centro_custo_w,
			ds_conta_apres_w,
			vl_debito_w,
			vl_credito_w,
			vl_saldo_w,
			vl_movimento_w,
			vl_saldo_ant_w,
			nm_usuario_p,
			clock_timestamp() );	
	end if;
	

END LOOP;
CLOSE c01;
commit;

if (ie_diario_mensal_w 	= 'D') then
	CALL CTB_Acumular_Saldo_bal(nm_usuario_p);
end if;
commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_ctb_bal_periodo ( cd_empresa_p bigint, cd_estab_p bigint, cd_classificacao_p text, dt_inicio_p timestamp, dt_final_p timestamp, ie_normal_encerramento_p text, cd_conta_contabil_p text, nr_nivel_p text, ie_diario_mensal_p text, nm_usuario_p text, ie_com_movimento_p text default 'N') FROM PUBLIC;

