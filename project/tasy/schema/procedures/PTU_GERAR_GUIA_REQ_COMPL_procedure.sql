-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_guia_req_compl ( nr_seq_pedido_aut_compl_p ptu_pedido_compl_aut.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


ie_funcao_scs_w		varchar(1);
nr_seq_guia_w		pls_guia_plano.nr_sequencia%type;
nr_seq_requisicao_w	pls_requisicao.nr_sequencia%type;

cd_guia_principal_w	pls_guia_plano.cd_guia_principal%type;
nr_seq_guia_principal_w	pls_guia_plano.nr_sequencia%type;
nr_seq_req_principal_w	pls_requisicao.nr_sequencia%type;

ie_carater_atend_ref_w	pls_param_intercambio_scs.ie_carater_atend_ref%type;
ie_carater_internacao_w	pls_guia_plano.ie_carater_internacao%type;

C01 CURSOR(nr_seq_pedido_aut_compl_pc  	ptu_pedido_compl_aut.nr_sequencia%type) FOR

	SELECT	a.ds_observacao,
		a.ds_indicacao_clinica,
		a.ds_biometria,
		a.nr_seq_origem,
		a.cd_unimed_executora,
		(SELECT	max(b.nr_sequencia)
		from	pls_congenere b
		where	b.cd_cooperativa = a.cd_unimed_executora) nr_seq_uni_exec,
		(select	max(b.cd_especialidade)
		from	especialidade_medica b
		where	b.cd_ptu	= a.cd_especialidade) cd_especialidade,
		(select	b.nr_sequencia
		from    pls_segurado_carteira c,
			pls_segurado b
		where   c.nr_seq_segurado	= b.nr_sequencia
		and	c.cd_usuario_plano	= lpad(a.cd_unimed,4,0)||a.cd_usuario_plano) nr_seq_segurado,
		(select	b.nr_seq_plano
		from    pls_segurado_carteira c,
			pls_segurado b
		where   c.nr_seq_segurado	= b.nr_sequencia
		and	c.cd_usuario_plano	= lpad(a.cd_unimed,4,0)||a.cd_usuario_plano) nr_seq_plano
	from	ptu_pedido_compl_aut a
	where	a.nr_sequencia = nr_seq_pedido_aut_compl_pc;

BEGIN

--Obter funccao utilizada pelo SCS
ie_funcao_scs_w := pls_obter_funcao_scs;

select	max(ie_carater_atend_ref)
into STRICT	ie_carater_atend_ref_w
from	pls_param_intercambio_scs;

--Carrega os dados importados no XML para as tabelas quentes
for c01_w in C01( nr_seq_pedido_aut_compl_p ) loop

	if (c01_w.nr_seq_segurado IS NOT NULL AND c01_w.nr_seq_segurado::text <> '') then
		--Funcao OPS - Autorizacao
		if ( ie_funcao_scs_w = 'A' ) then

			--Select para obter a guia principal, onde o complemento esta vinculado
			select	max(nr_seq_guia)
			into STRICT	nr_seq_guia_principal_w
			from	ptu_pedido_autorizacao
			where	nr_seq_execucao		= c01_w.nr_seq_origem
			and	cd_unimed_executora	= c01_w.cd_unimed_executora
			and	(nr_seq_guia IS NOT NULL AND nr_seq_guia::text <> '');

			cd_guia_principal_w := substr(pls_obter_cd_seq_guia(nr_seq_guia_principal_w,null),1,20);
	
	
			if (ie_carater_atend_ref_w = 'S') then
				select	ie_carater_internacao
				into STRICT	ie_carater_internacao_w
				from	pls_guia_plano
				where	nr_sequencia = nr_seq_guia_principal_w;
			else
				ie_carater_internacao_w := null;
			end if;
			
			
			insert	into pls_guia_plano(nr_sequencia, cd_guia, dt_solicitacao,
				ie_tipo_guia, nr_seq_segurado, cd_estabelecimento,
				nr_seq_plano, ie_status, ds_observacao,
				ie_estagio, dt_atualizacao, nm_usuario,
				ie_tipo_processo, cd_medico_solicitante, nr_seq_uni_exec,
				ie_tipo_intercambio, ie_origem_solic,
				nm_usuario_nrec, dt_atualizacao_nrec, cd_especialidade,
				ds_indicacao_clinica, ie_carater_internacao,
				ds_biometria, nr_seq_guia_principal, cd_guia_principal)
			values ( nextval('pls_guia_plano_seq'), null, clock_timestamp(),
				'2', c01_w.nr_seq_segurado, cd_estabelecimento_p,
				c01_w.nr_seq_plano, '2', c01_w.ds_observacao,
				7, clock_timestamp(), nm_usuario_p,
				'I', null, c01_w.nr_seq_uni_exec,
				'E','I',
				nm_usuario_p, clock_timestamp(), c01_w.cd_especialidade,
				c01_w.ds_indicacao_clinica, ie_carater_internacao_w,
				c01_w.ds_biometria, nr_seq_guia_principal_w, cd_guia_principal_w
				) returning nr_sequencia into nr_seq_guia_w;

			CALL pls_guia_gravar_historico( nr_seq_guia_w,2, expressao_pck.obter_desc_expressao(967595) ||c01_w.cd_unimed_executora, null,nm_usuario_p);

		--Funcao OPS - Requisicao para autorizacao
		elsif ( ie_funcao_scs_w = 'R' ) then

			--Select para obter a guia principal, onde o complemento esta vinculado
			select	max(nr_seq_requisicao)
			into STRICT	nr_seq_req_principal_w
			from	ptu_pedido_autorizacao
			where	nr_seq_execucao		= c01_w.nr_seq_origem
			and	(nr_seq_requisicao IS NOT NULL AND nr_seq_requisicao::text <> '')
			and	cd_unimed_executora	= c01_w.cd_unimed_executora;

			--E necessario obter a sequencia da Guia gerada ao executar a requisicao
			select	max(nr_seq_guia)
			into STRICT	nr_seq_guia_principal_w
			from	pls_execucao_req_item
			where	nr_seq_requisicao	= nr_seq_req_principal_w;

			cd_guia_principal_w 	:= substr(pls_obter_cd_seq_guia(nr_seq_guia_principal_w,null),1,20);

			if (ie_carater_atend_ref_w = 'S') then
				select	CASE WHEN ie_carater_internacao='E' THEN  'E' WHEN ie_carater_internacao='U' THEN  'U'  ELSE null END
				into STRICT	ie_carater_internacao_w
				from	pls_guia_plano
				where	nr_sequencia = nr_seq_guia_principal_w;
			else
				ie_carater_internacao_w := null;
			end if;

			insert	into pls_requisicao(nr_sequencia, dt_requisicao,
				ie_tipo_guia, nr_seq_segurado, cd_estabelecimento,
				nr_seq_plano, nr_seq_prestador, ie_status,
				ie_estagio, dt_atualizacao, nm_usuario,
				ie_tipo_processo, cd_medico_solicitante, nr_seq_uni_exec,
				ie_tipo_intercambio, ie_origem_solic, cd_especialidade,
				nm_usuario_nrec, dt_atualizacao_nrec,
				ds_biometria, ie_carater_atendimento,
				ds_observacao,ds_indicacao_clinica, nr_seq_guia_principal,
				cd_guia_principal)
			values ( nextval('pls_requisicao_seq'), clock_timestamp(),
				'2', c01_w.nr_seq_segurado, cd_estabelecimento_p,
				c01_w.nr_seq_plano, null, 'P',
				1, clock_timestamp(), nm_usuario_p,
				'I', null, c01_w.nr_seq_uni_exec,
				'E', 'I', c01_w.cd_especialidade,
				nm_usuario_p, clock_timestamp(),
				c01_w.ds_biometria, ie_carater_internacao_w,
				c01_w.ds_observacao, c01_w.ds_indicacao_clinica, nr_seq_guia_principal_w,
				cd_guia_principal_w ) returning nr_sequencia into nr_seq_requisicao_w;

			CALL pls_requisicao_gravar_hist( nr_seq_requisicao_w,'L', expressao_pck.obter_desc_expressao(967595) ||c01_w.cd_unimed_executora, null,nm_usuario_p);

		end if;

		--Atualiza a sequencia da Guia ou Requisicao gerada para pedido
		update	ptu_pedido_compl_aut
		set	nr_seq_guia		= nr_seq_guia_w,
			nr_seq_requisicao   	= nr_seq_requisicao_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_pedido_aut_compl_p;

		commit;
	end if;

end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_guia_req_compl ( nr_seq_pedido_aut_compl_p ptu_pedido_compl_aut.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

