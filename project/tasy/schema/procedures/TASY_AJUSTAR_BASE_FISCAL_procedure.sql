-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_ajustar_base_fiscal (nm_usuario_p text) AS $body$
DECLARE


dt_versao_atual_cliente_w 		timestamp;
qt_registro_w			bigint;
qt_registro1_w			bigint;


BEGIN
CALL abortar_se_base_wheb();
dt_versao_atual_cliente_w := coalesce(to_date(to_char(obter_data_geracao_versao-1,'dd/mm/yyyy') ||' 23:59:59','dd/mm/yyyy hh24:mi:ss'),clock_timestamp() - interval '90 days');


--Bruno 
if (dt_versao_atual_cliente_w < to_date('19/10/2010', 'dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	 dmed_beneficiario_pago
	where	coalesce(vl_pago_beneficiario::text, '') = '';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table dmed_beneficiario_pago modify VL_PAGO_BENEFICIARIO  number(15,2)');
		commit;
	end if;
	
end if;

if (dt_versao_atual_cliente_w < to_date('17/12/2010', 'dd/mm/yyyy')) then	
	CALL exec_sql_dinamico('Tasy','alter table fis_variacao_fiscal modify cd_natureza_operacao number(4)');
	commit;
end if;

if (dt_versao_atual_cliente_w < to_date('27/12/2010', 'dd/mm/yyyy')) then	
	CALL exec_sql_dinamico('Tasy','alter table fis_variacao_fiscal modify cd_tipo_material varchar2(2)');
	commit;
 end if;

if (dt_versao_atual_cliente_w < to_date('20/03/2011', 'dd/mm/yyyy')) then	
	CALL exec_sql_dinamico('Tasy','alter table dmed_ops_reembolso modify nr_seq_titular number(10)');
	CALL exec_sql_dinamico('Tasy','alter table dmed_ops_depend_titular modify nr_seq_dmed_titular number(10)');
	commit;
end if;


if (dt_versao_atual_cliente_w < to_date('22/08/2011', 'dd/mm/yyyy')) then	
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'ATUALIZACAO_TASY'
	and	column_name	= 'DS_OBSERVAÇÃO';
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table atualizacao_tasy drop column DS_OBSERVAÇÃO');
	end if;
	
	commit;
end if;


if (dt_versao_atual_cliente_w < to_date('20/09/2011', 'dd/mm/yyyy')) then
	
	select	count(*)
	into STRICT	qt_registro1_w
	from	user_tab_columns
	where	table_name	= 'CONTROLE_PESSOA'
	and	column_name	= 'NM_USUARIO_NREC';
	
	if (qt_registro1_w > 0) then
		update	controle_pessoa
		set	nm_usuario_nrec = nm_usuario, dt_atualizacao_nrec = dt_atualizacao;
	end if;
	
	commit;
end if;


if (dt_versao_atual_cliente_w < to_date('01/11/2011', 'dd/mm/yyyy')) then
	
	select  count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where 	CONSTRAINT_NAME = 'SACBOLALT_SACBOOC_FK';
	
	if qt_registro_w > 0 then
		CALL exec_sql_dinamico('Tasy','alter table SAC_BOLETIM_ALT_HIST drop constraint SACBOLALT_SACBOOC_FK');
		-- Criar Integridade Referêncial da tabela: SAC_BOLETIM_ALT_HIST
		CALL exec_sql_dinamico('Tasy',' Alter Table SAC_BOLETIM_ALT_HIST add (Constraint SACBOLALT_SACBOOC_FK Foreign Key ( ' ||
				 ' NR_SEQ_BOLETIM_OCOR) References SAC_BOLETIM_OCORRENCIA (NR_SEQUENCIA) on delete cascade)');
	end if;
	
	select  count(*)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	CONSTRAINT_NAME = 'SACBOLALT_SACREBO_FK';
	
	if qt_registro_w > 0 then
		CALL exec_sql_dinamico('Tasy','alter table SAC_BOLETIM_ALT_HIST drop constraint SACBOLALT_SACREBO_FK');
		-- Criar Integridade Referêncial da tabela: SAC_BOLETIM_ALT_HIST
		CALL exec_sql_dinamico('Tasy',' Alter Table SAC_BOLETIM_ALT_HIST add ( ' ||
				' Constraint SACBOLALT_SACREBO_FK Foreign Key (NR_SEQ_RESP_BO) References SAC_RESP_BOL_OCOR (' ||
				' NR_SEQUENCIA) on delete cascade)');
	end if;

	
end if;

if (dt_versao_atual_cliente_w < to_date('27/04/2011', 'dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Tasy','alter table fun_motivo_feedback drop constraint FUNMOTFED_FUNTIPFED_FK ');
end if;

if (dt_versao_atual_cliente_w < to_date('01/10/2012', 'dd/mm/yyyy')) then
		CALL BACA_CD_EMPRESA();
end if;

if (dt_versao_atual_cliente_w < to_date('08/10/2012', 'dd/mm/yyyy')) then
	select 	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	upper(object_name) = upper('CTB_MOVIMENTO_INSERT');
	if qt_registro_w > 0 then
		CALL exec_sql_dinamico('Tasy','drop trigger CTB_MOVIMENTO_INSERT');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('27/11/2012', 'dd/mm/yyyy')) then
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'GPI_PROJETO'
		AND		COLUMN_NAME	= 'CD_CLASSIFICACAO';
		
		if (qt_registro_w > 0) then
			
			CALL exec_sql_dinamico('Tasy','update gpi_projeto set cd_classificacao = null');
			CALL exec_sql_dinamico('Tasy','alter table gpi_projeto modify cd_classificacao number(10)');
		
			select	count(*)
			into STRICT	qt_registro_w
			from	user_constraints
			where	table_name	= 'GPI_PROJETO'
			AND		CONSTRAINT_NAME	= 'GPIPROJ_GPIPROCLA_FK';			

			if (qt_registro_w = 0) then

				CALL exec_sql_dinamico('Tasy', 	'Alter Table GPI_PROJETO add (' ||
											'	Constraint GPIPROJ_GPIPROCLA_FK Foreign Key ('  ||
											'				CD_CLASSIFICACAO' ||
											'	) References GPI_PROJ_CLASSIF (' ||
											'				NR_SEQUENCIA' ||
											'	))');
			end if;
		end if;
end if;

if (dt_versao_atual_cliente_w < to_date('10/01/2013', 'dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Tasy','update tributo set IE_GERA_NF_DEVOLUCAO = ''S'' ');	
end if;

if (dt_versao_atual_cliente_w < to_date('04/12/2014', 'dd/mm/yyyy')) then
	
	qt_registro_w := 0;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'SITUACAO_TRIB_PREST_SERV'
	and	column_name = 'CD_ESTABELECIMENTO'
	and	nullable = 'N';
	
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('Tasy',' alter table situacao_trib_prest_serv modify cd_estabelecimento null ');
		end;
	end if;
	
	CALL exec_sql_dinamico('Tasy',' update situacao_trib_prest_serv set cd_empresa = obter_empresa_estab(cd_estabelecimento) where nvl(cd_empresa,0) <> obter_empresa_estab(cd_estabelecimento) ');
	
end if;

if (dt_versao_atual_cliente_w < to_date('11/02/2015', 'dd/mm/yyyy')) then
	
	qt_registro_w	:=	0;
	
	select  count(*)
	into STRICT	qt_registro_w
	from	TABELA_ATRIBUTO
	where	upper(NM_ATRIBUTO) = upper('IE_ORIGEM_PROCED');
	
	if (qt_registro_w = 0)then
		CALL exec_sql_dinamico('Tasy',' ALTER TABLE dirf_regra_item  ADD (IE_ORIGEM_PROCED NUMBER(10))');
		
		CALL exec_sql_dinamico('Tasy',' Alter Table DIRF_REGRA_ITEM add ('||
								 ' Constraint DIRFREGIT_PROCEDI_FK Foreign Key ('||
								 ' CD_PROCEDIMENTO '||
								 ' ,IE_ORIGEM_PROCED '||
								 ' ) References PROCEDIMENTO ('||
								 ' CD_PROCEDIMENTO '||
								 ' ,IE_ORIGEM_PROCED '||
									' ))');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('28/05/2015', 'dd/mm/yyyy')) then

	qt_registro_w := 0;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	upper(table_name) = 'SISCOSERV_FATURA'
	and	upper(column_name) = 'NR_SEQ_LOTE';

	if (qt_registro_w = 0)then
		begin
		CALL exec_sql_dinamico('Tasy',' alter table siscoserv_fatura add (nr_seq_lote number(10)) ');
		end;
	end if;
end if;


if (dt_versao_atual_cliente_w < to_date('11/09/2015', 'dd/mm/yyyy')) then

	qt_registro_w := 0;
	
	select	count(*)
	into STRICT 	qt_registro_w
	from	user_tab_columns
	where	upper(table_name) = upper('fis_regra_ecf_0020')	
	and	upper(column_name) = upper('ie_tipo_entidade')
	and	upper(data_type)  = upper('varchar2');

	if (qt_registro_w = 0)then
		begin
		CALL exec_sql_dinamico('Tasy',' alter table fis_regra_ecf_0020 modify ie_tipo_entidade varchar2(2) ');
		end;
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('01/09/2016', 'dd/mm/yyyy')) then

	qt_registro_w := 0;
	
	select	count(*)
	into STRICT 	qt_registro_w
	from	user_tab_columns
	where	upper(table_name) = upper('fis_regra_ecf_0020')	
	and	upper(column_name) = upper('ie_tipo_ecf')
	and	upper(data_type)  = upper('varchar2');

	if (qt_registro_w = 0)then
		begin
		CALL exec_sql_dinamico('Tasy',' alter table fis_regra_ecf_0020 modify ie_tipo_ecf number(10) ');
		end;
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('01/02/2016', 'dd/mm/yyyy')) then
	begin
	qt_registro_w := 0;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'REGALCS_PROCEDI_FK_I2';

	if (qt_registro_w > 0)then
		begin
		CALL exec_sql_dinamico('Tasy',' drop index REGALCS_PROCEDI_FK_I2 ');
		CALL exec_sql_dinamico('Tasy',' Create Index REGALCS_PROCEDI_FK2_I on REGRA_ALOC_CUSTO_SETOR(CD_PROC_CUSTO, IE_ORIGEM_PROC_CUSTO) ');	
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'REGALCS_PROCEDI_FK2_I';
	
	if (qt_registro_w = 0) then
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'REGALCS_PROCEDI_FK_I2';
		
		if (qt_registro_w > 0)then
			begin
			CALL exec_sql_dinamico('Tasy',' drop index REGALCS_PROCEDI_FK_I2 ');
			end;
		end if;
		
		CALL exec_sql_dinamico('Tasy',' Create Index REGALCS_PROCEDI_FK2_I on REGRA_ALOC_CUSTO_SETOR(CD_PROC_CUSTO, IE_ORIGEM_PROC_CUSTO) ');	
		
		end;
	end if;
	
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('04/03/2016', 'dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'FISCAES_CTBTRIB_FK_I';

	if (qt_registro_w > 0)then
		begin
		CALL exec_sql_dinamico('Tasy',' drop index FISCAES_CTBTRIB_FK_I ');
		end;
	end if;
	
	select  count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where 	CONSTRAINT_NAME = 'FISCAES_CTBTRIB_FK';
	
	if (qt_registro_w > 0)then
		begin
		CALL exec_sql_dinamico('Tasy',' alter table fis_calculo_estrut drop constraint FISCAES_CTBTRIB_FK ');
		end;
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('29/03/2016', 'dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	upper(table_name) = upper('NOTA_FISCAL_DESP_ADIC')	
	and	upper(column_name) = upper('NR_DOCUMENTO')
	and	data_precision = 7;
	
	if (qt_registro_w > 0)	then
		begin
		CALL exec_sql_dinamico('Tasy',' alter table NOTA_FISCAL_DESP_ADIC modify nr_documento number(10) ');
		end;
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('01/08/2016', 'dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	upper(table_name) = upper('FIS_REGRA_ECF_0020')	
	and	upper(column_name) = upper('IE_PJ_ALIQUOTA')
	and	nullable = 'N';
	
	if (qt_registro_w > 0)	then
		begin
		CALL exec_sql_dinamico('Tasy',' alter table FIS_REGRA_ECF_0020  modify IE_PJ_ALIQUOTA null ');
		end;
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('25/09/2016', 'dd/mm/yyyy')) then
	
	select	count(*)
	into STRICT	qt_registro_w
	from	integridade_referencial
	where	nm_integridade_referencial = 'NOFICON_NOTFIIT_FK';
	
	if (qt_registro_w > 0)then
		begin
		CALL exec_sql_dinamico('Tasy',' delete integridade_atributo where nm_integridade_referencial =  ''NOFICON_NOTFIIT_FK'' ');
		CALL exec_sql_dinamico('Tasy',' delete integridade_referencial where nm_integridade_referencial =  ''NOFICON_NOTFIIT_FK'' ');
		end;
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice = 'NOFICON_NOTFIIT_FK_I';
	
	if (qt_registro_w > 0)then
		begin
		CALL exec_sql_dinamico('Tasy',' delete INDICE_ATRIBUTO where nm_indice =  ''NOFICON_NOTFIIT_FK_I'' ');
		CALL exec_sql_dinamico('Tasy',' delete INDICE where nm_indice =  ''NOFICON_NOTFIIT_FK_I'' ');
		end;
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'NOFICON_NOTFIIT_FK_I';

	if (qt_registro_w > 0)then
		begin
		CALL exec_sql_dinamico('Tasy',' drop index NOFICON_NOTFIIT_FK_I ');
		end;
	end if;
	
	select  count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where 	CONSTRAINT_NAME = 'NOFICON_NOTFIIT_FK';
	
	if (qt_registro_w > 0)then
		begin
		CALL exec_sql_dinamico('Tasy',' alter table nota_fiscal_consist drop constraint NOFICON_NOTFIIT_FK ');
		end;
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_ajustar_base_fiscal (nm_usuario_p text) FROM PUBLIC;

