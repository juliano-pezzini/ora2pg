-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_copia_evento_contabil ( nm_usuario_p usuario.nm_usuario%type, cd_estab_origem_p estabelecimento.cd_estabelecimento%type, cd_estab_destino_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


cd_centro_custo_w		centro_custo.cd_centro_custo%type;
cd_conta_contabil_w		conta_contabil.cd_conta_contabil%type;
cd_empresa_origem_w		estabelecimento.cd_empresa%type;
nr_seq_grupo_w			grupo_emp_estrutura.nr_seq_grupo%type;
nr_seq_classif_movto_w		ctb_classif_movimento.nr_sequencia%type;

qt_registro_w			integer;

c01 CURSOR FOR
	SELECT	cd_tipo_lote_contabil,
		cd_evento,
		nr_sequencia,
		ie_origem_conta,
		cd_conta_contabil,
		cd_centro_custo,
		cd_historico,
		ie_origem_centro,
		nr_seq_classif_movto
	from	evento_contabil_param_estab
	where	cd_estabelecimento = cd_estab_origem_p;

c01_w		c01%rowtype;


BEGIN

cd_empresa_origem_w		:= obter_empresa_estab(cd_estab_origem_p);
nr_seq_grupo_w			:= holding_pck.get_grupo_emp_estrut_vigente(cd_empresa_origem_w);

open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	begin
	select	cd_centro_custo
	into STRICT	cd_centro_custo_w
	from	centro_custo
	where	cd_centro_custo_ref = c01_w.cd_centro_custo
	and	ie_situacao = 'A'
	and	cd_estabelecimento = cd_estab_destino_p;
	exception
	when no_data_found then
		cd_centro_custo_w	:= null;
	end;

	begin
	select	a.cd_conta_contabil
	into STRICT	cd_conta_contabil_w
	from	conta_contabil a,
		estabelecimento b
	where	a.cd_empresa = b.cd_empresa
	and	b.cd_estabelecimento = cd_estab_destino_p
	and	a.cd_conta_referencia = c01_w.cd_conta_contabil
	and	a.ie_situacao = 'A';
	exception
	when no_data_found then
		cd_conta_contabil_w	:= null;
	end;
	
	begin
	select	a.nr_sequencia
	into STRICT	nr_seq_classif_movto_w
	from	ctb_classif_movimento a,
		estabelecimento b
	where	a.cd_empresa = holding_pck.get_emp_controladora_grupo(nr_seq_grupo_w, b.cd_empresa)
	and	b.cd_estabelecimento = cd_estab_destino_p
	and	nr_seq_grupo_emp = nr_seq_grupo_w
	and	nr_sequencia = c01_w.nr_seq_classif_movto;
	exception
	when no_data_found then
		nr_seq_classif_movto_w := null;
	end;

	select	count(1)
	into STRICT	qt_registro_w
	from	evento_contabil_param_estab a
	where	cd_estabelecimento = cd_estab_destino_p
	and	cd_tipo_lote_contabil = c01_w.cd_tipo_lote_contabil
	and	cd_evento = c01_w.cd_evento
	and	nr_sequencia = c01_w.nr_sequencia;
	
	if (qt_registro_w = 0) then
		begin
		insert into evento_contabil_param_estab(cd_estabelecimento,
							cd_tipo_lote_contabil,
							cd_evento,
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							ie_origem_conta,
							cd_conta_contabil,
							cd_centro_custo,
							cd_historico,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ie_origem_centro,
							nr_seq_classif_movto)
						values (cd_estab_destino_p,
							c01_w.cd_tipo_lote_contabil,
							c01_w.cd_evento,
							c01_w.nr_sequencia,
							clock_timestamp(),
							nm_usuario_p,
							c01_w.ie_origem_conta,
							cd_conta_contabil_w,
							cd_centro_custo_w,
							c01_w.cd_historico,
							clock_timestamp(),
							nm_usuario_p,
							c01_w.ie_origem_centro,
							nr_seq_classif_movto_w);
		commit;
		end;
	elsif (qt_registro_w > 0) then
		begin

		update	evento_contabil_param_estab
		set	cd_estabelecimento	= cd_estab_destino_p,
			cd_tipo_lote_contabil	= c01_w.cd_tipo_lote_contabil,
			cd_evento		= c01_w.cd_evento,
			nr_sequencia		= c01_w.nr_sequencia,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			ie_origem_conta		= c01_w.ie_origem_conta,
			cd_conta_contabil	= cd_conta_contabil_w,
			cd_centro_custo		= cd_centro_custo_w,
			cd_historico		= c01_w.cd_historico,
			ie_origem_centro	= c01_w.ie_origem_centro,
			nr_seq_classif_movto	= nr_seq_classif_movto_w
		where	cd_estabelecimento = cd_estab_destino_p
		and	cd_tipo_lote_contabil = c01_w.cd_tipo_lote_contabil
		and	cd_evento = c01_w.cd_evento
		and	nr_sequencia = c01_w.nr_sequencia;
		commit;
		end;
	end if;
	
	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_copia_evento_contabil ( nm_usuario_p usuario.nm_usuario%type, cd_estab_origem_p estabelecimento.cd_estabelecimento%type, cd_estab_destino_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

