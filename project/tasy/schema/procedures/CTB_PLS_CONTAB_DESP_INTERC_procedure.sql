-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_contab_desp_interc ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Contabilizar os valores de contas de intercambio
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_referencia_w			timestamp;
cd_estabelecimento_w		smallint;
cd_conta_contabil_w		varchar(20);
cd_conta_cred_w			varchar(20);
cd_conta_deb_w			varchar(20);
vl_contabil_w			double precision;
vl_retorno_w			varchar(2000);
dt_referencia_mens_w		timestamp;
nr_seq_w_movto_cont_w		bigint;
cd_historico_w			bigint;
nr_seq_conta_w			bigint;
cd_centro_custo_deb_w		integer;
cd_centro_custo_cred_w		integer;
ie_centro_custo_w		varchar(1);
nr_seq_item_w			bigint;
ds_item_w			varchar(255);
ie_proc_mat_w			varchar(2);
ie_tipo_item_w			varchar(10);
nr_lote_contabil_w		bigint;
ie_compl_hist_w			varchar(2);
ds_conteudo_w			varchar(4000);
nr_seq_protocolo_w		bigint;
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
nr_seq_regra_cc_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
ie_regulamentacao_w		varchar(2);
cd_centro_custo_fixo_w		integer;
nm_agrupador_w			varchar(255);
nr_seq_agrupamento_w		bigint;
nr_seq_fatura_w			bigint;
nr_titulo_pagar_w		bigint;
nr_titulo_pagar_ndc_w		ptu_fatura.nr_titulo_ndc%type;
ds_pessoa_titulo_w		varchar(255);
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;	
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
nr_fatura_w			ptu_fatura.nr_fatura%type;
nr_nota_credito_debito_w	ptu_fatura.nr_nota_credito_debito%type;
nr_seq_prestador_exec_w		pls_conta.nr_seq_prestador_exec%type;
nr_seq_prestador_solic_w	pls_conta.nr_seq_prestador%type;
nr_seq_prestador_atend_w	pls_protocolo_conta.nr_seq_prestador%type;
ie_centro_custo_deb_w		varchar(1);
ie_centro_custo_cred_w		varchar(1);
cd_centro_custo_fixo_deb_w	integer;
cd_centro_custo_fixo_cred_w	integer;

c_itens_conta CURSOR FOR
	SELECT	'P', /*Procedimento*/
		c.nr_sequencia,
		substr(obter_descricao_procedimento(c.cd_procedimento,c.ie_origem_proced),1,255) ds_item,
		c.cd_conta_deb,
		c.cd_conta_cred,
		(coalesce(c.vl_liberado,0) + coalesce(c.vl_glosa,0)),
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico,
		b.nr_sequencia,
		b.nr_seq_segurado,
		b.nr_seq_protocolo,
		b.nr_seq_fatura,
		'PLS_CONTA_PROC' nm_tabela,
		'VL_SOMA_PROC' nm_atributo,
		23 nr_seq_info_ctb,
		b.nr_seq_plano,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta	a,
		pls_conta		b,
		pls_conta_proc		c
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'I'
	and	b.ie_status <> 'C'
	
union all

	SELECT	'M', /*Material*/
		c.nr_sequencia,
		substr(obter_descricao_padrao('PLS_MATERIAL','DS_MATERIAL',c.nr_seq_material),1,255) ds_item,
		c.cd_conta_deb,
		c.cd_conta_cred,
		(coalesce(c.vl_liberado,0) + coalesce(c.vl_glosa,0)),
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico,
		b.nr_sequencia,
		b.nr_seq_segurado,
		b.nr_seq_protocolo,
		b.nr_seq_fatura,
		'PLS_CONTA_MAT' nm_tabela,
		'VL_SOMA_MAT' nm_atributo,
		23 nr_seq_info_ctb,
		b.nr_seq_plano,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta	a,
		pls_conta		b,
		pls_conta_mat		c
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'I'
	and	b.ie_status <> 'C'
	
union all

	select	'PG', /*Procedimento glosa*/
		c.nr_sequencia,
		substr(obter_descricao_procedimento(c.cd_procedimento,c.ie_origem_proced),1,255) ds_item,
		c.cd_conta_glosa_deb,
		c.cd_conta_glosa_cred,
		coalesce(c.vl_glosa,0),
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico_glosa,
		b.nr_sequencia,
		b.nr_seq_segurado,
		b.nr_seq_protocolo,
		b.nr_seq_fatura,
		'PLS_CONTA_PROC' nm_tabela,
		'VL_GLOSA' nm_atributo,
		24 nr_seq_info_ctb,
		b.nr_seq_plano,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta	a,
		pls_conta		b,
		pls_conta_proc		c
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	coalesce(c.vl_glosa,0) > 0
	and	a.ie_tipo_protocolo	= 'I'
	and	b.ie_status <> 'C'
	
union all

	select	'MG', /*Material glosa*/
		c.nr_sequencia,
		substr(obter_descricao_padrao('PLS_MATERIAL','DS_MATERIAL',nr_seq_material),1,255) ds_item,
		c.cd_conta_glosa_deb,
		c.cd_conta_glosa_cred,
		coalesce(c.vl_glosa,0),
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico_glosa,
		b.nr_sequencia,
		b.nr_seq_segurado,
		b.nr_seq_protocolo,
		b.nr_seq_fatura,
		'PLS_CONTA_MAT' nm_tabela,
		'VL_GLOSA' nm_atributo,
		24 nr_seq_info_ctb,
		b.nr_seq_plano,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta	a,
		pls_conta		b,
		pls_conta_mat		c
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	coalesce(c.vl_glosa,0) > 0
	and	b.ie_status <> 'C'
	and	a.ie_tipo_protocolo	= 'I'
	
union all

	select	'P', /*Procedimento*/
		c.nr_sequencia,
		substr(obter_descricao_procedimento(c.cd_procedimento,c.ie_origem_proced),1,255) ds_item,
		c.cd_conta_deb_tx_inter_glosa,
		c.cd_conta_cred_tx_inter_glosa,
		coalesce(c.vl_procedimento_imp,0) - (coalesce(c.vl_taxa_material_imp,0) + coalesce(c.vl_taxa_servico_imp,0) + coalesce(c.vl_taxa_co_imp,0)),
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico_tx_inter_glosa,
		b.nr_sequencia,
		b.nr_seq_segurado,
		b.nr_seq_protocolo,
		b.nr_seq_fatura,
		'PLS_CONTA_PROC' nm_tabela,
		'VL_SOMA_PROC' nm_atributo,
		23 nr_seq_info_ctb,
		b.nr_seq_plano,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta	a,
		pls_conta		b,
		pls_conta_proc		c
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	a.ie_tipo_protocolo	= 'I'
	and	coalesce(c.vl_procedimento_imp,0) - (coalesce(c.vl_taxa_material_imp,0) + coalesce(c.vl_taxa_servico_imp,0) + coalesce(c.vl_taxa_co_imp,0)) > 0
	and	b.ie_status <> 'C'
	
union all

	select	'M', /*Material*/
		c.nr_sequencia,
		substr(obter_descricao_padrao('PLS_MATERIAL','DS_MATERIAL',nr_seq_material),1,255) ds_item,
		c.cd_conta_deb_tx_inter_glosa,
		c.cd_conta_cred_tx_inter_glosa ,
		coalesce(c.vl_material_imp,0) - coalesce(c.vl_taxa_material_imp,0),
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico_tx_inter_glosa,
		b.nr_sequencia,
		b.nr_seq_segurado,
		b.nr_seq_protocolo,
		b.nr_seq_fatura,
		'PLS_CONTA_MAT' nm_tabela,
		'VL_SOMA_MAT' nm_atributo,
		23 nr_seq_info_ctb,
		b.nr_seq_plano,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta	a,
		pls_conta		b,
		pls_conta_mat		c
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	coalesce(c.vl_material_imp,0) - coalesce(c.vl_taxa_material_imp,0) > 0
	and	a.ie_tipo_protocolo	= 'I'
	and	b.ie_status <> 'C'
	
union all

	select	'P', /*Procedimento*/
		c.nr_sequencia,
		substr(obter_descricao_procedimento(c.cd_procedimento,c.ie_origem_proced),1,255) ds_item,
		c.cd_conta_deb_tx_inter,
		c.cd_conta_cred_tx_inter,
		coalesce(c.vl_taxa_material_imp,0) + coalesce(c.vl_taxa_servico_imp,0) + coalesce(c.vl_taxa_co_imp,0),
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico_tx_inter,
		b.nr_sequencia,
		b.nr_seq_segurado,
		b.nr_seq_protocolo,
		b.nr_seq_fatura,
		'PLS_CONTA_PROC' nm_tabela,
		'VL_SOMA_PROC' nm_atributo,
		23 nr_seq_info_ctb,
		b.nr_seq_plano,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta	a,
		pls_conta		b,
		pls_conta_proc		c
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	coalesce(c.vl_taxa_material_imp,0) + coalesce(c.vl_taxa_servico_imp,0) + coalesce(c.vl_taxa_co_imp,0) > 0
	and	a.ie_tipo_protocolo	= 'I'
	and	b.ie_status <> 'C'
	
union all

	select	'M', /*Material*/
		c.nr_sequencia,
		substr(obter_descricao_padrao('PLS_MATERIAL','DS_MATERIAL',nr_seq_material),1,255) ds_item,
		c.cd_conta_deb_tx_inter,
		c.cd_conta_cred_tx_inter,
		coalesce(c.vl_taxa_material_imp,0),
		trunc(a.dt_mes_competencia,'dd'),
		c.cd_historico_tx_inter,
		b.nr_sequencia,
		b.nr_seq_segurado,
		b.nr_seq_protocolo,
		b.nr_seq_fatura,
		'PLS_CONTA_MAT' nm_tabela,
		'VL_SOMA_MAT' nm_atributo,
		23 nr_seq_info_ctb,
		b.nr_seq_plano,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		b.nr_seq_prestador nr_seq_prestador_solic,
		a.nr_seq_prestador nr_seq_prestador_atend
	from	pls_protocolo_conta	a,
		pls_conta		b,
		pls_conta_mat		c
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	coalesce(c.vl_taxa_material_imp,0) > 0
	and	a.ie_tipo_protocolo	= 'I'
	and	b.ie_status <> 'C';

c_movimento CURSOR FOR
	SELECT	oid
	from	movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;

c_movimento_w CURSOR FOR
	SELECT	oid
	from	w_movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;

BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 33) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
select	dt_referencia,
	cd_estabelecimento,
	nr_lote_contabil,
	cd_tipo_lote_contabil
into STRICT	dt_referencia_w,
	cd_estabelecimento_w,
	nr_lote_contabil_w,
	cd_tipo_lote_contabil_w
from	lote_contabil
where	nr_lote_contabil	= nr_lote_contabil_p;

delete	from w_pls_movimento_sem_conta
where	ie_tipo_item in ('PCM','MCM')
and	trunc(dt_referencia,'month')	= trunc(dt_referencia_w,'month');

if (ie_exclusao_p = 'S') then
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');

	for reg in c_movimento
		loop
		delete	from movimento_contabil
		where   rowid	= reg.rowid;
		end loop;

	update	lote_contabil
	set	vl_credito		= 0,
		vl_debito		= 0,
		dt_geracao_lote		 = NULL
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;

	update	pls_conta_proc a
	set	a.nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;

	update	pls_conta_mat a
	set	a.nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;

	update	pls_protocolo_conta
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;

	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else

	CALL wheb_usuario_pck.set_ie_lote_contabil('S');

	CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
				1,
				wheb_mensagem_pck.get_texto(1097173),
				nm_usuario_p);

	for reg in c_movimento_w
		loop
		delete	from w_movimento_contabil
		where   rowid	= reg.rowid;
		end loop;

	dt_ref_inicial_w	:= trunc(trunc(dt_referencia_w, 'month'),'dd');
	dt_ref_final_w		:= fim_dia(fim_mes(dt_ref_inicial_w));

	update	pls_protocolo_conta
	set	nr_lote_contabil	= nr_lote_contabil_p
	where	coalesce(nr_lote_contabil,0)	= 0
	and	ie_situacao		!= 'RE'
	and	cd_estabelecimento	= cd_estabelecimento_w
	and	ie_tipo_protocolo	= 'I'
	and	ie_status in (3,4,6)
	and	dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w;
	
	commit;

	update	pls_conta_proc		c
	set	c.nr_lote_contabil 	= nr_lote_contabil_p
	where	exists (SELECT	1
			from	pls_conta		b,
				pls_protocolo_conta	a
			where	b.nr_sequencia		= c.nr_seq_conta
			and	a.nr_sequencia		= b.nr_seq_protocolo
			and	a.nr_lote_contabil	= nr_lote_contabil_p
			and	a.ie_tipo_protocolo	= 'I');
			
	commit;

	update	pls_conta_mat		c
	set	c.nr_lote_contabil 	= nr_lote_contabil_p
	where	exists (SELECT	1
			from	pls_conta		b,
				pls_protocolo_conta	a
			where	b.nr_sequencia		= c.nr_seq_conta
			and	a.nr_sequencia		= b.nr_seq_protocolo
			and	a.nr_lote_contabil	= nr_lote_contabil_p
			and	a.ie_tipo_protocolo	= 'I');
			
	commit;

	CALL wheb_usuario_pck.set_ie_lote_contabil('N');

	nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'NR_SEQ_CONTA');

	/*  Paulo 29/09/2009 - OS 168594 */

	begin
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception
	when others then
		ie_compl_hist_w	:= 'N';
	end;

	nr_seq_w_movto_cont_w	:= 0;

	open c_itens_conta;
	loop
	fetch c_itens_conta into
		ie_proc_mat_w,
		nr_seq_item_w,
		ds_item_w,
		cd_conta_deb_w,
		cd_conta_cred_w,
		vl_contabil_w,
		dt_referencia_mens_w,
		cd_historico_w,
		nr_seq_conta_w,
		nr_seq_segurado_w,
		nr_seq_protocolo_w,
		nr_seq_fatura_w,
		nm_tabela_w,
		nm_atributo_w,
		nr_seq_info_ctb_w,
		nr_seq_plano_w,
		nr_seq_prestador_exec_w,
		nr_seq_prestador_solic_w,
		nr_seq_prestador_atend_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_conta */
		begin
		cd_centro_custo_deb_w		:= null;
		cd_centro_custo_cred_w		:= null;

		if (coalesce(nr_seq_plano_w::text, '') = '') then
			begin
			select	b.ie_regulamentacao,
				b.nr_sequencia
			into STRICT	ie_regulamentacao_w,
				nr_seq_plano_w
			from	pls_segurado a,
				pls_plano b
			where	b.nr_sequencia	= a.nr_seq_plano
			and	a.nr_sequencia	= nr_seq_segurado_w;
			exception
			when others then
				ie_regulamentacao_w := null;
				nr_seq_plano_w	:= null;
			end;
		else
			begin
			select	b.ie_regulamentacao
			into STRICT	ie_regulamentacao_w
			from	pls_plano b
			where	b.nr_sequencia	= nr_seq_plano_w;
			exception
			when others then
				ie_regulamentacao_w	:= null;
			end;
		end if;

		if (coalesce(cd_conta_deb_w::text, '') = '' or coalesce(cd_conta_cred_w::text, '') = '') then
			if (substr(ie_proc_mat_w,1,1) = 'P') then
				ie_tipo_item_w	:= 'PCM';
			else
				ie_tipo_item_w	:= 'MCM';
			end if;

			insert into w_pls_movimento_sem_conta(nr_sequencia,
				cd_item,
				ds_item,
				ie_tipo_item,
				dt_atualizacao,
				nm_usuario,
				vl_item,
				dt_referencia,
				nr_lote_contabil,
				ie_proc_mat_item,
				ie_deb_cred,
				ds_observacao)
			values (nextval('w_pls_movimento_sem_conta_seq'),
				nr_seq_item_w,
				ds_item_w, ie_tipo_item_w,
				clock_timestamp(),
				nm_usuario_p,
				vl_contabil_w,
				dt_referencia_w,
				nr_lote_contabil_w,
				ie_proc_mat_w,
				'C',
				CASE WHEN substr(ie_proc_mat_w,2,1)='G' THEN 'Glosa'  ELSE null END );
			
			insert into w_pls_movimento_sem_conta(nr_sequencia,
				cd_item,
				ds_item,
				ie_tipo_item,
				dt_atualizacao,
				nm_usuario,
				vl_item,
				dt_referencia,
				nr_lote_contabil,
				ie_proc_mat_item,
				ie_deb_cred,
				ds_observacao)
			values (nextval('w_pls_movimento_sem_conta_seq'),
				nr_seq_item_w,
				ds_item_w, ie_tipo_item_w,
				clock_timestamp(),
				nm_usuario_p,
				vl_contabil_w,
				dt_referencia_w,
				nr_lote_contabil_w,
				ie_proc_mat_w,
				'D',
				CASE WHEN substr(ie_proc_mat_w,2,1)='G' THEN 'Glosa'  ELSE '' END );
		else
			select	max(nr_titulo),
				max(nr_titulo_ndc),
				max(nr_fatura),
				max(nr_nota_credito_debito)
			into STRICT	nr_titulo_pagar_w,
				nr_titulo_pagar_ndc_w,
				nr_fatura_w,
				nr_nota_credito_debito_w
			from	ptu_fatura
			where	nr_sequencia	= nr_seq_fatura_w;

			if (nm_agrupador_w = 'NR_SEQ_CONTA') then
				nr_seq_agrupamento_w	:= nr_seq_conta_w;
			elsif (nm_agrupador_w = 'NR_TITULO_PAGAR_FATURA') then
				nr_seq_agrupamento_w	:= nr_titulo_pagar_w;
			else
				nr_seq_agrupamento_w	:= null;
			end if;
			
			if (coalesce(nr_seq_agrupamento_w,0) = 0)then
				nr_seq_agrupamento_w	:= nr_seq_conta_w;
			end if;

			if (cd_conta_deb_w IS NOT NULL AND cd_conta_deb_w::text <> '') then
					
				select	ie_centro_custo,
					cd_centro_custo
				into STRICT	ie_centro_custo_deb_w,
					cd_centro_custo_fixo_deb_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_deb_w;
				
				if (ie_centro_custo_deb_w = 'S') then
					if (cd_centro_custo_fixo_deb_w IS NOT NULL AND cd_centro_custo_fixo_deb_w::text <> '') then
						cd_centro_custo_deb_w	:= cd_centro_custo_fixo_deb_w;
					else
						SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_deb_w, nr_seq_regra_cc_w, null, 				--nr_seq_tipo_lanc_p
									null, 				--nr_seq_bonificacao_p
									null, 				--nr_seq_sca_p
									null, 				--nr_seq_prestador_pag_p
									nr_seq_prestador_exec_w, nr_seq_prestador_atend_w, nr_seq_prestador_solic_w, null				-- nr_seq_evento_p
									) INTO STRICT cd_centro_custo_deb_w, nr_seq_regra_cc_w;
					end if;
				end if;				
			end if;
						
			if (cd_conta_cred_w IS NOT NULL AND cd_conta_cred_w::text <> '') then
				select	ie_centro_custo,
					cd_centro_custo
				into STRICT	ie_centro_custo_cred_w,
					cd_centro_custo_fixo_cred_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_cred_w;
				
				if (ie_centro_custo_cred_w = 'S') then
					if (cd_centro_custo_fixo_cred_w IS NOT NULL AND cd_centro_custo_fixo_cred_w::text <> '') then
						cd_centro_custo_cred_w	:= cd_centro_custo_fixo_cred_w;
					else
						SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, null, null, ie_regulamentacao_w, nr_seq_segurado_w, null, cd_centro_custo_cred_w, nr_seq_regra_cc_w, null, 				--nr_seq_tipo_lanc_p
									null, 				--nr_seq_bonificacao_p
									null, 				--nr_seq_sca_p
									null, 				--nr_seq_prestador_pag_p
									nr_seq_prestador_exec_w, nr_seq_prestador_atend_w, nr_seq_prestador_solic_w, null				-- nr_seq_evento_p
									) INTO STRICT cd_centro_custo_cred_w, nr_seq_regra_cc_w;
					end if;
				end if;
			end if;

			if (ie_compl_hist_w = 'S') then
				ds_pessoa_titulo_w	:= obter_pessoa_titulo_pagar(nr_titulo_pagar_w);
								
				ds_conteudo_w	:= substr(	nr_seq_fatura_w			||'#@'||
								nr_titulo_pagar_w 		||'#@'||
								ds_pessoa_titulo_w 		||'#@'||
								nr_fatura_w 			||'#@'||
								nr_nota_credito_debito_w 	||'#@'||
								nr_titulo_pagar_ndc_w,1,4000);

				begin
				ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);
				exception
				when others then
					ds_compl_historico_ww	:= null;
				end;

				ds_compl_historico_w	:= substr(coalesce(ds_compl_historico_ww, ds_compl_historico_w),1,255);
			end if;

			nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;

			insert into w_movimento_contabil(nr_lote_contabil,
				nr_sequencia,
				cd_conta_contabil,
				ie_debito_credito,
				cd_historico,
				dt_movimento,
				vl_movimento,
				cd_estabelecimento,
				cd_centro_custo,
				ds_compl_historico,
				nr_seq_agrupamento,
				nr_seq_tab_orig,
				nr_seq_info,
				nm_tabela,
				nm_atributo)
			values (nr_lote_contabil_p,
				nr_seq_w_movto_cont_w,
				cd_conta_cred_w,
				'C',
				cd_historico_w,
				dt_referencia_mens_w,
				vl_contabil_w,
				cd_estabelecimento_w,
				cd_centro_custo_cred_w,
				ds_compl_historico_w,
				nr_seq_agrupamento_w,
				nr_seq_item_w,
				nr_seq_info_ctb_w,
				nm_tabela_w,
				nm_atributo_w);

			insert into w_movimento_contabil(nr_lote_contabil,
				nr_sequencia,
				cd_conta_contabil,
				ie_debito_credito,
				cd_historico,
				dt_movimento,
				vl_movimento,
				cd_estabelecimento,
				cd_centro_custo,
				ds_compl_historico,
				nr_seq_agrupamento,
				nr_seq_tab_orig,
				nr_seq_info,
				nm_tabela,
				nm_atributo)
			values (nr_lote_contabil_p,
				nr_seq_w_movto_cont_w,
				cd_conta_deb_w,
				'D',
				cd_historico_w,
				dt_referencia_mens_w,
				vl_contabil_w,
				cd_estabelecimento_w,
				cd_centro_custo_deb_w,
				ds_compl_historico_w,
				nr_seq_agrupamento_w,
				nr_seq_item_w,
				nr_seq_info_ctb_w,
				nm_tabela_w,
				nm_atributo_w);
		end if;
		end;
	end loop;
	close c_itens_conta;

	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	begin
	update	lote_contabil
	set	ie_situacao		= 'A',
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
	where	nr_lote_contabil	= nr_lote_contabil_p;

	if (ie_exclusao_p	= 'S') then
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					2,
					'',
					nm_usuario_p);
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					1,
					wheb_mensagem_pck.get_texto(1097175),
					nm_usuario_p);
	end if;

	commit;
	end;
else
	rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_desp_interc ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

