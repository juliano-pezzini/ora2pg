-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cirurgia_agenda_html5 (nr_seq_agenda_p bigint) AS $body$
DECLARE


--tabela agenda_paciente
nr_cirurgia_w 				bigint;
nr_atendimento_w 			bigint;
ie_status_agenda_w			varchar(3);
ie_autorizacao_w			varchar(3);
cd_medico_w					varchar(10);
cd_pessoa_fisica_w			varchar(10);
cd_procedimento_w			bigint;
dt_agenda_w					timestamp;
--params
ie_gerar_cirur_dia_w		varchar(2);
ie_perm_gerar_cirur_ps_w	varchar(2);
ie_perm_gerar_cirur_fc_w	varchar(2);
ie_gera_prescr_w			varchar(2);
cd_setor_pdr_cirur_w		bigint;	
--outros
cd_perfil_w					bigint;
cd_estabelecimento_w		bigint;
nm_usuario_w				varchar(255);
cd_setor_atendimento_w		bigint;
ie_cirurgia_aut_w			varchar(2);
qtd_w						bigint;
ie_tipo_atendimento_w		smallint;
PFNula_Prescr 				varchar(2);
ie_gera_equipe_pepo_w       varchar(2);


BEGIN

cd_perfil_w				:= wheb_usuario_pck.get_cd_perfil;
nm_usuario_w			:= wheb_usuario_pck.get_nm_usuario;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
cd_setor_atendimento_w  :=  wheb_usuario_pck.get_cd_setor_atendimento;

ie_perm_gerar_cirur_ps_w := obter_param_usuario(871, 504, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_perm_gerar_cirur_ps_w);
ie_perm_gerar_cirur_fc_w := obter_param_usuario(871, 633, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_perm_gerar_cirur_fc_w);
ie_gerar_cirur_dia_w := obter_param_usuario(871, 185, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_gerar_cirur_dia_w);
cd_setor_pdr_cirur_w := obter_param_usuario(871, 154, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, cd_setor_pdr_cirur_w);
ie_gera_prescr_w := obter_param_usuario(871, 14, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_gera_prescr_w);
ie_gera_equipe_pepo_w := obter_param_usuario(871, 858, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_gera_equipe_pepo_w);

select max(nr_cirurgia),
	   max(nr_atendimento), 
	   max(ie_status_agenda), 
	   max(ie_autorizacao), 
	   max(cd_medico), 
	   max(cd_pessoa_fisica),
	   max(cd_procedimento), 
	   max(dt_agenda)
into STRICT   nr_cirurgia_w, 
       nr_atendimento_w, 
	   ie_status_agenda_w,
	   ie_autorizacao_w, 
	   cd_medico_w, 
	   cd_pessoa_fisica_w, 
	   cd_procedimento_w, 
	   dt_agenda_w
from   agenda_paciente
where  nr_sequencia = nr_seq_agenda_p;

if (coalesce(nr_cirurgia_w::text, '') = '') then
	
	if (ie_perm_gerar_cirur_ps_w = 'N') then	
		select   max(ie_tipo_atendimento)
		into STRICT 	 ie_tipo_atendimento_w
		from     atendimento_paciente
		where    nr_atendimento = nr_atendimento_w;
		
		if (ie_tipo_atendimento_w = 3) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(169373);--Nao e possivel gerar cirurgias para atendimentos de Pronto Socorro! Parametro [504].
		end if;			
	end if;
	
	if (ie_perm_gerar_cirur_fc_w = 'N') then	
		select   count(*)
		into STRICT 	 qtd_w
		from     atendimento_paciente  
		where    nr_atendimento = nr_atendimento_w
		and      (dt_fim_conta IS NOT NULL AND dt_fim_conta::text <> '');
		
		if (qtd_w > 0) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(169375);---Nao e possivel gerar cirurgias para atendimentos fechados! Parametro [633].
		end if;			
	end if;
	
	if (ie_status_agenda_w = 'C') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(168433);---Nao e possivel gerar cirurgias para agendamentos cancelados.
	end if;
	
	select max(substr(regra_gerar_cir_autorizacao(ie_autorizacao_w),1,1))
	into STRICT ie_cirurgia_aut_w
	;	
	
	if (ie_cirurgia_aut_w = 'N') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(169379);---Nao e possui gerar cirurgia para essa autorizacao!
	end if;
	
	select max(nullable)
	into STRICT   PFNula_Prescr
	from   user_tab_columns
	where  table_name  = 'PRESCR_MEDICA'
	and    column_name = 'CD_PESSOA_FISICA';
		
	if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') and
	   ((PFNula_Prescr = 'Y') or (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '')) and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
	
		if (ie_gerar_cirur_dia_w = 'S') and (dt_agenda_w <> trunc(clock_timestamp())) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(83591);---Somente e possivel gerar a cirurgia/prescricao na data do agendamento.		
		else			
			CALL Gerar_Cirurgia_Agenda(cd_estabelecimento_w, nr_seq_agenda_p, nm_usuario_w, coalesce(cd_setor_pdr_cirur_w, cd_setor_atendimento_w));			
			if (ie_gera_prescr_w = 'S') then				
				CALL gerar_prescr_cirur_html5(nr_seq_agenda_p);
			end if;	
      if (ie_gera_equipe_pepo_w = 'S' ) then
        CALL gerar_equipe_cirurgica(nr_seq_agenda_p => nr_seq_agenda_p,
                                nm_usuario_p    => nm_usuario_w);
      end if;
		end if;								
	else
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(82741);---Campos obrigatorios nao foram informados!
	end if;

	Commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cirurgia_agenda_html5 (nr_seq_agenda_p bigint) FROM PUBLIC;

