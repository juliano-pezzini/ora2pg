-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_dt_dev_banco_cheque ( dt_devolucao_banco_p timestamp, nr_seq_cheque_p bigint, nm_usuario_p text, nr_seq_motivo_dev_p bigint, ie_opcao_p bigint) AS $body$
DECLARE

 
/*	ie_opcao_p 
 
1	devolução (ao banco) 
2	segunda devolução 
3	devolução (ao paciente) 
4	terceira devolução 
 
*/
 
 
cd_estabelecimento_w	smallint;
ie_adiantamento_w	varchar(1);
nr_adiantamento_w	bigint;
nr_movto_trans_financ_w	bigint;
dt_verifica_trans_w	timestamp;

c01 CURSOR FOR 
SELECT	a.nr_adiantamento 
from	adiantamento_cheque_cr a 
where	a.nr_seq_cheque		= nr_seq_cheque_p 

union
 
SELECT	a.nr_adiantamento 
from	cheque_cr_v a 
where	(a.nr_adiantamento IS NOT NULL AND a.nr_adiantamento::text <> '') 
and	a.nr_seq_cheque		= nr_seq_cheque_p;


BEGIN 
 
if (nr_seq_cheque_p IS NOT NULL AND nr_seq_cheque_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
 
	if (ie_opcao_p	= 1) then 
		select max(dt_deposito) 
		into STRICT dt_verifica_trans_w 
		from cheque_cr 
		where nr_seq_cheque = nr_seq_cheque_p;
		-- Verifica se a data da devolução é igual ou maior que a data do depósito, se for menor na devolução retorna erro. 
		if trunc(coalesce(dt_devolucao_banco_p,dt_verifica_trans_w)) >= trunc(dt_verifica_trans_w) then 
			update 	cheque_cr 
			set  	dt_devolucao_banco	= dt_devolucao_banco_p, 
				nm_usuario		= nm_usuario_p, 
				dt_atualizacao		= clock_timestamp(), 
				nr_seq_motivo_dev	= coalesce(nr_seq_motivo_dev_p,nr_seq_motivo_dev) 
			where 	nr_seq_cheque		= nr_seq_cheque_p;
 
			if (coalesce(dt_devolucao_banco_p::text, '') = '') then 
				CALL gerar_cheque_cr_hist(nr_seq_cheque_p,substr(wheb_mensagem_pck.get_texto(304516),1,255),'N',nm_usuario_p);
			else 
				CALL gerar_cheque_cr_hist(nr_seq_cheque_p,substr(wheb_mensagem_pck.get_texto(304517),1,255),'N',nm_usuario_p);
			end if;
		else 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(339517);
		end if;
		 
	elsif (ie_opcao_p	= 2) then 
	 
		if (coalesce(dt_devolucao_banco_p::text, '') = '') then 
			 
			CALL gerar_cheque_cr_hist(nr_seq_cheque_p,substr(wheb_mensagem_pck.get_texto(304518),1,255),'N',nm_usuario_p);
			 
			select	max(x.nr_sequencia) 
			into STRICT	nr_movto_trans_financ_w 
			from	movto_trans_financ x 
			where	x.nr_seq_cheque = nr_seq_cheque_p 
			and	exists (SELECT 1 
					from	transacao_financeira y 
					where	x.nr_seq_trans_financ = y.nr_sequencia 
					and	y.ie_acao = 7) 
			and 	ie_seg_dev_cheque = 'S';
					 
			 
			if (nr_movto_trans_financ_w IS NOT NULL AND nr_movto_trans_financ_w::text <> '') then 
			 
				select	max(a.cd_estabelecimento) 
				into STRICT	cd_estabelecimento_w 
				from	cheque_cr a 
				where	a.nr_seq_cheque	= nr_seq_cheque_p;
			 
				CALL estornar_movto_banco(cd_estabelecimento_w, nr_movto_trans_financ_w, clock_timestamp(), nm_usuario_p, 'S');
 
			else 
				update 	cheque_cr 
				set  	dt_seg_devolucao	= dt_devolucao_banco_p, 
					nm_usuario		= nm_usuario_p, 
					dt_atualizacao		= clock_timestamp(), 
					nr_seq_motivo_seg_dev	= coalesce(nr_seq_motivo_dev_p,nr_seq_motivo_seg_dev) 
				where 	nr_seq_cheque		= nr_seq_cheque_p;
				 
				 
			end if;	
		else	 
			select max(dt_reapresentacao) 
			into STRICT dt_verifica_trans_w 
			from cheque_cr 
			where nr_seq_cheque = nr_seq_cheque_p;
			-- Verifica se a data da segunda devolução é maior ou igual a data de reapresentação, se for menor na devolução retorna erro. 
			if trunc(dt_devolucao_banco_p) >= trunc(dt_verifica_trans_w) then 
				update 	cheque_cr 
				set  	dt_seg_devolucao	= dt_devolucao_banco_p, 
					nm_usuario		= nm_usuario_p, 
					dt_atualizacao		= clock_timestamp(), 
					nr_seq_motivo_seg_dev	= coalesce(nr_seq_motivo_dev_p,nr_seq_motivo_seg_dev) 
				where 	nr_seq_cheque		= nr_seq_cheque_p;
				 
				CALL gerar_cheque_cr_hist(nr_seq_cheque_p,substr(wheb_mensagem_pck.get_texto(304519),1,255),'N',nm_usuario_p);
			else 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(339521);
			end if;
 
		end if;	
 
	elsif (ie_opcao_p	= 3) then 
 
		select	max(a.cd_estabelecimento) 
		into STRICT	cd_estabelecimento_w 
		from	cheque_cr a 
		where	a.nr_seq_cheque	= nr_seq_cheque_p;
 
		ie_adiantamento_w := obter_param_usuario(810, 74, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_adiantamento_w);
 
		if (coalesce(ie_adiantamento_w,'N')	= 'S') then 
 
			open	c01;
			loop 
			fetch	c01 into 
				nr_adiantamento_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
 
				CALL devolucao_adiantamento_cheque(nr_adiantamento_w,nr_seq_cheque_p,dt_devolucao_banco_p,nm_usuario_p);
 
			end	loop;
			close	c01;
 
		end if;
 
		update 	cheque_cr 
		set  	dt_devolucao		= dt_devolucao_banco_p, 
			nm_usuario		= nm_usuario_p, 
			dt_atualizacao		= clock_timestamp(), 
			nr_seq_motivo_dev	= coalesce(nr_seq_motivo_dev_p,nr_seq_motivo_dev) 
		where 	nr_seq_cheque		= nr_seq_cheque_p;
 
		CALL gerar_cheque_cr_hist(nr_seq_cheque_p,substr(wheb_mensagem_pck.get_texto(304522),1,255),'N',nm_usuario_p);
 
	elsif (ie_opcao_p	= 4) then 
 
		select max(dt_seg_reapresentacao) 
		into STRICT dt_verifica_trans_w 
		from cheque_cr 
		where nr_seq_cheque = nr_seq_cheque_p;
		-- Verifica se a data da terceira devolução é igual ou maior que a data da segunda reapresentação, se for menor na devolução retorna erro. 
		if trunc(coalesce(dt_devolucao_banco_p,dt_verifica_trans_w)) >= trunc(dt_verifica_trans_w) then 
			update 	cheque_cr 
			set  	dt_terc_devolucao	= dt_devolucao_banco_p, 
				nm_usuario		= nm_usuario_p, 
				dt_atualizacao		= clock_timestamp(), 
				nr_seq_motivo_terc_dev	= coalesce(nr_seq_motivo_dev_p,nr_seq_motivo_terc_dev) 
			where 	nr_seq_cheque		= nr_seq_cheque_p;
 
			if (coalesce(dt_devolucao_banco_p::text, '') = '') then 
				CALL gerar_cheque_cr_hist(nr_seq_cheque_p,substr(wheb_mensagem_pck.get_texto(304523),1,255),'N',nm_usuario_p);
			else 
				CALL gerar_cheque_cr_hist(nr_seq_cheque_p,substr(wheb_mensagem_pck.get_texto(304524),1,255),'N',nm_usuario_p);
			end if;
		else 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(339523);
		end if;
 
	end if;
end if;	
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_dt_dev_banco_cheque ( dt_devolucao_banco_p timestamp, nr_seq_cheque_p bigint, nm_usuario_p text, nr_seq_motivo_dev_p bigint, ie_opcao_p bigint) FROM PUBLIC;

