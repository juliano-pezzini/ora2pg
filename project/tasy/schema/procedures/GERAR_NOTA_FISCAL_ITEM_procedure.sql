-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nota_fiscal_item (nr_seq_nota_fiscal_p bigint, cd_centro_custo_p bigint, cd_cgc_emitente_p text, cd_estabelecimento_p bigint, cd_material_p bigint, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, cd_cgc_p text, cd_paciente_p text, cd_serie_nf_p text, cd_unidade_medida_p text, nr_atendimento_p bigint, nr_nota_fiscal_p text, qt_item_nf_p bigint, qt_peso_bruto_p bigint, qt_peso_liquido_p bigint, vl_desconto_p bigint, vl_unitario_item_nf_p bigint, ds_observacao_p text, nm_usuario_p text, ie_commit_p text, nr_item_nf_p INOUT bigint) AS $body$
DECLARE

 
cd_cgc_emitente_w		pessoa_juridica.cd_cgc%type;
cd_natureza_operacao_w		nota_fiscal_item.cd_natureza_operacao%type;
cd_natureza_operacao_ne_w	parametro_compras.cd_nat_oper_compra_ne%type;
cd_natureza_operacao_fe_w	parametro_compras.cd_nat_oper_compra_fe%type;
sg_estado_fornec_w		pessoa_juridica.sg_estado%type;
sg_estado_estab_w		pessoa_juridica.sg_estado%type;
cd_serie_nf_w			nota_fiscal_item.cd_serie_nf%type;
nr_item_nf_w			nota_fiscal_item.nr_item_nf%type;
nr_sequencia_nf_w		nota_fiscal_item.nr_sequencia_nf%type;
vl_liquido_w			double precision;


BEGIN 
 
select	max(b.cd_cgc), 
	max(b.sg_estado) 
into STRICT	cd_cgc_emitente_w, 
	sg_estado_estab_w 
from	pessoa_juridica b, 
	estabelecimento a 
where	a.cd_cgc		= b.cd_cgc 
and	a.cd_estabelecimento	= cd_estabelecimento_p;
 
if (cd_cgc_emitente_p IS NOT NULL AND cd_cgc_emitente_p::text <> '') then 
 
	cd_cgc_emitente_w	:= cd_cgc_emitente_p;
 
end if;
 
if (coalesce(cd_natureza_operacao_p::text, '') = '') then 
 
	select	coalesce(max(a.cd_natureza_operacao), 0) 
	into STRICT	cd_natureza_operacao_w 
	from	operacao_nota a 
	where	a.cd_operacao_nf	= cd_operacao_nota_p;
 
	if (coalesce(cd_natureza_operacao_w::text, '') = '') then 
 
		select	coalesce(max(a.cd_nat_oper_compra_ne),1102), 
			coalesce(max(a.cd_nat_oper_compra_fe),2102) 
		into STRICT	cd_natureza_operacao_ne_w, 
			cd_natureza_operacao_fe_w 
		from	parametro_compras a 
		where	a.cd_estabelecimento	= cd_estabelecimento_p;
 
		if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then 
 
			select	max(a.sg_estado) 
			into STRICT	sg_estado_fornec_w 
			from	pessoa_juridica a 
			where	a.cd_cgc	= cd_cgc_p;
 
			if (sg_estado_fornec_w	<> sg_estado_estab_w) then 
 
				cd_natureza_operacao_w	:= cd_natureza_operacao_fe_w;
 
			else 
 
				cd_natureza_operacao_w	:= cd_natureza_operacao_ne_w;
 
			end if;
 
		else 
 
			cd_natureza_operacao_w	:= cd_natureza_operacao_ne_w;
 
		end if;
 
	end if;
 
else 
 
	cd_natureza_operacao_w	:= cd_natureza_operacao_p;
 
end if;
 
if (coalesce(cd_serie_nf_p::text, '') = '') then 
 
	select	max(a.cd_serie_nf) 
	into STRICT	cd_serie_nf_w 
	from	parametro_compras a 
	where	a.cd_estabelecimento	= cd_estabelecimento_p;
 
	if (coalesce(cd_serie_nf_w::text, '') = '') then 
 
		cd_serie_nf_w := obter_param_usuario(40, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_serie_nf_w);
 
	end if;
 
else 
 
	cd_serie_nf_w	:= cd_serie_nf_p;
 
end if;
 
select	coalesce(max(a.nr_item_nf),0) + 1 
into STRICT	nr_item_nf_w 
from	nota_fiscal_item a 
where	a.nr_sequencia	= nr_seq_nota_fiscal_p;
 
select	coalesce(max(a.nr_sequencia_nf),0) + 1 
into STRICT	nr_sequencia_nf_w 
from	nota_fiscal a 
where	a.cd_estabelecimento	= cd_estabelecimento_p 
and	a.cd_serie_nf		= cd_serie_nf_w 
and	a.nr_nota_fiscal	= nr_nota_fiscal_p;
 
if (coalesce(qt_item_nf_p,0)		= 0) or (coalesce(vl_unitario_item_nf_p,0)	= 0) then 
 
	vl_liquido_w	:= vl_unitario_item_nf_p;
 
else 
 
	vl_liquido_w	:= coalesce(vl_unitario_item_nf_p,0) * coalesce(qt_item_nf_p,0);
 
end if;
 
insert	into nota_fiscal_item(cd_centro_custo, 
	cd_cgc_emitente, 
	cd_estabelecimento, 
	cd_material, 
	cd_natureza_operacao, 
	cd_paciente, 
	cd_serie_nf, 
	cd_unidade_medida_estoque, 
	ds_observacao, 
	dt_atualizacao, 
	dt_atualizacao_estoque, 
	nm_usuario, 
	nr_atendimento, 
	nr_item_nf, 
	nr_nota_fiscal, 
	nr_sequencia, 
	nr_sequencia_nf, 
	qt_item_nf, 
	qt_peso_bruto, 
	qt_peso_liquido, 
	vl_desconto, 
	vl_desconto_rateio, 
	vl_despesa_acessoria, 
	vl_frete, 
	vl_liquido, 
	vl_seguro, 
	vl_total_item_nf, 
	vl_unitario_item_nf) 
values (cd_centro_custo_p, 
	cd_cgc_emitente_w, 
	cd_estabelecimento_p, 
	cd_material_p, 
	cd_natureza_operacao_w, 
	cd_paciente_p, 
	cd_serie_nf_w, 
	cd_unidade_medida_p, 
	ds_observacao_p, 
	clock_timestamp(), 
	clock_timestamp(), 
	nm_usuario_p, 
	nr_atendimento_p, 
	nr_item_nf_w, 
	nr_nota_fiscal_p, 
	nr_seq_nota_fiscal_p, 
	nr_sequencia_nf_w, 
	coalesce(qt_item_nf_p,0), 
	qt_peso_bruto_p, 
	qt_peso_liquido_p, 
	coalesce(vl_desconto_p,0), 
	0, 
	0, 
	0, 
	coalesce(vl_liquido_w,0), 
	0, 
	coalesce(vl_liquido_w,0), 
	coalesce(vl_unitario_item_nf_p,0));
 
nr_item_nf_p	:= nr_item_nf_w;
 
if (coalesce(ie_commit_p,'S')	= 'S') then 
 
	commit;
 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nota_fiscal_item (nr_seq_nota_fiscal_p bigint, cd_centro_custo_p bigint, cd_cgc_emitente_p text, cd_estabelecimento_p bigint, cd_material_p bigint, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, cd_cgc_p text, cd_paciente_p text, cd_serie_nf_p text, cd_unidade_medida_p text, nr_atendimento_p bigint, nr_nota_fiscal_p text, qt_item_nf_p bigint, qt_peso_bruto_p bigint, qt_peso_liquido_p bigint, vl_desconto_p bigint, vl_unitario_item_nf_p bigint, ds_observacao_p text, nm_usuario_p text, ie_commit_p text, nr_item_nf_p INOUT bigint) FROM PUBLIC;

