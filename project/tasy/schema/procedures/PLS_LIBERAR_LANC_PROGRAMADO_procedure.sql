-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_lanc_programado ( nr_seq_lanc_mens_p bigint, ie_opcao_p text, ie_altera_mes_p text, nm_usuario_p text) AS $body$
DECLARE

/*
ie_opcao_p
	L = Liberar
	D = Desfazer liberacao
*/
vl_apropriacao_w		pls_lancamento_mens_aprop.vl_apropriacao%type;
vl_lancamento_w			pls_lancamento_mensalidade.vl_lancamento%type;
dt_liberacao_w			pls_lancamento_mensalidade.dt_liberacao%type;
qt_aprop_w			integer;
qt_apropriacao_duplicada_w	integer;


BEGIN

if (ie_opcao_p = 'L') then
	
	select	dt_liberacao,
		vl_lancamento
	into STRICT	dt_liberacao_w,
		vl_lancamento_w
	from	pls_lancamento_mensalidade
	where	nr_sequencia = nr_seq_lanc_mens_p;
	
	if (coalesce(vl_lancamento_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(834522,'NR_SEQ_LANCAMENTO='||nr_seq_lanc_mens_p);
		/*Mensagem: Nao e permitido liberar lancamento sem valor. Favor verifique o lancamento NR_SEQ_LANCAMENTO.*/

	end if;	
	
	if (coalesce(dt_liberacao_w::text, '') = '') then
		select	count(1)
		into STRICT 	qt_aprop_w
		from 	pls_lancamento_mens_aprop
		where	nr_seq_lancamento = nr_seq_lanc_mens_p;
	
		if (qt_aprop_w > 0) then
			select	coalesce(sum(vl_apropriacao),0)
			into STRICT 	vl_apropriacao_w
			from 	pls_lancamento_mens_aprop
			where	nr_seq_lancamento = nr_seq_lanc_mens_p;
			
			if (coalesce(vl_lancamento_w,0) <> vl_apropriacao_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(312702,'NR_SEQ_LANCAMENTO='||nr_seq_lanc_mens_p);
				/* Mensagem: Valor total da apropriacao precisa ser o mesmo valor do lancamento. Favor verificar lancamento NR_SEQ_LANCAMENTO. */

			end if;
		end if;
		
	select  count(*)
	into STRICT	qt_apropriacao_duplicada_w
	from    pls_lancamento_mens_aprop a
	where   a.nr_seq_lancamento = nr_seq_lanc_mens_p
	and     exists (SELECT  1
                from    pls_lancamento_mens_aprop b
                where   b.nr_seq_lancamento = nr_seq_lanc_mens_p
                and     b.nr_seq_centro_apropriacao = a.nr_seq_centro_apropriacao
                and     b.nr_sequencia <> a.nr_sequencia);
		
	if (coalesce(qt_apropriacao_duplicada_w,0) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1112833,'NR_SEQ_LANCAMENTO='||nr_seq_lanc_mens_p);
	/* Nao e permitido liberar lancamento com apropriacao repetida. Favor verificar o lancamento #@NR_SEQ_LANCAMENTO#@.*/

	end if;
		
		update	pls_lancamento_mensalidade
		set	dt_liberacao		= clock_timestamp(),
			nm_usuario_liberacao	= nm_usuario_p,
			dt_mes_competencia	= CASE WHEN ie_altera_mes_p='S' THEN add_months(dt_mes_competencia,1)  ELSE dt_mes_competencia END
		where	nr_sequencia 		= nr_seq_lanc_mens_p;
	end if;
elsif (ie_opcao_p = 'D') then
	update	pls_lancamento_mensalidade
	set	dt_liberacao		 = NULL,
		nm_usuario_liberacao	 = NULL
	where	nr_sequencia 		= nr_seq_lanc_mens_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_lanc_programado ( nr_seq_lanc_mens_p bigint, ie_opcao_p text, ie_altera_mes_p text, nm_usuario_p text) FROM PUBLIC;

