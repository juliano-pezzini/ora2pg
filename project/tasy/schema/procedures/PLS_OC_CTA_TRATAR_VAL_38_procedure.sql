-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_38 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação de exigência de prestador fornecedor.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

------------------------------------------------------------------------------------------------------------------
Alterações:
------------------------------------------------------------------------------------------------------------------
jjung OS 693338 - Melhorias e otimização do código fonte.
------------------------------------------------------------------------------------------------------------------
dlehmkuhl OS 688483 - 14/04/2014 -

Alteração:	Modificada a forma de trabalho em relação a atualização dos campos de controle
	que basicamente decidem se a ocorrência será ou não gerada. Foi feita também a
	substituição da rotina obterX_seX_geraX.

Motivo:	Necessário realizar essas alterações para corrigir bugs principalmente no que se
	refere a questão de aplicação de filtros (passo anterior ao da validação). Também
	tivemos um foco especial em performance, visto que a mesma precisou ser melhorada
	para não inviabilizar a nova solicitação que diz que a exceção deve verificar todo
	o atendimento.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_selecao_w	dbms_sql.number_table;
ds_observacao_w		dbms_sql.varchar2_table;
ie_valido_w		dbms_sql.varchar2_table;

-- Cursor que obtem os registros para gerar a ocorrência.
cs_gerar_ocor CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT sel.nr_sequencia nr_seq_selecao,
		'S' ie_registro_valido,
		'A operadora exige que seja informado o fornecedor deste material.' ds_obervacao
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_mat_v mat
	where	sel.nr_id_transacao = nr_id_transacao_pc
	and	sel.ie_valido = 'S'
	and	mat.nr_seq_conta = sel.nr_seq_conta
	and	mat.nr_sequencia = sel.nr_seq_conta_mat
	and	coalesce(mat.nr_seq_prest_fornec_mat::text, '') = '';

-- Regras da validação.
C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.ie_validar_exigencia_fornec ie_validar
	from	pls_oc_cta_val_exig_forn a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;
BEGIN

-- Deve ter a informação da regra para que seja aplicada a validação.
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '')  then

	-- varrer as regras.
	for	r_C01_w in C01( dados_regra_p.nr_sequencia) loop

		-- Só processa se é para validar
		if (r_C01_w.ie_validar = 'S') then

			-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
			CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

			begin
				-- Abrir o cusor
				open cs_gerar_ocor(nr_id_transacao_p);
				loop
					-- limpar as tables
					nr_seq_selecao_w.delete;
					ie_valido_w.delete;
					ds_observacao_w.delete;

					-- gravar as tables
					fetch cs_gerar_ocor bulk collect
					into  nr_seq_selecao_w, ie_valido_w, ds_observacao_w
					-- limitar o número máximo de registros
					limit pls_util_cta_pck.qt_registro_transacao_w;
					-- Se não tem mais registros aborta o loop
					exit when nr_seq_selecao_w.count = 0;

					-- Manda para o BD.
					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(
							nr_seq_selecao_w, pls_util_cta_pck.clob_table_vazia_w, 'SEQ',
							ds_observacao_w, ie_valido_w, nm_usuario_p);

				end loop; -- cs_gerar_ocor
				close cs_gerar_ocor;

			exception
			when others then
				-- Sempre deve ser testado se o cursor ainda fica aberto para que não de erro neste bloco.
				if (cs_gerar_ocor%ISOPEN) then

					close cs_gerar_ocor;
				end if;

				-- Insere o log na tabela e aborta a operação
				CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(dados_regra_p, null, nr_id_transacao_p, nm_usuario_p);
			end;
		end if;

		-- seta os registros que serão válidos ou inválidos após o processamento
		CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
	end loop; -- C01
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_38 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

