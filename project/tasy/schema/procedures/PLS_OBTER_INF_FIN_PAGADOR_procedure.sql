-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_inf_fin_pagador ( nr_seq_pagador_p bigint, nr_seq_contrato_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, cd_tipo_portador_p INOUT bigint, cd_portador_p INOUT bigint, nr_seq_conta_banco_p INOUT bigint, nr_seq_carteira_cobr_p INOUT bigint, ie_gerar_nota_titulo_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

 
cd_tipo_portador_param_w	integer;
cd_portador_param_w		bigint;
nr_seq_conta_banco_param_w	bigint;
ie_gerar_nota_titulo_param_w	varchar(2);

cd_tipo_portador_w		integer;
cd_portador_w			bigint;
nr_seq_conta_banco_w		bigint;
nr_seq_carteira_cobr_w		bigint;
ie_tipo_contratacao_w		varchar(3);
ie_gerar_nota_titulo_w		varchar(2);
nr_seq_contrato_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_regra_plano_w		bigint;
nr_seq_pagador_compl_w		bigint;
cd_banco_w			integer;
nr_seq_forma_cobranca_w		varchar(2);
nr_seq_contrato_aux_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_classif_itens_w		bigint;

ie_gerar_nota_titulo_pf_w	varchar(2);
ie_gerar_nota_titulo_pj_w	varchar(2);
cd_pf_pagador_w			varchar(10);

c01 CURSOR FOR 
	SELECT	a.cd_tipo_portador, 
		a.cd_portador, 
		a.nr_seq_conta_banco, 
		a.nr_seq_carteira_cobr, 
		a.ie_geracao_nota_titulo, 
		(	SELECT	nr_sequencia 
			from	pls_regra_portador_plano x 
			where	x.nr_seq_regra	= a.nr_sequencia 
			and	x.nr_seq_plano	= nr_seq_plano_w) nr_regra 
	from	pls_regra_portador_mens a 
	where (coalesce(a.dt_fim_vigencia::text, '') = '' or a.dt_fim_vigencia >= coalesce(dt_referencia_p,clock_timestamp())) 
	and (a.ie_tipo_contratacao = ie_tipo_contratacao_w or ie_tipo_contratacao = 'T') 
	and	((a.cd_banco = cd_banco_w) or (coalesce(a.cd_banco::text, '') = '')) 
	and	((a.nr_seq_forma_cobranca = nr_seq_forma_cobranca_w) or (coalesce(a.nr_seq_forma_cobranca::text, '') = '')) 
	and	((a.nr_seq_classif_itens = nr_seq_classif_itens_w) or (coalesce(a.nr_seq_classif_itens::text, '') = ''))	 
	and	((exists (	select	1 
				from	pls_regra_portador_plano x 
				where	x.nr_seq_regra	= a.nr_sequencia 
				and	x.nr_seq_plano	= nr_seq_plano_w)) 
		or (not exists ( select	1 
				from	pls_regra_portador_plano x 
				where	x.nr_seq_regra	= a.nr_sequencia))) 
	order by coalesce(nr_regra,0), 
		 coalesce(cd_banco,0), 
		 coalesce(nr_seq_forma_cobranca,0), 
		 coalesce(nr_seq_classif_itens,0);


BEGIN 
 
select	max(a.cd_tipo_portador), 
	max(a.cd_portador), 
	max(a.nr_seq_conta_banco), 
	max(a.ie_geracao_nota_titulo), 
	max(a.ie_geracao_nota_titulo_pf) 
into STRICT	cd_tipo_portador_param_w, 
	cd_portador_param_w, 
	nr_seq_conta_banco_param_w, 
	ie_gerar_nota_titulo_pj_w, 
	ie_gerar_nota_titulo_pf_w 
from	pls_parametros a 
where	a.cd_estabelecimento	= cd_estabelecimento_p;
 
if (nr_seq_pagador_p IS NOT NULL AND nr_seq_pagador_p::text <> '') then 
	select	max(nr_seq_pagador_compl), 
		max(cd_pessoa_fisica), 
		max(nr_seq_contrato), 
		max(nr_seq_pagador_intercambio), 
		max(nr_seq_classif_itens) 
	into STRICT	nr_seq_pagador_compl_w, 
		cd_pf_pagador_w, 
		nr_seq_contrato_aux_w, 
		nr_seq_intercambio_w, 
		nr_seq_classif_itens_w 
	from	pls_contrato_pagador 
	where	nr_sequencia	= nr_seq_pagador_p;
	 
	if (cd_pf_pagador_w IS NOT NULL AND cd_pf_pagador_w::text <> '') then 
		ie_gerar_nota_titulo_param_w	:= ie_gerar_nota_titulo_pf_w;
	else 
		ie_gerar_nota_titulo_param_w	:= ie_gerar_nota_titulo_pj_w;
	end if;
	 
	if (nr_seq_pagador_compl_w IS NOT NULL AND nr_seq_pagador_compl_w::text <> '') then 
		if (nr_seq_contrato_aux_w IS NOT NULL AND nr_seq_contrato_aux_w::text <> '') then 
			select	CASE WHEN coalesce(b.cd_cgc_estipulante::text, '') = '' THEN 'I'  ELSE 'C' END , 
				b.nr_sequencia, 
				a.cd_banco, 
				a.nr_seq_forma_cobranca 
			into STRICT	ie_tipo_contratacao_w, 
				nr_seq_contrato_w, 
				cd_banco_w, 
				nr_seq_forma_cobranca_w 
			from	pls_contrato b, 
				pls_contrato_pagador a 
			where	a.nr_seq_contrato	= b.nr_sequencia 
			and	a.nr_sequencia		= nr_seq_pagador_compl_w;
		/*aaschlote 20/06/2013 - Tratamento para o Java Swing*/
 
		elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then 
			select	CASE WHEN coalesce(b.cd_cgc::text, '') = '' THEN 'I'  ELSE 'C' END , 
				a.cd_banco, 
				a.nr_seq_forma_cobranca 
			into STRICT	ie_tipo_contratacao_w, 
				cd_banco_w, 
				nr_seq_forma_cobranca_w 
			from	pls_intercambio b, 
				pls_contrato_pagador a 
			where	a.nr_seq_pagador_intercambio	= b.nr_sequencia 
			and	a.nr_sequencia			= nr_seq_pagador_compl_w;
		end if;
	else 
		if (nr_seq_contrato_aux_w IS NOT NULL AND nr_seq_contrato_aux_w::text <> '') then 
			select	CASE WHEN coalesce(b.cd_cgc_estipulante::text, '') = '' THEN 'I'  ELSE 'C' END , 
				b.nr_sequencia, 
				a.cd_banco, 
				a.nr_seq_forma_cobranca 
			into STRICT	ie_tipo_contratacao_w, 
				nr_seq_contrato_w, 
				cd_banco_w, 
				nr_seq_forma_cobranca_w 
			from	pls_contrato b, 
				pls_contrato_pagador a 
			where	a.nr_seq_contrato	= b.nr_sequencia 
			and	a.nr_sequencia		= nr_seq_pagador_p;
		/*aaschlote 20/06/2013 - Tratamento para o Java Swing*/
 
		elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then 
			select	CASE WHEN coalesce(b.cd_cgc::text, '') = '' THEN 'I'  ELSE 'C' END , 
				a.cd_banco, 
				a.nr_seq_forma_cobranca 
			into STRICT	ie_tipo_contratacao_w, 
				cd_banco_w, 
				nr_seq_forma_cobranca_w 
			from	pls_intercambio b, 
				pls_contrato_pagador a 
			where	a.nr_seq_pagador_intercambio	= b.nr_sequencia 
			and	a.nr_sequencia		= nr_seq_pagador_p;
		end if;
	end if;
elsif (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then 
	select	CASE WHEN coalesce(b.cd_cgc_estipulante::text, '') = '' THEN 'I'  ELSE 'C' END  
	into STRICT	ie_tipo_contratacao_w 
	from	pls_contrato b 
	where	b.nr_sequencia		= nr_seq_contrato_p;
	 
	nr_seq_contrato_w	:= nr_seq_contrato_p;
end if;
 
select	max(nr_seq_plano) 
into STRICT	nr_seq_plano_w 
from	pls_contrato_plano 
where	nr_seq_contrato	= nr_seq_contrato_w 
and	ie_situacao	= 'A';
 
open c01;
loop 
fetch c01 into	 
	cd_tipo_portador_w, 
	cd_portador_w, 
	nr_seq_conta_banco_w, 
	nr_seq_carteira_cobr_w, 
	ie_gerar_nota_titulo_w, 
	nr_seq_regra_plano_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;
 
cd_tipo_portador_p	:= coalesce(cd_tipo_portador_w,cd_tipo_portador_param_w);
cd_portador_p		:= coalesce(cd_portador_w,cd_portador_param_w);
nr_seq_conta_banco_p	:= coalesce(nr_seq_conta_banco_w,nr_seq_conta_banco_param_w);
nr_seq_carteira_cobr_p	:= nr_seq_carteira_cobr_w;
ie_gerar_nota_titulo_p	:= coalesce(ie_gerar_nota_titulo_w,ie_gerar_nota_titulo_param_w);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_inf_fin_pagador ( nr_seq_pagador_p bigint, nr_seq_contrato_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, cd_tipo_portador_p INOUT bigint, cd_portador_p INOUT bigint, nr_seq_conta_banco_p INOUT bigint, nr_seq_carteira_cobr_p INOUT bigint, ie_gerar_nota_titulo_p INOUT text, nm_usuario_p text) FROM PUBLIC;

