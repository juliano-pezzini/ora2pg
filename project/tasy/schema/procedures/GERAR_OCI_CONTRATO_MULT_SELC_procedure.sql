-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_oci_contrato_mult_selc (nr_ordem_compra_p bigint, nr_seq_contrato_regra_nf_p bigint, vl_item_p bigint, qt_vezes_material_p bigint, nm_usuario_p text, ie_gerar_tributos_p text, dt_vencimento_p timestamp) AS $body$
DECLARE


cd_material_w				contrato_regra_nf.cd_material%type;
cd_conta_contabil_w			contrato_regra_nf.cd_conta_contabil%type;
cd_centro_custo_w			integer;
qt_material_w				ordem_compra_item.qt_material%type;
nr_seq_crit_rateio_w		contrato_regra_nf.nr_seq_crit_rateio%type;
nr_seq_conta_financ_w		contrato_regra_nf.nr_seq_conta_financ%type;
vl_pagto_w					contrato_regra_nf.vl_pagto%type;
nr_seq_proj_rec_w			contrato_regra_nf.nr_seq_proj_rec%type;
nr_seq_regra_contrato_w		contrato_regra_nf.nr_sequencia%type;
ds_complemento_w			contrato_regra_nf.ds_complemento%type;
ds_obs_item_w				contrato_regra_nf.ds_observacao%type;
vl_desconto_w				contrato_regra_nf.vl_desconto%type;
pr_desconto_w				contrato_regra_nf.pr_desconto%type;
cd_unid_med_compra_w		varchar(30);
nr_item_oci_w				ordem_compra_item.nr_item_oci%type;
ie_tipo_conta_w				integer	:= 2;
cd_estabelecimento_w		ordem_compra.cd_estabelecimento%type;
cd_local_estoque_w			ordem_compra.cd_local_entrega%type;
dt_ordem_w					ordem_compra.dt_ordem_compra%type;
ie_preco_ordem_compra_w		contrato_regra_nf.ie_preco_oc%type;
cd_pessoa_solicitante_w		ordem_compra.cd_pessoa_solicitante%type;
nr_seq_contrato_w			ordem_compra.nr_seq_contrato%type;
dt_entrega_w				ordem_compra.dt_entrega%type;
cd_tributo_w				contrato_regra_pagto_trib.cd_tributo%type;
pr_tributo_w				contrato_regra_pagto_trib.pr_tributo%type;
vl_tributo_w				contrato_regra_pagto_trib.vl_tributo%type;
ie_corpo_item_w				contrato_regra_pagto_trib.ie_corpo_item%type;
ie_regra_trib_w				contrato_regra_pagto_trib.ie_regra_trib%type;
ie_corpo_atrib_w			tributo.ie_corpo_item%type;
ie_forma_pagamento_w		condicao_pagamento.ie_forma_pagamento%type;
vl_total_oc_w				ordem_compra_venc.vl_vencimento%type;
ie_copiar_ds_compl_oc_w		parametro_compras.ie_copiar_ds_compl_oc%type;
cd_condicao_pagamento_w		ordem_compra.cd_condicao_pagamento%type;
qt_vencimentos_w            bigint;
vl_total_item_w			ordem_compra_item.vl_total_item%type;
	
c01 CURSOR FOR
SELECT	distinct a.cd_tributo
from	contrato_regra_pagto_trib a
where	a.nr_seq_regra_nf = nr_seq_regra_contrato_w;

BEGIN

select	cd_estabelecimento,
	cd_local_entrega,
	dt_ordem_compra,
	cd_pessoa_solicitante,
	nr_seq_contrato,
	dt_entrega
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w,
	dt_ordem_w,
	cd_pessoa_solicitante_w,
	nr_seq_contrato_w,
	dt_entrega_w
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

select	coalesce(ie_copiar_ds_compl_oc,'N')
into STRICT	ie_copiar_ds_compl_oc_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_w;

Select	a.cd_material,
	a.cd_conta_contabil,
	CASE WHEN coalesce(a.nr_seq_crit_rateio::text, '') = '' THEN  a.cd_centro_custo  ELSE null END  cd_centro_custo,
	a.nr_seq_crit_rateio,
	a.nr_seq_conta_financ,
	a.vl_pagto,
	a.nr_seq_proj_rec,
	CASE WHEN coalesce(obter_valor_param_usuario(917, 134, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento),'N')='S' THEN coalesce(obter_contrato_regra_nf_qtde(a.nr_sequencia, clock_timestamp()),1)  ELSE 1 END ,
	a.nr_sequencia,
	CASE WHEN ie_copiar_ds_compl_oc_w='N' THEN ''  ELSE a.ds_complemento END ,
	a.ds_observacao,
	a.vl_desconto,
	a.pr_desconto,
	b.cd_condicao_pagamento
into STRICT cd_material_w,
	cd_conta_contabil_w,
	cd_centro_custo_w,
	nr_seq_crit_rateio_w,
	nr_seq_conta_financ_w,
	vl_pagto_w,
	nr_seq_proj_rec_w,
	qt_material_w,
	nr_seq_regra_contrato_w,
	ds_complemento_w,
	ds_obs_item_w,
	vl_desconto_w,
	pr_desconto_w,
	cd_condicao_pagamento_w
from	contrato b,
	contrato_regra_nf a
where	b.nr_sequencia 	= a.nr_seq_contrato
and	b.nr_sequencia	= nr_seq_contrato_w
and	coalesce(ie_tipo_regra,'NF') = 'NF'
and	((coalesce(a.dt_inicio_vigencia::text, '') = '') or (trunc(a.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
and	((coalesce(a.dt_fim_vigencia::text, '') = '') or (trunc(a.dt_fim_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))
and	((coalesce(a.cd_estab_regra::text, '') = '') or (a.cd_estab_regra = cd_estabelecimento_w) or (exists (	SELECT	1
												from	contrato_regra_nf_estab x
												where	x.cd_estab_regra = cd_estabelecimento_w
												and	x.nr_seq_regra_nf = a.nr_sequencia)))
and (coalesce(a.ie_situacao::text, '') = '' or a.ie_situacao = 'A')
and	a.nr_sequencia = nr_seq_contrato_regra_nf_p;

select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMC'),1,30) cd_unidade_medida_compra
into STRICT  	cd_unid_med_compra_w
from	material
where	cd_material = cd_material_w;

if (coalesce(cd_conta_contabil_w::text, '') = '') then
	if (coalesce(cd_centro_custo_w::text, '') = '') then
		ie_tipo_conta_w	:= 2;
	else
		ie_tipo_conta_w	:= 3;
	end if;

	SELECT * FROM define_conta_material(	cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, null, null, null, null, null, null, null, cd_local_estoque_w, Null, dt_ordem_w, cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
end if;

if (nr_seq_regra_contrato_w > 0) then

	select	coalesce(ie_preco_oc,'V')
	into STRICT	ie_preco_ordem_compra_w
	from	contrato_regra_nf
	where	nr_sequencia = nr_seq_regra_contrato_w;
	
	if (vl_item_p > 0) and (ie_preco_ordem_compra_w = 'V') then
		vl_pagto_w := vl_item_p;
	end if;
end if;

vl_total_item_w := qt_material_w * vl_pagto_w;

for i in 1..qt_vezes_material_p loop
	begin
	select	coalesce(max(nr_item_oci),0) + 1
	into STRICT	nr_item_oci_w
	from	ordem_compra_item
	where	nr_ordem_compra = nr_ordem_compra_p;
	
	insert into ordem_compra_item(
		nr_ordem_compra,
		nr_item_oci,
		cd_material,
		cd_unidade_medida_compra,
		vl_unitario_material,
		qt_material,
		qt_original,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		cd_pessoa_solicitante,
		pr_descontos,
		cd_local_estoque,
		vl_item_liquido,
		cd_centro_custo,
		cd_conta_contabil,
		pr_desc_financ,
		nr_seq_conta_financ,
		nr_seq_criterio_rateio,
		vl_desconto,
		ie_geracao_solic,
		nr_contrato,
		nr_seq_proj_rec,
		nr_seq_regra_contrato,
		vl_total_item,
		ds_material_direto,
		ds_observacao)
	values (	nr_ordem_compra_p,
		nr_item_oci_w,
		cd_material_w,
		cd_unid_med_compra_w,
		vl_pagto_w,
		qt_material_w,
		qt_material_w,
		clock_timestamp(),
		nm_usuario_p,
		'A',
		cd_pessoa_solicitante_w,
		coalesce(pr_desconto_w,0),
		cd_local_estoque_w,
		vl_pagto_w,
		cd_centro_custo_w,
		cd_conta_contabil_w,
		0,
		nr_seq_conta_financ_w,
		nr_seq_crit_rateio_w,
		coalesce(vl_desconto_w,0),
		'U',
		nr_seq_contrato_w,
		nr_seq_proj_rec_w,
		nr_seq_regra_contrato_w,
		vl_total_item_w,
		ds_complemento_w,
		ds_obs_item_w);
	
	insert into ordem_compra_item_entrega(
		nr_ordem_compra,
		nr_item_oci,
		dt_prevista_entrega,
		qt_prevista_entrega,
		dt_atualizacao,
		nm_usuario,
		nr_sequencia)
	values (	nr_ordem_compra_p,
		nr_item_oci_w,
		dt_entrega_w,
		qt_material_w,
		clock_timestamp(),
		nm_usuario_p,
		nextval('ordem_compra_item_entrega_seq'));
	
	if (ie_gerar_tributos_p = 'S') then
		begin
		open c01;
		loop
		fetch c01 into	
			cd_tributo_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			
			select	max(a.pr_tributo),
				max(a.vl_tributo),
				max(a.ie_corpo_item),
				max(coalesce(a.ie_regra_trib,'N'))
			into STRICT	pr_tributo_w,
				vl_tributo_w,
				ie_corpo_item_w,
				ie_regra_trib_w
			from	contrato_regra_pagto_trib a,
				contrato_regra_nf b
			where	a.nr_seq_regra_nf = b.nr_sequencia
			and	b.cd_material = cd_material_w
			and	a.cd_tributo = cd_tributo_w
			and	b.nr_seq_contrato = nr_seq_contrato_w;
			
			if (vl_item_p > 0 and pr_tributo_w > 0) then
				
				vl_tributo_w	:= dividir((vl_total_item_w * pr_tributo_w), 100);
			end if;
			
			if (ie_regra_trib_w = 'S') then
				
				select	max(a.ie_corpo_item)
				into STRICT	ie_corpo_atrib_w
				from	tributo a,
					contrato_regra_pagto_trib b,
					contrato_regra_nf c
				where 	a.cd_tributo		= b.cd_tributo
				and 	b.nr_seq_regra_nf 	= c.nr_sequencia
				and	c.nr_seq_contrato 	= nr_seq_contrato_w;	
				
				ie_corpo_item_w := ie_corpo_atrib_w;
			end if;
			
			insert into ordem_compra_item_trib(
				nr_ordem_compra,
				nr_item_oci,
				cd_tributo,
				pr_tributo,
				vl_tributo,
				nm_usuario,
				nm_usuario_nrec,
				dt_atualizacao,
				dt_atualizacao_nrec,
				ie_corpo_item)
			values (	nr_ordem_compra_p,
				nr_item_oci_w,
				cd_tributo_w,
				pr_tributo_w,
				vl_tributo_w,
				nm_usuario_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				ie_corpo_item_w);
			end;
		end loop;
		close c01;
		end;
	end if;
	end;
end loop;

select	coalesce(max(ie_forma_pagamento),0)
into STRICT	ie_forma_pagamento_w
from	condicao_pagamento
where	cd_condicao_pagamento = cd_condicao_pagamento_w;

select	round((coalesce(sum(obter_valor_liquido_ordem(nr_ordem_compra)), 0))::numeric, 2)
into STRICT	vl_total_oc_w
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

select	count(*)
into STRICT	qt_vencimentos_w
from	ordem_compra_venc
where	nr_ordem_compra	= nr_ordem_compra_p;

if (ie_forma_pagamento_w <> 10 or qt_vencimentos_w > 0) then
	begin
	CALL Gerar_Ordem_Compra_Venc(nr_ordem_compra_p, nm_usuario_p);
	end;
else
	begin
	insert into ordem_compra_venc(
		nr_ordem_compra,
		nr_item_oc_venc,
		dt_vencimento,
		vl_vencimento,
		dt_atualizacao,
		nm_usuario,
		ie_inf_calc,
		ie_gerar_adiantamento)
	values (	nr_ordem_compra_p,
		1,
		dt_vencimento_p,								
		vl_total_oc_w,
		clock_timestamp(),
		nm_usuario_p,
		'C',
		'N');
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_oci_contrato_mult_selc (nr_ordem_compra_p bigint, nr_seq_contrato_regra_nf_p bigint, vl_item_p bigint, qt_vezes_material_p bigint, nm_usuario_p text, ie_gerar_tributos_p text, dt_vencimento_p timestamp) FROM PUBLIC;

