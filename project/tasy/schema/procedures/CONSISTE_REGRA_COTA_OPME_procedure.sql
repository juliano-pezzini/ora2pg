-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_regra_cota_opme ( nr_seq_agenda_p bigint) AS $body$
DECLARE

 
dt_agenda_w						timestamp;
cd_perfil_w						integer;
nm_usuario_w					varchar(15);
cd_convenio_w					bigint;
cd_estabelecimento_w			bigint;
cd_procedimento_w				bigint;
ie_origem_proced_w				bigint;
cd_especialidade_w				bigint;
qt_cota_w						integer;
nr_sequencia_w					bigint;
qt_cota_ww						integer;
nr_seq_regra_cota_w				bigint;
ie_excecao_w					varchar(15);
ie_tipo_alerta_ww				varchar(15);
ie_tipo_alerta_w				varchar(15);
qt_executada_w					double precision := 0;
qt_total_geral_w				double precision := 0;
qt_prevista_ja_lancada_w	double precision := 0;
qt_total_cota_lancada_w	 	double precision := 0;
qt_prevista_agendamento_w 	double precision := 0;
qt_prevista_agendamento_ww	double precision := 0;
cd_material_agendamento_w 	integer;
ds_material_agendamento_w	varchar(255);
nr_seq_proc_interno_w		bigint;

c01 CURSOR FOR 
	SELECT	qt_cota, 
			nr_sequencia 
	from	regra_cota_opme 
	where	trunc(dt_agenda_w) between trunc(dt_vigencia) and fim_dia(coalesce(dt_fim_vigencia,clock_timestamp() + interval '365 days')) 
	and		coalesce(cd_convenio,cd_convenio_w)	= cd_convenio_w 
	and		coalesce(cd_especialidade,cd_especialidade_w) = cd_especialidade_w 
	and		coalesce(ie_situacao,'A') = 'A' 
	order by coalesce(cd_especialidade,0), 
			coalesce(cd_convenio,0);

c02 CURSOR FOR 
	SELECT	coalesce(sum(qt_material),0), 
			b.cd_material, 
			substr(obter_desc_material(b.cd_material),1,255) 
	from	agenda_paciente a, 
			agenda_pac_opme b, 
			regra_cota_opme_material c 
	where	a.nr_sequencia	= b.nr_seq_agenda 
	and		b.cd_material	= c.cd_material 
	and		c.nr_seq_regra_cota	= nr_seq_regra_cota_w 
	and		coalesce(c.ie_situacao,'A')	= 'A' 
	and		coalesce(b.ie_origem_inf,'I')	= 'I' 
	and		a.ie_status_agenda	not in ('C','L','E') 
	and		trunc(dt_agenda,'month')	= trunc(dt_agenda_w,'month') 
	and		a.nr_sequencia	= nr_seq_agenda_p 
	and   b.qt_material <> 0 
  and		not exists (SELECT 1 from consistencia_agenda d 
						where	d.nr_seq_agenda = nr_seq_agenda_p 
						and d.cd_material = b.cd_material)   
  group by b.cd_material 
  order by substr(obter_desc_material(b.cd_material),1,255);

c03 CURSOR FOR 
	SELECT	coalesce(ie_tipo_alerta,'S') 
	from	regra_cota_opme_acao 
	where	nr_seq_regra_cota	= nr_seq_regra_cota_w 
	and		coalesce(cd_perfil,cd_perfil_w)	= cd_perfil_w 
	and		coalesce(nm_usuario_regra,nm_usuario_w)	= nm_usuario_w 
	and		coalesce(ie_situacao,'A')	= 'A' 
	order by coalesce(cd_perfil,0) desc, 
			nm_usuario_regra desc;


BEGIN 
 
delete	FROM consistencia_agenda 
where	nr_seq_agenda = nr_seq_agenda_p 
and		ie_tipo_inconsistencia = 'OPME' 
and 	coalesce(ds_justificativa::text, '') = '';
 
commit;
 
nm_usuario_w	:= wheb_usuario_pck.get_nm_usuario;
cd_perfil_w		:= coalesce(wheb_usuario_pck.get_cd_perfil,0);
 
select	max(dt_agenda), 
		coalesce(max(cd_convenio),0), 
		max(obter_estab_agenda(cd_agenda)) cd_estabelecimento, 
		max(cd_procedimento), 
		max(ie_origem_proced), 
		coalesce(max(obter_especialidade_medico(cd_medico,null)),0) cd_especialidade, 
		coalesce(max(nr_seq_proc_interno),0) 
into STRICT	dt_agenda_w, 
		cd_convenio_w, 
		cd_estabelecimento_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		cd_especialidade_w, 
		nr_seq_proc_interno_w 
from	agenda_paciente 
where	nr_sequencia = nr_seq_agenda_p;
 
open C01;
loop 
fetch C01 into 
	qt_cota_w, 
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	qt_cota_ww := qt_cota_w;
	nr_seq_regra_cota_w	:= nr_sequencia_w;
 
	select	coalesce(max('S'),'N') 
	into STRICT	ie_excecao_w 
	from	regra_cota_opme_proced 
	where	nr_seq_regra_cota											= nr_seq_regra_cota_w 
	and	coalesce(cd_procedimento,cd_procedimento_w)				= cd_procedimento_w 
	and	coalesce(ie_origem_proced,ie_origem_proced_w)			= ie_origem_proced_w 
	and	coalesce(nr_seq_proc_interno,nr_seq_proc_interno_w)	= nr_seq_proc_interno_w;
 
	if (ie_excecao_w = 'N') then 
 
		open C03;
		loop 
		fetch C03 into 
			ie_tipo_alerta_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			ie_tipo_alerta_ww	:= ie_tipo_alerta_w;
		end;
		end loop;
		close c03;			
 
		if (ie_tipo_alerta_ww IS NOT NULL AND ie_tipo_alerta_ww::text <> '') then 
 
			select 	coalesce(sum(qt_executada), 0) 
			into STRICT 	qt_executada_w 
			from 	material_atend_paciente a, 
					regra_cota_opme_material b, 
					agenda_paciente c 
			where 	a.cd_material 				= 	b.cd_material 
			and		b.nr_seq_regra_cota		=	nr_seq_regra_cota_w 
			and   a.nr_cirurgia  =  c.nr_cirurgia 
			and 	coalesce(obter_especialidade_medico(c.cd_medico,null),0) = cd_especialidade_w 
			and		coalesce(b.ie_situacao,'A') 	= 'A' 
			and 	(coalesce(a.dt_conta,a.dt_atendimento) IS NOT NULL AND (coalesce(a.dt_conta,a.dt_atendimento))::text <> '') -- nova linha 
			and   c.dt_agenda between trunc(dt_agenda_w,'MONTH') and last_day(dt_agenda_w) -- nova linha 
			and 	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
			and   not exists(	SELECT	1 
										from 		regra_cota_opme_proced d 
										where 	d.nr_seq_regra_cota 	= nr_seq_regra_cota_w 
										and 		(((d.cd_procedimento IS NOT NULL AND d.cd_procedimento::text <> '') and d.cd_procedimento 	= c.cd_procedimento) or ((d.nr_seq_proc_interno IS NOT NULL AND d.nr_seq_proc_interno::text <> '') and d.nr_seq_proc_interno= c.nr_seq_proc_interno)));
 
			select	coalesce(sum(qt_material),0) 
			into STRICT 	qt_prevista_ja_lancada_w 
			from	agenda_paciente a, 
					agenda_pac_opme b, 
					regra_cota_opme_material c 
			where 	a.nr_sequencia 				= b.nr_seq_agenda 
			and		b.cd_material 				= c.cd_material 
			and		c.nr_seq_regra_cota			= nr_seq_regra_cota_w 
			and 	coalesce(obter_especialidade_medico(a.cd_medico,null),0) = cd_especialidade_w 
			and		coalesce(c.ie_situacao,'A') 		= 'A' 
			and 	coalesce(b.ie_origem_inf,'I') 	= 'I' 
			and 	a.ie_status_agenda 			not in ('C','L','E') 
			and   a.dt_agenda between trunc(dt_agenda_w,'MONTH') and last_day(dt_agenda_w) -- nova linha 
			and 	a.nr_sequencia 				<> nr_seq_agenda_p 
			and   not exists(	SELECT	1 
										from 		regra_cota_opme_proced d 
										where 	d.nr_seq_regra_cota 	= nr_seq_regra_cota_w 
										and 		(((d.cd_procedimento IS NOT NULL AND d.cd_procedimento::text <> '') and d.cd_procedimento 	= a.cd_procedimento) or ((d.nr_seq_proc_interno IS NOT NULL AND d.nr_seq_proc_interno::text <> '') and d.nr_seq_proc_interno = a.nr_seq_proc_interno)));
 
			qt_total_cota_lancada_w := qt_executada_w + qt_prevista_ja_lancada_w;
 
			qt_total_geral_w:= 0;
			qt_prevista_agendamento_ww := 0;
		 
			open C02;
			loop 
			fetch C02 into 
				qt_prevista_agendamento_w, 
				cd_material_agendamento_w, 
				ds_material_agendamento_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				qt_prevista_agendamento_ww := qt_prevista_agendamento_ww + qt_prevista_agendamento_w;
				qt_total_geral_w	:= qt_prevista_agendamento_ww +	qt_total_cota_lancada_w;
 
				if (qt_total_geral_w > qt_cota_ww) then 
					insert into consistencia_agenda(nr_sequencia, 
													cd_material, 
													nr_seq_agenda, 
													ds_inconsistencia, 
													ie_tipo_inconsistencia, 
													ie_alerta_bloqueia, 
													ds_stack, 
													nm_usuario, 
													dt_atualizacao) 
					values 		(nextval('consistencia_agenda_seq'), 
													cd_material_agendamento_w, 
													nr_seq_agenda_p, 
													wheb_mensagem_pck.get_texto(387702, 'DS_MATERIAL=' || ds_material_agendamento_w || ';QT_MAXIMA=' || qt_cota_ww || ';QT_PREVISTA=' ||(qt_total_geral_w-qt_prevista_agendamento_w) || ';QT_MATERIAL=' || qt_prevista_agendamento_w), 
													'OPME', 
													ie_tipo_alerta_ww, 
													'CONSISTE_REGRA_COTA_OPME', 
													nm_usuario_w, 
													clock_timestamp());
					commit;
				end if;
				end;
			end loop;
			close C02;
		end if;	
	end if;
	end;
end loop;
close c01;
 
delete FROM consistencia_agenda a 
where not exists (SELECT 1 from agenda_pac_opme b 
				where	a.nr_seq_agenda = b.nr_seq_agenda 
				and 	a.cd_material = b.cd_material 
				and 	ie_origem_inf = 'I') 
and a.nr_seq_agenda = nr_seq_agenda_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_regra_cota_opme ( nr_seq_agenda_p bigint) FROM PUBLIC;

