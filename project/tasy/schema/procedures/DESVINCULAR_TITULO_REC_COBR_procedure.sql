-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desvincular_titulo_rec_cobr ( nr_seq_cobranca_p bigint, nr_titulo_p bigint, nr_seq_motivo_exc_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_titulo_w			bigint;
ie_remessa_retorno_w		varchar(1);
qt_titulo_comissao_w		bigint;
nr_seq_lote_repasse_w		bigint;
nr_seq_tit_cobr_w		bigint;
qt_reenvio_w			bigint;
nr_seq_lote_reenvio_w		bigint;
qt_cobr_esc_reenv_w		bigint;
nr_seq_loet_cobr_esc_reenv_w	bigint;
cd_estabelecimento_w		smallint;
ie_cobranca_w			varchar(1)	:= 'N';
nr_sequencia_w                  bigint;


C01 CURSOR FOR
SELECT	nr_sequencia
	from    titulo_receber_cobr
	where   nr_seq_cobranca = nr_seq_cobranca_p;



BEGIN

select	max(a.ie_remessa_retorno),
	max(a.cd_estabelecimento)
into STRICT	ie_remessa_retorno_w,
	cd_estabelecimento_w
from	cobranca_escritural a
where	a.nr_sequencia	= nr_seq_cobranca_p;

ie_cobranca_w := obter_param_usuario(815, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cobranca_w);

insert	into titulo_receber_cobr_exc(cd_agencia_bancaria,
	cd_banco,
	cd_camara_compensacao,
	cd_centro_custo_desc,
	cd_cgc_r,
	cd_instrucao,
	cd_moeda,
	cd_ocorrencia,
	cd_pessoa_fisica_r,
	ds_estabelecimento_r,
	ds_inconsistencia,
	dt_atualizacao,
	dt_atualizacao_nrec,
	dt_liquidacao,
	dt_pagamento_real,
	ie_digito_conta,
	ie_verificacao,
	nm_pessoa_r,
	nm_usuario,
	nm_usuario_nrec,
	nr_conta,
	nr_documento_r,
	nr_seq_cobranca,
	nr_seq_mensalidade,
	nr_seq_motivo_desc,
	nr_seq_ocorrencia_ret,
	nr_seq_ocorr_motivo,
	nr_sequencia,
	nr_titulo,
	qt_dias_instrucao,
	vl_acrescimo,
	vl_cobranca,
	vl_desconto,
	vl_desc_previsto,
	vl_despesa_bancaria,
	vl_juros,
	vl_juros_calc,
	vl_liquidacao,
	vl_multa,
	vl_multa_calc,
	vl_saldo_inclusao,
	vl_titulo_r,
	nr_seq_motivo_exc)
SELECT	a.cd_agencia_bancaria,
	a.cd_banco,
	a.cd_camara_compensacao,
	a.cd_centro_custo_desc,
	a.cd_cgc_r,
	a.cd_instrucao,
	a.cd_moeda,
	a.cd_ocorrencia,
	a.cd_pessoa_fisica_r,
	a.ds_estabelecimento_r,
	a.ds_inconsistencia,
	clock_timestamp(),
	coalesce(a.dt_atualizacao_nrec, a.dt_atualizacao),
	a.dt_liquidacao,
	a.dt_pagamento_real,
	a.ie_digito_conta,
	a.ie_verificacao,
	a.nm_pessoa_r,
	nm_usuario_p,
	coalesce(a.nm_usuario_nrec, a.nm_usuario),
	a.nr_conta,
	a.nr_documento_r,
	a.nr_seq_cobranca,
	a.nr_seq_mensalidade,
	a.nr_seq_motivo_desc,
	a.nr_seq_ocorrencia_ret,
	a.nr_seq_ocorr_motivo,
	a.nr_sequencia,
	a.nr_titulo,
	a.qt_dias_instrucao,
	a.vl_acrescimo,
	a.vl_cobranca,
	a.vl_desconto,
	a.vl_desc_previsto,
	a.vl_despesa_bancaria,
	a.vl_juros,
	a.vl_juros_calc,
	a.vl_liquidacao,
	a.vl_multa,
	a.vl_multa_calc,
	a.vl_saldo_inclusao,
	a.vl_titulo_r,
	CASE WHEN nr_seq_motivo_exc_p=0 THEN  null  ELSE nr_seq_motivo_exc_p END
from	titulo_receber_cobr a
where	a.nr_seq_cobranca	= nr_seq_cobranca_p
and	a.nr_titulo		= coalesce(nr_titulo_p,a.nr_titulo);

select	count(*),
	max(nr_seq_lote)
into STRICT	qt_titulo_comissao_w,
	nr_seq_lote_repasse_w
from	pls_desc_comissao	b,
	titulo_receber_cobr	a
where	a.nr_sequencia		= b.nr_seq_titulo_cobr
and	a.nr_titulo		= coalesce(nr_titulo_p,a.nr_titulo)
and	a.nr_seq_cobranca	= nr_seq_cobranca_p;

if (coalesce(qt_titulo_comissao_w,0) <> 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(194965, 'NR_SEQ_LOTE_REPASSE=' || nr_seq_lote_repasse_w || ';NR_TITULO=' || nr_titulo_p);
end if;

select	count(*),
	max(nr_seq_lote)
into STRICT	qt_reenvio_w,
	nr_seq_lote_reenvio_w
from	pls_desc_reenvio	b,
	titulo_receber_cobr	a
where	a.nr_sequencia		= b.nr_titulo_cobr
and	a.nr_titulo		= coalesce(nr_titulo_p,a.nr_titulo)
and	a.nr_seq_cobranca	= nr_seq_cobranca_p;

if (coalesce(qt_reenvio_w,0) <> 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(195011, 'NR_TITULO=' || nr_titulo_p || ';NR_SEQ_LOTE=' || nr_seq_lote_reenvio_w);
end if;

select	count(*),
	max(a.nr_seq_lote)
into STRICT	qt_cobr_esc_reenv_w,
	nr_seq_loet_cobr_esc_reenv_w
from	lote_cobr_esc_reenv_tit a,
	titulo_receber_cobr	b
where	a.nr_seq_tit_rec_cobr	= b.nr_sequencia
and	b.nr_titulo		= coalesce(nr_titulo_p,b.nr_titulo)
and	b.nr_seq_cobranca	= nr_seq_cobranca_p;

if (coalesce(qt_cobr_esc_reenv_w,0) <> 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(224995, 'NR_TITULO=' || nr_titulo_p || ';NR_SEQ_LOTE=' || nr_seq_loet_cobr_esc_reenv_w);
end if;

update	titulo_receber a
set	a.nr_seq_empresa	 = NULL
where	a.nr_titulo		in (SELECT	distinct
		x.nr_titulo
	from	titulo_receber_cobr x
	where	x.nr_titulo		= coalesce(nr_titulo_p,x.nr_titulo)
	and	x.nr_seq_cobranca	= nr_seq_cobranca_p);

if (coalesce(ie_cobranca_w,'N')	= 'S') then

	delete	from cobranca a
	where	a.nr_titulo	in (SELECT	distinct
			x.nr_titulo
		from	titulo_receber_cobr x
		where	x.nr_titulo		= coalesce(nr_titulo_p,x.nr_titulo)
		and	x.nr_seq_cobranca	= nr_seq_cobranca_p);

end if;

delete	from pls_desconto_folha_envio a
where	a.nr_titulo_cobr	in (SELECT	x.nr_sequencia
	from	titulo_receber_cobr x
	where	x.nr_titulo		= coalesce(nr_titulo_p,x.nr_titulo)
	and	x.nr_seq_cobranca	= nr_seq_cobranca_p);


if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '' AND nr_titulo_p <> 0) then

	select	max(nr_sequencia)
		into STRICT  nr_sequencia_w
	from    titulo_receber_cobr
	where   nr_seq_cobranca = nr_seq_cobranca_p
	and     nr_titulo =  nr_titulo_p;

	delete from inconsistencia_tit_escrit  b
	where b.nr_seq_titulo_escrit = nr_sequencia_w;

else
	open C01;
	loop
	fetch C01 into
	nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		delete from inconsistencia_tit_escrit  b
		where b.nr_seq_titulo_escrit = nr_sequencia_w;

	end loop;
	close c01;
end if;

delete	from titulo_receber_cobr a
where	a.nr_titulo		= coalesce(nr_titulo_p,a.nr_titulo)
and	a.nr_seq_cobranca	= nr_seq_cobranca_p;

if (coalesce(nr_titulo_p::text, '') = '') then

	delete	from pls_desc_inconsistencia
	where	nr_seq_cobranca	= nr_seq_cobranca_p;

	qt_titulo_w	:= 0;

elsif (ie_remessa_retorno_w = 'T') then

	select	count(*)
	into STRICT	qt_titulo_w
	from	titulo_receber_cobr
	where	nr_seq_cobranca	= nr_seq_cobranca_p;

end if;

if (coalesce(qt_titulo_w,0) = 0) then

	update	cobranca_escritural
	set	ds_arquivo	 = NULL
	where	nr_sequencia	= nr_seq_cobranca_p;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desvincular_titulo_rec_cobr ( nr_seq_cobranca_p bigint, nr_titulo_p bigint, nr_seq_motivo_exc_p bigint, nm_usuario_p text) FROM PUBLIC;

