-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_ajuste_producao ( nr_lote_contabil_p bigint, nm_usuario_p text, ds_retorno_p INOUT text, ie_exclusao_p text) AS $body$
DECLARE


cd_estabelecimento_w                    estabelecimento.cd_estabelecimento%type;
ds_local_estoque_w                      local_estoque.ds_local_estoque%type;
dt_inicial_w                            timestamp;
dt_final_w                              timestamp;
dt_mesano_referencia_w                  timestamp;
cd_tipo_lote_contabil_w                 tipo_lote_contabil.cd_tipo_lote_contabil%type;
nr_lote_producao_w                      movimento_estoque.nr_documento%type;
dt_movimento_w                          timestamp;
nr_sequencia_movto_w                    bigint      := 0;
cd_historico_w                          historico_padrao.cd_historico%type;
vl_contabil_w                           movimento_contabil.vl_movimento%type;
cd_conta_debito_w                       conta_contabil.cd_conta_contabil%type;
cd_conta_credito_w                      conta_contabil.cd_conta_contabil%type;
cd_local_estoque_w                      local_estoque.cd_local_estoque%type;
cd_centro_custo_w                       centro_custo.cd_centro_custo%type;
ds_compl_historico_w                    varchar(255);
ds_conteudo_w                           varchar(4000);
cd_material_w                           material.cd_material%type;
ie_compl_hist_w                         varchar(1);
ds_material_w                           material.ds_material%type;
qt_conv_estoque_consumo_w               material.qt_conv_estoque_consumo%type;
cd_empresa_w                            empresa.cd_empresa%type;
nm_agrupador_w                          agrupador_contabil.nm_atributo%type;
nr_seq_agrupamento_w                    w_movimento_contabil.nr_seq_agrupamento%type;
cd_sequencia_parametro_pd_w             bigint;
cd_sequencia_parametro_ap_w             bigint;

c01 CURSOR FOR
        SELECT  a.nr_movimento_estoque,
                a.cd_material,
                a.cd_operacao_estoque,
                a.dt_movimento_estoque,
                a.nr_documento,
                a.vl_movimento
        from    movto_estoque_ajuste_prod_v a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.dt_movimento_estoque between dt_inicial_w and dt_final_w;

vet01   c01%RowType;


BEGIN
/*Validacao para impedir a geracao em lotes incorretos*/

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 45) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
ds_retorno_p            := null;

/* Identifica o Estabelecimento do Lote Contabil */

select  cd_estabelecimento,
        trunc(dt_referencia,'mm'),
        cd_tipo_lote_contabil,
        obter_se_compl_tipo_lote(cd_estabelecimento, cd_tipo_lote_contabil)
into STRICT    cd_estabelecimento_w,
        dt_mesano_referencia_w,
        cd_tipo_lote_contabil_w,
        ie_compl_hist_w
from    lote_contabil
where   nr_lote_contabil = nr_lote_contabil_p;

dt_inicial_w    := trunc(dt_mesano_referencia_w,'mm');
dt_final_w      := fim_mes(dt_inicial_w);

select  coalesce(max(cd_hist_contab_prod),0)
into STRICT    cd_historico_w
from    parametro_estoque
where   cd_estabelecimento = cd_estabelecimento_w;

cd_empresa_w    := obter_empresa_estab(cd_estabelecimento_w);

if (cd_historico_w = 0) then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(192337);
        /*'Deve ser informado o historico padrao para contabilizacao da producao, nos parametros de estoque'|| '#@#@');*/

end if;

if (ie_exclusao_p = 'S') then

        delete  from movimento_contabil
        where   nr_lote_contabil = nr_lote_contabil_p;
        update  movimento_estoque a
        set     a.nr_lote_contabil       = NULL
        where   a.nr_lote_contabil      = nr_lote_contabil_p;
        commit;
else
        update  movimento_estoque a
        set     a.nr_lote_contabil              = nr_lote_contabil_p
        where   a.cd_estabelecimento            = cd_estabelecimento_w
        and     coalesce(a.nr_lote_contabil,0)       = 0
        and     a.ie_origem_documento           = 7
        and     a.dt_mesano_referencia  between dt_inicial_w and dt_final_w
        and     exists ( SELECT  1
                        from    movimento_estoque_valor y
                        where   y.nr_movimento_estoque  = a.nr_movimento_estoque
                        and     y.cd_tipo_valor         = 17)
        and     exists ( select  1
                        from    lote_producao y
                        where   y.nr_lote_producao      = a.nr_documento
                        and     y.cd_estabelecimento    = cd_estabelecimento_w
                        and     coalesce(y.nr_lote_contabil,0) <> 0
                        and     y.dt_mesano_referencia  between dt_inicial_w and dt_final_w);
        commit;
end if;

delete  FROM w_movimento_contabil
where   nr_lote_contabil = nr_lote_contabil_p;

nr_sequencia_movto_w            := 0;
/*
Debita despesa do mat/med
Credita Ajuste de producao
*/
nm_agrupador_w := coalesce(trim(both obter_agrupador_contabil(45)), 'NR_LOTE_PRODUCAO');
open c01;
loop
fetch c01 into
        vet01;
EXIT WHEN NOT FOUND; /* apply on c01 */

        nr_lote_producao_w      := vet01.nr_documento;
        dt_movimento_w          := trunc(vet01.dt_movimento_estoque,'dd');
        vl_contabil_w           := vet01.vl_movimento;
        cd_material_w           := vet01.cd_material;
        ds_compl_historico_w    := '';
        ds_conteudo_w           := '';
        nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;
        cd_conta_debito_w       := '';
        cd_conta_credito_w      := '';

        select  max(ds_material),
                max(qt_conv_estoque_consumo)
        into STRICT    ds_material_w,
                qt_conv_estoque_consumo_w
        from    material
        where   cd_material = vet01.cd_material;

        begin
        select  cd_local_estoque
        into STRICT    cd_local_estoque_w
        from    movimento_estoque a
        where   a.nr_movimento_estoque  = vet01.nr_movimento_estoque;
        exception when others then
                cd_local_estoque_w      := null;
        end;

        cd_sequencia_parametro_pd_w     := null;
        cd_sequencia_parametro_ap_w     := null;

        SELECT * FROM define_conta_material(
                cd_estabelecimento_w, cd_material_w, 3, null, 0, '0', 0, null, null, null, cd_local_estoque_w, null, dt_movimento_w, cd_conta_debito_w, cd_centro_custo_w, null) INTO STRICT cd_conta_debito_w, cd_centro_custo_w;

        cd_sequencia_parametro_pd_w     := philips_contabil_pck.get_parametro_conta_contabil();

        SELECT * FROM define_conta_material(
                cd_estabelecimento_w, cd_material_w, 5, null, 0, '0', 0, null, null, null, cd_local_estoque_w, null, dt_movimento_w, cd_conta_credito_w, cd_centro_custo_w, null) INTO STRICT cd_conta_credito_w, cd_centro_custo_w;

        cd_sequencia_parametro_ap_w     := philips_contabil_pck.get_parametro_conta_contabil();

        select  max(ds_local_estoque),
                coalesce(max(cd_centro_custo), 0)
        into STRICT    ds_local_estoque_w,
                cd_centro_custo_w
        from    local_estoque
        where   cd_local_estoque = cd_local_estoque_w;

        if (ie_compl_hist_w = 'S') then
                ds_conteudo_w   := substr(
                        nr_lote_producao_w      || '#@' ||
                        cd_material_w           || '#@' ||
                        cd_local_estoque_w      || '#@' ||
                        ds_material_w           || '#@' ||
                        ds_local_estoque_w ,1,4000);

                select  substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255)
                into STRICT    ds_compl_historico_w
;
        end if;

        if (nm_agrupador_w = 'NR_LOTE_PRODUCAO') then
                nr_seq_agrupamento_w    := nr_lote_producao_w;
        end if;

        insert into w_movimento_contabil(
                nr_lote_contabil,
                nr_sequencia,
                cd_conta_contabil,
                ie_debito_credito,
                cd_historico,
                dt_movimento,
                vl_movimento,
                cd_centro_custo,
                ds_compl_historico,
                ds_doc_agrupamento,
                nr_seq_agrupamento,
                nr_seq_trans_fin,
                cd_cgc,
                cd_pessoa_fisica,
                nr_documento,
                ie_transitorio,
                cd_sequencia_parametro)
        values ( nr_lote_contabil_p,
                nr_sequencia_movto_w,
                cd_conta_debito_w,
                'D',
                cd_historico_w,
                dt_movimento_w,
                vl_contabil_w,
                cd_centro_custo_w,
                ds_compl_historico_w,
                null,
                nr_seq_agrupamento_w,
                null,
                null,
                null,
                nr_lote_producao_w,
                'N',
                cd_sequencia_parametro_pd_w);

        insert into w_movimento_contabil(
                nr_lote_contabil,
                nr_sequencia,
                cd_conta_contabil,
                ie_debito_credito,
                cd_historico,
                dt_movimento,
                vl_movimento,
                cd_centro_custo,
                ds_compl_historico,
                ds_doc_agrupamento,
                nr_seq_agrupamento,
                nr_seq_trans_fin,
                cd_cgc,
                cd_pessoa_fisica,
                nr_documento,
                ie_transitorio,
                cd_sequencia_parametro)
        values ( nr_lote_contabil_p,
                nr_sequencia_movto_w,
                cd_conta_credito_w,
                'C',
                cd_historico_w,
                dt_movimento_w,
                vl_contabil_w,
                null,
                ds_compl_historico_w,
                null,
                nr_seq_agrupamento_w,
                null,
                null,
                null,
                nr_lote_producao_w,
                'N',
                cd_sequencia_parametro_ap_w);
end loop;
close c01;

CALL Agrupa_Movimento_Contabil(nr_lote_contabil_p, nm_usuario_p);

if (coalesce(ds_retorno_p::text, '') = '') then
        update  lote_contabil
        set     ie_situacao = 'A',
                dt_geracao_lote = clock_timestamp()
        where   nr_lote_contabil = nr_lote_contabil_p;
        if (ie_exclusao_p = 'S') then
                ds_retorno_p            := Wheb_mensagem_pck.get_texto(165188);
                CALL ctb_gravar_log_lote( nr_lote_contabil_p, 2, '', nm_usuario_p);
        else
                ds_retorno_p            := Wheb_mensagem_pck.get_texto(165187);
                CALL ctb_gravar_log_lote( nr_lote_contabil_p, 1, '', nm_usuario_p);
        end if;
        commit;
else
        rollback;
end if;

ds_retorno_p            := substr(ds_retorno_p,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_ajuste_producao ( nr_lote_contabil_p bigint, nm_usuario_p text, ds_retorno_p INOUT text, ie_exclusao_p text) FROM PUBLIC;

