-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dados_envio_email_orientacao ( nr_seq_agenda_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, cd_procedimento_p bigint, cd_convenio_p bigint, cd_agenda_p bigint, nr_seq_proc_interno_p text, ie_origem_proced_p text, nm_usuario_p text, nm_paciente_p text, dt_agenda_p timestamp, hr_inicio_p timestamp, nr_seq_tipo_classif_pac_p bigint, ie_macro_p INOUT text, ds_macro_exame_p INOUT text, ds_email_destino_p INOUT text, ds_macro_orient_p INOUT text, ds_macro_estab_agenda_p INOUT text, ds_macro_end_est_age_p INOUT text, ds_macro_setor_agenda_p INOUT text, ds_texto_cabecalho_p INOUT text, ds_texto_orient_p INOUT text, ds_macro_orient_proc_p INOUT text) AS $body$
DECLARE



ds_email_destino_w 	varchar(255);
ds_exame_w 		varchar(240);
ds_texto_orient_w 	varchar(5000);
ds_texto_cabecalho_w 	varchar(5000);
ds_exame_agenda_w 	varchar(5000);
ds_texto_orient_temp_w 	varchar(5000);
ds_orientacao_proc_w	varchar(4000);


BEGIN
if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then
	begin
	
	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then		
		ds_email_destino_w	:= obter_compl_pf(cd_pessoa_fisica_p,1,'M');	
	else
		select 	max(ds_email)
		into STRICT	ds_email_destino_w
		from	agenda_paciente
		where	nr_sequencia = nr_seq_agenda_p;
	end if;
	
	select max(ds_frase_orient_exame)
	into STRICT ds_texto_orient_w
	from parametro_agenda
       	where cd_estabelecimento = cd_estabelecimento_p;
	
	if (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') and (hr_inicio_p IS NOT NULL AND hr_inicio_p::text <> '') and (nm_paciente_p IS NOT NULL AND nm_paciente_p::text <> '') then
		begin
		--ds_texto_orient_temp_w := obter_orient_exame_agenda(cd_procedimento_p,ie_origem_proced_p,cd_convenio_p,nr_seq_proc_interno_p,nm_usuario_p,cd_estabelecimento_p,820);
		
		ds_texto_orient_temp_w := obter_orient_exame_agexame(cd_procedimento_p,ie_origem_proced_p,cd_convenio_p,nr_seq_proc_interno_p,nm_usuario_p,cd_estabelecimento_p,820,nr_seq_tipo_classif_pac_p,nr_seq_agenda_p);
		
		ds_exame_w := substr(obter_exame_agenda(cd_procedimento_p,ie_origem_proced_p,nr_seq_proc_interno_p),1,240);
		
		if (coalesce(ds_texto_orient_w::text, '') = '') then
			begin
			ie_macro_p := 'N';
			ds_texto_cabecalho_w 	:= 	wheb_mensagem_pck.get_texto(800943, 'NM_PACIENTE='||nm_paciente_p) || '#BR#' || '#BR#' || wheb_mensagem_pck.get_texto(800944) || ': ' || ds_exame_w || '#BR#' || '#BR#' || wheb_mensagem_pck.get_texto(801278) ||': ' || '#BR#' || '#BR#';
			
			ds_texto_orient_w		:=	(ds_texto_orient_temp_w) || '#BR# ' || '#BR#' || wheb_mensagem_pck.get_texto(801614) ||' ' || (obter_nome_usuario(nm_usuario_p)) || ' ' || wheb_mensagem_pck.get_texto(801617) || ' ' || (obter_nome_estabelecimento(cd_estabelecimento_p)) || ' ' || wheb_mensagem_pck.get_texto(801618) ||
							' ' || trunc(dt_agenda_p) || ' ' || wheb_mensagem_pck.get_texto(801620) || ' ' || to_char(hr_inicio_p,'hh24:mi:ss') || '.' || '#BR# #BR#';			
			end;
		else
			begin

			ie_macro_p := 'S';
			ds_macro_orient_p := ds_texto_orient_temp_w;
			ds_macro_exame_p := ds_exame_w;
			select	obter_dados_pf_pj(null, b.cd_cgc, 'ECM') ds_end_estab_agenda,
				substr(b.nm_fantasia_estab,1,255) ds_estab_agenda,
				substr(obter_nome_setor(obter_setor_agenda(a.cd_agenda)),1,255) ds_setor_agenda
			into STRICT	ds_macro_end_est_age_p,
				ds_macro_estab_agenda_p,
				ds_macro_setor_agenda_p
			from	agenda a,
				estabelecimento b
			where	a.cd_estabelecimento = b.cd_estabelecimento
			and	a.cd_agenda = cd_agenda_p;

			end;
		end if;
		
		end;
	end if;
	
	if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then
		
		select 	substr(obter_orient_procedimento(cd_procedimento_p, ie_origem_proced_p),1,4000)
		into STRICT	ds_orientacao_proc_w
		;
		
	end if;
	
	end;
	ds_email_destino_p := ds_email_destino_w;
	ds_texto_cabecalho_p := ds_texto_cabecalho_w;
	ds_texto_orient_p := ds_texto_orient_w;
	ds_macro_orient_proc_p := ds_orientacao_proc_w;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dados_envio_email_orientacao ( nr_seq_agenda_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, cd_procedimento_p bigint, cd_convenio_p bigint, cd_agenda_p bigint, nr_seq_proc_interno_p text, ie_origem_proced_p text, nm_usuario_p text, nm_paciente_p text, dt_agenda_p timestamp, hr_inicio_p timestamp, nr_seq_tipo_classif_pac_p bigint, ie_macro_p INOUT text, ds_macro_exame_p INOUT text, ds_email_destino_p INOUT text, ds_macro_orient_p INOUT text, ds_macro_estab_agenda_p INOUT text, ds_macro_end_est_age_p INOUT text, ds_macro_setor_agenda_p INOUT text, ds_texto_cabecalho_p INOUT text, ds_texto_orient_p INOUT text, ds_macro_orient_proc_p INOUT text) FROM PUBLIC;

