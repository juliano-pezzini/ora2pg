-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_dados_end_web (cd_cep_p text, nm_localidade_p INOUT text, nm_logradouro_p INOUT text, nm_bairro_p INOUT text, cd_unidade_federacao_p INOUT text, cd_municipio_p INOUT text, ie_registros_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Utilizada para obter as informações referentes ao CEP no portal web.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  X] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_registros_w		bigint;


BEGIN

ie_registros_p := 'S';

select	count(1)
into STRICT	qt_registros_w
from	funcao_parametro
where	cd_funcao = 0
and		nr_sequencia = 25
and		coalesce(vl_parametro, vl_parametro_padrao) = 'S';

if (qt_registros_w > 0) then

	select	count(1)
	into STRICT	qt_registros_w
	from	cep_log
	where	cd_cep = cd_cep_p
	and		(cd_bairro_inicial IS NOT NULL AND cd_bairro_inicial::text <> '')  LIMIT 1;

	if (qt_registros_w > 0) then

		begin
			select a.nm_localidade,
				   b.nm_logradouro,
				   substr(obter_desc_cep_bairro(b.cd_bairro_inicial,a.nr_sequencia),1,80),
				   b.ds_uf
			into STRICT   nm_localidade_p,
				   nm_logradouro_p,
				   nm_bairro_p,
				   cd_unidade_federacao_p
			from   cep_log b,
				   cep_loc a
			where  a.nr_sequencia      = b.nr_seq_loc
			and    b.cd_cep = cd_cep_p
			and    (b.cd_bairro_inicial IS NOT NULL AND b.cd_bairro_inicial::text <> '')  LIMIT 1;
		exception
		when others then
			ie_registros_p := 'N';
		end;

	else

		begin
			select a.nm_localidade,
				   null,
				   null,
				   a.ds_uf
			into STRICT   nm_localidade_p,
				   nm_logradouro_p,
				   nm_bairro_p,
				   cd_unidade_federacao_p
			from   cep_loc a
			where  a.cd_cep = cd_cep_p  LIMIT 1;
		exception
		when others then
			ie_registros_p := 'N';
		end;

	end if;

else

	begin
		select	nm_localidade,
				nm_logradouro,
				nm_bairro,
				cd_unidade_federacao
		into STRICT    nm_localidade_p,
				nm_logradouro_p,
				nm_bairro_p,
				cd_unidade_federacao_p
		from	cep_logradouro
		where	cd_logradouro = cd_cep_p  LIMIT 1;
	exception
	when others then
		ie_registros_p := 'N';
	end;

end if;

if (ie_registros_p = 'S') then

	select	obter_municipio_ibge(cd_cep_p)
	into STRICT	cd_municipio_p
	;

end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_dados_end_web (cd_cep_p text, nm_localidade_p INOUT text, nm_logradouro_p INOUT text, nm_bairro_p INOUT text, cd_unidade_federacao_p INOUT text, cd_municipio_p INOUT text, ie_registros_p INOUT text) FROM PUBLIC;

