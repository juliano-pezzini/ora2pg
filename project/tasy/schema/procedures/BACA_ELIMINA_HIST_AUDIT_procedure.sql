-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_elimina_hist_audit (nr_sequencia_p bigint) AS $body$
DECLARE


nr_sequencia_w		bigint;
vl_inicial_w			double precision;
nr_interno_conta_w		bigint;
cd_convenio_w			integer;
dt_inicial_w			timestamp;

vl_historico_w		double precision;
ie_acao_w			smallint;

vl_nao_auditado_w 		double precision;
vl_recebido_w			double precision;
vl_reapresentacao_w		double precision;
vl_glosa_devida_w		double precision;
vl_glosa_indevida_w		double precision;
vl_pendente_w			double precision;
vl_recebido_novo_w		double precision;
vl_glosa_devida_novo_w	double precision;
vl_glosa_indevida_novo_w 	double precision;

nr_sequencia_hist_w		bigint;
dt_historico_w		timestamp;
vl_historico_c03_w		double precision;
dt_atualizacao_w		timestamp;
nm_usuario_w			varchar(15);
nr_seq_conpaci_ret_w		bigint;
nr_seq_hist_audit_w		bigint;
nr_seq_ret_item_w		bigint;
ds_observacao_w		varchar(2000);
nr_seq_lote_audit_w		bigint;
dt_reapresentacao_w		timestamp;
dt_receb_prev_w		timestamp;
cd_motivo_glosa_w		integer;
cd_processo_receb_w		varchar(20);
nr_seq_lote_recurso_w	bigint;
dt_atualizacao_nrec_w	timestamp;
nm_usuario_nrec_w		varchar(15);

vl_glosa_w			double precision;
vl_diferenca_w		double precision;
ie_opcao_w			smallint;

c01 CURSOR FOR
SELECT 	a.nr_sequencia,
	a.vl_inicial,
	a.nr_interno_conta,
	a.cd_convenio,
	a.dt_inicial
from	conta_paciente_retorno a
where exists ( select 1
		from conta_paciente_ret_hist b
		where 	b.nr_seq_hist_audit	= nr_sequencia_p
		and	b.nr_seq_conpaci_ret	= a.nr_sequencia);
c02 CURSOR FOR
SELECT 	b.vl_historico,
	a.ie_acao
from	hist_audit_conta_paciente a,
	conta_paciente_ret_hist b
where	a.nr_sequencia		= b.nr_seq_hist_audit
and	b.nr_seq_conpaci_ret	= nr_sequencia_w
order by b.dt_historico;

c03 CURSOR FOR
SELECT  b.nr_sequencia,
	b.dt_historico,
	b.vl_historico,
	b.dt_atualizacao,
	b.nm_usuario,
	b.nr_seq_conpaci_ret,
	b.nr_seq_hist_audit,
	b.nr_seq_ret_item,
	b.ds_observacao,
	b.nr_seq_lote_audit,
	b.dt_reapresentacao,
	b.dt_receb_prev,
	b.cd_motivo_glosa,
	b.cd_processo_receb,
	b.nr_seq_lote_recurso,
	b.dt_atualizacao_nrec,
	b.nm_usuario_nrec
from	conta_paciente_ret_hist b
where	b.nr_seq_hist_audit	= nr_sequencia_p
and	b.nr_seq_conpaci_ret	= nr_sequencia_w
order by b.dt_historico;

/*
create table baca_historicos_auditoria
as
select 	*
from conta_paciente_ret_hist
where 1 = 2;

ALTER TABLE baca_historicos_auditoria ADD(ie_opcao number(1));

É necessário criar a tabela antes de rodar o baca
*/
BEGIN

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	vl_inicial_w,
	nr_interno_conta_w,
	cd_convenio_w,
	dt_inicial_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	vl_recebido_w		:= 0;
	vl_nao_auditado_w 	:= 0;
	vl_reapresentacao_w	:= 0;
	vl_glosa_devida_w	:= 0;
	vl_glosa_indevida_w	:= 0;
	vl_pendente_w 		:= vl_inicial_w;
	vl_diferenca_w		:= 0;
	open c02;
	loop
	fetch c02 into
		vl_historico_w,
		ie_acao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		if (ie_acao_w = 0) then
			vl_pendente_w		:= vl_pendente_w - vl_historico_w;
			vl_nao_auditado_w 	:= vl_nao_auditado_w + vl_historico_w;
		end if;
		if (ie_acao_w = 1) then
			vl_recebido_w		:= vl_recebido_w + vl_historico_w;
			vl_recebido_novo_w 	:= vl_historico_w;
			if (vl_pendente_w >= vl_recebido_novo_w) then
				vl_pendente_w 		:= vl_pendente_w - vl_recebido_novo_w;
				vl_recebido_novo_w 	:= 0;
			else
				vl_recebido_novo_w 	:= vl_recebido_novo_w - vl_pendente_w;
				vl_pendente_w 		:= 0;
				if (vl_reapresentacao_w >= vl_recebido_novo_w) then
					vl_reapresentacao_w	:= vl_reapresentacao_w - vl_recebido_novo_w;
					vl_recebido_novo_w	:= 0;
				else
					vl_recebido_novo_w	:= vl_recebido_novo_w - vl_reapresentacao_w;
					vl_reapresentacao_w	:= 0;
					if (vl_glosa_indevida_w >= vl_recebido_novo_w )then
						vl_glosa_indevida_w	:= vl_glosa_indevida_w - vl_recebido_novo_w;
					else
						vl_recebido_novo_w	:= vl_recebido_novo_w - vl_glosa_indevida_w;
						vl_glosa_indevida_w 	:= 0;
					end if;
				end if;
			end if;
		end if;
		if (ie_acao_w = 2) then
			vl_reapresentacao_w		:= vl_reapresentacao_w + vl_historico_w;
			vl_pendente_w			:= vl_pendente_w - vl_historico_w;
		end if;
		if (ie_acao_w = 3) then
			vl_glosa_devida_w		:= vl_glosa_devida_w + vl_historico_w;
			vl_glosa_devida_novo_w 		:= vl_historico_w;
			if (vl_pendente_w >= vl_glosa_devida_novo_w) then
				vl_pendente_w 		:= vl_pendente_w - vl_glosa_devida_novo_w;
				vl_glosa_devida_novo_w 	:= 0;
			else
				vl_glosa_devida_novo_w 	:= vl_glosa_devida_novo_w - vl_pendente_w;
				vl_pendente_w 		:= 0;
				if (vl_reapresentacao_w >= vl_glosa_devida_novo_w) then
					vl_reapresentacao_w	:= vl_reapresentacao_w - vl_glosa_devida_novo_w;
					vl_glosa_devida_novo_w	:= 0;
				else
					vl_glosa_devida_novo_w	:= vl_glosa_devida_novo_w - vl_reapresentacao_w;
					vl_reapresentacao_w	:= 0;
					if (vl_glosa_indevida_w >= vl_glosa_devida_novo_w )then
						vl_glosa_indevida_w	:= vl_glosa_indevida_w - vl_glosa_devida_novo_w;
					else
						vl_glosa_devida_novo_w	:= vl_glosa_devida_novo_w - vl_glosa_indevida_w;
						vl_glosa_indevida_w 	:= 0;
					end if;
				end if;
			end if;
		end if;
		if (ie_acao_w = 4) then
			vl_glosa_indevida_w			:= vl_glosa_indevida_w + vl_historico_w;
			vl_glosa_indevida_novo_w 		:= vl_historico_w;
			if (vl_pendente_w >= vl_glosa_indevida_novo_w) then
				vl_pendente_w 			:= vl_pendente_w - vl_glosa_indevida_novo_w;
				vl_glosa_indevida_novo_w 	:= 0;
			else
				vl_glosa_indevida_novo_w	:= vl_glosa_devida_novo_w - vl_pendente_w;
				vl_pendente_w 			:= 0;
				if (vl_reapresentacao_w >= vl_glosa_indevida_novo_w) then
					vl_reapresentacao_w	:= vl_reapresentacao_w - vl_glosa_devida_novo_w;
					vl_glosa_indevida_novo_w:= 0;
				else
					vl_glosa_indevida_novo_w	:= vl_glosa_indevida_novo_w - vl_reapresentacao_w;
					vl_reapresentacao_w		:= 0;
				end if;
			end if;
		end if;
		if (ie_acao_w = 5) then
			vl_pendente_w 	:= vl_pendente_w + vl_historico_w;
			if (vl_recebido_w > vl_historico_w) then
				vl_recebido_w	:= vl_recebido_w - vl_historico_w;
			else
				vl_historico_w	:= vl_historico_w - vl_recebido_w;
				vl_recebido_w	:= 0;
				vl_inicial_w	:= vl_inicial_w + vl_historico_w;
				vl_historico_w	:= 0;
			end if;
		end if;
	end loop;
	close c02;

	vl_diferenca_w	:= (vl_pendente_w + vl_glosa_devida_w + vl_glosa_indevida_w + vl_reapresentacao_w + vl_nao_auditado_w + vl_recebido_w) - vl_inicial_w;

	if (vl_inicial_w <> vl_pendente_w + vl_glosa_devida_w + vl_glosa_indevida_w + vl_reapresentacao_w + vl_nao_auditado_w + vl_recebido_w) then
		open c03;
		loop
		fetch c03 into
			nr_sequencia_hist_w,
			dt_historico_w,
			vl_historico_c03_w,
			dt_atualizacao_w,
			nm_usuario_w,
			nr_seq_conpaci_ret_w,
			nr_seq_hist_audit_w,
			nr_seq_ret_item_w,
			ds_observacao_w,
			nr_seq_lote_audit_w,
			dt_reapresentacao_w,
			dt_receb_prev_w,
			cd_motivo_glosa_w,
			cd_processo_receb_w,
			nr_seq_lote_recurso_w,
			dt_atualizacao_nrec_w,
			nm_usuario_nrec_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		vl_glosa_w	:= 0;
		select	coalesce(sum(vl_glosa),0)
		into STRICT	vl_glosa_w
		from 	convenio_retorno_glosa
		where	nr_seq_conpaci_ret_hist = nr_sequencia_hist_w;
		vl_diferenca_w 	:= vl_diferenca_w - vl_historico_c03_w;
		if	((coalesce(nr_seq_lote_audit_w::text, '') = '') and (vl_glosa_w = 0)) then
			if (vl_diferenca_w = 0) then
				ie_opcao_w := 1;
			/*	insert	into baca_historicos_auditoria
				values	(
					nr_sequencia_hist_w,
					dt_historico_w,
					vl_historico_c03_w,
					dt_atualizacao_w,
					nm_usuario_w,
					nr_seq_conpaci_ret_w,
					nr_seq_hist_audit_w,
					nr_seq_ret_item_w,
					ds_observacao_w,
					nr_seq_lote_audit_w,
					dt_reapresentacao_w,
					dt_receb_prev_w,
					cd_motivo_glosa_w,
					cd_processo_receb_w,
					nr_seq_lote_recurso_w,
					dt_atualizacao_nrec_w,
					nm_usuario_nrec_w,
					ie_opcao_w
					);			Retirar quando executar o baca */
				delete	FROM conta_paciente_ret_hist
				where	nr_seq_hist_audit	= nr_sequencia_p
				and	nr_sequencia		= nr_sequencia_hist_w
				and	nr_seq_conpaci_ret	= nr_sequencia_w;
				exit;
			else
				ie_opcao_w := 0;
		/*		insert	into baca_historicos_auditoria
				values	(
					nr_sequencia_hist_w,
					dt_historico_w,
					vl_historico_c03_w,
					dt_atualizacao_w,
					nm_usuario_w,
					nr_seq_conpaci_ret_w,
					nr_seq_hist_audit_w,
					nr_seq_ret_item_w,
					ds_observacao_w,
					nr_seq_lote_audit_w,
					dt_reapresentacao_w,
					dt_receb_prev_w,
					cd_motivo_glosa_w,
					cd_processo_receb_w,
					nr_seq_lote_recurso_w,
					dt_atualizacao_nrec_w,
					nm_usuario_nrec_w,
					ie_opcao_w
					); 			Retirar quando executar o baca */
			end if;
		end if;
		end loop;
		close c03;
	end if;
/*	delete	conta_paciente_ret_hist
	where	nr_sequencia in (select nr_sequencia
				from 	baca_historicos_auditoria
				where 	ie_opcao 		= 0
				and	nr_seq_conpaci_ret	= nr_sequencia_w)
	and	nr_seq_conpaci_ret	= nr_sequencia_w;	Retirar quando executar o baca */
end loop;
close c01;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_elimina_hist_audit (nr_sequencia_p bigint) FROM PUBLIC;

