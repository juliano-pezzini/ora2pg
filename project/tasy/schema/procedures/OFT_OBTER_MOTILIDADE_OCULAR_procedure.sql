-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_obter_motilidade_ocular ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, cd_pessoa_fisica_p text, ie_opcao_p text, vListaMotilidade INOUT strRecTypeFormOft) AS $body$
DECLARE


dt_exame_w					oft_motilidade_ocular.dt_exame%type;
ds_observacao_w			oft_motilidade_ocular.ds_observacao%type;
vl_od_sup_esq_w			oft_motilidade_ocular.vl_od_sup_esq%type;
vl_od_sup_dir_w			oft_motilidade_ocular.vl_od_sup_dir%type;
vl_od_centro_esq_w		oft_motilidade_ocular.vl_od_centro_esq%type;
vl_od_centro_dir_w		oft_motilidade_ocular.vl_od_centro_dir%type;
vl_od_inferior_esq_w		oft_motilidade_ocular.vl_od_inferior_esq%type;
vl_od_inferior_dir_w		oft_motilidade_ocular.vl_od_inferior_dir%type;
vl_oe_sup_esq_w			oft_motilidade_ocular.vl_oe_sup_esq%type;
vl_oe_sup_dir_w			oft_motilidade_ocular.vl_oe_sup_dir%type;
vl_oe_centro_esq_w		oft_motilidade_ocular.vl_oe_centro_esq%type;
vl_oe_centro_dir_w		oft_motilidade_ocular.vl_oe_centro_dir%type;
vl_oe_inferior_esq_w		oft_motilidade_ocular.vl_oe_inferior_esq%type;
vl_oe_inferior_dir_w		oft_motilidade_ocular.vl_oe_inferior_dir%type;
ie_aval_mov_ocular_w		oft_motilidade_ocular.ie_aval_mov_ocular%type;
ie_mov_sc_perto_w			oft_motilidade_ocular.ie_mov_sc_perto%type;
ie_mov_sc_longe_w			oft_motilidade_ocular.ie_mov_sc_longe%type;
ie_mov_sc_infra_w			oft_motilidade_ocular.ie_mov_sc_infra%type;
ie_mov_cc_perto_w			oft_motilidade_ocular.ie_mov_cc_perto%type;
ie_mov_cc_longe_w			oft_motilidade_ocular.ie_mov_cc_longe%type;
ie_mov_cc_infra_w			oft_motilidade_ocular.ie_mov_cc_infra%type;
ds_teste_prisma_w			oft_motilidade_ocular.ds_teste_prisma%type;
ds_fixacao_binocular_w	oft_motilidade_ocular.ds_fixacao_binocular%type;
ie_med_estrab_sv_w		oft_motilidade_ocular.ie_med_estrab_sv%type;	
ie_med_estrab_di_w		oft_motilidade_ocular.ie_med_estrab_di%type;
ie_med_estrab_dv_w		oft_motilidade_ocular.ie_med_estrab_dv%type;
ie_med_estrab_in_w		oft_motilidade_ocular.ie_med_estrab_in%type;
ie_med_estrab_lv_w		oft_motilidade_ocular.ie_med_estrab_lv%type;
ie_med_estrab_li_w		oft_motilidade_ocular.ie_med_estrab_li%type;
ie_med_estrab_oh_w		oft_motilidade_ocular.ie_med_estrab_oh%type;
ds_mosca_w					oft_motilidade_ocular.ds_mosca%type;
ds_circulos_w				oft_motilidade_ocular.ds_circulos%type;
ds_bichos_w					oft_motilidade_ocular.ds_bichos%type;
ds_cores_w					oft_motilidade_ocular.ds_cores%type;
ds_contuda_w				oft_motilidade_ocular.ds_contuda%type;
ds_titmos_w					oft_motilidade_ocular.ds_titmos%type;
cd_profissional_w			oft_motilidade_ocular.cd_profissional%TYPE;
ie_preferencia_w        oft_motilidade_ocular.ie_preferencia%TYPE;
dt_liberacao_w				timestamp;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;
nm_usuario_w				usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
ds_erro_w					varchar(4000);

motilidade_ocular_form CURSOR FOR
	SELECT	a.*
	from		oft_motilidade_ocular a,
				oft_consulta_formulario b
	where		a.nr_seq_consulta_form 	=	b.nr_sequencia
	and		a.nr_seq_consulta_form 	=	nr_seq_consulta_form_p
	and		a.nr_seq_consulta			=	nr_seq_consulta_p
	and		((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') or (a.nm_usuario = nm_usuario_w))
	and		((coalesce(a.dt_inativacao::text, '') = '') or (b.dt_inativacao IS NOT NULL AND b.dt_inativacao::text <> ''))
	order by dt_exame;
	
motilidade_ocular_paciente CURSOR FOR
	SELECT	a.*
	from		oft_motilidade_ocular a,
				oft_consulta b
	where		a.nr_seq_consulta		=	b.nr_sequencia
	and		b.cd_pessoa_fisica	=	cd_pessoa_fisica_p
	and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and		coalesce(a.dt_inativacao::text, '') = ''
	and		b.nr_sequencia 		<> nr_seq_consulta_p
	order by dt_exame;
	
											
BEGIN
begin

if (coalesce(nr_seq_consulta_p,0) > 0) and (vListaMotilidade.count > 0) then
	if (ie_opcao_p = 'F') then
		FOR c_motilidade_ocular IN motilidade_ocular_form LOOP
			begin
			dt_exame_w					:= c_motilidade_ocular.dt_exame;
			ds_observacao_w			:= c_motilidade_ocular.ds_observacao;
			vl_od_sup_esq_w			:= c_motilidade_ocular.vl_od_sup_esq;
			vl_od_sup_dir_w			:= c_motilidade_ocular.vl_od_sup_dir;
			vl_od_centro_esq_w		:= c_motilidade_ocular.vl_od_centro_esq;
			vl_od_centro_dir_w		:= c_motilidade_ocular.vl_od_centro_dir;
			vl_od_inferior_esq_w		:= c_motilidade_ocular.vl_od_inferior_esq;
			vl_od_inferior_dir_w		:= c_motilidade_ocular.vl_od_inferior_dir;
			vl_oe_sup_esq_w			:= c_motilidade_ocular.vl_oe_sup_esq;
			vl_oe_sup_dir_w			:= c_motilidade_ocular.vl_oe_sup_dir;
			vl_oe_centro_esq_w		:= c_motilidade_ocular.vl_oe_centro_esq;
			vl_oe_centro_dir_w		:= c_motilidade_ocular.vl_oe_centro_dir;
			vl_oe_inferior_esq_w		:= c_motilidade_ocular.vl_oe_inferior_esq;
			vl_oe_inferior_dir_w		:= c_motilidade_ocular.vl_oe_inferior_dir;
			ie_aval_mov_ocular_w		:= c_motilidade_ocular.ie_aval_mov_ocular;
			ie_mov_sc_perto_w			:= c_motilidade_ocular.ie_mov_sc_perto;
			ie_mov_sc_longe_w			:= c_motilidade_ocular.ie_mov_sc_longe;
			ie_mov_sc_infra_w			:= c_motilidade_ocular.ie_mov_sc_infra;
			ie_mov_cc_perto_w			:= c_motilidade_ocular.ie_mov_cc_perto;
			ie_mov_cc_longe_w			:= c_motilidade_ocular.ie_mov_cc_longe;
			ie_mov_cc_infra_w			:= c_motilidade_ocular.ie_mov_cc_infra;
			ds_teste_prisma_w			:= c_motilidade_ocular.ds_teste_prisma;
			ds_fixacao_binocular_w	:= c_motilidade_ocular.ds_fixacao_binocular;
			ie_med_estrab_sv_w		:= c_motilidade_ocular.ie_med_estrab_sv;	
			ie_med_estrab_di_w		:= c_motilidade_ocular.ie_med_estrab_di;
			ie_med_estrab_dv_w		:= c_motilidade_ocular.ie_med_estrab_dv;
			ie_med_estrab_in_w		:= c_motilidade_ocular.ie_med_estrab_in;
			ie_med_estrab_lv_w		:= c_motilidade_ocular.ie_med_estrab_lv;
			ie_med_estrab_li_w		:= c_motilidade_ocular.ie_med_estrab_li;
			ie_med_estrab_oh_w		:= c_motilidade_ocular.ie_med_estrab_oh;
			ds_mosca_w					:= c_motilidade_ocular.ds_mosca;
			ds_circulos_w				:= c_motilidade_ocular.ds_circulos;
			ds_bichos_w					:= c_motilidade_ocular.ds_bichos;
			ds_cores_w					:= c_motilidade_ocular.ds_cores;
			ds_contuda_w				:= c_motilidade_ocular.ds_contuda;
			ds_titmos_w					:= c_motilidade_ocular.ds_titmos;
			dt_liberacao_w				:=	c_motilidade_ocular.dt_liberacao;
			cd_profissional_w			:=	c_motilidade_ocular.cd_profissional;
         ie_preferencia_w        := c_motilidade_ocular.ie_preferencia;
			end;
		end loop;	
	else
		FOR c_motilidade_ocular IN motilidade_ocular_paciente LOOP
			begin
			ds_observacao_w			:= c_motilidade_ocular.ds_observacao;
			vl_od_sup_esq_w			:= c_motilidade_ocular.vl_od_sup_esq;
			vl_od_sup_dir_w			:= c_motilidade_ocular.vl_od_sup_dir;
			vl_od_centro_esq_w		:= c_motilidade_ocular.vl_od_centro_esq;
			vl_od_centro_dir_w		:= c_motilidade_ocular.vl_od_centro_dir;
			vl_od_inferior_esq_w		:= c_motilidade_ocular.vl_od_inferior_esq;
			vl_od_inferior_dir_w		:= c_motilidade_ocular.vl_od_inferior_dir;
			vl_oe_sup_esq_w			:= c_motilidade_ocular.vl_oe_sup_esq;
			vl_oe_sup_dir_w			:= c_motilidade_ocular.vl_oe_sup_dir;
			vl_oe_centro_esq_w		:= c_motilidade_ocular.vl_oe_centro_esq;
			vl_oe_centro_dir_w		:= c_motilidade_ocular.vl_oe_centro_dir;
			vl_oe_inferior_esq_w		:= c_motilidade_ocular.vl_oe_inferior_esq;
			vl_oe_inferior_dir_w		:= c_motilidade_ocular.vl_oe_inferior_dir;
			ie_aval_mov_ocular_w		:= c_motilidade_ocular.ie_aval_mov_ocular;
			ie_mov_sc_perto_w			:= c_motilidade_ocular.ie_mov_sc_perto;
			ie_mov_sc_longe_w			:= c_motilidade_ocular.ie_mov_sc_longe;
			ie_mov_sc_infra_w			:= c_motilidade_ocular.ie_mov_sc_infra;
			ie_mov_cc_perto_w			:= c_motilidade_ocular.ie_mov_cc_perto;
			ie_mov_cc_longe_w			:= c_motilidade_ocular.ie_mov_cc_longe;
			ie_mov_cc_infra_w			:= c_motilidade_ocular.ie_mov_cc_infra;
			ds_teste_prisma_w			:= c_motilidade_ocular.ds_teste_prisma;
			ds_fixacao_binocular_w	:= c_motilidade_ocular.ds_fixacao_binocular;
			ie_med_estrab_sv_w		:= c_motilidade_ocular.ie_med_estrab_sv;	
			ie_med_estrab_di_w		:= c_motilidade_ocular.ie_med_estrab_di;
			ie_med_estrab_dv_w		:= c_motilidade_ocular.ie_med_estrab_dv;
			ie_med_estrab_in_w		:= c_motilidade_ocular.ie_med_estrab_in;
			ie_med_estrab_lv_w		:= c_motilidade_ocular.ie_med_estrab_lv;
			ie_med_estrab_li_w		:= c_motilidade_ocular.ie_med_estrab_li;
			ie_med_estrab_oh_w		:= c_motilidade_ocular.ie_med_estrab_oh;
			ds_mosca_w					:= c_motilidade_ocular.ds_mosca;
			ds_circulos_w				:= c_motilidade_ocular.ds_circulos;
			ds_bichos_w					:= c_motilidade_ocular.ds_bichos;
			ds_cores_w					:= c_motilidade_ocular.ds_cores;
			ds_contuda_w				:= c_motilidade_ocular.ds_contuda;
			ds_titmos_w					:= c_motilidade_ocular.ds_titmos;
         ie_preferencia_w        := c_motilidade_ocular.ie_preferencia;
			cd_profissional_w			:=	obter_pf_usuario(nm_usuario_w,'C');
			dt_exame_w					:= clock_timestamp();
			end;
		end loop;	
	end if;
	
	for i in 1..vListaMotilidade.count loop
		begin
		if (ie_opcao_p = 'F') or (vListaMotilidade[i].ie_obter_resultado = 'S') then
			vListaMotilidade[i].dt_liberacao	:= dt_liberacao_w;
			case upper(vListaMotilidade[i].nm_campo)
				WHEN 'CD_PROFISSIONAL' THEN
					vListaMotilidade[i].ds_valor	:= cd_profissional_w;
				when 'DT_EXAME' then
					vListaMotilidade[i].dt_valor	:= dt_exame_w;
				when 'DS_OBSERVACAO' then
					vListaMotilidade[i].ds_valor	:=	ds_observacao_w;
				when 'VL_OD_SUP_ESQ' then
					vListaMotilidade[i].nr_valor	:= vl_od_sup_esq_w;
				when 'VL_OD_SUP_DIR' then
					vListaMotilidade[i].nr_valor	:= vl_od_sup_dir_w;
				when 'VL_OD_CENTRO_ESQ' then
					vListaMotilidade[i].nr_valor	:= vl_od_centro_esq_w;
				when 'VL_OD_CENTRO_DIR' then
					vListaMotilidade[i].nr_valor	:= vl_od_centro_dir_w;
				when 'VL_OD_INFERIOR_ESQ' then
					vListaMotilidade[i].nr_valor	:= vl_od_inferior_esq_w;
				when 'VL_OD_INFERIOR_DIR' then
					vListaMotilidade[i].nr_valor	:= vl_od_inferior_dir_w;
				when 'VL_OE_SUP_ESQ' then
					vListaMotilidade[i].nr_valor	:= vl_oe_sup_esq_w;
				when 'VL_OE_SUP_DIR' then
					vListaMotilidade[i].nr_valor	:= vl_oe_sup_dir_w;
				when 'VL_OE_CENTRO_ESQ' then
					vListaMotilidade[i].nr_valor	:= vl_oe_centro_esq_w;
				when 'VL_OE_CENTRO_DIR' then
					vListaMotilidade[i].nr_valor	:= vl_oe_centro_dir_w;
				when 'VL_OE_INFERIOR_ESQ' then
					vListaMotilidade[i].nr_valor	:= vl_oe_inferior_esq_w;
				when 'VL_OE_INFERIOR_DIR' then
					vListaMotilidade[i].nr_valor	:= vl_oe_inferior_dir_w;
				when 'IE_AVAL_MOV_OCULAR' then
					vListaMotilidade[i].ds_valor	:= ie_aval_mov_ocular_w;
				when 'IE_MOV_SC_PERTO' then
					vListaMotilidade[i].ds_valor	:= ie_mov_sc_perto_w;
				when 'IE_MOV_SC_LONGE' then
					vListaMotilidade[i].ds_valor	:= ie_mov_sc_longe_w;
				when 'IE_MOV_SC_INFRA' then
					vListaMotilidade[i].ds_valor	:= ie_mov_sc_infra_w;
				when 'IE_MOV_CC_PERTO' then
					vListaMotilidade[i].ds_valor	:= ie_mov_cc_perto_w;
				when 'IE_MOV_CC_LONGE' then
					vListaMotilidade[i].ds_valor	:= ie_mov_cc_longe_w;
				when 'IE_MOV_CC_INFRA' then
					vListaMotilidade[i].ds_valor	:= ie_mov_cc_infra_w;
				when 'DS_TESTE_PRISMA' then
					vListaMotilidade[i].ds_valor	:= ds_teste_prisma_w;
				when 'DS_FIXACAO_BINOCULAR' then
					vListaMotilidade[i].ds_valor	:= ds_fixacao_binocular_w;
				when 'IE_MED_ESTRAB_SV' then
					vListaMotilidade[i].ds_valor	:= ie_med_estrab_sv_w;
				when 'IE_MED_ESTRAB_DI' then
					vListaMotilidade[i].ds_valor	:= ie_med_estrab_di_w;
				when 'IE_MED_ESTRAB_DV' then
					vListaMotilidade[i].ds_valor	:= ie_med_estrab_dv_w;
				when 'IE_MED_ESTRAB_IN' then
					vListaMotilidade[i].ds_valor	:= ie_med_estrab_in_w;
				when 'IE_MED_ESTRAB_LV' then
					vListaMotilidade[i].ds_valor	:= ie_med_estrab_lv_w;
				when 'IE_MED_ESTRAB_LI' then
					vListaMotilidade[i].ds_valor	:= ie_med_estrab_li_w;
				when 'IE_MED_ESTRAB_OH' then
					vListaMotilidade[i].ds_valor	:= ie_med_estrab_oh_w;
				when 'DS_MOSCA' then
					vListaMotilidade[i].nr_valor	:= ds_mosca_w;
				when 'DS_CIRCULOS' then
					vListaMotilidade[i].nr_valor	:= ds_circulos_w;
				when 'DS_BICHOS' then
					vListaMotilidade[i].nr_valor	:= ds_bichos_w;
				when 'DS_CORES' then
					vListaMotilidade[i].ds_valor	:= ds_cores_w;
				when 'DS_CONTUDA' then
					vListaMotilidade[i].ds_valor	:= ds_contuda_w;
				when 'DS_TITMOS' then
					vListaMotilidade[i].ds_valor	:= ds_titmos_w;
            when 'IE_PREFERENCIA' then
					vListaMotilidade[i].ds_valor	:= ie_preferencia_w;
				else
					null;	
			end case;	
		end if;	
	end;
	end loop;
end if;	

exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_obter_motilidade_ocular ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, cd_pessoa_fisica_p text, ie_opcao_p text, vListaMotilidade INOUT strRecTypeFormOft) FROM PUBLIC;

