-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcula_nut_paciente_elemento ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_peso_w				double precision;
nr_sequencia_w			bigint;
nr_seq_elemento_w		bigint;
qt_elem_kg_dia_w		double precision;
qt_diaria_w				double precision;
pr_total_w				smallint;
qt_kcal_w				double precision;
ie_tipo_elemento_w		varchar(3);
qt_conversao_ml_w		double precision;
qt_volume_w				double precision;
nr_seq_elem_mat_w		bigint;
qt_fase_npt_w			bigint;
qt_vol_1_fase_w			double precision;
qt_vol_2_fase_w			double precision;
qt_vol_3_fase_w			double precision;
qt_vol_4_fase_w			double precision;
qt_volume_total_w		double precision;
qt_duracao_w			bigint;
nr_prescricao_w			bigint;
hr_prim_horario_w		varchar(20);
ie_usar_hrs_prescr_w		varchar(1);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.qt_elemento,
	b.ie_tipo_elemento
from	nut_elemento b,
	nut_paciente_elemento a
where	nr_seq_nut_pac	= nr_sequencia_p
and	a.nr_seq_elemento	= b.nr_sequencia;

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	qt_conversao_ml
from	nut_elem_material b,
	nut_pac_elem_mat a
where	a.nr_seq_nut_pac_ele	= nr_sequencia_w
and	a.nr_seq_elem_mat	= b.nr_sequencia
and	coalesce(b.ie_tipo,'NPT')	= 'NPT';


BEGIN

CALL Wheb_assist_pck.set_informacoes_usuario(obter_estabelecimento_ativo, obter_perfil_ativo, nm_usuario_p);

ie_usar_hrs_prescr_w	:= Wheb_assist_pck.obterParametroFuncao(924,856);

select	coalesce(max(qt_peso),0),
	coalesce(max(qt_fase_npt),0),
	max(nr_prescricao),
	max(hr_prim_horario)
into STRICT	qt_peso_w,
	qt_fase_npt_w,
	nr_prescricao_w,
	hr_prim_horario_w
from	nut_paciente
where	nr_sequencia	= nr_sequencia_p;

select	max(coalesce(nr_horas_validade,24))
into STRICT	qt_duracao_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_w;

--Se for S utuliza NR_HORAS_VALIDADE da PRESCR_MEDICA (OS 753355)
if (ie_usar_hrs_prescr_w = 'N') then
	qt_duracao_w	:= 24;
end if;

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	qt_elem_kg_dia_w,
	ie_tipo_elemento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	qt_diaria_w		:= qt_elem_kg_dia_w;

	open c02;
	loop
	fetch c02 into
		nr_seq_elem_mat_w,
		qt_conversao_ml_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		qt_volume_w	:= qt_diaria_w * qt_conversao_ml_w;

		qt_vol_1_fase_w	:= null;
		qt_vol_2_fase_w	:= null;
		qt_vol_3_fase_w	:= null;
		qt_vol_4_fase_w	:= null;

		if (qt_fase_npt_w > 0) then
			qt_vol_1_fase_w := dividir(qt_volume_w, qt_fase_npt_w);

			if (qt_fase_npt_w = 4) then
				qt_vol_2_fase_w := qt_vol_1_fase_w;
				qt_vol_3_fase_w := qt_vol_1_fase_w;
				qt_vol_4_fase_w := qt_vol_1_fase_w;
			elsif (qt_fase_npt_w = 3) then
				qt_vol_2_fase_w := qt_vol_1_fase_w;
				qt_vol_3_fase_w := qt_vol_1_fase_w;
			elsif (qt_fase_npt_w = 2) then
				qt_vol_2_fase_w := qt_vol_1_fase_w;
			end if;
		end if;

		update	nut_pac_elem_mat
		set		qt_volume	= qt_volume_w,
				qt_vol_1_fase = qt_vol_1_fase_w,
				qt_vol_2_fase = qt_vol_2_fase_w,
				qt_vol_3_fase = qt_vol_3_fase_w,
				qt_vol_4_fase = qt_vol_4_fase_w
		where	nr_sequencia	= nr_seq_elem_mat_w;
	end loop;
	close c02;
end loop;
close c01;

commit;

select	sum(qt_volume)
into STRICT	qt_volume_total_w
from	nut_paciente_elemento
where	nr_seq_nut_pac = nr_sequencia_p;

update	nut_paciente
set		qt_volume_total 	= qt_volume_total_w,
		qt_gotejamento_npt	= coalesce(round(qt_volume_total_w/qt_duracao_w),0)
where	nr_sequencia 		= nr_sequencia_p;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcula_nut_paciente_elemento ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

