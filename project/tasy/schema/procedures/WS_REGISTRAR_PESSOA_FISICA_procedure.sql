-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ws_registrar_pessoa_fisica ( cd_pessoa_fisica_ext_p text, nm_pessoa_fisica_p text, dt_nascimento_p timestamp, nr_cpf_p text, nr_identidade_p text, ie_sexo_p text, nr_ddd_celular_p text, nr_telefone_celular_p text, nr_seq_cor_pele_p bigint, cd_nacionalidade_p text, nr_cartao_nac_sus_p text, nm_usuario_p text, cd_pessoa_fisica_p INOUT text, cd_erro_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE


/*
0 - SUCESSO
1 - Dados não informados
	1.1 - Nome do paciente não informado
	1.2 - Data de nascimento não informado
2 - Dados inconsistentes
	2.1 - Código da cor do paciente não encontrado
	2.2 - Código da nacionalidade não encontrado
3 - Erro ao cadastrar o paciente
*/
ie_raca_cor_w			varchar(1);
ie_nacionalidade_w		varchar(1);
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;


BEGIN

cd_erro_p	:= 0;

if (coalesce(nm_pessoa_fisica_p::text, '') = '') then
	cd_erro_p	:=	1.1;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279621,null);
elsif (coalesce(dt_nascimento_p::text, '') = '') then
	cd_erro_p	:=	1.2;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279623,null);
end if;

if (cd_erro_p = 0) then

	select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_raca_cor_w
	from	cor_pele a
	where	nr_sequencia = nr_seq_cor_pele_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_nacionalidade_w
	from	nacionalidade a
	where	a.cd_nacionalidade = cd_nacionalidade_p;


	if (cd_erro_p = 0) and (nr_seq_cor_pele_p IS NOT NULL AND nr_seq_cor_pele_p::text <> '') and (ie_raca_cor_w = 'N') then
		cd_erro_p	:= 2.1;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(280041,null);
	elsif (cd_erro_p = 0) and (cd_nacionalidade_p IS NOT NULL AND cd_nacionalidade_p::text <> '') and (ie_nacionalidade_w = 'N') then
		cd_erro_p	:= 2.2;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(280042,null);
	end if;

	if (cd_erro_p = 0) then

		begin

		select	max(a.cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	pessoa_fisica a
		where	a.nr_identidade = nr_identidade_p
		and		a.nr_cpf = nr_cpf_p;

		if (coalesce(cd_pessoa_fisica_w::text, '') = '') then

			select	nextval('pessoa_fisica_seq')
			into STRICT	cd_pessoa_fisica_w
			;

			insert into pessoa_fisica(
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						dt_nascimento,
						ie_sexo,
						nr_ddd_celular,
						nr_telefone_celular,
						ie_revisar,
						nr_cpf,
						nr_identidade,
						ie_tipo_pessoa,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						nr_seq_cor_pele,
						cd_nacionalidade,
						nr_cartao_nac_sus)
					values (cd_pessoa_fisica_w,
						nm_pessoa_fisica_p,
						dt_nascimento_p,
						ie_sexo_p,
						nr_ddd_celular_p,
						nr_telefone_celular_p,
						'N',
						nr_cpf_p,
						nr_identidade_p,
						2,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_p,
						nm_usuario_p,
						nr_seq_cor_pele_p,
						cd_nacionalidade_p,
						nr_cartao_nac_sus_p);
		else

			update	pessoa_fisica
			set		nm_pessoa_fisica	= nm_pessoa_fisica_p,
					dt_nascimento       = dt_nascimento_p,
					ie_sexo             = ie_sexo_p,
					nr_ddd_celular      = nr_ddd_celular_p,
					nr_telefone_celular = nr_telefone_celular_p,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario          = nm_usuario_p,
					nr_seq_cor_pele     = nr_seq_cor_pele_p,
					cd_nacionalidade    = cd_nacionalidade_p,
					nr_cartao_nac_sus	= nr_cartao_nac_sus_p
			where	cd_pessoa_fisica 	= cd_pessoa_fisica_w;

		end if;

		commit;

		cd_pessoa_fisica_p	:= cd_pessoa_fisica_w;

		exception
		when others then
			cd_erro_p	:= 3;
			ds_erro_p	:= substr(sqlerrm,1,2000);
		end;

	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ws_registrar_pessoa_fisica ( cd_pessoa_fisica_ext_p text, nm_pessoa_fisica_p text, dt_nascimento_p timestamp, nr_cpf_p text, nr_identidade_p text, ie_sexo_p text, nr_ddd_celular_p text, nr_telefone_celular_p text, nr_seq_cor_pele_p bigint, cd_nacionalidade_p text, nr_cartao_nac_sus_p text, nm_usuario_p text, cd_pessoa_fisica_p INOUT text, cd_erro_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

