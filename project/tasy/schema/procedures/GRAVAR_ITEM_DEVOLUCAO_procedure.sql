-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_item_devolucao ( dt_alta_p timestamp, nr_atendimento_p bigint, nr_devolucao_p bigint, cd_material_p bigint, nr_prescricao_p bigint, nr_seq_prescricao_p bigint, dt_atendimento_p timestamp, dt_entrada_unidade_p timestamp, nr_seq_atendimento_p bigint, cd_unidade_medida_p text, cd_local_estoque_p bigint, cd_local_estoque_lok_p bigint, cd_setor_devolucao_p bigint, qt_material_p bigint, nr_seq_lote_p bigint, cd_setor_material_p bigint, nr_seq_justificativa_p bigint, cd_motivo_devolucao_p bigint, cd_motivo_dev_tela_p bigint, ie_tipo_baixa_estoque_p text, nr_seq_lote_fornec_p bigint, cd_cgc_fornec_p text, ie_geracao_p text, cd_pessoa_devolucao_p text, cd_pessoa_logada_p text, cd_tipo_baixa_p bigint, ie_erro_p INOUT text, nm_usuario_p text) AS $body$
DECLARE


nr_interno_conta_w		conta_paciente.nr_interno_conta%type;
ie_status_acerto_w		conta_paciente.ie_status_acerto%type;
nr_sequencia_w			item_devolucao_material_pac.nr_sequencia%type;
cd_local_estoque_w		local_estoque.cd_local_estoque%type;
cd_motivo_devolucao_w	item_devolucao_material_pac.cd_motivo_devolucao%type;
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;

ie_consiste_conta_fechada_w	varchar(1);
ie_permite_baixa_alta_w		varchar(1);
ie_obriga_motivo_dev_w		varchar(1);
ie_justificativa_w			varchar(1);
ie_setor_atendimento_w		varchar(1);

qt_min_devol_w				bigint;
cd_motivo_padrao_dev_w		bigint;
qt_existe_w					bigint;
ie_local_estoque_w			varchar(1);
dt_alta_w					timestamp;


BEGIN

ie_consiste_conta_fechada_w	:= coalesce(obter_valor_param_usuario(42, 91, Obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'S');
ie_permite_baixa_alta_w		:= coalesce(obter_valor_param_usuario(42, 5, Obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'S');
qt_min_devol_w				:= coalesce(obter_valor_param_usuario(42, 50, Obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 0);
ie_local_estoque_w			:= coalesce(obter_valor_param_usuario(42, 11, Obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'N');
cd_motivo_padrao_dev_w		:= obter_valor_param_usuario(42, 15, Obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_obriga_motivo_dev_w		:= coalesce(obter_valor_param_usuario(42, 33, Obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'N');
ie_setor_atendimento_w		:= coalesce(obter_valor_param_usuario(42, 26, Obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'N');
ie_justificativa_w			:= coalesce(obter_valor_param_usuario(42, 125, Obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'N');

select	max(nr_interno_conta)
into STRICT	nr_interno_conta_w
from	material_atend_paciente
where	nr_sequencia = nr_seq_atendimento_p;

select	max(ie_status_acerto)
into STRICT	ie_status_acerto_w
from	conta_paciente
where	nr_interno_conta = nr_interno_conta_w;

if (ie_consiste_conta_fechada_w = 'N') and (ie_status_acerto_w = 2) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(191276);
end if;

if (ie_permite_baixa_alta_w = 'S') and (qt_min_devol_w <> 0) and (dt_alta_p IS NOT NULL AND dt_alta_p::text <> '') then
	
	select (coalesce(dt_alta, clock_timestamp()) + qt_min_devol_w /1440)
	into STRICT	dt_alta_w
    from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	if (dt_alta_w < clock_timestamp()) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(159685);
	end if;
end if;

if (ie_local_estoque_w = 'S') then
	cd_local_estoque_w := cd_local_estoque_lok_p;
elsif (ie_local_estoque_w = 'T') then
	select	max(cd_local_estoque)
	into STRICT	cd_local_estoque_w
	from	setor_atendimento
	where	cd_setor_atendimento = cd_setor_devolucao_p;
elsif (ie_local_estoque_w = 'R') then
	cd_local_estoque_w := obter_regra_local_devolucao(cd_material_p, wheb_usuario_pck.get_cd_estabelecimento, cd_setor_devolucao_p);
else
	cd_local_estoque_w := cd_local_estoque_p;
end if;

if (cd_motivo_padrao_dev_w > 0) then
	cd_motivo_devolucao_w	:= cd_motivo_padrao_dev_w;
elsif (cd_motivo_padrao_dev_w = 0) then
	cd_motivo_devolucao_w	:= 1;
end if;

if (cd_motivo_padrao_dev_w > 0 and (cd_motivo_devolucao_p IS NOT NULL AND cd_motivo_devolucao_p::text <> '')) then
	cd_motivo_devolucao_w	:= cd_motivo_devolucao_p;
end if;

if (ie_obriga_motivo_dev_w = 'S') and (cd_motivo_dev_tela_p IS NOT NULL AND cd_motivo_dev_tela_p::text <> '') then
	cd_motivo_devolucao_w	:= cd_motivo_dev_tela_p;
end if;

if (ie_setor_atendimento_w = 'S') and (cd_setor_material_p > 0)then
	cd_setor_atendimento_w := cd_setor_material_p;
end if;

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_sequencia_w
from	item_devolucao_material_pac
where	nr_devolucao = nr_devolucao_p;

ie_erro_p := item_devol_paciente_before(nr_devolucao_p, nr_seq_atendimento_p, cd_tipo_baixa_p, cd_material_p, nr_seq_justificativa_p, nr_prescricao_p, nr_seq_prescricao_p, qt_material_p, nr_seq_lote_p, cd_pessoa_devolucao_p, cd_pessoa_logada_p, 'B', nm_usuario_p, nr_seq_lote_fornec_p, ie_erro_p);
	
if (ie_erro_p <> 'S') then

	insert into item_devolucao_material_pac(
			nr_devolucao,
			nr_sequencia,
			cd_material,
			dt_atendimento,
			cd_local_estoque,
			cd_unidade_medida,
			cd_motivo_devolucao,
			dt_atualizacao,
			nm_usuario_devol,
			qt_material,
			nr_prescricao,
			nr_sequencia_prescricao,
			ie_tipo_baixa_estoque,
			dt_entrada_unidade,
			nr_seq_atendimento,
			nr_seq_lote_fornec,
			cd_cgc_fornec,
			nm_usuario,
			cd_setor_atendimento,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_geracao,
			nr_seq_lote,
			nr_seq_justificativa)
		values (
			nr_devolucao_p,
			nr_sequencia_w,
			cd_material_p,
			dt_atendimento_p,
			cd_local_estoque_w,
			cd_unidade_medida_p,
			cd_motivo_devolucao_w,
			clock_timestamp(),
			nm_usuario_p,
			qt_material_p,
			CASE WHEN nr_prescricao_p=0 THEN  null  ELSE nr_prescricao_p END ,
			CASE WHEN nr_seq_prescricao_p=0 THEN  null  ELSE nr_seq_prescricao_p END ,
			ie_tipo_baixa_estoque_p,
			dt_entrada_unidade_p,
			nr_seq_atendimento_p,
			nr_seq_lote_fornec_p,
			cd_cgc_fornec_p,
			nm_usuario_p,
			cd_setor_atendimento_w,
			clock_timestamp(),
			nm_usuario_p,
			ie_geracao_p,
			nr_seq_lote_p,
			CASE WHEN ie_justificativa_w='S' THEN  nr_seq_justificativa_p  ELSE null END );
			
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_item_devolucao ( dt_alta_p timestamp, nr_atendimento_p bigint, nr_devolucao_p bigint, cd_material_p bigint, nr_prescricao_p bigint, nr_seq_prescricao_p bigint, dt_atendimento_p timestamp, dt_entrada_unidade_p timestamp, nr_seq_atendimento_p bigint, cd_unidade_medida_p text, cd_local_estoque_p bigint, cd_local_estoque_lok_p bigint, cd_setor_devolucao_p bigint, qt_material_p bigint, nr_seq_lote_p bigint, cd_setor_material_p bigint, nr_seq_justificativa_p bigint, cd_motivo_devolucao_p bigint, cd_motivo_dev_tela_p bigint, ie_tipo_baixa_estoque_p text, nr_seq_lote_fornec_p bigint, cd_cgc_fornec_p text, ie_geracao_p text, cd_pessoa_devolucao_p text, cd_pessoa_logada_p text, cd_tipo_baixa_p bigint, ie_erro_p INOUT text, nm_usuario_p text) FROM PUBLIC;

