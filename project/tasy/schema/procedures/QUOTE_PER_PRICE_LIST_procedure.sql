-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE quote_per_price_list ( nr_seq_cot_forn_p bigint, cd_tab_preco_mat_p bigint, pr_aumento_p bigint, pr_desconto_p bigint, dt_efetiva_final_p timestamp ) AS $body$
DECLARE


vl_preco_w		cot_compra_forn_item.vl_unitario_material%type;
cd_estabelecimento_w    estabelecimento.cd_estabelecimento%type;
dt_referencia_w		timestamp;
ie_tabela_global_w	tabela_preco_material.ie_tabela_global%type;

c_itens CURSOR FOR
	SELECT  a.nr_sequencia nr_cot_compra_fornec_item,
                a.cd_material,
                obter_material_global(a.cd_material,dt_referencia_w,cd_estabelecimento_w,null,null,null,null) cd_material_glo
        from    cot_compra_forn_item a,
                cot_compra_item b
        where	b.nr_cot_compra		= a.nr_cot_compra
        and	b.cd_material		= a.cd_material
        and	a.nr_seq_cot_forn	= nr_seq_cot_forn_p;

BEGIN

cd_estabelecimento_w    := wheb_usuario_pck.get_cd_estabelecimento;
dt_referencia_w		:= trunc(clock_timestamp());

select	coalesce(max(ie_tabela_global),'N')
into STRICT	ie_tabela_global_w
from	tabela_preco_material
where	cd_tab_preco_mat = cd_tab_preco_mat_p
and	cd_estabelecimento = cd_estabelecimento_w;


for c_itens_w in c_itens loop
        vl_preco_w      := null;
	
        if (c_itens_w.cd_material_glo IS NOT NULL AND c_itens_w.cd_material_glo::text <> '') and (ie_tabela_global_w = 'S') then
                select	max(a.vl_preco)
                into STRICT	vl_preco_w
                from	preco_material_global a
                where	a.cd_material_glo	= c_itens_w.cd_material_glo
                and	a.cd_tab_preco_mat	= cd_tab_preco_mat_p
		and     a.dt_inicio_vigencia <= dt_referencia_w
		and (a.dt_final_vigencia >= dt_referencia_w or coalesce(a.dt_final_vigencia::text, '') = '');

	elsif (ie_tabela_global_w	= 'N') then
	
		select	max(a.vl_preco_venda)
		into STRICT	vl_preco_w
		from	preco_material a
		where	a.cd_estabelecimento 	= cd_estabelecimento_w
		and	a.cd_material 		= c_itens_w.cd_material
		and	a.cd_tab_preco_mat	= cd_tab_preco_mat_p
		and	a.ie_situacao		= 'A'
		and	a.dt_inicio_vigencia <= dt_referencia_w
		and (a.dt_final_vigencia >= dt_referencia_w or coalesce(a.dt_final_vigencia::text, '') = '');
		
	end if;
	
	
	if (vl_preco_w IS NOT NULL AND vl_preco_w::text <> '') then
		if (pr_aumento_p	> 0) then
			vl_preco_w	:= vl_preco_w + (vl_preco_w * dividir(pr_aumento_p,100));
		end if;

		if (pr_desconto_p	> 0) then
			vl_preco_w	:= vl_preco_w - (vl_preco_w * dividir(pr_desconto_p,100));
		end if;
			
		update	cot_compra_forn_item
		set	vl_unitario_material	= vl_preco_w,
			dt_validade		= coalesce(dt_efetiva_final_p, dt_validade)
		where	nr_sequencia		= c_itens_w.nr_cot_compra_fornec_item;
	end if;
	
end loop;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE quote_per_price_list ( nr_seq_cot_forn_p bigint, cd_tab_preco_mat_p bigint, pr_aumento_p bigint, pr_desconto_p bigint, dt_efetiva_final_p timestamp ) FROM PUBLIC;

