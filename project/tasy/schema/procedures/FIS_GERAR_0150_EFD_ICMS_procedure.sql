-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_0150_efd_icms ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------

Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_regra_efd_w		fis_efd_controle.nr_sequencia%type;
cd_municipio_ibge_w		varchar(7);
nr_cnpj_w 			pessoa_juridica.cd_cgc%type;
nr_cpf_w			pessoa_fisica.nr_cpf%type;
nr_inscricao_estadual_w		pessoa_juridica.nr_inscricao_estadual%type;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
tp_registro_w			varchar(4);
sep_w				varchar(1)	:= ds_separador_p;
nr_linha_w			bigint 	:= qt_linha_p;
nr_seq_registro_w		bigint 	:= nr_sequencia_p;
dt_fim_w			timestamp;
qt_regra_1600_w			smallint;

c01 CURSOR FOR
	--nota de entrada pega o cd_cgc_emitente
	SELECT	distinct '0150' tp_registro,
		d.cd_cgc cd_participante,
		trim(both substr(obter_dados_pf_pj(null, d.cd_cgc, 'N'), 1, 80)) nm_participante,
		coalesce(p.cd_bacen, '1058') cd_pais,
		d.cd_cgc nr_cnpj,
		'' nr_cpf,
		substr(CASE WHEN upper(d.nr_inscricao_estadual)='ISENTA' THEN  '' WHEN upper(d.nr_inscricao_estadual)='ISENTO' THEN  ''  ELSE elimina_caractere_especial(d.nr_inscricao_estadual) END , 1, 14) nr_inscricao_estadual,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'UF'),1,255) sg_uf,
		substr(nfe_obter_dados_pj(d.cd_cgc, 'IBGE'),1,7) cd_municipio_ibge,
		'' nr_suframa,
		trim(both substr(obter_dados_pf_pj(null, d.cd_cgc, 'R'),1,60)) ds_endereco,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'NR'),1,255) nr_endereco,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'CO'),1,255) ds_complemento,
		substr(obter_dados_pf_pj(null, d.cd_cgc, 'B'),1,255) ds_bairro
	FROM pessoa_juridica d
LEFT OUTER JOIN pais p ON (d.nr_seq_pais = p.nr_sequencia)
WHERE d.cd_cgc in	(SELECT	b.cd_cgc cd_participante
				from	bandeira_cartao_cr	b,
					movto_cartao_cr		a
				where	b.nr_sequencia	= a.nr_seq_bandeira
				and	coalesce(a.dt_cancelamento::text, '') = ''
				and	qt_regra_1600_w = 1
				and	a.dt_transacao between dt_inicio_p and dt_fim_w
				group by b.cd_cgc
				
union

				select	CASE WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='E' THEN  coalesce(a.cd_cgc_emitente, a.cd_pessoa_fisica)  ELSE cd_cgc END  cd_participante
				FROM operacao_nota b, modelo_nota_fiscal m
LEFT OUTER JOIN nota_fiscal a ON (m.nr_sequencia = a.nr_seq_modelo)
WHERE a.cd_estabelecimento	= cd_estabelecimento_p and b.ie_servico		= 'N' and a.ie_situacao		= 1 and a.cd_operacao_nf	= b.cd_operacao_nf and m.nr_sequencia in (select	nr_seq_modelo_nf
								from	fis_regra_efd_c100
								where 	nr_seq_regra_efd	= nr_seq_regra_efd_w) and (a.dt_entrada_saida between dt_inicio_p and dt_fim_w)
				
union

				select	CASE WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='E' THEN  coalesce(a.cd_cgc_emitente, a.cd_pessoa_fisica)  ELSE cd_cgc END  cd_participante
				FROM operacao_nota b, modelo_nota_fiscal m
LEFT OUTER JOIN nota_fiscal a ON (m.nr_sequencia = a.nr_seq_modelo)
WHERE a.cd_operacao_nf	= b.cd_operacao_nf and b.ie_servico		= 'N' and a.ie_situacao		= 1 and a.cd_estabelecimento	= cd_estabelecimento_p and m.nr_sequencia in (select nr_seq_modelo_nf
								from	fis_regra_efd_c500
								where 	nr_seq_regra_efd	= nr_seq_regra_efd_w) and (((Obter_se_nota_entrada_saida(a.nr_sequencia) = 'E') and (a.dt_entrada_saida between dt_inicio_p and dt_fim_w)) or  --nota de entrada
					((Obter_se_nota_entrada_saida(a.nr_sequencia) = 'S') and (a.dt_emissao between dt_inicio_p and dt_fim_w)))  --nota de saida
 
union

				select	CASE WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='E' THEN  coalesce(a.cd_cgc_emitente, a.cd_pessoa_fisica)  ELSE cd_cgc END  cd_participante
				FROM operacao_nota b, modelo_nota_fiscal m
LEFT OUTER JOIN nota_fiscal a ON (m.nr_sequencia = a.nr_seq_modelo)
WHERE a.cd_operacao_nf	= b.cd_operacao_nf and b.ie_servico		= 'N' and a.ie_situacao		= 1 and a.cd_estabelecimento	= cd_estabelecimento_p and m.nr_sequencia in (select nr_seq_modelo_nf
								from	fis_regra_efd_d100
								where 	nr_seq_regra_efd	= nr_seq_regra_efd_w) and (((Obter_se_nota_entrada_saida(a.nr_sequencia) = 'E') and (a.dt_entrada_saida between dt_inicio_p and dt_fim_w) ) or  --nota de entrada
					((Obter_se_nota_entrada_saida(a.nr_sequencia) = 'S') and (a.dt_emissao between dt_inicio_p and dt_fim_w)))  --nota de saida
 
union

				select	CASE WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='E' THEN  coalesce(a.cd_cgc_emitente, a.cd_pessoa_fisica)  ELSE cd_cgc END  cd_participante
				FROM operacao_nota b, modelo_nota_fiscal m
LEFT OUTER JOIN nota_fiscal a ON (m.nr_sequencia = a.nr_seq_modelo)
WHERE a.cd_operacao_nf	= b.cd_operacao_nf AND b.ie_servico		= 'N' and a.ie_situacao		= 1 and a.cd_estabelecimento	= cd_estabelecimento_p and m.nr_sequencia in (select nr_seq_modelo_nf
								from	fis_regra_efd_d500
								where 	nr_seq_regra_efd	= nr_seq_regra_efd_w) and (((Obter_se_nota_entrada_saida(a.nr_sequencia)= 'E') and (a.dt_entrada_saida between dt_inicio_p and dt_fim_w) ) or  --nota de entrada
					((Obter_se_nota_entrada_saida(a.nr_sequencia)= 'S') and (a.dt_emissao between dt_inicio_p and dt_fim_w))) )  --nota de saida
 
union

	--nota para pessoa física
	select	distinct '0150' tp_registro,
		d.cd_pessoa_fisica cd_participante,
		obter_nome_pf(d.cd_pessoa_fisica) nm_participante,
		coalesce(p.cd_bacen, '1058') cd_pais,
		'' nr_cnpj,
		d.nr_cpf,
		'' nr_inscricao_estadual,
		substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'UF'),1,255) sg_uf,
		substr(c.cd_municipio_ibge || substr(calcula_digito('MODULO10', c.cd_municipio_ibge),1,1),1,7) cd_municipio_ibge,
		'' nr_suframa,
		trim(both substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'R'),1,60)) ds_endereco,
		substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'NR'),1,255) nr_endereco,
		substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'CO'),1,255) ds_complemento,
		substr(obter_dados_pf_pj(d.cd_pessoa_fisica, null, 'B'),1,255) ds_bairro
	FROM pessoa_fisica d
LEFT OUTER JOIN pais p ON (d.nr_seq_pais = p.nr_sequencia)
LEFT OUTER JOIN compl_pessoa_fisica c ON (d.cd_pessoa_fisica = c.cd_pessoa_fisica)
WHERE c.ie_tipo_complemento = 1 and d.cd_pessoa_fisica in
			(select	CASE WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='E' THEN  coalesce(a.cd_cgc_emitente, a.cd_pessoa_fisica)  ELSE coalesce(cd_cgc,a.cd_pessoa_fisica) END  cd_participante
			FROM operacao_nota b, modelo_nota_fiscal m
LEFT OUTER JOIN nota_fiscal a ON (m.nr_sequencia = a.nr_seq_modelo)
WHERE a.cd_operacao_nf	= b.cd_operacao_nf and b.ie_servico		= 'N' and a.ie_situacao		= 1 and m.nr_sequencia in (select  nr_seq_modelo_nf
							from	fis_regra_efd_c100
							where 	nr_seq_regra_efd	= nr_seq_regra_efd_w) and a.cd_estabelecimento	= cd_estabelecimento_p and a.dt_entrada_saida between dt_inicio_p and dt_fim_w
			 
union

			select	CASE WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='E' THEN  coalesce(a.cd_cgc_emitente, a.cd_pessoa_fisica)  ELSE coalesce(cd_cgc,a.cd_pessoa_fisica) END  cd_participante
			FROM operacao_nota b, modelo_nota_fiscal m
LEFT OUTER JOIN nota_fiscal a ON (m.nr_sequencia = a.nr_seq_modelo)
WHERE a.cd_operacao_nf	= b.cd_operacao_nf and b.ie_servico		= 'N' and a.ie_situacao		= 1 and a.cd_estabelecimento	= cd_estabelecimento_p and m.nr_sequencia in (select nr_seq_modelo_nf
							from	fis_regra_efd_c500
							where 	nr_seq_regra_efd	= nr_seq_regra_efd_w) and (((Obter_se_nota_entrada_saida(a.nr_sequencia)= 'E') and (a.dt_entrada_saida between dt_inicio_p and dt_fim_w) ) or  --nota de entrada
				((Obter_se_nota_entrada_saida(a.nr_sequencia)= 'S') and (a.dt_emissao between dt_inicio_p and dt_fim_w)))  --nota de saida
 
union

			select	CASE WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='E' THEN  coalesce(a.cd_cgc_emitente, a.cd_pessoa_fisica)  ELSE coalesce(cd_cgc,a.cd_pessoa_fisica) END  cd_participante
			FROM operacao_nota b, modelo_nota_fiscal m
LEFT OUTER JOIN nota_fiscal a ON (m.nr_sequencia = a.nr_seq_modelo)
WHERE a.cd_operacao_nf	= b.cd_operacao_nf and b.ie_servico		= 'N' and a.ie_situacao		= 1 and a.cd_estabelecimento	= cd_estabelecimento_p and m.nr_sequencia in (select nr_seq_modelo_nf
							from	fis_regra_efd_d100
							where 	nr_seq_regra_efd	= nr_seq_regra_efd_w) and (((Obter_se_nota_entrada_saida(a.nr_sequencia)= 'E') and (a.dt_entrada_saida between dt_inicio_p and dt_fim_w) ) or  --nota de entrada
				((Obter_se_nota_entrada_saida(a.nr_sequencia)= 'S') and (a.dt_emissao between dt_inicio_p and dt_fim_w)))  --nota de saida
 
union

			select	CASE WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='E' THEN  coalesce(a.cd_cgc_emitente, a.cd_pessoa_fisica)  ELSE coalesce(cd_cgc,a.cd_pessoa_fisica) END  cd_participante
			FROM operacao_nota b, modelo_nota_fiscal m
LEFT OUTER JOIN nota_fiscal a ON (m.nr_sequencia = a.nr_seq_modelo)
WHERE a.cd_operacao_nf	= b.cd_operacao_nf and b.ie_servico		= 'N' and a.ie_situacao		= 1 and a.cd_estabelecimento	= cd_estabelecimento_p and m.nr_sequencia in (select nr_seq_modelo_nf
							from	fis_regra_efd_d500
							where 	nr_seq_regra_efd = nr_seq_regra_efd_w) and (((Obter_se_nota_entrada_saida(a.nr_sequencia)= 'E') and (a.dt_entrada_saida between dt_inicio_p and dt_fim_w)) or  --nota de entrada
				((Obter_se_nota_entrada_saida(a.nr_sequencia)= 'S') and (a.dt_emissao between dt_inicio_p and dt_fim_w))) ); --nota de saida
	
vet01	C01%RowType;


BEGIN
dt_fim_w	:= fim_dia(dt_fim_p); --coloca a hora junto ex: 01/01/2013 23:59:59
select	nr_seq_regra_efd
into STRICT	nr_seq_regra_efd_w
from	fis_efd_controle
where	nr_sequencia	= nr_seq_controle_p;


begin
select	1
into STRICT	qt_regra_1600_w
from	fis_regra_efd_reg
where	cd_registro = '1600'
and	ie_gerar = 'S'
and	nr_seq_regra_efd = nr_seq_regra_efd_w  LIMIT 1;
exception
when others then
	qt_regra_1600_w := 0;
end;

open C01;
loop
fetch C01 into	
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	cd_municipio_ibge_w	:= vet01.cd_municipio_ibge;
	
	if (cd_municipio_ibge_w = '0') then
		cd_municipio_ibge_w	:= '';
	end if;
	
	if (vet01.sg_uf = 'DF') then
		cd_municipio_ibge_w	:= '5300108';
	end if;
	
	if (vet01.cd_pais <> '1058') then
		nr_cnpj_w 		:= '';
		nr_cpf_w		:= '';
		nr_inscricao_estadual_w	:= '';
		cd_municipio_ibge_w	:= '';
	else
		nr_cnpj_w 		:= vet01.nr_cnpj;
		nr_cpf_w		:= vet01.nr_cpf;
		nr_inscricao_estadual_w	:= vet01.nr_inscricao_estadual;
		cd_municipio_ibge_w	:= cd_municipio_ibge_w;
	end if;
	
	ds_linha_w	:= substr(	sep_w || vet01.tp_registro	 	||
					sep_w || trim(both vet01.cd_participante)	||
					sep_w || trim(both vet01.nm_participante)	||
					sep_w || trim(both vet01.cd_pais)		||
					sep_w || trim(both nr_cnpj_w)		||
					sep_w || trim(both nr_cpf_w)			||
					sep_w || trim(both nr_inscricao_estadual_w)	||
					sep_w || trim(both cd_municipio_ibge_w) 	||
					sep_w || trim(both vet01.nr_suframa)		||
					sep_w || trim(both vet01.ds_endereco)	||
					sep_w || trim(both vet01.nr_endereco)	||
					sep_w || trim(both vet01.ds_complemento)	||
					sep_w || trim(both vet01.ds_bairro)		||
					sep_w,1,8000);
	
	
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_efd_arquivo(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_controle_efd,
		nr_linha,
		cd_registro,
		ds_arquivo,
		ds_arquivo_compl)
	values (	nr_seq_registro_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_controle_p,
		nr_linha_w,
		vet01.tp_registro,
		ds_arquivo_w,
		ds_arquivo_compl_w);
	end;
end loop;
close C01;
	
commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_0150_efd_icms ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

