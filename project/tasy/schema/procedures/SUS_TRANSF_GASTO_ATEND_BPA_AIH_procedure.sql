-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_transf_gasto_atend_bpa_aih ( nr_atend_origem_p bigint, nr_atend_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_proc_excl_ambul_w		varchar(1);
nr_seq_interno_novo_w		bigint;
dt_entrada_unidade_w		timestamp;
dt_entrada_w			timestamp;
ie_origem_proced_w		bigint;
cd_procedimento_w		bigint;
nr_sequencia_w			bigint;
ie_classificacao_w			varchar(5);
cd_cgc_prestador_w		varchar(14);
cd_medico_executor_w		varchar(10);
dt_procedimento_w			timestamp;
cd_setor_atendimento_w		integer;
cd_setor_atendimento_ww		integer;
ie_proc_incons_w			varchar(1);
ie_cons_proc_tipo_atend_w		varchar(1);
cd_estab_usuario_w		integer;
cd_convenio_w			bigint;
ie_gera_proc_w			varchar(1)	:= 'S';
ie_manter_setor_original_w		varchar(1)	:= 'N';
ie_transf_pronto_socorro_w		varchar(1)	:= 'N';

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_procedimento,
	a.ie_origem_proced,
	b.ie_classificacao,
	a.cd_cgc_prestador,
	a.cd_medico_executor,
	a.dt_procedimento,
	a.cd_setor_atendimento,
	c.cd_convenio_parametro
from	procedimento b,
	procedimento_paciente a,
	conta_paciente c
where	a.nr_atendimento	= nr_atend_origem_p
and	a.nr_interno_conta	= c.nr_interno_conta
and	c.ie_status_acerto	= 1
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	(((ie_proc_excl_ambul_w = 'S') and not exists (	select	1
							from	sus_regra_proc_troc_atend x
							where	x.cd_procedimento 	= a.cd_procedimento
							and	x.ie_origem_proced 	= a.ie_origem_proced
							and	x.ie_situacao		= 'A')) or (ie_proc_excl_ambul_w = 'N'))
order by a.dt_procedimento;


BEGIN

cd_estab_usuario_w	:= coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);

ie_proc_excl_ambul_w		:= coalesce(obter_valor_param_usuario(1125,38,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
ie_manter_setor_original_w	:= coalesce(obter_valor_param_usuario(1006,48,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
ie_cons_proc_tipo_atend_w	:= coalesce(obter_valor_param_usuario(1006,49,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
ie_transf_pronto_socorro_w	:= coalesce(obter_valor_param_usuario(1006,50,obter_perfil_ativo,nm_usuario_p,0),'N');

select	max(nr_seq_interno)
into STRICT	nr_seq_interno_novo_w
from	atend_paciente_unidade
where	nr_atendimento	= nr_atend_destino_p;

select	max(dt_entrada_unidade),
	max(cd_setor_atendimento)
into STRICT	dt_entrada_unidade_w,
	cd_setor_atendimento_w
from	atend_paciente_unidade
where	nr_seq_interno	= nr_seq_interno_novo_w;

select	max(dt_entrada)
into STRICT	dt_entrada_w
from	atendimento_paciente
where	nr_atendimento	= nr_atend_destino_p;

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_classificacao_w,
	cd_cgc_prestador_w,
	cd_medico_executor_w,
	dt_procedimento_w,
	cd_setor_atendimento_ww,
	cd_convenio_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	ie_gera_proc_w		:= obter_se_gera_proc_inter_bpa(cd_procedimento_w, ie_origem_proced_w);
	ie_proc_incons_w	:= sus_consiste_proced_atend(nr_atend_destino_p, cd_procedimento_w, ie_origem_proced_w);

	if	((ie_transf_pronto_socorro_w			= 'N') or (obter_classif_setor(cd_setor_atendimento_ww)	<> 1)) and (ie_gera_proc_w	= 'S') and
		((ie_cons_proc_tipo_atend_w	= 'N') or
		(ie_cons_proc_tipo_atend_w	= 'S' AND ie_proc_incons_w	= 'S')) then
		begin

		if (dt_procedimento_w 	< dt_entrada_w) then
			dt_procedimento_w	:= dt_entrada_w;
		end if;

		if (ie_manter_setor_original_w	= 'S')	then
			begin
			update	procedimento_paciente
			set	dt_procedimento	= dt_procedimento_w
			where	nr_sequencia	= nr_sequencia_w;

			CALL transferir_gasto_atendimento(	nr_sequencia_w,
						1,
						nr_atend_destino_p,
						'N',
						'S',
						nm_usuario_p);
			end;
		else
			begin

			update	procedimento_paciente
			set	nr_atendimento		= nr_atend_destino_p,
				nr_interno_conta	 = NULL,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_atepacu		= nr_seq_interno_novo_w,
				cd_setor_atendimento	= cd_setor_atendimento_w,
				dt_entrada_unidade	= dt_entrada_unidade_w,
				dt_procedimento		= dt_procedimento_w
			where	nr_sequencia		= nr_sequencia_w;

			if (ie_classificacao_w = 1) or (ie_classificacao_w = 3) then
				CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
			elsif (ie_classificacao_w = 2) then
				CALL atualiza_preco_servico(nr_sequencia_w, nm_usuario_p);
			end if;

			/* transferir prescr_medica */

			update	prescr_medica
			set	nr_atendimento	= nr_atend_destino_p
			where	nr_atendimento	= nr_atend_origem_p
			and	nr_prescricao 	= (	SELECT 	nr_prescricao
							from 	procedimento_paciente
							where	nr_atendimento = nr_atend_destino_p
							and	nr_sequencia = nr_sequencia_w);

			end;
		end if;

		end;
	end if;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_transf_gasto_atend_bpa_aih ( nr_atend_origem_p bigint, nr_atend_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

