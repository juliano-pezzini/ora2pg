-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adep_gerar_necessidade_disp ( cd_perfil_p bigint, cd_estabelecimento_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, nr_etapa_sol_p bigint, nr_seq_horario_p bigint, nr_seq_motivo_p bigint, ie_tipo_item_p text, nm_usuario_p text) AS $body$
DECLARE


qt_total_dispensar_w	double precision;
qt_dispensar_hor_w	double precision;
nr_ocorrencia_w		double precision;
nr_prescricao_w		bigint;
nr_seq_classif_w	bigint;
nr_seq_horario_w	bigint;
nr_seq_hor_kit_w	bigint;
nr_seq_evento_w		bigint;
nr_seq_lote_w		bigint;
nr_atendimento_w	bigint;
nr_seq_material_w	integer;
cd_material_w		integer;
dt_horario_w		timestamp;
ie_hr_dose_especial_w	varchar(1):= 'N';
ie_aprazado_w		varchar(1);
ie_padronizado_w	varchar(1);
ie_urgente_w		varchar(1);
hr_turno_agora_w	varchar(15);
hr_final_turno_agora_w	varchar(15);
ie_agora_impressao_w	varchar(15);
ie_classif_nao_padrao_w	varchar(15);
ds_horario_w		varchar(15);
ie_classif_urgente_w	varchar(3);
qt_min_agora_w		bigint;
qt_min_especial_w	bigint;
nr_seq_turno_hor_ag_w	bigint;
qt_min_antes_atend_w	integer;
dt_inicio_prescr_w	timestamp;
dt_limite_agora_w	timestamp;
dt_limite_especial_w	timestamp;
dt_liberacao_w		timestamp;
cd_local_estoque_w	local_estoque.cd_local_estoque%type;
ie_define_agora_w	regra_tempo_disp.ie_define_agora%type;
nr_agrupamento_w	prescr_mat_hor.nr_agrupamento%type;
nr_seq_horario_2w	prescr_mat_hor.nr_sequencia%type;
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
nr_seq_turno_w		prescr_mat_hor.nr_seq_turno%type;
ds_erro_w			varchar(2000);
ie_acm_sn_w			varchar(1);
ie_regra_disp_w     prescr_material.ie_regra_disp%type;
nr_ocorrencia_dil_w	prescr_material.nr_ocorrencia%type;
qt_dispensar_hor_dil_w	prescr_mat_hor.qt_dispensar_hor%type;
nr_seq_mat_comp_w		prescr_mat_hor.nr_seq_material%type;
nr_seq_mat_dil_w		prescr_mat_hor.nr_seq_material%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(nr_seq_lote,0),
		dt_horario
	from	prescr_mat_hor
	where	nr_prescricao = nr_prescricao_p
	and	nr_seq_solucao = nr_seq_solucao_p
	and	nr_etapa_sol = nr_etapa_sol_p
	and	(nr_seq_lote IS NOT NULL AND nr_seq_lote::text <> '')
	and	coalesce(dt_suspensao::text, '') = '';

C02 CURSOR FOR
	SELECT	coalesce(x.qt_total_dispensar,0),
		coalesce(x.nr_ocorrencia,0),
		a.nr_sequencia
	from	prescr_mat_hor a,
		prescr_material x
	where	a.nr_prescricao = x.nr_prescricao
	and	a.nr_seq_material = x.nr_sequencia
	and	a.nr_prescricao = nr_prescricao_p
	and	a.nr_seq_solucao = nr_seq_solucao_p
	and	a.nr_etapa_sol = nr_etapa_sol_p
	and	coalesce(a.dt_suspensao::text, '') = '';
	
C03 CURSOR FOR
	SELECT	b.nr_sequencia
	from	prescr_material a,
		prescr_mat_hor b
	where	a.nr_prescricao = b.nr_prescricao
	and	a.nr_sequencia	= b.nr_seq_material
	and	a.nr_prescricao = nr_prescricao_w
	and (a.nr_seq_kit	= nr_seq_material_w or
		a.nr_seq_kit	= nr_seq_mat_comp_w or
		a.nr_seq_kit	= nr_seq_mat_dil_w)
	and	b.dt_horario	= dt_horario_w;
	
	
C04 CURSOR FOR 	-------    Medicamento Composto    -------
	SELECT	b.nr_sequencia,
			b.nr_seq_material
	from	prescr_material a,
		prescr_mat_hor b
	where	a.nr_prescricao = b.nr_prescricao
	and	a.nr_sequencia	= b.nr_seq_material
	and	a.nr_prescricao 	= nr_prescricao_w
	and	a.nr_agrupamento	= nr_agrupamento_w
	and	b.dt_horario	= dt_horario_w
	and	b.nr_sequencia	<> nr_seq_horario_w;
	
cDiluentes CURSOR FOR
	SELECT	b.nr_sequencia nr_seq_horario,
			a.nr_sequencia nr_seq_material,
			a.hr_dose_especial ie_hr_dose_especial,
			a.qt_total_dispensar qt_total_dispensar,
			a.nr_ocorrencia nr_ocorrencia,
			a.ie_regra_disp ie_regra_disp
	from	prescr_material a,
			prescr_mat_hor b
	where	a.nr_prescricao = b.nr_prescricao
	and		a.nr_sequencia	= b.nr_seq_material
	and		a.nr_prescricao = nr_prescricao_w
	and		b.nr_seq_superior	= nr_seq_material_w
	and		b.dt_horario	= dt_horario_w
	and		b.ie_agrupador in (3,7,9);
	
BEGIN
nr_seq_horario_w := nr_seq_horario_p;

select	coalesce(max(ie_forma_agora), 'N'),
	max(ie_classif_urgencia),
	coalesce(max(qt_min_agora),0),
	coalesce(max(qt_min_especial),0)
into STRICT	ie_agora_impressao_w,
	ie_classif_nao_padrao_w,
	qt_min_agora_w,
	qt_min_especial_w
from	parametros_farmacia
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_tipo_item_p = 'SOL') then	
	
	update	prescr_mat_hor
	set	ie_gerar_lote = 'S'
	where	nr_prescricao = nr_prescricao_p
	and	nr_seq_solucao = nr_seq_solucao_p
	and	nr_etapa_sol = nr_etapa_sol_p
	and	coalesce(dt_suspensao::text, '') = '';
	
	open C02;
	loop
	fetch C02 into
		qt_total_dispensar_w,
		nr_ocorrencia_w,
		nr_seq_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		if (qt_total_dispensar_w > 0) and (nr_ocorrencia_w IS NOT NULL AND nr_ocorrencia_w::text <> '') then
			
			qt_dispensar_hor_w := coalesce(dividir(qt_total_dispensar_w, nr_ocorrencia_w),0);
			
			if (qt_dispensar_hor_w > 0) then				
				update	prescr_mat_hor
				set	qt_dispensar_hor = qt_dispensar_hor_w
				where	nr_sequencia = nr_seq_horario_w;
			end if;
			
		end if;		
	end loop;
	close C02;

end if;

select	max(nr_prescricao),
	max(nr_seq_material),
	max(dt_horario),
	max(ds_horario),
	max(cd_material),
	max(nr_agrupamento),
	max(cd_local_estoque)
into STRICT	nr_prescricao_w,
	nr_seq_material_w,
	dt_horario_w,
	ds_horario_w,
	cd_material_w,
	nr_agrupamento_w,
	cd_local_estoque_w
from	prescr_mat_hor
where	nr_sequencia = nr_seq_horario_w;

select	max(nr_atendimento),
	max(cd_setor_atendimento),
	max(dt_inicio_prescr)
into STRICT	nr_atendimento_w,
	cd_setor_atendimento_w,
	dt_inicio_prescr_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_w;

if (ie_tipo_item_p in ('M', 'MAT', 'IA', 'IAH', 'S', 'SNE')) then
	select	coalesce(max(qt_total_dispensar),0),
		coalesce(max(nr_ocorrencia),0),
		CASE WHEN coalesce(max(hr_dose_especial),'N')='N' THEN 'N'  ELSE 'S' END ,
		coalesce(max(ie_urgencia),'N'),
		coalesce(max(dt_lib_material),clock_timestamp()),
		substr(max(obter_se_material_padronizado(cd_estabelecimento_p,cd_material)),1,1),
		coalesce(max(obter_se_acm_sn(ie_acm,ie_se_necessario)),'N'),
		CASE WHEN coalesce(max(ie_regra_disp),'S')='N' THEN 'N'  ELSE 'S' END
	into STRICT	qt_total_dispensar_w,
		nr_ocorrencia_w,
		ie_hr_dose_especial_w,
		ie_urgente_w,
		dt_liberacao_w,
		ie_padronizado_w,
		ie_acm_sn_w,
		ie_regra_disp_w
	from	prescr_material
	where	nr_prescricao = nr_prescricao_w
	and	nr_sequencia  = nr_seq_material_w;
	
	dt_limite_agora_w	:= dt_liberacao_w + qt_min_agora_w/1440;
	dt_limite_especial_w	:= dt_liberacao_w + qt_min_especial_w/1440;
	
	
	if (ie_agora_impressao_w = 'S') then
		nr_seq_turno_hor_ag_w	:= Obter_turno_horario_prescr(cd_estabelecimento_p,cd_setor_atendimento_w,to_char(dt_horario_w,'hh24:mi'),cd_local_estoque_w);
		
		select	max(to_char(b.hr_inicial,'hh24:mi')),
			max(to_char(b.hr_final,'hh24:mi'))
		into STRICT	hr_turno_agora_w,
			hr_final_turno_agora_w
		from	regra_turno_disp_param b,
			regra_turno_disp a
		where	a.nr_sequencia		= b.nr_seq_turno
		and	a.cd_estabelecimento	= cd_estabelecimento_p
		and	a.nr_sequencia		= nr_seq_turno_hor_ag_w
		and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0));
		
		select	coalesce(max(qt_min_antes_atend), 0),
			coalesce(max(ie_define_agora), 'N')
		into STRICT	qt_min_antes_atend_w,
			ie_define_agora_w
		from	regra_tempo_disp
		where	cd_estabelecimento = cd_estabelecimento_p
		and (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0))
		and	nr_seq_turno = nr_seq_turno_hor_ag_w
		and	ie_situacao = 'A';
		
		if (hr_turno_agora_w > hr_final_turno_agora_w) then
			if (to_char(dt_horario_w,'dd/mm/yyyy') > to_char(dt_inicio_prescr_w,'dd/mm/yyyy')) then
				dt_limite_agora_w := to_date(to_char(dt_horario_w-1,'dd/mm/yyyy')||' '||hr_turno_agora_w||':00','dd/mm/yyyy hh24:mi:ss') - (qt_min_antes_atend_w/1440);
			else
				dt_limite_agora_w := to_date(to_char(dt_horario_w,'dd/mm/yyyy')||' '||hr_turno_agora_w||':00','dd/mm/yyyy hh24:mi:ss') - (qt_min_antes_atend_w/1440);
			end if;
		else
			dt_limite_agora_w := to_date(to_char(dt_horario_w,'dd/mm/yyyy')||' '||hr_turno_agora_w||':00','dd/mm/yyyy hh24:mi:ss') - (qt_min_antes_atend_w/1440);
		end if;
	end if;
	
	if (coalesce(ie_classif_nao_padrao_w::text, '') = '') or (ie_padronizado_w = 'S') then
		begin
		ie_classif_urgente_w	:= 'N';
		
		if (dt_horario_w <= dt_limite_agora_w) or (ie_urgente_w = 'S') then
			ie_classif_urgente_w	:= 'A';
		elsif	((dt_limite_agora_w <= clock_timestamp()) and (ie_agora_impressao_w = 'S') and (ie_define_agora_w = 'N')) then
			ie_classif_urgente_w	:= 'A';
		elsif (ie_agora_impressao_w = 'S' and ie_define_agora_w = 'S') and
			(dt_horario_w <= (clock_timestamp() + (qt_min_antes_atend_w /1440))) then
			ie_classif_urgente_w	:= 'A';
		elsif (dt_horario_w <= dt_limite_especial_w) then
			ie_classif_urgente_w	:= 'E';
		end if;
		end;
	else
		ie_classif_urgente_w := ie_classif_nao_padrao_w;
	end if;
	
	update 	prescr_material
	set		cd_motivo_baixa	= 0,
			dt_baixa		 = NULL
	where 	nr_prescricao	= nr_prescricao_w
	and		nr_sequencia  	= nr_seq_material_w;
		
	CALL define_disp_prescr_mat_hor(nr_seq_horario_w, nr_prescricao_w, nr_seq_material_w, cd_perfil_p, nm_usuario_p);
	
	select	cd_local_estoque
	into STRICT	cd_local_estoque_w
	from	prescr_mat_hor
	where	nr_sequencia = nr_seq_horario_w;
	
	nr_seq_turno_w := Obter_turno_horario_prescr(cd_estabelecimento_p, cd_setor_atendimento_w, ds_horario_w, cd_local_estoque_w);

	open C03;
	loop
	fetch C03 into
		nr_seq_hor_kit_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		CALL Gerar_necessidade_disp_kit(cd_perfil_p, cd_estabelecimento_p, nr_seq_hor_kit_w, nr_seq_motivo_p, nm_usuario_p);
	end loop;
	close C03;
	
	open C04;
	loop
	fetch C04 into
		nr_seq_horario_2w,
		nr_seq_mat_comp_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		CALL Gerar_necessidade_disp_kit(cd_perfil_p, cd_estabelecimento_p, nr_seq_horario_2w, nr_seq_motivo_p, nm_usuario_p);
		for c03_w in c03 loop
			CALL Gerar_necessidade_disp_kit(cd_perfil_p, cd_estabelecimento_p, c03_w.nr_sequencia, nr_seq_motivo_p, nm_usuario_p);
		end loop;
	end loop;
	close C04;
	
	for cDiluentes_w in cDiluentes loop
		nr_ocorrencia_dil_w := cDiluentes_w.nr_ocorrencia;
		if (cDiluentes_w.qt_total_dispensar > 0) and (nr_ocorrencia_dil_w IS NOT NULL AND nr_ocorrencia_dil_w::text <> '') then	

			if (cDiluentes_w.ie_hr_dose_especial <> 'N') then
				nr_ocorrencia_dil_w  := nr_ocorrencia_dil_w + 1;
			end if;
			
			if (cDiluentes_w.ie_regra_disp = 'S') then
				qt_dispensar_hor_dil_w := ceil(dividir(cDiluentes_w.qt_total_dispensar,nr_ocorrencia_dil_w));
			else
				qt_dispensar_hor_dil_w := dividir(cDiluentes_w.qt_total_dispensar,nr_ocorrencia_dil_w);
			end if;
			
			if (qt_dispensar_hor_dil_w > 0) then				
				update	prescr_mat_hor
				set	    qt_dispensar_hor = qt_dispensar_hor_dil_w,
						ie_gerar_lote = 'S'
				where	nr_sequencia = cDiluentes_w.nr_seq_horario;				
			end if;
		end if;
		
		nr_seq_mat_dil_w := cDiluentes_w.nr_seq_material;

		for c03_w in c03 loop
			CALL Gerar_necessidade_disp_kit(cd_perfil_p, cd_estabelecimento_p, c03_w.nr_sequencia, nr_seq_motivo_p, nm_usuario_p);
		end loop;

	end loop;
	
	update	prescr_mat_hor
	set	cd_local_estoque = cd_local_estoque_w,
		ie_classif_urgente = ie_classif_urgente_w,
		nr_seq_turno = nr_seq_turno_w,
		ie_gerar_lote = 'S'
	where	nr_sequencia = nr_seq_horario_w;
	
	if (qt_total_dispensar_w > 0) and (nr_ocorrencia_w IS NOT NULL AND nr_ocorrencia_w::text <> '') then		
		
		if (ie_hr_dose_especial_w <> 'N') then
			nr_ocorrencia_w  := nr_ocorrencia_w + 1;
		end if;
		
		if (ie_regra_disp_w = 'S') then
			qt_dispensar_hor_w := ceil(dividir(qt_total_dispensar_w,nr_ocorrencia_w));
		else
			qt_dispensar_hor_w := dividir(qt_total_dispensar_w,nr_ocorrencia_w);
		end if;
		
		if (qt_dispensar_hor_w > 0) then				
			update	prescr_mat_hor
			set	    qt_dispensar_hor = qt_dispensar_hor_w
			where	nr_sequencia 	 = nr_seq_horario_w;				
		end if;		
	end if;
	
	commit;
	
	atualizar_classif_lote(nr_prescricao_w, cd_estabelecimento_p, nm_usuario_p);
	CALL define_disp_prescr_mat_hor(nr_seq_horario_w, nr_prescricao_w, nr_seq_material_w, cd_perfil_p, nm_usuario_p);
end if;
commit;

select	max(ie_aprazado)
into STRICT	ie_aprazado_w
from	prescr_mat_hor
where	nr_sequencia = nr_seq_horario_w;

if (coalesce(ie_aprazado_w,'N') = 'S') then
	CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_w, nr_seq_material_w, nr_seq_horario_w, 'S', nm_usuario_p, 'AIP');
else
	CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_w, 0, 0, 'N', nm_usuario_p, 'AGND');
end if;

if (ie_tipo_item_p in ('M', 'MAT', 'IA', 'IAH', 'S', 'SNE')) then
	
	select	coalesce(max(nr_seq_lote),0)
	into STRICT	nr_seq_lote_w
	from	prescr_mat_hor
	where	nr_sequencia = nr_seq_horario_w;
	
	if (nr_seq_lote_w > 0) then
		select	coalesce(max(nr_seq_classif),0)
		into STRICT	nr_seq_classif_w
		from	ap_lote
		where	nr_sequencia = nr_seq_lote_w;
		
		if (nr_seq_classif_w > 0) then
			update	prescr_mat_hor
			set	nr_seq_classif = nr_seq_classif_w
			where	nr_sequencia = nr_seq_horario_w;
		end if;		
	end if;
		
	if (ie_tipo_item_p <> 'SNE') then		
		
	    select	nextval('prescr_mat_alteracao_seq')
		into STRICT	nr_seq_evento_w
		;
		
		INSERT INTO prescr_mat_alteracao(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				nr_seq_prescricao,
				nr_seq_horario,
				dt_alteracao,
				cd_pessoa_fisica,
				ie_alteracao,
				ds_justificativa,
				ds_observacao,
				ie_tipo_item,
				dt_horario,
				nr_atendimento,
				cd_item,
				cd_medico_solic,
				ie_mostra_adep,
				nr_seq_assinatura,
				nr_seq_lote,
				cd_funcao,
				nr_seq_mot_lote_gedipa,
				ie_acm_sn)
			VALUES (nr_seq_evento_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_prescricao_w,
				nr_seq_material_w,
				nr_seq_horario_w,
				clock_timestamp(),
				obter_dados_usuario_opcao(nm_usuario_p,'C'),
				51,
				null,
				null,
				ie_tipo_item_p,
				dt_horario_w,
				nr_atendimento_w,
				cd_material_w,
				null,
				'S',
				null,
				nr_seq_lote_w,
				coalesce(obter_funcao_ativa,1113),
				nr_seq_motivo_p,
				ie_acm_sn_w);	
	else
	
	
		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_seq_evento_w
		;
	
	    insert into prescr_solucao_evento(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				nr_seq_solucao,
				nr_seq_material,		
				ie_forma_infusao,
				qt_volume_fase,	
				ie_tipo_dosagem,
				qt_dosagem,
				qt_vol_infundido,
				qt_vol_desprezado,
				cd_pessoa_fisica,
				ie_alteracao,
				dt_alteracao,
				ie_evento_valido,
				nr_seq_motivo,
				ds_observacao,
				ie_tipo_solucao,
				qt_volume_parcial,
				qt_tempo_infusao,
				nr_seq_lote,
				nr_seq_assinatura,
				ds_justificativa,
				dt_horario,
				nr_seq_mot_lote_gedipa,
				cd_funcao)
		values (
				nr_seq_evento_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_prescricao_w,
				null,
				nr_seq_material_w,
				null,
				null,		
				null,
				null,
				null,
				null,
				obter_dados_usuario_opcao(nm_usuario_p, 'C'),
				42,
				clock_timestamp(),
				'S',
				null,
				null,
				2,
				null,
				null,
				nr_seq_lote_w,
				null,
				null,
				dt_horario_w,
				nr_seq_motivo_p,
				coalesce(obter_funcao_ativa,1113));
		
		end if;	
				
elsif (ie_tipo_item_p = 'SOL') then
	open C01;
	loop
	fetch C01 into	
		nr_seq_horario_w,
		nr_seq_lote_w,
		dt_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		
		if (nr_seq_lote_w > 0) then
			select	coalesce(max(nr_seq_classif),0)
			into STRICT	nr_seq_classif_w
			from	ap_lote
			where	nr_sequencia = nr_seq_lote_w;
			
			if (nr_seq_classif_w > 0) then
				update	prescr_mat_hor
				set	nr_seq_classif = nr_seq_classif_w
				where	nr_sequencia = nr_seq_horario_w;
			end if;
		end if;
		
	end loop;
	close C01;
		
	select	nextval('prescr_solucao_evento_seq')
	into STRICT	nr_seq_evento_w
	;
	
	insert into prescr_solucao_evento(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_prescricao,
		nr_seq_solucao,
		nr_seq_material,		
		ie_forma_infusao,
		qt_volume_fase,
		ie_tipo_dosagem,
		qt_dosagem,
		qt_vol_infundido,
		qt_vol_desprezado,
		cd_pessoa_fisica,
		ie_alteracao,
		dt_alteracao,
		ie_evento_valido,
		nr_seq_motivo,
		ds_observacao,
		ie_tipo_solucao,
		qt_volume_parcial,
		qt_tempo_infusao,
		nr_seq_lote,
		nr_seq_assinatura,
		ds_justificativa,
		dt_horario,
		nr_seq_mot_lote_gedipa,
		cd_funcao)
	values (
		nr_seq_evento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_prescricao_p,
		nr_seq_solucao_p,
		null,
		null,
		null,		
		null,
		null,
		null,
		null,
		obter_dados_usuario_opcao(nm_usuario_p, 'C'),
		42,
		clock_timestamp(),
		'S',
		null,
		null,
		1,
		null,
		null,
		nr_seq_lote_w,
		null,
		null,
		dt_horario_w,
		nr_seq_motivo_p,
		coalesce(obter_funcao_ativa,1113));
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_necessidade_disp ( cd_perfil_p bigint, cd_estabelecimento_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, nr_etapa_sol_p bigint, nr_seq_horario_p bigint, nr_seq_motivo_p bigint, ie_tipo_item_p text, nm_usuario_p text) FROM PUBLIC;

