-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE t_pls_relat_relacionamento_row AS ( 
	nr_seq_grupo		pls_util_cta_pck.t_number_table, 
	ds_grupo_contrato	pls_util_cta_pck.t_varchar2_table_4000, 
	vl_custo_total		pls_util_cta_pck.t_number_table, 
	vl_receita_total	pls_util_cta_pck.t_number_table, 
	qt_beneficiarios	pls_util_cta_pck.t_number_table, 
	tx_resultado		pls_util_cta_pck.t_number_table, 
	dt_referencia		pls_util_cta_pck.t_date_table, 
	ie_tipo_relatorio	pls_util_cta_pck.t_varchar2_table_5 
   );


CREATE OR REPLACE PROCEDURE w_pls_relat_reaj_contratual ( nr_seq_grupo_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, qt_usuarios_inicial_p bigint, qt_usuarios_final_p bigint, dt_reajuste_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

			
nr_seq_grupo_w			bigint;
vl_custo_benef_w		double precision;
vl_total_custo_w		double precision;
tx_resultado_w			double precision;
vl_mensalidade_w		double precision;
vl_mensalidade_tot_w		double precision;
tx_administrativa_w		double precision;
qt_beneficiarios_w		integer;
qt_registros_w			integer	:= 0;
dt_final_w			timestamp;
t_pls_relat_relacionamento_w	t_pls_relat_relacionamento_row;

C06 CURSOR(	dt_inicial_pc 		timestamp, 
		dt_final_pc 		timestamp) FOR 
	SELECT	trunc(dt_mes,'Month') dt_inicial 
	from	mes_v 
	where	dt_mes between dt_inicial_pc and dt_final_pc;

C01 CURSOR(	nr_seq_grupo_pc 	pls_grupo_contrato.nr_sequencia%type, 
		dt_reajuste_pc		text) FOR 
	SELECT	a.nr_sequencia	nr_seq_grupo, 
		a.ds_grupo 
	from	pls_grupo_contrato	a 
	where	((a.nr_sequencia	= nr_seq_grupo_pc and (nr_seq_grupo_pc IS NOT NULL AND nr_seq_grupo_pc::text <> '')) or (coalesce(nr_seq_grupo_pc::text, '') = '')) 
	and (to_char(a.dt_reajuste, 'mm') = dt_reajuste_pc or dt_reajuste_pc = ' ') 
	and	a.ie_situacao		= 'A';

C02 CURSOR(	nr_seq_grupo_pc 	pls_grupo_contrato.nr_sequencia%type) FOR 
	SELECT	b.nr_sequencia nr_seq_segurado 
	from	pls_segurado		b, 
		pls_contrato		a, 
		pls_contrato_grupo	c 
	where	b.nr_seq_contrato	= a.nr_sequencia 
	and	c.nr_seq_contrato	= a.nr_sequencia 
	and	c.nr_seq_grupo		= nr_seq_grupo_pc 
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');
			
BEGIN 
 
delete	FROM w_pls_relat_relacionamento 
where	ie_tipo_relatorio	= 'RC';
 
select	max(tx_administrativa) 
into STRICT	tx_administrativa_w 
from	pls_competencia 
where	cd_estabelecimento = cd_estabelecimento_p 
and	dt_mes_competencia = trunc(clock_timestamp(),'Month');
 
if (coalesce(tx_administrativa_w::text, '') = '') or (tx_administrativa_w = 0) then 
	tx_administrativa_w	:= 1;
end if;
 
qt_registros_w := 0;
 
for r_c06_w in C06(dt_inicial_p, dt_final_p) loop 
	begin 
	dt_final_w	:= last_day(r_c06_w.dt_inicial);
	 
	for r_c01_w in C01(nr_seq_grupo_p, dt_reajuste_p) loop 
		begin 
		select	count(1) qt_beneficiarios 
		into STRICT	qt_beneficiarios_w 
		from	pls_segurado		a, 
			pls_contrato		b, 
			pls_contrato_grupo	d, 
			pls_grupo_contrato	c 
		where	a.nr_seq_contrato	= b.nr_sequencia 
		and	d.nr_seq_contrato	= b.nr_sequencia 
		and	d.nr_seq_grupo		= c.nr_sequencia 
		and	c.nr_sequencia		= r_c01_w.nr_seq_grupo 
		and	coalesce(a.dt_rescisao, clock_timestamp() + interval '1 days') > clock_timestamp();
		--qt_beneficiarios_w	:= pls_obter_dados_grupo_contrato(r_c01_w.nr_seq_grupo,'QV'); 
		 
		vl_mensalidade_tot_w	:= 0;
		vl_total_custo_w	:= 0;
		 
		if	(((qt_beneficiarios_w between qt_usuarios_inicial_p and qt_usuarios_final_p) and (qt_usuarios_final_p IS NOT NULL AND qt_usuarios_final_p::text <> '') and (qt_usuarios_inicial_p IS NOT NULL AND qt_usuarios_inicial_p::text <> '')) or (coalesce(qt_usuarios_inicial_p::text, '') = '') and (coalesce(qt_usuarios_final_p::text, '') = '')) then 
			for r_c02_w in C02(r_c01_w.nr_seq_grupo) loop 
				begin				 
				select	sum(coalesce(a.vl_mensalidade,0)) 
				into STRICT	vl_mensalidade_w 
				from	pls_mensalidade			b, 
					pls_mensalidade_segurado	a 
				where	a.nr_seq_mensalidade		= b.nr_sequencia 
				and	a.nr_seq_segurado		= r_c02_w.nr_seq_segurado 
				and	a.dt_mesano_referencia between r_c06_w.dt_inicial and dt_final_w 
				and	coalesce(b.dt_cancelamento::text, '') = '';
				 
				select	sum(coalesce(B.VL_TOTAL,0)) 
				into STRICT	vl_custo_benef_w 
				from	pls_conta		b 
				where	b.nr_seq_segurado	= r_c02_w.nr_seq_segurado 
				and	b.ie_status		= 'F' 
				and	b.dt_atendimento_referencia between r_c06_w.dt_inicial and dt_final_w;
 
				vl_mensalidade_tot_w		:= vl_mensalidade_tot_w + coalesce(vl_mensalidade_w,0);
				vl_total_custo_w		:= vl_total_custo_w + coalesce(vl_custo_benef_w,0);
				 
				end;
			end loop;
			 
			if (vl_total_custo_w <> 0) then 
				vl_total_custo_w	:= (vl_total_custo_w * (tx_administrativa_w/100)) + vl_total_custo_w;
			end if;
			 
			tx_resultado_w	:= pls_obter_perc_result(vl_mensalidade_tot_w,vl_total_custo_w);
			 
			/* Grava no record para realizar os inserts no final */
 
			t_pls_relat_relacionamento_w.nr_seq_grupo(qt_registros_w) 	:= r_c01_w.nr_seq_grupo;
			t_pls_relat_relacionamento_w.ds_grupo_contrato(qt_registros_w) 	:= r_c01_w.ds_grupo;
			t_pls_relat_relacionamento_w.vl_custo_total(qt_registros_w) 	:= vl_total_custo_w;
			t_pls_relat_relacionamento_w.vl_receita_total(qt_registros_w) 	:= vl_mensalidade_tot_w;
			t_pls_relat_relacionamento_w.qt_beneficiarios(qt_registros_w) 	:= qt_beneficiarios_w;
			t_pls_relat_relacionamento_w.tx_resultado(qt_registros_w) 	:= tx_resultado_w;	
			t_pls_relat_relacionamento_w.dt_referencia(qt_registros_w) 	:= r_c06_w.dt_inicial;
			t_pls_relat_relacionamento_w.ie_tipo_relatorio(qt_registros_w) 	:= 'RC';			
			 
			qt_registros_w := qt_registros_w + 1;
		end if;				
		end;
	end loop;
	end;
end loop;
 
if (t_pls_relat_relacionamento_w.nr_seq_grupo.count > 0) then 
	forall i in t_pls_relat_relacionamento_w.nr_seq_grupo.first..t_pls_relat_relacionamento_w.nr_seq_grupo.last 
		insert into w_pls_relat_relacionamento(	nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_grupo, 
				ds_grupo_contrato, 
				vl_custo_total, 
				vl_receita_total, 
				qt_beneficiarios, 
				tx_resultado, 
				dt_referencia, 
				ie_tipo_relatorio) 
		values (	nextval('w_pls_relat_relacionamento_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				t_pls_relat_relacionamento_w.nr_seq_grupo(i), 
				t_pls_relat_relacionamento_w.ds_grupo_contrato(i), 
				t_pls_relat_relacionamento_w.vl_custo_total(i), 
				t_pls_relat_relacionamento_w.vl_receita_total(i), 
				t_pls_relat_relacionamento_w.qt_beneficiarios(i), 
				t_pls_relat_relacionamento_w.tx_resultado(i), 
				t_pls_relat_relacionamento_w.dt_referencia(i), 
				t_pls_relat_relacionamento_w.ie_tipo_relatorio(i));
				 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE w_pls_relat_reaj_contratual ( nr_seq_grupo_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, qt_usuarios_inicial_p bigint, qt_usuarios_final_p bigint, dt_reajuste_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

