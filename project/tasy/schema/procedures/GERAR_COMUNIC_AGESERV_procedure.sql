-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_comunic_ageserv (ie_acao_p text, cd_agenda_p bigint, nm_paciente_p text, dt_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, cd_convenio_p bigint, ds_observacao_p text, ie_classif_agenda_p text) AS $body$
DECLARE

 
ds_titulo_w	varchar(255);					
ds_comunicado_w	varchar(6000);
ds_agenda_w	varchar(255);
cd_perfil_w	integer;				
cd_setor_atendimento_w	integer;

C01 CURSOR FOR 
	SELECT	ds_titulo, 
		ds_comunicado, 
		cd_perfil, 
		cd_setor_atendimento 
	from	agenda_regra_envio_ci 
	where	coalesce(ie_transferencia,'N') = 'S' 
	and	((cd_agenda = cd_agenda_p) or (coalesce(cd_agenda::text, '') = '')) 
	and	((cd_setor_atendimento IS NOT NULL AND cd_setor_atendimento::text <> '') or (cd_perfil IS NOT NULL AND cd_perfil::text <> ''));
	
C02 CURSOR FOR 
	SELECT	ds_titulo, 
		ds_comunicado, 
		cd_perfil, 
		cd_setor_atendimento 
	from	agenda_regra_envio_ci 
	where	coalesce(ie_agendamento,'N') = 'S' 
	and	((cd_agenda = cd_agenda_p) or (coalesce(cd_agenda::text, '') = '')) 
	and	((cd_setor_atendimento IS NOT NULL AND cd_setor_atendimento::text <> '') or (cd_perfil IS NOT NULL AND cd_perfil::text <> ''));
			

BEGIN 
if (ie_acao_p = 'T') then 
 
	open C01;
	loop 
	fetch C01 into	 
		ds_titulo_w, 
		ds_comunicado_w, 
		cd_perfil_w, 
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select	max(ds_agenda) 
		into STRICT	ds_agenda_w 
		from	agenda 
		where	cd_agenda = cd_agenda_p;
		 
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@agenda', 		ds_agenda_w);
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@horario', 		to_char(dt_agenda_p,'dd/mm/yyyy hh24:mi'));
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@paciente', 		nm_paciente_p);
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@convenio', 		substr(obter_nome_convenio(cd_convenio_p),1,80));
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@observacao', 	ds_observacao_p);
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@classif', 		substr(Obter_classif_agenda_consulta(ie_classif_agenda_p),1,80));
		 
		insert into comunic_interna( 
				dt_comunicado, 
				ds_titulo, 
				ds_comunicado, 
				nm_usuario, 
				dt_atualizacao, 
				ie_geral, 
				nm_usuario_destino, 
				ds_perfil_adicional, 
				nr_sequencia, 
				ie_gerencial, 
				dt_liberacao, 
				cd_estab_destino, 
				cd_setor_destino 
			) values ( 
				clock_timestamp(), 
				ds_titulo_w, 
				ds_comunicado_w, 
				'Tasy', 
				clock_timestamp(), 
				'N', 
				'', 
				cd_perfil_w||', ', 
				nextval('comunic_interna_seq'), 
				'N', 
				clock_timestamp(), 
				cd_estabelecimento_p, 
				cd_setor_atendimento_w);
		end;
	end loop;
	close C01;
else 
	open C02;
	loop 
	fetch C02 into	 
		ds_titulo_w, 
		ds_comunicado_w, 
		cd_perfil_w, 
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		select	max(ds_agenda) 
		into STRICT	ds_agenda_w 
		from	agenda 
		where	cd_agenda = cd_agenda_p;
		 
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@agenda', 		ds_agenda_w);
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@horario', 		to_char(dt_agenda_p,'dd/mm/yyyy hh24:mi'));
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@paciente', 		nm_paciente_p);
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@convenio', 		substr(obter_nome_convenio(cd_convenio_p),1,80));
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@observacao', 	ds_observacao_p);
		ds_comunicado_w	:= replace_macro(ds_comunicado_w, '@classif', 		substr(Obter_classif_agenda_consulta(ie_classif_agenda_p),1,80));
		 
		insert into comunic_interna( 
				dt_comunicado, 
				ds_titulo, 
				ds_comunicado, 
				nm_usuario, 
				dt_atualizacao, 
				ie_geral, 
				nm_usuario_destino, 
				ds_perfil_adicional, 
				nr_sequencia, 
				ie_gerencial, 
				dt_liberacao, 
				cd_estab_destino, 
				cd_setor_destino 
			) values ( 
				clock_timestamp(), 
				ds_titulo_w, 
				ds_comunicado_w, 
				'Tasy', 
				clock_timestamp(), 
				'N', 
				'', 
				cd_perfil_w||', ', 
				nextval('comunic_interna_seq'), 
				'N', 
				clock_timestamp(), 
				cd_estabelecimento_p, 
				cd_setor_atendimento_w);
		end;
	end loop;
	close C02;
end if;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_comunic_ageserv (ie_acao_p text, cd_agenda_p bigint, nm_paciente_p text, dt_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, cd_convenio_p bigint, ds_observacao_p text, ie_classif_agenda_p text) FROM PUBLIC;

