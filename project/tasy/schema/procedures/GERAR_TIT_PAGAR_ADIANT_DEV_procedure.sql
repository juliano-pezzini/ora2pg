-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tit_pagar_adiant_dev (nr_adiantamento_p bigint, nr_sequencia_p bigint, nm_usuario_p text, dt_vencimento_p timestamp) AS $body$
DECLARE

 
cd_estabelecimento_w	bigint;
dt_devolucao_w		timestamp;
vl_devolucao_w		double precision;
cd_moeda_w		bigint;
cd_tipo_taxa_juro_w	bigint;
cd_tipo_taxa_multa_w	bigint;
cont_w			bigint;
cd_pessoa_fisica_w	varchar(255);
cd_cgc_w		varchar(255);
nr_seq_movto_tf_w	bigint;
ie_gerar_tributo_tit_w	varchar(1);
nr_titulo_w		bigint;
nr_seq_trans_fin_baixa_w	bigint;
nr_seq_produto_w	bigint;
nr_seq_grupo_prod_w	bigint;
nr_seq_log_integracao_w	bigint;
ds_observacao_titulo_w	titulo_pagar.ds_observacao_titulo%type;


BEGIN 
 
select	count(*) 
into STRICT	cont_w 
from	titulo_pagar 
where	nr_adiant_rec		= nr_adiantamento_p 
and	nr_seq_adiant_dev		= nr_sequencia_p;
 
if (cont_w > 0) then 
	--r.aise_application_error(-20011, 'Já existe título gerado para esta devolução!'); 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(267401);
	 
end if;
 
select	a.dt_devolucao, 
	a.vl_devolucao, 
	a.nr_seq_movto_tf, 
	b.ie_gerar_tributo_tit, 
	a.nr_seq_trans_fin_baixa 
into STRICT	dt_devolucao_w, 
	vl_devolucao_w, 
	nr_seq_movto_tf_w, 
	ie_gerar_tributo_tit_w, 
	nr_seq_trans_fin_baixa_w 
FROM adiantamento_dev a
LEFT OUTER JOIN motivo_dev_adiant b ON (a.nr_seq_motivo_dev = b.nr_sequencia)
WHERE a.nr_adiantamento	= nr_adiantamento_p and a.nr_sequencia		= nr_sequencia_p;
 
select	a.cd_estabelecimento, 
	a.nr_seq_grupo_prod 
into STRICT	cd_estabelecimento_w, 
	nr_seq_grupo_prod_w 
from	adiantamento a 
where	a.nr_adiantamento	= nr_adiantamento_p;
 
select	max(b.nr_seq_produto) 
into STRICT	nr_seq_produto_w 
from	adiantamento_classif b, 
	adiantamento a 
where	a.nr_adiantamento	= b.nr_adiantamento 
and	a.nr_adiantamento	= nr_adiantamento_p;
 
if (nr_seq_movto_tf_w IS NOT NULL AND nr_seq_movto_tf_w::text <> '') then 
 
	select	max(a.cd_pessoa_fisica), 
		max(a.cd_cgc) 
	into STRICT	cd_pessoa_fisica_w, 
		cd_cgc_w 
	from	movto_trans_financ a 
	where	a.nr_sequencia	= nr_seq_movto_tf_w;
 
end if;
 
if (coalesce(cd_pessoa_fisica_w::text, '') = '') and (coalesce(cd_cgc_w::text, '') = '') then 
 
	select	cd_pessoa_fisica, 
		cd_cgc 
	into STRICT	cd_pessoa_fisica_w, 
		cd_cgc_w 
	from	adiantamento 
	where	nr_adiantamento	= nr_adiantamento_p;
 
end if;
 
select	cd_moeda_padrao, 
	cd_tipo_taxa_juro, 
	cd_tipo_taxa_multa 
into STRICT	cd_moeda_w, 
	cd_tipo_taxa_juro_w, 
	cd_tipo_taxa_multa_w 
from	parametros_contas_pagar 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
select	nextval('titulo_pagar_seq') 
into STRICT	nr_titulo_w
;
 
/*Devolução vinculado ao adiantamento recebido nro */
 
ds_observacao_titulo_w	:= wheb_mensagem_pck.get_texto(303121,'NR_ADIANTAMENTO=' || nr_adiantamento_p);
 
insert into titulo_pagar(nr_titulo, 
	cd_estabelecimento, 
	dt_atualizacao, 
	nm_usuario, 
	dt_emissao, 
	dt_vencimento_original, 
	dt_vencimento_atual, 
	vl_titulo, 
	vl_saldo_titulo, 
	vl_saldo_juros, 
	vl_saldo_multa, 
	cd_moeda, 
	tx_juros, 
	tx_multa, 
	cd_tipo_taxa_juro, 
	cd_tipo_taxa_multa, 
	tx_desc_antecipacao, 
	dt_limite_antecipacao, 
	vl_dia_antecipacao, 
	cd_tipo_taxa_antecipacao, 
	ie_situacao, 
	ie_origem_titulo, 
	ie_tipo_titulo, 
	nr_seq_nota_fiscal, 
	cd_pessoa_fisica, 
	cd_cgc, 
	nr_adiant_rec, 
	nr_seq_adiant_dev, 
	dt_contabil, 
	nr_lote_contabil, 
	nr_seq_trans_fin_baixa, 
	ds_observacao_titulo, 
	nr_seq_grupo_prod, 
	cd_estab_financeiro) 
SELECT	nr_titulo_w, 
	cd_estabelecimento_w, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	coalesce(dt_vencimento_p,dt_devolucao_w), 
	coalesce(dt_vencimento_p,dt_devolucao_w), 
	vl_devolucao_w, 
	vl_devolucao_w, 
	0, 
	0, 
	cd_moeda_w, 
	0, 
	0, 
	cd_tipo_taxa_juro_w, 
	cd_tipo_taxa_multa_w, 
	0, 
	null, 
	0, 
	null, 
	'A', 
	2, 
	5, 
	null, 
	cd_pessoa_fisica_w, 
	cd_cgc_w, 
	nr_adiantamento_p, 
	nr_sequencia_p, 
	clock_timestamp(), 
	0, 
	nr_seq_trans_fin_baixa_w, 
	ds_observacao_titulo_w, 
 
	nr_seq_grupo_prod_w, 
	substr(obter_estab_financeiro(cd_estabelecimento_w),1,4)
;
 
CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w, nm_usuario_p);
CALL gravar_agend_integracao(503, 'NR_ADIANTAMENTO=' || nr_adiantamento_p || ';');
 
if (nr_seq_produto_w IS NOT NULL AND nr_seq_produto_w::text <> '') then 
 
	insert into titulo_pagar_classif(nr_titulo, 
		nr_sequencia, 
		vl_titulo, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_produto) 
	values (nr_titulo_w, 
		1, 
		vl_devolucao_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_produto_w);		
end if;
 
if (ie_gerar_tributo_tit_w = 'S') then 
 
	CALL gerar_tributo_titulo(	nr_titulo_w, 
				nm_usuario_p, 
				'N', 
				null, 
				null, 
				null, 
				null, 
				null, 
				cd_estabelecimento_w, 
				null);
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tit_pagar_adiant_dev (nr_adiantamento_p bigint, nr_sequencia_p bigint, nm_usuario_p text, dt_vencimento_p timestamp) FROM PUBLIC;

