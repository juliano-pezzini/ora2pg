-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_mat_guia ( nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realizar a consistência dos materiais lançados na guia, principalmente Carência, Cobertura, Limitação e Ocorrências
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
1 - Performance
2 - Muita atenção nas consistências de Carência, Cobertura, Limitação, não pode parar de funcionar.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_material_w		bigint;
qt_solicitada_w			pls_guia_plano_mat.qt_solicitada%type;
nr_seq_guia_mat_w		bigint;
ie_status_w			varchar(1)	:= 'L';
nr_seq_segurado_w		bigint;
dt_solicitacao_w		timestamp;
nr_seq_contrato_w		bigint;
nr_seq_plano_w			bigint;
qt_registros_w			bigint;
nr_seq_motivo_lib_w		bigint;
nr_seq_prestador_w		bigint;
ie_utilizar_regra_mat_w		varchar(1)	:= 'N';
ie_tipo_guia_w			varchar(2);
nr_seq_tipo_acomodacao_w	bigint;
qt_glosa_w			bigint;
qt_mat_conta_w			bigint;
ie_estagio_w			smallint;
ie_auditoria_w			varchar(2);
dt_liberacao_w			timestamp;
nr_seq_uni_exec_w		bigint;
nr_seq_congenere_w		bigint;
ie_cheque_w			varchar(1);
ie_carencia_abrangencia_ant_w	varchar(10);
ie_glosa_prest_item_w		varchar(1);
ie_tipo_segurado_w		varchar(2);

C010 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		coalesce(qt_solicitada,0)
	from	pls_guia_plano_mat
	where	nr_seq_guia		= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = ''
	and (ie_status		= 'U'
	or	 coalesce(ie_status::text, '') = '');


BEGIN	

-- gerencia a atualização da tabela TM para estrutura de materiais
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS('Tasy', 'PLS_CONSISTIR_MAT_GUIA', 'PLS_ESTRUTURA_MATERIAL_TM');
--Atualizando a tabela de grupo de procedimentos
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS('Tasy', 'PLS_CONSISTIR_MAT_GUIA', 'PLS_GRUPO_SERVICO_TM');
-- gerencia a atualização da tabela TM para para grupos de materiais
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS('Tasy', 'PLS_CONSISTIR_MAT_GUIA', 'PLS_GRUPO_MATERIAL_TM');

select	nr_seq_segurado,
	dt_solicitacao,
	nr_seq_prestador,
	nr_seq_tipo_acomodacao,
	ie_tipo_guia,
	ie_estagio,
	nr_seq_uni_exec,
	nr_seq_plano
into STRICT	nr_seq_segurado_w,
	dt_solicitacao_w,
	nr_seq_prestador_w,	
	nr_seq_tipo_acomodacao_w,
	ie_tipo_guia_w,
	ie_estagio_w,
	nr_seq_uni_exec_w,
	nr_seq_plano_w
from	pls_guia_plano
where	nr_sequencia		= nr_seq_guia_p;

begin
	select	coalesce(ie_carencia_abrangencia_ant,'N')
	into STRICT	ie_carencia_abrangencia_ant_w
	from	pls_parametros
	where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	ie_carencia_abrangencia_ant_w := 'N';
end;

begin
	select	ie_glosa_prest_item
	into STRICT	ie_glosa_prest_item_w
	from	pls_param_autorizacao
	where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	select	max(ie_glosa_prest_item)
	into STRICT	ie_glosa_prest_item_w
	from	pls_param_autorizacao;
end;

begin
	select	nr_seq_contrato,
		nr_seq_congenere,
		ie_tipo_segurado
	into STRICT	nr_seq_contrato_w,
		nr_seq_congenere_w,
		ie_tipo_segurado_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	nr_seq_contrato_w	:= 0;
	nr_seq_congenere_w	:= null;
	ie_tipo_segurado_w 	:= null;
end;

open C010;
loop
fetch C010 into	
	nr_seq_guia_mat_w,
	nr_seq_material_w,
	qt_solicitada_w;
EXIT WHEN NOT FOUND; /* apply on C010 */
	begin
	if (coalesce(qt_solicitada_w,0) = 0) then
		CALL pls_gravar_motivo_glosa('2005',null,null,nr_seq_guia_mat_w,'',nm_usuario_p,'', 'CG', nr_seq_prestador_w, null,null);
		ie_status_w	:= 'N';
	end if;

	if (coalesce(nr_seq_material_w,0) = 0) then
		CALL pls_gravar_motivo_glosa('2003',null,null,nr_seq_guia_mat_w,'',nm_usuario_p,'', 'CG', nr_seq_prestador_w, null,null);
	end if;
	/*Obter o valor do parâmetro 10 */

	ie_utilizar_regra_mat_w	:= coalesce(obter_valor_param_usuario(1209, 10, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');
	
	if 	((ie_utilizar_regra_mat_w = 'S') and (ie_tipo_segurado_w not in ('I','H'))) then
		qt_glosa_w := pls_consistir_cobertura_mat(	nr_seq_segurado_w, nr_seq_guia_mat_w, null, nr_seq_material_w, null, cd_estabelecimento_p, 0, nm_usuario_p, null, qt_glosa_w, 'G');
	end if;
					
	if (coalesce(qt_glosa_w,0) = 0) then
		if (ie_tipo_segurado_w not in ('I','H')) then
			CALL pls_consistir_carencia_mat(	nr_seq_segurado_w, nr_seq_guia_mat_w, null,
							null, null,nr_seq_material_w, 
							null, dt_solicitacao_w, null, 
							'',ie_carencia_abrangencia_ant_w, cd_estabelecimento_p, 
							nm_usuario_p);
			CALL pls_consistir_limitacao_mat(	nr_seq_segurado_w, nr_seq_guia_mat_w, null,
							null, nr_seq_material_w, qt_solicitada_w, 
							nr_seq_guia_p, cd_estabelecimento_p,nm_usuario_p);
		end if;
		
		if (coalesce(ie_glosa_prest_item_w,'S')		= 'S') or
			((coalesce(ie_glosa_prest_item_w,'S')	= 'N') and (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '')) then
			CALL pls_consistir_mat_prestador(	nr_seq_prestador_w, null, nr_seq_guia_mat_w,
							null, null, cd_estabelecimento_p, nm_usuario_p);
		end if;
	end if;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_motivo_lib_w
	from	pls_guia_motivo_lib
	where	nr_seq_guia_mat	= nr_seq_guia_mat_w;

	select	count(1)
	into STRICT	qt_registros_w
	from	pls_guia_glosa
	where	nr_seq_guia_mat	= nr_seq_guia_mat_w;
	
	if (nr_seq_motivo_lib_w > 0) then
		select	coalesce(ie_auditoria,'X')
		into STRICT	ie_auditoria_w
		from	pls_guia_motivo_lib
		where	nr_sequencia	= nr_seq_motivo_lib_w;
		/* (P,M)(Autorizado pelo auditor,Negado pelo auditor) */

		if (ie_auditoria_w <> 'X') then
			ie_status_w	:= ie_auditoria_w;
		end if;
	end if;

	if (qt_registros_w > 0) then

		if (nr_seq_motivo_lib_w > 0) then
			update	pls_guia_plano_mat
			set	nm_usuario_liberacao	= nm_usuario_p,
				dt_liberacao		= clock_timestamp(),
				qt_autorizada		= qt_solicitada_w,
				ie_status		= 'L'
			where	nr_sequencia		= nr_seq_guia_mat_w
			and	ie_status		in ('C','U');
		else
			update	pls_guia_plano_mat
			set	nm_usuario_liberacao	= nm_usuario_p,
				dt_liberacao		= clock_timestamp(),
				qt_autorizada		= 0,
				ie_status		= 'N'
			where	nr_sequencia		= nr_seq_guia_mat_w
			and	ie_status		in ('C','U');
		end if;
	else
		update	pls_guia_plano_mat
		set	nm_usuario_liberacao	= nm_usuario_p,
			dt_liberacao		= clock_timestamp(),
			qt_autorizada		= qt_solicitada_w,
			ie_status		= 'S'
		where	nr_sequencia		= nr_seq_guia_mat_w
		and	ie_status		in ('C','U');
		-- Alteração para pegar a regra de auditoria
		if (nr_seq_motivo_lib_w = 0) and
			((ie_status_w <> 'P') or (ie_estagio_w in (3,6,7))) then			
			CALL pls_consiste_regra_autorizacao(nr_seq_guia_mat_w, 4, cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		begin
			select	dt_liberacao
			into STRICT	dt_liberacao_w
			from	pls_guia_plano_mat
			where	nr_sequencia = nr_seq_guia_mat_w;
		exception
		when others then
			dt_liberacao_w := clock_timestamp();
		end;		
	end if;
				
	CALL pls_gerar_ocorrencia_aut(nr_seq_segurado_w, null, nr_seq_guia_p,
				null, null, nr_seq_guia_mat_w,
				null, null, nr_seq_material_w,
				ie_tipo_guia_w, nr_seq_plano_w,
				null, null,nr_seq_prestador_w,
				null,'I',dt_liberacao_w,
				'',nm_usuario_p, cd_estabelecimento_p,
				nr_seq_congenere_w,'N',null);
	end;
end loop;
close C010;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_mat_guia ( nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

