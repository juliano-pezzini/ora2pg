-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consiste_regra_requisicao ( nr_sequencia_p bigint, ie_tipo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

/*
ie_tipo_p = 1 - procedimentos
ie_tipo_p = 2 - materiais
*/
					

cd_procedimento_w		bigint	:= 0;
ie_origem_proced_w		bigint	:= 0;
qt_procedimento_w		pls_requisicao_proc.qt_procedimento%type	:= 0;
nr_seq_segurado_w		bigint;
ie_tipo_guia_w			varchar(2);
nr_seq_material_w			bigint	:= 0;
qt_material_w			pls_requisicao_mat.qt_material%type	:= 0;
dt_requisicao_w			timestamp;
ie_tipo_regra_w			varchar(1);
ie_tipo_processo_w			varchar(1);
ie_status_w			varchar(1);
ie_tipo_pagador_w			varchar(2);
qt_liberada_regra_w		pls_requisicao_mat.qt_material%type;
ie_auditoria_w			varchar(2);
ie_tipo_qtde_w			varchar(2);
ie_tipo_guia_conta_regra_w		varchar(2);
qt_liberacao_dia_w		pls_requisicao_mat.qt_material%type;
qt_liberacao_mes_w		pls_requisicao_mat.qt_material%type;	
qt_dias_vencido_w		pls_requisicao_mat.qt_material%type;
nr_seq_regra_w			bigint;
qt_executada_regra_w	pls_requisicao_mat.qt_material%type;
qt_tipo_quantidade_w	pls_requisicao_mat.qt_material%type;
ie_tipo_item_w			varchar(2);
ie_valida_ano_contratual_w	varchar(2);			


BEGIN

ie_tipo_regra_w		:= 'A';
ie_tipo_processo_w	:= 'M';

if (ie_tipo_p	= 1) then
	ie_tipo_item_w	:= 'P';
	select	a.cd_procedimento,
		a.ie_origem_proced,
		a.qt_procedimento,
		b.nr_seq_segurado,
		b.ie_tipo_guia,
		b.dt_requisicao
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		nr_seq_segurado_w,
		ie_tipo_guia_w,
		dt_requisicao_w
	from	pls_requisicao b,
		pls_requisicao_proc a
	where	a.nr_sequencia	= nr_sequencia_p
	and	b.nr_sequencia	= a.nr_seq_requisicao;
elsif (ie_tipo_p	= 2) then
	ie_tipo_item_w	:= 'M';
	select	a.nr_seq_material,
		a.qt_material,
		b.nr_seq_segurado,
		b.ie_tipo_guia,
		b.dt_requisicao
	into STRICT	nr_seq_material_w,
		qt_material_w,
		nr_seq_segurado_w,
		ie_tipo_guia_w,
		dt_requisicao_w
	from	pls_requisicao b,
		pls_requisicao_mat a
	where	a.nr_sequencia	= nr_sequencia_p
	and	b.nr_sequencia	= a.nr_seq_requisicao;
end if;

begin
select	CASE WHEN b.cd_cgc='' THEN 'PF'  ELSE 'PJ' END
into STRICT	ie_tipo_pagador_w
from	pls_contrato_pagador	b,
	pls_segurado		a
where	a.nr_sequencia		= nr_seq_segurado_w
and	a.nr_seq_pagador	= b.nr_sequencia;
exception
	when others then
	ie_tipo_pagador_w	:= 'A';
end;
	
SELECT * FROM pls_obter_regra_auditoria(	cd_estabelecimento_p, cd_procedimento_w, ie_origem_proced_w, ie_tipo_regra_w, ie_tipo_guia_w, ie_tipo_processo_w, 0, qt_dias_vencido_w, ie_tipo_pagador_w, nr_seq_material_w, nr_seq_regra_w, ie_status_w, qt_executada_regra_w, qt_liberada_regra_w, ie_tipo_qtde_w, qt_tipo_quantidade_w, ie_tipo_guia_conta_regra_w, ie_valida_ano_contratual_w) INTO STRICT nr_seq_regra_w, ie_status_w, qt_executada_regra_w, qt_liberada_regra_w, ie_tipo_qtde_w, qt_tipo_quantidade_w, ie_tipo_guia_conta_regra_w, ie_valida_ano_contratual_w;


if (ie_status_w	= 'A') then
	if ( ie_tipo_regra_w	= 'A') and (ie_tipo_item_w = 'P') then
		if (coalesce(qt_liberada_regra_w,0) > 0) then			
			if (ie_tipo_qtde_w	= 'D') then
				select 	coalesce(sum(a.qt_procedimento),0)
				into STRICT	qt_liberacao_dia_w
				from	pls_requisicao		b,
					pls_requisicao_proc	a
				where	a.nr_seq_requisicao	= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.cd_procedimento	= cd_procedimento_w
				and	a.ie_origem_proced	= ie_origem_proced_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0));
				
				if (qt_liberacao_dia_w	>= qt_liberada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			elsif (ie_tipo_qtde_w	= 'M') then
				select 	coalesce(sum(a.qt_procedimento),0)
				into STRICT	qt_liberacao_mes_w
				from	pls_requisicao		b,
					pls_requisicao_proc	a
				where	a.nr_seq_requisicao	= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.cd_procedimento	= cd_procedimento_w
				and	a.ie_origem_proced	= ie_origem_proced_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0));
				
				if (qt_liberacao_mes_w	>= qt_liberada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			end if;
		else
			ie_auditoria_w	:= 'S';
		end if;
	elsif (ie_tipo_regra_w	= 'A') and (ie_tipo_item_w = 'M') then
		if (coalesce( qt_liberada_regra_w,0) > 0) then			
			if (ie_tipo_qtde_w	= 'D') then
				select 	coalesce(sum(a.qt_material),0)
				into STRICT	qt_liberacao_dia_w
				from	pls_requisicao		b,
					pls_requisicao_mat	a
				where	a.nr_seq_requisicao	= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.nr_seq_material	= nr_seq_material_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0));
				
				if (qt_liberacao_dia_w	>= qt_liberada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			elsif (ie_tipo_qtde_w	= 'M') then
				select 	coalesce(sum(a.qt_material),0)
				into STRICT	qt_liberacao_mes_w
				from	pls_requisicao		b,
					pls_requisicao_mat	a
				where	a.nr_seq_requisicao	= b.nr_sequencia
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.nr_seq_material	= nr_seq_material_w
				and	((b.ie_tipo_guia	= ie_tipo_guia_conta_regra_w) or (ie_tipo_guia_conta_regra_w = 0));

				if (qt_liberacao_mes_w	>= qt_liberada_regra_w) then
					ie_auditoria_w	:= 'S';
				end if;
			end if;
		else
			ie_auditoria_w	:= 'S';
		end if;
	end if;
end if;

if (ie_auditoria_w	= 'S') then
	if (ie_tipo_regra_w	= 'A') then
		if (ie_tipo_item_w = 'P') then
			update	pls_requisicao_proc
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				ie_status			= ie_status_w
			where	nr_sequencia		= nr_sequencia_p;
		elsif (ie_tipo_item_w = 'M') then		
			update	pls_requisicao_mat
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				ie_status			= ie_status_w
			where	nr_sequencia		= nr_sequencia_p;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consiste_regra_requisicao ( nr_sequencia_p bigint, ie_tipo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

