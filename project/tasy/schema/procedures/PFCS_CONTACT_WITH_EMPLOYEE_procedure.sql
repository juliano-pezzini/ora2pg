-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_contact_with_employee ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


pfcs_panel_detail_seq_w		pfcs_panel_detail.nr_sequencia%type;
nr_seq_panel_w			pfcs_panel.nr_sequencia%type;
qt_total_w				bigint := 0;
nr_encounter_w			atendimento_paciente.nr_atendimento%type;
nr_seq_operational_level_w  pfcs_operational_level.nr_sequencia%type;

c01 CURSOR FOR
SELECT  MAX(nr_atendimento) nr_atendimento
from    atendimento_paciente a
where (dt_alta > TRUNC(clock_timestamp() - interval '14 days') or coalesce(dt_alta::text, '') = '')
and		(
		exists (	select	1
                from atend_paciente_adic f
                    join atendimento_paciente b ON f.nr_atendimento = b.nr_atendimento
                    join paciente_exame e ON b.cd_pessoa_fisica = e.cd_pessoa_fisica
					where   coalesce(e.dt_inativacao::text, '') = ''
                    and     f.nr_atendimento = a.nr_atendimento
                    and     e.dt_atualizacao > TRUNC(clock_timestamp() - interval '14 days')
                    and		coalesce(f.ie_atend_covid_posit, 'N') = 'S')
		or exists(	select	1
					from	pfcs_diagnosis d,
							diagnostico_doenca c
					where	((c.cd_doenca = d.cd_doenca) or (c.cd_doenca = replace(d.cd_doenca, '.', '')))
					and 	c.nr_atendimento = a.nr_atendimento
                    and     c.dt_diagnostico > TRUNC(clock_timestamp() - interval '14 days')
					and		coalesce(d.ie_positivo, 'N') = 'S')
		or exists (SELECT
                   1
                FROM
                    prescr_procedimento   pp
                    INNER JOIN prescr_medica pm ON pp.nr_prescricao = pm.nr_prescricao
                    INNER JOIN exame_lab_result_item elri ON pp.nr_sequencia = elri.nr_seq_prescr
                    INNER JOIN exame_lab_resultado elr ON pm.nr_prescricao = elr.nr_prescricao AND elri.nr_seq_resultado = elr.nr_seq_resultado
                WHERE
                    pfcs_lab_obter_se_exame_covid(pp.nr_seq_exame) = 'S'
                    AND pm.nr_atendimento =  a.nr_atendimento
                    AND pp.ie_status_atend >= 35
                    AND (pm.dt_liberacao IS NOT NULL AND pm.dt_liberacao::text <> '')
                    AND pm.dt_liberacao > TRUNC(clock_timestamp() - interval '14 days')
					AND substr(UPPER(coalesce(elri.ds_resultado, 0)),1,7) = substr(UPPER(obter_desc_expressao(296109)),1,7))
		)
and	a.cd_estabelecimento = cd_estabelecimento_p
GROUP BY a.cd_pessoa_fisica;

c02 CURSOR FOR
SELECT  DISTINCT(b.cd_pessoa_fisica) cd_person,
    	substr(obter_nome_pf(b.cd_pessoa_fisica),1,60) ds_person,
        a.nm_usuario,
        substr(obter_nome_setor(b.cd_setor_atendimento),1,60) ds_consultation_dept,
        substr(obter_valor_dominio(72 ,ie_tipo_evolucao),1,60) ds_clinical_note,
        obter_pessoa_atendimento(a.nr_atendimento,'C') cd_person_covid,
    	max(a.dt_atualizacao) dt_poss_contact
FROM    usuario b,
        pep_acesso a
WHERE   a.nm_usuario = b.nm_usuario
AND     a.cd_estabelecimento = cd_estabelecimento_p
AND     a.nr_atendimento = nr_encounter_w
AND     (b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> '')
and     a.dt_atualizacao > TRUNC(clock_timestamp() - interval '14 days')
GROUP BY    substr(obter_nome_pf(b.cd_pessoa_fisica),1,60),
            b.cd_pessoa_fisica,
            a.nm_usuario,
            substr(coalesce(Obter_se_medico(b.cd_pessoa_fisica,'M'),'N'),1,1),
            obter_nome_setor(b.cd_setor_atendimento),
            obter_valor_dominio(72 ,ie_tipo_evolucao),
            obter_pessoa_atendimento(a.nr_atendimento,'C')

UNION ALL

SELECT  DISTINCT(Obter_Pessoa_Fisica_Usuario(a.nm_usuario_nrec, 'C')) cd_person,
    	substr(OBTER_NOME_USUARIO(a.nm_usuario_nrec),1,60) ds_person,
        a.nm_usuario_nrec usuario,
        substr(obter_nome_setor(obter_setor_usuario(a.nm_usuario_nrec)),1,60) ds_consultation_dept,
        substr(obter_valor_dominio(72 ,OBTER_FUNCAO_USUARIO(a.nm_usuario_nrec)),1,60),
        a.cd_pessoa_fisica cd_person_covid,
        a.dt_atualizacao_nrec dt_poss_contact
FROM	atendimento_paciente a
WHERE	(a.nm_usuario_nrec IS NOT NULL AND a.nm_usuario_nrec::text <> '')
and     a.cd_estabelecimento = cd_estabelecimento_p
AND   	a.dt_entrada > to_date('01/01/2020','DD/MM/YYYY')
and     a.dt_atualizacao_nrec > TRUNC(clock_timestamp() - interval '14 days')
and	a.nr_atendimento = nr_encounter_w
ORDER BY cd_person_covid;

BEGIN
nr_seq_operational_level_w := pfcs_get_structure_level(
    cd_establishment_p => cd_estabelecimento_p,
    ie_level_p => 'O',
    ie_info_p => 'C');

	open c01;
	loop
	fetch c01
	into	nr_encounter_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	for c02_w in c02 loop
	begin
		qt_total_w	:= qt_total_w + 1;

		select	nextval('pfcs_panel_detail_seq')
		into STRICT	pfcs_panel_detail_seq_w
		;

		insert into pfcs_panel_detail(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			ie_situation,
			nr_seq_indicator,
			nr_seq_operational_level)
		values (
			pfcs_panel_detail_seq_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			'T',
			nr_seq_indicator_p,
			nr_seq_operational_level_w);

		insert into pfcs_detail_employee(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_detail,
			cd_person,
			ds_person,
			ds_consultation_dept,
			ds_clinical_note,
			cd_person_covid,
			dt_poss_contact)
		values (
			nextval('pfcs_detail_employee_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			pfcs_panel_detail_seq_w,
			c02_w.cd_person,
			c02_w.ds_person,
			c02_w.ds_consultation_dept,
			c02_w.ds_clinical_note,
			c02_w.cd_person_covid,
			c02_w.dt_poss_contact);

	end;
	end loop;

	end;
	end loop;
	close c01;

commit;

 := pfcs_pck.pfcs_generate_results(
		vl_indicator_p => qt_total_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

CALL pfcs_pck.pfcs_update_detail(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

CALL pfcs_pck.pfcs_activate_records(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_contact_with_employee ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

