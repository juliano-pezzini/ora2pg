-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_cod_conv_mat_proc ( nr_sequencia_p bigint, ie_proc_mat_p bigint) AS $body$
DECLARE


ie_proc_mat_w			smallint;
cd_convenio_w			integer;
cd_item_w			bigint;
nr_sequencia_w			bigint;
cd_item_convenio_w		varchar(20) 	:= '';
cd_grupo_w			varchar(10) 	:= '';
cd_convenio_ant_w		integer 		:= 0;
cd_item_ant_w			bigint 		:= 0;
ie_origem_proced_w		bigint 		:= 0;
nr_seq_conversao_w		bigint 		:= 0;
cd_unidade_ant_w			varchar(30)		:= 'AAAA';
cd_estabelecimento_w		smallint;

nr_seq_partic_w			bigint;
cd_especialidade_partic_w		bigint;
ie_funcao_medico_partic_w		varchar(255);

cd_unidade_orig_w			varchar(30);
cd_unidade_padrao_w		varchar(30);
nr_seq_item_w			bigint;
nr_seq_proc_pacote_w		bigint;
nm_usuario_w			varchar(15);
cd_especialidade_medica_w		integer;
cd_setor_atendimento_w		integer;
ie_tipo_atendimento_w		integer;
cd_cgc_fornecedor_w		varchar(14);
cd_tipo_acomodacao_w		bigint;
nr_seq_atepacu_w			bigint;
nr_seq_proc_interno_w		bigint;
dt_execucao_w			timestamp;
ie_pacote_w			varchar(01);
nr_atendimento_w			bigint;
cd_plano_w			varchar(10);
cd_categoria_w			varchar(10);
ie_clinica_w			integer;
vl_procedimento_w			double precision;
ie_funcao_medico_w		varchar(255);
cd_tipo_acomod_conv_w		smallint;
ie_conversao_mat_w		varchar(1);
qt_idade_w			bigint;
cd_pessoa_fisica_w		varchar(10);
ie_sexo_w			varchar(1);
ie_origem_preco_w		smallint;
cd_empresa_ref_w		bigint;
ie_carater_inter_sus_w		varchar(2);
nr_seq_pacote_w			bigint;
nr_seq_exame_w			bigint;
cd_medico_executor_w		varchar(10);
dt_conta_w			timestamp;
cd_estab_conta_w		smallint;
cd_convenio_parametro_w		integer;
ie_codigo_convenio_w		varchar(1);
nr_seq_lote_fornec_w		bigint;
nr_seq_marca_w			bigint;
ie_tipo_atend_tiss_w		varchar(2);
cd_dependente_w			smallint;
cd_unid_medida_conv_w		material_atend_paciente.cd_unid_medida_conv%type;
tx_conversao_qtde_w		material_atend_paciente.tx_conversao_qtde%type;
nr_seq_mat_autor_w			material_atend_paciente.nr_seq_mat_autor%type;
ie_tipo_prec_especial_w		material_autorizado.ie_tipo_prec_especial%type;
cd_procedimento_loc_w    varchar(255);

c01 CURSOR FOR
SELECT 	1,
	b.cd_convenio,
	a.cd_procedimento,
	a.ie_origem_proced,
	a.nr_sequencia,
	'Un',
	a.nr_sequencia,
	a.nr_seq_proc_pacote,
	a.nm_usuario,
	a.cd_especialidade,
	obter_tipo_atendimento(a.nr_atendimento),
	a.cd_setor_atendimento,
	'' cd_cgc,
	x.cd_estabelecimento,
	a.nr_seq_atepacu,
	a.nr_seq_proc_interno,
	a.dt_procedimento,
	CASE WHEN a.nr_seq_proc_pacote=a.nr_sequencia THEN  'S'  ELSE 'N' END  ie_pacote,
	x.nr_atendimento,
	a.cd_categoria,
	obter_clinica_atend(a.nr_atendimento,'C'),
	a.vl_procedimento,
	a.ie_funcao_medico,
	0 ie_origem_preco,
	a.nr_seq_exame,
	a.cd_medico_executor,
	a.dt_conta,
	null,
	x.ie_tipo_atend_tiss
from	convenio b,
	conta_paciente x,
	procedimento_paciente a
where	a.nr_interno_conta 	= x.nr_interno_conta
and	a.nr_sequencia 		= nr_sequencia_p
and	x.cd_convenio_parametro	= b.cd_convenio
and	ie_proc_mat_p		= 1
and	coalesce(ie_codigo_convenio_w, b.ie_codigo_convenio) in ('I')
and	coalesce(a.dt_conversao_manual::text, '') = ''

union

SELECT 	2,
	b.cd_convenio,
	a.cd_material,
	0,
	a.nr_sequencia,
	a.cd_unidade_medida,
	a.nr_sequencia,
	a.nr_seq_proc_pacote,
	a.nm_usuario,
	0,
	obter_tipo_atendimento(a.nr_atendimento),
	a.cd_setor_atendimento,
	a.cd_cgc_fornecedor,
	x.cd_estabelecimento,
	a.nr_seq_atepacu,
	null,
	a.dt_atendimento,
	'N',
	x.nr_atendimento,
	a.cd_categoria,
	obter_clinica_atend(a.nr_atendimento,'C'),
	0,
	null,
	coalesce(a.ie_origem_preco,0),
	null,
	null,
	a.dt_conta,
	a.nr_seq_lote_fornec,
	x.ie_tipo_atend_tiss
from	convenio b,
	conta_paciente x,
	material_atend_paciente a
where	a.nr_interno_conta 	= x.nr_interno_conta
and	a.nr_sequencia 		= nr_sequencia_p
and	x.cd_convenio_parametro	= b.cd_convenio
and	ie_proc_mat_p		= 2
and	coalesce(ie_codigo_convenio_w,b.ie_codigo_convenio) in ('I')
and	coalesce(a.dt_conversao_manual::text, '') = ''
order by	2, 1, 3;

c02 CURSOR FOR
SELECT	a.nr_seq_partic,
	a.cd_especialidade,
	a.ie_funcao
from 	procedimento_participante a
where	a.nr_sequencia	= nr_sequencia_w
and	ie_proc_mat_w	= 1;


BEGIN

if (ie_proc_mat_p = 1) then
	select 	max(x.cd_estabelecimento),
		max(x.cd_convenio_parametro)
	into STRICT	cd_estab_conta_w,
		cd_convenio_parametro_w
	from 	conta_paciente x,
		procedimento_paciente a
	where 	a.nr_interno_conta = x.nr_interno_conta
	and	a.nr_sequencia = nr_sequencia_p;
elsif (ie_proc_mat_p = 2) then
	select 	max(x.cd_estabelecimento),
		max(x.cd_convenio_parametro),
		coalesce(max(a.nr_seq_mat_autor),0)
	into STRICT	cd_estab_conta_w,
			cd_convenio_parametro_w,
			nr_seq_mat_autor_w
	from 	conta_paciente x,
		material_atend_paciente a
	where 	a.nr_interno_conta = x.nr_interno_conta
	and	a.nr_sequencia = nr_sequencia_p;
end if;

if ((nr_seq_mat_autor_w IS NOT NULL AND nr_seq_mat_autor_w::text <> '')
		and nr_seq_mat_autor_w <> 0) then
	select	coalesce(max(ie_tipo_prec_especial),'N')
	into STRICT	ie_tipo_prec_especial_w
	from	material_autorizado a
	where	a.nr_sequencia = nr_seq_mat_autor_w;
end if;

select	max(ie_codigo_convenio)
into STRICT	ie_codigo_convenio_w
from	convenio_estabelecimento
where	cd_estabelecimento = cd_estab_conta_w
and	cd_convenio = cd_convenio_parametro_w;

open c01;
loop
fetch c01 into
      	ie_proc_mat_w,
      	cd_convenio_w,
      	cd_item_w,
	ie_origem_proced_w,
      	nr_sequencia_w,
	cd_unidade_orig_w,
	nr_seq_item_w,
	nr_seq_proc_pacote_w,
	nm_usuario_w,
	cd_especialidade_medica_w,
	ie_tipo_atendimento_w,
	cd_setor_atendimento_w,
	cd_cgc_fornecedor_w,
	cd_estabelecimento_w,
	nr_seq_atepacu_w,
	nr_seq_proc_interno_w,
	dt_execucao_w,
	ie_pacote_w,
	nr_atendimento_w,
	cd_categoria_w,
	ie_clinica_w,
	vl_procedimento_w,
	ie_funcao_medico_w,
	ie_origem_preco_w,
	nr_seq_exame_w,
	cd_medico_executor_w,
	dt_conta_w,
	nr_seq_lote_fornec_w,
	ie_tipo_atend_tiss_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	cd_unidade_padrao_w		:= cd_unidade_orig_w;

	select	max(cd_tipo_acomodacao)
	into STRICT	cd_tipo_acomodacao_w
	from	atend_paciente_unidade
	where	nr_seq_interno	= nr_seq_atepacu_w;
		
	select	max(cd_plano_convenio),
		coalesce(max(cd_empresa),0),
		max(cd_dependente)
	into STRICT	cd_plano_w,
		cd_empresa_ref_w,
		cd_dependente_w
	from 	atend_categoria_convenio
	where 	nr_atendimento = nr_atendimento_w
	and 	cd_convenio    = cd_convenio_w;
	
	select	max(cd_tipo_acomodacao)
	into STRICT	cd_tipo_acomod_conv_w
	from 	atend_categoria_convenio
	where 	nr_atendimento = nr_atendimento_w
	and 	cd_convenio    = cd_convenio_w;

	-- Verificar a Regra Convenio Material
	ie_conversao_mat_w	:= coalesce(obter_valor_conv_estab(cd_convenio_w, cd_estabelecimento_w, 'IE_CONVERSAO_MAT'),'R');
	
	if (ie_proc_mat_w = 1) then
     		begin
    		if (cd_convenio_w <> cd_convenio_ant_w) or (cd_item_w <> cd_item_ant_w) then
			
			select	max(cd_pessoa_fisica),
				max(ie_carater_inter_sus)
			into STRICT	cd_pessoa_fisica_w,
				ie_carater_inter_sus_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w;
			
			begin
			select	max(obter_idade(dt_nascimento, coalesce(dt_obito,clock_timestamp()),'DIA')),
				max(ie_sexo)
			into STRICT	qt_idade_w,
				ie_sexo_w
			from	pessoa_fisica
			where	cd_pessoa_fisica = cd_pessoa_fisica_w;
			exception
			when others then
				qt_idade_w	:= 0;
				ie_sexo_w	:= '';
			end;
			
			nr_seq_pacote_w	:= 0;
			if (nr_seq_item_w = nr_seq_proc_pacote_w) then
				select	max(nr_seq_pacote)
				into STRICT	nr_seq_pacote_w
				from	atendimento_pacote
				where	nr_seq_procedimento = nr_seq_item_w
				and	nr_atendimento = nr_atendimento_w;
			end if;
			
     			SELECT * FROM converte_proc_convenio(
				cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_item_w, ie_origem_proced_w, cd_especialidade_medica_w, cd_medico_executor_w, ie_tipo_atendimento_w, coalesce(obter_data_conversao_conv(cd_convenio_w,dt_execucao_w,'P',nr_atendimento_w, dt_conta_w),dt_execucao_w), cd_item_convenio_w, cd_grupo_w, nr_seq_conversao_w, cd_setor_atendimento_w, cd_tipo_acomodacao_w, nr_seq_proc_interno_w, ie_pacote_w, cd_plano_w, ie_clinica_w, vl_procedimento_w, ie_funcao_medico_w, cd_tipo_acomod_conv_w, qt_idade_w, ie_sexo_w, cd_empresa_ref_w, ie_carater_inter_sus_w, nr_seq_pacote_w, nr_seq_exame_w, ie_tipo_atend_tiss_w, cd_dependente_w) INTO STRICT cd_item_convenio_w, cd_grupo_w, nr_seq_conversao_w;
	      	end if;
		if (nr_seq_item_w	= nr_seq_proc_pacote_w) then
			cd_grupo_w		:= '8';
		end if;
		if (cd_item_convenio_w <> '0') then
	      		update procedimento_paciente
	      		set 	cd_procedimento_convenio = cd_item_convenio_w
	      		where nr_sequencia = nr_sequencia_w;
		else
		select max(a.cd_procedimento_loc)
                into STRICT cd_procedimento_loc_w
                from procedimento a, procedimento_paciente b
                where a.cd_procedimento = b.cd_procedimento
                and a.ie_origem_proced = b.ie_origem_proced
                and b.nr_sequencia = nr_sequencia_w;

		      	update procedimento_paciente
                set 	cd_procedimento_convenio = coalesce(cd_procedimento_loc_w, cd_procedimento)
	      		where nr_sequencia = nr_sequencia_w;
		end if;
		delete from proc_paciente_convenio
		where nr_seq_procedimento = nr_sequencia_w;
		if (nr_seq_conversao_w <> 0) then
			insert into proc_paciente_convenio(
				nr_seq_procedimento, dt_atualizacao, nm_usuario,
				cd_procedimento, ds_procedimento, cd_unidade_medida,
				tx_conversao_qtde, cd_grupo, nr_proc_interno)
			SELECT
				nr_sequencia_w, clock_timestamp(), nm_usuario,
				cd_proc_convenio, ds_proc_convenio, cd_unidade_convenio,
				tx_conversao_qtde, cd_grupo_w, nr_proc_interno
			from conversao_proc_convenio
			where nr_sequencia	= nr_seq_conversao_w;
		elsif (cd_grupo_w IS NOT NULL AND cd_grupo_w::text <> '') then
			insert into proc_paciente_convenio(
				nr_seq_procedimento, dt_atualizacao, nm_usuario,
				cd_procedimento, ds_procedimento, cd_unidade_medida,
				tx_conversao_qtde, cd_grupo)
			values (nr_seq_item_w, clock_timestamp(), nm_usuario_w,
				null, null, null, null, cd_grupo_w);
		end if;
      	end;

	open c02;
	loop
	fetch c02 into
		nr_seq_partic_w,
	      	cd_especialidade_partic_w,
		ie_funcao_medico_partic_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	
		select	max(cd_pessoa_fisica),
			max(ie_carater_inter_sus)
		into STRICT	cd_pessoa_fisica_w,
			ie_carater_inter_sus_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w;
		
		begin
		select	max(obter_idade(dt_nascimento, coalesce(dt_obito,clock_timestamp()),'DIA')),
			max(ie_sexo)
		into STRICT	qt_idade_w,
			ie_sexo_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_w;
		exception
		when others then
			qt_idade_w	:= 0;
			ie_sexo_w	:= '';
		end;
		
		nr_seq_pacote_w	:= 0;
		if (nr_seq_item_w = nr_seq_proc_pacote_w) then
			select	max(nr_seq_pacote)
			into STRICT	nr_seq_pacote_w
			from	atendimento_pacote
			where	nr_seq_procedimento = nr_seq_item_w
			and	nr_atendimento = nr_atendimento_w;
		end if;

     		SELECT * FROM converte_proc_convenio(
			cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_item_w, ie_origem_proced_w, cd_especialidade_partic_w, cd_medico_executor_w, ie_tipo_atendimento_w, coalesce(obter_data_conversao_conv(cd_convenio_w,dt_execucao_w,'P',nr_atendimento_w, dt_conta_w),dt_execucao_w), cd_item_convenio_w, cd_grupo_w, nr_seq_conversao_w, cd_setor_atendimento_w, cd_tipo_acomodacao_w, nr_seq_proc_interno_w, ie_pacote_w, cd_plano_w, ie_clinica_w, vl_procedimento_w, ie_funcao_medico_partic_w, cd_tipo_acomod_conv_w, qt_idade_w, ie_sexo_w, cd_empresa_ref_w, ie_carater_inter_sus_w, nr_seq_pacote_w, nr_seq_exame_w, ie_tipo_atend_tiss_w, cd_dependente_w) INTO STRICT cd_item_convenio_w, cd_grupo_w, nr_seq_conversao_w;

		if (cd_item_convenio_w <> '0') then
			update	procedimento_participante
			set	cd_proc_conv	= cd_item_convenio_w
			where	nr_seq_partic	= nr_seq_partic_w
			and	nr_sequencia	= nr_sequencia_w;
		else
			update	procedimento_participante
			set	cd_proc_conv	 = NULL,
				ds_proc_conv	 = NULL
			where	nr_seq_partic	= nr_seq_partic_w
			and	nr_sequencia	= nr_sequencia_w;
		end if;

	end loop;
	close c02;

   	else
      	begin
		nr_seq_conversao_w 	:= 0;
		cd_grupo_w	 	:= null;
		cd_item_convenio_w 	:= '0';
		
		select	max(ie_carater_inter_sus)
		into STRICT	ie_carater_inter_sus_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w;
		
		if (coalesce(nr_seq_lote_fornec_w,0) > 0) then
			select	max(nr_seq_marca)
			into STRICT	nr_seq_marca_w
			from	material_lote_fornec
			where	nr_sequencia = nr_seq_lote_fornec_w;
		end if;
				
		SELECT * FROM converte_material_convenio(
			cd_convenio_w, cd_item_w, cd_setor_atendimento_w, cd_tipo_acomodacao_w, cd_cgc_fornecedor_w, cd_estabelecimento_w, coalesce(obter_data_conversao_conv(cd_convenio_w,dt_execucao_w,'M',nr_atendimento_w, dt_conta_w),dt_execucao_w), cd_categoria_w, cd_item_convenio_w, cd_grupo_w, nr_seq_conversao_w, ie_tipo_atendimento_w, ie_origem_preco_w, cd_empresa_ref_w, nr_seq_proc_pacote_w, ie_carater_inter_sus_w, nr_seq_marca_w, ie_tipo_atend_tiss_w, ie_clinica_w, ie_tipo_prec_especial_w) INTO STRICT cd_item_convenio_w, cd_grupo_w, nr_seq_conversao_w;
			
		select	coalesce(max(cd_unidade_convenio),cd_unidade_padrao_w)
		into STRICT	cd_unidade_padrao_w
		from	conversao_unidade_medida
		where	cd_convenio		= cd_convenio_w
		and	cd_unidade_medida	= cd_unidade_orig_w;
		if (nr_seq_item_w	= nr_seq_proc_pacote_w) then
			cd_grupo_w		:= '8';
		end if;
		
		if (nr_seq_conversao_w <> 0) then
			select	coalesce(max(cd_unidade_convenio),cd_unidade_padrao_w),			
				max(tx_conversao_qtde)
			into STRICT	cd_unid_medida_conv_w,
				tx_conversao_qtde_w
			from 	conversao_material_convenio
			where 	nr_sequencia = nr_seq_conversao_w;
		end if;
		
		if (cd_item_convenio_w <> '0')  then
		      	update material_atend_paciente
      			set    cd_material_convenio = cd_item_convenio_w,
			       cd_unid_medida_conv  = cd_unid_medida_conv_w,
			       tx_conversao_qtde    = tx_conversao_qtde_w
	      		where  nr_sequencia = nr_sequencia_w;
		else
		      	update material_atend_paciente
      			set 	cd_material_convenio = cd_material,
				cd_unid_medida_conv   = NULL,
			        tx_conversao_qtde     = NULL
	      		where	nr_sequencia = nr_sequencia_w;
		end if;

		delete from mat_atend_pac_convenio
		where nr_seq_material = nr_sequencia_w;

		if (ie_conversao_mat_w = 'O') and (nr_seq_conversao_w <> '0') then
			insert into mat_atend_pac_convenio(
				nr_seq_material, dt_atualizacao, nm_usuario,
				cd_material, ds_material, cd_unidade_medida,
				tx_conversao_qtde, cd_grupo,ie_tipo_material_conv)
			SELECT
				nr_sequencia_w, clock_timestamp(), nm_usuario,
				cd_material_ops, ds_material,
				coalesce(cd_unidade_medida,cd_unidade_padrao_w),
				qt_conversao_prest, null,null
			from  pls_material a
			where nr_sequencia	= nr_seq_conversao_w;
		else
			if (nr_seq_conversao_w <> 0) or (cd_grupo_w IS NOT NULL AND cd_grupo_w::text <> '') then
				insert into mat_atend_pac_convenio(
					nr_seq_material, dt_atualizacao, nm_usuario,
					cd_material, ds_material, cd_unidade_medida,
					tx_conversao_qtde, cd_grupo, nr_proc_interno)
				SELECT
					nr_sequencia_w, clock_timestamp(), nm_usuario,
					cd_material_convenio, ds_material_convenio,
					coalesce(cd_unidade_convenio,cd_unidade_padrao_w),
					tx_conversao_qtde, cd_grupo_w, nr_proc_interno
				from conversao_material_convenio
				where nr_sequencia	= nr_seq_conversao_w;
			elsif (cd_grupo_w IS NOT NULL AND cd_grupo_w::text <> '') then
				insert into mat_atend_pac_convenio(
					nr_seq_material, dt_atualizacao, nm_usuario,
					cd_material, ds_material, cd_unidade_medida,
					tx_conversao_qtde, cd_grupo)
				values (nr_seq_item_w, clock_timestamp(), nm_usuario_w,
					null, null, null, null, cd_grupo_w);
			end if;
		end if;
	      	end;
   	end if;
   	cd_convenio_ant_w 		:= cd_convenio_w;
	cd_item_ant_w 		:= cd_item_w;
	cd_unidade_ant_w		:= cd_unidade_orig_w;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_cod_conv_mat_proc ( nr_sequencia_p bigint, ie_proc_mat_p bigint) FROM PUBLIC;

