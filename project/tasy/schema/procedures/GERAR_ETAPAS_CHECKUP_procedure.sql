-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_etapas_checkup ( nr_sequencia_p bigint, NR_SEQ_TIPO_CHECKUP_P bigint default 0, nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE



cd_estabelecimento_w		smallint;
cd_setor_atendimento_w		integer;
dt_prevista_w			timestamp;
ie_sexo_w			varchar(1);
ie_etapa_liberada_w		varchar(1);
qt_idade_w			smallint;
dt_prev_aux_w			timestamp;
nr_sequencia_w			bigint;
nr_seq_tipo_checkup_w		bigint;
qt_min_prev_w			bigint;
nr_seq_etapa_w			bigint;
ie_tipo_etapa_w			varchar(15);
dt_retorno_w			timestamp;
cd_empresa_w			bigint;
QT_REG_W			bigint;
cd_profissional_w		varchar(15);
C01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_min_prev,
		ie_tipo_etapa,
		cd_profissional	
	from	etapa_checkup
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	coalesce(cd_setor_atendimento,cd_setor_atendimento_w) = cd_setor_atendimento_w
	and	ie_situacao		= 'A'
	and (coalesce(ie_dia_semana::text, '') = '' or ie_dia_semana = pkg_date_utils.get_WeekDay(clock_timestamp()))
	and	((ie_sexo 		= ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
	and	((qt_idade_w		between qt_idade_min and qt_idade_max) or (coalesce(qt_idade_min::text, '') = '' or coalesce(qt_idade_max::text, '') = ''))
	order by nr_seq_apres;

C02 CURSOR FOR
	SELECT a.nr_seq_tipo_checkup
	from   contrato_tipo_checkup_pf a,
	       empresa_pessoa_checkup b,
	       checkup c
	where  a.nr_seq_pessoa_checkup  = b.nr_sequencia
	and    b.cd_pessoa_fisica       = c.cd_pessoa_fisica
	and    c.nr_sequencia           = nr_sequencia_p;

C03 CURSOR FOR
	SELECT 	a.nr_sequencia,
		a.qt_min_prev, 
		a.ie_tipo_etapa,
		a.cd_profissional
	from   	etapa_checkup a,
		tipo_checkup_etapa b
	where  	a.nr_sequencia         	= b.nr_seq_etapa
	and    	b.nr_seq_tipo_checkup	= nr_seq_tipo_checkup_w
	and    	cd_estabelecimento	= cd_estabelecimento_w
	and	coalesce(cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
	and	ie_situacao		= 'A'
	and (coalesce(ie_dia_semana::text, '') = '' or ie_dia_semana = pkg_date_utils.get_WeekDay(clock_timestamp()))
	and	((ie_sexo 		= ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
	and	qt_idade_w	        between coalesce(a.qt_idade_min,0) and coalesce(a.qt_idade_max,999)
	and	Obter_Se_Gerar_etapa_ck(a.nr_sequencia,cd_empresa_w,ie_sexo_w,qt_idade_w,nr_seq_tipo_checkup_w)	= 'S'
	order by nr_seq_apres;

	

BEGIN
select	cd_estabelecimento,
	cd_setor_atendimento,
	dt_previsto,
	substr(obter_sexo_pf(cd_pessoa_fisica, 'C'),1,1),
	coalesce((substr(obter_idade(obter_dados_pf_dt(cd_pessoa_fisica, 'DN'), clock_timestamp(), 'A'),1,3))::numeric ,0),
	cd_empresa_REF
into STRICT	cd_estabelecimento_w,
	cd_setor_atendimento_w,
	dt_prevista_w,
	ie_sexo_w,
	qt_idade_w,
	cd_empresa_w
from	checkup
where	nr_sequencia	= nr_sequencia_p;

dt_retorno_w	:= dt_prevista_w;

if (nr_seq_tipo_checkup_p = 0) then
	begin
	
	select 	CASE WHEN max(a.nr_seq_tipo_checkup)='' THEN 'N'  ELSE 'S' END
	into STRICT	ie_etapa_liberada_w
	from 	contrato_tipo_checkup_pf a,
		empresa_pessoa_checkup b,
		checkup c
	where  	a.nr_seq_pessoa_checkup  = b.nr_sequencia
	and    	b.cd_pessoa_fisica       = c.cd_pessoa_fisica
	and    	c.nr_sequencia           = nr_sequencia_p;
	
	if (ie_etapa_liberada_w = 'S') then
		begin
		open C02;
		loop
		fetch C02 into
			nr_seq_tipo_checkup_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			open C03;
			loop
			fetch C03 into
				nr_sequencia_w,
				qt_min_prev_w,
				ie_tipo_etapa_w,
				cd_profissional_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				if (ie_tipo_etapa_w = 'R') then
					dt_prevista_w	:= dt_retorno_w + (qt_min_prev_w / 1440);
				end if;
				
				select	nextval('checkup_etapa_seq')
				into STRICT	nr_seq_etapa_w
				;

				dt_prev_aux_w	:= dt_prevista_w;
				if (qt_min_prev_w < 0) then
					dt_prevista_w	:= dt_prevista_w + (qt_min_prev_w / 1440);
				end if;
				
					insert into checkup_etapa(
						nr_sequencia,
						nr_seq_checkup,
						dt_atualizacao,
						nm_usuario,
						nr_seq_etapa,
						dt_prevista,
						cd_pessoa_fisica)
					Values (	nr_seq_etapa_w,
						nr_sequencia_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_w,
						dt_prevista_w,
						CASE WHEN cd_profissional_w='' THEN null  ELSE cd_profissional_w END );
					commit;

				dt_prevista_w	:= dt_prev_aux_w;

				if (qt_min_prev_w > 0) then
					dt_prevista_w := dt_prevista_w + (qt_min_prev_w / 1440);	
				end if;
				end;
			END LOOP;
			CLOSE C03;
			
			end;
		end loop;
		close C02;
	  end;	
	else
		begin
		OPEN C01;
		LOOP
		FETCH C01 into
			nr_sequencia_w,
			qt_min_prev_w,
			ie_tipo_etapa_w,
			cd_profissional_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			if (ie_tipo_etapa_w = 'R') then
				dt_prevista_w	:= dt_retorno_w + (qt_min_prev_w / 1440);
			end if;
			
			select	nextval('checkup_etapa_seq')
			into STRICT	nr_seq_etapa_w
			;

			dt_prev_aux_w	:= dt_prevista_w;
			if (qt_min_prev_w < 0) then
				dt_prevista_w	:= dt_prevista_w + (qt_min_prev_w / 1440);
			end if;

			insert into checkup_etapa(
				nr_sequencia,
				nr_seq_checkup,
				dt_atualizacao,
				nm_usuario,
				nr_seq_etapa,
				dt_prevista,
				cd_pessoa_fisica)
			Values (	nr_seq_etapa_w,
				nr_sequencia_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_w,
				dt_prevista_w,
				CASE WHEN cd_profissional_w='' THEN null  ELSE cd_profissional_w END );
			commit;

			dt_prevista_w	:= dt_prev_aux_w;

			if (qt_min_prev_w > 0) then
				dt_prevista_w := dt_prevista_w + (qt_min_prev_w / 1440);	
			end if;

		END LOOP;
		CLOSE C01;
		end;
	end if;
	end;
elsif (nr_seq_tipo_checkup_p > 0) then
	begin
	nr_seq_tipo_checkup_w := nr_seq_tipo_checkup_p;

	
	select  COUNT(*)
	INTO STRICT	QT_REG_W
	from   tipo_checkup a,
	   empresa_tipo_checkup b,
	   tipo_checkup_lib c,
	   TIPO_CHECKUP_LIB d
	where  a.nr_sequencia = b.nr_seq_tipo_checkup
	and    a.nr_sequencia = c.nr_seq_tipo_checkup
	and   b.cd_empresa    = cd_empresa_w
	and   a.nr_sequencia  = d.nr_seq_tipo_checkup
	and   d.cd_estabelecimento  = cd_estabelecimento_w
	and   a.ie_situacao  = 'A'
	and	a.nr_sequencia	= nr_seq_tipo_checkup_w;
	
	

	
	IF (QT_REG_W	= 0) THEN
		CALL wheb_mensagem_pck.exibir_mensagem_abort(175931);
	END IF;
	
	
	select  COUNT(*)
	INTO STRICT	QT_REG_W
	from   tipo_checkup a,
	   empresa_tipo_checkup b,
	   tipo_checkup_lib c,
	   TIPO_CHECKUP_LIB d
	where  a.nr_sequencia = b.nr_seq_tipo_checkup
	and    a.nr_sequencia = c.nr_seq_tipo_checkup
	and   b.cd_empresa    = cd_empresa_w
	and   a.nr_sequencia  = d.nr_seq_tipo_checkup
	and   d.cd_estabelecimento  = cd_estabelecimento_w
	and   a.ie_situacao  = 'A'
	and	a.nr_sequencia	= nr_seq_tipo_checkup_w
	and (coalesce(b.cd_estabelecimento::text, '') = '' or b.cd_estabelecimento  = cd_estabelecimento_w);
	
	if (QT_REG_W	= 0) then
		begin
		CALL wheb_mensagem_pck.exibir_mensagem_abort(175933);
		end;
	end if;
	
	update	checkup
	set	nr_seq_tipo_checkup 	= nr_seq_tipo_checkup_p
	where	nr_sequencia		= nr_sequencia_p;		
	commit;
	
	open C03;
	loop
	fetch C03 into
		nr_sequencia_w,
		qt_min_prev_w,
		ie_tipo_etapa_w,
		cd_profissional_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		if (ie_tipo_etapa_w = 'R') then
			dt_prevista_w	:= dt_retorno_w + (qt_min_prev_w / 1440);
		end if;
		
		select	nextval('checkup_etapa_seq')
		into STRICT	nr_seq_etapa_w
		;

		dt_prev_aux_w	:= dt_prevista_w;
		if (qt_min_prev_w < 0) then
			dt_prevista_w	:= dt_prevista_w + (qt_min_prev_w / 1440);
		end if;

		insert into checkup_etapa(
			nr_sequencia,
			nr_seq_checkup,
			dt_atualizacao,
			nm_usuario,
			nr_seq_etapa,
			dt_prevista,
			cd_pessoa_fisica)
		Values (	nr_seq_etapa_w,
			nr_sequencia_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_w,
			dt_prevista_w,
			CASE WHEN cd_profissional_w='' THEN null  ELSE cd_profissional_w END );
		commit;

		dt_prevista_w	:= dt_prev_aux_w;

		if (qt_min_prev_w > 0) then
			dt_prevista_w := dt_prevista_w + (qt_min_prev_w / 1440);	
		end if;

	END LOOP;
	CLOSE C03;
	end;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_etapas_checkup ( nr_sequencia_p bigint, NR_SEQ_TIPO_CHECKUP_P bigint default 0, nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

