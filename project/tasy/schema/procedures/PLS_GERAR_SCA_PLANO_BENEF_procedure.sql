-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_sca_plano_benef ( nr_seq_segurado_p bigint, dt_alt_produto_p timestamp, nm_usuario_p text, ie_opcao_p text default null) AS $body$
DECLARE


qt_sca_produto_w		bigint;
nr_seq_plano_w			bigint;
ie_grau_dependencia_w		varchar(2);
qt_idade_limite_w		integer;
nr_seq_plano_adic_w		bigint;
nr_seq_tabela_w			bigint;
nr_seq_sca_plano_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_vinculo_w		bigint;
qt_idade_benef_w		integer;
qt_idade_sca_w			integer;
qt_sca_beneficiario_w		bigint;
dt_contratacao_w		timestamp;
dt_contrato_w			timestamp;
qt_liberada_w			bigint;
ie_lancamento_mensalidade_w	varchar(2);
cd_estabelecimento_w		smallint;
ie_sca_restrito_w		varchar(10);
ie_incluir_sca_w		varchar(10);
nr_seq_proposta_benef_w		bigint;
qt_idade_min_sca_w		bigint;
ie_copiar_sca_plano_w		varchar(1);
nr_seq_segurado_ant_w		bigint;
ie_desconsiderar_idade_w	varchar(10);
ie_regulamentacao_ant_w		varchar(10);
ie_regulamentacao_nova_w	varchar(10);
nr_seq_classificacao_w		pls_plano.nr_seq_classificacao%type;
ie_rescindir_sca_classif_w	pls_sca_classificacao.ie_rescindir_sca_classif%type;
nr_seq_sca_ant_w		pls_sca_vinculo.nr_sequencia%type;
ie_grau_dependencia_benef_w	varchar(1);
qt_regras_parentesco_w		integer;
qt_parentesco_sca_w		integer;
nr_seq_parentesco_w		pls_segurado.nr_seq_parentesco%type;
qt_idade_w			bigint;
dt_rescisao_w			pls_segurado.dt_rescisao%type;
dt_rescisao_titular_w		pls_segurado.dt_rescisao%type;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
ie_data_adesao_sca_w		pls_plano_servico_adic.ie_data_adesao_sca%type;
dt_inclusao_operadora_w		pls_segurado.dt_inclusao_operadora%type;
dt_adesao_sca_w			timestamp;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_grau_dependencia,
		a.qt_idade_limite,
		a.nr_seq_plano_adic,
		a.nr_seq_tabela,
		a.ie_lancamento_mensalidade,
		a.ie_data_adesao_sca
	from	pls_plano_servico_adic	a,
		pls_plano		b
	where	a.nr_seq_plano	= b.nr_sequencia
	and	b.nr_sequencia	= nr_seq_plano_w
	and	(a.nr_seq_plano_adic IS NOT NULL AND a.nr_seq_plano_adic::text <> '')
	and	trunc(coalesce(dt_contrato_w,clock_timestamp())) between trunc(coalesce(a.dt_inicio_vigencia,coalesce(dt_contrato_w,clock_timestamp()))) and fim_dia(coalesce(a.dt_fim_vigencia,coalesce(dt_contrato_w,clock_timestamp())));


BEGIN

ie_copiar_sca_plano_w	:= 'S';

select	nr_seq_plano,
	nr_seq_contrato,
	coalesce(dt_alt_produto_p, dt_contratacao),
	dt_inclusao_operadora,
	nr_seq_pessoa_proposta,
	nr_seq_segurado_ant,
	CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
	dt_rescisao,
	nr_seq_titular
into STRICT	nr_seq_plano_w,
	nr_seq_contrato_w,
	dt_contratacao_w,
	dt_inclusao_operadora_w,
	nr_seq_proposta_benef_w,
	nr_seq_segurado_ant_w,
	ie_grau_dependencia_benef_w,
	dt_rescisao_w,
	nr_seq_titular_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

--Se for liberação do beneficiário dependente, verifica se o titular tem data de rescisão
if (ie_opcao_p = 'L') and (ie_grau_dependencia_benef_w = 'D') then

	select	dt_rescisao
	into STRICT	dt_rescisao_titular_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_titular_w;

	dt_rescisao_w := dt_rescisao_titular_w;
end if;

if (nr_seq_proposta_benef_w > 0) then
	select	max(ie_copiar_sca_plano)
	into STRICT	ie_copiar_sca_plano_w
	from	pls_proposta_beneficiario
	where	nr_sequencia	= nr_seq_proposta_benef_w;
	ie_copiar_sca_plano_w	:= coalesce(ie_copiar_sca_plano_w,'S');
end if;

begin
select	dt_contrato,
	cd_estabelecimento
into STRICT	dt_contrato_w,
	cd_estabelecimento_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_w;
exception
when others then
	dt_contrato_w	:= clock_timestamp();
end;

select	count(1)
into STRICT	qt_sca_produto_w
from	pls_plano_servico_adic a,
	pls_plano		b
where	a.nr_seq_plano	= b.nr_sequencia
and	b.nr_sequencia	= nr_seq_plano_w
and	trunc(clock_timestamp()) between trunc(coalesce(a.dt_inicio_vigencia,clock_timestamp())) and fim_dia(coalesce(a.dt_fim_vigencia,clock_timestamp()));

if (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
	select	max(ie_regulamentacao)
	into STRICT	ie_regulamentacao_nova_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;

	select	max(b.ie_regulamentacao)
	into STRICT	ie_regulamentacao_ant_w
	from	pls_plano	b,
		pls_segurado	a
	where	a.nr_seq_plano	= b.nr_sequencia
	and	a.nr_sequencia	= nr_seq_segurado_ant_w;
end if;

if	(qt_sca_produto_w > 0 AND ie_copiar_sca_plano_w = 'S') then
	open C01;
	loop
	fetch C01 into
		nr_seq_sca_plano_w,
		ie_grau_dependencia_w,
		qt_idade_limite_w,
		nr_seq_plano_adic_w,
		nr_seq_tabela_w,
		ie_lancamento_mensalidade_w,
		ie_data_adesao_sca_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_desconsiderar_idade_w	:= 'N';

		if (ie_data_adesao_sca_w = 'O') then
			dt_adesao_sca_w	:= dt_inclusao_operadora_w;
		else
			dt_adesao_sca_w	:= coalesce(dt_contratacao_w,clock_timestamp());
		end if;

		select	max(nr_seq_classificacao)
		into STRICT	nr_seq_classificacao_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_adic_w;

		/*aaschlote 28/05/2012 - OS 445840*/

		begin
		ie_incluir_sca_w := pls_consisti_sca_cumpriu_ant(nr_seq_segurado_p, nr_seq_plano_adic_w, coalesce(dt_contratacao_w,clock_timestamp()), nm_usuario_p, ie_incluir_sca_w);
		exception
		when others then
			ie_incluir_sca_w	:= 'S';
		end;

		if (ie_incluir_sca_w = 'N') then
			goto final;
		end if;

		/*aaschlote 03/12/2013 OS 646773*/

		if (ie_regulamentacao_nova_w IS NOT NULL AND ie_regulamentacao_nova_w::text <> '') and (ie_regulamentacao_ant_w IS NOT NULL AND ie_regulamentacao_ant_w::text <> '') then
			ie_desconsiderar_idade_w	:= pls_obter_se_desc_idade_sca(nr_seq_sca_plano_w,ie_regulamentacao_ant_w,ie_regulamentacao_nova_w,nr_seq_segurado_ant_w);
		end if;

		select	max(qt_idade_min_sca)
		into STRICT	qt_idade_min_sca_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_adic_w;

		select	(substr(pls_obter_dados_segurado(nr_seq_segurado_p,'ID'),1,5))::numeric
		into STRICT	qt_idade_benef_w
		;

		select	max(qt_idade_limite)
		into STRICT	qt_idade_sca_w
		from	pls_plano_servico_adic
		where	nr_sequencia	= nr_seq_sca_plano_w;

		/*aaschlote 17/04/2012 - OS 436245*/

		begin
		ie_sca_restrito_w	:= pls_obter_sca_produto_restrito(nr_seq_sca_plano_w,nr_seq_segurado_p);
		exception
		when others then
			ie_sca_restrito_w	:= 'N';
		end;

		select	count(1)
		into STRICT	qt_sca_beneficiario_w
		from	pls_sca_vinculo
		where	nr_seq_plano	= nr_seq_plano_adic_w
		and	nr_seq_segurado	= nr_seq_segurado_p;

		qt_parentesco_sca_w := 1;

		if (ie_grau_dependencia_benef_w = 'D') then
			select	count(*)
			into STRICT	qt_regras_parentesco_w
			from	pls_plano_parentesco
			where	nr_seq_plano	= nr_seq_plano_adic_w
			and	ie_situacao	= 'A';

			if (qt_regras_parentesco_w > 0) then
				select	nr_seq_parentesco,
					obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A') qt_idade
				into STRICT	nr_seq_parentesco_w,
					qt_idade_w
				from	pls_segurado
				where	nr_sequencia = nr_seq_segurado_p;

				select	count(*)
				into STRICT	qt_parentesco_sca_w
				from	pls_plano_parentesco
				where	nr_seq_plano		= nr_seq_plano_adic_w
				and	nr_seq_parentesco	= nr_seq_parentesco_w
				and	qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999)
				and	ie_situacao		= 'A';
			end if;
		end if;

		if	(((qt_idade_benef_w <= coalesce(qt_idade_sca_w,qt_idade_benef_w)) and (qt_idade_benef_w >= coalesce(qt_idade_min_sca_w,qt_idade_benef_w))) or (ie_desconsiderar_idade_w = 'S')) and (qt_sca_beneficiario_w = 0) and (ie_sca_restrito_w = 'N') and
			((ie_grau_dependencia_benef_w = ie_grau_dependencia_w) or ( (ie_grau_dependencia_w = 'A') or (coalesce(ie_grau_dependencia_w::text, '') = '') )) and (qt_parentesco_sca_w > 0) then

			select	nextval('pls_sca_vinculo_seq')
			into STRICT	nr_seq_vinculo_w
			;

			insert	into	pls_sca_vinculo(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, nr_seq_segurado, nr_seq_tabela, ie_grau_dependencia,
					ie_dependente, dt_inicio_vigencia, dt_fim_vigencia, qt_idade_limite, nr_seq_plano,
					ie_embutido_produto,nr_seq_plano_origem,ie_lancamento_mensalidade)
				values (	nr_seq_vinculo_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
					nm_usuario_p, nr_seq_segurado_p, nr_seq_tabela_w, ie_grau_dependencia_w,
					'N', dt_adesao_sca_w, dt_rescisao_w, qt_idade_limite_w, nr_seq_plano_adic_w,
					'S', nr_seq_plano_w, ie_lancamento_mensalidade_w);

			if (ie_grau_dependencia_w = 'A') then
				ie_grau_dependencia_w	:= 'B';
			end if;

			update	pls_sca_vinculo
			set	ie_geracao_valores	= ie_grau_dependencia_w
			where	nr_sequencia		= nr_seq_vinculo_w;

			/* Lepinski - OS 333304 - Quando copia os SCAs do produto, DEVE chamar a rotina pls_liberar_vinculo_sca, pois nessa exite tratamento para a data de inclusão do SCA no beneficiário */

			CALL pls_liberar_vinculo_sca(null, null, nr_seq_vinculo_w, 'L', 'N', 'N', nm_usuario_p, cd_estabelecimento_w);

			if (nr_seq_classificacao_w IS NOT NULL AND nr_seq_classificacao_w::text <> '') then
				select	coalesce(max(ie_rescindir_sca_classif),'N')
				into STRICT	ie_rescindir_sca_classif_w
				from	pls_sca_classificacao
				where	nr_sequencia = nr_seq_classificacao_w;

				if (ie_rescindir_sca_classif_w = 'S') then
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_sca_ant_w
					from	pls_plano	b,
						pls_sca_vinculo	a
					where	b.nr_sequencia 		= a.nr_seq_plano
					and	b.nr_seq_classificacao	= nr_seq_classificacao_w
					and	a.nr_seq_segurado	= nr_seq_segurado_p
					and	a.nr_sequencia 		<> nr_seq_vinculo_w;

					if (nr_seq_sca_ant_w IS NOT NULL AND nr_seq_sca_ant_w::text <> '') then
						update 	pls_sca_vinculo
						set	dt_fim_vigencia	= dt_contratacao_w - 1,
							nm_usuario	= nm_usuario_p,
							dt_atualizacao	= clock_timestamp()
						where	nr_sequencia 	= nr_seq_sca_ant_w;
					end if;
				end if;
			end if;

			select	count(1)
			into STRICT	qt_liberada_w
			from	pls_sca_vinculo
			where	nr_sequencia	= nr_seq_vinculo_w
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

			if (qt_liberada_w > 0) then
				CALL pls_duplicar_tabela_preco_sca(nr_seq_contrato_w, nr_seq_vinculo_w, nr_seq_tabela_w, 'N', nm_usuario_p);
			end if;
		end if;
		<<final>>
		nr_seq_sca_plano_w	:= nr_seq_sca_plano_w;
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_sca_plano_benef ( nr_seq_segurado_p bigint, dt_alt_produto_p timestamp, nm_usuario_p text, ie_opcao_p text default null) FROM PUBLIC;

