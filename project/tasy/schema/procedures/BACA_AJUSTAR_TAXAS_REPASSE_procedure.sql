-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_ajustar_taxas_repasse () AS $body$
DECLARE


ds_valor_w	varchar(255);

tx_anestesista_w	proc_criterio_repasse.tx_anestesista%type;
tx_auxiliares_w		proc_criterio_repasse.tx_auxiliares%type;
tx_custo_operacional_w	proc_criterio_repasse.tx_custo_operacional%type;
tx_materiais_w		proc_criterio_repasse.tx_materiais%type;
tx_medico_w		proc_criterio_repasse.tx_medico%type;
tx_procedimento_w	proc_criterio_repasse.tx_procedimento%type;
nr_seq_proc_crit_w	proc_criterio_repasse.nr_sequencia%type;

c01 CURSOR FOR
SELECT	coalesce(a.tx_anestesista,0),
	coalesce(a.tx_auxiliares,0),
	coalesce(a.tx_custo_operacional,0),
	coalesce(a.tx_materiais,0),
	coalesce(a.tx_medico,0),
	coalesce(a.tx_procedimento,0),
	a.nr_sequencia
from	proc_criterio_repasse a
where	a.ie_forma_calculo	= 'Q';


BEGIN

open c01;
loop
fetch c01 into
	tx_anestesista_w,
	tx_auxiliares_w,
	tx_custo_operacional_w,
	tx_materiais_w,
	tx_medico_w,
	tx_procedimento_w,
	nr_seq_proc_crit_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (tx_anestesista_w <> 0) then
		ds_valor_w	:= length(trunc(tx_anestesista_w));

		if (ds_valor_w < 12) then
			update	proc_criterio_repasse
			set	tx_anestesista	= (tx_anestesista * 100),
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= 'Tasy'
			where	nr_sequencia	= nr_seq_proc_crit_w;
		end if;
	end if;

	if (tx_auxiliares_w <> 0) then
		ds_valor_w	:= length(trunc(tx_auxiliares_w));

		if (ds_valor_w < 12) then
			update	proc_criterio_repasse
			set	tx_auxiliares	= (tx_auxiliares * 100),
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= 'Tasy'
			where	nr_sequencia	= nr_seq_proc_crit_w;
		end if;
	end if;

	if (tx_custo_operacional_w <> 0) then
		ds_valor_w	:= length(trunc(tx_custo_operacional_w));

		if (ds_valor_w < 12) then
			update	proc_criterio_repasse
			set	tx_custo_operacional	= (tx_custo_operacional * 100),
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= 'Tasy'
			where	nr_sequencia	= nr_seq_proc_crit_w;
		end if;
	end if;

	if (tx_materiais_w <> 0) then
		ds_valor_w	:= length(trunc(tx_materiais_w));

		if (ds_valor_w < 12) then
			update	proc_criterio_repasse
			set	tx_materiais	= (tx_materiais * 100),
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= 'Tasy'
			where	nr_sequencia	= nr_seq_proc_crit_w;
		end if;
	end if;

	if (tx_medico_w <> 0) then
		ds_valor_w	:= length(trunc(tx_medico_w));

		if (ds_valor_w < 12) then
			update	proc_criterio_repasse
			set	tx_medico	= (tx_medico * 100),
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= 'Tasy'
			where	nr_sequencia	= nr_seq_proc_crit_w;
		end if;
	end if;

	if (tx_procedimento_w <> 0) then
		ds_valor_w	:= length(trunc(tx_procedimento_w));

		if (ds_valor_w < 12) then
			update	proc_criterio_repasse
			set	tx_procedimento	= (tx_procedimento * 100),
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= 'Tasy'
			where	nr_sequencia	= nr_seq_proc_crit_w;
		end if;
	end if;

	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_ajustar_taxas_repasse () FROM PUBLIC;

