-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ptu_nota_servico (( nr_seq_pls_fatura_p pls_fatura_evento.nr_seq_fatura%type, nr_seq_fatura_conta_p pls_fatura_conta.nr_sequencia%type, nr_seq_cobranca_p ptu_nota_cobranca.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_interface_p interface.cd_interface%type, nr_seq_cobranca_rrs_p ptu_nota_cobranca_rrs.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type default null, nr_seq_conta_sus_p pls_processo_conta.nr_sequencia%type default null) is -- Versao PTU
 ie_versao_w bigint) RETURNS varchar AS $body$
DECLARE


hr_hora_w	varchar(8) := hr_hora_p;
BEGIN
-- Hora inicial deve aumentar 1 minuto
if (hr_hora_w IS NOT NULL AND hr_hora_w::text <> '') then
	if (ie_forc_min_p = 'N') then
		if ((substr(hr_hora_w, 7, 2))::numeric  + 1 <= 59) then -- Incrementa ate 59 segundos
			hr_hora_w := substr(hr_hora_w, 1, 6) || lpad((substr(hr_hora_w, 7, 2))::numeric  + 1, 2, '0');

		elsif ((substr(hr_hora_w, 4, 2))::numeric  + 1 <= 59) then -- Incrementa ate 59 minutos
			hr_hora_w := substr(hr_hora_w, 1, 3) || lpad((substr(hr_hora_w, 4, 2))::numeric  + 1, 2, '0') || ':00';

		elsif ((substr(hr_hora_w, 1, 2))::numeric  + 1 <= 23) then -- Incremente ate 23 horas
			hr_hora_w := lpad((substr(hr_hora_w, 1, 2))::numeric  + 1, 2, '0') || ':00:00';
		else
			hr_hora_w := '00:00:00'; -- Meia noite
		end if;

	elsif (ie_forc_min_p = 'S') then -- Hora inicial deve diminuir 1 minuto
		if ((substr(hr_hora_w, 1, 2))::numeric  = 0) and ((substr(hr_hora_w, 4, 2))::numeric  = 0) then -- se for 00:00:00 altera a hora para 23:59
			hr_hora_w := '23:59:' || substr(hr_hora_w, 7, 5);

		elsif ((substr(hr_hora_w, 4, 2))::numeric  - 1 >= 0) then -- decrementa ate 00 minutos
			hr_hora_w := substr(hr_hora_w, 1, 3) || lpad((substr(hr_hora_w, 4, 2))::numeric  - 1, 2, '0') || ':' || substr(hr_hora_w, 7, 2);

		elsif ((substr(hr_hora_w, 1, 2))::numeric  - 1 >= 0) then -- decrementa ate 00 horas
			hr_hora_w := lpad((substr(hr_hora_w, 1, 2))::numeric  - 1, 2, '0') || ':59:' || substr(hr_hora_w, 7, 2);
		else
			hr_hora_w := '00:00:00'; -- Meia noite
		end if;
	end if;
end if;

return hr_hora_w;

end;

procedure tratar_tabela_codigo_generico(	cd_servico_p		in ptu_nota_servico.cd_servico%type,
						ie_tipo_tabela_p	in out ptu_nota_servico.ie_tipo_tabela%type) is
begin

if (cd_servico_p in ('99999927', '99999935', '99999943')) then
	select	CASE WHEN ie_tipo_tabela_p=5 THEN  2 WHEN ie_tipo_tabela_p=6 THEN  3  ELSE ie_tipo_tabela_p END
	into STRICT	ie_tipo_tabela_p
	;
end if;

end;

procedure atualizar_regra_campos_opme(	nr_seq_conta_p			pls_conta.nr_sequencia%type,
					nr_seq_conta_mat_p		pls_conta_mat.nr_sequencia%type,
					nr_seq_conta_proc_p		pls_conta_proc.nr_sequencia%type,
					nr_seq_material_p		pls_material.nr_sequencia%type,
					ie_data_conv_mat_unimed_p	pls_parametro_faturamento.ie_data_conv_mat_unimed%type,
					dt_item_p			date,
					ie_regra_cpf_cnpj_forn_p	varchar2,
					ie_regra_pag_forn_p		varchar2,
					ie_regra_nome_forn_p		varchar2,
					ie_regra_nota_forn_p		varchar2) is

nr_seq_prestador_pgto_forn_w		pls_conta_medica_resumo.nr_seq_prestador_pgto%type;
ie_tipo_relacao_w			pls_prestador.ie_tipo_relacao%type;
nr_seq_mat_unimed_opme_w		pls_material_unimed.nr_sequencia%type;
cd_material_ops_w			pls_material.cd_material_ops%type;
cd_material_a900_w			pls_material_unimed.cd_material%type;
nr_seq_material_w			pls_material.nr_sequencia%type := nr_seq_material_p;
ie_produto_w				pls_material_unimed.ie_produto%type;
nr_seq_material_unimed_ww		pls_material.nr_seq_material_unimed%type;

begin
	if (ie_versao_w >= 63) then
		if (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
			select	max(nr_seq_prestador_pgto)
			into STRICT	nr_seq_prestador_pgto_forn_w
			from	pls_conta_medica_resumo
			where	nr_seq_conta		= nr_seq_conta_p
			and	nr_seq_conta_mat	= nr_seq_conta_mat_p
			and	ie_situacao		= 'A';

		elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
			select	max(nr_seq_prestador_pgto)
			into STRICT	nr_seq_prestador_pgto_forn_w
			from	pls_conta_medica_resumo
			where	nr_seq_conta		= nr_seq_conta_p
			and	nr_seq_conta_proc	= nr_seq_conta_proc_p
			and	ie_situacao		= 'A';
		end if;
	end if;

	if (coalesce(nr_seq_prestador_pgto_forn_w::text, '') = '') then
		select	max(nr_seq_prest_fornec)
		into STRICT	nr_seq_prestador_pgto_forn_w
		from	pls_conta_mat
		where	nr_sequencia = nr_seq_conta_mat_p;

		if (ie_versao_w >= 63) and (coalesce(nr_seq_prestador_pgto_forn_w::text, '') = '') then
			nr_seq_prestador_pgto_forn_w := nr_seq_prestador_exec_w;
		end if;
	end if;

	cd_material_ops_w := pls_obter_seq_codigo_material(nr_seq_material_p, null); -- Codigo PLS_MATERIAL.CD_MATERIAL_OPS
	-- 'OPS - Gestao de Operadora > Parametros da OPS > Faturamento', campo 'Data conversao material PTU'
	if (ie_data_conv_mat_unimed_p = 'DA') then -- Data atual
		SELECT * FROM pls_obter_mat_a900_vigente(nr_seq_material_w, clock_timestamp(), cd_material_a900_w, null) INTO STRICT nr_seq_material_w, cd_material_a900_w; -- Codigo PLS_MATERIAL_UNIMED.CD_MATERIAL
	else -- Data item
		SELECT * FROM pls_obter_mat_a900_vigente(nr_seq_material_w, dt_item_p, cd_material_a900_w, null) INTO STRICT nr_seq_material_w, cd_material_a900_w; -- Codigo PLS_MATERIAL_UNIMED.CD_MATERIAL
	end if;

	if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
		select	max(nr_seq_tuss_mat_item),
			max(nr_seq_material_unimed)
		into STRICT	nr_seq_tuss_mat_item_w,
			nr_seq_material_unimed_ww
		from	pls_material
		where	nr_sequencia = nr_seq_material_p;
	end if;

	select	max(ie_tipo_relacao),
		max(cd_cgc),
		max(cd_pessoa_fisica)
	into STRICT	ie_tipo_relacao_w,
		nr_cnpj_fornecedor_w,
		cd_pessoa_fisica_fornec_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_pgto_forn_w;

	nm_fornecedor_w := substr(pls_obter_dados_prestador(nr_seq_prestador_pgto_forn_w, 'N'), 1, 70);

	if (coalesce(nr_cnpj_fornecedor_w::text, '') = '') and (cd_pessoa_fisica_fornec_w IS NOT NULL AND cd_pessoa_fisica_fornec_w::text <> '') then
		select	max(nr_cpf)
		into STRICT	nr_cnpj_fornecedor_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_fornec_w;

		nr_cnpj_fornecedor_w := lpad(nr_cnpj_fornecedor_w, 14, '0');
	end if;

	if (ie_data_conv_mat_unimed_p = 'DI') and (nr_seq_material_unimed_ww IS NOT NULL AND nr_seq_material_unimed_ww::text <> '') and (cd_material_a900_w IS NOT NULL AND cd_material_a900_w::text <> '') then
		select	max(a.dt_inicio_vigencia_icms)
		into STRICT	dt_inicio_vig_mat_w
		from	pls_material_unimed 		c,
			pls_lote_imp_mat_uni_reg 	b,
			pls_lote_imp_mat_unimed		a
		where	a.nr_sequencia			= b.nr_seq_lote
		and	b.nr_seq_mat_unimed		= c.nr_sequencia
		and	c.cd_material			= cd_material_a900_w
		and	a.dt_inicio_vigencia_icms 	<= dt_item_p;

		if (dt_inicio_vig_mat_w IS NOT NULL AND dt_inicio_vig_mat_w::text <> '') then
			select	max(substr(nm_fabricante, 1,50)),
				max(b.ie_produto)
			into STRICT	det_reg_anvisa_w,
				ie_produto_w
			from	pls_material_unimed 		c,
				pls_lote_imp_mat_uni_reg 	b,
				pls_lote_imp_mat_unimed		a
			where	a.nr_sequencia			= b.nr_seq_lote
			and	b.nr_seq_mat_unimed		= c.nr_sequencia
			and	c.cd_material			= cd_material_a900_w
			and	a.dt_inicio_vigencia_icms	= dt_inicio_vig_mat_w;

			if (coalesce(det_reg_anvisa_w::text, '') = '') then
				select	max(substr(nm_importador, 1,50))
				into STRICT	det_reg_anvisa_w
				from	pls_material_unimed 		c,
					pls_lote_imp_mat_uni_reg 	b,
					pls_lote_imp_mat_unimed		a
				where	a.nr_sequencia			= b.nr_seq_lote
				and	b.nr_seq_mat_unimed		= c.nr_sequencia
				and	c.cd_material			= cd_material_a900_w
				and	a.dt_inicio_vigencia_icms	= dt_inicio_vig_mat_w;
			end if;
		end if;
	else	
		select	max(nr_sequencia)
		into STRICT	nr_seq_mat_unimed_opme_w
		from	pls_material_unimed
		where	cd_material = cd_material_a900_w;

		if (nr_seq_mat_unimed_opme_w IS NOT NULL AND nr_seq_mat_unimed_opme_w::text <> '') then
			select	max(substr(nm_fabricante, 1,50)),
				max(ie_produto)
			into STRICT	det_reg_anvisa_w,
				ie_produto_w
			from	pls_material_unimed
			where	nr_sequencia = nr_seq_mat_unimed_opme_w;

			if (coalesce(det_reg_anvisa_w::text, '') = '') then
				select	max(substr(nm_importador, 1,50))
				into STRICT	det_reg_anvisa_w
				from	pls_material_unimed
				where	nr_sequencia = nr_seq_mat_unimed_opme_w;
			end if;
		end if;
		
		if (coalesce(det_reg_anvisa_w::text, '') = '') and (nr_seq_material_unimed_ww IS NOT NULL AND nr_seq_material_unimed_ww::text <> '') then
			select	max(substr(nm_fabricante, 1,50)),
				max(ie_produto)
			into STRICT	det_reg_anvisa_w,
				ie_produto_w
			from	pls_material_unimed
			where	nr_sequencia = nr_seq_material_unimed_ww
			and	coalesce(ie_opme,'N') = 'S';

			if (coalesce(det_reg_anvisa_w::text, '') = '') then
				select	max(substr(nm_importador, 1,50))
				into STRICT	det_reg_anvisa_w
				from	pls_material_unimed
				where	nr_sequencia = nr_seq_material_unimed_ww
				and	coalesce(ie_opme,'N') = 'S';
			end if;
		end if;
	end if;

	select 	coalesce(max(ie_rede_opme), 'N') ie_rede_opme
	into STRICT	ie_rede_opme_w
	from	pls_parametro_faturamento
	where	cd_estabelecimento = cd_estabelecimento_w;

	--IE_TIPO_RELACAO_W
	-- F - Fornecedor
	-- P - Rede propria
	if	((ie_tipo_relacao_w = 'F') or (ie_rede_opme_w = 'S' AND ie_tipo_relacao_w = 'P')) then
		id_pag_forn_w := '1';

		select	substr(max(nr_nota_fiscal), 1, 20)
		into STRICT	nr_nota_fiscal_forn_w
		from	pls_conta_mat
		where	nr_sequencia = nr_seq_conta_mat_p;
	else
		id_pag_forn_w		:= '2';
		nr_nota_fiscal_forn_w	:= '';
	end if;

	-- Verifica se o A900 e OPM
	if (ie_produto_w not in (2, 3, 4, 5)) then
		if (ie_regra_cpf_cnpj_forn_p = 'N') then
			nr_cnpj_fornecedor_w := null;
		end if;

		if (ie_regra_pag_forn_p = 'N') then
			id_pag_forn_w := '0';
		end if;

		if (ie_regra_nome_forn_p = 'N') then
			nm_fornecedor_w := null;
		end if;

		if (ie_regra_nota_forn_p = 'N') then
			nr_nota_fiscal_forn_w := null;
		end if;
	end if;

	-- Regra: Obrigatorio em caso de cobranca de orteses, proteses e materiais especiais, quando for utilizado codigo de material ainda nao cadastrado na TUSS. Demais casos, preencher com brancos.
	if (ie_versao_w = 70) and (nr_seq_tuss_mat_item_w IS NOT NULL AND nr_seq_tuss_mat_item_w::text <> '') then
		det_reg_anvisa_w := null;
	end if;

	nm_fornecedor_w		:= ptu_somente_caracter_permitido(nm_fornecedor_w, 'ANS');
	det_reg_anvisa_w	:= ptu_somente_caracter_permitido(det_reg_anvisa_w, 'ANS');
	nr_nota_fiscal_forn_w	:= ptu_somente_caracter_permitido(nr_nota_fiscal_forn_w, 'ANS');

end;

begin

if (coalesce(nr_seq_conta_sus_p::text, '') = '') then
	-- verifica se veio de reembolso
	if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then
		select	c.nr_seq_fatura,
			c.nr_nota,
			c.nr_lote,
			c.dt_protocolo,
			c.dt_alta,
			coalesce(nr_seq_conta_p, c.nr_seq_conta),
			c.cd_excecao,
			c.dt_atendimento,
			c.tp_nota,
			c.nr_ver_tiss,
			f.cd_estabelecimento,
			f.cd_unimed_destino,
			f.nr_seq_pls_fatura,
			l.nr_seq_congenere,
			f.ie_tipo_exportacao,
			coalesce(f.ie_tipo_cobranca_fatura, 'C')
		into STRICT	nr_seq_fatura_w,
			nr_nota_w,
			nr_lote_w,
			dt_protocolo_w,
			dt_alta_w,
			nr_seq_conta_w,
			cd_excecao_w,
			dt_atendimento_nota_w,
			tp_nota_w,
			nr_ver_tiss_w,
			cd_estabelecimento_w,
			cd_cooperativa_w,
			nr_seq_pls_fatura_w,
			nr_seq_congenere_fat_w,
			ie_tipo_exportacao_w,
			ie_tipo_cobranca_fatura_w
		from	ptu_nota_cobranca	c,
			ptu_fatura		f,
			pls_fatura		l
		where	f.nr_sequencia	= c.nr_seq_fatura
		and	l.nr_sequencia	= f.nr_seq_pls_fatura
		and	c.nr_sequencia	= nr_seq_cobranca_p;
	else

		select	a.nr_seq_fatura,
			a.nr_nota,
			a.nr_lote,
			c.dt_protocolo,
			null dt_alta,
			coalesce(nr_seq_conta_p, a.nr_seq_conta),
			null cd_excecao,
			a.dt_reembolso dt_atendimento,
			ptu_obter_tp_nota(a.nr_seq_conta) tp_nota,
			a.nr_nota_numerico,
			coalesce(id_reembolso_sus,'1'),
			f.cd_estabelecimento,
			f.cd_unimed_destino,
			f.nr_seq_pls_fatura,
			l.nr_seq_congenere,
			f.ie_tipo_exportacao,
			coalesce(f.ie_tipo_cobranca_fatura, 'C')
		into STRICT	nr_seq_fatura_w,
			nr_nota_w,
			nr_lote_w,
			dt_protocolo_w,
			dt_alta_w,
			nr_seq_conta_w,
			cd_excecao_w,
			dt_atendimento_nota_w,
			tp_nota_w,
			nr_nota_numerico_w,
			id_reembolso_sus_w,
			cd_estabelecimento_w,
			cd_cooperativa_w,
			nr_seq_pls_fatura_w,
			nr_seq_congenere_fat_w,
			ie_tipo_exportacao_w,
			ie_tipo_cobranca_fatura_w
		from	ptu_nota_cobranca_rrs	a,
			pls_conta		b,
			pls_protocolo_conta	c,
			ptu_fatura 		f,
			pls_fatura		l
		where	b.nr_sequencia	= a.nr_seq_conta
		and	c.nr_sequencia	= b.nr_seq_protocolo
		and	f.nr_sequencia	= a.nr_seq_fatura
		and	l.nr_sequencia	= f.nr_seq_pls_fatura
		and	a.nr_sequencia	= nr_seq_cobranca_rrs_p;

	end if; -- fim se veio de reembolso
	-- obter a data de referencia do ptu 11.3
	select	coalesce(max(dt_ref_ptu_11_3),to_date('01/10/2020','dd/mm/yyyy'))
	into STRICT 	dt_ref_ptu_11_3_w
	from	pls_visible_false
	where	cd_estabelecimento = cd_estabelecimento_w;

	ie_versao_w	:= somente_numero(coalesce(ptu_obter_versao_dominio('A500', cd_interface_p), ''));
	ie_versao_xml_w	:= somente_numero(ptu_batch_xml_pck.obter_versao_dominio( cd_estabelecimento_w, nr_seq_congenere_fat_w, null, clock_timestamp(), 'A500'))*100;

	if (ie_versao_xml_w > 0) then
		ie_versao_w := ie_versao_xml_w;
	end if;

	select	count(1)
	into STRICT	qt_regra_ptu_mat_w
	from	pls_regra_campo_ptu_mat
	where	cd_estabelecimento = cd_estabelecimento_w;

	select	max(cd_cgc)
	into STRICT	cd_cgc_destino_w
	from	pls_congenere
	where	lpad(cd_cooperativa, 4, '0') = cd_cooperativa_w;

	select	max(sg_estado)
	into STRICT 	sg_estado_dest_w
	from 	pessoa_juridica
	where 	cd_cgc = cd_cgc_destino_w;
	
	select	max(coalesce(ie_item_unico_partic, 'N'))
	into STRICT	ie_item_unico_partic_w
	from	pls_parametro_faturamento
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	select	coalesce(coalesce(c.nr_seq_ops_congenere, c.nr_seq_congenere),p.nr_seq_congenere),
		b.nr_seq_prestador_exec,
		c.nr_sequencia,
		(select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
		from	pls_fatura pf,
			pls_fatura_evento pe,
			pls_fatura_conta pc
		where	pf.nr_sequencia	= pe.nr_seq_fatura
		and	pe.nr_sequencia	= pc.nr_seq_fatura_evento
		and	pc.nr_seq_conta	= b.nr_sequencia
		and	pf.ie_cancelamento = 'C'
		and	(pf.dt_geracao_ptu IS NOT NULL AND pf.dt_geracao_ptu::text <> '')),
		b.cd_guia_ok,
		trim(both i.nr_ndr_glosada) nr_ndr_glosada,
		trim(both i.nr_lote_glosado) nr_lote_glosado,
		trim(both i.nr_nota_glosada) nr_nota_glosada,
		trim(both i.nr_fatura_glosada) nr_fatura_glosada
	into STRICT	nr_seq_congenere_w,
		nr_seq_prestador_exec_w,
		nr_seq_segurado_w,
		ie_atend_env_cancelado_w,
		cd_guia_ok_w,
		nr_ndr_glosada_w,
		nr_lote_glosado_w,
		nr_nota_glosada_w,
		nr_fatura_glosada_w
	FROM pls_protocolo_conta p, pls_segurado c, pls_conta b
LEFT OUTER JOIN pls_conta_inf_ptu i ON (b.nr_sequencia = i.nr_seq_conta)
WHERE c.nr_sequencia		= b.nr_seq_segurado and p.nr_sequencia		= b.nr_seq_protocolo  and b.nr_sequencia		= nr_seq_conta_w;

	ie_tipo_intercambio_w := 'A';
	
	if (coalesce(nr_seq_congenere_w::text, '') = '') then
		--Recebe a congenere da pls_fatura (tratamento para quando for remido)
		nr_seq_congenere_w := nr_seq_congenere_fat_w;
	end if;

	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
		-- Obter a UF da operadora  - Tasy
		select	coalesce(max(sg_estado), 'X')
		into STRICT	sg_estado_w
		from	pessoa_juridica
		where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
					from	pls_outorgante
					where	cd_estabelecimento = cd_estabelecimento_w);

		-- Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo
		select	coalesce(max(a.sg_estado), 'X'),
			coalesce(max(b.ie_nacional), 'N')
		into STRICT	sg_estado_int_w,
			ie_nacional_w
		from	pessoa_juridica	a,
			pls_congenere	b
		where	a.cd_cgc	= b.cd_cgc
		and	b.nr_sequencia	= nr_seq_congenere_w;

		if (ie_nacional_w = 'S') then
			ie_tipo_intercambio_w := 'N';
		elsif (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
			if (sg_estado_w = sg_estado_int_w) then
				ie_tipo_intercambio_w := 'E';
			else
				ie_tipo_intercambio_w := 'N';
			end if;
		else
			ie_tipo_intercambio_w := 'A';
		end if;
	end if;

	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	max(a.ie_tipo_contrato)
		into STRICT	ie_tipo_contrato_w
		from	pls_intercambio		a,
			pls_contrato_pagador 	b,
			pls_segurado 		c
		where	a.nr_sequencia		= b.nr_seq_pagador_intercambio
		and	b.nr_sequencia		= c.nr_seq_pagador
		and	c.nr_sequencia		= nr_seq_segurado_w;

		-- Quando for PEA, tem que tratar como Nacional
		if (ie_tipo_contrato_w = 'S') then
			ie_tipo_intercambio_w := 'N';
		end if;
	end if;

	begin
		select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN  cd_cgc  ELSE obter_dados_pf(cd_pessoa_fisica, 'CPF') END ,
			substr(CASE WHEN coalesce(cd_cgc::text, '') = '' THEN  'F'  ELSE 'J' END , 1, 2),
			trim(both substr(upper(elimina_acentos(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc), 'S')), 1, 70)),
			substr(pls_obter_se_cooperado_ativo(cd_pessoa_fisica, dt_atendimento_nota_w, null), 1, 1),
			substr(coalesce(cd_prest_a400, cd_prestador), 1, 8),
			substr(pls_obter_cnes_prestador(nr_sequencia), 1, 7),
			substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM'), 1, 6),
			cd_pessoa_fisica,
			ie_prestador_alto_custo,
			ie_tipo_rede_min_ptu
		into STRICT	nr_cnpj_cpf_w,
			ie_tipo_pessoa_pres_w,
			nm_prestador_w,
			ie_rede_propria_w,
			cd_prestador_w,
			cd_cnes_prest_exec_w,
			cd_municipio_w,
			cd_pessoa_prest_exec_w,
			ie_prestador_alto_custo_w,
			tipo_rede_min_w
		from	pls_prestador
		where	nr_sequencia = nr_seq_prestador_exec_w;
	exception
	when others then
		nr_cnpj_cpf_w			:= null;
		ie_tipo_pessoa_pres_w		:= null;
		nm_prestador_w			:= null;
		ie_rede_propria_w		:= null;
		cd_prestador_w			:= null;
		cd_cnes_prest_exec_w		:= null;
		cd_municipio_w			:= null;
		cd_pessoa_prest_exec_w		:= null;
		ie_prestador_alto_custo_w	:= null;
		tipo_rede_min_w			:= null;
	end;

	-- Guardar o CPF/CNPJ do prestador executor da conta
	nr_cnpj_cpf_prest_exec_w := nr_cnpj_cpf_w;

	select	max(nr_seq_tipo)
	into STRICT	nr_seq_tipo_prest_w
	from	pls_prestador_tipo
	where	nr_seq_prestador = nr_seq_prestador_exec_w
	and	dt_atendimento_nota_w between coalesce(dt_inicio_vigencia, dt_atendimento_nota_w - 1) and coalesce(dt_fim_vigencia, dt_atendimento_nota_w + 1);

	if (coalesce(nr_seq_tipo_prest_w::text, '') = '') then
		select	max(s.nr_seq_tipo_prestador)
		into STRICT	nr_seq_tipo_prest_w
		from	pls_tipo_prestador	f,
			pls_prestador		s
		where	s.nr_sequencia		= nr_seq_prestador_exec_w
		and	f.nr_sequencia		= s.nr_seq_tipo_prestador
		and	(f.ie_tipo_ptu IS NOT NULL AND f.ie_tipo_ptu::text <> '');
	end if;

	if (nr_seq_tipo_prest_w IS NOT NULL AND nr_seq_tipo_prest_w::text <> '') then
		select	ie_tipo_ptu
		into STRICT	ie_tipo_prestador_w
		from	pls_tipo_prestador
		where	nr_sequencia = nr_seq_tipo_prest_w;
	end if;

	if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then
		begin
			select	a.nr_seq_regra_fat,
				a.nr_sequencia,
				a.dt_geracao,
				coalesce(c.ie_conta_fechada, 'N')
			into STRICT	nr_seq_regra_fat_w,
				nr_seq_lote_fat_w,
				dt_geracao_lote_w,
				ie_conta_fechada_w
			from	pls_regra_faturamento	c,
				pls_lote_faturamento 	a,
				pls_fatura 		b
			where	a.nr_sequencia		= b.nr_seq_lote
			and	c.nr_sequencia		= a.nr_seq_regra_fat
			and	b.nr_sequencia		= nr_seq_pls_fatura_w;
		exception
		when others then
			nr_seq_regra_fat_w 	:= null;
			nr_seq_lote_fat_w	:= null;
			dt_geracao_lote_w	:= null;
			ie_conta_fechada_w	:= null;
		end;
	end if;

	if (tp_nota_w = 3) then -- Se internacao
		if (ie_novo_pos_estab_w = 'N') then
			select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_diaria_w
			from	pls_conta_proc			p,
				pls_conta_pos_estabelecido	e
			where	p.nr_sequencia		= e.nr_seq_conta_proc
			and	p.nr_seq_conta		= nr_seq_conta_w
			and	e.nr_seq_lote_fat	= nr_seq_lote_fat_w
			and	p.ie_tipo_despesa	= '3';

			if (ie_diaria_w = 'N') then
				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_diaria_w
				from	pls_conta_pos_pac_fat		pp,
					pls_conta_pos_estabelecido	pe,
					procedimento			p
				where	pe.nr_sequencia		= pp.nr_seq_conta_pos
				and	pp.cd_procedimento	= p.cd_procedimento
				and	pp.ie_origem_proced	= p.ie_origem_proced
				and	pe.nr_seq_conta		= nr_seq_conta_w
				and	pe.nr_seq_lote_fat	= nr_seq_lote_fat_w
				and	p.ie_classificacao	= '3';
			end if;

		elsif (ie_novo_pos_estab_w = 'S') then
			select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_diaria_w
			from	pls_conta_proc			p,
				pls_conta_pos_proc		e
			where	p.nr_sequencia		= e.nr_seq_conta_proc
			and	p.nr_seq_conta		= nr_seq_conta_w
			and	e.nr_seq_lote_fat	= nr_seq_lote_fat_w
			and	p.ie_tipo_despesa	= '3';

			if (ie_diaria_w = 'N') then
				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_diaria_w
				from	pls_conta_pos_pac_fat	pp,
					pls_conta_pos_proc	pe,
					procedimento		p
				where	pe.nr_sequencia		= pp.nr_seq_pos_proc
				and	pp.cd_procedimento	= p.cd_procedimento
				and	pp.ie_origem_proced	= p.ie_origem_proced
				and	pe.nr_seq_conta		= nr_seq_conta_w
				and	pe.nr_seq_lote_fat	= nr_seq_lote_fat_w
				and	p.ie_classificacao	= '3';
			end if;
		end if;
	end if;

	begin
		select 	coalesce(max(ie_data_conv_mat_unimed), 'DA') ie_data_conv_mat_unimed,
			coalesce(max(ie_gerar_fat_contab), 'N'),
			coalesce(max(ie_via_acesso_mult), 'N'),
			coalesce(max(ie_agrupar_atendimento), 'N')
		into STRICT	ie_data_conv_mat_unimed_w,
			ie_gerar_fat_contab_w,
			ie_via_acesso_mult_w,
			ie_agrupar_atendimento_w
		from	pls_parametro_faturamento
		where	cd_estabelecimento = cd_estabelecimento_w;

		select 	coalesce(max(ie_material_intercambio), 'S'),
			coalesce(max(ie_porte_anestesico_fat), 'PP'),
			coalesce(max(ie_cnes_exec_fat), 'CC')
		into STRICT	ie_material_intercambio_w,
			ie_porte_anestesico_fat_w,
			ie_cnes_exec_fat_w
		from 	pls_parametros
		where 	cd_estabelecimento = cd_estabelecimento_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182468);
	end;

	cd_unim_prestador_w	:= pls_obter_unimed_estab(cd_estabelecimento_w);
	cd_unimed_pre_req_w	:= cd_unim_prestador_w;

	select	count(1)
	into STRICT	qt_registros_w
	from	pls_conv_ptu_exc_atend LIMIT 1;

	select	count(1)
	into STRICT	qt_cad_mat_a900_w
	from	pls_material_a900 LIMIT 1;

	for r_c01_w in c01( nr_seq_fatura_conta_p ) loop
		id_pag_forn_w		:= '0';

		if (ie_gerar_fat_contab_w = 'N') then
			qt_agrup_contab_w := 0;
		else
			qt_agrup_contab_w := r_c01_w.qt_agrup_contab;
		end if;

		vl_faturado_tot_w := r_c01_w.vl_faturado + r_c01_w.vl_faturado_ndc;

		for r_c02_w in c02(	r_c01_w.nr_seq_conta_pos_estab,		r_c01_w.nr_seq_pos_proc,		r_c01_w.nr_seq_pos_mat,
					r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
					r_c01_w.nr_seq_conta,			cd_guia_ok_w,				nr_seq_segurado_w,
					ie_tipo_cobranca_fatura_w) loop
			nr_seq_grau_partic_w		:= r_c02_w.nr_seq_grau_partic;
			dt_item_w			:= r_c02_w.dt_item;
			dt_procedimento_w		:= r_c02_w.dt_item;
			ie_tipo_despesa_w		:= r_c02_w.ie_tipo_despesa;
			cd_procedimento_w		:= r_c02_w.cd_procedimento;
			ie_origem_proced_w		:= r_c02_w.ie_origem_proced;
			qt_procedimento_w		:= r_c02_w.qt_procedimento;
			cd_cnes_w			:= r_c02_w.cd_cnes;
			tx_procedimento_w		:= r_c02_w.tx_procedimento;
			tx_item_pos_w			:= r_c02_w.tx_item_pos;
			ie_tx_item_manual_w		:= r_c02_w.ie_tx_item_manual;
			ie_ato_cooperado_w		:= r_c02_w.ie_ato_cooperado;
			cd_medico_exec_partic_w		:= r_c02_w.cd_medico_exec_partic;
			sg_conselho_imp_w		:= r_c02_w.sg_conselho_imp;
			cd_medico_solicitante_w		:= r_c02_w.cd_medico_solicitante;
			ie_tec_utilizada_w		:= r_c02_w.ie_tec_utilizada;
			ie_tipo_w			:= r_c02_w.ie_tipo;
			cd_rec_prestador_w		:= r_c02_w.cd_rec_prestador;
			det_reg_anvisa_opme_w		:= r_c02_w.det_reg_anvisa_opme;
			nm_fornecedor_opme_w		:= r_c02_w.nm_fornecedor_opme;
			nr_seq_proc_partic_w		:= r_c02_w.nr_seq_proc_partic;
			cd_ref_material_fab_opme_w	:= r_c02_w.cd_ref_material_fab_opme;
			ie_tipo_pessoa_pres_w		:= 'J';
			nr_cnpj_cpf_w			:= nr_cnpj_cpf_prest_exec_w;
			nr_seq_prestador_partic_w	:= r_c02_w.nr_seq_prestador_partic;
			cd_senha_externa_w		:= r_c02_w.cd_senha_externa_pos_cab;

			ie_produto_ww			:= null;
			nr_seq_cbo_med_espec_w		:= null;
			cd_especialidade_w		:= null;
			cd_especialidade_med_w		:= null;
			nm_profissional_prestador_w	:= null;
			sg_cons_prof_prest_w		:= null;
			nr_cons_prof_prest_w		:= null;
			sg_uf_cons_prest_w		:= null;
			cd_cbo_w			:= null;
			nr_seq_cbo_saude_exec_w		:= null;
			cd_cbo_sus_w			:= null;
			cd_pessoa_exec_w		:= null;
			cd_prestador_exec_w		:= null;
			ie_prestador_alto_custo_exec_w	:= 'N';
			vl_filme_partic_w		:= 0;
			vl_custo_op_partic_w		:= 0;
			vl_adic_filme_partic_w		:= 0;
			vl_adic_custo_op_partic_w	:= 0;
			qt_participante_w 		:= 0;
			qt_part_total_w			:= 0;

			nr_cgc_cpf_req_w		:= null;
			nm_prestador_req_w		:= null;
			sg_cons_prof_req_w		:= null;
			nr_cons_prof_req_w		:= null;
			sg_uf_cons_req_w		:= null;
			nr_seq_prestador_req_w		:= null;
			cd_prestador_req_w		:= 1;

			dt_autoriz_w 			:= null;
			dt_solicitacao_w 		:= null;
			nr_seq_regra_agrup_w		:= null;
			nr_registro_anvisa_w		:= null;
			nr_seq_mat_unimed_w		:= null;
			nr_seq_mat_uni_conv_w		:= null;
			cd_ref_material_fab_w		:= null;
			nr_uni_medida_ptu_w		:= null;
			cd_unidade_medida_w		:= null;
			cd_unidade_med_conv_w		:= null;
			ie_mat_a900_w			:= 'N';
			ie_somente_codigo_w		:= null;
			ds_servico_orig_w		:= null;
			nr_seq_requisicao_w		:= null;
			cd_material_a900_w		:= null;

			nr_seq_material_w		:= null;
			cd_servico_mat_w		:= null;
			dt_competencia_pgto_w		:= null;
			ie_tipo_participacao_w		:= '';
			cd_senha_w			:= null;
			cd_senha_guia_w			:= '0';
			nr_seq_nota_servico_w		:= null;
			qt_partic_w			:= 0;
			tx_fat_mult_serv_w		:= 1;
			ie_participante_w		:= 'N';
			vl_pago_benef_w			:= r_c02_w.vl_pago_benef;
			nr_seq_aviso_procedimento_w	:= coalesce(r_c02_w.nr_seq_a520_proced_pct, coalesce(r_c02_w.nr_seq_a520_procedimento, coalesce(r_c02_w.nr_seq_aviso_procedimento,r_c02_w.nr_seq_aviso_proced_pct)));
			nr_seq_aviso_material_w		:= coalesce(r_c02_w.nr_seq_a520_mat_pct,coalesce(r_c02_w.nr_seq_a520_material, coalesce(r_c02_w.nr_seq_aviso_material, r_c02_w.nr_seq_aviso_mat_pct)));
			ie_codificacao_w		:= null;
			ie_codificacao_conv_w		:= null;
			cd_porte_anest_w		:= null;
			ie_tipo_tabela_tiss_w		:= null;
			ie_tipo_partic_tiss_w		:= null;

			if (sg_conselho_imp_w IS NOT NULL AND sg_conselho_imp_w::text <> '') then
				select coalesce(max(a.cd_ptu),sg_conselho_imp_w)
				into STRICT sg_conselho_imp_w
				from conselho_profissional 	a
				where a.sg_conselho = sg_conselho_imp_w;
			end if;

			-- Regra: Opcional se ID_REEMBOLSO_SUS = 2
			if (id_reembolso_sus_w = '2') then
				vl_pago_benef_w := 0;
			end if;

			if (coalesce(nr_seq_aviso_procedimento_w::text, '') = '') and (coalesce(nr_seq_aviso_material_w::text, '') = '') then
				id_aviso_item_w			:= 'N';
			else
				id_aviso_item_w			:= 'S';
			end if;

			ie_regra_cpf_cnpj_forn_w	:= 'N';
			ie_regra_pag_forn_w		:= 'N';
			ie_regra_nome_forn_w		:= 'N';
			ie_regra_nota_forn_w		:= 'N';
			cd_pessoa_fisica_cta_w		:= r_c02_w.cd_pessoa_fisica_cta;
			cd_cgc_cta_w			:= r_c02_w.cd_cgc_cta;
			vl_reemb_benef_w		:= r_c02_w.vl_reemb_benef;

			i := i + 1;

			vl_liberado_w := r_c02_w.vl_liberado;

			-- Envia apenas quando for Rio Grande do Sul
			if (sg_estado_w <> 'RS') then
				vl_liberado_w := 0;
			end if;

			if (r_c02_w.nr_seq_guia_proc IS NOT NULL AND r_c02_w.nr_seq_guia_proc::text <> '') then
				select	max(nr_seq_guia)
				into STRICT	nr_seq_guia_item_w
				from	pls_guia_plano_proc
				where	nr_sequencia = r_c02_w.nr_seq_guia_proc;

			elsif (r_c02_w.nr_seq_guia_mat IS NOT NULL AND r_c02_w.nr_seq_guia_mat::text <> '') then
				select	max(nr_seq_guia)
				into STRICT	nr_seq_guia_item_w
				from	pls_guia_plano_mat
				where	nr_sequencia = r_c02_w.nr_seq_guia_mat;
			end if;

			if (r_c02_w.ie_tipo_conta = 'P') then
				if (ie_porte_anestesico_fat_w = 'PO') then
					cd_porte_anest_w := r_c02_w.cd_porte_anest_pos;

				elsif (ie_porte_anestesico_fat_w = 'PR') then
					cd_porte_anest_w := r_c02_w.cd_porte_anest_prest;

				elsif (coalesce(r_c02_w.cd_porte_anest_pos::text, '') = '') then
					cd_porte_anest_w := r_c02_w.cd_porte_anest_prest;

				else
					cd_porte_anest_w := r_c02_w.cd_porte_anest_pos;
				end if;
			end if;



			--Caso o procedimento seja 100% e a taxa do custo operacional seja diferente de 100% ou 0%, entao o procedimento recebe o valor dele
			if (tx_procedimento_w = 100) and (r_c02_w.tx_custo_operacional <> 100) and (r_c02_w.tx_custo_operacional <> 0) then
				tx_procedimento_w	:= r_c02_w.tx_custo_operacional;
			end if;


			--Caso o procedimento seja 100% e a taxa do medico seja diferente de 100% ou 0%, entao o procedimento recebe o valor dele
			if (tx_procedimento_w = 100) and (r_c02_w.tx_medico <> 100) and (r_c02_w.tx_medico <> 0) then
				tx_procedimento_w	:= r_c02_w.tx_medico;
			end if;

			if (tx_procedimento_w > 0) and (tx_procedimento_w < 100) then
				tx_fat_mult_serv_w := (tx_procedimento_w/100);

			else	--Caso for menor ou igual a 0, entao o fator recebe 100%
				if (tx_procedimento_w <= 0) then
					tx_fat_mult_serv_w := 1;

				else --Caso contrario, o fator recebe o valor da taxa do procedimento
					tx_fat_mult_serv_w := tx_procedimento_w;
				end if;
			end if;

			if ( ie_tx_item_manual_w = 'S' ) then -- Caso tenha alteracao da taxa manual OS - 2006133 - JTRINDADE
				-- Caso tenha taxa cadastrada no campo pls_conta_pos_estabelecido.tx_item atribui-o a variavel tx_fat_mult_serv_w
				if (tx_item_pos_w > 0) then
					tx_fat_mult_serv_w := (tx_item_pos_w / 100);
				end if;

			else
				-- Se a via de acesso for diferente de "0" - Independe da via
				if (r_c02_w.ie_via_acesso <> 0) and (ie_via_acesso_mult_w = 'S') then
					tx_fat_mult_serv_w := 1;
				end if;

				-- Caso a taxa for igual ou maior a 100, entao divide por 100
				if (tx_fat_mult_serv_w >= 100) then
					tx_fat_mult_serv_w := (tx_fat_mult_serv_w / 100);
				end if;
			end if;

			-- Priorizar o CNES do cadastro do prestador, caso nao tenha, utilizar o da conta medica.
			-- Combinado com Arthur em visita a Unimed Litoral (21/11)
			--  Caso esteja parametrizado, busca o CNES somente do cadastro de prestadores
			if (ie_cnes_exec_fat_w = 'CP') then
				cd_cnes_w := coalesce(trim(both cd_cnes_prest_exec_w), '9999999');
			else --  Caso contrario, busca o CNES primeiro do cadastro de prestadores depois da conta medica.
				if (coalesce(somente_numero(cd_cnes_prest_exec_w), 0) <> 0) then
					cd_cnes_w := coalesce(trim(both cd_cnes_prest_exec_w), '9999999');
				end if;
			end if;

			-- Caso nao tenha CD_CNES, envia "9999999"
			if (coalesce(somente_numero(trim(both cd_cnes_w)), 0) = 0) then
				cd_cnes_w := '9999999';
			end if;

			nr_seq_composicao_w := null;
			if (r_c02_w.nr_seq_preco_pacote IS NOT NULL AND r_c02_w.nr_seq_preco_pacote::text <> '') then
				select	max(nr_seq_composicao)
				into STRICT	nr_seq_composicao_w
				from	pls_pacote_tipo_acomodacao
				where	nr_sequencia = r_c02_w.nr_seq_preco_pacote;
			end if;

			if (coalesce(qt_procedimento_w, 0) = 0) then
				qt_procedimento_w := 1;
			end if;

			if (r_c02_w.ie_tipo_conta = 'P') then
				if (r_c01_w.nr_seq_pos_proc IS NOT NULL AND r_c01_w.nr_seq_pos_proc::text <> '') then
					select	count(1)
					into STRICT	qt_participante_w
					from	pls_conta_pos_proc_part
					where	nr_seq_conta_pos_proc = r_c01_w.nr_seq_pos_proc;

				elsif (r_c01_w.nr_seq_conta_pos_estab IS NOT NULL AND r_c01_w.nr_seq_conta_pos_estab::text <> '') then
					select	count(1)
					into STRICT	qt_participante_w
					from	pls_conta_pos_estab_partic
					where	nr_seq_conta_pos = r_c01_w.nr_seq_conta_pos_estab
					and	vl_participante_pos	>= 0;		-- alterado de > para >= na OS 2066086 - Litoral onde precisa gerar particpante com o valor zerado -  jtrindade
				end if;
				qt_part_total_w	:= qt_participante_w;

				-- Se nao tem participante, obter dados profissional executor
				if (coalesce(nr_seq_proc_partic_w::text, '') = '') then
					-- Novo pos estabelecido
					if (r_c01_w.nr_seq_pos_proc IS NOT NULL AND r_c01_w.nr_seq_pos_proc::text <> '') then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_proc_partic_w
						from	pls_conta_pos_proc_part		b,
							pls_proc_participante		a
						where	a.nr_sequencia			= b.nr_seq_proc_partic
						and	b.nr_seq_conta_pos_proc		= r_c01_w.nr_seq_pos_proc;
					else -- Antigo pos estabelecido
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_proc_partic_w
						from	pls_conta_pos_estab_partic	b,
							pls_proc_participante		a
						where	a.nr_sequencia			= b.nr_seq_proc_partic
						and	b.nr_seq_conta_pos 		= r_c01_w.nr_seq_conta_pos_estab
						and	b.vl_participante_pos		>= 0;		-- alterado de > para >= na OS 2066086 - Litoral onde precisa gerar particpante com o valor zerado -  jtrindade
					end if;

					-- Pegar somente com condicao de geracao do participante
					if (coalesce(nr_seq_proc_partic_w::text, '') = '') and (r_c02_w.vl_medico_calc > 0) then
						select	max(nr_sequencia)
						into STRICT	nr_seq_proc_partic_w
						from	pls_proc_participante
						where	nr_seq_conta_proc = r_c02_w.nr_seq_conta_proc
						and	vl_participante	> 0
						and	ie_status = 'L';
					end if;

					-- Participante
					if (nr_seq_proc_partic_w IS NOT NULL AND nr_seq_proc_partic_w::text <> '') then
						select	max(cd_medico),
							max(nr_seq_grau_partic)
						into STRICT	cd_medico_exec_partic_w,
							nr_seq_grau_partic_w
						from	pls_proc_participante
						where	nr_sequencia = nr_seq_proc_partic_w;
					end if;
				end if;
			end if;

			if (ie_novo_pos_estab_w = 'S') and (coalesce(r_c02_w.nr_seq_pos_proc_partic::text, '') = '') and (r_c01_w.ie_tipo_cobranca not in ('3', '4')) then
				if (r_c01_w.nr_seq_pos_mat IS NOT NULL AND r_c01_w.nr_seq_pos_mat::text <> '') then
					vl_procedimento_w		:= r_c02_w.vl_procedimento;
					vl_adic_procedimento_w		:= r_c02_w.vl_adic_procedimento;
					vl_filme_w			:= 0;
					vl_adic_filme_w			:= 0;
					vl_custo_operacional_w		:= 0;
					vl_adic_custo_operacional_w	:= 0;

				elsif (r_c01_w.nr_seq_pos_proc IS NOT NULL AND r_c01_w.nr_seq_pos_proc::text <> '') then
					vl_procedimento_w		:= r_c02_w.vl_procedimento;
					vl_filme_w			:= r_c02_w.vl_filme;
					vl_custo_operacional_w		:= r_c02_w.vl_custo_operacional;
					vl_adic_procedimento_w		:= r_c02_w.vl_adic_procedimento;
					vl_adic_filme_w			:= r_c02_w.vl_adic_filme;
					vl_adic_custo_operacional_w	:= r_c02_w.vl_adic_co;
				end if;
			elsif (ie_novo_pos_estab_w = 'S') and (r_c02_w.nr_seq_pos_proc_partic IS NOT NULL AND r_c02_w.nr_seq_pos_proc_partic::text <> '') and (coalesce(r_c01_w.nr_seq_pos_proc_tx::text, '') = '') and (coalesce(r_c01_w.nr_seq_pos_mat_tx::text, '') = '') then

				if (qt_part_total_w > 1) then
					vl_procedimento_w		:= r_c02_w.vl_participante_pos;
					vl_adic_procedimento_w		:= r_c02_w.vl_administracao;
					vl_filme_w			:= 0;
					vl_adic_filme_w			:= 0;
					vl_custo_operacional_w		:= 0;
					vl_adic_custo_operacional_w	:= 0;

				elsif (r_c01_w.nr_seq_pos_proc_fat IS NOT NULL AND r_c01_w.nr_seq_pos_proc_fat::text <> '') then
					select	coalesce(vl_medico,0),
						vl_materiais,
						vl_custo_operacional,
						vl_lib_taxa_servico,
						vl_lib_taxa_material,
						vl_lib_taxa_co
					into STRICT	vl_procedimento_w,
						vl_filme_w,
						vl_custo_operacional_w,
						vl_adic_procedimento_w,
						vl_adic_filme_w,
						vl_adic_custo_operacional_w
					from	pls_conta_pos_proc_fat
					where	nr_sequencia	= r_c01_w.nr_seq_pos_proc_fat;
				end if;

			elsif (ie_novo_pos_estab_w = 'N') and (r_c01_w.ie_tipo_cobranca not in ('3', '4')) then -- Nao pode ser taxa administrativa / valor manutencao
				SELECT * FROM ptu_obter_valores_nota_servico(	r_c01_w.nr_seq_conta_pos_estab, r_c01_w.nr_seq_pos_proc, r_c01_w.nr_seq_pos_mat, r_c01_w.nr_seq_fatura_proc, r_c01_w.nr_seq_fatura_mat, r_c02_w.nr_seq_pos_estab_partic, r_c01_w.nr_seq_conta_pos_contab, r_c01_w.nr_seq_pos_proc_fat, r_c01_w.nr_seq_pos_mat_fat, vl_procedimento_w, vl_filme_w, vl_custo_operacional_w, vl_adic_procedimento_w, vl_adic_filme_w, vl_adic_custo_operacional_w, r_c02_w.qt_partic_duplic, nr_seq_fatura_conta_p, ie_tipo_cobranca_fatura_w) INTO STRICT vl_procedimento_w, vl_filme_w, vl_custo_operacional_w, vl_adic_procedimento_w, vl_adic_filme_w, vl_adic_custo_operacional_w;

				vl_procedimento_w		:= coalesce(vl_procedimento_w, 0);
				vl_filme_w			:= coalesce(vl_filme_w, 0);
				vl_custo_operacional_w		:= coalesce(vl_custo_operacional_w, 0);
				vl_adic_procedimento_w		:= coalesce(vl_adic_procedimento_w, 0);
				vl_adic_filme_w			:= coalesce(vl_adic_filme_w, 0);
				vl_adic_custo_operacional_w	:= coalesce(vl_adic_custo_operacional_w, 0);
			else
				if (ie_novo_pos_estab_w = 'N') and (qt_part_total_w > 1) then
					select	coalesce(sum(coalesce(vl_taxa_manutencao, 0)), 0) / qt_part_total_w
					into STRICT	vl_adic_custo_operacional_w
					from	pls_conta_pos_estab_taxa
					where	nr_seq_conta_pos_estab = r_c01_w.nr_seq_conta_pos_estab;

					select	coalesce(sum(coalesce(vl_taxa_manutencao, 0)), 0)
					into STRICT	vl_taxa_manutencao_w
					from	pls_conta_pos_estab_taxa
					where	nr_seq_conta_pos_estab = r_c01_w.nr_seq_conta_pos_estab;

					-- Tratamento para reembolso
					if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

						select	sum(coalesce(vl_adic_co, 0))
						into STRICT	vl_tot_adic_op_w
						from	ptu_nota_servico
						where	nr_seq_conta_proc	= r_c02_w.nr_seq_conta_proc
						and	nr_seq_nota_cobr	= nr_seq_cobranca_p;
					else

						vl_tot_adic_op_w := 0;

					end if; -- fim se reembolso
					if	((vl_tot_adic_op_w + vl_adic_custo_operacional_w) > vl_taxa_manutencao_w) then
						vl_adic_custo_operacional_w := vl_taxa_manutencao_w - vl_tot_adic_op_w;
					end if;

					if (ie_gerar_fat_contab_w = 'N') then
						select	count(1)
						into STRICT	qt_part_total_w
						from	pls_conta_pos_estab_contab
						where	nr_seq_conta_pos = r_c01_w.nr_seq_conta_pos_estab
						and	(nr_seq_proc_partic IS NOT NULL AND nr_seq_proc_partic::text <> '');

						if (qt_part_total_w = 0) then
							select	count(1)
							into STRICT	qt_part_total_w
							from	pls_conta_pos_estab_contab	z
							where	z.nr_seq_conta_pos 		= r_c01_w.nr_seq_conta_pos_estab
							and exists (	SELECT	1
									from	pls_conta_medica_resumo a
									where	a.nr_seq_conta_proc	= z.nr_seq_conta_proc
									and 	a.nr_seq_conta 		= z.nr_seq_conta
									and	a.ie_situacao 		= 'A'
									and	a.ie_tipo_item 	!= 'I'
									and	((a.vl_lib_original > 0) or (ie_tipo_item in ('M','P')))
									and	(a.nr_seq_participante IS NOT NULL AND a.nr_seq_participante::text <> ''));
						end if;

						if (qt_part_total_w = 0) then
							select	coalesce(sum(coalesce(vl_taxa_manutencao, 0)), 0)
							into STRICT	vl_adic_custo_operacional_w
							from	pls_conta_pos_estab_taxa
							where	nr_seq_conta_pos_estab = r_c01_w.nr_seq_conta_pos_estab;
						end if;
					end if;
				else
					if	((coalesce(r_c01_w.nr_seq_pos_taxa_contab::text, '') = '') or (ie_gerar_fat_contab_w = 'N')) and (ie_novo_pos_estab_w = 'N') then
						select	coalesce(sum(coalesce(vl_taxa_manutencao, 0)), 0)
						into STRICT	vl_adic_custo_operacional_w
						from	pls_conta_pos_estab_taxa
						where	nr_seq_conta_pos_estab = r_c01_w.nr_seq_conta_pos_estab;

					elsif (r_c01_w.nr_seq_pos_taxa_contab IS NOT NULL AND r_c01_w.nr_seq_pos_taxa_contab::text <> '') then
						select	coalesce(sum(coalesce(b.vl_taxa, 0)), 0)
						into STRICT	vl_adic_custo_operacional_w
						from	pls_conta_pos_estab_taxa	a,
							pls_conta_pos_taxa_contab	b
						where	a.nr_sequencia			= b.nr_seq_pos_estab_taxa
						and	b.nr_sequencia			= r_c01_w.nr_seq_pos_taxa_contab;

					elsif (r_c01_w.nr_seq_pos_proc_tx_fat IS NOT NULL AND r_c01_w.nr_seq_pos_proc_tx_fat::text <> '') then
						select	coalesce(sum(coalesce(vl_taxa, 0)), 0)
						into STRICT	vl_adic_custo_operacional_w
						from	pls_conta_pos_proc_tx_fat
						where	nr_sequencia	= r_c01_w.nr_seq_pos_proc_tx_fat;

					elsif (r_c01_w.nr_seq_pos_mat_tx_fat IS NOT NULL AND r_c01_w.nr_seq_pos_mat_tx_fat::text <> '') then
						select	coalesce(sum(coalesce(vl_taxa, 0)), 0)
						into STRICT	vl_adic_custo_operacional_w
						from	pls_conta_pos_mat_tx_fat
						where	nr_sequencia	= r_c01_w.nr_seq_pos_mat_tx_fat;

					elsif (r_c01_w.nr_seq_pos_proc_tx IS NOT NULL AND r_c01_w.nr_seq_pos_proc_tx::text <> '') then
						select	coalesce(sum(coalesce(vl_taxa_manutencao, 0)), 0)
						into STRICT	vl_adic_custo_operacional_w
						from	pls_conta_pos_proc_tx
						where	nr_sequencia	= r_c01_w.nr_seq_pos_proc_tx;

					elsif (r_c01_w.nr_seq_pos_mat_tx IS NOT NULL AND r_c01_w.nr_seq_pos_mat_tx::text <> '') then
						select	coalesce(sum(coalesce(vl_taxa_manutencao, 0)), 0)
						into STRICT	vl_adic_custo_operacional_w
						from	pls_conta_pos_mat_tx
						where	nr_sequencia	= r_c01_w.nr_seq_pos_mat_tx;
					end if;
				end if;

				vl_procedimento_w	:= 0;
				vl_filme_w		:= 0;
				vl_custo_operacional_w	:= 0;
				vl_adic_procedimento_w	:= 0;
				vl_adic_filme_w		:= 0;
				qt_procedimento_w	:= 0;
			end if;

			-- X = Custo Operacional do Raio X (sem HM) - Quando tem participante e valores de Filme/CO, tem que gerar um registro a mais
			if (coalesce(nr_seq_conta_pos_ant_w, 0) <> r_c01_w.nr_seq_conta_pos_estab) then
				nr_seq_conta_pos_ant_w := r_c01_w.nr_seq_conta_pos_estab;
				qt_item_pos_w := 0;
			else
				qt_item_pos_w := 1;
			end if;

			vl_filme_w		:= coalesce(vl_filme_w, 0);
			vl_custo_operacional_w	:= coalesce(vl_custo_operacional_w, 0);

			if	((vl_filme_w > 0) or (vl_custo_operacional_w > 0)) and (r_c02_w.nr_seq_pos_estab_partic IS NOT NULL AND r_c02_w.nr_seq_pos_estab_partic::text <> '') and (coalesce(r_c02_w.nr_seq_ptu_fat_conta::text, '') = '') and (qt_participante_w > 1) and (qt_item_pos_w = 0) then

				vl_filme_partic_w		:= vl_filme_w;
				vl_custo_op_partic_w		:= vl_custo_operacional_w;
				vl_adic_filme_partic_w		:= vl_adic_filme_w;
				vl_adic_custo_op_partic_w	:= vl_adic_custo_operacional_w;
				vl_filme_w			:= 0;
				vl_custo_operacional_w		:= 0;
				vl_adic_filme_w			:= 0;
				vl_adic_custo_operacional_w	:= 0;
				ie_participante_w		:= 'S';

			elsif	((vl_filme_w > 0) or (vl_custo_operacional_w > 0)) and (r_c02_w.nr_seq_pos_estab_partic IS NOT NULL AND r_c02_w.nr_seq_pos_estab_partic::text <> '') and (coalesce(r_c02_w.nr_seq_ptu_fat_conta::text, '') = '') and (qt_participante_w > 1) then

				vl_filme_partic_w 		:= 0;
				vl_custo_op_partic_w 		:= 0;
				vl_adic_filme_partic_w 		:= 0;
				vl_adic_custo_op_partic_w	:= 0;
				vl_filme_w			:= 0;
				vl_custo_operacional_w 		:= 0;
				vl_adic_filme_w 		:= 0;
				vl_adic_custo_operacional_w	:= 0;
				ie_participante_w 		:= 'S';
			end if;

			if (r_c02_w.nr_seq_ptu_fatura IS NOT NULL AND r_c02_w.nr_seq_ptu_fatura::text <> '') then
				select	lpad(max(cd_unimed_origem), 4, '0')
				into STRICT	cd_unimed_origem_w
				from	ptu_fatura
				where	nr_sequencia = r_c02_w.nr_seq_ptu_fatura;

				if (cd_unimed_origem_w IS NOT NULL AND cd_unimed_origem_w::text <> '') then
					select	max(cd_cgc)
					into STRICT	cd_cgc_w
					from	pls_congenere
					where	cd_cooperativa = cd_unimed_origem_w;
				end if;
			end if;

			if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
				if (cd_pessoa_prest_exec_w IS NOT NULL AND cd_pessoa_prest_exec_w::text <> '') then
					select	max(cd_especialidade)
					into STRICT	cd_especialidade_med_w
					from	pls_prestador_med_espec
					where	nr_seq_prestador	= nr_seq_prestador_exec_w
					and	cd_pessoa_fisica	= cd_pessoa_prest_exec_w
					and	ie_especialidade_princ	= 'S'
					and	dt_atual_w between coalesce(dt_inicio_vigencia, dt_atual_w) and fim_dia(coalesce(dt_fim_vigencia, dt_atual_w));

					if (coalesce(cd_especialidade_med_w::text, '') = '') then
						select	max(cd_especialidade)
						into STRICT	cd_especialidade_med_w
						from	pls_prestador_med_espec
						where	nr_seq_prestador	= nr_seq_prestador_exec_w
						and	cd_pessoa_fisica	= cd_pessoa_prest_exec_w
						and	dt_atual_w between coalesce(dt_inicio_vigencia, dt_atual_w) and fim_dia(coalesce(dt_fim_vigencia, dt_atual_w));
					end if;

					if (cd_especialidade_med_w IS NOT NULL AND cd_especialidade_med_w::text <> '') then
						select	max(nr_seq_cbo_saude)
						into STRICT	nr_seq_cbo_med_espec_w
						from	medico_especialidade
						where	cd_pessoa_fisica	= cd_pessoa_prest_exec_w
						and	cd_especialidade	= cd_especialidade_med_w;
					end if;
				end if;
			end if;

			----------------------------------------------------------------------------------	DADOS DO EXECUTOR ----------------------------------------------------------------------------------
			-- VERIFICAR PRIMEIRO PELO MEDICO DO PARTICIPANTE
			if (cd_medico_exec_partic_w IS NOT NULL AND cd_medico_exec_partic_w::text <> '') then
				nm_profissional_prestador_w	:= substr(obter_nome_medico(cd_medico_exec_partic_w, 'N'), 1, 70);
				sg_cons_prof_prest_w		:= substr(pls_obter_sg_conselho_ptu(cd_medico_exec_partic_w), 1, 12);
				nr_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_exec_partic_w, 'CRM'), 1, 15);
				sg_uf_cons_prest_w		:= substr(obter_dados_medico(cd_medico_exec_partic_w, 'UFCRM'), 1, 2);
				cd_municipio_w			:= coalesce(cd_municipio_w, substr(obter_dados_pf_pj(cd_medico_exec_partic_w, null, 'CDM'), 1, 6));
				cd_pessoa_exec_w		:= coalesce(cd_pessoa_exec_w, cd_medico_exec_partic_w);
				cd_prestador_exec_w		:= substr(nr_cons_prof_prest_w, 1, 8);

				ie_tipo_pessoa_pres_w := 'F';
				nr_cnpj_cpf_w := substr(obter_dados_pf(cd_medico_exec_partic_w,'CPF'),1,11);

				select	max(nr_sequencia)
				into STRICT	nr_seq_prest_med_exec_w
				from	pls_prestador
				where	cd_pessoa_fisica = cd_medico_exec_partic_w
				and	ie_situacao = 'A';

				if (nr_seq_prest_med_exec_w IS NOT NULL AND nr_seq_prest_med_exec_w::text <> '') then
					select	max(cd_especialidade)
					into STRICT	cd_especialidade_med_w
					from	pls_prestador_med_espec
					where	nr_seq_prestador	= nr_seq_prest_med_exec_w
					and	cd_pessoa_fisica	= cd_medico_exec_partic_w
					and	ie_especialidade_princ	= 'S'
					and	dt_atual_w between coalesce(dt_inicio_vigencia, dt_atual_w) and fim_dia(coalesce(dt_fim_vigencia, dt_atual_w));

					if (coalesce(cd_especialidade_med_w::text, '') = '') then
						select	max(cd_especialidade)
						into STRICT	cd_especialidade_med_w
						from	pls_prestador_med_espec
						where	nr_seq_prestador = nr_seq_prest_med_exec_w
						and	cd_pessoa_fisica = cd_medico_exec_partic_w
						and	dt_atual_w between coalesce(dt_inicio_vigencia, dt_atual_w) and fim_dia(coalesce(dt_fim_vigencia, dt_atual_w));
					end if;

					if (cd_especialidade_med_w IS NOT NULL AND cd_especialidade_med_w::text <> '') then
						select	max(nr_seq_cbo_saude)
						into STRICT	nr_seq_cbo_med_espec_w
						from	medico_especialidade
						where	cd_pessoa_fisica	= cd_medico_exec_partic_w
						and	cd_especialidade	= cd_especialidade_med_w;
					end if;
				end if;

				select	max(nr_seq_cbo_saude)
				into STRICT	nr_seq_cbo_saude_exec_w
				from	pessoa_fisica
				where	cd_pessoa_fisica = cd_medico_exec_partic_w;

				select	max(cd_cbo)
				into STRICT	cd_cbo_sus_w
				from	sus_cbo_pessoa_fisica
				where	cd_pessoa_fisica = cd_medico_exec_partic_w;

			elsif (r_c02_w.nr_cpf_imp IS NOT NULL AND r_c02_w.nr_cpf_imp::text <> '') or (r_c02_w.nr_crm_imp IS NOT NULL AND r_c02_w.nr_crm_imp::text <> '') then
				nm_profissional_prestador_w	:= r_c02_w.nm_medico_executor_imp;
				sg_cons_prof_prest_w		:= sg_conselho_imp_w;
				nr_cons_prof_prest_w		:= r_c02_w.nr_crm_imp;
				sg_uf_cons_prest_w		:= r_c02_w.uf_crm_imp;

				if (r_c02_w.nr_seq_conselho IS NOT NULL AND r_c02_w.nr_seq_conselho::text <> '') then
					select	max(cd_ptu)
					into STRICT	sg_conselho_imp_w
					from	conselho_profissional
					where	nr_sequencia = r_c02_w.nr_seq_conselho;
				end if;

				sg_cons_prof_prest_w := coalesce(sg_conselho_imp_w, sg_cons_prof_prest_w);

				if (coalesce(cd_municipio_w::text, '') = '') and (r_c02_w.cd_medico_imp IS NOT NULL AND r_c02_w.cd_medico_imp::text <> '') then
					cd_municipio_w := substr(obter_dados_pf_pj(r_c02_w.cd_medico_imp, null, 'CDM'), 1, 6);
				end if;

				cd_pessoa_exec_w	:= coalesce(cd_pessoa_exec_w, r_c02_w.cd_medico_imp);
				cd_prestador_exec_w	:= substr(nr_cons_prof_prest_w, 1, 8);

				select	max(nr_seq_cbo_saude)
				into STRICT	nr_seq_cbo_saude_exec_w
				from	pessoa_fisica
				where	cd_pessoa_fisica = r_c02_w.cd_medico_imp;

				select	max(cd_cbo)
				into STRICT	cd_cbo_sus_w
				from	sus_cbo_pessoa_fisica
				where	cd_pessoa_fisica = r_c02_w.cd_medico_imp;
			end if;

			-- SE NAO ACHOU, VERIFICAR PELO MEDICO EXECUTOR DA CONTA
			if (coalesce(cd_medico_exec_partic_w::text, '') = '') and (coalesce(r_c02_w.nr_cpf_imp::text, '') = '') and (coalesce(r_c02_w.nr_crm_imp::text, '') = '') and (r_c02_w.cd_medico_exec_conta IS NOT NULL AND r_c02_w.cd_medico_exec_conta::text <> '') then
				nm_profissional_prestador_w	:= substr(obter_nome_medico(r_c02_w.cd_medico_exec_conta, 'N'), 1, 70);
				sg_cons_prof_prest_w		:= substr(pls_obter_sg_conselho_ptu(r_c02_w.cd_medico_exec_conta), 1, 12);
				nr_cons_prof_prest_w		:= substr(obter_dados_medico(r_c02_w.cd_medico_exec_conta, 'CRM'), 1, 15);
				sg_uf_cons_prest_w		:= substr(obter_dados_medico(r_c02_w.cd_medico_exec_conta, 'UFCRM'), 1, 2);
				cd_municipio_w			:= coalesce(cd_municipio_w, substr(obter_dados_pf_pj(r_c02_w.cd_medico_exec_conta, null, 'CDM'), 1, 6));
				cd_pessoa_exec_w		:= coalesce(cd_pessoa_exec_w, r_c02_w.cd_medico_exec_conta);
				cd_prestador_exec_w		:= substr(nr_cons_prof_prest_w, 1, 8);

				ie_tipo_pessoa_pres_w := 'F';
				nr_cnpj_cpf_w := substr(obter_dados_pf(r_c02_w.cd_medico_exec_conta,'CPF'),1,11);

				select	max(nr_sequencia)
				into STRICT	nr_seq_prest_med_exec_w
				from	pls_prestador
				where	cd_pessoa_fisica	= r_c02_w.cd_medico_exec_conta
				and	coalesce(ie_situacao, 'A')	= 'A';

				if (nr_seq_prest_med_exec_w IS NOT NULL AND nr_seq_prest_med_exec_w::text <> '') then
					select	max(cd_especialidade)
					into STRICT	cd_especialidade_med_w
					from	pls_prestador_med_espec
					where	nr_seq_prestador	= nr_seq_prest_med_exec_w
					and	cd_pessoa_fisica	= r_c02_w.cd_medico_exec_conta
					and	ie_especialidade_princ	= 'S'
					and	dt_atual_w between coalesce(dt_inicio_vigencia, dt_atual_w) and fim_dia(coalesce(dt_fim_vigencia, dt_atual_w));

					if (coalesce(cd_especialidade_med_w::text, '') = '') then
						select	max(cd_especialidade)
						into STRICT	cd_especialidade_med_w
						from	pls_prestador_med_espec
						where	nr_seq_prestador	= nr_seq_prest_med_exec_w
						and	cd_pessoa_fisica	= r_c02_w.cd_medico_exec_conta
						and	dt_atual_w between coalesce(dt_inicio_vigencia, dt_atual_w) and fim_dia(coalesce(dt_fim_vigencia, dt_atual_w));
					end if;

					if (cd_especialidade_med_w IS NOT NULL AND cd_especialidade_med_w::text <> '') then
						select	max(nr_seq_cbo_saude)
						into STRICT	nr_seq_cbo_med_espec_w
						from	medico_especialidade
						where	cd_pessoa_fisica	= r_c02_w.cd_medico_exec_conta
						and	cd_especialidade	= cd_especialidade_med_w;
					end if;
				end if;

				select	max(nr_seq_cbo_saude)
				into STRICT	nr_seq_cbo_saude_exec_w
				from	pessoa_fisica
				where	cd_pessoa_fisica = r_c02_w.cd_medico_exec_conta;

				select	max(cd_cbo)
				into STRICT	cd_cbo_sus_w
				from	sus_cbo_pessoa_fisica
				where	cd_pessoa_fisica = r_c02_w.cd_medico_exec_conta;
			end if;

			-- Se nao achou, verificar pelo prestador executor da conta
			if (coalesce(cd_medico_exec_partic_w::text, '') = '') and (coalesce(r_c02_w.nr_cpf_imp::text, '') = '') and (coalesce(r_c02_w.nr_crm_imp::text, '') = '') and (coalesce(r_c02_w.cd_medico_exec_conta::text, '') = '') and (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
				select	cd_pessoa_fisica,
					substr(pls_obter_dados_prestador(nr_sequencia, 'N'), 1, 70),
					coalesce(cd_municipio_w, substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM'), 1, 6)),
					nr_sequencia,
					CASE WHEN coalesce(cd_cgc::text, '') = '' THEN null  ELSE cd_cgc END ,
					CASE WHEN coalesce(cd_cgc::text, '') = '' THEN ie_tipo_pessoa_pres_w  ELSE 'J' END
				into STRICT	cd_medico_prest_exec_w,
					nm_profissional_prestador_w,
					cd_municipio_w,
					nr_seq_prestador_pgto_w,
					nr_cnpj_cpf_w,
					ie_tipo_pessoa_pres_w
				from	pls_prestador
				where	nr_sequencia = nr_seq_prestador_exec_w;

				cd_municipio_w := coalesce(substr(pls_obter_dados_prestador(nr_seq_prestador_exec_w, 'IBGEC'), 1, 6), cd_municipio_w);

				select	count(1)
				into STRICT	qt_registro_med_w
				from	medico
				where	cd_pessoa_fisica = cd_medico_prest_exec_w  LIMIT 1;

				if (cd_medico_prest_exec_w IS NOT NULL AND cd_medico_prest_exec_w::text <> '') and (qt_registro_med_w > 0) then

					nm_profissional_prestador_w	:= substr(obter_nome_medico(cd_medico_prest_exec_w, 'N'), 1, 70);
					sg_cons_prof_prest_w		:= substr(pls_obter_sg_conselho_ptu(cd_medico_prest_exec_w), 1, 12);
					nr_cons_prof_prest_w		:= substr(obter_dados_medico(cd_medico_prest_exec_w, 'CRM'), 1, 15);
					sg_uf_cons_prest_w		:= substr(obter_dados_medico(cd_medico_prest_exec_w, 'UFCRM'), 1, 2);
					cd_municipio_w			:= coalesce(cd_municipio_w, substr(obter_dados_pf_pj(cd_medico_prest_exec_w, null, 'CDM'), 1, 6));
					cd_pessoa_exec_w		:= coalesce(cd_pessoa_exec_w, cd_medico_prest_exec_w);
					cd_prestador_exec_w		:= substr(nr_cons_prof_prest_w, 1, 8);

					ie_tipo_pessoa_pres_w := 'F';
					nr_cnpj_cpf_w := substr(obter_dados_pf(cd_medico_prest_exec_w,'CPF'),1,11);

					if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
						select	max(cd_especialidade)
						into STRICT	cd_especialidade_med_w
						from	pls_prestador_med_espec
						where	nr_seq_prestador	= nr_seq_prestador_exec_w
						and	cd_pessoa_fisica	= cd_medico_prest_exec_w
						and	ie_especialidade_princ	= 'S'
						and	dt_atual_w between coalesce(dt_inicio_vigencia, dt_atual_w) and fim_dia(coalesce(dt_fim_vigencia, dt_atual_w));

						if (coalesce(cd_especialidade_med_w::text, '') = '') then
							select	max(cd_especialidade)
							into STRICT	cd_especialidade_med_w
							from	pls_prestador_med_espec
							where	nr_seq_prestador	= nr_seq_prestador_exec_w
							and	cd_pessoa_fisica	= cd_medico_prest_exec_w
							and	dt_atual_w between coalesce(dt_inicio_vigencia, dt_atual_w) and fim_dia(coalesce(dt_fim_vigencia, dt_atual_w));
						end if;

						if (cd_especialidade_med_w IS NOT NULL AND cd_especialidade_med_w::text <> '') then
							select	max(nr_seq_cbo_saude)
							into STRICT	nr_seq_cbo_med_espec_w
							from	medico_especialidade
							where	cd_pessoa_fisica	= cd_medico_prest_exec_w
							and	cd_especialidade	= cd_especialidade_med_w;
						end if;
					end if;

					select	max(nr_seq_cbo_saude)
					into STRICT	nr_seq_cbo_saude_exec_w
					from	pessoa_fisica
					where	cd_pessoa_fisica = cd_medico_prest_exec_w;

					select	max(cd_cbo)
					into STRICT	cd_cbo_sus_w
					from	sus_cbo_pessoa_fisica
					where	cd_pessoa_fisica = cd_medico_prest_exec_w;
				end if;
				qt_registro_med_w := 0;
			end if;

			-- Se for de reembolso
			if (coalesce(nm_profissional_prestador_w::text, '') = '') and (nr_seq_cobranca_rrs_p IS NOT NULL AND nr_seq_cobranca_rrs_p::text <> '') then
				if (cd_pessoa_fisica_cta_w IS NOT NULL AND cd_pessoa_fisica_cta_w::text <> '') then -- PF
					begin
					nr_cons_prof_prest_w		:= coalesce(substr(obter_dados_medico(cd_pessoa_fisica_cta_w, 'CRM'), 1, 15),1);
					exception
					when others then
						nr_cons_prof_prest_w := 1;
					end;

					begin
					sg_cons_prof_prest_w		:= coalesce(substr(pls_obter_sg_conselho_ptu(cd_pessoa_fisica_cta_w), 1, 12),'CRM');
					exception
					when others then
						sg_cons_prof_prest_w		:= 'CRM';
					end;

					begin
					sg_uf_cons_prest_w		:= coalesce(substr(obter_dados_medico(cd_pessoa_fisica_cta_w, 'UFCRM'), 1, 2), sg_estado_w);
					exception
					when others then
						sg_uf_cons_prest_w		:= sg_estado_w;
					end;

					ie_tipo_pessoa_pres_w := 'F';
					nr_cnpj_cpf_w := substr(obter_dados_pf(cd_pessoa_fisica_cta_w,'CPF'),1,11);

					ie_tipo_participacao_w		:= '0';
					nm_profissional_prestador_w	:= substr(obter_nome_pf(cd_pessoa_fisica_cta_w), 1, 70);

				elsif (cd_cgc_cta_w IS NOT NULL AND cd_cgc_cta_w::text <> '') then -- PJ
					nr_cons_prof_prest_w		:= 1;
					sg_cons_prof_prest_w		:= 'CRM';
					sg_uf_cons_prest_w		:= sg_estado_w;
					ie_tipo_participacao_w		:= '0';
					nm_profissional_prestador_w	:= substr(obter_razao_social(cd_cgc_cta_w),1,70);
					ie_tipo_pessoa_pres_w		:= 'J';
					nr_cnpj_cpf_w			:= cd_cgc_cta_w;
				end if;
			end if;

			if (coalesce(cd_municipio_w::text, '') = '') and (cd_pessoa_exec_w IS NOT NULL AND cd_pessoa_exec_w::text <> '') then
				cd_municipio_w	:= substr(obter_dados_pf_pj(cd_pessoa_exec_w, null, 'CDM'), 1, 6);

				if (coalesce(cd_municipio_w::text, '') = '') then
					cd_municipio_w := substr(obter_compl_pf(cd_pessoa_exec_w, 2, 'CDM'), 1, 6);
				end if;
			end if;

			if (coalesce(cd_municipio_w::text, '') = '') and (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
				select	max(cd_municipio_ibge)
				into STRICT	cd_municipio_w
				from	pessoa_juridica
				where	cd_cgc = cd_cgc_w;
			end if;

			if (cd_municipio_w IS NOT NULL AND cd_municipio_w::text <> '') and (cd_municipio_w < 7) then
				cd_municipio_w := cd_municipio_w || substr(calcula_digito('MODULO10', cd_municipio_w), 1, 1);
			end if;

			if (nr_seq_cbo_saude_exec_w IS NOT NULL AND nr_seq_cbo_saude_exec_w::text <> '') then
				cd_cbo_w := pls_obter_cbo_saude_ptu(nr_seq_cbo_saude_exec_w, null, 'A500', cd_interface_p);
			end if;

			if (coalesce(cd_cbo_w::text, '') = '') and (somente_numero(cd_cbo_sus_w) > 0) then
				cd_cbo_w := somente_numero(cd_cbo_sus_w);

				if (cd_cbo_w = 0) then
					cd_cbo_w := null;
				end if;
			end if;

			-- se ainda nao encontrou o CBO e tem participante, busca o CBO do executor (participante)
			if (somente_numero(cd_cbo_w) = 0) and (r_c02_w.nr_seq_proc_partic IS NOT NULL AND r_c02_w.nr_seq_proc_partic::text <> '') and (r_c02_w.nr_seq_cbo_saude IS NOT NULL AND r_c02_w.nr_seq_cbo_saude::text <> '') then
				cd_cbo_w :=  coalesce(pls_obter_cbo_saude_ptu(r_c02_w.nr_seq_cbo_saude, null, 'A500', cd_interface_p),cd_cbo_w);
			end if;

			-- se ainda nao encontrou o CBO, tenta com o CBO da conta, se for guia de consulta
			if (r_c02_w.nr_seq_cbo_saude IS NOT NULL AND r_c02_w.nr_seq_cbo_saude::text <> '') and (r_c02_w.ie_tipo_guia = '3') then
				cd_cbo_w :=  coalesce(pls_obter_cbo_saude_ptu(r_c02_w.nr_seq_cbo_saude, null, 'A500', cd_interface_p),cd_cbo_w);
			end if;

			if (somente_numero(cd_cbo_w) = 0) and (nr_seq_cbo_med_espec_w IS NOT NULL AND nr_seq_cbo_med_espec_w::text <> '') then
				cd_cbo_w :=  coalesce(pls_obter_cbo_saude_ptu(nr_seq_cbo_med_espec_w, null, 'A500', cd_interface_p),cd_cbo_w);
			end if;

			if (r_c02_w.ie_tipo_conta = 'M') then
				cd_cbo_w := '000000';
			end if;

			if (somente_numero(cd_cbo_w) = 0) and (nr_ver_tiss_w = '2.02.03') then
				cd_cbo_w := '999999';
			end if;

			if (coalesce(tipo_rede_min_w::text, '') = '') then
				select	max(ie_tipo_rede_min_ptu)
				into STRICT	tipo_rede_min_w
				from	pls_prestador
				where	nr_sequencia = r_c02_w.nr_seq_prestador;
			end if;

			----------------------------------------------------------------------------------	DADOS DO SOLICITANTE/REQUISITANTE	----------------------------------------------------------------------------------
			-- Buscar primeiro os dados do medico solicitante da conta
			if (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
				nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_solicitante_w, 'CPF'), 1, 14);
				nm_prestador_req_w	:= trim(both substr(obter_nome_medico(cd_medico_solicitante_w, 'N'), 1, 70));
				sg_cons_prof_req_w	:= substr(pls_obter_sg_conselho_ptu(cd_medico_solicitante_w), 1, 12);
				nr_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solicitante_w, 'CRM'), 1, 15);
				sg_uf_cons_req_w	:= substr(obter_dados_medico(cd_medico_solicitante_w, 'UFCRM'), 1, 2);

				select	max(nr_sequencia)
				into STRICT	nr_seq_prestador_req_w
				from	pls_prestador
				where	cd_pessoa_fisica = cd_medico_solicitante_w;

				select	max(substr(somente_numero_char(coalesce(cd_prest_a400, cd_prestador)), 1, 8))
				into STRICT	cd_prestador_req_w
				from	pls_prestador
				where	nr_sequencia = nr_seq_prestador_req_w;

			-- Se nao tiver, buscar o prestador do atendimento
			elsif (r_c02_w.nr_seq_prestador IS NOT NULL AND r_c02_w.nr_seq_prestador::text <> '') then
				select	coalesce(cd_cgc, substr(obter_dados_pf(cd_pessoa_fisica, 'CPF'), 1, 14)),
					cd_pessoa_fisica,
					trim(both substr(pls_obter_dados_prestador(nr_sequencia, 'N'), 1, 70)),
					nr_sequencia,
					substr(somente_numero_char(coalesce(cd_prest_a400, cd_prestador)), 1, 8)
				into STRICT	nr_cgc_cpf_req_w,
					cd_medico_solicitante_w,
					nm_prestador_req_w,
					nr_seq_prestador_pgto_w,
					cd_prestador_req_w
				from	pls_prestador
				where	nr_sequencia = r_c02_w.nr_seq_prestador;

				select	count(1)
				into STRICT	qt_registro_med_w
				from	medico
				where	cd_pessoa_fisica = cd_medico_solicitante_w  LIMIT 1;

				if (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
					nr_cgc_cpf_req_w := substr(obter_dados_pf(cd_medico_solicitante_w, 'CPF'), 1, 14);

					if (qt_registro_med_w > 0) then
						nm_prestador_req_w	:= trim(both substr(obter_nome_medico(cd_medico_solicitante_w, 'N'), 1, 70));
						sg_cons_prof_req_w	:= substr(pls_obter_sg_conselho_ptu(cd_medico_solicitante_w), 1, 12);
						nr_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solicitante_w, 'CRM'), 1, 15);
						sg_uf_cons_req_w	:= substr(obter_dados_medico(cd_medico_solicitante_w, 'UFCRM'), 1, 2);

						if (coalesce(cd_prestador_req_w::text, '') = '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_prestador_req_w
							from	pls_prestador
							where	cd_pessoa_fisica = cd_medico_solicitante_w;

							select	max(substr(somente_numero_char(coalesce(cd_prest_a400, cd_prestador)), 1, 8))
							into STRICT	cd_prestador_req_w
							from	pls_prestador
							where	nr_sequencia = nr_seq_prestador_req_w;
						end if;
					end if;
				end if;
				qt_registro_med_w := 0;

			-- OS 486959 - No ultimo dos casos, tenta buscar o prestador requisitante/solicitante direto da guia
			elsif (r_c02_w.cd_guia_referencia IS NOT NULL AND r_c02_w.cd_guia_referencia::text <> '') then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_guia_plano
				where	cd_guia = r_c02_w.cd_guia_referencia  LIMIT 1;

				if (qt_registro_w > 0) then
					select	max(cd_medico_solicitante),
						trim(both substr(pls_obter_dados_prestador(max(nr_seq_prestador), 'N'), 1, 70)),
						max(nr_seq_prestador)
					into STRICT	cd_medico_solicitante_w,
						nm_prestador_req_w,
						nr_seq_prestador_req_w
					from	pls_guia_plano
					where	cd_guia	= r_c02_w.cd_guia_referencia;

					if (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
						nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_solicitante_w, 'CPF'), 1, 14);
						nm_prestador_req_w	:= trim(both coalesce(substr(obter_nome_medico(cd_medico_solicitante_w, 'N'), 1, 70), nm_prestador_req_w));
						sg_cons_prof_req_w	:= substr(pls_obter_sg_conselho_ptu(cd_medico_solicitante_w), 1, 12);
						nr_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solicitante_w, 'CRM'), 1, 15);
						sg_uf_cons_req_w	:= substr(obter_dados_medico(cd_medico_solicitante_w, 'UFCRM'), 1, 2);

						select	max(substr(somente_numero_char(coalesce(cd_prest_a400, cd_prestador)), 1, 8))
						into STRICT	cd_prestador_req_w
						from	pls_prestador
						where	nr_sequencia = nr_seq_prestador_req_w;

						if (coalesce(cd_prestador_req_w::text, '') = '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_prestador_req_w
							from	pls_prestador
							where	cd_pessoa_fisica = cd_medico_solicitante_w;

							select	max(substr(somente_numero_char(coalesce(cd_prest_a400, cd_prestador)), 1, 8))
							into STRICT	cd_prestador_req_w
							from	pls_prestador
							where	nr_sequencia = nr_seq_prestador_req_w;
						end if;
					end if;
				end if;
			end if;

			if (coalesce(trim(both cd_medico_solicitante_w)::text, '') = '') and (r_c02_w.ie_tipo_guia = '3') then

				if ((trim(both cd_medico_exec_partic_w) IS NOT NULL AND (trim(both cd_medico_exec_partic_w))::text <> '')) then
					nr_cgc_cpf_req_w := substr(obter_dados_pf(cd_medico_exec_partic_w, 'CPF'), 1, 14);

				elsif ((trim(both r_c02_w.nr_cpf_imp) IS NOT NULL AND (trim(both r_c02_w.nr_cpf_imp))::text <> '')) then
					nr_cgc_cpf_req_w := r_c02_w.nr_cpf_imp;

				elsif ((trim(both r_c02_w.cd_medico_imp) IS NOT NULL AND (trim(both r_c02_w.cd_medico_imp))::text <> '')) then
					nr_cgc_cpf_req_w := substr(obter_dados_pf(r_c02_w.cd_medico_imp, 'CPF'), 1, 14);

				elsif ((trim(both r_c02_w.cd_medico_exec_conta) IS NOT NULL AND (trim(both r_c02_w.cd_medico_exec_conta))::text <> '')) then
					nr_cgc_cpf_req_w := substr(obter_dados_pf(r_c02_w.cd_medico_exec_conta, 'CPF'), 1, 14);
				end if;

				nm_prestador_req_w	:= nm_profissional_prestador_w;
				sg_cons_prof_req_w	:= sg_cons_prof_prest_w;
				nr_cons_prof_req_w	:= nr_cons_prof_prest_w;
				sg_uf_cons_req_w	:= sg_uf_cons_prest_w;
			end if;

			if (r_c02_w.ie_tipo_guia = '6') and (r_c02_w.cd_guia_referencia IS NOT NULL AND r_c02_w.cd_guia_referencia::text <> '') then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_guia_plano
				where	cd_guia	= r_c02_w.cd_guia_referencia  LIMIT 1;

				if (qt_registro_w > 0) then
					select	max(cd_medico_solicitante),
						trim(both substr(pls_obter_dados_prestador(max(nr_seq_prestador), 'N'), 1, 70)),
						max(nr_seq_prestador)
					into STRICT	cd_medico_solicitante_w,
						nm_prestador_req_w,
						nr_seq_prestador_req_w
					from	pls_guia_plano
					where	cd_guia	= r_c02_w.cd_guia_referencia;

					if (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
						nr_cgc_cpf_req_w	:= substr(obter_dados_pf(cd_medico_solicitante_w, 'CPF'), 1, 14);
						nm_prestador_req_w	:= trim(both coalesce(substr(obter_nome_medico(cd_medico_solicitante_w, 'N'), 1, 70), nm_prestador_req_w));
						sg_cons_prof_req_w	:= substr(pls_obter_sg_conselho_ptu(cd_medico_solicitante_w), 1, 12);
						nr_cons_prof_req_w	:= substr(obter_dados_medico(cd_medico_solicitante_w, 'CRM'), 1, 15);
						sg_uf_cons_req_w	:= substr(obter_dados_medico(cd_medico_solicitante_w, 'UFCRM'), 1, 2);

						select	max(substr(somente_numero_char(coalesce(cd_prest_a400, cd_prestador)), 1, 8))
						into STRICT	cd_prestador_req_w
						from	pls_prestador
						where	nr_sequencia = nr_seq_prestador_req_w;

						if (coalesce(cd_prestador_req_w::text, '') = '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_prestador_req_w
							from	pls_prestador
							where	cd_pessoa_fisica = cd_medico_solicitante_w;

							select	max(substr(somente_numero_char(coalesce(cd_prest_a400, cd_prestador)), 1, 8))
							into STRICT	cd_prestador_req_w
							from	pls_prestador
							where	nr_sequencia = nr_seq_prestador_req_w;
						end if;
					end if;
				end if;
			end if;

			cd_prestador_req_w := coalesce(cd_prestador_req_w, 1);

			-- CONSULTA / SP SADT- OS 782855
			if (r_c02_w.ie_tipo_guia in ('3', '4')) then
				sg_cons_prof_prest_w	:= coalesce(sg_cons_prof_prest_w, sg_cons_prof_req_w);
				nr_cons_prof_prest_w	:= coalesce(nr_cons_prof_prest_w, nr_cons_prof_req_w);
				sg_uf_cons_prest_w	:= coalesce(sg_uf_cons_prest_w, sg_uf_cons_req_w);
			end if;

			if (r_c02_w.nr_seq_guia IS NOT NULL AND r_c02_w.nr_seq_guia::text <> '') then
				select	coalesce(dt_liberacao, dt_autorizacao),
					dt_solicitacao
				into STRICT	dt_autoriz_w,
					dt_solicitacao_w
				from	pls_guia_plano
				where	nr_sequencia	= r_c02_w.nr_seq_guia;

				select	max(nr_seq_requisicao)
				into STRICT	nr_seq_requisicao_w
				from	pls_execucao_req_item
				where	nr_seq_guia = r_c02_w.nr_seq_guia;
			end if;

			if (r_c02_w.cd_guia IS NOT NULL AND r_c02_w.cd_guia::text <> '') and (coalesce(r_c02_w.nr_seq_guia::text, '') = '') then
				select	coalesce(max(dt_liberacao), max(dt_autorizacao)),
					max(dt_solicitacao)
				into STRICT	dt_autoriz_w,
					dt_solicitacao_w
				from	pls_guia_plano
				where	cd_guia		= r_c02_w.cd_guia
				and	nr_seq_segurado	= r_c02_w.nr_seq_segurado;
			end if;

			if (r_c02_w.ie_tipo_conta = 'P') then
				-- ##################################### DATA DO PROCEDIMENTO #####################################
				ie_tipo_data_w := pls_obter_regra_data_ptu_serv(	ie_tipo_intercambio_w, r_c02_w.ie_tipo_guia, cd_procedimento_w, ie_origem_proced_w, ie_tipo_data_w, r_c02_w.nr_seq_tipo_atendimento, nr_seq_congenere_w, r_c02_w.ie_regime_atendimento, r_c02_w.ie_saude_ocupacional);
								
				dt_procedimento_w := pls_obter_data_serv_ptu_A500(	r_c02_w.nr_seq_conta, ie_participante_w, r_c02_w.ie_tipo_guia, r_c02_w.nr_seq_segurado, r_c02_w.cd_guia_ok, nr_seq_congenere_w, dt_geracao_lote_w, r_c02_w.dt_atendimento, dt_alta_w, ie_tipo_data_w, r_c02_w.ie_tipo_conta, dt_item_w, ie_conta_fechada_w, dt_procedimento_w);
				-- ##################################### DATA DO PROCEDIMENTO #####################################
				if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
					select	ds_procedimento
					into STRICT	ds_servico_orig_w
					from	procedimento
					where	cd_procedimento	= cd_procedimento_w
					and	ie_origem_proced = ie_origem_proced_w;
				end if;

				if (r_c02_w.nr_seq_segurado IS NOT NULL AND r_c02_w.nr_seq_segurado::text <> '') then
					select	nr_seq_contrato,
						nr_seq_intercambio
					into STRICT	nr_seq_contrato_w,
						nr_seq_intercambio_w
					from	pls_segurado
					where	nr_sequencia = r_c02_w.nr_seq_segurado;
				end if;

				-- A origem do procedimento e buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.
				SELECT * FROM pls_obter_proced_conversao(	cd_procedimento_w, ie_origem_proced_w, nr_seq_prestador_exec_w, cd_estabelecimento_w, 1, nr_seq_congenere_w, 1, 'E', nr_seq_contrato_w, nr_seq_intercambio_w, null, null, ie_tipo_intercambio_w, cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w, dt_procedimento_w, r_c02_w.nr_seq_tipo_atendimento, nr_seq_grau_partic_w, nr_seq_prestador_partic_w) INTO STRICT cd_proc_conversao_w, ie_origem_proced_conv_w, nr_seq_regra_conv_w, ie_somente_codigo_w;

				ie_tipo_part_regra_w := pls_obter_regra_partic_proc(	r_c02_w.nr_seq_conta_proc, cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, nr_seq_grau_partic_w, ie_tipo_part_regra_w, 'N', ie_diaria_w);

				cd_proc_conversao_w	:= coalesce(cd_proc_conversao_w, cd_procedimento_w);
				ie_origem_proced_conv_w	:= coalesce(ie_origem_proced_conv_w, ie_origem_proced_w);

				if (nr_seq_regra_conv_w IS NOT NULL AND nr_seq_regra_conv_w::text <> '') then
					cd_servico_w := substr(cd_proc_conversao_w, 1, 8);

					select	substr(ds_proc_envio, 1, 80)
					into STRICT	ds_servico_w
					from	pls_conversao_proc
					where	nr_sequencia = nr_seq_regra_conv_w;
				else
					cd_servico_w	:= substr(cd_proc_conversao_w, 1, 8);
					ds_servico_w	:= substr(pls_obter_desc_procedimento(cd_proc_conversao_w, ie_origem_proced_conv_w), 1, 80);
				end if;

				if (coalesce(ie_somente_codigo_w, 'N') = 'S') then
					ds_servico_w := substr(ds_servico_orig_w, 1, 80);
				end if;

				if (coalesce(ie_origem_proced_conv_w::text, '') = '') then
					ie_origem_proced_conv_w	:= pls_obter_origem_proced(cd_estabelecimento_w, null, 'L', dt_procedimento_w, null);
				end if;

				select	count(1)
				into STRICT	qt_proced_origem_w
				from	procedimento
				where	cd_procedimento		= cd_proc_conversao_w
				and	ie_origem_proced	= ie_origem_proced_conv_w  LIMIT 1;

				-- Se este procedimento nao existir na origem padrao e selecionado o max origem proced
				if (qt_proced_origem_w = 0) then
					select	max(ie_origem_proced)
					into STRICT	ie_origem_proced_conv_w
					from	procedimento
					where	cd_procedimento	= cd_proc_conversao_w;
				end if;

				cd_procedimento_w 	:= cd_proc_conversao_w;
				ie_origem_proced_w	:= ie_origem_proced_conv_w;

				select 	max(ie_classificacao)
				into STRICT 	ie_tipo_despesa_proc_w
				from	procedimento
				where	cd_procedimento = cd_procedimento_w
				and	ie_origem_proced = ie_origem_proced_w;

				if (ie_tipo_despesa_proc_w IS NOT NULL AND ie_tipo_despesa_proc_w::text <> '') and (ie_tipo_despesa_w <> 4)then
					ie_tipo_despesa_w := ie_tipo_despesa_proc_w;
				end if;

				if (ie_tipo_despesa_w  = 1) then
					ie_tipo_tabela_w := 0;
				elsif (ie_tipo_despesa_w = 2) then
					ie_tipo_tabela_w := 1;
				elsif (ie_tipo_despesa_w = 3) then
					ie_tipo_tabela_w := 1;
				elsif (ie_tipo_despesa_w = 4) then
					ie_tipo_tabela_w := 2;
				end if;

				SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_w, ie_origem_proced_w, cd_area_regra_w, cd_especialidade_regra_w, cd_grupo_regra_w, ie_origem_regra_w) INTO STRICT cd_area_regra_w, cd_especialidade_regra_w, cd_grupo_regra_w, ie_origem_regra_w;

			elsif (r_c02_w.ie_tipo_conta = 'M') then
				-- ##################################### DATA DO MATERIAL #####################################
				ie_tipo_data_w := pls_obter_regra_data_ptu_serv(	ie_tipo_intercambio_w, r_c02_w.ie_tipo_guia, null, null, ie_tipo_data_w, r_c02_w.nr_seq_tipo_atendimento, nr_seq_congenere_w, r_c02_w.ie_regime_atendimento, r_c02_w.ie_saude_ocupacional);
								
				dt_procedimento_w := pls_obter_data_serv_ptu_A500(	r_c02_w.nr_seq_conta, ie_participante_w, r_c02_w.ie_tipo_guia, r_c02_w.nr_seq_segurado, r_c02_w.cd_guia_ok, nr_seq_congenere_w, dt_geracao_lote_w, r_c02_w.dt_atendimento, dt_alta_w, ie_tipo_data_w, r_c02_w.ie_tipo_conta, dt_item_w, ie_conta_fechada_w, dt_procedimento_w);
				-- ##################################### DATA DO MATERIAL #####################################
				nr_seq_material_w := cd_procedimento_w;

				select	max(cd_material_ops),
					max(ds_material),
					max(ie_tipo_despesa),
					max(nr_seq_tuss_mat_item),
					max(nr_seq_material_unimed)
				into STRICT	cd_material_ops_w,
					ds_servico_orig_w,
					ie_tipo_despesa_mat_w,
					nr_seq_tuss_mat_item_w,
					nr_seq_material_unimed_w
				from	pls_material
				where	nr_sequencia = nr_seq_material_w;

				-- Buscar o tipo de despesa no cadastro de materiais considerando a vigencia da carga, juntamente com a data de atendimento,
				-- visto que aqui logo acima, estavam buscando o tipo de despesa no material, porem, o tipo de despesa do material, na data de atendimento da conta poderia estar de uma forma
				-- e agora na geracao das informacoes PTU o tipo de despesa na PLS_MATERIAL pode estar de outra, devido a uma nova carga de material ou algo do genero
				if (ie_data_conv_mat_unimed_w = 'DI') and (nr_seq_material_unimed_w IS NOT NULL AND nr_seq_material_unimed_w::text <> '') then
					select	max(cd_material)
					into STRICT	cd_material_unimed_w
					from	pls_material_unimed
					where	nr_sequencia = nr_seq_material_unimed_w;

					if (cd_material_unimed_w IS NOT NULL AND cd_material_unimed_w::text <> '') then
						select	max(a.dt_inicio_vigencia_icms)
						into STRICT	dt_inicio_vig_mat_w
						from	pls_material_unimed 		c,
							pls_lote_imp_mat_uni_reg 	b,
							pls_lote_imp_mat_unimed		a
						where	a.nr_sequencia			= b.nr_seq_lote
						and	b.nr_seq_mat_unimed		= c.nr_sequencia
						and	c.cd_material			= cd_material_unimed_w
						and	a.dt_inicio_vigencia_icms 	<= dt_item_w;

						if (dt_inicio_vig_mat_w IS NOT NULL AND dt_inicio_vig_mat_w::text <> '') then
							select	max(b.ie_produto)
							into STRICT	ie_produto_ww
							from	pls_material_unimed 		c,
								pls_lote_imp_mat_uni_reg 	b,
								pls_lote_imp_mat_unimed		a
							where	a.nr_sequencia			= b.nr_seq_lote
							and	b.nr_seq_mat_unimed		= c.nr_sequencia
							and	c.cd_material			= cd_material_unimed_w
							and	a.dt_inicio_vigencia_icms	= dt_inicio_vig_mat_w;

							-- (1,2,3,4,5)(Material de consumo hospitalar,Orteses,Proteses,Material especial,OPME)
							if (ie_produto_ww in (2, 3, 4, 5)) then
								-- (1,2,3,4,5,6,7)( Gases Medicinais,Medicamentos,Materiais,Taxas Diversas,Diarias,Aluguel,OPM)
								ie_tipo_despesa_w	:= 7;
							end if;
						end if;
					end if;
				end if;

				ie_tipo_despesa_w 	:= coalesce(ie_tipo_despesa_w, ie_tipo_despesa_mat_w);
				cd_servico_w		:= null;
				ie_tipo_despesa_mat_w	:= ie_tipo_despesa_w;

				if (ie_tipo_despesa_w = 1) then
					ie_tipo_tabela_w := 2;
				elsif (ie_tipo_despesa_w = 2) then
					ie_tipo_tabela_w := 3;
				elsif (ie_tipo_despesa_w = 3) then
					ie_tipo_tabela_w := 2;
				elsif (ie_tipo_despesa_w = 7) then
					ie_tipo_tabela_w := 2;
				end if;

				SELECT * FROM pls_obter_mat_conversao(cd_material_ops_w, ie_tipo_despesa_mat_w, nm_usuario_p, 'E', null, null, nr_seq_prestador_exec_w, nr_seq_material_w, cd_servico_saida_w, ds_servico_w, ie_tipo_tabela_conv_w, nr_seq_regra_conv_mat_w, null) INTO STRICT nr_seq_material_w, cd_servico_saida_w, ds_servico_w, ie_tipo_tabela_conv_w, nr_seq_regra_conv_mat_w;
				-- Se nao conseguiu converter, o nr_seq_material_w recebe null, portanto e "devolvido" o seu valor anterior o cd_procedimento do cursor c02
				nr_seq_material_w := coalesce(nr_seq_material_w, cd_procedimento_w);

				ie_tipo_tabela_w := coalesce(ie_tipo_tabela_conv_w, ie_tipo_tabela_w);

				cd_servico_w := substr(to_char(somente_numero(cd_servico_saida_w)), 1, 15);

				if (coalesce(cd_servico_w, 0) = 0) then
					cd_servico_w		:= null;
					nr_seq_material_w	:= cd_procedimento_w;
				end if;

				-- Se nao encontrar, buscar na tabela de conversao do PTU
				if (coalesce(cd_servico_w::text, '') = '') then
					ie_somente_codigo_w := null;

					SELECT * FROM ptu_obter_material_conversao(	cd_material_ops_w, ie_tipo_tabela_w, dt_procedimento_w, 'E', 'A', coalesce(ie_tipo_despesa_mat_w, ie_tipo_despesa_w), ie_tipo_intercambio_w, nr_seq_mat_unimed_w, cd_servico_mat_w, ie_somente_codigo_w) INTO STRICT nr_seq_mat_unimed_w, cd_servico_mat_w, ie_somente_codigo_w;

					if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
						select	cd_material,
							substr(coalesce(ds_material, nm_material), 1, 80),
							coalesce(ie_codificacao, '1')
						into STRICT	cd_servico_w,
							ds_servico_w,
							ie_codificacao_w
						from	pls_material_unimed
						where	nr_sequencia = nr_seq_mat_unimed_w;

						nr_seq_mat_uni_conv_w := nr_seq_mat_unimed_w;
						ie_mat_a900_w := 'S';
					end if;

					if (coalesce(ie_somente_codigo_w, 'N') = 'S') then
						ds_servico_w := substr(ds_servico_orig_w, 1, 80);
					end if;

					if (coalesce(nr_seq_mat_unimed_w::text, '') = '') and (cd_servico_mat_w IS NOT NULL AND cd_servico_mat_w::text <> '') then
						select	max(substr(coalesce(ds_material, nm_material), 1, 80)),
							max(nr_sequencia),
							coalesce(max(ie_codificacao), '1')
						into STRICT	ds_servico_w,
							nr_seq_mat_unimed_w,
							ie_codificacao_w
						from	pls_material_unimed
						where	cd_material = cd_servico_mat_w;

						if (coalesce(nr_seq_mat_unimed_w::text, '') = '') then
							select	max(substr(coalesce(ds_material, nm_material), 1, 80)),
								max(nr_sequencia),
								coalesce(max(ie_codificacao), '1')
							into STRICT	ds_servico_w,
								nr_seq_mat_unimed_w,
								ie_codificacao_w
							from	pls_material_unimed
							where	cd_anterior_material = cd_servico_mat_w;

							if (coalesce(nr_seq_mat_unimed_w::text, '') = '') then
								select	max(substr(coalesce(ds_material, nm_material), 1, 80)),
									max(nr_sequencia),
									coalesce(max(ie_codificacao), '1')
								into STRICT	ds_servico_w,
									nr_seq_mat_unimed_w,
									ie_codificacao_w
								from	pls_material_unimed
								where	cd_anterior_medicamento	= cd_servico_mat_w;
							end if;
						end if;

						if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
							ie_mat_a900_w := 'S';
						end if;
					end if;
					cd_servico_w := cd_servico_mat_w;
				end if;

				if (coalesce(cd_servico_w::text, '') = '') then
					-- cd_procedimento_w contem o NR_SEQ_MATERIAL (PLS_MATERIAL)
					nr_seq_material_w	:= cd_procedimento_w;
					ds_servico_w		:= substr(pls_obter_desc_material(nr_seq_material_w), 1, 80);
				end if;

				--Somente se nao tinha nenhuma regra de conversao em cooperativas medicas\regras gerais\conversao (cd_servico_w is null)
				if	((coalesce(ie_material_intercambio_w, 'S') = 'S') and (coalesce(cd_servico_w::text, '') = '')) then
					cd_servico_w := nr_seq_material_w;

				--Somente se nao tinha nenhuma regra de conversao em cooperativas medicas\regras gerais\conversao (cd_servico_w is null)
				elsif	((coalesce(ie_material_intercambio_w, 'S') = 'C') and (coalesce(cd_servico_w::text, '') = '')) then
					cd_servico_w := cd_material_ops_w;

				--Se utilizar a gestao de materias, entao as conversoes cadastradas la tem prioridade em relacao as conversoes cadastradas em cooperativas medicas
				elsif (coalesce(ie_material_intercambio_w, 'S') = 'CI') then
					cd_servico_a900_w	:= null;
					nr_seq_material_temp_w	:= nr_seq_material_w;
					cd_servico_temp_w	:= cd_servico_w;

					-- 'OPS - Gestao de Operadora > Parametros da OPS > Faturamento', campo 'Data conversao material PTU'
					if (ie_data_conv_mat_unimed_w = 'DA') then -- Data atual
						SELECT * FROM pls_obter_mat_a900_vigente(nr_seq_material_temp_w, clock_timestamp(), cd_servico_a900_w, null) INTO STRICT nr_seq_material_temp_w, cd_servico_a900_w;
					else -- Data item
						SELECT * FROM pls_obter_mat_a900_vigente(nr_seq_material_temp_w, dt_item_w, cd_servico_a900_w, null) INTO STRICT nr_seq_material_temp_w, cd_servico_a900_w;
					end if;

					cd_servico_temp_w := somente_numero(cd_servico_a900_w);
					if (cd_servico_temp_w = 0) then
						cd_servico_temp_w := null;
					else
						ie_mat_a900_w := 'S';

						-- Se a sequencia do material "PTU" veio da regra de conversao,
						-- e nao vai ser utilizado, tentar pegar os dados do material "PLS"
						if (nr_seq_mat_uni_conv_w = nr_seq_mat_unimed_w) then
							select	coalesce(max(a.nr_seq_material_unimed),nr_seq_mat_unimed_w),
								coalesce(max(b.ie_codificacao), ie_codificacao_w)
							into STRICT	nr_seq_mat_unimed_w,
								ie_codificacao_w
							from	pls_material	a,
								pls_material_unimed b
							where	b.nr_sequencia	= a.nr_seq_material_unimed
							and	a.nr_sequencia	= nr_seq_material_w;
						end if;

						select	coalesce(coalesce(max(a.nr_seq_material_unimed),max(b.nr_sequencia)),nr_seq_mat_unimed_w),
							coalesce(max(b.ie_codificacao), '1')
						into STRICT	nr_seq_mat_unimed_w,
							ie_codificacao_w
						from	pls_material_a900	a,
							pls_material_unimed	b
						where	b.cd_material		= a.cd_material_a900
						and	a.cd_material_a900	= cd_servico_a900_w
						and	dt_item_w 		between a.dt_inicio_vigencia and fim_dia(a.dt_fim_vigencia);
					end if;

					if (coalesce(cd_servico_temp_w::text, '') = '') and (qt_cad_mat_a900_w = 0) then
						select	nr_seq_material_unimed
						into STRICT	nr_seq_mat_unimed_w
						from	pls_material
						where	nr_sequencia = nr_seq_material_w;

						if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
							select	cd_material,
								coalesce(ie_codificacao, '1')
							into STRICT	cd_servico_temp_w,
								ie_codificacao_w
							from	pls_material_unimed
							where	nr_sequencia = nr_seq_mat_unimed_w;

							ie_mat_a900_w := 'S';
						end if;
					end if;

					-- Conversao pela gestao de materiais tem prioridade sobre a convesao cadastrada nas cooperativas medicas, caso encontrar uma conversao valida na gestao de materiais, cd_servico e nr_seq_material sera sobrescrito
					if (cd_servico_temp_w IS NOT NULL AND cd_servico_temp_w::text <> '') then
						cd_servico_w := cd_servico_temp_w;

						select	coalesce(max(ie_codificacao), ie_codificacao_w)
						into STRICT	ie_codificacao_conv_w
						from	pls_material_unimed
						where	cd_material	= cd_servico_w;
					end if;

					if (nr_seq_material_temp_w IS NOT NULL AND nr_seq_material_temp_w::text <> '') and (cd_servico_temp_w IS NOT NULL AND cd_servico_temp_w::text <> '') then
						nr_seq_material_w	:= nr_seq_material_temp_w;
						ds_servico_w		:= substr(pls_obter_desc_material(nr_seq_material_w), 1, 80); --pode ter obtido outra sequencia de material
					end if;
				end if;

				-- Alterado - Unimed Litoral
				-- Caso tenha uma conversao de codigo ou de item, respeitar a alteracao que ocorreu na analise de pos-estabelecido (22/11)
				if (r_c02_w.cd_item_convertido IS NOT NULL AND r_c02_w.cd_item_convertido::text <> '') or (r_c02_w.ds_item_convertido IS NOT NULL AND r_c02_w.ds_item_convertido::text <> '') then
					cd_servico_w	:= coalesce(trim(both r_c02_w.cd_item_convertido), cd_servico_w);
					ds_servico_w	:= coalesce(trim(both substr(r_c02_w.ds_item_convertido, 1, 80)), ds_servico_w);

					-- Se o item for com codigo convertido, enviar a codificacao e unidade medida conforme a conversao
					if (r_c02_w.cd_item_convertido IS NOT NULL AND r_c02_w.cd_item_convertido::text <> '') then
						select	coalesce(max(ie_codificacao), ie_codificacao_w),
							max(cd_unidade_medida),
							max(nr_sequencia)
						into STRICT	ie_codificacao_conv_w,
							cd_unidade_med_conv_w,
							nr_seq_mat_unimed_w
						from	pls_material_unimed
						where	cd_material	= cd_servico_w;
					end if;
				end if;

				-- Se ainda assim nao encontrar, lancar o codigo da operadora mesmo
				if (coalesce(cd_servico_w::text, '') = '') then
					select	max((cd_material_ops)::numeric )
					into STRICT	cd_servico_w
					from	pls_material
					where	nr_sequencia = nr_seq_material_w;
				end if;

				ie_tipo_part_regra_w := pls_obter_regra_partic_mat(r_c02_w.nr_seq_conta_mat, ie_tipo_tabela_w, ie_tipo_part_regra_w, 'N');
			end if;

			cd_area_regra_w			:= null;
			cd_especialidade_regra_w	:= null;
			cd_grupo_regra_w		:= null;
			ie_origem_regra_w		:= null;
			-- Os campos abaixo foram limpos visto que os mesmos recebem os valores pls_conta_mat.nr_seq_material e pls_conta_mat.ie_origem_preco no caso de material, posteriormente vamos separar em novas variaveis
			--cd_procedimento_w		:= null;
			--ie_origem_proced_w		:= null;
			select	max(nr_seq_estrut_mat),
				max(cd_material_ops),
				max(cd_material)
			into STRICT	nr_seq_estrut_mat_w,
				cd_material_ops_w,
				cd_material_hosp_w
			from	pls_material
			where	nr_sequencia = nr_seq_material_w;

			if (ie_mat_a900_w = 'S') then
				if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
					select	somente_numero(max(nr_registro_anvisa)),
						max(cd_ref_material_fab),
						max(cd_unidade_medida),
						max(nm_fabricante),
						max(nm_importador),
						max(cd_material),
						coalesce(max(ie_codificacao), '1')
					into STRICT	nr_registro_anvisa_w,
						cd_ref_material_fab_w,
						cd_unidade_medida_w,
						nm_fabricante_w,
						nm_importador_w,
						cd_material_a900_w,
						ie_codificacao_w
					from	pls_material_unimed
					where	nr_sequencia = nr_seq_mat_unimed_w;

					if (cd_material_ops_w IS NOT NULL AND cd_material_ops_w::text <> '') and (coalesce(nr_registro_anvisa_w, 0) = 0) and (coalesce(cd_ref_material_fab_w::text, '') = '') then
						select	somente_numero(max(nr_registro_anvisa)),
							max(cd_ref_material_fab),
							coalesce(max(cd_unidade_medida),cd_unidade_medida_w),
							max(nm_fabricante),
							max(nm_importador),
							max(cd_material),
							coalesce(max(ie_codificacao), '1')
						into STRICT	nr_registro_anvisa_w,
							cd_ref_material_fab_w,
							cd_unidade_medida_w,
							nm_fabricante_w,
							nm_importador_w,
							cd_material_a900_w,
							ie_codificacao_w
						from 	pls_material_unimed
						where 	cd_material = cd_material_ops_w;
					end if;

				elsif (cd_servico_w IS NOT NULL AND cd_servico_w::text <> '') then
					select	somente_numero(max(nr_registro_anvisa)),
						max(cd_ref_material_fab),
						max(cd_unidade_medida),
						max(nm_fabricante),
						max(nm_importador),
						max(cd_material),
						coalesce(max(ie_codificacao), '1')
					into STRICT	nr_registro_anvisa_w,
						cd_ref_material_fab_w,
						cd_unidade_medida_w,
						nm_fabricante_w,
						nm_importador_w,
						cd_material_a900_w,
						ie_codificacao_w
					from	pls_material_unimed
					where	cd_material = cd_servico_w;
				end if;


				-- Pegar a unidade de medida conforme A900
				if (cd_material_a900_w IS NOT NULL AND cd_material_a900_w::text <> '') then
					select	max(l.dt_inicio_vigencia_icms)
					into STRICT	dt_inicio_vig_mat_w
					from	pls_material_unimed m,
						pls_lote_imp_mat_uni_reg r,
						pls_lote_imp_mat_unimed	l
					where	m.nr_sequencia			= r.nr_seq_mat_unimed
					and	l.nr_sequencia			= r.nr_seq_lote
					and	m.cd_material			= cd_material_a900_w
					and	l.dt_inicio_vigencia_icms 	<= dt_procedimento_w;

					if (dt_inicio_vig_mat_w IS NOT NULL AND dt_inicio_vig_mat_w::text <> '') then
						select	coalesce(max(r.cd_unidade_medida),cd_unidade_medida_w),
							coalesce(max(r.ie_codificacao),ie_codificacao_w)
						into STRICT	cd_unidade_medida_w,
							ie_codificacao_w
						from	pls_material_unimed m,
							pls_lote_imp_mat_uni_reg r,
							pls_lote_imp_mat_unimed	l
						where	m.nr_sequencia			= r.nr_seq_mat_unimed
						and	l.nr_sequencia			= r.nr_seq_lote
						and	m.cd_material			= cd_material_a900_w
						and	l.dt_inicio_vigencia_icms	= dt_inicio_vig_mat_w;
					end if;
				end if;

				-- Conforme a conversao do pos-estabelecido
				if (cd_unidade_med_conv_w IS NOT NULL AND cd_unidade_med_conv_w::text <> '') then
					cd_unidade_medida_w := cd_unidade_med_conv_w;
				end if;

				if (ie_codificacao_conv_w IS NOT NULL AND ie_codificacao_conv_w::text <> '') then
					ie_codificacao_w := ie_codificacao_conv_w;
				end if;

				-- Prioriza do pos
				if (r_c02_w.cd_unidade_medida_pos IS NOT NULL AND r_c02_w.cd_unidade_medida_pos::text <> '') then
					cd_unidade_medida_w := r_c02_w.cd_unidade_medida_pos;
				end if;

				if (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then
					-- Prioria a unidade de medida do PTU
					select	max(nr_unidade_ptu)
					into STRICT	nr_uni_medida_ptu_w
					from	unidade_medida
					where	upper(cd_unidade_ptu) = upper(cd_unidade_medida_w);

					-- se ainda nao encontrou a unidade de medida, tenta novamente usando apenas a unidade do hospital
					if (coalesce(nr_uni_medida_ptu_w::text, '') = '') then
						select	max(nr_unidade_ptu)
						into STRICT	nr_uni_medida_ptu_w
						from	unidade_medida
						where	upper(cd_unidade_medida) = upper(cd_unidade_medida_w);
					end if;

					-- Em alguns casos, apos a conversao do A900 a rotina nao encontra a unidade de medida, tenta pegar a unidade do material original
					if (coalesce(nr_uni_medida_ptu_w::text, '') = '') and (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
						select	max(cd_unidade_medida)
						into STRICT	cd_unidade_medida_w
						from	pls_material
						where	nr_sequencia	= nr_seq_material_w;

						-- Prioria a unidade de medida do PTU
						select	max(nr_unidade_ptu)
						into STRICT	nr_uni_medida_ptu_w
						from	unidade_medida
						where	upper(cd_unidade_ptu)	= upper(cd_unidade_medida_w)
						and	ie_situacao		= 'A';

						-- se ainda nao encontrou a unidade de medida, tenta novamente usando apenas a unidade do hospital
						if (coalesce(nr_uni_medida_ptu_w::text, '') = '') then
							select	max(nr_unidade_ptu)
							into STRICT	nr_uni_medida_ptu_w
							from	unidade_medida
							where	upper(cd_unidade_medida) = upper(cd_unidade_medida_w)
							and	ie_situacao		= 'A';
						end if;
					end if;

				end if;

			elsif (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
				select	somente_numero(max(p.nr_registro_anvisa)),
					max(p.cd_unidade_medida),
					max((	select	max(x.cd_material)
						from	pls_material_unimed x
						where	x.nr_sequencia = p.nr_seq_material_unimed)) cd_material_a900
				into STRICT	nr_registro_anvisa_w,
					cd_unidade_medida_w,
					cd_material_a900_w
				from	pls_material p
				where	p.nr_sequencia = nr_seq_material_w;

				if (coalesce(nr_seq_mat_unimed_w::text, '') = '') then
					select	max(nr_seq_material_unimed)
					into STRICT	nr_seq_mat_unimed_w
					from	pls_material
					where	nr_sequencia = nr_seq_material_w;

					if (coalesce(nr_seq_mat_unimed_w::text, '') = '') then
						select	max(u.nr_sequencia)
						into STRICT	nr_seq_mat_unimed_w
						from	pls_material p,
							pls_material_unimed u
						where	u.cd_material	= p.cd_material_ops_number
						and	p.nr_sequencia	= nr_seq_material_w;
					end if;
				end if;

				if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') and (coalesce(ie_codificacao_w::text, '') = '') then
					select	max(ie_codificacao)
					into STRICT	ie_codificacao_w
					from	pls_material_unimed
					where	nr_sequencia = nr_seq_mat_unimed_w;
				end if;

				if	((ie_tipo_tabela_w in (2,5)) and
					((coalesce(trim(both nr_registro_anvisa_w), 0) = 0) or ((coalesce(cd_ref_material_fab_w::text, '') = '') and (ie_tipo_despesa_w = 7)))) then
					if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
						select	somente_numero(max(nr_registro_anvisa)),
							max(cd_ref_material_fab),
							max(cd_unidade_medida),
							max(nm_fabricante),
							max(nm_importador),
							max(cd_material),
							coalesce(max(ie_codificacao), '1')
						into STRICT	nr_registro_anvisa_w,
							cd_ref_material_fab_w,
							cd_unidade_medida_w,
							nm_fabricante_w,
							nm_importador_w,
							cd_material_a900_w,
							ie_codificacao_w
						from	pls_material_unimed
						where	nr_sequencia = nr_seq_mat_unimed_w;

						cd_ref_material_fab_w := coalesce(cd_ref_material_fab_w, cd_ref_material_fab_opme_w);
					end if;
				-- OS 1915658 - jtonon - 14/06/19 - Quando a tabela se tratar de material ou medicamento e a flag ie_mat_a900_w nao estiver como S utilizamos a sequencia do material, buscamos o nr_seq_material_unimed e obtemos o ie_codificacao
				elsif (ie_tipo_tabela_w in (2,3)) then
					if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
						select	coalesce(max(ie_codificacao), '1'),
							coalesce(max(cd_unidade_medida),cd_unidade_medida_w)
						into STRICT	ie_codificacao_w,
							cd_unidade_medida_w
						from	pls_material_unimed
						where	nr_sequencia = nr_seq_mat_unimed_w;
					end if;
				end if;

				-- Pegar a unidade de medida conforme A900
				if (cd_material_a900_w IS NOT NULL AND cd_material_a900_w::text <> '') then
					select	max(l.dt_inicio_vigencia_icms)
					into STRICT	dt_inicio_vig_mat_w
					from	pls_material_unimed m,
						pls_lote_imp_mat_uni_reg r,
						pls_lote_imp_mat_unimed	l
					where	m.nr_sequencia			= r.nr_seq_mat_unimed
					and	l.nr_sequencia			= r.nr_seq_lote
					and	m.cd_material			= cd_material_a900_w
					and	l.dt_inicio_vigencia_icms 	<= dt_procedimento_w;

					if (dt_inicio_vig_mat_w IS NOT NULL AND dt_inicio_vig_mat_w::text <> '') then
						select	coalesce(max(r.cd_unidade_medida),cd_unidade_medida_w),
							coalesce(max(r.ie_codificacao),ie_codificacao_w)
						into STRICT	cd_unidade_medida_w,
							ie_codificacao_w
						from	pls_material_unimed m,
							pls_lote_imp_mat_uni_reg r,
							pls_lote_imp_mat_unimed	l
						where	m.nr_sequencia			= r.nr_seq_mat_unimed
						and	l.nr_sequencia			= r.nr_seq_lote
						and	m.cd_material			= cd_material_a900_w
						and	l.dt_inicio_vigencia_icms	= dt_inicio_vig_mat_w;
					end if;
				end if;

				-- Conforme a conversao do pos-estabelecido
				if (cd_unidade_med_conv_w IS NOT NULL AND cd_unidade_med_conv_w::text <> '') then
					cd_unidade_medida_w := cd_unidade_med_conv_w;
				end if;

				if (ie_codificacao_conv_w IS NOT NULL AND ie_codificacao_conv_w::text <> '') then
					ie_codificacao_w := ie_codificacao_conv_w;
				end if;

				-- Prioriza do pos
				if (r_c02_w.cd_unidade_medida_pos IS NOT NULL AND r_c02_w.cd_unidade_medida_pos::text <> '') then
					cd_unidade_medida_w := r_c02_w.cd_unidade_medida_pos;
				end if;

				if (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then
					select	max(nr_unidade_ptu)
					into STRICT	nr_uni_medida_ptu_w
					from	unidade_medida
					where	upper(cd_unidade_medida) = upper(cd_unidade_medida_w);

					if (coalesce(nr_uni_medida_ptu_w::text, '') = '') then
						select	max(nr_unidade_ptu)
						into STRICT	nr_uni_medida_ptu_w
						from	unidade_medida
						where	upper(cd_unidade_ptu) = upper(cd_unidade_medida_w);
					end if;

					if (coalesce(nr_uni_medida_ptu_w::text, '') = '') and (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
						select	max(cd_unidade_medida)
						into STRICT	cd_unidade_medida_w
						from	pls_material
						where	nr_sequencia	= nr_seq_material_w;

						-- Prioria a unidade de medida do PTU
						select	max(nr_unidade_ptu)
						into STRICT	nr_uni_medida_ptu_w
						from	unidade_medida
						where	upper(cd_unidade_ptu)	= upper(cd_unidade_medida_w)
						and	ie_situacao		= 'A';

						-- se ainda nao encontrou a unidade de medida, tenta novamente usando apenas a unidade do hospital
						if (coalesce(nr_uni_medida_ptu_w::text, '') = '') then
							select	max(nr_unidade_ptu)
							into STRICT	nr_uni_medida_ptu_w
							from	unidade_medida
							where	upper(cd_unidade_medida) = upper(cd_unidade_medida_w)
							and	ie_situacao		= 'A';
						end if;
					end if;
				end if;
			end if;

			if (ie_codificacao_w = '2') then -- TUSS
				if (ie_tipo_tabela_w = 2) then -- Material TNUMM
					ie_tipo_tabela_w := 5; -- Material TUSS
				elsif (ie_tipo_tabela_w = 3) then -- Medicamento TNUMM
					ie_tipo_tabela_w := 6; -- Medicamento TUSS
				end if;
			end if;

			ds_fabricante_w	:= null;
			-- OS 802541 - Por ultimo, se nao encontrou em lugar algum, busca da tabela MATERIAL
			if (cd_material_hosp_w IS NOT NULL AND cd_material_hosp_w::text <> '') and (somente_numero(nr_registro_anvisa_w) = 0) and (coalesce(cd_ref_material_fab_w::text, '') = '') then
				begin
					select	substr(nr_registro_anvisa, 1, 60),
						substr(cd_fabricante, 1, 60),
						nr_seq_fabric
					into STRICT	nr_registro_anvisa_w,
						cd_ref_material_fab_w,
						nr_seq_fabric_w
					from	material
					where	cd_material = cd_material_hosp_w;
				exception
				when others then
					nr_registro_anvisa_w	:= null;
					cd_ref_material_fab_w	:= null;
					nr_seq_fabric_w		:= null;
				end;

				if (nr_seq_fabric_w IS NOT NULL AND nr_seq_fabric_w::text <> '') then
					select	max(ds_fabricante)
					into STRICT	ds_fabricante_w
					from	mat_fabricante
					where	nr_sequencia = nr_seq_fabric_w;
				end if;

				if (nr_registro_anvisa_w IS NOT NULL AND nr_registro_anvisa_w::text <> '') then
					if (obter_se_somente_numero(nr_registro_anvisa_w) = 'S') then
						nr_registro_anvisa_w := somente_numero(nr_registro_anvisa_w);
					end if;
				end if;
			end if;

			cd_ref_material_fab_w := coalesce(coalesce(trim(both cd_ref_material_fab_opme_w), trim(both r_c02_w.cd_ref_fabricante)), trim(both cd_ref_material_fab_w));

			-- Prioriza o Pos
			if (coalesce(trim(both somente_numero(r_c02_w.nr_reg_anvisa_pos)), '0') <> '0') then
				nr_registro_anvisa_w := trim(both somente_numero(r_c02_w.nr_reg_anvisa_pos));
			end if;

			-- Caso nao tenha registro ANVISA do Pos ou do Cadastro de materiais, mas, tenha no material da conta medica
			if (coalesce(trim(both nr_registro_anvisa_w), '0') = '0') and (coalesce(trim(both somente_numero(r_c02_w.nr_reg_anvisa_cta_mat)), '0') <> '0') then
				nr_registro_anvisa_w := trim(both somente_numero(r_c02_w.nr_reg_anvisa_cta_mat));
			end if;

			if (coalesce(trim(both nr_registro_anvisa_w), '0') = '0') then
				nr_registro_anvisa_w := null;
			end if;

			if (ie_tipo_despesa_w != 7) and (qt_regra_ptu_mat_w > 0) then
				ie_regra_cpf_cnpj_forn_w:= pls_obter_regra_campo_ptu_mat( dt_item_w, ie_tipo_intercambio_w, ie_tipo_despesa_w, cd_servico_w, r_c02_w.ie_tipo_guia, 'NR_CPF_CNPJ_FORNECEDOR' );
				ie_regra_pag_forn_w	:= pls_obter_regra_campo_ptu_mat( dt_item_w, ie_tipo_intercambio_w, ie_tipo_despesa_w, cd_servico_w, r_c02_w.ie_tipo_guia, 'ID_PAG_FORN' );
				ie_regra_nome_forn_w	:= pls_obter_regra_campo_ptu_mat( dt_item_w, ie_tipo_intercambio_w, ie_tipo_despesa_w, cd_servico_w, r_c02_w.ie_tipo_guia, 'NM_FORNECEDOR' );
				ie_regra_nota_forn_w	:= pls_obter_regra_campo_ptu_mat( dt_item_w, ie_tipo_intercambio_w, ie_tipo_despesa_w, cd_servico_w, r_c02_w.ie_tipo_guia, 'NR_NOTA_FISCAL_FORN' );
			end if;

			-- Somente OPME ou conforme regra
			if	((ie_tipo_despesa_w = 7) and (ie_tipo_tabela_w in (2,5))) or
				((ie_regra_cpf_cnpj_forn_w = 'S') or (ie_regra_pag_forn_w = 'S') or (ie_regra_nome_forn_w = 'S') or (ie_regra_nota_forn_w = 'S')) then
				atualizar_regra_campos_opme(r_c02_w.nr_seq_conta, r_c02_w.nr_seq_conta_mat, null, nr_seq_material_w, ie_data_conv_mat_unimed_w, dt_item_w,
								ie_regra_cpf_cnpj_forn_w, ie_regra_pag_forn_w, ie_regra_nome_forn_w, ie_regra_nota_forn_w);
				det_reg_anvisa_w	:= substr(coalesce(coalesce(trim(both det_reg_anvisa_w),trim(both nm_fabricante_w)),nm_importador_w),1,50);

				-- Se nao for OPME
				if (ie_tipo_despesa_w != 7) then
					if (ie_regra_cpf_cnpj_forn_w = 'N') then
						nr_cnpj_fornecedor_w := null;
					end if;

					if (ie_regra_nome_forn_w = 'N') then
						nm_fornecedor_w := null;
					end if;
				end if;
			end if;

			-- Se nao for OPME
			if (ie_tipo_despesa_w != 7) then
				if (ie_regra_pag_forn_w = 'N') then
					id_pag_forn_w		:= '0';
				end if;

				if (ie_regra_nota_forn_w = 'N') then
					nr_nota_fiscal_forn_w	:= null;
				end if;

				-- Regra: 	Obrigatorio em caso de cobranca de orteses, proteses e materiais especiais, quando for utilizado codigo de material ainda nao cadastrado na TUSS. Demais casos, preencher com brancos.
				if (ie_versao_w = 70) then
					det_reg_anvisa_w	:= null;
					det_reg_anvisa_opme_w	:= null;
				end if;

				-- Regra: Obrigatorio em caso de codigo generico de OPME. Demais casos, preencher com brancos.
				if (ie_versao_w >= 80) then
					det_reg_anvisa_w	:= null;
					det_reg_anvisa_opme_w	:= null;
				end if;
			end if;

			-- Rio Preto utiliza cadastro de material do hospital caso tenha informacao, priorizar a mesma
			if (ie_tipo_despesa_w = 7) and -- OPM
				(ie_versao_w >= 70) and -- Versao PTU 7.0
				(ds_fabricante_w IS NOT NULL AND ds_fabricante_w::text <> '') then -- Gerou fabricante hospital
				det_reg_anvisa_opme_w := substr(ds_fabricante_w, 1,50); -- Assume o fabricante hospital
				-- Priorizar o que vir do A900
				if (det_reg_anvisa_w IS NOT NULL AND det_reg_anvisa_w::text <> '') then -- Se tem fabricante A900
					det_reg_anvisa_opme_w := det_reg_anvisa_w; -- Assume o fabricante A900
				end if;
			end if;

			-- Regra: Obrigatorio em caso de codigo generico de OPME. Demais casos, preencher com brancos.
			if (ie_versao_w >= 80) and (coalesce(ptu_obter_dados_serv_generico(cd_servico_w, 'IE'), 'X') <> '4') then -- '4' = OPME generico
				det_reg_anvisa_w	:= null;
				det_reg_anvisa_opme_w	:= null;

				if (ie_versao_w >= 101) then
					cd_ref_material_fab_w		:= null;
					cd_ref_material_fab_opme_w	:= null;

					if (ie_tipo_despesa_w != 7) then
						if (ie_regra_cpf_cnpj_forn_w = 'N') then
							nr_cnpj_fornecedor_w		:= null;
						end if;

						if (ie_regra_nome_forn_w = 'N') then
							nm_fornecedor_opme_w		:= null;
							nm_fornecedor_w			:= null;
						end if;
					end if;
				end if;
			end if;

			if (r_c02_w.ie_tipo_conta = 'P') then
				cd_procedimento_regra_w	:= cd_procedimento_w;
				nr_seq_material_regra_w	:= null;
				ie_tipo_desp_proc_w	:= ie_tipo_despesa_w;
				ie_tipo_despesa_mat_w	:= null;

			elsif (r_c02_w.ie_tipo_conta = 'M') then
				cd_procedimento_regra_w	:= null;
				nr_seq_material_regra_w	:= cd_procedimento_w;
				ie_tipo_desp_proc_w	:= null;
				ie_tipo_despesa_mat_w	:= ie_tipo_despesa_w;

				-- Regra: 	Obrigatorio em caso de cobranca de orteses, proteses e materiais especiais, quando for utilizado codigo de material ainda nao cadastrado na TUSS. Demais casos, preencher com brancos.
				if (ie_versao_w = 70) and (nr_seq_tuss_mat_item_w IS NOT NULL AND nr_seq_tuss_mat_item_w::text <> '') then
					det_reg_anvisa_opme_w := null;
				end if;
			end if;

			nr_seq_regra_w := pls_obter_regra_doc_fisico_fat(	cd_area_regra_w, cd_especialidade_regra_w, cd_grupo_regra_w, cd_procedimento_regra_w, ie_origem_regra_w, nr_seq_material_regra_w, nr_seq_estrut_mat_w, nr_seq_prestador_exec_w, ie_tipo_desp_proc_w, ie_tipo_despesa_mat_w, r_c02_w.ie_tipo_guia, dt_procedimento_w, r_c02_w.nr_seq_tipo_atendimento, nr_seq_regra_fat_w, r_c02_w.ie_regime_atendimento, r_c02_w.ie_saude_ocupacional, nr_seq_regra_w);
							
			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				select	max(ie_exige_doc_fisico)
				into STRICT	ie_exige_doc_fisico_w
				from	pls_regra_doc_fisico_fat
				where	nr_sequencia = nr_seq_regra_w;

				-- Controle de reembolso
				if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

					if (ie_exige_doc_fisico_w = 'S') then
						update	ptu_nota_cobranca
						set	ie_necessita_doc_fisico	= 'S'
						where	nr_sequencia = nr_seq_cobranca_p;
					else
						update	ptu_nota_cobranca
						set	ie_necessita_doc_fisico	= 'N'
						where	nr_sequencia = nr_seq_cobranca_p
						and	coalesce(ie_necessita_doc_fisico, 'N') <> 'S';
					end if;
				end if; -- fim controle reembolso
			end if;

			if (r_c02_w.nr_seq_nota_cobranca IS NOT NULL AND r_c02_w.nr_seq_nota_cobranca::text <> '') then
				if (r_c02_w.nr_seq_conta_proc IS NOT NULL AND r_c02_w.nr_seq_conta_proc::text <> '') then
					begin
						select	c.cd_prestador,
							c.nm_prestador,
							c.ie_rede_propria,
							coalesce(c.ie_tipo_pessoa_prestador, b.tp_pessoa),
							coalesce(c.nr_cgc_cpf, b.nr_cnpj_cpf),
							coalesce(c.nm_prestador_requisitante, nm_prestador_req_w),
							coalesce(c.sg_cons_prof_prest, sg_cons_prof_prest_w),
							coalesce(c.nr_cons_prof_prest, nr_cons_prof_prest_w),
							coalesce(c.sg_uf_cons_prest, sg_uf_cons_prest_w),
							c.ie_tipo_participacao,
							c.cd_unimed_prestador,
							c.cd_prestador_req,
							c.cd_especialidade,
							c.ie_tipo_prestador,
							coalesce(c.cd_cnes_prest, b.cd_cnes_cont_exec),
							c.nm_profissional_prestador,
							c.tec_utilizada,
							c.ds_hora_procedimento,
							c.hr_final,
							c.tp_autoriz,
							c.cd_unimed_pre_req,
							c.cd_pacote,
							c.cd_ato,
							c.cd_rec_prestador,
							c.nr_cnpj_fornecedor,
							b.nr_seq_prest_inter,
							c.tipo_rede_min,
							c.ie_tipo_tabela
						into STRICT	cd_prestador_w,
							nm_prestador_w,
							ie_rede_propria_w,
							ie_tipo_pessoa_pres_w,
							nr_cnpj_cpf_w,
							nm_prestador_req_w,
							sg_cons_prof_prest_w,
							nr_cons_prof_prest_w,
							sg_uf_cons_prest_w,
							ie_tipo_ptu_fat_partic_w,
							cd_unim_prestador_w,
							cd_prestador_req_w,
							cd_especialidade_w,
							ie_tipo_prestador_w,
							cd_cnes_w,
							nm_profissional_prestador_w,
							ie_tec_utilizada_w,
							hr_inicio_a500_w,
							hr_final_a500_w,
							tp_autoriz_w,
							cd_unimed_pre_req_w,
							cd_pacote_origem_w,
							ie_ato_cooperado_w,
							cd_rec_prestador_w,
							nr_cnpj_fornecedor_w,
							nr_seq_prest_inter_w,
							tipo_rede_min_w,
							ie_tipo_tabela_w
						from	ptu_fatura a,
							ptu_nota_cobranca 	b,
							ptu_nota_servico 	c
						where	a.nr_sequencia		= b.nr_seq_fatura
						and	b.nr_sequencia		= c.nr_seq_nota_cobr
						and	c.nr_seq_conta_proc 	= r_c02_w.nr_seq_conta_proc
						and	coalesce(a.nr_seq_pls_fatura::text, '') = '';
					exception
					when others then
						cd_prestador_w 			:= null;
						nm_prestador_w 			:= null;
						ie_rede_propria_w 		:= null;
						ie_tipo_pessoa_pres_w 		:= null;
						nr_cnpj_cpf_w 			:= null;
						nm_prestador_req_w 		:= null;
						sg_cons_prof_prest_w 		:= null;
						nr_cons_prof_prest_w 		:= null;
						sg_uf_cons_prest_w 		:= null;
						ie_tipo_ptu_fat_partic_w 	:= null;
						cd_unim_prestador_w 		:= null;
						cd_prestador_req_w 		:= null;
						cd_especialidade_w 		:= null;
						ie_tipo_prestador_w 		:= null;
						cd_cnes_w 			:= null;
						nm_profissional_prestador_w 	:= null;
						ie_tec_utilizada_w 		:= null;
						hr_inicio_a500_w 		:= null;
						hr_final_a500_w 		:= null;
						tp_autoriz_w 			:= null;
						cd_unimed_pre_req_w 		:= null;
						cd_pacote_origem_w 		:= null;
						ie_ato_cooperado_w		:= null;
						cd_rec_prestador_w		:= null;
						nr_cnpj_fornecedor_w		:= null;
						nr_seq_prest_inter_w		:= null;
						tipo_rede_min_w			:= null;
					end;
				elsif (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then
					begin
						select	c.cd_prestador,
							c.nm_prestador,
							c.ie_rede_propria,
							coalesce(c.ie_tipo_pessoa_prestador, b.tp_pessoa),
							coalesce(c.nr_cgc_cpf, b.nr_cnpj_cpf),
							coalesce(c.nm_prestador_requisitante, nm_prestador_req_w),
							coalesce(c.sg_cons_prof_prest, sg_cons_prof_prest_w),
							coalesce(c.nr_cons_prof_prest, nr_cons_prof_prest_w),
							coalesce(c.sg_uf_cons_prest, sg_uf_cons_prest_w),
							c.ie_tipo_participacao,
							c.cd_unimed_prestador,
							c.cd_prestador_req,
							c.cd_especialidade,
							c.ie_tipo_prestador,
							c.cd_cnes_prest,
							c.nm_profissional_prestador,
							c.tec_utilizada,
							c.ds_hora_procedimento,
							c.hr_final,
							c.tp_autoriz,
							c.cd_unimed_pre_req,
							c.cd_pacote,
							c.cd_ato,
							c.cd_rec_prestador,
							c.nr_cnpj_fornecedor,
							b.nr_seq_prest_inter,
							c.tipo_rede_min,
							c.ie_tipo_tabela
						into STRICT	cd_prestador_w,
							nm_prestador_w,
							ie_rede_propria_w,
							ie_tipo_pessoa_pres_w,
							nr_cnpj_cpf_w,
							nm_prestador_req_w,
							sg_cons_prof_prest_w,
							nr_cons_prof_prest_w,
							sg_uf_cons_prest_w,
							ie_tipo_ptu_fat_partic_w,
							cd_unim_prestador_w,
							cd_prestador_req_w,
							cd_especialidade_w,
							ie_tipo_prestador_w,
							cd_cnes_w,
							nm_profissional_prestador_w,
							ie_tec_utilizada_w,
							hr_inicio_a500_w,
							hr_final_a500_w,
							tp_autoriz_w,
							cd_unimed_pre_req_w,
							cd_pacote_origem_w,
							ie_ato_cooperado_w,
							cd_rec_prestador_w,
							nr_cnpj_fornecedor_w,
							nr_seq_prest_inter_w,
							tipo_rede_min_w,
							ie_tipo_tabela_w
						from	ptu_fatura a,
							ptu_nota_cobranca 	b,
							ptu_nota_servico 	c
						where	a.nr_sequencia		= b.nr_seq_fatura
						and	b.nr_sequencia		= c.nr_seq_nota_cobr
						and	c.nr_seq_conta_mat 	= r_c02_w.nr_seq_conta_mat
						and	coalesce(a.nr_seq_pls_fatura::text, '') = '';
					exception
					when others then
						cd_prestador_w 			:= null;
						nm_prestador_w 			:= null;
						ie_rede_propria_w 		:= null;
						ie_tipo_pessoa_pres_w 		:= null;
						nr_cnpj_cpf_w 			:= null;
						nm_prestador_req_w 		:= null;
						sg_cons_prof_prest_w 		:= null;
						nr_cons_prof_prest_w 		:= null;
						sg_uf_cons_prest_w 		:= null;
						ie_tipo_ptu_fat_partic_w	:= null;
						cd_unim_prestador_w 		:= null;
						cd_prestador_req_w 		:= null;
						cd_especialidade_w 		:= null;
						ie_tipo_prestador_w 		:= null;
						cd_cnes_w 			:= null;
						nm_profissional_prestador_w 	:= null;
						ie_tec_utilizada_w 		:= null;
						hr_inicio_a500_w 		:= null;
						hr_final_a500_w 		:= null;
						tp_autoriz_w 			:= null;
						cd_unimed_pre_req_w 		:= null;
						cd_pacote_origem_w 		:= null;
						ie_ato_cooperado_w		:= null;
						cd_rec_prestador_w		:= null;
						nr_cnpj_fornecedor_w		:= null;
						nr_seq_prest_inter_w		:= null;
						tipo_rede_min_w			:= null;
					end;
				end if;

				-- Se a quantidade de procedimento for menor que 999 a hora precisa ir em branco - conforme manual do PTU unimed litoral
				if (hr_inicio_a500_w = '00:00:00') and (hr_final_a500_w = '00:00:00') and (r_c02_w.qt_item_pos_estab < 999) then
					hr_inicio_a500_w	:= null;
					hr_final_a500_w		:= null;
				end if;
			end if;

			-- SE NAO TEM NR_CONS_PROF_PREST, ENVIAR EM BRANCO
			if (somente_numero(nr_cons_prof_prest_w) = 0) then
				nr_cons_prof_prest_w := null;
			end if;

			if (coalesce(cd_prestador_req_w::text, '') = '') or (coalesce(cd_unimed_pre_req_w::text, '') = '') then
				cd_prestador_req_w	:= null;
				cd_unimed_pre_req_w	:= null;
			end if;

			if (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then
				--Na Maringa, estava dando problema no refaturamento pois nao tem conta_contab e e nao consegue pegar o ato_cooperado, por isso e feita a validacao abaixo
				ie_ato_conta_w := 'N';

				if (coalesce(ie_ato_cooperado_w::text, '') = '') then
					select	max(ie_ato_cooperado)
					into STRICT	ie_ato_cooperado_w
					from	pls_conta_medica_resumo
					where	nr_seq_conta_mat	= r_c02_w.nr_seq_conta_mat
					and	nr_seq_conta		= nr_seq_conta_p
					and	ie_tipo_item		!= 'I';

					ie_ato_conta_w			:= 'S';
				end if;


				if (ie_ato_conta_w = 'N') then

					ie_ato_cooperado_resumo_w := 'X';

					select	max(ie_ato_cooperado)
					into STRICT	ie_ato_cooperado_resumo_w
					from	pls_conta_medica_resumo
					where	nr_seq_conta_mat	= r_c02_w.nr_seq_conta_mat
					and	nr_seq_conta		= nr_seq_conta_p
					and	ie_tipo_item		!= 'I';

					-- o que deve prevalecer e o ato cooperado cadastrado na conta medica resumo, visto que no contas medicas ja existe regra para gerar esta informacao.
					if (coalesce(ie_ato_cooperado_resumo_w,'X') <> 'X') then
						ie_ato_cooperado_w := ie_ato_cooperado_resumo_w;
					end if;
				end if;
			end if;

			if (r_c02_w.nr_seq_conta_proc IS NOT NULL AND r_c02_w.nr_seq_conta_proc::text <> '') then
				--Na Maringa, estava dando problema no refaturamento pois nao tem conta_contab e e nao consegue pegar o ato_cooperado, por isso e feita a validacao abaixo
				ie_ato_conta_w := 'N';

				if (coalesce(ie_ato_cooperado_w::text, '') = '') then
					select	max(ie_ato_cooperado)
					into STRICT	ie_ato_cooperado_w
					from	pls_conta_medica_resumo
					where	nr_seq_conta_proc	= r_c02_w.nr_seq_conta_proc
					and	nr_seq_conta		= nr_seq_conta_p
					and	ie_tipo_item		!= 'I';

					ie_ato_conta_w			:= 'S';
				end if;


				if (ie_ato_conta_w = 'N') then

					ie_ato_cooperado_resumo_w := 'X';

					select	max(ie_ato_cooperado)
					into STRICT	ie_ato_cooperado_resumo_w
					from	pls_conta_medica_resumo
					where	nr_seq_conta_proc	= r_c02_w.nr_seq_conta_proc
					and	nr_seq_conta		= nr_seq_conta_p
					and	ie_tipo_item		!= 'I';

					-- o que deve prevalecer e o ato cooperado cadastrado na conta medica resumo, visto que no contas medicas ja existe regra para gerar esta informacao.
					if (coalesce(ie_ato_cooperado_resumo_w,'X') <> 'X') then
						ie_ato_cooperado_w := ie_ato_cooperado_resumo_w;
					end if;
				end if;
			end if;

			nr_seq_prestador_pgto_w	:= coalesce(nr_seq_prestador_exec_w, nr_seq_prestador_pgto_w);

			select	coalesce(max(qt_dia_vencimento), 0)
			into STRICT	qt_dia_vencimento_w
			from	pls_prestador_pagto
			where	nr_seq_prestador = nr_seq_prestador_pgto_w;

			if (coalesce(qt_dia_vencimento_w, 0) > 0) then
				begin
					dt_competencia_pgto_w := to_date(lpad(qt_dia_vencimento_w, 2, '0') || to_char(dt_protocolo_w, 'mm/yyyy'));

					if (trunc(dt_protocolo_w) >= trunc(dt_competencia_pgto_w)) then
						dt_competencia_pgto_w := add_months(dt_competencia_pgto_w, 1);
					end if;
				exception
				when others then
					dt_competencia_pgto_w := null;
				end;
			else
				if (r_c02_w.nr_seq_conta_proc IS NOT NULL AND r_c02_w.nr_seq_conta_proc::text <> '') then
					select	max(dt_competencia_pgto)
					into STRICT	dt_competencia_pgto_w
					from	pls_conta_medica_resumo
					where	nr_seq_conta 		= r_c02_w.nr_seq_conta
					and	nr_seq_conta_proc	= r_c02_w.nr_seq_conta_proc
					and	coalesce(nr_seq_prestador_pgto, nr_seq_prestador_exec) = nr_seq_prestador_pgto_w;

				elsif (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then
					select	max(dt_competencia_pgto)
					into STRICT	dt_competencia_pgto_w
					from	pls_conta_medica_resumo
					where	nr_seq_conta 		= r_c02_w.nr_seq_conta
					and	nr_seq_conta_mat	= r_c02_w.nr_seq_conta_mat
					and	coalesce(nr_seq_prestador_pgto, nr_seq_prestador_exec) = nr_seq_prestador_pgto_w;
				end if;

				if (coalesce(dt_competencia_pgto_w::text, '') = '') then
					dt_competencia_pgto_w := dt_protocolo_w;
				end if;

				if (trunc(dt_protocolo_w) >= trunc(dt_competencia_pgto_w)) then
					dt_competencia_pgto_w := dt_competencia_pgto_w + 1;
				end if;
			end if;

			if (dt_competencia_pgto_w IS NOT NULL AND dt_competencia_pgto_w::text <> '') and (trunc(dt_protocolo_w) > trunc(dt_competencia_pgto_w)) then
				dt_competencia_pgto_w := dt_protocolo_w + 1;
			end if;

			ie_tipo_prestador_w	:= lpad(coalesce(ie_tipo_prestador_w, '1'), 2, '0');

			if (nr_seq_grau_partic_w IS NOT NULL AND nr_seq_grau_partic_w::text <> '') then
				select	cd_ptu,
					cd_tiss
				into STRICT	ie_tipo_participacao_w,
					ie_tipo_partic_tiss_w
				from	pls_grau_participacao
				where	nr_sequencia = nr_seq_grau_partic_w;
			end if;

			if (coalesce(sg_cons_prof_req_w::text, '') = '') then
				select	coalesce(max(c.cd_ptu), 'CRM')
				into STRICT	sg_cons_prof_req_w
				from	conselho_profissional	c,
					medico			b,
					pessoa_fisica		a
				where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
				and	a.nr_seq_conselho	= c.nr_sequencia
				and	a.cd_pessoa_fisica	= r_c02_w.cd_pessoa_fisica;
			end if;

			if (coalesce(nr_cons_prof_req_w::text, '') = '') then
				select	coalesce(max(a.nr_seq_conselho), 1)
				into STRICT	nr_cons_prof_req_w
				from	conselho_profissional	c,
					medico			b,
					pessoa_fisica		a
				where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
				and	a.nr_seq_conselho	= c.nr_sequencia
				and	a.cd_pessoa_fisica	= r_c02_w.cd_pessoa_fisica;
			end if;

			if (coalesce(sg_uf_cons_req_w::text, '') = '') then
				select	coalesce(max(b.uf_crm), sg_estado_w)
				into STRICT	sg_uf_cons_req_w
				from	conselho_profissional	c,
					medico			b,
					pessoa_fisica		a
				where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
				and	a.nr_seq_conselho	= c.nr_sequencia
				and	a.cd_pessoa_fisica	= r_c02_w.cd_pessoa_fisica;
			end if;

			if (coalesce(r_c02_w.nr_seq_nota_cobranca::text, '') = '') then
				if (cd_pessoa_prest_exec_w IS NOT NULL AND cd_pessoa_prest_exec_w::text <> '') then
					select	coalesce(max(a.cd_especialidade), cd_especialidade_med_w)
					into STRICT	cd_especialidade_med_w
					from	tiss_cbo_saude		b,
						medico_especialidade	a
					where	a.cd_especialidade	= b.cd_especialidade
					and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
					and	b.nr_seq_cbo_saude	= r_c02_w.nr_seq_cbo_saude
					and	a.cd_pessoa_fisica	= cd_pessoa_prest_exec_w;
				end if;

				if (cd_especialidade_med_w IS NOT NULL AND cd_especialidade_med_w::text <> '') then
					begin
						select	cd_ptu
						into STRICT	cd_especialidade_w
						from	especialidade_medica
						where	cd_especialidade = cd_especialidade_med_w;
					exception
					when others then
						cd_especialidade_w := null;
					end;
				end if;
			end if;

			-- Regra: Obrigatorio quando o campo TP_PREST (abaixo) for igual a 01 Medico. Para os outros tipos sera opcional.
			if (coalesce(cd_especialidade_w::text, '') = '') and (ie_tipo_prestador_w = '01') then
				cd_especialidade_w := '99';
			end if;

			-- Se for maior ou igual a versao do PTU 11.0
			if (ie_versao_w >= 110) then
				cd_especialidade_w := null;
			end if;

			if (coalesce(r_c02_w.nr_seq_nota_cobranca::text, '') = '') then
				tp_autoriz_w := ptu_obter_dados_guia_plano(r_c02_w.nr_seq_guia, nr_seq_requisicao_w, r_c02_w.cd_guia, r_c02_w.cd_guia_referencia, r_c02_w.nr_seq_conta, 'TA');
			end if;

			SELECT * FROM ptu_obter_senha_item_servico(	r_c02_w.nr_seq_guia, nr_seq_guia_item_w, r_c02_w.nr_seq_guia_proc, r_c02_w.nr_seq_guia_mat, r_c02_w.nr_seq_segurado, r_c02_w.cd_guia, r_c02_w.cd_guia_referencia, cd_excecao_w, r_c02_w.cd_senha_externa_pos_cab, null,  --r_c02_w.cd_senha_pos_cab,
							ie_agrupar_atendimento_w, cd_senha_w, ie_status_w) INTO STRICT cd_senha_w, ie_status_w;


			if (cd_excecao_w not in ('J')) then

				-- aaschlote 20/05/2014 OS 726710
				if (qt_registros_w > 0) then
					cd_excecao_conversao_w := '';
					cd_excecao_conversao_w := pls_obter_excecao_atend(nr_seq_congenere_w, r_c02_w.ie_apresentacao, ie_atend_env_cancelado_w, cd_excecao_conversao_w);
					if (cd_excecao_conversao_w IS NOT NULL AND cd_excecao_conversao_w::text <> '') and (cd_excecao_conversao_w <> coalesce(cd_excecao_w, 'X')) then
						cd_excecao_w := cd_excecao_conversao_w;
					end if;
				end if;

				-- Controle de reembolso
				if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

					update	ptu_nota_cobranca
					set	cd_excecao	= CASE WHEN cd_excecao='A' THEN  'A'  ELSE cd_excecao_w END
					where	nr_sequencia	= nr_seq_cobranca_p;
				end if; -- Fim controle reembolso
			end if;

			if ((trim(both cd_senha_w) IS NOT NULL AND (trim(both cd_senha_w))::text <> '')) or (length(cd_senha_w) > 0) then
				cd_senha_w := somente_numero(substr(cd_senha_w, 1, 10));
			end if;

			select	sum(qt_rec)
			into STRICT	qt_rec_glosa_w
			from (	SELECT	count(1) qt_rec
				from	pls_fatura_proc 		a,
					pls_conta_pos_estabelecido 	b
				where	b.nr_sequencia 			= a.nr_seq_conta_pos_estab
				and	a.nr_seq_fatura_conta 		= nr_seq_fatura_conta_p
				and	(b.nr_seq_conta_rec IS NOT NULL AND b.nr_seq_conta_rec::text <> '')
				
union all

				SELECT	count(1) qt_rec
				from	pls_fatura_mat 			a,
					pls_conta_pos_estabelecido 	b
				where	b.nr_sequencia 			= a.nr_seq_conta_pos_estab
				and	a.nr_seq_fatura_conta 		= nr_seq_fatura_conta_p
				and	(b.nr_seq_conta_rec IS NOT NULL AND b.nr_seq_conta_rec::text <> '')) alias5;

			-- Se for recurso de glosa nao ha necessidade de verificar o cd_excecao OS 1108462
			if (qt_rec_glosa_w = 0) then
				if (coalesce(somente_numero(cd_senha_w), '0') = '0') then
					if (coalesce(cd_excecao_w, '0') <> 'J') then
						cd_excecao_w := '0';
					end if;

					if (qt_registros_w > 0) and
						((coalesce(nr_ndr_glosada_w::text, '') = '') and (coalesce(nr_lote_glosado_w::text, '') = '') and (coalesce(nr_nota_glosada_w::text, '') = '') and (coalesce(nr_fatura_glosada_w::text, '') = '')) then
						cd_excecao_conversao_w := '';

						cd_excecao_conversao_w := pls_obter_excecao_atend(nr_seq_congenere_w, r_c02_w.ie_apresentacao, ie_atend_env_cancelado_w, cd_excecao_conversao_w);

						if (cd_excecao_conversao_w IS NOT NULL AND cd_excecao_conversao_w::text <> '') and (cd_excecao_conversao_w <> coalesce(cd_excecao_w, 'X')) then
							cd_excecao_w := cd_excecao_conversao_w;
						end if;
					end if;
					-- Controle de reembolso
					if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

						-- se for excecao A - Aviso, deve permanecer como Aviso Fixo
						update	ptu_nota_cobranca
						set	cd_excecao	= CASE WHEN cd_excecao='A' THEN  'A'  ELSE cd_excecao_w END
						where	nr_sequencia	= nr_seq_cobranca_p;
					end if; -- fim controle reembolso
				end if;
			end if;

			if (r_c02_w.nr_seq_pacote IS NOT NULL AND r_c02_w.nr_seq_pacote::text <> '') then
				ie_tipo_tabela_w := 4;
			end if;

			ie_tipo_participacao_w := coalesce(ie_tipo_part_regra_w, coalesce(ie_tipo_participacao_w, '0'));

			if (ie_tipo_participacao_w IS NOT NULL AND ie_tipo_participacao_w::text <> '')then
				select	max(cd_tiss)
				into STRICT	ie_tipo_partic_tiss_w
				from	pls_grau_participacao
				where	cd_ptu = ie_tipo_participacao_w;
			end if;
			
			-- Obter o tipo de participante da fatura A500 que originou a conta quando X
			if (r_c02_w.nr_seq_ptu_fat_conta IS NOT NULL AND r_c02_w.nr_seq_ptu_fat_conta::text <> '') then
				if (ie_tipo_ptu_fat_partic_w = 'X') then
					ie_tipo_participacao_w := ie_tipo_ptu_fat_partic_w;
					
					if (ie_tipo_participacao_w IS NOT NULL AND ie_tipo_participacao_w::text <> '') then
						select	max(cd_tiss)
						into STRICT	ie_tipo_partic_tiss_w
						from	pls_grau_participacao
						where	cd_ptu = ie_tipo_participacao_w;
					end if;
				end if;
			end if;

			if (ie_tipo_participacao_w in ('A', 'N')) and (coalesce(nr_seq_material_w::text, '') = '') and (coalesce(cd_porte_anest_w,0) = 0) then
				cd_porte_anest_w := '1';
			end if;

			-- Verifique a nota 00000103411, lote 00092642. Os valores referentes a Diaria, Taxa, Material e Medicamento devem ser demonstrados no campo VL_SERV_COB com os campos VL_CO_COB e VL_FILME_COB zerados.
			if (ie_tipo_tabela_w in (1, 2, 3, 4, 5, 6)) then
				vl_procedimento_w		:= vl_procedimento_w + vl_custo_operacional_w + vl_filme_w;
				vl_adic_procedimento_w		:= vl_adic_procedimento_w + vl_adic_custo_operacional_w + vl_adic_filme_w;
				vl_custo_operacional_w		:= 0;
				vl_filme_w			:= 0;
				vl_adic_custo_operacional_w	:= 0;
				vl_adic_filme_w			:= 0;
			end if;

			if	(r_c02_w.ie_status_faturamento = 'A' AND ie_tipo_cobranca_fatura_w = 'C') then -- Se for de A520 e lote de cobranca, nao pode ter valor
				vl_procedimento_w		:= 0;
				vl_adic_procedimento_w		:= 0;
				vl_custo_operacional_w		:= 0;
				vl_filme_w			:= 0;
				vl_adic_custo_operacional_w	:= 0;
				vl_adic_filme_w			:= 0;
				vl_filme_partic_w 		:= 0;
				vl_custo_op_partic_w 		:= 0;
				vl_adic_filme_partic_w 		:= 0;
				vl_adic_custo_op_partic_w	:= 0;
			end if;

			-- OS 814544 - Para casos de PJ que envolvam honorario medico e nao tenha as informacoes de dados medicos
			if (ie_tipo_tabela_w not in (2, 3, 5, 6)) and (vl_procedimento_w > 0) and (ie_tipo_pessoa_pres_w 	= 'J') and (nm_profissional_prestador_w IS NOT NULL AND nm_profissional_prestador_w::text <> '') and (coalesce(sg_cons_prof_prest_w::text, '') = '') and (coalesce(nr_cons_prof_prest_w::text, '') = '') and (coalesce(sg_uf_cons_prest_w::text, '') = '') then
				sg_cons_prof_prest_w	:= 'CRM';
				nr_cons_prof_prest_w	:= 1;
				sg_uf_cons_prest_w	:= sg_estado_w;
			end if;

			if (ie_tipo_w = 'P') then

				-- Controle de reembolso
				if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

					select	count(1)
					into STRICT	qt_partic_w
					from	ptu_nota_servico
					where	cd_servico		= cd_servico_w
					and	nr_nota			= nr_nota_w
					and	nr_seq_nota_cobr	= nr_seq_cobranca_p
					and	ie_tipo_participacao	= ie_tipo_participacao_w  LIMIT 1;
				else
					select	count(1)
					into STRICT	qt_partic_w
					from	ptu_nota_servico_rrs
					where	cd_servico		= cd_servico_w
					and	nr_nota			= nr_nota_w
					and	nr_seq_nota_cobr_rrs	= nr_seq_cobranca_rrs_p
					and	tp_particip		= ie_tipo_participacao_w  LIMIT 1;

				end if; -- Fim controle de reembolso
				if (qt_partic_w > 0) then
					ie_tipo_w := 'S';
				end if;
			end if;

			hr_inicio_w	:= to_char(coalesce(r_c02_w.dt_inicio_proc, dt_procedimento_w), 'HH24:MI:SS');
			hr_fim_w	:= to_char(coalesce(r_c02_w.hr_final, dt_procedimento_w), 'HH24:MI:SS');

			-- Se a quantidade de procedimento for menor que 999 a hora precisa ir em branco - conforme manual do PTU unimed litoral
			if (hr_inicio_w = '00:00:00' ) and (hr_fim_w = '00:00:00' ) and (r_c02_w.qt_item_pos_estab < 999) then
				hr_inicio_w	:= null;
				hr_fim_w	:= null;
			end if;


			-- aaschlote 14/04/2014 - OS 703144 - Realizar a regra de conversao dos campos
			cd_prestador_w := pls_obter_convervao_ptu_a500('CD_PRESTADOR', cd_prestador_w, cd_prestador_w, cd_estabelecimento_w);
			cd_prestador_exec_w := pls_obter_convervao_ptu_a500('CD_PRESTADOR', cd_prestador_exec_w, cd_prestador_exec_w, cd_estabelecimento_w);
			nm_prestador_w := pls_obter_convervao_ptu_a500('NM_PRESTADOR', nm_prestador_w, nm_prestador_w, cd_estabelecimento_w);
			nr_cnpj_cpf_w := pls_obter_convervao_ptu_a500('NR_CGC_CPF', nr_cnpj_cpf_w, nr_cnpj_cpf_w, cd_estabelecimento_w);
			cd_cnes_w := pls_obter_convervao_ptu_a500('CD_CNES', cd_cnes_w, cd_cnes_w, cd_estabelecimento_w);

			dt_procedimento_w := trunc(dt_procedimento_w);
			if (ie_tipo_data_w = 'DA') and (dt_atendimento_nota_w IS NOT NULL AND dt_atendimento_nota_w::text <> '') then
				dt_procedimento_w := trunc(dt_atendimento_nota_w);
			end if;

			if (coalesce(nr_cnpj_cpf_w::text, '') = '') then
				if (ie_tipo_pessoa_pres_w = 'F') then
					nr_cnpj_cpf_w := '99999999999';
				elsif (ie_tipo_pessoa_pres_w = 'J') then
					nr_cnpj_cpf_w := '99999999999999';
				end if;
			end if;

			cd_prestador_exec_w	:= somente_numero(cd_prestador_exec_w);
			cd_prestador_w		:= somente_numero(cd_prestador_w);

			if (nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '') and (coalesce(cd_municipio_w::text, '') = '') then
				select	max(cd_municipio_ibge)
				into STRICT	cd_municipio_w
				from	pls_prestador_intercambio
				where	nr_sequencia = nr_seq_prest_inter_w;
			end if;

			--aaschlote OS 913274 - Caso existir diferenca entre a quantidade do item liberado e o que esta no pos-estabelecido, busca o que tem no pos
			if (coalesce(r_c02_w.qt_item_pos_estab, 0) > 0) and (qt_procedimento_w <> coalesce(r_c02_w.qt_item_pos_estab, 0)) and (r_c01_w.ie_tipo_cobranca not in ('3', '4')) then -- Nao pode ser taxa administrativa / valor manutencao
				qt_procedimento_w := r_c02_w.qt_item_pos_estab;
			end if;

			ie_manipulado_w := 'N';

			--- identifica pela pls_visible_false campo ds_med_manipulado_desc_ptu se o codigo do servico e um medicamento manipulado, caso seja, deve pegar a descricao de acordo com a analise do pos
			select 	coalesce(max('S'),'N')
			into STRICT	ie_manipulado_w
			from (WITH RECURSIVE cte AS (

				SELECT regexp_substr((SELECT ds_med_manipulado_desc_ptu from pls_visible_false s where s.cd_estabelecimento = cd_estabelecimento_w),'[^,]+', 1, level) cd_servico
			    regexp_substr((select ds_med_manipulado_desc_ptu from pls_visible_false s where s.cd_estabelecimento = cd_estabelecimento_w), '[^,]+', 1, level) is not null
			  UNION ALL

				SELECT regexp_substr((SELECT ds_med_manipulado_desc_ptu from pls_visible_false s where s.cd_estabelecimento = cd_estabelecimento_w),'[^,]+', 1, level) cd_servico 
			    regexp_substr((select ds_med_manipulado_desc_ptu from pls_visible_false s where s.cd_estabelecimento = cd_estabelecimento_w), '[^,]+', 1, level) is not null
			 JOIN cte c ON ()

) SELECT * FROM cte;
) alias6
			where cd_servico = cd_servico_w;

			-- 1257527 - O sistema prioriza o valor do campo 'pls_conta_pos_estabelecido.ds_item_ptu', visto que este e a descricao que pode ser alterada via analise de pos
			if (r_c02_w.ds_item_ptu IS NOT NULL AND r_c02_w.ds_item_ptu::text <> '') and (ptu_obter_dados_serv_generico(cd_servico_w, 'SE') = 'S' or ie_manipulado_w = 'S') then
				ds_servico_w := substr(r_c02_w.ds_item_ptu, 1, 80);
			else
				-- Se for codigo generico o sistema prioriza o 'pls_conta_mat.ds_material_imp' que e a descricao que vem por XML do prestador, caso nao encontre utiliza o 'pls_material.ds_material'
				if (ptu_obter_dados_serv_generico(cd_servico_w, 'SE') = 'S') and (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then

					-- Caso o material seja generico, utilizar a descricao importada
					if (ptu_obter_dados_serv_generico(r_c02_w.cd_material_imp, 'SE') = 'S') then
						ds_servico_w := substr(coalesce( r_c02_w.ds_material_imp, ds_servico_w), 1, 80);
					else
						-- Conforme a USJRP, se a origem da conta for XML, prioriza a descricao do mat ja convertido na conta
						select	substr(coalesce(CASE WHEN r_c02_w.ie_origem_protocolo='E' THEN  coalesce(pls_obter_desc_material(nr_seq_material), ds_material_imp)  ELSE ds_material_imp END , ds_servico_w), 1, 80)
						into STRICT	ds_servico_w
						from	pls_conta_mat
						where	nr_sequencia = r_c02_w.nr_seq_conta_mat;
					end if;
				else
					-- Se nao for codigo generico o sistema utiliza o 'pls_material.ds_material'
					ds_servico_w := substr(ds_servico_w, 1, 80);
				end if;
			end if;

			if (nr_seq_prest_med_exec_w IS NOT NULL AND nr_seq_prest_med_exec_w::text <> '') then
				select	max(ie_prestador_alto_custo)
				into STRICT	ie_prestador_alto_custo_exec_w
				from	pls_prestador
				where	nr_sequencia = nr_seq_prest_med_exec_w;
			end if;

			ie_prestador_alto_custo_w	:= coalesce(ie_prestador_alto_custo_w, 'N');
			ie_prestador_alto_custo_exec_w	:= coalesce(ie_prestador_alto_custo_exec_w, 'N');

			-- OS 760606 wcbernardino - Se for participante fazer "NVL"...
			if (ie_participante_w = 'S') then
				if (somente_numero(cd_prestador_exec_w) = 0) and (coalesce(trim(both nm_profissional_prestador_w)::text, '') = '') then
					cd_prestador_exec_w		:= cd_prestador_w;
					nm_profissional_prestador_w	:= nm_prestador_w;
					ie_prestador_alto_custo_exec_w	:= ie_prestador_alto_custo_w;
				end if;
			end if;

			-- Colocado aqui para comparar corretamente com a duplicidade de servicos
			ds_servico_w 			:= ptu_somente_caracter_permitido(ds_servico_w, 'ANS');
			nm_prestador_w 			:= substr(ptu_somente_caracter_permitido(nm_prestador_w, 'ANS'), 1, 70);
			nm_prestador_req_w 		:= ptu_somente_caracter_permitido(nm_prestador_req_w, 'ANS');
			nm_profissional_prestador_w 	:= ptu_somente_caracter_permitido(nm_profissional_prestador_w, 'ANS');
			nr_cons_prof_req_w		:= ptu_somente_caracter_permitido(nr_cons_prof_req_w, 'AN');
			nr_cons_prof_prest_w		:= ptu_somente_caracter_permitido(nr_cons_prof_prest_w, 'AN');
			det_reg_anvisa_opme_w		:= ptu_somente_caracter_permitido(det_reg_anvisa_opme_w, 'ANS');

			-- Nao teve alteracao no tamanho
			nm_prestador_req_w	:= substr(nm_prestador_req_w, 1, 40);
			-- Se for versao anterior a versao 9.0
			if (ie_versao_w < 90) then
				nm_prestador_w			:= substr(nm_prestador_w, 1, 40);
				nm_profissional_prestador_w 	:= substr(nm_profissional_prestador_w, 1, 40);
				nm_fornecedor_w			:= substr(nm_fornecedor_w, 1, 40);
				nm_fornecedor_opme_w		:= substr(nm_fornecedor_opme_w, 1, 40);
			end if;

			-- Se for maior ou igual a versao do PTU 11.0
			if (ie_versao_w >= 110) then
				nm_prestador_w			:= substr(nm_prestador_w,1,60);
				nm_profissional_prestador_w 	:= substr(nm_profissional_prestador_w, 1, 60);
				nm_fornecedor_w			:= substr(nm_fornecedor_w, 1, 60);
				nm_fornecedor_opme_w		:= substr(nm_fornecedor_opme_w,1,60);
			end if;

			-- Para atendimento de Atencao Domiciliar, TP_PREST_EXEC = 08, o campo devera ser preenchido com branco.
			if (ie_versao_w >= 101) and (ie_tipo_prestador_w = '08') then
				ie_tipo_participacao_w := ' ';
			end if;

			if (coalesce(r_c02_w.nr_seq_pacote::text, '') = '') and (coalesce(r_c02_w.nr_seq_regra_pct_fat::text, '') = '') and (ie_tipo_w <> 'P') and (qt_procedimento_w <= qt_serv_padrao_ptu_w) then

				--incluida a restricao da quantidade uma vez que pode haver no maximo 999 itens agrupados
				nr_seq_nota_servico_w := null;
				nr_seq_nota_servico_rrs_w := null;

				-- Controle de reembolso
				-- Quando nao for reembolos, executa o bloco abaixo, IMPORTANTE, quando alterar aqui, alterar o else que contem o bloco do reembolso propriamente dito
				if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

					SELECT * FROM ptu_obter_regra_agrup_item(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat, cd_servico_w, null, null, ie_agrupa_w, nr_seq_regra_agrup_ptu_w, ie_agrupa_hora_w) INTO STRICT ie_agrupa_w, nr_seq_regra_agrup_ptu_w, ie_agrupa_hora_w;

					if (ie_agrupa_w = 'S') then
						-- Quando o item e generico (codigo generico do PTU), entao nao considera a descricao
						if (ptu_obter_dados_serv_generico(cd_servico_w, 'SE') = 'S') then
							select	max(x.nr_sequencia)
							into STRICT	nr_seq_nota_servico_w
							from	ptu_nota_servico x
							where	x.cd_servico		= cd_servico_w
							and	x.nr_nota		= nr_nota_w
							and	x.nr_seq_nota_cobr	= nr_seq_cobranca_p
							and	x.ie_tipo_participacao	= ie_tipo_participacao_w
							and	x.dt_procedimento	= dt_procedimento_w
							and	x.tx_procedimento	= tx_fat_mult_serv_w
							and	x.nr_autorizacao	= cd_senha_w
							and	((x.ie_via_acesso	= r_c02_w.ie_via_acesso) or (coalesce(x.ie_via_acesso::text, '') = '') or (coalesce(r_c02_w.ie_via_acesso::text, '') = ''))
							and	x.cd_prestador		= CASE WHEN ie_participante_w='S' THEN  cd_prestador_exec_w  ELSE cd_prestador_w END
							and	((x.nm_profissional_prestador = nm_profissional_prestador_w) or (coalesce(nm_profissional_prestador_w::text, '') = ''))
							and	((r_c01_w.ie_tipo_cobranca in ('3', '4')) or (x.qt_procedimento <= qt_serv_padrao_ptu_w));

						--Restricao de hora para procedimentos seriados
						elsif (cd_procedimento_w = 10102019) or (cd_procedimento_w = 10104020) or (cd_procedimento_w = 10104011) then
							select	max(x.nr_sequencia)
							into STRICT	nr_seq_nota_servico_w
							from	ptu_nota_servico x
							where	x.cd_servico			= cd_servico_w
							and	x.ds_servico			= ds_servico_w
							and	x.nr_nota			= nr_nota_w
							and	x.nr_seq_nota_cobr		= nr_seq_cobranca_p
							and	x.ie_tipo_participacao		= ie_tipo_participacao_w
							and	trunc(x.dt_procedimento)	= trunc(dt_procedimento_w)
							and	x.tx_procedimento		= tx_fat_mult_serv_w
							and	x.nr_autorizacao		= cd_senha_w
							and (x.ds_hora_procedimento		= hr_inicio_w or coalesce(x.ds_hora_procedimento::text, '') = '')
							and	((x.ie_via_acesso		= r_c02_w.ie_via_acesso) or (coalesce(x.ie_via_acesso::text, '') = '') or (coalesce(r_c02_w.ie_via_acesso::text, '') = ''))
							and	x.cd_prestador			= CASE WHEN ie_participante_w='S' THEN  cd_prestador_exec_w  ELSE cd_prestador_w END
							and	((x.nm_profissional_prestador 	= nm_profissional_prestador_w) or (coalesce(nm_profissional_prestador_w::text, '') = ''))
							and	((r_c01_w.ie_tipo_cobranca in ('3', '4')) or (x.qt_procedimento <= qt_serv_padrao_ptu_w));

						-- Restricao de hora caso o ie_agrupa_hora estiver marcado
						elsif (ie_agrupa_hora_w = 'S') then
							select	max(x.nr_sequencia)
							into STRICT	nr_seq_nota_servico_w
							from	ptu_nota_servico x
							where	x.cd_servico			= cd_servico_w
							and	x.ds_servico			= ds_servico_w
							and	x.nr_nota			= nr_nota_w
							and	x.nr_seq_nota_cobr		= nr_seq_cobranca_p
							and	x.ie_tipo_participacao		= ie_tipo_participacao_w
							and	trunc(x.dt_procedimento)	= trunc(dt_procedimento_w)
							and	x.tx_procedimento		= tx_fat_mult_serv_w
							and	x.nr_autorizacao		= cd_senha_w
							and (x.ds_hora_procedimento		= hr_inicio_w or coalesce(x.ds_hora_procedimento::text, '') = '')
							and	((x.ie_via_acesso		= r_c02_w.ie_via_acesso) or (coalesce(x.ie_via_acesso::text, '') = '') or (coalesce(r_c02_w.ie_via_acesso::text, '') = ''))
							and	x.cd_prestador			= CASE WHEN ie_participante_w='S' THEN  cd_prestador_exec_w  ELSE cd_prestador_w END
							and	((x.nm_profissional_prestador 	= nm_profissional_prestador_w) or (coalesce(nm_profissional_prestador_w::text, '') = ''))
							and	((r_c01_w.ie_tipo_cobranca in ('3', '4')) or (x.qt_procedimento <= qt_serv_padrao_ptu_w));

						else
							-- jtonon - OS 1164815 - Realizamos ajuste para a 'Unimed Sao Jose do Rio Preto' a pedido da 'Francini'
							-- "... o sistema nao poderia agrupar itens diferentes no codigo generico, o correto e gerar item a item, com o codigo generico e com a devida descricao do material ..."
							-- Cenario com materiais, onde ha regra em 'OPS - Cooperativas medicas > Regras gerais > Conversoes'
							select	/*+ USE_CONCAT */								max(x.nr_sequencia)
							into STRICT	nr_seq_nota_servico_w
							from	ptu_nota_servico x
							where	x.cd_servico			= cd_servico_w
							and	x.ds_servico			= ds_servico_w
							and	x.nr_nota			= nr_nota_w
							and	x.nr_seq_nota_cobr		= nr_seq_cobranca_p
							and	x.ie_tipo_participacao		= ie_tipo_participacao_w
							and	trunc(x.dt_procedimento)	= trunc(dt_procedimento_w)
							and	x.tx_procedimento		= tx_fat_mult_serv_w
							and	x.nr_autorizacao		= cd_senha_w
							and (x.ds_hora_procedimento		= hr_inicio_w or coalesce(x.ds_hora_procedimento::text, '') = '')
							and	((x.ie_via_acesso		= r_c02_w.ie_via_acesso) or (coalesce(x.ie_via_acesso::text, '') = '') or (coalesce(r_c02_w.ie_via_acesso::text, '') = ''))
							and	x.cd_prestador			= CASE WHEN ie_participante_w='S' THEN  cd_prestador_exec_w  ELSE cd_prestador_w END
							and	((x.nm_profissional_prestador 	= nm_profissional_prestador_w) or (coalesce(nm_profissional_prestador_w::text, '') = ''))
							and	((r_c01_w.ie_tipo_cobranca in ('3', '4')) or (x.qt_procedimento <= qt_serv_padrao_ptu_w));
						end if;

						if (nr_seq_nota_servico_w IS NOT NULL AND nr_seq_nota_servico_w::text <> '') then
							-- Tratamento realizado para quando o item estiver com dois registros contabeis dentro da fatura
							if (r_c02_w.nr_seq_conta_proc IS NOT NULL AND r_c02_w.nr_seq_conta_proc::text <> '') then
								select	sum(t.contador)
								into STRICT	qt_registro_dupl_w
								from (	SELECT	count(1) contador
									from	pls_fatura_conta		x,
										pls_fatura_evento		y,
										pls_fatura_proc			z
									where	x.nr_seq_fatura_evento		= y.nr_sequencia
									and	z.nr_seq_fatura_conta		= x.nr_sequencia
									and	z.nr_seq_conta_proc		= r_c02_w.nr_seq_conta_proc
									and	z.nr_seq_conta_pos_estab	= r_c01_w.nr_seq_conta_pos_estab
									and	y.nr_seq_fatura			= nr_seq_pls_fatura_p
									and	ie_novo_pos_estab_w		= 'N'
									
union all

									SELECT	count(1) contador
									from	pls_fatura_conta		x,
										pls_fatura_evento		y,
										pls_fatura_proc			z
									where	x.nr_seq_fatura_evento		= y.nr_sequencia
									and	z.nr_seq_fatura_conta		= x.nr_sequencia
									and	z.nr_seq_conta_proc		= r_c02_w.nr_seq_conta_proc
									and	z.nr_seq_pos_proc		= r_c01_w.nr_seq_pos_proc
									and	y.nr_seq_fatura			= nr_seq_pls_fatura_p
									and	ie_novo_pos_estab_w		= 'S') t;

								if (qt_registro_dupl_w > 0) then
									select	count(1)
									into STRICT	qt_registro_dupl_w
									from	ptu_nota_servico
									where	nr_sequencia		= nr_seq_nota_servico_w
									and	nr_seq_conta_proc	= r_c02_w.nr_seq_conta_proc;

									if (qt_registro_dupl_w = 0) then
										select	count(1)
										into STRICT	qt_registro_dupl_w
										from	ptu_nota_servico_item a
										where	a.nr_seq_nota_servico	= nr_seq_nota_servico_w
										and	a.nr_seq_conta_proc	= r_c02_w.nr_seq_conta_proc;
									end if;

									if (qt_registro_dupl_w > 0) then
										qt_procedimento_w	:= 0;
										vl_liberado_w		:= 0;
									end if;
								end if;
							elsif (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then

								select	sum(t.contador)
								into STRICT	qt_registro_dupl_w
								from (	SELECT	count(1) contador
									from	pls_fatura_conta		x,
										pls_fatura_evento		y,
										pls_fatura_mat			z
									where	x.nr_seq_fatura_evento		= y.nr_sequencia
									and	z.nr_seq_fatura_conta		= x.nr_sequencia
									and	z.nr_seq_conta_mat		= r_c02_w.nr_seq_conta_mat
									and	z.nr_seq_conta_pos_estab	= r_c01_w.nr_seq_conta_pos_estab
									and	y.nr_seq_fatura			= nr_seq_pls_fatura_p
									and	ie_novo_pos_estab_w		= 'N'
									
union all

									SELECT	count(1) contador
									from	pls_fatura_conta		x,
										pls_fatura_evento		y,
										pls_fatura_mat			z
									where	x.nr_seq_fatura_evento		= y.nr_sequencia
									and	z.nr_seq_fatura_conta		= x.nr_sequencia
									and	z.nr_seq_conta_mat		= r_c02_w.nr_seq_conta_mat
									and	z.nr_seq_pos_mat		= r_c01_w.nr_seq_pos_mat
									and	y.nr_seq_fatura			= nr_seq_pls_fatura_p
									and	ie_novo_pos_estab_w		= 'S' )t;

								if (qt_registro_dupl_w > 0) then
									select	count(1)
									into STRICT	qt_registro_dupl_w
									from	ptu_nota_servico
									where	nr_sequencia 		= nr_seq_nota_servico_w
									and	nr_seq_conta_mat 	= r_c02_w.nr_seq_conta_mat;

									if (qt_registro_dupl_w = 0) then
										select	count(1)
										into STRICT	qt_registro_dupl_w
										from	ptu_nota_servico_item a
										where	a.nr_seq_nota_servico	= nr_seq_nota_servico_w
										and	a.nr_seq_conta_mat	= r_c02_w.nr_seq_conta_mat;
									end if;

									if (qt_registro_dupl_w > 0) then
										qt_procedimento_w	:= 0;
										vl_liberado_w		:= 0;
									end if;
								end if;
							end if;

							select	max(ds_hora_procedimento),
								max(hr_final)
							into STRICT	ds_hora_procedimento_w,
								hr_final_w
							from	ptu_nota_servico
							where	nr_sequencia	= nr_seq_nota_servico_w;

							-- Hora inicial/final deve aumentar 1 segundo para procedimentos com quantidade igual ou maior que 999
							if (ds_hora_procedimento_w IS NOT NULL AND ds_hora_procedimento_w::text <> '') and (qt_procedimento_w >= 999) then
								ds_hora_procedimento_w	:= alterar_hora(ds_hora_procedimento_w, 'N');
								hr_final_w		:= alterar_hora(coalesce(hr_final_w,ds_hora_procedimento_w), 'N');
							end if;

							update	ptu_nota_servico
							set	vl_procedimento			= coalesce(vl_procedimento,0)	+ vl_procedimento_w,
								vl_custo_operacional		= coalesce(vl_custo_operacional,0)	+ vl_custo_operacional_w,
								vl_filme			= coalesce(vl_filme,0)		+ vl_filme_w,
								vl_adic_procedimento		= coalesce(vl_adic_procedimento,0)	+ vl_adic_procedimento_w,
								vl_adic_co			= coalesce(vl_adic_co,0)		+ vl_adic_custo_operacional_w,
								vl_adic_filme			= coalesce(vl_adic_filme,0)		+ vl_adic_filme_w,
								vl_pago_prest			= coalesce(vl_pago_prest,0)		+ vl_liberado_w,
								qt_procedimento			= coalesce(qt_procedimento,0)	+ qt_procedimento_w,
								nr_seq_conta_proc		= r_c02_w.nr_seq_conta_proc,
								nr_seq_conta_mat		= r_c02_w.nr_seq_conta_mat,
								-- dependendo da ordem de agrupamento, pode ser que o ie_tipo_pessoa_prestador de F passe a J, e gere inconsistencia no webstart, entao prioriza sempre o F quando ja foi informado
								nr_cgc_cpf			= CASE WHEN ie_tipo_pessoa_prestador='F' THEN  nr_cgc_cpf  ELSE nr_cnpj_cpf_w END ,
								ie_tipo_pessoa_prestador	= CASE WHEN ie_tipo_pessoa_prestador='F' THEN  ie_tipo_pessoa_prestador  ELSE ie_tipo_pessoa_pres_w END ,
								sg_cons_prof_prest		= CASE WHEN ie_tipo_pessoa_prestador='F' THEN  sg_cons_prof_prest  ELSE sg_cons_prof_prest_w END ,
								nr_cons_prof_prest		= CASE WHEN ie_tipo_pessoa_prestador='F' THEN  nr_cons_prof_prest  ELSE nr_cons_prof_prest_w END ,
								sg_uf_cons_prest		= CASE WHEN ie_tipo_pessoa_prestador='F' THEN  sg_uf_cons_prest  ELSE sg_uf_cons_prest_w END ,
								ds_hora_procedimento		= CASE WHEN ds_hora_procedimento_w = NULL THEN ds_hora_procedimento  ELSE ds_hora_procedimento_w END ,
								hr_final			= CASE WHEN hr_final_w = NULL THEN hr_final  ELSE hr_final_w END
							where	nr_sequencia			= nr_seq_nota_servico_w;

							-- Inserir o item que faz parte da nota servico
							CALL pls_gerar_ptu_nota_serv_item(	nr_seq_nota_servico_w, 			r_c01_w.nr_seq_conta_pos_estab, 	r_c01_w.nr_seq_pos_proc,
											r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			null,
											r_c02_w.nr_seq_conta_proc, 		r_c02_w.nr_seq_conta_mat,		nr_seq_proc_partic_w,
											r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
											vl_procedimento_w,			vl_filme_w, 				vl_custo_operacional_w,
											vl_adic_procedimento_w,			vl_adic_filme_w,			vl_adic_custo_operacional_w,
											qt_procedimento_w,			'1', 					'0',
											nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
											r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
											r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		null);

							-- Quando passar de 999, agrupar e pegar o total de quantidade
							select	max(qt_procedimento)
							into STRICT	qt_procedimento_w
							from	ptu_nota_servico
							where	nr_sequencia = nr_seq_nota_servico_w;

							if (qt_procedimento_w > qt_serv_padrao_ptu_w) then
								select	max(vl_procedimento),
									max(vl_custo_operacional),
									max(vl_filme),
									max(vl_adic_procedimento),
									max(vl_adic_co),
									max(vl_adic_filme),
									max(vl_pago_prest),
									max(ds_hora_procedimento)
								into STRICT	vl_procedimento_w,
									vl_custo_operacional_w,
									vl_filme_w,
									vl_adic_procedimento_w,
									vl_adic_custo_operacional_w,
									vl_adic_filme_w,
									vl_liberado_w,
									hr_inicio_w
								from	ptu_nota_servico
								where	nr_sequencia = nr_seq_nota_servico_w;
							end if;
						end if;
					end if;
				else -- se for reemboslo
					SELECT * FROM ptu_obter_regra_agrup_item(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat, cd_servico_w, null, null, ie_agrupa_w, nr_seq_regra_agrup_ptu_w, ie_agrupa_hora_w) INTO STRICT ie_agrupa_w, nr_seq_regra_agrup_ptu_w, ie_agrupa_hora_w;

					if (ie_agrupa_w = 'S') then
						-- jtonon - OS 1164815 - Realizamos ajuste para a 'Unimed Sao Jose do Rio Preto' a pedido da 'Francini'
						-- "... o sistema nao poderia agrupar itens diferentes no codigo generico, o correto e gerar item a item, com o codigo generico e com a devida descricao do material ..."
						-- Cenario com materiais, onde ha regra em 'OPS - Cooperativas medicas > Regras gerais > Conversoes'
						select	/*+ USE_CONCAT */							max(x.nr_sequencia)
						into STRICT	nr_seq_nota_servico_rrs_w
						from	ptu_nota_servico_rrs x
						where	x.cd_servico		= cd_servico_w
						and	x.ds_servico		= ds_servico_w
						and	x.nr_nota		= nr_nota_w
						and	x.nr_seq_nota_cobr_rrs	= nr_seq_cobranca_rrs_p
						and	x.tp_particip		= ie_tipo_participacao_w
						and	x.dt_servico		= dt_procedimento_w
						and	x.qt_cobrada 		< qt_serv_padrao_ptu_w;

						if (nr_seq_nota_servico_rrs_w IS NOT NULL AND nr_seq_nota_servico_rrs_w::text <> '') then
							-- Tratamento realizado para quando o item estiver com dois registros contabeis dentro da fatura
							if (r_c02_w.nr_seq_conta_proc IS NOT NULL AND r_c02_w.nr_seq_conta_proc::text <> '') then
								select	count(1)
								into STRICT	qt_registro_dupl_w
								from	pls_fatura_conta		x,
									pls_fatura_evento		y,
									pls_fatura_proc			z
								where	x.nr_seq_fatura_evento		= y.nr_sequencia
								and	z.nr_seq_fatura_conta		= x.nr_sequencia
								and	z.nr_seq_conta_proc		= r_c02_w.nr_seq_conta_proc
								and	z.nr_seq_conta_pos_estab	= r_c01_w.nr_seq_conta_pos_estab
								and	y.nr_seq_fatura			= nr_seq_pls_fatura_p;

								if (qt_registro_dupl_w > 0) then
									select	count(1)
									into STRICT	qt_registro_dupl_w
									from	ptu_nota_servico_rrs
									where	nr_sequencia		= nr_seq_nota_servico_rrs_w
									and	nr_seq_conta_proc	= r_c02_w.nr_seq_conta_proc;

									if (qt_registro_dupl_w > 0) then
										qt_procedimento_w	:= 0;
										vl_liberado_w		:= 0;
									end if;
								end if;
							elsif (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then
								select	count(1)
								into STRICT	qt_registro_dupl_w
								from	pls_fatura_conta		x,
									pls_fatura_evento		y,
									pls_fatura_mat			z
								where	x.nr_seq_fatura_evento		= y.nr_sequencia
								and	z.nr_seq_fatura_conta		= x.nr_sequencia
								and	z.nr_seq_conta_mat		= r_c02_w.nr_seq_conta_mat
								and	z.nr_seq_conta_pos_estab	= r_c01_w.nr_seq_conta_pos_estab
								and	y.nr_seq_fatura			= nr_seq_pls_fatura_p;

								if (qt_registro_dupl_w > 0) then
									select	count(1)
									into STRICT	qt_registro_dupl_w
									from	ptu_nota_servico
									where	nr_sequencia 		= nr_seq_nota_servico_rrs_w
									and	nr_seq_conta_mat 	= r_c02_w.nr_seq_conta_mat;

									if (qt_registro_dupl_w > 0) then
										qt_procedimento_w	:= 0;
										vl_liberado_w		:= 0;
									end if;
								end if;
							end if;
							-- apura o vl do reembolso
							vl_serv_cob_w 	:= 	coalesce(vl_procedimento_w,0) +
										coalesce(vl_filme_w,0) +
										coalesce(vl_custo_operacional_w,0) +
										coalesce(vl_adic_procedimento_w,0) +
										coalesce(vl_adic_filme_w,0) +
										coalesce(vl_adic_custo_operacional_w,0);

							vl_dif_vl_inter_w :=	vl_serv_cob_w - coalesce(vl_reemb_benef_w,0);

							if (vl_dif_vl_inter_w <= 0) then
								vl_dif_vl_inter_w := vl_serv_cob_w;
							end if;

							update	ptu_nota_servico_rrs
							set	vl_serv_cob		= vl_serv_cob + vl_serv_cob_w,
								vl_dif_vl_inter		= vl_dif_vl_inter + vl_dif_vl_inter_w,
								nr_seq_conta_proc	= r_c02_w.nr_seq_conta_proc,
								nr_seq_conta_mat	= r_c02_w.nr_seq_conta_mat
							where	nr_sequencia		= nr_seq_nota_servico_rrs_w;

							-- Inserir o item que faz parte da nota servico
							CALL pls_gerar_ptu_nota_serv_item(	null, 					r_c01_w.nr_seq_conta_pos_estab, 	r_c01_w.nr_seq_pos_proc,
											r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			null,
											r_c02_w.nr_seq_conta_proc, 		r_c02_w.nr_seq_conta_mat,		nr_seq_proc_partic_w,
											r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
											vl_procedimento_w,			vl_filme_w, 				vl_custo_operacional_w,
											vl_adic_procedimento_w,			vl_adic_filme_w,			vl_adic_custo_operacional_w,
											qt_procedimento_w,			'1', 					'1',
											nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
											r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
											r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		nr_seq_nota_servico_rrs_w);

							-- Quando passar de 999, agrupar e pegar o total de quantidade
							select	max(qt_cobrada)
							into STRICT	qt_procedimento_w
							from	ptu_nota_servico_rrs
							where	nr_sequencia = nr_seq_nota_servico_rrs_w;

							if (qt_procedimento_w > qt_serv_padrao_ptu_w) then
								select	max(vl_serv_cob),
									0,
									0,
									0,
									0,
									0,
									max(vl_serv_cob),
									null
								into STRICT	vl_procedimento_w,
									vl_custo_operacional_w,
									vl_filme_w,
									vl_adic_procedimento_w,
									vl_adic_custo_operacional_w,
									vl_adic_filme_w,
									vl_liberado_w,
									hr_inicio_w
								from	ptu_nota_servico_rrs
								where	nr_sequencia = nr_seq_nota_servico_rrs_w;
							end if;
						end if;
					end if;
				end if; -- Fim controle reembolso
			end if;

			if (cd_porte_anest_w = '0') and (ie_tipo_participacao_w not in ('A', 'N')) then
				cd_porte_anest_w := null;
			end if;

			-- PACOTE - A ROTINA QUE GERA AS INFORMACOES PARA O CURSOR 69 E O PLS_GERAR_CONTA_POS_PAC_FAT
			begin
				cd_pacote_w			:= cd_servico_w;
				ie_tipo_particip_agrup_w	:= ie_tipo_participacao_w;
				ie_taxa_man_w			:= 'N';
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort('Erro: cd_servico_w='|| cd_servico_w || ' - ie_tipo_particip_agrup_w='|| ie_tipo_particip_agrup_w );
			end;

			-- esta restricao era feita no cursor, coloquei aqui apenas para ficar claro que so ira executar o curso quando nao for tipo de cobranca 3 ou 4
			if (r_c01_w.ie_tipo_cobranca not in ('3', '4')) then

				for r_c69_w in c69( r_c01_w.nr_seq_conta_pos_estab , r_c01_w.nr_seq_pos_proc , r_c01_w.nr_seq_pos_mat ) loop



					ie_exclui_pacote_w			:= 'N';
					vl_adic_custo_operacional_w		:= 0;
					nr_seq_nota_servico_w			:= null;
					ie_tipo_tabela_w			:= r_c69_w.ie_tipo_tabela;
					cd_ref_material_fab_w			:= null;
					id_pag_forn_w				:= '0';
					nr_nota_fiscal_forn_w			:= null;
					cd_procedimento_w			:= r_c69_w.cd_procedimento;
					ie_origem_proced_w			:= r_c69_w.ie_origem_proced;
					ie_tipo_part_regra_pac_w 		:= null;
					ie_desc_pac_origem_w			:= 'N';
					nr_seq_regra_agrup_w			:= r_c69_w.nr_seq_pacote_agrup;
					nr_seq_material_w			:= r_c69_w.nr_seq_material;
					qt_procedimento_w			:= r_c69_w.qt_procedimento;
					vl_adic_procedimento_w			:= r_c69_w.vl_adic_procedimento;
					nr_registro_anvisa_w			:= coalesce(r_c69_w.nr_registro_anvisa,nr_registro_anvisa_w);
					nr_seq_pacote_proc_w			:= r_c69_w.nr_seq_pacote_proc;
					nr_seq_pacote_mat_w			:= r_c69_w.nr_seq_pacote_mat;
					nr_cnpj_fornecedor_w			:= null;
					nm_fornecedor_w				:= null;
					cd_ref_material_fab_opme_w		:= null;
					vl_taxa_manutencao_c69_w		:= 0;
					vl_liberado_w				:= 0;
					vl_procedimento_w			:= coalesce(r_c69_w.vl_procedimento, 0);
					vl_adic_co_pct_w			:= r_c69_w.vl_adic_co;
					vl_custo_operacional_pct_w		:= r_c69_w.vl_custo_operacional;
					vl_adic_filme_pct_w			:= r_c69_w.vl_adic_filme;
					vl_filme_pct_w				:= r_c69_w.vl_filme;
					vl_custo_operacional_w			:= 0;
					vl_filme_w				:= 0;
					vl_adic_filme_w				:= 0;
					ie_regra_cpf_cnpj_forn_w		:= 'N';
					ie_regra_pag_forn_w			:= 'N';
					ie_regra_nome_forn_w			:= 'N';
					ie_regra_nota_forn_w			:= 'N';
					cd_unidade_medida_w			:= null;
					nr_uni_medida_ptu_w			:= null;
          				ie_mat_a900_w := 'N';

					-- Verifique a nota 00000103411, lote 00092642. Os valores referentes a Diaria, Taxa, Material e Medicamento devem ser demonstrados no campo VL_SERV_COB com os campos VL_CO_COB e VL_FILME_COB zerados.
					if (ie_tipo_tabela_w in (1, 2, 3, 4, 5, 6)) then
						vl_procedimento_w		:= vl_procedimento_w + vl_custo_operacional_pct_w + vl_filme_pct_w;
						vl_adic_procedimento_w		:= vl_adic_procedimento_w + vl_adic_co_pct_w + vl_adic_filme_pct_w;
						vl_custo_operacional_pct_w	:= 0;
						vl_filme_pct_w			:= 0;
						vl_adic_custo_operacional_w	:= 0;
						vl_adic_filme_pct_w		:= 0;
					end if;

					if (r_c69_w.nr_seq_pacote_proc IS NOT NULL AND r_c69_w.nr_seq_pacote_proc::text <> '') or (r_c69_w.nr_seq_pacote_mat IS NOT NULL AND r_c69_w.nr_seq_pacote_mat::text <> '') or (r_c69_w.ie_origem_proced = 4) then
						cd_servico_w	:= r_c69_w.cd_servico;
						ds_servico_w	:= r_c69_w.ds_servico;
					end if;

					if (r_c02_w.nr_seq_regra_pct_fat IS NOT NULL AND r_c02_w.nr_seq_regra_pct_fat::text <> '') then
						if (r_c69_w.nr_seq_pacote_proc IS NOT NULL AND r_c69_w.nr_seq_pacote_proc::text <> '') then
							select	max(cd_procedimento)
							into STRICT	cd_pacote_w
							from	pls_pacote
							where	nr_sequencia = r_c69_w.nr_seq_pacote;

						elsif (r_c69_w.nr_seq_pacote_mat IS NOT NULL AND r_c69_w.nr_seq_pacote_mat::text <> '') then
							select	max(cd_procedimento)
							into STRICT	cd_pacote_w
							from	pls_pacote
							where	nr_sequencia = r_c69_w.nr_seq_pacote;
						end if;
					end if;
					cd_serv_pacote_w := cd_pacote_w;

					-- Se esta inserindo o pacote e nao os procedimentos do mesmo, entao verificara a regra do pacote e caso estiver marcado para excluir o mesmo, entao nao o inserira.
					if (coalesce(r_c69_w.nr_seq_pacote_proc::text, '') = '') and (coalesce(r_c69_w.nr_seq_pacote_mat::text, '') = '') then
						select 	max(ie_exclui_item_pacote)
						into STRICT	ie_exclui_pacote_w
						from	pls_pacote_agrup_fat
						where 	cd_procedimento = r_c69_w.cd_procedimento
						and	ie_origem_proced = r_c69_w.ie_origem_proced
						and 	((ie_tipo_intercambio = 'A') or (ie_tipo_intercambio = ie_tipo_intercambio_w))
						and	clock_timestamp() between trunc(coalesce(dt_inicio_vigencia, clock_timestamp())) and coalesce(dt_fim_vigencia, clock_timestamp());
					end if;

					-- Nao pode ser taxa administrativa / valor manutencao
					if (r_c01_w.ie_tipo_cobranca not in ('3', '4')) and (ie_taxa_man_w = 'N') then
						if (r_c01_w.nr_seq_conta_pos_estab IS NOT NULL AND r_c01_w.nr_seq_conta_pos_estab::text <> '') then
							select	coalesce(sum(coalesce(vl_taxa_manutencao, 0)), 0)
							into STRICT	vl_taxa_manutencao_c69_w
							from	pls_conta_pos_estab_taxa
							where	nr_seq_conta_pos_estab = r_c01_w.nr_seq_conta_pos_estab;
							ie_taxa_man_w := 'S';

						elsif (r_c01_w.nr_seq_pos_proc IS NOT NULL AND r_c01_w.nr_seq_pos_proc::text <> '') then
							select	coalesce(sum(coalesce(vl_taxa_manutencao, 0)), 0)
							into STRICT	vl_taxa_manutencao_c69_w
							from	pls_conta_pos_proc_tx
							where	nr_seq_conta_pos_proc = r_c01_w.nr_seq_pos_proc;
							ie_taxa_man_w := 'S';

						elsif (r_c01_w.nr_seq_pos_mat IS NOT NULL AND r_c01_w.nr_seq_pos_mat::text <> '') then
							select	coalesce(sum(coalesce(vl_taxa_manutencao, 0)), 0)
							into STRICT	vl_taxa_manutencao_c69_w
							from	pls_conta_pos_mat_tx
							where	nr_seq_conta_mat_pos = r_c01_w.nr_seq_pos_mat;
							ie_taxa_man_w := 'S';
						end if;
					end if;

					select	max(ie_classificacao)
					into STRICT	ie_classificacao_w
					from	procedimento
					where	cd_procedimento 	= cd_procedimento_w
					and	ie_origem_proced 	= ie_origem_proced_w;

					-- controle de reembolso
					if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

						if (coalesce(nr_seq_nota_servico_w::text, '') = '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_nota_servico_w
							from	ptu_nota_servico
							where	nr_seq_nota_cobr	= nr_seq_cobranca_p
							and	nr_seq_pacote_agrup	= nr_seq_regra_agrup_w;
						end if;
					end if; -- Fim controle reembolso
					if (ie_tipo_tabela_w in (2, 3, 4, 5, 6)) then -- Materiais / Medicamentos e pacotes (adicionado pacotes na OS 2313699)
						ie_tipo_particip_agrup_w	:= '0';
						cd_ref_material_fab_w		:= coalesce(cd_ref_material_fab_w, cd_servico_w);

					elsif (ie_tipo_tabela_w = 1) then -- Taxas -- As taxas poderao ser identificadas com participacao 0 (zero) ou H (em caso de notas de internacao, quando houver uma diaria associada a nota)
						if (r_c02_w.ie_tipo_guia = '5') or ((ie_classificacao_w = '3') and (coalesce(nr_seq_material_w::text, '') = '')) then -- As diarias devem ser sempre identificadas com participacao H;
							ie_tipo_particip_agrup_w := 'H';
						else
							ie_tipo_particip_agrup_w := '0';
						end if;
					else
						ie_tipo_particip_agrup_w := ie_tipo_participacao_w;
					end if;

					if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
						select	max(ie_tipo_despesa),
							max(cd_unidade_medida),
							max(nr_seq_material_unimed)
						into STRICT	ie_tipo_despesa_w,
							cd_unidade_medida_w,
							nr_seq_mat_unimed_w
						from	pls_material
						where	nr_sequencia = nr_seq_material_w;

						select	coalesce(max(nr_sequencia),nr_seq_mat_unimed_w)
						into STRICT	nr_seq_mat_unimed_w
						from	pls_material_unimed
						where	nr_sequencia	!= nr_seq_mat_unimed_w
						and	nr_sequencia	=	(SELECT	max(nr_sequencia)
										from	pls_material_unimed
										where	cd_material	= cd_servico_w);

						if (coalesce(nr_seq_mat_unimed_w::text, '') = '') then
							select	coalesce(max(cd_unidade_medida),cd_unidade_medida_w),
								max(nr_sequencia),
								max(ie_codificacao)
							into STRICT	cd_unidade_medida_w,
								nr_seq_mat_unimed_w,
								ie_codificacao_w
							from	pls_material_unimed
							where	nr_sequencia	= 	(SELECT	max(nr_sequencia)
											from	pls_material_unimed
											where	cd_material	= cd_servico_w);
						else
							select	coalesce(max(cd_unidade_medida),cd_unidade_medida_w),
								max(ie_codificacao)
							into STRICT	cd_unidade_medida_w,
								ie_codificacao_w
							from	pls_material_unimed
							where	nr_sequencia	= nr_seq_mat_unimed_w;
						end if;

						if (ie_tipo_despesa_w != 7) and (qt_regra_ptu_mat_w > 0) then
							ie_regra_cpf_cnpj_forn_w:= pls_obter_regra_campo_ptu_mat( dt_item_w, ie_tipo_intercambio_w, ie_tipo_despesa_w, cd_servico_w, r_c02_w.ie_tipo_guia, 'NR_CPF_CNPJ_FORNECEDOR' );
							ie_regra_pag_forn_w	:= pls_obter_regra_campo_ptu_mat( dt_item_w, ie_tipo_intercambio_w, ie_tipo_despesa_w, cd_servico_w, r_c02_w.ie_tipo_guia, 'ID_PAG_FORN' );
							ie_regra_nome_forn_w	:= pls_obter_regra_campo_ptu_mat( dt_item_w, ie_tipo_intercambio_w, ie_tipo_despesa_w, cd_servico_w, r_c02_w.ie_tipo_guia, 'NM_FORNECEDOR' );
							ie_regra_nota_forn_w	:= pls_obter_regra_campo_ptu_mat( dt_item_w, ie_tipo_intercambio_w, ie_tipo_despesa_w, cd_servico_w, r_c02_w.ie_tipo_guia, 'NR_NOTA_FISCAL_FORN' );
						end if;

						-- Somente OPME
						if (ie_tipo_despesa_w = 7) or
							((ie_regra_cpf_cnpj_forn_w = 'S') or (ie_regra_pag_forn_w = 'S') or (ie_regra_nome_forn_w = 'S') or (ie_regra_nota_forn_w = 'S')) then
							atualizar_regra_campos_opme(r_c02_w.nr_seq_conta, null, r_c02_w.nr_seq_conta_proc, nr_seq_material_w, ie_data_conv_mat_unimed_w, dt_item_w,
											ie_regra_cpf_cnpj_forn_w, ie_regra_pag_forn_w, ie_regra_nome_forn_w, ie_regra_nota_forn_w);
							det_reg_anvisa_w	:= substr(coalesce(coalesce(trim(both det_reg_anvisa_w),trim(both nm_fabricante_w)),nm_importador_w),1,50);
							
							-- Se nao for OPME
							if (ie_tipo_despesa_w != 7) then
								if (ie_regra_cpf_cnpj_forn_w = 'N') then
									nr_cnpj_fornecedor_w := null;
								end if;

								if (ie_regra_nome_forn_w = 'N') then
									nm_fornecedor_w := null;
								end if;
							end if;
						end if;

						-- Se nao for OPME
						if (ie_tipo_despesa_w != 7) then
							if (ie_regra_pag_forn_w = 'N') then
								id_pag_forn_w		:= '0';
							end if;

							if (ie_regra_nota_forn_w = 'N') then
								nr_nota_fiscal_forn_w	:= null;
							end if;

							-- Regra: Obrigatorio em caso de cobranca de orteses, proteses e materiais especiais, quando for utilizado codigo de material ainda nao cadastrado na TUSS. Demais casos, preencher com brancos.
							if (ie_versao_w = 70) then
								det_reg_anvisa_w	:= null;
								det_reg_anvisa_opme_w	:= null;
							end if;

							-- Regra: Obrigatorio em caso de codigo generico de OPME. Demais casos, preencher com brancos.
							if (ie_versao_w >= 80) then
								det_reg_anvisa_w	:= null;
								det_reg_anvisa_opme_w	:= null;
							end if;
						end if;
						if (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '') then
							select	max(cd_material)
							into STRICT	cd_material_a900_w
							from	pls_material_unimed
							where	nr_sequencia	= nr_seq_mat_unimed_w;

							-- Pegar a unidade de medida conforme A900
							if (cd_material_a900_w IS NOT NULL AND cd_material_a900_w::text <> '') then
								select	max(l.dt_inicio_vigencia_icms)
								into STRICT	dt_inicio_vig_mat_w
								from	pls_material_unimed m,
									pls_lote_imp_mat_uni_reg r,
									pls_lote_imp_mat_unimed	l
								where	m.nr_sequencia			= r.nr_seq_mat_unimed
								and	l.nr_sequencia			= r.nr_seq_lote
								and	m.cd_material			= cd_material_a900_w
								and	l.dt_inicio_vigencia_icms 	<= dt_procedimento_w;

								if (dt_inicio_vig_mat_w IS NOT NULL AND dt_inicio_vig_mat_w::text <> '') then
									select	coalesce(max(r.cd_unidade_medida),cd_unidade_medida_w),
										coalesce(max(r.ie_codificacao),ie_codificacao_w)
									into STRICT	cd_unidade_medida_w,
										ie_codificacao_w
									from	pls_material_unimed m,
										pls_lote_imp_mat_uni_reg r,
										pls_lote_imp_mat_unimed	l
									where	m.nr_sequencia			= r.nr_seq_mat_unimed
									and	l.nr_sequencia			= r.nr_seq_lote
									and	m.cd_material			= cd_material_a900_w
									and	l.dt_inicio_vigencia_icms	= dt_inicio_vig_mat_w;
								end if;
							end if;
						end if;

						if (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then
							-- Prioria a unidade de medida do PTU
							select	max(nr_unidade_ptu)
							into STRICT	nr_uni_medida_ptu_w
							from	unidade_medida
							where	upper(cd_unidade_ptu)	= upper(cd_unidade_medida_w)
							and	ie_situacao		= 'A';

							-- se ainda nao encontrou a unidade de medida, tenta novamente usando apenas a unidade do hospital
							if (coalesce(nr_uni_medida_ptu_w::text, '') = '') then
								select	max(nr_unidade_ptu)
								into STRICT	nr_uni_medida_ptu_w
								from	unidade_medida
								where	upper(cd_unidade_medida) = upper(cd_unidade_medida_w)
								and	ie_situacao		= 'A';
							end if;
						end if;

						if (ie_codificacao_w = '2') then -- TUSS
							if (ie_tipo_tabela_w = 2) then -- Material TNUMM
								ie_tipo_tabela_w := 5; -- Material TUSS
							elsif (ie_tipo_tabela_w = 3) then -- Medicamento TNUMM
								ie_tipo_tabela_w := 6; -- Medicamento TUSS
							end if;
						end if;
					end if;

					-- Regra: Obrigatorio em caso de codigo generico de OPME. Demais casos, preencher com brancos.
					if (ie_versao_w >= 80) and (coalesce(ptu_obter_dados_serv_generico(cd_servico_w, 'IE'), 'X') <> '4') then -- '4' = OPME generico
						det_reg_anvisa_w	:= null;
						det_reg_anvisa_opme_w	:= null;

						if (ie_versao_w >= 101) then
							cd_ref_material_fab_w		:= null;
							cd_ref_material_fab_opme_w	:= null;

							if (ie_tipo_despesa_w != 7) then
								nr_cnpj_fornecedor_w		:= null;
								nm_fornecedor_opme_w		:= null;
								nm_fornecedor_w			:= null;
							end if;
						end if;
					end if;

					-- Regra de conversao de participacao
					if (r_c69_w.nr_seq_pacote_proc IS NOT NULL AND r_c69_w.nr_seq_pacote_proc::text <> '') then
						ie_tipo_part_regra_pac_w := pls_obter_regra_partic_proc(	r_c02_w.nr_seq_conta_proc, cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, nr_seq_grau_partic_w, ie_tipo_part_regra_pac_w, 'S', ie_diaria_w);

					elsif (r_c69_w.nr_seq_pacote_mat IS NOT NULL AND r_c69_w.nr_seq_pacote_mat::text <> '') then
						ie_tipo_part_regra_pac_w := pls_obter_regra_partic_mat(r_c02_w.nr_seq_conta_mat, ie_tipo_tabela_w, ie_tipo_part_regra_pac_w, 'S');
					end if;

					-- Caso tenha regra de participante
					if (ie_tipo_part_regra_pac_w IS NOT NULL AND ie_tipo_part_regra_pac_w::text <> '') then
						ie_tipo_particip_agrup_w := ie_tipo_part_regra_pac_w;
					end if;

					SELECT * FROM ptu_obter_regra_agrup_item(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat, cd_servico_w, 'S', ie_tipo_tabela_w, ie_agrupa_w, nr_seq_regra_agrup_ptu_w, ie_agrupa_hora_w) INTO STRICT ie_agrupa_w, nr_seq_regra_agrup_ptu_w, ie_agrupa_hora_w;

					if (ie_agrupa_w = 'N') then
						nr_seq_nota_servico_w := null;
						nr_seq_nota_servico_rrs_w := null;
					end if;

					ds_servico_w := ptu_somente_caracter_permitido(ds_servico_w, 'ANS');

					SELECT * FROM ptu_obter_senha_item_servico(	r_c69_w.nr_seq_guia, coalesce(r_c69_w.nr_seq_guia_item_proc, r_c69_w.nr_seq_guia_item_mat), r_c69_w.nr_seq_guia_proc, r_c69_w.nr_seq_guia_mat, r_c02_w.nr_seq_segurado, r_c02_w.cd_guia, r_c02_w.cd_guia_referencia, cd_excecao_w, r_c02_w.cd_senha_externa_pos_cab, null,  --r_c02_w.cd_senha_pos_cab,
									ie_agrupar_atendimento_w, cd_senha_w, ie_status_w) INTO STRICT cd_senha_w, ie_status_w;

					if ((trim(both cd_senha_w) IS NOT NULL AND (trim(both cd_senha_w))::text <> '')) or (length(cd_senha_w) > 0) then
						cd_senha_w := somente_numero(substr(cd_senha_w, 1, 10));
					end if;

					-- controle de reembolso
					if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

						if (ie_agrupa_w = 'S') then
							if (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') then
								select	max(coalesce(ie_desc_pac_origem, 'N'))
								into STRICT	ie_desc_pac_origem_w
								from	pls_pacote_agrup_fat
								where	nr_sequencia = nr_seq_regra_agrup_w;
							end if;
							-- So faz o agrupamento desconsiderando o nome original do procedimento, quando tiver regra de agrupamento indicando o mesmo, caso contrario tem que considerar (rio preto)
							if (ie_desc_pac_origem_w = 'N') and (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') then
								select	max(x.nr_sequencia)
								into STRICT	nr_seq_nota_servico_w
								from	ptu_nota_servico 	x
								where	x.cd_servico		= cd_servico_w
								and	x.nr_nota		= nr_nota_w
								and	x.nr_seq_nota_cobr	= nr_seq_cobranca_p
								and	x.ie_tipo_participacao	= ie_tipo_participacao_w
								and	x.dt_procedimento	= dt_procedimento_w
								and	x.tx_procedimento	= tx_fat_mult_serv_w
								and	x.nr_autorizacao	= cd_senha_w
								and	((x.ie_via_acesso	= r_c02_w.ie_via_acesso) or (coalesce(x.ie_via_acesso::text, '') = '') or (coalesce(r_c02_w.ie_via_acesso::text, '') = ''));
							else
								select	max(x.nr_sequencia)
								into STRICT	nr_seq_nota_servico_w
								from	ptu_nota_servico 	x
								where	x.cd_servico		= cd_servico_w
								and	x.nr_nota		= nr_nota_w
								and	x.nr_seq_nota_cobr	= nr_seq_cobranca_p
								and	x.ie_tipo_participacao	= ie_tipo_participacao_w
								and	x.dt_procedimento	= dt_procedimento_w
								and	x.tx_procedimento	= tx_fat_mult_serv_w
								and	x.nr_autorizacao	= cd_senha_w
								and	((x.ie_via_acesso	= r_c02_w.ie_via_acesso) or (coalesce(x.ie_via_acesso::text, '') = '') or (coalesce(r_c02_w.ie_via_acesso::text, '') = ''))
								and	x.ds_servico		= ds_servico_w;
							end if;
						end if;
					else

						if (ie_agrupa_w = 'S') then

							if (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') then
								select	max(coalesce(ie_desc_pac_origem, 'N'))
								into STRICT	ie_desc_pac_origem_w
								from	pls_pacote_agrup_fat
								where	nr_sequencia = nr_seq_regra_agrup_w;
							end if;
							-- So faz o agrupamento desconsiderando o nome original do procedimento, quando tiver regra de agrupamento indicando o mesmo, caso contrario tem que considerar (rio preto)
							if (ie_desc_pac_origem_w = 'N') and (nr_seq_regra_agrup_w IS NOT NULL AND nr_seq_regra_agrup_w::text <> '') then
								select	max(x.nr_sequencia)
								into STRICT	nr_seq_nota_servico_rrs_w
								from	ptu_nota_servico_rrs 	x
								where	x.cd_servico		= cd_servico_w
								and	x.nr_nota		= nr_nota_w
								and	x.nr_seq_nota_cobr_rrs	= nr_seq_cobranca_rrs_p
								and	x.tp_particip		= ie_tipo_participacao_w
								and	x.dt_servico		= dt_procedimento_w;
							else
								select	max(x.nr_sequencia)
								into STRICT	nr_seq_nota_servico_rrs_w
								from	ptu_nota_servico_rrs 	x
								where	x.cd_servico		= cd_servico_w
								and	x.nr_nota		= nr_nota_w
								and	x.nr_seq_nota_cobr_rrs	= nr_seq_cobranca_rrs_p
								and	x.tp_particip		= ie_tipo_participacao_w
								and	x.dt_servico		= dt_procedimento_w
								and	x.ds_servico		= ds_servico_w;
							end if;
						end if;

					end if;

					if (ie_tipo_intercambio_w <> 'E') and (cd_pacote_w <> cd_servico_w) then
						select	CASE WHEN cd_pacote_w=cd_servico_w THEN  null  ELSE cd_pacote_w END
						into STRICT	cd_serv_pacote_w
						;
					end if;

				-- Conversao de materiais dos pacotes OS 2313699
					if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
						--Somente se nao tinha nenhuma regra de conversao em cooperativas medicas\regras gerais\conversao (cd_servico_w is null)
						if	((coalesce(ie_material_intercambio_w, 'S') = 'S') and (coalesce(cd_servico_w::text, '') = '')) then
							cd_servico_w := nr_seq_material_w;

							select	max(cd_unidade_medida)
							into STRICT	cd_unidade_medida_w
							from	pls_material_unimed
							where	cd_material	= cd_servico_w;

						--Somente se nao tinha nenhuma regra de conversao em cooperativas medicas\regras gerais\conversao (cd_servico_w is null)
						elsif	((coalesce(ie_material_intercambio_w, 'S') = 'C') and (coalesce(cd_servico_w::text, '') = '')) then
							cd_servico_w := cd_material_ops_w;

							select	max(cd_unidade_medida)
							into STRICT	cd_unidade_medida_w
							from	pls_material_unimed
							where	cd_material	= cd_servico_w;

						--Se utilizar a gestao de materias, entao as conversoes cadastradas la tem prioridade em relacao as conversoes cadastradas em cooperativas medicas
						elsif (coalesce(ie_material_intercambio_w, 'S') = 'CI') then
							cd_servico_a900_w	:= null;
							nr_seq_material_temp_w	:= nr_seq_material_w;
							cd_servico_temp_w	:= cd_servico_w;

							-- 'OPS - Gestao de Operadora > Parametros da OPS > Faturamento', campo 'Data conversao material PTU'
							if (ie_data_conv_mat_unimed_w = 'DA') then -- Data atual
								SELECT * FROM pls_obter_mat_a900_vigente(nr_seq_material_temp_w, clock_timestamp(), cd_servico_a900_w, null) INTO STRICT nr_seq_material_temp_w, cd_servico_a900_w;
							else -- Data item
								SELECT * FROM pls_obter_mat_a900_vigente(nr_seq_material_temp_w, dt_item_w, cd_servico_a900_w, null) INTO STRICT nr_seq_material_temp_w, cd_servico_a900_w;
							end if;

							cd_servico_temp_w := somente_numero(cd_servico_a900_w);
							if (cd_servico_temp_w = 0) then
								cd_servico_temp_w := null;
							else
								ie_mat_a900_w := 'S';

								select	coalesce(coalesce(max(a.nr_seq_material_unimed),max(b.nr_sequencia)),nr_seq_mat_unimed_w),
									coalesce(max(b.ie_codificacao), '1')
								into STRICT	nr_seq_mat_unimed_w,
									ie_codificacao_w
								from	pls_material_a900	a,
									pls_material_unimed	b
								where	b.cd_material		= a.cd_material_a900
								and	a.cd_material_a900	= cd_servico_a900_w
								and	dt_item_w 		between a.dt_inicio_vigencia and fim_dia(a.dt_fim_vigencia);
							end if;

							-- Conversao pela gestao de materiais tem prioridade sobre a convesao cadastrada nas cooperativas medicas, caso encontrar uma conversao valida na gestao de materiais, cd_servico e nr_seq_material sera sobrescrito
							if (cd_servico_temp_w IS NOT NULL AND cd_servico_temp_w::text <> '') then
								cd_servico_w := cd_servico_temp_w;

								select	coalesce(max(ie_codificacao), ie_codificacao_w)
								into STRICT	ie_codificacao_w
								from	pls_material_unimed
								where	cd_material	= cd_servico_w;
							end if;

							if (nr_seq_material_temp_w IS NOT NULL AND nr_seq_material_temp_w::text <> '') and (cd_servico_temp_w IS NOT NULL AND cd_servico_temp_w::text <> '') then
								nr_seq_material_w	:= nr_seq_material_temp_w;
								ds_servico_w		:= substr(pls_obter_desc_material(nr_seq_material_w), 1, 80); --pode ter obtido outra sequencia de material
							end if;

							select	max(cd_unidade_medida)
							into STRICT	cd_unidade_medida_w
							from	pls_material_unimed
							where	cd_material	= cd_servico_w;

						end if;

						if (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') then
							-- Prioria a unidade de medida do PTU
							select	max(nr_unidade_ptu)
							into STRICT	nr_uni_medida_ptu_w
							from	unidade_medida
							where	upper(cd_unidade_ptu)	= upper(cd_unidade_medida_w)
							and	ie_situacao		= 'A';

							-- se ainda nao encontrou a unidade de medida, tenta novamente usando apenas a unidade do hospital
							if (coalesce(nr_uni_medida_ptu_w::text, '') = '') then
								select	max(nr_unidade_ptu)
								into STRICT	nr_uni_medida_ptu_w
								from	unidade_medida
								where	upper(cd_unidade_medida) = upper(cd_unidade_medida_w)
								and	ie_situacao		= 'A';
							end if;
						end if;

					end if;

					-- Se estiver marcado para exclusao do pacote, entao nem insere ele. Isso ocorrera apenas com o proprio pacote, quando tiver uma regra para inserir os itens de composicao do mesmo.
					if (coalesce(ie_exclui_pacote_w, 'N') = 'N') then

						vl_adic_co_c69_w 	:= coalesce(vl_adic_co_pct_w,0) + coalesce(vl_taxa_manutencao_c69_w,0);

						-- Controle de reembolso
						if	((coalesce(nr_seq_nota_servico_w::text, '') = '') and (coalesce(nr_seq_nota_servico_rrs_w::text, '') = '')) then

							SELECT * FROM ptu_obter_regra_pacote_ptu(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat, cd_servico_w, cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w, r_c69_w.nr_seq_pacote) INTO STRICT cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w;

							cd_serv_pacote_w	:= coalesce(cd_pacote_ptu_w, cd_serv_pacote_w);
							cd_ref_material_fab_w	:= ptu_somente_caracter_permitido(cd_ref_material_fab_w, 'ANS');
							ie_contem_diaria_w	:= 'N';
							if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

								tratar_tabela_codigo_generico(cd_servico_w, ie_tipo_tabela_w);

								-- se data de autorizacao for nula ou maior que data do ptu 11.3, se estiver selecionado o PTU 11.3
								if	((coalesce(dt_autoriz_w::text, '') = '') or (dt_autoriz_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 then

									-- Verificar se tem diaria no pacote
									select	coalesce(max('S'),'N') id_diaria
									into STRICT	ie_contem_diaria_w
									from	procedimento
									where	cd_procedimento		= cd_procedimento_w
									and	ie_classificacao	= 3;	-- 3 - diaria
									-- Verificar o status do pacote
									select	max(pct.ie_status_sispac) ie_status_sispac
									into STRICT	ie_status_sispac_w
									from	pls_pacote		pct,
										pls_pacote_composicao	ppc,
										pls_pacote_procedimento	ppp
									where	ppc.nr_seq_pacote	= pct.nr_sequencia
									and	ppp.nr_seq_composicao	= ppc.nr_sequencia
									and	ppc.nr_sequencia	= pls_obter_comp_pacote(r_c02_w.nr_seq_conta_proc)
									and	pct.ie_situacao		= 'A';

									-- Se o status do pacote for 1,2,3,4,5,6,12,13,14,16,10,15 remove a conta da fatura
									if (ie_status_sispac_w in (1,2,3,4,5,6,12,13,14,16,10,15)) then

										-- Gravar dados da conta removida na ptu_lote_conta_erro
										CALL pls_gerar_ptu_lote_conta_erro(9543, ie_status_sispac_w, nm_usuario_p, cd_estabelecimento_w, nr_seq_pls_fatura_p, nr_seq_conta_p,nr_seq_lote_fat_w);
									end if;

									if (ie_status_sispac_w = 11) and (coalesce(cd_senha_w::text, '') = '') then

										-- Gravar dados da conta removida na ptu_lote_conta_erro
										CALL pls_gerar_ptu_lote_conta_erro( 9543, ie_status_sispac_w, nm_usuario_p, cd_estabelecimento_w, nr_seq_pls_fatura_p, nr_seq_conta_p, nr_seq_lote_fat_w);
									end if;
								end if;

								ie_pacote_w := 'N';

								-- decode(cd_serv_pacote_w, null, 'N', 'S'),
								if (cd_serv_pacote_w IS NOT NULL AND cd_serv_pacote_w::text <> '') then
									ie_pacote_w	:= 'S';
								end if;

								if	((coalesce(dt_autoriz_w::text, '') = '') or (dt_autoriz_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 and (ie_tipo_tabela_w = 4) then
									ie_pacote_w	:= ' ';
								end if;

								if	((coalesce(dt_autoriz_w::text, '') = '') or (dt_autoriz_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 and (ie_tipo_prestador_w = '8') then
									ie_pacote_w	:= 'N';
								end if;

								-- Pegar o tp_tabela para XML do material
								if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
									ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('M', ie_tipo_despesa_w, null, nr_seq_material_w );
								end if;

								-- Pegar o tp_tabela para XML do procedimento
								if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then
									ie_tipo_tabela_tiss_w		:= ptu_conversao_tipo_tabela(ie_tipo_tabela_w,cd_servico_w,'E',ie_origem_proced_w);
								end if;

								select  max(pc.nr_lote_prest),
									max(pc.nr_guia_tiss_prestador)
								into STRICT 	nr_lote_prest_w,
									nr_guia_tiss_prest_w
								from 	ptu_nota_cobranca pc
								where 	pc.nr_sequencia = nr_seq_cobranca_p;

								select 	coalesce(max(ps.nr_seq_item), 0)
								into STRICT	nr_seq_item_w
								from   	ptu_nota_servico ps,
									ptu_nota_cobranca pc


								where   ps.nr_seq_nota_cobr 		= pc.nr_sequencia
								and 	pc.nr_lote_prest 		= nr_lote_prest_w
								and 	pc.nr_guia_tiss_prestador 	= nr_guia_tiss_prest_w


								and 	pc.nr_seq_fatura 		= nr_seq_fatura_w;

								select	lpad(rownum + coalesce(nr_seq_item_w,0), 4, '0') nr_seq_item
								into STRICT	nr_seq_item_w
								;

								if (ie_item_unico_partic_w = 'S') then
									nr_seq_conta_proc_pac_w := null;
									nr_seq_conta_mat_pac_w  := null;
									
									if (r_c69_w.nr_seq_pacote_proc IS NOT NULL AND r_c69_w.nr_seq_pacote_proc::text <> '') then
										select  nextval('pls_conta_proc_seq')
										into STRICT  nr_seq_conta_proc_pac_w
										;
									else
										nr_seq_conta_proc_pac_w := r_c02_w.nr_seq_conta_proc;
									end if;
									
									if (r_c69_w.nr_seq_pacote_mat IS NOT NULL AND r_c69_w.nr_seq_pacote_mat::text <> '') then
										nr_seq_conta_proc_pac_w := null;
										
										select  nextval('pls_conta_mat_seq')
										into STRICT  nr_seq_conta_mat_pac_w
										;
									else
										nr_seq_conta_mat_pac_w := r_c02_w.nr_seq_conta_mat;
									end if;
									
									-- Gerar o sequencial do item e o item unico. XML jtrindade
									cd_item_unico_w	:= pls_obter_id_item_unico(nr_seq_conta_proc_pac_w, nr_seq_conta_mat_pac_w,dt_procedimento_w, pls_obter_unimed_estab(cd_estabelecimento_w), nr_seq_item_w);
								else
									-- Gerar o sequencial do item e o item unico. XML jtrindade
									cd_item_unico_w	:= pls_obter_id_item_unico(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat,dt_procedimento_w, pls_obter_unimed_estab(cd_estabelecimento_w), nr_seq_item_w);
								end if;
								
								if (sg_cons_prof_req_w IS NOT NULL AND sg_cons_prof_req_w::text <> '') then
									select	coalesce(max(cd_ptu), sg_cons_prof_req_w)
									into STRICT	sg_cons_prof_req_w
									from	conselho_profissional
									where	sg_conselho = sg_cons_prof_req_w;
								end if;

								if (sg_cons_prof_prest_w IS NOT NULL AND sg_cons_prof_prest_w::text <> '') then
									select	coalesce(max(cd_ptu), sg_cons_prof_prest_w)
									into STRICT	sg_cons_prof_prest_w
									from	conselho_profissional
									where	sg_conselho = sg_cons_prof_prest_w;
								end if;

								-- Se for XML
								if (ie_versao_xml_w > 0)  then
									if (ie_tipo_tabela_tiss_w <> '98') then
										-- Se for procedimento
										if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then

											cd_servico_aux_w		:= cd_servico_w;

											cd_servico_tiss_w		:= ptu_conversao_item_tabela(ie_tipo_tabela_w,cd_servico_w,ie_origem_proced_w);
											ie_tipo_tabela_tiss_w		:= ptu_conversao_tipo_tabela(ie_tipo_tabela_w,cd_servico_w,'E',ie_origem_proced_w);

											ie_tipo_tabela_aux_w		:= null;
											ie_tipo_tabela_tiss_aux_w	:= null;

											-- busca a conversao
											select 	max(a.cd_proc_envio),
												max(a.ie_tipo_tabela_scs),
												coalesce(max(a.ie_servico_proprio),'N')
											into STRICT 	cd_servico_aux_w,
												ie_tipo_tabela_aux_w,
												ie_servico_proprio_w
											from 	pls_conversao_proc a
											where 	trunc(dt_procedimento_w) between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
											and 	a.cd_estabelecimento	= cd_estabelecimento_w
											and 	a.cd_procedimento	= cd_servico_aux_w
											and 	a.ie_origem_proced 	= ie_origem_proced_w
											and 	coalesce(a.ie_ptu, 'N') 	= 'S'
											and 	ie_envio_receb 		= 'E'
											and 	ie_situacao 		= 'A'
											and 	(cd_proc_envio IS NOT NULL AND cd_proc_envio::text <> '')
											and 	(ie_tipo_tabela_scs IS NOT NULL AND ie_tipo_tabela_scs::text <> '')
											and	((coalesce(ie_tipo_intercambio::text, '') = '') or (ie_tipo_intercambio = 'A') or (ie_tipo_intercambio	= ie_tipo_intercambio_w))
											and	((coalesce(nr_seq_prestador_partic::text, '') = '') or (nr_seq_prestador_partic = nr_seq_prestador_partic_w))
											and	((coalesce(nr_seq_contrato::text, '') = '') or (nr_seq_contrato =  nr_seq_contrato_w))
											and	((coalesce(nr_seq_congenere::text, '') = '') or (nr_seq_congenere = nr_seq_congenere_w))
											and	((coalesce(nr_seq_grau_partic::text, '') = '') or (nr_seq_grau_partic = nr_seq_grau_partic_w))
											and	((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento = r_c02_w.nr_seq_tipo_atendimento))
											and	((coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio = nr_seq_intercambio_w))
											and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_exec_w))
											and	((coalesce(nr_seq_grupo_contrato::text, '') = '') or (	(SELECT	count(1)
																		from	table(pls_grupos_pck.obter_contrato_grupo(nr_seq_grupo_contrato, nr_seq_contrato_w, nr_seq_intercambio_w))) > 0));


											-- se tiver conversao de procedimento e de tipo de tabela
											if (cd_servico_aux_w IS NOT NULL AND cd_servico_aux_w::text <> '') and (ie_tipo_tabela_aux_w IS NOT NULL AND ie_tipo_tabela_aux_w::text <> '') then

												cd_servico_w		:= cd_servico_aux_w;
												cd_servico_tiss_w	:= cd_servico_aux_w;

												-- muda para o padrao TISS
												select  case ie_tipo_tabela_aux_w
													when 0 then '22'
													when 1 then '18'
													when 2 then '00'
													when 3 then '00'
													when 4 then '98'
													when 5 then '19'
													when 6 then '20'
													end
												into STRICT  	ie_tipo_tabela_tiss_aux_w
												;

												ie_tipo_tabela_tiss_w	:= ie_tipo_tabela_tiss_aux_w;
												
												if ie_servico_proprio_w = 'S' then
													ie_tipo_tabela_tiss_w := '00';
													cd_servico_tiss_w := ie_tipo_tabela_tiss_aux_w || lpad(cd_servico_aux_w,8,'0');
												end if;
											end if;
										end if;

										-- Se for material
										if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then

											if (ie_mat_a900_w = 'S' and (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '')) then
												-- Pegar a codificacao do material
												select  coalesce(max(b.ie_codificacao),1),
													max(b.tp_tabela_tiss)
												into STRICT  	ie_codificacao_mat_w,
													ie_tipo_tabela_tiss_w
												from 	pls_material_unimed b
												where 	b.nr_sequencia  = nr_seq_mat_unimed_w;
											else
											-- Pegar a codificacao do material
												select  coalesce(max(b.ie_codificacao),1)
												into STRICT  	ie_codificacao_mat_w
												from  	pls_material  a,
													pls_material_unimed b
												where 	b.nr_sequencia  = a.nr_seq_material_unimed
												and 	a.nr_sequencia  = nr_seq_material_w;
											end if;
							
											-- se tiver conversao no pos-estabelecido
											if (r_c02_w.cd_item_convertido IS NOT NULL AND r_c02_w.cd_item_convertido::text <> '') then
											
												select	coalesce(max(b.ie_codificacao),1),
													max(b.tp_tabela_tiss)
												into STRICT  	ie_codificacao_mat_w,
													ie_tipo_tabela_tiss_w
												from 	pls_material_unimed b
												where	b.cd_material = r_c02_w.cd_item_convertido;
												
												cd_servico_w	:= r_c02_w.cd_item_convertido;
											
											end if;
											
											-- se for TNUMM
											if (ie_codificacao_mat_w = 1 ) then

												if ie_tipo_tabela_w in (2,5) then
													ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
												elsif ie_tipo_tabela_w in (3,6) then
													ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
												elsif ie_tipo_tabela_w = 1 then
													ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
												else
													ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
												end if;

												cd_servico_tiss_w := ie_tipo_tabela_tiss_w || lpad(cd_servico_w,8,'0');
												ie_tipo_tabela_tiss_w := '00';
												
												ie_tipo_tabela_mat_aux_w 	:= null;
												cd_mat_envio_aux_w		:= null;
												ds_mat_envio_aux_w		:= null;
												
												select 	max(pcm.ie_tipo_tabela),
													max(pcm.cd_material_envio),
													max(pcm.ds_material_envio)
												into STRICT	ie_tipo_tabela_mat_aux_w,
													cd_mat_envio_aux_w,
													ds_mat_envio_aux_w
												from 	pls_conversao_mat pcm
												where 	trunc(dt_procedimento_w) 	between pcm.dt_inicio_vigencia and coalesce(pcm.dt_fim_vigencia,clock_timestamp())
												and (cd_servico_w >= pcm.cd_material_orig_inicial	or coalesce(pcm.cd_material_orig_inicial::text, '') = '')
												and (cd_servico_w <= pcm.cd_material_orig_final	or coalesce(pcm.cd_material_orig_final::text, '') = '')
												and 	((pcm.ie_tipo_despesa_mat 	= ie_tipo_despesa_mat_w) or (coalesce(pcm.ie_tipo_despesa_mat::text, '') = ''))
												and  	((coalesce(pcm.nr_seq_contrato::text, '') = '') or (pcm.nr_seq_contrato 	=  nr_seq_contrato_w))
												and  	((coalesce(pcm.nr_seq_ops_congenere::text, '') = '') or (pcm.nr_seq_ops_congenere 	= nr_seq_congenere_w))
												and 	pcm.ie_envio_receb 	= 'E';
												
												-- se houver alguma conversao 
												if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') or (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') ( (ds_mat_envio_aux_w) IS NOT NULL AND (ds_mat_envio_aux_w)::text <> '') then
													
													--- se o tipo de tabela foi convertido
													if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') then
														if 	ie_tipo_tabela_mat_aux_w in (2,5) then
															ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
														
														elsif 	ie_tipo_tabela_mat_aux_w in (3,6) then
															ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
														
														elsif 	ie_tipo_tabela_mat_aux_w = 4 then
															ie_tipo_tabela_tiss_w	:= '98'; -- Pcaotes
														
														elsif 	ie_tipo_tabela_mat_aux_w = 1 then
															ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
														
														elsif 	ie_tipo_tabela_mat_aux_w = 0 then
															ie_tipo_tabela_tiss_w	:= '22'; -- Rol de procedimentos Unimed
														
														else
															ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
														end if;								
														
														cd_servico_tiss_w := lpad(cd_servico_w,8,'0');
														
													end if;
													-- se o material de envio for convertido
													if (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') then
														cd_servico_tiss_w := lpad(cd_mat_envio_aux_w,8,'0');
													end if;
													
													-- se a descricao do material for convertido
													if (ds_mat_envio_aux_w IS NOT NULL AND ds_mat_envio_aux_w::text <> '') then
														ds_servico_w := trim(both substr(ds_mat_envio_aux_w,1,80));
													end if;

												end if;								
											else
												cd_servico_tiss_w := cd_servico_w;
											end if;
										end if;
									else
										cd_servico_tiss_w	:= cd_servico_w;
									end if;
								end if;

								-- ptu 11.3 nao pode inserir diarias do pacote
								if (ie_contem_diaria_w = 'N') or (ie_versao_w < 113) or (dt_autoriz_w < dt_ref_ptu_11_3_w) then

									ie_abrir_itens_interc_w := null;

									-- se a regra de composicao estiver informado para nao indicar o item como sendo de pacote
									select 	coalesce(max(a.ie_abrir_itens_intercambio),'S')
									into STRICT 	ie_abrir_itens_interc_w
									from 	pls_pacote_tipo_acomodacao a
									where 	nr_sequencia = r_c02_w.nr_seq_regra_pct_fat;

									if 	ie_abrir_itens_interc_w = 'N' then
										if 	ie_pacote_w = 'S' then
											ie_pacote_w := 'N';
										end if;
									end if;

									insert into ptu_nota_servico(	nr_sequencia, 				dt_atualizacao, 				nm_usuario,
													dt_atualizacao_nrec, 			nm_usuario_nrec, 				nr_seq_nota_cobr,
													nr_lote, 				cd_unimed_prestador, 				cd_prestador,
													nm_prestador, 				ie_tipo_participacao, 				dt_procedimento,
													cd_procedimento, 			ie_origem_proced, 				qt_procedimento,
													ie_tipo_prestador, 			ie_rede_propria, 				ie_tipo_pessoa_prestador,
													nr_cgc_cpf, 				tx_procedimento, 				ie_pacote,
													cd_ato, 				ie_tipo_tabela, 				nr_cgc_cpf_req,
													nm_prestador_requisitante, 		sg_cons_prof_req, 				nr_cons_prof_req,
													sg_uf_cons_req, 			ie_reembolso, 					nr_autorizacao,
													nr_nota, 				vl_procedimento, 				vl_custo_operacional,
													vl_filme, 				cd_porte_anestesico, 				cd_unimed_autorizadora,
													cd_unimed_pre_req, 			cd_prestador_req, 				ie_via_acesso,
													vl_adic_procedimento, 			vl_adic_co, 					vl_adic_filme,
													cd_especialidade, 			nr_seq_nota, 					ds_hora_procedimento,
													cd_cnes_prest, 				nm_profissional_prestador, 			sg_cons_prof_prest,
													nr_cons_prof_prest, 			sg_uf_cons_prest, 				vl_pago_prest,
													nr_seq_material, 			cd_servico, 					ds_servico,
													nr_seq_conta_proc, 			nr_seq_conta_mat, 				nr_seq_pacote_agrup,
													hr_final, 				nr_cbo_exec, 					id_acres_urg_emer,
													tec_utilizada, 				dt_autoriz, 					dt_solicitacao,
													nr_reg_anvisa, 				cd_ref_material_fab, 				cd_munic,
													dt_pgto_prestador, 			unidade_medida, 				cd_pacote,
													tp_autoriz, 				ie_alto_custo, 					ie_tipo_data_regra,
													nr_seq_pacote, 				nr_seq_pacote_proc, 				nr_seq_pacote_mat,
													nr_seq_composicao, 			cd_rec_prestador, 				nr_cnpj_fornecedor,
													id_pag_forn, 				nm_fornecedor, 					det_reg_anvisa,
													cd_ref_material_fab_opme, 		nr_seq_agrup_item_ptu,				nr_nota_fiscal_forn,
													tipo_rede_min,				id_aviso_item,					nr_seq_aviso_procedimento,
													nr_seq_aviso_material,			nr_seq_item,					cd_item_unico,
													ie_tipo_tabela_tiss,			ie_tipo_participacao_tiss,			cd_servico_tiss)
												values (	nextval('ptu_nota_servico_seq'), 		clock_timestamp(), 					nm_usuario_p,
													clock_timestamp(), 				nm_usuario_p, 					nr_seq_cobranca_p,
													nr_lote_w, 				cd_unim_prestador_w, 				cd_prestador_w,
													nm_prestador_w, 			coalesce(ie_tipo_particip_agrup_w, '0'), 		dt_procedimento_w,
													cd_procedimento_w, 			ie_origem_proced_w, 				qt_procedimento_w,
													ie_tipo_prestador_w, 			ie_rede_propria_w, 				ie_tipo_pessoa_pres_w,
													nr_cnpj_cpf_w, 				tx_fat_mult_serv_w, 				ie_pacote_w,
													coalesce(ie_ato_cooperado_w, '1'),		ie_tipo_tabela_w, 				nr_cgc_cpf_req_w,
													nm_prestador_req_w, 			sg_cons_prof_req_w, 				nr_cons_prof_req_w,
													sg_uf_cons_req_w, 			r_c02_w.ie_reembolso, 				cd_senha_w,
													nr_nota_w, 				vl_procedimento_w, 				vl_custo_operacional_pct_w,
													vl_filme_pct_w, 			cd_porte_anest_w, 				cd_cooperativa_w,
													cd_unimed_pre_req_w, 			cd_prestador_req_w, 				r_c02_w.ie_via_acesso,
													vl_adic_procedimento_w, 		vl_adic_co_c69_w, 				vl_adic_filme_pct_w,
													cd_especialidade_w, 			r_c02_w.nr_seq_conta, 				coalesce(hr_inicio_a500_w, hr_inicio_w),
													cd_cnes_w, 				nm_profissional_prestador_w, 			sg_cons_prof_prest_w,
													nr_cons_prof_prest_w, 			sg_uf_cons_prest_w, 				vl_liberado_w,
													nr_seq_material_w, 			cd_servico_w, 					substr(ds_servico_w, 1, 80),
													r_c02_w.nr_seq_conta_proc, 		r_c02_w.nr_seq_conta_mat,			nr_seq_regra_agrup_w,
													coalesce(hr_final_a500_w, hr_fim_w), 	coalesce(cd_cbo_w, '000000'), 			r_c02_w.ie_acres_urg_emer,
													ie_tec_utilizada_w, 			dt_autoriz_w, 					dt_solicitacao_w,
													substr(nr_registro_anvisa_w, 1, 15), 	cd_ref_material_fab_w, 				cd_municipio_w,
													dt_competencia_pgto_w, 			substr(nr_uni_medida_ptu_w, 1, 3), 		CASE WHEN coalesce(ie_pacote_w,'N')='S' THEN cd_serv_pacote_w  ELSE null END ,
													tp_autoriz_w, 				ie_prestador_alto_custo_w, 			ie_tipo_data_w,
													r_c02_w.nr_seq_pacote, 			nr_seq_pacote_proc_w, 				nr_seq_pacote_mat_w,
													nr_seq_composicao_w, 			cd_rec_prestador_w, 				nr_cnpj_fornecedor_w,
													id_pag_forn_w, 				coalesce(nm_fornecedor_opme_w, nm_fornecedor_w), 	coalesce(det_reg_anvisa_opme_w, det_reg_anvisa_w),
													cd_ref_material_fab_opme_w,		nr_seq_regra_agrup_ptu_w,			coalesce(r_c02_w.nr_nota_fiscal_forn_opme, nr_nota_fiscal_forn_w),
													coalesce(tipo_rede_min_w, 1),		id_aviso_item_w,				nr_seq_aviso_procedimento_w,
													nr_seq_aviso_material_w,		nr_seq_item_w,					cd_item_unico_w,
													ie_tipo_tabela_tiss_w,			ie_tipo_partic_tiss_w,				cd_servico_tiss_w) returning nr_sequencia into nr_seq_nota_servico_w;

									-- Inserir o item que faz parte da nota servico
									CALL pls_gerar_ptu_nota_serv_item(	nr_seq_nota_servico_w, 			r_c01_w.nr_seq_conta_pos_estab, 	r_c01_w.nr_seq_pos_proc,
													r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			r_c69_w.nr_seq_conta_pos_pac,
													r_c02_w.nr_seq_conta_proc, 		r_c02_w.nr_seq_conta_mat, 		nr_seq_proc_partic_w,
													r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
													vl_procedimento_w,			vl_filme_pct_w,				vl_custo_operacional_pct_w,
													vl_adic_procedimento_w,			vl_adic_filme_pct_w,			vl_adic_co_c69_w,
													qt_procedimento_w,			'1',					'2',
													nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
													r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
													r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		null);
								end if;
							else

								-- apura o vl do reembolso
								vl_serv_cob_w 	:= 	coalesce(vl_procedimento_w,0) +
											coalesce(vl_filme_pct_w,0) +
											coalesce(vl_custo_operacional_pct_w,0) +
											coalesce(vl_adic_procedimento_w,0) +
											coalesce(vl_adic_filme_pct_w,0) +
											coalesce(vl_adic_co_c69_w,0);

								vl_dif_vl_inter_w :=	vl_serv_cob_w - coalesce(vl_reemb_benef_w,0);

								if (vl_dif_vl_inter_w <= 0) then
									vl_dif_vl_inter_w := vl_serv_cob_w;
								end if;

								ie_contem_diaria_w	:= 'N';

								if	((coalesce(dt_autoriz_w::text, '') = '') or (dt_autoriz_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 then

									-- Verificar se tem diaria no pacote
									select	coalesce(max('S'),'N') id_diaria
									into STRICT	ie_contem_diaria_w
									from	procedimento
									where	cd_procedimento		= cd_procedimento_w
									and	ie_classificacao	= 3;	-- 3 - diaria
									-- Verificar o status do pacote
									select	max(pct.ie_status_sispac) ie_status_sispac
									into STRICT	ie_status_sispac_w
									from	pls_pacote		pct,
										pls_pacote_composicao	ppc,
										pls_pacote_procedimento	ppp
									where	ppc.nr_seq_pacote	= pct.nr_sequencia
									and	ppp.nr_seq_composicao	= ppc.nr_sequencia
									and	ppc.nr_sequencia	= pls_obter_comp_pacote(r_c02_w.nr_seq_conta_proc)
									and	pct.ie_situacao		= 'A';

									-- Se o status do pacote for 1,2,3,4,5,6,12,13,14,16,10,15 remove a conta da fatura
									if (ie_status_sispac_w in (1,2,3,4,5,6,12,13,14,16,10,15)) then

										-- Gravar dados da conta removida na ptu_lote_conta_erro
										CALL pls_gerar_ptu_lote_conta_erro(9543, ie_status_sispac_w, nm_usuario_p, cd_estabelecimento_w, nr_seq_pls_fatura_p, nr_seq_conta_p,nr_seq_lote_fat_w);
									end if;

									if (ie_status_sispac_w = 11) and (coalesce(cd_senha_w::text, '') = '') then

										-- Gravar dados da conta removida na ptu_lote_conta_erro
										CALL pls_gerar_ptu_lote_conta_erro( 9543, ie_status_sispac_w, nm_usuario_p, cd_estabelecimento_w, nr_seq_pls_fatura_p, nr_seq_conta_p, nr_seq_lote_fat_w);
									end if;
								end if;

								-- Pegar o tp_tabela para XML do material
								if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
									ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('M', ie_tipo_despesa_w, null, nr_seq_material_w );
								end if;

								-- Pegar o tp_tabela para XML do procedimento
								if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then
									ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('P', ie_tipo_despesa_w, ie_origem_proced_w, null );
								end if;

								select  coalesce(max(ps.nr_seq_item),0)
								into STRICT	nr_seq_item_w
								from	ptu_nota_servico_rrs	ps,
									ptu_nota_cobranca_rrs	pc,
									ptu_fatura		pf
								where	ps.nr_seq_nota_cobr_rrs	= pc.nr_sequencia
								and	pf.nr_sequencia    	= pc.nr_seq_fatura
								and	pf.nr_sequencia    	= nr_seq_fatura_w;

								select	lpad(rownum + coalesce(nr_seq_item_w,0), 4, '0') nr_seq_item
								into STRICT	nr_seq_item_w
								;

								-- Gerar o sequencial do item e o item unico. XML jtrindade
								cd_item_unico_w	:= pls_obter_id_item_unico(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat,dt_procedimento_w,pls_obter_unimed_estab(cd_estabelecimento_w),nr_seq_item_w);

								if (sg_cons_prof_prest_w IS NOT NULL AND sg_cons_prof_prest_w::text <> '') then
									select	coalesce(max(cd_ptu), sg_cons_prof_prest_w)
									into STRICT	sg_cons_prof_prest_w
									from	conselho_profissional
									where	sg_conselho = sg_cons_prof_prest_w;
								end if;

								-- Se for XML
								if (ie_versao_xml_w > 0) then

									-- Se for procedimento
									if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then

										cd_servico_aux_w		:= cd_servico_w;

										cd_servico_tiss_w		:= ptu_conversao_item_tabela(ie_tipo_tabela_w,cd_servico_w,ie_origem_proced_w);
										ie_tipo_tabela_tiss_w		:= ptu_conversao_tipo_tabela(ie_tipo_tabela_w,cd_servico_w,'E',ie_origem_proced_w);

										ie_tipo_tabela_aux_w		:= null;
										ie_tipo_tabela_tiss_aux_w	:= null;

										-- busca a conversao
										select 	max(a.cd_proc_envio),
											max(a.ie_tipo_tabela_scs),
											coalesce(max(a.ie_servico_proprio),'N')
										into STRICT 	cd_servico_aux_w,
											ie_tipo_tabela_aux_w,
											ie_servico_proprio_w
										from 	pls_conversao_proc a
										where 	trunc(dt_procedimento_w) between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
										and 	a.cd_estabelecimento	= cd_estabelecimento_w
										and 	a.cd_procedimento	= cd_servico_aux_w
										and 	a.ie_origem_proced 	= ie_origem_proced_w
										and 	coalesce(a.ie_ptu, 'N') 	= 'S'
										and 	ie_envio_receb 		= 'E'
										and 	ie_situacao 		= 'A'
										and 	(cd_proc_envio IS NOT NULL AND cd_proc_envio::text <> '')
										and 	(ie_tipo_tabela_scs IS NOT NULL AND ie_tipo_tabela_scs::text <> '')
										and	((coalesce(ie_tipo_intercambio::text, '') = '') or (ie_tipo_intercambio = 'A') or (ie_tipo_intercambio	= ie_tipo_intercambio_w))
										and	((coalesce(nr_seq_prestador_partic::text, '') = '') or (nr_seq_prestador_partic = nr_seq_prestador_partic_w))
										and	((coalesce(nr_seq_contrato::text, '') = '') or (nr_seq_contrato =  nr_seq_contrato_w))
										and	((coalesce(nr_seq_congenere::text, '') = '') or (nr_seq_congenere = nr_seq_congenere_w))
										and	((coalesce(nr_seq_grau_partic::text, '') = '') or (nr_seq_grau_partic = nr_seq_grau_partic_w))
										and	((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento = r_c02_w.nr_seq_tipo_atendimento))
										and	((coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio = nr_seq_intercambio_w))
										and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_exec_w))
										and	((coalesce(nr_seq_grupo_contrato::text, '') = '') or (	(SELECT	count(1)
																	from	table(pls_grupos_pck.obter_contrato_grupo(nr_seq_grupo_contrato, nr_seq_contrato_w, nr_seq_intercambio_w))) > 0));


										-- se tiver conversao de procedimento e de tipo de tabela
										if (cd_servico_aux_w IS NOT NULL AND cd_servico_aux_w::text <> '') and (ie_tipo_tabela_aux_w IS NOT NULL AND ie_tipo_tabela_aux_w::text <> '') then

											cd_servico_w		:= cd_servico_aux_w;
											cd_servico_tiss_w	:= cd_servico_aux_w;

											-- muda para o padrao TISS
											select  case ie_tipo_tabela_aux_w
												when 0 then '22'
												when 1 then '18'
												when 2 then '00'
												when 3 then '00'
												when 4 then '98'
												when 5 then '19'
												when 6 then '20'
												end
											into STRICT  	ie_tipo_tabela_tiss_aux_w
											;

											ie_tipo_tabela_tiss_w	:= ie_tipo_tabela_tiss_aux_w;
											
											if ie_servico_proprio_w = 'S' then
												ie_tipo_tabela_tiss_w := '00';
												cd_servico_tiss_w := ie_tipo_tabela_tiss_aux_w || lpad(cd_servico_aux_w,8,'0');
											end if;
										end if;
									end if;

									-- Se for material
									if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then

										if (ie_mat_a900_w = 'S' and (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '')) then
											-- Pegar a codificacao do material
											select  coalesce(max(b.ie_codificacao),1),
												max(b.tp_tabela_tiss)
											into STRICT  	ie_codificacao_mat_w,
												ie_tipo_tabela_tiss_w
											from 	pls_material_unimed b
											where 	b.nr_sequencia  = nr_seq_mat_unimed_w;
										else
										-- Pegar a codificacao do material
											select  coalesce(max(b.ie_codificacao),1)
											into STRICT  	ie_codificacao_mat_w
											from  	pls_material  a,
												pls_material_unimed b
											where 	b.nr_sequencia  = a.nr_seq_material_unimed
											and 	a.nr_sequencia  = nr_seq_material_w;
										end if;
							
										-- se tiver conversao no pos-estabelecido
										if (r_c02_w.cd_item_convertido IS NOT NULL AND r_c02_w.cd_item_convertido::text <> '') then
										
											select	coalesce(max(b.ie_codificacao),1),
												max(b.tp_tabela_tiss)
											into STRICT  	ie_codificacao_mat_w,
												ie_tipo_tabela_tiss_w
											from 	pls_material_unimed b
											where	b.cd_material = r_c02_w.cd_item_convertido;
											
											cd_servico_w	:= r_c02_w.cd_item_convertido;
										
										end if;
										
										-- se for TNUMM
										if (ie_codificacao_mat_w = 1 ) then

											if ie_tipo_tabela_w in (2,5) then
												ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
											elsif ie_tipo_tabela_w in (3,6) then
												ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
											elsif ie_tipo_tabela_w = 1 then
												ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
											else
												ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
											end if;

											cd_servico_tiss_w := ie_tipo_tabela_tiss_w || lpad(cd_servico_w,8,'0');
											ie_tipo_tabela_tiss_w := '00';
											
											ie_tipo_tabela_mat_aux_w 	:= null;
											cd_mat_envio_aux_w		:= null;
											ds_mat_envio_aux_w		:= null;
											
											select 	max(pcm.ie_tipo_tabela),
												max(pcm.cd_material_envio),
												max(pcm.ds_material_envio)
											into STRICT	ie_tipo_tabela_mat_aux_w,
												cd_mat_envio_aux_w,
												ds_mat_envio_aux_w
											from 	pls_conversao_mat pcm
											where 	trunc(dt_procedimento_w) 	between pcm.dt_inicio_vigencia and coalesce(pcm.dt_fim_vigencia,clock_timestamp())
											and (cd_servico_w >= pcm.cd_material_orig_inicial	or coalesce(pcm.cd_material_orig_inicial::text, '') = '')
											and (cd_servico_w <= pcm.cd_material_orig_final	or coalesce(pcm.cd_material_orig_final::text, '') = '')
											and 	((pcm.ie_tipo_despesa_mat 	= ie_tipo_despesa_mat_w) or (coalesce(pcm.ie_tipo_despesa_mat::text, '') = ''))
											and  	((coalesce(pcm.nr_seq_contrato::text, '') = '') or (pcm.nr_seq_contrato 	=  nr_seq_contrato_w))
											and  	((coalesce(pcm.nr_seq_ops_congenere::text, '') = '') or (pcm.nr_seq_ops_congenere 	= nr_seq_congenere_w))
											and 	pcm.ie_envio_receb 	= 'E';
											
											-- se houver alguma conversao 
											if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') or (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') ( (ds_mat_envio_aux_w) IS NOT NULL AND (ds_mat_envio_aux_w)::text <> '') then
												
												--- se o tipo de tabela foi convertido
												if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') then
													if 	ie_tipo_tabela_mat_aux_w in (2,5) then
														ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
													
													elsif 	ie_tipo_tabela_mat_aux_w in (3,6) then
														ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
													
													elsif 	ie_tipo_tabela_mat_aux_w = 4 then
														ie_tipo_tabela_tiss_w	:= '98'; -- Pcaotes
													
													elsif 	ie_tipo_tabela_mat_aux_w = 1 then
														ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
													
													elsif 	ie_tipo_tabela_mat_aux_w = 0 then
														ie_tipo_tabela_tiss_w	:= '22'; -- Rol de procedimentos Unimed
													
													else
														ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
													end if;								
													
													cd_servico_tiss_w := lpad(cd_servico_w,8,'0');
													
												end if;
												-- se o material de envio for convertido
												if (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') then
													cd_servico_tiss_w := lpad(cd_mat_envio_aux_w,8,'0');
												end if;
												
												-- se a descricao do material for convertido
												if (ds_mat_envio_aux_w IS NOT NULL AND ds_mat_envio_aux_w::text <> '') then
													ds_servico_w := trim(both substr(ds_mat_envio_aux_w,1,80));
												end if;

											end if;								
											
										else
											cd_servico_tiss_w := cd_servico_w;

										end if;
									end if;
								end if;

								-- ptu 11.3 nao pode inserir diarias do pacote
								if (ie_contem_diaria_w = 'N') or (ie_versao_w < 113) or (dt_autoriz_w < dt_ref_ptu_11_3_w) then
									insert into ptu_nota_servico_rrs(	nr_sequencia,				dt_atualizacao_nrec,		nm_usuario_nrec,
														dt_atualizacao,				nm_usuario,			cd_procedimento,
														cd_servico,				ds_servico,			dt_servico,
														ie_origem_proced,			nm_profissional,		nr_autoriz,
														nr_cons_prof,				nr_lote,			nr_nota,
														nr_nota_numerico,			nr_seq_a500,			nr_seq_conta_mat,
														nr_seq_conta_proc,			nr_seq_nota_cobr_rrs,		nr_seq_proc_partic,
														qt_cobrada,				sg_cons_prof,			sg_uf_cons_prof,
														tp_particip,				tp_tabela,			vl_dif_vl_inter,
														vl_serv_cob,				nr_seq_material,		vl_pago_benef,
														nr_seq_item,				cd_item_unico,			ie_tipo_tabela_tiss,
														ie_tipo_participacao_tiss,		cd_servico_tiss)
									values (				nextval('ptu_nota_servico_rrs_seq'),	clock_timestamp(),			nm_usuario_p,
														clock_timestamp(),				nm_usuario_p,			cd_procedimento_w,
														cd_servico_w,				ds_servico_w,			dt_procedimento_w,
														ie_origem_proced_w,			nm_profissional_prestador_w,	cd_senha_w,
														nr_cons_prof_prest_w,			nr_lote_w,			nr_nota_w,
														nr_nota_numerico_w,			null,				r_c02_w.nr_seq_conta_mat,
														r_c02_w.nr_seq_conta_proc,		nr_seq_cobranca_rrs_p,		nr_seq_proc_partic_w,
														qt_procedimento_w,			sg_cons_prof_prest_w,		coalesce(sg_uf_cons_prest_w,sg_estado_w),
														ie_tipo_participacao_w,			ie_tipo_tabela_w,		vl_dif_vl_inter_w,
														vl_serv_cob_w,				nr_seq_material_w,		vl_pago_benef_w,
														nr_seq_item_w,				cd_item_unico_w,		ie_tipo_tabela_tiss_w,
														ie_tipo_partic_tiss_w,			cd_servico_tiss_w) returning nr_sequencia into nr_seq_nota_servico_rrs_w;
									-- Inserir o item que faz parte da nota servico
									CALL pls_gerar_ptu_nota_serv_item(	null,		 			r_c01_w.nr_seq_conta_pos_estab, 	r_c01_w.nr_seq_pos_proc,
													r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			r_c69_w.nr_seq_conta_pos_pac,
													r_c02_w.nr_seq_conta_proc, 		r_c02_w.nr_seq_conta_mat, 		nr_seq_proc_partic_w,
													r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
													vl_procedimento_w,			vl_filme_pct_w,				vl_custo_operacional_pct_w,
													vl_adic_procedimento_w,			vl_adic_filme_pct_w,			vl_adic_co_c69_w,
													qt_procedimento_w,			'1',					'3',
													nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
													r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
													r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		nr_seq_nota_servico_rrs_w);
								end if;
							end if;

						else
							-- Controle de reembolso
							if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then


								update	ptu_nota_servico
								set	vl_procedimento		= vl_procedimento + vl_procedimento_w,
									vl_custo_operacional	= vl_custo_operacional + vl_custo_operacional_pct_w,
									vl_filme		= vl_filme + vl_filme_pct_w,
									vl_adic_procedimento	= vl_adic_procedimento + vl_adic_procedimento_w,
									vl_adic_co		= vl_adic_co + vl_adic_co_c69_w,
									vl_adic_filme		= vl_adic_filme + vl_adic_filme_pct_w,
									vl_pago_prest		= vl_pago_prest + vl_liberado_w,
									qt_procedimento		= qt_procedimento + qt_procedimento_w
								where	nr_sequencia		= nr_seq_nota_servico_w;

								-- Inserir o item que faz parte da nota servico
								CALL pls_gerar_ptu_nota_serv_item(	nr_seq_nota_servico_w, 			r_c01_w.nr_seq_conta_pos_estab, 	r_c01_w.nr_seq_pos_proc,
												r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			r_c69_w.nr_seq_conta_pos_pac,
												r_c02_w.nr_seq_conta_proc,		r_c02_w.nr_seq_conta_mat,		nr_seq_proc_partic_w,
												r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
												vl_procedimento_w,			vl_filme_pct_w,				vl_custo_operacional_pct_w,
												vl_adic_procedimento_w,			vl_adic_filme_pct_w,			vl_adic_co_c69_w,
												qt_procedimento_w,			'1',					'4',
												nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
												r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
												r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		null);
							else

								-- apura o vl do reembolso
								vl_serv_cob_w 	:= 	coalesce(vl_procedimento_w,0) +
											coalesce(vl_filme_pct_w,0) +
											coalesce(vl_custo_operacional_pct_w,0) +
											coalesce(vl_adic_procedimento_w,0) +
											coalesce(vl_adic_filme_pct_w,0) +
											coalesce(vl_adic_co_c69_w,0);

								vl_dif_vl_inter_w :=	vl_serv_cob_w - coalesce(vl_reemb_benef_w,0);

								if (vl_dif_vl_inter_w <= 0) then
									vl_dif_vl_inter_w := vl_serv_cob_w;
								end if;

								update	ptu_nota_servico_rrs
								set	vl_serv_cob		= vl_serv_cob + vl_serv_cob_w,
									vl_dif_vl_inter		= vl_dif_vl_inter + vl_dif_vl_inter_w,
									qt_cobrada		= qt_cobrada + qt_procedimento_w
								where	nr_sequencia		= nr_seq_nota_servico_rrs_w;

								-- Inserir o item que faz parte da nota servico
								CALL pls_gerar_ptu_nota_serv_item(	null,		 			r_c01_w.nr_seq_conta_pos_estab, 	r_c01_w.nr_seq_pos_proc,
												r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			r_c69_w.nr_seq_conta_pos_pac,
												r_c02_w.nr_seq_conta_proc,		r_c02_w.nr_seq_conta_mat,		nr_seq_proc_partic_w,
												r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
												vl_procedimento_w,			vl_filme_pct_w,				vl_custo_operacional_pct_w,
												vl_adic_procedimento_w,			vl_adic_filme_pct_w,			vl_adic_co_c69_w,
												qt_procedimento_w,			'1',					'5',
												nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
												r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
												r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		nr_seq_nota_servico_rrs_w);

							end if;
						end if;
					end if;
				end loop;
			end if;

			-- Se for participante fazer "NVL"...
			if (ie_participante_w = 'S') and (somente_numero(cd_prestador_exec_w) = 0) and (coalesce(trim(both nm_profissional_prestador_w)::text, '') = '') then
				cd_prestador_exec_w		:= cd_prestador_w;
				nm_profissional_prestador_w	:= nm_prestador_w;
				ie_prestador_alto_custo_exec_w	:= ie_prestador_alto_custo_w;
			end if;
			
			--Se estiver marcado na regra de preco da composicao como "pacote local" consideramos o nr_seq_regra_pct_fat como "null". Esse tratamento existe pra abrir a comp do pacote na ptu_nota_servico sem impactar outros pacotes.
			if (r_c02_w.nr_seq_regra_pct_fat IS NOT NULL AND r_c02_w.nr_seq_regra_pct_fat::text <> '') then
				select	coalesce(a.ie_acordo_local_a500,'N')
				into STRICT  	ie_acordo_local_a500_w
				from   	pls_pacote_tipo_acomodacao a
				where   a.nr_sequencia    = r_c02_w.nr_seq_regra_pct_fat;
			end if;

			-- NAO E PACOTE, OU NAO TEM REGRA CADASTRADA
			if (coalesce(r_c02_w.nr_seq_pacote::text, '') = '') and ((coalesce(r_c02_w.nr_seq_regra_pct_fat::text, '') = '') or (ie_acordo_local_a500_w= 'S')) and ((coalesce(nr_seq_nota_servico_w::text, '') = '') and (coalesce(nr_seq_nota_servico_rrs_w::text, '') = '')) then

				--Conversao de item pos. Caso esse item tiver sido convertido, entao considera como pacote, pois essa conversao e utilizada para converter determinado item em um pacote.
				if (r_c02_w.nr_seq_regra_conv_item_fat IS NOT NULL AND r_c02_w.nr_seq_regra_conv_item_fat::text <> '') then

					cd_pacote_origem_w := cd_procedimento_w;
				else

					cd_pacote_origem_w := null;
				end if;

				SELECT * FROM ptu_obter_regra_pacote_ptu(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat, cd_servico_w, cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w, r_c02_w.nr_seq_pacote) INTO STRICT cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w;

				cd_pacote_origem_w	:= coalesce(cd_pacote_ptu_w, cd_pacote_origem_w);
				cd_ref_material_fab_w	:= ptu_somente_caracter_permitido(cd_ref_material_fab_w, 'ANS');

				if (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then
					cd_procedimento_w	:= null;
					ie_origem_proced_w	:= null;
				end if;


				-- Controle de reembolso
				if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

					tratar_tabela_codigo_generico(cd_servico_w, ie_tipo_tabela_w);

					ie_pacote_w := 'N';

					-- decode(cd_pacote_origem_w, null, 'N', 'S')
					if (cd_pacote_origem_w IS NOT NULL AND cd_pacote_origem_w::text <> '') then
						ie_pacote_w	:= 'S';
					end if;

					if	((coalesce(dt_autoriz_w::text, '') = '') or (dt_autoriz_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 and (ie_tipo_tabela_w = 4) then
						ie_pacote_w	:= ' ';
					end if;

					if	((coalesce(dt_autoriz_w::text, '') = '') or (dt_autoriz_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 and (ie_tipo_prestador_w = '8') then
						ie_pacote_w	:= 'N';
					end if;

					-- Pegar o tp_tabela para XML do material
					if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
						ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('M', ie_tipo_despesa_w, null, nr_seq_material_w );
					end if;

					-- Pegar o tp_tabela para XML do procedimento
					if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then
						ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('P', ie_tipo_despesa_w, ie_origem_proced_w, null );
					end if;

					select  max(pc.nr_lote_prest),
						max(pc.nr_guia_tiss_prestador)
					into STRICT 	nr_lote_prest_w,
						nr_guia_tiss_prest_w
					from 	ptu_nota_cobranca pc
					where 	pc.nr_sequencia = nr_seq_cobranca_p;

					select 	coalesce(max(ps.nr_seq_item), 0)
					into STRICT	nr_seq_item_w
					from   	ptu_nota_servico ps,
						ptu_nota_cobranca pc

					where   ps.nr_seq_nota_cobr 		= pc.nr_sequencia
					and 	pc.nr_lote_prest 		= nr_lote_prest_w
					and 	pc.nr_guia_tiss_prestador 	= nr_guia_tiss_prest_w

					and 	pc.nr_seq_fatura 		= nr_seq_fatura_w;

					select	lpad(rownum + coalesce(nr_seq_item_w,0), 4, '0') nr_seq_item
					into STRICT	nr_seq_item_w
					;

					-- Gerar o sequencial do item e o item unico. XML jtrindade
					cd_item_unico_w	:= pls_obter_id_item_unico(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat,dt_procedimento_w,pls_obter_unimed_estab(cd_estabelecimento_w),nr_seq_item_w);

					if (sg_cons_prof_req_w IS NOT NULL AND sg_cons_prof_req_w::text <> '') then
						select	coalesce(max(cd_ptu), sg_cons_prof_req_w)
						into STRICT	sg_cons_prof_req_w
						from	conselho_profissional
						where	sg_conselho = sg_cons_prof_req_w;
					end if;

					if (sg_cons_prof_prest_w IS NOT NULL AND sg_cons_prof_prest_w::text <> '') then
						select	coalesce(max(cd_ptu), sg_cons_prof_prest_w)
						into STRICT	sg_cons_prof_prest_w
						from	conselho_profissional
						where	sg_conselho = sg_cons_prof_prest_w;
					end if;

					-- Se for XML
					if (ie_versao_xml_w > 0) then

						-- Se for procedimento
						if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then

							cd_servico_aux_w		:= cd_servico_w;

							cd_servico_tiss_w		:= ptu_conversao_item_tabela(ie_tipo_tabela_w,cd_servico_w,ie_origem_proced_w);
							ie_tipo_tabela_tiss_w		:= ptu_conversao_tipo_tabela(ie_tipo_tabela_w,cd_servico_w,'E',ie_origem_proced_w);

							ie_tipo_tabela_aux_w		:= null;
							ie_tipo_tabela_tiss_aux_w	:= null;

							-- busca a conversao
							select 	max(a.cd_proc_envio),
								max(a.ie_tipo_tabela_scs),
								coalesce(max(a.ie_servico_proprio),'N')
							into STRICT 	cd_servico_aux_w,
								ie_tipo_tabela_aux_w,
								ie_servico_proprio_w
							from 	pls_conversao_proc a
							where 	trunc(dt_procedimento_w) between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
							and 	a.cd_estabelecimento	= cd_estabelecimento_w
							and 	a.cd_procedimento	= cd_servico_aux_w
							and 	a.ie_origem_proced 	= ie_origem_proced_w
							and 	coalesce(a.ie_ptu, 'N') 	= 'S'
							and 	ie_envio_receb 		= 'E'
							and 	ie_situacao 		= 'A'
							and 	(cd_proc_envio IS NOT NULL AND cd_proc_envio::text <> '')
							and 	(ie_tipo_tabela_scs IS NOT NULL AND ie_tipo_tabela_scs::text <> '')
							and	((coalesce(ie_tipo_intercambio::text, '') = '') or (ie_tipo_intercambio = 'A') or (ie_tipo_intercambio	= ie_tipo_intercambio_w))
							and	((coalesce(nr_seq_prestador_partic::text, '') = '') or (nr_seq_prestador_partic = nr_seq_prestador_partic_w))
							and	((coalesce(nr_seq_contrato::text, '') = '') or (nr_seq_contrato =  nr_seq_contrato_w))
							and	((coalesce(nr_seq_congenere::text, '') = '') or (nr_seq_congenere = nr_seq_congenere_w))
							and	((coalesce(nr_seq_grau_partic::text, '') = '') or (nr_seq_grau_partic = nr_seq_grau_partic_w))
							and	((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento = r_c02_w.nr_seq_tipo_atendimento))
							and	((coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio = nr_seq_intercambio_w))
							and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_exec_w))
							and	((coalesce(nr_seq_grupo_contrato::text, '') = '') or (	(SELECT	count(1)
														from	table(pls_grupos_pck.obter_contrato_grupo(nr_seq_grupo_contrato, nr_seq_contrato_w, nr_seq_intercambio_w))) > 0));


							-- se tiver conversao de procedimento e de tipo de tabela
							if (cd_servico_aux_w IS NOT NULL AND cd_servico_aux_w::text <> '') and (ie_tipo_tabela_aux_w IS NOT NULL AND ie_tipo_tabela_aux_w::text <> '') then

								cd_servico_w		:= cd_servico_aux_w;
								cd_servico_tiss_w	:= cd_servico_aux_w;

								-- muda para o padrao TISS
								select  case ie_tipo_tabela_aux_w
									when 0 then '22'
									when 1 then '18'
									when 2 then '00'
									when 3 then '00'
									when 4 then '98'
									when 5 then '19'
									when 6 then '20'
									end
								into STRICT  	ie_tipo_tabela_tiss_aux_w
								;

								ie_tipo_tabela_tiss_w	:= ie_tipo_tabela_tiss_aux_w;
								
								if ie_servico_proprio_w = 'S' then
									ie_tipo_tabela_tiss_w := '00';
									cd_servico_tiss_w := ie_tipo_tabela_tiss_aux_w || lpad(cd_servico_aux_w,8,'0');
								end if;
							end if;
						end if;

						-- Se for material
						if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then

							if (ie_mat_a900_w = 'S' and (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '')) then
								-- Pegar a codificacao do material
								select  coalesce(max(b.ie_codificacao),1),
									max(b.tp_tabela_tiss)
								into STRICT  	ie_codificacao_mat_w,
									ie_tipo_tabela_tiss_w
								from 	pls_material_unimed b
								where 	b.nr_sequencia  = nr_seq_mat_unimed_w;
							else
							-- Pegar a codificacao do material
								select  coalesce(max(b.ie_codificacao),1)
								into STRICT  	ie_codificacao_mat_w
								from  	pls_material  a,
									pls_material_unimed b
								where 	b.nr_sequencia  = a.nr_seq_material_unimed
								and 	a.nr_sequencia  = nr_seq_material_w;
							end if;
							
							-- se tiver conversao no pos-estabelecido
							if (r_c02_w.cd_item_convertido IS NOT NULL AND r_c02_w.cd_item_convertido::text <> '') then
							
								select	coalesce(max(b.ie_codificacao),1),
									max(b.tp_tabela_tiss)
								into STRICT  	ie_codificacao_mat_w,
									ie_tipo_tabela_tiss_w
								from 	pls_material_unimed b
								where	b.cd_material = r_c02_w.cd_item_convertido;
								
								cd_servico_w	:= r_c02_w.cd_item_convertido;
							
							end if;
							
							-- se for TNUMM
							if (ie_codificacao_mat_w = 1 ) then

								if ie_tipo_tabela_w in (2,5) then
									ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
								elsif ie_tipo_tabela_w in (3,6) then
									ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
								elsif ie_tipo_tabela_w = 1 then
									ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
								else
									ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
								end if;

								cd_servico_tiss_w := ie_tipo_tabela_tiss_w || lpad(cd_servico_w,8,'0');
								ie_tipo_tabela_tiss_w := '00';
								
								ie_tipo_tabela_mat_aux_w 	:= null;
								cd_mat_envio_aux_w		:= null;
								ds_mat_envio_aux_w		:= null;
								
								select 	max(pcm.ie_tipo_tabela),
									max(pcm.cd_material_envio),
									max(pcm.ds_material_envio)
								into STRICT	ie_tipo_tabela_mat_aux_w,
									cd_mat_envio_aux_w,
									ds_mat_envio_aux_w
								from 	pls_conversao_mat pcm
								where 	trunc(dt_procedimento_w) 	between pcm.dt_inicio_vigencia and coalesce(pcm.dt_fim_vigencia,clock_timestamp())
								and (cd_servico_w >= pcm.cd_material_orig_inicial	or coalesce(pcm.cd_material_orig_inicial::text, '') = '')
								and (cd_servico_w <= pcm.cd_material_orig_final	or coalesce(pcm.cd_material_orig_final::text, '') = '')
								and 	((pcm.ie_tipo_despesa_mat 	= ie_tipo_despesa_mat_w) or (coalesce(pcm.ie_tipo_despesa_mat::text, '') = ''))
								and  	((coalesce(pcm.nr_seq_contrato::text, '') = '') or (pcm.nr_seq_contrato 	=  nr_seq_contrato_w))
								and  	((coalesce(pcm.nr_seq_ops_congenere::text, '') = '') or (pcm.nr_seq_ops_congenere 	= nr_seq_congenere_w))
								and 	pcm.ie_envio_receb 	= 'E';
								
								-- se houver alguma conversao 
								if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') or (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') ( (ds_mat_envio_aux_w) IS NOT NULL AND (ds_mat_envio_aux_w)::text <> '') then
									
									--- se o tipo de tabela foi convertido
									if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') then
										if 	ie_tipo_tabela_mat_aux_w in (2,5) then
											ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
										
										elsif 	ie_tipo_tabela_mat_aux_w in (3,6) then
											ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
										
										elsif 	ie_tipo_tabela_mat_aux_w = 4 then
											ie_tipo_tabela_tiss_w	:= '98'; -- Pcaotes
										
										elsif 	ie_tipo_tabela_mat_aux_w = 1 then
											ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
										
										elsif 	ie_tipo_tabela_mat_aux_w = 0 then
											ie_tipo_tabela_tiss_w	:= '22'; -- Rol de procedimentos Unimed
										
										else
											ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
										end if;								
										
										cd_servico_tiss_w := lpad(cd_servico_w,8,'0');
										
									end if;
									-- se o material de envio for convertido
									if (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') then
										cd_servico_tiss_w := lpad(cd_mat_envio_aux_w,8,'0');
									end if;
									
									-- se a descricao do material for convertido
									if (ds_mat_envio_aux_w IS NOT NULL AND ds_mat_envio_aux_w::text <> '') then
										ds_servico_w := trim(both substr(ds_mat_envio_aux_w,1,80));
									end if;
								end if;
							else
								cd_servico_tiss_w := cd_servico_w;

							end if;
						end if;
					end if;

					ie_abrir_itens_interc_w := null;

					-- se a regra de composicao estiver informado para nao indicar o item como sendo de pacote
					select 	coalesce(max(a.ie_abrir_itens_intercambio),'S')
					into STRICT 	ie_abrir_itens_interc_w
					from 	pls_pacote_tipo_acomodacao a
					where 	nr_sequencia = r_c02_w.nr_seq_regra_pct_fat;

					if 	ie_abrir_itens_interc_w = 'N' then
						if 	ie_pacote_w = 'S' then
							ie_pacote_w := 'N';
						end if;
					end if;

					insert into ptu_nota_servico(	nr_sequencia,							dt_atualizacao,					nm_usuario,
									dt_atualizacao_nrec,						nm_usuario_nrec,				nr_seq_nota_cobr,
									nr_lote,							cd_unimed_prestador,				cd_prestador,
									ie_tipo_participacao,						dt_procedimento,				nm_prestador,
									cd_procedimento,						ie_origem_proced,				qt_procedimento,
									ie_tipo_prestador,						ie_rede_propria,				ie_tipo_pessoa_prestador,
									nr_cgc_cpf,							tx_procedimento,				ie_pacote,
									cd_ato,								ie_tipo_tabela,					nr_cgc_cpf_req,
									nm_prestador_requisitante,					sg_cons_prof_req,				nr_cons_prof_req,
									sg_uf_cons_req,							ie_reembolso,					nr_autorizacao,
									nr_nota,							vl_procedimento,				vl_custo_operacional,
									vl_filme,							cd_porte_anestesico,				cd_unimed_autorizadora,
									cd_unimed_pre_req,						cd_prestador_req,				ie_via_acesso,
									vl_adic_procedimento,						vl_adic_co,					vl_adic_filme,
									cd_especialidade,						nr_seq_nota,					ds_hora_procedimento,
									cd_cnes_prest,							nm_profissional_prestador,			sg_cons_prof_prest,
									nr_cons_prof_prest,						sg_uf_cons_prest,				vl_pago_prest,
									nr_seq_material,						cd_servico,					ds_servico,
									nr_seq_conta_proc,						nr_seq_conta_mat,				nr_seq_pacote_agrup,
									hr_final,							nr_cbo_exec,					id_acres_urg_emer,
									tec_utilizada,							dt_autoriz,					dt_solicitacao,
									nr_reg_anvisa,							cd_ref_material_fab,				cd_munic,
									dt_pgto_prestador,						unidade_medida,					tp_autoriz,
									ie_tipo_data_regra,						nr_seq_pacote,					ie_alto_custo,
									cd_pacote,							cd_rec_prestador,				nr_cnpj_fornecedor,
									id_pag_forn,							nm_fornecedor,					det_reg_anvisa,
									cd_ref_material_fab_opme,					nr_seq_agrup_item_ptu,				nr_nota_fiscal_forn,
									tipo_rede_min,							id_aviso_item,					nr_seq_aviso_procedimento,
									nr_seq_aviso_material,						nr_seq_item,					cd_item_unico,
									ie_tipo_tabela_tiss,						ie_tipo_participacao_tiss,			cd_servico_tiss)
							values (	nextval('ptu_nota_servico_seq'), 					clock_timestamp(), 					nm_usuario_p,
									clock_timestamp(),							nm_usuario_p,					nr_seq_cobranca_p,
									nr_lote_w,							cd_unim_prestador_w,				CASE WHEN ie_participante_w='S' THEN  cd_prestador_exec_w  ELSE cd_prestador_w END ,
									coalesce(ie_tipo_participacao_w, '0'),				dt_procedimento_w,				CASE WHEN ie_participante_w='S' THEN  coalesce(nm_profissional_prestador_w,nm_prestador_w)  ELSE nm_prestador_w END ,
									cd_procedimento_w,						ie_origem_proced_w,				qt_procedimento_w,
									ie_tipo_prestador_w,						ie_rede_propria_w,				ie_tipo_pessoa_pres_w,
									nr_cnpj_cpf_w,							tx_fat_mult_serv_w,				ie_pacote_w,
									coalesce(ie_ato_cooperado_w, '1'),					ie_tipo_tabela_w, 				nr_cgc_cpf_req_w,
									nm_prestador_req_w,						sg_cons_prof_req_w,				nr_cons_prof_req_w,
									sg_uf_cons_req_w,						r_c02_w.ie_reembolso,				coalesce(cd_senha_w,0),
									nr_nota_w,							vl_procedimento_w,				vl_custo_operacional_w,
									vl_filme_w,							cd_porte_anest_w,				cd_cooperativa_w,
									cd_unimed_pre_req_w,						cd_prestador_req_w,				r_c02_w.ie_via_acesso,
									vl_adic_procedimento_w,						vl_adic_custo_operacional_w,			vl_adic_filme_w,
									cd_especialidade_w,						r_c02_w.nr_seq_conta,				coalesce(hr_inicio_a500_w, hr_inicio_w),
									cd_cnes_w,							nm_profissional_prestador_w,			sg_cons_prof_prest_w,
									nr_cons_prof_prest_w,						sg_uf_cons_prest_w,				vl_liberado_w,
									nr_seq_material_w,						cd_servico_w,					ds_servico_w,
									r_c02_w.nr_seq_conta_proc,					r_c02_w.nr_seq_conta_mat,			nr_seq_regra_agrup_w,
									coalesce(hr_final_a500_w, hr_fim_w), 				coalesce(cd_cbo_w, '000000'),			r_c02_w.ie_acres_urg_emer,
									ie_tec_utilizada_w,						dt_autoriz_w,					dt_solicitacao_w,
									substr(nr_registro_anvisa_w, 1, 15), 				cd_ref_material_fab_w, 				cd_municipio_w,
									dt_competencia_pgto_w, 						substr(nr_uni_medida_ptu_w, 1, 3),		tp_autoriz_w,
									ie_tipo_data_w, 						r_c02_w.nr_seq_pacote,				CASE WHEN ie_participante_w='S' THEN  ie_prestador_alto_custo_exec_w  ELSE ie_prestador_alto_custo_w END ,
									CASE WHEN coalesce(ie_pacote_w,'N')='S' THEN cd_pacote_origem_w  ELSE null END ,	cd_rec_prestador_w,				nr_cnpj_fornecedor_w,
									id_pag_forn_w, 							coalesce(nm_fornecedor_opme_w, nm_fornecedor_w), 	coalesce(det_reg_anvisa_opme_w, det_reg_anvisa_w),
									cd_ref_material_fab_opme_w,	 				nr_seq_regra_agrup_ptu_w,			coalesce(r_c02_w.nr_nota_fiscal_forn_opme, nr_nota_fiscal_forn_w),
									coalesce(tipo_rede_min_w, 1),					id_aviso_item_w,				nr_seq_aviso_procedimento_w,
									nr_seq_aviso_material_w,					nr_seq_item_w,					cd_item_unico_w,
									ie_tipo_tabela_tiss_w,						ie_tipo_partic_tiss_w,				cd_servico_tiss_w) returning nr_sequencia into nr_seq_nota_servico_w;

					-- Inserir o item que faz parte da nota servico
					CALL pls_gerar_ptu_nota_serv_item(	nr_seq_nota_servico_w, 			r_c01_w.nr_seq_conta_pos_estab, 	r_c01_w.nr_seq_pos_proc,
									r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			null,
									r_c02_w.nr_seq_conta_proc, 		r_c02_w.nr_seq_conta_mat,		nr_seq_proc_partic_w,
									r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
									vl_procedimento_w,			vl_filme_w,				vl_custo_operacional_w,
									vl_adic_procedimento_w,			vl_adic_filme_w,			vl_adic_custo_operacional_w,
									qt_procedimento_w,			'1', 					'6',
									nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
									r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
									r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		null);
				else

					-- apura o vl do reembolso
					vl_serv_cob_w 	:= 	coalesce(vl_procedimento_w,0) +
								coalesce(vl_filme_w,0) +
								coalesce(vl_custo_operacional_w,0) +
								coalesce(vl_adic_procedimento_w,0) +
								coalesce(vl_adic_filme_w,0) +
								coalesce(vl_adic_custo_operacional_w,0);

					vl_dif_vl_inter_w :=	vl_serv_cob_w - coalesce(vl_reemb_benef_w,0);

					if (vl_dif_vl_inter_w <= 0) then
						vl_dif_vl_inter_w := vl_serv_cob_w;
					end if;

					-- Pegar o tp_tabela para XML do material
					if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
						ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('M', ie_tipo_despesa_w, null, nr_seq_material_w );
					end if;

					-- Pegar o tp_tabela para XML do procedimento
					if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then
						ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('P', ie_tipo_despesa_w, ie_origem_proced_w, null );
					end if;

					select  coalesce(max(ps.nr_seq_item),0)
					into STRICT	nr_seq_item_w
					from	ptu_nota_servico_rrs	ps,
						ptu_nota_cobranca_rrs	pc,
						ptu_fatura		pf
					where	ps.nr_seq_nota_cobr_rrs	= pc.nr_sequencia
					and	pf.nr_sequencia    	= pc.nr_seq_fatura
					and	pf.nr_sequencia    	= nr_seq_fatura_w;

					select	lpad(rownum + coalesce(nr_seq_item_w,0), 4, '0') nr_seq_item
					into STRICT	nr_seq_item_w
					;

					-- Gerar o sequencial do item e o item unico. XML jtrindade
					cd_item_unico_w	:= pls_obter_id_item_unico(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat,dt_procedimento_w,pls_obter_unimed_estab(cd_estabelecimento_w),nr_seq_item_w);

					if (sg_cons_prof_prest_w IS NOT NULL AND sg_cons_prof_prest_w::text <> '') then
						select	coalesce(max(cd_ptu), sg_cons_prof_prest_w)
						into STRICT	sg_cons_prof_prest_w
						from	conselho_profissional
						where	sg_conselho = sg_cons_prof_prest_w;
					end if;

					-- Se for XML
					if (ie_versao_xml_w > 0) then

						-- Se for procedimento
						if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then

							cd_servico_aux_w		:= cd_servico_w;

							cd_servico_tiss_w		:= ptu_conversao_item_tabela(ie_tipo_tabela_w,cd_servico_w,ie_origem_proced_w);
							ie_tipo_tabela_tiss_w		:= ptu_conversao_tipo_tabela(ie_tipo_tabela_w,cd_servico_w,'E',ie_origem_proced_w);

							ie_tipo_tabela_aux_w		:= null;
							ie_tipo_tabela_tiss_aux_w	:= null;

							-- busca a conversao
							select 	max(a.cd_proc_envio),
								max(a.ie_tipo_tabela_scs),
								coalesce(max(a.ie_servico_proprio),'N')
							into STRICT 	cd_servico_aux_w,
								ie_tipo_tabela_aux_w,
								ie_servico_proprio_w
							from 	pls_conversao_proc a
							where 	trunc(dt_procedimento_w) between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
							and 	a.cd_estabelecimento	= cd_estabelecimento_w
							and 	a.cd_procedimento	= cd_servico_aux_w
							and 	a.ie_origem_proced 	= ie_origem_proced_w
							and 	coalesce(a.ie_ptu, 'N') 	= 'S'
							and 	ie_envio_receb 		= 'E'
							and 	ie_situacao 		= 'A'
							and 	(cd_proc_envio IS NOT NULL AND cd_proc_envio::text <> '')
							and 	(ie_tipo_tabela_scs IS NOT NULL AND ie_tipo_tabela_scs::text <> '')
							and	((coalesce(ie_tipo_intercambio::text, '') = '') or (ie_tipo_intercambio = 'A') or (ie_tipo_intercambio	= ie_tipo_intercambio_w))
							and	((coalesce(nr_seq_prestador_partic::text, '') = '') or (nr_seq_prestador_partic = nr_seq_prestador_partic_w))
							and	((coalesce(nr_seq_contrato::text, '') = '') or (nr_seq_contrato =  nr_seq_contrato_w))
							and	((coalesce(nr_seq_congenere::text, '') = '') or (nr_seq_congenere = nr_seq_congenere_w))
							and	((coalesce(nr_seq_grau_partic::text, '') = '') or (nr_seq_grau_partic = nr_seq_grau_partic_w))
							and	((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento = r_c02_w.nr_seq_tipo_atendimento))
							and	((coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio = nr_seq_intercambio_w))
							and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_exec_w))
							and	((coalesce(nr_seq_grupo_contrato::text, '') = '') or (	(SELECT	count(1)
														from	table(pls_grupos_pck.obter_contrato_grupo(nr_seq_grupo_contrato, nr_seq_contrato_w, nr_seq_intercambio_w))) > 0));


							-- se tiver conversao de procedimento e de tipo de tabela
							if (cd_servico_aux_w IS NOT NULL AND cd_servico_aux_w::text <> '') and (ie_tipo_tabela_aux_w IS NOT NULL AND ie_tipo_tabela_aux_w::text <> '') then

								cd_servico_w		:= cd_servico_aux_w;
								cd_servico_tiss_w	:= cd_servico_aux_w;

								-- muda para o padrao TISS
								select  case ie_tipo_tabela_aux_w
									when 0 then '22'
									when 1 then '18'
									when 2 then '00'
									when 3 then '00'
									when 4 then '98'
									when 5 then '19'
									when 6 then '20'
									end
								into STRICT  	ie_tipo_tabela_tiss_aux_w
								;

								ie_tipo_tabela_tiss_w	:= ie_tipo_tabela_tiss_aux_w;
								
								if ie_servico_proprio_w = 'S' then
									ie_tipo_tabela_tiss_w := '00';
									cd_servico_tiss_w := ie_tipo_tabela_tiss_aux_w || lpad(cd_servico_aux_w,8,'0');
								end if;
							end if;
						end if;

						-- Se for material
						if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then

							if (ie_mat_a900_w = 'S' and (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '')) then
								-- Pegar a codificacao do material
								select  coalesce(max(b.ie_codificacao),1),
									max(b.tp_tabela_tiss)
								into STRICT  	ie_codificacao_mat_w,
									ie_tipo_tabela_tiss_w
								from 	pls_material_unimed b
								where 	b.nr_sequencia  = nr_seq_mat_unimed_w;
							else
							-- Pegar a codificacao do material
								select  coalesce(max(b.ie_codificacao),1)
								into STRICT  	ie_codificacao_mat_w
								from  	pls_material  a,
									pls_material_unimed b
								where 	b.nr_sequencia  = a.nr_seq_material_unimed
								and 	a.nr_sequencia  = nr_seq_material_w;
							end if;
							
							-- se tiver conversao no pos-estabelecido
							if (r_c02_w.cd_item_convertido IS NOT NULL AND r_c02_w.cd_item_convertido::text <> '') then
							
								select	coalesce(max(b.ie_codificacao),1),
									max(b.tp_tabela_tiss)
								into STRICT  	ie_codificacao_mat_w,
									ie_tipo_tabela_tiss_w
								from 	pls_material_unimed b
								where	b.cd_material = r_c02_w.cd_item_convertido;
								
								cd_servico_w	:= r_c02_w.cd_item_convertido;
							
							end if;
							
							-- se for TNUMM
							if (ie_codificacao_mat_w = 1 ) then

								if ie_tipo_tabela_w in (2,5) then
									ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
								elsif ie_tipo_tabela_w in (3,6) then
									ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
								elsif ie_tipo_tabela_w = 1 then
									ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
								else
									ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
								end if;

								cd_servico_tiss_w := ie_tipo_tabela_tiss_w || lpad(cd_servico_w,8,'0');
								ie_tipo_tabela_tiss_w := '00';
								
								ie_tipo_tabela_mat_aux_w 	:= null;
								cd_mat_envio_aux_w		:= null;
								ds_mat_envio_aux_w		:= null;
								
								select 	max(pcm.ie_tipo_tabela),
									max(pcm.cd_material_envio),
									max(pcm.ds_material_envio)
								into STRICT	ie_tipo_tabela_mat_aux_w,
									cd_mat_envio_aux_w,
									ds_mat_envio_aux_w
								from 	pls_conversao_mat pcm
								where 	trunc(dt_procedimento_w) 	between pcm.dt_inicio_vigencia and coalesce(pcm.dt_fim_vigencia,clock_timestamp())
								and (cd_servico_w >= pcm.cd_material_orig_inicial	or coalesce(pcm.cd_material_orig_inicial::text, '') = '')
								and (cd_servico_w <= pcm.cd_material_orig_final	or coalesce(pcm.cd_material_orig_final::text, '') = '')
								and 	((pcm.ie_tipo_despesa_mat 	= ie_tipo_despesa_mat_w) or (coalesce(pcm.ie_tipo_despesa_mat::text, '') = ''))
								and  	((coalesce(pcm.nr_seq_contrato::text, '') = '') or (pcm.nr_seq_contrato 	=  nr_seq_contrato_w))
								and  	((coalesce(pcm.nr_seq_ops_congenere::text, '') = '') or (pcm.nr_seq_ops_congenere 	= nr_seq_congenere_w))
								and 	pcm.ie_envio_receb 	= 'E';
								
								-- se houver alguma conversao 
								if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') or (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') ( (ds_mat_envio_aux_w) IS NOT NULL AND (ds_mat_envio_aux_w)::text <> '') then
									
									--- se o tipo de tabela foi convertido
									if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') then
										if 	ie_tipo_tabela_mat_aux_w in (2,5) then
											ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
										
										elsif 	ie_tipo_tabela_mat_aux_w in (3,6) then
											ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
										
										elsif 	ie_tipo_tabela_mat_aux_w = 4 then
											ie_tipo_tabela_tiss_w	:= '98'; -- Pcaotes
										
										elsif 	ie_tipo_tabela_mat_aux_w = 1 then
											ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
										
										elsif 	ie_tipo_tabela_mat_aux_w = 0 then
											ie_tipo_tabela_tiss_w	:= '22'; -- Rol de procedimentos Unimed
										
										else
											ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
										end if;								
										
										cd_servico_tiss_w := lpad(cd_servico_w,8,'0');
										
									end if;
									-- se o material de envio for convertido
									if (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') then
										cd_servico_tiss_w := lpad(cd_mat_envio_aux_w,8,'0');
									end if;
									
									-- se a descricao do material for convertido
									if (ds_mat_envio_aux_w IS NOT NULL AND ds_mat_envio_aux_w::text <> '') then
										ds_servico_w := trim(both substr(ds_mat_envio_aux_w,1,80));
									end if;

								end if;								
								
							else
								cd_servico_tiss_w := cd_servico_w;

							end if;
						end if;
					end if;

					insert into	ptu_nota_servico_rrs(	nr_sequencia,				dt_atualizacao_nrec,		nm_usuario_nrec,
										dt_atualizacao,				nm_usuario,			cd_procedimento,
										cd_servico,				ds_servico,			dt_servico,
										ie_origem_proced,			nm_profissional,		nr_autoriz,
										nr_cons_prof,				nr_lote,			nr_nota,
										nr_nota_numerico,			nr_seq_a500,			nr_seq_conta_mat,
										nr_seq_conta_proc,			nr_seq_nota_cobr_rrs,		nr_seq_proc_partic,
										qt_cobrada,				sg_cons_prof,			sg_uf_cons_prof,
										tp_particip,				tp_tabela,			vl_dif_vl_inter,
										vl_serv_cob,				nr_seq_material,		vl_pago_benef,
										nr_seq_item,				cd_item_unico,			ie_tipo_tabela_tiss,
										ie_tipo_participacao_tiss,		cd_servico_tiss)
					values (				nextval('ptu_nota_servico_rrs_seq'),	clock_timestamp(),			nm_usuario_p,
										clock_timestamp(),				nm_usuario_p,			cd_procedimento_w,
										cd_servico_w,				ds_servico_w,			dt_procedimento_w,
										ie_origem_proced_w,			nm_profissional_prestador_w,	cd_senha_w,
										nr_cons_prof_prest_w,			nr_lote_w,			nr_nota_w,
										nr_nota_numerico_w,			null,				r_c02_w.nr_seq_conta_mat,
										r_c02_w.nr_seq_conta_proc,		nr_seq_cobranca_rrs_p,		nr_seq_proc_partic_w,
										qt_procedimento_w,			sg_cons_prof_prest_w,		coalesce(sg_uf_cons_prest_w,sg_estado_w),
										ie_tipo_participacao_w,			ie_tipo_tabela_w,		vl_dif_vl_inter_w,
										vl_serv_cob_w,				nr_seq_material_w,		vl_pago_benef_w,
										nr_seq_item_w,				cd_item_unico_w,		ie_tipo_tabela_tiss_w,
										ie_tipo_partic_tiss_w,			cd_servico_tiss_w) returning nr_sequencia into nr_seq_nota_servico_rrs_w;

					-- Inserir o item que faz parte da nota servico
					CALL pls_gerar_ptu_nota_serv_item(	null,		 			r_c01_w.nr_seq_conta_pos_estab, 	r_c01_w.nr_seq_pos_proc,
									r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			null,
									r_c02_w.nr_seq_conta_proc, 		r_c02_w.nr_seq_conta_mat, 		nr_seq_proc_partic_w,
									r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
									vl_procedimento_w,			vl_filme_w,				vl_custo_operacional_w,
									vl_adic_procedimento_w,			vl_adic_filme_w,			vl_adic_custo_operacional_w,
									qt_procedimento_w,			'1',					'7',
									nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
									r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
									r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		nr_seq_nota_servico_rrs_w);

				end if; -- Fim controle reembolso
			end if;

			-- X = Custo Operacional do Raio X (sem HM) - Quando tem participante e valores de Filme/CO, tem que gerar um registro a mais
			if (ie_participante_w = 'S') then

				-- Controle de reembolso
				if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

					select	max(x.nr_sequencia)
					into STRICT	nr_seq_nota_servico_w
					from	ptu_nota_servico x
					where	x.cd_servico		= cd_servico_w
					and	x.nr_nota		= nr_nota_w
					and	x.nr_seq_nota_cobr	= nr_seq_cobranca_p
					and	x.ie_tipo_participacao	= 'X'
					and	x.dt_procedimento	= dt_procedimento_w
					and	x.tx_procedimento	= tx_fat_mult_serv_w
					and	((x.ie_via_acesso	= r_c02_w.ie_via_acesso) or (coalesce(coalesce(x.ie_via_acesso, r_c02_w.ie_via_acesso)::text, '') = ''));

					if (coalesce(nr_seq_nota_servico_w::text, '') = '') then

						SELECT * FROM ptu_obter_regra_pacote_ptu(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat, cd_servico_w, cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w, r_c02_w.nr_seq_pacote) INTO STRICT cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w;

						cd_serv_pacote_w	:= coalesce(cd_pacote_ptu_w, cd_serv_pacote_w);
						cd_ref_material_fab_w	:= ptu_somente_caracter_permitido(cd_ref_material_fab_w, 'ANS');

						tratar_tabela_codigo_generico(cd_servico_w, ie_tipo_tabela_w);

						ie_pacote_w := 'N';

						-- decode(cd_serv_pacote_w, null, 'N', 'S')
						if (cd_serv_pacote_w IS NOT NULL AND cd_serv_pacote_w::text <> '') then
							ie_pacote_w	:= 'S';
						end if;

						if	((coalesce(dt_autoriz_w::text, '') = '') or (dt_autoriz_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 and (ie_tipo_tabela_w = 4) then
							ie_pacote_w	:= ' ';
						end if;

						if	((coalesce(dt_autoriz_w::text, '') = '') or (dt_autoriz_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 and (ie_tipo_prestador_w = '8') then
							ie_pacote_w	:= 'N';
						end if;

						-- Pegar o tp_tabela para XML do material
						if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
							ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('M', ie_tipo_despesa_w, null, nr_seq_material_w );
						end if;

						-- Pegar o tp_tabela para XML do procedimento
						if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then
							ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('P', ie_tipo_despesa_w, ie_origem_proced_w, null );
						end if;

						select  max(pc.nr_lote_prest),
							max(pc.nr_guia_tiss_prestador)
						into STRICT 	nr_lote_prest_w,
							nr_guia_tiss_prest_w
						from 	ptu_nota_cobranca pc
						where 	pc.nr_sequencia = nr_seq_cobranca_p;

						select 	coalesce(max(ps.nr_seq_item), 0)
						into STRICT	nr_seq_item_w
						from   	ptu_nota_servico ps,
							ptu_nota_cobranca pc

						where   ps.nr_seq_nota_cobr 		= pc.nr_sequencia
						and 	pc.nr_lote_prest 		= nr_lote_prest_w
						and 	pc.nr_guia_tiss_prestador 	= nr_guia_tiss_prest_w

						and 	pc.nr_seq_fatura 		= nr_seq_fatura_w;

						select	lpad(rownum + coalesce(nr_seq_item_w,0), 4, '0') nr_seq_item
						into STRICT	nr_seq_item_w
						;

						-- Gerar o sequencial do item e o item unico. XML jtrindade
						cd_item_unico_w	:= pls_obter_id_item_unico(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat,dt_procedimento_w,pls_obter_unimed_estab(cd_estabelecimento_w),nr_seq_item_w);

						if (sg_cons_prof_req_w IS NOT NULL AND sg_cons_prof_req_w::text <> '') then
							select	coalesce(max(cd_ptu), sg_cons_prof_req_w)
							into STRICT	sg_cons_prof_req_w
							from	conselho_profissional
							where	sg_conselho = sg_cons_prof_req_w;
						end if;

						if (sg_cons_prof_prest_w IS NOT NULL AND sg_cons_prof_prest_w::text <> '') then
							select	coalesce(max(cd_ptu), sg_cons_prof_prest_w)
							into STRICT	sg_cons_prof_prest_w
							from	conselho_profissional
							where	sg_conselho = sg_cons_prof_prest_w;
						end if;

						-- Se for XML
						if (ie_versao_xml_w > 0) then

							-- Se for procedimento
							if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then

								cd_servico_aux_w		:= cd_servico_w;

								cd_servico_tiss_w		:= ptu_conversao_item_tabela(ie_tipo_tabela_w,cd_servico_w,ie_origem_proced_w);
								ie_tipo_tabela_tiss_w		:= ptu_conversao_tipo_tabela(ie_tipo_tabela_w,cd_servico_w,'E',ie_origem_proced_w);

								ie_tipo_tabela_aux_w		:= null;
								ie_tipo_tabela_tiss_aux_w	:= null;

								-- busca a conversao
								select 	max(a.cd_proc_envio),
									max(a.ie_tipo_tabela_scs),
									coalesce(max(a.ie_servico_proprio),'N')
								into STRICT 	cd_servico_aux_w,
									ie_tipo_tabela_aux_w,
									ie_servico_proprio_w
								from 	pls_conversao_proc a
								where 	trunc(dt_procedimento_w) between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
								and 	a.cd_estabelecimento	= cd_estabelecimento_w
								and 	a.cd_procedimento	= cd_servico_aux_w
								and 	a.ie_origem_proced 	= ie_origem_proced_w
								and 	coalesce(a.ie_ptu, 'N') 	= 'S'
								and 	ie_envio_receb 		= 'E'
								and 	ie_situacao 		= 'A'
								and 	(cd_proc_envio IS NOT NULL AND cd_proc_envio::text <> '')
								and 	(ie_tipo_tabela_scs IS NOT NULL AND ie_tipo_tabela_scs::text <> '')
								and	((coalesce(ie_tipo_intercambio::text, '') = '') or (ie_tipo_intercambio = 'A') or (ie_tipo_intercambio	= ie_tipo_intercambio_w))
								and	((coalesce(nr_seq_prestador_partic::text, '') = '') or (nr_seq_prestador_partic = nr_seq_prestador_partic_w))
								and	((coalesce(nr_seq_contrato::text, '') = '') or (nr_seq_contrato =  nr_seq_contrato_w))
								and	((coalesce(nr_seq_congenere::text, '') = '') or (nr_seq_congenere = nr_seq_congenere_w))
								and	((coalesce(nr_seq_grau_partic::text, '') = '') or (nr_seq_grau_partic = nr_seq_grau_partic_w))
								and	((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento = r_c02_w.nr_seq_tipo_atendimento))
								and	((coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio = nr_seq_intercambio_w))
								and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_exec_w))
								and	((coalesce(nr_seq_grupo_contrato::text, '') = '') or (	(SELECT	count(1)
															from	table(pls_grupos_pck.obter_contrato_grupo(nr_seq_grupo_contrato, nr_seq_contrato_w, nr_seq_intercambio_w))) > 0));


								-- se tiver conversao de procedimento e de tipo de tabela
								if (cd_servico_aux_w IS NOT NULL AND cd_servico_aux_w::text <> '') and (ie_tipo_tabela_aux_w IS NOT NULL AND ie_tipo_tabela_aux_w::text <> '') then

									cd_servico_w		:= cd_servico_aux_w;
									cd_servico_tiss_w	:= cd_servico_aux_w;

									-- muda para o padrao TISS
									select  case ie_tipo_tabela_aux_w
										when 0 then '22'
										when 1 then '18'
										when 2 then '00'
										when 3 then '00'
										when 4 then '98'
										when 5 then '19'
										when 6 then '20'
										end
									into STRICT  	ie_tipo_tabela_tiss_aux_w
									;

									ie_tipo_tabela_tiss_w	:= ie_tipo_tabela_tiss_aux_w;
									
									if ie_servico_proprio_w = 'S' then
										ie_tipo_tabela_tiss_w := '00';
										cd_servico_tiss_w := ie_tipo_tabela_tiss_aux_w || lpad(cd_servico_aux_w,8,'0');
									end if;
								end if;
							end if;

							-- Se for material
							if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then

								if (ie_mat_a900_w = 'S' and (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '')) then
									-- Pegar a codificacao do material
									select  coalesce(max(b.ie_codificacao),1),
										max(b.tp_tabela_tiss)
									into STRICT  	ie_codificacao_mat_w,
										ie_tipo_tabela_tiss_w
									from 	pls_material_unimed b
									where 	b.nr_sequencia  = nr_seq_mat_unimed_w;
								else
								-- Pegar a codificacao do material
									select  coalesce(max(b.ie_codificacao),1)
									into STRICT  	ie_codificacao_mat_w
									from  	pls_material  a,
										pls_material_unimed b
									where 	b.nr_sequencia  = a.nr_seq_material_unimed
									and 	a.nr_sequencia  = nr_seq_material_w;
								end if;
							
								-- se tiver conversao no pos-estabelecido
								if (r_c02_w.cd_item_convertido IS NOT NULL AND r_c02_w.cd_item_convertido::text <> '') then
								
									select	coalesce(max(b.ie_codificacao),1),
										max(b.tp_tabela_tiss)
									into STRICT  	ie_codificacao_mat_w,
										ie_tipo_tabela_tiss_w
									from 	pls_material_unimed b
									where	b.cd_material = r_c02_w.cd_item_convertido;
									
									cd_servico_w	:= r_c02_w.cd_item_convertido;
								
								end if;
								
								-- se for TNUMM
								if (ie_codificacao_mat_w = 1 ) then

									if ie_tipo_tabela_w in (2,5) then
										ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
									elsif ie_tipo_tabela_w in (3,6) then
										ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
									elsif ie_tipo_tabela_w = 1 then
										ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
									else
										ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
									end if;

									cd_servico_tiss_w := ie_tipo_tabela_tiss_w || lpad(cd_servico_w,8,'0');
									ie_tipo_tabela_tiss_w := '00';
									
									ie_tipo_tabela_mat_aux_w 	:= null;
									cd_mat_envio_aux_w		:= null;
									ds_mat_envio_aux_w		:= null;
									
									select 	max(pcm.ie_tipo_tabela),
										max(pcm.cd_material_envio),
										max(pcm.ds_material_envio)
									into STRICT	ie_tipo_tabela_mat_aux_w,
										cd_mat_envio_aux_w,
										ds_mat_envio_aux_w
									from 	pls_conversao_mat pcm
									where 	trunc(dt_procedimento_w) 	between pcm.dt_inicio_vigencia and coalesce(pcm.dt_fim_vigencia,clock_timestamp())
									and (cd_servico_w >= pcm.cd_material_orig_inicial	or coalesce(pcm.cd_material_orig_inicial::text, '') = '')
									and (cd_servico_w <= pcm.cd_material_orig_final	or coalesce(pcm.cd_material_orig_final::text, '') = '')
									and 	((pcm.ie_tipo_despesa_mat 	= ie_tipo_despesa_mat_w) or (coalesce(pcm.ie_tipo_despesa_mat::text, '') = ''))
									and  	((coalesce(pcm.nr_seq_contrato::text, '') = '') or (pcm.nr_seq_contrato 	=  nr_seq_contrato_w))
									and  	((coalesce(pcm.nr_seq_ops_congenere::text, '') = '') or (pcm.nr_seq_ops_congenere 	= nr_seq_congenere_w))
									and 	pcm.ie_envio_receb 	= 'E';
									
									-- se houver alguma conversao 
									if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') or (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') ( (ds_mat_envio_aux_w) IS NOT NULL AND (ds_mat_envio_aux_w)::text <> '') then
										
										--- se o tipo de tabela foi convertido
										if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') then
											if 	ie_tipo_tabela_mat_aux_w in (2,5) then
												ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
											
											elsif 	ie_tipo_tabela_mat_aux_w in (3,6) then
												ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
											
											elsif 	ie_tipo_tabela_mat_aux_w = 4 then
												ie_tipo_tabela_tiss_w	:= '98'; -- Pcaotes
											
											elsif 	ie_tipo_tabela_mat_aux_w = 1 then
												ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
											
											elsif 	ie_tipo_tabela_mat_aux_w = 0 then
												ie_tipo_tabela_tiss_w	:= '22'; -- Rol de procedimentos Unimed
											
											else
												ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
											end if;								
											
											cd_servico_tiss_w := lpad(cd_servico_w,8,'0');
											
										end if;
										-- se o material de envio for convertido
										if (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') then
											cd_servico_tiss_w := lpad(cd_mat_envio_aux_w,8,'0');
										end if;
										
										-- se a descricao do material for convertido
										if (ds_mat_envio_aux_w IS NOT NULL AND ds_mat_envio_aux_w::text <> '') then
											ds_servico_w := trim(both substr(ds_mat_envio_aux_w,1,80));
										end if;

									end if;								
									
									
								else
									cd_servico_tiss_w := cd_servico_w;

								end if;
							end if;
						end if;

						ie_abrir_itens_interc_w := null;

						-- se a regra de composicao estiver informado para nao indicar o item como sendo de pacote
						select 	coalesce(max(a.ie_abrir_itens_intercambio),'S')
						into STRICT 	ie_abrir_itens_interc_w
						from 	pls_pacote_tipo_acomodacao a
						where 	nr_sequencia = r_c02_w.nr_seq_regra_pct_fat;

						if 	ie_abrir_itens_interc_w = 'N' then
							if 	ie_pacote_w = 'S' then
								ie_pacote_w := 'N';
							end if;
						end if;

						insert into ptu_nota_servico(	nr_sequencia,					dt_atualizacao,					nm_usuario,
										dt_atualizacao_nrec,				nm_usuario_nrec,				nr_seq_nota_cobr,
										nr_lote,					cd_unimed_prestador,				cd_prestador,
										nm_prestador,					ie_tipo_participacao,				dt_procedimento,
										cd_procedimento,				ie_origem_proced,				qt_procedimento,
										ie_tipo_prestador,				ie_rede_propria,				ie_tipo_pessoa_prestador,
										nr_cgc_cpf,					tx_procedimento,				ie_pacote,
										cd_ato,						ie_tipo_tabela,					nr_cgc_cpf_req,
										nm_prestador_requisitante,			sg_cons_prof_req,				nr_cons_prof_req,
										sg_uf_cons_req,					ie_reembolso,					nr_autorizacao,
										nr_nota,					vl_procedimento,				vl_custo_operacional,
										vl_filme,					cd_porte_anestesico,				cd_unimed_autorizadora,
										cd_unimed_pre_req,				cd_prestador_req,				ie_via_acesso,
										vl_adic_procedimento,				vl_adic_co,					vl_adic_filme,
										cd_especialidade,				nr_seq_nota,					ds_hora_procedimento,
										cd_cnes_prest,					nm_profissional_prestador			,sg_cons_prof_prest,
										nr_cons_prof_prest,				sg_uf_cons_prest,				vl_pago_prest,
										nr_seq_material,				cd_servico,					ds_servico,
										nr_seq_conta_proc,				nr_seq_conta_mat,				nr_seq_pacote_agrup,
										hr_final,					nr_cbo_exec,					id_acres_urg_emer,
										tec_utilizada,					dt_autoriz,					dt_solicitacao,
										nr_reg_anvisa,					cd_ref_material_fab,				cd_munic,
										dt_pgto_prestador,				unidade_medida,					tp_autoriz,
										ie_alto_custo,					ie_tipo_data_regra,				nr_seq_pacote,
										cd_rec_prestador,				nr_cnpj_fornecedor,				id_pag_forn,
										nm_fornecedor,					det_reg_anvisa,					nr_nota_fiscal_forn,
										cd_ref_material_fab_opme,			nr_seq_agrup_item_ptu,				tipo_rede_min,
										id_aviso_item,					nr_seq_aviso_procedimento,			nr_seq_aviso_material,
										nr_seq_item,					cd_item_unico,					ie_tipo_tabela_tiss,
										ie_tipo_participacao_tiss,			cd_servico_tiss)
								values (	nextval('ptu_nota_servico_seq'),			clock_timestamp(),					nm_usuario_p,
										clock_timestamp(),					nm_usuario_p,					nr_seq_cobranca_p,
										nr_lote_w,					cd_unim_prestador_w,				cd_prestador_w,
										nm_prestador_w,					'X',						dt_procedimento_w,
										cd_procedimento_w,				ie_origem_proced_w,				qt_procedimento_w,
										ie_tipo_prestador_w,				ie_rede_propria_w,				ie_tipo_pessoa_pres_w,
										nr_cnpj_cpf_w,					tx_fat_mult_serv_w,				ie_pacote_w,
										coalesce(ie_ato_cooperado_w, '1'),			ie_tipo_tabela_w,				nr_cgc_cpf_req_w,
										nm_prestador_req_w,				sg_cons_prof_req_w,				nr_cons_prof_req_w,
										sg_uf_cons_req_w,				r_c02_w.ie_reembolso,				cd_senha_w,
										nr_nota_w,					0,						vl_custo_op_partic_w,
										vl_filme_partic_w,				cd_porte_anest_w,				cd_cooperativa_w,
										cd_unimed_pre_req_w,				cd_prestador_req_w,				r_c02_w.ie_via_acesso,
										0,						vl_adic_custo_op_partic_w,			vl_adic_filme_partic_w,
										cd_especialidade_w,				r_c02_w.nr_seq_conta,				coalesce(hr_inicio_a500_w, hr_inicio_w),
										cd_cnes_w,					nm_profissional_prestador_w,			sg_cons_prof_prest_w,
										nr_cons_prof_prest_w,				sg_uf_cons_prest_w,				vl_liberado_w,
										nr_seq_material_w,				cd_servico_w,					ds_servico_w,
										r_c02_w.nr_seq_conta_proc,			r_c02_w.nr_seq_conta_mat,			nr_seq_regra_agrup_w,
										coalesce(hr_final_a500_w, hr_fim_w),			coalesce(cd_cbo_w, '000000'),				r_c02_w.ie_acres_urg_emer,
										ie_tec_utilizada_w,				dt_autoriz_w,					dt_solicitacao_w,
										substr(nr_registro_anvisa_w, 1, 15),		cd_ref_material_fab_w,				cd_municipio_w,
										dt_competencia_pgto_w,				substr(nr_uni_medida_ptu_w, 1, 3),		tp_autoriz_w,
										ie_prestador_alto_custo_w,			ie_tipo_data_w,					r_c02_w.nr_seq_pacote,
										cd_rec_prestador_w,				nr_cnpj_fornecedor_w,				id_pag_forn_w,
										coalesce(nm_fornecedor_opme_w, nm_fornecedor_w),	coalesce(det_reg_anvisa_opme_w, det_reg_anvisa_w),	coalesce(r_c02_w.nr_nota_fiscal_forn_opme, nr_nota_fiscal_forn_w),
										cd_ref_material_fab_opme_w,			nr_seq_regra_agrup_ptu_w,			coalesce(tipo_rede_min_w, 1),
										id_aviso_item_w,				nr_seq_aviso_procedimento_w,			nr_seq_aviso_material_w,
										nr_seq_item_w,					cd_item_unico_w,				ie_tipo_tabela_tiss_w,
										ie_tipo_partic_tiss_w,				cd_servico_tiss_w) returning nr_sequencia into nr_seq_nota_servico_w;

						-- Inserir o item que faz parte da nota servico
						CALL pls_gerar_ptu_nota_serv_item(	nr_seq_nota_servico_w,				r_c01_w.nr_seq_conta_pos_estab,			r_c01_w.nr_seq_pos_proc,
										r_c01_w.nr_seq_pos_mat,				r_c02_w.nr_seq_conta,				null,
										r_c02_w.nr_seq_conta_proc,			r_c02_w.nr_seq_conta_mat,			nr_seq_proc_partic_w,
										r_c01_w.nr_seq_conta_pos_contab,		r_c01_w.nr_seq_pos_proc_fat,			r_c01_w.nr_seq_pos_mat_fat,
										vl_procedimento_w,				vl_filme_w,					vl_custo_operacional_w,
										vl_adic_procedimento_w,				vl_adic_filme_w,				vl_adic_custo_operacional_w,
										qt_procedimento_w,				'1',						'8',
										nm_usuario_p,					r_c01_w.nr_seq_pos_estab_taxa,			r_c01_w.nr_seq_pos_taxa_contab,
										r_c02_w.nr_seq_pos_proc_partic,			r_c01_w.nr_seq_pos_proc_tx,			r_c01_w.nr_seq_pos_proc_tx_fat,
										r_c01_w.nr_seq_pos_mat_tx,			r_c01_w.nr_seq_pos_mat_tx_fat,			null);

					elsif (qt_item_pos_w = 0) then
						update	ptu_nota_servico
						set	vl_procedimento		= 0,
							vl_custo_operacional	= vl_custo_operacional + vl_custo_op_partic_w,
							vl_filme		= vl_filme + vl_filme_partic_w,
							vl_adic_procedimento	= 0,
							vl_adic_co		= vl_adic_co + vl_adic_custo_op_partic_w,
							vl_adic_filme		= vl_adic_filme + vl_adic_filme_partic_w,
							vl_pago_prest		= vl_pago_prest + vl_liberado_w,
							qt_procedimento		= qt_procedimento + qt_procedimento_w
						where	nr_sequencia		= nr_seq_nota_servico_w;

						-- Inserir o item que faz parte da nota servico
						CALL pls_gerar_ptu_nota_serv_item(	nr_seq_nota_servico_w,			r_c01_w.nr_seq_conta_pos_estab,		r_c01_w.nr_seq_pos_proc,
										r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta,			null,
										r_c02_w.nr_seq_conta_proc,		r_c02_w.nr_seq_conta_mat,		nr_seq_proc_partic_w,
										r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
										vl_procedimento_w,			vl_filme_w,				vl_custo_operacional_w,
										vl_adic_procedimento_w,			vl_adic_filme_w,			vl_adic_custo_operacional_w,
										qt_procedimento_w,			'1',					'9',
										nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
										r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
										r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		null);
					end if;
				else

					select	max(x.nr_sequencia)
					into STRICT	nr_seq_nota_servico_rrs_w
					from	ptu_nota_servico_rrs x
					where	x.cd_servico		= cd_servico_w
					and	x.nr_nota		= nr_nota_w
					and	x.nr_seq_nota_cobr_rrs	= nr_seq_cobranca_rrs_p
					and	x.tp_particip		= 'X'
					and	x.dt_servico		= dt_procedimento_w;

					if (coalesce(nr_seq_nota_servico_rrs_w::text, '') = '') then

						SELECT * FROM ptu_obter_regra_pacote_ptu(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat, cd_servico_w, cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w, r_c02_w.nr_seq_pacote) INTO STRICT cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w;

						cd_serv_pacote_w	:= coalesce(cd_pacote_ptu_w, cd_serv_pacote_w);
						cd_ref_material_fab_w	:= ptu_somente_caracter_permitido(cd_ref_material_fab_w, 'ANS');

						-- apura o vl do reembolso
						vl_serv_cob_w 	:= 	coalesce(vl_procedimento_w,0) +
									coalesce(vl_filme_w,0) +
									coalesce(vl_custo_operacional_w,0) +
									coalesce(vl_adic_procedimento_w,0) +
									coalesce(vl_adic_filme_w,0) +
									coalesce(vl_adic_custo_operacional_w,0);

						vl_dif_vl_inter_w :=	vl_serv_cob_w - coalesce(vl_reemb_benef_w,0);

						if (vl_dif_vl_inter_w <= 0) then
							vl_dif_vl_inter_w := vl_serv_cob_w;
						end if;

						-- Pegar o tp_tabela para XML do material
						if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
							ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('M', ie_tipo_despesa_w, null, nr_seq_material_w );
						end if;

						-- Pegar o tp_tabela para XML do procedimento
						if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then
							ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('P', ie_tipo_despesa_w, ie_origem_proced_w, null );
						end if;

						select  coalesce(max(ps.nr_seq_item),0)
						into STRICT	nr_seq_item_w
						from	ptu_nota_servico_rrs	ps,
							ptu_nota_cobranca_rrs	pc,
							ptu_fatura		pf
						where	ps.nr_seq_nota_cobr_rrs	= pc.nr_sequencia
						and	pf.nr_sequencia    	= pc.nr_seq_fatura
						and	pf.nr_sequencia    	= nr_seq_fatura_w;

						select	lpad(rownum + coalesce(nr_seq_item_w,0), 4, '0') nr_seq_item
						into STRICT	nr_seq_item_w
						;

						-- Gerar o sequencial do item e o item unico. XML jtrindade
						cd_item_unico_w	:= pls_obter_id_item_unico(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat,dt_procedimento_w,pls_obter_unimed_estab(cd_estabelecimento_w),nr_seq_item_w);

						if (sg_cons_prof_prest_w IS NOT NULL AND sg_cons_prof_prest_w::text <> '') then
							select	coalesce(max(cd_ptu), sg_cons_prof_prest_w)
							into STRICT	sg_cons_prof_prest_w
							from	conselho_profissional
							where	sg_conselho = sg_cons_prof_prest_w;
						end if;

						-- Se for XML
						if (ie_versao_xml_w > 0) then

							-- Se for procedimento
							if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then

								cd_servico_aux_w		:= cd_servico_w;

								cd_servico_tiss_w		:= ptu_conversao_item_tabela(ie_tipo_tabela_w,cd_servico_w,ie_origem_proced_w);
								ie_tipo_tabela_tiss_w		:= ptu_conversao_tipo_tabela(ie_tipo_tabela_w,cd_servico_w,'E',ie_origem_proced_w);

								ie_tipo_tabela_aux_w		:= null;
								ie_tipo_tabela_tiss_aux_w	:= null;

								-- busca a conversao
								select 	max(a.cd_proc_envio),
									max(a.ie_tipo_tabela_scs),
									coalesce(max(a.ie_servico_proprio),'N')
								into STRICT 	cd_servico_aux_w,
									ie_tipo_tabela_aux_w,
									ie_servico_proprio_w
								from 	pls_conversao_proc a
								where 	trunc(dt_procedimento_w) between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
								and 	a.cd_estabelecimento	= cd_estabelecimento_w
								and 	a.cd_procedimento	= cd_servico_aux_w
								and 	a.ie_origem_proced 	= ie_origem_proced_w
								and 	coalesce(a.ie_ptu, 'N') 	= 'S'
								and 	ie_envio_receb 		= 'E'
								and 	ie_situacao 		= 'A'
								and 	(cd_proc_envio IS NOT NULL AND cd_proc_envio::text <> '')
								and 	(ie_tipo_tabela_scs IS NOT NULL AND ie_tipo_tabela_scs::text <> '')
								and	((coalesce(ie_tipo_intercambio::text, '') = '') or (ie_tipo_intercambio = 'A') or (ie_tipo_intercambio	= ie_tipo_intercambio_w))
								and	((coalesce(nr_seq_prestador_partic::text, '') = '') or (nr_seq_prestador_partic = nr_seq_prestador_partic_w))
								and	((coalesce(nr_seq_contrato::text, '') = '') or (nr_seq_contrato =  nr_seq_contrato_w))
								and	((coalesce(nr_seq_congenere::text, '') = '') or (nr_seq_congenere = nr_seq_congenere_w))
								and	((coalesce(nr_seq_grau_partic::text, '') = '') or (nr_seq_grau_partic = nr_seq_grau_partic_w))
								and	((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento = r_c02_w.nr_seq_tipo_atendimento))
								and	((coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio = nr_seq_intercambio_w))
								and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_exec_w))
								and	((coalesce(nr_seq_grupo_contrato::text, '') = '') or (	(SELECT	count(1)
															from	table(pls_grupos_pck.obter_contrato_grupo(nr_seq_grupo_contrato, nr_seq_contrato_w, nr_seq_intercambio_w))) > 0));


								-- se tiver conversao de procedimento e de tipo de tabela
								if (cd_servico_aux_w IS NOT NULL AND cd_servico_aux_w::text <> '') and (ie_tipo_tabela_aux_w IS NOT NULL AND ie_tipo_tabela_aux_w::text <> '') then

									cd_servico_w		:= cd_servico_aux_w;
									cd_servico_tiss_w	:= cd_servico_aux_w;

									-- muda para o padrao TISS
									select  case ie_tipo_tabela_aux_w
										when 0 then '22'
										when 1 then '18'
										when 2 then '00'
										when 3 then '00'
										when 4 then '98'
										when 5 then '19'
										when 6 then '20'
										end
									into STRICT  	ie_tipo_tabela_tiss_aux_w
									;

									ie_tipo_tabela_tiss_w	:= ie_tipo_tabela_tiss_aux_w;
									
									if ie_servico_proprio_w = 'S' then
										ie_tipo_tabela_tiss_w := '00';
										cd_servico_tiss_w := ie_tipo_tabela_tiss_aux_w || lpad(cd_servico_aux_w,8,'0');
									end if;
								end if;
							end if;

							-- Se for material
							if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then

								if (ie_mat_a900_w = 'S' and (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '')) then
									-- Pegar a codificacao do material
									select  coalesce(max(b.ie_codificacao),1),
										max(b.tp_tabela_tiss)
									into STRICT  	ie_codificacao_mat_w,
										ie_tipo_tabela_tiss_w
									from 	pls_material_unimed b
									where 	b.nr_sequencia  = nr_seq_mat_unimed_w;
								else
								-- Pegar a codificacao do material
									select  coalesce(max(b.ie_codificacao),1)
									into STRICT  	ie_codificacao_mat_w
									from  	pls_material  a,
										pls_material_unimed b
									where 	b.nr_sequencia  = a.nr_seq_material_unimed
									and 	a.nr_sequencia  = nr_seq_material_w;
								end if;
							
								-- se tiver conversao no pos-estabelecido
								if (r_c02_w.cd_item_convertido IS NOT NULL AND r_c02_w.cd_item_convertido::text <> '') then
								
									select	coalesce(max(b.ie_codificacao),1),
										max(b.tp_tabela_tiss)
									into STRICT  	ie_codificacao_mat_w,
										ie_tipo_tabela_tiss_w
									from 	pls_material_unimed b
									where	b.cd_material = r_c02_w.cd_item_convertido;
									
									cd_servico_w	:= r_c02_w.cd_item_convertido;
								
								end if;
								
								-- se for TNUMM
								if (ie_codificacao_mat_w = 1 ) then

									if ie_tipo_tabela_w in (2,5) then
										ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
									elsif ie_tipo_tabela_w in (3,6) then
										ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
									elsif ie_tipo_tabela_w = 1 then
										ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
									else
										ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
									end if;

									cd_servico_tiss_w := ie_tipo_tabela_tiss_w || lpad(cd_servico_w,8,'0');
									ie_tipo_tabela_tiss_w := '00';
									
									ie_tipo_tabela_mat_aux_w 	:= null;
									cd_mat_envio_aux_w		:= null;
									ds_mat_envio_aux_w		:= null;
									
									select 	max(pcm.ie_tipo_tabela),
										max(pcm.cd_material_envio),
										max(pcm.ds_material_envio)
									into STRICT	ie_tipo_tabela_mat_aux_w,
										cd_mat_envio_aux_w,
										ds_mat_envio_aux_w
									from 	pls_conversao_mat pcm
									where 	trunc(dt_procedimento_w) 	between pcm.dt_inicio_vigencia and coalesce(pcm.dt_fim_vigencia,clock_timestamp())
									and (cd_servico_w >= pcm.cd_material_orig_inicial	or coalesce(pcm.cd_material_orig_inicial::text, '') = '')
									and (cd_servico_w <= pcm.cd_material_orig_final	or coalesce(pcm.cd_material_orig_final::text, '') = '')
									and 	((pcm.ie_tipo_despesa_mat 	= ie_tipo_despesa_mat_w) or (coalesce(pcm.ie_tipo_despesa_mat::text, '') = ''))
									and  	((coalesce(pcm.nr_seq_contrato::text, '') = '') or (pcm.nr_seq_contrato 	=  nr_seq_contrato_w))
									and  	((coalesce(pcm.nr_seq_ops_congenere::text, '') = '') or (pcm.nr_seq_ops_congenere 	= nr_seq_congenere_w))
									and 	pcm.ie_envio_receb 	= 'E';
									
									-- se houver alguma conversao 
									if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') or (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') ( (ds_mat_envio_aux_w) IS NOT NULL AND (ds_mat_envio_aux_w)::text <> '') then
										
										--- se o tipo de tabela foi convertido
										if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') then
											if 	ie_tipo_tabela_mat_aux_w in (2,5) then
												ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
											
											elsif 	ie_tipo_tabela_mat_aux_w in (3,6) then
												ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
											
											elsif 	ie_tipo_tabela_mat_aux_w = 4 then
												ie_tipo_tabela_tiss_w	:= '98'; -- Pcaotes
											
											elsif 	ie_tipo_tabela_mat_aux_w = 1 then
												ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
											
											elsif 	ie_tipo_tabela_mat_aux_w = 0 then
												ie_tipo_tabela_tiss_w	:= '22'; -- Rol de procedimentos Unimed
											
											else
												ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
											end if;								
											
											cd_servico_tiss_w := lpad(cd_servico_w,8,'0');
											
										end if;
										-- se o material de envio for convertido
										if (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') then
											cd_servico_tiss_w := lpad(cd_mat_envio_aux_w,8,'0');
										end if;
										
										-- se a descricao do material for convertido
										if (ds_mat_envio_aux_w IS NOT NULL AND ds_mat_envio_aux_w::text <> '') then
											ds_servico_w := trim(both substr(ds_mat_envio_aux_w,1,80));
										end if;

									end if;								
									
								else
									cd_servico_tiss_w := cd_servico_w;

								end if;
							end if;
						end if;

						insert into	ptu_nota_servico_rrs(	nr_sequencia,				dt_atualizacao_nrec,		nm_usuario_nrec,
											dt_atualizacao,				nm_usuario,			cd_procedimento,
											cd_servico,				ds_servico,			dt_servico,
											ie_origem_proced,			nm_profissional,		nr_autoriz,
											nr_cons_prof,				nr_lote,			nr_nota,
											nr_nota_numerico,			nr_seq_a500,			nr_seq_conta_mat,
											nr_seq_conta_proc,			nr_seq_nota_cobr_rrs,		nr_seq_proc_partic,
											qt_cobrada,				sg_cons_prof,			sg_uf_cons_prof,
											tp_particip,				tp_tabela,			vl_dif_vl_inter,
											vl_serv_cob,				nr_seq_material,		vl_pago_benef,
											nr_seq_item,				cd_item_unico,			ie_tipo_tabela_tiss,
											ie_tipo_participacao_tiss,		cd_servico_tiss)
						values (				nextval('ptu_nota_servico_rrs_seq'),	clock_timestamp(),			nm_usuario_p,
											clock_timestamp(),				nm_usuario_p,			cd_procedimento_w,
											cd_servico_w,				ds_servico_w,			dt_procedimento_w,
											ie_origem_proced_w,			nm_profissional_prestador_w,	cd_senha_w,
											nr_cons_prof_prest_w,			nr_lote_w,			nr_nota_w,
											nr_nota_numerico_w,			null,				r_c02_w.nr_seq_conta_mat,
											r_c02_w.nr_seq_conta_proc,		nr_seq_cobranca_rrs_p,		nr_seq_proc_partic_w,
											qt_procedimento_w,			sg_cons_prof_prest_w,		coalesce(sg_uf_cons_prest_w,sg_estado_w),
											ie_tipo_participacao_w,			ie_tipo_tabela_w,		vl_dif_vl_inter_w,
											vl_serv_cob_w,				nr_seq_material_w,		vl_pago_benef_w,
											nr_seq_item_w,				cd_item_unico_w,		ie_tipo_tabela_tiss_w,
											ie_tipo_partic_tiss_w,			cd_servico_tiss_w) returning nr_sequencia into nr_seq_nota_servico_rrs_w;


						-- Inserir o item que faz parte da nota servico
						CALL pls_gerar_ptu_nota_serv_item(	null,		 			r_c01_w.nr_seq_conta_pos_estab, 	r_c01_w.nr_seq_pos_proc,
										r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			null,
										r_c02_w.nr_seq_conta_proc, 		r_c02_w.nr_seq_conta_mat, 		nr_seq_proc_partic_w,
										r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
										vl_procedimento_w,			vl_filme_w,				vl_custo_operacional_w,
										vl_adic_procedimento_w,			vl_adic_filme_w,			vl_adic_custo_operacional_w,
										qt_procedimento_w,			'1',					'10',
										nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
										r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
										r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		nr_seq_nota_servico_rrs_w);

					elsif (qt_item_pos_w = 0) then
						update	ptu_nota_servico_rrs
						set	vl_serv_cob		= 0,
							qt_cobrada		= qt_cobrada + qt_procedimento_w
						where	nr_sequencia		= nr_seq_nota_servico_rrs_w;

						-- Inserir o item que faz parte da nota servico
						CALL pls_gerar_ptu_nota_serv_item(	null,					r_c01_w.nr_seq_conta_pos_estab,		r_c01_w.nr_seq_pos_proc,
										r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta,			null,
										r_c02_w.nr_seq_conta_proc,		r_c02_w.nr_seq_conta_mat,		nr_seq_proc_partic_w,
										r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
										vl_procedimento_w,			vl_filme_w,				vl_custo_operacional_w,
										vl_adic_procedimento_w,			vl_adic_filme_w,			vl_adic_custo_operacional_w,
										qt_procedimento_w,			'1',					'11',
										nm_usuario_p,				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
										r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
										r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		nr_seq_nota_servico_rrs_w);
					end if;

				end if; -- Fim controle reembolso
			end if;

			-- Se passar de 999 atualiza informacoes do anterior e gera novo pro resto
			if ( qt_procedimento_w > qt_serv_padrao_ptu_w) then
				while(qt_procedimento_w > qt_serv_padrao_ptu_w) loop
					select	coalesce(max(ds_hora_procedimento),hr_inicio_w),
						coalesce(max(hr_final),hr_fim_w)
					into STRICT	hr_inicio_w,
						hr_fim_w
					from	ptu_nota_servico
					where	cd_servico		= cd_servico_w
					and	nr_nota			= nr_nota_w
					and	nr_seq_nota_cobr	= nr_seq_cobranca_p;

					-- Hora inicial/final deve aumentar 1 segundo
					hr_inicio_w	:= alterar_hora(hr_inicio_w, 'N');
					hr_fim_w	:= alterar_hora(hr_fim_w, 'N');

					-- Controle de reembolso
					if (coalesce(nr_seq_cobranca_rrs_p::text, '') = '') then

						select	max(nr_sequencia)
						into STRICT	nr_seq_nota_servico_w
						from	ptu_nota_servico	a
						where	cd_servico		= cd_servico_w
						and	nr_nota			= nr_nota_w
						and	nr_seq_nota_cobr	= nr_seq_cobranca_p
						and	qt_procedimento	= (	SELECT max(b.qt_procedimento)
										from	ptu_nota_servico	b
										where	cd_servico		= cd_servico_w
										and	nr_nota			= nr_nota_w
										and	nr_seq_nota_cobr	= nr_seq_cobranca_p
										and	qt_procedimento		>= qt_serv_padrao_ptu_w);

						if (nr_seq_nota_servico_w IS NOT NULL AND nr_seq_nota_servico_w::text <> '') then
							update	ptu_nota_servico
							set	vl_procedimento		= dividir_sem_round(vl_procedimento, qt_procedimento_w) * qt_serv_padrao_ptu_w,
								vl_custo_operacional	= dividir_sem_round(vl_custo_operacional, qt_procedimento_w) * qt_serv_padrao_ptu_w,
								vl_filme		= dividir_sem_round(vl_filme, qt_procedimento_w) * qt_serv_padrao_ptu_w,
								vl_adic_procedimento	= dividir_sem_round(vl_adic_procedimento, qt_procedimento_w) * qt_serv_padrao_ptu_w,
								vl_adic_co		= dividir_sem_round(vl_adic_co, qt_procedimento_w) * qt_serv_padrao_ptu_w,
								vl_adic_filme		= dividir_sem_round(vl_adic_filme, qt_procedimento_w) * qt_serv_padrao_ptu_w,
								vl_pago_prest		= dividir_sem_round(vl_pago_prest, qt_procedimento_w) * qt_serv_padrao_ptu_w,
								qt_procedimento		= qt_serv_padrao_ptu_w
							where	nr_sequencia		= nr_seq_nota_servico_w
							returning vl_procedimento, vl_custo_operacional, vl_filme, vl_adic_procedimento, vl_adic_co, vl_adic_filme
							into	vl_proc_item_w, vl_custo_op_item_w, vl_filme_item_w, vl_adic_proc_item_w, vl_adic_co_item_w, vl_adic_filme_item_w;

							-- Atualizar o item que faz parte da nota servico
							CALL pls_gerar_ptu_nota_serv_item(	nr_seq_nota_servico_w,			r_c01_w.nr_seq_conta_pos_estab,		r_c01_w.nr_seq_pos_proc,
											r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			null,
											r_c02_w.nr_seq_conta_proc,		r_c02_w.nr_seq_conta_mat,		nr_seq_proc_partic_w,
											r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
											vl_proc_item_w,				vl_filme_item_w, 			vl_custo_op_item_w,
											vl_adic_proc_item_w, 			vl_adic_filme_item_w, 			vl_adic_co_item_w,
											qt_serv_padrao_ptu_w,			'2', 					'12',
											nm_usuario_p, 				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
											r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
											r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		null);
						end if;

						select	vl_procedimento_w - coalesce(vl_procedimento, 0),
							vl_custo_operacional_w - coalesce(vl_custo_operacional, 0),
							vl_filme_w - coalesce(vl_filme, 0),
							vl_adic_procedimento_w - coalesce(vl_adic_procedimento, 0),
							vl_adic_custo_operacional_w - coalesce(vl_adic_co, 0),
							vl_adic_filme_w - coalesce(vl_adic_filme, 0),
							vl_liberado_w - coalesce(vl_pago_prest, 0)
						into STRICT	vl_procedimento_w,
							vl_custo_operacional_w,
							vl_filme_w,
							vl_adic_procedimento_w,
							vl_adic_custo_operacional_w,
							vl_adic_filme_w,
							vl_liberado_w
						from	ptu_nota_servico
						where	nr_sequencia = nr_seq_nota_servico_w;

						qt_procedimento_w := qt_procedimento_w - qt_serv_padrao_ptu_w;

						select	max(nr_sequencia)
						into STRICT	nr_seq_nota_servico_w
						from	ptu_nota_servico
						where	cd_servico		= cd_servico_w
						and	nr_nota			= nr_nota_w
						and	nr_seq_nota_cobr	= nr_seq_cobranca_p
						and	qt_procedimento + qt_procedimento_w <= qt_serv_padrao_ptu_w;

						if (nr_seq_nota_servico_w IS NOT NULL AND nr_seq_nota_servico_w::text <> '') then
							update	ptu_nota_servico
							set	vl_procedimento		= vl_procedimento + vl_procedimento_w,
								vl_custo_operacional	= vl_custo_operacional + vl_custo_operacional_w,
								vl_filme		= vl_filme + vl_filme_w,
								vl_adic_procedimento	= vl_adic_procedimento + vl_adic_procedimento_w,
								vl_adic_co		= vl_adic_co + vl_adic_custo_operacional_w,
								vl_adic_filme		= vl_adic_filme + vl_adic_filme_w,
								vl_pago_prest		= vl_pago_prest + vl_liberado_w,
								qt_procedimento		= qt_procedimento + qt_procedimento_w
							where	nr_sequencia		= nr_seq_nota_servico_w
							returning vl_procedimento, vl_custo_operacional, vl_filme, vl_adic_procedimento, vl_adic_co, vl_adic_filme
							into	vl_proc_item_w, vl_custo_op_item_w, vl_filme_item_w, vl_adic_proc_item_w, vl_adic_co_item_w, vl_adic_filme_item_w;

							CALL pls_gerar_ptu_nota_serv_item(	nr_seq_nota_servico_w,			r_c01_w.nr_seq_conta_pos_estab,		r_c01_w.nr_seq_pos_proc,
											r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			null,
											r_c02_w.nr_seq_conta_proc,		r_c02_w.nr_seq_conta_mat,		nr_seq_proc_partic_w,
											r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
											vl_proc_item_w,				vl_filme_item_w, 			vl_custo_op_item_w,
											vl_adic_proc_item_w, 			vl_adic_filme_item_w, 			vl_adic_co_item_w,
											qt_serv_padrao_ptu_w,			'2', 					'13',
											nm_usuario_p, 				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
											r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
											r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		null);
						else
							SELECT * FROM ptu_obter_regra_pacote_ptu(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat, cd_servico_w, cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w, r_c02_w.nr_seq_pacote) INTO STRICT cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w;

							cd_ref_material_fab_w := ptu_somente_caracter_permitido(cd_ref_material_fab_w, 'ANS');

							if (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then
								cd_procedimento_w := null;
								ie_origem_proced_w := null;
							end if;

							tratar_tabela_codigo_generico(cd_servico_w, ie_tipo_tabela_w);

							ie_pacote_w := 'N';

							-- decode(cd_pacote_ptu_w, null, 'N', 'S')
							if (cd_pacote_ptu_w IS NOT NULL AND cd_pacote_ptu_w::text <> '') then
								ie_pacote_w	:= 'S';
							end if;

							if	((coalesce(dt_autoriz_w::text, '') = '') or (dt_autoriz_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 and (ie_tipo_tabela_w = 4) then
								ie_pacote_w	:= ' ';
							end if;

							if	((coalesce(dt_autoriz_w::text, '') = '') or (dt_autoriz_w >= dt_ref_ptu_11_3_w)) and ie_versao_w >= 113 and (ie_tipo_prestador_w = '8') then
								ie_pacote_w	:= 'N';
							end if;

							-- Pegar o tp_tabela para XML do material
							if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
								ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('M', ie_tipo_despesa_w, null, nr_seq_material_w );
							end if;

							-- Pegar o tp_tabela para XML do procedimento
							if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then
								ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('P', ie_tipo_despesa_w, ie_origem_proced_w, null );
							end if;

							select  max(pc.nr_lote_prest),
								max(pc.nr_guia_tiss_prestador)
							into STRICT 	nr_lote_prest_w,
								nr_guia_tiss_prest_w
							from 	ptu_nota_cobranca pc
							where 	pc.nr_sequencia = nr_seq_cobranca_p;

							select 	coalesce(max(ps.nr_seq_item), 0)
							into STRICT	nr_seq_item_w
							from   	ptu_nota_servico ps,
								ptu_nota_cobranca pc

							where   ps.nr_seq_nota_cobr 		= pc.nr_sequencia
							and 	pc.nr_lote_prest 		= nr_lote_prest_w
							and 	pc.nr_guia_tiss_prestador 	= nr_guia_tiss_prest_w

							and 	pc.nr_seq_fatura 		= nr_seq_fatura_w;

							select	lpad(rownum + coalesce(nr_seq_item_w,0), 4, '0') nr_seq_item
							into STRICT	nr_seq_item_w
							;

							-- Gerar o sequencial do item e o item unico. XML jtrindade
							cd_item_unico_w	:= pls_obter_id_item_unico(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat,dt_procedimento_w,pls_obter_unimed_estab(cd_estabelecimento_w),nr_seq_item_w);

							if (sg_cons_prof_req_w IS NOT NULL AND sg_cons_prof_req_w::text <> '') then
								select	coalesce(max(cd_ptu), sg_cons_prof_req_w)
								into STRICT	sg_cons_prof_req_w
								from	conselho_profissional
								where	sg_conselho = sg_cons_prof_req_w;
							end if;

							if (sg_cons_prof_prest_w IS NOT NULL AND sg_cons_prof_prest_w::text <> '') then
								select	coalesce(max(cd_ptu), sg_cons_prof_prest_w)
								into STRICT	sg_cons_prof_prest_w
								from	conselho_profissional
								where	sg_conselho = sg_cons_prof_prest_w;
							end if;

							-- Se for XML
							if (ie_versao_xml_w > 0) then

								-- Se for procedimento
								if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then

									cd_servico_aux_w		:= cd_servico_w;

									cd_servico_tiss_w		:= ptu_conversao_item_tabela(ie_tipo_tabela_w,cd_servico_w,ie_origem_proced_w);
									ie_tipo_tabela_tiss_w		:= ptu_conversao_tipo_tabela(ie_tipo_tabela_w,cd_servico_w,'E',ie_origem_proced_w);

									ie_tipo_tabela_aux_w		:= null;
									ie_tipo_tabela_tiss_aux_w	:= null;

									-- busca a conversao
									select 	max(a.cd_proc_envio),
										max(a.ie_tipo_tabela_scs),
										coalesce(max(a.ie_servico_proprio),'N')
									into STRICT 	cd_servico_aux_w,
										ie_tipo_tabela_aux_w,
										ie_servico_proprio_w
									from 	pls_conversao_proc a
									where 	trunc(dt_procedimento_w) between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
									and 	a.cd_estabelecimento	= cd_estabelecimento_w
									and 	a.cd_procedimento	= cd_servico_aux_w
									and 	a.ie_origem_proced 	= ie_origem_proced_w
									and 	coalesce(a.ie_ptu, 'N') 	= 'S'
									and 	ie_envio_receb 		= 'E'
									and 	ie_situacao 		= 'A'
									and 	(cd_proc_envio IS NOT NULL AND cd_proc_envio::text <> '')
									and 	(ie_tipo_tabela_scs IS NOT NULL AND ie_tipo_tabela_scs::text <> '')
									and	((coalesce(ie_tipo_intercambio::text, '') = '') or (ie_tipo_intercambio = 'A') or (ie_tipo_intercambio	= ie_tipo_intercambio_w))
									and	((coalesce(nr_seq_prestador_partic::text, '') = '') or (nr_seq_prestador_partic = nr_seq_prestador_partic_w))
									and	((coalesce(nr_seq_contrato::text, '') = '') or (nr_seq_contrato =  nr_seq_contrato_w))
									and	((coalesce(nr_seq_congenere::text, '') = '') or (nr_seq_congenere = nr_seq_congenere_w))
									and	((coalesce(nr_seq_grau_partic::text, '') = '') or (nr_seq_grau_partic = nr_seq_grau_partic_w))
									and	((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento = r_c02_w.nr_seq_tipo_atendimento))
									and	((coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio = nr_seq_intercambio_w))
									and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_exec_w))
									and	((coalesce(nr_seq_grupo_contrato::text, '') = '') or (	(SELECT	count(1)
																from	table(pls_grupos_pck.obter_contrato_grupo(nr_seq_grupo_contrato, nr_seq_contrato_w, nr_seq_intercambio_w))) > 0));


									-- se tiver conversao de procedimento e de tipo de tabela
									if (cd_servico_aux_w IS NOT NULL AND cd_servico_aux_w::text <> '') and (ie_tipo_tabela_aux_w IS NOT NULL AND ie_tipo_tabela_aux_w::text <> '') then

										cd_servico_w		:= cd_servico_aux_w;
										cd_servico_tiss_w	:= cd_servico_aux_w;

										-- muda para o padrao TISS
										select  case ie_tipo_tabela_aux_w
											when 0 then '22'
											when 1 then '18'
											when 2 then '00'
											when 3 then '00'
											when 4 then '98'
											when 5 then '19'
											when 6 then '20'
											end
										into STRICT  	ie_tipo_tabela_tiss_aux_w
										;

										ie_tipo_tabela_tiss_w	:= ie_tipo_tabela_tiss_aux_w;
										
										if ie_servico_proprio_w = 'S' then
											ie_tipo_tabela_tiss_w := '00';
											cd_servico_tiss_w := ie_tipo_tabela_tiss_aux_w || lpad(cd_servico_aux_w,8,'0');
										end if;
									end if;
								end if;

								-- Se for material
								if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then

									if (ie_mat_a900_w = 'S' and (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '')) then
										-- Pegar a codificacao do material
										select  coalesce(max(b.ie_codificacao),1),
											max(b.tp_tabela_tiss)
										into STRICT  	ie_codificacao_mat_w,
											ie_tipo_tabela_tiss_w
										from 	pls_material_unimed b
										where 	b.nr_sequencia  = nr_seq_mat_unimed_w;
									else
									-- Pegar a codificacao do material
										select  coalesce(max(b.ie_codificacao),1)
										into STRICT  	ie_codificacao_mat_w
										from  	pls_material  a,
											pls_material_unimed b
										where 	b.nr_sequencia  = a.nr_seq_material_unimed
										and 	a.nr_sequencia  = nr_seq_material_w;
									end if;
							
									-- se tiver conversao no pos-estabelecido
									if (r_c02_w.cd_item_convertido IS NOT NULL AND r_c02_w.cd_item_convertido::text <> '') then
									
										select	coalesce(max(b.ie_codificacao),1),
											max(b.tp_tabela_tiss)
										into STRICT  	ie_codificacao_mat_w,
											ie_tipo_tabela_tiss_w
										from 	pls_material_unimed b
										where	b.cd_material = r_c02_w.cd_item_convertido;
										
										cd_servico_w	:= r_c02_w.cd_item_convertido;
									
									end if;
									
									-- se for TNUMM
									if (ie_codificacao_mat_w = 1 ) then

										if ie_tipo_tabela_w in (2,5) then
											ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
										elsif ie_tipo_tabela_w in (3,6) then
											ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
										elsif ie_tipo_tabela_w = 1 then
											ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
										else
											ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
										end if;

										cd_servico_tiss_w := ie_tipo_tabela_tiss_w || lpad(cd_servico_w,8,'0');
										ie_tipo_tabela_tiss_w := '00';
										
										ie_tipo_tabela_mat_aux_w 	:= null;
										cd_mat_envio_aux_w		:= null;
										ds_mat_envio_aux_w		:= null;
										
										select 	max(pcm.ie_tipo_tabela),
											max(pcm.cd_material_envio),
											max(pcm.ds_material_envio)
										into STRICT	ie_tipo_tabela_mat_aux_w,
											cd_mat_envio_aux_w,
											ds_mat_envio_aux_w
										from 	pls_conversao_mat pcm
										where 	trunc(dt_procedimento_w) 	between pcm.dt_inicio_vigencia and coalesce(pcm.dt_fim_vigencia,clock_timestamp())
										and (cd_servico_w >= pcm.cd_material_orig_inicial	or coalesce(pcm.cd_material_orig_inicial::text, '') = '')
										and (cd_servico_w <= pcm.cd_material_orig_final	or coalesce(pcm.cd_material_orig_final::text, '') = '')
										and 	((pcm.ie_tipo_despesa_mat 	= ie_tipo_despesa_mat_w) or (coalesce(pcm.ie_tipo_despesa_mat::text, '') = ''))
										and  	((coalesce(pcm.nr_seq_contrato::text, '') = '') or (pcm.nr_seq_contrato 	=  nr_seq_contrato_w))
										and  	((coalesce(pcm.nr_seq_ops_congenere::text, '') = '') or (pcm.nr_seq_ops_congenere 	= nr_seq_congenere_w))
										and 	pcm.ie_envio_receb 	= 'E';
										
										-- se houver alguma conversao 
										if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') or (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') ( (ds_mat_envio_aux_w) IS NOT NULL AND (ds_mat_envio_aux_w)::text <> '') then
											
											--- se o tipo de tabela foi convertido
											if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') then
												if 	ie_tipo_tabela_mat_aux_w in (2,5) then
													ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
												
												elsif 	ie_tipo_tabela_mat_aux_w in (3,6) then
													ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
												
												elsif 	ie_tipo_tabela_mat_aux_w = 4 then
													ie_tipo_tabela_tiss_w	:= '98'; -- Pcaotes
												
												elsif 	ie_tipo_tabela_mat_aux_w = 1 then
													ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
												
												elsif 	ie_tipo_tabela_mat_aux_w = 0 then
													ie_tipo_tabela_tiss_w	:= '22'; -- Rol de procedimentos Unimed
												
												else
													ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
												end if;								
												
												cd_servico_tiss_w := lpad(cd_servico_w,8,'0');
												
											end if;
											-- se o material de envio for convertido
											if (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') then
												cd_servico_tiss_w := lpad(cd_mat_envio_aux_w,8,'0');
											end if;
											
											-- se a descricao do material for convertido
											if (ds_mat_envio_aux_w IS NOT NULL AND ds_mat_envio_aux_w::text <> '') then
												ds_servico_w := trim(both substr(ds_mat_envio_aux_w,1,80));
											end if;

										end if;								
										
									else
										cd_servico_tiss_w := cd_servico_w;

									end if;
								end if;
							end if;

							ie_abrir_itens_interc_w := null;

							-- se a regra de composicao estiver informado para nao indicar o item como sendo de pacote
							select 	coalesce(max(a.ie_abrir_itens_intercambio),'S')
							into STRICT 	ie_abrir_itens_interc_w
							from 	pls_pacote_tipo_acomodacao a
							where 	nr_sequencia = r_c02_w.nr_seq_regra_pct_fat;

							if 	ie_abrir_itens_interc_w = 'N' then
								if 	ie_pacote_w = 'S' then
									ie_pacote_w := 'N';
								end if;
							end if;

							insert into ptu_nota_servico(	nr_sequencia,					dt_atualizacao,					nm_usuario,
											dt_atualizacao_nrec,				nm_usuario_nrec,				nr_seq_nota_cobr,
											nr_lote,					cd_unimed_prestador,				cd_prestador,
											ie_tipo_participacao,				dt_procedimento,				nm_prestador,
											cd_procedimento,				ie_origem_proced,				qt_procedimento,
											ie_tipo_prestador,				ie_rede_propria,				ie_tipo_pessoa_prestador,
											nr_cgc_cpf,					tx_procedimento,				ie_pacote,
											cd_ato,						ie_tipo_tabela,					nr_cgc_cpf_req,
											nm_prestador_requisitante,			sg_cons_prof_req,				nr_cons_prof_req,
											sg_uf_cons_req,					ie_reembolso,					nr_autorizacao,
											nr_nota,					vl_procedimento,				vl_custo_operacional,
											vl_filme,					cd_porte_anestesico,				cd_unimed_autorizadora,
											cd_unimed_pre_req,				cd_prestador_req,				ie_via_acesso,
											vl_adic_procedimento,				vl_adic_co,					vl_adic_filme,
											cd_especialidade,				nr_seq_nota,					ds_hora_procedimento,
											cd_cnes_prest,					nm_profissional_prestador,			sg_cons_prof_prest,
											nr_cons_prof_prest,				sg_uf_cons_prest,				vl_pago_prest,
											nr_seq_material,				cd_servico,					ds_servico,
											nr_seq_conta_proc,				nr_seq_conta_mat,				nr_seq_pacote_agrup,
											hr_final,					nr_cbo_exec,					id_acres_urg_emer,
											tec_utilizada,					dt_autoriz,					dt_solicitacao,
											nr_reg_anvisa,					cd_ref_material_fab,				cd_munic,
											dt_pgto_prestador,				unidade_medida,					tp_autoriz,
											ie_tipo_data_regra,				nr_seq_pacote,					ie_alto_custo,
											cd_rec_prestador,				nr_cnpj_fornecedor,				id_pag_forn,
											nm_fornecedor,					det_reg_anvisa,					nr_nota_fiscal_forn,
											cd_ref_material_fab_opme,			nr_seq_agrup_item_ptu,				cd_pacote,
											tipo_rede_min,					id_aviso_item,					nr_seq_aviso_procedimento,
											nr_seq_aviso_material,				nr_seq_item,					cd_item_unico,
											ie_tipo_tabela_tiss,				ie_tipo_participacao_tiss,			cd_servico_tiss)
									values (	nextval('ptu_nota_servico_seq'),			clock_timestamp(),					nm_usuario_p,
											clock_timestamp(),					nm_usuario_p,					nr_seq_cobranca_p,
											nr_lote_w,					cd_unim_prestador_w,				CASE WHEN ie_participante_w='S' THEN  cd_prestador_exec_w  ELSE cd_prestador_w END ,
											coalesce(ie_tipo_participacao_w, '0'),		dt_procedimento_w,				CASE WHEN ie_participante_w='S' THEN  coalesce(nm_profissional_prestador_w,nm_prestador_w)  ELSE nm_prestador_w END ,
											cd_procedimento_w,				ie_origem_proced_w,				qt_procedimento_w,
											ie_tipo_prestador_w,				ie_rede_propria_w,				ie_tipo_pessoa_pres_w,
											nr_cnpj_cpf_w,					tx_fat_mult_serv_w,				ie_pacote_w,
											coalesce(ie_ato_cooperado_w, '1'),			ie_tipo_tabela_w,				nr_cgc_cpf_req_w,
											nm_prestador_req_w,				sg_cons_prof_req_w,				nr_cons_prof_req_w,
											sg_uf_cons_req_w, 				r_c02_w.ie_reembolso, 				cd_senha_w,
											nr_nota_w,					vl_procedimento_w,				vl_custo_operacional_w,
											vl_filme_w,					cd_porte_anest_w,				cd_cooperativa_w,
											cd_unimed_pre_req_w,				cd_prestador_req_w,				r_c02_w.ie_via_acesso,
											vl_adic_procedimento_w,				vl_adic_custo_operacional_w,			vl_adic_filme_w,
											cd_especialidade_w,				r_c02_w.nr_seq_conta,				coalesce(hr_inicio_a500_w, hr_inicio_w),
											cd_cnes_w,					nm_profissional_prestador_w,			sg_cons_prof_prest_w,
											nr_cons_prof_prest_w,				sg_uf_cons_prest_w,				vl_liberado_w,
											nr_seq_material_w,				cd_servico_w,					ds_servico_w,
											r_c02_w.nr_seq_conta_proc,			r_c02_w.nr_seq_conta_mat,			nr_seq_regra_agrup_w,
											coalesce(hr_final_a500_w, hr_fim_w),			coalesce(cd_cbo_w, '000000'),			r_c02_w.ie_acres_urg_emer,
											ie_tec_utilizada_w,				dt_autoriz_w,					dt_solicitacao_w,
											substr(nr_registro_anvisa_w, 1, 15),		cd_ref_material_fab_w,				cd_municipio_w,
											dt_competencia_pgto_w,				substr(nr_uni_medida_ptu_w, 1, 3),		tp_autoriz_w,
											ie_tipo_data_w,					r_c02_w.nr_seq_pacote,				CASE WHEN ie_participante_w='S' THEN  ie_prestador_alto_custo_exec_w  ELSE ie_prestador_alto_custo_w END ,
											cd_rec_prestador_w,				nr_cnpj_fornecedor_w,				id_pag_forn_w,
											coalesce(nm_fornecedor_opme_w, nm_fornecedor_w),	coalesce(det_reg_anvisa_opme_w, det_reg_anvisa_w),	coalesce(r_c02_w.nr_nota_fiscal_forn_opme, nr_nota_fiscal_forn_w),
											cd_ref_material_fab_opme_w,	 		nr_seq_regra_agrup_ptu_w, 			CASE WHEN coalesce(ie_pacote_w,'N')='S' THEN cd_pacote_ptu_w  ELSE null END ,
											coalesce(tipo_rede_min_w, 1),			id_aviso_item_w,				nr_seq_aviso_procedimento_w,
											nr_seq_aviso_material_w,			nr_seq_item_w,					cd_item_unico_w,
											ie_tipo_tabela_tiss_w,				ie_tipo_partic_tiss_w,				cd_servico_tiss_w) returning nr_sequencia into nr_seq_nota_servico_w;

							-- Inserir o item que faz parte da nota servico
							CALL pls_gerar_ptu_nota_serv_item(	nr_seq_nota_servico_w, 				r_c01_w.nr_seq_conta_pos_estab, 		r_c01_w.nr_seq_pos_proc,
											r_c01_w.nr_seq_pos_mat,				r_c02_w.nr_seq_conta, 				null,
											r_c02_w.nr_seq_conta_proc, 			r_c02_w.nr_seq_conta_mat,			nr_seq_proc_partic_w,
											r_c01_w.nr_seq_conta_pos_contab,		r_c01_w.nr_seq_pos_proc_fat,			r_c01_w.nr_seq_pos_mat_fat,
											vl_procedimento_w,				vl_filme_w,					vl_custo_operacional_w,
											vl_adic_procedimento_w,				vl_adic_filme_w,				vl_adic_custo_operacional_w,
											qt_procedimento_w, 				'1',						'14',
											nm_usuario_p,					r_c01_w.nr_seq_pos_estab_taxa,			r_c01_w.nr_seq_pos_taxa_contab,
											r_c02_w.nr_seq_pos_proc_partic,			r_c01_w.nr_seq_pos_proc_tx,			r_c01_w.nr_seq_pos_proc_tx_fat,
											r_c01_w.nr_seq_pos_mat_tx,			r_c01_w.nr_seq_pos_mat_tx_fat,			null);
						end if;
					else

						select	max(nr_sequencia)
						into STRICT	nr_seq_nota_servico_rrs_w
						from	ptu_nota_servico_rrs	a
						where	cd_servico		= cd_servico_w
						and	nr_nota			= nr_nota_w
						and	nr_seq_nota_cobr_rrs	= nr_seq_cobranca_rrs_p
						and	qt_cobrada	= (	SELECT max(b.qt_cobrada)
										from	ptu_nota_servico_rrs	b
										where	cd_servico		= cd_servico_w
										and	nr_nota			= nr_nota_w
										and	nr_seq_nota_cobr_rrs	= nr_seq_cobranca_rrs_p
										and	qt_cobrada	>= qt_serv_padrao_ptu_w);

						update	ptu_nota_servico_rrs
						set	vl_serv_cob		= dividir_sem_round(vl_serv_cob, qt_procedimento_w) * qt_serv_padrao_ptu_w,
							qt_cobrada		= qt_serv_padrao_ptu_w
						where	nr_sequencia		= nr_seq_nota_servico_rrs_w
						returning vl_serv_cob
						into	vl_proc_item_w;

						-- Atualizar o item que faz parte da nota servico
						CALL pls_gerar_ptu_nota_serv_item(	null,					r_c01_w.nr_seq_conta_pos_estab,		r_c01_w.nr_seq_pos_proc,
										r_c01_w.nr_seq_pos_mat,			r_c02_w.nr_seq_conta, 			null,
										r_c02_w.nr_seq_conta_proc,		r_c02_w.nr_seq_conta_mat,		nr_seq_proc_partic_w,
										r_c01_w.nr_seq_conta_pos_contab,	r_c01_w.nr_seq_pos_proc_fat,		r_c01_w.nr_seq_pos_mat_fat,
										vl_proc_item_w,				0, 					0,
										0, 					0, 					0,
										qt_procedimento_w,			'2', 					'15',
										nm_usuario_p, 				r_c01_w.nr_seq_pos_estab_taxa,		r_c01_w.nr_seq_pos_taxa_contab,
										r_c02_w.nr_seq_pos_proc_partic,		r_c01_w.nr_seq_pos_proc_tx,		r_c01_w.nr_seq_pos_proc_tx_fat,
										r_c01_w.nr_seq_pos_mat_tx,		r_c01_w.nr_seq_pos_mat_tx_fat,		nr_seq_nota_servico_rrs_w);

						select	vl_procedimento_w - coalesce(vl_serv_cob, 0),
							0,
							0,
							0,
							0,
							0,
							0
						into STRICT	vl_procedimento_w,
							vl_custo_operacional_w,
							vl_filme_w,
							vl_adic_procedimento_w,
							vl_adic_custo_operacional_w,
							vl_adic_filme_w,
							vl_liberado_w
						from	ptu_nota_servico_rrs
						where	nr_sequencia = nr_seq_nota_servico_rrs_w;

						qt_procedimento_w := qt_procedimento_w - qt_serv_padrao_ptu_w;

						SELECT * FROM ptu_obter_regra_pacote_ptu(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat, cd_servico_w, cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w, r_c02_w.nr_seq_pacote) INTO STRICT cd_pacote_ptu_w, nr_seq_regra_pacote_ptu_w;

						cd_ref_material_fab_w := ptu_somente_caracter_permitido(cd_ref_material_fab_w, 'ANS');

						if (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then
							cd_procedimento_w := null;
							ie_origem_proced_w := null;
						end if;

						-- apura o vl do reembolso
						vl_serv_cob_w 	:= 	coalesce(vl_procedimento_w,0) +
									coalesce(vl_filme_w,0) +
									coalesce(vl_custo_operacional_w,0) +
									coalesce(vl_adic_procedimento_w,0) +
									coalesce(vl_adic_filme_w,0) +
									coalesce(vl_adic_custo_operacional_w,0);

						vl_dif_vl_inter_w :=	vl_serv_cob_w - coalesce(vl_reemb_benef_w,0);

						if (vl_dif_vl_inter_w <= 0) then
							vl_dif_vl_inter_w := vl_serv_cob_w;
						end if;

						-- Pegar o tp_tabela para XML do material
						if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
							ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('M', ie_tipo_despesa_w, null, nr_seq_material_w );
						end if;

						-- Pegar o tp_tabela para XML do procedimento
						if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then
							ie_tipo_tabela_tiss_w	:= ptu_aviso_pck.gera_cd_tabela('P', ie_tipo_despesa_w, ie_origem_proced_w, null );
						end if;

						select  coalesce(max(ps.nr_seq_item),0)
						into STRICT	nr_seq_item_w
						from	ptu_nota_servico_rrs	ps,
							ptu_nota_cobranca_rrs	pc,
							ptu_fatura		pf
						where	ps.nr_seq_nota_cobr_rrs	= pc.nr_sequencia
						and	pf.nr_sequencia    	= pc.nr_seq_fatura
						and	pf.nr_sequencia    	= nr_seq_fatura_w;

						select	lpad(rownum + coalesce(nr_seq_item_w,0), 4, '0') nr_seq_item
						into STRICT	nr_seq_item_w
						;

						-- Gerar o sequencial do item e o item unico. XML jtrindade
						cd_item_unico_w	:= pls_obter_id_item_unico(r_c02_w.nr_seq_conta_proc, r_c02_w.nr_seq_conta_mat,dt_procedimento_w,pls_obter_unimed_estab(cd_estabelecimento_w),nr_seq_item_w);

						if (sg_cons_prof_prest_w IS NOT NULL AND sg_cons_prof_prest_w::text <> '') then
							select	coalesce(max(cd_ptu), sg_cons_prof_prest_w)
							into STRICT	sg_cons_prof_prest_w
							from	conselho_profissional
							where	sg_conselho = sg_cons_prof_prest_w;
						end if;

						-- Se for XML
						if (ie_versao_xml_w > 0) then

							-- Se for procedimento
							if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (coalesce(nr_seq_material_w::text, '') = '') then

								cd_servico_aux_w		:= cd_servico_w;

								cd_servico_tiss_w		:= ptu_conversao_item_tabela(ie_tipo_tabela_w,cd_servico_w,ie_origem_proced_w);
								ie_tipo_tabela_tiss_w		:= ptu_conversao_tipo_tabela(ie_tipo_tabela_w,cd_servico_w,'E',ie_origem_proced_w);

								ie_tipo_tabela_aux_w		:= null;
								ie_tipo_tabela_tiss_aux_w	:= null;

								-- busca a conversao
								select 	max(a.cd_proc_envio),
									max(a.ie_tipo_tabela_scs),
									coalesce(max(a.ie_servico_proprio),'N')
								into STRICT 	cd_servico_aux_w,
									ie_tipo_tabela_aux_w,
									ie_servico_proprio_w
								from 	pls_conversao_proc a
								where 	trunc(dt_procedimento_w) between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
								and 	a.cd_estabelecimento	= cd_estabelecimento_w
								and 	a.cd_procedimento	= cd_servico_aux_w
								and 	a.ie_origem_proced 	= ie_origem_proced_w
								and 	coalesce(a.ie_ptu, 'N') 	= 'S'
								and 	ie_envio_receb 		= 'E'
								and 	ie_situacao 		= 'A'
								and 	(cd_proc_envio IS NOT NULL AND cd_proc_envio::text <> '')
								and 	(ie_tipo_tabela_scs IS NOT NULL AND ie_tipo_tabela_scs::text <> '')
								and	((coalesce(ie_tipo_intercambio::text, '') = '') or (ie_tipo_intercambio = 'A') or (ie_tipo_intercambio	= ie_tipo_intercambio_w))
								and	((coalesce(nr_seq_prestador_partic::text, '') = '') or (nr_seq_prestador_partic = nr_seq_prestador_partic_w))
								and	((coalesce(nr_seq_contrato::text, '') = '') or (nr_seq_contrato =  nr_seq_contrato_w))
								and	((coalesce(nr_seq_congenere::text, '') = '') or (nr_seq_congenere = nr_seq_congenere_w))
								and	((coalesce(nr_seq_grau_partic::text, '') = '') or (nr_seq_grau_partic = nr_seq_grau_partic_w))
								and	((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento = r_c02_w.nr_seq_tipo_atendimento))
								and	((coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio = nr_seq_intercambio_w))
								and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_exec_w))
								and	((coalesce(nr_seq_grupo_contrato::text, '') = '') or (	(SELECT	count(1)
															from	table(pls_grupos_pck.obter_contrato_grupo(nr_seq_grupo_contrato, nr_seq_contrato_w, nr_seq_intercambio_w))) > 0));


								-- se tiver conversao de procedimento e de tipo de tabela
								if (cd_servico_aux_w IS NOT NULL AND cd_servico_aux_w::text <> '') and (ie_tipo_tabela_aux_w IS NOT NULL AND ie_tipo_tabela_aux_w::text <> '') then

									cd_servico_w		:= cd_servico_aux_w;
									cd_servico_tiss_w	:= cd_servico_aux_w;

									-- muda para o padrao TISS
									select  case ie_tipo_tabela_aux_w
										when 0 then '22'
										when 1 then '18'
										when 2 then '00'
										when 3 then '00'
										when 4 then '98'
										when 5 then '19'
										when 6 then '20'
										end
									into STRICT  	ie_tipo_tabela_tiss_aux_w
									;

									ie_tipo_tabela_tiss_w	:= ie_tipo_tabela_tiss_aux_w;
									
									if ie_servico_proprio_w = 'S' then
										ie_tipo_tabela_tiss_w := '00';
										cd_servico_tiss_w := ie_tipo_tabela_tiss_aux_w || lpad(cd_servico_aux_w,8,'0');
									end if;
								end if;
							end if;

							-- Se for material
							if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then

								if (ie_mat_a900_w = 'S' and (nr_seq_mat_unimed_w IS NOT NULL AND nr_seq_mat_unimed_w::text <> '')) then
									-- Pegar a codificacao do material
									select  coalesce(max(b.ie_codificacao),1),
										max(b.tp_tabela_tiss)
									into STRICT  	ie_codificacao_mat_w,
										ie_tipo_tabela_tiss_w
									from 	pls_material_unimed b
									where 	b.nr_sequencia  = nr_seq_mat_unimed_w;
								else
								-- Pegar a codificacao do material
									select  coalesce(max(b.ie_codificacao),1)
									into STRICT  	ie_codificacao_mat_w
									from  	pls_material  a,
										pls_material_unimed b
									where 	b.nr_sequencia  = a.nr_seq_material_unimed
									and 	a.nr_sequencia  = nr_seq_material_w;
								end if;
							
								-- se tiver conversao no pos-estabelecido
								if (r_c02_w.cd_item_convertido IS NOT NULL AND r_c02_w.cd_item_convertido::text <> '') then
								
									select	coalesce(max(b.ie_codificacao),1),
										max(b.tp_tabela_tiss)
									into STRICT  	ie_codificacao_mat_w,
										ie_tipo_tabela_tiss_w
									from 	pls_material_unimed b
									where	b.cd_material = r_c02_w.cd_item_convertido;
									
									cd_servico_w	:= r_c02_w.cd_item_convertido;
								
								end if;
								
								-- se for TNUMM
								if (ie_codificacao_mat_w = 1 ) then

									if ie_tipo_tabela_w in (2,5) then
										ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
									elsif ie_tipo_tabela_w in (3,6) then
										ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
									elsif ie_tipo_tabela_w = 1 then
										ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
									else
										ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
									end if;

									cd_servico_tiss_w := ie_tipo_tabela_tiss_w || lpad(cd_servico_w,8,'0');
									ie_tipo_tabela_tiss_w := '00';
									
									ie_tipo_tabela_mat_aux_w 	:= null;
									cd_mat_envio_aux_w		:= null;
									ds_mat_envio_aux_w		:= null;
									
									select 	max(pcm.ie_tipo_tabela),
										max(pcm.cd_material_envio),
										max(pcm.ds_material_envio)
									into STRICT	ie_tipo_tabela_mat_aux_w,
										cd_mat_envio_aux_w,
										ds_mat_envio_aux_w
									from 	pls_conversao_mat pcm
									where 	trunc(dt_procedimento_w) 	between pcm.dt_inicio_vigencia and coalesce(pcm.dt_fim_vigencia,clock_timestamp())
									and (cd_servico_w >= pcm.cd_material_orig_inicial	or coalesce(pcm.cd_material_orig_inicial::text, '') = '')
									and (cd_servico_w <= pcm.cd_material_orig_final	or coalesce(pcm.cd_material_orig_final::text, '') = '')
									and 	((pcm.ie_tipo_despesa_mat 	= ie_tipo_despesa_mat_w) or (coalesce(pcm.ie_tipo_despesa_mat::text, '') = ''))
									and  	((coalesce(pcm.nr_seq_contrato::text, '') = '') or (pcm.nr_seq_contrato 	=  nr_seq_contrato_w))
									and  	((coalesce(pcm.nr_seq_ops_congenere::text, '') = '') or (pcm.nr_seq_ops_congenere 	= nr_seq_congenere_w))
									and 	pcm.ie_envio_receb 	= 'E';
									
									-- se houver alguma conversao 
									if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') or (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') ( (ds_mat_envio_aux_w) IS NOT NULL AND (ds_mat_envio_aux_w)::text <> '') then
										
										--- se o tipo de tabela foi convertido
										if (ie_tipo_tabela_mat_aux_w IS NOT NULL AND ie_tipo_tabela_mat_aux_w::text <> '') then
											if 	ie_tipo_tabela_mat_aux_w in (2,5) then
												ie_tipo_tabela_tiss_w	:= '19'; -- Materiais
											
											elsif 	ie_tipo_tabela_mat_aux_w in (3,6) then
												ie_tipo_tabela_tiss_w	:= '20'; -- Medicamentos
											
											elsif 	ie_tipo_tabela_mat_aux_w = 4 then
												ie_tipo_tabela_tiss_w	:= '98'; -- Pcaotes
											
											elsif 	ie_tipo_tabela_mat_aux_w = 1 then
												ie_tipo_tabela_tiss_w	:= '18'; -- Taxas
											
											elsif 	ie_tipo_tabela_mat_aux_w = 0 then
												ie_tipo_tabela_tiss_w	:= '22'; -- Rol de procedimentos Unimed
											
											else
												ie_tipo_tabela_tiss_w	:= '00'; -- Tabela propria das Operadoras
											end if;								
											
											cd_servico_tiss_w := lpad(cd_servico_w,8,'0');
											
										end if;
										-- se o material de envio for convertido
										if (cd_mat_envio_aux_w IS NOT NULL AND cd_mat_envio_aux_w::text <> '') then
											cd_servico_tiss_w := lpad(cd_mat_envio_aux_w,8,'0');
										end if;
										
										-- se a descricao do material for convertido
										if (ds_mat_envio_aux_w IS NOT NULL AND ds_mat_envio_aux_w::text <> '') then
											ds_servico_w := trim(both substr(ds_mat_envio_aux_w,1,80));
										end if;

									end if;								
									
								else
									cd_servico_tiss_w := cd_servico_w;

								end if;
							end if;
						end if;

						insert into	ptu_nota_servico_rrs(	nr_sequencia,				dt_atualizacao_nrec,		nm_usuario_nrec,
											dt_atualizacao,				nm_usuario,			cd_procedimento,
											cd_servico,				ds_servico,			dt_servico,
											ie_origem_proced,			nm_profissional,		nr_autoriz,
											nr_cons_prof,				nr_lote,			nr_nota,
											nr_nota_numerico,			nr_seq_a500,			nr_seq_conta_mat,
											nr_seq_conta_proc,			nr_seq_nota_cobr_rrs,		nr_seq_proc_partic,
											qt_cobrada,				sg_cons_prof,			sg_uf_cons_prof,
											tp_particip,				tp_tabela,			vl_dif_vl_inter,
											vl_serv_cob,				nr_seq_material,		vl_pago_benef,
											nr_seq_item,				cd_item_unico,			ie_tipo_tabela_tiss,
											ie_tipo_participacao_tiss,		cd_servico_tiss)
						values (				nextval('ptu_nota_servico_rrs_seq'),	clock_timestamp(),			nm_usuario_p,
											clock_timestamp(),				nm_usuario_p,			cd_procedimento_w,
											cd_servico_w,				ds_servico_w,			dt_procedimento_w,
											ie_origem_proced_w,			nm_profissional_prestador_w,	cd_senha_w,
											nr_cons_prof_prest_w,			nr_lote_w,			nr_nota_w,
											nr_nota_numerico_w,			null,				r_c02_w.nr_seq_conta_mat,
											r_c02_w.nr_seq_conta_proc,		nr_seq_cobranca_rrs_p,		nr_seq_proc_partic_w,
											qt_procedimento_w,			sg_cons_prof_prest_w,		coalesce(sg_uf_cons_prest_w,sg_estado_w),
											ie_tipo_participacao_w,			ie_tipo_tabela_w,		vl_dif_vl_inter_w,
											vl_serv_cob_w,				nr_seq_material_w,		vl_pago_benef_w,
											nr_seq_item_w,				cd_item_unico_w,		ie_tipo_tabela_tiss_w,
											ie_tipo_partic_tiss_w,			cd_servico_tiss_w) returning nr_sequencia into nr_seq_nota_servico_rrs_w;

						-- Inserir o item que faz parte da nota servico
						CALL pls_gerar_ptu_nota_serv_item(	null,		 				r_c01_w.nr_seq_conta_pos_estab, 		r_c01_w.nr_seq_pos_proc,
										r_c01_w.nr_seq_pos_mat,				r_c02_w.nr_seq_conta, 				null,
										r_c02_w.nr_seq_conta_proc, 			r_c02_w.nr_seq_conta_mat,			nr_seq_proc_partic_w,
										r_c01_w.nr_seq_conta_pos_contab,		r_c01_w.nr_seq_pos_proc_fat,			r_c01_w.nr_seq_pos_mat_fat,
										vl_procedimento_w,				vl_filme_w,					vl_custo_operacional_w,
										vl_adic_procedimento_w,				vl_adic_filme_w,				vl_adic_custo_operacional_w,
										qt_procedimento_w,				'1',						'16',
										nm_usuario_p,					r_c01_w.nr_seq_pos_estab_taxa,			r_c01_w.nr_seq_pos_taxa_contab,
										r_c02_w.nr_seq_pos_proc_partic,			r_c01_w.nr_seq_pos_proc_tx,			r_c01_w.nr_seq_pos_proc_tx_fat,
										r_c01_w.nr_seq_pos_mat_tx,			r_c01_w.nr_seq_pos_mat_tx_fat,			nr_seq_nota_servico_rrs_w);
					end if; -- fim controle reembolso
				end loop;
			end if;

			nr_seq_nota_servico_w := null;
			nr_seq_nota_servico_rrs_w := null;

			-- Pegar o tipo do documento da fatura, para validar se e nota reapresentacao
			select	tp_documento_1
			into STRICT	tp_documento_1_w
			from	ptu_fatura
			where	nr_sequencia = nr_seq_fatura_w;

			-- Se for nota de reapresentacao precisa trazer a senha externa OS - 1905215 Jtrindade
			if (tp_documento_1_w = 4) then

				update	ptu_nota_servico
				set	nr_autorizacao		= cd_senha_externa_w
				where	nr_seq_nota_cobr	= nr_seq_cobranca_p;
			end if;
			
			-- Alterar a data da alta e internacao na nota hospitalar e nota cobranca caso o agrupamento seja por atendimento
			if (ie_agrupar_atendimento_w = 'S') then
				select	min(dt_entrada) dt_entrada,
					max(dt_alta) dt_alta
				into STRICT	dt_internacao_w,
					dt_alta_conta_w
				from	pls_conta
				where	ie_tipo_guia	= '5'
				and	ie_status	!= 'C'
				and	cd_guia_ok	= r_c02_w.cd_guia_ok
				and	nr_seq_segurado	= r_c02_w.nr_seq_segurado
				and	nr_sequencia in (SELECT	nr_seq_conta
							from	ptu_nota_cobranca_item_v
							where	nr_seq_nota_cobr	= nr_seq_cobranca_p);

				if (coalesce(dt_internacao_w::text, '') = '') then
					-- alterar a data da alta e internacao na nota hospitalar e nota cobranca, caso tenha mais de uma conta agrupada na mesma nota cobranca - OS2195441 Jtrindade
					select	min(dt_entrada) dt_entrada
					into STRICT	dt_internacao_w
					from	pls_conta
					where	nr_sequencia = r_c02_w.nr_seq_conta;
				end if;

				-- update na data de internacao
				update	ptu_nota_hospitalar c
				set	c.dt_internacao = dt_internacao_w
				where	c.nr_seq_nota_cobr = nr_seq_cobranca_p
				and	dt_internacao_w < c.dt_internacao;

				-- update na data de internacao
				update	ptu_nota_cobranca c
				set	c.dt_internacao = dt_internacao_w
				where	c.nr_sequencia = nr_seq_cobranca_p
				and	dt_internacao_w < c.dt_internacao;

				if (coalesce(dt_alta_conta_w::text, '') = '') then
					-- alterar a data da alta e internacao na nota hospitalar e nota cobranca, caso tenha mais de uma conta agrupada na mesma nota cobranca - OS2195441 Jtrindade
					select	max(dt_alta) dt_alta
					into STRICT	dt_alta_conta_w
					from	pls_conta
					where	nr_sequencia = r_c02_w.nr_seq_conta;
				end if;

				-- update na data da alta
				update	ptu_nota_hospitalar c
				set	c.dt_alta = dt_alta_conta_w
				where	c.nr_seq_nota_cobr = nr_seq_cobranca_p
				and	dt_alta_conta_w > c.dt_alta;

				-- update na data da alta
				update	ptu_nota_cobranca c
				set	c.dt_alta = dt_alta_conta_w
				where	c.nr_sequencia = nr_seq_cobranca_p
				and	dt_alta_conta_w > c.dt_alta;
			end if;

			-- Caso tenha mais de um procedimento com a mesma quantidade e mesma hora, ele altera a hora do maior procedimento - jtrindade OS - 1915591
			for r_c04_w in c04 loop
				update	ptu_nota_servico pns
				set	pns.hr_final   			= r_c04_w.nova_maior_hora,
					pns.ds_hora_procedimento	= r_c04_w.nova_maior_hora
				where	pns.nr_seq_nota_cobr		= r_c04_w.nr_seq_nota_cobr
				and	pns.nr_sequencia		= r_c04_w.max_seq;
			end loop;
		end loop;
	end loop;
end if;

-- Ressarcimento ao SUS
for r_c00_w in c00( nr_seq_fatura_conta_p ) loop

	cd_procedimento_w	:= r_c00_w.cd_procedimento;
	ie_origem_proced_w	:= r_c00_w.ie_origem_proced;
	dt_procedimento_w	:= r_c00_w.dt_internacao;
	qt_procedimento_w	:= r_c00_w.qt_procedimento;
	vl_serv_cob_w		:= r_c00_w.vl_item;


	-- obter a data de referencia do ptu 11.3
	select	coalesce(max(dt_ref_ptu_11_3),to_date('01/10/2020','dd/mm/yyyy'))
	into STRICT 	dt_ref_ptu_11_3_w
	from	pls_visible_false
	where	cd_estabelecimento = r_c00_w.cd_estabelecimento;

	ds_servico_w		:= substr(Obter_Descricao_Procedimento(cd_procedimento_w, ie_origem_proced_w ),1,80);

	select	max(a.nr_nota),
		max(a.nr_lote)
	into STRICT	nr_nota_w,
		nr_lote_w
	from	ptu_nota_cobranca_rrs	a
	where	a.nr_sequencia	= nr_seq_cobranca_rrs_p;

	insert into ptu_nota_servico_rrs(	nr_sequencia,				dt_atualizacao_nrec,		nm_usuario_nrec,
						dt_atualizacao,				nm_usuario,			cd_procedimento,
						cd_servico,				ds_servico,			dt_servico,
						ie_origem_proced,			nm_profissional,		nr_autoriz,
						nr_cons_prof,				nr_lote,			nr_nota,
						nr_nota_numerico,			nr_seq_a500,			nr_seq_conta_mat,
						nr_seq_conta_proc,			nr_seq_nota_cobr_rrs,		nr_seq_proc_partic,
						qt_cobrada,				sg_cons_prof,			sg_uf_cons_prof,
						tp_particip,				tp_tabela,			vl_dif_vl_inter,
						vl_serv_cob,				nr_seq_material,		vl_pago_benef)
	values (				nextval('ptu_nota_servico_rrs_seq'),	clock_timestamp(),			nm_usuario_p,
						clock_timestamp(),				nm_usuario_p,			cd_procedimento_w,
						cd_procedimento_w,			ds_servico_w,			dt_procedimento_w,
						ie_origem_proced_w,			null,				0000000000,
						null,					nr_lote_w,			nr_nota_w,
						null,					null,				null,
						null,					nr_seq_cobranca_rrs_p,		null,
						qt_procedimento_w,			null,				null,
						null,					0,				0,
						vl_serv_cob_w,				null,				null);
end loop;

if (cd_excecao_w in ('L', 'C', 'O')) then
	select	count(1)
	into STRICT	qt_senha_autoriz_w
	from	ptu_nota_servico
	where	nr_seq_nota_cobr = nr_seq_cobranca_p
	and	(nr_autorizacao IS NOT NULL AND nr_autorizacao::text <> '');

	if (qt_senha_autoriz_w = 0) then
		update	ptu_nota_servico
		set	nr_autorizacao     = 0
		where	nr_seq_nota_cobr   = nr_seq_cobranca_p;
	end if;
end if;

--  Se tiv item que vai utilizar a Data de atendimento que foi informada na cobranca
update  ptu_nota_servico
set  dt_procedimento    = coalesce((SELECT max(dt_atendimento) from ptu_nota_cobranca where nr_sequencia = nr_seq_cobranca_p), dt_procedimento)
where  ie_tipo_data_regra  = 'DA'
and  nr_seq_nota_cobr  = nr_seq_cobranca_p;

-- Caso tenha mais de um procedimento com a mesma quantidade e mesma hora, ele altera a hora do maior procedimento - jtrindade OS - 1915591
for r_c04_w in c04 loop
	update	ptu_nota_servico pns
	set	pns.hr_final   			= r_c04_w.nova_maior_hora,
		pns.ds_hora_procedimento	= r_c04_w.nova_maior_hora
	where	pns.nr_seq_nota_cobr		= r_c04_w.nr_seq_nota_cobr
	and	pns.nr_sequencia		= r_c04_w.max_seq;
end loop;

for r_c99_w in c99( nr_seq_cobranca_p ) loop
	if (r_c99_w.nr_seq_servico IS NOT NULL AND r_c99_w.nr_seq_servico::text <> '') and (r_c99_w.nr_seq_servico_zero IS NOT NULL AND r_c99_w.nr_seq_servico_zero::text <> '') then
		update  ptu_nota_servico
		set	vl_procedimento	= 0.01
		where	nr_sequencia	= r_c99_w.nr_seq_servico_zero;

		update  ptu_nota_servico
		set	vl_adic_procedimento	= vl_adic_procedimento - 0.01
		where	nr_sequencia		= r_c99_w.nr_seq_servico;
	end if;
end loop;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ptu_nota_servico (( nr_seq_pls_fatura_p pls_fatura_evento.nr_seq_fatura%type, nr_seq_fatura_conta_p pls_fatura_conta.nr_sequencia%type, nr_seq_cobranca_p ptu_nota_cobranca.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_interface_p interface.cd_interface%type, nr_seq_cobranca_rrs_p ptu_nota_cobranca_rrs.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type default null, nr_seq_conta_sus_p pls_processo_conta.nr_sequencia%type default null) is  ie_versao_w bigint) FROM PUBLIC;

